[
  {
    "start": "0",
    "end": "172000"
  },
  {
    "text": "hello everyone um I'm madhu CS I'm a software engineer at Robinhood we are a financial services",
    "start": "1920",
    "end": "9120"
  },
  {
    "text": "company and I'm a tech lead for this team or our called as container orchestration which is responsible for",
    "start": "9120",
    "end": "16039"
  },
  {
    "text": "running all of compute at Robinhood and Robin Hood has chosen kubernetes as the",
    "start": "16039",
    "end": "23100"
  },
  {
    "text": "compute platform of choice so pretty much all of our compute except for some Legacy stuff is all on kubernetes",
    "start": "23100",
    "end": "31140"
  },
  {
    "text": "um today I will be talking about controllers and how we push the limits",
    "start": "31140",
    "end": "37380"
  },
  {
    "text": "of the controllers uh these are production War Stories uh but before I get into the details of the agenda I",
    "start": "37380",
    "end": "43140"
  },
  {
    "text": "want to say this um I've prepared or we have prepared the stock to be a talk for people at all",
    "start": "43140",
    "end": "49980"
  },
  {
    "text": "levels um everybody is welcome but that said if",
    "start": "49980",
    "end": "55559"
  },
  {
    "text": "you are an experienced cluster operator here um you might still some of the overview",
    "start": "55559",
    "end": "62219"
  },
  {
    "text": "Concepts here might be a reputation for you but we really hope that you can take some of these things home as an",
    "start": "62219",
    "end": "68400"
  },
  {
    "text": "inspiration or to your company back as an inspiration and pay a little bit more closer attention to some of these areas",
    "start": "68400",
    "end": "75119"
  },
  {
    "text": "or um maybe do uh I mean revisit some of these Concepts and see what is working",
    "start": "75119",
    "end": "82140"
  },
  {
    "text": "and what is not if you are a beginner there is definitely an overview in the",
    "start": "82140",
    "end": "87180"
  },
  {
    "text": "beginning but some of these specifics may go over her head but that's okay",
    "start": "87180",
    "end": "92460"
  },
  {
    "text": "um you don't have to take everything here but we still feel or hope that it",
    "start": "92460",
    "end": "98220"
  },
  {
    "text": "will give you a solid grounding uh to the concept so that when you're ready to write your own controllers",
    "start": "98220",
    "end": "104880"
  },
  {
    "text": "um you you can use all these lessons or learnings and hopefully it will it'll",
    "start": "104880",
    "end": "110579"
  },
  {
    "text": "let open the hood a little bit and show the Machinery inside so that you know how exactly these things work",
    "start": "110579",
    "end": "118079"
  },
  {
    "text": "um and coming back to the topic itself um nothing kubernetes controller pattern",
    "start": "118079",
    "end": "124140"
  },
  {
    "text": "is a highly scalable pattern right we have seen how kubernetes scales but",
    "start": "124140",
    "end": "129420"
  },
  {
    "text": "nothing is infinitely scalable not even slash never slash null right um so we I'll talk about how we have pushed",
    "start": "129420",
    "end": "138900"
  },
  {
    "text": "the limits of this pattern and the incidents or outages that we ran into when we try to do that the lessons we",
    "start": "138900",
    "end": "145739"
  },
  {
    "text": "have learned from it and um what we are do how how we solve those",
    "start": "145739",
    "end": "150780"
  },
  {
    "text": "problems and the ongoing work right now to ensure that we don't we don't run",
    "start": "150780",
    "end": "156420"
  },
  {
    "text": "into these limits again and again so we'll begin with a quick overview of overview of controllers and then we'll do two case studies that's where I'll be",
    "start": "156420",
    "end": "162959"
  },
  {
    "text": "spending most of my time on case studies about where we went too far or when we",
    "start": "162959",
    "end": "168780"
  },
  {
    "text": "hit the limits of the patterns and we'll talk about the best practices or Lessons Learned so this is the overview right",
    "start": "168780",
    "end": "174959"
  },
  {
    "start": "172000",
    "end": "172000"
  },
  {
    "text": "um kubernetes philosophy is you the user of",
    "start": "174959",
    "end": "180660"
  },
  {
    "text": "kubernetes submits a declarative intent as in they submit the intent of what",
    "start": "180660",
    "end": "188040"
  },
  {
    "text": "they want the world to look like which is called as the desired State and then",
    "start": "188040",
    "end": "193140"
  },
  {
    "text": "there are controllers reading this intent and taking action to bring the",
    "start": "193140",
    "end": "199080"
  },
  {
    "text": "current state of the world to the declared state of the world the controllers are constantly observing",
    "start": "199080",
    "end": "205019"
  },
  {
    "text": "both states of the world the Absurd state of the world as it is in the intent store which is the epis",
    "start": "205019",
    "end": "210440"
  },
  {
    "text": "and then it's also observing the current state and it's always always trying to",
    "start": "210440",
    "end": "215459"
  },
  {
    "text": "bring the current state of the world to the desired state of the world I think the key concept here to remember is it's",
    "start": "215459",
    "end": "222060"
  },
  {
    "text": "always in that direction the current state is always brought to match the",
    "start": "222060",
    "end": "227099"
  },
  {
    "text": "desired State not the other way around if the desired State changes controller does its work to bring the current state",
    "start": "227099",
    "end": "234599"
  },
  {
    "text": "to the newer desired state or if the current state changes for some reason because somebody went and did something manually in the infrastructure it again",
    "start": "234599",
    "end": "242040"
  },
  {
    "text": "tries to bring the current state to match the desired State uh this is the key concept and this is this is the",
    "start": "242040",
    "end": "248640"
  },
  {
    "text": "philosophy on which everything in kubernetes is built there is some documentation as in there is official",
    "start": "248640",
    "end": "255180"
  },
  {
    "text": "documentation around the concepts of controller if you go look at the documentation one of the interesting",
    "start": "255180",
    "end": "260400"
  },
  {
    "text": "examples that it talks about the classic example is the example of a thermostat in the physical world right if you set",
    "start": "260400",
    "end": "266400"
  },
  {
    "text": "the temperature of your thermostat to 70 degree Fahrenheit Fahrenheit is constantly watching for or observing the",
    "start": "266400",
    "end": "272880"
  },
  {
    "text": "temperature of the room it does not immediately make the temperature 75 degree Fahrenheit in the room but it's",
    "start": "272880",
    "end": "278940"
  },
  {
    "text": "observing the temperature of the room and every time it's not 70 degree Fahrenheit it either turns on the heater",
    "start": "278940",
    "end": "286740"
  },
  {
    "text": "to emit Heat or the AC to cool down the room to bring the room temperature to 70 degree Fahrenheit there is more about",
    "start": "286740",
    "end": "293040"
  },
  {
    "text": "this analogy in the documentation you can check out the the slide deck is shared so you should have the link but",
    "start": "293040",
    "end": "298620"
  },
  {
    "text": "bringing this to kubernetes world and to be more specific cubelet although not a not called a",
    "start": "298620",
    "end": "305340"
  },
  {
    "text": "controller the agent that run on the agents that run on kubernetes nodes are",
    "start": "305340",
    "end": "311699"
  },
  {
    "text": "controllers too although they are node agents they are controllers too they watch the API server which is the intent",
    "start": "311699",
    "end": "316979"
  },
  {
    "text": "store to see if the cube let's have to run new pods and if any parts get",
    "start": "316979",
    "end": "323460"
  },
  {
    "text": "assigned to the node um those and those parts aren't running on you know the cubelet's job is to",
    "start": "323460",
    "end": "330000"
  },
  {
    "text": "instruct the local container runtime on the Node to start those new parts so cubelet circuit or controllers too with",
    "start": "330000",
    "end": "338160"
  },
  {
    "start": "338000",
    "end": "338000"
  },
  {
    "text": "that we'll talk a little bit about the specifics of the implementation of a controller this talks about the",
    "start": "338160",
    "end": "343800"
  },
  {
    "text": "semantics of the controller so far we talked about the semantics of the API we'll talk about this semantics of the controller this is the actual Machinery",
    "start": "343800",
    "end": "350340"
  },
  {
    "text": "that we use today for writing controllers right if you go look at go client go which is the client Library",
    "start": "350340",
    "end": "355860"
  },
  {
    "text": "that's used for writing controllers you may be using higher level libraries as well like controller and timer Q Builder",
    "start": "355860",
    "end": "361919"
  },
  {
    "text": "but overall they all depend on this Machinery where when the controller starts up",
    "start": "361919",
    "end": "367800"
  },
  {
    "text": "it contacts the intent store or the API server to get",
    "start": "367800",
    "end": "373860"
  },
  {
    "text": "the current desired state of the world as in it tries to get the entire snapshot of the",
    "start": "373860",
    "end": "380940"
  },
  {
    "text": "desired state of the world when it starts up to make sure that it knows",
    "start": "380940",
    "end": "386039"
  },
  {
    "text": "what the current desired state is and this operation is a very expensive",
    "start": "386039",
    "end": "391259"
  },
  {
    "text": "operation because when it does this list it requires or it asks for the snapshot",
    "start": "391259",
    "end": "398280"
  },
  {
    "text": "of the entire desired state of the world for all the resources it is interested",
    "start": "398280",
    "end": "403560"
  },
  {
    "text": "in um the key here and this goes into where we push the limit so I want the one",
    "start": "403560",
    "end": "409680"
  },
  {
    "text": "thing that I want all of you to remember is this listing operation is a very expensive operation",
    "start": "409680",
    "end": "415740"
  },
  {
    "text": "um so what controller does is well it can continue listing once in a",
    "start": "415740",
    "end": "421080"
  },
  {
    "text": "while periodically pull the API server or the intent store and keep getting the desired state of the world but we have",
    "start": "421080",
    "end": "427199"
  },
  {
    "text": "established that it's already an expensive operation right so you don't want to be doing often so the Machinery",
    "start": "427199",
    "end": "433139"
  },
  {
    "text": "lets you use this API called as the watch API where the controllers can say",
    "start": "433139",
    "end": "438539"
  },
  {
    "text": "I now have the entire snapshot of the state of the world or the desired state of the world and from now on start",
    "start": "438539",
    "end": "444840"
  },
  {
    "text": "giving me only the changes for the desired state of the world which happens",
    "start": "444840",
    "end": "450419"
  },
  {
    "text": "let me use my Mouse pointer here give me a sec so um APS I mean controller says I have",
    "start": "450419",
    "end": "458699"
  },
  {
    "text": "listed give from now on give me watch events which is the changes to the objects that I'm interested in or the",
    "start": "458699",
    "end": "464639"
  },
  {
    "text": "resources I'm interested in but that's not it right if it were only this this Pro for today's computers it's not a big",
    "start": "464639",
    "end": "471180"
  },
  {
    "text": "deal we are replicating data here um it's not really expensive",
    "start": "471180",
    "end": "477300"
  },
  {
    "text": "um but that said controllers also have to do some additional work right as in",
    "start": "477300",
    "end": "482940"
  },
  {
    "text": "they are not just replicating or duplicating data or listing data from the API server they do some real work",
    "start": "482940",
    "end": "489000"
  },
  {
    "text": "for the change events or for the resources and then update the status back",
    "start": "489000",
    "end": "494039"
  },
  {
    "text": "um and the order of magnitude of resources every controller watches for is also very different",
    "start": "494039",
    "end": "501479"
  },
  {
    "text": "um there are some apis or controllers where there are only order of hundreds of resources if you're talking about",
    "start": "501479",
    "end": "507660"
  },
  {
    "text": "something like crds or something the crd control is only watching for hundreds of resources there can be thousands of",
    "start": "507660",
    "end": "514140"
  },
  {
    "text": "resources or if you talking about things like pods there can be half a million Parts within a cluster because that's",
    "start": "514140",
    "end": "520500"
  },
  {
    "text": "the scalability limit of kubernetes in large clusters today right so if you are getting tens of thousands or hundreds of",
    "start": "520500",
    "end": "527040"
  },
  {
    "text": "thousands of parts and then doing some work on those parts it gets really expensive if you keep pulling all the",
    "start": "527040",
    "end": "533940"
  },
  {
    "text": "time and going through all the polls all the time even though if they haven't changed so that's why we need this",
    "start": "533940",
    "end": "539399"
  },
  {
    "text": "complex Machinery of listing and Then followed by watches one other important",
    "start": "539399",
    "end": "545040"
  },
  {
    "text": "thing to remember is kubernetes API Machinery does this or the client API",
    "start": "545040",
    "end": "550080"
  },
  {
    "text": "missionary does this so well that after it gets the snapshot it can",
    "start": "550080",
    "end": "555660"
  },
  {
    "text": "clearly instruct the API server to send all the events since that snapshot the",
    "start": "555660",
    "end": "562320"
  },
  {
    "text": "consistency is maintained in the sense that you are guaranteed or the controller is guaranteed to not miss any",
    "start": "562320",
    "end": "569399"
  },
  {
    "text": "of the changes that happens to the resources since the list response was sent out so these are the key Concepts",
    "start": "569399",
    "end": "576540"
  },
  {
    "start": "575000",
    "end": "575000"
  },
  {
    "text": "and here is a hilarious example that we have come across right oh one other thing that I did not introduce to was",
    "start": "576540",
    "end": "582060"
  },
  {
    "text": "um kubernetes also has this concept of crd custom resource definitions that which is the key or the core foundation",
    "start": "582060",
    "end": "588540"
  },
  {
    "text": "of the kubernetes extensibility model it lets you the user of kubernetes to",
    "start": "588540",
    "end": "594720"
  },
  {
    "text": "extend the kubernetes the way you want to extend it you can Define your own apis as a schema and you can have your",
    "start": "594720",
    "end": "602279"
  },
  {
    "text": "users use those schemas or apis for getting something done and in this",
    "start": "602279",
    "end": "607680"
  },
  {
    "text": "hilarious example um oh actually even before I get there I'm sorry um you can you can Define your",
    "start": "607680",
    "end": "613440"
  },
  {
    "text": "own schemas and then you can write your own controller because schemas themselves as we have seen don't do",
    "start": "613440",
    "end": "619740"
  },
  {
    "text": "anything right they just get stored as an API resources just get stored in the intent store you need a controller to",
    "start": "619740",
    "end": "626040"
  },
  {
    "text": "take some action or do something on top of those apis so kubernetes allows you to write those controllers as you want",
    "start": "626040",
    "end": "632580"
  },
  {
    "text": "and the interesting thing about kubernetes is it doesn't let you write your controller against just your own",
    "start": "632580",
    "end": "639180"
  },
  {
    "text": "crds or apis it lets you write controllers against existing native apis as well and you can write controllers",
    "start": "639180",
    "end": "646560"
  },
  {
    "text": "that cross the boundaries between your custom resource or custom apis and the native apis and that leads to an",
    "start": "646560",
    "end": "653820"
  },
  {
    "text": "extremely powerful pattern so coming back to this hilarious example there is a this is a real GitHub project by the",
    "start": "653820",
    "end": "660060"
  },
  {
    "text": "way you can follow the link there is this pizza controller there are two crds here pizza store crd and pizza order crd",
    "start": "660060",
    "end": "667380"
  },
  {
    "text": "um I don't think anybody's opening app is a store here so I'm not going to talk about it but we're all interested in eating pizza generate so there is a",
    "start": "667380",
    "end": "673320"
  },
  {
    "text": "pizza order crd what it does is if you're interested in eating a pizza if you want a pizza you can go submit a",
    "start": "673320",
    "end": "679560"
  },
  {
    "text": "pizza order resource to the API server where the crd exists and the controller",
    "start": "679560",
    "end": "684959"
  },
  {
    "text": "makes the call to Domino's API to order a pizza but unfortunately that's all it can do today it can't tell you whether",
    "start": "684959",
    "end": "691019"
  },
  {
    "text": "you're full or not or if you are satisfied with the pizza we constantly keep hearing from the authors that that's coming in V2 but let's see when",
    "start": "691019",
    "end": "697140"
  },
  {
    "text": "we do happens but this talks about both crds and controllers and taking this",
    "start": "697140",
    "end": "702300"
  },
  {
    "text": "example little bit little bit further you could consider of writing your own controller that watches for new service",
    "start": "702300",
    "end": "708779"
  },
  {
    "text": "accounts that get created in your kubernetes cluster and order a complimentary visa for every new person",
    "start": "708779",
    "end": "715980"
  },
  {
    "text": "who comes into the cluster that's the extensibility power here with all this",
    "start": "715980",
    "end": "721019"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "introduction let's dive into one of our first case studies um the title here is a little clickbaity",
    "start": "721019",
    "end": "727500"
  },
  {
    "text": "I would say but hopefully it makes sense towards the end of this whole case study",
    "start": "727500",
    "end": "732779"
  },
  {
    "text": "um so I was on call a few months ago and I got a bunch of alerts and people",
    "start": "732779",
    "end": "738660"
  },
  {
    "text": "started complaining that Quran jobs could no longer resolve DNS",
    "start": "738660",
    "end": "743700"
  },
  {
    "text": "that was interesting because anybody has worked in infrastructure recognizes this sort of a page right or an alert right",
    "start": "743700",
    "end": "749519"
  },
  {
    "text": "what is it about KRON jobs and DNS like why would DNS resolutions fail for cron",
    "start": "749519",
    "end": "755459"
  },
  {
    "text": "jobs well the real answer is it does not make any sense there is no correlation like",
    "start": "755459",
    "end": "761279"
  },
  {
    "text": "if you are experienced not experienced it really does not make sense so we",
    "start": "761279",
    "end": "766740"
  },
  {
    "start": "764000",
    "end": "764000"
  },
  {
    "text": "started digging deeper uh I gathered around an incident response team we started hearing from more and more",
    "start": "766740",
    "end": "773100"
  },
  {
    "text": "application developers back-end service developers that they were seeing this and we quickly discovered why it was",
    "start": "773100",
    "end": "779880"
  },
  {
    "text": "cron jobs the thing was it was not not just cron jobs any new pod or any new workload",
    "start": "779880",
    "end": "787380"
  },
  {
    "text": "that came up had this problem and the actual problem was not even just DNS any",
    "start": "787380",
    "end": "794639"
  },
  {
    "text": "new part that came up would have a total Network blackout for a few minutes and",
    "start": "794639",
    "end": "800220"
  },
  {
    "text": "then it would resolve itself uh it was anywhere between two to ten minutes and",
    "start": "800220",
    "end": "806220"
  },
  {
    "text": "no packets would go no pack I mean packets would actually go out but they would not come back and The Return part",
    "start": "806220",
    "end": "812160"
  },
  {
    "text": "wasn't working and the problem was the blackout time was typically longer than the Readiness",
    "start": "812160",
    "end": "819779"
  },
  {
    "text": "probes for most of these pulse the pause so pause would constantly die or the containers would constantly die and come",
    "start": "819779",
    "end": "826079"
  },
  {
    "text": "back up and they would see the problem again and this would happen over and over and over fortunately for us running pulse",
    "start": "826079",
    "end": "832980"
  },
  {
    "text": "continue to work this is the key thing or the core tenant of kubernetes container orchestration design even if",
    "start": "832980",
    "end": "839160"
  },
  {
    "text": "there is a problem with your control plane the programming of PODS and everything the data plan is supposed to continue to work right so the data plane",
    "start": "839160",
    "end": "846000"
  },
  {
    "text": "was held the existing parts continue to work we just couldn't do scaling operations or deploy new version of the",
    "start": "846000",
    "end": "852360"
  },
  {
    "text": "software think things like that so fortunately we did not have any customer impact with that I want to take a slight detour",
    "start": "852360",
    "end": "860459"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "to introduce you to the networking stack that we run so that you can understand what happened here better so we are a",
    "start": "860459",
    "end": "867480"
  },
  {
    "text": "full AWS shop and we started our kubernetes journey about",
    "start": "867480",
    "end": "872820"
  },
  {
    "text": "four years ago or a little longer than four years ago and we have been migrating all the services from raw ec2",
    "start": "872820",
    "end": "880740"
  },
  {
    "text": "VMS to our self-managed kubernetes clusters um but we have we migrations or",
    "start": "880740",
    "end": "889019"
  },
  {
    "text": "migrations are multi-year efforts right so we we knew that we had to live in this world dual world where there was",
    "start": "889019",
    "end": "895620"
  },
  {
    "text": "there were workloads on kubernetes and then there will be workloads in ec2",
    "start": "895620",
    "end": "901740"
  },
  {
    "text": "um at the moment we have migrated pretty much all our stateless workloads onto kubernetes and there are only a few",
    "start": "901740",
    "end": "908399"
  },
  {
    "text": "stateful workloads on ec2 but we still continue to live in this world so the",
    "start": "908399",
    "end": "913860"
  },
  {
    "text": "solution that we have built I mean in the AWS world if you want to do authentication or authorization the",
    "start": "913860",
    "end": "920100"
  },
  {
    "text": "easiest way to do especially in the Raw ec2 world is to use AWS security groups right",
    "start": "920100",
    "end": "925860"
  },
  {
    "text": "um security groups is essentially a network segmentation as a proxy for your",
    "start": "925860",
    "end": "930899"
  },
  {
    "text": "authentication and authorization you know it's a permanent solution but that's what we have so we wanted to",
    "start": "930899",
    "end": "936600"
  },
  {
    "text": "retain that for our kubernetes workloads too so what we built is we built this",
    "start": "936600",
    "end": "941820"
  },
  {
    "text": "in-house component or system called Calico Cloud controllers because our networking stack on kubernetes is based",
    "start": "941820",
    "end": "948000"
  },
  {
    "text": "on Calico um so what this does the Calico Cloud",
    "start": "948000",
    "end": "953279"
  },
  {
    "text": "controllers do is they read the security group configurations in AWS as and it",
    "start": "953279",
    "end": "959040"
  },
  {
    "text": "periodically pulls AWS makes the describe uh security groups and describe network interfaces call and it sinks",
    "start": "959040",
    "end": "966899"
  },
  {
    "text": "that information into the kubernetes Clusters as in it creates the global",
    "start": "966899",
    "end": "972240"
  },
  {
    "text": "Network policy or network policies custom resources in the cluster which is there is this component called",
    "start": "972240",
    "end": "979260"
  },
  {
    "text": "as typher here but I'll get into that a little bit later but overall Calico which runs the node agents these node",
    "start": "979260",
    "end": "985800"
  },
  {
    "text": "agents are essentially controllers as well they're watching for these Network policy resources and every time a new",
    "start": "985800",
    "end": "992519"
  },
  {
    "text": "pod comes in it programs the IP tables on the local nodes to ensure that the security group",
    "start": "992519",
    "end": "999920"
  },
  {
    "text": "rules are enforced at the IP tables layer as in pods can either send packets",
    "start": "999920",
    "end": "1005180"
  },
  {
    "text": "or not send packets depending on the IP table's rules configuration but these iptables rules configuration itself is a",
    "start": "1005180",
    "end": "1012740"
  },
  {
    "text": "translation of our security groups configuration so this is the networking stack we have and this how it looks like",
    "start": "1012740",
    "end": "1019040"
  },
  {
    "text": "roughly right if part A is allowed to talk to party different application the",
    "start": "1019040",
    "end": "1024260"
  },
  {
    "text": "traffic can flow otherwise the traffic cannot flow um now let's go with that introduction or",
    "start": "1024260",
    "end": "1032540"
  },
  {
    "start": "1028000",
    "end": "1028000"
  },
  {
    "text": "conceptual overview let's get back to the incident itself right so as we spend time digging into things we",
    "start": "1032540",
    "end": "1039620"
  },
  {
    "text": "looked at all sorts of logs uh we run a kxcni plugin which is responsible for",
    "start": "1039620",
    "end": "1045500"
  },
  {
    "text": "doing IP acquisition for every part that comes up and setting up the routes for the pods as the IPS are acquired and",
    "start": "1045500",
    "end": "1053299"
  },
  {
    "text": "allocated or assigned to the pause that is supposed to as I said supposed to do",
    "start": "1053299",
    "end": "1058460"
  },
  {
    "text": "the full route management for the routing rules management for the Pod right so we looked at cni logs we looked",
    "start": "1058460",
    "end": "1065299"
  },
  {
    "text": "at Calico logs to try to understand what was going on and then we found this I don't know if you all can read this we",
    "start": "1065299",
    "end": "1071539"
  },
  {
    "text": "found this really interesting log line in Calico node agent logs Calico was",
    "start": "1071539",
    "end": "1076880"
  },
  {
    "text": "saying this removing old Route and it corresponded to the parts that just came",
    "start": "1076880",
    "end": "1082400"
  },
  {
    "text": "up that was interesting because what is an old Route because these parts are brand",
    "start": "1082400",
    "end": "1088520"
  },
  {
    "text": "new very fresh right so the trigger was unclear but we at least understood what",
    "start": "1088520",
    "end": "1095240"
  },
  {
    "text": "was going on with Calico so we put some mitigations in place so that we could open for Market the following day we",
    "start": "1095240",
    "end": "1102799"
  },
  {
    "text": "also have a big stock brokerage product right um so we put this medication so",
    "start": "1102799",
    "end": "1108500"
  },
  {
    "text": "that it would give it would give us some more time to go root cause what was going on and fix the root cause so we",
    "start": "1108500",
    "end": "1114200"
  },
  {
    "text": "went on a road causing Expedition which was all about digging deeper and deeper into what was going on and a lot of code",
    "start": "1114200",
    "end": "1119480"
  },
  {
    "start": "1116000",
    "end": "1116000"
  },
  {
    "text": "reading at the time already that's how many of our incidents look like and that's going to be one of the Lessons",
    "start": "1119480",
    "end": "1124820"
  },
  {
    "text": "Learned here um so we looked at some of the dashboards and we have a really nice dashboard for",
    "start": "1124820",
    "end": "1130820"
  },
  {
    "text": "all calico operational metrics and the first two things that we see when we",
    "start": "1130820",
    "end": "1135980"
  },
  {
    "text": "open the dashboard is this graph called as typha pink latency and typhus",
    "start": "1135980",
    "end": "1141740"
  },
  {
    "text": "connection drop rate um and taifa is this component that",
    "start": "1141740",
    "end": "1147860"
  },
  {
    "text": "exists in the Calico ecosystem which acts as a middle layer or intermediate",
    "start": "1147860",
    "end": "1153620"
  },
  {
    "text": "system that caches the updates in the API server and does connection pooling",
    "start": "1153620",
    "end": "1160220"
  },
  {
    "text": "and it does that because for large clusters like ours thousands of nodes per cluster if every Calico node agent",
    "start": "1160220",
    "end": "1167600"
  },
  {
    "text": "is talking to the API server API server just doesn't scale it completely Falls over so Type R does both the caching and the",
    "start": "1167600",
    "end": "1175880"
  },
  {
    "text": "pooling so that not every Calico agent has to go to the API server um but typho also some runs some",
    "start": "1175880",
    "end": "1183559"
  },
  {
    "text": "periodic checks against the Calico node agents to make sure that the knowledge are healthy and one of the things it",
    "start": "1183559",
    "end": "1189320"
  },
  {
    "text": "does it sends ping requests off onto the node agents to make sure that the node agents are fine so we saw the pink",
    "start": "1189320",
    "end": "1196520"
  },
  {
    "text": "latencies from the taifa side go up and if you look at this graph",
    "start": "1196520",
    "end": "1201980"
  },
  {
    "text": "the the time at which it started going up perfectly correlated with the time",
    "start": "1201980",
    "end": "1207200"
  },
  {
    "text": "the incident started this is exactly when I started getting paged and people started complaining so that was",
    "start": "1207200",
    "end": "1213080"
  },
  {
    "text": "interesting um so at this point everything is pointy",
    "start": "1213080",
    "end": "1218120"
  },
  {
    "text": "pointing to Calico being the problem but we are not still not sure what's up with",
    "start": "1218120",
    "end": "1223160"
  },
  {
    "text": "Calico so we started reading the Calico code the other concern here is why now we have handled much higher loads during",
    "start": "1223160",
    "end": "1230240"
  },
  {
    "text": "previous Black Swan events um we looked at part churn rate we looked at Security Group Change rate",
    "start": "1230240",
    "end": "1236059"
  },
  {
    "text": "there wasn't enough Fortune rate or Security Group changes at the time so it did not make sense",
    "start": "1236059",
    "end": "1242900"
  },
  {
    "start": "1241000",
    "end": "1241000"
  },
  {
    "text": "uh there is a part of work stream within the incident Response Group that's reading the code and trying to make",
    "start": "1242900",
    "end": "1248120"
  },
  {
    "text": "sense of Calico type uh there is this other group of people who are just looking at the metrics and somebody",
    "start": "1248120",
    "end": "1254620"
  },
  {
    "text": "comes across this graph and this is the QPS rate for the service accounts graph",
    "start": "1254620",
    "end": "1260960"
  },
  {
    "text": "it's hard to come across this graph because you kubernetes has hundreds of",
    "start": "1260960",
    "end": "1267500"
  },
  {
    "text": "resources or API types right you can't be building separate graphs for it's just not practical to build separate",
    "start": "1267500",
    "end": "1273500"
  },
  {
    "text": "graphs or panels for every single API type and if you aggregate everything into a",
    "start": "1273500",
    "end": "1281059"
  },
  {
    "text": "single panel the problem is the rate of changes or the number of requests that",
    "start": "1281059",
    "end": "1286760"
  },
  {
    "text": "flow through for pause is so high that it basically drowns everything else in",
    "start": "1286760",
    "end": "1293179"
  },
  {
    "text": "the graph like every single other API request type will look like this zero line in that graph so it's really",
    "start": "1293179",
    "end": "1300860"
  },
  {
    "text": "hard to see what is going on with what API type we have tried a bunch of things about with anomaly detection but nothing",
    "start": "1300860",
    "end": "1307640"
  },
  {
    "text": "has actually really worked for us but we found this graph and if you look at this this is the service account mutation",
    "start": "1307640",
    "end": "1314120"
  },
  {
    "text": "rate or the update rate and this peak there was a really sharp increase here",
    "start": "1314120",
    "end": "1319580"
  },
  {
    "text": "and this perfectly correlated again with when the incident started and more",
    "start": "1319580",
    "end": "1325940"
  },
  {
    "text": "interestingly we saw this across all our production clusters and then we started digging deeper and deeper and we started",
    "start": "1325940",
    "end": "1332720"
  },
  {
    "text": "pulling in or paging people in from various partner teams the on-calls from various on code teams and then we",
    "start": "1332720",
    "end": "1339320"
  },
  {
    "text": "realized that there was a potentially faulty change that was introduced to our",
    "start": "1339320",
    "end": "1344419"
  },
  {
    "text": "in-house application development framework and I'll take a minute to explain what our framework is we have this framework called as archetype which",
    "start": "1344419",
    "end": "1352039"
  },
  {
    "text": "is an abstraction that we provide for application teams to develop their applications applications package",
    "start": "1352039",
    "end": "1358460"
  },
  {
    "text": "Services whatever you want to use the terminal in the lingo or terminology um",
    "start": "1358460",
    "end": "1363559"
  },
  {
    "text": "archetype we are completely bought into the kubernetes style of APs the declarative modeling declarative style",
    "start": "1363559",
    "end": "1368780"
  },
  {
    "text": "of apis controllers and everything so archetype are essentially a bunch of crds we specifically we have a crd",
    "start": "1368780",
    "end": "1375260"
  },
  {
    "text": "called as the application crde and we have a crd called as the component crd and the idea here is that a given",
    "start": "1375260",
    "end": "1382460"
  },
  {
    "text": "application is composed of a bunch of components and there are controllers for each of this and different components",
    "start": "1382460",
    "end": "1387919"
  },
  {
    "text": "have different types of controllers and things like that um so what happened here exactly",
    "start": "1387919",
    "end": "1394760"
  },
  {
    "start": "1392000",
    "end": "1392000"
  },
  {
    "text": "as as I said each archetype application can have multiple components that use an application is composed of multiple",
    "start": "1394760",
    "end": "1401480"
  },
  {
    "text": "components right different server instances worker demon sites Etc and there was a change to the component",
    "start": "1401480",
    "end": "1409280"
  },
  {
    "text": "controllers that was pushed to add annotations to the kubernetes native",
    "start": "1409280",
    "end": "1415159"
  },
  {
    "text": "service account objects and what this annotation was was",
    "start": "1415159",
    "end": "1421400"
  },
  {
    "text": "the controller added a computed signature of the owning component to the",
    "start": "1421400",
    "end": "1428539"
  },
  {
    "text": "service account as in whatever component the service account was supposed to belong to as a signature was computed",
    "start": "1428539",
    "end": "1434179"
  },
  {
    "text": "for the component and that signature was added as an annotation kubernetes annotation to the service account object",
    "start": "1434179",
    "end": "1440120"
  },
  {
    "text": "interestingly and unfortunately at that point in time there was ongoing",
    "start": "1440120",
    "end": "1445220"
  },
  {
    "text": "work I mean the ongoing work hadn't landed yet a single service account could be shared",
    "start": "1445220",
    "end": "1451820"
  },
  {
    "text": "by multiple components we were working on or we were discussing doing designs or splitting that out as in we wanted to",
    "start": "1451820",
    "end": "1459740"
  },
  {
    "text": "have one service account for component but that work hadn't landed so what happened was and this is where the",
    "start": "1459740",
    "end": "1465860"
  },
  {
    "text": "dueling in the introduction or the title comes in right the controllers ended up fighting with each other one One",
    "start": "1465860",
    "end": "1472640"
  },
  {
    "text": "controller would come in and say this is the owning component and add the signature for it another controller would see that no that's not the owning",
    "start": "1472640",
    "end": "1479000"
  },
  {
    "text": "component and it would rewrite the signature and this generated a significantly large number of update",
    "start": "1479000",
    "end": "1485299"
  },
  {
    "text": "orientation operations on the service account objects that it completely overwhelmed the system and this is where",
    "start": "1485299",
    "end": "1493039"
  },
  {
    "text": "things get really interesting what do service accounts have anything to do with networking or anything right we",
    "start": "1493039",
    "end": "1499100"
  },
  {
    "text": "were confused at the point and then as we were reading the code I mean somebody on the team also knew about this but we",
    "start": "1499100",
    "end": "1504740"
  },
  {
    "start": "1502000",
    "end": "1502000"
  },
  {
    "text": "also realized at the point this is this is where all this incident response and interest saying out War Stories come in",
    "start": "1504740",
    "end": "1510559"
  },
  {
    "text": "even though you theoretically know about things it's hard to remember or recollect some of these things when you",
    "start": "1510559",
    "end": "1516799"
  },
  {
    "text": "are in this high stress situations like incident I mean like these production incidents right um somebody realized that kubernetes",
    "start": "1516799",
    "end": "1524360"
  },
  {
    "text": "Network policies also have this mod where kubernetes implementations of network",
    "start": "1524360",
    "end": "1531200"
  },
  {
    "text": "policies can program policies based on service accounts and Calico does that",
    "start": "1531200",
    "end": "1537340"
  },
  {
    "text": "unfortunately there is no way in Calico we don't use network service account based Network policies at Robinhood but",
    "start": "1537340",
    "end": "1544100"
  },
  {
    "text": "unfortunately there is no way in Calico to tell Calico to not watch for service accounts even though we don't use it it",
    "start": "1544100",
    "end": "1549919"
  },
  {
    "text": "just continues watching for service accounts so when the mutation rate",
    "start": "1549919",
    "end": "1555260"
  },
  {
    "text": "started going up calicos in in the Happy State it's not a problem at all because",
    "start": "1555260",
    "end": "1561380"
  },
  {
    "text": "there are not as many mutations to service account objects but in this unhappy state it was a problem because",
    "start": "1561380",
    "end": "1567080"
  },
  {
    "text": "calicos in memory controller queue which is based on the kubernetes client go Machinery got so backed up that it",
    "start": "1567080",
    "end": "1574460"
  },
  {
    "text": "started the important updates and those important updates was new pod creation although Calico was not supposed to be",
    "start": "1574460",
    "end": "1582020"
  },
  {
    "text": "doing any route management for us the AWS kcni was supposed to be doing the route management for us there was a bug",
    "start": "1582020",
    "end": "1589520"
  },
  {
    "text": "in Calico that did not read the configuration correctly the configuration basically asked Calico not",
    "start": "1589520",
    "end": "1595460"
  },
  {
    "text": "to do any route management but the bug did not translate I mean did not let the configuration to translate correctly and",
    "start": "1595460",
    "end": "1602120"
  },
  {
    "text": "we hit that bug and it's now a known bug in both AWS and AWC and I and Calico",
    "start": "1602120",
    "end": "1609260"
  },
  {
    "text": "communities so we have currently patched the bug in our local implementation and there is some Upstream work going on",
    "start": "1609260",
    "end": "1614659"
  },
  {
    "text": "right now so Calico would still do the route management it was started off Newport updates so it wouldn't know",
    "start": "1614659",
    "end": "1621020"
  },
  {
    "text": "anything about the pause cni would come in do the IP assignments and all the IP",
    "start": "1621020",
    "end": "1626240"
  },
  {
    "text": "management stuff and then set up the routes Calico not knowing anything about these new parts because it was so backed",
    "start": "1626240",
    "end": "1632600"
  },
  {
    "text": "up it would just go and delete the routes it wouldn't recognize and that would cause a total Network blackout for",
    "start": "1632600",
    "end": "1638419"
  },
  {
    "text": "a few minutes and then eventually Calico would catch up anywhere between two to ten minutes depending on the Node and what else is going on the Node and the",
    "start": "1638419",
    "end": "1646100"
  },
  {
    "text": "route the routes would come back and parts what I mean the network would work again so this is the first interesting",
    "start": "1646100",
    "end": "1653299"
  },
  {
    "start": "1651000",
    "end": "1651000"
  },
  {
    "text": "incident right and I I'll switch over to talk about the second insert and and I'll talk about",
    "start": "1653299",
    "end": "1658940"
  },
  {
    "text": "all the Lessons Learned together in the end um this is also another interesting incident this happened a while back I",
    "start": "1658940",
    "end": "1666260"
  },
  {
    "text": "don't remember exactly remember when um we scaled up our systems in preparation",
    "start": "1666260",
    "end": "1672919"
  },
  {
    "text": "for something we scaled up our kubernetes clusters and everything applications everything for some",
    "start": "1672919",
    "end": "1680659"
  },
  {
    "text": "something that we were anticipating and and then um we did a production freeze we said we",
    "start": "1680659",
    "end": "1687080"
  },
  {
    "text": "were anticipating this event so we are not going to roll out any new software",
    "start": "1687080",
    "end": "1692600"
  },
  {
    "text": "and then the event happened and we wanted to scale down because it did not make sense to be at that scale and spend",
    "start": "1692600",
    "end": "1698720"
  },
  {
    "text": "money so we started scaling down all the backed up changes during the",
    "start": "1698720",
    "end": "1704600"
  },
  {
    "text": "production freeze started going out as it started getting deployed and as we did this scale down API servers started",
    "start": "1704600",
    "end": "1712340"
  },
  {
    "text": "dying um an API server would die they would get restarted stay healthy",
    "start": "1712340",
    "end": "1718820"
  },
  {
    "text": "for a bit and they would die again and we were losing the control plane and",
    "start": "1718820",
    "end": "1723860"
  },
  {
    "text": "this is an interesting situation right because some of our run books were based on running Cube control commands when incidents happened so and because Q",
    "start": "1723860",
    "end": "1731480"
  },
  {
    "text": "control has to talk to the API server to run the commands and if the API server is dying",
    "start": "1731480",
    "end": "1737600"
  },
  {
    "text": "um you are in a very difficult spot because you can't even get the basic information like what nodes are running",
    "start": "1737600",
    "end": "1743120"
  },
  {
    "text": "what pods are running etc etc um we had other run those to go directly",
    "start": "1743120",
    "end": "1748760"
  },
  {
    "text": "onto the nodes and look for things and basically that's what we used um but we couldn't use a lot of our",
    "start": "1748760",
    "end": "1755299"
  },
  {
    "text": "other run books again fortunately this goes back to the core Community standard right control plane is down the airplane",
    "start": "1755299",
    "end": "1761179"
  },
  {
    "text": "should continue to function so there was no customer impact again so we continued doing what we did as as",
    "start": "1761179",
    "end": "1769279"
  },
  {
    "start": "1767000",
    "end": "1767000"
  },
  {
    "text": "in the previous incident or case study interestingly also we went to the API",
    "start": "1769279",
    "end": "1775340"
  },
  {
    "text": "server was the problem we went to the API server dashboard and these two are",
    "start": "1775340",
    "end": "1780380"
  },
  {
    "text": "literally the first two graphs that we see on our API server dashboard is the CPUs Edge and memory usage and again",
    "start": "1780380",
    "end": "1787760"
  },
  {
    "text": "same story right the moment where it starts going up as in the CPUs Edge and",
    "start": "1787760",
    "end": "1794000"
  },
  {
    "text": "memory usage start going up correlates with when the incident started",
    "start": "1794000",
    "end": "1799580"
  },
  {
    "start": "1799000",
    "end": "1799000"
  },
  {
    "text": "um so we had a bunch of theories we started looking at logs again like in the previous incident and there was this",
    "start": "1799580",
    "end": "1805580"
  },
  {
    "text": "particular log line in the API server logs and again we run self-managed",
    "start": "1805580",
    "end": "1811399"
  },
  {
    "text": "because of these reasons because we want to have access to these kinds of things during incidents and because it's our",
    "start": "1811399",
    "end": "1817460"
  },
  {
    "text": "self-managed cluster we have access to all these logs so we went and started looking at these logs and",
    "start": "1817460",
    "end": "1824000"
  },
  {
    "text": "there was this particular log line it said something about the audit buffer this is for the audit logs that kubernetes API server generates right",
    "start": "1824000",
    "end": "1830600"
  },
  {
    "text": "this throws off a little bit because this was a red herring we thought or we started thinking that we have an",
    "start": "1830600",
    "end": "1836659"
  },
  {
    "text": "in-house implementation of the logging web audit logging web hook that ships the audit logs to our logging system so",
    "start": "1836659",
    "end": "1843740"
  },
  {
    "text": "we thought that implementation was buggy or something there was some problem with the implementation and it wasn't",
    "start": "1843740",
    "end": "1849080"
  },
  {
    "text": "receiving the audit logs so that got backed up in memory in the API server and API server we started reading the",
    "start": "1849080",
    "end": "1855200"
  },
  {
    "text": "apsr code I mean I'm personally familiar with the aps server code because back at Google I worked on kubernetes and",
    "start": "1855200",
    "end": "1860600"
  },
  {
    "text": "control plan so we started reading the kubernetes API server code and we realized that kubernetes API server does",
    "start": "1860600",
    "end": "1867260"
  },
  {
    "text": "not do any circuit breaking when the audit web hooks don't behave properly or misbehave we had the theory but that did",
    "start": "1867260",
    "end": "1874700"
  },
  {
    "text": "not fly for long we looked at we were looking at cubelet logs we saw a lot of config map secret mounting log lines in",
    "start": "1874700",
    "end": "1880640"
  },
  {
    "text": "cubelet logs but that was another theory that did not work out and then because",
    "start": "1880640",
    "end": "1886520"
  },
  {
    "text": "the usage had increased in the API server we said well let's let's throw a",
    "start": "1886520",
    "end": "1892580"
  },
  {
    "text": "little bit more money into the API servers right as in make the API servers someone as in the nodes uh larger than",
    "start": "1892580",
    "end": "1900320"
  },
  {
    "text": "what they are right now this is the cultural thing in the team this is ambiguant is the term that we use for these kinds of things it comes from The",
    "start": "1900320",
    "end": "1907159"
  },
  {
    "text": "Simpsons um so we said well let's embed on the API server and maybe it will make",
    "start": "1907159",
    "end": "1912380"
  },
  {
    "text": "the problem go away for now it did not make the problem go away it made the problem API servers were still dying but not as",
    "start": "1912380",
    "end": "1919580"
  },
  {
    "text": "frequently and then we started looking into the aps over logs again and again and then we",
    "start": "1919580",
    "end": "1925760"
  },
  {
    "start": "1920000",
    "end": "1920000"
  },
  {
    "text": "saw that we were getting this HTTP 410 errors in the API server HTTP 410 gone",
    "start": "1925760",
    "end": "1931640"
  },
  {
    "text": "is also a well-documented semantic in the kubernetes documentation I won't",
    "start": "1931640",
    "end": "1937279"
  },
  {
    "text": "read out the entire thing but the tldr here is actually even before the tldr a little",
    "start": "1937279",
    "end": "1942860"
  },
  {
    "text": "bit of conceptual introduction right um when the controllers do a list and Then followed by a watch they have to",
    "start": "1942860",
    "end": "1948919"
  },
  {
    "text": "get the watch events so in order to send those watch events to all the controllers or clients the API server",
    "start": "1948919",
    "end": "1955460"
  },
  {
    "text": "keeps a watch of all the historical versions or changes so that it can send those changes to all the clients and",
    "start": "1955460",
    "end": "1962840"
  },
  {
    "text": "that is stored in a cache in the API server as an in-memory cache in the API server called as the watch cache there",
    "start": "1962840",
    "end": "1969260"
  },
  {
    "text": "is an argument or debate whether it should be called watch cache or not and whether the nameism is normal but that aside there is a watch cache and if for",
    "start": "1969260",
    "end": "1978559"
  },
  {
    "text": "some reason the API server is not able to send watch events before the objects",
    "start": "1978559",
    "end": "1983960"
  },
  {
    "text": "are removed from the watch cache the API server gives up and sends HTTP 410 gone",
    "start": "1983960",
    "end": "1991399"
  },
  {
    "text": "error or error status code to the clients and at that point the clients",
    "start": "1991399",
    "end": "1996620"
  },
  {
    "text": "are as in clients including the controllers are expected to restart their watch us by doing a list operation",
    "start": "1996620",
    "end": "2002980"
  },
  {
    "text": "as in a realist and remember what I said earlier lists are super super expensive",
    "start": "2002980",
    "end": "2009460"
  },
  {
    "text": "um so we were seeing four Tans and to give a little bit overview again pictorially",
    "start": "2009460",
    "end": "2016779"
  },
  {
    "text": "um kubernetes do a list of I mean controllers do a list operation on Startup and then they begin watching and",
    "start": "2016779",
    "end": "2023559"
  },
  {
    "text": "then APS server Returns the changes occasionally API servers can say full-time gone it's not a problem but if",
    "start": "2023559",
    "end": "2030519"
  },
  {
    "text": "it starts happening frequently it is a problem and as we started looking at the cubelet logs it started becoming",
    "start": "2030519",
    "end": "2036640"
  },
  {
    "text": "increasingly clear to us that the client in this case or the controller in this case was actually cubelets and because",
    "start": "2036640",
    "end": "2043539"
  },
  {
    "text": "the control or clusters had thousands of nodes thousands of keywords right",
    "start": "2043539",
    "end": "2048638"
  },
  {
    "text": "thousands of cubelets were getting HTTP 410 gone",
    "start": "2048639",
    "end": "2054280"
  },
  {
    "text": "and then they had to restart their watches by doing this expensive realist operation against the API server so",
    "start": "2054280",
    "end": "2063099"
  },
  {
    "start": "2062000",
    "end": "2062000"
  },
  {
    "text": "and this hap this actually happened when we were trying to either run large load",
    "start": "2063099",
    "end": "2068618"
  },
  {
    "text": "tests or when we were trying to redeploy or update the versions of larger",
    "start": "2068619",
    "end": "2074200"
  },
  {
    "text": "services that we have and because we were in this production freeze and then",
    "start": "2074200",
    "end": "2079240"
  },
  {
    "text": "now we were in the top period there was this bug that was introduced in our Frameworks where the number of parts",
    "start": "2079240",
    "end": "2086080"
  },
  {
    "text": "that were created for some of these larger Services were in the order of thousands in a matter of minute so this",
    "start": "2086080",
    "end": "2094419"
  },
  {
    "text": "our systems would create thousands of parts in a matter of minutes oh my God that's not good",
    "start": "2094419",
    "end": "2101460"
  },
  {
    "text": "I can do this later ah and because the number of parts that were getting",
    "start": "2101740",
    "end": "2107680"
  },
  {
    "text": "updated were so high the watch cache would have a very high Miss rate as in",
    "start": "2107680",
    "end": "2113619"
  },
  {
    "text": "things would go the historical versions would go stale really really really quickly because they were getting",
    "start": "2113619",
    "end": "2119260"
  },
  {
    "text": "updated as in the versions were getting updated for given Parts at a very high rate and every client in this case",
    "start": "2119260",
    "end": "2125920"
  },
  {
    "text": "cubelets were doing this right thousands of cubelets are now trying to are getting 410 guns because historical",
    "start": "2125920",
    "end": "2131800"
  },
  {
    "text": "versions are not there in the API server and they miss their watch events and every every cubelet is trying to do a",
    "start": "2131800",
    "end": "2138099"
  },
  {
    "text": "realist and followed by a watch this further further overloaded the API server and sent them in into a downward",
    "start": "2138099",
    "end": "2145000"
  },
  {
    "text": "spiral and eventually to their dads so that's the two incidents here",
    "start": "2145000",
    "end": "2151839"
  },
  {
    "text": "um here are the takeaways at least from I mean not from these two incidents the",
    "start": "2151839",
    "end": "2156940"
  },
  {
    "text": "takeaways are mostly from all the production outages or incidents that we have run into uh hopefully these are",
    "start": "2156940",
    "end": "2162700"
  },
  {
    "text": "some Inspirations for us the number one takeaway for us is observability is the key to operational success and there are",
    "start": "2162700",
    "end": "2168880"
  },
  {
    "start": "2167000",
    "end": "2167000"
  },
  {
    "text": "three dimensions to observability right there there are metrics logs and in kubernetes case audit logs I'll talk",
    "start": "2168880",
    "end": "2174760"
  },
  {
    "text": "about all of them I mean there is tracing as well but I won't get into tracing because um the Upstream support for tracing of",
    "start": "2174760",
    "end": "2182440"
  },
  {
    "text": "kubernetes components has not been great so far there is a cap right now and I",
    "start": "2182440",
    "end": "2187960"
  },
  {
    "text": "know David Ash Paul and other things are working on bringing tracing into kubernetes components but because at",
    "start": "2187960",
    "end": "2194200"
  },
  {
    "text": "least at the time there was no prior art we also haven't done a lot of work in terms of distributed raising in the",
    "start": "2194200",
    "end": "2199900"
  },
  {
    "text": "kubernetes components or the extensions or controllers that we have written we hope to do that as as the Upstream work",
    "start": "2199900",
    "end": "2207339"
  },
  {
    "text": "lands so leaving that aside metrics right kubernetes components export a ton",
    "start": "2207339",
    "end": "2213460"
  },
  {
    "text": "of metrics tons and tons of them our lesson is scrape them all because you",
    "start": "2213460",
    "end": "2219520"
  },
  {
    "text": "never know which metrics you you need but that's it though it's not practical to build dashboards out of all those",
    "start": "2219520",
    "end": "2225220"
  },
  {
    "text": "metrics because there are just so many of them if you put all of them then your dashboards mean nothing so",
    "start": "2225220",
    "end": "2232420"
  },
  {
    "text": "it's a little bit of a training or an exercise to understand what are the most",
    "start": "2232420",
    "end": "2239079"
  },
  {
    "text": "meaningful graphs or panels that you want to put in the dashboard in our case having the type of pink latency and the",
    "start": "2239079",
    "end": "2246400"
  },
  {
    "text": "connection drop rates at the top for the first incident and the API server CPU and memory usage metrics as the top",
    "start": "2246400",
    "end": "2252940"
  },
  {
    "text": "Matrix on the API server dashboard really really served us because that was the first thing that we were seeing when",
    "start": "2252940",
    "end": "2258040"
  },
  {
    "text": "we went to those dashboards so structuring your dashboards in a way that makes these kinds of important",
    "start": "2258040",
    "end": "2265359"
  },
  {
    "text": "metrics more visible or accessible is really important and because you never",
    "start": "2265359",
    "end": "2271359"
  },
  {
    "text": "know what you need have an ability to construct these graphs ad hoc right if you are using grafana grafana has a",
    "start": "2271359",
    "end": "2278140"
  },
  {
    "text": "really nice way of building ad hog graphs for all sorts of metrics so if you're scraping everything you should",
    "start": "2278140",
    "end": "2284020"
  },
  {
    "text": "you you should be able to build these graphs ad hoc and cutting the logs logs from kubernetes",
    "start": "2284020",
    "end": "2290680"
  },
  {
    "start": "2287000",
    "end": "2287000"
  },
  {
    "text": "components are really useful at least in our experience but if you are reading",
    "start": "2290680",
    "end": "2295780"
  },
  {
    "text": "the logs only from the logs system without actually looking at the code it's quite a fee doesn't these were the",
    "start": "2295780",
    "end": "2303640"
  },
  {
    "text": "logs written by someone else right the author of The Code by the developer so you need to train yourself to understand",
    "start": "2303640",
    "end": "2310780"
  },
  {
    "text": "what those logs mean to understand what the system is I think everybody not kubernetes right everybody who has",
    "start": "2310780",
    "end": "2318160"
  },
  {
    "text": "operational experience knows about this so you got to train at least our lesson",
    "start": "2318160",
    "end": "2324099"
  },
  {
    "text": "learned here as we got to train our teams to make sure that they understand what these logs are for these particular",
    "start": "2324099",
    "end": "2330040"
  },
  {
    "text": "components as in that muzzle memory or that muscle has to be built within the team",
    "start": "2330040",
    "end": "2335339"
  },
  {
    "text": "API server logs haven't been that useful for us I mean generally they are noisy",
    "start": "2335339",
    "end": "2341140"
  },
  {
    "text": "and haven't been useful for us in practice don't don't get me wrong I have contributed to the API server myself so",
    "start": "2341140",
    "end": "2347800"
  },
  {
    "text": "I understand and how the code is written at least it feels to me like the API",
    "start": "2347800",
    "end": "2353380"
  },
  {
    "text": "server logs are written for developers to debug the system than for The Operators of the Clusters so we usually",
    "start": "2353380",
    "end": "2360640"
  },
  {
    "text": "generally don't run to the API server logs as the first thing um but but that aside having a good law",
    "start": "2360640",
    "end": "2367000"
  },
  {
    "text": "querying and filtering system or the aggregating UI comes in really handy coming to audit logs this is where I",
    "start": "2367000",
    "end": "2373660"
  },
  {
    "start": "2371000",
    "end": "2371000"
  },
  {
    "text": "think things are super helpful as for API server is concerned kubernetes exports audit logs right and it fills",
    "start": "2373660",
    "end": "2380200"
  },
  {
    "text": "the gaps left by the debug logs that the API server provides the audit logs",
    "start": "2380200",
    "end": "2385359"
  },
  {
    "text": "haven't just helped with security stuff for us it has also been an extremely powerful debugging tool it tells you who",
    "start": "2385359",
    "end": "2392740"
  },
  {
    "text": "made the calls how frequently were the calls made and at what times this is how",
    "start": "2392740",
    "end": "2398500"
  },
  {
    "text": "we found that there were tons and tons of realists that were happening and those realists were made by the cubeless",
    "start": "2398500",
    "end": "2404980"
  },
  {
    "text": "during the second case study and have a similar or same aggregating wearing and",
    "start": "2404980",
    "end": "2411760"
  },
  {
    "text": "filtering logging system or UI for audit logs as well because it matters you need",
    "start": "2411760",
    "end": "2416859"
  },
  {
    "text": "to you need to understand how these audit logs work and you need to be able to filter these logs and view them",
    "start": "2416859",
    "end": "2422500"
  },
  {
    "text": "during incidents so that's the first takeaway the second takeaway here is around change",
    "start": "2422500",
    "end": "2428200"
  },
  {
    "start": "2424000",
    "end": "2424000"
  },
  {
    "text": "management and having some visibility around the changes that go into the system",
    "start": "2428200",
    "end": "2434099"
  },
  {
    "text": "ensure that you have some way to or some visibility into all the changes that are pushed into your cluster here it could",
    "start": "2434099",
    "end": "2440980"
  },
  {
    "text": "be native kubernetes cluster components it could be extensions as in controllers or other things that you write",
    "start": "2440980",
    "end": "2446980"
  },
  {
    "text": "um and have some mechanism to have those notifications somewhere as in all the",
    "start": "2446980",
    "end": "2453280"
  },
  {
    "text": "change notifications uh it could be a very simple system just throwing out ideas here it does not have to be this",
    "start": "2453280",
    "end": "2459160"
  },
  {
    "text": "but it could be as simple as notifications for a summary of changes that just rolled out put it on a slack",
    "start": "2459160",
    "end": "2464500"
  },
  {
    "text": "Channel but have a dedicated slack Channel where you can just go and scroll and see what happened and have the ability to construct the timeline of",
    "start": "2464500",
    "end": "2470680"
  },
  {
    "text": "changes because things generally break because something changed if nothing changes nothing",
    "start": "2470680",
    "end": "2476500"
  },
  {
    "text": "breaks right and the kubernetes extensibility model as I was saying is very powerful but",
    "start": "2476500",
    "end": "2482320"
  },
  {
    "text": "it's also a double-edged sword it's not just you or The kubernetes Operators who can write these extensions anybody who",
    "start": "2482320",
    "end": "2489820"
  },
  {
    "text": "is using kubernetes can write these extensions right and that means anybody who's writing these extensions can make",
    "start": "2489820",
    "end": "2495760"
  },
  {
    "text": "mistakes so ensure that you work closely with your partner teams for writing these extensions understand their use",
    "start": "2495760",
    "end": "2501820"
  },
  {
    "text": "case help them build similar systems as yours for change tracking so that you have visibility into them as well and",
    "start": "2501820",
    "end": "2508599"
  },
  {
    "start": "2507000",
    "end": "2507000"
  },
  {
    "text": "finally this is really the last thing here um don't be afraid to read the code I",
    "start": "2508599",
    "end": "2514540"
  },
  {
    "text": "think at least our personal I mean detect here on my personal take here as",
    "start": "2514540",
    "end": "2521500"
  },
  {
    "text": "God does not lie as in lie meaning there might be bugs in court but when you read",
    "start": "2521500",
    "end": "2527440"
  },
  {
    "text": "the code you'll see the bug as well as if you are paying attention uh documentation can be out of date or can",
    "start": "2527440",
    "end": "2533740"
  },
  {
    "text": "have typos a bunch of things right but code is exactly what is running in your",
    "start": "2533740",
    "end": "2538900"
  },
  {
    "text": "system make sure that you have the core I mean if you're running open source components at least make sure you have your code checked out add the version",
    "start": "2538900",
    "end": "2545140"
  },
  {
    "text": "that you are running and don't be afraid to read the code um kubernetes is a very large code base",
    "start": "2545140",
    "end": "2551440"
  },
  {
    "text": "I understand that I did some analysis of API server when I was back at Google and it was already just the API Machinery",
    "start": "2551440",
    "end": "2557920"
  },
  {
    "text": "was around 1.1 or 1.2 million lines of code back then this is excluding all the",
    "start": "2557920",
    "end": "2563500"
  },
  {
    "text": "controllers and all the other pieces in kubernetes um so it's a large surface area not not",
    "start": "2563500",
    "end": "2569079"
  },
  {
    "start": "2565000",
    "end": "2565000"
  },
  {
    "text": "everybody will become an expert in everything in kubernetes is just not practically possible but try to we we",
    "start": "2569079",
    "end": "2575380"
  },
  {
    "text": "have tried to do this and my recommendation or advice would be to build expertise within each of these areas in in your team the the expertise",
    "start": "2575380",
    "end": "2584260"
  },
  {
    "text": "the areas could just follow the Sig model that the kubernetes has",
    "start": "2584260",
    "end": "2589599"
  },
  {
    "text": "um sign networking you have a parallel analogous group within expertise group",
    "start": "2589599",
    "end": "2594839"
  },
  {
    "text": "within and is being raised I'll wrap up this is the last slide um so yeah build",
    "start": "2594839",
    "end": "2601000"
  },
  {
    "text": "expertise make sure that people in those areas are familiar with the code for the components that they own both internal",
    "start": "2601000",
    "end": "2607839"
  },
  {
    "text": "and open source and then also ensure that there are debugging tools I mean people within those groups are",
    "start": "2607839",
    "end": "2614319"
  },
  {
    "text": "comfortable with the debugging groups debugging tools within that area tsp dump IP etc for networking people of",
    "start": "2614319",
    "end": "2620920"
  },
  {
    "text": "frames etc etc for all components um with that that's the end of my talk",
    "start": "2620920",
    "end": "2626200"
  },
  {
    "text": "thank you um I went three minutes over but I'm also happy to take questions I'll be around or if people have questions here",
    "start": "2626200",
    "end": "2633099"
  },
  {
    "text": "I'm happy to answer now as well foreign",
    "start": "2633099",
    "end": "2638500"
  }
]