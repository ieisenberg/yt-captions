[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "so welcome everyone we will start the",
    "start": "469",
    "end": "3750"
  },
  {
    "text": "talk now this is about an",
    "start": "3750",
    "end": "6150"
  },
  {
    "text": "enterprise-grade server list framework",
    "start": "6150",
    "end": "10050"
  },
  {
    "text": "using kubernetes we call it pontoon and",
    "start": "10050",
    "end": "12570"
  },
  {
    "text": "we will go over the details of it upon",
    "start": "12570",
    "end": "14639"
  },
  {
    "text": "heart has been built and for what",
    "start": "14639",
    "end": "17039"
  },
  {
    "text": "particular purpose this may be a bit of",
    "start": "17039",
    "end": "25740"
  },
  {
    "text": "repeat if you have attended our earlier",
    "start": "25740",
    "end": "28490"
  },
  {
    "text": "well today we had two plus one three",
    "start": "28490",
    "end": "32610"
  },
  {
    "text": "sessions already gone by on server less",
    "start": "32610",
    "end": "34530"
  },
  {
    "text": "in the same room so it may be bit of an",
    "start": "34530",
    "end": "36540"
  },
  {
    "text": "overdose we have one more coming after",
    "start": "36540",
    "end": "38700"
  },
  {
    "text": "my talk but in very quick to recap",
    "start": "38700",
    "end": "44629"
  },
  {
    "text": "serverless enables running your back-end",
    "start": "44629",
    "end": "47670"
  },
  {
    "text": "logic without you managing this servers",
    "start": "47670",
    "end": "51989"
  },
  {
    "text": "and it also gives you instantaneous",
    "start": "51989",
    "end": "55890"
  },
  {
    "text": "scalability because most of the things",
    "start": "55890",
    "end": "57840"
  },
  {
    "text": "are event-driven of course it puts some",
    "start": "57840",
    "end": "60000"
  },
  {
    "text": "constraints that you have to think about",
    "start": "60000",
    "end": "62399"
  },
  {
    "text": "especially the process should have a",
    "start": "62399",
    "end": "66320"
  },
  {
    "text": "particular finish time it should have it",
    "start": "66320",
    "end": "69540"
  },
  {
    "text": "should be ephemeral it should also be",
    "start": "69540",
    "end": "72570"
  },
  {
    "text": "stateless because once the execution is",
    "start": "72570",
    "end": "74670"
  },
  {
    "text": "done you will lose everything which is",
    "start": "74670",
    "end": "76430"
  },
  {
    "text": "maintained there and good practice try",
    "start": "76430",
    "end": "81360"
  },
  {
    "text": "to have minimal shares if at all no",
    "start": "81360",
    "end": "85770"
  },
  {
    "text": "shares across your execution states and",
    "start": "85770",
    "end": "89400"
  },
  {
    "text": "typical use cases for scheduling tasks",
    "start": "89400",
    "end": "92390"
  },
  {
    "text": "dynamic and burstable workloads message",
    "start": "92390",
    "end": "95729"
  },
  {
    "text": "driven applications by the if you're",
    "start": "95729",
    "end": "100439"
  },
  {
    "text": "thinking that cyber this is a new",
    "start": "100439",
    "end": "102930"
  },
  {
    "text": "paradigm it's actually not it has been",
    "start": "102930",
    "end": "105470"
  },
  {
    "text": "well there for quite some time it just",
    "start": "105470",
    "end": "108030"
  },
  {
    "text": "like we are catching up at catching up",
    "start": "108030",
    "end": "111329"
  },
  {
    "text": "add on to it as a trend and with trend",
    "start": "111329",
    "end": "114780"
  },
  {
    "text": "there is lot of community enthusiasm and",
    "start": "114780",
    "end": "116700"
  },
  {
    "text": "hence good and proper tools which you",
    "start": "116700",
    "end": "118619"
  },
  {
    "text": "can use for writing your applications",
    "start": "118619",
    "end": "121399"
  },
  {
    "text": "and we hope that it's not yet another",
    "start": "121399",
    "end": "124770"
  },
  {
    "text": "hype cycle but rather this is something",
    "start": "124770",
    "end": "127049"
  },
  {
    "text": "which is there to stay because we are me",
    "start": "127049",
    "end": "130050"
  },
  {
    "text": "as it company for the work that I do we",
    "start": "130050",
    "end": "132569"
  },
  {
    "text": "are benefiting from it",
    "start": "132569",
    "end": "135620"
  },
  {
    "start": "135000",
    "end": "169000"
  },
  {
    "text": "the major benefit is because of the",
    "start": "136769",
    "end": "140170"
  },
  {
    "text": "economics you will see you should you",
    "start": "140170",
    "end": "143530"
  },
  {
    "text": "should be able to fairly reduce your",
    "start": "143530",
    "end": "145720"
  },
  {
    "text": "overall cloud expend because you are",
    "start": "145720",
    "end": "148269"
  },
  {
    "text": "going to pay only when you have a real",
    "start": "148269",
    "end": "151180"
  },
  {
    "text": "usage of the hardware underlying it and",
    "start": "151180",
    "end": "155040"
  },
  {
    "text": "the projections are looking pretty good",
    "start": "155040",
    "end": "157420"
  },
  {
    "text": "most of the workloads will move towards",
    "start": "157420",
    "end": "159280"
  },
  {
    "text": "this direction sooner or later and hence",
    "start": "159280",
    "end": "161260"
  },
  {
    "text": "we have all the big names all the cloud",
    "start": "161260",
    "end": "164379"
  },
  {
    "text": "vendors coming up with a native",
    "start": "164379",
    "end": "166120"
  },
  {
    "text": "implementation of server less so with",
    "start": "166120",
    "end": "170950"
  },
  {
    "start": "169000",
    "end": "187000"
  },
  {
    "text": "this brief upon our agenda we'll start",
    "start": "170950",
    "end": "173650"
  },
  {
    "text": "with the needs then we'll translate the",
    "start": "173650",
    "end": "175480"
  },
  {
    "text": "requirements and then I will hand over",
    "start": "175480",
    "end": "178720"
  },
  {
    "text": "to my colleague who will go over the",
    "start": "178720",
    "end": "181329"
  },
  {
    "text": "pontoon architecture whew and the last",
    "start": "181329",
    "end": "185049"
  },
  {
    "text": "key takeaways we'll also have a live",
    "start": "185049",
    "end": "186970"
  },
  {
    "text": "demo so what is our need here so the two",
    "start": "186970",
    "end": "193150"
  },
  {
    "text": "of us mean you can call me cagey by my",
    "start": "193150",
    "end": "196510"
  },
  {
    "text": "initials and my colleague magesh we work",
    "start": "196510",
    "end": "198850"
  },
  {
    "text": "in the VMware cloud services it says it",
    "start": "198850",
    "end": "202150"
  },
  {
    "text": "is multi cloud management solution which",
    "start": "202150",
    "end": "206109"
  },
  {
    "text": "combines the capabilities of application",
    "start": "206109",
    "end": "208470"
  },
  {
    "text": "orchestration monitoring cost inside and",
    "start": "208470",
    "end": "211540"
  },
  {
    "text": "network inside we shape our binaries in",
    "start": "211540",
    "end": "214329"
  },
  {
    "text": "docker container packaging for all the",
    "start": "214329",
    "end": "216970"
  },
  {
    "text": "goodness that it comes with and we also",
    "start": "216970",
    "end": "219250"
  },
  {
    "text": "use kubernetes heavily as an",
    "start": "219250",
    "end": "221290"
  },
  {
    "text": "orchestration layer we do run both on",
    "start": "221290",
    "end": "224410"
  },
  {
    "text": "AWS cloud as well as vSphere private",
    "start": "224410",
    "end": "226930"
  },
  {
    "text": "cloud that means sorry we can't use AWS",
    "start": "226930",
    "end": "229480"
  },
  {
    "text": "lambda few months ago we realized that",
    "start": "229480",
    "end": "234609"
  },
  {
    "text": "there is a need for us to use a",
    "start": "234609",
    "end": "236739"
  },
  {
    "text": "framework to run both schedule job",
    "start": "236739",
    "end": "239079"
  },
  {
    "text": "on-demand jobs as well as some of the",
    "start": "239079",
    "end": "241090"
  },
  {
    "text": "bursting applications we did evaluate a",
    "start": "241090",
    "end": "243849"
  },
  {
    "text": "few of the popular ones for us to see if",
    "start": "243849",
    "end": "247510"
  },
  {
    "text": "we can readily consume them but we have",
    "start": "247510",
    "end": "250269"
  },
  {
    "text": "to finally build up roundup which which",
    "start": "250269",
    "end": "253150"
  },
  {
    "text": "is what we call as first pontoon it was",
    "start": "253150",
    "end": "255069"
  },
  {
    "text": "fairly easy to build we were able to use",
    "start": "255069",
    "end": "257049"
  },
  {
    "text": "it as a pattern on top of kubernetes",
    "start": "257049",
    "end": "258669"
  },
  {
    "text": "jobs and it took hardly 2 to 3",
    "start": "258669",
    "end": "261459"
  },
  {
    "text": "engineering effort I mean one person",
    "start": "261459",
    "end": "264849"
  },
  {
    "text": "engineering effort for two to three",
    "start": "264849",
    "end": "266289"
  },
  {
    "text": "months to",
    "start": "266289",
    "end": "269039"
  },
  {
    "text": "and before we proceed further I will",
    "start": "270759",
    "end": "274610"
  },
  {
    "text": "like you to keep an eye upon why we are",
    "start": "274610",
    "end": "277939"
  },
  {
    "text": "building it because we primarily build",
    "start": "277939",
    "end": "280189"
  },
  {
    "text": "it for self consumption so we are",
    "start": "280189",
    "end": "281900"
  },
  {
    "text": "solving it for self it may not cover all",
    "start": "281900",
    "end": "284509"
  },
  {
    "text": "the use cases which we will highlight",
    "start": "284509",
    "end": "285830"
  },
  {
    "text": "and important disclaimer and like Google",
    "start": "285830",
    "end": "290689"
  },
  {
    "text": "Android ad we don't get paid for solving",
    "start": "290689",
    "end": "293749"
  },
  {
    "text": "technical problem but only business",
    "start": "293749",
    "end": "295129"
  },
  {
    "text": "problem so that's a cap on engineering",
    "start": "295129",
    "end": "297590"
  },
  {
    "text": "investments we can make but yes we are",
    "start": "297590",
    "end": "301009"
  },
  {
    "start": "299000",
    "end": "396000"
  },
  {
    "text": "pretty happy with the end result which",
    "start": "301009",
    "end": "302569"
  },
  {
    "text": "we have so changing gears now let's",
    "start": "302569",
    "end": "305569"
  },
  {
    "text": "let's look into the requirements which",
    "start": "305569",
    "end": "307189"
  },
  {
    "text": "we came up with so we have two sets of",
    "start": "307189",
    "end": "310400"
  },
  {
    "text": "requirement one is the set of all",
    "start": "310400",
    "end": "312409"
  },
  {
    "text": "functions sorry the serverless functions",
    "start": "312409",
    "end": "315199"
  },
  {
    "text": "and that is the server list framework",
    "start": "315199",
    "end": "316819"
  },
  {
    "text": "itself so we came up with these six",
    "start": "316819",
    "end": "320839"
  },
  {
    "text": "requirements the first one says a",
    "start": "320839",
    "end": "322849"
  },
  {
    "text": "process function is a process which is",
    "start": "322849",
    "end": "325969"
  },
  {
    "text": "capable of running business logic in",
    "start": "325969",
    "end": "328069"
  },
  {
    "text": "response to an event it should be finite",
    "start": "328069",
    "end": "331129"
  },
  {
    "text": "so you you you can preempt on on time",
    "start": "331129",
    "end": "334729"
  },
  {
    "text": "outs it should be of course stateless",
    "start": "334729",
    "end": "337270"
  },
  {
    "text": "that is anything it has to person should",
    "start": "337270",
    "end": "340250"
  },
  {
    "text": "be in shared persistence storage and",
    "start": "340250",
    "end": "344740"
  },
  {
    "text": "good practice it should have shared",
    "start": "344740",
    "end": "348229"
  },
  {
    "text": "nothing architecture between executions",
    "start": "348229",
    "end": "350169"
  },
  {
    "text": "we don't impose any language constraints",
    "start": "350169",
    "end": "353389"
  },
  {
    "text": "on containers but we know that we will",
    "start": "353389",
    "end": "355610"
  },
  {
    "text": "be fairly using JVM Python and maybe go",
    "start": "355610",
    "end": "358520"
  },
  {
    "text": "at it at some point in time so container",
    "start": "358520",
    "end": "360289"
  },
  {
    "text": "was a default choice whereas runtime of",
    "start": "360289",
    "end": "363620"
  },
  {
    "text": "our functions is not exactly in",
    "start": "363620",
    "end": "366550"
  },
  {
    "text": "millisecond it is built to cater to an",
    "start": "366550",
    "end": "371029"
  },
  {
    "text": "order of few seconds to a few minutes",
    "start": "371029",
    "end": "374500"
  },
  {
    "text": "and hence container was absolutely fine",
    "start": "374500",
    "end": "377330"
  },
  {
    "text": "for us",
    "start": "377330",
    "end": "377899"
  },
  {
    "text": "and though our function has to be",
    "start": "377899",
    "end": "381589"
  },
  {
    "text": "idempotent we do acknowledge that",
    "start": "381589",
    "end": "384439"
  },
  {
    "text": "accidental multiple invocations can",
    "start": "384439",
    "end": "387379"
  },
  {
    "text": "happen and will happen so we handled it",
    "start": "387379",
    "end": "391099"
  },
  {
    "text": "in the persistence layer as well as in",
    "start": "391099",
    "end": "393229"
  },
  {
    "text": "the application code",
    "start": "393229",
    "end": "395979"
  },
  {
    "start": "396000",
    "end": "503000"
  },
  {
    "text": "second set of requirements quickly",
    "start": "397380",
    "end": "400080"
  },
  {
    "text": "getting through is on the survivalist",
    "start": "400080",
    "end": "401940"
  },
  {
    "text": "framework itself so since we are heavily",
    "start": "401940",
    "end": "405240"
  },
  {
    "text": "built upon kubernetes we wanted it to be",
    "start": "405240",
    "end": "407100"
  },
  {
    "text": "a sort of facade on the top of it we",
    "start": "407100",
    "end": "411780"
  },
  {
    "text": "should be able to persist the logs and",
    "start": "411780",
    "end": "413870"
  },
  {
    "text": "also do root cause analysis when needed",
    "start": "413870",
    "end": "417650"
  },
  {
    "text": "function should be able to access other",
    "start": "417650",
    "end": "420210"
  },
  {
    "text": "kubernetes resources this is a very very",
    "start": "420210",
    "end": "422640"
  },
  {
    "text": "important requirement for us because",
    "start": "422640",
    "end": "424290"
  },
  {
    "text": "when we very designing these functions",
    "start": "424290",
    "end": "426240"
  },
  {
    "text": "we knew that they are going to run for",
    "start": "426240",
    "end": "428010"
  },
  {
    "text": "quite some time they will interact using",
    "start": "428010",
    "end": "429870"
  },
  {
    "text": "kubernetes network constructs with other",
    "start": "429870",
    "end": "432630"
  },
  {
    "text": "live services available and hence it",
    "start": "432630",
    "end": "435390"
  },
  {
    "text": "should it should be able to access those",
    "start": "435390",
    "end": "438060"
  },
  {
    "text": "resources we also have a configurable",
    "start": "438060",
    "end": "441600"
  },
  {
    "text": "way to say what should be the retry",
    "start": "441600",
    "end": "443490"
  },
  {
    "text": "limit for a function and how many such",
    "start": "443490",
    "end": "445320"
  },
  {
    "text": "parallel invocations should run we can't",
    "start": "445320",
    "end": "447360"
  },
  {
    "text": "of course assume infinite parallelism",
    "start": "447360",
    "end": "449010"
  },
  {
    "text": "because it after all cost money we do",
    "start": "449010",
    "end": "452700"
  },
  {
    "text": "limit our resources on AWS using",
    "start": "452700",
    "end": "454530"
  },
  {
    "text": "reserved instances and hence we know",
    "start": "454530",
    "end": "456600"
  },
  {
    "text": "that we have to limit the parallelism to",
    "start": "456600",
    "end": "459330"
  },
  {
    "text": "a great extent it should be highly",
    "start": "459330",
    "end": "461700"
  },
  {
    "text": "available and the execution of function",
    "start": "461700",
    "end": "465030"
  },
  {
    "text": "should be visible in in today's terms we",
    "start": "465030",
    "end": "470250"
  },
  {
    "text": "call it observe availability we should",
    "start": "470250",
    "end": "473250"
  },
  {
    "text": "guarantee at least one execution of each",
    "start": "473250",
    "end": "474990"
  },
  {
    "text": "function exactly once is desired but may",
    "start": "474990",
    "end": "477900"
  },
  {
    "text": "not eventually happen there can be cases",
    "start": "477900",
    "end": "480780"
  },
  {
    "text": "where two invocations will also be fired",
    "start": "480780",
    "end": "483210"
  },
  {
    "text": "and lastly in developer friendliness so",
    "start": "483210",
    "end": "486830"
  },
  {
    "text": "ability to register function with an API",
    "start": "486830",
    "end": "489660"
  },
  {
    "text": "and also let me call out the non goals",
    "start": "489660",
    "end": "493140"
  },
  {
    "text": "for us we haven't seen a need for us to",
    "start": "493140",
    "end": "496620"
  },
  {
    "text": "do sort of chaining or workflows of",
    "start": "496620",
    "end": "500570"
  },
  {
    "text": "functions if I translate these",
    "start": "500570",
    "end": "505550"
  },
  {
    "text": "requirements into a bit of pictorial",
    "start": "505550",
    "end": "509430"
  },
  {
    "text": "diagram it will look like this we have a",
    "start": "509430",
    "end": "511500"
  },
  {
    "text": "concurrent job store and also along with",
    "start": "511500",
    "end": "514050"
  },
  {
    "text": "that disk back cue implementation let's",
    "start": "514050",
    "end": "518490"
  },
  {
    "text": "call it a paretic implemented we also",
    "start": "518490",
    "end": "521310"
  },
  {
    "text": "have a pod scheduler which keeps a track",
    "start": "521310",
    "end": "523830"
  },
  {
    "text": "upon how many open jobs are there at an",
    "start": "523830",
    "end": "526560"
  },
  {
    "text": "at a moment and hence how many pods",
    "start": "526560",
    "end": "528839"
  },
  {
    "text": "should be there in the system to",
    "start": "528839",
    "end": "530770"
  },
  {
    "text": "serviced them then we need to have an",
    "start": "530770",
    "end": "534790"
  },
  {
    "text": "orchestrated which is the jobscheduler",
    "start": "534790",
    "end": "537310"
  },
  {
    "text": "Linamar was partially this is job",
    "start": "537310",
    "end": "539770"
  },
  {
    "text": "scheduler which takes input requests",
    "start": "539770",
    "end": "541930"
  },
  {
    "text": "through a pis and does the following",
    "start": "541930",
    "end": "545860"
  },
  {
    "text": "important tasks for adding jobs to the",
    "start": "545860",
    "end": "547870"
  },
  {
    "text": "queue managing the jobs when they are",
    "start": "547870",
    "end": "550600"
  },
  {
    "text": "done or even in case of error again put",
    "start": "550600",
    "end": "554380"
  },
  {
    "text": "them back into the queue based upon some",
    "start": "554380",
    "end": "557110"
  },
  {
    "text": "policy then we have on this on this side",
    "start": "557110",
    "end": "560110"
  },
  {
    "text": "the pods themselves so we have put",
    "start": "560110",
    "end": "564550"
  },
  {
    "text": "sidecar container pattern that is the",
    "start": "564550",
    "end": "567070"
  },
  {
    "text": "init container which helps the business",
    "start": "567070",
    "end": "569950"
  },
  {
    "text": "logic worker container to do the job",
    "start": "569950",
    "end": "572070"
  },
  {
    "text": "this init container consumes the jobs",
    "start": "572070",
    "end": "575860"
  },
  {
    "text": "with a set of priority queue lengths",
    "start": "575860",
    "end": "578950"
  },
  {
    "text": "from the concurrent store and keeps on",
    "start": "578950",
    "end": "583420"
  },
  {
    "text": "updating the progress of the job so",
    "start": "583420",
    "end": "585190"
  },
  {
    "text": "whenever it picks a job it should update",
    "start": "585190",
    "end": "586600"
  },
  {
    "text": "that this particular container ID is",
    "start": "586600",
    "end": "588700"
  },
  {
    "text": "taking up this job and on successful",
    "start": "588700",
    "end": "591910"
  },
  {
    "text": "completion it should mention what is the",
    "start": "591910",
    "end": "594120"
  },
  {
    "text": "exit code so that it doesn't get retried",
    "start": "594120",
    "end": "597760"
  },
  {
    "text": "or if it has to be retried then what is",
    "start": "597760",
    "end": "600460"
  },
  {
    "text": "the error code for that it has to",
    "start": "600460",
    "end": "602260"
  },
  {
    "text": "maintain all of it",
    "start": "602260",
    "end": "603070"
  },
  {
    "text": "and then lastly our business logic",
    "start": "603070",
    "end": "607540"
  },
  {
    "text": "worker we execute the job versus the",
    "start": "607540",
    "end": "610480"
  },
  {
    "text": "output and we also need interactivity",
    "start": "610480",
    "end": "613300"
  },
  {
    "text": "with other kubernetes live services and",
    "start": "613300",
    "end": "616300"
  },
  {
    "text": "of course the logs have to be on a",
    "start": "616300",
    "end": "618460"
  },
  {
    "text": "shared storage few questions that we",
    "start": "618460",
    "end": "622330"
  },
  {
    "text": "should be thinking at this moment is how",
    "start": "622330",
    "end": "624940"
  },
  {
    "text": "do we package these functions so there",
    "start": "624940",
    "end": "627490"
  },
  {
    "text": "is a full CI CD pipeline which is",
    "start": "627490",
    "end": "629590"
  },
  {
    "text": "expected to do the part definition right",
    "start": "629590",
    "end": "633250"
  },
  {
    "text": "from the goal right from the point when",
    "start": "633250",
    "end": "636910"
  },
  {
    "text": "a developer says that this is a function",
    "start": "636910",
    "end": "638830"
  },
  {
    "text": "and this is the runtime packaging of the",
    "start": "638830",
    "end": "642640"
  },
  {
    "text": "docker container around it and of course",
    "start": "642640",
    "end": "645280"
  },
  {
    "text": "there is respect for our developers how",
    "start": "645280",
    "end": "647050"
  },
  {
    "text": "they have been to publish a particular",
    "start": "647050",
    "end": "649810"
  },
  {
    "text": "container and before we ventured onto",
    "start": "649810",
    "end": "655330"
  },
  {
    "start": "652000",
    "end": "732000"
  },
  {
    "text": "and building pontoon we did",
    "start": "655330",
    "end": "658440"
  },
  {
    "text": "comprehensive analysis upon what's",
    "start": "658440",
    "end": "660550"
  },
  {
    "text": "existing there and out in the market",
    "start": "660550",
    "end": "663220"
  },
  {
    "text": "so we look forward to a few of the",
    "start": "663220",
    "end": "665290"
  },
  {
    "text": "dimensions like native cup kubernetes",
    "start": "665290",
    "end": "668140"
  },
  {
    "text": "integration access to kubernetes cluster",
    "start": "668140",
    "end": "670810"
  },
  {
    "text": "resources what type of packaging our",
    "start": "670810",
    "end": "673900"
  },
  {
    "text": "language bindings does this technologies",
    "start": "673900",
    "end": "676360"
  },
  {
    "text": "support event monitoring persistence",
    "start": "676360",
    "end": "680740"
  },
  {
    "text": "logs and so on and we evaluated four of",
    "start": "680740",
    "end": "684190"
  },
  {
    "text": "them are in i/o fabricate efficient and",
    "start": "684190",
    "end": "686950"
  },
  {
    "text": "open risk if you skip to all of this but",
    "start": "686950",
    "end": "690310"
  },
  {
    "text": "just need read the last lines for the",
    "start": "690310",
    "end": "692800"
  },
  {
    "text": "conspired we thought that we have a good",
    "start": "692800",
    "end": "696310"
  },
  {
    "text": "handle with fabricate function but this",
    "start": "696310",
    "end": "700810"
  },
  {
    "text": "was up approximately about the time when",
    "start": "700810",
    "end": "702850"
  },
  {
    "text": "fabricate was also sandbox so Red Hat",
    "start": "702850",
    "end": "706180"
  },
  {
    "text": "said that if they are no longer going to",
    "start": "706180",
    "end": "707830"
  },
  {
    "text": "support it but rather move towards open",
    "start": "707830",
    "end": "710050"
  },
  {
    "text": "risk or even Qube less so at this moment",
    "start": "710050",
    "end": "714130"
  },
  {
    "text": "we decided that let's invest in our one",
    "start": "714130",
    "end": "717300"
  },
  {
    "text": "now let me introduce my colleague magesh",
    "start": "717300",
    "end": "720550"
  },
  {
    "text": "who will take us through pontoon details",
    "start": "720550",
    "end": "725519"
  },
  {
    "text": "so after all the evaluation we decided",
    "start": "728190",
    "end": "732160"
  },
  {
    "start": "732000",
    "end": "778000"
  },
  {
    "text": "to go ahead with pontoon so what is it",
    "start": "732160",
    "end": "735480"
  },
  {
    "text": "it's a a tide holo structures basically",
    "start": "735480",
    "end": "739420"
  },
  {
    "text": "helps to float in water so what are the",
    "start": "739420",
    "end": "744010"
  },
  {
    "text": "major characteristics of a pontoon is",
    "start": "744010",
    "end": "745600"
  },
  {
    "text": "it's lightweight it built for a purpose",
    "start": "745600",
    "end": "747850"
  },
  {
    "text": "and it's versatile so what do we mean by",
    "start": "747850",
    "end": "749470"
  },
  {
    "text": "like that so the whole point on",
    "start": "749470",
    "end": "751570"
  },
  {
    "text": "infrastructure can be deployed in your",
    "start": "751570",
    "end": "753640"
  },
  {
    "text": "cluster using a single deployment file",
    "start": "753640",
    "end": "755530"
  },
  {
    "text": "it's cube apply for a deployment",
    "start": "755530",
    "end": "757630"
  },
  {
    "text": "deployment Yama file nothing else and",
    "start": "757630",
    "end": "760230"
  },
  {
    "text": "it's built considering the scenario that",
    "start": "760230",
    "end": "763270"
  },
  {
    "text": "you already have a cube Nettie's cluster",
    "start": "763270",
    "end": "765160"
  },
  {
    "text": "which was our case that was productive",
    "start": "765160",
    "end": "767680"
  },
  {
    "text": "productionize for more than a year and",
    "start": "767680",
    "end": "769720"
  },
  {
    "text": "we quickly needed a solution and it it",
    "start": "769720",
    "end": "773440"
  },
  {
    "text": "works so it helps to float the functions",
    "start": "773440",
    "end": "776500"
  },
  {
    "text": "around so we had lot of white boring",
    "start": "776500",
    "end": "780160"
  },
  {
    "text": "while designing pontoon and we took few",
    "start": "780160",
    "end": "783310"
  },
  {
    "text": "major choices the first being even",
    "start": "783310",
    "end": "786670"
  },
  {
    "text": "though to support polygons we",
    "start": "786670",
    "end": "789070"
  },
  {
    "text": "standardized we decided to use",
    "start": "789070",
    "end": "790839"
  },
  {
    "text": "containers we said pontoon will not",
    "start": "790839",
    "end": "794020"
  },
  {
    "text": "directly interact with Docherty",
    "start": "794020",
    "end": "795820"
  },
  {
    "text": "directly right so we don't want to",
    "start": "795820",
    "end": "797770"
  },
  {
    "text": "handle deigned or doctor inside docker",
    "start": "797770",
    "end": "800500"
  },
  {
    "text": "or dock or on top of docker we do not",
    "start": "800500",
    "end": "802990"
  },
  {
    "text": "want to handle how to clean up the image",
    "start": "802990",
    "end": "804850"
  },
  {
    "text": "once it's been executed or if you would",
    "start": "804850",
    "end": "807850"
  },
  {
    "text": "under docker with then given a new name",
    "start": "807850",
    "end": "810160"
  },
  {
    "text": "how does your monitoring tools",
    "start": "810160",
    "end": "811600"
  },
  {
    "text": "understand it if you wanna debug how you",
    "start": "811600",
    "end": "813850"
  },
  {
    "text": "can get inside a container dynamically",
    "start": "813850",
    "end": "815620"
  },
  {
    "text": "so we said we are not going to deal with",
    "start": "815620",
    "end": "818260"
  },
  {
    "text": "all those things rather we will go with",
    "start": "818260",
    "end": "819970"
  },
  {
    "text": "Cuban it is very communities job and",
    "start": "819970",
    "end": "823780"
  },
  {
    "text": "deployment looks like solving all the",
    "start": "823780",
    "end": "826000"
  },
  {
    "text": "problem for us so Cuban it is job so it",
    "start": "826000",
    "end": "831040"
  },
  {
    "text": "provides two awesome abilities the first",
    "start": "831040",
    "end": "833380"
  },
  {
    "text": "one is you can tell how many times a pod",
    "start": "833380",
    "end": "837340"
  },
  {
    "text": "should be completed before a job can be",
    "start": "837340",
    "end": "839770"
  },
  {
    "text": "considered as complete which you can map",
    "start": "839770",
    "end": "842140"
  },
  {
    "text": "it to like what do your incoming pending",
    "start": "842140",
    "end": "845110"
  },
  {
    "text": "events can be directly mapped to number",
    "start": "845110",
    "end": "847420"
  },
  {
    "text": "of times your core should be completed",
    "start": "847420",
    "end": "848740"
  },
  {
    "text": "and at the same time we can also tell",
    "start": "848740",
    "end": "851170"
  },
  {
    "text": "how many at any given point in time",
    "start": "851170",
    "end": "853660"
  },
  {
    "text": "how many pods can be executed parallely",
    "start": "853660",
    "end": "856330"
  },
  {
    "text": "so why it's required it's very easy for",
    "start": "856330",
    "end": "860560"
  },
  {
    "text": "us to say function can scale to a great",
    "start": "860560",
    "end": "863260"
  },
  {
    "text": "extent like event scale but the real",
    "start": "863260",
    "end": "866350"
  },
  {
    "text": "problem comes with respect to what your",
    "start": "866350",
    "end": "869020"
  },
  {
    "text": "function is actually doing if your",
    "start": "869020",
    "end": "870940"
  },
  {
    "text": "function is depending on few databases",
    "start": "870940",
    "end": "873520"
  },
  {
    "text": "to retrieve data you are limited based",
    "start": "873520",
    "end": "876940"
  },
  {
    "text": "on the concurrency that your database",
    "start": "876940",
    "end": "879310"
  },
  {
    "text": "can hold so it became for us very what",
    "start": "879310",
    "end": "883090"
  },
  {
    "text": "it became it's very important for you to",
    "start": "883090",
    "end": "885490"
  },
  {
    "text": "limit how many functions can be executed",
    "start": "885490",
    "end": "888430"
  },
  {
    "text": "parallely we cannot don't play that",
    "start": "888430",
    "end": "890650"
  },
  {
    "text": "aspect so what what community's job",
    "start": "890650",
    "end": "895090"
  },
  {
    "text": "doesn't do our let's user to do is how",
    "start": "895090",
    "end": "897730"
  },
  {
    "text": "to actually do the message passing if",
    "start": "897730",
    "end": "900790"
  },
  {
    "text": "your parts are running five concurrently",
    "start": "900790",
    "end": "902740"
  },
  {
    "text": "it's going to run like hundred times",
    "start": "902740",
    "end": "904630"
  },
  {
    "text": "what are the corresponding inputs that",
    "start": "904630",
    "end": "906310"
  },
  {
    "text": "you have to pass through the pod so that",
    "start": "906310",
    "end": "908350"
  },
  {
    "text": "is left to the users and ponton uses",
    "start": "908350",
    "end": "911470"
  },
  {
    "text": "that effectively so if you want warm",
    "start": "911470",
    "end": "915610"
  },
  {
    "text": "nodes in order to reduce the startup",
    "start": "915610",
    "end": "918250"
  },
  {
    "text": "time we can use given a test deployment",
    "start": "918250",
    "end": "919870"
  },
  {
    "text": "same construct you can use cuban a",
    "start": "919870",
    "end": "923350"
  },
  {
    "text": "scale-up to determine the parallel",
    "start": "923350",
    "end": "925570"
  },
  {
    "text": "executions",
    "start": "925570",
    "end": "927700"
  },
  {
    "text": "the pontoon is written in Java it's not",
    "start": "927700",
    "end": "930850"
  },
  {
    "text": "in golang and we do not aim for a pure",
    "start": "930850",
    "end": "935110"
  },
  {
    "text": "play function as a service if you are",
    "start": "935110",
    "end": "938650"
  },
  {
    "text": "thinking of like and and security",
    "start": "938650",
    "end": "940720"
  },
  {
    "text": "multi-tenancy those things are not in we",
    "start": "940720",
    "end": "942910"
  },
  {
    "text": "hugely depend on cuban it is cluster for",
    "start": "942910",
    "end": "945130"
  },
  {
    "text": "auth and so on so forth so let's see how",
    "start": "945130",
    "end": "949420"
  },
  {
    "start": "948000",
    "end": "1165000"
  },
  {
    "text": "pontoon works right so it has three",
    "start": "949420",
    "end": "951910"
  },
  {
    "text": "major components the first one is the",
    "start": "951910",
    "end": "953890"
  },
  {
    "text": "pontoon API set were so this is the only",
    "start": "953890",
    "end": "957430"
  },
  {
    "text": "state full component in the whole",
    "start": "957430",
    "end": "958690"
  },
  {
    "text": "architecture and it's built using Zenon",
    "start": "958690",
    "end": "962170"
  },
  {
    "text": "micro service framework so it's highly",
    "start": "962170",
    "end": "964000"
  },
  {
    "text": "available you can start as many replicas",
    "start": "964000",
    "end": "966280"
  },
  {
    "text": "as you want the replication is handled",
    "start": "966280",
    "end": "968770"
  },
  {
    "text": "by its own framework and it's dr capable",
    "start": "968770",
    "end": "971740"
  },
  {
    "text": "so it has streaming backup to history at",
    "start": "971740",
    "end": "974320"
  },
  {
    "text": "the moment so at any given point in time",
    "start": "974320",
    "end": "976720"
  },
  {
    "text": "you can recover from history if your",
    "start": "976720",
    "end": "978490"
  },
  {
    "text": "cluster is lost for some of the other",
    "start": "978490",
    "end": "980260"
  },
  {
    "text": "reason okay it primarily holds meta data",
    "start": "980260",
    "end": "984310"
  },
  {
    "text": "so how to register a function it's a",
    "start": "984310",
    "end": "987280"
  },
  {
    "text": "test API where you define what your",
    "start": "987280",
    "end": "990160"
  },
  {
    "text": "function is like a docker image and you",
    "start": "990160",
    "end": "992230"
  },
  {
    "text": "register it then how to trigger a",
    "start": "992230",
    "end": "995710"
  },
  {
    "text": "function or vendors a function triggers",
    "start": "995710",
    "end": "997450"
  },
  {
    "text": "whenever an event is been thrown so",
    "start": "997450",
    "end": "1000900"
  },
  {
    "text": "event can be registered by firing a post",
    "start": "1000900",
    "end": "1003120"
  },
  {
    "text": "API so the event goes and sits in the",
    "start": "1003120",
    "end": "1005610"
  },
  {
    "text": "event queue this is a priority queue and",
    "start": "1005610",
    "end": "1008010"
  },
  {
    "text": "it's built on top of Zenon itself so the",
    "start": "1008010",
    "end": "1011010"
  },
  {
    "text": "priority is applicable only within a",
    "start": "1011010",
    "end": "1012840"
  },
  {
    "text": "type of function so if you have three",
    "start": "1012840",
    "end": "1014340"
  },
  {
    "text": "different functions priorities are",
    "start": "1014340",
    "end": "1015870"
  },
  {
    "text": "effective only within a function not",
    "start": "1015870",
    "end": "1017520"
  },
  {
    "text": "across functions so the next component",
    "start": "1017520",
    "end": "1020160"
  },
  {
    "text": "is this scalar which keeps on monitoring",
    "start": "1020160",
    "end": "1023130"
  },
  {
    "text": "the event queue so by looking at the",
    "start": "1023130",
    "end": "1025680"
  },
  {
    "text": "event queue it understands what are the",
    "start": "1025680",
    "end": "1028860"
  },
  {
    "text": "pending events that it has to process it",
    "start": "1028860",
    "end": "1032189"
  },
  {
    "text": "also looks at the capabilities API",
    "start": "1032190",
    "end": "1033990"
  },
  {
    "text": "server to figure out the status of the",
    "start": "1033990",
    "end": "1036689"
  },
  {
    "text": "jobs and deployments that it has",
    "start": "1036690",
    "end": "1038400"
  },
  {
    "text": "previously created so now it has the",
    "start": "1038400",
    "end": "1040980"
  },
  {
    "text": "view of what is pending and what are the",
    "start": "1040980",
    "end": "1043620"
  },
  {
    "text": "available slots by looking at what is",
    "start": "1043620",
    "end": "1046170"
  },
  {
    "text": "already executing it can detect that",
    "start": "1046170",
    "end": "1048150"
  },
  {
    "text": "okay",
    "start": "1048150",
    "end": "1048990"
  },
  {
    "text": "the function is configured for fie",
    "start": "1048990",
    "end": "1050520"
  },
  {
    "text": "parallelism whereas the jobs are already",
    "start": "1050520",
    "end": "1053610"
  },
  {
    "text": "done in with two concurrency which means",
    "start": "1053610",
    "end": "1055320"
  },
  {
    "text": "when it's creating a new definition it",
    "start": "1055320",
    "end": "1056940"
  },
  {
    "text": "has to run only with three concurrency",
    "start": "1056940",
    "end": "1058590"
  },
  {
    "text": "so it has a basic that logic and it",
    "start": "1058590",
    "end": "1061889"
  },
  {
    "text": "creates a job definition dynamically and",
    "start": "1061889",
    "end": "1064309"
  },
  {
    "text": "it interacts with the API server to",
    "start": "1064309",
    "end": "1066629"
  },
  {
    "text": "create the job definitions now when a",
    "start": "1066629",
    "end": "1069659"
  },
  {
    "text": "job is deployed you can see it not only",
    "start": "1069659",
    "end": "1072360"
  },
  {
    "text": "has the function reported but it also",
    "start": "1072360",
    "end": "1074639"
  },
  {
    "text": "has a sidecar watcher so the watcher",
    "start": "1074639",
    "end": "1077309"
  },
  {
    "text": "keeps on watching the reporter to say",
    "start": "1077309",
    "end": "1078960"
  },
  {
    "text": "okay you are supposed to execute for",
    "start": "1078960",
    "end": "1081870"
  },
  {
    "text": "five minutes but you are going beyond",
    "start": "1081870",
    "end": "1083820"
  },
  {
    "text": "the five minutes so let me time it out",
    "start": "1083820",
    "end": "1085259"
  },
  {
    "text": "so it does a mini lifecycle management",
    "start": "1085259",
    "end": "1087779"
  },
  {
    "text": "of the function and it also speaks to",
    "start": "1087779",
    "end": "1090389"
  },
  {
    "text": "the API server to get the event so when",
    "start": "1090389",
    "end": "1096029"
  },
  {
    "text": "pods are executing parallely you need",
    "start": "1096029",
    "end": "1098639"
  },
  {
    "text": "someone to ensure I event is been picked",
    "start": "1098639",
    "end": "1100710"
  },
  {
    "text": "by only one person at a time",
    "start": "1100710",
    "end": "1102210"
  },
  {
    "text": "basically acquire a lock and if your",
    "start": "1102210",
    "end": "1104730"
  },
  {
    "text": "function goes crazy you have the release",
    "start": "1104730",
    "end": "1106499"
  },
  {
    "text": "a lock so that it can be retried so the",
    "start": "1106499",
    "end": "1108509"
  },
  {
    "text": "those jobs are big by watcher okay",
    "start": "1108509",
    "end": "1111899"
  },
  {
    "text": "finally so how does your function gets",
    "start": "1111899",
    "end": "1114570"
  },
  {
    "text": "the input so your function simply sees",
    "start": "1114570",
    "end": "1116960"
  },
  {
    "text": "fires I get a PA on localhost 8080 I am",
    "start": "1116960",
    "end": "1124950"
  },
  {
    "text": "done or failed to indicate success or",
    "start": "1124950",
    "end": "1126749"
  },
  {
    "text": "failure so the every other logic has",
    "start": "1126749",
    "end": "1130710"
  },
  {
    "text": "been wrapped inside the sidecar watcher",
    "start": "1130710",
    "end": "1133100"
  },
  {
    "text": "so now we have a full end-to-end flow",
    "start": "1133100",
    "end": "1136129"
  },
  {
    "text": "executing so the same thing is",
    "start": "1136129",
    "end": "1138419"
  },
  {
    "text": "applicable for the warm notes with a",
    "start": "1138419",
    "end": "1140940"
  },
  {
    "text": "difference being instead of job we now",
    "start": "1140940",
    "end": "1143249"
  },
  {
    "text": "create deployment and instead of a",
    "start": "1143249",
    "end": "1146759"
  },
  {
    "text": "normal container we need to have a warm",
    "start": "1146759",
    "end": "1149129"
  },
  {
    "text": "container which has some more logic to",
    "start": "1149129",
    "end": "1150990"
  },
  {
    "text": "simulate the completions that's provided",
    "start": "1150990",
    "end": "1153119"
  },
  {
    "text": "by cubing at this job and we again use a",
    "start": "1153119",
    "end": "1157440"
  },
  {
    "text": "cube annuity scale-up to determine the",
    "start": "1157440",
    "end": "1159210"
  },
  {
    "text": "parallel concurrency okay so let's see",
    "start": "1159210",
    "end": "1165899"
  },
  {
    "text": "what are the other capabilities that's",
    "start": "1165899",
    "end": "1168119"
  },
  {
    "text": "available in Ponto so you can define",
    "start": "1168119",
    "end": "1171059"
  },
  {
    "text": "functions and group multiple functions",
    "start": "1171059",
    "end": "1172889"
  },
  {
    "text": "in a single app we have the ability to",
    "start": "1172889",
    "end": "1176070"
  },
  {
    "text": "pass static configurations both at an",
    "start": "1176070",
    "end": "1178320"
  },
  {
    "text": "app level and at a function level those",
    "start": "1178320",
    "end": "1180809"
  },
  {
    "text": "configurations can be received as a",
    "start": "1180809",
    "end": "1182340"
  },
  {
    "text": "header or as an environment variable so",
    "start": "1182340",
    "end": "1185490"
  },
  {
    "text": "you have a ability to configure retry",
    "start": "1185490",
    "end": "1187559"
  },
  {
    "text": "number of parallelism that you want to",
    "start": "1187559",
    "end": "1190019"
  },
  {
    "text": "achieve you also have able",
    "start": "1190019",
    "end": "1192450"
  },
  {
    "text": "to define a cron to create these events",
    "start": "1192450",
    "end": "1195929"
  },
  {
    "text": "automatically so if you want to create",
    "start": "1195929",
    "end": "1197580"
  },
  {
    "text": "your function can be invoked only by eye",
    "start": "1197580",
    "end": "1199950"
  },
  {
    "text": "on the event and events can be created",
    "start": "1199950",
    "end": "1202109"
  },
  {
    "text": "by setting up a cron see every five",
    "start": "1202109",
    "end": "1204989"
  },
  {
    "text": "minutes create an event of this",
    "start": "1204989",
    "end": "1206159"
  },
  {
    "text": "particular type and it integrates",
    "start": "1206159",
    "end": "1209489"
  },
  {
    "text": "perfectly with open tracing so if",
    "start": "1209489",
    "end": "1211590"
  },
  {
    "text": "incoming event has a trace ID it retains",
    "start": "1211590",
    "end": "1214590"
  },
  {
    "text": "it and passes to the function if it",
    "start": "1214590",
    "end": "1217379"
  },
  {
    "text": "doesn't it creates the Nutri city that",
    "start": "1217379",
    "end": "1221279"
  },
  {
    "text": "is applicable when we have cron kind of",
    "start": "1221279",
    "end": "1223259"
  },
  {
    "text": "scenarios so one of the most important",
    "start": "1223259",
    "end": "1227999"
  },
  {
    "start": "1225000",
    "end": "1293000"
  },
  {
    "text": "reason for us to build this from ground",
    "start": "1227999",
    "end": "1229799"
  },
  {
    "text": "up was the operational aspects of it so",
    "start": "1229799",
    "end": "1232940"
  },
  {
    "text": "it has to integrate with your existing",
    "start": "1232940",
    "end": "1235590"
  },
  {
    "text": "login solutions you if you have already",
    "start": "1235590",
    "end": "1238230"
  },
  {
    "text": "a Cuban Attis deployment cluster in",
    "start": "1238230",
    "end": "1240720"
  },
  {
    "text": "production you have your own login",
    "start": "1240720",
    "end": "1242639"
  },
  {
    "text": "solutions you have your own monitoring",
    "start": "1242639",
    "end": "1244320"
  },
  {
    "text": "solutions like your own page of duty so",
    "start": "1244320",
    "end": "1247379"
  },
  {
    "text": "on so forth right so it has to work well",
    "start": "1247379",
    "end": "1249509"
  },
  {
    "text": "with everything since we have build",
    "start": "1249509",
    "end": "1251580"
  },
  {
    "text": "everything on top of key when it is and",
    "start": "1251580",
    "end": "1253259"
  },
  {
    "text": "we don't dynamically create any",
    "start": "1253259",
    "end": "1255570"
  },
  {
    "text": "containers rather depend on Cuban it is",
    "start": "1255570",
    "end": "1257460"
  },
  {
    "text": "construct all of those simply works and",
    "start": "1257460",
    "end": "1260179"
  },
  {
    "text": "we had an use case where these things",
    "start": "1260179",
    "end": "1263039"
  },
  {
    "text": "should run on a private cloud by",
    "start": "1263039",
    "end": "1264659"
  },
  {
    "text": "deploying cuban it is on private cloud",
    "start": "1264659",
    "end": "1267080"
  },
  {
    "text": "testing simply works so one other",
    "start": "1267080",
    "end": "1270179"
  },
  {
    "text": "important aspect is when we are writing",
    "start": "1270179",
    "end": "1273359"
  },
  {
    "text": "a function how do you enable it to test",
    "start": "1273359",
    "end": "1275429"
  },
  {
    "text": "right so it becomes a limiting factor in",
    "start": "1275429",
    "end": "1278369"
  },
  {
    "text": "a lot of frameworks so with pontoon it's",
    "start": "1278369",
    "end": "1281759"
  },
  {
    "text": "very simple Larry you can bring a",
    "start": "1281759",
    "end": "1283320"
  },
  {
    "text": "passing simple HTTP mock server and all",
    "start": "1283320",
    "end": "1285869"
  },
  {
    "text": "you need is a three api box like get",
    "start": "1285869",
    "end": "1288899"
  },
  {
    "text": "input communicate success or failure so",
    "start": "1288899",
    "end": "1293999"
  },
  {
    "start": "1293000",
    "end": "1340000"
  },
  {
    "text": "let's see a quick demo right so this is",
    "start": "1293999",
    "end": "1297450"
  },
  {
    "text": "an java application or all it does is it",
    "start": "1297450",
    "end": "1302279"
  },
  {
    "text": "tries to get a range from the input and",
    "start": "1302279",
    "end": "1305159"
  },
  {
    "text": "it finds all the prime numbers between",
    "start": "1305159",
    "end": "1306749"
  },
  {
    "text": "that range and it says i am done with",
    "start": "1306749",
    "end": "1311159"
  },
  {
    "text": "this output or if it fails it gives the",
    "start": "1311159",
    "end": "1313590"
  },
  {
    "text": "failure so quickly right",
    "start": "1313590",
    "end": "1319630"
  },
  {
    "text": "all we are doing is okay find me all the",
    "start": "1319630",
    "end": "1322630"
  },
  {
    "text": "prime numbers between 1 and thousand so",
    "start": "1322630",
    "end": "1326620"
  },
  {
    "text": "we triggered any event now if you see we",
    "start": "1326620",
    "end": "1332260"
  },
  {
    "text": "have triggered an event for demo okay so",
    "start": "1332260",
    "end": "1342490"
  },
  {
    "start": "1340000",
    "end": "1389000"
  },
  {
    "text": "yeah we came great in duplicate events",
    "start": "1342490",
    "end": "1345070"
  },
  {
    "text": "we created an event to find all the",
    "start": "1345070",
    "end": "1347440"
  },
  {
    "text": "prime numbers between 1 and thousand so",
    "start": "1347440",
    "end": "1350460"
  },
  {
    "text": "we fired it against demo and prime",
    "start": "1350460",
    "end": "1353500"
  },
  {
    "text": "Waddesdon one prime demo is our app that",
    "start": "1353500",
    "end": "1355930"
  },
  {
    "text": "we have created earlier and prime is the",
    "start": "1355930",
    "end": "1358270"
  },
  {
    "text": "function that's been registered already",
    "start": "1358270",
    "end": "1360010"
  },
  {
    "text": "in second docker container that we have",
    "start": "1360010",
    "end": "1361660"
  },
  {
    "text": "registered",
    "start": "1361660",
    "end": "1363810"
  },
  {
    "text": "[Music]",
    "start": "1375760",
    "end": "1378900"
  },
  {
    "text": "so yeah so we registered a function",
    "start": "1387760",
    "end": "1390920"
  },
  {
    "start": "1389000",
    "end": "1438000"
  },
  {
    "text": "where you have given a docker image of a",
    "start": "1390920",
    "end": "1392870"
  },
  {
    "text": "particular version and you clear that",
    "start": "1392870",
    "end": "1396470"
  },
  {
    "text": "event just by passing a payload now what",
    "start": "1396470",
    "end": "1398840"
  },
  {
    "text": "happens is your function would have been",
    "start": "1398840",
    "end": "1400370"
  },
  {
    "text": "started and your function is saying I am",
    "start": "1400370",
    "end": "1403280"
  },
  {
    "text": "going to read the input as a long array",
    "start": "1403280",
    "end": "1406010"
  },
  {
    "text": "and I'm going to create I'm going to",
    "start": "1406010",
    "end": "1408380"
  },
  {
    "text": "compute the prime numbers so when you",
    "start": "1408380",
    "end": "1410120"
  },
  {
    "text": "execute your function you get an event",
    "start": "1410120",
    "end": "1412310"
  },
  {
    "text": "ID which you can query against so okay",
    "start": "1412310",
    "end": "1421280"
  },
  {
    "text": "so you can see all the functions that we",
    "start": "1421280",
    "end": "1423830"
  },
  {
    "text": "have created and you can also see the",
    "start": "1423830",
    "end": "1427490"
  },
  {
    "text": "response body so we asked you to find",
    "start": "1427490",
    "end": "1430940"
  },
  {
    "text": "prime numbers between 1 and thousands",
    "start": "1430940",
    "end": "1432470"
  },
  {
    "text": "and it has found something's and you've",
    "start": "1432470",
    "end": "1434090"
  },
  {
    "text": "got the response back going back the",
    "start": "1434090",
    "end": "1439130"
  },
  {
    "start": "1438000",
    "end": "1470000"
  },
  {
    "text": "most important aspect is yes whatever",
    "start": "1439130",
    "end": "1442220"
  },
  {
    "text": "log monitoring solution you had earlier",
    "start": "1442220",
    "end": "1444110"
  },
  {
    "text": "it works so you will be able to see the",
    "start": "1444110",
    "end": "1447290"
  },
  {
    "text": "logs using whatever solution you already",
    "start": "1447290",
    "end": "1449720"
  },
  {
    "text": "had if you had few dashboards that you",
    "start": "1449720",
    "end": "1453890"
  },
  {
    "text": "have built on top of used based on logs",
    "start": "1453890",
    "end": "1457280"
  },
  {
    "text": "or based on data log for your monitoring",
    "start": "1457280",
    "end": "1460040"
  },
  {
    "text": "all those tools works so whatever you",
    "start": "1460040",
    "end": "1462680"
  },
  {
    "text": "have whatever investment you have made",
    "start": "1462680",
    "end": "1464660"
  },
  {
    "text": "already on Kuban it is cluster you can",
    "start": "1464660",
    "end": "1467150"
  },
  {
    "text": "completely leverage that using pontoon",
    "start": "1467150",
    "end": "1470440"
  },
  {
    "start": "1470000",
    "end": "1557000"
  },
  {
    "text": "so finally our experience or before you",
    "start": "1470440",
    "end": "1476330"
  },
  {
    "text": "picking some open source framework just",
    "start": "1476330",
    "end": "1479090"
  },
  {
    "text": "look at your requirements and see",
    "start": "1479090",
    "end": "1481040"
  },
  {
    "text": "whether it fits exactly or not since",
    "start": "1481040",
    "end": "1483590"
  },
  {
    "text": "errorless is in very earlier phase there",
    "start": "1483590",
    "end": "1485390"
  },
  {
    "text": "are so many projects and lot of them are",
    "start": "1485390",
    "end": "1487940"
  },
  {
    "text": "getting better day by day and back in",
    "start": "1487940",
    "end": "1492170"
  },
  {
    "text": "time we didn't find one suitable one and",
    "start": "1492170",
    "end": "1495320"
  },
  {
    "text": "we had to build something on our own and",
    "start": "1495320",
    "end": "1497270"
  },
  {
    "text": "it was very easy given I discuss all the",
    "start": "1497270",
    "end": "1500450"
  },
  {
    "text": "heavy lifting",
    "start": "1500450",
    "end": "1501790"
  },
  {
    "text": "so when using service we have to watch",
    "start": "1501790",
    "end": "1505130"
  },
  {
    "text": "out for scalability issues not with",
    "start": "1505130",
    "end": "1507170"
  },
  {
    "text": "respect to the actual function but with",
    "start": "1507170",
    "end": "1509900"
  },
  {
    "text": "respect to all if all of its",
    "start": "1509900",
    "end": "1511250"
  },
  {
    "text": "dependencies so even though there is no",
    "start": "1511250",
    "end": "1514580"
  },
  {
    "text": "server you still have to do lot of",
    "start": "1514580",
    "end": "1516350"
  },
  {
    "text": "operations you are observing",
    "start": "1516350",
    "end": "1518919"
  },
  {
    "text": "dream becomes more and more tougher if",
    "start": "1518919",
    "end": "1521350"
  },
  {
    "text": "not none but by adopting Cerberus what",
    "start": "1521350",
    "end": "1526299"
  },
  {
    "text": "you can observe this your product",
    "start": "1526299",
    "end": "1528009"
  },
  {
    "text": "becomes more and more robust and it",
    "start": "1528009",
    "end": "1529989"
  },
  {
    "text": "starts transition into fellow factor",
    "start": "1529989",
    "end": "1531999"
  },
  {
    "text": "that if you are all familiar with it so",
    "start": "1531999",
    "end": "1534609"
  },
  {
    "text": "what we saw is by using pontoon we were",
    "start": "1534609",
    "end": "1537460"
  },
  {
    "text": "able to save more than thousand bucks a",
    "start": "1537460",
    "end": "1539529"
  },
  {
    "text": "day and we are expecting our scale will",
    "start": "1539529",
    "end": "1543460"
  },
  {
    "text": "go up like 10x by end of this year and",
    "start": "1543460",
    "end": "1546369"
  },
  {
    "text": "we are looking how we can enhance this",
    "start": "1546369",
    "end": "1549159"
  },
  {
    "text": "to dynamically leverage AWS spot",
    "start": "1549159",
    "end": "1552249"
  },
  {
    "text": "instances instead of three different ec2",
    "start": "1552249",
    "end": "1556919"
  },
  {
    "text": "yeah if you have any questions we'll be",
    "start": "1556919",
    "end": "1560080"
  },
  {
    "text": "happy to answer",
    "start": "1560080",
    "end": "1562590"
  },
  {
    "text": "so the question is if we were to start",
    "start": "1580400",
    "end": "1583320"
  },
  {
    "text": "today what are the options we will look",
    "start": "1583320",
    "end": "1584670"
  },
  {
    "text": "forward to of course new things which",
    "start": "1584670",
    "end": "1586500"
  },
  {
    "text": "have come up is Cube less it is very",
    "start": "1586500",
    "end": "1589590"
  },
  {
    "text": "exciting and even open risk is now more",
    "start": "1589590",
    "end": "1592440"
  },
  {
    "text": "mature so these two options yes we",
    "start": "1592440",
    "end": "1595559"
  },
  {
    "text": "should",
    "start": "1595559",
    "end": "1597740"
  },
  {
    "text": "[Applause]",
    "start": "1610040",
    "end": "1613849"
  }
]