[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "the last topic for tonight is interoperability of open source tools the emergence of",
    "start": "19119",
    "end": "26480"
  },
  {
    "text": "interface by kt gamanji clan cloud platform engineer from american",
    "start": "26480",
    "end": "34160"
  },
  {
    "text": "express welcome",
    "start": "34160",
    "end": "37760"
  },
  {
    "start": "40000",
    "end": "92000"
  },
  {
    "text": "hello my name is katie gomanje and i'm one of the cloud platform engineer for american express",
    "start": "41360",
    "end": "47840"
  },
  {
    "text": "around two months ago i joined american express and i am part of the team that aims to transform the current platform",
    "start": "47840",
    "end": "53760"
  },
  {
    "text": "by embracing the cloud native principles and making the best use of the open source tools",
    "start": "53760",
    "end": "59359"
  },
  {
    "text": "as well quite recently i've been nominated one of the toc or technical oversight committee member",
    "start": "59359",
    "end": "64400"
  },
  {
    "text": "for the cmcf alongside 11 other champions within the open source community",
    "start": "64400",
    "end": "70000"
  },
  {
    "text": "i'll be responsible to steer and maintain the technical vision for the cncf landscape",
    "start": "70000",
    "end": "75600"
  },
  {
    "text": "pretty much we are the committee that enables and leverages projects to join the open source community",
    "start": "75600",
    "end": "83119"
  },
  {
    "text": "today i would like to talk about the interoperability of open source tools and more specifically the emergence of",
    "start": "83119",
    "end": "90240"
  },
  {
    "text": "interfaces six years ago the container orchestrated",
    "start": "90240",
    "end": "96000"
  },
  {
    "start": "92000",
    "end": "175000"
  },
  {
    "text": "framework space was very heavily diversified we had tools such as docusworm apache",
    "start": "96000",
    "end": "102159"
  },
  {
    "text": "mesos kubernetes coreos fleet and all of them provided a viable solution to run containers at",
    "start": "102159",
    "end": "108320"
  },
  {
    "text": "scale over in the last years kubernetes took the lead in maintaining and defining the",
    "start": "108320",
    "end": "114159"
  },
  {
    "text": "way to run containerized workloads nowadays kubernetes is known for its portability",
    "start": "114159",
    "end": "119759"
  },
  {
    "text": "and scalability but more importantly for its approach towards the clarity of configuration",
    "start": "119759",
    "end": "124960"
  },
  {
    "text": "and automation and this prompted for multiple tools to be built around kubernetes",
    "start": "124960",
    "end": "130399"
  },
  {
    "text": "to extend its functionalities and this created what today we know as the cloud native landscape which",
    "start": "130399",
    "end": "136560"
  },
  {
    "text": "resides under the cncf umbrella or cloud native computing foundation",
    "start": "136560",
    "end": "142560"
  },
  {
    "text": "however if you look into all these tools some of them are going to provision the same capabilities such as storage or networking at the",
    "start": "142560",
    "end": "150160"
  },
  {
    "text": "beginning most of these tools had their own way to converge with the kubernetes components and this was not sustainable to move",
    "start": "150160",
    "end": "156480"
  },
  {
    "text": "forward because there was a growing interest actually converging more and more with kubernetes platform",
    "start": "156480",
    "end": "164000"
  },
  {
    "text": "it was clear that it was necessary to have a set of standards and this prompted for the appearance of",
    "start": "164000",
    "end": "170879"
  },
  {
    "text": "interfaces and this is what i would like to talk to you about today",
    "start": "170879",
    "end": "176319"
  },
  {
    "start": "175000",
    "end": "285000"
  },
  {
    "text": "to do so i would like to introduce the container network and container runtime interfaces",
    "start": "176319",
    "end": "181680"
  },
  {
    "text": "and how this page the path towards standardization and guidelines within the kubernetes ecosystem",
    "start": "181680",
    "end": "188640"
  },
  {
    "text": "these two tools or interfaces networking and runtime were crucial to make the transition",
    "start": "188640",
    "end": "193920"
  },
  {
    "text": "between the vms and container seamless secondly i would like to talk about",
    "start": "193920",
    "end": "200319"
  },
  {
    "text": "something which i identify as the innovation wave and at this point the community concerns itself more and more with the",
    "start": "200319",
    "end": "206159"
  },
  {
    "text": "extensibility of kubernetes rather than settling down to very assertive tooling",
    "start": "206159",
    "end": "213040"
  },
  {
    "text": "this is going to be confirmed by the appearance of service mesh interface and storage interface as well as cluster",
    "start": "213040",
    "end": "218640"
  },
  {
    "text": "api and i'd like to conclude by providing the impact",
    "start": "218640",
    "end": "224319"
  },
  {
    "text": "that the emergence of interfaces head and vendors and users and the community before i move forward",
    "start": "224319",
    "end": "231920"
  },
  {
    "text": "with the topic i would like to introduce kubernetes numbers as it is today",
    "start": "231920",
    "end": "237040"
  },
  {
    "text": "based on the cncf survey in 2019 more than 58 of the companies are using",
    "start": "237040",
    "end": "242560"
  },
  {
    "text": "kubernetes in production the other 42 percent are actually prototyping kubernetes",
    "start": "242560",
    "end": "247840"
  },
  {
    "text": "as a viable solution to move forward another milestone i'd like to mention here is that more than 2 000 companies are",
    "start": "247840",
    "end": "254879"
  },
  {
    "text": "using kubernetes in an enterprise setup and this actually showcases the maturity",
    "start": "254879",
    "end": "259919"
  },
  {
    "text": "and the high adoption rate for kubernetes when a transition towards the development community more than 2 000",
    "start": "259919",
    "end": "267280"
  },
  {
    "text": "engineers are actively contributing towards the feature build out and bug fixing and when we look into the",
    "start": "267280",
    "end": "274240"
  },
  {
    "text": "end user community more than 23 000 attendees were registered at the kipcons around the",
    "start": "274240",
    "end": "279440"
  },
  {
    "text": "world and this is going to be kubecon in europe china and north america",
    "start": "279440",
    "end": "285840"
  },
  {
    "start": "285000",
    "end": "745000"
  },
  {
    "text": "however the community around kubernetes was not always as developed and flourishing but more importantly it",
    "start": "286000",
    "end": "291840"
  },
  {
    "text": "was not always as engaging the picture at the beginning was rather different",
    "start": "291840",
    "end": "297360"
  },
  {
    "text": "nowadays kubernetes it's known for its adaptability and flexibility to run containerized workloads of",
    "start": "297360",
    "end": "302800"
  },
  {
    "text": "predefined technical requirements it is capable to provision the ecosystem for application execution",
    "start": "302800",
    "end": "309440"
  },
  {
    "text": "while shrinking considerably its footprint in the cluster it's all about resourceful management of",
    "start": "309440",
    "end": "315199"
  },
  {
    "text": "capacity however to reach the state of the art complex challenges required",
    "start": "315199",
    "end": "320720"
  },
  {
    "text": "solutionizing such as the support for different networking and hardware systems",
    "start": "320720",
    "end": "325840"
  },
  {
    "text": "and this prompted for the cni and cri to be developed so pretty much the container network",
    "start": "325840",
    "end": "331600"
  },
  {
    "text": "interface and the container runtime interface the cni was introduced under the cfc ncf",
    "start": "331600",
    "end": "338639"
  },
  {
    "text": "umbrella in early 2017 while the cri was introduced in its alpha release in kubernetes 1.5",
    "start": "338639",
    "end": "346240"
  },
  {
    "text": "i would like to dive a bit more into the networking and runtime components as these were pivotal in making the",
    "start": "346240",
    "end": "352479"
  },
  {
    "text": "transition between the vms and continuous seamless so pretty much how do we make sure that we have the",
    "start": "352479",
    "end": "358639"
  },
  {
    "text": "reachability of our workloads and how can we make sure that we can create our workloads as containers",
    "start": "358639",
    "end": "366479"
  },
  {
    "text": "i would like to focus on the networking component exploring the networking fabric within",
    "start": "366479",
    "end": "372479"
  },
  {
    "text": "the kubernetes cluster is quite a challenging task kubernetes is known for its ability to run",
    "start": "372479",
    "end": "378479"
  },
  {
    "text": "workloads on a distributed amount of machines while preserving the connectivity",
    "start": "378479",
    "end": "383919"
  },
  {
    "text": "and reachability to those workloads as such the networking model is highly assertive",
    "start": "383919",
    "end": "389680"
  },
  {
    "text": "and it gravitates towards the idea that every single pod has a unique ip",
    "start": "389680",
    "end": "394880"
  },
  {
    "text": "now this particular networking principle dismisses the need for dynamic for allocation but at",
    "start": "394880",
    "end": "400880"
  },
  {
    "text": "the same time brings in two challenges it will light new challenges such as how the container pods",
    "start": "400880",
    "end": "408479"
  },
  {
    "text": "services and external users are able to access our application",
    "start": "408479",
    "end": "414400"
  },
  {
    "text": "i would like to showcase where exactly the cni component is injected by following a packet between two",
    "start": "414400",
    "end": "420639"
  },
  {
    "text": "applications in an inter node setup supposedly we have two different applications",
    "start": "420639",
    "end": "427199"
  },
  {
    "text": "running on two different nodes and we would like to send a packet for application one to application two when the request is",
    "start": "427199",
    "end": "435360"
  },
  {
    "text": "issued we're actually going to look inside the pod to see if there are any available containers to solve our request",
    "start": "435360",
    "end": "442240"
  },
  {
    "text": "for the sake of this example will not be able to do so which means the request is going to go outside of the pod and it's going to",
    "start": "442240",
    "end": "448479"
  },
  {
    "text": "reach the root network namespace on the physical machine at this stage we have the visibility of all the pods",
    "start": "448479",
    "end": "455520"
  },
  {
    "text": "available on the machine again supposedly we don't have a destination to serve our request at this",
    "start": "455520",
    "end": "461759"
  },
  {
    "text": "stage which means the packet is going to go outside of the physical machine for the internet device",
    "start": "461759",
    "end": "467280"
  },
  {
    "text": "and it's going to reach the routing table generally speaking the routing table is",
    "start": "467280",
    "end": "472319"
  },
  {
    "text": "going to have the mapping between every single node and the cider of the pods ip to be allocated on that node",
    "start": "472319",
    "end": "479360"
  },
  {
    "text": "this means that with minimal hubs we're going to be able to reach our destination host and in a reversive manner we'll be going",
    "start": "479360",
    "end": "486560"
  },
  {
    "text": "through the root network namespace to the right pod slash container now the cni component is heavily",
    "start": "486560",
    "end": "494240"
  },
  {
    "text": "embedded within the routing table stage the networking model within kubernetes dictates that",
    "start": "494240",
    "end": "500080"
  },
  {
    "text": "every single pod should be accessible via its ip or cross across all nodes as such",
    "start": "500080",
    "end": "506720"
  },
  {
    "text": "this implies that we need to have an inclusivity of different networking systems and this prompted for the cni to",
    "start": "506720",
    "end": "512959"
  },
  {
    "text": "be developed now the cni concerns itself with the connectivity of containers and with the removal of",
    "start": "512959",
    "end": "520399"
  },
  {
    "text": "resources when the container is not there anymore so it's going to have two operations",
    "start": "520399",
    "end": "525920"
  },
  {
    "text": "addition and deletion it will make sure to give the pod an ip but at the same time",
    "start": "525920",
    "end": "533279"
  },
  {
    "text": "it will make sure to clean up any resources when the pod is removed when you're",
    "start": "533279",
    "end": "538640"
  },
  {
    "text": "looking into the current ecosystem there are plethora of tools provisioning the networking fabric for a kubernetes",
    "start": "538640",
    "end": "544080"
  },
  {
    "text": "cluster flannel for example has reported a lot of success from the end user community",
    "start": "544080",
    "end": "551120"
  },
  {
    "text": "and is known for its simplicity to provision the network overlay for a cluster",
    "start": "551120",
    "end": "556240"
  },
  {
    "text": "calico as well has gained a lot of popularity and this is because in addition to the network overlay it comes",
    "start": "556240",
    "end": "561600"
  },
  {
    "text": "with a very powerful net network policy enforcer which allows the fine-grained access control to the services within the",
    "start": "561600",
    "end": "567920"
  },
  {
    "text": "cluster lately celium has gained a lot of momentum and this is because it's aware",
    "start": "567920",
    "end": "574000"
  },
  {
    "text": "of the application and networking layers configuration for the networking packets",
    "start": "574000",
    "end": "580720"
  },
  {
    "text": "and we've worked came with their own networking component called weavenet which is known for its",
    "start": "580720",
    "end": "586080"
  },
  {
    "text": "simplicity to be installed in the cluster with no extra configuration now at this stage we see that we have",
    "start": "586080",
    "end": "593040"
  },
  {
    "text": "the possibility to connect our workloads across any distributed amount of machines",
    "start": "593040",
    "end": "599120"
  },
  {
    "text": "and this is just step one i would like to focus on the runtime component at the moment",
    "start": "599120",
    "end": "604800"
  },
  {
    "text": "now the runtime story is slightly different and this is because from the beginning",
    "start": "604800",
    "end": "610240"
  },
  {
    "text": "docker and rocket would be the mainly supported runtimes now the runtime just to be clear",
    "start": "610240",
    "end": "616560"
  },
  {
    "text": "is the particle which intercepts the request from the cubelet and will create the pods with the right",
    "start": "616560",
    "end": "623120"
  },
  {
    "text": "specifications on the machine now at the beginning the logic for the",
    "start": "623120",
    "end": "629440"
  },
  {
    "text": "runtime was very deeply ingrained within the kubernetes source code and this exposes quite a few",
    "start": "629440",
    "end": "634640"
  },
  {
    "text": "challenges if you'd like to develop new features for the runtime that's going to be very",
    "start": "634640",
    "end": "639680"
  },
  {
    "text": "tightly coupled with the cubelet release process which is quite lengthy in its own this",
    "start": "639680",
    "end": "645440"
  },
  {
    "text": "allows for a very low velocity rate when it comes to the feature development as well if we'd like to introduce new",
    "start": "645440",
    "end": "652959"
  },
  {
    "text": "runtimes we're going to have a very high level entry bar because the contributors will require a",
    "start": "652959",
    "end": "659600"
  },
  {
    "text": "very in-depth knowledge of the kubernetes source code this is not a sustainable way to move forward and it was clear that",
    "start": "659600",
    "end": "666560"
  },
  {
    "text": "there was requiring an interface to make sure that we can integrate different runtimes",
    "start": "666560",
    "end": "672720"
  },
  {
    "text": "and this prompted for the cri will contain a runtime interface to be developed which is an abstraction layer of how to",
    "start": "672720",
    "end": "679920"
  },
  {
    "text": "integrate the runtime capabilities within a cluster from which docker would be just one of",
    "start": "679920",
    "end": "684959"
  },
  {
    "text": "the supported runtimes when you're looking into the cncf",
    "start": "684959",
    "end": "690079"
  },
  {
    "text": "landscape we have plenty of tools provisioning the runtime capabilities from which container d and cryo are",
    "start": "690079",
    "end": "696399"
  },
  {
    "text": "probably most widely known for their open source nature container d is currently a graduated",
    "start": "696399",
    "end": "702560"
  },
  {
    "text": "cncf project which showcases its maturity and high adoption rate",
    "start": "702560",
    "end": "708079"
  },
  {
    "text": "it is known for its industry standard to provision the runtime functionalities cryo it's a more",
    "start": "708079",
    "end": "714480"
  },
  {
    "text": "lightweight version for the runtime and it's known to comply with open container initiative standards",
    "start": "714480",
    "end": "720880"
  },
  {
    "text": "now the implementation of the runtime is going to be quite tightly coupled with the infrastructure",
    "start": "720880",
    "end": "726480"
  },
  {
    "text": "provider and it's only natural to allow the cloud providers to use their own api to create the containers on their",
    "start": "726480",
    "end": "732800"
  },
  {
    "text": "hardware as such google comes with their own runtime tool called gvisor and aws is going to",
    "start": "732800",
    "end": "740240"
  },
  {
    "text": "have their own runtime which is going to be aws firecracker",
    "start": "740240",
    "end": "745839"
  },
  {
    "start": "745000",
    "end": "1029000"
  },
  {
    "text": "now the runtime and networking component were essential to make the transition between the vms and container assemblies",
    "start": "746880",
    "end": "753680"
  },
  {
    "text": "we will be able to reach our containers anywhere but at the same time we have the capability to create our containers",
    "start": "753680",
    "end": "760000"
  },
  {
    "text": "with any any tooling already available or we want to like to develop from this stage we have a higher",
    "start": "760000",
    "end": "767120"
  },
  {
    "text": "adoption rate for kubernetes and the community concerns itself more and more of how to",
    "start": "767120",
    "end": "772720"
  },
  {
    "text": "create a pluggable system for kubernetes rather than settling down to a very specific amount of timing and",
    "start": "772720",
    "end": "779040"
  },
  {
    "text": "this is confirmed by the appearance of the service mesh interface container storage",
    "start": "779040",
    "end": "784480"
  },
  {
    "text": "interface and cluster api",
    "start": "784480",
    "end": "787839"
  },
  {
    "text": "the smi or storage service mesh interface was introduced in kubecon barcelona in",
    "start": "789600",
    "end": "795279"
  },
  {
    "text": "2018 and it provides a solution to democratize the integration of service mesh within a kubernetes cluster",
    "start": "795279",
    "end": "803279"
  },
  {
    "text": "now the service mesh is a dedicated infrastructure layer that concerns itself of how the services communicate",
    "start": "803279",
    "end": "808959"
  },
  {
    "text": "between themselves in a distributed environment what it actually does it focuses on the",
    "start": "808959",
    "end": "814160"
  },
  {
    "text": "traceability and transparency of how the request is sent across microservices and this is quite important because we",
    "start": "814160",
    "end": "820880"
  },
  {
    "text": "would like to have this holistic vision of the request journey as such the smi",
    "start": "820880",
    "end": "826800"
  },
  {
    "text": "is going to focus on three main areas and there's going to be the traffic policy",
    "start": "826800",
    "end": "831920"
  },
  {
    "text": "traffic telemetry and traffic management traffic policy is all about fine-grained",
    "start": "831920",
    "end": "838160"
  },
  {
    "text": "access control of how the services should communicate between themselves traffic management it's all about the",
    "start": "838160",
    "end": "845680"
  },
  {
    "text": "proportional traffic to be sent across services now this is quite important if you're thinking about canary rollouts",
    "start": "845680",
    "end": "852720"
  },
  {
    "text": "and traffic telemetry is going to concern itself how to capture and expose metrics to make sure",
    "start": "852720",
    "end": "858800"
  },
  {
    "text": "that the communication between the services is as transparent as possible",
    "start": "858800",
    "end": "865040"
  },
  {
    "text": "we have plenty of tools available in the ecosystem at the moment provisioning the service mesh capabilities",
    "start": "865279",
    "end": "870880"
  },
  {
    "text": "however only three of them integrate with smi we have easter provision by google",
    "start": "870880",
    "end": "877199"
  },
  {
    "text": "console provisioned by hashicorp and linker g provisioned by buyand it is worth to mention that linkrd is",
    "start": "877199",
    "end": "883440"
  },
  {
    "text": "currently an incubating cncf project and it's not for its simplicity to provision the service mesh",
    "start": "883440",
    "end": "888800"
  },
  {
    "text": "functionalities for a cluster when a transition towards the continuous",
    "start": "888800",
    "end": "895279"
  },
  {
    "text": "storage interface i think this this is one of the most contributed and developed areas within the cncf landscape the storage",
    "start": "895279",
    "end": "903120"
  },
  {
    "text": "component story is very similar to the runtime component and this is because its logic was",
    "start": "903120",
    "end": "908639"
  },
  {
    "text": "deeply ingrained within the kubernetes source code which made it difficult to develop new features or to introduce",
    "start": "908639",
    "end": "914880"
  },
  {
    "text": "new storage providers as such the csi came to be about",
    "start": "914880",
    "end": "920240"
  },
  {
    "text": "which promotes a pluggable interface for applications to consume storage outside of the cluster",
    "start": "920240",
    "end": "927839"
  },
  {
    "text": "now when i was mentioning that it's one of the most widely contributed areas this is because that more than 60",
    "start": "927839",
    "end": "934160"
  },
  {
    "text": "providers are actively collaborating and integrating with csi",
    "start": "934160",
    "end": "939440"
  },
  {
    "text": "from which we have storage os rook ceph open ebs and many more",
    "start": "939440",
    "end": "945519"
  },
  {
    "text": "all of these tools are going to focus on dynamic allocation for the storage storage capabilities but at the same",
    "start": "945519",
    "end": "952079"
  },
  {
    "text": "time on the simplicity to be configured within a cluster it is worth to mention as well that",
    "start": "952079",
    "end": "958079"
  },
  {
    "text": "recurrently is an incubating cncf project",
    "start": "958079",
    "end": "962639"
  },
  {
    "text": "now transitioning towards the cluster api the perspective has changed completely when we talked",
    "start": "964880",
    "end": "970480"
  },
  {
    "text": "about the networking runtime service mission storage all of these components reside within the",
    "start": "970480",
    "end": "976079"
  },
  {
    "text": "kubernetes world cluster api takes the idea of interfaces a further step",
    "start": "976079",
    "end": "981519"
  },
  {
    "text": "it completely refines the way we actually think about clusters and provision our",
    "start": "981519",
    "end": "986880"
  },
  {
    "text": "clusters i would like to focus a bit more on this tool as as",
    "start": "986880",
    "end": "992160"
  },
  {
    "text": "i'll find it quite pivotal in the modern infrastructure nowadays",
    "start": "992160",
    "end": "997839"
  },
  {
    "text": "currently we have plenty of tools provisioning the bootstrap capabilities for kubernetes cluster",
    "start": "998800",
    "end": "1004800"
  },
  {
    "text": "from which we have cube atm cube spray cops tectonic and many more however if you",
    "start": "1004800",
    "end": "1011279"
  },
  {
    "text": "look into every single tool it's going to be difficult for us to find a common denominator when it comes",
    "start": "1011279",
    "end": "1016560"
  },
  {
    "text": "to the cloud provider what it actually means is that every single tool is going to support a specific amount of cloud or a",
    "start": "1016560",
    "end": "1023920"
  },
  {
    "text": "subset of cloud providers and this in itself exposes quite a few challenges",
    "start": "1023920",
    "end": "1030400"
  },
  {
    "start": "1029000",
    "end": "1293000"
  },
  {
    "text": "supposedly what happens if you'd like to create an infrastructure in a different cloud provider even if",
    "start": "1030400",
    "end": "1037120"
  },
  {
    "text": "you use the same bootstrap tool you're going to have very little reusable components but most of the time the end result is",
    "start": "1037120",
    "end": "1042959"
  },
  {
    "text": "going to be rewriting the infrastructure's code from scratch another challenge is",
    "start": "1042959",
    "end": "1048480"
  },
  {
    "text": "exposed if you'd like to migrate to a different bootstrap provider for example tectonic which i introduced",
    "start": "1048480",
    "end": "1054960"
  },
  {
    "text": "earlier is no longer under active development and it is to be merged with openshift container platform",
    "start": "1054960",
    "end": "1061440"
  },
  {
    "text": "this means that moving forward it's quite inefficient unless the project is not forked and maintained in-house the result is",
    "start": "1061440",
    "end": "1068880"
  },
  {
    "text": "going to be rewriting the infrastructure's code with a different bootstrap tool from scratch another challenge is",
    "start": "1068880",
    "end": "1075600"
  },
  {
    "text": "exposed by regions such as china russia now these regions are known for their",
    "start": "1075600",
    "end": "1082640"
  },
  {
    "text": "infrastructure well which are developed within those areas only and they have their own development cycle",
    "start": "1082640",
    "end": "1089520"
  },
  {
    "text": "while creating the platform or migrating the platform to these areas most of the time the lift and shift",
    "start": "1089520",
    "end": "1094640"
  },
  {
    "text": "capability is dispersed however cluster api completely",
    "start": "1094640",
    "end": "1102320"
  },
  {
    "text": "intercepts all of these challenges provisioning a solution of how the infrastructure as code can be",
    "start": "1102320",
    "end": "1107600"
  },
  {
    "text": "provisioned across different cloud providers by provisioning a set of declarative set of apis",
    "start": "1107600",
    "end": "1113760"
  },
  {
    "text": "that will manage the cluster creation configuration and management when you're talking about",
    "start": "1113760",
    "end": "1120880"
  },
  {
    "text": "cluster api we're talking about c cluster lifecycle which had its first initial release in april 2018.",
    "start": "1120880",
    "end": "1128640"
  },
  {
    "text": "since they had had two releases and they actually preparing for a third release this month which will result with a v1",
    "start": "1128640",
    "end": "1135840"
  },
  {
    "text": "alpha free endpoint now i was mentioning the cluster api provisions and infrastructure and",
    "start": "1135840",
    "end": "1141760"
  },
  {
    "text": "interface to connect to different cloud providers and currently there are 12 cloud providers actively contributing and",
    "start": "1141760",
    "end": "1148320"
  },
  {
    "text": "collaborating with cluster api from which we have google cloud aws",
    "start": "1148320",
    "end": "1153679"
  },
  {
    "text": "digital ocean bare metal but more importantly by the cloud and by the cloud is a",
    "start": "1153679",
    "end": "1159120"
  },
  {
    "text": "chinese provider and this is this means that we'll be able to provision our infrastructure in china with the",
    "start": "1159120",
    "end": "1165280"
  },
  {
    "text": "same ease as we provision our platform in europe",
    "start": "1165280",
    "end": "1170480"
  },
  {
    "text": "let's actually have a look of how cluster api works supposedly we'd like to provision",
    "start": "1172400",
    "end": "1177760"
  },
  {
    "text": "different clusters in different regions different cloud providers the way",
    "start": "1177760",
    "end": "1183120"
  },
  {
    "text": "cluster api is going to work will require a management classroom for testing purposes it is recommended to",
    "start": "1183120",
    "end": "1190080"
  },
  {
    "text": "use kind to provision the clustering and kind is just a dockerized version of kubernetes",
    "start": "1190080",
    "end": "1196480"
  },
  {
    "text": "if you'd like to use cluster api in production if you want to edge adopters it is recommended to use a fully",
    "start": "1196480",
    "end": "1202880"
  },
  {
    "text": "productionized cluster and this is because it comes with a more sophisticated failover mechanism",
    "start": "1202880",
    "end": "1209919"
  },
  {
    "text": "once we have our management cluster up and running we'll require our dependencies or the controller managers to have a",
    "start": "1209919",
    "end": "1217200"
  },
  {
    "text": "fully working version of cluster api we require free controllers and there's going to be the cluster api crd",
    "start": "1217200",
    "end": "1223679"
  },
  {
    "text": "controller the bootstrap provider controller and the infrastructure provider controller",
    "start": "1223679",
    "end": "1229600"
  },
  {
    "text": "cluster api introduces four new crds and will require a controller to make sure that we can create and reconcile",
    "start": "1229600",
    "end": "1236480"
  },
  {
    "text": "any changes we have to those resources secondly we'll require a bootstrap provider and",
    "start": "1236480",
    "end": "1242960"
  },
  {
    "text": "this is going to be the component which will translate the yaml configuration into cloud in its script and it will",
    "start": "1242960",
    "end": "1248799"
  },
  {
    "text": "make sure to attach the instance from an infrastructure provider to the cluster as a node",
    "start": "1248799",
    "end": "1254799"
  },
  {
    "text": "this capability is currently provisioned by qpdm and telus and lastly will require an",
    "start": "1254799",
    "end": "1261760"
  },
  {
    "text": "infrastructure provider controller and this is going to be the component which will actually call directly the",
    "start": "1261760",
    "end": "1267280"
  },
  {
    "text": "api and provision the infrastructure such as the nodes imrobes",
    "start": "1267280",
    "end": "1272320"
  },
  {
    "text": "security groups and many more and every single cloud provider is going to have their own controller",
    "start": "1272320",
    "end": "1279679"
  },
  {
    "text": "once we have our dependencies up and running we'll be able to provision our target clusters and these are going to be the clusters",
    "start": "1280799",
    "end": "1287120"
  },
  {
    "text": "we're going to be provisioning to our users and developers",
    "start": "1287120",
    "end": "1292559"
  },
  {
    "start": "1293000",
    "end": "1611000"
  },
  {
    "text": "i'd like to focus a bit more on the cluster api crgs as i'm going to use one of them to",
    "start": "1294720",
    "end": "1299840"
  },
  {
    "text": "showcase a demo later on as mentioned cluster api introduces four",
    "start": "1299840",
    "end": "1305360"
  },
  {
    "text": "new crgs cluster machine machine set and machine deployment",
    "start": "1305360",
    "end": "1311520"
  },
  {
    "text": "the cluster resource is going to have the higher level configuration for a cluster we'll be able to specify our reciter for",
    "start": "1311520",
    "end": "1318400"
  },
  {
    "text": "the pods and services and any dns suffix machine resource",
    "start": "1318400",
    "end": "1323679"
  },
  {
    "text": "is very similar to node configuration we'll be able to specify the version of kubernetes we'd like to run",
    "start": "1323679",
    "end": "1330559"
  },
  {
    "text": "as well the instance type for our machine or the region we'd like our machine to run into",
    "start": "1330559",
    "end": "1337440"
  },
  {
    "text": "machine set is very similar to replica set it will make sure that we have an amount of machine resources",
    "start": "1337440",
    "end": "1343120"
  },
  {
    "text": "up and running at all time and machine deployment is very similar to deployment it comes",
    "start": "1343120",
    "end": "1348799"
  },
  {
    "text": "with a very powerful rolling out strategies between configurations it is worth to mention here that the",
    "start": "1348799",
    "end": "1355919"
  },
  {
    "text": "machine resource is immutable within the cluster api setup this means that if you deploy new",
    "start": "1355919",
    "end": "1361039"
  },
  {
    "text": "configuration or changes to the current configuration the machine with the alt setup is going",
    "start": "1361039",
    "end": "1367280"
  },
  {
    "text": "to be taken down and the machine with the new configuration is going to be brought up there is no patching there is only",
    "start": "1367280",
    "end": "1373360"
  },
  {
    "text": "immutability to showcase the simplicity of creating a clustering with cluster api",
    "start": "1373360",
    "end": "1380240"
  },
  {
    "text": "i'm going to showcase the way cubespray does it at the moment now cubespray is a tool that provisions",
    "start": "1380240",
    "end": "1386000"
  },
  {
    "text": "the infrastructure's code for a platform by using ansible and in the current view we have",
    "start": "1386000",
    "end": "1392000"
  },
  {
    "text": "a trimmed vision of all the roles an engineer would need to be aware while troubleshooting creating and",
    "start": "1392000",
    "end": "1399679"
  },
  {
    "text": "maintaining a cluster this is just a shorting output as well",
    "start": "1399679",
    "end": "1404720"
  },
  {
    "text": "cluster api transitions from this amount of configuration to a couple of manifests",
    "start": "1404720",
    "end": "1410159"
  },
  {
    "text": "and if you'd like to create our cluster in aws this is going to be the end result",
    "start": "1410159",
    "end": "1415440"
  },
  {
    "text": "what we actually have here is a cluster resource which is created in the v1 alpha 2",
    "start": "1415440",
    "end": "1421279"
  },
  {
    "text": "endpoint in the metadata section we give it a name test cluster and in the spec section we",
    "start": "1421279",
    "end": "1429360"
  },
  {
    "text": "choose a slash 16 subnet for our pods however i would like to draw your attention towards the infrastructure",
    "start": "1429360",
    "end": "1435760"
  },
  {
    "text": "reference this is going to be the configuration which will actually invoke the parameters and values specific to a",
    "start": "1435760",
    "end": "1442640"
  },
  {
    "text": "cloud provider and it only makes sense because different cloud providers are going to have different parameters to be",
    "start": "1442640",
    "end": "1448559"
  },
  {
    "text": "configured in this particular snippet we have an infrastructure reference",
    "start": "1448559",
    "end": "1454799"
  },
  {
    "text": "which is specific to aws cluster so the kind is going to be infidelist cluster we created a v1 alpha to endpoint and",
    "start": "1454799",
    "end": "1462320"
  },
  {
    "text": "give it a name test cluster what actually happens in the background it will invoke a",
    "start": "1462320",
    "end": "1467919"
  },
  {
    "text": "defined manifest by us and what we actually say here is that we want to create our cluster in region u",
    "start": "1467919",
    "end": "1474400"
  },
  {
    "text": "central one and we'd like to attach an ssh key with the name default to our instances",
    "start": "1474400",
    "end": "1480799"
  },
  {
    "text": "now if you'd like to create our cluster in gcp these are going to be the only changes",
    "start": "1480799",
    "end": "1486880"
  },
  {
    "text": "that we'll need to make what we actually do here is change the",
    "start": "1486880",
    "end": "1492240"
  },
  {
    "text": "infrastructure reference kind to gcp cluster and this is going to invoke parameters which are very specific to google cloud",
    "start": "1492240",
    "end": "1499520"
  },
  {
    "text": "as such the region is going to be europe west free and we have the concept of a project",
    "start": "1499520",
    "end": "1504799"
  },
  {
    "text": "which is very very specific to the gcp and we assign our cluster to capi project",
    "start": "1504799",
    "end": "1510799"
  },
  {
    "text": "as well we attach a network with the name default cpi to our cluster from here we see that we",
    "start": "1510799",
    "end": "1517200"
  },
  {
    "text": "have very usable manifest and we can simply configure clusters across different cloud providers the",
    "start": "1517200",
    "end": "1524000"
  },
  {
    "text": "hassle is minimal now once we have our cluster the second step is to actually add our control",
    "start": "1524000",
    "end": "1529440"
  },
  {
    "text": "plane which is going to be a manifest for our masters and obviously we'll need to add our work",
    "start": "1529440",
    "end": "1536080"
  },
  {
    "text": "notes and there's going to be an extra manifest for that so this is just step one but again the simplicity is already",
    "start": "1536080",
    "end": "1542960"
  },
  {
    "text": "evidenced cluster api has been so efficient and so",
    "start": "1542960",
    "end": "1549120"
  },
  {
    "text": "effective in such a short amount of time because it uses the building blocks principle",
    "start": "1549120",
    "end": "1554720"
  },
  {
    "text": "it does not concern itself with bringing and creating new endpoints to consume its functionalities",
    "start": "1554720",
    "end": "1559760"
  },
  {
    "text": "it actually builds on top of the existing kubernetes primitives",
    "start": "1559760",
    "end": "1565039"
  },
  {
    "text": "a crucial feature of cluster api is the fight it is cloud agnostic it is able to",
    "start": "1565279",
    "end": "1570720"
  },
  {
    "text": "provision this one interface to create different clusters in different infrastructure providers",
    "start": "1570720",
    "end": "1576559"
  },
  {
    "text": "but more importantly to do so with minimal changes across the manifests it is a crucial perspective moving",
    "start": "1576559",
    "end": "1583440"
  },
  {
    "text": "forward because it completely rethinks the way we provision our clusters we can actually have",
    "start": "1583440",
    "end": "1589039"
  },
  {
    "text": "the concept of cluster as a resource",
    "start": "1589039",
    "end": "1593919"
  },
  {
    "text": "another thing about cluster api is still experimental it's been around for almost a year",
    "start": "1594080",
    "end": "1599600"
  },
  {
    "text": "however if you have a use case for cluster api please give it a try and feedback to the community",
    "start": "1599600",
    "end": "1605600"
  },
  {
    "text": "now is the perfect time to customize cluster api to your use case",
    "start": "1605600",
    "end": "1613840"
  },
  {
    "start": "1611000",
    "end": "1859000"
  },
  {
    "text": "within its six years of existence kubernetes transmogrified its identity multiple times",
    "start": "1613919",
    "end": "1619760"
  },
  {
    "text": "in a recursive manner more and more we extrapolate components from the core binaries of",
    "start": "1619760",
    "end": "1625520"
  },
  {
    "text": "kubernetes and make them develop independently such as the networking storage",
    "start": "1625520",
    "end": "1630880"
  },
  {
    "text": "components and this has been possible because kubernetes",
    "start": "1630880",
    "end": "1635919"
  },
  {
    "text": "is not opinated of course it's going to be assertive when it comes to the networking model and the primitives it distributes",
    "start": "1635919",
    "end": "1642480"
  },
  {
    "text": "however it's not going to be opinated when it comes to the underlying technology you run kubernetes on top of there is",
    "start": "1642480",
    "end": "1649200"
  },
  {
    "text": "not one kubernetes platform that is the same because the users have the flexibility to plug different components",
    "start": "1649200",
    "end": "1655200"
  },
  {
    "text": "and to personalize their infrastructure to their needs as well kubernetes is non-opinated when",
    "start": "1655200",
    "end": "1661520"
  },
  {
    "text": "it comes to the primitives the users will be able to create their own resource and build on top of the existing",
    "start": "1661520",
    "end": "1667679"
  },
  {
    "text": "primitives as well and this had a huge impact if you're looking into the perspective",
    "start": "1667679",
    "end": "1673360"
  },
  {
    "text": "this completely changed the game for vendors and users in the community when you're looking at",
    "start": "1673360",
    "end": "1679840"
  },
  {
    "text": "the vendors the immersions of interfaces it's all about innovation",
    "start": "1679840",
    "end": "1685360"
  },
  {
    "text": "as a vendor you don't have to concern itself of how to converge your product with kubernetes",
    "start": "1685360",
    "end": "1691360"
  },
  {
    "text": "the interface is going to be already there as a vendor you can concentrate on future development",
    "start": "1691360",
    "end": "1696559"
  },
  {
    "text": "and how can you provision value to your customers with minimal latency it's all about innovation and healthy",
    "start": "1696559",
    "end": "1703360"
  },
  {
    "text": "competition [Music] when you're looking into the end user community the emergence of interfaces",
    "start": "1703360",
    "end": "1710720"
  },
  {
    "text": "it's all about extensibility it was never as easy as it is today to benchmark",
    "start": "1710720",
    "end": "1716159"
  },
  {
    "text": "different tools with the same functionality as an end user you have the privilege to",
    "start": "1716159",
    "end": "1721279"
  },
  {
    "text": "choose the right tool for your infrastructure with minimal compromises it's all about further",
    "start": "1721279",
    "end": "1726960"
  },
  {
    "text": "leveraging your product and your platform when it comes to the end user community",
    "start": "1726960",
    "end": "1733360"
  },
  {
    "text": "the emergence of interfaces it's all about interoperability now kubernetes is a system which",
    "start": "1733360",
    "end": "1739120"
  },
  {
    "text": "embraces different solutions for the same problem but more importantly it concentrates on",
    "start": "1739120",
    "end": "1744399"
  },
  {
    "text": "how to make this interoperation between tools as seamless as possible",
    "start": "1744399",
    "end": "1750559"
  },
  {
    "text": "and in result it has been extremely successful for kubernetes because for our time it created an",
    "start": "1750559",
    "end": "1757039"
  },
  {
    "text": "ecosystem which we now made nowadays known as the cloud native landscape",
    "start": "1757039",
    "end": "1762080"
  },
  {
    "text": "however the concept of interfaces transcends the world of kubernetes",
    "start": "1762080",
    "end": "1767120"
  },
  {
    "text": "it can be applied to different domains and areas and this is because the interfaces can",
    "start": "1767120",
    "end": "1772480"
  },
  {
    "text": "be the central engine for development and innovation that anchors extensibility",
    "start": "1772480",
    "end": "1778240"
  },
  {
    "text": "but at the same time embraces different solutions for the same problem",
    "start": "1778240",
    "end": "1784320"
  },
  {
    "text": "if you'd like to find out a bit more of the topics i've discussed today please visit my meeting account",
    "start": "1785679",
    "end": "1792000"
  },
  {
    "text": "i've published an article with more links and resources to be investigated if you like to",
    "start": "1792000",
    "end": "1798559"
  },
  {
    "text": "enjoy the rest of the conference thank",
    "start": "1798559",
    "end": "1802559"
  },
  {
    "text": "you",
    "start": "1806840",
    "end": "1809840"
  },
  {
    "start": "1859000",
    "end": "2339000"
  },
  {
    "text": "yes hi i'm glad to be here welcome may i ask where are you and what time what's your time now",
    "start": "1862480",
    "end": "1869760"
  },
  {
    "text": "i'm currently in london and it's 3 p.m shark and we actually have 33 degrees celsius today so it's",
    "start": "1869760",
    "end": "1876880"
  },
  {
    "text": "extremely hard yeah so good so i should say good morning or good afternoon",
    "start": "1876880",
    "end": "1882720"
  },
  {
    "text": "so good afternoon it's freaking 3pm good afternoon katie",
    "start": "1882720",
    "end": "1888000"
  },
  {
    "text": "hi good afternoon good thank you very much it's a wonderful speech thank you for",
    "start": "1888000",
    "end": "1895519"
  },
  {
    "text": "inviting me i am i always wanted to present at cubecon china to be honest and uh",
    "start": "1895519",
    "end": "1902000"
  },
  {
    "text": "well i had a chance to do this virtually so there's",
    "start": "1902000",
    "end": "1907200"
  },
  {
    "text": "the first end user you know company to deliver speech",
    "start": "1907200",
    "end": "1912480"
  },
  {
    "text": "yes well i've always been um been quite motivated to make some of this tooling",
    "start": "1912480",
    "end": "1918640"
  },
  {
    "text": "um more understandable for for the community so that's why i want to contribute",
    "start": "1918640",
    "end": "1924000"
  },
  {
    "text": "i hope more cloud native vendors can hear your voice this is so important to them i hope so",
    "start": "1924000",
    "end": "1930880"
  },
  {
    "text": "i really hope so especially because you have so many toolings like how do you choose the right one right so yeah from any user perspective i'm",
    "start": "1930880",
    "end": "1937360"
  },
  {
    "text": "more than happy to share my experience and my practices it's a very but it's very valuable",
    "start": "1937360",
    "end": "1944159"
  },
  {
    "text": "i hope so okay now your qa session is about 10 minutes right yeah seven",
    "start": "1944159",
    "end": "1950480"
  },
  {
    "text": "minutes or seven minutes but not much question but not many questions so far",
    "start": "1950480",
    "end": "1956559"
  },
  {
    "text": "yeah that's absolutely fine as as mentioned i'm available on social media as well so if any questions are afterwards i'm",
    "start": "1956559",
    "end": "1963360"
  },
  {
    "text": "happy to answer great yeah so please answer the question in the in the q and a session",
    "start": "1963360",
    "end": "1970960"
  },
  {
    "text": "is it going to be is it going to be live or oh right it's already there yeah it's already",
    "start": "1971519",
    "end": "1976559"
  },
  {
    "text": "there yeah can you share with us your role in the cnc as a toc member",
    "start": "1976559",
    "end": "1983039"
  },
  {
    "text": "absolutely so um i'm gonna start to explain what a toc is so as mentioned toc is a technical",
    "start": "1983039",
    "end": "1989919"
  },
  {
    "text": "oversight committee and i am a member of that it's only 11 of us and we are responsible",
    "start": "1989919",
    "end": "1997840"
  },
  {
    "text": "to make sure that the right projects are joining the cncf landscape so pretty much i was elected by the end",
    "start": "1997840",
    "end": "2003279"
  },
  {
    "text": "user community so as you know in the end user uh we have already almost 140 companies",
    "start": "2003279",
    "end": "2009600"
  },
  {
    "text": "which are part of that and they're using the tooling within the landscape and i have been elected to represent the",
    "start": "2009600",
    "end": "2016159"
  },
  {
    "text": "voice and their perspective moving forward because in the toc we have actually different roles we have",
    "start": "2016159",
    "end": "2021519"
  },
  {
    "text": "tocs that um are coming from the contributor base we have to see that coming from the end",
    "start": "2021519",
    "end": "2026799"
  },
  {
    "text": "user base um based on their merits within the community so they it's just 11 of us joining",
    "start": "2026799",
    "end": "2032080"
  },
  {
    "text": "together and as mentioned we all for example if you'd like to um join",
    "start": "2032080",
    "end": "2038399"
  },
  {
    "text": "the cncf usually you'll open apr or you're going to make us aware and the",
    "start": "2038399",
    "end": "2043840"
  },
  {
    "text": "toc will review the project but the sandbox actually lowered the standards so it's",
    "start": "2043840",
    "end": "2048960"
  },
  {
    "text": "quite easy to get now in the cncf and that was one of our intentions because we'd like to concentrate more on",
    "start": "2048960",
    "end": "2055599"
  },
  {
    "text": "incubation and graduation stages so as you know in um in graduation we have big projects such as kubernetes",
    "start": "2055599",
    "end": "2062560"
  },
  {
    "text": "prometheus we have helm quite recently graduated and somewhere like all of this project would",
    "start": "2062560",
    "end": "2068079"
  },
  {
    "text": "have a lot of usability in production environments they graduated on the good marriage",
    "start": "2068079",
    "end": "2073839"
  },
  {
    "text": "so the tlc pretty much we will make sure that the projects can transition from sandbox to",
    "start": "2073839",
    "end": "2079679"
  },
  {
    "text": "incubation to graduation but more importantly we'll make sure that we have",
    "start": "2079679",
    "end": "2085358"
  },
  {
    "text": "these open governance we have this open collaboration we don't have any vendor-specific um",
    "start": "2085359",
    "end": "2092020"
  },
  {
    "text": "[Music] tooling over there so we want it to be interoperable and that's why they talk today was",
    "start": "2092020",
    "end": "2097839"
  },
  {
    "text": "heavily focusing on that as well so this is the role of the toc it's um it's kind of uh largely",
    "start": "2097839",
    "end": "2103760"
  },
  {
    "text": "encapsulating in um in our duties but it's pretty much to make sure that the right tooling",
    "start": "2103760",
    "end": "2110320"
  },
  {
    "text": "are joining the landscape and the community can benefit from it properly i hope that answers your question",
    "start": "2110320",
    "end": "2118240"
  },
  {
    "text": "let's give our attendees a few more minutes to generate more questions because they",
    "start": "2128160",
    "end": "2133680"
  },
  {
    "text": "have to input you cannot they cannot talk so they can they have to input questions in english yes please",
    "start": "2133680",
    "end": "2141680"
  },
  {
    "text": "that would be very helpful for me",
    "start": "2141680",
    "end": "2145838"
  },
  {
    "text": "cool",
    "start": "2148640",
    "end": "2150880"
  },
  {
    "text": "okay one more one more it's cool",
    "start": "2170240",
    "end": "2174880"
  },
  {
    "text": "okay so the question is i'm gonna read it aloud um can these api interface alignment",
    "start": "2177520",
    "end": "2183520"
  },
  {
    "text": "reduce the multi-cloud development and deployment and how much so with cluster api",
    "start": "2183520",
    "end": "2190480"
  },
  {
    "text": "the idea of it is to consolidate the way we create",
    "start": "2190480",
    "end": "2195760"
  },
  {
    "text": "clusters or kubernetes clusters in different cloud providers as mentioned we can do so but the deployment phase is going to be",
    "start": "2195760",
    "end": "2203680"
  },
  {
    "text": "very different from one cloud provider to the other and cluster api wants to consolidate all of that so definitely the answer is yes",
    "start": "2203680",
    "end": "2210560"
  },
  {
    "text": "it actually aims to reduce the amount we spend on developing different capacitors",
    "start": "2210560",
    "end": "2216480"
  },
  {
    "text": "we have reusable manifest of cluster api as shown in the presentation example switching between cloud",
    "start": "2216480",
    "end": "2222720"
  },
  {
    "text": "providers is just a matter of sometimes changing the infrastructure reference within our manifest",
    "start": "2222720",
    "end": "2228480"
  },
  {
    "text": "and they're just going to invoke the different parameters for different cloud provider so from that perspective we never had",
    "start": "2228480",
    "end": "2233920"
  },
  {
    "text": "this concept before of reusing our manifest for cluster this is a new concept which we can",
    "start": "2233920",
    "end": "2240160"
  },
  {
    "text": "further build on and again cluster api is just at the beginning um so it has a",
    "start": "2240160",
    "end": "2245440"
  },
  {
    "text": "lot of potential that's why i'm actually calling for feedback for if you have a use case or cluster api please try it and feedback because",
    "start": "2245440",
    "end": "2252880"
  },
  {
    "text": "you have very high chances for your feedback to be incorporated in the next three releases so",
    "start": "2252880",
    "end": "2260160"
  },
  {
    "text": "the answer that i guess they intend to reduce the open work we're going to have in a",
    "start": "2260160",
    "end": "2265599"
  },
  {
    "text": "multi-cloud environment the second question of how much um",
    "start": "2265599",
    "end": "2271920"
  },
  {
    "text": "the only measurable at the moment um data point at least is the amount of",
    "start": "2271920",
    "end": "2278160"
  },
  {
    "text": "inputs like the actual infrastructures code which is translated in yaml manifest so from that perspective",
    "start": "2278160",
    "end": "2283280"
  },
  {
    "text": "we definitely have a better usage we have an easier definition of our cluster we generally have the concept of a",
    "start": "2283280",
    "end": "2290480"
  },
  {
    "text": "cluster as a resource so from that perspective it's definitely a more native way for kubernetes to work",
    "start": "2290480",
    "end": "2297200"
  },
  {
    "text": "with clusters and deploy clusters so it's um again it's just the beginning of the road it's",
    "start": "2297200",
    "end": "2303119"
  },
  {
    "text": "been around for a year but there is a lot of traction so",
    "start": "2303119",
    "end": "2308400"
  },
  {
    "text": "feedback please please use it please feedback to the community contribute yeah there's a lot of chances and",
    "start": "2308400",
    "end": "2314079"
  },
  {
    "text": "opportunities to do that okay time is up for q a",
    "start": "2314079",
    "end": "2320640"
  },
  {
    "text": "thank you katie thank you very much for spending your time and sharing with us your valuable opinion",
    "start": "2320640",
    "end": "2327520"
  },
  {
    "text": "thank you very much for inviting me as mentioned i'm extremely excited to be part of this summit so that's hopefully to see you next year",
    "start": "2327520",
    "end": "2333520"
  },
  {
    "text": "in person yeah if everything is fine okay thank you bye thank you bye",
    "start": "2333520",
    "end": "2341599"
  }
]