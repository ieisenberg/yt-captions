[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "my name is Russ Danner and I'm VP of",
    "start": "0",
    "end": "2220"
  },
  {
    "text": "products at crafter CMS today we're",
    "start": "2220",
    "end": "4259"
  },
  {
    "text": "going to talk about graphql and crafter",
    "start": "4259",
    "end": "6180"
  },
  {
    "text": "CMS and we're going to start where all",
    "start": "6180",
    "end": "8580"
  },
  {
    "text": "things start at the beginning",
    "start": "8580",
    "end": "10320"
  },
  {
    "text": "just what is graphql is it a query",
    "start": "10320",
    "end": "13500"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "language is it an alternative to rest is",
    "start": "13500",
    "end": "16139"
  },
  {
    "text": "it an API Gateway these are the kinds of",
    "start": "16139",
    "end": "18660"
  },
  {
    "text": "questions that we hear from folks that",
    "start": "18660",
    "end": "20400"
  },
  {
    "text": "are new to graphql",
    "start": "20400",
    "end": "21960"
  },
  {
    "text": "and it can be used in all of those ways",
    "start": "21960",
    "end": "25019"
  },
  {
    "text": "but it's not what graphql is but graphql",
    "start": "25019",
    "end": "28260"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "is is a specification for data retrieval",
    "start": "28260",
    "end": "31619"
  },
  {
    "text": "and data mutation that was started by a",
    "start": "31619",
    "end": "34260"
  },
  {
    "text": "company called meta and that they later",
    "start": "34260",
    "end": "36180"
  },
  {
    "text": "contributed to the open source community",
    "start": "36180",
    "end": "38880"
  },
  {
    "text": "graphql is now maintained and managed by",
    "start": "38880",
    "end": "41520"
  },
  {
    "text": "the Linux Foundation",
    "start": "41520",
    "end": "42960"
  },
  {
    "text": "in this specification there are two",
    "start": "42960",
    "end": "45059"
  },
  {
    "text": "parts the first part is a schema in",
    "start": "45059",
    "end": "48239"
  },
  {
    "text": "which we have a strongly typed data",
    "start": "48239",
    "end": "50219"
  },
  {
    "text": "dictionary of objects the object's",
    "start": "50219",
    "end": "52379"
  },
  {
    "text": "properties and the relationships between",
    "start": "52379",
    "end": "55079"
  },
  {
    "text": "those objects and the second component",
    "start": "55079",
    "end": "57780"
  },
  {
    "start": "57000",
    "end": "57000"
  },
  {
    "text": "along with that schema is a query",
    "start": "57780",
    "end": "60780"
  },
  {
    "text": "language definition so with a strongly",
    "start": "60780",
    "end": "63300"
  },
  {
    "text": "typed schema and a query language we can",
    "start": "63300",
    "end": "65760"
  },
  {
    "text": "now interrogate systems by asking them",
    "start": "65760",
    "end": "68220"
  },
  {
    "text": "to return their structure to us as well",
    "start": "68220",
    "end": "70680"
  },
  {
    "text": "as the data in those structures well",
    "start": "70680",
    "end": "73560"
  },
  {
    "text": "isn't that just what SQL and nosql",
    "start": "73560",
    "end": "75540"
  },
  {
    "text": "provide that's kind of an obvious",
    "start": "75540",
    "end": "77760"
  },
  {
    "text": "question well the difference here is",
    "start": "77760",
    "end": "80400"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "that graphql is implementation agnostic",
    "start": "80400",
    "end": "83460"
  },
  {
    "text": "so any kind of server can implement the",
    "start": "83460",
    "end": "86280"
  },
  {
    "text": "graphql specification and present itself",
    "start": "86280",
    "end": "89220"
  },
  {
    "text": "as a graphql server and then map onto",
    "start": "89220",
    "end": "92820"
  },
  {
    "text": "that back-end technology whereas SQL and",
    "start": "92820",
    "end": "96540"
  },
  {
    "text": "nosql databases tend to be very",
    "start": "96540",
    "end": "98759"
  },
  {
    "text": "implementation specific by contrast with",
    "start": "98759",
    "end": "101759"
  },
  {
    "text": "graphql it's not a about the store",
    "start": "101759",
    "end": "103920"
  },
  {
    "text": "instead it's about the graphql",
    "start": "103920",
    "end": "106259"
  },
  {
    "text": "implementation which is required to",
    "start": "106259",
    "end": "108299"
  },
  {
    "text": "expose both the schema and map the query",
    "start": "108299",
    "end": "112259"
  },
  {
    "text": "language onto the backend system and",
    "start": "112259",
    "end": "114780"
  },
  {
    "text": "it's the fact that graphql requires both",
    "start": "114780",
    "end": "116939"
  },
  {
    "text": "of these that is key to illustrate this",
    "start": "116939",
    "end": "119579"
  },
  {
    "text": "further let's take a look at this",
    "start": "119579",
    "end": "121200"
  },
  {
    "text": "example we've got a client making a",
    "start": "121200",
    "end": "123720"
  },
  {
    "text": "single graphql request to the graphql",
    "start": "123720",
    "end": "126719"
  },
  {
    "text": "server the graphql server then",
    "start": "126719",
    "end": "128819"
  },
  {
    "text": "interprets that single graphql query",
    "start": "128819",
    "end": "131099"
  },
  {
    "text": "into backend system queries and in this",
    "start": "131099",
    "end": "134160"
  },
  {
    "text": "case three back-end system queries so",
    "start": "134160",
    "end": "136620"
  },
  {
    "text": "it's the fact that graphql is by its",
    "start": "136620",
    "end": "138900"
  },
  {
    "text": "design both client and back end agnostic",
    "start": "138900",
    "end": "142440"
  },
  {
    "text": "and at the same time still a standard",
    "start": "142440",
    "end": "145800"
  },
  {
    "text": "that is the key difference between it",
    "start": "145800",
    "end": "148739"
  },
  {
    "text": "and standards like SQL this positions",
    "start": "148739",
    "end": "151620"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "the graphical query language to be one",
    "start": "151620",
    "end": "153480"
  },
  {
    "text": "query language to rule them all and on",
    "start": "153480",
    "end": "156420"
  },
  {
    "text": "top of its query capabilities graphql",
    "start": "156420",
    "end": "158819"
  },
  {
    "text": "comes with some special powers and of",
    "start": "158819",
    "end": "161160"
  },
  {
    "start": "161000",
    "end": "161000"
  },
  {
    "text": "these one of the most powerful is its",
    "start": "161160",
    "end": "163500"
  },
  {
    "text": "ability to support what we would call",
    "start": "163500",
    "end": "164940"
  },
  {
    "text": "Api gateways federations or sub graphs",
    "start": "164940",
    "end": "168420"
  },
  {
    "text": "because of its graph oriented nature and",
    "start": "168420",
    "end": "170819"
  },
  {
    "text": "discoverability support you can layer",
    "start": "170819",
    "end": "173280"
  },
  {
    "text": "one graph upon another graph and then",
    "start": "173280",
    "end": "176519"
  },
  {
    "text": "combine those subgraphs into a single",
    "start": "176519",
    "end": "179760"
  },
  {
    "text": "graph this is a potent capability",
    "start": "179760",
    "end": "182280"
  },
  {
    "text": "because then you can have many graphql",
    "start": "182280",
    "end": "184920"
  },
  {
    "text": "implementations that are all exposed as",
    "start": "184920",
    "end": "187620"
  },
  {
    "text": "one integrated API look at our example",
    "start": "187620",
    "end": "190379"
  },
  {
    "text": "here",
    "start": "190379",
    "end": "191340"
  },
  {
    "text": "we can see that there's an individual",
    "start": "191340",
    "end": "193200"
  },
  {
    "text": "graphql graph for products content users",
    "start": "193200",
    "end": "197340"
  },
  {
    "text": "and inventory each of these is a facade",
    "start": "197340",
    "end": "199920"
  },
  {
    "text": "of the implementation technology for the",
    "start": "199920",
    "end": "202800"
  },
  {
    "text": "specific system more importantly we can",
    "start": "202800",
    "end": "205440"
  },
  {
    "text": "see that we have several clients at the",
    "start": "205440",
    "end": "207540"
  },
  {
    "text": "top web apps mobile apps and so on and",
    "start": "207540",
    "end": "210720"
  },
  {
    "text": "each of these are able to access all of",
    "start": "210720",
    "end": "213180"
  },
  {
    "text": "this data through a single API endpoint",
    "start": "213180",
    "end": "215819"
  },
  {
    "text": "in order to retrieve and operate on the",
    "start": "215819",
    "end": "218400"
  },
  {
    "text": "integrated whole how awesome is that",
    "start": "218400",
    "end": "220920"
  },
  {
    "text": "another kind of superpower is that you",
    "start": "220920",
    "end": "223980"
  },
  {
    "text": "don't have the problem of over fetching",
    "start": "223980",
    "end": "226200"
  },
  {
    "text": "that you have with rest based systems",
    "start": "226200",
    "end": "229080"
  },
  {
    "text": "this is why people often talk about",
    "start": "229080",
    "end": "230879"
  },
  {
    "text": "graphql as an alternative to rest apis",
    "start": "230879",
    "end": "233580"
  },
  {
    "text": "in graphql you use a single HTTP request",
    "start": "233580",
    "end": "236940"
  },
  {
    "text": "to send a query across potentially many",
    "start": "236940",
    "end": "239700"
  },
  {
    "text": "resources and ask for only specific data",
    "start": "239700",
    "end": "242580"
  },
  {
    "text": "elements of each resource that you want",
    "start": "242580",
    "end": "244799"
  },
  {
    "text": "back by contrast in rest you send a",
    "start": "244799",
    "end": "248340"
  },
  {
    "text": "request for each resource and get back a",
    "start": "248340",
    "end": "250980"
  },
  {
    "text": "standard or fixed response with a",
    "start": "250980",
    "end": "253439"
  },
  {
    "text": "superset of data then the data that you",
    "start": "253439",
    "end": "256079"
  },
  {
    "text": "need this is a very inefficient and",
    "start": "256079",
    "end": "259019"
  },
  {
    "text": "arguably less secure way to request data",
    "start": "259019",
    "end": "261959"
  },
  {
    "text": "than graphql provides you make more",
    "start": "261959",
    "end": "264180"
  },
  {
    "text": "calls and transport more data than you",
    "start": "264180",
    "end": "267360"
  },
  {
    "text": "are likely to need and we know when it",
    "start": "267360",
    "end": "269940"
  },
  {
    "text": "comes to Performance and security less",
    "start": "269940",
    "end": "272400"
  },
  {
    "text": "is more",
    "start": "272400",
    "end": "273780"
  },
  {
    "text": "and this is what you see in the example",
    "start": "273780",
    "end": "275639"
  },
  {
    "text": "here on the left we have an example of a",
    "start": "275639",
    "end": "278100"
  },
  {
    "text": "client making multiple rest API requests",
    "start": "278100",
    "end": "281220"
  },
  {
    "text": "and getting back fixed responses and on",
    "start": "281220",
    "end": "284820"
  },
  {
    "text": "the right we have a single graphql",
    "start": "284820",
    "end": "287220"
  },
  {
    "text": "request being sent and it's getting back",
    "start": "287220",
    "end": "289860"
  },
  {
    "text": "just the data it asks for and no more",
    "start": "289860",
    "end": "293340"
  },
  {
    "text": "with graphql we also have some control",
    "start": "293340",
    "end": "296220"
  },
  {
    "start": "294000",
    "end": "294000"
  },
  {
    "text": "over the shape of the response and now",
    "start": "296220",
    "end": "298320"
  },
  {
    "text": "when I say the word shape that's a",
    "start": "298320",
    "end": "300419"
  },
  {
    "text": "technical term shape means the structure",
    "start": "300419",
    "end": "302820"
  },
  {
    "text": "of the response including the names of",
    "start": "302820",
    "end": "305100"
  },
  {
    "text": "the data elements this can be very",
    "start": "305100",
    "end": "307500"
  },
  {
    "text": "important because it provides the",
    "start": "307500",
    "end": "309120"
  },
  {
    "text": "consumer with the flexibility it needs",
    "start": "309120",
    "end": "311280"
  },
  {
    "text": "to handle changes over time renames and",
    "start": "311280",
    "end": "314759"
  },
  {
    "text": "removal of fields are easier to deal",
    "start": "314759",
    "end": "316740"
  },
  {
    "text": "with and it's even possible in some",
    "start": "316740",
    "end": "318780"
  },
  {
    "text": "cases to mimic responses of Legacy",
    "start": "318780",
    "end": "321479"
  },
  {
    "text": "systems that you might be replacing",
    "start": "321479",
    "end": "323520"
  },
  {
    "text": "anyone that has been around API",
    "start": "323520",
    "end": "325620"
  },
  {
    "text": "development for any amount of time knows",
    "start": "325620",
    "end": "327960"
  },
  {
    "text": "that you have to version apis because",
    "start": "327960",
    "end": "330240"
  },
  {
    "text": "consumers become dependent on the",
    "start": "330240",
    "end": "332400"
  },
  {
    "text": "calling and response interfaces if we",
    "start": "332400",
    "end": "335039"
  },
  {
    "text": "change those interfaces then our",
    "start": "335039",
    "end": "337259"
  },
  {
    "text": "consumers are broken and as a result we",
    "start": "337259",
    "end": "340199"
  },
  {
    "text": "must make a new version of each API when",
    "start": "340199",
    "end": "343259"
  },
  {
    "text": "we change it these can be kind of a pain",
    "start": "343259",
    "end": "345720"
  },
  {
    "text": "to manage and their technical debt",
    "start": "345720",
    "end": "348000"
  },
  {
    "text": "graphql doesn't have this issue since",
    "start": "348000",
    "end": "350940"
  },
  {
    "text": "graphql's calling and response interface",
    "start": "350940",
    "end": "353520"
  },
  {
    "text": "is a query language consumers describe",
    "start": "353520",
    "end": "356400"
  },
  {
    "text": "what they want and how they want the",
    "start": "356400",
    "end": "358979"
  },
  {
    "text": "response to look when it returns this",
    "start": "358979",
    "end": "361560"
  },
  {
    "text": "means there's no change to this calling",
    "start": "361560",
    "end": "363720"
  },
  {
    "text": "Convention as the backend system mutates",
    "start": "363720",
    "end": "366240"
  },
  {
    "text": "thus there's no need to version apis",
    "start": "366240",
    "end": "368940"
  },
  {
    "text": "this is a big deal because it simplifies",
    "start": "368940",
    "end": "371880"
  },
  {
    "text": "what we need to manage and it lowers",
    "start": "371880",
    "end": "373919"
  },
  {
    "text": "technical debt graphql also has an",
    "start": "373919",
    "end": "377100"
  },
  {
    "start": "375000",
    "end": "375000"
  },
  {
    "text": "awesome ecosystem everything from",
    "start": "377100",
    "end": "379139"
  },
  {
    "text": "developer tools like Ides to framework",
    "start": "379139",
    "end": "382380"
  },
  {
    "text": "plugins and Lang language bindings are",
    "start": "382380",
    "end": "384840"
  },
  {
    "text": "included in this ecosystem because it's",
    "start": "384840",
    "end": "387300"
  },
  {
    "text": "a spec it's easy to integrate with and",
    "start": "387300",
    "end": "389520"
  },
  {
    "text": "create tools for it and because graphql",
    "start": "389520",
    "end": "392160"
  },
  {
    "text": "is so widely applicable there's a",
    "start": "392160",
    "end": "394319"
  },
  {
    "text": "tremendous incentive to do so this leads",
    "start": "394319",
    "end": "396960"
  },
  {
    "text": "to a lot of adoption and a virtuous",
    "start": "396960",
    "end": "399240"
  },
  {
    "text": "cycle with respect to the community the",
    "start": "399240",
    "end": "401880"
  },
  {
    "text": "ecosystem and adoption just to make sure",
    "start": "401880",
    "end": "404580"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "all of this is concrete let's take a",
    "start": "404580",
    "end": "406620"
  },
  {
    "text": "look at an example of a graphql query",
    "start": "406620",
    "end": "408720"
  },
  {
    "text": "and a response so on the left hand side",
    "start": "408720",
    "end": "411419"
  },
  {
    "text": "of the query we can see that we're",
    "start": "411419",
    "end": "413520"
  },
  {
    "text": "asking for a social post specifically",
    "start": "413520",
    "end": "415860"
  },
  {
    "text": "we're asking for the title and the",
    "start": "415860",
    "end": "418259"
  },
  {
    "text": "comments of the post along with the",
    "start": "418259",
    "end": "420900"
  },
  {
    "text": "comments author there's a couple more",
    "start": "420900",
    "end": "423120"
  },
  {
    "text": "things to note here the first is that",
    "start": "423120",
    "end": "425340"
  },
  {
    "text": "we're asking for what we need in order",
    "start": "425340",
    "end": "427740"
  },
  {
    "text": "to satisfy our use case and only that we",
    "start": "427740",
    "end": "430979"
  },
  {
    "text": "don't need every data element of the",
    "start": "430979",
    "end": "432960"
  },
  {
    "text": "post so we don't ask about it the second",
    "start": "432960",
    "end": "435780"
  },
  {
    "text": "point of interest is that we can see for",
    "start": "435780",
    "end": "437699"
  },
  {
    "text": "each comment that the kind of author we",
    "start": "437699",
    "end": "439979"
  },
  {
    "text": "can receive back for each comment can be",
    "start": "439979",
    "end": "442800"
  },
  {
    "text": "different and and we can see that the",
    "start": "442800",
    "end": "444599"
  },
  {
    "text": "query itself has a mechanism for dealing",
    "start": "444599",
    "end": "447000"
  },
  {
    "text": "with those different kinds of objects",
    "start": "447000",
    "end": "448440"
  },
  {
    "text": "and returning them in a similar fashion",
    "start": "448440",
    "end": "450720"
  },
  {
    "text": "to the calling client on the right hand",
    "start": "450720",
    "end": "453300"
  },
  {
    "text": "side here we can see that we're getting",
    "start": "453300",
    "end": "455400"
  },
  {
    "text": "back the structure that we've asked for",
    "start": "455400",
    "end": "457020"
  },
  {
    "text": "in a Json format",
    "start": "457020",
    "end": "459180"
  },
  {
    "text": "so looking at this closely we can see",
    "start": "459180",
    "end": "461460"
  },
  {
    "text": "just how powerful this approach is the",
    "start": "461460",
    "end": "465000"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "last thing to note here is kind of hard",
    "start": "465000",
    "end": "467160"
  },
  {
    "text": "to see without explaining it you have to",
    "start": "467160",
    "end": "469500"
  },
  {
    "text": "specify what you want back and if you",
    "start": "469500",
    "end": "472139"
  },
  {
    "text": "follow this idea to its logical",
    "start": "472139",
    "end": "473940"
  },
  {
    "text": "conclusion you realize that you can't",
    "start": "473940",
    "end": "476039"
  },
  {
    "text": "write a query that will result in an",
    "start": "476039",
    "end": "478259"
  },
  {
    "text": "arbitrary response and you can't write a",
    "start": "478259",
    "end": "481080"
  },
  {
    "text": "query that has an arbitrary level of",
    "start": "481080",
    "end": "483300"
  },
  {
    "text": "nesting and as we'll see later there are",
    "start": "483300",
    "end": "485880"
  },
  {
    "text": "some use cases where these two types of",
    "start": "485880",
    "end": "488340"
  },
  {
    "text": "queries are relevant and then you'll",
    "start": "488340",
    "end": "490199"
  },
  {
    "text": "need to decide whether graphql is the",
    "start": "490199",
    "end": "492479"
  },
  {
    "text": "right interface or not or instead how",
    "start": "492479",
    "end": "495000"
  },
  {
    "text": "you're going to model your query and the",
    "start": "495000",
    "end": "496800"
  },
  {
    "text": "response and the consumption of that",
    "start": "496800",
    "end": "498539"
  },
  {
    "text": "response in order to work around those",
    "start": "498539",
    "end": "501000"
  },
  {
    "text": "rules graphql like any technology has",
    "start": "501000",
    "end": "504240"
  },
  {
    "text": "some gotchas and areas to watch but",
    "start": "504240",
    "end": "506879"
  },
  {
    "text": "generally speaking it's very compelling",
    "start": "506879",
    "end": "509699"
  },
  {
    "text": "at crafter CMS we're very excited about",
    "start": "509699",
    "end": "512580"
  },
  {
    "text": "graphql and I want to talk a little bit",
    "start": "512580",
    "end": "514800"
  },
  {
    "text": "about why we think graphql is so",
    "start": "514800",
    "end": "516719"
  },
  {
    "text": "important for headless CMS platforms",
    "start": "516719",
    "end": "519000"
  },
  {
    "text": "like crafter CMS",
    "start": "519000",
    "end": "521279"
  },
  {
    "text": "and here's the big one graphql is",
    "start": "521279",
    "end": "523500"
  },
  {
    "text": "technology agnostic on both the front",
    "start": "523500",
    "end": "525720"
  },
  {
    "text": "and back end and it already has a large",
    "start": "525720",
    "end": "528360"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "amount of adoption tool support and",
    "start": "528360",
    "end": "530399"
  },
  {
    "text": "integration across a wide range of",
    "start": "530399",
    "end": "532260"
  },
  {
    "text": "programming languages development",
    "start": "532260",
    "end": "533880"
  },
  {
    "text": "Frameworks and platforms graphql is",
    "start": "533880",
    "end": "536700"
  },
  {
    "text": "really the first opportunity in the",
    "start": "536700",
    "end": "539100"
  },
  {
    "text": "content management space to have a",
    "start": "539100",
    "end": "541320"
  },
  {
    "text": "widely adopted widely understood widely",
    "start": "541320",
    "end": "544320"
  },
  {
    "text": "applicable common API so-called standard",
    "start": "544320",
    "end": "547680"
  },
  {
    "text": "apis in the content management space",
    "start": "547680",
    "end": "549600"
  },
  {
    "text": "like iecm jcr and cmis have generally",
    "start": "549600",
    "end": "553440"
  },
  {
    "text": "failed and I think it's for two main",
    "start": "553440",
    "end": "555300"
  },
  {
    "text": "reasons the first is that they were too",
    "start": "555300",
    "end": "557580"
  },
  {
    "text": "often technology specific and the second",
    "start": "557580",
    "end": "560459"
  },
  {
    "text": "and more important reason is that in a",
    "start": "560459",
    "end": "562800"
  },
  {
    "text": "way they were two content management",
    "start": "562800",
    "end": "564320"
  },
  {
    "text": "specific and Niche all which leads to",
    "start": "564320",
    "end": "567959"
  },
  {
    "text": "adoption issues graphql solves both of",
    "start": "567959",
    "end": "571320"
  },
  {
    "text": "these issues and that's huge as we",
    "start": "571320",
    "end": "573959"
  },
  {
    "text": "talked about graphql also gives you a",
    "start": "573959",
    "end": "575640"
  },
  {
    "start": "574000",
    "end": "574000"
  },
  {
    "text": "degree of control over the shape of your",
    "start": "575640",
    "end": "577140"
  },
  {
    "text": "API responses this is the flexibility",
    "start": "577140",
    "end": "579660"
  },
  {
    "text": "that we don't get from rest API apis and",
    "start": "579660",
    "end": "582180"
  },
  {
    "text": "that we don't get from the many headless",
    "start": "582180",
    "end": "583680"
  },
  {
    "text": "cms's that only support rest apis",
    "start": "583680",
    "end": "587220"
  },
  {
    "text": "remember this kind of flexibility helps",
    "start": "587220",
    "end": "589980"
  },
  {
    "text": "us avoid vendor lock-in and it helps us",
    "start": "589980",
    "end": "592500"
  },
  {
    "text": "deal with use cases that would otherwise",
    "start": "592500",
    "end": "594540"
  },
  {
    "text": "require API versioning which as we",
    "start": "594540",
    "end": "597420"
  },
  {
    "text": "discussed is technical debt and the last",
    "start": "597420",
    "end": "599940"
  },
  {
    "text": "thing that I'll point out here is the",
    "start": "599940",
    "end": "602040"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "support for API gateways federations and",
    "start": "602040",
    "end": "604680"
  },
  {
    "text": "sub graphs is a really big deal in the",
    "start": "604680",
    "end": "607680"
  },
  {
    "text": "content management space marrying",
    "start": "607680",
    "end": "609540"
  },
  {
    "text": "content to business objects is a major",
    "start": "609540",
    "end": "612120"
  },
  {
    "text": "and very common use case in the content",
    "start": "612120",
    "end": "615120"
  },
  {
    "text": "management space products live in",
    "start": "615120",
    "end": "617220"
  },
  {
    "text": "product information management systems",
    "start": "617220",
    "end": "618959"
  },
  {
    "text": "marketing content lives in content",
    "start": "618959",
    "end": "621300"
  },
  {
    "text": "Management systems but the object that",
    "start": "621300",
    "end": "623519"
  },
  {
    "text": "our applications want back what they",
    "start": "623519",
    "end": "625860"
  },
  {
    "text": "want to present to users is a",
    "start": "625860",
    "end": "627600"
  },
  {
    "text": "combination of the product data and the",
    "start": "627600",
    "end": "629820"
  },
  {
    "text": "marketing content graphql makes marrying",
    "start": "629820",
    "end": "632820"
  },
  {
    "text": "these types of objects together very",
    "start": "632820",
    "end": "634680"
  },
  {
    "text": "seamless efficient and easy for end user",
    "start": "634680",
    "end": "637440"
  },
  {
    "text": "applications and that's a major major",
    "start": "637440",
    "end": "640680"
  },
  {
    "text": "win",
    "start": "640680",
    "end": "641820"
  },
  {
    "text": "now let's talk specifically about",
    "start": "641820",
    "end": "643560"
  },
  {
    "text": "graphql with crafter CMS",
    "start": "643560",
    "end": "646440"
  },
  {
    "text": "and for those of you who don't know",
    "start": "646440",
    "end": "648120"
  },
  {
    "text": "crafter let me give you a quick overview",
    "start": "648120",
    "end": "650120"
  },
  {
    "text": "crafter CMS is an open source headless",
    "start": "650120",
    "end": "653040"
  },
  {
    "text": "CMS unlike the other thousands of CMS",
    "start": "653040",
    "end": "655920"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "platforms out there crafter is built on",
    "start": "655920",
    "end": "658079"
  },
  {
    "text": "top of git git gives crafter CMS its own",
    "start": "658079",
    "end": "661200"
  },
  {
    "text": "set of superpowers our git-based",
    "start": "661200",
    "end": "663720"
  },
  {
    "text": "versioning is like a time machine we can",
    "start": "663720",
    "end": "665700"
  },
  {
    "text": "reproduce any moment at any time to",
    "start": "665700",
    "end": "668760"
  },
  {
    "text": "support Advanced editorial use cases",
    "start": "668760",
    "end": "670500"
  },
  {
    "text": "like rollbacks or Audits and we can",
    "start": "670500",
    "end": "672779"
  },
  {
    "text": "support working in teams based on",
    "start": "672779",
    "end": "674880"
  },
  {
    "text": "branches for use cases like redesigns or",
    "start": "674880",
    "end": "678000"
  },
  {
    "text": "the segregation of sensitive content and",
    "start": "678000",
    "end": "680519"
  },
  {
    "text": "the team that's working around that",
    "start": "680519",
    "end": "681839"
  },
  {
    "text": "sensitive content from the larger team",
    "start": "681839",
    "end": "684420"
  },
  {
    "text": "and these are very difficult problems to",
    "start": "684420",
    "end": "686940"
  },
  {
    "text": "solve otherwise",
    "start": "686940",
    "end": "688560"
  },
  {
    "text": "also leveraging git-based workflow",
    "start": "688560",
    "end": "691320"
  },
  {
    "start": "689000",
    "end": "689000"
  },
  {
    "text": "mechanics crafter CMS fits directly into",
    "start": "691320",
    "end": "693720"
  },
  {
    "text": "your devops process making it easy to",
    "start": "693720",
    "end": "695880"
  },
  {
    "text": "move content and code between",
    "start": "695880",
    "end": "697320"
  },
  {
    "text": "environments this tight integration of",
    "start": "697320",
    "end": "699959"
  },
  {
    "text": "devops with the content process is",
    "start": "699959",
    "end": "702180"
  },
  {
    "text": "called Dev content Ops and unlike a",
    "start": "702180",
    "end": "705240"
  },
  {
    "start": "704000",
    "end": "704000"
  },
  {
    "text": "handful of other git-based cms's out",
    "start": "705240",
    "end": "707339"
  },
  {
    "text": "there which are generally intended for",
    "start": "707339",
    "end": "708959"
  },
  {
    "text": "static sites crafter CMS is designed to",
    "start": "708959",
    "end": "711480"
  },
  {
    "text": "manage Dynamic and personalized content",
    "start": "711480",
    "end": "713579"
  },
  {
    "text": "for any channel to support this content",
    "start": "713579",
    "end": "716339"
  },
  {
    "text": "authors need great authoring tools and",
    "start": "716339",
    "end": "719160"
  },
  {
    "text": "crafter CMS has a very robust and easy",
    "start": "719160",
    "end": "721920"
  },
  {
    "text": "to use set of in-context editing and",
    "start": "721920",
    "end": "724260"
  },
  {
    "text": "drag and drop content authoring tools",
    "start": "724260",
    "end": "726420"
  },
  {
    "text": "for Content authors and of course",
    "start": "726420",
    "end": "728820"
  },
  {
    "text": "crafter CMS supports a variety of API",
    "start": "728820",
    "end": "731640"
  },
  {
    "text": "endpoints one of which is graphql we",
    "start": "731640",
    "end": "734760"
  },
  {
    "text": "benefit from graphql in all of the ways",
    "start": "734760",
    "end": "737100"
  },
  {
    "text": "that we've discussed in addition to",
    "start": "737100",
    "end": "738779"
  },
  {
    "text": "those there are a few crafter CMS",
    "start": "738779",
    "end": "741060"
  },
  {
    "text": "specific things about our graphql",
    "start": "741060",
    "end": "743040"
  },
  {
    "text": "implementation that I'd like to point",
    "start": "743040",
    "end": "744480"
  },
  {
    "text": "out and the first is that our graphql",
    "start": "744480",
    "end": "747120"
  },
  {
    "text": "implementation is completely native and",
    "start": "747120",
    "end": "749820"
  },
  {
    "text": "very fast graphql is an afterthought for",
    "start": "749820",
    "end": "753420"
  },
  {
    "text": "many CMS platforms and it has been",
    "start": "753420",
    "end": "755459"
  },
  {
    "text": "bolted onto their existing apis",
    "start": "755459",
    "end": "758040"
  },
  {
    "text": "with the bolt-on approach one graphql",
    "start": "758040",
    "end": "760260"
  },
  {
    "text": "query may turn into a large number of",
    "start": "760260",
    "end": "762899"
  },
  {
    "text": "actual CMS queries crafter CMS takes the",
    "start": "762899",
    "end": "766980"
  },
  {
    "text": "opposite approach to this we see graphql",
    "start": "766980",
    "end": "769440"
  },
  {
    "text": "as strategic so we've made graphql",
    "start": "769440",
    "end": "771899"
  },
  {
    "text": "native to our system and to the extent",
    "start": "771899",
    "end": "774360"
  },
  {
    "text": "possible one graphql query is one CMS",
    "start": "774360",
    "end": "778440"
  },
  {
    "text": "query within crafter CMS another thing",
    "start": "778440",
    "end": "781139"
  },
  {
    "text": "that we do is automatically generate",
    "start": "781139",
    "end": "783300"
  },
  {
    "text": "your graphql schema for you so you don't",
    "start": "783300",
    "end": "785940"
  },
  {
    "text": "have to when you define content objects",
    "start": "785940",
    "end": "788519"
  },
  {
    "text": "in crafter CMS we automatically",
    "start": "788519",
    "end": "790500"
  },
  {
    "text": "configure your graphql schema for you",
    "start": "790500",
    "end": "792839"
  },
  {
    "text": "saving you time and effort and lastly we",
    "start": "792839",
    "end": "796860"
  },
  {
    "text": "provide programmatic extension points",
    "start": "796860",
    "end": "798720"
  },
  {
    "text": "for you within our graphql server so you",
    "start": "798720",
    "end": "801480"
  },
  {
    "text": "can Define your own schema elements and",
    "start": "801480",
    "end": "803760"
  },
  {
    "text": "Fetchers from our last point you know",
    "start": "803760",
    "end": "806279"
  },
  {
    "text": "that we're all about low code support we",
    "start": "806279",
    "end": "808560"
  },
  {
    "text": "don't want you to have to program or do",
    "start": "808560",
    "end": "810180"
  },
  {
    "text": "more work than you need to but we know",
    "start": "810180",
    "end": "811980"
  },
  {
    "text": "that we can't think of everything so",
    "start": "811980",
    "end": "813779"
  },
  {
    "text": "we've given you the extension points",
    "start": "813779",
    "end": "815339"
  },
  {
    "text": "that you need so you'll always have the",
    "start": "815339",
    "end": "817260"
  },
  {
    "text": "flexibility to handle any kind of",
    "start": "817260",
    "end": "819120"
  },
  {
    "text": "integration scenario that you face okay",
    "start": "819120",
    "end": "821639"
  },
  {
    "text": "let me sum this up by saying that while",
    "start": "821639",
    "end": "823560"
  },
  {
    "start": "822000",
    "end": "822000"
  },
  {
    "text": "no technology is a silver bullet graphql",
    "start": "823560",
    "end": "826139"
  },
  {
    "text": "is a powerful and important technology",
    "start": "826139",
    "end": "828540"
  },
  {
    "text": "that has a large and growing base of",
    "start": "828540",
    "end": "830940"
  },
  {
    "text": "adoption we feel that it's a fundamental",
    "start": "830940",
    "end": "833880"
  },
  {
    "text": "technology for the CMS space at crafter",
    "start": "833880",
    "end": "836519"
  },
  {
    "text": "CMS we're committed not only to having",
    "start": "836519",
    "end": "838860"
  },
  {
    "text": "and supporting a graphql server we're",
    "start": "838860",
    "end": "841200"
  },
  {
    "text": "committed to having one of the best if",
    "start": "841200",
    "end": "843000"
  },
  {
    "text": "not the best implementations for",
    "start": "843000",
    "end": "845100"
  },
  {
    "text": "headless CMS out there in the open",
    "start": "845100",
    "end": "846839"
  },
  {
    "text": "source space and with that I'd like to",
    "start": "846839",
    "end": "849000"
  },
  {
    "text": "thank you very much for your time I hope",
    "start": "849000",
    "end": "851100"
  },
  {
    "text": "you learned something about graphql and",
    "start": "851100",
    "end": "853440"
  },
  {
    "text": "about crafter CMS if you're interested",
    "start": "853440",
    "end": "856019"
  },
  {
    "text": "in learning more about crafter CMS",
    "start": "856019",
    "end": "857820"
  },
  {
    "text": "please visit us online at craftercms.com",
    "start": "857820",
    "end": "860940"
  },
  {
    "text": "and craftercms.org thanks and have a",
    "start": "860940",
    "end": "864480"
  },
  {
    "text": "great day",
    "start": "864480",
    "end": "866720"
  }
]