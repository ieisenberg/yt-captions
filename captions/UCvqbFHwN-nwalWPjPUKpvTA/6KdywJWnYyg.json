[
  {
    "text": "yes we are excellent uh my name is Evan Anderson um I'm currently working at Stack Lock but previously I've worked at",
    "start": "1120",
    "end": "9120"
  },
  {
    "text": "VMware on the Tanu product and on Google Cloud um one of the things I'm known for",
    "start": "9120",
    "end": "15599"
  },
  {
    "text": "is being the founder of the Kative project or one of the founders of the Kative project want to share the credit",
    "start": "15599",
    "end": "20800"
  },
  {
    "text": "because it was really a big team effort um so I have opinions about custom",
    "start": "20800",
    "end": "26160"
  },
  {
    "text": "resources having been doing them since shortly after they were renamed thirdparty resources or from third party",
    "start": "26160",
    "end": "34040"
  },
  {
    "text": "resources and",
    "start": "34040",
    "end": "38040"
  },
  {
    "text": "um why is my clicker not working",
    "start": "39239",
    "end": "44280"
  },
  {
    "text": "uh ah yes um and I drop in on various CNCF projects so",
    "start": "44280",
    "end": "53079"
  },
  {
    "text": "um I I've seen a bit of things out there and this is largely derived from stuff",
    "start": "53079",
    "end": "58399"
  },
  {
    "text": "I've seen and experienced and as we go through these um I'm going to highlight",
    "start": "58399",
    "end": "63760"
  },
  {
    "text": "which things are easy to just drop in and help fix on a project and which things are stuff that you may need to",
    "start": "63760",
    "end": "69680"
  },
  {
    "text": "talk to the maintainers to really get stuff going forward but first of all this is a UX talk for",
    "start": "69680",
    "end": "77600"
  },
  {
    "text": "people who are writing Kubernetes operators and that's kind of a weird thing to say because Kubernetes",
    "start": "77600",
    "end": "82960"
  },
  {
    "text": "operators aren't really known for great UX um and there's lots of open source",
    "start": "82960",
    "end": "90159"
  },
  {
    "text": "projects that don't have great UX and have still been very successful uh the UX for Git if anyone really loves it I'm",
    "start": "90159",
    "end": "98159"
  },
  {
    "text": "sorry but it's bad um Linux's UX is weird and mixed and you",
    "start": "98159",
    "end": "105280"
  },
  {
    "text": "can see all the strata and layers of stuff why does Kubernetes matter well because this is where",
    "start": "105280",
    "end": "113159"
  },
  {
    "text": "developers hopefully are coming to actually live and work and hopefully",
    "start": "113159",
    "end": "119520"
  },
  {
    "text": "they'll find it a friendly and welcoming place like we find CubeCon a friendly and welcoming place furthermore this is",
    "start": "119520",
    "end": "127200"
  },
  {
    "text": "where operations happen and the worst thing when you're under stress is having",
    "start": "127200",
    "end": "134080"
  },
  {
    "text": "to think real hard rather than having clear obvious solutions um one of the",
    "start": "134080",
    "end": "139520"
  },
  {
    "text": "things I was talking about with someone earlier today was feature flags if you have a feature flag that says avoid bug",
    "start": "139520",
    "end": "146440"
  },
  {
    "text": "foo do you want that set to true or false you have to think for a moment so",
    "start": "146440",
    "end": "153120"
  },
  {
    "text": "having clear interfaces for operating our systems is really important when",
    "start": "153120",
    "end": "160720"
  },
  {
    "text": "things go wrong and when things go wrong is the time that it's most important so",
    "start": "160720",
    "end": "167040"
  },
  {
    "text": "think about it all the time so that when things go wrong everyone is happy that",
    "start": "167040",
    "end": "172800"
  },
  {
    "text": "it was quickly resolved and that there weren't mistakes that made it worse we're going to start with a bunch",
    "start": "172800",
    "end": "178959"
  },
  {
    "text": "of basics if you're writing a custom resource um if you've never written a custom resource before there's a bunch",
    "start": "178959",
    "end": "185040"
  },
  {
    "text": "of tutorials out there and they'll fill in some of this for you but I'm going to give you a little bit more color than",
    "start": "185040",
    "end": "190239"
  },
  {
    "text": "just you need to have a status status is really where your controller whatever",
    "start": "190239",
    "end": "196400"
  },
  {
    "text": "you're managing tells the rest of the world about what's going on and sometimes you're telling a",
    "start": "196400",
    "end": "202800"
  },
  {
    "text": "machine and sometimes you're telling a person and so you want fields for both",
    "start": "202800",
    "end": "209080"
  },
  {
    "text": "so you know we have the really simple rep simple example here oh I you asked for four replicas i've only got two",
    "start": "209080",
    "end": "215920"
  },
  {
    "text": "right now um one thing I'd criticize right away is this healthy replicas or",
    "start": "215920",
    "end": "221920"
  },
  {
    "text": "total replicas maybe you need a little bit more detail but also maybe you want",
    "start": "221920",
    "end": "227120"
  },
  {
    "text": "a description for a human that says \"Why are there two when I asked for four?\"",
    "start": "227120",
    "end": "232519"
  },
  {
    "text": "um descriptions sentences you know here's a here's",
    "start": "232519",
    "end": "238400"
  },
  {
    "text": "what's going on here are all for humans and then machines want like an enum what's the status of this is this",
    "start": "238400",
    "end": "245000"
  },
  {
    "text": "degraded is this working uh if I sent a request to it would I expect it to go or",
    "start": "245000",
    "end": "250799"
  },
  {
    "text": "not um that's all stuff you should be looking to put in your status and in",
    "start": "250799",
    "end": "257040"
  },
  {
    "text": "both cases references to other Kubernetes resources can be helpful um",
    "start": "257040",
    "end": "262240"
  },
  {
    "text": "and we're going to look at a few examples here so um an Argo application",
    "start": "262240",
    "end": "268240"
  },
  {
    "text": "has a status that tells you that's this um middle one here that tells you hey",
    "start": "268240",
    "end": "274800"
  },
  {
    "text": "everything is in sync i've applied all the stuff you want but it also gives you a list of all the resources it created",
    "start": "274800",
    "end": "281040"
  },
  {
    "text": "so you can go and track those down and figure out okay these are all the things that this application controls um a K",
    "start": "281040",
    "end": "289040"
  },
  {
    "text": "native service i'm going to pick on K native a bunch because I worked on a lot of this stuff we'll tell you the URL",
    "start": "289040",
    "end": "294479"
  },
  {
    "text": "that you can use to reach that service um so you say \"Hey deploy this",
    "start": "294479",
    "end": "300639"
  },
  {
    "text": "thing.\" And it comes back and it says \"Here's where you can reach it.\" Um it would be great if we had more resources",
    "start": "300639",
    "end": "307120"
  },
  {
    "text": "that gave you that kind of here's where you can go to do this right away um it also tells you the last the the revision",
    "start": "307120",
    "end": "315440"
  },
  {
    "text": "that is that is currently ready maybe you have future ones that aren't working and that it'll give you some information",
    "start": "315440",
    "end": "321600"
  },
  {
    "text": "about that too but um and then if you look at C manager they have things like",
    "start": "321600",
    "end": "328479"
  },
  {
    "text": "when your C is valid for that you might want to know that you don't want to have to go crawl around for they give it to",
    "start": "328479",
    "end": "334880"
  },
  {
    "text": "you right up front so these are some good examples um and you'll see there's also conditions which we'll talk about a",
    "start": "334880",
    "end": "340560"
  },
  {
    "text": "little later in the search manager um Argo and K native also have them but I",
    "start": "340560",
    "end": "345919"
  },
  {
    "text": "cut out a bunch of stuff often status is at least as long as the spec humans write a short thing of this is the thing",
    "start": "345919",
    "end": "351919"
  },
  {
    "text": "I want and then we have computers expand it out into a big long thing sometimes we do that deterministically and we call",
    "start": "351919",
    "end": "357759"
  },
  {
    "text": "it controllers sometimes we do it nondeterministically and we call it LLMs but um in any case you know m computers",
    "start": "357759",
    "end": "366960"
  },
  {
    "text": "are ways for us to write short things and make big things out of them um and so status is great and sometimes",
    "start": "366960",
    "end": "375120"
  },
  {
    "text": "it doesn't make sense to have status and so when that happens you don't have to",
    "start": "375120",
    "end": "380720"
  },
  {
    "text": "include it it's not a Kubernetes rule that you have to have a spec and a status um and sometimes you're defining",
    "start": "380720",
    "end": "388319"
  },
  {
    "text": "configuration for something else and that configuration on its own doesn't affect anything it's only when you wire",
    "start": "388319",
    "end": "394319"
  },
  {
    "text": "it into something else um and so something like a gateway class or",
    "start": "394319",
    "end": "399600"
  },
  {
    "text": "storage class says hey when you create a persistent volume when you create a gateway use this implementation and",
    "start": "399600",
    "end": "405440"
  },
  {
    "text": "here's the parameters to use when you create that gateway it will have a status that says oh yeah I provisioned",
    "start": "405440",
    "end": "411199"
  },
  {
    "text": "that stuff or you know hey I wasn't able to provision that because you don't have quota for you know that type of disk um",
    "start": "411199",
    "end": "419280"
  },
  {
    "text": "that's where the the status goes for those classes similarly if you have policies uh like a role binding that",
    "start": "419280",
    "end": "427120"
  },
  {
    "text": "gives permissions but it doesn't really have a status of its own it just tells",
    "start": "427120",
    "end": "432560"
  },
  {
    "text": "the Kubernetes control plane hey here's a thing that should be",
    "start": "432560",
    "end": "437960"
  },
  {
    "text": "granted um another this is not in your CRD this",
    "start": "437960",
    "end": "443199"
  },
  {
    "text": "is a Kubernetes resource but if you're writing a controller you should know about this um Kubernetes has this notion",
    "start": "443199",
    "end": "450319"
  },
  {
    "text": "of things called events and they're objects and it's a little weird to have an object that is an event and it really",
    "start": "450319",
    "end": "457039"
  },
  {
    "text": "says this thing happened at least once um you can see that somewhere over here there is a count of how many times it",
    "start": "457039",
    "end": "464160"
  },
  {
    "text": "happened um that is about one of your objects so when you run cube control",
    "start": "464160",
    "end": "470000"
  },
  {
    "text": "describe you can get a list of the recent events that have happened and that means that your users can find out",
    "start": "470000",
    "end": "476879"
  },
  {
    "text": "what's going on without having to read your controller logs which is really great if they don't have access to your",
    "start": "476879",
    "end": "483280"
  },
  {
    "text": "controller logs because they're only in only have access to one namespace or something like that so um if you are",
    "start": "483280",
    "end": "491199"
  },
  {
    "text": "authoring a controller think about what the events that are reasonable and relevant",
    "start": "491199",
    "end": "497120"
  },
  {
    "text": "are when there's a state change you probably want to create an event if there's no state change and you just",
    "start": "497120",
    "end": "502560"
  },
  {
    "text": "checked everything don't create an event that'll put a whole bunch of noise on the API server you can crash your",
    "start": "502560",
    "end": "508319"
  },
  {
    "text": "cluster it's a fun time done it um needed to take out that controller",
    "start": "508319",
    "end": "514560"
  },
  {
    "text": "and rebuild it to take out those events um oh and I don't know if I mentioned it",
    "start": "514560",
    "end": "520159"
  },
  {
    "text": "before these little things that have a little gopher down in the corner um mean that you're going to need to get into the Go code and it's probably going to",
    "start": "520159",
    "end": "526399"
  },
  {
    "text": "be a more involved change um some of the slides don't have the little gopher in the corner and that is a change that's",
    "start": "526399",
    "end": "532720"
  },
  {
    "text": "just in your custom resource YAML and those are often easy to just drive by",
    "start": "532720",
    "end": "537839"
  },
  {
    "text": "and say \"Hey look I helped.\" Um and this is one of those",
    "start": "537839",
    "end": "543120"
  },
  {
    "text": "examples that doesn't have the little gopher over in the corner um there's some built-in roles that Kubernetes",
    "start": "543120",
    "end": "549279"
  },
  {
    "text": "gives you view edit admin you can assign these to a particular namespace so I can",
    "start": "549279",
    "end": "555040"
  },
  {
    "text": "say I'm going to pick on Josh in the front because I see him here i can say Josh can can view you know the resources",
    "start": "555040",
    "end": "560880"
  },
  {
    "text": "in this namespace and that's great he can see all the pods and all the deployments and so forth and then I",
    "start": "560880",
    "end": "567680"
  },
  {
    "text": "deploy a gateway API resource and he can't see it because gateway API isn't one of the things that Kubernetes knows",
    "start": "567680",
    "end": "574080"
  },
  {
    "text": "about his permissions for if you add one of these aggregate to view labels to a",
    "start": "574080",
    "end": "580240"
  },
  {
    "text": "cluster role it will build it into the view ro and then if you ship that",
    "start": "580240",
    "end": "586080"
  },
  {
    "text": "everyone who installs on the cluster who has Vue gets to view your custom resources the same way that they can",
    "start": "586080",
    "end": "591440"
  },
  {
    "text": "view pods and deployments and don't get to view secrets so view is not universal",
    "start": "591440",
    "end": "597760"
  },
  {
    "text": "sometimes you're like actually you don't get to see these things but by default probably give people view or edit on",
    "start": "597760",
    "end": "605760"
  },
  {
    "text": "your resources unless there's a good reason not to um you can also use the same aggregation mechanism to build your",
    "start": "605760",
    "end": "612880"
  },
  {
    "text": "own custom roles so K native does this because we have a somewhat pluggable set of events i bet crossplane does this too",
    "start": "612880",
    "end": "619680"
  },
  {
    "text": "where you have a new resource type and you want to roll it up into some larger",
    "start": "619680",
    "end": "625279"
  },
  {
    "text": "permission set um aggregated roles is the way to do it it's in the Kubernetes",
    "start": "625279",
    "end": "630839"
  },
  {
    "text": "documentation read it you'll be happy or you know moderately content",
    "start": "630839",
    "end": "637440"
  },
  {
    "text": "um and then this one some people find controversial but I found really really",
    "start": "637440",
    "end": "643800"
  },
  {
    "text": "powerful um there's a standard Kubernetes convention to have a",
    "start": "643800",
    "end": "648839"
  },
  {
    "text": "condition that has a certain schema to it um and it says you should have some",
    "start": "648839",
    "end": "654360"
  },
  {
    "text": "conditions let me give you a few more rules that I think will make you happy and will make people building a UX",
    "start": "654360",
    "end": "660959"
  },
  {
    "text": "around your custom resources happy um first of all have a top level thing a",
    "start": "660959",
    "end": "667320"
  },
  {
    "text": "summary for humans or dashboards uh ready and succeeded are the two that I",
    "start": "667320",
    "end": "672480"
  },
  {
    "text": "recommend ready if it's an ongoing thing like a deployment and succeeded if it's something like a job finished is not a",
    "start": "672480",
    "end": "679440"
  },
  {
    "text": "good choice because you don't know was it a happy finish or an unhappy finish",
    "start": "679440",
    "end": "684720"
  },
  {
    "text": "uh succeeded is real clear about did I get to the place I wanted or did I not",
    "start": "684720",
    "end": "691000"
  },
  {
    "text": "um and then all the other types use the same polarity so talk about things that",
    "start": "691000",
    "end": "698480"
  },
  {
    "text": "you want to have happen so you can see here we've got foo worked and barfetched and I synced baz you know I don't know",
    "start": "698480",
    "end": "705760"
  },
  {
    "text": "what those things are but they're all telling me about positive things that I want to get to and once you do that you",
    "start": "705760",
    "end": "712000"
  },
  {
    "text": "can automatically summarize in your controller you know hey anything plus a",
    "start": "712000",
    "end": "717360"
  },
  {
    "text": "plus a false means that I'm not ready because something went bad a bunch of stuff that's unknown means it's still",
    "start": "717360",
    "end": "724079"
  },
  {
    "text": "working so if I've got some good stuff and some unknown my overall ready status is unknown if everything's green great",
    "start": "724079",
    "end": "732560"
  },
  {
    "text": "it's green and you can actually do this in your UI you can show the little green dots filling up um and if something goes",
    "start": "732560",
    "end": "739200"
  },
  {
    "text": "red then you can show the whole thing as red um so K native has a library for",
    "start": "739200",
    "end": "744560"
  },
  {
    "text": "this but you can do this on your own too but um if you do your conditions like this machines can figure out because",
    "start": "744560",
    "end": "751519"
  },
  {
    "text": "they can just say oh I'm looking for false bad true good when do I get ready",
    "start": "751519",
    "end": "756639"
  },
  {
    "text": "true um and humans can look at it and they can figure out what's going on um",
    "start": "756639",
    "end": "762240"
  },
  {
    "text": "the reason that I recommend a positive polarity here what I call it true means good things is when we started with K",
    "start": "762240",
    "end": "769519"
  },
  {
    "text": "native we had a false polarity and failed was the bad thing and so what you",
    "start": "769519",
    "end": "776560"
  },
  {
    "text": "wanted was failed false and everyone who read",
    "start": "776560",
    "end": "782120"
  },
  {
    "text": "failed said oh gosh it failed when it said failed and then",
    "start": "782120",
    "end": "787519"
  },
  {
    "text": "false two bad things and you put the two bad things together and you get a good and people's brains don't work that way",
    "start": "787519",
    "end": "793760"
  },
  {
    "text": "so I encourage you positive polarity here um so now we're going to talk",
    "start": "793760",
    "end": "800120"
  },
  {
    "text": "about not stuff that's in your CRD but stuff that's around it um and the first",
    "start": "800120",
    "end": "805760"
  },
  {
    "text": "thing is think about do you need a CLI at all cube control is pretty amazingly",
    "start": "805760",
    "end": "812200"
  },
  {
    "text": "powerful um there is some fields in your custom resource definition that can make cube control way more powerful um the",
    "start": "812200",
    "end": "819920"
  },
  {
    "text": "first one is additional printer columns so when someone does a cube control get",
    "start": "819920",
    "end": "825040"
  },
  {
    "text": "on your resource you can control what extra information they get and you can actually give them more information if",
    "start": "825040",
    "end": "832079"
  },
  {
    "text": "they ask for wide format too so you can say oh this is kind of a detail this is the core stuff you really need to know",
    "start": "832079",
    "end": "838519"
  },
  {
    "text": "um you can also add extra short names so Argo CD for example their top level",
    "start": "838519",
    "end": "844560"
  },
  {
    "text": "object is called application i don't know anybody who wants to type out application everyone wants to just say",
    "start": "844560",
    "end": "849839"
  },
  {
    "text": "get app so you can say app is my short name but application is the full thing",
    "start": "849839",
    "end": "855440"
  },
  {
    "text": "uh similarly certificate no one wants to type so search manager gives youert as a short name um there's also a categories",
    "start": "855440",
    "end": "863199"
  },
  {
    "text": "group um there's a cube control get all that will list all your basic built-in",
    "start": "863199",
    "end": "869440"
  },
  {
    "text": "Kubernetes resources if you add your resources to the all category they'll show up there too and then when you say",
    "start": "869440",
    "end": "875920"
  },
  {
    "text": "cube control get all you get all your HTTP routes from gateway and you get all your K native services and you get all",
    "start": "875920",
    "end": "882000"
  },
  {
    "text": "your Argo CD apps all in one place and if you forget to do it you get like a third of your resources and you're like",
    "start": "882000",
    "end": "888560"
  },
  {
    "text": "I know there's more here what are they and then you list all your API resources and you have this huge terrible script",
    "start": "888560",
    "end": "895040"
  },
  {
    "text": "and you're sad um I don't want you to be sad i want you to be happy that's why we're here happiness",
    "start": "895040",
    "end": "901320"
  },
  {
    "text": "um another thing that you can do and this requires writing Go code and designing your stuff is build aggregated",
    "start": "901320",
    "end": "908800"
  },
  {
    "text": "objects so you can see over on the left hand side you've got um a K native",
    "start": "908800",
    "end": "915199"
  },
  {
    "text": "service is composed of a bunch of different stuff and on the right um if you want to get a search manager",
    "start": "915199",
    "end": "921399"
  },
  {
    "text": "certificate it will spawn a bunch of extra stuff this top level object gives you a thing where you can summarize",
    "start": "921399",
    "end": "927760"
  },
  {
    "text": "stuff for your users and you can see here you know uh search manager shows",
    "start": "927760",
    "end": "934079"
  },
  {
    "text": "you hey the issuer and the certificate's up to date and all that nice stuff and K native gives you the URL and what",
    "start": "934079",
    "end": "940399"
  },
  {
    "text": "revision is running and stuff like that um and then sometimes you do need to",
    "start": "940399",
    "end": "948079"
  },
  {
    "text": "build a CLI anyway so um these are a couple of good cases I've seen um",
    "start": "948079",
    "end": "955279"
  },
  {
    "text": "sometimes there's a bunch of setup and we'll talk about a really cool example in just a moment of getting a whole",
    "start": "955279",
    "end": "962320"
  },
  {
    "text": "bunch of stuff done at once and the other is um giving people a friendly way",
    "start": "962320",
    "end": "967680"
  },
  {
    "text": "to like read the status and like wait for something to be done um and if you're thinking about that second part",
    "start": "967680",
    "end": "973920"
  },
  {
    "text": "you should think as well do people really want a command line or are they really going to want like a web page and",
    "start": "973920",
    "end": "979600"
  },
  {
    "text": "maybe you want to build yourself a little guey for the second case um so",
    "start": "979600",
    "end": "985199"
  },
  {
    "text": "the sec funny funny enough the second case is the one I did first here when you run kn service create it tells you",
    "start": "985199",
    "end": "992720"
  },
  {
    "text": "what it's doing all along the way and at the end it prints out hey your URL is here go enjoy um and then Flux Bootstrap",
    "start": "992720",
    "end": "1002160"
  },
  {
    "text": "is really neat because it will actually go and set up a repository for you and set up everything that you need to",
    "start": "1002160",
    "end": "1008639"
  },
  {
    "text": "install Flux on the cluster and then get Flux going and then the files that are",
    "start": "1008639",
    "end": "1013920"
  },
  {
    "text": "in GitHub will actually reinstall Flux over itself in the cluster so you can use Flux to manage itself and I don't",
    "start": "1013920",
    "end": "1020720"
  },
  {
    "text": "know how many of you have tried to set up this kind of thing on your own uh I would fail that eight out of 10 times i",
    "start": "1020720",
    "end": "1027360"
  },
  {
    "text": "know Kubernetes i suspect most users would get like a third of the way through and something would go wrong and",
    "start": "1027360",
    "end": "1033760"
  },
  {
    "text": "you'd be debugging it so Flux Bootstrap just gets you all the way there it's orchestrating a workflow um and that's a",
    "start": "1033760",
    "end": "1039760"
  },
  {
    "text": "really good thing to use a CLI for and so now we're going to get into",
    "start": "1039760",
    "end": "1045280"
  },
  {
    "text": "the kind of advanced cool stuff that you can do once you've got the basics down",
    "start": "1045280",
    "end": "1050919"
  },
  {
    "text": "um so there's a bunch of types that are already in Kubernetes that are maybe",
    "start": "1050919",
    "end": "1056480"
  },
  {
    "text": "close to what you're doing steal them use them um object reference and label",
    "start": "1056480",
    "end": "1062799"
  },
  {
    "text": "selector are a couple things that show up everywhere don't invent your own object reference don't invent your own",
    "start": "1062799",
    "end": "1068720"
  },
  {
    "text": "label selector use the ones that are in Kubernetes everyone will know them",
    "start": "1068720",
    "end": "1074760"
  },
  {
    "text": "um similarly there's a pattern K native has done a lot with it but I've seen crossplane and other things use it as",
    "start": "1074760",
    "end": "1080799"
  },
  {
    "text": "well called duct typing where you have a bunch of different objects but they all",
    "start": "1080799",
    "end": "1086000"
  },
  {
    "text": "have a particular field that matches a common pattern so if you look at a deployment it has a spec and a template",
    "start": "1086000",
    "end": "1092559"
  },
  {
    "text": "and inside the template is a pod template spec you look at a damon set spec template it's the same thing inside",
    "start": "1092559",
    "end": "1099760"
  },
  {
    "text": "there um you look at a job same thing inside there you look at a K native",
    "start": "1099760",
    "end": "1106000"
  },
  {
    "text": "service it looks the same it's got a pod template spec inspect template that's not an accident we started differently",
    "start": "1106000",
    "end": "1112640"
  },
  {
    "text": "and then we realized everyone who knew Kubernetes pods had to relearn things",
    "start": "1112640",
    "end": "1118160"
  },
  {
    "text": "why bother and then we had to do more work to pass things through and copy them around it's easier for people to",
    "start": "1118160",
    "end": "1124480"
  },
  {
    "text": "say \"Here's this block it moves over here.\" um you know borrow these things it's the",
    "start": "1124480",
    "end": "1131760"
  },
  {
    "text": "best form of flattery to the people who wrote them and it will make your life easier uh another thing that I see",
    "start": "1131760",
    "end": "1139679"
  },
  {
    "text": "people who are designing CRDs struggle with sometimes is zero values um and I'm",
    "start": "1139679",
    "end": "1145440"
  },
  {
    "text": "I'm going to pick on K native a little bit here because they were just doing a talk about policy stuff and they had",
    "start": "1145440",
    "end": "1152320"
  },
  {
    "text": "some really nice use of zero values so um basically zero is I didn't fill this",
    "start": "1152320",
    "end": "1160240"
  },
  {
    "text": "in in Go if you just use like a standard int or standard list or something like",
    "start": "1160240",
    "end": "1165320"
  },
  {
    "text": "that the zero value is the same as I didn't bother filling this in and you",
    "start": "1165320",
    "end": "1170720"
  },
  {
    "text": "can use that to say do the right thing so um they were designing permissions on",
    "start": "1170720",
    "end": "1177600"
  },
  {
    "text": "you know K native was designing permissions on resources and they if you",
    "start": "1177600",
    "end": "1182720"
  },
  {
    "text": "want to say this this permission applies to all the resources in a particular",
    "start": "1182720",
    "end": "1188120"
  },
  {
    "text": "namespace since this is namespaced the target you leave empty",
    "start": "1188120",
    "end": "1193440"
  },
  {
    "text": "that's a zero thing and it says apply to them all the other thing you could say is \"Oh you didn't say apply this to",
    "start": "1193440",
    "end": "1199600"
  },
  {
    "text": "anything here's a policy and it applies to nothing at all.\" That's not very",
    "start": "1199600",
    "end": "1204720"
  },
  {
    "text": "useful i don't why would I bother writing a big old policy to never apply",
    "start": "1204720",
    "end": "1210720"
  },
  {
    "text": "it to anything make your zero values useful and your users get to write",
    "start": "1210720",
    "end": "1216400"
  },
  {
    "text": "shorter YAML that's more powerful um and they get less surprise so uh and",
    "start": "1216400",
    "end": "1222720"
  },
  {
    "text": "sometimes you know this is a rule be a little cautious with but as much as possible zero values are real cool um I",
    "start": "1222720",
    "end": "1230320"
  },
  {
    "text": "think go did a smart thing with their serialization and their defaults here um",
    "start": "1230320",
    "end": "1235919"
  },
  {
    "text": "and you probably know what a good default is at least as well as your average user um otherwise why are you",
    "start": "1235919",
    "end": "1241600"
  },
  {
    "text": "writing the operator and not them this is this is where you encode your knowledge of the system um and the",
    "start": "1241600",
    "end": "1248159"
  },
  {
    "text": "last thing is something that is a little tricky uh we didn't always get it right",
    "start": "1248159",
    "end": "1253360"
  },
  {
    "text": "in K native um I'm not going to say we are beautiful model citizens here but Kubernetes isn't either so you know",
    "start": "1253360",
    "end": "1260000"
  },
  {
    "text": "there's that um GitOps so we've we've used Flux and",
    "start": "1260000",
    "end": "1265440"
  },
  {
    "text": "Argo both as examples uh when you put a bunch of resources into Flux or Argo or",
    "start": "1265440",
    "end": "1272039"
  },
  {
    "text": "Helm there's a little bit of sequencing that they do around CRDs because they",
    "start": "1272039",
    "end": "1278240"
  },
  {
    "text": "kind of have discovered that they have to but for the most part all the resources just get dumped into the",
    "start": "1278240",
    "end": "1283520"
  },
  {
    "text": "cluster at once and who knows like what order they show",
    "start": "1283520",
    "end": "1288880"
  },
  {
    "text": "up in and if you're lucky they show up in the right order and if you're and if you're not uh you're trying to create",
    "start": "1288880",
    "end": "1294880"
  },
  {
    "text": "resources in a namespace before you created the namespace and you get an error and as much as possible try to",
    "start": "1294880",
    "end": "1302159"
  },
  {
    "text": "build systems that you can just reapply and reapply and it will reach a state",
    "start": "1302159",
    "end": "1307600"
  },
  {
    "text": "where it works and it's not going to give some get in some weird halfinitialized state and then you're",
    "start": "1307600",
    "end": "1313760"
  },
  {
    "text": "like ah I can't go any further um uh job is another example from the",
    "start": "1313760",
    "end": "1321200"
  },
  {
    "text": "Kubernetes API where you try to create a job and it already exists and it's like I don't know what to do um I don't know",
    "start": "1321200",
    "end": "1327919"
  },
  {
    "text": "how I would have designed it differently but if you can try to build your system so that when you get ops things in and",
    "start": "1327919",
    "end": "1334640"
  },
  {
    "text": "you just throw a bunch of stuff in there it works no matter what order you apply the resources um and this this is a",
    "start": "1334640",
    "end": "1341600"
  },
  {
    "text": "think hard type of thing sorry um and then this is the last tip I've",
    "start": "1341600",
    "end": "1349360"
  },
  {
    "text": "got and then I'll give you a checklist at the end so that if you're looking for the distilled v you know version that you want to share with someone it's",
    "start": "1349360",
    "end": "1356080"
  },
  {
    "text": "coming up in just a moment um there's a couple different ways to interact with other people's resources",
    "start": "1356080",
    "end": "1362880"
  },
  {
    "text": "um and they're good for different things so labels and annotations are ways that",
    "start": "1362880",
    "end": "1369039"
  },
  {
    "text": "you can put a little extra data on someone else's resource or find them labels are particularly good at finding",
    "start": "1369039",
    "end": "1374720"
  },
  {
    "text": "things so um in this case uh search manager uses an annotation to find which",
    "start": "1374720",
    "end": "1380480"
  },
  {
    "text": "issuer it is if they used a label instead um you could make a narrower",
    "start": "1380480",
    "end": "1386400"
  },
  {
    "text": "query to the Kubernetes API you'd also be limited in the types of values you could put in there um they chose an",
    "start": "1386400",
    "end": "1392960"
  },
  {
    "text": "annotation i don't know if it was a good idea or a bad one uh at this point it's moot because it's there",
    "start": "1392960",
    "end": "1399000"
  },
  {
    "text": "um you can use selectors on other people's resources to again use labels",
    "start": "1399000",
    "end": "1404320"
  },
  {
    "text": "to find the right objects and last of all if you're creating resources remember to set your owner references so",
    "start": "1404320",
    "end": "1411360"
  },
  {
    "text": "that both garbage collection works and people can figure out automatically hey",
    "start": "1411360",
    "end": "1416880"
  },
  {
    "text": "this was created by this other guy over here um if I need to change it I probably need to go affect that guy",
    "start": "1416880",
    "end": "1423039"
  },
  {
    "text": "otherwise he's just going to set everything back um to whatever he you know whatever that controller wanted it",
    "start": "1423039",
    "end": "1429120"
  },
  {
    "text": "to be to begin with um these are again they're all in the Kubernetes documentation but I figured",
    "start": "1429120",
    "end": "1435120"
  },
  {
    "text": "if I was talking about how to do this it's worth explaining like if you've got short values that you want to look up by",
    "start": "1435120",
    "end": "1442320"
  },
  {
    "text": "labels are the the right thing if you've got more detailed content maybe you want a little JSON or something to give you",
    "start": "1442320",
    "end": "1448480"
  },
  {
    "text": "give you control annotations give you that um uh EngineX ingress famously has a whole",
    "start": "1448480",
    "end": "1456159"
  },
  {
    "text": "ton of annotations that you can use to control the generated enginex config and only occasionally blows up in your face",
    "start": "1456159",
    "end": "1461960"
  },
  {
    "text": "um but uh you know that's a place where labels wouldn't work because labels are intended to be really short things that",
    "start": "1461960",
    "end": "1468080"
  },
  {
    "text": "you can search on um and so this is the authoring checklist if you're you know looking to",
    "start": "1468080",
    "end": "1475520"
  },
  {
    "text": "share this with people I'm also going to be putting these slides on SCAD as soon as I'm done here you can share that",
    "start": "1475520",
    "end": "1480880"
  },
  {
    "text": "around i'm going to put it on my LinkedIn um but ask yourself these",
    "start": "1480880",
    "end": "1486600"
  },
  {
    "text": "questions when you are authoring a controller if you're working with a project",
    "start": "1486600",
    "end": "1493400"
  },
  {
    "text": "um and it's frustrating look at this and see if you can feed a little bit of this",
    "start": "1493400",
    "end": "1498600"
  },
  {
    "text": "advice you know over the over there you get to be a CNCF contributor if you're",
    "start": "1498600",
    "end": "1504960"
  },
  {
    "text": "not already you can say remember how I said I contributed to 10 plus projects stuff like this you know go in",
    "start": "1504960",
    "end": "1513440"
  },
  {
    "text": "and create an aggregated cluster ro and send them a PR give them a little link to the documentation and explain why",
    "start": "1513440",
    "end": "1519440"
  },
  {
    "text": "you're doing it you are now a helpful and contributing member of that community and you can put it on your",
    "start": "1519440",
    "end": "1525679"
  },
  {
    "text": "LinkedIn you can put it on your resume contributor to projects X Y and Z um I'm",
    "start": "1525679",
    "end": "1533039"
  },
  {
    "text": "not saying you know you have to pad your resume but if you're looking to get involved in the CNCF and you can write",
    "start": "1533039",
    "end": "1539360"
  },
  {
    "text": "YAML you can do some of this stuff um and if you're you know more deeply into",
    "start": "1539360",
    "end": "1545600"
  },
  {
    "text": "it write some Go code it's fun um and I didn't talk about it much but",
    "start": "1545600",
    "end": "1553440"
  },
  {
    "text": "um upfront validation there's a bunch of settings in both AP open API and cell that are",
    "start": "1553440",
    "end": "1561679"
  },
  {
    "text": "let you validate a lot of the resources as they come in and give useful error messages back to users um before the",
    "start": "1561679",
    "end": "1568880"
  },
  {
    "text": "resource is even created and so if you've got values where they should be",
    "start": "1568880",
    "end": "1574000"
  },
  {
    "text": "in some meaningful range you know maybe it doesn't make sense to spawn a pod with 64 pabytes of memory uh you could",
    "start": "1574000",
    "end": "1581919"
  },
  {
    "text": "you know warn people ahead of time and say \"No I'm not going to do that 64 pabytes is too much for",
    "start": "1581919",
    "end": "1590120"
  },
  {
    "text": "anyone.\" And thank you i'm happy to take questions and stuff and this QR code um",
    "start": "1590120",
    "end": "1596640"
  },
  {
    "text": "takes you to the feedback on the talk if you want to tell me you know hey that",
    "start": "1596640",
    "end": "1601679"
  },
  {
    "text": "was a great job or gosh you're an idiot you know I I I want to hear what you",
    "start": "1601679",
    "end": "1607360"
  },
  {
    "text": "think",
    "start": "1607360",
    "end": "1610360"
  },
  {
    "text": "Josh i'll I'll repeat uh zero values so zero",
    "start": "1616320",
    "end": "1623600"
  },
  {
    "text": "values sometimes zero values are sometimes zero values are",
    "start": "1623600",
    "end": "1630400"
  },
  {
    "text": "so the question so the question is um about zero values",
    "start": "1630400",
    "end": "1637679"
  },
  {
    "text": "sometimes zero is actually a meaningful value and sometimes it doesn't mean anything if if zero doesn't mean",
    "start": "1637679",
    "end": "1646159"
  },
  {
    "text": "anything I encourage you to think about what you could make it mean that's useful if zero is a meaningful value uh",
    "start": "1646159",
    "end": "1653120"
  },
  {
    "text": "going back here uh to that slide the thing I said",
    "start": "1653120",
    "end": "1658159"
  },
  {
    "text": "no to over here with a pointer if you use the pointer then you can distinguish",
    "start": "1658159",
    "end": "1663360"
  },
  {
    "text": "between null and zero um and that's what you should do and then in your code you have to write",
    "start": "1663360",
    "end": "1669679"
  },
  {
    "text": "a little if max idle time equals null then da da da da otherwise if it's zero",
    "start": "1669679",
    "end": "1678320"
  },
  {
    "text": "do this thing um if max idle time is zero doesn't really make sense like if",
    "start": "1678320",
    "end": "1684080"
  },
  {
    "text": "it's a timeout a timeout of zero means as soon as you start you have to stop",
    "start": "1684080",
    "end": "1690720"
  },
  {
    "text": "that doesn't you know that you could make that mean that but it's not really",
    "start": "1690720",
    "end": "1696080"
  },
  {
    "text": "helpful to users so you can make it mean something useful on the other hand if it was number of replicas and scaling down",
    "start": "1696080",
    "end": "1702399"
  },
  {
    "text": "to zero was a possible thing like a deployment then obviously you can't make",
    "start": "1702399",
    "end": "1707600"
  },
  {
    "text": "zero mean run the right number um so yes you have to be a little bit careful with zero um but where you can you know take",
    "start": "1707600",
    "end": "1717200"
  },
  {
    "text": "advantage of this and where you can't use the pointer version and make null and zero different and",
    "start": "1717200",
    "end": "1722880"
  },
  {
    "text": "distinguishable and I'm just going to put us back to",
    "start": "1722880",
    "end": "1729120"
  },
  {
    "text": "this slide so that I get that tiny bit more feedback thank you anyone else has",
    "start": "1729120",
    "end": "1735520"
  },
  {
    "text": "questions i'm happy to you know repeat and answer amplify agree",
    "start": "1735520",
    "end": "1742240"
  },
  {
    "text": "disagree i do not promise to make up a limick on the spot go ahead library",
    "start": "1742679",
    "end": "1750200"
  },
  {
    "text": "uh so the question is is there a common library for managing the condition pattern that I described",
    "start": "1756080",
    "end": "1763399"
  },
  {
    "text": "um and the or or is everybody doing it themselves and the answer is sort of um",
    "start": "1763399",
    "end": "1770559"
  },
  {
    "text": "K native has a library for managing conditions in K native dev",
    "start": "1770559",
    "end": "1777559"
  },
  {
    "text": "um package with and I forget exactly where it is under there that a number of",
    "start": "1777559",
    "end": "1783120"
  },
  {
    "text": "other projects use um if anyone wants to come talk to me or I'm sure Dave is out",
    "start": "1783120",
    "end": "1789919"
  },
  {
    "text": "here somewhere Dave's over here in the audience um or any of the other Canadian maintainers about putting that in a common place a lot of people have",
    "start": "1789919",
    "end": "1796960"
  },
  {
    "text": "borrowed that um some people have rewritten it uh I don't feel like it",
    "start": "1796960",
    "end": "1803919"
  },
  {
    "text": "needs to be in K native but it needs to live somewhere and if someone wants to",
    "start": "1803919",
    "end": "1809039"
  },
  {
    "text": "find it a good home I'm happy to help with moving it and if no one wants to find it a good home we're still happy to",
    "start": "1809039",
    "end": "1815720"
  },
  {
    "text": "share but we're going to version it for ourselves so uh that's the that's the",
    "start": "1815720",
    "end": "1820799"
  },
  {
    "text": "incentive to stand up and say \"No actually I'll help with this.\" is if you don't want our versioning",
    "start": "1820799",
    "end": "1828360"
  },
  {
    "text": "hi there uh and yeah it was like three weeks of discussion to figure out that",
    "start": "1830480",
    "end": "1835919"
  },
  {
    "text": "pattern um and it was actually the UI folks who were doing a guey who drove a",
    "start": "1835919",
    "end": "1842000"
  },
  {
    "text": "lot of it who were like \"Hey how do we show that this is getting ready?\" And it was like \"Well you batch on this name",
    "start": "1842000",
    "end": "1848159"
  },
  {
    "text": "and it goes this way and this name.\" And they were like \"We can't do that that's dumb",
    "start": "1848159",
    "end": "1853919"
  },
  {
    "text": "and eventually I think it was Naomi Schaer you know was the person who said \"Hey if we do it this way then this will",
    "start": "1853919",
    "end": "1860640"
  },
  {
    "text": "just work.\" And you know we all looked at and we're like \"Wow that's",
    "start": "1860640",
    "end": "1867200"
  },
  {
    "text": "smart.\" Hey what do you Hey can you see me oh yes uh I have a question i don't",
    "start": "1867720",
    "end": "1875200"
  },
  {
    "text": "know if it's really really related to CRDs but it's definitely related to operators so uh at our company we have",
    "start": "1875200",
    "end": "1882880"
  },
  {
    "text": "kind of discussion going on which is when we have a cluster which the bunch of CRS for a specific CRD and we have",
    "start": "1882880",
    "end": "1891360"
  },
  {
    "text": "our operator and we now are going to create a new resource based on the CRS right yeah it can be a resource on",
    "start": "1891360",
    "end": "1898159"
  },
  {
    "text": "another account like in the cloud provider whatever and we have this discussion going on which is what",
    "start": "1898159",
    "end": "1905440"
  },
  {
    "text": "happens when we have hundreds or whatever CRS in this and how the",
    "start": "1905440",
    "end": "1910559"
  },
  {
    "text": "operator should do should the operator just go ahead and just check every CR",
    "start": "1910559",
    "end": "1917120"
  },
  {
    "text": "and just change everything at the same time hitting rate limits on whatever",
    "start": "1917120",
    "end": "1922760"
  },
  {
    "text": "APIs or should we implement like a pool uh a reconcile pool where we can do",
    "start": "1922760",
    "end": "1929279"
  },
  {
    "text": "things separately and I wanted to know your opinion on this because at least at our companies uh it's a separating uh so",
    "start": "1929279",
    "end": "1938480"
  },
  {
    "text": "um the question if I can summarize it is we have a bunch of custom resources that",
    "start": "1938480",
    "end": "1944640"
  },
  {
    "text": "go out and work against some external API and for example when we start up our",
    "start": "1944640",
    "end": "1949720"
  },
  {
    "text": "controller how do we manage reconciling these hundreds of CRs at once and not",
    "start": "1949720",
    "end": "1955279"
  },
  {
    "text": "going over rate limits is that about right yeah that's pretty much it",
    "start": "1955279",
    "end": "1960480"
  },
  {
    "text": "um so I have another K native we solved",
    "start": "1960600",
    "end": "1965919"
  },
  {
    "text": "this answer and I'm sorry for sounding like a smug guy but um We discovered",
    "start": "1965919",
    "end": "1971600"
  },
  {
    "text": "this problem and uh if you look in the K native libraries we do a little bit of",
    "start": "1971600",
    "end": "1977279"
  },
  {
    "text": "inversion of control on the um on the reconcile loop and we actually",
    "start": "1977279",
    "end": "1984399"
  },
  {
    "text": "run a two a two-lane reconciler so what",
    "start": "1984399",
    "end": "1989840"
  },
  {
    "text": "we found also was that when your controller is starting up and it's doing this big background pass that can",
    "start": "1989840",
    "end": "1994960"
  },
  {
    "text": "actually block you from noticing current events because you're processing through all this backlog and",
    "start": "1994960",
    "end": "2001519"
  },
  {
    "text": "so what we actually do is we have one Q for events that have just come in as changes and one Q for background scans",
    "start": "2001519",
    "end": "2008960"
  },
  {
    "text": "and the background scans is limited in in its rate and it's lower priority than",
    "start": "2008960",
    "end": "2014720"
  },
  {
    "text": "changes that just came in through the watch API and so we rate limit the",
    "start": "2014720",
    "end": "2020480"
  },
  {
    "text": "amount of changes but we also prioritize stuff coming in over watch over the background informer scan and it's very",
    "start": "2020480",
    "end": "2029840"
  },
  {
    "text": "complicated but it seems to work fairly well um and that framework I feel like is",
    "start": "2029840",
    "end": "2037600"
  },
  {
    "text": "fairly well tested we um we had a a test and I think it's probably still there",
    "start": "2037600",
    "end": "2044240"
  },
  {
    "text": "that starts up the controller and does stuff in the cluster and they're leader elected and every 30 seconds it finds",
    "start": "2044240",
    "end": "2050079"
  },
  {
    "text": "the leader and terminates that pod forcing a new reconcile and the rest of",
    "start": "2050079",
    "end": "2055599"
  },
  {
    "text": "the stuff should still keep working while that's happening and it does great thanks",
    "start": "2055599",
    "end": "2063480"
  },
  {
    "text": "come steal our goodies they're good",
    "start": "2064240",
    "end": "2068679"
  },
  {
    "text": "well we've we've run out of time i'm happy to keep answering questions but",
    "start": "2075359",
    "end": "2080720"
  },
  {
    "text": "I'm probably gonna stop the mic in the presentation now [Applause]",
    "start": "2080720",
    "end": "2088919"
  }
]