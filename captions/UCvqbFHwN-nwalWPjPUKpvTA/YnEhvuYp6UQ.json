[
  {
    "start": "0",
    "end": "163000"
  },
  {
    "text": "hello my name is Matt Ray and I'll be",
    "start": "659",
    "end": "3060"
  },
  {
    "text": "your host for today's session I am the",
    "start": "3060",
    "end": "5220"
  },
  {
    "text": "community manager for opencast the cncf",
    "start": "5220",
    "end": "7980"
  },
  {
    "text": "silver member and sponsor for today's",
    "start": "7980",
    "end": "9840"
  },
  {
    "text": "talk is my employer Cube cost today I'm",
    "start": "9840",
    "end": "13500"
  },
  {
    "text": "going to tell you about Cloud cost",
    "start": "13500",
    "end": "15000"
  },
  {
    "text": "monitoring with open cost and kubernetes",
    "start": "15000",
    "end": "17100"
  },
  {
    "text": "optimization strategies",
    "start": "17100",
    "end": "20420"
  },
  {
    "text": "the complexity of operating kubernetes",
    "start": "22439",
    "end": "24180"
  },
  {
    "text": "efficiently efficiently is real but you",
    "start": "24180",
    "end": "27180"
  },
  {
    "text": "already knew this kubernetes brings",
    "start": "27180",
    "end": "29099"
  },
  {
    "text": "technical complexity with higher level",
    "start": "29099",
    "end": "31080"
  },
  {
    "text": "abstractions moving you further from",
    "start": "31080",
    "end": "32880"
  },
  {
    "text": "underlying resources these abstractions",
    "start": "32880",
    "end": "35700"
  },
  {
    "text": "provide a standard interface for",
    "start": "35700",
    "end": "37200"
  },
  {
    "text": "building deploying software but there",
    "start": "37200",
    "end": "39360"
  },
  {
    "text": "are a lot of moving Parts engineering",
    "start": "39360",
    "end": "41760"
  },
  {
    "text": "teams are having to deal with lots of",
    "start": "41760",
    "end": "43920"
  },
  {
    "text": "new Concepts",
    "start": "43920",
    "end": "45239"
  },
  {
    "text": "there are tons of open questions where",
    "start": "45239",
    "end": "47579"
  },
  {
    "text": "is our Cloud spin going what are the",
    "start": "47579",
    "end": "49739"
  },
  {
    "text": "cloud costs associated with building",
    "start": "49739",
    "end": "51480"
  },
  {
    "text": "your product",
    "start": "51480",
    "end": "52860"
  },
  {
    "text": "how can we optimize our Dev clusters",
    "start": "52860",
    "end": "55680"
  },
  {
    "text": "who was the owner of this performance",
    "start": "55680",
    "end": "57480"
  },
  {
    "text": "problem and how do we know our team is",
    "start": "57480",
    "end": "59760"
  },
  {
    "text": "provisioning only the resources we",
    "start": "59760",
    "end": "61680"
  },
  {
    "text": "really need",
    "start": "61680",
    "end": "64160"
  },
  {
    "text": "luckily help is available open cost is",
    "start": "67979",
    "end": "70979"
  },
  {
    "text": "an open source cncf sandbox project for",
    "start": "70979",
    "end": "73619"
  },
  {
    "text": "measuring and allocating infrastructure",
    "start": "73619",
    "end": "75540"
  },
  {
    "text": "and container costs in real time built",
    "start": "75540",
    "end": "78240"
  },
  {
    "text": "by kubernetes experts and supported by",
    "start": "78240",
    "end": "80159"
  },
  {
    "text": "kubernetes practitioners open cost",
    "start": "80159",
    "end": "82259"
  },
  {
    "text": "shines a light into the black box of",
    "start": "82259",
    "end": "84299"
  },
  {
    "text": "kubernetes spend",
    "start": "84299",
    "end": "86460"
  },
  {
    "text": "opencast is both a project and written",
    "start": "86460",
    "end": "88979"
  },
  {
    "text": "specification for modeling current and",
    "start": "88979",
    "end": "90960"
  },
  {
    "text": "historical kubernetes spend and resource",
    "start": "90960",
    "end": "93060"
  },
  {
    "text": "allocations you can view your kubernetes",
    "start": "93060",
    "end": "95520"
  },
  {
    "text": "cost by service deployments namespaces",
    "start": "95520",
    "end": "98040"
  },
  {
    "text": "and much more right now it supports",
    "start": "98040",
    "end": "100200"
  },
  {
    "text": "kubernetes clusters on AWS Azure and gcp",
    "start": "100200",
    "end": "103259"
  },
  {
    "text": "through their on-demand pricing and",
    "start": "103259",
    "end": "105420"
  },
  {
    "text": "on-premises kubernetes clusters are",
    "start": "105420",
    "end": "107220"
  },
  {
    "text": "supported as well",
    "start": "107220",
    "end": "108600"
  },
  {
    "text": "open cost is the engine for Kube Cost",
    "start": "108600",
    "end": "110640"
  },
  {
    "text": "commercial product",
    "start": "110640",
    "end": "112200"
  },
  {
    "text": "I'm talking about open cost because it's",
    "start": "112200",
    "end": "114360"
  },
  {
    "text": "a tool for digging into what's going on",
    "start": "114360",
    "end": "115979"
  },
  {
    "text": "in our complex and dynamic kubernetes",
    "start": "115979",
    "end": "118079"
  },
  {
    "text": "infrastructure we want to be able to",
    "start": "118079",
    "end": "120299"
  },
  {
    "text": "slice and dice our Cloud bills by",
    "start": "120299",
    "end": "122220"
  },
  {
    "text": "kubernetes Primitives seeing who's using",
    "start": "122220",
    "end": "124560"
  },
  {
    "text": "what and which services are costing the",
    "start": "124560",
    "end": "126659"
  },
  {
    "text": "most this will be the foundation for",
    "start": "126659",
    "end": "129060"
  },
  {
    "text": "future optimization",
    "start": "129060",
    "end": "131959"
  },
  {
    "text": "the open cost spec is a vendor neutral",
    "start": "136080",
    "end": "138660"
  },
  {
    "text": "open source specification for measuring",
    "start": "138660",
    "end": "140760"
  },
  {
    "text": "and allocating infrastructure and",
    "start": "140760",
    "end": "142260"
  },
  {
    "text": "container costs in kubernetes",
    "start": "142260",
    "end": "143640"
  },
  {
    "text": "environments",
    "start": "143640",
    "end": "145080"
  },
  {
    "text": "the original specification came together",
    "start": "145080",
    "end": "147239"
  },
  {
    "text": "with input from a wide range of",
    "start": "147239",
    "end": "149099"
  },
  {
    "text": "kubernetes practitioners",
    "start": "149099",
    "end": "151020"
  },
  {
    "text": "among them Adobe AWS Google Cloud Kube",
    "start": "151020",
    "end": "155220"
  },
  {
    "text": "cost red hat and Susa",
    "start": "155220",
    "end": "159440"
  },
  {
    "start": "163000",
    "end": "163000"
  },
  {
    "text": "the opencast spec is for measuring and",
    "start": "164519",
    "end": "166980"
  },
  {
    "text": "allocating infrastructure and container",
    "start": "166980",
    "end": "168660"
  },
  {
    "text": "cost and kubernetes environments first",
    "start": "168660",
    "end": "171360"
  },
  {
    "text": "we start with shared definitions total",
    "start": "171360",
    "end": "174540"
  },
  {
    "text": "cluster costs are everything associated",
    "start": "174540",
    "end": "176700"
  },
  {
    "text": "with their kubernetes deployment",
    "start": "176700",
    "end": "179160"
  },
  {
    "text": "this breaks down into direct and",
    "start": "179160",
    "end": "181319"
  },
  {
    "text": "indirect costs",
    "start": "181319",
    "end": "184140"
  },
  {
    "text": "indirect costs are cluster overhead cost",
    "start": "184140",
    "end": "186800"
  },
  {
    "text": "measuring the overhead required to",
    "start": "186800",
    "end": "189000"
  },
  {
    "text": "operate all the assets for a cluster for",
    "start": "189000",
    "end": "191760"
  },
  {
    "text": "example these are the cluster management",
    "start": "191760",
    "end": "193440"
  },
  {
    "text": "fees that you might see in your AWS or",
    "start": "193440",
    "end": "196080"
  },
  {
    "text": "as your bills",
    "start": "196080",
    "end": "198120"
  },
  {
    "text": "direct costs further breakdown by",
    "start": "198120",
    "end": "200700"
  },
  {
    "text": "allocation and usage allocation costs",
    "start": "200700",
    "end": "203700"
  },
  {
    "text": "are generally things that have an hourly",
    "start": "203700",
    "end": "205560"
  },
  {
    "text": "rate and usage costs are by the amount",
    "start": "205560",
    "end": "208680"
  },
  {
    "text": "consumed examples of this might be",
    "start": "208680",
    "end": "211019"
  },
  {
    "text": "storage jobs",
    "start": "211019",
    "end": "213720"
  },
  {
    "text": "number of units processed",
    "start": "213720",
    "end": "217760"
  },
  {
    "start": "217000",
    "end": "217000"
  },
  {
    "text": "the asset costs are the individual nodes",
    "start": "219360",
    "end": "222000"
  },
  {
    "text": "and overhead that make up our kubernetes",
    "start": "222000",
    "end": "224640"
  },
  {
    "text": "cluster resource allocation and usage",
    "start": "224640",
    "end": "227640"
  },
  {
    "text": "costs generally contain the node CPU Ram",
    "start": "227640",
    "end": "230459"
  },
  {
    "text": "operating system",
    "start": "230459",
    "end": "232319"
  },
  {
    "text": "potentially gpus",
    "start": "232319",
    "end": "234420"
  },
  {
    "text": "persistent volumes are the associated",
    "start": "234420",
    "end": "236519"
  },
  {
    "text": "file systems and there may be a load",
    "start": "236519",
    "end": "238799"
  },
  {
    "text": "balancer and network egress costs as",
    "start": "238799",
    "end": "240780"
  },
  {
    "text": "well",
    "start": "240780",
    "end": "241860"
  },
  {
    "text": "this is a simplification each of these",
    "start": "241860",
    "end": "244019"
  },
  {
    "text": "breaks down much further in the open",
    "start": "244019",
    "end": "246299"
  },
  {
    "text": "cost specification",
    "start": "246299",
    "end": "247920"
  },
  {
    "text": "an example of an asset cost would be a",
    "start": "247920",
    "end": "250379"
  },
  {
    "text": "node where their CPU allocation costs",
    "start": "250379",
    "end": "253379"
  },
  {
    "text": "which relate the cores the duration of",
    "start": "253379",
    "end": "256139"
  },
  {
    "text": "use the price and the total cost",
    "start": "256139",
    "end": "259440"
  },
  {
    "text": "the ram allocation costs are also",
    "start": "259440",
    "end": "261479"
  },
  {
    "text": "included",
    "start": "261479",
    "end": "263840"
  },
  {
    "start": "264000",
    "end": "264000"
  },
  {
    "text": "when a kubernetes node is deployed on",
    "start": "264240",
    "end": "266880"
  },
  {
    "text": "your Cloud it now has a total cost",
    "start": "266880",
    "end": "269660"
  },
  {
    "text": "workloads are the actual applications",
    "start": "269660",
    "end": "271979"
  },
  {
    "text": "and containers allocated and running on",
    "start": "271979",
    "end": "274560"
  },
  {
    "text": "our kubernetes nodes",
    "start": "274560",
    "end": "276060"
  },
  {
    "text": "these are the containers pods",
    "start": "276060",
    "end": "278100"
  },
  {
    "text": "deployments persistent volumes Etc",
    "start": "278100",
    "end": "281040"
  },
  {
    "text": "these are calculated by querying the",
    "start": "281040",
    "end": "283320"
  },
  {
    "text": "kubernetes API C advisor metrics the",
    "start": "283320",
    "end": "286740"
  },
  {
    "text": "kernel and billing data",
    "start": "286740",
    "end": "289800"
  },
  {
    "text": "they may be usage costs or allocation",
    "start": "289800",
    "end": "292560"
  },
  {
    "text": "costs but they are directly managed by",
    "start": "292560",
    "end": "295080"
  },
  {
    "text": "the Kube scheduler we want to measure",
    "start": "295080",
    "end": "297300"
  },
  {
    "text": "these at the lowest level possible so we",
    "start": "297300",
    "end": "299820"
  },
  {
    "text": "can track this data along any dimension",
    "start": "299820",
    "end": "302699"
  },
  {
    "text": "any unallocated costs on the kubernetes",
    "start": "302699",
    "end": "304979"
  },
  {
    "text": "cluster are cluster idle costs you're",
    "start": "304979",
    "end": "307560"
  },
  {
    "text": "paying for them but not directly using",
    "start": "307560",
    "end": "309900"
  },
  {
    "text": "them to run your application",
    "start": "309900",
    "end": "313340"
  },
  {
    "start": "314000",
    "end": "314000"
  },
  {
    "text": "when we talk about idle costs we're",
    "start": "315479",
    "end": "317759"
  },
  {
    "text": "talking about capacity that has been",
    "start": "317759",
    "end": "319680"
  },
  {
    "text": "requested but it is unused sometimes",
    "start": "319680",
    "end": "322979"
  },
  {
    "text": "this is called waste but it's",
    "start": "322979",
    "end": "324720"
  },
  {
    "text": "impractical to think that would be at",
    "start": "324720",
    "end": "326580"
  },
  {
    "text": "100 allocated",
    "start": "326580",
    "end": "328979"
  },
  {
    "text": "most kubernetes usage is dynamic and",
    "start": "328979",
    "end": "331620"
  },
  {
    "text": "some Headroom is needed so we want to be",
    "start": "331620",
    "end": "333960"
  },
  {
    "text": "as efficient as possible without",
    "start": "333960",
    "end": "335820"
  },
  {
    "text": "spending too much",
    "start": "335820",
    "end": "338780"
  },
  {
    "start": "339000",
    "end": "339000"
  },
  {
    "text": "workload costs are committed allocated",
    "start": "340440",
    "end": "343440"
  },
  {
    "text": "costs this is what's happening inside",
    "start": "343440",
    "end": "345720"
  },
  {
    "text": "your kubernetes cluster they've been",
    "start": "345720",
    "end": "348840"
  },
  {
    "text": "requested from the kubernetes cluster so",
    "start": "348840",
    "end": "351300"
  },
  {
    "text": "you're paying for them",
    "start": "351300",
    "end": "352800"
  },
  {
    "text": "from the cloud provider billing API we",
    "start": "352800",
    "end": "355320"
  },
  {
    "text": "get the numbers on the left",
    "start": "355320",
    "end": "357000"
  },
  {
    "text": "these are the raw metrics that you're",
    "start": "357000",
    "end": "358620"
  },
  {
    "text": "paying for",
    "start": "358620",
    "end": "360060"
  },
  {
    "text": "open costs allows you to view these",
    "start": "360060",
    "end": "362039"
  },
  {
    "text": "costs by the workload aggregations on",
    "start": "362039",
    "end": "364139"
  },
  {
    "text": "the right you can see CPU usage by",
    "start": "364139",
    "end": "366780"
  },
  {
    "text": "labels GPU by deployments however you",
    "start": "366780",
    "end": "369960"
  },
  {
    "text": "want to query your cost you can also",
    "start": "369960",
    "end": "372300"
  },
  {
    "text": "stack these",
    "start": "372300",
    "end": "373680"
  },
  {
    "text": "so you could see things such as",
    "start": "373680",
    "end": "375539"
  },
  {
    "text": "container per namespace",
    "start": "375539",
    "end": "379160"
  },
  {
    "text": "let's take a look at the open cost UI",
    "start": "381960",
    "end": "386520"
  },
  {
    "text": "this is a freshly deployed open cost UI",
    "start": "386520",
    "end": "390440"
  },
  {
    "text": "opengos has been running for a while so",
    "start": "390440",
    "end": "393000"
  },
  {
    "text": "this is the first page you're going to",
    "start": "393000",
    "end": "394740"
  },
  {
    "text": "see we're looking at the breakdown of",
    "start": "394740",
    "end": "396780"
  },
  {
    "text": "the last seven days by namespace",
    "start": "396780",
    "end": "400699"
  },
  {
    "text": "this is a rather small cluster it's just",
    "start": "401460",
    "end": "403800"
  },
  {
    "text": "two nodes on eks on Amazon",
    "start": "403800",
    "end": "408138"
  },
  {
    "text": "it's been running for for several weeks",
    "start": "409560",
    "end": "411660"
  },
  {
    "text": "but right now I'm just looking at the",
    "start": "411660",
    "end": "414120"
  },
  {
    "text": "last week",
    "start": "414120",
    "end": "415259"
  },
  {
    "text": "I could go",
    "start": "415259",
    "end": "417600"
  },
  {
    "text": "to just yesterday if I wanted we can",
    "start": "417600",
    "end": "420000"
  },
  {
    "text": "also view by namespace",
    "start": "420000",
    "end": "422039"
  },
  {
    "text": "so here we see I've got three names",
    "start": "422039",
    "end": "424080"
  },
  {
    "text": "faces my Cube system open cost",
    "start": "424080",
    "end": "426240"
  },
  {
    "text": "Prometheus",
    "start": "426240",
    "end": "427800"
  },
  {
    "text": "I can also look at individual",
    "start": "427800",
    "end": "430319"
  },
  {
    "text": "controllers",
    "start": "430319",
    "end": "432860"
  },
  {
    "text": "looking at last week by the Pod data",
    "start": "439259",
    "end": "442380"
  },
  {
    "text": "we can see how efficient or inefficient",
    "start": "442380",
    "end": "445680"
  },
  {
    "text": "our workloads are by CPU and RAM and how",
    "start": "445680",
    "end": "448199"
  },
  {
    "text": "much they're costing total",
    "start": "448199",
    "end": "451340"
  },
  {
    "text": "we can also download the results if we",
    "start": "457979",
    "end": "460979"
  },
  {
    "text": "need to",
    "start": "460979",
    "end": "463280"
  },
  {
    "start": "464000",
    "end": "464000"
  },
  {
    "text": "the opencast architecture is fairly",
    "start": "464479",
    "end": "467160"
  },
  {
    "text": "straightforward open cost uses",
    "start": "467160",
    "end": "469319"
  },
  {
    "text": "Prometheus as both the source and",
    "start": "469319",
    "end": "471720"
  },
  {
    "text": "destination for data",
    "start": "471720",
    "end": "474180"
  },
  {
    "text": "a Prometheus node exporter runs on each",
    "start": "474180",
    "end": "476340"
  },
  {
    "text": "node in the cluster exposing kubernetes",
    "start": "476340",
    "end": "478560"
  },
  {
    "text": "data and open cost writes this out to",
    "start": "478560",
    "end": "480720"
  },
  {
    "text": "the Prometheus data store the opencast",
    "start": "480720",
    "end": "483060"
  },
  {
    "text": "service queries the cloud providers API",
    "start": "483060",
    "end": "485039"
  },
  {
    "text": "for the cost of each service used",
    "start": "485039",
    "end": "487380"
  },
  {
    "text": "the open cost UI or API may be used to",
    "start": "487380",
    "end": "490440"
  },
  {
    "text": "query the information stored and",
    "start": "490440",
    "end": "492120"
  },
  {
    "text": "permeates this prometheus's time series",
    "start": "492120",
    "end": "494639"
  },
  {
    "text": "database",
    "start": "494639",
    "end": "497180"
  },
  {
    "start": "496000",
    "end": "496000"
  },
  {
    "text": "deploying open cost is fairly",
    "start": "498300",
    "end": "500039"
  },
  {
    "text": "straightforward it's a relatively simple",
    "start": "500039",
    "end": "502080"
  },
  {
    "text": "service",
    "start": "502080",
    "end": "504360"
  },
  {
    "text": "open costs relies on Metric scraped by",
    "start": "504360",
    "end": "506400"
  },
  {
    "text": "Prometheus for Express installation of",
    "start": "506400",
    "end": "508740"
  },
  {
    "text": "Prometheus we use the prom Community hum",
    "start": "508740",
    "end": "510780"
  },
  {
    "text": "chart but you can use it already",
    "start": "510780",
    "end": "512640"
  },
  {
    "text": "existing installation if you want to",
    "start": "512640",
    "end": "515279"
  },
  {
    "text": "deploy open costs the current",
    "start": "515279",
    "end": "516599"
  },
  {
    "text": "recommended installation method is to",
    "start": "516599",
    "end": "519060"
  },
  {
    "text": "Simply Coupe cuddle apply the yaml",
    "start": "519060",
    "end": "521399"
  },
  {
    "text": "Manifest",
    "start": "521399",
    "end": "522599"
  },
  {
    "text": "if you prefer a Helm chart the community",
    "start": "522599",
    "end": "524459"
  },
  {
    "text": "has recently created one and started",
    "start": "524459",
    "end": "526620"
  },
  {
    "text": "exposing all the configurable options",
    "start": "526620",
    "end": "528420"
  },
  {
    "text": "it's under very active development so if",
    "start": "528420",
    "end": "530940"
  },
  {
    "text": "there's something you need be sure to",
    "start": "530940",
    "end": "532320"
  },
  {
    "text": "join in with feedback",
    "start": "532320",
    "end": "535339"
  },
  {
    "start": "534000",
    "end": "534000"
  },
  {
    "text": "once you've deployed open cost you'll",
    "start": "536279",
    "end": "538380"
  },
  {
    "text": "start collecting data almost immediately",
    "start": "538380",
    "end": "540600"
  },
  {
    "text": "showing costs by any Dimension enables",
    "start": "540600",
    "end": "542880"
  },
  {
    "text": "action and fitting allocation tagging",
    "start": "542880",
    "end": "545220"
  },
  {
    "text": "and mapping into developer workflows is",
    "start": "545220",
    "end": "547140"
  },
  {
    "text": "very powerful",
    "start": "547140",
    "end": "548339"
  },
  {
    "text": "cluster cost efficiencies is a great",
    "start": "548339",
    "end": "550740"
  },
  {
    "text": "starting point for kubernetes cost",
    "start": "550740",
    "end": "552360"
  },
  {
    "text": "optimizations we'll get back to that in",
    "start": "552360",
    "end": "554580"
  },
  {
    "text": "a second",
    "start": "554580",
    "end": "555420"
  },
  {
    "text": "the Upper Crust API exposes cost",
    "start": "555420",
    "end": "557700"
  },
  {
    "text": "allocations for kubernetes workloads and",
    "start": "557700",
    "end": "559860"
  },
  {
    "text": "Cloud infrastructure supporting them",
    "start": "559860",
    "end": "561540"
  },
  {
    "text": "there's a swaggered Json and the open",
    "start": "561540",
    "end": "563640"
  },
  {
    "text": "cost repository and we're fleshing out",
    "start": "563640",
    "end": "565680"
  },
  {
    "text": "additional API documentation now",
    "start": "565680",
    "end": "568200"
  },
  {
    "text": "you've seen the web UI Coupe cuddle cost",
    "start": "568200",
    "end": "570660"
  },
  {
    "text": "is a CLI plugin for interacting with the",
    "start": "570660",
    "end": "572940"
  },
  {
    "text": "opencast API and if you really want to",
    "start": "572940",
    "end": "575399"
  },
  {
    "text": "you can always access Prometheus",
    "start": "575399",
    "end": "577380"
  },
  {
    "text": "directly",
    "start": "577380",
    "end": "579860"
  },
  {
    "start": "579000",
    "end": "579000"
  },
  {
    "text": "the opencast community continues to",
    "start": "580440",
    "end": "582480"
  },
  {
    "text": "expand and we're always eager to help",
    "start": "582480",
    "end": "584399"
  },
  {
    "text": "new folks we're mostly in slack and",
    "start": "584399",
    "end": "588120"
  },
  {
    "text": "GitHub with the fortnightly open cost",
    "start": "588120",
    "end": "590339"
  },
  {
    "text": "working group calls",
    "start": "590339",
    "end": "592980"
  },
  {
    "text": "there's also a Google group and Linkedin",
    "start": "592980",
    "end": "595740"
  },
  {
    "text": "if you're so inclined",
    "start": "595740",
    "end": "597360"
  },
  {
    "text": "there's links",
    "start": "597360",
    "end": "598920"
  },
  {
    "text": "there for the open cost calendar and the",
    "start": "598920",
    "end": "601080"
  },
  {
    "text": "open cost meeting notes if you want to",
    "start": "601080",
    "end": "604019"
  },
  {
    "text": "get involved in the open cost working",
    "start": "604019",
    "end": "605399"
  },
  {
    "text": "group",
    "start": "605399",
    "end": "607700"
  },
  {
    "text": "so now that we've got these numbers what",
    "start": "609720",
    "end": "611760"
  },
  {
    "text": "are we going to do with them let's talk",
    "start": "611760",
    "end": "613560"
  },
  {
    "text": "about kubernetes optimization strategies",
    "start": "613560",
    "end": "617839"
  },
  {
    "text": "the first step is make sure you have a",
    "start": "618360",
    "end": "621060"
  },
  {
    "text": "phenops practice",
    "start": "621060",
    "end": "622560"
  },
  {
    "text": "finops is an evolving Cloud financial",
    "start": "622560",
    "end": "624779"
  },
  {
    "text": "management discipline and a cultural",
    "start": "624779",
    "end": "626760"
  },
  {
    "text": "practice that enables organizations to",
    "start": "626760",
    "end": "628740"
  },
  {
    "text": "get the maximum business value by",
    "start": "628740",
    "end": "631019"
  },
  {
    "text": "helping coordinate engineering Finance",
    "start": "631019",
    "end": "633120"
  },
  {
    "text": "technology and business teams so they",
    "start": "633120",
    "end": "635459"
  },
  {
    "text": "can collaborate with data-driven",
    "start": "635459",
    "end": "637140"
  },
  {
    "text": "spending decisions the finops foundation",
    "start": "637140",
    "end": "639959"
  },
  {
    "text": "is part of the Linux Foundation",
    "start": "639959",
    "end": "643820"
  },
  {
    "text": "the finops foundation provides guidance",
    "start": "644100",
    "end": "646079"
  },
  {
    "text": "on cloud financial management through",
    "start": "646079",
    "end": "647760"
  },
  {
    "text": "Best Practices education and standards",
    "start": "647760",
    "end": "650100"
  },
  {
    "text": "their fin Ops framework is a set of",
    "start": "650100",
    "end": "652680"
  },
  {
    "text": "organizational recommendations for",
    "start": "652680",
    "end": "654540"
  },
  {
    "text": "building your financial practice while",
    "start": "654540",
    "end": "656640"
  },
  {
    "text": "it's not focused on kubernetes these",
    "start": "656640",
    "end": "658980"
  },
  {
    "text": "guidelines help establish patterns for",
    "start": "658980",
    "end": "660899"
  },
  {
    "text": "applying those Cloud cost savings and",
    "start": "660899",
    "end": "663660"
  },
  {
    "text": "large organizations Cloud costs are",
    "start": "663660",
    "end": "666000"
  },
  {
    "text": "rarely isolated to a single team many of",
    "start": "666000",
    "end": "669000"
  },
  {
    "text": "the cost optimizations at the cloud",
    "start": "669000",
    "end": "670560"
  },
  {
    "text": "account level are more effective when",
    "start": "670560",
    "end": "672720"
  },
  {
    "text": "centrally managed by a cloud operations",
    "start": "672720",
    "end": "674519"
  },
  {
    "text": "Finance team given their visibility of",
    "start": "674519",
    "end": "677100"
  },
  {
    "text": "consumption patterns across the",
    "start": "677100",
    "end": "678360"
  },
  {
    "text": "organization and their ability to",
    "start": "678360",
    "end": "680339"
  },
  {
    "text": "quantify opportunities for savings",
    "start": "680339",
    "end": "682680"
  },
  {
    "text": "you want to have folks on the same page",
    "start": "682680",
    "end": "684540"
  },
  {
    "text": "when it comes to optimizing your cloud",
    "start": "684540",
    "end": "686399"
  },
  {
    "text": "and kubernetes usage",
    "start": "686399",
    "end": "689779"
  },
  {
    "start": "690000",
    "end": "690000"
  },
  {
    "text": "we take a top-down approach to",
    "start": "691260",
    "end": "693420"
  },
  {
    "text": "optimizing kubernetes infrastructure",
    "start": "693420",
    "end": "695240"
  },
  {
    "text": "improving the efficiency of containers",
    "start": "695240",
    "end": "697560"
  },
  {
    "text": "affects the efficiency of pods which in",
    "start": "697560",
    "end": "699839"
  },
  {
    "text": "turn affects the efficiency of clusters",
    "start": "699839",
    "end": "702120"
  },
  {
    "text": "once you've started optimizing your",
    "start": "702120",
    "end": "703980"
  },
  {
    "text": "kubernetes infrastructure you can",
    "start": "703980",
    "end": "705839"
  },
  {
    "text": "investigate higher levels of cost",
    "start": "705839",
    "end": "707399"
  },
  {
    "text": "reductions like reserved instances and",
    "start": "707399",
    "end": "709620"
  },
  {
    "text": "other commitment-based savings this is",
    "start": "709620",
    "end": "711899"
  },
  {
    "text": "an iterative process you're never quite",
    "start": "711899",
    "end": "714360"
  },
  {
    "text": "done",
    "start": "714360",
    "end": "716720"
  },
  {
    "start": "724000",
    "end": "724000"
  },
  {
    "text": "workloads are the applications running",
    "start": "724459",
    "end": "726839"
  },
  {
    "text": "on your kubernetes cluster workloads may",
    "start": "726839",
    "end": "729540"
  },
  {
    "text": "be pods deployments replica sets staple",
    "start": "729540",
    "end": "732240"
  },
  {
    "text": "sets Daemon sets jobs or crime jobs",
    "start": "732240",
    "end": "734839"
  },
  {
    "text": "optimizations at this level relate to",
    "start": "734839",
    "end": "737220"
  },
  {
    "text": "the requested resources made by the",
    "start": "737220",
    "end": "739440"
  },
  {
    "text": "workloads to kubernetes itself and",
    "start": "739440",
    "end": "741600"
  },
  {
    "text": "whether they're still in use",
    "start": "741600",
    "end": "743399"
  },
  {
    "text": "when specifying pods containers may be",
    "start": "743399",
    "end": "746459"
  },
  {
    "text": "assigned requests and limits for",
    "start": "746459",
    "end": "749160"
  },
  {
    "text": "resources such as CPU and memory if",
    "start": "749160",
    "end": "751500"
  },
  {
    "text": "these are not assigned or are over",
    "start": "751500",
    "end": "753120"
  },
  {
    "text": "provisioned containers may be allocating",
    "start": "753120",
    "end": "755519"
  },
  {
    "text": "more resources than they actually need",
    "start": "755519",
    "end": "757740"
  },
  {
    "text": "costing you money",
    "start": "757740",
    "end": "759540"
  },
  {
    "text": "under premium containers may cause CPU",
    "start": "759540",
    "end": "762000"
  },
  {
    "text": "throttling or out of memory errors",
    "start": "762000",
    "end": "763740"
  },
  {
    "text": "leading to poor performance",
    "start": "763740",
    "end": "765899"
  },
  {
    "text": "there are several options for working",
    "start": "765899",
    "end": "767519"
  },
  {
    "text": "with these recommendations",
    "start": "767519",
    "end": "770660"
  },
  {
    "text": "there may be valid reasons for not",
    "start": "772380",
    "end": "774480"
  },
  {
    "text": "adjusting requests and limits with",
    "start": "774480",
    "end": "776279"
  },
  {
    "text": "respect to available resources or",
    "start": "776279",
    "end": "777899"
  },
  {
    "text": "insuring pods are never constrained in",
    "start": "777899",
    "end": "779579"
  },
  {
    "text": "their performance to ensure that all",
    "start": "779579",
    "end": "781680"
  },
  {
    "text": "containers in a namespace have the",
    "start": "781680",
    "end": "783540"
  },
  {
    "text": "default CPU and memory requests and",
    "start": "783540",
    "end": "785279"
  },
  {
    "text": "limits you may provide a limit range",
    "start": "785279",
    "end": "788100"
  },
  {
    "text": "you may provide limits and or requests",
    "start": "788100",
    "end": "791160"
  },
  {
    "text": "for CPU and or memory as necessary",
    "start": "791160",
    "end": "793639"
  },
  {
    "text": "containers with limits and resources",
    "start": "793639",
    "end": "795839"
  },
  {
    "text": "provided in their manifestable work as",
    "start": "795839",
    "end": "797700"
  },
  {
    "text": "expected but defaults will provide",
    "start": "797700",
    "end": "800940"
  },
  {
    "text": "will be provided for containers not",
    "start": "800940",
    "end": "802860"
  },
  {
    "text": "explicitly setting those values",
    "start": "802860",
    "end": "804720"
  },
  {
    "text": "container utilization is fairly",
    "start": "804720",
    "end": "806820"
  },
  {
    "text": "straightforward to measure and verify",
    "start": "806820",
    "end": "808800"
  },
  {
    "text": "with open cost all the data is captured",
    "start": "808800",
    "end": "811560"
  },
  {
    "text": "and exposed via the API CLI and UI",
    "start": "811560",
    "end": "816620"
  },
  {
    "start": "817000",
    "end": "817000"
  },
  {
    "text": "optimizations at the kubernetes level",
    "start": "817220",
    "end": "819420"
  },
  {
    "text": "are related to the configuration of the",
    "start": "819420",
    "end": "821700"
  },
  {
    "text": "kubernetes cluster itself when the",
    "start": "821700",
    "end": "823860"
  },
  {
    "text": "kubernator's cluster is over provisioned",
    "start": "823860",
    "end": "825839"
  },
  {
    "text": "or using inefficient node sizes there",
    "start": "825839",
    "end": "828180"
  },
  {
    "text": "are opportunities for improving the",
    "start": "828180",
    "end": "829980"
  },
  {
    "text": "effectiveness of workloads on the",
    "start": "829980",
    "end": "831420"
  },
  {
    "text": "cluster an over-provision kubernetes",
    "start": "831420",
    "end": "834060"
  },
  {
    "text": "cluster may have nodes that are",
    "start": "834060",
    "end": "835920"
  },
  {
    "text": "primarily idle making them strong",
    "start": "835920",
    "end": "837720"
  },
  {
    "text": "candidates for reducing the number of",
    "start": "837720",
    "end": "839459"
  },
  {
    "text": "nodes in the cluster or decreasing the",
    "start": "839459",
    "end": "841740"
  },
  {
    "text": "resources allocated to them",
    "start": "841740",
    "end": "843600"
  },
  {
    "text": "workloads may be redistributed across",
    "start": "843600",
    "end": "846120"
  },
  {
    "text": "the cluster to ensure availability while",
    "start": "846120",
    "end": "848220"
  },
  {
    "text": "reducing overspending on unused capacity",
    "start": "848220",
    "end": "850980"
  },
  {
    "text": "there may be situations where the",
    "start": "850980",
    "end": "852839"
  },
  {
    "text": "capacity of the cluster node",
    "start": "852839",
    "end": "854940"
  },
  {
    "text": "is over provisioned but a minimum number",
    "start": "854940",
    "end": "857100"
  },
  {
    "text": "of nodes may still be required for",
    "start": "857100",
    "end": "858720"
  },
  {
    "text": "workload durability in this case it's",
    "start": "858720",
    "end": "861420"
  },
  {
    "text": "recommended to deploy smaller cluster",
    "start": "861420",
    "end": "863399"
  },
  {
    "text": "nodes and then drain the other provision",
    "start": "863399",
    "end": "865019"
  },
  {
    "text": "nodes in favor of their more efficient",
    "start": "865019",
    "end": "866760"
  },
  {
    "text": "replacements once nodes have been",
    "start": "866760",
    "end": "869040"
  },
  {
    "text": "removed from the cluster the cluster",
    "start": "869040",
    "end": "871079"
  },
  {
    "text": "should continue to operate more",
    "start": "871079",
    "end": "872459"
  },
  {
    "text": "efficiently and additional nodes may be",
    "start": "872459",
    "end": "874560"
  },
  {
    "text": "added later in response to increased",
    "start": "874560",
    "end": "876360"
  },
  {
    "text": "workloads",
    "start": "876360",
    "end": "877440"
  },
  {
    "text": "open cost makes it easy to investigate",
    "start": "877440",
    "end": "879899"
  },
  {
    "text": "your clusters nodes for efficient",
    "start": "879899",
    "end": "881579"
  },
  {
    "text": "efficient utilization",
    "start": "881579",
    "end": "884779"
  },
  {
    "text": "operating systems these are the changes",
    "start": "884880",
    "end": "887940"
  },
  {
    "start": "885000",
    "end": "885000"
  },
  {
    "text": "that the operating system below the",
    "start": "887940",
    "end": "889860"
  },
  {
    "text": "kubernetes control plane",
    "start": "889860",
    "end": "891660"
  },
  {
    "text": "once again always look for resources",
    "start": "891660",
    "end": "894240"
  },
  {
    "text": "associated with your cluster but unused",
    "start": "894240",
    "end": "897720"
  },
  {
    "text": "check the allocations of the machines",
    "start": "897720",
    "end": "899820"
  },
  {
    "text": "you've provisioned for hosting your",
    "start": "899820",
    "end": "901199"
  },
  {
    "text": "kubernetes cluster orphaned resources",
    "start": "901199",
    "end": "903839"
  },
  {
    "text": "may still show up in your Cloud bill and",
    "start": "903839",
    "end": "905820"
  },
  {
    "text": "we don't want to keep paying for those",
    "start": "905820",
    "end": "907800"
  },
  {
    "text": "resize your local disk with a low",
    "start": "907800",
    "end": "910019"
  },
  {
    "text": "utilization and see whether you may",
    "start": "910019",
    "end": "912060"
  },
  {
    "text": "launch new nodes with smaller disk on",
    "start": "912060",
    "end": "913740"
  },
  {
    "text": "the next node turndown",
    "start": "913740",
    "end": "915660"
  },
  {
    "text": "there are many use cases where arm CPUs",
    "start": "915660",
    "end": "918660"
  },
  {
    "text": "are highly capable of replacements for",
    "start": "918660",
    "end": "920459"
  },
  {
    "text": "x86 processors as significant cost",
    "start": "920459",
    "end": "923339"
  },
  {
    "text": "reductions not every workload is",
    "start": "923339",
    "end": "925740"
  },
  {
    "text": "migratable but most kubernetes and open",
    "start": "925740",
    "end": "928079"
  },
  {
    "text": "source tooling is armed compatible at",
    "start": "928079",
    "end": "930300"
  },
  {
    "text": "this point",
    "start": "930300",
    "end": "931380"
  },
  {
    "text": "open cost makes it easy to compare",
    "start": "931380",
    "end": "933420"
  },
  {
    "text": "workloads across nodes with different",
    "start": "933420",
    "end": "935220"
  },
  {
    "text": "architectures",
    "start": "935220",
    "end": "937939"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "Cloud infrastructure optimizations now",
    "start": "940019",
    "end": "942660"
  },
  {
    "text": "this is where you should probably talk",
    "start": "942660",
    "end": "944399"
  },
  {
    "text": "to your finops team these savings are",
    "start": "944399",
    "end": "947220"
  },
  {
    "text": "generally most useful when you have the",
    "start": "947220",
    "end": "949440"
  },
  {
    "text": "holistic view of all your organization's",
    "start": "949440",
    "end": "951300"
  },
  {
    "text": "Cloud usage and can make informed",
    "start": "951300",
    "end": "953399"
  },
  {
    "text": "decisions",
    "start": "953399",
    "end": "954839"
  },
  {
    "text": "open cost works with an on-demand",
    "start": "954839",
    "end": "957180"
  },
  {
    "text": "pricing so it won't reflect these kinds",
    "start": "957180",
    "end": "959519"
  },
  {
    "text": "of savings",
    "start": "959519",
    "end": "961940"
  },
  {
    "text": "so in summary remember this is an",
    "start": "965940",
    "end": "968699"
  },
  {
    "text": "iterative process there are no silver",
    "start": "968699",
    "end": "970680"
  },
  {
    "text": "bullets but there may be low hanging",
    "start": "970680",
    "end": "972540"
  },
  {
    "text": "fruit as you work through optimizations",
    "start": "972540",
    "end": "974639"
  },
  {
    "text": "at each level there will continue to be",
    "start": "974639",
    "end": "976860"
  },
  {
    "text": "savings opportunities below",
    "start": "976860",
    "end": "978899"
  },
  {
    "text": "improving the efficiency of containers",
    "start": "978899",
    "end": "980760"
  },
  {
    "text": "affects the efficiency of pods which in",
    "start": "980760",
    "end": "983160"
  },
  {
    "text": "turn affects the efficiency of your",
    "start": "983160",
    "end": "984720"
  },
  {
    "text": "clusters and coordinate your savings",
    "start": "984720",
    "end": "987180"
  },
  {
    "text": "across the org",
    "start": "987180",
    "end": "990139"
  },
  {
    "text": "thanks",
    "start": "992100",
    "end": "993360"
  },
  {
    "text": "if you have any questions please contact",
    "start": "993360",
    "end": "995760"
  },
  {
    "text": "us at opencost kubecost.com",
    "start": "995760",
    "end": "999899"
  }
]