[
  {
    "text": "for some background I'm an engineer I work on the open source project K native this project has a bunch of subgroups uh",
    "start": "120",
    "end": "7520"
  },
  {
    "text": "which I'll kind of get into but I'm the lead for the serving I'm also on the steering committee um we had a Toc but",
    "start": "7520",
    "end": "13799"
  },
  {
    "text": "we merged it we simplified our governance a little bit you can see my different handles I signed up for blue sky yesterday you can be my first",
    "start": "13799",
    "end": "20600"
  },
  {
    "text": "follower so uh quick overview of ke native um",
    "start": "20600",
    "end": "27160"
  },
  {
    "text": "there's a bunch of subgroups with it but um serving is sort of the one I'm involved in and it kind of does",
    "start": "27160",
    "end": "33520"
  },
  {
    "text": "autoscaling your workloads uh to zero I'll cover a little bit more then you have a venting that",
    "start": "33520",
    "end": "39399"
  },
  {
    "text": "lets you um kind of wire sources to these workloads and you don't need to",
    "start": "39399",
    "end": "44840"
  },
  {
    "text": "use K native serving you can wire them up to uh deployments and things like that and we have a bunch of sources",
    "start": "44840",
    "end": "51680"
  },
  {
    "text": "think of like some Pub sub Stuff Etc um that can you react on we have a CLI",
    "start": "51680",
    "end": "58840"
  },
  {
    "text": "group um so you can interact everything using a CLI and then we also have this",
    "start": "58840",
    "end": "64320"
  },
  {
    "text": "uh functions subgroup and what they try to do is just provide like a functional",
    "start": "64320",
    "end": "70280"
  },
  {
    "text": "uh programming model that then runs on top of serving but you can use all these things together and build like a fast",
    "start": "70280",
    "end": "76240"
  },
  {
    "text": "but you can use things separately so if I want to build functions and then run them on just anything I want I can do",
    "start": "76240",
    "end": "82200"
  },
  {
    "text": "that because it just builds containers um if you just want to have a serving and not a venting you can so we kind of",
    "start": "82200",
    "end": "88400"
  },
  {
    "text": "call it like a Voltron project project where you can use all these things independently but if you use it together",
    "start": "88400",
    "end": "93560"
  },
  {
    "text": "you get some cool capabilities kind of like a platform uh so surveying in a little bit",
    "start": "93560",
    "end": "99320"
  },
  {
    "text": "more detail you kind of offer a higher level abstraction of kubernetes entally we do all this network programming um",
    "start": "99320",
    "end": "106600"
  },
  {
    "text": "you do revision management and things like that but essentially what you're doing is you're taking a container an",
    "start": "106600",
    "end": "111960"
  },
  {
    "text": "image and then you'll get like a URL back that has uh certificates",
    "start": "111960",
    "end": "118759"
  },
  {
    "text": "provisioned things like that and we can do traffic spinning and we do things like these automatic health",
    "start": "118759",
    "end": "124320"
  },
  {
    "text": "checks so here's kind of like an example um this is we named it it's called",
    "start": "124320",
    "end": "130720"
  },
  {
    "text": "service but it's actually a k native service so I'll just call it K service just to not confuse people this is kind",
    "start": "130720",
    "end": "137120"
  },
  {
    "text": "of like all you need to Define so in my service I have a template spec you can",
    "start": "137120",
    "end": "142519"
  },
  {
    "text": "see my image has like some function I can specify container Port I'm kind of highlighting like you can do traffic",
    "start": "142519",
    "end": "147640"
  },
  {
    "text": "spitting but if you don't specify anything that traffic block it will just always route to the latest revision and",
    "start": "147640",
    "end": "154000"
  },
  {
    "text": "you can kind of see a de down there um hey once I deploy this service and if",
    "start": "154000",
    "end": "159959"
  },
  {
    "text": "operator configured automatic surv visioning I'll get back like a full URL in my status and things like that so",
    "start": "159959",
    "end": "167480"
  },
  {
    "text": "this is kind of what I was highlighting with the high Lev abstraction if you wanted to do this with all these open",
    "start": "167480",
    "end": "172879"
  },
  {
    "text": "source components on kubernetes you're writing you need a horizontal pod AO scaler need deployment you create a",
    "start": "172879",
    "end": "180080"
  },
  {
    "text": "kubernetes service then you got to create an Ingress then you got to create some other thing and some other thing",
    "start": "180080",
    "end": "185879"
  },
  {
    "text": "and it's just a lot of complexity for people um to manage a lot of people try to manage this complexity using",
    "start": "185879",
    "end": "191840"
  },
  {
    "text": "templating and things like that it works but um how do you know when one thing's",
    "start": "191840",
    "end": "197640"
  },
  {
    "text": "failed um like if your deployment fails how how does that bubble up those type of Errors um and I kind of want to dig into",
    "start": "197640",
    "end": "205120"
  },
  {
    "text": "our object model so I kind of mentioned this is the key need of service",
    "start": "205120",
    "end": "210400"
  },
  {
    "text": "what we do is it kind of creates a configuration and what that ends up doing is recording histories of changes",
    "start": "210400",
    "end": "216439"
  },
  {
    "text": "kind of like that and then you end up having a route and then that route will",
    "start": "216439",
    "end": "222799"
  },
  {
    "text": "end up uh routing you get to choose to route to revisions and things like that so you kind of have like a linear",
    "start": "222799",
    "end": "228480"
  },
  {
    "text": "history of of the changes that you've made um and then back so I guess I",
    "start": "228480",
    "end": "234720"
  },
  {
    "text": "should have made the date larger back in q1 of 2018 the uh networking stock dependent",
    "start": "234720",
    "end": "241000"
  },
  {
    "text": "on ISO only and then uh three quarters later in that same year we added an",
    "start": "241000",
    "end": "247360"
  },
  {
    "text": "abstraction that then allowed the networking to be pluggable so right now",
    "start": "247360",
    "end": "252680"
  },
  {
    "text": "we have like Contour isio Courier uh back them we also had glue and",
    "start": "252680",
    "end": "258840"
  },
  {
    "text": "Ambassador but I think those Integrations just kind of staled out um but my big Point here is when I talked",
    "start": "258840",
    "end": "264759"
  },
  {
    "text": "to someone I think two days ago they're like oh it still depends on isio right I'm like no has independent on isio and",
    "start": "264759",
    "end": "271000"
  },
  {
    "text": "it's like something I have to keep saying every year uh maybe for the next coupon talk I'll just have one talk",
    "start": "271000",
    "end": "276360"
  },
  {
    "text": "where I just repeat the same thing for a full hour so and what we're what we started I",
    "start": "276360",
    "end": "283080"
  },
  {
    "text": "think two years ago is for now we're actually reconciling the Gateway API so",
    "start": "283080",
    "end": "288560"
  },
  {
    "text": "we kind of started with the alpha apis and then went through some revisions but now that it's sort of like Gateway API",
    "start": "288560",
    "end": "294400"
  },
  {
    "text": "is V1 as of last November um we're putting a bit more emphasis on that so",
    "start": "294400",
    "end": "299800"
  },
  {
    "text": "then I'm going to kind of cover what we've been up to there um in the future the idea would be",
    "start": "299800",
    "end": "305919"
  },
  {
    "text": "hey we get rid of all this complexity and then we just program The Gateway API um I don't know when that will be but",
    "start": "305919",
    "end": "313440"
  },
  {
    "text": "that will that's our ultimate goal it'll just simplify a lot of things um so what have we learned well",
    "start": "313440",
    "end": "321160"
  },
  {
    "text": "kind of like from my title I want to cover what what do I mean by ready um so going back to our service that we",
    "start": "321160",
    "end": "329479"
  },
  {
    "text": "made this is essentially like the minimal yaml that you need to deploy",
    "start": "329479",
    "end": "335240"
  },
  {
    "text": "it um when you deploy something you get back uh we reconcile we provide statuses",
    "start": "335240",
    "end": "342479"
  },
  {
    "text": "and usually in those statuses um you kind of provide information about specific things so we provide",
    "start": "342479",
    "end": "347960"
  },
  {
    "text": "information about the configuration the route um the problem with this is that",
    "start": "347960",
    "end": "354000"
  },
  {
    "text": "as a client or a consumer I have to know what the statuses mean I need to know the names like how many of you",
    "start": "354000",
    "end": "361960"
  },
  {
    "text": "have deployed a deployment and then try to figure out what status it's at like",
    "start": "361960",
    "end": "367080"
  },
  {
    "text": "what do you usually look for anyone I see one way at the",
    "start": "367080",
    "end": "372400"
  },
  {
    "text": "back okay I I'll answer the question you don't know right like like progress deadline it's if it's fail you're trying",
    "start": "372400",
    "end": "378800"
  },
  {
    "text": "to figure out the reasoning what's happening it's kind of confusing and then if you add a new condition uh or",
    "start": "378800",
    "end": "384319"
  },
  {
    "text": "change conditions or change the name then it kind of your client is bound to these conditions so one thing K native",
    "start": "384319",
    "end": "391599"
  },
  {
    "text": "does we add like a top level ready condition on all our statuses and then that's kind of simpler",
    "start": "391599",
    "end": "398639"
  },
  {
    "text": "for clients to reason about like hey is my route ready I just go and see the ready condition is my um revision ready",
    "start": "398639",
    "end": "406680"
  },
  {
    "text": "has it scaled properly I go look at the ready condition and things like that and then the way it kind of works is hey if",
    "start": "406680",
    "end": "413199"
  },
  {
    "text": "the revisions ready we just kind of Bubble Up the status so we get config ready route ready service ready",
    "start": "413199",
    "end": "420120"
  },
  {
    "text": "Etc um now I'm kind of segueing what does it mean for the route to be",
    "start": "420120",
    "end": "426120"
  },
  {
    "text": "ready um well kind of like I showed before since we reconcile down to uh the",
    "start": "426120",
    "end": "432840"
  },
  {
    "text": "different implementations really we kind of push the problem down right push it down to this our Ingress abstraction",
    "start": "432840",
    "end": "439080"
  },
  {
    "text": "then we push it down to the actual implementation and then what does it mean for those for an isio virtual service to be",
    "start": "439080",
    "end": "446440"
  },
  {
    "text": "ready what does it mean for HB proxy to be ready and this is where like these are the types of guarantees some of",
    "start": "446440",
    "end": "452879"
  },
  {
    "text": "these implementations provide so for example two that are here are it",
    "start": "452879",
    "end": "458360"
  },
  {
    "text": "validates the configuration and then um it also kind of gives you a signal when",
    "start": "458360",
    "end": "464360"
  },
  {
    "text": "it sends the config to a proxy and then the question I have do you think that um these guarantees make",
    "start": "464360",
    "end": "473960"
  },
  {
    "text": "it safe for the client to make a request without dropping traffic yes or no who thinks or raise",
    "start": "473960",
    "end": "480599"
  },
  {
    "text": "your hand if you think it's safe nobody okay one person well they're",
    "start": "480599",
    "end": "487000"
  },
  {
    "text": "not safe essentially what happens is just because like uh the controller says",
    "start": "487000",
    "end": "492400"
  },
  {
    "text": "the uh config is valid and marks something on the status that doesn't",
    "start": "492400",
    "end": "498280"
  },
  {
    "text": "give you an indication that uh it actually has propagated the the proxy",
    "start": "498280",
    "end": "503400"
  },
  {
    "text": "that the proxy has actually actuated let's say like you added a new listener on a new Port let turn on the port",
    "start": "503400",
    "end": "510039"
  },
  {
    "text": "um and so forth like that so another guarantee could be um hey we want the config once it gets to the proxy to send",
    "start": "510039",
    "end": "517080"
  },
  {
    "text": "the uh act back but then even then it doesn't give you a good",
    "start": "517080",
    "end": "522719"
  },
  {
    "text": "guarantee uh simply because you uh it might receive the message but then the",
    "start": "522719",
    "end": "528120"
  },
  {
    "text": "proxy needs to do some Machinery to actually actuate on it to actually like spin up a new listener and things like",
    "start": "528120",
    "end": "534320"
  },
  {
    "text": "that okay so then what if we add for example uh proxy's weight they do the",
    "start": "534320",
    "end": "540120"
  },
  {
    "text": "work then they give back an acknowledgement backwards and it could be async or something like that who many",
    "start": "540120",
    "end": "545720"
  },
  {
    "text": "people think that guarantee uh makes it safe to make a request as a client once",
    "start": "545720",
    "end": "551440"
  },
  {
    "text": "you get that back no one yes or no raise your hand if you think it's",
    "start": "551440",
    "end": "557920"
  },
  {
    "text": "safe okay well I guess everyone knows uh I'm saying it's not safe because you forgot about DNS you didn't program your",
    "start": "557920",
    "end": "564279"
  },
  {
    "text": "DNS so you don't know about that and then subsequently what if you have more than one proxy um you actually need to",
    "start": "564279",
    "end": "570640"
  },
  {
    "text": "have your controller aggregate the status of all the proxies and to know that it's the this kind of where we",
    "start": "570640",
    "end": "576640"
  },
  {
    "text": "segue to the Gateway API then like what conditions does the Gateway API provide on their routes um and what's standard",
    "start": "576640",
    "end": "584000"
  },
  {
    "text": "in core right now is two so one is accepted which kind of maps then to the",
    "start": "584000",
    "end": "589200"
  },
  {
    "text": "guarantee I had that your configuration's valid and the other one is programmed which kind of just means",
    "start": "589200",
    "end": "594600"
  },
  {
    "text": "that your uh configuration was sent off to the boxies that it's programming and",
    "start": "594600",
    "end": "601560"
  },
  {
    "text": "kind of as we went through the exercise I don't really consider that any not a safe guarantee for client to know that",
    "start": "601560",
    "end": "608079"
  },
  {
    "text": "it's it will make a successful request um something else to call out is",
    "start": "608079",
    "end": "614680"
  },
  {
    "text": "as we've read in these Integrations with all these different proxies there are various quirks where um some Gateway",
    "start": "614680",
    "end": "621959"
  },
  {
    "text": "implementations have a status block they sometimes have some sort of like",
    "start": "621959",
    "end": "627000"
  },
  {
    "text": "readiest condition but then for for example if you're familiar with generation on resources and then observe",
    "start": "627000",
    "end": "633920"
  },
  {
    "text": "generation you're supposed to match up um whether the spec and the generation",
    "start": "633920",
    "end": "639880"
  },
  {
    "text": "on the status match up then you know it's actually been changed um a lot of implementations don't even bump that",
    "start": "639880",
    "end": "646120"
  },
  {
    "text": "number so like it doesn't really mean anything to change the spec and things like that um but kind of this is my",
    "start": "646120",
    "end": "652320"
  },
  {
    "text": "long-winded way of saying like hey there's no reliable way for clients to know when it's safe to make a request",
    "start": "652320",
    "end": "658760"
  },
  {
    "text": "when you program your route or apply it um this is where I can use your help um so in",
    "start": "658760",
    "end": "666279"
  },
  {
    "text": "the gayway AP now they reserved a ready condition but they haven't decided what to do with it um so what I would like",
    "start": "666279",
    "end": "673880"
  },
  {
    "text": "people to do is visit this link and this thing and then um as part",
    "start": "673880",
    "end": "679920"
  },
  {
    "text": "of Gateway 13 they're going through a scoping phase and I'm trying to just",
    "start": "679920",
    "end": "685519"
  },
  {
    "text": "poke them to say that like hey do you care about this stuff am I only crazy one with a tin hat that cares about this",
    "start": "685519",
    "end": "691800"
  },
  {
    "text": "stuff so you can just go to this GitHub issue and just add some likes to it and then",
    "start": "691800",
    "end": "697440"
  },
  {
    "text": "help H so given given the problem oh God it's like what do we do this is how I",
    "start": "697440",
    "end": "703120"
  },
  {
    "text": "feel every day um I I feel I feel really it's not it's",
    "start": "703120",
    "end": "710279"
  },
  {
    "text": "not glamorous at all it's just when I found out this is what we're doing I'm like it's it's very sad but it's just",
    "start": "710279",
    "end": "716639"
  },
  {
    "text": "like yes we probe like we probe the proxies to see if the route has programmed um not very elaborate not",
    "start": "716639",
    "end": "724200"
  },
  {
    "text": "very smart but guess what it works and will work with any proxy you have but how do we do it in K",
    "start": "724200",
    "end": "730800"
  },
  {
    "text": "specifically well ideally we'd have our K of Ingress object that we kind of then",
    "start": "730800",
    "end": "737560"
  },
  {
    "text": "turn into a Gateway HB route um I guess I didn't clarify that ketive Ingress object is kind of like an internal type",
    "start": "737560",
    "end": "743959"
  },
  {
    "text": "that we use um ideally we would just have like hey this is my host name this is my back",
    "start": "743959",
    "end": "750160"
  },
  {
    "text": "end um but in order to do the probing we actually do a hash of our Ingress and we",
    "start": "750160",
    "end": "758040"
  },
  {
    "text": "add a bunch of filters and use some special headers to say as we when we do a probe we use a special header and then",
    "start": "758040",
    "end": "766040"
  },
  {
    "text": "um that request header modifier will then add essentially um when the request goes",
    "start": "766040",
    "end": "773320"
  },
  {
    "text": "through the proxy the special hash and then we have workloads that have special",
    "start": "773320",
    "end": "778760"
  },
  {
    "text": "s cars that then will return that hash and then that way we know uh when the",
    "start": "778760",
    "end": "783800"
  },
  {
    "text": "route has been sort of programmed um this is kind of like the high level where it's like hey we'll",
    "start": "783800",
    "end": "789480"
  },
  {
    "text": "make the route controller it programs the proxy and then for each host we do a bunch of",
    "start": "789480",
    "end": "795199"
  },
  {
    "text": "probes um that hits arated pod and then it responds with the hash back when we",
    "start": "795199",
    "end": "800800"
  },
  {
    "text": "see that the hashes match up um then we know that the route is ready and then we essentially then end up marking uh these",
    "start": "800800",
    "end": "808720"
  },
  {
    "text": "implement ations as ready then we can eventually Mark the route as ready right",
    "start": "808720",
    "end": "813959"
  },
  {
    "text": "so problem solved right so this is the other interesting",
    "start": "813959",
    "end": "819600"
  },
  {
    "text": "bit it's like that let's say that's for just creating routes what about sort of updates",
    "start": "819600",
    "end": "825399"
  },
  {
    "text": "so let's say I have my back end here on my HP route and I specify it's going to",
    "start": "825399",
    "end": "832639"
  },
  {
    "text": "some uh function and then I want to change it to my other back end and while",
    "start": "832639",
    "end": "839279"
  },
  {
    "text": "I'm doing that I'm doing consistent probing right who thinks that that is safe can you raise your",
    "start": "839279",
    "end": "845959"
  },
  {
    "text": "hand guess no everyone's learned their lesson no it's not safe if everyone",
    "start": "845959",
    "end": "852240"
  },
  {
    "text": "wonders where this is from it's a movie called Marathon Man I haven't seen it but the when I Google is it safe this is",
    "start": "852240",
    "end": "857680"
  },
  {
    "text": "what comes up looks like a very good movie has Lawrence Olivia in it okay so",
    "start": "857680",
    "end": "863320"
  },
  {
    "text": "essentially updates are also not safe there's a few things you need to worry about um and it's actually very",
    "start": "863320",
    "end": "869320"
  },
  {
    "text": "implementation specific and how the Ingress tries to either try to be smart and optimize some things U let's say you",
    "start": "869320",
    "end": "876519"
  },
  {
    "text": "optimize memory usage um and then you don't end up tracking all the services",
    "start": "876519",
    "end": "882199"
  },
  {
    "text": "in your cluster all the endpoints in your cluster you're just tracking things that are reference that kind of means",
    "start": "882199",
    "end": "887399"
  },
  {
    "text": "then I'll kind of do an illustration so if I have a route let's say it's referencing a and that service",
    "start": "887399",
    "end": "894560"
  },
  {
    "text": "points to PO a um in the proxy this being the envoy specific the envoy will",
    "start": "894560",
    "end": "902480"
  },
  {
    "text": "have sort of like this route map of like routes to backends but then also you have sort of this each backend has then",
    "start": "902480",
    "end": "909600"
  },
  {
    "text": "a list of like end points that it has um so this is kind of an example where we're doing the client request",
    "start": "909600",
    "end": "917279"
  },
  {
    "text": "then if we let's say shift over our route to the next back end what can happen is",
    "start": "917279",
    "end": "924759"
  },
  {
    "text": "um oh I guess in this example if I go really fast what you see is",
    "start": "924759",
    "end": "930079"
  },
  {
    "text": "hey the service backends got updated this is one kind of race that can happen but the route map wasn't",
    "start": "930079",
    "end": "936319"
  },
  {
    "text": "updated uh hold on okay so in the r map it points to a still when the requests are coming uh",
    "start": "936319",
    "end": "943759"
  },
  {
    "text": "because it's not referencing a anymore that cluster or in Envoy terms got",
    "start": "943759",
    "end": "949199"
  },
  {
    "text": "pruned um and then so essentially the route map points to nothing so then",
    "start": "949199",
    "end": "954720"
  },
  {
    "text": "requests fail the other alternative is um hey the M get updated but there's a",
    "start": "954720",
    "end": "960720"
  },
  {
    "text": "delay on getting the endpoints into the uh clusters or not cluster but the",
    "start": "960720",
    "end": "966120"
  },
  {
    "text": "service X backend so at this point then the route's fine but there's no backend to route to you then you also get like a",
    "start": "966120",
    "end": "973000"
  },
  {
    "text": "500 um so really what you need ideally is to have them both updated at the same time automically and then depending on",
    "start": "973000",
    "end": "979959"
  },
  {
    "text": "your implementation that doesn't happen like Envoy has two distinct apis for routing and endpoints um I don't haven't",
    "start": "979959",
    "end": "987360"
  },
  {
    "text": "used Linker D because they don't do Ingress stuff but I don't know what they do um so really what to avoid this like",
    "start": "987360",
    "end": "995959"
  },
  {
    "text": "proxies should uh well it's a trade-off really you need to track all your",
    "start": "995959",
    "end": "1001800"
  },
  {
    "text": "backends um so for example even though this route only points to service X it's",
    "start": "1001800",
    "end": "1007240"
  },
  {
    "text": "also tracking the backends for service a I think most implementation just do",
    "start": "1007240",
    "end": "1012839"
  },
  {
    "text": "that um and then another instance where things can fail this one's very easy to avoid you just kind of um this is going",
    "start": "1012839",
    "end": "1021040"
  },
  {
    "text": "to uh you just need to wait so for example if I create a service and a new",
    "start": "1021040",
    "end": "1026600"
  },
  {
    "text": "pod and move the route over right away then that service might not have a ready",
    "start": "1026600",
    "end": "1032079"
  },
  {
    "text": "endpoint um so ideally you deploy your service wait for ready endpoint then you switch over your routing and that's",
    "start": "1032079",
    "end": "1037798"
  },
  {
    "text": "usually a safe way of doing that um so given these problems how does",
    "start": "1037799",
    "end": "1043600"
  },
  {
    "text": "K native get around it um so it's another what do we do let me see the time okay I'm going to give a shout out",
    "start": "1043600",
    "end": "1050039"
  },
  {
    "text": "to Matt Moore uh he was a contributor on K native back in the day now he's uh CTO",
    "start": "1050039",
    "end": "1055240"
  },
  {
    "text": "of chainu guard so he spent I don't know how many months banging on this problem",
    "start": "1055240",
    "end": "1061080"
  },
  {
    "text": "um trying to solve it for Contour um and we came up with a solution and I'm going",
    "start": "1061080",
    "end": "1066679"
  },
  {
    "text": "to describe how I took that solution and adopted it for the gway API um but essentially we have to do",
    "start": "1066679",
    "end": "1073200"
  },
  {
    "text": "unfortunately a three-phase update so if I want to move my route to service X safely we end up um first adding",
    "start": "1073200",
    "end": "1081640"
  },
  {
    "text": "essentially a new backend and then we specifically have those back ends be like um like a probing point so in the",
    "start": "1081640",
    "end": "1089080"
  },
  {
    "text": "Contour hack it was essentially like a new invalid host name that no one will ever reference on the cluster that",
    "start": "1089080",
    "end": "1095400"
  },
  {
    "text": "confuses users when you see like hey what's this random thing that gets created temporarily so at least for the",
    "start": "1095400",
    "end": "1100960"
  },
  {
    "text": "Gateway because we have um what is it path matching I could do like",
    "start": "1100960",
    "end": "1106120"
  },
  {
    "text": "BN paths and so forth like that I think I'll cover in the thing so what happens",
    "start": "1106120",
    "end": "1111280"
  },
  {
    "text": "then is hey we end up getting a bunch of new probing routes and then eventually we'll have the service uh show up in the",
    "start": "1111280",
    "end": "1119760"
  },
  {
    "text": "uh the proxy and eventually the endpoint will be populated and then once that's",
    "start": "1119760",
    "end": "1125039"
  },
  {
    "text": "done we can safely move the main route to let's say service X but we still keep",
    "start": "1125039",
    "end": "1131760"
  },
  {
    "text": "the old probes because even dropping the old ones now can cause some issues if there's uh flight uh requested in flight",
    "start": "1131760",
    "end": "1139600"
  },
  {
    "text": "and things like that and eventually we then drop the extra probes and then things get uh sorry and then things kind",
    "start": "1139600",
    "end": "1147480"
  },
  {
    "text": "of get cleaned up ideally um that's especially if they do pruning so we do",
    "start": "1147480",
    "end": "1154559"
  },
  {
    "text": "that that's kind of like the hack so we probe and then we do very slow updates",
    "start": "1154559",
    "end": "1161000"
  },
  {
    "text": "in a safe manner to get around this problem this is what Ken kind of does automatically ideally like a ready",
    "start": "1161000",
    "end": "1167360"
  },
  {
    "text": "condition would do this for for us but it really is implementation dependent um so kind of the summary is",
    "start": "1167360",
    "end": "1175679"
  },
  {
    "text": "like if a proxy tracks a subset of the services then updates potentially aren't",
    "start": "1175679",
    "end": "1181080"
  },
  {
    "text": "safe um and if you do deploy a new service and switch over the route really quickly you should really wait for that",
    "start": "1181080",
    "end": "1188640"
  },
  {
    "text": "pod to be ready and also the endpoint to be ready in the uh kubernetes Services",
    "start": "1188640",
    "end": "1195240"
  },
  {
    "text": "endpoint slice and even then you need to wait for the Point slice IP to be",
    "start": "1195240",
    "end": "1200440"
  },
  {
    "text": "detected by the proxy and control plane and all that stuff so there's just a",
    "start": "1200440",
    "end": "1206000"
  },
  {
    "text": "delay that happens um and one thing I think that could be interesting to know is like showing you some real metrics",
    "start": "1206000",
    "end": "1212400"
  },
  {
    "text": "about this stuff so this was actually a fun thing to do so the test is fairly simple there's two of them I did there's",
    "start": "1212400",
    "end": "1218640"
  },
  {
    "text": "a creation and update one um this first test just creates a service and a pod it",
    "start": "1218640",
    "end": "1224520"
  },
  {
    "text": "waits for the endpoint to have a ready address essenti she skipping that uh Second failure that I was mentioning",
    "start": "1224520",
    "end": "1230039"
  },
  {
    "text": "creates a new route with a domain uh we pull to see how long it takes to get ready and then we do this a",
    "start": "1230039",
    "end": "1235360"
  },
  {
    "text": "thousand times and the results are pretty interesting so here's um you can see",
    "start": "1235360",
    "end": "1240559"
  },
  {
    "text": "traffic in blue even I don't really understand how that works because it's very sporadic but at least it's flat um",
    "start": "1240559",
    "end": "1247480"
  },
  {
    "text": "so that you can maybe say that there's a floor uh someone suggested to me that there's maybe they do things on a timing",
    "start": "1247480",
    "end": "1253799"
  },
  {
    "text": "pole a loop so maybe that's why you have that but you can kind of see with like um a thousand Services Contour kind of",
    "start": "1253799",
    "end": "1260760"
  },
  {
    "text": "lineally grows up but it's still fine where it's just like under 3 seconds um",
    "start": "1260760",
    "end": "1266080"
  },
  {
    "text": "you can see uh yellow is Envoy Gateway kind of has a very similar trajectory as Contour",
    "start": "1266080",
    "end": "1274559"
  },
  {
    "text": "but it's still around like a second that's essentially the delay from when I create my route to how long it's",
    "start": "1274559",
    "end": "1280720"
  },
  {
    "text": "actually ready if I'm probing and then at least in this graph um H performs",
    "start": "1280720",
    "end": "1285840"
  },
  {
    "text": "pretty well like it's uh the slope is the lowest right uh for updating this is kind of",
    "start": "1285840",
    "end": "1293320"
  },
  {
    "text": "the test that we did I create an initial service in IOD I create a single HP",
    "start": "1293320",
    "end": "1299080"
  },
  {
    "text": "route and start pulling and then kind of what we're doing is we're updating backends so I'll create a new service",
    "start": "1299080",
    "end": "1304480"
  },
  {
    "text": "new pod update the backend and see how long it takes and then I run that uh a",
    "start": "1304480",
    "end": "1310200"
  },
  {
    "text": "100 times and then we just check the polar to see if there's any drop traffic uh the results are interesting",
    "start": "1310200",
    "end": "1317760"
  },
  {
    "text": "so updates are very fast for pretty much everybody traffic again it's all over",
    "start": "1317760",
    "end": "1323000"
  },
  {
    "text": "the place but it's all it's still under one one and a half seconds um but you can see onvo Gateway",
    "start": "1323000",
    "end": "1331600"
  },
  {
    "text": "and Contour at the bottom ISO I believe is green this is where I kind of screwed up the slides I should have used the same colors between them um it's funny",
    "start": "1331600",
    "end": "1339799"
  },
  {
    "text": "talking to an isio maintainer uh the reason why they're at like 100 milliseconds is that they purposely",
    "start": "1339799",
    "end": "1345080"
  },
  {
    "text": "weight 100 millisecond intervals to send out um config changes out to the proxy",
    "start": "1345080",
    "end": "1350159"
  },
  {
    "text": "so it's actually funny to see that in uh data and then down here you can see the",
    "start": "1350159",
    "end": "1355279"
  },
  {
    "text": "results of the probing as part of the update so like traffic onway gayway and isio all had did drop no traffic Contour",
    "start": "1355279",
    "end": "1363480"
  },
  {
    "text": "99.62 so there's a again that's that bit of traffic drop without the guarantees of the probing change and things like",
    "start": "1363480",
    "end": "1370159"
  },
  {
    "text": "that um I got to call out I feel bad but like I got call out gke managed gateways",
    "start": "1370159",
    "end": "1376760"
  },
  {
    "text": "um for those aren't aware G ke has Global load balancers that you can um",
    "start": "1376760",
    "end": "1383159"
  },
  {
    "text": "when you spin up a g cluster you say you support Gateway API and then you have the ability to program a bunch of global",
    "start": "1383159",
    "end": "1389480"
  },
  {
    "text": "load balancers that they have so they have I don't really know what the names are anymore um I did this a week ago but",
    "start": "1389480",
    "end": "1396279"
  },
  {
    "text": "I think the first one is a regional load balancer and what's interesting is when you create an HB route and you start",
    "start": "1396279",
    "end": "1402320"
  },
  {
    "text": "probing it it will take a minute and 30 seconds for that route to be ready on create which to me is like",
    "start": "1402320",
    "end": "1409000"
  },
  {
    "text": "forever I'm assuming which I don't know someone can disprove me that it must be programming the whole world and that's",
    "start": "1409000",
    "end": "1415279"
  },
  {
    "text": "how long it takes so maybe minute 30 seconds isn't bad for I don't know how",
    "start": "1415279",
    "end": "1420520"
  },
  {
    "text": "many servers uh ready update kind of similar a minute and 40 seconds but",
    "start": "1420520",
    "end": "1426360"
  },
  {
    "text": "what's really unfortunate is like part of the updating the SLI goes to 64% so you're dropping um over a third of your",
    "start": "1426360",
    "end": "1433640"
  },
  {
    "text": "traffic on ready updates which to me is a bit surprising I tried also Al doing",
    "start": "1433640",
    "end": "1438799"
  },
  {
    "text": "it with this L7 Global load balancer but um the creation times were the same but",
    "start": "1438799",
    "end": "1443880"
  },
  {
    "text": "for some reason updates took over 2 minutes and timed out for me because I",
    "start": "1443880",
    "end": "1449240"
  },
  {
    "text": "didn't want to wait that long so uh it never succeeded under two minutes for",
    "start": "1449240",
    "end": "1455480"
  },
  {
    "text": "the updates there um and there's other more interesting quirks so let's say I don't",
    "start": "1455480",
    "end": "1460720"
  },
  {
    "text": "use a manage low balancer and then I do um an in-cluster Gateway well",
    "start": "1460720",
    "end": "1466039"
  },
  {
    "text": "technically an in-cluster Gateway will will eventually be backed potentially by a service load balancer type um and in",
    "start": "1466039",
    "end": "1473600"
  },
  {
    "text": "this example what I'm doing is I'm adding a listener here so hey I have Port 80 I want to add a new metrics Port",
    "start": "1473600",
    "end": "1479840"
  },
  {
    "text": "so I'm modifying uh my Gateway what that kind of will imply is the Gateway will",
    "start": "1479840",
    "end": "1485559"
  },
  {
    "text": "then need to do an update to the service type load balancer that will need to update your infrastructures loow",
    "start": "1485559",
    "end": "1490840"
  },
  {
    "text": "balancer AWS or G um but then what's interesting is",
    "start": "1490840",
    "end": "1497000"
  },
  {
    "text": "again I feel bad on gke whenever you add a new listener um if you're sending continuous",
    "start": "1497000",
    "end": "1503559"
  },
  {
    "text": "traffic to Port 80 it'll stop serving traffic on Port 80 um so the continuous traffic stops working so there's another",
    "start": "1503559",
    "end": "1510840"
  },
  {
    "text": "bitly link that um since has been gaslit by Google support when I submitted this so",
    "start": "1510840",
    "end": "1517120"
  },
  {
    "text": "they're like hey I made this a public issue for the on their issue tracker so and they need upvotes for them to fix it",
    "start": "1517120",
    "end": "1523559"
  },
  {
    "text": "so if people just go to that bit link Google fix my lb uh here's a big jum giant QR code if you want to also fix it",
    "start": "1523559",
    "end": "1531840"
  },
  {
    "text": "it's got like 10 votes now I just need like a few hundred and then they'll get to it and that that um person will get a",
    "start": "1531840",
    "end": "1538200"
  },
  {
    "text": "nice sweet promotion whoever does it this is how I feel right now you",
    "start": "1538200",
    "end": "1543720"
  },
  {
    "text": "know also Carolina Rose is a great uh performer so so how do you get around uh",
    "start": "1543720",
    "end": "1550039"
  },
  {
    "text": "these weird quirks well Google support will say like well you should create this type of load bouncer I'm like okay",
    "start": "1550039",
    "end": "1555120"
  },
  {
    "text": "well how do you do that if I'm creating things through the gway API there's an infrastructure stanza um you can add",
    "start": "1555120",
    "end": "1561880"
  },
  {
    "text": "labels and annotations those in theory should propagate down to the actual service that um the Gateway is",
    "start": "1561880",
    "end": "1569960"
  },
  {
    "text": "creating um and then kind of moving on to just kind of like random stuff now",
    "start": "1569960",
    "end": "1575600"
  },
  {
    "text": "um uh your HB route can point to different backends but those backends could also support different protocols",
    "start": "1575600",
    "end": "1583039"
  },
  {
    "text": "so grpc is technically hb2 So in theory you could route HP an HP route to a grpc",
    "start": "1583039",
    "end": "1590480"
  },
  {
    "text": "workload if it's uh HP prior knowledge so how do you do that well on the service you have this app protocol and",
    "start": "1590480",
    "end": "1598640"
  },
  {
    "text": "you just got to set it right now uh I added some conformance tests so it does test for websockets and H2 prior",
    "start": "1598640",
    "end": "1605399"
  },
  {
    "text": "knowledge and then some things that are coming is um kind of throwing this out",
    "start": "1605399",
    "end": "1611520"
  },
  {
    "text": "there merging listener so kind of one problem ketive has and let me kind of get into it is in this Gateway example",
    "start": "1611520",
    "end": "1618919"
  },
  {
    "text": "I have a port on Port 80 that's my regular traffic and then I have my secure traffic on uh I think I put on",
    "start": "1618919",
    "end": "1624720"
  },
  {
    "text": "Port 443 you can see I added a host name I have a certificate um but K native it does",
    "start": "1624720",
    "end": "1631000"
  },
  {
    "text": "automatic TLS provisioning um and what we do is we delegate aert manager to do all this",
    "start": "1631000",
    "end": "1636360"
  },
  {
    "text": "work and the most popular type of autor provisioning shirt challenges through CT",
    "start": "1636360",
    "end": "1641880"
  },
  {
    "text": "manager is hbo1 and what that means it doesn't support um wall cards so then we",
    "start": "1641880",
    "end": "1648720"
  },
  {
    "text": "end up with this scenario where um if we wanted to add a new",
    "start": "1648720",
    "end": "1654520"
  },
  {
    "text": "workload with its own unique CT you have to go to the Gateway update that Gateway",
    "start": "1654520",
    "end": "1659960"
  },
  {
    "text": "um and then essentially you see like kind of the repetition here which is fine so I have my food workload my bar",
    "start": "1659960",
    "end": "1666679"
  },
  {
    "text": "workload and they have distinct CTS um kind of the challenge with this it makes the Gateway a single point of contention",
    "start": "1666679",
    "end": "1673399"
  },
  {
    "text": "and then also you only have then a Max items of 64 this is a conscious decision",
    "start": "1673399",
    "end": "1679399"
  },
  {
    "text": "by the Gateway API to limit the I guess the impact on the Gateway whenever you",
    "start": "1679399",
    "end": "1685159"
  },
  {
    "text": "make changes and also I think SCD has limits on how big resources can be um so",
    "start": "1685159",
    "end": "1692559"
  },
  {
    "text": "one thing that's I'm kind of pushing for and ideally is a way to uh kind of separate listeners from",
    "start": "1692559",
    "end": "1699600"
  },
  {
    "text": "the gateways or at least kind of have this app operator Persona that like an",
    "start": "1699600",
    "end": "1705159"
  },
  {
    "text": "app operator has a certificate for workload that that's different from the provisioning of the Gateway and the",
    "start": "1705159",
    "end": "1712519"
  },
  {
    "text": "infrastructure um so if people are interested and have this is a problem",
    "start": "1712519",
    "end": "1718320"
  },
  {
    "text": "that they also have I wouldn't mind like having people review this and chime in and so forth like that",
    "start": "1718320",
    "end": "1724600"
  },
  {
    "text": "um this is on the Gateway repo so open issue and in discussion and there's",
    "start": "1724600",
    "end": "1729679"
  },
  {
    "text": "going to be a maintainer talk about this uh I think it was today but got moved to tomorrow so this is in",
    "start": "1729679",
    "end": "1736880"
  },
  {
    "text": "Flight um um and yeah I think that is it",
    "start": "1736880",
    "end": "1742919"
  },
  {
    "text": "so thanks everyone and then you got 5 minutes and",
    "start": "1742919",
    "end": "1751760"
  },
  {
    "text": "45 seconds for questions so anyone have a five minute and 45 second question to",
    "start": "1751760",
    "end": "1758039"
  },
  {
    "text": "ask uh you can use the mic I think there's mics over there I see two mics you have to get up but they're",
    "start": "1758039",
    "end": "1764960"
  },
  {
    "text": "they're on like stationary it looks like",
    "start": "1764960",
    "end": "1769480"
  },
  {
    "text": "uh yeah I wonder if you have run into um any issues utilizing the Gateway in that",
    "start": "1778080",
    "end": "1784559"
  },
  {
    "text": "right providing a higher level abstraction makes you lose control of the features provided by the actual",
    "start": "1784559",
    "end": "1790760"
  },
  {
    "text": "implementation right for instance we use Envoy a lot yeah and right Envoy definitely has a r reach feature set a",
    "start": "1790760",
    "end": "1797360"
  },
  {
    "text": "lot of which are not not reflected in the Gateway API so I wonder if you had",
    "start": "1797360",
    "end": "1802440"
  },
  {
    "text": "uh you know yeah so I think um I'm not a Gateway Authority but essentially what",
    "start": "1802440",
    "end": "1807760"
  },
  {
    "text": "will happen is um through each release there's like a scoping phase and um so",
    "start": "1807760",
    "end": "1813720"
  },
  {
    "text": "people propose ideas so if you let's say right now for 13 for Gateway go to where",
    "start": "1813720",
    "end": "1819279"
  },
  {
    "text": "the GitHub discussion is happening propose a feature um and if there's uh",
    "start": "1819279",
    "end": "1825279"
  },
  {
    "text": "likes and interest in it and also there's a waiting happening in terms of like complexity versus does this hit",
    "start": "1825279",
    "end": "1831600"
  },
  {
    "text": "average 80% of users or is this a niche thing um then that's how kind of things",
    "start": "1831600",
    "end": "1837919"
  },
  {
    "text": "get prioritized and in the short run uh sorry oh he Nick Nick a Gateway",
    "start": "1837919",
    "end": "1845360"
  },
  {
    "text": "maintainer here is asking what future you're kind of curious about uh mostly is uh for instance we program onvoy in",
    "start": "1845360",
    "end": "1852480"
  },
  {
    "text": "such way we provide our own uh Futures that right that's statically compiled link to on board yeah so I think it",
    "start": "1852480",
    "end": "1860480"
  },
  {
    "text": "comes down to like um ideally the way I think things surfacing",
    "start": "1860480",
    "end": "1866320"
  },
  {
    "text": "gateways you might go use the envoy Gateway resources like um separately",
    "start": "1866320",
    "end": "1871639"
  },
  {
    "text": "that might provide that functionality and then once there's a use case and then a need and someone's kind of proven",
    "start": "1871639",
    "end": "1878240"
  },
  {
    "text": "out how it could be done then it's sort of proposed to become uh an extended feature or experimental feature um then",
    "start": "1878240",
    "end": "1885760"
  },
  {
    "text": "that could get like one or two more implementations once those have baked for I think a few releases then it can",
    "start": "1885760",
    "end": "1891240"
  },
  {
    "text": "get promoted into uh maybe not like core but maybe like as an extended feature that supports and really all it offers",
    "start": "1891240",
    "end": "1897799"
  },
  {
    "text": "is sort of just like hey this API will work with multiple implementations so that's kind of like",
    "start": "1897799",
    "end": "1902880"
  },
  {
    "text": "how the process has been so far on the gayway API project all right yeah definitely thank you yeah you can talk",
    "start": "1902880",
    "end": "1909200"
  },
  {
    "text": "to Nick and then there'll be gayway API updates that might cover that right all right we'll do yeah thank you",
    "start": "1909200",
    "end": "1916360"
  },
  {
    "text": "cool hello um so this context I'm I'm kind of a",
    "start": "1916360",
    "end": "1921639"
  },
  {
    "text": "little bit new to learning everything sorry I can't I can't hear you the mics",
    "start": "1921639",
    "end": "1927919"
  },
  {
    "text": "on hello yeah there you go okay I got to talk real deep uh I'm a little bit new to the",
    "start": "1929080",
    "end": "1935440"
  },
  {
    "text": "Gateway API by the way so sorry if I ask a little novice questions um there were very interesting challenges you overcome",
    "start": "1935440",
    "end": "1941679"
  },
  {
    "text": "do you feel like the set of challenges that your team specifically had to overcome when moving to the Gateway AP",
    "start": "1941679",
    "end": "1948159"
  },
  {
    "text": "are are going to be pretty common for like anyone else any other company trying to do the same um I think it",
    "start": "1948159",
    "end": "1955360"
  },
  {
    "text": "depends how much investment you put into it I think if you're very like this is",
    "start": "1955360",
    "end": "1960480"
  },
  {
    "text": "why I like K native I think it's just like a simple abstraction that is like on the cluster that will provide sort of",
    "start": "1960480",
    "end": "1965639"
  },
  {
    "text": "like some extra security guarantees in addition to like scaling to zero it'll do um like buffering of requests while",
    "start": "1965639",
    "end": "1971880"
  },
  {
    "text": "like things are provisioning um for the gayway thing though I would I would say ideally you have more process involved",
    "start": "1971880",
    "end": "1979880"
  },
  {
    "text": "with updates for example if you use like cicd uh tooling like and using metrics",
    "start": "1979880",
    "end": "1986200"
  },
  {
    "text": "to know um uh when to roll roll over and cut over traffic um I would recommend",
    "start": "1986200",
    "end": "1993960"
  },
  {
    "text": "using tools like that if you want something to work across like like a fleet of clusters or or things like that",
    "start": "1993960",
    "end": "2000960"
  },
  {
    "text": "so so do you feel like uh Gateway implementation currently requires more tooling than",
    "start": "2000960",
    "end": "2006600"
  },
  {
    "text": "Ingress uh uh they're different future sets I would say like Gateway API I",
    "start": "2006600",
    "end": "2011679"
  },
  {
    "text": "would use today as is I Ingress doesn't do does very little and it's all like",
    "start": "2011679",
    "end": "2017679"
  },
  {
    "text": "extensions with um sorry it's all extensions with",
    "start": "2017679",
    "end": "2022760"
  },
  {
    "text": "annotations and that's a big challenge because you don't get feedback on your if your config is valid or not so at",
    "start": "2022760",
    "end": "2027960"
  },
  {
    "text": "least I would say yes use gway i1 and then it's over engress today um and then",
    "start": "2027960",
    "end": "2034880"
  },
  {
    "text": "if you need features then you should engage with the Gateway API Community to",
    "start": "2034880",
    "end": "2040039"
  },
  {
    "text": "like um create an issue and like figure out what the process is and like again",
    "start": "2040039",
    "end": "2045399"
  },
  {
    "text": "hey there's scoping happening for v1.3 uh and migrative and users got",
    "start": "2045399",
    "end": "2051000"
  },
  {
    "text": "involved there as well thank you cool all right thanks everyone",
    "start": "2051000",
    "end": "2059838"
  }
]