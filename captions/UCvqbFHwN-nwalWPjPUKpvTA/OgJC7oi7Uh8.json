[
  {
    "text": "hi everyone I'm Roger stream and ovale and the title of my talk is the box for",
    "start": "30",
    "end": "5970"
  },
  {
    "text": "automated updates so just a little introduction I graduated last May from",
    "start": "5970",
    "end": "11969"
  },
  {
    "text": "NC State and then I moved to California to work as a software engineer so it's",
    "start": "11969",
    "end": "18029"
  },
  {
    "text": "been a year and a half of me working in container orchestration and golang and I'm really liking it I got introduced to",
    "start": "18029",
    "end": "25680"
  },
  {
    "text": "kubernetes through one of my projects at work just a few months back so I still",
    "start": "25680",
    "end": "31050"
  },
  {
    "text": "consider myself kind of new to it and this is also my first ever talk at a tech conference and at the end I'll try",
    "start": "31050",
    "end": "39239"
  },
  {
    "text": "to leave a few minutes for any questions you may have and yeah you can follow",
    "start": "39239",
    "end": "44430"
  },
  {
    "text": "like my twitter handle is Roger ste underscore 28 and my github handle is M registry so I've all got this very cool",
    "start": "44430",
    "end": "53070"
  },
  {
    "text": "startup called Rancher labs Rancher is a complete container management platform",
    "start": "53070",
    "end": "58739"
  },
  {
    "text": "some of you might have heard of it before and via fully open source so you",
    "start": "58739",
    "end": "63930"
  },
  {
    "text": "can check out our code on github at Rancher so the goal of today's talk is",
    "start": "63930",
    "end": "70740"
  },
  {
    "text": "to set up a continuous deployment pipeline to your kubernetes cluster so",
    "start": "70740",
    "end": "76350"
  },
  {
    "text": "why do we need this now say you are running the v1 version of one of your apps on your cluster then you made some",
    "start": "76350",
    "end": "84150"
  },
  {
    "text": "changes to your code and now it's time to update your app so typically it would involve a few sips such as you would",
    "start": "84150",
    "end": "90869"
  },
  {
    "text": "have to well get your code pushed most once that is done you will have to build",
    "start": "90869",
    "end": "96000"
  },
  {
    "text": "the new version of your code once that build is successful you will go ahead and then update your app in the cluster",
    "start": "96000",
    "end": "102710"
  },
  {
    "text": "so now if this process of updating your app is a frequent one doing all these",
    "start": "102710",
    "end": "109530"
  },
  {
    "text": "steps manually will get really time-consuming and we don't need to do that if we can automate all these steps",
    "start": "109530",
    "end": "116610"
  },
  {
    "text": "with the help of a pipeline you know that looks something like this so this is how it will work you do any code",
    "start": "116610",
    "end": "123630"
  },
  {
    "text": "changes and push them to say github now that should by itself trigger the build",
    "start": "123630",
    "end": "129450"
  },
  {
    "text": "of a new image tag on some image registry then this image registry should be able",
    "start": "129450",
    "end": "135930"
  },
  {
    "text": "to notify us with all the information of the newly-built tag now usually such notifications about",
    "start": "135930",
    "end": "143580"
  },
  {
    "text": "some events that have happened are handled via web hooks and so we need to",
    "start": "143580",
    "end": "148650"
  },
  {
    "text": "use some image registry that has this way books feature then we need to",
    "start": "148650",
    "end": "155340"
  },
  {
    "text": "develop some piece of code that can actually receive this way book then retrieve the newly-built",
    "start": "155340",
    "end": "161370"
  },
  {
    "text": "tag from that web of information and then actually do an update to our app",
    "start": "161370",
    "end": "166860"
  },
  {
    "text": "running in the case cluster so this piece of code that receives the web book",
    "start": "166860",
    "end": "172110"
  },
  {
    "text": "and updates our app I'm going to refer to as the book receiver for the rest of",
    "start": "172110",
    "end": "177540"
  },
  {
    "text": "the session and we will see how we can use it so before that I just want to",
    "start": "177540",
    "end": "183450"
  },
  {
    "text": "very quickly go over to kubernetes resources that I'll be using for this demo the first one is a pod a pod is the",
    "start": "183450",
    "end": "193230"
  },
  {
    "text": "smallest deployable unit in kubernetes and it consists of one or more containers that are tightly coupled each",
    "start": "193230",
    "end": "200700"
  },
  {
    "text": "pod gets assigned a unique IP address that is shared by the containers within it but pods are ephemeral meaning if a",
    "start": "200700",
    "end": "208709"
  },
  {
    "text": "pod goes down or if the host it is scheduled on goes down then kids won't",
    "start": "208709",
    "end": "214079"
  },
  {
    "text": "know that it has to reschedule it again and that's why we don't run our applications directly on a pod in the",
    "start": "214079",
    "end": "221130"
  },
  {
    "text": "cluster we instead use a deployment like the case deployment resource to manage",
    "start": "221130",
    "end": "226799"
  },
  {
    "text": "the lifecycle of these pods that we want our app to run on so what the deployment",
    "start": "226799",
    "end": "232319"
  },
  {
    "text": "resource does is it takes as input the desired state of your app which includes",
    "start": "232319",
    "end": "237900"
  },
  {
    "text": "the image to be used for your app and the number of pods you want to run and then it tries to make the actual state",
    "start": "237900",
    "end": "246359"
  },
  {
    "text": "same as the desired but along with the image and number of ports you can also",
    "start": "246359",
    "end": "252359"
  },
  {
    "text": "specify the manner in which you want to update your application using this",
    "start": "252359",
    "end": "257639"
  },
  {
    "text": "deployment resource now in DevOps there are various strategies to update your",
    "start": "257639",
    "end": "263520"
  },
  {
    "text": "app and they are referred to as a deployment strategies so we need to",
    "start": "263520",
    "end": "269410"
  },
  {
    "text": "choose one of these strategies and that's why we are going to take a look at some of them the first one is",
    "start": "269410",
    "end": "275800"
  },
  {
    "text": "Bluegreen strategy now in this if you want to update your app to a newer",
    "start": "275800",
    "end": "281530"
  },
  {
    "text": "version you have to bring up an identical production environment for the new version of your code and once this",
    "start": "281530",
    "end": "288700"
  },
  {
    "text": "new environment works as expected you can just get rid of the older one so",
    "start": "288700",
    "end": "294430"
  },
  {
    "text": "this strategy guarantees zero downtime during the update and it also provides a way to rollback let's see how in this",
    "start": "294430",
    "end": "303520"
  },
  {
    "text": "strategy only one environment will be lives and handling all the requests at any time so at first the blue",
    "start": "303520",
    "end": "310389"
  },
  {
    "text": "environment is the live environment then we did some code changes so it's time to update to the newer version and that's",
    "start": "310389",
    "end": "317740"
  },
  {
    "text": "why we bring up the green environment to run the new version now once this green",
    "start": "317740",
    "end": "322810"
  },
  {
    "text": "environment is fully deployed and tested we can start using it by just",
    "start": "322810",
    "end": "328090"
  },
  {
    "text": "configuring the load balancer to start sending requests with that instead so now we are running the new version but",
    "start": "328090",
    "end": "335919"
  },
  {
    "text": "if you come across any problems with this and would like to go back to the previous the older version you can just",
    "start": "335919",
    "end": "342400"
  },
  {
    "text": "do that by making the blue environment as the live environment but once all the",
    "start": "342400",
    "end": "347710"
  },
  {
    "text": "problems are fixed and you see that the green environment like the new code is working just as expected you can just",
    "start": "347710",
    "end": "355000"
  },
  {
    "text": "get rid of the blue environment so now we finally have updated to the new version that was running on the green",
    "start": "355000",
    "end": "361000"
  },
  {
    "text": "environment and we did this with zero downtime but there is some cost",
    "start": "361000",
    "end": "366940"
  },
  {
    "text": "associated with doubling the resources for the environment and that can be one",
    "start": "366940",
    "end": "371950"
  },
  {
    "text": "disadvantage the next strategy we'll look at is the recreate strategy now in",
    "start": "371950",
    "end": "379060"
  },
  {
    "text": "this if you want to update your app to a newer version any old any instances that",
    "start": "379060",
    "end": "384700"
  },
  {
    "text": "are running the older version of your code need to be removed first and only then can you create instances running",
    "start": "384700",
    "end": "390940"
  },
  {
    "text": "the newer version now this is because some apps like for some apps the old and",
    "start": "390940",
    "end": "397120"
  },
  {
    "text": "new versions of the code cannot at the same time one example can be if",
    "start": "397120",
    "end": "402540"
  },
  {
    "text": "you are doing some data transformations for supporting the new version of your code and this is how this strategy works",
    "start": "402540",
    "end": "410630"
  },
  {
    "text": "so at first we have three instances both running version v1 and now it's time to",
    "start": "410630",
    "end": "417090"
  },
  {
    "text": "update to the version v2 new code so all three instances undergo the update at",
    "start": "417090",
    "end": "423240"
  },
  {
    "text": "the same time so as you can see there are no instances available to serve any",
    "start": "423240",
    "end": "428700"
  },
  {
    "text": "request which means during this update there will be downtime incurred and once",
    "start": "428700",
    "end": "434760"
  },
  {
    "text": "the update is done we go to version v2 and the instances are up and running",
    "start": "434760",
    "end": "439920"
  },
  {
    "text": "again so in this strategy we didn't have to double any resources so there was no",
    "start": "439920",
    "end": "446280"
  },
  {
    "text": "extra resource utilization but there was downtime in code and we don't usually",
    "start": "446280",
    "end": "451650"
  },
  {
    "text": "want that the third and the last strategy we look at is the rolling update strategy now even rolling update",
    "start": "451650",
    "end": "459870"
  },
  {
    "text": "just like the blue-green deploy Bluegreen strategy guarantees zero",
    "start": "459870",
    "end": "464970"
  },
  {
    "text": "downtime and it does so by only updating a certain percentage of instances at any",
    "start": "464970",
    "end": "471090"
  },
  {
    "text": "given time so always there are a few instances that are running the older version of your code and yeah for using",
    "start": "471090",
    "end": "480240"
  },
  {
    "text": "this strategy your app must be able to support the old and new versions of the code at the same time but unlike the",
    "start": "480240",
    "end": "487470"
  },
  {
    "text": "Bluegreen strategy rolling update does not require any additional instances for",
    "start": "487470",
    "end": "492780"
  },
  {
    "text": "zero downtime because this is how it works so at first we have two instances",
    "start": "492780",
    "end": "499710"
  },
  {
    "text": "both running version v1 and now it's time to update to V 2 so the instance 2",
    "start": "499710",
    "end": "506370"
  },
  {
    "text": "undergoes the update first and in the meanwhile instance 1 is still up and running the old version of your code and",
    "start": "506370",
    "end": "512880"
  },
  {
    "text": "serving all the requests once instance 2 is done updating to V 2 instance 1",
    "start": "512880",
    "end": "519750"
  },
  {
    "text": "undergoes the update and again we have instance to have been running this time",
    "start": "519750",
    "end": "525000"
  },
  {
    "text": "the new version of our code once the whole update is done we have both the",
    "start": "525000",
    "end": "530670"
  },
  {
    "text": "instances processing all requests and running version we do so as you see we have updated to v2 and we had no",
    "start": "530670",
    "end": "537520"
  },
  {
    "text": "downtime during this also no extra resource utilization so how do we use",
    "start": "537520",
    "end": "544570"
  },
  {
    "text": "these strategies in our like gates cluster so the deployment resource that",
    "start": "544570",
    "end": "551350"
  },
  {
    "text": "we looked at earlier lets suspec I one of these strategies right now it has two",
    "start": "551350",
    "end": "556660"
  },
  {
    "text": "options one for rolling update and one for recreate now for my app I want to",
    "start": "556660",
    "end": "562450"
  },
  {
    "text": "choose the rolling update option this is because not only does it guarantee zero downtime but I just need to specify the",
    "start": "562450",
    "end": "570190"
  },
  {
    "text": "rolling update option in my deployment resource Peck and kubernetes will take",
    "start": "570190",
    "end": "575320"
  },
  {
    "text": "care of the entire orchestration logic of that update I I won't have to do anything related to the implementation",
    "start": "575320",
    "end": "581560"
  },
  {
    "text": "of that so this is how I can specify the rolling update strategy this is a sample",
    "start": "581560",
    "end": "588790"
  },
  {
    "text": "manifest I hope everyone at the end can see on the left of the screen and over",
    "start": "588790",
    "end": "594460"
  },
  {
    "text": "here in the spec field spec is what accepts the desired state of your app under that you can see strategy and have",
    "start": "594460",
    "end": "602410"
  },
  {
    "text": "provided type as rolling update and you can slightly manage this by these two",
    "start": "602410",
    "end": "607840"
  },
  {
    "text": "fields max unavailable and Max souls so max unavailable as the names such as is",
    "start": "607840",
    "end": "615280"
  },
  {
    "text": "the maximum number of ports that are allowed to be unavailable during this update which we want to be say 1 and max",
    "start": "615280",
    "end": "623530"
  },
  {
    "text": "search is the maximum number of ports that are allowed to be scheduled above the desired number of ports so if the",
    "start": "623530",
    "end": "631360"
  },
  {
    "text": "replicas or the desired number of words is 3 and Max surge is 1 we can have four",
    "start": "631360",
    "end": "636430"
  },
  {
    "text": "quads scheduled during the update so how do we trigger this rolling update for",
    "start": "636430",
    "end": "642820"
  },
  {
    "text": "our app in the cluster now there are ways to do it you can do it manually you can run these commands the first one is",
    "start": "642820",
    "end": "650230"
  },
  {
    "text": "set image so in cube current set image you just need to provide the new image",
    "start": "650230",
    "end": "655720"
  },
  {
    "text": "that you want your app to update to and that's it it will update your app and it",
    "start": "655720",
    "end": "661510"
  },
  {
    "text": "will use the rolling update strategy because that's what we have provided and the second gamma cube cut' will edit it will open up your",
    "start": "661510",
    "end": "668910"
  },
  {
    "text": "deployment resource in an editor and it will show you the an internal representation of set and you can go",
    "start": "668910",
    "end": "675150"
  },
  {
    "text": "there and manually change your image and that's it it will update that but again",
    "start": "675150",
    "end": "681890"
  },
  {
    "text": "running these commands manual even you want to update your app we don't want that because you want to update sorry I",
    "start": "681890",
    "end": "688620"
  },
  {
    "text": "mean automate our continuous deployment pipeline so let's automate it the way",
    "start": "688620",
    "end": "694620"
  },
  {
    "text": "book received code that I spoke about earlier when I was showing the pipeline diagram we are going to use that to",
    "start": "694620",
    "end": "700500"
  },
  {
    "text": "automate this process as well so let's go back to our pipeline diagram and get",
    "start": "700500",
    "end": "706560"
  },
  {
    "text": "the different components in place the image registry that I'm using is docker",
    "start": "706560",
    "end": "711750"
  },
  {
    "text": "hub because docker hub has the automated builds feature meaning I can integrate",
    "start": "711750",
    "end": "717450"
  },
  {
    "text": "it with any of my code repositories and when some code is pushed it will trigger",
    "start": "717450",
    "end": "722940"
  },
  {
    "text": "the build of a new image tag docker hub also has the way books feature that is",
    "start": "722940",
    "end": "728190"
  },
  {
    "text": "needed for our way book receiver pod so what exactly will this webbook receiver",
    "start": "728190",
    "end": "733920"
  },
  {
    "text": "do and where will it run so the web app receiver will consume all the",
    "start": "733920",
    "end": "740339"
  },
  {
    "text": "information that is sent to us by the docker hub the book from that it will",
    "start": "740339",
    "end": "745530"
  },
  {
    "text": "find the image tag that was just pushed and then using this image tag it will",
    "start": "745530",
    "end": "750780"
  },
  {
    "text": "patch arcade's deployment resource via an api call so",
    "start": "750780",
    "end": "757330"
  },
  {
    "text": "[Music]",
    "start": "757330",
    "end": "760409"
  },
  {
    "text": "I hope you can see the screen yeah so the docker have a book called it's an",
    "start": "762930",
    "end": "770310"
  },
  {
    "text": "HTTP POST request with a JSON payload that looks like this so in our book receiver code we need to",
    "start": "770310",
    "end": "778620"
  },
  {
    "text": "expose an API endpoint that can accept this post request and the JSON payload with it now from this alpha book",
    "start": "778620",
    "end": "786240"
  },
  {
    "text": "receiver needs only two fields to know which image was pushed image was built any so if you see yeah under push data",
    "start": "786240",
    "end": "795000"
  },
  {
    "text": "you can see the field tag and under repository you can see the field repo",
    "start": "795000",
    "end": "800790"
  },
  {
    "text": "underscore name and these two fields combined give us the full image name",
    "start": "800790",
    "end": "805890"
  },
  {
    "text": "along with the tag that was just bid and then as we book receive a code we'll",
    "start": "805890",
    "end": "811709"
  },
  {
    "text": "make a patch API request including this image in the patch body to the",
    "start": "811709",
    "end": "817350"
  },
  {
    "text": "kubernetes deployment resource now for making this patch request or any API",
    "start": "817350",
    "end": "823080"
  },
  {
    "text": "requests to our cluster we can use any of the existing kate's api clients there's one client for goal",
    "start": "823080",
    "end": "830400"
  },
  {
    "text": "and one for python so you can just use any that you want and",
    "start": "830400",
    "end": "836209"
  },
  {
    "text": "so now where will we run this for a book receiver code it can be run anywhere",
    "start": "847260",
    "end": "853150"
  },
  {
    "text": "like you can have it running on say AWS lambda or you can sum out and within the",
    "start": "853150",
    "end": "858940"
  },
  {
    "text": "cluster or you can create a separate micro service which can do this for you but Rancher already has a framework for",
    "start": "858940",
    "end": "866710"
  },
  {
    "text": "such webbook receivers in place and it's a go micro service so it provides with",
    "start": "866710",
    "end": "873280"
  },
  {
    "text": "the book callback URLs which when triggered do some predefined actions and",
    "start": "873280",
    "end": "879300"
  },
  {
    "text": "the reason I'm going to use the ranch was existing framework is that it runs",
    "start": "879300",
    "end": "884860"
  },
  {
    "text": "out of the que it's cluster so that means I'll even if I have multiple gates clusters running I can create the",
    "start": "884860",
    "end": "891730"
  },
  {
    "text": "callback URLs for each of them with using the same micro service so this is",
    "start": "891730",
    "end": "898540"
  },
  {
    "text": "what the framework looks like in the code we are referring to the receivers",
    "start": "898540",
    "end": "903760"
  },
  {
    "text": "as drivers and every receiver or driver that we add needs to implement the",
    "start": "903760",
    "end": "909280"
  },
  {
    "text": "webbook driver interface now these functions are just to make sure that the",
    "start": "909280",
    "end": "915250"
  },
  {
    "text": "way book is fully functional for example validate payload will take as input in",
    "start": "915250",
    "end": "920530"
  },
  {
    "text": "our case what deployment I want to update and execute will actually execute",
    "start": "920530",
    "end": "925750"
  },
  {
    "text": "the API calls to update the deployment after it receives the daughter of a book and yeah so I have added the new driver",
    "start": "925750",
    "end": "933310"
  },
  {
    "text": "for the deployment update and if you want you can just check out the code I have given the link to that repository",
    "start": "933310",
    "end": "940470"
  },
  {
    "text": "so now let's go back to this diagram and see what we have fuse in the web book so",
    "start": "940470",
    "end": "946570"
  },
  {
    "text": "first of all the user will make a request to get a callback URL and all of",
    "start": "946570",
    "end": "951880"
  },
  {
    "text": "your books framework or the book receiver will give this generated callback URL the user will then add it",
    "start": "951880",
    "end": "958450"
  },
  {
    "text": "to docker hub as a web book now going back to the continuous deployment once",
    "start": "958450",
    "end": "963520"
  },
  {
    "text": "this initial setup is done user will make some code changes and push them to",
    "start": "963520",
    "end": "969520"
  },
  {
    "text": "get her now this because of stock adopts automated build will trigger the build",
    "start": "969520",
    "end": "974589"
  },
  {
    "text": "of a new image stack then docker hub will notify us seals in the web book the web app",
    "start": "974589",
    "end": "980500"
  },
  {
    "text": "framework in response will trigger the update to our deployment and finally our",
    "start": "980500",
    "end": "985840"
  },
  {
    "text": "app gets updated so now it's time for a demo yeah so this is my kate's cluster",
    "start": "985840",
    "end": "1000600"
  },
  {
    "text": "running let's go to the dashboard over",
    "start": "1000600",
    "end": "1008490"
  },
  {
    "text": "here you can see I've already created a deployment called cube our update I'll",
    "start": "1008490",
    "end": "1013920"
  },
  {
    "text": "just show you what that is",
    "start": "1013920",
    "end": "1017029"
  },
  {
    "text": "can everyone see the screen or I think I'll just increase though I can't yeah",
    "start": "1019589",
    "end": "1026569"
  },
  {
    "text": "I'll just use the - Oh flag to get a detailed description of it okay so if",
    "start": "1034100",
    "end": "1041449"
  },
  {
    "text": "you scroll up the image that I've provided for my app is M largest riku",
    "start": "1041450",
    "end": "1047390"
  },
  {
    "text": "and I'll show you what that app is doing and I've exposed for 9001 now under",
    "start": "1047390",
    "end": "1054290"
  },
  {
    "text": "strategy after wydad type is rolling update and max so just one max",
    "start": "1054290",
    "end": "1059570"
  },
  {
    "text": "unavailable is one meaning at the most only one part will be unavailable and at the most four thoughts can be scheduled",
    "start": "1059570",
    "end": "1066470"
  },
  {
    "text": "during the update so now let me just",
    "start": "1066470",
    "end": "1071840"
  },
  {
    "text": "show you the pods that are currently running for this deployment you can see",
    "start": "1071840",
    "end": "1076970"
  },
  {
    "text": "these are the three pods running for it and we are the status is running and they were all created some time back",
    "start": "1076970",
    "end": "1082610"
  },
  {
    "text": "like three hours back so now when I actually update my app new parts should",
    "start": "1082610",
    "end": "1088220"
  },
  {
    "text": "have been created in their place and when we do the cube cut' will get pots again we will see that they are quite",
    "start": "1088220",
    "end": "1093980"
  },
  {
    "text": "new so let me just show you what my app is doing along with the deployment I had",
    "start": "1093980",
    "end": "1099170"
  },
  {
    "text": "also created a service to expose it so",
    "start": "1099170",
    "end": "1104620"
  },
  {
    "text": "so my app is like a very simple golang at all it does this print some message",
    "start": "1105820",
    "end": "1111500"
  },
  {
    "text": "and right now it's printing this message this is an older release so my goal is",
    "start": "1111500",
    "end": "1116510"
  },
  {
    "text": "to like do that initial setup with my books and finally I'll just change this",
    "start": "1116510",
    "end": "1122900"
  },
  {
    "text": "message in my editor and do a git push and that should by itself update my app",
    "start": "1122900",
    "end": "1128120"
  },
  {
    "text": "in the K it's cluster so for that we need to set up the automated builds and",
    "start": "1128120",
    "end": "1133400"
  },
  {
    "text": "docker hub you can do that by just going to create an automated build now you can",
    "start": "1133400",
    "end": "1141860"
  },
  {
    "text": "either link your github or bitbucket account I have already linked my github account yeah so over here you can choose",
    "start": "1141860",
    "end": "1152150"
  },
  {
    "text": "any of your existing repositories and that's exactly what I have done to create this automated build em registry",
    "start": "1152150",
    "end": "1160130"
  },
  {
    "text": "/q this this is the github repository that runs the app that I just showed you",
    "start": "1160130",
    "end": "1166790"
  },
  {
    "text": "over so now over you're under build settings",
    "start": "1166790",
    "end": "1171830"
  },
  {
    "text": "you can define a certain set of rules which decide how your image tags will be",
    "start": "1171830",
    "end": "1177410"
  },
  {
    "text": "named I'll just get back to these in a second and over here this is the way",
    "start": "1177410",
    "end": "1183710"
  },
  {
    "text": "books tab this is where you will add your callback URL so let me create that",
    "start": "1183710",
    "end": "1192640"
  },
  {
    "text": "so I am going to provide the name and a namespace of my deployment that I want",
    "start": "1198340",
    "end": "1204380"
  },
  {
    "text": "to update and this environment ID it's nothing it's so within Rancher there are",
    "start": "1204380",
    "end": "1210260"
  },
  {
    "text": "different environments for different clusters so since I am using the existing framework I'll be providing",
    "start": "1210260",
    "end": "1215720"
  },
  {
    "text": "that environment ID to know which cluster I am working on so let me create",
    "start": "1215720",
    "end": "1221390"
  },
  {
    "text": "it and although okay so I'm in this",
    "start": "1221390",
    "end": "1227570"
  },
  {
    "text": "environment if I go to the WebEx page it will show me that this is the where book that I just created",
    "start": "1227570",
    "end": "1232790"
  },
  {
    "text": "okay it's coupon that's what I had named it and this is the trigger or like the",
    "start": "1232790",
    "end": "1238370"
  },
  {
    "text": "callback URL within the code we call it trigger URL because it triggers an action so I'm going to copy this and add",
    "start": "1238370",
    "end": "1245930"
  },
  {
    "text": "it to docker hub as my way book",
    "start": "1245930",
    "end": "1250180"
  },
  {
    "text": "so this v1 where books endpoint it corresponds to that execute function",
    "start": "1253150",
    "end": "1258260"
  },
  {
    "text": "that I've shown you in the code snippet that will actually trigger some action",
    "start": "1258260",
    "end": "1264040"
  },
  {
    "text": "now that is done and yeah now this is my",
    "start": "1264040",
    "end": "1270560"
  },
  {
    "text": "app I'm going to update the code okay so",
    "start": "1270560",
    "end": "1279260"
  },
  {
    "text": "let me just change this message to",
    "start": "1279260",
    "end": "1283150"
  },
  {
    "text": "okay so I'm going to push my changes",
    "start": "1293190",
    "end": "1298518"
  },
  {
    "text": "I'm going to create a tag for it",
    "start": "1305110",
    "end": "1308730"
  },
  {
    "text": "okay so the good push has taken place and if a pipeline is working correctly I",
    "start": "1319330",
    "end": "1325269"
  },
  {
    "text": "will need to do anything else for my app in the case cluster to get updated so",
    "start": "1325269",
    "end": "1330549"
  },
  {
    "text": "let's go to our docker hub automated build and under build details you can",
    "start": "1330549",
    "end": "1337419"
  },
  {
    "text": "see that it has already started building a new tag if I click on it it is using",
    "start": "1337419",
    "end": "1344529"
  },
  {
    "text": "this docker file now this automated build is only possible if you are providing a docker file in your",
    "start": "1344529",
    "end": "1350799"
  },
  {
    "text": "repository so in this I am just using the goal and Alpine image it's relatively lighter and I'm copying my",
    "start": "1350799",
    "end": "1357639"
  },
  {
    "text": "code and I am building the code using the docker file itself because I don't want any compatibility mismatch issues",
    "start": "1357639",
    "end": "1364090"
  },
  {
    "text": "like some OSX binary running on Linux or so on also I am going to run this run",
    "start": "1364090",
    "end": "1373330"
  },
  {
    "text": "this command it just keeps doing it just keeps running get ports every point five",
    "start": "1373330",
    "end": "1378700"
  },
  {
    "text": "seconds the reason I'm doing this is I'm hoping we will be able to see the rolling update take place like one board",
    "start": "1378700",
    "end": "1385600"
  },
  {
    "text": "getting terminated one board getting created in its place and so on usually these updates take place very",
    "start": "1385600",
    "end": "1390909"
  },
  {
    "text": "fast within a case so we oh I was thinking we might not be able to catch",
    "start": "1390909",
    "end": "1396039"
  },
  {
    "text": "those actions using this command but we can so as you can see this pod which was",
    "start": "1396039",
    "end": "1401799"
  },
  {
    "text": "running earlier it's getting terminated now and in its place we can see well two",
    "start": "1401799",
    "end": "1408220"
  },
  {
    "text": "pods are in container creating state that's because we saw that four pods are allowed at the max to be scheduled so",
    "start": "1408220",
    "end": "1414730"
  },
  {
    "text": "one of these pods is going to take the place of this lv wg7 pod and thing this",
    "start": "1414730",
    "end": "1422289"
  },
  {
    "text": "goes on for a while yeah right now we have four boards running and then two",
    "start": "1422289",
    "end": "1428529"
  },
  {
    "text": "pods are getting terminated so this process will go on I'm just going to run",
    "start": "1428529",
    "end": "1434350"
  },
  {
    "text": "my queue cuddle get pods command again okay and as you can see all three previous pods have been deleted and",
    "start": "1434350",
    "end": "1441549"
  },
  {
    "text": "their place has been taken by these three new pods all of them are running now and they have just been created a",
    "start": "1441549",
    "end": "1448119"
  },
  {
    "text": "few seconds back so they are new pods with the",
    "start": "1448119",
    "end": "1453129"
  },
  {
    "text": "so this is done we saw the rolling update actually take place one pod terminating one pod creating and to make",
    "start": "1453129",
    "end": "1460909"
  },
  {
    "text": "sure that our app is actually updated I am just going to go to the browser and I'm going to refresh this and I hope and",
    "start": "1460909",
    "end": "1468529"
  },
  {
    "text": "it prints the new message that I changed and it does so this is the new message",
    "start": "1468529",
    "end": "1474139"
  },
  {
    "text": "that I'd added hello cube con people and so our app has been updated without me having to do",
    "start": "1474139",
    "end": "1479299"
  },
  {
    "text": "anything I just tried to do a git push and that's all that set off the pipeline so this pipeline is done and the demo is",
    "start": "1479299",
    "end": "1492889"
  },
  {
    "text": "also done so thank you my like my twitter handle is registry and just go",
    "start": "1492889",
    "end": "1498499"
  },
  {
    "text": "28 and i'm on github as well and if you have any questions yeah right",
    "start": "1498499",
    "end": "1519519"
  },
  {
    "text": "so yeah Jenkins yeah Jenkins has continuous regular it will build your new image and all and I think you can",
    "start": "1523350",
    "end": "1529630"
  },
  {
    "text": "also like you were saying maybe add scripts to do that but like I was using",
    "start": "1529630",
    "end": "1535299"
  },
  {
    "text": "this book receiver because you will need to like specify what deployment you are dealing with you need to specify your",
    "start": "1535299",
    "end": "1541450"
  },
  {
    "text": "Kube config maybe every time the job is being built and so an easier way to do",
    "start": "1541450",
    "end": "1546760"
  },
  {
    "text": "this is if you are just running a micro service which already takes like accepts your cube convict you only have to do",
    "start": "1546760",
    "end": "1552639"
  },
  {
    "text": "anything extra so you can use Jenkins for building your image and that kept",
    "start": "1552639",
    "end": "1557649"
  },
  {
    "text": "Saria",
    "start": "1557649",
    "end": "1560549"
  },
  {
    "text": "yeah okay",
    "start": "1566250",
    "end": "1580529"
  },
  {
    "text": "so yeah I'm familiar with Jenkins like you can have automated bills and you can",
    "start": "1604680",
    "end": "1609850"
  },
  {
    "text": "have books as well like they will notify you when something has happened but for",
    "start": "1609850",
    "end": "1615100"
  },
  {
    "text": "the receiver part I was not sure if you can provide your cube config and like exhibit all those commands but yeah the",
    "start": "1615100",
    "end": "1621010"
  },
  {
    "text": "idea is to just have this automated like deployment pipeline in place you can replace these components with anything",
    "start": "1621010",
    "end": "1627400"
  },
  {
    "text": "so that's why at the beginning I just shown some image registry and something to trigger trigger that update so this",
    "start": "1627400",
    "end": "1634300"
  },
  {
    "text": "is one way to do it if yeah so I don't",
    "start": "1634300",
    "end": "1659350"
  },
  {
    "text": "have so I meant that in the web framework there were a few other drivers that like do similar actions but I'm not",
    "start": "1659350",
    "end": "1666280"
  },
  {
    "text": "like there might be other frameworks but the framework that I am using it's it's on github and maybe you can take a look",
    "start": "1666280",
    "end": "1672310"
  },
  {
    "text": "at that so that works slide oh no I like",
    "start": "1672310",
    "end": "1680230"
  },
  {
    "text": "it's available on that but yeah I can put it on github as well yeah I guess",
    "start": "1680230",
    "end": "1687100"
  },
  {
    "text": "that oh yes sorry no it can so as I said",
    "start": "1687100",
    "end": "1693850"
  },
  {
    "text": "it can work anyway the reason I put it in the ranchers framework is we already had that framework in place so it just",
    "start": "1693850",
    "end": "1700300"
  },
  {
    "text": "became easier so well though right yeah",
    "start": "1700300",
    "end": "1709240"
  },
  {
    "text": "so over here if I go to my cluster I've already set up access control and like",
    "start": "1709240",
    "end": "1716260"
  },
  {
    "text": "well this cluster is running in Rancho so it's using ranchers access control but I believe with I'm not so sure but I",
    "start": "1716260",
    "end": "1723250"
  },
  {
    "text": "believe with like our back you will be able to handle that",
    "start": "1723250",
    "end": "1728550"
  },
  {
    "text": "so I've just I've created API keys and while creating the book I'm passing this",
    "start": "1731369",
    "end": "1737709"
  },
  {
    "text": "API key that have been created for my account yeah okay so docker registry is",
    "start": "1737709",
    "end": "1755739"
  },
  {
    "text": "we are adding support for that but I believe it shouldn't be that difficult I like I haven't taken a look at it but",
    "start": "1755739",
    "end": "1761469"
  },
  {
    "text": "yeah we we were planning on working on that yeah so he was saying that they",
    "start": "1761469",
    "end": "1771009"
  },
  {
    "text": "have been using spinnaker for updating the deployment but it doesn't support insecure registries and if this can be",
    "start": "1771009",
    "end": "1777249"
  },
  {
    "text": "used for that yeah yeah yeah we do have",
    "start": "1777249",
    "end": "1787509"
  },
  {
    "text": "testing stages now the thing is it's it's like a sample pipeline that I showed but you can modify it with like",
    "start": "1787509",
    "end": "1793659"
  },
  {
    "text": "as I said replacing the components or adding new stages for adding testing and all so yeah Bluegreen deployment now",
    "start": "1793659",
    "end": "1808869"
  },
  {
    "text": "yeah this is just using the built-in kubernetes resource that like a deployment resource and in the",
    "start": "1808869",
    "end": "1814359"
  },
  {
    "text": "documentation I didn't see Bluegreen as an option so yeah we are",
    "start": "1814359",
    "end": "1823349"
  },
  {
    "text": "all right I I think I I think I forgot",
    "start": "1831610",
    "end": "1836750"
  },
  {
    "text": "to cover that so I was just going to go over this yeah so like I think yeah as",
    "start": "1836750",
    "end": "1842330"
  },
  {
    "text": "you can see over your doorknob itself tells us that this like just leaving it blank will target all tags yeah so the",
    "start": "1842330",
    "end": "1850400"
  },
  {
    "text": "tag name is just prepended with release - and as you can see over your the tag",
    "start": "1850400",
    "end": "1855919"
  },
  {
    "text": "that I had pushed was Q Khan yeah and so it tagged it as yeah yeah it just use",
    "start": "1855919",
    "end": "1863990"
  },
  {
    "text": "that it uses that I guess that's that's",
    "start": "1863990",
    "end": "1869600"
  },
  {
    "text": "it thank you",
    "start": "1869600",
    "end": "1872770"
  }
]