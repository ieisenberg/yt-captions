[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hello thank you for joining me today in",
    "start": "160",
    "end": "2560"
  },
  {
    "text": "this session",
    "start": "2560",
    "end": "3520"
  },
  {
    "text": "we're going to talk about multi-cluster",
    "start": "3520",
    "end": "5440"
  },
  {
    "text": "service mesh",
    "start": "5440",
    "end": "8160"
  },
  {
    "text": "my name is adam i'm a field engineer at",
    "start": "10320",
    "end": "13120"
  },
  {
    "text": "solo cio",
    "start": "13120",
    "end": "14240"
  },
  {
    "text": "a company specialized in service mesh",
    "start": "14240",
    "end": "16400"
  },
  {
    "text": "and api gateways",
    "start": "16400",
    "end": "17760"
  },
  {
    "text": "feel free to reach me out if you guys",
    "start": "17760",
    "end": "19119"
  },
  {
    "text": "have any question or just to have a",
    "start": "19119",
    "end": "21600"
  },
  {
    "text": "conversation",
    "start": "21600",
    "end": "24160"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "so the agenda today we're going to talk",
    "start": "25119",
    "end": "26720"
  },
  {
    "text": "about first",
    "start": "26720",
    "end": "28960"
  },
  {
    "text": "talk about the service mesh the origins",
    "start": "28960",
    "end": "31119"
  },
  {
    "text": "of it uh just as an introduction to it",
    "start": "31119",
    "end": "33680"
  },
  {
    "text": "then we're gonna talk about uh take an",
    "start": "33680",
    "end": "35840"
  },
  {
    "text": "example of a service mesh in this case",
    "start": "35840",
    "end": "37440"
  },
  {
    "text": "we're gonna talk about this joe",
    "start": "37440",
    "end": "39120"
  },
  {
    "text": "and then we're gonna talk about a",
    "start": "39120",
    "end": "40399"
  },
  {
    "text": "multi-cluster deployment and what's the",
    "start": "40399",
    "end": "42480"
  },
  {
    "text": "concerns we have with it",
    "start": "42480",
    "end": "44719"
  },
  {
    "text": "and then we're going to talk about how",
    "start": "44719",
    "end": "47360"
  },
  {
    "text": "to solve the complexity that comes",
    "start": "47360",
    "end": "49680"
  },
  {
    "text": "with multi-cluster service mesh and at",
    "start": "49680",
    "end": "52640"
  },
  {
    "text": "the end we are going to end with demo",
    "start": "52640",
    "end": "56559"
  },
  {
    "text": "so first just as a reminder",
    "start": "57520",
    "end": "60719"
  },
  {
    "text": "let's talk about the origins of a",
    "start": "60719",
    "end": "62960"
  },
  {
    "text": "service mesh",
    "start": "62960",
    "end": "65600"
  },
  {
    "start": "65000",
    "end": "65000"
  },
  {
    "text": "so to talk about the service mesh we use",
    "start": "65760",
    "end": "69200"
  },
  {
    "text": "first to talk about the microservice",
    "start": "69200",
    "end": "71200"
  },
  {
    "text": "architecture",
    "start": "71200",
    "end": "73040"
  },
  {
    "text": "the microservice editor came to solve",
    "start": "73040",
    "end": "76640"
  },
  {
    "text": "a lot of problems that we used to have",
    "start": "76640",
    "end": "78640"
  },
  {
    "text": "with the monitor",
    "start": "78640",
    "end": "80880"
  },
  {
    "text": "the monolith architecture so the",
    "start": "80880",
    "end": "84840"
  },
  {
    "text": "monolith",
    "start": "84840",
    "end": "86000"
  },
  {
    "text": "in the mod architecture we used to have",
    "start": "86000",
    "end": "88479"
  },
  {
    "text": "a big component",
    "start": "88479",
    "end": "89520"
  },
  {
    "text": "with all the logic in it so",
    "start": "89520",
    "end": "93200"
  },
  {
    "text": "to for example to change only a part of",
    "start": "93200",
    "end": "95680"
  },
  {
    "text": "the",
    "start": "95680",
    "end": "96320"
  },
  {
    "text": "logic we used to wait for a long release",
    "start": "96320",
    "end": "98880"
  },
  {
    "text": "cycles",
    "start": "98880",
    "end": "100159"
  },
  {
    "text": "it used to be hard to maintain hard to",
    "start": "100159",
    "end": "102479"
  },
  {
    "text": "scale because you can't scale on the",
    "start": "102479",
    "end": "105119"
  },
  {
    "text": "a part of the system it comes with a lot",
    "start": "105119",
    "end": "108399"
  },
  {
    "text": "of drawbacks",
    "start": "108399",
    "end": "109840"
  },
  {
    "text": "now to solve these issues we moved to a",
    "start": "109840",
    "end": "113040"
  },
  {
    "text": "microservice architecture",
    "start": "113040",
    "end": "115520"
  },
  {
    "text": "where we split all these components into",
    "start": "115520",
    "end": "118240"
  },
  {
    "text": "different",
    "start": "118240",
    "end": "118960"
  },
  {
    "text": "services microservices and they all",
    "start": "118960",
    "end": "122560"
  },
  {
    "text": "communicate through the network",
    "start": "122560",
    "end": "124240"
  },
  {
    "text": "and every single microservice would deal",
    "start": "124240",
    "end": "126240"
  },
  {
    "text": "with only",
    "start": "126240",
    "end": "127360"
  },
  {
    "text": "a part of the logic so we would have",
    "start": "127360",
    "end": "130879"
  },
  {
    "text": "only so yeah so you have only",
    "start": "130879",
    "end": "135040"
  },
  {
    "text": "one service dealing with for example",
    "start": "135040",
    "end": "137920"
  },
  {
    "text": "let's say a banking account",
    "start": "137920",
    "end": "139599"
  },
  {
    "text": "you have like a user microservice you",
    "start": "139599",
    "end": "143360"
  },
  {
    "text": "have an account microservice",
    "start": "143360",
    "end": "145040"
  },
  {
    "text": "and other other services like that so",
    "start": "145040",
    "end": "148080"
  },
  {
    "text": "in this scenario you can scale only a",
    "start": "148080",
    "end": "150640"
  },
  {
    "text": "part of the logic so you can scale",
    "start": "150640",
    "end": "152800"
  },
  {
    "text": "only one component is needed the most",
    "start": "152800",
    "end": "156080"
  },
  {
    "text": "for example",
    "start": "156080",
    "end": "157280"
  },
  {
    "text": "or you can also change only a part of",
    "start": "157280",
    "end": "160000"
  },
  {
    "text": "the logic",
    "start": "160000",
    "end": "161200"
  },
  {
    "text": "for example if you want to change",
    "start": "161200",
    "end": "164480"
  },
  {
    "text": "the microservice user to a new mac",
    "start": "164480",
    "end": "167599"
  },
  {
    "text": "service that deals",
    "start": "167599",
    "end": "169360"
  },
  {
    "text": "like a new version of it you will have",
    "start": "169360",
    "end": "171280"
  },
  {
    "text": "to only change",
    "start": "171280",
    "end": "172560"
  },
  {
    "text": "that microservice so you guys see that",
    "start": "172560",
    "end": "175760"
  },
  {
    "text": "the microservice architecture",
    "start": "175760",
    "end": "177920"
  },
  {
    "text": "brings a lot of flexibility to",
    "start": "177920",
    "end": "181280"
  },
  {
    "text": "this to what's actually compared to what",
    "start": "181280",
    "end": "184239"
  },
  {
    "text": "we used to have with the melody",
    "start": "184239",
    "end": "186239"
  },
  {
    "text": "now the microservice architecture has",
    "start": "186239",
    "end": "189440"
  },
  {
    "text": "also some drawbacks",
    "start": "189440",
    "end": "191440"
  },
  {
    "text": "the problem is now we have multiple",
    "start": "191440",
    "end": "194400"
  },
  {
    "text": "services",
    "start": "194400",
    "end": "195760"
  },
  {
    "text": "so to solve a problem where we need to",
    "start": "195760",
    "end": "198159"
  },
  {
    "text": "identify",
    "start": "198159",
    "end": "198959"
  },
  {
    "text": "if a request for example request failing",
    "start": "198959",
    "end": "201760"
  },
  {
    "text": "between",
    "start": "201760",
    "end": "202319"
  },
  {
    "text": "a shaming of some services how to locate",
    "start": "202319",
    "end": "205040"
  },
  {
    "text": "what",
    "start": "205040",
    "end": "205599"
  },
  {
    "text": "service failed the request and also",
    "start": "205599",
    "end": "208879"
  },
  {
    "text": "what if we have network issues what",
    "start": "208879",
    "end": "211840"
  },
  {
    "text": "about",
    "start": "211840",
    "end": "212400"
  },
  {
    "text": "telemetry what about unified logging and",
    "start": "212400",
    "end": "215519"
  },
  {
    "text": "all the things like that",
    "start": "215519",
    "end": "217280"
  },
  {
    "text": "so to solve this issue",
    "start": "217280",
    "end": "221200"
  },
  {
    "text": "a lot of companies start first to create",
    "start": "221200",
    "end": "223680"
  },
  {
    "text": "libraries to add with their services so",
    "start": "223680",
    "end": "225599"
  },
  {
    "text": "every",
    "start": "225599",
    "end": "226080"
  },
  {
    "text": "microservice used to have a library",
    "start": "226080",
    "end": "229360"
  },
  {
    "text": "that deals with this cross-cutting",
    "start": "229360",
    "end": "230879"
  },
  {
    "text": "concerns",
    "start": "230879",
    "end": "232400"
  },
  {
    "text": "where it deals with the retry network",
    "start": "232400",
    "end": "234480"
  },
  {
    "text": "retry tracing and",
    "start": "234480",
    "end": "236640"
  },
  {
    "text": "and things like that but it gets all so",
    "start": "236640",
    "end": "238480"
  },
  {
    "text": "complicated to maintain",
    "start": "238480",
    "end": "240319"
  },
  {
    "text": "imagine if you have a polyglot",
    "start": "240319",
    "end": "242239"
  },
  {
    "text": "environment",
    "start": "242239",
    "end": "243360"
  },
  {
    "text": "so imagine you have multiple",
    "start": "243360",
    "end": "247120"
  },
  {
    "text": "services in different languages you need",
    "start": "247120",
    "end": "250159"
  },
  {
    "text": "to maintain different libraries",
    "start": "250159",
    "end": "252560"
  },
  {
    "text": "and it's not easy usually to unify them",
    "start": "252560",
    "end": "255120"
  },
  {
    "text": "and and",
    "start": "255120",
    "end": "256000"
  },
  {
    "text": "things like that so to solve all this",
    "start": "256000",
    "end": "260000"
  },
  {
    "text": "that's the raise of basically a service",
    "start": "260000",
    "end": "262720"
  },
  {
    "start": "262000",
    "end": "262000"
  },
  {
    "text": "mesh",
    "start": "262720",
    "end": "263199"
  },
  {
    "text": "that's where the service mesh is used",
    "start": "263199",
    "end": "266000"
  },
  {
    "text": "for so you have",
    "start": "266000",
    "end": "267840"
  },
  {
    "text": "different services and your components",
    "start": "267840",
    "end": "270560"
  },
  {
    "text": "will have",
    "start": "270560",
    "end": "271120"
  },
  {
    "text": "a side car so a component attached to it",
    "start": "271120",
    "end": "273600"
  },
  {
    "text": "and that sidecar will deal with all",
    "start": "273600",
    "end": "275280"
  },
  {
    "text": "these",
    "start": "275280",
    "end": "276080"
  },
  {
    "text": "cross-cutting concerns for example uh",
    "start": "276080",
    "end": "278960"
  },
  {
    "text": "network",
    "start": "278960",
    "end": "280160"
  },
  {
    "text": "retries and uh enforcing some sort of",
    "start": "280160",
    "end": "284400"
  },
  {
    "text": "policy securing traffic between",
    "start": "284400",
    "end": "286160"
  },
  {
    "text": "components uh",
    "start": "286160",
    "end": "287919"
  },
  {
    "text": "telemetry and all these cross-cutting",
    "start": "287919",
    "end": "290880"
  },
  {
    "text": "concerns that we talked about",
    "start": "290880",
    "end": "292479"
  },
  {
    "text": "that we need to have to have",
    "start": "292479",
    "end": "295680"
  },
  {
    "text": "more resilient environments",
    "start": "295680",
    "end": "299280"
  },
  {
    "text": "so in this example here we see that we",
    "start": "299280",
    "end": "301440"
  },
  {
    "text": "have for example three services",
    "start": "301440",
    "end": "303280"
  },
  {
    "text": "service one service two and seven three",
    "start": "303280",
    "end": "304800"
  },
  {
    "text": "talking to each other we have a side car",
    "start": "304800",
    "end": "307199"
  },
  {
    "text": "with every single service",
    "start": "307199",
    "end": "308960"
  },
  {
    "text": "and that deals with the service service",
    "start": "308960",
    "end": "311520"
  },
  {
    "text": "communication",
    "start": "311520",
    "end": "312560"
  },
  {
    "text": "the microsoft the the the side cars will",
    "start": "312560",
    "end": "314880"
  },
  {
    "text": "deal with for example enforcing",
    "start": "314880",
    "end": "316960"
  },
  {
    "text": "the the telemetry the mtls between the",
    "start": "316960",
    "end": "320479"
  },
  {
    "text": "component",
    "start": "320479",
    "end": "321840"
  },
  {
    "text": "[Music]",
    "start": "321840",
    "end": "323280"
  },
  {
    "text": "having a unified logging and all these",
    "start": "323280",
    "end": "325680"
  },
  {
    "text": "things",
    "start": "325680",
    "end": "326320"
  },
  {
    "text": "and you have your service actually",
    "start": "326320",
    "end": "329120"
  },
  {
    "text": "dealing with",
    "start": "329120",
    "end": "329759"
  },
  {
    "text": "only the logic of the service so the",
    "start": "329759",
    "end": "332800"
  },
  {
    "text": "service won't have to deal with all",
    "start": "332800",
    "end": "335120"
  },
  {
    "text": "the cross-cutting concern and doesn't",
    "start": "335120",
    "end": "337039"
  },
  {
    "text": "have to worry about",
    "start": "337039",
    "end": "338400"
  },
  {
    "text": "network failures and all these things",
    "start": "338400",
    "end": "340960"
  },
  {
    "text": "all that is dealt with",
    "start": "340960",
    "end": "342479"
  },
  {
    "text": "we handle it with the sidecar the",
    "start": "342479",
    "end": "344720"
  },
  {
    "text": "developers will",
    "start": "344720",
    "end": "345840"
  },
  {
    "text": "only focus on developing the services",
    "start": "345840",
    "end": "349280"
  },
  {
    "text": "and only the core components and logic",
    "start": "349280",
    "end": "351440"
  },
  {
    "text": "of the of the microservice",
    "start": "351440",
    "end": "354720"
  },
  {
    "start": "354000",
    "end": "354000"
  },
  {
    "text": "now in a lot of service measures we use",
    "start": "354720",
    "end": "358319"
  },
  {
    "text": "envoy as a sidecar and this is why we're",
    "start": "358319",
    "end": "360720"
  },
  {
    "text": "taking the example fanfare here",
    "start": "360720",
    "end": "362639"
  },
  {
    "text": "envoy is a lightweight gateway it's http",
    "start": "362639",
    "end": "365120"
  },
  {
    "text": "2",
    "start": "365120",
    "end": "366000"
  },
  {
    "text": "uh you can deploy it next to your",
    "start": "366000",
    "end": "369440"
  },
  {
    "text": "service to do it to deal with for",
    "start": "369440",
    "end": "371759"
  },
  {
    "text": "example",
    "start": "371759",
    "end": "372479"
  },
  {
    "text": "we talked about service service mtls",
    "start": "372479",
    "end": "375919"
  },
  {
    "text": "enforcing policies like that enforcing",
    "start": "375919",
    "end": "378639"
  },
  {
    "text": "like",
    "start": "378639",
    "end": "379360"
  },
  {
    "text": "having a way to get telemetry tracing",
    "start": "379360",
    "end": "382400"
  },
  {
    "text": "between",
    "start": "382400",
    "end": "382880"
  },
  {
    "text": "components all the things that we needed",
    "start": "382880",
    "end": "385199"
  },
  {
    "text": "in the microservice architecture to make",
    "start": "385199",
    "end": "387039"
  },
  {
    "text": "it",
    "start": "387039",
    "end": "387440"
  },
  {
    "text": "more resilient now",
    "start": "387440",
    "end": "391039"
  },
  {
    "text": "for your data planes or from service",
    "start": "391039",
    "end": "393199"
  },
  {
    "text": "service you",
    "start": "393199",
    "end": "394080"
  },
  {
    "text": "need actually a control plane that",
    "start": "394080",
    "end": "395680"
  },
  {
    "text": "controls this configuration",
    "start": "395680",
    "end": "397199"
  },
  {
    "text": "push it to your side cars to enforce",
    "start": "397199",
    "end": "399199"
  },
  {
    "text": "this policy and manage",
    "start": "399199",
    "end": "400800"
  },
  {
    "text": "and basically configure the traffic from",
    "start": "400800",
    "end": "402639"
  },
  {
    "text": "service to service",
    "start": "402639",
    "end": "403840"
  },
  {
    "text": "and here in this example we're going to",
    "start": "403840",
    "end": "405360"
  },
  {
    "text": "take an example of a service mesh",
    "start": "405360",
    "end": "407520"
  },
  {
    "text": "istio where we have a control plane",
    "start": "407520",
    "end": "411599"
  },
  {
    "text": "that control your",
    "start": "411599",
    "end": "414800"
  },
  {
    "text": "data plane and push policies",
    "start": "414800",
    "end": "418240"
  },
  {
    "text": "on your side cars here we see them in",
    "start": "418240",
    "end": "420240"
  },
  {
    "text": "red we have",
    "start": "420240",
    "end": "422400"
  },
  {
    "text": "envoy right so we have like your service",
    "start": "422400",
    "end": "425280"
  },
  {
    "text": "account",
    "start": "425280",
    "end": "426720"
  },
  {
    "text": "the account microservice that wants to",
    "start": "426720",
    "end": "428800"
  },
  {
    "text": "talk to the user microservice",
    "start": "428800",
    "end": "431120"
  },
  {
    "text": "in this case it's going to go through",
    "start": "431120",
    "end": "432960"
  },
  {
    "text": "the sidecar",
    "start": "432960",
    "end": "434479"
  },
  {
    "text": "the sidecar will have some configuration",
    "start": "434479",
    "end": "436880"
  },
  {
    "text": "they've been pushed",
    "start": "436880",
    "end": "438000"
  },
  {
    "text": "through the control plane the control",
    "start": "438000",
    "end": "439840"
  },
  {
    "text": "control plane also configure",
    "start": "439840",
    "end": "441440"
  },
  {
    "text": "the service discovery and other things",
    "start": "441440",
    "end": "443759"
  },
  {
    "text": "uh so we'd have",
    "start": "443759",
    "end": "445199"
  },
  {
    "text": "a way to know where to call the other",
    "start": "445199",
    "end": "447599"
  },
  {
    "text": "service",
    "start": "447599",
    "end": "448400"
  },
  {
    "text": "and how to call it right in this case we",
    "start": "448400",
    "end": "450960"
  },
  {
    "text": "have mtls",
    "start": "450960",
    "end": "451919"
  },
  {
    "text": "we can have some policy enforcement that",
    "start": "451919",
    "end": "454319"
  },
  {
    "text": "we need",
    "start": "454319",
    "end": "454960"
  },
  {
    "text": "you know to give access to the service",
    "start": "454960",
    "end": "458639"
  },
  {
    "text": "user from the service account so",
    "start": "458639",
    "end": "461759"
  },
  {
    "text": "that's the role of a control plane and",
    "start": "461759",
    "end": "463680"
  },
  {
    "text": "this is an example",
    "start": "463680",
    "end": "465120"
  },
  {
    "text": "of like how istio dales",
    "start": "465120",
    "end": "468479"
  },
  {
    "text": "is actually implementing the basically",
    "start": "468479",
    "end": "470479"
  },
  {
    "text": "the service mesh right",
    "start": "470479",
    "end": "472160"
  },
  {
    "text": "now to configure",
    "start": "472160",
    "end": "475759"
  },
  {
    "start": "473000",
    "end": "473000"
  },
  {
    "text": "your control plane to configure istio in",
    "start": "475759",
    "end": "478560"
  },
  {
    "text": "this example",
    "start": "478560",
    "end": "479599"
  },
  {
    "text": "you will need multiple configuration",
    "start": "479599",
    "end": "481840"
  },
  {
    "text": "you'll need",
    "start": "481840",
    "end": "482720"
  },
  {
    "text": "multiple components uh multiple",
    "start": "482720",
    "end": "486000"
  },
  {
    "text": "configuration here we have a virtual",
    "start": "486000",
    "end": "488160"
  },
  {
    "text": "service for example that is used for",
    "start": "488160",
    "end": "489599"
  },
  {
    "text": "routing traffic",
    "start": "489599",
    "end": "490479"
  },
  {
    "text": "you'll have this destination rules you",
    "start": "490479",
    "end": "492560"
  },
  {
    "text": "can have a service entry",
    "start": "492560",
    "end": "493840"
  },
  {
    "text": "every that's an example for istio but",
    "start": "493840",
    "end": "495759"
  },
  {
    "text": "every single service match",
    "start": "495759",
    "end": "497039"
  },
  {
    "text": "will need some sort of configuration for",
    "start": "497039",
    "end": "499440"
  },
  {
    "text": "routing",
    "start": "499440",
    "end": "500160"
  },
  {
    "text": "between components",
    "start": "500160",
    "end": "503039"
  },
  {
    "start": "504000",
    "end": "504000"
  },
  {
    "text": "and we will talk about as controlling",
    "start": "504720",
    "end": "507840"
  },
  {
    "text": "access control in in istio because it's",
    "start": "507840",
    "end": "510560"
  },
  {
    "text": "needed later",
    "start": "510560",
    "end": "511599"
  },
  {
    "text": "i'm going to talk about it more in this",
    "start": "511599",
    "end": "514000"
  },
  {
    "text": "example here",
    "start": "514000",
    "end": "515279"
  },
  {
    "text": "in istio we use spf framework",
    "start": "515279",
    "end": "518839"
  },
  {
    "text": "where spiff spiffy is a framework that",
    "start": "518839",
    "end": "522320"
  },
  {
    "start": "520000",
    "end": "520000"
  },
  {
    "text": "allows you to",
    "start": "522320",
    "end": "523760"
  },
  {
    "text": "have like enforce some policies like",
    "start": "523760",
    "end": "526959"
  },
  {
    "text": "on trusting communication between",
    "start": "526959",
    "end": "529360"
  },
  {
    "text": "communication between workloads",
    "start": "529360",
    "end": "531040"
  },
  {
    "text": "uh in here so for example you'll have a",
    "start": "531040",
    "end": "533440"
  },
  {
    "text": "space",
    "start": "533440",
    "end": "534080"
  },
  {
    "text": "spf id uh in istio you'll have spfee",
    "start": "534080",
    "end": "538240"
  },
  {
    "text": "the trust domain then you have namespace",
    "start": "538240",
    "end": "540399"
  },
  {
    "text": "then the service account",
    "start": "540399",
    "end": "542240"
  },
  {
    "text": "and that's if you go back to go back to",
    "start": "542240",
    "end": "544080"
  },
  {
    "text": "the example of isio",
    "start": "544080",
    "end": "545839"
  },
  {
    "text": "let's say if we have um account",
    "start": "545839",
    "end": "548959"
  },
  {
    "text": "the service account that wants to talk",
    "start": "548959",
    "end": "550560"
  },
  {
    "text": "to the service",
    "start": "550560",
    "end": "552480"
  },
  {
    "text": "user you'll have first the mtls",
    "start": "552480",
    "end": "555680"
  },
  {
    "text": "uh that enforce you know security",
    "start": "555680",
    "end": "558000"
  },
  {
    "text": "between the two but after verifying mtls",
    "start": "558000",
    "end": "560480"
  },
  {
    "text": "you also verify that the account",
    "start": "560480",
    "end": "564320"
  },
  {
    "text": "microservice has access",
    "start": "564320",
    "end": "567519"
  },
  {
    "text": "to the user microservice and that's",
    "start": "567519",
    "end": "570160"
  },
  {
    "text": "through",
    "start": "570160",
    "end": "570880"
  },
  {
    "text": "saying the creating like a policy",
    "start": "570880",
    "end": "574800"
  },
  {
    "text": "a security policy in istio that",
    "start": "574800",
    "end": "576880"
  },
  {
    "text": "configures this authorization",
    "start": "576880",
    "end": "578800"
  },
  {
    "text": "allowing the traffic after establishing",
    "start": "578800",
    "end": "582640"
  },
  {
    "text": "mtls allowing the traffic from the",
    "start": "582640",
    "end": "584720"
  },
  {
    "text": "control",
    "start": "584720",
    "end": "585760"
  },
  {
    "text": "from the account the service microsoft's",
    "start": "585760",
    "end": "588240"
  },
  {
    "text": "account in this example",
    "start": "588240",
    "end": "589360"
  },
  {
    "text": "to talk to the service user",
    "start": "589360",
    "end": "593839"
  },
  {
    "text": "now after just talking giving an example",
    "start": "595440",
    "end": "598800"
  },
  {
    "text": "of an introduction to",
    "start": "598800",
    "end": "600160"
  },
  {
    "text": "how is to operate and what's a control",
    "start": "600160",
    "end": "602480"
  },
  {
    "text": "plane",
    "start": "602480",
    "end": "603360"
  },
  {
    "text": "now we're going to talk about",
    "start": "603360",
    "end": "606079"
  },
  {
    "text": "multi-cluster service mesh",
    "start": "606079",
    "end": "608560"
  },
  {
    "text": "how to install a service mesh or how to",
    "start": "608560",
    "end": "611680"
  },
  {
    "text": "manage multiple service meshes",
    "start": "611680",
    "end": "614959"
  },
  {
    "start": "614000",
    "end": "614000"
  },
  {
    "text": "you know we talked we give an example of",
    "start": "614959",
    "end": "616959"
  },
  {
    "text": "a service mesh on",
    "start": "616959",
    "end": "618000"
  },
  {
    "text": "only one cluster where you have like",
    "start": "618000",
    "end": "619920"
  },
  {
    "text": "your control plane eco",
    "start": "619920",
    "end": "621920"
  },
  {
    "text": "configuring the data plane and side cars",
    "start": "621920",
    "end": "624480"
  },
  {
    "text": "between the components",
    "start": "624480",
    "end": "625839"
  },
  {
    "text": "it's pretty simple to to look at it into",
    "start": "625839",
    "end": "628320"
  },
  {
    "text": "only one for example",
    "start": "628320",
    "end": "629519"
  },
  {
    "text": "one cluster when we talk about a",
    "start": "629519",
    "end": "632240"
  },
  {
    "text": "multi-cluster installation",
    "start": "632240",
    "end": "633839"
  },
  {
    "text": "that comes with a bigger difficulty here",
    "start": "633839",
    "end": "637680"
  },
  {
    "text": "to allow traffic between services and",
    "start": "637680",
    "end": "640640"
  },
  {
    "text": "service meshes",
    "start": "640640",
    "end": "642079"
  },
  {
    "text": "you'll need more configuration it comes",
    "start": "642079",
    "end": "644240"
  },
  {
    "text": "like to another level of complexity",
    "start": "644240",
    "end": "647600"
  },
  {
    "text": "now how we do that in istio",
    "start": "647600",
    "end": "651519"
  },
  {
    "start": "649000",
    "end": "649000"
  },
  {
    "text": "there's different ways of deploying of",
    "start": "651519",
    "end": "653360"
  },
  {
    "text": "handling this",
    "start": "653360",
    "end": "654720"
  },
  {
    "text": "multi-cluster deployment in this case",
    "start": "654720",
    "end": "657839"
  },
  {
    "text": "here we have a way where we can have a",
    "start": "657839",
    "end": "661360"
  },
  {
    "text": "control plane",
    "start": "661360",
    "end": "662079"
  },
  {
    "text": "only one cluster but we need to give",
    "start": "662079",
    "end": "664399"
  },
  {
    "text": "access to",
    "start": "664399",
    "end": "665279"
  },
  {
    "text": "the api server so the control plane",
    "start": "665279",
    "end": "667839"
  },
  {
    "text": "needs to know",
    "start": "667839",
    "end": "668959"
  },
  {
    "text": "need to have access to the api server on",
    "start": "668959",
    "end": "670480"
  },
  {
    "text": "different cluster to get the data about",
    "start": "670480",
    "end": "672320"
  },
  {
    "text": "the services running within",
    "start": "672320",
    "end": "673760"
  },
  {
    "text": "the cluster and other things so imagine",
    "start": "673760",
    "end": "676240"
  },
  {
    "text": "also we have also in a mode where",
    "start": "676240",
    "end": "677920"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "you have the con multiple control planes",
    "start": "677920",
    "end": "679839"
  },
  {
    "text": "every single cluster has",
    "start": "679839",
    "end": "681360"
  },
  {
    "text": "its own control plane but also we always",
    "start": "681360",
    "end": "683839"
  },
  {
    "text": "need",
    "start": "683839",
    "end": "684399"
  },
  {
    "text": "to have access to the api server on",
    "start": "684399",
    "end": "686240"
  },
  {
    "text": "different clusters imagine the",
    "start": "686240",
    "end": "687760"
  },
  {
    "text": "complexity when you have",
    "start": "687760",
    "end": "689200"
  },
  {
    "text": "100 cluster and you have 100 mesh right",
    "start": "689200",
    "end": "692399"
  },
  {
    "text": "how can you it's going to just it's",
    "start": "692399",
    "end": "694320"
  },
  {
    "text": "going to be n2 so",
    "start": "694320",
    "end": "695920"
  },
  {
    "text": "every single microservice need to know",
    "start": "695920",
    "end": "698480"
  },
  {
    "text": "about",
    "start": "698480",
    "end": "699040"
  },
  {
    "text": "every single sorry every single cluster",
    "start": "699040",
    "end": "701920"
  },
  {
    "text": "will need to know about",
    "start": "701920",
    "end": "703360"
  },
  {
    "text": "every single other cluster to be able to",
    "start": "703360",
    "end": "706399"
  },
  {
    "text": "establish",
    "start": "706399",
    "end": "707440"
  },
  {
    "text": "you know this multi-mesh configuration",
    "start": "707440",
    "end": "711760"
  },
  {
    "text": "now you guys see that when we have",
    "start": "711760",
    "end": "717360"
  },
  {
    "text": "multiple cluster instead of coming with",
    "start": "717360",
    "end": "719760"
  },
  {
    "text": "different",
    "start": "719760",
    "end": "720480"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "problems like if we take an example of",
    "start": "720480",
    "end": "723040"
  },
  {
    "text": "histo",
    "start": "723040",
    "end": "723920"
  },
  {
    "text": "and let's say we want to configure",
    "start": "723920",
    "end": "725839"
  },
  {
    "text": "something like that",
    "start": "725839",
    "end": "727200"
  },
  {
    "text": "right where we have two clusters cluster",
    "start": "727200",
    "end": "729440"
  },
  {
    "text": "one and cluster two",
    "start": "729440",
    "end": "730720"
  },
  {
    "text": "they both have different components in",
    "start": "730720",
    "end": "733600"
  },
  {
    "text": "this case i'm using the example of",
    "start": "733600",
    "end": "735680"
  },
  {
    "text": "the istio book info example",
    "start": "735680",
    "end": "738880"
  },
  {
    "text": "we have four microservices so you have a",
    "start": "738880",
    "end": "742160"
  },
  {
    "text": "product page",
    "start": "742160",
    "end": "743200"
  },
  {
    "text": "and the product page you need to talk to",
    "start": "743200",
    "end": "744720"
  },
  {
    "text": "a detail",
    "start": "744720",
    "end": "746480"
  },
  {
    "text": "microservice and review microservice and",
    "start": "746480",
    "end": "749200"
  },
  {
    "text": "the review market service will talk to a",
    "start": "749200",
    "end": "750800"
  },
  {
    "text": "rating microservice",
    "start": "750800",
    "end": "752800"
  },
  {
    "text": "now you guys see that",
    "start": "752800",
    "end": "756320"
  },
  {
    "text": "we have this on let's say we have this",
    "start": "756320",
    "end": "758560"
  },
  {
    "text": "on two different clusters",
    "start": "758560",
    "end": "760320"
  },
  {
    "text": "right and you want to have a way",
    "start": "760320",
    "end": "763760"
  },
  {
    "text": "to basically say um let's say you have a",
    "start": "763760",
    "end": "767120"
  },
  {
    "text": "new",
    "start": "767120",
    "end": "767920"
  },
  {
    "text": "version of the review microservice and",
    "start": "767920",
    "end": "770240"
  },
  {
    "text": "you just want to try something else",
    "start": "770240",
    "end": "771839"
  },
  {
    "text": "you want to try to route the traffic",
    "start": "771839",
    "end": "775839"
  },
  {
    "text": "some traffic from the cluster one to the",
    "start": "775839",
    "end": "779360"
  },
  {
    "text": "version three of the reviews of the",
    "start": "779360",
    "end": "782240"
  },
  {
    "text": "other",
    "start": "782240",
    "end": "783600"
  },
  {
    "text": "um on the in the other cluster right",
    "start": "783600",
    "end": "786720"
  },
  {
    "text": "that's a common use case specifically",
    "start": "786720",
    "end": "788880"
  },
  {
    "text": "like especially if you want to do like",
    "start": "788880",
    "end": "790079"
  },
  {
    "text": "some blue green deployments",
    "start": "790079",
    "end": "791680"
  },
  {
    "text": "um and things like that right now",
    "start": "791680",
    "end": "795040"
  },
  {
    "text": "if you want to do that using istio",
    "start": "795040",
    "end": "798480"
  },
  {
    "text": "as an example of a service mesh you will",
    "start": "798480",
    "end": "801680"
  },
  {
    "text": "have to create",
    "start": "801680",
    "end": "803519"
  },
  {
    "text": "a lot of configuration so here",
    "start": "803519",
    "end": "807519"
  },
  {
    "text": "only in the cluster one you'll have to",
    "start": "807519",
    "end": "808959"
  },
  {
    "text": "create a virtual service that points to",
    "start": "808959",
    "end": "811760"
  },
  {
    "text": "basically the review microservice",
    "start": "811760",
    "end": "816639"
  },
  {
    "text": "then you'd have to create a destination",
    "start": "816880",
    "end": "818480"
  },
  {
    "text": "rule a service entry",
    "start": "818480",
    "end": "820480"
  },
  {
    "text": "that's only on customer one then on",
    "start": "820480",
    "end": "822240"
  },
  {
    "text": "cluster two you also need to create",
    "start": "822240",
    "end": "824079"
  },
  {
    "text": "other configuration",
    "start": "824079",
    "end": "825279"
  },
  {
    "text": "like when the traffic is routed to",
    "start": "825279",
    "end": "826959"
  },
  {
    "text": "cluster two you need to transform it to",
    "start": "826959",
    "end": "829199"
  },
  {
    "text": "a local um local call to your",
    "start": "829199",
    "end": "832880"
  },
  {
    "text": "review microservice you also need to",
    "start": "832880",
    "end": "834880"
  },
  {
    "text": "define your destination rule",
    "start": "834880",
    "end": "836639"
  },
  {
    "text": "and that's basically gonna call the pod",
    "start": "836639",
    "end": "838959"
  },
  {
    "text": "version three",
    "start": "838959",
    "end": "840160"
  },
  {
    "text": "you're gonna call to your review v3 on",
    "start": "840160",
    "end": "843360"
  },
  {
    "text": "the",
    "start": "843360",
    "end": "843680"
  },
  {
    "text": "cluster too but you guys see that this",
    "start": "843680",
    "end": "845680"
  },
  {
    "text": "is a pretty standard scenario",
    "start": "845680",
    "end": "848240"
  },
  {
    "text": "but it gets pretty complex pretty fast",
    "start": "848240",
    "end": "851279"
  },
  {
    "text": "to create something like that imagine",
    "start": "851279",
    "end": "853440"
  },
  {
    "text": "you have",
    "start": "853440",
    "end": "854399"
  },
  {
    "text": "hundreds of clusters how to manage all",
    "start": "854399",
    "end": "856399"
  },
  {
    "text": "this configuration right",
    "start": "856399",
    "end": "857839"
  },
  {
    "text": "you also need to authorize the access we",
    "start": "857839",
    "end": "860320"
  },
  {
    "text": "were talking about spf as an",
    "start": "860320",
    "end": "861600"
  },
  {
    "text": "introduction",
    "start": "861600",
    "end": "862240"
  },
  {
    "text": "here where we use it basically in this",
    "start": "862240",
    "end": "864959"
  },
  {
    "text": "we're saying",
    "start": "864959",
    "end": "866399"
  },
  {
    "text": "that we're allowing you know you guys",
    "start": "866399",
    "end": "868720"
  },
  {
    "text": "can you notice here the spf id",
    "start": "868720",
    "end": "871120"
  },
  {
    "text": "uh that basically is used to allow",
    "start": "871120",
    "end": "874160"
  },
  {
    "text": "the traffic from the service the cluster",
    "start": "874160",
    "end": "877519"
  },
  {
    "text": "one to the cluster two",
    "start": "877519",
    "end": "879040"
  },
  {
    "text": "uh to the to the service review now",
    "start": "879040",
    "end": "883040"
  },
  {
    "text": "you guys see that this is a pretty",
    "start": "883199",
    "end": "885120"
  },
  {
    "text": "simple use case",
    "start": "885120",
    "end": "886959"
  },
  {
    "text": "and it comes with a lot of configuration",
    "start": "886959",
    "end": "890000"
  },
  {
    "text": "and we see that when we have multiple",
    "start": "890000",
    "end": "892800"
  },
  {
    "start": "892000",
    "end": "892000"
  },
  {
    "text": "clusters",
    "start": "892800",
    "end": "894000"
  },
  {
    "text": "it comes with a lot of concerns a lot of",
    "start": "894000",
    "end": "897680"
  },
  {
    "text": "a lot of issues that you can have like",
    "start": "897680",
    "end": "899600"
  },
  {
    "text": "while scaling",
    "start": "899600",
    "end": "900800"
  },
  {
    "text": "so one of the issues can be you need to",
    "start": "900800",
    "end": "904079"
  },
  {
    "text": "have a way",
    "start": "904079",
    "end": "905120"
  },
  {
    "text": "to see the configuration over",
    "start": "905120",
    "end": "908160"
  },
  {
    "text": "all your microservices all your service",
    "start": "908160",
    "end": "910560"
  },
  {
    "text": "measures you want to know",
    "start": "910560",
    "end": "912240"
  },
  {
    "text": "every single what's the status of every",
    "start": "912240",
    "end": "913920"
  },
  {
    "text": "single service mesh you need to have a",
    "start": "913920",
    "end": "916560"
  },
  {
    "text": "kind of a service discovery over every",
    "start": "916560",
    "end": "918560"
  },
  {
    "text": "single over all your service meshes",
    "start": "918560",
    "end": "921040"
  },
  {
    "text": "you need to have a way to unify the",
    "start": "921040",
    "end": "922720"
  },
  {
    "text": "identity you need to have a way to for",
    "start": "922720",
    "end": "924720"
  },
  {
    "text": "example say if you have mcls between",
    "start": "924720",
    "end": "928000"
  },
  {
    "text": "one cluster and you have mtls in the",
    "start": "928000",
    "end": "930320"
  },
  {
    "text": "other cluster",
    "start": "930320",
    "end": "931360"
  },
  {
    "text": "you need to have a way also to unify the",
    "start": "931360",
    "end": "933519"
  },
  {
    "text": "identity to have for example the same",
    "start": "933519",
    "end": "935839"
  },
  {
    "text": "rule ca so you can have",
    "start": "935839",
    "end": "939199"
  },
  {
    "text": "uh some sort of mtls between cluster one",
    "start": "939199",
    "end": "942800"
  },
  {
    "text": "to a service in cluster two right",
    "start": "942800",
    "end": "946240"
  },
  {
    "text": "if every every if every single cluster",
    "start": "946240",
    "end": "949759"
  },
  {
    "text": "has its own identity that won't work to",
    "start": "949759",
    "end": "952639"
  },
  {
    "text": "have",
    "start": "952639",
    "end": "952959"
  },
  {
    "text": "a multi-cluster communication right you",
    "start": "952959",
    "end": "955440"
  },
  {
    "text": "can also have",
    "start": "955440",
    "end": "957199"
  },
  {
    "text": "you need a way to have a configuration",
    "start": "957199",
    "end": "959360"
  },
  {
    "text": "pretty a pretty easy configuration",
    "start": "959360",
    "end": "961279"
  },
  {
    "text": "deployed",
    "start": "961279",
    "end": "962079"
  },
  {
    "text": "to only um like some management",
    "start": "962079",
    "end": "966000"
  },
  {
    "text": "cluster and that configuration needs to",
    "start": "966000",
    "end": "968800"
  },
  {
    "text": "be deployed to every single cluster",
    "start": "968800",
    "end": "970639"
  },
  {
    "text": "right you want to like we we took an",
    "start": "970639",
    "end": "972959"
  },
  {
    "text": "example of",
    "start": "972959",
    "end": "974320"
  },
  {
    "text": "and pretty standard way of doing like",
    "start": "974320",
    "end": "977519"
  },
  {
    "text": "uh some kind of canary routing here",
    "start": "977519",
    "end": "980560"
  },
  {
    "text": "between two clusters and you guys see",
    "start": "980560",
    "end": "982000"
  },
  {
    "text": "that the complexity was",
    "start": "982000",
    "end": "984800"
  },
  {
    "text": "yet pretty complex pretty fast so you",
    "start": "984800",
    "end": "986800"
  },
  {
    "text": "need to have a way to simplify this",
    "start": "986800",
    "end": "989440"
  },
  {
    "text": "you also need another way of enforcing",
    "start": "989440",
    "end": "992560"
  },
  {
    "text": "high-level policies",
    "start": "992560",
    "end": "994079"
  },
  {
    "text": "like if you have different personas",
    "start": "994079",
    "end": "997199"
  },
  {
    "text": "operating your",
    "start": "997199",
    "end": "998480"
  },
  {
    "text": "service meshes you want to just have a",
    "start": "998480",
    "end": "1000560"
  },
  {
    "text": "way to create a policy that says",
    "start": "1000560",
    "end": "1003199"
  },
  {
    "text": "hey this team or this user",
    "start": "1003199",
    "end": "1007120"
  },
  {
    "text": "is allowed basically to route traffic",
    "start": "1007120",
    "end": "1010000"
  },
  {
    "text": "from his",
    "start": "1010000",
    "end": "1011120"
  },
  {
    "text": "service mesh to only",
    "start": "1011120",
    "end": "1014320"
  },
  {
    "text": "this service mesh or only these services",
    "start": "1014320",
    "end": "1016880"
  },
  {
    "text": "regardless of the implementation of",
    "start": "1016880",
    "end": "1018639"
  },
  {
    "text": "how we do it behind the scene for",
    "start": "1018639",
    "end": "1020560"
  },
  {
    "text": "example in the control or",
    "start": "1020560",
    "end": "1021680"
  },
  {
    "text": "like in istio the apis are pretty low",
    "start": "1021680",
    "end": "1024640"
  },
  {
    "text": "level",
    "start": "1024640",
    "end": "1025360"
  },
  {
    "text": "so you know for doing the routing you",
    "start": "1025360",
    "end": "1027120"
  },
  {
    "text": "need all virtual services and you need",
    "start": "1027120",
    "end": "1029918"
  },
  {
    "text": "service entries and distinction rules so",
    "start": "1029919",
    "end": "1032640"
  },
  {
    "text": "regardless of all this",
    "start": "1032640",
    "end": "1034640"
  },
  {
    "text": "what is more important just saying that",
    "start": "1034640",
    "end": "1036959"
  },
  {
    "text": "this persona can",
    "start": "1036959",
    "end": "1038000"
  },
  {
    "text": "do like routing or can enforce this",
    "start": "1038000",
    "end": "1041120"
  },
  {
    "text": "policy",
    "start": "1041120",
    "end": "1041839"
  },
  {
    "text": "or they can't change the settings you",
    "start": "1041839",
    "end": "1044720"
  },
  {
    "text": "don't want to have to go",
    "start": "1044720",
    "end": "1046400"
  },
  {
    "text": "to a lower level configuration and also",
    "start": "1046400",
    "end": "1049360"
  },
  {
    "text": "you need to have a way",
    "start": "1049360",
    "end": "1050480"
  },
  {
    "text": "to like you know isolating your fault",
    "start": "1050480",
    "end": "1054400"
  },
  {
    "text": "so for solving these issues",
    "start": "1054400",
    "end": "1058880"
  },
  {
    "text": "you need a management plan",
    "start": "1058880",
    "end": "1062000"
  },
  {
    "text": "you need something like a component",
    "start": "1062000",
    "end": "1065200"
  },
  {
    "text": "that knows about all the service meshes",
    "start": "1065200",
    "end": "1068880"
  },
  {
    "text": "knows about all the clusters knows about",
    "start": "1068880",
    "end": "1072240"
  },
  {
    "text": "all the control planes and be able to",
    "start": "1072240",
    "end": "1074720"
  },
  {
    "text": "manage them all",
    "start": "1074720",
    "end": "1075919"
  },
  {
    "text": "right so in this use case",
    "start": "1075919",
    "end": "1079440"
  },
  {
    "start": "1078000",
    "end": "1078000"
  },
  {
    "text": "i'm taking as an example glue mesh which",
    "start": "1079440",
    "end": "1081520"
  },
  {
    "text": "is",
    "start": "1081520",
    "end": "1082559"
  },
  {
    "text": "more familiar with which is a management",
    "start": "1082559",
    "end": "1086400"
  },
  {
    "text": "plane",
    "start": "1086400",
    "end": "1087039"
  },
  {
    "text": "that operates on multiple clusters for",
    "start": "1087039",
    "end": "1089600"
  },
  {
    "text": "example here in this",
    "start": "1089600",
    "end": "1090640"
  },
  {
    "text": "use case you'll have your management",
    "start": "1090640",
    "end": "1092840"
  },
  {
    "text": "plane",
    "start": "1092840",
    "end": "1094080"
  },
  {
    "text": "where you register different clusters",
    "start": "1094080",
    "end": "1096720"
  },
  {
    "text": "all these clusters",
    "start": "1096720",
    "end": "1098240"
  },
  {
    "text": "you're going to have like a global view",
    "start": "1098240",
    "end": "1099840"
  },
  {
    "text": "of all over all the services you have",
    "start": "1099840",
    "end": "1102400"
  },
  {
    "text": "and you can define a policy like an",
    "start": "1102400",
    "end": "1105520"
  },
  {
    "text": "easy way to route traffic between",
    "start": "1105520",
    "end": "1107200"
  },
  {
    "text": "services and that's what i'm going to",
    "start": "1107200",
    "end": "1108880"
  },
  {
    "text": "show you",
    "start": "1108880",
    "end": "1109760"
  },
  {
    "text": "now in this example so",
    "start": "1109760",
    "end": "1112960"
  },
  {
    "text": "let's say i have",
    "start": "1112960",
    "end": "1117760"
  },
  {
    "text": "so i have my management plan where i",
    "start": "1117760",
    "end": "1120320"
  },
  {
    "text": "have two cluster registered so we have",
    "start": "1120320",
    "end": "1122640"
  },
  {
    "text": "two control planes right in this case",
    "start": "1122640",
    "end": "1125360"
  },
  {
    "text": "contest",
    "start": "1125360",
    "end": "1126000"
  },
  {
    "text": "cluster one and cluster two they both",
    "start": "1126000",
    "end": "1128320"
  },
  {
    "text": "have issue installed",
    "start": "1128320",
    "end": "1130080"
  },
  {
    "text": "and if i can look at the cluster one",
    "start": "1130080",
    "end": "1133760"
  },
  {
    "text": "you can see that the workloads",
    "start": "1133760",
    "end": "1137760"
  },
  {
    "text": "here we have review version 1 and review",
    "start": "1137760",
    "end": "1140880"
  },
  {
    "text": "version 2",
    "start": "1140880",
    "end": "1142080"
  },
  {
    "text": "right now if i go back",
    "start": "1142080",
    "end": "1145679"
  },
  {
    "text": "to the other cluster",
    "start": "1145679",
    "end": "1151200"
  },
  {
    "text": "we can see that in this cluster",
    "start": "1151200",
    "end": "1154640"
  },
  {
    "text": "we have version 1 version 2 and version",
    "start": "1154640",
    "end": "1157039"
  },
  {
    "text": "3.",
    "start": "1157039",
    "end": "1157919"
  },
  {
    "text": "so if you want to go back to the",
    "start": "1157919",
    "end": "1160080"
  },
  {
    "text": "architecture i was going to show you",
    "start": "1160080",
    "end": "1163520"
  },
  {
    "text": "so this one",
    "start": "1163520",
    "end": "1166240"
  },
  {
    "text": "you see that the other cluster has only",
    "start": "1166880",
    "end": "1170640"
  },
  {
    "text": "it has the three versions and the first",
    "start": "1170640",
    "end": "1172720"
  },
  {
    "text": "cluster has only two versions",
    "start": "1172720",
    "end": "1174320"
  },
  {
    "text": "and we want to do some sort of canary",
    "start": "1174320",
    "end": "1176960"
  },
  {
    "text": "deployment to basically route only",
    "start": "1176960",
    "end": "1179039"
  },
  {
    "text": "part of the traffic to this cluster",
    "start": "1179039",
    "end": "1181120"
  },
  {
    "text": "right",
    "start": "1181120",
    "end": "1182160"
  },
  {
    "text": "now the only difference between all",
    "start": "1182160",
    "end": "1184000"
  },
  {
    "text": "these services",
    "start": "1184000",
    "end": "1185280"
  },
  {
    "text": "in in the review the different versions",
    "start": "1185280",
    "end": "1188240"
  },
  {
    "text": "is that the version one has",
    "start": "1188240",
    "end": "1190160"
  },
  {
    "text": "no like when we look at this ui here",
    "start": "1190160",
    "end": "1194080"
  },
  {
    "text": "um so version one has",
    "start": "1194080",
    "end": "1197679"
  },
  {
    "text": "no color version two has like a black",
    "start": "1197679",
    "end": "1200960"
  },
  {
    "text": "stars",
    "start": "1200960",
    "end": "1201679"
  },
  {
    "text": "and version three has red stars so if",
    "start": "1201679",
    "end": "1204000"
  },
  {
    "text": "you see here if we",
    "start": "1204000",
    "end": "1205679"
  },
  {
    "text": "the first configuration we have",
    "start": "1205679",
    "end": "1207039"
  },
  {
    "text": "obviously we're talking only to the",
    "start": "1207039",
    "end": "1208880"
  },
  {
    "text": "cluster one that has version one and",
    "start": "1208880",
    "end": "1210400"
  },
  {
    "text": "version two",
    "start": "1210400",
    "end": "1211600"
  },
  {
    "text": "you guys see that we can't",
    "start": "1211600",
    "end": "1214880"
  },
  {
    "text": "uh basically we are just showing the two",
    "start": "1214880",
    "end": "1218320"
  },
  {
    "text": "colors which is",
    "start": "1218320",
    "end": "1219440"
  },
  {
    "text": "the no colors and the black color",
    "start": "1219440",
    "end": "1222880"
  },
  {
    "text": "now meaning that we are routing only to",
    "start": "1222880",
    "end": "1225520"
  },
  {
    "text": "version one and version two",
    "start": "1225520",
    "end": "1227440"
  },
  {
    "text": "now let's create an easy configuration",
    "start": "1227440",
    "end": "1230960"
  },
  {
    "text": "to route to the service",
    "start": "1230960",
    "end": "1235840"
  },
  {
    "text": "to the version 3 of the service review",
    "start": "1235840",
    "end": "1238159"
  },
  {
    "text": "and the cluster 2.",
    "start": "1238159",
    "end": "1239679"
  },
  {
    "text": "for that i just need to create one",
    "start": "1239679",
    "end": "1242320"
  },
  {
    "text": "configuration",
    "start": "1242320",
    "end": "1243840"
  },
  {
    "text": "on my management plane saying that what",
    "start": "1243840",
    "end": "1247039"
  },
  {
    "text": "i need is like when i try to call",
    "start": "1247039",
    "end": "1249679"
  },
  {
    "text": "the review service in my cluster one",
    "start": "1249679",
    "end": "1254640"
  },
  {
    "text": "behind like when calling the service the",
    "start": "1254640",
    "end": "1257760"
  },
  {
    "text": "routing",
    "start": "1257760",
    "end": "1258320"
  },
  {
    "text": "they need to operate is that i'm gonna",
    "start": "1258320",
    "end": "1260720"
  },
  {
    "text": "route",
    "start": "1260720",
    "end": "1261760"
  },
  {
    "text": "75 of the traffic to the version three",
    "start": "1261760",
    "end": "1265360"
  },
  {
    "text": "in the cluster two and i want to route",
    "start": "1265360",
    "end": "1268480"
  },
  {
    "text": "15 uh to the version one same cluster",
    "start": "1268480",
    "end": "1272559"
  },
  {
    "text": "and ten percent of the to the version",
    "start": "1272559",
    "end": "1274400"
  },
  {
    "text": "two on the same cluster you guys see",
    "start": "1274400",
    "end": "1276400"
  },
  {
    "text": "that",
    "start": "1276400",
    "end": "1276960"
  },
  {
    "text": "only one policy here to manage",
    "start": "1276960",
    "end": "1280640"
  },
  {
    "text": "routing over like to multiple clusters",
    "start": "1280640",
    "end": "1284880"
  },
  {
    "text": "because we have a management plan right",
    "start": "1284880",
    "end": "1286960"
  },
  {
    "text": "now",
    "start": "1286960",
    "end": "1288159"
  },
  {
    "text": "i go back to like my terminal",
    "start": "1288159",
    "end": "1293039"
  },
  {
    "text": "right then let's say",
    "start": "1294480",
    "end": "1298080"
  },
  {
    "text": "i apply this apply the configuration",
    "start": "1298080",
    "end": "1302080"
  },
  {
    "text": "create it go back to my service that was",
    "start": "1302080",
    "end": "1305039"
  },
  {
    "text": "routing only to basically the",
    "start": "1305039",
    "end": "1306720"
  },
  {
    "text": "the two versions on the same clusters if",
    "start": "1306720",
    "end": "1309039"
  },
  {
    "text": "i refresh couple times",
    "start": "1309039",
    "end": "1310480"
  },
  {
    "text": "you guys see that now we have the red",
    "start": "1310480",
    "end": "1312000"
  },
  {
    "text": "stars and this",
    "start": "1312000",
    "end": "1313600"
  },
  {
    "text": "red stars are coming from a different",
    "start": "1313600",
    "end": "1315280"
  },
  {
    "text": "clusters so the traffic is",
    "start": "1315280",
    "end": "1316960"
  },
  {
    "text": "going to cluster one and then route it",
    "start": "1316960",
    "end": "1319200"
  },
  {
    "text": "to the cluster two",
    "start": "1319200",
    "end": "1320720"
  },
  {
    "text": "to version three of the review service",
    "start": "1320720",
    "end": "1322880"
  },
  {
    "text": "which is the red stars",
    "start": "1322880",
    "end": "1324000"
  },
  {
    "text": "and you guys see that in comparison with",
    "start": "1324000",
    "end": "1327120"
  },
  {
    "text": "what we needed to create to operate this",
    "start": "1327120",
    "end": "1330320"
  },
  {
    "text": "without a man without a management plane",
    "start": "1330320",
    "end": "1333520"
  },
  {
    "text": "we if we had to do that directly using",
    "start": "1333520",
    "end": "1336559"
  },
  {
    "text": "ecu service mesh as an example you will",
    "start": "1336559",
    "end": "1339280"
  },
  {
    "text": "have to create",
    "start": "1339280",
    "end": "1340720"
  },
  {
    "text": "all this configuration on the cluster",
    "start": "1340720",
    "end": "1342320"
  },
  {
    "text": "one and all this clash",
    "start": "1342320",
    "end": "1344240"
  },
  {
    "text": "configuration of cluster two just to do",
    "start": "1344240",
    "end": "1346320"
  },
  {
    "text": "something simple as",
    "start": "1346320",
    "end": "1348640"
  },
  {
    "text": "one routing from one cluster to another",
    "start": "1348640",
    "end": "1351840"
  },
  {
    "text": "that we operated we did that only with",
    "start": "1351840",
    "end": "1354480"
  },
  {
    "text": "one configuration",
    "start": "1354480",
    "end": "1355600"
  },
  {
    "text": "in our measurement plane so you see that",
    "start": "1355600",
    "end": "1358640"
  },
  {
    "text": "a management plan solves a lot of issues",
    "start": "1358640",
    "end": "1362080"
  },
  {
    "start": "1360000",
    "end": "1360000"
  },
  {
    "text": "that comes with the complexity",
    "start": "1362080",
    "end": "1363919"
  },
  {
    "text": "of a multi-cluster service mesh right",
    "start": "1363919",
    "end": "1367200"
  },
  {
    "text": "here i'm taking again an example of",
    "start": "1367200",
    "end": "1369679"
  },
  {
    "text": "using blue mesh",
    "start": "1369679",
    "end": "1371280"
  },
  {
    "text": "but as a management plane and you see",
    "start": "1371280",
    "end": "1372960"
  },
  {
    "text": "that using",
    "start": "1372960",
    "end": "1374559"
  },
  {
    "text": "a management plan you can create one",
    "start": "1374559",
    "end": "1377200"
  },
  {
    "text": "configuration in one cluster",
    "start": "1377200",
    "end": "1379840"
  },
  {
    "text": "get replicated to all the clusters",
    "start": "1379840",
    "end": "1382080"
  },
  {
    "text": "registered",
    "start": "1382080",
    "end": "1383120"
  },
  {
    "text": "have a global view over all your",
    "start": "1383120",
    "end": "1384960"
  },
  {
    "text": "clusters be able to create",
    "start": "1384960",
    "end": "1387120"
  },
  {
    "text": "easy routing policies like",
    "start": "1387120",
    "end": "1390240"
  },
  {
    "text": "routing between clusters failover",
    "start": "1390240",
    "end": "1393120"
  },
  {
    "text": "between clusters",
    "start": "1393120",
    "end": "1394159"
  },
  {
    "text": "you can also enforce some high level",
    "start": "1394159",
    "end": "1396559"
  },
  {
    "text": "policies",
    "start": "1396559",
    "end": "1397440"
  },
  {
    "text": "let's say i can allow a user to create",
    "start": "1397440",
    "end": "1401520"
  },
  {
    "text": "traffic policies or restrict a user to",
    "start": "1401520",
    "end": "1404240"
  },
  {
    "text": "only",
    "start": "1404240",
    "end": "1405200"
  },
  {
    "text": "do like to manage only one a part of the",
    "start": "1405200",
    "end": "1409520"
  },
  {
    "text": "of only some subset of",
    "start": "1409520",
    "end": "1412559"
  },
  {
    "text": "some clusters you need this high level",
    "start": "1412559",
    "end": "1415919"
  },
  {
    "text": "view that comes with a management plane",
    "start": "1415919",
    "end": "1420240"
  },
  {
    "text": "so you guys see again that the",
    "start": "1420240",
    "end": "1422080"
  },
  {
    "text": "management plane is really important",
    "start": "1422080",
    "end": "1424480"
  },
  {
    "text": "when scaling and when having",
    "start": "1424480",
    "end": "1425760"
  },
  {
    "text": "multi-cluster",
    "start": "1425760",
    "end": "1427520"
  },
  {
    "text": "service mesh with that thank you for",
    "start": "1427520",
    "end": "1429760"
  },
  {
    "text": "listening to me",
    "start": "1429760",
    "end": "1430559"
  },
  {
    "text": "uh i'm i'll be happy to have the",
    "start": "1430559",
    "end": "1433200"
  },
  {
    "text": "conversation going",
    "start": "1433200",
    "end": "1434640"
  },
  {
    "text": "on uh the social media obviously you can",
    "start": "1434640",
    "end": "1436799"
  },
  {
    "text": "guys reach me out",
    "start": "1436799",
    "end": "1438000"
  },
  {
    "text": "i have you know i'll be happy to have",
    "start": "1438000",
    "end": "1439919"
  },
  {
    "text": "any any conversation",
    "start": "1439919",
    "end": "1442080"
  },
  {
    "text": "thank you",
    "start": "1442080",
    "end": "1445440"
  }
]