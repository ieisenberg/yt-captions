[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "good afternoon everyone my name is Alan zaloog and I'm a senior software engineer an essay P welcome to my talk",
    "start": "30",
    "end": "7680"
  },
  {
    "text": "so the title for the talk today is network machinery a united front for an airport troubleshooting with CR these",
    "start": "7680",
    "end": "15440"
  },
  {
    "start": "15000",
    "end": "47000"
  },
  {
    "text": "okay so let me go through the agenda for today so basically what we're gonna do",
    "start": "16070",
    "end": "22410"
  },
  {
    "text": "today is we're gonna discuss the state of network troubleshooting in kubernetes we're gonna also go through CRTs and why",
    "start": "22410",
    "end": "30150"
  },
  {
    "text": "they are useful or what can they be used for can they be used for networking and we're going to go through also a couple",
    "start": "30150",
    "end": "36780"
  },
  {
    "text": "of use cases that the first use case is network for each ability and traffic shaping and the second one is that",
    "start": "36780",
    "end": "42750"
  },
  {
    "text": "communities Sdn and we're also going to give two demos so what's happening so",
    "start": "42750",
    "end": "49670"
  },
  {
    "start": "47000",
    "end": "284000"
  },
  {
    "text": "the network landscape of committees is quite complex there's so many things happening so many puzzle pieces so there",
    "start": "49670",
    "end": "56100"
  },
  {
    "text": "is DNS core DNS was lots of plugins the kubernetes plug-in cache cube DNS was",
    "start": "56100",
    "end": "62670"
  },
  {
    "text": "DNS mass DNS metrics and cubed DNS and there's also node local caching I mean there's also no local caching agent",
    "start": "62670",
    "end": "70830"
  },
  {
    "text": "debugging there's ingress there's services there's Q proxy with IP v s IP tables there's",
    "start": "70830",
    "end": "77970"
  },
  {
    "text": "also a lot of components that install IP table that we need to debug there's Network policies the cni each of the cni",
    "start": "77970",
    "end": "85619"
  },
  {
    "text": "needs a different debugging mentality and there's also clustered for a cloud",
    "start": "85619",
    "end": "91619"
  },
  {
    "text": "provider networking that's that's just the present and then there comes the future and in the future you're you're",
    "start": "91619",
    "end": "97770"
  },
  {
    "text": "dealing with ipv6 actually not that far of a future if it's not pretty here already and there's winter windows",
    "start": "97770",
    "end": "104640"
  },
  {
    "text": "networking and there is a multi cluster networking and there's service meshes there is East here there's the network",
    "start": "104640",
    "end": "111450"
  },
  {
    "text": "service mesh and so much things are going on so if you get some some part wrong you basically have a functioning",
    "start": "111450",
    "end": "117840"
  },
  {
    "text": "cluster cool so I would like to go through what",
    "start": "117840",
    "end": "123840"
  },
  {
    "text": "two of the previous cube contacts they called my attention the first one was titled black holes and wormholes",
    "start": "123840",
    "end": "130379"
  },
  {
    "text": "basically understanding and troubleshooting the magic of k√ºbra neatest networking so they went",
    "start": "130379",
    "end": "136350"
  },
  {
    "text": "through a couple of what they call a black hole and basically a black hole it happens when there is a contract entries",
    "start": "136350",
    "end": "142740"
  },
  {
    "text": "which are stale so traffic is being sent to ghost pops and the reason is because the end point could have died for",
    "start": "142740",
    "end": "150060"
  },
  {
    "text": "whatever reason and the second scenario if you have a black hole where you forget to sit some kernel module setting",
    "start": "150060",
    "end": "156660"
  },
  {
    "text": "like IP forwarding or you forgot to set network filter module which is required",
    "start": "156660",
    "end": "163530"
  },
  {
    "text": "to forward packets to the Linux bridges and there's also this scenario that he talked about where it's called the",
    "start": "163530",
    "end": "169739"
  },
  {
    "text": "wormhole and the wormhole basically where you have conflicting IP tables because you have many components and",
    "start": "169739",
    "end": "174930"
  },
  {
    "text": "communities that does install IP tables and if two of components and installed",
    "start": "174930",
    "end": "180900"
  },
  {
    "text": "an IP table rule that matches the same packet then the packet might go to where it should not go and you might have back",
    "start": "180900",
    "end": "188040"
  },
  {
    "text": "packet loss and they also recommended that you should take a TCP dump on the source pod source node this nation pot",
    "start": "188040",
    "end": "194970"
  },
  {
    "text": "and destination node and this is all nice but there were no tool proposed in",
    "start": "194970",
    "end": "201750"
  },
  {
    "text": "this talk and the second talk was on troubleshooting on premise kubernetes",
    "start": "201750",
    "end": "207350"
  },
  {
    "text": "underlay overlay in pod and this talk the the author talked about symptoms of",
    "start": "207350",
    "end": "214920"
  },
  {
    "text": "network failure actually covering also pretty similar to the previous talk except that he talks about CNI specific",
    "start": "214920",
    "end": "221700"
  },
  {
    "text": "failures like if you fail to create a sandbox or if there's the witness check",
    "start": "221700",
    "end": "227850"
  },
  {
    "text": "that you were running fail and he also talked about how you can identify never",
    "start": "227850",
    "end": "233489"
  },
  {
    "text": "interfaces and also how IP table incur Benitez are coming from different",
    "start": "233489",
    "end": "238620"
  },
  {
    "text": "sources and he also proposed a troubleshooting tool called cocoa tab",
    "start": "238620",
    "end": "244620"
  },
  {
    "text": "which allows you to forward traffic via an underlay for an overlay tool called",
    "start": "244620",
    "end": "250829"
  },
  {
    "text": "cocoa tab and this allows you to tap traffic from a certain worker nodes to the master node via",
    "start": "250829",
    "end": "257910"
  },
  {
    "text": "attaching be excellent interfaces to two workers and this is not just the two",
    "start": "257910",
    "end": "263400"
  },
  {
    "text": "talks there is a lot of other blog posts and talks about troubleshooting core Anita's networking but what's the",
    "start": "263400",
    "end": "268620"
  },
  {
    "text": "problem the problem is that there is no common place there is no common api's so",
    "start": "268620",
    "end": "274020"
  },
  {
    "text": "there's the great tools that is being implemented for troubleshooting networking just died out so that",
    "start": "274020",
    "end": "279750"
  },
  {
    "text": "question is how to pull in this knowledge in kubernetes in a standard way enter CR DS so if you were in a previous",
    "start": "279750",
    "end": "287550"
  },
  {
    "start": "284000",
    "end": "343000"
  },
  {
    "text": "coop con in North America there was a great talk given by Tim Hawking and I hope he doesn't get angry that I showed",
    "start": "287550",
    "end": "294510"
  },
  {
    "text": "his his github logo here but he talks about how see are these basically went",
    "start": "294510",
    "end": "299940"
  },
  {
    "text": "through an evolutional cycle from being just third-party resources and kubernetes to going through CR these which are more",
    "start": "299940",
    "end": "307320"
  },
  {
    "text": "mature so you have you get the API server and storage for free you also he also talks about the birth of the",
    "start": "307320",
    "end": "313350"
  },
  {
    "text": "operator pattern which is basically a declarative way of specifying an",
    "start": "313350",
    "end": "319650"
  },
  {
    "text": "operator pattern which is basically a way to encapsulate domain knowledge whether it is databases storage or",
    "start": "319650",
    "end": "326610"
  },
  {
    "text": "basically anything it could be also networking right and then there's also",
    "start": "326610",
    "end": "331680"
  },
  {
    "text": "the the native feeling that you get as if you're defining the declarative the",
    "start": "331680",
    "end": "337290"
  },
  {
    "text": "ePub you also get with the CR D there's also add mesh and web hooks and mutation web hooks right so but CR these are not",
    "start": "337290",
    "end": "346410"
  },
  {
    "start": "343000",
    "end": "395000"
  },
  {
    "text": "just for add-ons they are also for networking so there's a lot of networking plugins already that make use of the concept of custom resource",
    "start": "346410",
    "end": "352410"
  },
  {
    "text": "definitions such as Malta's they define their own network attachment definition and CNI genie and there's also calico",
    "start": "352410",
    "end": "358950"
  },
  {
    "text": "that comes also was a pretty much large set of CR DS and there's also network",
    "start": "358950",
    "end": "366180"
  },
  {
    "text": "policy which is not itself in a CD but it's also falling into the context of a networking and there is also a CEO that",
    "start": "366180",
    "end": "373950"
  },
  {
    "text": "comes with a bunch of other CDs and there comes network service meshes and much more but there's none for for",
    "start": "373950",
    "end": "381750"
  },
  {
    "text": "troubleshooting networking so if you want to troubleshoot networking you have to do it manually so why not introduce another set that would make it easier",
    "start": "381750",
    "end": "388990"
  },
  {
    "text": "the life of people or developers easier to troubleshoot right and here comes network machinery so the",
    "start": "388990",
    "end": "396190"
  },
  {
    "start": "395000",
    "end": "450000"
  },
  {
    "text": "idea of network machinery is basically to utilize the cost the the the idea of customer resource definition to build",
    "start": "396190",
    "end": "403360"
  },
  {
    "text": "network troubleshooting operators it's very familiar and widely accepted by the community",
    "start": "403360",
    "end": "408550"
  },
  {
    "text": "there are many frameworks available out there think controller runtime things I think of razor framework there is also a",
    "start": "408550",
    "end": "415349"
  },
  {
    "text": "way it gives you a way to declarative to specify what you want to troubleshoot right instead of you saying hey I want",
    "start": "415349",
    "end": "421660"
  },
  {
    "text": "to do this and that you just imperatively you just say I want the state of my network to end up like this",
    "start": "421660",
    "end": "428800"
  },
  {
    "text": "it gives you also out-of-the-box feature set like validation mutation and conversion webhook which I think there's",
    "start": "428800",
    "end": "435610"
  },
  {
    "text": "a talk that have been given or be will be given today about it there's also",
    "start": "435610",
    "end": "440770"
  },
  {
    "text": "versioned api's and with auto generation with all the code generation and lots of",
    "start": "440770",
    "end": "445900"
  },
  {
    "text": "the goodies that comes with adopting the concept of a CRT so network machinery",
    "start": "445900",
    "end": "452199"
  },
  {
    "start": "450000",
    "end": "544000"
  },
  {
    "text": "provides a collection of network troubleshooting resources these are some of them as it's currently in POC so we",
    "start": "452199",
    "end": "461320"
  },
  {
    "text": "have network traffic shaping CRT which allows you to shape the traffic by",
    "start": "461320",
    "end": "467409"
  },
  {
    "text": "specifying a pod and an interface so you can inject loss for delay we're gonna",
    "start": "467409",
    "end": "472810"
  },
  {
    "text": "also talk about it later and there's also the network module validator so we talked about the in the previous cube",
    "start": "472810",
    "end": "478780"
  },
  {
    "text": "contacts where there were the problem where certain modules were disabled so",
    "start": "478780",
    "end": "483880"
  },
  {
    "text": "this this allows you to insure all the time or reconcile a certain modules to be up and running and even if other",
    "start": "483880",
    "end": "490180"
  },
  {
    "text": "teams like the security team or other team mess with these modules in the kernel they get reconciled there's also",
    "start": "490180",
    "end": "497199"
  },
  {
    "text": "the network performance test that allows you to specify clients and and targets and measure performance across your",
    "start": "497199",
    "end": "503830"
  },
  {
    "text": "cluster there's also network connectivity test like paying I birth and and there's also network monitor",
    "start": "503830",
    "end": "510699"
  },
  {
    "text": "control network notification to build and Sdn use case and even if you want to",
    "start": "510699",
    "end": "516578"
  },
  {
    "text": "also benchmark your container controller a network plug in a container network plugin",
    "start": "516579",
    "end": "522560"
  },
  {
    "text": "you can also do so and also if you want to generate traffic across the deep",
    "start": "522560",
    "end": "527779"
  },
  {
    "text": "parts to also measure the performance of the cni that you using underneath of all",
    "start": "527779",
    "end": "533720"
  },
  {
    "text": "these so we're going to talk about network traffic shaping we're going to talk about network connectivity testing",
    "start": "533720",
    "end": "539389"
  },
  {
    "text": "and we're gonna also talk about the network monitor control and notification so the first the first use case is",
    "start": "539389",
    "end": "546199"
  },
  {
    "start": "544000",
    "end": "642000"
  },
  {
    "text": "basically reach ability and traffic shaping so you have it would be nice right if you if you would specify that",
    "start": "546199",
    "end": "552230"
  },
  {
    "text": "you have these sources in your cluster and you would like to a layer three check a certain destination the",
    "start": "552230",
    "end": "558649"
  },
  {
    "text": "destination can be an external IP it can be a pod IP it can be a pod name and it",
    "start": "558649",
    "end": "564889"
  },
  {
    "text": "can be a service now you might be thinking the service does not have an actual IP it has a virtual IP that's",
    "start": "564889",
    "end": "571550"
  },
  {
    "text": "correct but the service also has endpoints so if I am to ping a service by specifying the name then I can just",
    "start": "571550",
    "end": "577040"
  },
  {
    "text": "say hey ping this service and then the operator will just fetch out the service",
    "start": "577040",
    "end": "582439"
  },
  {
    "text": "end points and then ping the endpoint and the second use case if you say that you have a you want to layer for",
    "start": "582439",
    "end": "588639"
  },
  {
    "text": "connectivity checked right so in case you have network policies it would be",
    "start": "588639",
    "end": "594769"
  },
  {
    "text": "nice to say to see if your network policy is actually functioning or after you install the network policy you would",
    "start": "594769",
    "end": "600319"
  },
  {
    "text": "like to generate a test just to sanity check that to make sure that everything is still running as you expected there's",
    "start": "600319",
    "end": "607610"
  },
  {
    "text": "also the case where you want to troubleshoot services so queue proxy",
    "start": "607610",
    "end": "612939"
  },
  {
    "text": "uses IP tables to map to do the netting between the virtual IP of the service to",
    "start": "612939",
    "end": "618829"
  },
  {
    "text": "the destination pubs right and it would be nice to to be able to layer for check",
    "start": "618829",
    "end": "624889"
  },
  {
    "text": "the service the server's IP and the VIP and then check also the a back-end endpoints so if the service IP and the",
    "start": "624889",
    "end": "631550"
  },
  {
    "text": "web and the port doesn't work this means that something is really wrong with the",
    "start": "631550",
    "end": "636920"
  },
  {
    "text": "mapping in the IP tables on the other hand if it works then it it's it's functioning it will be also nice to do",
    "start": "636920",
    "end": "644569"
  },
  {
    "start": "642000",
    "end": "667000"
  },
  {
    "text": "traffic shaping so sometimes you want to were test or chaos test your network so",
    "start": "644569",
    "end": "651170"
  },
  {
    "text": "let's say you have an application that runs HTTP that has some timeout I won't how this application will behave after",
    "start": "651170",
    "end": "657470"
  },
  {
    "text": "injects a certain loss or a certain delay right so with this traffic shaper I I can just choose to inject loss or",
    "start": "657470",
    "end": "664310"
  },
  {
    "text": "delay on specific interfaces so let me okay so let me show you a quick demo",
    "start": "664310",
    "end": "671450"
  },
  {
    "start": "667000",
    "end": "1134000"
  },
  {
    "text": "about that all right all right I think",
    "start": "671450",
    "end": "680360"
  },
  {
    "text": "this is the right cluster so we have here we have a three pots in a",
    "start": "680360",
    "end": "685730"
  },
  {
    "text": "deployment and we also have two separate pots and then we have a service called demo cube con which we will target and",
    "start": "685730",
    "end": "692530"
  },
  {
    "text": "let's look also the CR DS so we define network connectivity tests here these",
    "start": "692530",
    "end": "698750"
  },
  {
    "text": "network monitor and network notifications and network traffic shaper CR these will forget what we're gonna make use today off is the network",
    "start": "698750",
    "end": "705920"
  },
  {
    "text": "connectivity testing so what resources do we have we have the network connectivity test resource and I'm gonna",
    "start": "705920",
    "end": "711920"
  },
  {
    "text": "look at the layer three one first so here what I'm just saying is I'm saying",
    "start": "711920",
    "end": "718970"
  },
  {
    "text": "here's my source I want to be able from the API server to reach these destinations basically so I have the",
    "start": "718970",
    "end": "725590"
  },
  {
    "text": "specified the kind of the destination that I have and I say the kind of spot and I give the name in the namespace and",
    "start": "725590",
    "end": "731870"
  },
  {
    "text": "I also have a kind of IP so I give it the IP is in this case external it could",
    "start": "731870",
    "end": "738470"
  },
  {
    "text": "be an internal IP could also be an IP of a node and then I have a kind of service and then if I if I if I apply this",
    "start": "738470",
    "end": "747760"
  },
  {
    "text": "network connectivity tests they get applied and I can see there is also",
    "start": "758330",
    "end": "771140"
  },
  {
    "text": "let's let's go through the result quickly so as I showed already in the",
    "start": "771140",
    "end": "776210"
  },
  {
    "text": "source this is clear and then in the destination I said the result is first",
    "start": "776210",
    "end": "781220"
  },
  {
    "text": "of all there's the IP endpoint result which is just an IP endpoint it just told you that it was able to",
    "start": "781220",
    "end": "787160"
  },
  {
    "text": "successfully paying eight eight eight which is a Google DNS and it gave you also some statistics about the the ping",
    "start": "787160",
    "end": "793460"
  },
  {
    "text": "and then it goes and fetches the pods it shows you I didn't specify the IP of the",
    "start": "793460",
    "end": "799310"
  },
  {
    "text": "pot but the operator fetched the IP of the pod and pink all the pod that had a certain service selector so I was able",
    "start": "799310",
    "end": "808400"
  },
  {
    "text": "to to ping these these pots successfully and then the service endpoint was also",
    "start": "808400",
    "end": "815510"
  },
  {
    "text": "working so either the previous ones are were the ones that the separate parts and the the",
    "start": "815510",
    "end": "821570"
  },
  {
    "text": "service endpoints are the the actual posit that are backed backing up this service this this worked fine if I want",
    "start": "821570",
    "end": "830450"
  },
  {
    "text": "to let's say",
    "start": "830450",
    "end": "833500"
  },
  {
    "text": "if I want to change this resource and I say it's layer 4 instead of layer 3 it",
    "start": "842370",
    "end": "853410"
  },
  {
    "text": "won't work because there isn't a web hook installed to this allow me because layer 4 needs to have 4 it's defined but",
    "start": "853410",
    "end": "860430"
  },
  {
    "text": "I don't have pores defined so the web hook this allowed me from really modifying this object it would be the",
    "start": "860430",
    "end": "865470"
  },
  {
    "text": "same if I create the object the same would happen it would disallow me from creating the object say if I look at the",
    "start": "865470",
    "end": "872339"
  },
  {
    "text": "object again basically nothing changed",
    "start": "872339",
    "end": "878279"
  },
  {
    "text": "they are three now let's apply a layer for network connectivity test to test the all right you get successfully",
    "start": "878279",
    "end": "892259"
  },
  {
    "text": "applied and we can see now first first",
    "start": "892259",
    "end": "900240"
  },
  {
    "text": "let's before we see the result let's see the what got applied so I just specified",
    "start": "900240",
    "end": "905279"
  },
  {
    "text": "that I want from my source API server to reach a destination service and I just",
    "start": "905279",
    "end": "910589"
  },
  {
    "text": "specified the service name and the virtual for it right and in the result",
    "start": "910589",
    "end": "917899"
  },
  {
    "text": "what happened is I get the result for the direct service endpoint so I made",
    "start": "921290",
    "end": "927389"
  },
  {
    "text": "the connectivity check or the port check on the virtual IP of the service and that worked and then I made also the",
    "start": "927389",
    "end": "933209"
  },
  {
    "text": "connectivity check on the back-end endpoints and on the endpoints that backing I that are backing up this service and they also work and the nice",
    "start": "933209",
    "end": "941309"
  },
  {
    "text": "thing that I can also do is I can inject delay or I can inject loss so let's say",
    "start": "941309",
    "end": "948959"
  },
  {
    "text": "I want to inject some loss in certain parts all right I can just define that I",
    "start": "948959",
    "end": "957059"
  },
  {
    "text": "I specify a selector of the pods that I want to inject loss in and this selector",
    "start": "957059",
    "end": "962399"
  },
  {
    "text": "will go ahead and apply 100% loss to a certain interface that I define which is",
    "start": "962399",
    "end": "967829"
  },
  {
    "text": "in this case Ethernet zero but before we apply it less exact into one of the pods",
    "start": "967829",
    "end": "976490"
  },
  {
    "text": "all right",
    "start": "985080",
    "end": "987620"
  },
  {
    "text": "is nothing apply did there's no loss now I've try apply it",
    "start": "991640",
    "end": "996700"
  },
  {
    "text": "let's see network traffic shaper it's already there",
    "start": "1013779",
    "end": "1021310"
  },
  {
    "text": "No we should be checking the network connectivity test not the traffic shaper",
    "start": "1030150",
    "end": "1037040"
  },
  {
    "text": "still succeeded let's give it some time let's look at the smoke ping let's see",
    "start": "1037040",
    "end": "1047100"
  },
  {
    "text": "if it got applied to thee okay",
    "start": "1047100",
    "end": "1053460"
  },
  {
    "text": "it was indeed applied okay so now since",
    "start": "1053460",
    "end": "1062520"
  },
  {
    "text": "I applied lost a certain interface I was not able to to ping these services because the hundred percent lost I",
    "start": "1062520",
    "end": "1069120"
  },
  {
    "text": "applied now I can delete also the loss again the traffic shaper that I have",
    "start": "1069120",
    "end": "1075570"
  },
  {
    "text": "applied inject loss and I deleted this guy if I exact into the polygon the loss",
    "start": "1075570",
    "end": "1085260"
  },
  {
    "text": "disappeared because the operator cleaned it up for me now if I want to apply a",
    "start": "1085260",
    "end": "1090660"
  },
  {
    "text": "different kind of loss network traffic",
    "start": "1090660",
    "end": "1097950"
  },
  {
    "text": "shapers and this time should be dealing right ok now let's get the network",
    "start": "1097950",
    "end": "1107130"
  },
  {
    "text": "connectivity test that we smoke thing",
    "start": "1107130",
    "end": "1113640"
  },
  {
    "text": "and I can see a delay of 200 millisecond that was applied successfully to the end points or the selectors that I had the",
    "start": "1113640",
    "end": "1120300"
  },
  {
    "text": "the pod that matched the selector that I had cool alright let's go back",
    "start": "1120300",
    "end": "1128450"
  },
  {
    "start": "1134000",
    "end": "1157000"
  },
  {
    "text": "so that was fine for just the basic",
    "start": "1134630",
    "end": "1140040"
  },
  {
    "text": "testing right this is the first line of defense layer for layer 3 connectivity checks fine but what if I need more",
    "start": "1140040",
    "end": "1146610"
  },
  {
    "text": "details of the network I want to network monitor my network and I also want to be able to control my network so basically",
    "start": "1146610",
    "end": "1152700"
  },
  {
    "text": "I want to see what's happening and take actions to do right enters that's the",
    "start": "1152700",
    "end": "1159030"
  },
  {
    "start": "1157000",
    "end": "1435000"
  },
  {
    "text": "end so Sdn open flow and s flow right Sdn basically we use this term currently",
    "start": "1159030",
    "end": "1166170"
  },
  {
    "text": "for anything that is making use of networking and software at the same time but the original definition of Sdn came",
    "start": "1166170",
    "end": "1172640"
  },
  {
    "text": "by making the control plane and the data plane of a network device set two",
    "start": "1172640",
    "end": "1178320"
  },
  {
    "text": "separate things so the separation of the control plane and data plane basically allowing the logic to run somewhere else",
    "start": "1178320",
    "end": "1184170"
  },
  {
    "text": "not in the device itself and this gives the user to program their own logics right and then I could program routing",
    "start": "1184170",
    "end": "1190980"
  },
  {
    "text": "protocol on my own and then basically programmed into the network and then the",
    "start": "1190980",
    "end": "1196380"
  },
  {
    "text": "network would basically just use my protocol throughout the packets this was an early effort for programmable",
    "start": "1196380",
    "end": "1202800"
  },
  {
    "text": "networks and to make this happen basically a protocol called open flow was introduced and open flow is nothing",
    "start": "1202800",
    "end": "1208710"
  },
  {
    "text": "but a way to specify how the traffic will will will be redirected and gives",
    "start": "1208710",
    "end": "1215550"
  },
  {
    "text": "you a customization on top of what what the actual networking does how it works is basically you have a flow Keys you",
    "start": "1215550",
    "end": "1223770"
  },
  {
    "text": "can match traffic based on source destination source port source IP destination IP sorry source IP",
    "start": "1223770",
    "end": "1230130"
  },
  {
    "text": "destination IP source port this port destination port and you can also do",
    "start": "1230130",
    "end": "1235350"
  },
  {
    "text": "stuff like matching on Ethernet type QoS and then once the traffic is matched you",
    "start": "1235350",
    "end": "1241620"
  },
  {
    "text": "can take actions you can program the actions that can be taken you can take action to forward traffic to a controller where if the traffic is not",
    "start": "1241620",
    "end": "1249240"
  },
  {
    "text": "known and the controller can then program other rules to either drop the packet if you see that it's dangerous or",
    "start": "1249240",
    "end": "1254940"
  },
  {
    "text": "it's an attack or if you're just doing simple earlier to learning",
    "start": "1254940",
    "end": "1260120"
  },
  {
    "text": "there's also optional actions to modify the packet itself to set VLAN priorities also in queue or send packets",
    "start": "1260120",
    "end": "1268249"
  },
  {
    "text": "so what is our goal our goal is to again monitor and control the network right so",
    "start": "1268249",
    "end": "1273659"
  },
  {
    "text": "for controlling the network we already talks about open flow but we also want the monitoring side and the monitoring",
    "start": "1273659",
    "end": "1279659"
  },
  {
    "text": "side can be it can be achieved by many ways for example you could use s flow for sampling traffic you could use net",
    "start": "1279659",
    "end": "1286979"
  },
  {
    "text": "flow there's many other tools but for this presentation we're going to give an example based on s flow what we're",
    "start": "1286979",
    "end": "1293519"
  },
  {
    "text": "trying to build is basically a control system you have the desired and the actual result and the desired result is",
    "start": "1293519",
    "end": "1300359"
  },
  {
    "text": "is having to monitor or having a way to monitor and control your traffic and you",
    "start": "1300359",
    "end": "1307199"
  },
  {
    "text": "want to apply for example if I see something wrong in the network I want to apply some rules and these rules can be",
    "start": "1307199",
    "end": "1313199"
  },
  {
    "text": "basically scaling up a pod creating new services or completely blocking via open",
    "start": "1313199",
    "end": "1319859"
  },
  {
    "text": "flow and the traffic coming to this or from this pod or to this one how are we",
    "start": "1319859",
    "end": "1326219"
  },
  {
    "text": "going to do this in the context of containers there is a project called",
    "start": "1326219",
    "end": "1331229"
  },
  {
    "text": "open V switch and open V switch is basically Linux bridges plus plus it allows you to do stuff like expose your",
    "start": "1331229",
    "end": "1341190"
  },
  {
    "text": "interfaces for monitoring via s flow or span ports it also allows you to program",
    "start": "1341190",
    "end": "1347759"
  },
  {
    "text": "your your your Linux bridges or use open flow to set flow rules so it gives you a",
    "start": "1347759",
    "end": "1354119"
  },
  {
    "text": "lot of customizability how it works in details just for a quick overview the",
    "start": "1354119",
    "end": "1359969"
  },
  {
    "text": "first packet comes in I don't know how to forward it the kernel data pass doesn't know how to forward the packet",
    "start": "1359969",
    "end": "1366269"
  },
  {
    "text": "it sends it to the user space where it gets sent to the controller the",
    "start": "1366269",
    "end": "1372539"
  },
  {
    "text": "controller has certain logic of how this package should be forwarded then and flow rules programmed on the on the V",
    "start": "1372539",
    "end": "1379409"
  },
  {
    "text": "switch or the kernel data pass and then the traffic the second packet basically comes in and B gets forwarded right away",
    "start": "1379409",
    "end": "1388129"
  },
  {
    "text": "for network machinery these are the ingredients that we require to be able to build a prototype first of all you",
    "start": "1388459",
    "end": "1395849"
  },
  {
    "text": "need a CNI plugin that is based on open V switch right second you need to be able to configure",
    "start": "1395849",
    "end": "1404250"
  },
  {
    "text": "and install S + OS flow needs to be running and you need to configure OVS or often be switch with s flow parameters",
    "start": "1404250",
    "end": "1411480"
  },
  {
    "text": "and to do this we have a component called the S flow of es installer and basically a config map that has the",
    "start": "1411480",
    "end": "1418020"
  },
  {
    "text": "configuration parameters for s flow and the diamond set that runs s flow on all",
    "start": "1418020",
    "end": "1423120"
  },
  {
    "text": "of the nodes that have obvious and the third thing or and the final thing we need are our network operators basically",
    "start": "1423120",
    "end": "1430140"
  },
  {
    "text": "we need a network monitor operator and we need a network control operator so",
    "start": "1430140",
    "end": "1436350"
  },
  {
    "start": "1435000",
    "end": "1448000"
  },
  {
    "text": "let me show you a quick demo for that as well alright so let's have a look at the",
    "start": "1436350",
    "end": "1447060"
  },
  {
    "text": "environment quite fast sobieszczyk basically this is this is all the interfaces you can see that there is OBS",
    "start": "1447060",
    "end": "1452940"
  },
  {
    "text": "installed and these are the bridges that this is the bridge that is on the",
    "start": "1452940",
    "end": "1458400"
  },
  {
    "text": "obvious system so if I would do the SVC TL show it would show me that this OBS has",
    "start": "1458400",
    "end": "1466290"
  },
  {
    "text": "these bridges it has only one bridge now and all these interfaces are basically my pots so whenever a new pod comes in",
    "start": "1466290",
    "end": "1472620"
  },
  {
    "text": "you know I will kick in and will attach this this pod to this bridge and let's",
    "start": "1472620",
    "end": "1478830"
  },
  {
    "text": "see the configuration that we have for s flow currently there is one",
    "start": "1478830",
    "end": "1486690"
  },
  {
    "text": "configuration let's quickly delete that because we want to install it from",
    "start": "1486690",
    "end": "1493080"
  },
  {
    "text": "scratch right",
    "start": "1493080",
    "end": "1495710"
  },
  {
    "text": "all right so nothing we have a clean state environment let's apply first the",
    "start": "1499960",
    "end": "1511390"
  },
  {
    "text": "config the coming man before we apply maybe we can have a look at it yeah so",
    "start": "1511390",
    "end": "1517030"
  },
  {
    "start": "1516000",
    "end": "1568000"
  },
  {
    "text": "basically what I'm configuring here or specifying in the config map is basically the bridge name the collector",
    "start": "1517030",
    "end": "1522730"
  },
  {
    "text": "IP and in that case it's s flow so I'm basically saying s flow lives in on that IP and we have the collector port and it",
    "start": "1522730",
    "end": "1530440"
  },
  {
    "text": "listens on this port and we also have the agent IP this is basically the",
    "start": "1530440",
    "end": "1536140"
  },
  {
    "text": "bridge that will forward the traffic to the collector which is s flow then you have some sampling configuration and",
    "start": "1536140",
    "end": "1544200"
  },
  {
    "text": "sampling and pulling how frequent would we like to pull so the less basically is",
    "start": "1544200",
    "end": "1549580"
  },
  {
    "text": "the faster but more CPU intensive all right so let's apply this guy",
    "start": "1549580",
    "end": "1557610"
  },
  {
    "text": "all right now the next is the demon step that we need to set and for the demon",
    "start": "1562910",
    "end": "1569180"
  },
  {
    "start": "1568000",
    "end": "1610000"
  },
  {
    "text": "set basically what it does it it runs two containers one is an in it container that configures the s flow parameters",
    "start": "1569180",
    "end": "1578210"
  },
  {
    "text": "and the second one is the one that runs s flow itself so I would apply that look",
    "start": "1578210",
    "end": "1589850"
  },
  {
    "text": "at the positive now it said the the",
    "start": "1589850",
    "end": "1595850"
  },
  {
    "text": "first inner container to finish to finish this job and now the demon said",
    "start": "1595850",
    "end": "1600950"
  },
  {
    "text": "is running so if I get the even set it's running let's try to reach that here so",
    "start": "1600950",
    "end": "1610040"
  },
  {
    "start": "1610000",
    "end": "1658000"
  },
  {
    "text": "I can see now s flow have been installed but no values nothing nothing is happening at the moment so we would like",
    "start": "1610040",
    "end": "1617630"
  },
  {
    "text": "to run our prayed operators right before that we need to start our network",
    "start": "1617630",
    "end": "1629870"
  },
  {
    "text": "monitor it's basically the controller I'm not starting it in the cluster now",
    "start": "1629870",
    "end": "1635420"
  },
  {
    "text": "I'm starting outside and then apply see",
    "start": "1635420",
    "end": "1641210"
  },
  {
    "text": "if it's already finished let's apply our",
    "start": "1641210",
    "end": "1649600"
  },
  {
    "text": "network monitor before we apply probably a good idea to have a look at it as well",
    "start": "1649600",
    "end": "1655870"
  },
  {
    "text": "all right so what we're doing here is we're specifying we're saying our",
    "start": "1656440",
    "end": "1661550"
  },
  {
    "start": "1658000",
    "end": "1735000"
  },
  {
    "text": "collector lived the lives in this IP on this port and we're defining certain flows we're defining a TCP flow on an",
    "start": "1661550",
    "end": "1667790"
  },
  {
    "text": "ICP flow and the TCP flow basically defines the IP source IP destinations TCP source port and please be",
    "start": "1667790",
    "end": "1674690"
  },
  {
    "text": "destination port and this is basically the flow keys that I want to see traffic from in this case I will see these these",
    "start": "1674690",
    "end": "1680840"
  },
  {
    "text": "keys the traffic from these keys what if I want to see ICMP flow I want to see to see the just IP traffic then I just say",
    "start": "1680840",
    "end": "1687410"
  },
  {
    "text": "I wouldn't need to define another flow which maps to the IP source and IP destination and I also have the chance",
    "start": "1687410",
    "end": "1694280"
  },
  {
    "text": "to define or customize what I want to see what I want to event basically so I'm saying",
    "start": "1694280",
    "end": "1700040"
  },
  {
    "text": "that if there is more than 100 frames per second I would like to get notified",
    "start": "1700040",
    "end": "1705650"
  },
  {
    "text": "and this is basically the threshold section the last section is the events config where I say okay I only want",
    "start": "1705650",
    "end": "1711140"
  },
  {
    "text": "maximum of five max five maximum of five events and a timeout of 60 seconds if",
    "start": "1711140",
    "end": "1718040"
  },
  {
    "text": "the event is generated so it will be deleted after 60 seconds I apply this",
    "start": "1718040",
    "end": "1723710"
  },
  {
    "text": "all right I got a Floyd and it installed",
    "start": "1723710",
    "end": "1737000"
  },
  {
    "start": "1735000",
    "end": "1885000"
  },
  {
    "text": "my flows and I can already see traffic yep so this is basically the traffic of",
    "start": "1737000",
    "end": "1743690"
  },
  {
    "text": "my communities foster system one node cluster I can see that there is a DNS talking for example to to the API server",
    "start": "1743690",
    "end": "1749780"
  },
  {
    "text": "I can judge it by the ports 4 4 3 and there's also other things that are going on and I also can see that the",
    "start": "1749780",
    "end": "1757070"
  },
  {
    "text": "thresholds that I defined are there so I want if I know that there's 100 frames",
    "start": "1757070",
    "end": "1762800"
  },
  {
    "text": "per se in my cluster hundred frames per second I would like to get notified by an event so the next thing that I want",
    "start": "1762800",
    "end": "1770750"
  },
  {
    "text": "to see is I want to get Network notifications for things that are happening these are old ones all right",
    "start": "1770750",
    "end": "1780460"
  },
  {
    "text": "there is nothing at the moment so let's go and that's exact too",
    "start": "1780460",
    "end": "1795730"
  },
  {
    "text": "that thing yeah this is what I want to do I want to be able to basically float",
    "start": "1800150",
    "end": "1806230"
  },
  {
    "text": "the destination IP",
    "start": "1806230",
    "end": "1810130"
  },
  {
    "text": "alright let's run this guy so far there",
    "start": "1824400",
    "end": "1831420"
  },
  {
    "text": "are a couple of events because the events are set to 30 but we can float",
    "start": "1831420",
    "end": "1836730"
  },
  {
    "text": "here slow okay",
    "start": "1836730",
    "end": "1846480"
  },
  {
    "text": "things are happening now and I can see",
    "start": "1846480",
    "end": "1852300"
  },
  {
    "text": "that the traffic is being generated like crazy from my source to destination and there's already events for that because",
    "start": "1852300",
    "end": "1859380"
  },
  {
    "text": "I set the threshold to 30 sister she is a very low value but I can also set",
    "start": "1859380",
    "end": "1864420"
  },
  {
    "text": "slower thresholds for that and I can also see that there is there is already",
    "start": "1864420",
    "end": "1873900"
  },
  {
    "text": "a lot of network notification being generated let's have a look at what the network notifications are okay so",
    "start": "1873900",
    "end": "1886350"
  },
  {
    "start": "1885000",
    "end": "1938000"
  },
  {
    "text": "basically the network notification is telling me there is an event that has happened from a certain port right and",
    "start": "1886350",
    "end": "1892670"
  },
  {
    "text": "there was a threshold that was defined of 30 and basically it tells me where",
    "start": "1892670",
    "end": "1899070"
  },
  {
    "text": "exactly the traffic is coming from so what I can do now is I can just block traffic okay I can do anything I want and in",
    "start": "1899070",
    "end": "1904559"
  },
  {
    "text": "fact I have a controller this is the network control controller that is basically telling me hey I received",
    "start": "1904559",
    "end": "1910290"
  },
  {
    "text": "networking traffic from this from this guy and I know where this port is and",
    "start": "1910290",
    "end": "1917309"
  },
  {
    "text": "there's a trick here because this port is not the actual port this is say if I",
    "start": "1917309",
    "end": "1925140"
  },
  {
    "text": "do",
    "start": "1925140",
    "end": "1927980"
  },
  {
    "text": "the show and kV switch I can see that",
    "start": "1931710",
    "end": "1939550"
  },
  {
    "text": "this sport number seven doesn't exist but this is the interface index from SNMP because s flow eases SNMP so I can",
    "start": "1939550",
    "end": "1946450"
  },
  {
    "text": "basically use another nice command to",
    "start": "1946450",
    "end": "1955480"
  },
  {
    "text": "tell me the mapping that is happening between the interface index that is given by SNMP and the open flow port so",
    "start": "1955480",
    "end": "1963910"
  },
  {
    "text": "I owe the didn't copy I run that let me",
    "start": "1963910",
    "end": "1972250"
  },
  {
    "text": "have it in a clearer way instead of Jason let's have two normal traffic so I",
    "start": "1972250",
    "end": "1979390"
  },
  {
    "text": "can see now the interface index seven is living on open flow port number one so",
    "start": "1979390",
    "end": "1985270"
  },
  {
    "text": "if I now go and I use the o open flow control command I can see that number",
    "start": "1985270",
    "end": "1996760"
  },
  {
    "text": "one was my host local or my moment yeah",
    "start": "1996760",
    "end": "2002970"
  },
  {
    "text": "so this is basically the mapping between the interfaces end and the interface index that comes from SNMP cool so we",
    "start": "2002970",
    "end": "2010740"
  },
  {
    "text": "managed so in this demo we managed to be",
    "start": "2010740",
    "end": "2015870"
  },
  {
    "start": "2014000",
    "end": "2030000"
  },
  {
    "text": "able to build the whole control loop we have network monitoring we have network control in a kubernetes context so you",
    "start": "2015870",
    "end": "2022410"
  },
  {
    "text": "can take these events have other controllers watching these events and take actions you can either scale the pod or block completely the traffic or",
    "start": "2022410",
    "end": "2029100"
  },
  {
    "text": "do anything there's other CR DS there's also crts for network module validation",
    "start": "2029100",
    "end": "2035460"
  },
  {
    "start": "2030000",
    "end": "2081000"
  },
  {
    "text": "so I want to be able to I want to make sure that there is certain forwarding kernel use enabled to avoid traffic loss",
    "start": "2035460",
    "end": "2042200"
  },
  {
    "text": "or I want to make sure in for example in the key in case of calico which makes use of our proxy to have our proxy",
    "start": "2042200",
    "end": "2049888"
  },
  {
    "text": "always enabled on the node there's also if I want to network performance test my my cluster I can specify here's my",
    "start": "2049889",
    "end": "2055860"
  },
  {
    "text": "clients here are my targets please run an I breath test or any other kind of",
    "start": "2055860",
    "end": "2061169"
  },
  {
    "text": "test and this is basically configurable so the status of this restore is basically like a provider spec where",
    "start": "2061169",
    "end": "2066570"
  },
  {
    "text": "you can it's a pulley for polymorphic status where it can change so you can define your own status in a very dynamic",
    "start": "2066570",
    "end": "2073230"
  },
  {
    "text": "fashion or even define more more more CR DS which are more specialized to the use",
    "start": "2073230",
    "end": "2080580"
  },
  {
    "text": "case what is the summary so there are many tools and patterns but there's no Oh API or common access point for",
    "start": "2080580",
    "end": "2088530"
  },
  {
    "start": "2081000",
    "end": "2132000"
  },
  {
    "text": "troubleshooting see are these basically are very nice well-known community standard that enable us to describe and",
    "start": "2088530",
    "end": "2094530"
  },
  {
    "text": "harmonize our api's and network machinery basically utilizes c are used for network troubleshooting it's the",
    "start": "2094530",
    "end": "2100680"
  },
  {
    "text": "first line of defense to be able to do reach ability and performance checks even inject loss or delay by a traffic",
    "start": "2100680",
    "end": "2108270"
  },
  {
    "text": "shaping series there's also the second line of defense which gives you more network visibility and with management",
    "start": "2108270",
    "end": "2114390"
  },
  {
    "text": "and control over a cluster so you can define a custom behavior based on network events that you receive via the",
    "start": "2114390",
    "end": "2121560"
  },
  {
    "text": "operator and also sanity checks if certain modules are enabled and so on so",
    "start": "2121560",
    "end": "2126810"
  },
  {
    "text": "this gives you a lot of flexibility you can extend it as well if you feel like it if you need to and what this is this",
    "start": "2126810",
    "end": "2136350"
  },
  {
    "start": "2132000",
    "end": "2163000"
  },
  {
    "text": "is basically my my Twitter account and my github handle check out network",
    "start": "2136350",
    "end": "2144359"
  },
  {
    "text": "machinery on github and if you have any questions just let me know also check out Gardner which is basically a tool that allows you to",
    "start": "2144359",
    "end": "2151010"
  },
  {
    "text": "deploy communities cluster and different cloud providers in a homogeneous and",
    "start": "2151010",
    "end": "2156470"
  },
  {
    "text": "consistent manner thank you everyone",
    "start": "2156470",
    "end": "2162410"
  }
]