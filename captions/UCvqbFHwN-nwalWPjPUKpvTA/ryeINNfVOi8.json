[
  {
    "text": "hello everyone i'm daniel smith I'm a software engineer at Google I was one of",
    "start": "60",
    "end": "5520"
  },
  {
    "text": "the first individuals on the kubernetes team back",
    "start": "5520",
    "end": "11160"
  },
  {
    "text": "before we open sourced it before we released it",
    "start": "11160",
    "end": "15889"
  },
  {
    "text": "so this talk is something that I did at Google actually it was two parts I did",
    "start": "16340",
    "end": "23400"
  },
  {
    "text": "it for new team members if if you've ever been through the",
    "start": "23400",
    "end": "28500"
  },
  {
    "text": "Google new employee orientation they've got a series of classes they a lifetime",
    "start": "28500",
    "end": "33719"
  },
  {
    "text": "of a server lifetime of a query all these things so I thought it would be",
    "start": "33719",
    "end": "39000"
  },
  {
    "text": "good for new team members just to see a lifetime of a kubernetes api request and",
    "start": "39000",
    "end": "45829"
  },
  {
    "text": "apparently all of you agree I thought there'd be like five people interested in this",
    "start": "45829",
    "end": "51649"
  },
  {
    "text": "so the the question that we're going to try and answer here is what happens",
    "start": "54230",
    "end": "59699"
  },
  {
    "text": "under the hood when you start up a queue patrol command",
    "start": "59699",
    "end": "64699"
  },
  {
    "text": "specifically I picked replica sets because they're you know relatively simple so what happens when you type",
    "start": "64700",
    "end": "71520"
  },
  {
    "text": "cube which will create - ah and some replica set IMO",
    "start": "71520",
    "end": "77900"
  },
  {
    "text": "and it turns out there's actually quite a lot that happens so I had to cut out",
    "start": "77900",
    "end": "83759"
  },
  {
    "text": "some stuff to fit this into the time so I'm sure I cut out your favorite part",
    "start": "83759",
    "end": "89659"
  },
  {
    "text": "sorry so these are the these are the things that we're going to go through is what",
    "start": "89659",
    "end": "95280"
  },
  {
    "text": "happens inside the cube control binary then we're going to have a short interlude on what happens on the wire",
    "start": "95280",
    "end": "102649"
  },
  {
    "text": "conversion serialization defaulting then we're going to go through what happens",
    "start": "102649",
    "end": "108030"
  },
  {
    "text": "once API server receives a query and then last we're going to go through what",
    "start": "108030",
    "end": "114509"
  },
  {
    "text": "does API server do after it's received a query so those are those are the four things that",
    "start": "114509",
    "end": "120540"
  },
  {
    "text": "hopefully we'll get through so this is this this talk of sort of",
    "start": "120540",
    "end": "126689"
  },
  {
    "text": "aimed at people who are interested in the nice codebase so I'm going to actually have code on my slides I don't",
    "start": "126689",
    "end": "133049"
  },
  {
    "text": "expect you to read the slides as they're up there I'll try and point out relevant things the the slides and the recordings",
    "start": "133049",
    "end": "139859"
  },
  {
    "text": "the feedback I got from the talks I did inside Google is that people like to watch watch this and sort of a go look",
    "start": "139859",
    "end": "147989"
  },
  {
    "text": "at the code you know pause it occasionally and go go browse of the code so I have included on",
    "start": "147989",
    "end": "155579"
  },
  {
    "text": "these straight on these slides all the all the function names are links you can",
    "start": "155579",
    "end": "161010"
  },
  {
    "text": "click there it'll take you to the one point four point five version of kubernetes and you can you can just sort",
    "start": "161010",
    "end": "166530"
  },
  {
    "text": "of use this as your guide to the stack so treat this as reference material",
    "start": "166530",
    "end": "172250"
  },
  {
    "text": "the code to fit to fit anything meaningful on the slides I had to basically delete mostly everything so",
    "start": "172250",
    "end": "179540"
  },
  {
    "text": "take everything you see in the slides with a grain of salt click on the link before you trust anything",
    "start": "179540",
    "end": "185989"
  },
  {
    "text": "so with all that said let's let's dive in so the first thing that happens when you",
    "start": "186109",
    "end": "193019"
  },
  {
    "text": "run Q control is that it builds all of its available commands",
    "start": "193019",
    "end": "198560"
  },
  {
    "text": "you know this happens every time you start it up we use the the app we use the Cobra library the output of this",
    "start": "198560",
    "end": "205470"
  },
  {
    "text": "process is documentation and and also commands that can be executed so I have",
    "start": "205470",
    "end": "211739"
  },
  {
    "text": "here on the screen the setup code that that creates the the create command",
    "start": "211739",
    "end": "217069"
  },
  {
    "text": "not too special you'll see down at the bottom the run create function call I",
    "start": "217069",
    "end": "222120"
  },
  {
    "text": "don't know if you can read the slide or not but the run create function call is what does all the what does all the work",
    "start": "222120",
    "end": "229940"
  },
  {
    "text": "which I have on the next slide so if you could read the slide I think",
    "start": "229940",
    "end": "236159"
  },
  {
    "text": "it's a little fuzzy but if you could read it you would see that it invokes something called a factory it makes a",
    "start": "236159",
    "end": "243359"
  },
  {
    "text": "builder and it makes a helper what are these things these are these are the three like components of cube",
    "start": "243359",
    "end": "249599"
  },
  {
    "text": "control if you do anything involving a cube control command you're probably going to interact with",
    "start": "249599",
    "end": "256350"
  },
  {
    "text": "these so I'm going to run through what each of them what each of them is first up is",
    "start": "256350",
    "end": "264120"
  },
  {
    "text": "the factory and this is like a replaceable logic for cube control I",
    "start": "264120",
    "end": "269700"
  },
  {
    "text": "know openshift overrides it in open shifts command line client so it's basically just drop in things like one",
    "start": "269700",
    "end": "277139"
  },
  {
    "text": "of the function gives you a client that talks to kubernetes server the the one that we'll look into further",
    "start": "277139",
    "end": "283139"
  },
  {
    "text": "is the unstructured object which gives you a just mapping between an object",
    "start": "283139",
    "end": "289770"
  },
  {
    "text": "type and a rest path on the server this is used to do generic generic",
    "start": "289770",
    "end": "296300"
  },
  {
    "text": "rest operations which is what we're going to show in a minute here so this",
    "start": "296300",
    "end": "301350"
  },
  {
    "text": "is this is the factory and there is a there is a function linked here which",
    "start": "301350",
    "end": "307979"
  },
  {
    "text": "builds the factory is like 600 lines of code I counted it",
    "start": "307979",
    "end": "313370"
  },
  {
    "text": "is just full of like function definitions and again openshift overrides this this is this is drop in",
    "start": "313370",
    "end": "318870"
  },
  {
    "text": "logic or for Q control yeah so next up on our list is the Builder",
    "start": "318870",
    "end": "326940"
  },
  {
    "text": "and I you know I didn't name these things in queue control and by the way this talk",
    "start": "326940",
    "end": "333180"
  },
  {
    "text": "is more of a history lesson than it is like this is the way I think things should should be we started off with a lot of little bits",
    "start": "333180",
    "end": "341700"
  },
  {
    "text": "of code and and over time they grew and they grew layers and the layers grew layers",
    "start": "341700",
    "end": "347720"
  },
  {
    "text": "queue Patrol isn't that bad this builder thing is actually necessary the the task",
    "start": "347720",
    "end": "353760"
  },
  {
    "text": "that it performs is is all your when you invoke queue control you have a",
    "start": "353760",
    "end": "359310"
  },
  {
    "text": "like a - f command or you can pipe in standard in or you can give it a directory or you can give it a file with",
    "start": "359310",
    "end": "364800"
  },
  {
    "text": "a bunch of resources in the builder is responsible for unpacking that and turning it into a list of resources to",
    "start": "364800",
    "end": "371370"
  },
  {
    "text": "iterate over yeah so you can you can go browse the coda fed",
    "start": "371370",
    "end": "379240"
  },
  {
    "text": "if that interests you and finally the last part of queue patrol that we're going to look at is the the",
    "start": "379240",
    "end": "386080"
  },
  {
    "text": "helper and this is responsible for for like generically taking",
    "start": "386080",
    "end": "391830"
  },
  {
    "text": "some resource and doing some rest thing to it so in our case it's taking a",
    "start": "391830",
    "end": "397690"
  },
  {
    "text": "replica set and it's calling the the create method you can see at the bottom here it I",
    "start": "397690",
    "end": "406120"
  },
  {
    "text": "don't know if you can't see if you could see at the bottom there it has a chain of commands like post name space",
    "start": "406120",
    "end": "412890"
  },
  {
    "text": "resource body do get that's interacting with the the next layer down which I",
    "start": "412890",
    "end": "420130"
  },
  {
    "text": "think is on the next slide yes the next layer down so now at this point",
    "start": "420130",
    "end": "426220"
  },
  {
    "text": "we've exited queue control we're in the the kubernetes client library which is",
    "start": "426220",
    "end": "432490"
  },
  {
    "text": "which is now published separately and you can use this code in your own projects and in fact the links on this",
    "start": "432490",
    "end": "439720"
  },
  {
    "text": "slide go to the client go library and not not the main kubernetes repo",
    "start": "439720",
    "end": "445410"
  },
  {
    "text": "you can see the rest client here is basically just a helper tool that helps",
    "start": "445410",
    "end": "451090"
  },
  {
    "text": "you build a resource path a URL that refers to a kubernetes resource it's got",
    "start": "451090",
    "end": "457750"
  },
  {
    "text": "a series of helper functions so you give it a verb you can give it a prefix or",
    "start": "457750",
    "end": "464290"
  },
  {
    "text": "suffix a resource like like replica sets in our case a sub resource the name of",
    "start": "464290",
    "end": "471400"
  },
  {
    "text": "your object if you're doing like a gat a namespace",
    "start": "471400",
    "end": "476729"
  },
  {
    "text": "yeah so this is how you build up a request one thing i wanted to hit on in",
    "start": "476729",
    "end": "484060"
  },
  {
    "text": "particular is the body method i think it's kind of nice lets you pass in the body and multiple formats so you can",
    "start": "484060",
    "end": "491530"
  },
  {
    "text": "pass a string directly you can pass an array of bytes you can pass a the IO dot reader which is probably what you want",
    "start": "491530",
    "end": "497270"
  },
  {
    "text": "to do if you're following normal ordinary go conventions or you can pass",
    "start": "497270",
    "end": "502610"
  },
  {
    "text": "in a runtime object and and runtime object is really the the type that we've made in the kubernetes code base to",
    "start": "502610",
    "end": "508760"
  },
  {
    "text": "represent kubernetes api objects yeah so in it and it does the sort of",
    "start": "508760",
    "end": "516500"
  },
  {
    "text": "does the right thing one thing - one thing to look is this this runtime in code there I don't know",
    "start": "516500",
    "end": "522860"
  },
  {
    "text": "if you can see that is calling down into the serialization machinery so that that",
    "start": "522860",
    "end": "529010"
  },
  {
    "text": "is the place where the the magic happens of taking some object that you have in memory and turning it into bytes that",
    "start": "529010",
    "end": "535340"
  },
  {
    "text": "you send over the wire okay we'll get to that in a second",
    "start": "535340",
    "end": "540770"
  },
  {
    "text": "finally once you once you've constructed a request you call this du method it actually goes out and executes an HTTP",
    "start": "540770",
    "end": "548510"
  },
  {
    "text": "request I didn't put this function on a slide but if you're interested you can go see the",
    "start": "548510",
    "end": "555100"
  },
  {
    "text": "the code where we actually make the the go HTTP client and execute a request and",
    "start": "555100",
    "end": "561740"
  },
  {
    "text": "then on the on the read once it gets a response back it transforms that which which might involve turning a blob of",
    "start": "561740",
    "end": "568730"
  },
  {
    "text": "JSON into a go error type sending that up up to the user",
    "start": "568730",
    "end": "575440"
  },
  {
    "text": "okay so so that was the cue control side of things and we've gotten bytes out",
    "start": "575440",
    "end": "582380"
  },
  {
    "text": "onto the wire at this point and so I thought it might be good to talk about what is we've got a if you've looked at",
    "start": "582380",
    "end": "590900"
  },
  {
    "text": "our code base you know you know that there's a bunch of automatically generated code that does a bunch of",
    "start": "590900",
    "end": "596780"
  },
  {
    "text": "strange things and I don't think we have time to go through all all the things that this code does",
    "start": "596780",
    "end": "602990"
  },
  {
    "text": "but I wanted to sort of tell you what the what the problems are that this code is solving and why do we have this",
    "start": "602990",
    "end": "609140"
  },
  {
    "text": "complicated machinery so the basic problem for serialization",
    "start": "609140",
    "end": "614810"
  },
  {
    "text": "is we have we have some memory structure we have to have some canonical way to put it on the wire otherwise we can't",
    "start": "614810",
    "end": "620490"
  },
  {
    "text": "share with anybody for conversion why do we have conversion",
    "start": "620490",
    "end": "626120"
  },
  {
    "text": "we have old clients and kubernetes is infrastructure people right important",
    "start": "626120",
    "end": "632850"
  },
  {
    "text": "clients against it people right important clients that work with you know to two or three or four older",
    "start": "632850",
    "end": "639270"
  },
  {
    "text": "versions of kubernetes and we want those clients to continue working otherwise people are not going to be able to upgrade",
    "start": "639270",
    "end": "644900"
  },
  {
    "text": "so so that's that's why we have some conversion machinery I'm going to talk more about these in the next slides and",
    "start": "644900",
    "end": "650250"
  },
  {
    "text": "lastly why defaulting the reason why it's here is because we",
    "start": "650250",
    "end": "655280"
  },
  {
    "text": "implemented it it in the same way that we implemented the other two but the",
    "start": "655280",
    "end": "660480"
  },
  {
    "text": "basic problem is there are API there are fields in their API objects which have",
    "start": "660480",
    "end": "666410"
  },
  {
    "text": "default values and and sometimes these fields have you know some small number",
    "start": "666410",
    "end": "672060"
  },
  {
    "text": "of values that are actually acceptable and old clients don't know what those fields are so so somebody has to default",
    "start": "672060",
    "end": "678270"
  },
  {
    "text": "them yeah so so serialization in Cooper Nettie's we",
    "start": "678270",
    "end": "685370"
  },
  {
    "text": "serialize to JSON primarily and Clayton and some other of our friends at Red Hat",
    "start": "685370",
    "end": "693990"
  },
  {
    "text": "have written a proto serializer this is not the standard",
    "start": "693990",
    "end": "699720"
  },
  {
    "text": "protocell réaliser we needed to maintain compatibility with",
    "start": "699720",
    "end": "705000"
  },
  {
    "text": "our code base so so as reacts actually really impressive he's got a",
    "start": "705000",
    "end": "710870"
  },
  {
    "text": "thing that generates a proto message from the ghost trucks it's pretty cool",
    "start": "710870",
    "end": "717020"
  },
  {
    "text": "it's more generated code though for JSON we use a tool called Google G",
    "start": "717020",
    "end": "723510"
  },
  {
    "text": "which generates decoders for us although Tim was just telling me earlier",
    "start": "723510",
    "end": "728700"
  },
  {
    "text": "today that he's working on writing a replacement gorgey runs really slowly I don't know if you ever rerun our",
    "start": "728700",
    "end": "734190"
  },
  {
    "text": "generated code it takes a while",
    "start": "734190",
    "end": "738680"
  },
  {
    "text": "so I thought I would show you not not the machinery itself but just some of the interfaces that we require objects",
    "start": "739940",
    "end": "747300"
  },
  {
    "text": "to conform to this is the runtime object interface so all of our API objects",
    "start": "747300",
    "end": "752630"
  },
  {
    "text": "implement this interface a little bit of trivia for the longest time this this",
    "start": "752630",
    "end": "758300"
  },
  {
    "text": "this interface had one function which was called like he is a runtime object it didn't do anything it was just there",
    "start": "758300",
    "end": "765680"
  },
  {
    "text": "to mark to let you mark certain structures runtime objects and let the",
    "start": "765680",
    "end": "770690"
  },
  {
    "text": "machinery operate on them eventually we change this to get object kind which performs a more useful function and",
    "start": "770690",
    "end": "777490"
  },
  {
    "text": "replaces a bunch of machinery that use the reflect package goes reflect package so this is much faster",
    "start": "777490",
    "end": "786070"
  },
  {
    "text": "we have because we support both Jason and proto we have to have an interface around our",
    "start": "787690",
    "end": "794300"
  },
  {
    "text": "encoding and decoding machinery because you could have a blob that is proto or",
    "start": "794300",
    "end": "800000"
  },
  {
    "text": "or JSON you need it you need your code to work with both so this here I've shown the the encoder",
    "start": "800000",
    "end": "807740"
  },
  {
    "text": "interface the decoder interface and the serializer interface which is just the two of them together",
    "start": "807740",
    "end": "814630"
  },
  {
    "text": "let's see I figure out what it's going to say yeah so",
    "start": "817000",
    "end": "824140"
  },
  {
    "text": "you have a blob you don't know if it is proto or json we have an interface to",
    "start": "824140",
    "end": "830990"
  },
  {
    "text": "manufacture serializer for you oh I remember what I was going to say I'll state on the next slide the so the",
    "start": "830990",
    "end": "836900"
  },
  {
    "text": "negotiated serializer interface will give you back a serializer for if",
    "start": "836900",
    "end": "843410"
  },
  {
    "text": "it's particular media type so this goes a little bit beyond just proto versus json it's also",
    "start": "843410",
    "end": "849520"
  },
  {
    "text": "it also deals with encoding so there's a content type header that sort of thing",
    "start": "849520",
    "end": "856690"
  },
  {
    "text": "we're going to add more in the future where clients because we'll be able to set the accept header and get back",
    "start": "856690",
    "end": "863090"
  },
  {
    "text": "results in a format that's more to their liking so then this is the mechanism that we'll be using",
    "start": "863090",
    "end": "869590"
  },
  {
    "text": "so at the bottom of this you see encoder 2 version and decoder 2 version that is",
    "start": "869590",
    "end": "875780"
  },
  {
    "text": "where the that is where the conversion machinery comes in so like I said the goal of the",
    "start": "875780",
    "end": "882270"
  },
  {
    "text": "conversion machinery is clients speak old versions we want to keep those clients working",
    "start": "882270",
    "end": "888230"
  },
  {
    "text": "this is this is really kind of why we ended up with a weird conversion",
    "start": "888230",
    "end": "894600"
  },
  {
    "text": "machinery a weird API machinery I love this like if we if we did this again what we do the same thing",
    "start": "894600",
    "end": "900740"
  },
  {
    "text": "I don't know maybe GRP see did not exist when we started",
    "start": "900740",
    "end": "906960"
  },
  {
    "text": "this so that wasn't an option we haven't switched to G RPC for a number of",
    "start": "906960",
    "end": "912420"
  },
  {
    "text": "reasons one is we have existing clients that expect this now and it's hard we can't break them",
    "start": "912420",
    "end": "918740"
  },
  {
    "text": "yeah it's complicated so",
    "start": "918740",
    "end": "924740"
  },
  {
    "text": "what I was going to say is that proto itself does not have a great system for keeping old clients working there are",
    "start": "924740",
    "end": "931800"
  },
  {
    "text": "some rules you can follow to keep your proto messages compatible backwards compatible but",
    "start": "931800",
    "end": "938120"
  },
  {
    "text": "it works best in a situation where you're like rolling continuously rolling out of service doesn't work great when",
    "start": "938120",
    "end": "945360"
  },
  {
    "text": "you have clients that can be an arbitrary arbitrarily far number of versions behind you",
    "start": "945360",
    "end": "952880"
  },
  {
    "text": "yeah especially if you want those clients to continue to work as opposed to like just not crash so so we came up",
    "start": "953030",
    "end": "960570"
  },
  {
    "text": "with this machinery it works it's not pretty",
    "start": "960570",
    "end": "966570"
  },
  {
    "text": "yeah so our solution basically is we'll just keep the older versions in entry and and we write we actually",
    "start": "966570",
    "end": "974610"
  },
  {
    "text": "automatically generate some functions that convert between the old and the new the new format",
    "start": "974610",
    "end": "981290"
  },
  {
    "text": "so in terms of what that looks like in code",
    "start": "981290",
    "end": "987020"
  },
  {
    "text": "in terms of what that looks like in code it's actually exactly the same interface",
    "start": "987020",
    "end": "992700"
  },
  {
    "text": "as the serializer it just has different semantics so the",
    "start": "992700",
    "end": "997830"
  },
  {
    "text": "serializer is not going to manipulate the data anyway in any way it's just going to take it from wire format to",
    "start": "997830",
    "end": "1002960"
  },
  {
    "text": "memory format the the codec may additionally transform the data in some way if I turn turning it from like if",
    "start": "1002960",
    "end": "1009980"
  },
  {
    "text": "it's view one on the wire maybe it'll be V two in memory or we have this concept of an internal",
    "start": "1009980",
    "end": "1016580"
  },
  {
    "text": "version which is like the the hub of the conversion diagram so all versions can",
    "start": "1016580",
    "end": "1023779"
  },
  {
    "text": "be turned into the internal version and the logic and the server can be written",
    "start": "1023779",
    "end": "1029839"
  },
  {
    "text": "understanding only the internal version finally defaulting like I said clients",
    "start": "1029839",
    "end": "1037730"
  },
  {
    "text": "may not understand new API fields solution is the server ads default values for fields",
    "start": "1037730",
    "end": "1043928"
  },
  {
    "text": "until recently actually Cube control was unfortunately adding default values",
    "start": "1043929",
    "end": "1049900"
  },
  {
    "text": "using the same machinery because it's built into both the server and queue control but we've taken it out of I",
    "start": "1049900",
    "end": "1057530"
  },
  {
    "text": "think create and update at least and we'd like to take it out of more places and keep control because really you want",
    "start": "1057530",
    "end": "1062690"
  },
  {
    "text": "the server to be applying the defaults because the server has the best idea of what the defaults should be",
    "start": "1062690",
    "end": "1068590"
  },
  {
    "text": "little trivia about the defaulting is that it is applied recursively and so",
    "start": "1069520",
    "end": "1077120"
  },
  {
    "text": "currently fields are defaulted multiple times this is a bug unless somebody's",
    "start": "1077120",
    "end": "1083300"
  },
  {
    "text": "fixed it I've been out for a few weeks on paternity leave hopefully somebody's fixed it okay so",
    "start": "1083300",
    "end": "1088790"
  },
  {
    "text": "enough about conversion let's run through API servers processing of",
    "start": "1088790",
    "end": "1094700"
  },
  {
    "text": "requests so I've started here with the the run function in our generic API server",
    "start": "1094700",
    "end": "1101210"
  },
  {
    "text": "library we're making efforts to separate out non kubernetes specific things into",
    "start": "1101210",
    "end": "1107179"
  },
  {
    "text": "this generic API server library and keep the kubernetes specific things in just the plain old API server",
    "start": "1107179",
    "end": "1114550"
  },
  {
    "text": "package there's a number of reasons for this which I won't go into but basically we",
    "start": "1114550",
    "end": "1120440"
  },
  {
    "text": "want to make it easy for people to build kubernetes like a pis and we don't",
    "start": "1120440",
    "end": "1126380"
  },
  {
    "text": "expect you to write this from scratch we'd like to you know there's a bunch of stuff that can",
    "start": "1126380",
    "end": "1131539"
  },
  {
    "text": "be reused so this is the run method and this slide is indistinct but at this at",
    "start": "1131539",
    "end": "1139130"
  },
  {
    "text": "the top it adds some what is it add it adds some",
    "start": "1139130",
    "end": "1144830"
  },
  {
    "text": "rate-limiting there's a timeout handler it adds a rate limiter timeout enforcer",
    "start": "1144830",
    "end": "1150410"
  },
  {
    "text": "to the request and then here at the bottom it actually calls listen and serve TLS so this is",
    "start": "1150410",
    "end": "1157669"
  },
  {
    "text": "sort of the entry point for the for the for the socket where it starts listening",
    "start": "1157669",
    "end": "1163309"
  },
  {
    "text": "and serving let's see so so then this this code is",
    "start": "1163309",
    "end": "1170090"
  },
  {
    "text": "all happening at setup time like when you start the API server binary",
    "start": "1170090",
    "end": "1175360"
  },
  {
    "text": "this function is initializing the handler stack so",
    "start": "1175360",
    "end": "1183159"
  },
  {
    "text": "when requests come in to API server something accepts the request it goes",
    "start": "1183640",
    "end": "1189650"
  },
  {
    "text": "through this stack of the go Hana HTTP handler interfaces that",
    "start": "1189650",
    "end": "1197360"
  },
  {
    "text": "goes through the stack of them and each one like check something and then passes it along to the next to the next layer",
    "start": "1197360",
    "end": "1203120"
  },
  {
    "text": "so a as you can see like the the list the the",
    "start": "1203120",
    "end": "1209000"
  },
  {
    "text": "bulleted list is actually the opposite order of the the order they appear in code this is because each this is",
    "start": "1209000",
    "end": "1214669"
  },
  {
    "text": "because each each handler wraps the previous handler so they actually get invoked in the opposite adder order that",
    "start": "1214669",
    "end": "1220850"
  },
  {
    "text": "they're added I think there's actually a bug on this slide I think we're calling authentication and cores in the in the",
    "start": "1220850",
    "end": "1226909"
  },
  {
    "text": "wrong order and yeah",
    "start": "1226909",
    "end": "1232270"
  },
  {
    "text": "so after it gets through so so the so the handlers are timeout it adds a",
    "start": "1232270",
    "end": "1237710"
  },
  {
    "text": "context to go through a content occation it checks cores",
    "start": "1237710",
    "end": "1243190"
  },
  {
    "text": "it adds the logging the logging handler and then finally it goes through a",
    "start": "1243190",
    "end": "1248290"
  },
  {
    "text": "series of dispatch operations first it goes through the muck sir that the go",
    "start": "1248290",
    "end": "1253810"
  },
  {
    "text": "HTTP library gives us and then unless that's one of the there's only a few",
    "start": "1253810",
    "end": "1260190"
  },
  {
    "text": "URLs that that handles and then it is otherwise passed through the the",
    "start": "1260190",
    "end": "1266770"
  },
  {
    "text": "markzware that we set up with go restful so how do we how do we set up the Luxor",
    "start": "1266770",
    "end": "1275410"
  },
  {
    "text": "that go restful uses I'm glad you asked this is the",
    "start": "1275410",
    "end": "1281040"
  },
  {
    "text": "API group version instruct our API is divided up by group it's divided up in",
    "start": "1281040",
    "end": "1287320"
  },
  {
    "text": "other a ways but the important thing for setup is that it's divided by group so",
    "start": "1287320",
    "end": "1293470"
  },
  {
    "text": "each group has one of these struck spelled out for it and then we pass it along to the API installer",
    "start": "1293470",
    "end": "1300390"
  },
  {
    "text": "and so you can see that we put in a bunch of helper things so there's a",
    "start": "1300390",
    "end": "1307030"
  },
  {
    "text": "negotiated serializer that's passed in there so before creating this you have to set up a serializer that can",
    "start": "1307030",
    "end": "1313030"
  },
  {
    "text": "understand all the various formats that you want you want this to use and there's also a storage that's the it's",
    "start": "1313030",
    "end": "1321220"
  },
  {
    "text": "yeah way back in the day it was called storage because it was actually storage there's been it's grown a few layers",
    "start": "1321220",
    "end": "1328210"
  },
  {
    "text": "since then and now this is actually the the thing that handles the the rest requests the business logic which you",
    "start": "1328210",
    "end": "1335710"
  },
  {
    "text": "know it wraps an actual thing that is really the represents the storage which we'll get to in a few slides but yeah so",
    "start": "1335710",
    "end": "1343330"
  },
  {
    "text": "it has so has all this it has an object I per creator converter linker and a",
    "start": "1343330",
    "end": "1349300"
  },
  {
    "text": "bunch of other things so that all gets tossed into the API",
    "start": "1349300",
    "end": "1354910"
  },
  {
    "text": "installer which starts off innocently looking it's got this install function",
    "start": "1354910",
    "end": "1360300"
  },
  {
    "text": "and it just runs through all the groups and it calls call some swagger an OPA",
    "start": "1360300",
    "end": "1366370"
  },
  {
    "text": "open API set up code so that we get nice API documentation as its building the",
    "start": "1366370",
    "end": "1372980"
  },
  {
    "text": "and then it calls this register resource handlers function and unfortunately if",
    "start": "1372980",
    "end": "1379280"
  },
  {
    "text": "you drill into that function you'll find that it is very very very long and",
    "start": "1379280",
    "end": "1386470"
  },
  {
    "text": "not easy to follow but basically it's set Sappho a la a long list of handler",
    "start": "1386470",
    "end": "1393590"
  },
  {
    "text": "paths that it then programs in to go restful and i've excerpted on to this",
    "start": "1393590",
    "end": "1398630"
  },
  {
    "text": "slide only the only the create one but just just imagine this code copied and",
    "start": "1398630",
    "end": "1407420"
  },
  {
    "text": "pasted like eighteen times for all the different handlers there's a big switch inside",
    "start": "1407420",
    "end": "1413780"
  },
  {
    "text": "this four loop yeah so but that that I don't know if you've ever used go",
    "start": "1413780",
    "end": "1418880"
  },
  {
    "text": "restful before but that is programming go restful it adds it adds tells it what what verb it is it tells it where to",
    "start": "1418880",
    "end": "1425570"
  },
  {
    "text": "route it to this handler which it gets from this create resource function I guess to the documentation it with some",
    "start": "1425570",
    "end": "1431900"
  },
  {
    "text": "parameters you know and then then it finally installs it yeah so that's",
    "start": "1431900",
    "end": "1437450"
  },
  {
    "text": "that's how we program go restful okay so so finally we're getting to",
    "start": "1437450",
    "end": "1443000"
  },
  {
    "text": "something that is happening not at run - not at initialization time but actually",
    "start": "1443000",
    "end": "1448940"
  },
  {
    "text": "at run time when a request is received if you look at the this create handler this internal function",
    "start": "1448940",
    "end": "1456130"
  },
  {
    "text": "you can see it's it's actually doing a bunch of interesting things it does version of format negotiation it calls",
    "start": "1456130",
    "end": "1461690"
  },
  {
    "text": "that it calls that serializer it reads the body it does the decoding and the conversion to a specific version then",
    "start": "1461690",
    "end": "1469010"
  },
  {
    "text": "finally it calls into the I call data registry it's that's the storage thing the business logic after that is done it",
    "start": "1469010",
    "end": "1476990"
  },
  {
    "text": "sets a self link on the result and it sends it back to the user",
    "start": "1476990",
    "end": "1482110"
  },
  {
    "text": "so [Music] let's go down a layer into the next set",
    "start": "1482110",
    "end": "1488330"
  },
  {
    "text": "of the next set of layers which is the storage interface and",
    "start": "1488330",
    "end": "1495380"
  },
  {
    "text": "originally it was one interface but it's grown into a bunch an interface per",
    "start": "1495380",
    "end": "1500790"
  },
  {
    "text": "operation basically so I'm only showing you the Creator interface so basically",
    "start": "1500790",
    "end": "1506460"
  },
  {
    "text": "when you define your object you can define like just a create method of like",
    "start": "1506460",
    "end": "1512010"
  },
  {
    "text": "this this signature and if you send it through the API installer machinery you",
    "start": "1512010",
    "end": "1518220"
  },
  {
    "text": "will support the post verb and we have a bunch of different interfaces one for each verb and some",
    "start": "1518220",
    "end": "1525540"
  },
  {
    "text": "for various sub resources yeah so since that's a lot of work to",
    "start": "1525540",
    "end": "1533610"
  },
  {
    "text": "implement we have a implementation ready-made for you so all you have to do",
    "start": "1533610",
    "end": "1540360"
  },
  {
    "text": "is is supply something that implements the this strategy and most of the work",
    "start": "1540360",
    "end": "1546330"
  },
  {
    "text": "is done for you and just to show you how well okay so this is the work that is done for you",
    "start": "1546330",
    "end": "1553070"
  },
  {
    "text": "this is the create function so when you create anything it runs through this code",
    "start": "1553070",
    "end": "1558740"
  },
  {
    "text": "at the top it calls before create it does some stuff for you that's the",
    "start": "1558740",
    "end": "1564870"
  },
  {
    "text": "same for all objects that calls create it finally does after create make sense so when you go to implement a",
    "start": "1564870",
    "end": "1574650"
  },
  {
    "text": "strategy this is the replica set strategy you actually don't have to write too",
    "start": "1574650",
    "end": "1580200"
  },
  {
    "text": "much code so here it is setting the generation to",
    "start": "1580200",
    "end": "1586170"
  },
  {
    "text": "one we could be here for another hour-long session to explain the generation so we",
    "start": "1586170",
    "end": "1592230"
  },
  {
    "text": "will gloss over that I also showed the validate function",
    "start": "1592230",
    "end": "1597860"
  },
  {
    "text": "okay so what we just saw was sort of the",
    "start": "1597860",
    "end": "1603120"
  },
  {
    "text": "user-facing half of the API server stack now we're going to show the storage facing half",
    "start": "1603120",
    "end": "1610429"
  },
  {
    "text": "this API server those are the those are the two main things that API server talks to is users and storage so we have",
    "start": "1610429",
    "end": "1618750"
  },
  {
    "text": "to store we have to store things so this is the interface that all of our",
    "start": "1618750",
    "end": "1625860"
  },
  {
    "text": "business logic expects from a store so this is and I didn't show at all does",
    "start": "1625860",
    "end": "1632550"
  },
  {
    "text": "this got create delete watch get list I think there's a update or set",
    "start": "1632550",
    "end": "1639440"
  },
  {
    "text": "yeah so this is the interface we have in the code base Etsy d2 and",
    "start": "1639440",
    "end": "1646080"
  },
  {
    "text": "Etsy D 3 implementations I'm showing links here to the cd3 implementation but the Etsy d21 is right",
    "start": "1646080",
    "end": "1653490"
  },
  {
    "text": "next to it so it's easy to find this is kind of critical code like you",
    "start": "1653490",
    "end": "1659010"
  },
  {
    "text": "don't want to write something to kubernetes and have it vanish off into the ether and the other reason why it's",
    "start": "1659010",
    "end": "1664980"
  },
  {
    "text": "critical is if you're watching it's really kind of important that if you list and you pass the resource version",
    "start": "1664980",
    "end": "1671490"
  },
  {
    "text": "back and you initiate a watch that you don't miss any updates so this really",
    "start": "1671490",
    "end": "1676890"
  },
  {
    "text": "needs to be tested very well which is why I say on this slide we are open to",
    "start": "1676890",
    "end": "1682820"
  },
  {
    "text": "interfaces for implementations for more storage backends but there's there's a",
    "start": "1682820",
    "end": "1690660"
  },
  {
    "text": "there's a high bar in terms of testing continuous testing scale testing that",
    "start": "1690660",
    "end": "1697170"
  },
  {
    "text": "needs to happen here which which makes it difficult so I just thought I would throw that out there",
    "start": "1697170",
    "end": "1704270"
  },
  {
    "text": "just for fun this is the atv-3 implementation of create I",
    "start": "1704270",
    "end": "1710030"
  },
  {
    "text": "actually don't understand the at CD 3 code so the point the part that I wanted to point out is just it's using an",
    "start": "1710030",
    "end": "1715860"
  },
  {
    "text": "embedded codec it's called run time encode this is calling into the conversion machinery that I was talking",
    "start": "1715860",
    "end": "1722880"
  },
  {
    "text": "about earlier and this is because when you start up a API server you get to",
    "start": "1722880",
    "end": "1728610"
  },
  {
    "text": "tell the system what version - right - its storage and and this lets you",
    "start": "1728610",
    "end": "1735529"
  },
  {
    "text": "control like when you do storage format upgrades so so yeah so we actually",
    "start": "1735529",
    "end": "1742190"
  },
  {
    "text": "understand multiple versions but we write out only in the specified version this lets you do roll forward or roll",
    "start": "1742190",
    "end": "1748009"
  },
  {
    "text": "back between versions so good to know okay so how do we how do we get that",
    "start": "1748009",
    "end": "1755389"
  },
  {
    "text": "codec into the storage pointer of we have written a factory to help you do",
    "start": "1755389",
    "end": "1763519"
  },
  {
    "text": "that this code is in the generic API server and it actually works off of",
    "start": "1763519",
    "end": "1769460"
  },
  {
    "text": "command line options that you pass to API server so if you were to make your own API server you would probably not",
    "start": "1769460",
    "end": "1775070"
  },
  {
    "text": "need to mess with this and the the thing to know about the",
    "start": "1775070",
    "end": "1781820"
  },
  {
    "text": "storage options that we take is that you can actually specify different resources",
    "start": "1781820",
    "end": "1787190"
  },
  {
    "text": "go to different Etsy d clusters so by default events are stored in a separate",
    "start": "1787190",
    "end": "1793039"
  },
  {
    "text": "at CDR default setup script store events in a separate Etsy d like you could do",
    "start": "1793039",
    "end": "1798100"
  },
  {
    "text": "you can customize it arbitrarily if you really wanted to like you could I don't",
    "start": "1798100",
    "end": "1803419"
  },
  {
    "text": "know maybe make secrets go to a different Etsy or something I don't know",
    "start": "1803419",
    "end": "1808539"
  },
  {
    "text": "but that's just something you need to be aware of if you're messing with this code",
    "start": "1808539",
    "end": "1814269"
  },
  {
    "text": "ok finally I wanted to show sort of the glue that",
    "start": "1814269",
    "end": "1819649"
  },
  {
    "text": "that calls all of these with all of these constructors and factories and wires it all up so this this is also",
    "start": "1819649",
    "end": "1827809"
  },
  {
    "text": "called install api's but it's on the the master object and not the api installer and this is where the this is where the",
    "start": "1827809",
    "end": "1835669"
  },
  {
    "text": "master package collects all of the different resources and sets up that",
    "start": "1835669",
    "end": "1840710"
  },
  {
    "text": "group group resource struct that I showed earlier and",
    "start": "1840710",
    "end": "1848109"
  },
  {
    "text": "yes this is where it assembles the storage and and the the codex and all",
    "start": "1848220",
    "end": "1854620"
  },
  {
    "text": "that stuff and finally I wanted to show like the",
    "start": "1854620",
    "end": "1860020"
  },
  {
    "text": "specific code that sets up the replica set object is here and",
    "start": "1860020",
    "end": "1866880"
  },
  {
    "text": "continues here so this is this is where the business logic is constructed",
    "start": "1866880",
    "end": "1872549"
  },
  {
    "text": "basically yes you can see you can see here the",
    "start": "1872549",
    "end": "1878410"
  },
  {
    "text": "customization of the various different parts of the strategy and I think that is that is it this was",
    "start": "1878410",
    "end": "1888070"
  },
  {
    "text": "somewhat abbreviated from from the talk I gave at Google so hopefully this was interesting useful",
    "start": "1888070",
    "end": "1894360"
  },
  {
    "text": "if you think that there's one or two too many layers in this stack I would love",
    "start": "1894360",
    "end": "1900070"
  },
  {
    "text": "for you to show up in the API machinery sig and help me make it better",
    "start": "1900070",
    "end": "1906780"
  },
  {
    "text": "thank",
    "start": "1906780",
    "end": "1909780"
  },
  {
    "text": "any questions",
    "start": "1915669",
    "end": "1919238"
  },
  {
    "text": "yeah the self linker yeah yeah all of our API objects have a",
    "start": "1922809",
    "end": "1929889"
  },
  {
    "text": "metadata section one of the pieces of that metadata is the self link which",
    "start": "1929889",
    "end": "1934970"
  },
  {
    "text": "instructs the user like if you just get the blob of data how do you go find where it came from the self link tells",
    "start": "1934970",
    "end": "1941090"
  },
  {
    "text": "you that and so the it's part of the machinery to fill in the self link otherwise everybody who implements their",
    "start": "1941090",
    "end": "1947899"
  },
  {
    "text": "own resource would have to do that and if you've been around programmers for more than five minutes you know that if",
    "start": "1947899",
    "end": "1954139"
  },
  {
    "text": "you make them do the same thing twice there will be bugs in at least one of those things",
    "start": "1954139",
    "end": "1962019"
  },
  {
    "text": "[Applause] genius",
    "start": "1966430",
    "end": "1970809"
  },
  {
    "text": "what are the changes in 1.5 funny you should ask I've actually been",
    "start": "1972960",
    "end": "1978040"
  },
  {
    "text": "on a paternity leave for the last three weeks or so so I'm not entirely sure what's making it into 1.5 this is my",
    "start": "1978040",
    "end": "1984730"
  },
  {
    "text": "first day back I I know we were planning on",
    "start": "1984730",
    "end": "1990150"
  },
  {
    "text": "various improvements I I just I don't know off the top of my head would actually made it",
    "start": "1990150",
    "end": "1996690"
  },
  {
    "text": "yes it's definitely going to improve mark",
    "start": "1997890",
    "end": "2003050"
  },
  {
    "text": "yeah in particular I know Clayton had a bunch of changes planned to",
    "start": "2004220",
    "end": "2010190"
  },
  {
    "text": "support more formats in the negotiation so like the the stuff that you do when",
    "start": "2010190",
    "end": "2016740"
  },
  {
    "text": "you do cube cuddle get the the formatting we were planning on moving that server side so we'd like the server",
    "start": "2016740",
    "end": "2022020"
  },
  {
    "text": "to implement that for you so that would be an additional like content type",
    "start": "2022020",
    "end": "2028280"
  },
  {
    "text": "right application actually reads an object",
    "start": "2035610",
    "end": "2040800"
  },
  {
    "text": "and my question is is there any plan",
    "start": "2040800",
    "end": "2047280"
  },
  {
    "text": "holders and holders like eccentric library that I call in my opinion yeah",
    "start": "2047280",
    "end": "2054100"
  },
  {
    "text": "so the question is is there any plan to move encoders and decoders into a separate library so that they're easier",
    "start": "2054100",
    "end": "2060520"
  },
  {
    "text": "to reuse so we have moved the client into a",
    "start": "2060520",
    "end": "2065740"
  },
  {
    "text": "separate library I think the plan is to move more things like we would like the",
    "start": "2065740",
    "end": "2071649"
  },
  {
    "text": "API machinery to basically grow into a few libraries so yes I would say that",
    "start": "2071650",
    "end": "2077470"
  },
  {
    "text": "that's definitely in the in the in the future so the right roads to",
    "start": "2077470",
    "end": "2082629"
  },
  {
    "text": "using clients yeah yeah so yeah right now I would",
    "start": "2082630",
    "end": "2088840"
  },
  {
    "text": "definitely recommend that you use the client library that we've published and that actually includes a fair amount of",
    "start": "2088840",
    "end": "2094179"
  },
  {
    "text": "the encoders and decoders yeah but I I think we're going to want",
    "start": "2094180",
    "end": "2099580"
  },
  {
    "text": "to move the encoders and decoders in to get another library that can be consumed by both the server and client side",
    "start": "2099580",
    "end": "2106780"
  },
  {
    "text": "actually we would like we would like the conversion part of that to be only",
    "start": "2106780",
    "end": "2112030"
  },
  {
    "text": "linked into the server component just because we want the clients to be",
    "start": "2112030",
    "end": "2117520"
  },
  {
    "text": "simpler and and and because the server is taking on this this effort of converting",
    "start": "2117520",
    "end": "2123010"
  },
  {
    "text": "between versions the clients really don't need to with the single exception of kube control convert and we want to",
    "start": "2123010",
    "end": "2129610"
  },
  {
    "text": "move that functionality into the server anyway because if you imagine a world where you have multiple API servers and",
    "start": "2129610",
    "end": "2136390"
  },
  {
    "text": "not necessarily all kubernetes you can't really reasonably expect every",
    "start": "2136390",
    "end": "2141520"
  },
  {
    "text": "single API resource type to be compiled into queue control so we want cute control to be able to call up to the",
    "start": "2141520",
    "end": "2146890"
  },
  {
    "text": "server to get that done",
    "start": "2146890",
    "end": "2150630"
  },
  {
    "text": "[Music] that is configurable through the",
    "start": "2152020",
    "end": "2159340"
  },
  {
    "text": "question was the the different having different resources go to different Etsy D clusters how is that configured that",
    "start": "2159340",
    "end": "2165460"
  },
  {
    "text": "is configured through run time flags that you pass to API server so I",
    "start": "2165460",
    "end": "2172950"
  },
  {
    "text": "can't promise that they're super well documented but if you if you dig around in there you should be able to find them",
    "start": "2172950",
    "end": "2179780"
  },
  {
    "text": "[Music] yes you can actually pass lists into",
    "start": "2179780",
    "end": "2186010"
  },
  {
    "text": "into it I forget what the exact format is the help on the kind of relevant flag",
    "start": "2186010",
    "end": "2191410"
  },
  {
    "text": "should tell you but it's something something like you know resource type equals you know",
    "start": "2191410",
    "end": "2197310"
  },
  {
    "text": "yeah and this a comma-separated yeah yeah are you believe that's more than",
    "start": "2197310",
    "end": "2202390"
  },
  {
    "text": "you should be packing into flags but that's what we do",
    "start": "2202390",
    "end": "2206640"
  },
  {
    "text": "[Music] safes",
    "start": "2208230",
    "end": "2214410"
  },
  {
    "text": "this API machinery handle registration of new resource types",
    "start": "2214410",
    "end": "2219589"
  },
  {
    "text": "yeah I want to say yes like it's our goal for that to be easy and we have a",
    "start": "2219589",
    "end": "2225920"
  },
  {
    "text": "another goal which is which you should be able to implement a resource type in a in your own API server and we should",
    "start": "2225920",
    "end": "2233520"
  },
  {
    "text": "be able to combine those at runtime because right now basically you have to get stuff compiled into core if you want",
    "start": "2233520",
    "end": "2240630"
  },
  {
    "text": "to test it out but we would like to get to a world like you have third party resource right now which gets you some",
    "start": "2240630",
    "end": "2247109"
  },
  {
    "text": "functionality but we would like to get you a little bit more functionality and let you reuse our components we there's",
    "start": "2247109",
    "end": "2254099"
  },
  {
    "text": "a design out there for a there's design and like draft code for a discovery",
    "start": "2254099",
    "end": "2260130"
  },
  {
    "text": "summarizer that'll actually merge multiple API servers and present that as a single thing to a client so",
    "start": "2260130",
    "end": "2268400"
  },
  {
    "text": "yeah",
    "start": "2268400",
    "end": "2271400"
  },
  {
    "text": "right all us ah",
    "start": "2276230",
    "end": "2282160"
  },
  {
    "text": "there's my certification recall",
    "start": "2282160",
    "end": "2286440"
  },
  {
    "text": "yes but I can get okay so the",
    "start": "2290170",
    "end": "2297210"
  },
  {
    "text": "so the question is running running cube control proxy in a container the beta",
    "start": "2297570",
    "end": "2303010"
  },
  {
    "text": "API groups don't seem to make it through I can think of several things to check I",
    "start": "2303010",
    "end": "2309010"
  },
  {
    "text": "know Q control proxy has some there's like some filters on it that",
    "start": "2309010",
    "end": "2315579"
  },
  {
    "text": "control what exactly it allows through so you might look at those flags to see if those are blocking it if that doesn't",
    "start": "2315579",
    "end": "2323950"
  },
  {
    "text": "fix it I'm not sure file an issue yeah",
    "start": "2323950",
    "end": "2328109"
  },
  {
    "text": "yeah the the I did not cover the authentication stack and in these slides",
    "start": "2335820",
    "end": "2340869"
  },
  {
    "text": "I think that could be another talk like even longer than this one yeah we'd have",
    "start": "2340869",
    "end": "2346390"
  },
  {
    "text": "to get David EADS or Jordan Leggett to do that one",
    "start": "2346390",
    "end": "2352589"
  },
  {
    "text": "anything else [Music] and",
    "start": "2354000",
    "end": "2359289"
  },
  {
    "text": "be using them our shoe",
    "start": "2359289",
    "end": "2364749"
  },
  {
    "text": "should we use api's that are marked as beta so beta means that",
    "start": "2364749",
    "end": "2374559"
  },
  {
    "text": "we promise it won't blow up the rest of your cluster if you turn it on and it means that if you start using it we are",
    "start": "2374559",
    "end": "2381950"
  },
  {
    "text": "going to take on the work of keeping you compatible so so we'll make it easier for you to upgrade",
    "start": "2381950",
    "end": "2388420"
  },
  {
    "text": "so it's sort of up to you if that is acceptable or not I can say for for gke",
    "start": "2388420",
    "end": "2395089"
  },
  {
    "text": "Google's hosted kubernetes we turn beta things on by default so",
    "start": "2395089",
    "end": "2401680"
  },
  {
    "text": "yeah [Music]",
    "start": "2401680",
    "end": "2408078"
  },
  {
    "text": "it's not cumulative what you get a Google thank you wanted",
    "start": "2409350",
    "end": "2416609"
  },
  {
    "text": "yeah so so the question is generic API server it's not kubernetes specific do",
    "start": "2416609",
    "end": "2421750"
  },
  {
    "text": "we want to use it somewhere else the use we have a few use cases in mind we would like OpenShift to be able to import",
    "start": "2421750",
    "end": "2428470"
  },
  {
    "text": "generic api server directly instead of forking heaps tur which is a component of",
    "start": "2428470",
    "end": "2434849"
  },
  {
    "text": "kubernetes which does monitoring stuff we would like them to be able to import it directly I think that actually is",
    "start": "2434849",
    "end": "2442060"
  },
  {
    "text": "working yeah okay yeah and and the once we get",
    "start": "2442060",
    "end": "2450130"
  },
  {
    "text": "those to target use cases sorted out basically the idea is anyone who wants",
    "start": "2450130",
    "end": "2455680"
  },
  {
    "text": "to prototype or or even launch a in-house kubernetes api could use that and use the Federation machinery that I",
    "start": "2455680",
    "end": "2462310"
  },
  {
    "text": "mentioned to to like merge it with the the base cluster",
    "start": "2462310",
    "end": "2467880"
  },
  {
    "text": "yeah so we want to run away for people to launch their own custom api's on top",
    "start": "2467880",
    "end": "2473020"
  },
  {
    "text": "of the kubernetes cluster we don't want you to have to modify the the cube API server binary that we ship",
    "start": "2473020",
    "end": "2480328"
  },
  {
    "text": "reviewing all this that is obvious yes",
    "start": "2484380",
    "end": "2490640"
  },
  {
    "text": "I'm not sure the question is is there any is there on any obvious thing that we would do differently",
    "start": "2492170",
    "end": "2498319"
  },
  {
    "text": "I'm I'm guessing that if we've started the project now given that G RPC is out",
    "start": "2498319",
    "end": "2505829"
  },
  {
    "text": "there even though it doesn't support sort of the conversion case that we",
    "start": "2505829",
    "end": "2511319"
  },
  {
    "text": "really wanted to support I'm guessing we might end up using it but that's that's a total guess total",
    "start": "2511319",
    "end": "2518609"
  },
  {
    "text": "guess yeah yeah I mean a lot of a lot of what we do is like we are at Point a we",
    "start": "2518609",
    "end": "2525269"
  },
  {
    "text": "need to get to point B the market needs this thing built yesterday we are incurring technical",
    "start": "2525269",
    "end": "2532440"
  },
  {
    "text": "debt as we get there",
    "start": "2532440",
    "end": "2535460"
  },
  {
    "text": "[Music] yeah so the question is at CD 3 supports GRP see how do we talk to a CD 3 over G",
    "start": "2545140",
    "end": "2552000"
  },
  {
    "text": "RPC yeah and there's a bunch of benefits for this",
    "start": "2552000",
    "end": "2557670"
  },
  {
    "text": "we're going to start actually storing I I'm depending on how much progress was",
    "start": "2557670",
    "end": "2562920"
  },
  {
    "text": "made while I was on paternity leave the goal was actually to start storing objects in proto format and 41.5 and",
    "start": "2562920",
    "end": "2572480"
  },
  {
    "text": "we need at c d3 to do that because otherwise a CD 2 we have to talk JSON to",
    "start": "2572480",
    "end": "2578099"
  },
  {
    "text": "it which means encoding proto basic storing it you know that's very wasteful so that's why we want to get to at CD 3",
    "start": "2578099",
    "end": "2585809"
  },
  {
    "text": "one of the reasons",
    "start": "2585809",
    "end": "2589009"
  },
  {
    "text": "[Music] this question is binary configure a",
    "start": "2592230",
    "end": "2597290"
  },
  {
    "text": "fitted data at least three weeks ago I recall seeing a PR to actually add",
    "start": "2597290",
    "end": "2603970"
  },
  {
    "text": "binary like like a config map has a map of",
    "start": "2603970",
    "end": "2609620"
  },
  {
    "text": "string to string like to add a map string to byte array yeah",
    "start": "2609620",
    "end": "2615970"
  },
  {
    "text": "would you recommend it for like maybe bath it might get update from hometown",
    "start": "2620870",
    "end": "2626550"
  },
  {
    "text": "that reason we will not use Google definitely uses proto everywhere",
    "start": "2626550",
    "end": "2633740"
  },
  {
    "text": "yeah I don't know if I'd make a recommendation without knowing a lot more detail",
    "start": "2633740",
    "end": "2639200"
  },
  {
    "text": "right right thanks thanks everybody",
    "start": "2639200",
    "end": "2646040"
  }
]