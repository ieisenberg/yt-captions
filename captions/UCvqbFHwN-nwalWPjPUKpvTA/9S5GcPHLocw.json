[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello and welcome to the nuts update",
    "start": "799",
    "end": "3199"
  },
  {
    "text": "presentation",
    "start": "3199",
    "end": "5600"
  },
  {
    "text": "my name is jean-roman and along with my",
    "start": "5600",
    "end": "7759"
  },
  {
    "text": "colleague matthias hanel i'm going to",
    "start": "7759",
    "end": "10480"
  },
  {
    "text": "give you an update of the virgin tool of",
    "start": "10480",
    "end": "12639"
  },
  {
    "text": "nets",
    "start": "12639",
    "end": "13519"
  },
  {
    "text": "as well i'll show you demonstration of",
    "start": "13519",
    "end": "15360"
  },
  {
    "text": "some other things you can do with it",
    "start": "15360",
    "end": "18480"
  },
  {
    "start": "18000",
    "end": "18000"
  },
  {
    "text": "first of all for those of you not",
    "start": "18480",
    "end": "20080"
  },
  {
    "text": "already familiar with nuts",
    "start": "20080",
    "end": "22640"
  },
  {
    "text": "nuts is a complete production problem",
    "start": "22640",
    "end": "25279"
  },
  {
    "text": "cloud native messaging system that is",
    "start": "25279",
    "end": "27920"
  },
  {
    "text": "made for developers and operators who",
    "start": "27920",
    "end": "29599"
  },
  {
    "text": "want to spend more time doing their job",
    "start": "29599",
    "end": "31840"
  },
  {
    "text": "and less time worrying about how to do",
    "start": "31840",
    "end": "34000"
  },
  {
    "text": "messaging",
    "start": "34000",
    "end": "35600"
  },
  {
    "text": "the dna of nuts is performance",
    "start": "35600",
    "end": "38559"
  },
  {
    "text": "simplicity",
    "start": "38559",
    "end": "39760"
  },
  {
    "text": "security and availability",
    "start": "39760",
    "end": "43040"
  },
  {
    "text": "it runs and can be deployed anywhere",
    "start": "43040",
    "end": "45360"
  },
  {
    "text": "from the cloud to the edge and in",
    "start": "45360",
    "end": "47200"
  },
  {
    "text": "between",
    "start": "47200",
    "end": "49600"
  },
  {
    "text": "nats2 is a complete messaging solution",
    "start": "50320",
    "end": "52480"
  },
  {
    "text": "because it provides the best coverage of",
    "start": "52480",
    "end": "54879"
  },
  {
    "text": "messaging features of any messaging",
    "start": "54879",
    "end": "57039"
  },
  {
    "text": "solution in order to illustrate that",
    "start": "57039",
    "end": "59359"
  },
  {
    "start": "58000",
    "end": "58000"
  },
  {
    "text": "last point let me go through a",
    "start": "59359",
    "end": "61359"
  },
  {
    "text": "non-exhaustive list of features that are",
    "start": "61359",
    "end": "64158"
  },
  {
    "text": "offered by nuts",
    "start": "64159",
    "end": "66880"
  },
  {
    "text": "the most basic functionality of nuts is",
    "start": "66880",
    "end": "69840"
  },
  {
    "text": "publish subscribe using subject based",
    "start": "69840",
    "end": "71840"
  },
  {
    "text": "addressing",
    "start": "71840",
    "end": "73600"
  },
  {
    "text": "nuts lets you do that with high speed",
    "start": "73600",
    "end": "76320"
  },
  {
    "text": "high fan out",
    "start": "76320",
    "end": "77600"
  },
  {
    "text": "and over 40 different client libraries",
    "start": "77600",
    "end": "79680"
  },
  {
    "text": "in as many languages",
    "start": "79680",
    "end": "82479"
  },
  {
    "text": "nuts also allows you to do request reply",
    "start": "82479",
    "end": "84720"
  },
  {
    "text": "with inbox messaging",
    "start": "84720",
    "end": "87840"
  },
  {
    "text": "and",
    "start": "87840",
    "end": "88720"
  },
  {
    "text": "queueing",
    "start": "88720",
    "end": "89840"
  },
  {
    "text": "durable subscribers",
    "start": "89840",
    "end": "91920"
  },
  {
    "text": "nuts also has streaming functionalities",
    "start": "91920",
    "end": "94880"
  },
  {
    "text": "with persistence of the streams",
    "start": "94880",
    "end": "97360"
  },
  {
    "text": "multiple replay policies exactly once",
    "start": "97360",
    "end": "99759"
  },
  {
    "text": "deliveries",
    "start": "99759",
    "end": "101040"
  },
  {
    "text": "and it uses an optimized raft quorum",
    "start": "101040",
    "end": "104479"
  },
  {
    "text": "mechanism",
    "start": "104479",
    "end": "106720"
  },
  {
    "text": "nuts",
    "start": "106720",
    "end": "107600"
  },
  {
    "text": "also offers security",
    "start": "107600",
    "end": "110000"
  },
  {
    "text": "from access control to encrypted",
    "start": "110000",
    "end": "112000"
  },
  {
    "text": "transports to multi-level delegated",
    "start": "112000",
    "end": "114640"
  },
  {
    "text": "administration",
    "start": "114640",
    "end": "116320"
  },
  {
    "text": "and",
    "start": "116320",
    "end": "117200"
  },
  {
    "text": "encryption at rest",
    "start": "117200",
    "end": "119520"
  },
  {
    "text": "nuts also has some pretty unique",
    "start": "119520",
    "end": "121840"
  },
  {
    "text": "features",
    "start": "121840",
    "end": "122799"
  },
  {
    "text": "such as subject mapping and the ability",
    "start": "122799",
    "end": "124960"
  },
  {
    "text": "to",
    "start": "124960",
    "end": "125920"
  },
  {
    "text": "apply limits to the subjects being",
    "start": "125920",
    "end": "128239"
  },
  {
    "text": "published",
    "start": "128239",
    "end": "130720"
  },
  {
    "text": "also nuts is extremely scalable you can",
    "start": "130720",
    "end": "133680"
  },
  {
    "text": "easily create clusters of servers",
    "start": "133680",
    "end": "136720"
  },
  {
    "text": "and create",
    "start": "136720",
    "end": "138400"
  },
  {
    "text": "clusters of clusters",
    "start": "138400",
    "end": "140319"
  },
  {
    "text": "to be able to have multi-cluster global",
    "start": "140319",
    "end": "142400"
  },
  {
    "text": "deployments over for example multiple",
    "start": "142400",
    "end": "144640"
  },
  {
    "text": "clouds",
    "start": "144640",
    "end": "145760"
  },
  {
    "text": "whether it's",
    "start": "145760",
    "end": "146879"
  },
  {
    "text": "on cloud on-premise ldh or any hybrid",
    "start": "146879",
    "end": "150879"
  },
  {
    "text": "thereof",
    "start": "150879",
    "end": "151920"
  },
  {
    "text": "it also provides service geo-affinity",
    "start": "151920",
    "end": "155599"
  },
  {
    "text": "and finally",
    "start": "155599",
    "end": "157200"
  },
  {
    "text": "nuts",
    "start": "157200",
    "end": "158319"
  },
  {
    "text": "has easy configuration",
    "start": "158319",
    "end": "160480"
  },
  {
    "text": "very lightweight servers that can run in",
    "start": "160480",
    "end": "162319"
  },
  {
    "text": "the very low-end hardware",
    "start": "162319",
    "end": "164720"
  },
  {
    "text": "it is easily available",
    "start": "164720",
    "end": "166959"
  },
  {
    "text": "and is open source and has a great",
    "start": "166959",
    "end": "169040"
  },
  {
    "text": "community around it",
    "start": "169040",
    "end": "172560"
  },
  {
    "start": "172000",
    "end": "172000"
  },
  {
    "text": "now if you were to look at other",
    "start": "173280",
    "end": "175840"
  },
  {
    "text": "messaging solutions out there you would",
    "start": "175840",
    "end": "177920"
  },
  {
    "text": "find that they only cover parts of all",
    "start": "177920",
    "end": "180560"
  },
  {
    "text": "these features",
    "start": "180560",
    "end": "182159"
  },
  {
    "text": "and",
    "start": "182159",
    "end": "182959"
  },
  {
    "text": "some of these features are also not",
    "start": "182959",
    "end": "184959"
  },
  {
    "text": "covered by any",
    "start": "184959",
    "end": "187519"
  },
  {
    "text": "now in practice what this means is that",
    "start": "187519",
    "end": "190400"
  },
  {
    "text": "you end up with a patchwork of various",
    "start": "190400",
    "end": "193120"
  },
  {
    "text": "messaging systems",
    "start": "193120",
    "end": "194720"
  },
  {
    "text": "covering different somewhat overlapping",
    "start": "194720",
    "end": "198319"
  },
  {
    "text": "sets of features that are completely",
    "start": "198319",
    "end": "200640"
  },
  {
    "text": "independent from each other and",
    "start": "200640",
    "end": "202000"
  },
  {
    "text": "therefore not integrated whether it is",
    "start": "202000",
    "end": "204640"
  },
  {
    "text": "for security ability to exchange data",
    "start": "204640",
    "end": "207599"
  },
  {
    "text": "between them",
    "start": "207599",
    "end": "208799"
  },
  {
    "text": "ability to apply policies",
    "start": "208799",
    "end": "211200"
  },
  {
    "text": "etc",
    "start": "211200",
    "end": "213840"
  },
  {
    "start": "215000",
    "end": "215000"
  },
  {
    "text": "now let's look at all the new features",
    "start": "215200",
    "end": "217200"
  },
  {
    "text": "that were introduced in nuts2",
    "start": "217200",
    "end": "220000"
  },
  {
    "text": "as this timeline shows there were a lot",
    "start": "220000",
    "end": "222159"
  },
  {
    "text": "of features that were introduced",
    "start": "222159",
    "end": "223760"
  },
  {
    "text": "recently",
    "start": "223760",
    "end": "225120"
  },
  {
    "text": "with the release 2.2",
    "start": "225120",
    "end": "227440"
  },
  {
    "text": "i'm going to now go through some of them",
    "start": "227440",
    "end": "230799"
  },
  {
    "start": "230000",
    "end": "230000"
  },
  {
    "text": "let's start with security the security",
    "start": "230799",
    "end": "233599"
  },
  {
    "text": "nut is your article and allows for",
    "start": "233599",
    "end": "236239"
  },
  {
    "text": "delegated administration",
    "start": "236239",
    "end": "239439"
  },
  {
    "text": "nets uses sign json web tokens to",
    "start": "239439",
    "end": "242159"
  },
  {
    "text": "describe operators accounts and users",
    "start": "242159",
    "end": "246000"
  },
  {
    "text": "operators create accounts",
    "start": "246000",
    "end": "248319"
  },
  {
    "text": "accounts create users",
    "start": "248319",
    "end": "250480"
  },
  {
    "text": "and users present their credentials and",
    "start": "250480",
    "end": "252959"
  },
  {
    "text": "permissions in the form of assigned jwt",
    "start": "252959",
    "end": "256239"
  },
  {
    "text": "such that there is no need to configure",
    "start": "256239",
    "end": "258560"
  },
  {
    "text": "the servers with account or user data",
    "start": "258560",
    "end": "262560"
  },
  {
    "text": "the servers only need to know about",
    "start": "262560",
    "end": "264560"
  },
  {
    "text": "operators",
    "start": "264560",
    "end": "266160"
  },
  {
    "text": "and they use the operator public key to",
    "start": "266160",
    "end": "268720"
  },
  {
    "text": "validate the trust chain of the jwt",
    "start": "268720",
    "end": "273840"
  },
  {
    "text": "this also means that the servers never",
    "start": "273840",
    "end": "275840"
  },
  {
    "text": "need to know any of the private keys",
    "start": "275840",
    "end": "278720"
  },
  {
    "text": "you can therefore easily delegate",
    "start": "278720",
    "end": "280960"
  },
  {
    "text": "administration of the creation of",
    "start": "280960",
    "end": "282960"
  },
  {
    "text": "accounts and users",
    "start": "282960",
    "end": "284560"
  },
  {
    "text": "by distributing the appropriate private",
    "start": "284560",
    "end": "286720"
  },
  {
    "text": "keys to the right people",
    "start": "286720",
    "end": "289040"
  },
  {
    "start": "289000",
    "end": "289000"
  },
  {
    "text": "one thing to understand about security",
    "start": "289040",
    "end": "291040"
  },
  {
    "text": "in the context of nuts",
    "start": "291040",
    "end": "293520"
  },
  {
    "text": "is that although you could manage",
    "start": "293520",
    "end": "295919"
  },
  {
    "text": "individual end users with it most of the",
    "start": "295919",
    "end": "298720"
  },
  {
    "text": "time because nuts is a middleware users",
    "start": "298720",
    "end": "301360"
  },
  {
    "text": "are actually applications so you want to",
    "start": "301360",
    "end": "303759"
  },
  {
    "text": "assign users to adapter instances or",
    "start": "303759",
    "end": "306720"
  },
  {
    "text": "single tenant instances of services and",
    "start": "306720",
    "end": "308800"
  },
  {
    "text": "message streams again applications only",
    "start": "308800",
    "end": "311759"
  },
  {
    "text": "need to present their jwt to the servers",
    "start": "311759",
    "end": "314639"
  },
  {
    "text": "to be authenticated those jdbts are",
    "start": "314639",
    "end": "317919"
  },
  {
    "text": "created by the account keyholders and",
    "start": "317919",
    "end": "320479"
  },
  {
    "text": "hold the definition of which subjects",
    "start": "320479",
    "end": "322400"
  },
  {
    "text": "the user can publish and subscribe to",
    "start": "322400",
    "end": "326000"
  },
  {
    "text": "accounts there can be tenants or",
    "start": "326000",
    "end": "328320"
  },
  {
    "text": "business units",
    "start": "328320",
    "end": "330240"
  },
  {
    "text": "each account has an isolated subject",
    "start": "330240",
    "end": "332720"
  },
  {
    "text": "namespace",
    "start": "332720",
    "end": "334160"
  },
  {
    "text": "what is published on subject a in one",
    "start": "334160",
    "end": "336720"
  },
  {
    "text": "account is normally not received on",
    "start": "336720",
    "end": "339199"
  },
  {
    "text": "subject a on another account",
    "start": "339199",
    "end": "342560"
  },
  {
    "text": "you would create accounts per single",
    "start": "342560",
    "end": "344479"
  },
  {
    "text": "tenant environments",
    "start": "344479",
    "end": "346880"
  },
  {
    "text": "for each of the shared multi-tenant",
    "start": "346880",
    "end": "349039"
  },
  {
    "text": "services and message streams",
    "start": "349039",
    "end": "351360"
  },
  {
    "text": "and for your control plane",
    "start": "351360",
    "end": "354160"
  },
  {
    "text": "the account jwts which are created by",
    "start": "354160",
    "end": "356240"
  },
  {
    "text": "the operators",
    "start": "356240",
    "end": "357520"
  },
  {
    "text": "define the message routing between the",
    "start": "357520",
    "end": "359600"
  },
  {
    "text": "accounts",
    "start": "359600",
    "end": "360960"
  },
  {
    "text": "you can specify",
    "start": "360960",
    "end": "362720"
  },
  {
    "text": "which subjects are imported and exported",
    "start": "362720",
    "end": "365680"
  },
  {
    "text": "and which services are imported and",
    "start": "365680",
    "end": "368240"
  },
  {
    "text": "exported between accounts",
    "start": "368240",
    "end": "372240"
  },
  {
    "start": "372000",
    "end": "372000"
  },
  {
    "text": "i would like to now spend a little bit",
    "start": "372319",
    "end": "374160"
  },
  {
    "text": "of time going over what is arguably the",
    "start": "374160",
    "end": "377360"
  },
  {
    "text": "most interesting and important new",
    "start": "377360",
    "end": "379199"
  },
  {
    "text": "feature that was introduced in nuts 2.2",
    "start": "379199",
    "end": "381840"
  },
  {
    "text": "a couple of months ago",
    "start": "381840",
    "end": "383440"
  },
  {
    "text": "jet stream",
    "start": "383440",
    "end": "386080"
  },
  {
    "text": "that stream replaces stan",
    "start": "386080",
    "end": "388240"
  },
  {
    "text": "also sometimes known as net streaming",
    "start": "388240",
    "end": "391520"
  },
  {
    "text": "as a new",
    "start": "391520",
    "end": "392960"
  },
  {
    "text": "streaming functionality of nuts",
    "start": "392960",
    "end": "397199"
  },
  {
    "text": "stun is now legacy and while though",
    "start": "397199",
    "end": "400639"
  },
  {
    "text": "still maintained",
    "start": "400639",
    "end": "402240"
  },
  {
    "text": "if you do any new development",
    "start": "402240",
    "end": "404720"
  },
  {
    "text": "streaming with nuts",
    "start": "404720",
    "end": "406560"
  },
  {
    "text": "you should use netstring",
    "start": "406560",
    "end": "408800"
  },
  {
    "text": "and you should also consider migrating",
    "start": "408800",
    "end": "411039"
  },
  {
    "text": "your existing nat streaming applications",
    "start": "411039",
    "end": "413199"
  },
  {
    "text": "to jet stream",
    "start": "413199",
    "end": "416000"
  },
  {
    "text": "that stream takes upon lessons learned",
    "start": "416160",
    "end": "419039"
  },
  {
    "text": "from stan and builds and is a brand new",
    "start": "419039",
    "end": "421840"
  },
  {
    "text": "implementation that offers many",
    "start": "421840",
    "end": "424160"
  },
  {
    "text": "advantages over stats this trim provides",
    "start": "424160",
    "end": "427360"
  },
  {
    "text": "much better integration with core nuts",
    "start": "427360",
    "end": "429520"
  },
  {
    "text": "for example",
    "start": "429520",
    "end": "431360"
  },
  {
    "text": "this allows you to provide a transition",
    "start": "431360",
    "end": "434000"
  },
  {
    "text": "path for existing coordinates",
    "start": "434000",
    "end": "436240"
  },
  {
    "text": "application to streaming",
    "start": "436240",
    "end": "438800"
  },
  {
    "text": "just stream is distributed and",
    "start": "438800",
    "end": "440960"
  },
  {
    "text": "consistent",
    "start": "440960",
    "end": "442400"
  },
  {
    "text": "it uses a nuts optimized rough quorum",
    "start": "442400",
    "end": "445360"
  },
  {
    "text": "algorithm which is much faster and",
    "start": "445360",
    "end": "448080"
  },
  {
    "text": "requires no configuration compared to",
    "start": "448080",
    "end": "450639"
  },
  {
    "text": "for example a praxis based quorum",
    "start": "450639",
    "end": "453360"
  },
  {
    "text": "algorithm you can create gesture",
    "start": "453360",
    "end": "455360"
  },
  {
    "text": "clusters of one",
    "start": "455360",
    "end": "457360"
  },
  {
    "text": "three or five servers depending on",
    "start": "457360",
    "end": "459919"
  },
  {
    "text": "whether you do not want any kind of",
    "start": "459919",
    "end": "461599"
  },
  {
    "text": "falterers or wanna be able to survive",
    "start": "461599",
    "end": "464400"
  },
  {
    "text": "one or two servers going down at the",
    "start": "464400",
    "end": "466639"
  },
  {
    "text": "same time",
    "start": "466639",
    "end": "468000"
  },
  {
    "text": "just stream implements disaster recovery",
    "start": "468000",
    "end": "470639"
  },
  {
    "text": "through mirroring between strips",
    "start": "470639",
    "end": "474160"
  },
  {
    "text": "dresstrim supports file or memory",
    "start": "474160",
    "end": "476800"
  },
  {
    "text": "storage and offers decoupled flow",
    "start": "476800",
    "end": "479680"
  },
  {
    "text": "control between the publishers to stream",
    "start": "479680",
    "end": "482080"
  },
  {
    "text": "and the subscribers of that stream",
    "start": "482080",
    "end": "485199"
  },
  {
    "text": "jetstream is naturally integrated and",
    "start": "485199",
    "end": "488000"
  },
  {
    "text": "benefits from that security system",
    "start": "488000",
    "end": "491599"
  },
  {
    "text": "this means for example you can easily",
    "start": "491599",
    "end": "493440"
  },
  {
    "text": "control the import export and copying of",
    "start": "493440",
    "end": "496000"
  },
  {
    "text": "streams between accounts",
    "start": "496000",
    "end": "498879"
  },
  {
    "text": "streams can have multiple sources",
    "start": "498879",
    "end": "502000"
  },
  {
    "text": "meaning multiple subjects",
    "start": "502000",
    "end": "504879"
  },
  {
    "text": "including using wildcards",
    "start": "504879",
    "end": "507520"
  },
  {
    "text": "or other strings",
    "start": "507520",
    "end": "509199"
  },
  {
    "text": "that stream has three retention policies",
    "start": "509199",
    "end": "511840"
  },
  {
    "text": "available",
    "start": "511840",
    "end": "513279"
  },
  {
    "text": "either limits meaning that messages are",
    "start": "513279",
    "end": "516640"
  },
  {
    "text": "stored into the stream only up until",
    "start": "516640",
    "end": "520000"
  },
  {
    "text": "some limit is reached at which point you",
    "start": "520000",
    "end": "522399"
  },
  {
    "text": "could decide to discard either the",
    "start": "522399",
    "end": "524480"
  },
  {
    "text": "oldest or the newest message in the",
    "start": "524480",
    "end": "526320"
  },
  {
    "text": "stream in order to make room for the new",
    "start": "526320",
    "end": "528399"
  },
  {
    "text": "message",
    "start": "528399",
    "end": "529360"
  },
  {
    "text": "interests meaning that the data is only",
    "start": "529360",
    "end": "531600"
  },
  {
    "text": "kept in a string",
    "start": "531600",
    "end": "533120"
  },
  {
    "text": "for as long as they are either durable",
    "start": "533120",
    "end": "535600"
  },
  {
    "text": "or ephemeral subscribers on that string",
    "start": "535600",
    "end": "539440"
  },
  {
    "text": "and finally working queue which allows",
    "start": "539440",
    "end": "542000"
  },
  {
    "text": "you to use a stream as a cue",
    "start": "542000",
    "end": "546000"
  },
  {
    "text": "you can impose per stream and per",
    "start": "546480",
    "end": "549120"
  },
  {
    "text": "subject message limits",
    "start": "549120",
    "end": "551760"
  },
  {
    "text": "like size for example",
    "start": "551760",
    "end": "555200"
  },
  {
    "text": "that stream gives you many options when",
    "start": "555760",
    "end": "557839"
  },
  {
    "text": "it comes to replay policies",
    "start": "557839",
    "end": "560560"
  },
  {
    "text": "you can decide to replay all of the",
    "start": "560560",
    "end": "562399"
  },
  {
    "text": "message in a string",
    "start": "562399",
    "end": "564000"
  },
  {
    "text": "the last message in a string",
    "start": "564000",
    "end": "566399"
  },
  {
    "text": "the last message for each subject in a",
    "start": "566399",
    "end": "569200"
  },
  {
    "text": "stream",
    "start": "569200",
    "end": "570720"
  },
  {
    "text": "plus new messages or starting at a",
    "start": "570720",
    "end": "573600"
  },
  {
    "text": "sequence number or by starting at a",
    "start": "573600",
    "end": "576480"
  },
  {
    "text": "point in time finally you can decide of",
    "start": "576480",
    "end": "579519"
  },
  {
    "text": "the speed at which you want the replay",
    "start": "579519",
    "end": "581600"
  },
  {
    "text": "to happen you can either decide to have",
    "start": "581600",
    "end": "584320"
  },
  {
    "text": "instant replay policy which means that",
    "start": "584320",
    "end": "586399"
  },
  {
    "text": "the data is sent to you as quickly as",
    "start": "586399",
    "end": "589120"
  },
  {
    "text": "you can consume it",
    "start": "589120",
    "end": "591120"
  },
  {
    "text": "or to go with the original replay policy",
    "start": "591120",
    "end": "593519"
  },
  {
    "text": "which means that the data is replayed to",
    "start": "593519",
    "end": "595200"
  },
  {
    "text": "you at the same speed at which it was",
    "start": "595200",
    "end": "597600"
  },
  {
    "text": "published in the first place",
    "start": "597600",
    "end": "599839"
  },
  {
    "text": "let's stream provides you with both push",
    "start": "599839",
    "end": "602240"
  },
  {
    "text": "consumers which are event driven",
    "start": "602240",
    "end": "605200"
  },
  {
    "text": "and pool consumers which are demand",
    "start": "605200",
    "end": "607680"
  },
  {
    "text": "driven",
    "start": "607680",
    "end": "608880"
  },
  {
    "text": "allow for batching",
    "start": "608880",
    "end": "610560"
  },
  {
    "text": "and make for very easy horizontal",
    "start": "610560",
    "end": "613200"
  },
  {
    "text": "scaling of the processing of our",
    "start": "613200",
    "end": "615279"
  },
  {
    "text": "messages in the stream",
    "start": "615279",
    "end": "617519"
  },
  {
    "text": "you can have durable or ephemeral",
    "start": "617519",
    "end": "619760"
  },
  {
    "text": "consumers as well as",
    "start": "619760",
    "end": "622079"
  },
  {
    "text": "explicit or automatic acknowledgements",
    "start": "622079",
    "end": "626640"
  },
  {
    "text": "meaning that the application can decide",
    "start": "626640",
    "end": "629279"
  },
  {
    "text": "to explicitly acknowledge",
    "start": "629279",
    "end": "631680"
  },
  {
    "text": "or let the library do it you can have",
    "start": "631680",
    "end": "633920"
  },
  {
    "text": "multiple kinds of acknowledgements in",
    "start": "633920",
    "end": "635920"
  },
  {
    "text": "jet stream",
    "start": "635920",
    "end": "637440"
  },
  {
    "text": "you can send back an ack to signal the",
    "start": "637440",
    "end": "639680"
  },
  {
    "text": "correct processing of the message",
    "start": "639680",
    "end": "642000"
  },
  {
    "text": "and knack",
    "start": "642000",
    "end": "643120"
  },
  {
    "text": "to signal that you could not process the",
    "start": "643120",
    "end": "645040"
  },
  {
    "text": "message and it should not be redelivered",
    "start": "645040",
    "end": "647040"
  },
  {
    "text": "to you",
    "start": "647040",
    "end": "648399"
  },
  {
    "text": "and an in-progress acknowledgement",
    "start": "648399",
    "end": "651279"
  },
  {
    "text": "which simply means that you need more",
    "start": "651279",
    "end": "653279"
  },
  {
    "text": "time to process the message",
    "start": "653279",
    "end": "655600"
  },
  {
    "text": "and do not want the servers to try to",
    "start": "655600",
    "end": "658399"
  },
  {
    "text": "resend that same message to yourself or",
    "start": "658399",
    "end": "660880"
  },
  {
    "text": "another pool consumer because you're",
    "start": "660880",
    "end": "663200"
  },
  {
    "text": "taking too long to process it",
    "start": "663200",
    "end": "665519"
  },
  {
    "text": "you can have explicit or all",
    "start": "665519",
    "end": "667120"
  },
  {
    "text": "acknowledgments",
    "start": "667120",
    "end": "668399"
  },
  {
    "text": "meaning you explicitly acknowledge just",
    "start": "668399",
    "end": "671040"
  },
  {
    "text": "a particular message in the stream",
    "start": "671040",
    "end": "673600"
  },
  {
    "text": "or all of the messages older than the",
    "start": "673600",
    "end": "676800"
  },
  {
    "text": "message you are currently acknowledging",
    "start": "676800",
    "end": "680000"
  },
  {
    "text": "bitstream even offers exactly one's",
    "start": "680000",
    "end": "682480"
  },
  {
    "text": "delivery",
    "start": "682480",
    "end": "683760"
  },
  {
    "text": "a functionality that is often missing",
    "start": "683760",
    "end": "686800"
  },
  {
    "text": "from messaging systems",
    "start": "686800",
    "end": "689440"
  },
  {
    "text": "it does it by combining message to",
    "start": "689440",
    "end": "692079"
  },
  {
    "text": "duplication at the source allowing",
    "start": "692079",
    "end": "694480"
  },
  {
    "text": "applications to insert a unique id in a",
    "start": "694480",
    "end": "696959"
  },
  {
    "text": "header field for the messages that they",
    "start": "696959",
    "end": "699120"
  },
  {
    "text": "publish",
    "start": "699120",
    "end": "700320"
  },
  {
    "text": "and double acknowledgements on the",
    "start": "700320",
    "end": "702320"
  },
  {
    "text": "receiving side",
    "start": "702320",
    "end": "703920"
  },
  {
    "text": "where the consumer of the message",
    "start": "703920",
    "end": "705920"
  },
  {
    "text": "sends the net measurement back to the",
    "start": "705920",
    "end": "707440"
  },
  {
    "text": "server",
    "start": "707440",
    "end": "708560"
  },
  {
    "text": "expressing the fact that it has",
    "start": "708560",
    "end": "710079"
  },
  {
    "text": "successfully consumed a message and then",
    "start": "710079",
    "end": "713120"
  },
  {
    "text": "waits for a segment measurement back",
    "start": "713120",
    "end": "715279"
  },
  {
    "text": "from the server",
    "start": "715279",
    "end": "716639"
  },
  {
    "text": "telling it that the server has indeed",
    "start": "716639",
    "end": "718800"
  },
  {
    "text": "received that acknowledgement properly",
    "start": "718800",
    "end": "722079"
  },
  {
    "text": "that stream also allows you to mirror",
    "start": "722079",
    "end": "724079"
  },
  {
    "text": "streams which are some pretty",
    "start": "724079",
    "end": "726000"
  },
  {
    "text": "interesting implications besides the",
    "start": "726000",
    "end": "728079"
  },
  {
    "text": "obvious disaster recovery",
    "start": "728079",
    "end": "731200"
  },
  {
    "text": "because you just team is integrated with",
    "start": "731200",
    "end": "733360"
  },
  {
    "text": "nuts",
    "start": "733360",
    "end": "734800"
  },
  {
    "text": "all streams are easily observable",
    "start": "734800",
    "end": "738079"
  },
  {
    "text": "you can always subscribe and get a copy",
    "start": "738079",
    "end": "740880"
  },
  {
    "text": "of all the messages that are going into",
    "start": "740880",
    "end": "742639"
  },
  {
    "text": "the street the stream also offers",
    "start": "742639",
    "end": "745600"
  },
  {
    "text": "another functionality that is often",
    "start": "745600",
    "end": "747279"
  },
  {
    "text": "missing which is encryption at rest of",
    "start": "747279",
    "end": "749600"
  },
  {
    "text": "the data being persisted",
    "start": "749600",
    "end": "752480"
  },
  {
    "text": "and last but not least just stream is",
    "start": "752480",
    "end": "755519"
  },
  {
    "text": "like not",
    "start": "755519",
    "end": "756639"
  },
  {
    "text": "simple and easy to administer it has low",
    "start": "756639",
    "end": "760000"
  },
  {
    "text": "amounts of configuration and can be",
    "start": "760000",
    "end": "762399"
  },
  {
    "text": "easily managed",
    "start": "762399",
    "end": "764720"
  },
  {
    "text": "and finally one of the greatest features",
    "start": "764720",
    "end": "766720"
  },
  {
    "text": "of jetstream is its speed",
    "start": "766720",
    "end": "769760"
  },
  {
    "text": "with jet stream you can achieve some",
    "start": "769760",
    "end": "771760"
  },
  {
    "text": "very high throughput",
    "start": "771760",
    "end": "773519"
  },
  {
    "text": "putting messages inside trends",
    "start": "773519",
    "end": "776160"
  },
  {
    "text": "and especially replaying messages from",
    "start": "776160",
    "end": "778560"
  },
  {
    "text": "streams those rates can be orders of",
    "start": "778560",
    "end": "781040"
  },
  {
    "text": "magnitudes faster than what you get out",
    "start": "781040",
    "end": "783519"
  },
  {
    "text": "of other streaming solutions",
    "start": "783519",
    "end": "787120"
  },
  {
    "start": "787000",
    "end": "787000"
  },
  {
    "text": "moving on from jet stream i would now",
    "start": "787120",
    "end": "789360"
  },
  {
    "text": "like to spend a little bit of time going",
    "start": "789360",
    "end": "791600"
  },
  {
    "text": "over some of the unique functionalities",
    "start": "791600",
    "end": "794399"
  },
  {
    "text": "of nets one of them is subject mapping",
    "start": "794399",
    "end": "798000"
  },
  {
    "text": "subject mapping is relatively simple to",
    "start": "798000",
    "end": "800079"
  },
  {
    "text": "understand it's the ability to say that",
    "start": "800079",
    "end": "803279"
  },
  {
    "text": "any message published on subject through",
    "start": "803279",
    "end": "806079"
  },
  {
    "text": "will be written to be on subject bar",
    "start": "806079",
    "end": "810399"
  },
  {
    "text": "the obvious interest of doing this is",
    "start": "810399",
    "end": "813120"
  },
  {
    "text": "that it gives you administrative control",
    "start": "813120",
    "end": "816079"
  },
  {
    "text": "over the subject namespace",
    "start": "816079",
    "end": "818720"
  },
  {
    "text": "for example you could decide to map",
    "start": "818720",
    "end": "821519"
  },
  {
    "text": "messages sent to services.full",
    "start": "821519",
    "end": "824160"
  },
  {
    "text": "to service that food and demand",
    "start": "824160",
    "end": "827839"
  },
  {
    "text": "then later to change that mapping to",
    "start": "827839",
    "end": "830160"
  },
  {
    "text": "service.food.v2",
    "start": "830160",
    "end": "832639"
  },
  {
    "text": "subject mapping also allows you to",
    "start": "832639",
    "end": "834800"
  },
  {
    "text": "reorder tokens in a subject",
    "start": "834800",
    "end": "837120"
  },
  {
    "text": "so for example",
    "start": "837120",
    "end": "838639"
  },
  {
    "text": "you can define a mapping from",
    "start": "838639",
    "end": "840160"
  },
  {
    "text": "bar.star.start",
    "start": "840160",
    "end": "842639"
  },
  {
    "text": "two bars",
    "start": "842639",
    "end": "843920"
  },
  {
    "text": "that the second token of the subject",
    "start": "843920",
    "end": "846639"
  },
  {
    "text": "that the first stacking",
    "start": "846639",
    "end": "848959"
  },
  {
    "text": "you can also do weight mappings for",
    "start": "848959",
    "end": "851920"
  },
  {
    "text": "forms of traffic shaping for example you",
    "start": "851920",
    "end": "854399"
  },
  {
    "text": "can decide to map ninety percent of the",
    "start": "854399",
    "end": "857440"
  },
  {
    "text": "traffic on service.full to",
    "start": "857440",
    "end": "860279"
  },
  {
    "text": "service.food.one and only ten percent to",
    "start": "860279",
    "end": "863120"
  },
  {
    "text": "service food.v2",
    "start": "863120",
    "end": "866079"
  },
  {
    "text": "this allows you to do things such as ap",
    "start": "866079",
    "end": "868320"
  },
  {
    "text": "testing canary releases",
    "start": "868320",
    "end": "870959"
  },
  {
    "text": "and even if you redirect some of the",
    "start": "870959",
    "end": "872800"
  },
  {
    "text": "traffic to a subject nobody is listening",
    "start": "872800",
    "end": "874880"
  },
  {
    "text": "to",
    "start": "874880",
    "end": "875760"
  },
  {
    "text": "introduce artificial message loss",
    "start": "875760",
    "end": "879440"
  },
  {
    "text": "you can always reload the changes to",
    "start": "879440",
    "end": "881839"
  },
  {
    "text": "this mapping without any downtime on the",
    "start": "881839",
    "end": "884560"
  },
  {
    "text": "servers",
    "start": "884560",
    "end": "886320"
  },
  {
    "text": "finally the mappings can be global or",
    "start": "886320",
    "end": "889279"
  },
  {
    "text": "per account or indeed can happen as you",
    "start": "889279",
    "end": "892639"
  },
  {
    "text": "route messages between accounts",
    "start": "892639",
    "end": "895680"
  },
  {
    "text": "another new thing that was introduced in",
    "start": "895680",
    "end": "897519"
  },
  {
    "start": "896000",
    "end": "896000"
  },
  {
    "text": "nuts 2.2 that is worth going over is the",
    "start": "897519",
    "end": "900639"
  },
  {
    "text": "nuts command line interface tool",
    "start": "900639",
    "end": "904240"
  },
  {
    "text": "this is a command line interface tool",
    "start": "904240",
    "end": "906160"
  },
  {
    "text": "for interacting monitoring and",
    "start": "906160",
    "end": "908480"
  },
  {
    "text": "administering nuts and streams",
    "start": "908480",
    "end": "912320"
  },
  {
    "text": "you can use it for doing very basic nats",
    "start": "912320",
    "end": "915519"
  },
  {
    "text": "operations such as publish a message",
    "start": "915519",
    "end": "918000"
  },
  {
    "text": "listen to message published on a subject",
    "start": "918000",
    "end": "920560"
  },
  {
    "text": "send requests run wait for replies",
    "start": "920560",
    "end": "923519"
  },
  {
    "text": "listen for requests and send replies",
    "start": "923519",
    "end": "927040"
  },
  {
    "text": "you can use it to review",
    "start": "927040",
    "end": "929519"
  },
  {
    "text": "reports and information about servers",
    "start": "929519",
    "end": "932560"
  },
  {
    "text": "connections streams and consumers",
    "start": "932560",
    "end": "935839"
  },
  {
    "text": "you can use it to listen to system",
    "start": "935839",
    "end": "939839"
  },
  {
    "text": "and view a lot of information about the",
    "start": "939839",
    "end": "942160"
  },
  {
    "text": "details of the connections account",
    "start": "942160",
    "end": "944240"
  },
  {
    "text": "latencies servers etc",
    "start": "944240",
    "end": "948160"
  },
  {
    "text": "you can also use it to perform",
    "start": "948160",
    "end": "950399"
  },
  {
    "text": "on-the-fly administration and monitoring",
    "start": "950399",
    "end": "952800"
  },
  {
    "text": "of streams and stream consumers",
    "start": "952800",
    "end": "956160"
  },
  {
    "text": "you can not only create delete streams",
    "start": "956160",
    "end": "959199"
  },
  {
    "text": "and consumers",
    "start": "959199",
    "end": "960720"
  },
  {
    "text": "but you can view information and reports",
    "start": "960720",
    "end": "964079"
  },
  {
    "text": "on streams",
    "start": "964079",
    "end": "965519"
  },
  {
    "text": "you can also view messages and size",
    "start": "965519",
    "end": "967920"
  },
  {
    "text": "streams monitor streams and even",
    "start": "967920",
    "end": "970800"
  },
  {
    "text": "administratively remove messages from",
    "start": "970800",
    "end": "973040"
  },
  {
    "text": "streams",
    "start": "973040",
    "end": "974560"
  },
  {
    "text": "you can as well use the tool to backup",
    "start": "974560",
    "end": "977600"
  },
  {
    "text": "and restore streams",
    "start": "977600",
    "end": "979519"
  },
  {
    "text": "and even interact with a stream's raf",
    "start": "979519",
    "end": "982399"
  },
  {
    "text": "cluster such as for example for",
    "start": "982399",
    "end": "984639"
  },
  {
    "text": "triggering a new leader election",
    "start": "984639",
    "end": "988560"
  },
  {
    "text": "the knight's command line interface tool",
    "start": "988560",
    "end": "990240"
  },
  {
    "text": "also allows you to do key value",
    "start": "990240",
    "end": "992720"
  },
  {
    "text": "operations",
    "start": "992720",
    "end": "994800"
  },
  {
    "text": "and",
    "start": "994800",
    "end": "995600"
  },
  {
    "text": "run all kinds of benchmarks to measure",
    "start": "995600",
    "end": "998160"
  },
  {
    "text": "the performance of nets and jet stream",
    "start": "998160",
    "end": "1000959"
  },
  {
    "text": "in your target environment",
    "start": "1000959",
    "end": "1003680"
  },
  {
    "text": "you can create benchmarks of coordinates",
    "start": "1003680",
    "end": "1006399"
  },
  {
    "text": "publish and subscribe",
    "start": "1006399",
    "end": "1008240"
  },
  {
    "text": "request reply and for judge stream",
    "start": "1008240",
    "end": "1012399"
  },
  {
    "text": "using sync or asynchronous publishers",
    "start": "1012399",
    "end": "1015839"
  },
  {
    "text": "and consumers",
    "start": "1015839",
    "end": "1018480"
  },
  {
    "text": "one thing to remember about nuts command",
    "start": "1018480",
    "end": "1020800"
  },
  {
    "text": "line interface 2 is it has a cheap sheet",
    "start": "1020800",
    "end": "1024160"
  },
  {
    "text": "built in",
    "start": "1024160",
    "end": "1025839"
  },
  {
    "text": "you can use nat's cheat to get a generic",
    "start": "1025839",
    "end": "1029678"
  },
  {
    "text": "cheat sheet",
    "start": "1029679",
    "end": "1031199"
  },
  {
    "text": "or not cheat and a particular comment",
    "start": "1031199",
    "end": "1034798"
  },
  {
    "text": "such as for example nuts cheat bench to",
    "start": "1034799",
    "end": "1038319"
  },
  {
    "text": "get examples and more information about",
    "start": "1038319",
    "end": "1040798"
  },
  {
    "text": "what you can do with this particular",
    "start": "1040799",
    "end": "1042798"
  },
  {
    "text": "comment",
    "start": "1042799",
    "end": "1044798"
  },
  {
    "text": "and finally",
    "start": "1044799",
    "end": "1046240"
  },
  {
    "start": "1045000",
    "end": "1045000"
  },
  {
    "text": "as we transition to matthias's part of",
    "start": "1046240",
    "end": "1049039"
  },
  {
    "text": "the presentation",
    "start": "1049039",
    "end": "1050720"
  },
  {
    "text": "i want to spend a little bit of time",
    "start": "1050720",
    "end": "1052480"
  },
  {
    "text": "introducing the last important feature",
    "start": "1052480",
    "end": "1054720"
  },
  {
    "text": "that was introduced in nuts too",
    "start": "1054720",
    "end": "1057039"
  },
  {
    "text": "which is the flexible deployments",
    "start": "1057039",
    "end": "1059360"
  },
  {
    "text": "architecture the nuts deployment",
    "start": "1059360",
    "end": "1061679"
  },
  {
    "text": "architectures allow you to deploy on",
    "start": "1061679",
    "end": "1064559"
  },
  {
    "text": "multiple data centers",
    "start": "1064559",
    "end": "1066480"
  },
  {
    "text": "multiple regions multiple clouds",
    "start": "1066480",
    "end": "1069440"
  },
  {
    "text": "on-prem",
    "start": "1069440",
    "end": "1070880"
  },
  {
    "text": "on the edge even if that edge is only",
    "start": "1070880",
    "end": "1073120"
  },
  {
    "text": "partially connected",
    "start": "1073120",
    "end": "1074640"
  },
  {
    "text": "or any combinations thereof",
    "start": "1074640",
    "end": "1077280"
  },
  {
    "start": "1077000",
    "end": "1077000"
  },
  {
    "text": "the simplest",
    "start": "1077280",
    "end": "1078720"
  },
  {
    "text": "not deployment architecture",
    "start": "1078720",
    "end": "1080400"
  },
  {
    "text": "is a single net server and clients",
    "start": "1080400",
    "end": "1082799"
  },
  {
    "text": "connecting directly to it",
    "start": "1082799",
    "end": "1085520"
  },
  {
    "text": "very quickly you will want either fault",
    "start": "1085520",
    "end": "1087520"
  },
  {
    "text": "tolerance and or scalability",
    "start": "1087520",
    "end": "1090400"
  },
  {
    "start": "1090000",
    "end": "1090000"
  },
  {
    "text": "and want to create",
    "start": "1090400",
    "end": "1092160"
  },
  {
    "text": "nuts clusters that's cluster are made up",
    "start": "1092160",
    "end": "1095840"
  },
  {
    "text": "of any number of nats server that",
    "start": "1095840",
    "end": "1097919"
  },
  {
    "text": "communicate with each other and service",
    "start": "1097919",
    "end": "1101039"
  },
  {
    "text": "any number of client applications",
    "start": "1101039",
    "end": "1104320"
  },
  {
    "text": "now a single cluster has limits",
    "start": "1104320",
    "end": "1108320"
  },
  {
    "text": "for example you may not want to",
    "start": "1108320",
    "end": "1110559"
  },
  {
    "text": "necessarily distribute a single cluster",
    "start": "1110559",
    "end": "1113440"
  },
  {
    "text": "over various data centers or multiple",
    "start": "1113440",
    "end": "1116160"
  },
  {
    "text": "cloud operators",
    "start": "1116160",
    "end": "1118080"
  },
  {
    "text": "but this",
    "start": "1118080",
    "end": "1119520"
  },
  {
    "start": "1119000",
    "end": "1119000"
  },
  {
    "text": "nuts has the concept of super clusters",
    "start": "1119520",
    "end": "1124400"
  },
  {
    "text": "super clusters are made up of clusters",
    "start": "1124400",
    "end": "1127200"
  },
  {
    "text": "of nat servers that are connected",
    "start": "1127200",
    "end": "1129120"
  },
  {
    "text": "together by gateway connections",
    "start": "1129120",
    "end": "1132080"
  },
  {
    "text": "gateway connections",
    "start": "1132080",
    "end": "1133919"
  },
  {
    "text": "wrought messages intelligently between",
    "start": "1133919",
    "end": "1137520"
  },
  {
    "text": "clusters",
    "start": "1137520",
    "end": "1139280"
  },
  {
    "text": "they do not send messages across unless",
    "start": "1139280",
    "end": "1142320"
  },
  {
    "text": "they really need to be sent across",
    "start": "1142320",
    "end": "1145840"
  },
  {
    "text": "one example of this is",
    "start": "1145840",
    "end": "1148080"
  },
  {
    "text": "the fact that superclusters",
    "start": "1148080",
    "end": "1151280"
  },
  {
    "text": "leverage geoaffinity for services",
    "start": "1151280",
    "end": "1154880"
  },
  {
    "text": "what i mean by this is that if you had",
    "start": "1154880",
    "end": "1157200"
  },
  {
    "text": "clan applications connected to the",
    "start": "1157200",
    "end": "1158960"
  },
  {
    "text": "servers and publishing requests on a",
    "start": "1158960",
    "end": "1160720"
  },
  {
    "text": "particular subject",
    "start": "1160720",
    "end": "1162880"
  },
  {
    "text": "the super cluster is smart enough",
    "start": "1162880",
    "end": "1165360"
  },
  {
    "text": "to know that if there is a listener",
    "start": "1165360",
    "end": "1168000"
  },
  {
    "text": "currently servicing request on this",
    "start": "1168000",
    "end": "1170160"
  },
  {
    "text": "subject within the cluster",
    "start": "1170160",
    "end": "1172480"
  },
  {
    "text": "the request should be sent",
    "start": "1172480",
    "end": "1174320"
  },
  {
    "text": "to that listener",
    "start": "1174320",
    "end": "1176320"
  },
  {
    "text": "only in the case the cluster knows that",
    "start": "1176320",
    "end": "1178480"
  },
  {
    "text": "there are no currently available",
    "start": "1178480",
    "end": "1180559"
  },
  {
    "text": "consumer for those request messages",
    "start": "1180559",
    "end": "1183280"
  },
  {
    "text": "within the cluster",
    "start": "1183280",
    "end": "1185039"
  },
  {
    "text": "to then then send the request over the",
    "start": "1185039",
    "end": "1187760"
  },
  {
    "text": "gateway connection to other clusters",
    "start": "1187760",
    "end": "1190559"
  },
  {
    "text": "whether maybe another instance of the",
    "start": "1190559",
    "end": "1192160"
  },
  {
    "text": "service that will process those requests",
    "start": "1192160",
    "end": "1195679"
  },
  {
    "text": "this allows you to have both disaster",
    "start": "1195679",
    "end": "1198320"
  },
  {
    "text": "recovery",
    "start": "1198320",
    "end": "1199919"
  },
  {
    "text": "and the ability to leverage data",
    "start": "1199919",
    "end": "1202240"
  },
  {
    "text": "locality when",
    "start": "1202240",
    "end": "1204840"
  },
  {
    "text": "needed finally",
    "start": "1204840",
    "end": "1207600"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "nuts also has the concept of a leaf node",
    "start": "1207600",
    "end": "1212159"
  },
  {
    "text": "lyft node is a sort of an extension of a",
    "start": "1212159",
    "end": "1215679"
  },
  {
    "text": "cluster that you can deploy wherever you",
    "start": "1215679",
    "end": "1218480"
  },
  {
    "text": "need one",
    "start": "1218480",
    "end": "1220559"
  },
  {
    "text": "and now i'm going to let matias tell you",
    "start": "1220559",
    "end": "1223360"
  },
  {
    "text": "more about lyft nodes and what you can",
    "start": "1223360",
    "end": "1225440"
  },
  {
    "text": "do with them hello my name is matthias",
    "start": "1225440",
    "end": "1227919"
  },
  {
    "text": "i'm a software engineer at senedia i",
    "start": "1227919",
    "end": "1229919"
  },
  {
    "text": "want to give you a brief demo of our",
    "start": "1229919",
    "end": "1231520"
  },
  {
    "text": "adaptive edge architecture let's begin",
    "start": "1231520",
    "end": "1235120"
  },
  {
    "text": "while you can connect your applications",
    "start": "1235120",
    "end": "1237039"
  },
  {
    "text": "directly to a net's cluster or",
    "start": "1237039",
    "end": "1238720"
  },
  {
    "text": "supercluster in the cloud",
    "start": "1238720",
    "end": "1240559"
  },
  {
    "text": "some applications might have additional",
    "start": "1240559",
    "end": "1242640"
  },
  {
    "text": "requirements such as",
    "start": "1242640",
    "end": "1244720"
  },
  {
    "text": "the ability to communicate locally while",
    "start": "1244720",
    "end": "1247200"
  },
  {
    "text": "internet connectivity is down",
    "start": "1247200",
    "end": "1249360"
  },
  {
    "text": "this is typically the case when the edge",
    "start": "1249360",
    "end": "1251600"
  },
  {
    "text": "moves think ship or car",
    "start": "1251600",
    "end": "1254080"
  },
  {
    "text": "when internet service is generally",
    "start": "1254080",
    "end": "1255840"
  },
  {
    "text": "unreliable",
    "start": "1255840",
    "end": "1257200"
  },
  {
    "text": "or when you have so many say stores that",
    "start": "1257200",
    "end": "1260480"
  },
  {
    "text": "the sheer number times the small",
    "start": "1260480",
    "end": "1262320"
  },
  {
    "text": "likelihood of an outage is bound to make",
    "start": "1262320",
    "end": "1264799"
  },
  {
    "text": "a customer unhappy somewhere",
    "start": "1264799",
    "end": "1267760"
  },
  {
    "text": "our solution for this is to connect net",
    "start": "1267760",
    "end": "1270080"
  },
  {
    "text": "server as leaf nodes to your cluster or",
    "start": "1270080",
    "end": "1272559"
  },
  {
    "text": "supercluster in the cloud",
    "start": "1272559",
    "end": "1274559"
  },
  {
    "text": "applications will connect to leaf nodes",
    "start": "1274559",
    "end": "1277039"
  },
  {
    "text": "thus retaining the ability to",
    "start": "1277039",
    "end": "1278640"
  },
  {
    "text": "communicate among each other once the",
    "start": "1278640",
    "end": "1280799"
  },
  {
    "text": "leaf node connection is down",
    "start": "1280799",
    "end": "1284080"
  },
  {
    "text": "leaf nodes themselves are lightweight",
    "start": "1284080",
    "end": "1286159"
  },
  {
    "text": "and can run on a raspberry pi",
    "start": "1286159",
    "end": "1288559"
  },
  {
    "text": "to server in the cloud they appear",
    "start": "1288559",
    "end": "1290559"
  },
  {
    "text": "essentially as a client connection that",
    "start": "1290559",
    "end": "1293120"
  },
  {
    "text": "proxies non-local traffic of their",
    "start": "1293120",
    "end": "1295520"
  },
  {
    "text": "respective clients",
    "start": "1295520",
    "end": "1297919"
  },
  {
    "text": "i could set up a net supercluster as",
    "start": "1297919",
    "end": "1300400"
  },
  {
    "text": "done in other longer running demos but",
    "start": "1300400",
    "end": "1302960"
  },
  {
    "text": "in the interest of time i'll use ngs",
    "start": "1302960",
    "end": "1305280"
  },
  {
    "text": "which is a net supercluster hosted by",
    "start": "1305280",
    "end": "1307440"
  },
  {
    "text": "zunadia nats is built to be multi-tenant",
    "start": "1307440",
    "end": "1310480"
  },
  {
    "text": "operated as shared utility so instead i",
    "start": "1310480",
    "end": "1313360"
  },
  {
    "text": "focus on what a developer for the",
    "start": "1313360",
    "end": "1315120"
  },
  {
    "text": "adaptive edge would need to do",
    "start": "1315120",
    "end": "1317520"
  },
  {
    "text": "let me show the config",
    "start": "1317520",
    "end": "1319520"
  },
  {
    "text": "connecting a single server as leaf node",
    "start": "1319520",
    "end": "1321760"
  },
  {
    "text": "to a super cluster",
    "start": "1321760",
    "end": "1324400"
  },
  {
    "text": "this is your basic jet stream enabled",
    "start": "1324400",
    "end": "1326720"
  },
  {
    "text": "leaf node configuration",
    "start": "1326720",
    "end": "1330000"
  },
  {
    "text": "connected to",
    "start": "1331280",
    "end": "1332720"
  },
  {
    "text": "ngs in the cloud",
    "start": "1332720",
    "end": "1335520"
  },
  {
    "text": "i'm referencing environment variables",
    "start": "1335520",
    "end": "1339520"
  },
  {
    "text": "so i can easily make the necessary",
    "start": "1342320",
    "end": "1344159"
  },
  {
    "text": "adjustments to start this a second time",
    "start": "1344159",
    "end": "1346240"
  },
  {
    "text": "on the same box",
    "start": "1346240",
    "end": "1347679"
  },
  {
    "text": "so to start our leaf node",
    "start": "1347679",
    "end": "1350320"
  },
  {
    "text": "starting this will result in a server",
    "start": "1350320",
    "end": "1352400"
  },
  {
    "text": "listening on port 4 2 2 2",
    "start": "1352400",
    "end": "1355919"
  },
  {
    "text": "with server name and domain name set to",
    "start": "1355919",
    "end": "1358159"
  },
  {
    "text": "leaf 1",
    "start": "1358159",
    "end": "1359360"
  },
  {
    "text": "and store directory set to js store",
    "start": "1359360",
    "end": "1361919"
  },
  {
    "text": "leave one",
    "start": "1361919",
    "end": "1364480"
  },
  {
    "text": "to generate local traffic i subscribe on",
    "start": "1367039",
    "end": "1369440"
  },
  {
    "text": "a subject and publish once a second on",
    "start": "1369440",
    "end": "1371440"
  },
  {
    "text": "it as well",
    "start": "1371440",
    "end": "1374759"
  },
  {
    "text": "once a second",
    "start": "1376240",
    "end": "1378880"
  },
  {
    "text": "and then i do this a second time using",
    "start": "1385039",
    "end": "1387200"
  },
  {
    "text": "slightly different values for my",
    "start": "1387200",
    "end": "1388559"
  },
  {
    "text": "environment variables",
    "start": "1388559",
    "end": "1391600"
  },
  {
    "text": "and to keep traffic local and keep this",
    "start": "1394640",
    "end": "1396799"
  },
  {
    "text": "demo shorter i'm using a different",
    "start": "1396799",
    "end": "1398799"
  },
  {
    "text": "subject name here as well so",
    "start": "1398799",
    "end": "1401200"
  },
  {
    "text": "subject.2 versus subject.1",
    "start": "1401200",
    "end": "1405440"
  },
  {
    "text": "another requirement is to bridge",
    "start": "1406640",
    "end": "1408640"
  },
  {
    "text": "internet downtimes by persisting",
    "start": "1408640",
    "end": "1410880"
  },
  {
    "text": "important data and automatically upload",
    "start": "1410880",
    "end": "1412960"
  },
  {
    "text": "it once the connectivity is back",
    "start": "1412960",
    "end": "1415200"
  },
  {
    "text": "our solution for this is to have jet",
    "start": "1415200",
    "end": "1417039"
  },
  {
    "text": "stream our persistence layer enabled in",
    "start": "1417039",
    "end": "1419120"
  },
  {
    "text": "the cloud as well as in leaf nodes",
    "start": "1419120",
    "end": "1422159"
  },
  {
    "text": "inside a stream jet stream then records",
    "start": "1422159",
    "end": "1424559"
  },
  {
    "text": "whatever local traffic you're interested",
    "start": "1424559",
    "end": "1426480"
  },
  {
    "text": "in",
    "start": "1426480",
    "end": "1427440"
  },
  {
    "text": "a stream residing in the cloud extends",
    "start": "1427440",
    "end": "1430000"
  },
  {
    "text": "it up to source from the wands in each",
    "start": "1430000",
    "end": "1432080"
  },
  {
    "text": "leaf node",
    "start": "1432080",
    "end": "1433279"
  },
  {
    "text": "this causes the automatic download of",
    "start": "1433279",
    "end": "1435120"
  },
  {
    "text": "messages as they are stored locally",
    "start": "1435120",
    "end": "1437760"
  },
  {
    "text": "or in the event of an outage once",
    "start": "1437760",
    "end": "1440159"
  },
  {
    "text": "connectivity is back",
    "start": "1440159",
    "end": "1442480"
  },
  {
    "text": "the important part about this is to",
    "start": "1442480",
    "end": "1444640"
  },
  {
    "text": "specify domain inside the jet stream",
    "start": "1444640",
    "end": "1447279"
  },
  {
    "text": "config block this is what keeps a jet",
    "start": "1447279",
    "end": "1449679"
  },
  {
    "text": "stream in this leaf node independent",
    "start": "1449679",
    "end": "1452159"
  },
  {
    "text": "from the one in the cloud and makes it",
    "start": "1452159",
    "end": "1454320"
  },
  {
    "text": "available from anywhere within your",
    "start": "1454320",
    "end": "1456080"
  },
  {
    "text": "net's network under this name now i'm",
    "start": "1456080",
    "end": "1458799"
  },
  {
    "text": "creating a stream in each domain",
    "start": "1458799",
    "end": "1461039"
  },
  {
    "text": "using a pre-created config file for a",
    "start": "1461039",
    "end": "1463600"
  },
  {
    "text": "stream without limits",
    "start": "1463600",
    "end": "1466400"
  },
  {
    "text": "my currently active context always",
    "start": "1466400",
    "end": "1468559"
  },
  {
    "text": "connects me to the cloud thus i provide",
    "start": "1468559",
    "end": "1470720"
  },
  {
    "text": "the domain name to specify where i want",
    "start": "1470720",
    "end": "1472960"
  },
  {
    "text": "the stream name buffer created in",
    "start": "1472960",
    "end": "1476559"
  },
  {
    "text": "so here leave one",
    "start": "1476559",
    "end": "1478799"
  },
  {
    "text": "and leave two",
    "start": "1478799",
    "end": "1481200"
  },
  {
    "text": "to overwrite the ones in a config file i",
    "start": "1481200",
    "end": "1483840"
  },
  {
    "text": "specify subject used in the respective",
    "start": "1483840",
    "end": "1486559"
  },
  {
    "text": "domain",
    "start": "1486559",
    "end": "1488720"
  },
  {
    "text": "subject.2",
    "start": "1488720",
    "end": "1490480"
  },
  {
    "text": "subject.1",
    "start": "1490480",
    "end": "1493360"
  },
  {
    "text": "now we have created two streams with a",
    "start": "1495840",
    "end": "1498080"
  },
  {
    "text": "limit space retention policy in their",
    "start": "1498080",
    "end": "1500159"
  },
  {
    "text": "respective domains",
    "start": "1500159",
    "end": "1503120"
  },
  {
    "text": "for purposes of this demo i set the",
    "start": "1506640",
    "end": "1508720"
  },
  {
    "text": "limits to be unlimited",
    "start": "1508720",
    "end": "1512360"
  },
  {
    "text": "in the domain referencing the cloud",
    "start": "1516000",
    "end": "1518159"
  },
  {
    "text": "another stream is then sourcing from",
    "start": "1518159",
    "end": "1519919"
  },
  {
    "text": "both d streams",
    "start": "1519919",
    "end": "1522880"
  },
  {
    "text": "since i am sourcing from two streams",
    "start": "1524000",
    "end": "1526480"
  },
  {
    "text": "name buffer these are the names i",
    "start": "1526480",
    "end": "1528720"
  },
  {
    "text": "provide everything else i'll be asked",
    "start": "1528720",
    "end": "1531200"
  },
  {
    "text": "during the questionnaire",
    "start": "1531200",
    "end": "1534240"
  },
  {
    "text": "so yes from a different domain",
    "start": "1539360",
    "end": "1542559"
  },
  {
    "text": "leave one",
    "start": "1542559",
    "end": "1544799"
  },
  {
    "text": "yes",
    "start": "1544799",
    "end": "1546559"
  },
  {
    "text": "leave two",
    "start": "1546559",
    "end": "1549960"
  },
  {
    "text": "when looking at the stream report for",
    "start": "1556640",
    "end": "1558240"
  },
  {
    "text": "streams in ngs as well as the two",
    "start": "1558240",
    "end": "1560320"
  },
  {
    "text": "domains created",
    "start": "1560320",
    "end": "1563200"
  },
  {
    "text": "you will see that the message count for",
    "start": "1564960",
    "end": "1567120"
  },
  {
    "text": "the stream just created is roughly the",
    "start": "1567120",
    "end": "1569120"
  },
  {
    "text": "sum of the other two",
    "start": "1569120",
    "end": "1572158"
  },
  {
    "text": "roughly because of like timing when the",
    "start": "1572400",
    "end": "1574320"
  },
  {
    "text": "requests hit the server",
    "start": "1574320",
    "end": "1576240"
  },
  {
    "text": "so 217",
    "start": "1576240",
    "end": "1578480"
  },
  {
    "text": "109 109",
    "start": "1578480",
    "end": "1581520"
  },
  {
    "text": "so 218 but this request was made first",
    "start": "1581520",
    "end": "1584960"
  },
  {
    "text": "i'm also creating a durable push",
    "start": "1584960",
    "end": "1586880"
  },
  {
    "text": "consumer that will give us everything in",
    "start": "1586880",
    "end": "1588799"
  },
  {
    "text": "the stream just created",
    "start": "1588799",
    "end": "1592080"
  },
  {
    "text": "our",
    "start": "1596559",
    "end": "1597520"
  },
  {
    "text": "durable is called sirster",
    "start": "1597520",
    "end": "1599919"
  },
  {
    "text": "deliver policy all explicit",
    "start": "1599919",
    "end": "1602000"
  },
  {
    "text": "acknowledgement",
    "start": "1602000",
    "end": "1603840"
  },
  {
    "text": "uh replay policy instant flow controlled",
    "start": "1603840",
    "end": "1608480"
  },
  {
    "text": "and now i'm consuming from that",
    "start": "1608480",
    "end": "1613240"
  },
  {
    "text": "we already retrieved all the messages",
    "start": "1614559",
    "end": "1618159"
  },
  {
    "text": "they're now coming in",
    "start": "1618159",
    "end": "1619679"
  },
  {
    "text": "essentially alternating because the",
    "start": "1619679",
    "end": "1621520"
  },
  {
    "text": "stream is caught up and is getting the",
    "start": "1621520",
    "end": "1623200"
  },
  {
    "text": "messages as they're being sent on a",
    "start": "1623200",
    "end": "1625039"
  },
  {
    "text": "second by second basis",
    "start": "1625039",
    "end": "1626880"
  },
  {
    "text": "from each leaf node",
    "start": "1626880",
    "end": "1630000"
  },
  {
    "text": "to also demonstrate that this can cope",
    "start": "1630000",
    "end": "1632159"
  },
  {
    "text": "with an outage i'm quickly turning my",
    "start": "1632159",
    "end": "1634080"
  },
  {
    "text": "wifi on and off",
    "start": "1634080",
    "end": "1636080"
  },
  {
    "text": "i'm using ping to demonstrate that i'm",
    "start": "1636080",
    "end": "1638159"
  },
  {
    "text": "actually offline",
    "start": "1638159",
    "end": "1641559"
  },
  {
    "text": "so the wi-fi is off",
    "start": "1641840",
    "end": "1644960"
  },
  {
    "text": "below you can see that our publishers",
    "start": "1646080",
    "end": "1648080"
  },
  {
    "text": "and subscribers are happily continuing",
    "start": "1648080",
    "end": "1652640"
  },
  {
    "text": "directly connecting to leaf one you can",
    "start": "1653600",
    "end": "1656159"
  },
  {
    "text": "also see",
    "start": "1656159",
    "end": "1657360"
  },
  {
    "text": "that the message count for the stream",
    "start": "1657360",
    "end": "1659520"
  },
  {
    "text": "buffer is steadily increasing",
    "start": "1659520",
    "end": "1663520"
  },
  {
    "text": "and since the connection to ngs ngss",
    "start": "1664559",
    "end": "1667360"
  },
  {
    "text": "down the servers",
    "start": "1667360",
    "end": "1668960"
  },
  {
    "text": "print error logs as well",
    "start": "1668960",
    "end": "1670880"
  },
  {
    "text": "now i'm turning my wifi back on",
    "start": "1670880",
    "end": "1674559"
  },
  {
    "text": "there we go we're online",
    "start": "1677520",
    "end": "1680080"
  },
  {
    "text": "while the leaf nodes were offline we",
    "start": "1680080",
    "end": "1682080"
  },
  {
    "text": "kept storing data in local streams",
    "start": "1682080",
    "end": "1685120"
  },
  {
    "text": "yet on reconnect the data mist was",
    "start": "1685120",
    "end": "1687200"
  },
  {
    "text": "copied over and our message counts",
    "start": "1687200",
    "end": "1689919"
  },
  {
    "text": "should match up again",
    "start": "1689919",
    "end": "1692960"
  },
  {
    "text": "362 363",
    "start": "1694840",
    "end": "1697760"
  },
  {
    "text": "roughly comes up to 722",
    "start": "1697760",
    "end": "1701840"
  },
  {
    "text": "and our consumer",
    "start": "1701840",
    "end": "1703919"
  },
  {
    "text": "is",
    "start": "1703919",
    "end": "1704720"
  },
  {
    "text": "receiving messages as well",
    "start": "1704720",
    "end": "1707120"
  },
  {
    "text": "this is it for this demo i hope you",
    "start": "1707120",
    "end": "1708960"
  },
  {
    "text": "found this useful and i'm looking",
    "start": "1708960",
    "end": "1710559"
  },
  {
    "text": "forward to your questions",
    "start": "1710559",
    "end": "1714200"
  }
]