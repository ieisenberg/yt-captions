[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "hello everyone welcome to this talk on gateway api a new set of kubernetes apis for",
    "start": "160",
    "end": "6399"
  },
  {
    "text": "advanced routing i'm harry bachty i'm a software engineer at kong and with me today",
    "start": "6399",
    "end": "12240"
  },
  {
    "text": "i have rob scott who is a software engineer at google we've been working on this new api for a while and want to",
    "start": "12240",
    "end": "19039"
  },
  {
    "text": "take some time today to introduce you to the api and demonstrate some use cases that it enables",
    "start": "19039",
    "end": "25119"
  },
  {
    "text": "for the problems that you might be facing before we get started i want to mention that",
    "start": "25119",
    "end": "30480"
  },
  {
    "text": "this api is the result of a community-wide effort within the sig network api group in",
    "start": "30480",
    "end": "36800"
  },
  {
    "text": "kubernetes and this wouldn't have been possible without contributions from you know all",
    "start": "36800",
    "end": "42480"
  },
  {
    "text": "the members in that group now to set some expectation uh we're going to get",
    "start": "42480",
    "end": "49920"
  },
  {
    "start": "46000",
    "end": "86000"
  },
  {
    "text": "a little bit of give a little bit of background and then give some quick examples of the api which should",
    "start": "49920",
    "end": "55520"
  },
  {
    "text": "give you a good feel of how this api looks like and as we go through through this examples uh we'll explain",
    "start": "55520",
    "end": "62640"
  },
  {
    "text": "some key concepts in how why the api was designed the way it is",
    "start": "62640",
    "end": "68640"
  },
  {
    "text": "and then we have some cool demos to show some existing implementations of this api",
    "start": "68640",
    "end": "74640"
  },
  {
    "text": "and that and then we we conclude with some road map and future that is for this api",
    "start": "74640",
    "end": "81360"
  },
  {
    "text": "please feel free to ask questions during this entire talk so ingress api has been",
    "start": "81360",
    "end": "88240"
  },
  {
    "start": "86000",
    "end": "179000"
  },
  {
    "text": "around for a long time it has seen a lot of adoption with over 15 implementations of the api",
    "start": "88240",
    "end": "95600"
  },
  {
    "text": "but ingress was really aimed for simple use cases with time",
    "start": "95600",
    "end": "100960"
  },
  {
    "text": "users have expressed the need for more complicated and advanced use cases",
    "start": "100960",
    "end": "106560"
  },
  {
    "text": "and this has resulted in a wide variety of annotations to extend the ingress resource now all",
    "start": "106560",
    "end": "113040"
  },
  {
    "text": "these annotations do get the job done they result in a very poor user experience",
    "start": "113040",
    "end": "118560"
  },
  {
    "text": "as you know annotations are free for form strings so users have no validation",
    "start": "118560",
    "end": "124880"
  },
  {
    "text": "there is no consistency between features of different implementations and so on at the same time we have the",
    "start": "124880",
    "end": "131840"
  },
  {
    "text": "service resource which is seeing almost the similar problems as ingress resource",
    "start": "131840",
    "end": "137520"
  },
  {
    "text": "it too is getting a lot of custom annotations and it is now becoming bloated with",
    "start": "137520",
    "end": "143680"
  },
  {
    "text": "features which concern different areas of kubernetes one such area is load balancing and it's",
    "start": "143680",
    "end": "151040"
  },
  {
    "text": "been getting a lot of load balancing features the resource has become complicated",
    "start": "151040",
    "end": "156879"
  },
  {
    "text": "enough that it's now proving to be a little difficult to manage and evolve as we go on so these problems have",
    "start": "156879",
    "end": "164160"
  },
  {
    "text": "existed for a while uh um and then at cube consent san diego",
    "start": "164160",
    "end": "169440"
  },
  {
    "text": "in 2019 we came together and an idea started floating around",
    "start": "169440",
    "end": "175120"
  },
  {
    "text": "on how a new api could be used to solve these problems now with the background we're going to",
    "start": "175120",
    "end": "181120"
  },
  {
    "start": "179000",
    "end": "254000"
  },
  {
    "text": "present a simple example to get a feel of the api we have acne company an acme company",
    "start": "181120",
    "end": "187040"
  },
  {
    "text": "wants to launch an e-commerce store on its website",
    "start": "187040",
    "end": "192239"
  },
  {
    "text": "alice bob and carol are three employees of the companies who are in charge of the launch alice here is our",
    "start": "192239",
    "end": "199280"
  },
  {
    "text": "infrastructure provider which means she is responsible for provisioning new kubernetes clusters",
    "start": "199280",
    "end": "204799"
  },
  {
    "text": "uh which and including the overall environments that those clusters operated",
    "start": "204799",
    "end": "210000"
  },
  {
    "text": "bob is a cluster operator that means bob is responsible for administration of the entire cluster",
    "start": "210000",
    "end": "218319"
  },
  {
    "text": "which includes day two operations like network access management ensuring that applications have the",
    "start": "218319",
    "end": "224000"
  },
  {
    "text": "right permissions and application developers also have the right permissions to deploy",
    "start": "224000",
    "end": "229599"
  },
  {
    "text": "their applications under the cluster carol is finally our application",
    "start": "229599",
    "end": "235360"
  },
  {
    "text": "developer who is going to use the cluster that's been set up by alice and bob to deploy her application which means",
    "start": "235360",
    "end": "242720"
  },
  {
    "text": "she is responsible for application as well as routing configuration",
    "start": "242720",
    "end": "247760"
  },
  {
    "text": "let's see how alice bob and carol use gateway api to deploy their application",
    "start": "247760",
    "end": "255200"
  },
  {
    "start": "254000",
    "end": "404000"
  },
  {
    "text": "so first when alice creates new kubernetes clusters uh she ensures that each cluster gets",
    "start": "255200",
    "end": "261199"
  },
  {
    "text": "provisioned with two gateway classes an external lb and an internal lb",
    "start": "261199",
    "end": "267360"
  },
  {
    "text": "now what is the gateway class really a gateway class is a way to abstract away a type of",
    "start": "267360",
    "end": "275520"
  },
  {
    "text": "load balancing infrastructure that is available within the cluster",
    "start": "275520",
    "end": "280800"
  },
  {
    "text": "so external lb and internal llb here represent a kind of load balancing",
    "start": "280800",
    "end": "286800"
  },
  {
    "text": "infrastructure and these two gateway classes are being controlled",
    "start": "286800",
    "end": "292000"
  },
  {
    "text": "by a controller called acme dot io slash gateway controller",
    "start": "292000",
    "end": "297840"
  },
  {
    "text": "so once these gateway classes are present inside the cluster bob takes the",
    "start": "297919",
    "end": "303680"
  },
  {
    "text": "external lb gateway class and creates a gateway resource what this results in is behind the",
    "start": "303680",
    "end": "310240"
  },
  {
    "text": "scenes when a gateway resource is created an external load balancer is provisioned",
    "start": "310240",
    "end": "315600"
  },
  {
    "text": "for the cluster and the load balancer here is listening on port 80",
    "start": "315600",
    "end": "320960"
  },
  {
    "text": "for http requests and as requests come in those requests are made matched based on",
    "start": "320960",
    "end": "327759"
  },
  {
    "text": "http route resources notice how we have a selector label here",
    "start": "327759",
    "end": "335199"
  },
  {
    "text": "with the key of gateway and the value of acme external this would feel a little similar to how",
    "start": "335759",
    "end": "342160"
  },
  {
    "text": "service resource has a label selected for pods",
    "start": "342160",
    "end": "347680"
  },
  {
    "text": "so once bob has the gateway resource created carol can finally deploy her application",
    "start": "347919",
    "end": "354080"
  },
  {
    "text": "so carol goes ahead and creates an http route resource with the same label as you can see here",
    "start": "354080",
    "end": "360639"
  },
  {
    "text": "now this resource would feel very familiar to a lot of you as it relates very",
    "start": "360639",
    "end": "367199"
  },
  {
    "text": "closely with the ingress resource that we already have in kubernetes",
    "start": "367199",
    "end": "372319"
  },
  {
    "text": "here what this configuration is is directing the gateway is that all requests for acme dot io",
    "start": "372319",
    "end": "380319"
  },
  {
    "text": "with path prefix of slash store should be forwarded to acme store service on port 8080.",
    "start": "380319",
    "end": "389520"
  },
  {
    "text": "so this gives a an overview of how bob alice and carol work together",
    "start": "389600",
    "end": "396160"
  },
  {
    "text": "to deploy this e-commerce store application to their kubernetes",
    "start": "396160",
    "end": "401680"
  },
  {
    "text": "cluster using gateway api now you might ask a question this was",
    "start": "401680",
    "end": "407840"
  },
  {
    "start": "404000",
    "end": "464000"
  },
  {
    "text": "already possible with ingress why should we use gateway api which seems a little",
    "start": "407840",
    "end": "415120"
  },
  {
    "text": "more complicated than ingress resource and the answer there is gateway api really",
    "start": "415120",
    "end": "420960"
  },
  {
    "text": "shines with day two operations so let's say for example carol wants to",
    "start": "420960",
    "end": "426000"
  },
  {
    "text": "do a canary rollout of a new version of her application so in this case",
    "start": "426000",
    "end": "431840"
  },
  {
    "text": "she'll add a new forwarding target and forward a 1 in every 10 requests so",
    "start": "431840",
    "end": "438560"
  },
  {
    "text": "about 10 percent of the traffic to acme store canary application",
    "start": "438560",
    "end": "444479"
  },
  {
    "text": "now as she gains confidence in the new version of the application more traffic can be shifted from the old",
    "start": "444479",
    "end": "451360"
  },
  {
    "text": "version to the new version and ultimately all the traffic will be solved by the new version of the app",
    "start": "451360",
    "end": "458080"
  },
  {
    "text": "notice how she can do this without interacting with any of the gatewayer class admins",
    "start": "458080",
    "end": "465039"
  },
  {
    "text": "now at the same time imagine that bob wants to test out a new load balancer that their provider has",
    "start": "465039",
    "end": "473199"
  },
  {
    "text": "exposed to them so here bob goes ahead and creates another gateway resource",
    "start": "473199",
    "end": "480319"
  },
  {
    "text": "with the new gateway class and notice how the listener sections here for the old and the new gateway are",
    "start": "480319",
    "end": "487039"
  },
  {
    "text": "exactly similar so with this configuration all the existing http route",
    "start": "487039",
    "end": "493039"
  },
  {
    "text": "resources are associated now with two different gateway resources so now bob can go",
    "start": "493039",
    "end": "499759"
  },
  {
    "text": "ahead and test out all the flows from the new resource from the new gateway",
    "start": "499759",
    "end": "505599"
  },
  {
    "text": "and once satisfied can upgrade the gateway in their production environment this",
    "start": "505599",
    "end": "512000"
  },
  {
    "text": "is really cool because it does not in because bob does not have to talk to",
    "start": "512000",
    "end": "520080"
  },
  {
    "text": "any of the route owners and can get this job done with minimal without any interruption",
    "start": "520080",
    "end": "528320"
  },
  {
    "text": "now next imagine that alice is provisioning a clusters in new environments",
    "start": "528320",
    "end": "534959"
  },
  {
    "text": "and for some reason you have to use a different vendor in these",
    "start": "534959",
    "end": "540240"
  },
  {
    "text": "two environments so in one cluster the implementation from vendor a",
    "start": "540240",
    "end": "546560"
  },
  {
    "text": "is being used while the other cluster gateway api implementation from vendor b is being used now even though there are",
    "start": "546560",
    "end": "554000"
  },
  {
    "text": "these are two different environments alice wishes to provide a consistent and seamless experience across these two",
    "start": "554000",
    "end": "560959"
  },
  {
    "text": "environments and she can do that using gateway api",
    "start": "560959",
    "end": "566240"
  },
  {
    "text": "so hopefully this gives you a bit of feel of how the api looks like and how it how it's",
    "start": "566240",
    "end": "572880"
  },
  {
    "text": "designed we're going to get into more examples in the demo section of the talk but for now i would",
    "start": "572880",
    "end": "579440"
  },
  {
    "text": "like to focus on a few key concepts so as we have seen in our example",
    "start": "579440",
    "end": "584480"
  },
  {
    "start": "580000",
    "end": "712000"
  },
  {
    "text": "we have gateway class resource which is abstraction of a type of infrastructure and then we",
    "start": "584480",
    "end": "590880"
  },
  {
    "text": "have gateway resource which are a manifestation of the class meaning gateways represent actual load balancing",
    "start": "590880",
    "end": "599600"
  },
  {
    "text": "infrastructure within your company and then we have the route resources",
    "start": "599600",
    "end": "606880"
  },
  {
    "text": "which are bind to one or more gateways now even though this model looks a little complicated",
    "start": "606880",
    "end": "614000"
  },
  {
    "text": "uh it's day to day now even though the model looks a little complicated we expect most",
    "start": "614000",
    "end": "622000"
  },
  {
    "text": "users to spend over 90 percent of the time in configuring and",
    "start": "622000",
    "end": "627120"
  },
  {
    "text": "creating route resources we do not expect users to deal with gateway and",
    "start": "627120",
    "end": "633519"
  },
  {
    "text": "gateway class resource on a day-to-day basis those would change much more infrequently",
    "start": "633519",
    "end": "641040"
  },
  {
    "text": "now why is this hierarchical model important and it's important because we are",
    "start": "641040",
    "end": "646160"
  },
  {
    "text": "dealing with a shared infrastructure problem here with shared infra users want maximum",
    "start": "646160",
    "end": "653040"
  },
  {
    "text": "flexibility to make optimal use of shared resources but at the same time they want a",
    "start": "653040",
    "end": "660079"
  },
  {
    "text": "centralized control over that shared resources this is to ensure governance and proper",
    "start": "660079",
    "end": "668320"
  },
  {
    "text": "administration and make sure that the resources are utilized fairly and correctly and to do that",
    "start": "668320",
    "end": "677360"
  },
  {
    "text": "roles are mapped to each resource type as we have seen in our example the infrastructure infrastructure provider",
    "start": "677360",
    "end": "684000"
  },
  {
    "text": "takes care of the gateway class the cluster operator takes care of the gateway resources",
    "start": "684000",
    "end": "689519"
  },
  {
    "text": "and then application developers create route resources now this separation of privileges with",
    "start": "689519",
    "end": "696320"
  },
  {
    "text": "each role being responsible for a specific component strikes a very good balance between",
    "start": "696320",
    "end": "701760"
  },
  {
    "text": "flexibility and control now with this resource model laid out i",
    "start": "701760",
    "end": "707040"
  },
  {
    "text": "would like to invite rob to explain the goals and other key concepts of this api",
    "start": "707040",
    "end": "712240"
  },
  {
    "start": "712000",
    "end": "869000"
  },
  {
    "text": "that was a great intro to the api thanks so much harry i'm going to continue where harry left",
    "start": "712240",
    "end": "717680"
  },
  {
    "text": "off and talk about what our goals were as we were developing this api now of course we really wanted",
    "start": "717680",
    "end": "724399"
  },
  {
    "text": "this api to be role oriented and you've seen that throughout as harry has introduced the api he's shown how",
    "start": "724399",
    "end": "730880"
  },
  {
    "text": "an infrastructure provider a cluster operator and of course an application developer",
    "start": "730880",
    "end": "736320"
  },
  {
    "text": "can all work so nicely together to enable really powerful use cases",
    "start": "736320",
    "end": "741360"
  },
  {
    "text": "from the most simple example to more advanced use cases and this is a really important concept",
    "start": "741360",
    "end": "748240"
  },
  {
    "text": "that resources line up with roles and organizations because we really want to",
    "start": "748240",
    "end": "753920"
  },
  {
    "text": "enable effective and powerful are back in your organization so that you can grant appropriate",
    "start": "753920",
    "end": "760320"
  },
  {
    "text": "privileges to each person in your organization now we also want to ensure that this api",
    "start": "760320",
    "end": "767760"
  },
  {
    "text": "can be portable across a large number of implementations so similar to the ingress api we envision a",
    "start": "767760",
    "end": "774880"
  },
  {
    "text": "world where there are just countless implementations of this api and i've been really encouraged to see",
    "start": "774880",
    "end": "781600"
  },
  {
    "text": "the existing implementations the first early implementations of this api do really well and we're going to be",
    "start": "781600",
    "end": "788480"
  },
  {
    "text": "demoing some of them later on in this talk but that's really a goal we've tried to",
    "start": "788480",
    "end": "793760"
  },
  {
    "text": "involve as many implementers as possible to ensure that we're building an api",
    "start": "793760",
    "end": "798880"
  },
  {
    "text": "that can be supported broadly and is truly portable",
    "start": "798880",
    "end": "804000"
  },
  {
    "text": "now of course we want this to be an expressive api so instead of trying to find just the",
    "start": "804000",
    "end": "809760"
  },
  {
    "text": "smallest set of features that everyone supports instead we're trying to support a broad set of features that",
    "start": "809760",
    "end": "815920"
  },
  {
    "text": "a lot of people would like to use and then trying to build support into these",
    "start": "815920",
    "end": "821440"
  },
  {
    "text": "implementations so there's a lot more to say on why we're going for this more expressive",
    "start": "821440",
    "end": "828240"
  },
  {
    "text": "route but that's a key feature a key goal in this api to enable much more advanced",
    "start": "828240",
    "end": "834560"
  },
  {
    "text": "configuration and then finally we wanted this api to be extensible",
    "start": "834560",
    "end": "840240"
  },
  {
    "text": "because although we want this api service to be fairly large we also want it to be easy to extend",
    "start": "840240",
    "end": "847680"
  },
  {
    "text": "we don't want people to have to rely on all kinds of custom annotations or whatever to stack onto",
    "start": "847680",
    "end": "853120"
  },
  {
    "text": "this api we've built very intentional extension points throughout this api",
    "start": "853120",
    "end": "858399"
  },
  {
    "text": "to ensure that not only can it support lots of core use cases but also your custom",
    "start": "858399",
    "end": "865199"
  },
  {
    "text": "implementation specific use case if desired so how can we really make this portable",
    "start": "865199",
    "end": "872880"
  },
  {
    "start": "869000",
    "end": "974000"
  },
  {
    "text": "how can we really achieve this goal we have you know pretty big goal here of covering a broad surface area and still",
    "start": "872880",
    "end": "878720"
  },
  {
    "text": "making it portable so how can we do that well first we do want that wide set of functionality",
    "start": "878720",
    "end": "884560"
  },
  {
    "text": "in the core api but we also want to ensure that whatever doesn't fit in the core api is",
    "start": "884560",
    "end": "891519"
  },
  {
    "text": "easy to add in either through custom route types or really ways to extend existing types",
    "start": "891519",
    "end": "898880"
  },
  {
    "text": "that we already have we have custom filters we have really extension points throughout different resources",
    "start": "898880",
    "end": "905199"
  },
  {
    "text": "that feel very natural and also patterns to extend the api by attaching policy",
    "start": "905199",
    "end": "910959"
  },
  {
    "text": "or other types of resources and finally we want to establish three unique",
    "start": "910959",
    "end": "917600"
  },
  {
    "text": "conformance levels so what we've decided here is we'll have core extended and custom support levels so",
    "start": "917600",
    "end": "925600"
  },
  {
    "text": "instead of an all or nothing approach where you're either conformant with the api or you're not we have core features that",
    "start": "925600",
    "end": "932880"
  },
  {
    "text": "we expect every implementation to be fully conformed with but then we also have extended features",
    "start": "932880",
    "end": "938720"
  },
  {
    "text": "which we recognize not everyone is going to be able to support but of the implementations that",
    "start": "938720",
    "end": "944639"
  },
  {
    "text": "support it we expect them to follow a specific set of patterns that are lined up out in the stack and finally we make",
    "start": "944639",
    "end": "951920"
  },
  {
    "text": "room for custom conformance which is really just that last tier of implementation specific features and",
    "start": "951920",
    "end": "960079"
  },
  {
    "text": "implementations of concepts so this allows us to have a pretty broad",
    "start": "960079",
    "end": "965440"
  },
  {
    "text": "surface of what can be configured in the api while also ensuring that a large chunk of the api is",
    "start": "965440",
    "end": "971440"
  },
  {
    "text": "truly portable so a key concept in this api is that of",
    "start": "971440",
    "end": "977600"
  },
  {
    "start": "974000",
    "end": "1033000"
  },
  {
    "text": "routes and most of our demos and most of the talk so far has focused on http route",
    "start": "977600",
    "end": "983440"
  },
  {
    "text": "but i want to take some time to mention that we have other route tags we have tcp route udp",
    "start": "983440",
    "end": "988480"
  },
  {
    "text": "route tls route and of course we've left room open to add additional",
    "start": "988480",
    "end": "994320"
  },
  {
    "text": "route types we envision that there will probably be more route types added to the core api but in addition to that",
    "start": "994320",
    "end": "1002639"
  },
  {
    "text": "implementations may want to add their own custom route let's say they have a custom protocol or some very custom",
    "start": "1002639",
    "end": "1008800"
  },
  {
    "text": "matching logic that doesn't fit within our existing extension points maybe that turns into",
    "start": "1008800",
    "end": "1014560"
  },
  {
    "text": "a custom route type at least as a start we believe this provides a great deal of",
    "start": "1014560",
    "end": "1021279"
  },
  {
    "text": "flexibility with how you route your traffic and i think you know a large portion of",
    "start": "1021279",
    "end": "1027280"
  },
  {
    "text": "users are going to be able to configure their traffic with the core route types we already support",
    "start": "1027280",
    "end": "1034240"
  },
  {
    "start": "1033000",
    "end": "1099000"
  },
  {
    "text": "now when we talk about routes we really have to talk about how they're connected to gateways",
    "start": "1034240",
    "end": "1039760"
  },
  {
    "text": "and the key thing to remember is it's a two-way handshake between gateways and routes so really",
    "start": "1039760",
    "end": "1046720"
  },
  {
    "text": "routes and gateways both have to agree that they can be bound to each other that may sound a little complicated but",
    "start": "1046720",
    "end": "1054400"
  },
  {
    "text": "keep in mind that within the same namespace we have some pretty same defaults that makes it pretty easy to connect gateways and",
    "start": "1054400",
    "end": "1061679"
  },
  {
    "text": "routes in the same name space but there's also",
    "start": "1061679",
    "end": "1066720"
  },
  {
    "text": "a new kind of functionality which is gateways referencing routes in multiple",
    "start": "1066720",
    "end": "1072960"
  },
  {
    "text": "namespaces this is a really powerful concept that i think can be used really well",
    "start": "1072960",
    "end": "1078720"
  },
  {
    "text": "but when that happens we really want to make sure that both the gateways and routes are on board and that's why we have this",
    "start": "1078720",
    "end": "1085120"
  },
  {
    "text": "kind of two-way handshake where both the gateway and route have to agree with it",
    "start": "1085120",
    "end": "1090160"
  },
  {
    "text": "and you can read more on our docs we don't have enough time to cover it in proper detail here but that's a core",
    "start": "1090160",
    "end": "1096559"
  },
  {
    "text": "concept of this api and finally we can't talk about this without talking",
    "start": "1096559",
    "end": "1103280"
  },
  {
    "start": "1099000",
    "end": "1172000"
  },
  {
    "text": "about ingress because ingress is really a lot of inspiration for this api",
    "start": "1103280",
    "end": "1108880"
  },
  {
    "text": "and you may be wondering well okay what's happening to the ingress api and i'll say that i know of no plans to",
    "start": "1108880",
    "end": "1115200"
  },
  {
    "text": "deprecate or remove this api anytime in the near future i think it's going to be around for a very long time",
    "start": "1115200",
    "end": "1122640"
  },
  {
    "text": "where possible we're trying to port uh concepts back to ingress so as an example there are",
    "start": "1122640",
    "end": "1129840"
  },
  {
    "text": "tiny little tweaks we've made to the ingress api to help keep it consistent and up to date with the",
    "start": "1129840",
    "end": "1135039"
  },
  {
    "text": "gateway api but i should say that a lot of the new functionality we're adding",
    "start": "1135039",
    "end": "1140480"
  },
  {
    "text": "although it fits very naturally inside the gateway api it doesn't really fit well inside the ingress api so the",
    "start": "1140480",
    "end": "1146400"
  },
  {
    "text": "intent is still to keep the ingress api very simple and straightforward and the",
    "start": "1146400",
    "end": "1151440"
  },
  {
    "text": "gateway api will be the home of more advanced routing features functionality and",
    "start": "1151440",
    "end": "1157039"
  },
  {
    "text": "all this new effort so ingress is still there and if you like using ingress if it's",
    "start": "1157039",
    "end": "1162240"
  },
  {
    "text": "serving your use case as well that's great but gateway is going to enable a lot",
    "start": "1162240",
    "end": "1167520"
  },
  {
    "text": "more functionality and i'm excited what it about what it can offer all right we've made it to my favorite",
    "start": "1167520",
    "end": "1174080"
  },
  {
    "start": "1172000",
    "end": "1293000"
  },
  {
    "text": "section of this talk and that's the demos i get to highlight some of the great implementations that already support",
    "start": "1174080",
    "end": "1181039"
  },
  {
    "text": "gateway api and to get started we're going to use contour and in this case we're just",
    "start": "1181039",
    "end": "1187919"
  },
  {
    "text": "going to use a very simple example that looks very similar to what we already showcased earlier",
    "start": "1187919",
    "end": "1194320"
  },
  {
    "text": "in this case we've got a acme contour gateway and a acme store hdb route that we're",
    "start": "1194320",
    "end": "1201200"
  },
  {
    "text": "going to use to publish the acme store so this will look familiar but we have a",
    "start": "1201200",
    "end": "1207440"
  },
  {
    "text": "very basic gateway it's listening on port 80 and it supports",
    "start": "1207440",
    "end": "1212880"
  },
  {
    "text": "http routes and it will match or bind to any route that has the label",
    "start": "1212880",
    "end": "1218960"
  },
  {
    "text": "gateway acme external so now our route obviously has that",
    "start": "1218960",
    "end": "1224240"
  },
  {
    "text": "label and then you can see it's matching requests to acme.io",
    "start": "1224240",
    "end": "1229360"
  },
  {
    "text": "with the path store and it will forward those requests onto the acme store service",
    "start": "1229360",
    "end": "1236799"
  },
  {
    "text": "okay so let's see how this works in practice first we want to apply the yaml we showed on the previous slides for",
    "start": "1236799",
    "end": "1242720"
  },
  {
    "text": "gateway and route and once those are installed we want to go ahead and",
    "start": "1242720",
    "end": "1248240"
  },
  {
    "text": "check for our external ip for contour in this case that starts with 35 188 we",
    "start": "1248240",
    "end": "1254720"
  },
  {
    "text": "can use that to make some simple curl requests but first we want to get a quick overview of the service acme store",
    "start": "1254720",
    "end": "1261280"
  },
  {
    "text": "and the pods that we'll actually be routing to now when we do a simple curl request",
    "start": "1261280",
    "end": "1267200"
  },
  {
    "text": "against that ip address you can see the pod name is one of those acme store pods so it's getting routed",
    "start": "1267200",
    "end": "1273840"
  },
  {
    "text": "correctly the reason we know this is all the containers through all our demos are going to be using a where my",
    "start": "1273840",
    "end": "1280000"
  },
  {
    "text": "image that prints out all this useful information for us when we make a request and of course if we do a few more",
    "start": "1280000",
    "end": "1286480"
  },
  {
    "text": "requests you're going to see that our requests get routed to different pods each time just as you'd expect",
    "start": "1286480",
    "end": "1293679"
  },
  {
    "start": "1293000",
    "end": "1411000"
  },
  {
    "text": "our second demo is really just an extension of the first one and in this case we're going to add a",
    "start": "1293679",
    "end": "1300000"
  },
  {
    "text": "gateway with istio now this is admittedly a really simple demo we take",
    "start": "1300000",
    "end": "1305760"
  },
  {
    "text": "the existing configuration we already had in the first demo and we just had an a new istio gateway",
    "start": "1305760",
    "end": "1313120"
  },
  {
    "text": "and you may look at this and say well yeah this is really simple and that's by design you can imagine",
    "start": "1313120",
    "end": "1318559"
  },
  {
    "text": "this has really cool implications when you're starting to talk about day two operations you've had",
    "start": "1318559",
    "end": "1323840"
  },
  {
    "text": "gateways running for a long time and you want to test an update you want to test new configuration or a new",
    "start": "1323840",
    "end": "1329840"
  },
  {
    "text": "implementation or just a different vendor altogether whatever it happens to be",
    "start": "1329840",
    "end": "1335280"
  },
  {
    "text": "you can just spin up a new gateway send traffic to it and see what happens alongside your existing",
    "start": "1335280",
    "end": "1342320"
  },
  {
    "text": "gateway that's continuing to serve all your production traffic without issue now you can reuse all your routes you",
    "start": "1342320",
    "end": "1348080"
  },
  {
    "text": "don't need to reconfigure anything below the stack it just works you can just add a new gateway",
    "start": "1348080",
    "end": "1354000"
  },
  {
    "text": "so you can imagine if you're trying to do seamless replacement for gateways smooth upgrades whatever it happens to",
    "start": "1354000",
    "end": "1359760"
  },
  {
    "text": "be this is a really powerful concept but also i think this shows just how",
    "start": "1359760",
    "end": "1365440"
  },
  {
    "text": "powerful the portability component of this api is so we're going to take a new gateway and",
    "start": "1365440",
    "end": "1372480"
  },
  {
    "text": "this is going to be really identical to the gateway we showed for contour but instead we're going to use the istio",
    "start": "1372480",
    "end": "1379600"
  },
  {
    "text": "gateway class okay let's test this out first we need to apply",
    "start": "1379600",
    "end": "1384799"
  },
  {
    "text": "the istio gateway that we showed in the previous slide and now we want to get an external ip",
    "start": "1384799",
    "end": "1390799"
  },
  {
    "text": "for istio so we can send some sample requests in this case that starts with 34 122.",
    "start": "1390799",
    "end": "1397360"
  },
  {
    "text": "we'll send a quick curl request and you can see that we're getting served responses from",
    "start": "1397360",
    "end": "1402799"
  },
  {
    "text": "the same acme store pods as before we can curl a couple more times and",
    "start": "1402799",
    "end": "1408000"
  },
  {
    "text": "again the same pods are responding all right in our third demo we're going",
    "start": "1408000",
    "end": "1414159"
  },
  {
    "start": "1411000",
    "end": "1520000"
  },
  {
    "text": "to use trafic to show how route header matching works so this example may look familiar to you",
    "start": "1414159",
    "end": "1422240"
  },
  {
    "text": "we're going to do canary traffic splitting but instead of before where we did percentage based traffic splitting we're",
    "start": "1422240",
    "end": "1430000"
  },
  {
    "text": "going to do something a little bit differently we're going to say any request that has a specific header",
    "start": "1430000",
    "end": "1436240"
  },
  {
    "text": "should go to our canary service and everything else should go to our stable service okay so",
    "start": "1436240",
    "end": "1444320"
  },
  {
    "text": "in that case our gateway looks very similar but for this demo we're using traffic so create a new",
    "start": "1444320",
    "end": "1449919"
  },
  {
    "text": "gateway and we use the traffic gateway class and with that",
    "start": "1449919",
    "end": "1455360"
  },
  {
    "text": "we're going to use an http route that is just a little bit more complicated",
    "start": "1455360",
    "end": "1460400"
  },
  {
    "text": "in this case you can see our first rule says match any request that has header serve",
    "start": "1460400",
    "end": "1467120"
  },
  {
    "text": "equals canary and send it to our acme canary service",
    "start": "1467120",
    "end": "1472640"
  },
  {
    "text": "and every other request by default should still go to the acme stable service",
    "start": "1472640",
    "end": "1478559"
  },
  {
    "text": "that's all there is to it so to start we're going to apply the gateway and route yaml from the",
    "start": "1478559",
    "end": "1484000"
  },
  {
    "text": "previous two slides with those in place we can get an",
    "start": "1484000",
    "end": "1489279"
  },
  {
    "text": "external ip for traffic in this case that starts with 34-123",
    "start": "1489279",
    "end": "1494799"
  },
  {
    "text": "we'll use that ip to make a couple sample requests first a request that specifies that",
    "start": "1494799",
    "end": "1500640"
  },
  {
    "text": "header serve equals canary and you can see we're getting a response from",
    "start": "1500640",
    "end": "1506159"
  },
  {
    "text": "the acme canary pod if we make the same request again but without that header specified",
    "start": "1506159",
    "end": "1512240"
  },
  {
    "text": "we'll get a response from the acme stable pod so traffic is routing our requests",
    "start": "1512240",
    "end": "1517360"
  },
  {
    "text": "exactly as we hoped it would and finally my favorite demo is a way we",
    "start": "1517360",
    "end": "1523600"
  },
  {
    "text": "can combine two new apis to work really well together",
    "start": "1523600",
    "end": "1528880"
  },
  {
    "text": "so of course sig network has been hard at work on gateway api and we're demoing that",
    "start": "1528880",
    "end": "1534240"
  },
  {
    "text": "here but i wanted to bring in some work by sig multi-cluster as they've been working on multi-cluster",
    "start": "1534240",
    "end": "1540840"
  },
  {
    "text": "services and we can combine those both on gke and show just how powerful",
    "start": "1540840",
    "end": "1547279"
  },
  {
    "text": "the combination can be so if you look at this diagram you're going to say well this looks",
    "start": "1547279",
    "end": "1553840"
  },
  {
    "text": "like almost an exact copy of the example we just showed and you're right it's very similar this",
    "start": "1553840",
    "end": "1559840"
  },
  {
    "text": "is still traffic splitting but the difference is that we have three different clusters involved here",
    "start": "1559840",
    "end": "1566320"
  },
  {
    "text": "so we have a cluster one which is includes store c1 as a service we have",
    "start": "1566320",
    "end": "1573039"
  },
  {
    "text": "cluster two which includes store c2 as a service and then we have a config cluster which",
    "start": "1573039",
    "end": "1579120"
  },
  {
    "text": "has a gateway and a route that's targeting both of these services",
    "start": "1579120",
    "end": "1585120"
  },
  {
    "text": "okay this seems pretty neat and simple but of course it's not quite as simple",
    "start": "1585120",
    "end": "1591279"
  },
  {
    "text": "to make that cross namespace reference instead we need some help from the",
    "start": "1591279",
    "end": "1596960"
  },
  {
    "text": "multi-cluster services api so for that we add",
    "start": "1596960",
    "end": "1602320"
  },
  {
    "text": "this concept of a service export and a service export is actually really simple",
    "start": "1602320",
    "end": "1607919"
  },
  {
    "text": "it just just create this tiny service export resource right alongside your service and you say",
    "start": "1607919",
    "end": "1614480"
  },
  {
    "text": "i want to export this service to the rest of my connected clusters that's all there is to it and then those",
    "start": "1614480",
    "end": "1621200"
  },
  {
    "text": "service import resources you see are automatically created and they represent",
    "start": "1621200",
    "end": "1627360"
  },
  {
    "text": "services that can be reachable in other clusters so in this case we'd actually have",
    "start": "1627360",
    "end": "1632400"
  },
  {
    "text": "service import resources in all our clusters but i've only highlighted the ones that",
    "start": "1632400",
    "end": "1637520"
  },
  {
    "text": "we're actually using right now so to illustrate that let's look at what",
    "start": "1637520",
    "end": "1643679"
  },
  {
    "text": "these actually will look like so first we have a service export that's the only thing we have to create",
    "start": "1643679",
    "end": "1650240"
  },
  {
    "text": "and that says take my store c2 service and export it to the other clusters i'm connected",
    "start": "1650240",
    "end": "1656399"
  },
  {
    "text": "to and then automatically you get service import resources created in those other",
    "start": "1656399",
    "end": "1662720"
  },
  {
    "text": "clusters and that's what we can target with our http route",
    "start": "1662720",
    "end": "1668960"
  },
  {
    "text": "so again let's take a quick look at our gateway this is also going to look very similar but",
    "start": "1668960",
    "end": "1674960"
  },
  {
    "text": "we're using a gke gateway class instead and one detail i want to point out in this specific example we're using",
    "start": "1674960",
    "end": "1682000"
  },
  {
    "text": "an internal load balancer instead of an external one there will be a number of gka gateway",
    "start": "1682000",
    "end": "1687520"
  },
  {
    "text": "classes supported by this api but in this case i wanted to show what an internal load balancer looked like",
    "start": "1687520",
    "end": "1695279"
  },
  {
    "text": "now the second part of this is the route and you can see that so far we've been focusing on forwarding",
    "start": "1695279",
    "end": "1701279"
  },
  {
    "text": "the services but you can also forward to any kind of generic backend with an",
    "start": "1701279",
    "end": "1706960"
  },
  {
    "text": "object reference and in this case we're forwarding to a service import so that",
    "start": "1706960",
    "end": "1713120"
  },
  {
    "text": "multi-cluster service resource and so we're sending half of our traffic to store c1 and the other half of our",
    "start": "1713120",
    "end": "1720080"
  },
  {
    "text": "traffic to store c2 all right let's see this in action we'll apply the gateway and route",
    "start": "1720080",
    "end": "1726880"
  },
  {
    "text": "yaml that we saw in the previous two slides and then we'll get the ip address associated with the",
    "start": "1726880",
    "end": "1733120"
  },
  {
    "text": "gateway we just created in this case because it's an internal load balancer",
    "start": "1733120",
    "end": "1738240"
  },
  {
    "text": "our ip address it starts with 192.168. so we can use that ip address ssh into a",
    "start": "1738240",
    "end": "1745600"
  },
  {
    "text": "machine on the network and export that ip address to simplify making curl requests",
    "start": "1745600",
    "end": "1752000"
  },
  {
    "text": "and with that export we can make some simple curl requests to this load balancer and what we're",
    "start": "1752000",
    "end": "1758799"
  },
  {
    "text": "seeing here is our traffic is not only going between different pods it's going between different clusters",
    "start": "1758799",
    "end": "1765039"
  },
  {
    "text": "in this example we have two clusters one is called ap and the other is gke5 and we're bouncing",
    "start": "1765039",
    "end": "1771200"
  },
  {
    "text": "back and forth between those clusters with each request we make that was a really cool demo and i love",
    "start": "1771200",
    "end": "1778799"
  },
  {
    "text": "when we can see the kubernetes community working so well together across ziggs we've got sig multi-cluster",
    "start": "1778799",
    "end": "1784799"
  },
  {
    "text": "and sig network apis working really well together and these apis enable",
    "start": "1784799",
    "end": "1790799"
  },
  {
    "text": "a lot more functionality than we can demo so header modification cross name space",
    "start": "1790799",
    "end": "1796320"
  },
  {
    "text": "route selection advanced tls configuration custom route filters traffic mirroring",
    "start": "1796320",
    "end": "1801600"
  },
  {
    "text": "l4 protocols there's just so much more that we can do here and unfortunately i",
    "start": "1801600",
    "end": "1807039"
  },
  {
    "text": "don't have time to demo it yet and i should also point out that this is just the start we're in v1 alpha one",
    "start": "1807039",
    "end": "1813120"
  },
  {
    "text": "we're still working on adding new functionality new features to this api and i'm excited where it's going to take",
    "start": "1813120",
    "end": "1819440"
  },
  {
    "text": "us so let's talk about our roadmap one of your first questions is probably",
    "start": "1819440",
    "end": "1825360"
  },
  {
    "start": "1820000",
    "end": "1851000"
  },
  {
    "text": "how can i use this how can i test this out and the great news is there's already some awesome implementations in",
    "start": "1825360",
    "end": "1831840"
  },
  {
    "text": "progress we've got contour gke istio kong solo",
    "start": "1831840",
    "end": "1836960"
  },
  {
    "text": "and trafic and in many cases these implementations are already ready for you to test out so if",
    "start": "1836960",
    "end": "1843039"
  },
  {
    "text": "you want to use gateway api you can go to any one of these implementation stocks and see what their status is for gateway",
    "start": "1843039",
    "end": "1849840"
  },
  {
    "text": "api and as far as the api itself we're planning on launching a second",
    "start": "1849840",
    "end": "1855760"
  },
  {
    "start": "1851000",
    "end": "1920000"
  },
  {
    "text": "alpha version soon v1 alpha 2 and also to improve experience and consistency",
    "start": "1855760",
    "end": "1861600"
  },
  {
    "text": "we're working on conformance tests and web hook validation we're hoping to release v1 beta 1 later",
    "start": "1861600",
    "end": "1868559"
  },
  {
    "text": "this year and that will bring much more api stability but until we get to that point we can",
    "start": "1868559",
    "end": "1875279"
  },
  {
    "text": "still make significant changes so your feedback in the next few months is critical if you have ideas for how we",
    "start": "1875279",
    "end": "1881919"
  },
  {
    "text": "can improve this api how we can change this api please let us know we have community reading meetings",
    "start": "1881919",
    "end": "1888159"
  },
  {
    "text": "every wednesday everyone's welcome it's an open agenda feel free to add something to the agenda",
    "start": "1888159",
    "end": "1894000"
  },
  {
    "text": "create a github issue whatever it is we'd love your ideas and of course",
    "start": "1894000",
    "end": "1899039"
  },
  {
    "text": "we're on slack find our slack channel we're sig network gateway api and ask any questions join",
    "start": "1899039",
    "end": "1906080"
  },
  {
    "text": "the discussion whatever it might be and finally if you're just interested in more information about the api",
    "start": "1906080",
    "end": "1912880"
  },
  {
    "text": "check out our website that's gateway api.sigs.ks.io thanks so much for your time have a",
    "start": "1912880",
    "end": "1919120"
  },
  {
    "text": "great rest of your coop con",
    "start": "1919120",
    "end": "1922240"
  }
]