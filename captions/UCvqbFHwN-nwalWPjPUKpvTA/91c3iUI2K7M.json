[
  {
    "start": "0",
    "end": "173000"
  },
  {
    "text": "[Applause] okay hello everyone thanks for joining",
    "start": "90",
    "end": "7200"
  },
  {
    "text": "me in this session my name is Jim Payne software engineer at Wooper I'm working",
    "start": "7200",
    "end": "13679"
  },
  {
    "text": "on building and maintaining compute infrastructure at Lubert so into this talk I'm going to share the",
    "start": "13679",
    "end": "21300"
  },
  {
    "text": "lessons and the takeaways my team has learned from evaluating and exploring kubernetes migration for uber okay this",
    "start": "21300",
    "end": "31949"
  },
  {
    "text": "is the agenda of today's talk we'll all first take an overview of uber",
    "start": "31949",
    "end": "37230"
  },
  {
    "text": "and the uber z-- compute infrastructure and explain the team's motivation of moving to kubernetes then we'll all dive",
    "start": "37230",
    "end": "45000"
  },
  {
    "text": "into the evaluation and exploration experience of communities migration at uber at the end we'll all summarize our",
    "start": "45000",
    "end": "52739"
  },
  {
    "text": "learnings into a few takeaways and to share with the audience today okay",
    "start": "52739",
    "end": "61739"
  },
  {
    "text": "before we kicking off any technical discussion let's first take a look at uber business skill so uber has",
    "start": "61739",
    "end": "70229"
  },
  {
    "text": "completed more than 15 billion community cumulative trips over 15 million uber",
    "start": "70229",
    "end": "76409"
  },
  {
    "text": "chips happen on the platform every day now uber is available in more than 700",
    "start": "76409",
    "end": "82680"
  },
  {
    "text": "cities across 65 countries on six continents uber has surpassed hundred million",
    "start": "82680",
    "end": "90030"
  },
  {
    "text": "monthly active users in June 2019 and over 3.9 million active drivers globally",
    "start": "90030",
    "end": "97979"
  },
  {
    "text": "in q4 2018 as a company uber now has more than 27,000 employees worldwide and",
    "start": "97979",
    "end": "106200"
  },
  {
    "text": "more than 3,000 engineers would like to",
    "start": "106200",
    "end": "112619"
  },
  {
    "text": "build in the operate such a large commute platform there are thousands of software systems and the service is",
    "start": "112619",
    "end": "119040"
  },
  {
    "text": "constantly running behind the scene and uber has built its own computer infrastructure to a skill to support",
    "start": "119040",
    "end": "125729"
  },
  {
    "text": "these systems and services let's start with a few statistics to review the",
    "start": "125729",
    "end": "131099"
  },
  {
    "text": "scale of ubers computer infrastructure Hooper currently has thousands of micro services running",
    "start": "131099",
    "end": "137810"
  },
  {
    "text": "on development activities uber engineers viewed more than 5,000 of",
    "start": "137810",
    "end": "143000"
  },
  {
    "text": "container images every day deploy more than thousand of micro services and more",
    "start": "143000",
    "end": "148040"
  },
  {
    "text": "than ten thousands of container instances every day regarding the computer cluster footprint uber has more",
    "start": "148040",
    "end": "155180"
  },
  {
    "text": "than 35 clusters across different regions in the different zones with Morton's Hendra sales and services",
    "start": "155180",
    "end": "162770"
  },
  {
    "text": "containers perk up and has the million battle container launched per day at a",
    "start": "162770",
    "end": "168800"
  },
  {
    "text": "big time so the spitless service is",
    "start": "168800",
    "end": "176269"
  },
  {
    "start": "173000",
    "end": "173000"
  },
  {
    "text": "actually the main resource consumer on the massive compute platform uber has built uber malos is stateless workload",
    "start": "176269",
    "end": "184519"
  },
  {
    "text": "as micro services as we mentioned previously there are thousands of micro service raining on the uber platform",
    "start": "184519",
    "end": "191360"
  },
  {
    "text": "they are mostly containerized and right now running on the missus custard to get",
    "start": "191360",
    "end": "197060"
  },
  {
    "text": "to the current state Roopa has gone through a few major migrations at the beginning everything was running on bare",
    "start": "197060",
    "end": "203989"
  },
  {
    "text": "metal no containerization at all in early 2015 Uber's started to continue rise services",
    "start": "203989",
    "end": "211280"
  },
  {
    "text": "and it deployed its own container ox attrition system to support a static containers placement in 2016 uber",
    "start": "211280",
    "end": "219920"
  },
  {
    "text": "adopted apache missiles and apache aurora as its new resource management and container oxidation system later on",
    "start": "219920",
    "end": "228320"
  },
  {
    "text": "who were also deployed and developed its own missile scheduler as known as peloton to replace Aurora so thoroughly",
    "start": "228320",
    "end": "236269"
  },
  {
    "text": "speaking if you're looking at the history of uber compute infrastructure is a long journey full of migrations",
    "start": "236269",
    "end": "244030"
  },
  {
    "text": "also from the bigger picture the entire uber infrastructure including compute is",
    "start": "244030",
    "end": "249370"
  },
  {
    "text": "expanding into multiple regions and multiple zones with the tripod strategy",
    "start": "249370",
    "end": "254989"
  },
  {
    "text": "underneath basically we are building in the maintaining infrastructure on promise and in the cloud simultaneously",
    "start": "254989",
    "end": "263650"
  },
  {
    "start": "265000",
    "end": "265000"
  },
  {
    "text": "so besides the massive amount of stylist workload there are also other use cases",
    "start": "265160",
    "end": "270990"
  },
  {
    "text": "on the uber computer infrastructure there are a large volume of batch workload running on compute clusters and",
    "start": "270990",
    "end": "277530"
  },
  {
    "text": "where our co-locating makes the workload including both billets in the batch on",
    "start": "277530",
    "end": "282629"
  },
  {
    "text": "the shared clusters for workload that requires Hardware customization computer",
    "start": "282629",
    "end": "288720"
  },
  {
    "text": "infrastructure actually offers centralized support to random on dedicated hardware's also computer",
    "start": "288720",
    "end": "299970"
  },
  {
    "text": "infrastructure also supports the distributed deep learning workload on GPU resource so given the use cases we",
    "start": "299970",
    "end": "312449"
  },
  {
    "start": "309000",
    "end": "309000"
  },
  {
    "text": "have uber compute team has developed its own customized resource scheduler as",
    "start": "312449",
    "end": "317789"
  },
  {
    "text": "known as peloton as I mentioned it's mainly fulfills the following needs it's a unified resource scheduler for",
    "start": "317789",
    "end": "325169"
  },
  {
    "text": "co-locating makes the workload on compute clusters it integrates with different applications obstetrician",
    "start": "325169",
    "end": "331590"
  },
  {
    "text": "systems such as SPARC tensorflow and the you deploy it can be run both on promise",
    "start": "331590",
    "end": "337979"
  },
  {
    "text": "or in the cloud and more importantly it supports elastic resource sharing among",
    "start": "337979",
    "end": "343500"
  },
  {
    "text": "teams and organizations so the diagram on the right side briefly described the",
    "start": "343500",
    "end": "351000"
  },
  {
    "text": "row of peloton in the upper compute infrastructure as a unified resource scheduler it bridges between resource",
    "start": "351000",
    "end": "357960"
  },
  {
    "text": "management system and a variety of different service oxygen systems for",
    "start": "357960",
    "end": "364169"
  },
  {
    "text": "different use cases so so far we have goes through the overview of uber",
    "start": "364169",
    "end": "370500"
  },
  {
    "text": "compute infrastructure and I haven't mentioned any single word related to cloud native and kubernetes so people",
    "start": "370500",
    "end": "379650"
  },
  {
    "text": "may ask it seems obrah has already developed an entire computer ecosystem based on",
    "start": "379650",
    "end": "384870"
  },
  {
    "text": "attached missiles and it's working fine right now why we are talking about",
    "start": "384870",
    "end": "390060"
  },
  {
    "text": "kubernetes",
    "start": "390060",
    "end": "392509"
  },
  {
    "start": "393000",
    "end": "393000"
  },
  {
    "text": "and let me share with you guys here is the why so the actual motivation to",
    "start": "398290",
    "end": "404600"
  },
  {
    "text": "migrate to kubernetes derived from the real business requirements so a big challenge",
    "start": "404600",
    "end": "410060"
  },
  {
    "text": "uber engineering team currently faces is how to ensure authentication and authorization for inter service",
    "start": "410060",
    "end": "416540"
  },
  {
    "text": "communication among thousands of micro services a common solution would be just",
    "start": "416540",
    "end": "422300"
  },
  {
    "text": "building a secure service match it will help address the security and compliance concerns without having to change the",
    "start": "422300",
    "end": "429380"
  },
  {
    "text": "code of thousands of micro services so to build a secure service match uber",
    "start": "429380",
    "end": "434660"
  },
  {
    "text": "compute infrastructure needs to support part inside cars but unfortunately the",
    "start": "434660",
    "end": "441380"
  },
  {
    "text": "existing missiles based architecture doesn't really support pod and it's not easily extensible since it requires",
    "start": "441380",
    "end": "449419"
  },
  {
    "text": "using task groups and the nested containers feature with unified container eliezer in missiles which is",
    "start": "449419",
    "end": "456169"
  },
  {
    "text": "only supported by missiles in this case if we use it we will actually lose the container runtime portability hence",
    "start": "456169",
    "end": "464090"
  },
  {
    "text": "we started to actually explore other alternatives it's not hard to realize",
    "start": "464090",
    "end": "469220"
  },
  {
    "text": "that kubernetes has native support for pod sidecar security plugins and init",
    "start": "469220",
    "end": "474440"
  },
  {
    "text": "containers so these are all necessary or useful features to build secure service",
    "start": "474440",
    "end": "479599"
  },
  {
    "text": "smash additionally we're also impressed by the thriving community supported kubernetes has and if we build a new",
    "start": "479599",
    "end": "487280"
  },
  {
    "text": "solution on top of kubernetes it will be natively supported by new cloud native applications as well so at this point",
    "start": "487280",
    "end": "494510"
  },
  {
    "text": "it's very clear to the team that kubernetes based the secure service",
    "start": "494510",
    "end": "499880"
  },
  {
    "text": "match solution would be a better alternative to go with if it as possible",
    "start": "499880",
    "end": "505810"
  },
  {
    "start": "508000",
    "end": "508000"
  },
  {
    "text": "but what this really means so basically this means a major iteration on the core",
    "start": "508840",
    "end": "515570"
  },
  {
    "text": "technologies that currently powers uber computer infrastructure we must first evaluate this is indeed a viable",
    "start": "515570",
    "end": "522800"
  },
  {
    "text": "solution for existing business needs as well so there are two major concerns",
    "start": "522800",
    "end": "528060"
  },
  {
    "text": "wrists against the kubernetes internally over the first one is scalability so we",
    "start": "528060",
    "end": "534180"
  },
  {
    "text": "often heard people questioning about kubernetes cluster skating ability beyond 5k notes and currently uber",
    "start": "534180",
    "end": "541050"
  },
  {
    "text": "already have clusters larger than five keynotes uber computer infrastructure",
    "start": "541050",
    "end": "546240"
  },
  {
    "text": "also runs large volume of batch workload we have to ensure coronaries can handle",
    "start": "546240",
    "end": "552000"
  },
  {
    "text": "the existing batch workload footprint within over the second concern we have",
    "start": "552000",
    "end": "558300"
  },
  {
    "text": "is around portability so as we mentioned in the overview rubra has existing",
    "start": "558300",
    "end": "563640"
  },
  {
    "text": "customized service orchestration systems for different use cases and this support",
    "start": "563640",
    "end": "569160"
  },
  {
    "text": "unique service deployment characteristics such as instance count based sharding and in place upgrade we",
    "start": "569160",
    "end": "577710"
  },
  {
    "text": "need to ensure the technology iteration under needs is easily portable to those upstream services and the systems as",
    "start": "577710",
    "end": "584700"
  },
  {
    "text": "well so after gathering feedback and",
    "start": "584700",
    "end": "593089"
  },
  {
    "start": "589000",
    "end": "589000"
  },
  {
    "text": "summarizing the concerns as engineers who thrived before technologies we decided to go ahead and evaluate and",
    "start": "593089",
    "end": "600330"
  },
  {
    "text": "address those concerns so we focused on scalability first the basic methodology",
    "start": "600330",
    "end": "606660"
  },
  {
    "text": "to evaluate a software systems scalability is benchmarking so we",
    "start": "606660",
    "end": "611850"
  },
  {
    "text": "started with benchmarking SCD since it is the persistent storage solution kubernetes uses under needs so we",
    "start": "611850",
    "end": "619680"
  },
  {
    "text": "evaluated as CD writes throughput against the key size in the value size on its public announced the documents a",
    "start": "619680",
    "end": "626610"
  },
  {
    "text": "CD claimed it can support up to 50 K bytes per second and Henry 50k reads per",
    "start": "626610",
    "end": "633839"
  },
  {
    "text": "second this far exceeds our needs but we wanted to run additional benchmarking",
    "start": "633839",
    "end": "639540"
  },
  {
    "text": "against a larger value size the sample benchmarking result on the right side",
    "start": "639540",
    "end": "645000"
  },
  {
    "text": "demos trace the throughput demonstrate that though the value says actually effects as CDs through good",
    "start": "645000",
    "end": "652080"
  },
  {
    "text": "performance but it can still provides good reads through write throughput with large value size",
    "start": "652080",
    "end": "659360"
  },
  {
    "text": "given how cornetist actually use a CD we also wanted to rent additional",
    "start": "660149",
    "end": "665320"
  },
  {
    "text": "benchmarking against a number of watches on that CD it turned out as City right",
    "start": "665320",
    "end": "671200"
  },
  {
    "text": "through put jobs significantly after Henry's of what is connected but it is",
    "start": "671200",
    "end": "676750"
  },
  {
    "text": "still acceptable for the Custer footprint Hooper may have so besides the",
    "start": "676750",
    "end": "684820"
  },
  {
    "text": "right throughput we also invalid memory consumption with a CD against number of",
    "start": "684820",
    "end": "690370"
  },
  {
    "text": "watches it turned out that our sed can actually handle millions of watches with",
    "start": "690370",
    "end": "695560"
  },
  {
    "text": "a few key memory so after gaining enough",
    "start": "695560",
    "end": "702519"
  },
  {
    "text": "confidence on the storage layer we moved on to benchmarking a CD together with",
    "start": "702519",
    "end": "707680"
  },
  {
    "text": "Cube API server this time we use the simple test coins to create paths with",
    "start": "707680",
    "end": "713589"
  },
  {
    "text": "random no binding against API server directly and we've got some bad news on",
    "start": "713589",
    "end": "718870"
  },
  {
    "text": "the throughput performance so as an example benchmark results showed",
    "start": "718870",
    "end": "723970"
  },
  {
    "text": "launching for TK pass on 8k notes took a few minutes this is not really a",
    "start": "723970",
    "end": "730180"
  },
  {
    "text": "convincing results for kubernetes migration but we didn't stop there because one interesting thing we noticed",
    "start": "730180",
    "end": "737860"
  },
  {
    "text": "in the mint benchmark result is the number of pod events stored in sed actually 10 times of it certain times of",
    "start": "737860",
    "end": "745269"
  },
  {
    "text": "the number of pots as we showed off in one example graph on the right side so",
    "start": "745269",
    "end": "752110"
  },
  {
    "text": "to find out why we went back and dig deeper into the party events so after",
    "start": "752110",
    "end": "760870"
  },
  {
    "text": "some code reading and researching we had some interesting findings it turns out",
    "start": "760870",
    "end": "766600"
  },
  {
    "text": "that the large volume of holding events consumed networking storage resources for both kubernetes api server and SED",
    "start": "766600",
    "end": "774820"
  },
  {
    "text": "but they are not really persisted states that coober let's leverage to operate",
    "start": "774820",
    "end": "780610"
  },
  {
    "text": "pots there are more as locks in fact having TTL config on them also indicates",
    "start": "780610",
    "end": "787209"
  },
  {
    "text": "the same conclusion at the same time we are also engaging with folks from other",
    "start": "787209",
    "end": "792430"
  },
  {
    "text": "companies they share the same thoughts it helped us confirm that this is actually the",
    "start": "792430",
    "end": "798220"
  },
  {
    "text": "right direction to go with based on the new learnings we ran the benchmarking",
    "start": "798220",
    "end": "804700"
  },
  {
    "text": "against sed and coop API server again but this time with our job in all the parliaments the throughput had",
    "start": "804700",
    "end": "812140"
  },
  {
    "text": "significant improvements it only took 30 seconds to launch 40k",
    "start": "812140",
    "end": "817810"
  },
  {
    "text": "pass on 8k notes which is a pretty decent benchmark results to demonstrate",
    "start": "817810",
    "end": "823030"
  },
  {
    "text": "the scalability of a CD and cube API server so besides the benchmark efforts",
    "start": "823030",
    "end": "830230"
  },
  {
    "text": "I just mentioned we also did performance evaluation around population cube APIs",
    "start": "830230",
    "end": "835630"
  },
  {
    "text": "every resource consumption in etc okay",
    "start": "835630",
    "end": "842500"
  },
  {
    "text": "so after a few rounds of scalability evaluation we agreed on the following statements so SCD performance is heavily",
    "start": "842500",
    "end": "850300"
  },
  {
    "text": "impacted by a number of watches which is more or less linear to the number of nodes but overall it's a good enough for",
    "start": "850300",
    "end": "857560"
  },
  {
    "text": "uber footprint a city plus cube API server performance on part creation and",
    "start": "857560",
    "end": "863350"
  },
  {
    "text": "launch it's also good enough for uber footprint after topping the parliament's",
    "start": "863350",
    "end": "869580"
  },
  {
    "text": "so as a conclusion scalability of a city and Cuba API server is not really a",
    "start": "871560",
    "end": "877990"
  },
  {
    "text": "concern for migration to urban areas for uber next we moved on to address the",
    "start": "877990",
    "end": "888160"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "portability concerns with the scalability evaluation conclusion in mind as we mission above",
    "start": "888160",
    "end": "894880"
  },
  {
    "text": "uber already has peloton as a unified resource scheduler it provides unique",
    "start": "894880",
    "end": "900160"
  },
  {
    "text": "values to the uber ecosystem we needs to carefully consider how the integration would work the first alternative we came",
    "start": "900160",
    "end": "908560"
  },
  {
    "text": "up with is to actually modify peloton to become a kubernetes scheduler plugin",
    "start": "908560",
    "end": "914100"
  },
  {
    "text": "this diagram on the right side briefly demonstrate how the overall solution",
    "start": "914100",
    "end": "919660"
  },
  {
    "text": "would looks like basically a CD pupa PI server and cubelet was adopted directly",
    "start": "919660",
    "end": "926290"
  },
  {
    "text": "peloton will be modified as a kubernetes scheduler plugin and we need to develop",
    "start": "926290",
    "end": "931509"
  },
  {
    "text": "custom controllers to bridge existing service education system with kubernetes",
    "start": "931509",
    "end": "937059"
  },
  {
    "text": "api so they are obviously pros in the",
    "start": "937059",
    "end": "943239"
  },
  {
    "text": "columns for this alternative for the pros this is basically a idea Matic for",
    "start": "943239",
    "end": "948519"
  },
  {
    "text": "criminalized eco system because we are leveraging the suggested plug-in model to implement custom schedulers on top of",
    "start": "948519",
    "end": "955119"
  },
  {
    "text": "kubernetes and also in this we can actually reuse a lot of kubernetes functionalities and team overall agree",
    "start": "955119",
    "end": "963429"
  },
  {
    "text": "eventually this is how we should get but there's also counts",
    "start": "963429",
    "end": "969399"
  },
  {
    "text": "the first one is the change is at a very large scale so especially considering if",
    "start": "969399",
    "end": "975729"
  },
  {
    "text": "this is the first step of a migration it will be very risky second the migration",
    "start": "975729",
    "end": "981729"
  },
  {
    "text": "is kind of costly because essentially we need to swap the underneath AP is the",
    "start": "981729",
    "end": "988239"
  },
  {
    "text": "upper stream systems are using from pallet on to kubernetes api and no need",
    "start": "988239",
    "end": "994869"
  },
  {
    "text": "to say because we can tell from the graph we needs to build actually many translation layers to bridge between the",
    "start": "994869",
    "end": "1001489"
  },
  {
    "text": "systems with kubernetes api server",
    "start": "1001489",
    "end": "1005899"
  },
  {
    "text": "okay the other alternatives were also considered is to actually have peloton integrating with both kubernetes and",
    "start": "1009280",
    "end": "1016180"
  },
  {
    "text": "missiles mostly as it is right now so looking at architecture diagram on the",
    "start": "1016180",
    "end": "1021970"
  },
  {
    "text": "right side peloton host manager will be responsible for southbound integration",
    "start": "1021970",
    "end": "1027370"
  },
  {
    "text": "with missiles master and communities API server there should be no significant",
    "start": "1027370",
    "end": "1033250"
  },
  {
    "text": "changes for the northbound API integration with a variety of upstream systems in this alternative kubernetes",
    "start": "1033250",
    "end": "1041079"
  },
  {
    "text": "and the missiles can actually share the same peloton control plane and the peloton host manager will hide away",
    "start": "1041079",
    "end": "1047740"
  },
  {
    "text": "details of kubernetes in the missiles from upstream systems and thus impact on",
    "start": "1047740",
    "end": "1053260"
  },
  {
    "text": "jobs back in this case can be launched on either missiles or kubernetes casters",
    "start": "1053260",
    "end": "1059730"
  },
  {
    "text": "okay if we zoom into the integration point for the second alternative further",
    "start": "1062820",
    "end": "1068430"
  },
  {
    "text": "this alternative essentially requires to build an abstracted interface to operate",
    "start": "1068430",
    "end": "1073810"
  },
  {
    "text": "an internal host cash within peloton host manager it requires a plug-in",
    "start": "1073810",
    "end": "1079600"
  },
  {
    "text": "implementation for both kinetic missiles the missiles plug-in will be responsible",
    "start": "1079600",
    "end": "1084700"
  },
  {
    "text": "for communicating with missus master and the KS plug-in will be responsible for communicating with cube API server the",
    "start": "1084700",
    "end": "1093670"
  },
  {
    "text": "pros of the second alternative is it will allow missiles in the kubernetes to share the same peloton scheduler the",
    "start": "1093670",
    "end": "1101110"
  },
  {
    "text": "scope of this change is much smaller compared with the first alternative and most importantly it makes the swap",
    "start": "1101110",
    "end": "1108610"
  },
  {
    "text": "invisible to clients and helps to achieve it as parent immigration as an",
    "start": "1108610",
    "end": "1116020"
  },
  {
    "text": "opposite to the other alternative this solution is not automatic it doesn't really leverage the",
    "start": "1116020",
    "end": "1122560"
  },
  {
    "text": "criminality scheduler plug-in model and there are fundamental differences between missiles and the kubernetes",
    "start": "1122560",
    "end": "1128530"
  },
  {
    "text": "which actually raised a bunch of consistency challenges when designing the host cache inside Python host",
    "start": "1128530",
    "end": "1135430"
  },
  {
    "text": "manager so now let's go back to the portability",
    "start": "1135430",
    "end": "1143460"
  },
  {
    "text": "concerns we presented previously apparently the second alternative stands out since it doesn't really swap the",
    "start": "1143460",
    "end": "1150960"
  },
  {
    "text": "northbound API from pallet on to kubernetes and the integration challenge the integration changes required from",
    "start": "1150960",
    "end": "1158250"
  },
  {
    "text": "different existing systems on top of pallet on our well scoped and limited it",
    "start": "1158250",
    "end": "1163860"
  },
  {
    "text": "keeps pallet on as the schedules on kubernetes it provides more flexibility",
    "start": "1163860",
    "end": "1169770"
  },
  {
    "text": "to ensure support for those existing unique service deployment characters characteristics so as conclusion we",
    "start": "1169770",
    "end": "1178620"
  },
  {
    "text": "decided to choose the second alternative to go with basically we are making pallet on talk to both kubernetes in the",
    "start": "1178620",
    "end": "1184920"
  },
  {
    "text": "missile's we are in abstracted interfaces so after evaluating the",
    "start": "1184920",
    "end": "1193920"
  },
  {
    "start": "1191000",
    "end": "1191000"
  },
  {
    "text": "scalability and the portability challenges we are convinced migration to kubernetes is viable within the compute",
    "start": "1193920",
    "end": "1201210"
  },
  {
    "text": "infrastructure for uber but in the entire oeuvre ecosystem there are",
    "start": "1201210",
    "end": "1206340"
  },
  {
    "text": "broader integration challenges we need to solve so I'm at least at least dated a few of examples the first one is",
    "start": "1206340",
    "end": "1214040"
  },
  {
    "text": "logging so uber currently Buse in the maintains custom logging infrastructure",
    "start": "1214040",
    "end": "1219630"
  },
  {
    "text": "based on Kafka and the elastic search as part of the criminales migration compute",
    "start": "1219630",
    "end": "1225300"
  },
  {
    "text": "team needs to come up with a solution to integrate uber logging infrastructure with kubernetes the next one is security",
    "start": "1225300",
    "end": "1233870"
  },
  {
    "text": "for example ubers security engineers are looking into using spire for service",
    "start": "1233870",
    "end": "1239610"
  },
  {
    "text": "eternity then compute team needs to work with the security engineers to provide",
    "start": "1239610",
    "end": "1244820"
  },
  {
    "text": "proper integration with spire in kubernetes and other big challenges",
    "start": "1244820",
    "end": "1250890"
  },
  {
    "text": "uber builds its own service discovery and routing solution back in 2016 to",
    "start": "1250890",
    "end": "1256800"
  },
  {
    "text": "solve specific problems uber was facing to figure out a solution to support existing service discovery in",
    "start": "1256800",
    "end": "1263580"
  },
  {
    "text": "the routing without making changes in the thousands of micro services these",
    "start": "1263580",
    "end": "1269400"
  },
  {
    "text": "are only examples among all the integration challenges computing needs to solve in the next few slides I wall",
    "start": "1269400",
    "end": "1277200"
  },
  {
    "text": "digging to take a little bit deeper into two cases to share some learnings the",
    "start": "1277200",
    "end": "1282210"
  },
  {
    "text": "team has already done the first case",
    "start": "1282210",
    "end": "1291480"
  },
  {
    "start": "1286000",
    "end": "1286000"
  },
  {
    "text": "study that's looking into logging so any logging solution compute team provides",
    "start": "1291480",
    "end": "1296790"
  },
  {
    "text": "with the uber needs to satisfy the following requirements it needs to some",
    "start": "1296790",
    "end": "1303260"
  },
  {
    "text": "it needs to support container logging to standard out standard error and on disk",
    "start": "1303260",
    "end": "1308670"
  },
  {
    "text": "files the logs on the localhost needs to be persisted even after killing the pots",
    "start": "1308670",
    "end": "1315300"
  },
  {
    "text": "and it needs to support custom log locations so basically for the",
    "start": "1315300",
    "end": "1324510"
  },
  {
    "text": "kubernetes migration the first half of the solution would provided is based on kubernetes container runtime interface",
    "start": "1324510",
    "end": "1330990"
  },
  {
    "text": "so kubernetes container runtime interface is a plug-in interface which enables cubular",
    "start": "1330990",
    "end": "1336900"
  },
  {
    "text": "to use a wide variety of container runtime technologies without the need of recompile the CRI mainly consists of a",
    "start": "1336900",
    "end": "1345630"
  },
  {
    "text": "program through a protocol buffers Java C API and the libraries works as a",
    "start": "1345630",
    "end": "1352140"
  },
  {
    "text": "middleware between cubelet and actual container runtime and provides the ability to manipulate the request and",
    "start": "1352140",
    "end": "1358680"
  },
  {
    "text": "pod sandbox cycle",
    "start": "1358680",
    "end": "1362420"
  },
  {
    "text": "so this flow chart shows a few key our pcs in the CRI I will walk through it to",
    "start": "1365260",
    "end": "1372340"
  },
  {
    "text": "describe the customization we introduced here so first before running hot boxes",
    "start": "1372340",
    "end": "1378850"
  },
  {
    "text": "odd the uber part UID annotations will",
    "start": "1378850",
    "end": "1384070"
  },
  {
    "text": "be injected into the request annotation and it will contained the part of UID",
    "start": "1384070",
    "end": "1389530"
  },
  {
    "text": "associated with the sandbox this annotation will be needed later in the",
    "start": "1389530",
    "end": "1395290"
  },
  {
    "text": "remove sandbox call in order to remove the host lock directories associated with the sandbox so before creating the",
    "start": "1395290",
    "end": "1404440"
  },
  {
    "text": "container is called the request will be inspected and if uber login host directory is defined",
    "start": "1404440",
    "end": "1411220"
  },
  {
    "text": "then a month will be created with the host pass and the container pass as defined in the annotations the month",
    "start": "1411220",
    "end": "1419500"
  },
  {
    "text": "will be injected into the container creation request after stop pause",
    "start": "1419500",
    "end": "1425919"
  },
  {
    "text": "sandbox is caught and succeeds the time stamp that the sandbox was stopped at will be recorded and before removed",
    "start": "1425919",
    "end": "1435460"
  },
  {
    "text": "Palestine box is called CRI will actually check the timestamp of when the sandbox has been stopped",
    "start": "1435460",
    "end": "1441520"
  },
  {
    "text": "cRIO war failed a sandbox removal request with an aborted States if it is",
    "start": "1441520",
    "end": "1447790"
  },
  {
    "text": "not enough time has passed since the removes in a box in the future by",
    "start": "1447790",
    "end": "1453220"
  },
  {
    "text": "default kubernetes will try again to remove the sandbox CRI will allow the request to continue only if there has",
    "start": "1453220",
    "end": "1460330"
  },
  {
    "text": "been enough time passed since the sandbox was actually stopped so this",
    "start": "1460330",
    "end": "1467260"
  },
  {
    "text": "customization in the CRI actually allows us to specify locations of local log",
    "start": "1467260",
    "end": "1472510"
  },
  {
    "text": "files associated with the pod ID and set up host Direction a host directory mount",
    "start": "1472510",
    "end": "1478390"
  },
  {
    "text": "it also allows us to persist local logs for a configurable short time window",
    "start": "1478390",
    "end": "1484120"
  },
  {
    "text": "even after killing the policy so the",
    "start": "1484120",
    "end": "1491080"
  },
  {
    "text": "second half of the solution is a custom darker logging driver it is responsible",
    "start": "1491080",
    "end": "1496419"
  },
  {
    "text": "for logging to stand her out in a standard and supports streaming them in two separate files",
    "start": "1496419",
    "end": "1502120"
  },
  {
    "text": "it also supports custom log file location which is actually not supported",
    "start": "1502120",
    "end": "1507490"
  },
  {
    "text": "in the doctor default JSON format logging driver additionally it also handles lossless log rotation and",
    "start": "1507490",
    "end": "1513909"
  },
  {
    "text": "optional log compression so combining the CRI customizes and the custom doctor",
    "start": "1513909",
    "end": "1520269"
  },
  {
    "text": "logging driver together we actually provided a log in solution meets all the requirements to integrate it with uber",
    "start": "1520269",
    "end": "1526630"
  },
  {
    "text": "log in infrastructure ok let's move on",
    "start": "1526630",
    "end": "1533399"
  },
  {
    "start": "1531000",
    "end": "1531000"
  },
  {
    "text": "the second case study we're going to talk about basically we were looking into clustering networking so you guys",
    "start": "1533399",
    "end": "1541240"
  },
  {
    "text": "probably can recall app mentioned several times in the presentation the uber has its own basically a",
    "start": "1541240",
    "end": "1547360"
  },
  {
    "text": "different custard networking setup compared with kubernetes permitted and it is actually a big challenge for",
    "start": "1547360",
    "end": "1554830"
  },
  {
    "text": "kubernetes migration at uber in kubernetes every pods gets its own IP",
    "start": "1554830",
    "end": "1560610"
  },
  {
    "text": "the Yoopers misses classes right now all the containers actually shared a host",
    "start": "1560610",
    "end": "1565779"
  },
  {
    "text": "network namespace uber software networking system relies on host IP and",
    "start": "1565779",
    "end": "1570820"
  },
  {
    "text": "dynamic ports a location for service discovery and robin as a result of this",
    "start": "1570820",
    "end": "1576880"
  },
  {
    "text": "there is actually no IP tables management in ubers computer infrastructure additionally there are also services",
    "start": "1576880",
    "end": "1584380"
  },
  {
    "text": "running on our missus casters that talk to other services directly over",
    "start": "1584380",
    "end": "1589510"
  },
  {
    "text": "localhost or loopback IP it is actually hard-coded in the service source code so",
    "start": "1589510",
    "end": "1597399"
  },
  {
    "text": "these three bullet points summarizes how the car in the cluster networking setup looks like in uber we have to come up",
    "start": "1597399",
    "end": "1604720"
  },
  {
    "text": "with a clustering networking solution to migrate for kubernetes without impacting discovery in the routing for thousands",
    "start": "1604720",
    "end": "1611049"
  },
  {
    "text": "of micro services and the solution we",
    "start": "1611049",
    "end": "1616840"
  },
  {
    "text": "come up with is actually using CNI plugin and again together with the CRI customization so the diagram on the",
    "start": "1616840",
    "end": "1625090"
  },
  {
    "text": "right side briefly demos - is how the network traffic is forwarded for example",
    "start": "1625090",
    "end": "1630730"
  },
  {
    "text": "the egress traffic from the service container will be first forwarded to the routing sidecar container part first",
    "start": "1630730",
    "end": "1638160"
  },
  {
    "text": "then the traffic coming out of the rotting sidecar well goes through scene ID port mapping plug-in and before it it",
    "start": "1638160",
    "end": "1646090"
  },
  {
    "text": "to the host Network namespace and eventually leaves the host it allows us",
    "start": "1646090",
    "end": "1651970"
  },
  {
    "text": "to actually adopt kubernetes IP per pod primitives and still using the existing",
    "start": "1651970",
    "end": "1657070"
  },
  {
    "text": "host IP and a dynamic port a location-based service discovery and rotting solution to solve the service",
    "start": "1657070",
    "end": "1667060"
  },
  {
    "text": "dependency on static port on host network namespace we have to ensure that services can talk to a list of",
    "start": "1667060",
    "end": "1674380"
  },
  {
    "text": "whitelisted ports over loopback IP when",
    "start": "1674380",
    "end": "1679420"
  },
  {
    "text": "a container is started the customization ECRI modifies the IP table the pot",
    "start": "1679420",
    "end": "1685450"
  },
  {
    "text": "networking namespace to redirect packets from selected ports on the pots",
    "start": "1685450",
    "end": "1690610"
  },
  {
    "text": "localhost to the same set of ports on the host logos this customization in CRI",
    "start": "1690610",
    "end": "1696910"
  },
  {
    "text": "will also clean up the IP table rules before stopping the sandbox the pod sandbox so combining this two piece of",
    "start": "1696910",
    "end": "1705490"
  },
  {
    "text": "work together we are able to migrate the gap to mitigate the gap in clustered",
    "start": "1705490",
    "end": "1711010"
  },
  {
    "text": "networking setup without actually modifying the source code of thousands of services ok so we finally reached the",
    "start": "1711010",
    "end": "1724630"
  },
  {
    "start": "1719000",
    "end": "1719000"
  },
  {
    "text": "end of all the technical discussions we would like to share in this talk but more importantly we summarize the",
    "start": "1724630",
    "end": "1732340"
  },
  {
    "text": "learnings uber computer team god from evaluating and exploring criminales",
    "start": "1732340",
    "end": "1737350"
  },
  {
    "text": "migrations for uber in the past few months into three key takeaways we want to actually share them with the audience",
    "start": "1737350",
    "end": "1743650"
  },
  {
    "text": "today so the first one is active community engagement is very important",
    "start": "1743650",
    "end": "1750190"
  },
  {
    "text": "for example when we're making the decision of chopping poly events engaging with the community action and",
    "start": "1750190",
    "end": "1757330"
  },
  {
    "text": "talking with engineers from other companies actually allow us to learn from the work other people already are",
    "start": "1757330",
    "end": "1763150"
  },
  {
    "text": "they did and helped us confirm right technical decision we are going to make second hand song evaluation",
    "start": "1763150",
    "end": "1772960"
  },
  {
    "text": "actually helped in decision making a lot we gain the confidence on a city and the",
    "start": "1772960",
    "end": "1778510"
  },
  {
    "text": "kubernetes api server scaling ability from a comprehensive benchmarking work and this confidence became the",
    "start": "1778510",
    "end": "1786160"
  },
  {
    "text": "foundation for nations to help us make a proper decision on peloton and the kubernetes integration later on a last",
    "start": "1786160",
    "end": "1796500"
  },
  {
    "text": "portability is actually the key of massive migration at companies like uber",
    "start": "1796500",
    "end": "1801790"
  },
  {
    "text": "any infrastructure migration and infrastructure migration is like it's very likely to fill if it actually",
    "start": "1801790",
    "end": "1809050"
  },
  {
    "text": "requires changes in upstream systems and the thousands of services when solving",
    "start": "1809050",
    "end": "1816370"
  },
  {
    "text": "variety of integration challenges the team always take the portability into consideration and make the migration as",
    "start": "1816370",
    "end": "1823720"
  },
  {
    "text": "trying to earn as we can that's all",
    "start": "1823720",
    "end": "1831570"
  },
  {
    "text": "so please raise your hand if we want to ask question I will get you immigrant microphone hi",
    "start": "1838820",
    "end": "1849180"
  },
  {
    "text": "how long does it take to perform this migration so fairly speaking all the",
    "start": "1849180",
    "end": "1856920"
  },
  {
    "text": "work we have presented are only for exploring and evaluation so we as an",
    "start": "1856920",
    "end": "1863250"
  },
  {
    "text": "engineer team we're providing a proper technical solution to the management to",
    "start": "1863250",
    "end": "1868650"
  },
  {
    "text": "actually demonstrate how the migration would looks like and how both scope to work so it's actually up up to the",
    "start": "1868650",
    "end": "1875430"
  },
  {
    "text": "management to decide when and how much resource is proper for the company to actually invest in this migration so",
    "start": "1875430",
    "end": "1882360"
  },
  {
    "text": "fairly speaking none of the solution is actually working in production right now",
    "start": "1882360",
    "end": "1888260"
  },
  {
    "text": "hi with the sidecar and the plug-in what was the latency at it was there any",
    "start": "1893750",
    "end": "1898920"
  },
  {
    "text": "added networking so the routing side card I didn't see I don't really have",
    "start": "1898920",
    "end": "1905700"
  },
  {
    "text": "the data at hand but we probably have team members around maybe we can chat",
    "start": "1905700",
    "end": "1911220"
  },
  {
    "text": "offline how do you actually drop party wins I have never seen that before",
    "start": "1911220",
    "end": "1916850"
  },
  {
    "text": "so there are a few tricks we can play around and actually during the",
    "start": "1916850",
    "end": "1922380"
  },
  {
    "text": "researching back to the time when we was looking at the performance the team found a very long strat and get issues",
    "start": "1922380",
    "end": "1930450"
  },
  {
    "text": "on kubernetes it's basically talking about should we actually transform all events into logs and there are few",
    "start": "1930450",
    "end": "1937590"
  },
  {
    "text": "tricks the way how they do is you can either for example throughout the proxy layer on top of community IDs servers to",
    "start": "1937590",
    "end": "1943230"
  },
  {
    "text": "fill out all the polymerized queries and you can also potentially shorter the TTL",
    "start": "1943230",
    "end": "1948300"
  },
  {
    "text": "can say for your party events so there's basically a few different tricks you can",
    "start": "1948300",
    "end": "1953400"
  },
  {
    "text": "play with and another solution people come up with so instead of storing the poly mess together with other critical",
    "start": "1953400",
    "end": "1959850"
  },
  {
    "text": "plot stays in the same sed cluster it can redirect and set separate departments into a separate etcd cluster",
    "start": "1959850",
    "end": "1966930"
  },
  {
    "text": "yeah so there are a few ways we can do it sure so you say that you choose the",
    "start": "1966930",
    "end": "1973490"
  },
  {
    "text": "second option so what's your road map do you want to continue with this",
    "start": "1973490",
    "end": "1979340"
  },
  {
    "text": "combination of Bezos and kubernetes or is it that you are a period of time you",
    "start": "1979340",
    "end": "1984720"
  },
  {
    "text": "want to migrate all the services from measles to is that the direction or you want to continue with both good question",
    "start": "1984720",
    "end": "1992400"
  },
  {
    "text": "so choosing the second alternative in terms of pallet town and the kubernetes integration is mainly focusing on the",
    "start": "1992400",
    "end": "1999660"
  },
  {
    "text": "portability concerns it's not really for actually trying to keep both missiles in",
    "start": "1999660",
    "end": "2004790"
  },
  {
    "text": "the kubernetes it's mostly trying to make the internees swap from missiles agents for example to cuba less",
    "start": "2004790",
    "end": "2011110"
  },
  {
    "text": "transparent to the appetites so the long term go definitely more so based on the",
    "start": "2011110",
    "end": "2017420"
  },
  {
    "text": "evaluation we have the long term goal should eventually migrate off mesas ecosystem and fully up to the community",
    "start": "2017420",
    "end": "2023360"
  },
  {
    "text": "system okay so generally when you run",
    "start": "2023360",
    "end": "2028460"
  },
  {
    "text": "like a system at scale and it's been identified by some of the people and you're reconfiguring the cycler policies",
    "start": "2028460",
    "end": "2033530"
  },
  {
    "text": "at a frequent time those V configurations can cause like a lot of odd events which can cause like",
    "start": "2033530",
    "end": "2040210"
  },
  {
    "text": "basically the loop not to scale so but in your case you just mentioned you could drop if more demands but how do",
    "start": "2040210",
    "end": "2046790"
  },
  {
    "text": "you plan to scale if there's like a lot of reconfiguration going on sorry I didn't care question a lot more what",
    "start": "2046790",
    "end": "2052669"
  },
  {
    "text": "so how like you might have to reconfigure the pod the psych-up problem",
    "start": "2052669",
    "end": "2059388"
  },
  {
    "text": "proxies or the pods and it's being shown that earlier that when there's a lot of",
    "start": "2059389",
    "end": "2064520"
  },
  {
    "text": "sidecars or these proxies and if you reconfiguring them which this can cause like a scalability issue how do you",
    "start": "2064520",
    "end": "2070760"
  },
  {
    "text": "handle this how do you plan to handle this that's a pretty good question because as soon as we type dip into the",
    "start": "2070760",
    "end": "2079310"
  },
  {
    "text": "apart + psych our bottles we realize the sidecar is actually pretty expensive to",
    "start": "2079310",
    "end": "2085580"
  },
  {
    "text": "be honest it's something that we should probably be careful worse when you're",
    "start": "2085580",
    "end": "2090710"
  },
  {
    "text": "introducing new sidecars so I can give a brief estimation for example right now on the uber computing",
    "start": "2090710",
    "end": "2097460"
  },
  {
    "text": "infrastructure we have more than 10 sort of inference or say host",
    "start": "2097460",
    "end": "2103850"
  },
  {
    "text": "agents running if we think about cost concern rising every single of them into a converting into a sidecar it's it's",
    "start": "2103850",
    "end": "2111830"
  },
  {
    "text": "basically causing a massive amount of resource waste potentially as well as some turns in the cluster performance as",
    "start": "2111830",
    "end": "2119630"
  },
  {
    "text": "well so that's a very good question I don't really have a good answer for you but one thing I can say is one sort of",
    "start": "2119630",
    "end": "2127070"
  },
  {
    "text": "principle the team is taking is one we're thinking of a need of a sidecar we are very careful and thoughtful we only",
    "start": "2127070",
    "end": "2133760"
  },
  {
    "text": "introduce a car only if it is necessary okay thank you all right unfortunately",
    "start": "2133760",
    "end": "2139910"
  },
  {
    "text": "we run out of time so please give up there are now around of applause to the unpinned and you can continue discussion",
    "start": "2139910",
    "end": "2147590"
  },
  {
    "text": "in the corridors Kashyap",
    "start": "2147590",
    "end": "2150820"
  }
]