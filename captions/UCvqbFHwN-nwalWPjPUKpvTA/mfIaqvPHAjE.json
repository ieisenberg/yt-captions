[
  {
    "text": "we're super excited to be here um now",
    "start": "599",
    "end": "3520"
  },
  {
    "text": "before we get started um allow us to",
    "start": "3520",
    "end": "6160"
  },
  {
    "text": "introduce",
    "start": "6160",
    "end": "7679"
  },
  {
    "text": "ourselves so my name is Adriana Vela and",
    "start": "7679",
    "end": "12480"
  },
  {
    "text": "I am a cncf Ambassador I'm a hashy Corp",
    "start": "12480",
    "end": "15320"
  },
  {
    "text": "Ambassador blogger podcaster by day I",
    "start": "15320",
    "end": "19359"
  },
  {
    "text": "work at service now Cloud observability",
    "start": "19359",
    "end": "22359"
  },
  {
    "text": "the artist formerly known as",
    "start": "22359",
    "end": "24359"
  },
  {
    "text": "lightstep um and I spend most of my time",
    "start": "24359",
    "end": "26800"
  },
  {
    "text": "doing open Telemetry work reys and I",
    "start": "26800",
    "end": "29199"
  },
  {
    "text": "actually work together in the open",
    "start": "29199",
    "end": "30960"
  },
  {
    "text": "Telemetry and user working group soon to",
    "start": "30960",
    "end": "33239"
  },
  {
    "text": "be Sig super",
    "start": "33239",
    "end": "36000"
  },
  {
    "text": "excited um and uh by night I like to",
    "start": "36000",
    "end": "39000"
  },
  {
    "text": "climb walls and completely unrelated I'm",
    "start": "39000",
    "end": "42079"
  },
  {
    "text": "a huge fan of capy",
    "start": "42079",
    "end": "44680"
  },
  {
    "text": "badas um hi everyone my name is Ree Lee",
    "start": "44680",
    "end": "47640"
  },
  {
    "text": "I'm a senior developer relations",
    "start": "47640",
    "end": "49199"
  },
  {
    "text": "engineer at New Relic as Adriana",
    "start": "49199",
    "end": "51800"
  },
  {
    "text": "mentioned we work together on the openm",
    "start": "51800",
    "end": "53879"
  },
  {
    "text": "end user working group um where we're",
    "start": "53879",
    "end": "55960"
  },
  {
    "text": "focused on connecting end users to each",
    "start": "55960",
    "end": "57879"
  },
  {
    "text": "other through enablement content as as",
    "start": "57879",
    "end": "60039"
  },
  {
    "text": "well as events and facilitating a",
    "start": "60039",
    "end": "62039"
  },
  {
    "text": "feedback loop with project maintainers",
    "start": "62039",
    "end": "64640"
  },
  {
    "text": "um and end users to help improve the",
    "start": "64640",
    "end": "66360"
  },
  {
    "text": "project as well as Drive",
    "start": "66360",
    "end": "68000"
  },
  {
    "text": "adoption um I guess my fun fact is I",
    "start": "68000",
    "end": "71880"
  },
  {
    "text": "like anything spooky and",
    "start": "71880",
    "end": "75438"
  },
  {
    "text": "paranormal so credit for the idea for",
    "start": "77000",
    "end": "80119"
  },
  {
    "text": "this talk actually goes to our lovely MC",
    "start": "80119",
    "end": "82880"
  },
  {
    "text": "Austin Parker um they had written up a",
    "start": "82880",
    "end": "86000"
  },
  {
    "text": "today I learn type post um where they",
    "start": "86000",
    "end": "88400"
  },
  {
    "text": "discussed a conversation that had about",
    "start": "88400",
    "end": "91520"
  },
  {
    "text": "um with someone about how open tatry",
    "start": "91520",
    "end": "93560"
  },
  {
    "text": "deals with air recording which made us",
    "start": "93560",
    "end": "99960"
  },
  {
    "text": "Wonder oh dude where's my error where's",
    "start": "100640",
    "end": "104520"
  },
  {
    "text": "my error",
    "start": "104520",
    "end": "107000"
  },
  {
    "text": "dude so how does open Telemetry handle",
    "start": "107200",
    "end": "110320"
  },
  {
    "text": "errors and what options do you have for",
    "start": "110320",
    "end": "112640"
  },
  {
    "text": "recording errors using open Telemetry",
    "start": "112640",
    "end": "114920"
  },
  {
    "text": "this is what we're going to answer for",
    "start": "114920",
    "end": "116039"
  },
  {
    "text": "you today in our session we're going to",
    "start": "116039",
    "end": "118560"
  },
  {
    "text": "first set the stage of some back ground",
    "start": "118560",
    "end": "120759"
  },
  {
    "text": "then we're going to get into how errors",
    "start": "120759",
    "end": "122320"
  },
  {
    "text": "are represented and handled in open",
    "start": "122320",
    "end": "125079"
  },
  {
    "text": "Telemetry we'll then give you a demo um",
    "start": "125079",
    "end": "128920"
  },
  {
    "text": "on how the same open Telemetry",
    "start": "128920",
    "end": "131120"
  },
  {
    "text": "instrumented error is represented in a",
    "start": "131120",
    "end": "134160"
  },
  {
    "text": "few different backends um and we'll talk",
    "start": "134160",
    "end": "136400"
  },
  {
    "text": "about why that matters for you as an end",
    "start": "136400",
    "end": "138560"
  },
  {
    "text": "user and finally we will do a quick wrap",
    "start": "138560",
    "end": "141720"
  },
  {
    "text": "up so Adriana is going to set the stage",
    "start": "141720",
    "end": "144720"
  },
  {
    "text": "for us shall yes before we talk about",
    "start": "144720",
    "end": "147319"
  },
  {
    "text": "all this lovely stuff let's do a little",
    "start": "147319",
    "end": "150120"
  },
  {
    "text": "bit of background so here's the deal so",
    "start": "150120",
    "end": "153920"
  },
  {
    "text": "happens that different languages",
    "start": "153920",
    "end": "156000"
  },
  {
    "text": "approach errors and exceptions in",
    "start": "156000",
    "end": "157440"
  },
  {
    "text": "different ways so for example go doesn't",
    "start": "157440",
    "end": "160159"
  },
  {
    "text": "really have the concept of exceptions",
    "start": "160159",
    "end": "162760"
  },
  {
    "text": "but then languages like Java and python",
    "start": "162760",
    "end": "166040"
  },
  {
    "text": "have things like mechanisms for catching",
    "start": "166040",
    "end": "168680"
  },
  {
    "text": "and throwing exceptions which is awesome",
    "start": "168680",
    "end": "171200"
  },
  {
    "text": "but what happens when you're in a",
    "start": "171200",
    "end": "173400"
  },
  {
    "text": "situation where you have an app that's",
    "start": "173400",
    "end": "175879"
  },
  {
    "text": "made up of multiple",
    "start": "175879",
    "end": "177640"
  },
  {
    "text": "microservices written in different",
    "start": "177640",
    "end": "179400"
  },
  {
    "text": "languages",
    "start": "179400",
    "end": "180599"
  },
  {
    "text": "and we're trying to do the observability",
    "start": "180599",
    "end": "183239"
  },
  {
    "text": "thing well we need a you know a",
    "start": "183239",
    "end": "185519"
  },
  {
    "text": "standardized way for capturing our",
    "start": "185519",
    "end": "188239"
  },
  {
    "text": "Telemetry and that includes a",
    "start": "188239",
    "end": "190280"
  },
  {
    "text": "standardized way for capturing our",
    "start": "190280",
    "end": "192519"
  },
  {
    "text": "errors so what do we do in that case",
    "start": "192519",
    "end": "195159"
  },
  {
    "text": "when we can't even agree on you know how",
    "start": "195159",
    "end": "197480"
  },
  {
    "text": "we're handling errors in different",
    "start": "197480",
    "end": "199000"
  },
  {
    "text": "languages and of course the answer is",
    "start": "199000",
    "end": "202519"
  },
  {
    "text": "open Telemetry to the rescue our good",
    "start": "202519",
    "end": "205360"
  },
  {
    "text": "friend and which leads me to the O",
    "start": "205360",
    "end": "208680"
  },
  {
    "text": "Telemetry refresher which",
    "start": "208680",
    "end": "210319"
  },
  {
    "text": "I'm sure everyone here is familiar with",
    "start": "210319",
    "end": "212280"
  },
  {
    "text": "it so this will be a very quick",
    "start": "212280",
    "end": "213799"
  },
  {
    "text": "refresher so open Telemetry cncf project",
    "start": "213799",
    "end": "217920"
  },
  {
    "text": "open source vendor neutral allows us to",
    "start": "217920",
    "end": "221360"
  },
  {
    "text": "generate ingest process and Export",
    "start": "221360",
    "end": "224560"
  },
  {
    "text": "Telemetry data to one or more",
    "start": "224560",
    "end": "226439"
  },
  {
    "text": "observability backends for analysis and",
    "start": "226439",
    "end": "230000"
  },
  {
    "text": "interpretation awesome so back to errors",
    "start": "230000",
    "end": "235239"
  },
  {
    "text": "well we talk about errors we talk about",
    "start": "235239",
    "end": "237560"
  },
  {
    "text": "exceptions but what is the difference",
    "start": "237560",
    "end": "240000"
  },
  {
    "text": "between the two now there are different",
    "start": "240000",
    "end": "242360"
  },
  {
    "text": "definitions of errors and exceptions um",
    "start": "242360",
    "end": "245640"
  },
  {
    "text": "and we can probably argue all day about",
    "start": "245640",
    "end": "247280"
  },
  {
    "text": "this but we've come across uh",
    "start": "247280",
    "end": "249200"
  },
  {
    "text": "definitions for errors and exceptions",
    "start": "249200",
    "end": "250760"
  },
  {
    "text": "that we particularly like so these will",
    "start": "250760",
    "end": "252720"
  },
  {
    "text": "be uh the basis for our talk here note",
    "start": "252720",
    "end": "256160"
  },
  {
    "text": "that this is uh these are definitions",
    "start": "256160",
    "end": "257759"
  },
  {
    "text": "for errors and exceptions within the",
    "start": "257759",
    "end": "259840"
  },
  {
    "text": "context of Technology purely and not so",
    "start": "259840",
    "end": "262520"
  },
  {
    "text": "like but not not in not necessarily in",
    "start": "262520",
    "end": "265520"
  },
  {
    "text": "the context of open Telemetry so what is",
    "start": "265520",
    "end": "268400"
  },
  {
    "text": "an error an error error is an unexpected",
    "start": "268400",
    "end": "271360"
  },
  {
    "text": "issue in a program that H hinders its",
    "start": "271360",
    "end": "274720"
  },
  {
    "text": "execution so an error can be something",
    "start": "274720",
    "end": "277080"
  },
  {
    "text": "like a compile time error you forgot",
    "start": "277080",
    "end": "279520"
  },
  {
    "text": "parentheses on an if statement maybe you",
    "start": "279520",
    "end": "281600"
  },
  {
    "text": "forgot curly braces maybe you forgot a",
    "start": "281600",
    "end": "284039"
  },
  {
    "text": "semicolon or it can be uh something like",
    "start": "284039",
    "end": "287479"
  },
  {
    "text": "a logic error the program is executing",
    "start": "287479",
    "end": "289800"
  },
  {
    "text": "sure but it's not doing what you're",
    "start": "289800",
    "end": "291479"
  },
  {
    "text": "expecting it to do then we have",
    "start": "291479",
    "end": "293639"
  },
  {
    "text": "exceptions an exception is a type of",
    "start": "293639",
    "end": "296000"
  },
  {
    "text": "runtime error that disrupts the normal",
    "start": "296000",
    "end": "298400"
  },
  {
    "text": "flow of a program and that can be",
    "start": "298400",
    "end": "300199"
  },
  {
    "text": "something like dividing by zero or",
    "start": "300199",
    "end": "302680"
  },
  {
    "text": "something like referencing a memory",
    "start": "302680",
    "end": "304160"
  },
  {
    "text": "address that doesn't exist shout out to",
    "start": "304160",
    "end": "306720"
  },
  {
    "text": "you know old days of doing programming",
    "start": "306720",
    "end": "309080"
  },
  {
    "text": "in c where that sort of thing seem to",
    "start": "309080",
    "end": "311039"
  },
  {
    "text": "happen all the time so there you have",
    "start": "311039",
    "end": "315120"
  },
  {
    "text": "it thank you okay so now that we have",
    "start": "315120",
    "end": "318880"
  },
  {
    "text": "set the definitions let's get into the",
    "start": "318880",
    "end": "321560"
  },
  {
    "text": "main course error handling and open",
    "start": "321560",
    "end": "324919"
  },
  {
    "text": "Telemetry so as ad just mentioned",
    "start": "324919",
    "end": "327600"
  },
  {
    "text": "languages have their own ideas about",
    "start": "327600",
    "end": "329840"
  },
  {
    "text": "what constitutes errors and exceptions",
    "start": "329840",
    "end": "331560"
  },
  {
    "text": "as well as how to handle",
    "start": "331560",
    "end": "333960"
  },
  {
    "text": "them so how exactly does open Telemetry",
    "start": "333960",
    "end": "336919"
  },
  {
    "text": "deal with all these conceptual",
    "start": "336919",
    "end": "338039"
  },
  {
    "text": "differences from language to language",
    "start": "338039",
    "end": "340319"
  },
  {
    "text": "this is where the ell specification or",
    "start": "340319",
    "end": "342520"
  },
  {
    "text": "spec for short comes",
    "start": "342520",
    "end": "344440"
  },
  {
    "text": "in the spec provides a blueprint for",
    "start": "344440",
    "end": "347319"
  },
  {
    "text": "developers who are working on various",
    "start": "347319",
    "end": "349520"
  },
  {
    "text": "parts of the project it standardizes",
    "start": "349520",
    "end": "352039"
  },
  {
    "text": "implementation across the different",
    "start": "352039",
    "end": "354759"
  },
  {
    "text": "languages and since language",
    "start": "354759",
    "end": "357720"
  },
  {
    "text": "apis um and sdks are implementations of",
    "start": "357720",
    "end": "360440"
  },
  {
    "text": "the spec there are general rules against",
    "start": "360440",
    "end": "363160"
  },
  {
    "text": "implementing something that isn't",
    "start": "363160",
    "end": "364880"
  },
  {
    "text": "covered in the",
    "start": "364880",
    "end": "366120"
  },
  {
    "text": "spec um this is to help provide a",
    "start": "366120",
    "end": "369440"
  },
  {
    "text": "guiding principle for organizing",
    "start": "369440",
    "end": "371160"
  },
  {
    "text": "contributions to the",
    "start": "371160",
    "end": "372639"
  },
  {
    "text": "project in practice though there are a",
    "start": "372639",
    "end": "375120"
  },
  {
    "text": "few exceptions so for example um a",
    "start": "375120",
    "end": "378479"
  },
  {
    "text": "language might prototype a new feature",
    "start": "378479",
    "end": "381240"
  },
  {
    "text": "um as part of adding it to the spec um",
    "start": "381240",
    "end": "384280"
  },
  {
    "text": "usually designated as um Alpha",
    "start": "384280",
    "end": "387120"
  },
  {
    "text": "experimental before the verbiage is",
    "start": "387120",
    "end": "390039"
  },
  {
    "text": "added to the",
    "start": "390039",
    "end": "392039"
  },
  {
    "text": "spec as another example the spec allows",
    "start": "392039",
    "end": "394960"
  },
  {
    "text": "for some degree of flexibility for a",
    "start": "394960",
    "end": "397199"
  },
  {
    "text": "language to implement something as",
    "start": "397199",
    "end": "398759"
  },
  {
    "text": "naturally to that language as possible",
    "start": "398759",
    "end": "401560"
  },
  {
    "text": "so for example most languages have",
    "start": "401560",
    "end": "403800"
  },
  {
    "text": "implemented record",
    "start": "403800",
    "end": "406720"
  },
  {
    "text": "exception uh and since go does not have",
    "start": "406720",
    "end": "409639"
  },
  {
    "text": "the conventional concept",
    "start": "409639",
    "end": "411639"
  },
  {
    "text": "of exceptions it has instead rep uh",
    "start": "411639",
    "end": "414960"
  },
  {
    "text": "implemented record error which",
    "start": "414960",
    "end": "417319"
  },
  {
    "text": "essentially does the same thing and",
    "start": "417319",
    "end": "418319"
  },
  {
    "text": "we'll talk a little bit more about that",
    "start": "418319",
    "end": "420319"
  },
  {
    "text": "in a little bit so now that we have a",
    "start": "420319",
    "end": "422479"
  },
  {
    "text": "unified framework for how to handle",
    "start": "422479",
    "end": "424080"
  },
  {
    "text": "errors let's see what options open CM",
    "start": "424080",
    "end": "426759"
  },
  {
    "text": "provides for",
    "start": "426759",
    "end": "428759"
  },
  {
    "text": "us so first of all we can record errors",
    "start": "428759",
    "end": "431400"
  },
  {
    "text": "using either spans or",
    "start": "431400",
    "end": "434599"
  },
  {
    "text": "logs in open Telemetry a span represents",
    "start": "434599",
    "end": "438520"
  },
  {
    "text": "individual uh represents an individual",
    "start": "438520",
    "end": "441039"
  },
  {
    "text": "unit of work within a distributed system",
    "start": "441039",
    "end": "443560"
  },
  {
    "text": "for example an HTT call or a database",
    "start": "443560",
    "end": "446560"
  },
  {
    "text": "call and they can uh they then make up",
    "start": "446560",
    "end": "450000"
  },
  {
    "text": "the building blocks of a distributed",
    "start": "450000",
    "end": "454080"
  },
  {
    "text": "Trace spans are related to each other",
    "start": "454080",
    "end": "456759"
  },
  {
    "text": "and two a trace through something called",
    "start": "456759",
    "end": "459199"
  },
  {
    "text": "context context is the glue that holds",
    "start": "459199",
    "end": "462520"
  },
  {
    "text": "uh sorry that turns a pack of data into",
    "start": "462520",
    "end": "464720"
  },
  {
    "text": "a unified trace and we'd like to thank",
    "start": "464720",
    "end": "466599"
  },
  {
    "text": "Hazel Weekley for that awesome",
    "start": "466599",
    "end": "468479"
  },
  {
    "text": "definition context propagation allows us",
    "start": "468479",
    "end": "471080"
  },
  {
    "text": "to pass information across multiple ABS",
    "start": "471080",
    "end": "473680"
  },
  {
    "text": "systems and tie them together we can",
    "start": "473680",
    "end": "477000"
  },
  {
    "text": "learn all sorts of things um the traces",
    "start": "477000",
    "end": "478960"
  },
  {
    "text": "about our system such as how our",
    "start": "478960",
    "end": "480199"
  },
  {
    "text": "services are connected and talking to",
    "start": "480199",
    "end": "481879"
  },
  {
    "text": "each other um as well as what occurred",
    "start": "481879",
    "end": "484080"
  },
  {
    "text": "in our application at a given",
    "start": "484080",
    "end": "486560"
  },
  {
    "text": "time open tump enhance a spans in",
    "start": "486560",
    "end": "489479"
  },
  {
    "text": "several ways one of the ways with which",
    "start": "489479",
    "end": "491840"
  },
  {
    "text": "you can enhance our spans is through",
    "start": "491840",
    "end": "494479"
  },
  {
    "text": "metadata or attributes in the form of",
    "start": "494479",
    "end": "496800"
  },
  {
    "text": "key value pairs so when you attach",
    "start": "496800",
    "end": "499400"
  },
  {
    "text": "relevant information such as user IDs or",
    "start": "499400",
    "end": "502000"
  },
  {
    "text": "Crest parameters you can gain deeper",
    "start": "502000",
    "end": "503800"
  },
  {
    "text": "insights into what occurred within a",
    "start": "503800",
    "end": "506280"
  },
  {
    "text": "given",
    "start": "506280",
    "end": "507720"
  },
  {
    "text": "Trace spans also have uh a field of span",
    "start": "507720",
    "end": "512719"
  },
  {
    "text": "kind which is additional information",
    "start": "512719",
    "end": "515159"
  },
  {
    "text": "that can provide developers with f the",
    "start": "515159",
    "end": "517880"
  },
  {
    "text": "context for troubleshooting span kind is",
    "start": "517880",
    "end": "521039"
  },
  {
    "text": "determined automatically by the",
    "start": "521039",
    "end": "522560"
  },
  {
    "text": "instrumentation libraries that you use",
    "start": "522560",
    "end": "525080"
  },
  {
    "text": "open solp to Define several span kinds",
    "start": "525080",
    "end": "527200"
  },
  {
    "text": "Each of which has unique implications",
    "start": "527200",
    "end": "529080"
  },
  {
    "text": "for a",
    "start": "529080",
    "end": "530560"
  },
  {
    "text": "reporting we have clients which is for",
    "start": "530560",
    "end": "533600"
  },
  {
    "text": "outgoing synchronous remote calls such",
    "start": "533600",
    "end": "535440"
  },
  {
    "text": "as outgoing HTTP calls server which",
    "start": "535440",
    "end": "538680"
  },
  {
    "text": "represents incoming St goodness remote",
    "start": "538680",
    "end": "541560"
  },
  {
    "text": "calls and then internal spans represent",
    "start": "541560",
    "end": "544880"
  },
  {
    "text": "operations that don't cross process",
    "start": "544880",
    "end": "546880"
  },
  {
    "text": "boundaries and finally we have producer",
    "start": "546880",
    "end": "549000"
  },
  {
    "text": "and consumer which are typically used",
    "start": "549000",
    "end": "550720"
  },
  {
    "text": "for message CU",
    "start": "550720",
    "end": "553200"
  },
  {
    "text": "operations spans can be further enhanced",
    "start": "553200",
    "end": "555720"
  },
  {
    "text": "with something called a span status as",
    "start": "555720",
    "end": "559160"
  },
  {
    "text": "well as a description of that status um",
    "start": "559160",
    "end": "561560"
  },
  {
    "text": "for example here we have an acception",
    "start": "561560",
    "end": "563160"
  },
  {
    "text": "message message that was captured along",
    "start": "563160",
    "end": "565440"
  },
  {
    "text": "with the",
    "start": "565440",
    "end": "567480"
  },
  {
    "text": "status by default a span status is",
    "start": "567480",
    "end": "570320"
  },
  {
    "text": "marked as unset unless otherwise",
    "start": "570320",
    "end": "572880"
  },
  {
    "text": "specified you could also set it to error",
    "start": "572880",
    "end": "576079"
  },
  {
    "text": "or as",
    "start": "576079",
    "end": "578920"
  },
  {
    "text": "okay and finally we can enhance spans",
    "start": "578920",
    "end": "581560"
  },
  {
    "text": "with something called span events a span",
    "start": "581560",
    "end": "584959"
  },
  {
    "text": "event is a structured log message",
    "start": "584959",
    "end": "587160"
  },
  {
    "text": "embedded within the span on which it",
    "start": "587160",
    "end": "590600"
  },
  {
    "text": "occurred span events can help um enhance",
    "start": "590600",
    "end": "593920"
  },
  {
    "text": "banss by providing add uh descriptive",
    "start": "593920",
    "end": "596200"
  },
  {
    "text": "information and you can also capture",
    "start": "596200",
    "end": "598399"
  },
  {
    "text": "additional information on the span event",
    "start": "598399",
    "end": "600440"
  },
  {
    "text": "by using custom",
    "start": "600440",
    "end": "603120"
  },
  {
    "text": "attributes when a span status is set to",
    "start": "603120",
    "end": "605800"
  },
  {
    "text": "error a span event is created",
    "start": "605800",
    "end": "607839"
  },
  {
    "text": "automatically that captures a span's",
    "start": "607839",
    "end": "609480"
  },
  {
    "text": "error message in stack",
    "start": "609480",
    "end": "613440"
  },
  {
    "text": "Trace earlier we mentioned a method",
    "start": "613480",
    "end": "615959"
  },
  {
    "text": "called record",
    "start": "615959",
    "end": "617320"
  },
  {
    "text": "exception since go doesn't support the",
    "start": "617320",
    "end": "619800"
  },
  {
    "text": "conventional concept of uh exceptions it",
    "start": "619800",
    "end": "623160"
  },
  {
    "text": "is implemented instead as record error",
    "start": "623160",
    "end": "626040"
  },
  {
    "text": "however with both of these methods you",
    "start": "626040",
    "end": "627920"
  },
  {
    "text": "have to make an additional call to to",
    "start": "627920",
    "end": "629440"
  },
  {
    "text": "set the span status to error if that's",
    "start": "629440",
    "end": "631240"
  },
  {
    "text": "what it should be because it's not",
    "start": "631240",
    "end": "632839"
  },
  {
    "text": "automat automatically going to be set to",
    "start": "632839",
    "end": "635240"
  },
  {
    "text": "that so this means that you can actually",
    "start": "635240",
    "end": "639160"
  },
  {
    "text": "use span events to record additional",
    "start": "639160",
    "end": "641480"
  },
  {
    "text": "information on that span event um so by",
    "start": "641480",
    "end": "645480"
  },
  {
    "text": "decoupling the span status from being",
    "start": "645480",
    "end": "647760"
  },
  {
    "text": "automatically set to air when a span",
    "start": "647760",
    "end": "649360"
  },
  {
    "text": "exception occurs you can support the use",
    "start": "649360",
    "end": "651320"
  },
  {
    "text": "case where you have an exception of um",
    "start": "651320",
    "end": "654320"
  },
  {
    "text": "the has a span status of okay or inste",
    "start": "654320",
    "end": "656120"
  },
  {
    "text": "set and this allows the most flexibility",
    "start": "656120",
    "end": "658720"
  },
  {
    "text": "for mation authors as well as end",
    "start": "658720",
    "end": "663839"
  },
  {
    "text": "users we can also record errors using",
    "start": "663920",
    "end": "666440"
  },
  {
    "text": "Logs with open",
    "start": "666440",
    "end": "669079"
  },
  {
    "text": "Telemetry an open Telemetry a log is a",
    "start": "669079",
    "end": "671720"
  },
  {
    "text": "structured message emitted by a service",
    "start": "671720",
    "end": "673880"
  },
  {
    "text": "or some other component they include a",
    "start": "673880",
    "end": "677240"
  },
  {
    "text": "message a Tim stamp as well as a",
    "start": "677240",
    "end": "680560"
  },
  {
    "text": "severity",
    "start": "680560",
    "end": "681880"
  },
  {
    "text": "level and severity levels um represent",
    "start": "681880",
    "end": "685399"
  },
  {
    "text": "the type of message that's being emitted",
    "start": "685399",
    "end": "687440"
  },
  {
    "text": "so debug info",
    "start": "687440",
    "end": "689839"
  },
  {
    "text": "warning error or",
    "start": "689839",
    "end": "692399"
  },
  {
    "text": "critical open tumy allows for the",
    "start": "692399",
    "end": "695079"
  },
  {
    "text": "correlation of logs to",
    "start": "695079",
    "end": "697279"
  },
  {
    "text": "traces in which a message a log message",
    "start": "697279",
    "end": "700680"
  },
  {
    "text": "can be Associated to a span within a",
    "start": "700680",
    "end": "703480"
  },
  {
    "text": "trace via Trace context correlation",
    "start": "703480",
    "end": "706519"
  },
  {
    "text": "which we talked about earlier so if you",
    "start": "706519",
    "end": "708120"
  },
  {
    "text": "spot a log with a log level of error or",
    "start": "708120",
    "end": "710240"
  },
  {
    "text": "critical you can navigate to the",
    "start": "710240",
    "end": "711839"
  },
  {
    "text": "corresponding Trace to find out more",
    "start": "711839",
    "end": "713680"
  },
  {
    "text": "information about what happened and if",
    "start": "713680",
    "end": "715440"
  },
  {
    "text": "your backend UI allows it you can also",
    "start": "715440",
    "end": "717600"
  },
  {
    "text": "navigate to the log from the trace",
    "start": "717600",
    "end": "722519"
  },
  {
    "text": "UI so is there is one better than the",
    "start": "722959",
    "end": "726320"
  },
  {
    "text": "other for recording errors um spans or",
    "start": "726320",
    "end": "729279"
  },
  {
    "text": "logs the answer is everyone's favorite",
    "start": "729279",
    "end": "732079"
  },
  {
    "text": "it depends um perhaps your team",
    "start": "732079",
    "end": "735000"
  },
  {
    "text": "primarily uses logs perhaps they",
    "start": "735000",
    "end": "737040"
  },
  {
    "text": "primarily use",
    "start": "737040",
    "end": "738160"
  },
  {
    "text": "traces um another thing to consider is",
    "start": "738160",
    "end": "742480"
  },
  {
    "text": "you the backend that you're using does",
    "start": "742480",
    "end": "744240"
  },
  {
    "text": "it render both logs and traces does it",
    "start": "744240",
    "end": "746320"
  },
  {
    "text": "support trace and log correlation",
    "start": "746320",
    "end": "749720"
  },
  {
    "text": "and how easily carriable or discoverable",
    "start": "749720",
    "end": "752399"
  },
  {
    "text": "are your is your",
    "start": "752399",
    "end": "755360"
  },
  {
    "text": "data so if you've been using a",
    "start": "755360",
    "end": "757480"
  },
  {
    "text": "proprietary agent to monitor your",
    "start": "757480",
    "end": "759120"
  },
  {
    "text": "applications and have migrated open over",
    "start": "759120",
    "end": "761160"
  },
  {
    "text": "to open Telemetry you might have noticed",
    "start": "761160",
    "end": "764240"
  },
  {
    "text": "that an error that was captured by open",
    "start": "764240",
    "end": "766720"
  },
  {
    "text": "CM instrumentation is expressed a little",
    "start": "766720",
    "end": "769560"
  },
  {
    "text": "bit differently than the same error",
    "start": "769560",
    "end": "771199"
  },
  {
    "text": "captured by the proprietary agents",
    "start": "771199",
    "end": "774519"
  },
  {
    "text": "instrumentation this is mainly due to",
    "start": "774519",
    "end": "776560"
  },
  {
    "text": "the fact that open Telemetry simply",
    "start": "776560",
    "end": "778120"
  },
  {
    "text": "bottles erors differently than how",
    "start": "778120",
    "end": "780519"
  },
  {
    "text": "vendors might have been",
    "start": "780519",
    "end": "783000"
  },
  {
    "text": "doing for example vendors have their own",
    "start": "783000",
    "end": "786000"
  },
  {
    "text": "notion of what represents a logical unit",
    "start": "786000",
    "end": "789199"
  },
  {
    "text": "of work within an application or system",
    "start": "789199",
    "end": "792279"
  },
  {
    "text": "um you're probably familiar with the",
    "start": "792279",
    "end": "793360"
  },
  {
    "text": "term transaction which can mean",
    "start": "793360",
    "end": "795440"
  },
  {
    "text": "something slightly different from vendor",
    "start": "795440",
    "end": "796880"
  },
  {
    "text": "to vendor and in open Telemetry this is",
    "start": "796880",
    "end": "799480"
  },
  {
    "text": "represented by a trace which is made up",
    "start": "799480",
    "end": "801360"
  },
  {
    "text": "of",
    "start": "801360",
    "end": "802040"
  },
  {
    "text": "spans so already um vendors have had to",
    "start": "802040",
    "end": "806639"
  },
  {
    "text": "adjust how this data is populated in",
    "start": "806639",
    "end": "809880"
  },
  {
    "text": "their UI because it is a different data",
    "start": "809880",
    "end": "814920"
  },
  {
    "text": "model and finally we have span kind",
    "start": "814920",
    "end": "818199"
  },
  {
    "text": "which impacts which has abil um",
    "start": "818199",
    "end": "821120"
  },
  {
    "text": "possibility to impact your air",
    "start": "821120",
    "end": "823240"
  },
  {
    "text": "reporting um some backends might have",
    "start": "823240",
    "end": "826920"
  },
  {
    "text": "opinions on whether a",
    "start": "826920",
    "end": "830759"
  },
  {
    "text": "uh sorry might have opinions on like",
    "start": "830759",
    "end": "833800"
  },
  {
    "text": "only server and consumer span kinds",
    "start": "833800",
    "end": "836040"
  },
  {
    "text": "should be counted to an error rate and",
    "start": "836040",
    "end": "837440"
  },
  {
    "text": "not internal errors for um for",
    "start": "837440",
    "end": "841199"
  },
  {
    "text": "example and in a second here Adriana is",
    "start": "841199",
    "end": "844079"
  },
  {
    "text": "actually going to uh take us through a",
    "start": "844079",
    "end": "846040"
  },
  {
    "text": "little demo and that's we're going to",
    "start": "846040",
    "end": "848000"
  },
  {
    "text": "where we're going to demonstrate kind of",
    "start": "848000",
    "end": "850000"
  },
  {
    "text": "like some of these differences you can",
    "start": "850000",
    "end": "851600"
  },
  {
    "text": "see from vendor to",
    "start": "851600",
    "end": "854279"
  },
  {
    "text": "vendor um in jerger oh another thing to",
    "start": "854279",
    "end": "857079"
  },
  {
    "text": "consider too",
    "start": "857079",
    "end": "859880"
  },
  {
    "text": "is some backends might have created a",
    "start": "859880",
    "end": "864480"
  },
  {
    "text": "different uh signal type for span events",
    "start": "864480",
    "end": "867720"
  },
  {
    "text": "um and jger they're represent as logs",
    "start": "867720",
    "end": "869839"
  },
  {
    "text": "because that's basically what they are",
    "start": "869839",
    "end": "872839"
  },
  {
    "text": "um so we'll show you an example of this",
    "start": "872839",
    "end": "874560"
  },
  {
    "text": "in just a little",
    "start": "874560",
    "end": "877160"
  },
  {
    "text": "bit okay demo time so um we are going to",
    "start": "877600",
    "end": "882079"
  },
  {
    "text": "do a demo it is not a live demo because",
    "start": "882079",
    "end": "884600"
  },
  {
    "text": "in my experience anytime there are live",
    "start": "884600",
    "end": "886720"
  },
  {
    "text": "demos bad things happen so it's",
    "start": "886720",
    "end": "889279"
  },
  {
    "text": "pre-recorded demo you still get to hear",
    "start": "889279",
    "end": "891759"
  },
  {
    "text": "my lovely voice as I live explain the",
    "start": "891759",
    "end": "894440"
  },
  {
    "text": "pre-recorded demo okay so we have a demo",
    "start": "894440",
    "end": "898000"
  },
  {
    "text": "application written in python there is a",
    "start": "898000",
    "end": "900560"
  },
  {
    "text": "client and there is a server it's a",
    "start": "900560",
    "end": "902880"
  },
  {
    "text": "simple application the client makes a",
    "start": "902880",
    "end": "905160"
  },
  {
    "text": "request to a r dice endpoint on the",
    "start": "905160",
    "end": "908440"
  },
  {
    "text": "server it's a flask application the",
    "start": "908440",
    "end": "910839"
  },
  {
    "text": "server rolls a virtual die I.E it",
    "start": "910839",
    "end": "914040"
  },
  {
    "text": "outputs a number between one and six and",
    "start": "914040",
    "end": "916240"
  },
  {
    "text": "outputs it to standard out now as I",
    "start": "916240",
    "end": "919759"
  },
  {
    "text": "mentioned there is a client and a server",
    "start": "919759",
    "end": "921720"
  },
  {
    "text": "portion to this application however the",
    "start": "921720",
    "end": "924160"
  },
  {
    "text": "client's not so interesting we'll be",
    "start": "924160",
    "end": "925680"
  },
  {
    "text": "looking at the server code and here are",
    "start": "925680",
    "end": "928120"
  },
  {
    "text": "the notable parts so here we have the",
    "start": "928120",
    "end": "930959"
  },
  {
    "text": "roll dice and point and this part here",
    "start": "930959",
    "end": "934560"
  },
  {
    "text": "basically calls another function called",
    "start": "934560",
    "end": "937440"
  },
  {
    "text": "do roll which actually does the work and",
    "start": "937440",
    "end": "940399"
  },
  {
    "text": "then we have this section at the bottom",
    "start": "940399",
    "end": "942600"
  },
  {
    "text": "which does the initialization for",
    "start": "942600",
    "end": "944240"
  },
  {
    "text": "application it initializes our flask",
    "start": "944240",
    "end": "946519"
  },
  {
    "text": "application it initializes our traces",
    "start": "946519",
    "end": "948319"
  },
  {
    "text": "and our metrics now this application has",
    "start": "948319",
    "end": "950560"
  },
  {
    "text": "been instrumented with open Telemetry",
    "start": "950560",
    "end": "952519"
  },
  {
    "text": "using Auto and manual instrumentation we",
    "start": "952519",
    "end": "955240"
  },
  {
    "text": "are adding some logs for the purposes of",
    "start": "955240",
    "end": "957959"
  },
  {
    "text": "demoing all this good stuff and for",
    "start": "957959",
    "end": "959600"
  },
  {
    "text": "funsies we're also capturing a",
    "start": "959600",
    "end": "962480"
  },
  {
    "text": "metric now inside the do roll function",
    "start": "962480",
    "end": "965639"
  },
  {
    "text": "we are creating a span called do roll",
    "start": "965639",
    "end": "969240"
  },
  {
    "text": "you can call it Bob for all I care it",
    "start": "969240",
    "end": "971120"
  },
  {
    "text": "does not matter but it should be a name",
    "start": "971120",
    "end": "973360"
  },
  {
    "text": "that's meaningful to you now in our span",
    "start": "973360",
    "end": "976680"
  },
  {
    "text": "we are doing a few things we are",
    "start": "976680",
    "end": "978560"
  },
  {
    "text": "creating an attribute we are also",
    "start": "978560",
    "end": "981000"
  },
  {
    "text": "creating a span event and that span",
    "start": "981000",
    "end": "983360"
  },
  {
    "text": "event has attributes of its own we are",
    "start": "983360",
    "end": "986399"
  },
  {
    "text": "also creating a log message it's an info",
    "start": "986399",
    "end": "988959"
  },
  {
    "text": "message um we are creating logs using",
    "start": "988959",
    "end": "991959"
  },
  {
    "text": "the python logs Bridge API aided by P",
    "start": "991959",
    "end": "994920"
  },
  {
    "text": "python Auto",
    "start": "994920",
    "end": "996839"
  },
  {
    "text": "instrumentation um which means it does",
    "start": "996839",
    "end": "999319"
  },
  {
    "text": "magical things because we are embedding",
    "start": "999319",
    "end": "1001800"
  },
  {
    "text": "our log within our uh span definition it",
    "start": "1001800",
    "end": "1005240"
  },
  {
    "text": "means that the log gets automatically",
    "start": "1005240",
    "end": "1007319"
  },
  {
    "text": "correlated to the span and then finally",
    "start": "1007319",
    "end": "1010399"
  },
  {
    "text": "we have the um our one metric it is a",
    "start": "1010399",
    "end": "1014240"
  },
  {
    "text": "counter uh instrument and this counter",
    "start": "1014240",
    "end": "1017360"
  },
  {
    "text": "gets incremented by one every single",
    "start": "1017360",
    "end": "1019759"
  },
  {
    "text": "time this function is called now this is",
    "start": "1019759",
    "end": "1023440"
  },
  {
    "text": "an errors talk so we should be throwing",
    "start": "1023440",
    "end": "1025880"
  },
  {
    "text": "an error at some point I have forced an",
    "start": "1025880",
    "end": "1028678"
  },
  {
    "text": "error basically every time a die roll is",
    "start": "1028679",
    "end": "1031918"
  },
  {
    "text": "divisible by two it will throw an",
    "start": "1031919",
    "end": "1034640"
  },
  {
    "text": "exception and this exception is caught",
    "start": "1034640",
    "end": "1037438"
  },
  {
    "text": "in the ru dice function now within the",
    "start": "1037439",
    "end": "1040438"
  },
  {
    "text": "ru dice function um if when if the",
    "start": "1040439",
    "end": "1043880"
  },
  {
    "text": "exception is caught then we create a",
    "start": "1043880",
    "end": "1046678"
  },
  {
    "text": "brand new trace and this Trace we're",
    "start": "1046679",
    "end": "1050080"
  },
  {
    "text": "saying okay we're capturing the",
    "start": "1050080",
    "end": "1052720"
  },
  {
    "text": "exception um by using record exception",
    "start": "1052720",
    "end": "1055400"
  },
  {
    "text": "Now record exception is basically a span",
    "start": "1055400",
    "end": "1057600"
  },
  {
    "text": "event but it embeds the stack Trace as",
    "start": "1057600",
    "end": "1060160"
  },
  {
    "text": "part of it and also just for funsies I'm",
    "start": "1060160",
    "end": "1063600"
  },
  {
    "text": "also creating a log message here and it",
    "start": "1063600",
    "end": "1065760"
  },
  {
    "text": "is an error uh the log level is",
    "start": "1065760",
    "end": "1068480"
  },
  {
    "text": "error so here is the video of the demo",
    "start": "1068480",
    "end": "1073000"
  },
  {
    "text": "now this repo is publicly available and",
    "start": "1073000",
    "end": "1075440"
  },
  {
    "text": "we'll include a link to the repo at the",
    "start": "1075440",
    "end": "1077360"
  },
  {
    "text": "end of this talk",
    "start": "1077360",
    "end": "1079440"
  },
  {
    "text": "um this is available on GitHub I've made",
    "start": "1079440",
    "end": "1081559"
  },
  {
    "text": "it available through GitHub code spaces",
    "start": "1081559",
    "end": "1083480"
  },
  {
    "text": "so you don't have to set up a local",
    "start": "1083480",
    "end": "1085760"
  },
  {
    "text": "environment to test this thing out um so",
    "start": "1085760",
    "end": "1088720"
  },
  {
    "text": "hopefully it'll SE save you some",
    "start": "1088720",
    "end": "1090039"
  },
  {
    "text": "headaches if you want to play around so",
    "start": "1090039",
    "end": "1092360"
  },
  {
    "text": "here we",
    "start": "1092360",
    "end": "1094360"
  },
  {
    "text": "go so first we are opening things up in",
    "start": "1094360",
    "end": "1098240"
  },
  {
    "text": "GitHub code spaces and it takes a couple",
    "start": "1098240",
    "end": "1101080"
  },
  {
    "text": "minutes to start up I sped things up so",
    "start": "1101080",
    "end": "1103760"
  },
  {
    "text": "you don't get bored um the other thing",
    "start": "1103760",
    "end": "1105960"
  },
  {
    "text": "is um The otel Collector can fig for",
    "start": "1105960",
    "end": "1109600"
  },
  {
    "text": "sending stuff to the observability",
    "start": "1109600",
    "end": "1111360"
  },
  {
    "text": "backends I put it in this otel call",
    "start": "1111360",
    "end": "1113640"
  },
  {
    "text": "config extras file which I've get",
    "start": "1113640",
    "end": "1115799"
  },
  {
    "text": "ignored because it's got some um some",
    "start": "1115799",
    "end": "1118919"
  },
  {
    "text": "keys to access the observability",
    "start": "1118919",
    "end": "1120559"
  },
  {
    "text": "backends which I do not want in GitHub",
    "start": "1120559",
    "end": "1123559"
  },
  {
    "text": "so that's been added separately next we",
    "start": "1123559",
    "end": "1126120"
  },
  {
    "text": "are building the docker images for the",
    "start": "1126120",
    "end": "1128120"
  },
  {
    "text": "python client and server we'll be",
    "start": "1128120",
    "end": "1129559"
  },
  {
    "text": "running this thing using Docker compose",
    "start": "1129559",
    "end": "1131840"
  },
  {
    "text": "in a minute once the images are built",
    "start": "1131840",
    "end": "1134080"
  },
  {
    "text": "little hamster is going",
    "start": "1134080",
    "end": "1138000"
  },
  {
    "text": "and it's almost done okay now it's done",
    "start": "1139720",
    "end": "1142880"
  },
  {
    "text": "we are going to run Docker compose so",
    "start": "1142880",
    "end": "1145480"
  },
  {
    "text": "this thing is going to start our python",
    "start": "1145480",
    "end": "1148000"
  },
  {
    "text": "client server The otel Collector and",
    "start": "1148000",
    "end": "1150559"
  },
  {
    "text": "joerger and we can see that it's running",
    "start": "1150559",
    "end": "1152480"
  },
  {
    "text": "here um now joerger is",
    "start": "1152480",
    "end": "1155679"
  },
  {
    "text": "automatically exposed um through port",
    "start": "1155679",
    "end": "1158640"
  },
  {
    "text": "16686 in GitHub codes spaces and if we",
    "start": "1158640",
    "end": "1161120"
  },
  {
    "text": "go over to the ports Tab and click on",
    "start": "1161120",
    "end": "1163240"
  },
  {
    "text": "the little Globe thingy um then we can",
    "start": "1163240",
    "end": "1165960"
  },
  {
    "text": "open up jerger in GitHub code spaces and",
    "start": "1165960",
    "end": "1169240"
  },
  {
    "text": "we can take a look at our",
    "start": "1169240",
    "end": "1171520"
  },
  {
    "text": "traces and as you can see we have some",
    "start": "1171520",
    "end": "1174720"
  },
  {
    "text": "traces that contain errors represented",
    "start": "1174720",
    "end": "1177080"
  },
  {
    "text": "by the big red dots and ones that do not",
    "start": "1177080",
    "end": "1179520"
  },
  {
    "text": "contain errors which are represented by",
    "start": "1179520",
    "end": "1181760"
  },
  {
    "text": "the little green dots so if we go to a",
    "start": "1181760",
    "end": "1183720"
  },
  {
    "text": "non-error one we can see our Trace with",
    "start": "1183720",
    "end": "1186799"
  },
  {
    "text": "four spans and we've got our do rule uh",
    "start": "1186799",
    "end": "1189880"
  },
  {
    "text": "span and it's got our uh span event and",
    "start": "1189880",
    "end": "1194080"
  },
  {
    "text": "the uh with the message and the two",
    "start": "1194080",
    "end": "1196080"
  },
  {
    "text": "attributes then going to our error Trace",
    "start": "1196080",
    "end": "1199559"
  },
  {
    "text": "you can see that our span we have the",
    "start": "1199559",
    "end": "1201600"
  },
  {
    "text": "one span with the error it's marked in",
    "start": "1201600",
    "end": "1203919"
  },
  {
    "text": "red um and it's got our usual span event",
    "start": "1203919",
    "end": "1207200"
  },
  {
    "text": "but also because it threw an error it's",
    "start": "1207200",
    "end": "1209559"
  },
  {
    "text": "also capturing the stack Trace um as a",
    "start": "1209559",
    "end": "1212440"
  },
  {
    "text": "new span event automatically",
    "start": "1212440",
    "end": "1214679"
  },
  {
    "text": "captured and because it's throwing an",
    "start": "1214679",
    "end": "1217240"
  },
  {
    "text": "exception that extra span that we",
    "start": "1217240",
    "end": "1219120"
  },
  {
    "text": "created shows up there as well and if we",
    "start": "1219120",
    "end": "1222320"
  },
  {
    "text": "click on that we should be able to see",
    "start": "1222320",
    "end": "1224760"
  },
  {
    "text": "our span event that we created that",
    "start": "1224760",
    "end": "1227799"
  },
  {
    "text": "captures the stature TR as well",
    "start": "1227799",
    "end": "1229360"
  },
  {
    "text": "obviously this is overkill we don't need",
    "start": "1229360",
    "end": "1231200"
  },
  {
    "text": "both of them but it was just for the",
    "start": "1231200",
    "end": "1232559"
  },
  {
    "text": "purposes of demonstrating this now we're",
    "start": "1232559",
    "end": "1234880"
  },
  {
    "text": "opening up a different observability",
    "start": "1234880",
    "end": "1236640"
  },
  {
    "text": "back end and as you can see um similar",
    "start": "1236640",
    "end": "1240440"
  },
  {
    "text": "interpretation looks slightly different",
    "start": "1240440",
    "end": "1242760"
  },
  {
    "text": "the red triangles represent the errors",
    "start": "1242760",
    "end": "1245440"
  },
  {
    "text": "uh the the traces with the eror spans",
    "start": "1245440",
    "end": "1247919"
  },
  {
    "text": "and the the green dots represent the",
    "start": "1247919",
    "end": "1249840"
  },
  {
    "text": "traces with the non-error spans so",
    "start": "1249840",
    "end": "1252840"
  },
  {
    "text": "similar thing we can see that um all is",
    "start": "1252840",
    "end": "1256280"
  },
  {
    "text": "good um we see our span event with our",
    "start": "1256280",
    "end": "1259240"
  },
  {
    "text": "message and our attributes but we can",
    "start": "1259240",
    "end": "1260919"
  },
  {
    "text": "also see our log message that we added",
    "start": "1260919",
    "end": "1262840"
  },
  {
    "text": "in because this backend supports um",
    "start": "1262840",
    "end": "1265559"
  },
  {
    "text": "supports logs and that the log is",
    "start": "1265559",
    "end": "1268440"
  },
  {
    "text": "actually correlated to this particular",
    "start": "1268440",
    "end": "1270480"
  },
  {
    "text": "span and if we click on the log we can",
    "start": "1270480",
    "end": "1272520"
  },
  {
    "text": "see the log message and we can see it",
    "start": "1272520",
    "end": "1275039"
  },
  {
    "text": "also in within the context of other log",
    "start": "1275039",
    "end": "1277640"
  },
  {
    "text": "messages that belong to the same Trace",
    "start": "1277640",
    "end": "1280000"
  },
  {
    "text": "so we have that correlation now we look",
    "start": "1280000",
    "end": "1282120"
  },
  {
    "text": "at an uh at one of the error",
    "start": "1282120",
    "end": "1284600"
  },
  {
    "text": "spans and clicking on that we can see",
    "start": "1284600",
    "end": "1287360"
  },
  {
    "text": "the do ru incurred an error so it's got",
    "start": "1287360",
    "end": "1290559"
  },
  {
    "text": "it's showing up as red we have our",
    "start": "1290559",
    "end": "1293880"
  },
  {
    "text": "additional span event with the stack",
    "start": "1293880",
    "end": "1295960"
  },
  {
    "text": "Trace which we expected and again we",
    "start": "1295960",
    "end": "1298600"
  },
  {
    "text": "should see our same log message and",
    "start": "1298600",
    "end": "1300600"
  },
  {
    "text": "because it was an info message we don't",
    "start": "1300600",
    "end": "1302679"
  },
  {
    "text": "expect it to look you know scary in red",
    "start": "1302679",
    "end": "1305919"
  },
  {
    "text": "um but we can see again there's the",
    "start": "1305919",
    "end": "1307600"
  },
  {
    "text": "correlation to the the overall trace and",
    "start": "1307600",
    "end": "1311000"
  },
  {
    "text": "we also see our even number span that",
    "start": "1311000",
    "end": "1313400"
  },
  {
    "text": "was created because we incurred that",
    "start": "1313400",
    "end": "1314919"
  },
  {
    "text": "error which has our exception message",
    "start": "1314919",
    "end": "1317640"
  },
  {
    "text": "and also our log message which we didn't",
    "start": "1317640",
    "end": "1320120"
  },
  {
    "text": "see in joerger right because jerger",
    "start": "1320120",
    "end": "1321840"
  },
  {
    "text": "doesn't support um logs so if we click",
    "start": "1321840",
    "end": "1324840"
  },
  {
    "text": "on this log then we will be able to see",
    "start": "1324840",
    "end": "1327960"
  },
  {
    "text": "the log message in a minute um which",
    "start": "1327960",
    "end": "1332400"
  },
  {
    "text": "because it was an error it shows up in",
    "start": "1332400",
    "end": "1334360"
  },
  {
    "text": "red and again we can see it in the",
    "start": "1334360",
    "end": "1336679"
  },
  {
    "text": "context of other log messages that were",
    "start": "1336679",
    "end": "1339159"
  },
  {
    "text": "part of the same",
    "start": "1339159",
    "end": "1340360"
  },
  {
    "text": "Trace so um now re is going to show you",
    "start": "1340360",
    "end": "1344000"
  },
  {
    "text": "what that looks like in a different and",
    "start": "1344000",
    "end": "1346200"
  },
  {
    "text": "in yet another observability backend",
    "start": "1346200",
    "end": "1348240"
  },
  {
    "text": "just to give you an idea of um you know",
    "start": "1348240",
    "end": "1351240"
  },
  {
    "text": "it it's kind of interesting to see how",
    "start": "1351240",
    "end": "1353200"
  },
  {
    "text": "how different products um interpret",
    "start": "1353200",
    "end": "1355600"
  },
  {
    "text": "things in different ways yeah and I",
    "start": "1355600",
    "end": "1357840"
  },
  {
    "text": "think it's really valuable for end users",
    "start": "1357840",
    "end": "1359720"
  },
  {
    "text": "to kind of understand and get a look at",
    "start": "1359720",
    "end": "1362200"
  },
  {
    "text": "how they are represented differently um",
    "start": "1362200",
    "end": "1364279"
  },
  {
    "text": "so this is an example of um how traces",
    "start": "1364279",
    "end": "1367039"
  },
  {
    "text": "might be visualized so here we've got a",
    "start": "1367039",
    "end": "1369880"
  },
  {
    "text": "group of traces which we can see easily",
    "start": "1369880",
    "end": "1373360"
  },
  {
    "text": "which one of them had errors and from",
    "start": "1373360",
    "end": "1376159"
  },
  {
    "text": "there we can click into one of the",
    "start": "1376159",
    "end": "1378039"
  },
  {
    "text": "traces with an error and look for the",
    "start": "1378039",
    "end": "1380679"
  },
  {
    "text": "span that has the error and from there",
    "start": "1380679",
    "end": "1383640"
  },
  {
    "text": "we can see metadata about the Span in",
    "start": "1383640",
    "end": "1385559"
  },
  {
    "text": "this case the span status code the",
    "start": "1385559",
    "end": "1388039"
  },
  {
    "text": "status code description as well as the",
    "start": "1388039",
    "end": "1390600"
  },
  {
    "text": "fact that there was a span event",
    "start": "1390600",
    "end": "1392440"
  },
  {
    "text": "captured when we click into the span",
    "start": "1392440",
    "end": "1394520"
  },
  {
    "text": "event um which you can see here is",
    "start": "1394520",
    "end": "1396760"
  },
  {
    "text": "referenced as",
    "start": "1396760",
    "end": "1399200"
  },
  {
    "text": "a span events um versus a log as it was",
    "start": "1399200",
    "end": "1403120"
  },
  {
    "text": "in jger sorry I clicked too fast and I",
    "start": "1403120",
    "end": "1404919"
  },
  {
    "text": "don't know how to go back um but also",
    "start": "1404919",
    "end": "1407760"
  },
  {
    "text": "we're running out time so I got to go",
    "start": "1407760",
    "end": "1410640"
  },
  {
    "text": "um this backend has created a new signal",
    "start": "1410640",
    "end": "1414600"
  },
  {
    "text": "type for span events called span events",
    "start": "1414600",
    "end": "1416799"
  },
  {
    "text": "um and so in jger it was represented as",
    "start": "1416799",
    "end": "1420080"
  },
  {
    "text": "a log here is represented as a span",
    "start": "1420080",
    "end": "1424120"
  },
  {
    "text": "event and you can also navigate to the",
    "start": "1424120",
    "end": "1428840"
  },
  {
    "text": "associated logs and vice versa because",
    "start": "1428840",
    "end": "1431880"
  },
  {
    "text": "this backend supports trace and logs",
    "start": "1431880",
    "end": "1434799"
  },
  {
    "text": "correlation",
    "start": "1434799",
    "end": "1437799"
  },
  {
    "text": "yep and there you have it I believe we",
    "start": "1441720",
    "end": "1444600"
  },
  {
    "text": "have one minute to wrap up so error",
    "start": "1444600",
    "end": "1447120"
  },
  {
    "text": "handling is challenge open cemetry",
    "start": "1447120",
    "end": "1449279"
  },
  {
    "text": "provides a an open standard blueprint",
    "start": "1449279",
    "end": "1451520"
  },
  {
    "text": "for how to handle these errors as well",
    "start": "1451520",
    "end": "1454120"
  },
  {
    "text": "as providing different ways for us to",
    "start": "1454120",
    "end": "1455880"
  },
  {
    "text": "record errors through spans logs and it",
    "start": "1455880",
    "end": "1458120"
  },
  {
    "text": "supports correlation you can enhance",
    "start": "1458120",
    "end": "1460440"
  },
  {
    "text": "spans with metadata uh span status span",
    "start": "1460440",
    "end": "1463520"
  },
  {
    "text": "kind and a couple other different ways",
    "start": "1463520",
    "end": "1465399"
  },
  {
    "text": "that we covered and how your data is",
    "start": "1465399",
    "end": "1468799"
  },
  {
    "text": "visualized in your back end may be a",
    "start": "1468799",
    "end": "1470559"
  },
  {
    "text": "little bit different than how you have",
    "start": "1470559",
    "end": "1472240"
  },
  {
    "text": "may have been used to by using a",
    "start": "1472240",
    "end": "1473880"
  },
  {
    "text": "proprietary agent instrumentation simply",
    "start": "1473880",
    "end": "1475960"
  },
  {
    "text": "because open",
    "start": "1475960",
    "end": "1477480"
  },
  {
    "text": "Telemetry models erors differently than",
    "start": "1477480",
    "end": "1479799"
  },
  {
    "text": "how vendors have been",
    "start": "1479799",
    "end": "1481480"
  },
  {
    "text": "doing not all images are created by",
    "start": "1481480",
    "end": "1483600"
  },
  {
    "text": "humans um Dolly but honestly Adriana is",
    "start": "1483600",
    "end": "1486480"
  },
  {
    "text": "an amazing prompt engineer and did all",
    "start": "1486480",
    "end": "1488320"
  },
  {
    "text": "the penguin images it was",
    "start": "1488320",
    "end": "1490919"
  },
  {
    "text": "fun and we have some handy QR codes for",
    "start": "1490919",
    "end": "1494760"
  },
  {
    "text": "you to check out yeah I I have a podcast",
    "start": "1494760",
    "end": "1497919"
  },
  {
    "text": "called geek out and I've had guests like",
    "start": "1497919",
    "end": "1499720"
  },
  {
    "text": "Kelsey high tower and charity majors and",
    "start": "1499720",
    "end": "1501799"
  },
  {
    "text": "Reese so you should totally check it out",
    "start": "1501799",
    "end": "1504159"
  },
  {
    "text": "um also come see us in the otel",
    "start": "1504159",
    "end": "1505760"
  },
  {
    "text": "observatory At cubec Con starting",
    "start": "1505760",
    "end": "1507600"
  },
  {
    "text": "tomorrow we've got some really cool",
    "start": "1507600",
    "end": "1509240"
  },
  {
    "text": "stuff going on um including end user",
    "start": "1509240",
    "end": "1512480"
  },
  {
    "text": "feedback sessions so please if you have",
    "start": "1512480",
    "end": "1515240"
  },
  {
    "text": "any feedback on open Telemetry sign up",
    "start": "1515240",
    "end": "1517200"
  },
  {
    "text": "for one of the feedback sessions we",
    "start": "1517200",
    "end": "1518679"
  },
  {
    "text": "would love to hear from",
    "start": "1518679",
    "end": "1520120"
  },
  {
    "text": "you and come join us on Thursday for a",
    "start": "1520120",
    "end": "1522760"
  },
  {
    "text": "party that we're hosting with our",
    "start": "1522760",
    "end": "1524039"
  },
  {
    "text": "friends Docker plumy and tail scale and",
    "start": "1524039",
    "end": "1527080"
  },
  {
    "text": "we also have some handy legs here um to",
    "start": "1527080",
    "end": "1530360"
  },
  {
    "text": "reference from the slide from a talk",
    "start": "1530360",
    "end": "1532120"
  },
  {
    "text": "today thank you so much",
    "start": "1532120",
    "end": "1533980"
  },
  {
    "text": "[Applause]",
    "start": "1533980",
    "end": "1538730"
  }
]