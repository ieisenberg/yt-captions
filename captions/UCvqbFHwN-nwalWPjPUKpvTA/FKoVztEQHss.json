[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "all right thanks everybody for coming out after lunch on the last day of coop",
    "start": "30",
    "end": "5190"
  },
  {
    "text": "con selfie oh wow actually maybe at the end because we've",
    "start": "5190",
    "end": "12690"
  },
  {
    "text": "got a lot to get through and I don't know if we can pull it off but so no intro you heard who I am what I want to",
    "start": "12690",
    "end": "20850"
  },
  {
    "start": "20000",
    "end": "86000"
  },
  {
    "text": "do is give you a very very quick whirlwind tour of why we are where we are who's been in this room before lunch",
    "start": "20850",
    "end": "29039"
  },
  {
    "text": "at either of the two presentations yeah not enough so we do we have to go through this because actually both prior",
    "start": "29039",
    "end": "36360"
  },
  {
    "text": "speakers did a great job of kind of walking through where we are but really the OCI open container initiative has brought us",
    "start": "36360",
    "end": "44160"
  },
  {
    "text": "to this place where a multiple OCI compliant run times we have compliant",
    "start": "44160",
    "end": "49200"
  },
  {
    "text": "registries the distribution spec is being worked on this year in the OCI and so we have this this set of runtimes",
    "start": "49200",
    "end": "57149"
  },
  {
    "text": "which is both great in one sense but also can be confusing you know what do I use why do I make these choices and so",
    "start": "57149",
    "end": "63750"
  },
  {
    "text": "the idea for this talk was to give you again a very very fast-paced kind of walk through all your options I can't",
    "start": "63750",
    "end": "71490"
  },
  {
    "text": "tell you what to choose but hopefully maybe through the the work I did to try and get this all set up and working it",
    "start": "71490",
    "end": "78240"
  },
  {
    "text": "may give you some insights as far as you know why why various runtimes exist why",
    "start": "78240",
    "end": "83549"
  },
  {
    "text": "they've been created and really following the OCI kubernetes said hey",
    "start": "83549",
    "end": "90180"
  },
  {
    "start": "86000",
    "end": "107000"
  },
  {
    "text": "this is going to be crazy trying to support all these runtimes in the codebase we need an interface where we abstract this CRI is the",
    "start": "90180",
    "end": "97829"
  },
  {
    "text": "container runtime interface and kubernetes again there's implementation",
    "start": "97829",
    "end": "102990"
  },
  {
    "text": "details behind that lots more great talks that you can find online just",
    "start": "102990",
    "end": "108360"
  },
  {
    "start": "107000",
    "end": "145000"
  },
  {
    "text": "briefly obviously the runtime has certain responsibilities that really are",
    "start": "108360",
    "end": "114149"
  },
  {
    "text": "around the pod lifecycle itself starting pods stopping pod status pulling images",
    "start": "114149",
    "end": "120570"
  },
  {
    "text": "do I have this image where the logs give me a you know exactly a process",
    "start": "120570",
    "end": "127920"
  },
  {
    "text": "everything else is handed by kubernetes all the orchestration of course this",
    "start": "127920",
    "end": "133900"
  },
  {
    "text": "pictures even you know not quite correct there's other little sub pizzas whether we're talking to CNI or CSI for storage",
    "start": "133900",
    "end": "140680"
  },
  {
    "text": "but again that's all outside of the runtimes purview so this is a picture",
    "start": "140680",
    "end": "147310"
  },
  {
    "start": "145000",
    "end": "180000"
  },
  {
    "text": "I've shown at multiple talks it's almost up to date it's almost correct but again",
    "start": "147310",
    "end": "153370"
  },
  {
    "text": "this is kind of the the suite of runtimes that we'll look at today all the way from Dockers or Container de",
    "start": "153370",
    "end": "159459"
  },
  {
    "text": "creo and then what I what a lot of people call the sandbox VMs or sandbox",
    "start": "159459",
    "end": "165720"
  },
  {
    "text": "concepts which includes VMs and G visor and others and then at the very end",
    "start": "165720",
    "end": "171129"
  },
  {
    "text": "we'll talk about Sinclair D which is a a high-performance computing academic runtime which also has a CR I know and",
    "start": "171129",
    "end": "178120"
  },
  {
    "text": "we'll look at that briefly as well here's the caveats I don't have time to",
    "start": "178120",
    "end": "183370"
  },
  {
    "start": "180000",
    "end": "217000"
  },
  {
    "text": "do possibly everything including I'm not doing Windows which has runtimes as well",
    "start": "183370",
    "end": "189389"
  },
  {
    "text": "I'm not doing rocket which of course is a CNC F project but again I don't have",
    "start": "189389",
    "end": "194530"
  },
  {
    "text": "that set up and then virtual couplet actually implement the CRI as well but",
    "start": "194530",
    "end": "200199"
  },
  {
    "text": "it isn't necessarily in the realm of container runtimes nabla I'm going to talk about briefly as long as we have",
    "start": "200199",
    "end": "206290"
  },
  {
    "text": "time but I didn't actually have time to set up a demo so those are the things",
    "start": "206290",
    "end": "211419"
  },
  {
    "text": "you won't see but are in the sort of related area of runtimes and then you",
    "start": "211419",
    "end": "218919"
  },
  {
    "start": "217000",
    "end": "243000"
  },
  {
    "text": "know when you write your your CFP you have this grand idea that this is going to be amazing I'm going to create this",
    "start": "218919",
    "end": "224500"
  },
  {
    "text": "super cluster all these nodes different runtimes in the same cluster you know if",
    "start": "224500",
    "end": "230290"
  },
  {
    "text": "if you ever searched the nailed it fails this is an example you know you're gonna",
    "start": "230290",
    "end": "235659"
  },
  {
    "text": "take this amazing picture you saw somewhere but in reality it's a lot Messier so that's what you're gonna see",
    "start": "235659",
    "end": "242349"
  },
  {
    "text": "today I have multiple clusters I've got gke to show to know cluster to show",
    "start": "242349",
    "end": "247870"
  },
  {
    "start": "243000",
    "end": "323000"
  },
  {
    "text": "docker again not that exciting we've been using docker as a kubernetes runtime for a very long time but again",
    "start": "247870",
    "end": "255849"
  },
  {
    "text": "just to just to fulfill my promise we've got docker I've got an IBM kubernetes",
    "start": "255849",
    "end": "262150"
  },
  {
    "text": "service three node container D cluster but then - I thought about hacky",
    "start": "262150",
    "end": "267760"
  },
  {
    "text": "that up to try and do some of the other interesting sandbox implementations but",
    "start": "267760",
    "end": "273490"
  },
  {
    "text": "a bare-metal to access dev KVM for the VMS so I grabbed a bare-metal instance",
    "start": "273490",
    "end": "279490"
  },
  {
    "text": "and I've container D and that's where I'll show a firecracker that's where I'll show cata and G visor I have",
    "start": "279490",
    "end": "287350"
  },
  {
    "text": "another single node VM with with creo I used cube ATM to install that and then",
    "start": "287350",
    "end": "293500"
  },
  {
    "text": "someone in IBM cloud said hey I've been messing around with the with the community version of OpenShift so I've",
    "start": "293500",
    "end": "301000"
  },
  {
    "text": "got a three node cluster so I also have that with creo so these are the pieces I'll be showing to give you kind of that",
    "start": "301000",
    "end": "308230"
  },
  {
    "text": "that quick demo of each each runtime and then at the end of each I'll kind of give you there'll be a slide with a lot",
    "start": "308230",
    "end": "314560"
  },
  {
    "text": "of words on it I'll probably try not to read all the words I will share it online so you can easily reference that",
    "start": "314560",
    "end": "321550"
  },
  {
    "text": "after the talk so first obviously as I said docker",
    "start": "321550",
    "end": "327250"
  },
  {
    "start": "323000",
    "end": "521000"
  },
  {
    "text": "since the beginning of the kubernetes project has been that default runtime that that handles this pod lifecycle for",
    "start": "327250",
    "end": "336040"
  },
  {
    "text": "your containers that get created and started again I said I would I would",
    "start": "336040",
    "end": "343090"
  },
  {
    "text": "demo all of them so if I go here and",
    "start": "343090",
    "end": "349020"
  },
  {
    "text": "show you this gke cluster we should see",
    "start": "349020",
    "end": "355960"
  },
  {
    "text": "two nodes as I said at the very end I know this is messy I tried to make the fun big enough is this going to work for",
    "start": "355960",
    "end": "362440"
  },
  {
    "text": "those in the back partially I can even",
    "start": "362440",
    "end": "367570"
  },
  {
    "text": "make it bigger so at the very end of this raft line which is a little messy",
    "start": "367570",
    "end": "373570"
  },
  {
    "text": "you see docker 89.3 so again gke by default when you create a kubernetes",
    "start": "373570",
    "end": "378880"
  },
  {
    "text": "cluster you end up with docker engine you can also during that gke process of",
    "start": "378880",
    "end": "384580"
  },
  {
    "text": "creating a cluster you can pick the container d image and you can actually use container d and i don't speak for",
    "start": "384580",
    "end": "391510"
  },
  {
    "text": "google but i believe they will be maybe moving fully to container d in the near",
    "start": "391510",
    "end": "396940"
  },
  {
    "text": "future like we do in IKS at this point we can",
    "start": "396940",
    "end": "403870"
  },
  {
    "text": "we can obviously deploy a simple you know engine X Y Amal and see that you",
    "start": "403870",
    "end": "414009"
  },
  {
    "text": "know we have pods running running engine X we know that running of a docker engine I'm not going to access the worker nodes",
    "start": "414009",
    "end": "420099"
  },
  {
    "text": "and prove that but I'm sure you believe me on that so again this is the most",
    "start": "420099",
    "end": "428440"
  },
  {
    "text": "common original runtime for kubernetes actually one of the benefits that",
    "start": "428440",
    "end": "433659"
  },
  {
    "text": "simplifies tooling so if you have tools that kind of cheated and knew that there was a doctor engine on your worker node",
    "start": "433659",
    "end": "440979"
  },
  {
    "text": "is that happening regularly got a little",
    "start": "440979",
    "end": "446800"
  },
  {
    "text": "bit of a cable mess up here so again",
    "start": "446800",
    "end": "453669"
  },
  {
    "text": "docker being up in that worker node makes it simpler for tools that may be run outside of the kubernetes",
    "start": "453669",
    "end": "459250"
  },
  {
    "text": "infrastructure and just use you know docker commands and again as people have",
    "start": "459250",
    "end": "465009"
  },
  {
    "text": "migrated away from docker to other CRI implementations that's definitely been an interesting challenge to find that",
    "start": "465009",
    "end": "472830"
  },
  {
    "text": "you know basically some tuples need to to be reworked to not expect the docker",
    "start": "472830",
    "end": "479650"
  },
  {
    "text": "engine or the docker api socket definitely in some sense it's more than",
    "start": "479650",
    "end": "485710"
  },
  {
    "text": "enough engine for kubernetes there was a talk here just before lunch about a company migrating to container d and",
    "start": "485710",
    "end": "492430"
  },
  {
    "text": "making the comment that it's really more than than what we needed and then over",
    "start": "492430",
    "end": "497889"
  },
  {
    "text": "over time and what really brought about some of the other CRI implementations with were these concerns over Dockers",
    "start": "497889",
    "end": "503620"
  },
  {
    "text": "lifecycle versioning and kubernetes and kind of the synchronization between that",
    "start": "503620",
    "end": "508779"
  },
  {
    "text": "and you know which engine version would actually work with which kubernetes version and obviously because the docker",
    "start": "508779",
    "end": "515200"
  },
  {
    "text": "engine has more capabilities and components extra memory and CPU use",
    "start": "515200",
    "end": "521700"
  },
  {
    "start": "521000",
    "end": "628000"
  },
  {
    "text": "container D so again this is the project where I'm a maintainer we have several",
    "start": "521700",
    "end": "526779"
  },
  {
    "text": "other maintainer z' here in the room and if you're interested in a lot more detail about container d the deep-dive session",
    "start": "526779",
    "end": "534130"
  },
  {
    "text": "is this afternoon I think 355 in room e4 but it's on sked you can find it and",
    "start": "534130",
    "end": "543660"
  },
  {
    "text": "easily go to that so if you want to hear a lot more about container t's architecture how it's used you can go to",
    "start": "543660",
    "end": "550540"
  },
  {
    "text": "that session again I will demo using a",
    "start": "550540",
    "end": "561990"
  },
  {
    "text": "again this is my IKS three node cluster so again if we make that font size a",
    "start": "561990",
    "end": "568360"
  },
  {
    "text": "little bit larger you can see here again at the end of the raft line container D 1 dot 2 dot 6 is the version that I'm",
    "start": "568360",
    "end": "576190"
  },
  {
    "text": "using in this cluster and again we can we can deploy our same exact yamo again",
    "start": "576190",
    "end": "584920"
  },
  {
    "text": "the value of the OCI here is that I don't have different images when I ran on GK's docker docker backed cluster and",
    "start": "584920",
    "end": "594640"
  },
  {
    "text": "so I don't have a different image here and so obviously if I look at these pods",
    "start": "594640",
    "end": "599980"
  },
  {
    "text": "you know they're up and running they're using container D I could login to the",
    "start": "599980",
    "end": "605080"
  },
  {
    "text": "worker nodes and prove that to you and actually for the next several when we look at the sandbox VMs or VMs and other",
    "start": "605080",
    "end": "612390"
  },
  {
    "text": "isolation techniques we'll actually have access to the command line of the host and and we can validate what's actually",
    "start": "612390",
    "end": "619450"
  },
  {
    "text": "running but again suffice it to say docker container D very straightforward",
    "start": "619450",
    "end": "625410"
  },
  {
    "text": "to to run that so again container DS kind of current status gke you've got it in beta you can",
    "start": "625410",
    "end": "632890"
  },
  {
    "text": "select it when you create a cluster IBM's IKS service has moved fully to",
    "start": "632890",
    "end": "638440"
  },
  {
    "text": "container D so all new clusters they get created use container D is the runtime Alibaba cloud is also using container D",
    "start": "638440",
    "end": "646260"
  },
  {
    "text": "significantly across their platform interestingly every docker installation",
    "start": "646260",
    "end": "652450"
  },
  {
    "text": "also includes container D so every in a sense every public cloud that's using",
    "start": "652450",
    "end": "657790"
  },
  {
    "text": "docker is also using container D and by nature of that we get lots and lots of testing",
    "start": "657790",
    "end": "663900"
  },
  {
    "text": "the platform you know even those millions of developers who install docker desktop that's also using",
    "start": "663900",
    "end": "670800"
  },
  {
    "text": "container D obviously a value of continuity being smaller is that you",
    "start": "670800",
    "end": "675980"
  },
  {
    "text": "memory CPU usage and it's also got a really nice clean API which again you",
    "start": "675980",
    "end": "681660"
  },
  {
    "text": "could hear more about if you go to the deep dive it's obviously without the docker",
    "start": "681660",
    "end": "687630"
  },
  {
    "text": "tooling an API socket you have this migration complexity for a plugins and",
    "start": "687630",
    "end": "694740"
  },
  {
    "text": "tools so IBM we've worked with a lot of our our partners and IBM cloud so you",
    "start": "694740",
    "end": "700890"
  },
  {
    "text": "may have seen announcement Cystic sports container d or assisting sports cryo all these tools twistlock aqua and",
    "start": "700890",
    "end": "708360"
  },
  {
    "text": "others have had to make this migration off dependence on the docker API or the docker tooling and again other things",
    "start": "708360",
    "end": "716100"
  },
  {
    "text": "are in flight but again we should move on to creo so creo as I said I've got a couple",
    "start": "716100",
    "end": "723780"
  },
  {
    "start": "719000",
    "end": "841000"
  },
  {
    "text": "setups so let's look at this one I have",
    "start": "723780",
    "end": "729650"
  },
  {
    "text": "here I have a VM and I tweeted this the other day just to to be goofy but my VM",
    "start": "729650",
    "end": "737190"
  },
  {
    "text": "was originally for container D and so it's host name is container D but it's running creo so that's just your your",
    "start": "737190",
    "end": "744270"
  },
  {
    "text": "container runtime joke for the day so again I'm running again a single a",
    "start": "744270",
    "end": "749280"
  },
  {
    "text": "cluster I brought up with cube ATM I also have access to that cluster I",
    "start": "749280",
    "end": "756540"
  },
  {
    "text": "mentioned and yeah here you can see the",
    "start": "756540",
    "end": "763740"
  },
  {
    "text": "output of that it's running again the okd the community distribution also",
    "start": "763740",
    "end": "769170"
  },
  {
    "text": "running creo 1.11 so again it's a little bit older than my cube ATM up cluster",
    "start": "769170",
    "end": "778080"
  },
  {
    "text": "here so again we can we can do the same and your next example and see that we",
    "start": "778080",
    "end": "789690"
  },
  {
    "text": "should have some nginx pods again running here now this I'm actually on",
    "start": "789690",
    "end": "794880"
  },
  {
    "text": "the node that's running so then again a single node cluster I'm on the note itself and so we",
    "start": "794880",
    "end": "801220"
  },
  {
    "text": "should be able to see what we can actually see all these conman processes",
    "start": "801220",
    "end": "808240"
  },
  {
    "text": "from container D handling the actual connection to the the containers",
    "start": "808240",
    "end": "814900"
  },
  {
    "text": "themselves and we can also see the the",
    "start": "814900",
    "end": "820720"
  },
  {
    "text": "creo daemon running actually now that we have containers running we'd have to",
    "start": "820720",
    "end": "825790"
  },
  {
    "text": "scroll back but again based on time I think it's clear that creo is running these pods and that the creo engine is",
    "start": "825790",
    "end": "833860"
  },
  {
    "text": "the CRI configured runtime for this single node cluster again creo is used",
    "start": "833860",
    "end": "842530"
  },
  {
    "start": "841000",
    "end": "935000"
  },
  {
    "text": "in OpenShift it's sousei uses in their container as a service platform there",
    "start": "842530",
    "end": "849760"
  },
  {
    "text": "are other customers and uses of creo I believe there's an end user in the CAF",
    "start": "849760",
    "end": "855820"
  },
  {
    "text": "community who has mentioned that they're using creo as well again the creo team has promoted as all",
    "start": "855820",
    "end": "864880"
  },
  {
    "text": "the runtime queue beneath these needs and nothing more and has this idea of kind of concerns so instead of all the",
    "start": "864880",
    "end": "872050"
  },
  {
    "text": "pieces being in a single engine there's pod man there's build a scope EO",
    "start": "872050",
    "end": "877180"
  },
  {
    "text": "and so they all work together on the same back end now again because it's",
    "start": "877180",
    "end": "885100"
  },
  {
    "text": "meant primarily for kubernetes so again it doesn't have necessarily tools of its",
    "start": "885100",
    "end": "890800"
  },
  {
    "text": "own like a client so you use the other tools as a again as a design choice I",
    "start": "890800",
    "end": "897700"
  },
  {
    "text": "found that you know use an installation of it unlike a bun toot it's because that VM was a bun too can be complicated",
    "start": "897700",
    "end": "905110"
  },
  {
    "text": "again the team is aware of that there's some issues open and that's being solved and again a design choice is that unlike",
    "start": "905110",
    "end": "913540"
  },
  {
    "text": "container has the API and the extensibility it's really again meant to be for kubernetes and so there is a",
    "start": "913540",
    "end": "922120"
  },
  {
    "text": "proposal from Canada at the shim API to again make make creo similar to",
    "start": "922120",
    "end": "927600"
  },
  {
    "text": "container D with extensibility around adding some of the sandbox implementations so from here we're going",
    "start": "927600",
    "end": "936399"
  },
  {
    "text": "to talk only about several sandbox implementations and we're also going to use runtime class as a way to to execute",
    "start": "936399",
    "end": "945160"
  },
  {
    "text": "a few of those so this came around in kubernetes 112 prior to this there was a",
    "start": "945160",
    "end": "950470"
  },
  {
    "text": "notion in the pods back of an untrusted runtime so if you had a workload that",
    "start": "950470",
    "end": "955959"
  },
  {
    "text": "you wanted a higher level of isolation on you could basically say this is an untrusted workload and then the way you",
    "start": "955959",
    "end": "962290"
  },
  {
    "text": "had set up your cluster is that you either use cata or one of the other sand boxes as the implementation of that",
    "start": "962290",
    "end": "968620"
  },
  {
    "text": "untrusted runtime runtime class brought more flexibility and that you could add multiple runtimes with a name and a",
    "start": "968620",
    "end": "975939"
  },
  {
    "text": "handler and so at that point you could then begin to to basically specify in a",
    "start": "975939",
    "end": "981879"
  },
  {
    "text": "pod this pod should work under this run time you use this runtime here or to",
    "start": "981879",
    "end": "988209"
  },
  {
    "text": "create and start this pod and so that's where we're going to show here in a",
    "start": "988209",
    "end": "994689"
  },
  {
    "start": "994000",
    "end": "1473000"
  },
  {
    "text": "minute before I did that I thought this picture from the Cata folks was helpful that again why we added the v2 shim API",
    "start": "994689",
    "end": "1002269"
  },
  {
    "text": "in a sense many of these Sam boxes were seen as just run C replacements so again all",
    "start": "1002269",
    "end": "1008100"
  },
  {
    "text": "these runtimes are using the OCI runtime at the bottom and so one easy way to to",
    "start": "1008100",
    "end": "1014610"
  },
  {
    "text": "add functionality like rapid in a VM was to replace run C and that required sort",
    "start": "1014610",
    "end": "1020550"
  },
  {
    "text": "of a complicated set of other you know shims and proxies around it with",
    "start": "1020550",
    "end": "1025980"
  },
  {
    "text": "container DS chemin de she meant a ssin",
    "start": "1025980",
    "end": "1032188"
  },
  {
    "text": "for your runtime which again in this case cata could then have that direct",
    "start": "1032189",
    "end": "1037438"
  },
  {
    "text": "link to their agent to talk to inside the VM and again so this simplified the",
    "start": "1037439",
    "end": "1044100"
  },
  {
    "text": "picture and so now you'll see in a minute we have many shims available for",
    "start": "1044100",
    "end": "1049200"
  },
  {
    "text": "container D to run the various sand boxes so the first one I will show is",
    "start": "1049200",
    "end": "1055470"
  },
  {
    "text": "cata",
    "start": "1055470",
    "end": "1057830"
  },
  {
    "text": "and so I think just based on what I just said I think the first thing that would",
    "start": "1061450",
    "end": "1067370"
  },
  {
    "text": "be maybe interesting to show you is that I've installed a set of shims that",
    "start": "1067370",
    "end": "1076610"
  },
  {
    "text": "includes a DBS firecracker it includes the standard v1 and v2 run C shims and",
    "start": "1076610",
    "end": "1083480"
  },
  {
    "text": "includes run SC which is for G Visor and also the the cata shim as well so again",
    "start": "1083480",
    "end": "1091190"
  },
  {
    "text": "on this node where I have a single node cluster container D is the runtime but",
    "start": "1091190",
    "end": "1096620"
  },
  {
    "text": "container D can drive these other shims by either specifying it in the container",
    "start": "1096620",
    "end": "1101630"
  },
  {
    "text": "D client or by using runtime class which is what we're going to do so again to",
    "start": "1101630",
    "end": "1108010"
  },
  {
    "text": "just show you what's what we have here again this is a bare-metal instance so",
    "start": "1108010",
    "end": "1114740"
  },
  {
    "text": "it has the ability again you could use message of virtualization if that's available in your eyes in my case I'm",
    "start": "1114740",
    "end": "1121279"
  },
  {
    "text": "using a bare metal instance so I can run KBM so I've got container deed and the",
    "start": "1121279",
    "end": "1127039"
  },
  {
    "text": "version number is kind of messy because I'm running off master and so this is",
    "start": "1127039",
    "end": "1132649"
  },
  {
    "text": "basically 1 to 6 plus which I needed for some of the the fixes that that had to",
    "start": "1132649",
    "end": "1139100"
  },
  {
    "text": "be available for for doing some of the demos but again kubernetes 1.14 dot 2 so",
    "start": "1139100",
    "end": "1146360"
  },
  {
    "text": "the first thing I'm going to do first",
    "start": "1146360",
    "end": "1155750"
  },
  {
    "text": "obviously it's container D so if I don't specify our runtime class then container D is actually going to run that",
    "start": "1155750",
    "end": "1161990"
  },
  {
    "text": "container and we should be able to see that if I use the CTR I won't see it if",
    "start": "1161990",
    "end": "1169309"
  },
  {
    "text": "I just ask container D for a list of containers because container D is name",
    "start": "1169309",
    "end": "1174440"
  },
  {
    "text": "spaced and so container D on this particular node is being shared by docker and kubernetes and whatever other",
    "start": "1174440",
    "end": "1182480"
  },
  {
    "text": "uses I might want so if I do namespaces LS you can see there's three namespaces",
    "start": "1182480",
    "end": "1190879"
  },
  {
    "text": "I'll put that up top default kada io and mobi so Mobius",
    "start": "1190879",
    "end": "1196650"
  },
  {
    "text": "Dockers namespace que está o is",
    "start": "1196650",
    "end": "1202100"
  },
  {
    "text": "kubernetes obviously so now if I say in that namespace what's running while I'm",
    "start": "1202100",
    "end": "1207840"
  },
  {
    "text": "running a kubernetes is that is it coming and going I'm sorry",
    "start": "1207840",
    "end": "1216600"
  },
  {
    "text": "about that I don't know what the HDMI doesn't like this so as I said there's",
    "start": "1216600",
    "end": "1224460"
  },
  {
    "text": "there's many things running because although I do have the nginx pod I just",
    "start": "1224460",
    "end": "1231030"
  },
  {
    "text": "started here there's also the kubernetes 8 again a single node cluster I've got",
    "start": "1231030",
    "end": "1237660"
  },
  {
    "text": "the API server running core DNS etc so you can see all those containers at this",
    "start": "1237660",
    "end": "1242910"
  },
  {
    "text": "point I will register the runtime classes and so we can look at one of",
    "start": "1242910",
    "end": "1249900"
  },
  {
    "text": "them so the runtime class 4G visor for example very simple very simple yamo I'm",
    "start": "1249900",
    "end": "1257400"
  },
  {
    "text": "creating a runtime class the name is G visor and the handler and this is in container DS config it's called run SC",
    "start": "1257400",
    "end": "1264870"
  },
  {
    "text": "and so this will allow me to start a pod using G visor so let's do that",
    "start": "1264870",
    "end": "1271410"
  },
  {
    "text": "actually no I said I was going to do cata first I'm getting ahead of myself so I've registered the runtime classes",
    "start": "1271410",
    "end": "1278040"
  },
  {
    "text": "and now I have a I have an engine X",
    "start": "1278040",
    "end": "1287640"
  },
  {
    "text": "example for cata and so all I've done here is change that initial pod SPECT is",
    "start": "1287640",
    "end": "1294030"
  },
  {
    "text": "it to add the runtime class but I've said I want to I want to use cata for",
    "start": "1294030",
    "end": "1299190"
  },
  {
    "text": "this deployment and we can look at that briefly just so you can see that so",
    "start": "1299190",
    "end": "1308930"
  },
  {
    "text": "alright is this happening like every second it's coming and going or",
    "start": "1308930",
    "end": "1314450"
  },
  {
    "text": "intermittent yeah yeah all right",
    "start": "1314450",
    "end": "1325870"
  },
  {
    "text": "so runtime class name here says cata and so now we've deployed that and so we",
    "start": "1325870",
    "end": "1334059"
  },
  {
    "text": "should be able to see that",
    "start": "1334059",
    "end": "1337320"
  },
  {
    "text": "if I go to container D actually of",
    "start": "1345210",
    "end": "1352590"
  },
  {
    "text": "course that didn't work because I already had I had already deployed with",
    "start": "1352590",
    "end": "1360990"
  },
  {
    "text": "the same name the other pod so let's do that",
    "start": "1360990",
    "end": "1367730"
  },
  {
    "text": "and now the Wi-Fi is making my typing slow so we don't have the nginx running",
    "start": "1370460",
    "end": "1377460"
  },
  {
    "text": "from container D anymore so now let's try and deploy this oh so did hmm so",
    "start": "1377460",
    "end": "1395600"
  },
  {
    "text": "this is this is a this is fun with heavy heavy demo alright so we have a nginx",
    "start": "1395600",
    "end": "1404790"
  },
  {
    "text": "pod running we said to run it with cata so we should see that cata is involved",
    "start": "1404790",
    "end": "1411090"
  },
  {
    "text": "in this and so we see a bunch of shims",
    "start": "1411090",
    "end": "1421230"
  },
  {
    "text": "running and I'm not seeing my cottage",
    "start": "1421230",
    "end": "1434870"
  },
  {
    "text": "let's exact into that",
    "start": "1434870",
    "end": "1440809"
  },
  {
    "text": "yep sorry I'm trying not to touch so if I do D message in the container this",
    "start": "1455429",
    "end": "1461669"
  },
  {
    "text": "would never happen if we were using simple Linux containerization but we've seen we've actually booted a kernel and",
    "start": "1461669",
    "end": "1467609"
  },
  {
    "text": "so this is hopefully our proof that we've run katha again there was a great",
    "start": "1467609",
    "end": "1474389"
  },
  {
    "text": "talk in here the beginning of this session on cata that you know has the",
    "start": "1474389",
    "end": "1481950"
  },
  {
    "text": "history of coming from Intel clear containers and the hyper dot SH project uses k vm q mu base isolation they do",
    "start": "1481950",
    "end": "1491190"
  },
  {
    "text": "work with docker creo and container D and so again they're part of the OpenStack foundation it's growing",
    "start": "1491190",
    "end": "1497129"
  },
  {
    "text": "project and recently they've actually added the ability to use katha but also",
    "start": "1497129",
    "end": "1502679"
  },
  {
    "text": "to choose between the q mu k vm or the Firecracker rust based vm and so again",
    "start": "1502679",
    "end": "1508979"
  },
  {
    "text": "you could use katha to drive either fire cracker or the cat isolation for cata",
    "start": "1508979",
    "end": "1515639"
  },
  {
    "text": "base isolation they support quite a few architectures including arm including ibm's p & z series and so again this is",
    "start": "1515639",
    "end": "1522749"
  },
  {
    "text": "a interesting project that's a lot of activity and again there's a lot more",
    "start": "1522749",
    "end": "1528059"
  },
  {
    "text": "information online firecracker is a much younger project so i have the the",
    "start": "1528059",
    "end": "1536009"
  },
  {
    "start": "1529000",
    "end": "1623000"
  },
  {
    "text": "runtime class installed but firecracker requires a different snapshot ER for",
    "start": "1536009",
    "end": "1544289"
  },
  {
    "text": "container p and so to simply show to",
    "start": "1544289",
    "end": "1553169"
  },
  {
    "text": "show it running i'm actually just going to run a firecracker container with the container d client rather than through",
    "start": "1553169",
    "end": "1558779"
  },
  {
    "text": "the CRI because the snapshot or it's going to use by default this ERI is not",
    "start": "1558779",
    "end": "1564659"
  },
  {
    "text": "the one for firecracker and so that won't that will work very well so if our",
    "start": "1564659",
    "end": "1574440"
  },
  {
    "text": "screen stays I'm just going to do ctrl run F see this is doing I'll show you",
    "start": "1574440",
    "end": "1581309"
  },
  {
    "text": "the command in a minute it's doing its using container DS CT our client and its",
    "start": "1581309",
    "end": "1588690"
  },
  {
    "text": "it's basically specifying the snapshot and the runtime and so here I am at a",
    "start": "1588690",
    "end": "1594909"
  },
  {
    "text": "prompt and again I see that I've booted an actual kernel again because",
    "start": "1594909",
    "end": "1600580"
  },
  {
    "text": "firecracker has done that in the background I have my snapshot of running",
    "start": "1600580",
    "end": "1605799"
  },
  {
    "text": "and it's set up the busybox root filesystem and provided that to to",
    "start": "1605799",
    "end": "1611860"
  },
  {
    "text": "firecracker and again other than that it looks like a standard container this is busybox so again this is firecracker and",
    "start": "1611860",
    "end": "1620940"
  },
  {
    "text": "again as I said it's a fairly young project it's got a rust based of vmm for",
    "start": "1620940",
    "end": "1627490"
  },
  {
    "text": "that originally from google's crosa vm project this was open source by Amazon",
    "start": "1627490",
    "end": "1633340"
  },
  {
    "text": "just late last year it's a young project it tightens down both kernel access with",
    "start": "1633340",
    "end": "1639309"
  },
  {
    "text": "its jailer and then again integrates with container D via the shim that we just saw getting it packaged and",
    "start": "1639309",
    "end": "1647110"
  },
  {
    "text": "delivered I this was fairly complicated you have to set up a root filesystem you",
    "start": "1647110",
    "end": "1652330"
  },
  {
    "text": "have to put the agent inside of it so there's a lot of kind of manual steps so I think is this project matures they'll",
    "start": "1652330",
    "end": "1658360"
  },
  {
    "text": "be better kind of cleaner delivery of how can I actually use this AWS has",
    "start": "1658360",
    "end": "1663840"
  },
  {
    "text": "intentions to use it under their their lambda service again this higher level of isolation for untrusted code coming",
    "start": "1663840",
    "end": "1671470"
  },
  {
    "text": "from everyone's functions G visor let's see how we're doing on time",
    "start": "1671470",
    "end": "1678000"
  },
  {
    "text": "yeah this is gonna be tight so G visor so again I have to make sure we're not",
    "start": "1678299",
    "end": "1690990"
  },
  {
    "text": "running any indexes right now so again I've used runtime class to set up G",
    "start": "1690990",
    "end": "1696429"
  },
  {
    "text": "visor as a selector and so if I apply my",
    "start": "1696429",
    "end": "1702940"
  },
  {
    "text": "nginx example for G visor",
    "start": "1702940",
    "end": "1707970"
  },
  {
    "text": "I should see that that is creating and again this is using G visor under the",
    "start": "1711270",
    "end": "1717420"
  },
  {
    "text": "covers again using its container D shim to start that process and as long as",
    "start": "1717420",
    "end": "1724200"
  },
  {
    "text": "everything works we have a running engine X using G visor and again I",
    "start": "1724200",
    "end": "1731580"
  },
  {
    "text": "believe we can exact into that pod and",
    "start": "1731580",
    "end": "1736800"
  },
  {
    "text": "verify that and you actually see a nice",
    "start": "1736800",
    "end": "1744120"
  },
  {
    "text": "little message starting G visor and some funny messages from the G visor team to",
    "start": "1744120",
    "end": "1749850"
  },
  {
    "text": "prove that this is isolated by G visor",
    "start": "1749850",
    "end": "1755390"
  },
  {
    "text": "again a lot of information out there about G visor it's using this Colonel",
    "start": "1755720",
    "end": "1761250"
  },
  {
    "text": "written in userspace concept it's written in golang if you've heard of",
    "start": "1761250",
    "end": "1766260"
  },
  {
    "text": "Google cloud run it's actually using G visor as this isolation security",
    "start": "1766260",
    "end": "1771300"
  },
  {
    "text": "boundary for that you can use it stand alone as an OCR replacement and again they have the shim that we just",
    "start": "1771300",
    "end": "1777470"
  },
  {
    "text": "demonstrated and again they were there reducing cysts calls that are using the real host kernel and your application is",
    "start": "1777470",
    "end": "1785070"
  },
  {
    "text": "being sort of routed through their user space kernel some applications may not",
    "start": "1785070",
    "end": "1790890"
  },
  {
    "text": "work if they haven't implemented the Cisco yet and there's a lot of good detail online from their team again",
    "start": "1790890",
    "end": "1797400"
  },
  {
    "text": "there is a KVM mode that may win back some of the performance loss of capturing your sis calls and getting",
    "start": "1797400",
    "end": "1804720"
  },
  {
    "text": "them true G visor I don't think I'm gonna have time to to demo singularity",
    "start": "1804720",
    "end": "1812610"
  },
  {
    "start": "1806000",
    "end": "1825000"
  },
  {
    "text": "singularity again as a high performance computing runtime that initially was an OC I compliant in order to have a CRI",
    "start": "1812610",
    "end": "1819720"
  },
  {
    "text": "but in the last few months they've added those capabilities it's not demon based",
    "start": "1819720",
    "end": "1828210"
  },
  {
    "text": "it sort of has again it fits this HPC model of sort of end user workload scheduling so a big national lab",
    "start": "1828210",
    "end": "1835020"
  },
  {
    "text": "scientists submit their jobs via sort of a login node and so singularity matches",
    "start": "1835020",
    "end": "1841080"
  },
  {
    "text": "that model well and now they have a CRI again with interest in kubernetes in the HPC",
    "start": "1841080",
    "end": "1847970"
  },
  {
    "text": "community in the in the science community so if you were here earlier in the week you saw folks at CERN",
    "start": "1847970",
    "end": "1854270"
  },
  {
    "text": "demonstrating using kubernetes in their experiments so again",
    "start": "1854270",
    "end": "1860510"
  },
  {
    "text": "SCI Labs has seen that same interest and so they have a CRI I don't actually have",
    "start": "1860510",
    "end": "1866270"
  },
  {
    "text": "it set up as the CRI runtime for a kubernetes cluster again just lack of time and ability but I am running there",
    "start": "1866270",
    "end": "1874070"
  },
  {
    "text": "I am running there CRI runtime here so",
    "start": "1874070",
    "end": "1882380"
  },
  {
    "text": "again it's listening on a UNIX socket if you told couplet go talk to this socket and then deployed a pod I actually do",
    "start": "1882380",
    "end": "1889610"
  },
  {
    "text": "haven't set up with cry CTL and so you know I could you know we do have the",
    "start": "1889610",
    "end": "1898100"
  },
  {
    "text": "ability through crises yell to run a pod so again I'm not using the kubernetes api I'm just using the CRI API and so I",
    "start": "1898100",
    "end": "1905330"
  },
  {
    "text": "can run nginx and you'll see that you know the demon got that request did an",
    "start": "1905330",
    "end": "1912350"
  },
  {
    "text": "OC I create of a container again I said",
    "start": "1912350",
    "end": "1918020"
  },
  {
    "start": "1916000",
    "end": "1963000"
  },
  {
    "text": "I wasn't going to demo nabla we're already very very close to time but this is another sandbox idea using a unit",
    "start": "1918020",
    "end": "1924530"
  },
  {
    "text": "kernel so IBM research created this it uses a very highly limited set comp",
    "start": "1924530",
    "end": "1930110"
  },
  {
    "text": "profile just a few sis calls are allowed and then the unit kernel is compiled",
    "start": "1930110",
    "end": "1935990"
  },
  {
    "text": "with your application one of the drawbacks is then that you actually have to use their docker hub based base",
    "start": "1935990",
    "end": "1943610"
  },
  {
    "text": "images because they're already linked to these user unit kernel libraries so",
    "start": "1943610",
    "end": "1951320"
  },
  {
    "text": "again IBM researches is trying to remove that limitation as we speak because",
    "start": "1951320",
    "end": "1957590"
  },
  {
    "text": "obviously that would be one that we couldn't use the same nginx image we've used in all these other demos so again",
    "start": "1957590",
    "end": "1964610"
  },
  {
    "start": "1963000",
    "end": "2017000"
  },
  {
    "text": "just finalizing the OCI has gotten us to a place where we have this common",
    "start": "1964610",
    "end": "1970130"
  },
  {
    "text": "underpinning that allows innovation but yet have interoperability we didn't have to change container",
    "start": "1970130",
    "end": "1975570"
  },
  {
    "text": "images to use all these different runtimes CRI has given us that same kind of plug ability in kubernetes so we can",
    "start": "1975570",
    "end": "1983220"
  },
  {
    "text": "use all kinds of different runtimes under kubernetes and then runtime class gives us additional flexibility to",
    "start": "1983220",
    "end": "1989130"
  },
  {
    "text": "within the same cluster have you know lots of different uses of different sandboxes and default Linux based",
    "start": "1989130",
    "end": "1996330"
  },
  {
    "text": "isolation so with that I'm gonna say thank you I think I've barely kept with",
    "start": "1996330",
    "end": "2001940"
  },
  {
    "text": "at the time and if you have questions I'm around the rest of the day and be happy to answer them so thanks for",
    "start": "2001940",
    "end": "2007880"
  },
  {
    "text": "coming",
    "start": "2007880",
    "end": "2010180"
  },
  {
    "text": "you",
    "start": "2014100",
    "end": "2016160"
  }
]