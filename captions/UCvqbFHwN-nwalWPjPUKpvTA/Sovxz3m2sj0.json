[
  {
    "text": "hey everyone welcome to my talk",
    "start": "1199",
    "end": "4240"
  },
  {
    "text": "over the next 20 minutes or so i'm going",
    "start": "4240",
    "end": "6000"
  },
  {
    "text": "to talk about emma lops",
    "start": "6000",
    "end": "7759"
  },
  {
    "text": "specifically i'm going to highlight how",
    "start": "7759",
    "end": "9599"
  },
  {
    "text": "we automated various parts of our",
    "start": "9599",
    "end": "11360"
  },
  {
    "text": "machine learning process",
    "start": "11360",
    "end": "12880"
  },
  {
    "text": "using tools like kubeflow pipelines and",
    "start": "12880",
    "end": "15280"
  },
  {
    "text": "spinnaker",
    "start": "15280",
    "end": "16320"
  },
  {
    "text": "but first let me hide my camera so we",
    "start": "16320",
    "end": "18080"
  },
  {
    "text": "can focus on the slides",
    "start": "18080",
    "end": "21520"
  },
  {
    "text": "a quick note on me my name is kevin",
    "start": "23920",
    "end": "26320"
  },
  {
    "text": "delarosa and i'm a machine learning",
    "start": "26320",
    "end": "28320"
  },
  {
    "text": "engineer at snapchat i primarily focus",
    "start": "28320",
    "end": "31359"
  },
  {
    "text": "on computer vision problems to support",
    "start": "31359",
    "end": "33200"
  },
  {
    "text": "the scan",
    "start": "33200",
    "end": "33760"
  },
  {
    "text": "feature in the snapchat app that's my",
    "start": "33760",
    "end": "36399"
  },
  {
    "text": "twitter",
    "start": "36399",
    "end": "36960"
  },
  {
    "text": "handle feel free to reach out to me",
    "start": "36960",
    "end": "38640"
  },
  {
    "text": "there or on other channels",
    "start": "38640",
    "end": "40079"
  },
  {
    "text": "like linkedin",
    "start": "40079",
    "end": "45840"
  },
  {
    "text": "so here's a quick overview of what we'll",
    "start": "45920",
    "end": "47840"
  },
  {
    "text": "be covering",
    "start": "47840",
    "end": "49280"
  },
  {
    "text": "first i'll give you a brief introduction",
    "start": "49280",
    "end": "52160"
  },
  {
    "text": "to what i work on at snap",
    "start": "52160",
    "end": "53920"
  },
  {
    "text": "and where machine learning fits in",
    "start": "53920",
    "end": "57359"
  },
  {
    "text": "then we'll talk through the key",
    "start": "57840",
    "end": "60239"
  },
  {
    "text": "components of a production machine",
    "start": "60239",
    "end": "61840"
  },
  {
    "text": "learning system",
    "start": "61840",
    "end": "63760"
  },
  {
    "text": "we'll touch on what ml ops is and then",
    "start": "63760",
    "end": "67040"
  },
  {
    "text": "for the remainder of the talk",
    "start": "67040",
    "end": "68560"
  },
  {
    "text": "we'll walk through the various steps",
    "start": "68560",
    "end": "70320"
  },
  {
    "text": "involved from going from",
    "start": "70320",
    "end": "72240"
  },
  {
    "text": "an experiment to continuous machine",
    "start": "72240",
    "end": "74159"
  },
  {
    "text": "learning in production",
    "start": "74159",
    "end": "75759"
  },
  {
    "text": "closing out with an overview of what",
    "start": "75759",
    "end": "77920"
  },
  {
    "text": "this looks like for my team",
    "start": "77920",
    "end": "81118"
  },
  {
    "text": "so let's get started",
    "start": "81200",
    "end": "86479"
  },
  {
    "text": "snapchat is the fastest way to share a",
    "start": "86479",
    "end": "88960"
  },
  {
    "text": "moment",
    "start": "88960",
    "end": "90000"
  },
  {
    "text": "at snap we contribute to human progress",
    "start": "90000",
    "end": "92880"
  },
  {
    "text": "by empowering people to express",
    "start": "92880",
    "end": "94479"
  },
  {
    "text": "themselves",
    "start": "94479",
    "end": "95360"
  },
  {
    "text": "live in a moment learn about the world",
    "start": "95360",
    "end": "98000"
  },
  {
    "text": "and have fun",
    "start": "98000",
    "end": "98960"
  },
  {
    "text": "together one of the ways we allow folks",
    "start": "98960",
    "end": "102159"
  },
  {
    "text": "express themselves",
    "start": "102159",
    "end": "103119"
  },
  {
    "text": "is through augmented reality experiences",
    "start": "103119",
    "end": "105119"
  },
  {
    "text": "we call lenses",
    "start": "105119",
    "end": "108479"
  },
  {
    "text": "in the app these lenses can be unlocked",
    "start": "111040",
    "end": "114079"
  },
  {
    "text": "directly through a snap code lens links",
    "start": "114079",
    "end": "118240"
  },
  {
    "text": "and a lens explorer snapchatters",
    "start": "118240",
    "end": "122240"
  },
  {
    "text": "can also discover these lenses using the",
    "start": "122240",
    "end": "124640"
  },
  {
    "text": "scan feature",
    "start": "124640",
    "end": "126479"
  },
  {
    "text": "by long pressing the screen while the",
    "start": "126479",
    "end": "128239"
  },
  {
    "text": "camera is active",
    "start": "128239",
    "end": "129599"
  },
  {
    "text": "scan brings up contextual lenses and",
    "start": "129599",
    "end": "131920"
  },
  {
    "text": "tools that may be relevant to what the",
    "start": "131920",
    "end": "134000"
  },
  {
    "text": "camera",
    "start": "134000",
    "end": "134560"
  },
  {
    "text": "is seeing in this first example",
    "start": "134560",
    "end": "138080"
  },
  {
    "text": "we see a drink related lens come up",
    "start": "138080",
    "end": "140400"
  },
  {
    "text": "after scanning a cocktail",
    "start": "140400",
    "end": "143840"
  },
  {
    "text": "in the second example we see a lens",
    "start": "144239",
    "end": "147599"
  },
  {
    "text": "that was built with a marker template",
    "start": "147599",
    "end": "149920"
  },
  {
    "text": "being unlocked by scanning a poster",
    "start": "149920",
    "end": "152480"
  },
  {
    "text": "where markers are images like this",
    "start": "152480",
    "end": "154800"
  },
  {
    "text": "poster",
    "start": "154800",
    "end": "155599"
  },
  {
    "text": "that can be recognized and tracked by",
    "start": "155599",
    "end": "157519"
  },
  {
    "text": "the snapchat camera",
    "start": "157519",
    "end": "159760"
  },
  {
    "text": "to create 3d immersive experiences like",
    "start": "159760",
    "end": "162879"
  },
  {
    "text": "the one shown here",
    "start": "162879",
    "end": "170319"
  },
  {
    "text": "when you create these augmented uh",
    "start": "170319",
    "end": "172879"
  },
  {
    "text": "reality experiences in lens studio",
    "start": "172879",
    "end": "175200"
  },
  {
    "text": "creators can specify scan triggers which",
    "start": "175200",
    "end": "178159"
  },
  {
    "text": "tells snapchat what you'd like the lens",
    "start": "178159",
    "end": "180400"
  },
  {
    "text": "to be related to in scan",
    "start": "180400",
    "end": "182560"
  },
  {
    "text": "for example if you add the sky uh scan",
    "start": "182560",
    "end": "185920"
  },
  {
    "text": "trigger",
    "start": "185920",
    "end": "186640"
  },
  {
    "text": "when submitting an astronaut lens like",
    "start": "186640",
    "end": "188480"
  },
  {
    "text": "this one",
    "start": "188480",
    "end": "189680"
  },
  {
    "text": "uh in doing so when a snapchatter points",
    "start": "189680",
    "end": "192720"
  },
  {
    "text": "their camera to sky",
    "start": "192720",
    "end": "193920"
  },
  {
    "text": "and trigger scan it may open the",
    "start": "193920",
    "end": "196319"
  },
  {
    "text": "corresponding",
    "start": "196319",
    "end": "197280"
  },
  {
    "text": "lens",
    "start": "197280",
    "end": "199840"
  },
  {
    "text": "and as previously mentioned lenses built",
    "start": "204720",
    "end": "207200"
  },
  {
    "text": "with the marker template",
    "start": "207200",
    "end": "209120"
  },
  {
    "text": "can be unlocked in snapchat directly",
    "start": "209120",
    "end": "211519"
  },
  {
    "text": "through the camera",
    "start": "211519",
    "end": "213360"
  },
  {
    "text": "snapchatters who encountered a marker in",
    "start": "213360",
    "end": "215360"
  },
  {
    "text": "the wild can long press on a camera to",
    "start": "215360",
    "end": "217599"
  },
  {
    "text": "initiate a scan",
    "start": "217599",
    "end": "218720"
  },
  {
    "text": "and unlock the corresponding lens",
    "start": "218720",
    "end": "223120"
  },
  {
    "text": "under the hood scan is powered by",
    "start": "225360",
    "end": "227680"
  },
  {
    "text": "machine learning",
    "start": "227680",
    "end": "229519"
  },
  {
    "text": "in both of these cases when scan is",
    "start": "229519",
    "end": "231840"
  },
  {
    "text": "triggered we use machine learning",
    "start": "231840",
    "end": "233519"
  },
  {
    "text": "approaches",
    "start": "233519",
    "end": "234159"
  },
  {
    "text": "to automatically recommend and rank the",
    "start": "234159",
    "end": "236640"
  },
  {
    "text": "most relevant lenses",
    "start": "236640",
    "end": "238080"
  },
  {
    "text": "to show to the user",
    "start": "238080",
    "end": "241840"
  },
  {
    "text": "and in production if you followed the ml",
    "start": "241920",
    "end": "245040"
  },
  {
    "text": "ops methodology",
    "start": "245040",
    "end": "246560"
  },
  {
    "text": "you end up with a system like this which",
    "start": "246560",
    "end": "249120"
  },
  {
    "text": "is a",
    "start": "249120",
    "end": "250000"
  },
  {
    "text": "diagram from google cloud",
    "start": "250000",
    "end": "254879"
  },
  {
    "text": "some key components include continuous",
    "start": "254879",
    "end": "257759"
  },
  {
    "text": "integration",
    "start": "257759",
    "end": "258799"
  },
  {
    "text": "for building testing packet and",
    "start": "258799",
    "end": "261359"
  },
  {
    "text": "packaging pipeline components",
    "start": "261359",
    "end": "264240"
  },
  {
    "text": "an automated machine learning pipeline",
    "start": "264240",
    "end": "266320"
  },
  {
    "text": "for performing your data engineering",
    "start": "266320",
    "end": "268639"
  },
  {
    "text": "model training and model evaluation",
    "start": "268639",
    "end": "271040"
  },
  {
    "text": "workflows",
    "start": "271040",
    "end": "272880"
  },
  {
    "text": "some feature store to feed data into",
    "start": "272880",
    "end": "275919"
  },
  {
    "text": "your ml pipeline",
    "start": "275919",
    "end": "278000"
  },
  {
    "text": "a prediction service powered by your",
    "start": "278000",
    "end": "280240"
  },
  {
    "text": "actual machine learning model",
    "start": "280240",
    "end": "282720"
  },
  {
    "text": "a continuous delivery pipeline for",
    "start": "282720",
    "end": "284960"
  },
  {
    "text": "deploying your machine learning pipeline",
    "start": "284960",
    "end": "287120"
  },
  {
    "text": "as well as your prediction service and",
    "start": "287120",
    "end": "289919"
  },
  {
    "text": "lastly",
    "start": "289919",
    "end": "290639"
  },
  {
    "text": "some mechanism for monitoring",
    "start": "290639",
    "end": "292639"
  },
  {
    "text": "performance",
    "start": "292639",
    "end": "294400"
  },
  {
    "text": "as we progress through this presentation",
    "start": "294400",
    "end": "296880"
  },
  {
    "text": "i'll provide more details on each of",
    "start": "296880",
    "end": "298720"
  },
  {
    "text": "these steps",
    "start": "298720",
    "end": "300000"
  },
  {
    "text": "and how you can ultimately get there",
    "start": "300000",
    "end": "302320"
  },
  {
    "text": "based on our experience",
    "start": "302320",
    "end": "305440"
  },
  {
    "text": "but everyone has but but when",
    "start": "307919",
    "end": "310320"
  },
  {
    "text": "everything's said and done",
    "start": "310320",
    "end": "311680"
  },
  {
    "text": "we all have to start from somewhere",
    "start": "311680",
    "end": "314800"
  },
  {
    "text": "machine learning is experimental by",
    "start": "314800",
    "end": "316800"
  },
  {
    "text": "nature and the starting point for",
    "start": "316800",
    "end": "319199"
  },
  {
    "text": "many new machine learning applications",
    "start": "319199",
    "end": "321840"
  },
  {
    "text": "is often",
    "start": "321840",
    "end": "322560"
  },
  {
    "text": "experimental code in jupiter notebooks",
    "start": "322560",
    "end": "325199"
  },
  {
    "text": "like this one",
    "start": "325199",
    "end": "327840"
  },
  {
    "text": "so there's obviously a gap between",
    "start": "330800",
    "end": "333120"
  },
  {
    "text": "having a proof of concept jupiter",
    "start": "333120",
    "end": "334880"
  },
  {
    "text": "notebook",
    "start": "334880",
    "end": "335919"
  },
  {
    "text": "and that big diagram i showed you of a",
    "start": "335919",
    "end": "338400"
  },
  {
    "text": "finely tuned",
    "start": "338400",
    "end": "339440"
  },
  {
    "text": "and automated machine learning",
    "start": "339440",
    "end": "340880"
  },
  {
    "text": "deployment",
    "start": "340880",
    "end": "343039"
  },
  {
    "text": "for this we can use ml ops to guide us",
    "start": "343039",
    "end": "346320"
  },
  {
    "text": "along the way ml ops",
    "start": "346320",
    "end": "350240"
  },
  {
    "text": "is a set of best practices to test",
    "start": "350240",
    "end": "352880"
  },
  {
    "text": "deploy",
    "start": "352880",
    "end": "354080"
  },
  {
    "text": "manage and monitor ml models in real",
    "start": "354080",
    "end": "357039"
  },
  {
    "text": "world production",
    "start": "357039",
    "end": "359120"
  },
  {
    "text": "on the right hand side you see some of",
    "start": "359120",
    "end": "360960"
  },
  {
    "text": "the core concepts to keep in mind",
    "start": "360960",
    "end": "363039"
  },
  {
    "text": "while productionizing a machine learning",
    "start": "363039",
    "end": "364960"
  },
  {
    "text": "system",
    "start": "364960",
    "end": "366639"
  },
  {
    "text": "in order to understand these you'll",
    "start": "366639",
    "end": "368720"
  },
  {
    "text": "first need to recognize there are",
    "start": "368720",
    "end": "370400"
  },
  {
    "text": "key differences between traditional",
    "start": "370400",
    "end": "372240"
  },
  {
    "text": "software systems",
    "start": "372240",
    "end": "373600"
  },
  {
    "text": "and machine learning deployments",
    "start": "373600",
    "end": "377280"
  },
  {
    "text": "for example machine learning isn't just",
    "start": "378000",
    "end": "381120"
  },
  {
    "text": "about code machine learning is really",
    "start": "381120",
    "end": "384400"
  },
  {
    "text": "about the combination of code",
    "start": "384400",
    "end": "386240"
  },
  {
    "text": "and data to produce artifacts called",
    "start": "386240",
    "end": "388720"
  },
  {
    "text": "machine learning",
    "start": "388720",
    "end": "389759"
  },
  {
    "text": "models and in addition to code changes",
    "start": "389759",
    "end": "394000"
  },
  {
    "text": "one also has to be aware of data changes",
    "start": "394000",
    "end": "397120"
  },
  {
    "text": "as these impact the performance",
    "start": "397120",
    "end": "400720"
  },
  {
    "text": "of your model and the reproducibility of",
    "start": "400720",
    "end": "403520"
  },
  {
    "text": "your steps",
    "start": "403520",
    "end": "406080"
  },
  {
    "text": "additionally the ecosystem surrounding",
    "start": "407440",
    "end": "410080"
  },
  {
    "text": "machine learning deployments",
    "start": "410080",
    "end": "411680"
  },
  {
    "text": "has a lot of moving parts that are not",
    "start": "411680",
    "end": "413919"
  },
  {
    "text": "always seen in traditional",
    "start": "413919",
    "end": "415520"
  },
  {
    "text": "server deployments for example",
    "start": "415520",
    "end": "419440"
  },
  {
    "text": "data pipelines including etls as well as",
    "start": "419440",
    "end": "423039"
  },
  {
    "text": "data labeling pipelines",
    "start": "423039",
    "end": "426000"
  },
  {
    "text": "feature stores as previously mentioned",
    "start": "426000",
    "end": "429199"
  },
  {
    "text": "and your actual machine learning",
    "start": "429199",
    "end": "430479"
  },
  {
    "text": "pipeline which can",
    "start": "430479",
    "end": "432400"
  },
  {
    "text": "often be highly customized for a",
    "start": "432400",
    "end": "434240"
  },
  {
    "text": "specific use case",
    "start": "434240",
    "end": "437840"
  },
  {
    "text": "now that's a lot of stuff to keep in",
    "start": "441919",
    "end": "443759"
  },
  {
    "text": "mind",
    "start": "443759",
    "end": "445039"
  },
  {
    "text": "instead of trying to do this in one big",
    "start": "445039",
    "end": "447440"
  },
  {
    "text": "bang",
    "start": "447440",
    "end": "448240"
  },
  {
    "text": "you should instead opt to adopt",
    "start": "448240",
    "end": "451440"
  },
  {
    "text": "a incremental process to gradually",
    "start": "451440",
    "end": "454479"
  },
  {
    "text": "increase",
    "start": "454479",
    "end": "455120"
  },
  {
    "text": "the level of automation in your system",
    "start": "455120",
    "end": "457759"
  },
  {
    "text": "as things mature",
    "start": "457759",
    "end": "460720"
  },
  {
    "text": "generally speaking these are the steps",
    "start": "460960",
    "end": "463440"
  },
  {
    "text": "we used",
    "start": "463440",
    "end": "464240"
  },
  {
    "text": "to reach continuous machine learning for",
    "start": "464240",
    "end": "466800"
  },
  {
    "text": "the things",
    "start": "466800",
    "end": "467680"
  },
  {
    "text": "like unlocking lenses and scan",
    "start": "467680",
    "end": "472080"
  },
  {
    "text": "i'm not going to touch on the machine",
    "start": "472879",
    "end": "474319"
  },
  {
    "text": "learning algorithms here",
    "start": "474319",
    "end": "476240"
  },
  {
    "text": "but more focus on the machine learning",
    "start": "476240",
    "end": "478319"
  },
  {
    "text": "engineering and",
    "start": "478319",
    "end": "479280"
  },
  {
    "text": "ml ops considerations with the",
    "start": "479280",
    "end": "481680"
  },
  {
    "text": "assumption that you have already done",
    "start": "481680",
    "end": "483440"
  },
  {
    "text": "some experimentation",
    "start": "483440",
    "end": "484960"
  },
  {
    "text": "on the ml modeling side",
    "start": "484960",
    "end": "488400"
  },
  {
    "text": "so let's walk through each of these",
    "start": "488879",
    "end": "490240"
  },
  {
    "text": "steps and what you gain",
    "start": "490240",
    "end": "492000"
  },
  {
    "text": "along the way",
    "start": "492000",
    "end": "494639"
  },
  {
    "text": "firstly you want to containerize all the",
    "start": "497759",
    "end": "500160"
  },
  {
    "text": "things",
    "start": "500160",
    "end": "501520"
  },
  {
    "text": "in this step you need to break up your",
    "start": "501520",
    "end": "503360"
  },
  {
    "text": "experimental jupiter notebooks",
    "start": "503360",
    "end": "505680"
  },
  {
    "text": "into modular code and containerized",
    "start": "505680",
    "end": "508240"
  },
  {
    "text": "programs",
    "start": "508240",
    "end": "510000"
  },
  {
    "text": "and once that is done you add it to your",
    "start": "510000",
    "end": "512159"
  },
  {
    "text": "source control system",
    "start": "512159",
    "end": "513919"
  },
  {
    "text": "ie github",
    "start": "513919",
    "end": "517200"
  },
  {
    "text": "after the step changes to your algorithm",
    "start": "517200",
    "end": "519599"
  },
  {
    "text": "and transform code",
    "start": "519599",
    "end": "521039"
  },
  {
    "text": "will be now tracked you'll also have",
    "start": "521039",
    "end": "524320"
  },
  {
    "text": "software that is easier to write unicode",
    "start": "524320",
    "end": "526399"
  },
  {
    "text": "unit tests for",
    "start": "526399",
    "end": "527760"
  },
  {
    "text": "since your code is more modular",
    "start": "527760",
    "end": "531440"
  },
  {
    "text": "and you'll more easily be able to",
    "start": "531440",
    "end": "533040"
  },
  {
    "text": "reproduce things because you dockerized",
    "start": "533040",
    "end": "535680"
  },
  {
    "text": "all the things",
    "start": "535680",
    "end": "538480"
  },
  {
    "text": "step two in this step you want to",
    "start": "542399",
    "end": "545360"
  },
  {
    "text": "automate your machine learning process",
    "start": "545360",
    "end": "547600"
  },
  {
    "text": "for this we use kubeflow pipelines",
    "start": "547600",
    "end": "551920"
  },
  {
    "text": "for the uninitiated this is what cube",
    "start": "554640",
    "end": "557120"
  },
  {
    "text": "flow looks like",
    "start": "557120",
    "end": "559680"
  },
  {
    "text": "in kubeflow a pipeline is a graph",
    "start": "559680",
    "end": "562160"
  },
  {
    "text": "describing a complete",
    "start": "562160",
    "end": "563680"
  },
  {
    "text": "machine learning workflow this graph",
    "start": "563680",
    "end": "567040"
  },
  {
    "text": "specifies what components are on how do",
    "start": "567040",
    "end": "569680"
  },
  {
    "text": "you relate to each other",
    "start": "569680",
    "end": "572640"
  },
  {
    "text": "and each component or step in the",
    "start": "572959",
    "end": "575040"
  },
  {
    "text": "pipeline",
    "start": "575040",
    "end": "576080"
  },
  {
    "text": "launches one or more kubernetes pods and",
    "start": "576080",
    "end": "578720"
  },
  {
    "text": "acts like",
    "start": "578720",
    "end": "579600"
  },
  {
    "text": "a function in that it has a name",
    "start": "579600",
    "end": "582480"
  },
  {
    "text": "parameters",
    "start": "582480",
    "end": "583760"
  },
  {
    "text": "return values and a body ie docker",
    "start": "583760",
    "end": "588839"
  },
  {
    "text": "containers",
    "start": "588839",
    "end": "590560"
  },
  {
    "text": "in this scheme data is passed between",
    "start": "590560",
    "end": "592720"
  },
  {
    "text": "parent components",
    "start": "592720",
    "end": "594000"
  },
  {
    "text": "and children runs via serialized data",
    "start": "594000",
    "end": "599200"
  },
  {
    "text": "using kubeflow to represent your ml",
    "start": "603519",
    "end": "606000"
  },
  {
    "text": "pipeline",
    "start": "606000",
    "end": "606959"
  },
  {
    "text": "might result in a graph that looks",
    "start": "606959",
    "end": "608480"
  },
  {
    "text": "something like this",
    "start": "608480",
    "end": "610800"
  },
  {
    "text": "first you start off with some step that",
    "start": "610800",
    "end": "613279"
  },
  {
    "text": "validates the input data to your",
    "start": "613279",
    "end": "615120"
  },
  {
    "text": "pipeline",
    "start": "615120",
    "end": "617120"
  },
  {
    "text": "then we pass off to some component that",
    "start": "617120",
    "end": "620000"
  },
  {
    "text": "extracts features from the raw data",
    "start": "620000",
    "end": "622320"
  },
  {
    "text": "or the feature store",
    "start": "622320",
    "end": "625200"
  },
  {
    "text": "then we pass these features along to",
    "start": "625920",
    "end": "628240"
  },
  {
    "text": "component that actually trains",
    "start": "628240",
    "end": "630079"
  },
  {
    "text": "a machine learning model",
    "start": "630079",
    "end": "633839"
  },
  {
    "text": "after the model is trained and produced",
    "start": "634240",
    "end": "636880"
  },
  {
    "text": "we can do some",
    "start": "636880",
    "end": "638000"
  },
  {
    "text": "model evaluation like calculating",
    "start": "638000",
    "end": "641519"
  },
  {
    "text": "accuracy",
    "start": "641519",
    "end": "642959"
  },
  {
    "text": "mean average precision recall",
    "start": "642959",
    "end": "646079"
  },
  {
    "text": "intersection over union or whatever what",
    "start": "646079",
    "end": "649120"
  },
  {
    "text": "other metrics um over a validation set",
    "start": "649120",
    "end": "652320"
  },
  {
    "text": "that are relevant to your use case",
    "start": "652320",
    "end": "656079"
  },
  {
    "text": "then lastly you'll typically do some",
    "start": "656320",
    "end": "659040"
  },
  {
    "text": "model validation",
    "start": "659040",
    "end": "660320"
  },
  {
    "text": "against some held out test data",
    "start": "660320",
    "end": "664560"
  },
  {
    "text": "this can take the form of checking if",
    "start": "664959",
    "end": "666560"
  },
  {
    "text": "the model performs at some",
    "start": "666560",
    "end": "668880"
  },
  {
    "text": "minimally acceptable level of accuracy",
    "start": "668880",
    "end": "671839"
  },
  {
    "text": "prior to uploading it to wherever you",
    "start": "671839",
    "end": "673839"
  },
  {
    "text": "store",
    "start": "673839",
    "end": "674399"
  },
  {
    "text": "or register your models",
    "start": "674399",
    "end": "677839"
  },
  {
    "text": "over the course of step two you now have",
    "start": "686079",
    "end": "688320"
  },
  {
    "text": "an automated way",
    "start": "688320",
    "end": "689360"
  },
  {
    "text": "to kick off a run of your training",
    "start": "689360",
    "end": "690800"
  },
  {
    "text": "pipeline",
    "start": "690800",
    "end": "692800"
  },
  {
    "text": "to help enable reproducibility you can",
    "start": "692800",
    "end": "695040"
  },
  {
    "text": "store metadata",
    "start": "695040",
    "end": "696560"
  },
  {
    "text": "about each run and model",
    "start": "696560",
    "end": "700160"
  },
  {
    "text": "you can track changes to your entire ml",
    "start": "700160",
    "end": "702560"
  },
  {
    "text": "process",
    "start": "702560",
    "end": "703440"
  },
  {
    "text": "by storing your kfp pipeline in source",
    "start": "703440",
    "end": "706000"
  },
  {
    "text": "control",
    "start": "706000",
    "end": "707920"
  },
  {
    "text": "you end up testing more things in the",
    "start": "707920",
    "end": "710000"
  },
  {
    "text": "form of components like data and model",
    "start": "710000",
    "end": "712000"
  },
  {
    "text": "validation",
    "start": "712000",
    "end": "713279"
  },
  {
    "text": "as well as unit tests over to model",
    "start": "713279",
    "end": "715200"
  },
  {
    "text": "specification",
    "start": "715200",
    "end": "717040"
  },
  {
    "text": "and integration tests over your entire",
    "start": "717040",
    "end": "719120"
  },
  {
    "text": "ml pipeline",
    "start": "719120",
    "end": "721600"
  },
  {
    "text": "you can also log model performance for",
    "start": "721600",
    "end": "724240"
  },
  {
    "text": "each run",
    "start": "724240",
    "end": "724959"
  },
  {
    "text": "to understand if your model is degrading",
    "start": "724959",
    "end": "727040"
  },
  {
    "text": "over time or perhaps",
    "start": "727040",
    "end": "728800"
  },
  {
    "text": "if you goofed up on the algorithm side",
    "start": "728800",
    "end": "732959"
  },
  {
    "text": "step three now that your components are",
    "start": "738240",
    "end": "742839"
  },
  {
    "text": "containerized and you have a pipeline",
    "start": "742839",
    "end": "745200"
  },
  {
    "text": "that automates the ml process",
    "start": "745200",
    "end": "747920"
  },
  {
    "text": "we can move towards continuous",
    "start": "747920",
    "end": "749920"
  },
  {
    "text": "integration",
    "start": "749920",
    "end": "752240"
  },
  {
    "text": "in this step you want to set up your",
    "start": "752240",
    "end": "754079"
  },
  {
    "text": "favorite ci tool",
    "start": "754079",
    "end": "755519"
  },
  {
    "text": "to help you build code and run unit and",
    "start": "755519",
    "end": "758480"
  },
  {
    "text": "integration tests",
    "start": "758480",
    "end": "761440"
  },
  {
    "text": "on my team we use a mix of jenkins",
    "start": "761680",
    "end": "764720"
  },
  {
    "text": "and drone to accomplish ci",
    "start": "764720",
    "end": "769199"
  },
  {
    "text": "either way you want to have some release",
    "start": "769920",
    "end": "772560"
  },
  {
    "text": "step",
    "start": "772560",
    "end": "773200"
  },
  {
    "text": "that publishes artifacts like",
    "start": "773200",
    "end": "776639"
  },
  {
    "text": "docker images which we publish to gcr",
    "start": "776639",
    "end": "780959"
  },
  {
    "text": "google cloud registry or if you're on",
    "start": "780959",
    "end": "783279"
  },
  {
    "text": "aws that would be",
    "start": "783279",
    "end": "784839"
  },
  {
    "text": "ecr we compile versions",
    "start": "784839",
    "end": "788399"
  },
  {
    "text": "of our kubeflow pipeline specification",
    "start": "788399",
    "end": "790480"
  },
  {
    "text": "yamls",
    "start": "790480",
    "end": "792240"
  },
  {
    "text": "and we version kubernetes configurations",
    "start": "792240",
    "end": "796639"
  },
  {
    "text": "for the prediction service deployments",
    "start": "796639",
    "end": "801839"
  },
  {
    "text": "in this step you'll have unit and",
    "start": "803760",
    "end": "806240"
  },
  {
    "text": "integration test automation",
    "start": "806240",
    "end": "807839"
  },
  {
    "text": "at both the the component and pipeline",
    "start": "807839",
    "end": "810560"
  },
  {
    "text": "level",
    "start": "810560",
    "end": "812480"
  },
  {
    "text": "as well as the artifacts required to",
    "start": "812480",
    "end": "814720"
  },
  {
    "text": "deploy a server or training pipeline",
    "start": "814720",
    "end": "816959"
  },
  {
    "text": "which will come into play in the next",
    "start": "816959",
    "end": "818399"
  },
  {
    "text": "few steps",
    "start": "818399",
    "end": "821040"
  },
  {
    "text": "in step four we start to talk about",
    "start": "826639",
    "end": "828720"
  },
  {
    "text": "continuous delivery",
    "start": "828720",
    "end": "830959"
  },
  {
    "text": "in this step you want to orchestrate the",
    "start": "830959",
    "end": "832959"
  },
  {
    "text": "deployment of your ml pipeline",
    "start": "832959",
    "end": "835360"
  },
  {
    "text": "using a continuous delivery system",
    "start": "835360",
    "end": "839440"
  },
  {
    "text": "when you reach this stage you'll trigger",
    "start": "839440",
    "end": "841760"
  },
  {
    "text": "automated deployments",
    "start": "841760",
    "end": "843120"
  },
  {
    "text": "of the ml pipeline when your continuous",
    "start": "843120",
    "end": "845839"
  },
  {
    "text": "integration system",
    "start": "845839",
    "end": "846959"
  },
  {
    "text": "releases new artifacts",
    "start": "846959",
    "end": "850240"
  },
  {
    "text": "this will let you automatically train",
    "start": "850240",
    "end": "852160"
  },
  {
    "text": "new models whenever",
    "start": "852160",
    "end": "853920"
  },
  {
    "text": "the ml process changes",
    "start": "853920",
    "end": "857839"
  },
  {
    "text": "additionally if you use a cd system",
    "start": "857920",
    "end": "861360"
  },
  {
    "text": "you'll have repeatable deployments for",
    "start": "861360",
    "end": "864000"
  },
  {
    "text": "your ml pipeline",
    "start": "864000",
    "end": "866320"
  },
  {
    "text": "and also have the ability to do things",
    "start": "866320",
    "end": "868399"
  },
  {
    "text": "like roll back to previous versions",
    "start": "868399",
    "end": "870480"
  },
  {
    "text": "straight from the ui so for this step",
    "start": "870480",
    "end": "874000"
  },
  {
    "text": "we used spinnaker",
    "start": "874000",
    "end": "877279"
  },
  {
    "text": "for the uninitiated this is what",
    "start": "882000",
    "end": "883760"
  },
  {
    "text": "spinnaker looks like",
    "start": "883760",
    "end": "885839"
  },
  {
    "text": "spinnaker is a cloud native continuous",
    "start": "885839",
    "end": "888079"
  },
  {
    "text": "delivery system",
    "start": "888079",
    "end": "889839"
  },
  {
    "text": "which makes your deployments fast safe",
    "start": "889839",
    "end": "893519"
  },
  {
    "text": "and repeatable in spinnaker",
    "start": "893519",
    "end": "897279"
  },
  {
    "text": "you define one or more pipelines to",
    "start": "897279",
    "end": "900000"
  },
  {
    "text": "manage",
    "start": "900000",
    "end": "900560"
  },
  {
    "text": "the deployments which consist of a set",
    "start": "900560",
    "end": "903680"
  },
  {
    "text": "of stages",
    "start": "903680",
    "end": "905680"
  },
  {
    "text": "a stage is an action for the spinnaker",
    "start": "905680",
    "end": "909040"
  },
  {
    "text": "pipeline to perform",
    "start": "909040",
    "end": "910959"
  },
  {
    "text": "like deploying a manifest running a job",
    "start": "910959",
    "end": "915199"
  },
  {
    "text": "kicking off a sub pipeline",
    "start": "915199",
    "end": "918480"
  },
  {
    "text": "resizing a server group and so on",
    "start": "918480",
    "end": "921760"
  },
  {
    "text": "and so forth",
    "start": "921760",
    "end": "927839"
  },
  {
    "text": "deploying our ml pipeline might look",
    "start": "930160",
    "end": "932399"
  },
  {
    "text": "something like this",
    "start": "932399",
    "end": "934399"
  },
  {
    "text": "your initial configuration expects a set",
    "start": "934399",
    "end": "937360"
  },
  {
    "text": "of artifacts as input",
    "start": "937360",
    "end": "939440"
  },
  {
    "text": "in our case this would contain the",
    "start": "939440",
    "end": "941360"
  },
  {
    "text": "kubeflow pipeline yaml artifact",
    "start": "941360",
    "end": "943920"
  },
  {
    "text": "and some configuration to help us pass",
    "start": "943920",
    "end": "946720"
  },
  {
    "text": "in",
    "start": "946720",
    "end": "947199"
  },
  {
    "text": "proper parameters when invoking the",
    "start": "947199",
    "end": "949440"
  },
  {
    "text": "kubeflow pipeline",
    "start": "949440",
    "end": "952000"
  },
  {
    "text": "then next you might have some",
    "start": "952000",
    "end": "955440"
  },
  {
    "text": "smoke test to do non-excessive tests",
    "start": "955440",
    "end": "958639"
  },
  {
    "text": "against your new ml pipeline but this is",
    "start": "958639",
    "end": "962160"
  },
  {
    "text": "optional and really up to you",
    "start": "962160",
    "end": "965839"
  },
  {
    "text": "next is the main part of this pipeline",
    "start": "966160",
    "end": "969440"
  },
  {
    "text": "running the ml pipeline stage",
    "start": "969440",
    "end": "972959"
  },
  {
    "text": "which does the actual deploying or",
    "start": "972959",
    "end": "975440"
  },
  {
    "text": "submission of this pipeline",
    "start": "975440",
    "end": "978800"
  },
  {
    "text": "for us this looked like a small",
    "start": "978800",
    "end": "980959"
  },
  {
    "text": "kubernetes job",
    "start": "980959",
    "end": "982480"
  },
  {
    "text": "that first submits a run of the ml",
    "start": "982480",
    "end": "984800"
  },
  {
    "text": "pipeline",
    "start": "984800",
    "end": "985839"
  },
  {
    "text": "to the kubeflow cluster waits for",
    "start": "985839",
    "end": "989199"
  },
  {
    "text": "successful completion",
    "start": "989199",
    "end": "991519"
  },
  {
    "text": "then parses the output to produce a",
    "start": "991519",
    "end": "994399"
  },
  {
    "text": "spinnaker artifact",
    "start": "994399",
    "end": "995600"
  },
  {
    "text": "that can be passed around in subsequent",
    "start": "995600",
    "end": "997440"
  },
  {
    "text": "stages in the spinnaker pipeline",
    "start": "997440",
    "end": "1001120"
  },
  {
    "text": "lastly if you have a model server",
    "start": "1001120",
    "end": "1003360"
  },
  {
    "text": "deployment",
    "start": "1003360",
    "end": "1004320"
  },
  {
    "text": "spinnaker pipeline you can invoke that",
    "start": "1004320",
    "end": "1006880"
  },
  {
    "text": "step",
    "start": "1006880",
    "end": "1007600"
  },
  {
    "text": "directly at the end of this pipeline",
    "start": "1007600",
    "end": "1010240"
  },
  {
    "text": "though",
    "start": "1010240",
    "end": "1010880"
  },
  {
    "text": "at this point in your project life cycle",
    "start": "1010880",
    "end": "1013519"
  },
  {
    "text": "you probably don't have that yet",
    "start": "1013519",
    "end": "1016320"
  },
  {
    "text": "more on this in step 6.",
    "start": "1016320",
    "end": "1025520"
  },
  {
    "text": "in step five we achieve continuous",
    "start": "1025520",
    "end": "1028798"
  },
  {
    "text": "training",
    "start": "1028799",
    "end": "1030319"
  },
  {
    "text": "to do this you update your cd pipeline",
    "start": "1030319",
    "end": "1033438"
  },
  {
    "text": "to trigger deployment of your ml",
    "start": "1033439",
    "end": "1036558"
  },
  {
    "text": "pipeline",
    "start": "1036559",
    "end": "1037760"
  },
  {
    "text": "either on some set on some set schedule",
    "start": "1037760",
    "end": "1041918"
  },
  {
    "text": "like daily weekly monthly",
    "start": "1041919",
    "end": "1044959"
  },
  {
    "text": "or upon availability of new data",
    "start": "1044959",
    "end": "1048400"
  },
  {
    "text": "the route you take here will depend on",
    "start": "1048400",
    "end": "1050400"
  },
  {
    "text": "your use case and availability",
    "start": "1050400",
    "end": "1052640"
  },
  {
    "text": "of new data we do this in spinnaker",
    "start": "1052640",
    "end": "1056960"
  },
  {
    "text": "by using built-in triggering mechanisms",
    "start": "1056960",
    "end": "1060160"
  },
  {
    "text": "like chrome jobs and pub sub message",
    "start": "1060160",
    "end": "1063200"
  },
  {
    "text": "triggering",
    "start": "1063200",
    "end": "1065520"
  },
  {
    "text": "after completing this you'll automate",
    "start": "1065520",
    "end": "1068640"
  },
  {
    "text": "the process",
    "start": "1068640",
    "end": "1069440"
  },
  {
    "text": "of training new models upon the",
    "start": "1069440",
    "end": "1071360"
  },
  {
    "text": "availability of new data",
    "start": "1071360",
    "end": "1075039"
  },
  {
    "text": "in step six we achieve continuous",
    "start": "1079440",
    "end": "1081919"
  },
  {
    "text": "delivery",
    "start": "1081919",
    "end": "1082799"
  },
  {
    "text": "for the model server or prediction",
    "start": "1082799",
    "end": "1084799"
  },
  {
    "text": "service",
    "start": "1084799",
    "end": "1086400"
  },
  {
    "text": "we did this in spinnaker by setting up a",
    "start": "1086400",
    "end": "1088640"
  },
  {
    "text": "pipeline which specifies how to deploy",
    "start": "1088640",
    "end": "1090799"
  },
  {
    "text": "the model server",
    "start": "1090799",
    "end": "1092400"
  },
  {
    "text": "and triggered on changes to the server",
    "start": "1092400",
    "end": "1095840"
  },
  {
    "text": "configuration via continuous integration",
    "start": "1095840",
    "end": "1100080"
  },
  {
    "text": "or upon the availability of new model",
    "start": "1100080",
    "end": "1102720"
  },
  {
    "text": "artifacts",
    "start": "1102720",
    "end": "1103600"
  },
  {
    "text": "created by the continuous training",
    "start": "1103600",
    "end": "1105280"
  },
  {
    "text": "spinnaker pipeline",
    "start": "1105280",
    "end": "1106799"
  },
  {
    "text": "discussed in the previous steps",
    "start": "1106799",
    "end": "1110080"
  },
  {
    "text": "after this stage is completed you",
    "start": "1110080",
    "end": "1112799"
  },
  {
    "text": "benefit from",
    "start": "1112799",
    "end": "1114000"
  },
  {
    "text": "the continuous deployment of new model",
    "start": "1114000",
    "end": "1116080"
  },
  {
    "text": "servers and also make gains with respect",
    "start": "1116080",
    "end": "1118799"
  },
  {
    "text": "to reproducibility",
    "start": "1118799",
    "end": "1123840"
  },
  {
    "text": "the spinnaker pipeline here should look",
    "start": "1127039",
    "end": "1128720"
  },
  {
    "text": "similar to what you'd expect",
    "start": "1128720",
    "end": "1130480"
  },
  {
    "text": "for traditional server deployment so i",
    "start": "1130480",
    "end": "1132799"
  },
  {
    "text": "won't go into great detail",
    "start": "1132799",
    "end": "1135760"
  },
  {
    "text": "on this slide you see a sample spinnaker",
    "start": "1135760",
    "end": "1138080"
  },
  {
    "text": "deployment",
    "start": "1138080",
    "end": "1140080"
  },
  {
    "text": "that deploys a canary waits for manual",
    "start": "1140080",
    "end": "1143919"
  },
  {
    "text": "approval",
    "start": "1143919",
    "end": "1145039"
  },
  {
    "text": "then deploys to some production",
    "start": "1145039",
    "end": "1148840"
  },
  {
    "text": "environment",
    "start": "1148840",
    "end": "1151840"
  },
  {
    "text": "lastly you'll want to invest in",
    "start": "1152480",
    "end": "1154559"
  },
  {
    "text": "monitoring",
    "start": "1154559",
    "end": "1156480"
  },
  {
    "text": "in this step you want to make sure that",
    "start": "1156480",
    "end": "1158240"
  },
  {
    "text": "you have the proper telemetry in place",
    "start": "1158240",
    "end": "1160640"
  },
  {
    "text": "for your server additionally",
    "start": "1160640",
    "end": "1164000"
  },
  {
    "text": "you'll need mechanisms to detect",
    "start": "1164000",
    "end": "1166240"
  },
  {
    "text": "deviations in model performance",
    "start": "1166240",
    "end": "1170160"
  },
  {
    "text": "for the former you have the usual",
    "start": "1170240",
    "end": "1172559"
  },
  {
    "text": "suspects",
    "start": "1172559",
    "end": "1173600"
  },
  {
    "text": "of latency traffic errors",
    "start": "1173600",
    "end": "1176960"
  },
  {
    "text": "and saturation for your model",
    "start": "1176960",
    "end": "1180160"
  },
  {
    "text": "performance",
    "start": "1180160",
    "end": "1181440"
  },
  {
    "text": "if it is hard to get direct feedback on",
    "start": "1181440",
    "end": "1183440"
  },
  {
    "text": "your model's predictive accuracy",
    "start": "1183440",
    "end": "1186080"
  },
  {
    "text": "you can use proxy metrics that track the",
    "start": "1186080",
    "end": "1188240"
  },
  {
    "text": "results of acting on your predictions",
    "start": "1188240",
    "end": "1190960"
  },
  {
    "text": "for example here you might measure if",
    "start": "1190960",
    "end": "1194080"
  },
  {
    "text": "there are shifts",
    "start": "1194080",
    "end": "1195440"
  },
  {
    "text": "in click-through rates",
    "start": "1195440",
    "end": "1198639"
  },
  {
    "text": "after this step you'll unlock the",
    "start": "1199520",
    "end": "1201520"
  },
  {
    "text": "capability to determine if your model",
    "start": "1201520",
    "end": "1203919"
  },
  {
    "text": "or ml process needs to be changed",
    "start": "1203919",
    "end": "1208480"
  },
  {
    "text": "so cool those were the seven steps we",
    "start": "1213679",
    "end": "1216799"
  },
  {
    "text": "took to reach",
    "start": "1216799",
    "end": "1217840"
  },
  {
    "text": "quote unquote production grade",
    "start": "1217840",
    "end": "1220960"
  },
  {
    "text": "machine learning",
    "start": "1220960",
    "end": "1224080"
  },
  {
    "text": "at this point you will have achieved a",
    "start": "1224480",
    "end": "1226640"
  },
  {
    "text": "new continuous",
    "start": "1226640",
    "end": "1227919"
  },
  {
    "text": "thing continuous machine",
    "start": "1227919",
    "end": "1231200"
  },
  {
    "text": "learning this diagram",
    "start": "1231200",
    "end": "1234640"
  },
  {
    "text": "summarizes the journey we took",
    "start": "1234640",
    "end": "1237919"
  },
  {
    "text": "from ml experiments in jupiter notebooks",
    "start": "1237919",
    "end": "1241760"
  },
  {
    "text": "to continue integration using",
    "start": "1241760",
    "end": "1244799"
  },
  {
    "text": "tools like jenkins continuous training",
    "start": "1244799",
    "end": "1248640"
  },
  {
    "text": "using kubeflow to automate your ml",
    "start": "1248640",
    "end": "1251600"
  },
  {
    "text": "process",
    "start": "1251600",
    "end": "1253120"
  },
  {
    "text": "continuous deployment through spinnaker",
    "start": "1253120",
    "end": "1256880"
  },
  {
    "text": "to monitor to monitoring metrics in your",
    "start": "1256880",
    "end": "1259120"
  },
  {
    "text": "kubernetes pods",
    "start": "1259120",
    "end": "1260880"
  },
  {
    "text": "which will then ultimately lead you back",
    "start": "1260880",
    "end": "1263679"
  },
  {
    "text": "to doing",
    "start": "1263679",
    "end": "1264320"
  },
  {
    "text": "more experiments and refining your",
    "start": "1264320",
    "end": "1266480"
  },
  {
    "text": "process",
    "start": "1266480",
    "end": "1268960"
  },
  {
    "text": "here are some useful links for those who",
    "start": "1271360",
    "end": "1273039"
  },
  {
    "text": "want to learn more about snapchat",
    "start": "1273039",
    "end": "1275280"
  },
  {
    "text": "ml ops in general or the various tools i",
    "start": "1275280",
    "end": "1278080"
  },
  {
    "text": "mentioned",
    "start": "1278080",
    "end": "1279280"
  },
  {
    "text": "i'll stay here for a few seconds for",
    "start": "1279280",
    "end": "1281520"
  },
  {
    "text": "those who want to",
    "start": "1281520",
    "end": "1284159"
  },
  {
    "text": "screenshot this for future reference",
    "start": "1284159",
    "end": "1291840"
  },
  {
    "text": "okay anyway",
    "start": "1291840",
    "end": "1294880"
  },
  {
    "text": "thanks for listening",
    "start": "1294880",
    "end": "1297840"
  },
  {
    "text": "again i'm kevin dela rosa signing off",
    "start": "1298559",
    "end": "1302720"
  },
  {
    "text": "have a great rest of your day thank you",
    "start": "1302720",
    "end": "1308400"
  }
]