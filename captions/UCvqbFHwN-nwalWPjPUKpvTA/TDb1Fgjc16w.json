[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "okay the last topic for the first session is the monolith is dead langley the monolith by mitch carnes",
    "start": "13759",
    "end": "21920"
  },
  {
    "text": "and jason wong from google welcome",
    "start": "21920",
    "end": "26400"
  },
  {
    "text": "hi and greetings from beautiful seattle washington my name is mitch connors i'm a software",
    "start": "28640",
    "end": "34079"
  },
  {
    "text": "engineer at google and as you can see i enjoy being in the woods hi everyone",
    "start": "34079",
    "end": "39360"
  },
  {
    "text": "my name is jason wang i also work for google and also on the easter team",
    "start": "39360",
    "end": "46160"
  },
  {
    "text": "and also live in seattle washington so we're here today to talk to you about",
    "start": "46160",
    "end": "52079"
  },
  {
    "text": "monoliths which might strike you as a little bit odd right this is kubecon kubernetes con the",
    "start": "52079",
    "end": "58000"
  },
  {
    "start": "53000",
    "end": "53000"
  },
  {
    "text": "cloud native compute foundation's annual conference where we're supposed to talk about containers and micro services",
    "start": "58000",
    "end": "64720"
  },
  {
    "text": "not about monoliths well we're not in the wrong place and i want to make sure that you know neither are you you see microservices",
    "start": "64720",
    "end": "72080"
  },
  {
    "text": "are a brand new technology if you look at the rate of adoption they're an awesome cool technology to have conferences",
    "start": "72080",
    "end": "78720"
  },
  {
    "text": "about but a lot of people are still going to be in this long hump of adoption looking at the",
    "start": "78720",
    "end": "84320"
  },
  {
    "text": "curve it says about 80 i might even say more than that of users still are going to own one or more",
    "start": "84320",
    "end": "89920"
  },
  {
    "text": "monolithic applications and so we want to have a story for them about cloud native technologies that",
    "start": "89920",
    "end": "95520"
  },
  {
    "text": "doesn't simply involve abandoning all the work that they've invested in their monolith and carving it up into microservices you shouldn't",
    "start": "95520",
    "end": "101920"
  },
  {
    "text": "have to refactor your entire code base to take advantage of cloud native compute",
    "start": "101920",
    "end": "108240"
  },
  {
    "text": "additionally we're talking about monoliths because at istio we actually migrated our architecture to monolith",
    "start": "110799",
    "end": "117920"
  },
  {
    "text": "we had microservices up until our first release in 2020 about march",
    "start": "117920",
    "end": "122960"
  },
  {
    "text": "we went ahead and migrated those three microservices into one comprehensive monolith and you know what we found it was actually a lot easier",
    "start": "122960",
    "end": "129920"
  },
  {
    "text": "for our users to deploy and manage and it was a lot easier for us to troubleshoot so even if you're not on the long tail",
    "start": "129920",
    "end": "137200"
  },
  {
    "text": "here you might have made the choice proactively to use a monolithics piece of software",
    "start": "137200",
    "end": "142480"
  },
  {
    "text": "and we want to show you how you can take advantage of cloud native technologies without moving to microservices so let's",
    "start": "142480",
    "end": "149760"
  },
  {
    "text": "start by defining monolith oxford english dictionary tells us it's a large single upright block of stone",
    "start": "149760",
    "end": "157280"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "that definition works maybe as a metaphor but i think wikipedia gets it a little",
    "start": "157280",
    "end": "162640"
  },
  {
    "text": "bit closer to what you and i are talking about a monolithic application is self-contained and independent from",
    "start": "162640",
    "end": "169120"
  },
  {
    "text": "other computing applications uh comes from the greek single rock and uh i got the usage chart here which i",
    "start": "169120",
    "end": "176160"
  },
  {
    "text": "thought was interesting nobody seems too surprised i think about this early 2000s crest",
    "start": "176160",
    "end": "181519"
  },
  {
    "text": "of talking about monoliths everyone was talking about moving to service oriented architecture and microservices",
    "start": "181519",
    "end": "186800"
  },
  {
    "text": "uh this this bump was a little bit more interesting i'm curious to know why everyone was talking about monoliths",
    "start": "186800",
    "end": "192959"
  },
  {
    "text": "in the 1870s i don't think it was about the babbage machine but if anybody knows please hit me up on",
    "start": "192959",
    "end": "199120"
  },
  {
    "text": "twitter i'd love to hear the answer to that well so when we take into consideration that definition",
    "start": "199120",
    "end": "205200"
  },
  {
    "text": "independent from other computing applications i think you'll find that true monolithic applications are rare right",
    "start": "205200",
    "end": "211680"
  },
  {
    "text": "all of our applications have dependencies on other applications at the very least even if you've got a combined frontend",
    "start": "211680",
    "end": "218000"
  },
  {
    "text": "backend server you've probably got a database for persisting data you're probably not doing that yourself",
    "start": "218000",
    "end": "223280"
  },
  {
    "text": "in process even if it sits on the same computer still not quite a monolith you've got some networking traffic there that might",
    "start": "223280",
    "end": "229280"
  },
  {
    "text": "have latency you're interested in might need security uh additionally",
    "start": "229280",
    "end": "234319"
  },
  {
    "text": "you don't tend to get your users sitting at the same computer your monolith is running on right",
    "start": "234319",
    "end": "239760"
  },
  {
    "text": "you tend to have users who are on the internet and those users are coming to you via a load balancer or a gateway or a firewall so",
    "start": "239760",
    "end": "248000"
  },
  {
    "text": "true monoliths are pretty rare most of the time what we're talking about is really a macro service it's one",
    "start": "248000",
    "end": "254159"
  },
  {
    "text": "process that just has lots of functionality packed into it you've got business logic you've got front end",
    "start": "254159",
    "end": "260799"
  },
  {
    "text": "logic you've got logic that maybe nobody really knows what it does anymore but it's still there and everyone's afraid to take it",
    "start": "260799",
    "end": "266400"
  },
  {
    "text": "away we want to talk about for people like that how do you own a monolith",
    "start": "266400",
    "end": "272080"
  },
  {
    "text": "bringing it towards cloud native compute technologies without going through all the pain of a refactor",
    "start": "272080",
    "end": "277199"
  },
  {
    "text": "so i want to introduce you to our pet monolith we're going to be talking about a company called the hipster shop",
    "start": "277199",
    "end": "283199"
  },
  {
    "start": "278000",
    "end": "278000"
  },
  {
    "text": "hipster shop is an online boutique you might recognize it as an example from google cloud",
    "start": "283199",
    "end": "288320"
  },
  {
    "text": "usually hipster shop we're talking about micro services but what we've done for the sake of this talk is we have recomposed those",
    "start": "288320",
    "end": "295040"
  },
  {
    "text": "microservices into a single container running as a monolith now the one way that this monolith might",
    "start": "295040",
    "end": "301759"
  },
  {
    "text": "be slightly different than the monolith that you run is that it is still communicating with itself over tcp",
    "start": "301759",
    "end": "308639"
  },
  {
    "text": "requests from the product page to the reviews page to the raid ratings page are happening over tcp and",
    "start": "308639",
    "end": "316000"
  },
  {
    "text": "that is actually a change that we would advocate for making inside of a monolith it's not a complete refactor but it does",
    "start": "316000",
    "end": "322400"
  },
  {
    "text": "involve some elbow grease but the cool thing is with just that little bit of elbow grease i think we'll be able to show",
    "start": "322400",
    "end": "328160"
  },
  {
    "text": "that there are a lot of advantages that you'll be able to find with cloud native technologies and your monolith",
    "start": "328160",
    "end": "333520"
  },
  {
    "text": "feel free to follow along with us since we're all sitting at our laptops anyways for this demo you can check out all the",
    "start": "333520",
    "end": "338960"
  },
  {
    "text": "code we're running on github there at the link you can also use our monolithic container",
    "start": "338960",
    "end": "344400"
  },
  {
    "text": "at the istio testing hipster monolith repository so feel free to toy with or play with",
    "start": "344400",
    "end": "350000"
  },
  {
    "text": "this yourself also a lot of our examples that we're going to run through we had to sort of abbreviate them so",
    "start": "350000",
    "end": "355120"
  },
  {
    "text": "they fit on the screen and we really don't expect you to write them down from the screen so go ahead and check out github where",
    "start": "355120",
    "end": "360160"
  },
  {
    "text": "we'll have detailed examples for you to follow through follow along with all right so let's see what's what the",
    "start": "360160",
    "end": "366000"
  },
  {
    "text": "first challenge we want to do with our monolith is the ceo of hipster shop comes to his dev team and says guys",
    "start": "366000",
    "end": "372160"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "the website is just way too slow uh i've been waiting for it to load forever i'm",
    "start": "372160",
    "end": "377360"
  },
  {
    "text": "worried that customers are going to give up and we're going to lose money i need you to speed things up why is it running slow and what changed",
    "start": "377360",
    "end": "383120"
  },
  {
    "text": "it was growing great last week well as a dev team we know that the hipster telemetry",
    "start": "383120",
    "end": "388560"
  },
  {
    "text": "system is is not really a system it's more like seven systems there's a log scraper",
    "start": "388560",
    "end": "394479"
  },
  {
    "text": "and the part that the intern rewrote last summer did use a telemetry system that was hooked up to a dashboard",
    "start": "394479",
    "end": "399919"
  },
  {
    "text": "but nobody really knows how that part works uh identifying exactly where this latency comes from",
    "start": "399919",
    "end": "405840"
  },
  {
    "text": "might be difficult we could run it in debug mode and get trace dumps of absolutely everything on the application",
    "start": "405840",
    "end": "411440"
  },
  {
    "text": "but that's going to slow it down even further i wonder if we have another option so we",
    "start": "411440",
    "end": "416960"
  },
  {
    "text": "could refactor our monolith to add in consistent telemetry and tracing across the codebase",
    "start": "416960",
    "end": "422720"
  },
  {
    "text": "or we could use a service mesh jason tell us what we can do",
    "start": "422720",
    "end": "428000"
  },
  {
    "text": "sure um yeah before we actually look at example and integrate with a",
    "start": "428000",
    "end": "433599"
  },
  {
    "text": "service mesh let's look at e-still e-still is a service mesh which is developed by",
    "start": "433599",
    "end": "441199"
  },
  {
    "text": "google and ibm and a few other organizations in the easter match you",
    "start": "441199",
    "end": "446400"
  },
  {
    "text": "can see in the diagram east od lives inside the control plane and the control plane is where we",
    "start": "446400",
    "end": "453039"
  },
  {
    "text": "actually do the configurations um for most of our uh isto apis",
    "start": "453039",
    "end": "459120"
  },
  {
    "text": "um so esto d is responsible for reading and pushing configurations discovering",
    "start": "459120",
    "end": "464560"
  },
  {
    "text": "proxies in a mesh and configuring certificates for the proxies on the data plane the proxy that we're",
    "start": "464560",
    "end": "471680"
  },
  {
    "text": "talking about are basically invoice proxies which are very popular these these years um and a lot of",
    "start": "471680",
    "end": "478319"
  },
  {
    "text": "organizations are stopping uh start starting to adopt avoid proxies um",
    "start": "478319",
    "end": "484000"
  },
  {
    "text": "so the proxies are interacted alongside with each workload and they are the main entry points for",
    "start": "484000",
    "end": "490000"
  },
  {
    "text": "the traffic in and out of the workloads as you can see in this diagram the",
    "start": "490000",
    "end": "495199"
  },
  {
    "text": "diagram is uh created to help understand uh microservice architecture",
    "start": "495199",
    "end": "500240"
  },
  {
    "text": "but so uh but no worries at all uh eso will also work for monolithic applications",
    "start": "500240",
    "end": "505759"
  },
  {
    "text": "and let's see an example [Music] next slide all right so",
    "start": "505759",
    "end": "513839"
  },
  {
    "start": "511000",
    "end": "511000"
  },
  {
    "text": "as we mentioned we want to leverage service mesh which in our example is estelle to",
    "start": "513839",
    "end": "520560"
  },
  {
    "text": "to help with our monolithic applications and look at telemetry so in this example we are integrating",
    "start": "520560",
    "end": "528240"
  },
  {
    "text": "our via our hipster shop which is running on vm and and leveraging a kubernetes cluster",
    "start": "528240",
    "end": "535680"
  },
  {
    "text": "um in a kubernetes cluster uh um it is created to just host each of",
    "start": "535680",
    "end": "542480"
  },
  {
    "text": "the prometheus and kiali ecod as we mentioned is installed to push configurations to the",
    "start": "542480",
    "end": "548399"
  },
  {
    "text": "easter proxies uh or easter proxy on the via um and prometheus and kia install to",
    "start": "548399",
    "end": "554640"
  },
  {
    "text": "script metrics and display service telemetry graph uh for us so as before external traffic is",
    "start": "554640",
    "end": "561680"
  },
  {
    "text": "directed to the vm that includes the hipster shop monolith",
    "start": "561680",
    "end": "567440"
  },
  {
    "text": "and in our case we need to configure workload entry in still",
    "start": "567440",
    "end": "572480"
  },
  {
    "text": "so that em is actually treated in the still uh as a normal kubernetes workload uh",
    "start": "572480",
    "end": "579519"
  },
  {
    "text": "during proxy configuration um and the vm is also included uh",
    "start": "579519",
    "end": "585040"
  },
  {
    "text": "as part of the mesh and known to the the other proxies",
    "start": "585040",
    "end": "591839"
  },
  {
    "start": "591000",
    "end": "591000"
  },
  {
    "text": "and so with that being configured we can easily get some initial graphs and",
    "start": "592959",
    "end": "599760"
  },
  {
    "text": "telemetry uh using chiadi and prometheus and you can see that we have some",
    "start": "599760",
    "end": "605680"
  },
  {
    "text": "request count uh request size um telemetry being",
    "start": "605680",
    "end": "611279"
  },
  {
    "text": "ingested by just integrating east o into our application",
    "start": "611279",
    "end": "616640"
  },
  {
    "text": "and we can already the traffic flow um from the external to inside of our",
    "start": "616640",
    "end": "624000"
  },
  {
    "text": "our hipster shop application uh without extra configuration and also in addition",
    "start": "624000",
    "end": "630560"
  },
  {
    "text": "we can configure jaeger to provide tracing data for us within the mesh",
    "start": "630560",
    "end": "637680"
  },
  {
    "start": "638000",
    "end": "638000"
  },
  {
    "text": "all right so we've been able to get telemetry data for our monolith we've been able to identify where the",
    "start": "638560",
    "end": "644240"
  },
  {
    "text": "cause of our latency was and go and patch that to keep our ceo happy without touching a single line of code",
    "start": "644240",
    "end": "650160"
  },
  {
    "text": "but as is true in business change is constant especially in this industry so the next day the ceo is back with the dev team",
    "start": "650160",
    "end": "656480"
  },
  {
    "text": "to tell us awesome news about this acquisition of the company called review lee now reviewly",
    "start": "656480",
    "end": "663360"
  },
  {
    "text": "is a awesome startup they're all about doing great high quality reviews from",
    "start": "663360",
    "end": "669040"
  },
  {
    "text": "users and getting them sourced well and so we want to go and integrate that with the hipster shop and the ceo has",
    "start": "669040",
    "end": "674399"
  },
  {
    "text": "asked us to start using the review lee api for our reviews instead of our existing one as soon as",
    "start": "674399",
    "end": "679519"
  },
  {
    "text": "possible well the dev team we're a little bit less excited about this we know that review lee",
    "start": "679519",
    "end": "685600"
  },
  {
    "text": "runs on kubernetes they're already containerized and because they're already containerized they've been able to take",
    "start": "685600",
    "end": "691680"
  },
  {
    "text": "advantage of a weekly release cadence just constantly shipping with continuous integration",
    "start": "691680",
    "end": "697040"
  },
  {
    "text": "continuous delivery products uh on the other hand with our vm based monolith",
    "start": "697040",
    "end": "702399"
  },
  {
    "text": "we have a quarterly release case and the reason for that is so that every two after two months of development we can",
    "start": "702399",
    "end": "708480"
  },
  {
    "text": "do a one month bake test there's a lot of moving parts and no one understands all of the code entirely we want to make sure that we haven't",
    "start": "708480",
    "end": "714800"
  },
  {
    "text": "broken anything when we roll out a new version of hipster and so we make sure to let it settle in make sure that we understand how its",
    "start": "714800",
    "end": "720959"
  },
  {
    "text": "performance is going to work before we push it out to customers we're not exactly sure how we're going",
    "start": "720959",
    "end": "726000"
  },
  {
    "text": "to test a new release of review every week so we've got two options uh we can refactor the monolith",
    "start": "726000",
    "end": "732720"
  },
  {
    "text": "finding everywhere that we've used the reviews api and replace it with the review lee api that's probably not too difficult it's",
    "start": "732720",
    "end": "738800"
  },
  {
    "text": "probably maintaining a config file we can we can get over that but we also are going to need to ask",
    "start": "738800",
    "end": "744000"
  },
  {
    "text": "reviewly all of these new developers who are excited about their acquisition we're going to have to give them the bad",
    "start": "744000",
    "end": "749200"
  },
  {
    "text": "news that they need to move to waterfall right they need to start quarterly or maybe monthly release cadence so that we can",
    "start": "749200",
    "end": "754639"
  },
  {
    "text": "keep up with them and they're not breaking things for us or there is another option we could take",
    "start": "754639",
    "end": "759920"
  },
  {
    "text": "a look at using a service mesh jason tell us how a service mesh can help us solve this problem",
    "start": "759920",
    "end": "765760"
  },
  {
    "start": "765000",
    "end": "765000"
  },
  {
    "text": "sure that's uh that we beauty to our service mesh now let's see uh given our",
    "start": "765760",
    "end": "772720"
  },
  {
    "text": "already configured uh digital service mesh already have the vm",
    "start": "772720",
    "end": "777760"
  },
  {
    "text": "uh which is running the hipster shop and it's already in our mesh uh and now we're adding review es uh",
    "start": "777760",
    "end": "784079"
  },
  {
    "text": "another service in the service mesh uh note that we are uh putting only one kubernetes cluster",
    "start": "784079",
    "end": "790480"
  },
  {
    "text": "in this example but we can also configure uh another kubernetes cluster which may",
    "start": "790480",
    "end": "796639"
  },
  {
    "text": "already be running beauty and put it uh also integrated in our current service mesh",
    "start": "796639",
    "end": "803760"
  },
  {
    "text": "um so to do that we simply add this virtual service uh in e-still virtual servicing still is",
    "start": "803760",
    "end": "810880"
  },
  {
    "text": "an api that allows you to configure traffic routing among services um and you can see the",
    "start": "810880",
    "end": "817680"
  },
  {
    "text": "the in the example here that we are redirecting all the reviews traffic from the hipster shop to review the",
    "start": "817680",
    "end": "823760"
  },
  {
    "text": "service that we just added uh using the server the same external service address",
    "start": "823760",
    "end": "829279"
  },
  {
    "text": "external users or other consumers are able to um just see the new results from",
    "start": "829279",
    "end": "835040"
  },
  {
    "text": "reviewing uh just by accessing the same uh endpoint for the product page um or a",
    "start": "835040",
    "end": "840959"
  },
  {
    "text": "hipster show but jason it looks to me like what you're talking about is a point in time cut over",
    "start": "840959",
    "end": "846079"
  },
  {
    "text": "from using hipster reviews to review the reviews i mean is that safe what happens if reviewly causes",
    "start": "846079",
    "end": "852000"
  },
  {
    "text": "problems is there any way to have some certainty about this yeah exactly i think a lot of people",
    "start": "852000",
    "end": "857199"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "have been trying this uh um kind of uh practice",
    "start": "857199",
    "end": "862240"
  },
  {
    "text": "before by doing uh canary deployment uh where in canary deployment",
    "start": "862240",
    "end": "867360"
  },
  {
    "text": "you can try to uh migrate your traffic from one or the other and test out if uh",
    "start": "867360",
    "end": "874480"
  },
  {
    "text": "if uh one one version is working or not uh versus the other one um so in this",
    "start": "874480",
    "end": "880399"
  },
  {
    "text": "example uh we we have we just introduced the review uh version two um where we can do a",
    "start": "880399",
    "end": "888959"
  },
  {
    "text": "clarity deployment betw uh for v1 and v2 and also by it by using",
    "start": "888959",
    "end": "894959"
  },
  {
    "text": "virtual service and in the example here you can see that we're giving um each one of the versions",
    "start": "894959",
    "end": "901760"
  },
  {
    "text": "uh with equal weight of 50 and they combined added up to 100 so meaning that",
    "start": "901760",
    "end": "910480"
  },
  {
    "text": "now we have uh on average uh 50 of chance uh having the reduced",
    "start": "910480",
    "end": "916480"
  },
  {
    "text": "traffic go into reviewing version one and fifty percent percent chance of going to review the",
    "start": "916480",
    "end": "922399"
  },
  {
    "text": "version two uh so you can in that way you can test out a new version before it actually rolls",
    "start": "922399",
    "end": "928240"
  },
  {
    "text": "out all right um so now we have two services",
    "start": "928240",
    "end": "935120"
  },
  {
    "start": "930000",
    "end": "930000"
  },
  {
    "text": "uh and two versions of the search service um now we wanted to bring it to production",
    "start": "935120",
    "end": "940560"
  },
  {
    "text": "and before we do bring to production we definitely want to do some additional testing and you may",
    "start": "940560",
    "end": "947040"
  },
  {
    "text": "hear the term chaos engineering in the past and one of the practices in",
    "start": "947040",
    "end": "952720"
  },
  {
    "text": "chaos engineering is to actually do a phone injection so in this this example we would like to",
    "start": "952720",
    "end": "961519"
  },
  {
    "text": "inject some fault to our review v1 service to make sure it is running still",
    "start": "961519",
    "end": "966560"
  },
  {
    "text": "fine with introduction of v2 version and in the code snippet here you can see",
    "start": "966560",
    "end": "973440"
  },
  {
    "text": "that we are introducing a fixed delay of seven seconds to the service to the v1 service",
    "start": "973440",
    "end": "981680"
  },
  {
    "text": "so we can actually test out uh in in our mirror traffic uh from production",
    "start": "981680",
    "end": "987600"
  },
  {
    "text": "and notice that we're testing this out in the staging of vm which we replicated from",
    "start": "987600",
    "end": "993040"
  },
  {
    "text": "our production vm and it should be uh running the same uh traffic and same",
    "start": "993040",
    "end": "999839"
  },
  {
    "text": "request the same as the production environment",
    "start": "999839",
    "end": "1004560"
  },
  {
    "start": "1004000",
    "end": "1004000"
  },
  {
    "text": "all right so we've survived two crises with our ceo we've made no changes to our monolithic",
    "start": "1005040",
    "end": "1011440"
  },
  {
    "text": "code base but now we've got observability for both reviewly and for our legacy application",
    "start": "1011440",
    "end": "1016720"
  },
  {
    "text": "we've integrated it and we've made sure that there was no downtime even when there were bugs in our integration with review lee",
    "start": "1016720",
    "end": "1022240"
  },
  {
    "text": "we were able to detect them early roll back quickly and get them patched as well as some really interesting testing in staging",
    "start": "1022240",
    "end": "1029438"
  },
  {
    "text": "now our next challenge right as soon as the ceo leaves happy our ciso chief information security",
    "start": "1029439",
    "end": "1035839"
  },
  {
    "text": "officer walks into the office and he says guys i just got back from this awesome conference",
    "start": "1035839",
    "end": "1040959"
  },
  {
    "text": "everyone there was talking about the cool new thing called zero trust so i've gone ahead on twitter and i've",
    "start": "1040959",
    "end": "1046240"
  },
  {
    "text": "announced to all of our customers that we're rolling out zero trust by the end of the month make it happen team",
    "start": "1046240",
    "end": "1052400"
  },
  {
    "text": "well the dev team might be a little bit less excited than our cso about zero trust because we know",
    "start": "1052400",
    "end": "1058160"
  },
  {
    "text": "the zero trust means that every request is going to fail by default unless it's explicitly been authorized",
    "start": "1058160",
    "end": "1064799"
  },
  {
    "text": "in some sort of a whitelist system and we don't have a whitelist system we also know that we're going to have to",
    "start": "1064799",
    "end": "1070320"
  },
  {
    "text": "authenticate not just the server as in normal https but also the client side of the request",
    "start": "1070320",
    "end": "1076960"
  },
  {
    "text": "this is all done for a really good reason it means that there's no security perimeter whether an attacker is coming",
    "start": "1076960",
    "end": "1082000"
  },
  {
    "text": "from outside of the data center or from within your firewall there's no way for them to compromise",
    "start": "1082000",
    "end": "1087440"
  },
  {
    "text": "many services in a zero trust environment simultaneously so it's a great plan or a great idea",
    "start": "1087440",
    "end": "1093039"
  },
  {
    "text": "but man how are we going to implement a plan like this well we've got two options we can refactor our monolith and",
    "start": "1093039",
    "end": "1099840"
  },
  {
    "text": "refactor reviewly to use mtls auth for every single network call",
    "start": "1099840",
    "end": "1104880"
  },
  {
    "text": "our our monolith i think we said was in python and so the request module probably supports mutual auth somewhere if we",
    "start": "1104880",
    "end": "1111760"
  },
  {
    "text": "figure out the configuration parameters review was written in javascript so we might need to find a javascript library",
    "start": "1111760",
    "end": "1116880"
  },
  {
    "text": "that supports mtls and then we've got to make sure that we configure them to be compatible with one another which might be a little bit",
    "start": "1116880",
    "end": "1122400"
  },
  {
    "text": "tricky we might be looking at several months we might need to push back on our csos timeline",
    "start": "1122400",
    "end": "1127600"
  },
  {
    "text": "or we could use a service mesh with spiffy jason tell us how that's going to work yeah exactly um i think when talking",
    "start": "1127600",
    "end": "1134640"
  },
  {
    "start": "1133000",
    "end": "1133000"
  },
  {
    "text": "about security uh normally we're talking about two aspects one is authentication",
    "start": "1134640",
    "end": "1139919"
  },
  {
    "text": "which is talking about uh who is making the call or kind of identity of the caller or the",
    "start": "1139919",
    "end": "1145760"
  },
  {
    "text": "colleague uh you know as well as uh what can the caller do which is authorization in that sense",
    "start": "1145760",
    "end": "1153440"
  },
  {
    "text": "uh so let's look at uh authentication for the first uh case where we can enable mtis as",
    "start": "1153440",
    "end": "1160000"
  },
  {
    "text": "mitch mentioned uh for the service mesh so mtis is a two-way communication a two-way",
    "start": "1160000",
    "end": "1165760"
  },
  {
    "text": "authentication that both the client server authenticate each other at a request so this helps that no unknown services are",
    "start": "1165760",
    "end": "1172559"
  },
  {
    "text": "able to communicate uh with the services in our mesh uh he still can enforce that",
    "start": "1172559",
    "end": "1178080"
  },
  {
    "text": "entire service mesh uh to be mtrs compatible um by using pr peer authentication api",
    "start": "1178080",
    "end": "1185840"
  },
  {
    "text": "uh for me still and uh and in that and and in this configuration you can see that we're making",
    "start": "1185840",
    "end": "1192000"
  },
  {
    "text": "mti's in mode strict um so that all the services uh in our service mesh are compliant",
    "start": "1192000",
    "end": "1198480"
  },
  {
    "text": "with mtis and are able to are being encrypted",
    "start": "1198480",
    "end": "1203600"
  },
  {
    "start": "1203000",
    "end": "1203000"
  },
  {
    "text": "and in addition uh about um who can make the call uh and um to",
    "start": "1204080",
    "end": "1210480"
  },
  {
    "text": "further enforce this security uh we can also add policies um not only allow certain workflows to",
    "start": "1210480",
    "end": "1217520"
  },
  {
    "text": "perform certain operations on the service so when we are doing this we are",
    "start": "1217520",
    "end": "1225919"
  },
  {
    "text": "giving each service a specific identity that is unique within the mesh and in this example we are only allowing",
    "start": "1225919",
    "end": "1233679"
  },
  {
    "text": "the hipster shop identified by this identity cluster.local",
    "start": "1233679",
    "end": "1240240"
  },
  {
    "text": "sites namespace slash default service account hipster shop to perform a get operation on the review",
    "start": "1240240",
    "end": "1247039"
  },
  {
    "text": "service uh please know that uh if this is helpful",
    "start": "1247039",
    "end": "1252080"
  },
  {
    "text": "uh in production environment uh especially when for example hipster shop get compromised",
    "start": "1252080",
    "end": "1258400"
  },
  {
    "text": "um by a hacker or someone else and uh the individual is is actually not able to to do any write",
    "start": "1258400",
    "end": "1266880"
  },
  {
    "text": "operations to review in that case so it actually further protects our beauty",
    "start": "1266880",
    "end": "1272480"
  },
  {
    "text": "service uh without being uh further compromised uh in a cascading way",
    "start": "1272480",
    "end": "1280159"
  },
  {
    "text": "yeah so that's uh that's how you can configure security for for your service mesh nice all right",
    "start": "1280159",
    "end": "1287039"
  },
  {
    "text": "well let's review real quickly where we've come we've shown how modernizing your monolith is easy with an istio service",
    "start": "1287039",
    "end": "1293520"
  },
  {
    "text": "mesh we've done this with security envoy and spiffy we tested in production including using fault injection and",
    "start": "1293520",
    "end": "1299520"
  },
  {
    "text": "canary deployments we showed you how you can migrate traffic from your vm into your hybrid cloud environment with",
    "start": "1299520",
    "end": "1306400"
  },
  {
    "text": "multi-cluster kubernetes we also looked at observability with prometheus and now if you want to and if you have a",
    "start": "1306400",
    "end": "1312960"
  },
  {
    "text": "business need to you're ready to start using the strangler pattern to carve off sections of your monolith",
    "start": "1312960",
    "end": "1318799"
  },
  {
    "text": "and migrate them into kubernetes as needed and we've done all of this without touching a line of code so i",
    "start": "1318799",
    "end": "1324640"
  },
  {
    "text": "hope that you can see from these examples how you can take the things that we've shown today and apply them to your monolith",
    "start": "1324640",
    "end": "1331360"
  },
  {
    "text": "and bring some of the cloud-nating compute native compute magic uh back to your monolithic code base",
    "start": "1331360",
    "end": "1337120"
  },
  {
    "text": "we've got some helpful links for you to check out we're also available on twitter in on the on the schedule",
    "start": "1337120",
    "end": "1343360"
  },
  {
    "text": "so hit us up we're and now we're ready for any questions",
    "start": "1343360",
    "end": "1347840"
  },
  {
    "text": "[Music]",
    "start": "1348620",
    "end": "1351660"
  },
  {
    "start": "1352000",
    "end": "1352000"
  },
  {
    "text": "[Music]",
    "start": "1367960",
    "end": "1371248"
  },
  {
    "text": "england",
    "start": "1386840",
    "end": "1389840"
  },
  {
    "text": "so i see a question about bootstrapping config uh it asks if we're in transition to",
    "start": "1392799",
    "end": "1398640"
  },
  {
    "text": "istio and we are already generating some envoy configuration can we use that in that configuration",
    "start": "1398640",
    "end": "1405440"
  },
  {
    "text": "moving forward alongside istio and the answer is",
    "start": "1405440",
    "end": "1410480"
  },
  {
    "text": "that this is not a supported operation istio would not help you troubleshoot this however istio does expose bootstrap",
    "start": "1410480",
    "end": "1418240"
  },
  {
    "text": "config to envoy and that is configurable if you dig fairly deep into the istio installation",
    "start": "1418240",
    "end": "1425840"
  },
  {
    "text": "parameters within the mesh config you should find bootstrap and i will try to answer with a particular uri",
    "start": "1425840",
    "end": "1433039"
  },
  {
    "text": "to the documentation for that section so it wouldn't be a supported operation but it should be possible",
    "start": "1433039",
    "end": "1439840"
  },
  {
    "text": "thanks for the question",
    "start": "1439840",
    "end": "1445840"
  },
  {
    "text": "okay let's wait for another few minutes for our attendees to generate more questions for you",
    "start": "1457360",
    "end": "1464159"
  },
  {
    "text": "sounds great",
    "start": "1464159",
    "end": "1473840"
  },
  {
    "text": "you jason there can he",
    "start": "1482320",
    "end": "1487039"
  },
  {
    "text": "another question sure the question is how we see the future of service mesh interface and will istio",
    "start": "1513039",
    "end": "1519360"
  },
  {
    "text": "fully meet the requirements of smi so service mesh interface is a project that's come about as a collaboration",
    "start": "1519360",
    "end": "1525440"
  },
  {
    "text": "from our friends at solo.i oh i think they're probably presenting a few talks at this conference as well they're",
    "start": "1525440",
    "end": "1532159"
  },
  {
    "text": "usually around and what they sought to do is abstract away service mesh implementations like",
    "start": "1532159",
    "end": "1539200"
  },
  {
    "text": "istio linker d etc so that you could write one config and have it apply to all of them",
    "start": "1539200",
    "end": "1545440"
  },
  {
    "text": "i think it's a really interesting idea i don't think it's quietly quite um born the fruit that i would",
    "start": "1545440",
    "end": "1551600"
  },
  {
    "text": "have hoped to see just yet so i think it's a technology that is developing i'm excited to see what they",
    "start": "1551600",
    "end": "1556880"
  },
  {
    "text": "come up with over the coming year as far as will istio fully meet the requirements of smi",
    "start": "1556880",
    "end": "1563039"
  },
  {
    "text": "um as far as i am aware istio's functionality is a superset of what smi",
    "start": "1563039",
    "end": "1570000"
  },
  {
    "text": "exposes so some of istio functionality can be driven through smi and some of it cannot and that's because",
    "start": "1570000",
    "end": "1576400"
  },
  {
    "text": "smi can only expose functionality that is available in all service meshes",
    "start": "1576400",
    "end": "1581679"
  },
  {
    "text": "so in areas where istio distinguishes itself is unique smi struggles to at least in my",
    "start": "1581679",
    "end": "1587360"
  },
  {
    "text": "understanding and again i am no expert on that you should talk to christian posta",
    "start": "1587360",
    "end": "1592400"
  },
  {
    "text": "or levine if they're around about the details there and i'm sure they'd be able to give a much different perspective on that",
    "start": "1592400",
    "end": "1613840"
  },
  {
    "text": "here",
    "start": "1638840",
    "end": "1641840"
  },
  {
    "text": "yeah i think uh there are another two questions uh",
    "start": "1651760",
    "end": "1658480"
  },
  {
    "text": "um mitch are you able to answer any one of those or i can go ahead and",
    "start": "1659120",
    "end": "1665600"
  },
  {
    "text": "yeah so i can tackle the first question here about the difference between istio's provided onboard version",
    "start": "1665840",
    "end": "1671520"
  },
  {
    "text": "and the official docker image for envoy um if we were to use the official docker",
    "start": "1671520",
    "end": "1678000"
  },
  {
    "text": "images in istio what would happen is we're on a quarterly release cadence and i believe",
    "start": "1678000",
    "end": "1683200"
  },
  {
    "text": "envoy is also on something like a quarterly release cadence so that would mean that when",
    "start": "1683200",
    "end": "1688720"
  },
  {
    "text": "envoy is working on a feature and ships it it would likely be another quarter beyond that before istio",
    "start": "1688720",
    "end": "1694640"
  },
  {
    "text": "is able to take advantage of it and we at istio are very interested in exposing",
    "start": "1694640",
    "end": "1700159"
  },
  {
    "text": "the bleeding edge of envoy functionality and performance to our users so what we tend to do is around the time",
    "start": "1700159",
    "end": "1705919"
  },
  {
    "text": "we're cutting a release we will take the previous release of envoy and cherry pick all of the best features from the",
    "start": "1705919",
    "end": "1712480"
  },
  {
    "text": "upcoming version that are still stable into it and that is what we release so you can sort of consider",
    "start": "1712480",
    "end": "1719200"
  },
  {
    "text": "in some ways the istio bundled envoy to be something like a preview release of what will be shipped by envoy onto",
    "start": "1719200",
    "end": "1725440"
  },
  {
    "text": "docker within a few months",
    "start": "1725440",
    "end": "1728960"
  },
  {
    "text": "regarding the second question is a good idea to access mongol or reddit still i think mitch and",
    "start": "1731600",
    "end": "1738799"
  },
  {
    "text": "i were talking about this question actually a little earlier uh we do have examples of uh and",
    "start": "1738799",
    "end": "1746960"
  },
  {
    "text": "redis and we actually we support those protocol",
    "start": "1746960",
    "end": "1752000"
  },
  {
    "text": "inside e-still personally i haven't tried it uh using or redis on these still",
    "start": "1752000",
    "end": "1759600"
  },
  {
    "text": "but i i'd love to try it out afterwards and also feel free to",
    "start": "1759600",
    "end": "1765600"
  },
  {
    "text": "to raise any issues if those don't work for you in community i think we have a bunch of people have",
    "start": "1765600",
    "end": "1771760"
  },
  {
    "text": "experience in that we do and actually with regards to redis in particular",
    "start": "1771760",
    "end": "1778080"
  },
  {
    "text": "the hipster shop that you just saw the demo built on top of uses redis um and it was built",
    "start": "1778080",
    "end": "1785039"
  },
  {
    "text": "particularly as an istio demo in the in the microservices and then we",
    "start": "1785039",
    "end": "1790799"
  },
  {
    "text": "we packaged into a monolith for this but it's still using redis within the monolith so you were able to",
    "start": "1790799",
    "end": "1796399"
  },
  {
    "text": "see traffic flowing to and from redis with telemetry security and all of that and it worked",
    "start": "1796399",
    "end": "1802240"
  },
  {
    "text": "fairly well if you've run into problems about a year ago accessing databases uh",
    "start": "1802240",
    "end": "1809440"
  },
  {
    "text": "with the istio sidecar there were some difficulties with protocol detection and protocol sniffing",
    "start": "1809440",
    "end": "1814559"
  },
  {
    "text": "there have been a lot of improvements over the last 12 months in that area so if you had a little bit of trouble a year ago give it another shot kick the",
    "start": "1814559",
    "end": "1821760"
  },
  {
    "text": "tires and if you're still running into trouble we are always hanging out at slack.istio.io or discuss.istio.org",
    "start": "1821760",
    "end": "1829279"
  },
  {
    "text": "and i would definitely be hearing interested in hearing about any problems that you're experiencing",
    "start": "1829279",
    "end": "1837840"
  }
]