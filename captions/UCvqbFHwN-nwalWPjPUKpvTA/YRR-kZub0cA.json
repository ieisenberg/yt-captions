[
  {
    "text": "okay thank you all for coming hope you appreciate the the room today",
    "start": "380",
    "end": "5700"
  },
  {
    "text": "it's great to see all of you I'm sorry it's so packed so my name is alex moore",
    "start": "5700",
    "end": "11010"
  },
  {
    "text": "with me as Jeff's Frizzell we're gonna talk to you about building for trust how to secure your kubernetes cluster of",
    "start": "11010",
    "end": "16710"
  },
  {
    "text": "course this isn't a promise that if you follow all these steps you will be perfectly secure and never rooted hopefully these will inform some of the",
    "start": "16710",
    "end": "22920"
  },
  {
    "text": "decisions you make as part of your kind of holistic security policy so let's get",
    "start": "22920",
    "end": "28560"
  },
  {
    "text": "started with some intros Jess here maybe some of you saw her wonderful talk yesterday she talked about some of the",
    "start": "28560",
    "end": "34710"
  },
  {
    "text": "security disclosure and handling process that we've built for kubernetes she built it all with Brandon lots of it at",
    "start": "34710",
    "end": "41129"
  },
  {
    "text": "least she used to work at docker and did a lot of the work for sec comp that she'll demo today and some of that and",
    "start": "41129",
    "end": "48989"
  },
  {
    "text": "we're really happy to have a right kupo cloud and this is my coworker Alex",
    "start": "48989",
    "end": "54510"
  },
  {
    "text": "he leads the Google container engine team specifically platforms",
    "start": "54510",
    "end": "59910"
  },
  {
    "text": "security to which obviously relates to this talk and before that he worked on",
    "start": "59910",
    "end": "65070"
  },
  {
    "text": "Google compute engine as well so what we're gonna be talking about today just",
    "start": "65070",
    "end": "71970"
  },
  {
    "text": "as a brief overview security boundaries identity and access management runtime",
    "start": "71970",
    "end": "77220"
  },
  {
    "text": "security and a demo and then a security roadmap so if you're like just now figuring out that you're in the wrong",
    "start": "77220",
    "end": "82560"
  },
  {
    "text": "talk you're probably stuck and I'm sorry so good luck so we'll start off with the",
    "start": "82560",
    "end": "91290"
  },
  {
    "text": "security boundaries so we have like various different security models as you",
    "start": "91290",
    "end": "97650"
  },
  {
    "text": "can see here we have the single tenant which is like one trust boundary which",
    "start": "97650",
    "end": "103619"
  },
  {
    "text": "is your entire cluster and then by default all users are admins and this is",
    "start": "103619",
    "end": "108689"
  },
  {
    "text": "kind of like the state of reality as is today but with kubernetes 1.6 which was",
    "start": "108689",
    "end": "113700"
  },
  {
    "text": "literally just released we move into this single tenant multi identities and",
    "start": "113700",
    "end": "118799"
  },
  {
    "text": "this comes from like our back and a ton of other features that we'll get into so you have multi-user and not much of",
    "start": "118799",
    "end": "126270"
  },
  {
    "text": "forcement and then also you kind of still have to treat your entire boundary or your entire cluster as your trust about",
    "start": "126270",
    "end": "134230"
  },
  {
    "text": "but moving on from that we're going to get to a place where there's like a cooperative soft multi-tenancy",
    "start": "134230",
    "end": "141390"
  },
  {
    "text": "fine-grained off it's not entirely hardened but you could use it inside a single company and get rid of bad actors",
    "start": "141390",
    "end": "148300"
  },
  {
    "text": "easily or when you know employees leave and multiple teams could be on the same",
    "start": "148300",
    "end": "154630"
  },
  {
    "text": "cluster at that point so this is today where you're you know entire cluster is",
    "start": "154630",
    "end": "162580"
  },
  {
    "text": "your trust boundary so all authorization permissions are for your entire cluster",
    "start": "162580",
    "end": "168750"
  },
  {
    "text": "all nodes have the same identity all pods have the same authorization",
    "start": "168750",
    "end": "173830"
  },
  {
    "text": "permissions and all pods have the network access so this is kind of like where you trust team one and Team two to",
    "start": "173830",
    "end": "181510"
  },
  {
    "text": "be on the same cluster because you know that they aren't going to mess with each other but if you didn't then you should really give the other team another",
    "start": "181510",
    "end": "188200"
  },
  {
    "text": "cluster just so that they don't interact with each other since there really is no",
    "start": "188200",
    "end": "193240"
  },
  {
    "text": "control between the two in the future though this is kind of what it's going",
    "start": "193240",
    "end": "198280"
  },
  {
    "text": "to look like where the names force namespace and resource are boundaries so",
    "start": "198280",
    "end": "203590"
  },
  {
    "text": "this way that you instead of spinning up a different cluster 14-2 if you wanted to you could actually just put them in a",
    "start": "203590",
    "end": "210190"
  },
  {
    "text": "different name space and then your boundary would be the namespace there",
    "start": "210190",
    "end": "215350"
  },
  {
    "text": "and not the entire cluster so you'd have your permissions granted at the namespace level rather than the entire",
    "start": "215350",
    "end": "221320"
  },
  {
    "text": "cluster and nodes would have individual permissions and fine-grained permissions",
    "start": "221320",
    "end": "228280"
  },
  {
    "text": "between teams and such and the network access could be restrained between the",
    "start": "228280",
    "end": "234550"
  },
  {
    "text": "two which is great so now I'm gonna pass it back to Alex to go or Identity and",
    "start": "234550",
    "end": "241450"
  },
  {
    "text": "Access Management thanks Jess so I guess before I get into the details will",
    "start": "241450",
    "end": "247000"
  },
  {
    "text": "briefly cover here authentication like who you are and talk about the three different components users the system",
    "start": "247000",
    "end": "252850"
  },
  {
    "text": "components and your workloads we'll talk about authorization and I'll talk a little bit about our back that's been landing with 1-6 talked a little bit",
    "start": "252850",
    "end": "260109"
  },
  {
    "text": "about auditing and then close with some secrets bits so user authentication this",
    "start": "260109",
    "end": "266050"
  },
  {
    "text": "is who are you the users of your cluster and kubernetes comes with many modules that you can choose to use whichever set of",
    "start": "266050",
    "end": "272470"
  },
  {
    "text": "them work for you there's basic HTTP off we have static bearer tokens x.509",
    "start": "272470",
    "end": "278080"
  },
  {
    "text": "client certs the service accounts get these tokens that are automatically created and managed for you",
    "start": "278080",
    "end": "284530"
  },
  {
    "text": "and then there's an open ID connect if you're interested in something like an OAuth 2 flow and if none of those work",
    "start": "284530",
    "end": "291010"
  },
  {
    "text": "for you you can only build your own custom web hook provider that all interface with something else all of",
    "start": "291010",
    "end": "297070"
  },
  {
    "text": "these things end up coming in the authentication looks at the the credentials that you pass in whatever they are and the output is a username a",
    "start": "297070",
    "end": "304150"
  },
  {
    "text": "UID and an optional list of groups and you can also tag it with a little bit of extra metadata if you need to and so the",
    "start": "304150",
    "end": "311830"
  },
  {
    "text": "point is after this stage has passed if the credentials are there you have that username usually an email address and",
    "start": "311830",
    "end": "318160"
  },
  {
    "text": "then the authorization flow that comes later can look and say ok given that identity are you able to do what you're asking to do but we don't just have",
    "start": "318160",
    "end": "325900"
  },
  {
    "text": "users we also have system components and some of these are obvious like the nodes",
    "start": "325900",
    "end": "331000"
  },
  {
    "text": "in the system need to be able to talk to the API server some of them have to do with things like if you have an ingress",
    "start": "331000",
    "end": "336610"
  },
  {
    "text": "controller running around the cube proxies that are on your system that are programming the network if you're using",
    "start": "336610",
    "end": "341760"
  },
  {
    "text": "that particular networking plugin and so this is one example config this happens",
    "start": "341760",
    "end": "347560"
  },
  {
    "text": "to be what we use with container engine of course you're free to use whatever you like and so in this case what we",
    "start": "347560",
    "end": "353470"
  },
  {
    "text": "have is a cluster certificate authority a CA that's the orange box and we take",
    "start": "353470",
    "end": "358930"
  },
  {
    "text": "that and we sign both a master search and then a node cert and so on the master then it's plumbed in it has that",
    "start": "358930",
    "end": "367150"
  },
  {
    "text": "master search it's sitting there whenever you connect to it that's the the thing is going to use and the nodes",
    "start": "367150",
    "end": "372850"
  },
  {
    "text": "themselves are given this node cert in order to use they'll talk to the API server and so then we're able to do",
    "start": "372850",
    "end": "378160"
  },
  {
    "text": "mutual off so in each of these directions it's bi-directional communication nodes verify the master",
    "start": "378160",
    "end": "384100"
  },
  {
    "text": "cert the master verifies the node cert and then that means that for example we know that you're coming in and this is",
    "start": "384100",
    "end": "389740"
  },
  {
    "text": "the identity cubelet in the system and if you are cubelet then you get certain permissions by the authorizer",
    "start": "389740",
    "end": "396570"
  },
  {
    "text": "the third pillar of authentication are service accounts and so this is the workloads that run if you have a pod",
    "start": "396740",
    "end": "402830"
  },
  {
    "text": "running in your system and this could be for example the ingress controller it could be if you wanted to run your",
    "start": "402830",
    "end": "408650"
  },
  {
    "text": "controller manager in the system that could also potentially be using this and so this uses kubernetes service accounts",
    "start": "408650",
    "end": "415039"
  },
  {
    "text": "and so there what we have is a service account controller and it signs jobs for all service accounts in the system and",
    "start": "415039",
    "end": "421699"
  },
  {
    "text": "then those John's are stored as secrets in the kubernetes api so then when you create a pod you can say if you don't",
    "start": "421699",
    "end": "429080"
  },
  {
    "text": "say anything you get the default service account for your name space and that defaults to a quote/unquote default name",
    "start": "429080",
    "end": "436370"
  },
  {
    "text": "service account of course you're free to sub you in something else if you like and then if you need to make calls to that API server you can use that as a",
    "start": "436370",
    "end": "442729"
  },
  {
    "text": "bearer token and you get the permissions then that you want your pod to have so",
    "start": "442729",
    "end": "448130"
  },
  {
    "text": "that's authentication that tells you the system who you are now what can you do with it and that's authorization",
    "start": "448130",
    "end": "455229"
  },
  {
    "text": "previously we had a system in kubernetes called a back attribute based access control this was really just a simple",
    "start": "455229",
    "end": "461930"
  },
  {
    "text": "static file based authorization policy one of the common defaults depending on which provider you're using was that it",
    "start": "461930",
    "end": "468260"
  },
  {
    "text": "had really just a single identity called admin and that was had route basically readwrite access to the entire cluster",
    "start": "468260",
    "end": "474830"
  },
  {
    "text": "so you either have readwrite to the entire cluster or you have nothing as",
    "start": "474830",
    "end": "480110"
  },
  {
    "text": "you imagine that's not quite where we wanted it to be so the second system that we call our back and if you're into",
    "start": "480110",
    "end": "486590"
  },
  {
    "text": "security the names are maybe not exactly what you might expect but they're the",
    "start": "486590",
    "end": "492110"
  },
  {
    "text": "names that kubernetes uses for these things and so our back gives you much more granular authorization through the",
    "start": "492110",
    "end": "497240"
  },
  {
    "text": "kubernetes api and i'll run through a quick example of what it lets you do in just a second and that's going bethe",
    "start": "497240",
    "end": "503150"
  },
  {
    "text": "with kubernetes one six we suspect that's probably going to become the primary mechanism going forward so if",
    "start": "503150",
    "end": "509000"
  },
  {
    "text": "you're interested in whether that meets your use cases you know please check it out try it out file bugs feature",
    "start": "509000",
    "end": "514010"
  },
  {
    "text": "requests and so on if it's not meeting what you want we probably think expect a",
    "start": "514010",
    "end": "519828"
  },
  {
    "text": "back to go away at some point in the future so here's the basic part of our",
    "start": "519829",
    "end": "525110"
  },
  {
    "text": "back in my API I've got these pods and so this is the pod API on the API server and",
    "start": "525110",
    "end": "530640"
  },
  {
    "text": "pods have a whole bunch of methods on them I'm just gonna use get and list for examples here so I've got pods that's",
    "start": "530640",
    "end": "535770"
  },
  {
    "text": "one resource type getting lists or different API calls you can make to it so how do I create a auerbach role I",
    "start": "535770",
    "end": "542340"
  },
  {
    "text": "have then I can say let's create a role called pod reader and this is all done",
    "start": "542340",
    "end": "547560"
  },
  {
    "text": "through the kubernetes api which is is great and I can say that the pod reader role has access to the get and list",
    "start": "547560",
    "end": "554430"
  },
  {
    "text": "methods of my pod so that's the role great there's a permission set and I can",
    "start": "554430",
    "end": "561060"
  },
  {
    "text": "say if you are a pod reader you can make these calls when a user comes along then how do I actually take that user and say",
    "start": "561060",
    "end": "568140"
  },
  {
    "text": "this user should be able to do those things and that's where we get a pod reader role binding basically it's a way",
    "start": "568140",
    "end": "573780"
  },
  {
    "text": "of saying this particular identity is able to act as a pod reader role and so",
    "start": "573780",
    "end": "579450"
  },
  {
    "text": "then when your authorization come sorry the authenticated user comes in we look at that identity scan through the",
    "start": "579450",
    "end": "585270"
  },
  {
    "text": "authorizing plugin in terms of our back look at all of the binding see what's available and if it gives you transitive",
    "start": "585270",
    "end": "591360"
  },
  {
    "text": "properties to get this get and list access so that's the basic basic one it",
    "start": "591360",
    "end": "598290"
  },
  {
    "text": "also can be a lot more complicated of course so here what I've shaddid is a node pod reader role we have no table",
    "start": "598290",
    "end": "605340"
  },
  {
    "text": "jects as well and the thing they also have get enlist in various other methods so I could create a node pod reader role",
    "start": "605340",
    "end": "610590"
  },
  {
    "text": "and that's going to also have node GATT and node list it'll also have pod get and pod list and so you can have that",
    "start": "610590",
    "end": "618150"
  },
  {
    "text": "role there and of course it's not just plain users that I can have that get these bindings I can also have one of",
    "start": "618150",
    "end": "624180"
  },
  {
    "text": "those groups that my users may be part of have a role I can have service accounts that my workloads are running",
    "start": "624180",
    "end": "630300"
  },
  {
    "text": "at also have this role binding there are really great Doc's I think on this stuff",
    "start": "630300",
    "end": "636360"
  },
  {
    "text": "online you know feel free to read through it it's pretty straightforward if you find it's problem complain loudly",
    "start": "636360",
    "end": "643070"
  },
  {
    "text": "so that talks about what you can do the other part of it is given if somebody's doing things you want to detect it so",
    "start": "643070",
    "end": "648900"
  },
  {
    "text": "audit logs are pretty important maybe you saw Macias talk yesterday on auditing about where we want to take",
    "start": "648900",
    "end": "654630"
  },
  {
    "text": "that there's a lot of interest from various enterprises Google internally is looking to use kubernetes more and more",
    "start": "654630",
    "end": "662250"
  },
  {
    "text": "internally and so we've done a bunch of security audits internally to figure out like what are those gaps between what we wanted to have and what",
    "start": "662250",
    "end": "668770"
  },
  {
    "text": "it currently does so we're gonna be working on improving these things over time right now what you get is this",
    "start": "668770",
    "end": "674560"
  },
  {
    "text": "basic audit log in a local file on the cube API server so it's only logging API server things and it includes things",
    "start": "674560",
    "end": "681190"
  },
  {
    "text": "like an ID a timestamp the IP address the user's name namespace URI and in a",
    "start": "681190",
    "end": "687610"
  },
  {
    "text": "separate line the response code so the way it works is it logs some starting to process requests to do X with an ID and",
    "start": "687610",
    "end": "693160"
  },
  {
    "text": "then that request processes and at some point it finishes and then it says that ID that you can use to correlate the two",
    "start": "693160",
    "end": "698380"
  },
  {
    "text": "had this particular response code but simplifying a little bit it looks something like you know at time 1 IP 1",
    "start": "698380",
    "end": "704770"
  },
  {
    "text": "Alice created deployment foo and a namespace pass and so on and then",
    "start": "704770",
    "end": "712570"
  },
  {
    "text": "finally that's all about kubernetes off up to the API server what if I have things that aren't you know kubernetes",
    "start": "712570",
    "end": "719020"
  },
  {
    "text": "and we've had support for secrets for quite a while if I want to access a database with a particular user name",
    "start": "719020",
    "end": "724690"
  },
  {
    "text": "password combo I need to github access token and maybe an HTTPS or whatever that looks like right I can create a",
    "start": "724690",
    "end": "730960"
  },
  {
    "text": "secret it's base64 encoded you can see an example on the right there of taking the admin and a password and encoding",
    "start": "730960",
    "end": "737740"
  },
  {
    "text": "those and then sticking them in as a secret and then any time I need to use that I can just reference it from my pod",
    "start": "737740",
    "end": "743110"
  },
  {
    "text": "and then accessing it via a file mount or an environment variable environment Merrill's are sometimes easy but then it",
    "start": "743110",
    "end": "749440"
  },
  {
    "text": "means that it's much harder to pick up changes if you care about updating these things over time then you can stick it",
    "start": "749440",
    "end": "755620"
  },
  {
    "text": "in a file the mounts will automatically update and you use a watch on those files to pick up those changes you can get kind of rotation going that way if",
    "start": "755620",
    "end": "762040"
  },
  {
    "text": "you want to do that and so with that I'm going to turn it back to Jess to talk",
    "start": "762040",
    "end": "768040"
  },
  {
    "text": "about run time security run time security the fun stuff that no one",
    "start": "768040",
    "end": "773650"
  },
  {
    "text": "writes okay so containers actually aren't real things they're made up of",
    "start": "773650",
    "end": "778690"
  },
  {
    "text": "you know Linux primitives of namespaces and C groups so namespaces there's all",
    "start": "778690",
    "end": "783730"
  },
  {
    "text": "these different kinds Pig mount network I mean I could go into the intricacies of each but I won't bore you with that",
    "start": "783730",
    "end": "790870"
  },
  {
    "text": "see groups control actually what a process can use so that's like resource limits",
    "start": "790870",
    "end": "796610"
  },
  {
    "text": "stuff like that namespaces actually just control what a process can see so combined together you kind of get this",
    "start": "796610",
    "end": "802070"
  },
  {
    "text": "idea of isolation but it's not enough on its own you need to add hardening",
    "start": "802070",
    "end": "807709"
  },
  {
    "text": "features on top of it to actually get like the real isolation if you want it so I'm gonna go over kind of what these",
    "start": "807709",
    "end": "815060"
  },
  {
    "text": "features are a primer is a Linux security module this one's great for if",
    "start": "815060",
    "end": "821480"
  },
  {
    "text": "you want to audit specific files or you know make certain files read-only without making your entire lycra defesa",
    "start": "821480",
    "end": "828110"
  },
  {
    "text": "your container read-only it's actually shockingly hard to have an application that can use a readable amount where the",
    "start": "828110",
    "end": "835550"
  },
  {
    "text": "entire thing is read-only like you might want to write to a file somewhere so a primer is great for kind of that like",
    "start": "835550",
    "end": "841550"
  },
  {
    "text": "more granular control over that and then also you can do things like denying mount and a couple of system functions",
    "start": "841550",
    "end": "848089"
  },
  {
    "text": "but it doesn't really cover all of them it's just for you so docker has like a saying default for an epimer profile and",
    "start": "848089",
    "end": "856820"
  },
  {
    "text": "it blocks things that you wouldn't want to happen regardless like writing to proc or writing the cysts and preventing",
    "start": "856820",
    "end": "863300"
  },
  {
    "text": "mount so this is beta in kubernetes and you can use like the defaults of the",
    "start": "863300",
    "end": "869209"
  },
  {
    "text": "runtimes so kind of what it would look like if you want to do that is you just",
    "start": "869209",
    "end": "874970"
  },
  {
    "text": "add this little annotation and then you would define this container engine X",
    "start": "874970",
    "end": "880459"
  },
  {
    "text": "here that's name that is going to use the runtime default which would use then Dockers default a breezing docker and",
    "start": "880459",
    "end": "887240"
  },
  {
    "text": "then it will just spin up this very basic nginx container that we have here",
    "start": "887240",
    "end": "892660"
  },
  {
    "text": "so seccomp is another one of these so we're a primer kind of leaves you hanging on a bunch of system functions",
    "start": "892660",
    "end": "899959"
  },
  {
    "text": "satcoms you your entire Cisco list so you can define exactly which this calls",
    "start": "899959",
    "end": "906709"
  },
  {
    "text": "your application is allowed to run and so it gives you like a ton of features",
    "start": "906709",
    "end": "912050"
  },
  {
    "text": "there you can actually even with seccomp like trace says calls and stuff like that but those are like very advanced",
    "start": "912050",
    "end": "917930"
  },
  {
    "text": "features so by default it's like Dockers default is a whitelist and it prevents",
    "start": "917930",
    "end": "925610"
  },
  {
    "text": "things that you would not want to happen as well like you know syscalls that had a very high",
    "start": "925610",
    "end": "931970"
  },
  {
    "text": "CVD rate I made sure weren't in the waitlist it took a long time to write the whitelist and test it against like applications to",
    "start": "931970",
    "end": "938750"
  },
  {
    "text": "make sure we didn't break anyone but any sort of dangerous syscall is not on there which is great so this is alpha in",
    "start": "938750",
    "end": "946000"
  },
  {
    "text": "kubernetes but it kind of has the same exact annotation as a Parmer if you want",
    "start": "946000",
    "end": "951680"
  },
  {
    "text": "to use it so you just defined that you want to use the default and then you can use it with your container or you can",
    "start": "951680",
    "end": "958910"
  },
  {
    "text": "also define your own which I'll show a little bit later too as well same with a perm or two so then there's on top of",
    "start": "958910",
    "end": "966620"
  },
  {
    "text": "this a bunch of other features with regard to SELinux which is another linux",
    "start": "966620",
    "end": "971810"
  },
  {
    "text": "security module so you can set the SELinux context for labels on volumes you can define that you want to your",
    "start": "971810",
    "end": "978980"
  },
  {
    "text": "containers to only run as a non root user which is super good you can also",
    "start": "978980",
    "end": "984320"
  },
  {
    "text": "define like I said a read-only root filesystem if your application can you do that and then you can drop or allow",
    "start": "984320",
    "end": "992029"
  },
  {
    "text": "certain capabilities so if you're not using something like net raw in your",
    "start": "992029",
    "end": "998110"
  },
  {
    "text": "application which is really just for ping you can drop it which would be look",
    "start": "998110",
    "end": "1003220"
  },
  {
    "text": "like this so these fall under security context some are container",
    "start": "1003220",
    "end": "1008440"
  },
  {
    "text": "specific which is why it's in the container spec there and then some are pod specific so this is what it would",
    "start": "1008440",
    "end": "1014050"
  },
  {
    "text": "look like to draw up net raw and then this is how you would set labels and",
    "start": "1014050",
    "end": "1019560"
  },
  {
    "text": "then if you want to do a read-only root filesystem for your pods and make sure",
    "start": "1019560",
    "end": "1026020"
  },
  {
    "text": "they run as a non reviews are cool so now we're gonna give it them own",
    "start": "1026020",
    "end": "1033959"
  },
  {
    "text": "hopefully the internet will be kind okay",
    "start": "1034110",
    "end": "1039630"
  },
  {
    "text": "so I have two clusters so we'll just",
    "start": "1039750",
    "end": "1044890"
  },
  {
    "text": "make sure that we're on the right one",
    "start": "1044890",
    "end": "1047938"
  },
  {
    "text": "just kidding I renamed these files trying to be smart",
    "start": "1051950",
    "end": "1057110"
  },
  {
    "text": "- completion is like so like I've -",
    "start": "1057620",
    "end": "1068400"
  },
  {
    "text": "various constants it's on the right one so we're gonna start with that cluster we'll make sure that we have no pods",
    "start": "1068400",
    "end": "1073680"
  },
  {
    "text": "cool there's none and now let me just show you the first container or pod that",
    "start": "1073680",
    "end": "1079890"
  },
  {
    "text": "we're going to spin up so this is just a",
    "start": "1079890",
    "end": "1087420"
  },
  {
    "text": "very simple nginx pod and we're just doing five replicas because why not if",
    "start": "1087420",
    "end": "1092610"
  },
  {
    "text": "we have a cluster let's use it and then we're just mounting in some nginx configs it's very simple but as you can",
    "start": "1092610",
    "end": "1099120"
  },
  {
    "text": "see here like I did not use any of those annotations I just showed you this one's just gonna show it by itself",
    "start": "1099120",
    "end": "1106560"
  },
  {
    "text": "running and that we can obviously get something to run without any security",
    "start": "1106560",
    "end": "1113870"
  },
  {
    "text": "Oh it's still creating it's all just wafers",
    "start": "1123760",
    "end": "1129799"
  },
  {
    "text": "again I was trying out this new bash script",
    "start": "1129799",
    "end": "1136080"
  },
  {
    "text": "thing that's in the kubernetes repo if you all are unaware but yeah I knew that there was gonna be problems so let's",
    "start": "1136080",
    "end": "1142320"
  },
  {
    "text": "make sure they got created cool and then",
    "start": "1142320",
    "end": "1148260"
  },
  {
    "text": "we'll curl again I just have these hooked up to a very like basic ingress",
    "start": "1148260",
    "end": "1154919"
  },
  {
    "text": "but I didn't want to waste time with waiting for that to come up so all I did was create the pods so it this like very",
    "start": "1154919",
    "end": "1165360"
  },
  {
    "text": "simple engine X application just spits out the body of the request and stuff so cool that works like obviously it should",
    "start": "1165360",
    "end": "1170549"
  },
  {
    "text": "because we didn't do anything to it so now let's like have a little bit more fun I have another pot here same thing 5",
    "start": "1170549",
    "end": "1183179"
  },
  {
    "text": "replicas and it's that just this very basic engine X thing and what we're just",
    "start": "1183179",
    "end": "1188610"
  },
  {
    "text": "going to do change about this one versus the last one is we're going to run with the doctor default second profile so I'm",
    "start": "1188610",
    "end": "1195720"
  },
  {
    "text": "just going to prove that this will not break your application",
    "start": "1195720",
    "end": "1200210"
  },
  {
    "text": "this time I'm just gonna like wait a little bit so that the bass sharp will work hopefully they're up and running",
    "start": "1213120",
    "end": "1222830"
  },
  {
    "text": "cool and now we'll curl the other service yay",
    "start": "1222830",
    "end": "1230309"
  },
  {
    "text": "okay cool sorry I was really excited about the bass grip I don't know it's very like",
    "start": "1230309",
    "end": "1235680"
  },
  {
    "text": "interesting to type while talking you know so that's neat so obviously like it did",
    "start": "1235680",
    "end": "1241980"
  },
  {
    "text": "not break our application you can just like use the default if you're not doing anything that you should not be doing like mounting bolts like not running",
    "start": "1241980",
    "end": "1248790"
  },
  {
    "text": "mounts like doing anything where you would already be running your container is privileged you might as well just run",
    "start": "1248790",
    "end": "1255270"
  },
  {
    "text": "with the defaults which is great so that was like just kind of meta but like if",
    "start": "1255270",
    "end": "1261780"
  },
  {
    "text": "we get a real world example now I will switch to the other cluster which is a",
    "start": "1261780",
    "end": "1266790"
  },
  {
    "text": "bit more fun so this cluster that we're",
    "start": "1266790",
    "end": "1273809"
  },
  {
    "text": "going to switch to is a bit interesting because it has three nodes but of the",
    "start": "1273809",
    "end": "1279870"
  },
  {
    "text": "nodes that are on it so sorry I'm just getting the context then we're gonna",
    "start": "1279870",
    "end": "1285870"
  },
  {
    "text": "switch to it we're on the other cluster we'll make sure there's none and then one of these nodes actually has the",
    "start": "1285870",
    "end": "1292710"
  },
  {
    "text": "dirty cow vulnerability so I labeled them as you can see in cube - has it so",
    "start": "1292710",
    "end": "1297990"
  },
  {
    "text": "it's true so that one is running with a bad kernel so if we like kind of reverse",
    "start": "1297990",
    "end": "1303720"
  },
  {
    "text": "time to when this vulnerability was publicly disclosed I'm like assistant",
    "start": "1303720",
    "end": "1310350"
  },
  {
    "text": "min you know I need to upgrade my cluster but to do that I want to you",
    "start": "1310350",
    "end": "1316440"
  },
  {
    "text": "know maybe not take down the cluster right away I want to be able to upgrade all the nodes like without people",
    "start": "1316440",
    "end": "1323100"
  },
  {
    "text": "breaking out so what I could do possibly is run with a second profile that would",
    "start": "1323100",
    "end": "1331110"
  },
  {
    "text": "block the bad things of dirty cow which if you're familiar with dirty cow it was",
    "start": "1331110",
    "end": "1336660"
  },
  {
    "text": "a race condition between em advised and P right and it was specifically em",
    "start": "1336660",
    "end": "1341820"
  },
  {
    "text": "advised and advised don't need so you can be super granular with these SATCOM profiles so if we look at this",
    "start": "1341820",
    "end": "1349650"
  },
  {
    "text": "like custom profile that I wrote okay if",
    "start": "1349650",
    "end": "1362220"
  },
  {
    "text": "we take a look at this which by default the docker default profile allows em",
    "start": "1362220",
    "end": "1368040"
  },
  {
    "text": "advice because obviously you need that but you can be more granular with your",
    "start": "1368040",
    "end": "1373770"
  },
  {
    "text": "own so this is a fork of the default where I took em advise I was like will allow all parts of em advise accept and",
    "start": "1373770",
    "end": "1379650"
  },
  {
    "text": "advise don't need which is the second argument of it and this like SCMP it's",
    "start": "1379650",
    "end": "1387300"
  },
  {
    "text": "like it's not equal that's kind of like the operator there so i deployed this",
    "start": "1387300",
    "end": "1393530"
  },
  {
    "text": "profiles re on the node so what we can do is me being this system in I'll be",
    "start": "1393530",
    "end": "1400200"
  },
  {
    "text": "like I am going to start deploying our",
    "start": "1400200",
    "end": "1406280"
  },
  {
    "text": "pods with this you know custom profile which is localhost of advice so and",
    "start": "1406280",
    "end": "1412860"
  },
  {
    "text": "we're also just going to do one room okay because whatever and then I'm using",
    "start": "1412860",
    "end": "1418320"
  },
  {
    "text": "like node selector to make sure it's on the node that I labeled previously as dirty cow like in the real world they",
    "start": "1418320",
    "end": "1424140"
  },
  {
    "text": "probably didn't label them because they know that they're all bad but just to make sure for the purposes of this demo",
    "start": "1424140",
    "end": "1429990"
  },
  {
    "text": "I did this it wouldn't be fun if it didn't run on that node so let's do that",
    "start": "1429990",
    "end": "1437700"
  },
  {
    "text": "I forgot what number we're on okay cool",
    "start": "1437700",
    "end": "1445669"
  },
  {
    "text": "so we're creating that pond and it's just called pop it's like this very simple sea binary that I wrote that will",
    "start": "1448009",
    "end": "1455759"
  },
  {
    "text": "try to obviously use the dirty cow exploit and get out so now we're going",
    "start": "1455759",
    "end": "1461549"
  },
  {
    "text": "to list our pods so cool let's grab this one and get the logs",
    "start": "1461549",
    "end": "1468620"
  },
  {
    "text": "cool so it tried to create the race condition that's kind of like the starting it's like starts the race",
    "start": "1476130",
    "end": "1482130"
  },
  {
    "text": "condition and it could not pone the machine and our sad hacker is sad so we gave our sysadmin enough time to upgrade",
    "start": "1482130",
    "end": "1487770"
  },
  {
    "text": "the notes which is super cool they could you know do their thing make sure that",
    "start": "1487770",
    "end": "1493440"
  },
  {
    "text": "yet you hadn't been exploited at all previously to it being known publicly",
    "start": "1493440",
    "end": "1499290"
  },
  {
    "text": "and they had time to breathe so that's super nice but of course this wouldn't",
    "start": "1499290",
    "end": "1505620"
  },
  {
    "text": "be a fun demo if we didn't actually pone the machine in the end so why don't we do that what we're now going to spin up",
    "start": "1505620",
    "end": "1513390"
  },
  {
    "text": "is another one of these huh that was funny sorry I have like the maturity of",
    "start": "1513390",
    "end": "1522180"
  },
  {
    "text": "a five-year-old so we'll make sure this one goes on a on a dirty cow machine",
    "start": "1522180",
    "end": "1530130"
  },
  {
    "text": "we're not going to run it with any sort of second profile or anything it's just going to go there and it's going to do",
    "start": "1530130",
    "end": "1536250"
  },
  {
    "text": "its thing and pone the node",
    "start": "1536250",
    "end": "1540380"
  },
  {
    "text": "just kidding I'd messed that up because I did not believe the old and I named them the same thing",
    "start": "1549990",
    "end": "1556370"
  },
  {
    "text": "cool now we're a little grab our pods again",
    "start": "1577180",
    "end": "1582240"
  },
  {
    "text": "so it does the race condition and literally at eight thousand two hundred eleven be right and 5730 M advice calls",
    "start": "1594400",
    "end": "1603040"
  },
  {
    "text": "it can escalate its privileges and its pwned and game over so that note is now not ours to play",
    "start": "1603040",
    "end": "1609760"
  },
  {
    "text": "with which is really sad so just also for the fun of doing this",
    "start": "1609760",
    "end": "1615220"
  },
  {
    "text": "on a node that does not have dirty cow I'll just prove that without any sort of",
    "start": "1615220",
    "end": "1620559"
  },
  {
    "text": "second profile or special things that it cannot potent a node either just for sanity sake but first let's delete the",
    "start": "1620559",
    "end": "1627070"
  },
  {
    "text": "old",
    "start": "1627070",
    "end": "1629190"
  },
  {
    "text": "so if we look at this last one",
    "start": "1640700",
    "end": "1645100"
  },
  {
    "text": "we're going to run it on a note that does not have dirty cow we're just going to do the same exact thing as we did",
    "start": "1649440",
    "end": "1654690"
  },
  {
    "text": "before but this time it will obviously not pony because that Colonel is good",
    "start": "1654690",
    "end": "1663080"
  },
  {
    "text": "cool source at hacker is said so that was kind of a cool realistic use case",
    "start": "1689600",
    "end": "1696110"
  },
  {
    "text": "for second profiles I did try to add to",
    "start": "1696110",
    "end": "1701660"
  },
  {
    "text": "the default second profile of docker that specific line where it's like you block em advise and M advice on these",
    "start": "1701660",
    "end": "1708320"
  },
  {
    "text": "but the funny thing is G load C uses M",
    "start": "1708320",
    "end": "1714200"
  },
  {
    "text": "advice don't need for malloc so that would literally break everyone so in",
    "start": "1714200",
    "end": "1720679"
  },
  {
    "text": "this scenario we did not use G livesey for anything so if we just go back to",
    "start": "1720679",
    "end": "1726770"
  },
  {
    "text": "the presentation now we can move on so",
    "start": "1726770",
    "end": "1732520"
  },
  {
    "text": "now I'll pass it back to Alex to go over the security roadmap for the major Thank",
    "start": "1734409",
    "end": "1742190"
  },
  {
    "text": "You Jess there we go so in the last few minutes I want to leave us time for questions but we'll",
    "start": "1742190",
    "end": "1747679"
  },
  {
    "text": "end up probably going outside if we need to answer a bunch after that quickly like what's the security roadmap for",
    "start": "1747679",
    "end": "1753799"
  },
  {
    "text": "kubernetes and this is my take on it there have been a bunch of people involved as well in the community no",
    "start": "1753799",
    "end": "1758900"
  },
  {
    "text": "promises community consensus is sometimes hard to predict but with one",
    "start": "1758900",
    "end": "1764630"
  },
  {
    "text": "six what we kind of have is this single tenant multi identities with one seven we're moving more towards cooperative soft multi-tenancy I'll cover in more",
    "start": "1764630",
    "end": "1771169"
  },
  {
    "text": "detail what we have landing there our longer-term goal is towards hard multi-tenancy and this is where your",
    "start": "1771169",
    "end": "1776690"
  },
  {
    "text": "multi tenant security boundaries are going to be strongly enforced so we have two a security part of it and then",
    "start": "1776690",
    "end": "1782720"
  },
  {
    "text": "there's also better resource isolation which may or may not really have to do much with security but is one of those",
    "start": "1782720",
    "end": "1787850"
  },
  {
    "text": "things that we need for hard multi-tenancy what does it really mean if I'm comfortable running in the same",
    "start": "1787850",
    "end": "1793340"
  },
  {
    "text": "cluster two different third-party codes and presumably of some level of potential maliciousness it's gonna take",
    "start": "1793340",
    "end": "1800750"
  },
  {
    "text": "a while for us to get there we have to word do it across the components of runtime security of course we also need to have our API and namespace security",
    "start": "1800750",
    "end": "1807350"
  },
  {
    "text": "we need network security and then some form of organization policy on as well so with one six came out just a little",
    "start": "1807350",
    "end": "1814700"
  },
  {
    "text": "while ago as I said like if you say what's the big highlight it's that you",
    "start": "1814700",
    "end": "1819770"
  },
  {
    "text": "can say that my pods don't mostly have root on the by default there may still be some",
    "start": "1819770",
    "end": "1825529"
  },
  {
    "text": "escalation paths available and we'll try and fix those for 1/7 the big highlight is our back and it's been a broad effort",
    "start": "1825529",
    "end": "1832639"
  },
  {
    "text": "across lots of people Red Hat core OS google lots of other companies and so some of the highlights",
    "start": "1832639",
    "end": "1839120"
  },
  {
    "text": "are that we started to add identities to the infrastructure components of the system the nodes controllers and we've",
    "start": "1839120",
    "end": "1844279"
  },
  {
    "text": "limited permissions for many of them unfortunately we haven't quite finished limiting all of those permissions but",
    "start": "1844279",
    "end": "1849740"
  },
  {
    "text": "that's what we'll get to with with one seven so it's 1 7 I think we'll have something that looks pretty close to",
    "start": "1849740",
    "end": "1854809"
  },
  {
    "text": "soft multi-tenancy if you did have a container escape it would be limited to the privileges on that one node and you",
    "start": "1854809",
    "end": "1860059"
  },
  {
    "text": "wouldn't have broad access to many things in the cluster so we're gonna finish limiting some of those infrastructure permissions we're going",
    "start": "1860059",
    "end": "1865970"
  },
  {
    "text": "to enforce granular node identities and permissions and improve secrets management so if you have node a and",
    "start": "1865970",
    "end": "1872389"
  },
  {
    "text": "there's pods running on it with certain secrets those are the only secrets that cubelet will be able to read and so that",
    "start": "1872389",
    "end": "1878330"
  },
  {
    "text": "will get us that kind of isolation mechanism there we saw some things about comprehensive audit logs that we'll be",
    "start": "1878330",
    "end": "1884210"
  },
  {
    "text": "working on some people are also interested in audit logs coming from the nodes like if you are using binary",
    "start": "1884210",
    "end": "1889340"
  },
  {
    "text": "verification and the nodes start a pod they should log things that happen there or if you have exact or other things",
    "start": "1889340",
    "end": "1895220"
  },
  {
    "text": "running on nodes making sure we have SSH access to the nodes logged as well those",
    "start": "1895220",
    "end": "1900649"
  },
  {
    "text": "are some of the kinds of things that you might see certificate rotation has been an interesting one right now some of",
    "start": "1900649",
    "end": "1906830"
  },
  {
    "text": "those certs are all static of course you know getting dynamic rotation will be interesting and useful and then maybe we",
    "start": "1906830",
    "end": "1912860"
  },
  {
    "text": "can improve some of the runtime components too and then after that with kubernetes 1-8 sometime in September or",
    "start": "1912860",
    "end": "1919399"
  },
  {
    "text": "so will start moving more towards harder multi-tenancy maybe we'll have more of the VM based",
    "start": "1919399",
    "end": "1925129"
  },
  {
    "text": "runtimes via the container runtime interface of course Intel with clear containers we also have the hyper",
    "start": "1925129",
    "end": "1930139"
  },
  {
    "text": "approach as well there's been some interest in binary verification we have some basic web book support for that",
    "start": "1930139",
    "end": "1936169"
  },
  {
    "text": "getting that more in place adding the better resource isolation between containers making sure that you",
    "start": "1936169",
    "end": "1941990"
  },
  {
    "text": "can't do too much cycle stealing between them and then once we have a lot of these security mechanisms in place then",
    "start": "1941990",
    "end": "1948259"
  },
  {
    "text": "the question becomes if I'm an org or I'm the security team how do I enforce that everyone used them and that can be",
    "start": "1948259",
    "end": "1954139"
  },
  {
    "text": "either requiring that they all be set and rejecting them or automatically adding them those are the",
    "start": "1954139",
    "end": "1959510"
  },
  {
    "text": "directions we'd like to go in so you know recap we talked about a bunch of stuff questions so the the question is",
    "start": "1959510",
    "end": "1995660"
  },
  {
    "text": "about revocation lists and I don't think we support any revocation but there is the list of things that so as long as",
    "start": "1995660",
    "end": "2001179"
  },
  {
    "text": "the CAA is signed your that's where you are this is one of the reasons what we're moving to is the place where the",
    "start": "2001179",
    "end": "2006850"
  },
  {
    "text": "node has the cert only allows the node to make a certificate signing request and then by making that request then it",
    "start": "2006850",
    "end": "2013900"
  },
  {
    "text": "will get its own identity and so once it has its own identity you wouldn't need to necessarily revoke it it would be",
    "start": "2013900",
    "end": "2019270"
  },
  {
    "text": "explicitly listed as node five is in the list and in order to revoke it you just",
    "start": "2019270",
    "end": "2024309"
  },
  {
    "text": "delete it from the list so it wouldn't be a crl per se but it would be per",
    "start": "2024309",
    "end": "2029350"
  },
  {
    "text": "thing identities sorry right now you can either revoke them all by doing a CA",
    "start": "2029350",
    "end": "2035170"
  },
  {
    "text": "rotation which is no support or you know getting that fine-grained control and allowing you to do each one is",
    "start": "2035170",
    "end": "2040330"
  },
  {
    "text": "definitely part of what we're planning for one seven mechanism details there I'm gonna go to the back and then up",
    "start": "2040330",
    "end": "2046030"
  },
  {
    "text": "here please",
    "start": "2046030",
    "end": "2048960"
  },
  {
    "text": "maintaining the",
    "start": "2053369",
    "end": "2056578"
  },
  {
    "text": "so the question is who maintains the the cluster CA and yes each each deployment",
    "start": "2059139",
    "end": "2064850"
  },
  {
    "text": "is responsible for doing that themselves of course pay off or container engine we have mechanisms we've built to maintain",
    "start": "2064850",
    "end": "2070370"
  },
  {
    "text": "that and keep try and keep that relatively secure for you part of running it as a service I'm sure other",
    "start": "2070370",
    "end": "2076550"
  },
  {
    "text": "service providers are also going to have similar things like that I don't know the details of what they're doing today",
    "start": "2076550",
    "end": "2082929"
  },
  {
    "text": "yep that's the end of our official thing",
    "start": "2087580",
    "end": "2094220"
  },
  {
    "text": "I think we can maybe squeeze a couple minutes into the intermission I think Andrew somewhere I want to come up and get set up for the next talk we'll do a",
    "start": "2094220",
    "end": "2100550"
  },
  {
    "text": "couple more questions and then break to outside please",
    "start": "2100550",
    "end": "2105700"
  },
  {
    "text": "sure so the question was how can I enforce these things do we have any award policy support now and the answer",
    "start": "2115620",
    "end": "2120940"
  },
  {
    "text": "is no could you write custom admission controllers to do that seems totally plausible I don't recall any examples of",
    "start": "2120940",
    "end": "2128770"
  },
  {
    "text": "anyone doing that but there's that new thing that's like because admission",
    "start": "2128770",
    "end": "2133870"
  },
  {
    "text": "controllers actually need to be like compiled in but there's initializers coming where it's gonna use an API and",
    "start": "2133870",
    "end": "2139900"
  },
  {
    "text": "you can build your own and that would actually be perfect and you might be able to use a web hook as well if you don't need to compile it in as well",
    "start": "2139900",
    "end": "2148770"
  },
  {
    "text": "please speak up yeah",
    "start": "2148770",
    "end": "2166830"
  },
  {
    "text": "[Music] yes Oh tres is something that's not",
    "start": "2168820",
    "end": "2174060"
  },
  {
    "text": "written into the go sack home library that's like the underlying thing of all",
    "start": "2174060",
    "end": "2179190"
  },
  {
    "text": "of this mostly because like if you're going to do something like trace you wanted to find your own functions and they get",
    "start": "2179190",
    "end": "2184950"
  },
  {
    "text": "super complicated that's like how are you defining those so I think that there's like some design discussions",
    "start": "2184950",
    "end": "2191160"
  },
  {
    "text": "around that but it's really just like getting to consensus and then getting it done cool one one more here and then",
    "start": "2191160",
    "end": "2201210"
  },
  {
    "text": "we'll break outside and we have happy to answer more outside anyone else sorry",
    "start": "2201210",
    "end": "2215100"
  },
  {
    "text": "too the secrets so they go right now to files and environment variables maybe",
    "start": "2215100",
    "end": "2221430"
  },
  {
    "text": "someone's written another driver that I don't remember offhand but I think those are the two main ones yes you could if",
    "start": "2221430",
    "end": "2230730"
  },
  {
    "text": "you're willing to compile it all yourself you could certainly write another driver that would expose them some other mechanism if the files aren't",
    "start": "2230730",
    "end": "2238260"
  },
  {
    "text": "what you need you know feel free to open an issue and say here's my use case and this is why environment variables and",
    "start": "2238260",
    "end": "2243690"
  },
  {
    "text": "files don't meet them I'm gonna call it a day so with that thank you everyone for those of you left let's go outside",
    "start": "2243690",
    "end": "2249580"
  },
  {
    "text": "[Applause]",
    "start": "2249580",
    "end": "2254290"
  }
]