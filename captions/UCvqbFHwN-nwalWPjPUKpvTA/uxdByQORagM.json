[
  {
    "text": "so why while we are sorting out technical difficulties with our display let me just get started and introduce",
    "start": "80",
    "end": "6000"
  },
  {
    "text": "you to the purpose of this talk so my name is Patrick oie I am with Intel this",
    "start": "6000",
    "end": "12320"
  },
  {
    "text": "is Kevin Glu he is from Nvidia we are here to give you all an update on what dynamic resource allocation is the goal",
    "start": "12320",
    "end": "20160"
  },
  {
    "text": "ideally is that when you get away from this talk you know why it's important hopefully and why we are discussing how",
    "start": "20160",
    "end": "27519"
  },
  {
    "text": "to do certain things and what the alternatives are going forward because there are a lot of intense discussions",
    "start": "27519",
    "end": "34239"
  },
  {
    "text": "about how to do things right for the projects in the long term and not everything is yet perfectly clear so we",
    "start": "34239",
    "end": "40800"
  },
  {
    "text": "need to have more discussions and we hope to enable everyone here in this talk to participate in all discussions",
    "start": "40800",
    "end": "47360"
  },
  {
    "text": "when they come up with vendors with Hardware with users who want to do something with AI in",
    "start": "47360",
    "end": "55440"
  },
  {
    "text": "cuberes so no I'll just get started with slides that's fit fine for a while uh",
    "start": "55760",
    "end": "63120"
  },
  {
    "text": "Dynamic resourc location is a kubernetes enhancement so it started about two or",
    "start": "63120",
    "end": "68320"
  },
  {
    "text": "three years ago even when we discussed how to do a new API that addresses all",
    "start": "68320",
    "end": "74119"
  },
  {
    "text": "of the shortcomings that we were seeing at the time with the traditional device plug-in",
    "start": "74119",
    "end": "80360"
  },
  {
    "text": "interface so the the device plug-in interface is what's being used for accelerators today but it's very limited",
    "start": "80360",
    "end": "86960"
  },
  {
    "text": "only a single container can access accelerator there's no way of sharing it",
    "start": "86960",
    "end": "92040"
  },
  {
    "text": "intelligently in the workload",
    "start": "92040",
    "end": "96439"
  },
  {
    "text": "um additional parameters are problematic they just don't fit into the existing",
    "start": "97119",
    "end": "103600"
  },
  {
    "text": "API so what we started designing is a new API that explicitly models a",
    "start": "103600",
    "end": "110479"
  },
  {
    "text": "resource as something that you can ask for in the cluster and you reference the",
    "start": "110479",
    "end": "115640"
  },
  {
    "text": "resource claims from different ports to describe your workload require",
    "start": "115640",
    "end": "121200"
  },
  {
    "text": "requirements the initial plan was less",
    "start": "121200",
    "end": "126320"
  },
  {
    "text": "ambitious than what we are doing today the original plan was to enable Hardware",
    "start": "126320",
    "end": "132440"
  },
  {
    "text": "vendors to uh write drivers that then influence scheduling and do all the",
    "start": "132440",
    "end": "139680"
  },
  {
    "text": "things that is necessary for their Hardware in their own",
    "start": "139680",
    "end": "145040"
  },
  {
    "text": "driver and what we're still sorting out the",
    "start": "145720",
    "end": "151440"
  },
  {
    "text": "issues should we try my laptop maybe have all the demo stuff up yeah that's",
    "start": "151440",
    "end": "157280"
  },
  {
    "text": "that's but wouldd so the",
    "start": "157280",
    "end": "163159"
  },
  {
    "text": "original yeah but now now there but it's the time where where some slides would be",
    "start": "163159",
    "end": "169640"
  },
  {
    "text": "nice so we we have two caps pending currently one is the original cap with",
    "start": "171239",
    "end": "178319"
  },
  {
    "text": "what we now call opaque parameters and we do have some material on how that",
    "start": "178319",
    "end": "184319"
  },
  {
    "text": "works how it influences scheduling we also have a newer thing that we call",
    "start": "184319",
    "end": "190920"
  },
  {
    "text": "structured parameters which is just the new thing that we started in 130 and that's doing the the scheduling",
    "start": "190920",
    "end": "198640"
  },
  {
    "text": "differently and the difference is also what we will have um on the screen at",
    "start": "198640",
    "end": "204200"
  },
  {
    "text": "some point um and we are now in disc",
    "start": "204200",
    "end": "210319"
  },
  {
    "text": "questions uh with John and other folks about what exactly are we expecting the",
    "start": "210319",
    "end": "215720"
  },
  {
    "text": "structured parameters to handle because it long term it's probably the future for this whole feature we just need to",
    "start": "215720",
    "end": "221959"
  },
  {
    "text": "figure out what we need at which point and",
    "start": "221959",
    "end": "227760"
  },
  {
    "text": "that's where we need feedback also from from end users we talk at the desk now now I'll just use this one here and I'll",
    "start": "227760",
    "end": "234480"
  },
  {
    "text": "have I'll have a peek at the slides and while I'm talking so we'll now really get started and I think I tried already",
    "start": "234480",
    "end": "240959"
  },
  {
    "text": "doing an introduction so we can skip over that let's talk about the opaque",
    "start": "240959",
    "end": "246480"
  },
  {
    "text": "parameters approach so this is a few slides forward so I talked about vendor Behavior we now are at the point where",
    "start": "246480",
    "end": "254120"
  },
  {
    "text": "we need to reach out to more people to write Dr drivers because kubernetes",
    "start": "254120",
    "end": "259160"
  },
  {
    "text": "itself a Dr in kubernetes doesn't manage any hardware it's all delegated to drivers to some extent and without a",
    "start": "259160",
    "end": "265919"
  },
  {
    "text": "driver it doesn't do anything the user model that we had",
    "start": "265919",
    "end": "271160"
  },
  {
    "text": "envisioned is that the vendor also defines the parameters that go with",
    "start": "271160",
    "end": "277000"
  },
  {
    "text": "their Hardware that's if we go to the next Slide the the user then creates",
    "start": "277000",
    "end": "282600"
  },
  {
    "text": "parameters for their resource claim as a standalone object using a vendor crd and",
    "start": "282600",
    "end": "288520"
  },
  {
    "text": "that crd describes what the user wants basically influencing the scheduling and",
    "start": "288520",
    "end": "295639"
  },
  {
    "text": "it also has configuration or setup parameters that need to be passed down",
    "start": "295639",
    "end": "301639"
  },
  {
    "text": "to the actual uh driver on a node to set up the hardware all of those goes into",
    "start": "301639",
    "end": "307800"
  },
  {
    "text": "these claim parameters and the with the opaque",
    "start": "307800",
    "end": "313600"
  },
  {
    "text": "parameters on the next Slide the handling of those parameters is done entirely by the control plane component",
    "start": "313600",
    "end": "321600"
  },
  {
    "text": "of a Dr driver the driver also gathers",
    "start": "321600",
    "end": "327080"
  },
  {
    "text": "information about its resources from the nodes using some mechanism that it feels",
    "start": "327080",
    "end": "332560"
  },
  {
    "text": "finds useful usually it's done with crds again so the the vendor driver then knows about the resource where it's",
    "start": "332560",
    "end": "339759"
  },
  {
    "text": "available where it could be allocated but at the same time we have the scheduler knowing some other parts about",
    "start": "339759",
    "end": "346000"
  },
  {
    "text": "a pot like where is memory where is Ram where where are CPUs available so we",
    "start": "346000",
    "end": "351639"
  },
  {
    "text": "kind of need to coordinate that uh this is mostly for what we call delayed",
    "start": "351639",
    "end": "357560"
  },
  {
    "text": "allocation where we really wait for aort to to start being scheduled and then we",
    "start": "357560",
    "end": "364000"
  },
  {
    "text": "look at the situation in the cluster figure out where a suitable node is as far as the Schuler knows and as far as",
    "start": "364000",
    "end": "371000"
  },
  {
    "text": "the Dr driver knows the communication is through this pot scheduling context that",
    "start": "371000",
    "end": "376840"
  },
  {
    "text": "you see in the middle this was one of our ideas at the beginning how we wanted",
    "start": "376840",
    "end": "381880"
  },
  {
    "text": "to well only enable Dr drivers to do their thing and not have to modify",
    "start": "381880",
    "end": "388479"
  },
  {
    "text": "kubernetes too much that was the original motivation beh behind this whole",
    "start": "388479",
    "end": "394120"
  },
  {
    "text": "design um the problem I'm not sure what we have yeah the problem with this",
    "start": "394120",
    "end": "399800"
  },
  {
    "text": "approach is that we then later on figured out that well we really can't do",
    "start": "399800",
    "end": "405560"
  },
  {
    "text": "cluster Autos scaling for example uh but before we get to that perhaps um let's",
    "start": "405560",
    "end": "411199"
  },
  {
    "text": "try to do the demo because we do we can show off all of this working in reality",
    "start": "411199",
    "end": "417639"
  },
  {
    "text": "with an example driver that you can try out on your own local Linux laptop so I",
    "start": "417639",
    "end": "422680"
  },
  {
    "text": "can't see on my laop so Kevin Kevin and Alex who's also",
    "start": "422680",
    "end": "429840"
  },
  {
    "text": "here in the audience somewhere they have worked on this example driver we've been talking about this at a few coupons",
    "start": "429840",
    "end": "436160"
  },
  {
    "text": "already and as I said it only needs uh a kind cluster that runs on Mac in this",
    "start": "436160",
    "end": "442960"
  },
  {
    "text": "case or on a Linux machine and we'll we'll show how this",
    "start": "442960",
    "end": "448360"
  },
  {
    "text": "works in practice what it looks like for the user uh and it's very similar to to",
    "start": "448360",
    "end": "454479"
  },
  {
    "text": "real gpus that's what it's",
    "start": "454479",
    "end": "458199"
  },
  {
    "text": "simulating so if you go to this uh this URL it's under kubernetes sigs uh we",
    "start": "460479",
    "end": "466280"
  },
  {
    "text": "have an example driver um for Dr that you can play around with it runs on both Mac and Linux um and what I was planning",
    "start": "466280",
    "end": "473840"
  },
  {
    "text": "on doing right now is just kind of walking through this so you can get a feel for what it looks like to play",
    "start": "473840",
    "end": "479879"
  },
  {
    "text": "around with one of these drivers um um if you start from the top go down",
    "start": "479879",
    "end": "486199"
  },
  {
    "text": "um first thing you want to do obviously is you want to clone this repo and then you can CD into the Dr example driver",
    "start": "486199",
    "end": "491680"
  },
  {
    "text": "demo folder once you're there you can run a script to to actually build the driver um and then eventually create the",
    "start": "491680",
    "end": "498479"
  },
  {
    "text": "cluster so the cluster that we create is is run in kind um and this will bring up a kind cluster with all of the necessary",
    "start": "498479",
    "end": "506039"
  },
  {
    "text": "pieces in place to be able to eventually deploy this D driver and then use it to allocate resources so I've already gone",
    "start": "506039",
    "end": "512560"
  },
  {
    "text": "ahead and done these two steps because they they take a few minutes um but this basically just builds the driver inside",
    "start": "512560",
    "end": "518159"
  },
  {
    "text": "a Docker container and then brings up a kindli cluster with all the configuration we need and you can see over here where I've where I've already",
    "start": "518159",
    "end": "524560"
  },
  {
    "text": "done all that um then the next thing I would want to do is just quickly show you if you do Cube control get-a you can",
    "start": "524560",
    "end": "532399"
  },
  {
    "text": "see that there's currently um nothing running there other than the standard set of services that you'd imagine",
    "start": "532399",
    "end": "538200"
  },
  {
    "text": "having run right after after you brought up a kind cluster um and then the next thing you can do is uh grab this Helm",
    "start": "538200",
    "end": "544959"
  },
  {
    "text": "command uh and deploy the driver itself so this is the first thing that that I'm actually going to do uh live",
    "start": "544959",
    "end": "552720"
  },
  {
    "text": "here so you can see that that deployed",
    "start": "568360",
    "end": "574160"
  },
  {
    "text": "successfully um and then if I come and grab this command then we should be able to see the two different components of the Dr driver uh actually running so",
    "start": "574160",
    "end": "581920"
  },
  {
    "text": "this is set up in a single node cluster configuration so I've got you know the control plane and the worker node",
    "start": "581920",
    "end": "588680"
  },
  {
    "text": "running or the the the the worker both on the exact same node um so if I go",
    "start": "588680",
    "end": "594680"
  },
  {
    "text": "ahead and paste this in uh we should see um both of these running so we've got the Dr driver controller which runs on",
    "start": "594680",
    "end": "601240"
  },
  {
    "text": "the control plane and then a single kuet plugin that's running um on the worker",
    "start": "601240",
    "end": "606800"
  },
  {
    "text": "node itself and if you had a multi node setup you'd expect to have multiple kuet plugins it's running as a demon set one",
    "start": "606800",
    "end": "613200"
  },
  {
    "text": "per one per worker node um then we didn't go into the details of how uh",
    "start": "613200",
    "end": "618320"
  },
  {
    "text": "these two components communicate with each other but at least in the opaque parameters model um the communication",
    "start": "618320",
    "end": "624600"
  },
  {
    "text": "that goes on between them in order to advertise resources and then eventually allow the controller piece to allocate the those resources is completely custom",
    "start": "624600",
    "end": "631519"
  },
  {
    "text": "to the driver that that you've implemented and so in this example driver uh the the name for what we've",
    "start": "631519",
    "end": "636920"
  },
  {
    "text": "built is called the node allocation state or Nas for short the nas um and so",
    "start": "636920",
    "end": "643800"
  },
  {
    "text": "if I go ahead and um paste this in I'm basically going to print out what the",
    "start": "643800",
    "end": "649480"
  },
  {
    "text": "current um node allocation state of that node is and the the things to note here",
    "start": "649480",
    "end": "654720"
  },
  {
    "text": "are that there is a section for allocatable devices um our example driver just operates on a set of quote",
    "start": "654720",
    "end": "662160"
  },
  {
    "text": "unquote generic gpus where the only attributes that are associated with them are the product name and The UU ID um",
    "start": "662160",
    "end": "669360"
  },
  {
    "text": "and so as the kuet plugin comes up it's going to advertise uh this as a custom",
    "start": "669360",
    "end": "675160"
  },
  {
    "text": "crd um that we call the node allocation State and the controller will eventually pick this up so that it can make its",
    "start": "675160",
    "end": "681240"
  },
  {
    "text": "allocation decisions uh later on um next thing I want to do is I want",
    "start": "681240",
    "end": "687760"
  },
  {
    "text": "to then just deploy some actual workloads um against this um so if I",
    "start": "687760",
    "end": "693600"
  },
  {
    "text": "just paste these in here um we see those being applied and before we actually go",
    "start": "693600",
    "end": "698839"
  },
  {
    "text": "and look at the output of those I want to just jump over to um the actual yaml for these themselves um where um there's",
    "start": "698839",
    "end": "707079"
  },
  {
    "text": "a couple different um tests that I ran you can see that you know GPU test 1 2 3",
    "start": "707079",
    "end": "712720"
  },
  {
    "text": "and four and each of those match the pictures that that you have down here so uh it looks like I currently have GPU",
    "start": "712720",
    "end": "718680"
  },
  {
    "text": "test 4 open um and that's the one that's in this configuration where I have a single pod with a single container with a",
    "start": "718680",
    "end": "726279"
  },
  {
    "text": "single resource claim um and that claim is asking for access to four uh separate",
    "start": "726279",
    "end": "732320"
  },
  {
    "text": "gpus um and normally I would build this up from from left to right but um let's just start with the most complicated one",
    "start": "732320",
    "end": "739040"
  },
  {
    "text": "because that's what I have up on the screen right now um where the basic idea is that the end user would you know",
    "start": "739040",
    "end": "744360"
  },
  {
    "text": "produce this this this uh yo file that you see here where there's a vendor specific claim parameters object uh",
    "start": "744360",
    "end": "750760"
  },
  {
    "text": "which we've called GPU claim parameters this is defined by the driver itself it's a crd that gets installed so that users can create them and use them to",
    "start": "750760",
    "end": "758120"
  },
  {
    "text": "both select and configure the resources that uh they eventually want allocated to them so in this case the end user",
    "start": "758120",
    "end": "764760"
  },
  {
    "text": "would have created a GPU claim parameters object set a count to four saying that I want four gpus to be",
    "start": "764760",
    "end": "770120"
  },
  {
    "text": "allocated to me um this is a uh you know custom crd",
    "start": "770120",
    "end": "776240"
  },
  {
    "text": "and then the in tree crd that we have uh called resource claim template is where you link these two things together so if",
    "start": "776240",
    "end": "782680"
  },
  {
    "text": "I instantiate a resource claim template called multiple gpus um I tell it what",
    "start": "782680",
    "end": "788079"
  },
  {
    "text": "resource class that's associated with um this is also something that gets installed as part of the driver um which",
    "start": "788079",
    "end": "793519"
  },
  {
    "text": "you can actually see back in this other tab over here so as part of my Helm install I would have installed this resource class uh which gives the",
    "start": "793519",
    "end": "800399"
  },
  {
    "text": "resource class the name GPU example.com it links it to the name of my driver",
    "start": "800399",
    "end": "805480"
  },
  {
    "text": "such that when my controller and my kuet plugins come online they will register this back with um the scheduler so that",
    "start": "805480",
    "end": "812000"
  },
  {
    "text": "he knows what the name of the driver is so that he can communicate that with that to make scheduling decisions and so",
    "start": "812000",
    "end": "817680"
  },
  {
    "text": "with this resource class in place um you basically link the resource class name to the driver so that when I go and",
    "start": "817680",
    "end": "824440"
  },
  {
    "text": "create this resource claim template I just say what resource class that this is what vendor specific crd I'm using to",
    "start": "824440",
    "end": "831920"
  },
  {
    "text": "make my selection and configuration of these devices once they come online and then down inside my pod itself I is",
    "start": "831920",
    "end": "838360"
  },
  {
    "text": "where I actually ref this resource claim template and so there's a new section called resource claims inside the podspec uh you give it a name you tell",
    "start": "838360",
    "end": "845800"
  },
  {
    "text": "it what it source is in this case it's the multiple gpus resource claim template that I've created above and",
    "start": "845800",
    "end": "852320"
  },
  {
    "text": "then any containers that you want to get access to this uh to the resources allocated to this claim you put inside a",
    "start": "852320",
    "end": "859079"
  },
  {
    "text": "new claim section of your resources spec so in this case we're using this local name gpus that we created for this and",
    "start": "859079",
    "end": "865759"
  },
  {
    "text": "referencing it here and so you can see how this you know matches what I've showed in this picture here where I've",
    "start": "865759",
    "end": "871040"
  },
  {
    "text": "got a single pod with a single container who's requesting access to these four gpus which goes through these you know",
    "start": "871040",
    "end": "877160"
  },
  {
    "text": "two levels of indirection here to to give access to that um so yeah so if I",
    "start": "877160",
    "end": "882600"
  },
  {
    "text": "jump back to my first tab where I've actually ran these guys um I'll go ahead",
    "start": "882600",
    "end": "888399"
  },
  {
    "text": "and quickly just run you know Cube control git pod a",
    "start": "888399",
    "end": "893959"
  },
  {
    "text": "um to display to show that they're actually",
    "start": "893959",
    "end": "899360"
  },
  {
    "text": "running um the output here is a little bit convoluted but you can see at the very top uh is where all of these GPU",
    "start": "899360",
    "end": "905839"
  },
  {
    "text": "tests are and you can see that all of them are currently in the running State um if I then come and I run this you",
    "start": "905839",
    "end": "914920"
  },
  {
    "text": "know long somewhat convoluted command it's the one that's going to print out some output from each of these to show",
    "start": "914920",
    "end": "920680"
  },
  {
    "text": "that they were actually allocated properly to the to the different um containers in this configuration that I",
    "start": "920680",
    "end": "926160"
  },
  {
    "text": "showed here so in GPU test uh one we expect to have two",
    "start": "926160",
    "end": "932279"
  },
  {
    "text": "containers um each accessing a unique GPU this is something you can already do",
    "start": "932279",
    "end": "937360"
  },
  {
    "text": "with the device plug-in today but you know just for parody we wanted to show that it's also possible uh with Dr so",
    "start": "937360",
    "end": "942959"
  },
  {
    "text": "you can see that each of them has access to a unique GPU uh versus GPU Test 2",
    "start": "942959",
    "end": "949880"
  },
  {
    "text": "where I've got uh two containers in the same pod requesting shared access to the",
    "start": "949880",
    "end": "954920"
  },
  {
    "text": "GPU you can see you know single pod they're both called pod zero I've got container Z and container one but the",
    "start": "954920",
    "end": "960920"
  },
  {
    "text": "gpus that they have access to are identical which you can you know notice by The UU ID that's printed there uh GPU",
    "start": "960920",
    "end": "967560"
  },
  {
    "text": "test 3 is two separate pods uh with a container each that want shared access",
    "start": "967560",
    "end": "973800"
  },
  {
    "text": "to a GPU across the pods which you can also do with this um and that's what we",
    "start": "973800",
    "end": "979279"
  },
  {
    "text": "see here so pod Zero versus pod one they both have a single container but they're accessing the same underlying GPU by EU",
    "start": "979279",
    "end": "985759"
  },
  {
    "text": "idid and then you know GPU test 4 which is the the spec that I walked through um",
    "start": "985759",
    "end": "991120"
  },
  {
    "text": "you can see that four separate gpus are are allocated to that um and so if I if",
    "start": "991120",
    "end": "997040"
  },
  {
    "text": "I move on you know there's the output that we would have had printed there uh and then the other interesting thing to actually look at here is to look at the",
    "start": "997040",
    "end": "1003880"
  },
  {
    "text": "nas once I'm in this state so um you know that node allocation State object for the the",
    "start": "1003880",
    "end": "1009639"
  },
  {
    "text": "custom uh communication between my controller and my and my kuet plugin so",
    "start": "1009639",
    "end": "1015920"
  },
  {
    "text": "if I go ahead and grab that and print the output of that we can see that in addition to the um allocatable devices",
    "start": "1015920",
    "end": "1025120"
  },
  {
    "text": "which is all that was contained in here previously uh there's now also some sections here for uh allocated claims",
    "start": "1025120",
    "end": "1031520"
  },
  {
    "text": "this is information that the controller would have written back into this once it's made an allation decision about",
    "start": "1031520",
    "end": "1037038"
  },
  {
    "text": "what gpus it actually wants to hand out and then once they actually land on the Node the node will prepare them and then",
    "start": "1037039",
    "end": "1043280"
  },
  {
    "text": "they fill in this section and you know this doesn't have to be the communication protocol that that gets followed we did this most mostly for",
    "start": "1043280",
    "end": "1049280"
  },
  {
    "text": "demonstration purposes inside a single crd so that we can print out one thing we see it all in one place but in",
    "start": "1049280",
    "end": "1056480"
  },
  {
    "text": "reality what's that it's changing too this is not going the future so perhaps",
    "start": "1056480",
    "end": "1062360"
  },
  {
    "text": "we'll just yeah we'll jump to the Future so again this is this is how things look today with the opaque parameters model",
    "start": "1062360",
    "end": "1067720"
  },
  {
    "text": "that um Patrick was just talking about uh and so if I just was to complete going through this sto I'll leave this",
    "start": "1067720",
    "end": "1073440"
  },
  {
    "text": "as an exercise for you guys to do later on if you're interested you you can delete these and then you'll see the nas",
    "start": "1073440",
    "end": "1079280"
  },
  {
    "text": "object get cleaned up where all of this extra information about allocated and prepared claims uh eventually",
    "start": "1079280",
    "end": "1085640"
  },
  {
    "text": "disappears um yeah so let me jump back to the slides and we'll we'll move on",
    "start": "1085640",
    "end": "1091120"
  },
  {
    "text": "from here yeah so we have a few slides explaining",
    "start": "1091120",
    "end": "1097320"
  },
  {
    "text": "how this works but I think we'll just skip through that quickly it is partly",
    "start": "1097320",
    "end": "1102960"
  },
  {
    "text": "where the name comes from next next slide so the dynamic part is actually",
    "start": "1102960",
    "end": "1108400"
  },
  {
    "text": "what I was thinking as the back and forth between scheduler and the drivers",
    "start": "1108400",
    "end": "1114400"
  },
  {
    "text": "trying to figure out a suitable note there is back and forth updates of the PO we could just keep going so there is",
    "start": "1114400",
    "end": "1121960"
  },
  {
    "text": "some back and forth where the PO scheduling context gets updated with new information from both sides until",
    "start": "1121960",
    "end": "1127960"
  },
  {
    "text": "eventually the schul makes a decision to try to allocate for a specific node it",
    "start": "1127960",
    "end": "1133240"
  },
  {
    "text": "tells the driver to allocate if that works eventually we are ready to run the port on a Noe and it gets scheduled but",
    "start": "1133240",
    "end": "1140320"
  },
  {
    "text": "that's the old thing that's the old approach we are now reconsidering this whole approach because uh the ideas that",
    "start": "1140320",
    "end": "1148200"
  },
  {
    "text": "I had about supporting cluster autoscaling with this approach just didn't fly that well it would it",
    "start": "1148200",
    "end": "1154039"
  },
  {
    "text": "centered around rebuilding autoscala binaries with custom vendor logic compiled in that would have been one",
    "start": "1154039",
    "end": "1159880"
  },
  {
    "text": "option or having a grpc mechanism between the autoscaler and Dr drivers",
    "start": "1159880",
    "end": "1166960"
  },
  {
    "text": "because the PO sking contact object it's live in the cluster the C Skiller can't use that as a communication mechanism",
    "start": "1166960",
    "end": "1172679"
  },
  {
    "text": "like the skula can so we we we had to come up with something else and the new approach that is now called uh the",
    "start": "1172679",
    "end": "1180039"
  },
  {
    "text": "structured parameters it's currently a separate cap but depending on how we decide to move forward it may become the",
    "start": "1180039",
    "end": "1187600"
  },
  {
    "text": "dynamic resource allocation proposal and the other stuff might get delegated to",
    "start": "1187600",
    "end": "1193080"
  },
  {
    "text": "some secondary thing that we keep alive while it's still needed but we can come to that so the key difference",
    "start": "1193080",
    "end": "1199320"
  },
  {
    "text": "now next slide is that we do have that was one slide too many but anyway we we",
    "start": "1199320",
    "end": "1205559"
  },
  {
    "text": "now we now have um built-in types for resource claim",
    "start": "1205559",
    "end": "1210960"
  },
  {
    "text": "parameters and resource slices so the resource claim parameters that's the built-in type that kind of mirrors what",
    "start": "1210960",
    "end": "1218600"
  },
  {
    "text": "was done with custom crds before but it's defined and understood by",
    "start": "1218600",
    "end": "1224640"
  },
  {
    "text": "kubernetes same with resource slies that is something that cupet publishes on behalf of the demon set on the Node to",
    "start": "1224640",
    "end": "1232840"
  },
  {
    "text": "to advertise which resources are available and all of that is done in a format that we call model uh that is",
    "start": "1232840",
    "end": "1239440"
  },
  {
    "text": "understood by kubernetes and what that model is is kind of what we are discussing right now but because it's",
    "start": "1239440",
    "end": "1245720"
  },
  {
    "text": "defined by kubernetes we can write code and compile it into the schul the schedular plug-in that handles resource",
    "start": "1245720",
    "end": "1252159"
  },
  {
    "text": "claims now knows how to interpret these parameters how to match the requirements",
    "start": "1252159",
    "end": "1258240"
  },
  {
    "text": "of a claim against the available resources it makes the decision also",
    "start": "1258240",
    "end": "1263360"
  },
  {
    "text": "itself based on its knowledge and goes ahead there's no communication back and forth anymore during pot scheduling",
    "start": "1263360",
    "end": "1269840"
  },
  {
    "text": "between the scheduler and the driver for the user it almost looks the",
    "start": "1269840",
    "end": "1276720"
  },
  {
    "text": "same they they still create a vendor crd with their parameters and the job of the",
    "start": "1276720",
    "end": "1282640"
  },
  {
    "text": "vendor driver now is to translate those crd parameters into the entry format it",
    "start": "1282640",
    "end": "1288279"
  },
  {
    "text": "doesn't need to be that way we could also allow the user to create the inry object directly but we see some value in",
    "start": "1288279",
    "end": "1294799"
  },
  {
    "text": "in doing it this way so that's the current approach the the",
    "start": "1294799",
    "end": "1302200"
  },
  {
    "text": "current process I think I've talked about that already so this translation step basically makes it completely",
    "start": "1302200",
    "end": "1307240"
  },
  {
    "text": "transparent to the user there's no user visible difference it's almost like an implementation detail um and it ideally",
    "start": "1307240",
    "end": "1314640"
  },
  {
    "text": "should be as capable of what was possible before",
    "start": "1314640",
    "end": "1319919"
  },
  {
    "text": "next slide so this is this is what we had before the PO scheduling context",
    "start": "1319919",
    "end": "1325000"
  },
  {
    "text": "being the object where we we communicate scheduling decisions and now it's a lot",
    "start": "1325000",
    "end": "1331880"
  },
  {
    "text": "simpler in a sense that the schu just gets informed about what the claim needs",
    "start": "1331880",
    "end": "1337440"
  },
  {
    "text": "what the what the cluster has and then it makes the decision itself it can also do that rapidly it can basically assign",
    "start": "1337440",
    "end": "1346080"
  },
  {
    "text": "in memory some resources this schedule one port move on to the next port and do",
    "start": "1346080",
    "end": "1351279"
  },
  {
    "text": "the same thing that it does today with inry or buil-in resources also for resource claims so",
    "start": "1351279",
    "end": "1358240"
  },
  {
    "text": "it's conceptually a lot more like kubernetes currently works except that we now have to Define this model that",
    "start": "1358240",
    "end": "1364039"
  },
  {
    "text": "actually captures real world use cases around accelerators",
    "start": "1364039",
    "end": "1370279"
  },
  {
    "text": "okay um so yeah so um the very first um",
    "start": "1372880",
    "end": "1378600"
  },
  {
    "text": "resource model that we've started working with which what I'm calling here the the reference implementation for 130",
    "start": "1378600",
    "end": "1384360"
  },
  {
    "text": "for structured parameters looks kind of like this so um this is the an object",
    "start": "1384360",
    "end": "1389840"
  },
  {
    "text": "called a resource slice this is what the kuet will eventually post back to the API server for the scheduler to be able",
    "start": "1389840",
    "end": "1396120"
  },
  {
    "text": "to look at and figure out what resources are available for allocation um and this information uh",
    "start": "1396120",
    "end": "1403360"
  },
  {
    "text": "that I'm showing here is just an example of what we've implemented uh for structure parameters in our Nvidia GPU",
    "start": "1403360",
    "end": "1409279"
  },
  {
    "text": "where the basic idea is and the reason it's called um a named resources model",
    "start": "1409279",
    "end": "1414520"
  },
  {
    "text": "is that it's basically a list of resource instances that have a name and a set of attributes associated with them",
    "start": "1414520",
    "end": "1420320"
  },
  {
    "text": "and each of those attributes can be of a certain kind it's either an INT a string a quantity um there's various different",
    "start": "1420320",
    "end": "1426840"
  },
  {
    "text": "types that you can associate with the attributes that exist there and so that when you go to try and do um selection",
    "start": "1426840",
    "end": "1432520"
  },
  {
    "text": "on the GPU that you actually care about you can list these attributes uh to help you narrow down the set of resources",
    "start": "1432520",
    "end": "1438039"
  },
  {
    "text": "that that you you actually want um and so yeah this as I have written in red here this becomes basically a flat list",
    "start": "1438039",
    "end": "1443640"
  },
  {
    "text": "of named Resources with a list of attributes and this is what your kuet plug-in will pass back to the kuet so that it can advertise this to to the",
    "start": "1443640",
    "end": "1451200"
  },
  {
    "text": "scheduler um and if you're familiar with the existing device plugin this is basically what you have to add to these",
    "start": "1451200",
    "end": "1456960"
  },
  {
    "text": "Kua plugins to to enable uh to enable us to send this back um where um basically",
    "start": "1456960",
    "end": "1463919"
  },
  {
    "text": "you you you grab uh a structure that represents your model you open up a node",
    "start": "1463919",
    "end": "1469559"
  },
  {
    "text": "list and watch connection back to your kuet and you send these resources over that interface exactly like you would",
    "start": "1469559",
    "end": "1475399"
  },
  {
    "text": "have done with the existing um device plug-in API except that now you're not",
    "start": "1475399",
    "end": "1480799"
  },
  {
    "text": "just passing back a list of opaque strings you're passing back a list of those strings and attributes that are attached to them um and instead of the",
    "start": "1480799",
    "end": "1488679"
  },
  {
    "text": "kuet just taking the list of strings that you pass back and converting that into a count that it rid back writes",
    "start": "1488679",
    "end": "1494919"
  },
  {
    "text": "back into the node object it's actually going to create one of these resource objects in the API server and dump all",
    "start": "1494919",
    "end": "1501120"
  },
  {
    "text": "of your information into it so the names and all of their attributes associated with",
    "start": "1501120",
    "end": "1506600"
  },
  {
    "text": "it um yeah and then you know first you stream the you send the initial bit and",
    "start": "1507120",
    "end": "1513399"
  },
  {
    "text": "then you know you would continue to stream them if there were any updates in terms of you know your resources going",
    "start": "1513399",
    "end": "1518600"
  },
  {
    "text": "unhealthy or or whatnot which again is exactly the same thing you do in the existing device plug-in API just with",
    "start": "1518600",
    "end": "1524000"
  },
  {
    "text": "less information um and so from that picture the that uh that Patrick showed a minute",
    "start": "1524000",
    "end": "1530159"
  },
  {
    "text": "ago this is kind of the bottom half of uh what we're what we're now doing with the structured parameters model where",
    "start": "1530159",
    "end": "1536279"
  },
  {
    "text": "our kuet plugin advertises these resources over that streaming interface to the kuet the kuet uses those to",
    "start": "1536279",
    "end": "1542480"
  },
  {
    "text": "advertise them back to the kubernetes scheduler using this uh resource slice object in the in the API",
    "start": "1542480",
    "end": "1548279"
  },
  {
    "text": "server and then the second half of what we do is being able to continue to support this vendor specific API for uh",
    "start": "1548279",
    "end": "1556000"
  },
  {
    "text": "selecting and configuring your resources and so the example that I'm showing here um we would have a controller uh for our",
    "start": "1556000",
    "end": "1562200"
  },
  {
    "text": "Dr driver um that instead of just um using this vendor specific uh claim",
    "start": "1562200",
    "end": "1567960"
  },
  {
    "text": "parameters object directly it's going to generate an in tree object which we've which we've now added as part of this",
    "start": "1567960",
    "end": "1573520"
  },
  {
    "text": "structured parameters model uh for resource claim parameters um and so your vendor specific resource claim",
    "start": "1573520",
    "end": "1579240"
  },
  {
    "text": "parameters gets converted by your driver controller into this entry resource claim parameter so that this it's in a",
    "start": "1579240",
    "end": "1585840"
  },
  {
    "text": "it's a standard format that the uh can actually use to to make its decisions um",
    "start": "1585840",
    "end": "1591279"
  },
  {
    "text": "and so if we start with what we have here on the left you can see that my vendor specific object uh is called GPU",
    "start": "1591279",
    "end": "1597200"
  },
  {
    "text": "claim parameters it's in this uh it has a specific API version and it's called a100 in this case and if we then",
    "start": "1597200",
    "end": "1604360"
  },
  {
    "text": "generate this resource claim parameters object that you see on the right we're going to add a section in it called generated from which refers back to this",
    "start": "1604360",
    "end": "1610600"
  },
  {
    "text": "object and so you can imagine how the controller is actually built to do this uh it's got an Informer that it's",
    "start": "1610600",
    "end": "1616320"
  },
  {
    "text": "watching when all of these resource claim parameters objects get created and anytime one shows up it generates uh",
    "start": "1616320",
    "end": "1622760"
  },
  {
    "text": "this resource claim parameters object and then the scheduler watching these resource claim parameter objects the inry ones to figure out when it can",
    "start": "1622760",
    "end": "1629600"
  },
  {
    "text": "actually pick that up to make a scheduling decision for these resources um uh associated with this uh",
    "start": "1629600",
    "end": "1637399"
  },
  {
    "text": "in the in the um in the in the vendor specific API we have a way of doing",
    "start": "1637399",
    "end": "1642520"
  },
  {
    "text": "selection on our resources um in this case I'm asking for",
    "start": "1642520",
    "end": "1647799"
  },
  {
    "text": "uh some product that has the string a100 inside of it uh and I'm asking for a GPU",
    "start": "1647799",
    "end": "1654360"
  },
  {
    "text": "that has less than or equal to 40 gigabytes of memory and when we translate this into the vendor uh into",
    "start": "1654360",
    "end": "1659679"
  },
  {
    "text": "the sorry the the generic resource claim parameters object we turn this into a a cell expression that uh that the",
    "start": "1659679",
    "end": "1666320"
  },
  {
    "text": "scheduler is able to interpret and um use to select the proper GPU and the the",
    "start": "1666320",
    "end": "1671559"
  },
  {
    "text": "the parameters that exist in this are the same ones that we listed out as the attributes attached to our resources",
    "start": "1671559",
    "end": "1677840"
  },
  {
    "text": "they were being advertised by the by the underlying node through the through the resource slice and so um you know this",
    "start": "1677840",
    "end": "1684360"
  },
  {
    "text": "the cell expression that's here is basically encoding a Boolean expression of the attributes that need to be",
    "start": "1684360",
    "end": "1690000"
  },
  {
    "text": "attached to a GPU uh in our case here um in order to to allow that to be a",
    "start": "1690000",
    "end": "1696240"
  },
  {
    "text": "candidate for selection when the when the resource allocation actually happens um and this is the selection piece of uh",
    "start": "1696240",
    "end": "1703320"
  },
  {
    "text": "of a resource claim parameters object and then uh on the flip side of that there's also a configuration piece of",
    "start": "1703320",
    "end": "1709240"
  },
  {
    "text": "these resource claim parameters object this is something that only the node level needs to know about once this this",
    "start": "1709240",
    "end": "1715320"
  },
  {
    "text": "GPU has been requested for allocation it's been or it's been requested it's been allocated by the scheduler it gets",
    "start": "1715320",
    "end": "1721480"
  },
  {
    "text": "passed on to the node the node needs to know how you want this thing to be configured and so we we pass along this",
    "start": "1721480",
    "end": "1726960"
  },
  {
    "text": "configuration information uh via the the entry resource claim parameters object so that the kuet knows what to do with",
    "start": "1726960",
    "end": "1733519"
  },
  {
    "text": "it once it lands there and in this case we're basically saying you know I want an a100 GPU with less than or equal to",
    "start": "1733519",
    "end": "1739200"
  },
  {
    "text": "40 GB of memory and once it lands on the Node and it's going to be shared amongst multiple containers uh make sure that",
    "start": "1739200",
    "end": "1745440"
  },
  {
    "text": "it's using uh time slicing and the the long T time slice configuration rather than the short or medium time slice",
    "start": "1745440",
    "end": "1754000"
  },
  {
    "text": "configuration um and then this is you know from that picture from before this is that upper half of of what Patrick showed where you know we've got our",
    "start": "1754000",
    "end": "1760480"
  },
  {
    "text": "resource driver it's got the controller piece it's got this um you know this",
    "start": "1760480",
    "end": "1765880"
  },
  {
    "text": "this mechanism Now to turn these vendors specific claim parameters objects into",
    "start": "1765880",
    "end": "1771000"
  },
  {
    "text": "uh generic resource claim parameter objects that the scheduler knows how to to read and interpret um and with both",
    "start": "1771000",
    "end": "1777559"
  },
  {
    "text": "of those in place putting this back together um the the the scheduler now has all the information that it needs in",
    "start": "1777559",
    "end": "1783320"
  },
  {
    "text": "order to actually select a node for scheduling and eventually um you know schedule that pod to the node and when",
    "start": "1783320",
    "end": "1789799"
  },
  {
    "text": "it does that it follows the same procedure as it would have done for uh opaque parameters so we schedule the Pod",
    "start": "1789799",
    "end": "1796039"
  },
  {
    "text": "there and then the Pod lands there and then the kuet goes through through this you know uh um back and forth uh with",
    "start": "1796039",
    "end": "1802799"
  },
  {
    "text": "the kuet plugin to have it actually prepare the resources and then eventually pass that onto the container",
    "start": "1802799",
    "end": "1807840"
  },
  {
    "text": "runtime and launch the container um as I mentioned earlier on",
    "start": "1807840",
    "end": "1813880"
  },
  {
    "text": "we have this example driver I went through the demo of that um you know currently in the codebase for that we",
    "start": "1813880",
    "end": "1819440"
  },
  {
    "text": "only support uh the opaque parameters model um but I've started looking at it I just haven't quite finished it",
    "start": "1819440",
    "end": "1825679"
  },
  {
    "text": "updating this to include um the ability to do to support the structure parameters model and we plan to have",
    "start": "1825679",
    "end": "1832039"
  },
  {
    "text": "that ready uh By the time kind releases um uh you know an an image that supports",
    "start": "1832039",
    "end": "1839159"
  },
  {
    "text": "kubernetes 130 um at the same time I've I've I actually already have gone",
    "start": "1839159",
    "end": "1844679"
  },
  {
    "text": "through the process of building structure structure parameters and uh have a branch for it in our Dr driver",
    "start": "1844679",
    "end": "1850480"
  },
  {
    "text": "for NVIDIA gpus um which you can play around with if you're interested in in seeing this work um in in those in that",
    "start": "1850480",
    "end": "1858000"
  },
  {
    "text": "use case um um speaking of which uh in this",
    "start": "1858000",
    "end": "1864080"
  },
  {
    "text": "current model that we have so far this named resource model uh some of you may have read this document that I put",
    "start": "1864080",
    "end": "1869200"
  },
  {
    "text": "together called the Nvidia GPU use cases for dynamic resource allocation uh where I outlined 12 use cases that we want to",
    "start": "1869200",
    "end": "1875440"
  },
  {
    "text": "be able to support uh with the with Dr going forward and with this simple named",
    "start": "1875440",
    "end": "1880799"
  },
  {
    "text": "resources model we actually already support half of those use cases which is which is pretty good for for how simple",
    "start": "1880799",
    "end": "1886120"
  },
  {
    "text": "it actually is um and um if you uh these are the same use",
    "start": "1886120",
    "end": "1891840"
  },
  {
    "text": "cases that I outlined in my talk from from Chicago last November where I walk through uh what I've called unlocking",
    "start": "1891840",
    "end": "1898000"
  },
  {
    "text": "the full potential of gpus for AI workloads on kubernetes it it walks through all the different use cases of what you can't do with the existing",
    "start": "1898000",
    "end": "1903159"
  },
  {
    "text": "device plug-in API and what we'd like to be able to do with Dr and demonstrates how that's done with the opaque",
    "start": "1903159",
    "end": "1908720"
  },
  {
    "text": "parameters model um where um in the current name parameters um sorry the the",
    "start": "1908720",
    "end": "1916840"
  },
  {
    "text": "the the the named resources model that we have put in place today these are the six use cases that are supported and",
    "start": "1916840",
    "end": "1923200"
  },
  {
    "text": "then those are the six use cases that are that are unsupported currently I'm not going to go through the details of of all these you guys can look at the",
    "start": "1923200",
    "end": "1928960"
  },
  {
    "text": "slides later and click through these if you want uh but the the main point of this is just to say that uh by 131 so by",
    "start": "1928960",
    "end": "1935519"
  },
  {
    "text": "the next release uh we hope to be able to support um uh what is it um I can't",
    "start": "1935519",
    "end": "1942720"
  },
  {
    "text": "see for 10 of those 12 so there's two left over that um that we still probably won't be able to support by by the next",
    "start": "1942720",
    "end": "1948960"
  },
  {
    "text": "release um and the main ones that we're missing uh that that will enable this is the ability to to partition uh resources",
    "start": "1948960",
    "end": "1956159"
  },
  {
    "text": "to be able to support something like Mig if you guys are familiar with that um which is a mode of operation for for",
    "start": "1956159",
    "end": "1961480"
  },
  {
    "text": "gpus that allow you to partition it up into smaller pieces so we basically have no way to partition these resources we",
    "start": "1961480",
    "end": "1967480"
  },
  {
    "text": "only have a way to name uh the kind of the top level resource at the moment and the attributes that are associated with",
    "start": "1967480",
    "end": "1973000"
  },
  {
    "text": "that so once we come up with a scheme for how to do the partitioning um which we we have ideas around how to do so I'm",
    "start": "1973000",
    "end": "1978679"
  },
  {
    "text": "fairly confident we should be able to get this uh by 130 Sorry by 131 um to to",
    "start": "1978679",
    "end": "1984960"
  },
  {
    "text": "push this a little bit forward and then the last one is the um this notion of what I always call management pods which",
    "start": "1984960",
    "end": "1990200"
  },
  {
    "text": "have access to all of the resources without actually allocating them so this is the idea that you know the device",
    "start": "1990200",
    "end": "1996840"
  },
  {
    "text": "plugin itself or say some monitoring pod that you want to run it needs access to these so that it can perform monitoring",
    "start": "1996840",
    "end": "2002399"
  },
  {
    "text": "on these resources but you don't want to allocate those to that pod because you want to make those available to other pods for consumption in an exclusive way",
    "start": "2002399",
    "end": "2009279"
  },
  {
    "text": "later on and so these are the two things that we need to figure out the right way to support for 131 to be able to enable",
    "start": "2009279",
    "end": "2015760"
  },
  {
    "text": "you know 10 of these 12 use cases um and then the last two here we we have ideas around how to support the first one",
    "start": "2015760",
    "end": "2022360"
  },
  {
    "text": "that's here this notion of um custom policies to align multiple resources uh",
    "start": "2022360",
    "end": "2027880"
  },
  {
    "text": "such as gpus and nicks um you know just a notion John bamar has been working on",
    "start": "2027880",
    "end": "2033120"
  },
  {
    "text": "a proposal for for how we can do this in sort of a more generic way um I'm not going to be I'm not confident enough to",
    "start": "2033120",
    "end": "2039840"
  },
  {
    "text": "say that we can have this figured out by 131 but we have some ideas and I see a",
    "start": "2039840",
    "end": "2044960"
  },
  {
    "text": "path towards eventually supporting this even in the structured uh parameters model um this last one though I don't",
    "start": "2044960",
    "end": "2051398"
  },
  {
    "text": "really see how we could ever support it with structured parameters and it's the notion of having fully application",
    "start": "2051399",
    "end": "2056760"
  },
  {
    "text": "specific policies for how you um allocate gpus to your application and so",
    "start": "2056760",
    "end": "2062158"
  },
  {
    "text": "This falls into the category of things like you know some very custom policy which says if I have two pods",
    "start": "2062159",
    "end": "2068440"
  },
  {
    "text": "whose aggregate uh amount of memory they need from a GPU fits on one GPU then give me one shared GPU versus if they",
    "start": "2068440",
    "end": "2075560"
  },
  {
    "text": "don't well then give me two gpus instead of just one right so there's some um very custom policies that might need to",
    "start": "2075560",
    "end": "2081760"
  },
  {
    "text": "go into place to to allow that to happen especially if you also want to map in an RDMA interface if there's not enough on",
    "start": "2081760",
    "end": "2087520"
  },
  {
    "text": "a single node and and so on um maybe there's ways to do this I just don't have good ideas around it now so I don't",
    "start": "2087520",
    "end": "2093679"
  },
  {
    "text": "know when or if that will happen um and just one thing I want to highlight at at the end of all this is",
    "start": "2093679",
    "end": "2099920"
  },
  {
    "text": "that um at least the way that we've built this out for the for our GPU driver um from a user's perspective no",
    "start": "2099920",
    "end": "2106720"
  },
  {
    "text": "changes need to be made um to migrate from Dr with opaque parameters to that with structure parameters everything's",
    "start": "2106720",
    "end": "2112359"
  },
  {
    "text": "kind of handled behind the scene so if if you've actually started playing around with this um at least for the the",
    "start": "2112359",
    "end": "2118040"
  },
  {
    "text": "six use cases that I listed at the top there um with opaque parameters and you decide okay well I want to enable this",
    "start": "2118040",
    "end": "2124480"
  },
  {
    "text": "now for for structured parameters you shouldn't have to migrate new code and if you do let me know because that's",
    "start": "2124480",
    "end": "2130960"
  },
  {
    "text": "um against the design um yep and now I'll hand things",
    "start": "2130960",
    "end": "2136119"
  },
  {
    "text": "back over to Patrick so we talked a lot about things that we have implemented already but we might not need in the",
    "start": "2136119",
    "end": "2143000"
  },
  {
    "text": "future so let's look at some of the options what we can cut and French style we are in Paris this would be one way of",
    "start": "2143000",
    "end": "2149040"
  },
  {
    "text": "doing it I hope we can do it in a way without hurting users too much or",
    "start": "2149040",
    "end": "2154240"
  },
  {
    "text": "ourselves but let's see what options we have so I put together a few possible",
    "start": "2154240",
    "end": "2159560"
  },
  {
    "text": "things that we can remove going forward the first one is clearly this whole",
    "start": "2159560",
    "end": "2165680"
  },
  {
    "text": "poort scheduling context concept and object it currently is needed for delay",
    "start": "2165680",
    "end": "2172839"
  },
  {
    "text": "allocation in core without that we still can do immediate allocation but it's not",
    "start": "2172839",
    "end": "2179000"
  },
  {
    "text": "that useful and the custom policy the the one that that Kevin just talked about doing something very specific for",
    "start": "2179000",
    "end": "2186319"
  },
  {
    "text": "exactly your use case is currently possible with a with a controller it will not be possible anymore if we take",
    "start": "2186319",
    "end": "2192240"
  },
  {
    "text": "out that pod scheduling context but perhaps that's just acceptable it's at some point we have to trade off and and",
    "start": "2192240",
    "end": "2197880"
  },
  {
    "text": "lose some functionality to move forward uh for not to local the",
    "start": "2197880",
    "end": "2203119"
  },
  {
    "text": "structured parameters clearly are the alternative that we are focusing on so that's the atttention network attached",
    "start": "2203119",
    "end": "2209599"
  },
  {
    "text": "is a bit more tricky we don't have thought that much about it in the context of structured parameters but at",
    "start": "2209599",
    "end": "2215880"
  },
  {
    "text": "least with a core Dr uh immediate allocation would still work so if you have something that is always available",
    "start": "2215880",
    "end": "2222280"
  },
  {
    "text": "to all ports regardless or all nodes then immediate location doesn't need for pot scheduling context object and it",
    "start": "2222280",
    "end": "2228520"
  },
  {
    "text": "would still work with a central controller so next slide um the whole",
    "start": "2228520",
    "end": "2234960"
  },
  {
    "text": "notion of but that goes even further so with C cutting the pot scheduling context object we would still have the",
    "start": "2234960",
    "end": "2241920"
  },
  {
    "text": "core Dr or classic Dr with potentially a control plane controller provided by a",
    "start": "2241920",
    "end": "2247680"
  },
  {
    "text": "vendor if we also re remove that when we really drop all kinds of extension",
    "start": "2247680",
    "end": "2253640"
  },
  {
    "text": "mechanism for third party vendors which we currently have because it was the",
    "start": "2253640",
    "end": "2259160"
  },
  {
    "text": "core concept of original design with structured parameters all vendors need to work with what we are supporting in",
    "start": "2259160",
    "end": "2265920"
  },
  {
    "text": "terms of logic and CH choosing resources there's no extension mechanism built",
    "start": "2265920",
    "end": "2271000"
  },
  {
    "text": "into that at the moment um yeah network attached resources is",
    "start": "2271000",
    "end": "2277880"
  },
  {
    "text": "how I would see currently well mostly the main use case remaining for classic Dr um but perhaps we can find something",
    "start": "2277880",
    "end": "2285839"
  },
  {
    "text": "how to do that with with structured parameters the other alternative is that the parameters that we allow in the inry",
    "start": "2285839",
    "end": "2294560"
  },
  {
    "text": "parameter object might become again something that the vendor can provide and if we then find a way to how to plug",
    "start": "2294560",
    "end": "2300319"
  },
  {
    "text": "the vendor logic into a custom schul we might still be able to do extensions Custom schul Custom Auto scale we have a",
    "start": "2300319",
    "end": "2308359"
  },
  {
    "text": "long history of supporting people building their own schedulers for for such purposes so we might still we might",
    "start": "2308359",
    "end": "2314520"
  },
  {
    "text": "still be able to support that going forward even if it's not in the pre-built schedule but this is future",
    "start": "2314520",
    "end": "2321040"
  },
  {
    "text": "work it's not not being done at the moment so the other thing um just for",
    "start": "2321040",
    "end": "2328800"
  },
  {
    "text": "for the sake of completeness uh the vendor crd support that we have with structured parameters I think there are",
    "start": "2328800",
    "end": "2333920"
  },
  {
    "text": "some divided opinions whether it's a good or a bad thing uh I think I think it's important because the vendor crd",
    "start": "2333920",
    "end": "2340720"
  },
  {
    "text": "gives us all the validation of the fields that we don't have with the entry",
    "start": "2340720",
    "end": "2345760"
  },
  {
    "text": "parameter object the cell expression itself is currently typ save so it's",
    "start": "2345760",
    "end": "2351000"
  },
  {
    "text": "known in advance but it evaluates to a bullion if weow if we Lev if we drop the",
    "start": "2351000",
    "end": "2356400"
  },
  {
    "text": "CD support and make it simpler eventually it will be just just for syntax and there will be runtime errors",
    "start": "2356400",
    "end": "2362560"
  },
  {
    "text": "that will be very hard to debug for user because it basically means they set up everything the schul tries to skort and",
    "start": "2362560",
    "end": "2369200"
  },
  {
    "text": "there there's a cell expression error in filtering nodes that will exp will be",
    "start": "2369200",
    "end": "2374520"
  },
  {
    "text": "exposed but it's not very very user friendly the validation I think is a fairly important aspect of supporting",
    "start": "2374520",
    "end": "2380680"
  },
  {
    "text": "the vendor crds okay um so my conclusion from all",
    "start": "2380680",
    "end": "2387960"
  },
  {
    "text": "of this I think that's the next slide uh yeah the the um alternative models",
    "start": "2387960",
    "end": "2394480"
  },
  {
    "text": "that's another implementation detail right now we we I I part particular was",
    "start": "2394480",
    "end": "2400079"
  },
  {
    "text": "very scared about having to define a model that works across all the future",
    "start": "2400079",
    "end": "2405880"
  },
  {
    "text": "Hardware that cabinal ever will need to support that seemed like a very daunting",
    "start": "2405880",
    "end": "2411319"
  },
  {
    "text": "task and I know people have tried before I'm aware of a prior art in that area where people tried to model hardware and",
    "start": "2411319",
    "end": "2419400"
  },
  {
    "text": "just couldn't come to come some some conclusion right now built into the structured parameters approach is the",
    "start": "2419400",
    "end": "2426480"
  },
  {
    "text": "notion that you you can have multiple different models and vend that's basically pick one for their resources",
    "start": "2426480",
    "end": "2434359"
  },
  {
    "text": "the parameters then must match of course but we have an escape head where we can say okay we do the named resources right",
    "start": "2434359",
    "end": "2440839"
  },
  {
    "text": "now but if we find that we need something completely different then we can we can have an alternative model",
    "start": "2440839",
    "end": "2447160"
  },
  {
    "text": "added alongside and the types in go are defined so that skul or all any other",
    "start": "2447160",
    "end": "2453560"
  },
  {
    "text": "component will see that it has an empty empty structure one of many where the",
    "start": "2453560",
    "end": "2458720"
  },
  {
    "text": "structure is empty and it doesn't know how to handle things it it it fails gracefully at least in that",
    "start": "2458720",
    "end": "2464119"
  },
  {
    "text": "case so yeah the plan I I I think we clearly need to build up on what we have",
    "start": "2464119",
    "end": "2470640"
  },
  {
    "text": "in 130 right now this is a long list of things that probably need to be added to",
    "start": "2470640",
    "end": "2475800"
  },
  {
    "text": "make it more useful but I think it's doable I I think we are we started on a few things already we are discussing how",
    "start": "2475800",
    "end": "2482040"
  },
  {
    "text": "to extend the model we are discussing the management access the use case that you mentioned that is currently missing",
    "start": "2482040",
    "end": "2488560"
  },
  {
    "text": "partitioning needs to go into the current model and then it's fairly complete there are some other",
    "start": "2488560",
    "end": "2493720"
  },
  {
    "text": "implementation aspects a version SK between cupet and the control plane is currently an issue because it needs to",
    "start": "2493720",
    "end": "2499880"
  },
  {
    "text": "pass information in exactly the right version so if whenever we change anything in our structured model we",
    "start": "2499880",
    "end": "2506440"
  },
  {
    "text": "would need to update cuet which is kind of a pain for users so there are some ideas how how to address that it's an",
    "start": "2506440",
    "end": "2512800"
  },
  {
    "text": "impation problem mostly um yeah scoring might be needed",
    "start": "2512800",
    "end": "2519359"
  },
  {
    "text": "so if we if we focus on these things we think that for",
    "start": "2519359",
    "end": "2525200"
  },
  {
    "text": "131 that's the next slide we can have something that's fairly complete and useful and our proposal is that we focus",
    "start": "2525200",
    "end": "2533599"
  },
  {
    "text": "on that that we not yet cut anything because the the opaque",
    "start": "2533599",
    "end": "2541200"
  },
  {
    "text": "parameters I still have their their justification right now because it is how vendors can explore the thing they",
    "start": "2541200",
    "end": "2549079"
  },
  {
    "text": "can come up with some ideas how to or what they expect from kubernetes how",
    "start": "2549079",
    "end": "2554559"
  },
  {
    "text": "kubernetes should be working by by modeling basically exp prototyping with opaque parameters then come to us and",
    "start": "2554559",
    "end": "2562640"
  },
  {
    "text": "tell us whether the structured model is sufficient and what changes might be needed there if we follow this plan it",
    "start": "2562640",
    "end": "2569079"
  },
  {
    "text": "basically gives us a timeline 131 where we do the major work that remains freeze",
    "start": "2569079",
    "end": "2574559"
  },
  {
    "text": "everything just do clean up after that um and then in in for 132 this year it's",
    "start": "2574559",
    "end": "2582000"
  },
  {
    "text": "it's an aggressive timeline but it's I think it's do well then we can declare the structured parameters as beta keep",
    "start": "2582000",
    "end": "2588480"
  },
  {
    "text": "everything else as Alpha and eventually when we are happy enough with what we have then we can cut",
    "start": "2588480",
    "end": "2595800"
  },
  {
    "text": "the alpha features deprecate them remove them from with inborn release and hopefully everyone is",
    "start": "2595800",
    "end": "2602480"
  },
  {
    "text": "happy well that's it I we lost some time at the beginning sorry for that",
    "start": "2603760",
    "end": "2611720"
  },
  {
    "text": "um we have 2 minutes for questions that wasn't that wasn't the",
    "start": "2613400",
    "end": "2618839"
  },
  {
    "text": "plan okay um so just the at uh this afternoon",
    "start": "2618839",
    "end": "2627599"
  },
  {
    "text": "probably 4 o' we're hoping there'll be an unconference and it's largely going to be about exactly this and that",
    "start": "2627599",
    "end": "2633720"
  },
  {
    "text": "structured model and how we do the how we do the um uh how we evolve",
    "start": "2633720",
    "end": "2640599"
  },
  {
    "text": "this from from there so yeah I I guess that's my way of saying well talk to",
    "start": "2640599",
    "end": "2646640"
  },
  {
    "text": "this guy about all the tricky questions about the structured model he'll answer",
    "start": "2646640",
    "end": "2652800"
  },
  {
    "text": "that um microphone at the b or no Tim Tim go first please uh so my question is",
    "start": "2653359",
    "end": "2659640"
  },
  {
    "text": "around um the kinds of limits and how this interacts with like the hard limits",
    "start": "2659640",
    "end": "2664760"
  },
  {
    "text": "like in this Zone I have 42 accelerators and there aren't going to be any more you know it's bare metal or",
    "start": "2664760",
    "end": "2671680"
  },
  {
    "text": "something like that um and also the sort of soft limits like in this names space you can have 10 accelerators how do",
    "start": "2671680",
    "end": "2678839"
  },
  {
    "text": "those things that you can you know already do a bit with the you know without Dynamic resource allocation how",
    "start": "2678839",
    "end": "2685079"
  },
  {
    "text": "do they interact with Dynamic resource allocation so there is one pending PR about quotas which is only counting",
    "start": "2685079",
    "end": "2693839"
  },
  {
    "text": "claims it's not detailed enough to actually count gpus for example that is something that",
    "start": "2693839",
    "end": "2700599"
  },
  {
    "text": "we could add now we couldn't do that with the opaque model the opaque model we could only count the user visible",
    "start": "2700599",
    "end": "2706280"
  },
  {
    "text": "part which was numbers of claims per class for example but how big each claim is was completely opaque one again one",
    "start": "2706280",
    "end": "2714079"
  },
  {
    "text": "another drawback of of making it opaque with the structured model we could Define a quarter mechanism that looks at",
    "start": "2714079",
    "end": "2722359"
  },
  {
    "text": "all the allocations in a namespace and comes up with some some some answer whether that",
    "start": "2722359",
    "end": "2728559"
  },
  {
    "text": "exceeds for quota and we could evaluate that U to enforce quotas but that is not",
    "start": "2728559",
    "end": "2735520"
  },
  {
    "text": "currently part of a plan but it would be possible I think the architecture supports",
    "start": "2735520",
    "end": "2741880"
  },
  {
    "text": "that yeah that was actually Sasha pointed out that the controller could have blocked further allocations using",
    "start": "2745400",
    "end": "2752720"
  },
  {
    "text": "some custom policy so that would have been possible on the vendor side yeah uh y from Nvidia Uh Kevin con so",
    "start": "2752720",
    "end": "2761720"
  },
  {
    "text": "thanks for the update uh my question you mentioned the support of dicks and I",
    "start": "2761720",
    "end": "2767040"
  },
  {
    "text": "just wondering and how to support the networking resources in general any plan",
    "start": "2767040",
    "end": "2772200"
  },
  {
    "text": "do you think uh this mechanism can be generalized to support yeah if MV link",
    "start": "2772200",
    "end": "2777400"
  },
  {
    "text": "or yeah any of networking resources thank you I I think the parameter approach that we have for resources is a",
    "start": "2777400",
    "end": "2784400"
  },
  {
    "text": "good it could fit the information but you need to provide about networking requirements of a PO so I think that's",
    "start": "2784400",
    "end": "2790760"
  },
  {
    "text": "feasible and also if we have a limited set of Nicks that or sov virtual",
    "start": "2790760",
    "end": "2798440"
  },
  {
    "text": "interfaces that are a limited resource on a node then you could use this mechanism to allocate those I think that",
    "start": "2798440",
    "end": "2805319"
  },
  {
    "text": "is feasible it's really just a matter of figuring out how to P put the pieces",
    "start": "2805319",
    "end": "2812280"
  },
  {
    "text": "together yeah one thing I think for networking resources the topology is right we have to have the capture the",
    "start": "2812599",
    "end": "2819200"
  },
  {
    "text": "topology information thank you so the networking stuff is an active",
    "start": "2819200",
    "end": "2824520"
  },
  {
    "text": "discussion right now right Kevin like literally that's what I was going to say literally in slack I have a message from",
    "start": "2824520",
    "end": "2829760"
  },
  {
    "text": "Kevin that I haven't responded to because I was on a plane right so active discussion I think there's an",
    "start": "2829760",
    "end": "2836480"
  },
  {
    "text": "opportunity for this model to capture the the RDMA sort of devices the GPU",
    "start": "2836480",
    "end": "2843760"
  },
  {
    "text": "specific Nicks um but also Poss the more extended Network model that you know",
    "start": "2843760",
    "end": "2850480"
  },
  {
    "text": "there's a lot of talking about multi Network and and how to model that in kubernetes I think there's a possibility",
    "start": "2850480",
    "end": "2855559"
  },
  {
    "text": "that these things could come together which I think is great um I wanted to",
    "start": "2855559",
    "end": "2860599"
  },
  {
    "text": "ask a sort of loaded question you s you suggested betaing part of the API but not all of",
    "start": "2860599",
    "end": "2867400"
  },
  {
    "text": "it roundtrip rule says you have to be able to go back and forth which means",
    "start": "2867400",
    "end": "2873559"
  },
  {
    "text": "you either drag baggage into the AL into the Beta or you drop it from the",
    "start": "2873559",
    "end": "2879319"
  },
  {
    "text": "alpha um so if we keep some things in",
    "start": "2879319",
    "end": "2884359"
  },
  {
    "text": "Alpha they still would be in the API the fields would still be there but they",
    "start": "2884359",
    "end": "2890880"
  },
  {
    "text": "would be disabled without a second feature gate so my plan would be to have",
    "start": "2890880",
    "end": "2895960"
  },
  {
    "text": "two feature Gates One Core Dr and the other for say let's call it pot sking",
    "start": "2895960",
    "end": "2901280"
  },
  {
    "text": "context or core classic Dr we need a name and this additional clust this additional te gate remains Alpha",
    "start": "2901280",
    "end": "2908359"
  },
  {
    "text": "disables all the API surface that we don't want to promote to Beta and would be this would be the some of these",
    "start": "2908359",
    "end": "2914599"
  },
  {
    "text": "fields that we don't need in with structured parameters the resource class currently has a field that says this",
    "start": "2914599",
    "end": "2920800"
  },
  {
    "text": "class uses structured parameters yes no this field would be Alpha it would be on",
    "start": "2920800",
    "end": "2926640"
  },
  {
    "text": "by default and with beta we wouldn't expose it it would always be on uh and",
    "start": "2926640",
    "end": "2934079"
  },
  {
    "text": "the alpha field is what users can flip on to go back to the old model it is baggage I know",
    "start": "2934079",
    "end": "2941280"
  },
  {
    "text": "but it would be a behind a feature gate I I see where you're going I'm not sure that there's a lot of precedent for",
    "start": "2941280",
    "end": "2947720"
  },
  {
    "text": "doing it that way I'm not sure the Machinery will be in your favor which you're not a stranger to but I think I",
    "start": "2947720",
    "end": "2955119"
  },
  {
    "text": "see it the other way around we are doing this we do have beta quality or ga uh",
    "start": "2955119",
    "end": "2960880"
  },
  {
    "text": "apis that contain Alpha Fields that's we just we just happen to have the alpha Fields already at the time that we go",
    "start": "2960880",
    "end": "2969240"
  },
  {
    "text": "beer I don't see such a big problem with that all right we we'll think about it when we get to review thanks yeah I know",
    "start": "2969240",
    "end": "2976160"
  },
  {
    "text": "that I need to make it work of course so um yeah sorry we're actually over time",
    "start": "2976160",
    "end": "2981480"
  },
  {
    "text": "now uh is there a great a good place for them to follow up with you for more questions",
    "start": "2981480",
    "end": "2987240"
  },
  {
    "text": "later there four o'cl okay thank you",
    "start": "2987240",
    "end": "2994880"
  }
]