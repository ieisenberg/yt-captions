[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "hi everyone and welcome to an on-demand session for the cncf my name is Moore",
    "start": "2100",
    "end": "7379"
  },
  {
    "text": "I'm a lead architect at Port and today we'll be talking about what do we mean when we say data model we're going to",
    "start": "7379",
    "end": "13799"
  },
  {
    "text": "learn how to think about what needs to be inside your developer portal should be a very cool session with a lot of",
    "start": "13799",
    "end": "19920"
  },
  {
    "text": "very relevant information so let's get started okay so what are we going to talk about",
    "start": "19920",
    "end": "26220"
  },
  {
    "text": "today first of all we're going to go through a short introduction to the world of platform engineering then we're",
    "start": "26220",
    "end": "32820"
  },
  {
    "text": "going to talk about the core pillars of a developer portal we're going to talk about what is a data model",
    "start": "32820",
    "end": "38520"
  },
  {
    "text": "why do you need one how do we Define a data model MVP what is a blueprint which",
    "start": "38520",
    "end": "45000"
  },
  {
    "text": "is a port component and we're going to go over some practical examples to create a core model and learn how to",
    "start": "45000",
    "end": "52140"
  },
  {
    "text": "extend that model once we start getting started okay so first of all an introduction to",
    "start": "52140",
    "end": "59340"
  },
  {
    "start": "56000",
    "end": "160000"
  },
  {
    "text": "platform engineering and this became the rise for developer portals and internal",
    "start": "59340",
    "end": "66180"
  },
  {
    "text": "developer platforms basically as time went on and the devops boom uh passed",
    "start": "66180",
    "end": "71939"
  },
  {
    "text": "and we reached a point where developers have so many tools they need to keep in",
    "start": "71939",
    "end": "77159"
  },
  {
    "text": "mind so many things we need to keep track of kubernetes and Argo CD and their cloud provider and their git",
    "start": "77159",
    "end": "84060"
  },
  {
    "text": "repository and all of the different tooling and it just became a very cluttered mess it became very hard to",
    "start": "84060",
    "end": "91020"
  },
  {
    "text": "find all of the correct tooling of the correct pieces of information it became",
    "start": "91020",
    "end": "96360"
  },
  {
    "text": "very hard for developers and different personas in the r d organization to keep track of everything and this brought",
    "start": "96360",
    "end": "103860"
  },
  {
    "text": "rise to the movement of platform engineering whose goal was to make an",
    "start": "103860",
    "end": "108900"
  },
  {
    "text": "organized platform that brings all that information together and exposes it in a",
    "start": "108900",
    "end": "113939"
  },
  {
    "text": "convenient way that makes sense and gives you those tailored views and also",
    "start": "113939",
    "end": "118979"
  },
  {
    "text": "gives personas more Independence on what they do giving them self-service giving",
    "start": "118979",
    "end": "124380"
  },
  {
    "text": "them an organized catalog and giving them scorecards to understand exactly",
    "start": "124380",
    "end": "129479"
  },
  {
    "text": "how they're doing with the services they're responsible and for with their development process and so on and this",
    "start": "129479",
    "end": "135959"
  },
  {
    "text": "is a process that was pushed by companies such as Spotify and Lyft and now it became a very",
    "start": "135959",
    "end": "143099"
  },
  {
    "text": "um a general movement and which is also heralded by backstage which is a project",
    "start": "143099",
    "end": "149640"
  },
  {
    "text": "of the cncf and now we're going to talk about how to build your internal",
    "start": "149640",
    "end": "156060"
  },
  {
    "text": "developer portal using a data model so first of all let's go over the core",
    "start": "156060",
    "end": "162900"
  },
  {
    "text": "pillars of a developer portal and what makes a good developer portal first of all we have the software",
    "start": "162900",
    "end": "168720"
  },
  {
    "text": "catalog the software catalog is where all the information flows into this is the visibility layer that gives us",
    "start": "168720",
    "end": "175319"
  },
  {
    "text": "inside that one pane of glass into everything that's happening in organization the services the",
    "start": "175319",
    "end": "181140"
  },
  {
    "text": "deployments the CI CD jobs and the resources we have from our cloud provider and how they all connect to one",
    "start": "181140",
    "end": "188099"
  },
  {
    "text": "another this is that one pane of glass that one tab developers need in their browser to get the answer to every",
    "start": "188099",
    "end": "194819"
  },
  {
    "text": "question they might have such as who is the current on-call what is the documentation or read me for a given",
    "start": "194819",
    "end": "200640"
  },
  {
    "text": "service and so on then we have the self-service layer we",
    "start": "200640",
    "end": "205680"
  },
  {
    "text": "want to give developers more Independence and nowadays it is very common that developers would require",
    "start": "205680",
    "end": "211340"
  },
  {
    "text": "certain resources from their devops it might require a new Cloud resource some",
    "start": "211340",
    "end": "216360"
  },
  {
    "text": "permissions we might need a temporary development environment and so on and",
    "start": "216360",
    "end": "221760"
  },
  {
    "text": "usually that revolves around finding their devops or sending a ticket or sending a slack message and usually what",
    "start": "221760",
    "end": "228659"
  },
  {
    "text": "happens in that case the devops will simply receive the request and run his own pre-made script that already",
    "start": "228659",
    "end": "235080"
  },
  {
    "text": "performs that action and tell the developer okay it's ready you can go ahead we want to save that process and",
    "start": "235080",
    "end": "242760"
  },
  {
    "text": "we want to give developers the option to Simply consume those pre-made scripts and pre-made actions through a",
    "start": "242760",
    "end": "249299"
  },
  {
    "text": "self-service layer that contains all the necessary role-based access control and",
    "start": "249299",
    "end": "254580"
  },
  {
    "text": "guardrails to make sure if developers gain more Independence but still have a",
    "start": "254580",
    "end": "260040"
  },
  {
    "text": "safe way to consume those self-service after that we have workflow automation",
    "start": "260040",
    "end": "266120"
  },
  {
    "text": "as time goes on and your developer portal becomes more robust and caters to more and more use cases the information",
    "start": "266120",
    "end": "273180"
  },
  {
    "text": "that it holds is becomes even more precious and even more valuable which",
    "start": "273180",
    "end": "278220"
  },
  {
    "text": "means that not only a Persona such as developers and devops and platform Engineers can make use of it machines",
    "start": "278220",
    "end": "285000"
  },
  {
    "text": "can make use of that information as well so we're talking scripts CI CD deployment processes and so on they can",
    "start": "285000",
    "end": "292440"
  },
  {
    "text": "all make use of the information in the software catalog to make decisions to and take control of the different",
    "start": "292440",
    "end": "300419"
  },
  {
    "text": "processes and maybe put stops where they are needed and so on and so that is the",
    "start": "300419",
    "end": "305520"
  },
  {
    "text": "workflow automation layer and we have scorecards scorecards are a way for organizations and to push",
    "start": "305520",
    "end": "312419"
  },
  {
    "text": "forward their engineering excellence and to keep track of how they are standing",
    "start": "312419",
    "end": "318000"
  },
  {
    "text": "with standards within the organization and also standards of the industry so they are able to configure scorecards",
    "start": "318000",
    "end": "324600"
  },
  {
    "text": "for the different services for their different clusters and Cloud resources and say okay I want a given microservice",
    "start": "324600",
    "end": "333539"
  },
  {
    "text": "to only have less than five Open tickets or I want him to have no critical",
    "start": "333539",
    "end": "339180"
  },
  {
    "text": "security vulnerabilities and those scorecards will give us that overview of",
    "start": "339180",
    "end": "345120"
  },
  {
    "text": "how a service is doing how is it standing with regards to our best practices and to our goal and we can",
    "start": "345120",
    "end": "352199"
  },
  {
    "text": "also push initiatives to improve the standing of that service and tell the responsible teams to take care of those",
    "start": "352199",
    "end": "361220"
  },
  {
    "text": "misalignment and anomalies to make sure that all services are in good stand",
    "start": "361220",
    "end": "367259"
  },
  {
    "text": "now of course the developer portal is surrounded by a very strong role-based Access Control layer which makes sure",
    "start": "367259",
    "end": "373919"
  },
  {
    "text": "that only the proper personas see the information they need it allows us to create those tailored views and not",
    "start": "373919",
    "end": "380160"
  },
  {
    "text": "exposing too much information to personas who don't need it to reduce that cognitive load and also to make",
    "start": "380160",
    "end": "386759"
  },
  {
    "text": "sure that certain expensive or dangerous requests or self-service actions can",
    "start": "386759",
    "end": "392580"
  },
  {
    "text": "only be performed or approved by the proper people in the organization and of course the developer portal is",
    "start": "392580",
    "end": "400620"
  },
  {
    "text": "comprised of a very strong interface so a very convenient way to consume the",
    "start": "400620",
    "end": "406199"
  },
  {
    "text": "information it will be either through the UI or through an API or through something such as a chat Ops or chat bot",
    "start": "406199",
    "end": "414240"
  },
  {
    "text": "and alongside with that with all of the information that we have in the portal we also have the r d insights and",
    "start": "414240",
    "end": "421020"
  },
  {
    "text": "reports layer which gives us visualizations over the information over what developers are doing in the portal",
    "start": "421020",
    "end": "428100"
  },
  {
    "text": "over what actions are being executed and their status and so on",
    "start": "428100",
    "end": "434419"
  },
  {
    "text": "and since today we will be talking about how to create a data model and what should our data model contain the",
    "start": "434699",
    "end": "441720"
  },
  {
    "text": "primary layer that we're going to talk about today is the software catalog now what is a data model so a data model",
    "start": "441720",
    "end": "450000"
  },
  {
    "start": "446000",
    "end": "491000"
  },
  {
    "text": "is a reference representation of the layout and architecture of the different components to make up your environment",
    "start": "450000",
    "end": "455759"
  },
  {
    "text": "and infrastructure components the goal of the data model is to make it easy to",
    "start": "455759",
    "end": "460860"
  },
  {
    "text": "understand the interdependencies in your infrastructure and how your sdlc's Tech",
    "start": "460860",
    "end": "466259"
  },
  {
    "text": "stack comes together the idea is to create a model that shows how the different pieces in your infrastructure",
    "start": "466259",
    "end": "472680"
  },
  {
    "text": "connect to one another how they speak what are the dependencies what are the interdependencies to be able to create",
    "start": "472680",
    "end": "479340"
  },
  {
    "text": "that proper cloud map showing you everything from the first line of code",
    "start": "479340",
    "end": "484380"
  },
  {
    "text": "to the service running in your cluster in your cloud provider and all of the pieces in between",
    "start": "484380",
    "end": "492060"
  },
  {
    "start": "491000",
    "end": "593000"
  },
  {
    "text": "now why do we even need a data model so every organization is a bit different",
    "start": "492060",
    "end": "497460"
  },
  {
    "text": "everybody have a different architecture they use a different set of tools they use a different cloud provider the",
    "start": "497460",
    "end": "504060"
  },
  {
    "text": "Frameworks might vary and all those changes might be very slight or very broad some organizations are completely",
    "start": "504060",
    "end": "510660"
  },
  {
    "text": "different from one another and so we need a data model that is flexible and customizable because data",
    "start": "510660",
    "end": "517860"
  },
  {
    "text": "model should serve you and it should be make it possible to build the best developer portal for your organization",
    "start": "517860",
    "end": "523800"
  },
  {
    "text": "and for your needs so that is why a flexible and dynamic data model is",
    "start": "523800",
    "end": "528899"
  },
  {
    "text": "crucial now the dynamol should reliably describe your infrastructure in a way that",
    "start": "528899",
    "end": "534899"
  },
  {
    "text": "resonates with your organization terminology architecture and workflow that means it cut it can't be a close",
    "start": "534899",
    "end": "542100"
  },
  {
    "text": "set of resources which you simply ingest information into it needs to be customizable and it's to be able to have",
    "start": "542100",
    "end": "549120"
  },
  {
    "text": "custom connections and custom properties which match what you care about and what",
    "start": "549120",
    "end": "555240"
  },
  {
    "text": "you would like to track in your developer portal and in your organization now editable is a way of addressing",
    "start": "555240",
    "end": "561899"
  },
  {
    "text": "desired use cases for the internal developer portal tracking incidents managing microservices resolving",
    "start": "561899",
    "end": "568620"
  },
  {
    "text": "vulnerabilities these will all create different initial data models and as we'll see going ahead we're gonna see",
    "start": "568620",
    "end": "575100"
  },
  {
    "text": "that we start with a core data model and we're going to explain what a core data",
    "start": "575100",
    "end": "580140"
  },
  {
    "text": "model is but we'll see that the key is to make an iterative process over the",
    "start": "580140",
    "end": "585899"
  },
  {
    "text": "data model and continue to extend it according to the needs of your usk users and their use cases",
    "start": "585899",
    "end": "593640"
  },
  {
    "start": "593000",
    "end": "676000"
  },
  {
    "text": "so how do we go about defining a data model MVP first it might seem a bit daunting to",
    "start": "593640",
    "end": "600959"
  },
  {
    "text": "create a data model but it really shouldn't be the core thing which you need to",
    "start": "600959",
    "end": "606240"
  },
  {
    "text": "remember is that while the data model is the starting point for your software catalog creating the model is an",
    "start": "606240",
    "end": "612959"
  },
  {
    "text": "iterative process as time goes on you will continue to add and modify and",
    "start": "612959",
    "end": "618420"
  },
  {
    "text": "change and delete components in the data model but the core should not frighten",
    "start": "618420",
    "end": "624300"
  },
  {
    "text": "you and it should not stop you from starting to get going and creating that",
    "start": "624300",
    "end": "629700"
  },
  {
    "text": "initial portal the idea is to get started find a particular use case and",
    "start": "629700",
    "end": "634860"
  },
  {
    "text": "which your developers want to solve which your developers have a pain point in and implementing the initial",
    "start": "634860",
    "end": "641160"
  },
  {
    "text": "blueprints that represent and solve that use case now and notice that I mentioned the term",
    "start": "641160",
    "end": "648480"
  },
  {
    "text": "blueprints a few times we're going to explain what that is in the next slide so",
    "start": "648480",
    "end": "653519"
  },
  {
    "text": "hold on now once the initial use case is implemented the goal is to continue to",
    "start": "653519",
    "end": "659339"
  },
  {
    "text": "extend the data model and Implement additional use cases and as time goes on the demo will continue to grow but again",
    "start": "659339",
    "end": "666720"
  },
  {
    "text": "because it is such a flexible object and it is perfect for that purpose it can",
    "start": "666720",
    "end": "671880"
  },
  {
    "text": "continue to adapt to your needs to the needs of your users so we talked about blueprints a bit",
    "start": "671880",
    "end": "679200"
  },
  {
    "start": "676000",
    "end": "748000"
  },
  {
    "text": "let's explain what a blueprint is so blueprints are schema definitions for any type or kind of asset in your",
    "start": "679200",
    "end": "686880"
  },
  {
    "text": "software catalog and blueprints are customizable components which make up the schema of your data model and",
    "start": "686880",
    "end": "692880"
  },
  {
    "text": "blueprints are made of properties so what does that mean you can think of a blueprint as a schema for a table in a",
    "start": "692880",
    "end": "700200"
  },
  {
    "text": "database and you can add all the different columns you want those are called properties and it should support",
    "start": "700200",
    "end": "707040"
  },
  {
    "text": "all the major types so it should go from the standard Primitives we're talking strings and numbers and booleans all the",
    "start": "707040",
    "end": "713700"
  },
  {
    "text": "way to arrays and the ability to embed markdown and users from within the portal itself and also embedding iframes",
    "start": "713700",
    "end": "721920"
  },
  {
    "text": "and to get all the information and get the most customizable and tailored",
    "start": "721920",
    "end": "727140"
  },
  {
    "text": "component in schema for your organization so in here you can see an example for a service blueprint and once",
    "start": "727140",
    "end": "735839"
  },
  {
    "text": "we start diving a bit deeper into the core model you're going to see exactly why that service blueprint is important",
    "start": "735839",
    "end": "742320"
  },
  {
    "text": "and why it looks the way it does and we're going to dive a bit deeper into that in just a few minutes",
    "start": "742320",
    "end": "748380"
  },
  {
    "start": "748000",
    "end": "821000"
  },
  {
    "text": "so let's talk about creating a core model the Chrome model is the initial set of",
    "start": "748380",
    "end": "753899"
  },
  {
    "text": "blueprints used for your first developerable use case the MVP now what that means is that this is the",
    "start": "753899",
    "end": "761700"
  },
  {
    "text": "first set of blueprints which we're going to implement and it's going to be the starting point and from which you",
    "start": "761700",
    "end": "768000"
  },
  {
    "text": "will continue to add more Blueprints and more use cases and the idea is that as your developer",
    "start": "768000",
    "end": "775380"
  },
  {
    "text": "product grows in use cases and internal adoption your data model will also grow and that initial set of blueprints will",
    "start": "775380",
    "end": "783120"
  },
  {
    "text": "evolve but in addition to that you will have more blueprints added around it and",
    "start": "783120",
    "end": "788820"
  },
  {
    "text": "that will create a more complete map and a more complete developer portal which contains the answers for all of your",
    "start": "788820",
    "end": "795360"
  },
  {
    "text": "internal use cases and all the different personas that might consume the portal now you can see here the core data model",
    "start": "795360",
    "end": "803100"
  },
  {
    "text": "that we will be talking about and we're going to start diving a bit deeper into each and every one of those components",
    "start": "803100",
    "end": "808740"
  },
  {
    "text": "like I said those are called Blueprints and we're going to see why their flexibility is matters so much and we're",
    "start": "808740",
    "end": "816120"
  },
  {
    "text": "also going to see why we went with this for the core model",
    "start": "816120",
    "end": "821820"
  },
  {
    "start": "821000",
    "end": "902000"
  },
  {
    "text": "so our core model is the sdlc core model and now let's talk a bit about motivation and explanation for why we",
    "start": "821820",
    "end": "829260"
  },
  {
    "text": "went with that so a very common core model for developer portals is a model for the software development life cycle",
    "start": "829260",
    "end": "835740"
  },
  {
    "text": "and this is something that we see all the time with different adopters of developer portals with different use",
    "start": "835740",
    "end": "841200"
  },
  {
    "text": "cases we're seeing it with users of Port we see it with users of Backstage we see it with users who Implement their own",
    "start": "841200",
    "end": "847980"
  },
  {
    "text": "developer portal internally and and the reason is that this model is",
    "start": "847980",
    "end": "853860"
  },
  {
    "text": "very easily extensible and this model also serves the core abstractions and visualizations portal",
    "start": "853860",
    "end": "860100"
  },
  {
    "text": "users need 99 of the time really every time we go and talk to a potential",
    "start": "860100",
    "end": "865320"
  },
  {
    "text": "customer and every time when we go and talk to someone who's interested in developer photos or feels he has the",
    "start": "865320",
    "end": "871139"
  },
  {
    "text": "need for a developer portal in his organization it always revolves around the sdlc use case first because that is",
    "start": "871139",
    "end": "878639"
  },
  {
    "text": "the biggest pain point so why does the sdlc core model contain",
    "start": "878639",
    "end": "883920"
  },
  {
    "text": "it contains three blueprints the first is service then we have environment and",
    "start": "883920",
    "end": "889620"
  },
  {
    "text": "finally we have running service and now we're gonna dive deeper into each and one of those specifically and understand",
    "start": "889620",
    "end": "896220"
  },
  {
    "text": "what is its goal and also what it contains and what information it exposes for us",
    "start": "896220",
    "end": "902399"
  },
  {
    "start": "902000",
    "end": "1070000"
  },
  {
    "text": "so let's start with the service blueprint the service blueprint is used to represent a static code repository",
    "start": "902399",
    "end": "908699"
  },
  {
    "text": "and its related metadata for a microservice it is very common to use the service blueprint for metadata",
    "start": "908699",
    "end": "914820"
  },
  {
    "text": "information and we have some example properties here for the servic blueprint such as the URL to the service",
    "start": "914820",
    "end": "921420"
  },
  {
    "text": "repository the team responsible for the service the language of the service the readme documentation and the service",
    "start": "921420",
    "end": "928079"
  },
  {
    "text": "architecture diagram now remember we said that blueprints are customizable",
    "start": "928079",
    "end": "933360"
  },
  {
    "text": "objects and that developing the core data model and the data model itself is",
    "start": "933360",
    "end": "938459"
  },
  {
    "text": "an iterative process so what you're seeing here is a suggestion for an initial core data model but since every",
    "start": "938459",
    "end": "946440"
  },
  {
    "text": "organization is a bit different your core data model might differ it might have an additional blueprint or two it",
    "start": "946440",
    "end": "952560"
  },
  {
    "text": "might have two properties less it doesn't matter the idea is to start with",
    "start": "952560",
    "end": "958320"
  },
  {
    "text": "a single use case that fits you and will answer the pain points of your developers and of the consumers of your",
    "start": "958320",
    "end": "964920"
  },
  {
    "text": "developer portal and we're gonna see why we went exactly with this initial set of properties in",
    "start": "964920",
    "end": "972540"
  },
  {
    "text": "the service blueprint in just a few minutes when you when we see the end result inside the developer portal uh",
    "start": "972540",
    "end": "979199"
  },
  {
    "text": "but use this as a reference use this as a guide and also keep in mind why we",
    "start": "979199",
    "end": "985019"
  },
  {
    "text": "even want all of this information so when we're talking about the service one we're talking about a static code repository we want to have all the",
    "start": "985019",
    "end": "992100"
  },
  {
    "text": "necessary information in our developer portal we don't want to run around too much and have too many open tabs and we",
    "start": "992100",
    "end": "998639"
  },
  {
    "text": "want to keep track of everything from a single place a single pane of glass in the service blueprint in the core data",
    "start": "998639",
    "end": "1005300"
  },
  {
    "text": "model is exactly that so we're talking the URL to the service repository means",
    "start": "1005300",
    "end": "1010639"
  },
  {
    "text": "we don't have to search around your git provider too much finding the team responsible for the service as the team",
    "start": "1010639",
    "end": "1017120"
  },
  {
    "text": "property means that we always know who to contact if there's an issue if you want to learn more about the service",
    "start": "1017120",
    "end": "1023480"
  },
  {
    "text": "the language of the service could make it very easy to understand if it can easily be picked up by us if we need to",
    "start": "1023480",
    "end": "1030079"
  },
  {
    "text": "add a new feature and if it needs if we need to track how many services in",
    "start": "1030079",
    "end": "1036319"
  },
  {
    "text": "organization use a particular language or maybe make sure that it's using the latest version that has no",
    "start": "1036319",
    "end": "1041540"
  },
  {
    "text": "vulnerabilities the readme documentation makes it very easy to onboard new developers and also",
    "start": "1041540",
    "end": "1047418"
  },
  {
    "text": "for existing developers to pick up the service and start using it if they need to consume it or if they need to",
    "start": "1047419",
    "end": "1053960"
  },
  {
    "text": "contribute to it and the service architecture diagram makes it very easy and resolves the need to look around",
    "start": "1053960",
    "end": "1060740"
  },
  {
    "text": "documentation for the proper architecture and the latest architecture it's all sitting right there in the",
    "start": "1060740",
    "end": "1067039"
  },
  {
    "text": "portal available for viewing instantly now let's talk about the environment",
    "start": "1067039",
    "end": "1072380"
  },
  {
    "start": "1070000",
    "end": "1193000"
  },
  {
    "text": "blueprint so the environment blueprint is used to represent an environment where microservices are deployed and",
    "start": "1072380",
    "end": "1078200"
  },
  {
    "text": "resources are hosted use the environment blueprint to keep track of the environments where services are deployed",
    "start": "1078200",
    "end": "1084440"
  },
  {
    "text": "and also gain visibility into the different environments maintained by the organization so as organizations grow",
    "start": "1084440",
    "end": "1090620"
  },
  {
    "text": "and today we are in a very Cloud native oriented development and methodology and",
    "start": "1090620",
    "end": "1096679"
  },
  {
    "text": "we see a lot of organization having multiple Cloud accounts multiple Cloud environments we work in multiple regions",
    "start": "1096679",
    "end": "1103039"
  },
  {
    "text": "serving close customers from all around the globe and so keeping track of all",
    "start": "1103039",
    "end": "1108320"
  },
  {
    "text": "these these different environments and their components and their different Cloud resources can become very",
    "start": "1108320",
    "end": "1114500"
  },
  {
    "text": "challenging and the idea for the environment blueprint is to hold all of that information to be that high level",
    "start": "1114500",
    "end": "1120679"
  },
  {
    "text": "grouping that gives us the visibility into everything everything that it contains",
    "start": "1120679",
    "end": "1126320"
  },
  {
    "text": "so in order to do that here are some common properties for the environment blueprint we're talking about the cloud",
    "start": "1126320",
    "end": "1132320"
  },
  {
    "text": "provider the environment is hosted on which can be very beneficial for companies that are in the transition",
    "start": "1132320",
    "end": "1138140"
  },
  {
    "text": "between different cloud provider or maybe they are working with a multi-cloud architecture and they need",
    "start": "1138140",
    "end": "1143240"
  },
  {
    "text": "to cap keep track of multiple Cloud environments from multiple Cloud providers",
    "start": "1143240",
    "end": "1149539"
  },
  {
    "text": "we're talking about the type of the environment so is this a production staging a test a QA environment and so",
    "start": "1149539",
    "end": "1157520"
  },
  {
    "text": "on and the region of the environment to be able to see okay and what regions are we",
    "start": "1157520",
    "end": "1164059"
  },
  {
    "text": "working on are we missing some regions for some of our clients are we upholding all of our compliance recurrence and so",
    "start": "1164059",
    "end": "1171380"
  },
  {
    "text": "on so all those things can be implemented through the environment blueprint and also as I'm going to",
    "start": "1171380",
    "end": "1179179"
  },
  {
    "text": "discuss at the end of presentation the environment blueprint is it also a good",
    "start": "1179179",
    "end": "1184280"
  },
  {
    "text": "starting point to look into things such as fin Ops and understanding the costs",
    "start": "1184280",
    "end": "1189620"
  },
  {
    "text": "of an environment hosted on the cloud now we have the running service",
    "start": "1189620",
    "end": "1195500"
  },
  {
    "start": "1193000",
    "end": "1343000"
  },
  {
    "text": "blueprint the Run service blueprint is used to provide the runtime context for a service run in a given environment now",
    "start": "1195500",
    "end": "1202460"
  },
  {
    "text": "that is important because a service on its own is just static code we said that it's just a repository it has some",
    "start": "1202460",
    "end": "1208880"
  },
  {
    "text": "metadata and the language the responsible team and so on so that is all nice and well and in addition an environment is a",
    "start": "1208880",
    "end": "1215660"
  },
  {
    "text": "collection of resources telling us what is uh what what different Cloud",
    "start": "1215660",
    "end": "1220760"
  },
  {
    "text": "providers and Cloud environments are we using if we're on a AWS or gcp or Azure",
    "start": "1220760",
    "end": "1226220"
  },
  {
    "text": "and what regions are we on but the running service is meant to bring some",
    "start": "1226220",
    "end": "1231980"
  },
  {
    "text": "runtime information and make the connection between those two blueprints so the running service blueprint gives",
    "start": "1231980",
    "end": "1239660"
  },
  {
    "text": "us the option to answer the question how is my service in production looking whether it's stats and what are some",
    "start": "1239660",
    "end": "1246440"
  },
  {
    "text": "URLs to its dashboards and monitoring dashboards and logs and what is the",
    "start": "1246440",
    "end": "1252260"
  },
  {
    "text": "current API definition and what is the URL to consume that API and so on",
    "start": "1252260",
    "end": "1257539"
  },
  {
    "text": "so all of that information is runtime information that we can only get from an",
    "start": "1257539",
    "end": "1262640"
  },
  {
    "text": "actual service running in an actual environment and this is why the running service blueprint is so important",
    "start": "1262640",
    "end": "1268340"
  },
  {
    "text": "because it gives us that runtime context that a service entity from a service",
    "start": "1268340",
    "end": "1274160"
  },
  {
    "text": "blueprint on its own does not give us and it also gives us information on where is this running and should we care",
    "start": "1274160",
    "end": "1282980"
  },
  {
    "text": "if it is not healthy for example if it's a Production Service maybe if it's a test service then we can take care of",
    "start": "1282980",
    "end": "1288860"
  },
  {
    "text": "that tomorrow we don't need to wake up the on-call developer so all that information is contained in the running",
    "start": "1288860",
    "end": "1295520"
  },
  {
    "text": "service blueprint and that is why it's so important so some common properties for the",
    "start": "1295520",
    "end": "1301520"
  },
  {
    "text": "running service blueprint is the commit hash of the deployed version and which helps us understand okay what version is",
    "start": "1301520",
    "end": "1308539"
  },
  {
    "text": "actually deployed in production right now or what version is a deployed in test right now and we would pretty soon",
    "start": "1308539",
    "end": "1315020"
  },
  {
    "text": "want to promote to production we can have the URL today grafana",
    "start": "1315020",
    "end": "1320360"
  },
  {
    "text": "dashboard to the Prometheus dashboard and we can have the Swagger API reference for that running version and",
    "start": "1320360",
    "end": "1327799"
  },
  {
    "text": "so for example if we have that version running production we can have our developers testing with that version and",
    "start": "1327799",
    "end": "1335000"
  },
  {
    "text": "learning how to use that API with their own services and in their development process and add more features",
    "start": "1335000",
    "end": "1342940"
  },
  {
    "text": "now after we have all those three blueprints in place and we have that core model what is the actual result",
    "start": "1342940",
    "end": "1350600"
  },
  {
    "start": "1343000",
    "end": "1448000"
  },
  {
    "text": "so as you can see here we have those Blueprints and we also have relations between them this is what gives us that",
    "start": "1350600",
    "end": "1357559"
  },
  {
    "text": "strong context this means that we can look at an environment and see all the different running services so we can see",
    "start": "1357559",
    "end": "1364159"
  },
  {
    "text": "everything that is currently running in production but we can also look at it from a service perspective and see for a",
    "start": "1364159",
    "end": "1371539"
  },
  {
    "text": "given service where is it currently deployed and for example if a service currently isn't running in staging and",
    "start": "1371539",
    "end": "1378140"
  },
  {
    "text": "it's only running production so we have no way to actually and reliably and test",
    "start": "1378140",
    "end": "1383360"
  },
  {
    "text": "and stress test and validate changes before we deployed production and we can also look at a given running service and",
    "start": "1383360",
    "end": "1390919"
  },
  {
    "text": "look at our running service in production and look at its metrics keep track make sure that everything is okay",
    "start": "1390919",
    "end": "1397460"
  },
  {
    "text": "and get direct access to the logs and to the API reference and so that we can",
    "start": "1397460",
    "end": "1403280"
  },
  {
    "text": "validate that everything with the service is okay it's running properly it's using the expected amount of",
    "start": "1403280",
    "end": "1408740"
  },
  {
    "text": "resources for example CPU and memory and so on so the sdlc and core model provides us",
    "start": "1408740",
    "end": "1415820"
  },
  {
    "text": "with the basic layer of visibility into our services and environments with the proper runtime context and while this",
    "start": "1415820",
    "end": "1422240"
  },
  {
    "text": "model is only the core again this is the starting point it can already provide developers with insights into real",
    "start": "1422240",
    "end": "1428000"
  },
  {
    "text": "Services the current state of the system and running information and runtime information all in a single pane of",
    "start": "1428000",
    "end": "1433700"
  },
  {
    "text": "glass and when I show you the complete example with the information already",
    "start": "1433700",
    "end": "1438919"
  },
  {
    "text": "ingested into the catalog to see exactly all the different views and different visibility insights that we can gather",
    "start": "1438919",
    "end": "1445340"
  },
  {
    "text": "from this core data model so now let's talk about extending the",
    "start": "1445340",
    "end": "1451159"
  },
  {
    "start": "1448000",
    "end": "1658000"
  },
  {
    "text": "core model remember that the core model is only the beginning it's just the starting point and designing data model",
    "start": "1451159",
    "end": "1457039"
  },
  {
    "text": "for your developer portal is an iterative process so we start small we started we start with a core model but",
    "start": "1457039",
    "end": "1462980"
  },
  {
    "text": "then we continue to iterate and build on it and extend it according to the needs",
    "start": "1462980",
    "end": "1468080"
  },
  {
    "text": "of our users and to the different use cases but we wanted the developer portal to tackle remember that the goal of the",
    "start": "1468080",
    "end": "1474080"
  },
  {
    "text": "developer portal is to be the ultimate pane of glass that one tab that developers and devops and platform",
    "start": "1474080",
    "end": "1480140"
  },
  {
    "text": "Engineers all need in their browser and it has all the information of the tailored views so they don't really need",
    "start": "1480140",
    "end": "1486260"
  },
  {
    "text": "to look around too much for different things now once you have an initial core model",
    "start": "1486260",
    "end": "1491659"
  },
  {
    "text": "in place for example the sdlc core model that we suggested you can start extending it with additional information",
    "start": "1491659",
    "end": "1497380"
  },
  {
    "text": "so some common examples for Cornwall extensions are adding CI CD pipeline",
    "start": "1497380",
    "end": "1502760"
  },
  {
    "text": "data and just in all of the different deployments the builds the service promotion tasks and that we have to",
    "start": "1502760",
    "end": "1509179"
  },
  {
    "text": "bring even more runtime and even more process information to understand exactly how the services change over",
    "start": "1509179",
    "end": "1515539"
  },
  {
    "text": "time and also for example if we have some sort of issue in our CI CD process",
    "start": "1515539",
    "end": "1521440"
  },
  {
    "text": "or if we have a lot of builds that are failing and figure out the root cause",
    "start": "1521440",
    "end": "1527000"
  },
  {
    "text": "we can talk about application security data we can look at outdated libraries or security vulnerabilities and make",
    "start": "1527000",
    "end": "1533960"
  },
  {
    "text": "sure that we're compliant with the organization's standards and requirements and we can talk about project management",
    "start": "1533960",
    "end": "1540679"
  },
  {
    "text": "data tickets Sprints projects understanding how a certain Sprint is going how many features have we already",
    "start": "1540679",
    "end": "1547700"
  },
  {
    "text": "implemented and have been deployed for a given service in a given Sprint and so",
    "start": "1547700",
    "end": "1552740"
  },
  {
    "text": "on we can talk about alerting and tracing data so incidents alerts on-call paging",
    "start": "1552740",
    "end": "1559400"
  },
  {
    "text": "and so on being able to page the on call directly from the portal if there is an",
    "start": "1559400",
    "end": "1564679"
  },
  {
    "text": "issue that we noticed for a given service for a given running service directly from the portal and means that",
    "start": "1564679",
    "end": "1571159"
  },
  {
    "text": "we have all the information in one place and then even when the on-call wakes up at 3am he simply opens the developer",
    "start": "1571159",
    "end": "1577460"
  },
  {
    "text": "portal and he has all the information that he needs straight away he doesn't need to look around too much and solving",
    "start": "1577460",
    "end": "1583880"
  },
  {
    "text": "the issue becomes a much more effective process and as I mentioned we can also add a",
    "start": "1583880",
    "end": "1590000"
  },
  {
    "text": "finops data such as how much does an environment or service or Sprint or a",
    "start": "1590000",
    "end": "1595760"
  },
  {
    "text": "given feature cost to develop and to maintain and to host and we know that",
    "start": "1595760",
    "end": "1601039"
  },
  {
    "text": "that is a highly critical information that organizations really want insight into today and a developer portal and a",
    "start": "1601039",
    "end": "1608900"
  },
  {
    "text": "core data model that can be extended to contain that finops information is crucial for organizations and they",
    "start": "1608900",
    "end": "1615440"
  },
  {
    "text": "really want to see that and that is a very popular extension of the core data",
    "start": "1615440",
    "end": "1620960"
  },
  {
    "text": "model and of course and as we said this is an iterative process you want to",
    "start": "1620960",
    "end": "1626720"
  },
  {
    "text": "continue to extend you want to continue listening to feedback which you receive from your developers from the personas",
    "start": "1626720",
    "end": "1632659"
  },
  {
    "text": "in your organization remember that the core goal of the platform engineering",
    "start": "1632659",
    "end": "1638360"
  },
  {
    "text": "developer portal movement is to improve developer experience to improve efficiency and productivity and make",
    "start": "1638360",
    "end": "1645740"
  },
  {
    "text": "lives for developers better and easier so ask your users talk to them request",
    "start": "1645740",
    "end": "1651799"
  },
  {
    "text": "feedback understand their pain points and extend the core data model according to that",
    "start": "1651799",
    "end": "1658520"
  },
  {
    "text": "so before we move to the questions I want to show you exactly what a a core",
    "start": "1658520",
    "end": "1664100"
  },
  {
    "text": "data model looks like when it's implemented so let's take a look here in the Builder",
    "start": "1664100",
    "end": "1669559"
  },
  {
    "text": "page we have the three blueprints as we mentioned for the core data model so we",
    "start": "1669559",
    "end": "1675799"
  },
  {
    "text": "have the running service environment and service Blueprints and as you can see",
    "start": "1675799",
    "end": "1681440"
  },
  {
    "text": "they contain all the properties that we've discussed and remember since we're talking about blueprints which are",
    "start": "1681440",
    "end": "1686900"
  },
  {
    "text": "simply schemas then we can always go and add properties as needed and we have all",
    "start": "1686900",
    "end": "1692659"
  },
  {
    "text": "the major types including markdown including Swagger uis and embedded URLs and so on",
    "start": "1692659",
    "end": "1699200"
  },
  {
    "text": "so um this shows you the flexibility and the power of that flexibility in the",
    "start": "1699200",
    "end": "1705320"
  },
  {
    "text": "developer portal and now let's take a look at the actual result so if we go to the catalog first of all",
    "start": "1705320",
    "end": "1711679"
  },
  {
    "text": "you'll notice that we have a page for every one of our blueprints so in the service page we can see our different",
    "start": "1711679",
    "end": "1717559"
  },
  {
    "text": "Services we can see their URLs we can see their languages we can see a link to the architecture diagram",
    "start": "1717559",
    "end": "1723679"
  },
  {
    "text": "if you look at the environment we can see our different environments we can see that we're using AWS and where we",
    "start": "1723679",
    "end": "1730100"
  },
  {
    "text": "have green environments for production test and staging and we have our running",
    "start": "1730100",
    "end": "1735200"
  },
  {
    "text": "Services we have a few instances of services running in the different environments and for the different",
    "start": "1735200",
    "end": "1740539"
  },
  {
    "text": "services and again remember this is a small example just showing the core model but",
    "start": "1740539",
    "end": "1747080"
  },
  {
    "text": "let's take a look at what visibility this already gives us so first of all if I dive into a",
    "start": "1747080",
    "end": "1753679"
  },
  {
    "text": "specific service and what I can see is first of all this is all of the runtime information provided by the running",
    "start": "1753679",
    "end": "1760159"
  },
  {
    "text": "service and blueprint and the running service entity for the authorization service running in production",
    "start": "1760159",
    "end": "1766580"
  },
  {
    "text": "and if we look at the related entities section and we can actually see that",
    "start": "1766580",
    "end": "1771799"
  },
  {
    "text": "this service is running in production and we can also see the entity for the",
    "start": "1771799",
    "end": "1777380"
  },
  {
    "text": "service itself so we can go to the repository URL we can look at the language you can look at the",
    "start": "1777380",
    "end": "1782659"
  },
  {
    "text": "architecture diagram and so on and since the data model and developer portal is",
    "start": "1782659",
    "end": "1788840"
  },
  {
    "text": "meant to show all the interdependencies between the different components we can also take a look at the graphical View",
    "start": "1788840",
    "end": "1795260"
  },
  {
    "text": "and understand exactly okay how does this running service connect to the rest of my infrastructure now remember that",
    "start": "1795260",
    "end": "1803179"
  },
  {
    "text": "when you extend the data model further and add more blueprints you will see those appear here so we'll have a",
    "start": "1803179",
    "end": "1809960"
  },
  {
    "text": "complete cloud map showing everything going from the single code line all the way to the running cloud provider the",
    "start": "1809960",
    "end": "1817340"
  },
  {
    "text": "cluster the specific a kubernetes container running that",
    "start": "1817340",
    "end": "1822740"
  },
  {
    "text": "service and all the information it contains and again as we said and we have the",
    "start": "1822740",
    "end": "1829279"
  },
  {
    "text": "Swagger API and we have the logs dashboard URL and so on and if we go",
    "start": "1829279",
    "end": "1836840"
  },
  {
    "text": "ahead and take a look from a different perspective if we take a look specifically at the production",
    "start": "1836840",
    "end": "1842360"
  },
  {
    "text": "environment we can also see all the services running in production right now",
    "start": "1842360",
    "end": "1847520"
  },
  {
    "text": "so this again as this list fills up and we and bring more information into the",
    "start": "1847520",
    "end": "1853220"
  },
  {
    "text": "developer portal and we will have a complete list of services and we'll be able to see exactly what is currently",
    "start": "1853220",
    "end": "1859039"
  },
  {
    "text": "run in production what is its status and how is it doing is it healthy is there something we need to take care of and so",
    "start": "1859039",
    "end": "1865220"
  },
  {
    "text": "on and if we go ahead and take a look at it from the authorization service point",
    "start": "1865220",
    "end": "1870980"
  },
  {
    "text": "of view we can also see all the different running instances of this service so for example we can see here",
    "start": "1870980",
    "end": "1877220"
  },
  {
    "text": "that the authorization service is currently running in production staging so that is a very good result for us",
    "start": "1877220",
    "end": "1883520"
  },
  {
    "text": "because that way we know okay we have a preprod or pre or staging environment",
    "start": "1883520",
    "end": "1889220"
  },
  {
    "text": "where we can test and validate new versions before we promote or deploy to production so we have a very",
    "start": "1889220",
    "end": "1896179"
  },
  {
    "text": "standardized sdlc process for our development and again as we said at this service",
    "start": "1896179",
    "end": "1904100"
  },
  {
    "text": "view also gives us a lot of high quality information for users one to consume",
    "start": "1904100",
    "end": "1909500"
  },
  {
    "text": "this service or learn about it so we have the readme documentation and we have the architecture diagram here and",
    "start": "1909500",
    "end": "1916820"
  },
  {
    "text": "this already gives us a lot of information that we know and I believe",
    "start": "1916820",
    "end": "1921919"
  },
  {
    "text": "that you also know if you're watching this session that developers are missing and they really want to gain insight",
    "start": "1921919",
    "end": "1928880"
  },
  {
    "text": "into this information and have that one pane of glass that provides them with all that high quality data",
    "start": "1928880",
    "end": "1935600"
  },
  {
    "text": "foreign I hope you learned a lot I hope you",
    "start": "1935600",
    "end": "1943340"
  },
  {
    "start": "1938000",
    "end": "1989000"
  },
  {
    "text": "understand now what a data model is and what a core data model is and that this",
    "start": "1943340",
    "end": "1948380"
  },
  {
    "text": "is an iterative process which you should continue to work on and improve and do",
    "start": "1948380",
    "end": "1953600"
  },
  {
    "text": "not be afraid to make the first step and do not be afraid to implement that core data model you can use dsdlc coordinator",
    "start": "1953600",
    "end": "1960559"
  },
  {
    "text": "that we've shown here or you can talk to your developers and listen to their pain point maybe they care about something",
    "start": "1960559",
    "end": "1966500"
  },
  {
    "text": "else except for the sdlc maybe they want to tackle that first so go ahead and do",
    "start": "1966500",
    "end": "1973940"
  },
  {
    "text": "that and again if you have any thoughts if you have any comments feel free to contact me my email is right here and",
    "start": "1973940",
    "end": "1980299"
  },
  {
    "text": "also feel free to reach out to us at getport.io thank you so much",
    "start": "1980299",
    "end": "1986860"
  }
]