[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "welcome everyone to uh this breakout",
    "start": "80",
    "end": "2480"
  },
  {
    "text": "session where",
    "start": "2480",
    "end": "3280"
  },
  {
    "text": "we will be talking about zero downtime",
    "start": "3280",
    "end": "5520"
  },
  {
    "text": "data relocation with peters",
    "start": "5520",
    "end": "8960"
  },
  {
    "text": "my name is deepti sigredi i'm a software",
    "start": "8960",
    "end": "11280"
  },
  {
    "text": "engineer at planetscale",
    "start": "11280",
    "end": "13120"
  },
  {
    "text": "and um i'm also a maintainer of fittest",
    "start": "13120",
    "end": "17600"
  },
  {
    "text": "i have been working on with us for",
    "start": "17600",
    "end": "20720"
  },
  {
    "text": "almost two years now and i've been a",
    "start": "20720",
    "end": "22640"
  },
  {
    "text": "maintainer for",
    "start": "22640",
    "end": "23760"
  },
  {
    "text": "over a year and my name is liz van dyke",
    "start": "23760",
    "end": "28080"
  },
  {
    "text": "i'm a solution architect with planet",
    "start": "28080",
    "end": "29760"
  },
  {
    "text": "scale um i joined the company about nine",
    "start": "29760",
    "end": "32320"
  },
  {
    "text": "months ago but",
    "start": "32320",
    "end": "33440"
  },
  {
    "text": "given everything there is to know about",
    "start": "33440",
    "end": "34960"
  },
  {
    "text": "the tests and kubernetes i still feel",
    "start": "34960",
    "end": "37040"
  },
  {
    "text": "like a newbie most of the time",
    "start": "37040",
    "end": "39040"
  },
  {
    "text": "uh my background is mainly in mysql",
    "start": "39040",
    "end": "41760"
  },
  {
    "text": "since i previously worked at a company",
    "start": "41760",
    "end": "43520"
  },
  {
    "text": "called racona",
    "start": "43520",
    "end": "44480"
  },
  {
    "text": "for about seven years and it's been",
    "start": "44480",
    "end": "46399"
  },
  {
    "text": "really exciting to",
    "start": "46399",
    "end": "47760"
  },
  {
    "text": "branch out into what i consider to be",
    "start": "47760",
    "end": "49840"
  },
  {
    "text": "the logical evolution of mysql",
    "start": "49840",
    "end": "52480"
  },
  {
    "text": "in the kubernetes-based world so",
    "start": "52480",
    "end": "55840"
  },
  {
    "text": "just to give you a little bit of",
    "start": "55840",
    "end": "57760"
  },
  {
    "text": "background on planet scale",
    "start": "57760",
    "end": "59680"
  },
  {
    "text": "our co-founders created the tests at",
    "start": "59680",
    "end": "62000"
  },
  {
    "text": "youtube about 10 years ago",
    "start": "62000",
    "end": "64320"
  },
  {
    "text": "and our mission is to make it the most",
    "start": "64320",
    "end": "66080"
  },
  {
    "text": "trusted cloud-native relational database",
    "start": "66080",
    "end": "68720"
  },
  {
    "text": "period we are headquartered in mountain",
    "start": "68720",
    "end": "71680"
  },
  {
    "text": "view california",
    "start": "71680",
    "end": "73119"
  },
  {
    "text": "um but i am personally based in portugal",
    "start": "73119",
    "end": "75520"
  },
  {
    "text": "and dp is based in nevada",
    "start": "75520",
    "end": "78799"
  },
  {
    "text": "so it's not the first time",
    "start": "78799",
    "end": "82320"
  },
  {
    "start": "80000",
    "end": "200000"
  },
  {
    "text": "we talk about data locality but it does",
    "start": "82320",
    "end": "85680"
  },
  {
    "text": "feel",
    "start": "85680",
    "end": "86000"
  },
  {
    "text": "as though every time we get to share",
    "start": "86000",
    "end": "87759"
  },
  {
    "text": "this topic it becomes more",
    "start": "87759",
    "end": "89439"
  },
  {
    "text": "relevant we are recording this just",
    "start": "89439",
    "end": "92640"
  },
  {
    "text": "weeks after the european court of",
    "start": "92640",
    "end": "94640"
  },
  {
    "text": "justice",
    "start": "94640",
    "end": "95280"
  },
  {
    "text": "repealed the usc privacy shield",
    "start": "95280",
    "end": "97920"
  },
  {
    "text": "agreement",
    "start": "97920",
    "end": "99600"
  },
  {
    "text": "particularly global hr platforms have",
    "start": "99600",
    "end": "102399"
  },
  {
    "text": "needed to pick up on this",
    "start": "102399",
    "end": "104000"
  },
  {
    "text": "you may have seen a blurb about this",
    "start": "104000",
    "end": "105759"
  },
  {
    "text": "passing through your inbox",
    "start": "105759",
    "end": "107439"
  },
  {
    "text": "but in a nutshell that agreement made it",
    "start": "107439",
    "end": "110479"
  },
  {
    "text": "easier",
    "start": "110479",
    "end": "111040"
  },
  {
    "text": "for personal data about eu citizens to",
    "start": "111040",
    "end": "113360"
  },
  {
    "text": "be exported to the united states",
    "start": "113360",
    "end": "115840"
  },
  {
    "text": "and it's just the next in a long line of",
    "start": "115840",
    "end": "118240"
  },
  {
    "text": "similar rulings that have been",
    "start": "118240",
    "end": "120240"
  },
  {
    "text": "changing the legal landscape around",
    "start": "120240",
    "end": "122240"
  },
  {
    "text": "personal data",
    "start": "122240",
    "end": "124079"
  },
  {
    "text": "more and more countries are putting",
    "start": "124079",
    "end": "125680"
  },
  {
    "text": "measures in place that require",
    "start": "125680",
    "end": "127680"
  },
  {
    "text": "personally identifiable information",
    "start": "127680",
    "end": "129759"
  },
  {
    "text": "about their citizens to be kept within",
    "start": "129759",
    "end": "132080"
  },
  {
    "text": "certain boundaries",
    "start": "132080",
    "end": "134560"
  },
  {
    "text": "and it can feel as though for now",
    "start": "134560",
    "end": "138239"
  },
  {
    "text": "these laws are targeted at very specific",
    "start": "138239",
    "end": "141120"
  },
  {
    "text": "hyperscale",
    "start": "141120",
    "end": "142000"
  },
  {
    "text": "data companies and while that's",
    "start": "142000",
    "end": "143599"
  },
  {
    "text": "certainly true",
    "start": "143599",
    "end": "145440"
  },
  {
    "text": "this is a trend that's not reversing",
    "start": "145440",
    "end": "147360"
  },
  {
    "text": "anytime soon so",
    "start": "147360",
    "end": "149440"
  },
  {
    "text": "after the ruckus of getting our",
    "start": "149440",
    "end": "151120"
  },
  {
    "text": "companies in good shape for gdpr",
    "start": "151120",
    "end": "153120"
  },
  {
    "text": "back in 2018 business leaders have been",
    "start": "153120",
    "end": "156800"
  },
  {
    "text": "rightfully aiming to get ahead of",
    "start": "156800",
    "end": "158480"
  },
  {
    "text": "whatever new requirements are coming",
    "start": "158480",
    "end": "160879"
  },
  {
    "text": "and are considering what it's going to",
    "start": "160879",
    "end": "163200"
  },
  {
    "text": "take to reshape",
    "start": "163200",
    "end": "164400"
  },
  {
    "text": "those data stores now",
    "start": "164400",
    "end": "167440"
  },
  {
    "text": "building new applications with data",
    "start": "167440",
    "end": "169200"
  },
  {
    "text": "locality in mind is",
    "start": "169200",
    "end": "170640"
  },
  {
    "text": "daunting but it's not impossible",
    "start": "170640",
    "end": "173599"
  },
  {
    "text": "implementing it",
    "start": "173599",
    "end": "174640"
  },
  {
    "text": "into existing applications that were",
    "start": "174640",
    "end": "176640"
  },
  {
    "text": "never architected for that purpose",
    "start": "176640",
    "end": "178480"
  },
  {
    "text": "is a whole different level of capacity",
    "start": "178480",
    "end": "180640"
  },
  {
    "text": "though",
    "start": "180640",
    "end": "182720"
  },
  {
    "text": "we want to show you today that the test",
    "start": "182720",
    "end": "184480"
  },
  {
    "text": "can help you avoid needing to fully",
    "start": "184480",
    "end": "186400"
  },
  {
    "text": "re-architect what you already have in",
    "start": "186400",
    "end": "188239"
  },
  {
    "text": "place",
    "start": "188239",
    "end": "189200"
  },
  {
    "text": "but it has the tools built in for",
    "start": "189200",
    "end": "191120"
  },
  {
    "text": "allowing the transition of your existing",
    "start": "191120",
    "end": "193120"
  },
  {
    "text": "data",
    "start": "193120",
    "end": "194080"
  },
  {
    "text": "and yes that it's possible to do so with",
    "start": "194080",
    "end": "196720"
  },
  {
    "text": "no downtime for the application itself",
    "start": "196720",
    "end": "200800"
  },
  {
    "start": "200000",
    "end": "355000"
  },
  {
    "text": "so let's get to the start in the story",
    "start": "200800",
    "end": "204959"
  },
  {
    "text": "i will go into some of the basics for",
    "start": "204959",
    "end": "207599"
  },
  {
    "text": "test concepts",
    "start": "207599",
    "end": "208560"
  },
  {
    "text": "to build some understanding around what",
    "start": "208560",
    "end": "210319"
  },
  {
    "text": "goes into solving this issue",
    "start": "210319",
    "end": "212239"
  },
  {
    "text": "and deeply is going to demonstrate to",
    "start": "212239",
    "end": "213920"
  },
  {
    "text": "you how to use those elements to achieve",
    "start": "213920",
    "end": "216000"
  },
  {
    "text": "our goal",
    "start": "216000",
    "end": "217680"
  },
  {
    "text": "so we have a lot going on on this",
    "start": "217680",
    "end": "219519"
  },
  {
    "text": "diagram the quickest way to explain what",
    "start": "219519",
    "end": "222720"
  },
  {
    "text": "the test",
    "start": "222720",
    "end": "223440"
  },
  {
    "text": "is is as a middleware layer between your",
    "start": "223440",
    "end": "226799"
  },
  {
    "text": "application",
    "start": "226799",
    "end": "227599"
  },
  {
    "text": "and multiple clusters of mysql servers",
    "start": "227599",
    "end": "231120"
  },
  {
    "text": "to your application on the left of the",
    "start": "231120",
    "end": "233519"
  },
  {
    "text": "dotted line",
    "start": "233519",
    "end": "234400"
  },
  {
    "text": "it presents itself as a single giant",
    "start": "234400",
    "end": "236959"
  },
  {
    "text": "mysql database",
    "start": "236959",
    "end": "238239"
  },
  {
    "text": "it speaks to sql protocol you use",
    "start": "238239",
    "end": "241040"
  },
  {
    "text": "standard mysql connectors",
    "start": "241040",
    "end": "242879"
  },
  {
    "text": "to communicate with it and it's pretty",
    "start": "242879",
    "end": "245120"
  },
  {
    "text": "straightforward",
    "start": "245120",
    "end": "246959"
  },
  {
    "text": "of course internally there's a lot more",
    "start": "246959",
    "end": "248799"
  },
  {
    "text": "complexity",
    "start": "248799",
    "end": "250319"
  },
  {
    "text": "the test is built to accommodate",
    "start": "250319",
    "end": "252480"
  },
  {
    "text": "transparent horizontal sharding",
    "start": "252480",
    "end": "254560"
  },
  {
    "text": "and there's many components that",
    "start": "254560",
    "end": "255920"
  },
  {
    "text": "contribute to that",
    "start": "255920",
    "end": "257759"
  },
  {
    "text": "just in case the concept of horizontal",
    "start": "257759",
    "end": "260400"
  },
  {
    "text": "sharding is not yet",
    "start": "260400",
    "end": "262000"
  },
  {
    "text": "100 clear the basic principle behind it",
    "start": "262000",
    "end": "265280"
  },
  {
    "text": "is that we take the data",
    "start": "265280",
    "end": "267280"
  },
  {
    "text": "within a single given table and we",
    "start": "267280",
    "end": "269520"
  },
  {
    "text": "spread it",
    "start": "269520",
    "end": "270320"
  },
  {
    "text": "across multiple shard clusters so",
    "start": "270320",
    "end": "273440"
  },
  {
    "text": "for example if you have a table that",
    "start": "273440",
    "end": "275919"
  },
  {
    "text": "contains four billion rows",
    "start": "275919",
    "end": "278000"
  },
  {
    "text": "we can spread those evenly across four",
    "start": "278000",
    "end": "280320"
  },
  {
    "text": "shards",
    "start": "280320",
    "end": "281120"
  },
  {
    "text": "containing 1 billion rows each",
    "start": "281120",
    "end": "284240"
  },
  {
    "text": "the schema for each of these shards is",
    "start": "284240",
    "end": "286240"
  },
  {
    "text": "identical",
    "start": "286240",
    "end": "287520"
  },
  {
    "text": "and to your application the data still",
    "start": "287520",
    "end": "290000"
  },
  {
    "text": "looks as though it's coming from one",
    "start": "290000",
    "end": "291600"
  },
  {
    "text": "and the same table in this talk",
    "start": "291600",
    "end": "294720"
  },
  {
    "text": "we're going to be focusing primarily on",
    "start": "294720",
    "end": "296720"
  },
  {
    "text": "what's in the query path which is",
    "start": "296720",
    "end": "298479"
  },
  {
    "text": "represented by the white line sphere",
    "start": "298479",
    "end": "301280"
  },
  {
    "text": "outside of that list btctld and our",
    "start": "301280",
    "end": "303919"
  },
  {
    "text": "topology servers",
    "start": "303919",
    "end": "305360"
  },
  {
    "text": "those help us manage the infrastructure",
    "start": "305360",
    "end": "307280"
  },
  {
    "text": "but they're kind of less relevant to our",
    "start": "307280",
    "end": "309120"
  },
  {
    "text": "talk",
    "start": "309120",
    "end": "310160"
  },
  {
    "text": "i do want to draw some special attention",
    "start": "310160",
    "end": "312639"
  },
  {
    "text": "to vt gates",
    "start": "312639",
    "end": "315759"
  },
  {
    "text": "by itself vtgate is your application's",
    "start": "315759",
    "end": "319520"
  },
  {
    "text": "entry point to the cluster",
    "start": "319520",
    "end": "321199"
  },
  {
    "text": "it's a very light stateless proxy",
    "start": "321199",
    "end": "324720"
  },
  {
    "text": "which contains an sql parser and it",
    "start": "324720",
    "end": "327280"
  },
  {
    "text": "keeps itself informed as to the state of",
    "start": "327280",
    "end": "329600"
  },
  {
    "text": "the cluster so it knows exactly how to",
    "start": "329600",
    "end": "331600"
  },
  {
    "text": "break down your requests at any given",
    "start": "331600",
    "end": "333440"
  },
  {
    "text": "time",
    "start": "333440",
    "end": "334720"
  },
  {
    "text": "it's going to transparently select the",
    "start": "334720",
    "end": "336960"
  },
  {
    "text": "correct shard for you to select from",
    "start": "336960",
    "end": "339680"
  },
  {
    "text": "and it supports and respects a very",
    "start": "339680",
    "end": "341440"
  },
  {
    "text": "large variety of",
    "start": "341440",
    "end": "343120"
  },
  {
    "text": "native sql terms like joins and",
    "start": "343120",
    "end": "345600"
  },
  {
    "text": "transactions",
    "start": "345600",
    "end": "346880"
  },
  {
    "text": "it's also got a couple of built-in",
    "start": "346880",
    "end": "348639"
  },
  {
    "text": "optimizations like",
    "start": "348639",
    "end": "350000"
  },
  {
    "text": "connection pooling to help use",
    "start": "350000",
    "end": "351680"
  },
  {
    "text": "performance",
    "start": "351680",
    "end": "354320"
  },
  {
    "text": "now zooming in on the actual cluster",
    "start": "354880",
    "end": "358400"
  },
  {
    "start": "355000",
    "end": "454000"
  },
  {
    "text": "and the shards themselves there's a",
    "start": "358400",
    "end": "360639"
  },
  {
    "text": "couple of logical",
    "start": "360639",
    "end": "361840"
  },
  {
    "text": "and physical components that help",
    "start": "361840",
    "end": "363360"
  },
  {
    "text": "establish them",
    "start": "363360",
    "end": "365120"
  },
  {
    "text": "the unified database as represented by",
    "start": "365120",
    "end": "367759"
  },
  {
    "text": "vtgate is defined",
    "start": "367759",
    "end": "369440"
  },
  {
    "text": "in the tests as a key space the key",
    "start": "369440",
    "end": "372560"
  },
  {
    "text": "space is what",
    "start": "372560",
    "end": "373360"
  },
  {
    "text": "established the logical layout of our",
    "start": "373360",
    "end": "375680"
  },
  {
    "text": "data across one",
    "start": "375680",
    "end": "377120"
  },
  {
    "text": "or multiple charts and it's defined by a",
    "start": "377120",
    "end": "379840"
  },
  {
    "text": "combination",
    "start": "379840",
    "end": "380639"
  },
  {
    "text": "of our normal mysql schema file as well",
    "start": "380639",
    "end": "383600"
  },
  {
    "text": "as something we call the v-schema",
    "start": "383600",
    "end": "386080"
  },
  {
    "text": "which describes the sharding-related",
    "start": "386080",
    "end": "388160"
  },
  {
    "text": "metadata in json format",
    "start": "388160",
    "end": "391360"
  },
  {
    "text": "the v-schema is important for us to",
    "start": "391360",
    "end": "394080"
  },
  {
    "text": "understand because it's",
    "start": "394080",
    "end": "395440"
  },
  {
    "text": "where we define our application specific",
    "start": "395440",
    "end": "398080"
  },
  {
    "text": "sharding needs",
    "start": "398080",
    "end": "399759"
  },
  {
    "text": "as well as where we collect",
    "start": "399759",
    "end": "400960"
  },
  {
    "text": "configurations for any of the test",
    "start": "400960",
    "end": "403199"
  },
  {
    "text": "specific features we'd like to use",
    "start": "403199",
    "end": "405199"
  },
  {
    "text": "on a table by table basis so effectively",
    "start": "405199",
    "end": "408400"
  },
  {
    "text": "the v-schema is where you build the",
    "start": "408400",
    "end": "410479"
  },
  {
    "text": "sharding logic for your application",
    "start": "410479",
    "end": "412800"
  },
  {
    "text": "allowing it to remain abstracted from",
    "start": "412800",
    "end": "415199"
  },
  {
    "text": "your code",
    "start": "415199",
    "end": "417280"
  },
  {
    "text": "now at its most basic definition",
    "start": "417280",
    "end": "419919"
  },
  {
    "text": "charting of tables",
    "start": "419919",
    "end": "421360"
  },
  {
    "text": "happens by assigning every row a",
    "start": "421360",
    "end": "424000"
  },
  {
    "text": "specific key space id",
    "start": "424000",
    "end": "426240"
  },
  {
    "text": "this uses a computed column the",
    "start": "426240",
    "end": "428240"
  },
  {
    "text": "so-called sharding key",
    "start": "428240",
    "end": "430560"
  },
  {
    "text": "and it will associate each row to a",
    "start": "430560",
    "end": "433599"
  },
  {
    "text": "physical address",
    "start": "433599",
    "end": "434639"
  },
  {
    "text": "in a very specific chart and that means",
    "start": "434639",
    "end": "437120"
  },
  {
    "text": "that each shard is defined as the owner",
    "start": "437120",
    "end": "439440"
  },
  {
    "text": "of a specific range of key space ids",
    "start": "439440",
    "end": "443120"
  },
  {
    "text": "the way that's established is defined in",
    "start": "443120",
    "end": "445120"
  },
  {
    "text": "the v schema and consistently",
    "start": "445120",
    "end": "447440"
  },
  {
    "text": "it's enforced by vt gates dt is going to",
    "start": "447440",
    "end": "450000"
  },
  {
    "text": "go into what that looks like in the demo",
    "start": "450000",
    "end": "453759"
  },
  {
    "text": "the shards themselves as you've seen",
    "start": "454560",
    "end": "457039"
  },
  {
    "text": "from these graphics",
    "start": "457039",
    "end": "458319"
  },
  {
    "text": "uh are not necessarily made up of the",
    "start": "458319",
    "end": "460880"
  },
  {
    "text": "single my sequences either",
    "start": "460880",
    "end": "463280"
  },
  {
    "text": "they are effectively mini clusters of",
    "start": "463280",
    "end": "465599"
  },
  {
    "text": "mysql instances",
    "start": "465599",
    "end": "466960"
  },
  {
    "text": "and all of them make use of standard",
    "start": "466960",
    "end": "468960"
  },
  {
    "text": "mysql replication",
    "start": "468960",
    "end": "470400"
  },
  {
    "text": "internally to make sure that there's",
    "start": "470400",
    "end": "473120"
  },
  {
    "text": "multiple copies of your data present",
    "start": "473120",
    "end": "475360"
  },
  {
    "text": "and to allow you to scale reads as",
    "start": "475360",
    "end": "478080"
  },
  {
    "text": "needed",
    "start": "478080",
    "end": "479360"
  },
  {
    "text": "so zooming in on what makes the mysql",
    "start": "479360",
    "end": "482879"
  },
  {
    "text": "instance a part of the test",
    "start": "482879",
    "end": "484560"
  },
  {
    "text": "we're looking at a small sidecar process",
    "start": "484560",
    "end": "487759"
  },
  {
    "text": "called the test tablet or vt tablet",
    "start": "487759",
    "end": "490800"
  },
  {
    "text": "which acts as an agent of cluster",
    "start": "490800",
    "end": "494000"
  },
  {
    "text": "awareness",
    "start": "494000",
    "end": "496160"
  },
  {
    "text": "it connects to any existing version of a",
    "start": "496160",
    "end": "498319"
  },
  {
    "text": "running mysql server",
    "start": "498319",
    "end": "499680"
  },
  {
    "text": "that can be any flavor running anywhere",
    "start": "499680",
    "end": "502479"
  },
  {
    "text": "uh",
    "start": "502479",
    "end": "502879"
  },
  {
    "text": "we also include cloud instances for that",
    "start": "502879",
    "end": "505360"
  },
  {
    "text": "like rds or aurora",
    "start": "505360",
    "end": "507599"
  },
  {
    "text": "and effectively what it does is it",
    "start": "507599",
    "end": "510479"
  },
  {
    "text": "adopts",
    "start": "510479",
    "end": "511120"
  },
  {
    "text": "that instance into the greater the test",
    "start": "511120",
    "end": "513440"
  },
  {
    "text": "cluster",
    "start": "513440",
    "end": "514159"
  },
  {
    "text": "and make sure that it's got a correct",
    "start": "514159",
    "end": "515919"
  },
  {
    "text": "copy of the data and is configured to",
    "start": "515919",
    "end": "518240"
  },
  {
    "text": "execute",
    "start": "518240",
    "end": "518880"
  },
  {
    "text": "its given role",
    "start": "518880",
    "end": "521839"
  },
  {
    "start": "522000",
    "end": "574000"
  },
  {
    "text": "now somewhere between these two layers",
    "start": "522959",
    "end": "525760"
  },
  {
    "text": "or",
    "start": "525760",
    "end": "526320"
  },
  {
    "text": "rather kind of transparently woven into",
    "start": "526320",
    "end": "530000"
  },
  {
    "text": "the logical",
    "start": "530000",
    "end": "530959"
  },
  {
    "text": "concept of the key space and the",
    "start": "530959",
    "end": "532959"
  },
  {
    "text": "physical implementation",
    "start": "532959",
    "end": "534480"
  },
  {
    "text": "of the test tablets is what we call a",
    "start": "534480",
    "end": "537200"
  },
  {
    "text": "cell",
    "start": "537200",
    "end": "538880"
  },
  {
    "text": "and the cell is analogous to what we",
    "start": "538880",
    "end": "541040"
  },
  {
    "text": "recognize as failure domains or",
    "start": "541040",
    "end": "543360"
  },
  {
    "text": "zones in kubernetes they allow us to",
    "start": "543360",
    "end": "546080"
  },
  {
    "text": "spread",
    "start": "546080",
    "end": "546720"
  },
  {
    "text": "a given key space across multiple",
    "start": "546720",
    "end": "549040"
  },
  {
    "text": "geographical",
    "start": "549040",
    "end": "550000"
  },
  {
    "text": "locations the actual definition of a",
    "start": "550000",
    "end": "553120"
  },
  {
    "text": "cell",
    "start": "553120",
    "end": "553839"
  },
  {
    "text": "doesn't need to imply geographical",
    "start": "553839",
    "end": "555920"
  },
  {
    "text": "spread and",
    "start": "555920",
    "end": "557040"
  },
  {
    "text": "we could define them as different racks",
    "start": "557040",
    "end": "559279"
  },
  {
    "text": "in the same data center",
    "start": "559279",
    "end": "561040"
  },
  {
    "text": "but for the purposes of our demo we're",
    "start": "561040",
    "end": "563680"
  },
  {
    "text": "opting to let the cells be defined as",
    "start": "563680",
    "end": "565760"
  },
  {
    "text": "the geographical boundaries for the data",
    "start": "565760",
    "end": "568560"
  },
  {
    "text": "set forth by the data locality",
    "start": "568560",
    "end": "570399"
  },
  {
    "text": "requirements",
    "start": "570399",
    "end": "573120"
  },
  {
    "start": "574000",
    "end": "668000"
  },
  {
    "text": "now to accomplish a truly",
    "start": "574880",
    "end": "578800"
  },
  {
    "text": "transparent your application",
    "start": "578800",
    "end": "580640"
  },
  {
    "text": "distribution of data",
    "start": "580640",
    "end": "583440"
  },
  {
    "text": "a normal horizontal sharding strategy is",
    "start": "583440",
    "end": "586160"
  },
  {
    "text": "not going to suffice",
    "start": "586160",
    "end": "587680"
  },
  {
    "text": "a strategy that evenly spreads your data",
    "start": "587680",
    "end": "590080"
  },
  {
    "text": "across the shards",
    "start": "590080",
    "end": "591600"
  },
  {
    "text": "we're going to need to build in some",
    "start": "591600",
    "end": "593440"
  },
  {
    "text": "additional logic",
    "start": "593440",
    "end": "594640"
  },
  {
    "text": "that's specific to the rule sets that",
    "start": "594640",
    "end": "596640"
  },
  {
    "text": "we're trying to comply with",
    "start": "596640",
    "end": "598640"
  },
  {
    "text": "and we want to keep in mind that this is",
    "start": "598640",
    "end": "600320"
  },
  {
    "text": "a moving target",
    "start": "600320",
    "end": "601760"
  },
  {
    "text": "because as we've seen in the past few",
    "start": "601760",
    "end": "603600"
  },
  {
    "text": "years those rules can be very dynamic",
    "start": "603600",
    "end": "606399"
  },
  {
    "text": "and they change rather quickly so",
    "start": "606399",
    "end": "610079"
  },
  {
    "text": "let's take a closer look at a specific",
    "start": "610079",
    "end": "612000"
  },
  {
    "text": "part of the v schema that we call the",
    "start": "612000",
    "end": "613760"
  },
  {
    "text": "the next",
    "start": "613760",
    "end": "615519"
  },
  {
    "text": "indexes provide the bridge between the",
    "start": "615519",
    "end": "617839"
  },
  {
    "text": "databases",
    "start": "617839",
    "end": "618720"
  },
  {
    "text": "column values and a specific chart's key",
    "start": "618720",
    "end": "621200"
  },
  {
    "text": "space id",
    "start": "621200",
    "end": "622800"
  },
  {
    "text": "which is the internal physical address",
    "start": "622800",
    "end": "624560"
  },
  {
    "text": "that gets attached to each row",
    "start": "624560",
    "end": "626399"
  },
  {
    "text": "and it helps establish the correct",
    "start": "626399",
    "end": "627920"
  },
  {
    "text": "shards that that will you'll use the",
    "start": "627920",
    "end": "630079"
  },
  {
    "text": "vindexes to define which columns to",
    "start": "630079",
    "end": "632320"
  },
  {
    "text": "shard on",
    "start": "632320",
    "end": "633120"
  },
  {
    "text": "and specifically which of the",
    "start": "633120",
    "end": "634880"
  },
  {
    "text": "established charting functions to use",
    "start": "634880",
    "end": "637760"
  },
  {
    "text": "now just like with normal indexes",
    "start": "637760",
    "end": "641360"
  },
  {
    "text": "charted tables need to have at least a",
    "start": "641360",
    "end": "643279"
  },
  {
    "text": "primary index",
    "start": "643279",
    "end": "645200"
  },
  {
    "text": "but you could also create secondary",
    "start": "645200",
    "end": "647120"
  },
  {
    "text": "indexes",
    "start": "647120",
    "end": "648399"
  },
  {
    "text": "now unlike a normal index in mysql",
    "start": "648399",
    "end": "651519"
  },
  {
    "text": "the indexes are not actually stored",
    "start": "651519",
    "end": "653120"
  },
  {
    "text": "anywhere on disk",
    "start": "653120",
    "end": "654880"
  },
  {
    "text": "because they are computed and they use",
    "start": "654880",
    "end": "657360"
  },
  {
    "text": "the selected charting function",
    "start": "657360",
    "end": "659600"
  },
  {
    "text": "of which there's multiple included by",
    "start": "659600",
    "end": "661680"
  },
  {
    "text": "defaulting the test",
    "start": "661680",
    "end": "663279"
  },
  {
    "text": "as well as the value for the row in the",
    "start": "663279",
    "end": "665360"
  },
  {
    "text": "specified charting column",
    "start": "665360",
    "end": "668800"
  },
  {
    "start": "668000",
    "end": "706000"
  },
  {
    "text": "to give you a quick idea here are some",
    "start": "669120",
    "end": "671839"
  },
  {
    "text": "of the included charting functions",
    "start": "671839",
    "end": "673680"
  },
  {
    "text": "already",
    "start": "673680",
    "end": "674079"
  },
  {
    "text": "present within the tests and they cover",
    "start": "674079",
    "end": "675760"
  },
  {
    "text": "a variety of common use cases",
    "start": "675760",
    "end": "678560"
  },
  {
    "text": "most often we're going to see the vendex",
    "start": "678560",
    "end": "680640"
  },
  {
    "text": "defined as a",
    "start": "680640",
    "end": "681839"
  },
  {
    "text": "simple hash for an existing primary key",
    "start": "681839",
    "end": "684959"
  },
  {
    "text": "or we could use unicode loose md5 when",
    "start": "684959",
    "end": "687600"
  },
  {
    "text": "we're using text-based columns",
    "start": "687600",
    "end": "689839"
  },
  {
    "text": "but as you can see from the numeric",
    "start": "689839",
    "end": "692079"
  },
  {
    "text": "static map",
    "start": "692079",
    "end": "693279"
  },
  {
    "text": "charting functions can also take a",
    "start": "693279",
    "end": "694959"
  },
  {
    "text": "predefined list",
    "start": "694959",
    "end": "696560"
  },
  {
    "text": "external to the database as a guide and",
    "start": "696560",
    "end": "699120"
  },
  {
    "text": "specific to this demo",
    "start": "699120",
    "end": "700720"
  },
  {
    "text": "sharding functions can be built to any",
    "start": "700720",
    "end": "702720"
  },
  {
    "text": "specification you need",
    "start": "702720",
    "end": "706079"
  },
  {
    "text": "now with all of those concepts and",
    "start": "706560",
    "end": "709279"
  },
  {
    "text": "ingredients",
    "start": "709279",
    "end": "710320"
  },
  {
    "text": "let's get back to solving the problem of",
    "start": "710320",
    "end": "712240"
  },
  {
    "text": "data locality at hand",
    "start": "712240",
    "end": "714399"
  },
  {
    "text": "what we need to get started is a clearly",
    "start": "714399",
    "end": "716480"
  },
  {
    "text": "defined list of jurisdictions",
    "start": "716480",
    "end": "718880"
  },
  {
    "text": "so a list a list of the cells across",
    "start": "718880",
    "end": "721839"
  },
  {
    "text": "which will establish our",
    "start": "721839",
    "end": "723200"
  },
  {
    "text": "space deeply is going to show you",
    "start": "723200",
    "end": "726800"
  },
  {
    "text": "how to establish a sharding function",
    "start": "726800",
    "end": "728800"
  },
  {
    "text": "that allows us to confine",
    "start": "728800",
    "end": "730279"
  },
  {
    "text": "location-specific rows to the correct",
    "start": "730279",
    "end": "732320"
  },
  {
    "text": "charts",
    "start": "732320",
    "end": "733120"
  },
  {
    "text": "and she'll show you how to execute that",
    "start": "733120",
    "end": "735120"
  },
  {
    "text": "in place beginning from an existing",
    "start": "735120",
    "end": "737760"
  },
  {
    "text": "uncharted data set",
    "start": "737760",
    "end": "740880"
  },
  {
    "start": "740000",
    "end": "899000"
  },
  {
    "text": "in this demo we have three regions and",
    "start": "741279",
    "end": "743920"
  },
  {
    "text": "eight countries",
    "start": "743920",
    "end": "744880"
  },
  {
    "text": "and the regions are americas europe and",
    "start": "744880",
    "end": "747920"
  },
  {
    "text": "asia",
    "start": "747920",
    "end": "749120"
  },
  {
    "text": "and uh the countries are u.s canada",
    "start": "749120",
    "end": "751760"
  },
  {
    "text": "france germany etc",
    "start": "751760",
    "end": "754240"
  },
  {
    "text": "so uh we are using region here in",
    "start": "754240",
    "end": "757279"
  },
  {
    "text": "the sense of the english word region",
    "start": "757279",
    "end": "760720"
  },
  {
    "text": "not specifically cloud providers region",
    "start": "760720",
    "end": "765519"
  },
  {
    "text": "but what we have done is uh",
    "start": "765519",
    "end": "769519"
  },
  {
    "text": "mapped each of these uh physical regions",
    "start": "769519",
    "end": "773200"
  },
  {
    "text": "to",
    "start": "773200",
    "end": "773920"
  },
  {
    "text": "cloud provider zones",
    "start": "773920",
    "end": "776959"
  },
  {
    "text": "the sharding scheme we will be using for",
    "start": "776959",
    "end": "779040"
  },
  {
    "text": "the demo is",
    "start": "779040",
    "end": "780160"
  },
  {
    "text": "uh to use a region json windex this is a",
    "start": "780160",
    "end": "783279"
  },
  {
    "text": "windex that is",
    "start": "783279",
    "end": "784320"
  },
  {
    "text": "a multi-column index until late last",
    "start": "784320",
    "end": "787600"
  },
  {
    "text": "year with us",
    "start": "787600",
    "end": "788399"
  },
  {
    "text": "only had a single column indexes",
    "start": "788399",
    "end": "791920"
  },
  {
    "text": "but as as we",
    "start": "791920",
    "end": "795279"
  },
  {
    "text": "realized that we should be working",
    "start": "795279",
    "end": "798000"
  },
  {
    "text": "towards",
    "start": "798000",
    "end": "799040"
  },
  {
    "text": "data locality requirements we added a",
    "start": "799040",
    "end": "802000"
  },
  {
    "text": "multi-column index",
    "start": "802000",
    "end": "803920"
  },
  {
    "text": "and what this specific region json of",
    "start": "803920",
    "end": "807120"
  },
  {
    "text": "index implementation does",
    "start": "807120",
    "end": "808800"
  },
  {
    "text": "is that it maps an id location tuple to",
    "start": "808800",
    "end": "811760"
  },
  {
    "text": "a key space id",
    "start": "811760",
    "end": "813360"
  },
  {
    "text": "and it looks up a byte",
    "start": "813360",
    "end": "816720"
  },
  {
    "text": "value for the location using the map and",
    "start": "816720",
    "end": "820079"
  },
  {
    "text": "it uses that byte value to",
    "start": "820079",
    "end": "823440"
  },
  {
    "text": "as the leading byte of the key space id",
    "start": "823440",
    "end": "826880"
  },
  {
    "text": "and that's how we achieve the",
    "start": "826880",
    "end": "828880"
  },
  {
    "text": "sharding there are three vitus cells in",
    "start": "828880",
    "end": "832000"
  },
  {
    "text": "each of these regions",
    "start": "832000",
    "end": "833600"
  },
  {
    "text": "and there's only one key space called",
    "start": "833600",
    "end": "835760"
  },
  {
    "text": "main with three shards",
    "start": "835760",
    "end": "838160"
  },
  {
    "text": "each shard is resident in three",
    "start": "838160",
    "end": "840160"
  },
  {
    "text": "different cells",
    "start": "840160",
    "end": "841279"
  },
  {
    "text": "this is because on the planet scale",
    "start": "841279",
    "end": "844000"
  },
  {
    "text": "production environment",
    "start": "844000",
    "end": "845920"
  },
  {
    "text": "whenever you deploy three instances they",
    "start": "845920",
    "end": "849440"
  },
  {
    "text": "are spread out to three different",
    "start": "849440",
    "end": "851600"
  },
  {
    "text": "cells for",
    "start": "851600",
    "end": "854639"
  },
  {
    "text": "disaster recovery purposes",
    "start": "854639",
    "end": "857839"
  },
  {
    "text": "the key space is split into three key",
    "start": "858079",
    "end": "860480"
  },
  {
    "text": "ranges",
    "start": "860480",
    "end": "861600"
  },
  {
    "text": "uh dash 40 corresponds to u.s and the",
    "start": "861600",
    "end": "864639"
  },
  {
    "text": "bike values we are using for",
    "start": "864639",
    "end": "866320"
  },
  {
    "text": "us and canada are one and two 40 to 80",
    "start": "866320",
    "end": "869760"
  },
  {
    "text": "corresponds to europe",
    "start": "869760",
    "end": "871120"
  },
  {
    "text": "and for france and germany we are using",
    "start": "871120",
    "end": "873440"
  },
  {
    "text": "the hex values",
    "start": "873440",
    "end": "874800"
  },
  {
    "text": "40 and 41 which correspond to",
    "start": "874800",
    "end": "878320"
  },
  {
    "text": "64 and 65. 80 dash",
    "start": "878320",
    "end": "882160"
  },
  {
    "text": "is asia and the byte values we are using",
    "start": "882160",
    "end": "886160"
  },
  {
    "text": "are they correspond to",
    "start": "886160",
    "end": "890320"
  },
  {
    "text": "128 129",
    "start": "890320",
    "end": "893920"
  },
  {
    "text": "and whatever c0 c1 is for india and",
    "start": "893920",
    "end": "896959"
  },
  {
    "text": "indonesia",
    "start": "896959",
    "end": "899839"
  },
  {
    "start": "899000",
    "end": "1188000"
  },
  {
    "text": "now let's get to the demo so here is our",
    "start": "899839",
    "end": "903279"
  },
  {
    "text": "demo cluster",
    "start": "903279",
    "end": "904240"
  },
  {
    "text": "and in this we have a key space called",
    "start": "904240",
    "end": "906399"
  },
  {
    "text": "main which we have already deployed",
    "start": "906399",
    "end": "909199"
  },
  {
    "text": "and in this key space we have",
    "start": "909199",
    "end": "913839"
  },
  {
    "text": "two clusters we actually have an",
    "start": "914560",
    "end": "917279"
  },
  {
    "text": "uncharted cluster",
    "start": "917279",
    "end": "920320"
  },
  {
    "text": "which we are representing with a dash to",
    "start": "920320",
    "end": "923199"
  },
  {
    "text": "denote that it covers the whole",
    "start": "923199",
    "end": "924800"
  },
  {
    "text": "key space and we have a sharded cluster",
    "start": "924800",
    "end": "928000"
  },
  {
    "text": "which has three shards dash 40 40-80 and",
    "start": "928000",
    "end": "931360"
  },
  {
    "text": "80 dash",
    "start": "931360",
    "end": "933680"
  },
  {
    "text": "we can look at the instances that we",
    "start": "933680",
    "end": "935600"
  },
  {
    "text": "have in this cluster",
    "start": "935600",
    "end": "937440"
  },
  {
    "text": "and filter them by shard so we have",
    "start": "937440",
    "end": "939839"
  },
  {
    "text": "three uncharted instances",
    "start": "939839",
    "end": "941920"
  },
  {
    "text": "one in asia one in europe one in the us",
    "start": "941920",
    "end": "945199"
  },
  {
    "text": "and in each chart we have three",
    "start": "945199",
    "end": "947199"
  },
  {
    "text": "instances but they are all located in",
    "start": "947199",
    "end": "949279"
  },
  {
    "text": "the same region",
    "start": "949279",
    "end": "950480"
  },
  {
    "text": "so for dash 40 uh we have us",
    "start": "950480",
    "end": "954800"
  },
  {
    "text": "40 to 80 all of the instances are in",
    "start": "954800",
    "end": "957199"
  },
  {
    "text": "europe",
    "start": "957199",
    "end": "958000"
  },
  {
    "text": "and 80 all of the instances are in asia",
    "start": "958000",
    "end": "963279"
  },
  {
    "text": "now that we have looked at the cluster",
    "start": "965040",
    "end": "967519"
  },
  {
    "text": "configuration",
    "start": "967519",
    "end": "968639"
  },
  {
    "text": "let's also take a look at the schema",
    "start": "968639",
    "end": "971680"
  },
  {
    "text": "and v schema",
    "start": "971680",
    "end": "974720"
  },
  {
    "text": "the schema is very simple we just have",
    "start": "975680",
    "end": "978320"
  },
  {
    "text": "one table called customer",
    "start": "978320",
    "end": "979920"
  },
  {
    "text": "it has an id field which is a unique",
    "start": "979920",
    "end": "981839"
  },
  {
    "text": "identifier",
    "start": "981839",
    "end": "983120"
  },
  {
    "text": "and a full name and national id which",
    "start": "983120",
    "end": "985759"
  },
  {
    "text": "are the personally identifiable",
    "start": "985759",
    "end": "987440"
  },
  {
    "text": "information",
    "start": "987440",
    "end": "988560"
  },
  {
    "text": "and there's a country field which is our",
    "start": "988560",
    "end": "991040"
  },
  {
    "text": "location",
    "start": "991040",
    "end": "992240"
  },
  {
    "text": "so that is the field that we are going",
    "start": "992240",
    "end": "994160"
  },
  {
    "text": "to use during the resharding to denote",
    "start": "994160",
    "end": "996800"
  },
  {
    "text": "which",
    "start": "996800",
    "end": "998240"
  },
  {
    "text": "part of the world the data should flow",
    "start": "998240",
    "end": "999920"
  },
  {
    "text": "to",
    "start": "999920",
    "end": "1002160"
  },
  {
    "text": "let's now take a a look at the v schema",
    "start": "1003519",
    "end": "1006800"
  },
  {
    "text": "that we have created",
    "start": "1006800",
    "end": "1008079"
  },
  {
    "text": "so this is um a resharding so",
    "start": "1008079",
    "end": "1012240"
  },
  {
    "text": "we have created a v schema that says",
    "start": "1012240",
    "end": "1015279"
  },
  {
    "text": "sharing is true and there is one windex",
    "start": "1015279",
    "end": "1019199"
  },
  {
    "text": "which is of type region json and we are",
    "start": "1019199",
    "end": "1022000"
  },
  {
    "text": "calling it region vdx",
    "start": "1022000",
    "end": "1024000"
  },
  {
    "text": "and we are going to give it a country to",
    "start": "1024000",
    "end": "1027520"
  },
  {
    "text": "byte map",
    "start": "1027520",
    "end": "1028720"
  },
  {
    "text": "file which contains the json and this",
    "start": "1028720",
    "end": "1031918"
  },
  {
    "text": "windex uses",
    "start": "1031919",
    "end": "1034400"
  },
  {
    "text": "one byte to represent the region",
    "start": "1034400",
    "end": "1038959"
  },
  {
    "text": "and on our customer table we create this",
    "start": "1038959",
    "end": "1042558"
  },
  {
    "text": "as a windex",
    "start": "1042559",
    "end": "1043918"
  },
  {
    "text": "and we will apply this",
    "start": "1043919",
    "end": "1046959"
  },
  {
    "text": "region vdx windex to the id and country",
    "start": "1046959",
    "end": "1050160"
  },
  {
    "text": "columns",
    "start": "1050160",
    "end": "1051600"
  },
  {
    "text": "now that we've looked at the schema",
    "start": "1051600",
    "end": "1053679"
  },
  {
    "text": "let's take a look at the data",
    "start": "1053679",
    "end": "1055520"
  },
  {
    "text": "so we have already uh pre-populated the",
    "start": "1055520",
    "end": "1058080"
  },
  {
    "text": "database with some data and after we",
    "start": "1058080",
    "end": "1060880"
  },
  {
    "text": "do the resharding we expect that this",
    "start": "1060880",
    "end": "1063360"
  },
  {
    "text": "data will show up",
    "start": "1063360",
    "end": "1064640"
  },
  {
    "text": "in the new shards",
    "start": "1064640",
    "end": "1068640"
  },
  {
    "text": "the next step is to actually go through",
    "start": "1070799",
    "end": "1072640"
  },
  {
    "text": "the resharding before we do that i want",
    "start": "1072640",
    "end": "1075039"
  },
  {
    "text": "to",
    "start": "1075039",
    "end": "1076880"
  },
  {
    "text": "i want us to look at the the traffic on",
    "start": "1076880",
    "end": "1079520"
  },
  {
    "text": "these",
    "start": "1079520",
    "end": "1081039"
  },
  {
    "text": "tablets",
    "start": "1081039",
    "end": "1083519"
  },
  {
    "text": "so we have our instances let's look at",
    "start": "1084080",
    "end": "1087600"
  },
  {
    "text": "dash our uncharted key space",
    "start": "1087600",
    "end": "1091840"
  },
  {
    "text": "and you can see that there was this",
    "start": "1091840",
    "end": "1095840"
  },
  {
    "text": "spike in qps that corresponded to when",
    "start": "1095840",
    "end": "1098400"
  },
  {
    "text": "we looked at the data",
    "start": "1098400",
    "end": "1101440"
  },
  {
    "text": "if we look at one of the other shards",
    "start": "1101919",
    "end": "1108799"
  },
  {
    "text": "then we will see that there is actually",
    "start": "1108799",
    "end": "1110640"
  },
  {
    "text": "no traffic",
    "start": "1110640",
    "end": "1111919"
  },
  {
    "text": "on the child shards they don't have any",
    "start": "1111919",
    "end": "1115440"
  },
  {
    "text": "data yet",
    "start": "1115440",
    "end": "1118080"
  },
  {
    "text": "so now let's run the resharding command",
    "start": "1121440",
    "end": "1125360"
  },
  {
    "text": "what this will do is first it will copy",
    "start": "1126559",
    "end": "1129280"
  },
  {
    "text": "uh",
    "start": "1129280",
    "end": "1129679"
  },
  {
    "text": "the schema the table definition from",
    "start": "1129679",
    "end": "1133120"
  },
  {
    "text": "the parent chart to the three shots that",
    "start": "1133120",
    "end": "1135679"
  },
  {
    "text": "we are trying to",
    "start": "1135679",
    "end": "1136880"
  },
  {
    "text": "get to and after that it will actually",
    "start": "1136880",
    "end": "1140480"
  },
  {
    "text": "copy all of the data",
    "start": "1140480",
    "end": "1142559"
  },
  {
    "text": "from the parent chart to the",
    "start": "1142559",
    "end": "1146160"
  },
  {
    "text": "new shards so if we go back",
    "start": "1146160",
    "end": "1149360"
  },
  {
    "text": "and look at one of the tablets dash 40",
    "start": "1149360",
    "end": "1154799"
  },
  {
    "text": "we will see that there was some qps",
    "start": "1154799",
    "end": "1157679"
  },
  {
    "text": "vreplication",
    "start": "1157679",
    "end": "1158960"
  },
  {
    "text": "actually wrote some data into those",
    "start": "1158960",
    "end": "1162840"
  },
  {
    "text": "tables",
    "start": "1162840",
    "end": "1165360"
  },
  {
    "text": "okay now that um the resharding has",
    "start": "1165360",
    "end": "1170320"
  },
  {
    "text": "copied the data over we",
    "start": "1170320",
    "end": "1173360"
  },
  {
    "text": "want to uh actually verify",
    "start": "1173360",
    "end": "1176799"
  },
  {
    "text": "the data but before we do that we will",
    "start": "1176799",
    "end": "1179120"
  },
  {
    "text": "switch reads so that we can read from",
    "start": "1179120",
    "end": "1181360"
  },
  {
    "text": "the",
    "start": "1181360",
    "end": "1181919"
  },
  {
    "text": "new instances so let's do that",
    "start": "1181919",
    "end": "1187120"
  },
  {
    "start": "1188000",
    "end": "1501000"
  },
  {
    "text": "so the next command we are going to run",
    "start": "1188400",
    "end": "1190480"
  },
  {
    "text": "is the switch reads command which will",
    "start": "1190480",
    "end": "1194000"
  },
  {
    "text": "divert all replica traffic to the new",
    "start": "1194000",
    "end": "1199440"
  },
  {
    "text": "shards",
    "start": "1204840",
    "end": "1207840"
  },
  {
    "text": "once that's complete we can actually now",
    "start": "1222080",
    "end": "1224640"
  },
  {
    "text": "uh",
    "start": "1224640",
    "end": "1225120"
  },
  {
    "text": "say okay this is all of our data 14 rows",
    "start": "1225120",
    "end": "1228799"
  },
  {
    "text": "but now",
    "start": "1228799",
    "end": "1230720"
  },
  {
    "text": "let's actually switch shards but",
    "start": "1230720",
    "end": "1233760"
  },
  {
    "text": "select from a replica",
    "start": "1233760",
    "end": "1236960"
  },
  {
    "text": "and we see that in this chart dash 40",
    "start": "1239039",
    "end": "1241520"
  },
  {
    "text": "there are",
    "start": "1241520",
    "end": "1242240"
  },
  {
    "text": "uh four only four rows",
    "start": "1242240",
    "end": "1245600"
  },
  {
    "text": "now let's try the next shot 40 to 80.",
    "start": "1245600",
    "end": "1250158"
  },
  {
    "text": "and this one also has four rows and all",
    "start": "1252000",
    "end": "1254240"
  },
  {
    "text": "of this data belongs to europe",
    "start": "1254240",
    "end": "1258000"
  },
  {
    "text": "the third shard dash 80 should have",
    "start": "1258559",
    "end": "1262320"
  },
  {
    "text": "all of the data that belongs to asia",
    "start": "1262320",
    "end": "1266240"
  },
  {
    "text": "oh that was the wrong shard",
    "start": "1266400",
    "end": "1269200"
  },
  {
    "text": "specification",
    "start": "1269200",
    "end": "1272000"
  },
  {
    "text": "so we see that the data has all been",
    "start": "1275679",
    "end": "1277840"
  },
  {
    "text": "copied over",
    "start": "1277840",
    "end": "1279280"
  },
  {
    "text": "uh and we can access",
    "start": "1279280",
    "end": "1282320"
  },
  {
    "text": "this data by routing uh",
    "start": "1282320",
    "end": "1285440"
  },
  {
    "text": "our queries to a replica the next step",
    "start": "1285440",
    "end": "1288480"
  },
  {
    "text": "is to switch rights so let's do that",
    "start": "1288480",
    "end": "1293280"
  },
  {
    "text": "now before we switch rights let us start",
    "start": "1293280",
    "end": "1296159"
  },
  {
    "text": "a client",
    "start": "1296159",
    "end": "1296960"
  },
  {
    "text": "so that we can see uh what happens when",
    "start": "1296960",
    "end": "1300400"
  },
  {
    "text": "you try to switch rights from",
    "start": "1300400",
    "end": "1303120"
  },
  {
    "text": "an unsharded cluster to a sharded one so",
    "start": "1303120",
    "end": "1306400"
  },
  {
    "text": "i'm going to start this client which",
    "start": "1306400",
    "end": "1309200"
  },
  {
    "text": "will just write",
    "start": "1309200",
    "end": "1310559"
  },
  {
    "text": "some rows into the main key space",
    "start": "1310559",
    "end": "1315200"
  },
  {
    "text": "and once that starts",
    "start": "1315200",
    "end": "1318400"
  },
  {
    "text": "we will switch rights",
    "start": "1318400",
    "end": "1321919"
  },
  {
    "text": "so to start with this workflow is going",
    "start": "1325120",
    "end": "1327440"
  },
  {
    "text": "to uh",
    "start": "1327440",
    "end": "1328799"
  },
  {
    "text": "compute all of the steps it needs to",
    "start": "1328799",
    "end": "1330840"
  },
  {
    "text": "perform",
    "start": "1330840",
    "end": "1332240"
  },
  {
    "text": "and once it knows what it needs to do",
    "start": "1332240",
    "end": "1336320"
  },
  {
    "text": "it'll go ahead and do it",
    "start": "1336320",
    "end": "1340158"
  },
  {
    "text": "okay so switch right",
    "start": "1340400",
    "end": "1343679"
  },
  {
    "text": "switch rights has succeeded i'm going to",
    "start": "1343679",
    "end": "1346000"
  },
  {
    "text": "let this customer writer run for a",
    "start": "1346000",
    "end": "1348000"
  },
  {
    "text": "little longer so that",
    "start": "1348000",
    "end": "1349440"
  },
  {
    "text": "we can show you the data and then",
    "start": "1349440",
    "end": "1352480"
  },
  {
    "text": "stop it let's go back and look at the",
    "start": "1352480",
    "end": "1355679"
  },
  {
    "text": "errors that we got",
    "start": "1355679",
    "end": "1357120"
  },
  {
    "text": "while uh switch rights was happening so",
    "start": "1357120",
    "end": "1360000"
  },
  {
    "text": "we have one two",
    "start": "1360000",
    "end": "1361200"
  },
  {
    "text": "three four five six about eight errors",
    "start": "1361200",
    "end": "1364400"
  },
  {
    "text": "this uh client program um",
    "start": "1364400",
    "end": "1368000"
  },
  {
    "text": "inserts about one row every half a",
    "start": "1368000",
    "end": "1370640"
  },
  {
    "text": "second",
    "start": "1370640",
    "end": "1371120"
  },
  {
    "text": "so we have eight uh errors so about",
    "start": "1371120",
    "end": "1375520"
  },
  {
    "text": "four seconds of time during which",
    "start": "1375520",
    "end": "1378640"
  },
  {
    "text": "rights to the cluster were actually",
    "start": "1378640",
    "end": "1380799"
  },
  {
    "text": "being rejected",
    "start": "1380799",
    "end": "1382799"
  },
  {
    "text": "but still uh we we are saying that this",
    "start": "1382799",
    "end": "1386320"
  },
  {
    "text": "is still zero downtime because",
    "start": "1386320",
    "end": "1388799"
  },
  {
    "text": "in a distributed system the uh",
    "start": "1388799",
    "end": "1392799"
  },
  {
    "text": "application should be able to tolerate",
    "start": "1392799",
    "end": "1395120"
  },
  {
    "text": "transient failure",
    "start": "1395120",
    "end": "1396240"
  },
  {
    "text": "and this is a transient failure because",
    "start": "1396240",
    "end": "1398640"
  },
  {
    "text": "we got a few errors and then we were",
    "start": "1398640",
    "end": "1400640"
  },
  {
    "text": "able to",
    "start": "1400640",
    "end": "1401440"
  },
  {
    "text": "go ahead and insert a whole bunch of",
    "start": "1401440",
    "end": "1403840"
  },
  {
    "text": "data afterwards",
    "start": "1403840",
    "end": "1405520"
  },
  {
    "text": "and the errors only lasted a few seconds",
    "start": "1405520",
    "end": "1408240"
  },
  {
    "text": "so",
    "start": "1408240",
    "end": "1408640"
  },
  {
    "text": "as long as applications are uh designed",
    "start": "1408640",
    "end": "1412559"
  },
  {
    "text": "to be tolerant to transient errors",
    "start": "1412559",
    "end": "1416080"
  },
  {
    "text": "the application downtime will be zero",
    "start": "1416080",
    "end": "1418240"
  },
  {
    "text": "the users will actually not see any",
    "start": "1418240",
    "end": "1420400"
  },
  {
    "text": "downtime from the application",
    "start": "1420400",
    "end": "1423919"
  },
  {
    "text": "before we wrap up the demo i do want to",
    "start": "1424720",
    "end": "1426880"
  },
  {
    "text": "show you uh",
    "start": "1426880",
    "end": "1427919"
  },
  {
    "text": "that all of this data that we inserted",
    "start": "1427919",
    "end": "1430320"
  },
  {
    "text": "actually got",
    "start": "1430320",
    "end": "1431039"
  },
  {
    "text": "into the database so now if we try to",
    "start": "1431039",
    "end": "1434720"
  },
  {
    "text": "uh select everything from customer we",
    "start": "1434720",
    "end": "1437440"
  },
  {
    "text": "have a whole bunch more",
    "start": "1437440",
    "end": "1439120"
  },
  {
    "text": "uh data and we can do what we did",
    "start": "1439120",
    "end": "1442480"
  },
  {
    "text": "earlier",
    "start": "1442480",
    "end": "1443120"
  },
  {
    "text": "again where we select from one shard at",
    "start": "1443120",
    "end": "1447039"
  },
  {
    "text": "a time",
    "start": "1447039",
    "end": "1448159"
  },
  {
    "text": "so let's start with the dash 40 shard",
    "start": "1448159",
    "end": "1451440"
  },
  {
    "text": "and this time let's do a count",
    "start": "1451440",
    "end": "1459600"
  },
  {
    "text": "and there are 23 rows",
    "start": "1459600",
    "end": "1463120"
  },
  {
    "text": "let's look at 40 to 80.",
    "start": "1463360",
    "end": "1467440"
  },
  {
    "text": "we have 16 rows",
    "start": "1469039",
    "end": "1472159"
  },
  {
    "text": "let's look at 80 dash",
    "start": "1472159",
    "end": "1475760"
  },
  {
    "text": "we have 22 rows now",
    "start": "1480159",
    "end": "1483440"
  },
  {
    "text": "let's look at the main key space",
    "start": "1483440",
    "end": "1487840"
  },
  {
    "text": "and that number should add up 23 plus 16",
    "start": "1488640",
    "end": "1491440"
  },
  {
    "text": "plus 22 is 61.",
    "start": "1491440",
    "end": "1495120"
  },
  {
    "text": "so uh that's all we have for the demo",
    "start": "1495279",
    "end": "1498159"
  },
  {
    "text": "now let's go back to the slides",
    "start": "1498159",
    "end": "1501840"
  },
  {
    "start": "1501000",
    "end": "1570000"
  },
  {
    "text": "let's recap what we did in this demo we",
    "start": "1502480",
    "end": "1505440"
  },
  {
    "text": "have a database where a geographic",
    "start": "1505440",
    "end": "1507440"
  },
  {
    "text": "location corresponds to a data column in",
    "start": "1507440",
    "end": "1509840"
  },
  {
    "text": "the database",
    "start": "1509840",
    "end": "1511120"
  },
  {
    "text": "this allows us to insert data in the",
    "start": "1511120",
    "end": "1513440"
  },
  {
    "text": "correct shard and to select from the",
    "start": "1513440",
    "end": "1515120"
  },
  {
    "text": "table",
    "start": "1515120",
    "end": "1516159"
  },
  {
    "text": "however you cannot currently use a",
    "start": "1516159",
    "end": "1518400"
  },
  {
    "text": "multi-column windex to",
    "start": "1518400",
    "end": "1519840"
  },
  {
    "text": "delete data in wittes what",
    "start": "1519840",
    "end": "1523039"
  },
  {
    "text": "is needed for that to work is to create",
    "start": "1523039",
    "end": "1525520"
  },
  {
    "text": "a single column index",
    "start": "1525520",
    "end": "1527120"
  },
  {
    "text": "and it's recommended that that should be",
    "start": "1527120",
    "end": "1530000"
  },
  {
    "text": "created on the primary key column",
    "start": "1530000",
    "end": "1532559"
  },
  {
    "text": "there is a user guide on the vitus",
    "start": "1532559",
    "end": "1534720"
  },
  {
    "text": "website",
    "start": "1534720",
    "end": "1535840"
  },
  {
    "text": "that describes how that can be done",
    "start": "1535840",
    "end": "1539440"
  },
  {
    "text": "the other thing i would like to mention",
    "start": "1539440",
    "end": "1541120"
  },
  {
    "text": "is that storing location as a data",
    "start": "1541120",
    "end": "1543919"
  },
  {
    "text": "column",
    "start": "1543919",
    "end": "1544400"
  },
  {
    "text": "is not the only way to do location based",
    "start": "1544400",
    "end": "1546960"
  },
  {
    "text": "sharding",
    "start": "1546960",
    "end": "1547760"
  },
  {
    "text": "perhaps there is already a column",
    "start": "1547760",
    "end": "1550880"
  },
  {
    "text": "that includes encoded location",
    "start": "1550880",
    "end": "1553520"
  },
  {
    "text": "information",
    "start": "1553520",
    "end": "1554559"
  },
  {
    "text": "along with the primary key if such a",
    "start": "1554559",
    "end": "1557760"
  },
  {
    "text": "thing exists then",
    "start": "1557760",
    "end": "1559279"
  },
  {
    "text": "you can write a custom index that",
    "start": "1559279",
    "end": "1561440"
  },
  {
    "text": "decodes the location",
    "start": "1561440",
    "end": "1562720"
  },
  {
    "text": "information from the data column",
    "start": "1562720",
    "end": "1566080"
  },
  {
    "text": "and achieves the sharding",
    "start": "1566080",
    "end": "1571039"
  },
  {
    "text": "we have a number of talks at the",
    "start": "1571039",
    "end": "1572559"
  },
  {
    "text": "conference there were two yesterday and",
    "start": "1572559",
    "end": "1575679"
  },
  {
    "text": "if you miss them you might want to catch",
    "start": "1575679",
    "end": "1577520"
  },
  {
    "text": "up with the recordings",
    "start": "1577520",
    "end": "1579039"
  },
  {
    "text": "and there are two more talks coming up",
    "start": "1579039",
    "end": "1581919"
  },
  {
    "text": "one",
    "start": "1581919",
    "end": "1582240"
  },
  {
    "text": "is deep dive into witness and the other",
    "start": "1582240",
    "end": "1585200"
  },
  {
    "text": "one",
    "start": "1585200",
    "end": "1585520"
  },
  {
    "text": "is a multi-cloud with a stock and these",
    "start": "1585520",
    "end": "1589039"
  },
  {
    "text": "are happening in about an hour or so",
    "start": "1589039",
    "end": "1593278"
  },
  {
    "text": "that's all we have thank you very much",
    "start": "1594080",
    "end": "1599120"
  }
]