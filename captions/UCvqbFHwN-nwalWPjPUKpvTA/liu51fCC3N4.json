[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "thank you all for joining us today my",
    "start": "80",
    "end": "1599"
  },
  {
    "text": "name is vanilla and i work with manish",
    "start": "1599",
    "end": "3919"
  },
  {
    "text": "on",
    "start": "3919",
    "end": "4240"
  },
  {
    "text": "transit service mesh at vmware and today",
    "start": "4240",
    "end": "6879"
  },
  {
    "text": "we will be talking about some security",
    "start": "6879",
    "end": "8800"
  },
  {
    "text": "patterns",
    "start": "8800",
    "end": "9599"
  },
  {
    "text": "in the context topic service mesh to",
    "start": "9599",
    "end": "12639"
  },
  {
    "text": "begin with here is a very simple system",
    "start": "12639",
    "end": "14559"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "where",
    "start": "14559",
    "end": "15200"
  },
  {
    "text": "a user is sending requests to a service",
    "start": "15200",
    "end": "17920"
  },
  {
    "text": "and those are being routed into the",
    "start": "17920",
    "end": "19520"
  },
  {
    "text": "cluster through the ingress gateway",
    "start": "19520",
    "end": "21600"
  },
  {
    "text": "now the english gateway then forwards",
    "start": "21600",
    "end": "24000"
  },
  {
    "text": "these requests",
    "start": "24000",
    "end": "25439"
  },
  {
    "text": "to a destination service like the user",
    "start": "25439",
    "end": "27680"
  },
  {
    "text": "service or the location service",
    "start": "27680",
    "end": "30080"
  },
  {
    "text": "and these can in turn make requests to",
    "start": "30080",
    "end": "32398"
  },
  {
    "text": "each other",
    "start": "32399",
    "end": "33760"
  },
  {
    "text": "the user service here is also storing",
    "start": "33760",
    "end": "36320"
  },
  {
    "text": "data in the database",
    "start": "36320",
    "end": "38079"
  },
  {
    "text": "while the location service accesses a",
    "start": "38079",
    "end": "40320"
  },
  {
    "text": "third party api",
    "start": "40320",
    "end": "42160"
  },
  {
    "text": "and therefore those requests are being",
    "start": "42160",
    "end": "44800"
  },
  {
    "text": "routed outside of the cluster",
    "start": "44800",
    "end": "46719"
  },
  {
    "text": "through the iges gateway let's now look",
    "start": "46719",
    "end": "49920"
  },
  {
    "text": "at how we can secure the ingress",
    "start": "49920",
    "end": "52320"
  },
  {
    "text": "using some of these patterns the first",
    "start": "52320",
    "end": "55600"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "pattern here is",
    "start": "55600",
    "end": "56640"
  },
  {
    "text": "very simple it's called authentication",
    "start": "56640",
    "end": "58399"
  },
  {
    "text": "with tls",
    "start": "58399",
    "end": "59760"
  },
  {
    "text": "what we do here is that we provision a",
    "start": "59760",
    "end": "61840"
  },
  {
    "text": "certificate",
    "start": "61840",
    "end": "62879"
  },
  {
    "text": "for the english gateway and these are",
    "start": "62879",
    "end": "65040"
  },
  {
    "text": "programmed into the ingress gateway by",
    "start": "65040",
    "end": "66960"
  },
  {
    "text": "the cluster administrator",
    "start": "66960",
    "end": "68880"
  },
  {
    "text": "or the managing mesh and the user",
    "start": "68880",
    "end": "72000"
  },
  {
    "text": "can use these search to perform tls",
    "start": "72000",
    "end": "75360"
  },
  {
    "text": "communication with the ingress a",
    "start": "75360",
    "end": "78159"
  },
  {
    "text": "slightly enhanced version of this",
    "start": "78159",
    "end": "80080"
  },
  {
    "text": "is authentication with mtls where we",
    "start": "80080",
    "end": "83280"
  },
  {
    "text": "also have a",
    "start": "83280",
    "end": "84320"
  },
  {
    "text": "certificate for the requesting user",
    "start": "84320",
    "end": "87759"
  },
  {
    "text": "and you can think of this user as some",
    "start": "87759",
    "end": "89520"
  },
  {
    "text": "sort of a mobile client or a",
    "start": "89520",
    "end": "92240"
  },
  {
    "text": "service that we want to establish trust",
    "start": "92240",
    "end": "94960"
  },
  {
    "text": "on",
    "start": "94960",
    "end": "95840"
  },
  {
    "text": "and therefore we have search for both",
    "start": "95840",
    "end": "97680"
  },
  {
    "text": "the",
    "start": "97680",
    "end": "99360"
  },
  {
    "text": "user requesting a particular endpoint",
    "start": "99360",
    "end": "102799"
  },
  {
    "text": "and the gateway itself",
    "start": "102799",
    "end": "106159"
  },
  {
    "text": "the third pattern here is called",
    "start": "106479",
    "end": "107920"
  },
  {
    "text": "passthrough at the ingress",
    "start": "107920",
    "end": "109759"
  },
  {
    "text": "where the tls is not terminated at the",
    "start": "109759",
    "end": "112320"
  },
  {
    "text": "ingress itself",
    "start": "112320",
    "end": "113600"
  },
  {
    "text": "but it is forwarded to the destination",
    "start": "113600",
    "end": "115759"
  },
  {
    "text": "service in this case",
    "start": "115759",
    "end": "117200"
  },
  {
    "text": "the user service so the user is sending",
    "start": "117200",
    "end": "120320"
  },
  {
    "text": "requests",
    "start": "120320",
    "end": "121280"
  },
  {
    "text": "and the english is looking at the sni",
    "start": "121280",
    "end": "123280"
  },
  {
    "text": "header and forwarding these",
    "start": "123280",
    "end": "126479"
  },
  {
    "text": "requests to the destination service and",
    "start": "126479",
    "end": "130239"
  },
  {
    "text": "the challenge here is that in this",
    "start": "130239",
    "end": "132239"
  },
  {
    "text": "gateway cannot do path based",
    "start": "132239",
    "end": "134480"
  },
  {
    "text": "routing because it only looks at the s",
    "start": "134480",
    "end": "136800"
  },
  {
    "text": "header and not the request itself",
    "start": "136800",
    "end": "140560"
  },
  {
    "text": "the fourth pattern here is external",
    "start": "141599",
    "end": "143440"
  },
  {
    "text": "authentication",
    "start": "143440",
    "end": "144800"
  },
  {
    "text": "here what we do is we embed certain",
    "start": "144800",
    "end": "147280"
  },
  {
    "text": "tokens like a jaw token or some other",
    "start": "147280",
    "end": "149280"
  },
  {
    "text": "kind of a token",
    "start": "149280",
    "end": "150640"
  },
  {
    "text": "in the user's request and the ingress",
    "start": "150640",
    "end": "152879"
  },
  {
    "text": "gateway can then forward these",
    "start": "152879",
    "end": "154800"
  },
  {
    "text": "tokens to a third party identity",
    "start": "154800",
    "end": "157360"
  },
  {
    "text": "provider",
    "start": "157360",
    "end": "158160"
  },
  {
    "text": "which can then verify these tokens and",
    "start": "158160",
    "end": "161280"
  },
  {
    "text": "return a response to the gateway and the",
    "start": "161280",
    "end": "163760"
  },
  {
    "text": "gateway can then consume this response",
    "start": "163760",
    "end": "165920"
  },
  {
    "text": "and forward or deny the request based on",
    "start": "165920",
    "end": "168640"
  },
  {
    "text": "whatever the",
    "start": "168640",
    "end": "169440"
  },
  {
    "text": "identity provider response pattern",
    "start": "169440",
    "end": "174560"
  },
  {
    "text": "now that the request enters has entered",
    "start": "175360",
    "end": "177440"
  },
  {
    "text": "the mesh we can look at",
    "start": "177440",
    "end": "179200"
  },
  {
    "text": "some of these mesh workload patterns",
    "start": "179200",
    "end": "180879"
  },
  {
    "text": "which we can use for",
    "start": "180879",
    "end": "182319"
  },
  {
    "text": "securing the services within the mesh",
    "start": "182319",
    "end": "186159"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "the first pattern here here is called",
    "start": "186159",
    "end": "188239"
  },
  {
    "text": "permissive mtls",
    "start": "188239",
    "end": "190000"
  },
  {
    "text": "what this means is that the location",
    "start": "190000",
    "end": "192640"
  },
  {
    "text": "service here which has this setting",
    "start": "192640",
    "end": "194480"
  },
  {
    "text": "enabled",
    "start": "194480",
    "end": "195360"
  },
  {
    "text": "will accept both mtls traffic as well as",
    "start": "195360",
    "end": "197920"
  },
  {
    "text": "plain text traffic",
    "start": "197920",
    "end": "199519"
  },
  {
    "text": "so the user service in this case is",
    "start": "199519",
    "end": "201680"
  },
  {
    "text": "sending plain text requests",
    "start": "201680",
    "end": "203599"
  },
  {
    "text": "to the location service which is okay",
    "start": "203599",
    "end": "205840"
  },
  {
    "text": "and it accepts those",
    "start": "205840",
    "end": "207360"
  },
  {
    "text": "and it will also accept any requests",
    "start": "207360",
    "end": "209280"
  },
  {
    "text": "coming from a",
    "start": "209280",
    "end": "210799"
  },
  {
    "text": "source service that our mdl is encrypted",
    "start": "210799",
    "end": "214480"
  },
  {
    "text": "and this pattern actually allows you to",
    "start": "214480",
    "end": "216799"
  },
  {
    "text": "migrate your workloads from a plain text",
    "start": "216799",
    "end": "219120"
  },
  {
    "text": "mode to",
    "start": "219120",
    "end": "219760"
  },
  {
    "text": "mtls",
    "start": "219760",
    "end": "222319"
  },
  {
    "text": "for example the user service here can",
    "start": "222799",
    "end": "224720"
  },
  {
    "text": "now migrate into mtls",
    "start": "224720",
    "end": "227120"
  },
  {
    "text": "by having its own cert provisioned by",
    "start": "227120",
    "end": "229120"
  },
  {
    "text": "the ca in the mesh",
    "start": "229120",
    "end": "231519"
  },
  {
    "text": "or some some other ca and now",
    "start": "231519",
    "end": "235280"
  },
  {
    "text": "you can also have strict mtls between",
    "start": "235280",
    "end": "238239"
  },
  {
    "text": "these two",
    "start": "238239",
    "end": "239439"
  },
  {
    "text": "services this basically means that you",
    "start": "239439",
    "end": "242080"
  },
  {
    "text": "cannot have plain text coming",
    "start": "242080",
    "end": "243599"
  },
  {
    "text": "in communication between these two",
    "start": "243599",
    "end": "245200"
  },
  {
    "text": "services",
    "start": "245200",
    "end": "247680"
  },
  {
    "text": "the third pattern here is called",
    "start": "248319",
    "end": "249840"
  },
  {
    "text": "workload authorization where you",
    "start": "249840",
    "end": "251680"
  },
  {
    "text": "essentially perform r back",
    "start": "251680",
    "end": "253599"
  },
  {
    "text": "so we want to prevent access on the",
    "start": "253599",
    "end": "256320"
  },
  {
    "text": "database service",
    "start": "256320",
    "end": "257919"
  },
  {
    "text": "from any service that's not really a",
    "start": "257919",
    "end": "260880"
  },
  {
    "text": "verified source",
    "start": "260880",
    "end": "262800"
  },
  {
    "text": "in this case we want the user service to",
    "start": "262800",
    "end": "265520"
  },
  {
    "text": "access",
    "start": "265520",
    "end": "266000"
  },
  {
    "text": "the database service but not the",
    "start": "266000",
    "end": "267919"
  },
  {
    "text": "location service",
    "start": "267919",
    "end": "269280"
  },
  {
    "text": "we can use the namespace or some service",
    "start": "269280",
    "end": "271440"
  },
  {
    "text": "labels",
    "start": "271440",
    "end": "272320"
  },
  {
    "text": "we can look at the ip address or we can",
    "start": "272320",
    "end": "274400"
  },
  {
    "text": "even look at",
    "start": "274400",
    "end": "275600"
  },
  {
    "text": "the the service account on these",
    "start": "275600",
    "end": "277840"
  },
  {
    "text": "services",
    "start": "277840",
    "end": "278800"
  },
  {
    "text": "and enable these are back policies",
    "start": "278800",
    "end": "283840"
  },
  {
    "text": "the next pattern here is end user",
    "start": "284800",
    "end": "286720"
  },
  {
    "text": "authorization",
    "start": "286720",
    "end": "287919"
  },
  {
    "text": "here what we do is we again look at the",
    "start": "287919",
    "end": "290880"
  },
  {
    "text": "jot token",
    "start": "290880",
    "end": "291840"
  },
  {
    "text": "in the incoming request and the english",
    "start": "291840",
    "end": "294160"
  },
  {
    "text": "gateway can validate and forward these",
    "start": "294160",
    "end": "296720"
  },
  {
    "text": "tokens to the destination service",
    "start": "296720",
    "end": "300160"
  },
  {
    "text": "and now the destination service can have",
    "start": "300160",
    "end": "303199"
  },
  {
    "text": "certain",
    "start": "303199",
    "end": "303919"
  },
  {
    "text": "rules for example in this case we want",
    "start": "303919",
    "end": "306960"
  },
  {
    "text": "the claim in the job token to at least",
    "start": "306960",
    "end": "308720"
  },
  {
    "text": "match",
    "start": "308720",
    "end": "309759"
  },
  {
    "text": "principal user here and such requests",
    "start": "309759",
    "end": "313120"
  },
  {
    "text": "coming from this particular user",
    "start": "313120",
    "end": "314960"
  },
  {
    "text": "will be allowed at the location service",
    "start": "314960",
    "end": "316800"
  },
  {
    "text": "because the principle here is matching",
    "start": "316800",
    "end": "319600"
  },
  {
    "text": "but in the case of the user service we",
    "start": "319600",
    "end": "321759"
  },
  {
    "text": "don't allow such requests",
    "start": "321759",
    "end": "323440"
  },
  {
    "text": "because the user only has a claim of",
    "start": "323440",
    "end": "326479"
  },
  {
    "text": "principal user but we require principal",
    "start": "326479",
    "end": "329520"
  },
  {
    "text": "admin for the user service",
    "start": "329520",
    "end": "333120"
  },
  {
    "text": "last but not the least this is a very",
    "start": "333759",
    "end": "335199"
  },
  {
    "text": "interesting pattern where you can extend",
    "start": "335199",
    "end": "337039"
  },
  {
    "text": "these",
    "start": "337039",
    "end": "337680"
  },
  {
    "text": "sidecar proxies using web assembly",
    "start": "337680",
    "end": "340800"
  },
  {
    "text": "and what this means is that you can",
    "start": "340800",
    "end": "342479"
  },
  {
    "text": "create your own custom plugins",
    "start": "342479",
    "end": "344560"
  },
  {
    "text": "or you can have custom policies built",
    "start": "344560",
    "end": "346800"
  },
  {
    "text": "into these sidecars",
    "start": "346800",
    "end": "348560"
  },
  {
    "text": "and the incoming traffic can then be",
    "start": "348560",
    "end": "351360"
  },
  {
    "text": "validated",
    "start": "351360",
    "end": "352080"
  },
  {
    "text": "and authorized based on custom",
    "start": "352080",
    "end": "354000"
  },
  {
    "text": "attributes",
    "start": "354000",
    "end": "356639"
  },
  {
    "text": "now that the traffic has entered the",
    "start": "357680",
    "end": "359199"
  },
  {
    "text": "mesh it's time for us to look at some",
    "start": "359199",
    "end": "361600"
  },
  {
    "text": "egress gateway patterns",
    "start": "361600",
    "end": "364880"
  },
  {
    "start": "365000",
    "end": "365000"
  },
  {
    "text": "so as the requests are leaving this mesh",
    "start": "365440",
    "end": "368160"
  },
  {
    "text": "you can",
    "start": "368160",
    "end": "368720"
  },
  {
    "text": "totally deny such requests by just",
    "start": "368720",
    "end": "372000"
  },
  {
    "text": "enabling",
    "start": "372000",
    "end": "372960"
  },
  {
    "text": "a flag that says um registry only in",
    "start": "372960",
    "end": "377039"
  },
  {
    "text": "in the case of istio where all the side",
    "start": "377039",
    "end": "379199"
  },
  {
    "text": "cars will deny",
    "start": "379199",
    "end": "381039"
  },
  {
    "text": "all end points outside of the mesh",
    "start": "381039",
    "end": "384639"
  },
  {
    "text": "and only the ones that have been",
    "start": "384639",
    "end": "386319"
  },
  {
    "text": "registered in the registry",
    "start": "386319",
    "end": "388479"
  },
  {
    "text": "will be allowed access",
    "start": "388479",
    "end": "391600"
  },
  {
    "text": "the next pattern here is called tls pass",
    "start": "393600",
    "end": "395600"
  },
  {
    "text": "through what we do here is we",
    "start": "395600",
    "end": "397759"
  },
  {
    "text": "have tls origination done at the",
    "start": "397759",
    "end": "400160"
  },
  {
    "text": "location service",
    "start": "400160",
    "end": "401759"
  },
  {
    "text": "and the egress gateway is simply doing a",
    "start": "401759",
    "end": "403759"
  },
  {
    "text": "pass through",
    "start": "403759",
    "end": "406240"
  },
  {
    "text": "the next pattern here is kind of",
    "start": "406960",
    "end": "408960"
  },
  {
    "text": "interesting because",
    "start": "408960",
    "end": "410240"
  },
  {
    "text": "security administrators can easily apply",
    "start": "410240",
    "end": "413120"
  },
  {
    "text": "this on the egress gateway",
    "start": "413120",
    "end": "414800"
  },
  {
    "text": "so even though the traffic within your",
    "start": "414800",
    "end": "416479"
  },
  {
    "text": "meshes plain text",
    "start": "416479",
    "end": "418000"
  },
  {
    "text": "all the traffic leaving the cluster can",
    "start": "418000",
    "end": "420080"
  },
  {
    "text": "be",
    "start": "420080",
    "end": "421039"
  },
  {
    "text": "encrypted using tls using this tls",
    "start": "421039",
    "end": "424720"
  },
  {
    "text": "origination at the egress",
    "start": "424720",
    "end": "427919"
  },
  {
    "text": "and the last pattern here is mtls",
    "start": "428479",
    "end": "431199"
  },
  {
    "text": "origination at the igris",
    "start": "431199",
    "end": "432720"
  },
  {
    "text": "which is very similar to the tls",
    "start": "432720",
    "end": "434319"
  },
  {
    "text": "origination just that we will also",
    "start": "434319",
    "end": "436560"
  },
  {
    "text": "verify",
    "start": "436560",
    "end": "437039"
  },
  {
    "text": "verify the destination workload",
    "start": "437039",
    "end": "440800"
  },
  {
    "text": "now i will hand it over to manish who",
    "start": "441599",
    "end": "443360"
  },
  {
    "text": "will be talking about some advanced",
    "start": "443360",
    "end": "444880"
  },
  {
    "text": "patterns in service mesh",
    "start": "444880",
    "end": "448240"
  },
  {
    "text": "thanks reynold for going to an example",
    "start": "449120",
    "end": "450880"
  },
  {
    "text": "to show how service mesh provides",
    "start": "450880",
    "end": "452400"
  },
  {
    "text": "security at various levels",
    "start": "452400",
    "end": "454720"
  },
  {
    "text": "whether it's to do with certificate",
    "start": "454720",
    "end": "456160"
  },
  {
    "text": "management or authentication at an end",
    "start": "456160",
    "end": "459120"
  },
  {
    "text": "user level or between two services",
    "start": "459120",
    "end": "460880"
  },
  {
    "text": "within the mesh",
    "start": "460880",
    "end": "462080"
  },
  {
    "text": "or authorization to control access to",
    "start": "462080",
    "end": "464080"
  },
  {
    "text": "the services",
    "start": "464080",
    "end": "465919"
  },
  {
    "text": "but what comprises of an application",
    "start": "465919",
    "end": "467680"
  },
  {
    "text": "these days is a little complex than the",
    "start": "467680",
    "end": "469840"
  },
  {
    "text": "example that we talked about",
    "start": "469840",
    "end": "471840"
  },
  {
    "text": "usually it is a set of services which",
    "start": "471840",
    "end": "474560"
  },
  {
    "text": "are not only deployed",
    "start": "474560",
    "end": "475680"
  },
  {
    "text": "and communicating within a single",
    "start": "475680",
    "end": "477520"
  },
  {
    "text": "cluster but across multiple clusters",
    "start": "477520",
    "end": "480160"
  },
  {
    "text": "clouds",
    "start": "480160",
    "end": "480879"
  },
  {
    "text": "or even infrastructures so how do we",
    "start": "480879",
    "end": "483599"
  },
  {
    "text": "extend service mesh",
    "start": "483599",
    "end": "484960"
  },
  {
    "text": "and how do we secure communications",
    "start": "484960",
    "end": "486800"
  },
  {
    "text": "between services across clusters",
    "start": "486800",
    "end": "488720"
  },
  {
    "text": "for example the two common patterns",
    "start": "488720",
    "end": "492560"
  },
  {
    "text": "that we see are that ingress and egress",
    "start": "492560",
    "end": "495840"
  },
  {
    "start": "495000",
    "end": "495000"
  },
  {
    "text": "gateways through which the",
    "start": "495840",
    "end": "496800"
  },
  {
    "text": "communications happen",
    "start": "496800",
    "end": "498240"
  },
  {
    "text": "are mutually authenticated and the",
    "start": "498240",
    "end": "500560"
  },
  {
    "text": "traffic is encrypted between them",
    "start": "500560",
    "end": "502720"
  },
  {
    "text": "the traffic between the services to the",
    "start": "502720",
    "end": "504960"
  },
  {
    "text": "gateway within each of the clusters may",
    "start": "504960",
    "end": "506800"
  },
  {
    "text": "or may not be encrypted",
    "start": "506800",
    "end": "510080"
  },
  {
    "text": "the second pattern that we see is that",
    "start": "510240",
    "end": "512240"
  },
  {
    "text": "services themselves are mutually",
    "start": "512240",
    "end": "513839"
  },
  {
    "text": "authenticated across clusters",
    "start": "513839",
    "end": "515760"
  },
  {
    "text": "in this case the gateways are configured",
    "start": "515760",
    "end": "517360"
  },
  {
    "text": "in the pass-through mode and routing is",
    "start": "517360",
    "end": "519599"
  },
  {
    "text": "done",
    "start": "519599",
    "end": "520320"
  },
  {
    "text": "based on sni in both these cases though",
    "start": "520320",
    "end": "524159"
  },
  {
    "text": "there is a requirement of a common group",
    "start": "524159",
    "end": "526720"
  },
  {
    "text": "where the local cas on individual",
    "start": "526720",
    "end": "528480"
  },
  {
    "text": "clusters now act as intermediates",
    "start": "528480",
    "end": "531360"
  },
  {
    "text": "this is normally done by some kind of",
    "start": "531360",
    "end": "532959"
  },
  {
    "text": "automation or an external global",
    "start": "532959",
    "end": "534959"
  },
  {
    "text": "controller which manages and extends the",
    "start": "534959",
    "end": "537200"
  },
  {
    "text": "service mesh",
    "start": "537200",
    "end": "539200"
  },
  {
    "start": "539000",
    "end": "539000"
  },
  {
    "text": "now getting back to within the mesh when",
    "start": "539200",
    "end": "541120"
  },
  {
    "text": "we talked about how we can define",
    "start": "541120",
    "end": "543200"
  },
  {
    "text": "find vein our back day back by utilizing",
    "start": "543200",
    "end": "546640"
  },
  {
    "text": "the workload identities provided by the",
    "start": "546640",
    "end": "548560"
  },
  {
    "text": "mesh",
    "start": "548560",
    "end": "549519"
  },
  {
    "text": "or the intrinsic attributes that have",
    "start": "549519",
    "end": "551360"
  },
  {
    "text": "either been released through the",
    "start": "551360",
    "end": "552560"
  },
  {
    "text": "transaction",
    "start": "552560",
    "end": "553600"
  },
  {
    "text": "or gathered by inspecting the traffic at",
    "start": "553600",
    "end": "555519"
  },
  {
    "text": "every hop",
    "start": "555519",
    "end": "557200"
  },
  {
    "text": "we're also seeing a pattern where the",
    "start": "557200",
    "end": "558800"
  },
  {
    "text": "service mesh capabilities are being",
    "start": "558800",
    "end": "560320"
  },
  {
    "text": "extended to derive more",
    "start": "560320",
    "end": "561680"
  },
  {
    "text": "intelligence using third party proxy",
    "start": "561680",
    "end": "564080"
  },
  {
    "text": "filters or plugins",
    "start": "564080",
    "end": "565839"
  },
  {
    "text": "or analysis tools which enable use cases",
    "start": "565839",
    "end": "568240"
  },
  {
    "text": "like laugh",
    "start": "568240",
    "end": "569360"
  },
  {
    "text": "thread detection or even compliance",
    "start": "569360",
    "end": "571519"
  },
  {
    "text": "checks",
    "start": "571519",
    "end": "572720"
  },
  {
    "text": "this helps in defining advanced",
    "start": "572720",
    "end": "574720"
  },
  {
    "text": "authorization policies",
    "start": "574720",
    "end": "576480"
  },
  {
    "text": "which not only take into consideration",
    "start": "576480",
    "end": "578160"
  },
  {
    "text": "the intrinsic service attributes like we",
    "start": "578160",
    "end": "580080"
  },
  {
    "text": "talked about",
    "start": "580080",
    "end": "581200"
  },
  {
    "text": "but also take into consideration the",
    "start": "581200",
    "end": "583360"
  },
  {
    "text": "whole security posture",
    "start": "583360",
    "end": "585200"
  },
  {
    "text": "of the complete and doing transaction",
    "start": "585200",
    "end": "587440"
  },
  {
    "text": "which is comprised of user attributes",
    "start": "587440",
    "end": "589680"
  },
  {
    "text": "in the data that service is accessing",
    "start": "589680",
    "end": "591920"
  },
  {
    "text": "view of the user",
    "start": "591920",
    "end": "593519"
  },
  {
    "text": "threat and anomaly detection and in the",
    "start": "593519",
    "end": "596000"
  },
  {
    "text": "compliance level",
    "start": "596000",
    "end": "597040"
  },
  {
    "text": "of the resources that participate in",
    "start": "597040",
    "end": "598640"
  },
  {
    "text": "this transaction",
    "start": "598640",
    "end": "600399"
  },
  {
    "text": "this kind of enables service mesh to do",
    "start": "600399",
    "end": "602640"
  },
  {
    "text": "dynamic and continuous risk assessment",
    "start": "602640",
    "end": "605680"
  },
  {
    "text": "and we can see how it evolves security",
    "start": "605680",
    "end": "607920"
  },
  {
    "text": "towards",
    "start": "607920",
    "end": "609120"
  },
  {
    "text": "a continuous risk based zero trust model",
    "start": "609120",
    "end": "613279"
  },
  {
    "text": "with that we come to the end of the",
    "start": "613279",
    "end": "614640"
  },
  {
    "text": "presentation thank you so much for",
    "start": "614640",
    "end": "616480"
  },
  {
    "text": "joining and for your attention",
    "start": "616480",
    "end": "618240"
  },
  {
    "text": "and we hope you found the session useful",
    "start": "618240",
    "end": "622480"
  }
]