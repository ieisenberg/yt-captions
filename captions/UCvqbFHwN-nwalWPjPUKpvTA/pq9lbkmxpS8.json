[
  {
    "text": "good afternoon how's everybody doing pretty impressive conference I got to",
    "start": "30",
    "end": "7200"
  },
  {
    "text": "say this is my I guess third one well the",
    "start": "7200",
    "end": "12630"
  },
  {
    "text": "real one was last year and there was a meet-up before that and went from I guess 40 to what was the last year 300 -",
    "start": "12630",
    "end": "19320"
  },
  {
    "text": "what is this twelve hundred thousand a lot of fun right I'm Quinton",
    "start": "19320",
    "end": "26550"
  },
  {
    "text": "as my colleague Madhu over here we're going to be talking to this afternoon about cluster Federation you've probably",
    "start": "26550",
    "end": "32880"
  },
  {
    "text": "heard the term mentioned in numerous Talk's today hopefully not too many of you went to",
    "start": "32880",
    "end": "39210"
  },
  {
    "text": "Brandon's excellent presentation this morning or demonstration there's going to be a little bit of overlap between",
    "start": "39210",
    "end": "44910"
  },
  {
    "text": "what Brandon spoke about Morais I'm going to be speaking about in particular module demo but with no further ado",
    "start": "44910",
    "end": "51149"
  },
  {
    "text": "let's get going so we're both at Google at the moment we're active contributors to the cluster Federation project as",
    "start": "51149",
    "end": "58289"
  },
  {
    "text": "I'll discuss later there are many many other contributors I don't want to have us take more credit than is due this is",
    "start": "58289",
    "end": "64018"
  },
  {
    "text": "very much a community effort and I guess cluster Federation is one aspect of what",
    "start": "64019",
    "end": "70409"
  },
  {
    "text": "we're going to be talking about the other part of it is is building global highly available multi cloud services",
    "start": "70409",
    "end": "75420"
  },
  {
    "text": "and this is a huge mouthful but but I guess it's important multi clouds of the stuff runs across different cloud",
    "start": "75420",
    "end": "81479"
  },
  {
    "text": "providers you can run clusters in different public clouds on-premise etc it's highly",
    "start": "81479",
    "end": "88200"
  },
  {
    "text": "available you can handle outages of clusters and its global you can do things like low latency serving of your",
    "start": "88200",
    "end": "95009"
  },
  {
    "text": "customers around the world so this is roughly what we're going to",
    "start": "95009",
    "end": "100320"
  },
  {
    "text": "be talking about history motivations some of the challenges associated with Federation some examples Madhu is going",
    "start": "100320",
    "end": "106770"
  },
  {
    "text": "to do some demos of the existing software that we have and how it works and we can talk a little bit about the",
    "start": "106770",
    "end": "112320"
  },
  {
    "text": "roadmap where we came from where we're going to etc so this stuff I think most of you know",
    "start": "112320",
    "end": "120630"
  },
  {
    "text": "ready Google has very large data centers so to many other people these days Amazon's data centers don't look too",
    "start": "120630",
    "end": "126270"
  },
  {
    "text": "different than this either but this is kind of stuff that you all know this is why I kubernetes exists this is why",
    "start": "126270",
    "end": "132930"
  },
  {
    "text": "borer which came for it exists because managing the stuff with anything other than pretty sophisticated automation",
    "start": "132930",
    "end": "139269"
  },
  {
    "text": "becomes a nightmare what not everybody necessarily thinks",
    "start": "139269",
    "end": "144489"
  },
  {
    "text": "about at first pass is that there are also lots of these data centers around and there are many these are",
    "start": "144489",
    "end": "150750"
  },
  {
    "text": "Google's data centers as of several years ago that map looks different now than then it does on the screen but the",
    "start": "150750",
    "end": "158560"
  },
  {
    "text": "Googlers in the audience this comes from our public website there's not internal information",
    "start": "158560",
    "end": "163889"
  },
  {
    "text": "but you know Google's not the only company that does this sort of scale anymore Amazon's I think AWS has got 35",
    "start": "163889",
    "end": "172239"
  },
  {
    "text": "odd availability zones you only have to think about the you know",
    "start": "172239",
    "end": "177930"
  },
  {
    "text": "telcos of the world how many airports are there in the world a lot of these",
    "start": "177930",
    "end": "183939"
  },
  {
    "text": "problems start looking like multi cluster problems to solve",
    "start": "183939",
    "end": "189209"
  },
  {
    "text": "so we started thinking what if we took the kubernetes machine automation model which most of you will be intimately",
    "start": "189209",
    "end": "195730"
  },
  {
    "text": "familiar with by now and apply this to entire data centers so kubernetes if you zoom out to 30,000",
    "start": "195730",
    "end": "202840"
  },
  {
    "text": "feet looks you know roughly like that there's a whole lot of detail inside that pink box in particular but you know",
    "start": "202840",
    "end": "209319"
  },
  {
    "text": "if you zoom out far enough you've got a bunch of users interacting with some control system by API is user interfaces",
    "start": "209319",
    "end": "216250"
  },
  {
    "text": "command line interfaces etc and ultimately what they do is they put containers on two machines servers and",
    "start": "216250",
    "end": "222819"
  },
  {
    "text": "this you know for the most part works very well and all of these fancy abstractions that we've created replica",
    "start": "222819",
    "end": "228099"
  },
  {
    "text": "sets and services and ingress --is and all sorts of other things basically allow you to you know do this stuff in",
    "start": "228099",
    "end": "233680"
  },
  {
    "text": "the same fashion tie all these things together so what if we took that principle and we",
    "start": "233680",
    "end": "239709"
  },
  {
    "text": "replace the things on the right hand side with entire data centers and what if they each ran in different cloud",
    "start": "239709",
    "end": "246280"
  },
  {
    "text": "environments the classic three would be on Google on Amazon and on your",
    "start": "246280",
    "end": "252370"
  },
  {
    "text": "on-premise data centers the model looks very similar the api's",
    "start": "252370",
    "end": "257560"
  },
  {
    "text": "that are used to the clusters of just the good old kubernetes api the api on",
    "start": "257560",
    "end": "262690"
  },
  {
    "text": "the left-hand far left-hand side of that diagram is also actually the kuben is API so all the concepts that you've",
    "start": "262690",
    "end": "268960"
  },
  {
    "text": "learned all of the tooling that you've built etc speaks the same language to the pink box on the left-hand side as",
    "start": "268960",
    "end": "276330"
  },
  {
    "text": "this pink box on the left-hand side make sense so far",
    "start": "276330",
    "end": "282510"
  },
  {
    "text": "so why is this interesting I mean besides being an interesting academic exercise why is it valuable to people",
    "start": "282510",
    "end": "288340"
  },
  {
    "text": "using kubernetes there there are a whole slew of reasons I don't want to spend the whole afternoon on them but I'll",
    "start": "288340",
    "end": "294160"
  },
  {
    "text": "just whip through a couple quickly hi availabilities obviously one of them clusters can fail you upgrade clusters",
    "start": "294160",
    "end": "299950"
  },
  {
    "text": "you upgrade your software in them they have you know acts of God befall upon them I'm sure more than one of you have",
    "start": "299950",
    "end": "305830"
  },
  {
    "text": "experienced AWS zone outages for example low latency tu users is another classic",
    "start": "305830",
    "end": "312100"
  },
  {
    "text": "example if you have a global service you want to serve your stuff typically close to your users pretty standard distribution pattern is",
    "start": "312100",
    "end": "318820"
  },
  {
    "text": "having you know a few data centers on each continent so they're all European users are served out of Europe all Asian",
    "start": "318820",
    "end": "325060"
  },
  {
    "text": "uses a served out of Asia and all North American users served out of North America and sometimes for more sensitive",
    "start": "325060",
    "end": "331210"
  },
  {
    "text": "applications you can subdivide that more so you know Google search typically",
    "start": "331210",
    "end": "336220"
  },
  {
    "text": "would not serve an East Coast US user out of the west coast because the latency would be noticeably worse",
    "start": "336220",
    "end": "342420"
  },
  {
    "text": "policy enforcement and auditing will go back to this diagram there often you know company policies",
    "start": "342420",
    "end": "349750"
  },
  {
    "text": "that determine can't this group run their applications on AWS or GCE which",
    "start": "349750",
    "end": "356140"
  },
  {
    "text": "clusters they need to go to go into do they have to be in PCI compliant data centers is the sensitive data do we need",
    "start": "356140",
    "end": "362890"
  },
  {
    "text": "to you know take cognizance of that and so this kind of thing is much easier to",
    "start": "362890",
    "end": "368050"
  },
  {
    "text": "enforce if you have a some kind of a central control plane that makes these decisions provide a lock in avoidance",
    "start": "368050",
    "end": "373090"
  },
  {
    "text": "and this is pretty obvious if you want to move your applications around between different cloud providers it's much easier if you have an orchestration",
    "start": "373090",
    "end": "378760"
  },
  {
    "text": "layer to help you do that scalability a lot of users are you know asking",
    "start": "378760",
    "end": "384640"
  },
  {
    "text": "questions around what if I have more than two three five thousand modes that I need to orchestrate my containers",
    "start": "384640",
    "end": "390400"
  },
  {
    "text": "across can I build a you know how two thousand node cluster the answer is it's not such",
    "start": "390400",
    "end": "396520"
  },
  {
    "text": "a good idea you know even if everything worked fine it's just generally not a good idea it's not something we do in",
    "start": "396520",
    "end": "401630"
  },
  {
    "text": "Google very commonly it's much better to build a whole bunch of you know multi thousand machine clusters one they fail",
    "start": "401630",
    "end": "409820"
  },
  {
    "text": "independently of each other so you don't lose a hundred thousand machines at once and there are various other reasons you",
    "start": "409820",
    "end": "415040"
  },
  {
    "text": "typically don't need to have a thousand machines near one geography you typically need to serve more more than",
    "start": "415040",
    "end": "420830"
  },
  {
    "text": "one geography we have that number of machines capacity overflow and there are many many other examples of why this is",
    "start": "420830",
    "end": "428420"
  },
  {
    "text": "useful in practice so there are two primary building blocks you know when you start thinking about this a little",
    "start": "428420",
    "end": "434210"
  },
  {
    "text": "bit further they're two primary building blocks that are necessary in order to make it useful the first one is network",
    "start": "434210",
    "end": "439730"
  },
  {
    "text": "traffic management so being able to distribute traffic both from the outside from the Internet to your to the correct",
    "start": "439730",
    "end": "447050"
  },
  {
    "text": "clusters and also from a cluster to another cluster and so that's something",
    "start": "447050",
    "end": "452150"
  },
  {
    "text": "we're going to be talking a little bit about how do we do service discovery from the outside how do we do service",
    "start": "452150",
    "end": "457370"
  },
  {
    "text": "discovery from the inside of a cluster how do we do external load balancing geo",
    "start": "457370",
    "end": "462410"
  },
  {
    "text": "localities or ensuring that the lowest latency access to clusters from users",
    "start": "462410",
    "end": "467630"
  },
  {
    "text": "how do we do failover if clusters go down you know how does traffic get redirected to the new to the other",
    "start": "467630",
    "end": "473570"
  },
  {
    "text": "clusters and the other component of the problem we're solving is resource placement so where do we put",
    "start": "473570",
    "end": "479990"
  },
  {
    "text": "all of the load balances where do we put all of the worker pods etc that's it behind these things how do we allocate",
    "start": "479990",
    "end": "485480"
  },
  {
    "text": "IP addresses all those kinds of things become important and you need to figure",
    "start": "485480",
    "end": "492140"
  },
  {
    "text": "out how to do that sensibly otherwise you know the idea is not very useful in practice all right so this all sounds great where",
    "start": "492140",
    "end": "500090"
  },
  {
    "text": "are the challenges and I didn't want to make this sound like this was all roses and most of you will probably be",
    "start": "500090",
    "end": "505970"
  },
  {
    "text": "familiar with some of these problems they're different different bandwidth charges between different data centers",
    "start": "505970",
    "end": "511640"
  },
  {
    "text": "I've tried to illustrate that in the diagram if you're going between inside a single zone and a single cloud",
    "start": "511640",
    "end": "517400"
  },
  {
    "text": "provider typically all network bandwidth is free and your latency is effectively zero as soon as you start going between",
    "start": "517400",
    "end": "523400"
  },
  {
    "text": "different regions between different cloud providers that can change many orders of magnitude there different",
    "start": "523400",
    "end": "529649"
  },
  {
    "text": "service discovery techniques depending on which cloud you're running on you might have DNS names you might have IP addresses you might have some other",
    "start": "529649",
    "end": "535230"
  },
  {
    "text": "service discovery mechanism if the promise of kubernetes portability is to be kept intact we need to make sure that",
    "start": "535230",
    "end": "541980"
  },
  {
    "text": "you know the mechanism that a given application uses to find the other parts of it should ideally be consistent",
    "start": "541980",
    "end": "547769"
  },
  {
    "text": "across all of these deployment methodologies and obviously when you have large numbers of clusters you you",
    "start": "547769",
    "end": "554519"
  },
  {
    "text": "know you're monitoring challenges become more complex as you go so those are things that we also need to figure out",
    "start": "554519",
    "end": "561649"
  },
  {
    "text": "and I'm not going to do a lot most to much is a lot of words on the slide but basically it is worth recognizing that",
    "start": "561649",
    "end": "570089"
  },
  {
    "text": "there are different classes of applications there are the very very loosely coupled applications where the",
    "start": "570089",
    "end": "576360"
  },
  {
    "text": "pods don't talk to each other a lot or subsets of them do but not the rest and",
    "start": "576360",
    "end": "581519"
  },
  {
    "text": "they can pretty much be deployed in any data center and conserve independently",
    "start": "581519",
    "end": "587190"
  },
  {
    "text": "of each other there are there is the other end of that spectrum we have very strictly tightly coupled applications",
    "start": "587190",
    "end": "593399"
  },
  {
    "text": "I'm speaking to someone earlier over lunch about video rendering where the latency and the bandwidth in particular",
    "start": "593399",
    "end": "598589"
  },
  {
    "text": "between storage and nodes and nodes and each other etc is is very critical and",
    "start": "598589",
    "end": "603990"
  },
  {
    "text": "obviously if you separate those nodes by across regions and across continents that doesn't work as well",
    "start": "603990",
    "end": "610370"
  },
  {
    "text": "so there are some applications that are more easily federated than others but it",
    "start": "610370",
    "end": "616529"
  },
  {
    "text": "turns out that the class of applications that do federated well is substantially large and interesting enough in its own",
    "start": "616529",
    "end": "623009"
  },
  {
    "text": "right past present and future so what have we done what have we built this is all very",
    "start": "623009",
    "end": "629670"
  },
  {
    "text": "hand wavy requirements stuff up to now but what is actually there so we started development of this in q2",
    "start": "629670",
    "end": "636810"
  },
  {
    "text": "of this year it's important to note as I mentioned earlier the API is 100% kubernetes compatible",
    "start": "636810",
    "end": "642949"
  },
  {
    "text": "so no relearning of or retooling or anything else the same concepts that you come across in kubernetes you'll see",
    "start": "642949",
    "end": "649170"
  },
  {
    "text": "here and the semantics are very very similar you can you know take your existing",
    "start": "649170",
    "end": "654670"
  },
  {
    "text": "applications and deploy them with their current configurations directly into Federation and you know with some",
    "start": "654670",
    "end": "660370"
  },
  {
    "text": "approximations and with all the caveats that I mentioned on the previous slides the most part things should work as you",
    "start": "660370",
    "end": "665860"
  },
  {
    "text": "intend and you can tune from that point q to 2016 we built the basic control",
    "start": "665860",
    "end": "672040"
  },
  {
    "text": "plan all of the test infrastructure and everything else that's required to make this stuff real we also built federated",
    "start": "672040",
    "end": "677590"
  },
  {
    "text": "services which we'll be demonstrating in a few minutes to keep you all excited slides with no demos is boring",
    "start": "677590",
    "end": "685050"
  },
  {
    "text": "federated services provide you with multi cloud multi-region intelligent service discovery so what that means is",
    "start": "685050",
    "end": "691960"
  },
  {
    "text": "you can have your service spread across AWS GCE on premise if you like you can",
    "start": "691960",
    "end": "699700"
  },
  {
    "text": "use the same service discovery you can look up the same DNS name wherever you are you will find the closest",
    "start": "699700",
    "end": "707220"
  },
  {
    "text": "shard of that service if you have one in your cluster you will find that one if there's one in the cluster next door in",
    "start": "707220",
    "end": "712810"
  },
  {
    "text": "the same region you'll find that one if it's nothing available there you will go further afield this is all dynamic so as",
    "start": "712810",
    "end": "720010"
  },
  {
    "text": "pods disappear fail fail health checks etc all of the DNS infrastructure to make this work is automatically updated",
    "start": "720010",
    "end": "726340"
  },
  {
    "text": "by the Federation control system so you can sleep happily while all of your traffic gets redirected around the",
    "start": "726340",
    "end": "732220"
  },
  {
    "text": "planet [Music] q3 we focused on you know we sort of",
    "start": "732220",
    "end": "739390"
  },
  {
    "text": "moved from a build the basic control infrastructure mode to let's solve some",
    "start": "739390",
    "end": "744730"
  },
  {
    "text": "really interesting problems we released federated ingress for GCE so you have a global l7 load balancer that",
    "start": "744730",
    "end": "751510"
  },
  {
    "text": "does some pretty sophisticated load balancing across the globe based on",
    "start": "751510",
    "end": "757630"
  },
  {
    "text": "a single IP so there's no DNS dependencies there's no TTL x' and DNS",
    "start": "757630",
    "end": "763000"
  },
  {
    "text": "caching problems associated with that we also did replica sets so you can deploy a replica set that spans multiple",
    "start": "763000",
    "end": "768880"
  },
  {
    "text": "clusters we do dynamic allocation of replicas if flusters become unavailable",
    "start": "768880",
    "end": "773950"
  },
  {
    "text": "we reschedule the replicas into other clusters if you add clusters to your",
    "start": "773950",
    "end": "780450"
  },
  {
    "text": "Federation you can up we redistribute the replicas that you have",
    "start": "780450",
    "end": "785820"
  },
  {
    "text": "across the new clusters secret propagation so a pretty common use case",
    "start": "785820",
    "end": "791130"
  },
  {
    "text": "is needing to use secrets to distribute credentials etc and you want to keep",
    "start": "791130",
    "end": "796380"
  },
  {
    "text": "these consistent as soon as you have a large number of clusters you have you know significant configuration problems",
    "start": "796380",
    "end": "801540"
  },
  {
    "text": "this makes a lot simpler and events just make it easier to see what's going on",
    "start": "801540",
    "end": "806610"
  },
  {
    "text": "inside your Federation q4 we realized and we'll talk a little bit more about",
    "start": "806610",
    "end": "812550"
  },
  {
    "text": "this later that creating a Federation is actually non-trivial as much as we try",
    "start": "812550",
    "end": "818850"
  },
  {
    "text": "to make it as trivial as possible so we spend a lot of effort in q4 making that a lot simpler to do we build",
    "start": "818850",
    "end": "825389"
  },
  {
    "text": "some tools that will allow you to deploy a federated control plane or Federation control plane easily and federate",
    "start": "825389",
    "end": "833250"
  },
  {
    "text": "clusters into that with single line control commands",
    "start": "833250",
    "end": "838639"
  },
  {
    "text": "we also build federate deployments so those of you you know could Natty's deployments they give you things like",
    "start": "838639",
    "end": "844730"
  },
  {
    "text": "server-side rolling upgrades etc these are implemented in Federation as well so you can do rolling upgrades across",
    "start": "844730",
    "end": "850860"
  },
  {
    "text": "multiple clusters daemon sets these are things that run on all the nodes if you want to run on all nodes in all clusters",
    "start": "850860",
    "end": "857100"
  },
  {
    "text": "you can do that with a single department daemon set at the moment jobs config Maps etc so that's a little bit about",
    "start": "857100",
    "end": "864930"
  },
  {
    "text": "where we came from where we're going at the moment and in the future without wanting just room",
    "start": "864930",
    "end": "872600"
  },
  {
    "text": "so feedback happening we plan to spend some effort on the",
    "start": "872600",
    "end": "880079"
  },
  {
    "text": "following areas in the coming year policy based resource placement so something that is quite commonly needed",
    "start": "880079",
    "end": "888240"
  },
  {
    "text": "is the ability to have a distinction between what an application wants so an",
    "start": "888240",
    "end": "893819"
  },
  {
    "text": "application might need certain kinds of nodes or certain connectivity to other parts of the application but a company",
    "start": "893819",
    "end": "901500"
  },
  {
    "text": "or some some some sort of other party other than the application deployer might have another set of policies which",
    "start": "901500",
    "end": "908220"
  },
  {
    "text": "is we preferentially run our stuff on premise and when we run out of capacity we run a little for example so we like",
    "start": "908220",
    "end": "914410"
  },
  {
    "text": "to overlay that policy on top of whatever the application specified policy is and that should ideally be",
    "start": "914410",
    "end": "919930"
  },
  {
    "text": "something that's easy to declare easy to understand these are the people specifying these policies are not always",
    "start": "919930",
    "end": "925510"
  },
  {
    "text": "engineers and highly technical people so this should be easy to Express and easy to understand",
    "start": "925510",
    "end": "931410"
  },
  {
    "text": "improved identity and access management you can imagine when you have all of these different",
    "start": "931410",
    "end": "936810"
  },
  {
    "text": "cloud providers each of which might have different concepts of identity and",
    "start": "936810",
    "end": "942220"
  },
  {
    "text": "you've got this control plane acting on behalf of potentially multiple users against different clusters and different",
    "start": "942220",
    "end": "948280"
  },
  {
    "text": "cloud providers things can get complicated pretty quickly we've got a very simple model at the moment",
    "start": "948280",
    "end": "953950"
  },
  {
    "text": "essentially to prove out the concept but there's a lot more work to be done there to make sure that it is you know solid",
    "start": "953950",
    "end": "961230"
  },
  {
    "text": "state flaps and federated persistent storage doesn't take too much insight to",
    "start": "961230",
    "end": "967600"
  },
  {
    "text": "realize that data doesn't magically replicate between data centers or cloud providers so in the same way that",
    "start": "967600",
    "end": "975370"
  },
  {
    "text": "kubernetes pet sets or I guess they're called stateful sets now you know there",
    "start": "975370",
    "end": "980410"
  },
  {
    "text": "was a fair amount of effort put into making sure that we knew how to handle state stateful applications well that",
    "start": "980410",
    "end": "987640"
  },
  {
    "text": "problem is you know still there for Federation is work to be done there we have some pretty good ideas of possible",
    "start": "987640",
    "end": "993340"
  },
  {
    "text": "avenues of tackling the problem but nothing has been built here hybrid federated in gross as I mentioned",
    "start": "993340",
    "end": "999490"
  },
  {
    "text": "earlier the ingress that we built in version 1.4 is based on",
    "start": "999490",
    "end": "1006540"
  },
  {
    "text": "Google's pretty fancy l7 load balancing infrastructure and not",
    "start": "1006540",
    "end": "1011610"
  },
  {
    "text": "everybody has access to that but we would like the the abstraction of federated ingress to work irrespective",
    "start": "1011610",
    "end": "1016950"
  },
  {
    "text": "of whether you're running across cloud on Google or not so that's again we have a design we have some interim at least",
    "start": "1016950",
    "end": "1024390"
  },
  {
    "text": "some initial implementations and we have to roll that out next year private federated services again more details if",
    "start": "1024390",
    "end": "1032550"
  },
  {
    "text": "you need them available how do you get hold of us as I mentioned",
    "start": "1032550",
    "end": "1038280"
  },
  {
    "text": "earlier this is very much not a Google only effort this has been an effort by many many different company I just",
    "start": "1038280",
    "end": "1045150"
  },
  {
    "text": "called out the main contributors on the right hand side but there are several others my apologies if anyone's been",
    "start": "1045150",
    "end": "1050460"
  },
  {
    "text": "excluded huawei core OS Red Hat ourselves at Google and eBay have been",
    "start": "1050460",
    "end": "1056820"
  },
  {
    "text": "just some of the major contributors we have a special interest group that contact details are up there some of you",
    "start": "1056820",
    "end": "1063960"
  },
  {
    "text": "who have joined it there's a very long list of people who members of it send emails read what's going on we have a",
    "start": "1063960",
    "end": "1071159"
  },
  {
    "text": "working group that meets every Thursday around midday Pacific time you can join",
    "start": "1071159",
    "end": "1077370"
  },
  {
    "text": "that you can see the working group notes a lot of people have come to me since we've been here so we know exactly what",
    "start": "1077370",
    "end": "1083309"
  },
  {
    "text": "you're doing because we read the notes every couple of weeks and we we know what's going on even though I've never met them before and finally if all of",
    "start": "1083309",
    "end": "1090750"
  },
  {
    "text": "the above fails quinton mutter there are email addresses you can get us on github you can get us on email and now with no",
    "start": "1090750",
    "end": "1099090"
  },
  {
    "text": "further ado I shall hand over to Madhu my colleague who will give you a demo",
    "start": "1099090",
    "end": "1104110"
  },
  {
    "text": "[Music]",
    "start": "1104110",
    "end": "1107410"
  },
  {
    "text": "[Applause] thanks going on let's look at a demo of",
    "start": "1110170",
    "end": "1116350"
  },
  {
    "text": "how cluster Federation works for people who went to Brandon Stark earlier this",
    "start": "1116350",
    "end": "1121840"
  },
  {
    "text": "morning there is some overlap in this demo Brandon also showed you the money shot already we go a little deeper here",
    "start": "1121840",
    "end": "1129210"
  },
  {
    "text": "so what's the problem that we are trying to solve today I want to build a global",
    "start": "1129210",
    "end": "1134769"
  },
  {
    "text": "service and my service is a web service in order to simplify the problem for this demo I basically just have an",
    "start": "1134769",
    "end": "1141789"
  },
  {
    "text": "engine X container running in my cluster or a set of clusters and I show you how I can run the service globally across",
    "start": "1141789",
    "end": "1150519"
  },
  {
    "text": "multiple clusters which is connected to a federation or registered with Federation so as a preparation for this",
    "start": "1150519",
    "end": "1157119"
  },
  {
    "text": "demo I have already created nine gke clusters",
    "start": "1157119",
    "end": "1164368"
  },
  {
    "text": "there are nine of these but in this resolution it's it's really hard to infer but basically there are",
    "start": "1164549",
    "end": "1172649"
  },
  {
    "text": "nine clusters running in three GCPD regions and in three zones in each of",
    "start": "1172649",
    "end": "1178809"
  },
  {
    "text": "these three regions they are all running one one four five and I have also set up",
    "start": "1178809",
    "end": "1185440"
  },
  {
    "text": "or deployed a Federation control plane on one of these clusters we will talk about the Federation control plane",
    "start": "1185440",
    "end": "1192190"
  },
  {
    "text": "deployment a little later in this talk but let's assume that or I have already set up the control plane and I have also",
    "start": "1192190",
    "end": "1199059"
  },
  {
    "text": "registered these clusters with Federation Federation is only responsible for managing the clusters",
    "start": "1199059",
    "end": "1204279"
  },
  {
    "text": "that's already registered with it so you have to explicitly register or D register",
    "start": "1204279",
    "end": "1210460"
  },
  {
    "text": "clusters from r2 coming to Federation or with Federation or deregister clusters",
    "start": "1210460",
    "end": "1215499"
  },
  {
    "text": "out of it so in order to show that I run this command you use the same Q control",
    "start": "1215499",
    "end": "1221019"
  },
  {
    "text": "command to see the list of clusters that are registered with Federation also",
    "start": "1221019",
    "end": "1226360"
  },
  {
    "text": "there is one other point that I want to emphasize here",
    "start": "1226360",
    "end": "1231899"
  },
  {
    "text": "Q control can talk to multiple clusters or multiple endpoints basically it's",
    "start": "1231899",
    "end": "1236950"
  },
  {
    "text": "specified through the Q control context my current context is a federation endpoint once you have your Cube control",
    "start": "1236950",
    "end": "1243369"
  },
  {
    "text": "talking to your Federation in point all your commands look very similar I just need to get clusters the way I will do",
    "start": "1243369",
    "end": "1248529"
  },
  {
    "text": "get pods or get deployments just to show that I show you what my current context",
    "start": "1248529",
    "end": "1254109"
  },
  {
    "text": "is so this is my current context it's a federation cluster so I have the entire",
    "start": "1254109",
    "end": "1259869"
  },
  {
    "text": "setup now what I want to do in my service is I want to display the basic",
    "start": "1259869",
    "end": "1266049"
  },
  {
    "text": "nginx homepage but in addition to that I want to show the region or the zone in which that particular page is running or",
    "start": "1266049",
    "end": "1272799"
  },
  {
    "text": "that particular instance is running in order to do that I have a shell script here bottom left",
    "start": "1272799",
    "end": "1278379"
  },
  {
    "text": "it basically contacts the GCP metadata server to fetch the current zone and",
    "start": "1278379",
    "end": "1284349"
  },
  {
    "text": "writes the zone as an HTML to the local index dot HTML page in that cluster it",
    "start": "1284349",
    "end": "1290799"
  },
  {
    "text": "just does that this is a this is a basic shell script and I want to put the shell script onto the cluster's how do I get",
    "start": "1290799",
    "end": "1297700"
  },
  {
    "text": "the shell script onto the cluster's there are many ways to do it one mechanism to use is a config map you can",
    "start": "1297700",
    "end": "1305469"
  },
  {
    "text": "put this script into a config map and mount it on a file system in your cluster at the time of this demo we",
    "start": "1305469",
    "end": "1313629"
  },
  {
    "text": "don't have a federated config maps right now we do we will have federated config",
    "start": "1313629",
    "end": "1319179"
  },
  {
    "text": "maps in the next release which is in about a month but we don't have it right now but we do have a DirectX secrets you",
    "start": "1319179",
    "end": "1324999"
  },
  {
    "text": "can do pretty much the same thing with secrets so what I'm going to do is I'm going to put this script into Federation",
    "start": "1324999",
    "end": "1332079"
  },
  {
    "text": "which replicates to all the underlying clusters to all the nine clusters so left-bottom is my script the command",
    "start": "1332079",
    "end": "1339729"
  },
  {
    "text": "that I'm going to run I am going to clear this so what I'm going to do is I'll copy",
    "start": "1339729",
    "end": "1346239"
  },
  {
    "text": "paste this command it's hard to remember these commands during a demo so",
    "start": "1346239",
    "end": "1351719"
  },
  {
    "text": "so I just created a federated secret if we want to verify we can see that this",
    "start": "1351719",
    "end": "1358119"
  },
  {
    "text": "secret is in Federation now we can do a Oyama",
    "start": "1358119",
    "end": "1363839"
  },
  {
    "text": "to see the details so the content is under zone fetch that Sh key which will",
    "start": "1367979",
    "end": "1375159"
  },
  {
    "text": "be mounted as a scrip the the actual script itself is basic ste 4 encoded but",
    "start": "1375159",
    "end": "1380679"
  },
  {
    "text": "it's there we can verify it if you want but it's not really necessary right now",
    "start": "1380679",
    "end": "1386070"
  },
  {
    "text": "so just to show you demonstrate I also use a specific context which is one of",
    "start": "1386070",
    "end": "1392019"
  },
  {
    "text": "the underlying clusters in the Federation so this is the cluster and we have the zone fix secret even there so",
    "start": "1392019",
    "end": "1397869"
  },
  {
    "text": "it's already copied to all the underlying clusters all the nine clusters so now we have the script we",
    "start": "1397869",
    "end": "1403749"
  },
  {
    "text": "want to run the script how do we run this I'm going to run this in a busybox container in all the clusters but we",
    "start": "1403749",
    "end": "1410859"
  },
  {
    "text": "don't want to just do that we also want to display the page written out by the script as an engine X HTML page so I",
    "start": "1410859",
    "end": "1417700"
  },
  {
    "text": "have a replica set which is basically a federated replica set but it is exactly similar or API compatible with the",
    "start": "1417700",
    "end": "1424570"
  },
  {
    "text": "kubernetes api replica set itself so if you look at the replicas expect it has",
    "start": "1424570",
    "end": "1429729"
  },
  {
    "text": "API version kind everything the same we have the metadata lib name labels",
    "start": "1429729",
    "end": "1434769"
  },
  {
    "text": "everything and I say in nine replicas because I want to have one replica in",
    "start": "1434769",
    "end": "1440139"
  },
  {
    "text": "each underlying clusters mine cluster so I do this and I have two containers in",
    "start": "1440139",
    "end": "1445749"
  },
  {
    "text": "my replica side spec one is a basic engine X pot of nginx container which reads from ore which has the dub dub dub",
    "start": "1445749",
    "end": "1454479"
  },
  {
    "text": "page and there is a second container which is just a busy box container and it runs these on fetch sx scribe and we",
    "start": "1454479",
    "end": "1462489"
  },
  {
    "text": "mount this script which is available as secret in",
    "start": "1462489",
    "end": "1467559"
  },
  {
    "text": "each underlying cluster so let's submit this to the cluster or let's submit this",
    "start": "1467559",
    "end": "1473169"
  },
  {
    "text": "to Federation and see what happens before doing that I want to take a step",
    "start": "1473169",
    "end": "1479649"
  },
  {
    "text": "back and set a watch command to show how the DNS entries work acquaintance already talked about DNS entries one of",
    "start": "1479649",
    "end": "1486159"
  },
  {
    "text": "the coolest thing about Federation is we just don't expose the service internally in the clusters we also set up DNS",
    "start": "1486159",
    "end": "1492759"
  },
  {
    "text": "entries for external clients for clients which are outside the clusters so we you",
    "start": "1492759",
    "end": "1498159"
  },
  {
    "text": "we have two DNS provider implementations day one is Google Cloud DNS implementation and the other one is",
    "start": "1498159",
    "end": "1504179"
  },
  {
    "text": "route 53 implementation we also have core DNS implementation coming up in the",
    "start": "1504179",
    "end": "1510239"
  },
  {
    "text": "next Relays but I'll use Google Cloud DNS so I have one of these zones created",
    "start": "1510239",
    "end": "1516960"
  },
  {
    "text": "in my cloud DNS Google Cloud DNS I just set a watch on it so you can see there are only two",
    "start": "1516960",
    "end": "1524879"
  },
  {
    "text": "records the namespace record and the SOA record no records or cname records as I",
    "start": "1524879",
    "end": "1530190"
  },
  {
    "text": "create my back-end and my service you see this getting populated so let me go",
    "start": "1530190",
    "end": "1535950"
  },
  {
    "text": "ahead and create the replica set first I am submitting this replica set to the",
    "start": "1535950",
    "end": "1543090"
  },
  {
    "text": "Federation endpoint so the replica set is created in Federation it's created the message says so no need",
    "start": "1543090",
    "end": "1550739"
  },
  {
    "text": "to verify in Federation but in the meantime I also want to create a federated service look at the bottom",
    "start": "1550739",
    "end": "1557039"
  },
  {
    "text": "left is this thing visible to all of you in the bank okay so federated service spec looks again",
    "start": "1557039",
    "end": "1564779"
  },
  {
    "text": "very similar to or exactly identical to the service pack in kubernetes so I am creating an engine X service and there",
    "start": "1564779",
    "end": "1572549"
  },
  {
    "text": "is a selector port and whatnot and it's a pipe load balancer I am going to",
    "start": "1572549",
    "end": "1577919"
  },
  {
    "text": "submit this service to the Federation endpoint all I need to do is",
    "start": "1577919",
    "end": "1583970"
  },
  {
    "text": "create the federated service let's go to one of the underlying clusters any arbitrary cluster and verify that these",
    "start": "1585679",
    "end": "1593159"
  },
  {
    "text": "things are actually created in the underlying clusters I'm going to first go and look at you can already see that",
    "start": "1593159",
    "end": "1600149"
  },
  {
    "text": "the top right is getting populated with records cname records in the meantime",
    "start": "1600149",
    "end": "1606350"
  },
  {
    "text": "I'll also show you whether the applicant set is created in one of the underlying clusters so we asked for mine replicas",
    "start": "1606350",
    "end": "1613590"
  },
  {
    "text": "and we are looking at one of the clusters here which is running in Europe West 1d it has one desired replicas its",
    "start": "1613590",
    "end": "1621239"
  },
  {
    "text": "current current number of available replicas is one and it is ready we can also look at the service if you want in",
    "start": "1621239",
    "end": "1627809"
  },
  {
    "text": "the same cluster and we have the nginx service running there and you can see",
    "start": "1627809",
    "end": "1634169"
  },
  {
    "text": "that the records are getting populated so Brandon already showed you the browser",
    "start": "1634169",
    "end": "1641040"
  },
  {
    "text": "side of things ah it's easy to just use one of these DNS records that's getting",
    "start": "1641040",
    "end": "1646140"
  },
  {
    "text": "created here on the right side and go to a browser and try it but because of DNS cache assigned things it takes a while",
    "start": "1646140",
    "end": "1652680"
  },
  {
    "text": "for these things to propagate so I'm not going to do it right now but we could take a look at the end maybe if we have",
    "start": "1652680",
    "end": "1657930"
  },
  {
    "text": "enough time but what I'm going to show you is the Intracoastal traffic or the",
    "start": "1657930",
    "end": "1663510"
  },
  {
    "text": "inter cluster traffic or the internal clients if you have a service or if you",
    "start": "1663510",
    "end": "1668520"
  },
  {
    "text": "have a micro service architecture it's not sufficient that your service is working from outside the clusters you",
    "start": "1668520",
    "end": "1674100"
  },
  {
    "text": "also want your services to work from inside the clusters so if you have your service running in cluster a you can",
    "start": "1674100",
    "end": "1679350"
  },
  {
    "text": "access your service from cluster B because of Federation I'm",
    "start": "1679350",
    "end": "1684919"
  },
  {
    "text": "so I'm going to exit into one of the underlying clusters I again chose Europe",
    "start": "1685580",
    "end": "1691290"
  },
  {
    "text": "West one D it doesn't matter which one it's just it was just easy to copy/paste here",
    "start": "1691290",
    "end": "1698450"
  },
  {
    "text": "so I'm just starting a busy box container and exiting and starting a show",
    "start": "1698450",
    "end": "1706850"
  },
  {
    "text": "so like the kubernetes services federated service also gives you a",
    "start": "1706850",
    "end": "1713070"
  },
  {
    "text": "internal cube DNS service discovery name basically a DNS name and the DNS name is",
    "start": "1713070",
    "end": "1719040"
  },
  {
    "text": "very similar if you look look at the well this is not really visible for",
    "start": "1719040",
    "end": "1724290"
  },
  {
    "text": "people in the back I guess so it copy-paste data one of the shells here so",
    "start": "1724290",
    "end": "1730820"
  },
  {
    "text": "top left if you look at it I'm going to copy paste this command which is basically I'm doing which is basically",
    "start": "1730820",
    "end": "1737430"
  },
  {
    "text": "aw guide but I'm W getting to or coming to one of these sign points which is a",
    "start": "1737430",
    "end": "1743550"
  },
  {
    "text": "service discovery domain name within the clusters so my service name is nginx I'm in a default namespace",
    "start": "1743550",
    "end": "1750020"
  },
  {
    "text": "the next part is or the the next in fix is the name of the Federation we have a",
    "start": "1750020",
    "end": "1756150"
  },
  {
    "text": "concept where you can have a single cluster being a single cluster can be part of multiple Federation so",
    "start": "1756150",
    "end": "1763370"
  },
  {
    "text": "you can specify the Federation name and if you do this you get the local shard",
    "start": "1763370",
    "end": "1768500"
  },
  {
    "text": "of the service running if now I do have a local shard of the service or local",
    "start": "1768500",
    "end": "1773690"
  },
  {
    "text": "back and in every cluster so I am getting the local version if I did not have a local shard or a local back-end I",
    "start": "1773690",
    "end": "1780380"
  },
  {
    "text": "would automatically be rerouted to one of the closest clusters this is the",
    "start": "1780380",
    "end": "1785990"
  },
  {
    "text": "power of federation joins thank you I'll hand back to Quinton we'll talk a little bit more about these things and then I",
    "start": "1785990",
    "end": "1794030"
  },
  {
    "text": "come back to talk about the Federation control plane deployment",
    "start": "1794030",
    "end": "1799000"
  },
  {
    "text": "thanks Badou hopefully that was informative what else",
    "start": "1804370",
    "end": "1809990"
  },
  {
    "text": "do we want to talk about so some of the stuff that you saw up there might have been a little confusing lots of consoles",
    "start": "1809990",
    "end": "1815810"
  },
  {
    "text": "etc so I want to go through you know what was happening behind the hood there so we what you looked at previously was",
    "start": "1815810",
    "end": "1823550"
  },
  {
    "text": "a service we can also do the same thing within l7 load balancer ingress load balancer so essentially what happens is",
    "start": "1823550",
    "end": "1830540"
  },
  {
    "text": "you make a call to the Federation API master you specify where you want your",
    "start": "1830540",
    "end": "1837290"
  },
  {
    "text": "application to run by default you can leave that out and it'll just spread it across all the clusters as you saw in",
    "start": "1837290",
    "end": "1842930"
  },
  {
    "text": "the previous demo but you can also specify which clusters you wanted to run in and what the weights should be for",
    "start": "1842930",
    "end": "1849050"
  },
  {
    "text": "each cluster a single call that gets deployed across all the clusters this example when you have three but a more",
    "start": "1849050",
    "end": "1855230"
  },
  {
    "text": "common example is you know 10 or 15 or 20 you create the service similarly that",
    "start": "1855230",
    "end": "1860930"
  },
  {
    "text": "was creating all the clusters this automatically in the case of a global ingress wires up an external global load",
    "start": "1860930",
    "end": "1868580"
  },
  {
    "text": "balancer which spreads load across all of the pods in in your service across",
    "start": "1868580",
    "end": "1874370"
  },
  {
    "text": "all of the clusters and upgrades can be done pretty painlessly",
    "start": "1874370",
    "end": "1881090"
  },
  {
    "text": "you can make a single command upgrade to upgrade your service cross multiple data centers",
    "start": "1881090",
    "end": "1886540"
  },
  {
    "text": "l3e so same concept this is again essentially a repeat of what Mario just",
    "start": "1886540",
    "end": "1892520"
  },
  {
    "text": "gave you in the demo but perhaps a little graphically for those who might have not have followed the specifications stop right there are",
    "start": "1892520",
    "end": "1899840"
  },
  {
    "text": "exactly the same as the specifications that you would use for kubernetes control play and make sure that all of",
    "start": "1899840",
    "end": "1905810"
  },
  {
    "text": "these entities are created across all clusters and all the DNS management is",
    "start": "1905810",
    "end": "1911560"
  },
  {
    "text": "managed automatically for you its failure where it has health checks against all of the pods in your service",
    "start": "1911560",
    "end": "1917750"
  },
  {
    "text": "and automatically removes and adds DNS records for you based on which pods are",
    "start": "1917750",
    "end": "1923830"
  },
  {
    "text": "successfully serving at the time which data centers in particular",
    "start": "1923830",
    "end": "1929680"
  },
  {
    "text": "and this is just an example if things go wrong certain cluster goes down fails",
    "start": "1929680",
    "end": "1936160"
  },
  {
    "text": "automatically all the DNS stuff gets updated the health checks fail and your users get directed to a",
    "start": "1936160",
    "end": "1942880"
  },
  {
    "text": "different cluster yes",
    "start": "1942880",
    "end": "1946960"
  },
  {
    "text": "[Music]",
    "start": "1953110",
    "end": "1956170"
  },
  {
    "text": "upon one pier what's up say the DNS name for this app in another cluster",
    "start": "1958950",
    "end": "1966599"
  },
  {
    "text": "it's a good question the answer is it looks up the same thing so so it looks",
    "start": "1967559",
    "end": "1972729"
  },
  {
    "text": "up a name which is the name of the service that at once and the name of the Federation so you can either specify I",
    "start": "1972729",
    "end": "1978460"
  },
  {
    "text": "only want to find that service if it's in my cluster or the lookup should fail or you can say I would like to find it",
    "start": "1978460",
    "end": "1984399"
  },
  {
    "text": "in my cluster if it exists or otherwise give me the closest replica",
    "start": "1984399",
    "end": "1990148"
  },
  {
    "text": "yes correct for the load balancer that exposes that service externally yes",
    "start": "1993179",
    "end": "2000830"
  },
  {
    "text": "yes so the current incarnation of this provides public services so the services",
    "start": "2000830",
    "end": "2006899"
  },
  {
    "text": "are exposed on load-balanced external IPs and publicly visible dns names as",
    "start": "2006899",
    "end": "2012419"
  },
  {
    "text": "you might have mentioned I might have noticed on the earlier slides creating private services is definitely a user",
    "start": "2012419",
    "end": "2018149"
  },
  {
    "text": "requirement and we'll work on that in the coming future so where the DNS names are internal to the clusters and the IP",
    "start": "2018149",
    "end": "2025469"
  },
  {
    "text": "addresses are not visible on the public internet so that answer your question excellent so as Marty mentioned earlier",
    "start": "2025469",
    "end": "2032609"
  },
  {
    "text": "we're going to talk a little bit about how to create Federation control planes in fact maybe a mother you want to take over Aden as far more about this than I",
    "start": "2032609",
    "end": "2039479"
  },
  {
    "text": "do and just so you know we got we already got applause from the other row maybe that's a signal",
    "start": "2039479",
    "end": "2046998"
  },
  {
    "text": "right so there's a hint right here good",
    "start": "2047809",
    "end": "2053250"
  },
  {
    "text": "Federation control plane is another application in kubernetes so we started",
    "start": "2053250",
    "end": "2058770"
  },
  {
    "text": "working with this assumption that we already have kubernetes cluster as why not leverage all the features that's",
    "start": "2058770",
    "end": "2064408"
  },
  {
    "text": "available so it runs as an application in one of the underlying clusters let's take a look at how that actually works",
    "start": "2064409",
    "end": "2070888"
  },
  {
    "text": "or the architecture so if you want to create a Federation you want multiple",
    "start": "2070889",
    "end": "2077309"
  },
  {
    "text": "clusters that's exactly why you're creating Federation it's not really necessary that you create all your",
    "start": "2077309",
    "end": "2082559"
  },
  {
    "text": "clusters up front you can create the clusters or provision the clusters at",
    "start": "2082559",
    "end": "2088079"
  },
  {
    "text": "any time that you want decommission them join with Federation unjoin and whatever",
    "start": "2088079",
    "end": "2093089"
  },
  {
    "text": "and whatnot every possible permutation and combination but you need at least a",
    "start": "2093089",
    "end": "2098430"
  },
  {
    "text": "single cluster to set up Federation control plane itself which we call as the host cluster it doesn't matter which",
    "start": "2098430",
    "end": "2103950"
  },
  {
    "text": "cluster is your host cluster in my example here I'll choose cluster 2 as my host cluster and I have three other",
    "start": "2103950",
    "end": "2110609"
  },
  {
    "text": "clusters already set up for me but you can add clusters as you want so a federation for people who are familiar",
    "start": "2110609",
    "end": "2117660"
  },
  {
    "text": "with the kubernetes control plane itself it looks exactly identical or almost",
    "start": "2117660",
    "end": "2123510"
  },
  {
    "text": "identical we have an API server Federation API server like the kubernetes api server and that server",
    "start": "2123510",
    "end": "2130859"
  },
  {
    "text": "the server's endpoint has to be exposed to the outside world for people to make API requests so we deploy the API server",
    "start": "2130859",
    "end": "2139589"
  },
  {
    "text": "itself in a part but we use the kubernetes deployment resource or the API object so the Federation API server",
    "start": "2139589",
    "end": "2145710"
  },
  {
    "text": "is a deployment and we expose that using the kubernetes api service IP service",
    "start": "2145710",
    "end": "2151380"
  },
  {
    "text": "resource and we have a federation controller manager and that again is deployed as another kubernetes",
    "start": "2151380",
    "end": "2158220"
  },
  {
    "text": "deployment we need a data store to store the state of the API server like kubernetes so we have HCD which backs",
    "start": "2158220",
    "end": "2165720"
  },
  {
    "text": "the Federation API server state itself or the storage itself and then we need",
    "start": "2165720",
    "end": "2171150"
  },
  {
    "text": "to set up all the credential certificates and all those things and configure DNS dns providers cloud",
    "start": "2171150",
    "end": "2177750"
  },
  {
    "text": "providers and whatnot all these things can be done manually and in my setup I'm",
    "start": "2177750",
    "end": "2182819"
  },
  {
    "text": "using cluster 2 as an example but again I want to re-emphasize it doesn't matter also you can spread your control plane",
    "start": "2182819",
    "end": "2189180"
  },
  {
    "text": "across multiple clusters the current scripts actually don't do it but we have a plan on making the Federation control",
    "start": "2189180",
    "end": "2195299"
  },
  {
    "text": "plane itself ha1 of the future releases not the one coming up in December but in",
    "start": "2195299",
    "end": "2201180"
  },
  {
    "text": "a future release but you can do all these things by hand but the problem is these things are a",
    "start": "2201180",
    "end": "2208470"
  },
  {
    "text": "little error-prone but let's talk about that in the next slide so once you have the control planes set",
    "start": "2208470",
    "end": "2215099"
  },
  {
    "text": "up you want to register already register clusters in order to register a cluster you basically send this a que request",
    "start": "2215099",
    "end": "2221970"
  },
  {
    "text": "this a PA if this object to the Federation API server endpoint this is",
    "start": "2221970",
    "end": "2227880"
  },
  {
    "text": "probably the only special APA resource that we have in Federation today the API",
    "start": "2227880",
    "end": "2233970"
  },
  {
    "text": "to register our already registered clusters so you specify the cluster name and the API server endpoint of the",
    "start": "2233970",
    "end": "2241560"
  },
  {
    "text": "kubernetes cluster and a reference to a secret which contains the credentials to access that cluster and you submit this",
    "start": "2241560",
    "end": "2247950"
  },
  {
    "text": "to your Federation API server endpoint and boom your cluster is registered",
    "start": "2247950",
    "end": "2253430"
  },
  {
    "text": "cluster is registered and you can start sending API requests to",
    "start": "2253430",
    "end": "2259410"
  },
  {
    "text": "that again all these things can be done manually and it many people actually do",
    "start": "2259410",
    "end": "2265410"
  },
  {
    "text": "this manually if you go look at Kelsey's tutorial he has all the steps listed to do these things manually but it is very",
    "start": "2265410",
    "end": "2271380"
  },
  {
    "text": "error-prone so in order to simplify these things we are building a new command-line tool called s cube fed it",
    "start": "2271380",
    "end": "2277920"
  },
  {
    "text": "stands for kubernetes federate it reduces both the control plane",
    "start": "2277920",
    "end": "2283260"
  },
  {
    "text": "deployment itself and cluster registration and D registration to two commands cube fit in it will deploy the",
    "start": "2283260",
    "end": "2289950"
  },
  {
    "text": "Federation control plane for you in a single command and cupid join will register your cluster with Federation",
    "start": "2289950",
    "end": "2296580"
  },
  {
    "text": "again in another single command there is an equivalent cupid unjoin but it's not listed here anyway this is how the",
    "start": "2296580",
    "end": "2303780"
  },
  {
    "text": "control plane works and that's it we yeah",
    "start": "2303780",
    "end": "2310400"
  },
  {
    "text": "no one has questions far away [Music] security concerns",
    "start": "2311840",
    "end": "2319230"
  },
  {
    "text": "yeah absolutely so the security story here is pretty weak at the moment you",
    "start": "2323190",
    "end": "2329320"
  },
  {
    "text": "know we explicitly decided to do that just to prove out the concept and get people to use this stuff in a sort of",
    "start": "2329320",
    "end": "2334480"
  },
  {
    "text": "proof of concept context the model is fairly simple at the moment a user",
    "start": "2334480",
    "end": "2341320"
  },
  {
    "text": "provides the credentials that they would use to access a cluster to the Federation and the Federation act on",
    "start": "2341320",
    "end": "2347080"
  },
  {
    "text": "their behalf using those exact credentials it's not secure it's not multi-tenant it's it's not the right way",
    "start": "2347080",
    "end": "2352780"
  },
  {
    "text": "to do things but it does enable you to you know at least play around with the stuff the model going forward is going",
    "start": "2352780",
    "end": "2358180"
  },
  {
    "text": "to be much more sophisticated than that essentially the Federation will impersonate particular you know more",
    "start": "2358180",
    "end": "2364030"
  },
  {
    "text": "than one different user and use their each of those credentials which it will get from an external source to operate",
    "start": "2364030",
    "end": "2371200"
  },
  {
    "text": "on behalf of the user explicitly as opposed to pretend they are at that person yeah",
    "start": "2371200",
    "end": "2377220"
  },
  {
    "text": "yes I",
    "start": "2377220",
    "end": "2380670"
  },
  {
    "text": "don't know I have not given much thought what precisely do you mean by network",
    "start": "2384840",
    "end": "2390640"
  },
  {
    "text": "policy in this context",
    "start": "2390640",
    "end": "2393630"
  },
  {
    "text": "ingress filtering I have not applied my mind to that problem I must confess the",
    "start": "2397830",
    "end": "2403150"
  },
  {
    "text": "general principle is that what we do is we work through the kubernetes api and we've been",
    "start": "2403150",
    "end": "2409920"
  },
  {
    "text": "adopting you know the most important things first but yes anything that kubernetes supports that you could",
    "start": "2409920",
    "end": "2415570"
  },
  {
    "text": "reasonably expect to be implemented in the Federation control plane would be in on the roadmap",
    "start": "2415570",
    "end": "2421980"
  },
  {
    "text": "exactly how we do that it's not clear to me yet yeah yes",
    "start": "2421980",
    "end": "2428760"
  },
  {
    "text": "the",
    "start": "2429190",
    "end": "2431310"
  },
  {
    "text": "sure that that's a good question so the model is similar to kubernetes so at",
    "start": "2436050",
    "end": "2442960"
  },
  {
    "text": "the at the low end of the spectrum you have a single API server you have a single controller manager and a single",
    "start": "2442960",
    "end": "2450190"
  },
  {
    "text": "sed server and these things get automatically restarted so they're self-healing but not highly available in",
    "start": "2450190",
    "end": "2455800"
  },
  {
    "text": "the sense that if any one of them fails you will have an outage for the period of time that it takes to bring up a new",
    "start": "2455800",
    "end": "2461680"
  },
  {
    "text": "pot the sed server is typically backed by a persistent disk which outlives particular nodes so it comes back again",
    "start": "2461680",
    "end": "2469359"
  },
  {
    "text": "reattaches the same disk and life is good within a few seconds the next step up from that is to have multiple API",
    "start": "2469359",
    "end": "2475869"
  },
  {
    "text": "servers you can have as many as you like behind the service you know you can send your request through any one of them",
    "start": "2475869",
    "end": "2481300"
  },
  {
    "text": "those are all backed by a potentially or typically a quorum of SED hosts so you",
    "start": "2481300",
    "end": "2487599"
  },
  {
    "text": "have commonly three or five of these things and in the case of three you can lose one and have it replaced and you",
    "start": "2487599",
    "end": "2494260"
  },
  {
    "text": "have no outage you have a master elected controller manager which does things are",
    "start": "2494260",
    "end": "2499599"
  },
  {
    "text": "scheduling etc so you kind of multiple of those but you can have a leader election so you can have multiple running at the same time as soon as one",
    "start": "2499599",
    "end": "2505660"
  },
  {
    "text": "dies the other one takes over as leader and then the extension that applies in the Federation cases you can spread",
    "start": "2505660",
    "end": "2511690"
  },
  {
    "text": "these things across multiple clusters so a common h.a deployment scenario would",
    "start": "2511690",
    "end": "2517660"
  },
  {
    "text": "be multiple clusters in the same region in the same cloud provider so low latency relatively low latency network",
    "start": "2517660",
    "end": "2524140"
  },
  {
    "text": "connectivity low cost but three replicas in different availability zones you can lose an entire availability zone and you",
    "start": "2524140",
    "end": "2530680"
  },
  {
    "text": "will have no outage of your control plane and the same goes for the API servers multiple in different zones and",
    "start": "2530680",
    "end": "2538560"
  },
  {
    "text": "controller manager which does leader election across URLs",
    "start": "2538560",
    "end": "2543779"
  },
  {
    "text": "I think there was someone back there no okay yes",
    "start": "2545650",
    "end": "2551670"
  },
  {
    "text": "we you could go one level in my town basically you talk to the API Federation",
    "start": "2561900",
    "end": "2567760"
  },
  {
    "text": "API server itself exposed as a federated service and then you are talking to that",
    "start": "2567760",
    "end": "2573070"
  },
  {
    "text": "endpoint so if one of your underlying API server fails you are automatically reverted to the other one does it mean",
    "start": "2573070",
    "end": "2582090"
  },
  {
    "text": "if you set up a federated service you have your DNS entry configured to talk",
    "start": "2582960",
    "end": "2588700"
  },
  {
    "text": "to all the services you just talk to the one that's closest to you and if that goes down you dock your your DNS traffic",
    "start": "2588700",
    "end": "2596020"
  },
  {
    "text": "is automatically when you do a DNS query you automatically get back I DIF different data card and you start",
    "start": "2596020",
    "end": "2602980"
  },
  {
    "text": "talking to that and one thing is with bringing up here a lot of people get worried about the resiliency of the",
    "start": "2602980",
    "end": "2608800"
  },
  {
    "text": "control plane it's important to note that the failure of the Federation control plane does not result in the",
    "start": "2608800",
    "end": "2614110"
  },
  {
    "text": "failure of all the clusters it's completely independent the clusters carry on running woopsie and the",
    "start": "2614110",
    "end": "2619330"
  },
  {
    "text": "clusters carry on running you know some of the DNS updates will will not happen",
    "start": "2619330",
    "end": "2624460"
  },
  {
    "text": "while the Federation control plane is down but everything else works fine the load balancers that load balanced onto all of those things are configured",
    "start": "2624460",
    "end": "2630820"
  },
  {
    "text": "everything works the replicas the replica set controllers in the underlying clusters are making sure that the right number of pods are running etc",
    "start": "2630820",
    "end": "2636550"
  },
  {
    "text": "so you know it's it's not such a catastrophe to have your entire Federation control plane go down other",
    "start": "2636550",
    "end": "2642610"
  },
  {
    "text": "than the fact that you lose API access to it but your application carries on running largely unaffected and the same",
    "start": "2642610",
    "end": "2648430"
  },
  {
    "text": "goes for individual clusters by the way if you lose an individual cluster in the Federation you know the services",
    "start": "2648430",
    "end": "2654280"
  },
  {
    "text": "generally carry on running yes",
    "start": "2654280",
    "end": "2657870"
  },
  {
    "text": "if you have clusters on different versions of the kubernetes control plant",
    "start": "2673590",
    "end": "2679060"
  },
  {
    "text": "software yeah yes yeah that's absolutely fine and what",
    "start": "2679060",
    "end": "2688000"
  },
  {
    "text": "will happen is if you have an outage depending on how you've deployed your kubernetes clusters you could do that",
    "start": "2688000",
    "end": "2694240"
  },
  {
    "text": "upgrade in a in a way in which your API remained available",
    "start": "2694240",
    "end": "2699550"
  },
  {
    "text": "in which case the Federation wouldn't care it would keep communicating we have API backwards compatibility so",
    "start": "2699550",
    "end": "2705940"
  },
  {
    "text": "everything should work fine if you have an upgrade scenario where the API server",
    "start": "2705940",
    "end": "2711820"
  },
  {
    "text": "goes down for some period of time the Federation will see that we'll mark it as you noticed when we listed the",
    "start": "2711820",
    "end": "2718150"
  },
  {
    "text": "clusters earlier on you had ready so your cluster will become unready for some period of time and then depending",
    "start": "2718150",
    "end": "2725050"
  },
  {
    "text": "on how your deployments etc are set up it could actually move replicas to a",
    "start": "2725050",
    "end": "2731050"
  },
  {
    "text": "different cluster for you and that's all optional so you can either configure it in such a way that the cluster will",
    "start": "2731050",
    "end": "2737290"
  },
  {
    "text": "remain as it is or that it that the Federation control plane will redeploy the replicas into other clusters for you",
    "start": "2737290",
    "end": "2746099"
  },
  {
    "text": "yeah it's a little bit outside of the description we've run out of time but I'm happy to talk about it afterwards we",
    "start": "2761710",
    "end": "2767000"
  },
  {
    "text": "do have you know full backwards compatibility of API of API so so a client talking to a cluster can assume",
    "start": "2767000",
    "end": "2774079"
  },
  {
    "text": "that it is talking to a version 1.4 cluster or even if it is talking to one point I plus 1 yeah",
    "start": "2774079",
    "end": "2780700"
  },
  {
    "text": "[Applause]",
    "start": "2781190",
    "end": "2786089"
  }
]