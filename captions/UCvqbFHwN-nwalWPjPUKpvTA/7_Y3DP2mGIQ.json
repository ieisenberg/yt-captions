[
  {
    "text": "uh hi everyone uh thank you for joining",
    "start": "359",
    "end": "2560"
  },
  {
    "text": "the session uh I'm amula from IBM uh as",
    "start": "2560",
    "end": "5759"
  },
  {
    "text": "the title suggests uh first let's try to",
    "start": "5759",
    "end": "9880"
  },
  {
    "text": "understand what exactly is this fear and",
    "start": "9880",
    "end": "12040"
  },
  {
    "text": "how to eliminate it uh we know that for",
    "start": "12040",
    "end": "15200"
  },
  {
    "text": "any project a cicd is important for code",
    "start": "15200",
    "end": "18199"
  },
  {
    "text": "confidence and quality if the project",
    "start": "18199",
    "end": "20840"
  },
  {
    "text": "involves creating infrastructure",
    "start": "20840",
    "end": "22600"
  },
  {
    "text": "resources managing them could be tricky",
    "start": "22600",
    "end": "24880"
  },
  {
    "text": "because there's always a chance of stale",
    "start": "24880",
    "end": "26519"
  },
  {
    "text": "resources which is difficult to track",
    "start": "26519",
    "end": "28080"
  },
  {
    "text": "and manage scary right so can we have",
    "start": "28080",
    "end": "31800"
  },
  {
    "text": "automation to manage it on Project level",
    "start": "31800",
    "end": "34040"
  },
  {
    "text": "sure but can we make it more generic yes",
    "start": "34040",
    "end": "37399"
  },
  {
    "text": "uh this is where bosos comes into",
    "start": "37399",
    "end": "39480"
  },
  {
    "text": "picture uh any quick show off hands if",
    "start": "39480",
    "end": "41800"
  },
  {
    "text": "anybody has heard of",
    "start": "41800",
    "end": "44160"
  },
  {
    "text": "bosos all right thank you uh in simple",
    "start": "44160",
    "end": "47199"
  },
  {
    "text": "terms it's a resource manager service",
    "start": "47199",
    "end": "49559"
  },
  {
    "text": "that manages resources of a particular",
    "start": "49559",
    "end": "51559"
  },
  {
    "text": "type by transitioning between States now",
    "start": "51559",
    "end": "54000"
  },
  {
    "text": "those are a lot of terms let's break",
    "start": "54000",
    "end": "55640"
  },
  {
    "text": "this down with an",
    "start": "55640",
    "end": "56920"
  },
  {
    "text": "example uh before we move ahead it is",
    "start": "56920",
    "end": "59039"
  },
  {
    "text": "also to be noted that BOS course is",
    "start": "59039",
    "end": "60840"
  },
  {
    "text": "currently used in the official cicd",
    "start": "60840",
    "end": "62640"
  },
  {
    "text": "system of uh kubernetes projects that is",
    "start": "62640",
    "end": "65799"
  },
  {
    "text": "prow consider a test case scenario where",
    "start": "65799",
    "end": "68400"
  },
  {
    "text": "we have to run kubernetes confirmance",
    "start": "68400",
    "end": "70159"
  },
  {
    "text": "tests and the requirement is a virtual",
    "start": "70159",
    "end": "71799"
  },
  {
    "text": "machine traditionally you could be",
    "start": "71799",
    "end": "73720"
  },
  {
    "text": "storing the in information about the",
    "start": "73720",
    "end": "75960"
  },
  {
    "text": "resources uh specific to the project at",
    "start": "75960",
    "end": "78600"
  },
  {
    "text": "a place and managing them we can",
    "start": "78600",
    "end": "81000"
  },
  {
    "text": "streamline it using bosos uh bosos is a",
    "start": "81000",
    "end": "83960"
  },
  {
    "text": "controller which is associated with a",
    "start": "83960",
    "end": "85640"
  },
  {
    "text": "custom resource so the custom resource",
    "start": "85640",
    "end": "87960"
  },
  {
    "text": "defines the type of resource we want B",
    "start": "87960",
    "end": "90040"
  },
  {
    "text": "SC to manage so first we Define the type",
    "start": "90040",
    "end": "92240"
  },
  {
    "text": "of resource in our case it would be a VM",
    "start": "92240",
    "end": "94399"
  },
  {
    "text": "and deploy it then we Define a manifest",
    "start": "94399",
    "end": "97600"
  },
  {
    "text": "of the resources uh and also the",
    "start": "97600",
    "end": "100079"
  },
  {
    "text": "attributes and deploy and deploy where",
    "start": "100079",
    "end": "102240"
  },
  {
    "text": "Bosco is the controller which will",
    "start": "102240",
    "end": "103799"
  },
  {
    "text": "register the resources and uh manage",
    "start": "103799",
    "end": "106399"
  },
  {
    "text": "them as you can see here is the list and",
    "start": "106399",
    "end": "108560"
  },
  {
    "text": "each resource has some attributes such",
    "start": "108560",
    "end": "110079"
  },
  {
    "text": "as tape St type State owner and last",
    "start": "110079",
    "end": "113280"
  },
  {
    "text": "updated",
    "start": "113280",
    "end": "114520"
  },
  {
    "text": "Time Each resource also has some user",
    "start": "114520",
    "end": "117360"
  },
  {
    "text": "data Associated to it which the can use",
    "start": "117360",
    "end": "120520"
  },
  {
    "text": "for example the VM can have its ID or",
    "start": "120520",
    "end": "122320"
  },
  {
    "text": "any specific information you want it to",
    "start": "122320",
    "end": "124439"
  },
  {
    "text": "have um as I mentioned earlier bosos",
    "start": "124439",
    "end": "127159"
  },
  {
    "text": "manages resource uh via States so a",
    "start": "127159",
    "end": "129720"
  },
  {
    "text": "resource exists in a particular State at",
    "start": "129720",
    "end": "131640"
  },
  {
    "text": "any given time the basic states are free",
    "start": "131640",
    "end": "134599"
  },
  {
    "text": "busy and dirty and we'll see how uh",
    "start": "134599",
    "end": "136760"
  },
  {
    "text": "resource transitions through them so",
    "start": "136760",
    "end": "139599"
  },
  {
    "text": "initially when a job requests a resource",
    "start": "139599",
    "end": "141519"
  },
  {
    "text": "we expect it to be in Free State for the",
    "start": "141519",
    "end": "143400"
  },
  {
    "text": "job to be pick it up and use it so once",
    "start": "143400",
    "end": "145840"
  },
  {
    "text": "it is uh we Lee a free resource the job",
    "start": "145840",
    "end": "148680"
  },
  {
    "text": "uses it and while in use the state",
    "start": "148680",
    "end": "150800"
  },
  {
    "text": "transitions to busy and post that we",
    "start": "150800",
    "end": "152760"
  },
  {
    "text": "release the",
    "start": "152760",
    "end": "154280"
  },
  {
    "text": "resource once the resource is released",
    "start": "154280",
    "end": "157080"
  },
  {
    "text": "uh the state transitions to dirty and",
    "start": "157080",
    "end": "159640"
  },
  {
    "text": "here another component janitor comes",
    "start": "159640",
    "end": "161440"
  },
  {
    "text": "into picture and as the name suggests",
    "start": "161440",
    "end": "163599"
  },
  {
    "text": "janitor is responsible for cleaning up",
    "start": "163599",
    "end": "166280"
  },
  {
    "text": "the resource and adding it back to the",
    "start": "166280",
    "end": "167879"
  },
  {
    "text": "pool uh in a in a state we expect it to",
    "start": "167879",
    "end": "170319"
  },
  {
    "text": "be so while clean up the state",
    "start": "170319",
    "end": "172360"
  },
  {
    "text": "transitions into cleaning and then we",
    "start": "172360",
    "end": "174640"
  },
  {
    "text": "set it to free so in this example the",
    "start": "174640",
    "end": "176480"
  },
  {
    "text": "janitor could clean up the VM and create",
    "start": "176480",
    "end": "178200"
  },
  {
    "text": "a new one and add it back to the pool uh",
    "start": "178200",
    "end": "180239"
  },
  {
    "text": "with the necessary dependencies of the",
    "start": "180239",
    "end": "181760"
  },
  {
    "text": "job",
    "start": "181760",
    "end": "182440"
  },
  {
    "text": "needs so zooming out on what we",
    "start": "182440",
    "end": "184640"
  },
  {
    "text": "discussed with an end to end floor once",
    "start": "184640",
    "end": "186720"
  },
  {
    "text": "a job is triggered and the job requires",
    "start": "186720",
    "end": "189120"
  },
  {
    "text": "the resource of type VM we ask bosos for",
    "start": "189120",
    "end": "191680"
  },
  {
    "text": "a free resource we use it and while in",
    "start": "191680",
    "end": "193760"
  },
  {
    "text": "use we continuously update to bosos that",
    "start": "193760",
    "end": "196519"
  },
  {
    "text": "the resource is in is in use and keep",
    "start": "196519",
    "end": "198400"
  },
  {
    "text": "the state as busy and once the resource",
    "start": "198400",
    "end": "200799"
  },
  {
    "text": "is done I mean once the job is done and",
    "start": "200799",
    "end": "202799"
  },
  {
    "text": "the resource is used we release it back",
    "start": "202799",
    "end": "204560"
  },
  {
    "text": "to bosos and set it as dirty where",
    "start": "204560",
    "end": "206599"
  },
  {
    "text": "janitor comes into picture cleans it up",
    "start": "206599",
    "end": "208959"
  },
  {
    "text": "and add it backs to the pool here",
    "start": "208959",
    "end": "211000"
  },
  {
    "text": "another component called Reaper plays an",
    "start": "211000",
    "end": "212920"
  },
  {
    "text": "important role in a scenario due to any",
    "start": "212920",
    "end": "215200"
  },
  {
    "text": "reason where the resource stuck in a",
    "start": "215200",
    "end": "217239"
  },
  {
    "text": "state such as busy or cleaning janitor",
    "start": "217239",
    "end": "219959"
  },
  {
    "text": "transitions uh it after a certain period",
    "start": "219959",
    "end": "222400"
  },
  {
    "text": "Reaper transitions it after a certain",
    "start": "222400",
    "end": "224120"
  },
  {
    "text": "period of time to dirty where the",
    "start": "224120",
    "end": "226959"
  },
  {
    "text": "janitor comes picks it up cleans it and",
    "start": "226959",
    "end": "229200"
  },
  {
    "text": "marks it as free we can see how the",
    "start": "229200",
    "end": "231200"
  },
  {
    "text": "resource transitions through different",
    "start": "231200",
    "end": "232720"
  },
  {
    "text": "states here this ensures that no",
    "start": "232720",
    "end": "235519"
  },
  {
    "text": "resources left",
    "start": "235519",
    "end": "237480"
  },
  {
    "text": "unattended how do we set up bosos in a",
    "start": "237480",
    "end": "239959"
  },
  {
    "text": "cluster first decide the type of",
    "start": "239959",
    "end": "242000"
  },
  {
    "text": "resource you want for your specific job",
    "start": "242000",
    "end": "244319"
  },
  {
    "text": "implement the janitor accordingly to",
    "start": "244319",
    "end": "246000"
  },
  {
    "text": "cater to different",
    "start": "246000",
    "end": "247519"
  },
  {
    "text": "infrastructures and you add the",
    "start": "247519",
    "end": "249200"
  },
  {
    "text": "resources to bosos you configure your",
    "start": "249200",
    "end": "252000"
  },
  {
    "text": "your bosos janitor and Reaper",
    "start": "252000",
    "end": "253959"
  },
  {
    "text": "accordingly uh similar steps can be",
    "start": "253959",
    "end": "256079"
  },
  {
    "text": "followed to add new infrastructure",
    "start": "256079",
    "end": "257680"
  },
  {
    "text": "resources to the Upstream prow cluster",
    "start": "257680",
    "end": "259519"
  },
  {
    "text": "as",
    "start": "259519",
    "end": "260199"
  },
  {
    "text": "well to know more you can check out the",
    "start": "260199",
    "end": "262440"
  },
  {
    "text": "GitHub repository and you can reach out",
    "start": "262440",
    "end": "264360"
  },
  {
    "text": "on slack on testing uh with that we come",
    "start": "264360",
    "end": "267000"
  },
  {
    "text": "to an end thank you very much",
    "start": "267000",
    "end": "271000"
  }
]