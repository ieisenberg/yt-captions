[
  {
    "text": "thank you everybody to come to the very",
    "start": "719",
    "end": "2560"
  },
  {
    "text": "last session of CubeCon in this room",
    "start": "2560",
    "end": "4799"
  },
  {
    "text": "we're really happy that that you have",
    "start": "4799",
    "end": "7680"
  },
  {
    "text": "the patience to stay here until the last",
    "start": "7680",
    "end": "9679"
  },
  {
    "text": "moment uh my name is uh Mark Tudori i'm",
    "start": "9679",
    "end": "13040"
  },
  {
    "text": "a software engineer in Graphana Labs and",
    "start": "13040",
    "end": "15599"
  },
  {
    "text": "we're going to talk today about using",
    "start": "15599",
    "end": "17359"
  },
  {
    "text": "EVPF for non-invasive invasive instant",
    "start": "17359",
    "end": "20560"
  },
  {
    "text": "network monitoring and here's Mario",
    "start": "20560",
    "end": "23279"
  },
  {
    "text": "hello i'm Mario Matias also from Grafana",
    "start": "23279",
    "end": "27039"
  },
  {
    "text": "Lab and uh I work in the same team as as",
    "start": "27039",
    "end": "31439"
  },
  {
    "text": "Mark uh we work mainly on EVPF and we",
    "start": "31439",
    "end": "35760"
  },
  {
    "text": "are going to present how we use EVPF to",
    "start": "35760",
    "end": "38239"
  },
  {
    "text": "provide",
    "start": "38239",
    "end": "40000"
  },
  {
    "text": "uh monitor to monitor your network your",
    "start": "40000",
    "end": "43440"
  },
  {
    "text": "and your application at different layers",
    "start": "43440",
    "end": "45600"
  },
  {
    "text": "of the network stack i know many of you",
    "start": "45600",
    "end": "48960"
  },
  {
    "text": "already know",
    "start": "48960",
    "end": "50039"
  },
  {
    "text": "EVPF so but I'd like to do a small",
    "start": "50039",
    "end": "53120"
  },
  {
    "text": "introduction uh how we are using ebpf in",
    "start": "53120",
    "end": "57760"
  },
  {
    "text": "in in the graphana beta team basically",
    "start": "57760",
    "end": "61359"
  },
  {
    "text": "you your application run on top of or",
    "start": "61359",
    "end": "64799"
  },
  {
    "text": "using uh a set of libraries and it runs",
    "start": "64799",
    "end": "67920"
  },
  {
    "text": "on top of the Linux kernel using it it",
    "start": "67920",
    "end": "72000"
  },
  {
    "text": "interacts to it with sys call and the",
    "start": "72000",
    "end": "74640"
  },
  {
    "text": "Linux kernel has a runtime that",
    "start": "74640",
    "end": "76640"
  },
  {
    "text": "allocates the resources and operates",
    "start": "76640",
    "end": "78799"
  },
  {
    "text": "your application",
    "start": "78799",
    "end": "80960"
  },
  {
    "text": "an EVPFbased solution like Grafana Baila",
    "start": "80960",
    "end": "86159"
  },
  {
    "text": "uh to provide observability or security",
    "start": "86159",
    "end": "89040"
  },
  {
    "text": "or networking any not concretely",
    "start": "89040",
    "end": "91600"
  },
  {
    "text": "Graphana but any EVPF based solution",
    "start": "91600",
    "end": "94320"
  },
  {
    "text": "also runs as",
    "start": "94320",
    "end": "96600"
  },
  {
    "text": "a as a user level application in the",
    "start": "96600",
    "end": "100320"
  },
  {
    "text": "user space application but it interacts",
    "start": "100320",
    "end": "104479"
  },
  {
    "text": "with the EVP the the EVPF implementation",
    "start": "104479",
    "end": "108079"
  },
  {
    "text": "that runs in the kernel that provides",
    "start": "108079",
    "end": "109920"
  },
  {
    "text": "It's verification and just in time",
    "start": "109920",
    "end": "112240"
  },
  {
    "text": "compilation for safe access to the",
    "start": "112240",
    "end": "114640"
  },
  {
    "text": "resources it provides some maps to",
    "start": "114640",
    "end": "117840"
  },
  {
    "text": "communicate the user and the kernel",
    "start": "117840",
    "end": "120479"
  },
  {
    "text": "space and some kernel helper helper API",
    "start": "120479",
    "end": "123680"
  },
  {
    "text": "to interact and to load the",
    "start": "123680",
    "end": "126280"
  },
  {
    "text": "programs we are using many types of EVPF",
    "start": "126280",
    "end": "130160"
  },
  {
    "text": "programs evpf is not something like okay",
    "start": "130160",
    "end": "133520"
  },
  {
    "text": "I run a I deploy a single program and it",
    "start": "133520",
    "end": "136480"
  },
  {
    "text": "does everything evpf runs or injects",
    "start": "136480",
    "end": "140840"
  },
  {
    "text": "multiple small unlimited programs into",
    "start": "140840",
    "end": "144400"
  },
  {
    "text": "different parts of your uh stack in the",
    "start": "144400",
    "end": "148800"
  },
  {
    "text": "operating system runtime you can load",
    "start": "148800",
    "end": "151520"
  },
  {
    "text": "network programs that in your network",
    "start": "151520",
    "end": "154640"
  },
  {
    "text": "stack you can run K probes that will be",
    "start": "154640",
    "end": "158120"
  },
  {
    "text": "triggered",
    "start": "158120",
    "end": "159879"
  },
  {
    "text": "upon concrete or or given uh kernel",
    "start": "159879",
    "end": "164000"
  },
  {
    "text": "events but also you can load you probes",
    "start": "164000",
    "end": "167040"
  },
  {
    "text": "you can load you can add probes into the",
    "start": "167040",
    "end": "170160"
  },
  {
    "text": "application or the user space level",
    "start": "170160",
    "end": "173280"
  },
  {
    "text": "application this is in libraries or in",
    "start": "173280",
    "end": "176160"
  },
  {
    "text": "the actual application",
    "start": "176160",
    "end": "178599"
  },
  {
    "text": "executable good part of EVPF is that if",
    "start": "178599",
    "end": "182080"
  },
  {
    "text": "you want to run EVPF or for example",
    "start": "182080",
    "end": "184319"
  },
  {
    "text": "instrument an application you you don't",
    "start": "184319",
    "end": "187280"
  },
  {
    "text": "need to rebuild the code of your",
    "start": "187280",
    "end": "188800"
  },
  {
    "text": "application to inject the probes you",
    "start": "188800",
    "end": "192080"
  },
  {
    "text": "don't need to redeploy your services",
    "start": "192080",
    "end": "194159"
  },
  {
    "text": "with with the EPF agent it will be EB it",
    "start": "194159",
    "end": "197680"
  },
  {
    "text": "will be the EVPF solution who injects",
    "start": "197680",
    "end": "200640"
  },
  {
    "text": "directly and transparently to the",
    "start": "200640",
    "end": "202560"
  },
  {
    "text": "instrumented application it has good",
    "start": "202560",
    "end": "205920"
  },
  {
    "text": "native performance because it has a just",
    "start": "205920",
    "end": "208159"
  },
  {
    "text": "in time compiled and it also uh adds",
    "start": "208159",
    "end": "211680"
  },
  {
    "text": "safety it uh it evpf preverifies your",
    "start": "211680",
    "end": "215280"
  },
  {
    "text": "program to guarantee that the program",
    "start": "215280",
    "end": "218159"
  },
  {
    "text": "will end and won't do some uh operations",
    "start": "218159",
    "end": "222000"
  },
  {
    "text": "that could hang your kernel but ebpf is",
    "start": "222000",
    "end": "225760"
  },
  {
    "text": "not magic it's not an SQL or is not a in",
    "start": "225760",
    "end": "230080"
  },
  {
    "text": "a file system interface in where you can",
    "start": "230080",
    "end": "232560"
  },
  {
    "text": "have uh information in a well definfined",
    "start": "232560",
    "end": "236519"
  },
  {
    "text": "stable format",
    "start": "236519",
    "end": "238879"
  },
  {
    "text": "uh it requires AP API level knowledge of",
    "start": "238879",
    "end": "242560"
  },
  {
    "text": "the instrumented targets and when I say",
    "start": "242560",
    "end": "245360"
  },
  {
    "text": "API level I mean binary level knowledge",
    "start": "245360",
    "end": "248720"
  },
  {
    "text": "of the data not not not you don't have",
    "start": "248720",
    "end": "252080"
  },
  {
    "text": "to think in a code level but how the",
    "start": "252080",
    "end": "254959"
  },
  {
    "text": "information is structured in a b binary",
    "start": "254959",
    "end": "258720"
  },
  {
    "text": "level and also programs are limited in",
    "start": "258720",
    "end": "261359"
  },
  {
    "text": "size and",
    "start": "261359",
    "end": "262440"
  },
  {
    "text": "functionality so instrumenting an",
    "start": "262440",
    "end": "265199"
  },
  {
    "text": "application and the network level",
    "start": "265199",
    "end": "266800"
  },
  {
    "text": "requires ers multiple small programs to",
    "start": "266800",
    "end": "270400"
  },
  {
    "text": "be coordinated in a common effort",
    "start": "270400",
    "end": "273600"
  },
  {
    "text": "graphana bail is the solution we provide",
    "start": "273600",
    "end": "277840"
  },
  {
    "text": "uh or is is our approach for zero code",
    "start": "277840",
    "end": "280880"
  },
  {
    "text": "automatic instrumentation and network",
    "start": "280880",
    "end": "283400"
  },
  {
    "text": "monitoring by zero code I mean without",
    "start": "283400",
    "end": "286160"
  },
  {
    "text": "having to change or redeploy your",
    "start": "286160",
    "end": "288400"
  },
  {
    "text": "application it provides metrics at",
    "start": "288400",
    "end": "291360"
  },
  {
    "text": "different levels of your network stack",
    "start": "291360",
    "end": "293600"
  },
  {
    "text": "like uh levels about uh metrics about",
    "start": "293600",
    "end": "297840"
  },
  {
    "text": "network connections uh also application",
    "start": "297840",
    "end": "301440"
  },
  {
    "text": "level metrics following the open",
    "start": "301440",
    "end": "303680"
  },
  {
    "text": "telemetry specification about different",
    "start": "303680",
    "end": "307039"
  },
  {
    "text": "services your application may carry like",
    "start": "307039",
    "end": "310000"
  },
  {
    "text": "HTTP gRPC Kafka etc we also provide uh",
    "start": "310000",
    "end": "314240"
  },
  {
    "text": "traces at uh following the open",
    "start": "314240",
    "end": "316960"
  },
  {
    "text": "telemetry specification also application",
    "start": "316960",
    "end": "319680"
  },
  {
    "text": "level",
    "start": "319680",
    "end": "320680"
  },
  {
    "text": "traces uh the network as I said is not",
    "start": "320680",
    "end": "324000"
  },
  {
    "text": "instrumented as a single program that",
    "start": "324000",
    "end": "326240"
  },
  {
    "text": "does everything you need to install",
    "start": "326240",
    "end": "328800"
  },
  {
    "text": "multiple programs in different multiple",
    "start": "328800",
    "end": "331680"
  },
  {
    "text": "small programs in different parts of",
    "start": "331680",
    "end": "334240"
  },
  {
    "text": "your uh of your system",
    "start": "334240",
    "end": "338400"
  },
  {
    "text": "uh those programs goes from programs in",
    "start": "338400",
    "end": "342080"
  },
  {
    "text": "the traffic control of the of or the",
    "start": "342080",
    "end": "344160"
  },
  {
    "text": "express data path to get information",
    "start": "344160",
    "end": "346680"
  },
  {
    "text": "from from IPs ports packets Ethernet",
    "start": "346680",
    "end": "351039"
  },
  {
    "text": "addresses interfaces um they will give",
    "start": "351039",
    "end": "354479"
  },
  {
    "text": "you information about L3 and L4 layers",
    "start": "354479",
    "end": "359199"
  },
  {
    "text": "uh but this is very limited to",
    "start": "359199",
    "end": "361280"
  },
  {
    "text": "connections",
    "start": "361280",
    "end": "363039"
  },
  {
    "text": "uh with K probes in the kernel you can",
    "start": "363039",
    "end": "366319"
  },
  {
    "text": "get more information about IPS",
    "start": "366319",
    "end": "368400"
  },
  {
    "text": "connection uh host names and so on and",
    "start": "368400",
    "end": "371919"
  },
  {
    "text": "then if you go to the application level",
    "start": "371919",
    "end": "374000"
  },
  {
    "text": "with probes you can get richer",
    "start": "374000",
    "end": "377120"
  },
  {
    "text": "information like which protocols are",
    "start": "377120",
    "end": "379840"
  },
  {
    "text": "they using and even for each method call",
    "start": "379840",
    "end": "384120"
  },
  {
    "text": "arguments payloads return codes SQL etc",
    "start": "384120",
    "end": "389120"
  },
  {
    "text": "anything that is visible through the",
    "start": "389120",
    "end": "392160"
  },
  {
    "text": "internally",
    "start": "392160",
    "end": "394960"
  },
  {
    "text": "uh but instrumentation even this is not",
    "start": "394960",
    "end": "397840"
  },
  {
    "text": "uniform I said it's not just installing",
    "start": "397840",
    "end": "400400"
  },
  {
    "text": "a program and do it but it's not also",
    "start": "400400",
    "end": "402560"
  },
  {
    "text": "installing four programs and you have",
    "start": "402560",
    "end": "404319"
  },
  {
    "text": "everything because as we said it is",
    "start": "404319",
    "end": "406880"
  },
  {
    "text": "platform dependent you need to know the",
    "start": "406880",
    "end": "408960"
  },
  {
    "text": "binary uh organization you need to know",
    "start": "408960",
    "end": "411840"
  },
  {
    "text": "the runtime organization and you might",
    "start": "411840",
    "end": "413680"
  },
  {
    "text": "have different applications in your",
    "start": "413680",
    "end": "415680"
  },
  {
    "text": "system using different technologies so",
    "start": "415680",
    "end": "418560"
  },
  {
    "text": "for example for C rust and python Python",
    "start": "418560",
    "end": "422319"
  },
  {
    "text": "Python I I mention it because even if",
    "start": "422319",
    "end": "424479"
  },
  {
    "text": "it's an is interpreted it interacts uh",
    "start": "424479",
    "end": "427840"
  },
  {
    "text": "in in with the operating system uh in",
    "start": "427840",
    "end": "430160"
  },
  {
    "text": "binary level with sys calls you might",
    "start": "430160",
    "end": "433440"
  },
  {
    "text": "need a set of probes but if you want to",
    "start": "433440",
    "end": "436479"
  },
  {
    "text": "instrument go and java you might need to",
    "start": "436479",
    "end": "439319"
  },
  {
    "text": "hook your probes in in other points or",
    "start": "439319",
    "end": "443360"
  },
  {
    "text": "in in in other parts of your",
    "start": "443360",
    "end": "447720"
  },
  {
    "text": "executable because for example some go",
    "start": "447720",
    "end": "451039"
  },
  {
    "text": "and java handle some libraries that uh",
    "start": "451039",
    "end": "454479"
  },
  {
    "text": "other other languages rely on on the",
    "start": "454479",
    "end": "456960"
  },
  {
    "text": "operating system while Go and Java for",
    "start": "456960",
    "end": "459039"
  },
  {
    "text": "example for TLS or secure connections",
    "start": "459039",
    "end": "461680"
  },
  {
    "text": "bundle their their own",
    "start": "461680",
    "end": "463960"
  },
  {
    "text": "libraries basically with all these set",
    "start": "463960",
    "end": "467199"
  },
  {
    "text": "of programs what we have is a bunch of",
    "start": "467199",
    "end": "470240"
  },
  {
    "text": "pel",
    "start": "470240",
    "end": "471400"
  },
  {
    "text": "pieces but we need to join them to give",
    "start": "471400",
    "end": "474400"
  },
  {
    "text": "some sense to them for network metrics",
    "start": "474400",
    "end": "478560"
  },
  {
    "text": "what we what you get is every time for",
    "start": "478560",
    "end": "481759"
  },
  {
    "text": "every packet a program is is is run and",
    "start": "481759",
    "end": "485680"
  },
  {
    "text": "extracts some information from your",
    "start": "485680",
    "end": "487520"
  },
  {
    "text": "connections source IPs ports destination",
    "start": "487520",
    "end": "490160"
  },
  {
    "text": "IPs destination ports also other",
    "start": "490160",
    "end": "492160"
  },
  {
    "text": "information like payload size in uh",
    "start": "492160",
    "end": "495280"
  },
  {
    "text": "system interface and so on if you want",
    "start": "495280",
    "end": "498560"
  },
  {
    "text": "for example to know how many bandwidth",
    "start": "498560",
    "end": "502319"
  },
  {
    "text": "is is uh you have between two endpoints",
    "start": "502319",
    "end": "505120"
  },
  {
    "text": "in your system is relatively easy",
    "start": "505120",
    "end": "508199"
  },
  {
    "text": "because you you have source IP source",
    "start": "508199",
    "end": "511199"
  },
  {
    "text": "port destination IP destination port so",
    "start": "511199",
    "end": "513839"
  },
  {
    "text": "you can group",
    "start": "513839",
    "end": "515680"
  },
  {
    "text": "uh you can you can you you can group all",
    "start": "515680",
    "end": "517919"
  },
  {
    "text": "your uh packets network packets and",
    "start": "517919",
    "end": "520800"
  },
  {
    "text": "aggregate the this data",
    "start": "520800",
    "end": "524480"
  },
  {
    "text": "but uh and you uh one example of metric",
    "start": "524480",
    "end": "527519"
  },
  {
    "text": "we have is BA provises network bail",
    "start": "527519",
    "end": "530399"
  },
  {
    "text": "network flow bytes that for two",
    "start": "530399",
    "end": "532519"
  },
  {
    "text": "endpoints it provides how many bytes are",
    "start": "532519",
    "end": "535279"
  },
  {
    "text": "going in a given direction but for",
    "start": "535279",
    "end": "539200"
  },
  {
    "text": "higher level applications it's a bit or",
    "start": "539200",
    "end": "542640"
  },
  {
    "text": "higher higher layers application level",
    "start": "542640",
    "end": "546160"
  },
  {
    "text": "layers it's a bit more difficult because",
    "start": "546160",
    "end": "549120"
  },
  {
    "text": "what you see is a bunch of or or a a",
    "start": "549120",
    "end": "554399"
  },
  {
    "text": "of events coming from different programs",
    "start": "554399",
    "end": "557440"
  },
  {
    "text": "that means coming from a socket coming",
    "start": "557440",
    "end": "560720"
  },
  {
    "text": "from the TLS library coming from the",
    "start": "560720",
    "end": "562399"
  },
  {
    "text": "ATPS library coming from a Golang",
    "start": "562399",
    "end": "566120"
  },
  {
    "text": "executable and you get a bunch of events",
    "start": "566120",
    "end": "569680"
  },
  {
    "text": "but what you don't really care about the",
    "start": "569680",
    "end": "573040"
  },
  {
    "text": "events themselves are not so useful are",
    "start": "573040",
    "end": "576160"
  },
  {
    "text": "like individual puzzle pieces what you",
    "start": "576160",
    "end": "578000"
  },
  {
    "text": "know is what you want is to know the",
    "start": "578000",
    "end": "580880"
  },
  {
    "text": "whole cycle of a for example an HTTP",
    "start": "580880",
    "end": "584959"
  },
  {
    "text": "request when it starts when it",
    "start": "584959",
    "end": "587240"
  },
  {
    "text": "ends what method has called uh what it",
    "start": "587240",
    "end": "591440"
  },
  {
    "text": "return and the those are",
    "start": "591440",
    "end": "594640"
  },
  {
    "text": "uh pieces that come individually you",
    "start": "594640",
    "end": "597360"
  },
  {
    "text": "need to merge them to join",
    "start": "597360",
    "end": "599399"
  },
  {
    "text": "them in classic web",
    "start": "599399",
    "end": "602519"
  },
  {
    "text": "servers it's there is an easy way it's",
    "start": "602519",
    "end": "605600"
  },
  {
    "text": "relatively easy when I say easy is like",
    "start": "605600",
    "end": "608240"
  },
  {
    "text": "okay it's not not not rocket science",
    "start": "608240",
    "end": "612800"
  },
  {
    "text": "uh you have a thread ID an apparent",
    "start": "612800",
    "end": "615920"
  },
  {
    "text": "thread so you can relate you can get",
    "start": "615920",
    "end": "618720"
  },
  {
    "text": "this information from from EVPF so even",
    "start": "618720",
    "end": "623040"
  },
  {
    "text": "if you get events from different sources",
    "start": "623040",
    "end": "627200"
  },
  {
    "text": "you store them in a in an EVPF map and",
    "start": "627200",
    "end": "629600"
  },
  {
    "text": "then from the user space you can read",
    "start": "629600",
    "end": "632079"
  },
  {
    "text": "DCVPF map uh DCVPF map and join them by",
    "start": "632079",
    "end": "636480"
  },
  {
    "text": "the thread for example classic classic",
    "start": "636480",
    "end": "638880"
  },
  {
    "text": "old style web servers accept a",
    "start": "638880",
    "end": "641959"
  },
  {
    "text": "connection create a new thread for that",
    "start": "641959",
    "end": "645079"
  },
  {
    "text": "connection and and then uh per carries",
    "start": "645079",
    "end": "648800"
  },
  {
    "text": "their request from that thread so using",
    "start": "648800",
    "end": "651760"
  },
  {
    "text": "the thread ID even if you have multiple",
    "start": "651760",
    "end": "654160"
  },
  {
    "text": "events in the in the queue using the",
    "start": "654160",
    "end": "656560"
  },
  {
    "text": "thread ID you can group which events uh",
    "start": "656560",
    "end": "660000"
  },
  {
    "text": "belong to a single HTTP request so here",
    "start": "660000",
    "end": "664640"
  },
  {
    "text": "we might know that this HTTP request is",
    "start": "664640",
    "end": "667600"
  },
  {
    "text": "a client side request because uh we we",
    "start": "667600",
    "end": "671920"
  },
  {
    "text": "see this HTTP payload in the socket",
    "start": "671920",
    "end": "675399"
  },
  {
    "text": "submission so not in the socket",
    "start": "675399",
    "end": "677600"
  },
  {
    "text": "receiving but in the socket submission",
    "start": "677600",
    "end": "679120"
  },
  {
    "text": "so we know it's at client side requisite",
    "start": "679120",
    "end": "682079"
  },
  {
    "text": "we know it's",
    "start": "682079",
    "end": "683160"
  },
  {
    "text": "HTTP just inspecting the payload that is",
    "start": "683160",
    "end": "686920"
  },
  {
    "text": "extracted from Ebpf you can even know",
    "start": "686920",
    "end": "690079"
  },
  {
    "text": "the the method the HTTP method get users",
    "start": "690079",
    "end": "694160"
  },
  {
    "text": "uh you can you may know the payload size",
    "start": "694160",
    "end": "697279"
  },
  {
    "text": "you may know the response code because",
    "start": "697279",
    "end": "699040"
  },
  {
    "text": "for that same HTTP for that same thread",
    "start": "699040",
    "end": "703040"
  },
  {
    "text": "ID you you you have another event later",
    "start": "703040",
    "end": "706959"
  },
  {
    "text": "uh at time 143 is just a random time uh",
    "start": "706959",
    "end": "711839"
  },
  {
    "text": "with the HTTP status and you can know",
    "start": "711839",
    "end": "715440"
  },
  {
    "text": "the payload time and you can even know",
    "start": "715440",
    "end": "716959"
  },
  {
    "text": "the total transaction time since the",
    "start": "716959",
    "end": "718959"
  },
  {
    "text": "connection is created until the",
    "start": "718959",
    "end": "721160"
  },
  {
    "text": "connection is is closed",
    "start": "721160",
    "end": "724680"
  },
  {
    "text": "but uh luckily but unluckily for us uh",
    "start": "724680",
    "end": "730959"
  },
  {
    "text": "modern web servers uh don't work that",
    "start": "730959",
    "end": "733839"
  },
  {
    "text": "way they use an even loop they have a",
    "start": "733839",
    "end": "737200"
  },
  {
    "text": "lot",
    "start": "737200",
    "end": "738040"
  },
  {
    "text": "of they have a they have a small pool of",
    "start": "738040",
    "end": "741760"
  },
  {
    "text": "threads and they carry request from that",
    "start": "741760",
    "end": "744959"
  },
  {
    "text": "small pool of of threads",
    "start": "744959",
    "end": "748360"
  },
  {
    "text": "so in uh we need to also apart the",
    "start": "748360",
    "end": "752240"
  },
  {
    "text": "thread ID is not bell anymore because as",
    "start": "752240",
    "end": "754959"
  },
  {
    "text": "the same thread might carry multiple",
    "start": "754959",
    "end": "758760"
  },
  {
    "text": "uh concurrent requests uh so we need to",
    "start": "758760",
    "end": "763360"
  },
  {
    "text": "hook also in some implementation",
    "start": "763360",
    "end": "766240"
  },
  {
    "text": "depending functions so we need to add",
    "start": "766240",
    "end": "768839"
  },
  {
    "text": "extra EVPF probes for example for a go",
    "start": "768839",
    "end": "772720"
  },
  {
    "text": "standard HTTP application we need to",
    "start": "772720",
    "end": "775600"
  },
  {
    "text": "maintain a tree of parent child go",
    "start": "775600",
    "end": "777760"
  },
  {
    "text": "routines so we know uh uh we we can",
    "start": "777760",
    "end": "781920"
  },
  {
    "text": "relate the different events and can join",
    "start": "781920",
    "end": "783920"
  },
  {
    "text": "the pieces according to the parent child",
    "start": "783920",
    "end": "785680"
  },
  {
    "text": "go routines in NodeJS you need you have",
    "start": "785680",
    "end": "788880"
  },
  {
    "text": "this a sync ID which is a a similar ID",
    "start": "788880",
    "end": "793200"
  },
  {
    "text": "in Kafka you need to maintain a tree of",
    "start": "793200",
    "end": "795680"
  },
  {
    "text": "pointers to the different message",
    "start": "795680",
    "end": "797399"
  },
  {
    "text": "handlers so uh things start becoming",
    "start": "797399",
    "end": "801639"
  },
  {
    "text": "more plat uh more implementation",
    "start": "801639",
    "end": "804440"
  },
  {
    "text": "dependent we need to support or or to",
    "start": "804440",
    "end": "808800"
  },
  {
    "text": "explicitly add support to new or to",
    "start": "808800",
    "end": "811279"
  },
  {
    "text": "other uh to to new frame frameworks uh",
    "start": "811279",
    "end": "816399"
  },
  {
    "text": "also this has a problem that is if you",
    "start": "816399",
    "end": "818639"
  },
  {
    "text": "have a library if the library or",
    "start": "818639",
    "end": "820560"
  },
  {
    "text": "framework internally is updated for",
    "start": "820560",
    "end": "823360"
  },
  {
    "text": "because they optimize it they find a",
    "start": "823360",
    "end": "826160"
  },
  {
    "text": "better a more performant way to do it",
    "start": "826160",
    "end": "828720"
  },
  {
    "text": "your instrumentation might be broken so",
    "start": "828720",
    "end": "832399"
  },
  {
    "text": "you need to send us a GitHub issue and",
    "start": "832399",
    "end": "836480"
  },
  {
    "text": "we will fix it as soon as we can",
    "start": "836480",
    "end": "840399"
  },
  {
    "text": "so uh summarizing what we provide",
    "start": "840399",
    "end": "843279"
  },
  {
    "text": "network metrics network level metrics L3",
    "start": "843279",
    "end": "845920"
  },
  {
    "text": "L4 are robust because they are based on",
    "start": "845920",
    "end": "848399"
  },
  {
    "text": "a stable APIs uh basically the Linux",
    "start": "848399",
    "end": "852240"
  },
  {
    "text": "kernel TCP IP library and the binary",
    "start": "852240",
    "end": "855440"
  },
  {
    "text": "implementation is a standard uh so it's",
    "start": "855440",
    "end": "858639"
  },
  {
    "text": "it's robust but it provides very basic",
    "start": "858639",
    "end": "861199"
  },
  {
    "text": "information basically source and destin",
    "start": "861199",
    "end": "863519"
  },
  {
    "text": "how many flow how many bytes are flowing",
    "start": "863519",
    "end": "866320"
  },
  {
    "text": "between two endpoints in your cluster",
    "start": "866320",
    "end": "869519"
  },
  {
    "text": "uh application level metrics provides",
    "start": "869519",
    "end": "871920"
  },
  {
    "text": "richer information like methods or might",
    "start": "871920",
    "end": "876959"
  },
  {
    "text": "give better insights what's going on",
    "start": "876959",
    "end": "878800"
  },
  {
    "text": "inside your application but the h the",
    "start": "878800",
    "end": "882079"
  },
  {
    "text": "inconvenience that it needs to implement",
    "start": "882079",
    "end": "884639"
  },
  {
    "text": "explicit support to any new",
    "start": "884639",
    "end": "886600"
  },
  {
    "text": "implementation or library of a protocol",
    "start": "886600",
    "end": "890199"
  },
  {
    "text": "and it's relying on internal",
    "start": "890199",
    "end": "892720"
  },
  {
    "text": "implementation details that can change",
    "start": "892720",
    "end": "894399"
  },
  {
    "text": "with time so it's broken it's also",
    "start": "894399",
    "end": "897560"
  },
  {
    "text": "important to provide",
    "start": "897560",
    "end": "900399"
  },
  {
    "text": "uh trace context propagation this is",
    "start": "900399",
    "end": "904000"
  },
  {
    "text": "this is an example of a single trace",
    "start": "904000",
    "end": "906160"
  },
  {
    "text": "this means that for example if a if a",
    "start": "906160",
    "end": "908800"
  },
  {
    "text": "service gets a request and under the",
    "start": "908800",
    "end": "912560"
  },
  {
    "text": "under the the context of that request",
    "start": "912560",
    "end": "915600"
  },
  {
    "text": "invokes requests to other services uh we",
    "start": "915600",
    "end": "919120"
  },
  {
    "text": "want to get traces for example here we",
    "start": "919120",
    "end": "921600"
  },
  {
    "text": "see a Chrome client that is invoking a",
    "start": "921600",
    "end": "924959"
  },
  {
    "text": "front end proxy this front end proxy is",
    "start": "924959",
    "end": "928079"
  },
  {
    "text": "invoking a front end and you can get a",
    "start": "928079",
    "end": "930560"
  },
  {
    "text": "better",
    "start": "930560",
    "end": "931399"
  },
  {
    "text": "view this is implemented using a",
    "start": "931399",
    "end": "935440"
  },
  {
    "text": "transparent heer",
    "start": "935440",
    "end": "938760"
  },
  {
    "text": "the this transparent heater is provided",
    "start": "938760",
    "end": "942000"
  },
  {
    "text": "by multiple instrumentation SDKs or from",
    "start": "942000",
    "end": "945199"
  },
  {
    "text": "the libraries that basically specify the",
    "start": "945199",
    "end": "948720"
  },
  {
    "text": "have good knowledge at the at the",
    "start": "948720",
    "end": "951440"
  },
  {
    "text": "platform level or at the code level have",
    "start": "951440",
    "end": "953920"
  },
  {
    "text": "good knowledge of which request is",
    "start": "953920",
    "end": "956800"
  },
  {
    "text": "related with which other client uh sub",
    "start": "956800",
    "end": "960639"
  },
  {
    "text": "requests the problem is doing that in",
    "start": "960639",
    "end": "963440"
  },
  {
    "text": "EVPF since EVPF as I say is doesn't have",
    "start": "963440",
    "end": "967360"
  },
  {
    "text": "has limited application level uh",
    "start": "967360",
    "end": "971800"
  },
  {
    "text": "information one way to do it is uh using",
    "start": "971800",
    "end": "975600"
  },
  {
    "text": "an EVPF program in the network stack",
    "start": "975600",
    "end": "978000"
  },
  {
    "text": "that when it detects for example in that",
    "start": "978000",
    "end": "980160"
  },
  {
    "text": "case an HTTP request it will punch a",
    "start": "980160",
    "end": "983759"
  },
  {
    "text": "hole in the in the HTTP buffer giving a",
    "start": "983759",
    "end": "987600"
  },
  {
    "text": "space for adding a transparent heater",
    "start": "987600",
    "end": "990959"
  },
  {
    "text": "this transparin is known is already",
    "start": "990959",
    "end": "993279"
  },
  {
    "text": "captured in another probes for from from",
    "start": "993279",
    "end": "996000"
  },
  {
    "text": "the request and using thread information",
    "start": "996000",
    "end": "997920"
  },
  {
    "text": "and so on can relate that but this won't",
    "start": "997920",
    "end": "1001199"
  },
  {
    "text": "work in TLS",
    "start": "1001199",
    "end": "1004000"
  },
  {
    "text": "uh because in TLS we cannot modify a a",
    "start": "1004000",
    "end": "1007360"
  },
  {
    "text": "seiffort secure payload so we are",
    "start": "1007360",
    "end": "1010399"
  },
  {
    "text": "providing a a novel approach based on IP",
    "start": "1010399",
    "end": "1014639"
  },
  {
    "text": "context propagation based on IP packets",
    "start": "1014639",
    "end": "1017120"
  },
  {
    "text": "so when we have an IP packet",
    "start": "1017120",
    "end": "1020160"
  },
  {
    "text": "uh we punch a hole in that packet and",
    "start": "1020160",
    "end": "1023199"
  },
  {
    "text": "add uh an IPv4 options uh it's it's it's",
    "start": "1023199",
    "end": "1027199"
  },
  {
    "text": "a part of the packet we expand the",
    "start": "1027199",
    "end": "1028959"
  },
  {
    "text": "packet and we want to we pass BA passes",
    "start": "1028959",
    "end": "1032880"
  },
  {
    "text": "the context in that packet however this",
    "start": "1032880",
    "end": "1036959"
  },
  {
    "text": "is a trace parent ID uh and this doesn't",
    "start": "1036959",
    "end": "1040798"
  },
  {
    "text": "fit in this this IPv4 options is very",
    "start": "1040799",
    "end": "1043520"
  },
  {
    "text": "limited a trace parent this is what is",
    "start": "1043520",
    "end": "1045760"
  },
  {
    "text": "passed in ITP header for example has a",
    "start": "1045760",
    "end": "1048799"
  },
  {
    "text": "trace ID ID and a span ID the trace ID",
    "start": "1048799",
    "end": "1051520"
  },
  {
    "text": "is the group identifies the group of",
    "start": "1051520",
    "end": "1054400"
  },
  {
    "text": "requests and the span ID is the",
    "start": "1054400",
    "end": "1056679"
  },
  {
    "text": "individual request so what we do",
    "start": "1056679",
    "end": "1059799"
  },
  {
    "text": "is we remove all the information that is",
    "start": "1059799",
    "end": "1063520"
  },
  {
    "text": "not the trace ID and uh pass this trace",
    "start": "1063520",
    "end": "1067919"
  },
  {
    "text": "ID as an IPv4 in the IPv4 options",
    "start": "1067919",
    "end": "1072960"
  },
  {
    "text": "uh",
    "start": "1072960",
    "end": "1074440"
  },
  {
    "text": "packet and then in the this is in the",
    "start": "1074440",
    "end": "1078400"
  },
  {
    "text": "address when the request goes out but",
    "start": "1078400",
    "end": "1081280"
  },
  {
    "text": "then in the ingress we reconstruct the",
    "start": "1081280",
    "end": "1083919"
  },
  {
    "text": "trace ID but instead of inh since we",
    "start": "1083919",
    "end": "1087360"
  },
  {
    "text": "cannot have we cannot inherit the span",
    "start": "1087360",
    "end": "1090080"
  },
  {
    "text": "ID we we relate it with a given request",
    "start": "1090080",
    "end": "1093520"
  },
  {
    "text": "using the span ID as the TCP len and TCP",
    "start": "1093520",
    "end": "1096559"
  },
  {
    "text": "act which we expect to be unique so that",
    "start": "1096559",
    "end": "1099919"
  },
  {
    "text": "way we can overcome secure connections",
    "start": "1099919",
    "end": "1102960"
  },
  {
    "text": "and pass context the inconvenience of",
    "start": "1102960",
    "end": "1105760"
  },
  {
    "text": "this is that",
    "start": "1105760",
    "end": "1108200"
  },
  {
    "text": "uh this works with this allow bail",
    "start": "1108200",
    "end": "1112480"
  },
  {
    "text": "interacting with other SDKs all open",
    "start": "1112480",
    "end": "1114880"
  },
  {
    "text": "telemetry SDKs while this requires that",
    "start": "1114880",
    "end": "1118080"
  },
  {
    "text": "all the services are instrumented with",
    "start": "1118080",
    "end": "1121440"
  },
  {
    "text": "bail",
    "start": "1121440",
    "end": "1124440"
  },
  {
    "text": "thanks Mario for the detailed",
    "start": "1124640",
    "end": "1126559"
  },
  {
    "text": "explanation now I going to proceed to",
    "start": "1126559",
    "end": "1128880"
  },
  {
    "text": "talk about how uh we make all of these",
    "start": "1128880",
    "end": "1131840"
  },
  {
    "text": "um network monitoring sense in the",
    "start": "1131840",
    "end": "1134160"
  },
  {
    "text": "context of Kubernetes because that's why",
    "start": "1134160",
    "end": "1136720"
  },
  {
    "text": "we are here for CubeCon",
    "start": "1136720",
    "end": "1139280"
  },
  {
    "text": "uh so what BA is at EBPF level as Mario",
    "start": "1139280",
    "end": "1143280"
  },
  {
    "text": "mentioned is that it's like very basic",
    "start": "1143280",
    "end": "1146160"
  },
  {
    "text": "information at network level we work",
    "start": "1146160",
    "end": "1149679"
  },
  {
    "text": "with addresses and ports either for",
    "start": "1149679",
    "end": "1152559"
  },
  {
    "text": "source and destination so we have this",
    "start": "1152559",
    "end": "1155679"
  },
  {
    "text": "with graph and for um application",
    "start": "1155679",
    "end": "1159919"
  },
  {
    "text": "metrics in this case for example we have",
    "start": "1159919",
    "end": "1162360"
  },
  {
    "text": "HTTP server request duration uh we are",
    "start": "1162360",
    "end": "1166000"
  },
  {
    "text": "able to track",
    "start": "1166000",
    "end": "1168039"
  },
  {
    "text": "uh how how is the latency for this route",
    "start": "1168039",
    "end": "1172559"
  },
  {
    "text": "but in this case uh most of uh as a",
    "start": "1172559",
    "end": "1175600"
  },
  {
    "text": "service name we capture Java which is",
    "start": "1175600",
    "end": "1178240"
  },
  {
    "text": "the command line uh for this um for this",
    "start": "1178240",
    "end": "1182480"
  },
  {
    "text": "application but this is not enough for",
    "start": "1182480",
    "end": "1184640"
  },
  {
    "text": "us what a Kubernetes user needs uh in",
    "start": "1184640",
    "end": "1188000"
  },
  {
    "text": "this in this case for for the case of um",
    "start": "1188000",
    "end": "1190640"
  },
  {
    "text": "network metrics is which Kubernetes",
    "start": "1190640",
    "end": "1193600"
  },
  {
    "text": "services are calling uh which so uh for",
    "start": "1193600",
    "end": "1197200"
  },
  {
    "text": "example we have um um a service front",
    "start": "1197200",
    "end": "1200640"
  },
  {
    "text": "end in the name space app that is",
    "start": "1200640",
    "end": "1203360"
  },
  {
    "text": "calling a database service in the",
    "start": "1203360",
    "end": "1206559"
  },
  {
    "text": "storage uh name and space and for the",
    "start": "1206559",
    "end": "1208960"
  },
  {
    "text": "case of application metrics we want to",
    "start": "1208960",
    "end": "1211760"
  },
  {
    "text": "know that that um service that it was",
    "start": "1211760",
    "end": "1215120"
  },
  {
    "text": "running in Java was actually the",
    "start": "1215120",
    "end": "1216720"
  },
  {
    "text": "inventory service running in the backend",
    "start": "1216720",
    "end": "1219919"
  },
  {
    "text": "name space how do how do we handle all",
    "start": "1219919",
    "end": "1223280"
  },
  {
    "text": "of this well uh Mario mentioned this in",
    "start": "1223280",
    "end": "1226240"
  },
  {
    "text": "in the previous session but I just going",
    "start": "1226240",
    "end": "1228159"
  },
  {
    "text": "to recap uh we we use a Kubernetes",
    "start": "1228159",
    "end": "1230880"
  },
  {
    "text": "abstraction called informers which uh uh",
    "start": "1230880",
    "end": "1234640"
  },
  {
    "text": "is provided in the Kubernetes API go",
    "start": "1234640",
    "end": "1236720"
  },
  {
    "text": "client and basically uh it allows us to",
    "start": "1236720",
    "end": "1240320"
  },
  {
    "text": "subscribe to events happening in the",
    "start": "1240320",
    "end": "1242880"
  },
  {
    "text": "Kubernetes cluster in this case we are",
    "start": "1242880",
    "end": "1245280"
  },
  {
    "text": "subscribed to pots services and nodes",
    "start": "1245280",
    "end": "1248480"
  },
  {
    "text": "and the cublet is going to respond us",
    "start": "1248480",
    "end": "1251520"
  },
  {
    "text": "every time there is updates in when you",
    "start": "1251520",
    "end": "1254880"
  },
  {
    "text": "create update or delete any of these um",
    "start": "1254880",
    "end": "1259960"
  },
  {
    "text": "entities then in bailout we maintain u a",
    "start": "1259960",
    "end": "1263679"
  },
  {
    "text": "map of IP addresses and and resources",
    "start": "1263679",
    "end": "1268400"
  },
  {
    "text": "and process ID and and resources and",
    "start": "1268400",
    "end": "1272960"
  },
  {
    "text": "like be careful with this because it's",
    "start": "1272960",
    "end": "1274880"
  },
  {
    "text": "that uh like if you have a cluster with",
    "start": "1274880",
    "end": "1277919"
  },
  {
    "text": "a few nodes it's fine but if you have a",
    "start": "1277919",
    "end": "1280159"
  },
  {
    "text": "cluster like us with thousand nodes we",
    "start": "1280159",
    "end": "1283200"
  },
  {
    "text": "we can create an outage so it's better",
    "start": "1283200",
    "end": "1284960"
  },
  {
    "text": "to use the cache that Mario mentioned",
    "start": "1284960",
    "end": "1286559"
  },
  {
    "text": "before so yeah so how do we match all of",
    "start": "1286559",
    "end": "1290559"
  },
  {
    "text": "this uh process process information with",
    "start": "1290559",
    "end": "1293440"
  },
  {
    "text": "Kubernetes information so what with APF",
    "start": "1293440",
    "end": "1297360"
  },
  {
    "text": "sees at BA uh instrumenting an",
    "start": "1297360",
    "end": "1300159"
  },
  {
    "text": "application is very basic it's just the",
    "start": "1300159",
    "end": "1302080"
  },
  {
    "text": "P and the command as we've seen before",
    "start": "1302080",
    "end": "1305440"
  },
  {
    "text": "uh and but in Kubernetes world we have",
    "start": "1305440",
    "end": "1308880"
  },
  {
    "text": "what we want to see which is the name",
    "start": "1308880",
    "end": "1311280"
  },
  {
    "text": "the name space and all of this stuff so",
    "start": "1311280",
    "end": "1314720"
  },
  {
    "text": "thankfully we we are able to thanks to",
    "start": "1314720",
    "end": "1316960"
  },
  {
    "text": "the process file system go to uh with",
    "start": "1316960",
    "end": "1321440"
  },
  {
    "text": "the P to fetch um specifically the croup",
    "start": "1321440",
    "end": "1325200"
  },
  {
    "text": "and with the croup we are able to relate",
    "start": "1325200",
    "end": "1328240"
  },
  {
    "text": "thanks the container ID um the process",
    "start": "1328240",
    "end": "1331760"
  },
  {
    "text": "information with the",
    "start": "1331760",
    "end": "1333159"
  },
  {
    "text": "bot okay uh we can also do uh some",
    "start": "1333159",
    "end": "1336720"
  },
  {
    "text": "interesting things like track in zone",
    "start": "1336720",
    "end": "1339200"
  },
  {
    "text": "traffic that means that uh we can uh",
    "start": "1339200",
    "end": "1342480"
  },
  {
    "text": "thanks to this uh network observability",
    "start": "1342480",
    "end": "1345520"
  },
  {
    "text": "uh inspect which zones are calling",
    "start": "1345520",
    "end": "1349840"
  },
  {
    "text": "others in in in the different clusters",
    "start": "1349840",
    "end": "1352799"
  },
  {
    "text": "and this is uh very interesting because",
    "start": "1352799",
    "end": "1354880"
  },
  {
    "text": "we can u calculate how much is the co",
    "start": "1354880",
    "end": "1358880"
  },
  {
    "text": "like we can infer the cost",
    "start": "1358880",
    "end": "1361400"
  },
  {
    "text": "um between",
    "start": "1361400",
    "end": "1363559"
  },
  {
    "text": "zones yeah so this is basically uh we",
    "start": "1363559",
    "end": "1367039"
  },
  {
    "text": "just go to the port and we are able to",
    "start": "1367039",
    "end": "1369760"
  },
  {
    "text": "to get the node name and in the node uh",
    "start": "1369760",
    "end": "1374159"
  },
  {
    "text": "there is this label topology kubernetes",
    "start": "1374159",
    "end": "1377360"
  },
  {
    "text": "zone",
    "start": "1377360",
    "end": "1378679"
  },
  {
    "text": "and fetching this data we are able to",
    "start": "1378679",
    "end": "1381440"
  },
  {
    "text": "enrich our bail flow network flow bytes",
    "start": "1381440",
    "end": "1385120"
  },
  {
    "text": "with a source and destination",
    "start": "1385120",
    "end": "1388159"
  },
  {
    "text": "uh zone and we can even create a new",
    "start": "1388159",
    "end": "1390799"
  },
  {
    "text": "metric which is the the total of bytes",
    "start": "1390799",
    "end": "1393840"
  },
  {
    "text": "between",
    "start": "1393840",
    "end": "1395640"
  },
  {
    "text": "zones uh we are also able to uh track",
    "start": "1395640",
    "end": "1400640"
  },
  {
    "text": "external traffic for now we were just",
    "start": "1400640",
    "end": "1403039"
  },
  {
    "text": "like uh tracking like traffic from",
    "start": "1403039",
    "end": "1406080"
  },
  {
    "text": "services to service inside the the same",
    "start": "1406080",
    "end": "1410240"
  },
  {
    "text": "cluster or uh crow zones but we are also",
    "start": "1410240",
    "end": "1414480"
  },
  {
    "text": "able to track external traffic for",
    "start": "1414480",
    "end": "1416320"
  },
  {
    "text": "example here we have a ping to",
    "start": "1416320",
    "end": "1418840"
  },
  {
    "text": "golang.org uh it's going to return an",
    "start": "1418840",
    "end": "1422080"
  },
  {
    "text": "address and we can do an S lookup to get",
    "start": "1422080",
    "end": "1426000"
  },
  {
    "text": "the the host name for that IP in the",
    "start": "1426000",
    "end": "1429360"
  },
  {
    "text": "context of bail let's imagine that we",
    "start": "1429360",
    "end": "1431200"
  },
  {
    "text": "have an instrumented application here",
    "start": "1431200",
    "end": "1433640"
  },
  {
    "text": "and this uh we are doing cool request or",
    "start": "1433640",
    "end": "1437280"
  },
  {
    "text": "HTTP request whatever to golang.org and",
    "start": "1437280",
    "end": "1440400"
  },
  {
    "text": "this goes to the DNS server",
    "start": "1440400",
    "end": "1444080"
  },
  {
    "text": "uh this is going to return some",
    "start": "1444080",
    "end": "1446000"
  },
  {
    "text": "information like the the host name and",
    "start": "1446000",
    "end": "1448960"
  },
  {
    "text": "thanks to BA and EVPF we're going to tap",
    "start": "1448960",
    "end": "1451440"
  },
  {
    "text": "into this uh call and we going to reach",
    "start": "1451440",
    "end": "1455720"
  },
  {
    "text": "our network flow bytes with uh",
    "start": "1455720",
    "end": "1459360"
  },
  {
    "text": "destination name instead of an IP we're",
    "start": "1459360",
    "end": "1462320"
  },
  {
    "text": "going to say the the DNS like the host",
    "start": "1462320",
    "end": "1465200"
  },
  {
    "text": "name here yeah the the good part here is",
    "start": "1465200",
    "end": "1467520"
  },
  {
    "text": "that using EVPF to sniff onto the DNS",
    "start": "1467520",
    "end": "1472799"
  },
  {
    "text": "traffic allows you to get the actual",
    "start": "1472799",
    "end": "1474640"
  },
  {
    "text": "name if we were using a name space look",
    "start": "1474640",
    "end": "1477600"
  },
  {
    "text": "up we will re we will decorate instead",
    "start": "1477600",
    "end": "1481279"
  },
  {
    "text": "of goland.org we will decorate it with",
    "start": "1481279",
    "end": "1483880"
  },
  {
    "text": "this give matt whatever whatever that is",
    "start": "1483880",
    "end": "1488320"
  },
  {
    "text": "what is actually returned so thanks to",
    "start": "1488320",
    "end": "1490400"
  },
  {
    "text": "evpf we can provide a more accurate",
    "start": "1490400",
    "end": "1493440"
  },
  {
    "text": "local reverse",
    "start": "1493440",
    "end": "1496120"
  },
  {
    "text": "DNS uh this is uh very cool we are",
    "start": "1496120",
    "end": "1500320"
  },
  {
    "text": "getting um a lot of information thanks",
    "start": "1500320",
    "end": "1502880"
  },
  {
    "text": "to the network uh monitoring but uh if",
    "start": "1502880",
    "end": "1506320"
  },
  {
    "text": "you enable bailine your",
    "start": "1506320",
    "end": "1507880"
  },
  {
    "text": "cluster is going to start to explode the",
    "start": "1507880",
    "end": "1510880"
  },
  {
    "text": "cardality because there's a lot of",
    "start": "1510880",
    "end": "1512640"
  },
  {
    "text": "labels and a lot of metrics that we're",
    "start": "1512640",
    "end": "1514880"
  },
  {
    "text": "starting to enable but thankfully uh we",
    "start": "1514880",
    "end": "1517360"
  },
  {
    "text": "provide in in in in our config like a",
    "start": "1517360",
    "end": "1520320"
  },
  {
    "text": "way to for a specific metric indicate",
    "start": "1520320",
    "end": "1524159"
  },
  {
    "text": "which labels we want to include or we",
    "start": "1524159",
    "end": "1527679"
  },
  {
    "text": "want to exclude from the collection of",
    "start": "1527679",
    "end": "1532360"
  },
  {
    "text": "metrics and uh you maybe are wondering",
    "start": "1532360",
    "end": "1536159"
  },
  {
    "text": "why what's the like uh utility of all of",
    "start": "1536159",
    "end": "1540240"
  },
  {
    "text": "this so thanks to uh BA and the network",
    "start": "1540240",
    "end": "1543679"
  },
  {
    "text": "monitoring we're like providing the like",
    "start": "1543679",
    "end": "1546559"
  },
  {
    "text": "the the data to uh one of uh other",
    "start": "1546559",
    "end": "1550520"
  },
  {
    "text": "graphana products which is graphana",
    "start": "1550520",
    "end": "1552960"
  },
  {
    "text": "search and one of the the features that",
    "start": "1552960",
    "end": "1556320"
  },
  {
    "text": "uh search has is this uh entity explorer",
    "start": "1556320",
    "end": "1559919"
  },
  {
    "text": "which uh allows you to see in all the",
    "start": "1559919",
    "end": "1563279"
  },
  {
    "text": "entities of um of your cluster how are",
    "start": "1563279",
    "end": "1566240"
  },
  {
    "text": "connected each other in this case uh we",
    "start": "1566240",
    "end": "1568799"
  },
  {
    "text": "we deployed uh in our cluster uh this",
    "start": "1568799",
    "end": "1572400"
  },
  {
    "text": "project from open telemetry called open",
    "start": "1572400",
    "end": "1574320"
  },
  {
    "text": "telemetry demo we showcase an",
    "start": "1574320",
    "end": "1577400"
  },
  {
    "text": "e-commerce where there are many uh",
    "start": "1577400",
    "end": "1580640"
  },
  {
    "text": "microservices calling each other so we",
    "start": "1580640",
    "end": "1583200"
  },
  {
    "text": "deployed open telemetry demo in our in a",
    "start": "1583200",
    "end": "1586159"
  },
  {
    "text": "in a cluster we enable BA and we have",
    "start": "1586159",
    "end": "1588880"
  },
  {
    "text": "this so you can see how the different",
    "start": "1588880",
    "end": "1592080"
  },
  {
    "text": "services are calling each other and then",
    "start": "1592080",
    "end": "1594880"
  },
  {
    "text": "you can have a a better understanding",
    "start": "1594880",
    "end": "1597039"
  },
  {
    "text": "how is the topology of the network in",
    "start": "1597039",
    "end": "1599520"
  },
  {
    "text": "your",
    "start": "1599520",
    "end": "1600919"
  },
  {
    "text": "cluster uh this is like very important",
    "start": "1600919",
    "end": "1603840"
  },
  {
    "text": "but thanks uh thanks to the shoulder of",
    "start": "1603840",
    "end": "1607200"
  },
  {
    "text": "giants like that's how we build bail",
    "start": "1607200",
    "end": "1610000"
  },
  {
    "text": "initially bailout was a fork of open",
    "start": "1610000",
    "end": "1612400"
  },
  {
    "text": "telemetry go instrumentation",
    "start": "1612400",
    "end": "1615279"
  },
  {
    "text": "uh that was covering the application",
    "start": "1615279",
    "end": "1617120"
  },
  {
    "text": "layer um and with time we evolve it to",
    "start": "1617120",
    "end": "1621520"
  },
  {
    "text": "we added more features and we went",
    "start": "1621520",
    "end": "1623520"
  },
  {
    "text": "beyond go and now we are able to do",
    "start": "1623520",
    "end": "1627039"
  },
  {
    "text": "application monitoring for any kind of",
    "start": "1627039",
    "end": "1629760"
  },
  {
    "text": "programming language and for the network",
    "start": "1629760",
    "end": "1633120"
  },
  {
    "text": "park we uh thanks to uh we did a",
    "start": "1633120",
    "end": "1636640"
  },
  {
    "text": "successful proof of concept after a",
    "start": "1636640",
    "end": "1638840"
  },
  {
    "text": "hackathon um",
    "start": "1638840",
    "end": "1641360"
  },
  {
    "text": "uh taking inspiration from this project",
    "start": "1641360",
    "end": "1643840"
  },
  {
    "text": "called net observe IO and we basically",
    "start": "1643840",
    "end": "1648000"
  },
  {
    "text": "BA is doing the combination of these two",
    "start": "1648000",
    "end": "1651039"
  },
  {
    "text": "uh amazing projects and Graphana has has",
    "start": "1651039",
    "end": "1655679"
  },
  {
    "text": "a core values open source and community",
    "start": "1655679",
    "end": "1659120"
  },
  {
    "text": "so we were like very uh keen to like",
    "start": "1659120",
    "end": "1664960"
  },
  {
    "text": "donate BA back to open telemetry and we",
    "start": "1664960",
    "end": "1668320"
  },
  {
    "text": "initiated a donation like in uh in",
    "start": "1668320",
    "end": "1671440"
  },
  {
    "text": "October last year and it's been ongoing",
    "start": "1671440",
    "end": "1674320"
  },
  {
    "text": "for a couple of months and thankfully we",
    "start": "1674320",
    "end": "1676880"
  },
  {
    "text": "are reaching to the that the donation is",
    "start": "1676880",
    "end": "1679679"
  },
  {
    "text": "very well accepted and in the upcoming",
    "start": "1679679",
    "end": "1682640"
  },
  {
    "text": "months we plan to uh finally set up the",
    "start": "1682640",
    "end": "1687679"
  },
  {
    "text": "whole uh community around what would be",
    "start": "1687679",
    "end": "1690480"
  },
  {
    "text": "like EBPF auto instrumentation open",
    "start": "1690480",
    "end": "1693440"
  },
  {
    "text": "telemetry",
    "start": "1693440",
    "end": "1695039"
  },
  {
    "text": "uh yeah",
    "start": "1695039",
    "end": "1696760"
  },
  {
    "text": "project and that's it and thanks a lot",
    "start": "1696760",
    "end": "1699840"
  },
  {
    "text": "for your attention and if you have",
    "start": "1699840",
    "end": "1701880"
  },
  {
    "text": "questions",
    "start": "1701880",
    "end": "1704880"
  },
  {
    "text": "[Applause]",
    "start": "1704990",
    "end": "1715019"
  },
  {
    "text": "please questions",
    "start": "1716279",
    "end": "1719480"
  },
  {
    "text": "and",
    "start": "1719480",
    "end": "1721480"
  },
  {
    "text": "ah",
    "start": "1721480",
    "end": "1723080"
  },
  {
    "text": "no okay thank you very much",
    "start": "1723080",
    "end": "1726260"
  },
  {
    "text": "[Applause]",
    "start": "1726260",
    "end": "1729690"
  }
]