[
  {
    "text": "hello and welcome to the enhance your kofka infrastructure with fluvio webinar",
    "start": "4319",
    "end": "10000"
  },
  {
    "text": "I'm Grant Swanson your host for today's session we will start with a few educational slides on kofka versus",
    "start": "10000",
    "end": "17680"
  },
  {
    "text": "fluvio then go into a live demo and then finish up with",
    "start": "17680",
    "end": "23000"
  },
  {
    "text": "Q&A please enter questions anytime during the session in the questions",
    "start": "23000",
    "end": "28679"
  },
  {
    "text": "window in the handout section you will see some of our newest content that includes a speaking session on wasum",
    "start": "28679",
    "end": "35920"
  },
  {
    "text": "technology from our CTO SEO Chang at the most recent cubec con event we also have",
    "start": "35920",
    "end": "42800"
  },
  {
    "text": "content in PDF format that includes a Java versus rust solution",
    "start": "42800",
    "end": "49480"
  },
  {
    "text": "brief a financial services solution brief a realtime economy white paper an",
    "start": "49600",
    "end": "56719"
  },
  {
    "text": "ebook on how to enhance machine learning models with realtime data pipelines and an infini and cloud data",
    "start": "56719",
    "end": "64879"
  },
  {
    "text": "sheet infini and cloud is a fully managed fluo service for",
    "start": "64880",
    "end": "70880"
  },
  {
    "text": "Enterprises now we'll cover the agenda for this webinar where we will discuss",
    "start": "76240",
    "end": "82000"
  },
  {
    "text": "what are the differences between Kafka and fluvio why companies are leveraging",
    "start": "82000",
    "end": "87640"
  },
  {
    "text": "fluvio to complement Kafka how to quickly get started with",
    "start": "87640",
    "end": "93920"
  },
  {
    "text": "fluvio and then a live demo with",
    "start": "93920",
    "end": "98078"
  },
  {
    "text": "Q&A let's talk about some of the differences between Kafka and fluo",
    "start": "102560",
    "end": "107600"
  },
  {
    "text": "starting with programming languages Kafka was built over a decade ago using the Java programming language",
    "start": "107600",
    "end": "115479"
  },
  {
    "text": "fluvio was recently built using the rust programming language",
    "start": "115479",
    "end": "120920"
  },
  {
    "text": "PLO differentiates itself as a technology by providing realtime stream",
    "start": "120920",
    "end": "126439"
  },
  {
    "text": "processing and data transformation using web assembly all in a single unified",
    "start": "126439",
    "end": "134239"
  },
  {
    "text": "cluster smart modules allow for programmable stream processing for clean",
    "start": "134239",
    "end": "141319"
  },
  {
    "text": "data we will dive deeper into smart module functionality in the upcoming",
    "start": "141319",
    "end": "147280"
  },
  {
    "text": "slides but first we wanted to cover a recent POC that we just completed with a",
    "start": "147280",
    "end": "153760"
  },
  {
    "text": "company that serves over 3,000 Global banks that enables over 1.2 billion",
    "start": "153760",
    "end": "160640"
  },
  {
    "text": "people to carry out their daily banking needs in the POC they did Benchmark",
    "start": "160640",
    "end": "166840"
  },
  {
    "text": "testing on fluvio versus Kafka and the results were",
    "start": "166840",
    "end": "172519"
  },
  {
    "text": "outstanding the the performance improvements include up to a 3X latency Improvement",
    "start": "172519",
    "end": "181560"
  },
  {
    "text": "up to 5x better throughput up to 7x better CPU",
    "start": "181560",
    "end": "189040"
  },
  {
    "text": "utilization and up to 50x better memory",
    "start": "189040",
    "end": "194040"
  },
  {
    "text": "utilization why companies are leveraging fluo to complement Kafka the number one use case and reason",
    "start": "201360",
    "end": "208720"
  },
  {
    "text": "why companies are leveraging fluvio to enhance their Kafka infrastructure is to stream clean data",
    "start": "208720",
    "end": "215200"
  },
  {
    "text": "to a Kafka topic the data collection pipeline shown in the diagram starts with an HTTP",
    "start": "215200",
    "end": "223040"
  },
  {
    "text": "service and a fluvio HTTP Source connector streaming data flows into the",
    "start": "223040",
    "end": "229519"
  },
  {
    "text": "kofka sync connector where smart module is applied smart modules are one of our",
    "start": "229519",
    "end": "236200"
  },
  {
    "text": "Premier features allowing users to have direct control over their streaming data by providing a programmable API for",
    "start": "236200",
    "end": "243799"
  },
  {
    "text": "inline data transformation finally the transformed",
    "start": "243799",
    "end": "249360"
  },
  {
    "text": "data event flows to the Kafka consumer users can quickly and easily",
    "start": "249360",
    "end": "255959"
  },
  {
    "text": "stream clean data to Kafka with no external ETL",
    "start": "255959",
    "end": "262000"
  },
  {
    "text": "tools with stream processing in real time time transformation companies can stream data",
    "start": "267040",
    "end": "273360"
  },
  {
    "text": "from a sale a shipment or a trade and perform any",
    "start": "273360",
    "end": "278960"
  },
  {
    "text": "transformation that are needed before it syncs to an application or database the two most common use cases",
    "start": "278960",
    "end": "286720"
  },
  {
    "text": "are to build Rich front-end customer experiences and real-time back-end",
    "start": "286720",
    "end": "294000"
  },
  {
    "text": "operations we believe that in the coming years there will be a fundamental paradigm shift in data engineering where",
    "start": "294000",
    "end": "301960"
  },
  {
    "text": "companies will move away from traditional extract transform and load or ETL",
    "start": "301960",
    "end": "308479"
  },
  {
    "text": "tools to an STL infrastructure or stream transform and",
    "start": "308479",
    "end": "315600"
  },
  {
    "text": "load the infini approach to intelligent data streaming includes A New Concept",
    "start": "323680",
    "end": "329120"
  },
  {
    "text": "called smart SM pipelines smart pipelines are unique to infinion and include web assembly smart",
    "start": "329120",
    "end": "336319"
  },
  {
    "text": "modules that can process and transform data with singled digigit millisecond",
    "start": "336319",
    "end": "341759"
  },
  {
    "text": "latency business logic can be applied to ensure data quality smart modules can be deployed at",
    "start": "341759",
    "end": "349000"
  },
  {
    "text": "source connectors sync connectors or within the stream Processing Unit",
    "start": "349000",
    "end": "354560"
  },
  {
    "text": "eliminating the need for ETL tools while providing a single solution with with",
    "start": "354560",
    "end": "359840"
  },
  {
    "text": "distributed intelligence and centralized",
    "start": "359840",
    "end": "365199"
  },
  {
    "text": "control now we're going to hand it over to Alex meloff our architect and",
    "start": "371199",
    "end": "377120"
  },
  {
    "text": "Sebastian Imlay our principal engineer for live demo welcome Alex and",
    "start": "377120",
    "end": "385198"
  },
  {
    "text": "Sebastian thank you grant",
    "start": "386120",
    "end": "390479"
  },
  {
    "text": "give me just one moment I'll H hand this over to [Music]",
    "start": "391520",
    "end": "398259"
  },
  {
    "text": "you there you go it's all yours Alex thank",
    "start": "402120",
    "end": "408800"
  },
  {
    "text": "you as U Grant mentioned uh we are going to",
    "start": "408800",
    "end": "414360"
  },
  {
    "text": "demonstrate the flu data processing Pipeline and we are going to do it in",
    "start": "414360",
    "end": "421240"
  },
  {
    "text": "two stages uh the first one uh we go in",
    "start": "421240",
    "end": "426360"
  },
  {
    "text": "by uh HTTP connector connecting to finhub API uh then populating FL topic",
    "start": "426360",
    "end": "434639"
  },
  {
    "text": "and then V Kafka syn connector writing data into Kafka topic and then we are",
    "start": "434639",
    "end": "441479"
  },
  {
    "text": "going to expand it uh by add aggregate smart model which will add a specific",
    "start": "441479",
    "end": "449240"
  },
  {
    "text": "data transformation uh into before uh writing",
    "start": "449240",
    "end": "455199"
  },
  {
    "text": "data into cing uh connector so the transformation will happen on the topic",
    "start": "455199",
    "end": "461400"
  },
  {
    "text": "before data moves into Kafka so as Grant mentioned uh the cka will receive",
    "start": "461400",
    "end": "468560"
  },
  {
    "text": "already clean data and U uh we are going to start from uh installed in uh flugo",
    "start": "468560",
    "end": "477440"
  },
  {
    "text": "uh local cluster so uh this is a fresh uh instance in ec2 and what I'm going to",
    "start": "477440",
    "end": "486120"
  },
  {
    "text": "do now is to install uh FL using our",
    "start": "486120",
    "end": "491560"
  },
  {
    "text": "open source um FL cluster so as you can see it's",
    "start": "491560",
    "end": "499599"
  },
  {
    "text": "downloading and stting pretty swiftly so then we are going to start FL cluster",
    "start": "499599",
    "end": "510800"
  },
  {
    "text": "this need to add the come on to the",
    "start": "512839",
    "end": "518560"
  },
  {
    "text": "pa uh so that's for your local cluster is spinning up and installed inside of",
    "start": "532000",
    "end": "539680"
  },
  {
    "text": "the mini Cube so that instance already had the mini Cube installed uh but you",
    "start": "539680",
    "end": "546120"
  },
  {
    "text": "can follow our website for prerequisites and so now I'm going to test um through",
    "start": "546120",
    "end": "554959"
  },
  {
    "text": "your PL so I'm going to uh create a topic topic uh greetings then I'm going",
    "start": "554959",
    "end": "563360"
  },
  {
    "text": "to create a single message hello uh by flu produce command",
    "start": "563360",
    "end": "571519"
  },
  {
    "text": "so currently I'm using flu CLI and then I'm going to consume the greetings topic",
    "start": "571519",
    "end": "578920"
  },
  {
    "text": "um again VI so um as you have seen it's quite",
    "start": "578920",
    "end": "585760"
  },
  {
    "text": "straightforward so we installed the FL cluster and uh um we uh created",
    "start": "585760",
    "end": "593920"
  },
  {
    "text": "a topic called greetings we operated it and then we consumed it uh from the",
    "start": "593920",
    "end": "600720"
  },
  {
    "text": "beginning now uh that instance already have a mini CU",
    "start": "600720",
    "end": "607240"
  },
  {
    "text": "yeah and uh uh it also have a pre-installed",
    "start": "607240",
    "end": "612640"
  },
  {
    "text": "um uh Kafka local instance which is a development instance uh it's nothing",
    "start": "612640",
    "end": "620240"
  },
  {
    "text": "resembling to production but uh it's already have um multiple topics",
    "start": "620240",
    "end": "627160"
  },
  {
    "text": "populated so uh this is this is the uh local cka cluster so what I'm going to",
    "start": "627160",
    "end": "633920"
  },
  {
    "text": "do next is um I'm going to uh create an",
    "start": "633920",
    "end": "640000"
  },
  {
    "text": "HTTP connector uh which will read finhub",
    "start": "640000",
    "end": "646000"
  },
  {
    "text": "API uh and uh that's going I'm going to do it building up on the demo which",
    "start": "646000",
    "end": "652279"
  },
  {
    "text": "Sebastian already demonstrated uh in the uh previous",
    "start": "652279",
    "end": "657680"
  },
  {
    "text": "webinar so you can clone our previous webinar demo",
    "start": "657680",
    "end": "665600"
  },
  {
    "text": "but the idea is that you need to register on pinhub pinhub iO and obtain API token uh",
    "start": "665600",
    "end": "676160"
  },
  {
    "text": "then uh you need to create a configuration file uh which looks like",
    "start": "676160",
    "end": "682360"
  },
  {
    "text": "this for HTTP connector as you can see uh",
    "start": "682360",
    "end": "688360"
  },
  {
    "text": "that's the name of the connector uh that's the type of the connector uh this",
    "start": "688360",
    "end": "694760"
  },
  {
    "text": "is a topic which is floal topic uh the data will be red so also it says that it",
    "start": "694760",
    "end": "703360"
  },
  {
    "text": "will create a topic which if it doesn't exist and then it will query the uh API",
    "start": "703360",
    "end": "710079"
  },
  {
    "text": "Endo using get method for every free seconds and we have a make file which",
    "start": "710079",
    "end": "718040"
  },
  {
    "text": "can very weely demonstrate you how to run multiple commands uh and uh this one",
    "start": "718040",
    "end": "724920"
  },
  {
    "text": "we are going to create a connector by FL connector create command as you can see",
    "start": "724920",
    "end": "731320"
  },
  {
    "text": "it's quite straightforward FL connector create and",
    "start": "731320",
    "end": "736680"
  },
  {
    "text": "uh now I'm going to check uh so the",
    "start": "736680",
    "end": "742800"
  },
  {
    "text": "connector is running and uh uh let's check that uh it is actually producing",
    "start": "742800",
    "end": "751199"
  },
  {
    "text": "uh topic so I'm using FL consume command uh again much in topic named if G stocks",
    "start": "751199",
    "end": "760560"
  },
  {
    "text": "and as you can see that's populated the stock data uh every 3",
    "start": "760560",
    "end": "769440"
  },
  {
    "text": "seconds so now uh what we are going to do is uh we are going to write uh into",
    "start": "771560",
    "end": "779240"
  },
  {
    "text": "cka cluster so as I mentioned I already have a cka cluster which we created",
    "start": "779240",
    "end": "786680"
  },
  {
    "text": "using do compose and dock compose file is uh",
    "start": "786680",
    "end": "793279"
  },
  {
    "text": "provided the rep which will be shared after webinar and the important point is",
    "start": "793279",
    "end": "799199"
  },
  {
    "text": "that it have advertisement host which is muching the Gateway for Medi Cube so um",
    "start": "799199",
    "end": "806320"
  },
  {
    "text": "our flu cluster can actually connect uh into",
    "start": "806320",
    "end": "811399"
  },
  {
    "text": "C so what we need to create first is the",
    "start": "811399",
    "end": "817519"
  },
  {
    "text": "uh again configuration file for Kafka um and uh it looks pretty similar",
    "start": "817519",
    "end": "826360"
  },
  {
    "text": "to uh HTTP connector uh except is uh so",
    "start": "827600",
    "end": "833079"
  },
  {
    "text": "name type is t uh picks up the data out of topic GM",
    "start": "833079",
    "end": "839759"
  },
  {
    "text": "start and then wres it into cka process topic so let's create a c",
    "start": "839759",
    "end": "850519"
  },
  {
    "text": "connector again checking that the C connector is running",
    "start": "862120",
    "end": "869040"
  },
  {
    "text": "uh so FL connector logs command can help Tob if there are any",
    "start": "871639",
    "end": "879000"
  },
  {
    "text": "issues um they C connector but there are",
    "start": "879000",
    "end": "885120"
  },
  {
    "text": "no issues so far and uh um let's check if we actually",
    "start": "885120",
    "end": "893399"
  },
  {
    "text": "populating the um T topic uh so",
    "start": "893399",
    "end": "901040"
  },
  {
    "text": "um and we are going to do it using C consumer which is available",
    "start": "901480",
    "end": "909120"
  },
  {
    "text": "inside the docker which we currently running on that",
    "start": "909120",
    "end": "916519"
  },
  {
    "text": "server so I'm going to change topic um this one uh should be T process",
    "start": "918079",
    "end": "929199"
  },
  {
    "text": "and uh y as we can see every 3 minutes we are populating C every 3 seconds we",
    "start": "936040",
    "end": "943279"
  },
  {
    "text": "are populating C toic right so um that was uh Basics",
    "start": "943279",
    "end": "951920"
  },
  {
    "text": "introductions uh so we have created uh two uh",
    "start": "951920",
    "end": "957440"
  },
  {
    "text": "connectors uh",
    "start": "957440",
    "end": "960920"
  },
  {
    "text": "in one is HTTP connector and another cin connector so what we are going to do",
    "start": "966360",
    "end": "973639"
  },
  {
    "text": "next is more interesting uh so we are going to add",
    "start": "973639",
    "end": "980480"
  },
  {
    "text": "smart model and uh it is aggregate it will perform the aggregate function uh",
    "start": "980480",
    "end": "988120"
  },
  {
    "text": "so uh uh that smart model pretends that uh we purchase some stock warrants and",
    "start": "988120",
    "end": "996639"
  },
  {
    "text": "we are going to populate them using the text file war txt and it will um reshape",
    "start": "996639",
    "end": "1004560"
  },
  {
    "text": "our take options and try to calculate potential uh profit and or loss",
    "start": "1004560",
    "end": "1013920"
  },
  {
    "text": "so what I'm going to do is again going to uh",
    "start": "1013920",
    "end": "1019560"
  },
  {
    "text": "the Cera and",
    "start": "1019560",
    "end": "1026120"
  },
  {
    "text": "um so that mod is the um um",
    "start": "1026319",
    "end": "1034199"
  },
  {
    "text": "rust is written in Rust and uh what we are going to do is uh to U compile it",
    "start": "1034199",
    "end": "1042319"
  },
  {
    "text": "into web assembly and then we are going to upload web assembly into um smart",
    "start": "1042319",
    "end": "1049400"
  },
  {
    "text": "model is repository in local FL cluster and uh then we are going to validate it",
    "start": "1049400",
    "end": "1057120"
  },
  {
    "text": "and attach it to um uh cap sync",
    "start": "1057120",
    "end": "1063360"
  },
  {
    "text": "connector so uh again there is a convenient make",
    "start": "1063360",
    "end": "1068559"
  },
  {
    "text": "file which uh we will which is already online uh so that's already app um we",
    "start": "1068559",
    "end": "1077080"
  },
  {
    "text": "can to upload smart model and as as you can see",
    "start": "1077080",
    "end": "1086200"
  },
  {
    "text": "those are just commands which are pretty long but uh this mer file on the rapper",
    "start": "1086200",
    "end": "1094200"
  },
  {
    "text": "for flu um CLI uh and uh what I'm going",
    "start": "1094200",
    "end": "1101440"
  },
  {
    "text": "to demonstrate that we now uploaded price warant",
    "start": "1101440",
    "end": "1107520"
  },
  {
    "text": "aggregator and um uh now we need to produce War I",
    "start": "1107520",
    "end": "1114720"
  },
  {
    "text": "assume that we actually make a purchase uh and that is very simple command which",
    "start": "1114720",
    "end": "1121559"
  },
  {
    "text": "again uh uses flug C to late GMI stocks",
    "start": "1121559",
    "end": "1126840"
  },
  {
    "text": "uh topics and uh then we are going to check if actually our smart mod is",
    "start": "1126840",
    "end": "1135480"
  },
  {
    "text": "working okay that didn't work for",
    "start": "1135480",
    "end": "1141880"
  },
  {
    "text": "me and as you can see when smart model was applied uh then uh the shape changed",
    "start": "1148080",
    "end": "1157520"
  },
  {
    "text": "and it also calculating as uh current profit which is actually loss so uh if",
    "start": "1157520",
    "end": "1163760"
  },
  {
    "text": "we bought um if we potentially bought the stocks uh",
    "start": "1163760",
    "end": "1170120"
  },
  {
    "text": "at uh 11th of April uh at various purchase",
    "start": "1170120",
    "end": "1175679"
  },
  {
    "text": "price which then be probably at loss at this point in time um so what we are",
    "start": "1175679",
    "end": "1183080"
  },
  {
    "text": "going to do next is uh we are going to deploy this smart modor so it will run",
    "start": "1183080",
    "end": "1190679"
  },
  {
    "text": "uh inside cka s uh connector and for that",
    "start": "1190679",
    "end": "1200000"
  },
  {
    "text": "uh we have the only thing we need to do is to add that smart model price bur",
    "start": "1200080",
    "end": "1210240"
  },
  {
    "text": "aggregator uh needs to be applied and it is aggregate smart model so what I'm",
    "start": "1210240",
    "end": "1217480"
  },
  {
    "text": "going to do is again to create a c connector",
    "start": "1217480",
    "end": "1225240"
  },
  {
    "text": "and you can see now we have single HTTP input uh single HTTP source and then we",
    "start": "1234640",
    "end": "1242200"
  },
  {
    "text": "have two cing and uh one of them is running de Dev smart model and one",
    "start": "1242200",
    "end": "1250080"
  },
  {
    "text": "another of them is running D smart model so uh let's read the C uh topic and we",
    "start": "1250080",
    "end": "1260559"
  },
  {
    "text": "that our smart",
    "start": "1260559",
    "end": "1265320"
  },
  {
    "text": "is complicate function so again I'm reading uh directly using",
    "start": "1265760",
    "end": "1274679"
  },
  {
    "text": "C consern consumer and you can see it's currently zero and the reason for it is",
    "start": "1274679",
    "end": "1283039"
  },
  {
    "text": "that smart model and C connector is applied at the reading state so uh what",
    "start": "1283039",
    "end": "1290520"
  },
  {
    "text": "we need to do now is uh uh we need to populate our war again because they were",
    "start": "1290520",
    "end": "1300159"
  },
  {
    "text": "already in the um topic when connect",
    "start": "1300159",
    "end": "1306159"
  },
  {
    "text": "started reading uh records and apply",
    "start": "1306159",
    "end": "1312559"
  },
  {
    "text": "aggate so",
    "start": "1313240",
    "end": "1317240"
  },
  {
    "text": "wece War",
    "start": "1319720",
    "end": "1322840"
  },
  {
    "text": "again now we are running our C connector and as you can see uh",
    "start": "1325760",
    "end": "1333159"
  },
  {
    "text": "the aggregate smart qu was applied and we currently have a current profit which",
    "start": "1333159",
    "end": "1339880"
  },
  {
    "text": "is actually loss so uh to reiterate what we have",
    "start": "1339880",
    "end": "1345760"
  },
  {
    "text": "demonstrated in such a short period of time that uh we are able to install flu",
    "start": "1345760",
    "end": "1353960"
  },
  {
    "text": "and we are able to create",
    "start": "1353960",
    "end": "1359200"
  },
  {
    "text": "um HTTP connector which read data into FL topic then applies uh transformation",
    "start": "1359200",
    "end": "1368200"
  },
  {
    "text": "which is written in Rust and compiled into the assembly uh it runs before cing",
    "start": "1368200",
    "end": "1375720"
  },
  {
    "text": "wres it into CF topic and uh that concludes the uh live demo",
    "start": "1375720",
    "end": "1383400"
  },
  {
    "text": "part and we have now uh can open L to the",
    "start": "1383400",
    "end": "1389039"
  },
  {
    "text": "questions awesome Alex thank you so much that was uh pretty incredible that you got all that done in in about 20 minutes",
    "start": "1389039",
    "end": "1397400"
  },
  {
    "text": "um so give me just one moment I'm pulling up the questions from the audience again if anyone has any",
    "start": "1397400",
    "end": "1404080"
  },
  {
    "text": "questions uh feel free to enter them into the questions window or even the chat box is",
    "start": "1404080",
    "end": "1409520"
  },
  {
    "text": "fine and I'm going to um present my",
    "start": "1409520",
    "end": "1417440"
  },
  {
    "text": "screen okay great we got one question that just came in here so they're asking",
    "start": "1420120",
    "end": "1425880"
  },
  {
    "text": "uh what other types of data transformation can be performed with",
    "start": "1425880",
    "end": "1431240"
  },
  {
    "text": "fluvio so off the shelf we have predefined templates for filter map fil",
    "start": "1431240",
    "end": "1438600"
  },
  {
    "text": "the map and the r map and agregate smart models",
    "start": "1438600",
    "end": "1444320"
  },
  {
    "text": "um each of them applies uh as described",
    "start": "1444320",
    "end": "1449440"
  },
  {
    "text": "uh transformation but you can put more and more complexity depending on your rting",
    "start": "1449440",
    "end": "1457679"
  },
  {
    "text": "experience uh into smart",
    "start": "1457679",
    "end": "1462440"
  },
  {
    "text": "models awesome okay we've got a couple more that are coming in here so I'm just",
    "start": "1463440",
    "end": "1468559"
  },
  {
    "text": "going to read the actual comment and the question here it says incredibly elegant architecture k8's native and connectors",
    "start": "1468559",
    "end": "1475799"
  },
  {
    "text": "plus smart modules and wasum look like uh this could be the building blocks of",
    "start": "1475799",
    "end": "1481480"
  },
  {
    "text": "a universal streaming platform of the future are you planning on developing a highlevel streaming framework a Akin to",
    "start": "1481480",
    "end": "1489120"
  },
  {
    "text": "Flink or kofka streams on top um I can talk about this",
    "start": "1489120",
    "end": "1496080"
  },
  {
    "text": "uh I'm Sebastian I'm a software engineer here and um yeah this is a high L",
    "start": "1496080",
    "end": "1501760"
  },
  {
    "text": "strategy question um we've discussed this type of thing for a little bit of like how to visualize various streams um",
    "start": "1501760",
    "end": "1508679"
  },
  {
    "text": "and like how to have my more of a graphical interface for defining your Lego pieces that go into um a data",
    "start": "1508679",
    "end": "1518039"
  },
  {
    "text": "Aggregate and you know ETL of sorts so it's definitely something that that can",
    "start": "1518039",
    "end": "1524399"
  },
  {
    "text": "be um put higher on the road map should it be uh needed but uh for now it's um",
    "start": "1524399",
    "end": "1532159"
  },
  {
    "text": "in the backlog excellent thank you Sebastian appreciate that we've got a bunch more",
    "start": "1532159",
    "end": "1538279"
  },
  {
    "text": "questions coming in here um so the next question is is so this is I guess about",
    "start": "1538279",
    "end": "1545399"
  },
  {
    "text": "a replacement um do you have an opinion on when Kafka is suitable a suitable",
    "start": "1545399",
    "end": "1551039"
  },
  {
    "text": "candidate versus fluvio and and I'm like I said I'm assuming that's a a Kafka",
    "start": "1551039",
    "end": "1556120"
  },
  {
    "text": "replacement for fluvio with",
    "start": "1556120",
    "end": "1560240"
  },
  {
    "text": "fio um that's a tough one it really depends on your use case like um we're",
    "start": "1561840",
    "end": "1568480"
  },
  {
    "text": "not quite feature complete with respect to capka um one of the things that I will say that's nice compared to uh CF",
    "start": "1568480",
    "end": "1576039"
  },
  {
    "text": "guys that we were able to deploy more easily um in my experience put setting",
    "start": "1576039",
    "end": "1581760"
  },
  {
    "text": "up a CF cluster is kind of a pain uh so I would definitely say that if if setting up",
    "start": "1581760",
    "end": "1588559"
  },
  {
    "text": "uh a CFA cluster has been your friction then fio is a pretty nice um thing to to",
    "start": "1588559",
    "end": "1594320"
  },
  {
    "text": "to deploy um and uh we're not trying to be entirely feature complete with",
    "start": "1594320",
    "end": "1600760"
  },
  {
    "text": "respect to CFA either because uh CFA for example doesn't have uh the smart module",
    "start": "1600760",
    "end": "1606039"
  },
  {
    "text": "features that we've uh have shown here um but I will admit that gafka does have",
    "start": "1606039",
    "end": "1611320"
  },
  {
    "text": "more connectors to various Services um because it's so much the product has existed longer so um",
    "start": "1611320",
    "end": "1619159"
  },
  {
    "text": "yeah yep I I agree with you Sebastian and I'll just add to that answer that um we're we're continually building out our",
    "start": "1619159",
    "end": "1626640"
  },
  {
    "text": "our connector catalog um but but definitely kafka's got uh more options",
    "start": "1626640",
    "end": "1632320"
  },
  {
    "text": "to choose from source and send connectors But as time goes on we'll we we'll uh we'll cover that Gap I believe",
    "start": "1632320",
    "end": "1639440"
  },
  {
    "text": "okay next question here um when will fluvio support windowing and processing",
    "start": "1639440",
    "end": "1646120"
  },
  {
    "text": "windowed data",
    "start": "1646120",
    "end": "1649919"
  },
  {
    "text": "um that is a hard that's not a question I know off the top of my head it has",
    "start": "1651600",
    "end": "1656880"
  },
  {
    "text": "been discussed um I can't give you a distinct timeline of this thing um I would have",
    "start": "1656880",
    "end": "1663159"
  },
  {
    "text": "to discuss with our our product um CEO and CTO Sayo and AJ more yep okay great",
    "start": "1663159",
    "end": "1669760"
  },
  {
    "text": "so we we'll respond to that question offline um and we'll move on to the next one so",
    "start": "1669760",
    "end": "1676919"
  },
  {
    "text": "what are some of the limitations that fluvio might have that Flink does",
    "start": "1676919",
    "end": "1682880"
  },
  {
    "text": "not so go ahead go ahead Flink is a more",
    "start": "1685000",
    "end": "1692360"
  },
  {
    "text": "GE towards analytics where fio is more gear towards real time streaming uh as",
    "start": "1692360",
    "end": "1700440"
  },
  {
    "text": "at the core and then processing at that point in realtime streaming so",
    "start": "1700440",
    "end": "1709240"
  },
  {
    "text": "we are we are slightly for different audience rather than",
    "start": "1709240",
    "end": "1715240"
  },
  {
    "text": "for like a replacement so I don't see FL being",
    "start": "1715240",
    "end": "1720840"
  },
  {
    "text": "replacement of Link directly and that's why uh even if uh Ka and the rest of the",
    "start": "1720840",
    "end": "1728880"
  },
  {
    "text": "infrastructure we probably will complement quite a lot of the existing tools uh during various transition",
    "start": "1728880",
    "end": "1735559"
  },
  {
    "text": "States uh for organizations and as Sebastian say we think about",
    "start": "1735559",
    "end": "1740880"
  },
  {
    "text": "ourselves as a faster easier to deploy and easier to",
    "start": "1740880",
    "end": "1747200"
  },
  {
    "text": "manage excellent thank you Alex uh we we've got a number of questions coming",
    "start": "1747200",
    "end": "1752440"
  },
  {
    "text": "in here so um we'll continue to answer them as long as we have time we have about 10 minutes left in the webinar um",
    "start": "1752440",
    "end": "1759679"
  },
  {
    "text": "so the next question is can the payload that fluvio carries be binary I'm thinking protocol buffers Etc what are",
    "start": "1759679",
    "end": "1767880"
  },
  {
    "text": "the types um example in Kafka the client can handle the smarts about payload",
    "start": "1767880",
    "end": "1774480"
  },
  {
    "text": "streaming and sizing so can the payload that fluvio",
    "start": "1774480",
    "end": "1780000"
  },
  {
    "text": "carries be binary yes uh on a low level the actual payloads are all binary",
    "start": "1780000",
    "end": "1786720"
  },
  {
    "text": "um the I think there was some discuss like you mentioned basically some kind of metadata around the payloads we don't",
    "start": "1786720",
    "end": "1793720"
  },
  {
    "text": "quite have um typed inness for the payloads just yet but you can building",
    "start": "1793720",
    "end": "1800399"
  },
  {
    "text": "that on top of fluo streams isn't particularly hard um yeah so like",
    "start": "1800399",
    "end": "1805679"
  },
  {
    "text": "there's no reason why you couldn't like say uh put images or even video into a fluo stream you just bundle your your",
    "start": "1805679",
    "end": "1812480"
  },
  {
    "text": "frame of play a movie or you know a video into a given fluvio record which",
    "start": "1812480",
    "end": "1817600"
  },
  {
    "text": "would be big but um there's no reason why you couldn't do that so uh in the case of mentioning grpc I",
    "start": "1817600",
    "end": "1825440"
  },
  {
    "text": "think um I think I have no reason to believe that you couldn't like put grpc streams into",
    "start": "1825440",
    "end": "1834360"
  },
  {
    "text": "fluko um so yeah it's binary and you can do",
    "start": "1834360",
    "end": "1840039"
  },
  {
    "text": "this it's uh for the cases of metadata and typ inness you need to do it by",
    "start": "1840039",
    "end": "1845919"
  },
  {
    "text": "convention rather than fio type checking so excellent next question um does fluo",
    "start": "1845919",
    "end": "1854600"
  },
  {
    "text": "have a way to De duplicate jobs to avoid module processing the same record",
    "start": "1854600",
    "end": "1861919"
  },
  {
    "text": "twice um that has been a a discussion",
    "start": "1861919",
    "end": "1867240"
  },
  {
    "text": "we've um been looking into uh and right now no um but uh having um statefulness",
    "start": "1867240",
    "end": "1876679"
  },
  {
    "text": "on the stream is an area of work um we've been looking into and um it is low",
    "start": "1876679",
    "end": "1882960"
  },
  {
    "text": "on the I mean it's it's near on our road map um the examples of this this would",
    "start": "1882960",
    "end": "1888159"
  },
  {
    "text": "be like resuming from an offset for a given um consumer",
    "start": "1888159",
    "end": "1893880"
  },
  {
    "text": "stream excellent uh a couple more questions here please keep asking the",
    "start": "1893960",
    "end": "1899240"
  },
  {
    "text": "audience uh if you if you have more questions um please continue to enter them into the questions window we have",
    "start": "1899240",
    "end": "1905639"
  },
  {
    "text": "two left here um the next one is likewise what are some limitations that Flink has that fluo does not",
    "start": "1905639",
    "end": "1915480"
  },
  {
    "text": "um Alex do you get this one I think this one difficult to answer what are the limitations of Flink uh",
    "start": "1919919",
    "end": "1927960"
  },
  {
    "text": "probably um people who are using Flink in production will tell more uh so I",
    "start": "1927960",
    "end": "1936240"
  },
  {
    "text": "think it's a we are as",
    "start": "1936240",
    "end": "1942519"
  },
  {
    "text": "a grand set we are platform up starting platform so we are building towards uh",
    "start": "1942519",
    "end": "1949840"
  },
  {
    "text": "connectors uh but um that's where if you already have a large infrastructure then",
    "start": "1949840",
    "end": "1957039"
  },
  {
    "text": "we can complement it but if you're starting from Green Field development then we probably will allow you to",
    "start": "1957039",
    "end": "1963600"
  },
  {
    "text": "Progress way faster than a Flink or kka um to to expand on that I think one",
    "start": "1963600",
    "end": "1972120"
  },
  {
    "text": "area that Flink um probably lacks is is the ability to do more",
    "start": "1972120",
    "end": "1978840"
  },
  {
    "text": "um Edge nodes for Internet of Things devices um such as like running um Flink",
    "start": "1978840",
    "end": "1985200"
  },
  {
    "text": "on a Raspberry Pi I my hypothesis or my suspicion is that it would be difficult to deploy uh Flink on edge nodes of of a",
    "start": "1985200",
    "end": "1994039"
  },
  {
    "text": "various infrastructure whereas fio we have a an installation for raspberry pies should you want to like do some",
    "start": "1994039",
    "end": "2001480"
  },
  {
    "text": "kind of iot thing um so that's definitely an area that where I would",
    "start": "2001480",
    "end": "2006639"
  },
  {
    "text": "say Flink is lacking excellent appreciate that answer",
    "start": "2006639",
    "end": "2012720"
  },
  {
    "text": "Sebastian uh looks like we have about time for one more question um which just came in and the question is does fluvio",
    "start": "2012720",
    "end": "2020919"
  },
  {
    "text": "support any flavor of SQL or is it in the",
    "start": "2020919",
    "end": "2026240"
  },
  {
    "text": "plans oh yeah I can talk about that the uh right now we support a very lowlevel",
    "start": "2026480",
    "end": "2033159"
  },
  {
    "text": "representation of postgress um and it's mostly currently used for uh CDC between",
    "start": "2033159",
    "end": "2038799"
  },
  {
    "text": "two postgress instances um it is in the plans to expand this to do postgress from",
    "start": "2038799",
    "end": "2044919"
  },
  {
    "text": "postgress to myql or um vice versa um it",
    "start": "2044919",
    "end": "2050599"
  },
  {
    "text": "depends on on um if if we if someone shows uh interest",
    "start": "2050599",
    "end": "2056440"
  },
  {
    "text": "in in one of these things um we would definitely love to to add it so it is in",
    "start": "2056440",
    "end": "2061760"
  },
  {
    "text": "the plans but um we'd love to make it a higher priority",
    "start": "2061760",
    "end": "2067960"
  },
  {
    "text": "I would expand in a way that uh we would like to validate our connectors the use",
    "start": "2067960",
    "end": "2074520"
  },
  {
    "text": "cases so uh if you think that uh flu can be useful for you in particular uh and",
    "start": "2074520",
    "end": "2082800"
  },
  {
    "text": "have a particular use case in mind um I think that will be a really good opportunity for us to validate our",
    "start": "2082800",
    "end": "2090040"
  },
  {
    "text": "platform and for you to prototype our use",
    "start": "2090040",
    "end": "2095118"
  },
  {
    "text": "case excellent appreciate that Alex um so I really appreciate the audience",
    "start": "2095119",
    "end": "2101040"
  },
  {
    "text": "being so engaged and asking so many questions um we're going to we're going to wrap this up with a few call to",
    "start": "2101040",
    "end": "2108079"
  },
  {
    "text": "actions um so it's very simple if if you're interested in in signing up for infini and Cloud which is our fully",
    "start": "2108079",
    "end": "2114839"
  },
  {
    "text": "managed fluo service um you can do that uh at infini and. Clouds signup um or",
    "start": "2114839",
    "end": "2122440"
  },
  {
    "text": "you can go to our homepage infini and.com and click try now um we also",
    "start": "2122440",
    "end": "2128240"
  },
  {
    "text": "have instructions on how to build a streaming app um and then we can we also",
    "start": "2128240",
    "end": "2133440"
  },
  {
    "text": "have um the ability for for anyone to schedule an event streaming processing",
    "start": "2133440",
    "end": "2139599"
  },
  {
    "text": "demo and we're happy to engage with anyone in the audience if they're interested in testing out fluvio and",
    "start": "2139599",
    "end": "2146440"
  },
  {
    "text": "getting a POC up and running um we'd be happy to engage with with everyone so at",
    "start": "2146440",
    "end": "2151960"
  },
  {
    "text": "this time we're going to wrap this up and I appreciate everyone's engagement and thank you so much and enjoy the rest",
    "start": "2151960",
    "end": "2157359"
  },
  {
    "text": "of your your day",
    "start": "2157359",
    "end": "2160838"
  }
]