[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "okay good afternoon everyone I am Lee Wong I am a tack leader in eastern",
    "start": "30",
    "end": "5609"
  },
  {
    "text": "security team at Google okay and I'm Turin sandal I work for a start-up called Sierra and the tech lead",
    "start": "5609",
    "end": "11969"
  },
  {
    "text": "on the open policy agent project and I love talking about policy and rules at 4:30 on Friday afternoon so take it away",
    "start": "11969",
    "end": "20310"
  },
  {
    "text": "Lehman Holly and I are going to talk about a mixer policy enforcement with",
    "start": "20310",
    "end": "26580"
  },
  {
    "text": "custom adapters this talk has two parts in the first part I am going to give an",
    "start": "26580",
    "end": "32130"
  },
  {
    "text": "introduction of our East EO and the policies in steel and I'm going to talk about how to enforce your custom policy",
    "start": "32130",
    "end": "38520"
  },
  {
    "text": "in East EO 0 mixers adapter model in the second part Tory is going to talk about",
    "start": "38520",
    "end": "44430"
  },
  {
    "text": "how these models are used it will integrate open policy agent to e steel and he is going to give a lifetime of it",
    "start": "44430",
    "end": "53718"
  },
  {
    "start": "54000",
    "end": "76000"
  },
  {
    "text": "ok so what it is is the sto I'm trying to keep it brief because we already had",
    "start": "54739",
    "end": "60629"
  },
  {
    "text": "a lot of excellent talking still so easier is an open platform to connect",
    "start": "60629",
    "end": "66390"
  },
  {
    "text": "manage and secure Mac resist micro services you can find more information",
    "start": "66390",
    "end": "71580"
  },
  {
    "text": "on East EO dot IO and github.com slash Easter Easter service mesh can be split",
    "start": "71580",
    "end": "79979"
  },
  {
    "text": "in four data plane and the control a data plane is composed of a number of",
    "start": "79979",
    "end": "86100"
  },
  {
    "text": "annual proxies that are deployed as a sidecars and they are mediating and",
    "start": "86100",
    "end": "92450"
  },
  {
    "text": "control other traffic's between services controlling has the three components",
    "start": "92450",
    "end": "97799"
  },
  {
    "text": "pilot mixer and east eros pallet is responsible for managing and configuring",
    "start": "97799",
    "end": "104369"
  },
  {
    "text": "the my proxies to route traffic mixer is responsible for enforcing access control",
    "start": "104369",
    "end": "111149"
  },
  {
    "text": "policies and usage policies and collecting telemetry data from my proxies easter AWS provides a service to",
    "start": "111149",
    "end": "119850"
  },
  {
    "text": "service me to TRS authentication and it also provides a built-in identity and a",
    "start": "119850",
    "end": "125280"
  },
  {
    "text": "credential management Easter is a policy driven system what",
    "start": "125280",
    "end": "133319"
  },
  {
    "start": "128000",
    "end": "196000"
  },
  {
    "text": "are the policies policies are the rows that control how the system behave",
    "start": "133319",
    "end": "139580"
  },
  {
    "text": "Easter supports many different kinds of policies for example router rows allow",
    "start": "139580",
    "end": "145230"
  },
  {
    "text": "you to specify load balance in policy traffic splitting rule request timeout",
    "start": "145230",
    "end": "150680"
  },
  {
    "text": "retries and the fault injection quota policy provides the fairness between",
    "start": "150680",
    "end": "157440"
  },
  {
    "text": "service consumers when they are contending for limited resources monitoring policy allows you to specify",
    "start": "157440",
    "end": "164610"
  },
  {
    "text": "how the metrics are collected and how the logging and tracing atong the",
    "start": "164610",
    "end": "170640"
  },
  {
    "text": "existing security policy allows you to enable service to service military authentication for the service mesh and",
    "start": "170640",
    "end": "177769"
  },
  {
    "text": "it also enforces the simple authorization rules like denial request",
    "start": "177769",
    "end": "184050"
  },
  {
    "text": "if a certain condition is met or whitelist a blacklist the service consumers and we",
    "start": "184050",
    "end": "190890"
  },
  {
    "text": "provide an expression language for you to define conditions we are continuously",
    "start": "190890",
    "end": "198180"
  },
  {
    "start": "196000",
    "end": "263000"
  },
  {
    "text": "adding more policies in in still take security policy as an example we are",
    "start": "198180",
    "end": "204269"
  },
  {
    "text": "adding authentication policy authorization policy and the auditing policy which we call Tripoli policies",
    "start": "204269",
    "end": "210860"
  },
  {
    "text": "the upcoming authentication policy will allow you to enable or disable",
    "start": "210860",
    "end": "216900"
  },
  {
    "text": "militarize for each service and the configure end user authentication also",
    "start": "216900",
    "end": "223140"
  },
  {
    "text": "this inside we are adding row based access control which provides the namespace level service level and the",
    "start": "223140",
    "end": "229709"
  },
  {
    "text": "master level access control for services in eastern mesh I'm going to show an",
    "start": "229709",
    "end": "235109"
  },
  {
    "text": "example of how up a policy looks like in the next slide and we are also integrating with the open policy agent",
    "start": "235109",
    "end": "241859"
  },
  {
    "text": "to address more complicated solution use cases which Tory is going to a demo next",
    "start": "241859",
    "end": "248120"
  },
  {
    "text": "and in the meanwhile we are also working on improving the expression language to",
    "start": "248120",
    "end": "253140"
  },
  {
    "text": "provide a richer semantics the auditing policy will allow you to specify when to",
    "start": "253140",
    "end": "259320"
  },
  {
    "text": "audit and watch to audit okay here is an example of how a Peck",
    "start": "259320",
    "end": "266690"
  },
  {
    "start": "263000",
    "end": "314000"
  },
  {
    "text": "policy looks like on the left side I define a service role object it's called",
    "start": "266690",
    "end": "272990"
  },
  {
    "text": "a reveal product of your it allows you to all read a review service and the",
    "start": "272990",
    "end": "278330"
  },
  {
    "text": "reader product service on the path slash box slash epoxy latest on on the right",
    "start": "278330",
    "end": "285980"
  },
  {
    "text": "side I define a role binding object service Roubini object it assigns the",
    "start": "285980",
    "end": "291470"
  },
  {
    "text": "reveal product bureau to a given service account you can specify other identities",
    "start": "291470",
    "end": "297710"
  },
  {
    "text": "like a user or some chart claims or other attributes to specify the subjects",
    "start": "297710",
    "end": "304720"
  },
  {
    "text": "you can find more information is still up at design talk or you you can talk to",
    "start": "304720",
    "end": "310040"
  },
  {
    "text": "me afterwards if you are interested in a back now we have looked at all the",
    "start": "310040",
    "end": "317450"
  },
  {
    "start": "314000",
    "end": "365000"
  },
  {
    "text": "policies he still provides what if you want to support your own policy well it",
    "start": "317450",
    "end": "323510"
  },
  {
    "text": "is pretty easy to do that through mixer mixer is the central point for policy",
    "start": "323510",
    "end": "329240"
  },
  {
    "text": "evaluation and it is designed for extensibility mixer exposes the toy ice",
    "start": "329240",
    "end": "335780"
  },
  {
    "text": "check and the report check allows you to do precondition check crota check and",
    "start": "335780",
    "end": "341390"
  },
  {
    "text": "the report allows you to telemetry reporting such as locks and matrix mixer",
    "start": "341390",
    "end": "349310"
  },
  {
    "text": "achieves the high extensibility by having a general-purpose plug-in model and the plugins are called adapters in",
    "start": "349310",
    "end": "357740"
  },
  {
    "text": "this picture I show some example adapters that mixer supported a mixer is",
    "start": "357740",
    "end": "367370"
  },
  {
    "start": "365000",
    "end": "437000"
  },
  {
    "text": "a tribute processing and routing machine the attributes are the pieces of metadata does describe the environment",
    "start": "367370",
    "end": "374990"
  },
  {
    "text": "and the traffic for example request dot pass sort of IPS or user tests national",
    "start": "374990",
    "end": "382010"
  },
  {
    "text": "service these are all attributes request arrived at mixer with a set of",
    "start": "382010",
    "end": "387470"
  },
  {
    "text": "attributes mix the processes these attributes and maps them to adapter",
    "start": "387470",
    "end": "392630"
  },
  {
    "text": "input we call we call them instances mixer",
    "start": "392630",
    "end": "397870"
  },
  {
    "text": "invokes the adapters based on the configuration and passes this input to",
    "start": "397870",
    "end": "404559"
  },
  {
    "text": "the adapters mixer suppose two types of adapters the standalone adapter running",
    "start": "404559",
    "end": "411610"
  },
  {
    "text": "mixer process they do not have a back-end for example the main crota adapter and the organ policy agent",
    "start": "411610",
    "end": "418569"
  },
  {
    "text": "adapter that Tory is going to add my next a standalone adapters the other",
    "start": "418569",
    "end": "424419"
  },
  {
    "text": "type of adapters adapters that interface to a back-end system for example a",
    "start": "424419",
    "end": "430330"
  },
  {
    "text": "struct stock driver adapter belong to a such category in order to provide a",
    "start": "430330",
    "end": "439899"
  },
  {
    "start": "437000",
    "end": "500000"
  },
  {
    "text": "custom adapter you need to determine several scenes for your adapter first you need to determine your adapter type",
    "start": "439899",
    "end": "446469"
  },
  {
    "text": "whether is doing a precondition check or doing crota track automation reporting second",
    "start": "446469",
    "end": "453669"
  },
  {
    "text": "you need to determine the runtime input for your adapter in mixer we'll use",
    "start": "453669",
    "end": "458709"
  },
  {
    "text": "templates to define the schema for mapping attributes to adapter input you",
    "start": "458709",
    "end": "464560"
  },
  {
    "text": "can apply multiple templates for a single adapter you can either use the built-in templates or provided your",
    "start": "464560",
    "end": "471520"
  },
  {
    "text": "custom templates next you need to determine how to configure your adapter",
    "start": "471520",
    "end": "477639"
  },
  {
    "text": "what are the parameters you adapter takes a configured instance of an adapter is called a handler and lastly",
    "start": "477639",
    "end": "486939"
  },
  {
    "text": "you need to determine the business logic for your adapter to handle the runtime input you can find more information on",
    "start": "486939",
    "end": "494139"
  },
  {
    "text": "adapter developers Qaida which at is github link points to okay not as",
    "start": "494139",
    "end": "502809"
  },
  {
    "start": "500000",
    "end": "548000"
  },
  {
    "text": "quickly walk through the steps of a building a custom adapter using a very simple example suppose we need to a",
    "start": "502809",
    "end": "509080"
  },
  {
    "text": "build an adapter to a verify a string is present in a list so the adapter type is",
    "start": "509080",
    "end": "515318"
  },
  {
    "text": "the check the adapter input is defined by the built-in list entry template a",
    "start": "515319",
    "end": "521640"
  },
  {
    "text": "quick look of the list entry template it is very simple as you can",
    "start": "521640",
    "end": "527730"
  },
  {
    "text": "it only has a one value one stream value which specifies the entry it will verify",
    "start": "527730",
    "end": "533100"
  },
  {
    "text": "in the list the adapter configuration is",
    "start": "533100",
    "end": "538320"
  },
  {
    "text": "a list of strings and at runtime the adapter looks up the value in a list of",
    "start": "538320",
    "end": "544709"
  },
  {
    "text": "strings and the return to check a result okay so the first step is to alright to",
    "start": "544709",
    "end": "552120"
  },
  {
    "start": "548000",
    "end": "596000"
  },
  {
    "text": "the basic adapter scallion encoder you can copy it from our online tutorial or",
    "start": "552120",
    "end": "557339"
  },
  {
    "text": "any Beauty adapters I highlighted at the part that unit will provide a adapter",
    "start": "557339",
    "end": "563490"
  },
  {
    "text": "information including the name of the adapter the description of the adapter and the templates the adapter supports",
    "start": "563490",
    "end": "571010"
  },
  {
    "text": "and you can also provide a default configuration for the adapter in the",
    "start": "571010",
    "end": "576570"
  },
  {
    "text": "second step you need to alright adapter configuration these are the parameters for the adapter in this case it is a",
    "start": "576570",
    "end": "583680"
  },
  {
    "text": "list of strings endorser staff you need to validate adapter configuration in our",
    "start": "583680",
    "end": "590640"
  },
  {
    "text": "case we simply make sure that the list is not empty and in the last step you",
    "start": "590640",
    "end": "599100"
  },
  {
    "start": "596000",
    "end": "612000"
  },
  {
    "text": "need to write the runtime logic for your adapter so in our case we simply check",
    "start": "599100",
    "end": "605160"
  },
  {
    "text": "that if the stream value is in the list and I'll return the check result ok now",
    "start": "605160",
    "end": "614160"
  },
  {
    "start": "612000",
    "end": "683000"
  },
  {
    "text": "you have built your custom adapter let's configure our policy using this adapter",
    "start": "614160",
    "end": "620690"
  },
  {
    "text": "so we want to check that the source version is in and specified aversions",
    "start": "620690",
    "end": "625740"
  },
  {
    "text": "list so first unit who will create an instance of list entry template called a",
    "start": "625740",
    "end": "631920"
  },
  {
    "text": "source version and so and the value is mapped from the attribute sourced our",
    "start": "631920",
    "end": "637320"
  },
  {
    "text": "latest version then you create a handler of the list ajikko adapter is called a",
    "start": "637320",
    "end": "643560"
  },
  {
    "text": "virgin checker and you provide a parameter which is the list of versions",
    "start": "643560",
    "end": "648720"
  },
  {
    "text": "v1 v2 and then you create our track version policy which simply passes the",
    "start": "648720",
    "end": "655079"
  },
  {
    "text": "source version instance to a virgin checker and and you can also specify the condition",
    "start": "655079",
    "end": "660330"
  },
  {
    "text": "when this policy applies so in this case the Czech version policy applies when",
    "start": "660330",
    "end": "665790"
  },
  {
    "text": "the ratings applica applies to the ratings application and now you can",
    "start": "665790",
    "end": "673650"
  },
  {
    "text": "apply the policy and the easte eoeo infosys is the way enforce the policy at",
    "start": "673650",
    "end": "678660"
  },
  {
    "text": "run time ok now I'm going to hand over this presentation to a Tory to talk",
    "start": "678660",
    "end": "684270"
  },
  {
    "start": "683000",
    "end": "887000"
  },
  {
    "text": "about it ok",
    "start": "684270",
    "end": "689610"
  },
  {
    "text": "so thanks Leoben sleeving give a great overview of how you can take it mixer and extend it to enforce your own",
    "start": "689610",
    "end": "696450"
  },
  {
    "text": "custom policies and the other thing that we wanted to do in this talk though is sort of highlight this ecosystem of integrations that are being built up",
    "start": "696450",
    "end": "702270"
  },
  {
    "text": "around us do and so to do that what we thought we would do is show how the open policy agent project has been integrated",
    "start": "702270",
    "end": "707760"
  },
  {
    "text": "into sto and and give you guys a sense of what you what you can do with that ok",
    "start": "707760",
    "end": "712950"
  },
  {
    "text": "so I'm gonna give everybody a quick overview of what the open policy agent is how we built the adaptor and then show how that how that how you actually",
    "start": "712950",
    "end": "718680"
  },
  {
    "text": "use it how it works so the open policy agent is as an open source general-purpose policy engine and what",
    "start": "718680",
    "end": "725339"
  },
  {
    "text": "that means is that you can use it basically in any system and any letter the stack to offload policy decisions and so one of the obvious applications",
    "start": "725339",
    "end": "732150"
  },
  {
    "text": "for oppa is API authorization because you know pretty much every single organization has to be able control who",
    "start": "732150",
    "end": "737370"
  },
  {
    "text": "can do what across their micro-service api's so OPA you can use it for things",
    "start": "737370",
    "end": "743040"
  },
  {
    "text": "like kubernetes and Cloud Foundry and and docker and and so on but here we're gonna be focusing on Castillo and this",
    "start": "743040",
    "end": "748230"
  },
  {
    "text": "this new integration that's been built so the core of OPA though is this declarative language that lets you codify your policies when it gives you",
    "start": "748230",
    "end": "755640"
  },
  {
    "text": "these these these this policy language the latest write write rules that answer questions like is X allowed to call Y on",
    "start": "755640",
    "end": "761220"
  },
  {
    "text": "on Z now when you're actually taking OPA and integrating it or using it you can",
    "start": "761220",
    "end": "766410"
  },
  {
    "text": "take it as a library and embed it into your applications or your services or you can run it next to your service as a",
    "start": "766410",
    "end": "771660"
  },
  {
    "text": "sidecar you can run it on the host and have all your services on that host call into it and ask for policy decisions now",
    "start": "771660",
    "end": "777540"
  },
  {
    "text": "it's designed to be as lightweight as possible and so we don't have any external dependencies at runtime and so all the policies and the data and so on",
    "start": "777540",
    "end": "783390"
  },
  {
    "text": "that it uses to evaluate are all stored in memory so doesn't introduce any dependencies onto an external database",
    "start": "783390",
    "end": "789089"
  },
  {
    "text": "or an external service or anything like that you take it and you deploy it so it's very easy to get up and running and use it and so the whole goal with the",
    "start": "789089",
    "end": "797160"
  },
  {
    "text": "project is to give the community this reusable building block that that people can leverage to enforce policies up and",
    "start": "797160",
    "end": "802560"
  },
  {
    "text": "down the stack using a unified holistic approach with with a language that is suitable for all these different kinds",
    "start": "802560",
    "end": "808140"
  },
  {
    "text": "of things so what we did and what the team at SDO did was take OPA and they",
    "start": "808140",
    "end": "814470"
  },
  {
    "text": "integrated Indian - mixer as an adapter as a check adapter and the so the way this works is that when envoy receives",
    "start": "814470",
    "end": "821160"
  },
  {
    "text": "incoming traffic it executes this check RPC call against mixer and when it does that it provides a bunch of attributes",
    "start": "821160",
    "end": "826770"
  },
  {
    "text": "that describe the request so things like the method and the path and the headers and so on and then when that RPC request",
    "start": "826770",
    "end": "834120"
  },
  {
    "text": "arrives at mixer mixer looks at the adapter to run and it dispatches it to the adapter in this case OPA which makes",
    "start": "834120",
    "end": "840930"
  },
  {
    "text": "a policy decision so it takes that all that input all those attributes and it decides whether or not that request should be allowed or denied and then",
    "start": "840930",
    "end": "847709"
  },
  {
    "text": "that decision is passed back to mixer and ultimately back down to envoy where the request can either be accepted and forwarded or it can be you know dropped",
    "start": "847709",
    "end": "854100"
  },
  {
    "text": "or rejected now when you when you configure OPA you as an operator you",
    "start": "854100",
    "end": "860430"
  },
  {
    "text": "tell it what inputs you want to provide to the adapter and so you can basically map any of the sto attributes anything",
    "start": "860430",
    "end": "867390"
  },
  {
    "text": "in the SPO vocabulary into these these collections these subjects and action collections and so it's very flexible",
    "start": "867390",
    "end": "872610"
  },
  {
    "text": "and you as an operator get to decide what data you you pass off to the policy engine now OPA itself is actually",
    "start": "872610",
    "end": "878490"
  },
  {
    "text": "embedded into mixer as a library so it's totally standalone and it doesn't have any external dependencies which means",
    "start": "878490",
    "end": "884430"
  },
  {
    "text": "it's nice and easy to deploy ok so when you actually have to configure OPA the",
    "start": "884430",
    "end": "890730"
  },
  {
    "start": "887000",
    "end": "912000"
  },
  {
    "text": "first thing you have to do is create a rule and so this is an sto concept and mixer concept and so what these rules do",
    "start": "890730",
    "end": "896310"
  },
  {
    "text": "is they tell you or they tell mixer what just like when to send requests off to adapters and so in this case we've just",
    "start": "896310",
    "end": "902610"
  },
  {
    "text": "created a single rule that says send all the requests to the OPA handler or open adapter and when you do that supply the",
    "start": "902610",
    "end": "908550"
  },
  {
    "text": "auth authorization instance data so then",
    "start": "908550",
    "end": "913800"
  },
  {
    "start": "912000",
    "end": "944000"
  },
  {
    "text": "we have to define me what the authorization instance data is and so in this case we specify values for the for",
    "start": "913800",
    "end": "919140"
  },
  {
    "text": "the subject and action collections and we're mapping use do attributes into those collections and so here we've",
    "start": "919140",
    "end": "924300"
  },
  {
    "text": "decided to include the user ID and the the target namespace for example in the target service and",
    "start": "924300",
    "end": "930240"
  },
  {
    "text": "the path from the request and the method from the request and so on and so all of this data is actually loaded into mixer",
    "start": "930240",
    "end": "936300"
  },
  {
    "text": "through the sto config store which is it can be kubernetes or it can be other other backends as well and so we'll see",
    "start": "936300",
    "end": "943200"
  },
  {
    "text": "how this works in a minute okay so the last thing you have to do after you've configured you know when to send",
    "start": "943200",
    "end": "948630"
  },
  {
    "start": "944000",
    "end": "981000"
  },
  {
    "text": "requests to adapters and then what to send to adapters you need to describe what to do when the adapter receives",
    "start": "948630",
    "end": "954320"
  },
  {
    "text": "traffic and so that's what the handler configuration is for so the handler configuration is always going to be",
    "start": "954320",
    "end": "959460"
  },
  {
    "text": "specific to that to the handler because it's in this case it's saying okay first of all the check method to run inside the policy is authorization dot allow",
    "start": "959460",
    "end": "966300"
  },
  {
    "text": "and then we actually take the OPA policy and we embed it directly into the configuration here just as a string and",
    "start": "966300",
    "end": "972510"
  },
  {
    "text": "so this is just a really simple policy that says by default requests should be denied but if they're performing a read",
    "start": "972510",
    "end": "977700"
  },
  {
    "text": "operation then you can allow them okay all right so let's see how this actually",
    "start": "977700",
    "end": "982890"
  },
  {
    "start": "981000",
    "end": "1322000"
  },
  {
    "text": "works",
    "start": "982890",
    "end": "985070"
  },
  {
    "text": "okay okay so what I have here right now is",
    "start": "1000810",
    "end": "1006209"
  },
  {
    "text": "the sto control plan deployed on top of my laptop or rather on top of kubernetes running out of a mini cube on top of my",
    "start": "1006209",
    "end": "1011939"
  },
  {
    "text": "laptop then I've got this very exciting application called book info deployed on top of sto and desiccants because lehman",
    "start": "1011939",
    "end": "1019920"
  },
  {
    "text": "and i are running a book store and then we have our our authorization rule here and so this is just saying you know when",
    "start": "1019920",
    "end": "1025770"
  },
  {
    "text": "incoming requests are received by by by mixer they should be forwarded all the",
    "start": "1025770",
    "end": "1031020"
  },
  {
    "text": "time to the OPA handler using the authorization instance data so then we",
    "start": "1031020",
    "end": "1037558"
  },
  {
    "text": "can take a look at that instance data and so here we've configured it so that it sends in the the source and destination namespace and services the",
    "start": "1037559",
    "end": "1044399"
  },
  {
    "text": "headers from the request the method from the request and the path and then finally we've got the OPA handler",
    "start": "1044399",
    "end": "1050429"
  },
  {
    "text": "configured and right now this is the same kind of configuration you saw before but in this case it's just allowing all the traffic by default okay",
    "start": "1050429",
    "end": "1058289"
  },
  {
    "text": "so I've got the product page here and great it loaded that's exciting",
    "start": "1058289",
    "end": "1065149"
  },
  {
    "text": "okay so",
    "start": "1065149",
    "end": "1068210"
  },
  {
    "text": "okay so what I have right now is the policy on the left and the application",
    "start": "1072799",
    "end": "1079919"
  },
  {
    "text": "are started application on the left and then the policy on the right and I have a script that's watching the policies on",
    "start": "1079919",
    "end": "1085169"
  },
  {
    "text": "my machine and then reloading them in sto whenever they change and so right",
    "start": "1085169",
    "end": "1090419"
  },
  {
    "text": "now we just have a simple policy here that says that by default requests should be denied however if this other",
    "start": "1090419",
    "end": "1095640"
  },
  {
    "text": "service graph policy allows the request then they should be good then you should go ahead and allow it so let's take a",
    "start": "1095640",
    "end": "1100799"
  },
  {
    "text": "look at the service graph policy so the service graph policy defines the allowed connectivity for applications running on",
    "start": "1100799",
    "end": "1107610"
  },
  {
    "text": "top of sto right now and basically these allow rules below here interpret that that data structure to decide whether",
    "start": "1107610",
    "end": "1113970"
  },
  {
    "text": "the incoming service is allowed to talk to the destination service now the thing is that right now the allow rule is",
    "start": "1113970",
    "end": "1120240"
  },
  {
    "text": "defaulting to true which is probably not good from a best practices point of view so let's change that to false and we can",
    "start": "1120240",
    "end": "1126149"
  },
  {
    "text": "see that the policy reloaded hopefully and now if i refresh the page it still works but we don't see the product",
    "start": "1126149",
    "end": "1131970"
  },
  {
    "text": "reviews anymore and so the reason for that is that the product page is not allowed to talk to the review service so",
    "start": "1131970",
    "end": "1138299"
  },
  {
    "text": "let's change that and then once the policy reloads the reviews show up which",
    "start": "1138299",
    "end": "1145740"
  },
  {
    "text": "is great and so this just shows how you can write these these high-level policies that are very dynamic and can",
    "start": "1145740",
    "end": "1151289"
  },
  {
    "text": "be reloaded on the fly without requiring you know you to write a bunch of go code",
    "start": "1151289",
    "end": "1156419"
  },
  {
    "text": "and then do a whole software release especially have to upgrade mix or anything like that this is all based on configuration hopefully that comes back",
    "start": "1156419",
    "end": "1165210"
  },
  {
    "text": "okay great it's back okay so this is like a relatively simple policy this is something that you can enforce with this do without OPA",
    "start": "1165210",
    "end": "1170850"
  },
  {
    "text": "so let's look at something a little bit more interesting so I have this this organization Sharpe policy and this is",
    "start": "1170850",
    "end": "1176970"
  },
  {
    "text": "an org chart for a bookstore and this is a weird bookstore because they don't want their people that work on reviews",
    "start": "1176970",
    "end": "1182520"
  },
  {
    "text": "and shelving to be able to see book reviews and so right now we have this org chart where Alice is a manager and",
    "start": "1182520",
    "end": "1188610"
  },
  {
    "text": "then Bob is is a reviewer and he also does some shelving and then ken is only doing shelving it's very boring for Ken",
    "start": "1188610",
    "end": "1195230"
  },
  {
    "text": "and so right now by default this policy is going to deny all incoming traffic however if you're a manager and you're",
    "start": "1195230",
    "end": "1202679"
  },
  {
    "text": "accessing if you're manager you'll be allowed to see everything but if you're if you're just on shelving if you're not a manager then",
    "start": "1202679",
    "end": "1208050"
  },
  {
    "text": "you'll be denied if you're trying to access these sensitive book reviews okay so in order to make that actually take",
    "start": "1208050",
    "end": "1214650"
  },
  {
    "text": "effect I need to hook it up to the top level here so I'm gonna say now basically a deny by default however if",
    "start": "1214650",
    "end": "1220440"
  },
  {
    "text": "the service graft policy allows it and the organization chart policy allows it then go ahead and allow the request and",
    "start": "1220440",
    "end": "1226410"
  },
  {
    "text": "so if i refresh the page it still works but we can't see the reviews because we're not signed in we're an anonymous user right now so if you try to sign in",
    "start": "1226410",
    "end": "1233310"
  },
  {
    "text": "as Bob he's not allowed to see them but if we sign in as Alice who is Bob's or",
    "start": "1233310",
    "end": "1240480"
  },
  {
    "text": "rather who's in management and the performance reviews show up and so this shows how you can enforce different",
    "start": "1240480",
    "end": "1245610"
  },
  {
    "text": "kinds of policies with OPA that aren't necessarily coupled to role the based access control or just simple simple",
    "start": "1245610",
    "end": "1251100"
  },
  {
    "text": "expressions this organization chart data is is hard-coded into the policy right now but there are other ways to get data",
    "start": "1251100",
    "end": "1256680"
  },
  {
    "text": "and so on into OPA that are more efficient and so this is just here because it allows us to easily change during the during the demo okay and so",
    "start": "1256680",
    "end": "1264450"
  },
  {
    "text": "then a lot last thing I want to show is how you can enforce policies that take into account some kind of context and so",
    "start": "1264450",
    "end": "1270000"
  },
  {
    "text": "the bookstore has developed a strange idea they want to allow reviewers to look at book reviews after 4 p.m. for",
    "start": "1270000",
    "end": "1277470"
  },
  {
    "text": "some reason and so we can add another policy here and what its gonna do is",
    "start": "1277470",
    "end": "1285120"
  },
  {
    "text": "check whether or not the incoming user is on the reviewer team and then it's going to check whether the current date and time is between 4:00 p.m. and",
    "start": "1285120",
    "end": "1292260"
  },
  {
    "text": "midnight and so because this policy is part of the organization chart package",
    "start": "1292260",
    "end": "1297780"
  },
  {
    "text": "that answer gets composed with the previous one about sensitive api's and so now if I try to sign in as Bob again",
    "start": "1297780",
    "end": "1303800"
  },
  {
    "text": "we should be able to see the reviews okay so that worked but if I try to sign",
    "start": "1303800",
    "end": "1309720"
  },
  {
    "text": "as can the poor guy doing book shelving he's he's still unable to see those reviews so that's the demo",
    "start": "1309720",
    "end": "1318110"
  },
  {
    "text": "switch back to the slides so oppa you know it gives everybody this",
    "start": "1318530",
    "end": "1324849"
  },
  {
    "text": "this reusable building block that you can use to enforce all kinds of drug policies across the stack but it's particularly useful for enforcing",
    "start": "1324849",
    "end": "1330519"
  },
  {
    "text": "authorization decisions in your micro services and this is super important because it's not enough to just authenticate users you need to be able",
    "start": "1330519",
    "end": "1336729"
  },
  {
    "text": "to control what those users can do sto is great because it has this fantastic",
    "start": "1336729",
    "end": "1342399"
  },
  {
    "text": "plug-in framework that allows you to plug in things like OPA as well as other adapters for authorization and quota and",
    "start": "1342399",
    "end": "1348279"
  },
  {
    "text": "telemetry and so on and the plug-in framework makes it pretty easy to get get up and running with this and the documentation is great so I encourage",
    "start": "1348279",
    "end": "1354609"
  },
  {
    "text": "everybody to check that out and so finally if you're if you're interested in security you're into sto please come",
    "start": "1354609",
    "end": "1361119"
  },
  {
    "text": "and join the the security sig and check out the projects on github star them and",
    "start": "1361119",
    "end": "1366489"
  },
  {
    "text": "yeah so thank you very much so we can",
    "start": "1366489",
    "end": "1375190"
  },
  {
    "text": "we're happy to take questions of course ok we'll just go like front to back I guess so in the blue",
    "start": "1375190",
    "end": "1382589"
  },
  {
    "text": "so is the question about how do you prevent people from changing policy when",
    "start": "1419740",
    "end": "1427190"
  },
  {
    "text": "they're not supposed to okay no it's about it's about authentic but authenticating users and getting that data into OPA okay",
    "start": "1427190",
    "end": "1440080"
  },
  {
    "text": "okay okay so for the first question about how you get external data into OPA so it provides api's that allow you to",
    "start": "1463920",
    "end": "1470230"
  },
  {
    "text": "push data in okay so you can load arbitrary JSON data into OPA and then write policy over it so if you can get",
    "start": "1470230",
    "end": "1476050"
  },
  {
    "text": "your data out of LDAP or workday or whatever that describes your organization you can load that into OPA",
    "start": "1476050",
    "end": "1481060"
  },
  {
    "text": "the other thing you can do is stick like an authenticating proxy in front of OPA that goes and gets that data and and",
    "start": "1481060",
    "end": "1487000"
  },
  {
    "text": "when it does the authentication check and it passes that in beyond that it's sort of up to you to design that part of",
    "start": "1487000",
    "end": "1492160"
  },
  {
    "text": "your part of your system so in the is the okay so the identities are identified using the attributes so my is",
    "start": "1492160",
    "end": "1499270"
  },
  {
    "text": "going to process the request and guess all the attributes and you can have the combination any combination of the",
    "start": "1499270",
    "end": "1504460"
  },
  {
    "text": "attributes to identify identity and then so then for the second part of your question so OPA gives you a test",
    "start": "1504460",
    "end": "1510610"
  },
  {
    "start": "1507000",
    "end": "1538000"
  },
  {
    "text": "framework to write unit tests for your policies in and then you can it gives you a test runner so you can like execute all the unit tests in your in",
    "start": "1510610",
    "end": "1517540"
  },
  {
    "text": "your in your policy code base if you will and then yeah we're looking to improve that to give you things like",
    "start": "1517540",
    "end": "1522730"
  },
  {
    "text": "coverage and profiling and so on yeah okay next",
    "start": "1522730",
    "end": "1528659"
  },
  {
    "start": "1538000",
    "end": "1648000"
  },
  {
    "text": "so the question is how do you log decisions that have been made inside of Ischia or OPA so oppa has up has a",
    "start": "1539180",
    "end": "1544460"
  },
  {
    "text": "framework that allows you to plug in and figure out when a decisions been made like the top level decision so you could if you're integrating oppa you can you",
    "start": "1544460",
    "end": "1550730"
  },
  {
    "text": "can get that and you can you can send it out however you want but I think that women can probably answer how sto helps",
    "start": "1550730",
    "end": "1555830"
  },
  {
    "text": "you there yeah I think the login part we have some logging adaptors like yes",
    "start": "1555830",
    "end": "1562070"
  },
  {
    "text": "stackdriver or other study logging adapters and we are looking to also into",
    "start": "1562070",
    "end": "1569780"
  },
  {
    "text": "providing some auditing policies so that you can audit order or the oscillation",
    "start": "1569780",
    "end": "1575570"
  },
  {
    "text": "although authority to the requester you have done in the past okay",
    "start": "1575570",
    "end": "1581270"
  },
  {
    "text": "the Creator",
    "start": "1581270",
    "end": "1584080"
  },
  {
    "text": "okay so in the demo the username is passed in a very secure way through the cookies in the header and then the",
    "start": "1604010",
    "end": "1610410"
  },
  {
    "text": "policy like parses that cook I didn't show the policy that parses the cookies but there's little helper that's parsing the ahead the username out of the out of",
    "start": "1610410",
    "end": "1617340"
  },
  {
    "text": "the headers but then I think that sto is God right now he's working on is your",
    "start": "1617340",
    "end": "1623280"
  },
  {
    "text": "team is working on enabling and yourselves indication yeah it's a lot",
    "start": "1623280",
    "end": "1629750"
  },
  {
    "start": "1648000",
    "end": "1699000"
  },
  {
    "text": "the policies are actually started in the East your config storm actually currents",
    "start": "1648920",
    "end": "1654990"
  },
  {
    "text": "are into the API server and the policy can be either in foster our mixer or my",
    "start": "1654990",
    "end": "1661350"
  },
  {
    "text": "so if it's a in first our mixer then the policy supported by the mixer if it's in",
    "start": "1661350",
    "end": "1667320"
  },
  {
    "text": "foster on my the imperative is going to a portion of the policy to my proxies",
    "start": "1667320",
    "end": "1673400"
  },
  {
    "text": "pilot who is going to get the configuration from the east EO config store they're actually it's not going",
    "start": "1673820",
    "end": "1680040"
  },
  {
    "text": "through mixer and a nope is designed to be as lightweight as possible so you could run it at the edge like next to envoy or something like that",
    "start": "1680040",
    "end": "1687740"
  },
  {
    "text": "yeah it's yeah it's being embedded as a library inside of the mixer but mixer",
    "start": "1696400",
    "end": "1702320"
  },
  {
    "start": "1699000",
    "end": "1742000"
  },
  {
    "text": "does a whole bunch of caching and so does the Envoy filter for for mixer so",
    "start": "1702320",
    "end": "1707740"
  },
  {
    "text": "yeah so uh my proxy we have a lot of caching and the same as our mixers",
    "start": "1707980",
    "end": "1715160"
  },
  {
    "text": "either so yeah so okay I can be impacted either to a mixer or on the invoice idle",
    "start": "1715160",
    "end": "1722210"
  },
  {
    "text": "in this case we integrated or with a mixer because the mixer is more extensible is actually designed for",
    "start": "1722210",
    "end": "1727880"
  },
  {
    "text": "extensibility so it's easy to integrate any other policy engine - mixer sorry",
    "start": "1727880",
    "end": "1736059"
  },
  {
    "start": "1742000",
    "end": "1780000"
  },
  {
    "text": "for Java so OPA is written in go and you can embed it into your go services if",
    "start": "1742120",
    "end": "1748850"
  },
  {
    "text": "you're using Java or any other language you can use it as a sidecar and then it has a REST API that you can use to ask",
    "start": "1748850",
    "end": "1754010"
  },
  {
    "text": "policy questions yeah II still mixer is the reason Inc Oh actually yeah and the",
    "start": "1754010",
    "end": "1760490"
  },
  {
    "text": "pilot is everything go as well",
    "start": "1760490",
    "end": "1763809"
  },
  {
    "text": "yeah so the question is whether the decision that oppa makes can be cashed so I think it's cached in two places so",
    "start": "1779530",
    "end": "1784840"
  },
  {
    "start": "1780000",
    "end": "1811000"
  },
  {
    "text": "it's cached at envoy at the in the data plane and then inside of mixer there's a more sophisticated cache strategy where",
    "start": "1784840",
    "end": "1791380"
  },
  {
    "text": "it like it caches decisions for each of the adapters basically that it run and so it's got very fine-grained caching",
    "start": "1791380",
    "end": "1796690"
  },
  {
    "text": "and mixer so there's two two levels yeah",
    "start": "1796690",
    "end": "1800309"
  },
  {
    "text": "I think my cider we are cashing the",
    "start": "1810759",
    "end": "1816729"
  },
  {
    "start": "1811000",
    "end": "2018000"
  },
  {
    "text": "request going out and basically the requests going out and check result so",
    "start": "1816729",
    "end": "1823359"
  },
  {
    "text": "my cost mixer check and the report ap is so whatever the check requests sending",
    "start": "1823359",
    "end": "1828969"
  },
  {
    "text": "out ended the check result and also the reports any out is all being cashed and",
    "start": "1828969",
    "end": "1835479"
  },
  {
    "text": "on the on the mix insider I think the like the in the OPI case",
    "start": "1835479",
    "end": "1840489"
  },
  {
    "text": "though we can catch the oscillation results like what other oscillation",
    "start": "1840489",
    "end": "1846099"
  },
  {
    "text": "requests and what are the result and because mixer is a centralized component",
    "start": "1846099",
    "end": "1852309"
  },
  {
    "text": "so so it can have a centralized the cash and the invoice is caching for the local",
    "start": "1852309",
    "end": "1857829"
  },
  {
    "text": "service whatever for this service the requests any odd for this service",
    "start": "1857829",
    "end": "1863998"
  },
  {
    "text": "okay mixer is deployed as a single pump",
    "start": "1868349",
    "end": "1876009"
  },
  {
    "text": "or what does that mean oh no mixer is a service yeah mixer is yeah it's a",
    "start": "1876009",
    "end": "1883690"
  },
  {
    "text": "standalone service it's",
    "start": "1883690",
    "end": "1890398"
  },
  {
    "text": "talking through the yeah talk to you that you mix a team maybe like one more question",
    "start": "1930309",
    "end": "1936570"
  },
  {
    "text": "wish API are you talking about the policies or the authorization Oh",
    "start": "1946590",
    "end": "1954450"
  },
  {
    "text": "figuration the rules okay so are you",
    "start": "1954450",
    "end": "1961230"
  },
  {
    "text": "talking about the policies I showed",
    "start": "1961230",
    "end": "1964970"
  },
  {
    "text": "these policies is that what they are talking about okay",
    "start": "1966890",
    "end": "1985400"
  },
  {
    "text": "yeah yes all I know is that your point",
    "start": "1988880",
    "end": "1994110"
  },
  {
    "text": "sorry yeah it's a it's a neon cell and we are actually going to have monthly release going forward and yeah next year",
    "start": "1994110",
    "end": "2001970"
  },
  {
    "text": "in June it will be a 1.0 that's it yeah",
    "start": "2001970",
    "end": "2007270"
  },
  {
    "text": "otherwise there's a probably time thank you okay thank you very much thank you",
    "start": "2008830",
    "end": "2015970"
  },
  {
    "text": "[Applause]",
    "start": "2015970",
    "end": "2020289"
  }
]