[
  {
    "text": "hey everybody and welcome to this cncf webinar on uh well an introduction to",
    "start": "320",
    "end": "8120"
  },
  {
    "text": "crossplane uh we're going to talk about everything from manage services to claims my name is Chris anen I uh work",
    "start": "8120",
    "end": "17039"
  },
  {
    "text": "for a company called rxm or a cloud native Consulting shop we're going to talk about uh some of our expertise with",
    "start": "17039",
    "end": "24960"
  },
  {
    "text": "crossplaying hopefully get everybody started uh using the platform all right so let's talk about what crossplane is",
    "start": "24960",
    "end": "33200"
  },
  {
    "text": "so primarily crossplane is an abstraction layer for cloud infrastructure orchestration what that",
    "start": "33200",
    "end": "40320"
  },
  {
    "text": "means is that we can essentially uh unify uh Cloud apis by using the",
    "start": "40320",
    "end": "46120"
  },
  {
    "text": "kubernetes API for example we can create objects within kubernetes that uh are",
    "start": "46120",
    "end": "53239"
  },
  {
    "text": "represented as kubernetes resources and then those things can get provisioned uh",
    "start": "53239",
    "end": "58600"
  },
  {
    "text": "and kept in sync with uh some sort of cloud backend it uh acts as a a low code",
    "start": "58600",
    "end": "65080"
  },
  {
    "text": "or no code framework for building Cloud native control planes so that uh you can",
    "start": "65080",
    "end": "70759"
  },
  {
    "text": "use your kubernetes cluster to deploy things in the public clouds and private clouds and hybrid Cloud infrastructure",
    "start": "70759",
    "end": "77920"
  },
  {
    "text": "uh leveraging the same Concepts that we've us used for a long time with infrastructure as code because of course",
    "start": "77920",
    "end": "83880"
  },
  {
    "text": "cuetes objects are manifests right and we can check those things into git just like we would check in to get the files",
    "start": "83880",
    "end": "92759"
  },
  {
    "text": "from other types of infrastructure provisioning systems so think about like anable playbooks right those are written",
    "start": "92759",
    "end": "98600"
  },
  {
    "text": "in yaml you've got uh terraform configuration files right those things are all uh checkable into get and help",
    "start": "98600",
    "end": "106040"
  },
  {
    "text": "us with giops workflows and uh crossplane is no different because we're using manifests in kubernetes and in",
    "start": "106040",
    "end": "112680"
  },
  {
    "text": "reality it's it's it it's an extensible backend to really manage anything with",
    "start": "112680",
    "end": "118200"
  },
  {
    "text": "an API so that API is essenti represented as kubet custom resources uh there was an interesting project that",
    "start": "118200",
    "end": "124920"
  },
  {
    "text": "one of their folks did where they integrated uh crossplane with uh the",
    "start": "124920",
    "end": "130039"
  },
  {
    "text": "Domino's API and like ordered pizza uh from Domino's uh that project is still",
    "start": "130039",
    "end": "136640"
  },
  {
    "text": "out there so check it out on GitHub let's talk about uh why we would want to use crossplane as opposed to some of",
    "start": "136640",
    "end": "143120"
  },
  {
    "text": "these other tools so first off uh crossplane provides active state enforcement so unlike these other",
    "start": "143120",
    "end": "150040"
  },
  {
    "text": "infrastructure as code tools like the aforementioned anible terraform open tofu those types crossplane uses the uh",
    "start": "150040",
    "end": "158640"
  },
  {
    "text": "notion of the kubernetes control Loop to keep things in sync so it's it's doing active state enforcement where as",
    "start": "158640",
    "end": "164120"
  },
  {
    "text": "opposed to something like anible terraform on their own right they uh anable an executable and you uh can run",
    "start": "164120",
    "end": "171879"
  },
  {
    "text": "it on a on a schedule but that's different from something like crossplaying that's actually using the",
    "start": "171879",
    "end": "177120"
  },
  {
    "text": "control Loop methodology or or functionality from kubernetes and keeping external resources in sync uh",
    "start": "177120",
    "end": "185480"
  },
  {
    "text": "like it does with normal kubernetes objects right uh two would be uh the ability to unify a control plane right",
    "start": "185480",
    "end": "191840"
  },
  {
    "text": "instead of uh a bunch of backend Cloud apis we can use kubernetes API to rule",
    "start": "191840",
    "end": "197680"
  },
  {
    "text": "them all this simplifies things like access controls to just the kubernetes API we don't have to have you don't have",
    "start": "197680",
    "end": "204280"
  },
  {
    "text": "to give users access to both kubernetes for their kubernetes resources and then the cloud backends to create and manage",
    "start": "204280",
    "end": "212200"
  },
  {
    "text": "their their Cloud resources we can just use the kubernetes API and allow them to",
    "start": "212200",
    "end": "217599"
  },
  {
    "text": "create both things as well it's Cloud agnostic there are ways to create Cloud",
    "start": "217599",
    "end": "224640"
  },
  {
    "text": "resources uh with kubernetes in the various clouds uh Amazon uh Arc for",
    "start": "224640",
    "end": "230159"
  },
  {
    "text": "example comes to mind or sorry AC I should say but that's an that's Amazon",
    "start": "230159",
    "end": "235599"
  },
  {
    "text": "specific something that uh you can only use within Amazon and each one of them uh three clouds of Google Cloud",
    "start": "235599",
    "end": "242200"
  },
  {
    "text": "Microsoft AWS have their own uh way of doing this but then you're also using",
    "start": "242200",
    "end": "248439"
  },
  {
    "text": "that cloud provider's way of doing things right so with crossplane uh we're",
    "start": "248439",
    "end": "253519"
  },
  {
    "text": "Cloud agnostic and so abstracting away the details of whatever Cloud we're",
    "start": "253519",
    "end": "259400"
  },
  {
    "text": "connecting to makes using multicloud much easier right I can Define Services",
    "start": "259400",
    "end": "266880"
  },
  {
    "text": "I can Define crossplane resources uh in a cloud agnostic way within crossplane",
    "start": "266880",
    "end": "272199"
  },
  {
    "text": "and then allow the Machinery of crossplane to go and reach out to whatever cloud or clouds I'm working",
    "start": "272199",
    "end": "278840"
  },
  {
    "text": "with and deploy those things the way that the cloud wants them um wants them deployed but without exposing those",
    "start": "278840",
    "end": "285479"
  },
  {
    "text": "things to the user so this also allows a user to move their workload from One",
    "start": "285479",
    "end": "291400"
  },
  {
    "text": "Cloud to another with little to zero modification and of course uh because",
    "start": "291400",
    "end": "298000"
  },
  {
    "text": "these are we're talking about kubernetes right uh kubernetes has a large ecosystem and",
    "start": "298000",
    "end": "303320"
  },
  {
    "text": "this enables things like get up getups workflows uh for both kubernetes",
    "start": "303320",
    "end": "308560"
  },
  {
    "text": "workloads as well as Cloud resources right we've got all the same tooling that we're using if you're using Argo CD you can still use that with this if",
    "start": "308560",
    "end": "315120"
  },
  {
    "text": "you're using any other uh systems that work with kubernetes because these uh",
    "start": "315120",
    "end": "321400"
  },
  {
    "text": "crossplane resources become kubernetes resources you can use it with crossplane",
    "start": "321400",
    "end": "326919"
  },
  {
    "text": "as well and then it also allows uh platform operators to build opinionated",
    "start": "326919",
    "end": "332039"
  },
  {
    "text": "control planes that allows them to offer essentially apis that are tailored to",
    "start": "332039",
    "end": "339240"
  },
  {
    "text": "the unique orchestration needs of the organization right so our example here",
    "start": "339240",
    "end": "344520"
  },
  {
    "text": "says let's say we have a set of immutable I am permissions so we're only going to allow certain permissions",
    "start": "344520",
    "end": "351520"
  },
  {
    "text": "against the cloud resources and that's something that we don't change regardless of what we're deploying but",
    "start": "351520",
    "end": "358520"
  },
  {
    "text": "that that that permissions role can be attached let's say to an AWS ec2 instance and that AWS ec2 instance can",
    "start": "358520",
    "end": "367000"
  },
  {
    "text": "be whatever size or flavor that the user wants right so we've injected our",
    "start": "367000",
    "end": "372080"
  },
  {
    "text": "opinion that opinion is we only Grant a certain role to that instance an",
    "start": "372080",
    "end": "378039"
  },
  {
    "text": "infrastructure role or a node role but the user has some flexibility to change",
    "start": "378039",
    "end": "383160"
  },
  {
    "text": "the size of their instance so that they can that that instance can support the",
    "start": "383160",
    "end": "388400"
  },
  {
    "text": "workload uh uh CPU and memory dis requirements that the workload needs now",
    "start": "388400",
    "end": "393960"
  },
  {
    "text": "how does this all work so once we've got crossplane installed in a kubernetes",
    "start": "393960",
    "end": "399360"
  },
  {
    "text": "cluster we essentially extend the kubernetes API with crossplane custom",
    "start": "399360",
    "end": "404800"
  },
  {
    "text": "resource definitions uh these extensions represent cloud provider specific things",
    "start": "404800",
    "end": "412560"
  },
  {
    "text": "like databases virtual machines storage right so that we can use all of the",
    "start": "412560",
    "end": "418840"
  },
  {
    "text": "services of the Cloud as a kubernetes resource and so to deploy one of those",
    "start": "418840",
    "end": "426520"
  },
  {
    "text": "things let's say we want to deploy an S3 bucket really any any uh object storage",
    "start": "426520",
    "end": "432319"
  },
  {
    "text": "bucket in any of the clouds right we declare a custom resource that specifies",
    "start": "432319",
    "end": "438879"
  },
  {
    "text": "details like the size the type the region other configurations that are specific to that resource that we want",
    "start": "438879",
    "end": "445080"
  },
  {
    "text": "to create and then we deploy that thing now there is an opportunity to abstract ract away some of this as well for",
    "start": "445080",
    "end": "451080"
  },
  {
    "text": "example like the region right the region in Google Cloud the way that it's the region uh string is formulated it's",
    "start": "451080",
    "end": "458000"
  },
  {
    "text": "going to be different from Azure it's going to be different from Amazon right so we have some opportunities here to",
    "start": "458000",
    "end": "464720"
  },
  {
    "text": "abstract that away and allow a user to specify something generic like just uh",
    "start": "464720",
    "end": "470440"
  },
  {
    "text": "Us East or us West or uh Asia pack or something right and then that gets",
    "start": "470440",
    "end": "475720"
  },
  {
    "text": "translated into the ring and the format that the",
    "start": "475720",
    "end": "482199"
  },
  {
    "text": "cloud wants without the user having to know that information and we'll of course explore that in this session and",
    "start": "482199",
    "end": "488759"
  },
  {
    "text": "then of course the core of crossplane reconciles the actual state of the cloud",
    "start": "488759",
    "end": "495680"
  },
  {
    "text": "resource with the desired state that you've declared in that custom resource",
    "start": "495680",
    "end": "502039"
  },
  {
    "text": "and so if that custom resource isn't running crossplane will run it uh if that crossplane I'm sorry if that cloud",
    "start": "502039",
    "end": "509639"
  },
  {
    "text": "resource crashes crossplane runs it again right replaces it or or starts it",
    "start": "509639",
    "end": "514839"
  },
  {
    "text": "back up again if there's an accidental deletion of some sort of object right we do that reconciliation Loop and we",
    "start": "514839",
    "end": "521399"
  },
  {
    "text": "replace or restart the object with with a new one and uh it acts exactly like",
    "start": "521399",
    "end": "530360"
  },
  {
    "text": "kues does for internal resources we're just hooking into uh cloud apis and",
    "start": "530360",
    "end": "536399"
  },
  {
    "text": "providing that reconciliation Loop so how does uh cross plane integrate with",
    "start": "536399",
    "end": "541720"
  },
  {
    "text": "these clouds in crossplane we use what's called a provider a provider extends the",
    "start": "541720",
    "end": "547440"
  },
  {
    "text": "crossplane core of crossplane with cloud provider specific CDs this makes sense",
    "start": "547440",
    "end": "553720"
  },
  {
    "text": "because I may not use every API in a given cloud and or I may not use a",
    "start": "553720",
    "end": "560560"
  },
  {
    "text": "particular Cloud at all right so uh if I'm not going to use Google Cloud for example then I don't need to uh deploy",
    "start": "560560",
    "end": "568480"
  },
  {
    "text": "those apis and so therefore I wouldn't uh deploy a a Google cloud provider",
    "start": "568480",
    "end": "575320"
  },
  {
    "text": "right same thing goes with apis within a given Cloud there are hundreds of apis",
    "start": "575320",
    "end": "581760"
  },
  {
    "text": "that are available from a given cloud provider while we could deploy something monolithic uh we can also deploy",
    "start": "581760",
    "end": "588880"
  },
  {
    "text": "something more granular to just create the specific Uh custom resource",
    "start": "588880",
    "end": "595120"
  },
  {
    "text": "definitions or apis that are associated with the services that we want to use",
    "start": "595120",
    "end": "601200"
  },
  {
    "text": "right for example ec2 or S3 or elastic map produce whatever those",
    "start": "601200",
    "end": "608920"
  },
  {
    "text": "things might be so this will map a given kubernetes API to an external API right",
    "start": "608920",
    "end": "615519"
  },
  {
    "text": "for example here on our slide we say a bucket kuties resource that represents",
    "start": "615519",
    "end": "620640"
  },
  {
    "text": "an Amazon or AWS S3 bucket we'll map the kuet custom resource to the cloud API",
    "start": "620640",
    "end": "629399"
  },
  {
    "text": "but if I'm not going to use let's say Amazon RDS then I wouldn't uh deploy a provider",
    "start": "629399",
    "end": "637480"
  },
  {
    "text": "that would integrate with the RDS apis",
    "start": "637480",
    "end": "642760"
  },
  {
    "text": "in other words I wouldn't really offer them in my kubernetes cluster because I'm not going to use them so this kind",
    "start": "642760",
    "end": "650920"
  },
  {
    "text": "of modular approach allows crossplane and and platform Engineers to deploy",
    "start": "650920",
    "end": "658760"
  },
  {
    "text": "providers that they're going to use and allow their users to consume those Cloud apis",
    "start": "658760",
    "end": "666800"
  },
  {
    "text": "through custom resource definitions that represent these cloud apis and then omit",
    "start": "666800",
    "end": "672800"
  },
  {
    "text": "the things that they're not going to use or that they don't want users to have access to how we do that is essentially",
    "start": "672800",
    "end": "679120"
  },
  {
    "text": "through pods right each provider resource or I would say kind of like a",
    "start": "679120",
    "end": "685360"
  },
  {
    "text": "sub resource right is run as a pot so for for example there's an S3 uh AWS S3",
    "start": "685360",
    "end": "692040"
  },
  {
    "text": "provider there's an ec2 provider uh those things would be they would be separate pods running in the kubernetes",
    "start": "692040",
    "end": "698320"
  },
  {
    "text": "cluster right so if we're not running a given pod for a a given set of apis then",
    "start": "698320",
    "end": "704880"
  },
  {
    "text": "there won't be crds you can see in this diagram what happens is when we deploy the AWS provider it registers those crds",
    "start": "704880",
    "end": "712000"
  },
  {
    "text": "with the kubernetes API and so once those crds are available they can be consumed by a custom resource so if",
    "start": "712000",
    "end": "718760"
  },
  {
    "text": "we're not going to use RDS for example we just don't deploy the the AWS RDS provider and we don't offer RDS",
    "start": "718760",
    "end": "727320"
  },
  {
    "text": "something that U that is an API that we expose on our kubernetes cluster there",
    "start": "727320",
    "end": "733360"
  },
  {
    "text": "are a number of providers that exist in both uh the upbound marketplace as well",
    "start": "733360",
    "end": "741120"
  },
  {
    "text": "as the open source um this was actually just announced the open source uh uh",
    "start": "741120",
    "end": "746639"
  },
  {
    "text": "GitHub registry because these things are oci images in the end so a good place to",
    "start": "746639",
    "end": "751920"
  },
  {
    "text": "find this stuff though is to go to the upbound marketplace and then of course if if you can't find something that uh",
    "start": "751920",
    "end": "758760"
  },
  {
    "text": "integrates with your API of choice you can you can author one and that that goes back to the uh The Dominoes one I",
    "start": "758760",
    "end": "766000"
  },
  {
    "text": "was talking about before right that was just a custom provider that that uh one of the folks from from upbound deployed",
    "start": "766000",
    "end": "772959"
  },
  {
    "text": "on their kuberar cluster and then integrated with the Domino's API right so if you have apis that are not covered",
    "start": "772959",
    "end": "779800"
  },
  {
    "text": "by a particular provider you can author uh uh your own custom provider and then deploy that onto your kubernetes cluster",
    "start": "779800",
    "end": "787399"
  },
  {
    "text": "so as you can see in the diagram going back to the diagram here right the AWS provider registers a bunch of a AWS crds",
    "start": "787399",
    "end": "795279"
  },
  {
    "text": "let's say in this case that S3 provider will register crds related to S3 and",
    "start": "795279",
    "end": "800440"
  },
  {
    "text": "then we would create a custom resource associated with the bucket and so once",
    "start": "800440",
    "end": "807040"
  },
  {
    "text": "we create that custom resource that is of type bucket the ads provider reads",
    "start": "807040",
    "end": "812720"
  },
  {
    "text": "the uh desired state of that custom resource communicates with the back end",
    "start": "812720",
    "end": "817800"
  },
  {
    "text": "and then creates our S3 bucket and so uh that allows us to deploy and manage our",
    "start": "817800",
    "end": "825760"
  },
  {
    "text": "Cloud resources uh through this integration with these providers now these custom",
    "start": "825760",
    "end": "831079"
  },
  {
    "text": "resources have a special name within crossplane and that is known as managed",
    "start": "831079",
    "end": "837360"
  },
  {
    "text": "resources makes sense right because crossplane is managing them and so uh",
    "start": "837360",
    "end": "842920"
  },
  {
    "text": "they're aptly named when we see a managed resource within crossplane that",
    "start": "842920",
    "end": "848079"
  },
  {
    "text": "managed resource represents some instance of an external resource whether it's a a S3 bucket Azure database gcp",
    "start": "848079",
    "end": "857839"
  },
  {
    "text": "big table kubernetes namespace open stack block storage those sorts of things because we can uh it's not just",
    "start": "857839",
    "end": "864519"
  },
  {
    "text": "you know Cloud infrastructure that we're talking about here but also kubernetes things right sort of a way of meta",
    "start": "864519",
    "end": "871759"
  },
  {
    "text": "managing kubernetes objects right because these manage resources are really kind of building blocks to much",
    "start": "871759",
    "end": "879320"
  },
  {
    "text": "larger Services they're they're considered low-level objects in crossplane right if I want to deploy",
    "start": "879320",
    "end": "886519"
  },
  {
    "text": "something useful in a lot of cases then I will need multiple managed resources",
    "start": "886519",
    "end": "892199"
  },
  {
    "text": "in our example here we have an EMR cluster so elastic map reduced cluster",
    "start": "892199",
    "end": "898040"
  },
  {
    "text": "in AWS of course that needs a VPC for networking right it's going to need S3",
    "start": "898040",
    "end": "903920"
  },
  {
    "text": "for storage for data both read reads and writes right U S3 is sort of the standin",
    "start": "903920",
    "end": "909680"
  },
  {
    "text": "for htfs in thisa in that case and so I'm going to have to deploy multiple",
    "start": "909680",
    "end": "915800"
  },
  {
    "text": "manag resources in order to create something useful and so later on we're",
    "start": "915800",
    "end": "923040"
  },
  {
    "text": "going to uh look at a demo here first but later on we're going to see how we can kind of group up",
    "start": "923040",
    "end": "929519"
  },
  {
    "text": "manage resources in a single offering um so that that useful thing whatever it",
    "start": "929519",
    "end": "936079"
  },
  {
    "text": "might be can be defined a little bit more abstractly and we can also uh put",
    "start": "936079",
    "end": "942720"
  },
  {
    "text": "some more controls in place but for now let's uh let's take a look at what",
    "start": "942720",
    "end": "947880"
  },
  {
    "text": "managed resources uh look like in a kubernetes cluster",
    "start": "947880",
    "end": "953480"
  },
  {
    "text": "so uh we're going to deploy something kind of simple here right just for kind",
    "start": "953480",
    "end": "959079"
  },
  {
    "text": "of learning purposes right so uh what's the building block of the cloud well",
    "start": "959079",
    "end": "964800"
  },
  {
    "text": "it's like a a virtual machine right so let's say we just want to deploy that",
    "start": "964800",
    "end": "971120"
  },
  {
    "text": "well depending on what cloud you Cloud you're in you're going to need a certain",
    "start": "971120",
    "end": "976440"
  },
  {
    "text": "number of of managed resources but you're always going to need",
    "start": "976440",
    "end": "981560"
  },
  {
    "text": "compute storage and networking in a AWS this is",
    "start": "981560",
    "end": "986880"
  },
  {
    "text": "VPC right uh these are subnets internet gateways so we can get traffic to the",
    "start": "986880",
    "end": "994160"
  },
  {
    "text": "the virtual machine this is a routing table you've got security groups for your firewall uh you need a key pair in",
    "start": "994160",
    "end": "1001040"
  },
  {
    "text": "order to connect to that virtual machine and then you need the actual instance itself right that's a a number of V uh",
    "start": "1001040",
    "end": "1008399"
  },
  {
    "text": "sorry a number of mrss that need to be created in order to just create just the basic building",
    "start": "1008399",
    "end": "1015920"
  },
  {
    "text": "block of the cloud which is a virtual machine right so um let's do that first",
    "start": "1015920",
    "end": "1021480"
  },
  {
    "text": "let's take a look at uh one of those things let me uh list what I have",
    "start": "1021480",
    "end": "1027360"
  },
  {
    "text": "here and you can see I have exactly that right I've got uh VPC I've got a subnet",
    "start": "1027360",
    "end": "1035480"
  },
  {
    "text": "Security Group got a route table I've got a key uh internet gateway and then I've got a key pair for the VM and then",
    "start": "1035480",
    "end": "1040880"
  },
  {
    "text": "I have a VM itself let's just uh cap the VPC as an",
    "start": "1040880",
    "end": "1046959"
  },
  {
    "text": "example right right so going past all the Mad dat and everything we look at the the",
    "start": "1047679",
    "end": "1053480"
  },
  {
    "text": "specification right these are the things that we need to specify in order to create the VPC right so we're going to",
    "start": "1053480",
    "end": "1060640"
  },
  {
    "text": "have a CER right we're going to uh enable DNS support in in this case the DNS host",
    "start": "1060640",
    "end": "1066720"
  },
  {
    "text": "names we're going to put in a particular region right and then we can even have made so tags and and a name for the",
    "start": "1066720",
    "end": "1073840"
  },
  {
    "text": "object this is just a small number of things right if you think about a uh terraform configuration",
    "start": "1073840",
    "end": "1083039"
  },
  {
    "text": "or just the AWS CLI for example right let's say I'm going to create a VPC with",
    "start": "1083039",
    "end": "1089360"
  },
  {
    "text": "AWS CLI right there's a number of flags when I go to create that VPC that I need",
    "start": "1089360",
    "end": "1095679"
  },
  {
    "text": "to specify well it just so happens that they're similar to what we're seeing here right whether or not we want a",
    "start": "1095679",
    "end": "1102480"
  },
  {
    "text": "certain cider block we have to specify what that is we have to put what region it is right that's the the minus minus",
    "start": "1102480",
    "end": "1108000"
  },
  {
    "text": "region flag it's ET so if you've used something like terraform or the a CLI or",
    "start": "1108000",
    "end": "1115840"
  },
  {
    "text": "some other tool like cloud formation or something to create a resource within",
    "start": "1115840",
    "end": "1121200"
  },
  {
    "text": "the the um Amazon Cloud this will feel familiar because the keys and values",
    "start": "1121200",
    "end": "1126400"
  },
  {
    "text": "that you're going to see within the managed resource are going to be similar",
    "start": "1126400",
    "end": "1131480"
  },
  {
    "text": "to all the things you have to specify in any other tool right we're just doing it",
    "start": "1131480",
    "end": "1137080"
  },
  {
    "text": "uh in a custom resource called VPC that has been created by the",
    "start": "1137080",
    "end": "1144159"
  },
  {
    "text": "provider so for example if I Cube CTL get",
    "start": "1144159",
    "end": "1150640"
  },
  {
    "text": "crds um it's going to be a long list but you can see uh I have",
    "start": "1150640",
    "end": "1157640"
  },
  {
    "text": "pre-employ the ec2 provider right and so there's lots of things in here just related to",
    "start": "1157640",
    "end": "1164360"
  },
  {
    "text": "VPC uh VPN gateways um",
    "start": "1164360",
    "end": "1169799"
  },
  {
    "text": "right so we've got subnets uh security groups right routes things like that",
    "start": "1169799",
    "end": "1177480"
  },
  {
    "text": "each one of these things is a uh something that I can invoke and so I'm going to invoke the uh",
    "start": "1177480",
    "end": "1185120"
  },
  {
    "text": "VPC uh crd and so that's what my kind is right so vpc's um and so let's do",
    "start": "1185120",
    "end": "1195159"
  },
  {
    "text": "that right so there we go this allows me to create a VPC I can list my",
    "start": "1197159",
    "end": "1205000"
  },
  {
    "text": "VPC now I can see here that uh it's not ready yet right this is",
    "start": "1206120",
    "end": "1213679"
  },
  {
    "text": "going to take a moment for kubernetes reconciliation to kick in right this is",
    "start": "1213679",
    "end": "1218919"
  },
  {
    "text": "an eventual consistency model and so uh my VPC won't be ready until the",
    "start": "1218919",
    "end": "1225600"
  },
  {
    "text": "provider can reach out to AWS provision the VPC and that will take more than a",
    "start": "1225600",
    "end": "1232919"
  },
  {
    "text": "moment for me to do let's uh wait for a second and now that has synced",
    "start": "1232919",
    "end": "1239120"
  },
  {
    "text": "up and we have an actual VPC ID that's associated with it which means that that",
    "start": "1239120",
    "end": "1244400"
  },
  {
    "text": "VPC now exists in the cloud it has been uh it has been reconciled right the the",
    "start": "1244400",
    "end": "1250960"
  },
  {
    "text": "state of the cloud has been reconciled with my desired state in other words creative APC and uh so now my VPC is ready to be",
    "start": "1250960",
    "end": "1260840"
  },
  {
    "text": "used but again it's just one thing it's just one piece of the larger puzzle right I have to build on top of that",
    "start": "1260840",
    "end": "1267320"
  },
  {
    "text": "with other things so now I um let's cat my Subnet right so within the subnet I've",
    "start": "1267320",
    "end": "1275159"
  },
  {
    "text": "got uh again a number of things that I need to specify uh what availability Zone that subnet is going to be in the",
    "start": "1275159",
    "end": "1283240"
  },
  {
    "text": "uh The Cider block right which is a uh",
    "start": "1283240",
    "end": "1288600"
  },
  {
    "text": "part of that sl16 right is this sl24 so it has to be a subset of that VPC uh the region now how do I",
    "start": "1288600",
    "end": "1297760"
  },
  {
    "text": "connect the subnet to the",
    "start": "1297760",
    "end": "1303679"
  },
  {
    "text": "VPC well if we look under this VPC ID selector we're using a match label so",
    "start": "1303679",
    "end": "1309000"
  },
  {
    "text": "like anything else in kubernetes that uses selectors that's what we're going to do here right we've got a",
    "start": "1309000",
    "end": "1315159"
  },
  {
    "text": "uh uh key value pair right lab. rxm slame and we've got the crossplane",
    "start": "1315159",
    "end": "1322799"
  },
  {
    "text": "webinar VPC as the value so this is going to go run a query",
    "start": "1322799",
    "end": "1330760"
  },
  {
    "text": "and find a VPC out of all my vpcs that has that label so if I go back here and",
    "start": "1330760",
    "end": "1335919"
  },
  {
    "text": "say get VPC right there's my label there's my",
    "start": "1335919",
    "end": "1344159"
  },
  {
    "text": "key value pair it will go and run that query for that key value pair and of course that this will match and so we'll",
    "start": "1344159",
    "end": "1352039"
  },
  {
    "text": "know that this subnet is associated with that VPC and create the Subnet in the",
    "start": "1352039",
    "end": "1358640"
  },
  {
    "text": "cloud in that uh in that VPC right so let's do",
    "start": "1358640",
    "end": "1366559"
  },
  {
    "text": "that all right so same thing's going to happen here if I get my vpcs or sorry my",
    "start": "1369360",
    "end": "1375159"
  },
  {
    "text": "subnets right all right so a little faster sync",
    "start": "1375159",
    "end": "1381919"
  },
  {
    "text": "there but I you know we do have to wait for that to to sync and I can move on to the next thing right what's the next",
    "start": "1381919",
    "end": "1387840"
  },
  {
    "text": "thing we would create internet gateway a route table those sorts of things right so let's let's do one more real quick",
    "start": "1387840",
    "end": "1395919"
  },
  {
    "text": "okay so let me clear my screen we'll do another one so if I cat uh for example",
    "start": "1395919",
    "end": "1401159"
  },
  {
    "text": "the uh internet gateway right so we've got uh internet",
    "start": "1401159",
    "end": "1407960"
  },
  {
    "text": "gateway that um again we're going to uh set up",
    "start": "1407960",
    "end": "1413880"
  },
  {
    "text": "in our Us West one region and again we're using that match labels to connect to the VPC uh if we",
    "start": "1413880",
    "end": "1422240"
  },
  {
    "text": "look at for example the route table then same thing here right we want",
    "start": "1422240",
    "end": "1427360"
  },
  {
    "text": "to associate it with the uh the VPC that we created before and",
    "start": "1427360",
    "end": "1434679"
  },
  {
    "text": "then also this internet gateway that we're going to going to create up here",
    "start": "1434679",
    "end": "1440520"
  },
  {
    "text": "right so let's go ahead and create those uh now it doesn't really matter",
    "start": "1440520",
    "end": "1446720"
  },
  {
    "text": "what uh order I do these in but I'm going to do them in a Gateway and Route",
    "start": "1446720",
    "end": "1454480"
  },
  {
    "text": "table and helps if I can spell uh okay so now I've got a number",
    "start": "1456799",
    "end": "1463679"
  },
  {
    "text": "of resources that uh I've created so if I want to to uh list all of them rather",
    "start": "1463679",
    "end": "1471399"
  },
  {
    "text": "than comma separating Cube c g VPC subnet Etc you can use Cube CTL get",
    "start": "1471399",
    "end": "1478399"
  },
  {
    "text": "managed now this can be kind of a dangerous command if you have a lot of managed resources obviously I'm doing a",
    "start": "1478399",
    "end": "1484960"
  },
  {
    "text": "demo here in a in a small cluster and so I don't have a ton of those but",
    "start": "1484960",
    "end": "1490279"
  },
  {
    "text": "oftentimes you want to filter this with some uh filtering but you can see that I've got my VPC my Subnet internet",
    "start": "1490279",
    "end": "1496520"
  },
  {
    "text": "gateway route table uh and I'm building my way towards uh",
    "start": "1496520",
    "end": "1504080"
  },
  {
    "text": "right uh deploying all this infrastructure so that I can get my VM",
    "start": "1504080",
    "end": "1509600"
  },
  {
    "text": "um if we list what I have left right I've got I still have to create uh the",
    "start": "1509600",
    "end": "1515559"
  },
  {
    "text": "security group I still need uh to create a key pair uh for my virtual machine and",
    "start": "1515559",
    "end": "1521799"
  },
  {
    "text": "then I can deploy my virtual machine uh but as I said it doesn't really matter what order I do these in it's a just a",
    "start": "1521799",
    "end": "1528919"
  },
  {
    "text": "um get things keep things moving I'm just going to cube CTL",
    "start": "1528919",
    "end": "1534200"
  },
  {
    "text": "apply and do everything here and it should apply all of",
    "start": "1534200",
    "end": "1543000"
  },
  {
    "text": "my uh all my EML files and of course the things that I've already deployed say unchanged because",
    "start": "1543000",
    "end": "1553039"
  },
  {
    "text": "just like any other kubernetes resource right there item potent and and won't",
    "start": "1553039",
    "end": "1560080"
  },
  {
    "text": "update or change based on my uh my my apply",
    "start": "1560080",
    "end": "1566840"
  },
  {
    "text": "command so let's do it again uh CC managed and see if I",
    "start": "1566840",
    "end": "1573520"
  },
  {
    "text": "have everything set up right so now I have everything I need I've got the",
    "start": "1573520",
    "end": "1580360"
  },
  {
    "text": "subnet the key pair uh the route table Etc and I have a virtual machine that's",
    "start": "1580360",
    "end": "1585679"
  },
  {
    "text": "deployed so most of the stuff was networking right the compute is really handled by",
    "start": "1585679",
    "end": "1590720"
  },
  {
    "text": "the instance uh just turns out that also the instance uh in AWS comes with a",
    "start": "1590720",
    "end": "1598159"
  },
  {
    "text": "default amount of dis so if I cap the VM real quick",
    "start": "1598159",
    "end": "1604760"
  },
  {
    "text": "uh you can see that um there are some things specified in here for example",
    "start": "1604760",
    "end": "1609799"
  },
  {
    "text": "I've got the Ami that I'm going to be using for uh this is like the auntu 2204 Ami",
    "start": "1609799",
    "end": "1617559"
  },
  {
    "text": "got the side I've got the key pair that I uh created which of course is this guy",
    "start": "1617559",
    "end": "1624000"
  },
  {
    "text": "here and then I've got associated with the subnet so it's got that match label for the subnet and a lot of the other",
    "start": "1624000",
    "end": "1630919"
  },
  {
    "text": "things are just defaults so the disc is going to have it's just like an 8 gig gp3 dis right but of course I can",
    "start": "1630919",
    "end": "1636840"
  },
  {
    "text": "customize that if I want to so how do I reach my uh VM from here right the whole point",
    "start": "1636840",
    "end": "1645240"
  },
  {
    "text": "is to be able to reach that virtual machine or use it right so I've got a command here that is",
    "start": "1645240",
    "end": "1653039"
  },
  {
    "text": "um uh SSH all right so I previous previously",
    "start": "1653039",
    "end": "1658520"
  },
  {
    "text": "created this key pair and I of course I used it as part of the crossplaying webinar key pair so I'm just going to",
    "start": "1658520",
    "end": "1663919"
  },
  {
    "text": "get the instance and I'm going to get the public IP matter of fact let's run this",
    "start": "1663919",
    "end": "1669720"
  },
  {
    "text": "Standalone and you can see that part of the status of an",
    "start": "1669720",
    "end": "1675320"
  },
  {
    "text": "object um just like anything else in kuber is details about it that come",
    "start": "1675320",
    "end": "1682360"
  },
  {
    "text": "from uh what's being reported right what's being synced and so if I Traverse",
    "start": "1682360",
    "end": "1689000"
  },
  {
    "text": "the status field look at the provider details specifically the public IP I have a public IP here and so now I'll",
    "start": "1689000",
    "end": "1696519"
  },
  {
    "text": "rerun that command um uh sorry with",
    "start": "1696519",
    "end": "1702519"
  },
  {
    "text": "my uh SSH command so I'm going to SSH using that identity file and be the user",
    "start": "1702519",
    "end": "1708600"
  },
  {
    "text": "Ubuntu it's going to ask me add my uh add it to the list of known",
    "start": "1708600",
    "end": "1714919"
  },
  {
    "text": "hosts and we should connect right now what you notice is that the old uh the",
    "start": "1714919",
    "end": "1722039"
  },
  {
    "text": "prompts look very similar right this isn't the original control plane machine that I was using you can see that the",
    "start": "1722039",
    "end": "1728039"
  },
  {
    "text": "host name of the new machine is different so it's 172 31137 so different machine right if I",
    "start": "1728039",
    "end": "1734919"
  },
  {
    "text": "did Cube CTL on here yeah uh pod for",
    "start": "1734919",
    "end": "1739960"
  },
  {
    "text": "example CBC is not installed in this it's a completely different machine right so now I can go about using my",
    "start": "1739960",
    "end": "1748440"
  },
  {
    "text": "virtual machine right all right",
    "start": "1748440",
    "end": "1754360"
  },
  {
    "text": "so that allows me to deploy a bunch of",
    "start": "1755240",
    "end": "1763240"
  },
  {
    "text": "managed uh a bunch of managed resources uh uh that essentially are all built up",
    "start": "1764480",
    "end": "1771159"
  },
  {
    "text": "to allow me to deploy a virtual machine you can take these same Concepts and",
    "start": "1771159",
    "end": "1777039"
  },
  {
    "text": "apply them to any other services in the cloud right what are all the building blocks what all the things that you need",
    "start": "1777039",
    "end": "1784200"
  },
  {
    "text": "in order to deploy a service right if it's uh uh a relational database right",
    "start": "1784200",
    "end": "1791039"
  },
  {
    "text": "you need a network right you need storage you're going to have all these options that you're going to have to specify um if it's",
    "start": "1791039",
    "end": "1799080"
  },
  {
    "text": "uh some sort of uh machine learning platform uh if it's a kubernetes cluster",
    "start": "1799080",
    "end": "1806360"
  },
  {
    "text": "you can deploy uh a gke cluster or an eks",
    "start": "1806360",
    "end": "1811440"
  },
  {
    "text": "cluster from crossplane right what are all the things there's a lot more things",
    "start": "1811440",
    "end": "1816840"
  },
  {
    "text": "for something like that right and we'll have to specify all them and Link them all together and then we've got a uh",
    "start": "1816840",
    "end": "1823399"
  },
  {
    "text": "full uh set of resources we can use in the cloud deployed from the kubernetes",
    "start": "1823399",
    "end": "1828679"
  },
  {
    "text": "cluster now the problem with manage resources is that they're very provider",
    "start": "1828679",
    "end": "1835000"
  },
  {
    "text": "specific right I had to specify things like the region I had to do it in that the specific AWS style right I had to",
    "start": "1835000",
    "end": "1843480"
  },
  {
    "text": "know things like the Amis uh or the Ami for the VM right those specific things I have to",
    "start": "1843480",
    "end": "1851080"
  },
  {
    "text": "have a lot of knowledge about ads to to do them right so what if I wanted to and",
    "start": "1851080",
    "end": "1858519"
  },
  {
    "text": "of course uh another problem is that uh they're all disperate things right like",
    "start": "1858519",
    "end": "1863880"
  },
  {
    "text": "how do I know what I need right uh I know that I need a a subnet and a VPC",
    "start": "1863880",
    "end": "1869639"
  },
  {
    "text": "and internet gateway and Route tables and everything because I know AWS things but what if I don't then there's a",
    "start": "1869639",
    "end": "1876679"
  },
  {
    "text": "there's a learning curve and then there's also no way to really uh prevent somebody from using uh whatever settings",
    "start": "1876679",
    "end": "1884240"
  },
  {
    "text": "they want I just created a security group with whatever whatever rules I wanted right the there's no way for us",
    "start": "1884240",
    "end": "1890279"
  },
  {
    "text": "to inject any sort of opinion in there so it's really up to the platform uh",
    "start": "1890279",
    "end": "1896440"
  },
  {
    "text": "Team to uh think about what they want to offer and then understand how to create",
    "start": "1896440",
    "end": "1903440"
  },
  {
    "text": "the uh manag resources associated with that service offering but we probably",
    "start": "1903440",
    "end": "1910600"
  },
  {
    "text": "want to offer it to our users as something more whole or holistic and",
    "start": "1910600",
    "end": "1916679"
  },
  {
    "text": "also something that can be uh more opinionated and that's really where crossplay compositions come in",
    "start": "1916679",
    "end": "1923720"
  },
  {
    "text": "right we can think of a a composition as a template for a collection of managed",
    "start": "1923720",
    "end": "1929159"
  },
  {
    "text": "resources that can be put together as a",
    "start": "1929159",
    "end": "1934200"
  },
  {
    "text": "solution or Services service offering so that uh multiple managed resources can",
    "start": "1934200",
    "end": "1941159"
  },
  {
    "text": "be deployed and managed together at the same time right as we saw a VM requires",
    "start": "1941159",
    "end": "1946799"
  },
  {
    "text": "a storage resource requires a network resource but those are all desperate things in terms of managed resources but",
    "start": "1946799",
    "end": "1954679"
  },
  {
    "text": "all three of those things can be defined in a single composition so that we can deploy those things together in our",
    "start": "1954679",
    "end": "1961039"
  },
  {
    "text": "example here on this slide uh we have two uh such offerings that are kind of",
    "start": "1961039",
    "end": "1966519"
  },
  {
    "text": "the equivalent right in two different clouds right so we've got a AWS",
    "start": "1966519",
    "end": "1972000"
  },
  {
    "text": "service that represents kubernetes and then we have a gcp set of",
    "start": "1972000",
    "end": "1978639"
  },
  {
    "text": "uh managed resources that represent a a kubet service using gke right so uh",
    "start": "1978639",
    "end": "1984320"
  },
  {
    "text": "we've got eks uh ECR we've got the security groups",
    "start": "1984320",
    "end": "1989720"
  },
  {
    "text": "the firewall Etc and AWS you've got gke you've got the uh GCR for the registry",
    "start": "1989720",
    "end": "1996519"
  },
  {
    "text": "you've got the VPC settings the uh the um firewall uh for G gcp and then you've",
    "start": "1996519",
    "end": "2003720"
  },
  {
    "text": "got the like the IM things that you need for both gcp and or AWS and so if we put",
    "start": "2003720",
    "end": "2009919"
  },
  {
    "text": "all those things together we can then create a more cohesive set of managed",
    "start": "2009919",
    "end": "2016840"
  },
  {
    "text": "resources that represent a kubernetes service right and you'll notice one",
    "start": "2016840",
    "end": "2022000"
  },
  {
    "text": "thing right away is we've got two kuet Services they're running in different",
    "start": "2022000",
    "end": "2028279"
  },
  {
    "text": "clouds and but they're essentially the equivalent right because if a user just",
    "start": "2028279",
    "end": "2033360"
  },
  {
    "text": "wants to deploy a kubernetes they may want it in Google Cloud they may want it in Amazon they may want an Azure and we can create a uh",
    "start": "2033360",
    "end": "2041919"
  },
  {
    "text": "given set of managed resources that represent that type of kubernetes service uh in a given Cloud right by",
    "start": "2041919",
    "end": "2049480"
  },
  {
    "text": "using all the the appropriate mrss these also allow us to enforce standards uh as",
    "start": "2049480",
    "end": "2054839"
  },
  {
    "text": "well as certain settings across deployments where we can Define fixed or",
    "start": "2054839",
    "end": "2060440"
  },
  {
    "text": "default settings for each one of the managed resources inside that composition and uh Define field felds",
    "start": "2060440",
    "end": "2068638"
  },
  {
    "text": "that users can customize and change this is where the opinion comes in right so example here is a VM that has a fixed",
    "start": "2068639",
    "end": "2075158"
  },
  {
    "text": "compute a network but a a userdefined storage size right so we can within our",
    "start": "2075159",
    "end": "2083000"
  },
  {
    "text": "compositions set defaults set policy-based opinions within them but",
    "start": "2083000",
    "end": "2090000"
  },
  {
    "text": "then have enough flexibility for users to deploy let's say a virtual machine of",
    "start": "2090000",
    "end": "2095679"
  },
  {
    "text": "a certain size or a kubernetes cluster of a certain size or a certain type that is part of that service offering now a",
    "start": "2095679",
    "end": "2102880"
  },
  {
    "text": "composition of itself in in and of itself does not create any managed resources this is just a template right",
    "start": "2102880",
    "end": "2109960"
  },
  {
    "text": "you can think of a composition kind of like a Helm chart right so Helm chart on",
    "start": "2109960",
    "end": "2115200"
  },
  {
    "text": "its own just defines a bunch of resources in the case of the helm chart it's just you know a deployment a",
    "start": "2115200",
    "end": "2122040"
  },
  {
    "text": "service maybe a service account and network policy and stuff like that right but unless you help install it there's",
    "start": "2122040",
    "end": "2128960"
  },
  {
    "text": "nothing running on the cluster a crossplane composition is the same thing it's just a template now in this case we",
    "start": "2128960",
    "end": "2134839"
  },
  {
    "text": "do register the composition as a crossplane resource but it doesn't mean",
    "start": "2134839",
    "end": "2140040"
  },
  {
    "text": "it when you create the composition it deploys managed resources no it's just a way for us to uh create a consumable",
    "start": "2140040",
    "end": "2146160"
  },
  {
    "text": "template for users to deploy and we're going to look at how we deploy it coming",
    "start": "2146160",
    "end": "2153319"
  },
  {
    "text": "up here shortly now at the core of compositions are composition functions uh much like",
    "start": "2153319",
    "end": "2161480"
  },
  {
    "text": "providers composition functions are pods that will run in kubernetes and we'll",
    "start": "2161480",
    "end": "2167800"
  },
  {
    "text": "need to install them as well they're essentially grp Ser grpc servers that",
    "start": "2167800",
    "end": "2173280"
  },
  {
    "text": "are called by the crossplane core pods to implement resource generation right",
    "start": "2173280",
    "end": "2178760"
  },
  {
    "text": "render templates as well as patch field values because if we're going to create",
    "start": "2178760",
    "end": "2184800"
  },
  {
    "text": "resources within a a given in Cloud we're probably going to want to",
    "start": "2184800",
    "end": "2189839"
  },
  {
    "text": "customize them in some ways so we just talked about like some things are going to be default some things going to allow users to uh Supply values for and so",
    "start": "2189839",
    "end": "2197800"
  },
  {
    "text": "composition function can do all those things the most widely used one arguably",
    "start": "2197800",
    "end": "2202920"
  },
  {
    "text": "is the function patch and transform this was a core functionality in crossplane",
    "start": "2202920",
    "end": "2209160"
  },
  {
    "text": "until crossplane kind of decoupled it from the core of crossplane and allowed",
    "start": "2209160",
    "end": "2215160"
  },
  {
    "text": "uh functions to be used within composition pipelines and so the patch and transform",
    "start": "2215160",
    "end": "2221319"
  },
  {
    "text": "function is a way for us to provide patches right so we can take a value for one resource and then apply it to",
    "start": "2221319",
    "end": "2228720"
  },
  {
    "text": "another this can be uh an existing manage resource right if we're",
    "start": "2228720",
    "end": "2234000"
  },
  {
    "text": "retrieving values from somewhere else uh often times it's a a value from a a user",
    "start": "2234000",
    "end": "2239800"
  },
  {
    "text": "right an input uh variable so to speak from a user so you can think of it as a",
    "start": "2239800",
    "end": "2245240"
  },
  {
    "text": "way for us to very much like a values file in Helm hydrates variables within",
    "start": "2245240",
    "end": "2251839"
  },
  {
    "text": "Helm charts right we're going to take that same input in a different way of course but uh take that same input and",
    "start": "2251839",
    "end": "2258200"
  },
  {
    "text": "then patch it onto the existing default of what is set in the composition right",
    "start": "2258200",
    "end": "2264440"
  },
  {
    "text": "so if the composition is made up of a bunch of managed resources like a kues",
    "start": "2264440",
    "end": "2269839"
  },
  {
    "text": "cluster of X number of nodes in a node group right maybe X is actually held by",
    "start": "2269839",
    "end": "2276640"
  },
  {
    "text": "three nodes but the user wants to deploy 10 nodes in their in their node group",
    "start": "2276640",
    "end": "2282440"
  },
  {
    "text": "right we're just going to patch over the number three with 10 from the user input or in this case on the left hand side of",
    "start": "2282440",
    "end": "2288839"
  },
  {
    "text": "the example the region the other um I",
    "start": "2288839",
    "end": "2293880"
  },
  {
    "text": "don't want to say function but the other thing that that the function patch and transform does is allow us to modify",
    "start": "2293880",
    "end": "2300720"
  },
  {
    "text": "values before applying a patch this is where abstraction comes in because we can take input from a user that's gener",
    "start": "2300720",
    "end": "2307480"
  },
  {
    "text": "generic right so on the right side of this example we see size equals large we can transform that into something that's",
    "start": "2307480",
    "end": "2314319"
  },
  {
    "text": "meaningful to the cloud that way we can abstract away the low level or the backend details of a given cloud",
    "start": "2314319",
    "end": "2322560"
  },
  {
    "text": "provider or API into something more generic that the the the user doesn't",
    "start": "2322560",
    "end": "2327760"
  },
  {
    "text": "have to learn right this goes back to one of the kubernetes tenants which is",
    "start": "2327760",
    "end": "2333520"
  },
  {
    "text": "the platform should always do the heavy lifting right should always be easy of often times it's supposed to be easy for",
    "start": "2333520",
    "end": "2338680"
  },
  {
    "text": "the application but in this case it's easy for the user right to supply values in a generic way will transform them at",
    "start": "2338680",
    "end": "2346400"
  },
  {
    "text": "the on the platform side into something that's meaningful to the low-level manag resources as they get deployed and or",
    "start": "2346400",
    "end": "2354040"
  },
  {
    "text": "updated within uh the provider of choice the cloud provider of choice and so patch and transform is is one of the",
    "start": "2354040",
    "end": "2361040"
  },
  {
    "text": "ways that we do that now there are other composition functions that exist you can use go templates uh there's a Q",
    "start": "2361040",
    "end": "2368000"
  },
  {
    "text": "composition function which means that if you have a choice in in terms of like",
    "start": "2368000",
    "end": "2373400"
  },
  {
    "text": "your DSL uh and you want to use go templates you want to use Q you want to use something else you can because this",
    "start": "2373400",
    "end": "2380599"
  },
  {
    "text": "now is pluggable right uh whereas before when patch and transform was like core",
    "start": "2380599",
    "end": "2387319"
  },
  {
    "text": "to uh crossplane it wasn't pluggable now it's very flexible and uh you can plug",
    "start": "2387319",
    "end": "2393560"
  },
  {
    "text": "in other engines if you want uh but patch and the function patch and",
    "start": "2393560",
    "end": "2398680"
  },
  {
    "text": "transform remains a very powerful way to do things um and so that this sort of",
    "start": "2398680",
    "end": "2405520"
  },
  {
    "text": "begs the question well how do we take input from users right because I talked about the values. yo what's the",
    "start": "2405520",
    "end": "2411680"
  },
  {
    "text": "equivalent there well this is what's known as a claim so the primary way that",
    "start": "2411680",
    "end": "2417520"
  },
  {
    "text": "developers or end users interact with crossplane is through What's called the claim claims are an abstract way of",
    "start": "2417520",
    "end": "2425720"
  },
  {
    "text": "invoking a composition made up of manage resources or or go templates or something like that that",
    "start": "2425720",
    "end": "2432359"
  },
  {
    "text": "will deploy resources within a cloud right so maybe uh if I if my composition",
    "start": "2432359",
    "end": "2438280"
  },
  {
    "text": "is for Dynamo DB it might just be the table name the hash keys and the global index name and that's it so we want to",
    "start": "2438280",
    "end": "2446880"
  },
  {
    "text": "create a way for users to give us potentially generic input and then",
    "start": "2446880",
    "end": "2453400"
  },
  {
    "text": "convert that and write patch and transform lets us do that how we do that is through what's called a composite",
    "start": "2453400",
    "end": "2459079"
  },
  {
    "text": "resource definition this is very similar to a crd but the composite resource definition is a crd that as a platform",
    "start": "2459079",
    "end": "2465520"
  },
  {
    "text": "engineer we Define and then we Define what the input variables are it's it's",
    "start": "2465520",
    "end": "2471440"
  },
  {
    "text": "kind of like um the schema in a Helm chart right we have this the actual schema. Json file and a lot of Helm",
    "start": "2471440",
    "end": "2478240"
  },
  {
    "text": "charts that Define what types and things that will be accepted as values coming",
    "start": "2478240",
    "end": "2484720"
  },
  {
    "text": "from the values diam well this is the same thing or really like any schema like any other kubernetes standard crd",
    "start": "2484720",
    "end": "2491680"
  },
  {
    "text": "but the idea is that this is our opportunity when we Define the composite resource definition we're defining apis",
    "start": "2491680",
    "end": "2498560"
  },
  {
    "text": "and so we can Define what values we will accept this is where we Define those",
    "start": "2498560",
    "end": "2504400"
  },
  {
    "text": "abstractions right in our example here right the large can be t3a large in a",
    "start": "2504400",
    "end": "2509680"
  },
  {
    "text": "AWS or c4a standard two in the Google Cloud especially if we are doing",
    "start": "2509680",
    "end": "2515839"
  },
  {
    "text": "multicloud where we're going going to want all to allow users to Define generic uh details about the thing that",
    "start": "2515839",
    "end": "2524079"
  },
  {
    "text": "they're deploying and then convert those into cloud cloud provider specific",
    "start": "2524079",
    "end": "2530440"
  },
  {
    "text": "requirements under the covers right we never want to expose that to the users because we want to just allow them to to",
    "start": "2530440",
    "end": "2536720"
  },
  {
    "text": "provide something generic and so that claim then really essentially abstractly",
    "start": "2536720",
    "end": "2542520"
  },
  {
    "text": "represents a set of managed resources deployed from a composition template PL",
    "start": "2542520",
    "end": "2548200"
  },
  {
    "text": "as essentially a single abstract kuat's object and it exists in the user's name space so one of the things that uh",
    "start": "2548200",
    "end": "2554760"
  },
  {
    "text": "crossplane does is um compositions the manage resources those types of things",
    "start": "2554760",
    "end": "2560359"
  },
  {
    "text": "are not specific to the user's namespace just the claim is right so the user is",
    "start": "2560359",
    "end": "2566760"
  },
  {
    "text": "really abstracted away from all these lowlevel details because that's the only thing they're going to see is that claim",
    "start": "2566760",
    "end": "2572240"
  },
  {
    "text": "and so all the status information that gets reported from these lowlevel things",
    "start": "2572240",
    "end": "2577440"
  },
  {
    "text": "like manag resources Etc makes its way up to the claim and gives that claim uh",
    "start": "2577440",
    "end": "2583359"
  },
  {
    "text": "status information like whether or not the the thing that we want is ready",
    "start": "2583359",
    "end": "2588520"
  },
  {
    "text": "right if it's done being deployed now one last piece of the puzzle includes",
    "start": "2588520",
    "end": "2594839"
  },
  {
    "text": "what's called composite resources whenever a user creates a claim that",
    "start": "2594839",
    "end": "2600160"
  },
  {
    "text": "will create a composite resource much like a claim composite resource",
    "start": "2600160",
    "end": "2605760"
  },
  {
    "text": "represents a set of man manag resources as a single kubernetes object and so",
    "start": "2605760",
    "end": "2611119"
  },
  {
    "text": "this is again to draw that parallel much like multiple Helm releases use the same Helm chart multiple unique composite",
    "start": "2611119",
    "end": "2618559"
  },
  {
    "text": "resources can use the same composition and so the composite resource uh resources fill out the template create",
    "start": "2618559",
    "end": "2625559"
  },
  {
    "text": "the manage resources customized by the user in the backend Cloud you'll see these things TI together right the user",
    "start": "2625559",
    "end": "2632119"
  },
  {
    "text": "will create the claim the claim is bound by the API to find Ed by the xrd right",
    "start": "2632119",
    "end": "2639319"
  },
  {
    "text": "all the input variables whether they're required whether are defaults that sort of thing we will then create a composite",
    "start": "2639319",
    "end": "2644680"
  },
  {
    "text": "resources that represents essentially all of the hydrated values from the claim and then that gets deployed as",
    "start": "2644680",
    "end": "2652720"
  },
  {
    "text": "managed resources and those managed resources then get synced with the backend cloud apis and we have whatever",
    "start": "2652720",
    "end": "2660119"
  },
  {
    "text": "the thing is that we're deploying in this case either a eks cluster when all",
    "start": "2660119",
    "end": "2665160"
  },
  {
    "text": "the things associated with it or or a gke cluster and all the things associated with it in the Google cloud",
    "start": "2665160",
    "end": "2671599"
  },
  {
    "text": "and so from the user perspective this is very simple because all they have to know is what details to specify in their",
    "start": "2671599",
    "end": "2679520"
  },
  {
    "text": "claim which are going to be generic like large you know maybe a generic region or whatever it might be and then uh again",
    "start": "2679520",
    "end": "2686839"
  },
  {
    "text": "the platform does the heavy lifting of of Translating that into the cloud",
    "start": "2686839",
    "end": "2692079"
  },
  {
    "text": "provider specific things that need to be specified when those resources are deployed in the cloud okay so let's take",
    "start": "2692079",
    "end": "2699800"
  },
  {
    "text": "a look at uh doing that right the the act of creating all the managed resources before was uh kind of",
    "start": "2699800",
    "end": "2706319"
  },
  {
    "text": "heavyweight and disconnected but if we create a composition and the associated",
    "start": "2706319",
    "end": "2713599"
  },
  {
    "text": "API for it then we can deploy a set of managed resources just with a simp very",
    "start": "2713599",
    "end": "2719480"
  },
  {
    "text": "simple claim object the first thing we need to do in order to deploy our",
    "start": "2719480",
    "end": "2725960"
  },
  {
    "text": "composition is is we need to deploy the function so if I take a look at the",
    "start": "2725960",
    "end": "2731079"
  },
  {
    "text": "function here uh this just comes from the uh up on Marketplace this is the",
    "start": "2731079",
    "end": "2736119"
  },
  {
    "text": "function patch and transform uh that gets deployed as an oci image really all",
    "start": "2736119",
    "end": "2741200"
  },
  {
    "text": "I need to do is uh Cube CTL apply minus F uh function.",
    "start": "2741200",
    "end": "2748040"
  },
  {
    "text": "yaml that will deploy a pod and uh that pod will allow me to allow me to",
    "start": "2748040",
    "end": "2755720"
  },
  {
    "text": "essentially what happens is it's going to the crossplane core CU I'm uh going",
    "start": "2755720",
    "end": "2760920"
  },
  {
    "text": "to call a patch in my composition it's going to call this pod and say uh",
    "start": "2760920",
    "end": "2766400"
  },
  {
    "text": "perform the patch that I need you to do and then uh the function patch and",
    "start": "2766400",
    "end": "2771920"
  },
  {
    "text": "transform will do its thing uh and send back the uh modified manage resources",
    "start": "2771920",
    "end": "2777440"
  },
  {
    "text": "with the with the patches and then uh they can be deployed via the provider so let's look at that composition",
    "start": "2777440",
    "end": "2786000"
  },
  {
    "text": "uh and I'll scroll up to the top here uh so uh it's really just a big list of uh",
    "start": "2787559",
    "end": "2793319"
  },
  {
    "text": "resources right so the the function it's referring to is the function patch and transform of course that's the one we're",
    "start": "2793319",
    "end": "2799559"
  },
  {
    "text": "going to be using now most of these are just uh static values but remember we",
    "start": "2799559",
    "end": "2804680"
  },
  {
    "text": "created a bunch of managed resources before Standalone right so now we have a",
    "start": "2804680",
    "end": "2811160"
  },
  {
    "text": "VPC we've got the subnet we've got the uh internet gateway here we've got the",
    "start": "2811160",
    "end": "2816960"
  },
  {
    "text": "route table right everything else we used before Security Group uh the key",
    "start": "2816960",
    "end": "2823200"
  },
  {
    "text": "pair and then of course the instance right now in this case the",
    "start": "2823200",
    "end": "2829160"
  },
  {
    "text": "instance has an extra section and this is the patches section this is what we're going to use the patch and",
    "start": "2829160",
    "end": "2835280"
  },
  {
    "text": "transform function for so we're going to take input uh as this say from the",
    "start": "2835280",
    "end": "2841599"
  },
  {
    "text": "composite resource we basically upstream and we're going to patch it Downstream to the manag resources uh the manage",
    "start": "2841599",
    "end": "2848760"
  },
  {
    "text": "resource basically the instance right so you can see how it gets mapped spec. size which is going to be the input that",
    "start": "2848760",
    "end": "2854880"
  },
  {
    "text": "we're taking from the composite is going to be patched to spec for provider",
    "start": "2854880",
    "end": "2861000"
  },
  {
    "text": "instance type now this is a individual uh patch that we're doing on",
    "start": "2861000",
    "end": "2867319"
  },
  {
    "text": "a single object right It's associated with this instance object you can also do patches that are a little bit more",
    "start": "2867319",
    "end": "2874960"
  },
  {
    "text": "Global uh we're not going to cover that that here right so spec uh for provider",
    "start": "2874960",
    "end": "2880760"
  },
  {
    "text": "instance type right so uh spec for provider instance type right so our",
    "start": "2880760",
    "end": "2887280"
  },
  {
    "text": "default is t3a nano and so we want to be able to replace that now in this case we're also",
    "start": "2887280",
    "end": "2893920"
  },
  {
    "text": "going to use a transform as part of this patch because we don't want users to",
    "start": "2893920",
    "end": "2899200"
  },
  {
    "text": "have to specify the a AWS specific instance type we don't want them to have",
    "start": "2899200",
    "end": "2904599"
  },
  {
    "text": "to know those thing that thing right uh we probably would you know abstract",
    "start": "2904599",
    "end": "2910359"
  },
  {
    "text": "away as much of the ads specific things as we could right this is just an",
    "start": "2910359",
    "end": "2915680"
  },
  {
    "text": "example of one thing so the transform is going to take an input uh of small medium or large and",
    "start": "2915680",
    "end": "2923800"
  },
  {
    "text": "it's going to convert that to Nano micro or small right I'm using small sizes just so we don't run up our AWS bill",
    "start": "2923800",
    "end": "2930520"
  },
  {
    "text": "here but you can see the you can get the idea right a user can say large and then get a a different instance than the",
    "start": "2930520",
    "end": "2936359"
  },
  {
    "text": "default in order to allow a user to pass this in we need to define a schema that they can",
    "start": "2936359",
    "end": "2942880"
  },
  {
    "text": "do that with and so if I C the xrd uh this is where we Define our apis",
    "start": "2942880",
    "end": "2949599"
  },
  {
    "text": "so the composite resource is going to have the kind of VM and the claim will",
    "start": "2949599",
    "end": "2956160"
  },
  {
    "text": "use the uh VM claim kind uh and you'll see the claim here in a moment and uh we",
    "start": "2956160",
    "end": "2963440"
  },
  {
    "text": "have a very simple schema here that has a single value called size right so again we're taking in spec. size from",
    "start": "2963440",
    "end": "2970599"
  },
  {
    "text": "the claim right in our composition that's what we defined up here right was spec.",
    "start": "2970599",
    "end": "2976440"
  },
  {
    "text": "size and so that is going to default to the small value if a user doesn't",
    "start": "2976440",
    "end": "2982440"
  },
  {
    "text": "provide any input but uh we're only going to accept the three values right",
    "start": "2982440",
    "end": "2987680"
  },
  {
    "text": "it's going to be in an enumerated list so small medium or large we can't just put in blah whatever and it will work",
    "start": "2987680",
    "end": "2995520"
  },
  {
    "text": "right because it has to be mapped up here to those Maps right that that set of M you can do like Rex maps and stuff",
    "start": "2995520",
    "end": "3002200"
  },
  {
    "text": "like that this is just a you know simple string match uh right so now we're allowing the",
    "start": "3002200",
    "end": "3009480"
  },
  {
    "text": "user to input a a parameter called size and then give us one of three values uh",
    "start": "3009480",
    "end": "3015559"
  },
  {
    "text": "in their claim right defined in our uh API schema so let's look at the",
    "start": "3015559",
    "end": "3023160"
  },
  {
    "text": "claim uh and it is very simple right it's got spec. size and we're going to set that",
    "start": "3023160",
    "end": "3029920"
  },
  {
    "text": "to medium just so it's not the default right our default should be a nano and",
    "start": "3029920",
    "end": "3035559"
  },
  {
    "text": "our uh right our Nano but our medium is going to be micro right so we'll deploy",
    "start": "3035559",
    "end": "3040880"
  },
  {
    "text": "a micro instead of a nano and then this other part this comp comp composition selector uses a match label set to",
    "start": "3040880",
    "end": "3048960"
  },
  {
    "text": "provider AWS this is a way that users can differentiate",
    "start": "3048960",
    "end": "3054760"
  },
  {
    "text": "between uh the different composition itions right so uh let's say I had an",
    "start": "3054760",
    "end": "3060359"
  },
  {
    "text": "AWS VM or I had a Google Cloud one I had an Azure one I can put a label and if I",
    "start": "3060359",
    "end": "3068720"
  },
  {
    "text": "just do head on my composition uh you can see that there's a label here that's set to provider AWS",
    "start": "3068720",
    "end": "3075680"
  },
  {
    "text": "right so this gives the user choice if they're going to deploy their VM in AWS they would use provider AWS if it's gcp",
    "start": "3075680",
    "end": "3081839"
  },
  {
    "text": "we could say provider gcp and that composition Azure and the Azure composition and that allows us to uh",
    "start": "3081839",
    "end": "3088559"
  },
  {
    "text": "give the user the choice of you know which Cloud they're going to deploy to right we just do that through a simple",
    "start": "3088559",
    "end": "3094960"
  },
  {
    "text": "label selector right so we've got the function deployed uh reminder on what what files",
    "start": "3094960",
    "end": "3101760"
  },
  {
    "text": "we have here uh the next thing we'll do is go ahead and uh",
    "start": "3101760",
    "end": "3107280"
  },
  {
    "text": "deploy the xrd the uh custom API that",
    "start": "3107280",
    "end": "3112839"
  },
  {
    "text": "we're going to deploy right so now if we",
    "start": "3112839",
    "end": "3118520"
  },
  {
    "text": "list our uh let's just do crds I guess uh grap",
    "start": "3118599",
    "end": "3124040"
  },
  {
    "text": "for VM uh",
    "start": "3124040",
    "end": "3130119"
  },
  {
    "text": "coup crds oh get helps if I do get uh right so there's our two apis VM",
    "start": "3130119",
    "end": "3137440"
  },
  {
    "text": "claims and VMS and uh right now I have apisi that",
    "start": "3137440",
    "end": "3142760"
  },
  {
    "text": "have registered uh I can uh list my xrds as well Cube CTL get",
    "start": "3142760",
    "end": "3150599"
  },
  {
    "text": "xrd and you can see that the API has been established and it's offered which means that uh I'm ready to go right it",
    "start": "3150599",
    "end": "3158680"
  },
  {
    "text": "takes it may take a minute for a custom resource to register itself with kubernetes API so in this case uh it is",
    "start": "3158680",
    "end": "3167400"
  },
  {
    "text": "now ready to go right so next step would be to create the",
    "start": "3167400",
    "end": "3174880"
  },
  {
    "text": "composition right so my comp composition is now applied again I",
    "start": "3174880",
    "end": "3180040"
  },
  {
    "text": "can I can uh list that composition and",
    "start": "3180040",
    "end": "3185079"
  },
  {
    "text": "it is linked to my vm's uh",
    "start": "3185079",
    "end": "3191240"
  },
  {
    "text": "API right so my API version is the VM kind and the API version is example.com",
    "start": "3191240",
    "end": "3197839"
  },
  {
    "text": "V1 alpha1 which is uh what we've offered right via our example.com uh",
    "start": "3197839",
    "end": "3205240"
  },
  {
    "text": "API and so now we're ready to go right this is all done by the platform team right we set all this up ahead of time",
    "start": "3205240",
    "end": "3212240"
  },
  {
    "text": "and now we've given this service offering to our users and so all I have to do from the",
    "start": "3212240",
    "end": "3219440"
  },
  {
    "text": "user side let's say was apply my",
    "start": "3219440",
    "end": "3223558"
  },
  {
    "text": "claim all right so now my claim is applied uh I've specified a virtual",
    "start": "3227480",
    "end": "3233640"
  },
  {
    "text": "machine that I want to deploy in the AWS Cloud I want it to to be the medium size and that's all I care about right I just",
    "start": "3233640",
    "end": "3239960"
  },
  {
    "text": "want a VM I don't I don't care about all the nitty-gritty details uh so if",
    "start": "3239960",
    "end": "3247480"
  },
  {
    "text": "I oops VM",
    "start": "3247920",
    "end": "3252520"
  },
  {
    "text": "claim right so all right uh you can see that uh it's",
    "start": "3253599",
    "end": "3259880"
  },
  {
    "text": "synced but it's not ready which means that all the managed resources that deploy with my composition uh are not",
    "start": "3259880",
    "end": "3267200"
  },
  {
    "text": "yet deployed yet now from the user perspective this is all I can see right from the backend perspective from like",
    "start": "3267200",
    "end": "3272799"
  },
  {
    "text": "the platform perspective if I have the permissions normally a normal user would not uh I could use cctl G",
    "start": "3272799",
    "end": "3283359"
  },
  {
    "text": "managed and see those things being deployed at the low level um what we",
    "start": "3283400",
    "end": "3289799"
  },
  {
    "text": "want is that the uh all the status information that's being",
    "start": "3289799",
    "end": "3296880"
  },
  {
    "text": "uh collected for all these managed resources is to surface its way all the",
    "start": "3296880",
    "end": "3301960"
  },
  {
    "text": "way up to the claim so if I let's clear",
    "start": "3301960",
    "end": "3308480"
  },
  {
    "text": "this right so in this case I've got events uh that",
    "start": "3316680",
    "end": "3321760"
  },
  {
    "text": "say uh whether or not the thing is ready right I've got lowlevel status conditions",
    "start": "3321760",
    "end": "3327280"
  },
  {
    "text": "uh things like if it's synced if it's ready and any sort of events uh",
    "start": "3327280",
    "end": "3333000"
  },
  {
    "text": "associated with it being ready you could see in the events that it took a while right it was uh 94 seconds where we were",
    "start": "3333000",
    "end": "3340720"
  },
  {
    "text": "waiting for the composite resource to become ready um and eventually it was so or",
    "start": "3340720",
    "end": "3348920"
  },
  {
    "text": "eventually it is so if I just do Cube ZL get",
    "start": "3348920",
    "end": "3354960"
  },
  {
    "text": "BM right now we know the VM is deployed and it's ready because uh we've got",
    "start": "3354960",
    "end": "3360799"
  },
  {
    "text": "synced and ready both set to true so if I use my",
    "start": "3360799",
    "end": "3366760"
  },
  {
    "text": "uh my uh cctl command again to get the uh status",
    "start": "3366760",
    "end": "3374680"
  },
  {
    "text": "information again I will uh break this command out of the um the nested SSH",
    "start": "3374680",
    "end": "3381599"
  },
  {
    "text": "just to show it right that I'm retrieving that from my instant right I've got an IP address",
    "start": "3381599",
    "end": "3387559"
  },
  {
    "text": "for that instance and so if I try an SSH again right there it is and I'm",
    "start": "3387559",
    "end": "3393799"
  },
  {
    "text": "connected to the VM again from the user perspective it's much simpler right all",
    "start": "3393799",
    "end": "3400480"
  },
  {
    "text": "they had to do was uh specify something very abstract like what size they wanted",
    "start": "3400480",
    "end": "3406880"
  },
  {
    "text": "and all those things that normally I had to deploy manually uh were just done for me as the",
    "start": "3406880",
    "end": "3414000"
  },
  {
    "text": "user and then I've also uh protected the user from having to know Cloud specific",
    "start": "3414000",
    "end": "3421280"
  },
  {
    "text": "things as well as enforced policies right because the security group that I",
    "start": "3421280",
    "end": "3427280"
  },
  {
    "text": "created for the VM was a specific Security Group I didn't give the user any choice there right I gave them the",
    "start": "3427280",
    "end": "3432880"
  },
  {
    "text": "ability to SSH to it but that was it right there's not a bunch of ports that are just wide open and so I'm enforcing",
    "start": "3432880",
    "end": "3438599"
  },
  {
    "text": "policies from the platform side right uh where we're essentially putting guard",
    "start": "3438599",
    "end": "3444839"
  },
  {
    "text": "rails in place so that yeah users can deploy things but uh it's done in a way",
    "start": "3444839",
    "end": "3452559"
  },
  {
    "text": "that um uh adheres to our organizational policies all right so that is a uh uh",
    "start": "3452559",
    "end": "3460480"
  },
  {
    "text": "overview of crossplane I hope that uh you gain some information uh crossplane",
    "start": "3460480",
    "end": "3465880"
  },
  {
    "text": "is a is a fairly large platform and so uh there's plenty more to learn uh about",
    "start": "3465880",
    "end": "3472920"
  },
  {
    "text": "crossplane but uh hopefully that gets you started on the path to um to using it adopting",
    "start": "3472920",
    "end": "3480240"
  },
  {
    "text": "it trying it out um one of those things or all the above uh I just want to thank",
    "start": "3480240",
    "end": "3486240"
  },
  {
    "text": "you for your time if uh little plug for rxm um we do offer classes on on uh",
    "start": "3486240",
    "end": "3492920"
  },
  {
    "text": "crossplane both from the uh platform perspective and the user perspective so",
    "start": "3492920",
    "end": "3498359"
  },
  {
    "text": "hit us up at rxm domcom if you're looking for learning on crossplane or or",
    "start": "3498359",
    "end": "3504520"
  },
  {
    "text": "need to train your team thanks everybody",
    "start": "3504520",
    "end": "3509640"
  }
]