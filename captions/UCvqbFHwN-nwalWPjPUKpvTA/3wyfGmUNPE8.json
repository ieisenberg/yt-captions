[
  {
    "text": "okay thanks everyone for coming today this is our panel ebpf for observability",
    "start": "400",
    "end": "6720"
  },
  {
    "text": "data overload Panacea or pain and the key question that we're going to be",
    "start": "6720",
    "end": "11840"
  },
  {
    "text": "trying to understand here by the end of the panel is ebpf finally the Panacea to",
    "start": "11840",
    "end": "16880"
  },
  {
    "text": "observability problems or will it just be another Deluge of unhelpful data only",
    "start": "16880",
    "end": "22359"
  },
  {
    "text": "to bring pain to our already overloaded observability teams so with that let's",
    "start": "22359",
    "end": "28679"
  },
  {
    "text": "get started uh we have a great set of panelists here and the first question I'd like you uh each to introduce",
    "start": "28679",
    "end": "35200"
  },
  {
    "text": "yourself and tell me a little bit about how you're using ebpf for observability in your",
    "start": "35200",
    "end": "41800"
  },
  {
    "text": "project all right cool so I'm Frederick um I founded a company called polar",
    "start": "41800",
    "end": "47280"
  },
  {
    "text": "signals and we do uh profiling using ebpf um in case people are maybe not",
    "start": "47280",
    "end": "53199"
  },
  {
    "text": "familiar profiling kind of allows you to see um where resources are being spent",
    "start": "53199",
    "end": "58440"
  },
  {
    "text": "in your code down to your down to the line number in your source code and the way that our profiler works or that",
    "start": "58440",
    "end": "64838"
  },
  {
    "text": "generally any sampling profiler works is um based on like a CPU overflow basis so",
    "start": "64839",
    "end": "72200"
  },
  {
    "text": "every x amount of CPU Cycles our ebpf program gets run and the way our ebpf",
    "start": "72200",
    "end": "77920"
  },
  {
    "text": "program works is that it figures out what is the current function call stack and saves that and then we can build",
    "start": "77920",
    "end": "84680"
  },
  {
    "text": "statistics using that to say if we see the same function call stack multiple times we can say statistically speaking",
    "start": "84680",
    "end": "91439"
  },
  {
    "text": "that's where that amount of time was being spent and so that's the product",
    "start": "91439",
    "end": "96920"
  },
  {
    "text": "and um we have an open source project as well called parka PCA that you know you can you can go ahead and try out",
    "start": "96920",
    "end": "103880"
  },
  {
    "text": "immediately has an awesome kubernetes integration thanks uh hi I'm Anna I work",
    "start": "103880",
    "end": "109960"
  },
  {
    "text": "at ISA valent a company that is known mostly from uh now graduated project uh",
    "start": "109960",
    "end": "116640"
  },
  {
    "text": " which ises ebpf for networking I work valent uh on the observability side",
    "start": "116640",
    "end": "122960"
  },
  {
    "text": "uh on a few projects uh first of all hble which is uh observability layer for",
    "start": "122960",
    "end": "128039"
  },
  {
    "text": "celium which doesn't use cbpf directly but sort of pigb backs on what celium does and um processes that networking",
    "start": "128039",
    "end": "136200"
  },
  {
    "text": "data uh and second project is tetragon which is a security observability",
    "start": "136200",
    "end": "143239"
  },
  {
    "text": "project uh using gpf mostly in security context to give a security teams",
    "start": "143239",
    "end": "149360"
  },
  {
    "text": "visibility into what's going on and also to um provide",
    "start": "149360",
    "end": "155239"
  },
  {
    "text": "enforcement hey everyone uh I'm shakar I'm uh the co-founder and CEO of gr cover uh gr cover is basically building",
    "start": "155319",
    "end": "162640"
  },
  {
    "text": "a full observability stack on top of ebpf which basically means that we",
    "start": "162640",
    "end": "167760"
  },
  {
    "text": "provide application metrics application tracing uh troubleshooting on top of a platform by correlating Metric log",
    "start": "167760",
    "end": "174680"
  },
  {
    "text": "traces basically anything you can expect from Full APM or application performance marting solution ution by using a sensor",
    "start": "174680",
    "end": "181920"
  },
  {
    "text": "which is mostly built on on top of evf uh so the end result is like for Environ",
    "start": "181920",
    "end": "187640"
  },
  {
    "text": "like kubernetes uh within the installation of One ebpf sensor basically by uh setting that ebpf",
    "start": "187640",
    "end": "194400"
  },
  {
    "text": "program to run and aggregate the data correctly in a kubernetes cluster we can get a full stack observability from uh",
    "start": "194400",
    "end": "201040"
  },
  {
    "text": "infrastructure to application within practically like a minute or two without any code instrumentation or hard work",
    "start": "201040",
    "end": "206959"
  },
  {
    "text": "from the R&D hello I'm I'm lauron I work at data do",
    "start": "206959",
    "end": "213720"
  },
  {
    "text": "I'm filling in today for Val who couldn't make it uh so Dat Dog is an observability company and we've been",
    "start": "213720",
    "end": "220319"
  },
  {
    "text": "enhancing Dat Dog recently using ebpf we currently use it for a few use cases the",
    "start": "220319",
    "end": "225840"
  },
  {
    "text": "the key main ones are instrumenting the networking stack and to do network bance analysis but also service",
    "start": "225840",
    "end": "233480"
  },
  {
    "text": "monitoring and we also use uh ebpf to to get security signals so interesting security events happening on",
    "start": "233480",
    "end": "241079"
  },
  {
    "text": "notes okay great it's a nice introduction so why did you choose to",
    "start": "241079",
    "end": "247159"
  },
  {
    "text": "use ebpf and what other options did you consider so Laur do you want to start",
    "start": "247159",
    "end": "253280"
  },
  {
    "text": "first sure um so when we initially started we wanted to provide Network",
    "start": "253280",
    "end": "259040"
  },
  {
    "text": "performance monitoring so looking at what was happening uh at the TCP layer of of of the stack and at the time we're",
    "start": "259040",
    "end": "266120"
  },
  {
    "text": "looking at options like looking at procfs doing something like Le P CAP so capturing packets and and nasing them",
    "start": "266120",
    "end": "273440"
  },
  {
    "text": "but of course as you can imagine the cost of these Solutions was was pretty high and and so we very quickly settled",
    "start": "273440",
    "end": "279639"
  },
  {
    "text": "to ebpf it was a while back and it was a much harder back then but we'll be uh",
    "start": "279639",
    "end": "285160"
  },
  {
    "text": "discussing this uh later I'm sure um at at ground cover I think the",
    "start": "285160",
    "end": "291400"
  },
  {
    "text": "situation for like uh full observability platform the the alternative is very clear it's it's an SDK instrumentation",
    "start": "291400",
    "end": "298039"
  },
  {
    "text": "inside your code that basically alongside some agent that collects metrics and logs can actually capture",
    "start": "298039",
    "end": "303960"
  },
  {
    "text": "what the application is doing uh so in ground cover one of the things we do is we aggregate the data process it and",
    "start": "303960",
    "end": "310680"
  },
  {
    "text": "store it completely differently so at the beginning of the company a few years back uh we did consider using an SDK",
    "start": "310680",
    "end": "317280"
  },
  {
    "text": "solution but part of the pain in the industry that we feel right now is that uh we see it an open Telemetry and in",
    "start": "317280",
    "end": "323120"
  },
  {
    "text": "other uh vendor-based sdks working that SDK into your code specifically in uh",
    "start": "323120",
    "end": "328160"
  },
  {
    "text": "modern languages like goand is even kind of deteriorating the auto instrumentation is becoming more and more painful and less automated and",
    "start": "328160",
    "end": "335319"
  },
  {
    "text": "eventually ebpf for us is kind of solving that problem of providing an onboarding into a full data experience",
    "start": "335319",
    "end": "342240"
  },
  {
    "text": "of what's going on in the application without uh doing all that hard work so the alternative I think is part of the",
    "start": "342240",
    "end": "348160"
  },
  {
    "text": "pains we're trying to solve at the moment uh so for us at um at a valent we",
    "start": "348160",
    "end": "355600"
  },
  {
    "text": "use BPF for lots of things so um it it wasn't uh a big barrier for us to to use",
    "start": "355600",
    "end": "362039"
  },
  {
    "text": "it also for observability in tetragon Project we uh did initially try another",
    "start": "362039",
    "end": "368520"
  },
  {
    "text": "other Solutions like uh we tried polling from user space data exposed by by the",
    "start": "368520",
    "end": "374280"
  },
  {
    "text": "kernel um tetragon project is uh is intended to be used mostly by by",
    "start": "374280",
    "end": "380400"
  },
  {
    "text": "security teams and one thing that uh we get from using EF is that we are not",
    "start": "380400",
    "end": "387319"
  },
  {
    "text": "missing any events security teams in general are don't want to hear that you are missing some data they want to have",
    "start": "387319",
    "end": "394479"
  },
  {
    "text": "everything for audit purposes um if you have security incident then of course missing any data would be very very bad",
    "start": "394479",
    "end": "401160"
  },
  {
    "text": "with ebf it's easier for us to achieve that complete visibility and also we um",
    "start": "401160",
    "end": "406840"
  },
  {
    "text": "we are achieving a greater performance so uh the overhead uh of getting this",
    "start": "406840",
    "end": "412360"
  },
  {
    "text": "visibility is much lower than with other Solutions so uh even though we initially",
    "start": "412360",
    "end": "417639"
  },
  {
    "text": "started um writing some code in in user space and polling uh Linux kernel for",
    "start": "417639",
    "end": "423280"
  },
  {
    "text": "for data we U gradually started then moving uh more and more Cod to vpf to",
    "start": "423280",
    "end": "429680"
  },
  {
    "text": "achieve full visibility and performance so I actually love this",
    "start": "429680",
    "end": "435360"
  },
  {
    "text": "question because um when I started the company we actually didn't want to concern ourselves with collection of",
    "start": "435360",
    "end": "441400"
  },
  {
    "text": "data at all CU we came from the go Community where profilers are pretty awesome um and then we kind of started",
    "start": "441400",
    "end": "448360"
  },
  {
    "text": "to play around you know in other ecosystems and you know the situation was pretty bleak um and it just turned",
    "start": "448360",
    "end": "456879"
  },
  {
    "text": "out that ebpf was kind of a perfect fit um for collecting this kind of data",
    "start": "456879",
    "end": "462520"
  },
  {
    "text": "because it kind of allows us to operate at a super low level um and then ultimately you know also all these",
    "start": "462520",
    "end": "468560"
  },
  {
    "text": "awesome benefits of being able to do zero instrumentation you don't have to change your code at all um you don't",
    "start": "468560",
    "end": "474680"
  },
  {
    "text": "have to change your deployments at all um and when you look at the kind of profile ecosystem something that keeps",
    "start": "474680",
    "end": "481479"
  },
  {
    "text": "happening is that for all these languages profilers keep re being Rewritten and all of the same problems",
    "start": "481479",
    "end": "487800"
  },
  {
    "text": "keep being resolved all the time in every single language right so like let me give give an example like there's a",
    "start": "487800",
    "end": "494120"
  },
  {
    "text": "really popular profiler in the python ecosystem called ppy um and they have to",
    "start": "494120",
    "end": "500400"
  },
  {
    "text": "reimplement like um the unwinding of native stack so when you call out to lip",
    "start": "500400",
    "end": "505560"
  },
  {
    "text": "Cuda or pytorch or whatever um and this stuff is very very complicated and",
    "start": "505560",
    "end": "511479"
  },
  {
    "text": "because we're able to build all of this as a whole system profiler that profiles your entire",
    "start": "511479",
    "end": "517360"
  },
  {
    "text": "system in the same way we're able to kind of reuse these pieces from uh",
    "start": "517360",
    "end": "522880"
  },
  {
    "text": "different languages and kind of Cobble together um really awesome profilers that fundamentally does some things that",
    "start": "522880",
    "end": "529120"
  },
  {
    "text": "weren't even possible before so we can do stuff like we actually have a customer that embeds the python",
    "start": "529120",
    "end": "534959"
  },
  {
    "text": "interpreter into their go process and then ends up calling lip Cuda right like there's no no other profiler in the",
    "start": "534959",
    "end": "542200"
  },
  {
    "text": "world that could do stuff like that um and only because we ended up kind of starting from scratch and being able to",
    "start": "542200",
    "end": "549000"
  },
  {
    "text": "operate at such a low level are we able to basically deal with any situation that's thrown at",
    "start": "549000",
    "end": "554600"
  },
  {
    "text": "us great so now that we know a little bit about why you chose ebpf how has",
    "start": "554600",
    "end": "560399"
  },
  {
    "text": "your use of ebpf evolved over time and what are some of the key Milestones uh",
    "start": "560399",
    "end": "565920"
  },
  {
    "text": "of its development within the observability domain do I start again yeah",
    "start": "565920",
    "end": "573720"
  },
  {
    "text": "yeah so something I think um that's also kind",
    "start": "573760",
    "end": "579920"
  },
  {
    "text": "of a pretty big misconception I guess is that um ebpf automatically means you",
    "start": "579920",
    "end": "586480"
  },
  {
    "text": "support all languages um I I don't really know why this started and where this came from but it's like completely",
    "start": "586480",
    "end": "593440"
  },
  {
    "text": "not true um so like going back to this like python example so for native code",
    "start": "593440",
    "end": "599800"
  },
  {
    "text": "all of this is relatively speaking pretty easy like because um the",
    "start": "599800",
    "end": "605079"
  },
  {
    "text": "operating system has a stack and we just need to walk the stack and we figure out what the function call stack is so all",
    "start": "605079",
    "end": "610120"
  },
  {
    "text": "of that is kind of easy um in languages like go but um when we talk about python",
    "start": "610120",
    "end": "616079"
  },
  {
    "text": "you know all we would see in that kind of example is the C code that makes up uh the python interpreters that's not",
    "start": "616079",
    "end": "622040"
  },
  {
    "text": "very useful for most people writing python code right and so um just",
    "start": "622040",
    "end": "627320"
  },
  {
    "text": "recently we we actually released um python support and it's very",
    "start": "627320",
    "end": "632880"
  },
  {
    "text": "intricate because we need to read memory from the python virtual machine to figure out what is the current function",
    "start": "632880",
    "end": "638120"
  },
  {
    "text": "call stack as in the world viiew of the Python interpreter right and so um what",
    "start": "638120",
    "end": "645760"
  },
  {
    "text": "going through this evolution of you know at first we only supported go then we supported other native languages like",
    "start": "645760",
    "end": "652519"
  },
  {
    "text": "rust C++ um and so on and now we're kind of moving up to higher higher level",
    "start": "652519",
    "end": "658279"
  },
  {
    "text": "languages uh so I think that's kind of how our usage has um kind of evolved",
    "start": "658279",
    "end": "666160"
  },
  {
    "text": "broadening our language support and I think the need for language support is ultimately what what was the cause for",
    "start": "666160",
    "end": "673360"
  },
  {
    "text": "that um how our usage of ebpf EVS right that was the question um I think the the",
    "start": "673360",
    "end": "680920"
  },
  {
    "text": "main thing is we started moving more and more of our code into ebpf into kernel",
    "start": "680920",
    "end": "688519"
  },
  {
    "text": "uh so for a lot of things uh how um how we developed our projects was that we",
    "start": "688519",
    "end": "695920"
  },
  {
    "text": "first um developed some parsers for example in the user space uh or started",
    "start": "695920",
    "end": "701600"
  },
  {
    "text": "collecting data from kernel in user space um proved that it's useful for for",
    "start": "701600",
    "end": "706959"
  },
  {
    "text": "our customers and then gradually um moved that uh code into EF for greater",
    "start": "706959",
    "end": "713920"
  },
  {
    "text": "performance and greater reliability uh yeah I think this is this is the main thing",
    "start": "713920",
    "end": "720959"
  },
  {
    "text": "uh I mean I I think for us uh it's kind of the scope of what happens what happened to ebpf for the last few years",
    "start": "720959",
    "end": "726600"
  },
  {
    "text": "rather than just ground cover I think that as as a company using ebpf for observability one of the things that uh",
    "start": "726600",
    "end": "733680"
  },
  {
    "text": "we want to do is do a lot of data crunching and move a lot of data from the kernel space to the user space for",
    "start": "733680",
    "end": "739440"
  },
  {
    "text": "example in ground cover one of the things that we believe in which I think is kind of missing in some in some other",
    "start": "739440",
    "end": "744959"
  },
  {
    "text": "uh platforms even like open Telemetry is that uh the payload of a request or an API that failed is very critical for",
    "start": "744959",
    "end": "750800"
  },
  {
    "text": "troubleshooting if you have that that's like gold but eventually when you don't do data crunching in a sophisticated way",
    "start": "750800",
    "end": "756920"
  },
  {
    "text": "outside of the application moving all this data from even from the user space inside of an",
    "start": "756920",
    "end": "762079"
  },
  {
    "text": "SDK that's that's a lot of data and a lot of CPU basically running and doing all this uh uh implementation inside the",
    "start": "762079",
    "end": "769480"
  },
  {
    "text": "SDK and then when you do that you kind of make the Assumption of I don't want to process too much I don't want I don't",
    "start": "769480",
    "end": "774880"
  },
  {
    "text": "want to disturb the application so suddenly with DPF as time passes improvements in the ring buffer",
    "start": "774880",
    "end": "780839"
  },
  {
    "text": "improvements in the verifier that allows us to create much more complex programs in the kernel crunching the data and and",
    "start": "780839",
    "end": "787560"
  },
  {
    "text": "the payloads of the traces already in the kernel and moving stuff away from the kernel like payloads into the user",
    "start": "787560",
    "end": "793320"
  },
  {
    "text": "space with very low memory in CPU footprint that's dramatic for absorbability and I think another thing",
    "start": "793320",
    "end": "799519"
  },
  {
    "text": "that happens is is kubernetes I mean eventually ebpf got sophisticated more",
    "start": "799519",
    "end": "805560"
  },
  {
    "text": "and more over the past few years into the point that right now we can write uh sensors that can even Implement APM but",
    "start": "805560",
    "end": "813160"
  },
  {
    "text": "if you go over to a customer and they're running kernel version I don't know 3. something then what does it matter right",
    "start": "813160",
    "end": "819560"
  },
  {
    "text": "so in a sense combining that with kubernetes of U manage kubernetes vendors pushing new ebpf versions new",
    "start": "819560",
    "end": "827199"
  },
  {
    "text": "kernel versions basically to their to their images uh you basically everyone has that it became commodi so we can",
    "start": "827199",
    "end": "834360"
  },
  {
    "text": "push the latest capabilities of APM into evf and it's a available for anyone",
    "start": "834360",
    "end": "839720"
  },
  {
    "text": "using eks AKs or whatever that's one of the major pluses I think that",
    "start": "839720",
    "end": "846199"
  },
  {
    "text": "happen on our side you you you mentioned the evolution so we started small like",
    "start": "846800",
    "end": "852000"
  },
  {
    "text": "with a simple Network performance R product and we've added features to this product and we built more and more",
    "start": "852000",
    "end": "857639"
  },
  {
    "text": "product right so we build service monitoring on top of this and then instrumented security events now we're",
    "start": "857639",
    "end": "863600"
  },
  {
    "text": "doing Dynamics instrumentation and I'm pretty sure that down the road we're going to instrument more and more using",
    "start": "863600",
    "end": "869160"
  },
  {
    "text": "ebpf because it's it's so powerful you you also asked about Milestones I think for us of course everything related to",
    "start": "869160",
    "end": "876240"
  },
  {
    "text": "how fast the community has evolved uh has been has been great for us I mean the creation of the foundation for",
    "start": "876240",
    "end": "881639"
  },
  {
    "text": "instance and the fact that the ecosystem is is much uh easier to work with now uh",
    "start": "881639",
    "end": "888399"
  },
  {
    "text": "I mean you mentioned different kernels I mean one of the big moment for us was the availability of Cory so compile ones",
    "start": "888399",
    "end": "894920"
  },
  {
    "text": "run everywhere it was a very big change like comp compared to to Alternatives such as offset guessing or dynamic",
    "start": "894920",
    "end": "902639"
  },
  {
    "text": "compilation it was really great for us to be able to to to to deploy code that would be that would work on on on most",
    "start": "902639",
    "end": "910240"
  },
  {
    "text": "kernels so we've touched on this a little bit in your aners so far but let me ask it more concretely what are the",
    "start": "910240",
    "end": "917160"
  },
  {
    "text": "key advantages of using ebpf for observability I I'd say the ability to",
    "start": "917160",
    "end": "924680"
  },
  {
    "text": "instrument I mean we we we've talked about it already right it's the ability to instrument pretty much anything happening in the kernel and in in new",
    "start": "924680",
    "end": "932079"
  },
  {
    "text": "space to with a very uh limited uh performance impact on the on the note",
    "start": "932079",
    "end": "937160"
  },
  {
    "text": "and I think this is the the key thing right because Alternatives in the past were either um instrumenting in ways",
    "start": "937160",
    "end": "944680"
  },
  {
    "text": "that were much more intrusive or developing a kernel module which of course was much much harder to do in",
    "start": "944680",
    "end": "950519"
  },
  {
    "text": "terms of deployment and and life cycle and I think that's the key thing like uh",
    "start": "950519",
    "end": "956160"
  },
  {
    "text": "easiness to to instrument pretty much anything and and and low impact in terms of of",
    "start": "956160",
    "end": "963480"
  },
  {
    "text": "performance um I think that one one of the key Point uh is is of course as",
    "start": "963839",
    "end": "969079"
  },
  {
    "text": "mentioned instrumentation but I look at that from uh an organizational perspective even more than a technical",
    "start": "969079",
    "end": "974319"
  },
  {
    "text": "perspective because eventually when you look at one person one language one platform I mean there's there's a",
    "start": "974319",
    "end": "981319"
  },
  {
    "text": "documentation you will you will get it to work but eventually we meet uh companies I mean the according to a Kong",
    "start": "981319",
    "end": "987399"
  },
  {
    "text": "survey the average compan has 180 microservices so and we we kind of",
    "start": "987399",
    "end": "993120"
  },
  {
    "text": "democratize uh tax tax choices right the data science team will choose their stack the the backend team will choose",
    "start": "993120",
    "end": "1000000"
  },
  {
    "text": "their stack so when you when you get to a real organization working say in kubernetes and using all these languages",
    "start": "1000000",
    "end": "1006680"
  },
  {
    "text": "uh working through that instrumentation suddenly becomes an organizational problem you got to have multiple stakeholders from the R&D lots of people",
    "start": "1006680",
    "end": "1013519"
  },
  {
    "text": "involved in this onboarding and then onboarding to an open Telemetry suddenly becomes like a few months of work uh if",
    "start": "1013519",
    "end": "1020399"
  },
  {
    "text": "you can get the engagement from the team to do that so I think ebpf suddenly solved that that organizational problem",
    "start": "1020399",
    "end": "1026280"
  },
  {
    "text": "of it just works one person can install it on the infrastructure and solve the problem and and the other is uh is",
    "start": "1026280",
    "end": "1032520"
  },
  {
    "text": "basically resources I think that one of the deficiencies of using an SDK is that eventually it's a piece of",
    "start": "1032520",
    "end": "1039640"
  },
  {
    "text": "code running in your application and the only way to measure the impact in response time in CPU uh in in basically",
    "start": "1039640",
    "end": "1046640"
  },
  {
    "text": "resource consumption is AB testing you have have to take it out rip it out and rip it and put it back in and in a world",
    "start": "1046640",
    "end": "1052160"
  },
  {
    "text": "of containers where we set limits on resources right and try to project how people our things are going to behave",
    "start": "1052160",
    "end": "1058480"
  },
  {
    "text": "that's weird I'm I'm going to instrument an SDK that I don't know how it behaves and now I have to set new resource",
    "start": "1058480",
    "end": "1063600"
  },
  {
    "text": "expectations to my application and even uh estimate response time so running out of band from the application makes us",
    "start": "1063600",
    "end": "1070559"
  },
  {
    "text": "the gives us the ability to do more complex stuff and not in danger the response time or the basically the slos",
    "start": "1070559",
    "end": "1076280"
  },
  {
    "text": "of the application which is the most important thing um so for us um low overhead is the the",
    "start": "1076280",
    "end": "1083600"
  },
  {
    "text": "first obvious uh advantage and uh as I mentioned before um not missing an",
    "start": "1083600",
    "end": "1089159"
  },
  {
    "text": "events so when we were collecting events um from kernel from user space it",
    "start": "1089159",
    "end": "1094919"
  },
  {
    "text": "happens from time to time that the buffer there are some buffers in between kernel and and user space the buffer um",
    "start": "1094919",
    "end": "1102440"
  },
  {
    "text": "is full and then we are missing events we were our customers were running into that over and over and",
    "start": "1102440",
    "end": "1108960"
  },
  {
    "text": "security people are unhappy with that with ebpf we can aggregate events in a kernel and that way we can prevent um",
    "start": "1108960",
    "end": "1117520"
  },
  {
    "text": "users on missing on any critical events and uh another thing uh it's that ebpf",
    "start": "1117520",
    "end": "1126720"
  },
  {
    "text": "uh ebpf based observability is very hands-off for users one you install",
    "start": "1126720",
    "end": "1133480"
  },
  {
    "text": "basically an some sort of agent that um hooks ebpf programs in the kernel and",
    "start": "1133480",
    "end": "1139880"
  },
  {
    "text": "then it's all hands off um evf programs are collecting data the agent is um",
    "start": "1139880",
    "end": "1144960"
  },
  {
    "text": "collecting data from the kernel and exposing it somehow um to users but this is it um great thing uh about this is uh",
    "start": "1144960",
    "end": "1153559"
  },
  {
    "text": "reliability of of such Solutions um the BPF programs are checked by the verifier",
    "start": "1153559",
    "end": "1160360"
  },
  {
    "text": "and the verifier exists to make sure that the Kel doesn't crash but because",
    "start": "1160360",
    "end": "1166200"
  },
  {
    "text": "the programs are verified that they are safe to and they also they don't crash",
    "start": "1166200",
    "end": "1171640"
  },
  {
    "text": "uh so we are not missing any information because there was a back in the agent",
    "start": "1171640",
    "end": "1177120"
  },
  {
    "text": "the program crashed because it ran out of memory things like that things like that happen with a user space solution",
    "start": "1177120",
    "end": "1182840"
  },
  {
    "text": "that you suddenly are the bagging something and you suddenly realize that well the agent crashed uh and stopped",
    "start": "1182840",
    "end": "1189760"
  },
  {
    "text": "collecting data and you can't thebag uh because you don't have this data with BPF it just doesn't happen this once",
    "start": "1189760",
    "end": "1196799"
  },
  {
    "text": "these programs are hooked into the the Kel they just stay there they are running there and yeah it's great for",
    "start": "1196799",
    "end": "1202640"
  },
  {
    "text": "reliability of the observability PIP plane yeah I think almost everything has",
    "start": "1202640",
    "end": "1209520"
  },
  {
    "text": "uh kind of already been said I want to connect to one thing that was kind of about the organizational um aspect of it um so I",
    "start": "1209520",
    "end": "1218919"
  },
  {
    "text": "we see exactly the same thing that like zero instrumentation allows us to do this and that combined with wide",
    "start": "1218919",
    "end": "1225520"
  },
  {
    "text": "language support is super powerful because most companies that we go into",
    "start": "1225520",
    "end": "1231440"
  },
  {
    "text": "you know they use four five six different languages and not having to go through each um engineering team and",
    "start": "1231440",
    "end": "1238720"
  },
  {
    "text": "having to change code and roll out and stuff like that just um makes the like",
    "start": "1238720",
    "end": "1244480"
  },
  {
    "text": "turnaround time so much faster so completely agree with that um the second",
    "start": "1244480",
    "end": "1251000"
  },
  {
    "text": "one I'm going to contradict myself a little bit um from my earlier statement",
    "start": "1251000",
    "end": "1256640"
  },
  {
    "text": "um it's the wide language support right like I did say is very very hard but at the same",
    "start": "1256640",
    "end": "1262600"
  },
  {
    "text": "time if we had to keep doing uh all this reimplementing",
    "start": "1262600",
    "end": "1267799"
  },
  {
    "text": "in all these different languages actually it turns out that would be way more work uh to do combined with then",
    "start": "1267799",
    "end": "1273760"
  },
  {
    "text": "rolling it out and everything right um that you know actually putting all of",
    "start": "1273760",
    "end": "1279039"
  },
  {
    "text": "this work in into this once is way more worth it um and then the last thing is",
    "start": "1279039",
    "end": "1285799"
  },
  {
    "text": "for us actually it's also a security um thing where in profiling typically",
    "start": "1285799",
    "end": "1292559"
  },
  {
    "text": "how other profilers work is like Linux perf for example um it kind of works the",
    "start": "1292559",
    "end": "1299679"
  },
  {
    "text": "same way except it captures the entire stack and copies it to user space which",
    "start": "1299679",
    "end": "1305000"
  },
  {
    "text": "means in the absolute worst case you've just copied a private key out of you know kernel space into user space which",
    "start": "1305000",
    "end": "1312559"
  },
  {
    "text": "is just horrendous for from a security perspective right because we can do all this unwinding that perf happens to do",
    "start": "1312559",
    "end": "1319360"
  },
  {
    "text": "in user space we can do all of this in kernel it's actually also from a security perspective way better and a",
    "start": "1319360",
    "end": "1325880"
  },
  {
    "text": "lot of companies actually choose us specifically for this reason so this panel so far has been",
    "start": "1325880",
    "end": "1332840"
  },
  {
    "text": "very sunshine and rainbows but I'd like to hear a little bit of controversy now so what are the",
    "start": "1332840",
    "end": "1340679"
  },
  {
    "text": "potential challenges and limitations that you've run into so far using ebpf for",
    "start": "1340679",
    "end": "1346960"
  },
  {
    "text": "observability um I guess everything from like being",
    "start": "1346960",
    "end": "1353039"
  },
  {
    "text": "Limited in memory being Limited in instructions um you know unrolling Loops",
    "start": "1353039",
    "end": "1359679"
  },
  {
    "text": "actually some of it is also a little bit positive because it makes sure that you kind of think about your limitations a",
    "start": "1359679",
    "end": "1366080"
  },
  {
    "text": "little bit but it's definitely very tough uh to to get right",
    "start": "1366080",
    "end": "1371840"
  },
  {
    "text": "um yeah I don't know yeah",
    "start": "1371840",
    "end": "1378760"
  },
  {
    "text": "yeah I guess challenges and limitations are well for us it's all related to how",
    "start": "1378760",
    "end": "1386400"
  },
  {
    "text": "BPF itself in in the kernel was was evolving so um just a few years ago um",
    "start": "1386400",
    "end": "1393919"
  },
  {
    "text": "ebpf was really hard to to use for for for many of our use cases uh because uh",
    "start": "1393919",
    "end": "1401760"
  },
  {
    "text": "well the the complexity of the programs we could write was very limited it is",
    "start": "1401760",
    "end": "1408000"
  },
  {
    "text": "still limited but uh these limitations get lifted they got um limitations on",
    "start": "1408000",
    "end": "1414440"
  },
  {
    "text": "the instructions Etc got um increased in recent Kels and as users are adopting",
    "start": "1414440",
    "end": "1421960"
  },
  {
    "text": "recent Kels we also can write more complex programs uh also a vpf verifier",
    "start": "1421960",
    "end": "1427679"
  },
  {
    "text": "is uh got much more sophisticated and it's still getting developed so um the",
    "start": "1427679",
    "end": "1433279"
  },
  {
    "text": "verifier is allowing more and more complex programs so",
    "start": "1433279",
    "end": "1438880"
  },
  {
    "text": "um yeah this um this limitations are lifted but still it's uh this this is I",
    "start": "1438880",
    "end": "1445720"
  },
  {
    "text": "guess the the main challenge for us this complexity and also while writing some of the BPF programs for example um layer",
    "start": "1445720",
    "end": "1453320"
  },
  {
    "text": "7even parsers uh we we are finding kernel bus sometimes it it happens too",
    "start": "1453320",
    "end": "1459520"
  },
  {
    "text": "and uh this while ebpf program writing BPF programs is not like full on Kel",
    "start": "1459520",
    "end": "1467919"
  },
  {
    "text": "programming it has much shorter feedback loop we are not waiting years and years",
    "start": "1467919",
    "end": "1473360"
  },
  {
    "text": "until people are able to adopt it uh it still has some signs of this code is",
    "start": "1473360",
    "end": "1479320"
  },
  {
    "text": "running in a kernel sometimes we are just running into a kernel back and it has to be fixed but Port users need to",
    "start": "1479320",
    "end": "1484880"
  },
  {
    "text": "adopt new kernel so yeah yeah I I was just going to say the like debugging is",
    "start": "1484880",
    "end": "1491679"
  },
  {
    "text": "just it's pretty awful when you have like a bad bug in like from like one",
    "start": "1491679",
    "end": "1497799"
  },
  {
    "text": "customer or something it's really hard to debug this stuff correctly um and yeah like we've we've had the case where",
    "start": "1497799",
    "end": "1504240"
  },
  {
    "text": "you know we locked up kernels before um and we're working with like um the",
    "start": "1504240",
    "end": "1509919"
  },
  {
    "text": "kernel development team to make sure you know that these things get fixed and then we work with all the like Dr",
    "start": "1509919",
    "end": "1516080"
  },
  {
    "text": "providers to make sure that these fixes quickly make it into the latest patch releases and like we have by now we have",
    "start": "1516080",
    "end": "1522799"
  },
  {
    "text": "connections in with like canonico with Su with um AWS everyone to make sure",
    "start": "1522799",
    "end": "1528679"
  },
  {
    "text": "that this stuff has quick enough turnaround but like it's is very painful when you when we run into stuff like",
    "start": "1528679",
    "end": "1535159"
  },
  {
    "text": "this um I mean I toally you about the complexity I think that ebpf uh is open source or there's an illusion that it's",
    "start": "1535159",
    "end": "1541640"
  },
  {
    "text": "ready to go like for everyone so uh everyone can just take it off the shelf you know write a few ad hoc uh commands",
    "start": "1541640",
    "end": "1547960"
  },
  {
    "text": "and suddenly they can monitor whatever is going on in their production but the the reality is that uh uh the other part",
    "start": "1547960",
    "end": "1555240"
  },
  {
    "text": "of the community which is basically the Frameworks and the applic themselves isn't yet is not yet ready for that so",
    "start": "1555240",
    "end": "1561799"
  },
  {
    "text": "just as an example to to do what we do and kind of Monitor and and tracing like deep tracing of what applications are",
    "start": "1561799",
    "end": "1568080"
  },
  {
    "text": "actually sending you know some of the stuff are easy to easier to do from an DPF perspective of just sitting on a",
    "start": "1568080",
    "end": "1574279"
  },
  {
    "text": "network call or basically just uh you know catching a DNS that passes through the through the network stack that's",
    "start": "1574279",
    "end": "1580399"
  },
  {
    "text": "easy but what happens when you're starting to look at cont contextual stuff like grpc and you want to look",
    "start": "1580399",
    "end": "1586520"
  },
  {
    "text": "into uh sell encrypted connections I mean the user doesn't care that uh he",
    "start": "1586520",
    "end": "1591559"
  },
  {
    "text": "just used the op SSL to just move stuff between the different microservices he should see that right because he's using",
    "start": "1591559",
    "end": "1597000"
  },
  {
    "text": "to instrumenting uh the application so the application is before encryption so",
    "start": "1597000",
    "end": "1602120"
  },
  {
    "text": "there's a lot of challenges eventually of supporting all that from such a low-level tier in some cases it's easier",
    "start": "1602120",
    "end": "1608960"
  },
  {
    "text": "in some cases is much more complex so you get into languages like uh node.js and Java and stuff like that and",
    "start": "1608960",
    "end": "1614960"
  },
  {
    "text": "suddenly you have to uh create and kind of be on boarded into all of",
    "start": "1614960",
    "end": "1620080"
  },
  {
    "text": "these context of these vure ma machines and kind of uh so you can understand what protocols are passing and what's",
    "start": "1620080",
    "end": "1625760"
  },
  {
    "text": "going on and kind of build that entire thread for for people I think that over time uh as Frameworks kind of expose the",
    "start": "1625760",
    "end": "1633120"
  },
  {
    "text": "right hooks to the right places it will start to converge into somewhere where it's easier to kind of uh uh hook on to",
    "start": "1633120",
    "end": "1640120"
  },
  {
    "text": "a grpc call and see what's going on just because the framework is more compatible to that at some point um but it will",
    "start": "1640120",
    "end": "1646520"
  },
  {
    "text": "take time and current ly it's uh it does require expertise so that's what I that's what I would",
    "start": "1646520",
    "end": "1653440"
  },
  {
    "text": "say I I I want ad much about the complexity and and the verifier issues because of course this is one of the",
    "start": "1653600",
    "end": "1659799"
  },
  {
    "text": "thing we we've observed also it's it's easier to get started with BPF but it's still pretty involved at the beginning",
    "start": "1659799",
    "end": "1667159"
  },
  {
    "text": "um something I wanted to mention is on on our side what we find the most painful is the fact that we want to",
    "start": "1667159",
    "end": "1672360"
  },
  {
    "text": "support multiple kernels and multiple distributions and while things are getting better and I was mentioning",
    "start": "1672360",
    "end": "1677919"
  },
  {
    "text": "Corey before um it's it's still pretty tough right and even when you have like",
    "start": "1677919",
    "end": "1683200"
  },
  {
    "text": "new features in BPF that are extremely attractive because they they allow you to simplify the code and be more",
    "start": "1683200",
    "end": "1688559"
  },
  {
    "text": "performance and like okay I want to use this but also have to have a fallback for all the kernels which means testing",
    "start": "1688559",
    "end": "1694720"
  },
  {
    "text": "your code to make sure that they work in a performant way in multiple uh distribution and Kels start to be uh",
    "start": "1694720",
    "end": "1701120"
  },
  {
    "text": "tricker and tricker um something I wanted to mention too is we mentioned the law overhead of",
    "start": "1701120",
    "end": "1707640"
  },
  {
    "text": "ebpf and and that's definitely true and that's great but there is still overhead right and and sometimes if you hook on a",
    "start": "1707640",
    "end": "1713840"
  },
  {
    "text": "very hot function in the databas the impact you're going to get on the Node can be significant and it's something",
    "start": "1713840",
    "end": "1719240"
  },
  {
    "text": "we've seen instrumenting some Network calls in very heavy loaded node for instance and something to be to be",
    "start": "1719240",
    "end": "1725000"
  },
  {
    "text": "careful about and another thing I think that will be important down the road is the",
    "start": "1725000",
    "end": "1730960"
  },
  {
    "text": "security implication of a running ebpf because if you want to load an ebpf",
    "start": "1730960",
    "end": "1736880"
  },
  {
    "text": "program you you need very high privileges right and if you just want observability you might not want to give",
    "start": "1736880",
    "end": "1744440"
  },
  {
    "text": "a tool the ability to load any program any kind of edpf program on any hook point and we we believe that down the",
    "start": "1744440",
    "end": "1752360"
  },
  {
    "text": "road um the granularity of permissions MF permissions is going to be are going",
    "start": "1752360",
    "end": "1758559"
  },
  {
    "text": "to be much much more fer and much stronger because of course we probably don't want to have uh cap BPF or capy s",
    "start": "1758559",
    "end": "1768080"
  },
  {
    "text": "on the note for just observability it feels like very high privilege",
    "start": "1768080",
    "end": "1773240"
  },
  {
    "text": "right so we've talked about some of the pros and cons of using ebpf for observability if you're going to give",
    "start": "1773240",
    "end": "1779600"
  },
  {
    "text": "advice to a platform team that wants to start implementing it what considerations do you think they should",
    "start": "1779600",
    "end": "1786200"
  },
  {
    "text": "take into account when integrating ebpf into the their observability tool",
    "start": "1786200",
    "end": "1792960"
  },
  {
    "text": "chain I I just continue what I what I was saying I think one of the first casing to do is to decide on the kernels",
    "start": "1793000",
    "end": "1800559"
  },
  {
    "text": "you want to support right like how far back do you want to go because this will Define what what you can do and what",
    "start": "1800559",
    "end": "1806960"
  },
  {
    "text": "type of evf code you you can write and and and I quickly mentioned performance and security I think it's are these are",
    "start": "1806960",
    "end": "1813039"
  },
  {
    "text": "also important thing to to keep in mind I think one thing that uh people",
    "start": "1813039",
    "end": "1819760"
  },
  {
    "text": "need to consider is that it's not uh magic I mean once you get that probe",
    "start": "1819760",
    "end": "1824919"
  },
  {
    "text": "active and data starts flowing you have to put it somewhere and I think the evf um kind of tools out there are still in",
    "start": "1824919",
    "end": "1831200"
  },
  {
    "text": "a situation where they're more ad hoc than uh built to be used in like a real",
    "start": "1831200",
    "end": "1837159"
  },
  {
    "text": "environment so okay you got that working and now that just pouring out tons of data is it worthwhile do do you want it",
    "start": "1837159",
    "end": "1844799"
  },
  {
    "text": "to run your carel constantly do you want do you do something with this data where do you write it how do you process it I",
    "start": "1844799",
    "end": "1850519"
  },
  {
    "text": "think that's kind of the the next question and when people start to mess with evf I think one of the major uh",
    "start": "1850519",
    "end": "1856320"
  },
  {
    "text": "concerns if you're not thinking it all the way through is that it can be uh sometimes much more data than you expect",
    "start": "1856320",
    "end": "1863080"
  },
  {
    "text": "uh if you don't know what what exactly you want to get out of it and how exactly you want to process it and if you do some of that processing can",
    "start": "1863080",
    "end": "1869360"
  },
  {
    "text": "happen in the colur and that that can save you a lot of resources and pain and if you don't then you will eventually",
    "start": "1869360",
    "end": "1874600"
  },
  {
    "text": "kind of have to pay for it in either resources or basically just data you need to store and figure out what to do",
    "start": "1874600",
    "end": "1882000"
  },
  {
    "text": "with yeah I can agree with everything that was said already Kent version is is",
    "start": "1882000",
    "end": "1887399"
  },
  {
    "text": "the main thing to to consider uh recently we are uh not really seeing col",
    "start": "1887399",
    "end": "1894279"
  },
  {
    "text": "versions We cannot support very often but um if you are a user with lots of",
    "start": "1894279",
    "end": "1900679"
  },
  {
    "text": "Legacy lots of uh old infrastructure then um this is this is a limitation uh",
    "start": "1900679",
    "end": "1906960"
  },
  {
    "text": "it's also a motivation to uh upgrade Linux G version really and um while",
    "start": "1906960",
    "end": "1913639"
  },
  {
    "text": "using EBP for observability um for in some use cases like uh Auto",
    "start": "1913639",
    "end": "1921679"
  },
  {
    "text": "instrumentation um EF gives you well automatic visibility to uh basic stuff",
    "start": "1921679",
    "end": "1930559"
  },
  {
    "text": "but for more advanced use cases like what what we are doing in tetragon we uh",
    "start": "1930559",
    "end": "1937000"
  },
  {
    "text": "designed tetragon to be super flexible uh with tetragon you can hook to any",
    "start": "1937000",
    "end": "1943880"
  },
  {
    "text": "kernel function or any Cape rope any Trace point if you really want um and",
    "start": "1943880",
    "end": "1950720"
  },
  {
    "text": "this is the main challenge that's it's tempting um to if you can give have that",
    "start": "1950720",
    "end": "1957159"
  },
  {
    "text": "visibility it's tempting to just collect information about all file operations",
    "start": "1957159",
    "end": "1963120"
  },
  {
    "text": "for example you can do that sure uh you will be overloaded with data super super",
    "start": "1963120",
    "end": "1968279"
  },
  {
    "text": "quickly so um while using uh vpf for for collecting uh information from about",
    "start": "1968279",
    "end": "1976559"
  },
  {
    "text": "what is going going on in in the kernel with um enhancing it with with some",
    "start": "1976559",
    "end": "1982519"
  },
  {
    "text": "kubernetes context for example um I think platform teams need to think uh a",
    "start": "1982519",
    "end": "1988720"
  },
  {
    "text": "little bit more what they really need and um yeah really configure the tools",
    "start": "1988720",
    "end": "1994840"
  },
  {
    "text": "to to collect what they need not everything yeah I mean of course I agree",
    "start": "1994840",
    "end": "2002159"
  },
  {
    "text": "with everything that's been said uh so far but I think you know saying something that probably a lot of people people don't really want to hear is like",
    "start": "2002159",
    "end": "2009880"
  },
  {
    "text": "understand what it is that you're doing there right um because also everything",
    "start": "2009880",
    "end": "2015519"
  },
  {
    "text": "that each of us are saying here we typically you know have our own bias because it comes from what we happen to",
    "start": "2015519",
    "end": "2021240"
  },
  {
    "text": "work on so for example the performance overhead um aspect you know for our",
    "start": "2021240",
    "end": "2026799"
  },
  {
    "text": "purpose is actually extremely well defined and you know it we don't really",
    "start": "2026799",
    "end": "2032240"
  },
  {
    "text": "ever run into that problem being that being a problem because it's very configurable on the frequency that we",
    "start": "2032240",
    "end": "2039000"
  },
  {
    "text": "happen to profile at right and so yeah you know I",
    "start": "2039000",
    "end": "2044080"
  },
  {
    "text": "know everybody just wants the magic wand um to solve all the problems but you",
    "start": "2044080",
    "end": "2049118"
  },
  {
    "text": "know I think there's something to it to actually understand what it is that you're doing whether it's for data the amount of data or the amount of",
    "start": "2049119",
    "end": "2055200"
  },
  {
    "text": "privilege you're giving this stuff um you know or security reasons unfortunately it's still best to",
    "start": "2055200",
    "end": "2061118"
  },
  {
    "text": "understand what you're doing okay and to close out the panel we have the lightning round you each get",
    "start": "2061119",
    "end": "2066398"
  },
  {
    "text": "10s seconds what is the future of ebpf for",
    "start": "2066399",
    "end": "2071679"
  },
  {
    "text": "[Laughter]",
    "start": "2072000",
    "end": "2078440"
  },
  {
    "text": "observability I mean I I guess you know we're it's going to become extremely pilent like we we see all of these",
    "start": "2078440",
    "end": "2085158"
  },
  {
    "text": "different things happening and I think you know um individual instrumentation on an application Level is just going to",
    "start": "2085159",
    "end": "2090919"
  },
  {
    "text": "become less and less yeah it's it's going to be everywhere I think I think um BPF itself",
    "start": "2090919",
    "end": "2099440"
  },
  {
    "text": "will will be easier to to use I I hope to see more and more people really",
    "start": "2099440",
    "end": "2105000"
  },
  {
    "text": "writing vpf code um because uh it's it's getting easier the verifier is getting",
    "start": "2105000",
    "end": "2111599"
  },
  {
    "text": "more sophisticated so yeah it's it's going to be",
    "start": "2111599",
    "end": "2116839"
  },
  {
    "text": "everywhere uh yeah I think that that ebpf is going to be completely prominent as kind of the data source of getting",
    "start": "2116839",
    "end": "2122960"
  },
  {
    "text": "most of the data for observability uh its closeness to the infrastructure will open up new new use cases with the cloud",
    "start": "2122960",
    "end": "2128920"
  },
  {
    "text": "vendors suddenly you're going to be served with an infrastructure kind of pre- ready for observability and get all",
    "start": "2128920",
    "end": "2134640"
  },
  {
    "text": "this data without doing anything so uh it's definitely the future and uh most",
    "start": "2134640",
    "end": "2140000"
  },
  {
    "text": "solutions you're going to be using will be moving to getting more of their data from it as as far as I'm",
    "start": "2140000",
    "end": "2146040"
  },
  {
    "text": "concern yes I mean I agree with everything you said I think it's definitely only the beginning of what we",
    "start": "2146040",
    "end": "2151079"
  },
  {
    "text": "can do with with the BPF and we're only going to see more of it it's going to be easier and we're going to be able to do",
    "start": "2151079",
    "end": "2157000"
  },
  {
    "text": "much more things with it and so expect to see more of it great thank you for coming and thank",
    "start": "2157000",
    "end": "2162640"
  },
  {
    "text": "you to all of our panelists thank",
    "start": "2162640",
    "end": "2166519"
  },
  {
    "text": "you if you guys have any questions you could use the microphone in the middle we only have time for a couple",
    "start": "2169720",
    "end": "2177480"
  },
  {
    "text": "though thought we hey y'all hey y'all how you doing I got",
    "start": "2184079",
    "end": "2190160"
  },
  {
    "text": "I got a quick question yeah um so I heard a little bit of highlighting like some of the security implementation uh",
    "start": "2190160",
    "end": "2197000"
  },
  {
    "text": "imple imple security issues with like every loader kind of having cap UPF to",
    "start": "2197000",
    "end": "2203160"
  },
  {
    "text": "do what it does today um have you had any real world examples of that being a",
    "start": "2203160",
    "end": "2209119"
  },
  {
    "text": "problem so far or is it more of like in the future you see it as being problem",
    "start": "2209119",
    "end": "2214560"
  },
  {
    "text": "so we haven't really like often times it's more that like ebpf as a technology",
    "start": "2214560",
    "end": "2219839"
  },
  {
    "text": "once needs to go through a security team or something like that but the reality is after that like with Enterprise",
    "start": "2219839",
    "end": "2225680"
  },
  {
    "text": "contracts and stuff you basically have a line in there that says you know you're not going to do anything bad like that's",
    "start": "2225680",
    "end": "2232079"
  },
  {
    "text": "that's you know at the end of the day how Enterprise sales um and contracts work so not really a problem yeah I",
    "start": "2232079",
    "end": "2239440"
  },
  {
    "text": "think I think to dat the trade of is given what we can do with BPF uh it's obvious we're going to use it despite",
    "start": "2239440",
    "end": "2245400"
  },
  {
    "text": "the the security and the potential security implications however I expect that in the future uh we have much more",
    "start": "2245400",
    "end": "2252000"
  },
  {
    "text": "control in what we can do like programs will be signed the types of hook points you can you can you can hook to will be",
    "start": "2252000",
    "end": "2257440"
  },
  {
    "text": "will be limited and this is just barely starting okay and then one more quick question in terms of debug ability is",
    "start": "2257440",
    "end": "2264079"
  },
  {
    "text": "there a go-to solution for like a kubernetes cluster today like do all of your companies have their own debug",
    "start": "2264079",
    "end": "2269760"
  },
  {
    "text": "ability Stacks they use like you know BPF tool containers that they run privileged to debug St on thee shared",
    "start": "2269760",
    "end": "2277280"
  },
  {
    "text": "solution that you often use I mean we all work on pretty different things so each of them are separate Solutions yeah",
    "start": "2277280",
    "end": "2284480"
  },
  {
    "text": "CU we got continuous profiling security APM",
    "start": "2284480",
    "end": "2289960"
  },
  {
    "text": "and yeah yeah I guess at the moment a lot of this tooling is still kernel",
    "start": "2289960",
    "end": "2295960"
  },
  {
    "text": "development tooling like the bugers that are used by kernel Developers for us at least do you run into cases where you",
    "start": "2295960",
    "end": "2301800"
  },
  {
    "text": "have to deploy or debug the like management of BPF on the no that would",
    "start": "2301800",
    "end": "2306920"
  },
  {
    "text": "be more generic across all your different systems so maybe a pin isn't working correctly and a program gets",
    "start": "2306920",
    "end": "2313839"
  },
  {
    "text": "cleaned up on reboot or stuff like that yeah so so we have um some like um",
    "start": "2313839",
    "end": "2321240"
  },
  {
    "text": "developer tool which is uh basically monitoring in a kubernetes cluster what",
    "start": "2321240",
    "end": "2327400"
  },
  {
    "text": "programs are running what BPF maps are loaded in the cluster and it's",
    "start": "2327400",
    "end": "2332839"
  },
  {
    "text": "integrated um with like other other um",
    "start": "2332839",
    "end": "2338520"
  },
  {
    "text": "kubernetes tools like kate9 so uh yeah is visualizing this information similar",
    "start": "2338520",
    "end": "2343960"
  },
  {
    "text": "way we have something like that uh it's like something hacked just to help us a bit cool thank",
    "start": "2343960",
    "end": "2351640"
  },
  {
    "text": "you hi uh most of the pain points seem to be around usability and like developing for it uh other than the",
    "start": "2351640",
    "end": "2357160"
  },
  {
    "text": "security concern are there any other conceptual issues that you can see in the long run or things that evf will have to adapt to or maybe Harden moving",
    "start": "2357160",
    "end": "2365440"
  },
  {
    "text": "forward",
    "start": "2365440",
    "end": "2368440"
  },
  {
    "text": "I think just from the the from an accessibility perspective people are basically using Cloud right so in a",
    "start": "2372400",
    "end": "2379200"
  },
  {
    "text": "sense it's not yet fully accessible to all the platforms you will be using so for example fargate and stuff like that",
    "start": "2379200",
    "end": "2384280"
  },
  {
    "text": "there are abstractions that would prevent you from using evf so keep that in mind so in a sense it's feasible but",
    "start": "2384280",
    "end": "2390640"
  },
  {
    "text": "you can't do that uh or stuff like that so the community is solving all that but",
    "start": "2390640",
    "end": "2395760"
  },
  {
    "text": "currently it's not always accessible all right thank if the AWS um PM for fargate",
    "start": "2395760",
    "end": "2402480"
  },
  {
    "text": "is in the in the room we've all been uh feeling this pain for the last two years",
    "start": "2402480",
    "end": "2407880"
  },
  {
    "text": "it's coming right yes that's what they've been saying for the last two",
    "start": "2407880",
    "end": "2413519"
  },
  {
    "text": "years you",
    "start": "2416880",
    "end": "2423200"
  }
]