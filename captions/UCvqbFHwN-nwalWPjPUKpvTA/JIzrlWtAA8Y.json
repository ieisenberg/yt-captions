[
  {
    "text": "hi everyone uh welcome to the Sig instrumentation deep dive uh we're going",
    "start": "1820",
    "end": "7500"
  },
  {
    "text": "to start by introducing ourselves hello everyone so I'm dinner Grace in it",
    "start": "7500",
    "end": "12840"
  },
  {
    "text": "um I work for Reddit as a software engineer um I've been working on the bunch of mentoring for two years I guess",
    "start": "12840",
    "end": "18539"
  },
  {
    "text": "and now I switched to the API server and I also I'm a co-tech lead for C",
    "start": "18539",
    "end": "24480"
  },
  {
    "text": "instrumentation hey everyone I'm David ashpol I'm the other Tech lead for Sig instrumentation",
    "start": "24480",
    "end": "30439"
  },
  {
    "text": "I've been working on Cube for five or six years now and uh yeah I work for Google",
    "start": "30439",
    "end": "37860"
  },
  {
    "text": "hey everyone I'm Han uh I've been sharing Sig instrumentation for about three years now",
    "start": "37860",
    "end": "43800"
  },
  {
    "text": "um working on kubernetes for about four years um yeah and",
    "start": "43800",
    "end": "48840"
  },
  {
    "text": "let's let's go into sick instrumentation",
    "start": "48840",
    "end": "53600"
  },
  {
    "text": "uh this is our agenda we're first going to talk about what state instrumentation actually is and what we do",
    "start": "54300",
    "end": "61320"
  },
  {
    "text": "then we're going to talk about our Sig sub projects things that we hope you guys may",
    "start": "61320",
    "end": "67939"
  },
  {
    "text": "participate and contribute to then we're going to go into some of our main themes of work streams that we work",
    "start": "67939",
    "end": "75780"
  },
  {
    "text": "on like logs and traces and metrics and then we'll talk about how you can contribute and where you can find us",
    "start": "75780",
    "end": "85340"
  },
  {
    "text": "first let's go over the charter um yeah the charter is basically to",
    "start": "85740",
    "end": "91080"
  },
  {
    "text": "cover the best practices for observability across kubernetes components so basically this means",
    "start": "91080",
    "end": "98159"
  },
  {
    "text": "while we don't own individual metrics we own the practices and sort of the format",
    "start": "98159",
    "end": "104100"
  },
  {
    "text": "and the tools that people use to instrument kubernetes components like the cube API server the scheduler",
    "start": "104100",
    "end": "111000"
  },
  {
    "text": "controller manager all of these things that you are familiar with",
    "start": "111000",
    "end": "116040"
  },
  {
    "text": "um we have a large number of sub-projects here we have listed Cube State metrics",
    "start": "116040",
    "end": "121680"
  },
  {
    "text": "you guys probably have heard of it it's quite popular K log which is used basically in all kubernetes components",
    "start": "121680",
    "end": "128459"
  },
  {
    "text": "metric server which is used for auto scaling and we have many more",
    "start": "128459",
    "end": "134040"
  },
  {
    "text": "sub-projects we also work a lot on metrics so",
    "start": "134040",
    "end": "140780"
  },
  {
    "text": "Prometheus metrics which are instrumented across all of our kubernetes components",
    "start": "140780",
    "end": "146420"
  },
  {
    "text": "and logs which are also in all kubernetes",
    "start": "146420",
    "end": "152700"
  },
  {
    "text": "components we're working on structured logging uh that way you can get you know structured format instead of",
    "start": "152700",
    "end": "160620"
  },
  {
    "text": "dealing with freeform text and events as well as traces",
    "start": "160620",
    "end": "168019"
  },
  {
    "text": "so how do we do it we have bi-weekly triage meetings where we go through you",
    "start": "168840",
    "end": "175140"
  },
  {
    "text": "know all Sig instrumentation related issues and PR's we triage them we assign",
    "start": "175140",
    "end": "180720"
  },
  {
    "text": "them to contributors that join us and we hope that you guys will join us",
    "start": "180720",
    "end": "188099"
  },
  {
    "text": "um we review all code changes for metrics and we developed new features and",
    "start": "188099",
    "end": "193260"
  },
  {
    "text": "enhancements and we'll go over some of the things that we're working on in this talk and we also maintain sub-projects are",
    "start": "193260",
    "end": "200760"
  },
  {
    "text": "the large number of sub-projects that we have all right for sub projects",
    "start": "200760",
    "end": "208260"
  },
  {
    "text": "yeah so thank you and for the introduction I will go through this project some of which I'm more familiar",
    "start": "208260",
    "end": "214560"
  },
  {
    "text": "with since I am also contributing to them um so the three most popular sub-project",
    "start": "214560",
    "end": "222000"
  },
  {
    "text": "that we have and that the group um kind of govern as well as help uh to",
    "start": "222000",
    "end": "228239"
  },
  {
    "text": "like better at the community in general uh Keepsake metric Matrix server and Primitives adapter",
    "start": "228239",
    "end": "234420"
  },
  {
    "text": "um even though like you may not have heard of some of them uh I will explain like their purpose and why their entire",
    "start": "234420",
    "end": "240360"
  },
  {
    "text": "scope as well um so the first one is keep statement trick uh quite the most popular and the",
    "start": "240360",
    "end": "246000"
  },
  {
    "text": "one the child the most likely to have running alongside your kubernetes cluster um so crypto metric is a simple",
    "start": "246000",
    "end": "252420"
  },
  {
    "text": "Prometheus exporter which is like a piece of software that is able to convert any third-party data into",
    "start": "252420",
    "end": "260220"
  },
  {
    "text": "primitive into metrics in the promises format and in the case of keep State metric we are getting metrics from all",
    "start": "260220",
    "end": "267360"
  },
  {
    "text": "the kubernetes objects in general since those can be quite insightful in the",
    "start": "267360",
    "end": "272400"
  },
  {
    "text": "cluster but the reason why this is not part of kubernetes directly is because the metrics can be quite variable and",
    "start": "272400",
    "end": "279660"
  },
  {
    "text": "maybe out of scope for like the normal kubernetes setup so we have like this exporter to expose this kind of data",
    "start": "279660",
    "end": "287180"
  },
  {
    "text": "and for an example like we have metrics about pose about deployment about Staples that are useful in order to get",
    "start": "287180",
    "end": "293940"
  },
  {
    "text": "any insights on your cluster or even like start building alerts when I don't know a deployment is failing or whatever",
    "start": "293940",
    "end": "301620"
  },
  {
    "text": "and some of the example that we have is that the cube deployment spec replica which allows you to know at one point in",
    "start": "301620",
    "end": "309360"
  },
  {
    "text": "time how much replica your deployment had as well as the studies of the replica dated which means that if there",
    "start": "309360",
    "end": "316800"
  },
  {
    "text": "was some failures during a running update or whatever like you would be able to know it via this metric so it's",
    "start": "316800",
    "end": "323340"
  },
  {
    "text": "really insightful to investigate some values and how this keep State metric does that",
    "start": "323340",
    "end": "329160"
  },
  {
    "text": "is so cubesat magic is watching for events on GPI server on a regular basis",
    "start": "329160",
    "end": "335220"
  },
  {
    "text": "and whenever there is a new object that is created updated or that there is any",
    "start": "335220",
    "end": "340500"
  },
  {
    "text": "like mutation towards an object on kubernetes cubesat Metric will get that information and convert it into a metric",
    "start": "340500",
    "end": "347699"
  },
  {
    "text": "that would then be able to be collected by Primitives and you would be then able to create others on it",
    "start": "347699",
    "end": "354900"
  },
  {
    "text": "um another project that is that you may not have heard of but like might be running a new cluster because like it's",
    "start": "354900",
    "end": "361320"
  },
  {
    "text": "essential nowadays in a kubernetes cluster which is metric server it",
    "start": "361320",
    "end": "366539"
  },
  {
    "text": "implements one of the API that we support as a group which is the resource metrics API",
    "start": "366539",
    "end": "372060"
  },
  {
    "text": "um which is like the metric that is under command such as cube cattle top that essentially like allows you to know",
    "start": "372060",
    "end": "379139"
  },
  {
    "text": "the resource your usage of your pods and nodes as well and some other and other",
    "start": "379139",
    "end": "385319"
  },
  {
    "text": "use cases of this API is for auto scaling so most of the basic Auto",
    "start": "385319",
    "end": "390479"
  },
  {
    "text": "scaling is done via the resource Matrix API where you can specify to the auto scaler at which point in terms of CPU",
    "start": "390479",
    "end": "397800"
  },
  {
    "text": "usage do you want a new replica of your application uh and this is done by a dapi that uh",
    "start": "397800",
    "end": "404880"
  },
  {
    "text": "with uh like we own as a group um and it does that like essentially",
    "start": "404880",
    "end": "410160"
  },
  {
    "text": "it's what we call an aggregated API serimetric server which is like some",
    "start": "410160",
    "end": "415740"
  },
  {
    "text": "kind of third-party API server through which the API server which send Auto scaling request to and then metric",
    "start": "415740",
    "end": "424259"
  },
  {
    "text": "server itself will grab the CPU usage or memory usage in the cubelet and then",
    "start": "424259",
    "end": "430680"
  },
  {
    "text": "return all this information to the Q API server so if you have an application let's say Cube control that tries to get",
    "start": "430680",
    "end": "437000"
  },
  {
    "text": "CPUs edge info then it will go through the API server and then metric server",
    "start": "437000",
    "end": "443280"
  },
  {
    "text": "uh another project that is quite similar but has a more bigger purpose I would say",
    "start": "443280",
    "end": "449099"
  },
  {
    "text": "um is primitive adapter which supports the three Auto scaling API that we kind",
    "start": "449099",
    "end": "456780"
  },
  {
    "text": "of own as a group which is the resource custom and external Matrix API",
    "start": "456780",
    "end": "461940"
  },
  {
    "text": "um what it does is that well there is some limitation when you are doing Auto scaling with metric servers since you",
    "start": "461940",
    "end": "467819"
  },
  {
    "text": "only have like usage metrics and you might want I don't know like Toyota scale your application based on the",
    "start": "467819",
    "end": "473759"
  },
  {
    "text": "number of requests that are currently being processed by your application um and that is done via primitive",
    "start": "473759",
    "end": "479880"
  },
  {
    "text": "software for example but there are many other adapters as long as they support the custom or external Matrix API they",
    "start": "479880",
    "end": "485400"
  },
  {
    "text": "should be able to Auto Scale based on any kind of signal and in the case of primitive setup what",
    "start": "485400",
    "end": "491280"
  },
  {
    "text": "it does is that when it receives a call from the API server to get like I don't",
    "start": "491280",
    "end": "496860"
  },
  {
    "text": "know metrics about like the number of item in your rabbit mqq and then it will",
    "start": "496860",
    "end": "501900"
  },
  {
    "text": "convert that request to a prompt code query and query Primitives that uh and",
    "start": "501900",
    "end": "507660"
  },
  {
    "text": "create the Primitive server directly and return you the results so that your auto",
    "start": "507660",
    "end": "513120"
  },
  {
    "text": "scaling pipeline will be able to directly like contact from this adapter to get any kind of information that",
    "start": "513120",
    "end": "518700"
  },
  {
    "text": "would be related to your application",
    "start": "518700",
    "end": "523159"
  },
  {
    "text": "um so now that we gone through like a couple of the project that we own uh I",
    "start": "523919",
    "end": "528959"
  },
  {
    "text": "will go through the like we as I mentioned in the beginning we own the",
    "start": "528959",
    "end": "534779"
  },
  {
    "text": "three major obserability signal as part of our Sig and I will now go through the logs so",
    "start": "534779",
    "end": "541080"
  },
  {
    "text": "um with the logs like we own the infrastructures around logging kubernetes as well as some parts of the",
    "start": "541080",
    "end": "548279"
  },
  {
    "text": "logging output that is produced by all the kubernetes components like we don't hold what the other group are doing with",
    "start": "548279",
    "end": "555300"
  },
  {
    "text": "the logs and how they produce it but we are responsible for helping them writing",
    "start": "555300",
    "end": "561240"
  },
  {
    "text": "logging into their code as well as like writing a good on how to write a good",
    "start": "561240",
    "end": "566519"
  },
  {
    "text": "log um line in general and we've invested quite a lot the past",
    "start": "566519",
    "end": "572339"
  },
  {
    "text": "couple of years in logging because well before we had no real structure in our",
    "start": "572339",
    "end": "577800"
  },
  {
    "text": "login the format was essentially iterated from the Kellog which is like",
    "start": "577800",
    "end": "583740"
  },
  {
    "text": "the logging tool that we are using to produce log all of the kubernetes and it was just a basic string so whenever you",
    "start": "583740",
    "end": "590220"
  },
  {
    "text": "wanted to collate that with any other signal or try to do some pattern",
    "start": "590220",
    "end": "595500"
  },
  {
    "text": "matching with it you would have to go through like some complex regular expression pattern matching so it wasn't",
    "start": "595500",
    "end": "601560"
  },
  {
    "text": "ideal so we came up with what we call structured logging which where we try to",
    "start": "601560",
    "end": "608959"
  },
  {
    "text": "have like built some kind of format or run log run logs in general so that they",
    "start": "608959",
    "end": "614220"
  },
  {
    "text": "can be easily correlated and aggregated by a third party like a logging platform",
    "start": "614220",
    "end": "620040"
  },
  {
    "text": "uh and in general we try to have fields that are strings that are constant so",
    "start": "620040",
    "end": "625500"
  },
  {
    "text": "that we can have patterns that are will turn between logs as well as key value",
    "start": "625500",
    "end": "631500"
  },
  {
    "text": "pairs that can be used in later on and we have two formats for those today uh the first one is text based which is",
    "start": "631500",
    "end": "638399"
  },
  {
    "text": "mostly used by developers because it's quite easy to go through and being able",
    "start": "638399",
    "end": "643500"
  },
  {
    "text": "to investigate it is way simpler than Json and then we also have Json which is what most of the logging platform today",
    "start": "643500",
    "end": "650700"
  },
  {
    "text": "ingest and then it's easier for this platform to build querying on top of",
    "start": "650700",
    "end": "656760"
  },
  {
    "text": "these log lines since like Json is more formatted in general so that's what we have worked on for the",
    "start": "656760",
    "end": "663480"
  },
  {
    "text": "past couple of releases it was first fully integrated in the cubelete in 121",
    "start": "663480",
    "end": "669240"
  },
  {
    "text": "with the help of a lot of various contributors because it was a very big effort",
    "start": "669240",
    "end": "675380"
  },
  {
    "text": "as well as later on added to the cube scheduler which took quite some time because there was some Recaps but we",
    "start": "675380",
    "end": "682380"
  },
  {
    "text": "have done that in 124 and in general there are still like many kubernetes",
    "start": "682380",
    "end": "688320"
  },
  {
    "text": "components where we would want to add structure loggings and that's why we need even more contributors to help us",
    "start": "688320",
    "end": "695040"
  },
  {
    "text": "build that in kubernetes [Music] um and one effort that we've also found",
    "start": "695040",
    "end": "702120"
  },
  {
    "text": "while doing that was that the previous logging tool or like the link into that we are using uh in",
    "start": "702120",
    "end": "708899"
  },
  {
    "text": "kubernetes component which is klog has a lot of flags which might not be",
    "start": "708899",
    "end": "715079"
  },
  {
    "text": "um meaningful nowadays and it's like that you might more see like on the",
    "start": "715079",
    "end": "720360"
  },
  {
    "text": "logging platform resident the actual login client so we've initiated a",
    "start": "720360",
    "end": "726480"
  },
  {
    "text": "duplication as well as a removal in all kubernetes components and this will be",
    "start": "726480",
    "end": "732360"
  },
  {
    "text": "like these plugs will be removed in 126 so if you are a component owner that are still using these flags make sure to be",
    "start": "732360",
    "end": "741060"
  },
  {
    "text": "wary of it because like we will remove it in the next release um but that's one Viewpoint for any",
    "start": "741060",
    "end": "747540"
  },
  {
    "text": "normal Kellogg users because we've only we're only doing that for the kubernetes components uh like any normal user of",
    "start": "747540",
    "end": "754620"
  },
  {
    "text": "Kellogg wouldn't have like the flag removed um and we've done that to reduce like",
    "start": "754620",
    "end": "760500"
  },
  {
    "text": "the maintenance burden and that include like with klog in general because there",
    "start": "760500",
    "end": "765720"
  },
  {
    "text": "was like way too many flags and if you want to have a look at this particular effort there is a cap attached to the",
    "start": "765720",
    "end": "771600"
  },
  {
    "text": "slide that you can check um but like now that we've had like",
    "start": "771600",
    "end": "777060"
  },
  {
    "text": "structure logging we've noticed that it wasn't uh complete like we still had",
    "start": "777060",
    "end": "782880"
  },
  {
    "text": "some way to improve logging in general which was to add context in what we called contextual logging uh and this is",
    "start": "782880",
    "end": "790320"
  },
  {
    "text": "new in kubernetes like we've added it in Alpha in 124 and there is only a couple",
    "start": "790320",
    "end": "796620"
  },
  {
    "text": "of components that have it today um gig uh behind contextual login is",
    "start": "796620",
    "end": "801779"
  },
  {
    "text": "that if you were to do logging in kubernetes today you would have to just inherit from like a global logger",
    "start": "801779",
    "end": "809700"
  },
  {
    "text": "that you would share like between audio processes and all your your components which is not ideal if you try it if you",
    "start": "809700",
    "end": "816839"
  },
  {
    "text": "want to have very specific behavior depending on the scenario you are in so",
    "start": "816839",
    "end": "822240"
  },
  {
    "text": "what we did is that now we will pass the logo via the the context which means that along your call chain you will be",
    "start": "822240",
    "end": "829980"
  },
  {
    "text": "able to modify the the logger and add some new information to it the most",
    "start": "829980",
    "end": "836040"
  },
  {
    "text": "common use cases that we would have is to make sure that once you reach a certain point in the cold chain you had",
    "start": "836040",
    "end": "842339"
  },
  {
    "text": "a key value pairs to all the logs that will be produced via this context so",
    "start": "842339",
    "end": "848100"
  },
  {
    "text": "let's say you are in the scheduler and you want that all the calls related to",
    "start": "848100",
    "end": "855120"
  },
  {
    "text": "report being scheduled attach the name of the Pod then you will be able to do that via contextual login just by",
    "start": "855120",
    "end": "861560"
  },
  {
    "text": "enforcing this particular level and value to all the logs uh",
    "start": "861560",
    "end": "867959"
  },
  {
    "text": "and yeah this is implemented by a new API in Kellogg that was introduced by the group and there is like many uh card",
    "start": "867959",
    "end": "876480"
  },
  {
    "text": "changes that will need to be made in order to spread that over all documentaries component and we really",
    "start": "876480",
    "end": "882660"
  },
  {
    "text": "need like some additional contribution uh in that for that part of the code",
    "start": "882660",
    "end": "889500"
  },
  {
    "text": "yes come please help us okay and and we will need additional contributors the",
    "start": "889500",
    "end": "895620"
  },
  {
    "text": "working group structure logging so I'm talked about the groups instrumentation but in kubernetes there is also the",
    "start": "895620",
    "end": "903300"
  },
  {
    "text": "working group which has like kind of smaller groups that are like related to",
    "start": "903300",
    "end": "909120"
  },
  {
    "text": "a Sig but are very dedicated to one particular area of the code like in the case of structure logging it was first",
    "start": "909120",
    "end": "915360"
  },
  {
    "text": "meant to introduced a way to build structure logging kubernetes but now it has a bit bigger purpose since it's also",
    "start": "915360",
    "end": "922079"
  },
  {
    "text": "had to cover like contextual logging um there are two organizers um Eric and Patrick you can reach out to",
    "start": "922079",
    "end": "928680"
  },
  {
    "text": "them via this their stock Channel and you can go through also the bi-weekly",
    "start": "928680",
    "end": "933779"
  },
  {
    "text": "meetings if you want to contribute um and this is one of the best area to",
    "start": "933779",
    "end": "939660"
  },
  {
    "text": "contribute I guess as a new kubernetes contributors because you will be able to discover very various part of the code",
    "start": "939660",
    "end": "946139"
  },
  {
    "text": "base since like everything needs to be changed in terms of logging you will be able to have your hand into many aspects",
    "start": "946139",
    "end": "952320"
  },
  {
    "text": "of the code base and it's also like well documented how to do the change so",
    "start": "952320",
    "end": "957360"
  },
  {
    "text": "that's a really good idea to start your contribution career I guess",
    "start": "957360",
    "end": "962779"
  },
  {
    "text": "foreign cool let's talk about traces traces are exciting and actually pretty",
    "start": "963420",
    "end": "969779"
  },
  {
    "text": "new to the kubernetes project so um so first what is distributed tracing",
    "start": "969779",
    "end": "975779"
  },
  {
    "text": "just really briefly um if a user makes a request to something",
    "start": "975779",
    "end": "981480"
  },
  {
    "text": "it often passes through a variety of services along its path and we'd like to",
    "start": "981480",
    "end": "986820"
  },
  {
    "text": "have an idea of what path that particular request took and maybe it would be great if we got a",
    "start": "986820",
    "end": "993180"
  },
  {
    "text": "cool graph or something that showed that to us visually and that's what tracing provides so there's a thing called a",
    "start": "993180",
    "end": "999120"
  },
  {
    "text": "trace context that's propagated between components in your microservice architecture and that has a trace ID and",
    "start": "999120",
    "end": "1006500"
  },
  {
    "text": "span ID and with that each component can produce Telemetry that we call spans",
    "start": "1006500",
    "end": "1012800"
  },
  {
    "text": "that have a single unifying attribute across all of them and that way some Trace backend can",
    "start": "1012800",
    "end": "1019759"
  },
  {
    "text": "stitch those all together into a graph like you see there below",
    "start": "1019759",
    "end": "1024699"
  },
  {
    "text": "so in kubernetes we have a couple components that look very similar to this diagram here the main one being the",
    "start": "1026660",
    "end": "1033798"
  },
  {
    "text": "cube API server and FCD but also we've gone ahead and instrumented the cubelet and container runtime as well which sort",
    "start": "1033799",
    "end": "1040760"
  },
  {
    "text": "of requests back and forth to each other um a few things to note we use open",
    "start": "1040760",
    "end": "1046520"
  },
  {
    "text": "Telemetry the open Telemetry go project has been stable for more than a year now so that's what we use for tracing and we",
    "start": "1046520",
    "end": "1053419"
  },
  {
    "text": "export our traces in the open Telemetry format um",
    "start": "1053419",
    "end": "1059260"
  },
  {
    "text": "okay so what's the current state so API server tracing was introduced in kubernetes 122 and is planning to go",
    "start": "1060559",
    "end": "1067880"
  },
  {
    "text": "beta in 126 so now is the time to try it out now is the time to provide feedback feel free to hit me up on slack",
    "start": "1067880",
    "end": "1075140"
  },
  {
    "text": "um if you have any any thoughts or if you've tried it out and want want to see anything different",
    "start": "1075140",
    "end": "1080620"
  },
  {
    "text": "cubeletracing was just released as Alpha in 125 and that's really exciting",
    "start": "1080620",
    "end": "1086720"
  },
  {
    "text": "and another big thing to call out that many of you may have been impacted by before 126 which is like now",
    "start": "1086720",
    "end": "1095559"
  },
  {
    "text": "we used an unstable version of the open Telemetry Library so if you were trying to use open Telemetry and kubernetes",
    "start": "1095559",
    "end": "1102740"
  },
  {
    "text": "client libraries at the same time you might have had some problems but don't worry those are resolved now yay",
    "start": "1102740",
    "end": "1109760"
  },
  {
    "text": "okay so let's dive a little bit deeper into API server tracing because that's been a",
    "start": "1110419",
    "end": "1116360"
  },
  {
    "text": "fun project I've been working on so this is what it initially looked like in Jaeger which is another cncf project as",
    "start": "1116360",
    "end": "1124220"
  },
  {
    "text": "of kubernetes 122. it's pretty Bare Bones like you can see the top span",
    "start": "1124220",
    "end": "1129460"
  },
  {
    "text": "is for the user's call to the API server an API server serving that and then the",
    "start": "1129460",
    "end": "1135080"
  },
  {
    "text": "middle one is the API servers at CD client making a request at CD and the",
    "start": "1135080",
    "end": "1140240"
  },
  {
    "text": "bottom one is actually coming from FCD and is responding to the API server",
    "start": "1140240",
    "end": "1146980"
  },
  {
    "text": "so as an aside there's been this thing that's existed in kubernetes for a long",
    "start": "1147500",
    "end": "1152539"
  },
  {
    "text": "time which is called I refer to as log base tracing so basically there's",
    "start": "1152539",
    "end": "1158240"
  },
  {
    "text": "something that looks very much like Trace instrumentation already sprinkled across the kubernetes code base and if",
    "start": "1158240",
    "end": "1164660"
  },
  {
    "text": "something takes a long time you'll get this giant blob of of log lines printed out that sort of looks kind of like a",
    "start": "1164660",
    "end": "1171679"
  },
  {
    "text": "trace and tells you you know sort of what happened and so one of the improvements that landed I think",
    "start": "1171679",
    "end": "1178100"
  },
  {
    "text": "yesterday um is that we were actually able to sort of",
    "start": "1178100",
    "end": "1183679"
  },
  {
    "text": "sneak in and change those calls to also integrate with open Telemetry based tracing so now you can see the red boxes",
    "start": "1183679",
    "end": "1191240"
  },
  {
    "text": "there highlighting some of the new things that have come from using existing text-based instrumentation and",
    "start": "1191240",
    "end": "1197480"
  },
  {
    "text": "migrating that to also use open Telemetry and actually I have a really quick demo",
    "start": "1197480",
    "end": "1203840"
  },
  {
    "text": "so let's do that so first I'm going to start up",
    "start": "1203840",
    "end": "1211700"
  },
  {
    "text": "start up a Jaeger pod locally and second I've written this it's",
    "start": "1211700",
    "end": "1218000"
  },
  {
    "text": "actually just a modified version of the API server integration test but basically",
    "start": "1218000",
    "end": "1223880"
  },
  {
    "text": "I'm going to configure API server tracing like so and set it to 100 sampling rate",
    "start": "1223880",
    "end": "1231260"
  },
  {
    "text": "I'm going to pass that to it and then I've also turned on at CDs tracing here",
    "start": "1231260",
    "end": "1236299"
  },
  {
    "text": "just for the integration test and I've got it going to a local",
    "start": "1236299",
    "end": "1242360"
  },
  {
    "text": "otlp endpoint which is supported by Jaeger",
    "start": "1242360",
    "end": "1247780"
  },
  {
    "text": "and this will take 15 seconds oh",
    "start": "1249980",
    "end": "1255340"
  },
  {
    "text": "how do I clear the cache how do I clear the test cache do you remember",
    "start": "1255380",
    "end": "1262179"
  },
  {
    "text": "nice let's do it okay",
    "start": "1262940",
    "end": "1268940"
  },
  {
    "text": "there we go so this will take 15 seconds um let me pop over here",
    "start": "1268940",
    "end": "1277179"
  },
  {
    "text": "so Jaeger's up and running but it doesn't have any traces yet",
    "start": "1277220",
    "end": "1281679"
  },
  {
    "text": "okay there it went so now we should be able to pop in here and go oh the other thing I meant to mention is the API call",
    "start": "1291799",
    "end": "1299120"
  },
  {
    "text": "that this is making is it's creating a node object so that's what we've done set up an API server create a node and",
    "start": "1299120",
    "end": "1304940"
  },
  {
    "text": "let's see what kind of traces we get back",
    "start": "1304940",
    "end": "1308919"
  },
  {
    "text": "so I'll do API server and I'll go ahead and look for a create operation",
    "start": "1313400",
    "end": "1320679"
  },
  {
    "text": "and then I'll click on the first result and there we go so this is actually the",
    "start": "1321799",
    "end": "1327320"
  },
  {
    "text": "same as that screenshot but it's much more fun because I can actually go in and look at all the interesting",
    "start": "1327320",
    "end": "1332360"
  },
  {
    "text": "attributes and stuff that have been added here all that actually existed in API server code",
    "start": "1332360",
    "end": "1338960"
  },
  {
    "text": "probably has existed for years but hopefully is now much much more usable",
    "start": "1338960",
    "end": "1346539"
  },
  {
    "text": "and so if I were trying to debug some issue with a create call it would be much easier",
    "start": "1347960",
    "end": "1353299"
  },
  {
    "text": "now because I can see a lot of details about exactly what was happening",
    "start": "1353299",
    "end": "1358059"
  },
  {
    "text": "okay cool let's let's talk briefly about the cubelet tracing so this is a cubelet",
    "start": "1363860",
    "end": "1369380"
  },
  {
    "text": "trace from the trace feature that landed in 125. and it's pretty basic to be",
    "start": "1369380",
    "end": "1375980"
  },
  {
    "text": "honest so what you can see is the top line is from the cubelet and that is when the cubelet started the",
    "start": "1375980",
    "end": "1381620"
  },
  {
    "text": "request uh to create a container and then the bottom line is from the container",
    "start": "1381620",
    "end": "1386720"
  },
  {
    "text": "runtime which is where it's serving the request to create a container so as you can see it's basically the same amount of time",
    "start": "1386720",
    "end": "1392960"
  },
  {
    "text": "and there are useful attributes but it's it's almost like we could have just used a metric for this",
    "start": "1392960",
    "end": "1398900"
  },
  {
    "text": "so what's really missing from there um one of the things that's missing from the cubelet is that we'd really love to",
    "start": "1398900",
    "end": "1405320"
  },
  {
    "text": "have some way to tie together a whole bunch of container runtime operations like in order to create a pod I need to",
    "start": "1405320",
    "end": "1411740"
  },
  {
    "text": "make a Sandbox I need to pull images I need to create containers right and I'd like to see how all those are related so",
    "start": "1411740",
    "end": "1418280"
  },
  {
    "text": "if I have a pod creation taking a while I can go figure out which aspect of it actually was responsible for that",
    "start": "1418280",
    "end": "1424940"
  },
  {
    "text": "um as far as general tracing both in the cubelet and in the API server we really want to add exemplars to all of to the",
    "start": "1424940",
    "end": "1433159"
  },
  {
    "text": "Prometheus metrics that are associated with traces so that someone using a trace backend and a metric backend like",
    "start": "1433159",
    "end": "1439580"
  },
  {
    "text": "Prometheus can link back and forth between those two and the same thing goes for logs you can insert those",
    "start": "1439580",
    "end": "1445700"
  },
  {
    "text": "common IDs like we were talking about earlier into the log messages and that way you can jump from traces to logs or",
    "start": "1445700",
    "end": "1452840"
  },
  {
    "text": "even just find all of the logs associated with a particular request",
    "start": "1452840",
    "end": "1458000"
  },
  {
    "text": "and while I was at kubecon um I made a proof of concept for what the cubeletracing would look like if we",
    "start": "1458000",
    "end": "1464179"
  },
  {
    "text": "had that unifying parent span and you can see um the the span that we were looking at",
    "start": "1464179",
    "end": "1469940"
  },
  {
    "text": "before is actually like this tiny one right here so what before looked not",
    "start": "1469940",
    "end": "1476059"
  },
  {
    "text": "very useful now that it's put in context in the context of creating an entire pod is actually much more valuable so it",
    "start": "1476059",
    "end": "1484520"
  },
  {
    "text": "just goes to show that it may just be adding a span but it actually changes the nature of what you can figure out",
    "start": "1484520",
    "end": "1491539"
  },
  {
    "text": "from your your Trace telemetry and that's it",
    "start": "1491539",
    "end": "1497360"
  },
  {
    "text": "cool metrics yeah let's let's talk about metrics this is like probably one of my favorite topics uh I am sometimes",
    "start": "1497360",
    "end": "1504919"
  },
  {
    "text": "referred to as the metrics guy uh let's go over some boring stuff uh",
    "start": "1504919",
    "end": "1511580"
  },
  {
    "text": "yeah kubernetes uses Prometheus um Prometheus uses a client server",
    "start": "1511580",
    "end": "1516620"
  },
  {
    "text": "architecture so basically your software is instrumented with a Prometheus client",
    "start": "1516620",
    "end": "1521659"
  },
  {
    "text": "and exposes a metric endpoint which is text based this is scraped and stored in",
    "start": "1521659",
    "end": "1527360"
  },
  {
    "text": "a Time series database um so there was this one time I was on call",
    "start": "1527360",
    "end": "1532760"
  },
  {
    "text": "and basically uh I was debugging some issue and uh I had to look at charts",
    "start": "1532760",
    "end": "1539720"
  },
  {
    "text": "except one of the charts that I was wanting to look at had no data or it was blank and I looked",
    "start": "1539720",
    "end": "1547580"
  },
  {
    "text": "at the underlying data and there was no data and after doing a bit of digging it",
    "start": "1547580",
    "end": "1554600"
  },
  {
    "text": "turned out that open source or you know Upstream kubernetes had basically",
    "start": "1554600",
    "end": "1560620"
  },
  {
    "text": "renamed a metric so I don't know how much you guys have",
    "start": "1560620",
    "end": "1566659"
  },
  {
    "text": "thought about this but one cannot simply rename metric because when you rename a metric the metric actually just ceases",
    "start": "1566659",
    "end": "1574220"
  },
  {
    "text": "to exist right uh you end up with a new metric so all of all of your charts",
    "start": "1574220",
    "end": "1579440"
  },
  {
    "text": "which reference a metric by name no just don't do anything right",
    "start": "1579440",
    "end": "1585320"
  },
  {
    "text": "um and so there was this other effort going on at",
    "start": "1585320",
    "end": "1590900"
  },
  {
    "text": "the same time called the metrics overhaul and what metrics overhaul was doing was",
    "start": "1590900",
    "end": "1596539"
  },
  {
    "text": "it basically took um a huge set of metrics in kubernetes and tried to conform them",
    "start": "1596539",
    "end": "1605360"
  },
  {
    "text": "to best practices in Upstream Prometheus and this is obviously like a noble",
    "start": "1605360",
    "end": "1611720"
  },
  {
    "text": "effort we should definitely have we should adhere to standards we want to do that in kubernetes",
    "start": "1611720",
    "end": "1617659"
  },
  {
    "text": "the problem is this basically broke the entire world's ability to use charts",
    "start": "1617659",
    "end": "1625940"
  },
  {
    "text": "continuously right because you can uh you've basically just deleted",
    "start": "1625940",
    "end": "1631460"
  },
  {
    "text": "uh all the kubernetes metrics from the control planes and cubelets the scheduler or whatever right",
    "start": "1631460",
    "end": "1638059"
  },
  {
    "text": "um so uh as a result of this",
    "start": "1638059",
    "end": "1643159"
  },
  {
    "text": "we launched uh one of the larger initiatives in sick instrumentation",
    "start": "1643159",
    "end": "1649039"
  },
  {
    "text": "um basically something called the kubernetes metrics framework and what this does is this introduces stability",
    "start": "1649039",
    "end": "1657080"
  },
  {
    "text": "classes to metrics um and allows us to guarantee a certain",
    "start": "1657080",
    "end": "1663620"
  },
  {
    "text": "API around metrics right so how did we do this uh well",
    "start": "1663620",
    "end": "1670580"
  },
  {
    "text": "like Prometheus doesn't natively allow you to add stability levels to metrics or metric definitions so we wrapped all",
    "start": "1670580",
    "end": "1678320"
  },
  {
    "text": "of the Prometheus descriptors and we added a metadata field called stability level",
    "start": "1678320",
    "end": "1684919"
  },
  {
    "text": "and so you can annotate metrics with a stability level and then we created a",
    "start": "1684919",
    "end": "1691460"
  },
  {
    "text": "static analysis pipeline so I don't know how familiar you guys are with static analysis it's basically like compiler",
    "start": "1691460",
    "end": "1697460"
  },
  {
    "text": "level stuff where we go through the entire kubernetes code base we analyze",
    "start": "1697460",
    "end": "1702740"
  },
  {
    "text": "it we look for all metric definitions and we look for stability classes then",
    "start": "1702740",
    "end": "1708860"
  },
  {
    "text": "we parse that information and we guarantee that the structure for a",
    "start": "1708860",
    "end": "1714860"
  },
  {
    "text": "stable metric does not violate the guarantees we provide the community",
    "start": "1714860",
    "end": "1720860"
  },
  {
    "text": "and so we have built that we have been improving on that over time",
    "start": "1720860",
    "end": "1726620"
  },
  {
    "text": "and not only that but this requires a lot of code right like we don't want to break the entire world's ability to",
    "start": "1726620",
    "end": "1733580"
  },
  {
    "text": "operate kubernetes that would be terrible and we basically nearly did that with the metrics overhaul",
    "start": "1733580",
    "end": "1741440"
  },
  {
    "text": "um we created a repo in component base for all",
    "start": "1741440",
    "end": "1746960"
  },
  {
    "text": "of this code because this is a lot of code to prevent you know obviously",
    "start": "1746960",
    "end": "1752179"
  },
  {
    "text": "uh tremendously bad breakages and if you want to read the original cap this was a",
    "start": "1752179",
    "end": "1757279"
  },
  {
    "text": "few years ago that we started this effort it's called it's a bitly link metric stability",
    "start": "1757279",
    "end": "1763840"
  },
  {
    "text": "we are extending this framework so when we started this framework we actually only had two stability levels we had",
    "start": "1764600",
    "end": "1770419"
  },
  {
    "text": "stable and we had Alpha and stable metrics had guarantees to not change for",
    "start": "1770419",
    "end": "1776960"
  },
  {
    "text": "at least one year right so you can guarantee that your charts alerts will",
    "start": "1776960",
    "end": "1782720"
  },
  {
    "text": "not break for a year Alpha metrics don't have any such guarantees we are now introducing beta",
    "start": "1782720",
    "end": "1789500"
  },
  {
    "text": "which is experimental we have not yet defined what guarantees these have and",
    "start": "1789500",
    "end": "1795740"
  },
  {
    "text": "we are working on this and we would love Community input on what would be reasonable for a beta class",
    "start": "1795740",
    "end": "1802940"
  },
  {
    "text": "metric right we also have internal metrics these are likely to not have stability guarantees",
    "start": "1802940",
    "end": "1810440"
  },
  {
    "text": "some metrics basically describe code",
    "start": "1810440",
    "end": "1817220"
  },
  {
    "text": "or in implementation detail of kubernetes and therefore changes when",
    "start": "1817220",
    "end": "1822860"
  },
  {
    "text": "the code changes right so these are like highly variable mutating type metrics those would be classified as internal",
    "start": "1822860",
    "end": "1830120"
  },
  {
    "text": "would probably not have stability guarantees and you probably don't even want to chart them or Define slos for",
    "start": "1830120",
    "end": "1837620"
  },
  {
    "text": "them so we may introduce",
    "start": "1837620",
    "end": "1843399"
  },
  {
    "text": "stability guarantees for Alpha metrics we may this is on the table",
    "start": "1843399",
    "end": "1849860"
  },
  {
    "text": "um you should come to our meetings and we can discuss it and you know we would love Community input on what would be",
    "start": "1849860",
    "end": "1856880"
  },
  {
    "text": "reasonable so yeah we're establishing the",
    "start": "1856880",
    "end": "1862279"
  },
  {
    "text": "guarantees for new stability levels um the static analysis pipeline that we built basically parses the entire",
    "start": "1862279",
    "end": "1868100"
  },
  {
    "text": "kubernetes code base all over the metrics and it basically allows us to Auto generate documentation for every",
    "start": "1868100",
    "end": "1875720"
  },
  {
    "text": "single kubernetes metric defined in the code base and this basically recently landed and",
    "start": "1875720",
    "end": "1883220"
  },
  {
    "text": "in 126 we will have documentation you will be able to see",
    "start": "1883220",
    "end": "1888279"
  },
  {
    "text": "every single metric that the kubernetes the core kubernetes control plane",
    "start": "1888279",
    "end": "1894919"
  },
  {
    "text": "outputs the scheduler the cubelet API server controller manager",
    "start": "1894919",
    "end": "1901159"
  },
  {
    "text": "we even have metamed metametrics about registered metrics so we have a metric called registered metrics total it will",
    "start": "1901159",
    "end": "1908179"
  },
  {
    "text": "tell you how many stable metrics there are how many Alpha metrics there are and the cap there's a bitly link",
    "start": "1908179",
    "end": "1915380"
  },
  {
    "text": "extending stability we're still working on this this is an alpha so if you want to contribute come to our",
    "start": "1915380",
    "end": "1921200"
  },
  {
    "text": "meetings who we are we are like you know pretty friendly open open Sig and I",
    "start": "1921200",
    "end": "1927320"
  },
  {
    "text": "think one of the easier things to get involved with um",
    "start": "1927320",
    "end": "1932480"
  },
  {
    "text": "yeah it's a little bit easier I think for newcomers so we would love for you guys to get",
    "start": "1932480",
    "end": "1938059"
  },
  {
    "text": "involved yeah you should come to our Sig meetings uh we have a Sig meeting every week we",
    "start": "1938059",
    "end": "1945679"
  },
  {
    "text": "basically alternate um triage meetings where we go through PR's and",
    "start": "1945679",
    "end": "1953480"
  },
  {
    "text": "a regular Sig meeting where we go over like more high level issues and concerns",
    "start": "1953480",
    "end": "1959000"
  },
  {
    "text": "about sub-projects and you know uh caps",
    "start": "1959000",
    "end": "1964520"
  },
  {
    "text": "and you know we are also open to any ideas that you guys might have on how to improve observability about kubernetes",
    "start": "1964520",
    "end": "1971779"
  },
  {
    "text": "in general um yeah we welcome you to participate",
    "start": "1971779",
    "end": "1977360"
  },
  {
    "text": "we're also looking for contributors for our sub-projects like Cube State metrics and Prometheus adapter and in fact we",
    "start": "1977360",
    "end": "1984440"
  },
  {
    "text": "have been discussing um deprecating some of our sub-projects because of a lack of contributors like",
    "start": "1984440",
    "end": "1992419"
  },
  {
    "text": "basically we can't support the large number of sub-projects that we actually own and we are in dire need of people to",
    "start": "1992419",
    "end": "2000039"
  },
  {
    "text": "come and help us with it so please please come uh metrics server and structured logging",
    "start": "2000039",
    "end": "2007960"
  },
  {
    "text": "are also in need of contributors and you can contact Merrick he has been driving",
    "start": "2007960",
    "end": "2013419"
  },
  {
    "text": "the working group for structured logging so these are uh the Sig meetings that we",
    "start": "2013419",
    "end": "2020980"
  },
  {
    "text": "have they're basically weekly and we alternate like I said before we have a slack Channel 6",
    "start": "2020980",
    "end": "2027159"
  },
  {
    "text": "instrumentation um we also have a mailing list",
    "start": "2027159",
    "end": "2032200"
  },
  {
    "text": "on Google Groups and you can hit all of us up on slack we",
    "start": "2032200",
    "end": "2038679"
  },
  {
    "text": "are you know available basically all the time uh we might not",
    "start": "2038679",
    "end": "2044080"
  },
  {
    "text": "respond right away because some of us don't check it's like like that often but it's not because we're ignoring you",
    "start": "2044080",
    "end": "2050138"
  },
  {
    "text": "it's just whenever we check slack is whenever we check slack um I don't use slack day to day for my my job so it's",
    "start": "2050139",
    "end": "2058658"
  },
  {
    "text": "kind of intermittent for me but yeah I will respond to you as soon as I see it",
    "start": "2058659",
    "end": "2064858"
  },
  {
    "text": "thank you for coming to our talk and yeah I hope to see you guys in sick",
    "start": "2065099",
    "end": "2071260"
  },
  {
    "text": "instrumentation foreign",
    "start": "2071260",
    "end": "2075000"
  },
  {
    "text": "yeah so if you guys have any questions we'd be happy to answer questions about",
    "start": "2078700",
    "end": "2084520"
  },
  {
    "text": "our state",
    "start": "2084520",
    "end": "2086940"
  },
  {
    "text": "uh hi thank you for the presentation it was very insightful uh I was wondering",
    "start": "2090220",
    "end": "2096339"
  },
  {
    "text": "for the tracing of the cubelet if you've ever considered using kernel traces to",
    "start": "2096339",
    "end": "2101920"
  },
  {
    "text": "collect more information um because I'm actually doing like a research project on that",
    "start": "2101920",
    "end": "2109359"
  },
  {
    "text": "that sounds very cool um I had not thought of that so happy to talk",
    "start": "2109359",
    "end": "2115380"
  },
  {
    "text": "we also accept caps so if you want to write a cap on how to integrate that stuff with kubernetes we are like",
    "start": "2118540",
    "end": "2125260"
  },
  {
    "text": "definitely open and amenable to any ideas to improve yep",
    "start": "2125260",
    "end": "2130300"
  },
  {
    "text": "thanks for the talk so my question is um around instrumentation libraries",
    "start": "2130300",
    "end": "2135579"
  },
  {
    "text": "right so sounds like you moved to import Elementary for tracing and I'm maintaining client from to use client go",
    "start": "2135579",
    "end": "2142359"
  },
  {
    "text": "lines I'm interested like what's the future of you know metric instrumentation are you also trying to",
    "start": "2142359",
    "end": "2148060"
  },
  {
    "text": "kind of maybe Converge on using open Telemetry go for metric as well or how",
    "start": "2148060",
    "end": "2153880"
  },
  {
    "text": "we can collaborate like what's the future here oh David and I were actually just",
    "start": "2153880",
    "end": "2159220"
  },
  {
    "text": "talking about this um so we did a lot of work wrapping the premises libraries",
    "start": "2159220",
    "end": "2165339"
  },
  {
    "text": "um I have been suggesting to David that if open Telemetry were to actually",
    "start": "2165339",
    "end": "2172240"
  },
  {
    "text": "natively support stability classes that there would be a path for us to move",
    "start": "2172240",
    "end": "2178599"
  },
  {
    "text": "towards towards that otherwise we can still get exemplars through the",
    "start": "2178599",
    "end": "2184540"
  },
  {
    "text": "Prometheus Library so um yeah those are the options on the table",
    "start": "2184540",
    "end": "2189820"
  },
  {
    "text": "actually nice thank you I think I mean this um the stability kind of framework",
    "start": "2189820",
    "end": "2195280"
  },
  {
    "text": "like it's a good feature for client goaling as well so yeah thank you and I would say as well like we're clearly",
    "start": "2195280",
    "end": "2200859"
  },
  {
    "text": "very committed to metric stability and we already have a lot of Prometheus endpoints so whatever we do we would",
    "start": "2200859",
    "end": "2206740"
  },
  {
    "text": "make sure that we maintain you know the same metric names and attributes and stuff so",
    "start": "2206740",
    "end": "2212140"
  },
  {
    "text": "in some ways this is just an internal implementation detail of how we you know how we manage code in kubernetes",
    "start": "2212140",
    "end": "2220500"
  },
  {
    "text": "uh thank you for your talk so I'm wondering for the interesting part I have incremented like several operators",
    "start": "2224140",
    "end": "2231480"
  },
  {
    "text": "with Native open Telemetry like clients directly I'm only if we will provide",
    "start": "2231480",
    "end": "2238060"
  },
  {
    "text": "such like framework or library to instrument for common like operators like in",
    "start": "2238060",
    "end": "2244599"
  },
  {
    "text": "kubernetes yeah I think operators are really tricky right because they get they're driven based on",
    "start": "2244599",
    "end": "2251920"
  },
  {
    "text": "like kubernetes watch events you know something changed in kubernetes and now they're reacting to it so we haven't",
    "start": "2251920",
    "end": "2258520"
  },
  {
    "text": "quite solved the context propagation puzzle there but it's something I mean I",
    "start": "2258520",
    "end": "2263680"
  },
  {
    "text": "gave a talk in 2018 2019 on a proposal that unfortunately hasn't come to",
    "start": "2263680",
    "end": "2270339"
  },
  {
    "text": "fruition so it's something like a lot of people are interested in and there has been a lot of excitement historically",
    "start": "2270339",
    "end": "2275980"
  },
  {
    "text": "about there's there's another project called k-span which addresses this",
    "start": "2275980",
    "end": "2281560"
  },
  {
    "text": "partially that you might be able to look into but yeah right right now there isn't",
    "start": "2281560",
    "end": "2287380"
  },
  {
    "text": "anything today oh okay yeah thank you yeah I was going to ask the same question about k-span",
    "start": "2287380",
    "end": "2292960"
  },
  {
    "text": "because it um makes a community events to trace it right does uh kubernetes event also part",
    "start": "2292960",
    "end": "2300820"
  },
  {
    "text": "of the sick instrumentation yes so we",
    "start": "2300820",
    "end": "2305859"
  },
  {
    "text": "I mean so kubernetes events are part of Sig instrumentation so and that means",
    "start": "2305859",
    "end": "2311079"
  },
  {
    "text": "the like definition of an event not the events produced by components so you're",
    "start": "2311079",
    "end": "2316599"
  },
  {
    "text": "correct that um that that is part of the the code that we own Within kubernetes okay yeah sorry I have one more last",
    "start": "2316599",
    "end": "2323500"
  },
  {
    "text": "question so I think Han you mentioned there's a documentation for",
    "start": "2323500",
    "end": "2328660"
  },
  {
    "text": "auto-generated like metrics right you can ask how is that implemented because I think a lot of open source project we",
    "start": "2328660",
    "end": "2335500"
  },
  {
    "text": "need such capabilities uh we have a very elaborate static analysis uh framework",
    "start": "2335500",
    "end": "2341260"
  },
  {
    "text": "which basically runs through every single file in the kubernetes code base analyzes all of the metric definitions",
    "start": "2341260",
    "end": "2347740"
  },
  {
    "text": "and then outputs a yaml file with basically the entire metric definitions",
    "start": "2347740",
    "end": "2353740"
  },
  {
    "text": "and then we parse that into uh basically a markdown file which ends up in our the",
    "start": "2353740",
    "end": "2361420"
  },
  {
    "text": "Kate's website directory oh okay thank you so much thank you",
    "start": "2361420",
    "end": "2367140"
  },
  {
    "text": "I guess we can close this year thank you everyone for attending yes thank you everyone",
    "start": "2369579",
    "end": "2375480"
  },
  {
    "text": "[Applause]",
    "start": "2375780",
    "end": "2379579"
  }
]