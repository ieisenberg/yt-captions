[
  {
    "text": "hello everyone good",
    "start": "440",
    "end": "2560"
  },
  {
    "text": "afternoon",
    "start": "2560",
    "end": "4720"
  },
  {
    "text": "um in this talk uh we'll take a",
    "start": "4720",
    "end": "7680"
  },
  {
    "text": "comparative dive between grpc and",
    "start": "7680",
    "end": "10679"
  },
  {
    "text": "another protocol called ttrpc we'll uh",
    "start": "10679",
    "end": "13920"
  },
  {
    "text": "look into the protocol itself understand",
    "start": "13920",
    "end": "16600"
  },
  {
    "text": "the key differences and also see how",
    "start": "16600",
    "end": "18520"
  },
  {
    "text": "they fair with respect to each",
    "start": "18520",
    "end": "21160"
  },
  {
    "text": "other I'm Arch and this is my co speaker",
    "start": "21160",
    "end": "24800"
  },
  {
    "text": "PTO Pandit we work at Microsoft with a",
    "start": "24800",
    "end": "28400"
  },
  {
    "text": "team called Azure Linux and uh let's get",
    "start": "28400",
    "end": "32960"
  },
  {
    "text": "started um so first of all I can we must",
    "start": "32960",
    "end": "39040"
  },
  {
    "text": "know because it's a new protocol what is",
    "start": "39040",
    "end": "42399"
  },
  {
    "text": "ttrpc and uh first of all why you are",
    "start": "42399",
    "end": "44760"
  },
  {
    "text": "talking about in grpc confit not even",
    "start": "44760",
    "end": "47360"
  },
  {
    "text": "grpc uh well uh I think grpc was created",
    "start": "47360",
    "end": "51199"
  },
  {
    "text": "almost 10 years ago uh although the 1.0",
    "start": "51199",
    "end": "54039"
  },
  {
    "text": "version might released a little bit",
    "start": "54039",
    "end": "55440"
  },
  {
    "text": "later almost 8 years after that it's",
    "start": "55440",
    "end": "57920"
  },
  {
    "text": "been quite uh uh in Cloud native space",
    "start": "57920",
    "end": "61280"
  },
  {
    "text": "we' seen its implementation quite eously",
    "start": "61280",
    "end": "65439"
  },
  {
    "text": "and mostly in Microsoft distributor",
    "start": "65439",
    "end": "68280"
  },
  {
    "text": "system and microservices between uh",
    "start": "68280",
    "end": "71479"
  },
  {
    "text": "microservices interprocess um the inter",
    "start": "71479",
    "end": "73960"
  },
  {
    "text": "service communication we can see it's",
    "start": "73960",
    "end": "76759"
  },
  {
    "text": "most wide users uh but one of the thing",
    "start": "76759",
    "end": "81439"
  },
  {
    "text": "uh grpc chose when it when it's uh",
    "start": "81439",
    "end": "83960"
  },
  {
    "text": "creating when they designed it is that",
    "start": "83960",
    "end": "86680"
  },
  {
    "text": "they chose it to build it on top of HTTP",
    "start": "86680",
    "end": "89240"
  },
  {
    "text": "2 which which is great it has many",
    "start": "89240",
    "end": "91840"
  },
  {
    "text": "features and it's like a new protocol uh",
    "start": "91840",
    "end": "95880"
  },
  {
    "text": "but it comes with overhead uh overhead",
    "start": "95880",
    "end": "99079"
  },
  {
    "text": "of protocol being um with so many",
    "start": "99079",
    "end": "102840"
  },
  {
    "text": "features and also it comes with over",
    "start": "102840",
    "end": "105119"
  },
  {
    "text": "whenever you want to use the grpc you",
    "start": "105119",
    "end": "107240"
  },
  {
    "text": "want to you are indirectly using http2",
    "start": "107240",
    "end": "110920"
  },
  {
    "text": "thus like whenever you are implementing",
    "start": "110920",
    "end": "112560"
  },
  {
    "text": "in a runtime or any system you are U",
    "start": "112560",
    "end": "115520"
  },
  {
    "text": "loading the libraries of http2 as",
    "start": "115520",
    "end": "118360"
  },
  {
    "text": "well which",
    "start": "118360",
    "end": "121280"
  },
  {
    "text": "so the the newer ttrpc protocol is",
    "start": "121280",
    "end": "124960"
  },
  {
    "text": "intended for a low memory and low",
    "start": "124960",
    "end": "127159"
  },
  {
    "text": "latency environments it was designed",
    "start": "127159",
    "end": "128920"
  },
  {
    "text": "with that specification that uh wherever",
    "start": "128920",
    "end": "132879"
  },
  {
    "text": "uh the requirement is for lower memory",
    "start": "132879",
    "end": "136400"
  },
  {
    "text": "footprint and lower",
    "start": "136400",
    "end": "137760"
  },
  {
    "text": "latency uh and",
    "start": "137760",
    "end": "141200"
  },
  {
    "text": "while uh for most of our grpc use cases",
    "start": "141200",
    "end": "144480"
  },
  {
    "text": "you see that uh it might not be the",
    "start": "144480",
    "end": "146519"
  },
  {
    "text": "requirement to have a really low memory",
    "start": "146519",
    "end": "148640"
  },
  {
    "text": "foot pin or really low letter footprint",
    "start": "148640",
    "end": "150840"
  },
  {
    "text": "but let's say when you are using it in a",
    "start": "150840",
    "end": "153360"
  },
  {
    "text": "environment where there in a single host",
    "start": "153360",
    "end": "155599"
  },
  {
    "text": "there are multiple Services they are",
    "start": "155599",
    "end": "157319"
  },
  {
    "text": "talking to each other and uh or in a",
    "start": "157319",
    "end": "160680"
  },
  {
    "text": "very memory tight constraint environment",
    "start": "160680",
    "end": "163000"
  },
  {
    "text": "in that case it could become a problem",
    "start": "163000",
    "end": "165640"
  },
  {
    "text": "for using grpc because it comes with",
    "start": "165640",
    "end": "168040"
  },
  {
    "text": "overhead of course it has",
    "start": "168040",
    "end": "170000"
  },
  {
    "text": "features",
    "start": "170000",
    "end": "171800"
  },
  {
    "text": "uh and also this ttrpc is designed to",
    "start": "171800",
    "end": "175760"
  },
  {
    "text": "mostly in a inter service communication",
    "start": "175760",
    "end": "177640"
  },
  {
    "text": "it's like service to in in a back back",
    "start": "177640",
    "end": "180080"
  },
  {
    "text": "environment where in a distributed",
    "start": "180080",
    "end": "182480"
  },
  {
    "text": "system mostly in the same host or you",
    "start": "182480",
    "end": "184599"
  },
  {
    "text": "can say it's a same network behind the",
    "start": "184599",
    "end": "187319"
  },
  {
    "text": "firewall and you are communicating",
    "start": "187319",
    "end": "189159"
  },
  {
    "text": "between them in that case uh it is",
    "start": "189159",
    "end": "192599"
  },
  {
    "text": "designed",
    "start": "192599",
    "end": "194440"
  },
  {
    "text": "for and uh because it's uh designed in",
    "start": "194440",
    "end": "198400"
  },
  {
    "text": "that way we we can we can see that we",
    "start": "198400",
    "end": "201680"
  },
  {
    "text": "can remove the http2 some of this layer",
    "start": "201680",
    "end": "204599"
  },
  {
    "text": "because we don't need generally in a",
    "start": "204599",
    "end": "207640"
  },
  {
    "text": "similar same network environment at the",
    "start": "207640",
    "end": "210120"
  },
  {
    "text": "same H Ste connections are very stable",
    "start": "210120",
    "end": "213040"
  },
  {
    "text": "because the network is not traveling",
    "start": "213040",
    "end": "215239"
  },
  {
    "text": "over the",
    "start": "215239",
    "end": "217000"
  },
  {
    "text": "globe",
    "start": "217000",
    "end": "219519"
  },
  {
    "text": "so and uh ttrpc currently has a support",
    "start": "219519",
    "end": "223760"
  },
  {
    "text": "for goang and rust currently course it",
    "start": "223760",
    "end": "226480"
  },
  {
    "text": "is not as W wide widespread as grpc grpc",
    "start": "226480",
    "end": "231120"
  },
  {
    "text": "has support for like almost most of the",
    "start": "231120",
    "end": "234159"
  },
  {
    "text": "popular languages we know and I think uh",
    "start": "234159",
    "end": "238000"
  },
  {
    "text": "official support for most of the popular",
    "start": "238000",
    "end": "239439"
  },
  {
    "text": "languages even unofficially maybe much",
    "start": "239439",
    "end": "241640"
  },
  {
    "text": "more um but of course uh when this",
    "start": "241640",
    "end": "245959"
  },
  {
    "text": "protocol was designed to cut down some",
    "start": "245959",
    "end": "247640"
  },
  {
    "text": "of the features",
    "start": "247640",
    "end": "250680"
  },
  {
    "text": "uh grpc to make some of the tradeoffs to",
    "start": "250680",
    "end": "254439"
  },
  {
    "text": "for better memory and lency uh",
    "start": "254439",
    "end": "257519"
  },
  {
    "text": "implementations it assumes that it has",
    "start": "257519",
    "end": "260359"
  },
  {
    "text": "to be in a reliable connection",
    "start": "260359",
    "end": "262199"
  },
  {
    "text": "environment that means you cannot",
    "start": "262199",
    "end": "264160"
  },
  {
    "text": "deployed in a across the globe where",
    "start": "264160",
    "end": "266160"
  },
  {
    "text": "connection could be broken very easily",
    "start": "266160",
    "end": "268520"
  },
  {
    "text": "it also removes the uh http2 so it does",
    "start": "268520",
    "end": "271800"
  },
  {
    "text": "not have your uh standard features of",
    "start": "271800",
    "end": "274960"
  },
  {
    "text": "uh a http2 protocol like handset spings",
    "start": "274960",
    "end": "278960"
  },
  {
    "text": "it actually even removes flow control uh",
    "start": "278960",
    "end": "282560"
  },
  {
    "text": "also TLS is uh removed for because we",
    "start": "282560",
    "end": "286280"
  },
  {
    "text": "are we'll be running in the same host",
    "start": "286280",
    "end": "287759"
  },
  {
    "text": "environment so uh it is assumed when",
    "start": "287759",
    "end": "289880"
  },
  {
    "text": "designing this Pro uh designing this",
    "start": "289880",
    "end": "293120"
  },
  {
    "text": "protocol that we will be running behind",
    "start": "293120",
    "end": "295720"
  },
  {
    "text": "a firewall so we might not need security",
    "start": "295720",
    "end": "298280"
  },
  {
    "text": "features of TLS",
    "start": "298280",
    "end": "301440"
  },
  {
    "text": "uh so let's see who uses ddpc we",
    "start": "301440",
    "end": "306400"
  },
  {
    "text": "just wanted to know who used it so we",
    "start": "306400",
    "end": "309560"
  },
  {
    "text": "went to GitHub repos of this two we",
    "start": "309560",
    "end": "311320"
  },
  {
    "text": "found out okay most of uh many companies",
    "start": "311320",
    "end": "314280"
  },
  {
    "text": "directly indirectly above we listed",
    "start": "314280",
    "end": "317000"
  },
  {
    "text": "companies who are directly using it uh",
    "start": "317000",
    "end": "319280"
  },
  {
    "text": "and indirectly many more who are using",
    "start": "319280",
    "end": "321759"
  },
  {
    "text": "mostly containerd uh con is very popular",
    "start": "321759",
    "end": "324880"
  },
  {
    "text": "so there are a lot of projects who are",
    "start": "324880",
    "end": "326759"
  },
  {
    "text": "built on top of",
    "start": "326759",
    "end": "328240"
  },
  {
    "text": "con uh and those are using it now okay",
    "start": "328240",
    "end": "333880"
  },
  {
    "text": "so",
    "start": "333880",
    "end": "336120"
  },
  {
    "text": "let's uh understand the differences in",
    "start": "336120",
    "end": "338960"
  },
  {
    "text": "the protocol stack and how it differs to",
    "start": "338960",
    "end": "343000"
  },
  {
    "text": "uh HTTP like http2 can like because HT",
    "start": "343000",
    "end": "347120"
  },
  {
    "text": "grpc is built on http2 will Define uh",
    "start": "347120",
    "end": "350479"
  },
  {
    "text": "how the this protocol has cut down to a",
    "start": "350479",
    "end": "354280"
  },
  {
    "text": "Slimmer",
    "start": "354280",
    "end": "355479"
  },
  {
    "text": "version uh so we mapped the grpc",
    "start": "355479",
    "end": "358800"
  },
  {
    "text": "protocol in top of HTTP TOS um TCP IB",
    "start": "358800",
    "end": "362560"
  },
  {
    "text": "stack uh as you learned the ttrpc did",
    "start": "362560",
    "end": "366360"
  },
  {
    "text": "some of the trimming of this protocol to",
    "start": "366360",
    "end": "368840"
  },
  {
    "text": "make it Slimmer make it more simpler so",
    "start": "368840",
    "end": "371280"
  },
  {
    "text": "it can be used in a it can gain some",
    "start": "371280",
    "end": "373840"
  },
  {
    "text": "benefits over uh the grpc so let's first",
    "start": "373840",
    "end": "381280"
  },
  {
    "text": "of all we see the network and transport",
    "start": "381280",
    "end": "383199"
  },
  {
    "text": "layer it is uh it quite same of course",
    "start": "383199",
    "end": "386720"
  },
  {
    "text": "we didn't uh it will be very hard to",
    "start": "386720",
    "end": "389080"
  },
  {
    "text": "remove these two layers I think the last",
    "start": "389080",
    "end": "391120"
  },
  {
    "text": "time we saw the quick tried to you know",
    "start": "391120",
    "end": "394720"
  },
  {
    "text": "replace the TCP part like the transport",
    "start": "394720",
    "end": "397680"
  },
  {
    "text": "part of it but it had to do it on UDP",
    "start": "397680",
    "end": "400280"
  },
  {
    "text": "because these two layers are kind of",
    "start": "400280",
    "end": "403000"
  },
  {
    "text": "standard of like placing this means",
    "start": "403000",
    "end": "405800"
  },
  {
    "text": "replacing all the Hardwares who are",
    "start": "405800",
    "end": "409000"
  },
  {
    "text": "going uh so well that was kept same",
    "start": "409000",
    "end": "412319"
  },
  {
    "text": "because it won't be very hard to do that",
    "start": "412319",
    "end": "415599"
  },
  {
    "text": "and as we discussed that we won't we'll",
    "start": "415599",
    "end": "418800"
  },
  {
    "text": "be running most",
    "start": "418800",
    "end": "420160"
  },
  {
    "text": "this use case is mostly behind a",
    "start": "420160",
    "end": "421599"
  },
  {
    "text": "firewall use case so TLS can be removed",
    "start": "421599",
    "end": "424639"
  },
  {
    "text": "and uh most of this HTTP uh so now we",
    "start": "424639",
    "end": "428160"
  },
  {
    "text": "left with the application protocol",
    "start": "428160",
    "end": "430759"
  },
  {
    "text": "application layer and uh most of the HP",
    "start": "430759",
    "end": "434360"
  },
  {
    "text": "2's features and all these features of",
    "start": "434360",
    "end": "437560"
  },
  {
    "text": "channels frames comes with uh comes in",
    "start": "437560",
    "end": "440479"
  },
  {
    "text": "the it's binary framing layer where you",
    "start": "440479",
    "end": "442360"
  },
  {
    "text": "have like headers are frames also data",
    "start": "442360",
    "end": "444759"
  },
  {
    "text": "BS are frame um as we we are trimming",
    "start": "444759",
    "end": "448440"
  },
  {
    "text": "down it making it more simple",
    "start": "448440",
    "end": "450639"
  },
  {
    "text": "so that part of it it replaced with the",
    "start": "450639",
    "end": "453960"
  },
  {
    "text": "message framing it uh but we kept the",
    "start": "453960",
    "end": "458199"
  },
  {
    "text": "protuff as well because uh protuff is is",
    "start": "458199",
    "end": "462360"
  },
  {
    "text": "uh in DPC is used for generally only for",
    "start": "462360",
    "end": "465520"
  },
  {
    "text": "calization D calization part of it uh in",
    "start": "465520",
    "end": "468759"
  },
  {
    "text": "the specification of this protocol it",
    "start": "468759",
    "end": "470800"
  },
  {
    "text": "does not define specifically how the",
    "start": "470800",
    "end": "473759"
  },
  {
    "text": "routing Logic for rpcs so RPC part of is",
    "start": "473759",
    "end": "476759"
  },
  {
    "text": "still the same I mean that in GR PC also",
    "start": "476759",
    "end": "480000"
  },
  {
    "text": "RP routing of the RPC which method or",
    "start": "480000",
    "end": "483280"
  },
  {
    "text": "which service to invoke it is done uh it",
    "start": "483280",
    "end": "486639"
  },
  {
    "text": "is the similar inpc you uh it does not",
    "start": "486639",
    "end": "489360"
  },
  {
    "text": "define in the specification it just",
    "start": "489360",
    "end": "491000"
  },
  {
    "text": "tells the implementation has to do it in",
    "start": "491000",
    "end": "493520"
  },
  {
    "text": "a way that it is uh it possible to route",
    "start": "493520",
    "end": "496919"
  },
  {
    "text": "based on the service name and the method",
    "start": "496919",
    "end": "498479"
  },
  {
    "text": "name so it is up to the implementation",
    "start": "498479",
    "end": "501120"
  },
  {
    "text": "the standard implementation the",
    "start": "501120",
    "end": "503319"
  },
  {
    "text": "ttrpc uh did was in the go lank then um",
    "start": "503319",
    "end": "508680"
  },
  {
    "text": "later on",
    "start": "508680",
    "end": "510240"
  },
  {
    "text": "people from Alibaba they started using",
    "start": "510240",
    "end": "512240"
  },
  {
    "text": "it for rusta as well they now it's",
    "start": "512240",
    "end": "514959"
  },
  {
    "text": "officially Incorporated in the conda uh",
    "start": "514959",
    "end": "517800"
  },
  {
    "text": "projects as well so now let's understand",
    "start": "517800",
    "end": "521599"
  },
  {
    "text": "the how it now we seen that okay we",
    "start": "521599",
    "end": "524440"
  },
  {
    "text": "replace the binary protocol with uh much",
    "start": "524440",
    "end": "528040"
  },
  {
    "text": "simpler uh much simpler message framing",
    "start": "528040",
    "end": "530880"
  },
  {
    "text": "protocol and this uh this is the message",
    "start": "530880",
    "end": "533800"
  },
  {
    "text": "frame you will look like and uh as you",
    "start": "533800",
    "end": "536600"
  },
  {
    "text": "can see that it's like a 10 by header uh",
    "start": "536600",
    "end": "539600"
  },
  {
    "text": "uh on the message frame so first four by",
    "start": "539600",
    "end": "542600"
  },
  {
    "text": "data length stream ID and your message",
    "start": "542600",
    "end": "544320"
  },
  {
    "text": "type and flax uh these I will come back",
    "start": "544320",
    "end": "547279"
  },
  {
    "text": "to it what is the uh when we explain how",
    "start": "547279",
    "end": "550079"
  },
  {
    "text": "the protocol communicates so uh let's",
    "start": "550079",
    "end": "554519"
  },
  {
    "text": "understand how this",
    "start": "554519",
    "end": "556519"
  },
  {
    "text": "uh uh let's understand how this protocol",
    "start": "556519",
    "end": "560279"
  },
  {
    "text": "works over a streaming uh respon",
    "start": "560279",
    "end": "562800"
  },
  {
    "text": "streaming request and response as you",
    "start": "562800",
    "end": "564880"
  },
  {
    "text": "can see uh this is for a ttrpc stream",
    "start": "564880",
    "end": "568800"
  },
  {
    "text": "where uh",
    "start": "568800",
    "end": "570240"
  },
  {
    "text": "client and server both are doing",
    "start": "570240",
    "end": "571720"
  },
  {
    "text": "streaming request and response so in the",
    "start": "571720",
    "end": "575720"
  },
  {
    "text": "client client will first in in this",
    "start": "575720",
    "end": "578519"
  },
  {
    "text": "streaming scenario uh client will first",
    "start": "578519",
    "end": "580560"
  },
  {
    "text": "send a request payload and that will",
    "start": "580560",
    "end": "582760"
  },
  {
    "text": "come up with a remote open flag these",
    "start": "582760",
    "end": "584640"
  },
  {
    "text": "Remote open uh Remote open remote close",
    "start": "584640",
    "end": "587200"
  },
  {
    "text": "these flags are if you see go back we",
    "start": "587200",
    "end": "589920"
  },
  {
    "text": "can see that these flags are in the like",
    "start": "589920",
    "end": "592240"
  },
  {
    "text": "meage uh there are two things message",
    "start": "592240",
    "end": "594240"
  },
  {
    "text": "types and flags so",
    "start": "594240",
    "end": "596160"
  },
  {
    "text": "remote remote open means that when",
    "start": "596160",
    "end": "599399"
  },
  {
    "text": "whenever server receives a payload with",
    "start": "599399",
    "end": "601279"
  },
  {
    "text": "a remote open flag that means this uh",
    "start": "601279",
    "end": "604519"
  },
  {
    "text": "for Server the remote is a client and",
    "start": "604519",
    "end": "606920"
  },
  {
    "text": "client is open for sending more data so",
    "start": "606920",
    "end": "609440"
  },
  {
    "text": "you can e simply think of the remote",
    "start": "609440",
    "end": "610839"
  },
  {
    "text": "open is means the uh the server is",
    "start": "610839",
    "end": "613600"
  },
  {
    "text": "expecting more data it's open for more",
    "start": "613600",
    "end": "615839"
  },
  {
    "text": "data so you get another payload if it's",
    "start": "615839",
    "end": "618480"
  },
  {
    "text": "empty flag it will be Remote open now",
    "start": "618480",
    "end": "622279"
  },
  {
    "text": "now once we receive the last data",
    "start": "622279",
    "end": "624920"
  },
  {
    "text": "payload with the remote Clos fact the",
    "start": "624920",
    "end": "626200"
  },
  {
    "text": "server knows that okay it's done with",
    "start": "626200",
    "end": "628000"
  },
  {
    "text": "the CL and uh implicitly it also mean",
    "start": "628000",
    "end": "631399"
  },
  {
    "text": "local close local close means locally",
    "start": "631399",
    "end": "633360"
  },
  {
    "text": "the client will not produce more in data",
    "start": "633360",
    "end": "635120"
  },
  {
    "text": "that local close part is uh kept on the",
    "start": "635120",
    "end": "637639"
  },
  {
    "text": "protol implementation just to maintain",
    "start": "637639",
    "end": "640079"
  },
  {
    "text": "the state of the client and server uh",
    "start": "640079",
    "end": "643120"
  },
  {
    "text": "once the server received the remote",
    "start": "643120",
    "end": "644639"
  },
  {
    "text": "close it it knows that okay client is",
    "start": "644639",
    "end": "646560"
  },
  {
    "text": "done sending all the streaming data now",
    "start": "646560",
    "end": "648560"
  },
  {
    "text": "it start sending the response data uh",
    "start": "648560",
    "end": "650920"
  },
  {
    "text": "it's like I'm here showing a b",
    "start": "650920",
    "end": "652800"
  },
  {
    "text": "directional stream so it will start",
    "start": "652800",
    "end": "655000"
  },
  {
    "text": "sending a response uh whenever it sends",
    "start": "655000",
    "end": "657639"
  },
  {
    "text": "with a remote closed flag it will",
    "start": "657639",
    "end": "660079"
  },
  {
    "text": "now the server when sends a remote Clos",
    "start": "660079",
    "end": "663040"
  },
  {
    "text": "track that means server is done with the",
    "start": "663040",
    "end": "664920"
  },
  {
    "text": "data response and both of the client",
    "start": "664920",
    "end": "667600"
  },
  {
    "text": "server will become in a finished state",
    "start": "667600",
    "end": "669320"
  },
  {
    "text": "so this finished implicitly means also",
    "start": "669320",
    "end": "671680"
  },
  {
    "text": "remote closed because that means that",
    "start": "671680",
    "end": "673920"
  },
  {
    "text": "other PR is not going to send any more",
    "start": "673920",
    "end": "677160"
  },
  {
    "text": "data uh this is a like a it's say client",
    "start": "677160",
    "end": "680440"
  },
  {
    "text": "stream but server just a single response",
    "start": "680440",
    "end": "683120"
  },
  {
    "text": "similarly but the response payload if",
    "start": "683120",
    "end": "685440"
  },
  {
    "text": "you the message type response it's",
    "start": "685440",
    "end": "686839"
  },
  {
    "text": "implicitly means it's also the last",
    "start": "686839",
    "end": "688959"
  },
  {
    "text": "payLo remote Clos state so it becomes in",
    "start": "688959",
    "end": "691600"
  },
  {
    "text": "a finished State very quickly and if we",
    "start": "691600",
    "end": "693720"
  },
  {
    "text": "go to un stream it's very simple in you",
    "start": "693720",
    "end": "695959"
  },
  {
    "text": "don't send any flags that automatically",
    "start": "695959",
    "end": "697760"
  },
  {
    "text": "server assumes it's a single request it",
    "start": "697760",
    "end": "701320"
  },
  {
    "text": "um as you can see the protocol is pretty",
    "start": "701320",
    "end": "703600"
  },
  {
    "text": "simple and uh we just like this is the",
    "start": "703600",
    "end": "706680"
  },
  {
    "text": "specification we talked about but we",
    "start": "706680",
    "end": "708800"
  },
  {
    "text": "wanted to see how the how it actually",
    "start": "708800",
    "end": "711040"
  },
  {
    "text": "behaves over the wire so we capture the",
    "start": "711040",
    "end": "712880"
  },
  {
    "text": "packets and uh so this is for a ttrpc",
    "start": "712880",
    "end": "716639"
  },
  {
    "text": "single call so you can see that okay",
    "start": "716639",
    "end": "719399"
  },
  {
    "text": "it's for a single unary call uh it's",
    "start": "719399",
    "end": "721760"
  },
  {
    "text": "like just since at 10 packets uh and uh",
    "start": "721760",
    "end": "726079"
  },
  {
    "text": "although most of the TCP handshake also",
    "start": "726079",
    "end": "729160"
  },
  {
    "text": "uh it's like it takes a single turn and",
    "start": "729160",
    "end": "732519"
  },
  {
    "text": "sends a one data packet to the from the",
    "start": "732519",
    "end": "734920"
  },
  {
    "text": "client and from the server back total is",
    "start": "734920",
    "end": "737680"
  },
  {
    "text": "around 80 bytes communication and if you",
    "start": "737680",
    "end": "739680"
  },
  {
    "text": "compare that with the grpc it's uh of",
    "start": "739680",
    "end": "742920"
  },
  {
    "text": "course it's more but as you said it",
    "start": "742920",
    "end": "745480"
  },
  {
    "text": "comes with a lot of features it has you",
    "start": "745480",
    "end": "747399"
  },
  {
    "text": "know http2 comes with window window",
    "start": "747399",
    "end": "750360"
  },
  {
    "text": "upgrades and those all other frames and",
    "start": "750360",
    "end": "753240"
  },
  {
    "text": "there control frames also uh but as you",
    "start": "753240",
    "end": "756560"
  },
  {
    "text": "can see it takes seven turns to uh",
    "start": "756560",
    "end": "759320"
  },
  {
    "text": "complete a",
    "start": "759320",
    "end": "760639"
  },
  {
    "text": "single request for the first time and uh",
    "start": "760639",
    "end": "763560"
  },
  {
    "text": "the bytes which are transferred is also",
    "start": "763560",
    "end": "765920"
  },
  {
    "text": "higher it's like 380 bytes uh so uh yes",
    "start": "765920",
    "end": "770800"
  },
  {
    "text": "I think we uh understood what the",
    "start": "770800",
    "end": "772920"
  },
  {
    "text": "protocol does and how it behaves on the",
    "start": "772920",
    "end": "775279"
  },
  {
    "text": "network now I'll give this back to my",
    "start": "775279",
    "end": "779399"
  },
  {
    "text": "colag to explain how we did the",
    "start": "779399",
    "end": "781279"
  },
  {
    "text": "benchmarks and what are the",
    "start": "781279",
    "end": "784440"
  },
  {
    "text": "results hello again um so why did we",
    "start": "785519",
    "end": "789959"
  },
  {
    "text": "Benchmark tdpc and grpc we encountered",
    "start": "789959",
    "end": "793560"
  },
  {
    "text": "this protocol when we were working with",
    "start": "793560",
    "end": "795079"
  },
  {
    "text": "a project called Cara containers um in",
    "start": "795079",
    "end": "797760"
  },
  {
    "text": "which the container D shim the Cara shim",
    "start": "797760",
    "end": "799800"
  },
  {
    "text": "talks to Cara agent which is a runtime",
    "start": "799800",
    "end": "801880"
  },
  {
    "text": "agent via this protocol ttrpc so uh we",
    "start": "801880",
    "end": "805920"
  },
  {
    "text": "kind of searched and we we found that",
    "start": "805920",
    "end": "808320"
  },
  {
    "text": "container also supports grpc but grpc is",
    "start": "808320",
    "end": "811519"
  },
  {
    "text": "not being used in client uh part of the",
    "start": "811519",
    "end": "814839"
  },
  {
    "text": "agent so we wanted to see how the two",
    "start": "814839",
    "end": "818000"
  },
  {
    "text": "protocols behave in interservice",
    "start": "818000",
    "end": "819880"
  },
  {
    "text": "communication such as between shim and",
    "start": "819880",
    "end": "822440"
  },
  {
    "text": "agent and uh we we tried to look for",
    "start": "822440",
    "end": "826040"
  },
  {
    "text": "Matrix but but we didn't find any so",
    "start": "826040",
    "end": "827920"
  },
  {
    "text": "with that motivation we wanted to",
    "start": "827920",
    "end": "830079"
  },
  {
    "text": "explore uh we wanted to see performance",
    "start": "830079",
    "end": "833040"
  },
  {
    "text": "and we wanted to see uh in the context",
    "start": "833040",
    "end": "835839"
  },
  {
    "text": "of memory and latency how does the two",
    "start": "835839",
    "end": "838320"
  },
  {
    "text": "protocol",
    "start": "838320",
    "end": "840160"
  },
  {
    "text": "behave so now in any inter service",
    "start": "840160",
    "end": "843120"
  },
  {
    "text": "communication minimizing latency is",
    "start": "843120",
    "end": "845639"
  },
  {
    "text": "crucial um for our Benchmark",
    "start": "845639",
    "end": "848480"
  },
  {
    "text": "benchmarking methodology we used very",
    "start": "848480",
    "end": "850519"
  },
  {
    "text": "simple protop files um from the official",
    "start": "850519",
    "end": "853759"
  },
  {
    "text": "repos of uh grpc and ttrpc so very hello",
    "start": "853759",
    "end": "857560"
  },
  {
    "text": "simple hello request hello reply you",
    "start": "857560",
    "end": "859199"
  },
  {
    "text": "know Pro Buffs we generated the uh",
    "start": "859199",
    "end": "862240"
  },
  {
    "text": "required binaries and uh definitions and",
    "start": "862240",
    "end": "865199"
  },
  {
    "text": "all and uh once we were done so uh we",
    "start": "865199",
    "end": "869360"
  },
  {
    "text": "created a tool which allows you to um",
    "start": "869360",
    "end": "872360"
  },
  {
    "text": "specify the concurrency and it uh allows",
    "start": "872360",
    "end": "875480"
  },
  {
    "text": "you to specify the time for which you",
    "start": "875480",
    "end": "877120"
  },
  {
    "text": "want to do the",
    "start": "877120",
    "end": "878240"
  },
  {
    "text": "measurement um uh and it will output the",
    "start": "878240",
    "end": "881399"
  },
  {
    "text": "data in terms of example average median",
    "start": "881399",
    "end": "883959"
  },
  {
    "text": "and P99 P90 and output this to uh file",
    "start": "883959",
    "end": "887759"
  },
  {
    "text": "as",
    "start": "887759",
    "end": "888720"
  },
  {
    "text": "well so uh for our measurement we set up",
    "start": "888720",
    "end": "892360"
  },
  {
    "text": "the servers very simple ones with the",
    "start": "892360",
    "end": "894839"
  },
  {
    "text": "protops and uh we measured the latency",
    "start": "894839",
    "end": "899800"
  },
  {
    "text": "we initially did so initially we warmed",
    "start": "899800",
    "end": "903279"
  },
  {
    "text": "up the cash with 200 preliminary",
    "start": "903279",
    "end": "905240"
  },
  {
    "text": "requests and uh subsequently we",
    "start": "905240",
    "end": "908240"
  },
  {
    "text": "bombarded the system with 5K requests so",
    "start": "908240",
    "end": "910680"
  },
  {
    "text": "initially you would see that there is a",
    "start": "910680",
    "end": "912199"
  },
  {
    "text": "spike um uh XX represents the request",
    "start": "912199",
    "end": "915800"
  },
  {
    "text": "number and Y AIS represents the latency",
    "start": "915800",
    "end": "918000"
  },
  {
    "text": "in micros initially you'll see that",
    "start": "918000",
    "end": "920360"
  },
  {
    "text": "Spike so despite warming up the cash you",
    "start": "920360",
    "end": "922399"
  },
  {
    "text": "see that there is a spike but uh as the",
    "start": "922399",
    "end": "924639"
  },
  {
    "text": "system settles down there is a",
    "start": "924639",
    "end": "926639"
  },
  {
    "text": "stabilization um and and uh you can see",
    "start": "926639",
    "end": "929839"
  },
  {
    "text": "the plots for tdpc and grpc tdpc on",
    "start": "929839",
    "end": "933839"
  },
  {
    "text": "average gave 100 microc of latency and",
    "start": "933839",
    "end": "937639"
  },
  {
    "text": "um grpc gave 150 micros of latency we",
    "start": "937639",
    "end": "941720"
  },
  {
    "text": "wanted to see how the trend continues as",
    "start": "941720",
    "end": "943560"
  },
  {
    "text": "we give more uh requests so for 30 gear",
    "start": "943560",
    "end": "946480"
  },
  {
    "text": "requests the trend was kind of similar",
    "start": "946480",
    "end": "949319"
  },
  {
    "text": "so",
    "start": "949319",
    "end": "950639"
  },
  {
    "text": "uh uh we we noticed that there is a",
    "start": "950639",
    "end": "953040"
  },
  {
    "text": "difference of 50 microc on average",
    "start": "953040",
    "end": "955560"
  },
  {
    "text": "between the two protocols uh but",
    "start": "955560",
    "end": "958319"
  },
  {
    "text": "considering that over the wire uh ttrpc",
    "start": "958319",
    "end": "961160"
  },
  {
    "text": "is slimmer it has uh lesser uh round",
    "start": "961160",
    "end": "963720"
  },
  {
    "text": "trips per request uh we see how that",
    "start": "963720",
    "end": "966720"
  },
  {
    "text": "thetical Advantage um actually shows up",
    "start": "966720",
    "end": "970519"
  },
  {
    "text": "in real world performance so",
    "start": "970519",
    "end": "974199"
  },
  {
    "text": "yeah for uh so the next one was memory",
    "start": "974199",
    "end": "977720"
  },
  {
    "text": "profiling for memory profiling we wanted",
    "start": "977720",
    "end": "980120"
  },
  {
    "text": "to use definitions from container D shim",
    "start": "980120",
    "end": "983240"
  },
  {
    "text": "so that we are able to simulate a real",
    "start": "983240",
    "end": "985440"
  },
  {
    "text": "world example and see how the two",
    "start": "985440",
    "end": "987600"
  },
  {
    "text": "protocols behave in you know realistic",
    "start": "987600",
    "end": "990560"
  },
  {
    "text": "context and uh so we picked up create",
    "start": "990560",
    "end": "993480"
  },
  {
    "text": "task request which is one of the uh U",
    "start": "993480",
    "end": "996160"
  },
  {
    "text": "most used uh uh service of uh container",
    "start": "996160",
    "end": "1000160"
  },
  {
    "text": "D um so we we generated the Proto files",
    "start": "1000160",
    "end": "1005000"
  },
  {
    "text": "there and using the server Interceptor",
    "start": "1005000",
    "end": "1007160"
  },
  {
    "text": "we basically measured so we used go",
    "start": "1007160",
    "end": "1009720"
  },
  {
    "text": "Lang's uh implementation of grpc and",
    "start": "1009720",
    "end": "1012440"
  },
  {
    "text": "tdpc and we used goang read M stats to",
    "start": "1012440",
    "end": "1016319"
  },
  {
    "text": "get the statistics from go run time",
    "start": "1016319",
    "end": "1018519"
  },
  {
    "text": "which basically has memory allocation",
    "start": "1018519",
    "end": "1020199"
  },
  {
    "text": "and also garbage collection values there",
    "start": "1020199",
    "end": "1023000"
  },
  {
    "text": "and uh we used two values one was CIS",
    "start": "1023000",
    "end": "1026438"
  },
  {
    "text": "and the other is Heap released CIS",
    "start": "1026439",
    "end": "1028400"
  },
  {
    "text": "represents the memory which is claimed",
    "start": "1028400",
    "end": "1030160"
  },
  {
    "text": "by goore un time for the application and",
    "start": "1030160",
    "end": "1032678"
  },
  {
    "text": "he Heap released is the memory which is",
    "start": "1032679",
    "end": "1035280"
  },
  {
    "text": "released back to the operating system by",
    "start": "1035280",
    "end": "1037600"
  },
  {
    "text": "the garbage collector so the effective",
    "start": "1037600",
    "end": "1039798"
  },
  {
    "text": "memory usage comes down to CIS minus",
    "start": "1039799",
    "end": "1042240"
  },
  {
    "text": "Heap released this uh this this metric",
    "start": "1042240",
    "end": "1045798"
  },
  {
    "text": "essentially represents the virtual",
    "start": "1045799",
    "end": "1047880"
  },
  {
    "text": "memory address space which is allocated",
    "start": "1047880",
    "end": "1049919"
  },
  {
    "text": "to this go",
    "start": "1049919",
    "end": "1051280"
  },
  {
    "text": "Application next we plotted the data for",
    "start": "1051280",
    "end": "1054160"
  },
  {
    "text": "the two protocols and uh we did this for",
    "start": "1054160",
    "end": "1058240"
  },
  {
    "text": "three different kind of payload sizes",
    "start": "1058240",
    "end": "1059880"
  },
  {
    "text": "starting from 64 kib till 4 miib uh on",
    "start": "1059880",
    "end": "1063960"
  },
  {
    "text": "the x-axis again there is a request",
    "start": "1063960",
    "end": "1066080"
  },
  {
    "text": "number and um on yaxis you will see Go",
    "start": "1066080",
    "end": "1068520"
  },
  {
    "text": "app memory that's in MIB so um the lines",
    "start": "1068520",
    "end": "1072799"
  },
  {
    "text": "represent the payload sizes sorry the",
    "start": "1072799",
    "end": "1075559"
  },
  {
    "text": "line represents the trends and uh for",
    "start": "1075559",
    "end": "1078880"
  },
  {
    "text": "for uh you can see that for lower",
    "start": "1078880",
    "end": "1080919"
  },
  {
    "text": "payload sizes grpc performs better than",
    "start": "1080919",
    "end": "1085039"
  },
  {
    "text": "tdpc and um so this suggests that the",
    "start": "1085039",
    "end": "1088480"
  },
  {
    "text": "core runtime management of memory",
    "start": "1088480",
    "end": "1090720"
  },
  {
    "text": "allocation and garbage collection for",
    "start": "1090720",
    "end": "1092280"
  },
  {
    "text": "grpc is better for ddpc we also wanted",
    "start": "1092280",
    "end": "1095360"
  },
  {
    "text": "to see how this you know translates in",
    "start": "1095360",
    "end": "1097600"
  },
  {
    "text": "physical memory usage for the two kind",
    "start": "1097600",
    "end": "1099480"
  },
  {
    "text": "of protocols so we used PSS and RSS",
    "start": "1099480",
    "end": "1102120"
  },
  {
    "text": "values from uh pmap tool and uh uh again",
    "start": "1102120",
    "end": "1107000"
  },
  {
    "text": "for three different payload sizes and",
    "start": "1107000",
    "end": "1109280"
  },
  {
    "text": "this is the data that we got uh so the",
    "start": "1109280",
    "end": "1111679"
  },
  {
    "text": "red line is ttrpc and uh blue line is",
    "start": "1111679",
    "end": "1114919"
  },
  {
    "text": "grpc so physical memory usage wise let",
    "start": "1114919",
    "end": "1118520"
  },
  {
    "text": "me show you the next graphs as well",
    "start": "1118520",
    "end": "1122039"
  },
  {
    "text": "actually yeah and you'll see that",
    "start": "1122039",
    "end": "1124799"
  },
  {
    "text": "initially there is like a stable line",
    "start": "1124799",
    "end": "1127400"
  },
  {
    "text": "which is basically we kept the system",
    "start": "1127400",
    "end": "1128799"
  },
  {
    "text": "idle for uh 10 seconds and then we",
    "start": "1128799",
    "end": "1130880"
  },
  {
    "text": "started snapshotting the system every uh",
    "start": "1130880",
    "end": "1133880"
  },
  {
    "text": "1 second uh to get the physical memory",
    "start": "1133880",
    "end": "1136880"
  },
  {
    "text": "usage for each of the payload sizes and",
    "start": "1136880",
    "end": "1138960"
  },
  {
    "text": "5K requests so you can see that um",
    "start": "1138960",
    "end": "1143720"
  },
  {
    "text": "physical memory usage wise tdpc performs",
    "start": "1143720",
    "end": "1146320"
  },
  {
    "text": "better than grpc so which suggests that",
    "start": "1146320",
    "end": "1149400"
  },
  {
    "text": "there is efficient physical memory usage",
    "start": "1149400",
    "end": "1151919"
  },
  {
    "text": "and maybe sharing of the libraries more",
    "start": "1151919",
    "end": "1155960"
  },
  {
    "text": "efficient and but we can also notice",
    "start": "1155960",
    "end": "1158760"
  },
  {
    "text": "that as the payload size increase There",
    "start": "1158760",
    "end": "1161480"
  },
  {
    "text": "is almost no difference between the two",
    "start": "1161480",
    "end": "1165480"
  },
  {
    "text": "protocols so we also wanted to see how",
    "start": "1165480",
    "end": "1168039"
  },
  {
    "text": "that fair out in Rust uh we used PSS and",
    "start": "1168039",
    "end": "1171280"
  },
  {
    "text": "RSS values for the rust implementation",
    "start": "1171280",
    "end": "1173039"
  },
  {
    "text": "we use uh tonic for grpc and uh we used",
    "start": "1173039",
    "end": "1177600"
  },
  {
    "text": "um tdpc rust implementation and uh this",
    "start": "1177600",
    "end": "1181760"
  },
  {
    "text": "is the plot for those two and in this we",
    "start": "1181760",
    "end": "1185320"
  },
  {
    "text": "can notice that tdpc does not perform as",
    "start": "1185320",
    "end": "1188120"
  },
  {
    "text": "well um grpc is actually memory",
    "start": "1188120",
    "end": "1190919"
  },
  {
    "text": "efficient than tdpc for rust",
    "start": "1190919",
    "end": "1194600"
  },
  {
    "text": "implementation so that was all the data",
    "start": "1194600",
    "end": "1196919"
  },
  {
    "text": "that we got from our benchmarks",
    "start": "1196919",
    "end": "1199280"
  },
  {
    "text": "uh what are the",
    "start": "1199280",
    "end": "1200880"
  },
  {
    "text": "takeaways tdpc is lighter over the",
    "start": "1200880",
    "end": "1203480"
  },
  {
    "text": "network it is slimmer protocol and it",
    "start": "1203480",
    "end": "1206240"
  },
  {
    "text": "has slightly B latency as compared to",
    "start": "1206240",
    "end": "1209520"
  },
  {
    "text": "grpc but it is not as memory efficient",
    "start": "1209520",
    "end": "1213919"
  },
  {
    "text": "as one might expect it to",
    "start": "1213919",
    "end": "1216679"
  },
  {
    "text": "be and uh so tdpc in its concept is very",
    "start": "1216679",
    "end": "1221000"
  },
  {
    "text": "good but looking at the results we think",
    "start": "1221000",
    "end": "1224159"
  },
  {
    "text": "that implementation could be",
    "start": "1224159",
    "end": "1226760"
  },
  {
    "text": "improved um that that was all from our",
    "start": "1226760",
    "end": "1230159"
  },
  {
    "text": "side I have attached some references I",
    "start": "1230159",
    "end": "1232080"
  },
  {
    "text": "have attached the tools um that we used",
    "start": "1232080",
    "end": "1234880"
  },
  {
    "text": "for our benchmarking and",
    "start": "1234880",
    "end": "1237320"
  },
  {
    "text": "profiling that is it thank you any",
    "start": "1237320",
    "end": "1242880"
  },
  {
    "text": "[Applause]",
    "start": "1243020",
    "end": "1246140"
  },
  {
    "text": "questions so when you say um this is for",
    "start": "1247760",
    "end": "1251400"
  },
  {
    "text": "inter service communication on the same",
    "start": "1251400",
    "end": "1253360"
  },
  {
    "text": "host so um like I believe most of the",
    "start": "1253360",
    "end": "1257720"
  },
  {
    "text": "use cases are service matching with you",
    "start": "1257720",
    "end": "1259960"
  },
  {
    "text": "know production based system which we",
    "start": "1259960",
    "end": "1262039"
  },
  {
    "text": "have thousands of services communicating",
    "start": "1262039",
    "end": "1264240"
  },
  {
    "text": "with each other so what's the use case",
    "start": "1264240",
    "end": "1267720"
  },
  {
    "text": "like apart from your use case in which",
    "start": "1267720",
    "end": "1269120"
  },
  {
    "text": "you know you want to talk about inter",
    "start": "1269120",
    "end": "1271000"
  },
  {
    "text": "container uh Communications like what",
    "start": "1271000",
    "end": "1273440"
  },
  {
    "text": "other use case do you feel this would",
    "start": "1273440",
    "end": "1275480"
  },
  {
    "text": "fit as like ttrp T ttrpc can be um",
    "start": "1275480",
    "end": "1280559"
  },
  {
    "text": "chosen over grpc like because for our",
    "start": "1280559",
    "end": "1282720"
  },
  {
    "text": "use case like most of services are inter",
    "start": "1282720",
    "end": "1285200"
  },
  {
    "text": "micro service communication so um as",
    "start": "1285200",
    "end": "1289640"
  },
  {
    "text": "uh as you said like service mes is kind",
    "start": "1289640",
    "end": "1293159"
  },
  {
    "text": "of a one use case that uh could uh that",
    "start": "1293159",
    "end": "1295880"
  },
  {
    "text": "could be done I think uh out of this",
    "start": "1295880",
    "end": "1298360"
  },
  {
    "text": "Cloud uh could use for like a iot kind",
    "start": "1298360",
    "end": "1303679"
  },
  {
    "text": "of mqdt replacement I think um so that",
    "start": "1303679",
    "end": "1308080"
  },
  {
    "text": "can be done but of course then we have",
    "start": "1308080",
    "end": "1309919"
  },
  {
    "text": "to look at uh an external security proxy",
    "start": "1309919",
    "end": "1313279"
  },
  {
    "text": "out of this even if the iot use case or",
    "start": "1313279",
    "end": "1315600"
  },
  {
    "text": "other use case where wherever you're",
    "start": "1315600",
    "end": "1317799"
  },
  {
    "text": "exposing this DPC to the internet it has",
    "start": "1317799",
    "end": "1320720"
  },
  {
    "text": "to come up with another proxy layer of",
    "start": "1320720",
    "end": "1323039"
  },
  {
    "text": "security or something that if it's a",
    "start": "1323039",
    "end": "1325159"
  },
  {
    "text": "inter service communication anywhere uh",
    "start": "1325159",
    "end": "1328159"
  },
  {
    "text": "the requirement is uh so basically the",
    "start": "1328159",
    "end": "1330720"
  },
  {
    "text": "requirement has to be it doesn't if it's",
    "start": "1330720",
    "end": "1332720"
  },
  {
    "text": "already behind a firewell and it require",
    "start": "1332720",
    "end": "1335400"
  },
  {
    "text": "very low latency implementations then it",
    "start": "1335400",
    "end": "1338039"
  },
  {
    "text": "could be um than anywhere that it could",
    "start": "1338039",
    "end": "1341320"
  },
  {
    "text": "be",
    "start": "1341320",
    "end": "1342000"
  },
  {
    "text": "used okay and one more question like",
    "start": "1342000",
    "end": "1344840"
  },
  {
    "text": "there was a mention about in your slide",
    "start": "1344840",
    "end": "1347080"
  },
  {
    "text": "about um like binary frame versus the",
    "start": "1347080",
    "end": "1349679"
  },
  {
    "text": "message and you're when you're using",
    "start": "1349679",
    "end": "1352000"
  },
  {
    "text": "Proto buff then how do you like when",
    "start": "1352000",
    "end": "1355000"
  },
  {
    "text": "Proto buff cize right already converting",
    "start": "1355000",
    "end": "1358080"
  },
  {
    "text": "it to some binary frames like U uh yes I",
    "start": "1358080",
    "end": "1361120"
  },
  {
    "text": "mean the naming of the stuff is like",
    "start": "1361120",
    "end": "1364279"
  },
  {
    "text": "it's still uses binary uh so the naming",
    "start": "1364279",
    "end": "1367919"
  },
  {
    "text": "of it like message framing like it was",
    "start": "1367919",
    "end": "1370520"
  },
  {
    "text": "done as a for http2 it's called binary",
    "start": "1370520",
    "end": "1373799"
  },
  {
    "text": "Framing and uh and after like it was",
    "start": "1373799",
    "end": "1377559"
  },
  {
    "text": "named in the TTP has a message Framing",
    "start": "1377559",
    "end": "1379400"
  },
  {
    "text": "and how the messages are framed it still",
    "start": "1379400",
    "end": "1381440"
  },
  {
    "text": "uses Proto and it's true the data",
    "start": "1381440",
    "end": "1383360"
  },
  {
    "text": "payload part of it still will be a",
    "start": "1383360",
    "end": "1385279"
  },
  {
    "text": "binary version of the payload so uh once",
    "start": "1385279",
    "end": "1388720"
  },
  {
    "text": "you use protuff it will convert into a",
    "start": "1388720",
    "end": "1391240"
  },
  {
    "text": "binary representation and then like send",
    "start": "1391240",
    "end": "1394000"
  },
  {
    "text": "it over the network so yes uh there is",
    "start": "1394000",
    "end": "1396840"
  },
  {
    "text": "binary data part of it still binary",
    "start": "1396840",
    "end": "1399559"
  },
  {
    "text": "other parts are not uh converted to a",
    "start": "1399559",
    "end": "1402360"
  },
  {
    "text": "binary",
    "start": "1402360",
    "end": "1405360"
  },
  {
    "text": "okay just been played with",
    "start": "1406120",
    "end": "1409039"
  },
  {
    "text": "noncp",
    "start": "1409039",
    "end": "1412039"
  },
  {
    "text": "based uh no I know it was not done like",
    "start": "1413000",
    "end": "1417400"
  },
  {
    "text": "for I think uh even for grpc they are",
    "start": "1417400",
    "end": "1420279"
  },
  {
    "text": "experimenting with quick uh so",
    "start": "1420279",
    "end": "1423799"
  },
  {
    "text": "maybe yes I know there it's not it's",
    "start": "1423799",
    "end": "1426320"
  },
  {
    "text": "still experimental I mean I saw in Theo",
    "start": "1426320",
    "end": "1428320"
  },
  {
    "text": "and there talks going on so I",
    "start": "1428320",
    "end": "1431759"
  },
  {
    "text": "think any anything else uh",
    "start": "1433200",
    "end": "1438440"
  },
  {
    "text": "okay okay thank you",
    "start": "1438880",
    "end": "1443279"
  }
]