[
  {
    "text": "so hi everyone thank you for for joining",
    "start": "120",
    "end": "2800"
  },
  {
    "text": "me today in app developer con um I will",
    "start": "2800",
    "end": "6279"
  },
  {
    "text": "be talking about application modern",
    "start": "6279",
    "end": "9320"
  },
  {
    "text": "modernization um I'll try to pair Theory",
    "start": "9320",
    "end": "12639"
  },
  {
    "text": "with a few of the Lessons Learned either",
    "start": "12639",
    "end": "15400"
  },
  {
    "text": "through through our journey to modernize",
    "start": "15400",
    "end": "17480"
  },
  {
    "text": "our Cloud stack at",
    "start": "17480",
    "end": "19039"
  },
  {
    "text": "mongodb um or the the work my team and I",
    "start": "19039",
    "end": "21880"
  },
  {
    "text": "were doing at our time at Citrix before",
    "start": "21880",
    "end": "24599"
  },
  {
    "text": "that um and hopefully you you're going",
    "start": "24599",
    "end": "27519"
  },
  {
    "text": "to find this useful and you're going to",
    "start": "27519",
    "end": "30279"
  },
  {
    "text": "find valuable insights that are going to",
    "start": "30279",
    "end": "32320"
  },
  {
    "text": "help you with what you are",
    "start": "32320",
    "end": "34160"
  },
  {
    "text": "building I'm George hanaras currently",
    "start": "34160",
    "end": "36760"
  },
  {
    "text": "working as a director of engineering at",
    "start": "36760",
    "end": "39239"
  },
  {
    "text": "mongodb um I'm looking after our",
    "start": "39239",
    "end": "41520"
  },
  {
    "text": "customers who deploy and manage mongodb",
    "start": "41520",
    "end": "43480"
  },
  {
    "text": "on kubernetes and also our Enterprise",
    "start": "43480",
    "end": "46000"
  },
  {
    "text": "Advanced customers um a big part of what",
    "start": "46000",
    "end": "49719"
  },
  {
    "text": "we'll see today comes from a larger body",
    "start": "49719",
    "end": "52239"
  },
  {
    "text": "of work that we've been doing for just",
    "start": "52239",
    "end": "54239"
  },
  {
    "text": "over a year now um which will come",
    "start": "54239",
    "end": "58920"
  },
  {
    "text": "out hopefully in May um it's the",
    "start": "58920",
    "end": "62320"
  },
  {
    "text": "upcoming book practical platform",
    "start": "62320",
    "end": "63920"
  },
  {
    "text": "engineering by P and you can connect",
    "start": "63920",
    "end": "66439"
  },
  {
    "text": "with me to to get updates on",
    "start": "66439",
    "end": "68600"
  },
  {
    "text": "that so a good way to start is to make",
    "start": "68600",
    "end": "72200"
  },
  {
    "text": "sure that we're all on the same page as",
    "start": "72200",
    "end": "74479"
  },
  {
    "text": "application modernization has been uh",
    "start": "74479",
    "end": "77040"
  },
  {
    "text": "one of those terms that's been misused",
    "start": "77040",
    "end": "79600"
  },
  {
    "text": "quite often um so application",
    "start": "79600",
    "end": "82320"
  },
  {
    "text": "modernization is about updating Legacy",
    "start": "82320",
    "end": "84759"
  },
  {
    "text": "software in order to to adopt newer",
    "start": "84759",
    "end": "87640"
  },
  {
    "text": "software",
    "start": "87640",
    "end": "88759"
  },
  {
    "text": "paradigms the that is done by adopting",
    "start": "88759",
    "end": "91280"
  },
  {
    "text": "new Frameworks architectural patterns",
    "start": "91280",
    "end": "93720"
  },
  {
    "text": "infrastructure components and even new",
    "start": "93720",
    "end": "95759"
  },
  {
    "text": "languages uh Al together at some cases",
    "start": "95759",
    "end": "99000"
  },
  {
    "text": "so what is interesting here is that even",
    "start": "99000",
    "end": "101000"
  },
  {
    "text": "in this really nice definition the",
    "start": "101000",
    "end": "103439"
  },
  {
    "text": "interesting part is with the words",
    "start": "103439",
    "end": "105360"
  },
  {
    "text": "updating and Legacy which are two words",
    "start": "105360",
    "end": "107560"
  },
  {
    "text": "again quite broad um and and quite M",
    "start": "107560",
    "end": "111479"
  },
  {
    "text": "misus so let's dive into those a bit",
    "start": "111479",
    "end": "114880"
  },
  {
    "text": "deeper so Legacy has always been one of",
    "start": "114880",
    "end": "117680"
  },
  {
    "text": "those Concepts that we really love to",
    "start": "117680",
    "end": "119600"
  },
  {
    "text": "hate",
    "start": "119600",
    "end": "120600"
  },
  {
    "text": "Legacy software is used to describe",
    "start": "120600",
    "end": "123439"
  },
  {
    "text": "applications that uh have a very bad",
    "start": "123439",
    "end": "126280"
  },
  {
    "text": "codebase very complex pagetti code um",
    "start": "126280",
    "end": "130119"
  },
  {
    "text": "don't work properly aren't reliable um",
    "start": "130119",
    "end": "133800"
  },
  {
    "text": "and and many more cases where kind of",
    "start": "133800",
    "end": "135920"
  },
  {
    "text": "legacy is this catch all term about kind",
    "start": "135920",
    "end": "138480"
  },
  {
    "text": "of bad code but Legacy also means",
    "start": "138480",
    "end": "141319"
  },
  {
    "text": "Mission critical um and that's often",
    "start": "141319",
    "end": "143800"
  },
  {
    "text": "where the problem start uh the concept",
    "start": "143800",
    "end": "146720"
  },
  {
    "text": "of if it's working we shouldn't touch it",
    "start": "146720",
    "end": "149640"
  },
  {
    "text": "um it's hard to update hard to scale and",
    "start": "149640",
    "end": "152840"
  },
  {
    "text": "changing Legacy systems often is",
    "start": "152840",
    "end": "155800"
  },
  {
    "text": "complicated in terms of stakeholder",
    "start": "155800",
    "end": "157959"
  },
  {
    "text": "management and business",
    "start": "157959",
    "end": "160920"
  },
  {
    "text": "decisions so if it's so hard why are we",
    "start": "160920",
    "end": "163720"
  },
  {
    "text": "trying so much to do it then most",
    "start": "163720",
    "end": "166159"
  },
  {
    "text": "importantly uh we often reach critical",
    "start": "166159",
    "end": "169080"
  },
  {
    "text": "points when organizations are growing",
    "start": "169080",
    "end": "171560"
  },
  {
    "text": "fast or growing a lot um that we just",
    "start": "171560",
    "end": "174519"
  },
  {
    "text": "can't avoid doing it uh another big",
    "start": "174519",
    "end": "177280"
  },
  {
    "text": "driver is reducing the complexity and",
    "start": "177280",
    "end": "179319"
  },
  {
    "text": "the cost of running",
    "start": "179319",
    "end": "180959"
  },
  {
    "text": "Services um making deployments easier",
    "start": "180959",
    "end": "183680"
  },
  {
    "text": "and more frequent rather than something",
    "start": "183680",
    "end": "185680"
  },
  {
    "text": "that happens once a quarter and is kind",
    "start": "185680",
    "end": "188000"
  },
  {
    "text": "of the major company event the release",
    "start": "188000",
    "end": "191519"
  },
  {
    "text": "um and over to to improve the quality of",
    "start": "191519",
    "end": "193680"
  },
  {
    "text": "our services so improving uptime",
    "start": "193680",
    "end": "195400"
  },
  {
    "text": "improving resilience and so",
    "start": "195400",
    "end": "198599"
  },
  {
    "text": "on um the 7rs is a great way to start",
    "start": "198599",
    "end": "202239"
  },
  {
    "text": "exploring the options we have uh as to",
    "start": "202239",
    "end": "205720"
  },
  {
    "text": "how we can modernize a service retiring",
    "start": "205720",
    "end": "208680"
  },
  {
    "text": "replacing and repurchasing in is used",
    "start": "208680",
    "end": "210599"
  },
  {
    "text": "more to address third party Services uh",
    "start": "210599",
    "end": "213360"
  },
  {
    "text": "so we're not going to be addressing that",
    "start": "213360",
    "end": "214680"
  },
  {
    "text": "a lot retaining means doing nothing",
    "start": "214680",
    "end": "217120"
  },
  {
    "text": "about it so obviously I couldn't do a",
    "start": "217120",
    "end": "219439"
  },
  {
    "text": "whole presentation about doing nothing",
    "start": "219439",
    "end": "220920"
  },
  {
    "text": "about it uh so we'll be focusing more on",
    "start": "220920",
    "end": "223319"
  },
  {
    "text": "refactoring rep platforming and",
    "start": "223319",
    "end": "226640"
  },
  {
    "text": "rehosting so refactoring has the biggest",
    "start": "226640",
    "end": "229760"
  },
  {
    "text": "impact but also requires the biggest",
    "start": "229760",
    "end": "232360"
  },
  {
    "text": "effort and carries the largest risks",
    "start": "232360",
    "end": "235120"
  },
  {
    "text": "it's about rearching uh the code base",
    "start": "235120",
    "end": "237720"
  },
  {
    "text": "and even rewriting big parts of it",
    "start": "237720",
    "end": "241720"
  },
  {
    "text": "the rehosting strategy we we also call",
    "start": "242040",
    "end": "244439"
  },
  {
    "text": "that lift and shift um involves lifting",
    "start": "244439",
    "end": "247560"
  },
  {
    "text": "parts of of an application from on Prem",
    "start": "247560",
    "end": "251519"
  },
  {
    "text": "or um a different Cloud environment to a",
    "start": "251519",
    "end": "254840"
  },
  {
    "text": "new Cloud environment to a new to a new",
    "start": "254840",
    "end": "257560"
  },
  {
    "text": "infrastructure shifting is done with",
    "start": "257560",
    "end": "259759"
  },
  {
    "text": "very little or no modification in the",
    "start": "259759",
    "end": "261720"
  },
  {
    "text": "lift and shift uh strategy it's a it's a",
    "start": "261720",
    "end": "264680"
  },
  {
    "text": "kind of a beginner's approach um to",
    "start": "264680",
    "end": "267600"
  },
  {
    "text": "start kind of application modernization",
    "start": "267600",
    "end": "271720"
  },
  {
    "text": "now it's it's very easy to implement uh",
    "start": "272400",
    "end": "275240"
  },
  {
    "text": "from a from a code perspective uh but",
    "start": "275240",
    "end": "278039"
  },
  {
    "text": "alone you might not be getting the full",
    "start": "278039",
    "end": "280639"
  },
  {
    "text": "benefit of the underlying infrastructure",
    "start": "280639",
    "end": "282560"
  },
  {
    "text": "so a good example there is kind of",
    "start": "282560",
    "end": "284600"
  },
  {
    "text": "taking uh taking a monolith that's",
    "start": "284600",
    "end": "286440"
  },
  {
    "text": "running on a VM and putting it into",
    "start": "286440",
    "end": "287840"
  },
  {
    "text": "kubernetes without doing any refactoring",
    "start": "287840",
    "end": "290360"
  },
  {
    "text": "uh you are going to have some benefits",
    "start": "290360",
    "end": "291880"
  },
  {
    "text": "but definitely you're not going to see",
    "start": "291880",
    "end": "293120"
  },
  {
    "text": "all the benefits there um finally rep",
    "start": "293120",
    "end": "296240"
  },
  {
    "text": "platform uh migration is is the middle",
    "start": "296240",
    "end": "298759"
  },
  {
    "text": "ground between those too it's similar to",
    "start": "298759",
    "end": "302280"
  },
  {
    "text": "rehosting uh but it does involve some",
    "start": "302280",
    "end": "304880"
  },
  {
    "text": "modification of the application to take",
    "start": "304880",
    "end": "306680"
  },
  {
    "text": "advantage of the underlying",
    "start": "306680",
    "end": "309960"
  },
  {
    "text": "infrastructure so let's let's start by",
    "start": "312080",
    "end": "314479"
  },
  {
    "text": "taking a closer look into into",
    "start": "314479",
    "end": "317479"
  },
  {
    "text": "refactoring so what we want to do in",
    "start": "317479",
    "end": "319880"
  },
  {
    "text": "refactoring is to go from the monolith",
    "start": "319880",
    "end": "322039"
  },
  {
    "text": "on the left and start adopting",
    "start": "322039",
    "end": "324080"
  },
  {
    "text": "architectures further uh on the right",
    "start": "324080",
    "end": "326639"
  },
  {
    "text": "like microservices and",
    "start": "326639",
    "end": "328639"
  },
  {
    "text": "microservices",
    "start": "328639",
    "end": "330240"
  },
  {
    "text": "now a monolithic architecture is is kind",
    "start": "330240",
    "end": "332319"
  },
  {
    "text": "of a traditional architecture uh the",
    "start": "332319",
    "end": "335240"
  },
  {
    "text": "entire system is built as a single units",
    "start": "335240",
    "end": "338400"
  },
  {
    "text": "the components are tightly coupled um",
    "start": "338400",
    "end": "341520"
  },
  {
    "text": "it's it's simple it's easy to implement",
    "start": "341520",
    "end": "344840"
  },
  {
    "text": "uh but it's it's kind of hard to",
    "start": "344840",
    "end": "346360"
  },
  {
    "text": "maintain as as the organization uh",
    "start": "346360",
    "end": "349560"
  },
  {
    "text": "scales the monolithic architecture is",
    "start": "349560",
    "end": "352000"
  },
  {
    "text": "not as bad as we as we kind of present",
    "start": "352000",
    "end": "354600"
  },
  {
    "text": "it to be nowadays it's good in some",
    "start": "354600",
    "end": "356800"
  },
  {
    "text": "cases uh kind of small projects new",
    "start": "356800",
    "end": "359639"
  },
  {
    "text": "Greenfield projects and so on",
    "start": "359639",
    "end": "362240"
  },
  {
    "text": "microservices focus on building small",
    "start": "362240",
    "end": "364759"
  },
  {
    "text": "independent services that can be",
    "start": "364759",
    "end": "366160"
  },
  {
    "text": "deployed and managed",
    "start": "366160",
    "end": "367639"
  },
  {
    "text": "independently um they have a very",
    "start": "367639",
    "end": "370000"
  },
  {
    "text": "specific business function they interact",
    "start": "370000",
    "end": "372319"
  },
  {
    "text": "through well-defined",
    "start": "372319",
    "end": "375199"
  },
  {
    "text": "apis and they're more complex to",
    "start": "375199",
    "end": "377919"
  },
  {
    "text": "implement and manage and and kind of",
    "start": "377919",
    "end": "380440"
  },
  {
    "text": "there is this risk that we can over",
    "start": "380440",
    "end": "384360"
  },
  {
    "text": "complicate things and go to very small",
    "start": "384360",
    "end": "386319"
  },
  {
    "text": "services that are not self- sustained",
    "start": "386319",
    "end": "388400"
  },
  {
    "text": "and and they don't have business",
    "start": "388400",
    "end": "390639"
  },
  {
    "text": "meaning now finally macros services are",
    "start": "390639",
    "end": "393680"
  },
  {
    "text": "kind of the new the new kid on the blog",
    "start": "393680",
    "end": "396120"
  },
  {
    "text": "so",
    "start": "396120",
    "end": "397840"
  },
  {
    "text": "they've they a few descriptions include",
    "start": "397840",
    "end": "400560"
  },
  {
    "text": "kind of that they're large",
    "start": "400560",
    "end": "402720"
  },
  {
    "text": "microservices uh they are so parts of uh",
    "start": "402720",
    "end": "405880"
  },
  {
    "text": "kind of partial",
    "start": "405880",
    "end": "407240"
  },
  {
    "text": "monolith um another definition which",
    "start": "407240",
    "end": "410240"
  },
  {
    "text": "which is good says that there are a few",
    "start": "410240",
    "end": "412400"
  },
  {
    "text": "big Loosely coupled Services um kind of",
    "start": "412400",
    "end": "415759"
  },
  {
    "text": "a broad definition there so basically",
    "start": "415759",
    "end": "417879"
  },
  {
    "text": "they are stripped down and streamlined",
    "start": "417879",
    "end": "419840"
  },
  {
    "text": "monoliths um so they have bit more",
    "start": "419840",
    "end": "423440"
  },
  {
    "text": "business meaning than just a",
    "start": "423440",
    "end": "425160"
  },
  {
    "text": "microservice that does one very small",
    "start": "425160",
    "end": "427360"
  },
  {
    "text": "tasks and it's it's kind of easier than",
    "start": "427360",
    "end": "430240"
  },
  {
    "text": "managing hundreds of microservices with",
    "start": "430240",
    "end": "432319"
  },
  {
    "text": "very narrow",
    "start": "432319",
    "end": "435000"
  },
  {
    "text": "context so as we start to modernize the",
    "start": "439240",
    "end": "441960"
  },
  {
    "text": "architecture we have we have a few um",
    "start": "441960",
    "end": "445000"
  },
  {
    "text": "architectural tools first off service",
    "start": "445000",
    "end": "447759"
  },
  {
    "text": "oriented architectures um it's based on",
    "start": "447759",
    "end": "451199"
  },
  {
    "text": "the services context so the system is",
    "start": "451199",
    "end": "454080"
  },
  {
    "text": "divided into Services each performs a",
    "start": "454080",
    "end": "457080"
  },
  {
    "text": "specific functions those Services",
    "start": "457080",
    "end": "459479"
  },
  {
    "text": "communicate with each other using well-",
    "start": "459479",
    "end": "461160"
  },
  {
    "text": "defined",
    "start": "461160",
    "end": "462520"
  },
  {
    "text": "interfaces",
    "start": "462520",
    "end": "464240"
  },
  {
    "text": "um service Ori service oriented",
    "start": "464240",
    "end": "467319"
  },
  {
    "text": "architectures is highly scalable",
    "start": "467319",
    "end": "469360"
  },
  {
    "text": "flexible and it's it's a very good",
    "start": "469360",
    "end": "471560"
  },
  {
    "text": "choice for large complicated projects um",
    "start": "471560",
    "end": "474919"
  },
  {
    "text": "however it is more uh complex to",
    "start": "474919",
    "end": "477919"
  },
  {
    "text": "implement and maintain so this kind of",
    "start": "477919",
    "end": "480400"
  },
  {
    "text": "sign sounds a lot like microservices",
    "start": "480400",
    "end": "482479"
  },
  {
    "text": "right so microservices are considered",
    "start": "482479",
    "end": "485759"
  },
  {
    "text": "the variant of service oriented",
    "start": "485759",
    "end": "490000"
  },
  {
    "text": "architectures the second tool is domain",
    "start": "490000",
    "end": "492199"
  },
  {
    "text": "driven design um now DDD focuses on",
    "start": "492199",
    "end": "496479"
  },
  {
    "text": "modeling the domain of a software system",
    "start": "496479",
    "end": "499759"
  },
  {
    "text": "um so we we divide the system into",
    "start": "499759",
    "end": "503319"
  },
  {
    "text": "domains each domain has its own set of",
    "start": "503319",
    "end": "506720"
  },
  {
    "text": "models and business logic um again this",
    "start": "506720",
    "end": "509879"
  },
  {
    "text": "is a highly scalable architecture it is",
    "start": "509879",
    "end": "512599"
  },
  {
    "text": "a great Gap great bridge between the Gap",
    "start": "512599",
    "end": "516599"
  },
  {
    "text": "uh between engineering and business",
    "start": "516599",
    "end": "518120"
  },
  {
    "text": "functions we have a Common Language",
    "start": "518120",
    "end": "519959"
  },
  {
    "text": "between business and Engineering um but",
    "start": "519959",
    "end": "523360"
  },
  {
    "text": "the modeling process again here can be a",
    "start": "523360",
    "end": "525240"
  },
  {
    "text": "bit timec",
    "start": "525240",
    "end": "527040"
  },
  {
    "text": "consuming lastly we have uh event driven",
    "start": "527040",
    "end": "529959"
  },
  {
    "text": "architectures Eda uh so here we focus on",
    "start": "529959",
    "end": "533360"
  },
  {
    "text": "the flow of events between components in",
    "start": "533360",
    "end": "535640"
  },
  {
    "text": "the system um so each component",
    "start": "535640",
    "end": "538760"
  },
  {
    "text": "communicates with with each other by",
    "start": "538760",
    "end": "540040"
  },
  {
    "text": "sending and receiving events that's",
    "start": "540040",
    "end": "541880"
  },
  {
    "text": "that's a core principle in Eda uh the",
    "start": "541880",
    "end": "544839"
  },
  {
    "text": "architecture is highly decoupled um and",
    "start": "544839",
    "end": "547560"
  },
  {
    "text": "allows for kind of creating highly",
    "start": "547560",
    "end": "549480"
  },
  {
    "text": "scalable",
    "start": "549480",
    "end": "551040"
  },
  {
    "text": "systems and how do these three concepts",
    "start": "551040",
    "end": "554040"
  },
  {
    "text": "come together so SOA and Eda help us",
    "start": "554040",
    "end": "556880"
  },
  {
    "text": "design the V driven micro and macro",
    "start": "556880",
    "end": "559079"
  },
  {
    "text": "Services while DDD helps us Define those",
    "start": "559079",
    "end": "562320"
  },
  {
    "text": "services and their functionalities so",
    "start": "562320",
    "end": "564800"
  },
  {
    "text": "well-designed services are are the ones",
    "start": "564800",
    "end": "567399"
  },
  {
    "text": "whose name is familiar to to everyone",
    "start": "567399",
    "end": "570040"
  },
  {
    "text": "from the developer to the CEO and the",
    "start": "570040",
    "end": "572760"
  },
  {
    "text": "executives actually care how the",
    "start": "572760",
    "end": "574240"
  },
  {
    "text": "services are",
    "start": "574240",
    "end": "576839"
  },
  {
    "text": "doing so let's let's take an example so",
    "start": "577480",
    "end": "580560"
  },
  {
    "text": "we have a we have a monolith um with all",
    "start": "580560",
    "end": "584640"
  },
  {
    "text": "of the modules of building an e-commerce",
    "start": "584640",
    "end": "586880"
  },
  {
    "text": "website so using a DDD approach we can",
    "start": "586880",
    "end": "589920"
  },
  {
    "text": "start by defining different bounded",
    "start": "589920",
    "end": "592880"
  },
  {
    "text": "context in in the e-commerce domain and",
    "start": "592880",
    "end": "596320"
  },
  {
    "text": "as a second step we'll be choosing one",
    "start": "596320",
    "end": "598240"
  },
  {
    "text": "of those context as our first",
    "start": "598240",
    "end": "600880"
  },
  {
    "text": "microservice we can start by thinking",
    "start": "600880",
    "end": "603079"
  },
  {
    "text": "about a module that is used by many",
    "start": "603079",
    "end": "605760"
  },
  {
    "text": "other services um is quite independent",
    "start": "605760",
    "end": "608720"
  },
  {
    "text": "and would make S sense to kind of be a",
    "start": "608720",
    "end": "611000"
  },
  {
    "text": "stand loone",
    "start": "611000",
    "end": "612880"
  },
  {
    "text": "service no surprises the authentication",
    "start": "612880",
    "end": "616160"
  },
  {
    "text": "module is always a great first candidate",
    "start": "616160",
    "end": "620720"
  },
  {
    "text": "um this this was kind of also the",
    "start": "620720",
    "end": "622959"
  },
  {
    "text": "starting point in Mongo's um so a",
    "start": "622959",
    "end": "626200"
  },
  {
    "text": "journey uh this technique is called",
    "start": "626200",
    "end": "628600"
  },
  {
    "text": "strangling the monolith so essentially",
    "start": "628600",
    "end": "631360"
  },
  {
    "text": "you build the Strangling facade that is",
    "start": "631360",
    "end": "634160"
  },
  {
    "text": "an API Gateway um that makes this",
    "start": "634160",
    "end": "637279"
  },
  {
    "text": "transition invisible to the outside",
    "start": "637279",
    "end": "639160"
  },
  {
    "text": "world so after a module has been carved",
    "start": "639160",
    "end": "641959"
  },
  {
    "text": "out of the monolith and is deployed as a",
    "start": "641959",
    "end": "643760"
  },
  {
    "text": "new service uh now we also have to think",
    "start": "643760",
    "end": "646279"
  },
  {
    "text": "of what we call the backing",
    "start": "646279",
    "end": "649880"
  },
  {
    "text": "services so according to the 12 Factor",
    "start": "650959",
    "end": "653480"
  },
  {
    "text": "app methodology uh backing service is a",
    "start": "653480",
    "end": "657160"
  },
  {
    "text": "service that the app consumes over the",
    "start": "657160",
    "end": "659279"
  },
  {
    "text": "Network as part of its kind of normal",
    "start": "659279",
    "end": "661760"
  },
  {
    "text": "operation um it can include data stores",
    "start": "661760",
    "end": "665480"
  },
  {
    "text": "queing systems smtps casting systems",
    "start": "665480",
    "end": "669320"
  },
  {
    "text": "anything like that so to our new service",
    "start": "669320",
    "end": "672040"
  },
  {
    "text": "the backing services are attached to the",
    "start": "672040",
    "end": "674200"
  },
  {
    "text": "service so the final step each time is",
    "start": "674200",
    "end": "677160"
  },
  {
    "text": "to give the new service its own backing",
    "start": "677160",
    "end": "679000"
  },
  {
    "text": "services and full ownership of it so a",
    "start": "679000",
    "end": "681480"
  },
  {
    "text": "service has full ownership over its",
    "start": "681480",
    "end": "685000"
  },
  {
    "text": "database so after doing that for one",
    "start": "685000",
    "end": "687360"
  },
  {
    "text": "service we repeat the process for each",
    "start": "687360",
    "end": "689320"
  },
  {
    "text": "of the bounded context until the",
    "start": "689320",
    "end": "691000"
  },
  {
    "text": "monolith has completely",
    "start": "691000",
    "end": "694519"
  },
  {
    "text": "disappeared although this this seems",
    "start": "695519",
    "end": "698000"
  },
  {
    "text": "pretty simple um a lot of kind of new",
    "start": "698000",
    "end": "701200"
  },
  {
    "text": "complexities arise throughout the",
    "start": "701200",
    "end": "703279"
  },
  {
    "text": "process um as we're not talking about",
    "start": "703279",
    "end": "706720"
  },
  {
    "text": "Services instead of tightly coupled",
    "start": "706720",
    "end": "708760"
  },
  {
    "text": "modules we have the new issue of service",
    "start": "708760",
    "end": "712480"
  },
  {
    "text": "Discovery um asynchronous communication",
    "start": "712480",
    "end": "714959"
  },
  {
    "text": "brings the complexity of interacting",
    "start": "714959",
    "end": "716920"
  },
  {
    "text": "with Pub sub Services uh man managing",
    "start": "716920",
    "end": "719680"
  },
  {
    "text": "State and last but not least we now have",
    "start": "719680",
    "end": "722639"
  },
  {
    "text": "to manage Secrets used by multiple",
    "start": "722639",
    "end": "724920"
  },
  {
    "text": "different",
    "start": "724920",
    "end": "726959"
  },
  {
    "text": "Services um now a great tool that I",
    "start": "726959",
    "end": "731079"
  },
  {
    "text": "really like that solves those problem is",
    "start": "731079",
    "end": "733320"
  },
  {
    "text": "is",
    "start": "733320",
    "end": "734079"
  },
  {
    "text": "Dapper um so Dapper provides simplified",
    "start": "734079",
    "end": "737440"
  },
  {
    "text": "interfaces to kind of implement these",
    "start": "737440",
    "end": "739720"
  },
  {
    "text": "functionalities it makes it easy to",
    "start": "739720",
    "end": "741519"
  },
  {
    "text": "build stateless and stateful",
    "start": "741519",
    "end": "743600"
  },
  {
    "text": "applications um and kind of embrace",
    "start": "743600",
    "end": "746480"
  },
  {
    "text": "diversity when it comes to different",
    "start": "746480",
    "end": "748120"
  },
  {
    "text": "languages developer Frameworks and even",
    "start": "748120",
    "end": "751399"
  },
  {
    "text": "um underlying infrastructure so in a",
    "start": "751399",
    "end": "754440"
  },
  {
    "text": "nutshell it makes it easier to manage",
    "start": "754440",
    "end": "756360"
  },
  {
    "text": "state to workrate communication between",
    "start": "756360",
    "end": "758360"
  },
  {
    "text": "services and and kind of many more of",
    "start": "758360",
    "end": "760560"
  },
  {
    "text": "the problems we we are facing and it's",
    "start": "760560",
    "end": "763199"
  },
  {
    "text": "it's very easy to",
    "start": "763199",
    "end": "766160"
  },
  {
    "text": "implement uh so we can see from from top",
    "start": "766560",
    "end": "769079"
  },
  {
    "text": "to bottom we can see how easy it is to",
    "start": "769079",
    "end": "770720"
  },
  {
    "text": "do service invocation we can see how",
    "start": "770720",
    "end": "773440"
  },
  {
    "text": "easy we can we can p uh we can uh",
    "start": "773440",
    "end": "776360"
  },
  {
    "text": "publish messages in a new p",
    "start": "776360",
    "end": "780839"
  },
  {
    "text": "Pub Pub Pub",
    "start": "780839",
    "end": "783399"
  },
  {
    "text": "subsystem um and we can also manage",
    "start": "783399",
    "end": "786560"
  },
  {
    "text": "State manage Secrets um the added",
    "start": "786560",
    "end": "790519"
  },
  {
    "text": "benefit here is that you you don't care",
    "start": "790519",
    "end": "793320"
  },
  {
    "text": "about the underlying infrastructure",
    "start": "793320",
    "end": "795040"
  },
  {
    "text": "component so uh in our state store",
    "start": "795040",
    "end": "797880"
  },
  {
    "text": "example the code would be exactly the",
    "start": "797880",
    "end": "799680"
  },
  {
    "text": "same uh irrespective of whether you're",
    "start": "799680",
    "end": "802440"
  },
  {
    "text": "using red dis or mongodb or anything to",
    "start": "802440",
    "end": "804560"
  },
  {
    "text": "manage your",
    "start": "804560",
    "end": "806839"
  },
  {
    "text": "state so this was a very quick quick",
    "start": "806839",
    "end": "809279"
  },
  {
    "text": "journey of the how um and kind of the",
    "start": "809279",
    "end": "813120"
  },
  {
    "text": "question that always follows this is is",
    "start": "813120",
    "end": "815160"
  },
  {
    "text": "the when when should we do it is this",
    "start": "815160",
    "end": "816880"
  },
  {
    "text": "approach something that we should be",
    "start": "816880",
    "end": "818560"
  },
  {
    "text": "doing in all of our projects in every",
    "start": "818560",
    "end": "820800"
  },
  {
    "text": "case um and that that's been one of the",
    "start": "820800",
    "end": "824040"
  },
  {
    "text": "issues with these architectures um",
    "start": "824040",
    "end": "826560"
  },
  {
    "text": "they've they've often been treated as",
    "start": "826560",
    "end": "829600"
  },
  {
    "text": "kind of catchall solutions where we want",
    "start": "829600",
    "end": "831480"
  },
  {
    "text": "to do kind of we want everything to move",
    "start": "831480",
    "end": "833959"
  },
  {
    "text": "to microservices everything to move to",
    "start": "833959",
    "end": "835800"
  },
  {
    "text": "kubernetes and obviously that's that's",
    "start": "835800",
    "end": "838000"
  },
  {
    "text": "not the solution for everything",
    "start": "838000",
    "end": "841040"
  },
  {
    "text": "so um a great example is when we're",
    "start": "847279",
    "end": "849440"
  },
  {
    "text": "starting a new project a Greenfield",
    "start": "849440",
    "end": "851199"
  },
  {
    "text": "project or we have a very small team",
    "start": "851199",
    "end": "854320"
  },
  {
    "text": "startup um managing the complexity of",
    "start": "854320",
    "end": "856800"
  },
  {
    "text": "microservices might not be something",
    "start": "856800",
    "end": "858480"
  },
  {
    "text": "that that we should be doing um so a",
    "start": "858480",
    "end": "862120"
  },
  {
    "text": "very important tool there is the modular",
    "start": "862120",
    "end": "864000"
  },
  {
    "text": "monolith essentially uh we use again DDD",
    "start": "864000",
    "end": "867959"
  },
  {
    "text": "to define the bounded context and build",
    "start": "867959",
    "end": "871240"
  },
  {
    "text": "each module in a tightly coupled",
    "start": "871240",
    "end": "873199"
  },
  {
    "text": "monolithic architecture so every module",
    "start": "873199",
    "end": "876040"
  },
  {
    "text": "represent uh bounded context um this",
    "start": "876040",
    "end": "879360"
  },
  {
    "text": "gives the codebase that is kind of easy",
    "start": "879360",
    "end": "881800"
  },
  {
    "text": "to deploy uh easy to manage initially",
    "start": "881800",
    "end": "884480"
  },
  {
    "text": "but is also ready to be split very",
    "start": "884480",
    "end": "886480"
  },
  {
    "text": "easily when when we want to",
    "start": "886480",
    "end": "888800"
  },
  {
    "text": "scale each module represents kind of a",
    "start": "888800",
    "end": "892079"
  },
  {
    "text": "future Arch uh",
    "start": "892079",
    "end": "894040"
  },
  {
    "text": "microservice um and it it's going to be",
    "start": "894040",
    "end": "896880"
  },
  {
    "text": "very easier to carve out when the time",
    "start": "896880",
    "end": "898680"
  },
  {
    "text": "comes",
    "start": "898680",
    "end": "901040"
  },
  {
    "text": "[Music]",
    "start": "923720",
    "end": "926849"
  },
  {
    "text": "help us with re-platforming and",
    "start": "959199",
    "end": "962959"
  },
  {
    "text": "rehosting so what we're looking to",
    "start": "962959",
    "end": "965160"
  },
  {
    "text": "achieve here is a very simple way to",
    "start": "965160",
    "end": "967600"
  },
  {
    "text": "provide the Naza service experience for",
    "start": "967600",
    "end": "970120"
  },
  {
    "text": "engineers um we want to underly to",
    "start": "970120",
    "end": "972759"
  },
  {
    "text": "abstract the underlying platform",
    "start": "972759",
    "end": "974759"
  },
  {
    "text": "complexities um as we adop adopt new",
    "start": "974759",
    "end": "977360"
  },
  {
    "text": "tools to match uh those new architecture",
    "start": "977360",
    "end": "980120"
  },
  {
    "text": "that we that we",
    "start": "980120",
    "end": "981360"
  },
  {
    "text": "created um and of course as we we've",
    "start": "981360",
    "end": "984360"
  },
  {
    "text": "been sifting a lot of a lot of things",
    "start": "984360",
    "end": "986680"
  },
  {
    "text": "left lately it's very important to make",
    "start": "986680",
    "end": "989560"
  },
  {
    "text": "it self-service while also greatly",
    "start": "989560",
    "end": "992600"
  },
  {
    "text": "simplifying infrastructures code um we",
    "start": "992600",
    "end": "995720"
  },
  {
    "text": "see now that we've been kind of Shifting",
    "start": "995720",
    "end": "998639"
  },
  {
    "text": "everything left we see teams that they",
    "start": "998639",
    "end": "1000399"
  },
  {
    "text": "have to manage their codebase but they",
    "start": "1000399",
    "end": "1001959"
  },
  {
    "text": "also have to manage HCL files for",
    "start": "1001959",
    "end": "1004600"
  },
  {
    "text": "terraform yam files for kubernetes and a",
    "start": "1004600",
    "end": "1007560"
  },
  {
    "text": "bunch of other tools so um this is this",
    "start": "1007560",
    "end": "1009920"
  },
  {
    "text": "is a very important approach in",
    "start": "1009920",
    "end": "1012120"
  },
  {
    "text": "platform so to build an internal",
    "start": "1012120",
    "end": "1015199"
  },
  {
    "text": "developer platform there is kind of a a",
    "start": "1015199",
    "end": "1017600"
  },
  {
    "text": "very Vibrant Community",
    "start": "1017600",
    "end": "1019839"
  },
  {
    "text": "um many great advancements uh there's a",
    "start": "1019839",
    "end": "1023040"
  },
  {
    "text": "great working group uh in cncf that you",
    "start": "1023040",
    "end": "1026400"
  },
  {
    "text": "can follow about this um a a a good",
    "start": "1026400",
    "end": "1030280"
  },
  {
    "text": "first approach to this is cloud native",
    "start": "1030280",
    "end": "1032000"
  },
  {
    "text": "operational excellence which is the",
    "start": "1032000",
    "end": "1034240"
  },
  {
    "text": "architecture you you're seeing here um",
    "start": "1034240",
    "end": "1037400"
  },
  {
    "text": "this kind of provides an open source",
    "start": "1037400",
    "end": "1039558"
  },
  {
    "text": "first approach to building an internal",
    "start": "1039559",
    "end": "1041400"
  },
  {
    "text": "developer platform similarly there is",
    "start": "1041400",
    "end": "1044079"
  },
  {
    "text": "the backstack which is kind of a a",
    "start": "1044079",
    "end": "1045918"
  },
  {
    "text": "composable internal developer platform",
    "start": "1045919",
    "end": "1048480"
  },
  {
    "text": "which uses is for widely adopted",
    "start": "1048480",
    "end": "1050760"
  },
  {
    "text": "projects um backstage which is a self",
    "start": "1050760",
    "end": "1055200"
  },
  {
    "text": "Ser self-service developer portal Argo",
    "start": "1055200",
    "end": "1058559"
  },
  {
    "text": "CD which is a GitHub based continuous",
    "start": "1058559",
    "end": "1060919"
  },
  {
    "text": "delivery uh tool and crossplane which is",
    "start": "1060919",
    "end": "1064679"
  },
  {
    "text": "kind of a universal control control",
    "start": "1064679",
    "end": "1067480"
  },
  {
    "text": "plane um and finally kerno which is a",
    "start": "1067480",
    "end": "1070360"
  },
  {
    "text": "policy as code tool to proactively",
    "start": "1070360",
    "end": "1072160"
  },
  {
    "text": "detect and prevent",
    "start": "1072160",
    "end": "1075480"
  },
  {
    "text": "misconfigurations so the four underlying",
    "start": "1076320",
    "end": "1080159"
  },
  {
    "text": "infrastructure in most idps is",
    "start": "1080159",
    "end": "1082559"
  },
  {
    "text": "kubernetes uh kubernetes has evolved to",
    "start": "1082559",
    "end": "1085400"
  },
  {
    "text": "being much more than just an",
    "start": "1085400",
    "end": "1087440"
  },
  {
    "text": "orchestration platform nowadays we call",
    "start": "1087440",
    "end": "1089919"
  },
  {
    "text": "it the platform of platforms because of",
    "start": "1089919",
    "end": "1092600"
  },
  {
    "text": "its extensibility and the interfaces it",
    "start": "1092600",
    "end": "1094720"
  },
  {
    "text": "provides for us to to kind of build more",
    "start": "1094720",
    "end": "1097400"
  },
  {
    "text": "functionality in it um so we'll we'll be",
    "start": "1097400",
    "end": "1100880"
  },
  {
    "text": "leveraging kubernetes controller",
    "start": "1100880",
    "end": "1102679"
  },
  {
    "text": "management and its reconciliation Loop",
    "start": "1102679",
    "end": "1105559"
  },
  {
    "text": "in order through operators to manage all",
    "start": "1105559",
    "end": "1107720"
  },
  {
    "text": "our resources in internal and external",
    "start": "1107720",
    "end": "1110080"
  },
  {
    "text": "as kubernetes um kubernetes resources so",
    "start": "1110080",
    "end": "1114480"
  },
  {
    "text": "operators extend kubernetes is core",
    "start": "1114480",
    "end": "1116760"
  },
  {
    "text": "functionality by automating tasks that",
    "start": "1116760",
    "end": "1119400"
  },
  {
    "text": "human operations team would be doing so",
    "start": "1119400",
    "end": "1122080"
  },
  {
    "text": "they can be used to manage resources",
    "start": "1122080",
    "end": "1123640"
  },
  {
    "text": "running both in kubernetes or to",
    "start": "1123640",
    "end": "1125880"
  },
  {
    "text": "orchestrate third party cloud",
    "start": "1125880",
    "end": "1128000"
  },
  {
    "text": "services so and and this is a great way",
    "start": "1128000",
    "end": "1131880"
  },
  {
    "text": "uh we can provide a common interface for",
    "start": "1131880",
    "end": "1134919"
  },
  {
    "text": "for development teams so treating",
    "start": "1134919",
    "end": "1137080"
  },
  {
    "text": "everything um as kubernetes resources",
    "start": "1137080",
    "end": "1139960"
  },
  {
    "text": "enables them to manage everything",
    "start": "1139960",
    "end": "1142440"
  },
  {
    "text": "through yaml files and through a",
    "start": "1142440",
    "end": "1145120"
  },
  {
    "text": "declarative",
    "start": "1145120",
    "end": "1147720"
  },
  {
    "text": "configuration uh before we close a quick",
    "start": "1148200",
    "end": "1150520"
  },
  {
    "text": "example of how we do this for uh mongodb",
    "start": "1150520",
    "end": "1153520"
  },
  {
    "text": "users so we have three kubernetes",
    "start": "1153520",
    "end": "1155720"
  },
  {
    "text": "operators the Enterprise operator",
    "start": "1155720",
    "end": "1157799"
  },
  {
    "text": "community and the atlas one um so",
    "start": "1157799",
    "end": "1160559"
  },
  {
    "text": "whether you're running mongodb Community",
    "start": "1160559",
    "end": "1163960"
  },
  {
    "text": "or Enterprise yourself or you're using",
    "start": "1163960",
    "end": "1166360"
  },
  {
    "text": "the atlas developer data platform all of",
    "start": "1166360",
    "end": "1168880"
  },
  {
    "text": "your database definitions go through",
    "start": "1168880",
    "end": "1170760"
  },
  {
    "text": "kubernetes and our operators are",
    "start": "1170760",
    "end": "1173000"
  },
  {
    "text": "responsible of picking those resources",
    "start": "1173000",
    "end": "1174840"
  },
  {
    "text": "up and reconciling and making sure that",
    "start": "1174840",
    "end": "1177919"
  },
  {
    "text": "your infrastructure provisioning runs",
    "start": "1177919",
    "end": "1179840"
  },
  {
    "text": "smoothly so um they interact either uh",
    "start": "1179840",
    "end": "1184000"
  },
  {
    "text": "either they create the relevant State",
    "start": "1184000",
    "end": "1186159"
  },
  {
    "text": "full sets and and volume claims in your",
    "start": "1186159",
    "end": "1189400"
  },
  {
    "text": "cluster to manage community and",
    "start": "1189400",
    "end": "1191120"
  },
  {
    "text": "Enterprise or they interact with the",
    "start": "1191120",
    "end": "1193280"
  },
  {
    "text": "atlas API in order to deploy the",
    "start": "1193280",
    "end": "1195120"
  },
  {
    "text": "databases in the",
    "start": "1195120",
    "end": "1196640"
  },
  {
    "text": "cloud",
    "start": "1196640",
    "end": "1199640"
  }
]