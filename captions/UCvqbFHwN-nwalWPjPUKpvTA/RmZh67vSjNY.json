[
  {
    "text": "all right so first of all welcome to",
    "start": "840",
    "end": "3840"
  },
  {
    "text": "this talk thank you for being here uh we",
    "start": "3840",
    "end": "6759"
  },
  {
    "text": "are going to talk a lot about a lot of",
    "start": "6759",
    "end": "10000"
  },
  {
    "text": "things in 20 minutes well 25 minutes um",
    "start": "10000",
    "end": "14120"
  },
  {
    "text": "but we want you to keep in mind two main",
    "start": "14120",
    "end": "16600"
  },
  {
    "text": "things so one of them is what about if",
    "start": "16600",
    "end": "19880"
  },
  {
    "text": "you want to migrate an existing product",
    "start": "19880",
    "end": "22000"
  },
  {
    "text": "to the cloud native so then this is your",
    "start": "22000",
    "end": "24800"
  },
  {
    "text": "talk or even more we are going also to",
    "start": "24800",
    "end": "27920"
  },
  {
    "text": "teach you about our experience and what",
    "start": "27920",
    "end": "30640"
  },
  {
    "text": "we did well and what we did wrong so",
    "start": "30640",
    "end": "33160"
  },
  {
    "text": "then you can improve and make it",
    "start": "33160",
    "end": "35480"
  },
  {
    "text": "better",
    "start": "35480",
    "end": "37000"
  },
  {
    "text": "so my name is Natalia I'm working at",
    "start": "37000",
    "end": "39640"
  },
  {
    "text": "adobi as a software developer engineer",
    "start": "39640",
    "end": "41719"
  },
  {
    "text": "and I love maths and coding in my spare",
    "start": "41719",
    "end": "44160"
  },
  {
    "text": "time and I'm Carlos I'm a principal",
    "start": "44160",
    "end": "47360"
  },
  {
    "text": "science scientist also at the experience",
    "start": "47360",
    "end": "50760"
  },
  {
    "text": "manager um my background is open source",
    "start": "50760",
    "end": "54079"
  },
  {
    "text": "a lot and one of the things I did was",
    "start": "54079",
    "end": "56359"
  },
  {
    "text": "star in the kubernetes plugin well thank",
    "start": "56359",
    "end": "58800"
  },
  {
    "text": "you for having us here today",
    "start": "58800",
    "end": "61320"
  },
  {
    "text": "a quick introduction about adob",
    "start": "61320",
    "end": "63239"
  },
  {
    "text": "experience manager so you have a better",
    "start": "63239",
    "end": "65360"
  },
  {
    "text": "understanding on why we took some",
    "start": "65360",
    "end": "68119"
  },
  {
    "text": "decisions uh it's an existing",
    "start": "68119",
    "end": "69880"
  },
  {
    "text": "distributed Java SJ application there",
    "start": "69880",
    "end": "72240"
  },
  {
    "text": "was a bunch of Java developers out here",
    "start": "72240",
    "end": "75560"
  },
  {
    "text": "so uh you will understand a little",
    "start": "75560",
    "end": "78560"
  },
  {
    "text": "better what it takes to move Java to to",
    "start": "78560",
    "end": "81720"
  },
  {
    "text": "kubernetes or Cloud native it uses a lot",
    "start": "81720",
    "end": "84439"
  },
  {
    "text": "of Open Source components from the ASF",
    "start": "84439",
    "end": "87759"
  },
  {
    "text": "and we also contribute back to to all",
    "start": "87759",
    "end": "90479"
  },
  {
    "text": "the a lot of Open Source players that we",
    "start": "90479",
    "end": "92799"
  },
  {
    "text": "use and it has a huge market for",
    "start": "92799",
    "end": "95000"
  },
  {
    "text": "extension developers that can write code",
    "start": "95000",
    "end": "97159"
  },
  {
    "text": "on top of am and that kind of",
    "start": "97159",
    "end": "101040"
  },
  {
    "text": "limits what we can do uh how can we",
    "start": "101040",
    "end": "104360"
  },
  {
    "text": "change API how can we change",
    "start": "104360",
    "end": "106000"
  },
  {
    "text": "implementations and and things like that",
    "start": "106000",
    "end": "109479"
  },
  {
    "text": "uh with to prevent breaking breaking",
    "start": "109479",
    "end": "113000"
  },
  {
    "text": "people so of course this product am is",
    "start": "113000",
    "end": "116719"
  },
  {
    "text": "running on",
    "start": "116719",
    "end": "117960"
  },
  {
    "text": "kubernetes um we have have a quite big",
    "start": "117960",
    "end": "120759"
  },
  {
    "text": "product uh we are running on AER and we",
    "start": "120759",
    "end": "123560"
  },
  {
    "text": "have uh 37 or more clusters in",
    "start": "123560",
    "end": "127360"
  },
  {
    "text": "production um so we are present in",
    "start": "127360",
    "end": "129840"
  },
  {
    "text": "multiple regions in the states Europe",
    "start": "129840",
    "end": "132000"
  },
  {
    "text": "Australia Singapore Japan India and even",
    "start": "132000",
    "end": "134080"
  },
  {
    "text": "more more availability zones are coming",
    "start": "134080",
    "end": "137200"
  },
  {
    "text": "um and we have a dedicated team who is",
    "start": "137200",
    "end": "140440"
  },
  {
    "text": "building and managing the infrastructure",
    "start": "140440",
    "end": "142720"
  },
  {
    "text": "for us so this is quite important for us",
    "start": "142720",
    "end": "145519"
  },
  {
    "text": "because then we don't need to care about",
    "start": "145519",
    "end": "147599"
  },
  {
    "text": "you know the lowlevel stuff we just use",
    "start": "147599",
    "end": "152160"
  },
  {
    "text": "kubernetes so the am",
    "start": "152680",
    "end": "155319"
  },
  {
    "text": "environments customers can have multiple",
    "start": "155319",
    "end": "158360"
  },
  {
    "text": "am environments in our systems so they",
    "start": "158360",
    "end": "161680"
  },
  {
    "text": "can just go to the UI and then just",
    "start": "161680",
    "end": "163760"
  },
  {
    "text": "click a button and then they just get as",
    "start": "163760",
    "end": "165800"
  },
  {
    "text": "many environments as they want um",
    "start": "165800",
    "end": "168640"
  },
  {
    "text": "usually each customer has three or more",
    "start": "168640",
    "end": "171200"
  },
  {
    "text": "kubernetes name spaces because we use",
    "start": "171200",
    "end": "172920"
  },
  {
    "text": "name spaces to divide customers to have",
    "start": "172920",
    "end": "175760"
  },
  {
    "text": "customer isolation so its environment in",
    "start": "175760",
    "end": "179239"
  },
  {
    "text": "our case we call it like it is a micro",
    "start": "179239",
    "end": "181640"
  },
  {
    "text": "monolith it's like a hybrid right we are",
    "start": "181640",
    "end": "184239"
  },
  {
    "text": "always in the trending if microservices",
    "start": "184239",
    "end": "186080"
  },
  {
    "text": "are trending we are there if monoliths",
    "start": "186080",
    "end": "188560"
  },
  {
    "text": "are trending we are also there so yeah",
    "start": "188560",
    "end": "192599"
  },
  {
    "text": "monoliths are trending now more yeah",
    "start": "192599",
    "end": "194400"
  },
  {
    "text": "yeah of course it depends on the",
    "start": "194400",
    "end": "196040"
  },
  {
    "text": "day it depends on the day so we use name",
    "start": "196040",
    "end": "200280"
  },
  {
    "text": "spaces to provide a scope as I told you",
    "start": "200280",
    "end": "202799"
  },
  {
    "text": "so basically we have Network isol",
    "start": "202799",
    "end": "205120"
  },
  {
    "text": "isolation we also have control about the",
    "start": "205120",
    "end": "208360"
  },
  {
    "text": "quotas and also permission and actually",
    "start": "208360",
    "end": "210640"
  },
  {
    "text": "permissions is pretty related to our",
    "start": "210640",
    "end": "213040"
  },
  {
    "text": "main topic which is security because the",
    "start": "213040",
    "end": "215959"
  },
  {
    "text": "problem is that uh well the problem the",
    "start": "215959",
    "end": "218080"
  },
  {
    "text": "fact is that we are running customer",
    "start": "218080",
    "end": "219879"
  },
  {
    "text": "code on our clusters so then we need to",
    "start": "219879",
    "end": "223000"
  },
  {
    "text": "take care about the security this is a",
    "start": "223000",
    "end": "225360"
  },
  {
    "text": "very important",
    "start": "225360",
    "end": "227319"
  },
  {
    "text": "stuff services so we are a big company",
    "start": "227319",
    "end": "231040"
  },
  {
    "text": "this is a big product so we have",
    "start": "231040",
    "end": "232519"
  },
  {
    "text": "multiple Serv multiple teams um Building",
    "start": "232519",
    "end": "235760"
  },
  {
    "text": "Services here so we have different",
    "start": "235760",
    "end": "238640"
  },
  {
    "text": "requirements different langu which is go",
    "start": "238640",
    "end": "240560"
  },
  {
    "text": "Java you know bash whatever a lot so the",
    "start": "240560",
    "end": "244239"
  },
  {
    "text": "rule is that if you build it then you",
    "start": "244239",
    "end": "246239"
  },
  {
    "text": "run it and you drive it and of course we",
    "start": "246239",
    "end": "249400"
  },
  {
    "text": "use also some internal contracts like",
    "start": "249400",
    "end": "251760"
  },
  {
    "text": "apis or kuun operators patterns so then",
    "start": "251760",
    "end": "254640"
  },
  {
    "text": "we have like an agreement internal",
    "start": "254640",
    "end": "258239"
  },
  {
    "text": "agreement and environments also one",
    "start": "258239",
    "end": "260880"
  },
  {
    "text": "thing that we use is init containers and",
    "start": "260880",
    "end": "263400"
  },
  {
    "text": "cite containers in order to divide",
    "start": "263400",
    "end": "265680"
  },
  {
    "text": "responsibilities and don't have",
    "start": "265680",
    "end": "267080"
  },
  {
    "text": "conflicts because that's the the main",
    "start": "267080",
    "end": "269120"
  },
  {
    "text": "the main problem about monoliths so",
    "start": "269120",
    "end": "273720"
  },
  {
    "text": "then yeah the side cars is an",
    "start": "273720",
    "end": "276160"
  },
  {
    "text": "interesting pattern in kubernetes where",
    "start": "276160",
    "end": "278520"
  },
  {
    "text": "which is very useful",
    "start": "278520",
    "end": "280720"
  },
  {
    "text": "for kind of breaking the monolith into",
    "start": "280720",
    "end": "284680"
  },
  {
    "text": "separate",
    "start": "284680",
    "end": "285800"
  },
  {
    "text": "services but you are not you're running",
    "start": "285800",
    "end": "288680"
  },
  {
    "text": "the services in the same box in the same",
    "start": "288680",
    "end": "292120"
  },
  {
    "text": "um in the same uh space of c groups uh",
    "start": "292120",
    "end": "297039"
  },
  {
    "text": "networking uh and all so we took this",
    "start": "297039",
    "end": "300280"
  },
  {
    "text": "approach to start moving uh some parts",
    "start": "300280",
    "end": "303919"
  },
  {
    "text": "of the",
    "start": "303919",
    "end": "304880"
  },
  {
    "text": "application so they can be separate the",
    "start": "304880",
    "end": "308039"
  },
  {
    "text": "code can be deployed separately",
    "start": "308039",
    "end": "310160"
  },
  {
    "text": "different Docker images different",
    "start": "310160",
    "end": "312400"
  },
  {
    "text": "containers isolation and so on but they",
    "start": "312400",
    "end": "315919"
  },
  {
    "text": "run together with the with the main",
    "start": "315919",
    "end": "318400"
  },
  {
    "text": "application we have a bunch of them uh",
    "start": "318400",
    "end": "320960"
  },
  {
    "text": "service warm up storage initialization",
    "start": "320960",
    "end": "323880"
  },
  {
    "text": "we have a httpd service in front of the",
    "start": "323880",
    "end": "326600"
  },
  {
    "text": "Java application that this also comes",
    "start": "326600",
    "end": "329240"
  },
  {
    "text": "from the time when when people are",
    "start": "329240",
    "end": "332199"
  },
  {
    "text": "running this on premise this is the",
    "start": "332199",
    "end": "333600"
  },
  {
    "text": "typical setup uh card to sport metrics",
    "start": "333600",
    "end": "337919"
  },
  {
    "text": "to our uh uh analytic systems fluent bit",
    "start": "337919",
    "end": "341560"
  },
  {
    "text": "as a side card to send the locks thread",
    "start": "341560",
    "end": "343960"
  },
  {
    "text": "dump collection on Java uh when the jvm",
    "start": "343960",
    "end": "347080"
  },
  {
    "text": "stores a thread Dam we automatically get",
    "start": "347080",
    "end": "349400"
  },
  {
    "text": "it and ship it uh Envoy proing I'll talk",
    "start": "349400",
    "end": "353600"
  },
  {
    "text": "a a bit about this on the out of",
    "start": "353600",
    "end": "356039"
  },
  {
    "text": "data so the service warm up is something",
    "start": "356039",
    "end": "359479"
  },
  {
    "text": "for a big application on Java that takes",
    "start": "359479",
    "end": "361680"
  },
  {
    "text": "a while to start uh this will make sure",
    "start": "361680",
    "end": "366360"
  },
  {
    "text": "that the P the paths that are being hit",
    "start": "366360",
    "end": "369520"
  },
  {
    "text": "uh by the",
    "start": "369520",
    "end": "370680"
  },
  {
    "text": "users the cach is already",
    "start": "370680",
    "end": "374000"
  },
  {
    "text": "initialized and because if you don't do",
    "start": "374000",
    "end": "376680"
  },
  {
    "text": "this when the PA comes up and the J",
    "start": "376680",
    "end": "379199"
  },
  {
    "text": "application comes up and you start",
    "start": "379199",
    "end": "380759"
  },
  {
    "text": "getting requests uh these request may",
    "start": "380759",
    "end": "383199"
  },
  {
    "text": "take a long time to be served because",
    "start": "383199",
    "end": "385880"
  },
  {
    "text": "the cach is not",
    "start": "385880",
    "end": "387120"
  },
  {
    "text": "initialized and it does it uh it does",
    "start": "387120",
    "end": "389960"
  },
  {
    "text": "lazy caching it goes through the most",
    "start": "389960",
    "end": "392039"
  },
  {
    "text": "requested paths and and caches those and",
    "start": "392039",
    "end": "396000"
  },
  {
    "text": "this way we don't need expensive starts",
    "start": "396000",
    "end": "398479"
  },
  {
    "text": "the other option would be at the startup",
    "start": "398479",
    "end": "400440"
  },
  {
    "text": "say okay go unload everything in the",
    "start": "400440",
    "end": "402560"
  },
  {
    "text": "cash but then it takes you a longer time",
    "start": "402560",
    "end": "404960"
  },
  {
    "text": "for the",
    "start": "404960",
    "end": "406319"
  },
  {
    "text": "startup fluent bit open source solution",
    "start": "406319",
    "end": "409039"
  },
  {
    "text": "to send the locks uh we use a share",
    "start": "409039",
    "end": "411599"
  },
  {
    "text": "volume in a PO uh but a separate",
    "start": "411599",
    "end": "414639"
  },
  {
    "text": "container application wres uh",
    "start": "414639",
    "end": "417680"
  },
  {
    "text": "application and another side cars right",
    "start": "417680",
    "end": "419759"
  },
  {
    "text": "uh logs to a specific location and",
    "start": "419759",
    "end": "422639"
  },
  {
    "text": "fluent bit we can configure it and",
    "start": "422639",
    "end": "424520"
  },
  {
    "text": "deploy it",
    "start": "424520",
    "end": "425879"
  },
  {
    "text": "separately and get those to to get those",
    "start": "425879",
    "end": "429440"
  },
  {
    "text": "logs and ship",
    "start": "429440",
    "end": "431280"
  },
  {
    "text": "them Envoy is a very popular uh Cloud",
    "start": "431280",
    "end": "434479"
  },
  {
    "text": "native uh proxy we use this for traffic",
    "start": "434479",
    "end": "438160"
  },
  {
    "text": "tunneling and routing and in our use",
    "start": "438160",
    "end": "441639"
  },
  {
    "text": "case this allows us to have dedicated",
    "start": "441639",
    "end": "444039"
  },
  {
    "text": "IPS per tenant and VPN connectivity from",
    "start": "444039",
    "end": "447759"
  },
  {
    "text": "each uh customer P to each customer uh",
    "start": "447759",
    "end": "452560"
  },
  {
    "text": "endpoint VPN or or giving them a",
    "start": "452560",
    "end": "455120"
  },
  {
    "text": "specific IP without having to have uh",
    "start": "455120",
    "end": "458280"
  },
  {
    "text": "separate Hardware or virtual hardware",
    "start": "458280",
    "end": "460759"
  },
  {
    "text": "for them we set up a side card we uh",
    "start": "460759",
    "end": "464560"
  },
  {
    "text": "configure the Java jvm to send the",
    "start": "464560",
    "end": "467759"
  },
  {
    "text": "traffic to that side card that side card",
    "start": "467759",
    "end": "469680"
  },
  {
    "text": "is going to go and send it to another",
    "start": "469680",
    "end": "472120"
  },
  {
    "text": "Envoy that is outside theide the",
    "start": "472120",
    "end": "474680"
  },
  {
    "text": "kubernetes area and that way it goes out",
    "start": "474680",
    "end": "477840"
  },
  {
    "text": "to the internet or to the the internal",
    "start": "477840",
    "end": "480000"
  },
  {
    "text": "customer uh",
    "start": "480000",
    "end": "481879"
  },
  {
    "text": "Network D of dater is a solution that we",
    "start": "481879",
    "end": "485039"
  },
  {
    "text": "came up with uh you may have heard of",
    "start": "485039",
    "end": "488400"
  },
  {
    "text": "some issue with luck forj some time",
    "start": "488400",
    "end": "491280"
  },
  {
    "text": "ago right not very not very well known",
    "start": "491280",
    "end": "495360"
  },
  {
    "text": "if you work with Java then you",
    "start": "495360",
    "end": "497840"
  },
  {
    "text": "definitely heard about that so how can",
    "start": "497840",
    "end": "500800"
  },
  {
    "text": "we update Lo forj across a fleet of",
    "start": "500800",
    "end": "503560"
  },
  {
    "text": "thousands of T of tens of thousands of",
    "start": "503560",
    "end": "506840"
  },
  {
    "text": "containers one way is we rebuild all the",
    "start": "506840",
    "end": "509520"
  },
  {
    "text": "docker all the container images we",
    "start": "509520",
    "end": "512320"
  },
  {
    "text": "redeploy everything that would be one",
    "start": "512320",
    "end": "514560"
  },
  {
    "text": "way the other way is we run an init",
    "start": "514560",
    "end": "517760"
  },
  {
    "text": "container and this allows us to patch",
    "start": "517760",
    "end": "520000"
  },
  {
    "text": "life the the the main container without",
    "start": "520000",
    "end": "522880"
  },
  {
    "text": "having to touch the",
    "start": "522880",
    "end": "525040"
  },
  {
    "text": "monolith and uh so when the monolith",
    "start": "525040",
    "end": "528200"
  },
  {
    "text": "starts the log forj is replaced and this",
    "start": "528200",
    "end": "530720"
  },
  {
    "text": "way it's extensible so we can replace",
    "start": "530720",
    "end": "532600"
  },
  {
    "text": "any file we",
    "start": "532600",
    "end": "535160"
  },
  {
    "text": "want so operators we use in kuet",
    "start": "535839",
    "end": "541360"
  },
  {
    "text": "operators um we have a main operator uh",
    "start": "541360",
    "end": "545600"
  },
  {
    "text": "which actually is not open source is a",
    "start": "545600",
    "end": "548000"
  },
  {
    "text": "internal one but we want to introduce it",
    "start": "548000",
    "end": "550680"
  },
  {
    "text": "because actually it's base is the main",
    "start": "550680",
    "end": "553079"
  },
  {
    "text": "architecture that we have so this",
    "start": "553079",
    "end": "555720"
  },
  {
    "text": "operator is managing the life cycle of",
    "start": "555720",
    "end": "557480"
  },
  {
    "text": "the environments so actually it is an",
    "start": "557480",
    "end": "559959"
  },
  {
    "text": "operator to room them all so then we use",
    "start": "559959",
    "end": "562440"
  },
  {
    "text": "other ones that I'll explain later and",
    "start": "562440",
    "end": "565560"
  },
  {
    "text": "what this operator does is we launch",
    "start": "565560",
    "end": "567480"
  },
  {
    "text": "some pre on post jobs and also we",
    "start": "567480",
    "end": "570360"
  },
  {
    "text": "reconcile other internal operators and",
    "start": "570360",
    "end": "573480"
  },
  {
    "text": "also the",
    "start": "573480",
    "end": "576279"
  },
  {
    "text": "environments so then this is one of the",
    "start": "576279",
    "end": "580279"
  },
  {
    "text": "operators that we reconcil we use fla CD",
    "start": "580279",
    "end": "583839"
  },
  {
    "text": "Helm operator this operator is used so",
    "start": "583839",
    "end": "587079"
  },
  {
    "text": "then it allows us to manage um the the",
    "start": "587079",
    "end": "590519"
  },
  {
    "text": "environment creation the environment",
    "start": "590519",
    "end": "592000"
  },
  {
    "text": "upgrades using hel it allows us to have",
    "start": "592000",
    "end": "595000"
  },
  {
    "text": "a declarative way of you know having all",
    "start": "595000",
    "end": "597320"
  },
  {
    "text": "the information there in AET is custom",
    "start": "597320",
    "end": "599279"
  },
  {
    "text": "resource and then we can quickly you",
    "start": "599279",
    "end": "601560"
  },
  {
    "text": "know use this information to uh for",
    "start": "601560",
    "end": "603800"
  },
  {
    "text": "debugging so developers can just go we",
    "start": "603800",
    "end": "606120"
  },
  {
    "text": "have some internal tooling to to get",
    "start": "606120",
    "end": "608160"
  },
  {
    "text": "this information so it is pretty simple",
    "start": "608160",
    "end": "610480"
  },
  {
    "text": "to have like a straightforward way to to",
    "start": "610480",
    "end": "612959"
  },
  {
    "text": "get the status of the hel and also um it",
    "start": "612959",
    "end": "616760"
  },
  {
    "text": "is also very important because we Al",
    "start": "616760",
    "end": "618760"
  },
  {
    "text": "have an way to automatically manage the",
    "start": "618760",
    "end": "622000"
  },
  {
    "text": "status from the main",
    "start": "622000",
    "end": "624240"
  },
  {
    "text": "operator we also use or started to use",
    "start": "624240",
    "end": "627240"
  },
  {
    "text": "Argo roll outs so this is a thing that",
    "start": "627240",
    "end": "630800"
  },
  {
    "text": "we just recently started to um so we use",
    "start": "630800",
    "end": "635360"
  },
  {
    "text": "it to provide an advanced way of having",
    "start": "635360",
    "end": "637639"
  },
  {
    "text": "deployment",
    "start": "637639",
    "end": "638920"
  },
  {
    "text": "strategies this is pretty awesome um we",
    "start": "638920",
    "end": "642920"
  },
  {
    "text": "then have access to Canady blue green AV",
    "start": "642920",
    "end": "645560"
  },
  {
    "text": "testing and more but also it allows us",
    "start": "645560",
    "end": "649040"
  },
  {
    "text": "to have automated roll",
    "start": "649040",
    "end": "652399"
  },
  {
    "text": "backs yeah and for the main the the",
    "start": "652680",
    "end": "655440"
  },
  {
    "text": "reason we have the main operator is also",
    "start": "655440",
    "end": "657399"
  },
  {
    "text": "to have a an API",
    "start": "657399",
    "end": "659600"
  },
  {
    "text": "that other services can use and we could",
    "start": "659600",
    "end": "662480"
  },
  {
    "text": "replace in the future we want to replace",
    "start": "662480",
    "end": "664440"
  },
  {
    "text": "the helm operator for something else we",
    "start": "664440",
    "end": "666680"
  },
  {
    "text": "can just do",
    "start": "666680",
    "end": "668040"
  },
  {
    "text": "it on the scaling part um and optimation",
    "start": "668040",
    "end": "672639"
  },
  {
    "text": "resources we talked about how this is a",
    "start": "672639",
    "end": "675240"
  },
  {
    "text": "micr monolith uh as we like to call it",
    "start": "675240",
    "end": "678800"
  },
  {
    "text": "we have 17 17,000 more than 177,000 of",
    "start": "678800",
    "end": "682600"
  },
  {
    "text": "these environments uh jav main Java",
    "start": "682600",
    "end": "685320"
  },
  {
    "text": "application uh PO with side Cs on and",
    "start": "685320",
    "end": "689720"
  },
  {
    "text": "uh because we have them these multiple",
    "start": "689720",
    "end": "691560"
  },
  {
    "text": "teams Building Services we are looking",
    "start": "691560",
    "end": "693760"
  },
  {
    "text": "for ways to scale that are orthogonal",
    "start": "693760",
    "end": "696680"
  },
  {
    "text": "that we don't that each service doesn't",
    "start": "696680",
    "end": "698440"
  },
  {
    "text": "need to be aware of very specific things",
    "start": "698440",
    "end": "701160"
  },
  {
    "text": "to do but we can apply across the whole",
    "start": "701160",
    "end": "704200"
  },
  {
    "text": "uh Fleet of",
    "start": "704200",
    "end": "705440"
  },
  {
    "text": "clusters on kubernetes you can have uh",
    "start": "705440",
    "end": "708639"
  },
  {
    "text": "resource requests and limits res",
    "start": "708639",
    "end": "711360"
  },
  {
    "text": "requests is basically uh how many",
    "start": "711360",
    "end": "713880"
  },
  {
    "text": "resources are guaranteed limits is how",
    "start": "713880",
    "end": "716959"
  },
  {
    "text": "many resources you can consume and you",
    "start": "716959",
    "end": "719519"
  },
  {
    "text": "can overcommit you can have limits",
    "start": "719519",
    "end": "722079"
  },
  {
    "text": "higher than",
    "start": "722079",
    "end": "724399"
  },
  {
    "text": "requests and these request and limits",
    "start": "724399",
    "end": "727000"
  },
  {
    "text": "are applied to CPU memory and ephemeral",
    "start": "727000",
    "end": "730040"
  },
  {
    "text": "storage on the memory side uh the limit",
    "start": "730040",
    "end": "733079"
  },
  {
    "text": "is enforced and it results on the Kernel",
    "start": "733079",
    "end": "735440"
  },
  {
    "text": "om kill for all of you Java developers",
    "start": "735440",
    "end": "738399"
  },
  {
    "text": "this is not related this is separate",
    "start": "738399",
    "end": "741240"
  },
  {
    "text": "from the jvm OM exceptions that you may",
    "start": "741240",
    "end": "744120"
  },
  {
    "text": "get uh basically if you go over the",
    "start": "744120",
    "end": "747160"
  },
  {
    "text": "amount of memory that your container is",
    "start": "747160",
    "end": "749880"
  },
  {
    "text": "limited to the kernel is going to kill",
    "start": "749880",
    "end": "752040"
  },
  {
    "text": "your",
    "start": "752040",
    "end": "752880"
  },
  {
    "text": "process on the femoral storage part the",
    "start": "752880",
    "end": "755800"
  },
  {
    "text": "limit is enforced and if you go over the",
    "start": "755800",
    "end": "758320"
  },
  {
    "text": "limit of a storage that you're using",
    "start": "758320",
    "end": "760120"
  },
  {
    "text": "your pod is going to be get evicted from",
    "start": "760120",
    "end": "762279"
  },
  {
    "text": "that node and kubernetes is going to",
    "start": "762279",
    "end": "763839"
  },
  {
    "text": "schedule it somewhere",
    "start": "763839",
    "end": "765800"
  },
  {
    "text": "else an interesting P part of this on",
    "start": "765800",
    "end": "769360"
  },
  {
    "text": "the CPU side is how CPU requests",
    "start": "769360",
    "end": "772480"
  },
  {
    "text": "unlimits work um for",
    "start": "772480",
    "end": "777279"
  },
  {
    "text": "requests yes it's used for scheduling at",
    "start": "777279",
    "end": "780399"
  },
  {
    "text": "the very beginning you said oh I want to",
    "start": "780399",
    "end": "782399"
  },
  {
    "text": "deploy this and have two",
    "start": "782399",
    "end": "784720"
  },
  {
    "text": "CPUs but then uh it's not really the",
    "start": "784720",
    "end": "788120"
  },
  {
    "text": "number of CPUs that can be used it's a",
    "start": "788120",
    "end": "790880"
  },
  {
    "text": "relative weight uh once the Pod is",
    "start": "790880",
    "end": "793720"
  },
  {
    "text": "running or the container is running on",
    "start": "793720",
    "end": "795800"
  },
  {
    "text": "the Node is a relative weight between",
    "start": "795800",
    "end": "797959"
  },
  {
    "text": "all the containers running on the Node",
    "start": "797959",
    "end": "800519"
  },
  {
    "text": "so one CPU means that it can consume one",
    "start": "800519",
    "end": "803040"
  },
  {
    "text": "CPU cycle for each CPU period so if you",
    "start": "803040",
    "end": "806720"
  },
  {
    "text": "have two containers running on the same",
    "start": "806720",
    "end": "808320"
  },
  {
    "text": "node but they only request 0.1 CPUs and",
    "start": "808320",
    "end": "812480"
  },
  {
    "text": "there's nothing else running on that",
    "start": "812480",
    "end": "813760"
  },
  {
    "text": "note they can use up to 50% each uh well",
    "start": "813760",
    "end": "818160"
  },
  {
    "text": "they can use up to 100% but if both are",
    "start": "818160",
    "end": "821120"
  },
  {
    "text": "using all the CPU they can they will",
    "start": "821120",
    "end": "823480"
  },
  {
    "text": "split the CPU in 5050 so the request",
    "start": "823480",
    "end": "827000"
  },
  {
    "text": "once the container is running is just a",
    "start": "827000",
    "end": "830360"
  },
  {
    "text": "weight relative to other",
    "start": "830360",
    "end": "833320"
  },
  {
    "text": "containers for limits uh this on",
    "start": "833320",
    "end": "836519"
  },
  {
    "text": "kubernetes this translates to C group",
    "start": "836519",
    "end": "838160"
  },
  {
    "text": "SAR and and period the period on the on",
    "start": "838160",
    "end": "842399"
  },
  {
    "text": "the Kernel is by default 100",
    "start": "842399",
    "end": "845000"
  },
  {
    "text": "milliseconds and the limit that you said",
    "start": "845000",
    "end": "847959"
  },
  {
    "text": "in kubernetes is how many CPU Cycles can",
    "start": "847959",
    "end": "851639"
  },
  {
    "text": "be used in a",
    "start": "851639",
    "end": "853199"
  },
  {
    "text": "period if you go over that limit the",
    "start": "853199",
    "end": "855959"
  },
  {
    "text": "container is throttled this is important",
    "start": "855959",
    "end": "858839"
  },
  {
    "text": "on applications that are multi-threaded",
    "start": "858839",
    "end": "861199"
  },
  {
    "text": "like typically Java and you'll see it",
    "start": "861199",
    "end": "863120"
  },
  {
    "text": "there uh more often so if if your Java",
    "start": "863120",
    "end": "866680"
  },
  {
    "text": "application in one thread is used using",
    "start": "866680",
    "end": "869959"
  },
  {
    "text": "uh sorry if your jav application has",
    "start": "869959",
    "end": "871600"
  },
  {
    "text": "four threads and they are using all CPU",
    "start": "871600",
    "end": "874759"
  },
  {
    "text": "they can and the period is 100",
    "start": "874759",
    "end": "877480"
  },
  {
    "text": "milliseconds in 25 milliseconds you",
    "start": "877480",
    "end": "880079"
  },
  {
    "text": "already use all the CPU you could use in",
    "start": "880079",
    "end": "882519"
  },
  {
    "text": "100 milliseconds so your container is",
    "start": "882519",
    "end": "884880"
  },
  {
    "text": "going to be running for uh a 25",
    "start": "884880",
    "end": "888720"
  },
  {
    "text": "milliseconds and throttle doing nothing",
    "start": "888720",
    "end": "891360"
  },
  {
    "text": "for 75 milliseconds so this is very",
    "start": "891360",
    "end": "894519"
  },
  {
    "text": "important again very multi-threaded",
    "start": "894519",
    "end": "897480"
  },
  {
    "text": "applications like Java",
    "start": "897480",
    "end": "900680"
  },
  {
    "text": "the other thing we're using for scaling",
    "start": "901040",
    "end": "902920"
  },
  {
    "text": "and cost savings is uh switching to arm",
    "start": "902920",
    "end": "906360"
  },
  {
    "text": "anybody using",
    "start": "906360",
    "end": "908519"
  },
  {
    "text": "arm the the people that are not using",
    "start": "908519",
    "end": "911120"
  },
  {
    "text": "arm",
    "start": "911120",
    "end": "913240"
  },
  {
    "text": "why so you get for for numbers we are",
    "start": "913240",
    "end": "916920"
  },
  {
    "text": "getting 15 to 25% cost savings for the",
    "start": "916920",
    "end": "919519"
  },
  {
    "text": "same performance and in Java for",
    "start": "919519",
    "end": "921839"
  },
  {
    "text": "instance it's very easy because you have",
    "start": "921839",
    "end": "923639"
  },
  {
    "text": "jvms built for arm uh and you just have",
    "start": "923639",
    "end": "926839"
  },
  {
    "text": "to change the base image for your",
    "start": "926839",
    "end": "928920"
  },
  {
    "text": "containers and that's",
    "start": "928920",
    "end": "931240"
  },
  {
    "text": "all on the specific case of",
    "start": "931240",
    "end": "934160"
  },
  {
    "text": "java",
    "start": "934160",
    "end": "936279"
  },
  {
    "text": "um Java was a bit picky running on",
    "start": "936279",
    "end": "940360"
  },
  {
    "text": "containers for a long time now it's it's",
    "start": "940360",
    "end": "942680"
  },
  {
    "text": "a lot better but if you look at the um",
    "start": "942680",
    "end": "948160"
  },
  {
    "text": "defaults if you have a",
    "start": "948160",
    "end": "950319"
  },
  {
    "text": "jvm that uh a container running with",
    "start": "950319",
    "end": "954480"
  },
  {
    "text": "more than 5 12 megabytes of uh of memory",
    "start": "954480",
    "end": "958880"
  },
  {
    "text": "the jvm by default is only going to use",
    "start": "958880",
    "end": "962600"
  },
  {
    "text": "25% as the hip size so you're wasting",
    "start": "962600",
    "end": "967319"
  },
  {
    "text": "75% of the memory of the container if",
    "start": "967319",
    "end": "969880"
  },
  {
    "text": "you just use the",
    "start": "969880",
    "end": "972519"
  },
  {
    "text": "default we typically use and I think",
    "start": "972519",
    "end": "975639"
  },
  {
    "text": "most cases you can use 75% of the",
    "start": "975639",
    "end": "977920"
  },
  {
    "text": "container memory unless you have uh",
    "start": "977920",
    "end": "980839"
  },
  {
    "text": "things that are off hip like elastic",
    "start": "980839",
    "end": "983600"
  },
  {
    "text": "search spark any any native code that",
    "start": "983600",
    "end": "986240"
  },
  {
    "text": "you're",
    "start": "986240",
    "end": "987519"
  },
  {
    "text": "calling and the on kubernetes the jvm",
    "start": "987519",
    "end": "991519"
  },
  {
    "text": "when it creates the the hip it's uh",
    "start": "991519",
    "end": "995199"
  },
  {
    "text": "basically takes that memory kubernetes",
    "start": "995199",
    "end": "996959"
  },
  {
    "text": "doesn't know how much of the Hep is",
    "start": "996959",
    "end": "998279"
  },
  {
    "text": "running so you have to consider",
    "start": "998279",
    "end": "1000519"
  },
  {
    "text": "that and for now uh for jav applications",
    "start": "1000519",
    "end": "1004040"
  },
  {
    "text": "typically use you would Set uh request",
    "start": "1004040",
    "end": "1006040"
  },
  {
    "text": "and limits to the same value because",
    "start": "1006040",
    "end": "1008040"
  },
  {
    "text": "again the jvm takes the hip size and",
    "start": "1008040",
    "end": "1010680"
  },
  {
    "text": "it's going to be con constant across the",
    "start": "1010680",
    "end": "1012800"
  },
  {
    "text": "whole uh time the the container is",
    "start": "1012800",
    "end": "1016880"
  },
  {
    "text": "running",
    "start": "1017480",
    "end": "1019440"
  },
  {
    "text": "so perfect timing kubernetes out the",
    "start": "1019440",
    "end": "1022800"
  },
  {
    "text": "scaling we use out the scalers which",
    "start": "1022800",
    "end": "1025400"
  },
  {
    "text": "ones we use kubernetes out the scaler",
    "start": "1025400",
    "end": "1027438"
  },
  {
    "text": "the horizontal pot one and also the",
    "start": "1027439",
    "end": "1029000"
  },
  {
    "text": "vertical one so let's talk a little bit",
    "start": "1029000",
    "end": "1031760"
  },
  {
    "text": "about them the cluster of the scaler",
    "start": "1031760",
    "end": "1034360"
  },
  {
    "text": "well you might know already but this is",
    "start": "1034360",
    "end": "1037319"
  },
  {
    "text": "to increase and reduce the cluster size",
    "start": "1037319",
    "end": "1040438"
  },
  {
    "text": "so we base this out the scaling on the",
    "start": "1040439",
    "end": "1043918"
  },
  {
    "text": "CPU one memory",
    "start": "1043919",
    "end": "1046678"
  },
  {
    "text": "requests so um",
    "start": "1046679",
    "end": "1049360"
  },
  {
    "text": "this is this sentence actually is going",
    "start": "1049360",
    "end": "1051520"
  },
  {
    "text": "to be quite important because I'll show",
    "start": "1051520",
    "end": "1053280"
  },
  {
    "text": "you an example why don't forget to set a",
    "start": "1053280",
    "end": "1056679"
  },
  {
    "text": "maximum of nodes when you you are using",
    "start": "1056679",
    "end": "1059160"
  },
  {
    "text": "the cluster",
    "start": "1059160",
    "end": "1060600"
  },
  {
    "text": "autoscaler you'll see so using this",
    "start": "1060600",
    "end": "1063799"
  },
  {
    "text": "cluster AOS scaler we have some savings",
    "start": "1063799",
    "end": "1065960"
  },
  {
    "text": "around 30 and",
    "start": "1065960",
    "end": "1067679"
  },
  {
    "text": "50% and here is the example why you",
    "start": "1067679",
    "end": "1070799"
  },
  {
    "text": "should set this maximum of nodes so you",
    "start": "1070799",
    "end": "1073440"
  },
  {
    "text": "can see here a normal behavior right you",
    "start": "1073440",
    "end": "1076080"
  },
  {
    "text": "can see we are going from",
    "start": "1076080",
    "end": "1079080"
  },
  {
    "text": "50 uh instances up to you know 100 but",
    "start": "1079080",
    "end": "1084440"
  },
  {
    "text": "then you can just decide and wake up one",
    "start": "1084440",
    "end": "1087400"
  },
  {
    "text": "day and see this kind of back you can",
    "start": "1087400",
    "end": "1090480"
  },
  {
    "text": "see that uh suddenly the number of",
    "start": "1090480",
    "end": "1092679"
  },
  {
    "text": "instances went up right straightforward",
    "start": "1092679",
    "end": "1095880"
  },
  {
    "text": "to",
    "start": "1095880",
    "end": "1097000"
  },
  {
    "text": "150 this was because we introduce a back",
    "start": "1097000",
    "end": "1100280"
  },
  {
    "text": "then we realized about some alerting hey",
    "start": "1100280",
    "end": "1102480"
  },
  {
    "text": "you are getting the maximum of nodes and",
    "start": "1102480",
    "end": "1105039"
  },
  {
    "text": "then we just fix it and then you can see",
    "start": "1105039",
    "end": "1106679"
  },
  {
    "text": "the behavior just start going down",
    "start": "1106679",
    "end": "1109039"
  },
  {
    "text": "otherwise the bill for that month will",
    "start": "1109039",
    "end": "1111200"
  },
  {
    "text": "be very",
    "start": "1111200",
    "end": "1112960"
  },
  {
    "text": "funny we also use the vertical P out",
    "start": "1112960",
    "end": "1115720"
  },
  {
    "text": "scaler so just a little bit I'll explain",
    "start": "1115720",
    "end": "1119640"
  },
  {
    "text": "why this is about decreasing and",
    "start": "1119640",
    "end": "1121720"
  },
  {
    "text": "increasing the resources for each po so",
    "start": "1121720",
    "end": "1123960"
  },
  {
    "text": "making it bigger or",
    "start": "1123960",
    "end": "1126000"
  },
  {
    "text": "smaller and there's the the fact is that",
    "start": "1126000",
    "end": "1129559"
  },
  {
    "text": "right now at least in our kubernetes",
    "start": "1129559",
    "end": "1131720"
  },
  {
    "text": "version that we are using it requires",
    "start": "1131720",
    "end": "1134200"
  },
  {
    "text": "the restart of pots actually this is one",
    "start": "1134200",
    "end": "1138400"
  },
  {
    "text": "good thing that is going to change in",
    "start": "1138400",
    "end": "1140520"
  },
  {
    "text": "future uh kubernetes versions that will",
    "start": "1140520",
    "end": "1142640"
  },
  {
    "text": "avoid that and actually it will make it",
    "start": "1142640",
    "end": "1145120"
  },
  {
    "text": "like more interesting for",
    "start": "1145120",
    "end": "1149240"
  },
  {
    "text": "us so this vertical P out scaler uh we",
    "start": "1149240",
    "end": "1153000"
  },
  {
    "text": "only use it in Dev environments um to",
    "start": "1153000",
    "end": "1156600"
  },
  {
    "text": "scale it down if they are unused that's",
    "start": "1156600",
    "end": "1158760"
  },
  {
    "text": "why we just have a little savings like",
    "start": "1158760",
    "end": "1161039"
  },
  {
    "text": "five and um",
    "start": "1161039",
    "end": "1163440"
  },
  {
    "text": "15% and the horizontal B out scaler",
    "start": "1163440",
    "end": "1167120"
  },
  {
    "text": "actually this is one of the most",
    "start": "1167120",
    "end": "1168480"
  },
  {
    "text": "interesting one the ones for us we",
    "start": "1168480",
    "end": "1170960"
  },
  {
    "text": "create more pods when they are needed so",
    "start": "1170960",
    "end": "1173440"
  },
  {
    "text": "if we need more pods then we create more",
    "start": "1173440",
    "end": "1175679"
  },
  {
    "text": "if we just have less traffic then we",
    "start": "1175679",
    "end": "1177799"
  },
  {
    "text": "create less well we",
    "start": "1177799",
    "end": "1180799"
  },
  {
    "text": "remove so uh we scale this AO scaler on",
    "start": "1180799",
    "end": "1185200"
  },
  {
    "text": "based on CPU and HTTP requests per",
    "start": "1185200",
    "end": "1188880"
  },
  {
    "text": "minute so the thing is that don't use",
    "start": "1188880",
    "end": "1191480"
  },
  {
    "text": "the same metric for the horizontal one",
    "start": "1191480",
    "end": "1194640"
  },
  {
    "text": "and the vertical one because otherwise",
    "start": "1194640",
    "end": "1196159"
  },
  {
    "text": "you are going to have like some troubles",
    "start": "1196159",
    "end": "1199039"
  },
  {
    "text": "um CPU out scaling only is problematic",
    "start": "1199039",
    "end": "1201919"
  },
  {
    "text": "and you can just think about this case",
    "start": "1201919",
    "end": "1204120"
  },
  {
    "text": "what happens for this periodic task that",
    "start": "1204120",
    "end": "1207280"
  },
  {
    "text": "have like a high consumption of CPU on a",
    "start": "1207280",
    "end": "1210919"
  },
  {
    "text": "startup or just you can you know because",
    "start": "1210919",
    "end": "1213200"
  },
  {
    "text": "you have an Spike if you just base the",
    "start": "1213200",
    "end": "1216480"
  },
  {
    "text": "horizontal P out scaler on this",
    "start": "1216480",
    "end": "1218840"
  },
  {
    "text": "CPU metric then you might have the same",
    "start": "1218840",
    "end": "1222039"
  },
  {
    "text": "trouble but with a lot of BS that are",
    "start": "1222039",
    "end": "1224799"
  },
  {
    "text": "unuseful so then that's not something",
    "start": "1224799",
    "end": "1228360"
  },
  {
    "text": "that you want to behave so the thing is",
    "start": "1228360",
    "end": "1231320"
  },
  {
    "text": "that we recommend you to uh you know put",
    "start": "1231320",
    "end": "1234720"
  },
  {
    "text": "something else not only CPU but also",
    "start": "1234720",
    "end": "1237000"
  },
  {
    "text": "like request per minute or any other",
    "start": "1237000",
    "end": "1239360"
  },
  {
    "text": "metric um this is allowing us to have",
    "start": "1239360",
    "end": "1242440"
  },
  {
    "text": "some savings around 50 and",
    "start": "1242440",
    "end": "1245360"
  },
  {
    "text": "75% so which is a",
    "start": "1245360",
    "end": "1249120"
  },
  {
    "text": "lot yeah so to wrap it up in our or just",
    "start": "1249720",
    "end": "1254280"
  },
  {
    "text": "giving us uh giving you the example of",
    "start": "1254280",
    "end": "1256280"
  },
  {
    "text": "our experience uh I I think it's very",
    "start": "1256280",
    "end": "1258720"
  },
  {
    "text": "easy to start in kubernetes then",
    "start": "1258720",
    "end": "1260360"
  },
  {
    "text": "optimize you can start it's very easy to",
    "start": "1260360",
    "end": "1262159"
  },
  {
    "text": "do a lift and shift bring your monolith",
    "start": "1262159",
    "end": "1264799"
  },
  {
    "text": "or whatever application you have running",
    "start": "1264799",
    "end": "1266960"
  },
  {
    "text": "somewhere else bring it to kubernetes",
    "start": "1266960",
    "end": "1269120"
  },
  {
    "text": "and then optimize with these patterns",
    "start": "1269120",
    "end": "1271039"
  },
  {
    "text": "like side cars or starting with",
    "start": "1271039",
    "end": "1273320"
  },
  {
    "text": "microservices as you need",
    "start": "1273320",
    "end": "1275279"
  },
  {
    "text": "it uh yeah use these patterns to DEC",
    "start": "1275279",
    "end": "1278320"
  },
  {
    "text": "composed application side car init",
    "start": "1278320",
    "end": "1280279"
  },
  {
    "text": "containers new Services microservices",
    "start": "1280279",
    "end": "1282640"
  },
  {
    "text": "whatever you want over time and it's",
    "start": "1282640",
    "end": "1286039"
  },
  {
    "text": "also important to consider the resour",
    "start": "1286039",
    "end": "1288279"
  },
  {
    "text": "optimization how you tune this jvm if",
    "start": "1288279",
    "end": "1290600"
  },
  {
    "text": "you're doing Java uh how do you set up",
    "start": "1290600",
    "end": "1293200"
  },
  {
    "text": "the CPU request limits the memory um",
    "start": "1293200",
    "end": "1296279"
  },
  {
    "text": "garbage collector on the jvm all these",
    "start": "1296279",
    "end": "1298640"
  },
  {
    "text": "all these things you can do",
    "start": "1298640",
    "end": "1300720"
  },
  {
    "text": "afterwards",
    "start": "1300720",
    "end": "1302360"
  },
  {
    "text": "so if you have questions we'll take we",
    "start": "1302360",
    "end": "1306760"
  },
  {
    "text": "have three minutes for questions",
    "start": "1306760",
    "end": "1308400"
  },
  {
    "text": "otherwise I'll bring ol here to give us",
    "start": "1308400",
    "end": "1310679"
  },
  {
    "text": "more",
    "start": "1310679",
    "end": "1312919"
  },
  {
    "text": "jokes one question over",
    "start": "1313960",
    "end": "1317039"
  },
  {
    "text": "there",
    "start": "1317039",
    "end": "1320039"
  },
  {
    "text": "Sy",
    "start": "1346960",
    "end": "1349960"
  },
  {
    "text": "okay so the question is I'll have to",
    "start": "1356960",
    "end": "1359279"
  },
  {
    "text": "repeat it uh summarizing the how do we",
    "start": "1359279",
    "end": "1364080"
  },
  {
    "text": "manage CP AOS scaling with thread groups",
    "start": "1364080",
    "end": "1368320"
  },
  {
    "text": "on especially on jvms right yeah so I",
    "start": "1368320",
    "end": "1372240"
  },
  {
    "text": "didn't we didn't go into detail there",
    "start": "1372240",
    "end": "1375080"
  },
  {
    "text": "but we had this issue for instance the",
    "start": "1375080",
    "end": "1377480"
  },
  {
    "text": "uh throttling you create uh multiple",
    "start": "1377480",
    "end": "1381360"
  },
  {
    "text": "threats because your uh jvm assumes it's",
    "start": "1381360",
    "end": "1385120"
  },
  {
    "text": "running especially on older versions of",
    "start": "1385120",
    "end": "1387600"
  },
  {
    "text": "java assumes it's running with the same",
    "start": "1387600",
    "end": "1390320"
  },
  {
    "text": "CPUs that the host has or something like",
    "start": "1390320",
    "end": "1392559"
  },
  {
    "text": "that if you don't narrow it it down to",
    "start": "1392559",
    "end": "1395159"
  },
  {
    "text": "the limits you set in the container is",
    "start": "1395159",
    "end": "1397279"
  },
  {
    "text": "going to think oh I have 32 CPUs I'm",
    "start": "1397279",
    "end": "1399520"
  },
  {
    "text": "going to create all these threats and",
    "start": "1399520",
    "end": "1401840"
  },
  {
    "text": "then your container doesn't have maybe",
    "start": "1401840",
    "end": "1404520"
  },
  {
    "text": "the limits are set to one CPU or two",
    "start": "1404520",
    "end": "1406440"
  },
  {
    "text": "CPUs and the con container",
    "start": "1406440",
    "end": "1409559"
  },
  {
    "text": "um J the jvm is going to create very big",
    "start": "1409559",
    "end": "1412880"
  },
  {
    "text": "thread pools is going to start using at",
    "start": "1412880",
    "end": "1416480"
  },
  {
    "text": "the same time a lot of the CPU and it's",
    "start": "1416480",
    "end": "1418840"
  },
  {
    "text": "going to cause you're going to see this",
    "start": "1418840",
    "end": "1421240"
  },
  {
    "text": "as throttling in metrics in",
    "start": "1421240",
    "end": "1424840"
  },
  {
    "text": "kubernetes yeah so you have to um we can",
    "start": "1429360",
    "end": "1433320"
  },
  {
    "text": "go in detail later but you have to",
    "start": "1433320",
    "end": "1435400"
  },
  {
    "text": "consider how do you set the number",
    "start": "1435400",
    "end": "1437880"
  },
  {
    "text": "number of uh CPUs that the jvm can see",
    "start": "1437880",
    "end": "1441440"
  },
  {
    "text": "with the CPUs you limit the container to",
    "start": "1441440",
    "end": "1443880"
  },
  {
    "text": "and you have to figure out what's the",
    "start": "1443880",
    "end": "1445679"
  },
  {
    "text": "right number for those things to match",
    "start": "1445679",
    "end": "1449120"
  },
  {
    "text": "and especially when you allow out to",
    "start": "1449120",
    "end": "1450919"
  },
  {
    "text": "scaling to go uh so if you have a",
    "start": "1450919",
    "end": "1453480"
  },
  {
    "text": "container that can run with 10 CPUs or",
    "start": "1453480",
    "end": "1456600"
  },
  {
    "text": "two CPUs based on Dynamic uh metrics uh",
    "start": "1456600",
    "end": "1460520"
  },
  {
    "text": "you have to figure out uh on a startup",
    "start": "1460520",
    "end": "1464799"
  },
  {
    "text": "not have a static number of how many C",
    "start": "1464799",
    "end": "1467840"
  },
  {
    "text": "use the jbm can see but have a dynamic",
    "start": "1467840",
    "end": "1470799"
  },
  {
    "text": "number based on those uh requests and",
    "start": "1470799",
    "end": "1474120"
  },
  {
    "text": "limits any other question quick",
    "start": "1474120",
    "end": "1479679"
  },
  {
    "text": "yes yeah okay so do we depend automat",
    "start": "1486840",
    "end": "1491159"
  },
  {
    "text": "totally on the to scaler or if we switch",
    "start": "1491159",
    "end": "1494480"
  },
  {
    "text": "um or or we or we how look at other",
    "start": "1494480",
    "end": "1498720"
  },
  {
    "text": "metrics um so we look at the how busy",
    "start": "1498720",
    "end": "1502799"
  },
  {
    "text": "the Clusters are and when we see levels",
    "start": "1502799",
    "end": "1506000"
  },
  {
    "text": "in in regions we create new",
    "start": "1506000",
    "end": "1509120"
  },
  {
    "text": "clusters that was the question about",
    "start": "1509120",
    "end": "1511720"
  },
  {
    "text": "what whether we create more",
    "start": "1511720",
    "end": "1514559"
  },
  {
    "text": "clusters",
    "start": "1514559",
    "end": "1516960"
  },
  {
    "text": "or we don't yeah we depend totally on",
    "start": "1516960",
    "end": "1520240"
  },
  {
    "text": "the Autos scaler for each cluster and",
    "start": "1520240",
    "end": "1522279"
  },
  {
    "text": "when we reach the capacity what we",
    "start": "1522279",
    "end": "1524840"
  },
  {
    "text": "consider is the capacity of a cluster we",
    "start": "1524840",
    "end": "1527120"
  },
  {
    "text": "create more",
    "start": "1527120",
    "end": "1528600"
  },
  {
    "text": "clusters well thank you very thank you",
    "start": "1528600",
    "end": "1531120"
  },
  {
    "text": "very much for having us yeah thank",
    "start": "1531120",
    "end": "1534559"
  },
  {
    "text": "you",
    "start": "1534559",
    "end": "1537559"
  }
]