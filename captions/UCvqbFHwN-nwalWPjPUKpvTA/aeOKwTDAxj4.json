[
  {
    "text": "hello everybody Welcome bonjour welcome to my talk why barricade the door if the",
    "start": "199",
    "end": "5359"
  },
  {
    "text": "window is open why indeed the next half an hour we're going to talk about",
    "start": "5359",
    "end": "11000"
  },
  {
    "text": "various ways uh to get into the kubernetes and also we'll try to make",
    "start": "11000",
    "end": "17199"
  },
  {
    "text": "sense of those ways to come up with some kind of framework that will help us think about",
    "start": "17199",
    "end": "23840"
  },
  {
    "text": "them um okay my name is Shay Shay bovitz I am a threat researcher in whiz",
    "start": "24080",
    "end": "33920"
  },
  {
    "text": "you might know me through one of these projects uh right now I'm as I said I'm",
    "start": "33920",
    "end": "40280"
  },
  {
    "text": "happy to be the part of the amazing wi threat research team where I'm responsible among other things for uh",
    "start": "40280",
    "end": "47360"
  },
  {
    "text": "the main of kubernetes threat research okay let's talk about",
    "start": "47360",
    "end": "54399"
  },
  {
    "text": "clusters um so I was told that every good talk need is to have a hook to",
    "start": "54399",
    "end": "61480"
  },
  {
    "text": "something to engage the audience to explain the motivation um but I think in this case",
    "start": "61480",
    "end": "67799"
  },
  {
    "text": "we don't really need that much motivation because it's kind of obvious right the same way that you don't want",
    "start": "67799",
    "end": "74360"
  },
  {
    "text": "to get burlers in your house you don't want to get attacker to give them access",
    "start": "74360",
    "end": "80880"
  },
  {
    "text": "into your cluster be it your first cluster that you're staging through some kind of click in the cloud UI by",
    "start": "80880",
    "end": "89200"
  },
  {
    "text": "choosing the default options or be it your cluster number 5,000 that you're",
    "start": "89200",
    "end": "94360"
  },
  {
    "text": "staging through some kind of fancy terraform um your primary security",
    "start": "94360",
    "end": "99920"
  },
  {
    "text": "concern the First Security concern is to make sure that it's not easy to get into your cluster of course before you run",
    "start": "99920",
    "end": "106119"
  },
  {
    "text": "some kind of fancy KPM and uh audit Security Solutions and so we'll use this house as",
    "start": "106119",
    "end": "113079"
  },
  {
    "text": "a metaphor for the cluster by the way did somebody recognize what's this house which movie is this from",
    "start": "113079",
    "end": "120600"
  },
  {
    "text": "that's right yeah McAllister's house so we'll use the misfortunes of that those",
    "start": "120600",
    "end": "126399"
  },
  {
    "text": "wet Bandits marf and Harry I think their name was uh that were trying to get into",
    "start": "126399",
    "end": "131480"
  },
  {
    "text": "the house um and Kevin was trying to F them off so we'll use those analogies uh",
    "start": "131480",
    "end": "137760"
  },
  {
    "text": "as an analogist to the potential attackers that try to get into your clusters uh just something to to make",
    "start": "137760",
    "end": "143720"
  },
  {
    "text": "the talk more engaging and more perhaps intuitive as well so now the first",
    "start": "143720",
    "end": "149040"
  },
  {
    "text": "reason is obvious of course but there are a couple more reasons more subtle so the um for example these are the numbers",
    "start": "149040",
    "end": "155599"
  },
  {
    "text": "from our 2023 security report it takes 22 minutes for attacker or for malicious",
    "start": "155599",
    "end": "161440"
  },
  {
    "text": "scans to reach newly staged eks cluster okay so if you have the cluster that",
    "start": "161440",
    "end": "167200"
  },
  {
    "text": "reachable publicly assume attackers know about about it okay that's your",
    "start": "167200",
    "end": "174280"
  },
  {
    "text": "assumption and then there's another even more subtle reason again from the same security report",
    "start": "174280",
    "end": "181840"
  },
  {
    "text": "um I'll explain about report first so we took a bunch of data from the consented",
    "start": "181840",
    "end": "187360"
  },
  {
    "text": "uh customers we processed it and mapped that data on the stages of the typical",
    "start": "187360",
    "end": "194120"
  },
  {
    "text": "attack chain in the kubernetes cluster okay so initial access lateral movement privilege escalation and impact and what",
    "start": "194120",
    "end": "201599"
  },
  {
    "text": "we found out is that the lateral movement and privilege escalations were the uh weakest points in this attack",
    "start": "201599",
    "end": "210400"
  },
  {
    "text": "chain um probably because of the uh multitude of options inside the kubernetes cluster to move laterally or",
    "start": "210400",
    "end": "217400"
  },
  {
    "text": "priv escalate privileges but also because of the lack of security controls that customer employ even the controls",
    "start": "217400",
    "end": "224680"
  },
  {
    "text": "that already exist like Network policies using the same name space Etc which puts pressure on initial",
    "start": "224680",
    "end": "231959"
  },
  {
    "text": "access so we're saying here let's first secure the initial access and make it",
    "start": "231959",
    "end": "237480"
  },
  {
    "text": "harder just to get first okay now house and as a metaphor is nice but we still",
    "start": "237480",
    "end": "243400"
  },
  {
    "text": "need to remember the original architecture of course right because um so we'll talk about the control plane",
    "start": "243400",
    "end": "250400"
  },
  {
    "text": "the blue components the blue ports but also about data plane and maybe a bit more now to extract the maximum value",
    "start": "250400",
    "end": "257759"
  },
  {
    "text": "from this talk um we not just only going to talk about the tech technique like",
    "start": "257759",
    "end": "265680"
  },
  {
    "text": "how the attackers can actually get into your cluster but also about the detections and protections because ultimately we want to know what to do",
    "start": "265680",
    "end": "272800"
  },
  {
    "text": "about this how we can protect our clusters so when you see those icons",
    "start": "272800",
    "end": "278680"
  },
  {
    "text": "this red uh lamp and the green bucket you'll know what that means for every initial axis Vector I'll I'll I'll share",
    "start": "278680",
    "end": "286479"
  },
  {
    "text": "with you the detection methods and protection methods all with the final goal after",
    "start": "286479",
    "end": "292759"
  },
  {
    "text": "half an hour to have some kind of framework and means to think about future misconfigurations and vul",
    "start": "292759",
    "end": "299880"
  },
  {
    "text": "abilities in the context of initial AIS so that the next when the next leaky",
    "start": "299880",
    "end": "306000"
  },
  {
    "text": "vessels will come out and they will you'll be able to think about it okay to",
    "start": "306000",
    "end": "311160"
  },
  {
    "text": "put it into perspective and say okay I have to patch my worker nodes immediately for example or upgrade a",
    "start": "311160",
    "end": "318039"
  },
  {
    "text": "cluster or I can ignore it for now it and it won't affect my initial access",
    "start": "318039",
    "end": "324360"
  },
  {
    "text": "okay all right before we jumping in into the control plane very quickly our what",
    "start": "324360",
    "end": "330319"
  },
  {
    "text": "toolbox uh we have typically sensor or EDR Solution that's uh that's visible on",
    "start": "330319",
    "end": "337039"
  },
  {
    "text": "the Kernel level con it knows about containers it's probably kubernetes aware and Cloud aware perhaps even we",
    "start": "337039",
    "end": "344000"
  },
  {
    "text": "have on the kubernetes level we have kubernetes admission controller and the audit log of course and on the cloud",
    "start": "344000",
    "end": "349919"
  },
  {
    "text": "level we also have various logs Cloud detections uh I don't know various",
    "start": "349919",
    "end": "355479"
  },
  {
    "text": "detection streams but also VPC flow locks Etc so we have a bunch of those it's good to keep that in",
    "start": "355479",
    "end": "361840"
  },
  {
    "text": "mind okay let's dive in into the control plane of course we're going to start with kubernetes API access why because",
    "start": "361840",
    "end": "369120"
  },
  {
    "text": "it's it's like a front door to your cluster basically and we want to secure our front door now front door is only",
    "start": "369120",
    "end": "375759"
  },
  {
    "text": "front door if it's a public publicly accessible cluster of course however what we found out is about 70% of the",
    "start": "375759",
    "end": "382800"
  },
  {
    "text": "Clusters are publicly accessible now it's not immediately a",
    "start": "382800",
    "end": "388560"
  },
  {
    "text": "problem because let's say attacker Anonymous user reach your cluster they",
    "start": "388560",
    "end": "394759"
  },
  {
    "text": "get something like this 403 okay or 401 so if Anonymous authentication enabled",
    "start": "394759",
    "end": "401039"
  },
  {
    "text": "like on eks or gke for example then they'll get 403 and they will get mapped automatically to the system Anonymous",
    "start": "401039",
    "end": "409240"
  },
  {
    "text": "user okay what can they reach what can they get from this well they can",
    "start": "409240",
    "end": "414280"
  },
  {
    "text": "probably fingerprint your your cluster okay in SL version endpoint fine they know health your cluster okay maybe some",
    "start": "414280",
    "end": "422080"
  },
  {
    "text": "something in certificate details not very interesting um however the",
    "start": "422080",
    "end": "428639"
  },
  {
    "text": "kubernetes arbu misconfiguration can interfere how what happens if system Anonymous or",
    "start": "428639",
    "end": "435879"
  },
  {
    "text": "system unauthenticated group that's Anonymous is mapped to are actually assigned a non-trivial role so there are",
    "start": "435879",
    "end": "443000"
  },
  {
    "text": "three trivial roles assigned Always by default which are not very interesting",
    "start": "443000",
    "end": "448160"
  },
  {
    "text": "but there are non-trivial roles perhaps may be assigned and in that case the",
    "start": "448160",
    "end": "453400"
  },
  {
    "text": "external unauthentic user instead of getting 403 or 401 they will get something like this the actual list of",
    "start": "453400",
    "end": "460680"
  },
  {
    "text": "pod specifications Jason which might contain of course some sensitive data so",
    "start": "460680",
    "end": "466039"
  },
  {
    "text": "it's like leaving your front door open now in truth this is extremely rare",
    "start": "466039",
    "end": "473840"
  },
  {
    "text": "condition this is what our data shows because people are already aware about this misconfiguration it's it got enough",
    "start": "473840",
    "end": "480800"
  },
  {
    "text": "U publicity I guess okay uh so chances are if you see something like this think",
    "start": "480800",
    "end": "486800"
  },
  {
    "text": "about honey pod first and then cluster but of course it's if it's your in your environment then it's not a honey pod um",
    "start": "486800",
    "end": "493520"
  },
  {
    "text": "okay how can we detect that type of access everything related to kubernetes API access is cuboard log okay so this",
    "start": "493520",
    "end": "501199"
  },
  {
    "text": "is how it looks like for people who never seen CUO log it has user username",
    "start": "501199",
    "end": "507120"
  },
  {
    "text": "group action and a research so that's what we're looking for and we",
    "start": "507120",
    "end": "512159"
  },
  {
    "text": "have all the information to put some kind of Reger rule to detect this access great however sometimes the your",
    "start": "512159",
    "end": "520200"
  },
  {
    "text": "provider your cloud provider can butcher those audit logs so in this case this is how the audit lock looks in the G ke",
    "start": "520200",
    "end": "527279"
  },
  {
    "text": "version unfortunately and so yes you need to maintain several versions of",
    "start": "527279",
    "end": "532440"
  },
  {
    "text": "your regular rules in this case all right what are we doing with",
    "start": "532440",
    "end": "538360"
  },
  {
    "text": "this how can we detect the access let's say attacker is abused this misconfiguration and they accessed it",
    "start": "538360",
    "end": "544839"
  },
  {
    "text": "okay how can we detect them well anomally rules is your friend here because this is uh because that's how",
    "start": "544839",
    "end": "551079"
  },
  {
    "text": "you know that system Anonymous doing something something weird but also KPM",
    "start": "551079",
    "end": "556160"
  },
  {
    "text": "because this misconfiguration is relatively easy to find or arac coded tool okay so that was the first",
    "start": "556160",
    "end": "564200"
  },
  {
    "text": "one now let's move on to cube config Cube config is the file that tells cu cuet right how to authenticate into the",
    "start": "564200",
    "end": "571760"
  },
  {
    "text": "remote cluster and it typically saved in cubec config okay great the it structure",
    "start": "571760",
    "end": "578600"
  },
  {
    "text": "is as follows it has three section first list of clusters second list of context",
    "start": "578600",
    "end": "584040"
  },
  {
    "text": "and third list of users and the third session is the most interesting one because it actually tells Cube cut Cube",
    "start": "584040",
    "end": "590360"
  },
  {
    "text": "cutle how to authenticate into the cluster how to use that user material so",
    "start": "590360",
    "end": "595399"
  },
  {
    "text": "let's see how it's implemented in the in the big three solutions fors it looks like this so we have this exact session",
    "start": "595399",
    "end": "602560"
  },
  {
    "text": "under the user which B basically tells CU cuddle run AWS thi client with the",
    "start": "602560",
    "end": "610120"
  },
  {
    "text": "following parameters then it will get back some kind of exact credentials and it will",
    "start": "610120",
    "end": "615959"
  },
  {
    "text": "use those exact credentials to actually authenticate into the cluster so what can we learn from this first don't run",
    "start": "615959",
    "end": "623720"
  },
  {
    "text": "untrusted Cube config simple as this if you download it's somewhere from the",
    "start": "623720",
    "end": "629360"
  },
  {
    "text": "from the GitHub right like there is execution context inside the cube config",
    "start": "629360",
    "end": "635959"
  },
  {
    "text": "second you still need AWS credentials in this",
    "start": "635959",
    "end": "641240"
  },
  {
    "text": "case and same for G ke it uses the same GP and",
    "start": "641240",
    "end": "647519"
  },
  {
    "text": "AWS credential that's already on your laptop so there are no new credentials in this case in if CBE Cube config is",
    "start": "647519",
    "end": "655040"
  },
  {
    "text": "licked then uh nothing really happens what I'm getting to is AKs okay so AKs",
    "start": "655040",
    "end": "663279"
  },
  {
    "text": "has three authentication modes local entry ID and couple entry ID okay in the",
    "start": "663279",
    "end": "669480"
  },
  {
    "text": "local which is the default mode this is what you'll find in your Cube config you'll find the client",
    "start": "669480",
    "end": "676200"
  },
  {
    "text": "certificate you'll find the token token okay shortterm access now imagine this",
    "start": "676200",
    "end": "682079"
  },
  {
    "text": "Cube config clicks what are you going to do the thing is that the certificate is",
    "start": "682079",
    "end": "689920"
  },
  {
    "text": "valid for 2 years you lick your Cube config go ahead and try to rotate all",
    "start": "689920",
    "end": "695880"
  },
  {
    "text": "those certificate in your cluster basically if you have AKs in",
    "start": "695880",
    "end": "702320"
  },
  {
    "text": "local uh local arbu mode authentication make sure don't keep configs and that",
    "start": "702320",
    "end": "710120"
  },
  {
    "text": "and that happens a lot actually so this you can find on the GitHub various Secrets checked in into the public",
    "start": "710120",
    "end": "717440"
  },
  {
    "text": "repositories so you need to be very careful about it how do you detect and protect against this well to detect the",
    "start": "717440",
    "end": "724360"
  },
  {
    "text": "access is anomaly rules against are your friends but for protection we're talking",
    "start": "724360",
    "end": "730480"
  },
  {
    "text": "here about the developer practices coding practices and secret scanning you",
    "start": "730480",
    "end": "736320"
  },
  {
    "text": "need to scan everything before you checking in in the public repositories but also private repositor of of course",
    "start": "736320",
    "end": "741959"
  },
  {
    "text": "because then after that they can become become public so don't don't do this stuff",
    "start": "741959",
    "end": "748399"
  },
  {
    "text": "right where somebody checked in G key cach credentials into the public repo",
    "start": "748399",
    "end": "754760"
  },
  {
    "text": "okay let's move on to the cuet API access and for people here in the audience they say what cuet has API",
    "start": "754760",
    "end": "762240"
  },
  {
    "text": "access uh yes apparently it does it's not documented though but it's there to",
    "start": "762240",
    "end": "767920"
  },
  {
    "text": "find the end points you need to dig deep into the code and to to look at the",
    "start": "767920",
    "end": "773480"
  },
  {
    "text": "those end points okay but they are there and it's running on AKs GK and eks as",
    "start": "773480",
    "end": "778600"
  },
  {
    "text": "well now because it's not like it's not",
    "start": "778600",
    "end": "784120"
  },
  {
    "text": "supposed to uh to be accessible right there is a reason why they didn't document this because it's only for the",
    "start": "784120",
    "end": "790199"
  },
  {
    "text": "internal control plane components and so uh that's why I",
    "start": "790199",
    "end": "796160"
  },
  {
    "text": "compare it to the some kind of pet door inside the kitchen door uh because again it's not for the humans it shouldn't be",
    "start": "796160",
    "end": "802440"
  },
  {
    "text": "there if it's there that it's some kind of serious misconfiguration or developers did something f money or",
    "start": "802440",
    "end": "809959"
  },
  {
    "text": "devops and you better be uh be aware of it so in terms of detection Cubo it will",
    "start": "809959",
    "end": "817480"
  },
  {
    "text": "be blind to this because it goes straight to the cuet it doesn't go through the kubernetes API",
    "start": "817480",
    "end": "823920"
  },
  {
    "text": "axis so sensor is your friend in this case because it will probably monitor",
    "start": "823920",
    "end": "829079"
  },
  {
    "text": "your local access um if there is some kind of local access to the port typically 10 to 50 10 to 54 those are",
    "start": "829079",
    "end": "836920"
  },
  {
    "text": "the ports that cuet API is served to protect this we're talking here about Network exposure management and VPC flow",
    "start": "836920",
    "end": "845040"
  },
  {
    "text": "logs and perhaps some kind of secondary protections all right moving on",
    "start": "845040",
    "end": "851480"
  },
  {
    "text": "management interfaces so there's this case of Tesla open dashboard that's",
    "start": "851480",
    "end": "857240"
  },
  {
    "text": "being told again and again and I'll use it again uh since 2018 I think um it",
    "start": "857240",
    "end": "863759"
  },
  {
    "text": "doesn't happen anymore because you need you kind of need it's not there by default you need to install the dashboard you need to actively expose it",
    "start": "863759",
    "end": "871680"
  },
  {
    "text": "but there are other types of dashboards I'm talking ml flow Cube flow airflow various addons it's just so handy it's",
    "start": "871680",
    "end": "879199"
  },
  {
    "text": "like a kitchen back door right which you take the garbage out but you need to keep remember to keep it closed right so",
    "start": "879199",
    "end": "886279"
  },
  {
    "text": "to detect this again we're talking about anomaly rules on Cube audit same old uh",
    "start": "886279",
    "end": "891880"
  },
  {
    "text": "to protect we're talking about Network exposure management if you see some kind of Management Port",
    "start": "891880",
    "end": "897839"
  },
  {
    "text": "open that's that's your clue here all right so that's management interfaces",
    "start": "897839",
    "end": "903199"
  },
  {
    "text": "and now the last uh access Vector on the control plane is Cube cattle proxy so",
    "start": "903199",
    "end": "909240"
  },
  {
    "text": "Cube cutle proxy I don't know how many of you have heard about it but it's a weird Beast it's like it's",
    "start": "909240",
    "end": "917600"
  },
  {
    "text": "like that zip line if you guys remember like the zip line which Kevin used to",
    "start": "917600",
    "end": "923839"
  },
  {
    "text": "exfiltrate after the burlers got in uh but the same zipline be used to get in",
    "start": "923839",
    "end": "930800"
  },
  {
    "text": "right and it's kind of hard to notice it's not big because we we're looking at the Windows Doors garage but there also",
    "start": "930800",
    "end": "937720"
  },
  {
    "text": "zip lines sometimes into your house and that's this Cube cutle proxy",
    "start": "937720",
    "end": "943720"
  },
  {
    "text": "because the thing is that everybody can run it everybody with access can run it on their local laptop or some kind of",
    "start": "943720",
    "end": "948839"
  },
  {
    "text": "cloud VM jumper uh give it Das dashport 901 and that's it and that's the",
    "start": "948839",
    "end": "956240"
  },
  {
    "text": "connection to into your cluster and the the thing is this action of cube cutle proxy",
    "start": "956240",
    "end": "961880"
  },
  {
    "text": "opening kubernetes API server doesn't see it it could be any port depending on",
    "start": "961880",
    "end": "968920"
  },
  {
    "text": "the dash dash Port option and this laptop or jumper station it can be",
    "start": "968920",
    "end": "974959"
  },
  {
    "text": "outside of the scope of your Security Solutions okay that's why I'm saying it's like a zip line because it's going",
    "start": "974959",
    "end": "981040"
  },
  {
    "text": "to be super hard to detect so make sure to cut it if you if you have it um",
    "start": "981040",
    "end": "987600"
  },
  {
    "text": "now cu body is is blind to proxy opening but sensor will should detect the the",
    "start": "987600",
    "end": "994800"
  },
  {
    "text": "moment the proxy is open because it's like open port so we're again talking",
    "start": "994800",
    "end": "1000240"
  },
  {
    "text": "about Network exposure management but this case we're also talking about anti fishing antimalware techniques on the",
    "start": "1000240",
    "end": "1006519"
  },
  {
    "text": "laptop of the developer that open this proxy all right so to sum up the control",
    "start": "1006519",
    "end": "1013000"
  },
  {
    "text": "plane we talked about multiple initial access vectors and we also Associated",
    "start": "1013000",
    "end": "1018240"
  },
  {
    "text": "the measure risks to each of them let's see what we learned let's see how we can apply what we learned on the case of",
    "start": "1018240",
    "end": "1025839"
  },
  {
    "text": "system authenticated misconfiguration that was discovered back in February I think the thing",
    "start": "1025839",
    "end": "1032240"
  },
  {
    "text": "is any user with a Google account or Gmail and I think pretty much everybody",
    "start": "1032240",
    "end": "1038720"
  },
  {
    "text": "here has one can access the cluster can authenticate into any cluster on the",
    "start": "1038720",
    "end": "1046600"
  },
  {
    "text": "gke they will be automatically assigned to the system authenticated group now",
    "start": "1046600",
    "end": "1052240"
  },
  {
    "text": "because of the name system authenticated of course it sounds safe enough like way safer than system unauthenticated and so",
    "start": "1052240",
    "end": "1058760"
  },
  {
    "text": "this this misconception that people thought about it and so they assigned admin level privileges to the system",
    "start": "1058760",
    "end": "1065400"
  },
  {
    "text": "authenticated group and so imagine what a attacker can do they go to gcpm get the token with the token",
    "start": "1065400",
    "end": "1072320"
  },
  {
    "text": "authenticate to the kubernetes API server and do whatever the system authenticated is allowed them to do",
    "start": "1072320",
    "end": "1080240"
  },
  {
    "text": "so let's check the demo how it looks like in",
    "start": "1080240",
    "end": "1084520"
  },
  {
    "text": "practice all right so here on the right side I have a cluster",
    "start": "1100159",
    "end": "1105640"
  },
  {
    "text": "access Cube cutle Get I'm just showing that if I provide any token any random token of course I won't be authenticated",
    "start": "1105640",
    "end": "1112360"
  },
  {
    "text": "into the cluster because it doesn't know what to do with this",
    "start": "1112360",
    "end": "1117919"
  },
  {
    "text": "token on the left side I'm the external user or attacker and I have Gmail",
    "start": "1117919",
    "end": "1124919"
  },
  {
    "text": "account hello okay I'm using this API to get my own",
    "start": "1124919",
    "end": "1132519"
  },
  {
    "text": "token I'm getting the token and I'm passing it into the cube C",
    "start": "1134320",
    "end": "1140720"
  },
  {
    "text": "I still don't have access but I'm user some kind of user weird number but it",
    "start": "1145600",
    "end": "1152840"
  },
  {
    "text": "kind of shows that something happened there right so now let's simulate this bad",
    "start": "1152840",
    "end": "1158480"
  },
  {
    "text": "misconfiguration so I'm creating this danger cluster roll binding literal",
    "start": "1158480",
    "end": "1163600"
  },
  {
    "text": "danger where I'm signing system resarch tracker girl uh rule to the system",
    "start": "1163600",
    "end": "1169960"
  },
  {
    "text": "authenticated group all right and I'm trying the same get pods and now I have",
    "start": "1169960",
    "end": "1175720"
  },
  {
    "text": "access because the system resource tracker which is embedded Ro in most clusters it has some kind of privileged",
    "start": "1175720",
    "end": "1182840"
  },
  {
    "text": "access there it can do bunch of stuff so we are one misconfiguration",
    "start": "1182840",
    "end": "1188799"
  },
  {
    "text": "away from the disaster on gky clusters in this case so that made uh waves in",
    "start": "1188799",
    "end": "1195559"
  },
  {
    "text": "the uh in the community",
    "start": "1195559",
    "end": "1200640"
  },
  {
    "text": "and I don't forget to uh to quickly delete that misconfiguration of",
    "start": "1201640",
    "end": "1207880"
  },
  {
    "text": "course uh",
    "start": "1207880",
    "end": "1211200"
  },
  {
    "text": "okay and we're",
    "start": "1218480",
    "end": "1221880"
  },
  {
    "text": "stuck okay so where can we place this in our framework what we learned well we are talking about kubernetes API access",
    "start": "1225720",
    "end": "1232640"
  },
  {
    "text": "so it's got to be misconfiguration in the kubernetes API access and we're talking about arbu misconfiguration okay",
    "start": "1232640",
    "end": "1240280"
  },
  {
    "text": "so for detection of course once we're talking about kubernetes CPI server we're talking about kubernetes audit log",
    "start": "1240280",
    "end": "1246840"
  },
  {
    "text": "and to protect this we just need to a good KPM solution or arbac audit solution that will detect that dangerous",
    "start": "1246840",
    "end": "1253360"
  },
  {
    "text": "roll binding so the rule you might want to use is this regular rule",
    "start": "1253360",
    "end": "1259159"
  },
  {
    "text": "which literally shows that okay we're looking at create cluster R binding create",
    "start": "1259159",
    "end": "1265400"
  },
  {
    "text": "verb we are looking at this group with the name system authenticated and the RO",
    "start": "1265400",
    "end": "1270960"
  },
  {
    "text": "ref Associated them shouldn't be one of those three roles that's already there which are trivial roles okay and this",
    "start": "1270960",
    "end": "1278039"
  },
  {
    "text": "how the actual cluster R binding looks from the API perspective okay so that's what KPM solution is looking for so now",
    "start": "1278039",
    "end": "1285039"
  },
  {
    "text": "we know how to solve this problem once the next G ke is conf figuration coming alone we know how to address this",
    "start": "1285039",
    "end": "1293200"
  },
  {
    "text": "okay one second breather we're moving on to data plane okay data plane is like um that",
    "start": "1293200",
    "end": "1302080"
  },
  {
    "text": "business that you run from the garage right like Amazon or Ebay uh where you",
    "start": "1302080",
    "end": "1307400"
  },
  {
    "text": "send packages trucks are moving in TRS trucks are moving out and some packages",
    "start": "1307400",
    "end": "1312760"
  },
  {
    "text": "can slip through and stay in your house perhaps even malicious packages what I'm getting at I'm getting into the data",
    "start": "1312760",
    "end": "1319279"
  },
  {
    "text": "plane access right that you're exposed through the services and if attacker if there's an application RC on your data",
    "start": "1319279",
    "end": "1327480"
  },
  {
    "text": "plane attacker of course can abuse it and find itself in the context of the",
    "start": "1327480",
    "end": "1333279"
  },
  {
    "text": "Pod execution typically associated with some kind of service account in the Nam",
    "start": "1333279",
    "end": "1339120"
  },
  {
    "text": "space on the worker Noe and from there the name of the game is lateral movement",
    "start": "1339120",
    "end": "1345720"
  },
  {
    "text": "okay or privilege escalation depends what they can do with the those Associated",
    "start": "1345720",
    "end": "1352279"
  },
  {
    "text": "privileges so now we're talking about how to confine the uh the attacker right",
    "start": "1352279",
    "end": "1358080"
  },
  {
    "text": "like suddenly we're talking okay how do we protect from application RC well it's it's not really the scope of this talk",
    "start": "1358080",
    "end": "1364799"
  },
  {
    "text": "we're not going to talk about application security but there are ways application logs WF you name it fazin um",
    "start": "1364799",
    "end": "1372720"
  },
  {
    "text": "but in terms of kubernetes kspm for pod isolation can",
    "start": "1372720",
    "end": "1377840"
  },
  {
    "text": "work and protecting from some kind of secondary activities past the RC",
    "start": "1377840",
    "end": "1384799"
  },
  {
    "text": "exploitation okay let's say we don't have RC in our data plane some vendors",
    "start": "1384799",
    "end": "1390640"
  },
  {
    "text": "actually offer execution as a service okay and our vulnerability research team",
    "start": "1390640",
    "end": "1396159"
  },
  {
    "text": "has detected multiple cross tenant vulnerabilities in services like Azure Cosmos DB where they were run in Jupiter",
    "start": "1396159",
    "end": "1403000"
  },
  {
    "text": "notebook so that's juicy service and at this point we're talking",
    "start": "1403000",
    "end": "1408799"
  },
  {
    "text": "about Escape protections and protections against lateral movement and cross",
    "start": "1408799",
    "end": "1415000"
  },
  {
    "text": "tenant uh violations and in this in this context I just want to say about to talk",
    "start": "1415000",
    "end": "1420559"
  },
  {
    "text": "about Peach quickly that we it's the hardening uh framework for the",
    "start": "1420559",
    "end": "1426159"
  },
  {
    "text": "multi-tenant cloud applications and deployments and we recently updated it",
    "start": "1426159",
    "end": "1432000"
  },
  {
    "text": "and extended to the kubernetes as well and there's this namespace Hound which is a cute tool that we released and open",
    "start": "1432000",
    "end": "1438480"
  },
  {
    "text": "sourced couple weeks ago that basically tests your uh of test your multi-tenancy",
    "start": "1438480",
    "end": "1445679"
  },
  {
    "text": "setup and for the red teamers in in the crowd it it's um basically can help you",
    "start": "1445679",
    "end": "1451120"
  },
  {
    "text": "find all kind of lateral movement scenarios inside the cluster once the attacker is inside the",
    "start": "1451120",
    "end": "1456919"
  },
  {
    "text": "cluster okay good now switching Direction a bit not Port okay not Port",
    "start": "1456919",
    "end": "1463159"
  },
  {
    "text": "is just another way to expose your data plane but typically you expose the data plane through the load balancer or I",
    "start": "1463159",
    "end": "1470440"
  },
  {
    "text": "don't know uh gateaway API there is a way to expose it through",
    "start": "1470440",
    "end": "1476159"
  },
  {
    "text": "the not Port as well it's a it's a bit weird typically the sign of some kind of Diagnostics or dbag AIS and so typically",
    "start": "1476159",
    "end": "1484799"
  },
  {
    "text": "you don't want this in your production clusters but what we found that about 6%",
    "start": "1484799",
    "end": "1489840"
  },
  {
    "text": "of clusters do have notep configured and exposed we're just hoping that those are",
    "start": "1489840",
    "end": "1495640"
  },
  {
    "text": "not production but test clusters so now because it shouldn't be there um I would",
    "start": "1495640",
    "end": "1501520"
  },
  {
    "text": "compare it to some kind of basement door under the garage and just let's let's",
    "start": "1501520",
    "end": "1506840"
  },
  {
    "text": "just hope that the attackers won't find it or if they find it then they'll broke the their neck by trying to get there um",
    "start": "1506840",
    "end": "1514240"
  },
  {
    "text": "to detect it so it's like similar to the cubet because to detect it you need local detection which means sensor to",
    "start": "1514240",
    "end": "1521240"
  },
  {
    "text": "protect it though case PM sees the node Port right so case good case PM solution",
    "start": "1521240",
    "end": "1527279"
  },
  {
    "text": "should detect this and of course classic absc protections if the if this uh application is",
    "start": "1527279",
    "end": "1534360"
  },
  {
    "text": "authenticated [Music] okay and of course since we're talking",
    "start": "1534360",
    "end": "1540360"
  },
  {
    "text": "about initial access we have to talk about malicious images so malicious",
    "start": "1540360",
    "end": "1545640"
  },
  {
    "text": "images in your cluster every cluster uses the images of course pod pod is starting Cube that pulls the image okay",
    "start": "1545640",
    "end": "1552399"
  },
  {
    "text": "how do you know if it's malicious or not so having malicious image inside your cluster is like inviting the fake police",
    "start": "1552399",
    "end": "1558960"
  },
  {
    "text": "officer into your house for the Recon for example um you're basically giving them",
    "start": "1558960",
    "end": "1564559"
  },
  {
    "text": "too much um now how this could happen well it",
    "start": "1564559",
    "end": "1569600"
  },
  {
    "text": "could be it could be public registry with some kind of uh maintainer",
    "start": "1569600",
    "end": "1574880"
  },
  {
    "text": "credentials that licked or somebody um owns the account of that maintainer happens we we saw this with",
    "start": "1574880",
    "end": "1582399"
  },
  {
    "text": "npm a lot as well it could be image name confusion think about RIS with double s",
    "start": "1582399",
    "end": "1587880"
  },
  {
    "text": "Rus is super popular image right or it could be image P secret that licked known or unknown that has right",
    "start": "1587880",
    "end": "1596320"
  },
  {
    "text": "permissions and we saw our vulnerability uh team as well saw multiple instances where image post secret had right",
    "start": "1596320",
    "end": "1603640"
  },
  {
    "text": "permissions to the registry in this case attacker can override that image and",
    "start": "1603640",
    "end": "1609000"
  },
  {
    "text": "there you go you have a malicious image now the important Point here is that private clusters are also affected",
    "start": "1609000",
    "end": "1615640"
  },
  {
    "text": "so don't think that you can uh stage the private cluster uh you don't open it to",
    "start": "1615640",
    "end": "1621320"
  },
  {
    "text": "the uh you don't expose it to the internet but it still pulls images right",
    "start": "1621320",
    "end": "1626880"
  },
  {
    "text": "so keep that in mind now in terms of detection how can we detect this scenario well think about",
    "start": "1626880",
    "end": "1633640"
  },
  {
    "text": "what malicious image would do when it starts when it instantiates well it",
    "start": "1633640",
    "end": "1639720"
  },
  {
    "text": "doesn't know where it is which so it probably will first connect to the C2 instance okay so you can detect that",
    "start": "1639720",
    "end": "1646480"
  },
  {
    "text": "connection through sensor on network monitoring tool that's your way to",
    "start": "1646480",
    "end": "1651840"
  },
  {
    "text": "protect of course you can use image Integrity verification but also the registry security is also uh the answer",
    "start": "1651840",
    "end": "1660679"
  },
  {
    "text": "here okay so to sum up we talked about apps execution as a service images and",
    "start": "1660679",
    "end": "1666480"
  },
  {
    "text": "now I want to show you the again the use case we're going to talk about Lecky",
    "start": "1666480",
    "end": "1672440"
  },
  {
    "text": "vessels Lecky vessels is a set of serious pretty serious vulnerabilities",
    "start": "1672440",
    "end": "1677640"
  },
  {
    "text": "that will disc covered back I think at the end of January by snake researchers um that allow attacker build",
    "start": "1677640",
    "end": "1686600"
  },
  {
    "text": "time and container container sorry Start runtime escape from the container to the",
    "start": "1686600",
    "end": "1693559"
  },
  {
    "text": "host and that's what we're going to use in our attack chain okay in our",
    "start": "1693559",
    "end": "1699519"
  },
  {
    "text": "demo perfect okay so on the bottom right side I'm I'm starting my C2 server nc-",
    "start": "1703159",
    "end": "1710159"
  },
  {
    "text": "nvp everybody knows it okay great at the top I'm pretending to be cluster",
    "start": "1710159",
    "end": "1717360"
  },
  {
    "text": "operator all the cluster operator does it runs some kind of image innocently named it's named C CV 2024 21626 just",
    "start": "1717360",
    "end": "1726159"
  },
  {
    "text": "regular image which I built of course that's our malicious image so at the",
    "start": "1726159",
    "end": "1731240"
  },
  {
    "text": "bottom left you see that's how this uh the docker file looks like all it does",
    "start": "1731240",
    "end": "1736799"
  },
  {
    "text": "is runs one command upon start it curls it sends the ity shadow to my C2 image",
    "start": "1736799",
    "end": "1745440"
  },
  {
    "text": "so ity shadow of course is a sensitive file but the kick here is that this it Shadow is not from the Pod this it a",
    "start": "1745440",
    "end": "1751559"
  },
  {
    "text": "shadow from the node file system you see that path traversal dot dot dot dot dot",
    "start": "1751559",
    "end": "1757480"
  },
  {
    "text": "that means that from inside the container the container will go up to the node file system and send it it's a",
    "start": "1757480",
    "end": "1765279"
  },
  {
    "text": "shadow to my C2 in so pretty cool if you ask me okay where",
    "start": "1765279",
    "end": "1772880"
  },
  {
    "text": "can we place it in data plane of well of course we're talking about image poison and image name confusion so it's going",
    "start": "1772880",
    "end": "1778360"
  },
  {
    "text": "to be there and what's the primary protection about from this image Integrity",
    "start": "1778360",
    "end": "1785320"
  },
  {
    "text": "verification okay now very quickly other angles of course you rarely run run your",
    "start": "1785320",
    "end": "1793760"
  },
  {
    "text": "clusters alone right you probably have multiple clusters maybe thousand",
    "start": "1793760",
    "end": "1799799"
  },
  {
    "text": "but you don't run them in isolation you have some kind of continuous delivery solution that stage them you have some",
    "start": "1799799",
    "end": "1807399"
  },
  {
    "text": "kind of users and Cloud RWS that interact with those",
    "start": "1807399",
    "end": "1812480"
  },
  {
    "text": "clusters so you don't run the Clusters in isolation and those two vectors can",
    "start": "1812480",
    "end": "1817880"
  },
  {
    "text": "also be initial access vectors so now I don't want to discourage you from like it's not like everything that we we had",
    "start": "1817880",
    "end": "1825640"
  },
  {
    "text": "here is is legit initial access but keep an eye that uh those uh those axis those",
    "start": "1825640",
    "end": "1832080"
  },
  {
    "text": "vectors can also be abused by the attackers from the cloud to the cont to",
    "start": "1832080",
    "end": "1837200"
  },
  {
    "text": "the containers and from the cicd to your kubernetes so keep keep that in mind",
    "start": "1837200",
    "end": "1843279"
  },
  {
    "text": "okay so to the to wrap it up this is probably the most important slide that I want you to take from this lecture we",
    "start": "1843279",
    "end": "1850519"
  },
  {
    "text": "talked about control plane we talked about data plane and we highlighted the most important risks for every initial",
    "start": "1850519",
    "end": "1856960"
  },
  {
    "text": "axis vector we also touched a bit on cloud access and cicd okay so I hope that will help you",
    "start": "1856960",
    "end": "1863440"
  },
  {
    "text": "to make sense in various initial access vectors to for the kubernetes cluster um",
    "start": "1863440",
    "end": "1869120"
  },
  {
    "text": "these are some of the links that I talked about thank you so much if you have questions I'm here thanks a",
    "start": "1869120",
    "end": "1876080"
  },
  {
    "text": "lot",
    "start": "1876080",
    "end": "1879080"
  }
]