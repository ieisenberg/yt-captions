[
  {
    "text": "thank you all for attending this late afternoon session before the end of the day in the booth crawl my name is",
    "start": "60",
    "end": "6839"
  },
  {
    "text": "Raymond Dion I'm very happy to present here about adopting Network policies in highly secure environments the agenda",
    "start": "6839",
    "end": "14160"
  },
  {
    "text": "today is this is not a network policy 101 this is more like a talk how we see",
    "start": "14160",
    "end": "20160"
  },
  {
    "text": "our customers dealing with adopting Network policies in the in the fields and how you can use for example cilium",
    "start": "20160",
    "end": "26760"
  },
  {
    "text": "evpf and Hubble our Hubble UI and harbor CLI to basically observe traffic and",
    "start": "26760",
    "end": "33120"
  },
  {
    "text": "adopt Network policies in your classes effectively without blocking your applications",
    "start": "33120",
    "end": "38700"
  },
  {
    "text": "so I'll start with some strategies tips and tricks and approaches to adult network policies and then talk about",
    "start": "38700",
    "end": "45840"
  },
  {
    "text": "psyllium features that matter for using that and looking at observability as a",
    "start": "45840",
    "end": "51120"
  },
  {
    "text": "superpower to make sure that you're able to enforce security and observe flows to",
    "start": "51120",
    "end": "56520"
  },
  {
    "text": "ensure your compliance I've prepared a little demo so I hope the demo gods are with me so I can show a little example",
    "start": "56520",
    "end": "63180"
  },
  {
    "text": "how you can use your Hubble for example to secure your workloads",
    "start": "63180",
    "end": "69439"
  },
  {
    "text": "my name is Raymond young I'm field CTO for emea at isofeland that means that we",
    "start": "69659",
    "end": "75479"
  },
  {
    "text": "also work with a lot of customers both open source and our Enterprise release who are adopting psyllium and eppf in",
    "start": "75479",
    "end": "83280"
  },
  {
    "text": "their environments to secure those environments as well can I see hence how many of you know about psyllium",
    "start": "83280",
    "end": "89700"
  },
  {
    "text": "all quite about quite a lot okay so how many of you know ebpf",
    "start": "89700",
    "end": "95939"
  },
  {
    "text": "and how many of you are already applying Network policies in their environments okay a little less hence okay great",
    "start": "96479",
    "end": "103979"
  },
  {
    "text": "so that's the whole purpose of today uh to give you that tips um so isofilence is the company behind",
    "start": "103979",
    "end": "110399"
  },
  {
    "text": "sidium and ebpf we created psyllium we open source psyllium and we're still contributing to the celium open source",
    "start": "110399",
    "end": "116700"
  },
  {
    "text": "release and we also maintain ebpf I will talk about Cinema ebpf a bit later",
    "start": "116700",
    "end": "122340"
  },
  {
    "text": "so let's start with having a bit of a talk about strategies for Designing Network policies",
    "start": "122340",
    "end": "128039"
  },
  {
    "text": "what we see is that a lot of companies struggle with adopting Network policies you want to avoid allowing everything a",
    "start": "128039",
    "end": "136920"
  },
  {
    "text": "lot of companies want to have a zero trust based approach but in the meantime you also do not want to block your",
    "start": "136920",
    "end": "143700"
  },
  {
    "text": "application teams and you may want to make the onboarding of your application as easy as possible but you also want to",
    "start": "143700",
    "end": "150840"
  },
  {
    "text": "prevent application teams themselves to allow all traffic for their namespaces",
    "start": "150840",
    "end": "157620"
  },
  {
    "text": "are going in and going out so you need to have some constraints there put in in",
    "start": "157620",
    "end": "162840"
  },
  {
    "text": "your system to avoid structure feeding and you also want to a lot of our companies also need to have compliancy",
    "start": "162840",
    "end": "169080"
  },
  {
    "text": "they want to ensure and that other flows are being enforced as such",
    "start": "169080",
    "end": "175560"
  },
  {
    "text": "so a default deny approach in practice is really hard to start with from the",
    "start": "175560",
    "end": "180840"
  },
  {
    "text": "start so there is no easy route for adopting Network policies unfortunately if you start with a zero trust you most",
    "start": "180840",
    "end": "187560"
  },
  {
    "text": "likely will run into issues with onboarding your applications and that will result in having adoption problems",
    "start": "187560",
    "end": "195120"
  },
  {
    "text": "of your applications or friction which your application teams wanting to use your kubernetes platform",
    "start": "195120",
    "end": "200340"
  },
  {
    "text": "so a better approach we try to use here is to focus on risk reduction reduction",
    "start": "200340",
    "end": "206879"
  },
  {
    "text": "so that means that you need to Define metrics for risk you need to understand what's important for your environment",
    "start": "206879",
    "end": "213239"
  },
  {
    "text": "what kind of metrics you need to Monitor and to apply your policies on and to",
    "start": "213239",
    "end": "218940"
  },
  {
    "text": "also move to fine-grained security policies and focus on most sensitive namespaces",
    "start": "218940",
    "end": "225180"
  },
  {
    "text": "and leverage Network observability Tools to move to more fine-grained serial",
    "start": "225180",
    "end": "230879"
  },
  {
    "text": "Network policies and once the tooling and your policies flows are proven you",
    "start": "230879",
    "end": "236040"
  },
  {
    "text": "can repeat this across multiple namespaces and multiple platforms",
    "start": "236040",
    "end": "241200"
  },
  {
    "text": "so typically obviously application teams or multi-tenants platforms have one or",
    "start": "241200",
    "end": "246780"
  },
  {
    "text": "multiple name spaces in a cluster or across clusters and have deployments which you need to secure so it makes",
    "start": "246780",
    "end": "253500"
  },
  {
    "text": "sense to have a focus on the namespace level",
    "start": "253500",
    "end": "258259"
  },
  {
    "text": "when we talk about Network policies and securing those workloads it's good to",
    "start": "258660",
    "end": "263699"
  },
  {
    "text": "understand the four types of risk exposure first of all very obvious if",
    "start": "263699",
    "end": "269280"
  },
  {
    "text": "you expose a service to the internet that's a potential risk right so you would like to secure and monitor that",
    "start": "269280",
    "end": "275940"
  },
  {
    "text": "flows additionally if you expose a service in a cluster that can also be a",
    "start": "275940",
    "end": "281040"
  },
  {
    "text": "risk for for exploiting that service from external network resources",
    "start": "281040",
    "end": "286560"
  },
  {
    "text": "in a given cluster by default everything is allowed so that means that you have obviously wide blast radius you want to",
    "start": "286560",
    "end": "292560"
  },
  {
    "text": "reduce I also want to avoid data exfiltration for egress connectivity",
    "start": "292560",
    "end": "298860"
  },
  {
    "text": "so the goal is to reduce unused access for L for for for for for any access",
    "start": "298860",
    "end": "305340"
  },
  {
    "text": "that creates exposure without actually being required so that's also where the metrics are important",
    "start": "305340",
    "end": "311580"
  },
  {
    "text": "so we want to reduce the risk by reducing the y-blast radius again your",
    "start": "311580",
    "end": "317340"
  },
  {
    "text": "kubernetes API may be exposed your namespaces are open by default any port can reach any port so any case when a",
    "start": "317340",
    "end": "324419"
  },
  {
    "text": "when a workload is exploited that could lead to a huge risk for a right right blast radius so our focus is to to",
    "start": "324419",
    "end": "332340"
  },
  {
    "text": "reduce that blast radius and isolate to start with from a namespace level",
    "start": "332340",
    "end": "339320"
  },
  {
    "text": "also with strong observability you can match or miss or see and observe any",
    "start": "339780",
    "end": "345960"
  },
  {
    "text": "mismatches with your current applied policies and what you want to minimize on that so",
    "start": "345960",
    "end": "351840"
  },
  {
    "text": "if you see a lot of drops that can either be a risk in terms of an attack but can also be that something needs",
    "start": "351840",
    "end": "358320"
  },
  {
    "text": "obviously some kind of access and there are some examples right Cube DNS is a good example you need access to",
    "start": "358320",
    "end": "365100"
  },
  {
    "text": "qpdns every namespace workloads needs access to qbdns but a front surface",
    "start": "365100",
    "end": "370699"
  },
  {
    "text": "exposed through a load balancer is the only one needs to be exposed for on a",
    "start": "370699",
    "end": "376380"
  },
  {
    "text": "port 443 for example but the actual service behind it for example Reddit Server doesn't necessarily need that so",
    "start": "376380",
    "end": "383039"
  },
  {
    "text": "avoiding that is a good best practice and then you can also prioritize on",
    "start": "383039",
    "end": "389400"
  },
  {
    "text": "number of servers you expose through either Ingress or Gateway API because most likely those are Services which are",
    "start": "389400",
    "end": "396180"
  },
  {
    "text": "export Exposed on your network or even on the internet and then also focus on",
    "start": "396180",
    "end": "401580"
  },
  {
    "text": "Services which are reachable within your cluster across namespaces and number of services with access to external",
    "start": "401580",
    "end": "409080"
  },
  {
    "text": "resources such as egress now there's also a risk if you do this",
    "start": "409080",
    "end": "414479"
  },
  {
    "text": "approach of overfitting what we mean by that is that if you have a strong observability tool you can potentially",
    "start": "414479",
    "end": "420660"
  },
  {
    "text": "do a one-to-one translation for each flow to create a network policy but well",
    "start": "420660",
    "end": "426240"
  },
  {
    "text": "the result will be will be a very pretty brittle Network policy design because",
    "start": "426240",
    "end": "431819"
  },
  {
    "text": "when there is a little change in application or new version of an application that immediately means that",
    "start": "431819",
    "end": "438240"
  },
  {
    "text": "a small Network policy somewhere needs to be updated or created and at scale",
    "start": "438240",
    "end": "443759"
  },
  {
    "text": "this will not be feasible so",
    "start": "443759",
    "end": "449639"
  },
  {
    "text": "our approach here is to start with an initial namespace policy and use Global",
    "start": "449639",
    "end": "456599"
  },
  {
    "text": "policies across your platform or even across clusters using cluster-wide network policies to define the card",
    "start": "456599",
    "end": "462539"
  },
  {
    "text": "rails so you can use for example cluster-wide Network policies to secure for each given workload access to cube",
    "start": "462539",
    "end": "469680"
  },
  {
    "text": "DNS to allow to that service to be reached also for example Prometheus that",
    "start": "469680",
    "end": "475500"
  },
  {
    "text": "needs access to monitor your services but on its namespace you can only allow",
    "start": "475500",
    "end": "480960"
  },
  {
    "text": "traffic within a given namespace and then use your observability tools to create flows create rules sorry for",
    "start": "480960",
    "end": "489599"
  },
  {
    "text": "specific egress or Ingress connectivity so when you use Hubble and psyllium you",
    "start": "489599",
    "end": "495419"
  },
  {
    "text": "can start with a default namespace policies where you can observe traffic and I will show that a bit in the demo",
    "start": "495419",
    "end": "500940"
  },
  {
    "text": "to inspect what is being reached out to egress and or Ingress and secure that",
    "start": "500940",
    "end": "507479"
  },
  {
    "text": "access then you are going to transition from this per namespace security with global",
    "start": "507479",
    "end": "515099"
  },
  {
    "text": "policies as guardrails to more fine-grained policies obviously focus on the most sensitive",
    "start": "515099",
    "end": "522060"
  },
  {
    "text": "namespaces first and focus on the metrics you've put in for example using",
    "start": "522060",
    "end": "527160"
  },
  {
    "text": "grafana metrics to see where you have the most exposure which surfaces get hit",
    "start": "527160",
    "end": "532440"
  },
  {
    "text": "the most where is the most traffic flowing to those specific namespaces",
    "start": "532440",
    "end": "537660"
  },
  {
    "text": "for egress connectivity maybe you want to narrow down specific fqdns or",
    "start": "537660",
    "end": "542820"
  },
  {
    "text": "specific ciders to allow access on a specific port and for Ingress you want",
    "start": "542820",
    "end": "548339"
  },
  {
    "text": "to expose connectivity for load balancer and only allow for example the Ingress to reach a given workload in your",
    "start": "548339",
    "end": "554760"
  },
  {
    "text": "namespace and then you will be able to move with global baselines again which is already",
    "start": "554760",
    "end": "561420"
  },
  {
    "text": "set which which set the global baselines for your cluster but additional Network policies per namespace for specific",
    "start": "561420",
    "end": "568140"
  },
  {
    "text": "connectivity so in this example specific fqdns with specific ports only to be",
    "start": "568140",
    "end": "574620"
  },
  {
    "text": "allowed access egress from that given namespace",
    "start": "574620",
    "end": "579680"
  },
  {
    "text": "then use for example cicd pipelines tools like Argo flux your githubs",
    "start": "579720",
    "end": "586339"
  },
  {
    "text": "pipelines at such to manage all those those Network policies at scale you as a",
    "start": "586339",
    "end": "593700"
  },
  {
    "text": "platform team you cannot maintain all the network policies so you want to delegate the creation of network",
    "start": "593700",
    "end": "600240"
  },
  {
    "text": "policies to your application teams or your tenants however you would like to guard rails access to for example Cube",
    "start": "600240",
    "end": "609060"
  },
  {
    "text": "Cube API kubernetes API but you also want to create cluster-wide network policies which prevent any unwanted",
    "start": "609060",
    "end": "617160"
  },
  {
    "text": "wanted access so you can prevent for example any outbound connectivity on Port 22 however obviously not on 443",
    "start": "617160",
    "end": "624839"
  },
  {
    "text": "because most likely some egress servers need that access however if you can use",
    "start": "624839",
    "end": "630060"
  },
  {
    "text": "tools and Automation and checks to automatically drop such PR which a given",
    "start": "630060",
    "end": "636480"
  },
  {
    "text": "tenant May submit to access such a destination and only allow specific",
    "start": "636480",
    "end": "644100"
  },
  {
    "text": "fqdns or specific IPS automatically so what we see in practice as well is",
    "start": "644100",
    "end": "649920"
  },
  {
    "text": "that obviously there's also also this approval flow for given teams to approve",
    "start": "649920",
    "end": "655260"
  },
  {
    "text": "a given policy and we also see a lot of automation which automatically checked for example cider blocks which are",
    "start": "655260",
    "end": "662579"
  },
  {
    "text": "definitely not approved to be allowed to access using a policy think also about",
    "start": "662579",
    "end": "668459"
  },
  {
    "text": "resources in the cloud you want to protect from a given kubernetes policy",
    "start": "668459",
    "end": "674480"
  },
  {
    "text": "so now I'm shifting to the part where I think celium is great to help achieving",
    "start": "674640",
    "end": "680399"
  },
  {
    "text": "those goals using features which are specific with psyllium and ebpf so for",
    "start": "680399",
    "end": "685860"
  },
  {
    "text": "those who don't know what evpf is we we like to say what JavaScript is to your browser appf is to the kernel that means",
    "start": "685860",
    "end": "692640"
  },
  {
    "text": "that we make the kernel programmable in a very Dynamic way in a secure way without changing the kernel and this",
    "start": "692640",
    "end": "699240"
  },
  {
    "text": "allows us to unlock a lot of features in terms of networking security and observability of which we talk about",
    "start": "699240",
    "end": "705540"
  },
  {
    "text": "today so think about when a bot or process sends a packet wants to open a",
    "start": "705540",
    "end": "711600"
  },
  {
    "text": "port we can these are currently fans we can inspect we can secure based on the",
    "start": "711600",
    "end": "717180"
  },
  {
    "text": "network policies we set psyllium is built on ebpf and you don't",
    "start": "717180",
    "end": "722880"
  },
  {
    "text": "have to be an ebpf expert to operate cilium celium abstracts this technology for you so based on the settings you",
    "start": "722880",
    "end": "729720"
  },
  {
    "text": "enable or disable celium will be configured to do the awesomeness ebpf",
    "start": "729720",
    "end": "735420"
  },
  {
    "text": "brings and those are obviously in the space of networking observability and security and what we're focusing on",
    "start": "735420",
    "end": "741420"
  },
  {
    "text": "today is the network policies the encryption part obviously is a huge important feature for Enterprises but",
    "start": "741420",
    "end": "747779"
  },
  {
    "text": "also note for example egress Gateway which allows you to configure egress connectivity out of your cluster on",
    "start": "747779",
    "end": "754200"
  },
  {
    "text": "specific IPS for Ingress obviously we use also surface mesh and this is not the topic",
    "start": "754200",
    "end": "759480"
  },
  {
    "text": "for today but that allows you to do for example path based routing mtls TLS",
    "start": "759480",
    "end": "766079"
  },
  {
    "text": "decryption for example Gateway API support as well",
    "start": "766079",
    "end": "771800"
  },
  {
    "text": "if we talk about Security in psyllium it's important to know that it's based on identity-based security that means",
    "start": "772200",
    "end": "779459"
  },
  {
    "text": "we're not tracking IPS instead we assign a unique identity to a given workload",
    "start": "779459",
    "end": "785459"
  },
  {
    "text": "and that's based on the metadata you provide to this workload so let's say we have a front-end service and a back-end",
    "start": "785459",
    "end": "791459"
  },
  {
    "text": "service they have metadata associated with those services that unique set of",
    "start": "791459",
    "end": "796620"
  },
  {
    "text": "labels will result in a unique identity and we use ebpf to attach that identity",
    "start": "796620",
    "end": "802260"
  },
  {
    "text": "to the data plane and we use that identity to secure and observe traffic from and to this given surface and an",
    "start": "802260",
    "end": "810120"
  },
  {
    "text": "identity is a cluster right property so each node nodes about this identity and",
    "start": "810120",
    "end": "816480"
  },
  {
    "text": "can provide the metrics visibility security you need additionally silium provides layer 7",
    "start": "816480",
    "end": "823980"
  },
  {
    "text": "security so beyond the layer 3 layer 4 security we also support layer 7",
    "start": "823980",
    "end": "831260"
  },
  {
    "text": "API aware security meaning that we can inspect and observe and secure specific",
    "start": "831260",
    "end": "838320"
  },
  {
    "text": "API calls for example a specific method on a specific URL and this goes beyond",
    "start": "838320",
    "end": "844320"
  },
  {
    "text": "HTTP because we also support grpc Kafka Cassandra and other protocols for for",
    "start": "844320",
    "end": "851399"
  },
  {
    "text": "that inspection and security how that works is using senior Network policy so this is a psyllium Cod where",
    "start": "851399",
    "end": "858540"
  },
  {
    "text": "you specify for example where to match this rule to and what labels it should",
    "start": "858540",
    "end": "864320"
  },
  {
    "text": "allow from so from from endpoints and then on a specific board you can add",
    "start": "864320",
    "end": "870540"
  },
  {
    "text": "additional rules in this example HTTP rules to only allow a get method in this",
    "start": "870540",
    "end": "875700"
  },
  {
    "text": "case on the public URI or URL for egress connectivity we also support",
    "start": "875700",
    "end": "882240"
  },
  {
    "text": "DNS aware Stadium Network policies this is super useful for cloud resources and",
    "start": "882240",
    "end": "887699"
  },
  {
    "text": "you want to secure access to for those Services because they change",
    "start": "887699",
    "end": "894180"
  },
  {
    "text": "IP a lot so if you look at S3 buckets for example if you have media content",
    "start": "894180",
    "end": "899880"
  },
  {
    "text": "there stored and your workloads need to reach out to those the underlying IPS will change a lot so you wouldn't like",
    "start": "899880",
    "end": "907740"
  },
  {
    "text": "to allow the whole cider block for those services but instead specifically allow an fqdn for that given servers to be",
    "start": "907740",
    "end": "915600"
  },
  {
    "text": "allowed egress connectivity too I also mentioned the cluster-wide",
    "start": "915600",
    "end": "922800"
  },
  {
    "text": "network policies and this is such an example this will be applicable for every workload on your cluster so in",
    "start": "922800",
    "end": "929339"
  },
  {
    "text": "this case is an example where we want to allow access to cube DNS and allow Cube",
    "start": "929339",
    "end": "934440"
  },
  {
    "text": "DNS itself as well to use to do DNS requests itself so in this case we have",
    "start": "934440",
    "end": "941279"
  },
  {
    "text": "also used The Entity World which means any we allow Cube DNS on Port 53",
    "start": "941279",
    "end": "947639"
  },
  {
    "text": "but we also allow for example Prometheus access for All namespaces in This",
    "start": "947639",
    "end": "952800"
  },
  {
    "text": "cluster and on a given port in this case this is also how you can secure for",
    "start": "952800",
    "end": "958860"
  },
  {
    "text": "example on a per namespace allowedly so if you want to template the",
    "start": "958860",
    "end": "964800"
  },
  {
    "text": "default allow for traffic within a namespace you can also leverage cluster-wide Network policies",
    "start": "964800",
    "end": "971639"
  },
  {
    "text": "if you have a multi-cluster use case you can create network policies which spans across multiple clusters so using",
    "start": "971639",
    "end": "978600"
  },
  {
    "text": "synonym cluster mesh you connect multiple clusters independent of their clouds if you run on-prem on openshift",
    "start": "978600",
    "end": "985260"
  },
  {
    "text": "or on Azure or or on gke or both this shoe creates a unified cilium data plane",
    "start": "985260",
    "end": "992160"
  },
  {
    "text": "and that means that you can create psyllium cluster Network policies or celium network policies across cluster",
    "start": "992160",
    "end": "998100"
  },
  {
    "text": "which are cluster aware so we understand the identity of each cluster and each",
    "start": "998100",
    "end": "1004639"
  },
  {
    "text": "cluster has read-only access learning those identities from another cluster and we can use again those identities to",
    "start": "1004639",
    "end": "1011839"
  },
  {
    "text": "secure and observe traffic across clusters so what it means in this example and I",
    "start": "1011839",
    "end": "1018139"
  },
  {
    "text": "hope you can read it the front end tries to reach out to a back end which is in this case deployed High available across",
    "start": "1018139",
    "end": "1024798"
  },
  {
    "text": "clusters and using ebpf and this identity we are able",
    "start": "1024799",
    "end": "1029959"
  },
  {
    "text": "to secure and observe that traffic across clusters that's done through senior Network",
    "start": "1029959",
    "end": "1035959"
  },
  {
    "text": "policy so in this example you can specifically allow access from a specific cluster to another cluster and",
    "start": "1035959",
    "end": "1042918"
  },
  {
    "text": "deny and drop traffic from another cluster as well so you can mix and match local cluster Network policies with",
    "start": "1042919",
    "end": "1048740"
  },
  {
    "text": "policies across clusters and this is based on the cluster label the cluster name which is a unique identity in",
    "start": "1048740",
    "end": "1055460"
  },
  {
    "text": "psyllium and this is a simple example of such a network policy in this case we have a",
    "start": "1055460",
    "end": "1062539"
  },
  {
    "text": "rebel based workloads where we want to apply this policy to and we allow Ingress from the X-Wing workload from",
    "start": "1062539",
    "end": "1069980"
  },
  {
    "text": "cluster one on a specific board so only from cluster one that specific workload",
    "start": "1069980",
    "end": "1075380"
  },
  {
    "text": "is allowed now now in having network policies and",
    "start": "1075380",
    "end": "1081559"
  },
  {
    "text": "adopting Network policies is extremely difficult without right observability and therefore we have introduced",
    "start": "1081559",
    "end": "1087919"
  },
  {
    "text": "obviously Hubble which provides flow and visibility of your workloads across",
    "start": "1087919",
    "end": "1094340"
  },
  {
    "text": "clusters um and this also enables you to do data operations on senior Network policies",
    "start": "1094340",
    "end": "1100220"
  },
  {
    "text": "obviously applications change and providing horrible access to your teams allows them to learn what has changed",
    "start": "1100220",
    "end": "1107780"
  },
  {
    "text": "and What flows they need to allow using network policies for the application to work",
    "start": "1107780",
    "end": "1114860"
  },
  {
    "text": "how about it consists of three main components the Hubble UI provides a namespace view of all the connections",
    "start": "1114860",
    "end": "1122179"
  },
  {
    "text": "within a given namespace it gives a view for namespace to namespace connectivity",
    "start": "1122179",
    "end": "1127640"
  },
  {
    "text": "and also workloads in a given namespace if they access egress resources we can",
    "start": "1127640",
    "end": "1133340"
  },
  {
    "text": "see that if you enable DNS aware policies we can also see the DNS requests which I will show a bit later",
    "start": "1133340",
    "end": "1139160"
  },
  {
    "text": "and we can also see Ingress connectivity so traffic coming through for example an",
    "start": "1139160",
    "end": "1144500"
  },
  {
    "text": "outside resource through a surface through an Ingress resource in your namespace",
    "start": "1144500",
    "end": "1149539"
  },
  {
    "text": "CLI is is a more powerful tool for advanced filtering Advanced troubleshooting you can also output to",
    "start": "1149539",
    "end": "1156919"
  },
  {
    "text": "Json which you then import in for example another tool or to be able to export flows to other scene platforms",
    "start": "1156919",
    "end": "1164000"
  },
  {
    "text": "and Hubble metrics is everything about exporting these metrics this flow data layer 7 data to grafana for example",
    "start": "1164000",
    "end": "1171620"
  },
  {
    "text": "using Prometheus so you can create this metrics I mentioned before in grafana dashboards for you to use",
    "start": "1171620",
    "end": "1179840"
  },
  {
    "text": "this is a quick strange screenshot I will not stay and spend too long here because I have a demo with this as well",
    "start": "1179840",
    "end": "1185539"
  },
  {
    "text": "but as you can see it provides in this case a book info view so I've deployed",
    "start": "1185539",
    "end": "1191600"
  },
  {
    "text": "the big book info istio demo application and I can see service to surface",
    "start": "1191600",
    "end": "1196700"
  },
  {
    "text": "communication and this application is accessible in this example from the",
    "start": "1196700",
    "end": "1201860"
  },
  {
    "text": "internet so I can see Ingress connectivity through our psyllium Ingress into the namespace and I can see",
    "start": "1201860",
    "end": "1209299"
  },
  {
    "text": "the service to service communication the ports being used if it's dropped or allowed and which protocol is being used",
    "start": "1209299",
    "end": "1218380"
  },
  {
    "text": "a great tool for helping you creating Network policies is a network policy",
    "start": "1218799",
    "end": "1224059"
  },
  {
    "text": "editor which is reachable through editor.cillium.io this gives you a view on a namespace",
    "start": "1224059",
    "end": "1230179"
  },
  {
    "text": "level for both Ingress and egress connections and this is a visceral tool",
    "start": "1230179",
    "end": "1235460"
  },
  {
    "text": "to create network policies without understanding how to actually write the yaml from start and you can write both",
    "start": "1235460",
    "end": "1241820"
  },
  {
    "text": "kubernetes Network policies as well as psyllium Network policies and using the UI you can allow or deny specific flows",
    "start": "1241820",
    "end": "1248960"
  },
  {
    "text": "which automatically creates this yaml you can download and apply on your cluster",
    "start": "1248960",
    "end": "1254660"
  },
  {
    "text": "and recently we also released grafana dashboards so you can use access to",
    "start": "1254660",
    "end": "1260179"
  },
  {
    "text": "grafana Marketplace where you can find the policy verdict metrics and this is a",
    "start": "1260179",
    "end": "1265340"
  },
  {
    "text": "great tool to monitor how many matches you have on flows in a given namespace or across a cluster and this allows you",
    "start": "1265340",
    "end": "1272360"
  },
  {
    "text": "to verify if you have created enough Network policies to match all the flows and that you're fully",
    "start": "1272360",
    "end": "1278480"
  },
  {
    "text": "secure and also if you have drops you can obviously monitor that and I will show that in a demo as well",
    "start": "1278480",
    "end": "1284900"
  },
  {
    "text": "okay that boost moves me to that that introduces the the demo so let me set up",
    "start": "1284900",
    "end": "1291500"
  },
  {
    "text": "I hope you can see in the back can you can show hands if you can see the command line properly great thank you",
    "start": "1291500",
    "end": "1298580"
  },
  {
    "text": "so in this demo I've deployed Hubble UI",
    "start": "1298580",
    "end": "1303740"
  },
  {
    "text": "so I've deployed the same simple application for showing what what how",
    "start": "1303740",
    "end": "1309260"
  },
  {
    "text": "you can transition from coarse grain to fine-grained policies and I also installed grafana in my cluster and this",
    "start": "1309260",
    "end": "1316400"
  },
  {
    "text": "runs on gke and this is currently showing metrics for all namespaces and I",
    "start": "1316400",
    "end": "1321980"
  },
  {
    "text": "want to focus for this demo on the my app namespace and as you can see I only",
    "start": "1321980",
    "end": "1327140"
  },
  {
    "text": "have matches on all so that means that I have no um for this given namespace I have no",
    "start": "1327140",
    "end": "1333320"
  },
  {
    "text": "match of a specific Network policy allowing layer 3 layer 4 or layer 7 network connectivity and that's the goal",
    "start": "1333320",
    "end": "1340820"
  },
  {
    "text": "for today to make sure we have matches across all flows",
    "start": "1340820",
    "end": "1346520"
  },
  {
    "text": "we're also able to monitor Ingress and Below we can see what kind of a surfaces",
    "start": "1346520",
    "end": "1352039"
  },
  {
    "text": "there are running and what kind of destinations and sources are being used",
    "start": "1352039",
    "end": "1357260"
  },
  {
    "text": "so let me move to Hubble",
    "start": "1357260",
    "end": "1362720"
  },
  {
    "text": "so this isn't a simple example we have a client server connection the client is talking to the server you can see we",
    "start": "1362720",
    "end": "1369500"
  },
  {
    "text": "have live flows appearing we can see that it shows connectivity to the",
    "start": "1369500",
    "end": "1375500"
  },
  {
    "text": "outside world to outside the namespace and in this case we can see watching the flows it's actually accessing public IP",
    "start": "1375500",
    "end": "1382520"
  },
  {
    "text": "addresses we can see that the client is talking to the server on Port 80. currently the flows are obviously",
    "start": "1382520",
    "end": "1389600"
  },
  {
    "text": "allowed with this given namespace and the goal is that we want to secure this",
    "start": "1389600",
    "end": "1394700"
  },
  {
    "text": "connections between the within the namespace and egress to destinations on",
    "start": "1394700",
    "end": "1400039"
  },
  {
    "text": "worlds so what I do first is I'm going to",
    "start": "1400039",
    "end": "1405679"
  },
  {
    "text": "apply apply a celium network policy on this network on this namespace",
    "start": "1405679",
    "end": "1412159"
  },
  {
    "text": "and the only thing I want to do is allow access to cube DNS and the goal here is",
    "start": "1412159",
    "end": "1417799"
  },
  {
    "text": "that I want to learn what fqdns this workload is reaching out to on the",
    "start": "1417799",
    "end": "1422960"
  },
  {
    "text": "internet so this is how it looks like this is a example you can find on our documentation as well",
    "start": "1422960",
    "end": "1430159"
  },
  {
    "text": "um let me quickly apply this file",
    "start": "1430159",
    "end": "1435220"
  },
  {
    "text": "so I'm doing Cube CDL apply foul DNS yemo",
    "start": "1437299",
    "end": "1443659"
  },
  {
    "text": "so now this policy is created and Hubble shoot already yeah so it's",
    "start": "1443659",
    "end": "1448700"
  },
  {
    "text": "really quick this is live flows shows live actually the fqdns it's trying to",
    "start": "1448700",
    "end": "1454400"
  },
  {
    "text": "reach out so now using Hubble UI and using this simple DNS policy I learned",
    "start": "1454400",
    "end": "1460100"
  },
  {
    "text": "that it's reaching out to celine.io and isovan.com and in this case that's fine",
    "start": "1460100",
    "end": "1465919"
  },
  {
    "text": "and I can use this information to create a fine-grained psyllium Network policy",
    "start": "1465919",
    "end": "1470960"
  },
  {
    "text": "in my next steps to allow that specific connections to those destinations and",
    "start": "1470960",
    "end": "1476539"
  },
  {
    "text": "the next thing I want to focus on is on the client to server connectivity within my namespace",
    "start": "1476539",
    "end": "1482659"
  },
  {
    "text": "on the grafana side I can see that let me zoom in a bit on the five minutes I",
    "start": "1482659",
    "end": "1488659"
  },
  {
    "text": "can see already applying applying this network policy that I have flows matching because I'm",
    "start": "1488659",
    "end": "1495500"
  },
  {
    "text": "intercepting this DNS queries from this given namespace and we can see the",
    "start": "1495500",
    "end": "1501380"
  },
  {
    "text": "purple bands created being created for showing that kind of flows egress",
    "start": "1501380",
    "end": "1507620"
  },
  {
    "text": "and those domains are also visible in my dashboards and I have metrics how many",
    "start": "1507620",
    "end": "1513799"
  },
  {
    "text": "flows are being identified so let me now focus on the server",
    "start": "1513799",
    "end": "1519860"
  },
  {
    "text": "components um yet another prepared another Network policy so in this case",
    "start": "1519860",
    "end": "1528919"
  },
  {
    "text": "I want to allow only the client endpoint to reach to to be able to connect to the",
    "start": "1528919",
    "end": "1534620"
  },
  {
    "text": "server on Port 80. so I've prepared this policy and for sake of time and given",
    "start": "1534620",
    "end": "1541460"
  },
  {
    "text": "this is uh Port 80 let us assume that we're also want to allow HTTP so this is",
    "start": "1541460",
    "end": "1548779"
  },
  {
    "text": "a layer 7 senior Network policy and I want to inspect this HTTP traffic and allow this HTTP",
    "start": "1548779",
    "end": "1555860"
  },
  {
    "text": "traffic so save this and do Cube CTL apply",
    "start": "1555860",
    "end": "1563059"
  },
  {
    "text": "server all right",
    "start": "1563059",
    "end": "1568240"
  },
  {
    "text": "now in Hubble yeah we already see that on the surface side if I zoom in",
    "start": "1568520",
    "end": "1575059"
  },
  {
    "text": "I can see that I also now get HTTP context I've applied this policy I allow",
    "start": "1575059",
    "end": "1580940"
  },
  {
    "text": "I allowed all HTTP methods and URLs but now I can",
    "start": "1580940",
    "end": "1586100"
  },
  {
    "text": "actually see what kind of requests the client is doing I can use this information to make it even more secure",
    "start": "1586100",
    "end": "1593179"
  },
  {
    "text": "if I wish to do so so in this case it's doing Gap methods on this base URL and",
    "start": "1593179",
    "end": "1598700"
  },
  {
    "text": "in this case it's fine next thing I want to do is secure the client before I do that",
    "start": "1598700",
    "end": "1605600"
  },
  {
    "text": "we can now also see on the egress side we have more matches on the flows and on",
    "start": "1605600",
    "end": "1611240"
  },
  {
    "text": "Ingress side nothing has really changed as such",
    "start": "1611240",
    "end": "1616880"
  },
  {
    "text": "next step is the client so I use again the information from the hover UI it's reaching out to the serve",
    "start": "1616880",
    "end": "1623480"
  },
  {
    "text": "on Port 80. so let's allow that and we also learned in my previous step that it",
    "start": "1623480",
    "end": "1629659"
  },
  {
    "text": "needs to access psyllium.io and isovariant.com on Port 443",
    "start": "1629659",
    "end": "1635360"
  },
  {
    "text": "also note that I'm adding This [Music] Server matching labels and obviously on",
    "start": "1635360",
    "end": "1643220"
  },
  {
    "text": "Port 80 save this",
    "start": "1643220",
    "end": "1648320"
  },
  {
    "text": "apply it and then we should see",
    "start": "1648320",
    "end": "1655460"
  },
  {
    "text": "we don't see a lot of chains in Hubble because we are already allowed that connection we do know that it's allows to reach",
    "start": "1655460",
    "end": "1663200"
  },
  {
    "text": "psyllium.io and isovan.com we do have already the server policy",
    "start": "1663200",
    "end": "1668240"
  },
  {
    "text": "applied but on the metric side we should see that we have now also Ingress policy",
    "start": "1668240",
    "end": "1674240"
  },
  {
    "text": "matches and we should also see egress policy being matched that means that I",
    "start": "1674240",
    "end": "1680480"
  },
  {
    "text": "expect that this egress policy verdict rates will show all green for",
    "start": "1680480",
    "end": "1688120"
  },
  {
    "text": "matching traffic it's already decreasing",
    "start": "1688120",
    "end": "1693460"
  },
  {
    "text": "so now I've basically secured outbound connectivity Ingress from the",
    "start": "1693980",
    "end": "1701120"
  },
  {
    "text": "server component only allowing access to the server on Port 80 with HTTP so now",
    "start": "1701120",
    "end": "1707059"
  },
  {
    "text": "I'm safe to also delete the default allow policy for communication for that given",
    "start": "1707059",
    "end": "1715460"
  },
  {
    "text": "namespace so let me delete this obviously",
    "start": "1715460",
    "end": "1722000"
  },
  {
    "text": "this shouldn't change anything here because we have created the right Network policies",
    "start": "1722000",
    "end": "1728179"
  },
  {
    "text": "and on the policy verdicts we can now confirm both Ingress and egress using",
    "start": "1728179",
    "end": "1733820"
  },
  {
    "text": "this dashboard that all traffic are matched on this side and on this side",
    "start": "1733820",
    "end": "1742340"
  },
  {
    "text": "so what happens if I if an application changes or reintroducing a new namespace",
    "start": "1742340",
    "end": "1747700"
  },
  {
    "text": "and an application in a new name space needs to access this given workload so",
    "start": "1747700",
    "end": "1754159"
  },
  {
    "text": "let's have a look there what happens then um I need to go back to another different",
    "start": "1754159",
    "end": "1760880"
  },
  {
    "text": "directory so I'm introducing another app",
    "start": "1760880",
    "end": "1766659"
  },
  {
    "text": "sorry we forget uh",
    "start": "1767779",
    "end": "1772039"
  },
  {
    "text": "I'm not in the right directory bear with me see the there we are",
    "start": "1774380",
    "end": "1781340"
  },
  {
    "text": "so this is just an another name space with a simple another client reaching out to these given workloads",
    "start": "1781340",
    "end": "1790720"
  },
  {
    "text": "now let's have a look what happens so on Hubble we shoot at some point once",
    "start": "1791059",
    "end": "1797059"
  },
  {
    "text": "this workload is created we should see drops because we're not allowing cross namespace workload so",
    "start": "1797059",
    "end": "1805279"
  },
  {
    "text": "here you can see this another app is being created in another nap another app namespace",
    "start": "1805279",
    "end": "1810860"
  },
  {
    "text": "and we can see here little red lines the traffic is dropped and we could also",
    "start": "1810860",
    "end": "1816860"
  },
  {
    "text": "zoom in on the server components and we should yeah we already see some drops",
    "start": "1816860",
    "end": "1822860"
  },
  {
    "text": "here right so we're seeing confirmation that we have Securities workload this other app is not allowed to reach this",
    "start": "1822860",
    "end": "1830000"
  },
  {
    "text": "workloads and the policy verdicts also confirmed that so I have also metrics",
    "start": "1830000",
    "end": "1835820"
  },
  {
    "text": "for these drops so we need to do something about this let us assume that this is allowed that",
    "start": "1835820",
    "end": "1842960"
  },
  {
    "text": "means that we need to change in this case the server senior Network policy",
    "start": "1842960",
    "end": "1848200"
  },
  {
    "text": "and let us assume that we already know it's HTTP Port 80 and so we're allowing",
    "start": "1848200",
    "end": "1854240"
  },
  {
    "text": "that as well so we're allowing layer 7 access and we select the specific namespace and obviously the the app",
    "start": "1854240",
    "end": "1863200"
  },
  {
    "text": "so now we are going to the policies directory I'm applying the uh",
    "start": "1863360",
    "end": "1871100"
  },
  {
    "text": "server yaml I just updated so that's now configured that would should result in Hub UI also",
    "start": "1871100",
    "end": "1878720"
  },
  {
    "text": "confirming that yes now we can see another app is",
    "start": "1878720",
    "end": "1885559"
  },
  {
    "text": "allowed to connect on Port 80 which http",
    "start": "1885559",
    "end": "1890600"
  },
  {
    "text": "to the server component and the metrics confirm that as well",
    "start": "1890600",
    "end": "1896360"
  },
  {
    "text": "because at some point we should see the vertex drop and the traffic being allowed",
    "start": "1896360",
    "end": "1903760"
  },
  {
    "text": "I've marked one minute left um final slide to conclude this session you can try this out yourself we have",
    "start": "1904940",
    "end": "1911779"
  },
  {
    "text": "excellent Labs Hands-On Labs created on our website isovan.com forward slash labs for both open source and CM",
    "start": "1911779",
    "end": "1919039"
  },
  {
    "text": "Enterprise to try out Network policies Hubble UI and to learn Hands-On yourself how you can adopt Network policies there",
    "start": "1919039",
    "end": "1927320"
  },
  {
    "text": "are also great examples of such cases using um ourcelium.io website there are some",
    "start": "1927320",
    "end": "1934039"
  },
  {
    "text": "nice Star Wars based examples across clusters as well you can try out if you want to know more about evpf I recommend",
    "start": "1934039",
    "end": "1940640"
  },
  {
    "text": "to visit evpf.io and visit our stand for more information maybe we have some eBooks or books left about this topic as",
    "start": "1940640",
    "end": "1948740"
  },
  {
    "text": "well we have a signing session tomorrow with Natalia she wrote a book about",
    "start": "1948740",
    "end": "1954020"
  },
  {
    "text": "securing using evpf both on runtime and network layers access and processes",
    "start": "1954020",
    "end": "1961880"
  },
  {
    "text": "I'm open for any questions are there any questions you can use the mic here good thanks",
    "start": "1961880",
    "end": "1969880"
  },
  {
    "text": "[Applause]",
    "start": "1969980",
    "end": "1973700"
  }
]