[
  {
    "text": "good morning good evening or good night",
    "start": "80",
    "end": "1640"
  },
  {
    "text": "depending on wherever you are it's such",
    "start": "1640",
    "end": "3679"
  },
  {
    "text": "an honor to be the first to open the",
    "start": "3679",
    "end": "5040"
  },
  {
    "text": "series of outstanding talks here at Deer",
    "start": "5040",
    "end": "7040"
  },
  {
    "text": "day for the next 20 minutes or so it",
    "start": "7040",
    "end": "8920"
  },
  {
    "text": "will be my pleasure to tell you a story",
    "start": "8920",
    "end": "11280"
  },
  {
    "text": "and some tips regarding dep rice",
    "start": "11280",
    "end": "12840"
  },
  {
    "text": "production applications my name is Alex",
    "start": "12840",
    "end": "15040"
  },
  {
    "text": "and I am what Microsoft call is a",
    "start": "15040",
    "end": "16358"
  },
  {
    "text": "regional director and the most valuable",
    "start": "16359",
    "end": "17880"
  },
  {
    "text": "professional but don't be fooled into",
    "start": "17880",
    "end": "19480"
  },
  {
    "text": "believing that I work for Microsoft I",
    "start": "19480",
    "end": "20960"
  },
  {
    "text": "must certainly do not I based in Romania",
    "start": "20960",
    "end": "23480"
  },
  {
    "text": "or Transylvania to be specific and I run",
    "start": "23480",
    "end": "26279"
  },
  {
    "text": "a company of Highly talented software",
    "start": "26279",
    "end": "27960"
  },
  {
    "text": "developers called key ticket Solutions",
    "start": "27960",
    "end": "31960"
  },
  {
    "text": "among other things I also am one of the",
    "start": "33800",
    "end": "35960"
  },
  {
    "text": "global Azure admins a worldwide",
    "start": "35960",
    "end": "38360"
  },
  {
    "text": "community of azure experts who organize",
    "start": "38360",
    "end": "40640"
  },
  {
    "text": "yearly Global Azure if you're new to",
    "start": "40640",
    "end": "42920"
  },
  {
    "text": "Azure s make sure to search for a global",
    "start": "42920",
    "end": "45320"
  },
  {
    "text": "Azure chapter near you or if you're",
    "start": "45320",
    "end": "47600"
  },
  {
    "text": "someone who loves to bring people",
    "start": "47600",
    "end": "49160"
  },
  {
    "text": "together put the pen on the global Asher",
    "start": "49160",
    "end": "50840"
  },
  {
    "text": "map and fellow Asher enthusiasts will",
    "start": "50840",
    "end": "52719"
  },
  {
    "text": "come together at your location last year",
    "start": "52719",
    "end": "55920"
  },
  {
    "text": "Global azer was organized worldwide in",
    "start": "55920",
    "end": "57960"
  },
  {
    "text": "six continents and brought together over",
    "start": "57960",
    "end": "59920"
  },
  {
    "text": "over 48 free speakers who delivered",
    "start": "59920",
    "end": "62800"
  },
  {
    "text": "around 500 sessions or so all at the",
    "start": "62800",
    "end": "65280"
  },
  {
    "text": "same time throughout the same three days",
    "start": "65280",
    "end": "67600"
  },
  {
    "text": "now that's what I call Community these",
    "start": "67600",
    "end": "70159"
  },
  {
    "text": "are all people who do deserve the Kudos",
    "start": "70159",
    "end": "72560"
  },
  {
    "text": "friends and it's thanks to their hard",
    "start": "72560",
    "end": "74360"
  },
  {
    "text": "work and passion that Global Azure is",
    "start": "74360",
    "end": "76400"
  },
  {
    "text": "such a massive event and that Azure",
    "start": "76400",
    "end": "78240"
  },
  {
    "text": "received so much love from the",
    "start": "78240",
    "end": "79200"
  },
  {
    "text": "communities",
    "start": "79200",
    "end": "81560"
  },
  {
    "text": "worldwide but enough about that now",
    "start": "81560",
    "end": "84680"
  },
  {
    "text": "during this session I'll tell you a",
    "start": "84680",
    "end": "86200"
  },
  {
    "text": "story about an application which worked",
    "start": "86200",
    "end": "87920"
  },
  {
    "text": "perfectly fine and then we de decided to",
    "start": "87920",
    "end": "90560"
  },
  {
    "text": "make it not work we effectively",
    "start": "90560",
    "end": "92479"
  },
  {
    "text": "decomposed it into microservices and we",
    "start": "92479",
    "end": "94119"
  },
  {
    "text": "diapered it but it failed the moment we",
    "start": "94119",
    "end": "97040"
  },
  {
    "text": "pre-provisioned it in the pre-production",
    "start": "97040",
    "end": "98759"
  },
  {
    "text": "environment so here's the deal the",
    "start": "98759",
    "end": "101000"
  },
  {
    "text": "application was initially comprised of",
    "start": "101000",
    "end": "102560"
  },
  {
    "text": "an API serving not one not two but four",
    "start": "102560",
    "end": "105960"
  },
  {
    "text": "different UI layers targeted for",
    "start": "105960",
    "end": "107920"
  },
  {
    "text": "different audiences and additionally",
    "start": "107920",
    "end": "109680"
  },
  {
    "text": "there was a second API which Powers an",
    "start": "109680",
    "end": "111880"
  },
  {
    "text": "application that has a complet different",
    "start": "111880",
    "end": "114240"
  },
  {
    "text": "logic but must share the same data set",
    "start": "114240",
    "end": "117119"
  },
  {
    "text": "and lastly there are numerous bakground",
    "start": "117119",
    "end": "119079"
  },
  {
    "text": "Services which are either triggered or",
    "start": "119079",
    "end": "121200"
  },
  {
    "text": "are polling the same API to retrieve the",
    "start": "121200",
    "end": "123719"
  },
  {
    "text": "information utilized by them so for",
    "start": "123719",
    "end": "125960"
  },
  {
    "text": "instance there's a notification service",
    "start": "125960",
    "end": "128280"
  },
  {
    "text": "which usually gets triggered each time",
    "start": "128280",
    "end": "129840"
  },
  {
    "text": "something happens in the API for example",
    "start": "129840",
    "end": "132040"
  },
  {
    "text": "upon data entry um when the data expires",
    "start": "132040",
    "end": "135040"
  },
  {
    "text": "and so on now what we initially what",
    "start": "135040",
    "end": "137800"
  },
  {
    "text": "initially seemed like a good idea",
    "start": "137800",
    "end": "139519"
  },
  {
    "text": "because we would only write the",
    "start": "139519",
    "end": "140560"
  },
  {
    "text": "authorization logic in the loging layer",
    "start": "140560",
    "end": "142200"
  },
  {
    "text": "once quickly turned into a bit of a",
    "start": "142200",
    "end": "143920"
  },
  {
    "text": "nightmare because of the highly volatile",
    "start": "143920",
    "end": "145599"
  },
  {
    "text": "deployments and many teams collaborating",
    "start": "145599",
    "end": "147400"
  },
  {
    "text": "on the same code base it was therefore",
    "start": "147400",
    "end": "149959"
  },
  {
    "text": "kind of a no-brainer that we had to",
    "start": "149959",
    "end": "151720"
  },
  {
    "text": "quickly go back to the drawing board and",
    "start": "151720",
    "end": "154000"
  },
  {
    "text": "we had to reconsider the design now",
    "start": "154000",
    "end": "156120"
  },
  {
    "text": "thankfully we already were experienced",
    "start": "156120",
    "end": "158040"
  },
  {
    "text": "enough with microservices as well as",
    "start": "158040",
    "end": "160159"
  },
  {
    "text": "with Dapper and enhancing the",
    "start": "160159",
    "end": "161680"
  },
  {
    "text": "application with Dapper's capability was",
    "start": "161680",
    "end": "163840"
  },
  {
    "text": "definitely a no-brainer I kid you not it",
    "start": "163840",
    "end": "166480"
  },
  {
    "text": "took less than a Sprint to get",
    "start": "166480",
    "end": "167800"
  },
  {
    "text": "everything properly set up and",
    "start": "167800",
    "end": "169200"
  },
  {
    "text": "redesigned with zero technical Deb on",
    "start": "169200",
    "end": "171599"
  },
  {
    "text": "the architectural side at least of side",
    "start": "171599",
    "end": "173360"
  },
  {
    "text": "of thingss at least but before we get",
    "start": "173360",
    "end": "175800"
  },
  {
    "text": "our hands dirty let's cut to the chase",
    "start": "175800",
    "end": "178599"
  },
  {
    "text": "developing microservices should not be",
    "start": "178599",
    "end": "180760"
  },
  {
    "text": "done just because monolithical",
    "start": "180760",
    "end": "182959"
  },
  {
    "text": "applications are the worst in fact",
    "start": "182959",
    "end": "185440"
  },
  {
    "text": "they're not bad at all despite the word",
    "start": "185440",
    "end": "187400"
  },
  {
    "text": "monolith having gained a negative",
    "start": "187400",
    "end": "189280"
  },
  {
    "text": "connotation you know which apps I mean",
    "start": "189280",
    "end": "191920"
  },
  {
    "text": "those pasc fre tier four tier and tier",
    "start": "191920",
    "end": "195239"
  },
  {
    "text": "applications specifically one layer for",
    "start": "195239",
    "end": "197400"
  },
  {
    "text": "presentation like a web app which",
    "start": "197400",
    "end": "198879"
  },
  {
    "text": "consumes the output of another layer",
    "start": "198879",
    "end": "200840"
  },
  {
    "text": "specifically running the business logic",
    "start": "200840",
    "end": "202599"
  },
  {
    "text": "which we usually refer to as an API",
    "start": "202599",
    "end": "205040"
  },
  {
    "text": "which in turn consumes the output of",
    "start": "205040",
    "end": "207000"
  },
  {
    "text": "another application such as the DAT",
    "start": "207000",
    "end": "208560"
  },
  {
    "text": "layer and here's the deal these",
    "start": "208560",
    "end": "210319"
  },
  {
    "text": "monolithical applications they're not",
    "start": "210319",
    "end": "212720"
  },
  {
    "text": "entirely that bad I mean seriously we",
    "start": "212720",
    "end": "214439"
  },
  {
    "text": "got to give them credit for running",
    "start": "214439",
    "end": "215799"
  },
  {
    "text": "Mission critical applications for the",
    "start": "215799",
    "end": "217120"
  },
  {
    "text": "past few decades and in all fairness the",
    "start": "217120",
    "end": "219159"
  },
  {
    "text": "world as we know it today was based on",
    "start": "219159",
    "end": "220959"
  },
  {
    "text": "these kind of applications for so many",
    "start": "220959",
    "end": "222360"
  },
  {
    "text": "years of course we didn't have Netflix",
    "start": "222360",
    "end": "223879"
  },
  {
    "text": "and Spotify decades ago but nevertheless",
    "start": "223879",
    "end": "226519"
  },
  {
    "text": "these were applications that were",
    "start": "226519",
    "end": "227799"
  },
  {
    "text": "perfectly perfectly fine they work and",
    "start": "227799",
    "end": "229680"
  },
  {
    "text": "they get the job done and even more",
    "start": "229680",
    "end": "232319"
  },
  {
    "text": "microservices they're anything but easy",
    "start": "232319",
    "end": "234280"
  },
  {
    "text": "to develop on one hand the sole idea of",
    "start": "234280",
    "end": "236959"
  },
  {
    "text": "segregation of work when forms of single",
    "start": "236959",
    "end": "239280"
  },
  {
    "text": "responsib apis in the so-called bonded",
    "start": "239280",
    "end": "242000"
  },
  {
    "text": "context and the segregation of data sets",
    "start": "242000",
    "end": "244000"
  },
  {
    "text": "into independent dat structures is an",
    "start": "244000",
    "end": "246159"
  },
  {
    "text": "extremely easy thing to say but",
    "start": "246159",
    "end": "248920"
  },
  {
    "text": "incredibly difficult thing to achieve",
    "start": "248920",
    "end": "251400"
  },
  {
    "text": "specifically assuming we would exactly",
    "start": "251400",
    "end": "253040"
  },
  {
    "text": "know how to develop microservices we",
    "start": "253040",
    "end": "254840"
  },
  {
    "text": "would hit a few problems that on for",
    "start": "254840",
    "end": "257239"
  },
  {
    "text": "starters if we it if we would implement",
    "start": "257239",
    "end": "259799"
  },
  {
    "text": "microservices but our basic",
    "start": "259799",
    "end": "261519"
  },
  {
    "text": "understanding of solid principle wasn't",
    "start": "261519",
    "end": "262759"
  },
  {
    "text": "as strong we would end up having a ton",
    "start": "262759",
    "end": "264280"
  },
  {
    "text": "of integration points you know what I",
    "start": "264280",
    "end": "265479"
  },
  {
    "text": "mean like caching and messaging cues",
    "start": "265479",
    "end": "268639"
  },
  {
    "text": "these are all particularly fun to",
    "start": "268639",
    "end": "270520"
  },
  {
    "text": "develop because once you get your hands",
    "start": "270520",
    "end": "272639"
  },
  {
    "text": "dirty with asynchronous programming and",
    "start": "272639",
    "end": "274199"
  },
  {
    "text": "reactive programming you pretty much",
    "start": "274199",
    "end": "275919"
  },
  {
    "text": "never want to stop and you see the whole",
    "start": "275919",
    "end": "278199"
  },
  {
    "text": "application as a chain of events that",
    "start": "278199",
    "end": "279759"
  },
  {
    "text": "can be put into asynchronous programming",
    "start": "279759",
    "end": "281280"
  },
  {
    "text": "style applications this this includes",
    "start": "281280",
    "end": "283520"
  },
  {
    "text": "third partyy API secret repositories and",
    "start": "283520",
    "end": "285360"
  },
  {
    "text": "whatnot but they they all must be",
    "start": "285360",
    "end": "287680"
  },
  {
    "text": "implemented and they all different",
    "start": "287680",
    "end": "290080"
  },
  {
    "text": "different ACDC different apis so to make",
    "start": "290080",
    "end": "292400"
  },
  {
    "text": "things even worse each one of these",
    "start": "292400",
    "end": "295039"
  },
  {
    "text": "Technologies comes with its own SDK and",
    "start": "295039",
    "end": "297360"
  },
  {
    "text": "each one has its own specificity to make",
    "start": "297360",
    "end": "299680"
  },
  {
    "text": "things really world really chaotic each",
    "start": "299680",
    "end": "302199"
  },
  {
    "text": "one has its own Cadence and with its own",
    "start": "302199",
    "end": "304199"
  },
  {
    "text": "application life cycle which features um",
    "start": "304199",
    "end": "307199"
  },
  {
    "text": "can improve they can also dramatically",
    "start": "307199",
    "end": "309160"
  },
  {
    "text": "limit the functionality of your own",
    "start": "309160",
    "end": "310639"
  },
  {
    "text": "application and when you start",
    "start": "310639",
    "end": "311960"
  },
  {
    "text": "implementing all kinds of different",
    "start": "311960",
    "end": "313199"
  },
  {
    "text": "Technologies different apis and",
    "start": "313199",
    "end": "314639"
  },
  {
    "text": "different libraries you realize quickly",
    "start": "314639",
    "end": "317440"
  },
  {
    "text": "that you're writing a boilerplate code",
    "start": "317440",
    "end": "319440"
  },
  {
    "text": "at an exponentially higher rate than you",
    "start": "319440",
    "end": "321000"
  },
  {
    "text": "typically did in the monolithical world",
    "start": "321000",
    "end": "323240"
  },
  {
    "text": "specifically due to the lack of the",
    "start": "323240",
    "end": "324880"
  },
  {
    "text": "right tools there's General a tendency",
    "start": "324880",
    "end": "327360"
  },
  {
    "text": "that a feature might take a Sprint to",
    "start": "327360",
    "end": "329039"
  },
  {
    "text": "develop in the monical way and it might",
    "start": "329039",
    "end": "331199"
  },
  {
    "text": "actually take several Sprints to get",
    "start": "331199",
    "end": "333080"
  },
  {
    "text": "rightly integrated with those rest of",
    "start": "333080",
    "end": "335160"
  },
  {
    "text": "services in the microservices based app",
    "start": "335160",
    "end": "337639"
  },
  {
    "text": "so why did we even choose to split the",
    "start": "337639",
    "end": "339720"
  },
  {
    "text": "API into smaller components well here's",
    "start": "339720",
    "end": "342000"
  },
  {
    "text": "the deal number one we had way too many",
    "start": "342000",
    "end": "344639"
  },
  {
    "text": "moving Parts in a single project we had",
    "start": "344639",
    "end": "346960"
  },
  {
    "text": "way too many contributors to a single",
    "start": "346960",
    "end": "348560"
  },
  {
    "text": "project we had way too much Cod and code",
    "start": "348560",
    "end": "351080"
  },
  {
    "text": "written even in a monolithical",
    "start": "351080",
    "end": "352840"
  },
  {
    "text": "application we had way too many",
    "start": "352840",
    "end": "354680"
  },
  {
    "text": "dependencies and zero responsibility",
    "start": "354680",
    "end": "356560"
  },
  {
    "text": "whatsoever even though we had a lot of",
    "start": "356560",
    "end": "358639"
  },
  {
    "text": "contributors effectively we had ton of",
    "start": "358639",
    "end": "361199"
  },
  {
    "text": "friction now I trust most of you already",
    "start": "361199",
    "end": "363400"
  },
  {
    "text": "know what Dapper is because you're at",
    "start": "363400",
    "end": "364919"
  },
  {
    "text": "the Dapper Day as you know Dapper stands",
    "start": "364919",
    "end": "367240"
  },
  {
    "text": "for distributed application runtime it",
    "start": "367240",
    "end": "368960"
  },
  {
    "text": "is a portable servess event-driven",
    "start": "368960",
    "end": "371000"
  },
  {
    "text": "runtime that makes it easy for",
    "start": "371000",
    "end": "372520"
  },
  {
    "text": "developers to build resilient stateless",
    "start": "372520",
    "end": "374840"
  },
  {
    "text": "and stateful microservices that run on",
    "start": "374840",
    "end": "376400"
  },
  {
    "text": "the cloud and Edge and also Embraces the",
    "start": "376400",
    "end": "379160"
  },
  {
    "text": "diversity of languages and developer",
    "start": "379160",
    "end": "380800"
  },
  {
    "text": "Frameworks deer codifies the best",
    "start": "380800",
    "end": "383160"
  },
  {
    "text": "practices for building microservices",
    "start": "383160",
    "end": "384639"
  },
  {
    "text": "applications into open independent",
    "start": "384639",
    "end": "386880"
  },
  {
    "text": "building blocks that enabled you to",
    "start": "386880",
    "end": "388520"
  },
  {
    "text": "build portable applications with the",
    "start": "388520",
    "end": "390800"
  },
  {
    "text": "language of and framework of your choice",
    "start": "390800",
    "end": "393000"
  },
  {
    "text": "and each building block is independent",
    "start": "393000",
    "end": "394639"
  },
  {
    "text": "and you can use one or some or even all",
    "start": "394639",
    "end": "397759"
  },
  {
    "text": "of the building blocks inside your own",
    "start": "397759",
    "end": "399720"
  },
  {
    "text": "app you got to remember the goals thater",
    "start": "399720",
    "end": "402280"
  },
  {
    "text": "has number one they want to enable",
    "start": "402280",
    "end": "404080"
  },
  {
    "text": "developers using any language or",
    "start": "404080",
    "end": "406479"
  },
  {
    "text": "framework to write distributed",
    "start": "406479",
    "end": "408360"
  },
  {
    "text": "applications and they want to make it",
    "start": "408360",
    "end": "410199"
  },
  {
    "text": "easy for you second they want to solve",
    "start": "410199",
    "end": "412800"
  },
  {
    "text": "the hard problems developers face",
    "start": "412800",
    "end": "414960"
  },
  {
    "text": "building mic Services applications by",
    "start": "414960",
    "end": "416520"
  },
  {
    "text": "providing the best practice building",
    "start": "416520",
    "end": "418599"
  },
  {
    "text": "blocks the they want to be Community",
    "start": "418599",
    "end": "420120"
  },
  {
    "text": "Driven to open always be open and vendor",
    "start": "420120",
    "end": "423000"
  },
  {
    "text": "neutral they want to gain new",
    "start": "423000",
    "end": "424520"
  },
  {
    "text": "contributors on an in an organic fashion",
    "start": "424520",
    "end": "427199"
  },
  {
    "text": "they want to provide consistency of",
    "start": "427199",
    "end": "428639"
  },
  {
    "text": "portability through open apis they want",
    "start": "428639",
    "end": "431319"
  },
  {
    "text": "to be platform agnostic across cloud and",
    "start": "431319",
    "end": "433800"
  },
  {
    "text": "Edge so on Prem as well they want to",
    "start": "433800",
    "end": "436280"
  },
  {
    "text": "embrace extensibility and provide",
    "start": "436280",
    "end": "437960"
  },
  {
    "text": "pluggable components without any vendor",
    "start": "437960",
    "end": "439639"
  },
  {
    "text": "lock in whatsoever and most certainly",
    "start": "439639",
    "end": "442319"
  },
  {
    "text": "they also want to enable Edge and iot",
    "start": "442319",
    "end": "444479"
  },
  {
    "text": "scenarios by being highly performant and",
    "start": "444479",
    "end": "446400"
  },
  {
    "text": "very lightweight last but not least they",
    "start": "446400",
    "end": "448479"
  },
  {
    "text": "want to be increment adoptable uh inside",
    "start": "448479",
    "end": "451160"
  },
  {
    "text": "the existing code so no need to write",
    "start": "451160",
    "end": "453240"
  },
  {
    "text": "Greenfield applications on the",
    "start": "453240",
    "end": "454599"
  },
  {
    "text": "applications that have been running re",
    "start": "454599",
    "end": "456199"
  },
  {
    "text": "business for the past decade or so now",
    "start": "456199",
    "end": "458160"
  },
  {
    "text": "what sold us on Dapper you might ask",
    "start": "458160",
    "end": "460400"
  },
  {
    "text": "well first and foremost all that",
    "start": "460400",
    "end": "461720"
  },
  {
    "text": "marketing um big selling point that you",
    "start": "461720",
    "end": "464520"
  },
  {
    "text": "heard before but also we loved the",
    "start": "464520",
    "end": "466919"
  },
  {
    "text": "ability of having pluggable technology",
    "start": "466919",
    "end": "469360"
  },
  {
    "text": "stacks for instance in our Dev",
    "start": "469360",
    "end": "471120"
  },
  {
    "text": "environment we decided to use Rapid NQ",
    "start": "471120",
    "end": "473080"
  },
  {
    "text": "and we went with that but we knew rapid",
    "start": "473080",
    "end": "475240"
  },
  {
    "text": "mq was not specifically good enough for",
    "start": "475240",
    "end": "477199"
  },
  {
    "text": "our production environments and we",
    "start": "477199",
    "end": "478800"
  },
  {
    "text": "didn't know know what technology we're",
    "start": "478800",
    "end": "480520"
  },
  {
    "text": "going to go for for the message cues in",
    "start": "480520",
    "end": "482039"
  },
  {
    "text": "our prod environments so having the",
    "start": "482039",
    "end": "484000"
  },
  {
    "text": "ability of swapping components was just",
    "start": "484000",
    "end": "485960"
  },
  {
    "text": "simply Blissful then from the",
    "start": "485960",
    "end": "487520"
  },
  {
    "text": "organizational standpoint each team was",
    "start": "487520",
    "end": "489560"
  },
  {
    "text": "responsible for a component and we",
    "start": "489560",
    "end": "491360"
  },
  {
    "text": "usually had smaller heterogeneous teams",
    "start": "491360",
    "end": "493800"
  },
  {
    "text": "meaning that each team member had vast",
    "start": "493800",
    "end": "495680"
  },
  {
    "text": "expertise in a lot of different areas so",
    "start": "495680",
    "end": "498319"
  },
  {
    "text": "using Dapper also meant that we were",
    "start": "498319",
    "end": "500639"
  },
  {
    "text": "decoupling things okay enough intros",
    "start": "500639",
    "end": "503520"
  },
  {
    "text": "let's get into the good",
    "start": "503520",
    "end": "505360"
  },
  {
    "text": "stuff Dapper support for kubernetes is",
    "start": "505360",
    "end": "507919"
  },
  {
    "text": "aligned with kubernetes version Cube",
    "start": "507919",
    "end": "509639"
  },
  {
    "text": "policy this might sound very technical",
    "start": "509639",
    "end": "511840"
  },
  {
    "text": "and difficult but here's the catch in a",
    "start": "511840",
    "end": "514000"
  },
  {
    "text": "highly available cluster the newest and",
    "start": "514000",
    "end": "516080"
  },
  {
    "text": "the oldest Cube APS server instances",
    "start": "516080",
    "end": "518159"
  },
  {
    "text": "must be within minor version now from",
    "start": "518159",
    "end": "520120"
  },
  {
    "text": "the cuet which is that small component",
    "start": "520120",
    "end": "522000"
  },
  {
    "text": "that runs alongside each node inside",
    "start": "522000",
    "end": "523719"
  },
  {
    "text": "your cluster the cuet must never be",
    "start": "523719",
    "end": "525839"
  },
  {
    "text": "newer than the cube API server and the",
    "start": "525839",
    "end": "527920"
  },
  {
    "text": "cuet may only be up to three versions",
    "start": "527920",
    "end": "530160"
  },
  {
    "text": "older than the cube API server there's a",
    "start": "530160",
    "end": "532440"
  },
  {
    "text": "caveat here that if you're running 1.25",
    "start": "532440",
    "end": "534880"
  },
  {
    "text": "or newer kubernetes I mean then it can",
    "start": "534880",
    "end": "537200"
  },
  {
    "text": "be two minor versions older than the QB",
    "start": "537200",
    "end": "539160"
  },
  {
    "text": "API server similarly for the cube proxy",
    "start": "539160",
    "end": "541760"
  },
  {
    "text": "it must not be newer than the cube API",
    "start": "541760",
    "end": "543519"
  },
  {
    "text": "server and the cube proxy which you know",
    "start": "543519",
    "end": "545279"
  },
  {
    "text": "is responsible for networking side of",
    "start": "545279",
    "end": "546880"
  },
  {
    "text": "things may be up to three versions older",
    "start": "546880",
    "end": "549600"
  },
  {
    "text": "than the cube APS server so that three",
    "start": "549600",
    "end": "551920"
  },
  {
    "text": "minor versions is always like a magic",
    "start": "551920",
    "end": "553720"
  },
  {
    "text": "number in kubernetes and it kind of",
    "start": "553720",
    "end": "555440"
  },
  {
    "text": "works the same way in diaper as well the",
    "start": "555440",
    "end": "557320"
  },
  {
    "text": "cube proxy may may be up to three",
    "start": "557320",
    "end": "559519"
  },
  {
    "text": "versions older than or newer than the",
    "start": "559519",
    "end": "561640"
  },
  {
    "text": "Cub blet instances it runs alongside and",
    "start": "561640",
    "end": "564399"
  },
  {
    "text": "again if you're running 1.25 or newer it",
    "start": "564399",
    "end": "566720"
  },
  {
    "text": "may only be two versions minor of sorry",
    "start": "566720",
    "end": "569360"
  },
  {
    "text": "or older maybe two versions older or",
    "start": "569360",
    "end": "571200"
  },
  {
    "text": "newer than the cubet inance run",
    "start": "571200",
    "end": "572600"
  },
  {
    "text": "alongside now the same principle applies",
    "start": "572600",
    "end": "574880"
  },
  {
    "text": "to the cuet controller manager to the",
    "start": "574880",
    "end": "576720"
  },
  {
    "text": "cube scad and the cloud controller",
    "start": "576720",
    "end": "578760"
  },
  {
    "text": "manager that must not be newer than the",
    "start": "578760",
    "end": "580760"
  },
  {
    "text": "cube APS server instances they",
    "start": "580760",
    "end": "582000"
  },
  {
    "text": "communicate with now you're not expected",
    "start": "582000",
    "end": "584279"
  },
  {
    "text": "to know all of these numbers and version",
    "start": "584279",
    "end": "585880"
  },
  {
    "text": "numbers and whatnot but the key takeaway",
    "start": "585880",
    "end": "588000"
  },
  {
    "text": "here is that there is the same version",
    "start": "588000",
    "end": "590600"
  },
  {
    "text": "skew policy in Vaper as there is in",
    "start": "590600",
    "end": "592480"
  },
  {
    "text": "kubernetes however you must keep keep in",
    "start": "592480",
    "end": "595040"
  },
  {
    "text": "mind that you must always have resarch",
    "start": "595040",
    "end": "596920"
  },
  {
    "text": "settings as a starting point and the",
    "start": "596920",
    "end": "598800"
  },
  {
    "text": "numbers you see here are good starting",
    "start": "598800",
    "end": "600480"
  },
  {
    "text": "points in my opinion you should always",
    "start": "600480",
    "end": "602720"
  },
  {
    "text": "perform your individual testing to find",
    "start": "602720",
    "end": "604279"
  },
  {
    "text": "the right values for your environment",
    "start": "604279",
    "end": "606040"
  },
  {
    "text": "because they might differ when you're",
    "start": "606040",
    "end": "607760"
  },
  {
    "text": "installing Dapper using Helm one thing",
    "start": "607760",
    "end": "609480"
  },
  {
    "text": "to keep in mind and we learned this",
    "start": "609480",
    "end": "610880"
  },
  {
    "text": "through the trenches is that there's no",
    "start": "610880",
    "end": "612680"
  },
  {
    "text": "default limits so effectively installing",
    "start": "612680",
    "end": "616200"
  },
  {
    "text": "Dapper through Helm means that Dapper",
    "start": "616200",
    "end": "618000"
  },
  {
    "text": "can literally cannibalize your entire",
    "start": "618000",
    "end": "620120"
  },
  {
    "text": "infrastructure and your entire set of",
    "start": "620120",
    "end": "621959"
  },
  {
    "text": "resources it should never happen but",
    "start": "621959",
    "end": "624200"
  },
  {
    "text": "misconfiguration sometimes does occur",
    "start": "624200",
    "end": "627279"
  },
  {
    "text": "also there's some optional components",
    "start": "627279",
    "end": "629120"
  },
  {
    "text": "like the placement the Sentry and the",
    "start": "629120",
    "end": "630560"
  },
  {
    "text": "dashboard which will be super useful",
    "start": "630560",
    "end": "632800"
  },
  {
    "text": "especially if you're running actors for",
    "start": "632800",
    "end": "634399"
  },
  {
    "text": "the placement and if you want to get",
    "start": "634399",
    "end": "635839"
  },
  {
    "text": "some more operational sty things done",
    "start": "635839",
    "end": "638760"
  },
  {
    "text": "you should always set resource",
    "start": "638760",
    "end": "639920"
  },
  {
    "text": "assignments for the Deer Side card using",
    "start": "639920",
    "end": "641519"
  },
  {
    "text": "the supported annotations these",
    "start": "641519",
    "end": "642880"
  },
  {
    "text": "annotations usually go alongside the",
    "start": "642880",
    "end": "644399"
  },
  {
    "text": "side card CP limit side card memory",
    "start": "644399",
    "end": "646200"
  },
  {
    "text": "limit side card CPU request and side",
    "start": "646200",
    "end": "648680"
  },
  {
    "text": "card memory request and if they're if",
    "start": "648680",
    "end": "650920"
  },
  {
    "text": "they're not set then the ader side card",
    "start": "650920",
    "end": "653240"
  },
  {
    "text": "would run without resource settings",
    "start": "653240",
    "end": "655160"
  },
  {
    "text": "which obviously may lead to a lot of",
    "start": "655160",
    "end": "656480"
  },
  {
    "text": "different issues for the production",
    "start": "656480",
    "end": "657959"
  },
  {
    "text": "ready setups it's strongly recommended",
    "start": "657959",
    "end": "660000"
  },
  {
    "text": "that you configure these settings",
    "start": "660000",
    "end": "662320"
  },
  {
    "text": "alongside the same lines with soft",
    "start": "662320",
    "end": "664399"
  },
  {
    "text": "memory limits on the Deer Side card when",
    "start": "664399",
    "end": "666760"
  },
  {
    "text": "you set them up you effectively would",
    "start": "666760",
    "end": "669920"
  },
  {
    "text": "have this garbage collector free up the",
    "start": "669920",
    "end": "672120"
  },
  {
    "text": "memory once it exceeds the limit instead",
    "start": "672120",
    "end": "674240"
  },
  {
    "text": "of actually waiting for it to double the",
    "start": "674240",
    "end": "675920"
  },
  {
    "text": "last amount of memory present in the",
    "start": "675920",
    "end": "677519"
  },
  {
    "text": "Heap when it was run this may again",
    "start": "677519",
    "end": "679800"
  },
  {
    "text": "sound very technical but it's very",
    "start": "679800",
    "end": "681519"
  },
  {
    "text": "important because if you wait for the",
    "start": "681519",
    "end": "683600"
  },
  {
    "text": "default behavior of the Garb collector",
    "start": "683600",
    "end": "685480"
  },
  {
    "text": "that is used in go you can inevitably",
    "start": "685480",
    "end": "688079"
  },
  {
    "text": "end up having o M kill events with your",
    "start": "688079",
    "end": "690200"
  },
  {
    "text": "containers and with obviously your pods",
    "start": "690200",
    "end": "692279"
  },
  {
    "text": "as",
    "start": "692279",
    "end": "693279"
  },
  {
    "text": "well now obviously we verified all of",
    "start": "693279",
    "end": "696040"
  },
  {
    "text": "these production ready deployment tips",
    "start": "696040",
    "end": "698320"
  },
  {
    "text": "and we also go went further to make sure",
    "start": "698320",
    "end": "701519"
  },
  {
    "text": "that we had mutual TLS enabled mtls",
    "start": "701519",
    "end": "704560"
  },
  {
    "text": "Dapper has mtls on by default and you",
    "start": "704560",
    "end": "707040"
  },
  {
    "text": "can learn more about bringing on your",
    "start": "707040",
    "end": "708399"
  },
  {
    "text": "own certificates we also made sure that",
    "start": "708399",
    "end": "710240"
  },
  {
    "text": "the application to the de API",
    "start": "710240",
    "end": "712079"
  },
  {
    "text": "authentication was enabled because this",
    "start": "712079",
    "end": "714639"
  },
  {
    "text": "has to be enabled to make sure that you",
    "start": "714639",
    "end": "716040"
  },
  {
    "text": "secure the de API from unauthorized",
    "start": "716040",
    "end": "717959"
  },
  {
    "text": "access some times there is attacks from",
    "start": "717959",
    "end": "720519"
  },
  {
    "text": "within your infrastructure we also made",
    "start": "720519",
    "end": "722720"
  },
  {
    "text": "sure that the Dapper to the API that we",
    "start": "722720",
    "end": "725279"
  },
  {
    "text": "wrote was also authenticated this is",
    "start": "725279",
    "end": "727800"
  },
  {
    "text": "also very important because you must let",
    "start": "727800",
    "end": "729760"
  },
  {
    "text": "Dapper know that it's communicating with",
    "start": "729760",
    "end": "731440"
  },
  {
    "text": "authorized applications and again you'd",
    "start": "731440",
    "end": "733040"
  },
  {
    "text": "be using the same token authentication",
    "start": "733040",
    "end": "735000"
  },
  {
    "text": "principles we had component secret",
    "start": "735000",
    "end": "736839"
  },
  {
    "text": "configured in a Secret store and we",
    "start": "736839",
    "end": "738560"
  },
  {
    "text": "never hardcoded any secrets in our",
    "start": "738560",
    "end": "740440"
  },
  {
    "text": "component yl files and we also had to",
    "start": "740440",
    "end": "742680"
  },
  {
    "text": "dep control plane installed on a",
    "start": "742680",
    "end": "744199"
  },
  {
    "text": "deadicated name space for instance",
    "start": "744199",
    "end": "746320"
  },
  {
    "text": "Dapper system which we commonly use",
    "start": "746320",
    "end": "748360"
  },
  {
    "text": "rather than having the default Nam space",
    "start": "748360",
    "end": "749959"
  },
  {
    "text": "or application name spaces Dapper also",
    "start": "749959",
    "end": "751959"
  },
  {
    "text": "supports scope components for certain",
    "start": "751959",
    "end": "753639"
  },
  {
    "text": "applications even though it's not",
    "start": "753639",
    "end": "755160"
  },
  {
    "text": "required it's a good practice now here's",
    "start": "755160",
    "end": "758079"
  },
  {
    "text": "the deal we did all of that and this is",
    "start": "758079",
    "end": "761839"
  },
  {
    "text": "good and everything seemed fine",
    "start": "761839",
    "end": "764320"
  },
  {
    "text": "especially in the dev environment but",
    "start": "764320",
    "end": "766000"
  },
  {
    "text": "once the refactoring of our application",
    "start": "766000",
    "end": "767959"
  },
  {
    "text": "was done and it was fully diapered to be",
    "start": "767959",
    "end": "770560"
  },
  {
    "text": "production ready we deployed it in the",
    "start": "770560",
    "end": "772360"
  },
  {
    "text": "pre-production environment just to learn",
    "start": "772360",
    "end": "773800"
  },
  {
    "text": "that it didn't get any deer containers",
    "start": "773800",
    "end": "776199"
  },
  {
    "text": "injecting the application spot now",
    "start": "776199",
    "end": "778480"
  },
  {
    "text": "clearly such a situation usually suggest",
    "start": "778480",
    "end": "780440"
  },
  {
    "text": "that the there might be an error",
    "start": "780440",
    "end": "781959"
  },
  {
    "text": "indicated in the side guard injector",
    "start": "781959",
    "end": "784079"
  },
  {
    "text": "right here's the log we saw reading",
    "start": "784079",
    "end": "786880"
  },
  {
    "text": "through the logs the only three parts",
    "start": "786880",
    "end": "788880"
  },
  {
    "text": "seemed uh to to be unable to get S A",
    "start": "788880",
    "end": "791839"
  },
  {
    "text": "tecton pipelines ton pipelines",
    "start": "791839",
    "end": "793519"
  },
  {
    "text": "controller uid it's a tongue twister",
    "start": "793519",
    "end": "795680"
  },
  {
    "text": "I'll give you that and it's a bit of",
    "start": "795680",
    "end": "797360"
  },
  {
    "text": "mumo jumo even now I believe that the",
    "start": "797360",
    "end": "799399"
  },
  {
    "text": "very next thing we did was the typical",
    "start": "799399",
    "end": "801040"
  },
  {
    "text": "thing anyone else would do as well",
    "start": "801040",
    "end": "803040"
  },
  {
    "text": "namely Google on Bing unable to get as a",
    "start": "803040",
    "end": "805959"
  },
  {
    "text": "teon pipelines teon pipelines controller",
    "start": "805959",
    "end": "807959"
  },
  {
    "text": "uid only to come across the first result",
    "start": "807959",
    "end": "810279"
  },
  {
    "text": "of the query which is a GitHub issue",
    "start": "810279",
    "end": "812920"
  },
  {
    "text": "titled Dapper side card not injected the",
    "start": "812920",
    "end": "815079"
  },
  {
    "text": "Pod see how we didn't even specify",
    "start": "815079",
    "end": "817639"
  },
  {
    "text": "Dapper as an issue in the query and yet",
    "start": "817639",
    "end": "819519"
  },
  {
    "text": "the first result was referring to this",
    "start": "819519",
    "end": "821360"
  },
  {
    "text": "very same problem sure enough the issue",
    "start": "821360",
    "end": "823959"
  },
  {
    "text": "was closed which usually is a good sign",
    "start": "823959",
    "end": "827120"
  },
  {
    "text": "and as we scrolled all the way to the",
    "start": "827120",
    "end": "828839"
  },
  {
    "text": "bottom of the issue this was a very long",
    "start": "828839",
    "end": "831360"
  },
  {
    "text": "fret one of the suggestions and",
    "start": "831360",
    "end": "835720"
  },
  {
    "text": "obviously a lot of people had a lot of",
    "start": "835720",
    "end": "837160"
  },
  {
    "text": "different culprits but nevertheless L",
    "start": "837160",
    "end": "839480"
  },
  {
    "text": "sometimes we turn as it turned out we",
    "start": "839480",
    "end": "841600"
  },
  {
    "text": "learned that there was an extra label at",
    "start": "841600",
    "end": "843720"
  },
  {
    "text": "least for the people who committed and",
    "start": "843720",
    "end": "845639"
  },
  {
    "text": "commented on this issue hm should we",
    "start": "845639",
    "end": "848720"
  },
  {
    "text": "have had any additional labels",
    "start": "848720",
    "end": "850720"
  },
  {
    "text": "everything was working in that",
    "start": "850720",
    "end": "851839"
  },
  {
    "text": "environment clearly that they must be",
    "start": "851839",
    "end": "853480"
  },
  {
    "text": "using the same labels everywhere right I",
    "start": "853480",
    "end": "855639"
  },
  {
    "text": "mean right time to compare and contrast",
    "start": "855639",
    "end": "859199"
  },
  {
    "text": "here on the left hand side what you see",
    "start": "859199",
    "end": "861759"
  },
  {
    "text": "is everything in terms of locks from the",
    "start": "861759",
    "end": "863839"
  },
  {
    "text": "side car injector running in Dev",
    "start": "863839",
    "end": "865360"
  },
  {
    "text": "environment on the right hand side the",
    "start": "865360",
    "end": "867600"
  },
  {
    "text": "side car injector locks for the",
    "start": "867600",
    "end": "869199"
  },
  {
    "text": "pre-production environment and by the",
    "start": "869199",
    "end": "870519"
  },
  {
    "text": "looks of it it seems that the side card",
    "start": "870519",
    "end": "872040"
  },
  {
    "text": "injector isn't even getting triggered to",
    "start": "872040",
    "end": "873959"
  },
  {
    "text": "do his job now either that or we have",
    "start": "873959",
    "end": "876920"
  },
  {
    "text": "another pre SAA typical Microsoft",
    "start": "876920",
    "end": "878800"
  },
  {
    "text": "situation where a product only logs",
    "start": "878800",
    "end": "881279"
  },
  {
    "text": "success and fails to even log errors you",
    "start": "881279",
    "end": "883320"
  },
  {
    "text": "know what I'm talking about so what",
    "start": "883320",
    "end": "885360"
  },
  {
    "text": "should we do next well time to compare",
    "start": "885360",
    "end": "888759"
  },
  {
    "text": "some more I trust everyone else would do",
    "start": "888759",
    "end": "891279"
  },
  {
    "text": "the same thing and would probably take",
    "start": "891279",
    "end": "893160"
  },
  {
    "text": "it through the same approaches what you",
    "start": "893160",
    "end": "895000"
  },
  {
    "text": "have here is the parts description on",
    "start": "895000",
    "end": "897440"
  },
  {
    "text": "the left hand side the the description",
    "start": "897440",
    "end": "899519"
  },
  {
    "text": "clearly states two containers in the Pod",
    "start": "899519",
    "end": "901920"
  },
  {
    "text": "on the right hand side there's a single",
    "start": "901920",
    "end": "903720"
  },
  {
    "text": "container in the Pod so yet again this",
    "start": "903720",
    "end": "907120"
  },
  {
    "text": "suggests that there is literally no side",
    "start": "907120",
    "end": "910880"
  },
  {
    "text": "card container injected even more so the",
    "start": "910880",
    "end": "913120"
  },
  {
    "text": "missing labels are usually indication",
    "start": "913120",
    "end": "915399"
  },
  {
    "text": "that the side car failed to properly see",
    "start": "915399",
    "end": "918040"
  },
  {
    "text": "the annotations and respond to them this",
    "start": "918040",
    "end": "920040"
  },
  {
    "text": "made us think either the annotations are",
    "start": "920040",
    "end": "922360"
  },
  {
    "text": "triggered on the sidec injector because",
    "start": "922360",
    "end": "923920"
  },
  {
    "text": "the side injector isn't accessible for",
    "start": "923920",
    "end": "925639"
  },
  {
    "text": "some obscure reason which we haven't",
    "start": "925639",
    "end": "927320"
  },
  {
    "text": "figured out yet or annotations are",
    "start": "927320",
    "end": "929240"
  },
  {
    "text": "completely wrong but The annotation",
    "start": "929240",
    "end": "931279"
  },
  {
    "text": "seemed fine wait what if the annotations",
    "start": "931279",
    "end": "934920"
  },
  {
    "text": "are there before Dapper was",
    "start": "934920",
    "end": "938160"
  },
  {
    "text": "installed as it turns out if your",
    "start": "938160",
    "end": "940800"
  },
  {
    "text": "podspec template is annotated correctly",
    "start": "940800",
    "end": "943440"
  },
  {
    "text": "and you still don't see the side car",
    "start": "943440",
    "end": "944959"
  },
  {
    "text": "injected you must make sure the Dapper",
    "start": "944959",
    "end": "947240"
  },
  {
    "text": "was deployed to the cluster before your",
    "start": "947240",
    "end": "949759"
  },
  {
    "text": "deployment or the Pod were deployed if",
    "start": "949759",
    "end": "952800"
  },
  {
    "text": "this is the case usually restarting the",
    "start": "952800",
    "end": "955000"
  },
  {
    "text": "pods will fix the issue so I guess it's",
    "start": "955000",
    "end": "957120"
  },
  {
    "text": "time to reinstall and and you know what",
    "start": "957120",
    "end": "959279"
  },
  {
    "text": "let's even reinstall Dapper so first we",
    "start": "959279",
    "end": "961639"
  },
  {
    "text": "removed all the charts related to our",
    "start": "961639",
    "end": "963360"
  },
  {
    "text": "application then we reinstall Dapper",
    "start": "963360",
    "end": "965720"
  },
  {
    "text": "just to be sure and then install the",
    "start": "965720",
    "end": "967959"
  },
  {
    "text": "application and nothing the side cards",
    "start": "967959",
    "end": "971680"
  },
  {
    "text": "were still not injected I guess it's",
    "start": "971680",
    "end": "973800"
  },
  {
    "text": "time to Google",
    "start": "973800",
    "end": "975240"
  },
  {
    "text": "somewhere aha another issue it even says",
    "start": "975240",
    "end": "978319"
  },
  {
    "text": "on prod environment we're getting closer",
    "start": "978319",
    "end": "981040"
  },
  {
    "text": "aren't we now the issue here suggests",
    "start": "981040",
    "end": "984120"
  },
  {
    "text": "that a firewall might be preventing the",
    "start": "984120",
    "end": "986319"
  },
  {
    "text": "sidecar injection of course it's makes",
    "start": "986319",
    "end": "989000"
  },
  {
    "text": "sense however we didn't have such a",
    "start": "989000",
    "end": "991959"
  },
  {
    "text": "firewall we even as in the Masters just",
    "start": "991959",
    "end": "994199"
  },
  {
    "text": "to make sure we even went as far is",
    "start": "994199",
    "end": "996839"
  },
  {
    "text": "reinstalling everything from scratch",
    "start": "996839",
    "end": "998880"
  },
  {
    "text": "again and this included Dabber and all",
    "start": "998880",
    "end": "1001000"
  },
  {
    "text": "of its dependencies and again there was",
    "start": "1001000",
    "end": "1003560"
  },
  {
    "text": "no error on the side car injector pot",
    "start": "1003560",
    "end": "1005440"
  },
  {
    "text": "which we would normally expect to tell",
    "start": "1005440",
    "end": "1007560"
  },
  {
    "text": "us why something would fail regarding",
    "start": "1007560",
    "end": "1009680"
  },
  {
    "text": "the injection so it was not a firewall",
    "start": "1009680",
    "end": "1012519"
  },
  {
    "text": "issue should we maybe blame the cni",
    "start": "1012519",
    "end": "1015680"
  },
  {
    "text": "weave in this case I didn't tell you",
    "start": "1015680",
    "end": "1017120"
  },
  {
    "text": "this before but this was a vanilla",
    "start": "1017120",
    "end": "1018600"
  },
  {
    "text": "installation of kubernetes no Dr No",
    "start": "1018600",
    "end": "1020920"
  },
  {
    "text": "flavor no easy installation process",
    "start": "1020920",
    "end": "1023040"
  },
  {
    "text": "whatsoever it was through the trenches",
    "start": "1023040",
    "end": "1025120"
  },
  {
    "text": "so let's reinstall reinstall everything",
    "start": "1025120",
    "end": "1027600"
  },
  {
    "text": "and leave weave out and replace it with",
    "start": "1027600",
    "end": "1030079"
  },
  {
    "text": "Calico and as you'd expect still not",
    "start": "1030079",
    "end": "1033120"
  },
  {
    "text": "working all ports were properly",
    "start": "1033120",
    "end": "1035199"
  },
  {
    "text": "configured but still not working now",
    "start": "1035199",
    "end": "1036760"
  },
  {
    "text": "here's the deal in kubernetes is this",
    "start": "1036760",
    "end": "1038438"
  },
  {
    "text": "concept of an admition controller which",
    "start": "1038439",
    "end": "1039918"
  },
  {
    "text": "intercepts the request to the API server",
    "start": "1039919",
    "end": "1041720"
  },
  {
    "text": "in kubernetes prior to the percent of of",
    "start": "1041720",
    "end": "1043720"
  },
  {
    "text": "the object and after the request is",
    "start": "1043720",
    "end": "1045640"
  },
  {
    "text": "authenticated and authorized these",
    "start": "1045640",
    "end": "1047280"
  },
  {
    "text": "controllers may be valid ating they may",
    "start": "1047280",
    "end": "1049000"
  },
  {
    "text": "be mutating or they may be doing both",
    "start": "1049000",
    "end": "1051320"
  },
  {
    "text": "mutating controllers can modify objects",
    "start": "1051320",
    "end": "1053640"
  },
  {
    "text": "and they can actually validate the",
    "start": "1053640",
    "end": "1055000"
  },
  {
    "text": "request to make sure that the request",
    "start": "1055000",
    "end": "1056760"
  },
  {
    "text": "should actually go through these",
    "start": "1056760",
    "end": "1058360"
  },
  {
    "text": "controllers can also block some custom",
    "start": "1058360",
    "end": "1060320"
  },
  {
    "text": "verbs such as a request connecting to a",
    "start": "1060320",
    "end": "1062360"
  },
  {
    "text": "pod using the API server proxy these",
    "start": "1062360",
    "end": "1064799"
  },
  {
    "text": "emission controllers do not and cannot",
    "start": "1064799",
    "end": "1066840"
  },
  {
    "text": "block requests to read but they can",
    "start": "1066840",
    "end": "1069000"
  },
  {
    "text": "block things from getting changed which",
    "start": "1069000",
    "end": "1071000"
  },
  {
    "text": "would be the case of the injection of",
    "start": "1071000",
    "end": "1072280"
  },
  {
    "text": "the side car they also proceed in two",
    "start": "1072280",
    "end": "1075039"
  },
  {
    "text": "phases in the first phase the mutating",
    "start": "1075039",
    "end": "1077640"
  },
  {
    "text": "admission controllers are run and in the",
    "start": "1077640",
    "end": "1079440"
  },
  {
    "text": "second phase there's the validation",
    "start": "1079440",
    "end": "1081080"
  },
  {
    "text": "admission controller which is executed",
    "start": "1081080",
    "end": "1082960"
  },
  {
    "text": "and if the controller in either phase",
    "start": "1082960",
    "end": "1084679"
  },
  {
    "text": "rejects the request the entire request",
    "start": "1084679",
    "end": "1086440"
  },
  {
    "text": "is rejected immediately and an error is",
    "start": "1086440",
    "end": "1088480"
  },
  {
    "text": "returned to the end user now frankly all",
    "start": "1088480",
    "end": "1090640"
  },
  {
    "text": "of this conversation is getting me a bit",
    "start": "1090640",
    "end": "1092159"
  },
  {
    "text": "anxious because we're talking about some",
    "start": "1092159",
    "end": "1093799"
  },
  {
    "text": "super techy stuff here like level 400",
    "start": "1093799",
    "end": "1095880"
  },
  {
    "text": "kubernetes deep let's think about this",
    "start": "1095880",
    "end": "1098360"
  },
  {
    "text": "once more could it be that the request",
    "start": "1098360",
    "end": "1100960"
  },
  {
    "text": "is somehow getting blocked somewhere and",
    "start": "1100960",
    "end": "1102760"
  },
  {
    "text": "never makes it to the sidecar injector",
    "start": "1102760",
    "end": "1105320"
  },
  {
    "text": "there's no firewall what could block the",
    "start": "1105320",
    "end": "1107520"
  },
  {
    "text": "request then",
    "start": "1107520",
    "end": "1109559"
  },
  {
    "text": "hm maybe you know what it's not really",
    "start": "1109559",
    "end": "1112039"
  },
  {
    "text": "an admission configuration or an knle",
    "start": "1112039",
    "end": "1114840"
  },
  {
    "text": "problem but wait Dapper like other",
    "start": "1114840",
    "end": "1118159"
  },
  {
    "text": "service mashes relies on kubernetes to",
    "start": "1118159",
    "end": "1119960"
  },
  {
    "text": "get the component triggered to do stuff",
    "start": "1119960",
    "end": "1122000"
  },
  {
    "text": "I know what you're about to say Dapper",
    "start": "1122000",
    "end": "1123559"
  },
  {
    "text": "is not a service mash um even though",
    "start": "1123559",
    "end": "1126000"
  },
  {
    "text": "they do offer some overlapping",
    "start": "1126000",
    "end": "1127520"
  },
  {
    "text": "capabilities daer is not a service Mash",
    "start": "1127520",
    "end": "1129440"
  },
  {
    "text": "I know a service Mash is defined as a",
    "start": "1129440",
    "end": "1131440"
  },
  {
    "text": "networking service smashh and unlike a",
    "start": "1131440",
    "end": "1133440"
  },
  {
    "text": "service smesh which is focused on",
    "start": "1133440",
    "end": "1134799"
  },
  {
    "text": "networking components and concerns",
    "start": "1134799",
    "end": "1136760"
  },
  {
    "text": "Dapper is focused on providing building",
    "start": "1136760",
    "end": "1139039"
  },
  {
    "text": "blocks that makes it easy for developers",
    "start": "1139039",
    "end": "1140720"
  },
  {
    "text": "to build applications and microservices",
    "start": "1140720",
    "end": "1142600"
  },
  {
    "text": "cool but here's the deal Dapper is",
    "start": "1142600",
    "end": "1144600"
  },
  {
    "text": "developer Centric right versus a service",
    "start": "1144600",
    "end": "1147080"
  },
  {
    "text": "mesh which is not but con even though",
    "start": "1147080",
    "end": "1149640"
  },
  {
    "text": "conceptually they're different the inner",
    "start": "1149640",
    "end": "1151240"
  },
  {
    "text": "workings to a very large extent are the",
    "start": "1151240",
    "end": "1153320"
  },
  {
    "text": "same so you know what let's go back to",
    "start": "1153320",
    "end": "1156240"
  },
  {
    "text": "the docs and see if the docs can help",
    "start": "1156240",
    "end": "1158000"
  },
  {
    "text": "cuz no fairness we should have read",
    "start": "1158000",
    "end": "1159840"
  },
  {
    "text": "those docs",
    "start": "1159840",
    "end": "1161360"
  },
  {
    "text": "first hey wait this is not the docks",
    "start": "1161360",
    "end": "1163919"
  },
  {
    "text": "this might be promising let's craw some",
    "start": "1163919",
    "end": "1167240"
  },
  {
    "text": "more uhhuh that didn't really help cuz",
    "start": "1167240",
    "end": "1171640"
  },
  {
    "text": "it's all about things that we already",
    "start": "1171640",
    "end": "1173240"
  },
  {
    "text": "did there's nothing new to this but this",
    "start": "1173240",
    "end": "1176039"
  },
  {
    "text": "got me thinking you know what there's",
    "start": "1176039",
    "end": "1178840"
  },
  {
    "text": "one place we haven't looked into namely",
    "start": "1178840",
    "end": "1181240"
  },
  {
    "text": "the aps Ser",
    "start": "1181240",
    "end": "1183720"
  },
  {
    "text": "logs let's read through those now as it",
    "start": "1183720",
    "end": "1187520"
  },
  {
    "text": "turns out in the API server logs when",
    "start": "1187520",
    "end": "1190440"
  },
  {
    "text": "you read the API server logs we did",
    "start": "1190440",
    "end": "1192679"
  },
  {
    "text": "actually get everything we were looking",
    "start": "1192679",
    "end": "1194280"
  },
  {
    "text": "for it told us that it couldn't call the",
    "start": "1194280",
    "end": "1196039"
  },
  {
    "text": "ccar injector it told us that it was",
    "start": "1196039",
    "end": "1197880"
  },
  {
    "text": "getting a the for free back and after",
    "start": "1197880",
    "end": "1199919"
  },
  {
    "text": "some detailed Network troubleshooting we",
    "start": "1199919",
    "end": "1201559"
  },
  {
    "text": "even learned that the for free was",
    "start": "1201559",
    "end": "1202919"
  },
  {
    "text": "actually generated by a proxy which the",
    "start": "1202919",
    "end": "1205159"
  },
  {
    "text": "requests went through and this was",
    "start": "1205159",
    "end": "1207159"
  },
  {
    "text": "because an HTP proxy environment",
    "start": "1207159",
    "end": "1208799"
  },
  {
    "text": "variable was picked up from the host",
    "start": "1208799",
    "end": "1210400"
  },
  {
    "text": "when kubernetes was installed and it",
    "start": "1210400",
    "end": "1212320"
  },
  {
    "text": "persisted the host environment variables",
    "start": "1212320",
    "end": "1213960"
  },
  {
    "text": "in the API server prod now thus the",
    "start": "1213960",
    "end": "1217400"
  },
  {
    "text": "internal requests were getting to the",
    "start": "1217400",
    "end": "1219600"
  },
  {
    "text": "proxy which had no idea how to run the",
    "start": "1219600",
    "end": "1221799"
  },
  {
    "text": "request back to the side car injector",
    "start": "1221799",
    "end": "1223760"
  },
  {
    "text": "and there was no route back through the",
    "start": "1223760",
    "end": "1225880"
  },
  {
    "text": "net whatsoever now sure enough remove",
    "start": "1225880",
    "end": "1228159"
  },
  {
    "text": "moving an extra environment variable we",
    "start": "1228159",
    "end": "1230400"
  },
  {
    "text": "learned about um by running a CBE CD",
    "start": "1230400",
    "end": "1233320"
  },
  {
    "text": "describe pod and restarting the API",
    "start": "1233320",
    "end": "1234880"
  },
  {
    "text": "server it got us back in business it",
    "start": "1234880",
    "end": "1237240"
  },
  {
    "text": "might have taken me probably the past 5",
    "start": "1237240",
    "end": "1239640"
  },
  {
    "text": "or 10 minutes or so to talk about this",
    "start": "1239640",
    "end": "1241559"
  },
  {
    "text": "but the level of frustration we",
    "start": "1241559",
    "end": "1242960"
  },
  {
    "text": "accumulated the lack of insights into",
    "start": "1242960",
    "end": "1245159"
  },
  {
    "text": "someone else's infrastructure was",
    "start": "1245159",
    "end": "1247039"
  },
  {
    "text": "probably way too high to even mention",
    "start": "1247039",
    "end": "1249039"
  },
  {
    "text": "what did we learn though API server logs",
    "start": "1249039",
    "end": "1251520"
  },
  {
    "text": "are Priceless and people always forget",
    "start": "1251520",
    "end": "1253600"
  },
  {
    "text": "about looking into those locks and they",
    "start": "1253600",
    "end": "1255400"
  },
  {
    "text": "expect all of the locks to come from",
    "start": "1255400",
    "end": "1257039"
  },
  {
    "text": "other places since we talked about logs",
    "start": "1257039",
    "end": "1259640"
  },
  {
    "text": "depper uses open Telemetry and zipin",
    "start": "1259640",
    "end": "1261840"
  },
  {
    "text": "protocols for the distributed traces",
    "start": "1261840",
    "end": "1263840"
  },
  {
    "text": "open Telemetry is the industry standard",
    "start": "1263840",
    "end": "1266080"
  },
  {
    "text": "and is the recommended Trace protocol to",
    "start": "1266080",
    "end": "1267760"
  },
  {
    "text": "use now most observability tools support",
    "start": "1267760",
    "end": "1270360"
  },
  {
    "text": "otel and this includes Google Cloud",
    "start": "1270360",
    "end": "1272440"
  },
  {
    "text": "operations AWS x-ray Azure monitor NE",
    "start": "1272440",
    "end": "1275559"
  },
  {
    "text": "Relic data dog Zipkin Jager signal",
    "start": "1275559",
    "end": "1278360"
  },
  {
    "text": "effects and many different more the",
    "start": "1278360",
    "end": "1280640"
  },
  {
    "text": "diagram that you see here pretty much",
    "start": "1280640",
    "end": "1282480"
  },
  {
    "text": "demonstrates how Dapper using open",
    "start": "1282480",
    "end": "1284720"
  },
  {
    "text": "Telemetry and zip protocols integrates",
    "start": "1284720",
    "end": "1287159"
  },
  {
    "text": "with multiple observ ability tools and",
    "start": "1287159",
    "end": "1289440"
  },
  {
    "text": "these scenarios can be utilized for so",
    "start": "1289440",
    "end": "1291760"
  },
  {
    "text": "many different things like tracing",
    "start": "1291760",
    "end": "1294080"
  },
  {
    "text": "service invocation pops up apis you can",
    "start": "1294080",
    "end": "1297440"
  },
  {
    "text": "flow Trace contexts between services",
    "start": "1297440",
    "end": "1299600"
  },
  {
    "text": "that use these apis and there are",
    "start": "1299600",
    "end": "1301279"
  },
  {
    "text": "commonly two scenarios for how tracing",
    "start": "1301279",
    "end": "1303159"
  },
  {
    "text": "is utilized either Dapper generates a",
    "start": "1303159",
    "end": "1305600"
  },
  {
    "text": "trace context you propagate and Trace",
    "start": "1305600",
    "end": "1307600"
  },
  {
    "text": "context to another service or you can",
    "start": "1307600",
    "end": "1309760"
  },
  {
    "text": "generate a trace context and Dapper",
    "start": "1309760",
    "end": "1311400"
  },
  {
    "text": "propagates a trace context to a service",
    "start": "1311400",
    "end": "1313720"
  },
  {
    "text": "either approach doesn't really matter as",
    "start": "1313720",
    "end": "1315360"
  },
  {
    "text": "long as you use these now if you have",
    "start": "1315360",
    "end": "1317640"
  },
  {
    "text": "any question questions I'll be more than",
    "start": "1317640",
    "end": "1318840"
  },
  {
    "text": "happy to take them and I'll be here to",
    "start": "1318840",
    "end": "1320559"
  },
  {
    "text": "assist this was definitely something",
    "start": "1320559",
    "end": "1322760"
  },
  {
    "text": "super super interesting at least in my",
    "start": "1322760",
    "end": "1324400"
  },
  {
    "text": "opinion to learn from going through the",
    "start": "1324400",
    "end": "1326480"
  },
  {
    "text": "trenches friends I'll be hanging around",
    "start": "1326480",
    "end": "1328760"
  },
  {
    "text": "to answer questions but please make sure",
    "start": "1328760",
    "end": "1331520"
  },
  {
    "text": "to also join the Discord Channel Dappers",
    "start": "1331520",
    "end": "1334039"
  },
  {
    "text": "Community is super wide super open and",
    "start": "1334039",
    "end": "1336640"
  },
  {
    "text": "they're more than happy to assist in",
    "start": "1336640",
    "end": "1338760"
  },
  {
    "text": "whatever questions you might have happy",
    "start": "1338760",
    "end": "1341000"
  },
  {
    "text": "Dapper Day and let's keep the",
    "start": "1341000",
    "end": "1342320"
  },
  {
    "text": "conversation going as I told you there's",
    "start": "1342320",
    "end": "1344200"
  },
  {
    "text": "an active community on Discord",
    "start": "1344200",
    "end": "1346360"
  },
  {
    "text": "supporting helping and listening to your",
    "start": "1346360",
    "end": "1348320"
  },
  {
    "text": "pain points requirements ideas whatever",
    "start": "1348320",
    "end": "1350840"
  },
  {
    "text": "that they are I urge you to join deers",
    "start": "1350840",
    "end": "1352760"
  },
  {
    "text": "community on Discord thank you all for",
    "start": "1352760",
    "end": "1354880"
  },
  {
    "text": "streaming in and happy deer day",
    "start": "1354880",
    "end": "1359559"
  }
]