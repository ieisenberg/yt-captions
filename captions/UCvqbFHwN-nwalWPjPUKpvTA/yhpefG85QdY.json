[
  {
    "text": "so I'm giving this talk on behalf of",
    "start": "719",
    "end": "2820"
  },
  {
    "text": "myself and Dr atana satanasov he's my",
    "start": "2820",
    "end": "6060"
  },
  {
    "text": "lead engineer on our team",
    "start": "6060",
    "end": "9919"
  },
  {
    "text": "initially we had been looking at a",
    "start": "10320",
    "end": "12840"
  },
  {
    "text": "in-node workplace",
    "start": "12840",
    "end": "15920"
  },
  {
    "text": "has a big impact for many workloads",
    "start": "17520",
    "end": "19320"
  },
  {
    "text": "including Cloud native applications in",
    "start": "19320",
    "end": "21660"
  },
  {
    "text": "this talk we'll look at some examples",
    "start": "21660",
    "end": "23039"
  },
  {
    "text": "from the domain of cloud native",
    "start": "23039",
    "end": "24359"
  },
  {
    "text": "benchmarking HPC Telco and discuss what",
    "start": "24359",
    "end": "26820"
  },
  {
    "text": "questions tools and techniques can help",
    "start": "26820",
    "end": "28680"
  },
  {
    "text": "with this problem",
    "start": "28680",
    "end": "31279"
  },
  {
    "text": "so first I'm going to flash up this",
    "start": "32040",
    "end": "33600"
  },
  {
    "text": "picture",
    "start": "33600",
    "end": "35219"
  },
  {
    "text": "um balzattanus and I because we started",
    "start": "35219",
    "end": "37380"
  },
  {
    "text": "off in the HPC World realized that the",
    "start": "37380",
    "end": "39960"
  },
  {
    "text": "current set of couplet default managers",
    "start": "39960",
    "end": "41940"
  },
  {
    "text": "are potentially leaving a lot of",
    "start": "41940",
    "end": "43200"
  },
  {
    "text": "performance on the table",
    "start": "43200",
    "end": "45600"
  },
  {
    "text": "they do not allow the level of fine",
    "start": "45600",
    "end": "47040"
  },
  {
    "text": "grain control we are accustomed to an",
    "start": "47040",
    "end": "48600"
  },
  {
    "text": "HPC",
    "start": "48600",
    "end": "50280"
  },
  {
    "text": "we are currently two to three weeks away",
    "start": "50280",
    "end": "52800"
  },
  {
    "text": "from releasing the CPU control plane",
    "start": "52800",
    "end": "54660"
  },
  {
    "text": "which you can talk to me about later and",
    "start": "54660",
    "end": "57059"
  },
  {
    "text": "to allow users to mix shared and pin",
    "start": "57059",
    "end": "59039"
  },
  {
    "text": "cores and to have new affinities to",
    "start": "59039",
    "end": "60780"
  },
  {
    "text": "workloads",
    "start": "60780",
    "end": "63260"
  },
  {
    "text": "we will later add in isolated course as",
    "start": "64260",
    "end": "66240"
  },
  {
    "text": "an option as well",
    "start": "66240",
    "end": "68280"
  },
  {
    "text": "these examples come from our experience",
    "start": "68280",
    "end": "70260"
  },
  {
    "text": "in attempting to Benchmark new hardware",
    "start": "70260",
    "end": "72119"
  },
  {
    "text": "platforms that Intel using this control",
    "start": "72119",
    "end": "73860"
  },
  {
    "text": "plane",
    "start": "73860",
    "end": "74820"
  },
  {
    "text": "and you know now that we had this fancy",
    "start": "74820",
    "end": "77520"
  },
  {
    "text": "new tool we needed to prove that it was",
    "start": "77520",
    "end": "79320"
  },
  {
    "text": "useful",
    "start": "79320",
    "end": "81119"
  },
  {
    "text": "so benchmarking server Platforms in HPC",
    "start": "81119",
    "end": "83460"
  },
  {
    "text": "is a custom we want numbers",
    "start": "83460",
    "end": "85920"
  },
  {
    "text": "so we had a lot of confusion on how to",
    "start": "85920",
    "end": "87720"
  },
  {
    "text": "do these benchmarks",
    "start": "87720",
    "end": "89820"
  },
  {
    "text": "so we started looking for toolkits",
    "start": "89820",
    "end": "93500"
  },
  {
    "text": "so first do we want to execute manually",
    "start": "93720",
    "end": "95700"
  },
  {
    "text": "no",
    "start": "95700",
    "end": "97500"
  },
  {
    "text": "we want reproduction to be simple",
    "start": "97500",
    "end": "99180"
  },
  {
    "text": "engineers get things wrong including us",
    "start": "99180",
    "end": "101460"
  },
  {
    "text": "and we wanted to automate",
    "start": "101460",
    "end": "104720"
  },
  {
    "text": "batch tools play a big role to increase",
    "start": "105119",
    "end": "107460"
  },
  {
    "text": "the ROI of benchmarking we wanted to",
    "start": "107460",
    "end": "109740"
  },
  {
    "text": "enable users to study application",
    "start": "109740",
    "end": "111299"
  },
  {
    "text": "regressions and save everyone time",
    "start": "111299",
    "end": "114860"
  },
  {
    "text": "so we then had to go and hunt down tools",
    "start": "115439",
    "end": "118140"
  },
  {
    "text": "we wanted to we could use batch scripts",
    "start": "118140",
    "end": "120600"
  },
  {
    "text": "but that seemed hard",
    "start": "120600",
    "end": "121979"
  },
  {
    "text": "we also wanted to be able to schedule",
    "start": "121979",
    "end": "123540"
  },
  {
    "text": "Benchmark execution maybe similar to",
    "start": "123540",
    "end": "125399"
  },
  {
    "text": "learn Cloud native queuing Frameworks",
    "start": "125399",
    "end": "127740"
  },
  {
    "text": "can be a valid alternative",
    "start": "127740",
    "end": "129360"
  },
  {
    "text": "we used ansible to provision underneath",
    "start": "129360",
    "end": "131400"
  },
  {
    "text": "in benchmarking we also used ansible to",
    "start": "131400",
    "end": "134160"
  },
  {
    "text": "handle workload deployment validation of",
    "start": "134160",
    "end": "136379"
  },
  {
    "text": "the workload properly executed and",
    "start": "136379",
    "end": "138360"
  },
  {
    "text": "automatic error detection logs",
    "start": "138360",
    "end": "140819"
  },
  {
    "text": "further benchmarks as well to handle",
    "start": "140819",
    "end": "143580"
  },
  {
    "text": "handle the post processing the benchmark",
    "start": "143580",
    "end": "147440"
  },
  {
    "text": "so now we have the tools",
    "start": "147959",
    "end": "149700"
  },
  {
    "text": "now we needed to figure out what",
    "start": "149700",
    "end": "151260"
  },
  {
    "text": "benchmarks we were using we could use",
    "start": "151260",
    "end": "153180"
  },
  {
    "text": "synthetic benchmarks and evaluate system",
    "start": "153180",
    "end": "154739"
  },
  {
    "text": "performance but this does not well",
    "start": "154739",
    "end": "156420"
  },
  {
    "text": "represent the workloads we are running",
    "start": "156420",
    "end": "157800"
  },
  {
    "text": "in the cloud today",
    "start": "157800",
    "end": "159720"
  },
  {
    "text": "Cloud users have complex applications",
    "start": "159720",
    "end": "161519"
  },
  {
    "text": "consisting of multiple microservices",
    "start": "161519",
    "end": "163260"
  },
  {
    "text": "connected over the network",
    "start": "163260",
    "end": "165000"
  },
  {
    "text": "there may also be availability",
    "start": "165000",
    "end": "166739"
  },
  {
    "text": "requirements such as P95 latency access",
    "start": "166739",
    "end": "168959"
  },
  {
    "text": "to services",
    "start": "168959",
    "end": "171800"
  },
  {
    "text": "so we did some research on workloads",
    "start": "173700",
    "end": "175440"
  },
  {
    "text": "that could be more realistic the",
    "start": "175440",
    "end": "176700"
  },
  {
    "text": "examples are still rather simple Cloud",
    "start": "176700",
    "end": "178379"
  },
  {
    "text": "applications at the end let's discuss",
    "start": "178379",
    "end": "180599"
  },
  {
    "text": "what other benchmarks people are using",
    "start": "180599",
    "end": "181980"
  },
  {
    "text": "to evaluate Cloud systems so this will",
    "start": "181980",
    "end": "183480"
  },
  {
    "text": "be a question I actually pose to you on",
    "start": "183480",
    "end": "184920"
  },
  {
    "text": "what you guys are doing",
    "start": "184920",
    "end": "187500"
  },
  {
    "text": "the first workload we looked at is the",
    "start": "187500",
    "end": "189660"
  },
  {
    "text": "microservice based uh Google",
    "start": "189660",
    "end": "192060"
  },
  {
    "text": "microservices demo this application is",
    "start": "192060",
    "end": "194640"
  },
  {
    "text": "the classic three-tier app including a",
    "start": "194640",
    "end": "197459"
  },
  {
    "text": "front-end to receive the request from",
    "start": "197459",
    "end": "198840"
  },
  {
    "text": "the clients business logic services and",
    "start": "198840",
    "end": "200640"
  },
  {
    "text": "a database store where we store the",
    "start": "200640",
    "end": "202860"
  },
  {
    "text": "transactions for the customers in our",
    "start": "202860",
    "end": "204720"
  },
  {
    "text": "benchmarking we evaluated the throughput",
    "start": "204720",
    "end": "206340"
  },
  {
    "text": "of such",
    "start": "206340",
    "end": "207900"
  },
  {
    "text": "such a system on a distributed system",
    "start": "207900",
    "end": "209819"
  },
  {
    "text": "with four machines and only four",
    "start": "209819",
    "end": "211980"
  },
  {
    "text": "machines replace a load generator on a",
    "start": "211980",
    "end": "214620"
  },
  {
    "text": "separate machine and we had three worker",
    "start": "214620",
    "end": "216239"
  },
  {
    "text": "machines to front-end business logic and",
    "start": "216239",
    "end": "218040"
  },
  {
    "text": "transactions our goal was to optimize",
    "start": "218040",
    "end": "220140"
  },
  {
    "text": "the throughput of such systems under the",
    "start": "220140",
    "end": "221940"
  },
  {
    "text": "given latency constraints",
    "start": "221940",
    "end": "225000"
  },
  {
    "text": "the second Benchmark we used was the",
    "start": "225000",
    "end": "226860"
  },
  {
    "text": "Death Star bench hotel reservation",
    "start": "226860",
    "end": "228299"
  },
  {
    "text": "system again this is a microservice",
    "start": "228299",
    "end": "230519"
  },
  {
    "text": "based software platform that provides a",
    "start": "230519",
    "end": "232739"
  },
  {
    "text": "search recommendation capabilities for",
    "start": "232739",
    "end": "234480"
  },
  {
    "text": "hotels we see here a clear split in",
    "start": "234480",
    "end": "237420"
  },
  {
    "text": "three tiers",
    "start": "237420",
    "end": "238799"
  },
  {
    "text": "the difference in this case was that we",
    "start": "238799",
    "end": "240659"
  },
  {
    "text": "had separate databases for different",
    "start": "240659",
    "end": "241980"
  },
  {
    "text": "parts of the data model of the",
    "start": "241980",
    "end": "243420"
  },
  {
    "text": "application indication caching layer",
    "start": "243420",
    "end": "246239"
  },
  {
    "text": "it turned out that these two",
    "start": "246239",
    "end": "247440"
  },
  {
    "text": "applications had very different scaling",
    "start": "247440",
    "end": "249239"
  },
  {
    "text": "behavior and reacted very different to",
    "start": "249239",
    "end": "250739"
  },
  {
    "text": "pod placement strategies on the cluster",
    "start": "250739",
    "end": "253620"
  },
  {
    "text": "hotel reservation had a clear bottleneck",
    "start": "253620",
    "end": "255360"
  },
  {
    "text": "of the database components and if you",
    "start": "255360",
    "end": "257100"
  },
  {
    "text": "run just one instance of the database",
    "start": "257100",
    "end": "258540"
  },
  {
    "text": "that if it turned out to be a bottleneck",
    "start": "258540",
    "end": "261479"
  },
  {
    "text": "best effort Qs the business logic was",
    "start": "261479",
    "end": "265380"
  },
  {
    "text": "able to handle the increasing number of",
    "start": "265380",
    "end": "266820"
  },
  {
    "text": "front front end requests",
    "start": "266820",
    "end": "270139"
  },
  {
    "text": "we observed hold on",
    "start": "270479",
    "end": "274040"
  },
  {
    "text": "to fix the bottleneck issue rate we",
    "start": "276060",
    "end": "277979"
  },
  {
    "text": "executed two instances of the workload",
    "start": "277979",
    "end": "279660"
  },
  {
    "text": "with two database layers still this was",
    "start": "279660",
    "end": "281580"
  },
  {
    "text": "not the final optimization we also had",
    "start": "281580",
    "end": "283800"
  },
  {
    "text": "dual Nicks",
    "start": "283800",
    "end": "285360"
  },
  {
    "text": "so we further isolated each workload",
    "start": "285360",
    "end": "288180"
  },
  {
    "text": "instance on its own socket with careful",
    "start": "288180",
    "end": "290040"
  },
  {
    "text": "network configuration we were using",
    "start": "290040",
    "end": "291360"
  },
  {
    "text": "multis but it was very hard coded so",
    "start": "291360",
    "end": "293580"
  },
  {
    "text": "this isn't available easily today",
    "start": "293580",
    "end": "295919"
  },
  {
    "text": "this is hard",
    "start": "295919",
    "end": "297419"
  },
  {
    "text": "for Google microservices the best",
    "start": "297419",
    "end": "299580"
  },
  {
    "text": "quality",
    "start": "299580",
    "end": "300720"
  },
  {
    "text": "the best effort quality of service did",
    "start": "300720",
    "end": "302639"
  },
  {
    "text": "not provide us any benefits the",
    "start": "302639",
    "end": "304259"
  },
  {
    "text": "workloads suffered under Noisy Neighbor",
    "start": "304259",
    "end": "305699"
  },
  {
    "text": "problem which we managed to fix by",
    "start": "305699",
    "end": "307199"
  },
  {
    "text": "pinning",
    "start": "307199",
    "end": "309000"
  },
  {
    "text": "of the services and again isolating on a",
    "start": "309000",
    "end": "311940"
  },
  {
    "text": "separate socket all unused cores on the",
    "start": "311940",
    "end": "314220"
  },
  {
    "text": "socket we used the remaining group of",
    "start": "314220",
    "end": "315720"
  },
  {
    "text": "services which were not sensitive",
    "start": "315720",
    "end": "317880"
  },
  {
    "text": "to the cash related issues",
    "start": "317880",
    "end": "321259"
  },
  {
    "text": "and so this particular piece is a",
    "start": "323220",
    "end": "326160"
  },
  {
    "text": "summary of why extending these",
    "start": "326160",
    "end": "327419"
  },
  {
    "text": "Primitives is so important so we went",
    "start": "327419",
    "end": "329160"
  },
  {
    "text": "from a 40 utilization to a 78",
    "start": "329160",
    "end": "331320"
  },
  {
    "text": "utilization",
    "start": "331320",
    "end": "333020"
  },
  {
    "text": "this was true with both of them both of",
    "start": "333020",
    "end": "335220"
  },
  {
    "text": "them had similar performances one was",
    "start": "335220",
    "end": "336780"
  },
  {
    "text": "not better than the other",
    "start": "336780",
    "end": "338660"
  },
  {
    "text": "and we really want to be closer to 90 so",
    "start": "338660",
    "end": "342900"
  },
  {
    "text": "there's probably more we could do",
    "start": "342900",
    "end": "343979"
  },
  {
    "text": "regarding the database as the bottleneck",
    "start": "343979",
    "end": "346440"
  },
  {
    "text": "we're not sure what other optimizations",
    "start": "346440",
    "end": "349500"
  },
  {
    "text": "we can do to get that core utilization",
    "start": "349500",
    "end": "351360"
  },
  {
    "text": "up",
    "start": "351360",
    "end": "353719"
  },
  {
    "text": "these two workloads are still very far",
    "start": "356100",
    "end": "357660"
  },
  {
    "text": "from actual applications and what the",
    "start": "357660",
    "end": "359520"
  },
  {
    "text": "users Deploy on the systems if we look",
    "start": "359520",
    "end": "361199"
  },
  {
    "text": "at some examples genomics AI HPC",
    "start": "361199",
    "end": "364139"
  },
  {
    "text": "and apps and more users start to use the",
    "start": "364139",
    "end": "367500"
  },
  {
    "text": "cloud platform to run those workloads",
    "start": "367500",
    "end": "370320"
  },
  {
    "text": "these applications are performance",
    "start": "370320",
    "end": "371880"
  },
  {
    "text": "critical and usually they are optimized",
    "start": "371880",
    "end": "373440"
  },
  {
    "text": "for certain place for a certain",
    "start": "373440",
    "end": "374639"
  },
  {
    "text": "placement model HPC and AI applications",
    "start": "374639",
    "end": "376800"
  },
  {
    "text": "apply pinning and affinity",
    "start": "376800",
    "end": "379139"
  },
  {
    "text": "configuration mechanism to get out the",
    "start": "379139",
    "end": "381419"
  },
  {
    "text": "max available compute from the hardware",
    "start": "381419",
    "end": "384000"
  },
  {
    "text": "So currently a lot of these applications",
    "start": "384000",
    "end": "385740"
  },
  {
    "text": "are still using slurm that includes",
    "start": "385740",
    "end": "387419"
  },
  {
    "text": "internally Intel for fine grain",
    "start": "387419",
    "end": "388919"
  },
  {
    "text": "performance",
    "start": "388919",
    "end": "391280"
  },
  {
    "text": "last but not least we are also looking",
    "start": "392039",
    "end": "394560"
  },
  {
    "text": "to measure",
    "start": "394560",
    "end": "395940"
  },
  {
    "text": "uh",
    "start": "395940",
    "end": "397500"
  },
  {
    "text": "other things so it's insufficient to",
    "start": "397500",
    "end": "400380"
  },
  {
    "text": "analyze them on one to two nodes we",
    "start": "400380",
    "end": "402000"
  },
  {
    "text": "really do we do this on for four but",
    "start": "402000",
    "end": "404880"
  },
  {
    "text": "it's still very far from reality the",
    "start": "404880",
    "end": "407160"
  },
  {
    "text": "customers are running on hundreds or",
    "start": "407160",
    "end": "408840"
  },
  {
    "text": "thousands of machines",
    "start": "408840",
    "end": "411680"
  },
  {
    "text": "so what can we measure we're starting to",
    "start": "412860",
    "end": "414600"
  },
  {
    "text": "look at throughput latency throughput",
    "start": "414600",
    "end": "416639"
  },
  {
    "text": "under latency constraints but would also",
    "start": "416639",
    "end": "418319"
  },
  {
    "text": "like to understand how these metrics",
    "start": "418319",
    "end": "419639"
  },
  {
    "text": "behave at scale does latency go down if",
    "start": "419639",
    "end": "421919"
  },
  {
    "text": "we add pods or do we increase the",
    "start": "421919",
    "end": "423419"
  },
  {
    "text": "throughput what happens also with the",
    "start": "423419",
    "end": "425400"
  },
  {
    "text": "system are you using all the available",
    "start": "425400",
    "end": "426660"
  },
  {
    "text": "resources so similar to Prior we're not",
    "start": "426660",
    "end": "429060"
  },
  {
    "text": "using all the compute available",
    "start": "429060",
    "end": "432020"
  },
  {
    "text": "if not we can pack multiple workload",
    "start": "432240",
    "end": "434100"
  },
  {
    "text": "instances workloads on the given VMS",
    "start": "434100",
    "end": "435840"
  },
  {
    "text": "what about the memory are we accessing",
    "start": "435840",
    "end": "437699"
  },
  {
    "text": "memory in an optimal way or are we",
    "start": "437699",
    "end": "439500"
  },
  {
    "text": "wasting cycles due to the wrong",
    "start": "439500",
    "end": "440699"
  },
  {
    "text": "placement",
    "start": "440699",
    "end": "443060"
  },
  {
    "text": "um",
    "start": "443340",
    "end": "443940"
  },
  {
    "text": "that's about where we are I have some",
    "start": "443940",
    "end": "445979"
  },
  {
    "text": "questions on what people are using for",
    "start": "445979",
    "end": "447180"
  },
  {
    "text": "benchmarks if they have better ones than",
    "start": "447180",
    "end": "449039"
  },
  {
    "text": "what we were using but this is the best",
    "start": "449039",
    "end": "450960"
  },
  {
    "text": "we could find",
    "start": "450960",
    "end": "453500"
  },
  {
    "text": "is anyone using gutter benchmarks",
    "start": "455699",
    "end": "459380"
  },
  {
    "text": "that's a no okay",
    "start": "460680",
    "end": "463819"
  },
  {
    "text": "okay and that's the talk so do we have",
    "start": "466139",
    "end": "467699"
  },
  {
    "text": "any questions",
    "start": "467699",
    "end": "469620"
  },
  {
    "text": "thank you",
    "start": "469620",
    "end": "472099"
  },
  {
    "text": "[Applause]",
    "start": "473430",
    "end": "476740"
  },
  {
    "text": "hi very nice talk um I have a multi-part",
    "start": "482819",
    "end": "486539"
  },
  {
    "text": "question when when you're running your",
    "start": "486539",
    "end": "488699"
  },
  {
    "text": "benchmarks are the nodes that you're",
    "start": "488699",
    "end": "491160"
  },
  {
    "text": "running on Virtual instances or you're",
    "start": "491160",
    "end": "493380"
  },
  {
    "text": "running on bare metal we're running on",
    "start": "493380",
    "end": "494759"
  },
  {
    "text": "bare metal okay",
    "start": "494759",
    "end": "496440"
  },
  {
    "text": "do you have plans for running on",
    "start": "496440",
    "end": "499979"
  },
  {
    "text": "virtualized nodes and if so how do you",
    "start": "499979",
    "end": "502440"
  },
  {
    "text": "plan to manage the core placement with",
    "start": "502440",
    "end": "505080"
  },
  {
    "text": "the hypervisor",
    "start": "505080",
    "end": "507060"
  },
  {
    "text": "so that's a different question so it",
    "start": "507060",
    "end": "508860"
  },
  {
    "text": "depends on the hypervisor so we need to",
    "start": "508860",
    "end": "510539"
  },
  {
    "text": "know more about what are users are doing",
    "start": "510539",
    "end": "512459"
  },
  {
    "text": "so if people are using something like",
    "start": "512459",
    "end": "514080"
  },
  {
    "text": "mesos with with virtual couplet that's",
    "start": "514080",
    "end": "517440"
  },
  {
    "text": "going to look a little differently than",
    "start": "517440",
    "end": "518640"
  },
  {
    "text": "if they're doing it in a VMware type",
    "start": "518640",
    "end": "520380"
  },
  {
    "text": "platform so we have we have to know more",
    "start": "520380",
    "end": "523080"
  },
  {
    "text": "about what we're going to be running on",
    "start": "523080",
    "end": "524219"
  },
  {
    "text": "that is in the plan we just haven't",
    "start": "524219",
    "end": "525660"
  },
  {
    "text": "gotten there yet",
    "start": "525660",
    "end": "526920"
  },
  {
    "text": "oh thank you",
    "start": "526920",
    "end": "529519"
  },
  {
    "text": "any other questions",
    "start": "531480",
    "end": "534560"
  },
  {
    "text": "uh this kind of goes along more with",
    "start": "542160",
    "end": "544260"
  },
  {
    "text": "your the benchmarking questions I'm more",
    "start": "544260",
    "end": "546660"
  },
  {
    "text": "putting this I guess to the kubernetes",
    "start": "546660",
    "end": "548399"
  },
  {
    "text": "community but I was wondering how uh",
    "start": "548399",
    "end": "551940"
  },
  {
    "text": "what kind of infrastructure is in place",
    "start": "551940",
    "end": "554339"
  },
  {
    "text": "for performance testing for kubernetes",
    "start": "554339",
    "end": "556500"
  },
  {
    "text": "and if like you I guess it's just",
    "start": "556500",
    "end": "559500"
  },
  {
    "text": "because for is it or you're shaking your",
    "start": "559500",
    "end": "562080"
  },
  {
    "text": "head but",
    "start": "562080",
    "end": "563580"
  },
  {
    "text": "that was the problem right is there",
    "start": "563580",
    "end": "565380"
  },
  {
    "text": "isn't a lot in place so there's the",
    "start": "565380",
    "end": "566940"
  },
  {
    "text": "Google microservices and there's that",
    "start": "566940",
    "end": "568440"
  },
  {
    "text": "star bench and that's about the extent",
    "start": "568440",
    "end": "570899"
  },
  {
    "text": "as far as that sort of workload there",
    "start": "570899",
    "end": "573120"
  },
  {
    "text": "are people who've run linpak across",
    "start": "573120",
    "end": "575040"
  },
  {
    "text": "kubernetes but those are very",
    "start": "575040",
    "end": "577740"
  },
  {
    "text": "targeted uh",
    "start": "577740",
    "end": "580140"
  },
  {
    "text": "their targeted benchmarks They're Not",
    "start": "580140",
    "end": "582120"
  },
  {
    "text": "Meant For Real Performance for your",
    "start": "582120",
    "end": "584339"
  },
  {
    "text": "applications",
    "start": "584339",
    "end": "586700"
  },
  {
    "text": "I cannot also because I used to work on",
    "start": "588060",
    "end": "590220"
  },
  {
    "text": "scalability of kubernetes there are",
    "start": "590220",
    "end": "592800"
  },
  {
    "text": "there are also benchmarks ran for",
    "start": "592800",
    "end": "594779"
  },
  {
    "text": "evaluating the supported scale of",
    "start": "594779",
    "end": "597060"
  },
  {
    "text": "kubernetes workloads and but that's",
    "start": "597060",
    "end": "599760"
  },
  {
    "text": "probably that's not running real",
    "start": "599760",
    "end": "601200"
  },
  {
    "text": "applications that's what Marlow showed",
    "start": "601200",
    "end": "602700"
  },
  {
    "text": "here it's more like uh",
    "start": "602700",
    "end": "605040"
  },
  {
    "text": "um you create a large cluster right",
    "start": "605040",
    "end": "606600"
  },
  {
    "text": "after the nodes and this is being done",
    "start": "606600",
    "end": "608399"
  },
  {
    "text": "regularly and then like try to run",
    "start": "608399",
    "end": "610440"
  },
  {
    "text": "synthetic but very fully synthetic cloud",
    "start": "610440",
    "end": "612240"
  },
  {
    "text": "like throw lots of containers on and",
    "start": "612240",
    "end": "614100"
  },
  {
    "text": "this sort of stuff and there are also",
    "start": "614100",
    "end": "615600"
  },
  {
    "text": "some benchmarks that like test other",
    "start": "615600",
    "end": "617580"
  },
  {
    "text": "dimensions but like 100 node uh",
    "start": "617580",
    "end": "619980"
  },
  {
    "text": "configuration but you try to for example",
    "start": "619980",
    "end": "621779"
  },
  {
    "text": "throw a very significant pot density or",
    "start": "621779",
    "end": "624120"
  },
  {
    "text": "the issue the network traffic but these",
    "start": "624120",
    "end": "626459"
  },
  {
    "text": "are very synthetic benchmarks",
    "start": "626459",
    "end": "629899"
  },
  {
    "text": "any other questions",
    "start": "631680",
    "end": "634580"
  },
  {
    "text": "I was wondering if you were also",
    "start": "635040",
    "end": "637620"
  },
  {
    "text": "thinking about multi-tenancy like",
    "start": "637620",
    "end": "639540"
  },
  {
    "text": "running multiple applications of",
    "start": "639540",
    "end": "642000"
  },
  {
    "text": "different nature so that",
    "start": "642000",
    "end": "645860"
  },
  {
    "text": "that there's no way today to guarantee",
    "start": "652019",
    "end": "654480"
  },
  {
    "text": "your tenants going to behave in with",
    "start": "654480",
    "end": "655800"
  },
  {
    "text": "regards to bandwidth as an example right",
    "start": "655800",
    "end": "657959"
  },
  {
    "text": "so you actually are going to either have",
    "start": "657959",
    "end": "660300"
  },
  {
    "text": "to have something working externally and",
    "start": "660300",
    "end": "663300"
  },
  {
    "text": "that's checking to make sure things are",
    "start": "663300",
    "end": "664860"
  },
  {
    "text": "behaving and then either throttling it",
    "start": "664860",
    "end": "666660"
  },
  {
    "text": "or throwing off the node or you have to",
    "start": "666660",
    "end": "669360"
  },
  {
    "text": "have some assumption that if your band",
    "start": "669360",
    "end": "671760"
  },
  {
    "text": "you know your latency starts to go down",
    "start": "671760",
    "end": "673440"
  },
  {
    "text": "or your throughput isn't what you expect",
    "start": "673440",
    "end": "674940"
  },
  {
    "text": "that you're going to be rescheduling",
    "start": "674940",
    "end": "676680"
  },
  {
    "text": "that particular service",
    "start": "676680",
    "end": "679700"
  },
  {
    "text": "so that has to do with yeah so that's",
    "start": "680040",
    "end": "681899"
  },
  {
    "text": "really on your scheduling side that's",
    "start": "681899",
    "end": "683339"
  },
  {
    "text": "less on your your node resources side",
    "start": "683339",
    "end": "686160"
  },
  {
    "text": "um but you still need something on their",
    "start": "686160",
    "end": "687540"
  },
  {
    "text": "monitoring",
    "start": "687540",
    "end": "689880"
  },
  {
    "text": "does that answer",
    "start": "689880",
    "end": "692480"
  },
  {
    "text": "any other questions",
    "start": "695579",
    "end": "698420"
  },
  {
    "text": "um we're just following up on that",
    "start": "699420",
    "end": "700680"
  },
  {
    "text": "networking piece I mean network is a",
    "start": "700680",
    "end": "703680"
  },
  {
    "text": "compressible resource like CPU right",
    "start": "703680",
    "end": "705720"
  },
  {
    "text": "right you can you can give it to a part",
    "start": "705720",
    "end": "709260"
  },
  {
    "text": "and you can take it back yep and there",
    "start": "709260",
    "end": "711420"
  },
  {
    "text": "are mechanisms at the like Linux Network",
    "start": "711420",
    "end": "713820"
  },
  {
    "text": "Linux in the news stack to set these",
    "start": "713820",
    "end": "716940"
  },
  {
    "text": "things up I'd like to to basically set",
    "start": "716940",
    "end": "719399"
  },
  {
    "text": "up fair sharing between things so you",
    "start": "719399",
    "end": "721740"
  },
  {
    "text": "don't really necessarily have to have",
    "start": "721740",
    "end": "723899"
  },
  {
    "text": "like an external component to monitor",
    "start": "723899",
    "end": "726180"
  },
  {
    "text": "traffic you can just set them up similar",
    "start": "726180",
    "end": "728700"
  },
  {
    "text": "to where you set up",
    "start": "728700",
    "end": "730140"
  },
  {
    "text": "sharing for CPU course maybe but you",
    "start": "730140",
    "end": "733200"
  },
  {
    "text": "still have Jitter so when you're looking",
    "start": "733200",
    "end": "735180"
  },
  {
    "text": "at HPC applications you're assuming not",
    "start": "735180",
    "end": "737700"
  },
  {
    "text": "having Jitter because you don't have",
    "start": "737700",
    "end": "739140"
  },
  {
    "text": "other workloads but you do end up with",
    "start": "739140",
    "end": "740880"
  },
  {
    "text": "Jitter if it's switching back and forth",
    "start": "740880",
    "end": "742260"
  },
  {
    "text": "between your two",
    "start": "742260",
    "end": "744000"
  },
  {
    "text": "processes",
    "start": "744000",
    "end": "745800"
  },
  {
    "text": "it mostly controls basically throughput",
    "start": "745800",
    "end": "748079"
  },
  {
    "text": "but not but it doesn't it doesn't help",
    "start": "748079",
    "end": "750000"
  },
  {
    "text": "Jitter so you still end up with the",
    "start": "750000",
    "end": "751320"
  },
  {
    "text": "processing issue",
    "start": "751320",
    "end": "754040"
  },
  {
    "text": "thank you so much thank you",
    "start": "755519",
    "end": "758959"
  }
]