[
  {
    "text": "hi everyone um welcome to the flux Maino track uh today we're going to talk about",
    "start": "1040",
    "end": "8320"
  },
  {
    "text": "how you can use flux to amplify your getop setup with oci cosign I'm sunar I'm a flux and Flagger meno I work at",
    "start": "8320",
    "end": "15279"
  },
  {
    "text": "vok and my name is kingan I'm also a flux maintainer and I work at weave",
    "start": "15279",
    "end": "20680"
  },
  {
    "text": "Works um this is a maintainer track so I'm going to assume most of you are",
    "start": "20680",
    "end": "25720"
  },
  {
    "text": "familiar with flux for those of you who not let me do a quick inro flux is a CD",
    "start": "25720",
    "end": "31160"
  },
  {
    "text": "tool which lets you do get offs for your communities clusters what that means is you can deploy your applications in a",
    "start": "31160",
    "end": "37280"
  },
  {
    "text": "communities clust stor in a gitops fashion by storing them in a g repository or a hem",
    "start": "37280",
    "end": "42320"
  },
  {
    "text": "repository u c uh it's a cncf graduated project uh we achieved graduation status",
    "start": "42320",
    "end": "47640"
  },
  {
    "text": "last year uh we have multiple Integrations with terraform and AWS cloud formation and there is a free and",
    "start": "47640",
    "end": "53800"
  },
  {
    "text": "open source UI you can use as well to view your flux resources and we are being used by",
    "start": "53800",
    "end": "59920"
  },
  {
    "text": "companies like AWS and gitlab for their own giops offering as well as companies",
    "start": "59920",
    "end": "65360"
  },
  {
    "text": "like orang and DT for their uh 5G deployments um so good news everyone",
    "start": "65360",
    "end": "72280"
  },
  {
    "text": "flux finally has a g release uh yeah thank you",
    "start": "72280",
    "end": "78180"
  },
  {
    "text": "[Applause] uh please what that means is that the",
    "start": "78180",
    "end": "83640"
  },
  {
    "text": "core gitops apis that are the git repository API the customization API and the receiver API are all considered V1",
    "start": "83640",
    "end": "90840"
  },
  {
    "text": "which means that there are going to be no breaking changes so you're going to upgrade you can upgrade those apis whenever you want at your wish um flux",
    "start": "90840",
    "end": "98520"
  },
  {
    "text": "if you don't know is built of multiple components and multiple apis um we like",
    "start": "98520",
    "end": "103720"
  },
  {
    "text": "to evolve and iterate on these apis at our own fashion so that we can give the",
    "start": "103720",
    "end": "108960"
  },
  {
    "text": "best uh experience to you users what that means is certain apis are still not considered GA which means they might",
    "start": "108960",
    "end": "114880"
  },
  {
    "text": "have breaking changes for example Helm and oci Helm is considered close to ga we are working very hard on it It's",
    "start": "114880",
    "end": "121640"
  },
  {
    "text": "tricky to get it right because Helm is Helm um so it's it's in the pipeline uh",
    "start": "121640",
    "end": "128360"
  },
  {
    "text": "there's also oci repository which is a relatively new API uh which lets you fetch sources from oci Registries uh and",
    "start": "128360",
    "end": "136440"
  },
  {
    "text": "then there is the image automation uh apis and then there's also the notification API which lets you do all",
    "start": "136440",
    "end": "142040"
  },
  {
    "text": "sorts of alerting and uh updates to slacks and stuff okay so the basics of how with",
    "start": "142040",
    "end": "150239"
  },
  {
    "text": "flux uh you have your Helm repository crd you have your three crds that each map to a particular artifact in the",
    "start": "150239",
    "end": "156959"
  },
  {
    "text": "cluster the helm repository has an index. yaml uh Helm chart is an instance",
    "start": "156959",
    "end": "162840"
  },
  {
    "text": "of that chart so if you know about how Helm repositories worked historically that makes some sense it'll make more",
    "start": "162840",
    "end": "168120"
  },
  {
    "text": "sense as we go on the helm controller with the source controller together uh apply the helm release in the kubernetes",
    "start": "168120",
    "end": "175360"
  },
  {
    "text": "API and it's using the helm SDK under the hood so uh everything is compatible",
    "start": "175360",
    "end": "181400"
  },
  {
    "text": "with the helm CLI if you're using Helm already it's a seamless transition uh also the uh notification",
    "start": "181400",
    "end": "188440"
  },
  {
    "text": "controller is involved so that we can send alerts when things happen um and on",
    "start": "188440",
    "end": "193920"
  },
  {
    "text": "the right you see there are various places the charts can come from uh Harbor or uh GitHub or um that's chart",
    "start": "193920",
    "end": "202239"
  },
  {
    "text": "Museum on the bottom there so these are the resources uh the",
    "start": "202239",
    "end": "209280"
  },
  {
    "text": "helm repository resource on the left we said maps to that index. yaml in the Legacy version this is our Legacy Helm",
    "start": "209280",
    "end": "216360"
  },
  {
    "text": "release and repository uh so on the right you see the source ref points at that Helm",
    "start": "216360",
    "end": "222560"
  },
  {
    "text": "repository and we have selected a particular chart since um Legacy Helm",
    "start": "222560",
    "end": "228000"
  },
  {
    "text": "repositories can store many charts and many versions so we select a version we're using a sber wild card so that we",
    "start": "228000",
    "end": "234879"
  },
  {
    "text": "get the latest version within a range and there's uh other configuration that you can do but um this this is the",
    "start": "234879",
    "end": "243360"
  },
  {
    "text": "basics um so all of this has been working fine uh but we have continuously",
    "start": "243360",
    "end": "249599"
  },
  {
    "text": "run into issues by all of you is saying that Helm acts funky or there are",
    "start": "249599",
    "end": "255040"
  },
  {
    "text": "certain problems it's sometimes it's too slow and from what we have seen majority of these issues can be tracked down to",
    "start": "255040",
    "end": "261759"
  },
  {
    "text": "one root problem is the fact that index. DML just does not scale the approach of having to store all your charts or chart",
    "start": "261759",
    "end": "269160"
  },
  {
    "text": "information in one file is just not a very scalable approach um there are several reasons for this uh first of all",
    "start": "269160",
    "end": "276720"
  },
  {
    "text": "it's because it's a yam file and yaml paring is just slow uh Matt finina is a hel maintainer uh who recently did a",
    "start": "276720",
    "end": "283479"
  },
  {
    "text": "benchmark test comparing yaml paring and Json parsing uh and Json parsing was",
    "start": "283479",
    "end": "288520"
  },
  {
    "text": "significantly faster than yamel parsing um so you have to parse the entire",
    "start": "288520",
    "end": "294039"
  },
  {
    "text": "index. yaml file and then load it into memory and then look up the exact short entry that you care about that's a lot",
    "start": "294039",
    "end": "300160"
  },
  {
    "text": "of CPU and RAM that you are um spending on that um hel repositories can contain",
    "start": "300160",
    "end": "305520"
  },
  {
    "text": "hundreds of different charts and those charts can have thousands of different versions U that means you can end up",
    "start": "305520",
    "end": "311520"
  },
  {
    "text": "with a very very big index. yl file and there is no way to filter out the charts or the versions that you don't care",
    "start": "311520",
    "end": "317680"
  },
  {
    "text": "about so you end up downloading a lot of stuff that you just don't need uh lastly verification requires",
    "start": "317680",
    "end": "323319"
  },
  {
    "text": "Provence files uh Providence files have been around for a long time but the problem with Providence files is that",
    "start": "323319",
    "end": "328560"
  },
  {
    "text": "it's another file that you need to care about you need it's another file you need to manage and distribute um and",
    "start": "328560",
    "end": "334120"
  },
  {
    "text": "these are not some theoretical predictions that we are making here you can see these issues out in the wild",
    "start": "334120",
    "end": "339199"
  },
  {
    "text": "bitnami has a very famous repository which has multiple hem charts recently they had to purge like a significant",
    "start": "339199",
    "end": "346240"
  },
  {
    "text": "amount of their index 30 AML because cloudfront was not being able to serve it uh due to traffic",
    "start": "346240",
    "end": "351800"
  },
  {
    "text": "limits um so what is the solution um of course it's like just get R of the",
    "start": "351800",
    "end": "357680"
  },
  {
    "text": "index. Gile right uh how do we do that U so how many of you are familiar with",
    "start": "357680",
    "end": "363840"
  },
  {
    "text": "oci okay that's that's great um so for those of you who don't know oci is this open governance body which standardizes",
    "start": "363840",
    "end": "370840"
  },
  {
    "text": "everything related to images how they are built how they are packaged how they run and for most importantly for us uh",
    "start": "370840",
    "end": "376520"
  },
  {
    "text": "it's about how they are distributed so there is a distribution spec which standardizes how container Industries",
    "start": "376520",
    "end": "381800"
  },
  {
    "text": "work and how they are supposed to distribute images uh the best thing about uh the oci distribution spec is",
    "start": "381800",
    "end": "389000"
  },
  {
    "text": "that it's supposed to be agnostic of content types which means that it's built in mind keeping uh it's built",
    "start": "389000",
    "end": "395599"
  },
  {
    "text": "keeping in mind images but you can store anything you can store an MP3 file in there if you wanted to so if you can",
    "start": "395599",
    "end": "401400"
  },
  {
    "text": "store an MP3 file why can't you store a hot right uh this is a meme that I stole",
    "start": "401400",
    "end": "407000"
  },
  {
    "text": "from from Dan lank on Twitter uh it essentially boils down the oci distri",
    "start": "407000",
    "end": "412639"
  },
  {
    "text": "spec into like this one image is where you give it some certain parameters and it gives you a URL which points to a",
    "start": "412639",
    "end": "418240"
  },
  {
    "text": "tarball and in our case case this tall points to a hem shot so basically what you do is you can list the tags so oci",
    "start": "418240",
    "end": "425080"
  },
  {
    "text": "the AC distribution API has a very good API for listing tags and paginating and such stuff so you can just list the tags",
    "start": "425080",
    "end": "431080"
  },
  {
    "text": "you're worried about and you can just go and fetch the tarball that has your chart okay so what does this look like",
    "start": "431080",
    "end": "437599"
  },
  {
    "text": "in practice for users of Helm um people who package charts and publish them so Helm package doesn't change at all uh it",
    "start": "437599",
    "end": "444879"
  },
  {
    "text": "generates a tarball and that has the chart yl and the metadata in it push changes a little bit now we're pushing",
    "start": "444879",
    "end": "451520"
  },
  {
    "text": "to an oci URL that's a registry on the right hand side and uh there's there's",
    "start": "451520",
    "end": "457639"
  },
  {
    "text": "no third step unless you're uh interested in Provence which is that third step there uh so cosine sign we'll",
    "start": "457639",
    "end": "464720"
  },
  {
    "text": "see more detail uh the spec has some changes so we've added type oci and the",
    "start": "464720",
    "end": "471319"
  },
  {
    "text": "oci prefix to the URL we've added a provider here and that's for um",
    "start": "471319",
    "end": "476960"
  },
  {
    "text": "authentication um on on the the right hand side we've also added provider cosine which is for verification of the",
    "start": "476960",
    "end": "485918"
  },
  {
    "text": "provence right so what are some of these benefits that you get when you use flux Helm and oci together uh first thing",
    "start": "486400",
    "end": "493560"
  },
  {
    "text": "right off the bat is the fact that you have all your apps images and signatures in one place that is your container",
    "start": "493560",
    "end": "499039"
  },
  {
    "text": "history you don't need to have 10 different tabs for several different things right uh you get passwordless",
    "start": "499039",
    "end": "505039"
  },
  {
    "text": "authentication and keyless Integrity verification uh we'll touch on that in the next few slides and most importantly",
    "start": "505039",
    "end": "511479"
  },
  {
    "text": "you can get rid of your index. tml right which means that you don't have to spend as much as as much CPU in Ram uh as you",
    "start": "511479",
    "end": "518080"
  },
  {
    "text": "were spending earlier which translates into cost efficiency you don't need to spend that much on English traffic which",
    "start": "518080",
    "end": "523240"
  },
  {
    "text": "again translates into cost efficiency and you don't run into issues like bitnami did with network Boton X du to",
    "start": "523240",
    "end": "530320"
  },
  {
    "text": "size um okay so let's talk about how passwordless authentication Works uh in the scenario um so how it works is it",
    "start": "530320",
    "end": "538560"
  },
  {
    "text": "uses something called workload identity workload identity is basically a cloud IM role binding to a particular workload",
    "start": "538560",
    "end": "545440"
  },
  {
    "text": "what you do is you create a cloud IM IM role um which has access to your container hisry so let's say you're running on gke and your container is on",
    "start": "545440",
    "end": "553040"
  },
  {
    "text": "Google artifact registry you can create a service account which has read access to that container registry and then you",
    "start": "553040",
    "end": "559279"
  },
  {
    "text": "can bind that service account to the Pod or the node that is running in your kubernetes cluster now this now since",
    "start": "559279",
    "end": "565680"
  },
  {
    "text": "you have bound this role to your P or node that P or node also has access to the container registry and can pull",
    "start": "565680",
    "end": "571760"
  },
  {
    "text": "those images from that registry the benefit right of the bat here is to see",
    "start": "571760",
    "end": "576800"
  },
  {
    "text": "like the fact that there are no secrets there are no static credentials so you don't need to manage all of that dangerous stuff uh fluxes implementation",
    "start": "576800",
    "end": "583560"
  },
  {
    "text": "integrate seamlessly with Azure AWS and gcp we're going to demo Azure today um",
    "start": "583560",
    "end": "589519"
  },
  {
    "text": "and uh most importantly it's native to kubernetes so workload identity uses uh",
    "start": "589519",
    "end": "594560"
  },
  {
    "text": "something called service accounts and oidc projection uh which means that you don't step out of of the kubernetes",
    "start": "594560",
    "end": "599800"
  },
  {
    "text": "world you remain in like you deal with kubernetes apis right now flux's implementation only works at a global",
    "start": "599800",
    "end": "605959"
  },
  {
    "text": "controller level which means that if you wanted to if you wanted to use different workload identities for in the same",
    "start": "605959",
    "end": "612560"
  },
  {
    "text": "Source controller instance you would not be able to but work is being done right now to make that happen as well so you",
    "start": "612560",
    "end": "618880"
  },
  {
    "text": "can specify the service account name on the uh hem Rel uh hem chart object or",
    "start": "618880",
    "end": "624079"
  },
  {
    "text": "the oci repository object itself and you can have multiple work entities working working around on the same Source",
    "start": "624079",
    "end": "631000"
  },
  {
    "text": "controller um you also get keyless verification you get keyless Integrity verification which is great because you",
    "start": "631000",
    "end": "637360"
  },
  {
    "text": "don't need to manage pgp private public key pairs right which is again like another elimination of the need of",
    "start": "637360",
    "end": "642959"
  },
  {
    "text": "Secrets which is great because secrets are dangerous right um how this works is that it's bound to your oidc identity so",
    "start": "642959",
    "end": "649959"
  },
  {
    "text": "you sign your chart with cosign um cosign is great because it uses oidc",
    "start": "649959",
    "end": "655519"
  },
  {
    "text": "behind the scenes and all you have to do is sign in with Google or sign in with GitHub and the signature is bound to your oidc",
    "start": "655519",
    "end": "662120"
  },
  {
    "text": "identity uh flux also supports U matching against oidc uh identities uh",
    "start": "662120",
    "end": "668560"
  },
  {
    "text": "like the exact identity uh it's not out in a release yet but the pr has been merged and the next release will have",
    "start": "668560",
    "end": "674040"
  },
  {
    "text": "this feature as well so what this means is that you can be super strict uh about where your hem charts are coming from so",
    "start": "674040",
    "end": "680639"
  },
  {
    "text": "for example if we wanted to make sure that uh it is indeed our GitHub workflow which generated this chart and pushed it",
    "start": "680639",
    "end": "687519"
  },
  {
    "text": "off to your contain registry we can do that right so as you can see here there's an issuer field which says",
    "start": "687519",
    "end": "692880"
  },
  {
    "text": "token. actions. GitHub user content.com which basically is saying that the issuer of this uh authorization token uh",
    "start": "692880",
    "end": "699600"
  },
  {
    "text": "is the GitHub IDC provider and the subject is the organ is the repository that has the workflow which generated",
    "start": "699600",
    "end": "705959"
  },
  {
    "text": "the packet short okay so this is the workflow that",
    "start": "705959",
    "end": "711200"
  },
  {
    "text": "we're about to demonstrate um in the beginning a chart is pushed as it's released and I described earlier the",
    "start": "711200",
    "end": "718160"
  },
  {
    "text": "package step uh while this happens in CI uh flux pulls it into the cluster",
    "start": "718160",
    "end": "723839"
  },
  {
    "text": "automatically um in the staging environment and it deploys it and you can do destructive tests because this is",
    "start": "723839",
    "end": "730639"
  },
  {
    "text": "a staging environment so we have in this case we're going to run Helm test only in the staging environment you can have",
    "start": "730639",
    "end": "735680"
  },
  {
    "text": "different configuration um assuming everything goes okay The",
    "start": "735680",
    "end": "741000"
  },
  {
    "text": "Next Step triggers uh dispatch uh event that creates a poll request which uh",
    "start": "741000",
    "end": "748279"
  },
  {
    "text": "user can review and then merge and uh at that point the upgrade proceeds in production in an attended fashion so",
    "start": "748279",
    "end": "758320"
  },
  {
    "text": "uh okay so we're probably a bit too early for the demo but we have a few",
    "start": "758320",
    "end": "763560"
  },
  {
    "text": "more slides after this so we're going to do the demo first and then we're going to do a recap and reassess what is the",
    "start": "763560",
    "end": "768760"
  },
  {
    "text": "state of Helm and flux okay so let's do a demo of this entire",
    "start": "768760",
    "end": "774240"
  },
  {
    "text": "workflow so I'm going to first walk you through the file structure I have is this font size okay okay yes okay great",
    "start": "774240",
    "end": "782040"
  },
  {
    "text": "um so I have two clusters staging and production um so if you want to look at",
    "start": "782040",
    "end": "788120"
  },
  {
    "text": "the file structure there is clusters and there's production and there is staging",
    "start": "788120",
    "end": "793360"
  },
  {
    "text": "both are pretty similar they have flux installed and they have one app P info um",
    "start": "793360",
    "end": "798639"
  },
  {
    "text": "so this is the helm repository for the P info registry so as you can see it",
    "start": "798639",
    "end": "803680"
  },
  {
    "text": "points to a oci registry which is hosted on ACR Azure and you can see provide",
    "start": "803680",
    "end": "809320"
  },
  {
    "text": "is azure here this this basically tells flux that try to use the Azure workload",
    "start": "809320",
    "end": "814720"
  },
  {
    "text": "entity to make to access the container registry so that you don't so that the user doesn't need to provide any kind of",
    "start": "814720",
    "end": "819800"
  },
  {
    "text": "secrets with static credentials right um so this is pretty much the same for both",
    "start": "819800",
    "end": "825959"
  },
  {
    "text": "staging and production uh so let's look at let's take a look at how the H release looks like for staging um so",
    "start": "825959",
    "end": "832120"
  },
  {
    "text": "here as you can see it's pretty standard but you can if you notice here it says 7.0x per version this dox is basically a",
    "start": "832120",
    "end": "840120"
  },
  {
    "text": "wild card which basically says go deploy the latest patch release so if the",
    "start": "840120",
    "end": "845279"
  },
  {
    "text": "latest patch release is 7.0.2 deploy that if it's 0.0.3 deploy that um it",
    "start": "845279",
    "end": "851040"
  },
  {
    "text": "also has the verification stuff here which basically saying that Mak sure it's the GitHub IDC provider which",
    "start": "851040",
    "end": "857360"
  },
  {
    "text": "created the authorization token and and it's my repository here which is the owner of this",
    "start": "857360",
    "end": "862639"
  },
  {
    "text": "workflow um we have a production H relase fure the only difference between",
    "start": "862639",
    "end": "867959"
  },
  {
    "text": "the production h release file and the staging hem relase file is the fact that the production is pinned to a particular",
    "start": "867959",
    "end": "873320"
  },
  {
    "text": "version there is no sver wild card here right which is great which is what we want we don't want to deploy random",
    "start": "873320",
    "end": "879639"
  },
  {
    "text": "stuff or like lat the latest release into production we want to make sure that we know what we deploying into",
    "start": "879639",
    "end": "884880"
  },
  {
    "text": "production that's why it's pinned to a particular version and it can't move without our explicit approval right um let's take a look at",
    "start": "884880",
    "end": "892959"
  },
  {
    "text": "notifications so this is a provider provider is basically a way of contact a way that flux can contact other external",
    "start": "892959",
    "end": "900160"
  },
  {
    "text": "systems and let them know about flux events and alerts are basically a way of creating a flux event alert so as you",
    "start": "900160",
    "end": "907000"
  },
  {
    "text": "can see here whenever a Helm upgrade succeeds for this particular Helm release it's going to create an alert",
    "start": "907000",
    "end": "913279"
  },
  {
    "text": "and that alert is going to be sent to a GitHub dispatch provider a GitHub dispatch provider lets us trigger",
    "start": "913279",
    "end": "919160"
  },
  {
    "text": "workflows uh based on certain events and this is a GitHub workflow",
    "start": "919160",
    "end": "925880"
  },
  {
    "text": "that we have so this GitHub workflow basically gets triggered by the GitHub dispatch provider right and it's pretty",
    "start": "925880",
    "end": "932079"
  },
  {
    "text": "standard we don't we're not doing anything revolutionary here what we basically what the the most important",
    "start": "932079",
    "end": "937639"
  },
  {
    "text": "business logic here is the fact that we getting the version from the alert so whatever uh whatever is the latest",
    "start": "937639",
    "end": "943920"
  },
  {
    "text": "version that go deployed in staging so let's say that's 7.0.3 that got deployed in staging we take that version and we",
    "start": "943920",
    "end": "950240"
  },
  {
    "text": "use yq to do some yaml manipulation and we Chang the value of the version in the",
    "start": "950240",
    "end": "955560"
  },
  {
    "text": "production hem release file to that version so we're basically basically changing the pinned version from 7.0.2",
    "start": "955560",
    "end": "961560"
  },
  {
    "text": "to 7.0.3 in the production hand release file and that's how we make sure that we never deploy the latest thing we always",
    "start": "961560",
    "end": "967680"
  },
  {
    "text": "make sure that whenever we do deploy a new thing that's with our explicit approval and then we go ahead and create",
    "start": "967680",
    "end": "973399"
  },
  {
    "text": "a pull request with that change Okay cool so this was like the basic intro to",
    "start": "973399",
    "end": "979560"
  },
  {
    "text": "the file structure so I'm going to go ahead and um sorry I'm going to go ahead",
    "start": "979560",
    "end": "985680"
  },
  {
    "text": "and create a new chart version and push that so I have a",
    "start": "985680",
    "end": "990759"
  },
  {
    "text": "workflow uh I have a g workflow which will whenever there's a new tag",
    "start": "990759",
    "end": "997360"
  },
  {
    "text": "version it will basically create a chart and will push it off to Azure container",
    "start": "997360",
    "end": "1002600"
  },
  {
    "text": "registry so let me just tag this",
    "start": "1002600",
    "end": "1006079"
  },
  {
    "text": "here and push it okay cool so let's see Okay cool so it's",
    "start": "1007800",
    "end": "1017519"
  },
  {
    "text": "there's a GitHub workflow which is running right now um let's see what it's",
    "start": "1017519",
    "end": "1023839"
  },
  {
    "text": "doing okay uh it's packaging the chart right now it's logging into ACR cool it",
    "start": "1025160",
    "end": "1032400"
  },
  {
    "text": "signs the helm chart okay so let's take a look at Azure as you can see there's a",
    "start": "1032400",
    "end": "1037959"
  },
  {
    "text": "7.0.4 uh tagged chart here and this is its signature here right so now that",
    "start": "1037959",
    "end": "1043360"
  },
  {
    "text": "there is a new chart in our container history what we expect from our clusters",
    "start": "1043360",
    "end": "1048919"
  },
  {
    "text": "is that the new chart should be deployed in the staging cluster right um so I'm going to go ahead let me just make sure",
    "start": "1048919",
    "end": "1054760"
  },
  {
    "text": "I'm staging let me stage change to staging right and I'm going to go ahead",
    "start": "1054760",
    "end": "1060039"
  },
  {
    "text": "and reconcile the hel chart in the staging cluster Okay cool so as you can see uh",
    "start": "1060039",
    "end": "1067600"
  },
  {
    "text": "flux saw that there's a new version and it deployed 7.0.4 in staging and we can verify that by doing a get hem release",
    "start": "1067600",
    "end": "1073919"
  },
  {
    "text": "as well uh right now it's uh pending it's in progress let's let's do that again",
    "start": "1073919",
    "end": "1079919"
  },
  {
    "text": "okay cool so now uh staging is running 7.0.4 of our application which is great",
    "start": "1079919",
    "end": "1085559"
  },
  {
    "text": "so now what this did was it created an event uh which was sent to flux's notification controller and flux took",
    "start": "1085559",
    "end": "1091799"
  },
  {
    "text": "that notification that it got the alert that it got and triggered a workflow",
    "start": "1091799",
    "end": "1097440"
  },
  {
    "text": "which created a PR and we're going to go and check out that PR so let's reload this Okay cool so now there's a PR in",
    "start": "1097440",
    "end": "1104720"
  },
  {
    "text": "our repository which contains our kubernetes manifests and what does it say",
    "start": "1104720",
    "end": "1109919"
  },
  {
    "text": "oh okay so it says to change the production H relase file from 7.0.3 to",
    "start": "1109919",
    "end": "1115880"
  },
  {
    "text": "7.0.4 and which is essentially what we want right we want to make sure that all",
    "start": "1115880",
    "end": "1121200"
  },
  {
    "text": "uh all updates to our app versions happen with our explicit approval so if I don't approve this PR and if I don't",
    "start": "1121200",
    "end": "1127520"
  },
  {
    "text": "merge this PR even though staging is running the latest thing production will still be on the thing which uh we",
    "start": "1127520",
    "end": "1133080"
  },
  {
    "text": "approved approved it for so I mean right now you could push another chart version uh 7 0.5 and that would get deployed in",
    "start": "1133080",
    "end": "1140039"
  },
  {
    "text": "staging as well but production would still be on 7.0.3 because we haven't approved anything yet so I'm going to go",
    "start": "1140039",
    "end": "1145760"
  },
  {
    "text": "ahead uh and approve it and Kingdon is going to go and approve it as well on his phone yeah here we",
    "start": "1145760",
    "end": "1152640"
  },
  {
    "text": "go okay good King has approved it I've approved it so let's go ahead and merge this",
    "start": "1152640",
    "end": "1158600"
  },
  {
    "text": "PR Okay cool so now that this P has been merged I'm going to go ahead and switch",
    "start": "1159960",
    "end": "1165520"
  },
  {
    "text": "to production and I'm going to reconcile the",
    "start": "1165520",
    "end": "1172400"
  },
  {
    "text": "customization okay so now let's see where was the status of our helem chart",
    "start": "1176720",
    "end": "1182840"
  },
  {
    "text": "in production okay so as you can see it has pulled 7.0.4 because we mged the pr",
    "start": "1182840",
    "end": "1188480"
  },
  {
    "text": "and what's interesting to note here is that it also says Source verified verified signature of version 7.4",
    "start": "1188480",
    "end": "1194320"
  },
  {
    "text": "70.4 and this is because we included that verification section in the h release so Source controller or rather",
    "start": "1194320",
    "end": "1200200"
  },
  {
    "text": "flux makees sure that we always verify the signature of the artifact that we're pulling if this signature was invalid or",
    "start": "1200200",
    "end": "1207000"
  },
  {
    "text": "if there was some kind of a problem this uh reconciliation would not succeed so let's go ahead and see what",
    "start": "1207000",
    "end": "1213280"
  },
  {
    "text": "is the status of a h release and here you go and yeah now we have 7.0.4 in",
    "start": "1213280",
    "end": "1218600"
  },
  {
    "text": "production but the difference is that we explicitly approved this uh it didn't happen on its own flux didn't pull 7.1.4",
    "start": "1218600",
    "end": "1225919"
  },
  {
    "text": "on production anded it and deployed it we basically approved this via the pr workflow yeah that's it for the demo",
    "start": "1225919",
    "end": "1233400"
  },
  {
    "text": "[Applause]",
    "start": "1233400",
    "end": "1236689"
  },
  {
    "text": "okay so uh let's let's recap what we've just done so this is a well documented",
    "start": "1239559",
    "end": "1245080"
  },
  {
    "text": "workflow it's been around for a long time uh the main things that we've added here today are the password list and the",
    "start": "1245080",
    "end": "1250760"
  },
  {
    "text": "uh uh keyless uh parts for oci um and",
    "start": "1250760",
    "end": "1256200"
  },
  {
    "text": "cosine uh we have have the advantage of Helm tests it's a battle hardened workflow and it's extensible so you can",
    "start": "1256200",
    "end": "1262600"
  },
  {
    "text": "use it on other platforms I've heard of people using this with Azure devops they use a generic web hook instead of GitHub",
    "start": "1262600",
    "end": "1268039"
  },
  {
    "text": "dispatch uh so this is great um but there is a negative uh drawback if you",
    "start": "1268039",
    "end": "1274360"
  },
  {
    "text": "are um not building Helm charts it's a rather large investment to get started and there are some very good reasons not",
    "start": "1274360",
    "end": "1280600"
  },
  {
    "text": "to use Helm in 2023 uh we don't need to go into them but um so what can you do",
    "start": "1280600",
    "end": "1287720"
  },
  {
    "text": "if you you don't want to use Helm what would uh flux would suggest is you could",
    "start": "1287720",
    "end": "1292760"
  },
  {
    "text": "use uh oci repository instead of Helm release uh so we haven't documented this",
    "start": "1292760",
    "end": "1299080"
  },
  {
    "text": "yet but if you follow the workflow uh we'll we'll update the docks within a couple of days hopefully uh to describe",
    "start": "1299080",
    "end": "1306000"
  },
  {
    "text": "this it's very similar it's it's like three lines of changes it's not really a big deal and uh so you get all the same",
    "start": "1306000",
    "end": "1312640"
  },
  {
    "text": "benefits of keyless and identity uh using oci reposit",
    "start": "1312640",
    "end": "1318720"
  },
  {
    "text": "um but uh so it's it's not well documented yet and and there are a few other drawbacks that's the main one is",
    "start": "1318720",
    "end": "1325240"
  },
  {
    "text": "that you won't have Helm test so if you were using Helm test or uh hel Helm for other reasons the life cycle features",
    "start": "1325240",
    "end": "1332640"
  },
  {
    "text": "the rollbacks um you'll use git for that instead so um and of course we also saw the uh",
    "start": "1332640",
    "end": "1341360"
  },
  {
    "text": "sver uh wild card promotion method which we used in staging uh so this is",
    "start": "1341360",
    "end": "1347559"
  },
  {
    "text": "portable across most of the source kinds in flux uh you can you can set spec.",
    "start": "1347559",
    "end": "1353200"
  },
  {
    "text": "sver on a Helm chart or oci repository or get repository and it will work in",
    "start": "1353200",
    "end": "1358360"
  },
  {
    "text": "all of those places and um this is a great way uh to get releases out faster",
    "start": "1358360",
    "end": "1364679"
  },
  {
    "text": "if you're trying to publish and um iterate quickly without a lot of friction uh right you don't necessarily",
    "start": "1364679",
    "end": "1370880"
  },
  {
    "text": "need that friction unless you want it we know we want it in this case so that's why we demonstrated it but really to be",
    "start": "1370880",
    "end": "1378000"
  },
  {
    "text": "clear this is a workflow for staging environments I wouldn't recommend you do this in production without a great deal",
    "start": "1378000",
    "end": "1383320"
  },
  {
    "text": "of ceremony applied some other way so uh um one possible way would be to use",
    "start": "1383320",
    "end": "1389400"
  },
  {
    "text": "flager canaries uh which we're not going to go into today we don't really have time but uh does anyone here use flager",
    "start": "1389400",
    "end": "1396720"
  },
  {
    "text": "canaries okay that's cool yeah great so",
    "start": "1396720",
    "end": "1402240"
  },
  {
    "text": "uh that's that's a faster workflow it has less friction but it's not really for production because we want that friction for production we want a manual",
    "start": "1402240",
    "end": "1409440"
  },
  {
    "text": "approver we want um all of that it's good uh so as far as the",
    "start": "1409440",
    "end": "1417799"
  },
  {
    "text": "um takeaway for users uh you should be using oci for Helm everywhere you can",
    "start": "1417799",
    "end": "1423120"
  },
  {
    "text": "especially if you're using flux um and that's really the one takeaway uh but uh",
    "start": "1423120",
    "end": "1428799"
  },
  {
    "text": "as a vendor what do you do do you support both uh do you publish uh to your legacy and also publish oci or do",
    "start": "1428799",
    "end": "1436440"
  },
  {
    "text": "you just go with one or the other um that's not really up to us from flux perspective there's no need to support",
    "start": "1436440",
    "end": "1443400"
  },
  {
    "text": "both there's no valuable work done by index. for flux U but there may be other reasons that are are not relevant to",
    "start": "1443400",
    "end": "1449640"
  },
  {
    "text": "flux in particular that uh you should support both so but from an enduser",
    "start": "1449640",
    "end": "1454960"
  },
  {
    "text": "perspective um use oci if you can because you're uh avoiding all that",
    "start": "1454960",
    "end": "1460240"
  },
  {
    "text": "needless waste you pay for that waste and even if you don't pay for that waste it's environmentally friendly to avoid",
    "start": "1460240",
    "end": "1465520"
  },
  {
    "text": "waste so um so what if your chart vendor doesn't",
    "start": "1465520",
    "end": "1471559"
  },
  {
    "text": "support oci uh well you can talk to them and ask if if they will do it uh but",
    "start": "1471559",
    "end": "1477080"
  },
  {
    "text": "maybe don't worry about it um because it's really not a big deal you know Legacy it's probably not going away for",
    "start": "1477080",
    "end": "1483799"
  },
  {
    "text": "for years we've heard that Legacy Helm repositories would go away there really is no sign of that happening anytime",
    "start": "1483799",
    "end": "1489039"
  },
  {
    "text": "soon so um uh it it really only affects you if",
    "start": "1489039",
    "end": "1494120"
  },
  {
    "text": "it affects you so the way to know that it affects you is to monitor your performance and we have a great",
    "start": "1494120",
    "end": "1499480"
  },
  {
    "text": "monitoring guide that's been updated uh there's a link to it here uh so go ahead and check that out and see if you have a",
    "start": "1499480",
    "end": "1507440"
  },
  {
    "text": "performance impact if you switch uh it will it will be quick and clear um",
    "start": "1507440",
    "end": "1514000"
  },
  {
    "text": "so that is our talk and we can take questions at this",
    "start": "1514000",
    "end": "1520080"
  },
  {
    "text": "point is there um this is actually the QR code",
    "start": "1520799",
    "end": "1526960"
  },
  {
    "text": "will take you to the and and it'll be online in short amount yeah but uh back",
    "start": "1526960",
    "end": "1533080"
  },
  {
    "text": "to this slide here yeah that's the link up at the top that's the link you",
    "start": "1533080",
    "end": "1539440"
  },
  {
    "text": "want yeah so the",
    "start": "1539440",
    "end": "1544559"
  },
  {
    "text": "wild uh I'm not I'm not really familiar with Helm file I'm not sure how that works um",
    "start": "1556679",
    "end": "1563320"
  },
  {
    "text": "the question is is there a locking mechanism umate",
    "start": "1563320",
    "end": "1570120"
  },
  {
    "text": "aate Curr there's no lock file there's no",
    "start": "1570120",
    "end": "1575480"
  },
  {
    "text": "lock file it's either automated or it isn't right if you want it to be pinned to a",
    "start": "1575480",
    "end": "1580880"
  },
  {
    "text": "particular version then you just pin it in the in the file so here we have a wild card and if you want it to pended a",
    "start": "1580880",
    "end": "1588320"
  },
  {
    "text": "particular version for uh like an incident or something um or just to",
    "start": "1588320",
    "end": "1593440"
  },
  {
    "text": "implement this workflow as we've done in production it's Pinn to a particular version so there's no automation it's",
    "start": "1593440",
    "end": "1598720"
  },
  {
    "text": "not automatically promoting anything unless unless you do it benefit of the lock file being that",
    "start": "1598720",
    "end": "1606360"
  },
  {
    "text": "you have kind of like a state in time of what is currently like the",
    "start": "1606360",
    "end": "1613480"
  },
  {
    "text": "gener um so flux doesn't really work that way flux basically pulls the helm",
    "start": "1616600",
    "end": "1621640"
  },
  {
    "text": "chot and then it just deploys the hel release and it just makes sure it continuously reconciles against what is",
    "start": "1621640",
    "end": "1627440"
  },
  {
    "text": "there in the Hem chart and what is there in the helem release um there is no concept of a log file where you are",
    "start": "1627440",
    "end": "1634200"
  },
  {
    "text": "tracking what has been deployed at what time um it's just it's always fetches",
    "start": "1634200",
    "end": "1639600"
  },
  {
    "text": "from The Source uh so like it always fetches the chart and then Compares it with what's there in the H released",
    "start": "1639600",
    "end": "1645679"
  },
  {
    "text": "installed release that's all yeah could you do what he's suggesting via the same",
    "start": "1645679",
    "end": "1652240"
  },
  {
    "text": "that you used for youro from staging to production use a notification controller",
    "start": "1652240",
    "end": "1657480"
  },
  {
    "text": "to basically trigger uh CI to go like oh these are the details that actually got",
    "start": "1657480",
    "end": "1662640"
  },
  {
    "text": "deployed a 74 these things and then that becomes a PR then you you could use a skip C and",
    "start": "1662640",
    "end": "1670360"
  },
  {
    "text": "then get that mer oh okay the uh the helmet Le says",
    "start": "1670360",
    "end": "1676240"
  },
  {
    "text": "7x and after all the work was done it committed back okay it says 70x but this",
    "start": "1676240",
    "end": "1681480"
  },
  {
    "text": "other file the lock file says it was actually 704 so flux is not committing back the GitHub actions workflow is",
    "start": "1681480",
    "end": "1688360"
  },
  {
    "text": "generating the commit so I'm not I'm not sure it happens in CI aut uhhuh yeah but",
    "start": "1688360",
    "end": "1695320"
  },
  {
    "text": "if you use image automation yeah this is a different if you use image automation then you can probably uh mix and match",
    "start": "1695320",
    "end": "1700840"
  },
  {
    "text": "you can have an image policy which says that oh you use 7.0 pointx and then Image Auto the image automation",
    "start": "1700840",
    "end": "1706640"
  },
  {
    "text": "controller come back to and it says 7.0.4 but then you need to use the image automation apis yeah you can't just do",
    "start": "1706640",
    "end": "1712640"
  },
  {
    "text": "it with the Hem control",
    "start": "1712640",
    "end": "1716960"
  },
  {
    "text": "yeah um so it's basically an U it's an oci artifact right so it's um I think he",
    "start": "1725840",
    "end": "1733360"
  },
  {
    "text": "means the oci signature um are you talking this one",
    "start": "1733360",
    "end": "1738919"
  },
  {
    "text": "yeah it's just dig yeah so that's just the digest of the artifact so like it's a do s file that's what cosine generates",
    "start": "1738919",
    "end": "1745760"
  },
  {
    "text": "that's the signature of your artifact okay so that's uhhuh yeah so you can take a look",
    "start": "1745760",
    "end": "1752080"
  },
  {
    "text": "at the the",
    "start": "1752080",
    "end": "1755360"
  },
  {
    "text": "workflow you mean with pgp or like the with the uhhuh yeah there is but we",
    "start": "1759080",
    "end": "1764200"
  },
  {
    "text": "wanted to demo keyless because keyless is just easier you don't need to uh handle pgp key pairs right is just",
    "start": "1764200",
    "end": "1771159"
  },
  {
    "text": "always easier to do it without keys uhhuh yeah flux also does not",
    "start": "1771159",
    "end": "1776279"
  },
  {
    "text": "implement the pgp verification um it's it's not implemented in uh no like uh I",
    "start": "1776279",
    "end": "1781679"
  },
  {
    "text": "think he means about the hel not the H Providence the the cosign uh private",
    "start": "1781679",
    "end": "1786760"
  },
  {
    "text": "public key you can do a cosine key full verification that's you can do a cosine key full ver verification yeah yes there",
    "start": "1786760",
    "end": "1793720"
  },
  {
    "text": "are keyed and keyless workflows uhhuh so you just store",
    "start": "1793720",
    "end": "1799799"
  },
  {
    "text": "the yeah you could do that yeah you could do that you just need to store this the key in a secret then",
    "start": "1799799",
    "end": "1806880"
  },
  {
    "text": "yeah yeah yes yeah oh there's a mic there I didn't know that",
    "start": "1807919",
    "end": "1813799"
  },
  {
    "text": "okay hello hi um uh how would someone you know integrate like Flagger to do",
    "start": "1814559",
    "end": "1821320"
  },
  {
    "text": "the production release upgrades in this case right so in this case I mean it's",
    "start": "1821320",
    "end": "1826880"
  },
  {
    "text": "really two orthogonal uh things um you can use Flagger wherever you can use it in a staging environment or you can use",
    "start": "1826880",
    "end": "1833120"
  },
  {
    "text": "it in production environment Flagger uh is not tied to G or Helm uh it's completely um independent of all of",
    "start": "1833120",
    "end": "1840880"
  },
  {
    "text": "these things um it's just about what's happening in your cluster so as soon as the hel release upgrade succeeds and the",
    "start": "1840880",
    "end": "1847559"
  },
  {
    "text": "deployment so let's say the app is a deployment and the deployment changed like the image version changed or",
    "start": "1847559",
    "end": "1853440"
  },
  {
    "text": "whatever um Flagger would kick into action and it would start the canary process process so it does not really",
    "start": "1853440",
    "end": "1859440"
  },
  {
    "text": "matter what your flux setups looks like uh Flagger can be deployed agnostically you you don't need flux to do Flagger or",
    "start": "1859440",
    "end": "1865679"
  },
  {
    "text": "and you don't need Flagger to do flux they're completely independent but they work very great",
    "start": "1865679",
    "end": "1872080"
  },
  {
    "text": "together just a question on the production deployment side so the um deployment was approved in GitHub and",
    "start": "1872080",
    "end": "1879000"
  },
  {
    "text": "then obviously the deployment happened and you didn't actually trigger anything that happened automatically so flux system is pulling from git is that is",
    "start": "1879000",
    "end": "1887320"
  },
  {
    "text": "that right to get the latest changes and we also merg the PLL request so yeah",
    "start": "1887320",
    "end": "1892440"
  },
  {
    "text": "after that so I guess my question is the production system still needs to have git access right so you've got some G",
    "start": "1892440",
    "end": "1898559"
  },
  {
    "text": "access Secrets Etc installed in that envirment you need get access because your original like all your manifest are",
    "start": "1898559",
    "end": "1904919"
  },
  {
    "text": "stored in a g repository right so you need good access right do you have any other way of having like an oci backed",
    "start": "1904919",
    "end": "1911320"
  },
  {
    "text": "access you could do it in oci repository okay you could do it in an oci repository because right now like the",
    "start": "1911320",
    "end": "1916760"
  },
  {
    "text": "default bootst process uses git uh but you could definitely store all your manifests in an oci repository instead",
    "start": "1916760",
    "end": "1923120"
  },
  {
    "text": "of git repository and then do it from there we we uh do want to take flux into",
    "start": "1923120",
    "end": "1928600"
  },
  {
    "text": "a direction where oci repository and G repositories are like U very equivalent to each other as in um whatever",
    "start": "1928600",
    "end": "1935639"
  },
  {
    "text": "supported by G repositories should also be supported by oci repositories okay so if if you did that my question would be",
    "start": "1935639",
    "end": "1940799"
  },
  {
    "text": "then how does flux system know to detect that change is it constantly polling the The Source system like the OCR reposit",
    "start": "1940799",
    "end": "1947240"
  },
  {
    "text": "in that case it would be polling at the interval or you can set up a receiver and the receiver would work for get",
    "start": "1947240",
    "end": "1952840"
  },
  {
    "text": "repository or oci repository in a similar way is that like a web hook or something yeah okay cool all",
    "start": "1952840",
    "end": "1960840"
  },
  {
    "text": "right uh in terms of dealing with uh Legacy uh Helm repositories I just",
    "start": "1960840",
    "end": "1967279"
  },
  {
    "text": "wanted to call out for anyone who didn't see it there was a lightning talk on uh utility to proxy uh Legacy home",
    "start": "1967279",
    "end": "1976120"
  },
  {
    "text": "repositories through oci so that might be a solution for that as well great awesome thank you",
    "start": "1976120",
    "end": "1982679"
  },
  {
    "text": "okay hi in terms of verifying uh the signatures on Helm charts using cosign",
    "start": "1982679",
    "end": "1988960"
  },
  {
    "text": "um you said it would it reconcile if the signature verification failed is is that always going to fail or is there a way",
    "start": "1988960",
    "end": "1994080"
  },
  {
    "text": "to to audit that instead uh K again I'm so sorry I didn't catch your question so when verifying",
    "start": "1994080",
    "end": "2000519"
  },
  {
    "text": "oci artifacts using cosine um when when the source controller pulls them down he",
    "start": "2000519",
    "end": "2005840"
  },
  {
    "text": "said that it wouldn't re reconcile that artifact if the sign if the signature verification failed is there a way to",
    "start": "2005840",
    "end": "2011600"
  },
  {
    "text": "just audit that instead and output in the law I think there's an event uh that ceter so you could look out for that",
    "start": "2011600",
    "end": "2017960"
  },
  {
    "text": "kubernetes event okay but the purpose of the signature verification is to be sure that it is from the correct source so",
    "start": "2017960",
    "end": "2024120"
  },
  {
    "text": "I'm not sure that would be implemented okay as a a optional that's like if the",
    "start": "2024120",
    "end": "2031559"
  },
  {
    "text": "verification fails then the reconciliation will fail there's no like try to verify but it's fine if it",
    "start": "2031559",
    "end": "2037960"
  },
  {
    "text": "doesn't verify that that's not an option",
    "start": "2037960",
    "end": "2042398"
  }
]