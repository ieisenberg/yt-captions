[
  {
    "text": "hello everyone can you hear me yes so let's get started and thank you for",
    "start": "880",
    "end": "7359"
  },
  {
    "text": "joining us today to talk about one of your favorite topics n2n testing and today we are going to talk about how you",
    "start": "7359",
    "end": "14000"
  },
  {
    "text": "can use the n2n framework to build confidence in your kubernetes controllers and clusters my name is mat",
    "start": "14000",
    "end": "20480"
  },
  {
    "text": "Rua I'm a senior software engineer at data dog a cloud observability company",
    "start": "20480",
    "end": "26160"
  },
  {
    "text": "and I work in the control playe team where we manage the control plane for our users today I'm presenting with",
    "start": "26160",
    "end": "33480"
  },
  {
    "text": "Philip I'm Philip scorsolini I work at upbound I'm a crossplay",
    "start": "33480",
    "end": "39360"
  },
  {
    "text": "maintainer cool so the agenda for today is to give you an overview about what is",
    "start": "40480",
    "end": "45680"
  },
  {
    "text": "the Ann framework and why we have it and then to give you an overview about how we do n2n testing at data dog and cross",
    "start": "45680",
    "end": "54000"
  },
  {
    "text": "plane so the first step is to talk about the N framework it's a go framework to do end",
    "start": "54000",
    "end": "61879"
  },
  {
    "text": "to end test of components running in kubernetes clusters and why do we have that you can",
    "start": "61879",
    "end": "68600"
  },
  {
    "text": "say if I go inside the kubernetes repository there is already an extensive set of example and code to do end to",
    "start": "68600",
    "end": "76759"
  },
  {
    "text": "endend tests the problem with the framework is that the sty CL hold with kubernetes itself is designed to test",
    "start": "76759",
    "end": "84560"
  },
  {
    "text": "the kubernetes and to ensure a consistent and reliable behavior of the kubernetes codebase it is not designed",
    "start": "84560",
    "end": "91520"
  },
  {
    "text": "to be used outside as external Library plus is based on Ginko Gino is a testing",
    "start": "91520",
    "end": "97560"
  },
  {
    "text": "framework with foro that has its own DLS and uh it's something that uh is similar",
    "start": "97560",
    "end": "103799"
  },
  {
    "text": "to a behavior driven development framework so it has its own set of",
    "start": "103799",
    "end": "109000"
  },
  {
    "text": "instruction and its own way to declare the test that is quite different from what you're use when you're writing go",
    "start": "109000",
    "end": "116840"
  },
  {
    "text": "tests and so now we have the ENT framework that is an official uh Sig",
    "start": "116840",
    "end": "121960"
  },
  {
    "text": "project with a goal to provide a documented approach for endtoend testing an official tool that you can use uh as",
    "start": "121960",
    "end": "128879"
  },
  {
    "text": "close as possible to use uh the go test package that you use every day with",
    "start": "128879",
    "end": "135120"
  },
  {
    "text": "components to help you to build your test Suite helper functions to get you",
    "start": "135120",
    "end": "140440"
  },
  {
    "text": "started when interacting with kubernetes clusters and especially avoiding all the dependencies on the kubernetes code base",
    "start": "140440",
    "end": "148239"
  },
  {
    "text": "itself let's have a look about how the n2n framework works so at the heart of",
    "start": "148239",
    "end": "153840"
  },
  {
    "text": "the framework there is the environment object it has a config that is used to",
    "start": "153840",
    "end": "159200"
  },
  {
    "text": "store your test Suite configuration you can customize the configuration with your own CLI flags and then there is a",
    "start": "159200",
    "end": "166599"
  },
  {
    "text": "context that you can use to pass signaling and data uh across each phase",
    "start": "166599",
    "end": "172239"
  },
  {
    "text": "of the tests you can use functions to customize different stages of the environment",
    "start": "172239",
    "end": "179239"
  },
  {
    "text": "including environment set up before a test after a test or when tearing down",
    "start": "179239",
    "end": "184319"
  },
  {
    "text": "the environment then you have your regular go test that are made by one or multiple",
    "start": "184319",
    "end": "190879"
  },
  {
    "text": "test feature a feature is a collection of steps that can be executed as a group",
    "start": "190879",
    "end": "196519"
  },
  {
    "text": "where a step is a granular operation that you can combine to perform the actions that you want and the steps that",
    "start": "196519",
    "end": "203840"
  },
  {
    "text": "you can apply to your test are setup assess and tear down now I know this is a lot so let's have a look at some code",
    "start": "203840",
    "end": "210920"
  },
  {
    "text": "example here you can see that I'm creating uh a new environment in the",
    "start": "210920",
    "end": "216640"
  },
  {
    "text": "test main I'm applying an environment function in this case the setup you can",
    "start": "216640",
    "end": "222200"
  },
  {
    "text": "add any code that you want to be executed before any of your test there and then I running the test",
    "start": "222200",
    "end": "228959"
  },
  {
    "text": "Suite then I have a regular go test in this case the hello world where I have a new feature you can apply a name to the",
    "start": "228959",
    "end": "236239"
  },
  {
    "text": "feature you can add labels and then I'm adding the steps that I want for the test in this case there is a setup a",
    "start": "236239",
    "end": "243120"
  },
  {
    "text": "single assessment and a tear down of course you can have multiple setup phas steps multiple assess and multiple te Dr",
    "start": "243120",
    "end": "250920"
  },
  {
    "text": "and then at the end you execute the test feature now that you got your 101 on the",
    "start": "250920",
    "end": "258519"
  },
  {
    "text": "N2 framework let's discuss about how we are using it at data dog the first",
    "start": "258519",
    "end": "264240"
  },
  {
    "text": "question is why do we even bother about doing endtoend test and the reason is",
    "start": "264240",
    "end": "269560"
  },
  {
    "text": "that met data dog we have a kubernetes setup with hundred of clusters thousand of notes and we run across all multiple",
    "start": "269560",
    "end": "276479"
  },
  {
    "text": "Cloud providers also to have the same layer of obstruction and consistency we run our",
    "start": "276479",
    "end": "282479"
  },
  {
    "text": "own kubernetes software and on top of kubernetes we install all our internal",
    "start": "282479",
    "end": "287560"
  },
  {
    "text": "controllers there is not only my team but multiple teams managing all those clusters making multiple changes per day",
    "start": "287560",
    "end": "295080"
  },
  {
    "text": "so at the end of the day how do you make sure that everything is working as expected and so we are using the n2n",
    "start": "295080",
    "end": "301039"
  },
  {
    "text": "framework to build our own internal conformance test suite for example is",
    "start": "301039",
    "end": "306479"
  },
  {
    "text": "the DNS working as expected not only can I resolve internal or external domain but can I do cross cluster or Closs data",
    "start": "306479",
    "end": "313280"
  },
  {
    "text": "center DNS resolution uh can I provide capacity to the workloads we have a",
    "start": "313280",
    "end": "319479"
  },
  {
    "text": "bunch of internal controllers that we use to manage the node life cycle are there working as expected so can I the",
    "start": "319479",
    "end": "325759"
  },
  {
    "text": "commission nodes without causing disruption",
    "start": "325759",
    "end": "331639"
  },
  {
    "text": "we test the Clusters daily we have a chrome job that runs the full test Suite",
    "start": "332039",
    "end": "337800"
  },
  {
    "text": "in every cluster every day at the moment we are a little more than 40 tests it takes between 30 and 30 minutes to run",
    "start": "337800",
    "end": "344960"
  },
  {
    "text": "the whole test site depending how busy the cluster is and so we get a signal if we are breaking",
    "start": "344960",
    "end": "351720"
  },
  {
    "text": "something we also use it when we spin up a new cluster so uh we provision a",
    "start": "351720",
    "end": "357479"
  },
  {
    "text": "cluster and then we run the first set of test to make sure that we have the kubernetes pr Primitives that we need",
    "start": "357479",
    "end": "365160"
  },
  {
    "text": "then we install all the data dog customization and internal controllers on top of it and then we run again the",
    "start": "365160",
    "end": "371280"
  },
  {
    "text": "full test Suite when everything is passing we can onboard the users and we tell them hey the cluster is ready now",
    "start": "371280",
    "end": "377759"
  },
  {
    "text": "you can deploy another usage of our test is when",
    "start": "377759",
    "end": "382840"
  },
  {
    "text": "we update a single component so imagine that you have a controller we have Helm charts you are bumping the controller",
    "start": "382840",
    "end": "390479"
  },
  {
    "text": "versions you are making a change to the Chart I don't know your arbach and so when you install it we also run a small",
    "start": "390479",
    "end": "398240"
  },
  {
    "text": "subset of the test related to that particular controller to make sure that you're not breaking",
    "start": "398240",
    "end": "404960"
  },
  {
    "text": "anything what was our journey for testing so like many we started importing the inry kubernetes and",
    "start": "405720",
    "end": "412479"
  },
  {
    "text": "framework but like many we got into all the problems that I was discussing at the beginning you know that kubernetes",
    "start": "412479",
    "end": "419720"
  },
  {
    "text": "as a repository is not designed to be easily import you need to do some sort of a is very heavy let's say and so uh",
    "start": "419720",
    "end": "427240"
  },
  {
    "text": "when you need to update it you need to be careful and not everyone was used to",
    "start": "427240",
    "end": "432479"
  },
  {
    "text": "the goo way of doing test so when we saw the M2M framework we",
    "start": "432479",
    "end": "437800"
  },
  {
    "text": "did the PC we wrote a proposal everyone was on board with that and uh we liked",
    "start": "437800",
    "end": "443440"
  },
  {
    "text": "that is an official s project that is designed from the ground up to test on kubernetes that it has already a lot of",
    "start": "443440",
    "end": "450360"
  },
  {
    "text": "helper functions to interact with the Clusters and that provide also enough components to create your own test Suite",
    "start": "450360",
    "end": "457680"
  },
  {
    "text": "but is very close or try to be as close as possible are P pure go",
    "start": "457680",
    "end": "463440"
  },
  {
    "text": "testing so how did we do the migration so at the beginning we wanted to try to",
    "start": "463440",
    "end": "468479"
  },
  {
    "text": "use uh the same go module but we tried using go workspace we couldn't figure it",
    "start": "468479",
    "end": "474440"
  },
  {
    "text": "out and didn't work for us so what we ended up doing was creating a subdirectory inside the old goo test",
    "start": "474440",
    "end": "481400"
  },
  {
    "text": "with the end to end framework and then slowly migrating one test at the time every time we needed to add uh shared",
    "start": "481400",
    "end": "488720"
  },
  {
    "text": "code we were creating like an external Library uh to share the code between the two Frameworks and then we migrated all",
    "start": "488720",
    "end": "495360"
  },
  {
    "text": "the test like that and at the time of building in the same Docker file we",
    "start": "495360",
    "end": "500400"
  },
  {
    "text": "build both binaries and when we run our test we have the two containers so we run goo test with their own flags and",
    "start": "500400",
    "end": "507199"
  },
  {
    "text": "the n2n Frameworks with its own Flags when we did the dis migration we also",
    "start": "507199",
    "end": "513680"
  },
  {
    "text": "asked ourself if there is anything that we want to change about the way we structure our end to end test and so we",
    "start": "513680",
    "end": "519360"
  },
  {
    "text": "took the opportunity to reflect on how we write test so first of all now we",
    "start": "519360",
    "end": "524760"
  },
  {
    "text": "write kubernetes object and not yaml I know we are all yaml Engineers we love yaml but the problem is when you have 50",
    "start": "524760",
    "end": "532600"
  },
  {
    "text": "yaml files for all your test is very difficult when you want to make a change imagine that you want to ensure label",
    "start": "532600",
    "end": "539000"
  },
  {
    "text": "consistent for cost tracking or for compliance or you need to bump a new version on the base container now that",
    "start": "539000",
    "end": "546480"
  },
  {
    "text": "we have a shared Library uh we have a single place where we can make this change and we can ensure that our users",
    "start": "546480",
    "end": "553200"
  },
  {
    "text": "are um importing just that Library previously a lot of people were also",
    "start": "553200",
    "end": "558399"
  },
  {
    "text": "copy and paste a lot of yam also to get started now they can just instantiate a new",
    "start": "558399",
    "end": "564240"
  },
  {
    "text": "object we also create additional helpers functions as I was mentioning we have",
    "start": "564240",
    "end": "569440"
  },
  {
    "text": "bunch of internal controllers so we also need additional helpers to make sure that our objects are ready and then we",
    "start": "569440",
    "end": "576000"
  },
  {
    "text": "extend easily the endtoend framework for example we have a bunch of CIS that we need to pass when we run the environment",
    "start": "576000",
    "end": "583079"
  },
  {
    "text": "and so we wrap the endtoend environment inside our own uh we do validation we",
    "start": "583079",
    "end": "589120"
  },
  {
    "text": "need to make sure that when we start the test Suite we run the test for a specific cloud provider only on that",
    "start": "589120",
    "end": "594920"
  },
  {
    "text": "very cloud provider and not of the others and we can do that uh passing our own High",
    "start": "594920",
    "end": "601120"
  },
  {
    "text": "Flags we also tell our developers please assume that all your tests are going to be run in parallel and so we provide two",
    "start": "601120",
    "end": "608720"
  },
  {
    "text": "other guidelines first one is only one feature per test as I was saying at the",
    "start": "608720",
    "end": "613880"
  },
  {
    "text": "beginning you can add multiple features to your test but if you do that even if you enable parallel testing the features",
    "start": "613880",
    "end": "619839"
  },
  {
    "text": "are going to go one at a time and then we also run a test in its own name space",
    "start": "619839",
    "end": "626120"
  },
  {
    "text": "this help us avoiding pollution when we do the test and uh it's easy when you do",
    "start": "626120",
    "end": "631760"
  },
  {
    "text": "the cleanup if you go on GitHub uh at that URL you can find an example repository with a Docker file an example",
    "start": "631760",
    "end": "639519"
  },
  {
    "text": "of a library uh there are a couple of objects uh to WRA the environment and so",
    "start": "639519",
    "end": "645959"
  },
  {
    "text": "that is a possible approach to use the end to end test and should help you getting started and adopting",
    "start": "645959",
    "end": "652880"
  },
  {
    "text": "it of course I work at data doog so it would be awkward if I didn't have any slide about observability and so uh",
    "start": "652880",
    "end": "659880"
  },
  {
    "text": "every time we run a test result a test we also send metrics about the test result uh in this case we can build",
    "start": "659880",
    "end": "667680"
  },
  {
    "text": "dashboard and alerting when some test are failing we also have our data data",
    "start": "667680",
    "end": "672800"
  },
  {
    "text": "dog agent scraping the Pod for logs so when the test is failing we can easily see why it's not working and we recently",
    "start": "672800",
    "end": "680600"
  },
  {
    "text": "integrated with our CI visibility product if you run your go test you can",
    "start": "680600",
    "end": "685959"
  },
  {
    "text": "also export the test result as a junit file and when you upload it you can see",
    "start": "685959",
    "end": "691200"
  },
  {
    "text": "uh all nice of graphs and statistics about your test in this example you see",
    "start": "691200",
    "end": "697200"
  },
  {
    "text": "uh a test that we are actually running that is running a bunch of times it's failing once and then we can drill down",
    "start": "697200",
    "end": "704160"
  },
  {
    "text": "why is failing is it a specific cluster which cluster and then if you start seeing more and more failing you get",
    "start": "704160",
    "end": "709880"
  },
  {
    "text": "alerted because the test becomes flaky and then you can slice it and see oh yeah is this by environment or a cloud",
    "start": "709880",
    "end": "716079"
  },
  {
    "text": "provider is the whole test treat is it a particular test and if you're interested around the performance you can also go",
    "start": "716079",
    "end": "723079"
  },
  {
    "text": "and see how long usually does it take to run your test and then you can spot regressions all at liers and you can go",
    "start": "723079",
    "end": "729959"
  },
  {
    "text": "and and make sure that nothing is broken so overall I would say that we",
    "start": "729959",
    "end": "736160"
  },
  {
    "text": "are pretty happy about the Anto framework the feedback that I get from my fellow developers is pretty positive",
    "start": "736160",
    "end": "742720"
  },
  {
    "text": "it's easy to use it's very easy to get in started it's just like importing a regular another regular package without",
    "start": "742720",
    "end": "749639"
  },
  {
    "text": "any magic into your project uh it has a lot of Alper functions out of the box",
    "start": "749639",
    "end": "755160"
  },
  {
    "text": "you can easily extend almost all the components and it feels very close to right the CEST that you already used",
    "start": "755160",
    "end": "761839"
  },
  {
    "text": "to of course the project is not perfect uh yet uh still quite young parallel",
    "start": "761839",
    "end": "767760"
  },
  {
    "text": "testing is not there yet um if you remember at the beginning of the slide uh there is a This Global config in the",
    "start": "767760",
    "end": "775160"
  },
  {
    "text": "environment and so when you enable at the moment a parallel test multiple Guru teams try to write to the config causing",
    "start": "775160",
    "end": "781639"
  },
  {
    "text": "a r condition hopefully we are going to have a PR to fix it in the next few weeks um there is also additional flags",
    "start": "781639",
    "end": "789360"
  },
  {
    "text": "that you can pass to the framework to run testing parallel so you can use the regular T parallel as a go test or you",
    "start": "789360",
    "end": "796480"
  },
  {
    "text": "can pass the parallel flag in the framework that is going to spawn sub routines to create your test I don't",
    "start": "796480",
    "end": "802760"
  },
  {
    "text": "think this provide a very good user experience so we rely on the go t",
    "start": "802760",
    "end": "807880"
  },
  {
    "text": "parallel to run the tests um and uh a think that is annoying if you submit the",
    "start": "807880",
    "end": "814519"
  },
  {
    "text": "metrics is that you can't detect if a test is run or skip so we end up looking",
    "start": "814519",
    "end": "820560"
  },
  {
    "text": "at the metrix and see a bunch of green uh and all the test are taking 0 seconds",
    "start": "820560",
    "end": "825839"
  },
  {
    "text": "is because the test is actually not running uh and we have an open issue for",
    "start": "825839",
    "end": "832160"
  },
  {
    "text": "that but we don't have a PR yet so this is our experience data dog and now I'm",
    "start": "832160",
    "end": "837600"
  },
  {
    "text": "going to leave the stage to flip to talk about how they're doing at Cross plane yeah thank you",
    "start": "837600",
    "end": "843880"
  },
  {
    "text": "mat so let's talk about V how we run n2n tests at Cross Plane 2 uh as you'll see",
    "start": "843880",
    "end": "851079"
  },
  {
    "text": "we have a pretty different approach in some aspects uh with respect to what Mato just",
    "start": "851079",
    "end": "856360"
  },
  {
    "text": "showed mostly due to the different context and the different scope for for",
    "start": "856360",
    "end": "862040"
  },
  {
    "text": "our N2 test but first uh let's let's quickly introduce crossplane uh the",
    "start": "862040",
    "end": "867519"
  },
  {
    "text": "sales speech describes it as a framework for building Cloud native control planes but you can see it as three things an",
    "start": "867519",
    "end": "874480"
  },
  {
    "text": "ecosystem of providers to manage external apis such as Cloud providers",
    "start": "874480",
    "end": "879600"
  },
  {
    "text": "but also whatever has an API actually uh look up provider pizza if you want to",
    "start": "879600",
    "end": "885079"
  },
  {
    "text": "check how to order a pizza using crossplane and but uh also a low code",
    "start": "885079",
    "end": "890519"
  },
  {
    "text": "framework to compose these resources into your custom apis and then a package",
    "start": "890519",
    "end": "895639"
  },
  {
    "text": "manager to handle all the above this Translate into this which as you can see",
    "start": "895639",
    "end": "901759"
  },
  {
    "text": "it's pretty complex uh and this is obviously not even the whole thing so we really need good testing coverage in",
    "start": "901759",
    "end": "908680"
  },
  {
    "text": "order to have confidence shipping new features and refactoring all code or fixing",
    "start": "908680",
    "end": "914880"
  },
  {
    "text": "bugs we already had uh and still have today some good unit test coverage",
    "start": "914880",
    "end": "920600"
  },
  {
    "text": "almost uh 70 More than 70% on core logic uh but these heavily rely on mocking uh",
    "start": "920600",
    "end": "928000"
  },
  {
    "text": "which is fine but obviously means that uh even if CI is green at the end of the day maybe when when you once you get to",
    "start": "928000",
    "end": "935759"
  },
  {
    "text": "the deploy to the actual deployment stuff can still be broken uh we had a dedicated repo for n21 test with a small",
    "start": "935759",
    "end": "943720"
  },
  {
    "text": "number of of scenarios that we run on a schedule on the latest uh commit on on",
    "start": "943720",
    "end": "949959"
  },
  {
    "text": "Main on the main branch to be sure stuff was at least not completely broken these were plain go tests using just client go",
    "start": "949959",
    "end": "958000"
  },
  {
    "text": "but we were Lu in the confidence I was talking about previously so we agreed this was not enough and decided to move",
    "start": "958000",
    "end": "965279"
  },
  {
    "text": "the vn2 T back into the um crossplane repository and add a few new scenarios",
    "start": "965279",
    "end": "971639"
  },
  {
    "text": "so that we could run them on each on each PR but we had to pick something to do that and so what do we actually care",
    "start": "971639",
    "end": "979839"
  },
  {
    "text": "about when writing n2n tests how are these scenarios actually run go testing",
    "start": "979839",
    "end": "985560"
  },
  {
    "text": "some Custom Tool uh how much control do we have we need to spin up and down",
    "start": "985560",
    "end": "991199"
  },
  {
    "text": "stuff so like a kind cluster or the cross plane hand chart with maybe some",
    "start": "991199",
    "end": "996920"
  },
  {
    "text": "custom values any additional components how to define those scenarios uh the",
    "start": "996920",
    "end": "1002319"
  },
  {
    "text": "language you use the fixtures does it provide any helpers to deal with eventually consistent kubernetes",
    "start": "1002319",
    "end": "1009360"
  },
  {
    "text": "resources and so as you can see uh we considered a few options uh from the",
    "start": "1009360",
    "end": "1014440"
  },
  {
    "text": "most classical ones Ginko and gega uh which we actually already used in the",
    "start": "1014440",
    "end": "1019800"
  },
  {
    "text": "past in in crossplane and we removed from crossplane a while ago to more",
    "start": "1019800",
    "end": "1025160"
  },
  {
    "text": "exotic ones like G flavored uh tests here I tried to highlight all the",
    "start": "1025160",
    "end": "1031880"
  },
  {
    "text": "aspects we were talking about previously so uh the engine so how tests will be run with each option and as you can see",
    "start": "1031880",
    "end": "1039600"
  },
  {
    "text": "cattle is the only custom one the rest will still run on go testing in one way",
    "start": "1039600",
    "end": "1045600"
  },
  {
    "text": "or another helpers whether they provided ways to set up the environment uh handle",
    "start": "1045600",
    "end": "1052480"
  },
  {
    "text": "kubernetes resources and deal with eventual consistency and as you can see",
    "start": "1052480",
    "end": "1057720"
  },
  {
    "text": "we have different degrees of uh uh degrees there and then the front end how",
    "start": "1057720",
    "end": "1064919"
  },
  {
    "text": "test uh how test scenarios will be actually defined some are more heavyweight Frameworks and have their",
    "start": "1064919",
    "end": "1070840"
  },
  {
    "text": "own dsls or let you define your own DSs directly while over can be just used as",
    "start": "1070840",
    "end": "1076880"
  },
  {
    "text": "regular tests crossplane as you might know is written in go so we decided to",
    "start": "1076880",
    "end": "1082480"
  },
  {
    "text": "write our own tests in the same language and if possible stick as much to the usual go testing we we already used for",
    "start": "1082480",
    "end": "1089799"
  },
  {
    "text": "the rest of the code base so as you can see the only option checking all the boxes for us was the",
    "start": "1089799",
    "end": "1097039"
  },
  {
    "text": "framework it's handled by S testing so it felt as as the right choice as mat",
    "start": "1097039",
    "end": "1102080"
  },
  {
    "text": "was saying there's a rich set of helpers you can handle kind clusters directly from your code no need for any hocky",
    "start": "1102080",
    "end": "1109360"
  },
  {
    "text": "uh bash scripts to spin up your your kind cluster you can handle fixtures",
    "start": "1109360",
    "end": "1114600"
  },
  {
    "text": "both through yaml manifest and or directly as ghost TRS and you can interact with Helm charts installing",
    "start": "1114600",
    "end": "1121600"
  },
  {
    "text": "upgrading and uninstalling uh them as needed it adds little cognitive overload",
    "start": "1121600",
    "end": "1127039"
  },
  {
    "text": "on top of the go testing framework so at least not as much as over heavyweight",
    "start": "1127039",
    "end": "1132880"
  },
  {
    "text": "Frameworks and you can see a dedicated one pager with more details if you interested so we defined our gu",
    "start": "1132880",
    "end": "1140840"
  },
  {
    "text": "guidelines we decided to have one feature per test uh so that we can directly select tests to run using",
    "start": "1140840",
    "end": "1148120"
  },
  {
    "text": "standard go test selectors uh all tests must be self-contained ensuring crossplane",
    "start": "1148120",
    "end": "1154799"
  },
  {
    "text": "itself is installed as needed restoring the previous state and deleting everything they created and fail",
    "start": "1154799",
    "end": "1161880"
  },
  {
    "text": "overwise we don't run test in parall in parallel differently from what M was",
    "start": "1161880",
    "end": "1167320"
  },
  {
    "text": "saying at least for now uh as most crosspin resources are cluster scoped so",
    "start": "1167320",
    "end": "1172760"
  },
  {
    "text": "for us it was really hard to implement parallel tests um so each test can",
    "start": "1172760",
    "end": "1178320"
  },
  {
    "text": "assume it has the whole cluster available as long as it's able to clean it clean it up after after the test uh",
    "start": "1178320",
    "end": "1185320"
  },
  {
    "text": "we should be um we should uh be able to run these tests against an existing",
    "start": "1185320",
    "end": "1190400"
  },
  {
    "text": "installation too so as a sort of conformance test to check something is",
    "start": "1190400",
    "end": "1196159"
  },
  {
    "text": "behaving as a good cross plane uh installation and we decided also",
    "start": "1196159",
    "end": "1202799"
  },
  {
    "text": "differently from the data dog case to use yaml Manifest this is mostly because",
    "start": "1202799",
    "end": "1208240"
  },
  {
    "text": "we are a open source project so having some automatically tested tested",
    "start": "1208240",
    "end": "1214280"
  },
  {
    "text": "manifests that you can reference people to is actually a good thing for us",
    "start": "1214280",
    "end": "1219360"
  },
  {
    "text": "although the cut and paste and handling and all the things about yamal uh that's",
    "start": "1219360",
    "end": "1225960"
  },
  {
    "text": "actually obviously an issue but for us it was Pros were were more than the cons and we keep them up to date by using",
    "start": "1225960",
    "end": "1233280"
  },
  {
    "text": "renovate to bump all the images around all our manifest um we uh we use uh some we",
    "start": "1233280",
    "end": "1241520"
  },
  {
    "text": "built and we suggest using some um dummy crossplane packages like function dumy",
    "start": "1241520",
    "end": "1247640"
  },
  {
    "text": "or provider KN so that we don't have to spin up actually infrastructure out in the cloud using provider AWS or over",
    "start": "1247640",
    "end": "1255760"
  },
  {
    "text": "providers and uh if needed use and en reach when when applicable",
    "start": "1255760",
    "end": "1262919"
  },
  {
    "text": "our library of helpers that we that we'll see in a moment uh you can see our complete",
    "start": "1262919",
    "end": "1269600"
  },
  {
    "text": "guidelines for more details there so we also extended the the",
    "start": "1269600",
    "end": "1275159"
  },
  {
    "text": "environment to add a few custom Flags mostly to handle kind and uh how to set",
    "start": "1275159",
    "end": "1281480"
  },
  {
    "text": "up it the cluster and how to handle failures and what to do on failures then",
    "start": "1281480",
    "end": "1287520"
  },
  {
    "text": "we also introduced an additional concept of test fits uh which we'll talk more",
    "start": "1287520",
    "end": "1292559"
  },
  {
    "text": "about in the next slides and finally from the test main you can see it's just a matter of adding all a list of setup",
    "start": "1292559",
    "end": "1300919"
  },
  {
    "text": "steps a list of finished steps and then run the whole thing as I was saying most most",
    "start": "1300919",
    "end": "1307400"
  },
  {
    "text": "crossplay resources are cluster scoped and some tests require a specific",
    "start": "1307400",
    "end": "1312440"
  },
  {
    "text": "configuration like some Alpha feature enabled uh or some additional external component would be running in the test",
    "start": "1312440",
    "end": "1319720"
  },
  {
    "text": "so we introduc the concept of test suits to bundle up those things together so",
    "start": "1319720",
    "end": "1324799"
  },
  {
    "text": "both the custom setup and the tests uh that expect that that um",
    "start": "1324799",
    "end": "1330960"
  },
  {
    "text": "setup then in C in CI as you can see there we use gab BS we run them in",
    "start": "1330960",
    "end": "1336080"
  },
  {
    "text": "parallel based on the test Suite so we have a uh a base one and then more or",
    "start": "1336080",
    "end": "1341400"
  },
  {
    "text": "less one for each Alpha feature ER on failures we want the single ones to to",
    "start": "1341400",
    "end": "1348000"
  },
  {
    "text": "stop so that we can collect all the required information to the ban as I was saying everything is cluster scoped so",
    "start": "1348000",
    "end": "1354440"
  },
  {
    "text": "it's hard to run to be sure next tests are going to run successfully if a",
    "start": "1354440",
    "end": "1360120"
  },
  {
    "text": "previous test is fa failed at the moment it's not an issue because we actually have uh some pretty short times on the",
    "start": "1360120",
    "end": "1367279"
  },
  {
    "text": "N2 test but if it's going to become an issue we're going to address that in some other some of way um however we",
    "start": "1367279",
    "end": "1377320"
  },
  {
    "text": "still let over uh test SS finish to run so that we can at least understand",
    "start": "1377320",
    "end": "1383080"
  },
  {
    "text": "whether there is an issue with uh some we broke whether we broke everything or",
    "start": "1383080",
    "end": "1388240"
  },
  {
    "text": "we just uh broke some particular configuration uh to to understand what",
    "start": "1388240",
    "end": "1394640"
  },
  {
    "text": "went wrong on failure we build a graph of all the resources in the cluster and",
    "start": "1394640",
    "end": "1400279"
  },
  {
    "text": "dump and print down the whole all the related all the related resources to the",
    "start": "1400279",
    "end": "1407520"
  },
  {
    "text": "one we are actually testing at the moment with all the events and if that's not enough we also zip and upload the",
    "start": "1407520",
    "end": "1416559"
  },
  {
    "text": "whole the whole cluster Logs with full audit logs enabled and then we can we",
    "start": "1416559",
    "end": "1422559"
  },
  {
    "text": "can debug it further test Suites can uh can include",
    "start": "1422559",
    "end": "1427679"
  },
  {
    "text": "each other and tests can be part of multiple test suits as you can see here we have a base one uh that most of our",
    "start": "1427679",
    "end": "1434919"
  },
  {
    "text": "test suits include uh but we also split the Li cycle scenarios like uninstalling",
    "start": "1434919",
    "end": "1440720"
  },
  {
    "text": "and upgrading cross plane from the latest stable release to their own test Suite so that we can include just that",
    "start": "1440720",
    "end": "1447159"
  },
  {
    "text": "from Suits that uh we know don't actually affect uh core functionalities",
    "start": "1447159",
    "end": "1453600"
  },
  {
    "text": "this way when promoting a feature to to Beta uh which means it's going to be enabled by default we are sure we are",
    "start": "1453600",
    "end": "1460279"
  },
  {
    "text": "not going to break any core functionality and we just need to merge all those tests into the base",
    "start": "1460279",
    "end": "1467360"
  },
  {
    "text": "one so let's see an example of an actual test uh this is a Prett a pretty basic",
    "start": "1467360",
    "end": "1474159"
  },
  {
    "text": "one we just want to check cross planes composition engine works as expected uh",
    "start": "1474159",
    "end": "1479520"
  },
  {
    "text": "and that we are able to propagate some field down to compose the resources and back to the composite resource so we",
    "start": "1479520",
    "end": "1486600"
  },
  {
    "text": "have our dedicated manifest folder uh as you can see there H usually containing a",
    "start": "1486600",
    "end": "1492679"
  },
  {
    "text": "setup subfolder with a bunch of and a bunch of other manifests uh",
    "start": "1492679",
    "end": "1498840"
  },
  {
    "text": "and then um we Define our features um we we Define our feature",
    "start": "1498840",
    "end": "1505600"
  },
  {
    "text": "usually one per test as we said and we set some useful labels so that we can",
    "start": "1505600",
    "end": "1511000"
  },
  {
    "text": "slice and dice the tests as needed and also we declare one or more subtests uh",
    "start": "1511000",
    "end": "1517440"
  },
  {
    "text": "one or more sweets the tests belong to um then we Define our setup steps",
    "start": "1517440",
    "end": "1524320"
  },
  {
    "text": "applying all the setup manifests and checking that everything is running accordingly uh as we as we need it to",
    "start": "1524320",
    "end": "1531799"
  },
  {
    "text": "and then we Define a few assessment STS steps we try to keep it clean and",
    "start": "1531799",
    "end": "1536840"
  },
  {
    "text": "separate different steps so that we can easily see what step fail later in this",
    "start": "1536840",
    "end": "1542600"
  },
  {
    "text": "case we apply our claim wait for it to be ready and then check it uh it has the",
    "start": "1542600",
    "end": "1547880"
  },
  {
    "text": "field we expect uh properly set and then we Define r tier done steps cleaning up",
    "start": "1547880",
    "end": "1554159"
  },
  {
    "text": "everything and um uh so that the clust is ready for the next",
    "start": "1554159",
    "end": "1561960"
  },
  {
    "text": "test there is definitely room for improvement on our side for example uh",
    "start": "1561960",
    "end": "1567320"
  },
  {
    "text": "right now we lack the statistics about test flakiness which Mato showed earlier",
    "start": "1567320",
    "end": "1573200"
  },
  {
    "text": "so we should definitely get some credits from dat do for that it's mostly left to as mainers to",
    "start": "1573200",
    "end": "1580679"
  },
  {
    "text": "know uh which tests are known to be flacky and uh their expected success",
    "start": "1580679",
    "end": "1587600"
  },
  {
    "text": "rate so that we can at least know we if we rerun that a few times and everything",
    "start": "1587600",
    "end": "1593159"
  },
  {
    "text": "works fine it's the known thing we we already handle then we have an issue for",
    "start": "1593159",
    "end": "1598240"
  },
  {
    "text": "and then usually we push at the end of a release cycle to stabilize the whole thing and uh possibly fix some bug but",
    "start": "1598240",
    "end": "1607000"
  },
  {
    "text": "actually which is obviously not the best approach so that's definitely something we should improve on ourselves most of",
    "start": "1607000",
    "end": "1614159"
  },
  {
    "text": "the times actually these are these failures are this flakiness",
    "start": "1614159",
    "end": "1619320"
  },
  {
    "text": "issues are are due to as I was saying to Hanging Resources by over resources left",
    "start": "1619320",
    "end": "1626200"
  },
  {
    "text": "hanging by over test so we could actually um improve on that with some",
    "start": "1626200",
    "end": "1632080"
  },
  {
    "text": "smartw work around by namespacing stuff or uh we should work on that",
    "start": "1632080",
    "end": "1637279"
  },
  {
    "text": "probably this could Al also potentially allow us to run the whole thing in parallel so the same uh the same",
    "start": "1637279",
    "end": "1643799"
  },
  {
    "text": "solution would actually uh bring us to uh win two times",
    "start": "1643799",
    "end": "1649520"
  },
  {
    "text": "um then go 120 introduced coverage for integration test too so you can export",
    "start": "1649520",
    "end": "1656080"
  },
  {
    "text": "uh integration tests coverage for your binary running so for your it your your",
    "start": "1656080",
    "end": "1662200"
  },
  {
    "text": "test binary running somewhere and you can actually see what part of a code",
    "start": "1662200",
    "end": "1667799"
  },
  {
    "text": "base you are testing and you're you're actually running and we should definitely use that to see which parts",
    "start": "1667799",
    "end": "1674559"
  },
  {
    "text": "we are not we are not testing that much and we can and we can improve on that on",
    "start": "1674559",
    "end": "1680000"
  },
  {
    "text": "the e2e framework side our main complaint right now is that the set up and tear down steps although they can be",
    "start": "1680000",
    "end": "1686480"
  },
  {
    "text": "given a name they're actually ignored completely at the moment and uh similar",
    "start": "1686480",
    "end": "1693159"
  },
  {
    "text": "similarly to assessment steps uh they they don't run as um as sub tests uh I",
    "start": "1693159",
    "end": "1702480"
  },
  {
    "text": "have a longstanding issue created on the E2 framework repository but I still unfortunately still have to find the",
    "start": "1702480",
    "end": "1709640"
  },
  {
    "text": "time to work on that H but other than that we are pretty happy and uh it's",
    "start": "1709640",
    "end": "1715559"
  },
  {
    "text": "been a nice experience and that's it so thank you for coming and if you have any questions",
    "start": "1715559",
    "end": "1723200"
  },
  {
    "text": "feel free [Applause]",
    "start": "1723200",
    "end": "1735439"
  },
  {
    "text": "to",
    "start": "1737039",
    "end": "1740039"
  },
  {
    "text": "so the question is if there is any performance is issue with this setup in",
    "start": "1745000",
    "end": "1750279"
  },
  {
    "text": "their case or speed of running test so can you run a test speed any",
    "start": "1750279",
    "end": "1755600"
  },
  {
    "text": "quicker with this as opposed to running it with something like H so for us um it was a matter more",
    "start": "1755600",
    "end": "1764039"
  },
  {
    "text": "of readability and the maintainance of the role of the framework uh we were",
    "start": "1764039",
    "end": "1769200"
  },
  {
    "text": "leaving um our Ginko uh so the end to framework that we had was based on",
    "start": "1769200",
    "end": "1775080"
  },
  {
    "text": "kubernetes so at that point you need to decide if you update your endtoend test independently so every time they do a",
    "start": "1775080",
    "end": "1781720"
  },
  {
    "text": "minor releaseing kubernetes you bump it and how if it needs to be in sync with your own kubernetes version um and so",
    "start": "1781720",
    "end": "1789640"
  },
  {
    "text": "for us it was more like uh um people were find difficult to write in testing Gino and the whole managing of the",
    "start": "1789640",
    "end": "1797000"
  },
  {
    "text": "cluster was quite compx of the of the dependency was quite complicated but I don't think that we",
    "start": "1797000",
    "end": "1802799"
  },
  {
    "text": "see a lot of performance I think we're going to see them as soon as we can go back to parallel uh because at the",
    "start": "1802799",
    "end": "1808919"
  },
  {
    "text": "moment is not there yeah in our case the performance is not really an issue yet uh all test",
    "start": "1808919",
    "end": "1816720"
  },
  {
    "text": "Suites run in around depending on which one between 10 and 20 minutes uh so",
    "start": "1816720",
    "end": "1822760"
  },
  {
    "text": "that's fine obviously spinning up and down every time stuff is a waste of time",
    "start": "1822760",
    "end": "1828919"
  },
  {
    "text": "and uh we took that approach right now because it's not a big issue but it's",
    "start": "1828919",
    "end": "1834080"
  },
  {
    "text": "definitely the first uh item in the to-do list once we add more test cases and everything becomes a little bit more",
    "start": "1834080",
    "end": "1842880"
  },
  {
    "text": "slower uh so the next question um sometimes the setup SE section of those tests can be complex and long installing",
    "start": "1844279",
    "end": "1851480"
  },
  {
    "text": "multiple Helm charts maybe even deploying some clusters yeah how do you make sure that actually setup is is is",
    "start": "1851480",
    "end": "1859080"
  },
  {
    "text": "working it's exactly the environment that you want and the test is not failing because the test is it's it's a",
    "start": "1859080",
    "end": "1865519"
  },
  {
    "text": "wrong test is because setup failed in our case we usually add a",
    "start": "1865519",
    "end": "1870919"
  },
  {
    "text": "check an assessment checking that everything we installed in the setup phase is actually properly configured",
    "start": "1870919",
    "end": "1878559"
  },
  {
    "text": "everything we care obviously you cannot check everything yeah we do the same so imagine that we want to make sure that a",
    "start": "1878559",
    "end": "1884440"
  },
  {
    "text": "deployment I don't know goes on certain nodes in the setup maybe we we create",
    "start": "1884440",
    "end": "1889639"
  },
  {
    "text": "the deployment and we make sure the deployment gets ready and then we move",
    "start": "1889639",
    "end": "1894760"
  },
  {
    "text": "uh to the assessment when we do specific assessment of things but if you don't have a deployment the old test is already",
    "start": "1894760",
    "end": "1901639"
  },
  {
    "text": "failing thank you hi so if I got your beginning",
    "start": "1901639",
    "end": "1911039"
  },
  {
    "text": "assessment properly you could not use the test from kubernetes itself so did",
    "start": "1911039",
    "end": "1916159"
  },
  {
    "text": "you think of doing opposite like using the end to end framework from the",
    "start": "1916159",
    "end": "1922000"
  },
  {
    "text": "external repo into kubernetes so that you reduce the duplication at some point so I think that uh when those",
    "start": "1922000",
    "end": "1931600"
  },
  {
    "text": "people at Cross plane were assessing which framework there was comments also from people people maintaining the N2",
    "start": "1931600",
    "end": "1938720"
  },
  {
    "text": "framework in three and I don't think there is a plan at the moment to replace",
    "start": "1938720",
    "end": "1943960"
  },
  {
    "text": "Ginko also I think they went through a major factor to moving from G V1 to G V2",
    "start": "1943960",
    "end": "1950279"
  },
  {
    "text": "in kubernetes in three itself so I don't see I don't see I don't see this",
    "start": "1950279",
    "end": "1955320"
  },
  {
    "text": "happening any time soon but I am also not involved in any of these projects so",
    "start": "1955320",
    "end": "1960399"
  },
  {
    "text": "I may be wrong I don't know if you know more yeah no nothing thank",
    "start": "1960399",
    "end": "1967799"
  },
  {
    "text": "you hi thanks that was great I have two questions um one for mattio you you",
    "start": "1967799",
    "end": "1974440"
  },
  {
    "text": "mentioned that you usually run a pod that runs the test alongside the service",
    "start": "1974440",
    "end": "1979480"
  },
  {
    "text": "itself in the same name space maybe or a different one do you do that in production continuously as well yes so",
    "start": "1979480",
    "end": "1985880"
  },
  {
    "text": "all the Chrome jobs that you see in the slide they run on the real production clusters and so this is why sometimes we",
    "start": "1985880",
    "end": "1992440"
  },
  {
    "text": "have the test they're not flaky but they might fail because the cluster is particular busy at the time and also the",
    "start": "1992440",
    "end": "1999159"
  },
  {
    "text": "time that it takes to run the test can increase especially when you do Autos scaling where you have a real workload",
    "start": "1999159",
    "end": "2004279"
  },
  {
    "text": "running but give us the best signal to see the cluster is working we also spin",
    "start": "2004279",
    "end": "2009840"
  },
  {
    "text": "up and tear down end to endend a cluster every day with no workload to make sure",
    "start": "2009840",
    "end": "2015120"
  },
  {
    "text": "that all the controllers and the provisioning tool is still working I assume you thank you I I assume you also",
    "start": "2015120",
    "end": "2023399"
  },
  {
    "text": "run those test in short lived environments in CI like maybe in kind or",
    "start": "2023399",
    "end": "2028760"
  },
  {
    "text": "that sort of cluster or maybe in the crossplane case what one issue we struggle with with that is that usually",
    "start": "2028760",
    "end": "2035039"
  },
  {
    "text": "a controller depends on another controller which depends on another controller which depends on another",
    "start": "2035039",
    "end": "2040799"
  },
  {
    "text": "controller so it's very hard to test a single controller we always end up testing five controllers indirectly yeah",
    "start": "2040799",
    "end": "2048398"
  },
  {
    "text": "that's uh I mean that's n to test so we are we mostly focus on something high",
    "start": "2048399",
    "end": "2054800"
  },
  {
    "text": "level and hope that everything down there doesn't work and then if if",
    "start": "2054800",
    "end": "2059919"
  },
  {
    "text": "something breaks it's up to the unit test to catch to catch that particular part of the code base but yes the",
    "start": "2059919",
    "end": "2065960"
  },
  {
    "text": "bugging the issue failures is the main issue where going through the whole log",
    "start": "2065960",
    "end": "2072960"
  },
  {
    "text": "uh of the whole cluster is not a pleasant experience for us testing inci",
    "start": "2072960",
    "end": "2078440"
  },
  {
    "text": "is quite complicated because um we do a lot of customization of the of the",
    "start": "2078440",
    "end": "2084280"
  },
  {
    "text": "Clusters to have a data do kubernetes clusters uh and that is something that",
    "start": "2084280",
    "end": "2089520"
  },
  {
    "text": "at the CI time is quite complicated uh we have one controller where I'm testing the N framework to test the controller",
    "start": "2089520",
    "end": "2096040"
  },
  {
    "text": "because traditionally if you go to the cube builder for example repository and you look for examples is always tested",
    "start": "2096040",
    "end": "2102160"
  },
  {
    "text": "with Ginko um so the majority of the controllers that we have are still with goo but hopefully now that we have the",
    "start": "2102160",
    "end": "2108400"
  },
  {
    "text": "end to end framework and the nice package of shared resource to import we",
    "start": "2108400",
    "end": "2113480"
  },
  {
    "text": "can extend also to uh controllers testing thank you",
    "start": "2113480",
    "end": "2119760"
  },
  {
    "text": "everyone thank you",
    "start": "2119760",
    "end": "2127160"
  }
]