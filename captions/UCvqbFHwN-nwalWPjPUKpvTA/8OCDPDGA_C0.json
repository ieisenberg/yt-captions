[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "all right thank you very much well we",
    "start": "399",
    "end": "2639"
  },
  {
    "text": "will",
    "start": "2639",
    "end": "3439"
  },
  {
    "text": "uh jump right into it and we will start",
    "start": "3439",
    "end": "6160"
  },
  {
    "text": "this presentation with a question that",
    "start": "6160",
    "end": "8480"
  },
  {
    "text": "is almost as old as time itself",
    "start": "8480",
    "end": "11440"
  },
  {
    "text": "what is kubernetes now let's jump down",
    "start": "11440",
    "end": "14480"
  },
  {
    "text": "this rabbit hole we have two lovely tour",
    "start": "14480",
    "end": "17600"
  },
  {
    "text": "guides rabbit number one that is matt",
    "start": "17600",
    "end": "20320"
  },
  {
    "text": "senior engineer at",
    "start": "20320",
    "end": "22800"
  },
  {
    "text": "chronosphere and then rabbit number two",
    "start": "22800",
    "end": "25279"
  },
  {
    "text": "that is this guy dominic principal",
    "start": "25279",
    "end": "27920"
  },
  {
    "text": "engineer at tempura so i would argue",
    "start": "27920",
    "end": "32160"
  },
  {
    "text": "the answer to the question what is",
    "start": "32160",
    "end": "33760"
  },
  {
    "text": "kubernetes we have at least as many",
    "start": "33760",
    "end": "36320"
  },
  {
    "text": "answers as there are people in the room",
    "start": "36320",
    "end": "38320"
  },
  {
    "text": "and probably also online but let me give",
    "start": "38320",
    "end": "41040"
  },
  {
    "text": "it a shot",
    "start": "41040",
    "end": "43200"
  },
  {
    "text": "so i would argue kubernetes may be",
    "start": "43200",
    "end": "45600"
  },
  {
    "text": "characterized as a container",
    "start": "45600",
    "end": "47600"
  },
  {
    "text": "orchestration platform",
    "start": "47600",
    "end": "49360"
  },
  {
    "text": "that is a very agreeable definition",
    "start": "49360",
    "end": "52559"
  },
  {
    "text": "however it should give us some pause",
    "start": "52559",
    "end": "55039"
  },
  {
    "text": "because kubernetes does do more than",
    "start": "55039",
    "end": "57760"
  },
  {
    "text": "just orchestrate containers",
    "start": "57760",
    "end": "60079"
  },
  {
    "text": "there is at least networking and storage",
    "start": "60079",
    "end": "62239"
  },
  {
    "text": "involved as well",
    "start": "62239",
    "end": "63600"
  },
  {
    "text": "so",
    "start": "63600",
    "end": "64400"
  },
  {
    "text": "let's broaden this definition a little",
    "start": "64400",
    "end": "66400"
  },
  {
    "text": "bit",
    "start": "66400",
    "end": "67680"
  },
  {
    "text": "and let's say",
    "start": "67680",
    "end": "69200"
  },
  {
    "text": "kubernetes",
    "start": "69200",
    "end": "70479"
  },
  {
    "text": "may be characterized as an",
    "start": "70479",
    "end": "72560"
  },
  {
    "text": "infrastructure orchestration platform",
    "start": "72560",
    "end": "75759"
  },
  {
    "text": "but",
    "start": "75759",
    "end": "76640"
  },
  {
    "text": "again",
    "start": "76640",
    "end": "78080"
  },
  {
    "text": "the defining characteristic",
    "start": "78080",
    "end": "80560"
  },
  {
    "text": "of infrastructure orchestration",
    "start": "80560",
    "end": "83280"
  },
  {
    "text": "is operation automation so i would say",
    "start": "83280",
    "end": "87280"
  },
  {
    "text": "we may safely arrive at the conclusion",
    "start": "87280",
    "end": "90560"
  },
  {
    "text": "that kubernetes can be characterized",
    "start": "90560",
    "end": "93439"
  },
  {
    "text": "as an operation automation platform",
    "start": "93439",
    "end": "97920"
  },
  {
    "text": "kubernetes implements operation",
    "start": "98799",
    "end": "100880"
  },
  {
    "text": "automation with the help of kubernetes",
    "start": "100880",
    "end": "103040"
  },
  {
    "text": "controller and kubernetes resources",
    "start": "103040",
    "end": "107360"
  },
  {
    "text": "there are two types of controllers and",
    "start": "107520",
    "end": "109520"
  },
  {
    "text": "there are two types of resources",
    "start": "109520",
    "end": "113119"
  },
  {
    "text": "there are core controllers",
    "start": "113119",
    "end": "115119"
  },
  {
    "text": "and core resources",
    "start": "115119",
    "end": "117280"
  },
  {
    "text": "provided by kubernetes itself",
    "start": "117280",
    "end": "120320"
  },
  {
    "text": "and",
    "start": "120320",
    "end": "121360"
  },
  {
    "text": "then there are custom controllers",
    "start": "121360",
    "end": "123600"
  },
  {
    "text": "and custom resources",
    "start": "123600",
    "end": "125840"
  },
  {
    "text": "basically provided by anybody else",
    "start": "125840",
    "end": "129599"
  },
  {
    "text": "so custom controllers are creatively",
    "start": "129599",
    "end": "132319"
  },
  {
    "text": "named operators",
    "start": "132319",
    "end": "134480"
  },
  {
    "text": "and custom resources are",
    "start": "134480",
    "end": "136120"
  },
  {
    "text": "self-explanatory named",
    "start": "136120",
    "end": "138480"
  },
  {
    "text": "custom resources",
    "start": "138480",
    "end": "140640"
  },
  {
    "text": "so we let the historians decide which",
    "start": "140640",
    "end": "142720"
  },
  {
    "text": "naming scheme is better and we focus on",
    "start": "142720",
    "end": "144800"
  },
  {
    "text": "more important questions what do",
    "start": "144800",
    "end": "146480"
  },
  {
    "text": "controllers do",
    "start": "146480",
    "end": "148080"
  },
  {
    "text": "and how do controllers work",
    "start": "148080",
    "end": "150480"
  },
  {
    "text": "well controllers perform reconciliation",
    "start": "150480",
    "end": "153760"
  },
  {
    "text": "the very core of operation automation",
    "start": "153760",
    "end": "157840"
  },
  {
    "text": "controllers",
    "start": "157840",
    "end": "159200"
  },
  {
    "text": "transition your system from its current",
    "start": "159200",
    "end": "161920"
  },
  {
    "text": "state",
    "start": "161920",
    "end": "163120"
  },
  {
    "text": "to its desired state",
    "start": "163120",
    "end": "166400"
  },
  {
    "text": "and for that",
    "start": "166800",
    "end": "168400"
  },
  {
    "text": "a controller performs two distinct tasks",
    "start": "168400",
    "end": "173120"
  },
  {
    "text": "first",
    "start": "173120",
    "end": "174640"
  },
  {
    "text": "detection of state drift",
    "start": "174640",
    "end": "177120"
  },
  {
    "text": "detection of state drift is the",
    "start": "177120",
    "end": "179440"
  },
  {
    "text": "determination",
    "start": "179440",
    "end": "181200"
  },
  {
    "text": "that the current state differs from the",
    "start": "181200",
    "end": "183599"
  },
  {
    "text": "desired state",
    "start": "183599",
    "end": "185599"
  },
  {
    "text": "and second",
    "start": "185599",
    "end": "186879"
  },
  {
    "text": "mitigation",
    "start": "186879",
    "end": "188720"
  },
  {
    "text": "mitigation of state drift",
    "start": "188720",
    "end": "190720"
  },
  {
    "text": "that is the determination and the",
    "start": "190720",
    "end": "193120"
  },
  {
    "text": "execution",
    "start": "193120",
    "end": "194640"
  },
  {
    "text": "of a sequence of steps a sequence of",
    "start": "194640",
    "end": "197040"
  },
  {
    "text": "actions that transition the system",
    "start": "197040",
    "end": "200560"
  },
  {
    "text": "from its current state",
    "start": "200560",
    "end": "202480"
  },
  {
    "text": "to its desired state",
    "start": "202480",
    "end": "205599"
  },
  {
    "text": "now a kubernetes controller",
    "start": "208319",
    "end": "211120"
  },
  {
    "text": "performs reconciliation continuously",
    "start": "211120",
    "end": "214879"
  },
  {
    "text": "in a what we call a control loop",
    "start": "214879",
    "end": "218239"
  },
  {
    "text": "we determine the current state that is",
    "start": "218239",
    "end": "220560"
  },
  {
    "text": "typically reading",
    "start": "220560",
    "end": "222080"
  },
  {
    "text": "lots of lots of",
    "start": "222080",
    "end": "223760"
  },
  {
    "text": "kubernetes resources core and custom",
    "start": "223760",
    "end": "227840"
  },
  {
    "text": "based on that we determine the next",
    "start": "227840",
    "end": "230159"
  },
  {
    "text": "action",
    "start": "230159",
    "end": "231280"
  },
  {
    "text": "and then we perform the next action",
    "start": "231280",
    "end": "234319"
  },
  {
    "text": "very important",
    "start": "234319",
    "end": "235920"
  },
  {
    "text": "conceptually",
    "start": "235920",
    "end": "237519"
  },
  {
    "text": "every single time we perform the loop",
    "start": "237519",
    "end": "240400"
  },
  {
    "text": "we start in an initial state",
    "start": "240400",
    "end": "243360"
  },
  {
    "text": "that is we have absolutely no memory of",
    "start": "243360",
    "end": "246159"
  },
  {
    "text": "the previous runs",
    "start": "246159",
    "end": "248480"
  },
  {
    "text": "so in the control loop pattern",
    "start": "248480",
    "end": "250799"
  },
  {
    "text": "the control state",
    "start": "250799",
    "end": "252799"
  },
  {
    "text": "the knowledge of what we should do next",
    "start": "252799",
    "end": "256880"
  },
  {
    "text": "is derived from the operational state",
    "start": "256880",
    "end": "260560"
  },
  {
    "text": "by reading in a bunch of",
    "start": "260560",
    "end": "262720"
  },
  {
    "text": "resources core and custom",
    "start": "262720",
    "end": "266800"
  },
  {
    "text": "let's look at an example because this",
    "start": "267280",
    "end": "269440"
  },
  {
    "text": "works very well",
    "start": "269440",
    "end": "271680"
  },
  {
    "text": "very well for straightforward",
    "start": "271680",
    "end": "273360"
  },
  {
    "text": "reconciliation",
    "start": "273360",
    "end": "275040"
  },
  {
    "text": "for example the replica set controller",
    "start": "275040",
    "end": "277680"
  },
  {
    "text": "replica set controller manages",
    "start": "277680",
    "end": "280160"
  },
  {
    "text": "a set of port objects the replica set",
    "start": "280160",
    "end": "283040"
  },
  {
    "text": "controller performs two actions with",
    "start": "283040",
    "end": "285720"
  },
  {
    "text": "instantaneous effects",
    "start": "285720",
    "end": "288160"
  },
  {
    "text": "create a part",
    "start": "288160",
    "end": "289440"
  },
  {
    "text": "if there are too few",
    "start": "289440",
    "end": "291440"
  },
  {
    "text": "and delete a part if there are too many",
    "start": "291440",
    "end": "296639"
  },
  {
    "text": "now reading the replica set object",
    "start": "296639",
    "end": "299199"
  },
  {
    "text": "the replica set controller makes sure",
    "start": "299199",
    "end": "302080"
  },
  {
    "text": "that there is just the right amount of",
    "start": "302080",
    "end": "304160"
  },
  {
    "text": "part objects",
    "start": "304160",
    "end": "305919"
  },
  {
    "text": "and reading the part objects the cubelet",
    "start": "305919",
    "end": "308720"
  },
  {
    "text": "itself",
    "start": "308720",
    "end": "309759"
  },
  {
    "text": "makes sure that there is just the right",
    "start": "309759",
    "end": "311840"
  },
  {
    "text": "amount of containers",
    "start": "311840",
    "end": "314479"
  },
  {
    "text": "having multiple controllers with",
    "start": "314479",
    "end": "316960"
  },
  {
    "text": "multiple control loops involved in the",
    "start": "316960",
    "end": "319960"
  },
  {
    "text": "reconciliation is called cascading",
    "start": "319960",
    "end": "322840"
  },
  {
    "text": "reconciliation",
    "start": "322840",
    "end": "324400"
  },
  {
    "text": "each control loop managing",
    "start": "324400",
    "end": "327360"
  },
  {
    "text": "the part of the world that it knows",
    "start": "327360",
    "end": "329280"
  },
  {
    "text": "about",
    "start": "329280",
    "end": "330320"
  },
  {
    "text": "there is no central no all-knowing",
    "start": "330320",
    "end": "333199"
  },
  {
    "text": "controller",
    "start": "333199",
    "end": "335840"
  },
  {
    "text": "very cool approach however",
    "start": "336639",
    "end": "339360"
  },
  {
    "text": "that approach gets progressively more",
    "start": "339360",
    "end": "341520"
  },
  {
    "text": "complex",
    "start": "341520",
    "end": "343039"
  },
  {
    "text": "for example let's take the deployment",
    "start": "343039",
    "end": "344960"
  },
  {
    "text": "object and its rolling upgrade strategy",
    "start": "344960",
    "end": "348479"
  },
  {
    "text": "which is still pretty straightforward",
    "start": "348479",
    "end": "351360"
  },
  {
    "text": "yet already much more complicated",
    "start": "351360",
    "end": "354240"
  },
  {
    "text": "the deployment controller manages",
    "start": "354240",
    "end": "356720"
  },
  {
    "text": "replica set objects",
    "start": "356720",
    "end": "358960"
  },
  {
    "text": "yet during rolling upgrade",
    "start": "358960",
    "end": "362000"
  },
  {
    "text": "the",
    "start": "362000",
    "end": "363280"
  },
  {
    "text": "deployment controller guarantees",
    "start": "363280",
    "end": "365560"
  },
  {
    "text": "availability",
    "start": "365560",
    "end": "367280"
  },
  {
    "text": "therefore the deployment controller must",
    "start": "367280",
    "end": "369600"
  },
  {
    "text": "reach beyond the replica set object and",
    "start": "369600",
    "end": "373120"
  },
  {
    "text": "also check on the part objects it needs",
    "start": "373120",
    "end": "375680"
  },
  {
    "text": "to check on the status of the part",
    "start": "375680",
    "end": "377759"
  },
  {
    "text": "objects to see that the part object is",
    "start": "377759",
    "end": "381039"
  },
  {
    "text": "ready and available to serve requests",
    "start": "381039",
    "end": "385280"
  },
  {
    "text": "here we are at three control loops",
    "start": "385280",
    "end": "389039"
  },
  {
    "text": "three cascading reconciliations",
    "start": "389039",
    "end": "392160"
  },
  {
    "text": "and as you can imagine life is only",
    "start": "392160",
    "end": "395360"
  },
  {
    "text": "getting harder from here on up",
    "start": "395360",
    "end": "398800"
  },
  {
    "text": "so imagine we are performing a database",
    "start": "399840",
    "end": "402400"
  },
  {
    "text": "upgrade our business requirements",
    "start": "402400",
    "end": "405120"
  },
  {
    "text": "require that we upgrade the database one",
    "start": "405120",
    "end": "407520"
  },
  {
    "text": "short at a time without ever falling",
    "start": "407520",
    "end": "410160"
  },
  {
    "text": "under the replication threshold per",
    "start": "410160",
    "end": "412240"
  },
  {
    "text": "shard",
    "start": "412240",
    "end": "413919"
  },
  {
    "text": "how could you implement that",
    "start": "413919",
    "end": "415759"
  },
  {
    "text": "well",
    "start": "415759",
    "end": "416560"
  },
  {
    "text": "you may very well attempt to express",
    "start": "416560",
    "end": "418800"
  },
  {
    "text": "that sequence of interrelated actions as",
    "start": "418800",
    "end": "422319"
  },
  {
    "text": "a number of control loops",
    "start": "422319",
    "end": "424560"
  },
  {
    "text": "and a number of cascading",
    "start": "424560",
    "end": "426080"
  },
  {
    "text": "reconciliations",
    "start": "426080",
    "end": "428960"
  },
  {
    "text": "but i mean just a thought you may also",
    "start": "429199",
    "end": "431680"
  },
  {
    "text": "express that sequence of interrelated",
    "start": "431680",
    "end": "434080"
  },
  {
    "text": "actions as a sequence of interrelated",
    "start": "434080",
    "end": "437599"
  },
  {
    "text": "actions a workflow just for that",
    "start": "437599",
    "end": "440000"
  },
  {
    "text": "statement i feel a touring award coming",
    "start": "440000",
    "end": "441520"
  },
  {
    "text": "on",
    "start": "441520",
    "end": "442639"
  },
  {
    "text": "but",
    "start": "442639",
    "end": "444400"
  },
  {
    "start": "443000",
    "end": "652000"
  },
  {
    "text": "now you get to combine the control loop",
    "start": "444400",
    "end": "446960"
  },
  {
    "text": "and the workflow",
    "start": "446960",
    "end": "450240"
  },
  {
    "text": "the control loop",
    "start": "450240",
    "end": "452000"
  },
  {
    "text": "is still responsible to detect state",
    "start": "452000",
    "end": "454960"
  },
  {
    "text": "drift",
    "start": "454960",
    "end": "456400"
  },
  {
    "text": "however",
    "start": "456400",
    "end": "457759"
  },
  {
    "text": "now the workflow is responsible to",
    "start": "457759",
    "end": "460000"
  },
  {
    "text": "mitigate state drift",
    "start": "460000",
    "end": "462720"
  },
  {
    "text": "well but if that wasn't that easy why",
    "start": "462720",
    "end": "464879"
  },
  {
    "text": "have we not done this before",
    "start": "464879",
    "end": "466960"
  },
  {
    "text": "well i'm glad you asked",
    "start": "466960",
    "end": "470000"
  },
  {
    "text": "the control loop is inherently",
    "start": "470720",
    "end": "474080"
  },
  {
    "text": "reliable",
    "start": "474080",
    "end": "475599"
  },
  {
    "text": "any failure like a crash is trivially",
    "start": "475599",
    "end": "479520"
  },
  {
    "text": "tolerated",
    "start": "479520",
    "end": "481039"
  },
  {
    "text": "since the control loop has no memory of",
    "start": "481039",
    "end": "483759"
  },
  {
    "text": "a previous run to begin with",
    "start": "483759",
    "end": "486879"
  },
  {
    "text": "after the controller restarts it will",
    "start": "486879",
    "end": "489360"
  },
  {
    "text": "just continue business as usual",
    "start": "489360",
    "end": "493680"
  },
  {
    "text": "however",
    "start": "493680",
    "end": "494800"
  },
  {
    "text": "a workflow is not inherently reliable",
    "start": "494800",
    "end": "498319"
  },
  {
    "text": "a failure like a crash",
    "start": "498319",
    "end": "500800"
  },
  {
    "text": "is",
    "start": "500800",
    "end": "502080"
  },
  {
    "text": "a major",
    "start": "502080",
    "end": "503360"
  },
  {
    "text": "at least a minor catastrophe",
    "start": "503360",
    "end": "505759"
  },
  {
    "text": "if step 1 has been performed but step 2",
    "start": "505759",
    "end": "508879"
  },
  {
    "text": "and step 3 have not your system is in an",
    "start": "508879",
    "end": "511919"
  },
  {
    "text": "inconsistent state",
    "start": "511919",
    "end": "514159"
  },
  {
    "text": "and the next run of the control loop may",
    "start": "514159",
    "end": "517120"
  },
  {
    "text": "actually not be able to detect that we",
    "start": "517120",
    "end": "520080"
  },
  {
    "text": "all know the consequences",
    "start": "520080",
    "end": "521919"
  },
  {
    "text": "dangling resources difficult garbage",
    "start": "521919",
    "end": "524560"
  },
  {
    "text": "collection",
    "start": "524560",
    "end": "525760"
  },
  {
    "text": "and lots of lots of messages on slack if",
    "start": "525760",
    "end": "527839"
  },
  {
    "text": "anybody knows what machines they are and",
    "start": "527839",
    "end": "530399"
  },
  {
    "text": "who they belong to",
    "start": "530399",
    "end": "534000"
  },
  {
    "text": "well",
    "start": "534000",
    "end": "534880"
  },
  {
    "text": "meet temporal",
    "start": "534880",
    "end": "537600"
  },
  {
    "text": "temporal is an open source platform for",
    "start": "537600",
    "end": "540399"
  },
  {
    "text": "reliable workflow execution",
    "start": "540399",
    "end": "543680"
  },
  {
    "text": "you write your workflow in plain old",
    "start": "543680",
    "end": "545839"
  },
  {
    "text": "java plain old go plain old javascript",
    "start": "545839",
    "end": "549680"
  },
  {
    "text": "plain old php what have you",
    "start": "549680",
    "end": "552640"
  },
  {
    "text": "and temporal guarantees",
    "start": "552640",
    "end": "555360"
  },
  {
    "text": "that your workflow execution cannot fail",
    "start": "555360",
    "end": "559600"
  },
  {
    "text": "if a crash happens temporal resumes your",
    "start": "559600",
    "end": "563839"
  },
  {
    "text": "workflow execution",
    "start": "563839",
    "end": "565680"
  },
  {
    "text": "in the exact same state at the exact",
    "start": "565680",
    "end": "568560"
  },
  {
    "text": "same location it was in when it crashed",
    "start": "568560",
    "end": "571839"
  },
  {
    "text": "so from the point of view of the",
    "start": "571839",
    "end": "573839"
  },
  {
    "text": "workflow execution that crash",
    "start": "573839",
    "end": "576480"
  },
  {
    "text": "never happened",
    "start": "576480",
    "end": "578399"
  },
  {
    "text": "now that's quite a promise",
    "start": "578399",
    "end": "580320"
  },
  {
    "text": "and temporal as a technology can back",
    "start": "580320",
    "end": "582399"
  },
  {
    "text": "that up",
    "start": "582399",
    "end": "584000"
  },
  {
    "text": "and to prove that temporal can back that",
    "start": "584000",
    "end": "585760"
  },
  {
    "text": "up the hard part of this presentation i",
    "start": "585760",
    "end": "588240"
  },
  {
    "text": "will faithfully hand over to matt for",
    "start": "588240",
    "end": "590880"
  },
  {
    "text": "the rest of this presentation",
    "start": "590880",
    "end": "594000"
  },
  {
    "text": "oh thank you thank you thank you",
    "start": "595760",
    "end": "599519"
  },
  {
    "text": "thank you dominic for the great intro um",
    "start": "600080",
    "end": "602720"
  },
  {
    "text": "so now that dominic has told us all",
    "start": "602720",
    "end": "604720"
  },
  {
    "text": "about how operators uh controllers and",
    "start": "604720",
    "end": "608079"
  },
  {
    "text": "temporal each work i'm going to talk",
    "start": "608079",
    "end": "610399"
  },
  {
    "text": "about how we've combined the two at",
    "start": "610399",
    "end": "612240"
  },
  {
    "text": "chronosphere",
    "start": "612240",
    "end": "614240"
  },
  {
    "text": "at chronosphere we rely heavily on m3db",
    "start": "614240",
    "end": "617519"
  },
  {
    "text": "as part of our hosted observability",
    "start": "617519",
    "end": "619440"
  },
  {
    "text": "platform",
    "start": "619440",
    "end": "620720"
  },
  {
    "text": "m3db itself is an open source time",
    "start": "620720",
    "end": "623839"
  },
  {
    "text": "series database that was particularly",
    "start": "623839",
    "end": "626240"
  },
  {
    "text": "built for large scale and high",
    "start": "626240",
    "end": "628399"
  },
  {
    "text": "throughput use cases and part of what",
    "start": "628399",
    "end": "630800"
  },
  {
    "text": "makes it really well suited for this",
    "start": "630800",
    "end": "633040"
  },
  {
    "text": "is that m3db is highly fault tolerant",
    "start": "633040",
    "end": "635839"
  },
  {
    "text": "and it accomplishes this by sharding",
    "start": "635839",
    "end": "638160"
  },
  {
    "text": "data as you write it to the database",
    "start": "638160",
    "end": "641120"
  },
  {
    "text": "replicating those shards across",
    "start": "641120",
    "end": "642959"
  },
  {
    "text": "different failure domains so you can",
    "start": "642959",
    "end": "644480"
  },
  {
    "text": "think of this as like zones in a cloud",
    "start": "644480",
    "end": "646720"
  },
  {
    "text": "region",
    "start": "646720",
    "end": "648079"
  },
  {
    "text": "and ensuring that those shards remain",
    "start": "648079",
    "end": "649839"
  },
  {
    "text": "available",
    "start": "649839",
    "end": "652320"
  },
  {
    "start": "652000",
    "end": "734000"
  },
  {
    "text": "in order to make managing m3db easier",
    "start": "652880",
    "end": "656079"
  },
  {
    "text": "we built the kubernetes operator for it",
    "start": "656079",
    "end": "658720"
  },
  {
    "text": "and the kubernetes operator is also open",
    "start": "658720",
    "end": "661200"
  },
  {
    "text": "source and really manages the lifecycle",
    "start": "661200",
    "end": "664000"
  },
  {
    "text": "of m3db",
    "start": "664000",
    "end": "665600"
  },
  {
    "text": "some of the core parts of this lifecycle",
    "start": "665600",
    "end": "667920"
  },
  {
    "text": "are creating new clusters scaling",
    "start": "667920",
    "end": "670480"
  },
  {
    "text": "existing ones and upgrading existing",
    "start": "670480",
    "end": "673040"
  },
  {
    "text": "ones and upgrading clusters actually",
    "start": "673040",
    "end": "676079"
  },
  {
    "text": "tends to be one of the trickier",
    "start": "676079",
    "end": "677519"
  },
  {
    "text": "operations and this is where we",
    "start": "677519",
    "end": "679120"
  },
  {
    "text": "introduce temporal to make it easier",
    "start": "679120",
    "end": "682560"
  },
  {
    "text": "to give you an idea of why this can be",
    "start": "682560",
    "end": "684399"
  },
  {
    "text": "tricky",
    "start": "684399",
    "end": "686240"
  },
  {
    "text": "so as i said m3db uh you know provides",
    "start": "686240",
    "end": "689440"
  },
  {
    "text": "fault tolerance and it ensures or",
    "start": "689440",
    "end": "692000"
  },
  {
    "text": "provides this by doing all uh reads and",
    "start": "692000",
    "end": "694800"
  },
  {
    "text": "writes based on a quorum response so in",
    "start": "694800",
    "end": "697440"
  },
  {
    "text": "this case uh you can see that we have",
    "start": "697440",
    "end": "699440"
  },
  {
    "text": "three replica sets uh",
    "start": "699440",
    "end": "701680"
  },
  {
    "text": "con or three m3db replicas contained in",
    "start": "701680",
    "end": "704320"
  },
  {
    "text": "three stateful sets each pinned to a",
    "start": "704320",
    "end": "706160"
  },
  {
    "text": "zone",
    "start": "706160",
    "end": "707040"
  },
  {
    "text": "um and it's okay to have an entire one",
    "start": "707040",
    "end": "709440"
  },
  {
    "text": "of these replicas be down",
    "start": "709440",
    "end": "711680"
  },
  {
    "text": "so you can think if you know you lost an",
    "start": "711680",
    "end": "713279"
  },
  {
    "text": "availability zone or had some other sort",
    "start": "713279",
    "end": "715120"
  },
  {
    "text": "of catastrophe",
    "start": "715120",
    "end": "716560"
  },
  {
    "text": "so long as two out of the three",
    "start": "716560",
    "end": "718320"
  },
  {
    "text": "instances for a given shard are up and",
    "start": "718320",
    "end": "720480"
  },
  {
    "text": "users will not see any failing reads or",
    "start": "720480",
    "end": "723040"
  },
  {
    "text": "rights",
    "start": "723040",
    "end": "724480"
  },
  {
    "text": "however as soon as you lose instances",
    "start": "724480",
    "end": "726959"
  },
  {
    "text": "from a second stateful set",
    "start": "726959",
    "end": "728880"
  },
  {
    "text": "you won't be able to uphold quorum and",
    "start": "728880",
    "end": "730800"
  },
  {
    "text": "users will begin to see impact",
    "start": "730800",
    "end": "734399"
  },
  {
    "start": "734000",
    "end": "803000"
  },
  {
    "text": "in addition to needing to respect quorum",
    "start": "734399",
    "end": "736959"
  },
  {
    "text": "when we do upgrades there are a few",
    "start": "736959",
    "end": "739200"
  },
  {
    "text": "other kind of safety aspects to consider",
    "start": "739200",
    "end": "741760"
  },
  {
    "text": "so one we wanted to prevent against a",
    "start": "741760",
    "end": "743839"
  },
  {
    "text": "case where you go to roll out a new",
    "start": "743839",
    "end": "746160"
  },
  {
    "text": "version of m3db and maybe it's passing",
    "start": "746160",
    "end": "749279"
  },
  {
    "text": "health checks but misbehaving in some",
    "start": "749279",
    "end": "751360"
  },
  {
    "text": "other way",
    "start": "751360",
    "end": "752880"
  },
  {
    "text": "and this is an intentional choice mainly",
    "start": "752880",
    "end": "754880"
  },
  {
    "text": "because we didn't want to have to embed",
    "start": "754880",
    "end": "757600"
  },
  {
    "text": "a lot of complex logic into the health",
    "start": "757600",
    "end": "759760"
  },
  {
    "text": "checks uh for one you can imagine that",
    "start": "759760",
    "end": "762320"
  },
  {
    "text": "then you would have to deploy the",
    "start": "762320",
    "end": "763519"
  },
  {
    "text": "database in order to deploy or in order",
    "start": "763519",
    "end": "765839"
  },
  {
    "text": "to change the way that it checks its own",
    "start": "765839",
    "end": "767680"
  },
  {
    "text": "health and also each node would have to",
    "start": "767680",
    "end": "770160"
  },
  {
    "text": "have a much",
    "start": "770160",
    "end": "771760"
  },
  {
    "text": "higher level view of the cluster than it",
    "start": "771760",
    "end": "773680"
  },
  {
    "text": "typically has on a onenote basis",
    "start": "773680",
    "end": "776320"
  },
  {
    "text": "and then in terms of how practical",
    "start": "776320",
    "end": "777920"
  },
  {
    "text": "deploys are we also",
    "start": "777920",
    "end": "780000"
  },
  {
    "text": "need them to be fast so when a database",
    "start": "780000",
    "end": "782480"
  },
  {
    "text": "node comes up it has to build up a lot",
    "start": "782480",
    "end": "784720"
  },
  {
    "text": "of in in-memory state from disk before",
    "start": "784720",
    "end": "786639"
  },
  {
    "text": "it can serve requests",
    "start": "786639",
    "end": "789120"
  },
  {
    "text": "is part of a process that we call",
    "start": "789120",
    "end": "790639"
  },
  {
    "text": "bootstrapping",
    "start": "790639",
    "end": "792399"
  },
  {
    "text": "and if you only deployed one pod at a",
    "start": "792399",
    "end": "794480"
  },
  {
    "text": "time which would be the default with the",
    "start": "794480",
    "end": "796480"
  },
  {
    "text": "stateful set",
    "start": "796480",
    "end": "797920"
  },
  {
    "text": "it could take potentially days to deploy",
    "start": "797920",
    "end": "800560"
  },
  {
    "text": "larger clusters",
    "start": "800560",
    "end": "803519"
  },
  {
    "start": "803000",
    "end": "859000"
  },
  {
    "text": "around the time that we were trying to",
    "start": "803920",
    "end": "805360"
  },
  {
    "text": "improve",
    "start": "805360",
    "end": "806560"
  },
  {
    "text": "the speed and safety of deploys we had",
    "start": "806560",
    "end": "809120"
  },
  {
    "text": "already started using temporal in other",
    "start": "809120",
    "end": "811519"
  },
  {
    "text": "parts of our stack at chronosphere so",
    "start": "811519",
    "end": "814160"
  },
  {
    "text": "temporal drives our internal deployment",
    "start": "814160",
    "end": "816959"
  },
  {
    "text": "platform a bunch of end-to-end tests as",
    "start": "816959",
    "end": "819600"
  },
  {
    "text": "well as a variety of kubernetes cluster",
    "start": "819600",
    "end": "822560"
  },
  {
    "text": "level tooling",
    "start": "822560",
    "end": "824240"
  },
  {
    "text": "and throughout this uh throughout",
    "start": "824240",
    "end": "826399"
  },
  {
    "text": "introducing it we've built up this large",
    "start": "826399",
    "end": "828480"
  },
  {
    "text": "library of activities and other kind of",
    "start": "828480",
    "end": "831360"
  },
  {
    "text": "helpers for writing workflows so these",
    "start": "831360",
    "end": "834240"
  },
  {
    "text": "include things like",
    "start": "834240",
    "end": "836000"
  },
  {
    "text": "checking internal chronosphere apis to",
    "start": "836000",
    "end": "838320"
  },
  {
    "text": "see what alerts are firing",
    "start": "838320",
    "end": "840720"
  },
  {
    "text": "for some given dimension of the cluster",
    "start": "840720",
    "end": "842959"
  },
  {
    "text": "uh checking metrics as we roll things",
    "start": "842959",
    "end": "845199"
  },
  {
    "text": "out to make sure that say incoming",
    "start": "845199",
    "end": "847199"
  },
  {
    "text": "rights didn't drop off a cliff uh things",
    "start": "847199",
    "end": "849600"
  },
  {
    "text": "like that and then there's also a lot of",
    "start": "849600",
    "end": "852560"
  },
  {
    "text": "support for driving workflows via slack",
    "start": "852560",
    "end": "856000"
  },
  {
    "text": "which i'll talk a little bit about in a",
    "start": "856000",
    "end": "857360"
  },
  {
    "text": "bit",
    "start": "857360",
    "end": "859600"
  },
  {
    "start": "859000",
    "end": "900000"
  },
  {
    "text": "so taking a look at what it takes to",
    "start": "859680",
    "end": "862240"
  },
  {
    "text": "upgrade a cluster",
    "start": "862240",
    "end": "863760"
  },
  {
    "text": "using temporal and our operator",
    "start": "863760",
    "end": "866880"
  },
  {
    "text": "so now when a user goes to deploy a new",
    "start": "866880",
    "end": "869360"
  },
  {
    "text": "manifest rather than just directly",
    "start": "869360",
    "end": "871199"
  },
  {
    "text": "sending it to kubernetes it first gets",
    "start": "871199",
    "end": "873839"
  },
  {
    "text": "sent to a service called deployer",
    "start": "873839",
    "end": "876880"
  },
  {
    "text": "deployer is also run inside of the",
    "start": "876880",
    "end": "878959"
  },
  {
    "text": "kubernetes cluster",
    "start": "878959",
    "end": "880480"
  },
  {
    "text": "and it's a single binary that is both",
    "start": "880480",
    "end": "882560"
  },
  {
    "text": "that serves both grpc service for",
    "start": "882560",
    "end": "885440"
  },
  {
    "text": "interacting with deploys as well as a",
    "start": "885440",
    "end": "888240"
  },
  {
    "text": "temporal worker and then upon receiving",
    "start": "888240",
    "end": "890959"
  },
  {
    "text": "a new manifest to deploy deployer first",
    "start": "890959",
    "end": "893680"
  },
  {
    "text": "performs some validation and then",
    "start": "893680",
    "end": "895839"
  },
  {
    "text": "submits it to kubernetes that the",
    "start": "895839",
    "end": "897680"
  },
  {
    "text": "operator is aware of it",
    "start": "897680",
    "end": "900639"
  },
  {
    "text": "instead of the operator immediately",
    "start": "900639",
    "end": "902560"
  },
  {
    "text": "acting on",
    "start": "902560",
    "end": "904160"
  },
  {
    "text": "each stateful set it actually waits for",
    "start": "904160",
    "end": "906240"
  },
  {
    "text": "the temporal workflow to",
    "start": "906240",
    "end": "908480"
  },
  {
    "text": "kind of unblock processing of that given",
    "start": "908480",
    "end": "910959"
  },
  {
    "text": "stateful set so this is all driven via",
    "start": "910959",
    "end": "913279"
  },
  {
    "text": "annotations",
    "start": "913279",
    "end": "914720"
  },
  {
    "text": "and when you first go to deploy a new",
    "start": "914720",
    "end": "917120"
  },
  {
    "text": "manifest",
    "start": "917120",
    "end": "918240"
  },
  {
    "text": "the operator actually won't do anything",
    "start": "918240",
    "end": "920480"
  },
  {
    "text": "on a given stateful set until it notices",
    "start": "920480",
    "end": "922480"
  },
  {
    "text": "this annotation present",
    "start": "922480",
    "end": "925600"
  },
  {
    "start": "925000",
    "end": "974000"
  },
  {
    "text": "once the annotation has been set then",
    "start": "925600",
    "end": "927680"
  },
  {
    "text": "the responsibility for the next part of",
    "start": "927680",
    "end": "929440"
  },
  {
    "text": "the deploy is handed off to the operator",
    "start": "929440",
    "end": "932720"
  },
  {
    "text": "so the stateful sets are all configured",
    "start": "932720",
    "end": "934880"
  },
  {
    "text": "with an on delete update strategy",
    "start": "934880",
    "end": "937199"
  },
  {
    "text": "meaning that",
    "start": "937199",
    "end": "938480"
  },
  {
    "text": "we actually control when pods get uh",
    "start": "938480",
    "end": "941120"
  },
  {
    "text": "restarted and brought up on the new",
    "start": "941120",
    "end": "942959"
  },
  {
    "text": "image so the operator will uh patch the",
    "start": "942959",
    "end": "946000"
  },
  {
    "text": "stateful set and then proceed to delete",
    "start": "946000",
    "end": "948320"
  },
  {
    "text": "pods in batches until the entire",
    "start": "948320",
    "end": "950800"
  },
  {
    "text": "stateful set is processed",
    "start": "950800",
    "end": "952720"
  },
  {
    "text": "and then uh upon finishing processing",
    "start": "952720",
    "end": "955279"
  },
  {
    "text": "the workflow notices that that stateful",
    "start": "955279",
    "end": "957680"
  },
  {
    "text": "set has been processed uh and blocks",
    "start": "957680",
    "end": "960560"
  },
  {
    "text": "until the user kind of unblocks the",
    "start": "960560",
    "end": "963040"
  },
  {
    "text": "workflow",
    "start": "963040",
    "end": "964320"
  },
  {
    "text": "so in this case again you've upgraded an",
    "start": "964320",
    "end": "966959"
  },
  {
    "text": "entire stateful set and the operator",
    "start": "966959",
    "end": "969120"
  },
  {
    "text": "will actually just wait until the",
    "start": "969120",
    "end": "971199"
  },
  {
    "text": "workflow unblocks it",
    "start": "971199",
    "end": "975040"
  },
  {
    "start": "974000",
    "end": "1020000"
  },
  {
    "text": "in terms of what this workflow looks",
    "start": "975199",
    "end": "977040"
  },
  {
    "text": "like the workflows that we have in our",
    "start": "977040",
    "end": "979680"
  },
  {
    "text": "deployment system would have been really",
    "start": "979680",
    "end": "981360"
  },
  {
    "text": "difficult to replicate without temporal",
    "start": "981360",
    "end": "983920"
  },
  {
    "text": "so we've uh leaned heavily on nested",
    "start": "983920",
    "end": "986959"
  },
  {
    "text": "workflow execution and running multiple",
    "start": "986959",
    "end": "989279"
  },
  {
    "text": "workflows in parallel",
    "start": "989279",
    "end": "991279"
  },
  {
    "text": "so every deployment workflow actually",
    "start": "991279",
    "end": "993440"
  },
  {
    "text": "runs in parallel to a workflow that",
    "start": "993440",
    "end": "997199"
  },
  {
    "text": "may make sure that the state of the",
    "start": "997199",
    "end": "999040"
  },
  {
    "text": "entire system remains healthy while the",
    "start": "999040",
    "end": "1001360"
  },
  {
    "text": "deploy is rolling out",
    "start": "1001360",
    "end": "1003040"
  },
  {
    "text": "and we'll talk a little bit about what",
    "start": "1003040",
    "end": "1004560"
  },
  {
    "text": "that health",
    "start": "1004560",
    "end": "1005920"
  },
  {
    "text": "check looks like in a bit",
    "start": "1005920",
    "end": "1008000"
  },
  {
    "text": "but when we go to kick off a deploy we",
    "start": "1008000",
    "end": "1010000"
  },
  {
    "text": "first execute a temporal activity to get",
    "start": "1010000",
    "end": "1012560"
  },
  {
    "text": "all the stateful sets that are owned by",
    "start": "1012560",
    "end": "1014720"
  },
  {
    "text": "a given cluster and then for each",
    "start": "1014720",
    "end": "1016720"
  },
  {
    "text": "stateful set",
    "start": "1016720",
    "end": "1018000"
  },
  {
    "text": "we begin processing it",
    "start": "1018000",
    "end": "1020480"
  },
  {
    "start": "1020000",
    "end": "1074000"
  },
  {
    "text": "the processing steps are pretty much",
    "start": "1020480",
    "end": "1022000"
  },
  {
    "text": "what i mentioned earlier",
    "start": "1022000",
    "end": "1023920"
  },
  {
    "text": "so the uh",
    "start": "1023920",
    "end": "1025839"
  },
  {
    "text": "workflow will set an annotation on the",
    "start": "1025839",
    "end": "1028240"
  },
  {
    "text": "stateful set wait until the operator has",
    "start": "1028240",
    "end": "1031520"
  },
  {
    "text": "deleted all the batches of pods and the",
    "start": "1031520",
    "end": "1034880"
  },
  {
    "text": "stateful set is healthy and it'll also",
    "start": "1034880",
    "end": "1037280"
  },
  {
    "text": "actually wait for that staple set to",
    "start": "1037280",
    "end": "1039438"
  },
  {
    "text": "remain healthy for a given settle period",
    "start": "1039439",
    "end": "1041678"
  },
  {
    "text": "before moving on to the next batch and",
    "start": "1041679",
    "end": "1043918"
  },
  {
    "text": "then finally when that's when it's time",
    "start": "1043919",
    "end": "1045600"
  },
  {
    "text": "for that it prompts the user via slack",
    "start": "1045600",
    "end": "1048240"
  },
  {
    "text": "interaction to unblock the deploy",
    "start": "1048240",
    "end": "1051200"
  },
  {
    "text": "and what's nice too is that all of this",
    "start": "1051200",
    "end": "1053280"
  },
  {
    "text": "is configurable as inputs to the",
    "start": "1053280",
    "end": "1055520"
  },
  {
    "text": "workflow so",
    "start": "1055520",
    "end": "1057440"
  },
  {
    "text": "you can imagine the wait times can be",
    "start": "1057440",
    "end": "1059440"
  },
  {
    "text": "configured whether or not you prompt",
    "start": "1059440",
    "end": "1061520"
  },
  {
    "text": "users is configurable so for example in",
    "start": "1061520",
    "end": "1064480"
  },
  {
    "text": "our test clusters as we roll out new",
    "start": "1064480",
    "end": "1066400"
  },
  {
    "text": "images we're not going to prompt a user",
    "start": "1066400",
    "end": "1068080"
  },
  {
    "text": "on slack constantly",
    "start": "1068080",
    "end": "1070000"
  },
  {
    "text": "but in production clusters we would have",
    "start": "1070000",
    "end": "1071760"
  },
  {
    "text": "more conservative defaults",
    "start": "1071760",
    "end": "1075120"
  },
  {
    "start": "1074000",
    "end": "1126000"
  },
  {
    "text": "what's great is that all these workflows",
    "start": "1075440",
    "end": "1077840"
  },
  {
    "text": "run while another workflow is in",
    "start": "1077840",
    "end": "1079600"
  },
  {
    "text": "parallel checking for errors and will",
    "start": "1079600",
    "end": "1081840"
  },
  {
    "text": "actually stop the deploy if anything in",
    "start": "1081840",
    "end": "1084160"
  },
  {
    "text": "the system becomes unhealthy and again",
    "start": "1084160",
    "end": "1086240"
  },
  {
    "text": "this is based on more than just any one",
    "start": "1086240",
    "end": "1088320"
  },
  {
    "text": "pods given",
    "start": "1088320",
    "end": "1089520"
  },
  {
    "text": "health checks this is based on a view of",
    "start": "1089520",
    "end": "1091840"
  },
  {
    "text": "the entire system",
    "start": "1091840",
    "end": "1093280"
  },
  {
    "text": "so if any alerts begin firing for the",
    "start": "1093280",
    "end": "1095840"
  },
  {
    "text": "cluster then we will",
    "start": "1095840",
    "end": "1098720"
  },
  {
    "text": "stop and then we'll halt execution of",
    "start": "1098720",
    "end": "1100480"
  },
  {
    "text": "the workflow",
    "start": "1100480",
    "end": "1101679"
  },
  {
    "text": "this notification goes out to the user",
    "start": "1101679",
    "end": "1104080"
  },
  {
    "text": "again as a slack message and they can",
    "start": "1104080",
    "end": "1106320"
  },
  {
    "text": "choose what to do so for example",
    "start": "1106320",
    "end": "1108720"
  },
  {
    "text": "maybe it was a transient error and you",
    "start": "1108720",
    "end": "1110400"
  },
  {
    "text": "can actually continue the workflow",
    "start": "1110400",
    "end": "1112559"
  },
  {
    "text": "maybe you want to stop it where it is or",
    "start": "1112559",
    "end": "1114640"
  },
  {
    "text": "maybe you want to roll back to a",
    "start": "1114640",
    "end": "1116160"
  },
  {
    "text": "previous image and then rolling back is",
    "start": "1116160",
    "end": "1118400"
  },
  {
    "text": "actually just beginning a new workflow",
    "start": "1118400",
    "end": "1120559"
  },
  {
    "text": "to deploy",
    "start": "1120559",
    "end": "1122000"
  },
  {
    "text": "whatever was pre or whatever image was",
    "start": "1122000",
    "end": "1123919"
  },
  {
    "text": "previously present",
    "start": "1123919",
    "end": "1126880"
  },
  {
    "start": "1126000",
    "end": "1176000"
  },
  {
    "text": "the slack prompts that i mentioned are",
    "start": "1127120",
    "end": "1129520"
  },
  {
    "text": "provided as part of these generic helper",
    "start": "1129520",
    "end": "1131360"
  },
  {
    "text": "activities",
    "start": "1131360",
    "end": "1132400"
  },
  {
    "text": "so workflow authors can configure which",
    "start": "1132400",
    "end": "1135360"
  },
  {
    "text": "actions at any point in a workflow would",
    "start": "1135360",
    "end": "1137840"
  },
  {
    "text": "correspond to kind of the next steps in",
    "start": "1137840",
    "end": "1140400"
  },
  {
    "text": "the code and then users will get slack",
    "start": "1140400",
    "end": "1143600"
  },
  {
    "text": "notifications and interact with the",
    "start": "1143600",
    "end": "1145360"
  },
  {
    "text": "deployment system this way so you can",
    "start": "1145360",
    "end": "1147360"
  },
  {
    "text": "see in this example",
    "start": "1147360",
    "end": "1148799"
  },
  {
    "text": "deployment failed the workflow that",
    "start": "1148799",
    "end": "1152160"
  },
  {
    "text": "runs health checks realized that there",
    "start": "1152160",
    "end": "1154000"
  },
  {
    "text": "were",
    "start": "1154000",
    "end": "1155200"
  },
  {
    "text": "some failing pods in this case and asked",
    "start": "1155200",
    "end": "1157760"
  },
  {
    "text": "the user what to do in this case the",
    "start": "1157760",
    "end": "1159440"
  },
  {
    "text": "only options were to either stop where",
    "start": "1159440",
    "end": "1161120"
  },
  {
    "text": "it was or roll back",
    "start": "1161120",
    "end": "1163200"
  },
  {
    "text": "in the case that slack is down we also",
    "start": "1163200",
    "end": "1165760"
  },
  {
    "text": "have cli fallbacks for all of this and",
    "start": "1165760",
    "end": "1168400"
  },
  {
    "text": "or if the users just want to interact",
    "start": "1168400",
    "end": "1170000"
  },
  {
    "text": "with the deployment system that way and",
    "start": "1170000",
    "end": "1171840"
  },
  {
    "text": "then we're also working on adding a ui",
    "start": "1171840",
    "end": "1174240"
  },
  {
    "text": "on top of it",
    "start": "1174240",
    "end": "1176880"
  },
  {
    "start": "1176000",
    "end": "1258000"
  },
  {
    "text": "so to kind of wrap up some of the",
    "start": "1177039",
    "end": "1178320"
  },
  {
    "text": "concepts we've talked about here",
    "start": "1178320",
    "end": "1180320"
  },
  {
    "text": "um you know typically when you're",
    "start": "1180320",
    "end": "1181600"
  },
  {
    "text": "building these sort of reconciliation or",
    "start": "1181600",
    "end": "1184000"
  },
  {
    "text": "self-healing systems as dominic said",
    "start": "1184000",
    "end": "1186480"
  },
  {
    "text": "there are two things that you care about",
    "start": "1186480",
    "end": "1188080"
  },
  {
    "text": "detection and mitigation",
    "start": "1188080",
    "end": "1190400"
  },
  {
    "text": "detection is figuring out if parts of",
    "start": "1190400",
    "end": "1192640"
  },
  {
    "text": "the system have drifted or need some",
    "start": "1192640",
    "end": "1194640"
  },
  {
    "text": "sort of action and then mitigation is uh",
    "start": "1194640",
    "end": "1198080"
  },
  {
    "text": "converging on that desired state",
    "start": "1198080",
    "end": "1200400"
  },
  {
    "text": "and when you're working with kubernetes",
    "start": "1200400",
    "end": "1202159"
  },
  {
    "text": "which itself is modeled declaratively",
    "start": "1202159",
    "end": "1204640"
  },
  {
    "text": "you would typically be forced to model",
    "start": "1204640",
    "end": "1206799"
  },
  {
    "text": "everything yourself declaratively as",
    "start": "1206799",
    "end": "1208480"
  },
  {
    "text": "well but the actual steps of mitigation",
    "start": "1208480",
    "end": "1211520"
  },
  {
    "text": "and converging on that next state are",
    "start": "1211520",
    "end": "1213360"
  },
  {
    "text": "often a series of imperative steps and",
    "start": "1213360",
    "end": "1216159"
  },
  {
    "text": "it can be much easier to write these as",
    "start": "1216159",
    "end": "1218480"
  },
  {
    "text": "workflows that kind of maintain the",
    "start": "1218480",
    "end": "1220240"
  },
  {
    "text": "state for you uh than trying to model",
    "start": "1220240",
    "end": "1222480"
  },
  {
    "text": "that all declaratively so rather than",
    "start": "1222480",
    "end": "1224799"
  },
  {
    "text": "limiting yourself to just remaining in a",
    "start": "1224799",
    "end": "1226559"
  },
  {
    "text": "declarative model by combining operators",
    "start": "1226559",
    "end": "1229120"
  },
  {
    "text": "with temporal workflows uh you get the",
    "start": "1229120",
    "end": "1231520"
  },
  {
    "text": "best of both worlds so your",
    "start": "1231520",
    "end": "1233360"
  },
  {
    "text": "reconciliation or detection loops are",
    "start": "1233360",
    "end": "1235919"
  },
  {
    "text": "still declarative",
    "start": "1235919",
    "end": "1237440"
  },
  {
    "text": "and then the actual mitigation steps you",
    "start": "1237440",
    "end": "1239280"
  },
  {
    "text": "perform can be uh performed imperatively",
    "start": "1239280",
    "end": "1241760"
  },
  {
    "text": "as a workflow",
    "start": "1241760",
    "end": "1243039"
  },
  {
    "text": "that is what we've done with uh our",
    "start": "1243039",
    "end": "1245280"
  },
  {
    "text": "operator and we've been super happy with",
    "start": "1245280",
    "end": "1247120"
  },
  {
    "text": "it so far",
    "start": "1247120",
    "end": "1249360"
  },
  {
    "text": "so with all that said",
    "start": "1249360",
    "end": "1251120"
  },
  {
    "text": "that is it that we have for you and",
    "start": "1251120",
    "end": "1252400"
  },
  {
    "text": "we'll happy to take any questions you",
    "start": "1252400",
    "end": "1254080"
  },
  {
    "text": "have",
    "start": "1254080",
    "end": "1256250"
  },
  {
    "text": "[Applause]",
    "start": "1256250",
    "end": "1260190"
  }
]