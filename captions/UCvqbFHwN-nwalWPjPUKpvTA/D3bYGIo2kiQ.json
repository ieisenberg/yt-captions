[
  {
    "text": "hello everyone welcome to this session",
    "start": "80",
    "end": "2159"
  },
  {
    "text": "titled",
    "start": "2159",
    "end": "3120"
  },
  {
    "text": "cloud state towards stateful serverless",
    "start": "3120",
    "end": "6480"
  },
  {
    "text": "i'm jonas bonaire i'm the cto and the",
    "start": "6480",
    "end": "10080"
  },
  {
    "text": "uh at leicester and i'm joined by james",
    "start": "10080",
    "end": "12559"
  },
  {
    "text": "roper senior architect at lifeman and we",
    "start": "12559",
    "end": "16160"
  },
  {
    "text": "will try to give you a little glimpse",
    "start": "16160",
    "end": "18640"
  },
  {
    "text": "into what we believe will be the future",
    "start": "18640",
    "end": "20720"
  },
  {
    "text": "of the cloud at least part of the future",
    "start": "20720",
    "end": "22960"
  },
  {
    "text": "of the cloud",
    "start": "22960",
    "end": "25039"
  },
  {
    "text": "and through through the serverless",
    "start": "25039",
    "end": "28840"
  },
  {
    "text": "experience",
    "start": "28840",
    "end": "30720"
  },
  {
    "text": "let's see so i just want to start by",
    "start": "30720",
    "end": "32719"
  },
  {
    "text": "saying that",
    "start": "32719",
    "end": "34000"
  },
  {
    "text": "you know a lot of people talk about",
    "start": "34000",
    "end": "35680"
  },
  {
    "text": "serverless and",
    "start": "35680",
    "end": "37280"
  },
  {
    "text": "as the same thing as function as a",
    "start": "37280",
    "end": "39040"
  },
  {
    "text": "service and but but for me that's not",
    "start": "39040",
    "end": "40800"
  },
  {
    "text": "really true",
    "start": "40800",
    "end": "42000"
  },
  {
    "text": "i think certainly i think function as a",
    "start": "42000",
    "end": "44559"
  },
  {
    "text": "service",
    "start": "44559",
    "end": "45200"
  },
  {
    "text": "fast in short is a really good first",
    "start": "45200",
    "end": "48960"
  },
  {
    "text": "step",
    "start": "48960",
    "end": "49440"
  },
  {
    "text": "was it was really groundbreaking when it",
    "start": "49440",
    "end": "51199"
  },
  {
    "text": "when it came about and it's",
    "start": "51199",
    "end": "52719"
  },
  {
    "text": "really been shown in the way showing",
    "start": "52719",
    "end": "55440"
  },
  {
    "text": "what's possible",
    "start": "55440",
    "end": "57199"
  },
  {
    "text": "but it's only the first step on a long",
    "start": "57199",
    "end": "59120"
  },
  {
    "text": "journey towards this you know nirvana",
    "start": "59120",
    "end": "61280"
  },
  {
    "text": "this this amazing cloud experience that",
    "start": "61280",
    "end": "64239"
  },
  {
    "text": "we all hope to to get to one day",
    "start": "64239",
    "end": "68080"
  },
  {
    "text": "for me so serverless is really all about",
    "start": "68080",
    "end": "70560"
  },
  {
    "text": "an experience",
    "start": "70560",
    "end": "72080"
  },
  {
    "text": "an experience for developer for",
    "start": "72080",
    "end": "73600"
  },
  {
    "text": "operations for deployment",
    "start": "73600",
    "end": "75439"
  },
  {
    "text": "that is completely new you know you know",
    "start": "75439",
    "end": "77520"
  },
  {
    "text": "in order the one that sort of",
    "start": "77520",
    "end": "79280"
  },
  {
    "text": "removes as much as possible from the",
    "start": "79280",
    "end": "82080"
  },
  {
    "text": "essence",
    "start": "82080",
    "end": "82960"
  },
  {
    "text": "and moving it away to the runtime to the",
    "start": "82960",
    "end": "86000"
  },
  {
    "text": "back end",
    "start": "86000",
    "end": "86720"
  },
  {
    "text": "so you as a developer we as developers",
    "start": "86720",
    "end": "89360"
  },
  {
    "text": "can focus on",
    "start": "89360",
    "end": "90479"
  },
  {
    "text": "only the essence uh",
    "start": "90479",
    "end": "93840"
  },
  {
    "text": "you know and what i would you know what",
    "start": "93840",
    "end": "95360"
  },
  {
    "text": "i would like in in my sort of vision",
    "start": "95360",
    "end": "97759"
  },
  {
    "text": "grand vision for the",
    "start": "97759",
    "end": "98880"
  },
  {
    "text": "for the future of the cloud i would like",
    "start": "98880",
    "end": "101040"
  },
  {
    "text": "to build this or",
    "start": "101040",
    "end": "103200"
  },
  {
    "text": "build any type of application build for",
    "start": "103200",
    "end": "105520"
  },
  {
    "text": "general purpose application",
    "start": "105520",
    "end": "107119"
  },
  {
    "text": "full applications in this new experience",
    "start": "107119",
    "end": "110720"
  },
  {
    "text": "functions and services tackling is",
    "start": "110720",
    "end": "112640"
  },
  {
    "text": "currently sort of tackling",
    "start": "112640",
    "end": "114640"
  },
  {
    "text": "one subset of the use cases in a",
    "start": "114640",
    "end": "116960"
  },
  {
    "text": "non-travel application",
    "start": "116960",
    "end": "119600"
  },
  {
    "text": "sometimes a large portion sometimes a",
    "start": "119600",
    "end": "121439"
  },
  {
    "text": "small portion but it's just really hard",
    "start": "121439",
    "end": "123520"
  },
  {
    "text": "hard to tackle you know everything that",
    "start": "123520",
    "end": "126399"
  },
  {
    "text": "we need in a non-trivial",
    "start": "126399",
    "end": "128959"
  },
  {
    "text": "re real world application in just",
    "start": "128959",
    "end": "131520"
  },
  {
    "text": "function as a service so we need",
    "start": "131520",
    "end": "133120"
  },
  {
    "text": "something more",
    "start": "133120",
    "end": "135120"
  },
  {
    "text": "so the question is then what is the",
    "start": "135120",
    "end": "136800"
  },
  {
    "text": "missing piece what is missing here",
    "start": "136800",
    "end": "140400"
  },
  {
    "text": "and you know i believe that it's state",
    "start": "140400",
    "end": "142800"
  },
  {
    "text": "it's it's you know it's good ways of",
    "start": "142800",
    "end": "144560"
  },
  {
    "text": "working with state",
    "start": "144560",
    "end": "145920"
  },
  {
    "text": "solid models for abstracting overstate",
    "start": "145920",
    "end": "149280"
  },
  {
    "text": "to uh essentially you know having good",
    "start": "149280",
    "end": "152160"
  },
  {
    "text": "ways",
    "start": "152160",
    "end": "152640"
  },
  {
    "text": "of of of abstracting over states so the",
    "start": "152640",
    "end": "154800"
  },
  {
    "text": "runtime",
    "start": "154800",
    "end": "155680"
  },
  {
    "text": "can manage it for us effectively",
    "start": "155680",
    "end": "158959"
  },
  {
    "text": "you know and so are some of the",
    "start": "158959",
    "end": "162000"
  },
  {
    "text": "technical",
    "start": "162000",
    "end": "162720"
  },
  {
    "text": "re requirements that i see that we need",
    "start": "162720",
    "end": "166160"
  },
  {
    "text": "in such a sort of new way of writing any",
    "start": "166160",
    "end": "170080"
  },
  {
    "text": "type of application in this new",
    "start": "170080",
    "end": "171360"
  },
  {
    "text": "experience",
    "start": "171360",
    "end": "172080"
  },
  {
    "text": "is first support for stateful long-lived",
    "start": "172080",
    "end": "175519"
  },
  {
    "text": "addressable components components that",
    "start": "175519",
    "end": "178319"
  },
  {
    "text": "that can be virtual as well it means",
    "start": "178319",
    "end": "180000"
  },
  {
    "text": "that",
    "start": "180000",
    "end": "180560"
  },
  {
    "text": "we have stable references stable",
    "start": "180560",
    "end": "182560"
  },
  {
    "text": "addresses but they can still",
    "start": "182560",
    "end": "184159"
  },
  {
    "text": "they can still move move around uh",
    "start": "184159",
    "end": "187040"
  },
  {
    "text": "maintaining their daily integrity in",
    "start": "187040",
    "end": "188879"
  },
  {
    "text": "their state",
    "start": "188879",
    "end": "190800"
  },
  {
    "text": "while the address remains stable so even",
    "start": "190800",
    "end": "193120"
  },
  {
    "text": "if they're relocated you know passivated",
    "start": "193120",
    "end": "195200"
  },
  {
    "text": "activated",
    "start": "195200",
    "end": "196400"
  },
  {
    "text": "you can still trust the reference",
    "start": "196400",
    "end": "198239"
  },
  {
    "text": "talking to it",
    "start": "198239",
    "end": "199599"
  },
  {
    "text": "and don't want don't need to worry if it",
    "start": "199599",
    "end": "201200"
  },
  {
    "text": "fails and it's",
    "start": "201200",
    "end": "202959"
  },
  {
    "text": "re respawned etc we need a wider range",
    "start": "202959",
    "end": "207040"
  },
  {
    "text": "of options",
    "start": "207040",
    "end": "208480"
  },
  {
    "text": "of of tools in the toolbox essentially",
    "start": "208480",
    "end": "211599"
  },
  {
    "text": "for",
    "start": "211599",
    "end": "212319"
  },
  {
    "text": "distributed coordination and",
    "start": "212319",
    "end": "213760"
  },
  {
    "text": "communication you know pub sub like we",
    "start": "213760",
    "end": "215840"
  },
  {
    "text": "have in fact as a service is great",
    "start": "215840",
    "end": "217680"
  },
  {
    "text": "but it's only one one way of",
    "start": "217680",
    "end": "219280"
  },
  {
    "text": "communicating i believe we also need",
    "start": "219280",
    "end": "221680"
  },
  {
    "text": "support for point-to-point for broadcast",
    "start": "221680",
    "end": "224799"
  },
  {
    "text": "and and for things like like modeling",
    "start": "224799",
    "end": "226879"
  },
  {
    "text": "orchestration of",
    "start": "226879",
    "end": "228400"
  },
  {
    "text": "of workflows you you using things like",
    "start": "228400",
    "end": "231040"
  },
  {
    "text": "sagas process managers",
    "start": "231040",
    "end": "232720"
  },
  {
    "text": "etc we also need you know options for",
    "start": "232720",
    "end": "235519"
  },
  {
    "text": "managing distributed state reliably at",
    "start": "235519",
    "end": "237519"
  },
  {
    "text": "scale you know",
    "start": "237519",
    "end": "238560"
  },
  {
    "text": "and and not just having one size fits",
    "start": "238560",
    "end": "241200"
  },
  {
    "text": "all not saying that everything needs to",
    "start": "241200",
    "end": "242560"
  },
  {
    "text": "be strongly consistent or everything is",
    "start": "242560",
    "end": "244239"
  },
  {
    "text": "eventually consistent",
    "start": "244239",
    "end": "245439"
  },
  {
    "text": "but having you you know options ranging",
    "start": "245439",
    "end": "248720"
  },
  {
    "text": "from strong to eventual",
    "start": "248720",
    "end": "250319"
  },
  {
    "text": "through causal consistency so you can",
    "start": "250319",
    "end": "253519"
  },
  {
    "text": "fit",
    "start": "253519",
    "end": "254000"
  },
  {
    "text": "fit serve the the weakest model that",
    "start": "254000",
    "end": "256959"
  },
  {
    "text": "gives",
    "start": "256959",
    "end": "257440"
  },
  {
    "text": "the that gets the job done you know",
    "start": "257440",
    "end": "259600"
  },
  {
    "text": "because if you add",
    "start": "259600",
    "end": "260639"
  },
  {
    "text": "layers of safety or guarantees on top",
    "start": "260639",
    "end": "264240"
  },
  {
    "text": "that you actually don't need that's",
    "start": "264240",
    "end": "265680"
  },
  {
    "text": "wasteful you know so you actually want",
    "start": "265680",
    "end": "267840"
  },
  {
    "text": "the minimum guarantees that gets the job",
    "start": "267840",
    "end": "269520"
  },
  {
    "text": "done",
    "start": "269520",
    "end": "269919"
  },
  {
    "text": "that liberates the runtime to do even",
    "start": "269919",
    "end": "272639"
  },
  {
    "text": "more",
    "start": "272639",
    "end": "273120"
  },
  {
    "text": "things in terms of scale and",
    "start": "273120",
    "end": "274560"
  },
  {
    "text": "availability okay",
    "start": "274560",
    "end": "277120"
  },
  {
    "text": "we also want intelligent adaptive",
    "start": "277120",
    "end": "279040"
  },
  {
    "text": "placement of of stateful functions",
    "start": "279040",
    "end": "281680"
  },
  {
    "text": "things like sharding",
    "start": "281680",
    "end": "283120"
  },
  {
    "text": "having a physical co-location of state",
    "start": "283120",
    "end": "285440"
  },
  {
    "text": "and processing",
    "start": "285440",
    "end": "286320"
  },
  {
    "text": "as well as sticky routing these are very",
    "start": "286320",
    "end": "288240"
  },
  {
    "text": "important things in order to manage data",
    "start": "288240",
    "end": "290960"
  },
  {
    "text": "at scale performantly at scale uh you",
    "start": "290960",
    "end": "296320"
  },
  {
    "text": "know function as a service is really",
    "start": "296320",
    "end": "297680"
  },
  {
    "text": "good at abstracting over over",
    "start": "297680",
    "end": "299440"
  },
  {
    "text": "communication",
    "start": "299440",
    "end": "300320"
  },
  {
    "text": "so so you have you have your user",
    "start": "300320",
    "end": "302240"
  },
  {
    "text": "function and and you have your",
    "start": "302240",
    "end": "303919"
  },
  {
    "text": "messaging you need to worry how it ended",
    "start": "303919",
    "end": "306080"
  },
  {
    "text": "up there it just",
    "start": "306080",
    "end": "307600"
  },
  {
    "text": "is it sort of ends up on your mailbox or",
    "start": "307600",
    "end": "311120"
  },
  {
    "text": "on your queue to your function and and",
    "start": "311120",
    "end": "313520"
  },
  {
    "text": "passed into your",
    "start": "313520",
    "end": "314560"
  },
  {
    "text": "into you for processing and the same",
    "start": "314560",
    "end": "317120"
  },
  {
    "text": "thing uh",
    "start": "317120",
    "end": "317919"
  },
  {
    "text": "message out you only you own the",
    "start": "317919",
    "end": "319759"
  },
  {
    "text": "immediate sort of",
    "start": "319759",
    "end": "320960"
  },
  {
    "text": "event and you know you don't need to",
    "start": "320960",
    "end": "322800"
  },
  {
    "text": "worry about how it",
    "start": "322800",
    "end": "324000"
  },
  {
    "text": "work will end up who's going to pick it",
    "start": "324000",
    "end": "325600"
  },
  {
    "text": "up et cetera and the mechanics for doing",
    "start": "325600",
    "end": "327520"
  },
  {
    "text": "so",
    "start": "327520",
    "end": "328000"
  },
  {
    "text": "they have well-defined interfaces for",
    "start": "328000",
    "end": "329680"
  },
  {
    "text": "messaging and message out or eventing an",
    "start": "329680",
    "end": "332000"
  },
  {
    "text": "event no and you just work towards those",
    "start": "332000",
    "end": "335680"
  },
  {
    "text": "but the problem is that you know",
    "start": "335680",
    "end": "338080"
  },
  {
    "text": "sometimes you need to manage state",
    "start": "338080",
    "end": "340240"
  },
  {
    "text": "but if you talk to the to to to the data",
    "start": "340240",
    "end": "342720"
  },
  {
    "text": "to the database",
    "start": "342720",
    "end": "343600"
  },
  {
    "text": "directly you know you sort of moving a",
    "start": "343600",
    "end": "346240"
  },
  {
    "text": "lot of these operational concerns the",
    "start": "346240",
    "end": "347840"
  },
  {
    "text": "things that",
    "start": "347840",
    "end": "348400"
  },
  {
    "text": "function as a service or serverless",
    "start": "348400",
    "end": "350560"
  },
  {
    "text": "rather",
    "start": "350560",
    "end": "351680"
  },
  {
    "text": "right i would say it's meant to manage",
    "start": "351680",
    "end": "354240"
  },
  {
    "text": "for you",
    "start": "354240",
    "end": "355199"
  },
  {
    "text": "it's it's supposed to abstract away all",
    "start": "355199",
    "end": "357280"
  },
  {
    "text": "these hard things",
    "start": "357280",
    "end": "358720"
  },
  {
    "text": "but by managing you know so data access",
    "start": "358720",
    "end": "362080"
  },
  {
    "text": "and usage from within your function",
    "start": "362080",
    "end": "364160"
  },
  {
    "text": "yourself",
    "start": "364160",
    "end": "365280"
  },
  {
    "text": "you sort of eliminates that option from",
    "start": "365280",
    "end": "369039"
  },
  {
    "text": "from the table essentially and the",
    "start": "369039",
    "end": "370960"
  },
  {
    "text": "problem is that",
    "start": "370960",
    "end": "372960"
  },
  {
    "text": "now the function you know is sort of a",
    "start": "372960",
    "end": "374800"
  },
  {
    "text": "black box to the runtime",
    "start": "374800",
    "end": "376479"
  },
  {
    "text": "if the function manages state it's",
    "start": "376479",
    "end": "377919"
  },
  {
    "text": "himself the function can't sort of see",
    "start": "377919",
    "end": "380479"
  },
  {
    "text": "in and understand what's called what's",
    "start": "380479",
    "end": "382080"
  },
  {
    "text": "what's really going going on here",
    "start": "382080",
    "end": "384160"
  },
  {
    "text": "and it's it's a it's a factor sort of",
    "start": "384160",
    "end": "385919"
  },
  {
    "text": "unconstrained database access which",
    "start": "385919",
    "end": "387680"
  },
  {
    "text": "sounds like a good thing i mean more",
    "start": "387680",
    "end": "388960"
  },
  {
    "text": "power is good right",
    "start": "388960",
    "end": "390720"
  },
  {
    "text": "but it's actually not always the case",
    "start": "390720",
    "end": "392080"
  },
  {
    "text": "because it makes it really hard for the",
    "start": "392080",
    "end": "393520"
  },
  {
    "text": "runtime",
    "start": "393520",
    "end": "394000"
  },
  {
    "text": "to automate operations on behalf of the",
    "start": "394000",
    "end": "396479"
  },
  {
    "text": "function",
    "start": "396479",
    "end": "398160"
  },
  {
    "text": "so so it's really hard to understand",
    "start": "398160",
    "end": "399680"
  },
  {
    "text": "sort of the intention of each axis",
    "start": "399680",
    "end": "402240"
  },
  {
    "text": "for example is the operation to read or",
    "start": "402240",
    "end": "404240"
  },
  {
    "text": "is it right can it be cached can",
    "start": "404240",
    "end": "405840"
  },
  {
    "text": "consistency be relaxed or or a strong",
    "start": "405840",
    "end": "408639"
  },
  {
    "text": "consistency always needed",
    "start": "408639",
    "end": "410319"
  },
  {
    "text": "you know can operations proceed during",
    "start": "410319",
    "end": "412000"
  },
  {
    "text": "partitions and failures",
    "start": "412000",
    "end": "413680"
  },
  {
    "text": "etc right it's if unders if the runtime",
    "start": "413680",
    "end": "416479"
  },
  {
    "text": "understands these things",
    "start": "416479",
    "end": "417680"
  },
  {
    "text": "you can make intelligent sort of",
    "start": "417680",
    "end": "420160"
  },
  {
    "text": "decisions",
    "start": "420160",
    "end": "422400"
  },
  {
    "text": "more effectively and also you know see",
    "start": "422400",
    "end": "424880"
  },
  {
    "text": "broadly across all of your entities",
    "start": "424880",
    "end": "426960"
  },
  {
    "text": "and making and making things you know",
    "start": "426960",
    "end": "428880"
  },
  {
    "text": "collectively",
    "start": "428880",
    "end": "430720"
  },
  {
    "text": "optimized and you know as",
    "start": "430720",
    "end": "434880"
  },
  {
    "text": "timothy keller you know once said that",
    "start": "434880",
    "end": "437039"
  },
  {
    "text": "freedom is not so much the absence of",
    "start": "437039",
    "end": "440000"
  },
  {
    "text": "restrictions as finding the right",
    "start": "440000",
    "end": "441680"
  },
  {
    "text": "restrictions the liberating",
    "start": "441680",
    "end": "443840"
  },
  {
    "text": "restrictions so the question is then",
    "start": "443840",
    "end": "446400"
  },
  {
    "text": "what are those",
    "start": "446400",
    "end": "447520"
  },
  {
    "text": "liberating restrictions you know",
    "start": "447520",
    "end": "450960"
  },
  {
    "text": "and as i said in the functional service",
    "start": "450960",
    "end": "452880"
  },
  {
    "text": "is really good of abstracting over",
    "start": "452880",
    "end": "454720"
  },
  {
    "text": "communication",
    "start": "454720",
    "end": "455599"
  },
  {
    "text": "so you have messaging and a message out",
    "start": "455599",
    "end": "457520"
  },
  {
    "text": "as we just talked about",
    "start": "457520",
    "end": "460400"
  },
  {
    "text": "the question is then the question we",
    "start": "460639",
    "end": "462240"
  },
  {
    "text": "asked ourselves at lachman was is it",
    "start": "462240",
    "end": "464240"
  },
  {
    "text": "possible to abstract over state",
    "start": "464240",
    "end": "466240"
  },
  {
    "text": "in the same way that functions to",
    "start": "466240",
    "end": "468400"
  },
  {
    "text": "service abstracts",
    "start": "468400",
    "end": "469599"
  },
  {
    "text": "over communication so instead of just",
    "start": "469599",
    "end": "472240"
  },
  {
    "text": "messaging a message out you also have",
    "start": "472240",
    "end": "474000"
  },
  {
    "text": "statement",
    "start": "474000",
    "end": "475120"
  },
  {
    "text": "and state doused so it's sort of an",
    "start": "475120",
    "end": "477199"
  },
  {
    "text": "inversion of control",
    "start": "477199",
    "end": "478160"
  },
  {
    "text": "here in instead of the function manages",
    "start": "478160",
    "end": "480960"
  },
  {
    "text": "himself",
    "start": "480960",
    "end": "481840"
  },
  {
    "text": "the state gets passed to him and he can",
    "start": "481840",
    "end": "484400"
  },
  {
    "text": "just emit state",
    "start": "484400",
    "end": "486000"
  },
  {
    "text": "and all the boys or all the sort of hard",
    "start": "486000",
    "end": "488160"
  },
  {
    "text": "things around managing that how how",
    "start": "488160",
    "end": "490879"
  },
  {
    "text": "of the state is handled in the back end",
    "start": "490879",
    "end": "493919"
  },
  {
    "text": "is so delegated now to the runtime",
    "start": "493919",
    "end": "496639"
  },
  {
    "text": "in a true serverless fashion",
    "start": "496639",
    "end": "500240"
  },
  {
    "text": "you know the the problem is that that",
    "start": "500240",
    "end": "502800"
  },
  {
    "text": "crud doesn't always fit this model but",
    "start": "502800",
    "end": "504879"
  },
  {
    "text": "we need new models and new ways of",
    "start": "504879",
    "end": "506560"
  },
  {
    "text": "thinking about the state",
    "start": "506560",
    "end": "508160"
  },
  {
    "text": "now i'll get to that just in a second so",
    "start": "508160",
    "end": "511120"
  },
  {
    "text": "that that so that's what sort of the the",
    "start": "511120",
    "end": "512800"
  },
  {
    "text": "the premise when we start a cloud state",
    "start": "512800",
    "end": "515279"
  },
  {
    "text": "trying to answer the question can we",
    "start": "515279",
    "end": "516800"
  },
  {
    "text": "abstract our state in this way and can",
    "start": "516800",
    "end": "518560"
  },
  {
    "text": "we provide you know a stateful",
    "start": "518560",
    "end": "520800"
  },
  {
    "text": "addition to function as a service that's",
    "start": "520800",
    "end": "523120"
  },
  {
    "text": "great for a state less",
    "start": "523120",
    "end": "524240"
  },
  {
    "text": "workloads you know so so the joint thing",
    "start": "524240",
    "end": "526800"
  },
  {
    "text": "gives us it you know the platform we",
    "start": "526800",
    "end": "528560"
  },
  {
    "text": "need for general purpose applications",
    "start": "528560",
    "end": "532000"
  },
  {
    "text": "so what is cloud state you can you can",
    "start": "532000",
    "end": "534880"
  },
  {
    "text": "you can",
    "start": "534880",
    "end": "535440"
  },
  {
    "text": "you can find out more uh after this talk",
    "start": "535440",
    "end": "538480"
  },
  {
    "text": "if you go to cloud state or io",
    "start": "538480",
    "end": "541279"
  },
  {
    "text": "but the overview is that you know first",
    "start": "541279",
    "end": "542880"
  },
  {
    "text": "is open source full",
    "start": "542880",
    "end": "544399"
  },
  {
    "text": "fully apache youtube it's available in",
    "start": "544399",
    "end": "546399"
  },
  {
    "text": "github you can just go to go check",
    "start": "546399",
    "end": "548000"
  },
  {
    "text": "it out and mess around with the code and",
    "start": "548000",
    "end": "549839"
  },
  {
    "text": "contribute ideally if you like",
    "start": "549839",
    "end": "553120"
  },
  {
    "text": "the sort that deserves short one",
    "start": "553120",
    "end": "555600"
  },
  {
    "text": "sentence",
    "start": "555600",
    "end": "556399"
  },
  {
    "text": "is really that is distributed state",
    "start": "556399",
    "end": "558080"
  },
  {
    "text": "management for the cloud",
    "start": "558080",
    "end": "560000"
  },
  {
    "text": "in a serverless experience as i talked",
    "start": "560000",
    "end": "562160"
  },
  {
    "text": "about it",
    "start": "562160",
    "end": "563839"
  },
  {
    "text": "and and it's really it's really two",
    "start": "563839",
    "end": "565680"
  },
  {
    "text": "things first is a reference",
    "start": "565680",
    "end": "566640"
  },
  {
    "text": "implementation",
    "start": "566640",
    "end": "567839"
  },
  {
    "text": "but it's also standards or a protocol",
    "start": "567839",
    "end": "570000"
  },
  {
    "text": "and a specification",
    "start": "570000",
    "end": "571519"
  },
  {
    "text": "so this is possible to create more than",
    "start": "571519",
    "end": "573200"
  },
  {
    "text": "one implementation if people feel",
    "start": "573200",
    "end": "574959"
  },
  {
    "text": "inclined",
    "start": "574959",
    "end": "576560"
  },
  {
    "text": "but the essence is that it lets you",
    "start": "576560",
    "end": "578000"
  },
  {
    "text": "focus on your business logic your data",
    "start": "578000",
    "end": "579760"
  },
  {
    "text": "model",
    "start": "579760",
    "end": "580480"
  },
  {
    "text": "and your workflow that's it essentially",
    "start": "580480",
    "end": "584160"
  },
  {
    "text": "and how to cut configure declaratively",
    "start": "584160",
    "end": "586720"
  },
  {
    "text": "these things",
    "start": "586720",
    "end": "588160"
  },
  {
    "text": "you know it's it's sort of leveraging",
    "start": "588160",
    "end": "590000"
  },
  {
    "text": "akka to do some",
    "start": "590000",
    "end": "591360"
  },
  {
    "text": "a lot of the heavy lifting with cluster",
    "start": "591360",
    "end": "593120"
  },
  {
    "text": "sharding and and you know",
    "start": "593120",
    "end": "595360"
  },
  {
    "text": "and persistence and things like this",
    "start": "595360",
    "end": "597600"
  },
  {
    "text": "across",
    "start": "597600",
    "end": "598480"
  },
  {
    "text": "across you know the nose the kubernetes",
    "start": "598480",
    "end": "600880"
  },
  {
    "text": "parts and things like that",
    "start": "600880",
    "end": "602640"
  },
  {
    "text": "uh all the hard things around state um",
    "start": "602640",
    "end": "604880"
  },
  {
    "text": "both long-term",
    "start": "604880",
    "end": "605839"
  },
  {
    "text": "durable state as well as like more",
    "start": "605839",
    "end": "607680"
  },
  {
    "text": "short-term ephemeral state you know",
    "start": "607680",
    "end": "609279"
  },
  {
    "text": "coordination type of state scratch data",
    "start": "609279",
    "end": "611519"
  },
  {
    "text": "and and and these things are managed by",
    "start": "611519",
    "end": "613680"
  },
  {
    "text": "akka it leverages grpc",
    "start": "613680",
    "end": "615920"
  },
  {
    "text": "as a protocol uh you know between",
    "start": "615920",
    "end": "619360"
  },
  {
    "text": "the back end and the client i'll get to",
    "start": "619360",
    "end": "622079"
  },
  {
    "text": "that just in a second",
    "start": "622079",
    "end": "623760"
  },
  {
    "text": "it leverages in canadian kubernetes and",
    "start": "623760",
    "end": "625839"
  },
  {
    "text": "also runs on gravity and",
    "start": "625839",
    "end": "627040"
  },
  {
    "text": "which allows us to compile it down to",
    "start": "627040",
    "end": "628800"
  },
  {
    "text": "nate you know suzaku runs on the jvm",
    "start": "628800",
    "end": "631120"
  },
  {
    "text": "it's very important to minimize the the",
    "start": "631120",
    "end": "634079"
  },
  {
    "text": "the",
    "start": "634079",
    "end": "634560"
  },
  {
    "text": "memory overhead and the startup times",
    "start": "634560",
    "end": "637040"
  },
  {
    "text": "and growl vm",
    "start": "637040",
    "end": "638079"
  },
  {
    "text": "really helps us with that so it's really",
    "start": "638079",
    "end": "639920"
  },
  {
    "text": "polyglot and here's",
    "start": "639920",
    "end": "641360"
  },
  {
    "text": "here's where we sort of leverage grpc",
    "start": "641360",
    "end": "643519"
  },
  {
    "text": "the grpc",
    "start": "643519",
    "end": "644399"
  },
  {
    "text": "sits right in between you know is the",
    "start": "644399",
    "end": "645920"
  },
  {
    "text": "protocol how how how",
    "start": "645920",
    "end": "648079"
  },
  {
    "text": "uh clients sort of",
    "start": "648079",
    "end": "651360"
  },
  {
    "text": "make make make use of this of these this",
    "start": "651360",
    "end": "654240"
  },
  {
    "text": "sort of",
    "start": "654240",
    "end": "655360"
  },
  {
    "text": "distributed state management and",
    "start": "655360",
    "end": "657200"
  },
  {
    "text": "essentially any",
    "start": "657200",
    "end": "658720"
  },
  {
    "text": "any language that has supports for grpc",
    "start": "658720",
    "end": "660880"
  },
  {
    "text": "can can be supported",
    "start": "660880",
    "end": "662640"
  },
  {
    "text": "by cloud state because you know",
    "start": "662640",
    "end": "664640"
  },
  {
    "text": "essentially all these clients are grpc",
    "start": "664640",
    "end": "666480"
  },
  {
    "text": "clients",
    "start": "666480",
    "end": "667120"
  },
  {
    "text": "and we currently have support for",
    "start": "667120",
    "end": "668240"
  },
  {
    "text": "javascript typescript java go dark",
    "start": "668240",
    "end": "670320"
  },
  {
    "text": "python.net rust swift and scala not all",
    "start": "670320",
    "end": "672720"
  },
  {
    "text": "are them are complete",
    "start": "672720",
    "end": "674079"
  },
  {
    "text": "but a lot of them are being worked by",
    "start": "674079",
    "end": "675600"
  },
  {
    "text": "the community as we speak",
    "start": "675600",
    "end": "677360"
  },
  {
    "text": "so it's really exciting to see the",
    "start": "677360",
    "end": "678959"
  },
  {
    "text": "community pick these up and serve",
    "start": "678959",
    "end": "680880"
  },
  {
    "text": "and and sort of cracking these these",
    "start": "680880",
    "end": "684399"
  },
  {
    "text": "these client libraries out it all",
    "start": "684399",
    "end": "687360"
  },
  {
    "text": "supports like",
    "start": "687360",
    "end": "688160"
  },
  {
    "text": "policy you know as i said you know crud",
    "start": "688160",
    "end": "690079"
  },
  {
    "text": "is not always the best",
    "start": "690079",
    "end": "691360"
  },
  {
    "text": "and best you know answer to to the",
    "start": "691360",
    "end": "694880"
  },
  {
    "text": "to sort of the serverless state",
    "start": "694880",
    "end": "696399"
  },
  {
    "text": "serverless uh",
    "start": "696399",
    "end": "698079"
  },
  {
    "text": "story but you know other models that i",
    "start": "698079",
    "end": "701760"
  },
  {
    "text": "think",
    "start": "701760",
    "end": "702000"
  },
  {
    "text": "fits better is that that that we support",
    "start": "702000",
    "end": "704720"
  },
  {
    "text": "nine clustered it's event sourcing i",
    "start": "704720",
    "end": "706560"
  },
  {
    "text": "won't",
    "start": "706560",
    "end": "706880"
  },
  {
    "text": "want to talk to go through what that is",
    "start": "706880",
    "end": "708399"
  },
  {
    "text": "really and how it works but the best",
    "start": "708399",
    "end": "709760"
  },
  {
    "text": "sourcing is really really cool",
    "start": "709760",
    "end": "711200"
  },
  {
    "text": "cr dt is like is essentially",
    "start": "711200",
    "end": "713839"
  },
  {
    "text": "conflict-free replicated data types it",
    "start": "713839",
    "end": "715920"
  },
  {
    "text": "allows you to share state freely of the",
    "start": "715920",
    "end": "717519"
  },
  {
    "text": "cluster without worrying about you know",
    "start": "717519",
    "end": "719360"
  },
  {
    "text": "race conditions and and",
    "start": "719360",
    "end": "721279"
  },
  {
    "text": "inconsistent data it's eventually",
    "start": "721279",
    "end": "723360"
  },
  {
    "text": "consistent while event sourcing is",
    "start": "723360",
    "end": "724959"
  },
  {
    "text": "strongly consistent so it gives you two",
    "start": "724959",
    "end": "726639"
  },
  {
    "text": "models for that we also have key value",
    "start": "726639",
    "end": "728399"
  },
  {
    "text": "stored",
    "start": "728399",
    "end": "729519"
  },
  {
    "text": "and it supports that across a wide range",
    "start": "729519",
    "end": "731279"
  },
  {
    "text": "of databases you know sql nosql new sql",
    "start": "731279",
    "end": "733839"
  },
  {
    "text": "and also in number of replication",
    "start": "733839",
    "end": "736240"
  },
  {
    "text": "so if you're just going to if it's going",
    "start": "736240",
    "end": "737600"
  },
  {
    "text": "to end by sort of zooming out a little",
    "start": "737600",
    "end": "739519"
  },
  {
    "text": "bit what it what",
    "start": "739519",
    "end": "740480"
  },
  {
    "text": "what it looks like is that you can see",
    "start": "740480",
    "end": "743200"
  },
  {
    "text": "on the on the right hand side that",
    "start": "743200",
    "end": "745279"
  },
  {
    "text": "you know that we can write you know",
    "start": "745279",
    "end": "747920"
  },
  {
    "text": "functions or",
    "start": "747920",
    "end": "748800"
  },
  {
    "text": "these entities or or or or functions",
    "start": "748800",
    "end": "751600"
  },
  {
    "text": "stateful functions in in any language",
    "start": "751600",
    "end": "753519"
  },
  {
    "text": "like",
    "start": "753519",
    "end": "753839"
  },
  {
    "text": "we're going to look like for example a",
    "start": "753839",
    "end": "755200"
  },
  {
    "text": "python type or shopping cart we can do",
    "start": "755200",
    "end": "756959"
  },
  {
    "text": "java",
    "start": "756959",
    "end": "757839"
  },
  {
    "text": "implementation of an order and we can",
    "start": "757839",
    "end": "759519"
  },
  {
    "text": "have a javascript function implementing",
    "start": "759519",
    "end": "761600"
  },
  {
    "text": "the inventory in this in in this",
    "start": "761600",
    "end": "763360"
  },
  {
    "text": "simple example but the interesting thing",
    "start": "763360",
    "end": "765360"
  },
  {
    "text": "is that for all the clients web clients",
    "start": "765360",
    "end": "766959"
  },
  {
    "text": "iot clients",
    "start": "766959",
    "end": "768320"
  },
  {
    "text": "you know they communicate over grpc to",
    "start": "768320",
    "end": "770800"
  },
  {
    "text": "these entities",
    "start": "770800",
    "end": "771680"
  },
  {
    "text": "but they do that through the through the",
    "start": "771680",
    "end": "773680"
  },
  {
    "text": "cloud state proxy",
    "start": "773680",
    "end": "775040"
  },
  {
    "text": "and the cloud state proxy is we're",
    "start": "775040",
    "end": "776959"
  },
  {
    "text": "managing all the data on behalf of all",
    "start": "776959",
    "end": "779120"
  },
  {
    "text": "these entities",
    "start": "779120",
    "end": "780560"
  },
  {
    "text": "so it repopulates them as needed",
    "start": "780560",
    "end": "784320"
  },
  {
    "text": "you know during as they are requested",
    "start": "784320",
    "end": "786880"
  },
  {
    "text": "you know so",
    "start": "786880",
    "end": "787680"
  },
  {
    "text": "so so all of these entities are always",
    "start": "787680",
    "end": "789519"
  },
  {
    "text": "fully hot they always",
    "start": "789519",
    "end": "790800"
  },
  {
    "text": "have the latest data available they are",
    "start": "790800",
    "end": "793120"
  },
  {
    "text": "truly really end points you know",
    "start": "793120",
    "end": "795200"
  },
  {
    "text": "and the database sits in front of it",
    "start": "795200",
    "end": "797680"
  },
  {
    "text": "again having this inversion of control",
    "start": "797680",
    "end": "800480"
  },
  {
    "text": "where his entity is just you know sort",
    "start": "800480",
    "end": "802959"
  },
  {
    "text": "of sent",
    "start": "802959",
    "end": "803760"
  },
  {
    "text": "the the things he needs at this at each",
    "start": "803760",
    "end": "806320"
  },
  {
    "text": "moment",
    "start": "806320",
    "end": "806880"
  },
  {
    "text": "so to speak and the class a proxy looks",
    "start": "806880",
    "end": "809600"
  },
  {
    "text": "looks across all",
    "start": "809600",
    "end": "810480"
  },
  {
    "text": "these entities and optimizes the data",
    "start": "810480",
    "end": "813040"
  },
  {
    "text": "storage for all of these state models",
    "start": "813040",
    "end": "815040"
  },
  {
    "text": "across all the entities you have",
    "start": "815040",
    "end": "818320"
  },
  {
    "text": "so that's all i i had as an intro um",
    "start": "818320",
    "end": "822000"
  },
  {
    "text": "so now now james is going to give us a",
    "start": "822000",
    "end": "823920"
  },
  {
    "text": "little demo here",
    "start": "823920",
    "end": "826399"
  },
  {
    "text": "and go into more details about",
    "start": "826399",
    "end": "829440"
  },
  {
    "text": "how things look and how you can get this",
    "start": "829440",
    "end": "831440"
  },
  {
    "text": "get started with cloud state",
    "start": "831440",
    "end": "833360"
  },
  {
    "text": "thanks jonas now i'm going to be",
    "start": "833360",
    "end": "836240"
  },
  {
    "text": "creating",
    "start": "836240",
    "end": "836959"
  },
  {
    "text": "a demo application so you can see cloud",
    "start": "836959",
    "end": "839680"
  },
  {
    "text": "state in action",
    "start": "839680",
    "end": "841600"
  },
  {
    "text": "this demo application is going to be a q",
    "start": "841600",
    "end": "844000"
  },
  {
    "text": "a app",
    "start": "844000",
    "end": "844720"
  },
  {
    "text": "it's going to allow participants of a",
    "start": "844720",
    "end": "847360"
  },
  {
    "text": "conference",
    "start": "847360",
    "end": "848240"
  },
  {
    "text": "to ask questions and vote on those",
    "start": "848240",
    "end": "850160"
  },
  {
    "text": "questions for",
    "start": "850160",
    "end": "851519"
  },
  {
    "text": "a speaker to answer unfortunately i",
    "start": "851519",
    "end": "854639"
  },
  {
    "text": "don't think we'll be able to use this",
    "start": "854639",
    "end": "856079"
  },
  {
    "text": "for this session because i think",
    "start": "856079",
    "end": "857920"
  },
  {
    "text": "the organizers of kubecon already have a",
    "start": "857920",
    "end": "860720"
  },
  {
    "text": "q a application",
    "start": "860720",
    "end": "862399"
  },
  {
    "text": "in place but maybe next to kubecon they",
    "start": "862399",
    "end": "864560"
  },
  {
    "text": "can use this",
    "start": "864560",
    "end": "867120"
  },
  {
    "text": "so to prepare for this presentation",
    "start": "867120",
    "end": "870720"
  },
  {
    "text": "i've already got a few things in place",
    "start": "870720",
    "end": "873199"
  },
  {
    "text": "um",
    "start": "873199",
    "end": "874480"
  },
  {
    "text": "i've i'm going to use javascript for",
    "start": "874480",
    "end": "876639"
  },
  {
    "text": "this cloud state",
    "start": "876639",
    "end": "878000"
  },
  {
    "text": "um supports a range of different",
    "start": "878000",
    "end": "880160"
  },
  {
    "text": "languages but",
    "start": "880160",
    "end": "881519"
  },
  {
    "text": "javascript is is a language that many",
    "start": "881519",
    "end": "883440"
  },
  {
    "text": "people know so i've set up a package",
    "start": "883440",
    "end": "885360"
  },
  {
    "text": "json i've got a docker file so that i",
    "start": "885360",
    "end": "887199"
  },
  {
    "text": "can build this",
    "start": "887199",
    "end": "888880"
  },
  {
    "text": "and deploy it uh and the first important",
    "start": "888880",
    "end": "891920"
  },
  {
    "text": "thing that we're going to look at",
    "start": "891920",
    "end": "893120"
  },
  {
    "text": "is the protobuf file for the q a service",
    "start": "893120",
    "end": "897279"
  },
  {
    "text": "so here's our jrpc service here service",
    "start": "897279",
    "end": "899760"
  },
  {
    "text": "q a",
    "start": "899760",
    "end": "900880"
  },
  {
    "text": "there are two rpc calls ask and watch",
    "start": "900880",
    "end": "904639"
  },
  {
    "text": "so ask allows asking a question and it's",
    "start": "904639",
    "end": "907519"
  },
  {
    "text": "also used to vote on",
    "start": "907519",
    "end": "908880"
  },
  {
    "text": "a question so you send an ask request",
    "start": "908880",
    "end": "911360"
  },
  {
    "text": "with the same question that's already",
    "start": "911360",
    "end": "912639"
  },
  {
    "text": "there that will",
    "start": "912639",
    "end": "913440"
  },
  {
    "text": "register as a vote for that question",
    "start": "913440",
    "end": "916320"
  },
  {
    "text": "watch",
    "start": "916320",
    "end": "916959"
  },
  {
    "text": "allows us to get the uh the current",
    "start": "916959",
    "end": "920000"
  },
  {
    "text": "questions and votes",
    "start": "920000",
    "end": "921199"
  },
  {
    "text": "and we'll also push new messages",
    "start": "921199",
    "end": "923040"
  },
  {
    "text": "whenever there's new votes",
    "start": "923040",
    "end": "925040"
  },
  {
    "text": "so that we can update the display in",
    "start": "925040",
    "end": "927760"
  },
  {
    "text": "real time to see the voting",
    "start": "927760",
    "end": "929279"
  },
  {
    "text": "in real time you may not have seen",
    "start": "929279",
    "end": "933279"
  },
  {
    "text": "this before in a jrpc interface this is",
    "start": "933279",
    "end": "935440"
  },
  {
    "text": "uh these are",
    "start": "935440",
    "end": "937040"
  },
  {
    "text": "http transcoding annotations this will",
    "start": "937040",
    "end": "940160"
  },
  {
    "text": "allow us to consume the",
    "start": "940160",
    "end": "942399"
  },
  {
    "text": "the the uh service as a rest interface",
    "start": "942399",
    "end": "946639"
  },
  {
    "text": "and cloud stage for the watch actually",
    "start": "946639",
    "end": "948639"
  },
  {
    "text": "has support for service and events",
    "start": "948639",
    "end": "950959"
  },
  {
    "text": "and allows um and so the watch will be",
    "start": "950959",
    "end": "953279"
  },
  {
    "text": "done using server cent events",
    "start": "953279",
    "end": "956480"
  },
  {
    "text": "so another thing to look at both of",
    "start": "956480",
    "end": "958320"
  },
  {
    "text": "these requests ask",
    "start": "958320",
    "end": "959920"
  },
  {
    "text": "request and watch request have a field",
    "start": "959920",
    "end": "962320"
  },
  {
    "text": "on them called presentation",
    "start": "962320",
    "end": "964399"
  },
  {
    "text": "and that field has an annotation on it",
    "start": "964399",
    "end": "967040"
  },
  {
    "text": "saying what the entity",
    "start": "967040",
    "end": "968000"
  },
  {
    "text": "key is so a single cloud state service",
    "start": "968000",
    "end": "971440"
  },
  {
    "text": "may serve many entities each with a",
    "start": "971440",
    "end": "973600"
  },
  {
    "text": "unique key",
    "start": "973600",
    "end": "974959"
  },
  {
    "text": "and this is how cloud state knows when",
    "start": "974959",
    "end": "977040"
  },
  {
    "text": "it proxies the calls going to the",
    "start": "977040",
    "end": "978720"
  },
  {
    "text": "service",
    "start": "978720",
    "end": "980000"
  },
  {
    "text": "what the key of the entity that's",
    "start": "980000",
    "end": "981920"
  },
  {
    "text": "currently being served is",
    "start": "981920",
    "end": "983279"
  },
  {
    "text": "so that it can enrich those calls with",
    "start": "983279",
    "end": "985440"
  },
  {
    "text": "the current state",
    "start": "985440",
    "end": "986639"
  },
  {
    "text": "and be able to um provide the the user",
    "start": "986639",
    "end": "989839"
  },
  {
    "text": "function with everything it needs",
    "start": "989839",
    "end": "991440"
  },
  {
    "text": "to to be able to serve the calls so we",
    "start": "991440",
    "end": "994160"
  },
  {
    "text": "have that on both ask request and watch",
    "start": "994160",
    "end": "996000"
  },
  {
    "text": "request",
    "start": "996000",
    "end": "997440"
  },
  {
    "text": "and you can see the questions that we",
    "start": "997440",
    "end": "998959"
  },
  {
    "text": "return um from the watch request it's a",
    "start": "998959",
    "end": "1001759"
  },
  {
    "text": "stream of questions",
    "start": "1001759",
    "end": "1003519"
  },
  {
    "text": "um is just a map of questions to the",
    "start": "1003519",
    "end": "1006240"
  },
  {
    "text": "count of people that have",
    "start": "1006240",
    "end": "1008000"
  },
  {
    "text": "voted for that question",
    "start": "1008000",
    "end": "1011120"
  },
  {
    "text": "so let's get on to implementing it",
    "start": "1011120",
    "end": "1014320"
  },
  {
    "text": "so i'm going to start by requiring the",
    "start": "1014320",
    "end": "1017360"
  },
  {
    "text": "cloud state",
    "start": "1017360",
    "end": "1019040"
  },
  {
    "text": "module and i'm going to create a new",
    "start": "1019040",
    "end": "1022800"
  },
  {
    "text": "entity",
    "start": "1022800",
    "end": "1023680"
  },
  {
    "text": "in this i pass the path to this q a",
    "start": "1023680",
    "end": "1026319"
  },
  {
    "text": "proto file",
    "start": "1026319",
    "end": "1027438"
  },
  {
    "text": "as well as the fully qualified name of",
    "start": "1027439",
    "end": "1029839"
  },
  {
    "text": "the service that this",
    "start": "1029839",
    "end": "1031438"
  },
  {
    "text": "entity is going to implement now to",
    "start": "1031439",
    "end": "1033918"
  },
  {
    "text": "implement this",
    "start": "1033919",
    "end": "1034959"
  },
  {
    "text": "service i'm using a crdt codt stands for",
    "start": "1034959",
    "end": "1038480"
  },
  {
    "text": "conflict-free",
    "start": "1038480",
    "end": "1039438"
  },
  {
    "text": "replicated data type and what crdts",
    "start": "1039439",
    "end": "1042959"
  },
  {
    "text": "allow",
    "start": "1042959",
    "end": "1043760"
  },
  {
    "text": "is for state to be shared between many",
    "start": "1043760",
    "end": "1047438"
  },
  {
    "text": "nodes so we can deploy this to",
    "start": "1047439",
    "end": "1048880"
  },
  {
    "text": "many nodes and those many nodes can can",
    "start": "1048880",
    "end": "1052400"
  },
  {
    "text": "read and update that state independently",
    "start": "1052400",
    "end": "1054799"
  },
  {
    "text": "with no coordination",
    "start": "1054799",
    "end": "1057039"
  },
  {
    "text": "and they're guaranteed to all converge",
    "start": "1057039",
    "end": "1059520"
  },
  {
    "text": "on the same state",
    "start": "1059520",
    "end": "1061280"
  },
  {
    "text": "eventually so we'll see this a bit more",
    "start": "1061280",
    "end": "1063840"
  },
  {
    "text": "as we go through",
    "start": "1063840",
    "end": "1066240"
  },
  {
    "text": "one other bit of setup i'm going to set",
    "start": "1066240",
    "end": "1068080"
  },
  {
    "text": "a default value for this",
    "start": "1068080",
    "end": "1069679"
  },
  {
    "text": "entity so when a request comes in for",
    "start": "1069679",
    "end": "1073760"
  },
  {
    "text": "an entity that hasn't yet had had a",
    "start": "1073760",
    "end": "1075919"
  },
  {
    "text": "state created this callback is used",
    "start": "1075919",
    "end": "1078320"
  },
  {
    "text": "to say which crdt we're going to use and",
    "start": "1078320",
    "end": "1081440"
  },
  {
    "text": "in this case we're using something",
    "start": "1081440",
    "end": "1082640"
  },
  {
    "text": "called an",
    "start": "1082640",
    "end": "1083200"
  },
  {
    "text": "observe removed map which is a map that",
    "start": "1083200",
    "end": "1086000"
  },
  {
    "text": "um",
    "start": "1086000",
    "end": "1086559"
  },
  {
    "text": "that can be multiplied but that could be",
    "start": "1086559",
    "end": "1088640"
  },
  {
    "text": "modified things added and things removed",
    "start": "1088640",
    "end": "1090799"
  },
  {
    "text": "from",
    "start": "1090799",
    "end": "1091280"
  },
  {
    "text": "multiple nodes at a time and is",
    "start": "1091280",
    "end": "1093280"
  },
  {
    "text": "guaranteed to converge",
    "start": "1093280",
    "end": "1094880"
  },
  {
    "text": "on a single state so let's get right",
    "start": "1094880",
    "end": "1098480"
  },
  {
    "text": "into implementing",
    "start": "1098480",
    "end": "1099520"
  },
  {
    "text": "our service we'll implement the ask call",
    "start": "1099520",
    "end": "1102640"
  },
  {
    "text": "so here's our function ask we take the",
    "start": "1102640",
    "end": "1104640"
  },
  {
    "text": "request that's the",
    "start": "1104640",
    "end": "1105760"
  },
  {
    "text": "the ask request with a question in it",
    "start": "1105760",
    "end": "1108320"
  },
  {
    "text": "and we also take a context",
    "start": "1108320",
    "end": "1110320"
  },
  {
    "text": "variable and the context is what holds",
    "start": "1110320",
    "end": "1112960"
  },
  {
    "text": "the state",
    "start": "1112960",
    "end": "1114559"
  },
  {
    "text": "so i can then check does the state have",
    "start": "1114559",
    "end": "1117280"
  },
  {
    "text": "the question",
    "start": "1117280",
    "end": "1118160"
  },
  {
    "text": "that is being asked if it doesn't have",
    "start": "1118160",
    "end": "1120400"
  },
  {
    "text": "the question that's been asked",
    "start": "1120400",
    "end": "1122559"
  },
  {
    "text": "i will set it to a new g counter now g",
    "start": "1122559",
    "end": "1125840"
  },
  {
    "text": "counter is another crdt it's a counter",
    "start": "1125840",
    "end": "1129280"
  },
  {
    "text": "uh g counters it stands for grow only",
    "start": "1129280",
    "end": "1131840"
  },
  {
    "text": "counter they're great because you can",
    "start": "1131840",
    "end": "1133679"
  },
  {
    "text": "have",
    "start": "1133679",
    "end": "1134559"
  },
  {
    "text": "100 nodes up incrementing these counters",
    "start": "1134559",
    "end": "1138240"
  },
  {
    "text": "all simultaneously with no coordination",
    "start": "1138240",
    "end": "1141039"
  },
  {
    "text": "and you're guaranteed that every single",
    "start": "1141039",
    "end": "1143280"
  },
  {
    "text": "increment that you'll do will be counted",
    "start": "1143280",
    "end": "1145600"
  },
  {
    "text": "nothing's going to overwrite each other",
    "start": "1145600",
    "end": "1147200"
  },
  {
    "text": "there's no",
    "start": "1147200",
    "end": "1147760"
  },
  {
    "text": "coordination no looks g counters are",
    "start": "1147760",
    "end": "1150000"
  },
  {
    "text": "really great ci dt and we're going to",
    "start": "1150000",
    "end": "1152000"
  },
  {
    "text": "use that to count votes",
    "start": "1152000",
    "end": "1155280"
  },
  {
    "text": "the final thing that we'll do so after",
    "start": "1156400",
    "end": "1159919"
  },
  {
    "text": "we've",
    "start": "1159919",
    "end": "1160799"
  },
  {
    "text": "ensured that for that question we have a",
    "start": "1160799",
    "end": "1163440"
  },
  {
    "text": "g counter set in the map",
    "start": "1163440",
    "end": "1165200"
  },
  {
    "text": "we'll increment uh the counter for that",
    "start": "1165200",
    "end": "1167760"
  },
  {
    "text": "question by one",
    "start": "1167760",
    "end": "1169679"
  },
  {
    "text": "and finally we just return empty",
    "start": "1169679",
    "end": "1173120"
  },
  {
    "text": "so that's the ask call done the next",
    "start": "1173120",
    "end": "1175919"
  },
  {
    "text": "thing that we want to implement",
    "start": "1175919",
    "end": "1177440"
  },
  {
    "text": "is the watch call so similar to us",
    "start": "1177440",
    "end": "1180960"
  },
  {
    "text": "we take a request and context parameter",
    "start": "1180960",
    "end": "1182720"
  },
  {
    "text": "we're not going to actually use the",
    "start": "1182720",
    "end": "1183840"
  },
  {
    "text": "request parameter",
    "start": "1183840",
    "end": "1185520"
  },
  {
    "text": "and one thing i'm going to do here is",
    "start": "1185520",
    "end": "1187280"
  },
  {
    "text": "create a helper function",
    "start": "1187280",
    "end": "1188720"
  },
  {
    "text": "to copy the questions uh from",
    "start": "1188720",
    "end": "1192240"
  },
  {
    "text": "the crdt map into a straight uh",
    "start": "1192240",
    "end": "1195280"
  },
  {
    "text": "json object so there's the keys of this",
    "start": "1195280",
    "end": "1198320"
  },
  {
    "text": "object are going to be the questions",
    "start": "1198320",
    "end": "1199679"
  },
  {
    "text": "themselves",
    "start": "1199679",
    "end": "1200559"
  },
  {
    "text": "and the values will be the the current",
    "start": "1200559",
    "end": "1203200"
  },
  {
    "text": "count",
    "start": "1203200",
    "end": "1203760"
  },
  {
    "text": "the current value of the counter",
    "start": "1203760",
    "end": "1207200"
  },
  {
    "text": "so we'll iterate through the current or",
    "start": "1207200",
    "end": "1210559"
  },
  {
    "text": "map",
    "start": "1210559",
    "end": "1211679"
  },
  {
    "text": "and for each counter in question we will",
    "start": "1211679",
    "end": "1214320"
  },
  {
    "text": "then",
    "start": "1214320",
    "end": "1215039"
  },
  {
    "text": "update that counter and finally return",
    "start": "1215039",
    "end": "1218799"
  },
  {
    "text": "the questions",
    "start": "1218799",
    "end": "1220320"
  },
  {
    "text": "so now we can use that method to get the",
    "start": "1220320",
    "end": "1222640"
  },
  {
    "text": "questions",
    "start": "1222640",
    "end": "1224480"
  },
  {
    "text": "and i will then",
    "start": "1224480",
    "end": "1228158"
  },
  {
    "text": "uh return those questions and so",
    "start": "1229039",
    "end": "1232159"
  },
  {
    "text": "when this watch call is first invoked",
    "start": "1232159",
    "end": "1235520"
  },
  {
    "text": "those that those questions will be",
    "start": "1235520",
    "end": "1237440"
  },
  {
    "text": "returned",
    "start": "1237440",
    "end": "1238880"
  },
  {
    "text": "but we also want to put a new value for",
    "start": "1238880",
    "end": "1241600"
  },
  {
    "text": "the questions",
    "start": "1241600",
    "end": "1243360"
  },
  {
    "text": "every time the state is updated and so",
    "start": "1243360",
    "end": "1246240"
  },
  {
    "text": "to do that",
    "start": "1246240",
    "end": "1247200"
  },
  {
    "text": "we're going to register our on stage",
    "start": "1247200",
    "end": "1249360"
  },
  {
    "text": "change callback",
    "start": "1249360",
    "end": "1250960"
  },
  {
    "text": "and on state change allows us",
    "start": "1250960",
    "end": "1254640"
  },
  {
    "text": "to take the state and return a new",
    "start": "1254640",
    "end": "1257200"
  },
  {
    "text": "message that should be sent to the",
    "start": "1257200",
    "end": "1258480"
  },
  {
    "text": "client",
    "start": "1258480",
    "end": "1258960"
  },
  {
    "text": "each time now we could just copy the",
    "start": "1258960",
    "end": "1261520"
  },
  {
    "text": "questions",
    "start": "1261520",
    "end": "1262000"
  },
  {
    "text": "from the current state again and return",
    "start": "1262000",
    "end": "1264640"
  },
  {
    "text": "them",
    "start": "1264640",
    "end": "1265200"
  },
  {
    "text": "but this is inefficient because it means",
    "start": "1265200",
    "end": "1267600"
  },
  {
    "text": "we're",
    "start": "1267600",
    "end": "1268799"
  },
  {
    "text": "sending each uh every question with its",
    "start": "1268799",
    "end": "1271120"
  },
  {
    "text": "votes each time even if it hasn't",
    "start": "1271120",
    "end": "1272960"
  },
  {
    "text": "changed since last time",
    "start": "1272960",
    "end": "1274720"
  },
  {
    "text": "so i'm going to write another helper",
    "start": "1274720",
    "end": "1276240"
  },
  {
    "text": "function here",
    "start": "1276240",
    "end": "1278640"
  },
  {
    "text": "that's going to update the questions map",
    "start": "1278640",
    "end": "1280960"
  },
  {
    "text": "with the new",
    "start": "1280960",
    "end": "1282080"
  },
  {
    "text": "value for um with with anything that's",
    "start": "1282080",
    "end": "1285120"
  },
  {
    "text": "changed",
    "start": "1285120",
    "end": "1285840"
  },
  {
    "text": "as well as produce a an updated json",
    "start": "1285840",
    "end": "1288960"
  },
  {
    "text": "object",
    "start": "1288960",
    "end": "1290000"
  },
  {
    "text": "with just the changed values so similar",
    "start": "1290000",
    "end": "1293520"
  },
  {
    "text": "to before",
    "start": "1293520",
    "end": "1295200"
  },
  {
    "text": "i iterate through the map",
    "start": "1295200",
    "end": "1298320"
  },
  {
    "text": "and if the question in the map",
    "start": "1298320",
    "end": "1302000"
  },
  {
    "text": "doesn't exist on our existing questions",
    "start": "1302000",
    "end": "1304640"
  },
  {
    "text": "or",
    "start": "1304640",
    "end": "1305520"
  },
  {
    "text": "if um the counter value is different",
    "start": "1305520",
    "end": "1308320"
  },
  {
    "text": "then",
    "start": "1308320",
    "end": "1309120"
  },
  {
    "text": "i'll update both the questions map as",
    "start": "1309120",
    "end": "1312080"
  },
  {
    "text": "well as",
    "start": "1312080",
    "end": "1312960"
  },
  {
    "text": "the updated map that we're keeping a",
    "start": "1312960",
    "end": "1314960"
  },
  {
    "text": "track of",
    "start": "1314960",
    "end": "1316320"
  },
  {
    "text": "and finally return that and now",
    "start": "1316320",
    "end": "1319440"
  },
  {
    "text": "i can use that um that map",
    "start": "1319440",
    "end": "1323280"
  },
  {
    "text": "uh that that helper function here to to",
    "start": "1323280",
    "end": "1325679"
  },
  {
    "text": "create",
    "start": "1325679",
    "end": "1326320"
  },
  {
    "text": "to both update my questions map that i'm",
    "start": "1326320",
    "end": "1328960"
  },
  {
    "text": "keeping the track of",
    "start": "1328960",
    "end": "1330240"
  },
  {
    "text": "as well as uh return the updated get get",
    "start": "1330240",
    "end": "1333280"
  },
  {
    "text": "the updated field",
    "start": "1333280",
    "end": "1334799"
  },
  {
    "text": "and so then we'll we'll just quickly",
    "start": "1334799",
    "end": "1337440"
  },
  {
    "text": "check",
    "start": "1337440",
    "end": "1338000"
  },
  {
    "text": "if the if there are any fields that have",
    "start": "1338000",
    "end": "1340320"
  },
  {
    "text": "updated",
    "start": "1340320",
    "end": "1341039"
  },
  {
    "text": "so if the number of keys in there is",
    "start": "1341039",
    "end": "1343440"
  },
  {
    "text": "greater than zero",
    "start": "1343440",
    "end": "1344960"
  },
  {
    "text": "then we'll return the updated questions",
    "start": "1344960",
    "end": "1349279"
  },
  {
    "text": "and now we're almost finished we just",
    "start": "1349679",
    "end": "1352159"
  },
  {
    "text": "register those command handlers on the",
    "start": "1352159",
    "end": "1354000"
  },
  {
    "text": "entity so",
    "start": "1354000",
    "end": "1354880"
  },
  {
    "text": "the ask function will be used to handle",
    "start": "1354880",
    "end": "1356799"
  },
  {
    "text": "the ask command",
    "start": "1356799",
    "end": "1357919"
  },
  {
    "text": "this is from here that will handle that",
    "start": "1357919",
    "end": "1360960"
  },
  {
    "text": "and watch method will handle the watch",
    "start": "1360960",
    "end": "1363919"
  },
  {
    "text": "jrpc method",
    "start": "1363919",
    "end": "1366320"
  },
  {
    "text": "and finally we'll start the entity",
    "start": "1366320",
    "end": "1369600"
  },
  {
    "text": "and now i've implemented my q a",
    "start": "1369600",
    "end": "1373760"
  },
  {
    "text": "stateless function",
    "start": "1373760",
    "end": "1376799"
  },
  {
    "text": "so let's have let's um",
    "start": "1377120",
    "end": "1380159"
  },
  {
    "text": "now build that",
    "start": "1380159",
    "end": "1382960"
  },
  {
    "text": "so i'm going to run npm",
    "start": "1383200",
    "end": "1386840"
  },
  {
    "text": "run docker",
    "start": "1386840",
    "end": "1389679"
  },
  {
    "text": "build push so this is a helper function",
    "start": "1389679",
    "end": "1391600"
  },
  {
    "text": "that i created before",
    "start": "1391600",
    "end": "1394640"
  },
  {
    "text": "and while that's running",
    "start": "1394880",
    "end": "1397919"
  },
  {
    "text": "i'm going to quickly show you this ui",
    "start": "1397919",
    "end": "1400320"
  },
  {
    "text": "that i created",
    "start": "1400320",
    "end": "1402000"
  },
  {
    "text": "so this is a separate deployment this",
    "start": "1402000",
    "end": "1404400"
  },
  {
    "text": "obviously is not part of cloud state but",
    "start": "1404400",
    "end": "1406000"
  },
  {
    "text": "it's going to use that",
    "start": "1406000",
    "end": "1407360"
  },
  {
    "text": "um stateful service that we just created",
    "start": "1407360",
    "end": "1409840"
  },
  {
    "text": "so it will let us",
    "start": "1409840",
    "end": "1410799"
  },
  {
    "text": "select a presentation from here",
    "start": "1410799",
    "end": "1414000"
  },
  {
    "text": "and be able to ask questions on it",
    "start": "1414000",
    "end": "1417440"
  },
  {
    "text": "so i've now built the docker image uh",
    "start": "1417440",
    "end": "1420480"
  },
  {
    "text": "let's take a look",
    "start": "1420480",
    "end": "1421600"
  },
  {
    "text": "um at the descriptor for deploying a",
    "start": "1421600",
    "end": "1423360"
  },
  {
    "text": "stateful service as you can see it's",
    "start": "1423360",
    "end": "1425520"
  },
  {
    "text": "it's a kubernetes descriptor kind",
    "start": "1425520",
    "end": "1427279"
  },
  {
    "text": "stateful",
    "start": "1427279",
    "end": "1428080"
  },
  {
    "text": "service and we have uh",
    "start": "1428080",
    "end": "1431360"
  },
  {
    "text": "the user function container here with",
    "start": "1431360",
    "end": "1433760"
  },
  {
    "text": "the image that's the image that we just",
    "start": "1433760",
    "end": "1435520"
  },
  {
    "text": "built",
    "start": "1435520",
    "end": "1436000"
  },
  {
    "text": "and published so let's uh",
    "start": "1436000",
    "end": "1439360"
  },
  {
    "text": "now deploy that control",
    "start": "1439360",
    "end": "1443039"
  },
  {
    "text": "apply dash f",
    "start": "1443039",
    "end": "1446080"
  },
  {
    "text": "quanda dot yaml",
    "start": "1446080",
    "end": "1449679"
  },
  {
    "text": "and just because uh just for fun i'm",
    "start": "1450320",
    "end": "1453440"
  },
  {
    "text": "going to scale that up manually to six",
    "start": "1453440",
    "end": "1455360"
  },
  {
    "text": "replicas obviously i've got no load on",
    "start": "1455360",
    "end": "1457360"
  },
  {
    "text": "it at the moment",
    "start": "1457360",
    "end": "1458720"
  },
  {
    "text": "so it's not going to auto scale up so",
    "start": "1458720",
    "end": "1460320"
  },
  {
    "text": "i'll manually scale it up to",
    "start": "1460320",
    "end": "1461760"
  },
  {
    "text": "six replicas if we do curve control get",
    "start": "1461760",
    "end": "1465200"
  },
  {
    "text": "pods",
    "start": "1465200",
    "end": "1466320"
  },
  {
    "text": "we can see some of them already running",
    "start": "1466320",
    "end": "1468480"
  },
  {
    "text": "and they're starting",
    "start": "1468480",
    "end": "1470159"
  },
  {
    "text": "and with before long they should all be",
    "start": "1470159",
    "end": "1472320"
  },
  {
    "text": "running and in a cluster now",
    "start": "1472320",
    "end": "1475039"
  },
  {
    "text": "one of the reasons why i've scaled up",
    "start": "1475039",
    "end": "1476559"
  },
  {
    "text": "here is because i want to demonstrate",
    "start": "1476559",
    "end": "1478400"
  },
  {
    "text": "that this is truly distributed state if",
    "start": "1478400",
    "end": "1481440"
  },
  {
    "text": "i'd scale this",
    "start": "1481440",
    "end": "1482400"
  },
  {
    "text": "just run one node then it wouldn't be",
    "start": "1482400",
    "end": "1485760"
  },
  {
    "text": "that",
    "start": "1485760",
    "end": "1486080"
  },
  {
    "text": "interesting because it's very easy to",
    "start": "1486080",
    "end": "1487760"
  },
  {
    "text": "get state um consistent on onenote but",
    "start": "1487760",
    "end": "1490320"
  },
  {
    "text": "because it's running on six nodes",
    "start": "1490320",
    "end": "1492159"
  },
  {
    "text": "and because anything can",
    "start": "1492159",
    "end": "1495200"
  },
  {
    "text": "when a request comes in it could go to",
    "start": "1495200",
    "end": "1496960"
  },
  {
    "text": "any of those nodes if those nodes aren't",
    "start": "1496960",
    "end": "1498960"
  },
  {
    "text": "sharing their state and the crdts aren't",
    "start": "1498960",
    "end": "1501039"
  },
  {
    "text": "working",
    "start": "1501039",
    "end": "1501840"
  },
  {
    "text": "then this demo won't work so it's all",
    "start": "1501840",
    "end": "1505120"
  },
  {
    "text": "running now",
    "start": "1505120",
    "end": "1507279"
  },
  {
    "text": "let's go to a presentation and i'm going",
    "start": "1507279",
    "end": "1510640"
  },
  {
    "text": "to",
    "start": "1510640",
    "end": "1512559"
  },
  {
    "text": "ask a question and it appears there",
    "start": "1512559",
    "end": "1514799"
  },
  {
    "text": "there's a little bit of a delay there",
    "start": "1514799",
    "end": "1516640"
  },
  {
    "text": "that's because i haven't done anything",
    "start": "1516640",
    "end": "1518240"
  },
  {
    "text": "to try and update the state",
    "start": "1518240",
    "end": "1519679"
  },
  {
    "text": "locally in the in the client when i ask",
    "start": "1519679",
    "end": "1521919"
  },
  {
    "text": "a question",
    "start": "1521919",
    "end": "1522960"
  },
  {
    "text": "uh it actually relies on this on the",
    "start": "1522960",
    "end": "1526159"
  },
  {
    "text": "the update of the crdt which then will",
    "start": "1526159",
    "end": "1528320"
  },
  {
    "text": "get gossiped to the",
    "start": "1528320",
    "end": "1529760"
  },
  {
    "text": "other nodes and then get pushed down",
    "start": "1529760",
    "end": "1533120"
  },
  {
    "text": "so can i ask another question",
    "start": "1533120",
    "end": "1538000"
  },
  {
    "text": "and that worked won't we try from",
    "start": "1538320",
    "end": "1541120"
  },
  {
    "text": "another browser",
    "start": "1541120",
    "end": "1543840"
  },
  {
    "text": "does it work across browsers",
    "start": "1547919",
    "end": "1552480"
  },
  {
    "text": "and we can see yes indeed it does if i",
    "start": "1552880",
    "end": "1555440"
  },
  {
    "text": "vote in this",
    "start": "1555440",
    "end": "1556000"
  },
  {
    "text": "one i should see that go up",
    "start": "1556000",
    "end": "1559440"
  },
  {
    "text": "so we can see voting works we can vote",
    "start": "1559440",
    "end": "1562799"
  },
  {
    "text": "all over the place and just click vote",
    "start": "1562799",
    "end": "1564640"
  },
  {
    "text": "and",
    "start": "1564640",
    "end": "1565840"
  },
  {
    "text": "all all these things should eventually",
    "start": "1565840",
    "end": "1567760"
  },
  {
    "text": "converge on the same state as all the",
    "start": "1567760",
    "end": "1569679"
  },
  {
    "text": "nodes",
    "start": "1569679",
    "end": "1570480"
  },
  {
    "text": "and i don't know actually which nodes",
    "start": "1570480",
    "end": "1572320"
  },
  {
    "text": "these are connecting to it's using a",
    "start": "1572320",
    "end": "1573679"
  },
  {
    "text": "load balancer that would randomize it so",
    "start": "1573679",
    "end": "1576000"
  },
  {
    "text": "they're probably not",
    "start": "1576000",
    "end": "1577039"
  },
  {
    "text": "connecting to to all the same nodes but",
    "start": "1577039",
    "end": "1579200"
  },
  {
    "text": "what we can see here is our demo",
    "start": "1579200",
    "end": "1581279"
  },
  {
    "text": "is working now you can visit this this",
    "start": "1581279",
    "end": "1584240"
  },
  {
    "text": "app this uh",
    "start": "1584240",
    "end": "1584880"
  },
  {
    "text": "this presentation is pre-recorded it",
    "start": "1584880",
    "end": "1586640"
  },
  {
    "text": "would have been kind of cool if you",
    "start": "1586640",
    "end": "1587840"
  },
  {
    "text": "could all visit this",
    "start": "1587840",
    "end": "1588720"
  },
  {
    "text": "now and and we could see everyone",
    "start": "1588720",
    "end": "1591200"
  },
  {
    "text": "updating it but a few",
    "start": "1591200",
    "end": "1592480"
  },
  {
    "text": "um in my presentation but if you go now",
    "start": "1592480",
    "end": "1594960"
  },
  {
    "text": "you can see with the other participants",
    "start": "1594960",
    "end": "1596480"
  },
  {
    "text": "in this presentation",
    "start": "1596480",
    "end": "1598320"
  },
  {
    "text": "voting and and have a play with it",
    "start": "1598320",
    "end": "1601840"
  },
  {
    "text": "so that's cs q and a dot app",
    "start": "1601840",
    "end": "1606080"
  },
  {
    "text": "so that's the end of the demo thanks",
    "start": "1606320",
    "end": "1610639"
  },
  {
    "text": "jonas",
    "start": "1610840",
    "end": "1612720"
  },
  {
    "text": "thanks a lot james uh that was that was",
    "start": "1612720",
    "end": "1614880"
  },
  {
    "text": "uh that was a great demo",
    "start": "1614880",
    "end": "1616640"
  },
  {
    "text": "um now i think i think we have time for",
    "start": "1616640",
    "end": "1618799"
  },
  {
    "text": "some questions",
    "start": "1618799",
    "end": "1620320"
  },
  {
    "text": "um so if you have any far away",
    "start": "1620320",
    "end": "1626799"
  }
]