[
  {
    "text": "the observant among you will notice that I do not look much like mate um mate",
    "start": "719",
    "end": "7160"
  },
  {
    "text": "could not make it so I am covering this talk for him I'm Flynn I'm a tech evangelist mate is the linkerd",
    "start": "7160",
    "end": "12400"
  },
  {
    "text": "maintainer I am a tech evangelist that means I work in marketing which means that if you have",
    "start": "12400",
    "end": "18119"
  },
  {
    "text": "complex questions about this presentation that matate did a lot of the heavy lifting for I will absolutely",
    "start": "18119",
    "end": "24840"
  },
  {
    "text": "be able to make up answers and they might be correct or they might not but",
    "start": "24840",
    "end": "30160"
  },
  {
    "text": "let me know you know sing out if you have questions we'll we'll figure out what's up",
    "start": "30160",
    "end": "35719"
  },
  {
    "text": "um the short summary of this talk about switching to gamma without ruining your",
    "start": "35719",
    "end": "41440"
  },
  {
    "text": "reputation is that as of linardy 2.12 we started switching away from some of our",
    "start": "41440",
    "end": "46960"
  },
  {
    "text": "custom Linker specific crds to things from Gateway API and this turns out to",
    "start": "46960",
    "end": "53559"
  },
  {
    "text": "be hard uh I will leave the question for whether we succeeded in not ruining our",
    "start": "53559",
    "end": "59559"
  },
  {
    "text": "reputation for later and we're mostly going to be talking at this point about",
    "start": "59559",
    "end": "64920"
  },
  {
    "text": "kind of the nuts and bolts of how we went about it uh again if you're familiar with linkerd you will know that",
    "start": "64920",
    "end": "70920"
  },
  {
    "text": "we just shipped 2.14 most of what we're talking about in this talk happened in 2.13 because",
    "start": "70920",
    "end": "77439"
  },
  {
    "text": "that's when most of the heavy lifting for the shift happened between 2.13 and 2.14 it was much more incremental stuff",
    "start": "77439",
    "end": "86040"
  },
  {
    "text": "as opposed to let's just rip out the underpinnings and put it all back together while we're still supporting",
    "start": "86040",
    "end": "91799"
  },
  {
    "text": "everybody so setting the stage uh raise your hand if you don't know what Linker",
    "start": "91799",
    "end": "99439"
  },
  {
    "text": "is you are lying Rob okay all right Linker is a service mesh if you imagine",
    "start": "99439",
    "end": "106320"
  },
  {
    "text": "your typical kubernetes cluster where you've got microservices all talking to each other then the point of a service",
    "start": "106320",
    "end": "111439"
  },
  {
    "text": "mesh is to go in kind of underneath your application and provide you security and reliability and observability",
    "start": "111439",
    "end": "116799"
  },
  {
    "text": "uniformally without having to change your application link in does this by sticking sidecars next to each of your",
    "start": "116799",
    "end": "122719"
  },
  {
    "text": "application pods the side cars then ruthlessly take over all of your network communication and that allows them to",
    "start": "122719",
    "end": "129000"
  },
  {
    "text": "force it to B mtls and to mediate a bunch of things and do retries and cool stuff like that and measure a bunch of",
    "start": "129000",
    "end": "134800"
  },
  {
    "text": "things and provide the information to you so you have uniform observability across the whole call graph it's pretty",
    "start": "134800",
    "end": "141680"
  },
  {
    "text": "cool most of the time I do this the control plane is an afterthought and I say oh yeah it's the thing that manages",
    "start": "141680",
    "end": "148080"
  },
  {
    "text": "all the proxies we're actually going to be talking about some of the details of the control plane in this talk because",
    "start": "148080",
    "end": "154120"
  },
  {
    "text": "that's where a lot of the magic happens when you're going to switch and do things the gamma way as opposed to the Linker specific way I should probably",
    "start": "154120",
    "end": "161800"
  },
  {
    "text": "also have pointed up that pointed out that the gamma initiative is the initiative that's trying to figure out",
    "start": "161800",
    "end": "167040"
  },
  {
    "text": "how to take Gateway API Concepts which were originally designed for North South traffic and make them applicable to",
    "start": "167040",
    "end": "173120"
  },
  {
    "text": "service meshes east west traffic it's a acronym for something that I don't",
    "start": "173120",
    "end": "178599"
  },
  {
    "text": "remember so I just just remember it as gamma I'm looking at Mike and Rob",
    "start": "178599",
    "end": "184040"
  },
  {
    "text": "because they might remember this API for mesh management and",
    "start": "184040",
    "end": "192040"
  },
  {
    "text": "administration Gateway API for mesh management and administration gamma there we go props to Mike Morris um so",
    "start": "192040",
    "end": "200959"
  },
  {
    "text": "linkerd actually gives you a lot of really critical functionality with no configuration at all so for example",
    "start": "200959",
    "end": "208080"
  },
  {
    "text": "mtls request load balance saying observability you do not have to configure these things you can configure",
    "start": "208080",
    "end": "215720"
  },
  {
    "text": "things on the observability front we'll talk about that you can talk about how load balancing should happen you don't",
    "start": "215720",
    "end": "221840"
  },
  {
    "text": "have to then there's other stuff like almost all of the reliability and off",
    "start": "221840",
    "end": "227080"
  },
  {
    "text": "and things like that which you must configure because even with chat GPT we can't guess how that works in your",
    "start": "227080",
    "end": "233879"
  },
  {
    "text": "app we could use chat GPT and guess wrongly but that doesn't sound like any fun so instead we make you do it but we",
    "start": "233879",
    "end": "241319"
  },
  {
    "text": "at the same time try to limit how many crds specific to linkerd we have to introduce because everyone we introduce",
    "start": "241319",
    "end": "248000"
  },
  {
    "text": "we then have to go out and teach people about and also everyone we introduce limits the transferability of knowledge",
    "start": "248000",
    "end": "254439"
  },
  {
    "text": "across the whole ecosystem as a whole this is one of the big wins of the ecosystem is that you know once you",
    "start": "254439",
    "end": "260239"
  },
  {
    "text": "learn how a deployment works you don't have to relearn how a deployment works on some other kubernetes platform I hope",
    "start": "260239",
    "end": "266759"
  },
  {
    "text": "um if you have to learn Linker to specific stuff and if you want to go and use ISO not that you would want to do",
    "start": "266759",
    "end": "272199"
  },
  {
    "text": "that but if you did want to do that you would have to relearn that stuff and to the extent that we can do it with standardized things your knowledge is",
    "start": "272199",
    "end": "279280"
  },
  {
    "text": "more transferable and that is a win so in the beginning there were service",
    "start": "279280",
    "end": "288080"
  },
  {
    "text": "profiles uh these actually showed up in Linker 2.1 all the way back in 2018 they are a very linkerd specific",
    "start": "288080",
    "end": "295240"
  },
  {
    "text": "thing that lets us talk about primarily metrics so this service profile up there",
    "start": "295240",
    "end": "302120"
  },
  {
    "text": "is saying anytime you're trying to talk to web app. books. service. cluster. loal",
    "start": "302120",
    "end": "307600"
  },
  {
    "text": "that's a kubernetes fqdn remember that concept if it matches SL books and it's a post then we will record metrics for",
    "start": "307600",
    "end": "314639"
  },
  {
    "text": "it under a bucket named SL books and if it is a get tobooks SL some number we",
    "start": "314639",
    "end": "320800"
  },
  {
    "text": "will turn any of those into a single bucket called SL books SLC curly brace ID curly brace that's not some funky",
    "start": "320800",
    "end": "327400"
  },
  {
    "text": "templating thing those are literal curly braces because when you're looking at that in the linkerd dashboards you don't really",
    "start": "327400",
    "end": "334360"
  },
  {
    "text": "care about you know book sl5 book4 knowing that it's a get to get a",
    "start": "334360",
    "end": "339960"
  },
  {
    "text": "specific book is probably more useful to you this is most of what actually that's",
    "start": "339960",
    "end": "345000"
  },
  {
    "text": "all of what service profiles could do in the beginning then we extended them a bit to support timeouts and retries",
    "start": "345000",
    "end": "350280"
  },
  {
    "text": "because it makes sense to talk about timeouts and retries on a per route basis you know not retrying the post to",
    "start": "350280",
    "end": "357800"
  },
  {
    "text": "slash books is probably a terrible idea retrying the get is probably not a terrible idea for",
    "start": "357800",
    "end": "363039"
  },
  {
    "text": "example and once we did that we further expanded service profiles to talk about",
    "start": "363039",
    "end": "368599"
  },
  {
    "text": "more configuration for rri for example again all things that make sense per",
    "start": "368599",
    "end": "375560"
  },
  {
    "text": "route they cannot actually do routing stuff and this was a big limitation of",
    "start": "375840",
    "end": "381720"
  },
  {
    "text": "service profiles so this will not work and they also",
    "start": "381720",
    "end": "387160"
  },
  {
    "text": "couldn't do things like rate limiting and circuit breaking and you know all that kind of stuff fundamentally rate",
    "start": "387160",
    "end": "392720"
  },
  {
    "text": "limiting and circuit breaking in our heads are routing and that will also become important later I do have a bit",
    "start": "392720",
    "end": "398639"
  },
  {
    "text": "of a confession to make at one point we wedged a secret API into service",
    "start": "398639",
    "end": "404199"
  },
  {
    "text": "profiles so we could do traffic splitting for SMI we are not going to talk about this",
    "start": "404199",
    "end": "409759"
  },
  {
    "text": "anymore for the rest of this talk because we it was never seriously",
    "start": "409759",
    "end": "415199"
  },
  {
    "text": "considered for a thing to build on for gamma because it was",
    "start": "415199",
    "end": "420759"
  },
  {
    "text": "I think it's probably too much to call it a brutal hack but it was not something that was designed as a thing we could build on for the future so",
    "start": "420759",
    "end": "427759"
  },
  {
    "text": "there was no serious consideration of building on that okay Linker 2.12 we",
    "start": "427759",
    "end": "433440"
  },
  {
    "text": "bring in the HTTP route from Gateway API um originally in 2.12 the only thing",
    "start": "433440",
    "end": "440240"
  },
  {
    "text": "we allowed you to do with an hdtp route was talk about oth so this is a piece of",
    "start": "440240",
    "end": "446199"
  },
  {
    "text": "configuration where if you're trying to go to the book server which is a Linker",
    "start": "446199",
    "end": "451800"
  },
  {
    "text": "specific crd server but if you're trying to go to it and you're trying to do a post of books or you're trying to do a",
    "start": "451800",
    "end": "457479"
  },
  {
    "text": "get tobook SL you know number then this is a piece where you could then attach",
    "start": "457479",
    "end": "463039"
  },
  {
    "text": "authorization policy to this HTTP route and that gave us the ability to do per",
    "start": "463039",
    "end": "468120"
  },
  {
    "text": "route authorization which we could not previously do in linkerd and it was very",
    "start": "468120",
    "end": "473280"
  },
  {
    "text": "cool fundamentally this was a bet that we were placing on the idea that the",
    "start": "473280",
    "end": "479039"
  },
  {
    "text": "industry standard way of doing this a was going to be a good thing and B was going to be Gateway",
    "start": "479039",
    "end": "486360"
  },
  {
    "text": "API the juri's still kind of out on whether both of those things are true but it seems to",
    "start": "487120",
    "end": "493360"
  },
  {
    "text": "be very much trending in the direction of Gateway API being the standard which is also pretty cool not least because it",
    "start": "493360",
    "end": "500879"
  },
  {
    "text": "means that this bet probably paid off or probably is paying off and this is kind of a big deal linker's",
    "start": "500879",
    "end": "507680"
  },
  {
    "text": "implementation is very different from the other service meses the way we tend to approach things is pretty different",
    "start": "507680",
    "end": "514640"
  },
  {
    "text": "so we have a fairly strong bit of culture within linardy towards just controlling everything",
    "start": "514640",
    "end": "520839"
  },
  {
    "text": "ourselves this was a bit of a departure from that uh the astute reader will note",
    "start": "520839",
    "end": "526200"
  },
  {
    "text": "that there are no backend DS in the HTTP route I just showed you in 2.12 you still could not use HTTP routes for you",
    "start": "526200",
    "end": "533240"
  },
  {
    "text": "know routing despite what the name says we were using r out as a noun and",
    "start": "533240",
    "end": "540040"
  },
  {
    "text": "not a verb um and uh you know this is kind of relevant this is also one of two",
    "start": "540040",
    "end": "546640"
  },
  {
    "text": "reasons why we brought an HTTP route in a different API Group than Gateway API",
    "start": "546640",
    "end": "552560"
  },
  {
    "text": "uses first because we were sharply limiting what it could actually do and second because conformance was not a",
    "start": "552560",
    "end": "559360"
  },
  {
    "text": "thing in this world okay that brings us up to the end",
    "start": "559360",
    "end": "564959"
  },
  {
    "text": "of 2.2 and the start of 213 where we started going all right we have service profiles which were designed for metrics",
    "start": "564959",
    "end": "570920"
  },
  {
    "text": "and had some other things mashed into them we have HTTP routes which are allegedly designed for routing and we",
    "start": "570920",
    "end": "577920"
  },
  {
    "text": "have people I guess I shouldn't even say allegedly they were designed for routing um and we have people who are asking for",
    "start": "577920",
    "end": "584519"
  },
  {
    "text": "routing features in Linker that we don't have right now so great now",
    "start": "584519",
    "end": "591519"
  },
  {
    "text": "what anytime you're finding yourself asking that question the first the two questions you need to be asking after",
    "start": "592160",
    "end": "598279"
  },
  {
    "text": "that are okay what does our user want and what does our user need these are not often the same",
    "start": "598279",
    "end": "606399"
  },
  {
    "text": "thing sometimes they're at least related which is good in our case when we talked",
    "start": "606399",
    "end": "612000"
  },
  {
    "text": "to our users ultimately what they needed and what they wanted thankfully were",
    "start": "612000",
    "end": "617600"
  },
  {
    "text": "full-fledged traffic management all throughout the call graph so they wanted",
    "start": "617600",
    "end": "622760"
  },
  {
    "text": "things like fancy routing and Canary deployments and uh you know the usual Progressive stuff",
    "start": "622760",
    "end": "629920"
  },
  {
    "text": "but instead of wanting this right at the edge of the call graph where an English controller can do it they wanted it",
    "start": "629920",
    "end": "635839"
  },
  {
    "text": "everywhere great uh linky could not actually do most of these things in",
    "start": "635839",
    "end": "641920"
  },
  {
    "text": "2.12 and we also were constrained by the fact that we couldn't toss out the features that service profiles let you",
    "start": "641920",
    "end": "647639"
  },
  {
    "text": "do and that left us with two really obvious ways to approach this fundamentally we could extend service",
    "start": "647639",
    "end": "653880"
  },
  {
    "text": "profiles or we could build on top of HTTP route um I will skip to the punch line line here which is that ultimately",
    "start": "653880",
    "end": "661760"
  },
  {
    "text": "we decided that there was more green in the chart for HTTP route so we decided to go that way there are a couple of big",
    "start": "661760",
    "end": "668639"
  },
  {
    "text": "things that I want to point out here because they've changed a bit um when we went to http routes they didn't have",
    "start": "668639",
    "end": "675720"
  },
  {
    "text": "retries or timeouts they still can't do retries but they can do timeouts which is kind of",
    "start": "675720",
    "end": "680880"
  },
  {
    "text": "cool and we support that um there's a bit in there about sharing",
    "start": "680880",
    "end": "687360"
  },
  {
    "text": "policy and fundamentally what we're talking about there from linker's point of view is if you look at the mechanics",
    "start": "687360",
    "end": "693560"
  },
  {
    "text": "of service profiles if you have two routes that should have exactly the same policy you must create two service",
    "start": "693560",
    "end": "699399"
  },
  {
    "text": "profiles which is kind of a pain in the butt and there are a couple of things about HTTP routes where we had a couple",
    "start": "699399",
    "end": "706399"
  },
  {
    "text": "of different ways that we might be able to do better than that and I'm conditionalizing that statement a lot",
    "start": "706399",
    "end": "713399"
  },
  {
    "text": "because one of the things we've learned going through this is that some of the stuff around that with HTTP route is",
    "start": "713399",
    "end": "718440"
  },
  {
    "text": "still kind of up in the air and we're not really sure what the right direction is um the other one I'll point out again",
    "start": "718440",
    "end": "723880"
  },
  {
    "text": "is we considered it a plus that service profile was completely under our control and less of a plus that HTTP route was",
    "start": "723880",
    "end": "730560"
  },
  {
    "text": "controlled by Gateway API But ultimately decided that it was worth it",
    "start": "730560",
    "end": "736880"
  },
  {
    "text": "so yeah we decided to go with the HTTP route doubling down on the whole industry standard thing if you are",
    "start": "736880",
    "end": "743839"
  },
  {
    "text": "linkerd this also means investing in the standard as opposed to merely implementing the standard which is",
    "start": "743839",
    "end": "748920"
  },
  {
    "text": "ultimately the reason why I'm now one of the gamma co-leads although as I pointed out at the Gateway API office hours",
    "start": "748920",
    "end": "754800"
  },
  {
    "text": "yesterday I'm still not entirely sure how that happened since I work in marketing",
    "start": "754800",
    "end": "760160"
  },
  {
    "text": "but yeah all right are there any questions so far about any of",
    "start": "760160",
    "end": "767399"
  },
  {
    "text": "this I'm",
    "start": "767399",
    "end": "770639"
  },
  {
    "text": "curious own grou of the",
    "start": "774000",
    "end": "780760"
  },
  {
    "text": "and guess do you",
    "start": "780760",
    "end": "784639"
  },
  {
    "text": "feel the question was do we you know why go with our own API Group for HTTP route",
    "start": "785839",
    "end": "791680"
  },
  {
    "text": "and let's come back to that one because I talk I talk about that a little bit",
    "start": "791680",
    "end": "797079"
  },
  {
    "text": "later and please ask that again if you don't think I answer the question okay",
    "start": "797079",
    "end": "803000"
  },
  {
    "text": "all right anybody else no okay we're going to dive into some of the technical background for implementation crap I'm",
    "start": "803000",
    "end": "809920"
  },
  {
    "text": "going to talk about here um I should also point out remember mate was supposed to do this talk he did like the",
    "start": "809920",
    "end": "816800"
  },
  {
    "text": "Lion Share at the heavy lifting on these slides but let's just go and take it as red that any mistakes in this with",
    "start": "816800",
    "end": "822920"
  },
  {
    "text": "respect to linker's implementation will be on me and not on him all right so",
    "start": "822920",
    "end": "828839"
  },
  {
    "text": "nomenclature we have the control plane for linky we have a couple of workloads each workload has a",
    "start": "828839",
    "end": "835759"
  },
  {
    "text": "proxy I'm going to emphasize that because in the early days of gamma this turned out to be a very surprising thing",
    "start": "835759",
    "end": "842320"
  },
  {
    "text": "for people who are familiar with some of the other meshes which struck me as a little surreal because I'm pretty sure some of",
    "start": "842320",
    "end": "847720"
  },
  {
    "text": "the other meshes do it the same way but yeah we have two proxies involved and when workload one wants to talk to workload 2 it's actually workload one's",
    "start": "847720",
    "end": "854440"
  },
  {
    "text": "proxy calling workload 2's proxy in a fit of originality we call those the outbound proxy and the inbound",
    "start": "854440",
    "end": "861720"
  },
  {
    "text": "proxy this is kind of important because the outbound proxy is where outbound",
    "start": "861720",
    "end": "867160"
  },
  {
    "text": "policy happens which is Prim primarily routing routing decisions have to be",
    "start": "867160",
    "end": "872600"
  },
  {
    "text": "made before you make the connection you can't make them after the connection is already made it so it just does not work",
    "start": "872600",
    "end": "878680"
  },
  {
    "text": "inbound policy happens at the inbound proxy and this is primarily concerned with authorization checking off at the",
    "start": "878680",
    "end": "884839"
  },
  {
    "text": "point of the connection going out does not work because you can then do all",
    "start": "884839",
    "end": "890000"
  },
  {
    "text": "sorts of evil things if you're not checking it on the way in the other thing I'll point out is",
    "start": "890000",
    "end": "896480"
  },
  {
    "text": "there are several different controllers Within linkerd we're only going to talk about two of them the destination",
    "start": "896480",
    "end": "901759"
  },
  {
    "text": "controller which is largely concerned with where a given connection should go",
    "start": "901759",
    "end": "907759"
  },
  {
    "text": "and the policy controller which is logally concerned with u policy and since we are mostly talking about",
    "start": "907759",
    "end": "914440"
  },
  {
    "text": "Gateway API used for routing things we're primarily going to be concerned with the outbound proxy talking to these",
    "start": "914440",
    "end": "921360"
  },
  {
    "text": "two controllers this will become important in a bit um you'll also hear me talk about",
    "start": "921360",
    "end": "927320"
  },
  {
    "text": "the load balancer I am not talking about the thing that is a type of kubernetes service here I'm talking about a chunk",
    "start": "927320",
    "end": "934160"
  },
  {
    "text": "of linker that is responsible for making outbound connections ultimately this is",
    "start": "934160",
    "end": "939199"
  },
  {
    "text": "the piece of linker that implements all the routing decisions which is slightly different than saying it's making all",
    "start": "939199",
    "end": "945440"
  },
  {
    "text": "the routing decisions but it is the one that has to implement any decisions that get made",
    "start": "945440",
    "end": "951160"
  },
  {
    "text": "um oh yeah and it uh the load balancer has to keep track",
    "start": "951160",
    "end": "957800"
  },
  {
    "text": "of actual a lot of different things but for our purposes today really the",
    "start": "957800",
    "end": "963240"
  },
  {
    "text": "endpoints are kind of the only relevant ones today all right so if you're actually",
    "start": "963240",
    "end": "969199"
  },
  {
    "text": "going to be making a connection before Linker d212 and I'm going to go very quickly through this because if I go",
    "start": "969199",
    "end": "974240"
  },
  {
    "text": "slowly through it we be here all day the workload initiates a connection the outbound proxy snares that connection",
    "start": "974240",
    "end": "979720"
  },
  {
    "text": "then calls a service profile API in the destination controller which Maps the destination IP address into a fully",
    "start": "979720",
    "end": "986199"
  },
  {
    "text": "qualified domain name like workload namespace serv. cluster. loal uh hands",
    "start": "986199",
    "end": "992040"
  },
  {
    "text": "that sorry grabs all the service profile related info associated with that name",
    "start": "992040",
    "end": "997360"
  },
  {
    "text": "and then hands that back to the outbound proxy the outbound proxy then takes all of that information immediately turns",
    "start": "997360",
    "end": "1003680"
  },
  {
    "text": "around passes the fqdn to the endpoints API in the destination controller which does not hand back a set of endpoints it",
    "start": "1003680",
    "end": "1010240"
  },
  {
    "text": "hands back a stream of endpoint updates to the outbound proxy and the outbound proxy uses that stream of updates to",
    "start": "1010240",
    "end": "1017000"
  },
  {
    "text": "feed its load balancer into internally the load balancer pays a lot of attention to that stream to figure out",
    "start": "1017000",
    "end": "1022639"
  },
  {
    "text": "which endpoints are part of the set which are not part of the set which it can use etc etc I am glossing over a ton of detail",
    "start": "1022639",
    "end": "1032400"
  },
  {
    "text": "in that particular bit I am hopefully only glossing over irrelevant",
    "start": "1032400",
    "end": "1037720"
  },
  {
    "text": "detail I guess we'll find out one big example of something I'm",
    "start": "1037720",
    "end": "1043120"
  },
  {
    "text": "glossing over because it's very important in practice but not so much for gamma is for example if you are",
    "start": "1043120",
    "end": "1049360"
  },
  {
    "text": "talking to an IP that is an endpoint IP rather than a cluster IP then there is",
    "start": "1049360",
    "end": "1055480"
  },
  {
    "text": "no fqdn that we can associate with it but rather than just handing back empty stuff we actually hand back the default",
    "start": "1055480",
    "end": "1061240"
  },
  {
    "text": "service profile for you um likewise the load balancer skips an enormous amount of logic if it knows there's only one",
    "start": "1061240",
    "end": "1067360"
  },
  {
    "text": "endpoint in the set things like that um you will also notice that I didn't say anything about the policy controller and",
    "start": "1067360",
    "end": "1073200"
  },
  {
    "text": "that's because it didn't exist before 2.12 so nobody was talking to it it wasn't there",
    "start": "1073200",
    "end": "1080039"
  },
  {
    "text": "in 2.12 everything is the same except we have to have information about HTP routes but in 2.12 although we added the",
    "start": "1080039",
    "end": "1087840"
  },
  {
    "text": "policy controller here the only policies it could deal with were authorization and that is inbound policy so everything",
    "start": "1087840",
    "end": "1094559"
  },
  {
    "text": "that I told you about pre 2.12 is the same because the outbound side of the proxy didn't talk to the policy",
    "start": "1094559",
    "end": "1100159"
  },
  {
    "text": "controller at all that brings us up to oh no sorry",
    "start": "1100159",
    "end": "1106120"
  },
  {
    "text": "that brings us up to a slide I forgot sorry about I thought um interesting point about the policy",
    "start": "1106120",
    "end": "1111400"
  },
  {
    "text": "controller is that it was the first controller we wrote in Rust by we I mean a bunch of people who are not me",
    "start": "1111400",
    "end": "1118799"
  },
  {
    "text": "um but also despite the fact that it's not written in go it has to do all of",
    "start": "1118799",
    "end": "1124960"
  },
  {
    "text": "the usual controller sorts of things that a kubernetes controller has to do it has to go through and keep in touch",
    "start": "1124960",
    "end": "1130440"
  },
  {
    "text": "with the API server and watch for updates and do all this indexing stuff and keep track of all the HTTP routes and all the usual crap so it is a",
    "start": "1130440",
    "end": "1137200"
  },
  {
    "text": "full-fledged kuber controller it just happens to be written in Rust because we think rust is",
    "start": "1137200",
    "end": "1143080"
  },
  {
    "text": "cool um yeah all right that brings us up to the",
    "start": "1143080",
    "end": "1148480"
  },
  {
    "text": "point where we can start talking about Gamma actually again good place to ask",
    "start": "1148480",
    "end": "1153679"
  },
  {
    "text": "for questions any questions no all",
    "start": "1153679",
    "end": "1159120"
  },
  {
    "text": "right um the first step for 2.3 pretty much could boil down to just add backend",
    "start": "1159440",
    "end": "1165039"
  },
  {
    "text": "DS what could be easier answer lots of things um one of the things that we tend",
    "start": "1165039",
    "end": "1170320"
  },
  {
    "text": "to do working with linardy is ask questions about the user experience first and use those to drive the",
    "start": "1170320",
    "end": "1175360"
  },
  {
    "text": "technical decisions rather than the other way around if you ask questions about the technical stuff first and use",
    "start": "1175360",
    "end": "1180440"
  },
  {
    "text": "it to drive the user experience you end up with user experiences designed for engineers which suck so we don't do that",
    "start": "1180440",
    "end": "1188559"
  },
  {
    "text": "um the ux questions kind of started with things like one of the big ones was",
    "start": "1188559",
    "end": "1194320"
  },
  {
    "text": "great we're going to try to do routing in HTTP routes what happens if a service profile and an HTTP route end up",
    "start": "1194320",
    "end": "1199960"
  },
  {
    "text": "conflicting because we could already do HTTP routes for oth and then we had service profiles for o and now we're",
    "start": "1199960",
    "end": "1205520"
  },
  {
    "text": "going to add routing so they're going to become a bigger deal and ultimately the answer was let the service profile",
    "start": "1205520",
    "end": "1211919"
  },
  {
    "text": "win and I apologize for not finding a gif of that scene from Star Wars with let the wiki",
    "start": "1211919",
    "end": "1219520"
  },
  {
    "text": "win mostly this is the principle of least surprise if you're already used to",
    "start": "1219960",
    "end": "1225080"
  },
  {
    "text": "dealing with service profiles and some Bozo sticks in an HTV outout without you knowing about it you would like for your",
    "start": "1225080",
    "end": "1230840"
  },
  {
    "text": "world not to come collapsing down around your ears so this is mostly a least",
    "start": "1230840",
    "end": "1235960"
  },
  {
    "text": "surprise thing there were some technical things in that it lets us follow a pretty well- trodden path of what",
    "start": "1235960",
    "end": "1242640"
  },
  {
    "text": "happens if there is no service profile or if there was one who gets deleted and things like that we already had a bunch of that default code in",
    "start": "1242640",
    "end": "1248640"
  },
  {
    "text": "there uh let's see do we think that decision has worked",
    "start": "1248640",
    "end": "1254000"
  },
  {
    "text": "out I think so there were some rough aages in the beginning uh mostly dealing",
    "start": "1254000",
    "end": "1259120"
  },
  {
    "text": "around places where the proxy could fail to notice that there was actually a",
    "start": "1259120",
    "end": "1264559"
  },
  {
    "text": "service profile present or fail to notice that there was an act actually an HTTP route present and get stuck looking",
    "start": "1264559",
    "end": "1270960"
  },
  {
    "text": "for the wrong one and ignore the one that was actually there I think those have all been dealt with so far so or at",
    "start": "1270960",
    "end": "1277760"
  },
  {
    "text": "this point so ultimately I think this worked out pretty well one of the things that I like about it is that it is at",
    "start": "1277760",
    "end": "1283919"
  },
  {
    "text": "least a deterministic thing you can know how it's going to behave and we can explain to you how it's going",
    "start": "1283919",
    "end": "1290440"
  },
  {
    "text": "to behave and these things are important uh one it it was much easier",
    "start": "1290440",
    "end": "1295720"
  },
  {
    "text": "to decide that than it was to implement it um another big question was whether we were going to be okay with feature",
    "start": "1295720",
    "end": "1301679"
  },
  {
    "text": "gaps in the sense of are we okay with putting things into HTTP route that we can't put into service profiles and are",
    "start": "1301679",
    "end": "1308080"
  },
  {
    "text": "we okay with allowing service profiles to win you know are we allow okay with allowing them to be used at all even",
    "start": "1308080",
    "end": "1314960"
  },
  {
    "text": "given that there are things that service profiles can do that http routes cannot do and the answer to this one was a very",
    "start": "1314960",
    "end": "1323320"
  },
  {
    "text": "very reluctant yes um",
    "start": "1323320",
    "end": "1329120"
  },
  {
    "text": "mostly the way we ended up resolving that one was deciding okay we will prioritize putting the new stuff into",
    "start": "1329240",
    "end": "1335400"
  },
  {
    "text": "HTTP routes we will think very very carefully about backporting anything because we really really do not want to",
    "start": "1335400",
    "end": "1341360"
  },
  {
    "text": "do that but we will make it a deliberate decision to backfill everything from",
    "start": "1341360",
    "end": "1346720"
  },
  {
    "text": "service profiles into a hdtp routes and we're going to come back to that because there are some interesting ramifications",
    "start": "1346720",
    "end": "1352919"
  },
  {
    "text": "of that decision do we think that decision has",
    "start": "1352919",
    "end": "1359200"
  },
  {
    "text": "worked out that is a lovely question we'll come back to that later um",
    "start": "1359200",
    "end": "1366080"
  },
  {
    "text": "conformance yeah conformance conformance is lovely it was not possible for Linker",
    "start": "1366080",
    "end": "1371400"
  },
  {
    "text": "2.13 to be conformant with Gateway API full stop could not be done there are two reasons for this the biggest one is",
    "start": "1371400",
    "end": "1379000"
  },
  {
    "text": "that in the time frame that linkerd 2.13 was being built Gateway API did not have",
    "start": "1379000",
    "end": "1385240"
  },
  {
    "text": "a concept of conformance profiles yet and so if you wanted to be conformant with Gateway API you had to have an",
    "start": "1385240",
    "end": "1390840"
  },
  {
    "text": "Engish controller which we do not so couldn't be conformant done um the other",
    "start": "1390840",
    "end": "1397960"
  },
  {
    "text": "reason in there is that and this gets to your question there were also things in",
    "start": "1397960",
    "end": "1403360"
  },
  {
    "text": "the 2.13 space where HTTP routes still could not do things in ly that they were",
    "start": "1403360",
    "end": "1408640"
  },
  {
    "text": "supposed to do for Gateway API and so that was the other reason we pulled them into their own API Group",
    "start": "1408640",
    "end": "1414720"
  },
  {
    "text": "because there's no point in using the official API Group if we can't be conformant the moment we start using the",
    "start": "1414720",
    "end": "1421640"
  },
  {
    "text": "official API Group we will instantly have people coming up and bugging us about why are you not conformant and",
    "start": "1421640",
    "end": "1428520"
  },
  {
    "text": "more importantly we will have users coming back and filing bugs saying dude you're using official gate Gateway API",
    "start": "1428520",
    "end": "1435200"
  },
  {
    "text": "things but X Y and Z don't work and putting them in our own API Group permitted us to sidestep those whole",
    "start": "1435200",
    "end": "1443279"
  },
  {
    "text": "discussion things do we think these two have worked out",
    "start": "1443279",
    "end": "1450279"
  },
  {
    "text": "mostly only mostly we're going to come back to this too a little bit um so the summary here we were going",
    "start": "1450279",
    "end": "1457480"
  },
  {
    "text": "to let service profile and HTTP route coexist with service profile winning um we were only going to put new",
    "start": "1457480",
    "end": "1463679"
  },
  {
    "text": "things in HTTP route and we would need to backfill all the stuff from service profiles into HTTP route um I should",
    "start": "1463679",
    "end": "1470840"
  },
  {
    "text": "point out that effort of backfilling everything is very much still ongoing so",
    "start": "1470840",
    "end": "1476760"
  },
  {
    "text": "Linker users if you have strong opinions about which things need to be backfilled first let us",
    "start": "1476760",
    "end": "1484600"
  },
  {
    "text": "know uh oh yeah we didn't worry about conformance all right technical stuff after we had all the answers to the ux",
    "start": "1484600",
    "end": "1492120"
  },
  {
    "text": "stuff we could ask questions about the technical stuff the first one was are we going to do this under the hood as a",
    "start": "1492120",
    "end": "1497360"
  },
  {
    "text": "shiny new API or are we going to try to wedge all this crap into the service profile apis and the answer was let's do",
    "start": "1497360",
    "end": "1502880"
  },
  {
    "text": "a new one the biggest reason here was that if you look at service profiles and you look at HTTP routes you will find",
    "start": "1502880",
    "end": "1509279"
  },
  {
    "text": "some really fascinating places where trying to serialize them both to the same wire format is really really hard",
    "start": "1509279",
    "end": "1518120"
  },
  {
    "text": "um in particular the way service profile approaches route matching and the way",
    "start": "1518120",
    "end": "1523679"
  },
  {
    "text": "HTTP route approaches route matching are very different if you look at the details of the spec and so trying to",
    "start": "1523679",
    "end": "1531960"
  },
  {
    "text": "translate those semantics would suck so we didn't do it",
    "start": "1531960",
    "end": "1537840"
  },
  {
    "text": "um if we're doing a new API do we put it in the policy controller or do we put it in the destination controller we put it",
    "start": "1537840",
    "end": "1543440"
  },
  {
    "text": "in the policy controller because rust is cool no not entirely because rust is cool mostly it was because if the policy",
    "start": "1543440",
    "end": "1549640"
  },
  {
    "text": "controller is already talking to to the API server to Wrangle all this HTTP route stuff there's absolutely no point",
    "start": "1549640",
    "end": "1555960"
  },
  {
    "text": "in duplicating all that API server TR traffic by making another controller do it too we should just take advantage of",
    "start": "1555960",
    "end": "1561760"
  },
  {
    "text": "having the information in the policy controller already and then do it that",
    "start": "1561760",
    "end": "1567120"
  },
  {
    "text": "way um we also decided that we were not",
    "start": "1567120",
    "end": "1573200"
  },
  {
    "text": "going to bother trying to do any other Gateway API types at for 2.13 grpc Route",
    "start": "1573200",
    "end": "1578600"
  },
  {
    "text": "is kind of obvious but it's also not as well",
    "start": "1578600",
    "end": "1584120"
  },
  {
    "text": "defined yet as HTTP route and even if it were and we wanted to do it we didn't have any bandwidth to do it so whatever",
    "start": "1584120",
    "end": "1591320"
  },
  {
    "text": "that decision was mostly made for us okay whoops that's the tech Q&A",
    "start": "1591320",
    "end": "1597200"
  },
  {
    "text": "summary screwed up that slide new API in the policy controller only support HTTP route and",
    "start": "1597200",
    "end": "1604919"
  },
  {
    "text": "um the way this ended up looking under the hood was that the workload initiates",
    "start": "1604919",
    "end": "1610640"
  },
  {
    "text": "a connection outbound proxy snares it which it calls the service profile API and the endpoints API exactly the same",
    "start": "1610640",
    "end": "1615679"
  },
  {
    "text": "way as it did before so it ultimately gets that stream of endpoint updates but then it also has to go through and call",
    "start": "1615679",
    "end": "1621120"
  },
  {
    "text": "the policy API uh which has to do the same mapping that's an annoying place where we end up",
    "start": "1621120",
    "end": "1626320"
  },
  {
    "text": "duplicating work and then it returns a stream of updates with routing",
    "start": "1626320",
    "end": "1631559"
  },
  {
    "text": "configuration the outbound proxy then has to feed both of those update streams into the load balancer and the load",
    "start": "1631559",
    "end": "1637039"
  },
  {
    "text": "balancer has to figure out how to honor both of them that is the hairiest part in this whole",
    "start": "1637039",
    "end": "1644000"
  },
  {
    "text": "thing really um there's not really a good way to go",
    "start": "1644000",
    "end": "1651279"
  },
  {
    "text": "through and merge these things it's much more a question of the load balancer has to be able to figure out oh look I'm",
    "start": "1651279",
    "end": "1657559"
  },
  {
    "text": "getting service profile updates so I should ignore HTTP route updates or I'm not getting service profile updates so I",
    "start": "1657559",
    "end": "1663320"
  },
  {
    "text": "should honor HTTP route updates um even after you do that it's still",
    "start": "1663320",
    "end": "1669200"
  },
  {
    "text": "kind of obnoxious because you have to make sure that the load balancer is doing the right thing with the very different route matching rules and",
    "start": "1669200",
    "end": "1676159"
  },
  {
    "text": "semantics so this was a mess this was The Lion Share of the horror of of what",
    "start": "1676159",
    "end": "1682919"
  },
  {
    "text": "we went through here we think we got it right at this point uh and I mean at",
    "start": "1682919",
    "end": "1688039"
  },
  {
    "text": "this point we are conformant with Gateway api's mesh profile so clearly we got it right right right um another",
    "start": "1688039",
    "end": "1695919"
  },
  {
    "text": "thing that was kind of a messing here is that in 2.12 what we did was we",
    "start": "1695919",
    "end": "1701679"
  },
  {
    "text": "basically used a web hook to do uh validation of service profiles and HTTP",
    "start": "1701679",
    "end": "1707240"
  },
  {
    "text": "rout and if they didn't validate with the web hook then they would get kicked out and then the whole you know basically the",
    "start": "1707240",
    "end": "1714279"
  },
  {
    "text": "policy controller never saw them and the destination controller never saw them that does not line up very well with",
    "start": "1714279",
    "end": "1719840"
  },
  {
    "text": "what Gateway API likes to do which is to use status to indicate things like this instead um Rob is smirking because Rob",
    "start": "1719840",
    "end": "1727240"
  },
  {
    "text": "and I have had a number of discussions about how terrible web hooks are and uh",
    "start": "1727240",
    "end": "1732360"
  },
  {
    "text": "yeah we didn't really want to extend the web hook anyway so let's be fair about that so one of the big changes is also",
    "start": "1732360",
    "end": "1739000"
  },
  {
    "text": "that the policy controller now when it sees an HTTP route it gets validated at",
    "start": "1739000",
    "end": "1744039"
  },
  {
    "text": "the policy controller if the policy controller doesn't like it it updates the status and then the part of it",
    "start": "1744039",
    "end": "1750559"
  },
  {
    "text": "that's actually doing the policy API checks the status and says nope I'm going to ignore that one it doesn't have",
    "start": "1750559",
    "end": "1756279"
  },
  {
    "text": "a good status so same result extremely different implementation uh it works",
    "start": "1756279",
    "end": "1762080"
  },
  {
    "text": "pretty well which is kind of nice it did require us to do some first ever things like this is the first time in linardy",
    "start": "1762080",
    "end": "1768360"
  },
  {
    "text": "that we've had to do lease election leader election in a controller and we had to do it in Rust uh I'm pretty sure",
    "start": "1768360",
    "end": "1775279"
  },
  {
    "text": "that made it into kubert and so that people who are trying to do their own controllers and rust get to benefit from",
    "start": "1775279",
    "end": "1780679"
  },
  {
    "text": "our Blood Sweat and Tears are probably more accurately from Eliza wiman's Blood",
    "start": "1780679",
    "end": "1785840"
  },
  {
    "text": "Sweat and Tears um so current status did we ruin our",
    "start": "1785840",
    "end": "1791480"
  },
  {
    "text": "reputation we don't think so I'm not completely sure yet but we",
    "start": "1791480",
    "end": "1798080"
  },
  {
    "text": "don't think so um we have people who are using HTTP routes they seem to like it that's",
    "start": "1798080",
    "end": "1805200"
  },
  {
    "text": "good this kind of change tends to be tricky to manage and there are 100%",
    "start": "1805200",
    "end": "1810279"
  },
  {
    "text": "things that we did that we look back on now and go well that was a bad idea or",
    "start": "1810279",
    "end": "1815559"
  },
  {
    "text": "that went a lot more rough you know a lot rougher than we thought it was one of the big ones there is that business",
    "start": "1815559",
    "end": "1821519"
  },
  {
    "text": "with the proxy going oh I'm getting HTP route updates or I'm getting service profile updates",
    "start": "1821519",
    "end": "1828840"
  },
  {
    "text": "um there's not a lot of feedback from the proxy about what it's watching right",
    "start": "1828840",
    "end": "1833960"
  },
  {
    "text": "now and I can tell you from personal experience that this has resulted in some much trickier debugging sessions",
    "start": "1833960",
    "end": "1839960"
  },
  {
    "text": "than I would have liked so there's there are definitely things we need to keep going things that went well starting",
    "start": "1839960",
    "end": "1846679"
  },
  {
    "text": "with ux considerations absolutely critical you really really need to do this I've said this multiple times at",
    "start": "1846679",
    "end": "1852120"
  },
  {
    "text": "this conference the end user which usually for me is an application developer but for linky is not always an",
    "start": "1852120",
    "end": "1858360"
  },
  {
    "text": "application developer considering things from the point of view of the end user is absolutely crucial if you don't do",
    "start": "1858360",
    "end": "1864679"
  },
  {
    "text": "that you will get crap that they hate and then they will yell at you and you won't enjoy it and if you do it from the start you have a Fighting Chance of",
    "start": "1864679",
    "end": "1871440"
  },
  {
    "text": "coming up with something they're actually going to like uh also having our own API Group",
    "start": "1871440",
    "end": "1877200"
  },
  {
    "text": "gave us um an interesting vehicle for being able to try things",
    "start": "1877200",
    "end": "1882320"
  },
  {
    "text": "out kind of in our own little sandbox as opposed to having to worry too much about performance with the rest of the",
    "start": "1882320",
    "end": "1888159"
  },
  {
    "text": "world and that permitted us to do some things that was a positive and a negative actually um I guess we'll start",
    "start": "1888159",
    "end": "1894919"
  },
  {
    "text": "it kind of at the bottom of this one the negative side of having both API groups is first off it's confusing for people",
    "start": "1894919",
    "end": "1901600"
  },
  {
    "text": "and that turns out to be uh you know a pretty big deal uh the other one is it's obviously more effort on the development",
    "start": "1901600",
    "end": "1907639"
  },
  {
    "text": "team and if we had started at a place where mesh conformance was possible I",
    "start": "1907639",
    "end": "1914200"
  },
  {
    "text": "think we probably would not have gone that route I think we probably would have just started with the core API type and rolled with it rather than doing our",
    "start": "1914200",
    "end": "1920880"
  },
  {
    "text": "own first if we had not had to sidestep that conformance issue um not having a",
    "start": "1920880",
    "end": "1926840"
  },
  {
    "text": "good way to compose service profile on HTTP route is definitely causing pain for some of our users and that's a huge",
    "start": "1926840",
    "end": "1934120"
  },
  {
    "text": "huge priority for us to sort out um and yeah there's still functional gaps",
    "start": "1934120",
    "end": "1940720"
  },
  {
    "text": "between service profiles and HTTP routes lastly what worries us about all of this",
    "start": "1940720",
    "end": "1946120"
  },
  {
    "text": "um so every project using Gateway API and anger is finding that they're developing in advance of the",
    "start": "1946120",
    "end": "1951880"
  },
  {
    "text": "specification we are no exception to that and we're still trying to figure out how to do that um a good example",
    "start": "1951880",
    "end": "1959120"
  },
  {
    "text": "there is retries where HTTP rout based retries we do that differently than",
    "start": "1959120",
    "end": "1966240"
  },
  {
    "text": "every other Gateway API implementation that we know of we use budgeted retries rather than counted retries um so",
    "start": "1966240",
    "end": "1973799"
  },
  {
    "text": "instead of saying you may retry up to three times for us it's you can retry as long as the total fraction of retries is",
    "start": "1973799",
    "end": "1979600"
  },
  {
    "text": "not more than 20% of the traffic going to this back end and Envoy recently added that maybe",
    "start": "1979600",
    "end": "1987159"
  },
  {
    "text": "somebody will pick it up but until then we are the only implementation doing that and that is probably going to make",
    "start": "1987159",
    "end": "1992679"
  },
  {
    "text": "it a little challenging to get Gateway API to accept it um and then we get into fun questions",
    "start": "1992679",
    "end": "1998880"
  },
  {
    "text": "like oh well should we use policy attachment for retries should we use an extension filter should we do something",
    "start": "1998880",
    "end": "2004279"
  },
  {
    "text": "else like cram it into the policy. link. AP group directly and then use that as a vehicle for going go back to Gateway API",
    "start": "2004279",
    "end": "2010720"
  },
  {
    "text": "and saying hey this works awesome you should do it this way I don't know um it I really don't",
    "start": "2010720",
    "end": "2017440"
  },
  {
    "text": "it's a it's an interesting question um and also as I said earlier Linker has",
    "start": "2017440",
    "end": "2024679"
  },
  {
    "text": "a strong tradition of directly controlling our own fate and so there's",
    "start": "2024679",
    "end": "2029880"
  },
  {
    "text": "also some of that going into all this as well lots of ongoing discussions going on here which the three Gateway API",
    "start": "2029880",
    "end": "2036679"
  },
  {
    "text": "people in the room can confirm there are lots of them and I'm probably being really obnoxious to them um but overall",
    "start": "2036679",
    "end": "2044639"
  },
  {
    "text": "we do believe it's possible to do this without completely ruining ruining your reputation we think that's a good thing",
    "start": "2044639",
    "end": "2049919"
  },
  {
    "text": "the user Centric design process is key thinking very carefully through how things are going to look down the road",
    "start": "2049919",
    "end": "2056320"
  },
  {
    "text": "very carefully about how this will affect your users is critical we see people miss that a lot and lastly the",
    "start": "2056320",
    "end": "2063358"
  },
  {
    "text": "Gateway API folks actually are very welcoming to talk to they have a lot of use opinions you should talk to them if",
    "start": "2063359",
    "end": "2069398"
  },
  {
    "text": "you are thinking of doing something like this because you will probably be able to avoid a lot of terrible terrible",
    "start": "2069399",
    "end": "2074440"
  },
  {
    "text": "things going wrong and with that thank you very much I think we have one minute",
    "start": "2074440",
    "end": "2079480"
  },
  {
    "text": "for questions but I will of course be here or back at the Linker booth in the project Pavilion or you can also find me",
    "start": "2079480",
    "end": "2086520"
  },
  {
    "text": "as Flynn on basically all of the cncf slacks so any",
    "start": "2086520",
    "end": "2092398"
  },
  {
    "text": "questions no am I going to escape without somebody asking me something that go for it",
    "start": "2092399",
    "end": "2098879"
  },
  {
    "text": "rust because rust is awesome um slightly less",
    "start": "2105040",
    "end": "2112240"
  },
  {
    "text": "factiously the data plane is already written in Rust yes and to the extent",
    "start": "2112240",
    "end": "2119079"
  },
  {
    "text": "that we get to move uh away from having all of our maintainers have to know both go and rust at an expert level that's",
    "start": "2119079",
    "end": "2126960"
  },
  {
    "text": "good for us to the extent that rust can become a viable alternative to go in the",
    "start": "2126960",
    "end": "2132440"
  },
  {
    "text": "kubernetes ecosystem that's good for everybody so yeah the fact that the",
    "start": "2132440",
    "end": "2137920"
  },
  {
    "text": "whole EOS that almost the whole ecosystem right now is written in one language with one runtime scares the",
    "start": "2137920",
    "end": "2143720"
  },
  {
    "text": "beesus out of me right all you need is one really nasty go runtime bug and the",
    "start": "2143720",
    "end": "2148760"
  },
  {
    "text": "whole thing comes crashing down around our ears for a little while I would much rather have uh a more diverse ecosystem",
    "start": "2148760",
    "end": "2156040"
  },
  {
    "text": "than that I should point out I have no knowledge of any bugs lurking and go to make the",
    "start": "2156040",
    "end": "2161680"
  },
  {
    "text": "whole thing come crashing down around her ears all right so FBI when you watch this talk",
    "start": "2161680",
    "end": "2167680"
  },
  {
    "text": "it's cool uh anything else all right thanks much I appreciate",
    "start": "2167680",
    "end": "2174750"
  },
  {
    "text": "[Applause] it",
    "start": "2174750",
    "end": "2180560"
  }
]