[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "our talk on puberty's admission controllers my name is morgan i'm here with shrini who works",
    "start": "160",
    "end": "7040"
  },
  {
    "text": "together with me at ibm on open source projects as an open source contributor",
    "start": "7040",
    "end": "12799"
  },
  {
    "text": "today we want to take you through an overview of admission controllers discussing the history and a sort of classification of",
    "start": "12799",
    "end": "19439"
  },
  {
    "text": "admission controllers so that when you encounter them you understand what they are and the different",
    "start": "19439",
    "end": "26720"
  },
  {
    "text": "organizations we're going to start with the history and then we'll",
    "start": "26720",
    "end": "31920"
  },
  {
    "start": "30000",
    "end": "95000"
  },
  {
    "text": "have a high level overview of the emission controllers followed by",
    "start": "31920",
    "end": "38239"
  },
  {
    "text": "a deeper sort of code view into uh what you see when interacting uh with",
    "start": "38239",
    "end": "44320"
  },
  {
    "text": "them or developing your own and so to start with what is an",
    "start": "44320",
    "end": "50160"
  },
  {
    "text": "admission controller um in abstract it's a way to validate or modify objects as they",
    "start": "50160",
    "end": "58079"
  },
  {
    "text": "come in before they are persisted to the database which requires that cd in a technical sense uh for the built-in",
    "start": "58079",
    "end": "66159"
  },
  {
    "text": "compiled inversions they're implementing the go validation interface or mutation",
    "start": "66159",
    "end": "71280"
  },
  {
    "text": "interface uh we'll look at that and what that is and for",
    "start": "71280",
    "end": "77600"
  },
  {
    "text": "the web hooks they take in an admission review",
    "start": "77600",
    "end": "84080"
  },
  {
    "text": "object and look at the admission request and output an admission response",
    "start": "84080",
    "end": "91040"
  },
  {
    "text": "next okay and so uh the history of them admission controllers basically have",
    "start": "94159",
    "end": "99680"
  },
  {
    "start": "95000",
    "end": "190000"
  },
  {
    "text": "been since kubernetes in kubernetes since nearly the beginning um and the first",
    "start": "99680",
    "end": "106320"
  },
  {
    "text": "was pulled out first in 0.09 to separate object validation into a",
    "start": "106320",
    "end": "112240"
  },
  {
    "text": "plugable interface as well as allow other",
    "start": "112240",
    "end": "117759"
  },
  {
    "text": "plugins to exist in the future the first web hook started out around 1.4 and existed",
    "start": "117759",
    "end": "125759"
  },
  {
    "text": "for specific api types to call out to specific web servers",
    "start": "125759",
    "end": "132160"
  },
  {
    "text": "and we're not sort of as configurable as the generic web books are today and so we have uh",
    "start": "132160",
    "end": "142560"
  },
  {
    "text": "into v v 1.9 we have the separation of both generic web hooks",
    "start": "142560",
    "end": "149040"
  },
  {
    "text": "um and mutation and this allows",
    "start": "149040",
    "end": "156000"
  },
  {
    "text": "configuration to look at any objects as well as a specific formalization",
    "start": "156000",
    "end": "161440"
  },
  {
    "text": "of the ability to modify the objects as they come in everything that exists",
    "start": "161440",
    "end": "168360"
  },
  {
    "text": "today uh comes from one point",
    "start": "168360",
    "end": "174720"
  },
  {
    "text": "is v1 is v1 now it's not alpha or v8 anymore and exists in kubernetes from uh 116 onward",
    "start": "174720",
    "end": "182319"
  },
  {
    "text": "which covers most of the currently supported uh releases",
    "start": "182319",
    "end": "189040"
  },
  {
    "text": "um so despite our title uh being taxonomy",
    "start": "189599",
    "end": "196159"
  },
  {
    "text": "um you can sort of historically go back and see the history of how these evolved but it's easier to",
    "start": "196159",
    "end": "202080"
  },
  {
    "text": "classify them into sort of this punnett square type object where you look at whether it's",
    "start": "202080",
    "end": "207200"
  },
  {
    "text": "compiled in or a web hook and you also look at whether it's validating or mutating",
    "start": "207200",
    "end": "213120"
  },
  {
    "text": "the built-in validating web hooks are some of the earliest",
    "start": "213120",
    "end": "219040"
  },
  {
    "text": "validating emission controllers built in compile them are some of the earliest ones that are available",
    "start": "219040",
    "end": "224080"
  },
  {
    "text": "and then the web hooks came in to validate uh sort of allowed images that",
    "start": "224080",
    "end": "230000"
  },
  {
    "text": "was one of the first web hooks um mutating came somewhat later",
    "start": "230000",
    "end": "235200"
  },
  {
    "text": "one of the first ones being pod presets which allows them to which allowed users to create a configuration",
    "start": "235200",
    "end": "241599"
  },
  {
    "text": "to modify pods as they arrived and then the last and i think the most interesting",
    "start": "241599",
    "end": "247280"
  },
  {
    "text": "category would be mutating web hooks which are most uh useful for crds and",
    "start": "247280",
    "end": "253120"
  },
  {
    "text": "it's in that it is the only way to validate and apply defaulting for crds",
    "start": "253120",
    "end": "259440"
  },
  {
    "text": "and so there aren't any provided by the code but there are integration tests",
    "start": "259440",
    "end": "265520"
  },
  {
    "text": "that use a a testing one called agn host",
    "start": "265520",
    "end": "271120"
  },
  {
    "text": "and that is what we will look at later and now it is",
    "start": "271120",
    "end": "277680"
  },
  {
    "text": "trainee's turn",
    "start": "277680",
    "end": "283280"
  },
  {
    "start": "280000",
    "end": "385000"
  },
  {
    "text": "thanks morgan and uh i would like to talk about what admission controllers",
    "start": "283280",
    "end": "288720"
  },
  {
    "text": "are uh give you a good overview on",
    "start": "288720",
    "end": "293759"
  },
  {
    "text": "everything we know about them um so what are admission controllers first",
    "start": "293759",
    "end": "299600"
  },
  {
    "text": "of all in kubernetes controllers are control loops that watch uh the state of the cluster",
    "start": "299600",
    "end": "305919"
  },
  {
    "text": "and each of this controller tries to move the cluster state to a desired state admission controllers",
    "start": "305919",
    "end": "313840"
  },
  {
    "text": "on the other hand are plugins that govern and enforce how the cluster is used they are nothing but interceptors to in",
    "start": "313840",
    "end": "322000"
  },
  {
    "text": "the incoming api call their execution defines and customizes how a cluster operate",
    "start": "322000",
    "end": "329360"
  },
  {
    "text": "admission controller web hooks on the other hand are simple http callbacks and",
    "start": "329360",
    "end": "335759"
  },
  {
    "text": "admission controller web hooks are like i stated mutating as well as validating",
    "start": "335759",
    "end": "341120"
  },
  {
    "text": "our special controllers compiled into the api server there are many other plugins compiled",
    "start": "341120",
    "end": "349199"
  },
  {
    "text": "into the api server these plugins can respond to the incoming",
    "start": "349199",
    "end": "356080"
  },
  {
    "text": "create delete modify kind of requests on a resource in the kubernetes cluster",
    "start": "356080",
    "end": "362960"
  },
  {
    "text": "many advanced features in communities require an admission controller plugin to be",
    "start": "362960",
    "end": "369360"
  },
  {
    "text": "enabled in order to properly support the feature as a result kubernetes api server",
    "start": "369360",
    "end": "374560"
  },
  {
    "text": "which is not properly configured with the right set of admission controllers maybe an incomplete server and will not",
    "start": "374560",
    "end": "380720"
  },
  {
    "text": "support most of these features let's look at the flow of an incoming",
    "start": "380720",
    "end": "386000"
  },
  {
    "start": "385000",
    "end": "510000"
  },
  {
    "text": "request as a request comes in authorized and authenticated properly it will go",
    "start": "386000",
    "end": "392080"
  },
  {
    "text": "through a mutating phase where any mutating built-ins as well as",
    "start": "392080",
    "end": "398080"
  },
  {
    "text": "custom web hooks gets executed serially and then those will",
    "start": "398080",
    "end": "404800"
  },
  {
    "text": "affect the incoming objects spec or make modifications to the spec and",
    "start": "404800",
    "end": "410720"
  },
  {
    "text": "eventually goes through object schema validation where the spec is validated um for the object and goes through a",
    "start": "410720",
    "end": "418639"
  },
  {
    "text": "validation phase where a set of built-ins as well as webhooks uh validates various uh",
    "start": "418639",
    "end": "426639"
  },
  {
    "text": "fields in the incoming object if everything goes fine it gets persisted to the database",
    "start": "426639",
    "end": "433360"
  },
  {
    "text": "etc uh if if any one of them fails the the request can get rejected uh as you",
    "start": "433360",
    "end": "441039"
  },
  {
    "text": "can see here um it used to be minus minus admission control flag",
    "start": "441039",
    "end": "446160"
  },
  {
    "text": "that was set uh i was that duplicated in 110 i believe um which where we used to",
    "start": "446160",
    "end": "453840"
  },
  {
    "text": "uh present all the web hooks in an orderly match fashion with the mutating admission back hook",
    "start": "453840",
    "end": "459759"
  },
  {
    "text": "and uh validating admission that being the last two but with the new flag enable admission",
    "start": "459759",
    "end": "466240"
  },
  {
    "text": "plugins there we don't need any order and um each of the api servers",
    "start": "466240",
    "end": "471680"
  },
  {
    "text": "set these uh set of flags as on a required basis like for example if",
    "start": "471680",
    "end": "478319"
  },
  {
    "text": "i you need to read through the documentation of the",
    "start": "478319",
    "end": "484639"
  },
  {
    "text": "individual providers like for example ibm cloud here shows you the set of",
    "start": "484639",
    "end": "492720"
  },
  {
    "text": "uh plug plugins that are enabled uh similarly every um",
    "start": "492720",
    "end": "499680"
  },
  {
    "text": "cloud provider may have a different set of plugins enabled",
    "start": "501120",
    "end": "507440"
  },
  {
    "text": "so main function of the built-in plugins is to provide security",
    "start": "508319",
    "end": "515039"
  },
  {
    "start": "510000",
    "end": "550000"
  },
  {
    "text": "governance and configuration for example some of the plugins are built-in plugins that i have mentioned here default",
    "start": "515039",
    "end": "521039"
  },
  {
    "text": "storage plugin adds a default storage class to an incoming storage request if a storage class is not specified",
    "start": "521039",
    "end": "528640"
  },
  {
    "text": "limit ranger on the other hand sets the default limits on cpu and memory within a net space",
    "start": "528640",
    "end": "533760"
  },
  {
    "text": "if they are not specified interesting part is always pull images here which will protect your",
    "start": "533760",
    "end": "539680"
  },
  {
    "text": "private images in a multi-tenant environment forcing every other user to",
    "start": "539680",
    "end": "545680"
  },
  {
    "text": "provide proper authentication and put your images if they want to use it so let's move on",
    "start": "545680",
    "end": "552399"
  },
  {
    "start": "550000",
    "end": "600000"
  },
  {
    "text": "to validating admission webhook when all the matching webhooks are found they are executed",
    "start": "552399",
    "end": "558000"
  },
  {
    "text": "parallelly and if any one of these web books fail the entire request gets rejected no",
    "start": "558000",
    "end": "564080"
  },
  {
    "text": "mutation can occur because this is the last and the final phase as we saw uh which is the validation phase",
    "start": "564080",
    "end": "571600"
  },
  {
    "text": "and you can you can see the rules are based on operations curve scope can be cluster or",
    "start": "571600",
    "end": "577920"
  },
  {
    "text": "name space as in the example here i have v1 created",
    "start": "577920",
    "end": "583200"
  },
  {
    "text": "on the pod with the namespace there is another flag we can obtain the hook",
    "start": "583200",
    "end": "589760"
  },
  {
    "text": "configure to use an object selector which will skip the calling of the web code if the label matches as",
    "start": "589760",
    "end": "595440"
  },
  {
    "text": "depicted here on the other hand looking at the",
    "start": "595440",
    "end": "603040"
  },
  {
    "text": "mutating admission that perks they are called serially um let us talk about the request coming",
    "start": "603040",
    "end": "608959"
  },
  {
    "text": "in these are http callbacks like i mentioned admission review object is presented to",
    "start": "608959",
    "end": "615519"
  },
  {
    "text": "the weapon which contains a uid universal id and the resource object that needs",
    "start": "615519",
    "end": "621279"
  },
  {
    "text": "uh mutation or validation right in the case of mutation the response should contain this uid",
    "start": "621279",
    "end": "628000"
  },
  {
    "text": "which is presented to it back and then a flag called allowed which is set to true or false depending",
    "start": "628000",
    "end": "634800"
  },
  {
    "text": "upon whether the web hook is accepting or uh rejecting this request and then for a mutating weapon uh a",
    "start": "634800",
    "end": "643040"
  },
  {
    "text": "patch is also uh uh before that i want to say in case of",
    "start": "643040",
    "end": "650480"
  },
  {
    "text": "error that webhook should return a proper http error with a nice",
    "start": "650480",
    "end": "655600"
  },
  {
    "text": "user-friendly message like you use signature missing in the coming part annotation what not",
    "start": "655600",
    "end": "661600"
  },
  {
    "text": "whatever you figure is missing from the spec you should clearly state that",
    "start": "661600",
    "end": "666640"
  },
  {
    "text": "so for example on the patch uh the patch and the patch field type which is always",
    "start": "666640",
    "end": "672079"
  },
  {
    "text": "going to be json the patch will be a serialized array of bytes of the json string",
    "start": "672079",
    "end": "679120"
  },
  {
    "text": "if suppose he got incoming deployment you want to set replicas to 3 if there are",
    "start": "679120",
    "end": "684720"
  },
  {
    "text": "replicas missing on the deployment you would send a patch back saying that op is add path is slash",
    "start": "684720",
    "end": "692880"
  },
  {
    "text": "spec replicas so we are adding that field with a value of 3.",
    "start": "692880",
    "end": "698240"
  },
  {
    "text": "item presents is important for webhooks because webhooks can be called more than once um there is",
    "start": "698240",
    "end": "705360"
  },
  {
    "text": "if there is a patch that is is changed by more than one weapon",
    "start": "705360",
    "end": "712240"
  },
  {
    "text": "that is observed and then your web might be called twice or more ordering is not guaranteed",
    "start": "712240",
    "end": "718639"
  },
  {
    "text": "any web can called in any order and then matching is a matching request is a",
    "start": "718639",
    "end": "724720"
  },
  {
    "text": "field that has to be set to exact or equivalent uh equipment is preferred the reason is",
    "start": "724720",
    "end": "730480"
  },
  {
    "text": "let's for example we talk about our deployment case where we're setting the replicas uh as you know",
    "start": "730480",
    "end": "737120"
  },
  {
    "text": "cube api server allows creating and modifying deploying objects with different um versions and",
    "start": "737120",
    "end": "743760"
  },
  {
    "text": "uh api groups so if deployment comes with v1 uh apps slash v1 or app slash v1 better",
    "start": "743760",
    "end": "751279"
  },
  {
    "text": "one both of these should uh should have the same effect and we should be able to add",
    "start": "751279",
    "end": "756800"
  },
  {
    "text": "the replicas uh so that means that in order to achieve con consistency we should set this field to",
    "start": "756800",
    "end": "763440"
  },
  {
    "text": "equal length uh timeouts is another aspect i want to mention uh webhook latency",
    "start": "763440",
    "end": "768639"
  },
  {
    "text": "adds to the api latency so set the timeout to any value between 0 and 30.",
    "start": "768639",
    "end": "775120"
  },
  {
    "text": "mutating and validating web folks should work hand in hand that means a mutating changes certain",
    "start": "775120",
    "end": "781120"
  },
  {
    "text": "aspects in the object and then validating validates them side effects or",
    "start": "781120",
    "end": "787120"
  },
  {
    "text": "is a field that can be set to none none on dry run so on so forth if you are",
    "start": "787120",
    "end": "792880"
  },
  {
    "text": "doing a dry run or a failure happens in the middle of the requires um you have to make sure that your web hook",
    "start": "792880",
    "end": "799760"
  },
  {
    "text": "reconcile all the changes it has made to the cluster namespace selector",
    "start": "799760",
    "end": "806320"
  },
  {
    "text": "is required to avoid running web books in the system namespace which will may have on",
    "start": "806320",
    "end": "814959"
  },
  {
    "text": "on expected behavior to your cluster uh relocation policy is set to never or",
    "start": "814959",
    "end": "822000"
  },
  {
    "text": "if needed this depends again on your webpage basically if you want to run",
    "start": "822000",
    "end": "827120"
  },
  {
    "text": "your wrapper such that um only once so you can control that during this uh using this",
    "start": "827120",
    "end": "834000"
  },
  {
    "start": "830000",
    "end": "920000"
  },
  {
    "text": "field part resistance are built in which is mutating actually it will inject information into",
    "start": "834000",
    "end": "840560"
  },
  {
    "text": "parts at creation time such as secrets volumes and volume lines um wall amounts and etc pot presets",
    "start": "840560",
    "end": "847920"
  },
  {
    "text": "apply by labels on the path for example as i shown on the",
    "start": "847920",
    "end": "854000"
  },
  {
    "text": "example here a part coming in with uh within label front end um",
    "start": "854000",
    "end": "861279"
  },
  {
    "text": "will be will will be actually affected because um we we're going to inject an anonymous",
    "start": "861279",
    "end": "868720"
  },
  {
    "text": "variability report as well as volume ups in there uh if a part preset uh fails to merge",
    "start": "868720",
    "end": "876000"
  },
  {
    "text": "uh the product will still get started there can be n number of part presets run on an",
    "start": "876000",
    "end": "881120"
  },
  {
    "text": "incoming part and at the same time airport reset may affect and uh different types of",
    "start": "881120",
    "end": "887360"
  },
  {
    "text": "pod requests all containers in uh in the incoming",
    "start": "887360",
    "end": "893839"
  },
  {
    "text": "part object or even the part spec may be affected by the merge you can turn it off using a flag here",
    "start": "893839",
    "end": "901760"
  },
  {
    "text": "um so at this point i think i would let morgan dig deeper into the code and show",
    "start": "901760",
    "end": "908160"
  },
  {
    "text": "you how the admission explorer",
    "start": "908160",
    "end": "914480"
  },
  {
    "text": "all right let's talk about the built-in compiled and admission controls thank you shaney",
    "start": "917920",
    "end": "923920"
  },
  {
    "start": "920000",
    "end": "1045000"
  },
  {
    "text": "uh we're going to look at some code details now so that you are again aware of uh the",
    "start": "923920",
    "end": "931440"
  },
  {
    "text": "behavior and the the existence of some of the compiled in ones and uh such as the always pull images",
    "start": "931440",
    "end": "937759"
  },
  {
    "text": "that we've discussed we have hopefully",
    "start": "937759",
    "end": "944880"
  },
  {
    "text": "the uh package the plugin directory which has",
    "start": "947360",
    "end": "954079"
  },
  {
    "text": "all of the admission controllers in it and in it we can look at the always pull",
    "start": "954079",
    "end": "961680"
  },
  {
    "text": "images controller and we see the code and we see the admission dot go which is",
    "start": "961680",
    "end": "968880"
  },
  {
    "text": "where the code is located and inside of this we can see that we implement the mutation interface and the",
    "start": "968880",
    "end": "976399"
  },
  {
    "text": "validation interface as discussed um when we look at that",
    "start": "976399",
    "end": "983120"
  },
  {
    "text": "uh we can see it that the the mutation interface uh is",
    "start": "983120",
    "end": "989920"
  },
  {
    "text": "uh if when we look at the mutation interface we'll see that it is coordinated with this admit uh function and that the validation",
    "start": "989920",
    "end": "996639"
  },
  {
    "text": "interface is coordinated with the validate function uh and if we remember the order we can",
    "start": "996639",
    "end": "1002079"
  },
  {
    "text": "remember that mutating happens before validation and so for our mutation you can see that",
    "start": "1002079",
    "end": "1007360"
  },
  {
    "text": "the always call images sets the image pool policy to pull always and you can see that the",
    "start": "1007360",
    "end": "1012560"
  },
  {
    "text": "validation side of this uh",
    "start": "1012560",
    "end": "1017360"
  },
  {
    "text": "checks that that is set uh other thing important to note is that",
    "start": "1017920",
    "end": "1023360"
  },
  {
    "text": "when we're past the object from the past end what we get always going to be a pointer to the object",
    "start": "1023360",
    "end": "1029760"
  },
  {
    "text": "because you have to modify the object directly before it is uh persistent",
    "start": "1029760",
    "end": "1037520"
  },
  {
    "text": "uh so now mutating versus validating uh",
    "start": "1044160",
    "end": "1050000"
  },
  {
    "start": "1045000",
    "end": "1150000"
  },
  {
    "text": "built in um and remember that the abstractly validating simply says yes or",
    "start": "1051280",
    "end": "1058480"
  },
  {
    "text": "no uh procedure don't accept or reject uh again it implements the validation",
    "start": "1058480",
    "end": "1063520"
  },
  {
    "text": "interface whereas the mutating implements the mutation interface and this allows access to change the object",
    "start": "1063520",
    "end": "1070799"
  },
  {
    "text": "and as i mentioned you're going to get a pointer and it's important that you modify that object directly",
    "start": "1070799",
    "end": "1076720"
  },
  {
    "text": "because that is what gets persisted by the storage layer which is that cd",
    "start": "1076720",
    "end": "1083679"
  },
  {
    "text": "uh and this is this differs uh significantly from a normal controller",
    "start": "1083679",
    "end": "1088799"
  },
  {
    "text": "where you want to you often have a layer of caching involved and you want to make sure you do not modify that",
    "start": "1088799",
    "end": "1095520"
  },
  {
    "text": "because the caching layer will not be aware of you writing to it",
    "start": "1095520",
    "end": "1102080"
  },
  {
    "text": "and right and won't write it back and so you can get you can blow yourself up that way so you need to be careful",
    "start": "1102080",
    "end": "1108240"
  },
  {
    "text": "so if we go back to it we can see",
    "start": "1108240",
    "end": "1113520"
  },
  {
    "text": "the mutation interface here you can again",
    "start": "1114400",
    "end": "1119919"
  },
  {
    "text": "see that it implements they both have the same interface which it's just a handler and so",
    "start": "1119919",
    "end": "1125039"
  },
  {
    "text": "obviously it's a it's sort of a plug-in and so the plug-in is called as handled but once inside we detect",
    "start": "1125039",
    "end": "1132160"
  },
  {
    "text": "whether or not it's mutation or validation we call them in the appropriate order and they get",
    "start": "1132160",
    "end": "1139280"
  },
  {
    "text": "called with these specific functions",
    "start": "1139280",
    "end": "1143440"
  },
  {
    "text": "now we move back to",
    "start": "1146720",
    "end": "1151840"
  },
  {
    "start": "1150000",
    "end": "1265000"
  },
  {
    "text": "web hooks and web hooks are again a rest api",
    "start": "1153280",
    "end": "1160480"
  },
  {
    "text": "which both mutating and validating will get an",
    "start": "1160480",
    "end": "1166080"
  },
  {
    "text": "admission review object in and inside of that mission review object is going to be an",
    "start": "1166080",
    "end": "1172240"
  },
  {
    "text": "admission request and both validating mutant are going to",
    "start": "1172240",
    "end": "1177360"
  },
  {
    "text": "look at that request perform some logic and then as we previously discussed right back to",
    "start": "1177360",
    "end": "1183760"
  },
  {
    "text": "the admission review and admission response",
    "start": "1183760",
    "end": "1189039"
  },
  {
    "text": "object and copy the uid from the request copy uh copy the uid from the request",
    "start": "1189039",
    "end": "1195200"
  },
  {
    "text": "for both of them sent aloud to true if both if they",
    "start": "1195200",
    "end": "1200320"
  },
  {
    "text": "validate on youtube and agree that they want to proceed and then um the mutating will also",
    "start": "1200320",
    "end": "1207280"
  },
  {
    "text": "contain the described json patch change to the object",
    "start": "1207280",
    "end": "1213679"
  },
  {
    "text": "so bring that up",
    "start": "1213679",
    "end": "1221360"
  },
  {
    "text": "and so we look at the admission review struct we have the admission request we",
    "start": "1221360",
    "end": "1226640"
  },
  {
    "text": "have the admission response and so inside the request we have the uid and that is where we're going to copy it from",
    "start": "1226640",
    "end": "1232559"
  },
  {
    "text": "and we'll also have the uh object which comes in and this is again",
    "start": "1232559",
    "end": "1239600"
  },
  {
    "text": "a you're gonna have to deserialize that into an actual object uh to operate on and then",
    "start": "1239600",
    "end": "1246720"
  },
  {
    "text": "once you have decided what to do you will write your patch out and you will copy as it says from the",
    "start": "1246720",
    "end": "1253120"
  },
  {
    "text": "documentation here you copy it from the request and you will set your allowed",
    "start": "1253120",
    "end": "1258640"
  },
  {
    "text": "to true",
    "start": "1258640",
    "end": "1263840"
  },
  {
    "text": "okay and now we get to the point where i discuss um the agn host image",
    "start": "1264320",
    "end": "1271520"
  },
  {
    "start": "1265000",
    "end": "1490000"
  },
  {
    "text": "which is the demo portion so we'll go back to our screen",
    "start": "1271520",
    "end": "1280399"
  },
  {
    "text": "and so in uh you know in the kubernetes testing",
    "start": "1281919",
    "end": "1288640"
  },
  {
    "text": "environment the there's an image provided called agn host which is a very um helpful uh image to use for testing",
    "start": "1288640",
    "end": "1296640"
  },
  {
    "text": "but it is also a very good example of the intricacies and the uh implementation of",
    "start": "1296640",
    "end": "1303200"
  },
  {
    "text": "a webhook and uh web hooks again as we mentioned the",
    "start": "1303200",
    "end": "1308320"
  },
  {
    "text": "configuration earlier ssl and so you will have to provide a server that",
    "start": "1308320",
    "end": "1313440"
  },
  {
    "text": "um provides a tls configuration and then we will demonstrate the deny",
    "start": "1313440",
    "end": "1320159"
  },
  {
    "text": "web hook and the ad label web hook but you can see that you can have multiple web hook implementations within a single",
    "start": "1320159",
    "end": "1325360"
  },
  {
    "text": "server as it is just a server uh inside of this implementation you can see",
    "start": "1325360",
    "end": "1330720"
  },
  {
    "text": "where we copy the uid from the response to the request",
    "start": "1330720",
    "end": "1339120"
  },
  {
    "text": "and so for the always deny there is a very small implementation which sets to the review response to false and again and",
    "start": "1339760",
    "end": "1347280"
  },
  {
    "text": "importantly as mentioned earlier it sets a message uh the label will add",
    "start": "1347280",
    "end": "1353760"
  },
  {
    "text": "a label called added label to the um created resource",
    "start": "1353760",
    "end": "1360320"
  },
  {
    "text": "um so if we look at the",
    "start": "1360320",
    "end": "1365440"
  },
  {
    "text": "configuration here i have set up a kubernetes server to um with two nodes",
    "start": "1366799",
    "end": "1376720"
  },
  {
    "text": "and so we can check that there are",
    "start": "1378000",
    "end": "1382960"
  },
  {
    "text": "uh",
    "start": "1386840",
    "end": "1389840"
  },
  {
    "text": "uh we have no web hooks created so i will create a",
    "start": "1400320",
    "end": "1406559"
  },
  {
    "text": "i will set up the where is the one that i was using this",
    "start": "1407840",
    "end": "1414720"
  },
  {
    "text": "one we will set up the webhook",
    "start": "1414720",
    "end": "1420480"
  },
  {
    "text": "and so now if i pull the webhook configuration we can see that",
    "start": "1420480",
    "end": "1426320"
  },
  {
    "text": "it's created and to demonstrate that it's working we will run a pod",
    "start": "1426320",
    "end": "1432799"
  },
  {
    "text": "and we can see that we got the message so now",
    "start": "1432799",
    "end": "1445840"
  },
  {
    "text": "so that is the end of the demonstration we would discuss some wrap up here where",
    "start": "1485120",
    "end": "1493279"
  },
  {
    "start": "1490000",
    "end": "1945000"
  },
  {
    "text": "i want to leave you with some advice uh on web books on a",
    "start": "1493279",
    "end": "1498840"
  },
  {
    "text": "side effects and so you should be in general avoiding",
    "start": "1498840",
    "end": "1505039"
  },
  {
    "text": "uh side effects and what i mean by side effects is you shouldn't be writing to other objects",
    "start": "1505039",
    "end": "1510720"
  },
  {
    "text": "uh that are not the object that you're being passed in and the reason is you want to avoid having to keep track of",
    "start": "1510720",
    "end": "1516240"
  },
  {
    "text": "state because again most of these controllers should be fairly stateless and that if",
    "start": "1516240",
    "end": "1521520"
  },
  {
    "text": "you interrupt them and restart them they should achieve they should be able to achieve their goals in the end",
    "start": "1521520",
    "end": "1527919"
  },
  {
    "text": "there are many different security aspects beyond the tls that you should be aware of um if you're running your web hooks in",
    "start": "1527919",
    "end": "1534559"
  },
  {
    "text": "the cluster which you can run them in the cluster or out of cluster again it's a rest api endpoint anywhere you can",
    "start": "1534559",
    "end": "1539840"
  },
  {
    "text": "contact it i should probably have it in a separate name space you should have our back uh to configure access to your config",
    "start": "1539840",
    "end": "1546880"
  },
  {
    "text": "objects and you should understand the different failure modes that exist when you have",
    "start": "1546880",
    "end": "1554840"
  },
  {
    "text": "um the failure policies so if your failure",
    "start": "1554840",
    "end": "1560640"
  },
  {
    "text": "policy is set to ignore you may end up skipping some kind of",
    "start": "1560640",
    "end": "1565760"
  },
  {
    "text": "uh policy that you must have by corporate uh",
    "start": "1565760",
    "end": "1572720"
  },
  {
    "text": "dictate and so uh it's important to understand those",
    "start": "1572720",
    "end": "1578559"
  },
  {
    "text": "policies and again as it is a separate web server that you're running you can write it in any language",
    "start": "1578559",
    "end": "1584000"
  },
  {
    "text": "you want as long as you fulfill the um the api which is the rest api you have",
    "start": "1584000",
    "end": "1592000"
  },
  {
    "text": "the admission review filled with request and response um",
    "start": "1592000",
    "end": "1597440"
  },
  {
    "text": "it's important as we mentioned the other uh things to remember that the order is not guaranteed remain",
    "start": "1597440",
    "end": "1603919"
  },
  {
    "text": "item potent and etc and with that next we are over and we would accept",
    "start": "1603919",
    "end": "1612960"
  },
  {
    "text": "questions i suppose thank you for watching attending",
    "start": "1612960",
    "end": "1619278"
  },
  {
    "text": "goodbye",
    "start": "1624840",
    "end": "1627840"
  },
  {
    "text": "we cannot hear you okay",
    "start": "1635440",
    "end": "1641840"
  },
  {
    "text": "uh can you guys hear us super okay so um other than",
    "start": "1643039",
    "end": "1650960"
  },
  {
    "text": "a couple of questions on where are the slides which hopefully",
    "start": "1650960",
    "end": "1656320"
  },
  {
    "text": "i've posted a link [Music]",
    "start": "1656320",
    "end": "1661559"
  },
  {
    "text": "a good one i think is is there a good code generator or starter projects for building new admission controllers",
    "start": "1662320",
    "end": "1669720"
  },
  {
    "text": "[Music] and i don't know if if any of the cube",
    "start": "1669720",
    "end": "1675840"
  },
  {
    "text": "builder stuff is set for specifically emission controllers",
    "start": "1675840",
    "end": "1681200"
  },
  {
    "text": "but the agn host image that i was showing earlier on i think is a good",
    "start": "1681360",
    "end": "1688559"
  },
  {
    "text": "uh while it's well it's sort of over complicated in that it's got 15 different admission controllers in it",
    "start": "1688960",
    "end": "1695120"
  },
  {
    "text": "um it does have a very good",
    "start": "1695120",
    "end": "1700480"
  },
  {
    "text": "run through of most of the features and and those are all tested um using the",
    "start": "1700960",
    "end": "1707360"
  },
  {
    "text": "the integration testing that kubernetes does we wanted to sort of uh",
    "start": "1707360",
    "end": "1714480"
  },
  {
    "text": "provide a sample one but uh it again house does really everything we",
    "start": "1714480",
    "end": "1720320"
  },
  {
    "text": "wanted to do at the time",
    "start": "1720320",
    "end": "1725840"
  },
  {
    "text": "all right shrini the other one there is a new one can you elaborate on what the reconcile",
    "start": "1726799",
    "end": "1732799"
  },
  {
    "text": "process is for dry run on an object we've been using validating web hooks that didn't allow for a dry run but",
    "start": "1732799",
    "end": "1738720"
  },
  {
    "text": "couldn't understand the implications of enabling it",
    "start": "1738720",
    "end": "1743039"
  },
  {
    "text": "so dry run the idea there is that",
    "start": "1745360",
    "end": "1752720"
  },
  {
    "text": "you want to support the object you want to support looking",
    "start": "1752720",
    "end": "1758159"
  },
  {
    "text": "at an object without actually creating it and persisting it through the actual the whole um whole stream and so from what i",
    "start": "1758159",
    "end": "1766000"
  },
  {
    "text": "remember um i think we didn't talk about this a lot is that dry run has",
    "start": "1766000",
    "end": "1772559"
  },
  {
    "text": "uh there's a flag that you can put on the incoming object that says is this a dry run object and that that",
    "start": "1772559",
    "end": "1780799"
  },
  {
    "text": "means that um you're just asking the server to basically do whatever it does",
    "start": "1780799",
    "end": "1786080"
  },
  {
    "text": "and not actually persist all the objects and so there are there are um this is one of the reasons",
    "start": "1786080",
    "end": "1793039"
  },
  {
    "text": "why we say sort of avoid side effects if if you're going to create side effects which means you're going to go",
    "start": "1793039",
    "end": "1798240"
  },
  {
    "text": "back and and create new objects you need to be worried about um a",
    "start": "1798240",
    "end": "1803360"
  },
  {
    "text": "the the modifications that that happen to the incoming object that might be created and then you don't",
    "start": "1803360",
    "end": "1809200"
  },
  {
    "text": "want to make you want to leave these other objects around so you know by supporting dry run you want to make sure",
    "start": "1809200",
    "end": "1815440"
  },
  {
    "text": "you have a code path that goes through the",
    "start": "1815440",
    "end": "1821360"
  },
  {
    "text": "uh the full life cycle of a request but doesn't actually create any of the end up ending objects",
    "start": "1821360",
    "end": "1831039"
  },
  {
    "text": "and uh maybe we can talk about that later",
    "start": "1831360",
    "end": "1835840"
  },
  {
    "text": "and i don't see any questions that we haven't answered",
    "start": "1848840",
    "end": "1854880"
  },
  {
    "text": "that aren't where are the slides",
    "start": "1854880",
    "end": "1865840"
  },
  {
    "text": "and i don't know what any of these other buttons do so",
    "start": "1865840",
    "end": "1879840"
  },
  {
    "text": "yeah tree do you have anything you want to add no there are uh surprisingly uh there",
    "start": "1891120",
    "end": "1896960"
  },
  {
    "text": "are other talks around security policies um using admission controllers so um yeah",
    "start": "1896960",
    "end": "1904159"
  },
  {
    "text": "um in in this keep going actually for people to refer to if you",
    "start": "1904159",
    "end": "1910399"
  },
  {
    "text": "are interested uh the other thing is that uh thank you all for joining um",
    "start": "1910399",
    "end": "1918799"
  },
  {
    "text": "even though it's a virtual conference we appreciate the interest i see that yep go stop by the virtual",
    "start": "1918799",
    "end": "1926880"
  },
  {
    "text": "booths and get some virtual prizes i think there's actually real prizes still so",
    "start": "1926880",
    "end": "1932640"
  },
  {
    "text": "um stop by the ibm booth i guess and i hope you enjoyed some of the",
    "start": "1932640",
    "end": "1937840"
  },
  {
    "text": "keynotes and i hope you're having a good time and i hope you're all",
    "start": "1937840",
    "end": "1943600"
  },
  {
    "text": "safe and sound",
    "start": "1943600",
    "end": "1947679"
  }
]