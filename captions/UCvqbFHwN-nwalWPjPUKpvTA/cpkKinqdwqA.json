[
  {
    "text": "uh the title of our talk today is kubernetes multicluster networking 101 I'm nanin I'm a software engineer at",
    "start": "199",
    "end": "8360"
  },
  {
    "text": "Microsoft on the AKs traffic team working on manage ISO uh and I'm Ron",
    "start": "8360",
    "end": "13719"
  },
  {
    "text": "Venom I'm one of the technical product managers at solo.io where we have a API Gateway solution called Blue Gateway",
    "start": "13719",
    "end": "19800"
  },
  {
    "text": "that's built on it's based on Envoy and then a service mesh solution a multicluster service mesh called glue",
    "start": "19800",
    "end": "25560"
  },
  {
    "text": "mesh that's based on ISO so um in our session today uh we're",
    "start": "25560",
    "end": "32320"
  },
  {
    "text": "going to be giving an overview of multicluster kubernetes networking we'll start off just talking about",
    "start": "32320",
    "end": "37440"
  },
  {
    "text": "multicluster kubernetes in general and some of the networking challenges involved and then um we'll provide some",
    "start": "37440",
    "end": "43960"
  },
  {
    "text": "guidelines for how you can go about tackling these challenges across Three core areas um we'll start off with",
    "start": "43960",
    "end": "49840"
  },
  {
    "text": "connectivity so East West and north south networking then uh talk about service Discovery and how to secure your",
    "start": "49840",
    "end": "56960"
  },
  {
    "text": "multicluster traffic and uh finally we end with some recommendations and takeaways for navigating this",
    "start": "56960",
    "end": "63840"
  },
  {
    "text": "multicluster networking landscape and how to incorporate these different solutions that we discuss into your",
    "start": "63840",
    "end": "70400"
  },
  {
    "text": "platform yeah and pretty much everybody we talk to you know has a multicluster strategy or they're working on a",
    "start": "70400",
    "end": "76240"
  },
  {
    "text": "multicluster strategy and when I say multicluster you know we don't just mean a different cluster for Deb test prod",
    "start": "76240",
    "end": "81880"
  },
  {
    "text": "but instead deploying multiple clusters in production where you have services that are spanning across these multiple",
    "start": "81880",
    "end": "87680"
  },
  {
    "text": "clusters and they need to be able to Route toe one another and there's multiple reasons why people need this",
    "start": "87680",
    "end": "92720"
  },
  {
    "text": "multicluster strategy you know they could be for uh performance and Lancy reasons where you want to push your",
    "start": "92720",
    "end": "98000"
  },
  {
    "text": "clusters closest to your to your to your end users to your to your clients they could be because you want to delegate uh",
    "start": "98000",
    "end": "106040"
  },
  {
    "text": "to each one of your tenants like each one of your development teams might want to have their own kubernetes cluster",
    "start": "106040",
    "end": "111479"
  },
  {
    "text": "where they can like own the entire life cycle management of uh uh of their code and process you might have a like a",
    "start": "111479",
    "end": "118520"
  },
  {
    "text": "hybrid cloud strategy where you need to deploy clusters across different regions maybe on premise and public clouds we've",
    "start": "118520",
    "end": "124799"
  },
  {
    "text": "seen we we've seen like you know multiple different reasons why people uh adapt a multicluster strategy but you",
    "start": "124799",
    "end": "130920"
  },
  {
    "text": "know regardless of you know what your strategy is um you know you definitely need to solve this network connectivity",
    "start": "130920",
    "end": "137239"
  },
  {
    "text": "problem between the Clusters um like Tim Hawkins said uh that you know a kubernetes cluster is like a is like a",
    "start": "137239",
    "end": "144160"
  },
  {
    "text": "city or a castle where inside the the city you have roads you have like a DMV",
    "start": "144160",
    "end": "149599"
  },
  {
    "text": "you have Gates you have all of the you know the benefits of like a city but as soon as you leave the cluster it's like",
    "start": "149599",
    "end": "155360"
  },
  {
    "text": "you know it's a jungle so in order for you to connect these different like cities together or these clusters",
    "start": "155360",
    "end": "161440"
  },
  {
    "text": "together you have to figure out like what do you want to do do you want to build a a road do you want to build a tunnel Do you want to build a bridge so",
    "start": "161440",
    "end": "168440"
  },
  {
    "text": "you need to solve that Network problem first that connectivity problem of how you want to connect these clusters",
    "start": "168440",
    "end": "173599"
  },
  {
    "text": "together you know once that's done you need to figure out like how do you how do your your requests how does your",
    "start": "173599",
    "end": "179400"
  },
  {
    "text": "packet when they're going from cluster to Cluster uh H are they encrypted is it is it mtls how do you communicate",
    "start": "179400",
    "end": "185480"
  },
  {
    "text": "securely you need to resolve the problem of service Discovery uh and DNS across",
    "start": "185480",
    "end": "190879"
  },
  {
    "text": "both of your clusters and then uh you know last but not least things like like unified access control um and and load",
    "start": "190879",
    "end": "197720"
  },
  {
    "text": "balancing logic so these are all things you kind of have to resolve that you know that you know that kubernetes",
    "start": "197720",
    "end": "202879"
  },
  {
    "text": "single cluster you you already have out of the box um kubernetes clusters were like in my opinion they were never",
    "start": "202879",
    "end": "209000"
  },
  {
    "text": "designed uh from the beginning to be grouped together and and form one big massive cluster so there are a lot of",
    "start": "209000",
    "end": "215560"
  },
  {
    "text": "these challenges that um that you kind of have to layer on top and address",
    "start": "215560",
    "end": "220840"
  },
  {
    "text": "them um a a common pattern that we see know when users go to to go about",
    "start": "220840",
    "end": "227200"
  },
  {
    "text": "solving this multicluster is that they just hairpin all traffic around this Central external Gateway you know like",
    "start": "227200",
    "end": "234360"
  },
  {
    "text": "you know something like like apog aana Etc like whatever your your external outside of kubernetes traff uh there's",
    "start": "234360",
    "end": "240680"
  },
  {
    "text": "like a Gateway that sits there and then whenever you have a new service come up in your cluster they register that service to that API Gateway and it",
    "start": "240680",
    "end": "247840"
  },
  {
    "text": "usually starts with just you know a couple of services that just need this like cross cluster routing capability",
    "start": "247840",
    "end": "253879"
  },
  {
    "text": "but before you know it all of your services start going towards that direction and it quickly just becomes",
    "start": "253879",
    "end": "259079"
  },
  {
    "text": "the standard where uh whether the service is in in the same cluster sitting next to you in the same name",
    "start": "259079",
    "end": "265240"
  },
  {
    "text": "space or in a CO totally different cluster you're hairpinning around this this is bad from like you know not only",
    "start": "265240",
    "end": "271759"
  },
  {
    "text": "just like a Lany perspective but this is that you're introducing a single point of failure it is less secure because you",
    "start": "271759",
    "end": "278479"
  },
  {
    "text": "know now you're probably doing TLS that's being terminated at the Gateway that Gateway has to like uh terminate",
    "start": "278479",
    "end": "283840"
  },
  {
    "text": "that connection do layer 7 processing and then route to it so there's there's multiple reasons why this strategy um is",
    "start": "283840",
    "end": "290280"
  },
  {
    "text": "probably not the best strategy for for long-term multicluster adoption so uh thanks R for giving us an",
    "start": "290280",
    "end": "297840"
  },
  {
    "text": "example of what not to do um we're going to start from scratch and uh figure out how we can improve that design um and",
    "start": "297840",
    "end": "304919"
  },
  {
    "text": "we're going to start out thinking about North South traffic management so uh as Rah said we don't",
    "start": "304919",
    "end": "310960"
  },
  {
    "text": "want to hair pin um all of our eastwest traffic through the Central Gateway but we do need some kind of global Service",
    "start": "310960",
    "end": "317840"
  },
  {
    "text": "load balancer that can distribute traffic across different clusters in different regions in different",
    "start": "317840",
    "end": "324479"
  },
  {
    "text": "environments um so one approach for Global load balancing is an IP based approach coach with any cast so um if",
    "start": "324479",
    "end": "331960"
  },
  {
    "text": "you're not familiar with anycast it is basically a routing method that allows a bunch of um different Edge proxies to",
    "start": "331960",
    "end": "338520"
  },
  {
    "text": "share the same IP address so in this example here we have uh Edge proxy East",
    "start": "338520",
    "end": "343560"
  },
  {
    "text": "us and Edge proxy West us both sharing the same IP um and the encast router is",
    "start": "343560",
    "end": "349600"
  },
  {
    "text": "going to forward the incoming client request to one of these data centers one of these Edge proxies um usually based",
    "start": "349600",
    "end": "355639"
  },
  {
    "text": "on some criteria like proximity to the client um and then our Edge proxy is going to Route it to our inish Gateway",
    "start": "355639",
    "end": "362000"
  },
  {
    "text": "that we have per cluster um depending on the specific implementation that you use",
    "start": "362000",
    "end": "367160"
  },
  {
    "text": "uh for instance with some Cloud providers um you might not even need that Ingress Gateway per cluster anymore or it could be a private Ingress Gateway",
    "start": "367160",
    "end": "374440"
  },
  {
    "text": "um because the edge proxy can just route to your um backend application directly or the the multicluster Gateway can",
    "start": "374440",
    "end": "380720"
  },
  {
    "text": "route to it directly uh the other method for Global load balancing is a DNS based approach",
    "start": "380720",
    "end": "388080"
  },
  {
    "text": "so uh in this example we're using external DNS external DNS is a tool that",
    "start": "388080",
    "end": "394039"
  },
  {
    "text": "uh automates the provisioning of DNS records and allows you to expose kubernetes Services through a public DNS",
    "start": "394039",
    "end": "400720"
  },
  {
    "text": "server an external DNS can also integrate with uh DNS servers like Azure",
    "start": "400720",
    "end": "406560"
  },
  {
    "text": "DNS AWS Route 53 and it can provide functionalities like weighted routing or",
    "start": "406560",
    "end": "412919"
  },
  {
    "text": "geol locality based routing so um in this example we have two ingris gateways",
    "start": "412919",
    "end": "418319"
  },
  {
    "text": "with the same host name but uh in the external DNS manifest they are given different owner IDs and uh",
    "start": "418319",
    "end": "425120"
  },
  {
    "text": "what the DNS server is doing is that it is a handling the geol locality based routing so it is forwarding uh the the",
    "start": "425120",
    "end": "432080"
  },
  {
    "text": "request either to it is rout it is resolving the appropriate IP address either in East us or west us depending",
    "start": "432080",
    "end": "438160"
  },
  {
    "text": "on the originating client request um in terms of which approach you go with like",
    "start": "438160",
    "end": "443479"
  },
  {
    "text": "the anycast approach in the previous side or this one um it depends on what your cloud provider offers but uh the",
    "start": "443479",
    "end": "451560"
  },
  {
    "text": "DNS based approach uh seems to be a bit more common so we figured out how to do",
    "start": "451560",
    "end": "458520"
  },
  {
    "text": "Global load balancing um now we need to solve the eastwest communication",
    "start": "458520",
    "end": "463759"
  },
  {
    "text": "problem so let's say you have two clusters um how do you enable connectivity to get traffic from one",
    "start": "463759",
    "end": "469520"
  },
  {
    "text": "cluster to another and what if these clusters are in different networks and",
    "start": "469520",
    "end": "474840"
  },
  {
    "text": "uh By the way when we're talking about networks here we're referring to um the virtual networks that the uh that the",
    "start": "474840",
    "end": "481120"
  },
  {
    "text": "vmss of the worker nodes of our kubernetes cluster are part of or maybe if you're running bare metal these would",
    "start": "481120",
    "end": "486599"
  },
  {
    "text": "be physical machines um but to answer this question we have to understand different network",
    "start": "486599",
    "end": "492960"
  },
  {
    "text": "topologies so the first Network topology is a flat Network um so uh you could",
    "start": "492960",
    "end": "498560"
  },
  {
    "text": "deploy uh two clusters into the same network um or you could use some kind of",
    "start": "498560",
    "end": "504080"
  },
  {
    "text": "peering feature to establish direct connectivity between the different networks so your pods can communicate",
    "start": "504080",
    "end": "510039"
  },
  {
    "text": "directly with one another without any kind of Gateway or any kind of Gat um so",
    "start": "510039",
    "end": "516440"
  },
  {
    "text": "the core requirements of this is that you have uh nonoverlapping address spaces in the two networks uh for",
    "start": "516440",
    "end": "522279"
  },
  {
    "text": "routability between them uh so one cave you have to keep in",
    "start": "522279",
    "end": "528600"
  },
  {
    "text": "mind with the peering approach is that if your pods are on an overlay Network so you're not using something like VPC",
    "start": "528600",
    "end": "535200"
  },
  {
    "text": "cni um then you won't have uh direct routability between your pods of cross clusters like you would your nodes um so",
    "start": "535200",
    "end": "542320"
  },
  {
    "text": "one workr here is you could use a Gateway based approach like we will see with the multi Network topology um or if",
    "start": "542320",
    "end": "550000"
  },
  {
    "text": "you're using a cni like celium or Calico that supports cluster mesh and that can also do some kind of tunneling um or",
    "start": "550000",
    "end": "557240"
  },
  {
    "text": "you're using Submariner which uh creates an ipct tunnel um uh across the Clusters",
    "start": "557240",
    "end": "563800"
  },
  {
    "text": "then that will effect that will effectively just flatten the podt networks and allow that podt pod communication",
    "start": "563800",
    "end": "571320"
  },
  {
    "text": "the other network topology is a multi Network topology so here our networks are separate and isolated um this gives",
    "start": "571519",
    "end": "579800"
  },
  {
    "text": "us a bit more flexibility in terms of um IP address management unlike a flat Network we don't have to worry about the",
    "start": "579800",
    "end": "585720"
  },
  {
    "text": "requirement of of non-overlapping um address spaces and typically this would",
    "start": "585720",
    "end": "591640"
  },
  {
    "text": "use a Gateway uh to send traffic across networks um usually over the public",
    "start": "591640",
    "end": "597079"
  },
  {
    "text": "internet Um this can be a cloud provider Gateway or it could be something like a network Gateway or an East West Gateway",
    "start": "597079",
    "end": "603640"
  },
  {
    "text": "provided by um ISO or linkerd so as an example of what a multi",
    "start": "603640",
    "end": "609560"
  },
  {
    "text": "Network topology would look like we see that our east west traffic um is being served by uh this network Gateway and",
    "start": "609560",
    "end": "615720"
  },
  {
    "text": "then it's routing to the appropriate service accordingly um this Gateway would typically be exposed through a",
    "start": "615720",
    "end": "621480"
  },
  {
    "text": "public IP address but um that may not always be the case there are a few exceptions um and the reason why we have",
    "start": "621480",
    "end": "628040"
  },
  {
    "text": "a dedicated east west gate Gateway and we're not just using the Ingress Gateway uh is because we don't want to flood the",
    "start": "628040",
    "end": "633920"
  },
  {
    "text": "Ingress Gateway with um North South traffic from external clients as well as east west traffic um across our",
    "start": "633920",
    "end": "641440"
  },
  {
    "text": "clusters uh in terms of which topology to choose um each one has its own trade-offs so flat networks or or um",
    "start": "641440",
    "end": "649160"
  },
  {
    "text": "either in the same VPC or v-net or uh or through some kind of peering um it",
    "start": "649160",
    "end": "655320"
  },
  {
    "text": "provides a A high bandwidth low latency connection and all the communication is private it's through your Cloud",
    "start": "655320",
    "end": "661240"
  },
  {
    "text": "providers um usually through the backbone infrastructure um the downside is because of the IP address management",
    "start": "661240",
    "end": "668279"
  },
  {
    "text": "requirements um you typically need a a large number of ips reserved if you have",
    "start": "668279",
    "end": "673839"
  },
  {
    "text": "a lot of clusters in your setup though IPv6 can help circumvent that um and",
    "start": "673839",
    "end": "679880"
  },
  {
    "text": "also if you have to deal with a lot of peering connections uh to flatten your networks then um that becomes harder to",
    "start": "679880",
    "end": "686079"
  },
  {
    "text": "manage in in large setups with many clusters uh on the other hand uh the multi network setup as I mentioned",
    "start": "686079",
    "end": "692440"
  },
  {
    "text": "earlier you get more flexibility um with your adverse ranges and uh you get",
    "start": "692440",
    "end": "697720"
  },
  {
    "text": "better Network isolation um between your clusters uh but you also need to account",
    "start": "697720",
    "end": "702800"
  },
  {
    "text": "for the additional hop from the Gateway as well as the fact that in most cases your traffic is going to be uh",
    "start": "702800",
    "end": "708600"
  },
  {
    "text": "traversing the public internet so to illustrate just the",
    "start": "708600",
    "end": "714120"
  },
  {
    "text": "limitation of peering and establishing flat networks across many clusters uh we can see that it kind of leads to the",
    "start": "714120",
    "end": "719240"
  },
  {
    "text": "this n squ problem where um every Network requires um peering to another Network that it wants to communicate to",
    "start": "719240",
    "end": "726040"
  },
  {
    "text": "and uh this is referred to as a full mesh Network architecture uh whereas if we just had multi Network and we had",
    "start": "726040",
    "end": "731880"
  },
  {
    "text": "East West gateways then uh we don't have to worry about all these peering connections um the one exception uh is",
    "start": "731880",
    "end": "739839"
  },
  {
    "text": "for Google um with gke you could have uh obviously a global VPC and uh then you",
    "start": "739839",
    "end": "745240"
  },
  {
    "text": "can have um clusters deployed across the world in different regions with in that",
    "start": "745240",
    "end": "751519"
  },
  {
    "text": "VPC yeah so another thing that that you have to consider when you're you know",
    "start": "753639",
    "end": "758720"
  },
  {
    "text": "building your network together is is load balancing so just like you have load balancer at the at the edge when",
    "start": "758720",
    "end": "763920"
  },
  {
    "text": "traffic is coming in north south now if you're routing traffic East West you need to consider load balancing for that",
    "start": "763920",
    "end": "770480"
  },
  {
    "text": "as well if you don't then you're basically saying that you just want a round robin between the local pods and",
    "start": "770480",
    "end": "776199"
  },
  {
    "text": "and the and the pods in remote clusters and and that might work if you know they're all on the same you know region",
    "start": "776199",
    "end": "781240"
  },
  {
    "text": "and latency is not a concern but most often you need additional like heuristics that you want to apply on top",
    "start": "781240",
    "end": "786920"
  },
  {
    "text": "and say that I want to stick to the local um instances of the service and only if that fails I want to I want to",
    "start": "786920",
    "end": "792760"
  },
  {
    "text": "go to the next closest zone or next closest region or you might have your own like custom uh policies you might",
    "start": "792760",
    "end": "798839"
  },
  {
    "text": "want to apply based on the workload where it should fail over and and talking about fail over you also need to",
    "start": "798839",
    "end": "804279"
  },
  {
    "text": "Define under what conditions do you want to fail over just because um you get a 500 from you know one of the pods",
    "start": "804279",
    "end": "810639"
  },
  {
    "text": "doesn't mean that you should immediately fail over to the US West Us West pod you",
    "start": "810639",
    "end": "817079"
  },
  {
    "text": "know instead of the local one right so you might need to Define okay I need if it fails 10 times in uh in a 5-second",
    "start": "817079",
    "end": "824079"
  },
  {
    "text": "period then I'm going to take that end point out of my load balancing pool and fail over and if you have these requirements then you're approaching a",
    "start": "824079",
    "end": "830800"
  },
  {
    "text": "territory where okay you need some some sort of proxy in between like a service mesh proxy in between that's able to",
    "start": "830800",
    "end": "837000"
  },
  {
    "text": "make these these Advanced um load balancing and failover decisions for",
    "start": "837000",
    "end": "842959"
  },
  {
    "text": "you cool so next topic um you know we cover networking and next we want to talk about service Discovery and",
    "start": "842959",
    "end": "849600"
  },
  {
    "text": "DNS um in in a local kubernetes cluster you get this fqdn right where it's based",
    "start": "849600",
    "end": "855759"
  },
  {
    "text": "on like an organizational like hierarchy where it's like you have the service name and then you have the name space",
    "start": "855759",
    "end": "861759"
  },
  {
    "text": "and then you have basically the the cluster domain but when you want to go multicluster the same topology doesn't",
    "start": "861759",
    "end": "869120"
  },
  {
    "text": "the same fqdn doesn't quite always make sense you might want to do um the",
    "start": "869120",
    "end": "874320"
  },
  {
    "text": "service here is orders right so you might want to do orders. uswest doy",
    "start": "874320",
    "end": "880399"
  },
  {
    "text": "company.com to refer to a set of clusters that are on uswest or you might want to be very explicit about the",
    "start": "880399",
    "end": "887000"
  },
  {
    "text": "cluster name and you might want to put the cluster name directly in the DNS or you might want to just say um service.",
    "start": "887000",
    "end": "894480"
  },
  {
    "text": "Global or service. cluster set and and have that figure out wherever in needs to go so that's another consideration",
    "start": "894480",
    "end": "901000"
  },
  {
    "text": "like what are your requirements for to do multicluster uh if you have just a couple of clusters in a single uh region",
    "start": "901000",
    "end": "907199"
  },
  {
    "text": "then it might be like you know the default might work for you or like a cluster set might work for you but if",
    "start": "907199",
    "end": "912759"
  },
  {
    "text": "you have like 50 clusters or 100 clusters around the world then your applications might need more custom DNS",
    "start": "912759",
    "end": "918480"
  },
  {
    "text": "logic and the reason why we bring up all these things to consider is because you know there's different uh service mesh",
    "start": "918480",
    "end": "924360"
  },
  {
    "text": "implementations and cni based implementations that that that give you different levels ofun functionality so",
    "start": "924360",
    "end": "929800"
  },
  {
    "text": "when you're evaluating them you need to consider these factors um a lot of solutions a lot of those service measur",
    "start": "929800",
    "end": "935480"
  },
  {
    "text": "cni based multicluster Solutions build on this concept of a namespace s so",
    "start": "935480",
    "end": "940680"
  },
  {
    "text": "these like set of assumptions that it can make to to make this DNS uh and service Discovery and service registry",
    "start": "940680",
    "end": "946800"
  },
  {
    "text": "population easier and names space sameness basically just means that if you have a multicluster environment and",
    "start": "946800",
    "end": "952319"
  },
  {
    "text": "you have two name spaces or you have a name space that's named the same across two clusters then just assume that",
    "start": "952319",
    "end": "959319"
  },
  {
    "text": "they're the same thing meaning they're under the same like administrative domain and then that gives you that",
    "start": "959319",
    "end": "964519"
  },
  {
    "text": "assumption gives you certain um certain additional capabilities that the the the tool can provide you for example if the",
    "start": "964519",
    "end": "972040"
  },
  {
    "text": "first one the frontend workload is in two two name spaces that are called the same thing so maybe you want to just",
    "start": "972040",
    "end": "977600"
  },
  {
    "text": "group them together automatically and it should be part of the same load balancing pool this the second example",
    "start": "977600",
    "end": "983480"
  },
  {
    "text": "uh two different Services catalog and and orders they're on the same namespace so maybe like that means that the export",
    "start": "983480",
    "end": "989480"
  },
  {
    "text": "and import like they should be able to talk to one another U by default so you can take the end points of one and",
    "start": "989480",
    "end": "994560"
  },
  {
    "text": "automatically populate them uh in in the other cluster and have that um both from",
    "start": "994560",
    "end": "1000319"
  },
  {
    "text": "like an authoriz authorization perspective but also a service Discovery perspective and then the last uh the",
    "start": "1000319",
    "end": "1006399"
  },
  {
    "text": "last Nam space you know it's the the database is under a namespace uh called",
    "start": "1006399",
    "end": "1011440"
  },
  {
    "text": "like DB East and DB West and that means treat them as they're not the same thing like this database needs Affinity to",
    "start": "1011440",
    "end": "1017399"
  },
  {
    "text": "that cluster do not group them and start load balancing between them so using namespace sameness a lot of uh a lot of",
    "start": "1017399",
    "end": "1024160"
  },
  {
    "text": "tools make some assumptions and give you um good uh load balancing",
    "start": "1024160",
    "end": "1030880"
  },
  {
    "text": "capabilities yeah we've we've just listed like some of the different implementations you can use for",
    "start": "1031520",
    "end": "1036678"
  },
  {
    "text": "multicluster um we recognize that there's more U you know we're going to use these as more of",
    "start": "1036679",
    "end": "1042360"
  },
  {
    "text": "like a generalization to show you some of the different patterns uh and how they go about implementing them um you",
    "start": "1042360",
    "end": "1047959"
  },
  {
    "text": "know for this you know for for the sake of this being a one-on-one class this is this is going to oversimplify some of",
    "start": "1047959",
    "end": "1053679"
  },
  {
    "text": "these Concepts but you know just like learn the patterns but not the very specific details that we might kind of",
    "start": "1053679",
    "end": "1059760"
  },
  {
    "text": "gloss over um so service meshes and cnis right when you when you group together",
    "start": "1059760",
    "end": "1065320"
  },
  {
    "text": "multiple clusters they need to know what are the Pod IPS that back a particular",
    "start": "1065320",
    "end": "1071640"
  },
  {
    "text": "service in all the different clusters uh a typical way they go about doing this like ISO multi- primary multi uh network",
    "start": "1071640",
    "end": "1079480"
  },
  {
    "text": "is a common ISO multicluster pattern the way it goes about doing this is that in every cluster that control plane that",
    "start": "1079480",
    "end": "1085200"
  },
  {
    "text": "ISO control plane or that that celium control plane will reach out to the kubernetes API servers and in the other",
    "start": "1085200",
    "end": "1093000"
  },
  {
    "text": "clusters and it will get that service Discovery information and as well as you know that service Discovery information",
    "start": "1093000",
    "end": "1099600"
  },
  {
    "text": "is is not just the service name but all the pods that back it the health of it Etc so as you can imagine you know this",
    "start": "1099600",
    "end": "1106760"
  },
  {
    "text": "works for like a few clusters but you know as your clusters start growing you know having every control plane talk to",
    "start": "1106760",
    "end": "1112880"
  },
  {
    "text": "the kubernetes API server of all the other control planes to get this information you know quickly goes grows",
    "start": "1112880",
    "end": "1118039"
  },
  {
    "text": "out of hand so there's definitely solutions to that problem um you know like an external control plane that is",
    "start": "1118039",
    "end": "1123360"
  },
  {
    "text": "doing these things and like the product that I work on glue mesh is one such example uh that orchestrates things like",
    "start": "1123360",
    "end": "1130520"
  },
  {
    "text": "that um even for like an East West Gateway case where they're not on a flat Network this is a multi Network case",
    "start": "1130520",
    "end": "1136840"
  },
  {
    "text": "where there's an East West Gateway that backs uh every single or that fronts every single cluster the control plane would",
    "start": "1136840",
    "end": "1143000"
  },
  {
    "text": "still need to reach out to the other clusters you know get that East West Gateway IP address get the services that",
    "start": "1143000",
    "end": "1148840"
  },
  {
    "text": "back that and then populate it in the local service",
    "start": "1148840",
    "end": "1153320"
  },
  {
    "text": "registry um as far as DNS you know we talked about uh building custom DNS",
    "start": "1153919",
    "end": "1160880"
  },
  {
    "text": "names you know depending on you know what your what Your organizations need to be able to route to the correct",
    "start": "1160880",
    "end": "1167120"
  },
  {
    "text": "destinations uh service measures like ISO has um has what's called the smart DNS proxy inside",
    "start": "1167120",
    "end": "1173919"
  },
  {
    "text": "of it so it's a DNS proxy meaning that you can create a custom DNS entry and",
    "start": "1173919",
    "end": "1179799"
  },
  {
    "text": "that DNS entry you can use it to back the remote cluster East West Gateway IP address and when your application calls",
    "start": "1179799",
    "end": "1187240"
  },
  {
    "text": "that that host name you're not leveraging kubernetes DNS at all the envoy side car will intercept that",
    "start": "1187240",
    "end": "1193600"
  },
  {
    "text": "connection and and provide a DNS proxy so it will resolve that that that DNS name to the east west Gateway IP address",
    "start": "1193600",
    "end": "1200880"
  },
  {
    "text": "and traffic will leave the Pod directly to that East West Gateway IP without the the application container knowing that",
    "start": "1200880",
    "end": "1206679"
  },
  {
    "text": "anything um anything like that is is is happening um even if even if you're",
    "start": "1206679",
    "end": "1212280"
  },
  {
    "text": "using the new ISO ambient mode where it doesn't have side cars and it's using like a node level Z tunnel to accomplish",
    "start": "1212280",
    "end": "1218679"
  },
  {
    "text": "service mesh there is a DNS proxy inside that as well that that you can use with",
    "start": "1218679",
    "end": "1223799"
  },
  {
    "text": "ISO to get the same DNS proxy functionality if you want that advanced DNS capability",
    "start": "1223799",
    "end": "1229280"
  },
  {
    "text": "ities in complete contrast of like you know one end of the solution would be ISO where you have full set of",
    "start": "1229280",
    "end": "1235520"
  },
  {
    "text": "capabilities if you were to go the total other end it would be a solution like Scupper where it basically just sets up",
    "start": "1235520",
    "end": "1243320"
  },
  {
    "text": "a router between two Nam spaces so you know you have a names space in cluster one and like a namespace in cluster two",
    "start": "1243320",
    "end": "1250240"
  },
  {
    "text": "Scupper is in very easy way for you to set up a router on here and set up a router on there and those two routers",
    "start": "1250240",
    "end": "1255600"
  },
  {
    "text": "just talk to one another and they populate service Discovery information between each other so it's a very good",
    "start": "1255600",
    "end": "1261200"
  },
  {
    "text": "point-to-point solution if you're if you have like a very specific use case a very specific application that just",
    "start": "1261200",
    "end": "1266559"
  },
  {
    "text": "wants multicluster capabilities and you can just do everything in a particular namespace and not involve your platform",
    "start": "1266559",
    "end": "1272320"
  },
  {
    "text": "engineering teams for a full cluster wide solution and the way that works is it it it leverages the the The",
    "start": "1272320",
    "end": "1278679"
  },
  {
    "text": "Primitives of kubernetes uh whenever in this example if you expose workload B if",
    "start": "1278679",
    "end": "1284640"
  },
  {
    "text": "you expose service B globally then Scupper will create a service on the",
    "start": "1284640",
    "end": "1290080"
  },
  {
    "text": "other cluster on on the cluster East and then it will just back the router for",
    "start": "1290080",
    "end": "1296360"
  },
  {
    "text": "that service so now whenever somebody calls that service the traffic will actually go to the router the Scupper",
    "start": "1296360",
    "end": "1301960"
  },
  {
    "text": "router on that Us East cluster and it will do mtls connection to the Scupper router on the destination cluster and",
    "start": "1301960",
    "end": "1308400"
  },
  {
    "text": "then it will route back to the to the the originating",
    "start": "1308400",
    "end": "1313200"
  },
  {
    "text": "destination so uh the implementations that um Ron was just discussing",
    "start": "1313640",
    "end": "1319200"
  },
  {
    "text": "um those typically have their own apis to handle the service Discovery and cross Custer load balancing but there is",
    "start": "1319200",
    "end": "1325840"
  },
  {
    "text": "um a kubernetes native API uh called the multic cluster Services API by Sig multic cluster uh that's been gaining um",
    "start": "1325840",
    "end": "1333120"
  },
  {
    "text": "a lot of traction recently so uh The Core Concepts of MCS include a cluster",
    "start": "1333120",
    "end": "1338720"
  },
  {
    "text": "set so a cluster set is a set of clusters that share a high degree of trust among one another as well as a set",
    "start": "1338720",
    "end": "1346360"
  },
  {
    "text": "of services for uh cross cluster communication um you also have the service export which defines a service",
    "start": "1346360",
    "end": "1353600"
  },
  {
    "text": "that's um that's meant to be exported to uh all of the Clusters in your cluster set and then that leads to the creation",
    "start": "1353600",
    "end": "1360279"
  },
  {
    "text": "of a service Import in all of the Clusters in the cluster set um you also",
    "start": "1360279",
    "end": "1365720"
  },
  {
    "text": "need some kind of controller uh the MCS controller that uh adheres to the spec",
    "start": "1365720",
    "end": "1371320"
  },
  {
    "text": "uh defined by the Sig multicluster group um definitely uh on your own time check",
    "start": "1371320",
    "end": "1376840"
  },
  {
    "text": "out um uh the Upstream specification to learn more about that um but that's",
    "start": "1376840",
    "end": "1382679"
  },
  {
    "text": "watching for the service service exports and that's creating the service Imports and and the endpoints on on um all of",
    "start": "1382679",
    "end": "1389760"
  },
  {
    "text": "the uh clusters across the cluster set and you also need some kind of DNS plugin uh for instance the core DNS",
    "start": "1389760",
    "end": "1396440"
  },
  {
    "text": "multicluster plugin um that can also create the DNS records for the multicluster",
    "start": "1396440",
    "end": "1403039"
  },
  {
    "text": "services so this is just uh one example of what an MCS implementation could look",
    "start": "1403039",
    "end": "1408679"
  },
  {
    "text": "like um so uh we have a service export being defined for the order Service uh",
    "start": "1408679",
    "end": "1414400"
  },
  {
    "text": "the MCS controller sees that and it create service Imports um on all of the Clusters in the cluster set and the core",
    "start": "1414400",
    "end": "1421240"
  },
  {
    "text": "DNS multicluster plug-in sees that service um import um see the",
    "start": "1421240",
    "end": "1427279"
  },
  {
    "text": "corresponding uh cluster set IP and uh that creates a new um DNS record and if",
    "start": "1427279",
    "end": "1433720"
  },
  {
    "text": "you notice uh this is in a different uh domain the cluster set set. loal domain",
    "start": "1433720",
    "end": "1440520"
  },
  {
    "text": "um so now if Services want to consume uh that multicluster service uh then they",
    "start": "1440520",
    "end": "1446559"
  },
  {
    "text": "invoke that fqdn within the uh within the cluster set. loal domain um so this",
    "start": "1446559",
    "end": "1453559"
  },
  {
    "text": "is just one example uh definitely uh uh see the Upstream specification to learn",
    "start": "1453559",
    "end": "1458919"
  },
  {
    "text": "more about the the MCS API and possible",
    "start": "1458919",
    "end": "1464399"
  },
  {
    "text": "implementations uh so yeah there are a few open source and cloud provider options that uh implemented um just uh",
    "start": "1464960",
    "end": "1472399"
  },
  {
    "text": "caveat that some of the cloud provider options such as G and AKs uh they have their own implementations of MCS on top",
    "start": "1472399",
    "end": "1479320"
  },
  {
    "text": "of the Upstream one but um overall the user experience is essentially the",
    "start": "1479320",
    "end": "1487200"
  },
  {
    "text": "same okay so we discussed connectivity and we discussed service Discovery uh now we actually need to secure our um",
    "start": "1487600",
    "end": "1494399"
  },
  {
    "text": "multicluster communication so the first aspect of security we want to consider is uh the",
    "start": "1494399",
    "end": "1502000"
  },
  {
    "text": "security related to the overall Network architecture and the security offerings um given by the cloud provider so we",
    "start": "1502000",
    "end": "1508919"
  },
  {
    "text": "discuss some of this when we're discussing flat versus multi Network topologies so with the flat Network um",
    "start": "1508919",
    "end": "1514440"
  },
  {
    "text": "you have the benefit of all of your communication being private um and if you don't want to expose all of your um",
    "start": "1514440",
    "end": "1521600"
  },
  {
    "text": "uh endpoints directly through some kind of peering you could use a private link service or private endpoint service um",
    "start": "1521600",
    "end": "1529000"
  },
  {
    "text": "but if you want stronger Network isolation um say for a PCI environment with uh tighter security controls then",
    "start": "1529000",
    "end": "1535760"
  },
  {
    "text": "you can keep that Network isolated and um apply uh tighter security",
    "start": "1535760",
    "end": "1540880"
  },
  {
    "text": "restrictions to to that Network um if you're using some kind of VPN Gateway or",
    "start": "1540880",
    "end": "1546039"
  },
  {
    "text": "Transit Gateway uh most of those would provide encryption a cross cluster through um through a secure tunnel so uh",
    "start": "1546039",
    "end": "1554520"
  },
  {
    "text": "another layer of security there uh one thing to keep in mind in terms of",
    "start": "1554520",
    "end": "1560279"
  },
  {
    "text": "firewalls and your network security rules is um for instance we talked about for the multi Network topology you might",
    "start": "1560279",
    "end": "1567039"
  },
  {
    "text": "need an East West Gateway with a public IP address if you're doing that um you definitely want to lock down access to",
    "start": "1567039",
    "end": "1573559"
  },
  {
    "text": "that East West Gateway so that it's only for cross-cluster traffic and um as RAM",
    "start": "1573559",
    "end": "1578640"
  },
  {
    "text": "was mentioning for the endpoint and service aggregation for multicluster services um or multicluster service mesh",
    "start": "1578640",
    "end": "1585960"
  },
  {
    "text": "the controller needs to read the cube API server of all of the Clusters in",
    "start": "1585960",
    "end": "1591240"
  },
  {
    "text": "your setup um so you uh want to allow for that API server access across all of",
    "start": "1591240",
    "end": "1597919"
  },
  {
    "text": "your clusters in uh in your Fleet or your cluster set but um you still want",
    "start": "1597919",
    "end": "1603440"
  },
  {
    "text": "to make sure that access to the API server is",
    "start": "1603440",
    "end": "1607520"
  },
  {
    "text": "restricted um talking about like pot toot communication uh at a minimum when",
    "start": "1608520",
    "end": "1613559"
  },
  {
    "text": "you're doing multicluster you need to have some sort of like layer three and layer four um",
    "start": "1613559",
    "end": "1619159"
  },
  {
    "text": "like Network policies in place so that you can restrict who's allowed to talk to who right like I think a network",
    "start": "1619159",
    "end": "1625080"
  },
  {
    "text": "policy is like the like the first like layer you know when you're building a multi-defense uh architecture for for",
    "start": "1625080",
    "end": "1631960"
  },
  {
    "text": "your security model and um using like a cium network policy allows you to to at least establish that as a as your base",
    "start": "1631960",
    "end": "1638960"
  },
  {
    "text": "primitive when you're building your zero trust but as you continue building more uh more levels of security you know then",
    "start": "1638960",
    "end": "1645200"
  },
  {
    "text": "if you need mtls strong identity for all of your workloads regardless of where",
    "start": "1645200",
    "end": "1650360"
  },
  {
    "text": "they're running then you need a traditional service mesh right um the the way a traditional service mesh Works",
    "start": "1650360",
    "end": "1656240"
  },
  {
    "text": "in in terms of providing you that that strong identity and encryption is whenever there's a new workload that",
    "start": "1656240",
    "end": "1661840"
  },
  {
    "text": "comes up in in any of your in any of your environments in any of your clusters there's a CA there's like a",
    "start": "1661840",
    "end": "1667360"
  },
  {
    "text": "control plane um ISO acts as a control plane by default and it acts as the ca",
    "start": "1667360",
    "end": "1672600"
  },
  {
    "text": "by default and provides these strong identities to every single workload so that is a is a is a spiffy format ID",
    "start": "1672600",
    "end": "1680360"
  },
  {
    "text": "it's every workload has like an svid and it's encapsulated in like an x509 search so whenever a workload comes up it gets",
    "start": "1680360",
    "end": "1687039"
  },
  {
    "text": "a strong certificate um in a multicluster environment you have to do the same thing right like uh there needs",
    "start": "1687039",
    "end": "1693960"
  },
  {
    "text": "to be a CA that is providing these strong identities across all of your workloads and these workloads typically",
    "start": "1693960",
    "end": "1700200"
  },
  {
    "text": "there's like this concept of a trust domain so which basically is an organizational grouping of all",
    "start": "1700200",
    "end": "1706000"
  },
  {
    "text": "identities inside that inside that group can can trust one another so when they're doing when they're talking with",
    "start": "1706000",
    "end": "1712120"
  },
  {
    "text": "each other as long as they're from the same trust domain then you can make assumptions that yep mtls connections",
    "start": "1712120",
    "end": "1717960"
  },
  {
    "text": "between them can can happen if you're doing multicluster now you need to make sure that you're setting your trust",
    "start": "1717960",
    "end": "1723360"
  },
  {
    "text": "domain appropriately and um and the most simplest one is just to create one big trust domain across uh multiple clusters",
    "start": "1723360",
    "end": "1731399"
  },
  {
    "text": "um you can do uh multiple trust domains W with sto but you know then you're",
    "start": "1731399",
    "end": "1737120"
  },
  {
    "text": "having to do the the manual exchanges of trust bundles uh using using the root CA where you're",
    "start": "1737120",
    "end": "1743640"
  },
  {
    "text": "unifying the trust but you know organizations that have large amount of kubernetes clusters",
    "start": "1743640",
    "end": "1750120"
  },
  {
    "text": "probably also have uh like an Enterprise workload identity solution and like you know that's something like spiffy where",
    "start": "1750120",
    "end": "1756760"
  },
  {
    "text": "it implements the uh sorry that's Spire which implements the spiffy um spec but",
    "start": "1756760",
    "end": "1762440"
  },
  {
    "text": "it gives you a way to provide strong identities regardless of what that workload type is it doesn't have to be",
    "start": "1762440",
    "end": "1768240"
  },
  {
    "text": "kubernetes workloads it could be like other um you know other workloads other endpoints Etc and and if you're building",
    "start": "1768240",
    "end": "1775200"
  },
  {
    "text": "this multicluster architecture you probably want to integrate your workloads into that same organizational",
    "start": "1775200",
    "end": "1780440"
  },
  {
    "text": "model uh service mesh Solutions like ISO allow you to just plug in directly with",
    "start": "1780440",
    "end": "1786080"
  },
  {
    "text": "Spire where you can stand up a Spire server directly in every one of your clusters and and delegate the the",
    "start": "1786080",
    "end": "1792880"
  },
  {
    "text": "attestation the workload attestation responsibilities to Spire instead of iso and and then these Spire servers can",
    "start": "1792880",
    "end": "1799679"
  },
  {
    "text": "take care of exchanging like trust bundles which is like very native to to",
    "start": "1799679",
    "end": "1805760"
  },
  {
    "text": "Spire um again like in complete contrast like it would you know for a Sol solution like Scupper to do multicluster",
    "start": "1806559",
    "end": "1812760"
  },
  {
    "text": "routing you're not getting podt pod mtls like you're not getting traffic directly",
    "start": "1812760",
    "end": "1818519"
  },
  {
    "text": "from workload a going to workload B getting mtls instead traffic is going to Scupper Scupper will do mtls between",
    "start": "1818519",
    "end": "1824840"
  },
  {
    "text": "each other um but but it's not by default you're not getting full mtls ENT end um I I'll note that you can put",
    "start": "1824840",
    "end": "1832080"
  },
  {
    "text": "Scupper on top of something like istos where you have like mtls in in like you know kind of both ends and between but",
    "start": "1832080",
    "end": "1838880"
  },
  {
    "text": "it's again it won't be like an empty empty end",
    "start": "1838880",
    "end": "1843039"
  },
  {
    "text": "connection um as we're you know wrapping up you know I'll I'll talk about some of like the the the caveats of best",
    "start": "1845000",
    "end": "1851679"
  },
  {
    "text": "practices and first uh around security um when you're evaluating these various multicluster Solutions um you know we",
    "start": "1851679",
    "end": "1858600"
  },
  {
    "text": "talked about the pattern where every single control plane needs to talk to the kubernetes API of of of other",
    "start": "1858600",
    "end": "1864440"
  },
  {
    "text": "clusters you know that means that there's some sort of credentials that you're giving every single cluster you know like be careful with that you know",
    "start": "1864440",
    "end": "1870720"
  },
  {
    "text": "that might be an like a security noo from the from from day one um you know to be able to provide Cube API access to",
    "start": "1870720",
    "end": "1878200"
  },
  {
    "text": "other clusters even if it's just read only you know that's something that a security team might might not even allow",
    "start": "1878200",
    "end": "1883440"
  },
  {
    "text": "from the beginning um Selective Service exposure don't Federate all services to",
    "start": "1883440",
    "end": "1889440"
  },
  {
    "text": "all clusters like you know even if that's the tooling might allow you to do that by default you know that's that's",
    "start": "1889440",
    "end": "1896240"
  },
  {
    "text": "pretty dangerous to do and it can have unintended consequences be very selective about what services uh you",
    "start": "1896240",
    "end": "1901960"
  },
  {
    "text": "want to expose and consume in other clusters uh both from a scale and a security perspective um do the layered",
    "start": "1901960",
    "end": "1908399"
  },
  {
    "text": "security model uh use the cni network policies to enforce like layer three layer four what IPS are allowed to talk",
    "start": "1908399",
    "end": "1915639"
  },
  {
    "text": "to which East West Gateway like what P range is allow to what talk to what East West Gateway and then um and then also",
    "start": "1915639",
    "end": "1922440"
  },
  {
    "text": "leverage a service mes on top so you're getting a strong identity in mtls where you can lay down ISO authorization",
    "start": "1922440",
    "end": "1928919"
  },
  {
    "text": "policies where you can finally Define who's allowed to talk to what um and it's and and take that zero trust",
    "start": "1928919",
    "end": "1935120"
  },
  {
    "text": "posture and apply those policies and then uh last but not least uh if you're building a multicluster solution you",
    "start": "1935120",
    "end": "1940960"
  },
  {
    "text": "probably want a unified way to control um your access policies like some",
    "start": "1940960",
    "end": "1946679"
  },
  {
    "text": "central place where it's the source of Truth where you define who's allowed to talk to what and under what conditions",
    "start": "1946679",
    "end": "1953159"
  },
  {
    "text": "and have some tool or some tooling convert that to lower level policies",
    "start": "1953159",
    "end": "1958519"
  },
  {
    "text": "that get distributed to each one of the Clusters don't hand that responsibility off to your development teams to to to",
    "start": "1958519",
    "end": "1965679"
  },
  {
    "text": "enforce if you're doing a multicluster solution you need to take the platform engineering",
    "start": "1965679",
    "end": "1971559"
  },
  {
    "text": "approach so um we've covered a lot in this presentation um north south east west networking and um Security Service",
    "start": "1972200",
    "end": "1980399"
  },
  {
    "text": "Discovery various tools um and apis that you could use to achieve that so we",
    "start": "1980399",
    "end": "1985559"
  },
  {
    "text": "wanted to end by just giving some recommendations and takeaways for uh navigating this landscape down the road",
    "start": "1985559",
    "end": "1991519"
  },
  {
    "text": "and um how to go about incorporating these different tools into your platform and how to decide which of these tools",
    "start": "1991519",
    "end": "1996840"
  },
  {
    "text": "are more relevant for you so uh here's a set of criteria you",
    "start": "1996840",
    "end": "2002600"
  },
  {
    "text": "probably want to consider but uh this is not an um allinclusive list there are",
    "start": "2002600",
    "end": "2007840"
  },
  {
    "text": "probably several others um but uh one thing to think about for instance is is scale um so if you have a smaller setup",
    "start": "2007840",
    "end": "2015960"
  },
  {
    "text": "uh you might just prefer the Simplicity of peering and not worrying about um East West gateways and just need to",
    "start": "2015960",
    "end": "2021799"
  },
  {
    "text": "worry about the security aspect um but for larger setups um again due to the IP",
    "start": "2021799",
    "end": "2026919"
  },
  {
    "text": "exhaustion issue and some of the scalability um issues that mentioned",
    "start": "2026919",
    "end": "2032200"
  },
  {
    "text": "earlier um you probably want a multi network setup using East West gateways to address that",
    "start": "2032200",
    "end": "2038600"
  },
  {
    "text": "um it's also important to assess uh what core features and functionalities do you",
    "start": "2038600",
    "end": "2043679"
  },
  {
    "text": "need so um for instance if you have a replicated architecture where your services are replicated identically",
    "start": "2043679",
    "end": "2051320"
  },
  {
    "text": "across all the Clusters in your cluster set um maybe you just need to solve the north south problem um you don't need uh",
    "start": "2051320",
    "end": "2059118"
  },
  {
    "text": "that much if any East West or you only need a few Services uh doing East West",
    "start": "2059119",
    "end": "2064520"
  },
  {
    "text": "Communication in which case something like like Scupper could uh suffice but",
    "start": "2064520",
    "end": "2071040"
  },
  {
    "text": "uh the other architectural pattern would be split by service architecture where you have different Services split across",
    "start": "2071040",
    "end": "2077599"
  },
  {
    "text": "um all of the Clusters uh in that case um that probably warrants more advanced",
    "start": "2077599",
    "end": "2082800"
  },
  {
    "text": "uh East West uh failover and load balancing behavior in which case you probably want to leverage something like",
    "start": "2082800",
    "end": "2088679"
  },
  {
    "text": "a traditional application layer 7 service mesh um one of the other uh",
    "start": "2088679",
    "end": "2094679"
  },
  {
    "text": "great benefits of the service mesh is that they solve all three of those core requirements uh connectivity um service",
    "start": "2094679",
    "end": "2101280"
  },
  {
    "text": "Discovery and security all in one um uh and they provide various other benefits",
    "start": "2101280",
    "end": "2108000"
  },
  {
    "text": "like um observability and and advanced layer 7 load balancing so again great",
    "start": "2108000",
    "end": "2114440"
  },
  {
    "text": "way to tackle all those problems in one and provide a lot of features out of the box um on the other hand if you want to",
    "start": "2114440",
    "end": "2121400"
  },
  {
    "text": "work with something that feels more like working with kubernetes Primitives like Services then a controller that imps the",
    "start": "2121400",
    "end": "2128119"
  },
  {
    "text": "MCS API might be a better fit for you so um here's a high level comparison",
    "start": "2128119",
    "end": "2136119"
  },
  {
    "text": "of some of the different multicluster networking projects that we discussed um don't have time to go into too much",
    "start": "2136119",
    "end": "2142480"
  },
  {
    "text": "depth here but uh feel free to take a picture um but as you can see these various Solutions um have their own",
    "start": "2142480",
    "end": "2150000"
  },
  {
    "text": "trade-offs uh in terms of security and overall complexity and overall feature set and obviously uh different um people",
    "start": "2150000",
    "end": "2157960"
  },
  {
    "text": "might have different interpretations of this um so uh for instance Scupper is",
    "start": "2157960",
    "end": "2163800"
  },
  {
    "text": "rather trivial to set up um but it doesn't offer many of the fine grained",
    "start": "2163800",
    "end": "2169760"
  },
  {
    "text": "uh routing or as ROM explained uh some of the more advanced security features",
    "start": "2169760",
    "end": "2175200"
  },
  {
    "text": "um on the other hand ISO multicluster at least for the sidecar based model is um",
    "start": "2175200",
    "end": "2182440"
  },
  {
    "text": "non-trivial to set up to say the least but part of that is because it provides so many different deployment models so",
    "start": "2182440",
    "end": "2188520"
  },
  {
    "text": "many different Advanced um security and load balancing behaviors um so it's a",
    "start": "2188520",
    "end": "2193560"
  },
  {
    "text": "great option for uh complex setups that have uh more complex needs um and it's",
    "start": "2193560",
    "end": "2199640"
  },
  {
    "text": "not always either or uh in some cases uh you might use something like EO or linkerd along with Submariner or",
    "start": "2199640",
    "end": "2207280"
  },
  {
    "text": "Submariner however you pronounce it and that can just flatten uh the pot networks across your clusters but you",
    "start": "2207280",
    "end": "2213040"
  },
  {
    "text": "still get the benefits of a service mesh",
    "start": "2213040",
    "end": "2217400"
  },
  {
    "text": "um some final thoughts and takeaways um you know I would like I said before I would say like Empower uh a platform",
    "start": "2218839",
    "end": "2226079"
  },
  {
    "text": "engineering team you know when you're evaluating these different solutions start with figuring out what your core",
    "start": "2226079",
    "end": "2232680"
  },
  {
    "text": "business case is and what you're trying to solve across the entire organization across all of your clusters across all",
    "start": "2232680",
    "end": "2238440"
  },
  {
    "text": "your development teams and and and then leverage a platform engineering model where there's like a c like a like a",
    "start": "2238440",
    "end": "2244920"
  },
  {
    "text": "central team that is in charge of deploying whatever solution is necessary",
    "start": "2244920",
    "end": "2250040"
  },
  {
    "text": "um like we believe in an like incremental adoption of a multicluster strategy but uh but that doesn't mean",
    "start": "2250040",
    "end": "2258440"
  },
  {
    "text": "allow your developers to build bespoke solutions that you have to then rip out when like when you run into a security",
    "start": "2258440",
    "end": "2264800"
  },
  {
    "text": "issue or when you run into like um like Advanced load balancing issue that you know that wasn't thought about um we I",
    "start": "2264800",
    "end": "2272000"
  },
  {
    "text": "have experience working with very large customers that have implemented this as massive scale they they have Central",
    "start": "2272000",
    "end": "2278040"
  },
  {
    "text": "platform engineering team it's a small team that have built abstractions on top of a service mesh so that their",
    "start": "2278040",
    "end": "2285079"
  },
  {
    "text": "developers their application teams don't know that a service mesh is running or that they don't know that there's even a",
    "start": "2285079",
    "end": "2290359"
  },
  {
    "text": "multicluster um environment they're just you know they just go to some git repo they bootstrap some config or and they",
    "start": "2290359",
    "end": "2296960"
  },
  {
    "text": "just essentially checkbox yep I want failover I want this functionality and then the service mesh config or the U",
    "start": "2296960",
    "end": "2304240"
  },
  {
    "text": "the multicluster config whatever it is is basically just configur that gets packaged up into their Helm chart that",
    "start": "2304240",
    "end": "2310000"
  },
  {
    "text": "they don't even know that you know it's doing you know whatever it's doing so like service meses yes it's hard when",
    "start": "2310000",
    "end": "2316560"
  },
  {
    "text": "when you're trying to do it yourself for the entire organization but you know when when you do it as a as a standard",
    "start": "2316560",
    "end": "2321599"
  },
  {
    "text": "and an abstraction layer and integrate it into your um into your IDP it does not it does not have to be hard but then",
    "start": "2321599",
    "end": "2327560"
  },
  {
    "text": "again like you know I am pretty biased I've been working on stdo for the last five six years",
    "start": "2327560",
    "end": "2333520"
  },
  {
    "text": "yeah and uh just some additional resources if you want to download the slide it's available on the the cucon",
    "start": "2333520",
    "end": "2339359"
  },
  {
    "text": "website um you feel free to take a look at this for further reading but um yeah",
    "start": "2339359",
    "end": "2345119"
  },
  {
    "text": "that was it for our presentation thank you so much everyone for attending",
    "start": "2345119",
    "end": "2350800"
  }
]