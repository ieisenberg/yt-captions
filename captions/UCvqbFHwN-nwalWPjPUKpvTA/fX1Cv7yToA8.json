[
  {
    "text": "hi everyone my name is Francis LEL and",
    "start": "80",
    "end": "2440"
  },
  {
    "text": "today I will present you my work about",
    "start": "2440",
    "end": "4680"
  },
  {
    "text": "adding C config support to",
    "start": "4680",
    "end": "8599"
  },
  {
    "text": "ebpf first of all what is ebpf according",
    "start": "8599",
    "end": "12240"
  },
  {
    "text": "to brandan Greg a c developer ebpf does",
    "start": "12240",
    "end": "16440"
  },
  {
    "text": "to Linux what JavaScript does to HTML",
    "start": "16440",
    "end": "20199"
  },
  {
    "text": "and with BPF you can now write manyi",
    "start": "20199",
    "end": "23519"
  },
  {
    "text": "programs that run on events like disio",
    "start": "23519",
    "end": "26880"
  },
  {
    "text": "which are run in a safe virtual machine",
    "start": "26880",
    "end": "29599"
  },
  {
    "text": "in the",
    "start": "29599",
    "end": "30759"
  },
  {
    "text": "canel libpf is a C help library to",
    "start": "30759",
    "end": "35440"
  },
  {
    "text": "interact with ebpf programs in basically",
    "start": "35440",
    "end": "39079"
  },
  {
    "text": "handes the loading some verifying and",
    "start": "39079",
    "end": "42680"
  },
  {
    "text": "attaching the ebpf programs to canel",
    "start": "42680",
    "end": "45680"
  },
  {
    "text": "hooks on another hand ebpf is the go",
    "start": "45680",
    "end": "50160"
  },
  {
    "text": "on counterpart to Le BPF in ebpf program",
    "start": "50160",
    "end": "54600"
  },
  {
    "text": "you may want to refer to some Kel config",
    "start": "54600",
    "end": "57800"
  },
  {
    "text": "as depicted in the following EB BF",
    "start": "57800",
    "end": "60320"
  },
  {
    "text": "program which can be found in the canel",
    "start": "60320",
    "end": "63400"
  },
  {
    "text": "sources while this is possible in Le BPF",
    "start": "63400",
    "end": "67360"
  },
  {
    "text": "it was sadly not the case with cmpf",
    "start": "67360",
    "end": "71000"
  },
  {
    "text": "before this contribution you had to use",
    "start": "71000",
    "end": "73400"
  },
  {
    "text": "a workaround like adding a Boolean ebpf",
    "start": "73400",
    "end": "76640"
  },
  {
    "text": "parameter to your program or using IF",
    "start": "76640",
    "end": "79320"
  },
  {
    "text": "def guard and having then two different",
    "start": "79320",
    "end": "82079"
  },
  {
    "text": "ebpf bite codes I will now detail how C",
    "start": "82079",
    "end": "85759"
  },
  {
    "text": "config support was AED to",
    "start": "85759",
    "end": "88840"
  },
  {
    "text": "ebpf first of all after compiling the",
    "start": "88840",
    "end": "91759"
  },
  {
    "text": "ebpf program you get an ebpf bite code",
    "start": "91759",
    "end": "95520"
  },
  {
    "text": "this bite code contains several heal",
    "start": "95520",
    "end": "98000"
  },
  {
    "text": "sections like text or",
    "start": "98000",
    "end": "101159"
  },
  {
    "text": "data if your programs refers Kel config",
    "start": "101159",
    "end": "104799"
  },
  {
    "text": "it will contain the K config virtual",
    "start": "104799",
    "end": "108240"
  },
  {
    "text": "section when this section is present",
    "start": "108240",
    "end": "112520"
  },
  {
    "text": "ebpf creates a corresponding ebpf map",
    "start": "112520",
    "end": "117360"
  },
  {
    "text": "the first step was to set the corre size",
    "start": "117360",
    "end": "120880"
  },
  {
    "text": "for the map and Computing the good",
    "start": "120880",
    "end": "123880"
  },
  {
    "text": "values of",
    "start": "123880",
    "end": "125520"
  },
  {
    "text": "set then cumi BPF computes the value of",
    "start": "125520",
    "end": "130280"
  },
  {
    "text": "specific K config variables like Linux",
    "start": "130280",
    "end": "134239"
  },
  {
    "text": "canel version or Linux as cull wrapper",
    "start": "134239",
    "end": "139440"
  },
  {
    "text": "these values will be written as the map",
    "start": "139440",
    "end": "142519"
  },
  {
    "text": "content for for example Linux scan",
    "start": "142519",
    "end": "146280"
  },
  {
    "text": "version will be replaced by the video",
    "start": "146280",
    "end": "149840"
  },
  {
    "text": "ESO value of Linux version code for",
    "start": "149840",
    "end": "154200"
  },
  {
    "text": "conventional config we will need to",
    "start": "154200",
    "end": "156879"
  },
  {
    "text": "First par the Kel config the parser was",
    "start": "156879",
    "end": "160800"
  },
  {
    "text": "based on initial work from Teo beers the",
    "start": "160800",
    "end": "164000"
  },
  {
    "text": "parser first searches for Canal config",
    "start": "164000",
    "end": "166480"
  },
  {
    "text": "located under /boot or in slprc",
    "start": "166480",
    "end": "170120"
  },
  {
    "text": "config.js once passed we will set the",
    "start": "170120",
    "end": "173280"
  },
  {
    "text": "corresponding values in the map content",
    "start": "173280",
    "end": "176200"
  },
  {
    "text": "the final step consist in replace the C",
    "start": "176200",
    "end": "178720"
  },
  {
    "text": "config variables read by loads 2K config",
    "start": "178720",
    "end": "182560"
  },
  {
    "text": "maps at the corresponding offset on this",
    "start": "182560",
    "end": "185760"
  },
  {
    "text": "slide you can see the ebpf source code",
    "start": "185760",
    "end": "188599"
  },
  {
    "text": "of the profile block iio Gadget of",
    "start": "188599",
    "end": "191159"
  },
  {
    "text": "Inspector Gadget before this",
    "start": "191159",
    "end": "193760"
  },
  {
    "text": "contribution I had to use if Def and",
    "start": "193760",
    "end": "196480"
  },
  {
    "text": "then having two different ebpf bite",
    "start": "196480",
    "end": "199239"
  },
  {
    "text": "codes to handle different can version",
    "start": "199239",
    "end": "202360"
  },
  {
    "text": "with this contribution I replace the if",
    "start": "202360",
    "end": "205040"
  },
  {
    "text": "def by the simple if which is executed",
    "start": "205040",
    "end": "208000"
  },
  {
    "text": "at run time the code is then easier and",
    "start": "208000",
    "end": "212439"
  },
  {
    "text": "I only have one ebpf bite code also the",
    "start": "212439",
    "end": "216480"
  },
  {
    "text": "if could be optimized by the Kel",
    "start": "216480",
    "end": "219640"
  },
  {
    "text": "verifier as a conclusion C config",
    "start": "219640",
    "end": "222480"
  },
  {
    "text": "support was aided to cbpf in version",
    "start": "222480",
    "end": "228319"
  },
  {
    "text": "0.11.0 you can now use it to modify ebpf",
    "start": "228640",
    "end": "232400"
  },
  {
    "text": "programs Behavior at runtime rather than",
    "start": "232400",
    "end": "235480"
  },
  {
    "text": "using a workaround I would like to thank",
    "start": "235480",
    "end": "239720"
  },
  {
    "text": "Lawrence barer and Timo Beckers for",
    "start": "239720",
    "end": "242239"
  },
  {
    "text": "their review and suggestion regarding",
    "start": "242239",
    "end": "245200"
  },
  {
    "text": "this work I thank you for your attention",
    "start": "245200",
    "end": "249959"
  }
]