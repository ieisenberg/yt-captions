[
  {
    "text": "so hello everyone and welcome to the eager project session um I'm again",
    "start": "199",
    "end": "5879"
  },
  {
    "text": "excited to be here after the cucon uh in Paris uh my name is pav I'm Yer",
    "start": "5879",
    "end": "13599"
  },
  {
    "text": "maintainer um and um yeah apart from Jager I work",
    "start": "13599",
    "end": "19320"
  },
  {
    "text": "as well on open Telemetry I'm the operator maintainer uh and I have been",
    "start": "19320",
    "end": "25359"
  },
  {
    "text": "working in observability space for a long time and in my free time when I'm",
    "start": "25359",
    "end": "30519"
  },
  {
    "text": "not working I'm business Switzerland so I do a lot of Mountain Sports skiing mountain",
    "start": "30519",
    "end": "37800"
  },
  {
    "text": "biking hey everyone my name is Jonah Cowell uh I my day job is I run product",
    "start": "39200",
    "end": "45440"
  },
  {
    "text": "uh for a company called peser that's in the monitoring space you might have heard of prtg it's been around for a",
    "start": "45440",
    "end": "51920"
  },
  {
    "text": "long time uh in my open source work besides working on Jagger I also uh work",
    "start": "51920",
    "end": "59239"
  },
  {
    "text": "on open SE Arch I'm part of the steering committee and was part of bringing that into the Linux foundation and for fun",
    "start": "59239",
    "end": "66799"
  },
  {
    "text": "opposite of pavl I spend my time underwater and that's what I like doing in all the spare time I get at home uh",
    "start": "66799",
    "end": "74759"
  },
  {
    "text": "living down in Florida so with that I will kick this off we're going to talk a",
    "start": "74759",
    "end": "80119"
  },
  {
    "text": "little bit about for those of you can I get a show of hands who doesn't know what distributed tracing",
    "start": "80119",
    "end": "87320"
  },
  {
    "text": "is there's a couple so we're gonna give you the basics explain why it's important how it solves problems we're",
    "start": "87320",
    "end": "94439"
  },
  {
    "text": "going to uh dive into jger we're going to do a couple of demos one is just on jerger itself and then we're going to do",
    "start": "94439",
    "end": "101960"
  },
  {
    "text": "a demo on monitoring uh incorporating Prometheus and yger together and we'll",
    "start": "101960",
    "end": "107560"
  },
  {
    "text": "talk about the exciting new release joer version 2 we posted a Blog uh on Monday",
    "start": "107560",
    "end": "114439"
  },
  {
    "text": "uh on the cncf website announcing Jagger V2 so we're going to dig into that",
    "start": "114439",
    "end": "120479"
  },
  {
    "text": "and uh then we'll talk about the road map and maybe we'll have time for some questions but we have a booth also in",
    "start": "120479",
    "end": "126920"
  },
  {
    "text": "the mornings on the show floor so feel free to pop by talk to pav or myself",
    "start": "126920",
    "end": "131959"
  },
  {
    "text": "we'll be there in the mornings for the next couple days thanks so let's",
    "start": "131959",
    "end": "137160"
  },
  {
    "text": "understand a little bit about why distributed tracing is important and a little bit about what it is so most",
    "start": "137160",
    "end": "143760"
  },
  {
    "text": "organizations are building microservices architectures and this really gets",
    "start": "143760",
    "end": "149200"
  },
  {
    "text": "challenging because different teams really own those microservices from end to end and so the problem is when",
    "start": "149200",
    "end": "156280"
  },
  {
    "text": "something breaks or is slow you have to figure out which team is responsible for",
    "start": "156280",
    "end": "161640"
  },
  {
    "text": "getting the site back online speeding it up so there's often a lot of finger pointing and with distributed tracing",
    "start": "161640",
    "end": "169080"
  },
  {
    "text": "there's no longer finger pointing because you have solid data to help the teams identify and solve the problems so",
    "start": "169080",
    "end": "176800"
  },
  {
    "text": "the first benefit is root cause analysis show me the problem problem where it occurred within this complex web of",
    "start": "176800",
    "end": "183120"
  },
  {
    "text": "microservices that the team has been building and uh visualize that map",
    "start": "183120",
    "end": "188760"
  },
  {
    "text": "understand the dependencies drill into specific transactions and user actions",
    "start": "188760",
    "end": "194680"
  },
  {
    "text": "and this really lets everyone collaborate in the same language really talking about the application and the",
    "start": "194680",
    "end": "201040"
  },
  {
    "text": "user and then finally you can use this data to monitor tell me when things are going south tell me when there are",
    "start": "201040",
    "end": "207720"
  },
  {
    "text": "problems with my application so that the team can get on it and fix it uh so",
    "start": "207720",
    "end": "213080"
  },
  {
    "text": "those are the basics the way that we talk about it is there's typically a few steps to using distributed tracing the",
    "start": "213080",
    "end": "221040"
  },
  {
    "text": "first is instrumentation uh in this case we're going to talk a lot about open Telemetry",
    "start": "221040",
    "end": "227159"
  },
  {
    "text": "the second is how you collect that data and store it in a database and then how",
    "start": "227159",
    "end": "232519"
  },
  {
    "text": "do you visualize it and analyze the data those are kind of the steps involved here",
    "start": "232519",
    "end": "240000"
  },
  {
    "text": "of a",
    "start": "243040",
    "end": "245360"
  },
  {
    "text": "mic it's good okay thank you so I will do introduction to Jagger and after that",
    "start": "250439",
    "end": "257359"
  },
  {
    "text": "we will do a demo with Jagger and I think introduction is is necessary",
    "start": "257359",
    "end": "263759"
  },
  {
    "text": "because it explains kind of the concepts that we use in distribut tracing from the data model perspective there are",
    "start": "263759",
    "end": "270560"
  },
  {
    "text": "really really like two structures that we use the first one is Trace which uh",
    "start": "270560",
    "end": "275880"
  },
  {
    "text": "models kind of endtoend execution of a request as it goes through multiple services and Trace consists of spans and",
    "start": "275880",
    "end": "284800"
  },
  {
    "text": "span is it represents some work that has been done in a system um and the most",
    "start": "284800",
    "end": "292600"
  },
  {
    "text": "importantly is the span contains contextual information that we call tags or attributes and these attributes they",
    "start": "292600",
    "end": "299919"
  },
  {
    "text": "tell you you know what was the operation about and by looking at these attributes",
    "start": "299919",
    "end": "305160"
  },
  {
    "text": "you understand what the system was essentially doing and so what we see here are two",
    "start": "305160",
    "end": "312320"
  },
  {
    "text": "kind of visualizations that we Ed in tracing to uh to visualize a trace the",
    "start": "312320",
    "end": "318319"
  },
  {
    "text": "trace usually starts with the root span that was the first operation that was executed uh and then there are child",
    "start": "318319",
    "end": "325280"
  },
  {
    "text": "spans that are you know child operations uh that started after",
    "start": "325280",
    "end": "330600"
  },
  {
    "text": "um most tracing tools use the visualization on the right we call it a timeline view or a gun chart and we will",
    "start": "330600",
    "end": "338039"
  },
  {
    "text": "see that in the in the Jagger demo so I'll switch to",
    "start": "338039",
    "end": "347680"
  },
  {
    "text": "console and what I'm going to run is the the example application from Jagger it's",
    "start": "347680",
    "end": "353759"
  },
  {
    "text": "called hod rod and it's a web app so I'm I'm going to",
    "start": "353759",
    "end": "360000"
  },
  {
    "text": "switch to browser and load it up make it a little bit",
    "start": "360000",
    "end": "366000"
  },
  {
    "text": "bigger and so what it does when I click on one of these buttons I essentially order a car ride um it's like uber so",
    "start": "366000",
    "end": "374520"
  },
  {
    "text": "let's do that when I click on it um I will get a car with this license plate",
    "start": "374520",
    "end": "379680"
  },
  {
    "text": "that will arrive in 2 minutes um and this was the request ID",
    "start": "379680",
    "end": "385120"
  },
  {
    "text": "and the latency measured from the browser now traditionally we are we are used to",
    "start": "385120",
    "end": "392680"
  },
  {
    "text": "use logs to understand the application and by looking at these",
    "start": "392680",
    "end": "399039"
  },
  {
    "text": "logs maybe it's too large but when I make it",
    "start": "399039",
    "end": "404599"
  },
  {
    "text": "smaller and I look at the logs I should be able to understand what the what the app is doing right it's first getting",
    "start": "404599",
    "end": "411440"
  },
  {
    "text": "the customer it's loading the customer it found the customer then it's trying",
    "start": "411440",
    "end": "417960"
  },
  {
    "text": "to find drivers it found the driver then is calling some",
    "start": "417960",
    "end": "423160"
  },
  {
    "text": "redis um and finally it will dispatch",
    "start": "423160",
    "end": "428520"
  },
  {
    "text": "the um the final kind of um response to end user so that's pretty okay but if",
    "start": "428520",
    "end": "436879"
  },
  {
    "text": "there are multiple kind of concurrent requests in a system which is usually",
    "start": "436879",
    "end": "441919"
  },
  {
    "text": "the case in production then the logs become kind of unreadable because they are mixed",
    "start": "441919",
    "end": "447440"
  },
  {
    "text": "together right and in this case case all these Services run on a single host but",
    "start": "447440",
    "end": "453000"
  },
  {
    "text": "in distributed systems this becomes even more complicated because we have Services running on different machines",
    "start": "453000",
    "end": "458199"
  },
  {
    "text": "and we need to get these logs uh into Cal place so this is exactly what",
    "start": "458199",
    "end": "464159"
  },
  {
    "text": "tracing solves um so I'm going to switch to jger",
    "start": "464159",
    "end": "470080"
  },
  {
    "text": "and Jagger it's able to you know it collects the trace",
    "start": "470080",
    "end": "475400"
  },
  {
    "text": "information but on top of that is able to as well um kind of construct the",
    "start": "475400",
    "end": "480560"
  },
  {
    "text": "architecture diagram that helps us to understand you know what is the the overall architecture of the system so",
    "start": "480560",
    "end": "487280"
  },
  {
    "text": "here I see that there is a front end service three another services and then",
    "start": "487280",
    "end": "492479"
  },
  {
    "text": "two databases and I'm as well able to see you know how many calls are between",
    "start": "492479",
    "end": "499440"
  },
  {
    "text": "those services so I see the redis is utilized a lot and the route service is utilized a lot as well but I'm not able",
    "start": "499440",
    "end": "507000"
  },
  {
    "text": "to kind of debug the uh the execution or or the transaction right for that I need",
    "start": "507000",
    "end": "513120"
  },
  {
    "text": "to go to search and search for the traces that has been recorded and in this case I see the you",
    "start": "513120",
    "end": "521240"
  },
  {
    "text": "know the results I'm able to pick the the one that took the the longest time",
    "start": "521240",
    "end": "528040"
  },
  {
    "text": "in this case it's this one and here I get the timeline view that I showed you before um there is a",
    "start": "528040",
    "end": "535519"
  },
  {
    "text": "lot of information but it's actually very easy to understand this screen on the left side we see the the service",
    "start": "535519",
    "end": "542079"
  },
  {
    "text": "name with operation and on the right side we see the um the execution of that operation",
    "start": "542079",
    "end": "550600"
  },
  {
    "text": "so the first operation is the root span and it took 1.6 seconds",
    "start": "550600",
    "end": "556800"
  },
  {
    "text": "almost um and then there was a child operation from again front end",
    "start": "556800",
    "end": "563120"
  },
  {
    "text": "Service uh and then this my my SQL operation that took 1.2 seconds which is maybe like 80% of",
    "start": "563120",
    "end": "571399"
  },
  {
    "text": "the entire transaction so by looking at this screen I'm immediately able to you know",
    "start": "571399",
    "end": "577079"
  },
  {
    "text": "understand the timings of operation and understand where the time is being spent",
    "start": "577079",
    "end": "582839"
  },
  {
    "text": "um we have as well this um black line black solid line that denotes the the",
    "start": "582839",
    "end": "588040"
  },
  {
    "text": "critical path so if I want to optimize the execution time of this",
    "start": "588040",
    "end": "593959"
  },
  {
    "text": "uh of this trace or transaction I should be looking only at the spans that are on",
    "start": "593959",
    "end": "599959"
  },
  {
    "text": "the critical path so let's take a look at this MySQL request um by looking at the TXS or",
    "start": "599959",
    "end": "609040"
  },
  {
    "text": "attributes from open Telemetry um they record the SQL query um so I was saring",
    "start": "609040",
    "end": "615399"
  },
  {
    "text": "for the customer um but I'm not sure why it took like 1.2 seconds right for that maybe I",
    "start": "615399",
    "end": "622600"
  },
  {
    "text": "can look at the logs and in the logs I see that the this",
    "start": "622600",
    "end": "628720"
  },
  {
    "text": "operation was actually blocked uh by these transactions that",
    "start": "628720",
    "end": "635160"
  },
  {
    "text": "were U you know in the queue before right so this is like shared resource in a system and there were a couple of",
    "start": "635160",
    "end": "641440"
  },
  {
    "text": "transactions before that had to be executed um the logs that we see here um",
    "start": "641440",
    "end": "647600"
  },
  {
    "text": "they are um they can be like you can configure instrumentation that runs in",
    "start": "647600",
    "end": "652880"
  },
  {
    "text": "the process to redirect standard logging into the span logs um and then we'll get",
    "start": "652880",
    "end": "658720"
  },
  {
    "text": "you know each log line Associated exactly with each operation in a",
    "start": "658720",
    "end": "665160"
  },
  {
    "text": "system okay another pattern that is here is this call to redis um we see this",
    "start": "668000",
    "end": "673959"
  },
  {
    "text": "staircase pattern which means that the calls to redies were done in in in a",
    "start": "673959",
    "end": "679399"
  },
  {
    "text": "sequence or in a loop um and it's something that probably could be optimized by using bch API or maybe uh",
    "start": "679399",
    "end": "686399"
  },
  {
    "text": "you know executing multiple goes um in parallel what we have here as well are",
    "start": "686399",
    "end": "692800"
  },
  {
    "text": "the exclamation marks which denotes a problem and error in a system so there",
    "start": "692800",
    "end": "698600"
  },
  {
    "text": "is a error tag and as well a log which logs the exception message so in this",
    "start": "698600",
    "end": "704880"
  },
  {
    "text": "case there was a timeout",
    "start": "704880",
    "end": "708240"
  },
  {
    "text": "R okay and then we again see some staircase pattern but in this case there",
    "start": "712760",
    "end": "718680"
  },
  {
    "text": "are one to three operations done in parallel and then as soon as the first",
    "start": "718680",
    "end": "724279"
  },
  {
    "text": "one finishes the next one starts so there is some parallelism but it's only bounded to to valos fre so probably we",
    "start": "724279",
    "end": "732160"
  },
  {
    "text": "should kind of um increase number of go routines uh to execute all these requests in",
    "start": "732160",
    "end": "738560"
  },
  {
    "text": "parallel what is super cool about tracing is that these um these TXS or",
    "start": "738560",
    "end": "744560"
  },
  {
    "text": "attributes they are consistent across languages and Frameworks which is very",
    "start": "744560",
    "end": "750040"
  },
  {
    "text": "important in distributed systems because we nowadays use you know um different",
    "start": "750040",
    "end": "755440"
  },
  {
    "text": "technology for for different U to imp to implement different business cases um",
    "start": "755440",
    "end": "762279"
  },
  {
    "text": "which is not the case with logging right with logging there is no standardization um different languages",
    "start": "762279",
    "end": "767440"
  },
  {
    "text": "use different um different formats they put different information into logs",
    "start": "767440",
    "end": "773000"
  },
  {
    "text": "which makes it complicated to understand the logging um so if I look at the the h HTP",
    "start": "773000",
    "end": "779480"
  },
  {
    "text": "request in a frontend service and then in",
    "start": "779480",
    "end": "784880"
  },
  {
    "text": "driver uh or maybe root service I will see",
    "start": "784880",
    "end": "790519"
  },
  {
    "text": "exactly similar attributes right I see the HTTP method the Response Code uh the",
    "start": "790519",
    "end": "797199"
  },
  {
    "text": "URL and so on what I forgot to mention is the",
    "start": "797199",
    "end": "802440"
  },
  {
    "text": "process um the process holds information about you know from where this data is coming so this is running on my local",
    "start": "802440",
    "end": "809839"
  },
  {
    "text": "host but if this was running on kubernetes we would get here the deployment name pod name name space um",
    "start": "809839",
    "end": "817199"
  },
  {
    "text": "and so",
    "start": "817199",
    "end": "819519"
  },
  {
    "text": "on yeah um so last thing what I want to show you here is",
    "start": "822720",
    "end": "828920"
  },
  {
    "text": "the uh the compare feature that we have it's like a diff for traces where you",
    "start": "828920",
    "end": "835040"
  },
  {
    "text": "can compare two traces um so in this case I'm comparing A to B uh and the B has 40 spans which",
    "start": "835040",
    "end": "843079"
  },
  {
    "text": "shows me this green box which is uh the difference this is a great visualization",
    "start": "843079",
    "end": "848720"
  },
  {
    "text": "to compare large traces um it helps us to identify the operations that might",
    "start": "848720",
    "end": "855720"
  },
  {
    "text": "have caused the",
    "start": "855720",
    "end": "858639"
  },
  {
    "text": "issue okay I think this is all from the basic functionality thank you thanks for the",
    "start": "861079",
    "end": "868320"
  },
  {
    "text": "demo I'm going to switch back to the slides and we'll continue on",
    "start": "868320",
    "end": "875320"
  },
  {
    "text": "here all right so pav went over all of these features that's kind of the backup",
    "start": "875320",
    "end": "881079"
  },
  {
    "text": "the one thing he didn't show that's kind of cool is besides that timeline view this is a flame graph view so you can",
    "start": "881079",
    "end": "887160"
  },
  {
    "text": "actually switch in the UI between table view which helps you roll up data the",
    "start": "887160",
    "end": "892320"
  },
  {
    "text": "flame graph view is a relatively new feature that's really helpful to give you a different visualization so Jagger",
    "start": "892320",
    "end": "899680"
  },
  {
    "text": "about flexibility of visualization for this uh Trace data so I want to dig in a",
    "start": "899680",
    "end": "905480"
  },
  {
    "text": "little bit about how tracing and metrics work together and some of the things we've done within joerger uh over the",
    "start": "905480",
    "end": "913480"
  },
  {
    "text": "last uh year year and a half so uh the goal here was to move jerger from being",
    "start": "913480",
    "end": "919720"
  },
  {
    "text": "a debugging and diagnostic tool to being more of a monitoring tool those of you",
    "start": "919720",
    "end": "924839"
  },
  {
    "text": "that have been around for a while might know the terminology APM APM is about",
    "start": "924839",
    "end": "930399"
  },
  {
    "text": "combining metrics and tracing together typically so we wanted to bring Jer a little bit forward to make it more",
    "start": "930399",
    "end": "937079"
  },
  {
    "text": "operationally focused so this helps unlock some of the use cases in the bottom monitoring",
    "start": "937079",
    "end": "943600"
  },
  {
    "text": "alerting understanding when things are changing um and just having summary metrics around it so what uh we've done",
    "start": "943600",
    "end": "952240"
  },
  {
    "text": "is uh Jager now emits uh Native Prometheus metrics so you can either remote write them directly from Jer or",
    "start": "952240",
    "end": "959600"
  },
  {
    "text": "you can scrape them just like any Prometheus endpoint and this is provided by open Telemetry and is part of Yer uh",
    "start": "959600",
    "end": "968399"
  },
  {
    "text": "the main goal is really to produce these metrics at the bottom which give you an idea of the rate of requests the errors",
    "start": "968399",
    "end": "975279"
  },
  {
    "text": "and the duration uh on average in aggregate so I'm going to show you a",
    "start": "975279",
    "end": "980480"
  },
  {
    "text": "little bit about that in a demo in just a moment uh this is a little bit of the",
    "start": "980480",
    "end": "985680"
  },
  {
    "text": "data flow so basically within joer we are emitting these directly into your",
    "start": "985680",
    "end": "991440"
  },
  {
    "text": "Prometheus uh backend uh and then you can query them through the UI if you're",
    "start": "991440",
    "end": "997279"
  },
  {
    "text": "using another metric tool like grafana or Percy you can query those metrics",
    "start": "997279",
    "end": "1003680"
  },
  {
    "text": "build cool dashboards and do all kinds of things with them in other tools not",
    "start": "1003680",
    "end": "1009160"
  },
  {
    "text": "just within jerger so the configuration for this",
    "start": "1009160",
    "end": "1016079"
  },
  {
    "text": "which this is a little precursor to jerger version 2 which we'll talk about in a few minutes is quite simple this",
    "start": "1016079",
    "end": "1022680"
  },
  {
    "text": "looks exactly like an open Telemetry configuration because Jagger version two",
    "start": "1022680",
    "end": "1027720"
  },
  {
    "text": "is built on open Telemetry so you can just Define this directly in joerger and",
    "start": "1027720",
    "end": "1033120"
  },
  {
    "text": "then those metrics are available to be scraped or remote written if you decide to do it that",
    "start": "1033120",
    "end": "1039199"
  },
  {
    "text": "way uh so very straightforward and then I'll show you this in the demo but this",
    "start": "1039199",
    "end": "1044678"
  },
  {
    "text": "is how they're visualized in the Jagger UI uh within the monitoring test so let's flip over to another",
    "start": "1044679",
    "end": "1054240"
  },
  {
    "text": "demo so we've been running another Docker instance on this host um which is",
    "start": "1056679",
    "end": "1063200"
  },
  {
    "text": "running a different demo that's specifically designed to show us uh the monitoring data so in this monitor tab",
    "start": "1063200",
    "end": "1071039"
  },
  {
    "text": "uh since we've started running this for a little while we're now collecting data latency error rate and request rate we",
    "start": "1071039",
    "end": "1078440"
  },
  {
    "text": "can pick pick the specific uh component of the application if we want to see everything from the front end view it'll",
    "start": "1078440",
    "end": "1085520"
  },
  {
    "text": "show it here the methods or the operations will be listed below and so",
    "start": "1085520",
    "end": "1091200"
  },
  {
    "text": "these metrics just make it easier to get an overall idea of how your application",
    "start": "1091200",
    "end": "1096280"
  },
  {
    "text": "is doing if I were to look here and see the latency start to go up that there's an issue happening I can then drill into",
    "start": "1096280",
    "end": "1103039"
  },
  {
    "text": "that and really debug the problem uh so it's it's definitely a helpful View uh",
    "start": "1103039",
    "end": "1109400"
  },
  {
    "text": "to have and then you can switch from this view into the trace view specifically for that service and then",
    "start": "1109400",
    "end": "1116320"
  },
  {
    "text": "debug you know if there's a problem going on or something that's running slow so it's yet another way to use",
    "start": "1116320",
    "end": "1122760"
  },
  {
    "text": "Jagger more operationally uh so definitely check that",
    "start": "1122760",
    "end": "1129080"
  },
  {
    "text": "out and go back to the slideshow so you wanted to start oh I'm",
    "start": "1129080",
    "end": "1136360"
  },
  {
    "text": "starting this sorry uh so the exciting thing that we just announced on Monday",
    "start": "1136360",
    "end": "1141400"
  },
  {
    "text": "the official release was on Sunday of joer version 2 we release joer every",
    "start": "1141400",
    "end": "1147159"
  },
  {
    "text": "month now we're releasing version one and version two but the big news here is",
    "start": "1147159",
    "end": "1152960"
  },
  {
    "text": "that open Telemetry is now really core to the Jagger",
    "start": "1152960",
    "end": "1158120"
  },
  {
    "text": "components so when we started this project about two years ago uh the goal",
    "start": "1158120",
    "end": "1163880"
  },
  {
    "text": "was how do we make joerger more like open Telemetry and share components so that we can work even closer together as",
    "start": "1163880",
    "end": "1171280"
  },
  {
    "text": "two different projects so the goal here was how do we adapt the storage apis and",
    "start": "1171280",
    "end": "1178240"
  },
  {
    "text": "everything that's part of jerger into basically a new type of open Telemetry",
    "start": "1178240",
    "end": "1183440"
  },
  {
    "text": "distribution with some additional capabilities uh when we started we couldn't do a lot of the things we",
    "start": "1183440",
    "end": "1189760"
  },
  {
    "text": "needed so the team had to make a lot of contributions to open Telemetry to allow",
    "start": "1189760",
    "end": "1195559"
  },
  {
    "text": "us to do what we've been able to do so it's really fured the project we work together uh most of the maintainers of",
    "start": "1195559",
    "end": "1202640"
  },
  {
    "text": "Jer also maintain open Telemetry so we all work together to try to make",
    "start": "1202640",
    "end": "1208480"
  },
  {
    "text": "everything nicer and easier for the users um and the goal was really to make",
    "start": "1208480",
    "end": "1214120"
  },
  {
    "text": "it native uh within joerger to speak open Telemetry and have those components",
    "start": "1214120",
    "end": "1221000"
  },
  {
    "text": "we also move from multiple binaries in the distribution to a single binary with",
    "start": "1221000",
    "end": "1226480"
  },
  {
    "text": "a yaml configuration so when jerger was created the microservices were built",
    "start": "1226480",
    "end": "1231760"
  },
  {
    "text": "separately as go go programs and each had a lot of command line parameters",
    "start": "1231760",
    "end": "1237880"
  },
  {
    "text": "that would allow you to configure it so there was no config file fast forward to today and everyone wants to use emel and",
    "start": "1237880",
    "end": "1245120"
  },
  {
    "text": "that's how otel works and now that's how joerger works so it makes it kind of",
    "start": "1245120",
    "end": "1250200"
  },
  {
    "text": "more consistent with the ecosystem when you look inside joerger",
    "start": "1250200",
    "end": "1255520"
  },
  {
    "text": "these are the components that we actually bring together so you basically have a pipeline that allows you to take",
    "start": "1255520",
    "end": "1262280"
  },
  {
    "text": "that that Trace data coming in to do processing to do filtering to do any",
    "start": "1262280",
    "end": "1268880"
  },
  {
    "text": "type of sampling and then export the data to a supported backend for joer we",
    "start": "1268880",
    "end": "1274720"
  },
  {
    "text": "still support the same backends which are Cassandra open search and elastic search we are working on more you'll see",
    "start": "1274720",
    "end": "1282559"
  },
  {
    "text": "that in the roadmap part and then the joerger UI queries that database so this",
    "start": "1282559",
    "end": "1288159"
  },
  {
    "text": "is all together as a single binary um but you can also split this apart and",
    "start": "1288159",
    "end": "1293840"
  },
  {
    "text": "run different components separately just by changing the",
    "start": "1293840",
    "end": "1299440"
  },
  {
    "text": "config so yeah so this is the yaml config that",
    "start": "1299799",
    "end": "1304880"
  },
  {
    "text": "Jonah mentioned um it's essentially open Telemetry collector config um and in",
    "start": "1304880",
    "end": "1310640"
  },
  {
    "text": "Jager project we we have added a couple of components the most important one is",
    "start": "1310640",
    "end": "1316640"
  },
  {
    "text": "the the Jagger query extension which exposes the query API and the UI uh and",
    "start": "1316640",
    "end": "1323360"
  },
  {
    "text": "Jagger storage which where you define the the store um that you want to",
    "start": "1323360",
    "end": "1329880"
  },
  {
    "text": "use um and then the rest is essentially open Telemetry collector you can use",
    "start": "1329880",
    "end": "1336720"
  },
  {
    "text": "all I think what we do we kind of build Jager we2 with kind of predefined set of",
    "start": "1336720",
    "end": "1343360"
  },
  {
    "text": "open tetric collector components um but I would say the majority of the most important ones are",
    "start": "1343360",
    "end": "1349440"
  },
  {
    "text": "in this distribution um and um what is cool about this config",
    "start": "1349440",
    "end": "1357159"
  },
  {
    "text": "uh is that the in in the storage you can Define you",
    "start": "1357159",
    "end": "1364240"
  },
  {
    "text": "know multiple storage backends that you want to use which is super flexible",
    "start": "1364240",
    "end": "1369880"
  },
  {
    "text": "because then you can for instance store some type of data or some data from",
    "start": "1369880",
    "end": "1376240"
  },
  {
    "text": "specific namespace or of a specific spefic tenant to one storage and the",
    "start": "1376240",
    "end": "1381440"
  },
  {
    "text": "other to into a separate storage which I think it's it's very cool and very",
    "start": "1381440",
    "end": "1387559"
  },
  {
    "text": "flexible the um the deployment architecture um the application is",
    "start": "1387559",
    "end": "1393919"
  },
  {
    "text": "usually instrumented or we recommend people to use the open Telemetry SDK and auto",
    "start": "1393919",
    "end": "1399520"
  },
  {
    "text": "instrumentation um and then that talks to the Jagger which is again like a single component before we used to have",
    "start": "1399520",
    "end": "1407000"
  },
  {
    "text": "the the collect agent and query in separate components but now it's all in",
    "start": "1407000",
    "end": "1413559"
  },
  {
    "text": "um in a single process which has a receiver um which is the OTP receiver",
    "start": "1413559",
    "end": "1419320"
  },
  {
    "text": "and then the Jagger storage which stores the data into the back end the the",
    "start": "1419320",
    "end": "1424600"
  },
  {
    "text": "Jagger query uh it's on this picture on a separate kind of box but it can be",
    "start": "1424600",
    "end": "1430720"
  },
  {
    "text": "deployed in the same usually it will be deployed in the same box as The Collector",
    "start": "1430720",
    "end": "1438080"
  },
  {
    "text": "this is architecture with the queing um we use the um the Kafka receiver and",
    "start": "1438600",
    "end": "1444440"
  },
  {
    "text": "exporter from the open Telemetry collector contri um and again like you",
    "start": "1444440",
    "end": "1450240"
  },
  {
    "text": "can use them and Define them in the um again in in the EML file that U that",
    "start": "1450240",
    "end": "1456320"
  },
  {
    "text": "Jagger that you use to configure Jagger um so how do you deploy Jagger V2",
    "start": "1456320",
    "end": "1463279"
  },
  {
    "text": "on kubernetes we are planning to use the open Telemetry operator because essentially Yer V2 is open Telemetry",
    "start": "1463279",
    "end": "1469320"
  },
  {
    "text": "collector so it should be able to deploy it with the same um deployment",
    "start": "1469320",
    "end": "1474559"
  },
  {
    "text": "technology as the open Telemetry collector and um yeah let's go to new",
    "start": "1474559",
    "end": "1483360"
  },
  {
    "text": "features new features thanks pble see the reason why we're able to use the",
    "start": "1483360",
    "end": "1488919"
  },
  {
    "text": "open Telemetry operator and make this really simple and straightforward is because Pavo works on both so we just",
    "start": "1488919",
    "end": "1496240"
  },
  {
    "text": "short cuted the whole process and made it nice for the users uh which is an advantage of us working together so some",
    "start": "1496240",
    "end": "1503480"
  },
  {
    "text": "new features obviously Jagger V2 is the big news uh you know and having full",
    "start": "1503480",
    "end": "1509360"
  },
  {
    "text": "native kfka support and just having that pluggable architecture I think future proofs the project and makes it so that",
    "start": "1509360",
    "end": "1515600"
  },
  {
    "text": "we work together we have official support now for elastic search 8 it was",
    "start": "1515600",
    "end": "1521039"
  },
  {
    "text": "sort of took us a while to get there but now it's officially supported um and then there's some new",
    "start": "1521039",
    "end": "1527440"
  },
  {
    "text": "AP query API which we call Jagger V3 sorry it's confusing with all these",
    "start": "1527440",
    "end": "1532600"
  },
  {
    "text": "versions of things but um we also have uh started officially supporting uh",
    "start": "1532600",
    "end": "1540080"
  },
  {
    "text": "sampling and some other capabilities on additional backends so this was mostly on Cassandra we've extended it to the",
    "start": "1540080",
    "end": "1547440"
  },
  {
    "text": "other components so a badger something that you can use for nonproduction non-",
    "start": "1547440",
    "end": "1553399"
  },
  {
    "text": "highs scale uh performance and then you know off to elastic search or open",
    "start": "1553399",
    "end": "1559440"
  },
  {
    "text": "search uh a bunch of new capabilities in the UI like being able to zoom uh",
    "start": "1559440",
    "end": "1565279"
  },
  {
    "text": "different uh kinds of selectors and things in the UI the critical path visualization is also new since the last",
    "start": "1565279",
    "end": "1572880"
  },
  {
    "text": "cubec con which is a great feature super helpful um and uh the road map for jger",
    "start": "1572880",
    "end": "1580440"
  },
  {
    "text": "v2 as Pavo mentioned the kubernetes operators in development hopefully we'll",
    "start": "1580440",
    "end": "1585760"
  },
  {
    "text": "get it done by the end of the year uh same with the helm chart we're making really good progress on that as well so",
    "start": "1585760",
    "end": "1593360"
  },
  {
    "text": "uh hopefully those will be done end of the year early next year uh just to help support this uh the next things that",
    "start": "1593360",
    "end": "1600559"
  },
  {
    "text": "we're going to tackle are click house support officially uh it's a popular backend right now it's in our unofficial",
    "start": "1600559",
    "end": "1607960"
  },
  {
    "text": "list of supported of backends uh so we're going to make it official um and then we want to do some",
    "start": "1607960",
    "end": "1615279"
  },
  {
    "text": "other upgrades both in the visualization dependency views and uh eventually to",
    "start": "1615279",
    "end": "1621520"
  },
  {
    "text": "make the UI more aligned with otel uh since joerger started with open traing",
    "start": "1621520",
    "end": "1627159"
  },
  {
    "text": "and now you know that's changed so um but we're always open to suggestions so",
    "start": "1627159",
    "end": "1633440"
  },
  {
    "text": "come by uh our booth were there in the mornings and and make uh any type of",
    "start": "1633440",
    "end": "1638919"
  },
  {
    "text": "feature requests suggestions if you want to contribute uh that's always great so",
    "start": "1638919",
    "end": "1644760"
  },
  {
    "text": "we'll take a few questions cuz we've got about 5 minutes so feel free to go up to",
    "start": "1644760",
    "end": "1650360"
  },
  {
    "text": "the mic or yell and I'll repeat it uh if you have any specific questions happy to",
    "start": "1650360",
    "end": "1656039"
  },
  {
    "text": "take them",
    "start": "1656039",
    "end": "1660760"
  },
  {
    "text": "anyone got",
    "start": "1662640",
    "end": "1665840"
  },
  {
    "text": "one no problem so the the question was how does joerger understand how to piece",
    "start": "1671559",
    "end": "1677600"
  },
  {
    "text": "together all the different parts of the application so the way that open Telemetry works is that there's a unique",
    "start": "1677600",
    "end": "1684000"
  },
  {
    "text": "ID for every trace and the downstream uh span tags back to the span",
    "start": "1684000",
    "end": "1691919"
  },
  {
    "text": "before it so it sort of creates a chain and you can read those together so it",
    "start": "1691919",
    "end": "1697039"
  },
  {
    "text": "allows you to look at the the ID of the trace and see all the subsequent spans",
    "start": "1697039",
    "end": "1704120"
  },
  {
    "text": "off the trace so yeah there is unique ID that is",
    "start": "1704120",
    "end": "1710519"
  },
  {
    "text": "propagated throughout the request and then Jer just correlates all the spens",
    "start": "1710519",
    "end": "1715679"
  },
  {
    "text": "together by using that ID",
    "start": "1715679",
    "end": "1721840"
  },
  {
    "text": "y yeah the question is about the when the operator for v2 will be ready",
    "start": "1729679",
    "end": "1738360"
  },
  {
    "text": "I'm sorry how does how do you install without the operator you have to",
    "start": "1738440",
    "end": "1743480"
  },
  {
    "text": "do it yourself create a deployment service it's not difficult because it's a single deployment so it's pretty easy",
    "start": "1743480",
    "end": "1750519"
  },
  {
    "text": "to just create the Rock bonetes objects and deploy it yeah the the support for",
    "start": "1750519",
    "end": "1756360"
  },
  {
    "text": "operator will will yeah come soon there is not much work",
    "start": "1756360",
    "end": "1763000"
  },
  {
    "text": "left I just wanted to answer the other question in the UI see that hex number",
    "start": "1763200",
    "end": "1768640"
  },
  {
    "text": "that's right next to run test in the top left that is actually the ID of this",
    "start": "1768640",
    "end": "1773880"
  },
  {
    "text": "particular Trace that we're looking at so that's the unique identifier um and then subsequently",
    "start": "1773880",
    "end": "1781000"
  },
  {
    "text": "there's unique identifiers for all the other pieces sorry to go back to the other question",
    "start": "1781000",
    "end": "1789240"
  },
  {
    "text": "so the question is where does that number come from how does it get generated so when you use open Telemetry",
    "start": "1801919",
    "end": "1809039"
  },
  {
    "text": "sdks or Auto instrumentation which requires no code change that number is",
    "start": "1809039",
    "end": "1815679"
  },
  {
    "text": "automatically injected by the SDK or the agent into the trace so it essentially",
    "start": "1815679",
    "end": "1822880"
  },
  {
    "text": "modifies the request puts that in and then that's how everything gets chained together automatically for you so by",
    "start": "1822880",
    "end": "1830279"
  },
  {
    "text": "using the SDK subsequent calls you still need the SDK in all of the services or",
    "start": "1830279",
    "end": "1836279"
  },
  {
    "text": "an agent otherwise you'll have a broken Trace where it may end and a new Trace",
    "start": "1836279",
    "end": "1841880"
  },
  {
    "text": "might start because it doesn't have that linkage so by ensuring that you have instrumentation consistently everything",
    "start": "1841880",
    "end": "1849600"
  },
  {
    "text": "will flow together and you won't have broken traces you'll see the end to",
    "start": "1849600",
    "end": "1854640"
  },
  {
    "text": "endend flow so cool any other questions",
    "start": "1854640",
    "end": "1862120"
  },
  {
    "text": "otherwise I did want to mention oh one more",
    "start": "1862120",
    "end": "1867440"
  },
  {
    "text": "okay uh in our demos we do manual instrumentation I believe right not Auto",
    "start": "1870240",
    "end": "1877919"
  },
  {
    "text": "yeah it's a manual instrumentation and usually with the with the databases you don't instrument the database you",
    "start": "1877919",
    "end": "1883960"
  },
  {
    "text": "instrument the client that talks to database um that's that's how it usually",
    "start": "1883960",
    "end": "1889159"
  },
  {
    "text": "works if you were to instrument the database then you would probably get information how the database itself",
    "start": "1889159",
    "end": "1896519"
  },
  {
    "text": "Works which is usually not important because you assume that it's implemented well and there's not going to be",
    "start": "1896519",
    "end": "1903480"
  },
  {
    "text": "issues yeah if you if you instrument a database which you can do you'll end up with a bunch of weird internals that",
    "start": "1903480",
    "end": "1910039"
  },
  {
    "text": "won't make any sense to you so although you can do it if you're a serious database engineer for the most part uh",
    "start": "1910039",
    "end": "1918000"
  },
  {
    "text": "you instrument the client that gives you all the SQL the response time everything else that you need here in the",
    "start": "1918000",
    "end": "1925000"
  },
  {
    "text": "trace we got that question at the booth today too so it's a common",
    "start": "1925000",
    "end": "1930240"
  },
  {
    "text": "one uh any other questions with that I'm going to just",
    "start": "1930240",
    "end": "1937039"
  },
  {
    "text": "leave the you know please review us uh with the QR code uh definitely join the",
    "start": "1937039",
    "end": "1944519"
  },
  {
    "text": "slack we have a monthly call uh always open for discussions and uh we've got a",
    "start": "1944519",
    "end": "1950279"
  },
  {
    "text": "Blog and an X account and all of that stuff so pop by the booth if you have any additional questions or want to see",
    "start": "1950279",
    "end": "1957039"
  },
  {
    "text": "a deeper demo and uh thanks for attending I hope you all have a great rest of the conference",
    "start": "1957039",
    "end": "1964160"
  },
  {
    "text": "[Applause]",
    "start": "1964160",
    "end": "1969580"
  }
]