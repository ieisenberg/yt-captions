[
  {
    "text": "hello um i'm excited to speak about",
    "start": "240",
    "end": "4160"
  },
  {
    "text": "containers and isolation levels at",
    "start": "4160",
    "end": "6240"
  },
  {
    "text": "kubecon today",
    "start": "6240",
    "end": "8160"
  },
  {
    "text": "hi my name is jacqui liu today i'll be",
    "start": "8160",
    "end": "10880"
  },
  {
    "text": "talking about",
    "start": "10880",
    "end": "11599"
  },
  {
    "text": "making sense of the various isolation",
    "start": "11599",
    "end": "13360"
  },
  {
    "text": "layers in the kubernetes landscape",
    "start": "13360",
    "end": "15839"
  },
  {
    "text": "i came across this topic while working",
    "start": "15839",
    "end": "17520"
  },
  {
    "text": "on an open source project at the",
    "start": "17520",
    "end": "19199"
  },
  {
    "text": "university of chicago",
    "start": "19199",
    "end": "21439"
  },
  {
    "text": "in how you know working on multi-tenant",
    "start": "21439",
    "end": "24640"
  },
  {
    "text": "kubernetes clusters allowing different",
    "start": "24640",
    "end": "26640"
  },
  {
    "text": "users to access different",
    "start": "26640",
    "end": "28320"
  },
  {
    "text": "layers of the control plane and",
    "start": "28320",
    "end": "32000"
  },
  {
    "text": "i found a lot of these topics to be",
    "start": "32000",
    "end": "34480"
  },
  {
    "text": "really really interesting",
    "start": "34480",
    "end": "36480"
  },
  {
    "text": "i'm excited to share them with you today",
    "start": "36480",
    "end": "40480"
  },
  {
    "text": "cool on the agenda is multi-tenancy and",
    "start": "40480",
    "end": "43920"
  },
  {
    "text": "isolation",
    "start": "43920",
    "end": "44640"
  },
  {
    "text": "and a little bit of introduction to that",
    "start": "44640",
    "end": "46800"
  },
  {
    "text": "and then diving",
    "start": "46800",
    "end": "47680"
  },
  {
    "text": "deeper into the components and isolation",
    "start": "47680",
    "end": "50640"
  },
  {
    "text": "layers within kubernetes that's",
    "start": "50640",
    "end": "52399"
  },
  {
    "text": "supported by kubernetes",
    "start": "52399",
    "end": "54640"
  },
  {
    "text": "and then i'll talk a little bit about",
    "start": "54640",
    "end": "56160"
  },
  {
    "text": "the particular project that i worked on",
    "start": "56160",
    "end": "58480"
  },
  {
    "text": "that focus more on container level and",
    "start": "58480",
    "end": "60800"
  },
  {
    "text": "pod level isolation",
    "start": "60800",
    "end": "64079"
  },
  {
    "text": "going straight into talking about",
    "start": "64239",
    "end": "66799"
  },
  {
    "text": "multi-tenancy",
    "start": "66799",
    "end": "67920"
  },
  {
    "text": "and isolation so what is multi-tenancy",
    "start": "67920",
    "end": "72640"
  },
  {
    "text": "in a single tenant architecture",
    "start": "72640",
    "end": "76240"
  },
  {
    "text": "each tenant or user have their own",
    "start": "76240",
    "end": "79680"
  },
  {
    "text": "instance of their own cluster",
    "start": "79680",
    "end": "82000"
  },
  {
    "text": "so in this diagram you'll see that user",
    "start": "82000",
    "end": "83920"
  },
  {
    "text": "one has their own cluster which has a",
    "start": "83920",
    "end": "86080"
  },
  {
    "text": "control plane and worker nodes",
    "start": "86080",
    "end": "88400"
  },
  {
    "text": "user two is completely unaware of using",
    "start": "88400",
    "end": "91600"
  },
  {
    "text": "one's",
    "start": "91600",
    "end": "92000"
  },
  {
    "text": "cluster and has their own cluster to",
    "start": "92000",
    "end": "93759"
  },
  {
    "text": "work in as well",
    "start": "93759",
    "end": "95360"
  },
  {
    "text": "in a multi-tenant architecture some or",
    "start": "95360",
    "end": "98799"
  },
  {
    "text": "all of the resources of a given cluster",
    "start": "98799",
    "end": "101920"
  },
  {
    "text": "can be shared across multiple tenants or",
    "start": "101920",
    "end": "105040"
  },
  {
    "text": "users so in the diagram on the right",
    "start": "105040",
    "end": "108640"
  },
  {
    "text": "in a multi-tenant architecture user 1",
    "start": "108640",
    "end": "111600"
  },
  {
    "text": "and user 2",
    "start": "111600",
    "end": "112720"
  },
  {
    "text": "are sort of both using the same cluster",
    "start": "112720",
    "end": "116880"
  },
  {
    "text": "they might be sharing a control plane",
    "start": "116880",
    "end": "118640"
  },
  {
    "text": "there might be multiple control planes",
    "start": "118640",
    "end": "120960"
  },
  {
    "text": "and they're sharing the the worker",
    "start": "120960",
    "end": "122560"
  },
  {
    "text": "neural resources and pulling together",
    "start": "122560",
    "end": "124880"
  },
  {
    "text": "those resources",
    "start": "124880",
    "end": "128160"
  },
  {
    "text": "um so why do we care about you know",
    "start": "128160",
    "end": "130959"
  },
  {
    "text": "multi-tenancy what",
    "start": "130959",
    "end": "132879"
  },
  {
    "text": "you know why do we want it um",
    "start": "132879",
    "end": "136319"
  },
  {
    "text": "in modern day systems where there are",
    "start": "136319",
    "end": "139120"
  },
  {
    "text": "more and more complex clusters and",
    "start": "139120",
    "end": "141599"
  },
  {
    "text": "more and more complex platforms it can",
    "start": "141599",
    "end": "144000"
  },
  {
    "text": "be really challenging",
    "start": "144000",
    "end": "145520"
  },
  {
    "text": "for platform teams to have to operate",
    "start": "145520",
    "end": "148000"
  },
  {
    "text": "multiple kubernetes clusters",
    "start": "148000",
    "end": "150959"
  },
  {
    "text": "for example some of the challenges are",
    "start": "150959",
    "end": "153519"
  },
  {
    "text": "you know running dedicated control",
    "start": "153519",
    "end": "155120"
  },
  {
    "text": "planes for for each cluster",
    "start": "155120",
    "end": "157200"
  },
  {
    "text": "making sure that from an operational",
    "start": "157200",
    "end": "159360"
  },
  {
    "text": "perspective deployments",
    "start": "159360",
    "end": "161120"
  },
  {
    "text": "patches and upgrades across a fleet of",
    "start": "161120",
    "end": "163519"
  },
  {
    "text": "clusters",
    "start": "163519",
    "end": "164400"
  },
  {
    "text": "are up-to-date and standardized and",
    "start": "164400",
    "end": "167360"
  },
  {
    "text": "managed properly",
    "start": "167360",
    "end": "168480"
  },
  {
    "text": "those things can be really challenging",
    "start": "168480",
    "end": "171760"
  },
  {
    "text": "additionally there's overhead with",
    "start": "171760",
    "end": "174800"
  },
  {
    "text": "finding a lot of foundational resources",
    "start": "174800",
    "end": "177200"
  },
  {
    "text": "such as policy controllers",
    "start": "177200",
    "end": "179280"
  },
  {
    "text": "observability platforms that really",
    "start": "179280",
    "end": "181680"
  },
  {
    "text": "should be consistent",
    "start": "181680",
    "end": "183040"
  },
  {
    "text": "for a given organization and",
    "start": "183040",
    "end": "186080"
  },
  {
    "text": "might actually be better off as shared",
    "start": "186080",
    "end": "188800"
  },
  {
    "text": "resources",
    "start": "188800",
    "end": "190319"
  },
  {
    "text": "so as a result to sort of reduce the",
    "start": "190319",
    "end": "193040"
  },
  {
    "text": "operational complexity",
    "start": "193040",
    "end": "195040"
  },
  {
    "text": "it might be worth it to to run",
    "start": "195040",
    "end": "196800"
  },
  {
    "text": "multi-tenant systems",
    "start": "196800",
    "end": "198480"
  },
  {
    "text": "and the general analogy of multi-tenancy",
    "start": "198480",
    "end": "201760"
  },
  {
    "text": "is",
    "start": "201760",
    "end": "202560"
  },
  {
    "text": "think about this in terms of an",
    "start": "202560",
    "end": "205519"
  },
  {
    "text": "apartment",
    "start": "205519",
    "end": "206400"
  },
  {
    "text": "where you have multiple tenants each of",
    "start": "206400",
    "end": "208560"
  },
  {
    "text": "them will have their own their kitchen",
    "start": "208560",
    "end": "210400"
  },
  {
    "text": "their own bedrooms their own bathrooms",
    "start": "210400",
    "end": "212959"
  },
  {
    "text": "they might share some resources",
    "start": "212959",
    "end": "215120"
  },
  {
    "text": "like garbage collection or the different",
    "start": "215120",
    "end": "217760"
  },
  {
    "text": "lobby",
    "start": "217760",
    "end": "218480"
  },
  {
    "text": "but for the most part they're operating",
    "start": "218480",
    "end": "220159"
  },
  {
    "text": "on their own without having access to",
    "start": "220159",
    "end": "222000"
  },
  {
    "text": "other people's resources",
    "start": "222000",
    "end": "225120"
  },
  {
    "text": "cool um so when it comes to",
    "start": "225599",
    "end": "229120"
  },
  {
    "text": "multi-tenancy you then have to think",
    "start": "229120",
    "end": "230959"
  },
  {
    "text": "about isolation",
    "start": "230959",
    "end": "232799"
  },
  {
    "text": "because if everyone's on the same",
    "start": "232799",
    "end": "234400"
  },
  {
    "text": "cluster what does that mean",
    "start": "234400",
    "end": "236799"
  },
  {
    "text": "in terms of who has access to what",
    "start": "236799",
    "end": "239200"
  },
  {
    "text": "resources",
    "start": "239200",
    "end": "240319"
  },
  {
    "text": "and how much of the given resource",
    "start": "240319",
    "end": "243599"
  },
  {
    "text": "a tenant can consume so in that case",
    "start": "243599",
    "end": "247040"
  },
  {
    "text": "single tenant clusters",
    "start": "247040",
    "end": "248720"
  },
  {
    "text": "are are very valuable if you have a",
    "start": "248720",
    "end": "251680"
  },
  {
    "text": "small",
    "start": "251680",
    "end": "252159"
  },
  {
    "text": "amount of tenants and is definitely the",
    "start": "252159",
    "end": "255840"
  },
  {
    "text": "best way",
    "start": "255840",
    "end": "256880"
  },
  {
    "text": "to ensure isolation because everyone",
    "start": "256880",
    "end": "260079"
  },
  {
    "text": "is sort of in their own domain without",
    "start": "260079",
    "end": "262400"
  },
  {
    "text": "access to anybody else's resources",
    "start": "262400",
    "end": "265440"
  },
  {
    "text": "and ideally you know constraints and",
    "start": "265440",
    "end": "268479"
  },
  {
    "text": "restrictions on other resources don't",
    "start": "268479",
    "end": "270240"
  },
  {
    "text": "apply",
    "start": "270240",
    "end": "270800"
  },
  {
    "text": "to to single tenant clusters",
    "start": "270800",
    "end": "274320"
  },
  {
    "text": "on the other hand of the spectrum",
    "start": "274320",
    "end": "276000"
  },
  {
    "text": "there's also you know a completely",
    "start": "276000",
    "end": "278639"
  },
  {
    "text": "one shared cluster where everyone has",
    "start": "278639",
    "end": "280639"
  },
  {
    "text": "full access to everything which is very",
    "start": "280639",
    "end": "282960"
  },
  {
    "text": "very much open regardless of where on",
    "start": "282960",
    "end": "285759"
  },
  {
    "text": "the spectrum",
    "start": "285759",
    "end": "287280"
  },
  {
    "text": "you fall on there needs to be some level",
    "start": "287280",
    "end": "290639"
  },
  {
    "text": "of trust in a multi-tenancy",
    "start": "290639",
    "end": "292800"
  },
  {
    "text": "ultimately something underlying is",
    "start": "292800",
    "end": "295680"
  },
  {
    "text": "shared",
    "start": "295680",
    "end": "296560"
  },
  {
    "text": "and multi-tenant clusters are able to",
    "start": "296560",
    "end": "299360"
  },
  {
    "text": "address some of the downsides",
    "start": "299360",
    "end": "301039"
  },
  {
    "text": "of managing a single cluster for each",
    "start": "301039",
    "end": "304400"
  },
  {
    "text": "customer or each tenant but can",
    "start": "304400",
    "end": "307600"
  },
  {
    "text": "come in different flavors and different",
    "start": "307600",
    "end": "310320"
  },
  {
    "text": "restrictions",
    "start": "310320",
    "end": "311840"
  },
  {
    "text": "the goal with multi-tenant clusters is",
    "start": "311840",
    "end": "314880"
  },
  {
    "text": "to enable tenants to coexist without",
    "start": "314880",
    "end": "318000"
  },
  {
    "text": "impacting each other",
    "start": "318000",
    "end": "319680"
  },
  {
    "text": "which doesn't just mean isolation but it",
    "start": "319680",
    "end": "322400"
  },
  {
    "text": "might mean",
    "start": "322400",
    "end": "323120"
  },
  {
    "text": "you know restricting quotas or",
    "start": "323120",
    "end": "325600"
  },
  {
    "text": "restricting api",
    "start": "325600",
    "end": "326720"
  },
  {
    "text": "access to or or resource access to a",
    "start": "326720",
    "end": "329520"
  },
  {
    "text": "particular tenant",
    "start": "329520",
    "end": "330639"
  },
  {
    "text": "so that one single tenant cannot bring",
    "start": "330639",
    "end": "332639"
  },
  {
    "text": "down the entire cluster",
    "start": "332639",
    "end": "336080"
  },
  {
    "text": "so ultimately the the trade-off is",
    "start": "337039",
    "end": "339199"
  },
  {
    "text": "between cluster management complexity",
    "start": "339199",
    "end": "341360"
  },
  {
    "text": "and isolation",
    "start": "341360",
    "end": "342800"
  },
  {
    "text": "um in the the far right example",
    "start": "342800",
    "end": "346240"
  },
  {
    "text": "where you have one shared cluster where",
    "start": "346240",
    "end": "349199"
  },
  {
    "text": "access is",
    "start": "349199",
    "end": "350000"
  },
  {
    "text": "is very liberal to or everyone has the",
    "start": "350000",
    "end": "352240"
  },
  {
    "text": "same level of access",
    "start": "352240",
    "end": "353840"
  },
  {
    "text": "um that's the least amount of cluster",
    "start": "353840",
    "end": "355919"
  },
  {
    "text": "management complexity",
    "start": "355919",
    "end": "357360"
  },
  {
    "text": "but on the other hand there's also no",
    "start": "357360",
    "end": "358960"
  },
  {
    "text": "isolation",
    "start": "358960",
    "end": "361039"
  },
  {
    "text": "in the single tenant you know use case",
    "start": "361039",
    "end": "364560"
  },
  {
    "text": "where everyone sort of has their own",
    "start": "364560",
    "end": "366479"
  },
  {
    "text": "cluster it's the most amount of",
    "start": "366479",
    "end": "368720"
  },
  {
    "text": "isolation but it's a lot of overhead and",
    "start": "368720",
    "end": "370880"
  },
  {
    "text": "complexity to maintain",
    "start": "370880",
    "end": "372800"
  },
  {
    "text": "and along the lines you might decide",
    "start": "372800",
    "end": "374479"
  },
  {
    "text": "that some things are worth sharing some",
    "start": "374479",
    "end": "376319"
  },
  {
    "text": "resources are worth sharing",
    "start": "376319",
    "end": "378639"
  },
  {
    "text": "but some other constraints need to be in",
    "start": "378639",
    "end": "380880"
  },
  {
    "text": "place so there's a constant trade-off",
    "start": "380880",
    "end": "383600"
  },
  {
    "text": "between complexity and isolation",
    "start": "383600",
    "end": "387600"
  },
  {
    "text": "and then there's no perfect isolation",
    "start": "387600",
    "end": "390240"
  },
  {
    "text": "scenario",
    "start": "390240",
    "end": "392880"
  },
  {
    "text": "okay so this talk primarily focuses on",
    "start": "393600",
    "end": "397120"
  },
  {
    "text": "the tooling that kubernetes provides you",
    "start": "397120",
    "end": "399440"
  },
  {
    "text": "for isolation",
    "start": "399440",
    "end": "400800"
  },
  {
    "text": "but i also want to take a high-level",
    "start": "400800",
    "end": "402960"
  },
  {
    "text": "view on what's sort of",
    "start": "402960",
    "end": "404479"
  },
  {
    "text": "available in securing your system",
    "start": "404479",
    "end": "406240"
  },
  {
    "text": "overall because those things",
    "start": "406240",
    "end": "408000"
  },
  {
    "text": "definitely come into play so things like",
    "start": "408000",
    "end": "411440"
  },
  {
    "text": "hardware the hypervisor level",
    "start": "411440",
    "end": "414479"
  },
  {
    "text": "networking the virtual private cloud",
    "start": "414479",
    "end": "417840"
  },
  {
    "text": "they all come into play and ultimately",
    "start": "417840",
    "end": "419759"
  },
  {
    "text": "how secure your ecosystem",
    "start": "419759",
    "end": "421520"
  },
  {
    "text": "is um and for instance if you have a",
    "start": "421520",
    "end": "424960"
  },
  {
    "text": "really",
    "start": "424960",
    "end": "425520"
  },
  {
    "text": "you know strict firewall you might be",
    "start": "425520",
    "end": "427599"
  },
  {
    "text": "able to have a more generous",
    "start": "427599",
    "end": "429039"
  },
  {
    "text": "our back policy on your cluster um",
    "start": "429039",
    "end": "432319"
  },
  {
    "text": "so things like you know having web",
    "start": "432319",
    "end": "435360"
  },
  {
    "text": "application firewalls for your external",
    "start": "435360",
    "end": "437199"
  },
  {
    "text": "apis",
    "start": "437199",
    "end": "438080"
  },
  {
    "text": "restricting access for for internal apis",
    "start": "438080",
    "end": "441680"
  },
  {
    "text": "to a given network they all sort of",
    "start": "441680",
    "end": "445039"
  },
  {
    "text": "provide different layers of protection",
    "start": "445039",
    "end": "447440"
  },
  {
    "text": "so being realistic and practical about",
    "start": "447440",
    "end": "450479"
  },
  {
    "text": "what your security policies are",
    "start": "450479",
    "end": "453120"
  },
  {
    "text": "and and making sure that you're creating",
    "start": "453120",
    "end": "455199"
  },
  {
    "text": "a sustainable",
    "start": "455199",
    "end": "456479"
  },
  {
    "text": "development environment also sustainable",
    "start": "456479",
    "end": "458319"
  },
  {
    "text": "environment for",
    "start": "458319",
    "end": "459759"
  },
  {
    "text": "for your team to understand and manage",
    "start": "459759",
    "end": "461840"
  },
  {
    "text": "the the layers is really important",
    "start": "461840",
    "end": "464000"
  },
  {
    "text": "it's not always about you know",
    "start": "464000",
    "end": "466080"
  },
  {
    "text": "everything has to be",
    "start": "466080",
    "end": "467360"
  },
  {
    "text": "always everything has to be locked down",
    "start": "467360",
    "end": "469759"
  },
  {
    "text": "but understanding the big picture as",
    "start": "469759",
    "end": "471280"
  },
  {
    "text": "well",
    "start": "471280",
    "end": "471840"
  },
  {
    "text": "so that's something that i really wanted",
    "start": "471840",
    "end": "473599"
  },
  {
    "text": "to highlight but the majority of this",
    "start": "473599",
    "end": "475280"
  },
  {
    "text": "talk is going to focus on the kubernetes",
    "start": "475280",
    "end": "478240"
  },
  {
    "text": "level and what you can do with your",
    "start": "478240",
    "end": "479919"
  },
  {
    "text": "kubernetes cluster",
    "start": "479919",
    "end": "483039"
  },
  {
    "text": "okay so let's jump into just that",
    "start": "483199",
    "end": "486639"
  },
  {
    "text": "um i'm going to introduce these topics",
    "start": "486639",
    "end": "489039"
  },
  {
    "text": "by by going over",
    "start": "489039",
    "end": "490720"
  },
  {
    "text": "the basic atomic primitives within",
    "start": "490720",
    "end": "493759"
  },
  {
    "text": "kubernetes because i think that these",
    "start": "493759",
    "end": "495680"
  },
  {
    "text": "are",
    "start": "495680",
    "end": "496080"
  },
  {
    "text": "are really important to to build upon to",
    "start": "496080",
    "end": "498639"
  },
  {
    "text": "talk about isolation",
    "start": "498639",
    "end": "500800"
  },
  {
    "text": "so starting off the containers are the",
    "start": "500800",
    "end": "503360"
  },
  {
    "text": "atomic unit of work",
    "start": "503360",
    "end": "505360"
  },
  {
    "text": "containers run on pods and paws are a",
    "start": "505360",
    "end": "509120"
  },
  {
    "text": "logical unit",
    "start": "509120",
    "end": "510319"
  },
  {
    "text": "of the application pods are then",
    "start": "510319",
    "end": "513518"
  },
  {
    "text": "deployed to nodes which are at the",
    "start": "513519",
    "end": "515279"
  },
  {
    "text": "virtual machines serving as the workers",
    "start": "515279",
    "end": "517839"
  },
  {
    "text": "and a cluster will contain multiple",
    "start": "517839",
    "end": "520560"
  },
  {
    "text": "nodes",
    "start": "520560",
    "end": "521360"
  },
  {
    "text": "the important thing to know here is that",
    "start": "521360",
    "end": "523120"
  },
  {
    "text": "you can run multiple containers per",
    "start": "523120",
    "end": "525760"
  },
  {
    "text": "pod if your application logically you",
    "start": "525760",
    "end": "528640"
  },
  {
    "text": "know",
    "start": "528640",
    "end": "528959"
  },
  {
    "text": "is separated into different multiple",
    "start": "528959",
    "end": "532720"
  },
  {
    "text": "containers",
    "start": "532839",
    "end": "534480"
  },
  {
    "text": "so what isolation layers does um",
    "start": "534480",
    "end": "537839"
  },
  {
    "text": "kubernetes provide you uh",
    "start": "537839",
    "end": "541760"
  },
  {
    "text": "at the top layer you sort of have the",
    "start": "541760",
    "end": "544320"
  },
  {
    "text": "the workload",
    "start": "544320",
    "end": "545920"
  },
  {
    "text": "within that you are sharing a pool of",
    "start": "545920",
    "end": "548320"
  },
  {
    "text": "nodes",
    "start": "548320",
    "end": "550160"
  },
  {
    "text": "but a given you know example of",
    "start": "550160",
    "end": "553040"
  },
  {
    "text": "isolation might be that different",
    "start": "553040",
    "end": "554959"
  },
  {
    "text": "tenants might have priority on resources",
    "start": "554959",
    "end": "558399"
  },
  {
    "text": "or the number of nodes",
    "start": "558399",
    "end": "559519"
  },
  {
    "text": "allocated to them or how scaling out",
    "start": "559519",
    "end": "562320"
  },
  {
    "text": "works",
    "start": "562320",
    "end": "563120"
  },
  {
    "text": "but from a architecture perspective it's",
    "start": "563120",
    "end": "566880"
  },
  {
    "text": "really abstracted away there's a shared",
    "start": "566880",
    "end": "568959"
  },
  {
    "text": "pool of nodes",
    "start": "568959",
    "end": "570160"
  },
  {
    "text": "that anyone can theoretically access",
    "start": "570160",
    "end": "574480"
  },
  {
    "text": "the next layer is uh the control plane",
    "start": "574480",
    "end": "577200"
  },
  {
    "text": "which is a core part of the",
    "start": "577200",
    "end": "578959"
  },
  {
    "text": "kubernetes cluster and is able to",
    "start": "578959",
    "end": "582240"
  },
  {
    "text": "segregate the tenants and allow for",
    "start": "582240",
    "end": "585279"
  },
  {
    "text": "authorization based on our back",
    "start": "585279",
    "end": "588480"
  },
  {
    "text": "api priority and resource allocation",
    "start": "588480",
    "end": "591839"
  },
  {
    "text": "um and actually sort of starts to define",
    "start": "591839",
    "end": "596080"
  },
  {
    "text": "the um the quotas the restrictions",
    "start": "596080",
    "end": "600800"
  },
  {
    "text": "the the controls uh so the",
    "start": "600800",
    "end": "604480"
  },
  {
    "text": "control plane um includes the",
    "start": "604480",
    "end": "608800"
  },
  {
    "text": "kubernetes api the",
    "start": "608800",
    "end": "612240"
  },
  {
    "text": "scheduler the controller manager and",
    "start": "612240",
    "end": "615279"
  },
  {
    "text": "also includes",
    "start": "615279",
    "end": "616800"
  },
  {
    "text": "xcd for for storage and and state",
    "start": "616800",
    "end": "620160"
  },
  {
    "text": "but the important thing is",
    "start": "620160",
    "end": "623279"
  },
  {
    "text": "here is where the cluster is",
    "start": "623279",
    "end": "626800"
  },
  {
    "text": "managing and correcting the desired",
    "start": "626800",
    "end": "629680"
  },
  {
    "text": "state",
    "start": "629680",
    "end": "630800"
  },
  {
    "text": "and will make decisions in such a way",
    "start": "630800",
    "end": "633040"
  },
  {
    "text": "that actually enforces some of the",
    "start": "633040",
    "end": "634880"
  },
  {
    "text": "isolation that you might want to",
    "start": "634880",
    "end": "637360"
  },
  {
    "text": "add to your cluster",
    "start": "637360",
    "end": "640560"
  },
  {
    "text": "and we'll talk a little bit more about",
    "start": "640560",
    "end": "642399"
  },
  {
    "text": "what tooling and mechanism that that",
    "start": "642399",
    "end": "644480"
  },
  {
    "text": "means",
    "start": "644480",
    "end": "645360"
  },
  {
    "text": "um at the bottom layers of platform",
    "start": "645360",
    "end": "649120"
  },
  {
    "text": "services which include",
    "start": "649120",
    "end": "650640"
  },
  {
    "text": "things like central logging monitoring",
    "start": "650640",
    "end": "654880"
  },
  {
    "text": "ingress egress and internal dns",
    "start": "654880",
    "end": "658640"
  },
  {
    "text": "a lot of this is going to be shared",
    "start": "658640",
    "end": "661760"
  },
  {
    "text": "across the tenants",
    "start": "661760",
    "end": "663200"
  },
  {
    "text": "and one of the benefits of having a",
    "start": "663200",
    "end": "665120"
  },
  {
    "text": "multi-tenant system is you can have the",
    "start": "665120",
    "end": "667279"
  },
  {
    "text": "same logging",
    "start": "667279",
    "end": "668160"
  },
  {
    "text": "same monitoring you can share these",
    "start": "668160",
    "end": "670720"
  },
  {
    "text": "platform services you can upgrade them",
    "start": "670720",
    "end": "672560"
  },
  {
    "text": "consistently",
    "start": "672560",
    "end": "673760"
  },
  {
    "text": "and you have the same use cases across",
    "start": "673760",
    "end": "676320"
  },
  {
    "text": "the different",
    "start": "676320",
    "end": "677440"
  },
  {
    "text": "users on your platform however",
    "start": "677440",
    "end": "680720"
  },
  {
    "text": "you might not want to allow",
    "start": "680720",
    "end": "684240"
  },
  {
    "text": "sharing across all the actual",
    "start": "684240",
    "end": "688079"
  },
  {
    "text": "metadata or underlying information",
    "start": "688079",
    "end": "691279"
  },
  {
    "text": "in the platform services for example",
    "start": "691279",
    "end": "694720"
  },
  {
    "text": "you might want to provide the same dns",
    "start": "694720",
    "end": "696560"
  },
  {
    "text": "tooling to everyone on",
    "start": "696560",
    "end": "698480"
  },
  {
    "text": "your cluster but that doesn't mean that",
    "start": "698480",
    "end": "701120"
  },
  {
    "text": "you want all tenants to be able to",
    "start": "701120",
    "end": "703040"
  },
  {
    "text": "discover",
    "start": "703040",
    "end": "703680"
  },
  {
    "text": "each other's services um so there might",
    "start": "703680",
    "end": "706800"
  },
  {
    "text": "be additional constraints you built into",
    "start": "706800",
    "end": "708959"
  },
  {
    "text": "the platform services",
    "start": "708959",
    "end": "710560"
  },
  {
    "text": "to make sure that everyone has the tools",
    "start": "710560",
    "end": "713920"
  },
  {
    "text": "that they need",
    "start": "713920",
    "end": "714880"
  },
  {
    "text": "to to run their applications but",
    "start": "714880",
    "end": "718000"
  },
  {
    "text": "that users don't actually have access to",
    "start": "718000",
    "end": "721279"
  },
  {
    "text": "other users data",
    "start": "721279",
    "end": "722639"
  },
  {
    "text": "or other users and information such as",
    "start": "722639",
    "end": "725519"
  },
  {
    "text": "you know their metrics or logs coming",
    "start": "725519",
    "end": "728079"
  },
  {
    "text": "from an application owned by someone",
    "start": "728079",
    "end": "729680"
  },
  {
    "text": "else",
    "start": "729680",
    "end": "731440"
  },
  {
    "text": "so again foundational services which are",
    "start": "731440",
    "end": "734480"
  },
  {
    "text": "are definitely one of the benefits of",
    "start": "734480",
    "end": "736079"
  },
  {
    "text": "having a multi-tenant system to begin",
    "start": "736079",
    "end": "738560"
  },
  {
    "text": "with",
    "start": "738560",
    "end": "739360"
  },
  {
    "text": "but doesn't mean necessarily that",
    "start": "739360",
    "end": "743360"
  },
  {
    "text": "all information provided in this",
    "start": "743360",
    "end": "746000"
  },
  {
    "text": "platform",
    "start": "746000",
    "end": "746880"
  },
  {
    "text": "level is going to be shared with",
    "start": "746880",
    "end": "749920"
  },
  {
    "text": "all tenants okay",
    "start": "749920",
    "end": "753440"
  },
  {
    "text": "so the namespace primitive",
    "start": "753440",
    "end": "756720"
  },
  {
    "text": "is the the key way for enforcing",
    "start": "756720",
    "end": "759839"
  },
  {
    "text": "and implementing isolation at each layer",
    "start": "759839",
    "end": "763279"
  },
  {
    "text": "um kubernetes doesn't define what a mult",
    "start": "763279",
    "end": "767120"
  },
  {
    "text": "tenant is in a multi-tenant architecture",
    "start": "767120",
    "end": "770240"
  },
  {
    "text": "so it's really up to you to to come up",
    "start": "770240",
    "end": "772880"
  },
  {
    "text": "with a model that makes sense",
    "start": "772880",
    "end": "775040"
  },
  {
    "text": "um for example you could have",
    "start": "775040",
    "end": "778480"
  },
  {
    "text": "you know namespaces divided by a user",
    "start": "778480",
    "end": "782079"
  },
  {
    "text": "each user on your platform has their own",
    "start": "782079",
    "end": "784480"
  },
  {
    "text": "namespace",
    "start": "784480",
    "end": "785600"
  },
  {
    "text": "or maybe your tenant is",
    "start": "785600",
    "end": "789519"
  },
  {
    "text": "a team within your organization or maybe",
    "start": "789519",
    "end": "792800"
  },
  {
    "text": "your tenant is actually different",
    "start": "792800",
    "end": "794079"
  },
  {
    "text": "organizations all together",
    "start": "794079",
    "end": "797200"
  },
  {
    "text": "those are kind of user-based ways of",
    "start": "797200",
    "end": "798880"
  },
  {
    "text": "dividing up a cluster into different",
    "start": "798880",
    "end": "801519"
  },
  {
    "text": "name spaces and defining what a tenant",
    "start": "801519",
    "end": "803680"
  },
  {
    "text": "means",
    "start": "803680",
    "end": "804079"
  },
  {
    "text": "to you other examples are you could also",
    "start": "804079",
    "end": "806800"
  },
  {
    "text": "have different name spaces for",
    "start": "806800",
    "end": "808399"
  },
  {
    "text": "for different environments such as you",
    "start": "808399",
    "end": "810000"
  },
  {
    "text": "know a qa staging or production",
    "start": "810000",
    "end": "812320"
  },
  {
    "text": "environment",
    "start": "812320",
    "end": "813519"
  },
  {
    "text": "you could have different name spaces for",
    "start": "813519",
    "end": "815120"
  },
  {
    "text": "different applications if you have",
    "start": "815120",
    "end": "817440"
  },
  {
    "text": "you know a different microservices may",
    "start": "817440",
    "end": "820079"
  },
  {
    "text": "choose to live in",
    "start": "820079",
    "end": "821360"
  },
  {
    "text": "in their own namespace so a lot of",
    "start": "821360",
    "end": "824399"
  },
  {
    "text": "different ways",
    "start": "824399",
    "end": "826000"
  },
  {
    "text": "to divide up um what attendant means and",
    "start": "826000",
    "end": "830000"
  },
  {
    "text": "kubernetes is not prescriptive about it",
    "start": "830000",
    "end": "832720"
  },
  {
    "text": "but namespaces in general is a is a",
    "start": "832720",
    "end": "835199"
  },
  {
    "text": "foundational",
    "start": "835199",
    "end": "836720"
  },
  {
    "text": "abstraction that allows you to to define",
    "start": "836720",
    "end": "839519"
  },
  {
    "text": "what a tenant is within your own uh",
    "start": "839519",
    "end": "841920"
  },
  {
    "text": "system",
    "start": "841920",
    "end": "844320"
  },
  {
    "text": "okay so the namespace",
    "start": "845040",
    "end": "848399"
  },
  {
    "text": "allows you to organize your cluster and",
    "start": "848399",
    "end": "850800"
  },
  {
    "text": "define",
    "start": "850800",
    "end": "851760"
  },
  {
    "text": "what attendant means and then who gets",
    "start": "851760",
    "end": "854079"
  },
  {
    "text": "to share",
    "start": "854079",
    "end": "855519"
  },
  {
    "text": "this what policies but a namespace by",
    "start": "855519",
    "end": "858079"
  },
  {
    "text": "itself doesn't create those policies so",
    "start": "858079",
    "end": "860399"
  },
  {
    "text": "there's no",
    "start": "860399",
    "end": "861199"
  },
  {
    "text": "no restrictions when you create a",
    "start": "861199",
    "end": "862639"
  },
  {
    "text": "namespace on whether or not",
    "start": "862639",
    "end": "864800"
  },
  {
    "text": "a user of that namespace contributes to",
    "start": "864800",
    "end": "866880"
  },
  {
    "text": "another namespace",
    "start": "866880",
    "end": "868240"
  },
  {
    "text": "so in order to actually implement",
    "start": "868240",
    "end": "871760"
  },
  {
    "text": "different isolation levels you actually",
    "start": "871760",
    "end": "874639"
  },
  {
    "text": "have to",
    "start": "874639",
    "end": "875920"
  },
  {
    "text": "add on the the policies that are",
    "start": "875920",
    "end": "877920"
  },
  {
    "text": "supported",
    "start": "877920",
    "end": "879199"
  },
  {
    "text": "by the kubernetes tooling to",
    "start": "879199",
    "end": "882480"
  },
  {
    "text": "onto the name spaces so that you can",
    "start": "882480",
    "end": "884560"
  },
  {
    "text": "have them",
    "start": "884560",
    "end": "885519"
  },
  {
    "text": "so examples of controls that are",
    "start": "885519",
    "end": "889279"
  },
  {
    "text": "relevant and potentially interesting is",
    "start": "889279",
    "end": "891839"
  },
  {
    "text": "um",
    "start": "891839",
    "end": "893040"
  },
  {
    "text": "one using row-based access control to",
    "start": "893040",
    "end": "896160"
  },
  {
    "text": "grant access to to namespaces",
    "start": "896160",
    "end": "898560"
  },
  {
    "text": "and authorize you know resources and",
    "start": "898560",
    "end": "901760"
  },
  {
    "text": "authorize api",
    "start": "901760",
    "end": "902800"
  },
  {
    "text": "access so at a basic layer maybe you",
    "start": "902800",
    "end": "905600"
  },
  {
    "text": "know in namespace a",
    "start": "905600",
    "end": "907040"
  },
  {
    "text": "these are these are the you know users",
    "start": "907040",
    "end": "910079"
  },
  {
    "text": "that can access namespace a but cannot",
    "start": "910079",
    "end": "912000"
  },
  {
    "text": "access namespace b and creating that",
    "start": "912000",
    "end": "914880"
  },
  {
    "text": "foundational",
    "start": "914880",
    "end": "916160"
  },
  {
    "text": "policy using things like resource quotas",
    "start": "916160",
    "end": "919839"
  },
  {
    "text": "at the name space level to constrain cpu",
    "start": "919839",
    "end": "922320"
  },
  {
    "text": "memory and storage so you might want to",
    "start": "922320",
    "end": "924800"
  },
  {
    "text": "restrict and limit",
    "start": "924800",
    "end": "926399"
  },
  {
    "text": "quotas on a given name space because as",
    "start": "926399",
    "end": "928560"
  },
  {
    "text": "we sort of talked about before",
    "start": "928560",
    "end": "930560"
  },
  {
    "text": "um the worker nodes are all",
    "start": "930560",
    "end": "933680"
  },
  {
    "text": "shared uh and when because the worker",
    "start": "933680",
    "end": "936959"
  },
  {
    "text": "nodes are all shared",
    "start": "936959",
    "end": "938240"
  },
  {
    "text": "you could theoretically have a situation",
    "start": "938240",
    "end": "940560"
  },
  {
    "text": "where one namespace",
    "start": "940560",
    "end": "942000"
  },
  {
    "text": "consumes all the resources and",
    "start": "942000",
    "end": "945600"
  },
  {
    "text": "namespace b is unable to to launch pods",
    "start": "945600",
    "end": "948880"
  },
  {
    "text": "you don't really want that so you want",
    "start": "948880",
    "end": "950399"
  },
  {
    "text": "to be able to constrain",
    "start": "950399",
    "end": "952160"
  },
  {
    "text": "cpu memory storage at the namespace",
    "start": "952160",
    "end": "954959"
  },
  {
    "text": "layer",
    "start": "954959",
    "end": "955440"
  },
  {
    "text": "and and implement those kind of quotas",
    "start": "955440",
    "end": "958399"
  },
  {
    "text": "um",
    "start": "958399",
    "end": "959519"
  },
  {
    "text": "one really interesting and frequent use",
    "start": "959519",
    "end": "961440"
  },
  {
    "text": "case is you might",
    "start": "961440",
    "end": "962639"
  },
  {
    "text": "need to tie certain nodes to a",
    "start": "962639",
    "end": "966240"
  },
  {
    "text": "particular namespace like i have done",
    "start": "966240",
    "end": "968240"
  },
  {
    "text": "in this diagram that doesn't come by",
    "start": "968240",
    "end": "971120"
  },
  {
    "text": "default",
    "start": "971120",
    "end": "972000"
  },
  {
    "text": "but you can definitely use the pod node",
    "start": "972000",
    "end": "974639"
  },
  {
    "text": "selector",
    "start": "974639",
    "end": "976399"
  },
  {
    "text": "to implement a way such that certain",
    "start": "976399",
    "end": "979519"
  },
  {
    "text": "pods are only launched on certain nodes",
    "start": "979519",
    "end": "982800"
  },
  {
    "text": "for a given name space so those are",
    "start": "982800",
    "end": "984800"
  },
  {
    "text": "examples of",
    "start": "984800",
    "end": "986560"
  },
  {
    "text": "controls that could be potentially",
    "start": "986560",
    "end": "987920"
  },
  {
    "text": "useful in creating isolation",
    "start": "987920",
    "end": "990399"
  },
  {
    "text": "at the name space level and there's",
    "start": "990399",
    "end": "992720"
  },
  {
    "text": "plenty of",
    "start": "992720",
    "end": "994160"
  },
  {
    "text": "different things that you can do and",
    "start": "994160",
    "end": "995680"
  },
  {
    "text": "configure which are really interesting",
    "start": "995680",
    "end": "998079"
  },
  {
    "text": "within kubernetes",
    "start": "998079",
    "end": "1001199"
  },
  {
    "text": "okay so a note on",
    "start": "1001440",
    "end": "1004560"
  },
  {
    "text": "namespaces in most kubernetes",
    "start": "1004560",
    "end": "1006959"
  },
  {
    "text": "deployments tenants are authorized to",
    "start": "1006959",
    "end": "1008880"
  },
  {
    "text": "list",
    "start": "1008880",
    "end": "1009199"
  },
  {
    "text": "all name spaces on the cluster so",
    "start": "1009199",
    "end": "1012320"
  },
  {
    "text": "this is something that if your use case",
    "start": "1012320",
    "end": "1015360"
  },
  {
    "text": "requires tenants to not be aware of who",
    "start": "1015360",
    "end": "1018079"
  },
  {
    "text": "else is on the cluster",
    "start": "1018079",
    "end": "1019680"
  },
  {
    "text": "name spaces might not be the isolation",
    "start": "1019680",
    "end": "1022480"
  },
  {
    "text": "level that works for you",
    "start": "1022480",
    "end": "1024160"
  },
  {
    "text": "and there are other tools there are",
    "start": "1024160",
    "end": "1025839"
  },
  {
    "text": "other open source tools",
    "start": "1025839",
    "end": "1027760"
  },
  {
    "text": "available that you might need to look",
    "start": "1027760",
    "end": "1029280"
  },
  {
    "text": "into",
    "start": "1029280",
    "end": "1031520"
  },
  {
    "text": "the other key thing that i want to",
    "start": "1032640",
    "end": "1035918"
  },
  {
    "text": "talk about is i sort of mentioned",
    "start": "1035919",
    "end": "1038400"
  },
  {
    "text": "resource",
    "start": "1038400",
    "end": "1039038"
  },
  {
    "text": "quotas but oftentimes when we talk about",
    "start": "1039039",
    "end": "1042400"
  },
  {
    "text": "isolation we think about",
    "start": "1042400",
    "end": "1044079"
  },
  {
    "text": "just security and and role-based access",
    "start": "1044079",
    "end": "1046880"
  },
  {
    "text": "control",
    "start": "1046880",
    "end": "1047438"
  },
  {
    "text": "and who has access to what apis but it's",
    "start": "1047439",
    "end": "1050480"
  },
  {
    "text": "really important to isolate and restrain",
    "start": "1050480",
    "end": "1053280"
  },
  {
    "text": "resource consumption",
    "start": "1053280",
    "end": "1054960"
  },
  {
    "text": "because you could have a scenario where",
    "start": "1054960",
    "end": "1057360"
  },
  {
    "text": "one tenant",
    "start": "1057360",
    "end": "1058480"
  },
  {
    "text": "uh whether maliciously or",
    "start": "1058480",
    "end": "1060880"
  },
  {
    "text": "unintentionally",
    "start": "1060880",
    "end": "1062000"
  },
  {
    "text": "abuses the the resources on the cluster",
    "start": "1062000",
    "end": "1064400"
  },
  {
    "text": "overloads it",
    "start": "1064400",
    "end": "1065600"
  },
  {
    "text": "and that will impact all the other",
    "start": "1065600",
    "end": "1067919"
  },
  {
    "text": "tenants on the cluster",
    "start": "1067919",
    "end": "1069360"
  },
  {
    "text": "if it causes the cluster to go down",
    "start": "1069360",
    "end": "1073200"
  },
  {
    "text": "and one of the goals of multi-tenancy is",
    "start": "1073200",
    "end": "1075360"
  },
  {
    "text": "that you want",
    "start": "1075360",
    "end": "1077039"
  },
  {
    "text": "different tenants to be able to function",
    "start": "1077039",
    "end": "1080240"
  },
  {
    "text": "without being impacted by other tenants",
    "start": "1080240",
    "end": "1082960"
  },
  {
    "text": "so kubernetes is a great",
    "start": "1082960",
    "end": "1084559"
  },
  {
    "text": "api priority and fairness documentation",
    "start": "1084559",
    "end": "1087600"
  },
  {
    "text": "on this",
    "start": "1087600",
    "end": "1088160"
  },
  {
    "text": "topic but these are really important",
    "start": "1088160",
    "end": "1090240"
  },
  {
    "text": "things to",
    "start": "1090240",
    "end": "1092000"
  },
  {
    "text": "implement in your deployment so that no",
    "start": "1092000",
    "end": "1094799"
  },
  {
    "text": "one",
    "start": "1094799",
    "end": "1095360"
  },
  {
    "text": "resource can sort of take everything",
    "start": "1095360",
    "end": "1097039"
  },
  {
    "text": "down",
    "start": "1097039",
    "end": "1099279"
  },
  {
    "text": "okay i'm going to talk a little bit more",
    "start": "1099360",
    "end": "1100960"
  },
  {
    "text": "at the container level",
    "start": "1100960",
    "end": "1102960"
  },
  {
    "text": "so containers overall create separation",
    "start": "1102960",
    "end": "1105760"
  },
  {
    "text": "between workloads even if they're hosted",
    "start": "1105760",
    "end": "1108000"
  },
  {
    "text": "on the the same node within",
    "start": "1108000",
    "end": "1111200"
  },
  {
    "text": "kubernetes uh containers run on pause",
    "start": "1111200",
    "end": "1114080"
  },
  {
    "text": "and each pod",
    "start": "1114080",
    "end": "1115200"
  },
  {
    "text": "is a logical unit of an application",
    "start": "1115200",
    "end": "1118720"
  },
  {
    "text": "and can actually contain one or more",
    "start": "1118720",
    "end": "1120559"
  },
  {
    "text": "containers and a pod is sort of deployed",
    "start": "1120559",
    "end": "1122720"
  },
  {
    "text": "onto",
    "start": "1122720",
    "end": "1123840"
  },
  {
    "text": "a node okay",
    "start": "1123840",
    "end": "1127760"
  },
  {
    "text": "containers by nature or we think of them",
    "start": "1127760",
    "end": "1130240"
  },
  {
    "text": "as developers we sort of think of them",
    "start": "1130240",
    "end": "1131919"
  },
  {
    "text": "as",
    "start": "1131919",
    "end": "1132320"
  },
  {
    "text": "vms they're isolated but you can",
    "start": "1132320",
    "end": "1135679"
  },
  {
    "text": "very easily break container isolation",
    "start": "1135679",
    "end": "1139840"
  },
  {
    "text": "i'm going to talk very specifically",
    "start": "1139840",
    "end": "1141520"
  },
  {
    "text": "about",
    "start": "1141520",
    "end": "1143840"
  },
  {
    "text": "containers running as root by",
    "start": "1143840",
    "end": "1147039"
  },
  {
    "text": "default containers run as root and",
    "start": "1147039",
    "end": "1150480"
  },
  {
    "text": "there's sort of as a reason for this",
    "start": "1150480",
    "end": "1152480"
  },
  {
    "text": "which is",
    "start": "1152480",
    "end": "1153520"
  },
  {
    "text": "you might need to run as root in order",
    "start": "1153520",
    "end": "1155120"
  },
  {
    "text": "to install software",
    "start": "1155120",
    "end": "1156720"
  },
  {
    "text": "and um certain applications like nginx",
    "start": "1156720",
    "end": "1160240"
  },
  {
    "text": "sort of run as route by default on the",
    "start": "1160240",
    "end": "1162080"
  },
  {
    "text": "server",
    "start": "1162080",
    "end": "1163440"
  },
  {
    "text": "but it's genuinely best practice",
    "start": "1163440",
    "end": "1167200"
  },
  {
    "text": "to to run as a non-root user and if you",
    "start": "1167200",
    "end": "1170240"
  },
  {
    "text": "do need to install",
    "start": "1170240",
    "end": "1171280"
  },
  {
    "text": "software on the container you can",
    "start": "1171280",
    "end": "1174400"
  },
  {
    "text": "install the software",
    "start": "1174400",
    "end": "1175360"
  },
  {
    "text": "first and then actually run the",
    "start": "1175360",
    "end": "1178640"
  },
  {
    "text": "application",
    "start": "1178640",
    "end": "1179440"
  },
  {
    "text": "as a non-root user so that's something",
    "start": "1179440",
    "end": "1182080"
  },
  {
    "text": "to to take note of",
    "start": "1182080",
    "end": "1184400"
  },
  {
    "text": "the other way that you can actually",
    "start": "1184400",
    "end": "1185919"
  },
  {
    "text": "break container isolation",
    "start": "1185919",
    "end": "1188240"
  },
  {
    "text": "is with any kind of vulnerabilities",
    "start": "1188240",
    "end": "1191600"
  },
  {
    "text": "built into",
    "start": "1191600",
    "end": "1193120"
  },
  {
    "text": "dependencies or or code that you're",
    "start": "1193120",
    "end": "1195840"
  },
  {
    "text": "installing onto your container",
    "start": "1195840",
    "end": "1197679"
  },
  {
    "text": "um so the way to sort of avoid that is",
    "start": "1197679",
    "end": "1200320"
  },
  {
    "text": "to",
    "start": "1200320",
    "end": "1201039"
  },
  {
    "text": "to scan your container for",
    "start": "1201039",
    "end": "1202640"
  },
  {
    "text": "vulnerabilities but it can be",
    "start": "1202640",
    "end": "1205280"
  },
  {
    "text": "really cumbersome if you have to scan",
    "start": "1205280",
    "end": "1208159"
  },
  {
    "text": "every single",
    "start": "1208159",
    "end": "1209039"
  },
  {
    "text": "container on every single cluster or",
    "start": "1209039",
    "end": "1211919"
  },
  {
    "text": "every single node",
    "start": "1211919",
    "end": "1214000"
  },
  {
    "text": "constantly so you actually want to be",
    "start": "1214000",
    "end": "1216320"
  },
  {
    "text": "able to",
    "start": "1216320",
    "end": "1217280"
  },
  {
    "text": "have an accurate scan at runtime so the",
    "start": "1217280",
    "end": "1220640"
  },
  {
    "text": "idea",
    "start": "1220640",
    "end": "1221120"
  },
  {
    "text": "behind this is you want to treat your",
    "start": "1221120",
    "end": "1222960"
  },
  {
    "text": "containers as",
    "start": "1222960",
    "end": "1224159"
  },
  {
    "text": "immutable objects and don't download",
    "start": "1224159",
    "end": "1227280"
  },
  {
    "text": "code on runtime that also means that you",
    "start": "1227280",
    "end": "1229919"
  },
  {
    "text": "wouldn't have to",
    "start": "1229919",
    "end": "1230640"
  },
  {
    "text": "run your containers as root on runtime",
    "start": "1230640",
    "end": "1234559"
  },
  {
    "text": "and be able to store",
    "start": "1234559",
    "end": "1238640"
  },
  {
    "text": "build your container and load it into a",
    "start": "1238640",
    "end": "1240799"
  },
  {
    "text": "container registry where you can just",
    "start": "1240799",
    "end": "1242720"
  },
  {
    "text": "scan",
    "start": "1242720",
    "end": "1243200"
  },
  {
    "text": "the containers in the container registry",
    "start": "1243200",
    "end": "1245600"
  },
  {
    "text": "and",
    "start": "1245600",
    "end": "1246720"
  },
  {
    "text": "scan for vulnerabilities there instead",
    "start": "1246720",
    "end": "1248640"
  },
  {
    "text": "of every container on the cluster",
    "start": "1248640",
    "end": "1251280"
  },
  {
    "text": "before the container itself is deployed",
    "start": "1251280",
    "end": "1254159"
  },
  {
    "text": "to",
    "start": "1254159",
    "end": "1254720"
  },
  {
    "text": "kubernetes or to your cluster",
    "start": "1254720",
    "end": "1258080"
  },
  {
    "text": "you can even use a tool like open policy",
    "start": "1258080",
    "end": "1261280"
  },
  {
    "text": "agent",
    "start": "1261280",
    "end": "1262080"
  },
  {
    "text": "which can actually enforce emission",
    "start": "1262080",
    "end": "1264640"
  },
  {
    "text": "control",
    "start": "1264640",
    "end": "1265840"
  },
  {
    "text": "based on the scan results coming out of",
    "start": "1265840",
    "end": "1268880"
  },
  {
    "text": "your vulnerability scan so that you're",
    "start": "1268880",
    "end": "1270640"
  },
  {
    "text": "not deploying",
    "start": "1270640",
    "end": "1272480"
  },
  {
    "text": "compromised containers to your cluster",
    "start": "1272480",
    "end": "1275919"
  },
  {
    "text": "okay",
    "start": "1275919",
    "end": "1276480"
  },
  {
    "text": "so those are sort of my you know two",
    "start": "1276480",
    "end": "1278480"
  },
  {
    "text": "really important things to highlight",
    "start": "1278480",
    "end": "1279840"
  },
  {
    "text": "about containers and container security",
    "start": "1279840",
    "end": "1281919"
  },
  {
    "text": "there's there's quite a lot more",
    "start": "1281919",
    "end": "1283840"
  },
  {
    "text": "and i've left some resources at the end",
    "start": "1283840",
    "end": "1285520"
  },
  {
    "text": "in case you want to read up more on",
    "start": "1285520",
    "end": "1287280"
  },
  {
    "text": "container isolation container security",
    "start": "1287280",
    "end": "1290000"
  },
  {
    "text": "but i'm going to deep dive into",
    "start": "1290000",
    "end": "1291760"
  },
  {
    "text": "a use case from the team that i worked",
    "start": "1291760",
    "end": "1294720"
  },
  {
    "text": "with at the university of chicago",
    "start": "1294720",
    "end": "1297440"
  },
  {
    "text": "on the pod level isolation that we",
    "start": "1297440",
    "end": "1299919"
  },
  {
    "text": "needed",
    "start": "1299919",
    "end": "1301919"
  },
  {
    "text": "so our use case was that we were",
    "start": "1301919",
    "end": "1303679"
  },
  {
    "text": "enabling users to launch",
    "start": "1303679",
    "end": "1305600"
  },
  {
    "text": "their own jupyter notebooks into",
    "start": "1305600",
    "end": "1308799"
  },
  {
    "text": "in a browser setting so that they can",
    "start": "1308799",
    "end": "1310480"
  },
  {
    "text": "run analysis on biomedical data",
    "start": "1310480",
    "end": "1313840"
  },
  {
    "text": "and the flow on the backend kind of",
    "start": "1313840",
    "end": "1315919"
  },
  {
    "text": "looked like",
    "start": "1315919",
    "end": "1316880"
  },
  {
    "text": "this the user would go to a web",
    "start": "1316880",
    "end": "1319360"
  },
  {
    "text": "application",
    "start": "1319360",
    "end": "1320320"
  },
  {
    "text": "where they would request a jupyter",
    "start": "1320320",
    "end": "1322720"
  },
  {
    "text": "notebook",
    "start": "1322720",
    "end": "1323679"
  },
  {
    "text": "and they would be told what the cpu and",
    "start": "1323679",
    "end": "1327840"
  },
  {
    "text": "memory constraint is",
    "start": "1327840",
    "end": "1329520"
  },
  {
    "text": "behind the scenes we had an application",
    "start": "1329520",
    "end": "1332320"
  },
  {
    "text": "called",
    "start": "1332320",
    "end": "1332880"
  },
  {
    "text": "hatchery that would call the kubernetes",
    "start": "1332880",
    "end": "1336400"
  },
  {
    "text": "api",
    "start": "1336400",
    "end": "1337440"
  },
  {
    "text": "and launch a distinct pod for that user",
    "start": "1337440",
    "end": "1340799"
  },
  {
    "text": "and this pod is assigned to to that user",
    "start": "1340799",
    "end": "1343440"
  },
  {
    "text": "it actually has a persistent volume",
    "start": "1343440",
    "end": "1345280"
  },
  {
    "text": "backing it up",
    "start": "1345280",
    "end": "1346240"
  },
  {
    "text": "for storing the jupiter notebook as well",
    "start": "1346240",
    "end": "1350400"
  },
  {
    "text": "this pod launches the our own",
    "start": "1350400",
    "end": "1353600"
  },
  {
    "text": "image of the jupiter notebook",
    "start": "1353600",
    "end": "1357120"
  },
  {
    "text": "and is isolated from the other pods",
    "start": "1357120",
    "end": "1361520"
  },
  {
    "text": "the user is able to execute code and",
    "start": "1361520",
    "end": "1364720"
  },
  {
    "text": "in terms of what they're executing on",
    "start": "1364720",
    "end": "1366480"
  },
  {
    "text": "the jupyter notebook but cannot access",
    "start": "1366480",
    "end": "1369039"
  },
  {
    "text": "things like the kubernetes api or",
    "start": "1369039",
    "end": "1371120"
  },
  {
    "text": "internal apis",
    "start": "1371120",
    "end": "1374480"
  },
  {
    "text": "so at a high level this is sort of what",
    "start": "1374480",
    "end": "1376799"
  },
  {
    "text": "i just described",
    "start": "1376799",
    "end": "1378400"
  },
  {
    "text": "hatchery is the open source tool",
    "start": "1378400",
    "end": "1381600"
  },
  {
    "text": "that will deploy a pi to kubernetes so",
    "start": "1381600",
    "end": "1384960"
  },
  {
    "text": "that the user can execute their own code",
    "start": "1384960",
    "end": "1387760"
  },
  {
    "text": "but",
    "start": "1387760",
    "end": "1388080"
  },
  {
    "text": "hatchery in that process denies the user",
    "start": "1388080",
    "end": "1391600"
  },
  {
    "text": "or that pod",
    "start": "1391600",
    "end": "1392559"
  },
  {
    "text": "access to the kubernetes api and",
    "start": "1392559",
    "end": "1394640"
  },
  {
    "text": "internal apis",
    "start": "1394640",
    "end": "1396000"
  },
  {
    "text": "through network policies and it also",
    "start": "1396000",
    "end": "1398960"
  },
  {
    "text": "imposes a constraint",
    "start": "1398960",
    "end": "1400480"
  },
  {
    "text": "on cpu and memory usage per pod so that",
    "start": "1400480",
    "end": "1403760"
  },
  {
    "text": "in case there is a really heavy workload",
    "start": "1403760",
    "end": "1406400"
  },
  {
    "text": "on a particular jupiter notebook that",
    "start": "1406400",
    "end": "1409360"
  },
  {
    "text": "you know maybe a user is running",
    "start": "1409360",
    "end": "1411039"
  },
  {
    "text": "a heavy computation on on data",
    "start": "1411039",
    "end": "1414640"
  },
  {
    "text": "a single pot cannot over use resources",
    "start": "1414640",
    "end": "1418240"
  },
  {
    "text": "and and take down the",
    "start": "1418240",
    "end": "1420000"
  },
  {
    "text": "entire node or even the entire cluster",
    "start": "1420000",
    "end": "1424559"
  },
  {
    "text": "um so that's sort of it uh for my talk i",
    "start": "1424720",
    "end": "1428559"
  },
  {
    "text": "like i mentioned before there's a lot of",
    "start": "1428559",
    "end": "1430480"
  },
  {
    "text": "really great resources in case you do",
    "start": "1430480",
    "end": "1432480"
  },
  {
    "text": "want to be",
    "start": "1432480",
    "end": "1433440"
  },
  {
    "text": "uh learn more i'm going to call out",
    "start": "1433440",
    "end": "1435679"
  },
  {
    "text": "running with scissors which is a",
    "start": "1435679",
    "end": "1437760"
  },
  {
    "text": "talk by liz price um at a go at go con",
    "start": "1437760",
    "end": "1441600"
  },
  {
    "text": "gophercon where she did talk a lot about",
    "start": "1441600",
    "end": "1444240"
  },
  {
    "text": "um",
    "start": "1444240",
    "end": "1445039"
  },
  {
    "text": "you know containers and root access",
    "start": "1445039",
    "end": "1448080"
  },
  {
    "text": "and i also want to call it hatchery the",
    "start": "1448080",
    "end": "1451039"
  },
  {
    "text": "open source project which is",
    "start": "1451039",
    "end": "1452559"
  },
  {
    "text": "on github okay",
    "start": "1452559",
    "end": "1455679"
  },
  {
    "text": "i think the thing that i want to leave",
    "start": "1455679",
    "end": "1457440"
  },
  {
    "text": "you with is that kubernetes gives you a",
    "start": "1457440",
    "end": "1459679"
  },
  {
    "text": "lot of tools to come up with",
    "start": "1459679",
    "end": "1461919"
  },
  {
    "text": "um you know different ways uh",
    "start": "1461919",
    "end": "1464240"
  },
  {
    "text": "constraints different ways to add",
    "start": "1464240",
    "end": "1466000"
  },
  {
    "text": "isolation",
    "start": "1466000",
    "end": "1467919"
  },
  {
    "text": "at the pod level at the name space level",
    "start": "1467919",
    "end": "1472080"
  },
  {
    "text": "at the cluster level but it's really up",
    "start": "1472080",
    "end": "1474720"
  },
  {
    "text": "to you to come up with a model for",
    "start": "1474720",
    "end": "1476480"
  },
  {
    "text": "multi-tenancy",
    "start": "1476480",
    "end": "1477600"
  },
  {
    "text": "and and isolation that makes sense to",
    "start": "1477600",
    "end": "1480880"
  },
  {
    "text": "you and your team and make sense for the",
    "start": "1480880",
    "end": "1482880"
  },
  {
    "text": "broader architecture for what for which",
    "start": "1482880",
    "end": "1485120"
  },
  {
    "text": "your deployment your kubernetes",
    "start": "1485120",
    "end": "1486640"
  },
  {
    "text": "deployment",
    "start": "1486640",
    "end": "1487279"
  },
  {
    "text": "is in and it's really important to",
    "start": "1487279",
    "end": "1489840"
  },
  {
    "text": "decide",
    "start": "1489840",
    "end": "1490640"
  },
  {
    "text": "what those tradeoffs are and understand",
    "start": "1490640",
    "end": "1492640"
  },
  {
    "text": "them because you don't want to over",
    "start": "1492640",
    "end": "1494559"
  },
  {
    "text": "engineer your deployment you don't want",
    "start": "1494559",
    "end": "1497760"
  },
  {
    "text": "to over engineer your application",
    "start": "1497760",
    "end": "1500559"
  },
  {
    "text": "but i'm hoping that at least in this",
    "start": "1500559",
    "end": "1502159"
  },
  {
    "text": "talk it gave you a sense of what",
    "start": "1502159",
    "end": "1504000"
  },
  {
    "text": "you know basic kubernetes tools and",
    "start": "1504000",
    "end": "1507679"
  },
  {
    "text": "container level tools you can leverage",
    "start": "1507679",
    "end": "1510000"
  },
  {
    "text": "to implement what you need",
    "start": "1510000",
    "end": "1512159"
  },
  {
    "text": "thanks everyone bye",
    "start": "1512159",
    "end": "1515840"
  }
]