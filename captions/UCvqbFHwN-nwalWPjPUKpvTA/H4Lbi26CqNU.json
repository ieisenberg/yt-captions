[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "hi i'm kohei tukunaga from ntt",
    "start": "240",
    "end": "3280"
  },
  {
    "text": "i'm mainly working in the consumer",
    "start": "3280",
    "end": "5520"
  },
  {
    "text": "runtime and",
    "start": "5520",
    "end": "6720"
  },
  {
    "text": "a maintenance of sergio snapshot project",
    "start": "6720",
    "end": "10400"
  },
  {
    "text": "which is known for the project of",
    "start": "10400",
    "end": "12559"
  },
  {
    "text": "contrary",
    "start": "12559",
    "end": "14400"
  },
  {
    "text": "today i'm going to talk about speeding",
    "start": "14400",
    "end": "17440"
  },
  {
    "text": "up continuous startup by lazy bullying",
    "start": "17440",
    "end": "20000"
  },
  {
    "text": "images",
    "start": "20000",
    "end": "21760"
  },
  {
    "text": "first of all let's get to the summary of",
    "start": "21760",
    "end": "24400"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "this talk",
    "start": "24400",
    "end": "26640"
  },
  {
    "text": "is one of the time consuming steps in",
    "start": "26640",
    "end": "29199"
  },
  {
    "text": "container lifecycle",
    "start": "29199",
    "end": "31279"
  },
  {
    "text": "sergeant snapshot nokwasa project of",
    "start": "31279",
    "end": "34399"
  },
  {
    "text": "contendi",
    "start": "34399",
    "end": "35600"
  },
  {
    "text": "is trying to solve it by lazy playing",
    "start": "35600",
    "end": "38480"
  },
  {
    "text": "images",
    "start": "38480",
    "end": "39280"
  },
  {
    "text": "leveraging storage image by google",
    "start": "39280",
    "end": "42879"
  },
  {
    "text": "for further runtime optimization is also",
    "start": "42879",
    "end": "45680"
  },
  {
    "text": "held",
    "start": "45680",
    "end": "46399"
  },
  {
    "text": "with an extended version of storages",
    "start": "46399",
    "end": "49840"
  },
  {
    "text": "which is called easter egg",
    "start": "49840",
    "end": "53440"
  },
  {
    "text": "the diagram shows the container startup",
    "start": "53440",
    "end": "56879"
  },
  {
    "text": "performance for three types of personal",
    "start": "56879",
    "end": "60320"
  },
  {
    "text": "3.7 images",
    "start": "60320",
    "end": "62640"
  },
  {
    "text": "it pulls the image from docker half to",
    "start": "62640",
    "end": "65840"
  },
  {
    "text": "easy to oregon",
    "start": "65840",
    "end": "67520"
  },
  {
    "text": "and runs print hello world sergio",
    "start": "67520",
    "end": "71040"
  },
  {
    "text": "formulated",
    "start": "71040",
    "end": "71680"
  },
  {
    "text": "python image with storage's snapshot",
    "start": "71680",
    "end": "74720"
  },
  {
    "text": "reduces the time to take for poor",
    "start": "74720",
    "end": "77360"
  },
  {
    "text": "operation",
    "start": "77360",
    "end": "78640"
  },
  {
    "text": "by legible but run takes",
    "start": "78640",
    "end": "81759"
  },
  {
    "text": "longer than the legacy image",
    "start": "81759",
    "end": "85280"
  },
  {
    "text": "and each formatted image mitigates",
    "start": "85280",
    "end": "88880"
  },
  {
    "text": "the runtime performance drawback with",
    "start": "88880",
    "end": "91759"
  },
  {
    "text": "the optimization",
    "start": "91759",
    "end": "93840"
  },
  {
    "text": "and we will discuss in more detail with",
    "start": "93840",
    "end": "96400"
  },
  {
    "text": "the following slides",
    "start": "96400",
    "end": "99200"
  },
  {
    "text": "there are also other oca alternative",
    "start": "99200",
    "end": "102560"
  },
  {
    "text": "image distribution strategies",
    "start": "102560",
    "end": "104640"
  },
  {
    "text": "in container ecosystem so i'll briefly",
    "start": "104640",
    "end": "108000"
  },
  {
    "text": "introduce some of them in this talk",
    "start": "108000",
    "end": "112159"
  },
  {
    "start": "112000",
    "end": "112000"
  },
  {
    "text": "first of all don't you think that pool",
    "start": "113119",
    "end": "115759"
  },
  {
    "text": "is time consuming",
    "start": "115759",
    "end": "117280"
  },
  {
    "text": "as you know paul is one of the most",
    "start": "117280",
    "end": "120799"
  },
  {
    "text": "primitive operation for contrast and",
    "start": "120799",
    "end": "124479"
  },
  {
    "text": "it's very general workflow that we pull",
    "start": "124479",
    "end": "127600"
  },
  {
    "text": "continents",
    "start": "127600",
    "end": "128319"
  },
  {
    "text": "from registry then unpack and run them",
    "start": "128319",
    "end": "132000"
  },
  {
    "text": "on nodes but unfortunately",
    "start": "132000",
    "end": "135599"
  },
  {
    "text": "um a research shows that pulling",
    "start": "135599",
    "end": "138080"
  },
  {
    "text": "packages accounts for",
    "start": "138080",
    "end": "139440"
  },
  {
    "text": "76 percent of container start time",
    "start": "139440",
    "end": "143040"
  },
  {
    "text": "but only 6.4 percent of that data is",
    "start": "143040",
    "end": "146640"
  },
  {
    "text": "read",
    "start": "146640",
    "end": "148959"
  },
  {
    "text": "of course some work runs alone but",
    "start": "149360",
    "end": "152560"
  },
  {
    "text": "they are not enough actually we",
    "start": "152560",
    "end": "155599"
  },
  {
    "text": "can cache images on those but the first",
    "start": "155599",
    "end": "158959"
  },
  {
    "text": "time",
    "start": "158959",
    "end": "160080"
  },
  {
    "text": "of the pool called chord start",
    "start": "160080",
    "end": "163760"
  },
  {
    "text": "is still slow and we can also try to",
    "start": "163760",
    "end": "167519"
  },
  {
    "text": "minimize",
    "start": "167519",
    "end": "168239"
  },
  {
    "text": "image size but not all images are easily",
    "start": "168239",
    "end": "171760"
  },
  {
    "text": "minimizable",
    "start": "171760",
    "end": "173440"
  },
  {
    "text": "let's say we cannot avoid using some",
    "start": "173440",
    "end": "176239"
  },
  {
    "text": "large",
    "start": "176239",
    "end": "177120"
  },
  {
    "text": "base images including language runtimes",
    "start": "177120",
    "end": "180560"
  },
  {
    "text": "frameworks etc",
    "start": "180560",
    "end": "185840"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "before taking deeper look at the pool",
    "start": "186319",
    "end": "188879"
  },
  {
    "text": "performance problem",
    "start": "188879",
    "end": "190720"
  },
  {
    "text": "let's briefly recap the oci docker specs",
    "start": "190720",
    "end": "195120"
  },
  {
    "text": "for",
    "start": "195120",
    "end": "195519"
  },
  {
    "text": "image distribution",
    "start": "195519",
    "end": "198959"
  },
  {
    "text": "in the specs a container is defined",
    "start": "198959",
    "end": "202239"
  },
  {
    "text": "as a set of layers in image spec",
    "start": "202239",
    "end": "206400"
  },
  {
    "text": "it defines layers and metadata",
    "start": "206400",
    "end": "210319"
  },
  {
    "text": "and in metadata yeah image manifest",
    "start": "210319",
    "end": "214239"
  },
  {
    "text": "etc are contained and",
    "start": "214239",
    "end": "218319"
  },
  {
    "text": "layer is defined as star and optionally",
    "start": "218319",
    "end": "221200"
  },
  {
    "text": "plus compression",
    "start": "221200",
    "end": "222879"
  },
  {
    "text": "and bluetooth can be composed",
    "start": "222879",
    "end": "226319"
  },
  {
    "text": "by merging layers",
    "start": "226319",
    "end": "229840"
  },
  {
    "text": "in distribution spec it defines",
    "start": "230080",
    "end": "234080"
  },
  {
    "text": "http api of registry and layer",
    "start": "234080",
    "end": "238000"
  },
  {
    "text": "can be fetched as a blob named",
    "start": "238000",
    "end": "241120"
  },
  {
    "text": "with a content addressable digest",
    "start": "241120",
    "end": "245040"
  },
  {
    "text": "and registries optionally support",
    "start": "245040",
    "end": "248319"
  },
  {
    "text": "http range request which enables us to",
    "start": "248319",
    "end": "252080"
  },
  {
    "text": "fetch the person ranges in the blob on",
    "start": "252080",
    "end": "255519"
  },
  {
    "text": "the registry",
    "start": "255519",
    "end": "258320"
  },
  {
    "start": "258000",
    "end": "258000"
  },
  {
    "text": "and when it comes to pull performance",
    "start": "260400",
    "end": "264479"
  },
  {
    "text": "there is a problem on the current oci",
    "start": "264479",
    "end": "268160"
  },
  {
    "text": "docker specs",
    "start": "268160",
    "end": "270320"
  },
  {
    "text": "a continent is a set of terrible layers",
    "start": "270320",
    "end": "274720"
  },
  {
    "text": "so a container can be",
    "start": "274720",
    "end": "277840"
  },
  {
    "text": "started until the all layers",
    "start": "277840",
    "end": "281680"
  },
  {
    "text": "become locally available even if the",
    "start": "281680",
    "end": "284320"
  },
  {
    "text": "most of the contents won't be used",
    "start": "284320",
    "end": "286639"
  },
  {
    "text": "on container startup",
    "start": "286639",
    "end": "290080"
  },
  {
    "text": "as shown in the diagram a layer blob",
    "start": "290080",
    "end": "294160"
  },
  {
    "text": "is defined as a table optionally plus",
    "start": "294160",
    "end": "297360"
  },
  {
    "text": "compression",
    "start": "297360",
    "end": "299919"
  },
  {
    "text": "this means we need to scan the entire",
    "start": "299919",
    "end": "303280"
  },
  {
    "text": "blob",
    "start": "303280",
    "end": "304639"
  },
  {
    "text": "even for extracting single file entry",
    "start": "304639",
    "end": "308560"
  },
  {
    "text": "if the blob is gzip compressed it's not",
    "start": "308560",
    "end": "311919"
  },
  {
    "text": "seekable anymore",
    "start": "311919",
    "end": "313680"
  },
  {
    "text": "and we cannot",
    "start": "313680",
    "end": "317039"
  },
  {
    "text": "extract it in parallel so we need to",
    "start": "317039",
    "end": "320639"
  },
  {
    "text": "scan",
    "start": "320639",
    "end": "321680"
  },
  {
    "text": "the blob from the top sequentially",
    "start": "321680",
    "end": "325120"
  },
  {
    "text": "because of them we need to wait long",
    "start": "325120",
    "end": "328160"
  },
  {
    "text": "time for the poll and extraction",
    "start": "328160",
    "end": "330960"
  },
  {
    "text": "completion",
    "start": "330960",
    "end": "332240"
  },
  {
    "text": "on container startup",
    "start": "332240",
    "end": "338000"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "storage is snapshot is a non-quanta",
    "start": "338000",
    "end": "341280"
  },
  {
    "text": "project of container d",
    "start": "341280",
    "end": "343440"
  },
  {
    "text": "and continuity is a consumer runtime",
    "start": "343440",
    "end": "345919"
  },
  {
    "text": "project",
    "start": "345919",
    "end": "346479"
  },
  {
    "text": "in cncf which is also used by docker",
    "start": "346479",
    "end": "351280"
  },
  {
    "text": "storage exit snapshot is a plugin for",
    "start": "351280",
    "end": "353840"
  },
  {
    "text": "content id",
    "start": "353840",
    "end": "354800"
  },
  {
    "text": "which provides lazy pool functionality",
    "start": "354800",
    "end": "357280"
  },
  {
    "text": "for quantity",
    "start": "357280",
    "end": "358639"
  },
  {
    "text": "and lazy pro here means continuity",
    "start": "358639",
    "end": "361440"
  },
  {
    "text": "doesn't download",
    "start": "361440",
    "end": "363360"
  },
  {
    "text": "the entire image on pro operation but",
    "start": "363360",
    "end": "366240"
  },
  {
    "text": "fetches necessary chunks of contents on",
    "start": "366240",
    "end": "369039"
  },
  {
    "text": "demand",
    "start": "369039",
    "end": "371520"
  },
  {
    "text": "it means we can start continuous",
    "start": "372720",
    "end": "375919"
  },
  {
    "text": "before the entire image contents being",
    "start": "375919",
    "end": "378639"
  },
  {
    "text": "locally available",
    "start": "378639",
    "end": "380160"
  },
  {
    "text": "so we can speed up the container startup",
    "start": "380160",
    "end": "382880"
  },
  {
    "text": "performance",
    "start": "382880",
    "end": "384560"
  },
  {
    "text": "lazy pool installs the snapshot",
    "start": "384560",
    "end": "387680"
  },
  {
    "text": "level is started image by google",
    "start": "387680",
    "end": "391919"
  },
  {
    "text": "which is standard compliant so we can",
    "start": "391919",
    "end": "395120"
  },
  {
    "text": "laser pull images from",
    "start": "395120",
    "end": "396800"
  },
  {
    "text": "standard container registries including",
    "start": "396800",
    "end": "399919"
  },
  {
    "text": "docker hub",
    "start": "399919",
    "end": "402560"
  },
  {
    "text": "let's do the demo first",
    "start": "406000",
    "end": "409440"
  },
  {
    "text": "ipo python 3.7 image from docker hub",
    "start": "409440",
    "end": "413440"
  },
  {
    "text": "and run print hello world in the",
    "start": "413440",
    "end": "415759"
  },
  {
    "text": "container",
    "start": "415759",
    "end": "416800"
  },
  {
    "text": "with continuity in a very normal way",
    "start": "416800",
    "end": "420240"
  },
  {
    "text": "the image size is around 338",
    "start": "420240",
    "end": "423919"
  },
  {
    "text": "megabytes on the registry so protects",
    "start": "423919",
    "end": "427280"
  },
  {
    "text": "accordingly we need to wait for",
    "start": "427280",
    "end": "430319"
  },
  {
    "text": "pro long time and if the image",
    "start": "430319",
    "end": "433360"
  },
  {
    "text": "takes one gigabyte or two to a larger",
    "start": "433360",
    "end": "436479"
  },
  {
    "text": "we need to wait for longer and longer",
    "start": "436479",
    "end": "439440"
  },
  {
    "text": "sometimes",
    "start": "439440",
    "end": "440240"
  },
  {
    "text": "it's called chord start problem in this",
    "start": "440240",
    "end": "443520"
  },
  {
    "text": "case",
    "start": "443520",
    "end": "444880"
  },
  {
    "text": "the p will take about 32 seconds",
    "start": "444880",
    "end": "450400"
  },
  {
    "text": "next i lazily pull",
    "start": "450400",
    "end": "454000"
  },
  {
    "text": "started formatted python image from",
    "start": "454000",
    "end": "456479"
  },
  {
    "text": "docker hub",
    "start": "456479",
    "end": "458400"
  },
  {
    "text": "in this case the pool",
    "start": "458400",
    "end": "461440"
  },
  {
    "text": "took about seven point two seconds",
    "start": "461440",
    "end": "465919"
  },
  {
    "text": "it's a strategy formatted image but",
    "start": "465919",
    "end": "469120"
  },
  {
    "text": "not squashed no content is lost",
    "start": "469120",
    "end": "472400"
  },
  {
    "text": "this speeding up is the power of legible",
    "start": "472400",
    "end": "476400"
  },
  {
    "text": "i'm playing this image in tokyo and",
    "start": "476400",
    "end": "479440"
  },
  {
    "text": "if you are in different locations you",
    "start": "479440",
    "end": "481919"
  },
  {
    "text": "should get different",
    "start": "481919",
    "end": "482960"
  },
  {
    "text": "results for example in the benchmarking",
    "start": "482960",
    "end": "485919"
  },
  {
    "text": "results in oregon",
    "start": "485919",
    "end": "487280"
  },
  {
    "text": "which i will talk about later the time",
    "start": "487280",
    "end": "490240"
  },
  {
    "text": "to take for lazy pool it's shorter",
    "start": "490240",
    "end": "494400"
  },
  {
    "start": "495000",
    "end": "495000"
  },
  {
    "text": "so how lazy blue is provided storage",
    "start": "496720",
    "end": "500000"
  },
  {
    "text": "snapshot leverages storage used image",
    "start": "500000",
    "end": "502960"
  },
  {
    "text": "which is compatible to the current oci",
    "start": "502960",
    "end": "505680"
  },
  {
    "text": "docker image specs",
    "start": "505680",
    "end": "507680"
  },
  {
    "text": "which means the started",
    "start": "507680",
    "end": "511199"
  },
  {
    "text": "image can be lazily pulled from standard",
    "start": "511199",
    "end": "514479"
  },
  {
    "text": "registries",
    "start": "514479",
    "end": "515599"
  },
  {
    "text": "and it can also be run by legacy",
    "start": "515599",
    "end": "518240"
  },
  {
    "text": "runtimes",
    "start": "518240",
    "end": "519120"
  },
  {
    "text": "but in this case not lazily pulled",
    "start": "519120",
    "end": "523279"
  },
  {
    "text": "in the following diagram a registry is",
    "start": "523519",
    "end": "526480"
  },
  {
    "text": "shown",
    "start": "526480",
    "end": "527040"
  },
  {
    "text": "on the left side and the node is shown",
    "start": "527040",
    "end": "530160"
  },
  {
    "text": "on the right side",
    "start": "530160",
    "end": "531680"
  },
  {
    "text": "on the node sergi's snapshot is plugged",
    "start": "531680",
    "end": "535040"
  },
  {
    "text": "into continuity",
    "start": "535040",
    "end": "536959"
  },
  {
    "text": "for continuous spanned by continuity",
    "start": "536959",
    "end": "539600"
  },
  {
    "text": "strategic snapshot amounts",
    "start": "539600",
    "end": "541600"
  },
  {
    "text": "the continuous root fs snapshots as hues",
    "start": "541600",
    "end": "545680"
  },
  {
    "text": "on mount most of the layer content",
    "start": "545680",
    "end": "548880"
  },
  {
    "text": "are not downloaded yet instead",
    "start": "548880",
    "end": "552080"
  },
  {
    "text": "start this snapshot lazily downloads",
    "start": "552080",
    "end": "555360"
  },
  {
    "text": "file contents accessed by continents on",
    "start": "555360",
    "end": "558160"
  },
  {
    "text": "demand",
    "start": "558160",
    "end": "558959"
  },
  {
    "text": "from the standard registry",
    "start": "558959",
    "end": "562080"
  },
  {
    "text": "again strategic images are compliant to",
    "start": "562080",
    "end": "565760"
  },
  {
    "text": "oci docker so legacy runtimes",
    "start": "565760",
    "end": "569120"
  },
  {
    "text": "also can pull and run it from registries",
    "start": "569120",
    "end": "573279"
  },
  {
    "text": "again but in this case not lazy and",
    "start": "573279",
    "end": "576399"
  },
  {
    "text": "sorry this snapshot itself is",
    "start": "576399",
    "end": "579200"
  },
  {
    "text": "implemented",
    "start": "579200",
    "end": "580399"
  },
  {
    "text": "as a remote snapshot plugin",
    "start": "580399",
    "end": "583839"
  },
  {
    "text": "and remote snapshotter is a type of",
    "start": "583839",
    "end": "586640"
  },
  {
    "text": "plugin of continuity",
    "start": "586640",
    "end": "589519"
  },
  {
    "text": "id allows remote snapshots to remotely",
    "start": "589519",
    "end": "593120"
  },
  {
    "text": "mount",
    "start": "593120",
    "end": "594160"
  },
  {
    "text": "continuous rotofs snapshots from remote",
    "start": "594160",
    "end": "597440"
  },
  {
    "text": "store",
    "start": "597440",
    "end": "598480"
  },
  {
    "text": "to continence on the node so you can",
    "start": "598480",
    "end": "601120"
  },
  {
    "text": "also",
    "start": "601120",
    "end": "601600"
  },
  {
    "text": "implement your own remote snapshot if",
    "start": "601600",
    "end": "604640"
  },
  {
    "text": "you want to use",
    "start": "604640",
    "end": "605760"
  },
  {
    "text": "remote stores other than registry",
    "start": "605760",
    "end": "610079"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "so what is sturdy is it star gizet is an",
    "start": "616480",
    "end": "619760"
  },
  {
    "text": "archive or complexion format",
    "start": "619760",
    "end": "623120"
  },
  {
    "text": "it's proposed by google clfs project",
    "start": "623120",
    "end": "627600"
  },
  {
    "text": "sergey stands for seekable stickable",
    "start": "627600",
    "end": "630480"
  },
  {
    "text": "targeted so it's seekable",
    "start": "630480",
    "end": "633200"
  },
  {
    "text": "but still valid charges it",
    "start": "633200",
    "end": "636800"
  },
  {
    "text": "so it's usable as a valid oci docker",
    "start": "636800",
    "end": "640320"
  },
  {
    "text": "image layer and",
    "start": "640320",
    "end": "644079"
  },
  {
    "text": "entries can be extracted separately",
    "start": "644079",
    "end": "648320"
  },
  {
    "text": "so each entry can be fed separately",
    "start": "648320",
    "end": "652160"
  },
  {
    "text": "from registries using http range request",
    "start": "652160",
    "end": "657279"
  },
  {
    "text": "standard registries optionally but i",
    "start": "657279",
    "end": "660079"
  },
  {
    "text": "think most of registries",
    "start": "660079",
    "end": "662160"
  },
  {
    "text": "support http range request so",
    "start": "662160",
    "end": "665920"
  },
  {
    "text": "we can download blob contents profile",
    "start": "665920",
    "end": "668560"
  },
  {
    "text": "entry on demand",
    "start": "668560",
    "end": "669920"
  },
  {
    "text": "which enables us lazy image building",
    "start": "669920",
    "end": "673680"
  },
  {
    "text": "as shown in the following diagram the",
    "start": "673680",
    "end": "676399"
  },
  {
    "text": "normal",
    "start": "676399",
    "end": "677120"
  },
  {
    "text": "turgy that layer is not seekable",
    "start": "677120",
    "end": "680560"
  },
  {
    "text": "and we need to scan the entire blob even",
    "start": "680560",
    "end": "683279"
  },
  {
    "text": "for getting single entry",
    "start": "683279",
    "end": "685600"
  },
  {
    "text": "on the other hand surge searches it is",
    "start": "685600",
    "end": "688240"
  },
  {
    "text": "actually",
    "start": "688240",
    "end": "688880"
  },
  {
    "text": "the concatenation of gzip compressed",
    "start": "688880",
    "end": "691680"
  },
  {
    "text": "file entries",
    "start": "691680",
    "end": "693360"
  },
  {
    "text": "this is server gzip",
    "start": "693360",
    "end": "696800"
  },
  {
    "text": "so we can decompress it",
    "start": "696800",
    "end": "699839"
  },
  {
    "text": "in file or chunk granularity",
    "start": "699839",
    "end": "703519"
  },
  {
    "text": "and it contains an index called",
    "start": "703519",
    "end": "706720"
  },
  {
    "text": "toc at the tail of the strategic blob",
    "start": "706720",
    "end": "710480"
  },
  {
    "text": "so we can get the offset information",
    "start": "710480",
    "end": "713600"
  },
  {
    "text": "of each entry contained in the",
    "start": "713600",
    "end": "716399"
  },
  {
    "text": "sturgessed blob",
    "start": "716399",
    "end": "718560"
  },
  {
    "text": "toc also contains metadata of",
    "start": "718560",
    "end": "721839"
  },
  {
    "text": "all files stored in the star digit",
    "start": "721839",
    "end": "724800"
  },
  {
    "text": "archive",
    "start": "724800",
    "end": "725760"
  },
  {
    "text": "so we can mount this layer without",
    "start": "725760",
    "end": "728240"
  },
  {
    "text": "seeing each",
    "start": "728240",
    "end": "729440"
  },
  {
    "text": "header of each file",
    "start": "729440",
    "end": "732800"
  },
  {
    "start": "735000",
    "end": "735000"
  },
  {
    "text": "but network related overheads can't be",
    "start": "736320",
    "end": "738959"
  },
  {
    "text": "ignored",
    "start": "738959",
    "end": "740720"
  },
  {
    "text": "for only one fetching with charges",
    "start": "740720",
    "end": "743600"
  },
  {
    "text": "especially on slow networking",
    "start": "743600",
    "end": "745360"
  },
  {
    "text": "environment",
    "start": "745360",
    "end": "747920"
  },
  {
    "text": "because the read access to a file",
    "start": "748240",
    "end": "751760"
  },
  {
    "text": "on star gazette induces downloading that",
    "start": "751760",
    "end": "754880"
  },
  {
    "text": "file entry",
    "start": "754880",
    "end": "755839"
  },
  {
    "text": "from the registry estar did it",
    "start": "755839",
    "end": "760160"
  },
  {
    "text": "enables the profit files that are likely",
    "start": "760160",
    "end": "763279"
  },
  {
    "text": "accessed",
    "start": "763279",
    "end": "763920"
  },
  {
    "text": "during runtime and we call these files",
    "start": "763920",
    "end": "767600"
  },
  {
    "text": "as prioritized files and file system",
    "start": "767600",
    "end": "771760"
  },
  {
    "text": "can prefetch and pref pre-cache these",
    "start": "771760",
    "end": "774880"
  },
  {
    "text": "files",
    "start": "774880",
    "end": "775920"
  },
  {
    "text": "with a single http request range request",
    "start": "775920",
    "end": "779839"
  },
  {
    "text": "or mount",
    "start": "779839",
    "end": "782399"
  },
  {
    "text": "so we can access these prioritized files",
    "start": "783680",
    "end": "786880"
  },
  {
    "text": "locally as shown in the diagram",
    "start": "786880",
    "end": "789920"
  },
  {
    "text": "the strategy that allows to group file",
    "start": "789920",
    "end": "792800"
  },
  {
    "text": "entries",
    "start": "792800",
    "end": "793680"
  },
  {
    "text": "based on the priority let's say we know",
    "start": "793680",
    "end": "797920"
  },
  {
    "text": "the files marked with red boundary",
    "start": "797920",
    "end": "800959"
  },
  {
    "text": "is likely accessed so prior orders files",
    "start": "800959",
    "end": "804240"
  },
  {
    "text": "during runtime",
    "start": "804240",
    "end": "805839"
  },
  {
    "text": "and it started indicates",
    "start": "805839",
    "end": "809040"
  },
  {
    "text": "this information about likely accessed",
    "start": "809040",
    "end": "812399"
  },
  {
    "text": "files",
    "start": "812399",
    "end": "813200"
  },
  {
    "text": "as the order of file entries when",
    "start": "813200",
    "end": "816320"
  },
  {
    "text": "installing the snapshot amount",
    "start": "816320",
    "end": "818240"
  },
  {
    "text": "this layer the files marked with red",
    "start": "818240",
    "end": "821360"
  },
  {
    "text": "boundary",
    "start": "821360",
    "end": "822560"
  },
  {
    "text": "are pre fetched by a single http",
    "start": "822560",
    "end": "826800"
  },
  {
    "text": "range request and precast other files",
    "start": "826800",
    "end": "830399"
  },
  {
    "text": "files marked with green boundary are",
    "start": "830399",
    "end": "833360"
  },
  {
    "text": "also downloaded aggressively in the",
    "start": "833360",
    "end": "837680"
  },
  {
    "start": "840000",
    "end": "840000"
  },
  {
    "text": "background",
    "start": "840839",
    "end": "842560"
  },
  {
    "text": "and level linking is registered cli",
    "start": "842560",
    "end": "845279"
  },
  {
    "text": "converter by the project",
    "start": "845279",
    "end": "848480"
  },
  {
    "text": "provides workload based optimization",
    "start": "848480",
    "end": "851839"
  },
  {
    "text": "generally containers are built with",
    "start": "851839",
    "end": "854079"
  },
  {
    "text": "purpose",
    "start": "854079",
    "end": "855600"
  },
  {
    "text": "and the workloads are defined in the",
    "start": "855600",
    "end": "857680"
  },
  {
    "text": "docker file",
    "start": "857680",
    "end": "859040"
  },
  {
    "text": "with the entry point user info",
    "start": "859040",
    "end": "862800"
  },
  {
    "text": "etc and stored in the image",
    "start": "862800",
    "end": "866480"
  },
  {
    "text": "the cll converter runs provided image in",
    "start": "866480",
    "end": "869680"
  },
  {
    "text": "a sandbox",
    "start": "869680",
    "end": "870560"
  },
  {
    "text": "environment and profiles all file",
    "start": "870560",
    "end": "873839"
  },
  {
    "text": "accesses",
    "start": "873839",
    "end": "875760"
  },
  {
    "text": "and it regards these access files",
    "start": "875760",
    "end": "879760"
  },
  {
    "text": "are also likely accessed during runtime",
    "start": "879760",
    "end": "883519"
  },
  {
    "text": "so this first prioritized files",
    "start": "883519",
    "end": "886560"
  },
  {
    "text": "in the store gives it and store this",
    "start": "886560",
    "end": "888959"
  },
  {
    "text": "snapshot",
    "start": "888959",
    "end": "890160"
  },
  {
    "text": "will prefetch and precache these files",
    "start": "890160",
    "end": "894720"
  },
  {
    "text": "where mounts this is image",
    "start": "894720",
    "end": "898880"
  },
  {
    "text": "as shown in the diagram the original",
    "start": "898880",
    "end": "902079"
  },
  {
    "text": "image is shown on the left side",
    "start": "902079",
    "end": "905120"
  },
  {
    "text": "and this contains workload of",
    "start": "905120",
    "end": "907440"
  },
  {
    "text": "information",
    "start": "907440",
    "end": "908959"
  },
  {
    "text": "so entry point commands user etc",
    "start": "908959",
    "end": "912639"
  },
  {
    "text": "and the converter command runs this",
    "start": "912639",
    "end": "914880"
  },
  {
    "text": "image",
    "start": "914880",
    "end": "915760"
  },
  {
    "text": "in sandbox and profiles file",
    "start": "915760",
    "end": "919199"
  },
  {
    "text": "accesses and generate estradiol",
    "start": "919199",
    "end": "922880"
  },
  {
    "text": "again we installed the snapshot among",
    "start": "922880",
    "end": "926240"
  },
  {
    "text": "this image these accessed files",
    "start": "926240",
    "end": "929519"
  },
  {
    "text": "are application breakfast and precast",
    "start": "929519",
    "end": "933360"
  },
  {
    "text": "so we can access these files locally",
    "start": "933360",
    "end": "937920"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "and some benchmarking results with",
    "start": "938720",
    "end": "941519"
  },
  {
    "text": "sergey's",
    "start": "941519",
    "end": "942160"
  },
  {
    "text": "snapshot it measures the container",
    "start": "942160",
    "end": "945680"
  },
  {
    "text": "startup",
    "start": "945680",
    "end": "946560"
  },
  {
    "text": "time which includes pulling down image",
    "start": "946560",
    "end": "949519"
  },
  {
    "text": "from docker hub",
    "start": "949519",
    "end": "950639"
  },
  {
    "text": "and for language containers running",
    "start": "950639",
    "end": "953120"
  },
  {
    "text": "clean teleworld program in the container",
    "start": "953120",
    "end": "956000"
  },
  {
    "text": "for server containers it wait for",
    "start": "956000",
    "end": "959600"
  },
  {
    "text": "the readiness so it was until",
    "start": "959600",
    "end": "962800"
  },
  {
    "text": "upon running email message is printed",
    "start": "962800",
    "end": "966160"
  },
  {
    "text": "from the container this method is based",
    "start": "966160",
    "end": "969440"
  },
  {
    "text": "on hello bench",
    "start": "969440",
    "end": "971440"
  },
  {
    "text": "and we took 95",
    "start": "971440",
    "end": "975120"
  },
  {
    "text": "percentile of 100 operations",
    "start": "975120",
    "end": "978720"
  },
  {
    "text": "and we used ec2 oregon instance",
    "start": "978720",
    "end": "982240"
  },
  {
    "text": "of the host and docker have at the",
    "start": "982240",
    "end": "985199"
  },
  {
    "text": "registry",
    "start": "985199",
    "end": "987839"
  },
  {
    "start": "990000",
    "end": "990000"
  },
  {
    "text": "and in python 3.7 the time to take",
    "start": "992959",
    "end": "997519"
  },
  {
    "text": "for pull started is shorter",
    "start": "997519",
    "end": "1000639"
  },
  {
    "text": "than the lc images because continuity",
    "start": "1000639",
    "end": "1003600"
  },
  {
    "text": "with storage",
    "start": "1003600",
    "end": "1004480"
  },
  {
    "text": "snapshot only pulls image metadata and",
    "start": "1004480",
    "end": "1008240"
  },
  {
    "text": "searches it index files",
    "start": "1008240",
    "end": "1011440"
  },
  {
    "text": "but the round performance is slower than",
    "start": "1011440",
    "end": "1014079"
  },
  {
    "text": "legacy",
    "start": "1014079",
    "end": "1015600"
  },
  {
    "text": "when we use etherset on the other hand",
    "start": "1015600",
    "end": "1018800"
  },
  {
    "text": "runtime performance drawback is",
    "start": "1018800",
    "end": "1020720"
  },
  {
    "text": "mitigated compared to stargazit",
    "start": "1020720",
    "end": "1024160"
  },
  {
    "text": "but the time to take for creating",
    "start": "1024160",
    "end": "1026959"
  },
  {
    "text": "container",
    "start": "1026959",
    "end": "1027918"
  },
  {
    "text": "is longer than searches because during",
    "start": "1027919",
    "end": "1030880"
  },
  {
    "text": "the container creation",
    "start": "1030880",
    "end": "1032558"
  },
  {
    "text": "storage snapshot waits for the preset",
    "start": "1032559",
    "end": "1036839"
  },
  {
    "text": "compression",
    "start": "1036839",
    "end": "1039839"
  },
  {
    "text": "in gcc 2.9.2.0",
    "start": "1042559",
    "end": "1047438"
  },
  {
    "text": "laser pull also shortened the time to",
    "start": "1047439",
    "end": "1050320"
  },
  {
    "text": "take for propagation",
    "start": "1050320",
    "end": "1052320"
  },
  {
    "text": "in both of starjet and estrogen cases",
    "start": "1052320",
    "end": "1056960"
  },
  {
    "text": "for this image run takes longer even",
    "start": "1056960",
    "end": "1060080"
  },
  {
    "text": "with its starjet",
    "start": "1060080",
    "end": "1061520"
  },
  {
    "text": "and it is because startup performance",
    "start": "1061520",
    "end": "1066000"
  },
  {
    "text": "compiles hello world c program",
    "start": "1066000",
    "end": "1069280"
  },
  {
    "text": "but the source code isn't included in",
    "start": "1069280",
    "end": "1071600"
  },
  {
    "text": "the image",
    "start": "1071600",
    "end": "1072559"
  },
  {
    "text": "but provided at runtime by mounting the",
    "start": "1072559",
    "end": "1075440"
  },
  {
    "text": "source code directory",
    "start": "1075440",
    "end": "1077520"
  },
  {
    "text": "currently the project's optimization",
    "start": "1077520",
    "end": "1080559"
  },
  {
    "text": "command",
    "start": "1080559",
    "end": "1081280"
  },
  {
    "text": "doesn't support mounting external",
    "start": "1081280",
    "end": "1083840"
  },
  {
    "text": "directory",
    "start": "1083840",
    "end": "1085120"
  },
  {
    "text": "so workload optimization couldn't",
    "start": "1085120",
    "end": "1088000"
  },
  {
    "text": "profile",
    "start": "1088000",
    "end": "1089360"
  },
  {
    "text": "the file accesses during this workload",
    "start": "1089360",
    "end": "1093520"
  },
  {
    "text": "but this usually should be improved by",
    "start": "1093520",
    "end": "1096080"
  },
  {
    "text": "adding",
    "start": "1096080",
    "end": "1096799"
  },
  {
    "text": "volume functionality to the optimization",
    "start": "1096799",
    "end": "1099440"
  },
  {
    "text": "command",
    "start": "1099440",
    "end": "1100480"
  },
  {
    "text": "and enabling it to profile file accesses",
    "start": "1100480",
    "end": "1105360"
  },
  {
    "text": "even with such runtime volumes",
    "start": "1105360",
    "end": "1109840"
  },
  {
    "text": "and for glassfish 4.1",
    "start": "1114000",
    "end": "1119120"
  },
  {
    "text": "which is a server image unless you pull",
    "start": "1119120",
    "end": "1122640"
  },
  {
    "text": "also shortened the time to take for poor",
    "start": "1122640",
    "end": "1125600"
  },
  {
    "text": "operation",
    "start": "1125600",
    "end": "1126960"
  },
  {
    "text": "in both strategies and eastern used",
    "start": "1126960",
    "end": "1130320"
  },
  {
    "text": "cases",
    "start": "1130320",
    "end": "1132400"
  },
  {
    "text": "but sergio takes longer for the server",
    "start": "1132400",
    "end": "1135520"
  },
  {
    "text": "initialization",
    "start": "1135520",
    "end": "1137120"
  },
  {
    "text": "and each strategy that image mitigates",
    "start": "1137120",
    "end": "1139760"
  },
  {
    "text": "this",
    "start": "1139760",
    "end": "1141360"
  },
  {
    "text": "for exaggerated image again waiting for",
    "start": "1141360",
    "end": "1145360"
  },
  {
    "text": "the prefetch completion",
    "start": "1145360",
    "end": "1147520"
  },
  {
    "text": "drawing create occurs again",
    "start": "1147520",
    "end": "1151840"
  },
  {
    "start": "1152000",
    "end": "1152000"
  },
  {
    "text": "pull operation is a fundamental",
    "start": "1153280",
    "end": "1155760"
  },
  {
    "text": "operation",
    "start": "1155760",
    "end": "1156559"
  },
  {
    "text": "in container lifecycle so the",
    "start": "1156559",
    "end": "1159280"
  },
  {
    "text": "performance improvement",
    "start": "1159280",
    "end": "1160720"
  },
  {
    "text": "will be beneficial for many kinds of",
    "start": "1160720",
    "end": "1163600"
  },
  {
    "text": "workloads",
    "start": "1163600",
    "end": "1165919"
  },
  {
    "text": "but i did some of them here the first",
    "start": "1165919",
    "end": "1168880"
  },
  {
    "text": "one",
    "start": "1168880",
    "end": "1169760"
  },
  {
    "text": "is speeding up base image distribution",
    "start": "1169760",
    "end": "1173120"
  },
  {
    "text": "on image build especially",
    "start": "1173120",
    "end": "1176960"
  },
  {
    "text": "for base image in dev stages in",
    "start": "1176960",
    "end": "1180000"
  },
  {
    "text": "multi-stage build",
    "start": "1180000",
    "end": "1181760"
  },
  {
    "text": "because these images aren't included",
    "start": "1181760",
    "end": "1185200"
  },
  {
    "text": "in the result image",
    "start": "1185200",
    "end": "1188400"
  },
  {
    "text": "the second one is speeding up dev",
    "start": "1188400",
    "end": "1191200"
  },
  {
    "text": "pipeline",
    "start": "1191200",
    "end": "1192240"
  },
  {
    "text": "or building testing environment",
    "start": "1192240",
    "end": "1196320"
  },
  {
    "text": "strategies was invented through the",
    "start": "1196320",
    "end": "1198960"
  },
  {
    "text": "discussion",
    "start": "1198960",
    "end": "1200240"
  },
  {
    "text": "in go community for speeding up the",
    "start": "1200240",
    "end": "1203200"
  },
  {
    "text": "builder",
    "start": "1203200",
    "end": "1203840"
  },
  {
    "text": "image distribution in their build system",
    "start": "1203840",
    "end": "1208799"
  },
  {
    "text": "the third one is sharing large",
    "start": "1209600",
    "end": "1212559"
  },
  {
    "text": "scientific software stack",
    "start": "1212559",
    "end": "1214960"
  },
  {
    "text": "for example ml frameworks",
    "start": "1214960",
    "end": "1218240"
  },
  {
    "text": "for example moves frameworks tends to be",
    "start": "1218240",
    "end": "1221520"
  },
  {
    "text": "large",
    "start": "1221520",
    "end": "1222720"
  },
  {
    "text": "they can be over than one gigabyte",
    "start": "1222720",
    "end": "1226799"
  },
  {
    "text": "and the final one in the list is",
    "start": "1226799",
    "end": "1230080"
  },
  {
    "text": "improving cold start performance for",
    "start": "1230080",
    "end": "1233039"
  },
  {
    "text": "example",
    "start": "1233039",
    "end": "1233679"
  },
  {
    "text": "in service environment of course",
    "start": "1233679",
    "end": "1237280"
  },
  {
    "text": "we need more investigation here for",
    "start": "1237280",
    "end": "1240159"
  },
  {
    "text": "finding out what is the right bottleneck",
    "start": "1240159",
    "end": "1242640"
  },
  {
    "text": "of course that problem",
    "start": "1242640",
    "end": "1246080"
  },
  {
    "text": "and but please be careful that",
    "start": "1246240",
    "end": "1249600"
  },
  {
    "text": "strategy snapshot project is",
    "start": "1249600",
    "end": "1252799"
  },
  {
    "text": "still in our stage",
    "start": "1252799",
    "end": "1255919"
  },
  {
    "text": "it needs more performance improvement",
    "start": "1255919",
    "end": "1258960"
  },
  {
    "text": "for the implementation and",
    "start": "1258960",
    "end": "1262320"
  },
  {
    "text": "visible performance seems to be affected",
    "start": "1262320",
    "end": "1265520"
  },
  {
    "text": "by",
    "start": "1265520",
    "end": "1266320"
  },
  {
    "text": "the internet condition and instance",
    "start": "1266320",
    "end": "1269440"
  },
  {
    "text": "location etc",
    "start": "1269440",
    "end": "1271360"
  },
  {
    "text": "and also be careful for the force",
    "start": "1271360",
    "end": "1274320"
  },
  {
    "text": "trainers",
    "start": "1274320",
    "end": "1275760"
  },
  {
    "text": "until the layer contents are fully",
    "start": "1275760",
    "end": "1278400"
  },
  {
    "text": "cached",
    "start": "1278400",
    "end": "1279360"
  },
  {
    "text": "on those",
    "start": "1279360",
    "end": "1282000"
  },
  {
    "text": "and of course feedbacks and suggestions",
    "start": "1282720",
    "end": "1286559"
  },
  {
    "text": "for use cases and implementations etc",
    "start": "1286559",
    "end": "1290080"
  },
  {
    "text": "are always welcome",
    "start": "1290080",
    "end": "1293279"
  },
  {
    "start": "1296000",
    "end": "1296000"
  },
  {
    "text": "there are also other oci",
    "start": "1298159",
    "end": "1301600"
  },
  {
    "text": "alternative lazy distribution",
    "start": "1301600",
    "end": "1304640"
  },
  {
    "text": "in the community at least some of them",
    "start": "1304640",
    "end": "1308640"
  },
  {
    "text": "first one is slack it uses",
    "start": "1308640",
    "end": "1312000"
  },
  {
    "text": "nfs infra for the distribution of",
    "start": "1312000",
    "end": "1315440"
  },
  {
    "text": "rotor fs snapshots of continuous",
    "start": "1315440",
    "end": "1318720"
  },
  {
    "text": "and registries are used for sharing",
    "start": "1318720",
    "end": "1321600"
  },
  {
    "text": "snapshot",
    "start": "1321600",
    "end": "1322480"
  },
  {
    "text": "ids among hosts",
    "start": "1322480",
    "end": "1326000"
  },
  {
    "text": "and some vmfs is a fused file system",
    "start": "1326000",
    "end": "1330000"
  },
  {
    "text": "python",
    "start": "1330000",
    "end": "1331039"
  },
  {
    "text": "for sharing high energy physics software",
    "start": "1331039",
    "end": "1334559"
  },
  {
    "text": "and worldwide infrastructure",
    "start": "1334559",
    "end": "1337520"
  },
  {
    "text": "and software stack can be mounted and",
    "start": "1337520",
    "end": "1340080"
  },
  {
    "text": "lazily downloaded from",
    "start": "1340080",
    "end": "1341840"
  },
  {
    "text": "server vmfs repository via http",
    "start": "1341840",
    "end": "1347520"
  },
  {
    "text": "there is an implementation of",
    "start": "1347520",
    "end": "1350400"
  },
  {
    "text": "contradicts remote snapshotter",
    "start": "1350400",
    "end": "1353039"
  },
  {
    "text": "based on service",
    "start": "1353039",
    "end": "1356159"
  },
  {
    "text": "again remote snapshot is a plugin for",
    "start": "1356159",
    "end": "1359840"
  },
  {
    "text": "continuity like",
    "start": "1359840",
    "end": "1360880"
  },
  {
    "text": "strategies snapshot but one can use",
    "start": "1360880",
    "end": "1364159"
  },
  {
    "text": "any file system and store store",
    "start": "1364159",
    "end": "1367919"
  },
  {
    "text": "as bargains",
    "start": "1367919",
    "end": "1370720"
  },
  {
    "text": "and there is an ongoing discussion",
    "start": "1370960",
    "end": "1374320"
  },
  {
    "text": "towards integration of some vmfs",
    "start": "1374320",
    "end": "1377600"
  },
  {
    "text": "and podman",
    "start": "1377600",
    "end": "1380400"
  },
  {
    "text": "and fire grain is proposed by akihiro",
    "start": "1382000",
    "end": "1385919"
  },
  {
    "text": "soda entity",
    "start": "1385919",
    "end": "1387679"
  },
  {
    "text": "it is an oci compliant image format",
    "start": "1387679",
    "end": "1391120"
  },
  {
    "text": "but uses continuity manifest as layers",
    "start": "1391120",
    "end": "1395520"
  },
  {
    "text": "an image can be mounted and files are",
    "start": "1395520",
    "end": "1398480"
  },
  {
    "text": "pulled",
    "start": "1398480",
    "end": "1398960"
  },
  {
    "text": "lazily and each file",
    "start": "1398960",
    "end": "1402159"
  },
  {
    "text": "is treated as a content addressable blob",
    "start": "1402159",
    "end": "1405919"
  },
  {
    "text": "so the duplication in file granularity",
    "start": "1405919",
    "end": "1410640"
  },
  {
    "text": "is also in the scope",
    "start": "1410640",
    "end": "1413919"
  },
  {
    "text": "and there is an ongoing discussion",
    "start": "1414640",
    "end": "1417840"
  },
  {
    "text": "towards ociv2 it's proposed",
    "start": "1417840",
    "end": "1421120"
  },
  {
    "text": "by alex sarai susie",
    "start": "1421120",
    "end": "1424440"
  },
  {
    "text": "ocav2 is not official spec yet",
    "start": "1424440",
    "end": "1428720"
  },
  {
    "text": "but brainstorm is in progress",
    "start": "1428720",
    "end": "1433440"
  },
  {
    "text": "in the discussion the",
    "start": "1433679",
    "end": "1436720"
  },
  {
    "text": "defeat support amount of multiple file",
    "start": "1436720",
    "end": "1440080"
  },
  {
    "text": "system",
    "start": "1440080",
    "end": "1441120"
  },
  {
    "text": "are also included",
    "start": "1441120",
    "end": "1445440"
  },
  {
    "text": "and finally crfs plugin",
    "start": "1445440",
    "end": "1448640"
  },
  {
    "text": "for fuse overlay effects it is proposed",
    "start": "1448640",
    "end": "1452000"
  },
  {
    "text": "by gdp scrivener red hat",
    "start": "1452000",
    "end": "1455200"
  },
  {
    "text": "it is a plugin of use overlay effect",
    "start": "1455200",
    "end": "1458799"
  },
  {
    "text": "for mounting started layers",
    "start": "1458799",
    "end": "1463278"
  },
  {
    "start": "1464000",
    "end": "1464000"
  },
  {
    "text": "finally recap a pull is",
    "start": "1464559",
    "end": "1467600"
  },
  {
    "text": "one of the time consuming steps in",
    "start": "1467600",
    "end": "1469840"
  },
  {
    "text": "container lifecycle",
    "start": "1469840",
    "end": "1471520"
  },
  {
    "text": "started a snapshot newcastle project in",
    "start": "1471520",
    "end": "1474720"
  },
  {
    "text": "continental",
    "start": "1474720",
    "end": "1475840"
  },
  {
    "text": "is trying to solve it by lazy playing",
    "start": "1475840",
    "end": "1478720"
  },
  {
    "text": "images",
    "start": "1478720",
    "end": "1479440"
  },
  {
    "text": "leveraging strategic image by google",
    "start": "1479440",
    "end": "1483200"
  },
  {
    "text": "it's standard compliant so",
    "start": "1483200",
    "end": "1486559"
  },
  {
    "text": "it can be pushed to and it can be lately",
    "start": "1486559",
    "end": "1490640"
  },
  {
    "text": "pulled from",
    "start": "1490640",
    "end": "1491679"
  },
  {
    "text": "standard registries and workload based",
    "start": "1491679",
    "end": "1495440"
  },
  {
    "text": "runtime optimization is also held with",
    "start": "1495440",
    "end": "1498640"
  },
  {
    "text": "eastern diseases",
    "start": "1498640",
    "end": "1500559"
  },
  {
    "text": "there are also other russia alternative",
    "start": "1500559",
    "end": "1503760"
  },
  {
    "text": "image distribution strategies in",
    "start": "1503760",
    "end": "1506080"
  },
  {
    "text": "continental ecosystem",
    "start": "1506080",
    "end": "1509039"
  },
  {
    "text": "and of course feedbacks and suggestions",
    "start": "1509039",
    "end": "1511760"
  },
  {
    "text": "are always welcome",
    "start": "1511760",
    "end": "1514000"
  },
  {
    "text": "you can access to our apple on",
    "start": "1514000",
    "end": "1516200"
  },
  {
    "text": "github.com slash",
    "start": "1516200",
    "end": "1517760"
  },
  {
    "text": "contender slash sergi's snapshot",
    "start": "1517760",
    "end": "1522080"
  },
  {
    "text": "and thanks",
    "start": "1522720",
    "end": "1526240"
  }
]