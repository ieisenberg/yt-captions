[
  {
    "text": "hello everybody welcome to valencia thank you for joining this talk my name is shay and today we're going to talk",
    "start": "0",
    "end": "5759"
  },
  {
    "text": "about falcon by passing falco default rule set and perhaps even how to compromise a cluster without tripping",
    "start": "5759",
    "end": "11920"
  },
  {
    "text": "the sock let's start let's start with the background what falco is for and what's container security is about and this is",
    "start": "11920",
    "end": "19359"
  },
  {
    "text": "my view of container security you can sort of divide it into four areas so security cluster security",
    "start": "19359",
    "end": "27359"
  },
  {
    "text": "pre-deployment and post deployment and of course how security is important because if host is compromised then it's",
    "start": "27359",
    "end": "32558"
  },
  {
    "text": "really hard to reason about the workload security that runs on on the on this hubs pre-deployment is about building",
    "start": "32559",
    "end": "39520"
  },
  {
    "text": "the base images in an efficient and secure way container scanning although some people call it a little bit",
    "start": "39520",
    "end": "44960"
  },
  {
    "text": "scanning but i like to be more precise um scan for exposed secrets um static",
    "start": "44960",
    "end": "50239"
  },
  {
    "text": "compliance basically everything that we can do with the static image file of the container cluster security it's",
    "start": "50239",
    "end": "56879"
  },
  {
    "text": "all about kubernetes config and then there's a post deployment and that's where falco is",
    "start": "56879",
    "end": "62640"
  },
  {
    "text": "coming into the picture runtime detection um there's also runtime prevention dynamic",
    "start": "62640",
    "end": "68720"
  },
  {
    "text": "appliance and prevention is about existing um mostly about existing",
    "start": "68720",
    "end": "74000"
  },
  {
    "text": "linux security kernel security mechanism that are sometimes given for free",
    "start": "74000",
    "end": "79840"
  },
  {
    "text": "in the container context i've recently listened to the cloud",
    "start": "79840",
    "end": "84960"
  },
  {
    "text": "what's the cloud security podcast and they suggested a bit different division uh into areas of container",
    "start": "84960",
    "end": "92640"
  },
  {
    "text": "security so they were talking about build infrastructure and",
    "start": "92640",
    "end": "98720"
  },
  {
    "text": "uh and runtime and that's sort of the way this this maps on to this view intro",
    "start": "98720",
    "end": "104000"
  },
  {
    "text": "is cluster security and how security built is pre-deployment and the right time is actually post deployment so if",
    "start": "104000",
    "end": "110079"
  },
  {
    "text": "that helps to think about it as well and we can see that where the falco belongs to runtime detection through the",
    "start": "110079",
    "end": "116960"
  },
  {
    "text": "falco architecture falco is",
    "start": "116960",
    "end": "122320"
  },
  {
    "text": "built on top of either kernel module or ebpf sensors running in the kernel space",
    "start": "122320",
    "end": "128160"
  },
  {
    "text": "uh the events mostly syscalls and enriched syscalls",
    "start": "128160",
    "end": "133440"
  },
  {
    "text": "are bubbling through the ring buffer up to the user space where a bunch of library focal libraries and more most",
    "start": "133440",
    "end": "139840"
  },
  {
    "text": "importantly rule engine are taking them processing them and",
    "start": "139840",
    "end": "145120"
  },
  {
    "text": "and decide whether the certain rules that are expressed as yaml files um",
    "start": "145120",
    "end": "152239"
  },
  {
    "text": "they whether the rules should trigger given that event or shouldn't trigger and the if rolls trigger then",
    "start": "152239",
    "end": "159360"
  },
  {
    "text": "one can integrate that with the typical cloud staff like cm or event in",
    "start": "159360",
    "end": "165599"
  },
  {
    "text": "some kind of venting engine or grpc but for our first purpose we're going to use std out today for the",
    "start": "165599",
    "end": "173200"
  },
  {
    "text": "for the sake of simplicity and you'll see that in the demo typical falca rule i took in this case",
    "start": "173200",
    "end": "179920"
  },
  {
    "text": "disallowed the ssh connection there is a concept of macro in falco rule set",
    "start": "179920",
    "end": "186319"
  },
  {
    "text": "in this case it's called inbound outbound this is really good concept because because it prevents the rule file from",
    "start": "186319",
    "end": "192800"
  },
  {
    "text": "bloating otherwise if otherwise it would be way bigger than",
    "start": "192800",
    "end": "198480"
  },
  {
    "text": "this because the macro can be used by different rules in this case this lattice stitch connection uses",
    "start": "198480",
    "end": "204480"
  },
  {
    "text": "three macros in both outbound ssh port allowed ssh hosts and one of them is",
    "start": "204480",
    "end": "210000"
  },
  {
    "text": "actually has end node condition which is the opposite of true so if allowed ssh cost is false then",
    "start": "210000",
    "end": "217040"
  },
  {
    "text": "this rule has a chance of triggering",
    "start": "217040",
    "end": "222319"
  },
  {
    "text": "and then there's a priority a mitral attack all kinds etc metadata description",
    "start": "222319",
    "end": "227840"
  },
  {
    "text": "so all good now falcals in addition to behavioral detections they can also be tailored to",
    "start": "227840",
    "end": "235120"
  },
  {
    "text": "specific to detect specific exploitation attempts of the cvs if they are constructed",
    "start": "235120",
    "end": "241760"
  },
  {
    "text": "properly and this this is the example to those those four um but there are more right now",
    "start": "241760",
    "end": "248400"
  },
  {
    "text": "there's just four uh interesting ones that i thought to mention now let's talk about previous",
    "start": "248400",
    "end": "255200"
  },
  {
    "text": "work on falco bypasses this is not the first uh talk about it um before that",
    "start": "255200",
    "end": "261120"
  },
  {
    "text": "ncc group did some uh research brett gizman as well they mostly describe the bypasses around the image",
    "start": "261120",
    "end": "269040"
  },
  {
    "text": "naming um leonardo um talked about this in one",
    "start": "269040",
    "end": "274320"
  },
  {
    "text": "of his talks about the twin cisco's and i think he also mentioned the",
    "start": "274320",
    "end": "279600"
  },
  {
    "text": "simulink evasion is an ongoing issue about the sister",
    "start": "279600",
    "end": "284720"
  },
  {
    "text": "calls missing sister calls for example open opennet uh exec fee execute add",
    "start": "284720",
    "end": "290639"
  },
  {
    "text": "duped to this kind of stuff and then the recent work by go and zen on defcon",
    "start": "290639",
    "end": "296800"
  },
  {
    "text": "they were talking about tacto of file names mostly um so classic example",
    "start": "296800",
    "end": "302479"
  },
  {
    "text": "for the in the openness is called the time of the check of the file name",
    "start": "302479",
    "end": "308639"
  },
  {
    "text": "and the time of actual resolution of the file name are different so that there's uh that keeps the possibility of the",
    "start": "308639",
    "end": "314800"
  },
  {
    "text": "evasion and then there's they talked quickly about the similar incubations",
    "start": "314800",
    "end": "320960"
  },
  {
    "text": "all right so now with that in mind let's uh let's go into the interesting section",
    "start": "320960",
    "end": "326880"
  },
  {
    "text": "um let's start with the read sensitive file and trusted rule we're going to use it a lot and let's start with something",
    "start": "326880",
    "end": "333199"
  },
  {
    "text": "simple simulink evasion the um this is the typical way the fault",
    "start": "333199",
    "end": "341039"
  },
  {
    "text": "is used we spin container we do something malicious within the container and falco is um",
    "start": "341039",
    "end": "347440"
  },
  {
    "text": "splitting this output or an insensitive file is open because we're trying to read the it's shadow how can we prevent",
    "start": "347440",
    "end": "354240"
  },
  {
    "text": "falca from knowing that we did this well let's create the ceiling to see shadow",
    "start": "354240",
    "end": "359840"
  },
  {
    "text": "and we do see that there's notice this focus still saying something but it's that's a different rule right because",
    "start": "359840",
    "end": "366240"
  },
  {
    "text": "the previous rule was warning level and right now we're notice so that means that it's at least",
    "start": "366240",
    "end": "373360"
  },
  {
    "text": "degradation of the of the detection um and this by the way this rule the",
    "start": "373360",
    "end": "379840"
  },
  {
    "text": "create the monitoring of the creation of the sensitive of the um",
    "start": "379840",
    "end": "385199"
  },
  {
    "text": "symlinks over the sensitive files was uh one of the protection mechanism against",
    "start": "385199",
    "end": "390240"
  },
  {
    "text": "the tokto attack we'll see why this is not enough because even though we have",
    "start": "390240",
    "end": "396479"
  },
  {
    "text": "degradation of detection which is nice but we can easier",
    "start": "396479",
    "end": "402400"
  },
  {
    "text": "get rid of this rule as well what can we do we can create the same link to the unmonitored directory in",
    "start": "402400",
    "end": "409599"
  },
  {
    "text": "this case it's easy to secure it then we're using the cat",
    "start": "409599",
    "end": "415120"
  },
  {
    "text": "to cut the relative path based on the it's the security link so one step above",
    "start": "415120",
    "end": "421120"
  },
  {
    "text": "and then shadow and we see the output of the shadow and fireplace silent because it's confused and the same link is not",
    "start": "421120",
    "end": "426960"
  },
  {
    "text": "resolved in focus context what else can we do let's take a look at",
    "start": "426960",
    "end": "432319"
  },
  {
    "text": "right below it see right below root files in this case we see the example of how",
    "start": "432319",
    "end": "438960"
  },
  {
    "text": "they can be triggered so we're doing we're creating the symbolic link not to the root directory but we call it",
    "start": "438960",
    "end": "445840"
  },
  {
    "text": "the root link and then using it and of course it's that easy to bypass this rule as well",
    "start": "445840",
    "end": "451120"
  },
  {
    "text": "just by using the same link to the directory and then using it for the relative path okay what about hard links",
    "start": "451120",
    "end": "457759"
  },
  {
    "text": "yes as well we can we can use them hard link is a direct",
    "start": "457759",
    "end": "463039"
  },
  {
    "text": "sort of pointer to the inode and in that case falco until version 0.31",
    "start": "463039",
    "end": "470240"
  },
  {
    "text": "where we actually committed this the new rule for the hard links it wasn't able to detect",
    "start": "470240",
    "end": "475599"
  },
  {
    "text": "it as well um now this there's a special case of pseudo-potential privilege escalation",
    "start": "475599",
    "end": "482080"
  },
  {
    "text": "rule um this case is kind of reversed so let's let's see what we're talking about here there's a",
    "start": "482080",
    "end": "488319"
  },
  {
    "text": "the last year there was a infamous cv in sudo",
    "start": "488319",
    "end": "494240"
  },
  {
    "text": "which allowed attacker to pretty easily escalate the privileges from the regular",
    "start": "494240",
    "end": "499759"
  },
  {
    "text": "user to to root so when i was trying the typical poc by",
    "start": "499759",
    "end": "505599"
  },
  {
    "text": "warwick i just download it and so and try to see if that works or not and it",
    "start": "505599",
    "end": "510879"
  },
  {
    "text": "worked very very easily on ubuntu i think that was 1804",
    "start": "510879",
    "end": "516959"
  },
  {
    "text": "and falco was silent so i got in what happened there and where what stress s trace showed me was",
    "start": "516959",
    "end": "524399"
  },
  {
    "text": "that the exactly was actually running the user bin pseudo and not the pseudo edit",
    "start": "524399",
    "end": "530480"
  },
  {
    "text": "that the rule would expect you can see here proclaim equals pseudo-edit rather than pseudo and what",
    "start": "530480",
    "end": "538000"
  },
  {
    "text": "happens here is that ubonto in ubuntu actually pseudoedit is the symlink to the pseudo so",
    "start": "538000",
    "end": "544800"
  },
  {
    "text": "what the rule the way it was constructed what x was expecting the rule was expecting",
    "start": "544800",
    "end": "550240"
  },
  {
    "text": "the symlink to the binary and it was getting the binary and of course",
    "start": "550240",
    "end": "555279"
  },
  {
    "text": "the exploit was still working and the rule wasn't detected so that was one of the fixes that we",
    "start": "555279",
    "end": "561360"
  },
  {
    "text": "that we can make it in the version 0.31 as well but this this is interesting kind of the",
    "start": "561360",
    "end": "567680"
  },
  {
    "text": "other way around of this typical simulink evasion that showed before",
    "start": "567680",
    "end": "574560"
  },
  {
    "text": "all right enough of the simulinks let's uh talk about proclaims franklin is the name of the process and",
    "start": "574560",
    "end": "580959"
  },
  {
    "text": "many many falco rules rely on it a lot um so typical constructs here list",
    "start": "580959",
    "end": "586000"
  },
  {
    "text": "there's a list of login binaries names and management miners binaries names",
    "start": "586000",
    "end": "591920"
  },
  {
    "text": "and these lists are used in the rule called read sensitive file and trusted the same rule that we're",
    "start": "591920",
    "end": "597920"
  },
  {
    "text": "we're looking at we're using for our examples and you can see here the construct and not that i",
    "start": "597920",
    "end": "603600"
  },
  {
    "text": "was talking about that's the i call it accepted construct construct where the rule doesn't trigger",
    "start": "603600",
    "end": "610000"
  },
  {
    "text": "so all we need to ensure here is our process that will read the sensitive file",
    "start": "610000",
    "end": "616160"
  },
  {
    "text": "will be named as one of the user management binaries so what we do here we",
    "start": "616160",
    "end": "622160"
  },
  {
    "text": "we write a very simple uh c utility the treats file",
    "start": "622160",
    "end": "627680"
  },
  {
    "text": "and we compile it into system d login d and call it system systemd login d um and using it to dump the shadow and",
    "start": "627680",
    "end": "635760"
  },
  {
    "text": "of course it's fine because uh falco thinks that systemd login d is the name",
    "start": "635760",
    "end": "641360"
  },
  {
    "text": "of that one of the user management binaries and the rule doesn't trigger what else can",
    "start": "641360",
    "end": "647040"
  },
  {
    "text": "we do the thing is that um this approach is not scalable we can't write utility",
    "start": "647040",
    "end": "652160"
  },
  {
    "text": "for for every um every utility cli command that we want to use so",
    "start": "652160",
    "end": "658000"
  },
  {
    "text": "oh but we can't do can't create the symbolic link and so and call it system d login d like",
    "start": "658000",
    "end": "665440"
  },
  {
    "text": "like in this case and use that symbol and click to downplay its shadow",
    "start": "665440",
    "end": "670480"
  },
  {
    "text": "and again focus silent in this case so again symbolic thing but with the proc.name perspective",
    "start": "670480",
    "end": "678800"
  },
  {
    "text": "eventually simpler renaming also works if we can rename cat into the systemd",
    "start": "678800",
    "end": "684000"
  },
  {
    "text": "login d there we go we we have a we have a perfect invasion here",
    "start": "684000",
    "end": "690240"
  },
  {
    "text": "what about parent and ancestors names um yeah so that's also",
    "start": "690240",
    "end": "696160"
  },
  {
    "text": "a problem because in this case for example when we're looking at the condition where proc name should be",
    "start": "696160",
    "end": "701760"
  },
  {
    "text": "something that p name should be something what we can do we can come up with the script um",
    "start": "701760",
    "end": "707600"
  },
  {
    "text": "and call it password one of the accepted binary names",
    "start": "707600",
    "end": "712639"
  },
  {
    "text": "and the script the parent name will call the the proc name and that's how we sort of",
    "start": "712639",
    "end": "719279"
  },
  {
    "text": "build this condition and once that works we can we can easily dump its shadow",
    "start": "719279",
    "end": "724720"
  },
  {
    "text": "without being detected but we can make this evasion even more",
    "start": "724720",
    "end": "730560"
  },
  {
    "text": "generic what we have in the football latest image and you'll see this image a lot this is the publicly available image",
    "start": "730560",
    "end": "737440"
  },
  {
    "text": "that they can that they created with various goodies to bypass the uh the bypass falcon this image creates one",
    "start": "737440",
    "end": "744399"
  },
  {
    "text": "of the faber's fuber fake parents so that binary that small utility it knows",
    "start": "744399",
    "end": "749680"
  },
  {
    "text": "how to fork um a series of processes",
    "start": "749680",
    "end": "755200"
  },
  {
    "text": "with the depth in this case depth of three and it calls the ancestor the",
    "start": "755200",
    "end": "760639"
  },
  {
    "text": "first initial process is a google account forks all the rest and then runs this",
    "start": "760639",
    "end": "766240"
  },
  {
    "text": "command and what it does it basically tailors specifically this condition because the proc a name of three it indeed starts",
    "start": "766240",
    "end": "774079"
  },
  {
    "text": "and equal to google accounts and that's why the file is silent in this case",
    "start": "774079",
    "end": "779839"
  },
  {
    "text": "and we can use this utility um to build the nesting and name is answer our ancestors as uh as we",
    "start": "779839",
    "end": "787600"
  },
  {
    "text": "want reversal detection uh this is also very",
    "start": "787600",
    "end": "793120"
  },
  {
    "text": "interesting this is a typical reversal payload that creates initiates reversal",
    "start": "793120",
    "end": "798240"
  },
  {
    "text": "and um indeed it uh it has it causes for three detections here",
    "start": "798240",
    "end": "804399"
  },
  {
    "text": "uh so of course the typical attacker can't can't use it what can we do we use",
    "start": "804399",
    "end": "809440"
  },
  {
    "text": "we can try to use make note and then type it into the ansi this is also very very known one liner for initiating the",
    "start": "809440",
    "end": "816560"
  },
  {
    "text": "reverse shell and however it's still it still",
    "start": "816560",
    "end": "822240"
  },
  {
    "text": "shows the detection however this detection is way very easy to do to avoid because to evade sorry because we",
    "start": "822240",
    "end": "829920"
  },
  {
    "text": "can use either sim link or proc name evasion that we already talked about but",
    "start": "829920",
    "end": "836079"
  },
  {
    "text": "we can we can do something more interesting how about we use the msf venom and for people who know msf venom they know that",
    "start": "836079",
    "end": "842720"
  },
  {
    "text": "this is a defect a payload generator it's it's a part of um",
    "start": "842720",
    "end": "847839"
  },
  {
    "text": "metasploit framework right and it's very easy to generate any type of",
    "start": "847839",
    "end": "854399"
  },
  {
    "text": "payload in this case i'm generating reverse tcp payload for linux uh base64",
    "start": "854399",
    "end": "861040"
  },
  {
    "text": "uh copying it into the container marking it as l file and there we go we see the",
    "start": "861040",
    "end": "866399"
  },
  {
    "text": "connection on the hostess name and file place silence so indeed this is this is a",
    "start": "866399",
    "end": "872320"
  },
  {
    "text": "tough problem to detect payload execution as an elf where it doesn't",
    "start": "872320",
    "end": "877839"
  },
  {
    "text": "have um a hash a known hash but but falco even",
    "start": "877839",
    "end": "883440"
  },
  {
    "text": "not in nothing antivirus right so it's it's a tough problem to detect this type of behavior",
    "start": "883440",
    "end": "888639"
  },
  {
    "text": "perhaps this could this should be detected on a network level though what else do we have we can talk about",
    "start": "888639",
    "end": "895760"
  },
  {
    "text": "common arguments manipulation um netcat remote code execution container",
    "start": "895760",
    "end": "901199"
  },
  {
    "text": "you can see that it tries to detect the indication of ansi or and cat",
    "start": "901199",
    "end": "907040"
  },
  {
    "text": "along with a bunch of flags so for ansi for example there are",
    "start": "907040",
    "end": "914240"
  },
  {
    "text": "two execution flags dash e and dash c that allow you to execute bash for example or other program upon",
    "start": "914240",
    "end": "921440"
  },
  {
    "text": "the connection and that's what this rule is trying to avoid however we know that",
    "start": "921440",
    "end": "928079"
  },
  {
    "text": "linux old and bigly big linux utilities they have so many flag options that it's",
    "start": "928079",
    "end": "935279"
  },
  {
    "text": "really easy really really hard to come up with the rule that will will block all the potential potential flag",
    "start": "935279",
    "end": "941279"
  },
  {
    "text": "combination that's indeed the case in this case when we we're using ansi with dash e with classic dash ebin bash",
    "start": "941279",
    "end": "948959"
  },
  {
    "text": "it's of course being detected by that not get runs inside container rule however if we just add dash v",
    "start": "948959",
    "end": "955600"
  },
  {
    "text": "as in verbosity mode then the syntactical uh comparison fails here because",
    "start": "955600",
    "end": "964160"
  },
  {
    "text": "the the proc rx doesn't contain stash e at this point and then and there there we go the netcat runs inside doesn't",
    "start": "964160",
    "end": "970959"
  },
  {
    "text": "trigger anymore um all right",
    "start": "970959",
    "end": "976000"
  },
  {
    "text": "what else can we do with the pro qrx we can take a look at the grab private",
    "start": "976000",
    "end": "983040"
  },
  {
    "text": "keys rule so it tries to block define to and find when any any search contains idrsa or id",
    "start": "983040",
    "end": "990000"
  },
  {
    "text": "dsa and for people who know fine know how much how many options does it happen what",
    "start": "990000",
    "end": "996079"
  },
  {
    "text": "kind of rich functionality does it have and of course with dash regex it's it's very trivial to bypass we're just",
    "start": "996079",
    "end": "1002320"
  },
  {
    "text": "substituting the r with with the dot but we can do the same with any other letter and there we",
    "start": "1002320",
    "end": "1008720"
  },
  {
    "text": "and there we go we don't have syntactical comparison of idea reset at this point",
    "start": "1008720",
    "end": "1015920"
  },
  {
    "text": "um and the last interesting rule that i'm going to show bypass is the [Music]",
    "start": "1016000",
    "end": "1021839"
  },
  {
    "text": "sensitive mount bypass so the launch container with sensitive",
    "start": "1021839",
    "end": "1026880"
  },
  {
    "text": "mount rule relies on this condition and i don't know if you see the problem here",
    "start": "1026880",
    "end": "1032000"
  },
  {
    "text": "the problem here is that this this comparison is very specific",
    "start": "1032000",
    "end": "1037438"
  },
  {
    "text": "what attacker can do they can mount varan for example or var and then they",
    "start": "1037439",
    "end": "1042720"
  },
  {
    "text": "use subdirectory path to refer to the docker",
    "start": "1042720",
    "end": "1048079"
  },
  {
    "text": "and i will use it during the full simulation attack later but in this case this is very easy to",
    "start": "1048079",
    "end": "1054480"
  },
  {
    "text": "show we're just running the docker with dash viva run run",
    "start": "1054480",
    "end": "1059520"
  },
  {
    "text": "and there we go and we do have a shell response rule but not the mounting rule",
    "start": "1059520",
    "end": "1065280"
  },
  {
    "text": "that should have been triggered and i think for the sake of time we",
    "start": "1065280",
    "end": "1071520"
  },
  {
    "text": "i'm going to skip the crypto minor detection bypass um you can in the privileged container detection bypass",
    "start": "1071520",
    "end": "1078080"
  },
  {
    "text": "although this this one is interesting but you can you can read about this in the in the github directory of the",
    "start": "1078080",
    "end": "1083280"
  },
  {
    "text": "project later if you want if you're interested uh but let's jump to the toolbar our toolbox so far contained two",
    "start": "1083280",
    "end": "1090320"
  },
  {
    "text": "images footer latest and that's the source you can see that it it has the docker client it has cube",
    "start": "1090320",
    "end": "1096960"
  },
  {
    "text": "catal client and it has a bunch of network utilities g bash run c and they",
    "start": "1096960",
    "end": "1102720"
  },
  {
    "text": "tweak the names of those clients and bash so that falco won't be able to detect",
    "start": "1102720",
    "end": "1108880"
  },
  {
    "text": "them with the static with the traditional rules and then i have the cv",
    "start": "1108880",
    "end": "1114480"
  },
  {
    "text": "2021-3156 image just to to simulate that",
    "start": "1114480",
    "end": "1120720"
  },
  {
    "text": "specific rule trigger that that actually did it didn't work and then but now it works after our changes",
    "start": "1120720",
    "end": "1127919"
  },
  {
    "text": "um in case somebody wants to play without with this and finally let's go to the interesting",
    "start": "1127919",
    "end": "1134320"
  },
  {
    "text": "part let's try to put together all those evasions and see if we can",
    "start": "1134320",
    "end": "1139520"
  },
  {
    "text": "perform the full attack simulation okay so the demo setup is",
    "start": "1139520",
    "end": "1145520"
  },
  {
    "text": "i was running it within the gke cluster with the custom nodes and silicon load cluster one word about the cluster that",
    "start": "1145520",
    "end": "1152080"
  },
  {
    "text": "i used is it was presented in the cubecon 2019 two years ago it was really cool uh just a testing",
    "start": "1152080",
    "end": "1159280"
  },
  {
    "text": "cluster that shows how to just show some attack techniques and",
    "start": "1159280",
    "end": "1164640"
  },
  {
    "text": "defense technique um and highly recommend it um pretty",
    "start": "1164640",
    "end": "1169840"
  },
  {
    "text": "interesting one and that works perfectly for our case so it has two attack scenarios scenario one and scenario two",
    "start": "1169840",
    "end": "1176320"
  },
  {
    "text": "in scenario one is more basic with the more basic attacker and scenario two is with more advanced detectors so let's go",
    "start": "1176320",
    "end": "1183440"
  },
  {
    "text": "and start with the detection of detections of the scenario one just",
    "start": "1183440",
    "end": "1188799"
  },
  {
    "text": "just we'll see what what we expect from falco to detect within the scenario so",
    "start": "1188799",
    "end": "1193840"
  },
  {
    "text": "the uh all scenarios start with the attacker given the web shell assumes that pod is",
    "start": "1193840",
    "end": "1199600"
  },
  {
    "text": "already compromised and um and then the attacker starts all kind of",
    "start": "1199600",
    "end": "1205760"
  },
  {
    "text": "reconnaissance enumeration from within the pot it runs the end it runs the unnamed r and then it says",
    "start": "1205760",
    "end": "1213120"
  },
  {
    "text": "sorry they see that the um the pod the hust is part of the",
    "start": "1213120",
    "end": "1219679"
  },
  {
    "text": "kubernetes pods and there we go we have the um kubernetes version",
    "start": "1219679",
    "end": "1226159"
  },
  {
    "text": "etc we have all the environment variables we have some kind of service account mounted here and then at this",
    "start": "1226159",
    "end": "1232640"
  },
  {
    "text": "point attacker tries to uh go to the typical way of uh",
    "start": "1232640",
    "end": "1238880"
  },
  {
    "text": "compromising the the cluster so the um they download the cube cattle they try to use it to get all the",
    "start": "1238880",
    "end": "1246240"
  },
  {
    "text": "resources whatever they can and there is a bunch of resources so it takes some time",
    "start": "1246240",
    "end": "1253200"
  },
  {
    "text": "there we go we have the attackers can see the pods um and then attacker uses auth can i to",
    "start": "1253200",
    "end": "1260559"
  },
  {
    "text": "enumerate the the permissions that the current part has with the amounted service",
    "start": "1260559",
    "end": "1267440"
  },
  {
    "text": "account and apparently attacker can't even create pods right and that's what the attacker does",
    "start": "1267440",
    "end": "1273440"
  },
  {
    "text": "they create the um the malicious bitcoin airpod that of course will um mine",
    "start": "1273440",
    "end": "1281440"
  },
  {
    "text": "bitcoin and we can see that this bitcoin is an error is created successfully but",
    "start": "1281440",
    "end": "1288480"
  },
  {
    "text": "all this time we see that falco is successfully detecting various malicious activities right here",
    "start": "1288480",
    "end": "1294720"
  },
  {
    "text": "so this will for the socket will be really hard to not to notice any malicious activity in this case and here",
    "start": "1294720",
    "end": "1301039"
  },
  {
    "text": "i'm using the lint piece just to demonstrate um if",
    "start": "1301039",
    "end": "1306799"
  },
  {
    "text": "for those of you who know lean peace is a very known in linux enumeration and privileges",
    "start": "1306799",
    "end": "1312640"
  },
  {
    "text": "escalation tool and and it's very popular so if if typical",
    "start": "1312640",
    "end": "1318080"
  },
  {
    "text": "attacker will will run it on the host of course nothing will happen but if they run it on the on the faulty monitored",
    "start": "1318080",
    "end": "1323679"
  },
  {
    "text": "host or container then then that's a problem because falco detects a bunch of",
    "start": "1323679",
    "end": "1329440"
  },
  {
    "text": "um sketchy activities here and of course sock will not stay",
    "start": "1329440",
    "end": "1335600"
  },
  {
    "text": "silent in this case okay let's go scenario two detection scenario two is a bit more evolved",
    "start": "1335600",
    "end": "1343440"
  },
  {
    "text": "the attacker is more advanced after the um so after the",
    "start": "1343440",
    "end": "1349280"
  },
  {
    "text": "scenario one is finished the the defense um actually detected easily that caught",
    "start": "1349280",
    "end": "1355280"
  },
  {
    "text": "and they killed it and so cinderella two was able to get the same web shell but",
    "start": "1355280",
    "end": "1360720"
  },
  {
    "text": "now attacker is more advanced and they want to do something sneakier and they're using",
    "start": "1360720",
    "end": "1366880"
  },
  {
    "text": "this one liner this one liner is very interesting",
    "start": "1366880",
    "end": "1372799"
  },
  {
    "text": "because it smashes the hospital namespace amounts the same process namespace and",
    "start": "1372799",
    "end": "1378640"
  },
  {
    "text": "lounge launches the privilege privilege pod",
    "start": "1378640",
    "end": "1384240"
  },
  {
    "text": "and at this point container has the access to host resources",
    "start": "1384480",
    "end": "1390799"
  },
  {
    "text": "you can see that root is the root of cost at this point um so skip ahead because this",
    "start": "1390799",
    "end": "1398559"
  },
  {
    "text": "right and the attacker has access to the docker circuit um and what attacker does they deploy",
    "start": "1398559",
    "end": "1405280"
  },
  {
    "text": "the bitcoin error this time on the docker through the direct docker api rather than the kubernetes api",
    "start": "1405280",
    "end": "1412320"
  },
  {
    "text": "um and that's a bit sneakier because then the defense will for defense it will be harder to find that bitcoin",
    "start": "1412320",
    "end": "1418640"
  },
  {
    "text": "error um and in addition what attacker does",
    "start": "1418640",
    "end": "1423679"
  },
  {
    "text": "they want to they think about the future so for the persistent they will",
    "start": "1423679",
    "end": "1429120"
  },
  {
    "text": "they find the cubelet token mounted on the host and use this token to actually",
    "start": "1429120",
    "end": "1435520"
  },
  {
    "text": "this is the token and they use the stoking to mount",
    "start": "1435520",
    "end": "1440880"
  },
  {
    "text": "sorry that's the get secrets commands so yes attacker can find any get secrets and this is the amount",
    "start": "1442960",
    "end": "1449200"
  },
  {
    "text": "of the and this is the creation of the um node port service for the future access",
    "start": "1449200",
    "end": "1456559"
  },
  {
    "text": "so attacker at this point is able to open the port on the node",
    "start": "1456559",
    "end": "1461679"
  },
  {
    "text": "um and in the future access this uh this part if needed and we still see that",
    "start": "1461679",
    "end": "1467120"
  },
  {
    "text": "falco is very active at the detection so again it will be quite easy for uh for",
    "start": "1467120",
    "end": "1473600"
  },
  {
    "text": "stock to detect that uh something malicious is going on on the on the uh a particular cluster so",
    "start": "1473600",
    "end": "1481440"
  },
  {
    "text": "um put in the attacker's head now we're trying to avoid falco as",
    "start": "1481440",
    "end": "1489360"
  },
  {
    "text": "as hard as possible we are doing for the same scenario two actions but with the mind that we don't",
    "start": "1489360",
    "end": "1496559"
  },
  {
    "text": "want falco rules to trigger so what we do here we're still copying the cube cattle",
    "start": "1496559",
    "end": "1503760"
  },
  {
    "text": "however we're using our name evasion and we um renaming the cube catalyst k",
    "start": "1503760",
    "end": "1509600"
  },
  {
    "text": "cattle and from now on the falco rules that detects the cattle inactivation within the container will",
    "start": "1509600",
    "end": "1516720"
  },
  {
    "text": "not work and we can easily use the k kettle from that point",
    "start": "1516720",
    "end": "1521919"
  },
  {
    "text": "and so the one liner that i am using it's it's a bit trickier here it's not",
    "start": "1521919",
    "end": "1528480"
  },
  {
    "text": "privileged container at this point we're still smashing the host pid if we can um",
    "start": "1528480",
    "end": "1534320"
  },
  {
    "text": "and i'm running the fibre latest which is the faulty ultimate bypasser image",
    "start": "1534320",
    "end": "1540720"
  },
  {
    "text": "and as you saw already it has g bash which is different from the batch so",
    "start": "1540720",
    "end": "1546000"
  },
  {
    "text": "that rule will not trigger and we're mounting var run to get the access to the docker socket without triggering the",
    "start": "1546000",
    "end": "1552080"
  },
  {
    "text": "mount rule and we are running the g docker ps command",
    "start": "1552080",
    "end": "1558080"
  },
  {
    "text": "and let's see if we have the access to the host level docker circuit",
    "start": "1558080",
    "end": "1564840"
  },
  {
    "text": "yes we do we can see that there's a bunch of uh like kubernetes control plane",
    "start": "1570400",
    "end": "1576000"
  },
  {
    "text": "um images running here containers running here and we have we do have access to that and that's great so at",
    "start": "1576000",
    "end": "1583120"
  },
  {
    "text": "this point we can run commands um i'm what i'm doing right now",
    "start": "1583120",
    "end": "1588960"
  },
  {
    "text": "i am running the g docker i'm actually deploying the bitcoin arrow on the docker",
    "start": "1588960",
    "end": "1597039"
  },
  {
    "text": "and you can see that falca is a bit active so far just it just had several three detections at this point but it's",
    "start": "1597039",
    "end": "1603279"
  },
  {
    "text": "all the same rule and this level is notice an expected connection to kubernetes api and then",
    "start": "1603279",
    "end": "1609840"
  },
  {
    "text": "plowing through using the same wine one liner this time i'm looking for the for the cubelet",
    "start": "1609840",
    "end": "1616880"
  },
  {
    "text": "through the cubelet mounted service account token i'm looking for the one that will be able to",
    "start": "1616880",
    "end": "1622240"
  },
  {
    "text": "to open that to create the nosport service and to open the noteboard",
    "start": "1622240",
    "end": "1628159"
  },
  {
    "text": "by using this token like we can see is that it finally can do whatever we want pretty much so",
    "start": "1628159",
    "end": "1633760"
  },
  {
    "text": "now we have confidence we can mount the we can create the node part service",
    "start": "1633760",
    "end": "1639520"
  },
  {
    "text": "and that's what we do notebook service the name is istio management which is a sneaky way to",
    "start": "1639520",
    "end": "1645440"
  },
  {
    "text": "pretend to be one of the istio services",
    "start": "1645440",
    "end": "1650640"
  },
  {
    "text": "but for our purpose what's interesting here is that falco is still only detects",
    "start": "1650640",
    "end": "1655679"
  },
  {
    "text": "the node is unexpected connection to kubernetes api so in this case if the",
    "start": "1655679",
    "end": "1660799"
  },
  {
    "text": "socket is um geared towards detection of the warnings",
    "start": "1660799",
    "end": "1666240"
  },
  {
    "text": "or errors or up then they will not see the notice plus they might think that",
    "start": "1666240",
    "end": "1671360"
  },
  {
    "text": "this is some kind of false positive that's some kind of rule that triggers excessive amounts of false positives and",
    "start": "1671360",
    "end": "1677039"
  },
  {
    "text": "decide to disable this rule if they if they do see this rule but let's see if we can do even better",
    "start": "1677039",
    "end": "1683440"
  },
  {
    "text": "than that",
    "start": "1683440",
    "end": "1685840"
  },
  {
    "text": "all right so the difference here this we're still talking about the second scenario however",
    "start": "1688960",
    "end": "1694240"
  },
  {
    "text": "i'm modifying the command um a bit to",
    "start": "1694240",
    "end": "1701279"
  },
  {
    "text": "to mount var lib as well the mount command will still not trigger",
    "start": "1702320",
    "end": "1707679"
  },
  {
    "text": "i'm still using for the latest i'm still smashing a horse speed",
    "start": "1707679",
    "end": "1713600"
  },
  {
    "text": "however i'm performing the g bash command so now i'm supposed to get the",
    "start": "1716080",
    "end": "1722880"
  },
  {
    "text": "best shell into the container it's not privileged container but it has",
    "start": "1722880",
    "end": "1727919"
  },
  {
    "text": "the access to the to the doctor and the var leap and the cubelet",
    "start": "1727919",
    "end": "1734640"
  },
  {
    "text": "tokens for the future we have one detection so far",
    "start": "1734640",
    "end": "1741919"
  },
  {
    "text": "we have two detections so far but we are root within the container",
    "start": "1743679",
    "end": "1750480"
  },
  {
    "text": "and we can pull the football latest again",
    "start": "1750480",
    "end": "1755200"
  },
  {
    "text": "and the more important that we have the access to the docker sock so the neat trick that we're doing right",
    "start": "1761039",
    "end": "1766880"
  },
  {
    "text": "here we're tagging the fiber latest as a cystic container",
    "start": "1766880",
    "end": "1772559"
  },
  {
    "text": "and from this point and on falco thinks that cystic that fibrolatus is actually is actually",
    "start": "1772640",
    "end": "1778720"
  },
  {
    "text": "named sysd image so we will be able to bypass that",
    "start": "1778720",
    "end": "1785520"
  },
  {
    "text": "unexpected connection to kubernetes api server because the sysdig",
    "start": "1785520",
    "end": "1790799"
  },
  {
    "text": "is one of the containers that allow to make those calls and as i called it one of the accepted conditions in that rule",
    "start": "1790799",
    "end": "1800320"
  },
  {
    "text": "so let's see that we indeed do that",
    "start": "1800480",
    "end": "1804398"
  },
  {
    "text": "so at this point i'm running additional container from within this is the",
    "start": "1805840",
    "end": "1810960"
  },
  {
    "text": "container which is not really cystic i call it sysdig but it's not it's still fiber",
    "start": "1810960",
    "end": "1816960"
  },
  {
    "text": "latest we can see this in the last on the temp folder it has all those uh",
    "start": "1816960",
    "end": "1822320"
  },
  {
    "text": "utilities that we put there for um however right now from this point and on",
    "start": "1822320",
    "end": "1829200"
  },
  {
    "text": "falco thinks that we're in the csd container so it will excuse this container from accessing the",
    "start": "1829200",
    "end": "1836559"
  },
  {
    "text": "api kubernetes api and at this point we can do whatever we",
    "start": "1836559",
    "end": "1843039"
  },
  {
    "text": "want we can rummish through the cubelet tokens get in the tokens",
    "start": "1843039",
    "end": "1850760"
  },
  {
    "text": "and this command is important i want to list my permissions whatever i can do from",
    "start": "1855200",
    "end": "1861440"
  },
  {
    "text": "within the nested container i'm using the insecure skip tls of course i'm using the g-cube cattle so that",
    "start": "1861440",
    "end": "1868640"
  },
  {
    "text": "falco will not detect that i'm using actual couple i'm using this server from the kubernetes server host from the",
    "start": "1868640",
    "end": "1875519"
  },
  {
    "text": "current container and i'm using the cash tier and cash there is important here i i",
    "start": "1875519",
    "end": "1881120"
  },
  {
    "text": "want to set it a stamp because otherwise the cube cattle will save the cache in",
    "start": "1881120",
    "end": "1886880"
  },
  {
    "text": "the root slash dot cube directory which would trigger the file otherwise",
    "start": "1886880",
    "end": "1894320"
  },
  {
    "text": "and we can see that we do have the the permissions to do whatever we",
    "start": "1896000",
    "end": "1902480"
  },
  {
    "text": "want at this point so at this point we can create node port and whatever we want and still we only have two triggers",
    "start": "1902480",
    "end": "1909679"
  },
  {
    "text": "of unexpected connection um so there we go we have only two",
    "start": "1909679",
    "end": "1916880"
  },
  {
    "text": "triggers for the full cluster compromise including the persistent access for the future hopefully um can we do better",
    "start": "1916880",
    "end": "1923760"
  },
  {
    "text": "than that i'll leave it as a homework so for the fixes if you if you're interested in the full project with all",
    "start": "1923760",
    "end": "1929679"
  },
  {
    "text": "the details those one-liners you can find them in the blackberry github for the channel changelog we had a series of",
    "start": "1929679",
    "end": "1936640"
  },
  {
    "text": "commits on january 25th that went into the 0.31 version",
    "start": "1936640",
    "end": "1942320"
  },
  {
    "text": "discussion and recommendations well uh very quickly and we can we can discuss",
    "start": "1942320",
    "end": "1947440"
  },
  {
    "text": "it more in depth during the q a sections section i would say that hooking points",
    "start": "1947440",
    "end": "1952640"
  },
  {
    "text": "are very important because we do want the same links for example to get resolved as close as possible to",
    "start": "1952640",
    "end": "1957760"
  },
  {
    "text": "possible to the what kernel c to get that the kernel picture no easy way to prevent attack control by",
    "start": "1957760",
    "end": "1963519"
  },
  {
    "text": "passing the rules to land on proc name and proc a name and file name yes that thing needs to be minimized two menu",
    "start": "1963519",
    "end": "1970799"
  },
  {
    "text": "rule includes construct and not because every exception i i understand that that's for false pos to minimize false",
    "start": "1970799",
    "end": "1977279"
  },
  {
    "text": "positives but that's also the the entrance uh entry for the attacker and possibility for the attacker to",
    "start": "1977279",
    "end": "1983039"
  },
  {
    "text": "avoid that evade the true review all priorities in the bypass context period the check of public",
    "start": "1983039",
    "end": "1988159"
  },
  {
    "text": "exploits for the cve specific rules on the example of that through the privilege exploit",
    "start": "1988159",
    "end": "1993200"
  },
  {
    "text": "that i showed and then eventually encourage clients to develop their own private rules because then the",
    "start": "1993200",
    "end": "1999120"
  },
  {
    "text": "attacker needs to know the rules that source before doing any action to",
    "start": "1999120",
    "end": "2004399"
  },
  {
    "text": "understand how is um how to evade those the customer level rules um before starting that app",
    "start": "2004399",
    "end": "2013039"
  },
  {
    "text": "and that's all i had for today thank you so much and i'll be happy to take your questions",
    "start": "2013039",
    "end": "2020600"
  }
]