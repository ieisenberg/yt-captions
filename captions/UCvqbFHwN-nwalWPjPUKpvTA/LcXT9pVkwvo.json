[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "all right welcome can you hear me great uh So today we're going to talk",
    "start": "1260",
    "end": "7919"
  },
  {
    "text": "about Windows containers and uh host process containers for configuration and",
    "start": "7919",
    "end": "13860"
  },
  {
    "text": "Beyond and so before we get too deep into the details of how Windows",
    "start": "13860",
    "end": "20640"
  },
  {
    "text": "containers host process containers work we're going to show you a quick demo get",
    "start": "20640",
    "end": "26100"
  },
  {
    "start": "21000",
    "end": "21000"
  },
  {
    "text": "right into it and show you how this works who here has used Windows containers before all right and who has",
    "start": "26100",
    "end": "33180"
  },
  {
    "text": "had to debug and get onto the node like SSH or RDP onto the node all right so",
    "start": "33180",
    "end": "39840"
  },
  {
    "text": "only one or two folks but you know how painful that is and so for everybody else SSH sshing into the node usually",
    "start": "39840",
    "end": "47820"
  },
  {
    "text": "requires doing a proxy jump or already like setting up a VM inside the network",
    "start": "47820",
    "end": "54840"
  },
  {
    "text": "so you can RDP then you need to know that the password to that VM and it's difficult challenging and so what I'm",
    "start": "54840",
    "end": "62640"
  },
  {
    "text": "going to show you here today is uh we're gonna use a cube CTL plugin to connect to the",
    "start": "62640",
    "end": "69840"
  },
  {
    "text": "node and get direct access to the node no SSH no",
    "start": "69840",
    "end": "75060"
  },
  {
    "text": "um no passwords none of that and so we're going to get just",
    "start": "75060",
    "end": "81119"
  },
  {
    "text": "easy access and so in the demo things to look for are how fast this container",
    "start": "81119",
    "end": "87420"
  },
  {
    "text": "boots up and um and the tools we get to use such as vim and other things",
    "start": "87420",
    "end": "95179"
  },
  {
    "text": "so I'm going to start the demo here first thing we're going to do is take a",
    "start": "95700",
    "end": "101040"
  },
  {
    "text": "quick look at the the nodes so you're going to see a Linux node and a Windows node and then we're going to install the",
    "start": "101040",
    "end": "108119"
  },
  {
    "text": "plugin so we're going to use crew to do that crew install Windows debug",
    "start": "108119",
    "end": "114000"
  },
  {
    "text": "uh crew if you have not familiar with crew it installs a plug-in so you can start to use that tool directly with",
    "start": "114000",
    "end": "119520"
  },
  {
    "text": "cubectl next I'm going to run Cube CTL Windows debug and it's so fast that I can barely",
    "start": "119520",
    "end": "126600"
  },
  {
    "text": "say it we just got connected to the windows node and we have access to the root file system there and we can run",
    "start": "126600",
    "end": "133520"
  },
  {
    "text": "programs on the application we can see all the logs and there was no SSH or RDP",
    "start": "133520",
    "end": "141060"
  },
  {
    "text": "I've also got access to Vim uh which is typically not something you install on the on the machines but now I",
    "start": "141060",
    "end": "147900"
  },
  {
    "text": "can edit the config files kind of poke around do some searching with inside the error logs or anything else there",
    "start": "147900",
    "end": "155940"
  },
  {
    "text": "and so uh this is all hosted inside this HPC folder here",
    "start": "155940",
    "end": "161519"
  },
  {
    "text": "and inside there you're going to see we have um Vim but we also have some networking",
    "start": "161519",
    "end": "166920"
  },
  {
    "text": "scripts that we ship out of the box so that you can collect traces and packets",
    "start": "166920",
    "end": "173760"
  },
  {
    "text": "and all sorts of other things there and the best part about that is it all goes away when the",
    "start": "173760",
    "end": "180959"
  },
  {
    "text": "um when the container gets killed so that's a quick demo hopefully that",
    "start": "180959",
    "end": "187200"
  },
  {
    "text": "gets you excited uh I'm James Sturdivant I'm a software engineer at Microsoft",
    "start": "187200",
    "end": "192739"
  },
  {
    "text": "I've been working with Windows containers for four or five years now I'm a tech lead for Sig windows and uh",
    "start": "192739",
    "end": "200400"
  },
  {
    "text": "maintainer at cluster API for azure uh mostly doing windows work there and I",
    "start": "200400",
    "end": "207540"
  },
  {
    "text": "know how to make fire six different ways using only sticks and stones and that's related to my Twitter handle Aspen",
    "start": "207540",
    "end": "214200"
  },
  {
    "text": "Wilder so you can ask me about that later mark yeah hi I'm Mark Rossetti I am also a",
    "start": "214200",
    "end": "220080"
  },
  {
    "text": "software engineer at Microsoft I am the co-chair of Sig windows and I kind of pop in all around different parts of",
    "start": "220080",
    "end": "226620"
  },
  {
    "text": "core kubernetes to make sure things work with Windows um I am not generally on Twitter",
    "start": "226620",
    "end": "232799"
  },
  {
    "text": "okay uh so here's a little bit about what we're going to talk about today uh first we're going to do an overview of what host process containers are that",
    "start": "232799",
    "end": "238080"
  },
  {
    "text": "was the new kind of feature that powered everything in that demo then we're going to go deep into one or two deployments",
    "start": "238080",
    "end": "244379"
  },
  {
    "text": "to show you guys kind of how it works and then we're going to probably fill out most of the rest of the time with some demos and then have some additional",
    "start": "244379",
    "end": "251400"
  },
  {
    "text": "resources and some questions and answers so first off what are host process containers",
    "start": "251400",
    "end": "257220"
  },
  {
    "start": "257000",
    "end": "257000"
  },
  {
    "text": "host process containers are conceptually equivalent to privileged containers on Linux for anybody who's familiar with",
    "start": "257220",
    "end": "263280"
  },
  {
    "text": "that um really just as a way where you can package distribute and deploy your workloads as containers to Windows nodes",
    "start": "263280",
    "end": "269699"
  },
  {
    "text": "uh these containers run as a process directly on the host hence the name host",
    "start": "269699",
    "end": "274919"
  },
  {
    "text": "process containers um which gives you you know almost full access to the host's file system you",
    "start": "274919",
    "end": "280680"
  },
  {
    "text": "know Network stack process space event viewers all of that I say almost because we'll demo some security considerations",
    "start": "280680",
    "end": "286860"
  },
  {
    "text": "for all of these in the future the other great thing about this is we really designed this feature to be you know",
    "start": "286860",
    "end": "292740"
  },
  {
    "text": "kubernetes first so the deployed as containers but they run just as a normal pod so you get the benefits of all the",
    "start": "292740",
    "end": "299699"
  },
  {
    "text": "different constructs that you're used to like volume mounts you know resource limits everything that's managed there",
    "start": "299699",
    "end": "305759"
  },
  {
    "text": "are listed there so uh what are some of the motivations for this really I think as James hit uh",
    "start": "305759",
    "end": "312479"
  },
  {
    "start": "309000",
    "end": "309000"
  },
  {
    "text": "earlier managing and provisioning waiter knows was extremely difficult um also there really wasn't a good",
    "start": "312479",
    "end": "318419"
  },
  {
    "text": "standardized way to deploy many of the essential components that needed to run on the Node your cni Solutions Cube",
    "start": "318419",
    "end": "324360"
  },
  {
    "text": "proxy before all of that uh really it was just up to the whoever was setting up the",
    "start": "324360",
    "end": "330720"
  },
  {
    "text": "node to set that up it often involves a lot of custom Powershell to parse environment um",
    "start": "330720",
    "end": "336240"
  },
  {
    "text": "relied on third-party you know service managers often and SSM was the big one there really was a poor upgrade story",
    "start": "336240",
    "end": "343740"
  },
  {
    "text": "you needed to orchestrate logging into the node and rolling your own updates each time",
    "start": "343740",
    "end": "349080"
  },
  {
    "text": "um and it also yeah just another downside was requiring access to the node",
    "start": "349080",
    "end": "355199"
  },
  {
    "text": "um and then your workloads once they were running uh with this they were very difficult to",
    "start": "355199",
    "end": "360600"
  },
  {
    "text": "monitor you really didn't have any visibility into if they were running or not the error State",
    "start": "360600",
    "end": "366180"
  },
  {
    "text": "um again you required access to the nodes to even get that information and you had no easy way to get your logs",
    "start": "366180",
    "end": "372660"
  },
  {
    "text": "now with host process containers you can deploy all of these workloads just as demon sets so it's a you know familiar",
    "start": "372660",
    "end": "378660"
  },
  {
    "text": "upgrade story familiar deployment story runs as a container which everybody here is uh here is used to you have uh",
    "start": "378660",
    "end": "385500"
  },
  {
    "text": "rolling updates all of that and actually no access to the node is required as already demoed",
    "start": "385500",
    "end": "392580"
  },
  {
    "text": "um and then once your workloads are deployed you monitor them just like anything else you could do just check to",
    "start": "392580",
    "end": "397680"
  },
  {
    "text": "see if your pods are running they'll get restarted if they're not you can use logs to monitor them all of that",
    "start": "397680",
    "end": "405720"
  },
  {
    "text": "um here's a little bit of information about the history of this feature um this feature went beta in kubernetes 123",
    "start": "405720",
    "end": "412020"
  },
  {
    "text": "that's when it's generally on by default so it called that out here and it is going stable in this next release of",
    "start": "412020",
    "end": "418380"
  },
  {
    "text": "kubernetes one thing to note though is this functionality is only supported if",
    "start": "418380",
    "end": "423600"
  },
  {
    "text": "you're running container d as your container runtime I believe most Windows users have migrated to that now so",
    "start": "423600",
    "end": "430319"
  },
  {
    "text": "big issue so here we're going to go into some deployments James",
    "start": "430319",
    "end": "436259"
  },
  {
    "text": "cool so um now that you know kind of what host process containers are we wanted to show",
    "start": "436259",
    "end": "441720"
  },
  {
    "text": "you how you'd actually use them and so we're going to take a look at a big spec here and don't worry I'm going",
    "start": "441720",
    "end": "448139"
  },
  {
    "text": "to zoom in here and the first thing we're going to take a look at is the Pod spec and using the",
    "start": "448139",
    "end": "455580"
  },
  {
    "text": "um security context so this is the standard Windows security context that we're",
    "start": "455580",
    "end": "461280"
  },
  {
    "text": "hooking into here you can see that we'd say host process true and then we specify who we want to run as and this",
    "start": "461280",
    "end": "468840"
  },
  {
    "text": "is powerful because we can use security policies to block uh people deploying",
    "start": "468840",
    "end": "474599"
  },
  {
    "text": "these because it's built into the Pod spec uh we also specify host Network equals",
    "start": "474599",
    "end": "483180"
  },
  {
    "text": "true we need to work uh for the cni specifically we need to work within the host Network compartment to be able to",
    "start": "483180",
    "end": "489419"
  },
  {
    "text": "program all the the rules for the networking in there uh and so uh we have access to that there as well and Mark's",
    "start": "489419",
    "end": "496199"
  },
  {
    "text": "working on a cap to enable that for regular containers as well so if you're interested in that you can talk to him",
    "start": "496199",
    "end": "502080"
  },
  {
    "text": "afterwards the next part I want to dive in on is",
    "start": "502080",
    "end": "507720"
  },
  {
    "text": "the init containers so Mark said we we built this with kubernetes uh",
    "start": "507720",
    "end": "514620"
  },
  {
    "text": "the kubernetes uh ideas in in mind and so we can use init containers with these",
    "start": "514620",
    "end": "520080"
  },
  {
    "text": "host process containers and uh this enables us to be able to install things",
    "start": "520080",
    "end": "525120"
  },
  {
    "text": "like cni binaries this is a very familiar pattern from the Linux side and so I no longer need to go download these",
    "start": "525120",
    "end": "531660"
  },
  {
    "text": "things and prep them on my windows node initially I can apply them at the the time I'm applying my cni it enables",
    "start": "531660",
    "end": "538860"
  },
  {
    "text": "things for upgrades and other things like that and I can also pass in the configuration",
    "start": "538860",
    "end": "544140"
  },
  {
    "text": "at this time so I no longer need to know that I'm going to be running overlay or",
    "start": "544140",
    "end": "549360"
  },
  {
    "text": "sdn Bridge or any of those things I can swap out the configuration using a",
    "start": "549360",
    "end": "554580"
  },
  {
    "text": "config map at that time next up we have multiple containers here",
    "start": "554580",
    "end": "560820"
  },
  {
    "text": "uh Calico needs a little bit of prep before Felix runs to be able to talk to",
    "start": "560820",
    "end": "566760"
  },
  {
    "text": "the kubernetes API and so we're able to run more than one container inside this pod with that host process and then they",
    "start": "566760",
    "end": "574140"
  },
  {
    "text": "communicate to each other via the file system in this case uh but there's other ways they could do that",
    "start": "574140",
    "end": "580820"
  },
  {
    "text": "and the most exciting part here is that they have full access to the API server",
    "start": "581180",
    "end": "586260"
  },
  {
    "text": "using the security sorry the service account that's applied to the Pod and so",
    "start": "586260",
    "end": "593339"
  },
  {
    "text": "you can specify that they're able to access different components of the API and communicate with them without having",
    "start": "593339",
    "end": "600600"
  },
  {
    "text": "to copy around Cube configs and do other things which is the way that we did that on the on the host node prior to this",
    "start": "600600",
    "end": "610200"
  },
  {
    "text": "next up is we're using volume mounts and so I kind of alluded this before but I can map in exactly where I want to copy",
    "start": "610200",
    "end": "617160"
  },
  {
    "text": "those cni binaries and then I can also use the config map to configure the the",
    "start": "617160",
    "end": "624060"
  },
  {
    "text": "cni in the way that I want to",
    "start": "624060",
    "end": "627560"
  },
  {
    "text": "so uh the next part that I wanted to call out here is uh Q proxy so we're also",
    "start": "630899",
    "end": "636120"
  },
  {
    "text": "enabled this for Q proxy and we're using it basically in the same way you'll see",
    "start": "636120",
    "end": "641399"
  },
  {
    "text": "the host process security context at the top there but we also are using the",
    "start": "641399",
    "end": "649440"
  },
  {
    "text": "um downward API to pass in information because this is built into kubernetes we",
    "start": "649440",
    "end": "655019"
  },
  {
    "text": "no longer have to use our Powershell scripts and do some kind of fancy thing to go figure out exactly what the Pod IP",
    "start": "655019",
    "end": "661260"
  },
  {
    "text": "address is we get that information just given to us through the the kubernetes",
    "start": "661260",
    "end": "666360"
  },
  {
    "text": "native constructs and on top of that we can use taints and",
    "start": "666360",
    "end": "673260"
  },
  {
    "text": "tolerations with these so we can say we only this is a critical component because it's the cube proxy we need this",
    "start": "673260",
    "end": "679680"
  },
  {
    "text": "running at all times and then upgrading becomes super simple we're using kubernetes upgrade strategies here",
    "start": "679680",
    "end": "686519"
  },
  {
    "text": "instead of having to build our own through some sort of Powershell scripts or something along those lines",
    "start": "686519",
    "end": "693660"
  },
  {
    "text": "and so uh for those that may have noticed at the top when we were talking about who this container runs as Mark is",
    "start": "693660",
    "end": "702120"
  },
  {
    "text": "going to talk a little bit about how we can restrict the access of that container user",
    "start": "702120",
    "end": "709279"
  },
  {
    "text": "yeah so you'll notice in the previous demos we were running as a local system account that's generally not desirable",
    "start": "710519",
    "end": "716399"
  },
  {
    "start": "711000",
    "end": "711000"
  },
  {
    "text": "and a lot in a lot of cases so we do have some mechanisms so that people can configure uh what access these",
    "start": "716399",
    "end": "722760"
  },
  {
    "text": "containers have on each one of the nodes there's a demo here that I'll kind of narrate as it's going through so this",
    "start": "722760",
    "end": "728640"
  },
  {
    "text": "deployment has a Powershell script",
    "start": "728640",
    "end": "732860"
  },
  {
    "text": "what was that um yes yes essentially",
    "start": "733920",
    "end": "741360"
  },
  {
    "text": "so he asked if that would be equivalent of a like a running run as as a service account and yes yes it is",
    "start": "741360",
    "end": "748500"
  },
  {
    "text": "um so here you'll see here there's a Powershell script that gets plopped in as a config map that runs on the nodes",
    "start": "748500",
    "end": "753600"
  },
  {
    "text": "the first thing we do is we use a net local user to create a local user account and then we create some folders",
    "start": "753600",
    "end": "759660"
  },
  {
    "text": "and get different access to those um here you'll see well we just missed there's an init container that all it",
    "start": "759660",
    "end": "765720"
  },
  {
    "text": "does is it run that runs that script and then there's two workload containers in here one that runs as that NT Authority",
    "start": "765720",
    "end": "771720"
  },
  {
    "text": "system and one that runs where we set the run as username to that new local group name and that's what's highlighted",
    "start": "771720",
    "end": "777480"
  },
  {
    "text": "here so this local group did not exist on the machine before this deployment started",
    "start": "777480",
    "end": "783180"
  },
  {
    "text": "um so here we'll start this deployment and then we'll wait for the containers to run and then we'll",
    "start": "783180",
    "end": "790019"
  },
  {
    "text": "poke around inside the containers",
    "start": "790019",
    "end": "793519"
  },
  {
    "text": "so this is the what I call the admin container um here you can see we're running as Senti Authority system and",
    "start": "797940",
    "end": "804000"
  },
  {
    "text": "we'll just see if we have access to these different chairs in this case we have access to both of them",
    "start": "804000",
    "end": "810980"
  },
  {
    "text": "and here's the other share",
    "start": "818459",
    "end": "821899"
  },
  {
    "text": "so now we'll exec into the other container that was running as that local user group I'll talk more about the the",
    "start": "832680",
    "end": "839339"
  },
  {
    "text": "output of this who am I in a minute um but here you'll see that we",
    "start": "839339",
    "end": "844560"
  },
  {
    "text": "I think we try and access that admin share and get an access denied and then we try",
    "start": "844560",
    "end": "850260"
  },
  {
    "text": "and access that other share",
    "start": "850260",
    "end": "853459"
  },
  {
    "text": "and we have access to that chair so I'll talk about what's going on here um usually so now I mean we realize that",
    "start": "857220",
    "end": "864720"
  },
  {
    "text": "this is a pretty powerful feature and we want to limit access to the node but we're trying to figure out a way to do that that didn't require having people",
    "start": "864720",
    "end": "870779"
  },
  {
    "text": "manage uh you know user accounts on the nodes either using weak passwords or",
    "start": "870779",
    "end": "876060"
  },
  {
    "text": "potentially no passwords or other things so what happens here is if you pass in the local group name as that run as user",
    "start": "876060",
    "end": "883440"
  },
  {
    "text": "name when these containers are started we'll actually create a new user a local user add it to that group so We'll",
    "start": "883440",
    "end": "889560"
  },
  {
    "text": "Inherit all the security permissions from that group and then your container will run as that user and then that user",
    "start": "889560",
    "end": "894959"
  },
  {
    "text": "will get cleaned up at the end um this is beneficial because yeah it makes it a lot easier to manage these",
    "start": "894959",
    "end": "901920"
  },
  {
    "text": "user accounts you don't need these passwords and there's a lot of benefits to this another nice thing with this is",
    "start": "901920",
    "end": "908940"
  },
  {
    "text": "it really completely falls into the Windows security model so you assign access or deny access to all of the",
    "start": "908940",
    "end": "915660"
  },
  {
    "text": "different Windows resources just with Native Windows constructs like these local security groups here and as James",
    "start": "915660",
    "end": "922440"
  },
  {
    "text": "mentioned here we're relying on people using different policy engines to restrict who can like who these",
    "start": "922440",
    "end": "929160"
  },
  {
    "text": "containers can run as and what namespaces and all of that",
    "start": "929160",
    "end": "933740"
  },
  {
    "text": "I need to check um I don't well let's uh I'll bring some other",
    "start": "937800",
    "end": "943980"
  },
  {
    "text": "people up to help answer that question yeah um one other thing that I wanted to call out here is you may have noticed that",
    "start": "943980",
    "end": "950399"
  },
  {
    "text": "these containers start pretty fast for Windows containers as we were developing this feature we noticed like since it is",
    "start": "950399",
    "end": "956940"
  },
  {
    "text": "a process just running directly on the host you really don't need all of the stuff that comes in with these windows",
    "start": "956940",
    "end": "962760"
  },
  {
    "text": "container based images so we tried to make it so that you didn't need this and",
    "start": "962760",
    "end": "968220"
  },
  {
    "text": "uh so we created a new base image here this new base image can only be used with host process containers but it is",
    "start": "968220",
    "end": "974399"
  },
  {
    "text": "very small it's about 25 kilobytes which if people are used to working with Windows other windows containers Nano",
    "start": "974399",
    "end": "979980"
  },
  {
    "text": "servers on the order of 100 megabytes um one other benefit with this is the same image will work across all versions",
    "start": "979980",
    "end": "986399"
  },
  {
    "text": "of Windows Server so you can build a single container image and deploy it to your Windows Server 2019 nodes your windows 20 or server 2020",
    "start": "986399",
    "end": "993500"
  },
  {
    "text": "2022 nodes and that too um one thing I will note is you must use",
    "start": "993500",
    "end": "998639"
  },
  {
    "text": "buildkit to build this image but there's a demo here and for anybody who's interested there's a GitHub repository",
    "start": "998639",
    "end": "1004040"
  },
  {
    "text": "that has the source code that's used to build the image and instructions on how to uh",
    "start": "1004040",
    "end": "1009139"
  },
  {
    "text": "how to use this too and uh if anybody is not familiar with using buildkit to",
    "start": "1009139",
    "end": "1014300"
  },
  {
    "start": "1010000",
    "end": "1010000"
  },
  {
    "text": "build images it's pretty easy so here's a quick Demo First we'll have a Hello World file that just says hello world",
    "start": "1014300",
    "end": "1022000"
  },
  {
    "text": "and a Docker file and then so with buildx you need to make",
    "start": "1022000",
    "end": "1027860"
  },
  {
    "text": "a buildx builder and specify the target operating system or the platform to use but then you can just use Docker build X",
    "start": "1027860",
    "end": "1034640"
  },
  {
    "text": "build commands to build that so in this case building it pushing it to a registry and then here I've got a pod",
    "start": "1034640",
    "end": "1042319"
  },
  {
    "text": "spec that's using that and then we'll run it and I this image",
    "start": "1042319",
    "end": "1048980"
  },
  {
    "text": "was not pre-pulled on this machine here too so super fast",
    "start": "1048980",
    "end": "1057580"
  },
  {
    "text": "all right James all right so now that we have an",
    "start": "1061820",
    "end": "1068240"
  },
  {
    "text": "understanding of what host process containers are and how to configure them and operate with them we wanted to show",
    "start": "1068240",
    "end": "1075860"
  },
  {
    "text": "off a few tools that the community has already built with host process containers the",
    "start": "1075860",
    "end": "1083179"
  },
  {
    "text": "first one we're going to show is a tool that I developed that I solved the",
    "start": "1083179",
    "end": "1088580"
  },
  {
    "text": "problem that I needed inside Sig windows and so I I'm one of the ones that maintain all the Sig Windows tests and",
    "start": "1088580",
    "end": "1095840"
  },
  {
    "text": "we have occasional flakes that happen every 40th or 50th run and we needed",
    "start": "1095840",
    "end": "1102020"
  },
  {
    "text": "Windows traces ETL traces to be able to collect and debug these things because we identified",
    "start": "1102020",
    "end": "1109039"
  },
  {
    "text": "that the bug was in the OS uh running a trace these end-to-end",
    "start": "1109039",
    "end": "1115880"
  },
  {
    "text": "tests take about an hour to or so to run and running a trace for that long would",
    "start": "1115880",
    "end": "1122000"
  },
  {
    "text": "result in a many gigabyte uh size file a massive uh and so I needed a way to be",
    "start": "1122000",
    "end": "1128240"
  },
  {
    "text": "able to uh trigger when that when a specific test was running and then",
    "start": "1128240",
    "end": "1133880"
  },
  {
    "text": "kick off the uh traces and then get them uploaded somewhere so what I'm going to",
    "start": "1133880",
    "end": "1140000"
  },
  {
    "text": "show you here is uh the tool that I built to do this I've called the trigger logger",
    "start": "1140000",
    "end": "1146260"
  },
  {
    "start": "1143000",
    "end": "1143000"
  },
  {
    "text": "which not very creative here and so first thing we'll do is",
    "start": "1146260",
    "end": "1151940"
  },
  {
    "text": "uh we're gonna install the trigger Locker so it's just a yaml file it is a host process container that's running in",
    "start": "1151940",
    "end": "1158480"
  },
  {
    "text": "the background uh and it um it has a config map and that config map",
    "start": "1158480",
    "end": "1165500"
  },
  {
    "text": "allows you to to configure this this tool and the thing that we're going to look at is uh it has a trigger that runs",
    "start": "1165500",
    "end": "1174140"
  },
  {
    "text": "on namespace creation I know what that namespace is that's going to be created in the test and so every time that test",
    "start": "1174140",
    "end": "1180440"
  },
  {
    "text": "kicks off I'm going to run that next up once that trigger triggers I'm going to",
    "start": "1180440",
    "end": "1185960"
  },
  {
    "text": "run wpr or Windows performance recorder the windows performance recorder is a",
    "start": "1185960",
    "end": "1191120"
  },
  {
    "text": "thing that creates that ETL file and then finally at the end once once I",
    "start": "1191120",
    "end": "1197299"
  },
  {
    "text": "destroy the namespace I'm going to upload that to Azure storage or any kind of blob storage",
    "start": "1197299",
    "end": "1203059"
  },
  {
    "text": "that's available to me so I've got this tool running you'll see",
    "start": "1203059",
    "end": "1210320"
  },
  {
    "text": "that it is using the in cluster config that I mentioned before so it's communicating to the API server and it's",
    "start": "1210320",
    "end": "1216980"
  },
  {
    "text": "using the the service account that I've wired that has access to list namespaces",
    "start": "1216980",
    "end": "1222620"
  },
  {
    "text": "uh it's listening to all the namespaces inside the cluster and then the next step for me is going to uh we're going",
    "start": "1222620",
    "end": "1229940"
  },
  {
    "text": "to listen to the logs of um the trigger logger and create that",
    "start": "1229940",
    "end": "1236600"
  },
  {
    "text": "namespace so on the left hand side here uh I'm just going to tail the logs",
    "start": "1236600",
    "end": "1242600"
  },
  {
    "text": "you'll see the same logs we just saw and then now I'm going to create the namespace that it's listening for in",
    "start": "1242600",
    "end": "1249320"
  },
  {
    "text": "this case I called it wpr CPU it could be anything you want and on the left we'll see that",
    "start": "1249320",
    "end": "1255919"
  },
  {
    "text": "immediately Windows performance recorder started running and this is something that's built into all of the Windows operating",
    "start": "1255919",
    "end": "1264260"
  },
  {
    "text": "systems and I'm collecting CPU disk file information and then I'm going to delete",
    "start": "1264260",
    "end": "1270200"
  },
  {
    "text": "that namespace and once it's deleted we'll see uh we Pro we're processing",
    "start": "1270200",
    "end": "1276559"
  },
  {
    "text": "that event and then we write the ETL file out so once this ETL file processes we then",
    "start": "1276559",
    "end": "1285080"
  },
  {
    "text": "run off and start uploading it to Azure and I forgot to cut this out so I'm going to skip ahead a little bit here",
    "start": "1285080",
    "end": "1292400"
  },
  {
    "text": "uh",
    "start": "1292400",
    "end": "1295179"
  },
  {
    "text": "let's see oh",
    "start": "1297799",
    "end": "1304539"
  },
  {
    "text": "it won't let me uh skip ahead",
    "start": "1310159",
    "end": "1314320"
  },
  {
    "text": "sorry about that",
    "start": "1317659",
    "end": "1320620"
  },
  {
    "text": "I don't know uh that's too bad so uh I I will I will",
    "start": "1327140",
    "end": "1333200"
  },
  {
    "text": "upload this to YouTube later but uh what happens next is it gets uploaded to azure and once it's on Azure I'm able to",
    "start": "1333200",
    "end": "1340220"
  },
  {
    "text": "pull that ETL file down use Windows performance analyzer and I can see the",
    "start": "1340220",
    "end": "1346039"
  },
  {
    "text": "individual stack traces how much CPU how much memory is used on the Node",
    "start": "1346039",
    "end": "1351280"
  },
  {
    "text": "and I'm able to identify exactly where we're having a performance problem or",
    "start": "1351280",
    "end": "1356900"
  },
  {
    "text": "something else and I've used this specifically to improve cubelet from going from using about three percent",
    "start": "1356900",
    "end": "1363260"
  },
  {
    "text": "steady CPU down to 1.5 and so a super powerful way to and to uh analyze and",
    "start": "1363260",
    "end": "1370460"
  },
  {
    "text": "debug these things and uh fire them off on on demand",
    "start": "1370460",
    "end": "1377860"
  },
  {
    "start": "1378000",
    "end": "1378000"
  },
  {
    "text": "so the next one um this one I won't skip through uh is a networking demo and so this one",
    "start": "1379280",
    "end": "1386299"
  },
  {
    "text": "was built by our networking team and um they need to be able to",
    "start": "1386299",
    "end": "1393559"
  },
  {
    "text": "identify uh packets being dropped or manipulated throughout the the VM and so",
    "start": "1393559",
    "end": "1400760"
  },
  {
    "text": "what what they've developed is this component called uh when container",
    "start": "1400760",
    "end": "1406700"
  },
  {
    "text": "Network inspector and it's a Daemon set that runs on the nodes and does some",
    "start": "1406700",
    "end": "1412640"
  },
  {
    "text": "controlling uh of the various processes that are related to networking and once",
    "start": "1412640",
    "end": "1419000"
  },
  {
    "text": "that's installed I can connect to it using a command line tool called win inspector and once I'm",
    "start": "1419000",
    "end": "1427760"
  },
  {
    "text": "connected there the this tool will let me query various networking",
    "start": "1427760",
    "end": "1434960"
  },
  {
    "text": "commands and so I can see I can do cap Network packet captures I can do",
    "start": "1434960",
    "end": "1440299"
  },
  {
    "text": "counters I can query the hns logs which is where the networking configuration",
    "start": "1440299",
    "end": "1446000"
  },
  {
    "text": "that's set up and so here I've run that networking configuration and I can see",
    "start": "1446000",
    "end": "1451159"
  },
  {
    "text": "all the networks that are created on the law on a node I can see all the load balancers that have been created and I",
    "start": "1451159",
    "end": "1458360"
  },
  {
    "text": "can see all the mappings between those so if something got misconfigured somewhere it's very easy to inspect that",
    "start": "1458360",
    "end": "1464539"
  },
  {
    "text": "and this is super powerful in a large cluster if you have a hundred different nodes and you you're saying hey this",
    "start": "1464539",
    "end": "1471620"
  },
  {
    "text": "node here is acting weird and I'm going to go inspect it so the next step that um I kicked off",
    "start": "1471620",
    "end": "1478880"
  },
  {
    "text": "here is a packet Trace so I've got an IIs application running on that node",
    "start": "1478880",
    "end": "1484780"
  },
  {
    "text": "and with kubernetes obviously most of the packet traces that I'm interested in",
    "start": "1484780",
    "end": "1490159"
  },
  {
    "text": "are probably about a specific container and so when I",
    "start": "1490159",
    "end": "1496940"
  },
  {
    "text": "um so I can say I'm going to capture the packets for this particular pod within",
    "start": "1496940",
    "end": "1503419"
  },
  {
    "text": "my entire cluster again very powerful because I no longer need to capture all",
    "start": "1503419",
    "end": "1508460"
  },
  {
    "text": "of the networking traffic across all of the stack happening on a particular note",
    "start": "1508460",
    "end": "1514400"
  },
  {
    "text": "which could be very noisy uh and so here I'm going to send the curl request and then on the right hand",
    "start": "1514400",
    "end": "1520880"
  },
  {
    "text": "side you should see a bunch of traffic coming in if you know what you're looking here this is just telling you",
    "start": "1520880",
    "end": "1526159"
  },
  {
    "text": "the packets going through the the various components of the networking stack this can be converted to",
    "start": "1526159",
    "end": "1533000"
  },
  {
    "text": "uh a Wireshark and so you can load this into Wireshark and then analyze it from",
    "start": "1533000",
    "end": "1538159"
  },
  {
    "text": "there and we're using packetmon behind the scenes which is another tool that ships with Windows server and the latest",
    "start": "1538159",
    "end": "1544520"
  },
  {
    "text": "releases and so I can filter down to individual packets I can fill it down",
    "start": "1544520",
    "end": "1549860"
  },
  {
    "text": "into individual components within the networking stack and and just see those components",
    "start": "1549860",
    "end": "1556279"
  },
  {
    "text": "and the last thing I'm going to show here is sometimes you don't know what's going on",
    "start": "1556279",
    "end": "1562520"
  },
  {
    "text": "and you know that maybe the packets are dropping but you're not sure how bad it is and so I can just quickly query",
    "start": "1562520",
    "end": "1569120"
  },
  {
    "text": "against the a node and it will give me the counters that uh are being seen on",
    "start": "1569120",
    "end": "1574520"
  },
  {
    "text": "that node and so then from there I can narrow it down to something else that's happening",
    "start": "1574520",
    "end": "1581320"
  },
  {
    "text": "yeah so the networking team actually used this to identify some various bugs within uh some some customers that we",
    "start": "1583159",
    "end": "1591500"
  },
  {
    "text": "had experienced and this enabled them to identify an individual pod running in a",
    "start": "1591500",
    "end": "1599059"
  },
  {
    "text": "100 node cluster and say this is the component that is is causing problems so",
    "start": "1599059",
    "end": "1605360"
  },
  {
    "text": "super powerful tools these are all open source and the next part we're going to",
    "start": "1605360",
    "end": "1610880"
  },
  {
    "text": "step into is just some additional resources so since we have released host process",
    "start": "1610880",
    "end": "1618320"
  },
  {
    "start": "1615000",
    "end": "1615000"
  },
  {
    "text": "containers for um for kubernetes and 123. we've had a",
    "start": "1618320",
    "end": "1624080"
  },
  {
    "text": "huge adoption of this across the ecosystem as you can see from all these projects so that when Windows container",
    "start": "1624080",
    "end": "1631220"
  },
  {
    "text": "inspect is in there cube proxies in their Calico and I think one of the other",
    "start": "1631220",
    "end": "1639620"
  },
  {
    "text": "really good ones is Windows exporter for Prometheus so there's a ton out there there's even more that we didn't get to",
    "start": "1639620",
    "end": "1645140"
  },
  {
    "text": "list here and the thing I want to call out if you are new to the kubernetes",
    "start": "1645140",
    "end": "1650299"
  },
  {
    "text": "ecosystem and you want to contribute this is a great way to contribute to Windows there's a lot of examples out",
    "start": "1650299",
    "end": "1656840"
  },
  {
    "text": "there that you can leverage and there's a lot of projects that either don't know this is available or don't have the",
    "start": "1656840",
    "end": "1663500"
  },
  {
    "text": "windows expertise to be able to do this and so you can go out there and make a pretty significant contribution that",
    "start": "1663500",
    "end": "1669980"
  },
  {
    "text": "enables the ecosystem",
    "start": "1669980",
    "end": "1673840"
  },
  {
    "text": "oh yeah so this this feature and all of the like the things that we've demoed here were really developed in",
    "start": "1675980",
    "end": "1681860"
  },
  {
    "text": "conjunction with Sig windows so we wanted to take a minute to highlight some other upcoming talks related to Sig Windows um there's a Windows operational",
    "start": "1681860",
    "end": "1687980"
  },
  {
    "text": "Readiness talk tomorrow there's a Sig Windows maintainer track talk tomorrow and then there's a interesting Lessons",
    "start": "1687980",
    "end": "1694580"
  },
  {
    "text": "Learned From scheduling 20 million Windows containers in a month talk on Friday so if you're interested uh please",
    "start": "1694580",
    "end": "1699860"
  },
  {
    "text": "come support us and um before we get to the Q a I just wanted to put up some resource slides",
    "start": "1699860",
    "end": "1705860"
  },
  {
    "start": "1701000",
    "end": "1701000"
  },
  {
    "text": "here um don't worry about taking this down just download the slides off sketch but there's a lot more information about",
    "start": "1705860",
    "end": "1711919"
  },
  {
    "text": "the cap the discussions that went into eventually bring this feature to froshin um documentation on how to use it lots",
    "start": "1711919",
    "end": "1718520"
  },
  {
    "text": "of examples um all of that if anybody is interested in participating or getting more",
    "start": "1718520",
    "end": "1723740"
  },
  {
    "text": "information here uh we encourage you to just go through the normal Sig Windows communication channels uh the biggest",
    "start": "1723740",
    "end": "1728900"
  },
  {
    "text": "one being the Sig Windows slack Channel but there's also we have a community guide on how to reach us and we have a",
    "start": "1728900",
    "end": "1736520"
  },
  {
    "text": "community meeting every Tuesday at 12 30 PST so hope to see more people there",
    "start": "1736520",
    "end": "1741919"
  },
  {
    "text": "next we'll open it up to q a and at the same time I'll just leave this up if anybody wants to leave some feedback",
    "start": "1741919",
    "end": "1750039"
  },
  {
    "text": "foreign one of the differences between a",
    "start": "1763220",
    "end": "1769340"
  },
  {
    "text": "privileged container in Linux and host process container is that the",
    "start": "1769340",
    "end": "1775100"
  },
  {
    "text": "container is running as a process in the host right so",
    "start": "1775100",
    "end": "1780260"
  },
  {
    "text": "um I also know that there is no file system isolation so for cluster administrators that want to enable this",
    "start": "1780260",
    "end": "1787100"
  },
  {
    "text": "feature what security recommendations do you have so",
    "start": "1787100",
    "end": "1792260"
  },
  {
    "text": "that workloads cannot access can have the same access on the file system",
    "start": "1792260",
    "end": "1798880"
  },
  {
    "text": "I had a little bit of hard time hearing it because the speakers are facing all of you but I heard what kind of security considerations should administrators",
    "start": "1799340",
    "end": "1806059"
  },
  {
    "text": "take when using these is that correct correct particularly around the file system",
    "start": "1806059",
    "end": "1812480"
  },
  {
    "text": "um so since so so much of this is controlled just through the normal kubernetes constructs um really the the",
    "start": "1812480",
    "end": "1818000"
  },
  {
    "text": "built-in security admission policies will help cover you a lot I know if you're in the restricted policy",
    "start": "1818000",
    "end": "1824899"
  },
  {
    "text": "um you won't be able to schedule those process containers um and all of that so we really recommend",
    "start": "1824899",
    "end": "1830600"
  },
  {
    "text": "um all the best practices about really not allowing host of postpath volume amounts and that sort of the thing and I",
    "start": "1830600",
    "end": "1837320"
  },
  {
    "text": "think that should help get you kind of started but the rest is really just knowing what we're closer to playing",
    "start": "1837320",
    "end": "1844039"
  },
  {
    "text": "honestly yeah I would say the the part where Mark",
    "start": "1844039",
    "end": "1849620"
  },
  {
    "text": "showed um how to set up those user groups and restrict access to the file",
    "start": "1849620",
    "end": "1855620"
  },
  {
    "text": "system from there uh you could you could create a user a user",
    "start": "1855620",
    "end": "1861080"
  },
  {
    "text": "um membership that didn't have access to most of the file system and and then it",
    "start": "1861080",
    "end": "1866779"
  },
  {
    "text": "kind of opt in from there so that would probably be the the best approach",
    "start": "1866779",
    "end": "1871880"
  },
  {
    "text": "all right thank you",
    "start": "1871880",
    "end": "1874720"
  },
  {
    "text": "line of that question are there any Futures you can share about what you might do if you were to ever consider",
    "start": "1882020",
    "end": "1887240"
  },
  {
    "text": "proper isolation on that level I mean it's hard because you're giving root access away effectively",
    "start": "1887240",
    "end": "1892520"
  },
  {
    "text": "is there a future roadmap that you can share on that or so I thought I heard his uh is there a",
    "start": "1892520",
    "end": "1898760"
  },
  {
    "text": "future for more isolated access to the host um currently no we're hoping that",
    "start": "1898760",
    "end": "1906080"
  },
  {
    "text": "um we just haven't had it planned but if there's some interesting use cases um we'd like to hear it most of the use",
    "start": "1906080",
    "end": "1912799"
  },
  {
    "text": "cases that we've highlighted required either pretty broad access to the host or were allowing us to um",
    "start": "1912799",
    "end": "1919580"
  },
  {
    "text": "yeah we could just restrict it with what we've demoed but yeah if you have some use cases feel",
    "start": "1919580",
    "end": "1925580"
  },
  {
    "text": "free to bring it to us so",
    "start": "1925580",
    "end": "1931520"
  },
  {
    "text": "the the container's root of the file system is the nodes right so C drive is",
    "start": "1931520",
    "end": "1936740"
  },
  {
    "text": "C drive is that correct um so there is some virtualization happening there",
    "start": "1936740",
    "end": "1942980"
  },
  {
    "text": "um yes so your your container image will get mounted to a well-known location see colon HPC and then it will be there okay",
    "start": "1942980",
    "end": "1949700"
  },
  {
    "text": "um all of the C drive will get mapped in um to that as well and then your volume mounts will show up just like they do in",
    "start": "1949700",
    "end": "1956179"
  },
  {
    "text": "normal's window server containers so uh if you mount in like VAR log it'll show up in C column fire log right but if if",
    "start": "1956179",
    "end": "1963260"
  },
  {
    "text": "in your example where you're using the init container to install something if I delete that pod it's still installed",
    "start": "1963260",
    "end": "1969380"
  },
  {
    "text": "right you installed it physically on the Node and all I did was delete whatever the deployment of the the",
    "start": "1969380",
    "end": "1976659"
  },
  {
    "text": "container image was from the disk and close the pro stop the process I guess",
    "start": "1976659",
    "end": "1981980"
  },
  {
    "text": "correct yeah all of those side effects are going to carry forward once that pad starts so just specifically like in the",
    "start": "1981980",
    "end": "1987740"
  },
  {
    "text": "cni case there we copied the cni binaries into the cni location yeah",
    "start": "1987740",
    "end": "1992960"
  },
  {
    "text": "um but like the Vim like we had Vim that doesn't live on the host that was in the",
    "start": "1992960",
    "end": "1999620"
  },
  {
    "text": "container and when the container went away it was it's going to be removed as well okay so it depends on where you put",
    "start": "1999620",
    "end": "2005799"
  },
  {
    "text": "the binaries on the the system right but if I go running msis or something like that",
    "start": "2005799",
    "end": "2011080"
  },
  {
    "text": "I'm installing on the Note uh yeah most likely and that was one of the kind of",
    "start": "2011080",
    "end": "2016419"
  },
  {
    "text": "use cases we had envisioned for that too is like what if you want to apply your security patches in a stage update so",
    "start": "2016419",
    "end": "2023640"
  },
  {
    "text": "any other questions oh one more right probably the last one",
    "start": "2030159",
    "end": "2035500"
  },
  {
    "text": "and then you can continue afterwards if needed make me run here",
    "start": "2035500",
    "end": "2041518"
  },
  {
    "text": "uh for that particular scenario uh is there gonna be some sort of",
    "start": "2048280",
    "end": "2054099"
  },
  {
    "text": "shadowing of what's mounted in the container so if my container defines a",
    "start": "2054099",
    "end": "2059679"
  },
  {
    "text": "directory that is in the host this is going to be which one is going to be taken",
    "start": "2059679",
    "end": "2067200"
  },
  {
    "text": "so um there's there's a cap and actually the PRS to do",
    "start": "2067720",
    "end": "2074980"
  },
  {
    "text": "this have a lot of discussion around that too so I'll probably defer to that but the short answer is uh no we",
    "start": "2074980",
    "end": "2080440"
  },
  {
    "text": "actually so if if for whatever reason that SQL and HPC folder exists on the Node um we clear it so that you won't",
    "start": "2080440",
    "end": "2087339"
  },
  {
    "text": "get that the contention the same contention that you can get with shadowing um but other than that",
    "start": "2087339",
    "end": "2094118"
  },
  {
    "text": "um it's there's not really much concern there all right thanks",
    "start": "2094119",
    "end": "2100980"
  },
  {
    "text": "last last one for real",
    "start": "2101380",
    "end": "2104640"
  },
  {
    "text": "hi fabulous talk um question for you I know that there are a lot of really exciting caps in",
    "start": "2108880",
    "end": "2115060"
  },
  {
    "text": "Flight um around windows stuff as well if somebody wants to jump in and start",
    "start": "2115060",
    "end": "2120700"
  },
  {
    "text": "participating in some of the actual like the cups and other things like this that",
    "start": "2120700",
    "end": "2128020"
  },
  {
    "text": "you're in the process of working on yeah this one is going GA that's great but what other ones are kind of a an",
    "start": "2128020",
    "end": "2135160"
  },
  {
    "text": "exciting place people might get involved oh that's what our maintainer talk is",
    "start": "2135160",
    "end": "2140440"
  },
  {
    "text": "covering tomorrow too so if you're interested in that tube item as James mentioned uh host networks like access",
    "start": "2140440",
    "end": "2146020"
  },
  {
    "text": "to the host Network compartment for regular Windows Server containers is one and really following a whole bunch of the node the Sig node kepts to bring",
    "start": "2146020",
    "end": "2153160"
  },
  {
    "text": "parity to Windows is that too yep what the one uh that we're working on right now is the cry API for uh stats uh which",
    "start": "2153160",
    "end": "2162099"
  },
  {
    "text": "um is a big uh change in the way that stats are listed from the node and cubelet so that's another big one that",
    "start": "2162099",
    "end": "2169420"
  },
  {
    "text": "you could get involved in okay also I'll mention I think James and I are heading over to the Azure Booth if",
    "start": "2169420",
    "end": "2175180"
  },
  {
    "text": "people are interested and then there is the booth crawl um at six so yeah we were we were just asking what time is",
    "start": "2175180",
    "end": "2182020"
  },
  {
    "text": "that talk tomorrow that you're mentioning 5 25 p.m wonderful",
    "start": "2182020",
    "end": "2189099"
  },
  {
    "text": "thank you so much [Music]",
    "start": "2189280",
    "end": "2195699"
  },
  {
    "text": "[Applause]",
    "start": "2197380",
    "end": "2200549"
  }
]