[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "hi everyone and welcome to this cncf webinar today we have a very cool agenda",
    "start": "719",
    "end": "6720"
  },
  {
    "text": "for you for the next hour we're going to be talking about databases in kubernetes and how to run them the most secure and",
    "start": "6720",
    "end": "14480"
  },
  {
    "text": "reliable way possible and most importantly how to make sure business or dba crafted",
    "start": "14480",
    "end": "21359"
  },
  {
    "text": "guidelines can be applied and enforced during the life cycle of your stateful application",
    "start": "21359",
    "end": "27359"
  },
  {
    "text": "and because it's also important to while the walk as you talk the talk we have a",
    "start": "27359",
    "end": "32558"
  },
  {
    "text": "couple of demos in store for you we hope you're going to enjoy it",
    "start": "32559",
    "end": "37840"
  },
  {
    "start": "37000",
    "end": "478000"
  },
  {
    "text": "again welcome to this session how to build kubernetes policies to ensure compliance for databases",
    "start": "37840",
    "end": "45120"
  },
  {
    "text": "during the next hour we're going to be touching upon a couple of cncf projects that are related to that",
    "start": "45120",
    "end": "52239"
  },
  {
    "text": "topic the first one is flux by weave",
    "start": "52239",
    "end": "57360"
  },
  {
    "text": "which is a continuous delivery solution for your application including stateful",
    "start": "57360",
    "end": "62719"
  },
  {
    "text": "application and databases and the second tool we're going to be talking about is kyverno which is also",
    "start": "62719",
    "end": "70000"
  },
  {
    "text": "cncf project and is a policy engine specifically designed for kubernetes",
    "start": "70000",
    "end": "78240"
  },
  {
    "text": "so let's get started my name is nick varmundi i'm a principal developer",
    "start": "78240",
    "end": "83680"
  },
  {
    "text": "advocate with on that i've been working with kubernetes for the past five years",
    "start": "83680",
    "end": "89840"
  },
  {
    "text": "and um before on that i've worked with aviatrix a startup focusing on",
    "start": "89840",
    "end": "95920"
  },
  {
    "text": "multi-cloud networking and then before that i spent six years at cisco as part of the engineering team",
    "start": "95920",
    "end": "102640"
  },
  {
    "text": "responsible for the container network interface or cni",
    "start": "102640",
    "end": "108479"
  },
  {
    "text": "in terms of the agenda for today we're going to start with",
    "start": "108479",
    "end": "113759"
  },
  {
    "text": "database in kubernetes and talking about what is the status in terms of the",
    "start": "113759",
    "end": "119040"
  },
  {
    "text": "industry is it a safe thing to do run database or in kubernetes and how people",
    "start": "119040",
    "end": "125280"
  },
  {
    "text": "do it and we also talk about um you know how to do it in a way that",
    "start": "125280",
    "end": "132959"
  },
  {
    "text": "can match the requirement of enterprises then in terms of",
    "start": "132959",
    "end": "139599"
  },
  {
    "text": "delivering those databases in production we're going to be talking about policy",
    "start": "139599",
    "end": "144640"
  },
  {
    "text": "as code which is more focused around how can we put some guardrails around how people you know",
    "start": "144640",
    "end": "151680"
  },
  {
    "text": "deploy databases in production and to that same",
    "start": "151680",
    "end": "157760"
  },
  {
    "text": "um goal we're going to be taking a look at github's principles and how to build",
    "start": "157760",
    "end": "163200"
  },
  {
    "text": "github's pipelines for stateful application by also incorporating some notion of",
    "start": "163200",
    "end": "170720"
  },
  {
    "text": "policies and compliance and then of course we conclude by a demo which will be making use of",
    "start": "170720",
    "end": "178640"
  },
  {
    "text": "all the principle we will have mentioned during this talk",
    "start": "178640",
    "end": "184239"
  },
  {
    "text": "but first let's address the elephant in the room is it a good idea to run a database in",
    "start": "184239",
    "end": "190080"
  },
  {
    "text": "kubernetes or more generally speaking is it a good idea to run stateful application within kubernetes",
    "start": "190080",
    "end": "197040"
  },
  {
    "text": "so in 2016 kubernetes introduced the notion of pet sets",
    "start": "197040",
    "end": "202720"
  },
  {
    "text": "a first try at handling stateful application as a first-class citizen",
    "start": "202720",
    "end": "208480"
  },
  {
    "text": "and prior to that any application running in kubernetes was strictly supposed to adhere to the",
    "start": "208480",
    "end": "214959"
  },
  {
    "text": "12 factor apps basically stateless application so that's the war between pets and",
    "start": "214959",
    "end": "221680"
  },
  {
    "text": "cattle over time pet set became stateful sets and a comprehensive set of features have",
    "start": "221680",
    "end": "228720"
  },
  {
    "text": "been added to safely run stateful applications this includes solutions around storage",
    "start": "228720",
    "end": "235840"
  },
  {
    "text": "networking identity and application lifecycle management",
    "start": "235840",
    "end": "241040"
  },
  {
    "text": "so for example you cannot attach distinct persistent volumes to individual parts composing your",
    "start": "241040",
    "end": "248000"
  },
  {
    "text": "stateful set in terms of the network network",
    "start": "248000",
    "end": "253280"
  },
  {
    "text": "identity is guaranteed and is stable meaning that in case of",
    "start": "253280",
    "end": "259359"
  },
  {
    "text": "pod failure the same pod can be restarted on the same node or another node",
    "start": "259359",
    "end": "266479"
  },
  {
    "text": "while keeping the same ordinal number as well as the same hostname",
    "start": "266479",
    "end": "273120"
  },
  {
    "text": "then when it comes to upgrading your stateful application stateful sets support both running",
    "start": "273120",
    "end": "279600"
  },
  {
    "text": "updates and partition running updates to features that are critical when it",
    "start": "279600",
    "end": "284800"
  },
  {
    "text": "comes to managing your stateful application so all these various options can be",
    "start": "284800",
    "end": "290479"
  },
  {
    "text": "tailored and fine-tuned to suit your need but the real question is",
    "start": "290479",
    "end": "296639"
  },
  {
    "text": "is this sufficient to manage databases and kubernetes and we'll get to answer this a bit later",
    "start": "296639",
    "end": "304080"
  },
  {
    "text": "but first let's take a look at what are the most popular container images when",
    "start": "304080",
    "end": "310080"
  },
  {
    "text": "it comes to running stateful application in containers so",
    "start": "310080",
    "end": "315120"
  },
  {
    "text": "out of those 14 images we can notice that we have",
    "start": "315120",
    "end": "320720"
  },
  {
    "text": "radius postgres enqueue mysql kafka",
    "start": "320720",
    "end": "327919"
  },
  {
    "text": "vault hcd all those containers are actually",
    "start": "327919",
    "end": "334479"
  },
  {
    "text": "stateful application meaning that they have to persist some sort of data to disk",
    "start": "334479",
    "end": "341759"
  },
  {
    "text": "which makes sense because people have been running stateless application in containers for",
    "start": "341759",
    "end": "347520"
  },
  {
    "text": "a while but there's not such a thing as a completely stateless application you always have",
    "start": "347520",
    "end": "355360"
  },
  {
    "text": "a component that is stateful maybe a message queueing solution or a database",
    "start": "355360",
    "end": "361840"
  },
  {
    "text": "so this graph shows that people now wants to collocate their",
    "start": "361840",
    "end": "367759"
  },
  {
    "text": "stateless application together with their stateful component there may",
    "start": "367759",
    "end": "372800"
  },
  {
    "text": "be you know different reason for this operations but",
    "start": "372800",
    "end": "377919"
  },
  {
    "text": "also maybe latency now if we take a look at the top container images",
    "start": "377919",
    "end": "384800"
  },
  {
    "text": "running as kubernetes stateful sets the result is actually very close",
    "start": "384800",
    "end": "392560"
  },
  {
    "text": "which shows that those containers you know stateful containers that are popular should be run as stateful sets",
    "start": "392560",
    "end": "399840"
  },
  {
    "text": "not as classic deployments for the reason we mentioned uh before stateful",
    "start": "399840",
    "end": "404960"
  },
  {
    "text": "said have uh specific requirements when it comes to network identity stability uh hostname",
    "start": "404960",
    "end": "412960"
  },
  {
    "text": "and also the order of operation uh when you deploy stateful application you want to",
    "start": "412960",
    "end": "418960"
  },
  {
    "text": "deploy the pods in a particular order and if you need to scale down or if you",
    "start": "418960",
    "end": "424880"
  },
  {
    "text": "need to upgrade um you know the image of the application then",
    "start": "424880",
    "end": "430720"
  },
  {
    "text": "you need to take the reverse order and this is really key because it's not only about",
    "start": "430720",
    "end": "436560"
  },
  {
    "text": "deploying pods it's making sure that the application that is running on top of those containers",
    "start": "436560",
    "end": "443680"
  },
  {
    "text": "are actually in a healthy state which means for for example for it means that the",
    "start": "443680",
    "end": "450880"
  },
  {
    "text": "cluster is formed so if we remove a node or add a node then",
    "start": "450880",
    "end": "458240"
  },
  {
    "text": "the states of the cluster also needs to be updated right this is not automatic",
    "start": "458240",
    "end": "464639"
  },
  {
    "text": "and we're gonna see how we can potentially alleviate this portion",
    "start": "464639",
    "end": "470080"
  },
  {
    "text": "but essentially yeah those stateful application needs to be run as stateful",
    "start": "470080",
    "end": "475440"
  },
  {
    "text": "set to begin with but it's only one part of the picture once you have your stage full set",
    "start": "475440",
    "end": "482400"
  },
  {
    "start": "478000",
    "end": "920000"
  },
  {
    "text": "defined with your application template you now need to install the application",
    "start": "482400",
    "end": "488000"
  },
  {
    "text": "on top and what is particular to kubernetes is that you have now",
    "start": "488000",
    "end": "493039"
  },
  {
    "text": "a higher level of controller which is the stateful set controller that controls how the containers and",
    "start": "493039",
    "end": "500479"
  },
  {
    "text": "pods are provisioned and deleted etc and it",
    "start": "500479",
    "end": "506240"
  },
  {
    "text": "you also need a mechanism to be able to install the application on top",
    "start": "506240",
    "end": "511280"
  },
  {
    "text": "because most of the time the application on top need to need to form some sort of cluster and",
    "start": "511280",
    "end": "517039"
  },
  {
    "text": "organize itself as a whole which means you need to",
    "start": "517039",
    "end": "522399"
  },
  {
    "text": "encapsulate some sort of knowledge into code and there's a",
    "start": "522399",
    "end": "527519"
  },
  {
    "text": "specific pattern that actually exactly does this in kubernetes",
    "start": "527519",
    "end": "533279"
  },
  {
    "text": "it's called the operator pattern at a high level a kubernetes operator is",
    "start": "533279",
    "end": "539680"
  },
  {
    "text": "just another type of kubernetes controller but that monitors a custom",
    "start": "539680",
    "end": "544720"
  },
  {
    "text": "resource as opposed to a native communities resource",
    "start": "544720",
    "end": "549839"
  },
  {
    "text": "a custom resource is just an extension of the communities api that allows you",
    "start": "549839",
    "end": "556320"
  },
  {
    "text": "to represent any objects within or you know outside of the communities cluster",
    "start": "556320",
    "end": "562560"
  },
  {
    "text": "as a first-class citizen within kubernetes so the custom controller effectively",
    "start": "562560",
    "end": "568880"
  },
  {
    "text": "watches custom resources and any action that is performed in terms of crud operation so",
    "start": "568880",
    "end": "576000"
  },
  {
    "text": "create read update delete an action that is performed on the custom resource",
    "start": "576000",
    "end": "582080"
  },
  {
    "text": "is translated into an automated action from the custom controller and that can be anything so",
    "start": "582080",
    "end": "589760"
  },
  {
    "text": "for example if we take maybe you know let's say a custom resource represent a",
    "start": "589760",
    "end": "596000"
  },
  {
    "text": "aws cloud instance then as you add new custom resource",
    "start": "596000",
    "end": "602320"
  },
  {
    "text": "the custom controller will create new instances in aws that's why as you",
    "start": "602320",
    "end": "608720"
  },
  {
    "text": "delete the custom resource then the custom controller will delete",
    "start": "608720",
    "end": "613920"
  },
  {
    "text": "the instance within aws and you as a developer",
    "start": "613920",
    "end": "619279"
  },
  {
    "text": "need to embed the knowledge required to do all this action within the controller",
    "start": "619279",
    "end": "625920"
  },
  {
    "text": "so how to delete a aws instance how to create an aws",
    "start": "625920",
    "end": "632399"
  },
  {
    "text": "instance etc so if we apply this principle to a",
    "start": "632399",
    "end": "638640"
  },
  {
    "text": "database then we can have a lot of benefits right so",
    "start": "638640",
    "end": "643839"
  },
  {
    "text": "it can automatically perform operations for statefully critical components such",
    "start": "643839",
    "end": "649519"
  },
  {
    "text": "as database scale backup upgrade all of that can be",
    "start": "649519",
    "end": "655440"
  },
  {
    "text": "managed by an operator and potentially simplifying the deployment scale out and scaling of",
    "start": "655440",
    "end": "662000"
  },
  {
    "text": "cloud native application and finally because there is a",
    "start": "662000",
    "end": "668120"
  },
  {
    "text": "reconciliation loop that is performed by the operator uh it also sort of enforces",
    "start": "668120",
    "end": "675519"
  },
  {
    "text": "natively compliance by design so for example um let's say",
    "start": "675519",
    "end": "680880"
  },
  {
    "text": "the when you deploy the database with the operator you set up an admin user",
    "start": "680880",
    "end": "686880"
  },
  {
    "text": "with specific permissions so the database get deployed with that",
    "start": "686880",
    "end": "692800"
  },
  {
    "text": "setting and let's say you want to change that permission manually",
    "start": "692800",
    "end": "699040"
  },
  {
    "text": "you know using your database command",
    "start": "699040",
    "end": "704640"
  },
  {
    "text": "so what's going to happen is that because the operator is constantly",
    "start": "704640",
    "end": "709839"
  },
  {
    "text": "monitoring the database and you know the different components it",
    "start": "709839",
    "end": "715440"
  },
  {
    "text": "will reverb back the permission as defined in the custom resource",
    "start": "715440",
    "end": "722079"
  },
  {
    "text": "setting and this is because the reconciliation loop trusts the declarative intent",
    "start": "722079",
    "end": "729040"
  },
  {
    "text": "not the imperative comment that you have applied to the environment",
    "start": "729040",
    "end": "734959"
  },
  {
    "text": "but the operators also come with their own set of challenges",
    "start": "734959",
    "end": "740320"
  },
  {
    "text": "so first of all they are no standard to express",
    "start": "740320",
    "end": "745519"
  },
  {
    "text": "custom resources settings for a database for for example you know how you want to call",
    "start": "745519",
    "end": "752720"
  },
  {
    "text": "the storage the pvc in terms of the path to that particular",
    "start": "752720",
    "end": "758000"
  },
  {
    "text": "settings is not defined in kubernetes so every",
    "start": "758000",
    "end": "764639"
  },
  {
    "text": "every operator creator or provider can choose its own you know schema to",
    "start": "764639",
    "end": "772079"
  },
  {
    "text": "express its own settings there are no standard across all databases for example",
    "start": "772079",
    "end": "779600"
  },
  {
    "text": "and typically once you start using operators to deploy and manage the lifecycle of you know application and",
    "start": "779600",
    "end": "786000"
  },
  {
    "text": "software solutions you tend to get off you tend to get a sprawl of those custom",
    "start": "786000",
    "end": "791120"
  },
  {
    "text": "resources which can lead to um you know increased difficulty when",
    "start": "791120",
    "end": "796480"
  },
  {
    "text": "you are troubleshooting what's happening in the cluster then we also have potentially",
    "start": "796480",
    "end": "801519"
  },
  {
    "text": "challenges with the supply chain quality control as you are probably going to use",
    "start": "801519",
    "end": "807360"
  },
  {
    "text": "existing operators rather than create your owns you need to be able to trust",
    "start": "807360",
    "end": "812720"
  },
  {
    "text": "the people and the software engineers that are building those operators um",
    "start": "812720",
    "end": "818560"
  },
  {
    "text": "and finally you know as they are not really any standard for those custom resources",
    "start": "818560",
    "end": "824959"
  },
  {
    "text": "how can you validate that's the settings you enter and you configure for",
    "start": "824959",
    "end": "830240"
  },
  {
    "text": "um those schema are valid into your environment right and this is what we're",
    "start": "830240",
    "end": "835519"
  },
  {
    "text": "gonna try to uh think about in in the next section",
    "start": "835519",
    "end": "840560"
  },
  {
    "text": "and finally documentation it's quite difficult to match exactly",
    "start": "840560",
    "end": "847279"
  },
  {
    "text": "your use case in terms of finding the documentation so you will find a lot of operators they",
    "start": "847279",
    "end": "853519"
  },
  {
    "text": "have github repositories of course with some example of use cases",
    "start": "853519",
    "end": "859920"
  },
  {
    "text": "uh but there's no real any you know border plate for your particular use case so you will have to",
    "start": "859920",
    "end": "866399"
  },
  {
    "text": "find you know different pieces here and there put them together and just try it out um you know if it works if it really",
    "start": "866399",
    "end": "873839"
  },
  {
    "text": "fits your use case et cetera there's not like comprehensive documentation you can just find you know",
    "start": "873839",
    "end": "881680"
  },
  {
    "text": "typically however because these custom resources are fundamentally kubernetes",
    "start": "881680",
    "end": "887920"
  },
  {
    "text": "resources you can explore you know their schema their field simply",
    "start": "887920",
    "end": "894240"
  },
  {
    "text": "by using kubectl explain and just specify",
    "start": "894240",
    "end": "900160"
  },
  {
    "text": "the custom resource you want to explore so far we've been talking about the operators you know architecture",
    "start": "900160",
    "end": "907519"
  },
  {
    "text": "but now let's focus on you know how to use these operators and apply some",
    "start": "907519",
    "end": "913839"
  },
  {
    "text": "policies in terms of you know the values you express in the",
    "start": "913839",
    "end": "918880"
  },
  {
    "text": "settings and for this there's you know a pattern that is well known",
    "start": "918880",
    "end": "924480"
  },
  {
    "start": "920000",
    "end": "958000"
  },
  {
    "text": "as policy as code um one of the tools we're going to be talking about is kyverno to realize this",
    "start": "924480",
    "end": "932399"
  },
  {
    "text": "but when it comes to policy as code within kubernetes it's not really code anymore",
    "start": "932399",
    "end": "937920"
  },
  {
    "text": "a kubernetes policy engine should just support yaml right because",
    "start": "937920",
    "end": "943920"
  },
  {
    "text": "yaml is what we do in kubernetes so let's take a look at how we can use policy as yaml with kyverno",
    "start": "943920",
    "end": "952560"
  },
  {
    "text": "and apply this to custom resources so there are a couple of principles to",
    "start": "952560",
    "end": "958399"
  },
  {
    "text": "be applied when using policy as code or as yaml so first we want to decouple the",
    "start": "958399",
    "end": "965600"
  },
  {
    "text": "validation or the enforcement of the policies from the directive decisions",
    "start": "965600",
    "end": "971600"
  },
  {
    "text": "themselves so for example we want to be able to store our",
    "start": "971600",
    "end": "977440"
  },
  {
    "text": "policy independent independently from the process from the validation",
    "start": "977440",
    "end": "982959"
  },
  {
    "text": "process so typically you want to use git or any you know version control system",
    "start": "982959",
    "end": "988720"
  },
  {
    "text": "to store um your policies so that you can track history you can share with your teams",
    "start": "988720",
    "end": "994880"
  },
  {
    "text": "etc so of course it needs to be in a declarative format",
    "start": "994880",
    "end": "1000320"
  },
  {
    "text": "because communities already has yaml there are solutions that are introducing",
    "start": "1000480",
    "end": "1006639"
  },
  {
    "text": "a new language to represent you know the the policy",
    "start": "1006639",
    "end": "1011920"
  },
  {
    "text": "but if you're already already running kubernetes this is not necessarily something you want to",
    "start": "1011920",
    "end": "1018720"
  },
  {
    "text": "start with right we have yamo so let's stick with yaml and if the solution that you are",
    "start": "1018720",
    "end": "1027360"
  },
  {
    "text": "contemplating doesn't satisfy your requirements because they are too complex then maybe",
    "start": "1027679",
    "end": "1034079"
  },
  {
    "text": "you can try a solution that involves a new language uh like regal for example",
    "start": "1034079",
    "end": "1040880"
  },
  {
    "text": "right so in that sense it doesn't have to be kubernetes the the policy has code",
    "start": "1040880",
    "end": "1046558"
  },
  {
    "text": "solution doesn't have to be kubernetes to work um [Music] but",
    "start": "1046559",
    "end": "1052880"
  },
  {
    "text": "you should start you know using your native tools in the case of kubernetes",
    "start": "1052880",
    "end": "1058240"
  },
  {
    "text": "well let's just use the ml right so we also want to control and validate",
    "start": "1058240",
    "end": "1063600"
  },
  {
    "text": "the source before committing to the cluster um if we just rely on an admission",
    "start": "1063600",
    "end": "1070240"
  },
  {
    "text": "controller to validate or you know mutate uh the input",
    "start": "1070240",
    "end": "1075919"
  },
  {
    "text": "then i would say it's already too late uh so for example if you have an",
    "start": "1075919",
    "end": "1081120"
  },
  {
    "text": "application composed of you know five different manifests and two of those manifest",
    "start": "1081120",
    "end": "1088320"
  },
  {
    "text": "don't pass the policy validation then you'll end up with three manifests",
    "start": "1088320",
    "end": "1096240"
  },
  {
    "text": "deployed to the cluster and two while not deployed potentially leading to some you know inconsistency so it's",
    "start": "1096240",
    "end": "1103360"
  },
  {
    "text": "better uh to begin with to have the ability to use",
    "start": "1103360",
    "end": "1109039"
  },
  {
    "text": "validation within your github's pipeline before deploying",
    "start": "1109039",
    "end": "1115840"
  },
  {
    "text": "the manifest within the cluster so optionally it's always good to have",
    "start": "1115840",
    "end": "1120880"
  },
  {
    "text": "the ability to eventually mutate the input so if you have a non-conformant",
    "start": "1120880",
    "end": "1126720"
  },
  {
    "text": "input rather than invalidating and sending an error message what you can do is transform the",
    "start": "1126720",
    "end": "1133919"
  },
  {
    "text": "input to make it you know fits within your policy boundary",
    "start": "1133919",
    "end": "1140320"
  },
  {
    "text": "and um so there are multiple solutions on the market that can help you with you know building this policy as code or",
    "start": "1140320",
    "end": "1146160"
  },
  {
    "text": "policy as yaml so oppa gatekeeper caiverno day 3 are",
    "start": "1146160",
    "end": "1154160"
  },
  {
    "text": "all valid example but for this session we're going to focus on kyvernos specifically",
    "start": "1154160",
    "end": "1160480"
  },
  {
    "start": "1160000",
    "end": "1271000"
  },
  {
    "text": "so if you look at the traditional process to handle",
    "start": "1160480",
    "end": "1166080"
  },
  {
    "text": "any api request from a kubernetes point of view you can insert",
    "start": "1166080",
    "end": "1171520"
  },
  {
    "text": "webhooks at two different sections within that",
    "start": "1171520",
    "end": "1176640"
  },
  {
    "text": "workflow so mutating animation and validating admission are two",
    "start": "1176640",
    "end": "1182880"
  },
  {
    "text": "valid web hooks where you can where you can insert",
    "start": "1182880",
    "end": "1188400"
  },
  {
    "text": "specific logic xml logic from you know any sort of software you want to",
    "start": "1188400",
    "end": "1194320"
  },
  {
    "text": "integrate with kubernetes in the case of cariverno the validation admission webhook is used",
    "start": "1194320",
    "end": "1200880"
  },
  {
    "text": "to validate or invalidate specific statements",
    "start": "1200880",
    "end": "1206400"
  },
  {
    "text": "and in our case um compare values against policies and if",
    "start": "1206400",
    "end": "1213280"
  },
  {
    "text": "the poli the values are within the policies then um kaivan always will validate",
    "start": "1213280",
    "end": "1219919"
  },
  {
    "text": "the request and send it back to kubernetes in case",
    "start": "1219919",
    "end": "1224960"
  },
  {
    "text": "the validation comes with a negative answer then kyverno will return",
    "start": "1224960",
    "end": "1232400"
  },
  {
    "text": "just an answer saying no this is not um this is forbidden we are not gonna",
    "start": "1232400",
    "end": "1238880"
  },
  {
    "text": "move forward with that request and the the mutating admission web hook",
    "start": "1238880",
    "end": "1244480"
  },
  {
    "text": "will again do its own thing regarding the value",
    "start": "1244480",
    "end": "1250080"
  },
  {
    "text": "of the different fields if the value is not within what the policy has determined then it's",
    "start": "1250080",
    "end": "1257600"
  },
  {
    "text": "going to be changed into the value that you want to apply and actually we are going to demonstrate",
    "start": "1257600",
    "end": "1264480"
  },
  {
    "text": "the mutating and validating capabilities of kyvernor later on during our",
    "start": "1264480",
    "end": "1269919"
  },
  {
    "text": "our demo and but basically kyvernor has a wide range of capabilities we'll be talking",
    "start": "1269919",
    "end": "1276159"
  },
  {
    "text": "about validation mutation so a quick detail about mutation you can use either",
    "start": "1276159",
    "end": "1283679"
  },
  {
    "text": "strategic merge patch or json patch depending on the granularity you need to go into when modifying you",
    "start": "1283679",
    "end": "1291520"
  },
  {
    "text": "know a particular field or set of fields uh kyverno is also",
    "start": "1291520",
    "end": "1296799"
  },
  {
    "text": "able to generate new resources when a new resource is created",
    "start": "1296799",
    "end": "1302159"
  },
  {
    "text": "or when the source is updated it also has a notion of preconditions",
    "start": "1302159",
    "end": "1308240"
  },
  {
    "text": "which means that it can gather data from the admission",
    "start": "1308240",
    "end": "1314320"
  },
  {
    "text": "request payload so the admission review actually and reuse part of that data",
    "start": "1314320",
    "end": "1320559"
  },
  {
    "text": "save them into variable that you can further use when building um kyvonne policies and in addition",
    "start": "1320559",
    "end": "1328559"
  },
  {
    "text": "kyverno supports image verification through the verify images rule which",
    "start": "1328559",
    "end": "1335919"
  },
  {
    "text": "uses cosine to verify container image signature attestations and more stored",
    "start": "1335919",
    "end": "1341360"
  },
  {
    "text": "into an aci registry and finally kyverno has",
    "start": "1341360",
    "end": "1347600"
  },
  {
    "text": "created um james path which is coming from the name of the",
    "start": "1347600",
    "end": "1352720"
  },
  {
    "text": "person who has developed this language and it's actually a language that that",
    "start": "1352720",
    "end": "1358640"
  },
  {
    "text": "kyvernos supports to perform more complex selection of fields and value",
    "start": "1358640",
    "end": "1363679"
  },
  {
    "text": "and manipulation of all these fields um you know combined with filters",
    "start": "1363679",
    "end": "1370080"
  },
  {
    "text": "so let's take a look at how we can integrate kyverno with your traditional",
    "start": "1370080",
    "end": "1375440"
  },
  {
    "start": "1375000",
    "end": "1682000"
  },
  {
    "text": "continuous integration pipeline so a githubs pipeline allows you to use git as the single source of truth for",
    "start": "1375440",
    "end": "1383280"
  },
  {
    "text": "both your application code and your communities manifest they can actually sit",
    "start": "1383280",
    "end": "1389600"
  },
  {
    "text": "within the same repository it doesn't really matter as long as everything is hosted into a version",
    "start": "1389600",
    "end": "1396799"
  },
  {
    "text": "control system so as usual the first thing you do in you know even in more traditional",
    "start": "1396799",
    "end": "1403360"
  },
  {
    "text": "pipeline you build a container from your application code then you specify",
    "start": "1403360",
    "end": "1409760"
  },
  {
    "text": "the container name tag and you know other details",
    "start": "1409760",
    "end": "1415600"
  },
  {
    "text": "into your kubernetes manifests and you can use a tool like customize to do that",
    "start": "1415600",
    "end": "1421279"
  },
  {
    "text": "its job will be depending on your target environment will",
    "start": "1421279",
    "end": "1427120"
  },
  {
    "text": "fill the right fields with the container information and environmental you know specific uh specific values as well",
    "start": "1427120",
    "end": "1435600"
  },
  {
    "text": "so once you have your communities manifest that are ready to be pushed into your communities cluster so you can",
    "start": "1435600",
    "end": "1442400"
  },
  {
    "text": "have staging prod dev customize overlays",
    "start": "1442400",
    "end": "1447600"
  },
  {
    "text": "then you will have a git ups tool in our case this will be flux that will pick them up and make",
    "start": "1447600",
    "end": "1455039"
  },
  {
    "text": "sure that that's the reconciliation loop synchronize the state of the cluster",
    "start": "1455039",
    "end": "1461120"
  },
  {
    "text": "with what you have within your kubernetes manifest repository and so on",
    "start": "1461120",
    "end": "1467440"
  },
  {
    "text": "the diagram here you can see that customize is used as part of the pipeline but",
    "start": "1467440",
    "end": "1472960"
  },
  {
    "text": "flux also supports natively customized which means that the only thing you need to",
    "start": "1472960",
    "end": "1478480"
  },
  {
    "text": "have is just the overlays in the communities manifest repository and flux",
    "start": "1478480",
    "end": "1484559"
  },
  {
    "text": "will be intelligent enough to leverage those overlays create the",
    "start": "1484559",
    "end": "1490480"
  },
  {
    "text": "targets you know manifests and then use them to deploy your application within the target kubernetes",
    "start": "1490480",
    "end": "1497919"
  },
  {
    "text": "cluster which leaves us with a question where can we integrate",
    "start": "1497919",
    "end": "1503120"
  },
  {
    "text": "kyverno in this picture so there's actually two solutions the first one is you can use",
    "start": "1503120",
    "end": "1509360"
  },
  {
    "text": "kyverno as a c line let's say within this dotted line there so as you build",
    "start": "1509360",
    "end": "1514880"
  },
  {
    "text": "your kubernetes manifests just after that you can use the cli to compare it and to",
    "start": "1514880",
    "end": "1522559"
  },
  {
    "text": "check it against the the policies that are defined as yaml file so kyverno cli",
    "start": "1522559",
    "end": "1527840"
  },
  {
    "text": "will use on the one side the communities manifest yaml file and compare them",
    "start": "1527840",
    "end": "1533360"
  },
  {
    "text": "against the policy that are written in in those you know",
    "start": "1533360",
    "end": "1539200"
  },
  {
    "text": "in those yaml files the kaivena yamal policies that are also",
    "start": "1539200",
    "end": "1544240"
  },
  {
    "text": "sitting in in the repository right the second solution is to use the",
    "start": "1544240",
    "end": "1549279"
  },
  {
    "text": "admission controller and then again we can either mutate or validate what that means is in",
    "start": "1549279",
    "end": "1556720"
  },
  {
    "text": "the case of validation things will happen after",
    "start": "1556720",
    "end": "1563120"
  },
  {
    "text": "the community's manifest has been deployed in the cluster by flux flux is",
    "start": "1563120",
    "end": "1569120"
  },
  {
    "text": "going to first check the manifest if there's a difference it notices a change then it needs to synchronize with the",
    "start": "1569120",
    "end": "1575039"
  },
  {
    "text": "community's cluster so it will send those files through",
    "start": "1575039",
    "end": "1580320"
  },
  {
    "text": "you know like a more of a pull mechanism into the kubernetes cluster and apply",
    "start": "1580320",
    "end": "1585679"
  },
  {
    "text": "the manifest to the cluster as a result the admission controller will either",
    "start": "1585679",
    "end": "1591600"
  },
  {
    "text": "authorize or prevent the manifest from being deployed into the cluster then again we're into a",
    "start": "1591600",
    "end": "1598400"
  },
  {
    "text": "situation where we can have some inconsistencies because some of the manifests have been deployed",
    "start": "1598400",
    "end": "1604880"
  },
  {
    "text": "but maybe not other ones and in the case of the mutation",
    "start": "1604880",
    "end": "1611760"
  },
  {
    "text": "use case then same thing again right you have the single source of truth which is sitting",
    "start": "1611760",
    "end": "1618159"
  },
  {
    "text": "within this repository it's picked up by flux flux apply the manifest into the the cluster",
    "start": "1618159",
    "end": "1625679"
  },
  {
    "text": "the admission controller then will change part of the values to match",
    "start": "1625679",
    "end": "1630880"
  },
  {
    "text": "um your policies or so that you the values are within your policy boundaries",
    "start": "1630880",
    "end": "1637120"
  },
  {
    "text": "but then as a consequence one could argue that okay now the quantities manifests here",
    "start": "1637120",
    "end": "1644320"
  },
  {
    "text": "on the git repo are not the source of truth because some of the values has been tempered by",
    "start": "1644320",
    "end": "1651039"
  },
  {
    "text": "the admission controller and that is a fair statement therefore it's up to you you know to",
    "start": "1651039",
    "end": "1658000"
  },
  {
    "text": "mutate or validate uh within the cluster but my personal preference would be to keep",
    "start": "1658000",
    "end": "1665039"
  },
  {
    "text": "git as the single source of truth so use kyverno in the context of a github's",
    "start": "1665039",
    "end": "1670960"
  },
  {
    "text": "pipeline as part of a you know just a cli tool within the workflow so i hope",
    "start": "1670960",
    "end": "1678720"
  },
  {
    "text": "this makes sense to you and let's just sum it up",
    "start": "1678720",
    "end": "1684000"
  },
  {
    "start": "1682000",
    "end": "1752000"
  },
  {
    "text": "so enforcing compliance with cayaverno when where and how so what we have been",
    "start": "1684000",
    "end": "1690320"
  },
  {
    "text": "discussing so far when well ideally during your",
    "start": "1690320",
    "end": "1696559"
  },
  {
    "text": "pipeline execution and preferably if you're using kubernetes git ups is",
    "start": "1696559",
    "end": "1702799"
  },
  {
    "text": "the best of breed solution to implement continuous integration",
    "start": "1702799",
    "end": "1708000"
  },
  {
    "text": "and also using flux then as the continuous delivery",
    "start": "1708000",
    "end": "1714000"
  },
  {
    "text": "mechanism right so as part of this pipeline try to enforce compliance where",
    "start": "1714000",
    "end": "1720000"
  },
  {
    "text": "obviously you want to have your kyvano policies sitting in a git",
    "start": "1720000",
    "end": "1726320"
  },
  {
    "text": "repository uh how well preferably using the cayaverno cli that will on the",
    "start": "1726320",
    "end": "1734320"
  },
  {
    "text": "one side leverage the manifest in one git repository for the kubernetes application and on the other side the",
    "start": "1734320",
    "end": "1742159"
  },
  {
    "text": "kyverno policies which are also represented as yaml file probably on an",
    "start": "1742159",
    "end": "1748399"
  },
  {
    "text": "in another git repository so now",
    "start": "1748399",
    "end": "1753679"
  },
  {
    "text": "let's check this in real life into our demonstration",
    "start": "1753679",
    "end": "1760559"
  },
  {
    "text": "where we're going to be creating flux source and customization",
    "start": "1760559",
    "end": "1766480"
  },
  {
    "text": "so that our application can safely be deployed in the quincy's cluster leveraging github's principle we will",
    "start": "1766480",
    "end": "1773520"
  },
  {
    "text": "validate the application using the kyverno cli so of cluster",
    "start": "1773520",
    "end": "1779360"
  },
  {
    "text": "and then just for um you know comprehensive testing we'll",
    "start": "1779360",
    "end": "1785039"
  },
  {
    "text": "also show you uh the same thing but this time with an animation controller that will validate",
    "start": "1785039",
    "end": "1791360"
  },
  {
    "text": "and mutate uh non-conformant resources let's get started with the demo",
    "start": "1791360",
    "end": "1798080"
  },
  {
    "text": "so this demo is available as part of a workshop or lab i've developed on",
    "start": "1798080",
    "end": "1805520"
  },
  {
    "text": "instruct and i'll make sure to put the link in one of the last slides of the deck so",
    "start": "1805520",
    "end": "1811120"
  },
  {
    "text": "that you can also use it if if you if you wish so so let's launch this slab",
    "start": "1811120",
    "end": "1818240"
  },
  {
    "text": "okay so let's jump into the last section of this lab",
    "start": "1818240",
    "end": "1823760"
  },
  {
    "text": "the first thing we're going to do is validate some policy",
    "start": "1823760",
    "end": "1830720"
  },
  {
    "text": "with kyverno of cluster meaning that we're going to be leveraging",
    "start": "1830720",
    "end": "1835840"
  },
  {
    "text": "some application manifests so made for two distinct environments so",
    "start": "1835840",
    "end": "1840880"
  },
  {
    "text": "we have the first the first environment which is a dev environment",
    "start": "1840880",
    "end": "1846559"
  },
  {
    "text": "the customize overlay is there so we have a couple of",
    "start": "1846559",
    "end": "1852559"
  },
  {
    "text": "components within this application we have a front end",
    "start": "1852559",
    "end": "1857600"
  },
  {
    "text": "which is a web application a flask quick application displaying marvel characters",
    "start": "1857600",
    "end": "1864480"
  },
  {
    "text": "that are picked from a mongodb database so this database as you",
    "start": "1864480",
    "end": "1872720"
  },
  {
    "text": "can see here is a representation in yaml as a custom",
    "start": "1872720",
    "end": "1878559"
  },
  {
    "text": "resource so as soon as we're going to push this manifest the mongodb operator that has been",
    "start": "1878559",
    "end": "1885200"
  },
  {
    "text": "installed in the cluster will react and deploy a stateful set",
    "start": "1885200",
    "end": "1891279"
  },
  {
    "text": "and also the mongodb cluster on top of that stateful set",
    "start": "1891279",
    "end": "1896960"
  },
  {
    "text": "we also have a storage class so we're going to be using uh on dats as the the",
    "start": "1896960",
    "end": "1903519"
  },
  {
    "text": "storage class for the stateful sets um so on that will be responsible for",
    "start": "1903519",
    "end": "1909120"
  },
  {
    "text": "the underlying distributed storage layer so providing features i mean enterprise",
    "start": "1909120",
    "end": "1914159"
  },
  {
    "text": "great features such as at rest and in transit encryption",
    "start": "1914159",
    "end": "1919279"
  },
  {
    "text": "persistent volume replication nfs you know share if you wish so",
    "start": "1919279",
    "end": "1925760"
  },
  {
    "text": "optimize performance etc but it's going to be just used as a storage class as part of this lab",
    "start": "1925760",
    "end": "1932720"
  },
  {
    "text": "then we have the last component which is a which is a job so the goal of this job",
    "start": "1932720",
    "end": "1939440"
  },
  {
    "text": "is just to make requests on the marvel api and populate the database then the",
    "start": "1939440",
    "end": "1945760"
  },
  {
    "text": "front-end application will display you know the information that is sitting",
    "start": "1945760",
    "end": "1951760"
  },
  {
    "text": "within this database then the production overlay is",
    "start": "1951760",
    "end": "1957679"
  },
  {
    "text": "essentially a replication of the dev section but with some differences so for example you can see",
    "start": "1957679",
    "end": "1965120"
  },
  {
    "text": "in the dev environment we have two replicas for the front end in prod",
    "start": "1965120",
    "end": "1970159"
  },
  {
    "text": "we'll have five in the prod overlay we also have a service",
    "start": "1970159",
    "end": "1977360"
  },
  {
    "text": "a specific service that is exposing the application in the outside world in",
    "start": "1977360",
    "end": "1983679"
  },
  {
    "text": "the dev this is just a cluster ip so only available within the cluster",
    "start": "1983679",
    "end": "1989200"
  },
  {
    "text": "boundaries and in terms of the storage class there's also some differences you can see in the dev",
    "start": "1989200",
    "end": "1995120"
  },
  {
    "text": "environment we have no replica no encryption for production we will enforce i mean we want to enforce",
    "start": "1995120",
    "end": "2002240"
  },
  {
    "text": "two replicas and encryption as well and for this we're going to be",
    "start": "2002240",
    "end": "2008320"
  },
  {
    "text": "using kyoverno policies so the validation policies are described there",
    "start": "2008320",
    "end": "2014559"
  },
  {
    "text": "so first in relation to the mongodb database what we want is to have",
    "start": "2014559",
    "end": "2021760"
  },
  {
    "text": "here one user admin that has i mean at least one admin user that has all the um",
    "start": "2021760",
    "end": "2030080"
  },
  {
    "text": "permissions that are sitting there if you compare to the original",
    "start": "2030080",
    "end": "2036159"
  },
  {
    "text": "you know manifest in the application you can see that it has four different roles",
    "start": "2036159",
    "end": "2043919"
  },
  {
    "text": "and on top of this we also want to check that the um encryption is enabled so you can",
    "start": "2043919",
    "end": "2051679"
  },
  {
    "text": "see like the kind of this object is cluster policy",
    "start": "2051679",
    "end": "2056720"
  },
  {
    "text": "all the policies have this type but again it's",
    "start": "2056720",
    "end": "2061839"
  },
  {
    "text": "just yaml right nothing's too too different from a normal you know just kubernetes manifest",
    "start": "2061839",
    "end": "2068240"
  },
  {
    "text": "on top of this we also have the number of persistent volume replicas as defined",
    "start": "2068240",
    "end": "2074320"
  },
  {
    "text": "per the storage class should be greater or equal than two and finally",
    "start": "2074320",
    "end": "2080878"
  },
  {
    "text": "the maximum size of any persistent volume that is associated",
    "start": "2080879",
    "end": "2086240"
  },
  {
    "text": "with the mongodb community custom resource should be less or equal",
    "start": "2086240",
    "end": "2092398"
  },
  {
    "text": "equal to 10 gig so now what we want to do is validate",
    "start": "2092399",
    "end": "2098400"
  },
  {
    "start": "2094000",
    "end": "2247000"
  },
  {
    "text": "the policies with kyverno only using the text file only the manifest nothing in cluster so for this",
    "start": "2098400",
    "end": "2105520"
  },
  {
    "text": "we're just going to check that we don't have any policies in the cluster or any application so there's no",
    "start": "2105520",
    "end": "2112880"
  },
  {
    "text": "the application has not been deployed we have kyverno that is installed but",
    "start": "2112880",
    "end": "2117920"
  },
  {
    "text": "we shouldn't have so cluster policy this is the object or c poll we don't have any policies",
    "start": "2117920",
    "end": "2124480"
  },
  {
    "text": "implemented in the cluster yet so before",
    "start": "2124480",
    "end": "2129599"
  },
  {
    "text": "checking the policy let's introduce some um some non non-compliant uh information",
    "start": "2129599",
    "end": "2137359"
  },
  {
    "text": "for this we're going to go back into the editor we're going to be using the production overlay",
    "start": "2137359",
    "end": "2143440"
  },
  {
    "text": "to simulate this non-conforming non-conformant information",
    "start": "2143440",
    "end": "2150400"
  },
  {
    "text": "we are going to delete the cluster admin permission there we're",
    "start": "2150400",
    "end": "2157280"
  },
  {
    "text": "gonna also change the data volume size to 50 gig which is",
    "start": "2157280",
    "end": "2163760"
  },
  {
    "text": "more than what is allowed and then also in the storage class",
    "start": "2163760",
    "end": "2170320"
  },
  {
    "text": "we're going to change the encryption to false to disable the encryption",
    "start": "2170320",
    "end": "2178160"
  },
  {
    "text": "okay here we go we saved changes and now we can just use",
    "start": "2178160",
    "end": "2184720"
  },
  {
    "text": "customize to [Music]",
    "start": "2184720",
    "end": "2190480"
  },
  {
    "text": "generate the manifests for the production environment and then pipe them",
    "start": "2190480",
    "end": "2197760"
  },
  {
    "text": "into the kyverno cli which will be using this directory",
    "start": "2197760",
    "end": "2204160"
  },
  {
    "text": "as the source for the policy validation which is exactly what i've showed you before okay let's",
    "start": "2204160",
    "end": "2209920"
  },
  {
    "text": "run this and hopefully we should have three errors right so this",
    "start": "2209920",
    "end": "2216480"
  },
  {
    "text": "this is the errors i have i've just introduced so we have one which is uh require",
    "start": "2216480",
    "end": "2223359"
  },
  {
    "text": "permission so we have one permission permission missing if you remember",
    "start": "2223359",
    "end": "2228640"
  },
  {
    "text": "then the encryption that is not enabled in the storage class and also the the",
    "start": "2228640",
    "end": "2234880"
  },
  {
    "text": "pvc volume says volume size that is um",
    "start": "2234880",
    "end": "2240480"
  },
  {
    "text": "greater than 10 gig next we're gonna see what happens if we",
    "start": "2240480",
    "end": "2245520"
  },
  {
    "text": "um use the dynamic admission controller for the validation so basically doing",
    "start": "2245520",
    "end": "2251359"
  },
  {
    "start": "2247000",
    "end": "2749000"
  },
  {
    "text": "exactly the same thing but this time applying the manifest into the cluster",
    "start": "2251359",
    "end": "2257839"
  },
  {
    "text": "and using caiaverno in cluster so we need to deploy the policies in the",
    "start": "2257839",
    "end": "2263119"
  },
  {
    "text": "cluster first here we go and",
    "start": "2263119",
    "end": "2268480"
  },
  {
    "text": "if i check now the policies there are for them so it should be",
    "start": "2268480",
    "end": "2275440"
  },
  {
    "text": "oh okay now all of them are ready to go and i'm not gonna use flux right now to",
    "start": "2275440",
    "end": "2281520"
  },
  {
    "text": "deploy the application going to use flux for the last one for the mutation well it's the same",
    "start": "2281520",
    "end": "2287440"
  },
  {
    "text": "principle the the only difference is that i'm using coop ctl apply rather than a",
    "start": "2287440",
    "end": "2293359"
  },
  {
    "text": "git ups cd methodology so now again",
    "start": "2293359",
    "end": "2298800"
  },
  {
    "text": "let's see what happened if i paste",
    "start": "2298800",
    "end": "2304560"
  },
  {
    "text": "the command here again we're going to be using customize to build the manifest and pipe them this",
    "start": "2304560",
    "end": "2310640"
  },
  {
    "text": "time not in the chive are no cli but directly kub ctl apply so",
    "start": "2310640",
    "end": "2316320"
  },
  {
    "text": "deploying all the manifest in the cluster so as expected here we have errors and this is exactly the",
    "start": "2316320",
    "end": "2322960"
  },
  {
    "text": "same ones as before so complaining by about uh the",
    "start": "2322960",
    "end": "2329520"
  },
  {
    "text": "volume side the permission and uh the encryption",
    "start": "2329520",
    "end": "2335040"
  },
  {
    "text": "but the difference now is if i look for the application",
    "start": "2335040",
    "end": "2341280"
  },
  {
    "text": "you can see that now like it's literally when i've applied this manifest",
    "start": "2341280",
    "end": "2347280"
  },
  {
    "text": "we have part of the application that is running of course we are missing the",
    "start": "2347280",
    "end": "2352400"
  },
  {
    "text": "non-conformant resources which is the storage class and the the state rule sets so our",
    "start": "2352400",
    "end": "2359280"
  },
  {
    "text": "application is currently broken and this is not necessarily something you want",
    "start": "2359280",
    "end": "2364640"
  },
  {
    "text": "right so this is why i was telling you before for validation uh it's better to to use it in a",
    "start": "2364640",
    "end": "2372400"
  },
  {
    "text": "pipeline and as to the mutation then again if you're using git ups",
    "start": "2372400",
    "end": "2378000"
  },
  {
    "text": "and you mutate um values as your application is getting",
    "start": "2378000",
    "end": "2383760"
  },
  {
    "text": "into deploying to the cluster is it really git ups um i'm not sure right but um let's",
    "start": "2383760",
    "end": "2391280"
  },
  {
    "text": "proceed with the next section which which is going to be around uh mutating these resources",
    "start": "2391280",
    "end": "2397359"
  },
  {
    "text": "but first let's delete the application all together so that we can use um",
    "start": "2397359",
    "end": "2403280"
  },
  {
    "text": "flux to deploy it again okay so let's check that now",
    "start": "2403280",
    "end": "2408720"
  },
  {
    "text": "our application has been deleted this is good",
    "start": "2408720",
    "end": "2414240"
  },
  {
    "text": "now let's apply let me take policies",
    "start": "2414240",
    "end": "2420640"
  },
  {
    "text": "there and let's take a look also at them so in kyverno mutates",
    "start": "2420640",
    "end": "2426960"
  },
  {
    "text": "what are we going to do there so we're going to enforce",
    "start": "2426960",
    "end": "2432400"
  },
  {
    "text": "the admin user to have those four permissions",
    "start": "2432400",
    "end": "2437520"
  },
  {
    "text": "for the  db custom resource",
    "start": "2437520",
    "end": "2442880"
  },
  {
    "text": "for the storage class we're going to enforce a couple of settings here",
    "start": "2442880",
    "end": "2448720"
  },
  {
    "text": "so regardless of what the user will input in the",
    "start": "2448720",
    "end": "2454240"
  },
  {
    "text": "storage class manifests uh we will change it and force the number of requests to two force",
    "start": "2454240",
    "end": "2460000"
  },
  {
    "text": "encryption force the usage of um xfs at the file system which is the the one recommended",
    "start": "2460000",
    "end": "2466720"
  },
  {
    "text": "for for um and in terms of the volume size we're gonna enforce five gig",
    "start": "2466720",
    "end": "2473680"
  },
  {
    "text": "for all the volumes that are going to be attached to the mongodb stateful set so",
    "start": "2473680",
    "end": "2480720"
  },
  {
    "text": "not only for data but also for logs for any volume that are going to be attached there okay so",
    "start": "2480720",
    "end": "2486880"
  },
  {
    "text": "let's go back to the console the policies have been",
    "start": "2486880",
    "end": "2492560"
  },
  {
    "text": "mutation policies have been created let's just check now again the cluster policies so you can see",
    "start": "2492560",
    "end": "2499599"
  },
  {
    "text": "these three new policies are now living in the cluster",
    "start": "2499599",
    "end": "2505920"
  },
  {
    "text": "and what we need to do now is to create the",
    "start": "2505920",
    "end": "2511040"
  },
  {
    "text": "um the flux resources so that flux can deploy",
    "start": "2511040",
    "end": "2517200"
  },
  {
    "text": "the application into the cluster in a git ups fashion so first we need to",
    "start": "2517200",
    "end": "2522720"
  },
  {
    "text": "tell flux uh where is the repository to monitor um you know the non-conformant resources",
    "start": "2522720",
    "end": "2530560"
  },
  {
    "text": "and then we also need to create the corresponding customization uh to tell flux what to do with it",
    "start": "2530560",
    "end": "2538720"
  },
  {
    "text": "okay this is done so now if we have um if we look at the",
    "start": "2538720",
    "end": "2546880"
  },
  {
    "text": "fleet infrared repository which is the config the repository that hosts the",
    "start": "2547520",
    "end": "2552560"
  },
  {
    "text": "configuration for flux uh we've been using the apps pro yaml",
    "start": "2552560",
    "end": "2558000"
  },
  {
    "text": "file which is this one so now uh if i display this",
    "start": "2558000",
    "end": "2563440"
  },
  {
    "text": "prod yaml file you can see all i mean these two resources the the source the",
    "start": "2563440",
    "end": "2568880"
  },
  {
    "text": "git repository and the customization so um",
    "start": "2568880",
    "end": "2574400"
  },
  {
    "text": "the repository that i've configured there is essentially a mirror of the changes that",
    "start": "2574400",
    "end": "2580800"
  },
  {
    "text": "we made uh you know when we we change a conformant um the conformant prod",
    "start": "2580800",
    "end": "2586079"
  },
  {
    "text": "manifest into non-conformant this is exactly what this git repository",
    "start": "2586079",
    "end": "2591119"
  },
  {
    "text": "contains so we have modified this locally",
    "start": "2591119",
    "end": "2596720"
  },
  {
    "text": "within our flux configuration repository and because flux itself it's it's is using",
    "start": "2596720",
    "end": "2604720"
  },
  {
    "text": "github's principle to configure itself everything is done via git so we need to",
    "start": "2604720",
    "end": "2611200"
  },
  {
    "text": "push the changes into our remote repo so",
    "start": "2611200",
    "end": "2617119"
  },
  {
    "text": "here you go and we can monitor the flux customization",
    "start": "2617680",
    "end": "2623520"
  },
  {
    "text": "so after a few seconds we should see a new customization",
    "start": "2623520",
    "end": "2629040"
  },
  {
    "text": "getting reconciled within the cluster and the application getting deployed",
    "start": "2629040",
    "end": "2634800"
  },
  {
    "text": "and what we're going to see hopefully is that the settings that have been set within",
    "start": "2634800",
    "end": "2640240"
  },
  {
    "text": "the manifest are then going to be overwritten by kaya verno so now let's verify the",
    "start": "2640240",
    "end": "2648560"
  },
  {
    "text": "application configuration so for this we can check",
    "start": "2648560",
    "end": "2654400"
  },
  {
    "text": "the volume size for the mongodb database",
    "start": "2654400",
    "end": "2660880"
  },
  {
    "text": "and you can see that we moved from uh you know 50 gig",
    "start": "2660880",
    "end": "2665920"
  },
  {
    "text": "and 10 and one gig respectively for the data volume and the log volume into 5 gig which is",
    "start": "2665920",
    "end": "2673280"
  },
  {
    "text": "what has been enforced um by the policy now if we also",
    "start": "2673280",
    "end": "2678720"
  },
  {
    "text": "get the storage class so if we get the storage class on that",
    "start": "2678720",
    "end": "2686720"
  },
  {
    "text": "prod we're going to see that again",
    "start": "2686720",
    "end": "2692800"
  },
  {
    "text": "encryption is true number of replicas is two",
    "start": "2692800",
    "end": "2698160"
  },
  {
    "text": "and the file system is now xfs which is what",
    "start": "2698160",
    "end": "2703200"
  },
  {
    "text": "the policies has enforced and finally let's check let's check that",
    "start": "2703200",
    "end": "2708560"
  },
  {
    "text": "our application is running so we have our job that is now completed",
    "start": "2708560",
    "end": "2714319"
  },
  {
    "text": "we have those five different replicas for the front end",
    "start": "2714319",
    "end": "2719839"
  },
  {
    "text": "and we should also see a load balancer",
    "start": "2719839",
    "end": "2726079"
  },
  {
    "text": "type service that is there and if we go to",
    "start": "2726079",
    "end": "2732480"
  },
  {
    "text": "if we browse to that ip address on poor 8080 we should see our application running",
    "start": "2732480",
    "end": "2738880"
  },
  {
    "text": "so it is there uh it's working we have some random marvel characters",
    "start": "2738880",
    "end": "2745200"
  },
  {
    "text": "that are being displayed on the screen as expected so i hope you enjoyed this demo again if",
    "start": "2745200",
    "end": "2752960"
  },
  {
    "start": "2749000",
    "end": "2811000"
  },
  {
    "text": "you want to try it out by yourself after the link will be in the next slide",
    "start": "2752960",
    "end": "2758560"
  },
  {
    "text": "so a few takeaways for today first we've seen that kubernetes is now ready",
    "start": "2758560",
    "end": "2763599"
  },
  {
    "text": "for hosting databases and run cloud native data the only thing is that the key is to",
    "start": "2763599",
    "end": "2769440"
  },
  {
    "text": "make sure that you can reach the right level of availability scale and performance so the underlying",
    "start": "2769440",
    "end": "2776400"
  },
  {
    "text": "storage solution is also very important to make sure that you can run these stateful workloads with enterprise great",
    "start": "2776400",
    "end": "2783599"
  },
  {
    "text": "features uh we've also seen that git ups and policy as code principles provide",
    "start": "2783599",
    "end": "2789599"
  },
  {
    "text": "best of class paradigms to manage enterprise application life cycle so we've been testing",
    "start": "2789599",
    "end": "2795440"
  },
  {
    "text": "flux we've been testing kyverno and finally let's embrace this principle to enhance",
    "start": "2795440",
    "end": "2801440"
  },
  {
    "text": "your platform security facilitate collaboration between development teams",
    "start": "2801440",
    "end": "2806640"
  },
  {
    "text": "and ultimately experience faster innovation cycles and finally a couple",
    "start": "2806640",
    "end": "2812400"
  },
  {
    "start": "2811000",
    "end": "2851000"
  },
  {
    "text": "of action on your side so again if you want to test the lab you've got the link there or if you want to learn more about",
    "start": "2812400",
    "end": "2819200"
  },
  {
    "text": "on that we also have all the labs you can try out uh the link is also displayed there you",
    "start": "2819200",
    "end": "2824319"
  },
  {
    "text": "can test on that in your cluster on the sas portal also subscribe to our newsletter and if you want to chat with",
    "start": "2824319",
    "end": "2831760"
  },
  {
    "text": "the on that team or with myself you have any question about this session then you can join us on",
    "start": "2831760",
    "end": "2838079"
  },
  {
    "text": "slack so again thank you for making it through the end this was a",
    "start": "2838079",
    "end": "2844720"
  },
  {
    "text": "webinar i really enjoyed doing for the cncf i hope to see you in the next one",
    "start": "2844720",
    "end": "2852599"
  }
]