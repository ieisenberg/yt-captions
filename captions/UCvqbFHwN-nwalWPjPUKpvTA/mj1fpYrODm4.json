[
  {
    "text": "okay uh thanks everybody for coming um I'm Erica Olson and today I'm going",
    "start": "480",
    "end": "5520"
  },
  {
    "text": "to be talking about uh Next Generation data science workflows using Ray um",
    "start": "5520",
    "end": "11340"
  },
  {
    "text": "or you and Ray in the cloud yes you",
    "start": "11340",
    "end": "18300"
  },
  {
    "text": "so the basic structure of the talk I'll start with a very high level description",
    "start": "18300",
    "end": "24180"
  },
  {
    "text": "of Ray and then I'm going to try to put Rey and the demo stack you're going to",
    "start": "24180",
    "end": "30240"
  },
  {
    "text": "see in context then I talk about a self-service Ray architecture that we've",
    "start": "30240",
    "end": "37380"
  },
  {
    "text": "been working with with my group and I will then demo that in action and after",
    "start": "37380",
    "end": "42600"
  },
  {
    "text": "I've done the demo I will then go back and I'll defend the title of this talk why is it next generation and talk about",
    "start": "42600",
    "end": "49620"
  },
  {
    "text": "some of the community collaborations that helped us along the way and then talk a little about Road mapping",
    "start": "49620",
    "end": "56718"
  },
  {
    "text": "so uh it's about Ray's ecosystem Niche um actually show of hands how many",
    "start": "57120",
    "end": "64378"
  },
  {
    "text": "people have actually worked with Ray in the audience okay a few good",
    "start": "64379",
    "end": "70260"
  },
  {
    "text": "um and uh the rest of you have Justified all the contacts I'm about to deliver so thank you so if you consider like you",
    "start": "70260",
    "end": "77520"
  },
  {
    "text": "know older tools like open NPI one end of the spectrum you have like extremely",
    "start": "77520",
    "end": "82740"
  },
  {
    "text": "fine-grained control of how you develop parallelism but you have very few abstractions to help you along the way",
    "start": "82740",
    "end": "89939"
  },
  {
    "text": "at the other end of the spectrum we have like more modern tools like spark you",
    "start": "89939",
    "end": "95040"
  },
  {
    "text": "technically have less control over certain things but you also have extremely powerful abstractions to work",
    "start": "95040",
    "end": "101460"
  },
  {
    "text": "with so Ray was designed to sit in between these two",
    "start": "101460",
    "end": "107400"
  },
  {
    "text": "but as you can see probably closer to spark it definitely also has powerful abstractions but you can actually access",
    "start": "107400",
    "end": "115640"
  },
  {
    "text": "compute at a slightly lower level in a more flexible level when you need that",
    "start": "115640",
    "end": "123020"
  },
  {
    "text": "um so how does Ray work as a compute model it has two kinds of compute",
    "start": "123060",
    "end": "128940"
  },
  {
    "text": "there's tasks which are things like functions that execute and then finish",
    "start": "128940",
    "end": "134040"
  },
  {
    "text": "and return some kind of results and then it also has actors which are like you",
    "start": "134040",
    "end": "139319"
  },
  {
    "text": "know the analog of like services or microservices and something like kubernetes and so you can take any",
    "start": "139319",
    "end": "147360"
  },
  {
    "text": "python function um and turn it into a task by using the",
    "start": "147360",
    "end": "152520"
  },
  {
    "text": "array dot remote decorators you see above and similarly the same decorator will take any class and can turn it into",
    "start": "152520",
    "end": "158760"
  },
  {
    "text": "a reactor so the programming user experience is actually quite nice",
    "start": "158760",
    "end": "166319"
  },
  {
    "text": "um so its compute model is a sort of compute dependency directed acyclic",
    "start": "166319",
    "end": "173340"
  },
  {
    "text": "graph like here on the left you can see that I've not",
    "start": "173340",
    "end": "179459"
  },
  {
    "text": "made really the author of The Blog I stole this from is creating a",
    "start": "179459",
    "end": "185580"
  },
  {
    "text": "tree of computations you could say it's the world's most over-engineered edition",
    "start": "185580",
    "end": "190800"
  },
  {
    "text": "of eight integers you might ever see but it's great for illustrating the concepts you can see here that the first four of",
    "start": "190800",
    "end": "198120"
  },
  {
    "text": "these statements are setting up additions of some pairs of integers and",
    "start": "198120",
    "end": "205140"
  },
  {
    "text": "a DOT remote method error is a thing you get from those decorators I just showed you so it",
    "start": "205140",
    "end": "211080"
  },
  {
    "text": "basically allows you to tell the right cluster here I'd like you to add some integers and then of course if you look",
    "start": "211080",
    "end": "217680"
  },
  {
    "text": "at these first statements here anybody who's worked with spark will find this familiar these are declarative",
    "start": "217680",
    "end": "224420"
  },
  {
    "text": "computations up to this point Ray has not done any work for you at all you're",
    "start": "224420",
    "end": "229860"
  },
  {
    "text": "just basically telling it here's some work I'd like you to do and here's the structure of it and the dependencies",
    "start": "229860",
    "end": "236879"
  },
  {
    "text": "um and at the very end if you issue this dot get command",
    "start": "236879",
    "end": "242159"
  },
  {
    "text": "it actually goes back and says okay now you want a result I'm going to unwind all these computations you've asked me",
    "start": "242159",
    "end": "247260"
  },
  {
    "text": "to do and actually compute them and give you what you want so again like spark it",
    "start": "247260",
    "end": "253620"
  },
  {
    "text": "has a lazy execution model um",
    "start": "253620",
    "end": "258919"
  },
  {
    "text": "so raise core data data model is implemented with the plasma Object Store",
    "start": "259139",
    "end": "265460"
  },
  {
    "text": "like python it is basically typeless and schema-less it's just sort of objects",
    "start": "265460",
    "end": "271979"
  },
  {
    "text": "um it uses a local first strategy so it only pulls data from outside of a worker",
    "start": "271979",
    "end": "278040"
  },
  {
    "text": "node if it needs to and it always tries to do read and write local to worker",
    "start": "278040",
    "end": "283080"
  },
  {
    "text": "nodes the plasma Object Store began its life in Ray but has since been actually",
    "start": "283080",
    "end": "290699"
  },
  {
    "text": "adopted by Apache Arrow so you can use plasma via Arrow if you ever have a need",
    "start": "290699",
    "end": "296520"
  },
  {
    "text": "to similarly race scheduling model is also local first it tries to use",
    "start": "296520",
    "end": "303720"
  },
  {
    "text": "a local worker scheduler to do tasking whenever it can and only like invokes",
    "start": "303720",
    "end": "309419"
  },
  {
    "text": "the global cluster scheduler when necessary and so this local first strategy helps things to you know",
    "start": "309419",
    "end": "316080"
  },
  {
    "text": "perform as well as possible over the cluster it comes with a bunch of great native",
    "start": "316080",
    "end": "322740"
  },
  {
    "text": "libraries it comes with a hyper tuning hyper parameter tuning Library a",
    "start": "322740",
    "end": "329160"
  },
  {
    "text": "reinforcement learning library and a sort of generic stochastic gradient",
    "start": "329160",
    "end": "335220"
  },
  {
    "text": "descent Library it also allows a scalable and programmable a serving of",
    "start": "335220",
    "end": "342419"
  },
  {
    "text": "services so called Ray serve and then relatively new is raid data sets which",
    "start": "342419",
    "end": "348960"
  },
  {
    "text": "is actually native data frames for Ray and so this is a great development because again it sort of puts it on",
    "start": "348960",
    "end": "354440"
  },
  {
    "text": "closer to equal footing with like you know data frames from something like a spark or pandas",
    "start": "354440",
    "end": "362180"
  },
  {
    "text": "there are tons and tons of community Integrations all the popular machine learning libraries and a whole lot more",
    "start": "362520",
    "end": "370699"
  },
  {
    "text": "already have Integrations available to you this link at the bottom shows you",
    "start": "370699",
    "end": "376139"
  },
  {
    "text": "the complete Community list of those it's dozens at this point",
    "start": "376139",
    "end": "382280"
  },
  {
    "text": "so one of the things about this is of course all these things are in Python",
    "start": "382319",
    "end": "387960"
  },
  {
    "text": "and so as data scientists or people in that ecosystem we're already working",
    "start": "387960",
    "end": "393060"
  },
  {
    "text": "with most of these tools via Jupiter at least part of the time and when you take Rey and Jupiter",
    "start": "393060",
    "end": "400740"
  },
  {
    "text": "there's the promise of uh literate and interactive Ray programming via",
    "start": "400740",
    "end": "406560"
  },
  {
    "text": "Jupiter's literate programming environment and furthermore they can both Jupiter",
    "start": "406560",
    "end": "413580"
  },
  {
    "text": "and Reagan operate in the cloud and of course by Cloud today we mean kubernetes",
    "start": "413580",
    "end": "419039"
  },
  {
    "text": "and my demo will actually be running on openshift",
    "start": "419039",
    "end": "425060"
  },
  {
    "text": "um so Rey is cloud native you create Ray clusters using a ray",
    "start": "425520",
    "end": "431580"
  },
  {
    "text": "cluster custom resource which you submit to the array operator which then says oh he wants a cluster and uses the",
    "start": "431580",
    "end": "438660"
  },
  {
    "text": "information you provided about like the sizing and other basic cluster behaviors",
    "start": "438660",
    "end": "446599"
  },
  {
    "text": "so it gives you like a ray head node and some worker nodes and will also automatically scale them up and down for",
    "start": "446819",
    "end": "453840"
  },
  {
    "text": "you based on what it's seeing on the workload of your worker nodes and once you have this you can connect to it from",
    "start": "453840",
    "end": "460139"
  },
  {
    "text": "a client and again today the client I will be focusing on is Jupiter but I want to stress that it doesn't have to",
    "start": "460139",
    "end": "466860"
  },
  {
    "text": "be that it can be other python files it can be from an actual command line exterior to the cluster so a client and",
    "start": "466860",
    "end": "474240"
  },
  {
    "text": "involves a whole lot of you know modalities and use cases there",
    "start": "474240",
    "end": "479759"
  },
  {
    "text": "so again I mentioned Jupiter today I'll be getting my Jupiter from a",
    "start": "479759",
    "end": "487039"
  },
  {
    "text": "meta operator called open data hub so what about open data Hub well",
    "start": "487039",
    "end": "494419"
  },
  {
    "text": "it's an open source Downstream of kubeflow",
    "start": "494419",
    "end": "500039"
  },
  {
    "text": "and as such it serves as a kind of reference platform for doing ml workload deployments in the",
    "start": "500039",
    "end": "508020"
  },
  {
    "text": "cloud it shows how you can deploy tools basically how to wire them up together I",
    "start": "508020",
    "end": "513300"
  },
  {
    "text": "know from previous talks many of you all quite familiar with how to do this stuff",
    "start": "513300",
    "end": "518459"
  },
  {
    "text": "but anyways it provides a nice easy way to pre-provisioned some basic uh reference",
    "start": "518459",
    "end": "525600"
  },
  {
    "text": "tooling it's Federated which means you can take a lot of these tools pick and choose what you want",
    "start": "525600",
    "end": "531500"
  },
  {
    "text": "and of course furthermore because it's all sitting on a cube cluster it's very easy to inject other kinds of tooling if",
    "start": "531500",
    "end": "537899"
  },
  {
    "text": "you would like to deploy that in fact that's how really we got the integration with Ray",
    "start": "537899",
    "end": "544639"
  },
  {
    "text": "and you know along along the one axis the tooling that comes with odh",
    "start": "544740",
    "end": "550860"
  },
  {
    "text": "you know like kubeflow covers pretty much the spectrum of basic tasks in a",
    "start": "550860",
    "end": "557640"
  },
  {
    "text": "data science project in the cloud and along other axis it also you know covers",
    "start": "557640",
    "end": "563700"
  },
  {
    "text": "the different kinds of persona all the way from like you know business stakeholders to data engineering actual",
    "start": "563700",
    "end": "569459"
  },
  {
    "text": "data science ml Engineers all the way through you know to it Ops I guess we call it ml Ops",
    "start": "569459",
    "end": "575700"
  },
  {
    "text": "these days so",
    "start": "575700",
    "end": "581100"
  },
  {
    "text": "I'll begin talking about like the architecture the latest architecture we've been using is actually even",
    "start": "581100",
    "end": "587580"
  },
  {
    "text": "simpler than some of the older ones we just created a sort of experimental SDK that has a function a python function",
    "start": "587580",
    "end": "595260"
  },
  {
    "text": "called Ray start cluster and so suppose you're in Jupiter and you have this",
    "start": "595260",
    "end": "600420"
  },
  {
    "text": "function in your Jupiter environment you can simply say hey lucky to Stark me array cluster",
    "start": "600420",
    "end": "605700"
  },
  {
    "text": "and what it will do is create one of these Ray cluster custom",
    "start": "605700",
    "end": "611160"
  },
  {
    "text": "resources out on your namespace for you and as long as you have the array",
    "start": "611160",
    "end": "618660"
  },
  {
    "text": "operator running in your namespace to pick up on that it'll say oh he's got you'd like a new array cluster and it",
    "start": "618660",
    "end": "624060"
  },
  {
    "text": "will spin up these clusters for you and once it's there you can in the",
    "start": "624060",
    "end": "630480"
  },
  {
    "text": "comfort of your own Jupiter environment you know connect to the right head node and do some work and again",
    "start": "630480",
    "end": "637019"
  },
  {
    "text": "I think you know I mentioned getting Jupiter in my case from odh but you can",
    "start": "637019",
    "end": "642899"
  },
  {
    "text": "see that it doesn't actually matter as long as you have like a container that's like running Jupiter lab or something similar for you and you have the right",
    "start": "642899",
    "end": "649560"
  },
  {
    "text": "function and you have the array operator installed you can do this yourself",
    "start": "649560",
    "end": "656300"
  },
  {
    "text": "so one thing one thing with these things is of course we had to ask ourselves well if I spin up array cluster just for",
    "start": "657240",
    "end": "663420"
  },
  {
    "text": "my own personal use and then like the thing goes down like my Jupiter pod crashes or I leave and I just close down",
    "start": "663420",
    "end": "671040"
  },
  {
    "text": "the environment it's like I'd like the cluster to go away and so on trick we figured out is to use the owner",
    "start": "671040",
    "end": "677100"
  },
  {
    "text": "references um yaml to say Hey you know it's like I",
    "start": "677100",
    "end": "682620"
  },
  {
    "text": "would like I would actually like my Jupiter pod that created this to have ownership over the cluster CR and so",
    "start": "682620",
    "end": "689220"
  },
  {
    "text": "like if I leave and I forget to shut down my Ray cluster",
    "start": "689220",
    "end": "694440"
  },
  {
    "text": "um the Jupiter pod goes away and then the platform itself says oh he would also like to remove this uh",
    "start": "694440",
    "end": "701279"
  },
  {
    "text": "CR for me and then the operator notices that's gone and shuts down everything so it's quite elegant and makes",
    "start": "701279",
    "end": "707760"
  },
  {
    "text": "proper use of the control plane and so now having described that I'm",
    "start": "707760",
    "end": "713760"
  },
  {
    "text": "going to do a live demo of this in action before I do I just want a quick shout",
    "start": "713760",
    "end": "721380"
  },
  {
    "text": "out to my teammate Michael Clifford he took all my original prototypes into space and is like totally modernized",
    "start": "721380",
    "end": "727860"
  },
  {
    "text": "them and gotten them working with Ray 2 and it's just done a ton of work and he was unable to be here today to help me",
    "start": "727860",
    "end": "734459"
  },
  {
    "text": "present but um raise a glass it's Michael so",
    "start": "734459",
    "end": "739980"
  },
  {
    "text": "um I will now bring up my prefab Jupiter environment",
    "start": "739980",
    "end": "748640"
  },
  {
    "text": "and we'll begin just with uh basic stuff doing Imports you can see we're",
    "start": "750420",
    "end": "756060"
  },
  {
    "text": "importing a bunch of Ray tooling that comes with",
    "start": "756060",
    "end": "762000"
  },
  {
    "text": "um and here's our start Ray cluster and I'm going to give",
    "start": "762000",
    "end": "768060"
  },
  {
    "text": "it a name and so this is cool so I dump a tint so if I ask for the same cluster more than once and it's already running",
    "start": "768060",
    "end": "773760"
  },
  {
    "text": "it's just going to give me the same one um which is a nice feature this also",
    "start": "773760",
    "end": "778860"
  },
  {
    "text": "actually wanted just because if you're trying to use this in a pipeline you can actually ask for the same Ray cluster",
    "start": "778860",
    "end": "784500"
  },
  {
    "text": "over and over again across different steps of the pipeline if you like and so it said",
    "start": "784500",
    "end": "790860"
  },
  {
    "text": "it succeeded it also hopefully printed out for me a link to the ray dashboard",
    "start": "790860",
    "end": "796680"
  },
  {
    "text": "that it's set up so I'll come back to that later but uh like spara gray has a dashboard and we can easily stand it up",
    "start": "796680",
    "end": "804240"
  },
  {
    "text": "in the cluster just like everything else um so now that I have that I can actually",
    "start": "804240",
    "end": "810500"
  },
  {
    "text": "initialize my connection to the cluster",
    "start": "810500",
    "end": "815240"
  },
  {
    "text": "array is already connected oh",
    "start": "815519",
    "end": "821100"
  },
  {
    "text": "I bet I know what I didn't do",
    "start": "821100",
    "end": "824420"
  },
  {
    "text": "sorry about that",
    "start": "828720",
    "end": "831560"
  },
  {
    "text": "see high temperature for me",
    "start": "836820",
    "end": "842100"
  },
  {
    "text": "um there we go so um",
    "start": "842100",
    "end": "847320"
  },
  {
    "text": "Ray will also provide you the in version and basic information we're on Ray two as of last week so very exciting again",
    "start": "847320",
    "end": "854519"
  },
  {
    "text": "thank you Michael um and so now we're just going to do a",
    "start": "854519",
    "end": "860040"
  },
  {
    "text": "basic Pi torch workflow and I'll be kind of",
    "start": "860040",
    "end": "867180"
  },
  {
    "text": "blowing through a lot of this stuff but we're going to set up some basic data sets so the Oxford pet data set",
    "start": "867180",
    "end": "875579"
  },
  {
    "text": "um which is a relatively small thing there's only",
    "start": "875579",
    "end": "881579"
  },
  {
    "text": "3 600 things in it I'm also sort of fixing my",
    "start": "881579",
    "end": "888720"
  },
  {
    "text": "my Jupiter environment I just want to use CPUs because I'm actually giving all of my four gpus to the right cluster",
    "start": "888720",
    "end": "895139"
  },
  {
    "text": "which we'll see in a second and then I'm going to set up a train and test and just take a look at an image",
    "start": "895139",
    "end": "903000"
  },
  {
    "text": "some kind of cow with long ears so this pet data is a courtesy of the community",
    "start": "903000",
    "end": "909060"
  },
  {
    "text": "data license agreement via the Linux Foundation let's do a brief plug for this the cdla is a great data license it",
    "start": "909060",
    "end": "917160"
  },
  {
    "text": "makes it really easy for people like me to give up give talks in the space without having to worry about commercial",
    "start": "917160",
    "end": "922620"
  },
  {
    "text": "restrictions so um uh when you're out in the world favor cdla permissive licensed data sets just",
    "start": "922620",
    "end": "930300"
  },
  {
    "text": "like you favor you know things like open source licensing so now we're going to create an extremely low budget uh",
    "start": "930300",
    "end": "939180"
  },
  {
    "text": "recognition net which can finish at a time that I have to give this talk",
    "start": "939180",
    "end": "944820"
  },
  {
    "text": "um so here's a basic convolutional net and I'm going to give it a data set",
    "start": "944820",
    "end": "951000"
  },
  {
    "text": "Factory you can see here I'm using Knox is using the new Ray data frames for this so this",
    "start": "951000",
    "end": "956880"
  },
  {
    "text": "is nice foreign",
    "start": "956880",
    "end": "962660"
  },
  {
    "text": "and it's going kind of slow oh there it goes um",
    "start": "964320",
    "end": "973459"
  },
  {
    "text": "so we can say here's a train validation set so we're going to split this is actually kind of fun if you see the",
    "start": "973920",
    "end": "979800"
  },
  {
    "text": "shuffle and stuff this again being being kind of an analog of things like Hadoop",
    "start": "979800",
    "end": "984899"
  },
  {
    "text": "or spark data frames you can see some of the things here it's doing shuffles and",
    "start": "984899",
    "end": "990000"
  },
  {
    "text": "this thing I do a second phase here I either reduce",
    "start": "990000",
    "end": "995820"
  },
  {
    "text": "um so again you're getting a lot of sort of familiar functionality with these data frame libraries",
    "start": "995820",
    "end": "1003940"
  },
  {
    "text": "excellent so now we're going to set up just basic function closures to do training and",
    "start": "1004220",
    "end": "1009920"
  },
  {
    "text": "validation um and I guess the one one thing I want to talk about here is this is all standard",
    "start": "1009920",
    "end": "1016339"
  },
  {
    "text": "this point is basically very standard like Pi torch kind of stuff so it doesn't take a lot of any weirdness to",
    "start": "1016339",
    "end": "1021800"
  },
  {
    "text": "like make this work with Ray you just um give it to create a torch trainer for",
    "start": "1021800",
    "end": "1027199"
  },
  {
    "text": "this um so we're going to do hyper parameter tuning so I'm going to Define myself a",
    "start": "1027199",
    "end": "1032839"
  },
  {
    "text": "short search space the search space has only four tasks to go with my four gpus",
    "start": "1032839",
    "end": "1039740"
  },
  {
    "text": "um and I'm going to go kick that off",
    "start": "1039740",
    "end": "1045620"
  },
  {
    "text": "um so at this point this thing is talking now to my array",
    "start": "1045620",
    "end": "1050960"
  },
  {
    "text": "cluster and sending off a bunch of hyper tuning parameter tasks to complete it's",
    "start": "1050960",
    "end": "1056780"
  },
  {
    "text": "extremely chatty in the logs but you can see things like",
    "start": "1056780",
    "end": "1062299"
  },
  {
    "text": "um you know what's pending and what's running it starts off it's just got one thing running and Ray is waiting to see",
    "start": "1062299",
    "end": "1068780"
  },
  {
    "text": "you know oh look it's asking me to do a bunch of stuff so now it's like spinning up worker nodes",
    "start": "1068780",
    "end": "1074780"
  },
  {
    "text": "um so like if I go back to my cluster and look for Ray nodes",
    "start": "1074780",
    "end": "1082640"
  },
  {
    "text": "we can see that uh here's my kubecon 2022",
    "start": "1082640",
    "end": "1089960"
  },
  {
    "text": "um maybe I can try to make that slightly larger doesn't actually look more readable",
    "start": "1089960",
    "end": "1097960"
  },
  {
    "text": "forget that but anyway it's got It's actually spun up four now it's got worker and three nodes and I can also",
    "start": "1098299",
    "end": "1105080"
  },
  {
    "text": "take a look at the dashboard view of things um and you can see that it's actually it",
    "start": "1105080",
    "end": "1112580"
  },
  {
    "text": "doesn't just have nodes here it actually has tasks and it also has like the actions that are going on",
    "start": "1112580",
    "end": "1119440"
  },
  {
    "text": "so if I sort by CPU I can bring a lot of these",
    "start": "1119440",
    "end": "1126140"
  },
  {
    "text": "to the top one thing you might notice is it doesn't just give me CPU usage the green is over",
    "start": "1126140",
    "end": "1132500"
  },
  {
    "text": "there is a GPU usage you can see that it's not making fantastic use of gpus so",
    "start": "1132500",
    "end": "1137780"
  },
  {
    "text": "I could maybe make use of the Run AI tooling we saw earlier to uh see what's going on there",
    "start": "1137780",
    "end": "1145960"
  },
  {
    "text": "but it is using them which is very cool and we'll look at how this is going",
    "start": "1146120",
    "end": "1154240"
  },
  {
    "text": "one thing on my list is to figure out how to make this log output shorter but you can see now it's actually gone",
    "start": "1159140",
    "end": "1164539"
  },
  {
    "text": "and run it's actually one left most of them have actually finished running so I think we're",
    "start": "1164539",
    "end": "1169760"
  },
  {
    "text": "close to being all the way done",
    "start": "1169760",
    "end": "1175659"
  },
  {
    "text": "Maybe",
    "start": "1178220",
    "end": "1180820"
  },
  {
    "text": "this was supposed to run in about 90 seconds but demo gods are not smiling",
    "start": "1185840",
    "end": "1192700"
  },
  {
    "text": "well just briefly I don't know I have time we could ask a question if anybody has a question while I'm waiting for",
    "start": "1196760",
    "end": "1201799"
  },
  {
    "text": "this to complete no",
    "start": "1201799",
    "end": "1207320"
  },
  {
    "text": "it's probably almost ah there it goes see it took a whole",
    "start": "1207320",
    "end": "1213020"
  },
  {
    "text": "extra minute for me um so anyway it's done this and we can now",
    "start": "1213020",
    "end": "1219020"
  },
  {
    "text": "take the results back from our hyperpreneur parameter tuning and",
    "start": "1219020",
    "end": "1224720"
  },
  {
    "text": "um see what we got so there's our best parameters um Ray likes to emit various warning",
    "start": "1224720",
    "end": "1232340"
  },
  {
    "text": "messages which are slowly distracting but uh we can also plot what looks like on our",
    "start": "1232340",
    "end": "1238280"
  },
  {
    "text": "training and eval set and we can see that it's not great it's about what you'd expect with the world's",
    "start": "1238280",
    "end": "1245059"
  },
  {
    "text": "most low budget convolutional net but there's the model we've read in",
    "start": "1245059",
    "end": "1252200"
  },
  {
    "text": "and we can then take a look at a label in the prediction and in this",
    "start": "1252200",
    "end": "1258320"
  },
  {
    "text": "case I actually got it right which is not super common because it is",
    "start": "1258320",
    "end": "1263360"
  },
  {
    "text": "not a super smart net in 90 seconds",
    "start": "1263360",
    "end": "1267760"
  },
  {
    "text": "but then we can also do some basic things do a little data science here so our accuracy is nine percent",
    "start": "1269539",
    "end": "1276620"
  },
  {
    "text": "um and just randomly guessing would have got almost seven percent um thank you Cohen's Kappa so basically",
    "start": "1276620",
    "end": "1282860"
  },
  {
    "text": "showing that it's doing barely better than chance but not nothing um so we did learn something and we can",
    "start": "1282860",
    "end": "1290419"
  },
  {
    "text": "take a look at our corresponding confusion Matrix and of course you'd really like to see this all in the",
    "start": "1290419",
    "end": "1295700"
  },
  {
    "text": "diagonal if you stand back and squint it's a little bit of diagonal there",
    "start": "1295700",
    "end": "1300919"
  },
  {
    "text": "um and here we can look at our cluster name so at this point you could stop the right cluster I'm not going to stop it",
    "start": "1300919",
    "end": "1308419"
  },
  {
    "text": "because I'm actually going to run um",
    "start": "1308419",
    "end": "1313600"
  },
  {
    "text": "I'm actually going to run a race serve so now we have a model we'd like to serve it and Ray serve can do that for",
    "start": "1314480",
    "end": "1319760"
  },
  {
    "text": "us a quick",
    "start": "1319760",
    "end": "1325059"
  },
  {
    "text": "restart my kernel so I don't have that problem again and again we just import some basic",
    "start": "1325100",
    "end": "1331880"
  },
  {
    "text": "torch and Ray code um and we can start our cluster which",
    "start": "1331880",
    "end": "1340220"
  },
  {
    "text": "again is ident so hopefully it will give me the thing and we can set up an image model class",
    "start": "1340220",
    "end": "1347320"
  },
  {
    "text": "the app serve as another decorator I talked about it's like a more specialized Ray decorator for creating",
    "start": "1347320",
    "end": "1353780"
  },
  {
    "text": "like model serving and stuff like that um and I can now connect",
    "start": "1353780",
    "end": "1361419"
  },
  {
    "text": "and it works um here's a little bit of kluginess to find",
    "start": "1363320",
    "end": "1369140"
  },
  {
    "text": "the actual IP address I want an IP address of the head node and so like we used to have this fun procedure where we",
    "start": "1369140",
    "end": "1375320"
  },
  {
    "text": "just played roulette until we got the right one but",
    "start": "1375320",
    "end": "1380780"
  },
  {
    "text": "um so we've started a server and it gave us and it actually gives you",
    "start": "1380780",
    "end": "1386480"
  },
  {
    "text": "a server control object which we don't really need at this point we can tell it okay I'm going to deploy the model it",
    "start": "1386480",
    "end": "1393320"
  },
  {
    "text": "knows to deploy it into this cluster and we can ask will it work so",
    "start": "1393320",
    "end": "1401179"
  },
  {
    "text": "we're going to just take a look at this cat um let's see if we can get a prediction I",
    "start": "1401179",
    "end": "1406220"
  },
  {
    "text": "don't even care if it's right I'm just trying to show you that the workflow works and sure enough it comes back at the",
    "start": "1406220",
    "end": "1413000"
  },
  {
    "text": "prediction so you can see here we're just basically got a rest interface now with not very much code which is super",
    "start": "1413000",
    "end": "1419000"
  },
  {
    "text": "easy to deploy so easy you can even do it inside of the notebook um and it also we created a",
    "start": "1419000",
    "end": "1426320"
  },
  {
    "text": "an external route so people can obviously hit it from outside the cluster got the same results so that's good",
    "start": "1426320",
    "end": "1433280"
  },
  {
    "text": "um so that's a data science workflow I'm using",
    "start": "1433280",
    "end": "1438799"
  },
  {
    "text": "Jupiter and again I stress you can do this without Jupiter but um uh in action with Ray",
    "start": "1438799",
    "end": "1445700"
  },
  {
    "text": "and we can go back to",
    "start": "1445700",
    "end": "1450158"
  },
  {
    "text": "finish the talk so",
    "start": "1451220",
    "end": "1457280"
  },
  {
    "text": "I just showed you all the stuff so what why do I claim that this is like next Generation what is it like what's new",
    "start": "1457280",
    "end": "1462559"
  },
  {
    "text": "here um I guess one thing that's kind of new is that Rey is truly Cloud native it was",
    "start": "1462559",
    "end": "1468559"
  },
  {
    "text": "like you know invented and built and engineered like you know in a world that had kubernetes whereas",
    "start": "1468559",
    "end": "1475880"
  },
  {
    "text": "like you know just as contrast you know spark obviously began its life before any of these",
    "start": "1475880",
    "end": "1481520"
  },
  {
    "text": "cluster platforms existed um and you can if you ever deployed them and you know it kind of sometimes shows",
    "start": "1481520",
    "end": "1487700"
  },
  {
    "text": "so having something as truly engineered Cloud native I think makes a real",
    "start": "1487700",
    "end": "1493159"
  },
  {
    "text": "difference in terms of like how it works to deploy this stuff um the operator comes with again I guess in",
    "start": "1493159",
    "end": "1501080"
  },
  {
    "text": "contrast the spark you know spark has no official Community operator there's a",
    "start": "1501080",
    "end": "1506240"
  },
  {
    "text": "couple of third-party operators and uh with Ray it's part of the code",
    "start": "1506240",
    "end": "1512240"
  },
  {
    "text": "it's like entry um I guess the other thing you saw here is that I got myself my own cluster so like",
    "start": "1512240",
    "end": "1518659"
  },
  {
    "text": "you know it gives you an easy way to do self-service raise so your data scientists or your you know machine",
    "start": "1518659",
    "end": "1525799"
  },
  {
    "text": "learning Engineers anybody who they can use parallelism when they're working with this stuff can just get their own",
    "start": "1525799",
    "end": "1531679"
  },
  {
    "text": "right cluster you know on demand and kind of turn you know kill them on demand",
    "start": "1531679",
    "end": "1538039"
  },
  {
    "text": "um and I think the biggest one which I hope you saw through the demo",
    "start": "1538039",
    "end": "1544400"
  },
  {
    "text": "was that Ray allows like all kinds of tooling basically every",
    "start": "1544400",
    "end": "1550940"
  },
  {
    "text": "tool of consequence in the python machine learning ecosystem already talks to Rey and it not just",
    "start": "1550940",
    "end": "1558500"
  },
  {
    "text": "that but it can all talk to it at once so it's like you can mix and match all these tools right in the same code base",
    "start": "1558500",
    "end": "1564020"
  },
  {
    "text": "and I'll use the same Ray cluster so it's a unified scaling engine for data",
    "start": "1564020",
    "end": "1570740"
  },
  {
    "text": "science and what that also means is especially from like a ml Ops perspective it's a",
    "start": "1570740",
    "end": "1578179"
  },
  {
    "text": "simplified scaling process you can stand these things up and",
    "start": "1578179",
    "end": "1583220"
  },
  {
    "text": "um you know your your people can get parallelizable scale out just with a",
    "start": "1583220",
    "end": "1588980"
  },
  {
    "text": "single cluster even with all the tools mixed together so there were some community",
    "start": "1588980",
    "end": "1595580"
  },
  {
    "text": "communities along the way that really helped us I did the original public deployment of my prototypes using the",
    "start": "1595580",
    "end": "1602720"
  },
  {
    "text": "Massachusetts open Cloud and closely in partnership with that I",
    "start": "1602720",
    "end": "1609740"
  },
  {
    "text": "did all the specification for how to deploy it on the cluster using operate first which is a community that's",
    "start": "1609740",
    "end": "1616340"
  },
  {
    "text": "basically trying to extend the idea of writing software in the open to also actually operating software and services",
    "start": "1616340",
    "end": "1622880"
  },
  {
    "text": "fully in the open and what do I mean by that well one",
    "start": "1622880",
    "end": "1628340"
  },
  {
    "text": "thing I mean is that like when I wanted to deploy this and for the public it was actually a pull request and you could",
    "start": "1628340",
    "end": "1634039"
  },
  {
    "text": "you guys could go out today and see that pull request the actual cluster no longer exists but it exists for the",
    "start": "1634039",
    "end": "1640760"
  },
  {
    "text": "record um so this is this by the way is all using Argo",
    "start": "1640760",
    "end": "1646720"
  },
  {
    "text": "we've done a lot of collaboration with IBM research they have a project called",
    "start": "1648880",
    "end": "1654500"
  },
  {
    "text": "code flare which is also doing using a lot of the same design principles for",
    "start": "1654500",
    "end": "1660380"
  },
  {
    "text": "Ray in the cloud they're very much focused on Pi torch applications and",
    "start": "1660380",
    "end": "1665659"
  },
  {
    "text": "specifically for training large-scale deep learning Nets",
    "start": "1665659",
    "end": "1670720"
  },
  {
    "text": "and so like they're they're focused on that use case but we're doing a lot of",
    "start": "1670720",
    "end": "1676039"
  },
  {
    "text": "um collaboration as I showed you you can do a lot of small scale stuff too",
    "start": "1676039",
    "end": "1681440"
  },
  {
    "text": "so it doesn't just have to be that and if you're interested in learning more about that they gave a great talk at the",
    "start": "1681440",
    "end": "1688279"
  },
  {
    "text": "ray Summit um and you can go take a look at that",
    "start": "1688279",
    "end": "1694899"
  },
  {
    "text": "and I think you know and all those things we're looking at with IBM is uh Ray plus a cluster level Auto scaling so",
    "start": "1697580",
    "end": "1704900"
  },
  {
    "text": "not just scaling the pods but actually scaling the size of the cluster using Auto scalers so bringing an extra whole",
    "start": "1704900",
    "end": "1712220"
  },
  {
    "text": "extra compute nodes like if you're on like you know AWS or Google Cloud so in",
    "start": "1712220",
    "end": "1717440"
  },
  {
    "text": "this in this mode you array client submits a job object like into a job",
    "start": "1717440",
    "end": "1723260"
  },
  {
    "text": "queue um and the job queue actually talks to a cluster level Auto scaler says hey this",
    "start": "1723260",
    "end": "1729679"
  },
  {
    "text": "job coming in the queue they're going to want this much resources if the cluster isn't already big enough it can actually",
    "start": "1729679",
    "end": "1735919"
  },
  {
    "text": "invoke the you know Auto scaling ability of kubernetes and start bringing in actual more compute nodes more gpus",
    "start": "1735919",
    "end": "1742900"
  },
  {
    "text": "and when the job is done I can also spin the cluster back down so it's actually a nice you know",
    "start": "1742900",
    "end": "1749779"
  },
  {
    "text": "um cluster level Auto scaling experience and of course once it once it has the resources it needs it'll take the job",
    "start": "1749779",
    "end": "1756440"
  },
  {
    "text": "off the queue and it can run the cluster",
    "start": "1756440",
    "end": "1761379"
  },
  {
    "text": "so roadmaps stuff in green is stuff that's actually been completed like I said just got Ray 2.0 working so",
    "start": "1761600",
    "end": "1768620"
  },
  {
    "text": "we're excited about that we have our Ray images building using project Thoth",
    "start": "1768620",
    "end": "1774020"
  },
  {
    "text": "which is a AI supported build system which can actually look at things like",
    "start": "1774020",
    "end": "1780919"
  },
  {
    "text": "what kind of Target Hardware are you using and also examine a supply chain",
    "start": "1780919",
    "end": "1786320"
  },
  {
    "text": "and dependencies we've talked you know some other great talks earlier about that issue so Thoth is a kind of cool",
    "start": "1786320",
    "end": "1792740"
  },
  {
    "text": "thing for like actually maintaining images we actually just recently got the formal",
    "start": "1792740",
    "end": "1798679"
  },
  {
    "text": "integration of what I just showed you Upstream with the open data Hub code",
    "start": "1798679",
    "end": "1805820"
  },
  {
    "text": "base things that are in progress we're redeploying Ray on the Mass open Cloud",
    "start": "1805820",
    "end": "1811520"
  },
  {
    "text": "and we're also sort of transitioning from the old Mass open to what's now",
    "start": "1811520",
    "end": "1816559"
  },
  {
    "text": "being called the New England research Cloud Newark so neric is sort of like the descendant of Mass open",
    "start": "1816559",
    "end": "1823399"
  },
  {
    "text": "and that's actually being done by some student teams at Boston University so we're kind of cool",
    "start": "1823399",
    "end": "1829720"
  },
  {
    "text": "and we're integrating these ideas with the kubeflow notebook controller",
    "start": "1829720",
    "end": "1836899"
  },
  {
    "text": "and some stuff that we haven't quite got to yet is an actual Community operator in the openshift operator catalog and",
    "start": "1836899",
    "end": "1844100"
  },
  {
    "text": "also we're part of the way through exploring like rayon Edge deployments",
    "start": "1844100",
    "end": "1851020"
  },
  {
    "text": "so that's my talk thanks a lot for attending",
    "start": "1851020",
    "end": "1855820"
  },
  {
    "text": "brilliant thank you Eric um uh we don't have time for any questions from this one but Eric I'm",
    "start": "1860720",
    "end": "1866120"
  },
  {
    "text": "guessing you're around this week and maybe a bit later yeah I I'm here all week so um definitely reach out to me",
    "start": "1866120",
    "end": "1872120"
  },
  {
    "text": "yeah so go find Eric afterwards if you have questions um",
    "start": "1872120",
    "end": "1877658"
  }
]