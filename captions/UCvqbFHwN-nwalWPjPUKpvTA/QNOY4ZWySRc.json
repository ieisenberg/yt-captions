[
  {
    "text": "hey everybody sorry oh wait a minute i did not create the next section wait a minute i could",
    "start": "155680",
    "end": "163760"
  },
  {
    "text": "have sworn this is really weird",
    "start": "163760",
    "end": "171360"
  },
  {
    "text": "hello there simon here hello you know what i did i modified hold on",
    "start": "171360",
    "end": "178959"
  },
  {
    "text": "i put today's after last week's so hold on a minute i apologize i'm just",
    "start": "178959",
    "end": "185360"
  },
  {
    "text": "coming off another meeting that i was presenting and that's why i didn't get a chance to do this beforehand",
    "start": "185360",
    "end": "190560"
  },
  {
    "text": "hold on all right that was simon what is your",
    "start": "190560",
    "end": "197920"
  },
  {
    "text": "last name again like i apologize uh simon from sap okay",
    "start": "197920",
    "end": "205200"
  },
  {
    "text": "i'm gonna try to admit that do me a favor can you edit that um for me when you get a chance if not",
    "start": "205200",
    "end": "211360"
  },
  {
    "text": "i'll figure it out later i'll write it in the chat thank you very much tommy are you there",
    "start": "211360",
    "end": "218080"
  },
  {
    "text": "yo daniel hello hello uh ginger",
    "start": "218080",
    "end": "225280"
  },
  {
    "text": "good morning afternoon whatever time whatever good whatever yes i like that",
    "start": "225280",
    "end": "231519"
  },
  {
    "text": "all right hey jim hey all right amel hi hello uh scott",
    "start": "231519",
    "end": "241439"
  },
  {
    "text": "hello timmer hey hello hello uh",
    "start": "241439",
    "end": "247760"
  },
  {
    "text": "kristoff all right hello and uh who was it lance said he wasn't",
    "start": "247760",
    "end": "255280"
  },
  {
    "text": "gonna make it uh bye hello clemens",
    "start": "255280",
    "end": "261440"
  },
  {
    "text": "hello sorry for being three minutes later so you're good uh",
    "start": "261440",
    "end": "268880"
  },
  {
    "text": "thank you simon all right we have a i i really struggled to find",
    "start": "268880",
    "end": "274880"
  },
  {
    "text": "uh topics for today's call um in fact we have no prs to review um",
    "start": "274880",
    "end": "280639"
  },
  {
    "text": "i wasn't sure which issues to discuss so i'm looking for you guys to help fill it out or we can end really early one of the two",
    "start": "280639",
    "end": "287919"
  },
  {
    "text": "uh i like free time yeah i'm not talking about it i'm so hungry",
    "start": "287919",
    "end": "294400"
  },
  {
    "text": "oh my gosh all right",
    "start": "294880",
    "end": "299919"
  },
  {
    "text": "i see i need to go and create more work yes i think we all need to create more work for us",
    "start": "303680",
    "end": "308880"
  },
  {
    "text": "um mario either",
    "start": "308880",
    "end": "313120"
  },
  {
    "text": "mario matthew klaus yeah hi doug hello oh close",
    "start": "316160",
    "end": "326479"
  },
  {
    "text": "so clements are klaus picking on you for being german here how would you pronounce his name matthew",
    "start": "328080",
    "end": "334720"
  },
  {
    "text": "matthew okay thank you",
    "start": "334720",
    "end": "339840"
  },
  {
    "text": "which is french but okay okay well oh like he says he doesn't have sound oh",
    "start": "343919",
    "end": "349520"
  },
  {
    "text": "you're a thank you i think look at the chat thank you there we go okay we got him all right it's three after did i get",
    "start": "349520",
    "end": "355039"
  },
  {
    "text": "everybody oh slinky you there yep all right let's",
    "start": "355039",
    "end": "360639"
  },
  {
    "text": "go then see how quickly we can end this thing uh just a reminder if you have an ai um please look at when",
    "start": "360639",
    "end": "367360"
  },
  {
    "text": "you get a chance anything from the community that people want to bring up",
    "start": "367360",
    "end": "372880"
  },
  {
    "text": "no okay cool uh we do have an sdk call this week i last time i checked there wasn't",
    "start": "373520",
    "end": "380000"
  },
  {
    "text": "anything on the agenda let's just quickly check yeah we have nothing there so if you",
    "start": "380000",
    "end": "385520"
  },
  {
    "text": "want to do something um go ahead and add another section for today's agenda otherwise we may not have a call um",
    "start": "385520",
    "end": "395600"
  },
  {
    "text": "where's it going next oh yeah okay discovery interrupt next week call i don't think there's anything been updated in the discovery doc",
    "start": "395600",
    "end": "402639"
  },
  {
    "text": "so please if you are planning on doing something there help fill this out it's on my to-do list as well i think",
    "start": "402639",
    "end": "408960"
  },
  {
    "text": "the more important thing at this point in time is for everybody to actually start coding more than anything else the way i",
    "start": "408960",
    "end": "414479"
  },
  {
    "text": "kind of look at it is once you get the base infrastructure in place the rest of it should be easy hopefully",
    "start": "414479",
    "end": "419919"
  },
  {
    "text": "so please start coding that way you can find errors in the spec and try to get those ironed out before the proposed interop on november 2nd",
    "start": "419919",
    "end": "426080"
  },
  {
    "text": "which is only a couple weeks away all right and tim or anything from the workflow",
    "start": "426080",
    "end": "431680"
  },
  {
    "text": "side of things you want to mention um yeah we from the specification side",
    "start": "431680",
    "end": "436800"
  },
  {
    "text": "we had an agreement that we added um the use of open api for service supplication definitions",
    "start": "436800",
    "end": "444560"
  },
  {
    "text": "we also created a couple of training type of videos that uh mostly",
    "start": "444560",
    "end": "451199"
  },
  {
    "text": "for just a community but also we will use them for kubecon and just overall cubecom this year we",
    "start": "451199",
    "end": "456880"
  },
  {
    "text": "have a project booth and that doing that this intro in toronto is that what it's called",
    "start": "456880",
    "end": "463039"
  },
  {
    "text": "thing is just it's a pain so putting a lot of hours into that",
    "start": "463039",
    "end": "468560"
  },
  {
    "text": "so that's it okay any questions about the workflow stuff",
    "start": "468560",
    "end": "474479"
  },
  {
    "text": "okay just let you guys know um since he mentioned it we did not sign up for a booth um however i did sign this up",
    "start": "475280",
    "end": "483759"
  },
  {
    "text": "for i think it's called office hours um i have unless i missed it i have not seen",
    "start": "483759",
    "end": "488960"
  },
  {
    "text": "the sign up sheet for when the office hours might be when i get that i'll look for some",
    "start": "488960",
    "end": "494000"
  },
  {
    "text": "message on the slack channel because i suspect we probably i'm sorry go ahead sorry i can follow you to you that email oh",
    "start": "494000",
    "end": "500720"
  },
  {
    "text": "did i miss it yeah you should have gotten it you know i actually had a problem with this i haven't said anything to cncf but",
    "start": "500720",
    "end": "508560"
  },
  {
    "text": "last time we had to express interest and then once the deadline was over then",
    "start": "508560",
    "end": "514479"
  },
  {
    "text": "they opened the calendar it seems like this time as soon as you responded they opened the calendar to",
    "start": "514479",
    "end": "519919"
  },
  {
    "text": "you so there are a lot of times that were gone already by the time so i responded on",
    "start": "519919",
    "end": "526800"
  },
  {
    "text": "monday and a lot of wednesday was completely gone already",
    "start": "526800",
    "end": "532399"
  },
  {
    "text": "okay so what do you guys think yeah if you could for me the email obviously i missed it i've been getting so many emails from them i just i'm",
    "start": "532399",
    "end": "539200"
  },
  {
    "text": "starting to phase it out um so if you can send me the email i'll",
    "start": "539200",
    "end": "545600"
  },
  {
    "text": "look for some times and maybe just grab one and if it doesn't work we can always adjust but um i don't anticipate it being difficult",
    "start": "545600",
    "end": "552320"
  },
  {
    "text": "last time we had very few people show up uh so we just need somebody to you know warm bodies in there is probably all we",
    "start": "552320",
    "end": "557519"
  },
  {
    "text": "need i think most questions should be easy so all right",
    "start": "557519",
    "end": "562880"
  },
  {
    "text": "all right with that let's keep moving forward as i said i couldn't we have no prs to look at",
    "start": "562880",
    "end": "568240"
  },
  {
    "text": "issues i picked out just a couple i thought might be interesting let's pick on this one first since that",
    "start": "568240",
    "end": "573440"
  },
  {
    "text": "one got a little bit of traction over the last couple of days so just to refresh everybody's memory this one is really about",
    "start": "573440",
    "end": "579920"
  },
  {
    "text": "um the spec says basically uh if a property exists",
    "start": "579920",
    "end": "587279"
  },
  {
    "text": "it has to have a value leave that leave out extensions for a minute because there's a hole there but for all the",
    "start": "587279",
    "end": "592560"
  },
  {
    "text": "spec properties you can assume that if the property exists there will be a value there it will not be null at least that's what the spec kind of",
    "start": "592560",
    "end": "599760"
  },
  {
    "text": "leans towards but this issue is really about is that really what we want um and so let me pick",
    "start": "599760",
    "end": "605120"
  },
  {
    "text": "on jem and klaus since you guys commented the most recently on this to",
    "start": "605120",
    "end": "610240"
  },
  {
    "text": "get your opinion on what we might do with the situation if anything so jim you want to go first and give",
    "start": "610240",
    "end": "615760"
  },
  {
    "text": "your opinion on this not really but i will i guess um yeah i mean when as i read the spec it",
    "start": "615760",
    "end": "623760"
  },
  {
    "text": "doesn't it doesn't to me read like we support nulls",
    "start": "623760",
    "end": "629120"
  },
  {
    "text": "and i wouldn't expect to receive an attribute with no value i i think my bigger concern is if you do",
    "start": "629120",
    "end": "636399"
  },
  {
    "text": "um how do you are we meant to propagate that through all the different",
    "start": "636399",
    "end": "642560"
  },
  {
    "text": "transports yeah so if we were you know going to send a null",
    "start": "642560",
    "end": "647839"
  },
  {
    "text": "attribute over http what would we put in the header for that you know does it then make",
    "start": "647839",
    "end": "653680"
  },
  {
    "text": "everything more complex you know because it might expect the word null",
    "start": "653680",
    "end": "659680"
  },
  {
    "text": "in in a header attribute that was only expected to be i don't know a number um so i think it",
    "start": "659680",
    "end": "666720"
  },
  {
    "text": "it sort of is a bit of a deeper issue than than it might appear",
    "start": "666720",
    "end": "672079"
  },
  {
    "text": "but i would lean to not allowing or explicitly saying that if if an attribute is defined it should",
    "start": "672079",
    "end": "678320"
  },
  {
    "text": "have a value okay uh klaus did you want to chime in",
    "start": "678320",
    "end": "683440"
  },
  {
    "text": "here since you commented yes so basically i i agree to what jem",
    "start": "683440",
    "end": "688880"
  },
  {
    "text": "said so it just would like to emphasize that it's not about the empty value it's about the null value of",
    "start": "688880",
    "end": "694959"
  },
  {
    "text": "the discussion so uh i i realized that most of the standard context attributes",
    "start": "694959",
    "end": "700560"
  },
  {
    "text": "also state that they shouldn't be an empty value but that's i think a",
    "start": "700560",
    "end": "705680"
  },
  {
    "text": "different topic so um and i agree that that",
    "start": "705680",
    "end": "710880"
  },
  {
    "text": "transporting null explicitly would be then a challenge for each and every",
    "start": "710880",
    "end": "716160"
  },
  {
    "text": "protocol binding and format so that's also what i wrote here i",
    "start": "716160",
    "end": "723680"
  },
  {
    "text": "propose that we treat null as the same as not present but",
    "start": "723680",
    "end": "730800"
  },
  {
    "text": "i guess we would then have to make that more clear in the type system and then in some of the",
    "start": "730800",
    "end": "736720"
  },
  {
    "text": "formats like for json where you can then distinguish null and not present but",
    "start": "736720",
    "end": "742639"
  },
  {
    "text": "i mean undefined and now that this would mean the same for us",
    "start": "742639",
    "end": "748560"
  },
  {
    "text": "okay so just comments before i get to i just want to ask a clarifying question because jem correct me wrong but you",
    "start": "748560",
    "end": "754079"
  },
  {
    "text": "seem to indicate you wanted the spec to be more clear to say we do not support null but klaus you",
    "start": "754079",
    "end": "760720"
  },
  {
    "text": "start off saying you agree with jem but then you ended with we should allow both but be clear that",
    "start": "760720",
    "end": "767839"
  },
  {
    "text": "null is the same thing is not present well i i say that either we allow it and treat it as the same or we don't",
    "start": "767839",
    "end": "774720"
  },
  {
    "text": "allow it at all and um yeah okay got it okay pretty much the",
    "start": "774720",
    "end": "780639"
  },
  {
    "text": "same it's just a subtlety of what would be easier for the the",
    "start": "780639",
    "end": "786000"
  },
  {
    "text": "sdks and for handling of json in detail and here would also rely on on feedback from",
    "start": "786000",
    "end": "791519"
  },
  {
    "text": "the sdk implementers okay okay thank you for the clarification okay clemens your handles up",
    "start": "791519",
    "end": "797200"
  },
  {
    "text": "uh i would like to to support what claustro said um which or what he writes there because",
    "start": "797200",
    "end": "804800"
  },
  {
    "text": "i um uh null values i don't think we allow",
    "start": "804800",
    "end": "811279"
  },
  {
    "text": "them anywhere but if null appears then that's um some especially for json",
    "start": "811279",
    "end": "819120"
  },
  {
    "text": "some serializers serialize out null if the um object is not present and if",
    "start": "819120",
    "end": "825199"
  },
  {
    "text": "you have a um a strongly typed structure which you might have first for for a",
    "start": "825199",
    "end": "832320"
  },
  {
    "text": "cloud event then um you know you fill all the values that you want to go and fill in and",
    "start": "832320",
    "end": "837920"
  },
  {
    "text": "you omit the ones that you don't want to set and those that end up being null right",
    "start": "837920",
    "end": "843600"
  },
  {
    "text": "in java or in c sharp or other languages and if you happen to have happen to use",
    "start": "843600",
    "end": "849279"
  },
  {
    "text": "a serializer that wants to go and serialize all those values with null values really",
    "start": "849279",
    "end": "855440"
  },
  {
    "text": "on the wire then then that's what it is",
    "start": "855440",
    "end": "860480"
  },
  {
    "text": "right so so i i that's so i think that means then that there is no",
    "start": "860639",
    "end": "867040"
  },
  {
    "text": "value because nobody said it okay thank you scott your hands up next",
    "start": "867040",
    "end": "876240"
  },
  {
    "text": "what do folks think about trying to limit this to just the json binding because i think",
    "start": "876240",
    "end": "882800"
  },
  {
    "text": "trying to figure out what this means for http structured encoding is kind of weird",
    "start": "882800",
    "end": "889360"
  },
  {
    "text": "that's fine with me i mean this is something that i i think",
    "start": "892959",
    "end": "898720"
  },
  {
    "text": "this makes sense to define in the in the encodings i was going to say does",
    "start": "898720",
    "end": "904079"
  },
  {
    "text": "that mean are you implying scott that this isn't a core spec change but rather a transport change yeah it's a it's a change to the",
    "start": "904079",
    "end": "912160"
  },
  {
    "text": "http binding for only structured events it's it's a g",
    "start": "912160",
    "end": "918079"
  },
  {
    "text": "it's a json format change i would even argue oh yes sorry it's it's for json only",
    "start": "918079",
    "end": "925519"
  },
  {
    "text": "yeah which applies absolutely yeah if the value is not set then we would not map a header",
    "start": "925519",
    "end": "932240"
  },
  {
    "text": "but there's no expectation that the that the shape of that is lossy or sorry lossless if it goes from say",
    "start": "932240",
    "end": "939519"
  },
  {
    "text": "http structured to binary to structured again you don't you lose that information that",
    "start": "939519",
    "end": "944639"
  },
  {
    "text": "there was a nil yeah because the field wasn't there in the beginning so but is the case i just want to want to make",
    "start": "944639",
    "end": "952800"
  },
  {
    "text": "not too complicated for for the uh for the innocent is if i mean literally",
    "start": "952800",
    "end": "960079"
  },
  {
    "text": "if you code up a poco type right and you grab just grab a grab the serializer and the serializer",
    "start": "960079",
    "end": "967040"
  },
  {
    "text": "is that its default is to not emit the values but to to write them out onto onto the wire",
    "start": "967040",
    "end": "974639"
  },
  {
    "text": "as now then um [Music] then that's what you should that that's",
    "start": "974639",
    "end": "980240"
  },
  {
    "text": "the situation you're in and i'm",
    "start": "980240",
    "end": "984320"
  },
  {
    "text": "so i'm not sure we should make it really difficult for those folks who want to go and express a",
    "start": "986240",
    "end": "992720"
  },
  {
    "text": "cloud event as a strongly poke was probably a type poker type in their in their app um it should not be hard",
    "start": "992720",
    "end": "999199"
  },
  {
    "text": "for them to write compliant um cloud events either way yeah this this seems like",
    "start": "999199",
    "end": "1004720"
  },
  {
    "text": "iot might care about this i i'm currently um having a",
    "start": "1004720",
    "end": "1011519"
  },
  {
    "text": "side job helping a soccer professional soccer club their i.t stuff and then so i'm",
    "start": "1011519",
    "end": "1018720"
  },
  {
    "text": "dealing with developers who are just doing dynamics every day and that is um calibrating my",
    "start": "1018720",
    "end": "1025760"
  },
  {
    "text": "uh perspective i would say for how complicated it can be to deal",
    "start": "1025760",
    "end": "1031438"
  },
  {
    "text": "with jason so i'm i'm i'm a little um disillusioned i would say",
    "start": "1031439",
    "end": "1039839"
  },
  {
    "text": "okay well jim i know your hands up but i think my name was the first let me just ask my question it's kind of what i tried to say here in",
    "start": "1040000",
    "end": "1045520"
  },
  {
    "text": "my chat i i'm wondering well i understand from a straight geeky spec perspective it probably would",
    "start": "1045520",
    "end": "1050960"
  },
  {
    "text": "be good to add some clarifying text here and i think scott your suggestion of trying to limit this to just the",
    "start": "1050960",
    "end": "1056320"
  },
  {
    "text": "adjacent stuff probably makes sense and just a heads up i will be looking for a volunteer in a sec but",
    "start": "1056320",
    "end": "1061520"
  },
  {
    "text": "the reason i raised my hand was i'd like to better understand why this matters at all in the sense",
    "start": "1061520",
    "end": "1068160"
  },
  {
    "text": "that as the receiver of this what would someone do differently whether it's",
    "start": "1068160",
    "end": "1073679"
  },
  {
    "text": "present in the ce or not present in the ce i'm sorry present in the ce with a null versus not present at all",
    "start": "1073679",
    "end": "1080799"
  },
  {
    "text": "what would the what would the receiver do differently between those two cases well the go length one would not blow up",
    "start": "1080799",
    "end": "1088960"
  },
  {
    "text": "is the change because right now if you send it a nil value no quota is just nil onto a",
    "start": "1088960",
    "end": "1095280"
  },
  {
    "text": "string it doesn't know how to decode that that's custom wait uh",
    "start": "1095280",
    "end": "1101120"
  },
  {
    "text": "back up a little i'm confused what can you talk about an optional property",
    "start": "1101120",
    "end": "1106879"
  },
  {
    "text": "java would the golang john i'm sorry yeah the golden jason parsons will blow up with a nut with a null",
    "start": "1106960",
    "end": "1112960"
  },
  {
    "text": "yep it doesn't it doesn't work you can't uh turn a a struct that has a",
    "start": "1112960",
    "end": "1120960"
  },
  {
    "text": "string and you say inside the json version that i'm marshaling into this struct",
    "start": "1120960",
    "end": "1127440"
  },
  {
    "text": "it uh it doesn't know how to turn a the value null into a string it just blows up okay so you need this",
    "start": "1127440",
    "end": "1134559"
  },
  {
    "text": "on the go length side because you need to know whether you need to have specialized logic or treat this as an air conditioner reject",
    "start": "1134559",
    "end": "1140480"
  },
  {
    "text": "the cloud event right that's right and so because of this some of the test grid pieces don't work with",
    "start": "1140480",
    "end": "1146880"
  },
  {
    "text": "the go laying sdk okay that helps thank you scott okay jim",
    "start": "1146880",
    "end": "1152720"
  },
  {
    "text": "i think your hand is up next uh so for me i guess it's you know what's the expected behavior",
    "start": "1152720",
    "end": "1158480"
  },
  {
    "text": "of an sdk i mean if if an sdk receives format with a nil",
    "start": "1158480",
    "end": "1166160"
  },
  {
    "text": "and i say to it is this attribute present is it going to say yes or is it going to",
    "start": "1166160",
    "end": "1171520"
  },
  {
    "text": "say no i'm going to get a different answer if that was subsequently",
    "start": "1171520",
    "end": "1177039"
  },
  {
    "text": "i don't know marshalled you know as a binary through um http because that",
    "start": "1177039",
    "end": "1184240"
  },
  {
    "text": "header wouldn't be there so it just i think it's just going to lead to",
    "start": "1184240",
    "end": "1189360"
  },
  {
    "text": "you're going to have to provide guidance to sdk writers as to how they're expected to handle this",
    "start": "1189360",
    "end": "1196000"
  },
  {
    "text": "situation to get a consistent application um",
    "start": "1196000",
    "end": "1203120"
  },
  {
    "text": "uh semantic of sort of dealing with stuff okay scott your hands up hopefully to",
    "start": "1203120",
    "end": "1208960"
  },
  {
    "text": "answer that yeah so i think from my side integrators never asking",
    "start": "1208960",
    "end": "1215039"
  },
  {
    "text": "questions about the original payload they're asking questions about the the converted nominal form of the event",
    "start": "1215039",
    "end": "1221440"
  },
  {
    "text": "and so in that case i think it ends up being the same if if something was set to nil the",
    "start": "1221440",
    "end": "1226640"
  },
  {
    "text": "parser understands that that should just ignore it and not set that value",
    "start": "1226640",
    "end": "1231840"
  },
  {
    "text": "so i think you end up with the result the resulting exact same object after a marshalling",
    "start": "1231840",
    "end": "1240480"
  },
  {
    "text": "all right slinky your hands up yeah i'm just thinking that in the case of",
    "start": "1243200",
    "end": "1248400"
  },
  {
    "text": "uh the sdks i'm working on so both sdk rust and sdk java this",
    "start": "1248400",
    "end": "1254960"
  },
  {
    "text": "requires changing the main apis because then we because now the assumption is only",
    "start": "1254960",
    "end": "1260960"
  },
  {
    "text": "there is something there isn't anything and if anything is null or",
    "start": "1260960",
    "end": "1266640"
  },
  {
    "text": "not present it doesn't make any difference for the interface itself so this this will require",
    "start": "1266640",
    "end": "1273760"
  },
  {
    "text": "changing the stuff okay class i think your hand was up next uh",
    "start": "1273760",
    "end": "1279840"
  },
  {
    "text": "oh wait i'm sorry were you done slinky no no no if i can add something to be honest i i'm not even sure",
    "start": "1279840",
    "end": "1285679"
  },
  {
    "text": "how should i for example model this in a rust like i'm saying i'm saying one language",
    "start": "1285679",
    "end": "1291360"
  },
  {
    "text": "but i have i have no real i have no real idea how should i model this in rust i mean",
    "start": "1291360",
    "end": "1296400"
  },
  {
    "text": "uh what happens when it's not present and what should i say when it's surprising what should i say when it's",
    "start": "1296400",
    "end": "1301679"
  },
  {
    "text": "not so the language doesn't give me the ability to to model the null in fact",
    "start": "1301679",
    "end": "1307679"
  },
  {
    "text": "it just gives me the ability to or to say there's something or there isn't anything",
    "start": "1307679",
    "end": "1313360"
  },
  {
    "text": "so i think clemens point is that the martial arts sees no difference between",
    "start": "1313360",
    "end": "1319679"
  },
  {
    "text": "something that was not present and something that was null correct yeah",
    "start": "1319679",
    "end": "1326480"
  },
  {
    "text": "that's that's right if you so in the case in the martial art and also",
    "start": "1326480",
    "end": "1332960"
  },
  {
    "text": "someone who's looking at as a strongly typed object in in java or in c sharp or any",
    "start": "1332960",
    "end": "1340799"
  },
  {
    "text": "any type language that they see no difference between whether you sent now or or and meant to set null or whether",
    "start": "1340799",
    "end": "1347760"
  },
  {
    "text": "the object is absent it's it's semantically identical",
    "start": "1347760",
    "end": "1352799"
  },
  {
    "text": "okay i'm not sure who um i guess slinky that those answers are directed",
    "start": "1356320",
    "end": "1362480"
  },
  {
    "text": "towards you does that help or do you need more clarification no no i'm fine with that i'm just saying that",
    "start": "1362480",
    "end": "1368320"
  },
  {
    "text": "uh i i think it we shouldn't have this difference at the",
    "start": "1368320",
    "end": "1373760"
  },
  {
    "text": "apa level if you understood correctly the what's the discussion here where are the discussions going",
    "start": "1373760",
    "end": "1379440"
  },
  {
    "text": "okay uh klaus i think your hand was up next yeah so a remark if it's just about the",
    "start": "1379440",
    "end": "1387200"
  },
  {
    "text": "json format or also the main stack i think the main spec has this ce type",
    "start": "1387200",
    "end": "1392880"
  },
  {
    "text": "system and also mentions that there are canonical string representations",
    "start": "1392880",
    "end": "1399440"
  },
  {
    "text": "so maybe some clarification there that there is no representation of null in that type system could also have",
    "start": "1399440",
    "end": "1408480"
  },
  {
    "text": "okay um simon i think your hand was up next",
    "start": "1410159",
    "end": "1416080"
  },
  {
    "text": "yeah thanks so i just wanted to point out one use case where nile is actually different than being",
    "start": "1416080",
    "end": "1422240"
  },
  {
    "text": "undefined or and that's for example if you send patch requests or use the json merge patch",
    "start": "1422240",
    "end": "1429760"
  },
  {
    "text": "semantics and there now basically says if you know this property and you have a",
    "start": "1429760",
    "end": "1436080"
  },
  {
    "text": "value for that you need to remove it so it's in that case yeah",
    "start": "1436080",
    "end": "1442240"
  },
  {
    "text": "but we don't have that use case yeah yeah and remember from mime type nav",
    "start": "1442240",
    "end": "1447919"
  },
  {
    "text": "yeah this is only for the the envelope properties",
    "start": "1447919",
    "end": "1453360"
  },
  {
    "text": "not the body and so you could still do that same patch semantics inside the body payload",
    "start": "1453360",
    "end": "1459520"
  },
  {
    "text": "okay sorry then i missed this yeah you're right",
    "start": "1459520",
    "end": "1464080"
  },
  {
    "text": "okay i can't remember why i raised my hands all over it",
    "start": "1464880",
    "end": "1470320"
  },
  {
    "text": "for everybody to hand that out did did you or did you guys already talk or was there something else you i just wanted to know those hands are old",
    "start": "1471279",
    "end": "1477440"
  },
  {
    "text": "basically okay i'm going to assume they're old",
    "start": "1477440",
    "end": "1484320"
  },
  {
    "text": "okay so i think what i'm hearing is add language to",
    "start": "1484400",
    "end": "1493279"
  },
  {
    "text": "the json only spec well okay two things add language to the json spec to make it",
    "start": "1493279",
    "end": "1499200"
  },
  {
    "text": "clear that null and absent are the same klaus you were thinking that we may need",
    "start": "1499200",
    "end": "1504960"
  },
  {
    "text": "to add something to the main specs type system section um",
    "start": "1504960",
    "end": "1510720"
  },
  {
    "text": "but i think those are the scope of the possible changes we've talked about so far what do people think about those two",
    "start": "1510720",
    "end": "1518080"
  },
  {
    "text": "possible changes in particular i wanted to pick on jim to get your reaction",
    "start": "1518080",
    "end": "1525679"
  },
  {
    "text": "repeat what i'm having a reaction to what would would you be okay with us",
    "start": "1526960",
    "end": "1532080"
  },
  {
    "text": "changing the json spec to make it clear that absent is the same as null",
    "start": "1532080",
    "end": "1539278"
  },
  {
    "text": "so would somebody then change the json schema definition we have to reflect that",
    "start": "1540880",
    "end": "1546559"
  },
  {
    "text": "i'm not sure if that would be needed as well i don't know",
    "start": "1546559",
    "end": "1553840"
  },
  {
    "text": "let's see what the json schema looks like [Music]",
    "start": "1554320",
    "end": "1559470"
  },
  {
    "text": "um let's find one that's empty over here so at the bottom you need to go down to",
    "start": "1562320",
    "end": "1567440"
  },
  {
    "text": "the actual definitions so i can't see data death is the only thing that we",
    "start": "1567440",
    "end": "1575440"
  },
  {
    "text": "currently have to find that is allowed technically to be null",
    "start": "1575440",
    "end": "1580320"
  },
  {
    "text": "all the other um attributes don't allow now as it's currently",
    "start": "1582400",
    "end": "1588320"
  },
  {
    "text": "schematic if people are using this and schema jenning code chaining off it",
    "start": "1588320",
    "end": "1598720"
  },
  {
    "text": "so would it be horribly incorrect for us to say that this was just an oversight",
    "start": "1598720",
    "end": "1604080"
  },
  {
    "text": "and this is more like a typo change by because we need to add null to all these up here",
    "start": "1604080",
    "end": "1612080"
  },
  {
    "text": "i think it's yeah i mean that's what it would be it's just a mission um",
    "start": "1612080",
    "end": "1617679"
  },
  {
    "text": "but would would you be okay with that direction because you you have concerns well i mean it's just",
    "start": "1618799",
    "end": "1624720"
  },
  {
    "text": "if we want to allow stuff to be null then we should define that it's allowed to be known i guess that's all i'm saying okay okay",
    "start": "1624720",
    "end": "1630640"
  },
  {
    "text": "got it okay uh simon your hands up yeah so",
    "start": "1630640",
    "end": "1635760"
  },
  {
    "text": "um yeah i'm just getting into this but um i don't see so if we say now providing null",
    "start": "1635760",
    "end": "1642640"
  },
  {
    "text": "or is the same as not providing it the same then we could just um disallow",
    "start": "1642640",
    "end": "1649360"
  },
  {
    "text": "null at all and we would get the same behavior and don't have to change",
    "start": "1649360",
    "end": "1654960"
  },
  {
    "text": "our contract basically it's just adding that",
    "start": "1654960",
    "end": "1662559"
  },
  {
    "text": "it's already defined in the json schema that now is not allowed so basically it's just not worded out",
    "start": "1662559",
    "end": "1671360"
  },
  {
    "text": "okay scott i think you raised your hand for this yeah i think the issue that we've run into is",
    "start": "1671360",
    "end": "1676880"
  },
  {
    "text": "that if you if you write a database that's cloud events enabled",
    "start": "1676880",
    "end": "1682480"
  },
  {
    "text": "the database has no ability to omit null values it'll send them out as the",
    "start": "1682480",
    "end": "1688559"
  },
  {
    "text": "attribute",
    "start": "1688559",
    "end": "1691039"
  },
  {
    "text": "correct this this is intended for um dumb producers",
    "start": "1694840",
    "end": "1700559"
  },
  {
    "text": "and smart consumers i think okay so if the producer is dump ass and there's no",
    "start": "1700559",
    "end": "1707440"
  },
  {
    "text": "mapping being done it's directly exposed yeah it just directs serial serializes",
    "start": "1707440",
    "end": "1714559"
  },
  {
    "text": "the struct that it has and if it sees no value it it literally writes the null value",
    "start": "1714559",
    "end": "1721120"
  },
  {
    "text": "okay thanks for the context okay i remember now when i raised my hand and",
    "start": "1721120",
    "end": "1726159"
  },
  {
    "text": "i think it was because of what jem said earlier is there's no way for a consumer then",
    "start": "1726159",
    "end": "1731520"
  },
  {
    "text": "to distinguish between not present and present with null and",
    "start": "1731520",
    "end": "1739760"
  },
  {
    "text": "it gave me flashbacks to um to looking at query parameters in golang",
    "start": "1739760",
    "end": "1745919"
  },
  {
    "text": "right because you can use the methods um i think it's the query object to",
    "start": "1745919",
    "end": "1752559"
  },
  {
    "text": "actually just you know say give me the value and there's no way to distinguish between empty string versus the the uh the property wasn't",
    "start": "1752559",
    "end": "1760000"
  },
  {
    "text": "there at all you know probably not there at all it's always going to return every string if you want to actually find out where the query parameter is there but with no",
    "start": "1760000",
    "end": "1766320"
  },
  {
    "text": "value you have to actually go look at the the the map itself to do that and",
    "start": "1766320",
    "end": "1771600"
  },
  {
    "text": "it just got me wondering and i know scott you said that most people don't never really need to look at the",
    "start": "1771600",
    "end": "1777200"
  },
  {
    "text": "original cloud event itself they're looking at more what the semantic meaning is later on down the line i i wanted to",
    "start": "1777200",
    "end": "1782799"
  },
  {
    "text": "poke on that a little not to say that i think it's wrong but more to make sure we've thought about this because i am worried about",
    "start": "1782799",
    "end": "1788480"
  },
  {
    "text": "somebody coming along and saying you know what i my my sdk does not shield the user from",
    "start": "1788480",
    "end": "1793600"
  },
  {
    "text": "anything they basically show them what it was basically on the wire for the most part and i want to make sure that we're not",
    "start": "1793600",
    "end": "1799760"
  },
  {
    "text": "going to close off use cases where someone says you know what i really do need to know whether the whether the thing was present with null",
    "start": "1799760",
    "end": "1805919"
  },
  {
    "text": "versus not present at all for some reason i just i would be sure we're not missing some use case here",
    "start": "1805919",
    "end": "1812880"
  },
  {
    "text": "anybody think of any reason why someone actually might give a crap as to whether the property was there with null versus not at all",
    "start": "1817039",
    "end": "1824480"
  },
  {
    "text": "given that the guidance is that these attributes are meant for uh routing and uh maybe a tagging of",
    "start": "1824480",
    "end": "1831919"
  },
  {
    "text": "some sort of event and it's not the payload itself it's a i think you're probably doing it wrong",
    "start": "1831919",
    "end": "1838240"
  },
  {
    "text": "if you you're expecting the existence of some nil value especially because the spec says it must",
    "start": "1838240",
    "end": "1844399"
  },
  {
    "text": "be a min length one we're doing a special case here for",
    "start": "1844399",
    "end": "1849840"
  },
  {
    "text": "serialization between wire format and conical form okay i'm okay with that answer i just i",
    "start": "1849840",
    "end": "1857039"
  },
  {
    "text": "just get nervous but okay i i would prefer it if we kept them if we made them the same all right",
    "start": "1857039",
    "end": "1862240"
  },
  {
    "text": "i'm aligning with you guys just want to make sure we're not missing something okay i don't see any other hands up any",
    "start": "1862240",
    "end": "1870000"
  },
  {
    "text": "other points on this before i ask a very painful question",
    "start": "1870000",
    "end": "1875440"
  },
  {
    "text": "okay i want to do it doug i want to do it you answered my question thank you scott are you serious",
    "start": "1876799",
    "end": "1882480"
  },
  {
    "text": "i think yeah all right excellent thank you let's see if i can get back to the issue",
    "start": "1882480",
    "end": "1889279"
  },
  {
    "text": "doo doo doo",
    "start": "1889279",
    "end": "1893840"
  },
  {
    "text": "unless someone wants to fight me for it i doubt that",
    "start": "1898320",
    "end": "1903600"
  },
  {
    "text": "all right cool thank you sir i appreciate that okay um one",
    "start": "1903919",
    "end": "1911679"
  },
  {
    "text": "whoops i can't type okay um",
    "start": "1911679",
    "end": "1920480"
  },
  {
    "text": "yeah these were there mainly because they were there last week um the only reason i kind of kept this one",
    "start": "1920480",
    "end": "1925600"
  },
  {
    "text": "on whether epoch should be global or not is because of the conversation you and i had scott during last week's call where",
    "start": "1925600",
    "end": "1932159"
  },
  {
    "text": "we were talking about this and i was then we got into the the discussion point about how",
    "start": "1932159",
    "end": "1938799"
  },
  {
    "text": "uh if we made this change it's gonna really really make it hard when you start syncing up between",
    "start": "1938799",
    "end": "1944159"
  },
  {
    "text": "discovery endpoints and we then kind of landed i think in a",
    "start": "1944159",
    "end": "1949440"
  },
  {
    "text": "position of well maybe we shouldn't talk about that and leave that as either exercise for later",
    "start": "1949440",
    "end": "1954799"
  },
  {
    "text": "or it's someone else's problem but our initial job should be to focus on how to make a single individual discovery",
    "start": "1954799",
    "end": "1960799"
  },
  {
    "text": "endpoint work well okay and so what i want to do is to bring back",
    "start": "1960799",
    "end": "1965919"
  },
  {
    "text": "up this issue to say two things one is is that where everybody's head everybody else's head is at",
    "start": "1965919",
    "end": "1972000"
  },
  {
    "text": "and that for now we should focus on just a single discovery endpoint and if so",
    "start": "1972000",
    "end": "1979200"
  },
  {
    "text": "what do people think about this issue within that scope and just refresh everybody's memory this",
    "start": "1979200",
    "end": "1985600"
  },
  {
    "text": "issue is talking about how today in the spec the epoch value is basically",
    "start": "1985600",
    "end": "1990640"
  },
  {
    "text": "localized to each individual service there's no correlation whatsoever between epoch values across services",
    "start": "1990640",
    "end": "1997760"
  },
  {
    "text": "this is proposing to make that to to change that to make it so that every single time a",
    "start": "1997760",
    "end": "2003200"
  },
  {
    "text": "new epoch value needs to get assigned to a service it's globally incremented",
    "start": "2003200",
    "end": "2008240"
  },
  {
    "text": "or it's globally made a lot a larger value with that and what that enables is for",
    "start": "2008240",
    "end": "2013679"
  },
  {
    "text": "us to query the system and say give me all services that have been updated since a particular epoch value",
    "start": "2013679",
    "end": "2020080"
  },
  {
    "text": "okay and in order to do that you have to have something that spans all services okay so i guess the question for the",
    "start": "2020080",
    "end": "2025440"
  },
  {
    "text": "group that i have is two things one is are we okay with right now focusing just",
    "start": "2025440",
    "end": "2031120"
  },
  {
    "text": "on single discovery endpoint making that as good as possible and two",
    "start": "2031120",
    "end": "2037039"
  },
  {
    "text": "what do people think about this feature is it worth it anybody want to take care",
    "start": "2037039",
    "end": "2044159"
  },
  {
    "text": "i think you're asking for uh an atomic incrementer yes and i don't think we can do this",
    "start": "2044159",
    "end": "2051599"
  },
  {
    "text": "like i don't think you can mandate this that that is kind of what i'm asking yes",
    "start": "2051599",
    "end": "2058158"
  },
  {
    "text": "but but if you think about it you you almost have to do the exact same thing anyway on a per service level don't you",
    "start": "2058159",
    "end": "2064638"
  },
  {
    "text": "yes on a per service level you do um but only for the produce the services that you produce",
    "start": "2064639",
    "end": "2071440"
  },
  {
    "text": "that's the key difference elaborate on what you mean by produce so if you you are in charge of reporting",
    "start": "2071440",
    "end": "2078800"
  },
  {
    "text": "x y and z services those are yours but you also accept an aggregation from some other downstreams",
    "start": "2078800",
    "end": "2085118"
  },
  {
    "text": "or upstreams you don't control those epochs you control only x y and z",
    "start": "2085119",
    "end": "2093040"
  },
  {
    "text": "it's interesting you say it that way because the spec doesn't make a distinction between who owns a service it's the discovery",
    "start": "2093599",
    "end": "2100560"
  },
  {
    "text": "endpoint just has a list of services and my assumption has always been i may get",
    "start": "2100560",
    "end": "2105760"
  },
  {
    "text": "a put request for any of the services in there and then the discovery endpoint increments the epoch for whatever",
    "start": "2105760",
    "end": "2112000"
  },
  {
    "text": "service you targeted have no notion of ownership is what i'm trying to say",
    "start": "2112000",
    "end": "2118800"
  },
  {
    "text": "is that something we need to add or roll back the put until we actually need it",
    "start": "2118800",
    "end": "2127359"
  },
  {
    "text": "interesting comments you came out with me did you want to say something uh no it wasn't intentional",
    "start": "2128839",
    "end": "2135838"
  },
  {
    "text": "darn okay um if we roll back the put how do we standardize uploading",
    "start": "2136160",
    "end": "2144240"
  },
  {
    "text": "i don't think you do i think it's a poll model only",
    "start": "2144240",
    "end": "2148480"
  },
  {
    "text": "but even uh",
    "start": "2150880",
    "end": "2153519"
  },
  {
    "text": "but then we need to go through the the interop event to actually see if these are problems or not okay because okay i mean we could i",
    "start": "2157119",
    "end": "2163440"
  },
  {
    "text": "don't we don't want to resolve this today we definitely can wait um",
    "start": "2163440",
    "end": "2169040"
  },
  {
    "text": "i i am kind of confused though by your statement of a pull model only so even even bootstrapping a discovery",
    "start": "2170800",
    "end": "2178240"
  },
  {
    "text": "endpoint should not be done via something like a put to you",
    "start": "2178240",
    "end": "2183040"
  },
  {
    "text": "no i think you do it out of band from the ati",
    "start": "2183440",
    "end": "2188400"
  },
  {
    "text": "it's right it's like it's it'd be like the zoo keeper config that you're in charge of these",
    "start": "2188480",
    "end": "2194800"
  },
  {
    "text": "downstreams or upstream sorry i always get the up and down streams part wrong",
    "start": "2194800",
    "end": "2202079"
  },
  {
    "text": "i like that we don't have to define the api for the mechanics of all of how this works it could be",
    "start": "2204000",
    "end": "2209280"
  },
  {
    "text": "up to the implementer's discretion here",
    "start": "2209280",
    "end": "2214320"
  },
  {
    "text": "that is true like maybe therefore sorry go ahead maybe their bootstrapping",
    "start": "2214320",
    "end": "2220160"
  },
  {
    "text": "process is you know pulling from some central config or a database or",
    "start": "2220160",
    "end": "2225280"
  },
  {
    "text": "uh some other like service discovery endpoint or an api endpoint",
    "start": "2225280",
    "end": "2231920"
  },
  {
    "text": "so in the but it but you did mention earlier that the case of a discovery endpoint being sort of some sort of aggregator um and",
    "start": "2232079",
    "end": "2239920"
  },
  {
    "text": "to me whether that's a push or a pull model to get the information into the aggregator um does it not seem still useful",
    "start": "2239920",
    "end": "2248160"
  },
  {
    "text": "for somebody who's querying that discovery endpoint to say has anything changed since a particular time",
    "start": "2248160",
    "end": "2254960"
  },
  {
    "text": "uh to me the the discovery endpoints that push data to",
    "start": "2254960",
    "end": "2260160"
  },
  {
    "text": "downstream to their downstreams kind of breaks the eventing model because now the the discovery endpoints",
    "start": "2260160",
    "end": "2267599"
  },
  {
    "text": "understand the topology of this wacky system instead of each node knowing",
    "start": "2267599",
    "end": "2273680"
  },
  {
    "text": "where it wants to pull data from no i'm sorry it wasn't clear i wasn't thinking about the what's changed from a",
    "start": "2273680",
    "end": "2281119"
  },
  {
    "text": "sinking of discovery endpoint perspective i was actually thinking more about from a client perspective right i have a i have a an application",
    "start": "2281119",
    "end": "2288320"
  },
  {
    "text": "that presents some services to a user so they can maybe choose one right",
    "start": "2288320",
    "end": "2293599"
  },
  {
    "text": "and but periodically i need to query the discovery endpoint that i hooked up to to know whether i need to update my ui",
    "start": "2293599",
    "end": "2298960"
  },
  {
    "text": "right with a new list or you know call the list down because things vanished it would seem valuable to me as the",
    "start": "2298960",
    "end": "2304640"
  },
  {
    "text": "author of that ui to be able to query the backend system meaning the discovery endpoint to say what's changed since the last time i",
    "start": "2304640",
    "end": "2310079"
  },
  {
    "text": "talked to you yes you could do that but i don't think",
    "start": "2310079",
    "end": "2316240"
  },
  {
    "text": "that the i think that's a different value than this epoch that's probably",
    "start": "2316240",
    "end": "2321359"
  },
  {
    "text": "a single other epoch value for the the shape of your catalog",
    "start": "2321359",
    "end": "2326480"
  },
  {
    "text": "and and then that could be global for that service but it's just journaled entries that come",
    "start": "2326480",
    "end": "2332720"
  },
  {
    "text": "from other places okay and so if we had a if we had that other epoch value you're saying then it would be",
    "start": "2332720",
    "end": "2338320"
  },
  {
    "text": "an internal implementation choice to figure out how to map that global epoch value to",
    "start": "2338320",
    "end": "2343599"
  },
  {
    "text": "um which services have been updated since some value of that global evoc io yeah",
    "start": "2343599",
    "end": "2349839"
  },
  {
    "text": "some somebody else chime in here but i think we do this we could do this with the the cache key",
    "start": "2349839",
    "end": "2355200"
  },
  {
    "text": "that is a header a standard header for like cdns",
    "start": "2355200",
    "end": "2361040"
  },
  {
    "text": "interesting anybody else have an opinion on this",
    "start": "2362400",
    "end": "2369838"
  },
  {
    "text": "does anybody else see value in being able to say what's changed since a particular point in time",
    "start": "2371839",
    "end": "2379280"
  },
  {
    "text": "i do i just don't think it should be the the that epoch value we're talking about for the service property",
    "start": "2380800",
    "end": "2387599"
  },
  {
    "text": "okay fair enough okay simon your hands up yeah i agree with scott so um",
    "start": "2387599",
    "end": "2395119"
  },
  {
    "text": "i'm also at a similar problem implementing discovery and we decided to go with the cache con",
    "start": "2395119",
    "end": "2402160"
  },
  {
    "text": "basically an e-tag as a solution for finding out if content changed",
    "start": "2402160",
    "end": "2408480"
  },
  {
    "text": "and versioning uh if you need to have the really the details on it but we we",
    "start": "2408480",
    "end": "2414880"
  },
  {
    "text": "weren't considering having epochs and logical clocks for this because eventual consistency would be",
    "start": "2414880",
    "end": "2421839"
  },
  {
    "text": "okay for basically getting a synchronized state",
    "start": "2421839",
    "end": "2427599"
  },
  {
    "text": "okay all right i'll tell you what that that helps so thanks for the discussion uh scott and simon um let me go back and",
    "start": "2427599",
    "end": "2434079"
  },
  {
    "text": "rework this um because you made some good arguments there scott and i think you i think you convinced me that yeah separate value",
    "start": "2434079",
    "end": "2439680"
  },
  {
    "text": "would be probably uh better and easier to implement and maybe even safer",
    "start": "2439680",
    "end": "2444880"
  },
  {
    "text": "it's okay let me go back and rework that so thank you anybody else any comments on this before we move away",
    "start": "2444880",
    "end": "2453839"
  },
  {
    "text": "okay um the only other thing on the list i thought might be interesting was this",
    "start": "2454560",
    "end": "2459599"
  },
  {
    "text": "one because i don't know whether i don't remember where we landed on this one",
    "start": "2459599",
    "end": "2464720"
  },
  {
    "text": "does anybody remember what what if anything you want to do with this one here's the",
    "start": "2464720",
    "end": "2471359"
  },
  {
    "text": "the original thing because i had this vague recollection that we may have said it's out of scope for us um",
    "start": "2471359",
    "end": "2479680"
  },
  {
    "text": "i can help you refresh that yeah okay yeah please yeah that's correct so we thought that it's probably not the best fit right now and",
    "start": "2479680",
    "end": "2487760"
  },
  {
    "text": "we would we basically said that we'll revisit this concept in future but not not for now for sure okay would",
    "start": "2487760",
    "end": "2494960"
  },
  {
    "text": "you be going to add a comment to the issue stating that yeah sure i could cool",
    "start": "2494960",
    "end": "2500240"
  },
  {
    "text": "thank you very much uh scott your hands up i thought we also said that uh we would",
    "start": "2500240",
    "end": "2506240"
  },
  {
    "text": "consider it as an extension like an official extension yeah yep i agree with that as well but",
    "start": "2506240",
    "end": "2513280"
  },
  {
    "text": "but i think we need to address the concept of extensions in general before we uh think",
    "start": "2513280",
    "end": "2518720"
  },
  {
    "text": "or we classify anything as extension right so that entire topic is open right now",
    "start": "2518720",
    "end": "2524800"
  },
  {
    "text": "or is it not i don't know well when you say do can you elaborate a little on what you mean by um deal with extensions",
    "start": "2524800",
    "end": "2531760"
  },
  {
    "text": "so the extension fields we we still have to discuss on how do we want to handle the concept of extension fields within",
    "start": "2531760",
    "end": "2538240"
  },
  {
    "text": "the specification right now or do we already know that we already do okay that's something i know is not",
    "start": "2538240",
    "end": "2544560"
  },
  {
    "text": "affair yeah basically extensions appear as top level attributes oh okay cool and and they have their own",
    "start": "2544560",
    "end": "2552000"
  },
  {
    "text": "specifications yes that is true too hold on let me",
    "start": "2552000",
    "end": "2557119"
  },
  {
    "text": "refresh everybody's memory [Music]",
    "start": "2557119",
    "end": "2563280"
  },
  {
    "text": "those are the extensions that we have there's an extension section in the main spec yes uh",
    "start": "2563280",
    "end": "2570079"
  },
  {
    "text": "yeah the extensions in the main spec is the mechanism that we use to allow",
    "start": "2570079",
    "end": "2575599"
  },
  {
    "text": "those like well those extensions are the official sanctioned ones by the cloud events",
    "start": "2575599",
    "end": "2580960"
  },
  {
    "text": "providers and the intention is that those are interoperable you can also add your own but",
    "start": "2580960",
    "end": "2587440"
  },
  {
    "text": "make no uh expectation that anyone's gonna understand them that's right",
    "start": "2587440",
    "end": "2592960"
  },
  {
    "text": "but but just so specifically on this one sorry i wasn't paying attention for two minutes",
    "start": "2592960",
    "end": "2598400"
  },
  {
    "text": "um the the workbook spec is effectively mandating the same is",
    "start": "2598400",
    "end": "2605359"
  },
  {
    "text": "building on the same mechanism that http itself builds on um which is the authorization header and",
    "start": "2605359",
    "end": "2612400"
  },
  {
    "text": "is not trying to invent anything new um so so the authorization header is",
    "start": "2612400",
    "end": "2617760"
  },
  {
    "text": "defined in what 72 34 or 35 um and that's the exact mechanism",
    "start": "2617760",
    "end": "2626160"
  },
  {
    "text": "that we're that we're building on and then what the spec says what the spec says is that it's",
    "start": "2626160",
    "end": "2632240"
  },
  {
    "text": "assuming some uh some token-based scheme even oauth 2 which is",
    "start": "2632240",
    "end": "2639599"
  },
  {
    "text": "you know the most widely uh used framework that we all use for for web",
    "start": "2639599",
    "end": "2645280"
  },
  {
    "text": "for web authorization um makes makes no firm",
    "start": "2645280",
    "end": "2650800"
  },
  {
    "text": "has no firm mandate for using jots or not um but it leaves you open which of the",
    "start": "2650800",
    "end": "2657760"
  },
  {
    "text": "which format the token has because the token is really a an agreement between the issuer of the",
    "start": "2657760",
    "end": "2665280"
  },
  {
    "text": "token and the consumer of the token none of the parties which are sitting in the middle should care about the token",
    "start": "2665280",
    "end": "2672000"
  },
  {
    "text": "because the token is really opaque it doesn't matter whether it's a job or not",
    "start": "2672000",
    "end": "2678640"
  },
  {
    "text": "so if you look at or2 oauth2 will will have has extensions that tell you that",
    "start": "2682000",
    "end": "2688160"
  },
  {
    "text": "it's a it's a jwt but it doesn't ultimately for the relationship between",
    "start": "2688160",
    "end": "2694319"
  },
  {
    "text": "the issuer of the token and the consumer of the token um the the the party that's actually",
    "start": "2694319",
    "end": "2701280"
  },
  {
    "text": "putting the token into the into the message doesn't need to know what format that",
    "start": "2701280",
    "end": "2706720"
  },
  {
    "text": "token has",
    "start": "2706720",
    "end": "2709359"
  },
  {
    "text": "so help me out here clemens are you suggesting that we don't need to make a change and i i",
    "start": "2713599",
    "end": "2720400"
  },
  {
    "text": "think i think that the spec as it stands is is um we're not we're not",
    "start": "2720400",
    "end": "2726480"
  },
  {
    "text": "um inventing anything beyond um what http prescribes and i don't think",
    "start": "2726480",
    "end": "2732880"
  },
  {
    "text": "we should we should invent anything beyond what http prescribes it's 32 it's 30 to",
    "start": "2732880",
    "end": "2740960"
  },
  {
    "text": "72 35 rfc",
    "start": "2740960",
    "end": "2747760"
  },
  {
    "text": "so you're suggesting that we don't even need an extension",
    "start": "2747760",
    "end": "2753200"
  },
  {
    "text": "no because because that's the webhook spec is an extension of our",
    "start": "2753200",
    "end": "2759119"
  },
  {
    "text": "http binding and really defines how you deliver a a cloud event via post to a particular",
    "start": "2759119",
    "end": "2767200"
  },
  {
    "text": "endpoint so it basically is a constraint on the http binding http binding allows you to bind the cloud",
    "start": "2767200",
    "end": "2773280"
  },
  {
    "text": "event to any http message whether that's a request or a response and and doesn't care about which the what the",
    "start": "2773280",
    "end": "2780720"
  },
  {
    "text": "the method is for for web hooks we need to have something that's a bit more specific",
    "start": "2780720",
    "end": "2787119"
  },
  {
    "text": "for delivering events out in a push fashion the web hook spec is kind of um um sitting on top of that",
    "start": "2787119",
    "end": "2794400"
  },
  {
    "text": "so the it it spec that spec gets becau is specific about using post",
    "start": "2794400",
    "end": "2800800"
  },
  {
    "text": "and also referring to um a security mechanism but it's referring to the security",
    "start": "2800800",
    "end": "2807280"
  },
  {
    "text": "mechanism that is defined in um rfc 7235",
    "start": "2807280",
    "end": "2812960"
  },
  {
    "text": "and then also points to off to um as the as the framework around it but i don't",
    "start": "2812960",
    "end": "2818800"
  },
  {
    "text": "think we need to have anything special because that that that authorization header is not expressed in the cloud event",
    "start": "2818800",
    "end": "2824319"
  },
  {
    "text": "it's out of band okay sky your hands up i think the",
    "start": "2824319",
    "end": "2833040"
  },
  {
    "text": "thing that i'm considering is um it would be nice to have this you know go through some other cue of",
    "start": "2833040",
    "end": "2839520"
  },
  {
    "text": "some other protocol and then land it still uh with a proof of origin to some",
    "start": "2839520",
    "end": "2845760"
  },
  {
    "text": "uh target web hook so how do we make this lossless through uh protocol",
    "start": "2845760",
    "end": "2852240"
  },
  {
    "text": "transformations oh so you're you're you're asking for",
    "start": "2852240",
    "end": "2859119"
  },
  {
    "text": "something else you're asking for a um for a signature for the cloud event",
    "start": "2859119",
    "end": "2866000"
  },
  {
    "text": "right like the same concept and it gets projected into http as the standard mechanism but",
    "start": "2866000",
    "end": "2871280"
  },
  {
    "text": "it also can become part of the conical form of the cloud event so that we can convert it to something else so we've",
    "start": "2871280",
    "end": "2879359"
  },
  {
    "text": "we have discussed this um so we generally have discussed the the",
    "start": "2879359",
    "end": "2884880"
  },
  {
    "text": "problem of of both encryption and signature for cloud events and several of us here have been around",
    "start": "2884880",
    "end": "2892880"
  },
  {
    "text": "for a while and have seen the ship of soap sync over",
    "start": "2892880",
    "end": "2898000"
  },
  {
    "text": "w security um and the brutal complexity that it has and so we",
    "start": "2898000",
    "end": "2903760"
  },
  {
    "text": "have decided to scope out um in basically message level security both",
    "start": "2903760",
    "end": "2910960"
  },
  {
    "text": "signature and encryption from cloud events 1 0 that was a very conscious",
    "start": "2910960",
    "end": "2916400"
  },
  {
    "text": "uh um decision um because we exactly w star evolved",
    "start": "2916400",
    "end": "2923520"
  },
  {
    "text": "into c star because it it turns out that um uh you know so probably wasn't a",
    "start": "2923520",
    "end": "2931440"
  },
  {
    "text": "terrible idea until all the security stuff came around where people then started building you know",
    "start": "2931440",
    "end": "2938240"
  },
  {
    "text": "tls on top of w star and all it was terrible it was not the xml scott",
    "start": "2938240",
    "end": "2945359"
  },
  {
    "text": "so we've we've decided to punt on this the but you're you're already kind of",
    "start": "2945359",
    "end": "2951839"
  },
  {
    "text": "hinting at something that is um probably a good path and that is s mine where i can i can see",
    "start": "2951839",
    "end": "2960319"
  },
  {
    "text": "that were that we would create something that allows",
    "start": "2960319",
    "end": "2967599"
  },
  {
    "text": "um uh cloud events to be encoded with s mime and that that s mime packets can",
    "start": "2967599",
    "end": "2974319"
  },
  {
    "text": "then be routed so that's that's ultimately i think where that might land but we have we have decided not to",
    "start": "2974319",
    "end": "2980400"
  },
  {
    "text": "tackle that problem",
    "start": "2980400",
    "end": "2985760"
  },
  {
    "text": "okay uh manuel your hands up yeah i think we pretty much summarized",
    "start": "2985760",
    "end": "2991119"
  },
  {
    "text": "where we got to uh last week but i just wanted to raise that this was about really the signature or it has",
    "start": "2991119",
    "end": "2997760"
  },
  {
    "text": "evolved into this uh originally it was based really on the authorization header but i think the use case would",
    "start": "2997760",
    "end": "3005839"
  },
  {
    "text": "have been to um authenticate with somebody further down the line so if you communicate",
    "start": "3005839",
    "end": "3011599"
  },
  {
    "text": "through a web hook with an event gateway and that is that event is propagated to a consumer then the consumer has no",
    "start": "3011599",
    "end": "3019280"
  },
  {
    "text": "means to check whether the message the event the content had been",
    "start": "3019280",
    "end": "3024319"
  },
  {
    "text": "messed with so this is i think where it came from and uh i don't think that the authorization",
    "start": "3024319",
    "end": "3030319"
  },
  {
    "text": "header here helps s mime yes sig message signature maybe also but as fm would that",
    "start": "3030319",
    "end": "3037920"
  },
  {
    "text": "work across all transports of cloud events um if we",
    "start": "3037920",
    "end": "3044400"
  },
  {
    "text": "so if we decided that we wanted to create an s mine binding for um for cloud events",
    "start": "3044400",
    "end": "3052240"
  },
  {
    "text": "and if we then uh made effectively a a binary pass-through of the cloud event",
    "start": "3052240",
    "end": "3059920"
  },
  {
    "text": "um through the infrastructure i can see that working um but it's something that we",
    "start": "3059920",
    "end": "3066800"
  },
  {
    "text": "have to go and spec out so i'm i'm so as as things stand right now",
    "start": "3066800",
    "end": "3072000"
  },
  {
    "text": "the the cloud event would probably not translate",
    "start": "3072000",
    "end": "3076640"
  },
  {
    "text": "okay uh nice your hands up i i don't know it's probably kicking my ocds into action but",
    "start": "3078480",
    "end": "3085200"
  },
  {
    "text": "uh somehow does this feel wrong to have something as sensitive as authorization",
    "start": "3085200",
    "end": "3090800"
  },
  {
    "text": "part of the standard spec i mean even as an extension yeah",
    "start": "3090800",
    "end": "3096400"
  },
  {
    "text": "i don't know it might be just me though but that's that was the point that was the point it's like that we're referring to it um we're",
    "start": "3096400",
    "end": "3104559"
  },
  {
    "text": "referring to rfc 7235 effectively and say that's http's problem",
    "start": "3104559",
    "end": "3112319"
  },
  {
    "text": "and then we're referring to oauth and saying and saying yup how you acquire a token go go look go look here we don't want to",
    "start": "3112319",
    "end": "3119920"
  },
  {
    "text": "go and define anything related to security here but we want to go and",
    "start": "3119920",
    "end": "3125520"
  },
  {
    "text": "effectively just refer to existing mechanisms and then on the point of of",
    "start": "3125520",
    "end": "3131200"
  },
  {
    "text": "authenticating it down against against a downstream um [Music]",
    "start": "3131200",
    "end": "3137040"
  },
  {
    "text": "uh entity i hear that a lot",
    "start": "3137040",
    "end": "3142640"
  },
  {
    "text": "um like amongst plumbers i have to say i don't i never hear this from customers",
    "start": "3142720",
    "end": "3148079"
  },
  {
    "text": "but i i hear this a lot from amongst plumbers as a as a alleged scenario that needs to be",
    "start": "3148079",
    "end": "3153839"
  },
  {
    "text": "supported i'm not sure it's real because most of the messaging systems",
    "start": "3153839",
    "end": "3159440"
  },
  {
    "text": "that i that i'm seeing are um effectively surrounded by gatekeepers and if you're allowed to put",
    "start": "3159440",
    "end": "3166319"
  },
  {
    "text": "a message into the system then and and the system supports routing",
    "start": "3166319",
    "end": "3173200"
  },
  {
    "text": "then the system will effectively um you know route the message to whatever",
    "start": "3173200",
    "end": "3179119"
  },
  {
    "text": "the destination is and having having a system which kind of routes you four hops",
    "start": "3179119",
    "end": "3184800"
  },
  {
    "text": "and then the message kind of stops at one at one gate where it says ah the message can't pass here",
    "start": "3184800",
    "end": "3191920"
  },
  {
    "text": "i agree that that's a theoretical scenario i'm just missing the the real scenario for it",
    "start": "3191920",
    "end": "3198559"
  },
  {
    "text": "yeah but but i do also see the point what's caught brought in like for example what if you really want to propagate it feels like this down the",
    "start": "3200480",
    "end": "3207200"
  },
  {
    "text": "protocols like this is a very http specific thing but what if it's some amqp client is you know it needs this particular",
    "start": "3207200",
    "end": "3214960"
  },
  {
    "text": "value so do we really need to think into that direction that how do we propagate such sensitive fields across protocol",
    "start": "3214960",
    "end": "3221280"
  },
  {
    "text": "is it is it really part of our business what you can't do is you can't give an",
    "start": "3221280",
    "end": "3227839"
  },
  {
    "text": "intermediary the keys to the castle to a downstream uh entity because nothing nothing",
    "start": "3227839",
    "end": "3235680"
  },
  {
    "text": "prevents that intermediary for from then from then reusing your credentials",
    "start": "3235680",
    "end": "3242000"
  },
  {
    "text": "okay so i'm trying to figure out what's the next steps here i mean nothing or guidance",
    "start": "3244160",
    "end": "3251920"
  },
  {
    "text": "or what i think clements you're suggesting",
    "start": "3251920",
    "end": "3257200"
  },
  {
    "text": "nothing and close the issue right i believe this is solved well clemens",
    "start": "3257200",
    "end": "3263760"
  },
  {
    "text": "how do you deal with uh let's see you have these guards in the pipes and stuff but if you use cloud events to act as a",
    "start": "3263760",
    "end": "3270800"
  },
  {
    "text": "router and you don't use the gatekeeped cues anymore and there's a bunch of mixed messages on a single pipe",
    "start": "3270800",
    "end": "3279040"
  },
  {
    "text": "uh you don't you you lose the ability to gatekeep",
    "start": "3279040",
    "end": "3284079"
  },
  {
    "text": "what do you mean i like so maybe there's a particular consumer that",
    "start": "3284160",
    "end": "3290559"
  },
  {
    "text": "would like to verify that only the bank database sent you data",
    "start": "3290559",
    "end": "3297200"
  },
  {
    "text": "but it it can it can always do so it's not clear to me that that's a",
    "start": "3297200",
    "end": "3303440"
  },
  {
    "text": "problem that we need to solve as a in the general case so if you want to do this",
    "start": "3303440",
    "end": "3310000"
  },
  {
    "text": "since cloud events carries the data is always binary or can always be binary nothing stops",
    "start": "3310000",
    "end": "3317200"
  },
  {
    "text": "you from from making the event data such that it's s mine signed",
    "start": "3317200",
    "end": "3323920"
  },
  {
    "text": "so if you have the particular case that you really want to make sure that you have um that the data is",
    "start": "3323920",
    "end": "3331599"
  },
  {
    "text": "can be authenticated then nothing stops you from crafting the payload of the event such",
    "start": "3331599",
    "end": "3336799"
  },
  {
    "text": "that you can go and verify it on the other side okay i think that's what the advice should be then is we say",
    "start": "3336799",
    "end": "3343520"
  },
  {
    "text": "the cloud event envelope is not going to support this directly but it guidances stick it in the data",
    "start": "3343520",
    "end": "3348960"
  },
  {
    "text": "payload yeah i i because i think that's a the reason why we the the reason why we create the",
    "start": "3348960",
    "end": "3354640"
  },
  {
    "text": "the cloud events metadata or we have it is that because we want to",
    "start": "3354640",
    "end": "3360960"
  },
  {
    "text": "make it possible for for arbitrary well not arbitrary but cloud events supporting",
    "start": "3360960",
    "end": "3366319"
  },
  {
    "text": "um infrastructure using arbitrary protocols the ones that we support to have a shared understanding of what",
    "start": "3366319",
    "end": "3373599"
  },
  {
    "text": "to do with those events and how to dispatch them but it's so it's it's more",
    "start": "3373599",
    "end": "3379599"
  },
  {
    "text": "a spec that is helping you to help foster interoperability then",
    "start": "3379599",
    "end": "3386400"
  },
  {
    "text": "you know having the the originator of the event the producer of the event and the consumer of the event",
    "start": "3386400",
    "end": "3391680"
  },
  {
    "text": "um deal with their with their end-to-end relationship because the end-to-end relationship is ultimately about what",
    "start": "3391680",
    "end": "3396960"
  },
  {
    "text": "what's in that event in terms of payload and they can do whatever they want one of the print one of the principles",
    "start": "3396960",
    "end": "3403440"
  },
  {
    "text": "that you'll find in most messaging systems is that end-to-end security is generally only happening at the",
    "start": "3403440",
    "end": "3409440"
  },
  {
    "text": "endpoints with the broker having no business in in dealing with it at all it's end-to-end security is often something",
    "start": "3409440",
    "end": "3415839"
  },
  {
    "text": "that's that's only being done by the clients but the only server piece may be some shared key store",
    "start": "3415839",
    "end": "3421520"
  },
  {
    "text": "but that's it so i would i would follow the same principle here and say you know if you really want to",
    "start": "3421520",
    "end": "3427440"
  },
  {
    "text": "have end-to-end security including validation of who sent that event that's something that should be handled end-to-end which means it's it's handled",
    "start": "3427440",
    "end": "3434319"
  },
  {
    "text": "based on the payload",
    "start": "3434319",
    "end": "3437200"
  },
  {
    "text": "okay so we're almost out of time um i apologize it was you that was",
    "start": "3439760",
    "end": "3446000"
  },
  {
    "text": "suggesting you may be able to respond right yes okay do you feel like you understand",
    "start": "3446000",
    "end": "3451920"
  },
  {
    "text": "which way to respond because i kind of got the sense that maybe there's a pr here someplace to add additional guidance someplace maybe in the primer",
    "start": "3451920",
    "end": "3459200"
  },
  {
    "text": "or maybe one of our specs i don't know yeah do you feel like you have a i'm sorry go ahead comments i think the",
    "start": "3459200",
    "end": "3464960"
  },
  {
    "text": "primer is a good place for it okay and these do you have a good sense of where the group might be wanting to go with this that you could",
    "start": "3464960",
    "end": "3470880"
  },
  {
    "text": "take the next steps with it yeah i can raise or the primary sure that'd be great thank you very much",
    "start": "3470880",
    "end": "3476880"
  },
  {
    "text": "okay so with that uh where's my cursor there it is okay okay so",
    "start": "3476880",
    "end": "3482860"
  },
  {
    "text": "[Music] okay so we need to do that cool thank you very much um okay that was",
    "start": "3482860",
    "end": "3490240"
  },
  {
    "text": "i think that's it for the agenda i don't think we have time to discuss anything else um one last person last thing erica have",
    "start": "3490240",
    "end": "3496720"
  },
  {
    "text": "you michael are you still on the call i am yes excellent okay is there anybody",
    "start": "3496720",
    "end": "3503599"
  },
  {
    "text": "else that did not get for the attendee list",
    "start": "3503599",
    "end": "3507680"
  },
  {
    "text": "okay in the meantime uh does anybody have any topics for the sdk subgroup because i believe that the spec or the",
    "start": "3509359",
    "end": "3516160"
  },
  {
    "text": "agenda's still empty so i'm suggesting that we cancel the sdk",
    "start": "3516160",
    "end": "3521280"
  },
  {
    "text": "call immediately following this one is there any objection to that or does anybody have any topics",
    "start": "3521280",
    "end": "3527039"
  },
  {
    "text": "okay anything else people want to bring up for today's call for the main call",
    "start": "3529280",
    "end": "3534880"
  },
  {
    "text": "okay in that case i believe we are done thank you everybody we'll talk again next week and just render there is no",
    "start": "3536960",
    "end": "3543040"
  },
  {
    "text": "sdk call right after this we just canceled it all right so talk to you next week bye",
    "start": "3543040",
    "end": "3549838"
  },
  {
    "text": "everybody",
    "start": "3556839",
    "end": "3559839"
  },
  {
    "text": "you",
    "start": "3564559",
    "end": "3566640"
  }
]