[
  {
    "text": "hello and welcome to our talk today we're going to be talking about how we",
    "start": "320",
    "end": "5600"
  },
  {
    "text": "built a debab paved Road at inate my name is Anusha ragunathan and with me is",
    "start": "5600",
    "end": "12880"
  },
  {
    "text": "Kevin Downey and we're both software Engineers working at int on the",
    "start": "12880",
    "end": "18199"
  },
  {
    "text": "kubernetes based platform infrastructure today we'll start off",
    "start": "18199",
    "end": "24599"
  },
  {
    "text": "with giving a little bit of background of in it and our infrastructure at a glance",
    "start": "24599",
    "end": "30640"
  },
  {
    "text": "and get into the problem statement why are we even giving this stock what are",
    "start": "30640",
    "end": "35760"
  },
  {
    "text": "we solving why did we build a debuggability paveed road then we'll jump into how we built",
    "start": "35760",
    "end": "43440"
  },
  {
    "text": "paved Road using two Technical Solutions the first one would be interactive",
    "start": "43440",
    "end": "49760"
  },
  {
    "text": "debugging using ephemeral containers and the second one is the one click debugging that we built with Argo",
    "start": "49760",
    "end": "57199"
  },
  {
    "text": "workflows and finish it off with some takeaway for",
    "start": "57199",
    "end": "62399"
  },
  {
    "text": "you now into it is a fintech company that's built on an aid driven expert",
    "start": "63879",
    "end": "71240"
  },
  {
    "text": "platform and um just to give you an idea of the scale at which we run our",
    "start": "71240",
    "end": "76600"
  },
  {
    "text": "clusters we run about 315 plus and growing kubernetes clusters comprising",
    "start": "76600",
    "end": "83159"
  },
  {
    "text": "of 28,000 name spaces that serves about 2,500 Production Services and these are",
    "start": "83159",
    "end": "90640"
  },
  {
    "text": "just Production Services we have a whole bunch of preprod um Services as well and",
    "start": "90640",
    "end": "96159"
  },
  {
    "text": "all of this serves uh development community of 7,000 Engineers that comprise about",
    "start": "96159",
    "end": "102720"
  },
  {
    "text": "thousand development teams and to highlight our AI emphasis we actually do",
    "start": "102720",
    "end": "109560"
  },
  {
    "text": "about 40 million AI Ops inferences per day to help our customers with their",
    "start": "109560",
    "end": "115320"
  },
  {
    "text": "financial needs so what is the problem here",
    "start": "115320",
    "end": "121119"
  },
  {
    "text": "we have about 7,000 developers at interet that we serve and one thing is",
    "start": "121119",
    "end": "126799"
  },
  {
    "text": "common across all of their",
    "start": "126799",
    "end": "132200"
  },
  {
    "text": "applications bugs we've all been there we write code",
    "start": "132200",
    "end": "138840"
  },
  {
    "text": "pass a CI then we push it to prepr everything works and then we promote to",
    "start": "138840",
    "end": "144640"
  },
  {
    "text": "prod and things break yeah and these can",
    "start": "144640",
    "end": "150560"
  },
  {
    "text": "be very esoteric 5xx errors to transient timeouts and everything in between and",
    "start": "150560",
    "end": "157319"
  },
  {
    "text": "we all know debugging distributor systems is a pretty hard problem and",
    "start": "157319",
    "end": "163440"
  },
  {
    "text": "traditionally developers use metrics logs and distributed traces to observe",
    "start": "163440",
    "end": "170319"
  },
  {
    "text": "their systems and try and debug root cause and fix the issues but sometimes",
    "start": "170319",
    "end": "176360"
  },
  {
    "text": "this is not sufficient what if you need to actually do deeper debugging and",
    "start": "176360",
    "end": "181720"
  },
  {
    "text": "observability in your service environments what if you have to actually run a memory profiler what you",
    "start": "181720",
    "end": "188480"
  },
  {
    "text": "what if you have to capture your network packets what if you have to do some homegrown debugging tools that you need",
    "start": "188480",
    "end": "195159"
  },
  {
    "text": "to run or even just Network traces what do you do and in this in in this",
    "start": "195159",
    "end": "201120"
  },
  {
    "text": "scenario and any friction that you have during this deeper debugging experience",
    "start": "201120",
    "end": "208760"
  },
  {
    "text": "will increase your meantime to detect and resolve issues what that means is if",
    "start": "208760",
    "end": "214480"
  },
  {
    "text": "you're running business critical applications it's actually hurting your businesses and your end customers and we",
    "start": "214480",
    "end": "221519"
  },
  {
    "text": "noticed that there was friction in debugging and there were three main problems that we",
    "start": "221519",
    "end": "228439"
  },
  {
    "text": "encountered one debug tooling setup um all of us have our favorite set",
    "start": "228439",
    "end": "235400"
  },
  {
    "text": "of debugging tools or a Swiss army knife of tools depending on how passionate you are about",
    "start": "235400",
    "end": "241840"
  },
  {
    "text": "debugging and if you are a kubernetes user you actually can just exit into the",
    "start": "241840",
    "end": "248840"
  },
  {
    "text": "pod's main app container and start debugging what the issue is but most of",
    "start": "248840",
    "end": "254879"
  },
  {
    "text": "our organizations have a security best practice that hardens our app container",
    "start": "254879",
    "end": "260120"
  },
  {
    "text": "images so when you actually try and exit into the Pod you realize that you have",
    "start": "260120",
    "end": "265960"
  },
  {
    "text": "no shell you have no package manager you have no tooling with and no Java",
    "start": "265960",
    "end": "271840"
  },
  {
    "text": "specific no general purpose tools or any Java or golang or any other language",
    "start": "271840",
    "end": "277320"
  },
  {
    "text": "specific tooling available so there is the first friction that you will en that we encountered in our development",
    "start": "277320",
    "end": "284800"
  },
  {
    "text": "experience the second problem that we have at into it was abstraction and",
    "start": "284800",
    "end": "290240"
  },
  {
    "text": "debugging they don't quite go hand in hand very well unless you build the right tool chain around it um to give",
    "start": "290240",
    "end": "296800"
  },
  {
    "text": "you a bit of background we have we are building a platform abstraction layer",
    "start": "296800",
    "end": "302240"
  },
  {
    "text": "where the application developer just specifies their app intent and the app",
    "start": "302240",
    "end": "308199"
  },
  {
    "text": "intent doesn't have to be anything kubernetes related it's actually very abstracted to just specify what the",
    "start": "308199",
    "end": "314919"
  },
  {
    "text": "service is trying to do and the platform abstraction layer transforms this",
    "start": "314919",
    "end": "320759"
  },
  {
    "text": "application intent into the kubernetes manifests behind the scenes so in this",
    "start": "320759",
    "end": "327000"
  },
  {
    "text": "case it'll it'll put in the right HPA Ingress resource quas limits and whatnot",
    "start": "327000",
    "end": "333960"
  },
  {
    "text": "now this is great the application developer doesn't have to know the complexities of kubernetes the dicated",
    "start": "333960",
    "end": "340600"
  },
  {
    "text": "apis manage them and everything what could go wrong well when they are",
    "start": "340600",
    "end": "346639"
  },
  {
    "text": "debugging they have no idea how to proceed because everything is a black box before platform abstraction we have",
    "start": "346639",
    "end": "353240"
  },
  {
    "text": "our Savvy kubernetes um the service owner was also Savvy with kubernetes and had access to their names space so they",
    "start": "353240",
    "end": "360560"
  },
  {
    "text": "could actually use all of the standard kubernetes debugging tools to actually get in and figure out what's going on",
    "start": "360560",
    "end": "367919"
  },
  {
    "text": "but now after platform abstraction our guy here doesn't even have access to the name space and H doesn't have the right",
    "start": "367919",
    "end": "375000"
  },
  {
    "text": "skill set to do it so he's basically dealing with a big big black box so n",
    "start": "375000",
    "end": "380479"
  },
  {
    "text": "doesn't help much with debugging and the third problem we faced was a fragmented debugging expertise",
    "start": "380479",
    "end": "387680"
  },
  {
    "text": "that is across all of our service teams we noticed that people who were good at",
    "start": "387680",
    "end": "393160"
  },
  {
    "text": "debugging had one expert expertise that they would keep honing on and didn't",
    "start": "393160",
    "end": "398560"
  },
  {
    "text": "want to like sort of Branch off into others so for example we had a for a",
    "start": "398560",
    "end": "403919"
  },
  {
    "text": "developer who was a Java expert um or a network ninja in the team",
    "start": "403919",
    "end": "410919"
  },
  {
    "text": "and a Linux Yoda and they all of them were so good at their own debugging when",
    "start": "410919",
    "end": "416759"
  },
  {
    "text": "it comes to their subsystems but then sort of cross-pollinate and share their debugging",
    "start": "416759",
    "end": "423360"
  },
  {
    "text": "experiences so the side effect for this was depending on who is on call and who",
    "start": "423360",
    "end": "429280"
  },
  {
    "text": "is attending the incident uh Zoom call uh determine whether the resolution for",
    "start": "429280",
    "end": "436520"
  },
  {
    "text": "the issue was shorter or longer and also depended on what the issue was and this",
    "start": "436520",
    "end": "443479"
  },
  {
    "text": "was also something that was very inconsistent that we noticed across the teams so to solve",
    "start": "443479",
    "end": "450160"
  },
  {
    "text": "this we decided to build a deaga paved Road and typically developer paved roads",
    "start": "450160",
    "end": "456800"
  },
  {
    "text": "in any um IDP help developers with best practices and guidelines for building",
    "start": "456800",
    "end": "464599"
  },
  {
    "text": "deployment and and and stopped with that but we wanted to extend that to",
    "start": "464599",
    "end": "469720"
  },
  {
    "text": "debuggability as well so for this we used ephemeral containers where which",
    "start": "469720",
    "end": "475919"
  },
  {
    "text": "were perfect for interacting with the applic a and providing a debug",
    "start": "475919",
    "end": "482199"
  },
  {
    "text": "shell and Argo workflows for providing a sequence of steps for your debugging",
    "start": "482199",
    "end": "488400"
  },
  {
    "text": "workflows with this our goal was to actually provide the debugging superpowers for all of our service",
    "start": "488400",
    "end": "495120"
  },
  {
    "text": "Persona that way they can actually get to uh MTD and mttr much faster and this",
    "start": "495120",
    "end": "502919"
  },
  {
    "text": "accelerate a developer not just developer velocity but reduce mttr so that was the big Grand goal for for for",
    "start": "502919",
    "end": "509599"
  },
  {
    "text": "doing a debuggability PVE road now having said that let's jump",
    "start": "509599",
    "end": "515680"
  },
  {
    "text": "into interactive debugging using ephemeral containers so why would someone want to actually do interactive",
    "start": "515680",
    "end": "521760"
  },
  {
    "text": "debugging from what we've seen a service person as once they are done with their initial onboarding and day zero day one",
    "start": "521760",
    "end": "529519"
  },
  {
    "text": "activities sometimes they want to go in and check to see if they have connectivity access maybe to their",
    "start": "529519",
    "end": "535399"
  },
  {
    "text": "databases to any of their Cloud resources that they have from that that they need from their main application um",
    "start": "535399",
    "end": "543160"
  },
  {
    "text": "they might have some service to service connectivity checks or just maybe just do a DNS lookup or just simple or pretty",
    "start": "543160",
    "end": "550680"
  },
  {
    "text": "complicated it can be any spectrum of activities that they might want to do and launch using an interactive dubac",
    "start": "550680",
    "end": "557920"
  },
  {
    "text": "shell and we use ephemeral containers for that so ephemeral containers were introduced",
    "start": "557920",
    "end": "565200"
  },
  {
    "text": "in Upstream kubernetes in 123 as a beta feature and 125 as a ga feature now",
    "start": "565200",
    "end": "571760"
  },
  {
    "text": "prior to 123 a pod could have an init container and maybe a bunch of side card",
    "start": "571760",
    "end": "578000"
  },
  {
    "text": "containers and then the app container and if you had to actually attach another container you had to actually",
    "start": "578000",
    "end": "583959"
  },
  {
    "text": "redeploy your pod so it was actually immutable up up until that point but in",
    "start": "583959",
    "end": "590680"
  },
  {
    "text": "125 um G the the feature became GA and now a pot can actually have along with",
    "start": "590680",
    "end": "597600"
  },
  {
    "text": "an innit container and app container and other side cars you can actually have an ephemeral container now the ephemeral",
    "start": "597600",
    "end": "604640"
  },
  {
    "text": "container shares the same uh process name space IPC and uh UTS name space",
    "start": "604640",
    "end": "612720"
  },
  {
    "text": "along with the app container so you can actually launch an Emeral container and",
    "start": "612720",
    "end": "618240"
  },
  {
    "text": "Target a specific container in this case we are always targeting the app container and it's actually sharing the",
    "start": "618240",
    "end": "624560"
  },
  {
    "text": "same uh namespace like Linux namespace as the main application container and",
    "start": "624560",
    "end": "630560"
  },
  {
    "text": "since all the containers in the Pod already share the network name space feral containers are excellent and are",
    "start": "630560",
    "end": "637519"
  },
  {
    "text": "an excellent tool for introspection and debugging of your main app",
    "start": "637519",
    "end": "643279"
  },
  {
    "text": "container now the when we built the debuggability pav Road here is the UI",
    "start": "643279",
    "end": "649760"
  },
  {
    "text": "screenshot of what a service Persona um has to go through when they have to get",
    "start": "649760",
    "end": "655200"
  },
  {
    "text": "a debach shell all they have to do is pick their workspace and then pick the",
    "start": "655200",
    "end": "660320"
  },
  {
    "text": "region where which they are interested in and the name of the Pod and then they actually just press on the connect",
    "start": "660320",
    "end": "666880"
  },
  {
    "text": "button and then that launches a debug shell with that I'm going to quickly go",
    "start": "666880",
    "end": "672839"
  },
  {
    "text": "to a recorded",
    "start": "672839",
    "end": "677360"
  },
  {
    "text": "demo so in here just assume that this is the part that we just launched from the",
    "start": "679639",
    "end": "685600"
  },
  {
    "text": "UI and the entry point is just a simple",
    "start": "685600",
    "end": "690959"
  },
  {
    "text": "um it's just sleeping and then it has a little Rous probe so notice that the Alpine client",
    "start": "692279",
    "end": "700279"
  },
  {
    "text": "is actually um it's not ready yet so let's",
    "start": "700279",
    "end": "705800"
  },
  {
    "text": "describe the Pod and see what's going on and notice that the Readiness probe just fail because there is it's missing the",
    "start": "705800",
    "end": "713480"
  },
  {
    "text": "file that is being expected in this case it's a temp file so what I do here is is",
    "start": "713480",
    "end": "719160"
  },
  {
    "text": "basically launch this debug shell and we specify the Pod name and then the region",
    "start": "719160",
    "end": "727440"
  },
  {
    "text": "and notice that when I actually do a process listing the PID one is actually the target containers",
    "start": "727440",
    "end": "736160"
  },
  {
    "text": "PID and now I all I have to do is go into the proc file system and touch",
    "start": "736320",
    "end": "744440"
  },
  {
    "text": "the touch the touch a new file in the",
    "start": "744440",
    "end": "750880"
  },
  {
    "text": "in in in the root file system of the main container so now you will notice that um the Pod when I describe the the",
    "start": "752240",
    "end": "759600"
  },
  {
    "text": "Pod is now healthy Because the actual health check passed and the Readiness probe is fine and if you look at the",
    "start": "759600",
    "end": "766199"
  },
  {
    "text": "events the a debugger container got attached to the main app uh container",
    "start": "766199",
    "end": "773600"
  },
  {
    "text": "and uh it was actually we were I was able to add the attach a new file and",
    "start": "773600",
    "end": "780800"
  },
  {
    "text": "then go from there so um hopefully that was was clear as far as what we",
    "start": "780800",
    "end": "787680"
  },
  {
    "text": "were trying to do in short what we were trying to do is just being able to access the process name space as well as",
    "start": "787680",
    "end": "793560"
  },
  {
    "text": "the ma the root FS of the main uh uh container and was we were able to fix",
    "start": "793560",
    "end": "799560"
  },
  {
    "text": "the health check issues that we were having the read Rus probe started working and then now this this uh pod is",
    "start": "799560",
    "end": "807240"
  },
  {
    "text": "actually working fine it was a very simple uh demo but it shows the power of um launching the epimeral container",
    "start": "807240",
    "end": "817360"
  },
  {
    "text": "so what what did we do behind the scenes I'll just walk through quickly on the",
    "start": "817560",
    "end": "822800"
  },
  {
    "text": "workflow so the application developer was able to request the debug shell on the target names space region and pod",
    "start": "822800",
    "end": "831040"
  },
  {
    "text": "and uh that that's what we were able to uh see using the UI screenshot and um",
    "start": "831040",
    "end": "836839"
  },
  {
    "text": "this Nam space resides on a remote uh cluster and uh it's running the app container and uh we have a multicluster",
    "start": "836839",
    "end": "844120"
  },
  {
    "text": "orchestrator it's basically our main Fleet management software which is in-house and the multicluster",
    "start": "844120",
    "end": "849839"
  },
  {
    "text": "orchestrator receives this U request from the user and uh once that user",
    "start": "849839",
    "end": "857399"
  },
  {
    "text": "request is authenticated we have obtain the cook config of the target name space",
    "start": "857399",
    "end": "863320"
  },
  {
    "text": "and U we use uh client go to actually launch an ephemeral container in the Target part there is actually kubernetes",
    "start": "863320",
    "end": "870279"
  },
  {
    "text": "API CU API for launching of an ephemeral container in the Target pod and uh once",
    "start": "870279",
    "end": "878199"
  },
  {
    "text": "that launch happens we actually establish a speedy connection between",
    "start": "878199",
    "end": "883959"
  },
  {
    "text": "the Emeral container and our orchestrator there is a bidirectional streaming server that we run as part of",
    "start": "883959",
    "end": "890920"
  },
  {
    "text": "the orchestrator and um then uh we H upgrade",
    "start": "890920",
    "end": "897120"
  },
  {
    "text": "the connection to the client to a websocket so the HTTP client connection now gets upgraded to a web socket and a",
    "start": "897120",
    "end": "903959"
  },
  {
    "text": "debug shell is presented to the end user so from then on all of the bites are",
    "start": "903959",
    "end": "910000"
  },
  {
    "text": "basically streamed back and forth between the debug shell and the ephemeral container using the multicluster",
    "start": "910000",
    "end": "917480"
  },
  {
    "text": "orchestrator um so what's in the debug container image the standard tools that you would expect uh shell package",
    "start": "917519",
    "end": "923759"
  },
  {
    "text": "manager uh standard Linux debugging tools language specific tools cloud provider tools network storage and",
    "start": "923759",
    "end": "930240"
  },
  {
    "text": "anything miscellaneous um and uh one one call out is about the",
    "start": "930240",
    "end": "935800"
  },
  {
    "text": "security so we're um actually talking about debug shell to a production",
    "start": "935800",
    "end": "942399"
  },
  {
    "text": "environment which is super powerful so be super careful in how you are implementing it in your own environments",
    "start": "942399",
    "end": "949560"
  },
  {
    "text": "and what we've done at a very high level is we would terminate the session if uh there is inactivity for 30 minutes it's",
    "start": "949560",
    "end": "956480"
  },
  {
    "text": "a rback control so only part our users to your service Nam space are given",
    "start": "956480",
    "end": "961959"
  },
  {
    "text": "access to this and we have Opa policies to make sure that these debu containers",
    "start": "961959",
    "end": "967319"
  },
  {
    "text": "are um go through the same rigorous uh security policies as our main app",
    "start": "967319",
    "end": "972720"
  },
  {
    "text": "containers there is an audit record for every stream um of that the user",
    "start": "972720",
    "end": "977959"
  },
  {
    "text": "launches as part of debach shell and then we also want to be very careful about throttling the limits so we have",
    "start": "977959",
    "end": "984880"
  },
  {
    "text": "per user per pod um number of duac connections per cluster and across",
    "start": "984880",
    "end": "989920"
  },
  {
    "text": "cluster so we have limits on all of this so that we don't over and uh over any of the components that I showed in the",
    "start": "989920",
    "end": "996600"
  },
  {
    "text": "previous page um having said that I'd like to hand it over to Kevin to talk",
    "start": "996600",
    "end": "1001680"
  },
  {
    "text": "about Argo workflows thank you anusa I'm Kevin we",
    "start": "1001680",
    "end": "1007440"
  },
  {
    "text": "work on the same team on the platform group um what you just saw was a power",
    "start": "1007440",
    "end": "1013319"
  },
  {
    "text": "user flow but what if we know exactly what we want to do and we want to get",
    "start": "1013319",
    "end": "1018480"
  },
  {
    "text": "give the most simplifi simplified use usage for this for our developers to use",
    "start": "1018480",
    "end": "1024600"
  },
  {
    "text": "uh so this is what you'll see um firstly I just describe what Argo is if you're not familiar it's a cncf graduated",
    "start": "1024600",
    "end": "1032360"
  },
  {
    "text": "project it's open source and very active Community uh you'll can go and read a",
    "start": "1032360",
    "end": "1037400"
  },
  {
    "text": "lot about this but it's a it's a kubernetes native workflow Engine with dag and has a bunch of UI if you want",
    "start": "1037400",
    "end": "1043839"
  },
  {
    "text": "and and a bunch of tools um and this is a very simple workflow",
    "start": "1043839",
    "end": "1049320"
  },
  {
    "text": "example uh if you want to learn more about workflows just go ahead and stop by our booth in the Showcase we have a",
    "start": "1049320",
    "end": "1055520"
  },
  {
    "text": "lot of demos there so here's the problem we know",
    "start": "1055520",
    "end": "1061440"
  },
  {
    "text": "developers will need to debug their running code and I don't",
    "start": "1061440",
    "end": "1066720"
  },
  {
    "text": "want this person to come and do this magic dusting of their print statements",
    "start": "1066720",
    "end": "1072280"
  },
  {
    "text": "uh we want to give them a little more uh context if they can but we really need",
    "start": "1072280",
    "end": "1077360"
  },
  {
    "text": "to know what their spefic specific techniques are what language they use the framework they use we do also want",
    "start": "1077360",
    "end": "1084159"
  },
  {
    "text": "to preserve as much as possible the context when debugging so that's the context meaning the structures of the",
    "start": "1084159",
    "end": "1090840"
  },
  {
    "text": "application maybe the running code references and uh we want to be able to",
    "start": "1090840",
    "end": "1096159"
  },
  {
    "text": "give them right tools or access in this case if it's a extratic platform that can be a",
    "start": "1096159",
    "end": "1103080"
  },
  {
    "text": "challenge uh looking specifically at will we do it into it you can see that",
    "start": "1103080",
    "end": "1108919"
  },
  {
    "text": "into primarily runs with Java spring Services though we support multiple",
    "start": "1108919",
    "end": "1113960"
  },
  {
    "text": "languages here this is a basic snapshot of what we kind of are running in our",
    "start": "1113960",
    "end": "1119600"
  },
  {
    "text": "templates but for debugging tools we support just a subset currently but we have plans for future so right now we",
    "start": "1119600",
    "end": "1125520"
  },
  {
    "text": "support the Java framework and goang and soon Python and any others that are on",
    "start": "1125520",
    "end": "1131440"
  },
  {
    "text": "this list we have a lot of growing uh interest in other languages",
    "start": "1131440",
    "end": "1137320"
  },
  {
    "text": "Frameworks and I want to describe what I meant by application context so in this case we",
    "start": "1137320",
    "end": "1144120"
  },
  {
    "text": "have a lot of java Java developers that are using spring boot what do we want to do for these people do we want them to",
    "start": "1144120",
    "end": "1151200"
  },
  {
    "text": "use a very specific module I mean this is already given to them honestly with",
    "start": "1151200",
    "end": "1157280"
  },
  {
    "text": "the templates that we give and vent to them but this is called a sping boot actuator module it's a sub project of",
    "start": "1157280",
    "end": "1164840"
  },
  {
    "text": "spring boot it gives you a lot of little uh very nice uh management endpoints if",
    "start": "1164840",
    "end": "1171480"
  },
  {
    "text": "you and you can enable or disable them as you choose in our case when we are on our",
    "start": "1171480",
    "end": "1179360"
  },
  {
    "text": "debug pave road we want them to enable these specific endpoints these are",
    "start": "1179360",
    "end": "1184840"
  },
  {
    "text": "Prometheus that's a metrics inpoint uh there's a thread dump and a heap dump for the Java those are two specific",
    "start": "1184840",
    "end": "1191080"
  },
  {
    "text": "things that we think that they will need in the future and here's sort of example",
    "start": "1191080",
    "end": "1197039"
  },
  {
    "text": "of if you wanted to dynamically enable this given this application debug yaml",
    "start": "1197039",
    "end": "1203039"
  },
  {
    "text": "is there you can just have a spring active profiles environment variable and",
    "start": "1203039",
    "end": "1208320"
  },
  {
    "text": "append your debug profile there and voila you will have expose for them",
    "start": "1208320",
    "end": "1216600"
  },
  {
    "text": "these endpoints they're actually at a a different port than their normal application but uh this is what we want",
    "start": "1216600",
    "end": "1223360"
  },
  {
    "text": "when we want to preserve their application contexts this will give us access to red dumps and Heap dumps and",
    "start": "1223360",
    "end": "1231159"
  },
  {
    "text": "have it within their code base and and their structures and stuff so there's",
    "start": "1231159",
    "end": "1236919"
  },
  {
    "text": "here's an example of a Java developer that actually wants to take a thread or Heap dump but question is why would they",
    "start": "1236919",
    "end": "1244280"
  },
  {
    "text": "even want to well let's say they're noticing some trouble in their pod one",
    "start": "1244280",
    "end": "1249559"
  },
  {
    "text": "of their environments there could be any one of these reasons a 100% CPU any memory leak a garbage collection events",
    "start": "1249559",
    "end": "1257039"
  },
  {
    "text": "de deadlocks performance bottlenecks so what we really want them to do is not concentrate on being the",
    "start": "1257039",
    "end": "1263720"
  },
  {
    "text": "guru or finding the guru we want them to go ahead and just take an action here which is take a thread dump or a heap",
    "start": "1263720",
    "end": "1271520"
  },
  {
    "text": "dump based on whatever these reasons would be um then we also want them to be",
    "start": "1271520",
    "end": "1277200"
  },
  {
    "text": "able to have access to those thread dumps or Heap dumps and use their own tooling to analyze that and then this is",
    "start": "1277200",
    "end": "1285720"
  },
  {
    "text": "sort of a workflow of how this would work so we have a little screen of the UI um",
    "start": "1285720",
    "end": "1292559"
  },
  {
    "text": "that's presented to the developers very similar to what you saw previously but they will choose one action and one host",
    "start": "1292559",
    "end": "1300520"
  },
  {
    "text": "which is a pod and they will trigger this to to to run and with this I will",
    "start": "1300520",
    "end": "1307039"
  },
  {
    "text": "show you a demo do you have",
    "start": "1307039",
    "end": "1313720"
  },
  {
    "text": "the okay",
    "start": "1314640",
    "end": "1320039"
  },
  {
    "text": "sorry that so this is a screen view of picking my qal",
    "start": "1322520",
    "end": "1328320"
  },
  {
    "text": "environment it is now running this may take a few seconds to",
    "start": "1328320",
    "end": "1337520"
  },
  {
    "text": "run as soon as it's ready we'll get a download button and the user can then download",
    "start": "1339480",
    "end": "1347000"
  },
  {
    "text": "this outter fact which is a thread dump in this case and download it to their local",
    "start": "1347000",
    "end": "1355520"
  },
  {
    "text": "machine and in our case in this developer case we have a bu tool that we use quite often it's called y crash we",
    "start": "1355520",
    "end": "1363600"
  },
  {
    "text": "just want them to use this we don't want them to try to analyze it themselves or",
    "start": "1363600",
    "end": "1368679"
  },
  {
    "text": "read some tea leaves we want them to go ahead and upload this to their favorite",
    "start": "1368679",
    "end": "1375120"
  },
  {
    "text": "tool if you can find the file and uh give it a",
    "start": "1375640",
    "end": "1381919"
  },
  {
    "text": "second there you",
    "start": "1381919",
    "end": "1385278"
  },
  {
    "text": "go and as fast as that you've basically uploaded your thread dump here here it",
    "start": "1387200",
    "end": "1393279"
  },
  {
    "text": "shows that there was 75 total threads 39 were waiting timed waiting runnable ones",
    "start": "1393279",
    "end": "1400640"
  },
  {
    "text": "uh just scroll down and we'll see that you know there was specific you know stack traces for each um this is very",
    "start": "1400640",
    "end": "1408400"
  },
  {
    "text": "useful if you want to have like if you know you have some Deadlocks that you have some CPU issues you'll see them",
    "start": "1408400",
    "end": "1415640"
  },
  {
    "text": "here your tool will be able to help you out in a lot and uh and use these flame",
    "start": "1415640",
    "end": "1421559"
  },
  {
    "text": "graphs as well to to figure out where the process is getting stuck",
    "start": "1421559",
    "end": "1428720"
  },
  {
    "text": "perhaps cool where's the uh",
    "start": "1429240",
    "end": "1435159"
  },
  {
    "text": "function okay so let's just go walk through what what",
    "start": "1435159",
    "end": "1441720"
  },
  {
    "text": "it was that we just did and we saw here's the backend view of of what's",
    "start": "1441720",
    "end": "1447400"
  },
  {
    "text": "Happening um when that user clicked the button in the UI we actually launched a",
    "start": "1447400",
    "end": "1454120"
  },
  {
    "text": "workflow in our debug system Nam space in the cluster and that workflow",
    "start": "1454120",
    "end": "1460159"
  },
  {
    "text": "launched a pod that went ahead and did take a thread dump by hitting the",
    "start": "1460159",
    "end": "1467320"
  },
  {
    "text": "actuator SL thread dump endpoint and it took that uh payload response and",
    "start": "1467320",
    "end": "1473840"
  },
  {
    "text": "actually did sanitize it a bit and uploaded it to S3 and the S3 then became available as a",
    "start": "1473840",
    "end": "1480720"
  },
  {
    "text": "download so the the package is sanitized and upload to S3 for download later but",
    "start": "1480720",
    "end": "1486799"
  },
  {
    "text": "at each step you what you didn't see was we also do auditing we audit so the by using the workflow we were able to audit",
    "start": "1486799",
    "end": "1492880"
  },
  {
    "text": "and capture audit events of who's doing what and uh how long each take process",
    "start": "1492880",
    "end": "1498120"
  },
  {
    "text": "took and other metrics as well uh one important thing about thread dumps and Heap dumps um we need to secur",
    "start": "1498120",
    "end": "1506240"
  },
  {
    "text": "these for sure there there's certain data that we don't want to escape and we these are also impactful endpoints so",
    "start": "1506240",
    "end": "1514240"
  },
  {
    "text": "one thing we do as I mentioned we audit at every step uh downloads and uploads are",
    "start": "1514240",
    "end": "1521080"
  },
  {
    "text": "restricted by arbac and IM we use the IDS pre-signed URLs when",
    "start": "1521080",
    "end": "1527799"
  },
  {
    "text": "generating those download URLs so we capture encapsulate the expiry time and",
    "start": "1527799",
    "end": "1533880"
  },
  {
    "text": "finally we use a network policy here you can kind of see example of our Network policy where we only allow the debug",
    "start": "1533880",
    "end": "1541600"
  },
  {
    "text": "name space or other specific privileg name space to take the debugging actions that we want and uh given this that we",
    "start": "1541600",
    "end": "1549440"
  },
  {
    "text": "are allowed to give this user a very clean flow we don't need the guru to",
    "start": "1549440",
    "end": "1554919"
  },
  {
    "text": "come and do it uh the every team member has access to this UI and can take a",
    "start": "1554919",
    "end": "1561039"
  },
  {
    "text": "quick thread or Heap Dum and with this I'll get you to the",
    "start": "1561039",
    "end": "1567519"
  },
  {
    "text": "takeaways so the takeaways here are we want to enhance developer velocity and improve their mttr by",
    "start": "1568520",
    "end": "1576240"
  },
  {
    "text": "reducing the friction to taking debugging actions uh we also want to automate and",
    "start": "1576240",
    "end": "1581399"
  },
  {
    "text": "secure these ACC secure the access to the sense of data that may be generated",
    "start": "1581399",
    "end": "1586919"
  },
  {
    "text": "from these deug processes we also want to facilitate seamless collaboration among developers",
    "start": "1586919",
    "end": "1592880"
  },
  {
    "text": "through auditable downloadable autofacts and as mentioned before we want to democratize the tooling as much",
    "start": "1592880",
    "end": "1600000"
  },
  {
    "text": "as possible we don't want to have silos of information or experts just do one",
    "start": "1600000",
    "end": "1606120"
  },
  {
    "text": "thing uh if the whole team can do it it's that's that's great for",
    "start": "1606120",
    "end": "1612120"
  },
  {
    "text": "everybody and that's it this is our uh closing slide there this is into its",
    "start": "1612120",
    "end": "1618080"
  },
  {
    "text": "open source projects as mentioned you we are in the the Showcase we have a few of",
    "start": "1618080",
    "end": "1624000"
  },
  {
    "text": "these and Argo as well is one of our projects thank",
    "start": "1624000",
    "end": "1629470"
  },
  {
    "text": "[Applause]",
    "start": "1629470",
    "end": "1637120"
  },
  {
    "text": "you right great presentation um you showed",
    "start": "1637120",
    "end": "1643320"
  },
  {
    "text": "the debug in flow for Java do you also support goang and python under one click",
    "start": "1643320",
    "end": "1648480"
  },
  {
    "text": "workflow yeah I mentioned go Ling so goang we have profiling and like go",
    "start": "1648480",
    "end": "1653520"
  },
  {
    "text": "routine dump it doesn't show as nicely as a thread dump but yes we and we're working the similar for python python",
    "start": "1653520",
    "end": "1660200"
  },
  {
    "text": "will have sort of a a core dump or sort of a profiling as",
    "start": "1660200",
    "end": "1667200"
  },
  {
    "text": "well hi Anusha can you switch to the multi um cluster orchestrator",
    "start": "1667360",
    "end": "1674559"
  },
  {
    "text": "slide yeah uh in this slide um how much",
    "start": "1676519",
    "end": "1683000"
  },
  {
    "text": "of the things uh come from the community and which ones you had to",
    "start": "1683000",
    "end": "1688880"
  },
  {
    "text": "build good question so of course the client go package is from the community",
    "start": "1688880",
    "end": "1697799"
  },
  {
    "text": "um but the basically we built it we vended it and built it as part of the orchestrator and uh as far as",
    "start": "1697799",
    "end": "1705720"
  },
  {
    "text": "inspiration to do through the whole bidirectional streaming we actually looked at coup cutle exec and coup cutle",
    "start": "1705720",
    "end": "1714159"
  },
  {
    "text": "attach and uh since Upstream is using Speedy we said okay let's not go explore",
    "start": "1714159",
    "end": "1720440"
  },
  {
    "text": "something else we'll just use Speedy as well okay so from a from a technical um",
    "start": "1720440",
    "end": "1726120"
  },
  {
    "text": "um leveraging the community point of view we basically did just those two things like the from a from a from a",
    "start": "1726120",
    "end": "1732519"
  },
  {
    "text": "design point of view we looked at cop cutle for this okay um and then this was client go okay so we are trying to do",
    "start": "1732519",
    "end": "1739200"
  },
  {
    "text": "websocket next so okay yes I noticed that there was an issue in up stream for websocket yeah thank you this this was",
    "start": "1739200",
    "end": "1746240"
  },
  {
    "text": "great presentation awesome thank you thank you add one",
    "start": "1746240",
    "end": "1752039"
  },
  {
    "text": "more thanks for the presentation uh for the Java did you guys try the remote debugging where you could see the",
    "start": "1752039",
    "end": "1758720"
  },
  {
    "text": "variables values or line by line that so um that's something that uh we want to",
    "start": "1758720",
    "end": "1764919"
  },
  {
    "text": "explore basically uh live code debugging um with your favorite IDE and being able",
    "start": "1764919",
    "end": "1771600"
  },
  {
    "text": "to connect to prod um we haven't uh it's on our road",
    "start": "1771600",
    "end": "1776919"
  },
  {
    "text": "map uh could you expand a little bit on your auditing story so how in where in",
    "start": "1779200",
    "end": "1784600"
  },
  {
    "text": "this diagram you're tracking user actions in the debug containers yeah it's actually part of",
    "start": "1784600",
    "end": "1791039"
  },
  {
    "text": "the multicluster orchestrator so that's kind of a control plane we have and we have auditing API so we we would push",
    "start": "1791039",
    "end": "1798039"
  },
  {
    "text": "data to this auditing API that's that's mainly what we do so every request and",
    "start": "1798039",
    "end": "1804480"
  },
  {
    "text": "response that the multicluster orchestrator is handling is always an",
    "start": "1804480",
    "end": "1811640"
  },
  {
    "text": "audit record turns it turns into an audit record with very specific details about the",
    "start": "1811640",
    "end": "1817399"
  },
  {
    "text": "request the user part IP things like that and then we also audit like specifically for the deuell we audit the",
    "start": "1817399",
    "end": "1825360"
  },
  {
    "text": "entire uh text string that's going back and forth yeah thank",
    "start": "1825360",
    "end": "1831880"
  },
  {
    "text": "you for sorry for femoral containers is you're effectively uh it's as if you're",
    "start": "1831880",
    "end": "1839120"
  },
  {
    "text": "running on the app containers so JPS works jcmd all the Java tools as if you were",
    "start": "1839120",
    "end": "1846279"
  },
  {
    "text": "right there and had them so for J yes yes so so few things to note so for Java",
    "start": "1846279",
    "end": "1852799"
  },
  {
    "text": "what we've done is we don't even want the as much as possible since Java is our P0 language we want to make sure",
    "start": "1852799",
    "end": "1860519"
  },
  {
    "text": "that any debugging actions that are Java specific that are Java specific we want to be doing one click debugging that",
    "start": "1860519",
    "end": "1867440"
  },
  {
    "text": "that Kevin said so that's why we like even though we have jmap and jstack that",
    "start": "1867440",
    "end": "1872600"
  },
  {
    "text": "we can bundle and ask them to go exec then take a heap dump then upload it and",
    "start": "1872600",
    "end": "1877880"
  },
  {
    "text": "share it we wanted to automate that entire pipeline um having said",
    "start": "1877880",
    "end": "1883960"
  },
  {
    "text": "that the ephemeral container the debug container that gets uh launched shares",
    "start": "1883960",
    "end": "1889639"
  },
  {
    "text": "the PID name space that's the most important thing and then um you can also",
    "start": "1889639",
    "end": "1896600"
  },
  {
    "text": "like the in My Demo I don't know if it was clear I was actually looking at proc one PID one and then root thereby I was",
    "start": "1896600",
    "end": "1904039"
  },
  {
    "text": "able to access the app containers root FS okay and then I can basically have",
    "start": "1904039",
    "end": "1909600"
  },
  {
    "text": "redite I was able to touch a new file that way I so it's basically read right",
    "start": "1909600",
    "end": "1914880"
  },
  {
    "text": "mounted um you can also when you launch a debug container have extra privileges",
    "start": "1914880",
    "end": "1921840"
  },
  {
    "text": "as part of the container so you can introduce things like capsus admin which will let you do things like NS enter",
    "start": "1921840",
    "end": "1928480"
  },
  {
    "text": "into your main uh app container or you can also do uh P tray cap P Trace which",
    "start": "1928480",
    "end": "1934200"
  },
  {
    "text": "will end up like you can do dig and other network spoofing if you really wanted to so you can you can decide what",
    "start": "1934200",
    "end": "1942720"
  },
  {
    "text": "your debug like your ephemeral container will uh",
    "start": "1942720",
    "end": "1947760"
  },
  {
    "text": "how you want to launch it we've started with a not like we'll take whatever default we're not doing any extra um",
    "start": "1947760",
    "end": "1955200"
  },
  {
    "text": "Linux or you know security privileges but just taking what is what is there and then as the use cases evolve we",
    "start": "1955200",
    "end": "1962320"
  },
  {
    "text": "might in introduce these more privileged debug containers fantastic thank",
    "start": "1962320",
    "end": "1970080"
  },
  {
    "text": "you uh you had mentioned um sanitizing the output um and you touched on it for",
    "start": "1971440",
    "end": "1977039"
  },
  {
    "text": "or a stack Trace one I guess how why would you have to sanitize a stack trace and two do you act actually sanitize the",
    "start": "1977039",
    "end": "1985000"
  },
  {
    "text": "Heap dump as well I think we do mostly through the Heap dump it goes through the same sanitized step but we may pick",
    "start": "1985000",
    "end": "1992399"
  },
  {
    "text": "different tooling for each mainly the Heap dump there is an open source tool",
    "start": "1992399",
    "end": "1997519"
  },
  {
    "text": "that we've modified internally to capture a little bit more of our piis",
    "start": "1997519",
    "end": "2003039"
  },
  {
    "text": "for Heap dumps for sure so that's the sanitization uh for he dumps For Thread",
    "start": "2003039",
    "end": "2008399"
  },
  {
    "text": "dumps um I'm not sure exactly what would come out in a thread dump but maybe not",
    "start": "2008399",
    "end": "2013639"
  },
  {
    "text": "as much pii but if there is any sensitive data there the team can actually uh tweak that and put their own",
    "start": "2013639",
    "end": "2020360"
  },
  {
    "text": "tool in there on the Heap dump even after you're sanitized Stu they can still use traditional Java memory",
    "start": "2020360",
    "end": "2025799"
  },
  {
    "text": "analyzers they can still even with a heap dump tool you're saying yeah even",
    "start": "2025799",
    "end": "2031120"
  },
  {
    "text": "after it's been mod santized the just want to C like all of these download",
    "start": "2031120",
    "end": "2036440"
  },
  {
    "text": "uploads are only good for 24 hours and we audit them so yeah we don't want",
    "start": "2036440",
    "end": "2041880"
  },
  {
    "text": "those data Escape but if they do it would be sort of um mitigated away so uh",
    "start": "2041880",
    "end": "2049679"
  },
  {
    "text": "yeah there's no way to protect 100% I'm sure sure so so by sanitizing we mean that we mask out or any personal uh",
    "start": "2049679",
    "end": "2056919"
  },
  {
    "text": "personally identifiable information pii data were so that we're not leaking any",
    "start": "2056919",
    "end": "2062320"
  },
  {
    "text": "customer information okay but it doesn't corrupt the D it doesn't corrupt the thank you",
    "start": "2062320",
    "end": "2068839"
  },
  {
    "text": "how does the uh like the debug session and ephemeral environment handle like if",
    "start": "2068839",
    "end": "2074158"
  },
  {
    "text": "you have an app with frequent deployments like does it is it a deployment does it kill your debug session that you're in the middle of",
    "start": "2074159",
    "end": "2081320"
  },
  {
    "text": "well yeah so good question so the ephemeral container is ephemeral in",
    "start": "2081320",
    "end": "2086358"
  },
  {
    "text": "nature so if your main app container dies your ephemeral container dies uh any pod restarts redeployments will kill",
    "start": "2086359",
    "end": "2093839"
  },
  {
    "text": "the session but the idea is let's say you're on an incident call and you are you you know you've come to the point",
    "start": "2093839",
    "end": "2100560"
  },
  {
    "text": "where you know this is the bad pod and you're attaching that session for just specifically for a short time window",
    "start": "2100560",
    "end": "2107800"
  },
  {
    "text": "you're it's not a longlasting container that is expected to be there and a restart will basically you won't have",
    "start": "2107800",
    "end": "2114520"
  },
  {
    "text": "any more Emeral container okay",
    "start": "2114520",
    "end": "2119359"
  },
  {
    "text": "thanks thank you",
    "start": "2120400",
    "end": "2123720"
  },
  {
    "text": "everyone",
    "start": "2125800",
    "end": "2128800"
  }
]