[
  {
    "text": "hello can you hear me good um hello everybody",
    "start": "240",
    "end": "6480"
  },
  {
    "text": "welcome to implementing antipatterns aka implementing cross namespace resource",
    "start": "6480",
    "end": "12719"
  },
  {
    "text": "ownership in kubernetes uh i hope i won't disappoint you uh with",
    "start": "12719",
    "end": "18720"
  },
  {
    "text": "this talk i know i will disappoint you with it being an anti-pattern and",
    "start": "18720",
    "end": "24320"
  },
  {
    "text": "implementing it in kubernetes and i hope you're not too",
    "start": "24320",
    "end": "30800"
  },
  {
    "text": "disappointed by that so what we're gonna do today um i'm gonna talk a bit about",
    "start": "30800",
    "end": "38320"
  },
  {
    "text": "some kubernetes concepts um that we usually use and we usually see like",
    "start": "38320",
    "end": "44719"
  },
  {
    "text": "ownerships dependents name spaces garbage collection and",
    "start": "44719",
    "end": "51760"
  },
  {
    "text": "the rules that goes with those concepts then we're gonna try to exploit and",
    "start": "51760",
    "end": "59199"
  },
  {
    "text": "implement and do some forbidden stuff that",
    "start": "59199",
    "end": "64559"
  },
  {
    "text": "kubernetes disallow in the documentation and in the implementation as well",
    "start": "64559",
    "end": "70560"
  },
  {
    "text": "and we're gonna try to do so without smashing through the walls of kubernetes",
    "start": "70560",
    "end": "76000"
  },
  {
    "text": "implementation we're gonna bend the rules so it fits our uh our",
    "start": "76000",
    "end": "81360"
  },
  {
    "text": "very anti-patternish wrong use case that i'm gonna in the meantime try to",
    "start": "81360",
    "end": "87200"
  },
  {
    "text": "justify to you uh so you see that we really need to do something like that so",
    "start": "87200",
    "end": "92479"
  },
  {
    "text": "first things first uh who am i uh my name is tom tofal i work as a software engineer at red hat",
    "start": "92479",
    "end": "99520"
  },
  {
    "text": "at the office of the cto in emerging technologies what do we do we research",
    "start": "99520",
    "end": "105360"
  },
  {
    "text": "various topics we experiment with managed services open services and things like that and one of",
    "start": "105360",
    "end": "113200"
  },
  {
    "text": "our key area of focus is analytics",
    "start": "113200",
    "end": "118399"
  },
  {
    "text": "data science uh oriented workloads and uh things like that so that's where this use case originated",
    "start": "118399",
    "end": "126000"
  },
  {
    "text": "from and i'm gonna talk to that a bit later so",
    "start": "126000",
    "end": "131360"
  },
  {
    "text": "what i'm gonna be talking about there's a very nice coincidence uh yesterday there was this book signing event at the",
    "start": "131360",
    "end": "138720"
  },
  {
    "text": "redhead booth i didn't know about that before beforehand so i've added the slide in the last minute",
    "start": "138720",
    "end": "145520"
  },
  {
    "text": "about kubernetes pattern patterns book uh by colleagues of mine at redhead",
    "start": "145520",
    "end": "151680"
  },
  {
    "text": "honestly i haven't read this book if those offers are here i'm sorry",
    "start": "151680",
    "end": "159599"
  },
  {
    "text": "i'm sure it's a very nice book uh and since i haven't tried it uh i'm gonna be",
    "start": "159599",
    "end": "164720"
  },
  {
    "text": "doing anti-patterns so we're gonna shoot the deck and uh we're gonna",
    "start": "164720",
    "end": "171599"
  },
  {
    "text": "smash through it no what just happened",
    "start": "171599",
    "end": "177040"
  },
  {
    "text": "good so how we're gonna do it this is the agenda as usual first we're gonna start with",
    "start": "178560",
    "end": "185519"
  },
  {
    "text": "introducing some concepts to you uh going through the most basic stuff for most of you maybe but also going to some",
    "start": "185519",
    "end": "192720"
  },
  {
    "text": "some more advanced things uh so hopefully uh it's not just a recap and",
    "start": "192720",
    "end": "198560"
  },
  {
    "text": "we will get some some new connections between those concepts then i'm gonna provoke you with the use case um",
    "start": "198560",
    "end": "205599"
  },
  {
    "text": "and then we're gonna explore only one solution because we don't have time for more and",
    "start": "205599",
    "end": "210799"
  },
  {
    "text": "really uh we've come up with this one solution so we implemented it and we use",
    "start": "210799",
    "end": "216159"
  },
  {
    "text": "that one solution we can save that for the later q a or other",
    "start": "216159",
    "end": "221760"
  },
  {
    "text": "discussions uh with beer or something why this implementation may be wrong or",
    "start": "221760",
    "end": "228879"
  },
  {
    "text": "how to do it properly then as a fourth point we're going to",
    "start": "228879",
    "end": "234560"
  },
  {
    "text": "implement it we're going to see how much effort is it to implement something like this",
    "start": "234560",
    "end": "241200"
  },
  {
    "text": "and last but not least if the time permits we're going to do a live demo with our",
    "start": "241200",
    "end": "246239"
  },
  {
    "text": "project that is running somewhere in the cloud so hopefully networks will be kind with",
    "start": "246239",
    "end": "254159"
  },
  {
    "text": "us and it will work so first concept that i would like to introduce to you",
    "start": "254159",
    "end": "260560"
  },
  {
    "text": "is hopefully not very new to you how many of you here intentionally uses",
    "start": "260560",
    "end": "267120"
  },
  {
    "text": "kubernetes namespaces on their clusters great",
    "start": "267120",
    "end": "273040"
  },
  {
    "text": "everybody knows what the namespace is awesome so just to recap what kubernetes",
    "start": "273040",
    "end": "278320"
  },
  {
    "text": "documentation says about namespaces it serves for isolating groups of resources and",
    "start": "278320",
    "end": "285840"
  },
  {
    "text": "then the recommendation talks about namespace-based coping and cluster-wise resources so that gives us some",
    "start": "285840",
    "end": "292479"
  },
  {
    "text": "information that there are two distinct types of resources in kubernetes that we have something namespace scope and then",
    "start": "292479",
    "end": "299040"
  },
  {
    "text": "we have something that is shared across the whole cluster this is very important uh thing to remember that we can use two",
    "start": "299040",
    "end": "307039"
  },
  {
    "text": "types of resources and there are a lot of things that comes with with those different types",
    "start": "307039",
    "end": "314639"
  },
  {
    "text": "there's security and arbeit constraints that comes with cluster wide resources that",
    "start": "314639",
    "end": "322639"
  },
  {
    "text": "out of blue you have access to all uh namespaces in a cluster",
    "start": "322639",
    "end": "327919"
  },
  {
    "text": "on the other hand if i have a namespace based resource",
    "start": "327919",
    "end": "333520"
  },
  {
    "text": "i can have a resource with the same name in a different namespace and now i have",
    "start": "333520",
    "end": "339919"
  },
  {
    "text": "with two people talking about the same resource with the same resource name in two different namespaces they are",
    "start": "339919",
    "end": "345680"
  },
  {
    "text": "talking about two different stuff so that's also an interesting",
    "start": "345680",
    "end": "350720"
  },
  {
    "text": "topic or interesting point to remember that we have two two things uh happening",
    "start": "350720",
    "end": "356240"
  },
  {
    "text": "there when to use namespaces well usually in environments with many users",
    "start": "356240",
    "end": "363120"
  },
  {
    "text": "or distinct workloads that i want to separate and isolate right common knowledge",
    "start": "363120",
    "end": "368800"
  },
  {
    "text": "um so far so good so another point here is that",
    "start": "368800",
    "end": "375759"
  },
  {
    "text": "each kubernetes resource if it's name space scope is can live only in one namespace so we can't have a resource",
    "start": "375759",
    "end": "382960"
  },
  {
    "text": "spanning multiple namespaces it can be either cluster scoped or a single",
    "start": "382960",
    "end": "388160"
  },
  {
    "text": "namespace good and last but not least what kubernetes",
    "start": "388160",
    "end": "394479"
  },
  {
    "text": "documentation talk uh says about namespaces is something called resource quota this is a very",
    "start": "394479",
    "end": "401520"
  },
  {
    "text": "interesting and important concept with namespaces that comes with namespaces",
    "start": "401520",
    "end": "406720"
  },
  {
    "text": "so resource quota again i'm quoting the documentation",
    "start": "406720",
    "end": "411759"
  },
  {
    "text": "this is something i've learned from implementing this thing read the documentation",
    "start": "411759",
    "end": "417280"
  },
  {
    "text": "that's what we usually don't do when we're hacking stuff and putting things together so that's why i'm quoting on",
    "start": "417280",
    "end": "423520"
  },
  {
    "text": "the second slide i'm again quoting kubernetes documentation so resource quota",
    "start": "423520",
    "end": "429280"
  },
  {
    "text": "what does it serve what purpose does it serve well we want to ensure that each distinct",
    "start": "429280",
    "end": "437199"
  },
  {
    "text": "user group each distant namespace in cluster gets its fair share of resources",
    "start": "437199",
    "end": "443120"
  },
  {
    "text": "that we can't have a single namespace consuming all resources in the cluster",
    "start": "443120",
    "end": "449280"
  },
  {
    "text": "eating it all and there's no resources left for another team so we can set some boundaries",
    "start": "449280",
    "end": "457199"
  },
  {
    "text": "upper boundaries what's the maximum amount of resources one team one namespace can",
    "start": "457199",
    "end": "463199"
  },
  {
    "text": "consume so that brings us to multi-tenancy",
    "start": "463199",
    "end": "472240"
  },
  {
    "text": "i don't know about about your use cases of kubernetes our use case is mainly running long",
    "start": "472319",
    "end": "478720"
  },
  {
    "text": "lasting clusters with huge footprint tens of nodes even better even even more",
    "start": "478720",
    "end": "485680"
  },
  {
    "text": "and hosting multiple teams that we want to",
    "start": "485680",
    "end": "490800"
  },
  {
    "text": "keep isolated on those clusters so we have user team a and",
    "start": "490800",
    "end": "497360"
  },
  {
    "text": "team of users named b and many others and each of them have access to multiple",
    "start": "497360",
    "end": "503120"
  },
  {
    "text": "namespaces or can be one can be more it can be tense um",
    "start": "503120",
    "end": "509199"
  },
  {
    "text": "based on their need and we want to isolate those so we do",
    "start": "509199",
    "end": "514560"
  },
  {
    "text": "that through namespaces we do that through resource quota we did through some are back on top of it",
    "start": "514560",
    "end": "521839"
  },
  {
    "text": "switching gears owners and dependents one last one last",
    "start": "525680",
    "end": "530959"
  },
  {
    "text": "topic to introduce to you before we jump into into the real stuff",
    "start": "530959",
    "end": "536640"
  },
  {
    "text": "so owners and dependents also a very well-known kubernetes concept right",
    "start": "536640",
    "end": "542880"
  },
  {
    "text": "the most obvious chain of owners and dependents that everybody uses is a deployment replica",
    "start": "542880",
    "end": "550080"
  },
  {
    "text": "asset port so deployment owns replica asset replicas it owns a port if i delete",
    "start": "550080",
    "end": "558880"
  },
  {
    "text": "deployment replicas that gets deleted pods get deleted",
    "start": "558880",
    "end": "564720"
  },
  {
    "text": "very very common very common workflow",
    "start": "564720",
    "end": "571279"
  },
  {
    "text": "and this is something that is used across kubernetes in many various formats and ways",
    "start": "571279",
    "end": "577839"
  },
  {
    "text": "so this is how it looks on on the api side of things",
    "start": "577839",
    "end": "584399"
  },
  {
    "text": "on the manifest side of things you usually don't define a manifest for replica asset you",
    "start": "584399",
    "end": "591760"
  },
  {
    "text": "usually don't define a manifest for pod so these are usually very hidden from the end user",
    "start": "591760",
    "end": "598880"
  },
  {
    "text": "perspective they create a deployment manifest and are happy with it everything else is orchestrated by",
    "start": "598880",
    "end": "605519"
  },
  {
    "text": "kubernetes for them but these only references are still present",
    "start": "605519",
    "end": "612480"
  },
  {
    "text": "in those yaml files yaml manifests json manifests in the cluster once",
    "start": "612480",
    "end": "618320"
  },
  {
    "text": "deployed so i can take a look into a replica set and see there's a metadata",
    "start": "618320",
    "end": "624240"
  },
  {
    "text": "field called own references that is referencing the deployment",
    "start": "624240",
    "end": "629440"
  },
  {
    "text": "and it contains identifier information it contains",
    "start": "629440",
    "end": "635120"
  },
  {
    "text": "unique id kind name api version but also two other flags",
    "start": "635120",
    "end": "640640"
  },
  {
    "text": "that are used for uh for additional control additional stuff on",
    "start": "640640",
    "end": "646720"
  },
  {
    "text": "top of it so there's a flag setting a controller",
    "start": "646720",
    "end": "653040"
  },
  {
    "text": "setting which resource actually controls the reso the dependent",
    "start": "653040",
    "end": "659360"
  },
  {
    "text": "because you can have multiple owners for a single resource so you want to avoid them fighting over this resource",
    "start": "659360",
    "end": "666720"
  },
  {
    "text": "so you have this control flag that uh it can be set only in a single own",
    "start": "666720",
    "end": "673040"
  },
  {
    "text": "reference then you have a flag for block owner deletion so this is telling the garbage collector",
    "start": "673040",
    "end": "680160"
  },
  {
    "text": "how to behave when this resource is being deleted or when the owner is being deleted and how to",
    "start": "680160",
    "end": "686640"
  },
  {
    "text": "how to handle those situations then we have another concept that is",
    "start": "686640",
    "end": "693200"
  },
  {
    "text": "kind of working hand-in-hand with owners and dependents that's finalizers",
    "start": "693200",
    "end": "700079"
  },
  {
    "text": "so you don't have to specify an owner or a dependent",
    "start": "700079",
    "end": "706959"
  },
  {
    "text": "in finalizers but finalizer needs to be clever enough to determine these relations",
    "start": "706959",
    "end": "712880"
  },
  {
    "text": "usually you see that in persistent volumes and persistent volume claims where you can actually start deleting a",
    "start": "712880",
    "end": "719120"
  },
  {
    "text": "persistent volume claim or persistent volume even if it's mounted to a port",
    "start": "719120",
    "end": "725519"
  },
  {
    "text": "the port the persistent volume per system volume claim will still",
    "start": "725519",
    "end": "730560"
  },
  {
    "text": "stay in terminating state until the port gets deleted",
    "start": "730560",
    "end": "736160"
  },
  {
    "text": "and this is ensured by the finalizer as you can see in the manifest for persistent volume claim there's no",
    "start": "736160",
    "end": "742320"
  },
  {
    "text": "no owner definition no owner reference that this port owns this persistent volume claim but still the relation is",
    "start": "742320",
    "end": "750000"
  },
  {
    "text": "maintained so when it comes to",
    "start": "750000",
    "end": "756079"
  },
  {
    "text": "regular owner owner references and ownership of",
    "start": "756079",
    "end": "761440"
  },
  {
    "text": "resources in kubernetes we can have these things right this metrics",
    "start": "761440",
    "end": "766880"
  },
  {
    "text": "i can have a cluster scoped owner again going back to namespaces and those resources though",
    "start": "766880",
    "end": "773279"
  },
  {
    "text": "two distinct types that i've talked before that i can have cluster scopes and names for scope resources",
    "start": "773279",
    "end": "778959"
  },
  {
    "text": "so i can have an owner which is a cluster-scoped resource and i can own a cluster-scoped",
    "start": "778959",
    "end": "786079"
  },
  {
    "text": "dependent again comparing apples to apples good that's",
    "start": "786079",
    "end": "791120"
  },
  {
    "text": "that's normal thing to do what i can also do from a cluster scoped resource i can own a namespace scope resource",
    "start": "791120",
    "end": "798720"
  },
  {
    "text": "which we see as like a small subsets narrowly scoped resource",
    "start": "798720",
    "end": "804399"
  },
  {
    "text": "than the clusterwise one okay good then i can i can have i can't have a",
    "start": "804399",
    "end": "810480"
  },
  {
    "text": "namespace scoped owner owning something on the cluster scope",
    "start": "810480",
    "end": "815600"
  },
  {
    "text": "that kind of breaks through these isolations right that's also a very obvious thing to think to have and then",
    "start": "815600",
    "end": "822160"
  },
  {
    "text": "i can have in the top right corner i can have both of them name space scope",
    "start": "822160",
    "end": "829360"
  },
  {
    "text": "well can i",
    "start": "829360",
    "end": "832720"
  },
  {
    "text": "it you can but they need to live in the same name space",
    "start": "834800",
    "end": "843639"
  },
  {
    "text": "kubernetes will allow you to define the ownership reference to a resource living in a different",
    "start": "843839",
    "end": "850160"
  },
  {
    "text": "namespace it will allow it it will the api the admission control",
    "start": "850160",
    "end": "855680"
  },
  {
    "text": "will accept it and then the the kubernetes controller will",
    "start": "855680",
    "end": "861199"
  },
  {
    "text": "come in and start uh working on it so what will actually happen",
    "start": "861199",
    "end": "868240"
  },
  {
    "text": "are these issues what's going on with uh my resources",
    "start": "868639",
    "end": "874160"
  },
  {
    "text": "what's going on what's happening i have i have a resource that is owned by",
    "start": "874160",
    "end": "879839"
  },
  {
    "text": "something and this resource is just out of blue deleted by the controller what happened",
    "start": "879839",
    "end": "885519"
  },
  {
    "text": "well what happened is the controller goes into my resource that is owned by",
    "start": "885519",
    "end": "892160"
  },
  {
    "text": "something goes through the own references looks through the owner references and",
    "start": "892160",
    "end": "898240"
  },
  {
    "text": "sees i have this namespace scoped own reference",
    "start": "898240",
    "end": "904399"
  },
  {
    "text": "and it doesn't exist ok there's out of sudden there's no owner",
    "start": "904399",
    "end": "912480"
  },
  {
    "text": "and i'm a dependent resource i'm a dependency of something i'm generated",
    "start": "912480",
    "end": "917839"
  },
  {
    "text": "from something so i'm ready to be garbage collected i'm ready to be released and just delete",
    "start": "917839",
    "end": "923680"
  },
  {
    "text": "this resource so you define across namespace ownership everything's great until there's time",
    "start": "923680",
    "end": "930639"
  },
  {
    "text": "for the garbage collection to kick in and it just deletes your resource without any warning because it feels",
    "start": "930639",
    "end": "936480"
  },
  {
    "text": "that this is a legit thing to do so if i go just really quick",
    "start": "936480",
    "end": "942480"
  },
  {
    "text": "back here to those own references you see no namespace field in it using name kind uid",
    "start": "942480",
    "end": "951199"
  },
  {
    "text": "and flags so it really doesn't uh convey the information that there's something to be",
    "start": "951199",
    "end": "957920"
  },
  {
    "text": "happening with namespaces so we get those issues um what's",
    "start": "957920",
    "end": "963040"
  },
  {
    "text": "happening with my resource my body getting deleted and also articles about",
    "start": "963040",
    "end": "968800"
  },
  {
    "text": "these are the lessons i've learned uh and by skimming uh kubernetes",
    "start": "968800",
    "end": "974000"
  },
  {
    "text": "documentation and these are the things i really shouldn't be doing so beware",
    "start": "974000",
    "end": "980000"
  },
  {
    "text": "okay since version 120 of kubernetes we get this",
    "start": "980000",
    "end": "986560"
  },
  {
    "text": "nice notice in the kubernetes recommendation telling us don't do this",
    "start": "986560",
    "end": "992320"
  },
  {
    "text": "it must exist in the same namespace otherwise the garbage collection will",
    "start": "992320",
    "end": "997360"
  },
  {
    "text": "kick in beware so this is what we're going to implement",
    "start": "997360",
    "end": "1003199"
  },
  {
    "text": "is this it's disallowed by design and we're going to try to bend kubernetes",
    "start": "1003199",
    "end": "1008839"
  },
  {
    "text": "why well okay we have some",
    "start": "1008839",
    "end": "1014480"
  },
  {
    "text": "extra stuff on the right that should be there well we have this operator that's what you see on the top",
    "start": "1014480",
    "end": "1021440"
  },
  {
    "text": "and we have a cluster clusterscope operator a controller that's working on the clusterscope level",
    "start": "1021440",
    "end": "1027360"
  },
  {
    "text": "normal thing everybody does that right and we have namespaces we have users in different namespaces",
    "start": "1027360",
    "end": "1033918"
  },
  {
    "text": "so we deploy something some custom resource",
    "start": "1033919",
    "end": "1039280"
  },
  {
    "text": "into various namespaces this is called in our project this is called meteor",
    "start": "1039280",
    "end": "1044720"
  },
  {
    "text": "shower and this resource is holding some specific",
    "start": "1044720",
    "end": "1050799"
  },
  {
    "text": "generic configuration for that particle instance of meteor shower deployment again imagine it as a kafka cluster",
    "start": "1050799",
    "end": "1059440"
  },
  {
    "text": "custom resource or something like that we can generate",
    "start": "1059440",
    "end": "1064960"
  },
  {
    "text": "additional resources from this meteor shower within the same name space so",
    "start": "1064960",
    "end": "1070960"
  },
  {
    "text": "there's a meteor resource which is part of meteor shower it's owned by a meteor shower",
    "start": "1070960",
    "end": "1077200"
  },
  {
    "text": "and this is a very normal relationship again deployment replica set pot similar",
    "start": "1077200",
    "end": "1082400"
  },
  {
    "text": "relationship here i have a meteor shower a meteor derived from it and some",
    "start": "1082400",
    "end": "1088320"
  },
  {
    "text": "workloads pods generated from it in the same name space that is that is fine that is good that",
    "start": "1088320",
    "end": "1094080"
  },
  {
    "text": "is normal thing to do well then",
    "start": "1094080",
    "end": "1099280"
  },
  {
    "text": "i have a problem that i want to solve because for some reason i want to generate resources in",
    "start": "1099280",
    "end": "1105760"
  },
  {
    "text": "different name spaces i want this operator to be able to integrate with external services in different",
    "start": "1105760",
    "end": "1112240"
  },
  {
    "text": "namespaces well why",
    "start": "1112240",
    "end": "1117520"
  },
  {
    "text": "in our scenario this is a data science project that needs to integrate with legacy",
    "start": "1117520",
    "end": "1124160"
  },
  {
    "text": "additional applications deployed to different namespaces and i want those namespaces",
    "start": "1124160",
    "end": "1130799"
  },
  {
    "text": "with resource quota i want it self-contained and isolated so",
    "start": "1130799",
    "end": "1136880"
  },
  {
    "text": "we have one namespace where we are running build pipelines for uh data science",
    "start": "1136880",
    "end": "1143600"
  },
  {
    "text": "repositories and this is this should have different quota than deployment of some data",
    "start": "1143600",
    "end": "1149840"
  },
  {
    "text": "science workload it should live in a different namespace",
    "start": "1149840",
    "end": "1154960"
  },
  {
    "text": "and i also want to support multitenancy i want to support multiple instances because i have multiple teams on my",
    "start": "1154960",
    "end": "1161440"
  },
  {
    "text": "cluster so i can't have my shower instance cluster scoped because i want more",
    "start": "1161440",
    "end": "1166720"
  },
  {
    "text": "instances of instances of it that would solve the issue right i would",
    "start": "1166720",
    "end": "1171840"
  },
  {
    "text": "have cluster scope owner of all the resources fine i can't have that",
    "start": "1171840",
    "end": "1177600"
  },
  {
    "text": "well what do i do what do i do now i can't just set the ownership reference",
    "start": "1177600",
    "end": "1182799"
  },
  {
    "text": "to that other namespace that would just delete my resources why would i want to search ownership",
    "start": "1182799",
    "end": "1188880"
  },
  {
    "text": "references well this is simple we don't want to leave garbage we don't want to leave",
    "start": "1188880",
    "end": "1195760"
  },
  {
    "text": "mass after ourselves so if user leaves and deletes their workload",
    "start": "1195760",
    "end": "1201600"
  },
  {
    "text": "deletes their meteor i want to be able to garbage collect from other namespaces i don't want to leave",
    "start": "1201600",
    "end": "1208400"
  },
  {
    "text": "images and image streams which we know in openshift",
    "start": "1208400",
    "end": "1214320"
  },
  {
    "text": "left in those other namespaces so i want to be a good steward a good guy",
    "start": "1214320",
    "end": "1221039"
  },
  {
    "text": "and clean the cluster after my usage so what do i do",
    "start": "1221039",
    "end": "1226159"
  },
  {
    "text": "well the solution we came up with is to provide a resource called meteor comma",
    "start": "1226159",
    "end": "1234640"
  },
  {
    "text": "which is a mere shadow of my meteor in those other namespaces then i can define the",
    "start": "1234640",
    "end": "1241360"
  },
  {
    "text": "ownership reference as a normal thing within a single namespace so meteor comma in namespace f owns all",
    "start": "1241360",
    "end": "1249120"
  },
  {
    "text": "all the parts in namespace f and this is a normal normal regulation",
    "start": "1249120",
    "end": "1254400"
  },
  {
    "text": "now instead of syncing ownership references across multiple namespaces i just need to ensure",
    "start": "1254400",
    "end": "1260480"
  },
  {
    "text": "that i have a meteor and meteor commas side by side in",
    "start": "1260480",
    "end": "1266080"
  },
  {
    "text": "the name space and i need to ensure that they both exist at the same time and i need to synchronize their creation",
    "start": "1266080",
    "end": "1273120"
  },
  {
    "text": "their deletion and passing of the ownership references fairly straightforward solution",
    "start": "1273120",
    "end": "1280000"
  },
  {
    "text": "but it's an anti-pattern too",
    "start": "1280000",
    "end": "1286919"
  },
  {
    "text": "this is the api or the resource definitions that we came with came up with",
    "start": "1291360",
    "end": "1298159"
  },
  {
    "text": "just custom resources meteor and comma resources and it defines",
    "start": "1298720",
    "end": "1304240"
  },
  {
    "text": "couple of fields in it so first thing is an owner reference in meteor",
    "start": "1304240",
    "end": "1310320"
  },
  {
    "text": "that's the standard thing right this is owned from a shower called parasites in the same name space",
    "start": "1310320",
    "end": "1316880"
  },
  {
    "text": "it's an ownership reference so if i delete my meteor shower i can be sure that this meteor gets deleted as well so",
    "start": "1316880",
    "end": "1323280"
  },
  {
    "text": "it's not left behind the other thing here is a finalizer",
    "start": "1323280",
    "end": "1330000"
  },
  {
    "text": "and this finalizer is here to ensure that if i'm deleting a meteor",
    "start": "1330000",
    "end": "1336240"
  },
  {
    "text": "i will also query or schedule for deletion all the commas",
    "start": "1336240",
    "end": "1343440"
  },
  {
    "text": "then in status i track all my commas in all the namespaces all the external",
    "start": "1345039",
    "end": "1351520"
  },
  {
    "text": "namespaces as something like an ownership reference which",
    "start": "1351520",
    "end": "1357600"
  },
  {
    "text": "is understood only by our custom controller but it's there and it has additional fear",
    "start": "1357600",
    "end": "1363840"
  },
  {
    "text": "for for a namespace so um this way i know that there's this",
    "start": "1363840",
    "end": "1369360"
  },
  {
    "text": "additional resource in the other namespace it's pointing to the comma it has the same uid it has the namespace name",
    "start": "1369360",
    "end": "1376960"
  },
  {
    "text": "and kind and stuff like that so in my comma i also need to set a finalizer",
    "start": "1376960",
    "end": "1382960"
  },
  {
    "text": "to ensure that the comma is not deleted until somebody deletes the meteor",
    "start": "1382960",
    "end": "1388559"
  },
  {
    "text": "because i don't want all the resources in the other name space just disappear uh if somebody's",
    "start": "1388559",
    "end": "1395120"
  },
  {
    "text": "doing stuff in that namespace i want to wait until they intentionally recur",
    "start": "1395120",
    "end": "1401440"
  },
  {
    "text": "and just for good measure i also track the owner in here in coma just for redundancy and to know",
    "start": "1401440",
    "end": "1409200"
  },
  {
    "text": "where to look at if i'm doing something with the coma",
    "start": "1409200",
    "end": "1413679"
  },
  {
    "text": "so we have this pattern of all referencing everywhere and uh",
    "start": "1414320",
    "end": "1420400"
  },
  {
    "text": "so far so far it seems good but how do i implement it what do i do with",
    "start": "1420400",
    "end": "1425760"
  },
  {
    "text": "it well if you think of think about it",
    "start": "1425760",
    "end": "1431360"
  },
  {
    "text": "it's not that easy it's not an easy problem to solve uh if you think of creating resources",
    "start": "1431360",
    "end": "1437679"
  },
  {
    "text": "for you through google apply or something like that and manually creating all references and and getting",
    "start": "1437679",
    "end": "1444400"
  },
  {
    "text": "those new ids and everything right it's it's not easy thing to do",
    "start": "1444400",
    "end": "1449710"
  },
  {
    "text": "[Music] and if you do it wrong the resources get deleted because they",
    "start": "1449710",
    "end": "1454720"
  },
  {
    "text": "don't exist so the cube controller is very strict about that what we can do what we can use",
    "start": "1454720",
    "end": "1462159"
  },
  {
    "text": "is our goal line binding let's go for the golang sdk and",
    "start": "1462159",
    "end": "1468159"
  },
  {
    "text": "have fun with it and try to implement it through queue builder and operate it through operator sdk",
    "start": "1468159",
    "end": "1475200"
  },
  {
    "text": "this is this was our solution or this is our solution how we approached it and it",
    "start": "1475200",
    "end": "1480960"
  },
  {
    "text": "turned out fairly simple for such a complex problem",
    "start": "1480960",
    "end": "1487200"
  },
  {
    "text": "so first the synchronized the finalizer what do we do in the finalizer",
    "start": "1487200",
    "end": "1493679"
  },
  {
    "text": "well it turns out that this is just a few lines of code so if i have a if i don't",
    "start": "1493679",
    "end": "1500799"
  },
  {
    "text": "have a deletion timestamp the resource is not being deleted so i need to ensure the finalizer is properly set on those",
    "start": "1500799",
    "end": "1507200"
  },
  {
    "text": "resources standard thing to do i need to add it to the manifest i need to update it",
    "start": "1507200",
    "end": "1513679"
  },
  {
    "text": "update the resource good and if the resource is being deleted i just query all right i just schedule",
    "start": "1513679",
    "end": "1521120"
  },
  {
    "text": "all the commas to be deleted as well and then if they are deleted",
    "start": "1521120",
    "end": "1526960"
  },
  {
    "text": "successfully i just remove the finalizer so the resource can be deleted",
    "start": "1526960",
    "end": "1532799"
  },
  {
    "text": "well what do i do when i want to delete all those commas again very simple very",
    "start": "1532799",
    "end": "1538000"
  },
  {
    "text": "simple single for loop i just list i just walk all the commas",
    "start": "1538000",
    "end": "1544480"
  },
  {
    "text": "that i have in my status and just schedule them to be deleted",
    "start": "1544480",
    "end": "1550320"
  },
  {
    "text": "simple well when it becomes more complex is",
    "start": "1550320",
    "end": "1556559"
  },
  {
    "text": "actually synchronizing the creation but our operator",
    "start": "1556559",
    "end": "1562880"
  },
  {
    "text": "acts watches the cr creation and acts upon it",
    "start": "1562880",
    "end": "1568320"
  },
  {
    "text": "what is meteor being created so we just when we are creating meteor",
    "start": "1568320",
    "end": "1574880"
  },
  {
    "text": "we just list all the external service services we need to integrate it",
    "start": "1574880",
    "end": "1580159"
  },
  {
    "text": "and look for them and then it's all the same it's just do i have a namespace for that external",
    "start": "1580159",
    "end": "1586480"
  },
  {
    "text": "service i do okay so i get that namespace do i have access to the namespace if i do",
    "start": "1586480",
    "end": "1593760"
  },
  {
    "text": "i can create comma in there so i create a comma in there",
    "start": "1593760",
    "end": "1599520"
  },
  {
    "text": "and i just do some on the right i just do some extra magic with only references and",
    "start": "1599520",
    "end": "1606080"
  },
  {
    "text": "setting up those names generate online references and set them for my tracking in the status field",
    "start": "1606080",
    "end": "1614480"
  },
  {
    "text": "which is again fairly simple so now",
    "start": "1614480",
    "end": "1620640"
  },
  {
    "text": "this is all the implementation that i had to do i've",
    "start": "1620640",
    "end": "1627039"
  },
  {
    "text": "implemented the creation of all the commas across all the namespaces and i've",
    "start": "1627039",
    "end": "1632159"
  },
  {
    "text": "handled all the deletion phases this was all the code this was all the",
    "start": "1632159",
    "end": "1637520"
  },
  {
    "text": "implementation well now i need to deploy and test and run it so we use this community called",
    "start": "1637520",
    "end": "1644080"
  },
  {
    "text": "the bridge first where you can get for community workloads you can get free infrastructure and deploy their",
    "start": "1644080",
    "end": "1649279"
  },
  {
    "text": "workloads in there and uh operate it and collaborate on operations and on sre related stuff and things like",
    "start": "1649279",
    "end": "1657120"
  },
  {
    "text": "that so we use it as our uh as our uh go to go to community for for uh",
    "start": "1657120",
    "end": "1662640"
  },
  {
    "text": "kubernetes and openshift and stuff like that uh and uh we deployed it there",
    "start": "1662640",
    "end": "1669840"
  },
  {
    "text": "so let's take a look at it",
    "start": "1669840",
    "end": "1674320"
  },
  {
    "text": "this is our meteor instance it provides you a way how to get",
    "start": "1674960",
    "end": "1683760"
  },
  {
    "text": "this is unrelated to the dog but this is the use case being explained so we automate away from a data science",
    "start": "1683760",
    "end": "1691919"
  },
  {
    "text": "type of kids repository to images being deployed to jupiter hub and",
    "start": "1691919",
    "end": "1698080"
  },
  {
    "text": "other other other ways so we get some meteors in here",
    "start": "1698080",
    "end": "1703840"
  },
  {
    "text": "that are being created and if you like fill in this form pass the url that what happens there's a",
    "start": "1703840",
    "end": "1711919"
  },
  {
    "text": "meteor resource being created on a cluster so",
    "start": "1711919",
    "end": "1717200"
  },
  {
    "text": "we can take a look what actually happened in the cluster",
    "start": "1717200",
    "end": "1722279"
  },
  {
    "text": "i have a meteor resource as you can see managed by perseids it's owned from a shower resource",
    "start": "1724559",
    "end": "1732080"
  },
  {
    "text": "i can go into the manifest and i can see that there's an own reference for per se it's shower and there's some spec and",
    "start": "1732080",
    "end": "1738960"
  },
  {
    "text": "has some commas in in its status so it's integrating with some other name spaces",
    "start": "1738960",
    "end": "1744159"
  },
  {
    "text": "so i can query uh for well",
    "start": "1744159",
    "end": "1749760"
  },
  {
    "text": "yeah i can query for meteor and i can query for comma",
    "start": "1749760",
    "end": "1757440"
  },
  {
    "text": "so i can see i have quite a few meteors in this namespace and",
    "start": "1758240",
    "end": "1763679"
  },
  {
    "text": "this is my meteor that we've been just looking at and i can take a look at a different namespace at the other",
    "start": "1763679",
    "end": "1769760"
  },
  {
    "text": "namespace that i'm integrating with as the external service now i don't have any meteors",
    "start": "1769760",
    "end": "1775679"
  },
  {
    "text": "here but i have commas and they are named the same so i can",
    "start": "1775679",
    "end": "1781840"
  },
  {
    "text": "just for consistency they are named the same so comma really does nothing as a resource it's a",
    "start": "1781840",
    "end": "1788320"
  },
  {
    "text": "it's a blank shadow of the meteor that we can use",
    "start": "1788320",
    "end": "1793360"
  },
  {
    "text": "to own the additional generated resources and garbage collect them afterwards so",
    "start": "1793360",
    "end": "1799279"
  },
  {
    "text": "if i take a look here now into builds image streams in this namespace",
    "start": "1799279",
    "end": "1806480"
  },
  {
    "text": "i can query for this name [Music]",
    "start": "1806480",
    "end": "1812109"
  },
  {
    "text": "there's an image stream which is name which is owned by this coma",
    "start": "1816799",
    "end": "1822320"
  },
  {
    "text": "so this image stream which is a internal openshift resource to hold images in",
    "start": "1822320",
    "end": "1827360"
  },
  {
    "text": "their internal openshift image registry that is internal to the",
    "start": "1827360",
    "end": "1833039"
  },
  {
    "text": "cluster it has some tags it has everything but what's important here is there's an own reference that we've",
    "start": "1833039",
    "end": "1839200"
  },
  {
    "text": "added to this local coma in that local namespace what we also have for this meteor in the",
    "start": "1839200",
    "end": "1846000"
  },
  {
    "text": "other namespace we have built pipelines",
    "start": "1846000",
    "end": "1851320"
  },
  {
    "text": "that are run",
    "start": "1851760",
    "end": "1856799"
  },
  {
    "text": "that are run against this meteor against this meteor spec so again it's owned managed by",
    "start": "1858960",
    "end": "1866080"
  },
  {
    "text": "this meteor so if i delete my meteor which we can do",
    "start": "1866080",
    "end": "1872640"
  },
  {
    "text": "if i delete my meteor what should happen is that i'm going to duplicate this so we can see it",
    "start": "1874960",
    "end": "1882540"
  },
  {
    "text": "[Music] all these",
    "start": "1882540",
    "end": "1889639"
  },
  {
    "text": "all these pipeline rounds and all these images this image stream should be deleted and",
    "start": "1892080",
    "end": "1897919"
  },
  {
    "text": "as you can see they are living in a different name space so if i delete this meteor",
    "start": "1897919",
    "end": "1904320"
  },
  {
    "text": "the controller yes the controller should delete those",
    "start": "1905360",
    "end": "1911120"
  },
  {
    "text": "pipelines and delete the image stream and just to be sure we can take a look",
    "start": "1911120",
    "end": "1917279"
  },
  {
    "text": "at this namespace and get those commas",
    "start": "1917279",
    "end": "1925640"
  },
  {
    "text": "yeah i shouldn't be having it here yeah it's not there the comma gets",
    "start": "1938640",
    "end": "1944559"
  },
  {
    "text": "deleted as well so",
    "start": "1944559",
    "end": "1949159"
  },
  {
    "text": "it worked it did its job",
    "start": "1949760",
    "end": "1955039"
  },
  {
    "text": "and it was few lines of code so if you have a complex use case if you have something that is hard to solve",
    "start": "1955039",
    "end": "1961760"
  },
  {
    "text": "well if you think about it and go into q builder operator sdk",
    "start": "1961760",
    "end": "1968320"
  },
  {
    "text": "and really try to implement it through the golang sdk",
    "start": "1968320",
    "end": "1974559"
  },
  {
    "text": "it's really easy to do to bend the kubernetes rules and to implement it's",
    "start": "1974559",
    "end": "1979600"
  },
  {
    "text": "implement something that is really really disallowed and really",
    "start": "1979600",
    "end": "1985120"
  },
  {
    "text": "advised not to do in 20 lines of code thank you very much if you have any",
    "start": "1985120",
    "end": "1990960"
  },
  {
    "text": "questions now's the time",
    "start": "1990960",
    "end": "1995158"
  }
]