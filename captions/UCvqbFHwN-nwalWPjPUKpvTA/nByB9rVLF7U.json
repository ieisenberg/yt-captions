[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "let's get started thank you uh thank you",
    "start": "1079",
    "end": "3540"
  },
  {
    "text": "for coming",
    "start": "3540",
    "end": "4799"
  },
  {
    "text": "um I hope you're having a great kubecon",
    "start": "4799",
    "end": "8660"
  },
  {
    "text": "I'm Daniel bovitsky uh find me at Dilo",
    "start": "9179",
    "end": "12240"
  },
  {
    "text": "pavettsky on kubernetes slack and GitHub",
    "start": "12240",
    "end": "15480"
  },
  {
    "text": "I've been building software that creates",
    "start": "15480",
    "end": "17400"
  },
  {
    "text": "and manages kubernetes clusters for more",
    "start": "17400",
    "end": "20400"
  },
  {
    "text": "than a few years now I built it Upstream",
    "start": "20400",
    "end": "22859"
  },
  {
    "text": "in the cluster API project and as an",
    "start": "22859",
    "end": "25380"
  },
  {
    "text": "engineer at day two IQ",
    "start": "25380",
    "end": "29300"
  },
  {
    "text": "I work a lot with cluster API",
    "start": "30180",
    "end": "32880"
  },
  {
    "text": "when cluster API is a complex kubernetes",
    "start": "32880",
    "end": "36300"
  },
  {
    "text": "application so today we're going to",
    "start": "36300",
    "end": "38760"
  },
  {
    "text": "learn what it takes to debug it and",
    "start": "38760",
    "end": "41640"
  },
  {
    "text": "other kubernetes applications",
    "start": "41640",
    "end": "43860"
  },
  {
    "text": "Now kubernetes application and debug are",
    "start": "43860",
    "end": "47640"
  },
  {
    "text": "not exact terms",
    "start": "47640",
    "end": "49500"
  },
  {
    "text": "when I say kubernetes application I mean",
    "start": "49500",
    "end": "51899"
  },
  {
    "text": "an application that runs in one or more",
    "start": "51899",
    "end": "54420"
  },
  {
    "text": "pods",
    "start": "54420",
    "end": "55739"
  },
  {
    "text": "when I say debug I mean set break points",
    "start": "55739",
    "end": "60059"
  },
  {
    "text": "in code and step through them",
    "start": "60059",
    "end": "63180"
  },
  {
    "text": "it's also called interactive debugging",
    "start": "63180",
    "end": "66060"
  },
  {
    "text": "so first let's quickly look at some",
    "start": "66060",
    "end": "69000"
  },
  {
    "text": "technical details then I'll demonstrate",
    "start": "69000",
    "end": "72060"
  },
  {
    "text": "a debug session",
    "start": "72060",
    "end": "73920"
  },
  {
    "text": "then we'll look at the challenges that I",
    "start": "73920",
    "end": "75780"
  },
  {
    "text": "faced and the solutions that I found",
    "start": "75780",
    "end": "78060"
  },
  {
    "text": "then what work remains and finally I've",
    "start": "78060",
    "end": "81540"
  },
  {
    "text": "got a call to action for all of you in",
    "start": "81540",
    "end": "83820"
  },
  {
    "text": "here",
    "start": "83820",
    "end": "85680"
  },
  {
    "text": "if you've got slides that you've",
    "start": "85680",
    "end": "88680"
  },
  {
    "text": "downloaded I uploaded a newer version so",
    "start": "88680",
    "end": "92040"
  },
  {
    "text": "you're welcome to to download the latest",
    "start": "92040",
    "end": "93600"
  },
  {
    "text": "one from the from the site",
    "start": "93600",
    "end": "96840"
  },
  {
    "text": "so this presentation came out of my own",
    "start": "96840",
    "end": "99840"
  },
  {
    "text": "attempt to step through code running in",
    "start": "99840",
    "end": "102840"
  },
  {
    "text": "multiple pods",
    "start": "102840",
    "end": "105600"
  },
  {
    "text": "kubernetes for a few years you may be",
    "start": "105600",
    "end": "107520"
  },
  {
    "text": "wondering why didn't I just use squash",
    "start": "107520",
    "end": "110460"
  },
  {
    "text": "which is an open source tool built to",
    "start": "110460",
    "end": "113040"
  },
  {
    "text": "debug kubernetes applications",
    "start": "113040",
    "end": "115560"
  },
  {
    "text": "that's a good question",
    "start": "115560",
    "end": "117420"
  },
  {
    "text": "two reasons one it was designed before",
    "start": "117420",
    "end": "120720"
  },
  {
    "text": "ephemeral containers were available",
    "start": "120720",
    "end": "123540"
  },
  {
    "text": "two it didn't solve some of the",
    "start": "123540",
    "end": "126479"
  },
  {
    "text": "challenges I faced that said squash was",
    "start": "126479",
    "end": "130020"
  },
  {
    "text": "a source of knowledge and inspiration",
    "start": "130020",
    "end": "133319"
  },
  {
    "text": "you may also be wondering why I didn't",
    "start": "133319",
    "end": "135300"
  },
  {
    "text": "use telepresence",
    "start": "135300",
    "end": "136860"
  },
  {
    "text": "that's a cncf project that lets you run",
    "start": "136860",
    "end": "139200"
  },
  {
    "text": "an application locally and makes it",
    "start": "139200",
    "end": "141480"
  },
  {
    "text": "appear as though it runs in a cluster",
    "start": "141480",
    "end": "144840"
  },
  {
    "text": "in my experience that works well if",
    "start": "144840",
    "end": "147420"
  },
  {
    "text": "you're developing locally and running in",
    "start": "147420",
    "end": "149819"
  },
  {
    "text": "one pod but I want to debug an",
    "start": "149819",
    "end": "153060"
  },
  {
    "text": "application that runs in multiple pods",
    "start": "153060",
    "end": "155640"
  },
  {
    "text": "and is already deployed on a cluster",
    "start": "155640",
    "end": "159060"
  },
  {
    "text": "all right let's take a closer look at",
    "start": "159060",
    "end": "161640"
  },
  {
    "text": "two things Cluster API the application I",
    "start": "161640",
    "end": "164280"
  },
  {
    "text": "want to debug and ephemeral containers",
    "start": "164280",
    "end": "167400"
  },
  {
    "text": "the kubernetes feature that helped me",
    "start": "167400",
    "end": "171560"
  },
  {
    "start": "171000",
    "end": "171000"
  },
  {
    "text": "raise your hand if you know cluster API",
    "start": "172680",
    "end": "175440"
  },
  {
    "text": "if you know what it is",
    "start": "175440",
    "end": "177300"
  },
  {
    "text": "okay some of you that's good good okay",
    "start": "177300",
    "end": "181040"
  },
  {
    "text": "so cluster API manages kubernetes",
    "start": "181040",
    "end": "183900"
  },
  {
    "text": "clusters",
    "start": "183900",
    "end": "185099"
  },
  {
    "text": "and it's also a kubernetes application",
    "start": "185099",
    "end": "188220"
  },
  {
    "text": "I've been working with it since its",
    "start": "188220",
    "end": "190620"
  },
  {
    "text": "start in 2018 and two words describe it",
    "start": "190620",
    "end": "194879"
  },
  {
    "text": "complex",
    "start": "194879",
    "end": "197099"
  },
  {
    "text": "and Powerful",
    "start": "197099",
    "end": "198900"
  },
  {
    "text": "it's composed of more than 14",
    "start": "198900",
    "end": "201180"
  },
  {
    "text": "controllers running in more than four",
    "start": "201180",
    "end": "203760"
  },
  {
    "text": "pods",
    "start": "203760",
    "end": "205440"
  },
  {
    "text": "while debugging cluster API I faced most",
    "start": "205440",
    "end": "208319"
  },
  {
    "text": "of the challenges you can expect to face",
    "start": "208319",
    "end": "210800"
  },
  {
    "text": "debugging any kubernetes application",
    "start": "210800",
    "end": "215480"
  },
  {
    "text": "diagram shows the relationships between",
    "start": "217319",
    "end": "219480"
  },
  {
    "text": "some of the some of the cluster apis",
    "start": "219480",
    "end": "221340"
  },
  {
    "text": "custom resources",
    "start": "221340",
    "end": "223019"
  },
  {
    "text": "don't worry about the small font the",
    "start": "223019",
    "end": "225000"
  },
  {
    "text": "details aren't important what's",
    "start": "225000",
    "end": "226739"
  },
  {
    "text": "important is that the relationships are",
    "start": "226739",
    "end": "228840"
  },
  {
    "text": "there they mean that multiple cluster",
    "start": "228840",
    "end": "231900"
  },
  {
    "text": "API controllers work together for",
    "start": "231900",
    "end": "234299"
  },
  {
    "text": "example if you want to add a machine to",
    "start": "234299",
    "end": "237120"
  },
  {
    "text": "a cluster",
    "start": "237120",
    "end": "238319"
  },
  {
    "text": "so I wanted to follow along as these",
    "start": "238319",
    "end": "241680"
  },
  {
    "text": "controllers did their work and to do",
    "start": "241680",
    "end": "244140"
  },
  {
    "text": "that I needed to set breakpoints in",
    "start": "244140",
    "end": "246480"
  },
  {
    "text": "multiple pods",
    "start": "246480",
    "end": "248040"
  },
  {
    "text": "then I heard about ephemeral containers",
    "start": "248040",
    "end": "252019"
  },
  {
    "start": "251000",
    "end": "251000"
  },
  {
    "text": "so I needed to set breakpoints and pods",
    "start": "252239",
    "end": "254220"
  },
  {
    "text": "to do that I needed to run the debugger",
    "start": "254220",
    "end": "256380"
  },
  {
    "text": "in the Pod and I needed to give the",
    "start": "256380",
    "end": "259019"
  },
  {
    "text": "debugger some special privileges",
    "start": "259019",
    "end": "261060"
  },
  {
    "text": "and to be honest I had already done that",
    "start": "261060",
    "end": "263520"
  },
  {
    "text": "a couple years ago but back then I had",
    "start": "263520",
    "end": "267000"
  },
  {
    "text": "to build publish deploy my own cluster",
    "start": "267000",
    "end": "270660"
  },
  {
    "text": "API images just include the debugger",
    "start": "270660",
    "end": "273960"
  },
  {
    "text": "it felt like a lot of work and I didn't",
    "start": "273960",
    "end": "276540"
  },
  {
    "text": "recommend it to others",
    "start": "276540",
    "end": "278880"
  },
  {
    "text": "ephemeral containers let me do what I",
    "start": "278880",
    "end": "281340"
  },
  {
    "text": "need with just a little work and that",
    "start": "281340",
    "end": "284280"
  },
  {
    "text": "makes it easier for you to reproduce",
    "start": "284280",
    "end": "286680"
  },
  {
    "text": "What I've Done",
    "start": "286680",
    "end": "288720"
  },
  {
    "text": "I don't have time to cover effemable",
    "start": "288720",
    "end": "290460"
  },
  {
    "text": "containers in depth today but I strongly",
    "start": "290460",
    "end": "293820"
  },
  {
    "text": "recommend watching the singers believing",
    "start": "293820",
    "end": "296160"
  },
  {
    "text": "talk",
    "start": "296160",
    "end": "298340"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "all right let's see what we can achieve",
    "start": "299340",
    "end": "303780"
  },
  {
    "text": "raise your hand if you've heard of the",
    "start": "303780",
    "end": "306840"
  },
  {
    "text": "demo gods",
    "start": "306840",
    "end": "309540"
  },
  {
    "text": "okay good good okay so the people who",
    "start": "309540",
    "end": "312660"
  },
  {
    "text": "have heard of the demo Gods will",
    "start": "312660",
    "end": "313740"
  },
  {
    "text": "understand why this demo is recorded so",
    "start": "313740",
    "end": "315780"
  },
  {
    "text": "let me uh let me let me perform some",
    "start": "315780",
    "end": "318060"
  },
  {
    "text": "magic",
    "start": "318060",
    "end": "319080"
  },
  {
    "text": "and uh and switch to the video",
    "start": "319080",
    "end": "322639"
  },
  {
    "text": "and",
    "start": "322639",
    "end": "324180"
  },
  {
    "text": "okay",
    "start": "324180",
    "end": "325740"
  },
  {
    "text": "so this is a vs code session",
    "start": "325740",
    "end": "330180"
  },
  {
    "text": "and I'm going to debug processes in",
    "start": "330180",
    "end": "333660"
  },
  {
    "text": "three pods",
    "start": "333660",
    "end": "335280"
  },
  {
    "text": "and the break points that I've set are",
    "start": "335280",
    "end": "337740"
  },
  {
    "text": "going to help us follow along as cluster",
    "start": "337740",
    "end": "340800"
  },
  {
    "text": "API creates a new machine and you can",
    "start": "340800",
    "end": "343320"
  },
  {
    "text": "reproduce this demo yourself",
    "start": "343320",
    "end": "346560"
  },
  {
    "text": "uh there is a link in the slides",
    "start": "346560",
    "end": "349560"
  },
  {
    "text": "and and I hope you do reproduce it",
    "start": "349560",
    "end": "351360"
  },
  {
    "text": "yourself",
    "start": "351360",
    "end": "352320"
  },
  {
    "text": "so",
    "start": "352320",
    "end": "354180"
  },
  {
    "text": "let's start it",
    "start": "354180",
    "end": "356160"
  },
  {
    "text": "in the lower left hand corner I've set",
    "start": "356160",
    "end": "358800"
  },
  {
    "text": "break points in three different",
    "start": "358800",
    "end": "361080"
  },
  {
    "text": "controllers",
    "start": "361080",
    "end": "362820"
  },
  {
    "text": "and I'm attaching the debugger client to",
    "start": "362820",
    "end": "367020"
  },
  {
    "text": "three different pots",
    "start": "367020",
    "end": "370220"
  },
  {
    "text": "foreign",
    "start": "371100",
    "end": "373280"
  },
  {
    "text": "so now I'm going to scale the number of",
    "start": "373919",
    "end": "375960"
  },
  {
    "text": "worker machines in this cluster up by",
    "start": "375960",
    "end": "378900"
  },
  {
    "text": "one and cluster API will go to work to",
    "start": "378900",
    "end": "381600"
  },
  {
    "text": "create a new machine",
    "start": "381600",
    "end": "383280"
  },
  {
    "text": "first",
    "start": "383280",
    "end": "385199"
  },
  {
    "text": "we're going to get stopped at a break",
    "start": "385199",
    "end": "386639"
  },
  {
    "text": "point in a controller that creates some",
    "start": "386639",
    "end": "388860"
  },
  {
    "text": "data that is used to run on the machine",
    "start": "388860",
    "end": "391380"
  },
  {
    "text": "at first Boot and then I continue",
    "start": "391380",
    "end": "394560"
  },
  {
    "text": "and then we stop at another breakpoint",
    "start": "394560",
    "end": "397979"
  },
  {
    "text": "in another controller in a second pod",
    "start": "397979",
    "end": "401340"
  },
  {
    "text": "and this one is actually what creates",
    "start": "401340",
    "end": "403500"
  },
  {
    "text": "the machine itself in this case it's a",
    "start": "403500",
    "end": "405180"
  },
  {
    "text": "Docker container",
    "start": "405180",
    "end": "407400"
  },
  {
    "text": "and then I continue",
    "start": "407400",
    "end": "409139"
  },
  {
    "text": "and it takes a little bit for the",
    "start": "409139",
    "end": "411060"
  },
  {
    "text": "machine to get created but then we end",
    "start": "411060",
    "end": "413100"
  },
  {
    "text": "up",
    "start": "413100",
    "end": "413880"
  },
  {
    "text": "add a third breakpoint and a third",
    "start": "413880",
    "end": "416100"
  },
  {
    "text": "controller third pod and this one is",
    "start": "416100",
    "end": "419520"
  },
  {
    "text": "responsible for",
    "start": "419520",
    "end": "421160"
  },
  {
    "text": "reconciling some some metadata",
    "start": "421160",
    "end": "423300"
  },
  {
    "text": "associating the new node when the",
    "start": "423300",
    "end": "425160"
  },
  {
    "text": "machine joined the cluster there's a new",
    "start": "425160",
    "end": "426780"
  },
  {
    "text": "node resource and we want to make sure",
    "start": "426780",
    "end": "428340"
  },
  {
    "text": "that it's associated with the cluster",
    "start": "428340",
    "end": "430199"
  },
  {
    "text": "API machine resource",
    "start": "430199",
    "end": "433520"
  },
  {
    "text": "so",
    "start": "434819",
    "end": "437479"
  },
  {
    "text": "see",
    "start": "439259",
    "end": "440400"
  },
  {
    "text": "aha",
    "start": "440400",
    "end": "441780"
  },
  {
    "text": "all right",
    "start": "441780",
    "end": "443220"
  },
  {
    "text": "so",
    "start": "443220",
    "end": "445560"
  },
  {
    "text": "I hope that",
    "start": "445560",
    "end": "448500"
  },
  {
    "text": "you thought that was cool like that that",
    "start": "448500",
    "end": "450419"
  },
  {
    "text": "is what's possible",
    "start": "450419",
    "end": "453500"
  },
  {
    "text": "and if I can only find my mouse pointer",
    "start": "453620",
    "end": "458460"
  },
  {
    "start": "457000",
    "end": "457000"
  },
  {
    "text": "um",
    "start": "458460",
    "end": "459419"
  },
  {
    "text": "so to make all this work I have to solve",
    "start": "459419",
    "end": "462539"
  },
  {
    "text": "a few challenges so let's go through",
    "start": "462539",
    "end": "464759"
  },
  {
    "text": "them",
    "start": "464759",
    "end": "465780"
  },
  {
    "text": "some of the examples you'll see are",
    "start": "465780",
    "end": "467940"
  },
  {
    "text": "related to Cluster API and it's go",
    "start": "467940",
    "end": "470160"
  },
  {
    "text": "implementation",
    "start": "470160",
    "end": "471419"
  },
  {
    "text": "but the challenges apply to any",
    "start": "471419",
    "end": "473759"
  },
  {
    "text": "kubernetes application especially",
    "start": "473759",
    "end": "475800"
  },
  {
    "text": "compiled ones",
    "start": "475800",
    "end": "478819"
  },
  {
    "start": "479000",
    "end": "479000"
  },
  {
    "text": "so this is the starting point okay we've",
    "start": "479039",
    "end": "481440"
  },
  {
    "text": "got",
    "start": "481440",
    "end": "482220"
  },
  {
    "text": "our debug client local machine or source",
    "start": "482220",
    "end": "484680"
  },
  {
    "text": "code and then we've got a node and a pod",
    "start": "484680",
    "end": "487020"
  },
  {
    "text": "and then our Target container okay",
    "start": "487020",
    "end": "490560"
  },
  {
    "text": "first challenge",
    "start": "490560",
    "end": "492240"
  },
  {
    "start": "491000",
    "end": "491000"
  },
  {
    "text": "there's no debugger in the pod",
    "start": "492240",
    "end": "494280"
  },
  {
    "text": "the debugger needs to run in the same",
    "start": "494280",
    "end": "496080"
  },
  {
    "text": "process name space as its Target",
    "start": "496080",
    "end": "499199"
  },
  {
    "text": "I could just run it in the container",
    "start": "499199",
    "end": "501720"
  },
  {
    "text": "if it had the debugger executable maybe",
    "start": "501720",
    "end": "504780"
  },
  {
    "text": "a shell some other utilities but it",
    "start": "504780",
    "end": "507300"
  },
  {
    "text": "doesn't",
    "start": "507300",
    "end": "508020"
  },
  {
    "text": "that's good",
    "start": "508020",
    "end": "509639"
  },
  {
    "text": "you don't want those in the container",
    "start": "509639",
    "end": "511560"
  },
  {
    "text": "image they're not application",
    "start": "511560",
    "end": "513060"
  },
  {
    "text": "dependencies so they waste space most of",
    "start": "513060",
    "end": "515279"
  },
  {
    "text": "the time",
    "start": "515279",
    "end": "516300"
  },
  {
    "text": "if they have any cves you're going to",
    "start": "516300",
    "end": "519240"
  },
  {
    "text": "get false positives on a cve scan",
    "start": "519240",
    "end": "522060"
  },
  {
    "text": "I think you know the drill",
    "start": "522060",
    "end": "524279"
  },
  {
    "text": "so what can we do we can build an image",
    "start": "524279",
    "end": "527279"
  },
  {
    "text": "with the debugger executable a shell",
    "start": "527279",
    "end": "529260"
  },
  {
    "text": "whatever we need we can create an",
    "start": "529260",
    "end": "531360"
  },
  {
    "text": "ephemeral container in the Pod and use",
    "start": "531360",
    "end": "533760"
  },
  {
    "text": "everything in our image",
    "start": "533760",
    "end": "537140"
  },
  {
    "text": "here's the debugger image I used it's",
    "start": "537240",
    "end": "539700"
  },
  {
    "text": "got the delve debugger for the go",
    "start": "539700",
    "end": "541800"
  },
  {
    "text": "language it's based on an Alpine Linux",
    "start": "541800",
    "end": "544320"
  },
  {
    "text": "image so it has lots of utilities",
    "start": "544320",
    "end": "545700"
  },
  {
    "text": "including a shell",
    "start": "545700",
    "end": "547140"
  },
  {
    "text": "and I've included some other utilities",
    "start": "547140",
    "end": "549420"
  },
  {
    "text": "for working with executables and debug",
    "start": "549420",
    "end": "551760"
  },
  {
    "text": "information",
    "start": "551760",
    "end": "554000"
  },
  {
    "text": "after I built my debugger image I",
    "start": "555899",
    "end": "558600"
  },
  {
    "text": "created an ephemeral container in my pod",
    "start": "558600",
    "end": "562380"
  },
  {
    "text": "I gave it the name debugger so I could",
    "start": "562380",
    "end": "564420"
  },
  {
    "text": "refer to that when I ran Coupe cuddle",
    "start": "564420",
    "end": "566220"
  },
  {
    "text": "exec for example",
    "start": "566220",
    "end": "568740"
  },
  {
    "text": "the ephemeral container shares the",
    "start": "568740",
    "end": "570839"
  },
  {
    "text": "process namespace of my target container",
    "start": "570839",
    "end": "574019"
  },
  {
    "text": "ordinary containers cannot share a",
    "start": "574019",
    "end": "576180"
  },
  {
    "text": "process namespace",
    "start": "576180",
    "end": "578040"
  },
  {
    "text": "on the other hand ephemeral containers",
    "start": "578040",
    "end": "580320"
  },
  {
    "text": "cannot be restarted or replaced so once",
    "start": "580320",
    "end": "584279"
  },
  {
    "text": "the last process in the container stops",
    "start": "584279",
    "end": "586380"
  },
  {
    "text": "you need to create a new effemable",
    "start": "586380",
    "end": "588120"
  },
  {
    "text": "container with a new name that can be",
    "start": "588120",
    "end": "590580"
  },
  {
    "text": "inconvenient",
    "start": "590580",
    "end": "591720"
  },
  {
    "text": "for that reason I used sleep to keep the",
    "start": "591720",
    "end": "595260"
  },
  {
    "text": "container running and then used Coupe",
    "start": "595260",
    "end": "596880"
  },
  {
    "text": "cuddle exec to round more processes in",
    "start": "596880",
    "end": "599700"
  },
  {
    "text": "it",
    "start": "599700",
    "end": "601800"
  },
  {
    "text": "so this is what the environment looks",
    "start": "601800",
    "end": "604560"
  },
  {
    "text": "like now right we've got an inframible",
    "start": "604560",
    "end": "606240"
  },
  {
    "text": "container with our debugger",
    "start": "606240",
    "end": "608160"
  },
  {
    "text": "all right are we done",
    "start": "608160",
    "end": "610080"
  },
  {
    "start": "610000",
    "end": "610000"
  },
  {
    "text": "well",
    "start": "610080",
    "end": "611220"
  },
  {
    "text": "not quite once I had my femoral",
    "start": "611220",
    "end": "613320"
  },
  {
    "text": "container I ran my debugger and",
    "start": "613320",
    "end": "615360"
  },
  {
    "text": "it wouldn't attach",
    "start": "615360",
    "end": "617459"
  },
  {
    "text": "after reading the documentation looking",
    "start": "617459",
    "end": "619320"
  },
  {
    "text": "at the pot events I realized the",
    "start": "619320",
    "end": "621360"
  },
  {
    "text": "debugger container had inherited the",
    "start": "621360",
    "end": "623580"
  },
  {
    "text": "pods restrictive security context",
    "start": "623580",
    "end": "626339"
  },
  {
    "text": "the debugger needs the p-trace",
    "start": "626339",
    "end": "629279"
  },
  {
    "text": "capability and to run as rude or with",
    "start": "629279",
    "end": "632880"
  },
  {
    "text": "the user ID of the target process",
    "start": "632880",
    "end": "636560"
  },
  {
    "text": "the solution seemed straightforward",
    "start": "636779",
    "end": "640080"
  },
  {
    "text": "first I defined a security context for",
    "start": "640080",
    "end": "642540"
  },
  {
    "text": "my debugger container giving it the",
    "start": "642540",
    "end": "644820"
  },
  {
    "text": "cispy trays capability",
    "start": "644820",
    "end": "647579"
  },
  {
    "text": "second I allowed the debugger to run as",
    "start": "647579",
    "end": "649980"
  },
  {
    "text": "root",
    "start": "649980",
    "end": "651180"
  },
  {
    "text": "I could have also run the debugger with",
    "start": "651180",
    "end": "653339"
  },
  {
    "text": "the user ID of the target process but I",
    "start": "653339",
    "end": "656100"
  },
  {
    "text": "didn't want to take the extra step of",
    "start": "656100",
    "end": "657839"
  },
  {
    "text": "matching the user ID which I don't know",
    "start": "657839",
    "end": "660180"
  },
  {
    "text": "ahead of time necessarily and it was",
    "start": "660180",
    "end": "662579"
  },
  {
    "text": "more convenient to use the root user",
    "start": "662579",
    "end": "664680"
  },
  {
    "text": "with the Alpine Linux image",
    "start": "664680",
    "end": "668240"
  },
  {
    "text": "so",
    "start": "669420",
    "end": "670680"
  },
  {
    "text": "on at least one node where I did this",
    "start": "670680",
    "end": "673320"
  },
  {
    "text": "the error",
    "start": "673320",
    "end": "674700"
  },
  {
    "text": "didn't go away and I discovered that the",
    "start": "674700",
    "end": "678360"
  },
  {
    "text": "Yama kernel module that was running on",
    "start": "678360",
    "end": "680940"
  },
  {
    "text": "that node was denying the debugger's",
    "start": "680940",
    "end": "683880"
  },
  {
    "text": "p-trace system call",
    "start": "683880",
    "end": "686700"
  },
  {
    "text": "so because I had privileged access to",
    "start": "686700",
    "end": "689820"
  },
  {
    "text": "that node I could reconfigure the module",
    "start": "689820",
    "end": "692279"
  },
  {
    "text": "just something to watch out for",
    "start": "692279",
    "end": "695279"
  },
  {
    "text": "and finally",
    "start": "695279",
    "end": "697079"
  },
  {
    "text": "today it isn't that easy to set the",
    "start": "697079",
    "end": "700860"
  },
  {
    "text": "security context on your ephemeral",
    "start": "700860",
    "end": "702300"
  },
  {
    "text": "container",
    "start": "702300",
    "end": "703320"
  },
  {
    "text": "it's not yet supported by the coupe",
    "start": "703320",
    "end": "705959"
  },
  {
    "text": "cuddle debug CLI command you have to",
    "start": "705959",
    "end": "709320"
  },
  {
    "text": "send an HTTP request to the API server",
    "start": "709320",
    "end": "712820"
  },
  {
    "text": "or patch the the coupe cuddle CLI",
    "start": "712820",
    "end": "717540"
  },
  {
    "text": "to do it in a slightly different way but",
    "start": "717540",
    "end": "719160"
  },
  {
    "text": "it will be easier in the future",
    "start": "719160",
    "end": "723019"
  },
  {
    "text": "all right so this is where we are now",
    "start": "723360",
    "end": "725279"
  },
  {
    "text": "we've got a debugger in our pod we're",
    "start": "725279",
    "end": "727740"
  },
  {
    "text": "attaching to The Container to their",
    "start": "727740",
    "end": "730140"
  },
  {
    "text": "target process",
    "start": "730140",
    "end": "732740"
  },
  {
    "start": "731000",
    "end": "731000"
  },
  {
    "text": "even after you give the debugger the",
    "start": "733440",
    "end": "735899"
  },
  {
    "text": "right capability and user ID it may fail",
    "start": "735899",
    "end": "738000"
  },
  {
    "text": "to attach if you see this error it means",
    "start": "738000",
    "end": "740760"
  },
  {
    "text": "executable does not have debug info",
    "start": "740760",
    "end": "742980"
  },
  {
    "text": "which the debugger needs to understand",
    "start": "742980",
    "end": "744839"
  },
  {
    "text": "the structure of a compiled program so",
    "start": "744839",
    "end": "747540"
  },
  {
    "text": "interpreted languages are not affected",
    "start": "747540",
    "end": "750480"
  },
  {
    "text": "fortunately for me cluster API",
    "start": "750480",
    "end": "752700"
  },
  {
    "text": "Publishers executables with their debug",
    "start": "752700",
    "end": "755760"
  },
  {
    "text": "info thank you",
    "start": "755760",
    "end": "757500"
  },
  {
    "text": "other projects remove it for example",
    "start": "757500",
    "end": "759720"
  },
  {
    "text": "debug info is not in the kubernetes API",
    "start": "759720",
    "end": "763680"
  },
  {
    "text": "server controller manager and scheduler",
    "start": "763680",
    "end": "766500"
  },
  {
    "text": "executables",
    "start": "766500",
    "end": "769500"
  },
  {
    "text": "if your target executable does not have",
    "start": "770100",
    "end": "772260"
  },
  {
    "text": "debug info",
    "start": "772260",
    "end": "773639"
  },
  {
    "text": "you may be able to provide it yourself",
    "start": "773639",
    "end": "777860"
  },
  {
    "text": "sometimes that debug info is published",
    "start": "779100",
    "end": "780899"
  },
  {
    "text": "separately if it is use that if it's not",
    "start": "780899",
    "end": "783839"
  },
  {
    "text": "create it the debug info must match the",
    "start": "783839",
    "end": "787019"
  },
  {
    "text": "executable in the Pod so you'll have to",
    "start": "787019",
    "end": "789120"
  },
  {
    "text": "build your own executable from the same",
    "start": "789120",
    "end": "791880"
  },
  {
    "text": "source code revision using the same",
    "start": "791880",
    "end": "794100"
  },
  {
    "text": "compiler and Linker used to build the",
    "start": "794100",
    "end": "796860"
  },
  {
    "text": "executable in the pod",
    "start": "796860",
    "end": "799079"
  },
  {
    "text": "then you can extract the debug info to",
    "start": "799079",
    "end": "803820"
  },
  {
    "text": "its own file and that's what I've done",
    "start": "803820",
    "end": "806100"
  },
  {
    "text": "here with this",
    "start": "806100",
    "end": "807360"
  },
  {
    "text": "uh with this command line utility",
    "start": "807360",
    "end": "811579"
  },
  {
    "text": "after you've got that debug info you can",
    "start": "812459",
    "end": "814740"
  },
  {
    "text": "copy it into the Container so that the",
    "start": "814740",
    "end": "816839"
  },
  {
    "text": "debugger can read it",
    "start": "816839",
    "end": "819800"
  },
  {
    "text": "and finally you'll need to add a special",
    "start": "820079",
    "end": "822240"
  },
  {
    "text": "link to help the debugger find this",
    "start": "822240",
    "end": "824220"
  },
  {
    "text": "debug info",
    "start": "824220",
    "end": "826320"
  },
  {
    "text": "now you may be wondering containers in a",
    "start": "826320",
    "end": "829620"
  },
  {
    "text": "pod don't share a mountain name space",
    "start": "829620",
    "end": "831600"
  },
  {
    "text": "and don't see one another's root file",
    "start": "831600",
    "end": "833880"
  },
  {
    "text": "systems how is he able to write to the",
    "start": "833880",
    "end": "835920"
  },
  {
    "text": "executable in another container and",
    "start": "835920",
    "end": "838920"
  },
  {
    "text": "that's thanks to the proc pseudo file",
    "start": "838920",
    "end": "840720"
  },
  {
    "text": "system the proc slash PID slash root",
    "start": "840720",
    "end": "844980"
  },
  {
    "text": "path provides the same view of the file",
    "start": "844980",
    "end": "847560"
  },
  {
    "text": "system that the process would that pit",
    "start": "847560",
    "end": "850079"
  },
  {
    "text": "has",
    "start": "850079",
    "end": "850980"
  },
  {
    "text": "so here process one is the example",
    "start": "850980",
    "end": "852899"
  },
  {
    "text": "process",
    "start": "852899",
    "end": "853920"
  },
  {
    "text": "the debugger container has the CIS",
    "start": "853920",
    "end": "856260"
  },
  {
    "text": "p-trace capability which allows it",
    "start": "856260",
    "end": "859139"
  },
  {
    "text": "access to this special path",
    "start": "859139",
    "end": "863240"
  },
  {
    "text": "so I've only tested this with go",
    "start": "864540",
    "end": "867180"
  },
  {
    "text": "executables but the principles are the",
    "start": "867180",
    "end": "869940"
  },
  {
    "text": "same for other compiled languages",
    "start": "869940",
    "end": "873480"
  },
  {
    "text": "so this is what our environment looks",
    "start": "873480",
    "end": "874920"
  },
  {
    "text": "like now",
    "start": "874920",
    "end": "876120"
  },
  {
    "text": "okay we've got that debug info there",
    "start": "876120",
    "end": "879899"
  },
  {
    "text": "all right",
    "start": "879899",
    "end": "881279"
  },
  {
    "start": "880000",
    "end": "880000"
  },
  {
    "text": "once the debugger found the debug info",
    "start": "881279",
    "end": "883680"
  },
  {
    "text": "it attached to the process",
    "start": "883680",
    "end": "885899"
  },
  {
    "text": "but now I was debugging in a terminal",
    "start": "885899",
    "end": "888360"
  },
  {
    "text": "and I want to debugging vs code",
    "start": "888360",
    "end": "891600"
  },
  {
    "text": "it's called remote debugging and it",
    "start": "891600",
    "end": "893399"
  },
  {
    "text": "usually works with a client connected to",
    "start": "893399",
    "end": "895740"
  },
  {
    "text": "a server using TCP or UDP",
    "start": "895740",
    "end": "899699"
  },
  {
    "text": "the Pod didn't expose ports I could use",
    "start": "899699",
    "end": "902880"
  },
  {
    "text": "for this connection and ephemeral",
    "start": "902880",
    "end": "904920"
  },
  {
    "text": "containers can't expose ports",
    "start": "904920",
    "end": "908839"
  },
  {
    "text": "I had a few options but the best by far",
    "start": "908880",
    "end": "911699"
  },
  {
    "text": "was the port forward API which allows",
    "start": "911699",
    "end": "914699"
  },
  {
    "text": "you to forward TCP from your machine to",
    "start": "914699",
    "end": "917760"
  },
  {
    "text": "any port in a pod and it works by",
    "start": "917760",
    "end": "920399"
  },
  {
    "text": "encapsulating TCP packets in Speedy",
    "start": "920399",
    "end": "923519"
  },
  {
    "text": "streams goes via the kubernetes API",
    "start": "923519",
    "end": "926220"
  },
  {
    "text": "server and the kublet on that pod",
    "start": "926220",
    "end": "930199"
  },
  {
    "text": "so this is what the environment looks",
    "start": "931560",
    "end": "934079"
  },
  {
    "text": "like now I've got a tunnel to my debug",
    "start": "934079",
    "end": "938160"
  },
  {
    "text": "container",
    "start": "938160",
    "end": "940800"
  },
  {
    "start": "940000",
    "end": "940000"
  },
  {
    "text": "all right I finally had remote debugging",
    "start": "940800",
    "end": "942839"
  },
  {
    "text": "working and I was excited I started to",
    "start": "942839",
    "end": "944519"
  },
  {
    "text": "set break points",
    "start": "944519",
    "end": "946740"
  },
  {
    "text": "and none of them worked",
    "start": "946740",
    "end": "949260"
  },
  {
    "text": "the break points identified lines in",
    "start": "949260",
    "end": "953100"
  },
  {
    "text": "source code stored at paths on my",
    "start": "953100",
    "end": "956279"
  },
  {
    "text": "machine",
    "start": "956279",
    "end": "957540"
  },
  {
    "text": "the executable was built on a different",
    "start": "957540",
    "end": "960779"
  },
  {
    "text": "machine",
    "start": "960779",
    "end": "961920"
  },
  {
    "text": "which use different paths and so it's",
    "start": "961920",
    "end": "965160"
  },
  {
    "text": "debug info had those paths and the",
    "start": "965160",
    "end": "968519"
  },
  {
    "text": "debugger had no idea what to do with my",
    "start": "968519",
    "end": "971040"
  },
  {
    "text": "source code paths",
    "start": "971040",
    "end": "973880"
  },
  {
    "text": "I could provide the debugger with a map",
    "start": "974699",
    "end": "977279"
  },
  {
    "text": "to help it match my break point",
    "start": "977279",
    "end": "980100"
  },
  {
    "text": "locations with the debug info",
    "start": "980100",
    "end": "983040"
  },
  {
    "text": "I had no idea what the right map looked",
    "start": "983040",
    "end": "986339"
  },
  {
    "text": "like because I didn't know the paths in",
    "start": "986339",
    "end": "989279"
  },
  {
    "text": "the debug info so I looked them up",
    "start": "989279",
    "end": "993600"
  },
  {
    "text": "the read Health utility can list the",
    "start": "993600",
    "end": "995760"
  },
  {
    "text": "source paths and the debug info",
    "start": "995760",
    "end": "1000100"
  },
  {
    "text": "I read through the paths and found a",
    "start": "1002480",
    "end": "1004699"
  },
  {
    "text": "pattern that I was fairly confident in",
    "start": "1004699",
    "end": "1006740"
  },
  {
    "text": "and based on that pattern I made a map",
    "start": "1006740",
    "end": "1008720"
  },
  {
    "text": "and I gave it to the debugger",
    "start": "1008720",
    "end": "1012199"
  },
  {
    "text": "so for example on on my machine if I had",
    "start": "1012199",
    "end": "1015800"
  },
  {
    "text": "something in my home directory example",
    "start": "1015800",
    "end": "1017660"
  },
  {
    "text": "project example go in the debug info",
    "start": "1017660",
    "end": "1021199"
  },
  {
    "text": "that actually would be stored under a",
    "start": "1021199",
    "end": "1024798"
  },
  {
    "text": "path of the module and its version and",
    "start": "1024799",
    "end": "1029540"
  },
  {
    "text": "then the source file",
    "start": "1029540",
    "end": "1032620"
  },
  {
    "text": "so finally",
    "start": "1035799",
    "end": "1038720"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "let's recap",
    "start": "1038720",
    "end": "1040819"
  },
  {
    "text": "okay",
    "start": "1040819",
    "end": "1042260"
  },
  {
    "text": "one we created the debugger container",
    "start": "1042260",
    "end": "1046220"
  },
  {
    "text": "two gave it the CIS P Trace capability",
    "start": "1046220",
    "end": "1049600"
  },
  {
    "text": "three created and uploaded the debug",
    "start": "1049600",
    "end": "1052700"
  },
  {
    "text": "info if we needed to four created a",
    "start": "1052700",
    "end": "1056120"
  },
  {
    "text": "tunnel for the debugger client to reach",
    "start": "1056120",
    "end": "1057679"
  },
  {
    "text": "the server",
    "start": "1057679",
    "end": "1058760"
  },
  {
    "text": "and five showed the debugger how to",
    "start": "1058760",
    "end": "1061160"
  },
  {
    "text": "translate the local source code paths to",
    "start": "1061160",
    "end": "1063559"
  },
  {
    "text": "the paths in the debug info",
    "start": "1063559",
    "end": "1068500"
  },
  {
    "start": "1068000",
    "end": "1068000"
  },
  {
    "text": "so at this point",
    "start": "1068780",
    "end": "1070340"
  },
  {
    "text": "I was happily setting breakpoints in",
    "start": "1070340",
    "end": "1072140"
  },
  {
    "text": "cluster API",
    "start": "1072140",
    "end": "1074360"
  },
  {
    "text": "when I noticed my debug sessions would",
    "start": "1074360",
    "end": "1077120"
  },
  {
    "text": "mysteriously",
    "start": "1077120",
    "end": "1078860"
  },
  {
    "text": "stop",
    "start": "1078860",
    "end": "1080960"
  },
  {
    "text": "looking at the pot events I found kublic",
    "start": "1080960",
    "end": "1083660"
  },
  {
    "text": "was stopping the target containers",
    "start": "1083660",
    "end": "1085880"
  },
  {
    "text": "because they weren't responding to",
    "start": "1085880",
    "end": "1087440"
  },
  {
    "text": "liveness probes while I was at a break",
    "start": "1087440",
    "end": "1089480"
  },
  {
    "text": "point",
    "start": "1089480",
    "end": "1091720"
  },
  {
    "text": "when I removed the liveness probes I",
    "start": "1092720",
    "end": "1094700"
  },
  {
    "text": "noticed that the debug sessions would",
    "start": "1094700",
    "end": "1096620"
  },
  {
    "text": "still stop but now just after I resumed",
    "start": "1096620",
    "end": "1101539"
  },
  {
    "text": "execution after stopping at a break",
    "start": "1101539",
    "end": "1103640"
  },
  {
    "text": "point",
    "start": "1103640",
    "end": "1104480"
  },
  {
    "text": "so I looked at the Pod logs and found",
    "start": "1104480",
    "end": "1107179"
  },
  {
    "text": "that the controllers were losing leader",
    "start": "1107179",
    "end": "1109340"
  },
  {
    "text": "election while I was at a break point",
    "start": "1109340",
    "end": "1111500"
  },
  {
    "text": "and were terminating them ourselves",
    "start": "1111500",
    "end": "1114080"
  },
  {
    "text": "when they resumed execution",
    "start": "1114080",
    "end": "1117760"
  },
  {
    "text": "finally cluster API controllers make",
    "start": "1117860",
    "end": "1120740"
  },
  {
    "text": "kubernetes API requests and I noticed",
    "start": "1120740",
    "end": "1123980"
  },
  {
    "text": "those requests often fail as I step",
    "start": "1123980",
    "end": "1126919"
  },
  {
    "text": "through the code",
    "start": "1126919",
    "end": "1128840"
  },
  {
    "text": "I found that the requests were being",
    "start": "1128840",
    "end": "1130880"
  },
  {
    "text": "sent to admission web hooks",
    "start": "1130880",
    "end": "1133460"
  },
  {
    "text": "these web hooks ran in the same process",
    "start": "1133460",
    "end": "1135380"
  },
  {
    "text": "as the controller and they weren't",
    "start": "1135380",
    "end": "1137419"
  },
  {
    "text": "responding while I was at a break point",
    "start": "1137419",
    "end": "1140419"
  },
  {
    "text": "worse the Readiness probes eventually",
    "start": "1140419",
    "end": "1142820"
  },
  {
    "text": "failed and the requests were not even",
    "start": "1142820",
    "end": "1145220"
  },
  {
    "text": "reaching the web hooks",
    "start": "1145220",
    "end": "1148700"
  },
  {
    "text": "so these challenges may or may not apply",
    "start": "1148700",
    "end": "1151100"
  },
  {
    "text": "to your kubernetes application but I",
    "start": "1151100",
    "end": "1153860"
  },
  {
    "text": "wanted to mention them all the same",
    "start": "1153860",
    "end": "1156380"
  },
  {
    "text": "in my case I disabled leader election",
    "start": "1156380",
    "end": "1158500"
  },
  {
    "text": "removed the liveness and Readiness",
    "start": "1158500",
    "end": "1160820"
  },
  {
    "text": "probes and to do that I did have to make",
    "start": "1160820",
    "end": "1163760"
  },
  {
    "text": "a small change to the cluster API",
    "start": "1163760",
    "end": "1165559"
  },
  {
    "text": "deployment",
    "start": "1165559",
    "end": "1166760"
  },
  {
    "text": "and I could have avoided that",
    "start": "1166760",
    "end": "1168860"
  },
  {
    "text": "by using log points",
    "start": "1168860",
    "end": "1170960"
  },
  {
    "text": "but I really wanted to step through the",
    "start": "1170960",
    "end": "1173120"
  },
  {
    "text": "code",
    "start": "1173120",
    "end": "1175240"
  },
  {
    "text": "so there's still work left to do first",
    "start": "1176960",
    "end": "1180980"
  },
  {
    "text": "to add support to profiles to Coupe",
    "start": "1180980",
    "end": "1184220"
  },
  {
    "text": "cuddle debug so that users can get",
    "start": "1184220",
    "end": "1188059"
  },
  {
    "text": "defaults for a security context that",
    "start": "1188059",
    "end": "1190940"
  },
  {
    "text": "will work for attaching a debugger to a",
    "start": "1190940",
    "end": "1194240"
  },
  {
    "text": "process for example",
    "start": "1194240",
    "end": "1196700"
  },
  {
    "text": "and I think there's also work left to be",
    "start": "1196700",
    "end": "1199220"
  },
  {
    "text": "done",
    "start": "1199220",
    "end": "1201080"
  },
  {
    "text": "to make it easier to get the debug info",
    "start": "1201080",
    "end": "1203780"
  },
  {
    "text": "of a containerized application",
    "start": "1203780",
    "end": "1207940"
  },
  {
    "text": "in the Linux distro system package space",
    "start": "1208039",
    "end": "1211160"
  },
  {
    "text": "there is something called debug info d",
    "start": "1211160",
    "end": "1214580"
  },
  {
    "text": "but I'm not sure that that solution fits",
    "start": "1214580",
    "end": "1217220"
  },
  {
    "text": "well for containerized applications",
    "start": "1217220",
    "end": "1221059"
  },
  {
    "text": "maybe there's something simple we could",
    "start": "1221059",
    "end": "1222919"
  },
  {
    "text": "do",
    "start": "1222919",
    "end": "1223820"
  },
  {
    "text": "like deciding on a convention where we",
    "start": "1223820",
    "end": "1225980"
  },
  {
    "text": "have an image with the suffix Dash debug",
    "start": "1225980",
    "end": "1232460"
  },
  {
    "text": "TBD",
    "start": "1232460",
    "end": "1235160"
  },
  {
    "start": "1234000",
    "end": "1234000"
  },
  {
    "text": "so finally a call to action",
    "start": "1235160",
    "end": "1237440"
  },
  {
    "text": "for all of you in here",
    "start": "1237440",
    "end": "1239480"
  },
  {
    "text": "set break points in your kubernetes",
    "start": "1239480",
    "end": "1242179"
  },
  {
    "text": "applications",
    "start": "1242179",
    "end": "1243500"
  },
  {
    "text": "learn to do it and feel confident in in",
    "start": "1243500",
    "end": "1247160"
  },
  {
    "text": "being able to do it and teach others",
    "start": "1247160",
    "end": "1250820"
  },
  {
    "text": "if you've got any questions if you want",
    "start": "1250820",
    "end": "1252500"
  },
  {
    "text": "to collaborate on this topic",
    "start": "1252500",
    "end": "1255380"
  },
  {
    "text": "reach out to me Dela pavesky on",
    "start": "1255380",
    "end": "1257240"
  },
  {
    "text": "kubernetes slack I'll be at the day 2 IQ",
    "start": "1257240",
    "end": "1259340"
  },
  {
    "text": "Booth tomorrow morning",
    "start": "1259340",
    "end": "1261320"
  },
  {
    "text": "um yeah I just want to say you know",
    "start": "1261320",
    "end": "1263780"
  },
  {
    "text": "thank you all for coming thank you to my",
    "start": "1263780",
    "end": "1265880"
  },
  {
    "text": "uh to my wife and son my day two IQ",
    "start": "1265880",
    "end": "1267980"
  },
  {
    "text": "colleagues and a lot of people uh that",
    "start": "1267980",
    "end": "1270980"
  },
  {
    "text": "maintain uh the software that I use to",
    "start": "1270980",
    "end": "1275179"
  },
  {
    "text": "um yeah to get this work done so",
    "start": "1275179",
    "end": "1280000"
  },
  {
    "text": "[Music]",
    "start": "1281510",
    "end": "1284940"
  },
  {
    "text": "if you have any questions and there's",
    "start": "1285679",
    "end": "1288440"
  },
  {
    "text": "time left for questions fortunately uh",
    "start": "1288440",
    "end": "1291679"
  },
  {
    "text": "there are mics at the uh on both sides",
    "start": "1291679",
    "end": "1295280"
  },
  {
    "text": "um but yeah otherwise and if you've got",
    "start": "1295280",
    "end": "1297140"
  },
  {
    "text": "any feedback",
    "start": "1297140",
    "end": "1299600"
  },
  {
    "text": "scan the scan the QR code",
    "start": "1299600",
    "end": "1303340"
  },
  {
    "text": "and thanks again",
    "start": "1303559",
    "end": "1306340"
  },
  {
    "text": "[Applause]",
    "start": "1307850",
    "end": "1312910"
  }
]