[
  {
    "start": "15000",
    "end": "15000"
  },
  {
    "text": "[Music]",
    "start": "42820",
    "end": "45939"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "as a trainer so unless didn't give you a few seconds to as people heard some of",
    "start": "69580",
    "end": "75910"
  },
  {
    "text": "the main bullet points there was possible",
    "start": "75910",
    "end": "80970"
  },
  {
    "text": "Signature Edition also defines a number of games which write explicitly out of",
    "start": "86290",
    "end": "91300"
  },
  {
    "text": "scope for instrumentation",
    "start": "91300",
    "end": "96930"
  },
  {
    "text": "so I have done my best to summarize the",
    "start": "103280",
    "end": "109100"
  },
  {
    "text": "basic principles of signature vision here and on the based on the face value",
    "start": "109100",
    "end": "115369"
  },
  {
    "text": "of things these days big sentence fragments in tradition this",
    "start": "115369",
    "end": "123340"
  },
  {
    "text": "multiplied these guidelines it's",
    "start": "123909",
    "end": "129979"
  },
  {
    "text": "supposed to review instrumentation code [Music]",
    "start": "129979",
    "end": "137680"
  },
  {
    "text": "rights the inspiration people are not necessarily experts in all things are",
    "start": "137769",
    "end": "152330"
  },
  {
    "text": "very complicated things and just because one is historically because the people",
    "start": "152330",
    "end": "168890"
  },
  {
    "text": "who are recommended actually not",
    "start": "168890",
    "end": "173049"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "and since every chart looks very bad this one you guys because he's a comment",
    "start": "182870",
    "end": "190410"
  },
  {
    "text": "this is the stomach makes me a little bit up inside all that says always",
    "start": "190410",
    "end": "196650"
  },
  {
    "text": "during the resource version in the metric and you can see those metrics",
    "start": "196650",
    "end": "221120"
  },
  {
    "text": "1210 here you can see we need spirit finally something feminine whatsit",
    "start": "232670",
    "end": "241280"
  },
  {
    "text": "cardinality vicious it's certainly above it so that basically we could tell",
    "start": "241280",
    "end": "247050"
  },
  {
    "text": "whether it was over eight sometimes",
    "start": "247050",
    "end": "254600"
  },
  {
    "text": "so there's sort of the so",
    "start": "264840",
    "end": "325260"
  },
  {
    "start": "332000",
    "end": "332000"
  },
  {
    "text": "so it's just consistent with the way I'm",
    "start": "360959",
    "end": "420489"
  },
  {
    "start": "398000",
    "end": "398000"
  },
  {
    "text": "at least explicitly telling users what they're getting angry right but the obvious drawback of this is the",
    "start": "420489",
    "end": "427360"
  },
  {
    "text": "Jai has all the trans features so this is clearly better things to do other",
    "start": "427360",
    "end": "433490"
  },
  {
    "text": "ideas that we've thought of the past but and the pursuit was what was a confrontation image that has all the",
    "start": "433490",
    "end": "441080"
  },
  {
    "text": "metrics of kubernetes and explicitly list what the guarantees but I don't",
    "start": "441080",
    "end": "449210"
  },
  {
    "text": "think we would be able to do that very well keeping so either of those really work he doesn't mean it so the goal of",
    "start": "449210",
    "end": "461410"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "metastability it was to provide a framework so that would Express instability Yorkies remembers at the",
    "start": "461410",
    "end": "468140"
  },
  {
    "text": "same time we want to do a lot less them as automatically as possible and second",
    "start": "468140",
    "end": "483110"
  },
  {
    "text": "as a stretch bull Isis introduces a support post it doesn't fear the lines",
    "start": "483110",
    "end": "490430"
  },
  {
    "text": "of ownership it would be nice to be able to spend less than this stuff so that basically there was something that we",
    "start": "490430",
    "end": "498980"
  },
  {
    "text": "would say so virgin",
    "start": "498980",
    "end": "509080"
  },
  {
    "start": "505000",
    "end": "505000"
  },
  {
    "text": "[Music]",
    "start": "513179",
    "end": "516319"
  },
  {
    "text": "[Music]",
    "start": "530740",
    "end": "533820"
  },
  {
    "start": "556000",
    "end": "556000"
  },
  {
    "text": "always has these three steps as you can see first you define a metric in this",
    "start": "578050",
    "end": "584180"
  },
  {
    "text": "case we have a summary we have a name we have help and we have quantile information second we take that metric",
    "start": "584180",
    "end": "591740"
  },
  {
    "text": "definition pass it in to a constructor Prometheus knew some rebec would be the",
    "start": "591740",
    "end": "596870"
  },
  {
    "text": "function call and we instantiate that metric and we we retain a reference to",
    "start": "596870",
    "end": "602180"
  },
  {
    "text": "that metric instance and then somewhere we register this thing or enroll this to",
    "start": "602180",
    "end": "608450"
  },
  {
    "text": "a metric registry and that allows this metric to be published to a metrics endpoint and we take the reference from",
    "start": "608450",
    "end": "616370"
  },
  {
    "text": "that singleton somewhere in our instrumented code as you can see on the bottom and we actually observe some sort",
    "start": "616370",
    "end": "624680"
  },
  {
    "text": "of thing that we want to measure so the fact that this that the metric life",
    "start": "624680",
    "end": "630140"
  },
  {
    "text": "cycle always occurs with these three steps gives us an opportunity and it",
    "start": "630140",
    "end": "636260"
  },
  {
    "text": "basically gives us an opportunity to inject our own custom logic around the life cycle so the first thing we do is",
    "start": "636260",
    "end": "642590"
  },
  {
    "start": "641000",
    "end": "641000"
  },
  {
    "text": "we hijack the metric definition and as you can see on the Left we have the orig metric definition on the right we we",
    "start": "642590",
    "end": "649680"
  },
  {
    "text": "basically introduced a new truck which has stability metadata in this case we",
    "start": "649680",
    "end": "655529"
  },
  {
    "text": "have stability level and a deprecated version obviously these things will not",
    "start": "655529",
    "end": "661019"
  },
  {
    "text": "do anything in it of itself right you can't just add a couple of fields and expect things to work so next you have",
    "start": "661019",
    "end": "668129"
  },
  {
    "start": "667000",
    "end": "667000"
  },
  {
    "text": "to hijack the instantiation right so we wrap all of the Constructors which taken now these new extra these new",
    "start": "668129",
    "end": "677660"
  },
  {
    "text": "definitions and instantiate a metric with that metadata",
    "start": "677660",
    "end": "683389"
  },
  {
    "start": "683000",
    "end": "683000"
  },
  {
    "text": "lastly we hijack the mystery Registry so we have a wrapper struck which embeds of",
    "start": "683389",
    "end": "691079"
  },
  {
    "text": "Prometheus registry and we can inject custom logic during the registration cycle so this allows us to do a lot of",
    "start": "691079",
    "end": "698730"
  },
  {
    "text": "interesting things work a lot of registration magic depending on the stability level of of a metric so now",
    "start": "698730",
    "end": "710759"
  },
  {
    "start": "709000",
    "end": "709000"
  },
  {
    "text": "that you've seen the stability levels and the deprecation the the deprecation",
    "start": "710759",
    "end": "718110"
  },
  {
    "text": "field you can see that we have two stability axes accesses and the",
    "start": "718110",
    "end": "726809"
  },
  {
    "text": "stability classes are either alpha or stable and for alpha metrics basically",
    "start": "726809",
    "end": "732720"
  },
  {
    "text": "what we are saying is that there are no stability guarantees it's not a stable API for stable metrics these things are",
    "start": "732720",
    "end": "739559"
  },
  {
    "text": "guaranteed not to change so now you can instrument your dashboards or alert based off of this thing next we have the",
    "start": "739559",
    "end": "748889"
  },
  {
    "text": "deprecation axis where basically what we can do is we can signal the future",
    "start": "748889",
    "end": "753899"
  },
  {
    "text": "definition of a metric and so it looks like this if you have a stable metric in 115 let's say you deprecated in 116 so",
    "start": "753899",
    "end": "762209"
  },
  {
    "text": "you toggle this bit deprecated version to 1 116 you're basically saying this",
    "start": "762209",
    "end": "767879"
  },
  {
    "text": "thing is going to be removed in the subsequent release that metric will be automatically hidden from the endpoint",
    "start": "767879",
    "end": "774509"
  },
  {
    "text": "so let's say you are ingesting metrics at this point and at this point you've",
    "start": "774509",
    "end": "779790"
  },
  {
    "text": "upgraded your cluster you realize my my my graph is broken then you can actually manually",
    "start": "779790",
    "end": "786900"
  },
  {
    "text": "re-enable that metric and you will have a one release cycle to migrate off of",
    "start": "786900",
    "end": "792630"
  },
  {
    "text": "this deprecated metric to the new one and then the subsequent release that metric will be deleted obviously it's",
    "start": "792630",
    "end": "801420"
  },
  {
    "start": "799000",
    "end": "799000"
  },
  {
    "text": "not enough just to have stability metadata you have to be able to enforce it so we are doing this to a multi-phase",
    "start": "801420",
    "end": "808830"
  },
  {
    "text": "process first we had the metrics migration where all of the metrics and kubernetes now use these custom wrappers",
    "start": "808830",
    "end": "815400"
  },
  {
    "text": "and custom registries second we added static analysis to validate that each of",
    "start": "815400",
    "end": "822000"
  },
  {
    "text": "these things Don Val did not break our stability guarantees in the beta stage",
    "start": "822000",
    "end": "829710"
  },
  {
    "text": "of the metric stability framework were gonna forbid the direct use of",
    "start": "829710",
    "end": "834990"
  },
  {
    "text": "Prometheus in kubernetes components which basically means everything has to go through the metric stability",
    "start": "834990",
    "end": "840540"
  },
  {
    "text": "framework so this prevents people from making errors for the GA release of the",
    "start": "840540",
    "end": "848760"
  },
  {
    "text": "metric civility framework we're basically providing an escape hatch so that let's say we have a stable metric",
    "start": "848760",
    "end": "854850"
  },
  {
    "text": "which becomes manifests certain memory",
    "start": "854850",
    "end": "861660"
  },
  {
    "text": "issues over time then we have one of two choices we can either break our",
    "start": "861660",
    "end": "871140"
  },
  {
    "text": "stability guarantees or we can delete this thing right alternatively if we",
    "start": "871140",
    "end": "877800"
  },
  {
    "text": "provide a runtime escape hatch then we can ensure that we're not breaking our metrics API and lastly the nice thing",
    "start": "877800",
    "end": "888600"
  },
  {
    "text": "about the stability framework is that this has allowed us to consolidate a bunch of this code into a single",
    "start": "888600",
    "end": "894510"
  },
  {
    "text": "repository that's actually owned by saved instrumentation which has had",
    "start": "894510",
    "end": "900030"
  },
  {
    "text": "side-effect of allowing us to sort of consolidate and centralize what is otherwise been a horizontal effort",
    "start": "900030",
    "end": "908480"
  },
  {
    "text": "so now I get to tell you about the fun I've been having trying to use tracing",
    "start": "910480",
    "end": "916910"
  },
  {
    "text": "in kubernetes controllers and this has been something that I've been working on for about a year now just kind of in my",
    "start": "916910",
    "end": "922279"
  },
  {
    "text": "free time but I think it's really fun and a demos really well to be honest so just to give a super quick overview on",
    "start": "922279",
    "end": "929449"
  },
  {
    "text": "tracing the standard what I call RPC model you get a request in there's some",
    "start": "929449",
    "end": "935179"
  },
  {
    "text": "context attached to that request and then as the request propagates through your system the context is propagated",
    "start": "935179",
    "end": "942019"
  },
  {
    "text": "along with it so that the telemetry you get back from it can all be joined back together in the end to give you a nice",
    "start": "942019",
    "end": "948379"
  },
  {
    "text": "pretty picture like something like this and then the cool thing about this is I",
    "start": "948379",
    "end": "953449"
  },
  {
    "text": "can take one look at it and know immediately that the rights to backend one and back-end two are sequential not",
    "start": "953449",
    "end": "960350"
  },
  {
    "text": "in parallel because of the structure of the graph so it's a nice way to not only collect information and tie things",
    "start": "960350",
    "end": "967129"
  },
  {
    "text": "together from different components but also to be able to visualize what's happening in our system and we call this",
    "start": "967129",
    "end": "974119"
  },
  {
    "text": "little box here a span and the whole thing together at trace so to start with",
    "start": "974119",
    "end": "979669"
  },
  {
    "start": "978000",
    "end": "978000"
  },
  {
    "text": "I'm gonna tell you guys a quick story of a bug that I had about this time last year pod startup normally takes about",
    "start": "979669",
    "end": "986839"
  },
  {
    "text": "three seconds we had a case where it would take more than 50 seconds sometimes and that's pretty bad so like",
    "start": "986839",
    "end": "995209"
  },
  {
    "text": "all good engineers who had a hard problem I got an intern and gave the problem to",
    "start": "995209",
    "end": "1000489"
  },
  {
    "text": "him and so he worked on this for three or four months and he he had some fun",
    "start": "1000489",
    "end": "1007869"
  },
  {
    "text": "with it and got to apply tracing to this problem to help give us more insight and so these are some of the initial traces",
    "start": "1007869",
    "end": "1014169"
  },
  {
    "text": "that I dug up of stuff that he did you can see here or you can't see here but the big blue box says 38,000",
    "start": "1014169",
    "end": "1022569"
  },
  {
    "text": "milliseconds which is about 38 seconds and we were able to track this bug down and found out that it actually was an",
    "start": "1022569",
    "end": "1029709"
  },
  {
    "text": "entropy bug in our operating system so when the node first boots up doesn't",
    "start": "1029709",
    "end": "1035110"
  },
  {
    "text": "have enough entropy to generate a container ID and so it hangs until it can",
    "start": "1035110",
    "end": "1041000"
  },
  {
    "text": "it's fixed now thankfully but that sort of planted the seed in my mind and I said wait this would be really really",
    "start": "1041000",
    "end": "1046730"
  },
  {
    "text": "cool to be able to use to trace other things in kubernetes because right now things aren't so great so let's take a",
    "start": "1046730",
    "end": "1053720"
  },
  {
    "start": "1052000",
    "end": "1052000"
  },
  {
    "text": "look at what we have in kubernetes right now and sort of where we're lacking usually my go-to ends up when I debug",
    "start": "1053720",
    "end": "1061100"
  },
  {
    "text": "the production issues in gke ends up being blogs so you go in you go to the cubit logs you grep for the name or grab",
    "start": "1061100",
    "end": "1069710"
  },
  {
    "text": "for the UID or grab for the container ID right and it's a big struggle because",
    "start": "1069710",
    "end": "1075050"
  },
  {
    "text": "the cubit logs a lot and so this is all slow and it's no fun so logs are there",
    "start": "1075050",
    "end": "1080870"
  },
  {
    "text": "but they're kind of a last resort metrics are awesome when you have a",
    "start": "1080870",
    "end": "1086090"
  },
  {
    "text": "cardinality that gives you the metadata that you need so most of the time it's not feasible to put things like a",
    "start": "1086090",
    "end": "1091940"
  },
  {
    "text": "container ID in a metric because that would explode your back-end and events",
    "start": "1091940",
    "end": "1097220"
  },
  {
    "text": "are awesome but they're short-lived so for me when at the point when I usually get to a customer's cluster they're all",
    "start": "1097220",
    "end": "1104150"
  },
  {
    "text": "gone and once I have them they can kind of be difficult to parse so I I can see for example that there are a bunch of",
    "start": "1104150",
    "end": "1111140"
  },
  {
    "text": "events all of which we have ten thousand of and so I know something's going wrong",
    "start": "1111140",
    "end": "1116420"
  },
  {
    "text": "but unless I really know what I'm doing which most of the time I do I can't",
    "start": "1116420",
    "end": "1121940"
  },
  {
    "text": "figure out what's actually wrong in the system and track it down so my favorite part about tracing though is just how",
    "start": "1121940",
    "end": "1128120"
  },
  {
    "text": "easy it is to visualize and look at you'll see later in my demos that tracing is really a nice way to present",
    "start": "1128120",
    "end": "1135290"
  },
  {
    "text": "information and as a kubernetes developer I really want this for myself",
    "start": "1135290",
    "end": "1141010"
  },
  {
    "text": "okay so I've been talking about kubernetes as if the standard RPC model",
    "start": "1141010",
    "end": "1146510"
  },
  {
    "text": "doesn't apply but technically there is one place where it does and that's the API server so user sends requests to the",
    "start": "1146510",
    "end": "1154040"
  },
  {
    "text": "API server to create a config map that then gets forwarded to sed it comes back and we're all done and so we would",
    "start": "1154040",
    "end": "1160310"
  },
  {
    "text": "expect that request to look something like this here so I figured I would give this a quick demo",
    "start": "1160310",
    "end": "1167890"
  },
  {
    "text": "so let's see here I have my cluster it's",
    "start": "1168770",
    "end": "1174290"
  },
  {
    "text": "this one up here just a needy cluster that I built and I can do",
    "start": "1174290",
    "end": "1180100"
  },
  {
    "text": "okay",
    "start": "1189770",
    "end": "1192460"
  },
  {
    "text": "okay so I can do a cube control create I",
    "start": "1195250",
    "end": "1202020"
  },
  {
    "text": "can create a config map whoops of course I forget to do",
    "start": "1202530",
    "end": "1209460"
  },
  {
    "text": "and all I'm doing here is attaching a context to this request with my dash dash trace so then if I pop over to",
    "start": "1215960",
    "end": "1221600"
  },
  {
    "text": "Zipkin I can go look for my traces and lo and behold there's a trace that looks",
    "start": "1221600",
    "end": "1227770"
  },
  {
    "text": "exactly like what I expected it to I sent my request to the API server got",
    "start": "1227770",
    "end": "1232910"
  },
  {
    "text": "it from a CD and that's pretty cool right if you're Han over here who works on the API server you're happy if you",
    "start": "1232910",
    "end": "1239570"
  },
  {
    "text": "everyone else then there's still some stuff missing so let's let's go dive",
    "start": "1239570",
    "end": "1244760"
  },
  {
    "text": "back into that great great ok so how did",
    "start": "1244760",
    "end": "1250640"
  },
  {
    "text": "I do this I'm using open telemetry which or technically I'm using open census but",
    "start": "1250640",
    "end": "1256580"
  },
  {
    "text": "it's now all being built into open telemetry so presumably this will all still work in a couple months when we",
    "start": "1256580",
    "end": "1262400"
  },
  {
    "text": "migrated to it but it's pretty simple so the HTTP server for the API server has",
    "start": "1262400",
    "end": "1269270"
  },
  {
    "text": "how did this has wrapped the HTTP handler so that it's instrumented and",
    "start": "1269270",
    "end": "1275300"
  },
  {
    "text": "the G RPC client in the API server has also added a diol option that sends",
    "start": "1275300",
    "end": "1280850"
  },
  {
    "text": "telemetry out so I just had to do this and boom this all works which is pretty fun and as I said there's more to it",
    "start": "1280850",
    "end": "1287630"
  },
  {
    "text": "right ah specifically what do I expect to get I expect to get traces from the controller manager from",
    "start": "1287630",
    "end": "1294050"
  },
  {
    "text": "the scheduler I want to know I especially want to know what the cubelet and the container runtime are doing and",
    "start": "1294050",
    "end": "1299600"
  },
  {
    "text": "I want to be able to visualize that and understand quickly what's going on so",
    "start": "1299600",
    "end": "1304670"
  },
  {
    "start": "1304000",
    "end": "1304000"
  },
  {
    "text": "there's one problem we have to solve before we can realize that dream and that's called context propagation so for",
    "start": "1304670",
    "end": "1313280"
  },
  {
    "text": "HTTP for example in order to send a context that's in a context context go",
    "start": "1313280",
    "end": "1319550"
  },
  {
    "text": "object from one go binary to another what you have to do is you have to take",
    "start": "1319550",
    "end": "1325400"
  },
  {
    "text": "the value out of the context stick it in the request header send it along with",
    "start": "1325400",
    "end": "1330470"
  },
  {
    "text": "the request and then the receiving server can take it out of the header and",
    "start": "1330470",
    "end": "1335510"
  },
  {
    "text": "then put it back in a go to go context for me to use with my geometry so for kubernetes we want to do something that",
    "start": "1335510",
    "end": "1342410"
  },
  {
    "text": "looks pretty similar to this and actually there's something that fits the bill pretty well instead of using HTTP header",
    "start": "1342410",
    "end": "1348690"
  },
  {
    "text": "which are key value stores we can use this lovely key value store that kubernetes gives us so we can take the",
    "start": "1348690",
    "end": "1354720"
  },
  {
    "text": "context out of the context stick it in an annotation and then the next",
    "start": "1354720",
    "end": "1359910"
  },
  {
    "text": "controller that works on that object can take it out of the annotation and use that to instrument their traces all",
    "start": "1359910",
    "end": "1366480"
  },
  {
    "text": "right so as a node developer I said okay let's start with a pod right what should",
    "start": "1366480",
    "end": "1373290"
  },
  {
    "text": "it look like when we're all said and done and so I wrote down some things that I thought should be in there like scheduling and",
    "start": "1373290",
    "end": "1380160"
  },
  {
    "text": "all the calls to the Container runtime right the basic stuff so let's see what",
    "start": "1380160",
    "end": "1385860"
  },
  {
    "text": "that looks like",
    "start": "1385860",
    "end": "1388250"
  },
  {
    "text": "so first I'll just show you what I'm creating so I'm just creating the",
    "start": "1393320",
    "end": "1399200"
  },
  {
    "text": "simplest pot I can come up with keep control",
    "start": "1399200",
    "end": "1404630"
  },
  {
    "text": "create I don't remember at this time",
    "start": "1404630",
    "end": "1412540"
  },
  {
    "text": "someone's done this dino flowingly cool I don't know about you guys but I think this thing is like",
    "start": "1413620",
    "end": "1420010"
  },
  {
    "text": "pretty crazy okay let's try it again",
    "start": "1420010",
    "end": "1427330"
  },
  {
    "text": "dude all right so let's see what sip can house for us let's go back Oh",
    "start": "1427330",
    "end": "1434620"
  },
  {
    "text": "okay cool so this looks like our trace so let's take a look at this I can see",
    "start": "1438210",
    "end": "1446159"
  },
  {
    "text": "that just like when I created my config map I have this these initial spans here that",
    "start": "1446159",
    "end": "1452700"
  },
  {
    "text": "are for creating the object for the pod and the sed transaction for that but",
    "start": "1452700",
    "end": "1457740"
  },
  {
    "text": "then I can see that I've got a whole bunch of other stuff too I can see that the cubelet or sorry the scheduler is",
    "start": "1457740",
    "end": "1463499"
  },
  {
    "text": "the next guy up and we can see that the pod is scheduled we can see that the cubit updates the status to reflect that",
    "start": "1463499",
    "end": "1470759"
  },
  {
    "text": "it's received the pod and then we see all of the fun container runtime operations that are being sent to docker",
    "start": "1470759",
    "end": "1478799"
  },
  {
    "text": "so all of this we can now see connected together across multiple different kubernetes component for the pot object",
    "start": "1478799",
    "end": "1485580"
  },
  {
    "text": "and that was that was pretty cool being able to get to this point as honset okay exciting so how did I do",
    "start": "1485580",
    "end": "1496799"
  },
  {
    "start": "1496000",
    "end": "1496000"
  },
  {
    "text": "that just like in the API server I had",
    "start": "1496799",
    "end": "1502649"
  },
  {
    "text": "to add something to wrap the or I had to add a wrapper around the HTTP client I",
    "start": "1502649",
    "end": "1508499"
  },
  {
    "text": "had to add a G RPC dial option for the container runtime interface in the scheduler I tossed in a start span from",
    "start": "1508499",
    "end": "1516809"
  },
  {
    "text": "object which is just a helper function I define to take the context out of the object and start a span with it and this",
    "start": "1516809",
    "end": "1523980"
  },
  {
    "text": "is all I had to do was wrap what I was doing in a span and then in the cubelet",
    "start": "1523980",
    "end": "1529649"
  },
  {
    "text": "I had to do almost exactly the same thing when it decides that it's going to create the pod I had to start a span",
    "start": "1529649",
    "end": "1536879"
  },
  {
    "text": "from the object but then that context that I get back from starting the span I can actually use in all of my calls to",
    "start": "1536879",
    "end": "1542610"
  },
  {
    "text": "the container run time to get instrumentation from those so all of that was added just just required adding",
    "start": "1542610",
    "end": "1549059"
  },
  {
    "text": "a couple more lines of code to get all all that fun stuff okay and then back to",
    "start": "1549059",
    "end": "1555029"
  },
  {
    "start": "1553000",
    "end": "1553000"
  },
  {
    "text": "the thing I was initially trying to do right I want to create a deployment but this is slightly more complex because it",
    "start": "1555029",
    "end": "1560539"
  },
  {
    "text": "spans multiple objects it's not just here create this object attach of context now there's sort of this weird",
    "start": "1560539",
    "end": "1567509"
  },
  {
    "text": "hierarchical relationship between some and I need to figure out how to deal with that so I could just say hey I'm a",
    "start": "1567509",
    "end": "1575880"
  },
  {
    "text": "node guy all I really care about the cubelet just give me a bunch of podraces because after all that's all deployment",
    "start": "1575880",
    "end": "1581160"
  },
  {
    "text": "really is but my friends who work on the controller manager would disagree with me so I think it's more useful to have",
    "start": "1581160",
    "end": "1590030"
  },
  {
    "text": "one trace per object that you create that describes all the things that",
    "start": "1590030",
    "end": "1595710"
  },
  {
    "text": "happen in kubernetes so what we really need to be able to do is to figure out a way to propagate context from the",
    "start": "1595710",
    "end": "1601830"
  },
  {
    "text": "higher-level objects like a deployment a replica set down to things like pods so",
    "start": "1601830",
    "end": "1608460"
  },
  {
    "text": "that's what we decide to do and of course I'm going to demo this try and",
    "start": "1608460",
    "end": "1615980"
  },
  {
    "text": "okay so let's check out my deployment it's",
    "start": "1615980",
    "end": "1623450"
  },
  {
    "text": "pretty simple - not much going on you can see there's five replicas in here so",
    "start": "1623450",
    "end": "1629030"
  },
  {
    "text": "I'll just do a quick keep control create my deployment pass in the initial trace",
    "start": "1629030",
    "end": "1637070"
  },
  {
    "text": "context and of course it already exists someone has done all these before",
    "start": "1637070",
    "end": "1644380"
  },
  {
    "text": "all right so we created the deployment nots go back to zip kin see what's in",
    "start": "1652210",
    "end": "1659320"
  },
  {
    "text": "here okay so this latest one I think is what we're looking for I like to collapse",
    "start": "1659320",
    "end": "1666759"
  },
  {
    "text": "them all first okay so let's walk through this tree really briefly just to see all the",
    "start": "1666759",
    "end": "1672840"
  },
  {
    "text": "goodness that's inside so we have the initial right just like before a TD transaction awesome here we can see that",
    "start": "1672840",
    "end": "1679690"
  },
  {
    "text": "the deployment has added a specific trace for creating the replica set which",
    "start": "1679690",
    "end": "1686379"
  },
  {
    "text": "is not happy with me okay we'll just walk through this way then the deployment has a trace for creating the",
    "start": "1686379",
    "end": "1691720"
  },
  {
    "text": "replica set and then we can see that the replica set has a span for creating each",
    "start": "1691720",
    "end": "1697960"
  },
  {
    "text": "of the pods and then inside each of these right we can see all of the work",
    "start": "1697960",
    "end": "1704919"
  },
  {
    "text": "from all of the nodes in my cluster is required to create each of the pods and this you can start to tell where this",
    "start": "1704919",
    "end": "1712269"
  },
  {
    "text": "abstraction starts to get really powerful and really really useful and I'm super hopeful that this can be",
    "start": "1712269",
    "end": "1719529"
  },
  {
    "text": "something that is useful to others as well being able to see all the way from the Etsy D transaction that creates an",
    "start": "1719529",
    "end": "1726399"
  },
  {
    "text": "object all the way down to the the calls to the CRI that are doing pull image and",
    "start": "1726399",
    "end": "1732220"
  },
  {
    "text": "and all that fun stuff so yeah",
    "start": "1732220",
    "end": "1739408"
  },
  {
    "text": "continuing on what did I have to do to to make that work well it's actually not",
    "start": "1740390",
    "end": "1746010"
  },
  {
    "text": "that hard I had to do pretty much the same thing as I did last time except you",
    "start": "1746010",
    "end": "1751230"
  },
  {
    "text": "can see I so for example for the deployment controller I added a span for",
    "start": "1751230",
    "end": "1756600"
  },
  {
    "text": "creating the replica set and then but instead of taking that context and passing it to say a G RPC call to the",
    "start": "1756600",
    "end": "1763710"
  },
  {
    "text": "container on time interface I'm taking that context and sticking it in this object that I need to create right so",
    "start": "1763710",
    "end": "1770100"
  },
  {
    "text": "right before I create my replica set I just say replica set here's your context and now all the things associated with",
    "start": "1770100",
    "end": "1775740"
  },
  {
    "text": "that replica set are tied back to my deployment creation which is really cool same thing for the replica set creating",
    "start": "1775740",
    "end": "1783090"
  },
  {
    "text": "a pod right same steps start a span and then just stick the context inside of",
    "start": "1783090",
    "end": "1788490"
  },
  {
    "text": "our object okay now all good engineers can take a deep breath we're going to",
    "start": "1788490",
    "end": "1795330"
  },
  {
    "start": "1790000",
    "end": "1790000"
  },
  {
    "text": "generalize this a little bit right and try and figure out what the patterns are and how we can apply this to more than just David's deployment that is really",
    "start": "1795330",
    "end": "1802770"
  },
  {
    "text": "simple so what things should we wrap in a span and this gets a little bit tricky",
    "start": "1802770",
    "end": "1810660"
  },
  {
    "text": "in kubernetes because there's lots of like background processes that are constantly reconciling and we probably",
    "start": "1810660",
    "end": "1816660"
  },
  {
    "text": "don't want to trace all of that it's the important thing that I've found is that we only want to export spans when we're",
    "start": "1816660",
    "end": "1822270"
  },
  {
    "text": "doing real work so for example if I had a cube builder controller here that is",
    "start": "1822270",
    "end": "1829500"
  },
  {
    "text": "reconciling on a my object I want to make sure that I have this if updates",
    "start": "1829500",
    "end": "1835650"
  },
  {
    "text": "required before I start my spans otherwise I'm just gonna get a span each time i sync or see irrelevant updates so",
    "start": "1835650",
    "end": "1843510"
  },
  {
    "text": "if I remove this that would be bad and I would get a bunch of random spans that don't make any sense I forgot something",
    "start": "1843510",
    "end": "1850980"
  },
  {
    "text": "and then which object should I should that span be associated with well",
    "start": "1850980",
    "end": "1856560"
  },
  {
    "text": "actually using cube builder makes this kind of obvious because usually I get a reconcile and that reconcile is",
    "start": "1856560",
    "end": "1862740"
  },
  {
    "text": "associated with a specific object right so there's some object that isn't in its",
    "start": "1862740",
    "end": "1867930"
  },
  {
    "text": "desired state that I need to move to its desired state so for example with",
    "start": "1867930",
    "end": "1873010"
  },
  {
    "text": "replicas set if I were to write a cube builder controller for that I would watch for replica set changes and then",
    "start": "1873010",
    "end": "1879100"
  },
  {
    "text": "when I see one just go make sure that it is in its desired State and if it isn't and I need to make changes that's when I",
    "start": "1879100",
    "end": "1885130"
  },
  {
    "text": "go start my span and do my work right so now to the question of like okay I've",
    "start": "1885130",
    "end": "1893500"
  },
  {
    "text": "got my hierarchical objects and one I need to create one in order to make",
    "start": "1893500",
    "end": "1899800"
  },
  {
    "text": "another how does that relationship work and when should i propagate spans there well it's actually almost exactly the",
    "start": "1899800",
    "end": "1905470"
  },
  {
    "text": "same answer as the question before when we're doing work that moves an object from its from a current state to its",
    "start": "1905470",
    "end": "1913180"
  },
  {
    "text": "desired State those are the types of things that we want to trace and if it just so happens that that work involves",
    "start": "1913180",
    "end": "1919780"
  },
  {
    "text": "creating another object well then that's the work that we're tracing so again",
    "start": "1919780",
    "end": "1924970"
  },
  {
    "text": "with my cue builder example when I'm doing a reconcile on some object and in order to bring that object to its",
    "start": "1924970",
    "end": "1931210"
  },
  {
    "text": "desired state I need to say create another or update another well then",
    "start": "1931210",
    "end": "1936250"
  },
  {
    "text": "that's when I should propagate my context to that child object and I want",
    "start": "1936250",
    "end": "1943840"
  },
  {
    "start": "1942000",
    "end": "1942000"
  },
  {
    "text": "to highlight to that this is a total work in progress none of this is merged up scream there's a kept for it that's been open for a long long time has had",
    "start": "1943840",
    "end": "1950860"
  },
  {
    "text": "lots of lovely discussion on it but",
    "start": "1950860",
    "end": "1955799"
  },
  {
    "text": "there's definitely room for for lots of other people to contribute and to bring their own ideas and to help move this",
    "start": "1955950",
    "end": "1962560"
  },
  {
    "text": "forward so that we can all get the that cool experience that you got earlier when we were like wow we can see",
    "start": "1962560",
    "end": "1968200"
  },
  {
    "text": "everything that's happening to a deployment but I just want to mention a couple of the fun hard problems that",
    "start": "1968200",
    "end": "1974170"
  },
  {
    "text": "still don't have complete solutions to them one is normally an RPC systems",
    "start": "1974170",
    "end": "1980230"
  },
  {
    "text": "trace ends when everything returns right it goes spreads down the tree and then propagates back up to return a response",
    "start": "1980230",
    "end": "1986860"
  },
  {
    "text": "to your user but in kubernetes that doesn't really exist right you write an object and then it's off in the wild and it just exists",
    "start": "1986860",
    "end": "1994240"
  },
  {
    "text": "so I've been trying to be a little bit specific with my language because I",
    "start": "1994240",
    "end": "1999520"
  },
  {
    "text": "believe we should try and trace moving objects from an undesired state to the",
    "start": "1999520",
    "end": "2005490"
  },
  {
    "text": "desired one and to me that that measures the bounds of an operation",
    "start": "2005490",
    "end": "2010810"
  },
  {
    "text": "that we can sort of start to make sense of and another question that I've gotten",
    "start": "2010810",
    "end": "2016510"
  },
  {
    "text": "a lot that we don't really have amazing answers to is that in normal RPC systems right Han and I can make a request at",
    "start": "2016510",
    "end": "2023950"
  },
  {
    "text": "the same time and his can be traced completely independent of mine he can make rights to a database I can make",
    "start": "2023950",
    "end": "2029920"
  },
  {
    "text": "rights to a database right it all just works but in kubernetes if he updates the replicas count in our deployment and",
    "start": "2029920",
    "end": "2036580"
  },
  {
    "text": "then I come in afterwards and update the image well the controllers are just reconciling to some",
    "start": "2036580",
    "end": "2042400"
  },
  {
    "text": "desired state and should they associate things that they're doing with what he",
    "start": "2042400",
    "end": "2047860"
  },
  {
    "text": "said to do or with what I said to do right so at the end of the day we can do",
    "start": "2047860",
    "end": "2054159"
  },
  {
    "text": "a couple different things maybe we could try and do both like he gets a trace and I get a trace but that seems like it",
    "start": "2054160",
    "end": "2060580"
  },
  {
    "text": "might have some scaling issues or other problems the other thing we can do is say that well we're gonna tie everything",
    "start": "2060580",
    "end": "2068350"
  },
  {
    "text": "to ever made the last update but then he's left out in the cold if he would like to know what what happened so maybe",
    "start": "2068350",
    "end": "2075850"
  },
  {
    "text": "we can link the traces and maybe that's enough but there's definitely a lot more interesting stuff to be solved there so",
    "start": "2075850",
    "end": "2084100"
  },
  {
    "text": "what does this look like so I'm working on the cap and I've seen some excitement",
    "start": "2084100",
    "end": "2089679"
  },
  {
    "text": "around it recently so I'm very optimistic at this point but if and when that's approved there's a ton of work to",
    "start": "2089679",
    "end": "2095770"
  },
  {
    "text": "do imagine if I were standing up here telling you about the merits of using metrics and kubernetes like there's so",
    "start": "2095770",
    "end": "2101590"
  },
  {
    "text": "much code as Han described earlier that's dedicated to monitoring inside of kubernetes and there's a ton of work",
    "start": "2101590",
    "end": "2109630"
  },
  {
    "text": "that needs to be done to instrument all of the things that exist right there's so many controllers and and many of you",
    "start": "2109630",
    "end": "2116230"
  },
  {
    "text": "in the audience probably work on some of them and so if you do and you want tracing in your controllers or in your",
    "start": "2116230",
    "end": "2122860"
  },
  {
    "text": "projects outside of kubernetes then like that's all part of building this lovely",
    "start": "2122860",
    "end": "2128080"
  },
  {
    "text": "picture that we get when you can create something and see all the effects from it so there's definitely lots lots of",
    "start": "2128080",
    "end": "2133990"
  },
  {
    "text": "room to contribute and lots of things that definitely need to be done",
    "start": "2133990",
    "end": "2139849"
  },
  {
    "start": "2139000",
    "end": "2139000"
  },
  {
    "text": "and I want to end with just a lesson that I learned working on a couple years on C advisor which is that it's really",
    "start": "2139849",
    "end": "2147920"
  },
  {
    "text": "hard to build good integrations with lots of storage backends you add them",
    "start": "2147920",
    "end": "2154369"
  },
  {
    "text": "one day and then they're out of date the next and because you're just a component owner and can't don't have the time to",
    "start": "2154369",
    "end": "2160130"
  },
  {
    "text": "maintain 20 integrations they all sort of dissolve and it's a generally a bad thing but I've been super excited by",
    "start": "2160130",
    "end": "2167720"
  },
  {
    "text": "open telemetry and the projects that came before them because they sort of offer this this promise of being able to",
    "start": "2167720",
    "end": "2175269"
  },
  {
    "text": "have telemetry inside kubernetes that isn't specific to",
    "start": "2175269",
    "end": "2180710"
  },
  {
    "text": "any particular back-end and that actually works well with all of them so I think this is a great place for a",
    "start": "2180710",
    "end": "2188089"
  },
  {
    "text": "great tool for us to use because we can stay vendor-neutral",
    "start": "2188089",
    "end": "2193730"
  },
  {
    "text": "inside of the kubernetes components without needing and but we can still support in a really solid way I hope all",
    "start": "2193730",
    "end": "2201410"
  },
  {
    "text": "of these vendors so to end I have one last demo which is that all of the stuff",
    "start": "2201410",
    "end": "2207650"
  },
  {
    "text": "I've done I've also been sending to Jaeger so we can see for example the deployment the same deployment tracing",
    "start": "2207650",
    "end": "2214249"
  },
  {
    "text": "Jaeger right and I've also been sending everything to stack driver so it's",
    "start": "2214249",
    "end": "2222289"
  },
  {
    "text": "pretty cool that I can just instrument this once change a config file and then",
    "start": "2222289",
    "end": "2227509"
  },
  {
    "text": "lo and behold I can get the same information sent wherever I want as long",
    "start": "2227509",
    "end": "2233989"
  },
  {
    "text": "as they integrate and that lets you pick your back-end address",
    "start": "2233989",
    "end": "2240910"
  },
  {
    "text": "did you guys see that demo yesterday the key nod this is like that demo only for their",
    "start": "2241150",
    "end": "2248300"
  },
  {
    "text": "control planets and I didn't recompile my binary it's pretty crazy okay cool I",
    "start": "2248300",
    "end": "2256790"
  },
  {
    "text": "think that's all we have yeah anyone have any questions no question for",
    "start": "2256790",
    "end": "2267890"
  },
  {
    "text": "tracing let's see we had a strategy session at the contributor summit and we",
    "start": "2267890",
    "end": "2274970"
  },
  {
    "text": "said that we would like to have the cap approved and this in alpha for 118 but",
    "start": "2274970",
    "end": "2280040"
  },
  {
    "text": "if anyone has worked with kubernetes open source development things slip all the time so that's our goal we could",
    "start": "2280040",
    "end": "2288380"
  },
  {
    "text": "always use more contributors so if you guys interested in this project sig",
    "start": "2288380",
    "end": "2294680"
  },
  {
    "text": "instrumentation would love to have your contributions",
    "start": "2294680",
    "end": "2298869"
  },
  {
    "text": "and in the back",
    "start": "2303329",
    "end": "2307349"
  },
  {
    "text": "okay so caps generally one so I'll talk",
    "start": "2312150",
    "end": "2318150"
  },
  {
    "text": "from personal experience because I worked on five or six of them the bigger your kept it gets exponentially harder to get it merged",
    "start": "2318150",
    "end": "2325110"
  },
  {
    "text": "because if I have a kept and I need to get it approved by one sig well then I can just go to that SIG's meeting every",
    "start": "2325110",
    "end": "2331230"
  },
  {
    "text": "week and bother them until they answer all my questions and and we can agree on something right but what tends to happen",
    "start": "2331230",
    "end": "2338730"
  },
  {
    "text": "in really big caps is that you go to one sig and they're like okay make this",
    "start": "2338730",
    "end": "2344160"
  },
  {
    "text": "change and then we're good and then you go to another sig and they're like no no revert that change right so it's hard to",
    "start": "2344160",
    "end": "2349500"
  },
  {
    "text": "get the SIG's to talk to each other sometimes so this particular one mainly involves sig instrumentation and I would",
    "start": "2349500",
    "end": "2357720"
  },
  {
    "text": "say what does client go fall under API API machinery and I'm also making",
    "start": "2357720",
    "end": "2363510"
  },
  {
    "text": "changes to keep control so probably six CLI right so there's a few just a couple",
    "start": "2363510",
    "end": "2368580"
  },
  {
    "text": "SIG's that I need to go get on board and I'm not making any API changes which is a big like if you want to get things in",
    "start": "2368580",
    "end": "2375150"
  },
  {
    "text": "quickly how can you do it without making a p-type API changes so I expect this",
    "start": "2375150",
    "end": "2380340"
  },
  {
    "text": "one shouldn't take too long compared with some of the other big stuff that's been going through recently if anyone's",
    "start": "2380340",
    "end": "2387090"
  },
  {
    "text": "interested we can probably make the client code changes orthogonal to this",
    "start": "2387090",
    "end": "2392640"
  },
  {
    "text": "thing so it can be completely decoupled we just need to pass context through all the Franco methods and you could do this",
    "start": "2392640",
    "end": "2400020"
  },
  {
    "text": "in like a backward compatible way but if someone wanted to write a cap on that and like work on that thing then that",
    "start": "2400020",
    "end": "2405330"
  },
  {
    "text": "would make landing this thing like it's always easier to do smaller pieces yeah",
    "start": "2405330",
    "end": "2410370"
  },
  {
    "text": "exactly",
    "start": "2410370",
    "end": "2412730"
  },
  {
    "text": "all right awesome well thank you guys so much hope you enjoyed it [Applause]",
    "start": "2417700",
    "end": "2426260"
  }
]