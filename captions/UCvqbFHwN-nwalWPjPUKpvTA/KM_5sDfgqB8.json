[
  {
    "start": "0",
    "end": "137000"
  },
  {
    "text": "okay let's go ahead and get started thanks for attending this session on using ambassador to build cloud native",
    "start": "1010",
    "end": "7500"
  },
  {
    "text": "applications quick introduction of myself my name is Steve Flanders I'm head of product and experience at a",
    "start": "7500",
    "end": "14790"
  },
  {
    "text": "stealth startup called omniscient we were based in California and the United States and we're in the observability",
    "start": "14790",
    "end": "20760"
  },
  {
    "text": "space we actually leverage the Ambassador API gateway and many of our customers do as well if you're",
    "start": "20760",
    "end": "27779"
  },
  {
    "text": "interested in learning more about me I have some links at the bottom okay so I have a lot to cover and only 35 minutes",
    "start": "27779",
    "end": "34770"
  },
  {
    "text": "I want to start with some quick background information tell you what ambassador is and then the meat of the",
    "start": "34770",
    "end": "40440"
  },
  {
    "text": "presentation will be about building cloud native applications using Ambassador with real use cases so some",
    "start": "40440",
    "end": "47100"
  },
  {
    "text": "background for you many people are now moving from a monolithic application to a microservices application they",
    "start": "47100",
    "end": "54239"
  },
  {
    "text": "actually look very similar the primary difference is that in a monolith you had one application and every circle here",
    "start": "54239",
    "end": "61590"
  },
  {
    "text": "basically represented a different process or a thread or a JVM or however",
    "start": "61590",
    "end": "66930"
  },
  {
    "text": "you had constructed your monolith whereas in the microservices world you remove that single isolated container",
    "start": "66930",
    "end": "73020"
  },
  {
    "text": "and you have every circle representing a different service so the different",
    "start": "73020",
    "end": "79799"
  },
  {
    "text": "services have different communication paths they may have errors and it can be hard to route and troubleshoot your",
    "start": "79799",
    "end": "86040"
  },
  {
    "text": "environments in a microservices worlds there are also a couple of other changes besides what the circles represents for",
    "start": "86040",
    "end": "94020"
  },
  {
    "text": "example the front ends which might be your web tier is often replaced by an API gateway and the micro services",
    "start": "94020",
    "end": "100259"
  },
  {
    "text": "worlds where you probably didn't have one in the monolithic world and your web tier front web services those become",
    "start": "100259",
    "end": "107310"
  },
  {
    "text": "other services downstream from the API gateway okay and then kubernetes I think",
    "start": "107310",
    "end": "112619"
  },
  {
    "text": "we all know what kubernetes is I'm not gonna spend a lot of time on this but it is important from an embassador perspective because ambassador is",
    "start": "112619",
    "end": "119100"
  },
  {
    "text": "kubernetes is native it actually takes advantages of the constructs that kubernetes provides so for example if",
    "start": "119100",
    "end": "126060"
  },
  {
    "text": "you're familiar with the yam will syntax ambassador can actually leverage this syntax in order to handle the",
    "start": "126060",
    "end": "131459"
  },
  {
    "text": "configuration of an api gateway this makes it much more native if you've already deployed into kubernetes with",
    "start": "131459",
    "end": "138720"
  },
  {
    "start": "137000",
    "end": "408000"
  },
  {
    "text": "that I'd like to introduce ambassador so what is an ambassador ambassador is an open-source kubernetes native micro",
    "start": "138720",
    "end": "145500"
  },
  {
    "text": "service API gateway that's built on top of the Envoy proxy and I should define",
    "start": "145500",
    "end": "150900"
  },
  {
    "text": "the Envoy proxy as route well as it serves a critical role here it's an open-source edge and service proxy",
    "start": "150900",
    "end": "157019"
  },
  {
    "text": "designed for cloud native applications so envoy was actually developed at lyft completely open-source software it's",
    "start": "157019",
    "end": "163829"
  },
  {
    "text": "used in API gateways it's used in service meshes that for example sto it's",
    "start": "163829",
    "end": "169590"
  },
  {
    "text": "also used in api gateways like in the case of Ambassador the thing to notice is that envoy is a data plane it's",
    "start": "169590",
    "end": "177030"
  },
  {
    "text": "responsible for routing and handling traffic for you but it needs to be controlled ambassador is the control",
    "start": "177030",
    "end": "183930"
  },
  {
    "text": "plane it sits on top of envoy and handles the configuration of envoy now",
    "start": "183930",
    "end": "190019"
  },
  {
    "text": "the ambassador architecture kind of looks like the following so basically what you would do is you would go ahead",
    "start": "190019",
    "end": "195389"
  },
  {
    "text": "and configure manifests in kubernetes to basically tell ambassador how you want the state of the world to look",
    "start": "195389",
    "end": "201709"
  },
  {
    "text": "ambassador would then get that information from the kubernetes api and it would transform it into a format that",
    "start": "201709",
    "end": "208139"
  },
  {
    "text": "envoy understands and then it would tell envoy to reconfigure itself so that it could handle the configuration that you",
    "start": "208139",
    "end": "214680"
  },
  {
    "text": "asked it to now it can do this without dropping any data so even if you reconfigure Ambassador or in this case",
    "start": "214680",
    "end": "221430"
  },
  {
    "text": "envoy the data will continue routing normally as it had before and then the basic flow",
    "start": "221430",
    "end": "227639"
  },
  {
    "text": "is that traffic would come in to and go out of the Envoy proxy in your environment so what does ambassador",
    "start": "227639",
    "end": "233790"
  },
  {
    "text": "provide it's self-service via kubernetes annotations and attributes and constructs this is very powerful if",
    "start": "233790",
    "end": "240389"
  },
  {
    "text": "you're running in kubernetes it's completely native to it you don't have to really learn another syntax or",
    "start": "240389",
    "end": "245400"
  },
  {
    "text": "configure something outside of kubernetes to take advantage of Ambassador it does have integrations with things like Sto and besides being",
    "start": "245400",
    "end": "252720"
  },
  {
    "text": "used from a software development perspective it can be used by software developers as well so you can handle",
    "start": "252720",
    "end": "258900"
  },
  {
    "text": "things like canary deployment and traffic shadowing and I'll show that in the coming slides and then it supports",
    "start": "258900",
    "end": "265110"
  },
  {
    "text": "most of the normal features you'd expect from an eight p.i gateway the primary focus of ambassador is around edge routing",
    "start": "265110",
    "end": "271590"
  },
  {
    "text": "basically sitting on your perimeter and handling traffic coming into and going out of your environments this means it",
    "start": "271590",
    "end": "277560"
  },
  {
    "text": "needs to handle things like the different protocols that you support HTTP G RPC it has to handle things like",
    "start": "277560",
    "end": "283800"
  },
  {
    "text": "TLS termination circuit braking and routing some of these are similar to some of the things you'll see in the",
    "start": "283800",
    "end": "288810"
  },
  {
    "text": "server smash world but there are differences as well now how is the difference api gateways can basically be",
    "start": "288810",
    "end": "296639"
  },
  {
    "text": "classified into three different types you can have a hosted one so maybe your cloud provider provides an api gateway",
    "start": "296639",
    "end": "302699"
  },
  {
    "text": "as a platform service that you can consume you have more traditional gateways like kong which is part of the",
    "start": "302699",
    "end": "307889"
  },
  {
    "text": "CN CF and then you have layer 7 gateways I'm sure you've heard of at least nginx or H a proxy before and of course Envoy",
    "start": "307889",
    "end": "314699"
  },
  {
    "text": "can be used by itself you're just responsible for handling the configuration of it in that deployment model now what are the differences that",
    "start": "314699",
    "end": "321810"
  },
  {
    "text": "ambassador offers from some of the other api gateways that are available today well no vendor lock-in so if you use a",
    "start": "321810",
    "end": "328590"
  },
  {
    "text": "hosted vendor provided solution like the Amazon API gateway then you're kind of",
    "start": "328590",
    "end": "333599"
  },
  {
    "text": "bound to using that only in Amazon's AWS cloud if you want to use that somewhere else not really an option so if you want",
    "start": "333599",
    "end": "339900"
  },
  {
    "text": "more portability one of the things that kubernetes provides is portability of your data no matter where it's running",
    "start": "339900",
    "end": "345110"
  },
  {
    "text": "embassador being native to kubernetes is also portable there's no dependency on an external database so this one I",
    "start": "345110",
    "end": "352050"
  },
  {
    "text": "actually think is pretty critical ambassador will leverage kubernetes basically at CD to handle all the",
    "start": "352050",
    "end": "357240"
  },
  {
    "text": "configuration and that's where the state is stored so you don't have to manage your own external database whereas for",
    "start": "357240",
    "end": "362880"
  },
  {
    "text": "example Kong you do have to manage a sequel or Cassandra or some database to actually store the state or you have to",
    "start": "362880",
    "end": "368340"
  },
  {
    "text": "handle it yourself and replicate it between all the different instances that you have self service in kubernetes",
    "start": "368340",
    "end": "373560"
  },
  {
    "text": "native again I can use the constructs of kubernetes I don't have to learn some sort of new configuration syntax or",
    "start": "373560",
    "end": "379830"
  },
  {
    "text": "manage it through some other system I can leverage what I'm already doing in kubernetes and then leveraging envoy",
    "start": "379830",
    "end": "385319"
  },
  {
    "text": "again I think this one is critical envoy is a CNC F graduated project I'm aware",
    "start": "385319",
    "end": "390840"
  },
  {
    "text": "of many people that are running this in production today at scale and highly rely on it whether it's for service mesh",
    "start": "390840",
    "end": "397020"
  },
  {
    "text": "or API gateway or a variety of other use cases it's very common to see envoy being adopted",
    "start": "397020",
    "end": "403110"
  },
  {
    "text": "in the cloud native world and the fact that ambassador takes advantage of it I think is pretty critical so with that",
    "start": "403110",
    "end": "409980"
  },
  {
    "text": "background let's talk about cloud native eight applications I want to do this by providing some different ways you can",
    "start": "409980",
    "end": "415710"
  },
  {
    "text": "deploy ambassador and then give you real-world examples of how I've seen it done so the number one use case for",
    "start": "415710",
    "end": "422220"
  },
  {
    "text": "ambassador as I mentioned earlier is for edge routing that basically means it sits on the perimeter of your environments and data coming into your",
    "start": "422220",
    "end": "429120"
  },
  {
    "text": "environment would go through the Ambassador API gateway and then get routed accordingly depending on how it",
    "start": "429120",
    "end": "434610"
  },
  {
    "text": "has been configured now to do this you probably need some key features like authentication if your edge proxy is",
    "start": "434610",
    "end": "441990"
  },
  {
    "text": "being exposed to the Internet you probably don't want to expose that without authentication encryption handling different types of protocols",
    "start": "441990",
    "end": "448920"
  },
  {
    "text": "that are important to your environment so all these things need to be considered now these are solved problems",
    "start": "448920",
    "end": "454740"
  },
  {
    "text": "but they can get tricky depending on your environments so let's walk through some examples how would I use the",
    "start": "454740",
    "end": "461160"
  },
  {
    "text": "Ambassador API gateway in an edge configuration well let's say you're moving from a monolith to microservices",
    "start": "461160",
    "end": "467310"
  },
  {
    "text": "a lot of people are doing that today that means that all your traffic comes into your monolith maybe you have a load",
    "start": "467310",
    "end": "473070"
  },
  {
    "text": "balancer in front of it to handle traffic but if you're thinking about moving to microservices a common first",
    "start": "473070",
    "end": "479190"
  },
  {
    "text": "step is to put an api gateway in front of the monolith because this now gives you flexibility if you want to spin up",
    "start": "479190",
    "end": "485760"
  },
  {
    "text": "new microservices and route traffic to it instead of to the monolith now you can and because you're probably gonna",
    "start": "485760",
    "end": "490860"
  },
  {
    "text": "need an api gateway anyway when you get to microservices this is a great first step this is what we see a lot of people",
    "start": "490860",
    "end": "497040"
  },
  {
    "text": "doing as their you move to a micro services based architecture and then over time they will start creating micro",
    "start": "497040",
    "end": "503160"
  },
  {
    "text": "services off of the monolith there are two primary ways that I've seen this happen number one is I have a new",
    "start": "503160",
    "end": "509280"
  },
  {
    "text": "feature I'm gonna build it as a micro service instead of putting it in my monolith the second is I need to",
    "start": "509280",
    "end": "514650"
  },
  {
    "text": "refactor my code inside of my monolith maybe I'll break off an existing service and I'll make that be a new micro",
    "start": "514650",
    "end": "520469"
  },
  {
    "text": "service going forward this is kind of a hub-and-spoke model typically when you're doing this when you're spinning",
    "start": "520469",
    "end": "525840"
  },
  {
    "text": "up new services or breaking them off you're still gonna communicate directly with the monolith first and then the",
    "start": "525840",
    "end": "531000"
  },
  {
    "text": "monolith will call out to the micro Service it's necessary and typically in this model the micro-services don't talk to each other",
    "start": "531000",
    "end": "537060"
  },
  {
    "text": "at least not in the early days so again having an API gateway is helpful but it",
    "start": "537060",
    "end": "542280"
  },
  {
    "text": "didn't really provide any additional benefits yet other than I can route to those two micro services if I want to",
    "start": "542280",
    "end": "548220"
  },
  {
    "text": "now over time the monolith will hopefully get smaller and smaller and eventually you'll get to a state where",
    "start": "548220",
    "end": "554040"
  },
  {
    "text": "you start connecting these micro services together maybe I want the API gateway now to go directly to a micro",
    "start": "554040",
    "end": "560640"
  },
  {
    "text": "service before that micro service calls into the monolith maybe I've spun off a new application that's purely micro services based and",
    "start": "560640",
    "end": "567360"
  },
  {
    "text": "doesn't need to communicate with the monolith anymore over time you'll continue chipping away at that monolith",
    "start": "567360",
    "end": "572640"
  },
  {
    "text": "and hopefully it goes entirely away and now I have an API gateway that's possible of handling different routing",
    "start": "572640",
    "end": "578670"
  },
  {
    "text": "depending on the traffic needs in my environment so let's take an example of a saz service just something kind of",
    "start": "578670",
    "end": "585750"
  },
  {
    "start": "581000",
    "end": "783000"
  },
  {
    "text": "generic let's assume that you have something that has to ingest some data has to provide an interface to query",
    "start": "585750",
    "end": "591210"
  },
  {
    "text": "that data back out because there's data involve it needs to be persisted and I probably want to authenticate that",
    "start": "591210",
    "end": "596820"
  },
  {
    "text": "because it's a sad service on the Internet so how could I go about doing this well you probably have two inputs in this",
    "start": "596820",
    "end": "603900"
  },
  {
    "text": "model you have an ingestion path and you have a query path so ingestion would be the data that a customer sending to you",
    "start": "603900",
    "end": "610470"
  },
  {
    "text": "the query path is the user that's wanting to query the data out that has been ingested how can I route this in a",
    "start": "610470",
    "end": "616920"
  },
  {
    "text": "micro services based world well with an edge proxy I could go ahead and deploy the Ambassador API gateway on the edge I",
    "start": "616920",
    "end": "624210"
  },
  {
    "text": "could point both ingest inquiry to the same Ambassador instance and then I could have ambassador handle the calls",
    "start": "624210",
    "end": "630720"
  },
  {
    "text": "to authentication as well as the appropriate micro service that it needs to talk to that's where most people will",
    "start": "630720",
    "end": "637260"
  },
  {
    "text": "start but over time you're going to evolve this architecture I'll talk about best practices in a minute I want to",
    "start": "637260",
    "end": "644310"
  },
  {
    "text": "touch on TLS real quick because it definitely comes up with edge Ed's proxy and API gateways in general",
    "start": "644310",
    "end": "651360"
  },
  {
    "text": "so you have two basic models you can either terminate TLS on like say the API gateway in this case Ambassador or you",
    "start": "651360",
    "end": "658230"
  },
  {
    "text": "can pass through the TLS connection and make it be handled downstream by your application or service so ambassador",
    "start": "658230",
    "end": "665460"
  },
  {
    "text": "does support both models depending on your needs and does have different routing capabilities that are possible",
    "start": "665460",
    "end": "670850"
  },
  {
    "text": "as well it also supports SNI server name I forgot what it stands for",
    "start": "670850",
    "end": "676820"
  },
  {
    "text": "sorry but s and I basically allows you to route based on the host header of the packet that you're sending in because",
    "start": "676820",
    "end": "683300"
  },
  {
    "text": "when the payload is encrypted if you don't know how to route that traffic then you wouldn't be able to send it to",
    "start": "683300",
    "end": "688820"
  },
  {
    "text": "a downstream service especially in a multi-tenant environment so and that later versions of ambassador do support",
    "start": "688820",
    "end": "694940"
  },
  {
    "text": "s and i use case number two so let's keep with this north-south routing so if",
    "start": "694940",
    "end": "700880"
  },
  {
    "text": "you heard of edge an edge api gateway it's usually north-south traffic basically it comes in and goes down into",
    "start": "700880",
    "end": "706700"
  },
  {
    "text": "my environment and then comes back up another use case for that wouldn't be on the edge but it'd be more internal to my",
    "start": "706700",
    "end": "712130"
  },
  {
    "text": "environment so I may still have an edge api gateway but then i have kind of a",
    "start": "712130",
    "end": "717589"
  },
  {
    "text": "tiered approach if you think of like a three-tier app maybe between my web tier and by middleware or between my",
    "start": "717589",
    "end": "723350"
  },
  {
    "text": "middleware in my back-end i might want to have an api gateway as well to handle different routing needs again this is",
    "start": "723350",
    "end": "729830"
  },
  {
    "text": "can be used for things like multi-tenant environments and it can provide a whole",
    "start": "729830",
    "end": "735080"
  },
  {
    "text": "lot of benefits that I can offload from my app like buffering and retries and different caching policies so again",
    "start": "735080",
    "end": "742850"
  },
  {
    "text": "going back to my real-world example I'm kind of enhancing the sass service here let's assume that every tenant gets its",
    "start": "742850",
    "end": "749990"
  },
  {
    "text": "own namespace every namespace has the same set of services so now I'm talking about more of a multi-tenant sass with",
    "start": "749990",
    "end": "756470"
  },
  {
    "text": "some isolation how could I route traffic using the previous example well the edge",
    "start": "756470",
    "end": "762350"
  },
  {
    "text": "proxy can still do this internal routing for me that's completely supported but",
    "start": "762350",
    "end": "767930"
  },
  {
    "text": "you may want to actually separate out those responsibilities maybe I want the edge Ambassador instance to be totally",
    "start": "767930",
    "end": "774709"
  },
  {
    "text": "separate from the internal ambassador instance there are actually valid reasons to separate these out I'll talk",
    "start": "774709",
    "end": "780589"
  },
  {
    "text": "about them and lessons learned in just a second then we have internal east-west",
    "start": "780589",
    "end": "785870"
  },
  {
    "start": "783000",
    "end": "861000"
  },
  {
    "text": "traffic so let's say I have micro services that want to talk to each other on the same tier I could also use an API",
    "start": "785870",
    "end": "792200"
  },
  {
    "text": "gateway for that how would I do that and the kubernetes world is a question that often gets asked and why would I want to",
    "start": "792200",
    "end": "799040"
  },
  {
    "text": "do it the why is because of things like I want to handle different load balancing policies I want to have different",
    "start": "799040",
    "end": "805129"
  },
  {
    "text": "service discovery models how can I do that I could implement it in my app I could leverage some third-party service",
    "start": "805129",
    "end": "811730"
  },
  {
    "text": "like console I could have used something like an API gateway so in this deployment model if I'm in kubernetes I",
    "start": "811730",
    "end": "818990"
  },
  {
    "text": "can actually deploy Ambassador as a daemon set which means it runs on every single host and then from a DNS",
    "start": "818990",
    "end": "825769"
  },
  {
    "text": "perspective I can actually have all of my micro services talk directly to Ambassador so for example if I want the",
    "start": "825769",
    "end": "832399"
  },
  {
    "text": "analytic service to talk to the ingest service the DNS record can be on the Ambassador instance itself so the",
    "start": "832399",
    "end": "838850"
  },
  {
    "text": "analytic service will actually talk to ambassador ambassador handles the routing up to the ingest service this",
    "start": "838850",
    "end": "844550"
  },
  {
    "text": "can also happen across house so if the analytic service wants to talk to the quarry service again it can do that",
    "start": "844550",
    "end": "850249"
  },
  {
    "text": "through Ambassador so instead of doing it directly this provides a lot of flexibility and again I can offload some",
    "start": "850249",
    "end": "856459"
  },
  {
    "text": "of the responsibilities that it otherwise have to code into my application itself service mesh also",
    "start": "856459",
    "end": "863240"
  },
  {
    "start": "861000",
    "end": "910000"
  },
  {
    "text": "comes up when you think about east-west traffic you probably think about a service master something like Sto su is",
    "start": "863240",
    "end": "868819"
  },
  {
    "text": "based on envoy uses envoy is a data plane though other ones are going to be supported and then SEO has a control",
    "start": "868819",
    "end": "875779"
  },
  {
    "text": "plane called mixer today and that can basically handle this east-west traffic so basically the Envoy proxies talk to",
    "start": "875779",
    "end": "882290"
  },
  {
    "text": "each other so if the query service wants to talk to the billing service the envoys can handle that but SEO handles",
    "start": "882290",
    "end": "887749"
  },
  {
    "text": "the configuration of envoy and all the different policies that you want to have even in a service mesh you can leverage",
    "start": "887749",
    "end": "893839"
  },
  {
    "text": "ambassador so maybe ambassadors used from an edge Gateway perspective so it's only used in the edge the perimeter I",
    "start": "893839",
    "end": "900019"
  },
  {
    "text": "could also be used on a internal routing perspective too like per namespace I",
    "start": "900019",
    "end": "905149"
  },
  {
    "text": "could have an ambassador instance and then offload the rest of responsibilities to the service mesh",
    "start": "905149",
    "end": "910929"
  },
  {
    "start": "910000",
    "end": "1074000"
  },
  {
    "text": "some non application base use cases for ambassador one of the biggest ones is",
    "start": "910929",
    "end": "916490"
  },
  {
    "text": "chat traffic shadowing this one's really cool so basically let's say I have an application that's running available in",
    "start": "916490",
    "end": "922759"
  },
  {
    "text": "my environment and I want to spin up another copy of that environment and I want to replicate the traffic to it so I",
    "start": "922759",
    "end": "928730"
  },
  {
    "text": "can test let's say a new software build or a new configuration parameter new sizing things I can do that with",
    "start": "928730",
    "end": "935420"
  },
  {
    "text": "ambassador I can say keep routing a hundred percent of the traffic to my production service but send either a",
    "start": "935420",
    "end": "940880"
  },
  {
    "text": "hundred percent copy of that data to a new location or a small percentage one percent five percent ten percent it's",
    "start": "940880",
    "end": "947570"
  },
  {
    "text": "actually configurable how much data you shadow to the other destination this allows you to really test in production",
    "start": "947570",
    "end": "954230"
  },
  {
    "text": "and you have real data so instead of trying to simulate it or use a staging or development environment you could",
    "start": "954230",
    "end": "960290"
  },
  {
    "text": "actually do this live in production very powerful for testing new features now how this works is when I send to in this",
    "start": "960290",
    "end": "967670"
  },
  {
    "text": "case slash my service I actually send the data to that service and I receive the acknowledgement ambassador receives",
    "start": "967670",
    "end": "974540"
  },
  {
    "text": "the entire communication path in the case of the shadow it sends the data to",
    "start": "974540",
    "end": "979640"
  },
  {
    "text": "the shadow but it never listens for the acknowledgment it's kind of a fire-and-forget if you will that's",
    "start": "979640",
    "end": "985190"
  },
  {
    "text": "because if invalid ambassador acknowledged it that could cause some issues but this is extremely powerful",
    "start": "985190",
    "end": "990380"
  },
  {
    "text": "you can get all your limit tree data metrics prometheus stats out of Ambassador to see how that traffic's",
    "start": "990380",
    "end": "995930"
  },
  {
    "text": "being handled you can of course monitor your shadow application it's great for software developers that want to test",
    "start": "995930",
    "end": "1001930"
  },
  {
    "text": "code another one for software development for more of a testing",
    "start": "1001930",
    "end": "1007090"
  },
  {
    "text": "perspective ambassadors from a company called data wire I do not work at data wire I work at a mission they have",
    "start": "1007090",
    "end": "1014320"
  },
  {
    "text": "another product called telepresence it's part of CN CF and telepresence allows a local developer that has code running on",
    "start": "1014320",
    "end": "1021790"
  },
  {
    "text": "their local device they allow them to connect that into an existing kubernetes environment and run it live you can",
    "start": "1021790",
    "end": "1028300"
  },
  {
    "text": "actually hook this up into ambassador as well so for example if I have a software developer here Jane who wants to send a",
    "start": "1028300",
    "end": "1034990"
  },
  {
    "text": "request in get authenticated by ambassador and then actually connect to",
    "start": "1034990",
    "end": "1040870"
  },
  {
    "text": "her local desktop in a production environment via telepresence that can be done where as another user let's say Bob",
    "start": "1040870",
    "end": "1048280"
  },
  {
    "text": "wants to connect not using telepresence not connecting to their local desktop they would see the real production",
    "start": "1048280",
    "end": "1053740"
  },
  {
    "text": "environments this is extremely powerful and flexible big disclaimer here this part is not free so ambassador is an",
    "start": "1053740",
    "end": "1060850"
  },
  {
    "text": "open-source project but they do have a pro paid version this is one of the paid version features",
    "start": "1060850",
    "end": "1066910"
  },
  {
    "text": "telepresence is free open-source project so is ambassador but when you want to tie them together that part cost money",
    "start": "1066910",
    "end": "1073930"
  },
  {
    "text": "today all right so with that context let's go ahead and talk about configuration configuration matters",
    "start": "1073930",
    "end": "1080980"
  },
  {
    "start": "1074000",
    "end": "1441000"
  },
  {
    "text": "depending on the version that you're running if you're running a version later than 0.6 50 please upgrade that",
    "start": "1080980",
    "end": "1087520"
  },
  {
    "text": "version is quite old at this point but back in those days your options were config Maps or annotations if you're",
    "start": "1087520",
    "end": "1093250"
  },
  {
    "text": "running a version greater than or equal to 0.58 ations config maps were actually",
    "start": "1093250",
    "end": "1100090"
  },
  {
    "text": "drops from a support perspective so as you upgrade you'll have to migrate off of config Maps if you're using them and",
    "start": "1100090",
    "end": "1105520"
  },
  {
    "text": "then if you're using a version greater than or equal to 0.78 a shion's but they",
    "start": "1105520",
    "end": "1111850"
  },
  {
    "text": "also introduced support for c or DS or custom resource definitions c or DS as",
    "start": "1111850",
    "end": "1117070"
  },
  {
    "text": "you may have heard during the conference this week are basically the future of kubernetes and how you handle",
    "start": "1117070",
    "end": "1122320"
  },
  {
    "text": "configuration so I'd strongly advise looking at those or moving to those I can't speak for data wire and what their",
    "start": "1122320",
    "end": "1128620"
  },
  {
    "text": "plans are for Ambassador but I wouldn't be surprised of annotation support goes away in the future so I would definitely",
    "start": "1128620",
    "end": "1134590"
  },
  {
    "text": "look at C or these I do want to provide some configuration examples for you this is from the documentation I just want to",
    "start": "1134590",
    "end": "1141190"
  },
  {
    "text": "call out some important things to be aware of including some lessons learned that I had I'm actually providing two",
    "start": "1141190",
    "end": "1146650"
  },
  {
    "text": "different forms of the configuration for you if you were to use an annotation versus if you were to use a C or D",
    "start": "1146650",
    "end": "1152080"
  },
  {
    "text": "because some people have not moved to 0.70 or greater yet as you can see they",
    "start": "1152080",
    "end": "1157300"
  },
  {
    "text": "look remarkably similar it's just a C or D is a top-level parent construct or an",
    "start": "1157300",
    "end": "1162370"
  },
  {
    "text": "annotation gets written into another existing a resource for example a service so a few things to call out here",
    "start": "1162370",
    "end": "1169510"
  },
  {
    "text": "ambassador configurations are versions version one came out at 0.50 you should",
    "start": "1169510",
    "end": "1175210"
  },
  {
    "text": "be using version 1 0 person zero is deprecated another thing to call out",
    "start": "1175210",
    "end": "1180490"
  },
  {
    "text": "here is that all configuration is done by a kind so here we're looking at",
    "start": "1180490",
    "end": "1185710"
  },
  {
    "text": "encryption so that kind is module there are different types of kinds of configuration they are all documented",
    "start": "1185710",
    "end": "1192100"
  },
  {
    "text": "for you the Ambassador ID is critical so if you run a one ambassador cluster you",
    "start": "1192100",
    "end": "1198520"
  },
  {
    "text": "don't need ambassador ID but if let's say you have an ingress one and a separate internal ambassador cluster you",
    "start": "1198520",
    "end": "1204490"
  },
  {
    "text": "need to have unique identifiers otherwise the system won't know how to configure itself and you'll have",
    "start": "1204490",
    "end": "1209980"
  },
  {
    "text": "overlapping config between your instances so my general advice is even if you only have one ambassador cluster",
    "start": "1209980",
    "end": "1216580"
  },
  {
    "text": "today go ahead and set that ID it'll make your life easier in the future if you happen to add another ambassador",
    "start": "1216580",
    "end": "1222429"
  },
  {
    "text": "cluster and then finally the name so every configuration section has a name",
    "start": "1222429",
    "end": "1228309"
  },
  {
    "text": "that name needs to be unique so we'll talk about mappings here in a second one",
    "start": "1228309",
    "end": "1234460"
  },
  {
    "text": "common mistake that I see made is that the same name is used for multiple different mappings that will not work",
    "start": "1234460",
    "end": "1240250"
  },
  {
    "text": "you will have configuration problems it can be hard to troubleshoot because sometimes the logs are not clear as to",
    "start": "1240250",
    "end": "1246309"
  },
  {
    "text": "what's happening from an authentication perspective this is actually a big feature in my opinion of using",
    "start": "1246309",
    "end": "1252580"
  },
  {
    "text": "Ambassador as an edge gateway you can actually have it require authentication at every request that is made so",
    "start": "1252580",
    "end": "1258850"
  },
  {
    "text": "basically when a request comes in to the API server it will go off and authenticate it make sure you're authenticated before it makes the call",
    "start": "1258850",
    "end": "1265360"
  },
  {
    "text": "downstream now there are configuration parameters it's a bypass the authentication service I personally",
    "start": "1265360",
    "end": "1271179"
  },
  {
    "text": "don't recommend that I would rather add that logic into the authentication service myself but that's just my opinion and how I've seen it done what's",
    "start": "1271179",
    "end": "1278470"
  },
  {
    "text": "worth mentioning here embassador does not provide an authentication service you must provide that there are plenty",
    "start": "1278470",
    "end": "1284830"
  },
  {
    "text": "of open source options out there it's very easy to get it configured but ambassador the open-source version does",
    "start": "1284830",
    "end": "1290590"
  },
  {
    "text": "not have authentication service the pro version which you pay for does have an authentication service if you're",
    "start": "1290590",
    "end": "1296230"
  },
  {
    "text": "interested in that basically how this works is you specify hey my authentication service is located here",
    "start": "1296230",
    "end": "1302309"
  },
  {
    "text": "here is the path and ports to connect to it and then you can specify different headers that you want to receive or send",
    "start": "1302309",
    "end": "1310030"
  },
  {
    "text": "to the authentication service to authenticate that request mappings this",
    "start": "1310030",
    "end": "1315850"
  },
  {
    "text": "is probably the most critical thing in Ambassador so you authenticate your request you have encryption in place",
    "start": "1315850",
    "end": "1322299"
  },
  {
    "text": "that's kind of initial configuration especially from an edge routing perspective but the primary use case for",
    "start": "1322299",
    "end": "1328000"
  },
  {
    "text": "ambassador is actually mapping and routing calls within your environments so a mapping basically says I",
    "start": "1328000",
    "end": "1334119"
  },
  {
    "text": "have some source here it's called hosts and I have some paths here it's called prefix so in this particular example I'm",
    "start": "1334119",
    "end": "1341649"
  },
  {
    "text": "saying if the host equals omniscient oh and the path is slash then I want you to",
    "start": "1341649",
    "end": "1348429"
  },
  {
    "text": "send that traffic I want you to map it to the service which is called web dot default so if I'm in kubernetes that",
    "start": "1348429",
    "end": "1355599"
  },
  {
    "text": "would be a service called web in the default namespace now that service can",
    "start": "1355599",
    "end": "1360759"
  },
  {
    "text": "also have a port and a path so I could say web dot Defoe default colon",
    "start": "1360759",
    "end": "1366459"
  },
  {
    "text": "one two three four slash tests so it's very configure it configurable to what",
    "start": "1366459",
    "end": "1372039"
  },
  {
    "text": "you need in your environments and you can again pass headers here as well actually from a configuration",
    "start": "1372039",
    "end": "1377829"
  },
  {
    "text": "perspective a lot of what I've seen people do is in addition to the host and prefix actually specifying a header that",
    "start": "1377829",
    "end": "1384099"
  },
  {
    "text": "needs to be passed in order to make the call downstream and then finally",
    "start": "1384099",
    "end": "1389379"
  },
  {
    "text": "observability an api gateway is kind of in the hot path of your environment so if it goes down or if you have",
    "start": "1389379",
    "end": "1395409"
  },
  {
    "text": "performance problems you're gonna want to know about that you're gonna want to be able to observe the system so out-of-the-box",
    "start": "1395409",
    "end": "1401139"
  },
  {
    "text": "ambassador provides previous metrics through us that's d exporter it has logs",
    "start": "1401139",
    "end": "1406449"
  },
  {
    "text": "natively built in it has a diagnostic UI that you can access on port 8/8 seven",
    "start": "1406449",
    "end": "1412389"
  },
  {
    "text": "seven which tells you about the configuration and the general health of the system but it also has the ability",
    "start": "1412389",
    "end": "1417639"
  },
  {
    "text": "of sending out distributed tracing data in the form of Zipkin so this is just a",
    "start": "1417639",
    "end": "1423069"
  },
  {
    "text": "configuration parameter we basically say hey I have a in this case destination",
    "start": "1423069",
    "end": "1428709"
  },
  {
    "text": "that except Zipkin called collector dot dot default and i want to use the zip pin driver to export that data and now I",
    "start": "1428709",
    "end": "1435099"
  },
  {
    "text": "can see distributed trace information in my environment which is very important for micro services based environments",
    "start": "1435099",
    "end": "1441659"
  },
  {
    "start": "1441000",
    "end": "1689000"
  },
  {
    "text": "alright so lessons learned dedicate ambassadors / responsibility I showed",
    "start": "1441659",
    "end": "1446829"
  },
  {
    "text": "you in just in query going to the same Ambassador instance and the fact that ambassador could route to multiple",
    "start": "1446829",
    "end": "1452409"
  },
  {
    "text": "namespaces I don't recommend this I recommend that you separate per responsibility ingest has a dedicated",
    "start": "1452409",
    "end": "1459429"
  },
  {
    "text": "ambassador with its own ID quarry has its own ambassador with its own ID internal routing is handled by its own",
    "start": "1459429",
    "end": "1466059"
  },
  {
    "text": "ambassador by its own ID yes that's three different clusters it's really not that hard to manage them but",
    "start": "1466059",
    "end": "1472030"
  },
  {
    "text": "that isolation provides a whole lot of the benefits for example fault tolerance",
    "start": "1472030",
    "end": "1477250"
  },
  {
    "text": "if for example ingestion brings down query everyone's gonna be sad but if",
    "start": "1477250",
    "end": "1482679"
  },
  {
    "text": "ingestion and quarry are separate then even if ingestion is having a problem quarry is still available that",
    "start": "1482679",
    "end": "1487720"
  },
  {
    "text": "separation of responsibilities is quite powerful this does require a unique ambassador ID per cluster second time",
    "start": "1487720",
    "end": "1495580"
  },
  {
    "text": "outs I got burned by this one so worth noting there is actually a timeout of",
    "start": "1495580",
    "end": "1501520"
  },
  {
    "text": "three seconds for every ambassador cluster that you have so here you can see if I have an edge ambassador",
    "start": "1501520",
    "end": "1507190"
  },
  {
    "text": "instance it has a three-second timeout if I have a downstream ambassador that also has a three seconds timeout",
    "start": "1507190",
    "end": "1512500"
  },
  {
    "text": "well let's say the quarry path is not responding well the call came in from the intranet here and the time starts",
    "start": "1512500",
    "end": "1520750"
  },
  {
    "text": "for this ambassador cluster immediately it calls the converter service maybe that takes a hundred milliseconds it",
    "start": "1520750",
    "end": "1526270"
  },
  {
    "text": "calls ambassador that takes ten milliseconds it calls the quarry path this times out that timeout is going to",
    "start": "1526270",
    "end": "1533020"
  },
  {
    "text": "happen here first before this one times out that can bring down your service",
    "start": "1533020",
    "end": "1538780"
  },
  {
    "text": "I've seen it happen the flipside of that is if you're running a load balancer in front of your",
    "start": "1538780",
    "end": "1544270"
  },
  {
    "text": "ambassador which you probably are in the edge there are probably timeouts for that the default AWS load balancer time",
    "start": "1544270",
    "end": "1550390"
  },
  {
    "text": "out of 60 seconds that's a long time try upgrading Ambassador doesn't go so well",
    "start": "1550390",
    "end": "1556330"
  },
  {
    "text": "with those timeout defaults so you need to make some changes you can actually override these again in the yamo",
    "start": "1556330",
    "end": "1561820"
  },
  {
    "text": "configuration there's a way to override the defaults I'm showing you an example for AWS but other clouds are supported",
    "start": "1561820",
    "end": "1567790"
  },
  {
    "text": "as well these are just annotations that you add and you can set the thresholds that you care about and you can override",
    "start": "1567790",
    "end": "1574660"
  },
  {
    "text": "the timeouts in Ambassador so if you have for example a north-south configuration with an ambassador on the",
    "start": "1574660",
    "end": "1580720"
  },
  {
    "text": "edge and another one internally I recommend that your edge one have a higher timeout than your internal one",
    "start": "1580720",
    "end": "1587020"
  },
  {
    "text": "that way that things timeout properly and you get the right error messages when things are not working properly you",
    "start": "1587020",
    "end": "1592780"
  },
  {
    "text": "can do that from a request perspective and idle timeout and a connection perspective that can be done per mapping",
    "start": "1592780",
    "end": "1598360"
  },
  {
    "text": "or globally for the entire Ambassador instance so a lot of flexibility there understanding",
    "start": "1598360",
    "end": "1604210"
  },
  {
    "text": "service discovery so by default service discovery is done by kubernetes services and that's done via DNS use service or",
    "start": "1604210",
    "end": "1612759"
  },
  {
    "text": "service dot namespace don't do service namespace that SVC dot cluster that local this is not an ambassador thing",
    "start": "1612759",
    "end": "1619240"
  },
  {
    "text": "this is a kubernetes thing from a DNS perspective that's very inefficient so I don't recommend putting the SVC to",
    "start": "1619240",
    "end": "1625120"
  },
  {
    "text": "cluster that local on the end ambassador does support other routing mechanisms besides a kubernetes service",
    "start": "1625120",
    "end": "1630909"
  },
  {
    "text": "for example you can do endpoint routing in kubernetes as well as console routing and then from a load balancing",
    "start": "1630909",
    "end": "1636700"
  },
  {
    "text": "perspective round-robin is the defaults if you're using like endpoint routing but ring hash and Maglev are supported",
    "start": "1636700",
    "end": "1643480"
  },
  {
    "text": "again this is based on envoy so anything that envoys supports can also be added to ambassador and other load balancing",
    "start": "1643480",
    "end": "1650919"
  },
  {
    "text": "policies will be added in the future and then I'll point out one problem that I have personally experienced with",
    "start": "1650919",
    "end": "1656500"
  },
  {
    "text": "Ambassador and I think it's more of a kubernetes problem but we had an example where we would try to upgrade a",
    "start": "1656500",
    "end": "1663279"
  },
  {
    "text": "downstream service so let's say I terminate one of my converter pods and a new one comes up because the replication",
    "start": "1663279",
    "end": "1669009"
  },
  {
    "text": "set is set to two when that happens ambassador starts generating 503 s until",
    "start": "1669009",
    "end": "1674590"
  },
  {
    "text": "you kick ambassador not good from a performance standpoint so this is",
    "start": "1674590",
    "end": "1679929"
  },
  {
    "text": "something that we're actually actively investigating there's a github issue open about it I don't think it's necessarily ambassador specific but I",
    "start": "1679929",
    "end": "1686169"
  },
  {
    "text": "did want to point it out in case you see it yourself finally some other lessons learned I think ambassador is great to",
    "start": "1686169",
    "end": "1693399"
  },
  {
    "start": "1689000",
    "end": "1852000"
  },
  {
    "text": "get started I was able to deploy it and get it running in minutes like less than an hour I had this working in a",
    "start": "1693399",
    "end": "1698919"
  },
  {
    "text": "production environment very simple it provides the basic constructs but you do need to do some work to yourself for",
    "start": "1698919",
    "end": "1705669"
  },
  {
    "text": "example you want a fent ocation you need to go solve that problem luckily we had an authentication service so it wasn't a",
    "start": "1705669",
    "end": "1711549"
  },
  {
    "text": "problem for us but if you're starting from scratch you may not and you'll need to look into options for that how are",
    "start": "1711549",
    "end": "1716889"
  },
  {
    "text": "you going to handle things like circuit breaking I didn't cover it cover circuit breaking in this talk but that's fully supported by Ambassador again that would",
    "start": "1716889",
    "end": "1723429"
  },
  {
    "text": "have to be a service that you run or you'd have to use the pro version of Ambassador to get that functionality and then how do you want to handle more",
    "start": "1723429",
    "end": "1729759"
  },
  {
    "text": "advanced or granular things like I want to handle per service retries we can do",
    "start": "1729759",
    "end": "1734980"
  },
  {
    "text": "Reece try sperm mapping or globally per ambassador but per service is only available in the pro version today so",
    "start": "1734980",
    "end": "1741740"
  },
  {
    "text": "how do you do want to handle that when you run across that from a best practices perspective make sure you",
    "start": "1741740",
    "end": "1747230"
  },
  {
    "text": "store your configuration with your service so the exception I'd say here is the authentication service itself I",
    "start": "1747230",
    "end": "1753590"
  },
  {
    "text": "highly recommend that the configuration whether it's an annotation or a CR D for authentication be stored with Ambassador",
    "start": "1753590",
    "end": "1760639"
  },
  {
    "text": "not with your authentication service why because I want to ensure that ambassador",
    "start": "1760639",
    "end": "1765830"
  },
  {
    "text": "requires authentication for my calls if my off service fails to deploy or is misconfigured I don't want ambassador to",
    "start": "1765830",
    "end": "1772610"
  },
  {
    "text": "bypass it and try to route traffic downstream that would be very insecure other than the authentication service",
    "start": "1772610",
    "end": "1778669"
  },
  {
    "text": "you should store anything that's ambassador configuration related for a service in the service repository so",
    "start": "1778669",
    "end": "1784909"
  },
  {
    "text": "Mike my quarry service will have annotations or C or DS for the Cori service same for my ingest service and",
    "start": "1784909",
    "end": "1791330"
  },
  {
    "text": "then everything should go through CI C D so treat configuration as code and",
    "start": "1791330",
    "end": "1796549"
  },
  {
    "text": "routing is much harder than internal routing so you need to answer questions like how would you address end-to-end",
    "start": "1796549",
    "end": "1802249"
  },
  {
    "text": "encryption and you need to answer questions like from a thent ocation perspective which headers you care about",
    "start": "1802249",
    "end": "1807769"
  },
  {
    "text": "routing in and out and then from an observer ability standpoint ambassador",
    "start": "1807769",
    "end": "1813080"
  },
  {
    "text": "is actually pretty good because envoy is actually pretty good when it comes to observer ability there are very good Prometheus metrics that are exposed that",
    "start": "1813080",
    "end": "1819980"
  },
  {
    "text": "you can take advantage of in my opinion they're a little bit not granular enough so for example I can determine when 400",
    "start": "1819980",
    "end": "1827210"
  },
  {
    "text": "level status codes happen but I can't tell if it's a 401 or a 404 I'd kind of",
    "start": "1827210",
    "end": "1832460"
  },
  {
    "text": "like that possibility but that's an envoy limitation not an ambassador limitation the only thing I would like",
    "start": "1832460",
    "end": "1839119"
  },
  {
    "text": "to see improved an ambassador from an observability standpoint it's a diagnostic UI I've actually submitted a",
    "start": "1839119",
    "end": "1844879"
  },
  {
    "text": "few feature requests on how to enhance that to get some alerting capabilities and a better UI from a CSS perspective",
    "start": "1844879",
    "end": "1851389"
  },
  {
    "text": "and with that I would like to open it up to questions from the audience and",
    "start": "1851389",
    "end": "1856700"
  },
  {
    "start": "1852000",
    "end": "2150000"
  },
  {
    "text": "there's a microphone so please use the microphone",
    "start": "1856700",
    "end": "1861669"
  },
  {
    "text": "my concern is also difference between ambassador and instability and it's your",
    "start": "1867220",
    "end": "1874309"
  },
  {
    "text": "one good good did we get your gateway yeah gotcha",
    "start": "1874309",
    "end": "1879500"
  },
  {
    "text": "so SEO is a service mesh the goal typically is for internal east-west",
    "start": "1879500",
    "end": "1885650"
  },
  {
    "text": "communication for Asia that's its primary focus it can do edge as well but that's not its primary focus ambassadors",
    "start": "1885650",
    "end": "1891980"
  },
  {
    "text": "and primary focus is the exact opposite it primarily focuses on edge and not as much on east-west but it can do",
    "start": "1891980",
    "end": "1898909"
  },
  {
    "text": "east-west so what I often see is a combination of both I've seen a lot of customers that will deploy sto for their",
    "start": "1898909",
    "end": "1905390"
  },
  {
    "text": "internal traffic and have ambassador sit on the edge to route traffic in and out because ambassador typically is more",
    "start": "1905390",
    "end": "1911000"
  },
  {
    "text": "feature-rich for things like G RPC TLS termination of data where sto doesn't",
    "start": "1911000",
    "end": "1917149"
  },
  {
    "text": "have some of those features yet today welcome to this commission and some my",
    "start": "1917149",
    "end": "1928429"
  },
  {
    "text": "team ingress all this provided these pictures currently yes if you has some",
    "start": "1928429",
    "end": "1935390"
  },
  {
    "text": "of the features but not all of them again its primary focus is east-west traffic and ambassadors primarily is",
    "start": "1935390",
    "end": "1942049"
  },
  {
    "text": "north-south there is definitely some overlap there but often we see a",
    "start": "1942049",
    "end": "1947090"
  },
  {
    "text": "separation to be fair kubernetes has this notion of an ingress controller yeah why not use that there are lots of",
    "start": "1947090",
    "end": "1954230"
  },
  {
    "text": "limitations with the ingress controller and only supports HTTP and HTTPS no TCP again there's going to be some",
    "start": "1954230",
    "end": "1960590"
  },
  {
    "text": "limitations initio and some an ambassador you have to see which one's fits your needs and which ones are more whether you want to leverage one the",
    "start": "1960590",
    "end": "1967610"
  },
  {
    "text": "other or both and what's your recommended way to make the two together used to and I'm not the",
    "start": "1967610",
    "end": "1974049"
  },
  {
    "text": "recommended way to deploy it yeah what's your own mind anyway yeah so I mean from",
    "start": "1974049",
    "end": "1980870"
  },
  {
    "text": "an issue perspective just configure your app like you normally have ambassador just sits on the edge gateway so it's",
    "start": "1980870",
    "end": "1986210"
  },
  {
    "text": "the traffic routing into your environment so think of it as a separate ingress controller from sto and then the",
    "start": "1986210",
    "end": "1991669"
  },
  {
    "text": "API gateway of Ambassador can be used to route directly to your application through is do",
    "start": "1991669",
    "end": "1997220"
  },
  {
    "text": "so there there there really isn't any overlap there you can completely isolate the two from a configuration standpoint",
    "start": "1997220",
    "end": "2003549"
  },
  {
    "text": "no overnight yeah before no no yeah yeah",
    "start": "2003549",
    "end": "2012720"
  },
  {
    "text": "thanks other questions oh yeah thanks",
    "start": "2012720",
    "end": "2020710"
  },
  {
    "text": "for that great talk I just wanted to know you mentioned about CR D versus annotations so how do you think that",
    "start": "2020710",
    "end": "2027990"
  },
  {
    "text": "starting 70 you should only use CR DS or you should you can use so you said you",
    "start": "2027990",
    "end": "2033940"
  },
  {
    "text": "can use both but which one should we use my recommendation would be to use series",
    "start": "2033940",
    "end": "2039010"
  },
  {
    "text": "because I think CDs in the future if you start listening to some of the talks this week Cabrera's is moving to a C or",
    "start": "2039010",
    "end": "2044770"
  },
  {
    "text": "D model so I I personally wouldn't be surprised if annotations get removed from ambassador in the future but that's",
    "start": "2044770",
    "end": "2050710"
  },
  {
    "text": "my opinion I can't speak for what data wire is planning to do annotations are fully supported in 0.70 you do not need to",
    "start": "2050710",
    "end": "2057730"
  },
  {
    "text": "move to c or DS I can see some big benefits though if you're running kubernetes 114 or newer then you can",
    "start": "2057730",
    "end": "2064599"
  },
  {
    "text": "actually do C or D server-side validation which you cannot do with annotations today that's a huge benefits",
    "start": "2064599",
    "end": "2071050"
  },
  {
    "text": "I can now make sure that the config is the way that I expect it to and that it's going to work properly that's something missing from",
    "start": "2071050",
    "end": "2076750"
  },
  {
    "text": "annotations and I wouldn't expect Cooper needs to add so long term I think C or these are the way to go okay thank you",
    "start": "2076750",
    "end": "2084450"
  },
  {
    "text": "Hey so one question from an operational perspective for the micro services would",
    "start": "2090810",
    "end": "2096128"
  },
  {
    "text": "you say that ambassador is the right point to plug in gradual rollout for different versions of micro services so",
    "start": "2096129",
    "end": "2102820"
  },
  {
    "text": "for example the canary yes so so ambassador fully supports canary deployments yeah you can specify that or",
    "start": "2102820",
    "end": "2109180"
  },
  {
    "text": "you can do it from a shadow perspective those are two different ways that you can leverage it do you know by any chance is it strictly probabilistic",
    "start": "2109180",
    "end": "2116260"
  },
  {
    "text": "traffic split or can traffic be split for example on sessions on Harris",
    "start": "2116260",
    "end": "2123220"
  },
  {
    "text": "session here oh I see I know you can map a percentage I don't use it extensively",
    "start": "2123220",
    "end": "2129760"
  },
  {
    "text": "so I don't know I'd have look but that's a good question I check it out yep I think we're at time but if",
    "start": "2129760",
    "end": "2139630"
  },
  {
    "text": "you come over here I have a few minutes and I'm more than happy to take additional questions thank you so much everyone for attending and if you're",
    "start": "2139630",
    "end": "2144790"
  },
  {
    "text": "interested in ambassador stickers I have some so please come on up thank you",
    "start": "2144790",
    "end": "2150210"
  }
]