[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "okay so looks like we're good point to start alright good afternoon everybody",
    "start": "30",
    "end": "6150"
  },
  {
    "text": "my name is Ilya jackregan I'm found an engineer at abound",
    "start": "6150",
    "end": "11360"
  },
  {
    "text": "I'm also lead bin trainer on crossplane project it's open source project we",
    "start": "11360",
    "end": "16560"
  },
  {
    "text": "started at about about eight months ago and we open source right before cube con",
    "start": "16560",
    "end": "21900"
  },
  {
    "text": "in Seattle last December and today I want to talk to you about extending",
    "start": "21900",
    "end": "27150"
  },
  {
    "text": "kubernetes to orchestrate and support resources managed by public cloud providers all right",
    "start": "27150",
    "end": "38430"
  },
  {
    "start": "37000",
    "end": "37000"
  },
  {
    "text": "so over the last decade we have witnessed the emergence of cloud",
    "start": "38430",
    "end": "43469"
  },
  {
    "text": "computing as predominant IT paradigm cloud computing enables organization to",
    "start": "43469",
    "end": "49230"
  },
  {
    "text": "focus on the core business competencies and quickly respond to changing demands",
    "start": "49230",
    "end": "54329"
  },
  {
    "text": "without expending significant resources on infrastructure in maintenance organizations can take instantly take",
    "start": "54329",
    "end": "61739"
  },
  {
    "text": "advantage of the world class services across infrastructure and they can do so",
    "start": "61739",
    "end": "66990"
  },
  {
    "text": "with the scale the businesses globally with efficient paper use model yet",
    "start": "66990",
    "end": "74549"
  },
  {
    "start": "73000",
    "end": "73000"
  },
  {
    "text": "despite its predominance the cloud computing remains completely under control of small set of cloud providers",
    "start": "74549",
    "end": "80330"
  },
  {
    "text": "Amazon Microsoft and Google are at the front of the race and compete aggressively for market share in talent",
    "start": "80330",
    "end": "87810"
  },
  {
    "text": "and while these providers themselves are heavy adopters of open source technologies the cloud computing remains",
    "start": "87810",
    "end": "94770"
  },
  {
    "text": "predominantly proprietary and close source each cloud provider offers a",
    "start": "94770",
    "end": "99930"
  },
  {
    "text": "walled garden of proprietary services that are designed to lock in and keep",
    "start": "99930",
    "end": "105030"
  },
  {
    "text": "the customers in maximize utilization of this specific law provide infrastructure and while your own services when you",
    "start": "105030",
    "end": "113729"
  },
  {
    "text": "write your services they typically run in VMs containers service functions or",
    "start": "113729",
    "end": "119130"
  },
  {
    "text": "otherwise portable more frequently they depend on platform resources like",
    "start": "119130",
    "end": "124290"
  },
  {
    "text": "databases message queues big data AI machine learning and so forth the very",
    "start": "124290",
    "end": "130110"
  },
  {
    "text": "resources that cloud providers offer as a managed services and what make managers is so appealing is",
    "start": "130110",
    "end": "136050"
  },
  {
    "text": "that you don't have to worry about a lot of this task like provisioning deploying scaling doing disaster recovery backing",
    "start": "136050",
    "end": "143280"
  },
  {
    "text": "up in others all the tasks that are required to run production great services the cloud providers they will",
    "start": "143280",
    "end": "149760"
  },
  {
    "text": "take all responsibility for all those tasks and they even give us la to guarantee uptime and delivery of your",
    "start": "149760",
    "end": "156090"
  },
  {
    "text": "own services in return you will pay typically above and beyond to what",
    "start": "156090",
    "end": "161400"
  },
  {
    "text": "normal costing hosting charges are and effectively you could run the same",
    "start": "161400",
    "end": "166950"
  },
  {
    "text": "services yourself on the same cloud provider and save some money but that Mart ditional markup is proprietary",
    "start": "166950",
    "end": "172590"
  },
  {
    "text": "specifically for the managed services not for managing those services",
    "start": "172590",
    "end": "178250"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "typically when cloud providers adopt open source technologies they will offer",
    "start": "178250",
    "end": "183540"
  },
  {
    "text": "the same services for example right here you'll see my sequel offer virtual problems by every cloud provider in size",
    "start": "183540",
    "end": "189810"
  },
  {
    "text": "shape and form however the service name and wire protocol could be the only common thing the way you provision scale",
    "start": "189810",
    "end": "197370"
  },
  {
    "text": "and maintain that service could be specific for given cloud provider and",
    "start": "197370",
    "end": "202880"
  },
  {
    "text": "when you look an overlap instead of the services provided by different cloud providers you can derstand why there is",
    "start": "202880",
    "end": "209490"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "ever growing demand for being multi cloud and what is missing a control plane that spans across multiple cloud",
    "start": "209490",
    "end": "215970"
  },
  {
    "text": "vendors and what is needed is the way to manage workloads and resources in uniform and consistent way across",
    "start": "215970",
    "end": "222810"
  },
  {
    "text": "multiple clouds so where the cube come",
    "start": "222810",
    "end": "229470"
  },
  {
    "text": "so I'm gonna still do quickly interested kubernetes in case not everybody very familiar with kubernetes this brief",
    "start": "229470",
    "end": "234720"
  },
  {
    "text": "couple of slides probably not necessary but anyway so kubernetes is open source",
    "start": "234720",
    "end": "242010"
  },
  {
    "text": "container acceleration system for automating application deployment scaling and management it was originally",
    "start": "242010",
    "end": "247950"
  },
  {
    "text": "started on Google in June 2014 and actually this month we celebrate fifth",
    "start": "247950",
    "end": "255060"
  },
  {
    "text": "anniversary of kubernetes quickly within a month other big company like Microsoft Red Hat IBM darker they",
    "start": "255060",
    "end": "264180"
  },
  {
    "text": "joined kubernetes community and community became grow grew it expand rate they have first major GA release in",
    "start": "264180",
    "end": "271310"
  },
  {
    "text": "July 2015 together with CNC F partnership announcement and in short five years",
    "start": "271310",
    "end": "279010"
  },
  {
    "text": "kubernetes became de facto the platform to run containerized workloads and",
    "start": "279010",
    "end": "284360"
  },
  {
    "text": "services it also achieved an amazing adoption rate among cloud providers it",
    "start": "284360",
    "end": "290630"
  },
  {
    "text": "became virtually ubiquitous today every major cloud provider offers kubernetes as a service with the last of latest one",
    "start": "290630",
    "end": "298310"
  },
  {
    "text": "was adopted from Airbus web services they offer it ETS in 2018 so clusters",
    "start": "298310",
    "end": "308570"
  },
  {
    "text": "themselves became just yet another resource like my sequel database offered by all major cloud providers and again",
    "start": "308570",
    "end": "314270"
  },
  {
    "text": "similar paradigm while provisioning them easy but those provisioning steps could",
    "start": "314270",
    "end": "319400"
  },
  {
    "text": "be very specific for given cloud provider the way provision G key could be different slightly different or a lot",
    "start": "319400",
    "end": "325940"
  },
  {
    "text": "different from the way provision ETS or aks so needless to say that kubernetes",
    "start": "325940",
    "end": "332630"
  },
  {
    "start": "330000",
    "end": "330000"
  },
  {
    "text": "is pretty incredible product it revolutionized the orchestration of continuous workloads and services and",
    "start": "332630",
    "end": "338690"
  },
  {
    "text": "when I started using kubernetes in 2015 I was sold on the idea by that at that",
    "start": "338690",
    "end": "345860"
  },
  {
    "text": "time all I kind of knew and care about was running containers services inside the containers it took me some time to",
    "start": "345860",
    "end": "351710"
  },
  {
    "text": "realize that perhaps the best feature of kubernetes is kubernetes api with its",
    "start": "351710",
    "end": "358580"
  },
  {
    "text": "declarative style so when user expressed what they want in other words desire state of your system versus imperative style api have",
    "start": "358580",
    "end": "365060"
  },
  {
    "text": "saying that this is the steps i want to use to achieve that state it is level based which enables a robust behavior",
    "start": "365060",
    "end": "371330"
  },
  {
    "text": "even if you miss in some intermediate state changes it is complete in authoritative and most importantly it's",
    "start": "371330",
    "end": "377750"
  },
  {
    "text": "extensible and last part is very important because this in fact that what",
    "start": "377750",
    "end": "382910"
  },
  {
    "text": "I've been doing for last couple of years I was working on the extensibility of kubernetes and I was writing companies",
    "start": "382910",
    "end": "388700"
  },
  {
    "text": "in native applications so how do you extend kubernetes so any programs that",
    "start": "388700",
    "end": "396080"
  },
  {
    "start": "390000",
    "end": "390000"
  },
  {
    "text": "reads and right from Cabrini's api can provide useful automation and there is specific pattern for",
    "start": "396080",
    "end": "402470"
  },
  {
    "text": "writing those programs the pattern called a control pattern control is typically read object from Cobra ASAP I",
    "start": "402470",
    "end": "407960"
  },
  {
    "text": "perform some operations and then save either the state of operations or state of an object back to kubernetes api",
    "start": "407960",
    "end": "415390"
  },
  {
    "text": "custom resources are extension of kubernetes api and the base application",
    "start": "415390",
    "end": "420680"
  },
  {
    "text": "combined with customer service definition or CRD together basically it's a brace application is CRD combined",
    "start": "420680",
    "end": "428540"
  },
  {
    "text": "with the controller and operator term was if not invented was introduced by",
    "start": "428540",
    "end": "435250"
  },
  {
    "text": "korres company and it was a method of packaging and deploying and managing kubernetes applications the operator",
    "start": "435250",
    "end": "441650"
  },
  {
    "text": "format gives software developer the template which will tell Cabrini's how to deploy manage the application and",
    "start": "441650",
    "end": "447650"
  },
  {
    "text": "there are several frameworks to choose to author your operator most popular of them operate a sdk and cube builder i",
    "start": "447650",
    "end": "455240"
  },
  {
    "text": "based on the controller runtime there are many few others some of them very similar I'm different like meta",
    "start": "455240",
    "end": "460700"
  },
  {
    "text": "controller a little bash controller and of course you can use client go yourself",
    "start": "460700",
    "end": "466700"
  },
  {
    "text": "very low-level library to offer your own operator not what's right in from",
    "start": "466700",
    "end": "473990"
  },
  {
    "text": "scratch so if you look in basic structure of controller pattern it's kind of continuous operation continuous",
    "start": "473990",
    "end": "479990"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "loop which basically retrieve the object replace API compare the spec of an",
    "start": "479990",
    "end": "485270"
  },
  {
    "text": "object to actual system state if they the same maybe there's nothing needs to be done in continue otherwise if there",
    "start": "485270",
    "end": "491060"
  },
  {
    "text": "are eight differences perform some steps to bring the actual state to a desired",
    "start": "491060",
    "end": "496250"
  },
  {
    "text": "state and the same results in to the object status",
    "start": "496250",
    "end": "501310"
  },
  {
    "text": "so when you write an operator typically you extend companies types so for example the most common pattern will be",
    "start": "503680",
    "end": "510080"
  },
  {
    "start": "504000",
    "end": "504000"
  },
  {
    "text": "my operator will create additional deployments for stateful set and has custom logic to do something",
    "start": "510080",
    "end": "516320"
  },
  {
    "text": "additionally which you normally would not do with the helm installation in others you do something active lifecycle management so operator would reach from",
    "start": "516320",
    "end": "523280"
  },
  {
    "text": "API and create those kubernetes types typically in the same cluster and it's all kind of deployed in one cluster and",
    "start": "523280",
    "end": "530330"
  },
  {
    "text": "what that pattern became very useful is in the doing stateful set applications",
    "start": "530330",
    "end": "535940"
  },
  {
    "text": "specifically those applications which requires some kind of data management in",
    "start": "535940",
    "end": "541010"
  },
  {
    "start": "537000",
    "end": "537000"
  },
  {
    "text": "other words once started with ability would core OS was a CD operator parameter separator and then ruk",
    "start": "541010",
    "end": "547220"
  },
  {
    "text": "operator another all of them dealing with some additional data state which normally you need to either some user",
    "start": "547220",
    "end": "552380"
  },
  {
    "text": "knowledge to do manual steps they kind of basically encoded them in a parade of logic and that pattern start growing",
    "start": "552380",
    "end": "561560"
  },
  {
    "text": "pretty rapidly more and more independent vendors now package the applications with this operator format and moreover",
    "start": "561560",
    "end": "569210"
  },
  {
    "text": "as you can see that there could be multiple vendors or multiple project dedicated to the same operator today if",
    "start": "569210",
    "end": "574790"
  },
  {
    "text": "you look at my sequel operator you'll see like up to five will probably be more right now types to author or people",
    "start": "574790",
    "end": "581390"
  },
  {
    "text": "how to author they my sequel operator and nowadays it's almost easier to name",
    "start": "581390",
    "end": "587350"
  },
  {
    "text": "open source technologies which offer a staple set solution or stateful application for companies who don't have",
    "start": "587350",
    "end": "593360"
  },
  {
    "text": "operator basically if any if you go to resource like what is it",
    "start": "593360",
    "end": "599270"
  },
  {
    "start": "596000",
    "end": "596000"
  },
  {
    "text": "operator hub that IO it's pretty good resource we can actually list all the operators gradually you can actually",
    "start": "599270",
    "end": "605120"
  },
  {
    "text": "select by level area of the main area right here and you can see them all it's",
    "start": "605120",
    "end": "610520"
  },
  {
    "text": "not the only place I also recommend to go check out the awesome operators at",
    "start": "610520",
    "end": "616280"
  },
  {
    "text": "the end of this slide I have a reference link and the slide is also available on the website of the scheduler companies",
    "start": "616280",
    "end": "623900"
  },
  {
    "text": "keep Khan scheduler so check out this last slide it has reference to all links",
    "start": "623900",
    "end": "629200"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "so now if you can provision your stateful service it's not was running my",
    "start": "629200",
    "end": "635150"
  },
  {
    "text": "sequel database as an operator kubernetes it's kind of jump to this question so do I really need to use many",
    "start": "635150",
    "end": "642170"
  },
  {
    "text": "sources from cloud providers do I really need to use RDS from AWS or cloud SQL and this notion has very appealing",
    "start": "642170",
    "end": "649730"
  },
  {
    "text": "aspect when you run your proof data and database service and the same kubernetes",
    "start": "649730",
    "end": "654829"
  },
  {
    "text": "cluster you autumn will have this ultimate portability when you're on stateless service you can run on any way",
    "start": "654829",
    "end": "660079"
  },
  {
    "text": "you can run the laptop you can run it in any kubernetes cluster anywhere in mini cube jaqui on Prem and it's easy because",
    "start": "660079",
    "end": "666949"
  },
  {
    "text": "it stateless once you state get involved now you decide what to run it however if you put your state for applications also",
    "start": "666949",
    "end": "672649"
  },
  {
    "text": "Cabernets ultimately have this portability you can run as well anywhere however this thing has the ultimate",
    "start": "672649",
    "end": "679579"
  },
  {
    "text": "portability is a goal it has some problems as well some of them temporarily some of them can be may be long term for example not",
    "start": "679579",
    "end": "689990"
  },
  {
    "text": "all operator applications are very mature in a sense that even frameworks themself like control runtime maybe not",
    "start": "689990",
    "end": "696500"
  },
  {
    "text": "exactly mature today so they still evolving other things that when you deploy your application you still don't",
    "start": "696500",
    "end": "704059"
  },
  {
    "text": "have this unified console like manage cloud providers offer you like we can go and see all your stateful services at",
    "start": "704059",
    "end": "710120"
  },
  {
    "text": "scale in one glance so kind of you can either develop your own dashboard to individual services but in fact there is",
    "start": "710120",
    "end": "716300"
  },
  {
    "text": "not one unifying dashboard or console you still unhook to providing all the",
    "start": "716300",
    "end": "721370"
  },
  {
    "text": "support and SLA for that operator in that is important part because just",
    "start": "721370",
    "end": "726800"
  },
  {
    "text": "because it's easy to deploy stateful set as an operator you still does not absolve it to know what a stable set is",
    "start": "726800",
    "end": "732379"
  },
  {
    "text": "doing so that was you still need to have the main knowledge of this given service and sometimes it's a little bit more",
    "start": "732379",
    "end": "738050"
  },
  {
    "text": "than if you run let's say in the cloud provider because co-op providers themselves take some responsibilities for doing that for doing all those tasks",
    "start": "738050",
    "end": "745069"
  },
  {
    "text": "I mentioned earlier so what happens that",
    "start": "745069",
    "end": "754309"
  },
  {
    "start": "750000",
    "end": "750000"
  },
  {
    "text": "we can actually take the same operator pattern and we can extend it not necessarily only to kubernetes types we",
    "start": "754309",
    "end": "761000"
  },
  {
    "text": "can take operator pattern and extend it to types outside of kubernetes so for example just like I can use a pair",
    "start": "761000",
    "end": "767660"
  },
  {
    "text": "pattern create stateful set for my sequel using kubernetes api I can take the same",
    "start": "767660",
    "end": "773660"
  },
  {
    "text": "concept and use cloud provider API and cloud provider SDK libraries to provision services on the cloud provider",
    "start": "773660",
    "end": "779750"
  },
  {
    "text": "so instead of doing my sequel in cluster I can run my sequel in AWS use an ADA",
    "start": "779750",
    "end": "785180"
  },
  {
    "text": "bus provider API library to schedule and set up RDS instances or Cloud SQL or my",
    "start": "785180",
    "end": "791630"
  },
  {
    "text": "sequel as room and with exactly those",
    "start": "791630",
    "end": "796759"
  },
  {
    "text": "goals in mind we started and introduced the cross plane project we offer as I",
    "start": "796759",
    "end": "803420"
  },
  {
    "text": "mentioned earlier we open source it's right before the cube con in September in Seattle last December excuse me and",
    "start": "803420",
    "end": "810920"
  },
  {
    "text": "the cross plane is multi-cloud control plane a single cross plane enables",
    "start": "810920",
    "end": "816130"
  },
  {
    "text": "provisioning and full lifecycle management of services and infrastructure across wide range of",
    "start": "816130",
    "end": "821779"
  },
  {
    "text": "providers and region speed cross plane presents a declarative management style",
    "start": "821779",
    "end": "829399"
  },
  {
    "text": "API that will cover a wide range of portable abstractions including databases clusters buckets that's what",
    "start": "829399",
    "end": "835939"
  },
  {
    "text": "we initially started since then we edit radius clusters and we work in in adding more and more resources and crossplane",
    "start": "835939",
    "end": "844279"
  },
  {
    "text": "based on declarative resource model of kubernetes and it applies many concepts",
    "start": "844279",
    "end": "849529"
  },
  {
    "text": "from continuation to multi-cloud workload in resource orchestration",
    "start": "849529",
    "end": "855519"
  },
  {
    "text": "crossplane runs atop of kubernetes and i'm sorry yes atop of a breeze and leverages cloud",
    "start": "855519",
    "end": "862730"
  },
  {
    "text": "provider infrastructure crossplane",
    "start": "862730",
    "end": "868759"
  },
  {
    "start": "867000",
    "end": "867000"
  },
  {
    "text": "extents could be a nice API by customers for definition in the roads cross plane is an operator and each manage resources",
    "start": "868759",
    "end": "875779"
  },
  {
    "text": "is represented by dedicated CRD so today we support through cloud providers AWS",
    "start": "875779",
    "end": "882769"
  },
  {
    "text": "asher and google and we support as I mentioned already resources like relational",
    "start": "882769",
    "end": "887930"
  },
  {
    "text": "databases radius memory caches clusters themselves and buckets in addition to",
    "start": "887930",
    "end": "895000"
  },
  {
    "text": "manage resources and providers crossplane has notion of the risk resource classes and resource claims",
    "start": "895000",
    "end": "902769"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "so let's say first let's take a look at the cloud provider as a resource here's",
    "start": "903300",
    "end": "909430"
  },
  {
    "text": "an example of defining cloud provider Yambol for crossplane you can see it has",
    "start": "909430",
    "end": "914740"
  },
  {
    "text": "a two parts first part is the secret which contains cloud provider credentials and second part is the",
    "start": "914740",
    "end": "920529"
  },
  {
    "text": "provider which has a reference to that secret and maybe have additional metadata like in this case it's AWS has a region information now each cloud",
    "start": "920529",
    "end": "928810"
  },
  {
    "text": "provider has a Sierra D and it has also dedicate control or may have dedicated controller which will perform additional",
    "start": "928810",
    "end": "934930"
  },
  {
    "text": "provider validation similarly to provide a cross plane represents every single",
    "start": "934930",
    "end": "942040"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "managed resource by a dedicated CD each CR D is strongly typed using cloud",
    "start": "942040",
    "end": "949540"
  },
  {
    "text": "provider API for that resource and we try to kind of model it after the cloud",
    "start": "949540",
    "end": "954880"
  },
  {
    "text": "provider API and each type has a dedicated controller which is",
    "start": "954880",
    "end": "960490"
  },
  {
    "text": "responsible for provisioning validating and once resource comes up and become",
    "start": "960490",
    "end": "965949"
  },
  {
    "text": "available for generating connection secrets so it can be consumed from the applications it's also responsible for",
    "start": "965949",
    "end": "972490"
  },
  {
    "text": "tracking the status and if it's diverse from declaratives declare state it will attempt to make adjustable stage just",
    "start": "972490",
    "end": "978069"
  },
  {
    "text": "like similar in kubernetes when you create a deployment you run let's say tell deployment run with three paths if",
    "start": "978069",
    "end": "983769"
  },
  {
    "text": "would say one part died or service would know died companies wanna make a scheduled new path so similar to that it",
    "start": "983769",
    "end": "990220"
  },
  {
    "text": "will attempt to do the same active reconciliation against resources so if something changed in resource it will",
    "start": "990220",
    "end": "995769"
  },
  {
    "text": "try it automatically in extra console to ratify and make sure the changes match in two declaratives declare side and",
    "start": "995769",
    "end": "1001610"
  },
  {
    "text": "this is the example of my sequel server in Azure provider",
    "start": "1001610",
    "end": "1006810"
  },
  {
    "text": "notice that it has pretty much the property set it's not complete prop reset but effectively which matches as",
    "start": "1006810",
    "end": "1012329"
  },
  {
    "text": "your API so in addition to cloud",
    "start": "1012329",
    "end": "1017339"
  },
  {
    "start": "1015000",
    "end": "1015000"
  },
  {
    "text": "providers and manage resources crossplane presents clean separation concerns by",
    "start": "1017339",
    "end": "1022769"
  },
  {
    "text": "introducing at what I mentioned earlier resource classes and resource claims so",
    "start": "1022769",
    "end": "1029640"
  },
  {
    "text": "developers when I'm as an application developer I typically don't really care what my sequel instance I'm using",
    "start": "1029640",
    "end": "1036918"
  },
  {
    "text": "squint not sometimes I do here but anywhere if I'm writing my application let's say WordPress and it needs to",
    "start": "1036919",
    "end": "1042569"
  },
  {
    "text": "consume my sequel I really don't need to know it comes from the ADA bus RDS or from cloud SQL or from somewhere else",
    "start": "1042569",
    "end": "1048929"
  },
  {
    "text": "what I do care is the connection string and credentials so I can connect to it and my application can perform a",
    "start": "1048929",
    "end": "1054720"
  },
  {
    "text": "business logic now use you as a cloud or class administrator can use classes",
    "start": "1054720",
    "end": "1061470"
  },
  {
    "text": "which modeled very closely oh inspired by kubernetes storage classes and storage claims you can model resource",
    "start": "1061470",
    "end": "1067830"
  },
  {
    "text": "class providing all this metadata needed to provision resource and claim can be",
    "start": "1067830",
    "end": "1073350"
  },
  {
    "text": "now slimmed down and had very limited information so for example here's this class for yes for standard area my",
    "start": "1073350",
    "end": "1082440"
  },
  {
    "start": "1076000",
    "end": "1076000"
  },
  {
    "text": "sequel if you notice it has very similar properties as a raw resource which you look in couple slides back so right here",
    "start": "1082440",
    "end": "1089520"
  },
  {
    "text": "this is the actual resource computers norm I suppose server and this is class for that so they very similar in terms",
    "start": "1089520",
    "end": "1094590"
  },
  {
    "text": "of completeness of the properties now if we look on the claim for this resource",
    "start": "1094590",
    "end": "1100380"
  },
  {
    "text": "it now has a very limited information in fact it only has a class reference and potential now has the engine version for",
    "start": "1100380",
    "end": "1106200"
  },
  {
    "text": "my sequel which I want to use so it has very powerful concept now I'm application developer can use this",
    "start": "1106200",
    "end": "1112590"
  },
  {
    "text": "claimants and hey give me my sequel in this cloud provider with the engine version 5.7 you as a cloud administrator",
    "start": "1112590",
    "end": "1118679"
  },
  {
    "text": "can't define what it means to provision my sequel in AWS for example or in Azure with all those properties so it kind of",
    "start": "1118679",
    "end": "1126570"
  },
  {
    "text": "creates two interesting notions first of all it has separation of concerns I don't know all these details of",
    "start": "1126570",
    "end": "1132690"
  },
  {
    "text": "infrastructure moreover I don't know the credentials to provision those resources those could be stowed away in the",
    "start": "1132690",
    "end": "1138360"
  },
  {
    "text": "protected namespace let's say crossplane system namespace to which I'm as application developer don't have access",
    "start": "1138360",
    "end": "1143669"
  },
  {
    "text": "to so I cannot simply go ahead and provision any resources near Lully however crossplane will understand the",
    "start": "1143669",
    "end": "1150570"
  },
  {
    "text": "claim and will match with the resource class and provision and fulfill this request return him back the connection",
    "start": "1150570",
    "end": "1156149"
  },
  {
    "text": "secret",
    "start": "1156149",
    "end": "1158480"
  },
  {
    "text": "okay good next slide yes so now I can",
    "start": "1162019",
    "end": "1167849"
  },
  {
    "text": "model my application in similar fashion this is just mock-up example otherwise",
    "start": "1167849",
    "end": "1173340"
  },
  {
    "text": "it will not fit in the screen but on tap I have a my claim on my sequel claim saying give me my sequel engine version",
    "start": "1173340",
    "end": "1179039"
  },
  {
    "text": "5.7 and this is WordPress deployment which will consume that claim and in",
    "start": "1179039",
    "end": "1184919"
  },
  {
    "text": "this case the my sequel instance would generate the secret with the same name which now I can mount in my deployment",
    "start": "1184919",
    "end": "1191940"
  },
  {
    "text": "and now consume credentials username password even connections through Chrome it using them as a properties for",
    "start": "1191940",
    "end": "1197099"
  },
  {
    "text": "example where the property's somewhere there yeah somewhere here so now if you",
    "start": "1197099",
    "end": "1203220"
  },
  {
    "text": "look at this yamo file or manifest of application if I will need to deploy this against let's say a different cloud",
    "start": "1203220",
    "end": "1209070"
  },
  {
    "text": "provider let's pretend that it was defined against adarand I decided to deploy it against AWS very little need",
    "start": "1209070",
    "end": "1217109"
  },
  {
    "text": "to change in this yellow file I'm as application developer in fact may even use the same class name if they",
    "start": "1217109",
    "end": "1222629"
  },
  {
    "text": "were just defined in abstract names you as a cloud administrator now need to furnish all the resource class for the",
    "start": "1222629",
    "end": "1227940"
  },
  {
    "text": "cloud provider so now you can actually define classes for as many cloud providers as we support and I can apply",
    "start": "1227940",
    "end": "1233849"
  },
  {
    "text": "exactly the same manifest file and provision my service without any changes so that's actually creates this very",
    "start": "1233849",
    "end": "1240029"
  },
  {
    "text": "powerful concept of portability of my application now I can run and deploy it in any cloud provider without changes to",
    "start": "1240029",
    "end": "1246299"
  },
  {
    "text": "manifest itself so if that would be not",
    "start": "1246299",
    "end": "1253710"
  },
  {
    "start": "1250000",
    "end": "1250000"
  },
  {
    "text": "enough so there is more to that in addition to cloud providers resources resource classes and claims crossplane",
    "start": "1253710",
    "end": "1261119"
  },
  {
    "text": "provide definition and support for workloads so what workload does is basically bring this all together so now",
    "start": "1261119",
    "end": "1267149"
  },
  {
    "text": "in one concise document I can define my payload in terms of deployments or",
    "start": "1267149",
    "end": "1272970"
  },
  {
    "text": "services what I have to my resources and string it all together and since I mentioned earlier that crossplane is",
    "start": "1272970",
    "end": "1278879"
  },
  {
    "text": "capable of provisioning kubernetes clusters now I can run crossplane and",
    "start": "1278879",
    "end": "1284009"
  },
  {
    "text": "the thing Cobras cluster let's say in my laptop and mini cube and I define workload of the WordPress application",
    "start": "1284009",
    "end": "1290099"
  },
  {
    "text": "and I can provide credentials to my crossbow insane for AWS Google and azure and say go ahead and deploy it",
    "start": "1290099",
    "end": "1296240"
  },
  {
    "text": "and what can happen if that cross plane will say oh I need to find a cluster",
    "start": "1296240",
    "end": "1301400"
  },
  {
    "text": "where to put this workload oh I don't have any so go ahead and schedule one and it actually can figure out which the",
    "start": "1301400",
    "end": "1306530"
  },
  {
    "text": "schedule today cross plane supports direct scheduling through the indication of case schedule not classes specifically you",
    "start": "1306530",
    "end": "1312350"
  },
  {
    "text": "will have to provide class the selector in the future we can have a course based scheduler in other words we can say oh",
    "start": "1312350",
    "end": "1317990"
  },
  {
    "text": "where is it cheaper to run my WordPress today worse which cloud provider gives me better price for manage database",
    "start": "1317990",
    "end": "1325070"
  },
  {
    "text": "deploy it there more way if you run in conjunction with out applications you can use affinity anti Finity and say",
    "start": "1325070",
    "end": "1331250"
  },
  {
    "text": "what is the best proximity or latency to deploy applications and crossplane will",
    "start": "1331250",
    "end": "1337040"
  },
  {
    "text": "fulfill that and if there is no matching cluster it can go ahead and provision one for you so last in this in December",
    "start": "1337040",
    "end": "1345350"
  },
  {
    "text": "in Seattle I did the demo you can still find it on YouTube where basically I use this concept I provision crossplane",
    "start": "1345350",
    "end": "1351440"
  },
  {
    "text": "using same Yama file across three cloud providers and run the WordPress deployment across that so I started with",
    "start": "1351440",
    "end": "1357710"
  },
  {
    "text": "only cross plane in my laptop and I end up with the G key IES in a key s and o3",
    "start": "1357710",
    "end": "1364150"
  },
  {
    "text": "manage database providers like RDS cloud SQL and my sequel edger and deploy the",
    "start": "1364150",
    "end": "1371380"
  },
  {
    "text": "WordPress application to three target clusters all from scratch just only providing credentials for the cloud",
    "start": "1371380",
    "end": "1376850"
  },
  {
    "text": "provider so AB our mission is to create",
    "start": "1376850",
    "end": "1382850"
  },
  {
    "start": "1380000",
    "end": "1380000"
  },
  {
    "text": "a more open cloud computing platform and at the heart of every cloud is the",
    "start": "1382850",
    "end": "1388520"
  },
  {
    "text": "control plane and we hope that cross plane could become the control plane for open cloud with open control plane you",
    "start": "1388520",
    "end": "1395540"
  },
  {
    "text": "can anyone can add a new API and extend to manage any open source or even",
    "start": "1395540",
    "end": "1401390"
  },
  {
    "text": "commercial resources okay so we are the",
    "start": "1401390",
    "end": "1409220"
  },
  {
    "text": "very beginning of a journey a band is very young company we started about January 2018 so cross plane is very",
    "start": "1409220",
    "end": "1417650"
  },
  {
    "text": "young project as well so I encourage every one of you to come and github go on github and check out and go through",
    "start": "1417650",
    "end": "1424580"
  },
  {
    "text": "the examples we have a lot of walkthrough exam from the wordpress from specific",
    "start": "1424580",
    "end": "1431100"
  },
  {
    "text": "services or even get lab example we can run complete enterprise great deployment",
    "start": "1431100",
    "end": "1436350"
  },
  {
    "text": "of gitlab in cloud providers of a choice in fact get la partnership was very important for us we kind of working",
    "start": "1436350",
    "end": "1443100"
  },
  {
    "text": "closely with them as a real world application example to vet and prove our design concepts and constructs in cross",
    "start": "1443100",
    "end": "1450000"
  },
  {
    "text": "plane with that again check it out give us your feedback submit PRS open issues",
    "start": "1450000",
    "end": "1456780"
  },
  {
    "text": "and it was privileged to talk to you today thank you very much for your attention",
    "start": "1456780",
    "end": "1462559"
  },
  {
    "text": "[Applause]",
    "start": "1464500",
    "end": "1467779"
  },
  {
    "start": "1466000",
    "end": "1466000"
  },
  {
    "text": "okay open floor for questions I guess we have time for Q&A so if anyone have",
    "start": "1470570",
    "end": "1475710"
  },
  {
    "text": "questions go ahead and thank you for",
    "start": "1475710",
    "end": "1483210"
  },
  {
    "text": "presentation I can see you can create deployments to a destination and cluster",
    "start": "1483210",
    "end": "1490440"
  },
  {
    "text": "how can you schedule your deployment among these clusters such as two",
    "start": "1490440",
    "end": "1496710"
  },
  {
    "text": "clusters or each other right so today Crossman supports the scheduler through cluster selectors so in your",
    "start": "1496710",
    "end": "1502950"
  },
  {
    "text": "workload you will say select cluster based on criteria so just like in the",
    "start": "1502950",
    "end": "1507980"
  },
  {
    "text": "common label selector you can say select web provider equals AWS for example so",
    "start": "1507980",
    "end": "1513870"
  },
  {
    "text": "you will actually have to specify that's the way it works today you can eat or even you can say if you name your",
    "start": "1513870",
    "end": "1518880"
  },
  {
    "text": "clusters not exactly as cattle you can say deploy in that green cluster tomorrow in the future you can say okay",
    "start": "1518880",
    "end": "1526590"
  },
  {
    "text": "define the cluster way cheaper to run so you can create schedule we can work in the kradin of schedule which can be cost",
    "start": "1526590",
    "end": "1531870"
  },
  {
    "text": "optimized find the cheaper cluster to provision this workload so notice if I'm",
    "start": "1531870",
    "end": "1536970"
  },
  {
    "text": "using readies database the cluster which cloud provider gives me better rate or",
    "start": "1536970",
    "end": "1542190"
  },
  {
    "text": "lowest price to run radius then you can actually put your workload in that cloud provider so from now and so we can't",
    "start": "1542190",
    "end": "1552330"
  },
  {
    "text": "schedule out how deployment how I should amount to clusters no not today exactly",
    "start": "1552330",
    "end": "1559890"
  },
  {
    "text": "so I think what you asking me closer to the Federation taps yes yes okay yes while crossplane work",
    "start": "1559890",
    "end": "1566190"
  },
  {
    "text": "scheduling more closely Jules is similar to Federation in a sense of propagation we shared a lot of concepts and we kind",
    "start": "1566190",
    "end": "1571799"
  },
  {
    "text": "of learn lessons from Federation how to propagate our resources the model is slightly different in Federation you",
    "start": "1571799",
    "end": "1577649"
  },
  {
    "text": "will have a control plane where you deploy your source here and it will be propagated based on your labels annotations or template ization to cross",
    "start": "1577649",
    "end": "1585360"
  },
  {
    "text": "plant have slightly different objective we're saying that we're not going to do propagation to multiple clusters will have specific cluster deployment only",
    "start": "1585360",
    "end": "1592460"
  },
  {
    "text": "because again right now we're not pursuing yet the model where we're going to have one application instance",
    "start": "1592460",
    "end": "1598230"
  },
  {
    "text": "distributed across multiple clusters because that involves also solving the networking layer underneath that in",
    "start": "1598230",
    "end": "1604110"
  },
  {
    "text": "other words we'll never deploy my wordpress in Google Cloud and ADA based I want to make sure that they can use",
    "start": "1604110",
    "end": "1609360"
  },
  {
    "text": "the same database something like that so that's a bit more challenging problem to solve working that and probably in the future we can have something analogous",
    "start": "1609360",
    "end": "1616409"
  },
  {
    "text": "to that yeah I see thank you thank you very much",
    "start": "1616409",
    "end": "1621350"
  },
  {
    "text": "any other questions okay first of us thank you for your utility to this",
    "start": "1622159",
    "end": "1629370"
  },
  {
    "text": "awesome project so I think my question you had answer some some just now but I",
    "start": "1629370",
    "end": "1637409"
  },
  {
    "text": "want to get more information about how your menus at the paid menu at the",
    "start": "1637409",
    "end": "1644220"
  },
  {
    "text": "single to date have between the cluster as you know right so exactly so this is very similar to the sense not maybe from",
    "start": "1644220",
    "end": "1650970"
  },
  {
    "text": "perspective propagation but yes so when we schedule the data databases in",
    "start": "1650970",
    "end": "1656370"
  },
  {
    "text": "different clusters data right now I'm not going to be saying and if you want to do that you probably need to find",
    "start": "1656370",
    "end": "1661470"
  },
  {
    "text": "your technology provider which allows you this global multi cluster data syncing because again it's involving",
    "start": "1661470",
    "end": "1667110"
  },
  {
    "text": "solving network problem in the future potentially if we have more solutions",
    "start": "1667110",
    "end": "1672419"
  },
  {
    "text": "towards how to let's say punch the VPN hole between two EPC clusters we can do something like that but we don't have it",
    "start": "1672419",
    "end": "1677850"
  },
  {
    "text": "today and another question yes so I think you we were enhancing the future",
    "start": "1677850",
    "end": "1684840"
  },
  {
    "text": "and do you have pen to defend PV and purity and the use it crossed cost oh",
    "start": "1684840",
    "end": "1692100"
  },
  {
    "text": "that's a good question well we're not really in the the main of solvent storage technology however",
    "start": "1692100",
    "end": "1698890"
  },
  {
    "text": "abound founders are the same people who started root project which is very close",
    "start": "1698890",
    "end": "1704450"
  },
  {
    "text": "dealing with the actual storage providers for companies clusters so in the future we can provision root enable",
    "start": "1704450",
    "end": "1711140"
  },
  {
    "text": "cluster which have different storage backends cloud daily backends so that's again that in the works so we don't have",
    "start": "1711140",
    "end": "1716780"
  },
  {
    "text": "anything right now thank you questions",
    "start": "1716780",
    "end": "1723740"
  },
  {
    "text": "any more okay I have a question when you",
    "start": "1723740",
    "end": "1733250"
  },
  {
    "text": "install in the first place crossplane you will install that in a cuban 6 cluster that means that you've",
    "start": "1733250",
    "end": "1739610"
  },
  {
    "text": "got one cuban t's cluster that is not part of your own that's okay yeah that's it you can potentially reuse the same",
    "start": "1739610",
    "end": "1746480"
  },
  {
    "text": "class to deploy workloads as well kind of similar with Federation where you share the same cluster as your crossbar",
    "start": "1746480",
    "end": "1751700"
  },
  {
    "text": "control pink luster but ultimately you probably want to select cluster which",
    "start": "1751700",
    "end": "1757220"
  },
  {
    "text": "has very limited permissions because typically when you deploy your application it implies some level of",
    "start": "1757220",
    "end": "1764000"
  },
  {
    "text": "elevated credentials or permissions in that cluster so what we typically recommend right now is to have a very",
    "start": "1764000",
    "end": "1770240"
  },
  {
    "text": "linked cluster we have a clean separation concerns which namespace can be used by developer Gatien developer",
    "start": "1770240",
    "end": "1775940"
  },
  {
    "text": "which names can be used by administrators how our propagation happens in to some other clusters where",
    "start": "1775940",
    "end": "1781250"
  },
  {
    "text": "you can have total different are back setup maybe it's not even given anybody access to that altogether or maybe",
    "start": "1781250",
    "end": "1786860"
  },
  {
    "text": "different level of access thank you sure",
    "start": "1786860",
    "end": "1791350"
  },
  {
    "text": "right well thank you for questions guys",
    "start": "1795820",
    "end": "1800870"
  },
  {
    "text": "[Applause]",
    "start": "1800870",
    "end": "1806440"
  }
]