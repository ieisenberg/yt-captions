[
  {
    "text": "hi everyone thanks for coming my name is Greg and one of the container identity working group leads and from Google and",
    "start": "0",
    "end": "7620"
  },
  {
    "text": "with me today I have Mike Denis his cigars chair and is also been leading",
    "start": "7620",
    "end": "12840"
  },
  {
    "text": "their identity effort kubernetes and has written most of the code that we're talking about today so first thing we",
    "start": "12840",
    "end": "20850"
  },
  {
    "text": "need to kind of get out of the way is that the container identity working group actually doesn't exist anymore this presentation is a lie don't leave",
    "start": "20850",
    "end": "28590"
  },
  {
    "text": "please so we turned it down in October of this year and we basically just",
    "start": "28590",
    "end": "33809"
  },
  {
    "text": "folded it back into sigilyph so and that was just because we didn't need need the extra meeting we're definitely not done",
    "start": "33809",
    "end": "40410"
  },
  {
    "text": "with identity work and this is essentially working as intended for working groups so we stood up this",
    "start": "40410",
    "end": "47309"
  },
  {
    "text": "working group did a bunch of stuff turned it back down and now there's there's enough room in the sigilyph agenda to handle identity there so for a",
    "start": "47309",
    "end": "54840"
  },
  {
    "text": "future identity needs come to sigurth but i think it's so interesting to have this talk and cover what we did in 2017",
    "start": "54840",
    "end": "62899"
  },
  {
    "text": "so we're gonna review some identity use cases and current solutions I'm gonna do",
    "start": "62899",
    "end": "68130"
  },
  {
    "text": "a deep dive on the new community service account tokens and talk about future",
    "start": "68130",
    "end": "73890"
  },
  {
    "text": "work so I've broken these use cases into kind of three buckets these are not all",
    "start": "73890",
    "end": "80070"
  },
  {
    "text": "I did comprehensive identity use cases but it's a sampling of some of the stuff that comes up regularly and the first",
    "start": "80070",
    "end": "87119"
  },
  {
    "text": "one is user identity and essentially people just want to have one place that",
    "start": "87119",
    "end": "92670"
  },
  {
    "text": "uses a managed so it hooks in with your kind of payment systems and and payroll",
    "start": "92670",
    "end": "100110"
  },
  {
    "text": "and HR and whatever else and you just want that all in one place then you also",
    "start": "100110",
    "end": "105780"
  },
  {
    "text": "have workload ID identity which is identity for applications running inside your cluster you might use the same",
    "start": "105780",
    "end": "112649"
  },
  {
    "text": "system as you use for users you might use a different system you might not",
    "start": "112649",
    "end": "117990"
  },
  {
    "text": "even really manage this at all in some cases another one is secrets so you have an",
    "start": "117990",
    "end": "123979"
  },
  {
    "text": "identity that uses they use to unlock other either identities or secret keys",
    "start": "123979",
    "end": "129479"
  },
  {
    "text": "or API keys or whatever else that the application needs another one is multi-cloud or kind of outbound",
    "start": "129479",
    "end": "136140"
  },
  {
    "text": "authentication to external services like you might want to call a bigquery API or in this three API you might want to have",
    "start": "136140",
    "end": "144209"
  },
  {
    "text": "identity if they're talking between services inside a cluster or between different clusters and you might have a",
    "start": "144209",
    "end": "151799"
  },
  {
    "text": "identity for a workload that's different for an identity for a sidecar so you're monitoring container might have a",
    "start": "151799",
    "end": "158129"
  },
  {
    "text": "different identity than what your main application has and then outside into",
    "start": "158129",
    "end": "168120"
  },
  {
    "text": "the cluster a really common one is your CI CD system needs to talk into the cluster and there's kind of many other",
    "start": "168120",
    "end": "174870"
  },
  {
    "text": "categories of those as well too so that's kind of like a rough overview of use cases we're mostly focusing on",
    "start": "174870",
    "end": "181709"
  },
  {
    "text": "the second one the second block there the workload identity for this talk but I kind of",
    "start": "181709",
    "end": "187680"
  },
  {
    "text": "over the past few days I've had quite a few conversations about user identity and I realize a lot of people especially those who are just starting out with",
    "start": "187680",
    "end": "194510"
  },
  {
    "text": "kind of integrating kubernetes into their environment is still figuring out this piece so I thought I'd just briefly",
    "start": "194510",
    "end": "200250"
  },
  {
    "text": "cover your options there and the solutions so you want to have one place where your identity is and you want to",
    "start": "200250",
    "end": "207480"
  },
  {
    "text": "integrate with that somehow so the common solutions are Fedder eight using your ID see you can also write a custom",
    "start": "207480",
    "end": "214859"
  },
  {
    "text": "authenticating proxy so if you have some proprietary system that your identity system we want to integrate with sort of",
    "start": "214859",
    "end": "221910"
  },
  {
    "text": "between your users and the API server you can put a proxy there that understands whatever identity system is",
    "start": "221910",
    "end": "227880"
  },
  {
    "text": "common in your organization calls out to verify that identity that's being presented by the user and then it",
    "start": "227880",
    "end": "235380"
  },
  {
    "text": "actually you can set impersonation headers so you have would have an identity for the proxy itself and when",
    "start": "235380",
    "end": "242370"
  },
  {
    "text": "it calls into the when it kind of makes those requests into the API server it would say hey I'm this proxy and",
    "start": "242370",
    "end": "247769"
  },
  {
    "text": "authenticate with its own identity but it would set these impersonation headers so that the API server knows and can log",
    "start": "247769",
    "end": "254669"
  },
  {
    "text": "that it was Greg making this request through this authenticating proxy and that tends to solve like most kind of",
    "start": "254669",
    "end": "261690"
  },
  {
    "text": "integration problems you can also write a custom Authenticator and",
    "start": "261690",
    "end": "266980"
  },
  {
    "text": "there's also an exact based off provider for cute control now which is although",
    "start": "266980",
    "end": "272930"
  },
  {
    "text": "undocumented I went looking and I had to reference this pull request that could probably use some documentation that it",
    "start": "272930",
    "end": "279800"
  },
  {
    "text": "that does exist so effectively what happens here is you writing Authenticator that understands whatever your custom identity system is and then",
    "start": "279800",
    "end": "287630"
  },
  {
    "text": "you write a plug-in for Q control that when it needs an identity it'll it'll exec out shell out effectively and get",
    "start": "287630",
    "end": "295190"
  },
  {
    "text": "back a credential to use that your Authenticator understands and this is",
    "start": "295190",
    "end": "300530"
  },
  {
    "text": "actually how gke works although we kind of wrote our wolf provider for Q control",
    "start": "300530",
    "end": "307010"
  },
  {
    "text": "before this extension mechanism existed but that's effectively how Google identity gets integrated also available",
    "start": "307010",
    "end": "315320"
  },
  {
    "text": "x.509 so it's password static tokens and I wanted to call out a nanny pattern",
    "start": "315320",
    "end": "321230"
  },
  {
    "text": "that I've liked occasionally hit when talking to cluster operators and people",
    "start": "321230",
    "end": "326360"
  },
  {
    "text": "new to kubernetes is that people just creating a community service account exporting the key and then sharing that",
    "start": "326360",
    "end": "332090"
  },
  {
    "text": "amongst multiple users it's a really bad idea if you find yourself tempted to do that it's basically the same as like",
    "start": "332090",
    "end": "337850"
  },
  {
    "text": "writing down your password and handing it out to people so don't do that do one of the things that's in in the top",
    "start": "337850",
    "end": "343970"
  },
  {
    "text": "section of the bullets here so switching over to workload identity I should say",
    "start": "343970",
    "end": "350300"
  },
  {
    "text": "too we've probably got about 15 20 minutes of content here so should be a fair bit of time for questions if people",
    "start": "350300",
    "end": "355580"
  },
  {
    "text": "have questions so what are the goals of a workload identity system we want to",
    "start": "355580",
    "end": "361820"
  },
  {
    "text": "get identity to applications with very little developer effort we want to make sure that we can handle multiple",
    "start": "361820",
    "end": "368090"
  },
  {
    "text": "external systems we want to minimize how bad a compromise or a leak of a",
    "start": "368090",
    "end": "373820"
  },
  {
    "text": "credential can be leaking one credentials should give you broad access to the whole system those credentials",
    "start": "373820",
    "end": "380000"
  },
  {
    "text": "should have limited lifetime or to rotate and ideally be non exploitable if we're possible so if you have access to",
    "start": "380000",
    "end": "386090"
  },
  {
    "text": "something like a trusted platform module then you should be able to like hold your key somewhere where it's really",
    "start": "386090",
    "end": "391250"
  },
  {
    "text": "hard for an attacker to get at it a bunch of external efforts I'm not going",
    "start": "391250",
    "end": "396289"
  },
  {
    "text": "to cover in any sort of detail but I kind of here for reference in case you're new to this space spiffy inspires x.509 identity history",
    "start": "396289",
    "end": "404030"
  },
  {
    "text": "is also x.509 identity there is a vault integration for kubernetes that uses",
    "start": "404030",
    "end": "410030"
  },
  {
    "text": "tokens and that will actually be the security of that why should be improved by some of the new work that we're about",
    "start": "410030",
    "end": "416210"
  },
  {
    "text": "to talk about in just a minute so what",
    "start": "416210",
    "end": "421580"
  },
  {
    "text": "cloud identity so community service accounts and kind of give you a sort of 2017 picture and I'll hand over to Mike",
    "start": "421580",
    "end": "428480"
  },
  {
    "text": "for him to talk about there what's happened in 2018 and and and further out so in 2017 effectively your only option",
    "start": "428480",
    "end": "437480"
  },
  {
    "text": "for community service accounts was these forever tokens that lived in in secrets as in they didn't expire they're",
    "start": "437480",
    "end": "444790"
  },
  {
    "text": "rotating a leaked token or some sort of compromised token is really painful when",
    "start": "444790",
    "end": "450770"
  },
  {
    "text": "we had a kind of real-world application of this where CNI plugin was leaking",
    "start": "450770",
    "end": "456230"
  },
  {
    "text": "tokens into logs and we had to kind of rotate off that off that credential and",
    "start": "456230",
    "end": "463490"
  },
  {
    "text": "and that was quite difficult because they've lived forever and this particular case leaking in the logs is quite bad because logs last for a long",
    "start": "463490",
    "end": "470390"
  },
  {
    "text": "time so effectively what we had to do was creating a new service account move",
    "start": "470390",
    "end": "475430"
  },
  {
    "text": "everything on to the new service account and then delete secrets for the old service account and that sort of stuff is way more painful than it should be",
    "start": "475430",
    "end": "481850"
  },
  {
    "text": "because of kind of the design of this system the permissions are too",
    "start": "481850",
    "end": "487100"
  },
  {
    "text": "permissive they shouldn't be users don't all users don't need broad access to the",
    "start": "487100",
    "end": "492530"
  },
  {
    "text": "actual file on disk there's no audience binding which Michael cover in his section so I'll hand it over to Mike to",
    "start": "492530",
    "end": "499640"
  },
  {
    "text": "talk about so I'm gonna go over the new provisioning flow for kubernetes service",
    "start": "499640",
    "end": "506420"
  },
  {
    "text": "account tokens essentially what happens when a cubelet is directed to start a",
    "start": "506420",
    "end": "512930"
  },
  {
    "text": "pod running as a service account before it starts that pod it'll make a request to the API server for a token the API",
    "start": "512930",
    "end": "521750"
  },
  {
    "text": "server issues that token and the couplet will then expose that token to the",
    "start": "521750",
    "end": "526940"
  },
  {
    "text": "application running inside the pod via a volume the application reads that token",
    "start": "526940",
    "end": "533420"
  },
  {
    "text": "from disk and presents it to other apps maybe the kubernetes api server or vault that",
    "start": "533420",
    "end": "542690"
  },
  {
    "text": "is basically the flow from 2017 however one change is that because these tokens",
    "start": "542690",
    "end": "550190"
  },
  {
    "text": "now expire people is also responsible for periodically refreshing than these tokens and keeping them up to date so",
    "start": "550190",
    "end": "558459"
  },
  {
    "text": "what does that mean for your application so with these new tokens there audience",
    "start": "558459",
    "end": "568820"
  },
  {
    "text": "bound meaning you can ask for a separate token to communicate with vault and you",
    "start": "568820",
    "end": "575930"
  },
  {
    "text": "don't have to use your unbounded token that you had in 2017 they have limited",
    "start": "575930",
    "end": "582529"
  },
  {
    "text": "time to live rotation is easy you can just provision tokens for 30 minutes or",
    "start": "582529",
    "end": "589220"
  },
  {
    "text": "an hour and wait wait for that hour to expire and you don't have to worry about",
    "start": "589220",
    "end": "596810"
  },
  {
    "text": "rotation but in cases where you want to do a fast revocation of all tokens you",
    "start": "596810",
    "end": "602029"
  },
  {
    "text": "can redeploy your application or deployment and that that will trigger a",
    "start": "602029",
    "end": "608269"
  },
  {
    "text": "rolling update and these tokens are invalid once the pods that they were provision two are no longer running the",
    "start": "608269",
    "end": "616190"
  },
  {
    "text": "secret these tokens are no longer stored in secrets so in 2017 we use the secret mechanism to distribute these tokens we",
    "start": "616190",
    "end": "624529"
  },
  {
    "text": "have some very powerful controllers with broad read access which includes all secrets in the cluster so that",
    "start": "624529",
    "end": "631040"
  },
  {
    "text": "essentially gives some controllers like the ingress controller in order to read",
    "start": "631040",
    "end": "638420"
  },
  {
    "text": "TLS secrets could also read the service account credentials for every every",
    "start": "638420",
    "end": "645440"
  },
  {
    "text": "application in the cluster that's just because the way that the kubernetes api",
    "start": "645440",
    "end": "650720"
  },
  {
    "text": "exists doesn't really lend itself to secret management people that also",
    "start": "650720",
    "end": "655730"
  },
  {
    "text": "handles refresh in this scenario kubernetes client libraries that we",
    "start": "655730",
    "end": "663319"
  },
  {
    "text": "maintain as part of core will begin to start rereading these tokens so this is already done for client go",
    "start": "663319",
    "end": "669530"
  },
  {
    "text": "and the Python and the job of official clients will follow shortly so there are",
    "start": "669530",
    "end": "679100"
  },
  {
    "text": "some potentially incompatible changes to this new token volume there's a new",
    "start": "679100",
    "end": "685700"
  },
  {
    "text": "feature introduced in 113 called bound service account token volume it's off by default it's alpha currently and what it",
    "start": "685700",
    "end": "693620"
  },
  {
    "text": "does is it swaps out the old secret volume for a projected volume that uses the new token projection so while this",
    "start": "693620",
    "end": "703730"
  },
  {
    "text": "will probably be transparent for many applications certain applications doing",
    "start": "703730",
    "end": "710330"
  },
  {
    "text": "a little different things might might notice a hiccup namely you have to",
    "start": "710330",
    "end": "717290"
  },
  {
    "text": "reread the token periodically because it will change out from underneath you if",
    "start": "717290",
    "end": "722330"
  },
  {
    "text": "you're using up-to-date client go this might be handled for you however if you're doing something else are you",
    "start": "722330",
    "end": "729560"
  },
  {
    "text": "using old client libraries you need to be aware of this we lock down the file",
    "start": "729560",
    "end": "734720"
  },
  {
    "text": "permission from 64 4 to 6 0 0 so if you were running an application as a user",
    "start": "734720",
    "end": "741710"
  },
  {
    "text": "that is non root you might you might notice this and run into this and get",
    "start": "741710",
    "end": "747350"
  },
  {
    "text": "file permission errors the best way to work around this is just to use the FS",
    "start": "747350",
    "end": "753170"
  },
  {
    "text": "group feature in the pod security context and add a supplemental group to",
    "start": "753170",
    "end": "758600"
  },
  {
    "text": "your application so that it still has permission to read that so with using",
    "start": "758600",
    "end": "763970"
  },
  {
    "text": "using that FS group feature that file permission will change to 6 4 0 which is",
    "start": "763970",
    "end": "770300"
  },
  {
    "text": "strictly better it only allows your individual application running as an unprivileged user to access that",
    "start": "770300",
    "end": "776990"
  },
  {
    "text": "credential and in the case of a container breakout other applications on the node will not be able to read that",
    "start": "776990",
    "end": "784660"
  },
  {
    "text": "we used to allow we still allow as secrets to be injected into environment",
    "start": "784660",
    "end": "790400"
  },
  {
    "text": "variables because a downwards API you can use the dollar sign syntax to",
    "start": "790400",
    "end": "797600"
  },
  {
    "text": "reference a secret we have disallowed that behavior in this new iteration of token",
    "start": "797600",
    "end": "805580"
  },
  {
    "text": "volumes just because those environment variables often leak in the logs in",
    "start": "805580",
    "end": "810860"
  },
  {
    "text": "unexpected ways and for for for a number of their there are many blogs on the",
    "start": "810860",
    "end": "818450"
  },
  {
    "text": "internet that say don't use don't use environment variables to pass credentials to applications plot",
    "start": "818450",
    "end": "826490"
  },
  {
    "text": "security policies might need to change if you're making use of this feature instead of permitting a secret volume",
    "start": "826490",
    "end": "833390"
  },
  {
    "text": "you not have to permit a projected volume other than that the service",
    "start": "833390",
    "end": "839420"
  },
  {
    "text": "account volume the structure and the location of it on inside the pod is",
    "start": "839420",
    "end": "845870"
  },
  {
    "text": "unchanged so it so has that a CA cert still has the tuggin file and it also",
    "start": "845870",
    "end": "851120"
  },
  {
    "text": "has the the namespace file so the file structure is preserved in these new",
    "start": "851120",
    "end": "858350"
  },
  {
    "text": "token volumes so what's our migration plan we have a very rough timeline so we",
    "start": "858350",
    "end": "868240"
  },
  {
    "text": "got this feature into one thirteen please turn it on and test it out and",
    "start": "868240",
    "end": "874160"
  },
  {
    "text": "see what breaks let us know any pain points we're thinking about some like",
    "start": "874160",
    "end": "881390"
  },
  {
    "text": "migration tools to ease the migration to these new token volumes we would like to",
    "start": "881390",
    "end": "889210"
  },
  {
    "text": "implement I don't want to make any promises but we if if we implement any",
    "start": "889210",
    "end": "898610"
  },
  {
    "text": "migration help it'll be before 115 when we plan to turn these features on by",
    "start": "898610",
    "end": "906230"
  },
  {
    "text": "default and make the feature beta we'll also send out lots of emails the kubernetes announced list and the",
    "start": "906230",
    "end": "912320"
  },
  {
    "text": "kubernetes dev list and make sure people are very aware and when we go GA we will",
    "start": "912320",
    "end": "919310"
  },
  {
    "text": "remove the ability to opt out of the of this new behavior so what can you do to",
    "start": "919310",
    "end": "927230"
  },
  {
    "text": "help us so subscribe to that issue right",
    "start": "927230",
    "end": "932540"
  },
  {
    "text": "now it has a large description of the benefits of the new token",
    "start": "932540",
    "end": "938960"
  },
  {
    "text": "provisioning and it also has a list of known incompatible differences between the new token volumes please give us",
    "start": "938960",
    "end": "948470"
  },
  {
    "text": "feedback please turn it on if you're on a security team please communicate to",
    "start": "948470",
    "end": "954800"
  },
  {
    "text": "people that are using service account tokens and make them aware of these changes if you're using if you would",
    "start": "954800",
    "end": "963260"
  },
  {
    "text": "like to use service account tokens to authenticate to things other than the API server for example vault please try",
    "start": "963260",
    "end": "970460"
  },
  {
    "text": "out the new tokens and see if it works for you see what problems it solves so",
    "start": "970460",
    "end": "979600"
  },
  {
    "text": "what's next for us now that we have these new tokens we actually encode per",
    "start": "979600",
    "end": "988940"
  },
  {
    "text": "pod information including the pod UID and pod name so we can actually start to",
    "start": "988940",
    "end": "995570"
  },
  {
    "text": "build node scoped authorization systems so right now we have a node authorizer",
    "start": "995570",
    "end": "1001480"
  },
  {
    "text": "which is primarily used to to scope the permissions of node identities so we can",
    "start": "1001480",
    "end": "1009130"
  },
  {
    "text": "we create a graph and we we do authorization based on pods that are",
    "start": "1009130",
    "end": "1015460"
  },
  {
    "text": "retina running on the notes so if a pod references a secret and that pod is bound to a node that the node has",
    "start": "1015460",
    "end": "1021310"
  },
  {
    "text": "permission to read that secret although we have certain non nodes note scope",
    "start": "1021310",
    "end": "1027490"
  },
  {
    "text": "identities on on the machines right now like the node problem detector has pretty broad permission and since it",
    "start": "1027490",
    "end": "1034150"
  },
  {
    "text": "doesn't run as a node identity it actually bypasses node authorization now that we are provisioning node mint",
    "start": "1034150",
    "end": "1042100"
  },
  {
    "text": "tokens with node metadata and Padma that we can actually begin to implement node",
    "start": "1042100",
    "end": "1049240"
  },
  {
    "text": "scoped authorization which for these system components which might look like a intersection of our back permission",
    "start": "1049240",
    "end": "1056950"
  },
  {
    "text": "with the node authorization permission so what was not covered by token this",
    "start": "1056950",
    "end": "1065560"
  },
  {
    "text": "token work is any form of server authentication we would like to implement some sort of",
    "start": "1065560",
    "end": "1073240"
  },
  {
    "text": "easy server authentication for kubernetes components that are part of",
    "start": "1073240",
    "end": "1078669"
  },
  {
    "text": "core we suggest that for user workload applications that you use some",
    "start": "1078669",
    "end": "1085330"
  },
  {
    "text": "higher-level system like spiffy or Sto however since we have this bootstrapping problem we",
    "start": "1085330",
    "end": "1091330"
  },
  {
    "text": "need to make sure that we have a low dependency solution for server authentication and we want to",
    "start": "1091330",
    "end": "1098350"
  },
  {
    "text": "authenticate to the same servers as I mentioned before no problem detector cubelet so we're exploring mechanisms",
    "start": "1098350",
    "end": "1105010"
  },
  {
    "text": "for auto approving or Auto provisioning serving certificates for for these workloads and then the final step is are",
    "start": "1105010",
    "end": "1113320"
  },
  {
    "text": "the final piece here is non exploitable credentials so we're working we're",
    "start": "1113320",
    "end": "1118960"
  },
  {
    "text": "thinking about ways to make make harden these tokens and potentially allow them",
    "start": "1118960",
    "end": "1124990"
  },
  {
    "text": "to be bound to keys and allow those keys to live inside TPMS so we want to we",
    "start": "1124990",
    "end": "1132190"
  },
  {
    "text": "want to focus on hardening this token flow so that it's useful and secure so",
    "start": "1132190",
    "end": "1142480"
  },
  {
    "text": "that brings us to the end of the content that we have prepared but we want to",
    "start": "1142480",
    "end": "1148080"
  },
  {
    "text": "hear your feedback and answer any questions that you have yeah what would",
    "start": "1148080",
    "end": "1159490"
  },
  {
    "text": "the migration tool look like we're going from the old tokens to the new tokens",
    "start": "1159490",
    "end": "1165900"
  },
  {
    "text": "this is not written down anywhere and it actually just came out of some",
    "start": "1165990",
    "end": "1171010"
  },
  {
    "text": "discussions that we've had this week with Clayton we were considering",
    "start": "1171010",
    "end": "1177190"
  },
  {
    "text": "namespace level opt-out so maybe an harden service account level opt-out so",
    "start": "1177190",
    "end": "1183540"
  },
  {
    "text": "add an annotation to a service account that says do legacy token provisioning",
    "start": "1183540",
    "end": "1188730"
  },
  {
    "text": "and for service accounts that don't have that annotation we we don't create that",
    "start": "1188730",
    "end": "1196870"
  },
  {
    "text": "secret containing the token the old-style token",
    "start": "1196870",
    "end": "1202080"
  },
  {
    "text": "we mountain the new protected volume in situations like if you had created a",
    "start": "1202080",
    "end": "1207120"
  },
  {
    "text": "service account exported that key and used it in your CI system you would add",
    "start": "1207120",
    "end": "1213630"
  },
  {
    "text": "that annotation and you would that would preserve the behavior and maybe at a",
    "start": "1213630",
    "end": "1219419"
  },
  {
    "text": "certain point in migration if if you know that you're doing these types of things you can go and annotate all",
    "start": "1219419",
    "end": "1224510"
  },
  {
    "text": "service accounts running in a cluster before Mike before an update and the",
    "start": "1224510",
    "end": "1229590"
  },
  {
    "text": "behavior would be preserved for those service accounts and then your security team would hopefully nag to you because",
    "start": "1229590",
    "end": "1235980"
  },
  {
    "text": "you're using insecure tokens and eventually all those these cases would",
    "start": "1235980",
    "end": "1242340"
  },
  {
    "text": "go away or you'd find alternatives and we could turn this annotation behavior",
    "start": "1242340",
    "end": "1247980"
  },
  {
    "text": "off",
    "start": "1247980",
    "end": "1250130"
  },
  {
    "text": "hi by the looks of things right now the those new tokens are not stored anywhere",
    "start": "1255720",
    "end": "1261450"
  },
  {
    "text": "in the system right so how is it possible to revoke them so revocation",
    "start": "1261450",
    "end": "1268980"
  },
  {
    "text": "works it is actually only supported when using the token Review API so in any",
    "start": "1268980",
    "end": "1275669"
  },
  {
    "text": "aggregated API servers that do delegated authentication is to do a token review",
    "start": "1275669",
    "end": "1281370"
  },
  {
    "text": "this is how people it does token authentication basically we encode the",
    "start": "1281370",
    "end": "1287429"
  },
  {
    "text": "pod name and pod UID in the tokens that we provisioned pods so as part of validating that token we do the normal",
    "start": "1287429",
    "end": "1293629"
  },
  {
    "text": "ie C job validation and then we make sure that that pod is still running so",
    "start": "1293629",
    "end": "1301100"
  },
  {
    "text": "revocation is just to delete the pod and we expect them to be short a lifetime",
    "start": "1301100",
    "end": "1306210"
  },
  {
    "text": "anyway - I bet liked it you know you have to make your own decisions about how long to to set the lifetime for up",
    "start": "1306210",
    "end": "1313919"
  },
  {
    "text": "to the both the app application developer the pod spec author can set an",
    "start": "1313919",
    "end": "1319740"
  },
  {
    "text": "expiration in in the pod spec and a cluster operator can set a cluster wide",
    "start": "1319740",
    "end": "1325320"
  },
  {
    "text": "soft max duration so if in an author a",
    "start": "1325320",
    "end": "1330450"
  },
  {
    "text": "pot spec author says I wanted available for two years the cluster operator can",
    "start": "1330450",
    "end": "1336690"
  },
  {
    "text": "say sorry you only get it for four hours and will just pick them in how does",
    "start": "1336690",
    "end": "1349500"
  },
  {
    "text": "rotation work so for in the new and the",
    "start": "1349500",
    "end": "1358980"
  },
  {
    "text": "new token provisioning flow cubelet runs something called a token manager so it",
    "start": "1358980",
    "end": "1365519"
  },
  {
    "text": "makes sure that it has a token available when the pod starts up and it that token",
    "start": "1365519",
    "end": "1370740"
  },
  {
    "text": "manager knows the expiration or the TTL of of the token and it has some",
    "start": "1370740",
    "end": "1377669"
  },
  {
    "text": "threshold where it will begin to start to request a new token for the API",
    "start": "1377669",
    "end": "1383549"
  },
  {
    "text": "server from the API server that threshold is either 50% of the token",
    "start": "1383549",
    "end": "1389920"
  },
  {
    "text": "lifetime all the way up to one day so you know it's not configurable it's",
    "start": "1389920",
    "end": "1397330"
  },
  {
    "text": "either 50% of the token lifetime or up to one day and how it replaces that",
    "start": "1397330",
    "end": "1406360"
  },
  {
    "text": "token on disk it uses the same libraries that we built for other protected volume",
    "start": "1406360",
    "end": "1412780"
  },
  {
    "text": "types so it will the the secret volume in secrets is a sim link to a directory",
    "start": "1412780",
    "end": "1421120"
  },
  {
    "text": "so we rebuild the directory and then we reread sim link so that that token file",
    "start": "1421120",
    "end": "1426760"
  },
  {
    "text": "should change atomically on disk however",
    "start": "1426760",
    "end": "1435130"
  },
  {
    "text": "this is an integrated or working with spiffy and inspire I mean is there any",
    "start": "1435130",
    "end": "1444930"
  },
  {
    "text": "integration that can make this like full solution yeah so my personal philosophy",
    "start": "1444930",
    "end": "1454300"
  },
  {
    "text": "is that we want to enable secure feature full identity solutions on top of",
    "start": "1454300",
    "end": "1460630"
  },
  {
    "text": "kubernetes that can leverage the chain of trust that kubernetes sets up to",
    "start": "1460630",
    "end": "1466600"
  },
  {
    "text": "provision although to provision workloads so we want to build a lot of extensions to aspire and sto to hook",
    "start": "1466600",
    "end": "1475300"
  },
  {
    "text": "into what we provide so for example in sto 1.1 the the sidecar the sto proxy",
    "start": "1475300",
    "end": "1484990"
  },
  {
    "text": "will actually use the token that we just mentioned here to make a request to the",
    "start": "1484990",
    "end": "1490630"
  },
  {
    "text": "Citadel certificate authority as part of its original certificate signing request",
    "start": "1490630",
    "end": "1496510"
  },
  {
    "text": "and receive a certificate and that's um that's a example of how we bootstrap a",
    "start": "1496510",
    "end": "1502330"
  },
  {
    "text": "more feature full identity system using some of these basic primitives",
    "start": "1502330",
    "end": "1508019"
  },
  {
    "text": "is there consideration to put the token life lifetime on the pod security policy",
    "start": "1512900",
    "end": "1521270"
  },
  {
    "text": "that's a good question we have not",
    "start": "1523010",
    "end": "1528720"
  },
  {
    "text": "considered it yet the as I mentioned earlier the the operator has a cluster",
    "start": "1528720",
    "end": "1538770"
  },
  {
    "text": "wide control over max token lifetime but we have not considered that yet if",
    "start": "1538770",
    "end": "1543870"
  },
  {
    "text": "that's something desirable we can definitely bring it up as a feature request",
    "start": "1543870",
    "end": "1549980"
  },
  {
    "text": "Multi clusters and is any notion or plans to add cluster identity as part of",
    "start": "1558660",
    "end": "1564280"
  },
  {
    "text": "the default tokens etiquette in a pond yeah so the question was how does this",
    "start": "1564280",
    "end": "1571750"
  },
  {
    "text": "extend to multi cluster so I think there are two parts to this answer one is we",
    "start": "1571750",
    "end": "1582550"
  },
  {
    "text": "would like these tools to enable bootstrapping of more feature full identity systems on top of kubernetes so",
    "start": "1582550",
    "end": "1591030"
  },
  {
    "text": "history already supports meshes that span multiple clusters and the second",
    "start": "1591030",
    "end": "1597850"
  },
  {
    "text": "part of that question is these tokens already carry an indicator of the origin",
    "start": "1597850",
    "end": "1604990"
  },
  {
    "text": "cluster so the issuer is actually it's",
    "start": "1604990",
    "end": "1610210"
  },
  {
    "text": "we we run a single issue or per cluster so the issuer field and that jot the issuer URL indicates the origin cluster",
    "start": "1610210",
    "end": "1617770"
  },
  {
    "text": "of that token so you can you can start you can start to reason about origin",
    "start": "1617770",
    "end": "1626140"
  },
  {
    "text": "cluster in that way",
    "start": "1626140",
    "end": "1628920"
  },
  {
    "text": "playing with that thought I guess you could potentially have cluster a as a",
    "start": "1638580",
    "end": "1645490"
  },
  {
    "text": "cluster issuing these tokens which are DC tokens have cluster B have oh I DC",
    "start": "1645490",
    "end": "1652779"
  },
  {
    "text": "all client off configured with your other cluster then you could use those tokens with the audience for cluster B",
    "start": "1652779",
    "end": "1660100"
  },
  {
    "text": "in cluster right the cluster eight tokens with audience set to cluster B to authenticate ya attentively yeah so that",
    "start": "1660100",
    "end": "1668860"
  },
  {
    "text": "would definitely work the the other option is to share an issuer between",
    "start": "1668860",
    "end": "1676360"
  },
  {
    "text": "many clusters you if if you don't have a requirement to lock down a service",
    "start": "1676360",
    "end": "1687070"
  },
  {
    "text": "account permission per cluster then you could alternatively just share the issuer across many clusters however",
    "start": "1687070",
    "end": "1694809"
  },
  {
    "text": "sometimes people want to segregate the kubernetes control manager and cluster a",
    "start": "1694809",
    "end": "1700179"
  },
  {
    "text": "is only allowed to read secrets in cluster a and that prevents cluster to",
    "start": "1700179",
    "end": "1707710"
  },
  {
    "text": "cluster attack vector escalation vector",
    "start": "1707710",
    "end": "1712770"
  },
  {
    "text": "what do you think anyone else this is a little wider but",
    "start": "1720620",
    "end": "1733309"
  },
  {
    "text": "um the Calico ca9 plugin does the installer actually uses the workload",
    "start": "1733309",
    "end": "1739040"
  },
  {
    "text": "service account and creates a config file that is used by the executable",
    "start": "1739040",
    "end": "1746000"
  },
  {
    "text": "that's run by couplet or by docker to access the coop API right so this we",
    "start": "1746000",
    "end": "1753530"
  },
  {
    "text": "would have to at first is that a bad that seems like a kind of bad pattern right for would it be better to do",
    "start": "1753530",
    "end": "1760520"
  },
  {
    "text": "something like your exec off the pattern and but you guys do for gke or the",
    "start": "1760520",
    "end": "1767960"
  },
  {
    "text": "alternative and with this new feature we'd have to periodically reread and",
    "start": "1767960",
    "end": "1773000"
  },
  {
    "text": "rebuild that file as a minimum what are your suggestions for that I guess so I",
    "start": "1773000",
    "end": "1780080"
  },
  {
    "text": "think there are two models for some of these helper components like a scene I",
    "start": "1780080",
    "end": "1785090"
  },
  {
    "text": "plug-in or a flex volume plugin I think it's reasonable to plumb in a service",
    "start": "1785090",
    "end": "1791090"
  },
  {
    "text": "gun token to potentially a flex volume if the Flex volume needs to use the",
    "start": "1791090",
    "end": "1796700"
  },
  {
    "text": "authority of that application to maybe mount a remote volume however an",
    "start": "1796700",
    "end": "1806260"
  },
  {
    "text": "alternative approach to that is to run a identity for the CNI component itself in",
    "start": "1806260",
    "end": "1816950"
  },
  {
    "text": "that situation it isn't using the application identity when it sets up the network for that",
    "start": "1816950",
    "end": "1823510"
  },
  {
    "text": "component I'm not sure if these things usually require Damon said I believe",
    "start": "1823510",
    "end": "1829100"
  },
  {
    "text": "calcio does require a process running on all nodes in order to work correctly so",
    "start": "1829100",
    "end": "1836270"
  },
  {
    "text": "I would just give that Calico node agent a its own service kind identity and use",
    "start": "1836270",
    "end": "1842929"
  },
  {
    "text": "that to to do any authentication rather than using the applications identity",
    "start": "1842929",
    "end": "1852669"
  },
  {
    "text": "alright let's call it thanks overall we'll be up here to answer any other questions [Applause]",
    "start": "1858080",
    "end": "1867258"
  }
]