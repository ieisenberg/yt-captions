[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hello and welcome to a flight over the cloud native landscape my name is carson anderson i work for weave not that weave not the one you're",
    "start": "799",
    "end": "7839"
  },
  {
    "text": "thinking but we'll get there in a second you can find me on twitter at carson underscore ops and on github at",
    "start": "7839",
    "end": "13120"
  },
  {
    "text": "carsonoid i actually have the distinct honor of having more followers on github than on twitter",
    "start": "13120",
    "end": "18160"
  },
  {
    "text": "so feel free to follow me on one or both of those platforms if you want to see what i'm doing in fact every presentation i've ever",
    "start": "18160",
    "end": "23600"
  },
  {
    "text": "made all the artwork for this presentation and my others is always open source on github so follow me there now before i go any",
    "start": "23600",
    "end": "30240"
  },
  {
    "start": "29000",
    "end": "82000"
  },
  {
    "text": "further i want to say what i mean when i said not that weave the weave that i work for is not the cloud native vendor you might be",
    "start": "30240",
    "end": "36320"
  },
  {
    "text": "thinking about my wave is an end user company and if you're curious about what we do you can find us on gitweave.com",
    "start": "36320",
    "end": "41760"
  },
  {
    "text": "i'm saying this because i want you to know that i'm going to teach you about a lot of different projects and i want you know we have no stake i have no personal",
    "start": "41760",
    "end": "47680"
  },
  {
    "text": "professional stake in any of these projects so you're not getting any sort of specific vendor pitch here",
    "start": "47680",
    "end": "54160"
  },
  {
    "text": "now what i want to do in this presentation is cover the 12 graduated and 21 incubating projects in the cncf",
    "start": "54160",
    "end": "60399"
  },
  {
    "text": "that's 33 projects total and i have less than 35 minutes to teach them all to you",
    "start": "60399",
    "end": "66320"
  },
  {
    "text": "now i'm not going to obviously in that amount of time be able to teach you everything about a project or cover all the features and nuances of any given",
    "start": "66320",
    "end": "72159"
  },
  {
    "text": "project but i want you to leave this presentation having a base understanding of what these projects do and how they relate to each other and",
    "start": "72159",
    "end": "78320"
  },
  {
    "text": "know which ones you're curious about might want to learn more about or might want to use yourself so before we go further let's say a big",
    "start": "78320",
    "end": "85759"
  },
  {
    "start": "82000",
    "end": "185000"
  },
  {
    "text": "thanks to fippy.io for these characters i'm going to use them pretty liberally in the presentation",
    "start": "85759",
    "end": "90880"
  },
  {
    "text": "because i find them to be a lot more interesting and fun than just having boxes called app 1 and app 2. so you're",
    "start": "90880",
    "end": "96159"
  },
  {
    "text": "going to see these characters show up quite a bit specifically going to see fippy and when you see fippy it's",
    "start": "96159",
    "end": "101680"
  },
  {
    "text": "i'm going to refer to a legacy application written in an unspecified language so it could be any language and when you see goldie it's",
    "start": "101680",
    "end": "107119"
  },
  {
    "text": "specifically a newer application written in go before we go into the projects themselves let's talk about what it",
    "start": "107119",
    "end": "112479"
  },
  {
    "text": "means to be graduated in the cncf so if i've got a project and that project wants to be a graduated project",
    "start": "112479",
    "end": "118079"
  },
  {
    "text": "you have to pass a few things first you have to be receiving constant contribution from at least two different",
    "start": "118079",
    "end": "123280"
  },
  {
    "text": "organizations into the project that that means that you know that if you're going to use a project that's graduated you're not dependent on one",
    "start": "123280",
    "end": "129599"
  },
  {
    "text": "organization to maintain the project you also have to certify that you're passing the best practices for",
    "start": "129599",
    "end": "135440"
  },
  {
    "text": "core infrastructure and fully open source software you have to pass a security audit publish some metadata around",
    "start": "135440",
    "end": "142000"
  },
  {
    "text": "who governs the project who's in charge of the code and who's using the project",
    "start": "142000",
    "end": "147520"
  },
  {
    "text": "once you do that you pass a super majority vote from the cncf and you've become a graduated project",
    "start": "147520",
    "end": "153120"
  },
  {
    "text": "now notice that never in that did i talk about something being quote unquote production ready",
    "start": "153120",
    "end": "158800"
  },
  {
    "text": "graduated status in the cncf you don't have to be graduated to be production ready there are plenty of incubating and",
    "start": "158800",
    "end": "164800"
  },
  {
    "text": "even sandbox projects that might be production ready for you depending on what you're trying to get so don't be afraid",
    "start": "164800",
    "end": "170080"
  },
  {
    "text": "to use projects that are incubating or sandbox although it is great to be a graduated project it's not necessarily just a",
    "start": "170080",
    "end": "177120"
  },
  {
    "text": "measure of production readiness but rather a measure of openness and transparency",
    "start": "177120",
    "end": "183040"
  },
  {
    "text": "now let's go ahead and dig into all these projects because i have a lot to cover the first one i want to talk about is container d it's a daemon like you might",
    "start": "183040",
    "end": "189599"
  },
  {
    "start": "185000",
    "end": "231000"
  },
  {
    "text": "expect from the d meaning it's a process that runs on your systems to help you manage containers so you can use container d directly in",
    "start": "189599",
    "end": "196000"
  },
  {
    "text": "your code to build container images and to manage containers but most of us won't use container d",
    "start": "196000",
    "end": "202319"
  },
  {
    "text": "directly most of us will use continuity as part of something like docker or another project so when most",
    "start": "202319",
    "end": "208239"
  },
  {
    "text": "of us build a container image today and we do that with docker we're doing it with container d so in fact this project is so useful",
    "start": "208239",
    "end": "215040"
  },
  {
    "text": "that it's actually built into a lot of the public cloud kubernetes offerings and the k3s project which is in sandbox",
    "start": "215040",
    "end": "220799"
  },
  {
    "text": "state that allows you to run a full or mostly full-featured kubernetes cluster all in one binary",
    "start": "220799",
    "end": "226799"
  },
  {
    "text": "and that does that using container d so if you're curious about low level container operations check out container d",
    "start": "226799",
    "end": "232319"
  },
  {
    "start": "231000",
    "end": "295000"
  },
  {
    "text": "next is tough tough stands for the update framework and it's all about dealing with managing updates so it's tough as a",
    "start": "232319",
    "end": "238159"
  },
  {
    "text": "series of standards and tools that we can build into our code and use to deal with updates i'm being",
    "start": "238159",
    "end": "243599"
  },
  {
    "text": "intentionally vague here because the tough standards don't prescribe to any one specific kind of update you might be they might be",
    "start": "243599",
    "end": "248799"
  },
  {
    "text": "package updates or image updates but anything that you might want to get regular updates from and verify the",
    "start": "248799",
    "end": "253840"
  },
  {
    "text": "source of so that's tough i won't cover it much because most of us won't use tough we're going to use the reference",
    "start": "253840",
    "end": "259440"
  },
  {
    "text": "implementation of tough or the main implementation of tough in notary now notary takes all the tough",
    "start": "259440",
    "end": "264479"
  },
  {
    "text": "ideas but it builds us some actual tools that most of us can use rather than writing our own code to deal with update management",
    "start": "264479",
    "end": "270320"
  },
  {
    "text": "verification and most of us will probably use notary as part of image signing and verification",
    "start": "270320",
    "end": "276000"
  },
  {
    "text": "to ensure that when we get an image we get it from somebody that we trust and it hasn't been modified along the way so that when we pull images when we",
    "start": "276000",
    "end": "282720"
  },
  {
    "text": "pull code into our infrastructure we know that we can trust where it came from so that's notary again tough and notary have this tight",
    "start": "282720",
    "end": "289199"
  },
  {
    "text": "relationship where tough is the standards and notary is an implementation of it but you should look into both those if you're curious about",
    "start": "289199",
    "end": "295199"
  },
  {
    "start": "295000",
    "end": "342000"
  },
  {
    "text": "that next is harbor harbor is a private image registry and it has all the features you",
    "start": "295199",
    "end": "300240"
  },
  {
    "text": "might expect from a private image registry you can upload oci compliant images and get things like validation through",
    "start": "300240",
    "end": "305759"
  },
  {
    "text": "something like notary or even image inspection or vulnerability scanning",
    "start": "305759",
    "end": "311440"
  },
  {
    "text": "and along with a bunch of other features like you might expect from a private registry it also has a really cool feature in that it can be a",
    "start": "311440",
    "end": "317600"
  },
  {
    "text": "pull through cache so you can run hardware in your infrastructure hook it up to public image registries",
    "start": "317600",
    "end": "323520"
  },
  {
    "text": "and then have your clients point to harvard and when they need an image if that image exists in a public registry harper will pull it through",
    "start": "323520",
    "end": "330400"
  },
  {
    "text": "cache it locally allowing your clients to pull from harbor instead of always going over the internet so if you need to reduce your overall image pole",
    "start": "330400",
    "end": "336240"
  },
  {
    "text": "bandwidth you might check out harbor for that either way if you're curious about having a private image registry check",
    "start": "336240",
    "end": "341440"
  },
  {
    "text": "out harbor next is kubernetes of course we can't talk cloud native without talking kubernetes kubernetes was the first cncf",
    "start": "341440",
    "end": "348080"
  },
  {
    "start": "342000",
    "end": "438000"
  },
  {
    "text": "member project to reach the graduated status and it is at its core container orchestration",
    "start": "348080",
    "end": "353759"
  },
  {
    "text": "engine so when i say that i mean we've got a suite of backend machines in kubernetes",
    "start": "353759",
    "end": "358960"
  },
  {
    "text": "we call these nodes and we want to run workloads on those nodes and we can tell communities hey i want you to run a workload here's what",
    "start": "358960",
    "end": "364400"
  },
  {
    "text": "it should look like and kubernetes will put that workload somewhere we can then of course scale up run multiple copies of our workload in",
    "start": "364400",
    "end": "370639"
  },
  {
    "text": "fact kubernetes can handle tons and tons of different workloads with different configuration and because it's an",
    "start": "370639",
    "end": "376400"
  },
  {
    "text": "orchestrator it has things like automatic uh dealing with things like nodes going down so if a node goes down kubernetes",
    "start": "376400",
    "end": "382319"
  },
  {
    "text": "sees that and can redistribute the declared workload or it can automatically scale up and distribute workloads it really lets us",
    "start": "382319",
    "end": "388400"
  },
  {
    "text": "stop worrying about nodes in fact most times when we talk kubernetes we don't even talk nodes at all we just think of our kubernetes cluster",
    "start": "388400",
    "end": "394240"
  },
  {
    "text": "as a whole cohesive unit and we run our workloads in kubernetes and it deals with the underlying infrastructure for",
    "start": "394240",
    "end": "400400"
  },
  {
    "text": "us and of course i have to bring in captain cube here because they're amazing and why wouldn't you talk about captain",
    "start": "400400",
    "end": "406319"
  },
  {
    "text": "cube when you get a chance kubernetes is really kind of the heart of a lot of other things that i'm going",
    "start": "406319",
    "end": "411840"
  },
  {
    "text": "to talk about and it is that way because it provides a lot of touch points a lot of integration points for other",
    "start": "411840",
    "end": "417280"
  },
  {
    "text": "systems to build upon kubernetes to provide more value using kubernetes as a core so communities has the ability to add",
    "start": "417280",
    "end": "422800"
  },
  {
    "text": "storage or networking layers it can add custom resources which we'll talk about in a second or even extend brand new apis into the",
    "start": "422800",
    "end": "429440"
  },
  {
    "text": "kubernetes api ecosystem so really kubernetes is the heart of cloud native in a lot of ways",
    "start": "429440",
    "end": "434639"
  },
  {
    "text": "now you don't have to run kubernetes to be cloud native but a lot of us do speaking of kubernetes helm is a package",
    "start": "434639",
    "end": "441520"
  },
  {
    "start": "438000",
    "end": "504000"
  },
  {
    "text": "manager for kubernetes so home is something we do actually have to run in kubernetes because it's specifically",
    "start": "441520",
    "end": "446560"
  },
  {
    "text": "around creating and maintaining applications in kubernetes so we know that we can run our workloads",
    "start": "446560",
    "end": "452319"
  },
  {
    "text": "in kubernetes and we call those pods but it turns out there's actually a lot of things in kubernetes that we could",
    "start": "452319",
    "end": "457440"
  },
  {
    "text": "create we can create configuration or services or different routing information to all help",
    "start": "457440",
    "end": "463599"
  },
  {
    "text": "tell kubernetes what our application looks like to describe our application to kubernetes helm allows us to take all that",
    "start": "463599",
    "end": "468800"
  },
  {
    "text": "configuration put it into one thing called a helm chart and that chart is sort of like a package that says",
    "start": "468800",
    "end": "474319"
  },
  {
    "text": "here's what my application looks like here's all the things you need to make and how they relate to each other we send that to telm",
    "start": "474319",
    "end": "479840"
  },
  {
    "text": "and help creates it in our quran's cluster like we expect the great thing about helm and helm chart is it's this kind of recipe this",
    "start": "479840",
    "end": "486240"
  },
  {
    "text": "redistributable thing we can take our chart and not only use it internally but give that chart to",
    "start": "486240",
    "end": "491360"
  },
  {
    "text": "other users or distribute that chart out into the world to help other users install our applications into their kubernetes clusters so you'll",
    "start": "491360",
    "end": "498479"
  },
  {
    "text": "very often see a lot of the things i'm going to talk about be installable into your clusters using something like helm",
    "start": "498479",
    "end": "504800"
  },
  {
    "start": "504000",
    "end": "560000"
  },
  {
    "text": "another way that you might manage your applications in kubernetes is using something like argo argo is also an application manager but it takes a",
    "start": "504800",
    "end": "510560"
  },
  {
    "text": "different tact than helm argo is a get ops-based system for kubernetes application management meaning that we set up one or more git",
    "start": "510560",
    "end": "517279"
  },
  {
    "text": "repositories and in those repositories we describe what we want our application to look like in kubernetes",
    "start": "517279",
    "end": "522800"
  },
  {
    "text": "we then hook argo up between the repositories and our kubernetes cluster or clusters and it takes the described application",
    "start": "522800",
    "end": "529920"
  },
  {
    "text": "and makes it true in kubernetes and it's doing git ops so it's always watching the repository and as the repository changes",
    "start": "529920",
    "end": "535440"
  },
  {
    "text": "it syncs those changes into kubernetes as they happen and it allows us to take all the get ops tools we know and",
    "start": "535440",
    "end": "540560"
  },
  {
    "text": "love and use them to manage our kubernetes applications so if you're interested in git ops and kubernetes check out argo i will also",
    "start": "540560",
    "end": "546959"
  },
  {
    "text": "say that argo you don't have to just use argo adjust you use helm argo actually knows how to leverage helm",
    "start": "546959",
    "end": "552720"
  },
  {
    "text": "and customize and some other kubernetes deployment mechanisms that means they're not mutually exclusive you can use argo",
    "start": "552720",
    "end": "558160"
  },
  {
    "text": "and helm together it's absolutely fine one other way we might manage applications or the other",
    "start": "558160",
    "end": "564399"
  },
  {
    "start": "560000",
    "end": "635000"
  },
  {
    "text": "applications may create for us to manage them is something called an operator and the operator framework is a set of tools",
    "start": "564399",
    "end": "570160"
  },
  {
    "text": "and libraries to help us build operators now my 30 second what is an operator talk so an operator can be thought of as an",
    "start": "570160",
    "end": "575839"
  },
  {
    "text": "engine it's a process we run inside our kubernetes cluster that knows how to create applications for us and we create something",
    "start": "575839",
    "end": "582240"
  },
  {
    "text": "kubernetes called a custom resource and that custom resource describes just the minimum amount of",
    "start": "582240",
    "end": "587519"
  },
  {
    "text": "configuration that would need to exist to describe application and the engine we've written called an operator knows how to take",
    "start": "587519",
    "end": "593600"
  },
  {
    "text": "that resource and make the application in kubernetes force based on that resource and then if we make a different resource with different",
    "start": "593600",
    "end": "599600"
  },
  {
    "text": "configuration the operator can operate on that and make that copy of the application really the focus here is",
    "start": "599600",
    "end": "605360"
  },
  {
    "text": "these crds rather than build a helm chart or a git repository we actually put a resource into the kubernetes api describing our",
    "start": "605360",
    "end": "611839"
  },
  {
    "text": "application and we use the operator framework or other tools to create an operator that knows how to take those custom resources",
    "start": "611839",
    "end": "618320"
  },
  {
    "text": "and turn them into applications in our cluster so if you're curious about a more advanced way to",
    "start": "618320",
    "end": "623839"
  },
  {
    "text": "manage your applications throughout their entire life cycle inside kubernetes check out the operator framework and just like before the operators",
    "start": "623839",
    "end": "630399"
  },
  {
    "text": "and helm and argo those are not all mutually exclusive and a lot of them can work together very well",
    "start": "630399",
    "end": "636160"
  },
  {
    "start": "635000",
    "end": "694000"
  },
  {
    "text": "next is contour contour sort of fills another gap in the kubernetes ecosystem so we talked about kubernetes can run",
    "start": "636160",
    "end": "641839"
  },
  {
    "text": "our workloads it can also run these things called ingress and ingress really is just a set of configuration it's a set of",
    "start": "641839",
    "end": "648079"
  },
  {
    "text": "configurations like host and path-based information that says hey if you're coming in for this host and this path go to this",
    "start": "648079",
    "end": "653839"
  },
  {
    "text": "workload but there's something missing ingress is just configuration something has to exist in the kubernetes cluster",
    "start": "653839",
    "end": "659440"
  },
  {
    "text": "to make that configuration real something has to run in the cluster receive user traffic read the ingress configuration and route",
    "start": "659440",
    "end": "666000"
  },
  {
    "text": "to the right place based on that config and that's what it called is called an ingress controller in kubernetes and",
    "start": "666000",
    "end": "671920"
  },
  {
    "text": "there are a lot of ingress controllers you can run in kubernetes many of them are legacy web servers kind of jammed into this ingress controller",
    "start": "671920",
    "end": "678640"
  },
  {
    "text": "role but contour is built from the ground up to be an ingress controller for kubernetes",
    "start": "678640",
    "end": "683920"
  },
  {
    "text": "so if you're looking for a cloud native ingress controller or an angus controller that's built specifically for this job",
    "start": "683920",
    "end": "689519"
  },
  {
    "text": "and to try to do the right things for you right from the start check out contour",
    "start": "689519",
    "end": "694959"
  },
  {
    "start": "694000",
    "end": "719000"
  },
  {
    "text": "next is cube edge cube edge is interesting because it's orchestration built on kubernetes so we already know",
    "start": "694959",
    "end": "700160"
  },
  {
    "text": "kubernetes can do container orchestration but cube edge is a platform that leverages the kubernetes apis and",
    "start": "700160",
    "end": "706160"
  },
  {
    "text": "extension points to allow us to do edge compute management using the kubernetes apis",
    "start": "706160",
    "end": "711519"
  },
  {
    "text": "so if you're curious about doing edge management and managing your computer at the edge and you want to use the kubernetes tools",
    "start": "711519",
    "end": "717120"
  },
  {
    "text": "and api check out cube edge next is rook rook is also orchestration",
    "start": "717120",
    "end": "722160"
  },
  {
    "start": "719000",
    "end": "748000"
  },
  {
    "text": "that runs in kubernetes but instead of managing other devices or containers work is about managing storage inside",
    "start": "722160",
    "end": "727360"
  },
  {
    "text": "kubernetes so rook runs in kubernetes and allows you to deal with block storage or object storage and it can do things like",
    "start": "727360",
    "end": "733519"
  },
  {
    "text": "provide persistent volumes for your workloads so they can have a volume that follows them around in your cluster",
    "start": "733519",
    "end": "738880"
  },
  {
    "text": "or do other things like i said object storage and other kinds of storage extensions that you would build on top of kubernetes using",
    "start": "738880",
    "end": "745440"
  },
  {
    "text": "rook so if you're curious about storage and kubernetes check out rook next is cryo or crio cri stands for",
    "start": "745440",
    "end": "752160"
  },
  {
    "start": "748000",
    "end": "796000"
  },
  {
    "text": "container runtime interface it is kind of a layer that we described that we defined to help kubernetes run",
    "start": "752160",
    "end": "758720"
  },
  {
    "text": "containers and o stands for oci compliant so every single node in our kubernetes cluster runs this thing called a cubelet",
    "start": "758720",
    "end": "765839"
  },
  {
    "text": "and it's the cubelet's job to create and manage containers over their lifecycle on the node but there's this kind of squishy blue",
    "start": "765839",
    "end": "772160"
  },
  {
    "text": "layer i've drawn between the cubelet and actually doing things with containers and that is where cri or the container",
    "start": "772160",
    "end": "777519"
  },
  {
    "text": "runtime interface lives and it is definitely where crio lives because cryo is a",
    "start": "777519",
    "end": "783680"
  },
  {
    "text": "run a container runtime interface built specifically for kubernetes to be simple and fast and efficient so if",
    "start": "783680",
    "end": "791360"
  },
  {
    "text": "you're curious about container runtime for kubernetes built for kubernetes check out cryo next is cni",
    "start": "791360",
    "end": "797760"
  },
  {
    "start": "796000",
    "end": "831000"
  },
  {
    "text": "cni stands for container network interface so we've got our workloads running on multiple nodes and often they'll talk to",
    "start": "797760",
    "end": "803519"
  },
  {
    "text": "each other over the network sometimes that's on the same node but very often it's across nodes and",
    "start": "803519",
    "end": "808560"
  },
  {
    "text": "something needs to exist to kind of define and implement standards for how we set up networking between our workloads in a cluster or in",
    "start": "808560",
    "end": "815440"
  },
  {
    "text": "the cloud and that's what cni seeks to do it's a set of standards and tools and some kind of low-level helpers to help you",
    "start": "815440",
    "end": "822000"
  },
  {
    "text": "build tools to deal with container to container networking in the cloud or in kubernetes",
    "start": "822000",
    "end": "827120"
  },
  {
    "text": "so if you're interested in the low-level operations of networks check out cni",
    "start": "827120",
    "end": "832720"
  },
  {
    "start": "831000",
    "end": "887000"
  },
  {
    "text": "next is grpc so we've got our applications and they need to talk to each other one way they might do that is over",
    "start": "832720",
    "end": "838959"
  },
  {
    "text": "something like http it's been around for a long time it's kind of a low-level interrupt but http",
    "start": "838959",
    "end": "844480"
  },
  {
    "text": "although it's great has its problems primarily it's got a lot of overhead because it's connectionless and stateless there's a",
    "start": "844480",
    "end": "850560"
  },
  {
    "text": "lot of overhead in every single http request to describe what's going on grpc exists as an",
    "start": "850560",
    "end": "856320"
  },
  {
    "text": "alternative or can run alongside http as another way for our applications to communicate with each other over a network",
    "start": "856320",
    "end": "862639"
  },
  {
    "text": "and this is stateful and has less overhead so it can be a lot lot faster than http",
    "start": "862639",
    "end": "867839"
  },
  {
    "text": "grpc also has cool things like bi-directional streaming where applications can stream over a single connection both ways",
    "start": "867839",
    "end": "874959"
  },
  {
    "text": "if you leverage things like proto you can also get things like type safety using grpc so if you're looking to do",
    "start": "874959",
    "end": "880480"
  },
  {
    "text": "application to application communication over the network and want to go above and beyond what you get from http",
    "start": "880480",
    "end": "885760"
  },
  {
    "text": "check out grpc next is core dns core dns is like you might expect a dns",
    "start": "885760",
    "end": "891760"
  },
  {
    "start": "887000",
    "end": "968000"
  },
  {
    "text": "server built for the cloud so we've if we're all honest with each other dns is the oldest form of what we",
    "start": "891760",
    "end": "896800"
  },
  {
    "text": "call service discovery right we ask for something by name dns gives us back where that lives and",
    "start": "896800",
    "end": "902000"
  },
  {
    "text": "even though we've got all of these cool new ways to do service discovery in the cloud we still tend to tend to use dns a lot and core dns",
    "start": "902000",
    "end": "908720"
  },
  {
    "text": "exists to be a brand new dns server that is built for the cloud and this picture that i'm showing you seems",
    "start": "908720",
    "end": "914000"
  },
  {
    "text": "empty seems like there's a lot missing and that's because core dns really exists at the core of this big ecosystem of",
    "start": "914000",
    "end": "920160"
  },
  {
    "text": "plug-ins core dns has plug-ins for multiple ways to serve dns traffic whether that's the traditional udp",
    "start": "920160",
    "end": "926079"
  },
  {
    "text": "or new protocols like http 2 or grpc it also has the ability to bring in",
    "start": "926079",
    "end": "931360"
  },
  {
    "text": "configuration and receive both initial configuration and constant active reconfiguration",
    "start": "931360",
    "end": "937440"
  },
  {
    "text": "from multiple sources including things like kubernetes etd which we'll talk about or even public clouds where core dns can",
    "start": "937440",
    "end": "944000"
  },
  {
    "text": "privately serve the records that you define in your public cloud dns systems it also has plugins to help you do",
    "start": "944000",
    "end": "949600"
  },
  {
    "text": "things like rewrites and tracing and metrics on your dns it really brings dns into the modern age",
    "start": "949600",
    "end": "955920"
  },
  {
    "text": "in fact all these features make coordinates the recommended and go-to dns solution for doing dns inside of",
    "start": "955920",
    "end": "961600"
  },
  {
    "text": "kubernetes and it has been that way for quite a while now so if you're curious about a modern dns implementation check out coordinates",
    "start": "961600",
    "end": "968880"
  },
  {
    "start": "968000",
    "end": "1081000"
  },
  {
    "text": "now before i talk about the next two projects i want to briefly describe what a service mesh is so we've got our applications they're",
    "start": "968880",
    "end": "975279"
  },
  {
    "text": "talking to each other and if we want to add features to this network communication of our",
    "start": "975279",
    "end": "980480"
  },
  {
    "text": "applications features like end-to-end encryption transparency load balancing traces",
    "start": "980480",
    "end": "986000"
  },
  {
    "text": "name any feature you want to add that's around networking in the past we've had to code that feature into every",
    "start": "986000",
    "end": "991360"
  },
  {
    "text": "application and we've had to ensure that all those applications support the same amount of features and their features work the same way and it",
    "start": "991360",
    "end": "997199"
  },
  {
    "text": "can get very onerous and sometimes not just not be possible to change the code of a specific application",
    "start": "997199",
    "end": "1003120"
  },
  {
    "text": "a service mesh says well what if we write a proxy process and this proxy process can be thought of as living",
    "start": "1003120",
    "end": "1008240"
  },
  {
    "text": "around our application although it technically lives just between the application and the",
    "start": "1008240",
    "end": "1013279"
  },
  {
    "text": "and the network and that proxy is responsible for implementing the code to do all the things i just talked about transparency encryption that kind of",
    "start": "1013279",
    "end": "1019600"
  },
  {
    "text": "thing well once we've got all these proxies distributed and running in our ecosystem we'll want a control plane that can",
    "start": "1019600",
    "end": "1025199"
  },
  {
    "text": "manage these distributed proxies and give us a way to view what's happening with them and control them you combine a proxy and a",
    "start": "1025199",
    "end": "1031199"
  },
  {
    "text": "control plane and you get a service mesh and you get powerful features like metrics load balancing",
    "start": "1031199",
    "end": "1036558"
  },
  {
    "text": "encryption and transparency and tracing all from the proxy without ever having to change your service code",
    "start": "1036559",
    "end": "1042400"
  },
  {
    "text": "and this is very very powerful and there are two projects i want to talk about that are part of a service mesh the first one is linker d linker d is a",
    "start": "1042400",
    "end": "1049440"
  },
  {
    "text": "cns cncf project that is a complete service mesh offering so we've got our applications talking to each",
    "start": "1049440",
    "end": "1055120"
  },
  {
    "text": "other linker d comes with the linker d2 proxy which is a proxy process written from the ground up",
    "start": "1055120",
    "end": "1060480"
  },
  {
    "text": "for linker d to do this service mesh to implement these service mesh ideas it also comes with the linker d2 control",
    "start": "1060480",
    "end": "1066640"
  },
  {
    "text": "plane that allows you to manage all the proxies so it really is a full complete end-to-end service mesh solution it's",
    "start": "1066640",
    "end": "1073440"
  },
  {
    "text": "also very easy to get up and going and to use linker d so if you're looking to implement a service mesh and you want to get up and",
    "start": "1073440",
    "end": "1078880"
  },
  {
    "text": "going and want a complete solution you can check out link or d another alternative for a service mesh is envoy",
    "start": "1078880",
    "end": "1084559"
  },
  {
    "start": "1081000",
    "end": "1124000"
  },
  {
    "text": "now envoy is a bit different in that envoy just focuses on being the proxy process for the service mesh",
    "start": "1084559",
    "end": "1090240"
  },
  {
    "text": "if you're asking where is the control plane envoy doesn't provide when it doesn't prescribe one it leaves that open to the implementer",
    "start": "1090240",
    "end": "1097440"
  },
  {
    "text": "and this seems like a downside that blank spot may seem initially compared to linker d like it's a problem but it's actually a",
    "start": "1097440",
    "end": "1102880"
  },
  {
    "text": "great power the fact that the envoy proxy folks project focuses entirely on being a service mesh proxy",
    "start": "1102880",
    "end": "1109120"
  },
  {
    "text": "or just a service proxy means that it can really focus on that and provide the best possible proxy that you could need",
    "start": "1109120",
    "end": "1114640"
  },
  {
    "text": "and actually envoy is the backing proxy between a lot of other cloud native projects so",
    "start": "1114640",
    "end": "1120799"
  },
  {
    "text": "if you're curious about just running a service proxy check out envoy next is open tracing like you might",
    "start": "1120799",
    "end": "1127200"
  },
  {
    "start": "1124000",
    "end": "1176000"
  },
  {
    "text": "guess it's all about dealing with traces so we know that we can use something like a service mesh to get automatic tracing between app",
    "start": "1127200",
    "end": "1132400"
  },
  {
    "text": "our user requests and the applications it bounces around but if we want to know what that user request does in each application it",
    "start": "1132400",
    "end": "1139520"
  },
  {
    "text": "visits as it kind of goes from method to method and spends a different amount of time in each application doing different things",
    "start": "1139520",
    "end": "1144640"
  },
  {
    "text": "we need to instrument our application we need to write code to create these tracing these traces",
    "start": "1144640",
    "end": "1150880"
  },
  {
    "text": "and that's what open tracing exists to do it like you might have guessed from the name open tracing is provider agnostic so the great thing about it is",
    "start": "1150880",
    "end": "1156880"
  },
  {
    "text": "you can instrument your applications you can write code in your applications to generate trace data and open tracing works with a multitude",
    "start": "1156880",
    "end": "1163520"
  },
  {
    "text": "of providers meaning that it doesn't care who you use you instrument once and never have to do it again one place you might export this trace",
    "start": "1163520",
    "end": "1170160"
  },
  {
    "text": "data from open tracing or elsewhere is to jager jaeger is a trace aggregation and trace management platform",
    "start": "1170160",
    "end": "1176559"
  },
  {
    "text": "so we've got our trace data that we've got from our service mesh or some from something like open tracing we need to",
    "start": "1176559",
    "end": "1182080"
  },
  {
    "text": "take that data and send it somewhere so that we can aggregate it all and view it and manage it and that's",
    "start": "1182080",
    "end": "1187440"
  },
  {
    "text": "what jaeger does jaeger provides a ui where you can dig into your traces and see exactly how they break down it you can search through your traces",
    "start": "1187440",
    "end": "1193760"
  },
  {
    "text": "and it has other api extensions that lets you really be the core of tracing in your cloud native system",
    "start": "1193760",
    "end": "1200080"
  },
  {
    "text": "so that's jaeger if you're curious about somewhere to send your traces and view your traces in the cloud check out yeager",
    "start": "1200080",
    "end": "1206559"
  },
  {
    "start": "1205000",
    "end": "1290000"
  },
  {
    "text": "next is prometheus prometheus is all about dealing with metrics in the cloud now we know that we run applications all",
    "start": "1206559",
    "end": "1212000"
  },
  {
    "text": "over the place especially in the cloud and those applications are generating data right they want to generate data",
    "start": "1212000",
    "end": "1217200"
  },
  {
    "text": "around how many requests they're making how many requests are succeeding and failing that kind of stuff what we used to do",
    "start": "1217200",
    "end": "1222480"
  },
  {
    "text": "when we wanted application metrics was instrument our applications put code in there to have the applications take",
    "start": "1222480",
    "end": "1227679"
  },
  {
    "text": "those metrics and export them to a specific provider and if we ever wanted to switch metrics providers we couldn't do it because",
    "start": "1227679",
    "end": "1232960"
  },
  {
    "text": "applications would have to be retooled prometheus turns out on its head primitive says well part of the",
    "start": "1232960",
    "end": "1238799"
  },
  {
    "text": "prometheus spec is saying here's a standard way that you're all going to serve up metrics you're going to expose a web",
    "start": "1238799",
    "end": "1244799"
  },
  {
    "text": "page and give me your metrics and prometheus is going to go to each application individually and pull that metric data down",
    "start": "1244799",
    "end": "1250480"
  },
  {
    "text": "and aggregate it and it knows where your applications live because remember we're in the cloud things are coming and going",
    "start": "1250480",
    "end": "1255840"
  },
  {
    "text": "all the time it knows where your applications are and how to find them by having cloud integrations or kubernetes integrations so that azure",
    "start": "1255840",
    "end": "1262080"
  },
  {
    "text": "applications come up and down and move prometheus always knows where to go to get that metric data and it kind of",
    "start": "1262080",
    "end": "1267280"
  },
  {
    "text": "flips the whole idea of metrics on its head once prometheus has gone and scraped that metric data and pulled it in it",
    "start": "1267280",
    "end": "1273280"
  },
  {
    "text": "pulls it into its own internal time series database and can give you features like charting and alerts and metric searching and",
    "start": "1273280",
    "end": "1280320"
  },
  {
    "text": "other api integrations that really sort of like jager was with traces it lets prometheus be the core of metrics in the",
    "start": "1280320",
    "end": "1285840"
  },
  {
    "text": "cloud so if you're interested in an open source metric system check out prometheus",
    "start": "1285840",
    "end": "1291520"
  },
  {
    "text": "now thanos exists alongside and with prometheus to solve some specific problems",
    "start": "1291520",
    "end": "1297280"
  },
  {
    "text": "it is very easy to get up and going with a single prometheus instance in the cloud no big deal you can get up and going very quickly but",
    "start": "1297280",
    "end": "1303760"
  },
  {
    "text": "if you're going to run multiple prometheus instances and if they're going to be distributed across geographic regions or you want fault",
    "start": "1303760",
    "end": "1309840"
  },
  {
    "text": "tolerance the prometheus project isn't really focused on solving that right now but the thanos project is you can think",
    "start": "1309840",
    "end": "1315760"
  },
  {
    "text": "of thanos as a rapper around one or more prometheus instances that allows you to aggregate data and go",
    "start": "1315760",
    "end": "1321280"
  },
  {
    "text": "to thanos and run a metrics query and have it go to all your prometheus instances and run that query for you",
    "start": "1321280",
    "end": "1326480"
  },
  {
    "text": "thanos also has the ability to take that data and export it into multiple cloud storage mechanisms so",
    "start": "1326480",
    "end": "1332240"
  },
  {
    "text": "that you can have long-term prometheus storage because prometheus doesn't tend to want to keep data for very long so if you're curious about",
    "start": "1332240",
    "end": "1339440"
  },
  {
    "start": "1338000",
    "end": "1381000"
  },
  {
    "text": "distributed prometheus long-term metrics from prometheus check out thanos in that same vein there's the",
    "start": "1339440",
    "end": "1344720"
  },
  {
    "text": "cortex project now the cortex project also exists to solve the multiple prometheus problem but it works a bit differently it's",
    "start": "1344720",
    "end": "1350960"
  },
  {
    "text": "designed to always pull all of the data rather than wrapping it just ingests all the data from all your prometheus",
    "start": "1350960",
    "end": "1356080"
  },
  {
    "text": "instances and stores it in its own internal architecture that way when you query your metrics you don't even have",
    "start": "1356080",
    "end": "1362240"
  },
  {
    "text": "to go to your prometheus instances they just act as a data source and really cortex is at the heart of your metrics at that point",
    "start": "1362240",
    "end": "1368240"
  },
  {
    "text": "so if you're interested in long-term aggregated prometheus metrics you can check out cortex now i know those two projects thanos and cortex seem very",
    "start": "1368240",
    "end": "1374559"
  },
  {
    "text": "similar and that's because they are you'll have to do your own research to find out which of these two projects might be the",
    "start": "1374559",
    "end": "1379840"
  },
  {
    "text": "right one for you next is fluent d now fluentd is all about dealing with streaming text",
    "start": "1379840",
    "end": "1385760"
  },
  {
    "start": "1381000",
    "end": "1455000"
  },
  {
    "text": "processing and very often log processing in the cloud and elsewhere so atascore fluentd can be set",
    "start": "1385760",
    "end": "1391039"
  },
  {
    "text": "up to take in multiple streams of text read those streams as they come in process them internally and spit them",
    "start": "1391039",
    "end": "1397360"
  },
  {
    "text": "out into other places to clouds to files to other integrations it really kind of",
    "start": "1397360",
    "end": "1402640"
  },
  {
    "text": "exists as this integration and glue layer between your data sources and where you might want to put that data",
    "start": "1402640",
    "end": "1408720"
  },
  {
    "text": "all of this makes fluentd a really great place to handle logs from kubernetes so we've got",
    "start": "1408720",
    "end": "1414080"
  },
  {
    "text": "kubernetes we've got our workloads running and those workloads are all generating log data which is text data and they're",
    "start": "1414080",
    "end": "1419120"
  },
  {
    "text": "generating that all the time and coming and going and very often fluentd is the engine behind most of the",
    "start": "1419120",
    "end": "1426000"
  },
  {
    "text": "prometheus or sorry most of the kubernetes installations that you run where it's reading those logs as they're",
    "start": "1426000",
    "end": "1431200"
  },
  {
    "text": "generated reformatting them and sending them to some cloud integration so that even though you've got containers",
    "start": "1431200",
    "end": "1437200"
  },
  {
    "text": "running across many many backend machines you can view all their logs in one place thanks to the aggregation",
    "start": "1437200",
    "end": "1444000"
  },
  {
    "text": "and export and manipulation provided by something like fluentd so whether you're using fluentd",
    "start": "1444000",
    "end": "1449120"
  },
  {
    "text": "and don't know it because it's in kubernetes or you're interested in doing log processing directly with fluentd you should check it out",
    "start": "1449120",
    "end": "1456159"
  },
  {
    "start": "1455000",
    "end": "1524000"
  },
  {
    "text": "next is by tess vitesse is all about dealing with relational databases in the cloud so it's easy easy easy to run a",
    "start": "1456159",
    "end": "1462720"
  },
  {
    "text": "relational database in the cloud or in kubernetes but the problem with these databases is they tend to have to scale vertically",
    "start": "1462720",
    "end": "1468159"
  },
  {
    "text": "and that is really vulnerable and brittle in the cloud because we don't want things to scale vertically we want to scale horizontally we want to be",
    "start": "1468159",
    "end": "1473600"
  },
  {
    "text": "fault tolerant and distributed so we want to split that big horizontal or vertically scale database into",
    "start": "1473600",
    "end": "1479039"
  },
  {
    "text": "multiple smaller databases and vitesse exists to help us do that by test is a layer that runs on top of",
    "start": "1479039",
    "end": "1485039"
  },
  {
    "text": "the mysql or mariadb engine that you already know and trust but allows for powerful",
    "start": "1485039",
    "end": "1490320"
  },
  {
    "text": "features like replication and sharding and you can actually increase replicas and reshard and do all sorts of database manipulation using",
    "start": "1490320",
    "end": "1497039"
  },
  {
    "text": "vitesse well while just using the standard mysql engine by tess also has a proxy process that",
    "start": "1497039",
    "end": "1503200"
  },
  {
    "text": "you can run that allows you to take in sql or grpc traffic and distribute it to these kind of more",
    "start": "1503200",
    "end": "1508640"
  },
  {
    "text": "dynamic sharded replicated changing database instances all this allows vitas to be a really",
    "start": "1508640",
    "end": "1514720"
  },
  {
    "text": "great solution for running relational databases and kubernetes allows you to scale and distribute and be fault tolerant",
    "start": "1514720",
    "end": "1520000"
  },
  {
    "text": "all while still using the kind of database interface that you know and trust so that's why i test next is titanium or",
    "start": "1520000",
    "end": "1527360"
  },
  {
    "start": "1524000",
    "end": "1579000"
  },
  {
    "text": "thai kv tai kv is a key value store so it's all about dealing with key values so it does the things you might expect from a key",
    "start": "1527360",
    "end": "1533279"
  },
  {
    "text": "value store it does adds it does updates it does deletes but the cool thing about thai kv is that",
    "start": "1533279",
    "end": "1538320"
  },
  {
    "text": "it scales horizontally likewise it skates horizontally very very well in fact according to my test page they say that it scales up to",
    "start": "1538320",
    "end": "1544960"
  },
  {
    "text": "petabytes worth of key value data that's a huge scale another really great thing about tai kv",
    "start": "1544960",
    "end": "1550480"
  },
  {
    "text": "is that it supports distributed acid compliant transactions so you into a thai kb installation you can say",
    "start": "1550480",
    "end": "1555760"
  },
  {
    "text": "i want you to update this key delete these three keys change those two keys and i want you to do all of those operations",
    "start": "1555760",
    "end": "1561440"
  },
  {
    "text": "at once or not at all that ensures that if you're doing multiple key operations in your key value store",
    "start": "1561440",
    "end": "1567600"
  },
  {
    "text": "you don't have to get stuck in a halfway state where one transact one operation worked and the other failed and you don't know how to recover so if",
    "start": "1567600",
    "end": "1573919"
  },
  {
    "text": "you're interested in a really high scale key value store or transactional key value store check out taikv",
    "start": "1573919",
    "end": "1579760"
  },
  {
    "start": "1579000",
    "end": "1633000"
  },
  {
    "text": "ncd is also a key value store that's cloud native so it does all the same things that i've just described add",
    "start": "1579760",
    "end": "1584880"
  },
  {
    "text": "updates deletes but ncd rather than focusing on sheer scale has focused on simplicity",
    "start": "1584880",
    "end": "1590320"
  },
  {
    "text": "so it's very very easy to get up and going with an lcd installation or an etcd cluster it's often just a few commands or a single",
    "start": "1590320",
    "end": "1597200"
  },
  {
    "text": "file away from having a fully functional lcd cluster so it has all the things you might",
    "start": "1597200",
    "end": "1602799"
  },
  {
    "text": "expect leader election fault tolerance distributed load but it's much much simpler to run than",
    "start": "1602799",
    "end": "1609200"
  },
  {
    "text": "some of the other offerings in fact the kind of combination of features and simplicity have made etcd the go-to back-end for the kubernetes",
    "start": "1609200",
    "end": "1615840"
  },
  {
    "text": "api for a long time for a while it was the only back end there are a few others now but odds are",
    "start": "1615840",
    "end": "1621120"
  },
  {
    "text": "really good that if you're using kubernetes you're probably using etcd behind the scenes to store all the data",
    "start": "1621120",
    "end": "1626240"
  },
  {
    "text": "you're sending into the kubernetes api but you can absolutely use scd directly",
    "start": "1626240",
    "end": "1631440"
  },
  {
    "text": "for yourself as a key value store next is dragonfly dragonfly is all about peer-to-peer file transmission",
    "start": "1631440",
    "end": "1637919"
  },
  {
    "start": "1633000",
    "end": "1678000"
  },
  {
    "text": "so we've got multiple peers they can send files to each other dragonfly is agnostic about the file content",
    "start": "1637919",
    "end": "1642960"
  },
  {
    "text": "but it does have some first class integrations for images so dragonfly has native integrations to deal with image transmission",
    "start": "1642960",
    "end": "1649279"
  },
  {
    "text": "peer-to-peer and that's not very interesting but what's cool about dragonfly is it's distributed peer-to-peer transmission so you set up dragonfly",
    "start": "1649279",
    "end": "1656640"
  },
  {
    "text": "nodes throughout your system and when anybody wants to download a specific image rather than having to go out to a single",
    "start": "1656640",
    "end": "1662559"
  },
  {
    "text": "place to download the whole image they can download parts of that image or parts of any file from the peers that have chunks of that",
    "start": "1662559",
    "end": "1668799"
  },
  {
    "text": "file rather than always having to go out so if you're curious about a better way to do peer-to-peer file transmission",
    "start": "1668799",
    "end": "1674080"
  },
  {
    "text": "or a better way to do image transmission check out dragonfly next is cloud events",
    "start": "1674080",
    "end": "1679919"
  },
  {
    "start": "1678000",
    "end": "1717000"
  },
  {
    "text": "cloud events like you might guess is all about dealing with event infrastructure in the cloud so we've got our applications and they",
    "start": "1679919",
    "end": "1685919"
  },
  {
    "text": "have the ability of course to we've say we decide that we want to do event-based infrastructure one thing we",
    "start": "1685919",
    "end": "1690960"
  },
  {
    "text": "might not agree on is the exact format of our events we may want to use different structure different terms and",
    "start": "1690960",
    "end": "1696080"
  },
  {
    "text": "it makes it really hard to say well we all want to do events but we can agree on what the event should look like cloud events exist to be a series of",
    "start": "1696080",
    "end": "1703200"
  },
  {
    "text": "standards and sdks for us to work with event-based infrastructure and all agree that we're going to use cloud events",
    "start": "1703200",
    "end": "1708640"
  },
  {
    "text": "so that we can very easily and efficiently interop with each other because we all use the same back end event structure",
    "start": "1708640",
    "end": "1714320"
  },
  {
    "text": "so if you're curious about event based infrastructure check out cloud events in that same vein let's talk about gnats",
    "start": "1714320",
    "end": "1720000"
  },
  {
    "start": "1717000",
    "end": "1764000"
  },
  {
    "text": "nats is at its heart really a message bus so you have producers and consumers where you can put messages into nets",
    "start": "1720000",
    "end": "1725679"
  },
  {
    "text": "and get them from other processes and nets of course can run distributed and deal with lots and lots of producers",
    "start": "1725679",
    "end": "1730799"
  },
  {
    "text": "and consumers it supports a lot of different event bus systems so you can do things like",
    "start": "1730799",
    "end": "1736720"
  },
  {
    "text": "pub sub where you publish a message and multiple subscribers get that message you can do request reply where you send",
    "start": "1736720",
    "end": "1743200"
  },
  {
    "text": "specifically to someone and get a specific answer back or you can do topic based or streaming event processing all using gnats",
    "start": "1743200",
    "end": "1750320"
  },
  {
    "text": "that's also scales dynamically and very efficiently so not only is it fast and flexible and really efficient",
    "start": "1750320",
    "end": "1756080"
  },
  {
    "text": "but it scales really well which makes it a great solution for doing event-based infrastructure in kubernetes",
    "start": "1756080",
    "end": "1761120"
  },
  {
    "text": "so that's nats if you're curious about building an event-based system check it out next is spiffy or the secure production",
    "start": "1761120",
    "end": "1767679"
  },
  {
    "start": "1764000",
    "end": "1818000"
  },
  {
    "text": "identity framework for everyone and it's all about like you might guess identity spiffy is a set of standards",
    "start": "1767679",
    "end": "1773200"
  },
  {
    "text": "and tools for dealing with identity in the cloud now when i say identity i don't just mean users i mean identity at the node level",
    "start": "1773200",
    "end": "1779360"
  },
  {
    "text": "identity at the workload level or identity at processes inside the workload spiffy's really about saying well let's take identity and go as deep",
    "start": "1779360",
    "end": "1786080"
  },
  {
    "text": "as we need to and be more dynamic and more fluid and more granular if we need to to help us deal with identity in the cloud",
    "start": "1786080",
    "end": "1793679"
  },
  {
    "text": "spiffy is another case where you probably won't use it directly you probably use the spire project which takes all the implementations and",
    "start": "1793679",
    "end": "1799440"
  },
  {
    "text": "standards of spiffy and builds some tools the spire server and the spire agent where you can implement some of the",
    "start": "1799440",
    "end": "1805520"
  },
  {
    "text": "spiffy concepts and get this kind of identity stuff that i've been talking about without having to write your own code so",
    "start": "1805520",
    "end": "1810960"
  },
  {
    "text": "if you're interested in identity and you want to write your own code check out spiffy or if you want to just leverage the specific concepts",
    "start": "1810960",
    "end": "1816960"
  },
  {
    "text": "check out spire next is open policy agent it's all about dealing with policy enforcement",
    "start": "1816960",
    "end": "1822640"
  },
  {
    "start": "1818000",
    "end": "1862000"
  },
  {
    "text": "so we feed open policy agent policy documents saying here's what we do and do not want to allow into a given system",
    "start": "1822640",
    "end": "1828480"
  },
  {
    "text": "and then as we feed objects into that system opa either accepts them or rejects them based on the policy it's",
    "start": "1828480",
    "end": "1833600"
  },
  {
    "text": "been given i'm being intentionally vague because open opa doesn't prescribe a specific thing that it's an",
    "start": "1833600",
    "end": "1839600"
  },
  {
    "text": "enforcer of opa has been used to enforce policy for a ton of things one thing opa fits really well onto",
    "start": "1839600",
    "end": "1845679"
  },
  {
    "text": "though is kubernetes opa can run on top of and in front of your kubernetes api so that you can kind of control what",
    "start": "1845679",
    "end": "1852399"
  },
  {
    "text": "you allow into your kubernetes cluster and what you don't based on the policy that you give opa so if you're interested in policy",
    "start": "1852399",
    "end": "1858799"
  },
  {
    "text": "definition or policy enforcement check out opa last but not least is falco",
    "start": "1858799",
    "end": "1864399"
  },
  {
    "start": "1862000",
    "end": "1901000"
  },
  {
    "text": "falco is all about container runtime security so we've got our images and we can use things like notary to validate that",
    "start": "1864399",
    "end": "1871039"
  },
  {
    "text": "we're running images we trust but we might still want to watch these images or these containers or these processes",
    "start": "1871039",
    "end": "1876640"
  },
  {
    "text": "the entire time they're running so falco does that falco is this to run in our infrastructure and watch our processes",
    "start": "1876640",
    "end": "1881919"
  },
  {
    "text": "all the time and it has a set of internal rules that says what it expects them to do and what expects them not to do and if any of our",
    "start": "1881919",
    "end": "1888880"
  },
  {
    "text": "processes does something we don't expect like accessing a database we didn't expect it to reach falco can see that",
    "start": "1888880",
    "end": "1894480"
  },
  {
    "text": "and send an alert when it happens so you get always on active security for your workloads so if you're curious",
    "start": "1894480",
    "end": "1900080"
  },
  {
    "text": "about that check out falco so that's it i have covered all of the projects in this amount of time",
    "start": "1900080",
    "end": "1906240"
  },
  {
    "start": "1901000",
    "end": "1945000"
  },
  {
    "text": "hopefully you kind of kind of wet your appetite for a lot of these giving you a basic idea of what each of these projects does",
    "start": "1906240",
    "end": "1911840"
  },
  {
    "text": "and how they fit together so you can kind of go forth and learn more about them as you see fit one last thanks to 50.io for these great",
    "start": "1911840",
    "end": "1918640"
  },
  {
    "text": "characters i absolutely love them i use inkscape to create my presentations sozy to animate the",
    "start": "1918640",
    "end": "1924880"
  },
  {
    "text": "presentations and open clipart to get art when i can't draw things myself and that's it again my name is carson",
    "start": "1924880",
    "end": "1931360"
  },
  {
    "text": "anderson i work for weave not that weave you can find out what we do at gitweave.com you can follow me",
    "start": "1931360",
    "end": "1936799"
  },
  {
    "text": "at twitter at carson underscore ops and on github carsonoid thank you so much for all your",
    "start": "1936799",
    "end": "1942159"
  },
  {
    "text": "time and i hope to see you again soon",
    "start": "1942159",
    "end": "1947760"
  }
]