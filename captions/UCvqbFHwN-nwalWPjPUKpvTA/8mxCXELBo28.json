[
  {
    "text": "hello my name is David Mitten I'm the",
    "start": "1160",
    "end": "3600"
  },
  {
    "text": "founder of artjet and today I'm going to",
    "start": "3600",
    "end": "6279"
  },
  {
    "text": "be talking you through Lessons Learned",
    "start": "6279",
    "end": "8679"
  },
  {
    "text": "running web assembly in a production",
    "start": "8679",
    "end": "11240"
  },
  {
    "text": "with go and",
    "start": "11240",
    "end": "13120"
  },
  {
    "text": "wero so to give you a bit of context",
    "start": "13120",
    "end": "16080"
  },
  {
    "text": "artjet is a security SDK that developers",
    "start": "16080",
    "end": "19240"
  },
  {
    "text": "integrate into their applications to",
    "start": "19240",
    "end": "21880"
  },
  {
    "text": "build B protection raid limiting email",
    "start": "21880",
    "end": "25000"
  },
  {
    "text": "validation data redaction and other",
    "start": "25000",
    "end": "27480"
  },
  {
    "text": "security type functionality",
    "start": "27480",
    "end": "30160"
  },
  {
    "text": "the core part of the product is embedded",
    "start": "30160",
    "end": "32320"
  },
  {
    "text": "into your application and analyzes every",
    "start": "32320",
    "end": "34840"
  },
  {
    "text": "single request that comes through that",
    "start": "34840",
    "end": "37480"
  },
  {
    "text": "application sometimes it's in the",
    "start": "37480",
    "end": "39040"
  },
  {
    "text": "middleware sometimes it's in API routes",
    "start": "39040",
    "end": "41960"
  },
  {
    "text": "but it's integrated across the entire",
    "start": "41960",
    "end": "44079"
  },
  {
    "text": "application and it's supported on",
    "start": "44079",
    "end": "47039"
  },
  {
    "text": "various crossplatform environments so",
    "start": "47039",
    "end": "49520"
  },
  {
    "text": "njs burn and doo as in our initial",
    "start": "49520",
    "end": "52920"
  },
  {
    "text": "JavaScript library but we're also",
    "start": "52920",
    "end": "55160"
  },
  {
    "text": "building out sdks for Python and Ruby",
    "start": "55160",
    "end": "60039"
  },
  {
    "text": "now we write everything in Rust and then",
    "start": "60039",
    "end": "63719"
  },
  {
    "text": "compile it to web assembly which has",
    "start": "63719",
    "end": "65640"
  },
  {
    "text": "been a great technology to work with it",
    "start": "65640",
    "end": "68479"
  },
  {
    "text": "gives us a secure sandbox which is",
    "start": "68479",
    "end": "72119"
  },
  {
    "text": "perfect for a security use case and that",
    "start": "72119",
    "end": "74920"
  },
  {
    "text": "allows us to achieve near native speed",
    "start": "74920",
    "end": "77920"
  },
  {
    "text": "when we're analyzing arbitrary HTTP",
    "start": "77920",
    "end": "81400"
  },
  {
    "text": "requests which can be potentially",
    "start": "81400",
    "end": "84200"
  },
  {
    "text": "dangerous and a great Advantage with web",
    "start": "84200",
    "end": "86799"
  },
  {
    "text": "assembly is it's consistent across",
    "start": "86799",
    "end": "89200"
  },
  {
    "text": "platforms so we can run it in JavaScript",
    "start": "89200",
    "end": "92040"
  },
  {
    "text": "environments we're building out for",
    "start": "92040",
    "end": "93720"
  },
  {
    "text": "python environments and as I'm going to",
    "start": "93720",
    "end": "95680"
  },
  {
    "text": "talk about in this talk we're also",
    "start": "95680",
    "end": "98200"
  },
  {
    "text": "running it in go server",
    "start": "98200",
    "end": "101600"
  },
  {
    "text": "side now we've picked go for our",
    "start": "101600",
    "end": "104719"
  },
  {
    "text": "decision API which connects to the SDK",
    "start": "104719",
    "end": "107680"
  },
  {
    "text": "to provide it with additional",
    "start": "107680",
    "end": "109960"
  },
  {
    "text": "analysis for a number of reasons the",
    "start": "109960",
    "end": "112840"
  },
  {
    "text": "first of these is it's just the best",
    "start": "112840",
    "end": "115640"
  },
  {
    "text": "language and Tool chain to build web",
    "start": "115640",
    "end": "117640"
  },
  {
    "text": "apis particularly when it comes to grpc",
    "start": "117640",
    "end": "121880"
  },
  {
    "text": "which is the underlying framework we're",
    "start": "121880",
    "end": "123840"
  },
  {
    "text": "using because we have some very strict",
    "start": "123840",
    "end": "126960"
  },
  {
    "text": "performance requirements and want to",
    "start": "126960",
    "end": "129160"
  },
  {
    "text": "achieve as low latency as",
    "start": "129160",
    "end": "131520"
  },
  {
    "text": "possible now our goal is to analyze the",
    "start": "131520",
    "end": "134319"
  },
  {
    "text": "request within the developers production",
    "start": "134319",
    "end": "136560"
  },
  {
    "text": "environment and to take a decision there",
    "start": "136560",
    "end": "139000"
  },
  {
    "text": "where possible but in many cases we need",
    "start": "139000",
    "end": "141200"
  },
  {
    "text": "to supplement that decision with further",
    "start": "141200",
    "end": "143519"
  },
  {
    "text": "analysis on the server so that's why",
    "start": "143519",
    "end": "145840"
  },
  {
    "text": "it's connecting to our API and because",
    "start": "145840",
    "end": "148840"
  },
  {
    "text": "it's in the hot path needs to be as fast",
    "start": "148840",
    "end": "151480"
  },
  {
    "text": "as possible and then just a simple",
    "start": "151480",
    "end": "153840"
  },
  {
    "text": "reason that my background is Ino and I",
    "start": "153840",
    "end": "156560"
  },
  {
    "text": "have the most production knowledge of",
    "start": "156560",
    "end": "158239"
  },
  {
    "text": "running go",
    "start": "158239",
    "end": "161040"
  },
  {
    "text": "apis but we write our core analysis",
    "start": "161040",
    "end": "164959"
  },
  {
    "text": "functionality in Rust because when we",
    "start": "164959",
    "end": "167680"
  },
  {
    "text": "compile it to web assembly we don't want",
    "start": "167680",
    "end": "169800"
  },
  {
    "text": "to be bundling in goes garbage",
    "start": "169800",
    "end": "172159"
  },
  {
    "text": "collection for instance Russ doesn't",
    "start": "172159",
    "end": "174440"
  },
  {
    "text": "have that and so we're able to maximize",
    "start": "174440",
    "end": "176560"
  },
  {
    "text": "the performance and Russ just has a a",
    "start": "176560",
    "end": "179959"
  },
  {
    "text": "more mature what I call a leading tool",
    "start": "179959",
    "end": "182800"
  },
  {
    "text": "chain for web assembly there are other",
    "start": "182800",
    "end": "185799"
  },
  {
    "text": "languages that allow you to compile to",
    "start": "185799",
    "end": "187480"
  },
  {
    "text": "web assembly but rust has been doing it",
    "start": "187480",
    "end": "190080"
  },
  {
    "text": "the longest and has the most mature tool",
    "start": "190080",
    "end": "194120"
  },
  {
    "text": "chain so in this talk I'm going to talk",
    "start": "194239",
    "end": "197000"
  },
  {
    "text": "through a few of the lessons that we've",
    "start": "197000",
    "end": "199000"
  },
  {
    "text": "learned from running production web",
    "start": "199000",
    "end": "201360"
  },
  {
    "text": "assembly Ino over the last few months",
    "start": "201360",
    "end": "205879"
  },
  {
    "text": "now in particular we started with some",
    "start": "205879",
    "end": "208400"
  },
  {
    "text": "challenges around embed web assembly",
    "start": "208400",
    "end": "210640"
  },
  {
    "text": "modules into go we're going to talk",
    "start": "210640",
    "end": "212439"
  },
  {
    "text": "around how we've optimized the startup",
    "start": "212439",
    "end": "214400"
  },
  {
    "text": "times which are important in different",
    "start": "214400",
    "end": "216680"
  },
  {
    "text": "contexts depending on what you require",
    "start": "216680",
    "end": "219040"
  },
  {
    "text": "from a long running server versus a",
    "start": "219040",
    "end": "221239"
  },
  {
    "text": "serverless environment for instance",
    "start": "221239",
    "end": "223720"
  },
  {
    "text": "we've also done some work optimizing",
    "start": "223720",
    "end": "226120"
  },
  {
    "text": "performance by doing preinitialization",
    "start": "226120",
    "end": "228519"
  },
  {
    "text": "with Weiser and also with wmot and then",
    "start": "228519",
    "end": "232560"
  },
  {
    "text": "at the end I'm going to talk a little",
    "start": "232560",
    "end": "233560"
  },
  {
    "text": "bit about the challenges around",
    "start": "233560",
    "end": "235560"
  },
  {
    "text": "observability and the limitations of",
    "start": "235560",
    "end": "238079"
  },
  {
    "text": "profiling with web ass",
    "start": "238079",
    "end": "240360"
  },
  {
    "text": "at the",
    "start": "240360",
    "end": "242599"
  },
  {
    "text": "moment now in our build process we",
    "start": "242760",
    "end": "245560"
  },
  {
    "text": "transform our web assembly definitions",
    "start": "245560",
    "end": "248879"
  },
  {
    "text": "into native go binding so that we can",
    "start": "248879",
    "end": "252000"
  },
  {
    "text": "call them as functions from within go",
    "start": "252000",
    "end": "255680"
  },
  {
    "text": "now our initial approach here was to",
    "start": "255680",
    "end": "257880"
  },
  {
    "text": "embed the web assembly binaries directly",
    "start": "257880",
    "end": "261079"
  },
  {
    "text": "into the go files just as large hex",
    "start": "261079",
    "end": "264080"
  },
  {
    "text": "encoded bite",
    "start": "264080",
    "end": "265600"
  },
  {
    "text": "arrays the principle behind this was",
    "start": "265600",
    "end": "268360"
  },
  {
    "text": "that we wanted to keep those binary",
    "start": "268360",
    "end": "270320"
  },
  {
    "text": "self-contained within the bindings",
    "start": "270320",
    "end": "272880"
  },
  {
    "text": "because that would just simplify",
    "start": "272880",
    "end": "274759"
  },
  {
    "text": "management of the code and generally",
    "start": "274759",
    "end": "277440"
  },
  {
    "text": "follows the convention that you",
    "start": "277440",
    "end": "279680"
  },
  {
    "text": "shouldn't really commit binary files to",
    "start": "279680",
    "end": "281560"
  },
  {
    "text": "Source control but this caused us a",
    "start": "281560",
    "end": "284039"
  },
  {
    "text": "couple of problems first of these was",
    "start": "284039",
    "end": "287080"
  },
  {
    "text": "just with our code editor with vs code",
    "start": "287080",
    "end": "290039"
  },
  {
    "text": "the go extension struggled with these",
    "start": "290039",
    "end": "292680"
  },
  {
    "text": "larger files and we saw whilst we were",
    "start": "292680",
    "end": "295639"
  },
  {
    "text": "building whil we were writing the code",
    "start": "295639",
    "end": "297440"
  },
  {
    "text": "it would often slow down or crash and",
    "start": "297440",
    "end": "300600"
  },
  {
    "text": "that hindered our development",
    "start": "300600",
    "end": "302479"
  },
  {
    "text": "workflow and then we also had some",
    "start": "302479",
    "end": "304639"
  },
  {
    "text": "verion control challenges you may have",
    "start": "304639",
    "end": "308039"
  },
  {
    "text": "um seen the diff view when you're",
    "start": "308039",
    "end": "311280"
  },
  {
    "text": "creating um GitHub P requests uh if you",
    "start": "311280",
    "end": "315360"
  },
  {
    "text": "have lots of changes to a file have",
    "start": "315360",
    "end": "318360"
  },
  {
    "text": "large files then go just won't load",
    "start": "318360",
    "end": "320560"
  },
  {
    "text": "those diffs and in some cases you can",
    "start": "320560",
    "end": "323120"
  },
  {
    "text": "click to load them once you get over a",
    "start": "323120",
    "end": "325160"
  },
  {
    "text": "certain size it just refuses to render",
    "start": "325160",
    "end": "328000"
  },
  {
    "text": "them",
    "start": "328000",
    "end": "329880"
  },
  {
    "text": "and so to address these problems we",
    "start": "329880",
    "end": "332160"
  },
  {
    "text": "switch to using go embed which is built",
    "start": "332160",
    "end": "335400"
  },
  {
    "text": "into go and allows you to embed web",
    "start": "335400",
    "end": "338639"
  },
  {
    "text": "assembly binary files much more",
    "start": "338639",
    "end": "341639"
  },
  {
    "text": "efficiently and so this solved the",
    "start": "341639",
    "end": "343800"
  },
  {
    "text": "challenge that we had with editor",
    "start": "343800",
    "end": "345880"
  },
  {
    "text": "performance and made code reviews a lot",
    "start": "345880",
    "end": "348280"
  },
  {
    "text": "more",
    "start": "348280",
    "end": "350400"
  },
  {
    "text": "manageable this also was despite the",
    "start": "350400",
    "end": "354240"
  },
  {
    "text": "conventional wisdom and allowed us to",
    "start": "354240",
    "end": "356960"
  },
  {
    "text": "improve our overall development",
    "start": "356960",
    "end": "359000"
  },
  {
    "text": "experience",
    "start": "359000",
    "end": "361639"
  },
  {
    "text": "well startup times can be a problem",
    "start": "362560",
    "end": "364960"
  },
  {
    "text": "depending on your context so in our case",
    "start": "364960",
    "end": "368160"
  },
  {
    "text": "we are loading the web assembly on our",
    "start": "368160",
    "end": "370440"
  },
  {
    "text": "server and the server is only starting",
    "start": "370440",
    "end": "372759"
  },
  {
    "text": "up once every so often when we start up",
    "start": "372759",
    "end": "375479"
  },
  {
    "text": "a new container it takes a few seconds",
    "start": "375479",
    "end": "377680"
  },
  {
    "text": "to load up the web assembly that's less",
    "start": "377680",
    "end": "380680"
  },
  {
    "text": "of a problem for us because we're not",
    "start": "380680",
    "end": "383240"
  },
  {
    "text": "accepting traffic whilst the server is",
    "start": "383240",
    "end": "384919"
  },
  {
    "text": "starting up and so by making that",
    "start": "384919",
    "end": "387199"
  },
  {
    "text": "tradeoff we can use the compiled module",
    "start": "387199",
    "end": "390360"
  },
  {
    "text": "type in with zero which compiles the web",
    "start": "390360",
    "end": "393720"
  },
  {
    "text": "assembly into machine code ahead of time",
    "start": "393720",
    "end": "397080"
  },
  {
    "text": "and that gives you native performance at",
    "start": "397080",
    "end": "399880"
  },
  {
    "text": "runtime and according to their",
    "start": "399880",
    "end": "402120"
  },
  {
    "text": "documentation that is significantly",
    "start": "402120",
    "end": "404520"
  },
  {
    "text": "faster than using interpreted code Often",
    "start": "404520",
    "end": "407039"
  },
  {
    "text": "by an order of magnitude or",
    "start": "407039",
    "end": "409520"
  },
  {
    "text": "more this is a really important",
    "start": "409520",
    "end": "411560"
  },
  {
    "text": "trade-off for us because API performance",
    "start": "411560",
    "end": "414120"
  },
  {
    "text": "is a key metric our current p50 response",
    "start": "414120",
    "end": "417840"
  },
  {
    "text": "time is 10 milliseconds we aim for a P99",
    "start": "417840",
    "end": "421080"
  },
  {
    "text": "of 30",
    "start": "421080",
    "end": "422319"
  },
  {
    "text": "milliseconds this is because we sit in",
    "start": "422319",
    "end": "424240"
  },
  {
    "text": "the hot path and we need to return a",
    "start": "424240",
    "end": "426319"
  },
  {
    "text": "security decision back to the SDK as",
    "start": "426319",
    "end": "429039"
  },
  {
    "text": "quickly as possible and so we can use",
    "start": "429039",
    "end": "431960"
  },
  {
    "text": "this precompilation as an optimization",
    "start": "431960",
    "end": "435440"
  },
  {
    "text": "because we don't want to have to be",
    "start": "435440",
    "end": "437199"
  },
  {
    "text": "recompiling the web assembly on every",
    "start": "437199",
    "end": "439080"
  },
  {
    "text": "single request and so when our go server",
    "start": "439080",
    "end": "442520"
  },
  {
    "text": "starts we execute this compile step for",
    "start": "442520",
    "end": "445440"
  },
  {
    "text": "each of the web sem components which",
    "start": "445440",
    "end": "447520"
  },
  {
    "text": "takes a couple of seconds quite slow but",
    "start": "447520",
    "end": "450520"
  },
  {
    "text": "it's the tradeoff for that additional",
    "start": "450520",
    "end": "452759"
  },
  {
    "text": "runtime",
    "start": "452759",
    "end": "454479"
  },
  {
    "text": "performance and we also made this",
    "start": "454479",
    "end": "456280"
  },
  {
    "text": "optimization as part of our test Suite",
    "start": "456280",
    "end": "459039"
  },
  {
    "text": "so rather than considering each test",
    "start": "459039",
    "end": "462199"
  },
  {
    "text": "completely isolated as you might",
    "start": "462199",
    "end": "463800"
  },
  {
    "text": "normally do we recompile the web",
    "start": "463800",
    "end": "466840"
  },
  {
    "text": "assembly module at the start of the test",
    "start": "466840",
    "end": "468800"
  },
  {
    "text": "Runner so that that is available to all",
    "start": "468800",
    "end": "471240"
  },
  {
    "text": "of the relevant tests so need to make",
    "start": "471240",
    "end": "474039"
  },
  {
    "text": "sure that you don't have any",
    "start": "474039",
    "end": "475479"
  },
  {
    "text": "interference between the tests but that",
    "start": "475479",
    "end": "478319"
  },
  {
    "text": "means that you don't have the tests each",
    "start": "478319",
    "end": "480960"
  },
  {
    "text": "taking a very long time because they're",
    "start": "480960",
    "end": "482800"
  },
  {
    "text": "each doing this compilation",
    "start": "482800",
    "end": "486560"
  },
  {
    "text": "step now we also implemented some",
    "start": "487400",
    "end": "490879"
  },
  {
    "text": "preinitialization using wiser which is a",
    "start": "490879",
    "end": "494800"
  },
  {
    "text": "tool that's provided as part of the open",
    "start": "494800",
    "end": "496879"
  },
  {
    "text": "source Community from the bik code",
    "start": "496879",
    "end": "499680"
  },
  {
    "text": "Alliance now we integrated this into our",
    "start": "499680",
    "end": "502879"
  },
  {
    "text": "build process because it allows us to",
    "start": "502879",
    "end": "507000"
  },
  {
    "text": "reinitialize and precompile the website",
    "start": "507000",
    "end": "509680"
  },
  {
    "text": "modules ahead of time so there's three",
    "start": "509680",
    "end": "512800"
  },
  {
    "text": "steps here there's the preinitialization",
    "start": "512800",
    "end": "515360"
  },
  {
    "text": "this instantiates the web assem module",
    "start": "515360",
    "end": "518440"
  },
  {
    "text": "and executes all of the initialization",
    "start": "518440",
    "end": "520680"
  },
  {
    "text": "functions it's basically part of the",
    "start": "520680",
    "end": "522399"
  },
  {
    "text": "startup",
    "start": "522399",
    "end": "524039"
  },
  {
    "text": "process then it snapshots that",
    "start": "524040",
    "end": "526760"
  },
  {
    "text": "initialized state and it dumps it into a",
    "start": "526760",
    "end": "529480"
  },
  {
    "text": "new web assembly",
    "start": "529480",
    "end": "530920"
  },
  {
    "text": "module and then the final step is to",
    "start": "530920",
    "end": "533640"
  },
  {
    "text": "precompile that new module during the",
    "start": "533640",
    "end": "536080"
  },
  {
    "text": "build",
    "start": "536080",
    "end": "537079"
  },
  {
    "text": "process uh by doing that it allows us to",
    "start": "537079",
    "end": "540800"
  },
  {
    "text": "eliminate the need to compile web",
    "start": "540800",
    "end": "543440"
  },
  {
    "text": "assembly modules at run time it's",
    "start": "543440",
    "end": "546160"
  },
  {
    "text": "something that we do ahead of time so",
    "start": "546160",
    "end": "549040"
  },
  {
    "text": "that we don't have to do it when we're",
    "start": "549040",
    "end": "550800"
  },
  {
    "text": "starting up the server and kind of",
    "start": "550800",
    "end": "552560"
  },
  {
    "text": "allows us to ship this initial State",
    "start": "552560",
    "end": "555200"
  },
  {
    "text": "ready to",
    "start": "555200",
    "end": "557880"
  },
  {
    "text": "go now we also use a tool chain called",
    "start": "558839",
    "end": "562600"
  },
  {
    "text": "wasm opt and we run this over the",
    "start": "562600",
    "end": "564839"
  },
  {
    "text": "generated web assembly bindings to apply",
    "start": "564839",
    "end": "568000"
  },
  {
    "text": "additional optimizations as part of our",
    "start": "568000",
    "end": "569839"
  },
  {
    "text": "build",
    "start": "569839",
    "end": "570880"
  },
  {
    "text": "process there's a guide on the wasm opt",
    "start": "570880",
    "end": "574279"
  },
  {
    "text": "GitHub Wiki that explains the different",
    "start": "574279",
    "end": "577240"
  },
  {
    "text": "optimizations and our team went through",
    "start": "577240",
    "end": "579959"
  },
  {
    "text": "various iterations trying out the",
    "start": "579959",
    "end": "581560"
  },
  {
    "text": "different options to see how they would",
    "start": "581560",
    "end": "584640"
  },
  {
    "text": "affect binary size or performance and",
    "start": "584640",
    "end": "588160"
  },
  {
    "text": "this is the trade-off you need to make",
    "start": "588160",
    "end": "589720"
  },
  {
    "text": "between the two so for our sdks that",
    "start": "589720",
    "end": "593200"
  },
  {
    "text": "developers are installing into their",
    "start": "593200",
    "end": "595240"
  },
  {
    "text": "applications we want to minimize the",
    "start": "595240",
    "end": "597920"
  },
  {
    "text": "binary size we don't want to ship huge",
    "start": "597920",
    "end": "600560"
  },
  {
    "text": "sdks and the startup time just having to",
    "start": "600560",
    "end": "603600"
  },
  {
    "text": "load them from disk it's important to",
    "start": "603600",
    "end": "606079"
  },
  {
    "text": "minimize that because some of our",
    "start": "606079",
    "end": "608399"
  },
  {
    "text": "customers run in Severus environments",
    "start": "608399",
    "end": "610800"
  },
  {
    "text": "where there's a cold start every cold",
    "start": "610800",
    "end": "613279"
  },
  {
    "text": "start would have to load the binary from",
    "start": "613279",
    "end": "616079"
  },
  {
    "text": "disk and the larger the binary file the",
    "start": "616079",
    "end": "618519"
  },
  {
    "text": "slower that process is this is less of a",
    "start": "618519",
    "end": "622000"
  },
  {
    "text": "problem for classic node.js Express",
    "start": "622000",
    "end": "625200"
  },
  {
    "text": "servers for instance where we can",
    "start": "625200",
    "end": "627800"
  },
  {
    "text": "balance that binary size versus",
    "start": "627800",
    "end": "630320"
  },
  {
    "text": "performance but we still don't want to",
    "start": "630320",
    "end": "633200"
  },
  {
    "text": "have a huge startup time and so we're",
    "start": "633200",
    "end": "635079"
  },
  {
    "text": "trying to balance those two and then for",
    "start": "635079",
    "end": "638200"
  },
  {
    "text": "our own servers where we're less",
    "start": "638200",
    "end": "640200"
  },
  {
    "text": "concerned about startup time because we",
    "start": "640200",
    "end": "642560"
  },
  {
    "text": "can optimize for performance instead and",
    "start": "642560",
    "end": "646200"
  },
  {
    "text": "just wait for the server to start up",
    "start": "646200",
    "end": "648480"
  },
  {
    "text": "before we send traffic there now there",
    "start": "648480",
    "end": "651200"
  },
  {
    "text": "are quite a few options to choose from",
    "start": "651200",
    "end": "653519"
  },
  {
    "text": "but we've settled on a few different",
    "start": "653519",
    "end": "655079"
  },
  {
    "text": "flags that we set as part of our process",
    "start": "655079",
    "end": "657959"
  },
  {
    "text": "where we are running optimizations",
    "start": "657959",
    "end": "660399"
  },
  {
    "text": "repeatedly until uh the program is no",
    "start": "660399",
    "end": "663399"
  },
  {
    "text": "longer changing which is what the",
    "start": "663399",
    "end": "664600"
  },
  {
    "text": "converge flag is for then flatten and re",
    "start": "664600",
    "end": "667680"
  },
  {
    "text": "reloop flattens the internal",
    "start": "667680",
    "end": "669639"
  },
  {
    "text": "representation and rewrites the control",
    "start": "669639",
    "end": "672160"
  },
  {
    "text": "flow graph then the Oz up option applies",
    "start": "672160",
    "end": "677680"
  },
  {
    "text": "optimizations um for size rather than",
    "start": "677680",
    "end": "680480"
  },
  {
    "text": "speed so this is where you can start to",
    "start": "680480",
    "end": "683800"
  },
  {
    "text": "pick what things you want to trade off",
    "start": "683800",
    "end": "686360"
  },
  {
    "text": "depending on what runtime assumptions",
    "start": "686360",
    "end": "688200"
  },
  {
    "text": "you have",
    "start": "688200",
    "end": "689760"
  },
  {
    "text": "and then gufa runs optimization against",
    "start": "689760",
    "end": "692399"
  },
  {
    "text": "garbage",
    "start": "692399",
    "end": "693519"
  },
  {
    "text": "collection and then finally We Run Oz",
    "start": "693519",
    "end": "697160"
  },
  {
    "text": "again to clean up the changes that have",
    "start": "697160",
    "end": "699560"
  },
  {
    "text": "been made as part of the internal",
    "start": "699560",
    "end": "702519"
  },
  {
    "text": "representation now the main downside",
    "start": "702519",
    "end": "704680"
  },
  {
    "text": "here is that this produces longer build",
    "start": "704680",
    "end": "707440"
  },
  {
    "text": "times and so we have to trade that off",
    "start": "707440",
    "end": "711040"
  },
  {
    "text": "against for how many times are we",
    "start": "711040",
    "end": "712399"
  },
  {
    "text": "building our web assembly this doesn't",
    "start": "712399",
    "end": "715000"
  },
  {
    "text": "happen that often um part of our deploy",
    "start": "715000",
    "end": "717200"
  },
  {
    "text": "process or when we're releasing the new",
    "start": "717200",
    "end": "719519"
  },
  {
    "text": "version of the SDK so it's a cost that",
    "start": "719519",
    "end": "721880"
  },
  {
    "text": "we're willing to pay to get much better",
    "start": "721880",
    "end": "725399"
  },
  {
    "text": "runtime",
    "start": "725399",
    "end": "728000"
  },
  {
    "text": "performance and so our final the final",
    "start": "731040",
    "end": "733560"
  },
  {
    "text": "build steps that we have are that we",
    "start": "733560",
    "end": "735040"
  },
  {
    "text": "have cargo build and we use the WM 32",
    "start": "735040",
    "end": "738320"
  },
  {
    "text": "unknown Target then we run wiser and",
    "start": "738320",
    "end": "741199"
  },
  {
    "text": "then we run WM art and that gives us the",
    "start": "741199",
    "end": "743760"
  },
  {
    "text": "end binary that we distribute to our",
    "start": "743760",
    "end": "745639"
  },
  {
    "text": "server and also as part of the SDK",
    "start": "745639",
    "end": "749480"
  },
  {
    "text": "the final lesson from running web",
    "start": "749480",
    "end": "751600"
  },
  {
    "text": "assembly in production is just the",
    "start": "751600",
    "end": "753440"
  },
  {
    "text": "challenges around",
    "start": "753440",
    "end": "755279"
  },
  {
    "text": "profiling none of the normal performance",
    "start": "755279",
    "end": "758000"
  },
  {
    "text": "tracing tools we use can inspect web",
    "start": "758000",
    "end": "761959"
  },
  {
    "text": "assembly as it's running we use open",
    "start": "761959",
    "end": "764399"
  },
  {
    "text": "Telemetry and so all we can see is the",
    "start": "764399",
    "end": "767240"
  },
  {
    "text": "top level go function",
    "start": "767240",
    "end": "769000"
  },
  {
    "text": "core you can see in this screenshot that",
    "start": "769000",
    "end": "772160"
  },
  {
    "text": "we have several different calls into web",
    "start": "772160",
    "end": "774279"
  },
  {
    "text": "assembly modules we have a fingerprint",
    "start": "774279",
    "end": "776360"
  },
  {
    "text": "generate function which is web assembly",
    "start": "776360",
    "end": "779440"
  },
  {
    "text": "we have bot V2 rule. rule which is",
    "start": "779440",
    "end": "783279"
  },
  {
    "text": "analyzing the rule configuration and",
    "start": "783279",
    "end": "785800"
  },
  {
    "text": "then we have bot V2 uncore rule.",
    "start": "785800",
    "end": "788959"
  },
  {
    "text": "protect these are the calls into web",
    "start": "788959",
    "end": "791199"
  },
  {
    "text": "assembly and all we can see is the name",
    "start": "791199",
    "end": "793279"
  },
  {
    "text": "of the function from go in our",
    "start": "793279",
    "end": "796240"
  },
  {
    "text": "bindings now a workr here is to scatter",
    "start": "796240",
    "end": "799639"
  },
  {
    "text": "open Telemetry spans throughout your",
    "start": "799639",
    "end": "802519"
  },
  {
    "text": "bindings but you still can't see exactly",
    "start": "802519",
    "end": "805199"
  },
  {
    "text": "what's going on inside the web assembly",
    "start": "805199",
    "end": "807560"
  },
  {
    "text": "itself or you can see is the entry and",
    "start": "807560",
    "end": "810839"
  },
  {
    "text": "exit from the web assembly",
    "start": "810839",
    "end": "812720"
  },
  {
    "text": "functions there's a new tool called wz",
    "start": "812720",
    "end": "815519"
  },
  {
    "text": "Prof which looks pretty Pro pretty",
    "start": "815519",
    "end": "818959"
  },
  {
    "text": "promising and that seems to be built on",
    "start": "818959",
    "end": "821000"
  },
  {
    "text": "top of",
    "start": "821000",
    "end": "821920"
  },
  {
    "text": "where we haven't tried it out yet",
    "start": "821920",
    "end": "824360"
  },
  {
    "text": "because the performance that we get as",
    "start": "824360",
    "end": "825880"
  },
  {
    "text": "you can see from this Trace is well",
    "start": "825880",
    "end": "828160"
  },
  {
    "text": "within our latency goals so we just not",
    "start": "828160",
    "end": "831560"
  },
  {
    "text": "needed to explore it yet but I'm looking",
    "start": "831560",
    "end": "833839"
  },
  {
    "text": "forward to seeing more observability",
    "start": "833839",
    "end": "835720"
  },
  {
    "text": "tools for web assembly in the future",
    "start": "835720",
    "end": "840600"
  },
  {
    "text": "so in conclusion by rethinking how we",
    "start": "841040",
    "end": "845120"
  },
  {
    "text": "have embedded web assembly modules we've",
    "start": "845120",
    "end": "847440"
  },
  {
    "text": "improved our development workflow and",
    "start": "847440",
    "end": "849720"
  },
  {
    "text": "the code",
    "start": "849720",
    "end": "850959"
  },
  {
    "text": "maintainability we've optimized startup",
    "start": "850959",
    "end": "853199"
  },
  {
    "text": "times through pre-compilation with wiser",
    "start": "853199",
    "end": "855720"
  },
  {
    "text": "and have applied certain performance",
    "start": "855720",
    "end": "857560"
  },
  {
    "text": "enhancements with WM opt which have",
    "start": "857560",
    "end": "859959"
  },
  {
    "text": "allowed us to hit our latency",
    "start": "859959",
    "end": "863639"
  },
  {
    "text": "goals these tools have allowed us to",
    "start": "863639",
    "end": "866279"
  },
  {
    "text": "build out production quality services",
    "start": "866279",
    "end": "868800"
  },
  {
    "text": "using web assembly and it's great that",
    "start": "868800",
    "end": "870959"
  },
  {
    "text": "the community is producing these we have",
    "start": "870959",
    "end": "873279"
  },
  {
    "text": "some of our own contributions planned in",
    "start": "873279",
    "end": "875240"
  },
  {
    "text": "the near future so we can start giving",
    "start": "875240",
    "end": "876959"
  },
  {
    "text": "back as well and it's great that we've",
    "start": "876959",
    "end": "879800"
  },
  {
    "text": "been able to use web assembly which when",
    "start": "879800",
    "end": "881759"
  },
  {
    "text": "building a new startup like artjet um",
    "start": "881759",
    "end": "884440"
  },
  {
    "text": "was a a bet on a new technology what we",
    "start": "884440",
    "end": "887720"
  },
  {
    "text": "where we chose to spend our Innovation",
    "start": "887720",
    "end": "889680"
  },
  {
    "text": "tokens and so it's been great to be able",
    "start": "889680",
    "end": "892120"
  },
  {
    "text": "to see that pay off we write regularly",
    "start": "892120",
    "end": "895320"
  },
  {
    "text": "about our use of web assembly on the",
    "start": "895320",
    "end": "897000"
  },
  {
    "text": "artjet blog and if you have any",
    "start": "897000",
    "end": "898680"
  },
  {
    "text": "questions then feel free to send me an",
    "start": "898680",
    "end": "901040"
  },
  {
    "text": "email thanks for watching",
    "start": "901040",
    "end": "905320"
  }
]