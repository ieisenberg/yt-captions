[
  {
    "text": "um my name is Guillermo and I work at a company called slide town we are the",
    "start": "0",
    "end": "6029"
  },
  {
    "text": "stewards of project bolts Tiffin's fire that have been recently accepted as have",
    "start": "6029",
    "end": "11790"
  },
  {
    "text": "my ups and my projects into the yesterday so today I'm going to walk you",
    "start": "11790",
    "end": "18750"
  },
  {
    "text": "through spiffy we'll talk about the spire plugin how that works how to use",
    "start": "18750",
    "end": "25859"
  },
  {
    "text": "that then I'll show you no data station or an attestation how a spire implements that at that point on",
    "start": "25859",
    "end": "34110"
  },
  {
    "text": "the handed over to a shop that yeah",
    "start": "34110",
    "end": "39899"
  },
  {
    "text": "we're working with basically create no testers for Kerberos and then we'll just",
    "start": "39899",
    "end": "47930"
  },
  {
    "text": "questioners how about if you're asking did anyone see and injustice spiffy at yesterday",
    "start": "47930",
    "end": "56690"
  },
  {
    "text": "okay so I'll just go over when spiffiest",
    "start": "56690",
    "end": "63059"
  },
  {
    "text": "so you've made up of three things to spiffier keep an identity document and",
    "start": "63059",
    "end": "69450"
  },
  {
    "text": "they work load api so it's 50 ad is a",
    "start": "69450",
    "end": "77520"
  },
  {
    "text": "your ice cream we 50 does not dictate",
    "start": "77520",
    "end": "83009"
  },
  {
    "text": "what that may our ice cream should look like but the domain is what we call",
    "start": "83009",
    "end": "88020"
  },
  {
    "text": "trust Amane of a deployment anything that comes down to the slash would be",
    "start": "88020",
    "end": "93329"
  },
  {
    "text": "the identity of the workload SP is a",
    "start": "93329",
    "end": "101579"
  },
  {
    "text": "x.509 certificate as big was the first identity document that the community",
    "start": "101579",
    "end": "107130"
  },
  {
    "text": "came up with what it really does is it describes what goes into x.509",
    "start": "107130",
    "end": "112829"
  },
  {
    "text": "certificate what extensions were using or that and we didn't want to create our",
    "start": "112829",
    "end": "118560"
  },
  {
    "text": "own inspections or any aside that want exceptions because we wanted to make s vids as simple as possible so work with",
    "start": "118560",
    "end": "126450"
  },
  {
    "text": "most pay less tax and right now during",
    "start": "126450",
    "end": "132989"
  },
  {
    "text": "one of our in six pack which is our Sikh",
    "start": "132989",
    "end": "140489"
  },
  {
    "text": "guru the works on the busy specification we are working on job estimates so",
    "start": "140489",
    "end": "147390"
  },
  {
    "text": "that's the next identity document okay together that you would use for HP base",
    "start": "147390",
    "end": "153120"
  },
  {
    "text": "for vaults then the workload API so the",
    "start": "153120",
    "end": "159000"
  },
  {
    "text": "workload API and the attendant documents you know we're working with that and",
    "start": "159000",
    "end": "164760"
  },
  {
    "text": "it's expect and that's being led by every ailment it's like them so if you're interested",
    "start": "164760",
    "end": "170310"
  },
  {
    "text": "in participating or seeing what's going out there we have weekly sick meetings",
    "start": "170310",
    "end": "175410"
  },
  {
    "text": "and you could join and so the workload",
    "start": "175410",
    "end": "183359"
  },
  {
    "text": "API we recently just came out with our 1.0 of that and we implemented a C++",
    "start": "183359",
    "end": "190859"
  },
  {
    "text": "library for them created a demo using nginx nginx modules so we just published",
    "start": "190859",
    "end": "199290"
  },
  {
    "text": "a blog post on that and I'll show you the link of that but if you look in our",
    "start": "199290",
    "end": "204919"
  },
  {
    "text": "side tail block dot sight L dot IO you'll find that our blog post now let",
    "start": "204919",
    "end": "213359"
  },
  {
    "text": "me just show you what that API looks like",
    "start": "213359",
    "end": "217430"
  },
  {
    "text": "so this is bass in our get repo this is the the API that we worked with with the",
    "start": "221390",
    "end": "226520"
  },
  {
    "text": "community it's a G RPC push API and what we have",
    "start": "226520",
    "end": "232610"
  },
  {
    "text": "there is [Music] so we have the S feeds that are",
    "start": "232610",
    "end": "239420"
  },
  {
    "text": "delivered to a calling workload also the interest federated bundles which",
    "start": "239420",
    "end": "245270"
  },
  {
    "text": "basically means that the workload API will deliver a bag of search everything that you need to talk to other workloads",
    "start": "245270",
    "end": "251330"
  },
  {
    "text": "and we are also have a space there for a revocation list that we have in our",
    "start": "251330",
    "end": "259400"
  },
  {
    "text": "roadmap to implement later on this year so that not only would you deliver search but you would also deliver",
    "start": "259400",
    "end": "265720"
  },
  {
    "text": "replications through the API just give",
    "start": "265720",
    "end": "272510"
  },
  {
    "text": "me one second all righty",
    "start": "272510",
    "end": "278630"
  },
  {
    "text": "and again we're working right now on the jot s fit which would be the next identity document and that would have a",
    "start": "278630",
    "end": "285020"
  },
  {
    "text": "job as FID and aspect of what goes into the jot plus the API associated with",
    "start": "285020",
    "end": "291200"
  },
  {
    "text": "that now spire so what spire is is our",
    "start": "291200",
    "end": "296540"
  },
  {
    "text": "implementation of the spiffy runtime environment so it's just it's something",
    "start": "296540",
    "end": "302240"
  },
  {
    "text": "that you could use that implements spiffy and spire is made up of two parts",
    "start": "302240",
    "end": "309229"
  },
  {
    "text": "spire server and a spire agent the spire server does a density mapping NOAA data",
    "start": "309229",
    "end": "316520"
  },
  {
    "text": "station as issuance and the spire eight or that was a spire server the spire",
    "start": "316520",
    "end": "322520"
  },
  {
    "text": "agent does a workload attestation and the workload API and the thing to see is",
    "start": "322520",
    "end": "328700"
  },
  {
    "text": "that we have api's and plugins the api's will call on the plugins and each",
    "start": "328700",
    "end": "334130"
  },
  {
    "text": "plug-in has a protobuf definition that also you could find in the github repo",
    "start": "334130",
    "end": "339789"
  },
  {
    "text": "when we first put out spire plugins were",
    "start": "339789",
    "end": "345400"
  },
  {
    "text": "external processes recently we've changed that so you could have an external process that you call a v8g RPC",
    "start": "345400",
    "end": "351740"
  },
  {
    "text": "or you could compile that plug-in into either the spire server or",
    "start": "351740",
    "end": "357789"
  },
  {
    "text": "the spire agent so I'm going to just",
    "start": "357789",
    "end": "362860"
  },
  {
    "text": "walk over I'm going to just go over some of the plugins on each side so the first",
    "start": "362860",
    "end": "368949"
  },
  {
    "text": "one is the Noda tester so the Noda tester is responsible for testing the",
    "start": "368949",
    "end": "374229"
  },
  {
    "text": "identity proof of a node and they work in conjunction with the Noda tests are",
    "start": "374229",
    "end": "379990"
  },
  {
    "text": "on the spire agents so they come in pairs and they're really dependent on the environment that you're running in",
    "start": "379990",
    "end": "385990"
  },
  {
    "text": "so we have one we have an AWS a tester and we also have a token a tester and",
    "start": "385990",
    "end": "393520"
  },
  {
    "text": "what Neil's going to show is his Kerberos a tester that he wrote then the",
    "start": "393520",
    "end": "400750"
  },
  {
    "text": "node resolver that will basically discover additional metadata about the",
    "start": "400750",
    "end": "406840"
  },
  {
    "text": "attested node so for instance for AWS we will verify sir will attest the signed",
    "start": "406840",
    "end": "414880"
  },
  {
    "text": "metadata for that instance and the node resolver would basically look and",
    "start": "414880",
    "end": "420190"
  },
  {
    "text": "determine you know what label security group or AG that that process is running",
    "start": "420190",
    "end": "427990"
  },
  {
    "text": "under the CA is responsible for processing CSR request by the spire",
    "start": "427990",
    "end": "436270"
  },
  {
    "text": "agent it's also responsible for generating CSRs for intermediates signing certs and storing the related",
    "start": "436270",
    "end": "443440"
  },
  {
    "text": "keys and the the upstream CA allows us to integrate with an existing PKI system",
    "start": "443440",
    "end": "451360"
  },
  {
    "text": "so you could either run this as have the spire server have a self-signed cert or",
    "start": "451360",
    "end": "458259"
  },
  {
    "text": "you could hook it up and have it be downstream from your your own PKI if you",
    "start": "458259",
    "end": "464080"
  },
  {
    "text": "already have one existing and then the data store is responsible for providing",
    "start": "464080",
    "end": "470620"
  },
  {
    "text": "a registry to store all the workload identities and attestation policies these are basically the rule sets that",
    "start": "470620",
    "end": "475750"
  },
  {
    "text": "you use to assign identities for the the workloads and currently it's implemented",
    "start": "475750",
    "end": "484000"
  },
  {
    "text": "using sequel Lite and in the roadmap we're have an H a implementation of that one",
    "start": "484000",
    "end": "490910"
  },
  {
    "text": "second",
    "start": "490910",
    "end": "493300"
  },
  {
    "text": "all right so on the other side of the the agent is made up of three plugins so",
    "start": "501820",
    "end": "508400"
  },
  {
    "text": "the first plug-in is the key manager and that's responsible for generating the",
    "start": "508400",
    "end": "514130"
  },
  {
    "text": "CSR requests and storing and creating the the public/private key pair for that",
    "start": "514130",
    "end": "520700"
  },
  {
    "text": "node the Noda tester is the pair of the Noda tester on the on the spire server",
    "start": "520700",
    "end": "528620"
  },
  {
    "text": "and that's responsible for performing platform specific proof of identity of",
    "start": "528620",
    "end": "533870"
  },
  {
    "text": "that node and then the last piece is the workload of tester so the workload of",
    "start": "533870",
    "end": "541160"
  },
  {
    "text": "tester is responsible for testing the workload when called it performed you could have multiple selectors workload",
    "start": "541160",
    "end": "549260"
  },
  {
    "text": "to testers associated with that workload the API will verify and check the",
    "start": "549260",
    "end": "556820"
  },
  {
    "text": "attestation policy and use one of the workload of testers that are associated with that policy once the policy is",
    "start": "556820",
    "end": "563840"
  },
  {
    "text": "satisfied the API will deliver the s vid and bundle of federated starts to the",
    "start": "563840",
    "end": "571070"
  },
  {
    "text": "calling process so now I'm just walk",
    "start": "571070",
    "end": "577130"
  },
  {
    "text": "through this show what that looks like so this is basically what the final system looks like after everything has",
    "start": "577130",
    "end": "583820"
  },
  {
    "text": "been delivered so we'll see how we get there so when you start up there's",
    "start": "583820",
    "end": "589880"
  },
  {
    "text": "nothing there and the spire server has to create and generate its signing keys",
    "start": "589880",
    "end": "596990"
  },
  {
    "text": "for that server it calls the CA the upstream CA if that's been configured at",
    "start": "596990",
    "end": "604130"
  },
  {
    "text": "that point we deliver the intermediate cert that has been signed correctly that",
    "start": "604130",
    "end": "609890"
  },
  {
    "text": "cert has a TTL and is rotated also now",
    "start": "609890",
    "end": "615640"
  },
  {
    "text": "we're gonna start registering things so we call the registration API this is",
    "start": "615640",
    "end": "620660"
  },
  {
    "text": "what you use to register the attestation policy basically the mapping of what",
    "start": "620660",
    "end": "625820"
  },
  {
    "text": "selectors are using and what spiffy ID that that relates to and then",
    "start": "625820",
    "end": "635570"
  },
  {
    "text": "it's stored in the data store where it's persisted for NOAA data station the now",
    "start": "635570",
    "end": "643310"
  },
  {
    "text": "the the note comes up online and so the",
    "start": "643310",
    "end": "649580"
  },
  {
    "text": "one thing to note here is that we have preceded that node with the bundle of",
    "start": "649580",
    "end": "655130"
  },
  {
    "text": "trust from the spire server the Noda tester runs basically checks whatever metadata is on that node it'll generate",
    "start": "655130",
    "end": "663500"
  },
  {
    "text": "a CSR request the node API is called the Noda test on the server side verifies",
    "start": "663500",
    "end": "670070"
  },
  {
    "text": "that the signing data whatever data was passed over it's correct the node",
    "start": "670070",
    "end": "676190"
  },
  {
    "text": "resolver is called after that to see if there's any other data that it could figure out and then it looks it up in",
    "start": "676190",
    "end": "683600"
  },
  {
    "text": "the data store and then we sign the CSR request at that point we deliver what we",
    "start": "683600",
    "end": "691190"
  },
  {
    "text": "call the base s vid to the calling node so one thing to point out here is that",
    "start": "691190",
    "end": "697040"
  },
  {
    "text": "at this point we just have an identity for the node and the workload that runs",
    "start": "697040",
    "end": "702590"
  },
  {
    "text": "on that node will have a different identity so sorry I'm just trying to",
    "start": "702590",
    "end": "712910"
  },
  {
    "text": "make figure out my notes so at the same time what we've also done is we've",
    "start": "712910",
    "end": "718940"
  },
  {
    "text": "delivered all the attestation policy that's associated with that with that",
    "start": "718940",
    "end": "725810"
  },
  {
    "text": "node to the to the cache to local cache on that node so we're telling it these",
    "start": "725810",
    "end": "731480"
  },
  {
    "text": "are the workloads that can run on that on that node now when the when the node",
    "start": "731480",
    "end": "737150"
  },
  {
    "text": "goes to talk to the Aspire server again he's going to use that s fade and that",
    "start": "737150",
    "end": "742760"
  },
  {
    "text": "you that s fade will be used by the by the by the server to basically figure",
    "start": "742760",
    "end": "750050"
  },
  {
    "text": "out who's talking to it so we use that to to map nodes to to the corresponding",
    "start": "750050",
    "end": "756200"
  },
  {
    "text": "entries in the inspire server so now what we're gonna do is we're gonna start",
    "start": "756200",
    "end": "762260"
  },
  {
    "text": "generating generate search for the workloads that can run on that on that note so like I",
    "start": "762260",
    "end": "770570"
  },
  {
    "text": "said we've delivered everything now is cached locally on the on the agent the",
    "start": "770570",
    "end": "778340"
  },
  {
    "text": "node API is called again and the csr request was generated from the key manager it's signed and then we deliver",
    "start": "778340",
    "end": "786320"
  },
  {
    "text": "it back to the to the node and he cashes it so the whole idea is that you've",
    "start": "786320",
    "end": "792620"
  },
  {
    "text": "preached enervated all the identities that are allowed to run on that machine on that on that node they also have a",
    "start": "792620",
    "end": "799550"
  },
  {
    "text": "TTL so this is constantly being updated and running and when a workload comes up",
    "start": "799550",
    "end": "805670"
  },
  {
    "text": "it would just once it passes attestation all its identity would be delivered so",
    "start": "805670",
    "end": "813530"
  },
  {
    "text": "now we go into the workload attestation so now the workload comes up and he",
    "start": "813530",
    "end": "820130"
  },
  {
    "text": "talks to a well-known endpoint for the workload API at that point the workload",
    "start": "820130",
    "end": "828440"
  },
  {
    "text": "API will attest the calling workload it will determine if all the criteria in",
    "start": "828440",
    "end": "835940"
  },
  {
    "text": "the in the attestation policy for that workload is satisfied and if everything",
    "start": "835940",
    "end": "842870"
  },
  {
    "text": "is satisfied it will deliver the cert to that to that workload and now the the",
    "start": "842870",
    "end": "849020"
  },
  {
    "text": "workload has been assigned its identity so this is basically our guide on how to",
    "start": "849020",
    "end": "856820"
  },
  {
    "text": "create these plugins that we've kind of written so you could just go there and",
    "start": "856820",
    "end": "862910"
  },
  {
    "text": "and see how we did this and create one which is how Neil did this and I'm going to hand it off to Neil or he's gonna",
    "start": "862910",
    "end": "869630"
  },
  {
    "text": "show us what he did to do Kerberos had a station",
    "start": "869630",
    "end": "875530"
  },
  {
    "text": "okay so I'm going to talk about how we brought Kerberos to microservices with",
    "start": "881080",
    "end": "887780"
  },
  {
    "text": "spire Tom Neil and I work at VMware and I work in our cloud native apps division and we collaborated with the Saito folks",
    "start": "887780",
    "end": "894650"
  },
  {
    "text": "to add a Kerberos no tester so I'll go over Kerberos first a very high-level introduction to what the protocol is and",
    "start": "894650",
    "end": "901160"
  },
  {
    "text": "how it works and why it's relevant and then I'll get into the actual tester and show it off so Kerberos is a predominant",
    "start": "901160",
    "end": "911420"
  },
  {
    "text": "identity stack for enterprise and most cloud native workloads don't have an easy way to integrate with",
    "start": "911420",
    "end": "918680"
  },
  {
    "text": "the enterprise identity stacks and because of that Kerberos is an ideal",
    "start": "918680",
    "end": "923720"
  },
  {
    "text": "bootstrap for spire to you know attest different nodes in a cloud native environment spire has does",
    "start": "923720",
    "end": "931580"
  },
  {
    "text": "not have a mechanism to use Kerberos as of yet and with Kerberos support Spira",
    "start": "931580",
    "end": "936770"
  },
  {
    "text": "can manage identity is tied very close to existing enterprise infrastructure",
    "start": "936770",
    "end": "943000"
  },
  {
    "text": "the way Kerberos works is it's comprised of at least three different players the",
    "start": "943180",
    "end": "949070"
  },
  {
    "text": "first is a trusted third party known as a key distribution center or the KDC the KDC has two services within an",
    "start": "949070",
    "end": "956390"
  },
  {
    "text": "authentication service and a ticket granting service and I'll get into how they're used in a second",
    "start": "956390",
    "end": "961880"
  },
  {
    "text": "the next player is a server this server could be for anything really and then",
    "start": "961880",
    "end": "967460"
  },
  {
    "text": "the last player is a client and this client is an endpoint in which some user or some other service could use to talk",
    "start": "967460",
    "end": "975110"
  },
  {
    "text": "to the resources in the server Kerberos can be broken down into three main steps the first step can be called",
    "start": "975110",
    "end": "982190"
  },
  {
    "text": "the login step and during the login step the user on the client would identify itself to the KDC the authentication",
    "start": "982190",
    "end": "989540"
  },
  {
    "text": "service in particular and say hi I'm Bob do you know me can I login am I trusted",
    "start": "989540",
    "end": "995150"
  },
  {
    "text": "and once Bob is trusted then we'll go into the next step which is the long-lived service ticket step the KDC",
    "start": "995150",
    "end": "1002350"
  },
  {
    "text": "the authentication service will give Bob what's called a ticket granting ticket a TGT and with this ticket Bob can now",
    "start": "1002350",
    "end": "1009280"
  },
  {
    "text": "talk to the second component of the KDC the ticket service in and he can request service",
    "start": "1009280",
    "end": "1015730"
  },
  {
    "text": "tickets or long lived service tickets to request access to any particular service",
    "start": "1015730",
    "end": "1020860"
  },
  {
    "text": "within this realm a realm is an environment in which Kerberos operates once Bob receives the service ticket he",
    "start": "1020860",
    "end": "1029050"
  },
  {
    "text": "will then present it to the web server that is hosting the service that Bob wants to access then the web server will",
    "start": "1029050",
    "end": "1035439"
  },
  {
    "text": "look at this ticket and since the server trusts the KDC it will recognize that",
    "start": "1035440",
    "end": "1041050"
  },
  {
    "text": "this service ticket was signed by its trusted KDC and therefore it will trust the service ticket and it will trust",
    "start": "1041050",
    "end": "1046810"
  },
  {
    "text": "that Bob is a user who's allowed to access resources in this realm Trevor",
    "start": "1046810",
    "end": "1053860"
  },
  {
    "text": "Burrus is typically run within a domain a domain controller such as Active Directory can really help automate",
    "start": "1053860",
    "end": "1059460"
  },
  {
    "text": "Kerberos management whenever you join a computer to a domain a machine account",
    "start": "1059460",
    "end": "1064990"
  },
  {
    "text": "which is very similar to a user account but this account is used to identify the actual computer or the machine that is",
    "start": "1064990",
    "end": "1072160"
  },
  {
    "text": "joined to this domain and once the machine is joined to a domain you can",
    "start": "1072160",
    "end": "1077650"
  },
  {
    "text": "use a machines user account the same way as you would a user account in Active Directory the domain is the same thing",
    "start": "1077650",
    "end": "1085030"
  },
  {
    "text": "as a Kerberos realm solemn take a",
    "start": "1085030",
    "end": "1090040"
  },
  {
    "text": "tangent for a second and talk about project light wave project light wave is an open source multi-tenant cloud",
    "start": "1090040",
    "end": "1095710"
  },
  {
    "text": "directory service offering from VMware and it is comprised of you know directory service that LDAP compliant",
    "start": "1095710",
    "end": "1103020"
  },
  {
    "text": "Kerberos KDC and ultimate support a bunch of different authentication services such as o fo IDC sam'l we have",
    "start": "1103020",
    "end": "1111250"
  },
  {
    "text": "our own certificate authority and we also have our own DNS server that is tied very closely to Kerberos as well",
    "start": "1111250",
    "end": "1118090"
  },
  {
    "text": "and in Lightwave all of the different authentication services that we support come together and converge in our",
    "start": "1118090",
    "end": "1123940"
  },
  {
    "text": "directory service with Kerberos it's Apache 2.0 licensed and you can check it out from my github link up there but for",
    "start": "1123940",
    "end": "1130540"
  },
  {
    "text": "the rest of this presentation whenever I refer to domains or the KDC I'll be referring to Lightwave as that's",
    "start": "1130540",
    "end": "1136930"
  },
  {
    "text": "what we base the rest of our work on let's get straight into node add a",
    "start": "1136930",
    "end": "1143470"
  },
  {
    "text": "station with Kerberos now so Emiliano mentioned whenever a node agent",
    "start": "1143470",
    "end": "1148929"
  },
  {
    "text": "first comes up it will talk to the spire control plane and say hi I'm a node do",
    "start": "1148929",
    "end": "1155080"
  },
  {
    "text": "you know me and if this node hasn't been attested before then the server will respond back saying I don't know you",
    "start": "1155080",
    "end": "1160570"
  },
  {
    "text": "need to attach yourself and I will say I support all these attestation methods and a node can be configured to use a",
    "start": "1160570",
    "end": "1167139"
  },
  {
    "text": "particular adaptation method in this case Kerberos then once it receives that request from the control plane it will",
    "start": "1167139",
    "end": "1174549"
  },
  {
    "text": "start no attestation if you remember the first step is login which is what the",
    "start": "1174549",
    "end": "1179649"
  },
  {
    "text": "node agent will do it will talk to the Lightwave KDC and it will then get the long long-lived session ticket from that",
    "start": "1179649",
    "end": "1188080"
  },
  {
    "text": "login TGT that was returned to it then it would use that TGT to get this long",
    "start": "1188080",
    "end": "1194200"
  },
  {
    "text": "live service ticket and once it has the service ticket it can then present that",
    "start": "1194200",
    "end": "1199210"
  },
  {
    "text": "service ticket back to the spire control plane the node agent server there and then the node agent server will validate",
    "start": "1199210",
    "end": "1205330"
  },
  {
    "text": "the service ticket that's presented to it once this ticket has been validated it can do additional node lookups and",
    "start": "1205330",
    "end": "1211809"
  },
  {
    "text": "process selector lookups and with that information once it has everything it needs it will then respond to the node",
    "start": "1211809",
    "end": "1218499"
  },
  {
    "text": "agent with this 50 ID for it this is a",
    "start": "1218499",
    "end": "1224529"
  },
  {
    "text": "bird's-eye view of the demo now on the left hand side we have the spire server",
    "start": "1224529",
    "end": "1229869"
  },
  {
    "text": "and the spire server is also a domain controller and this domain controller is running the Kerberos node a tester",
    "start": "1229869",
    "end": "1236409"
  },
  {
    "text": "server as well and on the right hand side we have the spire agent the spire agent is another VM that is domain",
    "start": "1236409",
    "end": "1242889"
  },
  {
    "text": "joined to the Lightwave domain that's on that's run from the spire server and",
    "start": "1242889",
    "end": "1248529"
  },
  {
    "text": "that's where the spire agent will be running and the Noda test your agent will be running there once the spire",
    "start": "1248529",
    "end": "1253600"
  },
  {
    "text": "agent has been a tested we will then create or register a new workload that can be run on this host and this will",
    "start": "1253600",
    "end": "1260679"
  },
  {
    "text": "just be a UNIX workload and then once the workload is registered we can then simulate the workload API to show that",
    "start": "1260679",
    "end": "1266409"
  },
  {
    "text": "it is getting the correct identity after it has been attested",
    "start": "1266409",
    "end": "1271379"
  },
  {
    "text": "okay assume in a little is this good can",
    "start": "1278120",
    "end": "1283580"
  },
  {
    "text": "I already see it well cool so this this window is the spire server the control",
    "start": "1283580",
    "end": "1291830"
  },
  {
    "text": "plane and if we look at if you look at",
    "start": "1291830",
    "end": "1300980"
  },
  {
    "text": "light waves utility to retrieve you know the domain state we can see that this is indeed the controller and if I flip to",
    "start": "1300980",
    "end": "1308270"
  },
  {
    "text": "my other window here we can do the same command and we can see that this guy is",
    "start": "1308270",
    "end": "1322940"
  },
  {
    "text": "a client that is joined to the domain so if I go back to the domain controller",
    "start": "1322940",
    "end": "1329029"
  },
  {
    "text": "the spire server we can now start spire",
    "start": "1329029",
    "end": "1333700"
  },
  {
    "text": "we can see here that spire server is now running and if we take a look at the",
    "start": "1335890",
    "end": "1342140"
  },
  {
    "text": "output from the server we can see that the Kerberos node a tester has been loaded and it is running now if you go",
    "start": "1342140",
    "end": "1352490"
  },
  {
    "text": "back to the agent and we can start the spire agent here and as soon as the",
    "start": "1352490",
    "end": "1359539"
  },
  {
    "text": "spire agent runs it will start node at a station with Kerberos because our plug-in configuration has been set to",
    "start": "1359539",
    "end": "1365990"
  },
  {
    "text": "use the Kerberos a tester so if I hit run here we can see that no pre-existing",
    "start": "1365990",
    "end": "1372529"
  },
  {
    "text": "s whit was found will perform node at a station so if we go back to the spire",
    "start": "1372529",
    "end": "1378320"
  },
  {
    "text": "server we can see that we got a CSR for",
    "start": "1378320",
    "end": "1383529"
  },
  {
    "text": "the client host the agent host and we attested it through the Kerberos a",
    "start": "1383529",
    "end": "1389929"
  },
  {
    "text": "tester if we take a look in the server at our directory service logs we can see",
    "start": "1389929",
    "end": "1398450"
  },
  {
    "text": "oh sorry",
    "start": "1398450",
    "end": "1402490"
  },
  {
    "text": "we can see that the Kerberos handshake was actually performed we can see how",
    "start": "1406830",
    "end": "1412030"
  },
  {
    "text": "the first step here which is login the agent hostname P dev go to was logged in",
    "start": "1412030",
    "end": "1420730"
  },
  {
    "text": "and then that same host tried to request a long-lived service ticket for the",
    "start": "1420730",
    "end": "1427060"
  },
  {
    "text": "server which is P dev - go once this node has a tested itself we can register",
    "start": "1427060",
    "end": "1434650"
  },
  {
    "text": "a workload for that host from the server",
    "start": "1434650",
    "end": "1439830"
  },
  {
    "text": "we're saying here that on this particular host the agent that we just",
    "start": "1441030",
    "end": "1446620"
  },
  {
    "text": "attested through Kerberos we want to register this workload for a named Neil",
    "start": "1446620",
    "end": "1453700"
  },
  {
    "text": "so that's the username of the workload or the name of the workload and the selector is a UNIX UID and that's the",
    "start": "1453700",
    "end": "1460750"
  },
  {
    "text": "you idea of the user Neil on that other host so if I create this a workload has",
    "start": "1460750",
    "end": "1466660"
  },
  {
    "text": "been associated to this node and if we see here in the server we signed an S",
    "start": "1466660",
    "end": "1472630"
  },
  {
    "text": "vid for that workload on that node if",
    "start": "1472630",
    "end": "1477750"
  },
  {
    "text": "you go back to that node now we see that we actually received the s vid for that",
    "start": "1477750",
    "end": "1484360"
  },
  {
    "text": "workload that we just registered to verify that my UID is indeed one thousand and two we can see that here",
    "start": "1484360",
    "end": "1491320"
  },
  {
    "text": "and then the next thing we can do is we can simulate the workload API by calling",
    "start": "1491320",
    "end": "1497020"
  },
  {
    "text": "the spire agent API to fetch the workloads information the identity information for that workload and we can",
    "start": "1497020",
    "end": "1503620"
  },
  {
    "text": "do that as my a user Neill that we associated the ID to we can see that",
    "start": "1503620",
    "end": "1510670"
  },
  {
    "text": "once we ran that command we received a cert bundle that contains the spiffy ID",
    "start": "1510670",
    "end": "1517200"
  },
  {
    "text": "for the particular workload which is my user and we can also see from the agents",
    "start": "1517200",
    "end": "1522970"
  },
  {
    "text": "output that we attested this one process and the selectors found associated to",
    "start": "1522970",
    "end": "1528400"
  },
  {
    "text": "that process were a UNIX UID and the UID matches and to verify we can take a look",
    "start": "1528400",
    "end": "1535870"
  },
  {
    "text": "at the certificate that was given to us from running that command",
    "start": "1535870",
    "end": "1540940"
  },
  {
    "text": "and if you look at the x5 and I insert in the subject alternate name field we see that the URI matches the workload",
    "start": "1540940",
    "end": "1548380"
  },
  {
    "text": "the spiffy ID for the workload for my user Neil and that is Speier working and",
    "start": "1548380",
    "end": "1563050"
  },
  {
    "text": "if you want to check a little take a look at the Kerberos to test your code it's on github let me put this back on",
    "start": "1563050",
    "end": "1568390"
  },
  {
    "text": "presenter view and yeah you can go poke around that up there and there's a link to Lightwave and the operating system",
    "start": "1568390",
    "end": "1575140"
  },
  {
    "text": "that we ran it all on photon OS which is also another offering from VMware it's",
    "start": "1575140",
    "end": "1582010"
  },
  {
    "text": "great so did you have a link for the for",
    "start": "1582010",
    "end": "1587080"
  },
  {
    "text": "the code to for the just to see that because you basically yeah yeah so the first rows of tester so that's where all",
    "start": "1587080",
    "end": "1594430"
  },
  {
    "text": "that code is and that's using that that's getting called out of band as a VAR PC mm-hmm",
    "start": "1594430",
    "end": "1601450"
  },
  {
    "text": "so just for us then these are the places the the repos that a lot of this code",
    "start": "1601450",
    "end": "1607720"
  },
  {
    "text": "lives spiffy spiffy is the specification spire is is the spark code and spiffy",
    "start": "1607720",
    "end": "1616510"
  },
  {
    "text": "example what we do is every month or two months we put out an example showing the",
    "start": "1616510",
    "end": "1623500"
  },
  {
    "text": "current state of the of the system the last one we did was using nginx with the",
    "start": "1623500",
    "end": "1629160"
  },
  {
    "text": "with support for the workload API one that oh and again there's a blog post",
    "start": "1629160",
    "end": "1635710"
  },
  {
    "text": "associated with that I you should go check it out and you know previously we",
    "start": "1635710",
    "end": "1641980"
  },
  {
    "text": "we did this with envoy and ghost tunnel which is a proxy out of the the team at",
    "start": "1641980",
    "end": "1647980"
  },
  {
    "text": "square and then our slack Channel and that is the blog post and hope should go",
    "start": "1647980",
    "end": "1658570"
  },
  {
    "text": "back I don't know you want a picture okay",
    "start": "1658570",
    "end": "1663960"
  },
  {
    "text": "yeah yeah I just got obsessed blogsite Li Oh questions yeah",
    "start": "1663960",
    "end": "1669920"
  },
  {
    "text": "yes in the back",
    "start": "1669920",
    "end": "1674060"
  },
  {
    "text": "I'm sorry could you repeat that in I didn't hear you yes",
    "start": "1684940",
    "end": "1696730"
  },
  {
    "text": "right",
    "start": "1703000",
    "end": "1705630"
  },
  {
    "text": "so fact if I could paraphrase you're saying Kerberos is was invented many",
    "start": "1708130",
    "end": "1713950"
  },
  {
    "text": "years ago before today's current architectures and with Nats on a network",
    "start": "1713950",
    "end": "1719500"
  },
  {
    "text": "I do you want to answer that or maybe Krishna one second actually you're quite",
    "start": "1719500",
    "end": "1727780"
  },
  {
    "text": "correct it's still that you have to be on our you have to be within a routable networks so client server and KDC will",
    "start": "1727780",
    "end": "1734289"
  },
  {
    "text": "all have to be on the same network on the MIT KDC on the MIT curb stuff there's actually a feature that allows",
    "start": "1734289",
    "end": "1740049"
  },
  {
    "text": "you to ignore that notion of basis saying you have to be on the network but in general you're absolutely right we",
    "start": "1740049",
    "end": "1746140"
  },
  {
    "text": "always are on the same route herbal network any other questions yes",
    "start": "1746140",
    "end": "1759720"
  },
  {
    "text": "yes yes yes so that that's the notion of",
    "start": "1766540",
    "end": "1771710"
  },
  {
    "text": "the short the what the question was for Kerberos IO station to work you would still need to bootstrap the node to have",
    "start": "1771710",
    "end": "1778730"
  },
  {
    "text": "a Kerberos key tab or a Kerberos configuration set on it and and the answer to that is it is automated",
    "start": "1778730",
    "end": "1784460"
  },
  {
    "text": "through domain controllers in the concept of a domain so for a light wave for example and for Active Directory as",
    "start": "1784460",
    "end": "1790250"
  },
  {
    "text": "well whenever you join a host to a domain the key tab in the Kerberos configuration is automatically placed on",
    "start": "1790250",
    "end": "1795530"
  },
  {
    "text": "that node so that is automated there and that's what I meant by domain controllers and the notion of a domain really automates Kerberos deployments",
    "start": "1795530",
    "end": "1802309"
  },
  {
    "text": "and management yeah yeah",
    "start": "1802309",
    "end": "1810970"
  },
  {
    "text": "which injects into the metadata yes yeah",
    "start": "1827039",
    "end": "1845370"
  },
  {
    "text": "yes you you actually describe it exactly",
    "start": "1846240",
    "end": "1856299"
  },
  {
    "text": "the way we actually do it do as well so you we um one of the things you do in Kerberos is",
    "start": "1856299",
    "end": "1861960"
  },
  {
    "text": "you have the domain controller and macey then you have accounts that are authorized to actually perform to be",
    "start": "1861960",
    "end": "1868360"
  },
  {
    "text": "enjoying to perform a domain joint because you really don't want to use your domain administrators credential to do the domain joint so you want to have",
    "start": "1868360",
    "end": "1874299"
  },
  {
    "text": "a a delegated ordinary user who's has the only rights to actually say join machines in so that's one level of",
    "start": "1874299",
    "end": "1880390"
  },
  {
    "text": "security already get in and you actually discover it just perfectly the way we actually do it internally so what we do",
    "start": "1880390",
    "end": "1886030"
  },
  {
    "text": "in VM Vere's we basically use lightweight but lightweight also",
    "start": "1886030",
    "end": "1892600"
  },
  {
    "text": "supports OAuth as well you know he talked about he talked about convergence of Hoth and Kerberos because we treat",
    "start": "1892600",
    "end": "1898360"
  },
  {
    "text": "the we unify we converge the identity what a client registration is is a",
    "start": "1898360",
    "end": "1903669"
  },
  {
    "text": "service principle for us we do that that's one we do that and then we apps we exactly do I can't I can't even see",
    "start": "1903669",
    "end": "1910270"
  },
  {
    "text": "it as well as you just did which is we actually have this notion of a script which takes us one-time password and",
    "start": "1910270",
    "end": "1915280"
  },
  {
    "text": "then sort of Auto joins the system in and we provide the API to do this so and",
    "start": "1915280",
    "end": "1922950"
  },
  {
    "text": "this is not this is not a pitch for lightweight but you know the codes out there you guys going to have to take a look at it any other questions",
    "start": "1922950",
    "end": "1935279"
  },
  {
    "text": "okay",
    "start": "1937250",
    "end": "1940120"
  },
  {
    "text": "account to create a kita file is it true that it has to be regenerated when you",
    "start": "1945400",
    "end": "1951580"
  },
  {
    "text": "change the passwords okay so how do you manage that sorry could you good I",
    "start": "1951580",
    "end": "1960090"
  },
  {
    "text": "didn't hear the question that well yeah sorry I didn't hear the question of oh",
    "start": "1960090",
    "end": "1966840"
  },
  {
    "text": "no your Active Directory quite well but what happens is you know one of the points again I'm so sort of blown away",
    "start": "1975660",
    "end": "1982660"
  },
  {
    "text": "especially because for me I'm an old curb Louis hand and the way I look at spiffy is spiffy is sort of modernizing",
    "start": "1982660",
    "end": "1989140"
  },
  {
    "text": "sort of it's the perfect hybrid it's x-file it's like urbanizing sorry all",
    "start": "1989140",
    "end": "1995020"
  },
  {
    "text": "right Shane as well it's so I have not",
    "start": "1995020",
    "end": "2000750"
  },
  {
    "text": "so what let me ask you a question for us um what happens is on every node you",
    "start": "2000750",
    "end": "2006660"
  },
  {
    "text": "actually have a daemon running and what and so we make this available so the",
    "start": "2006660",
    "end": "2012090"
  },
  {
    "text": "source code we make the clients have a daemon running on it too and the",
    "start": "2012090",
    "end": "2017520"
  },
  {
    "text": "statement is something we call the AFD daemon and what the FT Damon does is it manages once you do the domain join it's",
    "start": "2017520",
    "end": "2024270"
  },
  {
    "text": "managing its Kerberos key table right so what it does right now is it is like a security principle and it is a client to",
    "start": "2024270",
    "end": "2031110"
  },
  {
    "text": "the directory service so what it does is it scans the directory periodically and on the top of the directory is the",
    "start": "2031110",
    "end": "2036210"
  },
  {
    "text": "domain policy object and on the domain policy object we tell you what the default policy is to sort of refresh",
    "start": "2036210",
    "end": "2042270"
  },
  {
    "text": "your machine password and so periodically we're tracking that it was saying ok 30 days up and the default",
    "start": "2042270",
    "end": "2047730"
  },
  {
    "text": "typically in Active Directory environment is 30 days we track it you could configure it there and then we'll Auto refresh in we'll do the change",
    "start": "2047730",
    "end": "2054060"
  },
  {
    "text": "password for you and we regenerate the fresh key tap file field so we take care of that",
    "start": "2054060",
    "end": "2059540"
  },
  {
    "text": "so but but what does this spiffy stuff then give that kerberos doesn't already",
    "start": "2065830",
    "end": "2073310"
  },
  {
    "text": "done too if you encode your service principal name like a path or something I that's still sort of the thing with with",
    "start": "2073310",
    "end": "2080030"
  },
  {
    "text": "all of this for never something it's something that shows up it's just like it said every implementation of Kerberos",
    "start": "2080030",
    "end": "2086619"
  },
  {
    "text": "spiffy is kind of really quite elegant the concepts are very similar I mean the",
    "start": "2091300",
    "end": "2098000"
  },
  {
    "text": "first concept that probably Kerberos put in place was the notion of a UPN or a",
    "start": "2098000",
    "end": "2103160"
  },
  {
    "text": "service principle name and basically what that means is whether you're a service whether you're a user or whether",
    "start": "2103160",
    "end": "2109400"
  },
  {
    "text": "you know whether you're an ordered human user or whether you're a service fundamentally naming is a key part of it",
    "start": "2109400",
    "end": "2115190"
  },
  {
    "text": "and what you have out there is this notion of in a cloud native world you have this notion of a name that's point",
    "start": "2115190",
    "end": "2120680"
  },
  {
    "text": "number one that's 50 gives you the second thing that spiffy does which basically is what Kerberos Kerberos was",
    "start": "2120680",
    "end": "2126020"
  },
  {
    "text": "always built around usernames and passwords right and you have to realize those days are long gone and if that's",
    "start": "2126020",
    "end": "2133220"
  },
  {
    "text": "not secure and so what's 50 does which i think is also really elegant it's moved away from a symmetric key system into",
    "start": "2133220",
    "end": "2139640"
  },
  {
    "text": "PKI right and so that's point number two I'm going to put that the problem with",
    "start": "2139640",
    "end": "2144740"
  },
  {
    "text": "PK in Pai in the old world is that PK I never had in any of the x.509 world PK I",
    "start": "2144740",
    "end": "2150500"
  },
  {
    "text": "never had a model in which you could handle the things that Kerberos could do you didn't have the equivalent of an MIT",
    "start": "2150500",
    "end": "2156380"
  },
  {
    "text": "Kerberos API or like the one that and the only other one which really did the automation of Kerberos you know it's",
    "start": "2156380",
    "end": "2163070"
  },
  {
    "text": "ironic but Kerberos came from MIT but the people who made it the most widespread entity in the world was",
    "start": "2163070",
    "end": "2168860"
  },
  {
    "text": "Microsoft a closed environment right and what did they do they provided API around service and sort of what I didn't",
    "start": "2168860",
    "end": "2177830"
  },
  {
    "text": "see does it sort of marries that world of a Kerberos system using an esse metric key a key I'm on and that is I",
    "start": "2177830",
    "end": "2185900"
  },
  {
    "text": "think it's well over and time well over to you that we actually do this so I think that is a that is the relevant",
    "start": "2185900",
    "end": "2192290"
  },
  {
    "text": "that that's a kind really cool thing that's come about on by the way it breaks this whole the IP address problem I think we're a pretty",
    "start": "2192290",
    "end": "2200520"
  },
  {
    "text": "short in time now next time we'll put Krishna is one of the present yeah thank you everyone",
    "start": "2200520",
    "end": "2206340"
  },
  {
    "text": "thank you very much thanks [Applause]",
    "start": "2206340",
    "end": "2210149"
  }
]