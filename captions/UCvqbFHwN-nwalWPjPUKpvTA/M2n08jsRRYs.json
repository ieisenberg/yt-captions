[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "all right hi everyone if you're here hopefully you're here for the 6 July deep dive I have some slides prepared on",
    "start": "30",
    "end": "8580"
  },
  {
    "text": "various topics but I'd also like to hear",
    "start": "8580",
    "end": "14099"
  },
  {
    "text": "what you guys want to learn about and be able to facilitate a discussion as well while we're here",
    "start": "14099",
    "end": "19770"
  },
  {
    "text": "so who is here because they want to learn how to contribute to coop control",
    "start": "19770",
    "end": "26210"
  },
  {
    "text": "ok sizeable number of us right who is here and would like to learn more about",
    "start": "26210",
    "end": "33230"
  },
  {
    "text": "the design concepts behind coop control",
    "start": "33230",
    "end": "38660"
  },
  {
    "text": "ok great well that's what we're gonna talk about if you have any questions",
    "start": "39320",
    "end": "49890"
  },
  {
    "text": "just raise your hand and remind me to bring the mic to you or I'll repeat your question just absolutely interrupt me if",
    "start": "49890",
    "end": "57300"
  },
  {
    "text": "you're Aaron you don't even have to raise your hand you just start talking you know and I'll set up all right so",
    "start": "57300",
    "end": "66000"
  },
  {
    "start": "63000",
    "end": "495000"
  },
  {
    "text": "here's some of the possible topics I'm not I don't have slides on all these but I'd be happy to talk about any of them",
    "start": "66000",
    "end": "71220"
  },
  {
    "text": "so if anything up here piques your interest there's a Q&A session at the",
    "start": "71220",
    "end": "76950"
  },
  {
    "text": "end that we can dive into the first is about yeah Mel composition like ryomo",
    "start": "76950",
    "end": "83250"
  },
  {
    "text": "composition and how to manipulate it COO",
    "start": "83250",
    "end": "88320"
  },
  {
    "text": "control has some commands for authoring yeah Mel the crate commands sub commands are actually so if you do coop control",
    "start": "88320",
    "end": "94770"
  },
  {
    "text": "create deployment but that actually does under the covers is create like a JSON or a Gamal and then send it to the API",
    "start": "94770",
    "end": "100619"
  },
  {
    "text": "server but if you do create deployment - OH Gamal - - dry run it actually just",
    "start": "100619",
    "end": "107009"
  },
  {
    "text": "prints out the yeah Mel that would have sent to the server so that's a nice way of bootstrapping your yeah Mel config",
    "start": "107009",
    "end": "113180"
  },
  {
    "text": "who here is familiar with coop control apply and how it's different from create",
    "start": "113180",
    "end": "119490"
  },
  {
    "text": "and also how it's different from like who control ride in that stuff okay a",
    "start": "119490",
    "end": "125640"
  },
  {
    "text": "couple of us all right who here is familiar with the difference between the imperative to control run and coop",
    "start": "125640",
    "end": "131849"
  },
  {
    "text": "control or create deployment commands versus like kuu control create - app on some yellow file okay I'll talk about that for a sec",
    "start": "131849",
    "end": "141800"
  },
  {
    "text": "so there's two ways of creating objects",
    "start": "141800",
    "end": "148290"
  },
  {
    "text": "with cou control typically or two tracks the first is I want to use kubernetes",
    "start": "148290",
    "end": "154950"
  },
  {
    "text": "like I use a UNIX command line right which is I type in a command and then it",
    "start": "154950",
    "end": "160530"
  },
  {
    "text": "goes and does something so kou control run will go create a deployment for me to control expose will go create the",
    "start": "160530",
    "end": "166800"
  },
  {
    "text": "service for me could control create secret or create config map will go read in a file and then create that in the",
    "start": "166800",
    "end": "172980"
  },
  {
    "text": "cluster and it works a lot like you're used to with grepping or other commands right there's no declarative persistent file",
    "start": "172980",
    "end": "180630"
  },
  {
    "text": "that you're working with there's another set of commands which is really how",
    "start": "180630",
    "end": "185700"
  },
  {
    "text": "everything works under the covers which are the cou control create - F you give it a file to control apply - app you",
    "start": "185700",
    "end": "193140"
  },
  {
    "text": "give it a file what these this is much more like working with computer code right where you write out the stuff you",
    "start": "193140",
    "end": "202109"
  },
  {
    "text": "want and then you run the compiler command and then it goes and like makes the thing real at that point in time I",
    "start": "202109",
    "end": "209030"
  },
  {
    "text": "should probably disable this",
    "start": "209030",
    "end": "214730"
  },
  {
    "text": "and when she you wanna come up here and just make sure that doesn't happen again just move it around every once in a",
    "start": "217880",
    "end": "223050"
  },
  {
    "text": "while and then you can answer some questions with me thanks man I was a",
    "start": "223050",
    "end": "229530"
  },
  {
    "text": "little bit joking but a little bit serious just everyone saw me remove that okay so the canonical way we encourage",
    "start": "229530",
    "end": "239010"
  },
  {
    "text": "people to use the system if you want to",
    "start": "239010",
    "end": "244350"
  },
  {
    "text": "have like a nice production workflow is to use this declarative approach the code style approach we call it config",
    "start": "244350",
    "end": "251550"
  },
  {
    "text": "what this allows you to do is you have a nice checked in record into your version control of what you actually want",
    "start": "251550",
    "end": "257670"
  },
  {
    "text": "running in your cluster that has nice a few nice properties one is if you make a",
    "start": "257670",
    "end": "263220"
  },
  {
    "text": "mistake you can actually look at the commit history and then roll it back and",
    "start": "263220",
    "end": "268290"
  },
  {
    "text": "figure out who did it and win and pair this to you know the red lines on your alerts going all the way off and you're",
    "start": "268290",
    "end": "273570"
  },
  {
    "text": "like oh I see what happened it also allows sres to review the",
    "start": "273570",
    "end": "279060"
  },
  {
    "text": "changes it allows you to perform a dif more easily so it has a lot of nice",
    "start": "279060",
    "end": "285090"
  },
  {
    "text": "properties but it is a little bit cumbersome compared tonight running that nice little command like coop control",
    "start": "285090",
    "end": "291330"
  },
  {
    "text": "create deployment okay I'm done and don't need to worry about it so the",
    "start": "291330",
    "end": "296670"
  },
  {
    "text": "first line here is about if you'd use that declarative approach which is what we recommend people do to do is you",
    "start": "296670",
    "end": "306360"
  },
  {
    "text": "start to want some of the same things you have available in programming",
    "start": "306360",
    "end": "311670"
  },
  {
    "text": "languages like reuse this reuse is really great and when you're defining configuration you may want to have some",
    "start": "311670",
    "end": "318810"
  },
  {
    "text": "base or you have multiple environments you have your test environment your staging environment the production",
    "start": "318810",
    "end": "324150"
  },
  {
    "text": "environment maybe you have different regions or different clusters each with slight variations for one reason or",
    "start": "324150",
    "end": "330630"
  },
  {
    "text": "another on some base a set of config and",
    "start": "330630",
    "end": "335760"
  },
  {
    "text": "so instead of if this was the code analogy instead of having one program",
    "start": "335760",
    "end": "341310"
  },
  {
    "text": "that's a thousand lines and then you want slight variations on that program so you just copy and paste that thousand",
    "start": "341310",
    "end": "346530"
  },
  {
    "text": "line program and then change a couple of constants here and there you really want something where you can",
    "start": "346530",
    "end": "352450"
  },
  {
    "text": "come reuse that and so the first piece",
    "start": "352450",
    "end": "358460"
  },
  {
    "text": "here is about the tools for being able to reuse raw yellow I'm not going to go",
    "start": "358460",
    "end": "366710"
  },
  {
    "text": "deep into it but the one thing to take away if you take away anything is",
    "start": "366710",
    "end": "371720"
  },
  {
    "text": "there's a lot of ways that we're using",
    "start": "371720",
    "end": "376000"
  },
  {
    "text": "we're using code and templating is an example of this another example is",
    "start": "377680",
    "end": "384460"
  },
  {
    "text": "inheritance and using like the same programming models that you may be used to and one thing we're trying to figure",
    "start": "384460",
    "end": "391640"
  },
  {
    "text": "out is is it possible to do it just by declaring the config itself and not introducing new concepts or this sort of",
    "start": "391640",
    "end": "397790"
  },
  {
    "text": "thing ok that's probably I'll talk about on that unless you have more questions",
    "start": "397790",
    "end": "403510"
  },
  {
    "text": "so the other two pieces that I'm gonna dig deeper into and in the main concepts",
    "start": "404170",
    "end": "412490"
  },
  {
    "text": "behind how we want to write cout control going forward is how do we do it in a way that supports new API extensions in",
    "start": "412490",
    "end": "417980"
  },
  {
    "text": "version skew right so when you're writing a CLI CRTs might be installed",
    "start": "417980",
    "end": "423860"
  },
  {
    "text": "into the cluster how do we make sure that we can work with these CRTs and they look and feel like first-class",
    "start": "423860",
    "end": "429470"
  },
  {
    "text": "objects or you may download the client and upgrade your cluster or you may have",
    "start": "429470",
    "end": "435050"
  },
  {
    "text": "different clusters running at different versions but you only have one client installed and now your client may be one version behind but your cluster is or",
    "start": "435050",
    "end": "441770"
  },
  {
    "text": "your client may be one version in front of what your cluster is and in these cases like how do we make sure we write",
    "start": "441770",
    "end": "448490"
  },
  {
    "text": "the commands so that they're going to continue to function and you don't need to be pairing the exact version of your client with the exact version of the",
    "start": "448490",
    "end": "454100"
  },
  {
    "text": "cluster and those kind of fall into the",
    "start": "454100",
    "end": "460550"
  },
  {
    "text": "second candidate so the second bullet point there is about how do we take",
    "start": "460550",
    "end": "466130"
  },
  {
    "text": "existing commands like cout control scale to control create foo make it so",
    "start": "466130",
    "end": "471290"
  },
  {
    "text": "that when you create a CRD API that those are you have support for those and",
    "start": "471290",
    "end": "478580"
  },
  {
    "text": "you're represented in those commands the second one is when you create a CRT and you're like look I have the CID as this very",
    "start": "478580",
    "end": "483740"
  },
  {
    "text": "specific set of business logic I would like to see supported for my thing that doesn't exist for any other api's how do",
    "start": "483740",
    "end": "491450"
  },
  {
    "text": "we make that available okay so this is",
    "start": "491450",
    "end": "499400"
  },
  {
    "start": "495000",
    "end": "519000"
  },
  {
    "text": "just real quick our goals support client version SKU support API extensions also how do we",
    "start": "499400",
    "end": "507110"
  },
  {
    "text": "get faster releases faster development all this stuff by having the code not",
    "start": "507110",
    "end": "512900"
  },
  {
    "text": "not as much bespoke coding cout control but making it more generic so more people can extend it and then we can",
    "start": "512900",
    "end": "517940"
  },
  {
    "text": "iterate faster okay so real quickly here",
    "start": "517940",
    "end": "523010"
  },
  {
    "start": "519000",
    "end": "615000"
  },
  {
    "text": "who knows what happens win and the answers on the slide so you can just read it right off who knows what happens",
    "start": "523010",
    "end": "528560"
  },
  {
    "text": "when you roundtrip so read JSON into a",
    "start": "528560",
    "end": "536240"
  },
  {
    "text": "ghost struct and then write it back out when the go struct doesn't have certain fields that are present in the JSON",
    "start": "536240",
    "end": "544720"
  },
  {
    "text": "right they get dropped so one thing that",
    "start": "544720",
    "end": "550930"
  },
  {
    "text": "we need to be careful up is if you have a command like hey set image on",
    "start": "550930",
    "end": "556780"
  },
  {
    "text": "deployment right and we write that to create the new deployment struct to use",
    "start": "556780",
    "end": "562250"
  },
  {
    "text": "the client to read it into the struct change the image to the one you specified and write it back out and you're on an old client against a new",
    "start": "562250",
    "end": "568970"
  },
  {
    "text": "server and it doesn't have certain fields that are present and set on that deployment in the new in the new server",
    "start": "568970",
    "end": "575510"
  },
  {
    "text": "it's gonna delete those fields when you update them which isn't a great experience so there's a couple ways",
    "start": "575510",
    "end": "583340"
  },
  {
    "text": "around this the first is to do a patch so there's a patch API where you just send certain fields and you say hey just",
    "start": "583340",
    "end": "590210"
  },
  {
    "text": "update the image field the second way is there something called an unstructured object which just reads it into",
    "start": "590210",
    "end": "596720"
  },
  {
    "text": "effectively a map of string to interface and so then this never actually goes through it you go struct so it doesn't",
    "start": "596720",
    "end": "602330"
  },
  {
    "text": "drop anything and the third is you can just manipulate raw amyl so these are some of the approaches that you'll see",
    "start": "602330",
    "end": "609230"
  },
  {
    "text": "used and this is why they're used instead of just doing the simple hey update the go struct ID history",
    "start": "609230",
    "end": "617350"
  },
  {
    "start": "615000",
    "end": "692000"
  },
  {
    "text": "okay so a little bit about generic commands so we'd like to start writing",
    "start": "617500",
    "end": "631700"
  },
  {
    "text": "commands that don't compile in specific api's that means that the command can",
    "start": "631700",
    "end": "637220"
  },
  {
    "text": "look at effectively the metadata published by the API server that it reads and then it has all the",
    "start": "637220",
    "end": "644450"
  },
  {
    "text": "information it needs so as you add or remove api's from the api server either through extensions or through upgrading",
    "start": "644450",
    "end": "651860"
  },
  {
    "text": "or downgrading versions of your cluster that the qu control just magically continues to function and so how do we",
    "start": "651860",
    "end": "660380"
  },
  {
    "text": "do this the first approach is to use metadata",
    "start": "660380",
    "end": "666230"
  },
  {
    "text": "about the schema and the structure of the api's themselves the second approach",
    "start": "666230",
    "end": "672050"
  },
  {
    "text": "is to actually expose endpoints that do the business logic so the business logic is implemented in the server so you",
    "start": "672050",
    "end": "678890"
  },
  {
    "text": "either write generic logic that works on a schema but still done in the client or",
    "start": "678890",
    "end": "684110"
  },
  {
    "text": "you can just expose an endpoint that offers a different abstraction layer that you can send a request to",
    "start": "684110",
    "end": "691690"
  },
  {
    "start": "692000",
    "end": "775000"
  },
  {
    "text": "I'll just skip this okay this is an open API schema so what is open API open API",
    "start": "695449",
    "end": "704069"
  },
  {
    "text": "is a format that gives the endpoints and the schema for the api's that the",
    "start": "704069",
    "end": "712979"
  },
  {
    "text": "cluster knows about and I just took out a snippet of deployment open API and",
    "start": "712979",
    "end": "718999"
  },
  {
    "text": "folded a couple pieces mm-hmm but the noticeable thing you can see here is it has the fields it has their type so if",
    "start": "718999",
    "end": "727379"
  },
  {
    "text": "it's a if the type is like a structure or a complex type it's a reference and",
    "start": "727379",
    "end": "733739"
  },
  {
    "text": "you can go look that up it has the description so you can even print data about it and we have this cool thing",
    "start": "733739",
    "end": "740789"
  },
  {
    "text": "down at the bottom which is you can have extensions to the open API metadata so",
    "start": "740789",
    "end": "746549"
  },
  {
    "text": "that means if you're like gosh I really wish I could annotate this field on this",
    "start": "746549",
    "end": "751849"
  },
  {
    "text": "for this particular API with something like this is the scale field and when",
    "start": "751849",
    "end": "757439"
  },
  {
    "text": "you scale me you're updating this number here right that's actually possible through this sort of thing",
    "start": "757439",
    "end": "764159"
  },
  {
    "text": "this particular extension says here is the group version kind which is the lookup key for any API for this",
    "start": "764159",
    "end": "772049"
  },
  {
    "text": "structure",
    "start": "772049",
    "end": "774979"
  },
  {
    "start": "775000",
    "end": "846000"
  },
  {
    "text": "the other piece of API metadata is something called the discovery service the discovery service has just the",
    "start": "777470",
    "end": "784030"
  },
  {
    "text": "endpoints now this has some overlap with open API but it's not complete and so",
    "start": "784030",
    "end": "789710"
  },
  {
    "text": "open API doesn't actually have all the information present in the discovery service and the format of the discovery",
    "start": "789710",
    "end": "796580"
  },
  {
    "text": "service is a little bit different where it starts out with an object and then has the endpoints for that object where",
    "start": "796580",
    "end": "803300"
  },
  {
    "text": "the open API just has the endpoints as a flat so they're not they're not",
    "start": "803300",
    "end": "809570"
  },
  {
    "text": "logically hanging off specific resources so you can see here you can ask the API",
    "start": "809570",
    "end": "816740"
  },
  {
    "text": "server about all its API is and it'll say hey I know this thing called deployments it has a kind deployment",
    "start": "816740",
    "end": "824690"
  },
  {
    "text": "which you can go and look up the schema for from the open API here are the verbs that I support here's this short name",
    "start": "824690",
    "end": "831740"
  },
  {
    "text": "thing so you can do cout control deploy instead up to control or to control get deploy instead of to control get",
    "start": "831740",
    "end": "837470"
  },
  {
    "text": "deployments there's categories metadata so you can say get all or something like",
    "start": "837470",
    "end": "843200"
  },
  {
    "text": "that and logically group these things together okay so those are the two kind",
    "start": "843200",
    "end": "850100"
  },
  {
    "start": "846000",
    "end": "904000"
  },
  {
    "text": "of tools you have for implementing generic client-side logic where you don't hard-code against an API and you",
    "start": "850100",
    "end": "855980"
  },
  {
    "text": "just ask okay what I pays do you have that have a scale field sub-resources",
    "start": "855980",
    "end": "862730"
  },
  {
    "text": "are you can think of them kind of like functions that you can attach to resources so if a resource has a schema",
    "start": "862730",
    "end": "869300"
  },
  {
    "text": "it's a declarative piece you can have a scale sub resource that will go and take",
    "start": "869300",
    "end": "874760"
  },
  {
    "text": "some scale scale field and update the number of replicas for a particular",
    "start": "874760",
    "end": "881050"
  },
  {
    "text": "object and that means that not every resource needs to have the same replicas",
    "start": "881050",
    "end": "888230"
  },
  {
    "text": "field look exactly the same or even be updated exactly the same way and you can just implement actual business logic and",
    "start": "888230",
    "end": "895280"
  },
  {
    "text": "wrap it in this nice interface and then everyone can your commands can just work against this interface instead of",
    "start": "895280",
    "end": "902150"
  },
  {
    "text": "instead of the schema here's an example of that so this is from the discovery",
    "start": "902150",
    "end": "907790"
  },
  {
    "start": "904000",
    "end": "921000"
  },
  {
    "text": "service and you'll get this this thing back that says hey you can scale this so you see",
    "start": "907790",
    "end": "913560"
  },
  {
    "text": "the name there says staple sets scale so that means staple sets have the scale operation and it has these verbs the",
    "start": "913560",
    "end": "924150"
  },
  {
    "start": "921000",
    "end": "1016000"
  },
  {
    "text": "last thing I'm going to talk about is plugins so sometimes you're not going to",
    "start": "924150",
    "end": "930690"
  },
  {
    "text": "be able to implement your logic in these two ways because you need something that's just really bespoke you really",
    "start": "930690",
    "end": "936360"
  },
  {
    "text": "just want to write your own binary and then have it in coop control and so the last piece we're developing is allowing",
    "start": "936360",
    "end": "945630"
  },
  {
    "text": "users to just have that option write and write whatever code they want and then have it appear in coop control mm-hmm",
    "start": "945630",
    "end": "952350"
  },
  {
    "text": "and one question we're trying to figure out here is what is the motivation for",
    "start": "952350",
    "end": "957720"
  },
  {
    "text": "plugins because different people have different things they want to get out of them right some folks want plugins so",
    "start": "957720",
    "end": "964680"
  },
  {
    "text": "that they can just implement a coop control create foo sub command right and",
    "start": "964680",
    "end": "969930"
  },
  {
    "text": "that's why and they just wanted to appear there so it looks like all the other commands and looks is this nice interface and that seems to be the",
    "start": "969930",
    "end": "979650"
  },
  {
    "text": "common approach but I think there's some other reasons for people wanting plugins",
    "start": "979650",
    "end": "987920"
  },
  {
    "text": "plugins could exist as callbacks from actual commands right so do you want to",
    "start": "987920",
    "end": "993930"
  },
  {
    "text": "swap out this component of how to control does something like one aspect of the diff command or something like",
    "start": "993930",
    "end": "999960"
  },
  {
    "text": "that and so instead of being exposed directly those would actually be invoked to",
    "start": "999960",
    "end": "1005060"
  },
  {
    "text": "override start parts of to control that is not something that we are actively looking at but it is something people",
    "start": "1005060",
    "end": "1011360"
  },
  {
    "text": "like plug-ins for so I thought",
    "start": "1011360",
    "end": "1014680"
  },
  {
    "start": "1016000",
    "end": "1059000"
  },
  {
    "text": "[Music] one piece that we want to develop is CLIA library so if you're writing a",
    "start": "1019070",
    "end": "1026490"
  },
  {
    "text": "plugin you don't have to write 200 lines to read in the coop config that's an exaggeration you don't have to do that",
    "start": "1026490",
    "end": "1032490"
  },
  {
    "text": "but there are a lot of simple things that are not trivial to do and you have",
    "start": "1032490",
    "end": "1038670"
  },
  {
    "text": "to copy this boilerplate code around it really great if you didn't have to do that",
    "start": "1038670",
    "end": "1043829"
  },
  {
    "text": "so we're looking at how can we publish libraries to a place that folks can vendor them in and then both use them",
    "start": "1043829",
    "end": "1052170"
  },
  {
    "text": "internally and make them accessible to everyone else this is something that my",
    "start": "1052170",
    "end": "1062790"
  },
  {
    "start": "1059000",
    "end": "1512000"
  },
  {
    "text": "channe have been talking about particularly recently as recently as last night at Tivoli and and I think",
    "start": "1062790",
    "end": "1070710"
  },
  {
    "text": "it's a really interesting example of some of the work we're trying to do right because there's a lot of ways that",
    "start": "1070710",
    "end": "1075840"
  },
  {
    "text": "we can approach these problems and and they all have trade-offs here how would",
    "start": "1075840",
    "end": "1084750"
  },
  {
    "text": "you support a ku control create sub command for your own bespoke foo resource right",
    "start": "1084750",
    "end": "1091320"
  },
  {
    "text": "so if I have create food CRD how do I create a crate foo sub command so the",
    "start": "1091320",
    "end": "1099210"
  },
  {
    "text": "first is would be with a RPC resource sort of driven so today if you do create deployment there is a function that",
    "start": "1099210",
    "end": "1104940"
  },
  {
    "text": "knows how to create a deployment the registers flags with the CLI and then reads those into a ghost rock pills and",
    "start": "1104940",
    "end": "1110370"
  },
  {
    "text": "the rest of the go struct with some other random stuff and then that's where you get your deployment so how can you still write it like that but not have it",
    "start": "1110370",
    "end": "1119490"
  },
  {
    "text": "compiled into the client so you could do that on the server side and then publish",
    "start": "1119490",
    "end": "1124800"
  },
  {
    "text": "it right so a sub resource as you we saw earlier you can have the API server",
    "start": "1124800",
    "end": "1130130"
  },
  {
    "text": "publish these sub resources and you can register sub resource that's like the create sub resource and that could have",
    "start": "1130130",
    "end": "1135780"
  },
  {
    "text": "specific fields and then now the code just runs on the server side instead of locally right and you could either have",
    "start": "1135780",
    "end": "1142230"
  },
  {
    "text": "it so that that then sends back the ml so it doesn't have any permissions to write to the cluster and then your",
    "start": "1142230",
    "end": "1147929"
  },
  {
    "text": "client takes the amyl and then takes the raw ml which the first slide I talked about as an",
    "start": "1147929",
    "end": "1153600"
  },
  {
    "text": "option right step back to the server or potentially you could send the server",
    "start": "1153600",
    "end": "1159059"
  },
  {
    "text": "could impersonate the client and then create it directly on the server sup",
    "start": "1159059",
    "end": "1165210"
  },
  {
    "text": "resource is one way of doing that that requires having a mechanism for",
    "start": "1165210",
    "end": "1170220"
  },
  {
    "text": "registering sub resources for your CR DS which doesn't exist yet it's being",
    "start": "1170220",
    "end": "1177059"
  },
  {
    "text": "discussed if you just want to do it on your own you could probably publish ERP",
    "start": "1177059",
    "end": "1182129"
  },
  {
    "text": "Cu or some rest in point and then annotate the sir like create that as a",
    "start": "1182129",
    "end": "1187350"
  },
  {
    "text": "service annotate the service now you can write a program that goes and or label",
    "start": "1187350",
    "end": "1192720"
  },
  {
    "text": "it program that goes in uses the label selector to go find all the services",
    "start": "1192720",
    "end": "1198990"
  },
  {
    "text": "that are great services reads their metadata and then sends them one thing I",
    "start": "1198990",
    "end": "1206519"
  },
  {
    "text": "think that's important here to consider is this should be possible to map flags",
    "start": "1206519",
    "end": "1213690"
  },
  {
    "text": "into a request object so like flags have there's only a couple types they can",
    "start": "1213690",
    "end": "1219480"
  },
  {
    "text": "happen they're relatively flat right you got string list of string int list of int boolean these sorts of things and so",
    "start": "1219480",
    "end": "1228450"
  },
  {
    "text": "you can just create a flat request that has those things and then map flags directly in that request and you can",
    "start": "1228450",
    "end": "1234779"
  },
  {
    "text": "register those flags after you've read the requests metadata right so you can",
    "start": "1234779",
    "end": "1239879"
  },
  {
    "text": "first recruit read what the request looks like then register those fields as flags dynamically fill them and send the",
    "start": "1239879",
    "end": "1247679"
  },
  {
    "text": "request who knows what label selectors are by",
    "start": "1247679",
    "end": "1252690"
  },
  {
    "text": "the way ok so label selectors are essentially a",
    "start": "1252690",
    "end": "1260100"
  },
  {
    "text": "way of applying indexed metadata to resources so there's a map in an object",
    "start": "1260100",
    "end": "1267149"
  },
  {
    "text": "metadata that takes a string key string value and then you can that will be",
    "start": "1267149",
    "end": "1273840"
  },
  {
    "text": "indexed so you can then query it and say hey give me all of the services that have the key I'm a coup Control Service",
    "start": "1273840",
    "end": "1282570"
  },
  {
    "text": "and the value whatever right true or something like that",
    "start": "1282570",
    "end": "1289370"
  },
  {
    "text": "the second approach that we've kind of kicked around there's a little less overhead so that first one is requires a",
    "start": "1290549",
    "end": "1298169"
  },
  {
    "text": "little bit of thought about how to implement it right and we can prototype it but it there's more work there what",
    "start": "1298169",
    "end": "1303480"
  },
  {
    "text": "can we do that's a little lighter weight right well one thing we could do is instead of trying to support this",
    "start": "1303480",
    "end": "1309419"
  },
  {
    "text": "bespoke arbitrary business logic we could just say look what if we just attach a JSON structure to the CRD as an",
    "start": "1309419",
    "end": "1319530"
  },
  {
    "text": "annotation it's an annotation by the way is again it's another map key value pair of whatever you want but it's not indexed",
    "start": "1319530",
    "end": "1326640"
  },
  {
    "text": "so you can just shove a bunch of data in there right not a bunch of data but you can shove more than you'd index don't",
    "start": "1326640",
    "end": "1335370"
  },
  {
    "text": "you have a bunch of data in there so",
    "start": "1335370",
    "end": "1340470"
  },
  {
    "text": "what we could do right is for a deployment for instance we could come up with what a JSON struck looks like for a",
    "start": "1340470",
    "end": "1345690"
  },
  {
    "text": "deployment you could just run we could attach it to if deployment was a CR D and annotation on the C or D and then",
    "start": "1345690",
    "end": "1352380"
  },
  {
    "text": "when the cou control starts up I could say okay give me all the C IDs I'm gonna read off their annotations okay this is",
    "start": "1352380",
    "end": "1358799"
  },
  {
    "text": "how here's the JSON for creating a deployment so now if you say Q control create deployment I'm gonna start with",
    "start": "1358799",
    "end": "1364110"
  },
  {
    "text": "this JSON if you don't give me anything else I'm just gonna create this deployment here that you totally showed me how to create and then I can register",
    "start": "1364110",
    "end": "1370860"
  },
  {
    "text": "some additional flag that map to like fields using JQ or something right and",
    "start": "1370860",
    "end": "1376470"
  },
  {
    "text": "so if you specify - - image I can use a JSON path so know where the image is and then rewrite that field so this is",
    "start": "1376470",
    "end": "1383400"
  },
  {
    "text": "somewhat limited in what it can do but it can actually you can actually get you",
    "start": "1383400",
    "end": "1389309"
  },
  {
    "text": "a create command that works it has some basic features and this might actually be really good having this limitation",
    "start": "1389309",
    "end": "1394530"
  },
  {
    "text": "because back to my first slide we really",
    "start": "1394530",
    "end": "1399780"
  },
  {
    "text": "want people to use the declarative way this is really a bootstrap mechanism to say okay you want to do something really simple and easy you want to do it fast",
    "start": "1399780",
    "end": "1405480"
  },
  {
    "text": "and you want to make sure that like you don't have a typo in your config when",
    "start": "1405480",
    "end": "1411179"
  },
  {
    "text": "you're writing it or have to copy and paste it from a page this will work for that when you want to start editing",
    "start": "1411179",
    "end": "1417659"
  },
  {
    "text": "adding arbitrary ports and this sort of stuff and modifying the CPU and this sort of stuff",
    "start": "1417659",
    "end": "1423850"
  },
  {
    "text": "this doesn't work so well well we'd argue that at that point you should probably if you're if you care about the",
    "start": "1423850",
    "end": "1430269"
  },
  {
    "text": "CPU that you're running your service with you should probably use any declarative config and right",
    "start": "1430269",
    "end": "1445869"
  },
  {
    "text": "the disadvantage with this approach is a number of things if you have multiple",
    "start": "1445869",
    "end": "1452409"
  },
  {
    "text": "clusters some of which have the API and some of which don't because either the clusters are at different versions or because the clusters have different",
    "start": "1452409",
    "end": "1457809"
  },
  {
    "text": "series installed you got one to control binary you have installed it's it's not",
    "start": "1457809",
    "end": "1465070"
  },
  {
    "text": "gonna work well it's either gonna it's gonna be present for clusters that don't have the thing or it won't be some things won't have plugins for clusters",
    "start": "1465070",
    "end": "1472659"
  },
  {
    "text": "that do have the thing you have version skew problems where now you have a version skewing control is already one",
    "start": "1472659",
    "end": "1478749"
  },
  {
    "text": "of our biggest pain points and now we have version skew for every other different binary that you've installed and we're not managing that and it took",
    "start": "1478749",
    "end": "1487210"
  },
  {
    "text": "us years to figure it really grabbed our heads around like the implications of version skew and kind of the mitigating factors so asking plugin developers to",
    "start": "1487210",
    "end": "1494320"
  },
  {
    "text": "try and like make sure they get version skew correct is not not a nice thing to",
    "start": "1494320",
    "end": "1499389"
  },
  {
    "text": "do but nonetheless it's good to know what our options are and and sometimes a",
    "start": "1499389",
    "end": "1506799"
  },
  {
    "text": "bad option is better than no option at all all right this guy sorry I was",
    "start": "1506799",
    "end": "1517600"
  },
  {
    "text": "teasing here and Aaron and I are good friends that's a I was teasing him sorry",
    "start": "1517600",
    "end": "1523570"
  },
  {
    "text": "there you go so like I don't have a ton",
    "start": "1523570",
    "end": "1528639"
  },
  {
    "text": "of experience writing code that interfaces with the kubernetes cluster so when I think of how would I write",
    "start": "1528639",
    "end": "1535779"
  },
  {
    "text": "something that interacts with the cluster I just go directly to coops ETL and it sounds like coop code or whatever",
    "start": "1535779",
    "end": "1541269"
  },
  {
    "text": "it sounds like a lot of the problems you are describing are the sorts of problems that anybody who wants to write some",
    "start": "1541269",
    "end": "1548440"
  },
  {
    "text": "binary that interacts with the kubernetes cluster and deals with version skew and deals with different features",
    "start": "1548440",
    "end": "1553840"
  },
  {
    "text": "and different different CRTs and stuff is going to have to deal with so the the question in my head is like this a lot",
    "start": "1553840",
    "end": "1560049"
  },
  {
    "text": "of this functionality seems like it belongs in client go and then I view cuddle is just the like nice UI wrapper",
    "start": "1560049",
    "end": "1567970"
  },
  {
    "text": "over top of that and this kind of lines up with discussion I keep seeing from",
    "start": "1567970",
    "end": "1573039"
  },
  {
    "text": "some individuals that client go is too hard to use and we need an easier client",
    "start": "1573039",
    "end": "1578590"
  },
  {
    "text": "then I hear you talking about different strategies of like what if we just use raw gamma land and patch it and stuff so",
    "start": "1578590",
    "end": "1584020"
  },
  {
    "text": "I'm trying to grok just from your perspective like how much of the work",
    "start": "1584020",
    "end": "1589450"
  },
  {
    "text": "you're describing is inside of client go how much of it is you re implementing stuff and and where do you think it can",
    "start": "1589450",
    "end": "1595390"
  },
  {
    "text": "be done in a way that's reusable for everybody to benefit from these these hard decisions because I think your",
    "start": "1595390",
    "end": "1600429"
  },
  {
    "text": "dogfooding a lot of the problems that any tool developer for kubernetes would have to deal with excellent question",
    "start": "1600429",
    "end": "1610210"
  },
  {
    "text": "thank you for for bringing that up",
    "start": "1610210",
    "end": "1614669"
  },
  {
    "text": "we've discussed this and kind of where we've fallen on it is I don't I'm not",
    "start": "1615539",
    "end": "1622210"
  },
  {
    "text": "gonna be opinion about like what specific repo does this logic go in right I do think it should be published",
    "start": "1622210",
    "end": "1627970"
  },
  {
    "text": "and made available and how that started into multiple users actually not that",
    "start": "1627970",
    "end": "1634000"
  },
  {
    "text": "important to me I think the thing to consider is are you trying to write a generic tool such as apply that just",
    "start": "1634000",
    "end": "1642029"
  },
  {
    "text": "operates on kubernetes api is in general for other people to use so we're like a diff right and then the answer is yes",
    "start": "1642029",
    "end": "1648340"
  },
  {
    "text": "that's what i want to do i want something to operates on generic crease on resources generically and qi it's",
    "start": "1648340",
    "end": "1657429"
  },
  {
    "text": "okay it's we don't need the slides anymore i think is that run okay with us not having the question slide up there",
    "start": "1657429",
    "end": "1663010"
  },
  {
    "text": "you can still ask questions all right if",
    "start": "1663010",
    "end": "1669010"
  },
  {
    "text": "that's what you want to do yes these libraries would be helpful for you there were three options up there right there",
    "start": "1669010",
    "end": "1674350"
  },
  {
    "text": "is patch they're unstructured object and there's the raw ml and we are still",
    "start": "1674350",
    "end": "1684880"
  },
  {
    "text": "trying towards something that's really polished and there's actually new work",
    "start": "1684880",
    "end": "1691070"
  },
  {
    "text": "being done on the server side to apply it to support other options that weren't listed there notably server side apply",
    "start": "1691070",
    "end": "1697750"
  },
  {
    "text": "allows you to not have to do the patch piece or would replace the patch",
    "start": "1697750",
    "end": "1703040"
  },
  {
    "text": "operation if you are writing a tool because you have or if you what you want",
    "start": "1703040",
    "end": "1708560"
  },
  {
    "text": "to do is really write either a CLI or something that runs in the cluster that",
    "start": "1708560",
    "end": "1714340"
  },
  {
    "text": "addresses some piece of functionality for specific api's maybe an api that you wrote you don't want that stuff right if",
    "start": "1715630",
    "end": "1724910"
  },
  {
    "text": "you don't care about version skew for instance so if you're a controller right and you're running in the cluster and",
    "start": "1724910",
    "end": "1730480"
  },
  {
    "text": "your controller is packaged with your CR d so the two are always shipped together right in that case you probably don't",
    "start": "1730480",
    "end": "1738620"
  },
  {
    "text": "want to be working with raw ml because it's harder to work with and more error-prone and you're not gonna have",
    "start": "1738620",
    "end": "1744890"
  },
  {
    "text": "Version skew and you're not going to need to work with extensions so that's kind of where I'd fall on that I guess",
    "start": "1744890",
    "end": "1751010"
  },
  {
    "text": "maybe there's you can think of it as two pieces naively which is the controller I",
    "start": "1751010",
    "end": "1759680"
  },
  {
    "text": "just went over since q1 API and totally generic like it might not even be",
    "start": "1759680",
    "end": "1766330"
  },
  {
    "text": "kubernetes it might be just something running raw API machinery code that doesn't know about pods and has totally",
    "start": "1766330",
    "end": "1772280"
  },
  {
    "text": "different API is installed right and there is kind of some stuff in the center where it's like well it's for my API but I do want to support version",
    "start": "1772280",
    "end": "1778940"
  },
  {
    "text": "skew right and that's where stuff and that's where you need to think about",
    "start": "1778940",
    "end": "1784550"
  },
  {
    "text": "like well what happens if we drop fields right and is that bad and that's or so or can is it okay to tell folks to",
    "start": "1784550",
    "end": "1792860"
  },
  {
    "text": "always run the latest version of the client potentially right and as long as the client is newer",
    "start": "1792860",
    "end": "1797930"
  },
  {
    "text": "then what's up what's being served by the server then it won't drop fields in this sort of stuff so yeah it's",
    "start": "1797930",
    "end": "1807590"
  },
  {
    "text": "complicated all right other questions",
    "start": "1807590",
    "end": "1812770"
  },
  {
    "start": "1813000",
    "end": "1959000"
  },
  {
    "text": "so I was curious I was curious um who is currently making",
    "start": "1813470",
    "end": "1819840"
  },
  {
    "text": "plug-ins besides service catalog because that's me um and like how do you see",
    "start": "1819840",
    "end": "1825059"
  },
  {
    "text": "like some of these future things like how are you vetting out the implementations for them",
    "start": "1825059",
    "end": "1831650"
  },
  {
    "text": "who else is making plugins alright",
    "start": "1832070",
    "end": "1838410"
  },
  {
    "text": "that's something I wish I had a better handle on actually maybe we could might make sense worth having a community doc",
    "start": "1838410",
    "end": "1845130"
  },
  {
    "text": "or something where folks could register and then get support from one another and discuss I don't I don't know service",
    "start": "1845130",
    "end": "1854669"
  },
  {
    "text": "catalog has been the party that is most persistently been pursuing plugins and",
    "start": "1854669",
    "end": "1860130"
  },
  {
    "text": "probably probably because your use cases align most closely with the plugins",
    "start": "1860130",
    "end": "1866419"
  },
  {
    "text": "sorry what was the second question yes",
    "start": "1866809",
    "end": "1871370"
  },
  {
    "text": "yeah okay so right the question was all that other stuff about not plugin but",
    "start": "1883280",
    "end": "1888480"
  },
  {
    "text": "the other ways who is that for I'd say",
    "start": "1888480",
    "end": "1895380"
  },
  {
    "text": "we the contributors to 60 Li who build",
    "start": "1895380",
    "end": "1900450"
  },
  {
    "text": "to control need it right in the sense that we need it in order to support version 2 and extensions we have found",
    "start": "1900450",
    "end": "1910950"
  },
  {
    "text": "and would love to be able to develop our libraries and infrastructure in such a",
    "start": "1910950",
    "end": "1916230"
  },
  {
    "text": "way that they are available to folks who are not 60i contributors and the reason",
    "start": "1916230",
    "end": "1925710"
  },
  {
    "text": "for that isn't just because we think we can lever it get more mileage out of it but also because it really helps with",
    "start": "1925710",
    "end": "1932190"
  },
  {
    "text": "onboarding like if we've written it so that the documentation is there and the interfaces are there and all that sort",
    "start": "1932190",
    "end": "1938580"
  },
  {
    "text": "of stuff so that you can use it outside the project when you come to contribute to cube control you hopefully are in a",
    "start": "1938580",
    "end": "1944280"
  },
  {
    "text": "better spot",
    "start": "1944280",
    "end": "1946669"
  },
  {
    "text": "not sure that's the right place to ask this but what's the status of the Deaf command this is the right space to ask",
    "start": "1960779",
    "end": "1970169"
  },
  {
    "text": "that the DIF command is going to the",
    "start": "1970169",
    "end": "1985350"
  },
  {
    "text": "next step for it is going to be to work with server-side apply so the history behind the diff command when the the",
    "start": "1985350",
    "end": "1991830"
  },
  {
    "text": "original motivation was that when you Dooku control apply it'd be really nice",
    "start": "1991830",
    "end": "1998399"
  },
  {
    "text": "to know what that thinks is gonna do before it does it and we wrote the diff",
    "start": "1998399",
    "end": "2007970"
  },
  {
    "text": "command in the apply logic we changed",
    "start": "2007970",
    "end": "2017510"
  },
  {
    "text": "somewhat how it was merged for the diff command so the diff command simulates what it thinks is going to happen but",
    "start": "2017510",
    "end": "2024260"
  },
  {
    "text": "it's not perfectly aligned with necessarily what the what's gonna happen",
    "start": "2024260",
    "end": "2029769"
  },
  {
    "text": "part of this has to do with limitations of apply with version skew believe it or",
    "start": "2029769",
    "end": "2035840"
  },
  {
    "text": "not so apply used to use go struck tags to figure out how stuff was gonna be",
    "start": "2035840",
    "end": "2041450"
  },
  {
    "text": "merged on the server-side assuming it had the same go struck tags that the server had right but when in reality it",
    "start": "2041450",
    "end": "2047990"
  },
  {
    "text": "might be a version behind and so missing a field and then make something up right",
    "start": "2047990",
    "end": "2054398"
  },
  {
    "text": "so apply more recently now uses that open API metadata and the extensions",
    "start": "2054399",
    "end": "2062450"
  },
  {
    "text": "that were listed there to be able to know exactly what the server thinks it's good or what the server intends to do not what it thinks it is but the the I",
    "start": "2062450",
    "end": "2073280"
  },
  {
    "text": "think the broader point is right now on the client we don't have a hundred",
    "start": "2073280",
    "end": "2078770"
  },
  {
    "text": "percent certainty yes I know exactly this is what's gonna happen we just have a like this is pretty much what we think",
    "start": "2078770",
    "end": "2083990"
  },
  {
    "text": "is going to happen when apply moves server-side fully which",
    "start": "2083990",
    "end": "2090750"
  },
  {
    "text": "is in their active development now it's like a multi quarter effort and it's gonna take some time but when it's there",
    "start": "2090750",
    "end": "2097390"
  },
  {
    "text": "and when the client is then invoking the server side apply piece that is gonna",
    "start": "2097390",
    "end": "2102880"
  },
  {
    "text": "expose a dry run piece and then the server can tell us yes this is definitely how I'm gonna do it at that point in time we'll update the diff",
    "start": "2102880",
    "end": "2109600"
  },
  {
    "text": "command to to have that and it will be more mature the diff command can also be",
    "start": "2109600",
    "end": "2116230"
  },
  {
    "text": "used for other interesting some things that was the main use case we developed it for we think it would also be useful",
    "start": "2116230",
    "end": "2123910"
  },
  {
    "text": "for the possibly like the customized",
    "start": "2123910",
    "end": "2129670"
  },
  {
    "text": "piece on the first slide where we talked about how do you compose raw Emmel",
    "start": "2129670",
    "end": "2136300"
  },
  {
    "text": "together right and potentially the diff command could be used or we could create",
    "start": "2136300",
    "end": "2143800"
  },
  {
    "text": "some sort of dipping logic either in cout control or in customize or some other place that allows you to dip those",
    "start": "2143800",
    "end": "2150490"
  },
  {
    "text": "things so what I would like are two things first it unified the format of",
    "start": "2150490",
    "end": "2157840"
  },
  {
    "text": "what it would do the apply and also like diff of the recursive directory",
    "start": "2157840",
    "end": "2162850"
  },
  {
    "text": "comparing the state of the cluster which my git repo or something and then unified diff format so I could oh you",
    "start": "2162850",
    "end": "2174730"
  },
  {
    "text": "have an issue would you file an issue or happy Rd well I found an issue that's",
    "start": "2174730",
    "end": "2180340"
  },
  {
    "text": "open and then recently I found there's an IFR feature where you can diff but that didn't look really like what I was",
    "start": "2180340",
    "end": "2186850"
  },
  {
    "text": "thinking about so that's what's my question is about so the recursive",
    "start": "2186850",
    "end": "2193480"
  },
  {
    "text": "directory piece I thought that alpha dev had I think the the last time I looked",
    "start": "2193480",
    "end": "2201280"
  },
  {
    "text": "at it which was probably six to nine months ago it copies the Hamill's the a",
    "start": "2201280",
    "end": "2212369"
  },
  {
    "text": "and B amell's into directories and then just shells out to the diff program on",
    "start": "2212369",
    "end": "2219280"
  },
  {
    "text": "those two director and then displays all the files so I",
    "start": "2219280",
    "end": "2224649"
  },
  {
    "text": "have you have you tried that I think I didn't find that okay maybe we need to",
    "start": "2224649",
    "end": "2230859"
  },
  {
    "text": "improve the built-in documentation for that so I guess a general tip is if if",
    "start": "2230859",
    "end": "2241449"
  },
  {
    "text": "you want your feature or your request or your issue to get attention github has a",
    "start": "2241449",
    "end": "2249129"
  },
  {
    "text": "lot of noise and it is really hard actually it's just impossible to really",
    "start": "2249129",
    "end": "2255849"
  },
  {
    "text": "stay on top of github issues in in a",
    "start": "2255849",
    "end": "2260919"
  },
  {
    "text": "definitive way that's not to say we don't try but it's like UDP not TCP if",
    "start": "2260919",
    "end": "2267999"
  },
  {
    "text": "you want a TCP sort of experience come to the sig CLI meeting or send to the",
    "start": "2267999",
    "end": "2276039"
  },
  {
    "text": "sake CLI mailing list and and that's a better way to get engagement so you can",
    "start": "2276039",
    "end": "2281379"
  },
  {
    "text": "throw an item on the agenda for the sake CLI meeting and we usually go through those and we can discuss it and after",
    "start": "2281379",
    "end": "2286959"
  },
  {
    "text": "that we'll probably communicate on the issue but now it's been brought into the cache okay great thank you thank you for",
    "start": "2286959",
    "end": "2298089"
  },
  {
    "text": "that update [Applause]",
    "start": "2298089",
    "end": "2304459"
  }
]