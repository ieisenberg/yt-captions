[
  {
    "text": "hi everyone um welcome to this talk by the olem team for kubecon um north america 2021",
    "start": "0",
    "end": "8639"
  },
  {
    "text": "in today's talk we'll be discussing om catalogs and how a paradigm shift from imperative to declarative",
    "start": "8639",
    "end": "15120"
  },
  {
    "text": "in the context of building oil catalogs reduced the cost of building and maintaining",
    "start": "15120",
    "end": "20320"
  },
  {
    "text": "catalog artifacts drastically my name is anik i'm a software engineer",
    "start": "20320",
    "end": "25840"
  },
  {
    "text": "working at red hat primarily focusing on the orbital lifecycle manager project commonly referred to as olm",
    "start": "25840",
    "end": "32640"
  },
  {
    "text": "i'm joined by my teammate joe who's a principal software engineer also working at red hat",
    "start": "32640",
    "end": "38079"
  },
  {
    "text": "who's also a part of the welcome team in today's presentation i will be going",
    "start": "38079",
    "end": "44480"
  },
  {
    "text": "over a short refresher on what an operator is then i'll be covering a short refresher",
    "start": "44480",
    "end": "50559"
  },
  {
    "text": "on what the operator lifecycle manager project is about i will then talk about",
    "start": "50559",
    "end": "56000"
  },
  {
    "text": "what oem catalogs are and then discuss what the current catalog building process looks like",
    "start": "56000",
    "end": "62160"
  },
  {
    "text": "i'll also be showcasing some of the pain points involved in building catalogs in the current imperative way",
    "start": "62160",
    "end": "67840"
  },
  {
    "text": "joe will then talk about the new declarative solution for building catalogs and how it manages",
    "start": "67840",
    "end": "72960"
  },
  {
    "text": "to ease the pain points of building imperative catalogs and in the process showcase a significant reduction in cost",
    "start": "72960",
    "end": "78880"
  },
  {
    "text": "the new solution enabled for everyone involved in building and maintaining catalogs finally we will close out with a demo of",
    "start": "78880",
    "end": "85680"
  },
  {
    "text": "the new workflow for building catalogs so let's begin with a short refresher on",
    "start": "85680",
    "end": "92079"
  },
  {
    "text": "operators um operas were first introduced by coreos",
    "start": "92079",
    "end": "99040"
  },
  {
    "text": "as as a concept for a special class of software they're basically application specific controller that",
    "start": "99040",
    "end": "105280"
  },
  {
    "text": "extends the kubernetes api to create configure and manage instances of stateful applications on behalf of",
    "start": "105280",
    "end": "111920"
  },
  {
    "text": "kubernetes users it builds upon the basic kubernetes resource and controller concept but includes domain or application specific",
    "start": "111920",
    "end": "118479"
  },
  {
    "text": "knowledge to automate common tasks so when you talk about any software you",
    "start": "118479",
    "end": "124560"
  },
  {
    "text": "need a way to manage the lifecycle of the software at least in the context of enterprise softwares",
    "start": "124560",
    "end": "130000"
  },
  {
    "text": "this is where the operator lifecycle manager project comes into play the opera lifecycle",
    "start": "130000",
    "end": "135680"
  },
  {
    "text": "manager project is a component of the operative framework which is an open source toolkit to",
    "start": "135680",
    "end": "141040"
  },
  {
    "text": "manage the lifecycle of operators in a streamlined and scalable way olm extends kubernetes to provide a",
    "start": "141040",
    "end": "147120"
  },
  {
    "text": "declarative way to install manage and upgrade operators on a cluster it provides a way to make operators and",
    "start": "147120",
    "end": "153360"
  },
  {
    "text": "their services available for cluster users to select and install essentially olm enables operators to",
    "start": "153360",
    "end": "159440"
  },
  {
    "text": "behave like managed services providers through the api's expos and it has built-in mechanisms to ensure",
    "start": "159440",
    "end": "166319"
  },
  {
    "text": "cluster stability while those operators are being used on cluster",
    "start": "166319",
    "end": "172239"
  },
  {
    "text": "these features are enabled by allowing operators to express dependencies on specific platforms and on other",
    "start": "172239",
    "end": "177519"
  },
  {
    "text": "operators together together with the help of rich update mechanisms to keep operators up to date automatically via",
    "start": "177519",
    "end": "184319"
  },
  {
    "text": "over-the-air updates to catalogs so catalogs what are they",
    "start": "184319",
    "end": "190480"
  },
  {
    "text": "to discuss catalogs we first have to go over what an operator bundle is an operator bundle is essentially all",
    "start": "190480",
    "end": "196480"
  },
  {
    "text": "the that defines the bundle that defines the operator version",
    "start": "196480",
    "end": "202239"
  },
  {
    "text": "packaged in a directory so what do i mean by the manifest that defined the bundle",
    "start": "202239",
    "end": "208720"
  },
  {
    "text": "so as you can see here um it's basically a directory that contains",
    "start": "208720",
    "end": "214239"
  },
  {
    "text": "all the man all the manifests um and it's basically a docker file and it has",
    "start": "214239",
    "end": "219440"
  },
  {
    "text": "two folders so the first folder the manifest folder directory contains cube color applicable",
    "start": "219440",
    "end": "226000"
  },
  {
    "text": "yaml manifest including the custom resource definitions that this exedy operator owns um the cluster",
    "start": "226000",
    "end": "232640"
  },
  {
    "text": "service version which is an api exposed by olm that allows the lcd operator to relay various",
    "start": "232640",
    "end": "238239"
  },
  {
    "text": "information to i'm with and we'll see a few examples of these informations in the next few",
    "start": "238239",
    "end": "243439"
  },
  {
    "text": "slides and other core group resources like configmaps and services the metadata directory um contains",
    "start": "243439",
    "end": "250480"
  },
  {
    "text": "application metadata including the name of the opera version um",
    "start": "250480",
    "end": "256799"
  },
  {
    "text": "the version and and package information including dependencies so the dependencies that i mentioned um on on",
    "start": "256799",
    "end": "263919"
  },
  {
    "text": "on platforms and other other operators they are expressed through the",
    "start": "263919",
    "end": "269040"
  },
  {
    "text": "dependencies on the aml file so this this directory um fully defines",
    "start": "269040",
    "end": "274720"
  },
  {
    "text": "version 0.6.1 of the lcd operator",
    "start": "274720",
    "end": "280440"
  },
  {
    "text": "and once you have that folder um it's basically kate's those case manifest",
    "start": "282560",
    "end": "289040"
  },
  {
    "text": "package and container images and then stored in a container registry um that is what is what we mean by an operator",
    "start": "289040",
    "end": "295600"
  },
  {
    "text": "bundle and an operator bundle image so now that we've covered what an",
    "start": "295600",
    "end": "301919"
  },
  {
    "text": "operator bundle is um and how operator bundles are expressed for all them",
    "start": "301919",
    "end": "309039"
  },
  {
    "text": "how do i make a catalog of these operator bundles um essentially a catalog or an olm",
    "start": "309039",
    "end": "315360"
  },
  {
    "text": "catalog is a collection of references to these operator bundle images that i talked about um and we'll talk about",
    "start": "315360",
    "end": "322800"
  },
  {
    "text": "how these uh how they are added to this database um more in the next few slides um",
    "start": "322800",
    "end": "329680"
  },
  {
    "text": "essentially like i said it's a it's a sqlite database that contains all the operator all the information about operator bundles in that catalog um so",
    "start": "329680",
    "end": "336960"
  },
  {
    "text": "like i mentioned um in in olm you can you can have uh you",
    "start": "336960",
    "end": "342000"
  },
  {
    "text": "can mention upgrade graphs for your operator for example the lcd v dot um 0.6.1 can upgrade to v.0.6.2",
    "start": "342000",
    "end": "349360"
  },
  {
    "text": "um and so in the operator bundle table you would have these two bundles stored um",
    "start": "349360",
    "end": "355600"
  },
  {
    "text": "and in the channel for example you can mention that both those um bundles belong in the alpha channel um",
    "start": "355600",
    "end": "362000"
  },
  {
    "text": "so in the channel table we'll have the information about the alpha channel in the channel entry table will have",
    "start": "362000",
    "end": "367919"
  },
  {
    "text": "information about um the both the versions belonging to the alpha channel um so basically all of the",
    "start": "367919",
    "end": "373919"
  },
  {
    "text": "information that is required to define each bundle and the relation between other bundle versions for your operator",
    "start": "373919",
    "end": "380319"
  },
  {
    "text": "all of that information is stored in this database this database the sqli database is then",
    "start": "380319",
    "end": "387039"
  },
  {
    "text": "packaged um into a runnable container image so you can see an example of the docker file here it's basically this index star",
    "start": "387039",
    "end": "393759"
  },
  {
    "text": "database uh that is being copied and pasted into the container image um",
    "start": "393759",
    "end": "398960"
  },
  {
    "text": "and and the contents of this database is then served with a with a command um that",
    "start": "398960",
    "end": "405440"
  },
  {
    "text": "we'll talk about more in the next few slides um over grpc api um",
    "start": "405440",
    "end": "411840"
  },
  {
    "text": "so once you have this cluster once you have this catalog",
    "start": "411840",
    "end": "417440"
  },
  {
    "text": "source image once you have this catalog image the way we introduce it in the cluster",
    "start": "417440",
    "end": "422960"
  },
  {
    "text": "is through the catalog source api so you can see in in over here and highlighted in the red box that's my catalog image",
    "start": "422960",
    "end": "430080"
  },
  {
    "text": "um and once i create this catalog source um with this catalog image",
    "start": "430080",
    "end": "436720"
  },
  {
    "text": "what i get is a registry part essentially a pod um that starts up that",
    "start": "436720",
    "end": "443599"
  },
  {
    "text": "exposes the content of that sqlite database over the grpc api and anybody can query for the for the",
    "start": "443599",
    "end": "449360"
  },
  {
    "text": "content um of the sqlite database through that api endpoint so an example of that is the",
    "start": "449360",
    "end": "455520"
  },
  {
    "text": "package manifest api which also is owned by olem um that leverages this api",
    "start": "455520",
    "end": "460960"
  },
  {
    "text": "endpoint um to to let users discover what operators are",
    "start": "460960",
    "end": "466960"
  },
  {
    "text": "available to install in there and on on their cluster um so you can do cube color get manifest to",
    "start": "466960",
    "end": "473680"
  },
  {
    "text": "see what class what operators are available to install on your cluster now how is this database created um",
    "start": "473680",
    "end": "480560"
  },
  {
    "text": "so the operator registry project also component of the operator framework um",
    "start": "480560",
    "end": "486240"
  },
  {
    "text": "is where we originally house all the tools um that were used to",
    "start": "486240",
    "end": "492639"
  },
  {
    "text": "create and manipulate this database so the project started off with uh and it ha with a array of binaries um it had",
    "start": "492639",
    "end": "499120"
  },
  {
    "text": "the initializer binary the register server configmap server and all of this did their own job so for example the",
    "start": "499120",
    "end": "504639"
  },
  {
    "text": "initializer um initiated um or created us a new sqlite database um and then we",
    "start": "504639",
    "end": "510160"
  },
  {
    "text": "were we had commands to add uh the directory uh that i showed earlier",
    "start": "510160",
    "end": "515518"
  },
  {
    "text": "of bundle inside that database um all the information from that directory would get pulled into that database",
    "start": "515519",
    "end": "522479"
  },
  {
    "text": "the registry server command um would then our binary would then um use the database to expose the content",
    "start": "522479",
    "end": "528880"
  },
  {
    "text": "of that database over the jrpc api um so we had a lot of binaries going on but with the introduction of opera",
    "start": "528880",
    "end": "535360"
  },
  {
    "text": "bundle and the with the introduction of the concept of storing these directories of uh bundles",
    "start": "535360",
    "end": "541519"
  },
  {
    "text": "in container registries um opm was introduced to bring in to house all of these",
    "start": "541519",
    "end": "548000"
  },
  {
    "text": "operations under the same tool um and also work on container images um",
    "start": "548000",
    "end": "555600"
  },
  {
    "text": "so the way opm started off was it was pretty simple in the beginning it had the registry sub command and the",
    "start": "557680",
    "end": "563920"
  },
  {
    "text": "index up command and both of those had the add rm and serve command um the ad",
    "start": "563920",
    "end": "569279"
  },
  {
    "text": "would just add the operator bundle so once you have it in a container registry an image reference you would pass that",
    "start": "569279",
    "end": "574720"
  },
  {
    "text": "on to opm uh register your opium index ad and that would extract the information from the from",
    "start": "574720",
    "end": "581279"
  },
  {
    "text": "the bundle image and store that in the database the rm would remove an entire operator",
    "start": "581279",
    "end": "587200"
  },
  {
    "text": "so if you you could add v.0.6.1 and v.0.6.2 of xcd operator",
    "start": "587200",
    "end": "592880"
  },
  {
    "text": "using add but you could do but you had to do opm rm",
    "start": "592880",
    "end": "598000"
  },
  {
    "text": "etc so the entire operator and all the versions that are included in that operator would get removed from the database using the rm command",
    "start": "598000",
    "end": "605920"
  },
  {
    "text": "and finally you have the serve command uh that would again serve the content of that database over",
    "start": "605920",
    "end": "610959"
  },
  {
    "text": "the grpc api so with the introduction of the new",
    "start": "610959",
    "end": "616079"
  },
  {
    "text": "command um we had to",
    "start": "616079",
    "end": "621760"
  },
  {
    "text": "build out processes for building these catalogs um so imagine you have a catalog called the cool catalog",
    "start": "621760",
    "end": "628720"
  },
  {
    "text": "um obviously you have a team responsible for building this catalog and maintaining this catalog and then you have the xcd",
    "start": "628720",
    "end": "635360"
  },
  {
    "text": "operator team prometheus operator team and a lot of other operator teams who wants to include their operator who or",
    "start": "635360",
    "end": "640640"
  },
  {
    "text": "who wants to make their operator available on cluster for users through your catalog",
    "start": "640640",
    "end": "646800"
  },
  {
    "text": "so they would submit they would first build the bundle um each bundle that they have",
    "start": "646800",
    "end": "651920"
  },
  {
    "text": "in their operator upgrade graph and they would submit that to the team responsible for creating the",
    "start": "651920",
    "end": "658079"
  },
  {
    "text": "cool catalog and the team the cool catalog team would then use opm index ad",
    "start": "658079",
    "end": "665760"
  },
  {
    "text": "over the bundle images that were submitted to them to create the cool catalog",
    "start": "665760",
    "end": "671600"
  },
  {
    "text": "image essentially that was fine but imagine imagine a",
    "start": "673040",
    "end": "678640"
  },
  {
    "text": "scenario where um the operator team makes a mistake and wants to replace the bundle in the",
    "start": "678640",
    "end": "684240"
  },
  {
    "text": "catalog so so suppose i make a mistake etc team makes a mistake on v.0.6.1 and wants to",
    "start": "684240",
    "end": "690959"
  },
  {
    "text": "replace that um the pipeline team then had to uh opm index rm um",
    "start": "690959",
    "end": "698720"
  },
  {
    "text": "the lcd operator entirely from the catalog and then rebuild the bundle and the reason that we have to rebuild all the",
    "start": "698720",
    "end": "704640"
  },
  {
    "text": "bundles is because v.6.2 would have a reference to v.6.1 of",
    "start": "704640",
    "end": "710000"
  },
  {
    "text": "that city operator um think about it as a as a linked list um",
    "start": "710000",
    "end": "716399"
  },
  {
    "text": "and v dot series dots two is where it would say we would say that we this version replaces v.6.1 so we had to",
    "start": "716399",
    "end": "722880"
  },
  {
    "text": "rebuild all the bundles and then opm index add all the bundles uh individually to that um",
    "start": "722880",
    "end": "728800"
  },
  {
    "text": "to that catalog that was still fine um but now imagine a scenario where",
    "start": "728800",
    "end": "734480"
  },
  {
    "text": "an operator team wants to include a cv for an existing bundle um um or wants to add",
    "start": "734480",
    "end": "740160"
  },
  {
    "text": "yeah i want to replace the bundle in the catalog so the like i mentioned the pipeline team had to rebuild all of the",
    "start": "740160",
    "end": "746320"
  },
  {
    "text": "bundle images remove the operator from the catalog and then re-add all the bundles um",
    "start": "746320",
    "end": "752720"
  },
  {
    "text": "imagine now that the pipeline team is getting a request to do this for 10 20 operators out of the 100 operators that",
    "start": "752720",
    "end": "758560"
  },
  {
    "text": "you have inside cool catalog certainly not a fun time for for the cool catalog team",
    "start": "758560",
    "end": "765440"
  },
  {
    "text": "so this is when a request came in um for opm uh for adding a new sub command",
    "start": "765440",
    "end": "770800"
  },
  {
    "text": "called prune um that would prune all of the all of the that would get rid of all of the packages or all of the",
    "start": "770800",
    "end": "777120"
  },
  {
    "text": "operators in the catalog except for the ones specified that only helped a little bit um",
    "start": "777120",
    "end": "782240"
  },
  {
    "text": "it didn't help all of the pain points that i described earlier though now imagine another scenario where uh",
    "start": "782240",
    "end": "790240"
  },
  {
    "text": "operating wants to add a bundle in the middle of the upgrade graph so this is again where we have to",
    "start": "790240",
    "end": "796160"
  },
  {
    "text": "rebuild all the bundles um because we have to mention the replaces for each um we have to edit the replaces",
    "start": "796160",
    "end": "802720"
  },
  {
    "text": "for each bundle that would come up after that bundle um and again like i said think about this as a linked list",
    "start": "802720",
    "end": "807839"
  },
  {
    "text": "and you're adding an item in the middle of the linked list so you would have to rebuild all of that linked list item in",
    "start": "807839",
    "end": "812959"
  },
  {
    "text": "our case container images our opm index rm the operator and then rebuild all the",
    "start": "812959",
    "end": "819600"
  },
  {
    "text": "rebuild or re-add all the bundles inside the index so this is when another request came in",
    "start": "819600",
    "end": "826639"
  },
  {
    "text": "um to add a substitute for field in the cluster service version api that i mentioned earlier essentially this would",
    "start": "826639",
    "end": "833279"
  },
  {
    "text": "add a new field in your database um and you could mention through this cluster",
    "start": "833279",
    "end": "838800"
  },
  {
    "text": "service version the new bundle um that would be a substitute for the old bundle um",
    "start": "838800",
    "end": "846240"
  },
  {
    "text": "now imagine another requirement coming in from um another team where they said that okay we released a bundle earlier but now we",
    "start": "847120",
    "end": "853600"
  },
  {
    "text": "want to deprecate that bundle and therefore all of the bundles that came in later um in the upgrade graph after",
    "start": "853600",
    "end": "859839"
  },
  {
    "text": "that bundle would have to be removed so that users cannot ins upgrade to that bundle um",
    "start": "859839",
    "end": "866560"
  },
  {
    "text": "in the current scenario that i mentioned opera the cool catalog team had no way of doing that",
    "start": "866560",
    "end": "872399"
  },
  {
    "text": "um this is where deprecate this is where the request came in to add another sub command called the deprecate truncate um",
    "start": "872399",
    "end": "878480"
  },
  {
    "text": "for the lack of a better name uh which would deprecate a bundle and then truncate the upgrade graph i i remove",
    "start": "878480",
    "end": "883519"
  },
  {
    "text": "all of the bundles um that came after that bundle from the upgrade graph",
    "start": "883519",
    "end": "889199"
  },
  {
    "text": "so as you can see um imagine imagine i was just talking about cool catalog",
    "start": "889760",
    "end": "895360"
  },
  {
    "text": "but imagine three four catalogs being built and then um all each catalog um",
    "start": "895360",
    "end": "901279"
  },
  {
    "text": "being the responsibility of each team um of an individual team each team would",
    "start": "901279",
    "end": "906720"
  },
  {
    "text": "then have come up with their unique way of building and maintaining these catalogs",
    "start": "906720",
    "end": "913120"
  },
  {
    "text": "and therefore they would have their unique requirements um for how opm should behave or for how",
    "start": "913120",
    "end": "918639"
  },
  {
    "text": "that tool should um let them handle the or maintain the catalog and as you could see the we kept getting",
    "start": "918639",
    "end": "925279"
  },
  {
    "text": "requests um for increasing for adding more and more sub commands to opm and that increased the surface area",
    "start": "925279",
    "end": "932079"
  },
  {
    "text": "of the opm sub commands and we all know with more code comes more bug that we all needed to maintain",
    "start": "932079",
    "end": "940440"
  },
  {
    "text": "um so this is where i will hand it over to joe who will talk about how we solve this problem",
    "start": "942240",
    "end": "948720"
  },
  {
    "text": "with the new solution",
    "start": "948720",
    "end": "952120"
  },
  {
    "text": "joe i think i'm muted",
    "start": "958240",
    "end": "961199"
  },
  {
    "text": "okay all right so um yeah so as onick was saying like we got into this really",
    "start": "963440",
    "end": "969519"
  },
  {
    "text": "difficult situation um where like all these um operator authors and",
    "start": "969519",
    "end": "975040"
  },
  {
    "text": "pipeline teams that were building catalogs would continue asking for more and more features and you know we got to",
    "start": "975040",
    "end": "981279"
  },
  {
    "text": "this we're almost to this point now where you know adding a new feature is going to add another three or four bugs on an",
    "start": "981279",
    "end": "987279"
  },
  {
    "text": "unrelated feature that you know um is difficult to maintain",
    "start": "987279",
    "end": "992320"
  },
  {
    "text": "and kind of keep everything on track so what we came up with is a brand new format for the underlying",
    "start": "992320",
    "end": "999440"
  },
  {
    "text": "index which is just declarative plain text files stored in a directory structure",
    "start": "999440",
    "end": "1004720"
  },
  {
    "text": "so now every um every package so every operator team so you might have an scd operator you might have prometheus",
    "start": "1004720",
    "end": "1011279"
  },
  {
    "text": "operator all of those operators can store their own package level metadata",
    "start": "1011279",
    "end": "1017680"
  },
  {
    "text": "for their index now just in a plain text yaml or json file and this is",
    "start": "1017680",
    "end": "1022720"
  },
  {
    "text": "so the opm tool has now been updated to to support this new plain text format",
    "start": "1022720",
    "end": "1027839"
  },
  {
    "text": "the sqlite database format has been deprecated and we're going to try to migrate um",
    "start": "1027839",
    "end": "1033280"
  },
  {
    "text": "a lot of the catalog usage over to this new declarative format to alleviate a lot of these problems",
    "start": "1033280",
    "end": "1039038"
  },
  {
    "text": "that i think was talking about so so this is just a short example of",
    "start": "1039039",
    "end": "1045120"
  },
  {
    "text": "what something looks like you have a couple of like root level schemas here we see like an olm dot package which has",
    "start": "1045120",
    "end": "1051120"
  },
  {
    "text": "package level metadata the name of the package the default channel for the package a description for it",
    "start": "1051120",
    "end": "1057600"
  },
  {
    "text": "and then you can start listing other things like an olm.bundle which is just an index representation of",
    "start": "1057600",
    "end": "1063760"
  },
  {
    "text": "that bundle image so we have the the name of the csv that was in the bundle we have the package that this bundle is",
    "start": "1063760",
    "end": "1069919"
  },
  {
    "text": "a member of uh we have an image reference which olm can use",
    "start": "1069919",
    "end": "1074960"
  },
  {
    "text": "uh to unpack that image and find those manifests and metadata that anik was showing before",
    "start": "1074960",
    "end": "1080400"
  },
  {
    "text": "and then we have a list of properties that the olm resolver can use to make decisions about",
    "start": "1080400",
    "end": "1086799"
  },
  {
    "text": "you know what can i install what dependencies do i need to have installed what can't i install because the",
    "start": "1086799",
    "end": "1092559"
  },
  {
    "text": "dependencies aren't aren't met that kind of thing so now all of the stuff is stored in plain text and",
    "start": "1092559",
    "end": "1098240"
  },
  {
    "text": "operator authors can now you know have the control to to make changes",
    "start": "1098240",
    "end": "1103360"
  },
  {
    "text": "declaratively based on what they need their index to look like so the issues that onik was explaining",
    "start": "1103360",
    "end": "1109760"
  },
  {
    "text": "about um you know inserting into a linked list of an upgrade graph now is",
    "start": "1109760",
    "end": "1114880"
  },
  {
    "text": "just cracking open this index file and inserting the changes in the right way",
    "start": "1114880",
    "end": "1119919"
  },
  {
    "text": "rather than having to do this imperative workflow of removing the whole thing and then re-adding everything in order",
    "start": "1119919",
    "end": "1127360"
  },
  {
    "text": "um so there's a lot of motivation behind this i think some of it is kind of obvious already from what onyx has been",
    "start": "1127360",
    "end": "1133679"
  },
  {
    "text": "talking about but the three main things that we were looking for are editability composability and",
    "start": "1133679",
    "end": "1139120"
  },
  {
    "text": "extensibility so kind of what i was just explaining from an editability standpoint",
    "start": "1139120",
    "end": "1144880"
  },
  {
    "text": "now both operator authors and catalog authors can there are catalog maintainers",
    "start": "1144880",
    "end": "1150480"
  },
  {
    "text": "can directly edit the contents of the index they don't have to rely on a tool like opm that has just a very specific set of",
    "start": "1150480",
    "end": "1158080"
  },
  {
    "text": "things that it knows how to change about the index they can go and make arbitrary changes",
    "start": "1158080",
    "end": "1163360"
  },
  {
    "text": "so this this opens the door for like lots of new use cases right um one case would be",
    "start": "1163360",
    "end": "1169919"
  },
  {
    "text": "you know i i want to make sure that this bundle that i already added a long time ago i want to add it to a new channel",
    "start": "1169919",
    "end": "1176480"
  },
  {
    "text": "so i can just go into my index plain text file and add it to a",
    "start": "1176480",
    "end": "1181520"
  },
  {
    "text": "new channel done and before you would have to basically rebuild that bundle image",
    "start": "1181520",
    "end": "1187360"
  },
  {
    "text": "delete the entire package from the index and then rebuild the entire index with that new bundle",
    "start": "1187360",
    "end": "1193760"
  },
  {
    "text": "image that has that new index reference or the new channel reference um composability so now what we can do",
    "start": "1193760",
    "end": "1200799"
  },
  {
    "text": "because this is organized as like a an arbitrary directory structure there's not a single source of truth for",
    "start": "1200799",
    "end": "1207039"
  },
  {
    "text": "like the entire contents of the catalog now what happens is operator authors can",
    "start": "1207039",
    "end": "1212799"
  },
  {
    "text": "build just just an index that contains just their package",
    "start": "1212799",
    "end": "1218320"
  },
  {
    "text": "and then uh there's kind of two ways you could do this you could have a catalog that says like oh well um",
    "start": "1218400",
    "end": "1225280"
  },
  {
    "text": "i want to maintain a list of references to other indexes that already exist and i'll just copy those into my larger",
    "start": "1225280",
    "end": "1231120"
  },
  {
    "text": "catalog so now basically we can have this composability feature where you can build indexes of",
    "start": "1231120",
    "end": "1237840"
  },
  {
    "text": "indexes of indexes uh just by copying more sub-indexes into your index",
    "start": "1237840",
    "end": "1244080"
  },
  {
    "text": "and then lastly with extensibility because this is a plain text format it's json or yaml there's lots of programming languages",
    "start": "1244080",
    "end": "1250480"
  },
  {
    "text": "out there there's lots of tools out there that understand json and yaml so it's it's really easy for",
    "start": "1250480",
    "end": "1256799"
  },
  {
    "text": "both operator authors and catalog maintainers to build their own tooling on top of the schema and format",
    "start": "1256799",
    "end": "1264080"
  },
  {
    "text": "and come up with things that the olm team either hasn't come up with or has decided is too niche of a concern for",
    "start": "1264080",
    "end": "1271360"
  },
  {
    "text": "the larger opm tooling to to maintain and use but it gives",
    "start": "1271360",
    "end": "1277679"
  },
  {
    "text": "all of these other users an escape hatch to build their own kind of workflows around this low-lying schema",
    "start": "1277679",
    "end": "1285520"
  },
  {
    "text": "um so so we've got looks like maybe five or six commands new for opm that are",
    "start": "1285520",
    "end": "1294159"
  },
  {
    "text": "supporting this new file based catalog format so a couple are just kind of really",
    "start": "1294159",
    "end": "1299520"
  },
  {
    "text": "straightforward so like opm init all it does is it just generates that olim.packageblob",
    "start": "1299520",
    "end": "1305600"
  },
  {
    "text": "for package you give it a package name and you can specify some flags for specifying the default channel an icon",
    "start": "1305600",
    "end": "1312480"
  },
  {
    "text": "or a description and it'll just generate an output on standard out just the olin.package blob and you can",
    "start": "1312480",
    "end": "1318960"
  },
  {
    "text": "then you know pipe that into a yama file you can pipe that through um",
    "start": "1318960",
    "end": "1325200"
  },
  {
    "text": "yq or jq to make some edits it's kind of this unix way of doing things where you know",
    "start": "1325200",
    "end": "1331600"
  },
  {
    "text": "it'll print it to stand it out and then it's up to the user to decide how to use that render is the same sort of thing",
    "start": "1331600",
    "end": "1338400"
  },
  {
    "text": "except that it takes an existing index image or a bundle image or a an old sqlite file",
    "start": "1338400",
    "end": "1347840"
  },
  {
    "text": "and produces the equivalent file based catalog for that content so",
    "start": "1348320",
    "end": "1353760"
  },
  {
    "text": "this is nice because all of that existing content out there that's in an sqlite based index image or",
    "start": "1353760",
    "end": "1360080"
  },
  {
    "text": "an sqlite file can just be readily converted over to this new filebase catalog format just by",
    "start": "1360080",
    "end": "1365840"
  },
  {
    "text": "running opm render the index image that you want to convert and then again this will just spit that",
    "start": "1365840",
    "end": "1372240"
  },
  {
    "text": "entire thing out on standard out and then and then you can write you can directly redirect that into a file",
    "start": "1372240",
    "end": "1378480"
  },
  {
    "text": "uh and package that into a new file based catalog index or you can pipe that through some",
    "start": "1378480",
    "end": "1384880"
  },
  {
    "text": "other tools and maybe split things out based on each package um opm validate so this is a key tool that",
    "start": "1384880",
    "end": "1393919"
  },
  {
    "text": "is is super important for the filebase catalog the difference in filebase catalogs is",
    "start": "1393919",
    "end": "1400000"
  },
  {
    "text": "that you don't have like when you make edits to a plain text file you like there's no",
    "start": "1400000",
    "end": "1405919"
  },
  {
    "text": "way of ensuring that every single edit is valid with opm in the sqlite based indexes",
    "start": "1405919",
    "end": "1414159"
  },
  {
    "text": "opm could guarantee that any changes made to the database were valid based on opm's code or based on",
    "start": "1414159",
    "end": "1421760"
  },
  {
    "text": "the database schemas that were underlying those commands so with file based catalogs we needed a",
    "start": "1421760",
    "end": "1427279"
  },
  {
    "text": "validate command that that users can use such that when they make changes to their file base config",
    "start": "1427279",
    "end": "1433200"
  },
  {
    "text": "they can run this opium validate command that will tell them if what they have built is actually a valid catalog",
    "start": "1433200",
    "end": "1440799"
  },
  {
    "text": "opm server this is basically the equivalent of the opium registry serve command for sqlite databases except this",
    "start": "1440799",
    "end": "1447520"
  },
  {
    "text": "knows how to read a source directory that contains",
    "start": "1447520",
    "end": "1452640"
  },
  {
    "text": "file based catalogs it serves the exact same grpc api it's fully backward compatible so you don't",
    "start": "1452640",
    "end": "1459200"
  },
  {
    "text": "have to use a new version of olm to use this any version of olm that works with",
    "start": "1459200",
    "end": "1465679"
  },
  {
    "text": "the grpc api will work with file based catalogs as well via this opm surf",
    "start": "1465679",
    "end": "1470840"
  },
  {
    "text": "command then we have a couple of alpha commands these are still subject to change that's why we've got them under",
    "start": "1470840",
    "end": "1476080"
  },
  {
    "text": "the alpha sub command but um so alpha diff is basically a a tool that",
    "start": "1476080",
    "end": "1481360"
  },
  {
    "text": "you can send like an old and a new ref in it does pretty much what it says and it'll tell you what changed uh in",
    "start": "1481360",
    "end": "1489039"
  },
  {
    "text": "in between the old reference and the new reference and these references again are basically index images",
    "start": "1489039",
    "end": "1495120"
  },
  {
    "text": "um or reference or like you know declarative config directories",
    "start": "1495120",
    "end": "1500480"
  },
  {
    "text": "and then lastly there's an opm alpha generate docker file this kind of takes the place a little bit of opm index ad",
    "start": "1500480",
    "end": "1508480"
  },
  {
    "text": "which in the past opm would try to manage your images for you and it had",
    "start": "1508480",
    "end": "1515440"
  },
  {
    "text": "underlying tooling and configuration to let you decide um to push and pull images with certain",
    "start": "1515440",
    "end": "1522159"
  },
  {
    "text": "container tools so for instance uh opm index ad has a flag that says uh push like pull tool",
    "start": "1522159",
    "end": "1529360"
  },
  {
    "text": "equals docker and push tool equals podman and then opm would actually invoke docker and podman",
    "start": "1529360",
    "end": "1535039"
  },
  {
    "text": "uh for those pull and push actions we've decided um based on lots of feedback and lots of",
    "start": "1535039",
    "end": "1541440"
  },
  {
    "text": "real world usage that trying to maintain these these image push and pull kind of",
    "start": "1541440",
    "end": "1546880"
  },
  {
    "text": "workflows directly in opm is not very maintainable so um the",
    "start": "1546880",
    "end": "1552000"
  },
  {
    "text": "alternative that we've come up with is basically like let's just have a command that generates a docker file",
    "start": "1552000",
    "end": "1557039"
  },
  {
    "text": "um that knows how to publish your catalog for you and then it's up to you then to to go to",
    "start": "1557039",
    "end": "1563600"
  },
  {
    "text": "the next step basically and invoke whatever your tool of choice is rather whether it's docker build or podman",
    "start": "1563600",
    "end": "1571840"
  },
  {
    "text": "so let's look at kind of what this new catalog building workflow is so so right now we're seeing kind of how this used",
    "start": "1573360",
    "end": "1578480"
  },
  {
    "text": "to work right this is what onik was explaining earlier operator teams would submit bundle",
    "start": "1578480",
    "end": "1583600"
  },
  {
    "text": "references and they would only submit button references so so a bundle would basically have to fully explain every",
    "start": "1583600",
    "end": "1589760"
  },
  {
    "text": "change that that would possibly want to be made to a catalog and then the cool catalog maintainers would",
    "start": "1589760",
    "end": "1596559"
  },
  {
    "text": "run opm index ad and opm index ad would have to know how to interpret that bundle and update",
    "start": "1596559",
    "end": "1602240"
  },
  {
    "text": "the catalog appropriately so now what we can do is we can say that each operator team",
    "start": "1602240",
    "end": "1608159"
  },
  {
    "text": "now maintains their own github repos or get repos or directories or you know however they want to organize",
    "start": "1608159",
    "end": "1614720"
  },
  {
    "text": "their directory of index metadata and they can they can do a couple things they can",
    "start": "1614720",
    "end": "1620799"
  },
  {
    "text": "push that they can they can well they need to push their bundle images like they always have to a container registry",
    "start": "1620799",
    "end": "1628880"
  },
  {
    "text": "and then when they go and talk to the the catalog they can just",
    "start": "1629200",
    "end": "1634880"
  },
  {
    "text": "basically make declarative changes to their operators in their package based index",
    "start": "1634880",
    "end": "1640559"
  },
  {
    "text": "and submit pull requests potentially to the catalog that says you know here's the changes i want to make to my index",
    "start": "1640559",
    "end": "1647360"
  },
  {
    "text": "there's another option where an operator team could say we want to maintain our own index repository and maybe the",
    "start": "1647360",
    "end": "1654559"
  },
  {
    "text": "catalog says well that's fine like just tell us a reference like tell us where your index repository is and then we'll",
    "start": "1654559",
    "end": "1659679"
  },
  {
    "text": "pull from that so there's lots of new workflows that we um are opening up by having this composability kind of thing that i was",
    "start": "1659679",
    "end": "1666080"
  },
  {
    "text": "explaining earlier the other nice thing here is that now we can build some interesting kind of ci cd",
    "start": "1666080",
    "end": "1672880"
  },
  {
    "text": "workflows right so when the std operator team publishes a pull request to the cool catalog",
    "start": "1672880",
    "end": "1679919"
  },
  {
    "text": "that cool catalog might have some github actions for for example that run opm validate um maybe that",
    "start": "1679919",
    "end": "1686720"
  },
  {
    "text": "check that the the author of the pull request is in the owner's file for",
    "start": "1686720",
    "end": "1693520"
  },
  {
    "text": "basically has the permission to update that particular package in the catalog",
    "start": "1693520",
    "end": "1699278"
  },
  {
    "text": "or at least requires a review from one of the the maintainers of that package",
    "start": "1699600",
    "end": "1705120"
  },
  {
    "text": "and it also can you know build the entire new index based on that pull request validate the entire index with",
    "start": "1705120",
    "end": "1711440"
  },
  {
    "text": "opm validate potentially spin up a kubernetes cluster install olm and attempt to",
    "start": "1711440",
    "end": "1717679"
  },
  {
    "text": "you know install pac install operators out of that package so there's lots of interesting kind of ci workflows that we",
    "start": "1717679",
    "end": "1724159"
  },
  {
    "text": "can build on top of this new format and then lastly at the very end of this",
    "start": "1724159",
    "end": "1730799"
  },
  {
    "text": "you know if all of that passes then the cool catalog could say you know yeah sorry i'm traveling i don't know if",
    "start": "1730799",
    "end": "1737120"
  },
  {
    "text": "you're trying to change slides but the slides are not changing that's okay yeah um",
    "start": "1737120",
    "end": "1743600"
  },
  {
    "text": "yeah i'll get to the next slide i just want to finish my thought here so the last thing is that once the entire ci",
    "start": "1744240",
    "end": "1750080"
  },
  {
    "text": "has passed and we merged that pr into the main branch um",
    "start": "1750080",
    "end": "1755279"
  },
  {
    "text": "we can actually build a new image for that so we have some examples of what this looks like right",
    "start": "1755279",
    "end": "1761039"
  },
  {
    "text": "so we have this cool catalog repo it's just an example but it kind of demonstrates how all of",
    "start": "1761039",
    "end": "1766640"
  },
  {
    "text": "this could work so in this case we've got just a single operator",
    "start": "1766640",
    "end": "1771840"
  },
  {
    "text": "we've got this etc folder we've got a docker file and we've got some github workflows",
    "start": "1771840",
    "end": "1777360"
  },
  {
    "text": "right so um the the current scd index has just got a",
    "start": "1777360",
    "end": "1782640"
  },
  {
    "text": "single version in it it it we declare our olin.package name it at cd we've got 0.6.1",
    "start": "1782640",
    "end": "1789440"
  },
  {
    "text": "so now we decide okay we've got an scd09.4 bundle that we want to add to",
    "start": "1789440",
    "end": "1795200"
  },
  {
    "text": "our index so we render that we can see what it looks like on our output we call render again we redirect it into",
    "start": "1795200",
    "end": "1802159"
  },
  {
    "text": "you know just cut it to the end of our index file and then we submit a pull request right",
    "start": "1802159",
    "end": "1807200"
  },
  {
    "text": "so we've just added some lines to our index file um this is what the rendered output",
    "start": "1807200",
    "end": "1812240"
  },
  {
    "text": "looks like there we've submitted this pull request to the cool catalog and we say like hey we want the index to be updated such that this new 0.9.4 version",
    "start": "1812240",
    "end": "1820720"
  },
  {
    "text": "is available to users who are using this catalog in the cluster",
    "start": "1820720",
    "end": "1826320"
  },
  {
    "text": "so then you know it goes through that ci and review process i was explaining we've got some",
    "start": "1826320",
    "end": "1832960"
  },
  {
    "text": "github actions that basically can",
    "start": "1832960",
    "end": "1838320"
  },
  {
    "text": "build the image and push the image to a cluster and then at the end of this run after this thing is merged",
    "start": "1838320",
    "end": "1845520"
  },
  {
    "text": "we've got a brand new catalog image pushed that has this 0.9.4",
    "start": "1845520",
    "end": "1851279"
  },
  {
    "text": "version available um so at that point then users of of this catalog will",
    "start": "1851279",
    "end": "1858799"
  },
  {
    "text": "potentially get an automatic update if they've been to a tag that we're updating or they can go and add it you",
    "start": "1858799",
    "end": "1864720"
  },
  {
    "text": "know if they don't have this catalog yet in the cluster they can add a catalog via catalog source and and",
    "start": "1864720",
    "end": "1870480"
  },
  {
    "text": "now they'll be able to install uh the sd 0.9.4 version",
    "start": "1870480",
    "end": "1876559"
  },
  {
    "text": "so um there's lots of resources here we're constantly updating our documentation if you go to the olim dot",
    "start": "1876559",
    "end": "1883039"
  },
  {
    "text": "operator framework dot io website we've got all the docs um and and there's lots of docs about this",
    "start": "1883039",
    "end": "1888960"
  },
  {
    "text": "new file base catalog if you want to check out the this example cool catalog workflow",
    "start": "1888960",
    "end": "1895760"
  },
  {
    "text": "here's the link to that it's just operated framework slash cool catalog in github",
    "start": "1895760",
    "end": "1901360"
  },
  {
    "text": "and then if you have if you're interested in olm and you want to join the olm or the operator framework",
    "start": "1901360",
    "end": "1906720"
  },
  {
    "text": "community we'd be super interested we're a cncf incubation project we have weekly meetings um between just",
    "start": "1906720",
    "end": "1913440"
  },
  {
    "text": "kind of open public working group meetings and then issue triage meetings if you're interested in discussing",
    "start": "1913440",
    "end": "1919200"
  },
  {
    "text": "anything with us at those we'd be happy to have you and then we also have a a mailing list",
    "start": "1919200",
    "end": "1925200"
  },
  {
    "text": "so we're interested in you know hearing what you think about the project if you have questions or comments and want to",
    "start": "1925200",
    "end": "1931039"
  },
  {
    "text": "talk to us there awesome um if you want more live chat discussion we've got an olm dev channel in the uh",
    "start": "1931039",
    "end": "1938480"
  },
  {
    "text": "kubernetes slack and then there's always you know the full listing of ways to get in touch with us in the olin community page",
    "start": "1938480",
    "end": "1945279"
  },
  {
    "text": "um so we're we're super interested in getting more eyes on this project and more contributors to the project",
    "start": "1945279",
    "end": "1951760"
  },
  {
    "text": "so we welcome any contribution uh from the community that we can get",
    "start": "1951760",
    "end": "1958880"
  },
  {
    "text": "and i think that's all i've got um did you have anything else yeah no just thanks for joining",
    "start": "1958880",
    "end": "1964799"
  },
  {
    "text": "everybody um uh we'll be sticking around to answer any of our questions uh so we'll talk to you there thank you",
    "start": "1964799",
    "end": "1972799"
  },
  {
    "text": "thanks",
    "start": "1972799",
    "end": "1975799"
  }
]