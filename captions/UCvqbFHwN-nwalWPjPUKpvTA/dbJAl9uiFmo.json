[
  {
    "text": "all right so uh this talk is about distributed tracing with uh open Telemetry and uh K native um I was",
    "start": "440",
    "end": "8240"
  },
  {
    "text": "supposed to do this talk with my colleague Daniel uh unfortunately he couldn't make it he was actually",
    "start": "8240",
    "end": "14240"
  },
  {
    "text": "supposed to be the main speaker so uh if you don't like this talk then just blame him okay all right um so just a few",
    "start": "14240",
    "end": "22920"
  },
  {
    "text": "words about myself so my name is uh Kevin du I'm based in Belgium I uh work",
    "start": "22920",
    "end": "28560"
  },
  {
    "text": "for uh Red Hat as a developer Advocate and um yeah I contribute also to some uh",
    "start": "28560",
    "end": "35800"
  },
  {
    "text": "Community projects you can find me on uh all those channels um so this talk is",
    "start": "35800",
    "end": "41719"
  },
  {
    "text": "about observability right so being able to see uh what's going on in uh well in",
    "start": "41719",
    "end": "47719"
  },
  {
    "text": "our applications but maybe let's take a step back in uh into the past so this uh",
    "start": "47719",
    "end": "56320"
  },
  {
    "text": "uh soccer or football player depending on where you're from uh uh this is a a player called Sylvio poola he played for",
    "start": "56320",
    "end": "63879"
  },
  {
    "text": "Lazio which is my team um and so in this picture we see kind of a lot going on",
    "start": "63879",
    "end": "68880"
  },
  {
    "text": "right we see like this guy in the back he's lying on his back with his legs up we see uh our main player who may or may",
    "start": "68880",
    "end": "76040"
  },
  {
    "text": "not have kicked the ball maybe he's going to score I don't know maybe he got pulled down by the other player we don't",
    "start": "76040",
    "end": "81960"
  },
  {
    "text": "know right cuz this happened in the past there's no recording of this um we have",
    "start": "81960",
    "end": "87799"
  },
  {
    "text": "no data no Telemetry about what happened here so fast forward to uh a few years",
    "start": "87799",
    "end": "96399"
  },
  {
    "text": "ago so I don't know if anybody remembers this game uh Japan against uh Spain it",
    "start": "96399",
    "end": "102280"
  },
  {
    "text": "was a pretty exciting game and uh so in this instance we see that the ball seems",
    "start": "102280",
    "end": "108520"
  },
  {
    "text": "to be out and uh Japan went on to score I believe um but thankfully in this case",
    "start": "108520",
    "end": "116880"
  },
  {
    "text": "we do have uh data right we can go back in the past we can see what happened uh",
    "start": "116880",
    "end": "123119"
  },
  {
    "text": "and we can verify that you know really this ball was in or out because we actually have the exact image that shows",
    "start": "123119",
    "end": "130679"
  },
  {
    "text": "this ball was in it still doesn't look like it but there's this tiny sliver that's still within the line and so in",
    "start": "130679",
    "end": "137959"
  },
  {
    "text": "uh football or soccer the rule is that the ball has to be completely out of the",
    "start": "137959",
    "end": "143239"
  },
  {
    "text": "external line right so this was uh a valid goal and um you know thanks to",
    "start": "143239",
    "end": "149200"
  },
  {
    "text": "having observed ability we can verify that that's actually what happened so",
    "start": "149200",
    "end": "154239"
  },
  {
    "text": "what does this have to do with software of course um well we also want to have visibility into what happened we want to",
    "start": "154239",
    "end": "161120"
  },
  {
    "text": "be able to go back in the past and you know see like what happened in uh in this occasion you know if somebody uh an",
    "start": "161120",
    "end": "168840"
  },
  {
    "text": "end user or somebody from the business comes and tells us hey there was an issue with your software you want to be",
    "start": "168840",
    "end": "174720"
  },
  {
    "text": "able to go and find out what happened you want to know exactly uh for this particular request this is what happened",
    "start": "174720",
    "end": "181440"
  },
  {
    "text": "and so that's what uh uh Telemetry and open uh and observability is all about",
    "start": "181440",
    "end": "187720"
  },
  {
    "text": "so from a developer perspective you know we want to know what is the health of my application is it uh is the performance",
    "start": "187720",
    "end": "194640"
  },
  {
    "text": "okay uh if there's an error what was the root cause um of the error and the def",
    "start": "194640",
    "end": "200280"
  },
  {
    "text": "or the defect and um what are some performance bottlenecks you know are",
    "start": "200280",
    "end": "206080"
  },
  {
    "text": "certain requests taken a long time and especially in distributor architectures where we may have you know one service",
    "start": "206080",
    "end": "212319"
  },
  {
    "text": "calling another service calling another service um how can we Trace through that and see you know like first of all how",
    "start": "212319",
    "end": "219200"
  },
  {
    "text": "did the request go through our system uh what happened to uh to to our requests",
    "start": "219200",
    "end": "226400"
  },
  {
    "text": "how long did each component take and and we can drill down into the details of that right so that's the ideal world of",
    "start": "226400",
    "end": "233560"
  },
  {
    "text": "uh you know observability and tracing so in terms of uh kind of the",
    "start": "233560",
    "end": "238959"
  },
  {
    "text": "observability main uh component so we have three three",
    "start": "238959",
    "end": "244159"
  },
  {
    "text": "main pillars so on the one hand we have metrics where we can find out you know like uh all the good numbers that we're",
    "start": "244159",
    "end": "251840"
  },
  {
    "text": "interested in right how long did it take what is the uh memory usage of my uh jbm",
    "start": "251840",
    "end": "258560"
  },
  {
    "text": "for example what is the garbage collector doing if you're uh using a a",
    "start": "258560",
    "end": "264520"
  },
  {
    "text": "Java application for example you can get all those metrics and then find out you know like how can we improve application",
    "start": "264520",
    "end": "270639"
  },
  {
    "text": "or is there is there an issue then also logs I mean most of you are probably aware of uh of logging so being access",
    "start": "270639",
    "end": "278280"
  },
  {
    "text": "to having access to certain data that uh that we're exporting in terms of logs",
    "start": "278280",
    "end": "283800"
  },
  {
    "text": "and then being able to trace through our application which is the main uh component that we're going to be talking",
    "start": "283800",
    "end": "289560"
  },
  {
    "text": "about today so uh being able to go uh again through uh requests and exactly",
    "start": "289560",
    "end": "295880"
  },
  {
    "text": "follow the trace of what was going on so we can find out you know what line of code is actually having issues what",
    "start": "295880",
    "end": "302400"
  },
  {
    "text": "request was uh was causing the damage here so where do you get started with",
    "start": "302400",
    "end": "307800"
  },
  {
    "text": "this right because uh if we look at the cloud native Computing Foundation landscape we can see that there's many",
    "start": "307800",
    "end": "314520"
  },
  {
    "text": "tools out there um and there's a lot of really good ones but you know you kind of have to pick and choose and um you",
    "start": "314520",
    "end": "322400"
  },
  {
    "text": "know there's kind of too many choices right so um but once you've made your",
    "start": "322400",
    "end": "328319"
  },
  {
    "text": "choice uh a lot of the kind of more let's say Legacy tools they're not open-",
    "start": "328319",
    "end": "336639"
  },
  {
    "text": "Source or only certain components are open- source and maybe you have one tool for the instrumentation of how to",
    "start": "336639",
    "end": "343720"
  },
  {
    "text": "integrate this uh this um uh observability stack into your code uh",
    "start": "343720",
    "end": "349639"
  },
  {
    "text": "maybe you have something else uh for collecting that data then another one for processing that data and it means",
    "start": "349639",
    "end": "357039"
  },
  {
    "text": "that you know you kind of end up being locked in to that provider because especially if you have to uh instrument",
    "start": "357039",
    "end": "364280"
  },
  {
    "text": "into your code you have to uh put certain libraries into your code certain ways of uh of integrating with these",
    "start": "364280",
    "end": "370960"
  },
  {
    "text": "tools you end up with uh with a little bit of a mess if you would then want to switch to another provider right in",
    "start": "370960",
    "end": "377599"
  },
  {
    "text": "terms of the actual observability stack it's a little bit less uh complicated in",
    "start": "377599",
    "end": "385319"
  },
  {
    "text": "the sense that you know you the the migration from one tool to another isn't",
    "start": "385319",
    "end": "390680"
  },
  {
    "text": "necessarily that bad uh but if we have to refactor our code that's uh that's",
    "start": "390680",
    "end": "395960"
  },
  {
    "text": "not good right that's uh going to be a very expensive project so we want to make sure that what we're using for our",
    "start": "395960",
    "end": "403039"
  },
  {
    "text": "observability in terms of instrumentation is going to be um open source ideally um and so the industry",
    "start": "403039",
    "end": "410039"
  },
  {
    "text": "has fortunately also uh converged into you know like hey it's probably better",
    "start": "410039",
    "end": "416080"
  },
  {
    "text": "if we use open source that means that you know other uh people who are using a different provider can come to my pro",
    "start": "416080",
    "end": "423120"
  },
  {
    "text": "project if I'm uh running a project but it also means uh that we can work in an",
    "start": "423120",
    "end": "428280"
  },
  {
    "text": "open way right so in we don't just create open- Source software but also",
    "start": "428280",
    "end": "433319"
  },
  {
    "text": "Open Standards right and so the industry has created this new kind of open",
    "start": "433319",
    "end": "438680"
  },
  {
    "text": "standard for doing Telemetry so originally there was a",
    "start": "438680",
    "end": "444400"
  },
  {
    "text": "project um that was called open tracing which was a nice tool for uh for tracing",
    "start": "444400",
    "end": "451039"
  },
  {
    "text": "in an open source way um and then there was another project called open sensus and open sensus is more focused on kind",
    "start": "451039",
    "end": "458560"
  },
  {
    "text": "of like Edge um uh iot kind of devices",
    "start": "458560",
    "end": "464000"
  },
  {
    "text": "and doing the tracing for that but so now we have you know multiple standards",
    "start": "464000",
    "end": "469039"
  },
  {
    "text": "multiple projects and you know how it goes right I mean you start with uh 14 standards now you add one that you know",
    "start": "469039",
    "end": "476440"
  },
  {
    "text": "is going to be more standard and then you end up with 15 standards because the other ones are still there so",
    "start": "476440",
    "end": "483039"
  },
  {
    "text": "fortunately in this case the two projects actually uh got together and said hey you know we're both doing kind",
    "start": "483039",
    "end": "490159"
  },
  {
    "text": "of uh the same thing we're both tackling the same thing in an open source way uh let's converge into a new project and",
    "start": "490159",
    "end": "498240"
  },
  {
    "text": "that's uh open Telemetry and so uh this is yeah you could say this is yet",
    "start": "498240",
    "end": "504000"
  },
  {
    "text": "another standard um but yeah you know ideally the two other standards for uh",
    "start": "504000",
    "end": "509639"
  },
  {
    "text": "for uh for open tracing and open census can uh you know kind of fade away so",
    "start": "509639",
    "end": "516399"
  },
  {
    "text": "open Telemetry is a uh relatively new project um but it's been uh very popular",
    "start": "516399",
    "end": "524760"
  },
  {
    "text": "in uh in the cloud native world so you can see um open Telemetry was actually",
    "start": "524760",
    "end": "530320"
  },
  {
    "text": "uh after kubernetes the most worked on Project last year so this is a very uh",
    "start": "530320",
    "end": "535360"
  },
  {
    "text": "uh very active project and not just you know people working on uh the core of open Telemetry but you",
    "start": "535360",
    "end": "542000"
  },
  {
    "text": "know it's all these providers that are now integrating with open Telemetry to",
    "start": "542000",
    "end": "547040"
  },
  {
    "text": "have an open standard so that we as developers can just use open Telemetry",
    "start": "547040",
    "end": "553320"
  },
  {
    "text": "specifications and then it's kind of up to the platform Engineers to decide you",
    "start": "553320",
    "end": "559000"
  },
  {
    "text": "know what what tool is going to ingest that data and and handle that so we have a nice open way of uh of",
    "start": "559000",
    "end": "567000"
  },
  {
    "text": "working so the components of um open Telemetry on the one hand is you know",
    "start": "567000",
    "end": "573000"
  },
  {
    "text": "providing a common specification for uh you know how can we uh produce our",
    "start": "573000",
    "end": "579480"
  },
  {
    "text": "Telemetry how can we send our Telemetry um and then the second part is the",
    "start": "579480",
    "end": "585079"
  },
  {
    "text": "instrumentation so you know how can we actually integrate this into our code and so we can do that with open",
    "start": "585079",
    "end": "591320"
  },
  {
    "text": "Telemetry in different ways we can do a push uh system we can do a pull system",
    "start": "591320",
    "end": "596399"
  },
  {
    "text": "we can have an agent uh running on our systems that collects that uh sends the",
    "start": "596399",
    "end": "602079"
  },
  {
    "text": "data um we can have libraries uh standard open Telemetry libraries in our",
    "start": "602079",
    "end": "607320"
  },
  {
    "text": "code um and and do that in a nice lightweight uh way and then also in",
    "start": "607320",
    "end": "612360"
  },
  {
    "text": "terms of The Collector having a standard way of collecting this data uh to you",
    "start": "612360",
    "end": "617519"
  },
  {
    "text": "know a provider that uh that handles it and you know that you can actually use to consult your uh",
    "start": "617519",
    "end": "625959"
  },
  {
    "text": "Telemetry so um this is fine right so we have now a tool for doing uh tracing but",
    "start": "625959",
    "end": "633800"
  },
  {
    "text": "what about you know distributed applications and especially serverless applications so uh with serverless",
    "start": "633800",
    "end": "640200"
  },
  {
    "text": "applications the idea is that you know you're going to scale up when there's uh high demand and then scale back down",
    "start": "640200",
    "end": "646000"
  },
  {
    "text": "potentially to zero uh if there's no traffic right and you wait and then you know when once there's traffic again you",
    "start": "646000",
    "end": "652240"
  },
  {
    "text": "handle more requests um and so let's talk a little bit about serverless before we continue with uh with the",
    "start": "652240",
    "end": "658760"
  },
  {
    "text": "trace in part of it so one project that does that kind of in a kubernetes native",
    "start": "658760",
    "end": "663839"
  },
  {
    "text": "way is is K native it tries to make serverless kind of uh seamless to work",
    "start": "663839",
    "end": "669399"
  },
  {
    "text": "with uh for developers so on the one hand makes it easier to uh deploy two",
    "start": "669399",
    "end": "674720"
  },
  {
    "text": "kubernetes and then uh automatically adds uh Auto scaling out of the box in",
    "start": "674720",
    "end": "679920"
  },
  {
    "text": "terms of requests right it doesn't need to check for metrics in terms of uh RAM and CPU it just looks at you know what",
    "start": "679920",
    "end": "686920"
  },
  {
    "text": "kind of requests are coming in uh if there's you know a lot of requests come in scale up if there's no requests",
    "start": "686920",
    "end": "693240"
  },
  {
    "text": "coming in scale down to zero so it's very reactive um that's just one component of uh of K native there's uh",
    "start": "693240",
    "end": "700480"
  },
  {
    "text": "actually uh quite a few interesting uh capabilities that you can do with K native in terms of Eventing as well so",
    "start": "700480",
    "end": "707279"
  },
  {
    "text": "plugging in uh different Eventing systems um but that's kind of beside the",
    "start": "707279",
    "end": "713160"
  },
  {
    "text": "the point of this talk right now we're mostly interested in the in the auto scaling and then ESP especially with the",
    "start": "713160",
    "end": "719800"
  },
  {
    "text": "fact that you know if you're if you have a container running and you want to consult the data the the Telemetry of it",
    "start": "719800",
    "end": "726920"
  },
  {
    "text": "that's you know relatively easy because you can uh you know look into your pod",
    "start": "726920",
    "end": "732040"
  },
  {
    "text": "and see what's going on but with serverless if it scales down to zero then well there's no more pods there's",
    "start": "732040",
    "end": "738279"
  },
  {
    "text": "no more containers so how can we consult our data right so we need a distributed way of handling uh this and of course uh",
    "start": "738279",
    "end": "746040"
  },
  {
    "text": "we'll do that with uh with open telemetry um so I'm a a Java developer at uh you",
    "start": "746040",
    "end": "755199"
  },
  {
    "text": "know at my core and so for me it was interesting to do this uh serverless uh Java um and so I don't",
    "start": "755199",
    "end": "763600"
  },
  {
    "text": "know you know how how many Java developers are here a few nice I like it I'm always",
    "start": "763600",
    "end": "769880"
  },
  {
    "text": "afraid to ask this question at uh at cncf events because uh um but actually",
    "start": "769880",
    "end": "777240"
  },
  {
    "text": "uh using Java with Cloud native and serverless isn't always so great because",
    "start": "777240",
    "end": "783760"
  },
  {
    "text": "you know traditional Java the idea was that it runs on these big kind of dedicated servers and if you want to you",
    "start": "783760",
    "end": "789160"
  },
  {
    "text": "know scale up you know you do vertical scaling or you add CPU and memory um and",
    "start": "789160",
    "end": "795160"
  },
  {
    "text": "so but the Java ecosystem is pretty awesome there's a lot of uh a lot of things that you can do with Java a",
    "start": "795160",
    "end": "800839"
  },
  {
    "text": "really great Community um and so actually there's been some uh some",
    "start": "800839",
    "end": "805959"
  },
  {
    "text": "recent developments in Java over the last few years to make it uh much nicer",
    "start": "805959",
    "end": "811320"
  },
  {
    "text": "to to use with Cloud native and with serverless and so one project that I'm particularly uh passionate about is uh",
    "start": "811320",
    "end": "818560"
  },
  {
    "text": "is quarkus so we're going to use quarkus with K native and open Telemetry in a in",
    "start": "818560",
    "end": "823839"
  },
  {
    "text": "a little demo in uh in just a little bit to show you kind of how they all work hand inand as an example of how to use",
    "start": "823839",
    "end": "830040"
  },
  {
    "text": "uh open Telemetry but again you can use open Telemetry uh it's uh you know the",
    "start": "830040",
    "end": "836519"
  },
  {
    "text": "idea is that it supports you know all uh programming languages so there's uh instrumentation for the main languages",
    "start": "836519",
    "end": "843240"
  },
  {
    "text": "like go node.js Python and and stuff like that too but of course also uh Java",
    "start": "843240",
    "end": "849000"
  },
  {
    "text": "but so uh real quick um you know kind of introduction on corcus if you're not interested or",
    "start": "849000",
    "end": "855519"
  },
  {
    "text": "not uh you don't know quarkus yet so the idea is that it's a uh supersonic",
    "start": "855519",
    "end": "861360"
  },
  {
    "text": "subatomic Java so very fast very small footprint uh but still Java so all those",
    "start": "861360",
    "end": "867639"
  },
  {
    "text": "Java developers with knowledge and their ecosystem can continue using it in kind of a cloud native uh way so the idea",
    "start": "867639",
    "end": "875120"
  },
  {
    "text": "with uh with corcus is that it moves a lot of that stuff that Java usually does during startup time it does a lot of",
    "start": "875120",
    "end": "881480"
  },
  {
    "text": "optimization with the jvm it moves that to the build phase and that's how it is able to uh optimize that startup time a",
    "start": "881480",
    "end": "888120"
  },
  {
    "text": "lot more and then there's uh projects out there like grow VM to even do a native compilation of your application",
    "start": "888120",
    "end": "894639"
  },
  {
    "text": "and it starts up even faster and has a smaller footprint but you know uh corcus",
    "start": "894639",
    "end": "900959"
  },
  {
    "text": "does more kind of I I wouldn't say magic because you know it's it's all very well",
    "start": "900959",
    "end": "906880"
  },
  {
    "text": "documented uh but a lot of optimization for for cloud native development in terms of uh performance but also in",
    "start": "906880",
    "end": "913600"
  },
  {
    "text": "terms of developer joy and you're going to see in my uh demo how I'm going to",
    "start": "913600",
    "end": "918880"
  },
  {
    "text": "really uh create um interactions with kubernetes and open Telemetry in a very",
    "start": "918880",
    "end": "924399"
  },
  {
    "text": "easy way um so yeah the you know kind of the highlights of quarcus there's a focus on",
    "start": "924399",
    "end": "931079"
  },
  {
    "text": "performance on productivity it's kind of they call a cube native Java so very",
    "start": "931079",
    "end": "936920"
  },
  {
    "text": "easy to work with kubernetes and it focuses again on standards just like open Telemetry right uh just uh main",
    "start": "936920",
    "end": "943759"
  },
  {
    "text": "standards and not anything specific to uh to quarkus itself so let's uh look at",
    "start": "943759",
    "end": "950800"
  },
  {
    "text": "a little demo here so who likes live demos hopefully everyone you never know",
    "start": "950800",
    "end": "956360"
  },
  {
    "text": "what's going to go wrong right so uh here's here's my little project that I've already created so if you're uh if",
    "start": "956360",
    "end": "961759"
  },
  {
    "text": "you're familiar with Java you'll see that you know we have our uh pom.xml and we have a source main Java folder and",
    "start": "961759",
    "end": "968639"
  },
  {
    "text": "all that good stuff um so uh let's take a look at that and uh run it real quick",
    "start": "968639",
    "end": "975920"
  },
  {
    "text": "so um as you can see in terms of dependencies uh in this case my",
    "start": "975920",
    "end": "981199"
  },
  {
    "text": "instrumentation is uh in my dependency so I have an open Telemetry dependency",
    "start": "981199",
    "end": "987920"
  },
  {
    "text": "uh one for uh just a quarcus open Telemetry that's going to automatically out of the box do the instrumentation so",
    "start": "987920",
    "end": "995079"
  },
  {
    "text": "I don't need to add anything to my code to make this uh work and then I have uh also a specific one for the further",
    "start": "995079",
    "end": "1002639"
  },
  {
    "text": "instrumentation using the open Telemetry spec uh to have also tracing",
    "start": "1002639",
    "end": "1008480"
  },
  {
    "text": "capabilities into my database requests so uh let's uh let's run this real quick",
    "start": "1008480",
    "end": "1014399"
  },
  {
    "text": "on my local machine so I can just do uh corcus Dev that's going to start up this app application on my local machine um",
    "start": "1014399",
    "end": "1020959"
  },
  {
    "text": "and actually even start up a container with uh with my dependency with my database dependency which is kind of",
    "start": "1020959",
    "end": "1026760"
  },
  {
    "text": "Handy and so uh let's see hopefully this is uh running we have a connection",
    "start": "1026760",
    "end": "1033079"
  },
  {
    "text": "refuse that's always fun I'm going to go look at my podman desktop and so looks",
    "start": "1033079",
    "end": "1038400"
  },
  {
    "text": "like our postgress is running but my tracing was not running so I'll go ahead and get that started maybe I'll start",
    "start": "1038400",
    "end": "1046160"
  },
  {
    "text": "this up real quick again to make sure that it makes makes its uh connection and then we're going to make a few requests in our local machine and then",
    "start": "1046160",
    "end": "1052480"
  },
  {
    "text": "we'll deploy it of course to kubernetes because that's kind of the the main point right to have this work in a",
    "start": "1052480",
    "end": "1059000"
  },
  {
    "text": "distributed way and I'll deploy this as a serverless application so let's go",
    "start": "1059000",
    "end": "1064440"
  },
  {
    "text": "look at our uh browser and so let's see Mr Firefox here we can oh",
    "start": "1064440",
    "end": "1071200"
  },
  {
    "text": "congratulations your application is running and so I have this uh endpoint uh places that just shows like like uh",
    "start": "1071200",
    "end": "1079000"
  },
  {
    "text": "where I've been recently and yes I the last one was Singapore",
    "start": "1079000",
    "end": "1084120"
  },
  {
    "text": "cool uh so just uh to let you also see I don't have any dependencies on open",
    "start": "1084120",
    "end": "1090559"
  },
  {
    "text": "Telemetry in my code right so this is all just orchestrated by having the dependency on uh open Telemetry so uh",
    "start": "1090559",
    "end": "1098200"
  },
  {
    "text": "let me make a few requests here so I'm going to hit refresh a couple times and",
    "start": "1098200",
    "end": "1103400"
  },
  {
    "text": "then uh go to my uh local hosts uh 16 blah blah blah so in in my",
    "start": "1103400",
    "end": "1111480"
  },
  {
    "text": "case I'm using jger but you can use Tempo with our friends here from uh from",
    "start": "1111480",
    "end": "1117280"
  },
  {
    "text": "grafana um I'm I'm using Jer in this case and you can see that it automatically uh integrated with uh with",
    "start": "1117280",
    "end": "1124600"
  },
  {
    "text": "my application so was able to see that um application and now I can find the traces um and we can see 13 traces from",
    "start": "1124600",
    "end": "1132919"
  },
  {
    "text": "from my requests and so I can see here I called the endpoint places there are three spans in there and so I can see",
    "start": "1132919",
    "end": "1141320"
  },
  {
    "text": "you know kind of uh What uh happened in my code what processes were being called",
    "start": "1141320",
    "end": "1147320"
  },
  {
    "text": "and then uh I can also see uh the um the uh database request so",
    "start": "1147320",
    "end": "1155720"
  },
  {
    "text": "me uh make this a little bit smaller there we",
    "start": "1155720",
    "end": "1162760"
  },
  {
    "text": "go let's go back and then scroll down wow this is uh",
    "start": "1162760",
    "end": "1169640"
  },
  {
    "text": "and so I can also see my database request how long did it take like in this case",
    "start": "1169640",
    "end": "1174919"
  },
  {
    "text": "135 uh microc seconds we can see how long uh the actual query took uh which",
    "start": "1174919",
    "end": "1181360"
  },
  {
    "text": "is hidden underneath here the select statement so I got all that data um kind of out of the box in my Java application",
    "start": "1181360",
    "end": "1188520"
  },
  {
    "text": "and again is the same way with uh with other applications uh by just adding the open Telemetry uh dependency to my",
    "start": "1188520",
    "end": "1195720"
  },
  {
    "text": "project right so I can see that it's running on my local machine Let's uh go ahead and uh stop this and then deploy",
    "start": "1195720",
    "end": "1202600"
  },
  {
    "text": "it um and so in this case I just have a few application properties uh to work uh",
    "start": "1202600",
    "end": "1210799"
  },
  {
    "text": "with my open Telemetry here so I have an uh an endpoint where my traces are going to be collected and then uh just um I",
    "start": "1210799",
    "end": "1220039"
  },
  {
    "text": "I'm formatting my data in a specific way but by default you would just uh be able to do that too and then uh just some uh",
    "start": "1220039",
    "end": "1227880"
  },
  {
    "text": "addition deployment Target K native so that it knows to deploy it to K native",
    "start": "1227880",
    "end": "1233320"
  },
  {
    "text": "so uh I can create a um a container image with uh just corcus image build so",
    "start": "1233320",
    "end": "1240520"
  },
  {
    "text": "makes it pretty easy to create containers with uh with corcus and we can see you know in a few seconds we",
    "start": "1240520",
    "end": "1246919"
  },
  {
    "text": "have our container image I'm not going to push it uh to my registry instead I'm just going to uh deploy so I'm doing",
    "start": "1246919",
    "end": "1253600"
  },
  {
    "text": "corus deploy um so corus has his kubernetes uh dependency and it creates",
    "start": "1253600",
    "end": "1260799"
  },
  {
    "text": "our yaml out of the box so because I have the K native um Target it creates a",
    "start": "1260799",
    "end": "1269039"
  },
  {
    "text": "k native service so I don't need to worry about uh creating kind of the default uh structure here and that's",
    "start": "1269039",
    "end": "1275559"
  },
  {
    "text": "going to make it so we can deploy our application to K native and I have the",
    "start": "1275559",
    "end": "1280919"
  },
  {
    "text": "container con currency set to one so that every request is going to uh create",
    "start": "1280919",
    "end": "1286320"
  },
  {
    "text": "a new um container uh a new pod so we're going to",
    "start": "1286320",
    "end": "1291720"
  },
  {
    "text": "see that it scales more in in that way so it's a little bit of a cheat because you wouldn't want to do this on",
    "start": "1291720",
    "end": "1297120"
  },
  {
    "text": "production for every request create uh create a separate pod if there's a concurrent request um all right so let's",
    "start": "1297120",
    "end": "1304320"
  },
  {
    "text": "see if this is working if uh if we're deploying our application to K",
    "start": "1304320",
    "end": "1309400"
  },
  {
    "text": "native uh so I'm uh using oh uh let's see what it's saying did I get logged",
    "start": "1309400",
    "end": "1316520"
  },
  {
    "text": "out or something uh maybe",
    "start": "1316520",
    "end": "1322679"
  },
  {
    "text": "that's see that's the fun of uh of of uh live demos right so I'm going to copy my",
    "start": "1322679",
    "end": "1328039"
  },
  {
    "text": "login command here with a get a token for it",
    "start": "1328039",
    "end": "1334640"
  },
  {
    "text": "three log in couple times display token",
    "start": "1334640",
    "end": "1339720"
  },
  {
    "text": "so this is a you know one of one way that you can log into an open shift",
    "start": "1339720",
    "end": "1345440"
  },
  {
    "text": "cluster see go back to our command line if not uh we'll uh we'll deploy it",
    "start": "1345480",
    "end": "1354360"
  },
  {
    "text": "from the UI that's always a nice alternative okay let's log in real",
    "start": "1354360",
    "end": "1361480"
  },
  {
    "text": "quick come on we need some holding music who can",
    "start": "1361600",
    "end": "1366720"
  },
  {
    "text": "play some holding music oh wow it's not uh oh no that's I thought I thought I",
    "start": "1366720",
    "end": "1372760"
  },
  {
    "text": "saw more errors but it still hasn't gone uh forward all right come on why is it taking so long",
    "start": "1372760",
    "end": "1378880"
  },
  {
    "text": "if not all right my patience has run out so I was going to show this from uh from",
    "start": "1378880",
    "end": "1384640"
  },
  {
    "text": "the application but what I can also do is just uh add to project uh container",
    "start": "1384640",
    "end": "1390200"
  },
  {
    "text": "image and then uh I have of course an image of already",
    "start": "1390200",
    "end": "1396000"
  },
  {
    "text": "ready and I'm going to deploy that to a uh new application corus and then uh I",
    "start": "1396000",
    "end": "1405279"
  },
  {
    "text": "want to make this of course a serverless deployment otherwise we're not using K native and I want to make it so that it",
    "start": "1405279",
    "end": "1411799"
  },
  {
    "text": "scales uh so you can specify here you know like minimum or maximum pods I'm",
    "start": "1411799",
    "end": "1417120"
  },
  {
    "text": "going to set my concurrency Target to one so create actually let's make this",
    "start": "1417120",
    "end": "1422880"
  },
  {
    "text": "autoscale window but lets a little shorter okay so this should be the same",
    "start": "1422880",
    "end": "1428320"
  },
  {
    "text": "thing so I'm deploying my application as a serverless application in uh in my project so let's",
    "start": "1428320",
    "end": "1435120"
  },
  {
    "text": "uh give this a second so we can see that it's it's starting up um you know we can",
    "start": "1435120",
    "end": "1440559"
  },
  {
    "text": "look at logs here and see that you know it's started",
    "start": "1440559",
    "end": "1446039"
  },
  {
    "text": "in 90 milliseconds which isn't so bad for Java right and uh so if we go look at our",
    "start": "1446039",
    "end": "1452760"
  },
  {
    "text": "application now let's open the URL we can see oh it's the same thing right uh",
    "start": "1452760",
    "end": "1460000"
  },
  {
    "text": "and uh we can go look at our places and again we can see the data",
    "start": "1460000",
    "end": "1465679"
  },
  {
    "text": "being loaded from the database that's also running in my project so I have a postgress database here and I'm going to",
    "start": "1465679",
    "end": "1471440"
  },
  {
    "text": "hit refresh a couple times and then uh go to my uh instance of jger that I've",
    "start": "1471440",
    "end": "1477080"
  },
  {
    "text": "deployed here as well and we should see that uh the same kind of uh thing is",
    "start": "1477080",
    "end": "1482679"
  },
  {
    "text": "going to happen right we're going to get the same data except this time we're running on uh on kubernetes on an open",
    "start": "1482679",
    "end": "1488520"
  },
  {
    "text": "shift uh instance and we can see that also in this case it was able to find the service automatically uh by um just",
    "start": "1488520",
    "end": "1497159"
  },
  {
    "text": "adding my uh instrumentation to my code so just that dependency and then telling",
    "start": "1497159",
    "end": "1502480"
  },
  {
    "text": "it where to find it and so we can see here we have those requests that were just made a few seconds ago when I hit",
    "start": "1502480",
    "end": "1508640"
  },
  {
    "text": "refresh and then uh again we can see that uh it's uh it did its request in",
    "start": "1508640",
    "end": "1514720"
  },
  {
    "text": "1.75 milliseconds so quite a bit faster than on my local machine so that's good",
    "start": "1514720",
    "end": "1519880"
  },
  {
    "text": "right ideally our our Cloud environment is going to be a little more performant than our than our local machine but as",
    "start": "1519880",
    "end": "1526360"
  },
  {
    "text": "you can see I mean this demo is very simple right I mean there's no kind of uh crazy stuff that I had to add um in",
    "start": "1526360",
    "end": "1534399"
  },
  {
    "text": "uh in this case because we're using serverless we're now autoscaled to zero um but you know my uh traces are still",
    "start": "1534399",
    "end": "1542080"
  },
  {
    "text": "there so I can still find you know if there were issues I can find which container which pod was uh was mis",
    "start": "1542080",
    "end": "1548960"
  },
  {
    "text": "misbehaving um and what line of my code was involved in everything so let's do one more fun thing uh let's send a bunch",
    "start": "1548960",
    "end": "1556600"
  },
  {
    "text": "of requests to to uh to this uh I had yeah let's do this let's send a th000",
    "start": "1556600",
    "end": "1563399"
  },
  {
    "text": "requests with a th000 uh concurrent well thousand concurrent requests and then make it see uh See if it it'll handle my",
    "start": "1563399",
    "end": "1571320"
  },
  {
    "text": "requests um uh in a nice way right so we can see",
    "start": "1571320",
    "end": "1576600"
  },
  {
    "text": "that is creating uh 200 300 and whatever pods um hopefully not blowing up my",
    "start": "1576600",
    "end": "1582760"
  },
  {
    "text": "entire cluster here uh but let's see how how this is uh behaving so I'm going to",
    "start": "1582760",
    "end": "1588200"
  },
  {
    "text": "go and uh make sure that I hit some uh create some requests and so these should be going to uh to the same uh to the",
    "start": "1588200",
    "end": "1597039"
  },
  {
    "text": "same application and then uh if we go look at our uh tracing we can see that",
    "start": "1597039",
    "end": "1602880"
  },
  {
    "text": "you know even though we have a whole bunch of distributed applications we can see that you know they're still being",
    "start": "1602880",
    "end": "1609399"
  },
  {
    "text": "handled uh by the same Central collection uh uh collection place and so",
    "start": "1609399",
    "end": "1615320"
  },
  {
    "text": "you can see that you know in this this case I have one application running had",
    "start": "1615320",
    "end": "1620640"
  },
  {
    "text": "I had multiple they would all uh stream into this I would be able to trace through those different uh Services um",
    "start": "1620640",
    "end": "1628240"
  },
  {
    "text": "if I have uh different Services running on different clusters and they're connected um same thing right they're",
    "start": "1628240",
    "end": "1635320"
  },
  {
    "text": "all streaming to my central collector and then uh I can see I can access and",
    "start": "1635320",
    "end": "1640559"
  },
  {
    "text": "have observability of my application and you know like thanks of K native we can see that we can scale up very fast scale",
    "start": "1640559",
    "end": "1647360"
  },
  {
    "text": "down very fast because now all those pods are terminating because I'm not sending any more request and so it's",
    "start": "1647360",
    "end": "1654000"
  },
  {
    "text": "just going to go to sleep uh and wait for more requests to come in and you know as we saw in the previous keynote",
    "start": "1654000",
    "end": "1661159"
  },
  {
    "text": "session that's good for the environment right not not using all those uh requests all right so that was a very",
    "start": "1661159",
    "end": "1669720"
  },
  {
    "text": "quick uh introduction into open Telemetry K native and uh also a little",
    "start": "1669720",
    "end": "1674880"
  },
  {
    "text": "bit of corus sorry about uh the job Java stuff um I I like Java um we uh at Red",
    "start": "1674880",
    "end": "1683000"
  },
  {
    "text": "Hat developers we are lucky because uh red hat is also uh likes to sponsor some",
    "start": "1683000",
    "end": "1689600"
  },
  {
    "text": "of our books and makes them available uh for users so if you're interested there's a whole bunch more books there's",
    "start": "1689600",
    "end": "1696080"
  },
  {
    "text": "actually some uh some K Native Books I believe too um so you can download them for free uh thanks to uh thanks to Red",
    "start": "1696080",
    "end": "1703519"
  },
  {
    "text": "Hat and then um that's uh that's about it for my talk so uh thank you and um",
    "start": "1703519",
    "end": "1711600"
  },
  {
    "text": "have a nice rest of the [Applause]",
    "start": "1711600",
    "end": "1717919"
  },
  {
    "text": "day so I think we have one minute for uh maybe one question if anybody has a",
    "start": "1717919",
    "end": "1727000"
  },
  {
    "text": "question I have stickers so if you ask a question you can have a sticker and if you don't ask a question you can also",
    "start": "1728360",
    "end": "1734279"
  },
  {
    "text": "have a sticker",
    "start": "1734279",
    "end": "1739399"
  },
  {
    "text": "we have 59 seconds for a question no nobody all right you can find me uh in",
    "start": "1739919",
    "end": "1746600"
  },
  {
    "text": "the in the room uh over there uh if you have any questions and you don't want to be put on the spot so that's fine too so",
    "start": "1746600",
    "end": "1754679"
  },
  {
    "text": "uh oh there we go one question I don't know if we have a the microphone in the",
    "start": "1754679",
    "end": "1759840"
  },
  {
    "text": "aisle in the aisle there's a microphone ah there's a there's a microphone if maybe somebody can pass it",
    "start": "1759840",
    "end": "1769320"
  },
  {
    "text": "along uh thanks for the demo I just wanted to ask one simple question like when you showed up the the open shift",
    "start": "1776840",
    "end": "1784240"
  },
  {
    "text": "right and then you try to deploy the application right you had actually the sess option is it like uh the ctive",
    "start": "1784240",
    "end": "1790519"
  },
  {
    "text": "implementation on top of that open shift and to use that that's what it means yeah exactly thanks for asking that",
    "start": "1790519",
    "end": "1796159"
  },
  {
    "text": "question yeah so because I added the K native or the open shift serverless which uses K native operator um I get",
    "start": "1796159",
    "end": "1804039"
  },
  {
    "text": "that option in the in the open shift UI to deploy as uh as serverless yeah is it",
    "start": "1804039",
    "end": "1809519"
  },
  {
    "text": "part of the open shift platform itself to have that yeah so you can add the open shift serverless operator as part",
    "start": "1809519",
    "end": "1815080"
  },
  {
    "text": "of the your your open shift platform yeah thank you",
    "start": "1815080",
    "end": "1820760"
  },
  {
    "text": "yeah that's time we have to go to break and transition to the next presenter I'll answer the question you can you can",
    "start": "1820799",
    "end": "1826600"
  },
  {
    "text": "ask some questions okay thank",
    "start": "1826600",
    "end": "1831039"
  },
  {
    "text": "you",
    "start": "1832080",
    "end": "1835080"
  }
]