[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "you all right I'd like to thank everyone",
    "start": "12900",
    "end": "19360"
  },
  {
    "text": "who's joining us today welcome to today's CN CF webinar best practices and implementing container image promotion",
    "start": "19360",
    "end": "25390"
  },
  {
    "text": "pipelines I'm Chris Jones Clark consultant at level 25 and a cloud native ambassador with the CN CF I'll be",
    "start": "25390",
    "end": "33400"
  },
  {
    "text": "moderating today's webinar we would like to welcome our presenters today bahu son who goes the head of DevOps advocacy at",
    "start": "33400",
    "end": "40449"
  },
  {
    "text": "j-rock sailor to that yep you're welcome",
    "start": "40449",
    "end": "50860"
  },
  {
    "text": "a few housekeeping items before we get started during the webinar you're not able to talk as an attendee there is a",
    "start": "50860",
    "end": "57579"
  },
  {
    "text": "Q&A box at the bottom of your screens right below the screen share from poll",
    "start": "57579",
    "end": "63539"
  },
  {
    "text": "please feel free to drop your questions in there and we'll get to as many as we can at the end",
    "start": "63539",
    "end": "69340"
  },
  {
    "text": "this is an official webinar of the CN CF and as such is subject to the CN CF code",
    "start": "69340",
    "end": "74470"
  },
  {
    "text": "of conduct please do not add anything to the chat or questions that would be in violation of the code of conduct",
    "start": "74470",
    "end": "80590"
  },
  {
    "text": "basically please just be respectful of all your fellow participants and presenters and with that I'll hand it",
    "start": "80590",
    "end": "86979"
  },
  {
    "text": "over to Balu to give up today's presentation thank you thank you very much Chris and let's get started yes so",
    "start": "86979",
    "end": "95200"
  },
  {
    "start": "90000",
    "end": "317000"
  },
  {
    "text": "we're going to talk about containers today and well when we say containers we",
    "start": "95200",
    "end": "102160"
  },
  {
    "text": "all love to entertain the idea that we don't have a lock-in and there are",
    "start": "102160",
    "end": "108489"
  },
  {
    "text": "different container implementations but between you and me when we say containers we main docker in most of the",
    "start": "108489",
    "end": "116830"
  },
  {
    "text": "times so excuse me if I refer to those terms interchangeably during today's",
    "start": "116830",
    "end": "123550"
  },
  {
    "text": "webinar because really looking at the industry we are in this state when we",
    "start": "123550",
    "end": "129369"
  },
  {
    "text": "say containers and min docker and Sado can mean containers now docker is",
    "start": "129369",
    "end": "134620"
  },
  {
    "text": "obviously amazing it revolutionized the way we do software and do everything",
    "start": "134620",
    "end": "141670"
  },
  {
    "text": "with software and how we go about software but as any software",
    "start": "141670",
    "end": "148690"
  },
  {
    "text": "is not perfect and this is a BM diagram that you can apply to everything or mostly any piece of software in your",
    "start": "148690",
    "end": "157000"
  },
  {
    "text": "life as a professional and if you think about it real good I believe you will",
    "start": "157000",
    "end": "163570"
  },
  {
    "text": "find this Venn diagram to be correct the software that we like is we like less as",
    "start": "163570",
    "end": "174160"
  },
  {
    "text": "we learn it real well and this is true for docker as well and one of the",
    "start": "174160",
    "end": "179650"
  },
  {
    "text": "consequences when we when we learn docker and discover how it works is that",
    "start": "179650",
    "end": "186480"
  },
  {
    "text": "we not necessarily trust it and I will elaborate about what we don't trust in",
    "start": "186480",
    "end": "192280"
  },
  {
    "text": "docker later and we will talk about how we can fix it and how can we build trust in what we have in our production",
    "start": "192280",
    "end": "200050"
  },
  {
    "text": "containers in the end of today and as Chris already mentioned my name is Baraka sagorsky I'm the chief sticker",
    "start": "200050",
    "end": "207430"
  },
  {
    "text": "officer enjoy frog it means that I go to conferences like the a cube con and give",
    "start": "207430",
    "end": "215500"
  },
  {
    "text": "people awesome stickers since we don't have a physical conferences now I cannot",
    "start": "215500",
    "end": "221709"
  },
  {
    "text": "give you awesome stickers so I will serve as the head of DevOps advocacy and",
    "start": "221709",
    "end": "228090"
  },
  {
    "text": "we will talk in this webinar the most important piece of information on this",
    "start": "228090",
    "end": "233320"
  },
  {
    "text": "slide is my twitter handle at je borrow a please feel free to connect with me on",
    "start": "233320",
    "end": "239500"
  },
  {
    "text": "Twitter we'll take the conversation there talking about code of content and how to behave this is an amazing diagram",
    "start": "239500",
    "end": "247090"
  },
  {
    "text": "from an amazing book the cultural map since all of us work in multicultural environment I really recommend you to",
    "start": "247090",
    "end": "253360"
  },
  {
    "text": "read it if you didn't and on this diagram you can see that the most",
    "start": "253360",
    "end": "258820"
  },
  {
    "text": "emotional and expressive and confrontational people in the world are from Israel and Russia well I managed to",
    "start": "258820",
    "end": "266230"
  },
  {
    "text": "be from both so if I somehow offend you",
    "start": "266230",
    "end": "274360"
  },
  {
    "text": "during this talk I apologize in advance the most important slide of this",
    "start": "274360",
    "end": "279910"
  },
  {
    "text": "presentation is the show notes you go to Jeff comes the shownotes and you will find a special page they are",
    "start": "279910",
    "end": "286630"
  },
  {
    "text": "dedicated to this webinar to be the top link you'll find the slides already uploaded there the video that will",
    "start": "286630",
    "end": "293260"
  },
  {
    "text": "upload later today all the links to everything I mentioned including the culture map book that we just spoke",
    "start": "293260",
    "end": "298900"
  },
  {
    "text": "about the place to for commenting for for for rating and a very very nice",
    "start": "298900",
    "end": "306340"
  },
  {
    "text": "raffle for thanking you for being here it's a Nintendo switch light with Animal",
    "start": "306340",
    "end": "312250"
  },
  {
    "text": "Crossing game definitely should try and participate in win okay so this is kind",
    "start": "312250",
    "end": "318790"
  },
  {
    "start": "317000",
    "end": "485000"
  },
  {
    "text": "of my house holding items let's get back to it promotion pipelines for containers",
    "start": "318790",
    "end": "325290"
  },
  {
    "text": "when we talk about a concept that we want to apply we will usually look at is",
    "start": "325290",
    "end": "332980"
  },
  {
    "text": "it something that will already did and how should we adopt it and the good news are that CIC the pipeline's promotion",
    "start": "332980",
    "end": "342250"
  },
  {
    "text": "pipelines we do them for years this is no not a no mean a new concept and I'm",
    "start": "342250",
    "end": "347500"
  },
  {
    "text": "sure all of you are familiar with those pipelines and how they work this is the",
    "start": "347500",
    "end": "353170"
  },
  {
    "text": "promotion pyramid again something a very very well known you do your tests all",
    "start": "353170",
    "end": "359020"
  },
  {
    "text": "the way starting the second you finished your build and the tests become a more",
    "start": "359020",
    "end": "365760"
  },
  {
    "text": "elaborated and take longer but they're artifacts that survive and move through",
    "start": "365760",
    "end": "372550"
  },
  {
    "text": "promotion pipeline are less and less so in the end of the day we have long run",
    "start": "372550",
    "end": "377620"
  },
  {
    "text": "tests on staging but very few artifacts actually go there and then are ready to",
    "start": "377620",
    "end": "383470"
  },
  {
    "text": "go to production and if we look at the same process from a different perspective you can see how we are",
    "start": "383470",
    "end": "390480"
  },
  {
    "text": "promoting the our artifacts through the pipelines once we build them in the CI",
    "start": "390480",
    "end": "395650"
  },
  {
    "text": "server we start to move them through different environments and we move them",
    "start": "395650",
    "end": "401310"
  },
  {
    "text": "through different environments once they qualify for the requirements for the",
    "start": "401310",
    "end": "407320"
  },
  {
    "text": "promotion and we move them through something that we call a quality gates I'm going to speak a lot today about",
    "start": "407320",
    "end": "413380"
  },
  {
    "text": "quality gates so this is done in your artifact repository",
    "start": "413380",
    "end": "418680"
  },
  {
    "text": "basically you have some artifacts that now are in test environment and then you",
    "start": "418680",
    "end": "424600"
  },
  {
    "text": "decide or integration environments and then they decide they are good enough and you promote them into system",
    "start": "424600",
    "end": "430090"
  },
  {
    "text": "environment you install them on your system testing you install them in the right runtime environments system",
    "start": "430090",
    "end": "438760"
  },
  {
    "text": "testing in this example do all the tests and if they are good you promote them",
    "start": "438760",
    "end": "443950"
  },
  {
    "text": "next to the next level etc itself now this is all again very familiar whatever",
    "start": "443950",
    "end": "450610"
  },
  {
    "text": "you did before you got into containers and kubernetes and what's not you probably did that for whatever",
    "start": "450610",
    "end": "458110"
  },
  {
    "text": "technology used before now what changed is docker is that docker images are large the structure of",
    "start": "458110",
    "end": "469230"
  },
  {
    "text": "their management is not trivial the registry is not just a file system that",
    "start": "469230",
    "end": "477130"
  },
  {
    "text": "you had your artifact there your java artifact or your npm archive in its it",
    "start": "477130",
    "end": "485440"
  },
  {
    "start": "485000",
    "end": "575000"
  },
  {
    "text": "requires a lot of work to build this pipeline with docker images on the other",
    "start": "485440",
    "end": "492610"
  },
  {
    "text": "side we have very very powerful simple and appealing docker build command and",
    "start": "492610",
    "end": "500680"
  },
  {
    "text": "docker built file and what it actually drives a lot of people to is actually",
    "start": "500680",
    "end": "508180"
  },
  {
    "text": "using the docker file as an artifact that we promote and then build the image",
    "start": "508180",
    "end": "516310"
  },
  {
    "text": "from scratch for each and every environment so in the end of the day",
    "start": "516310",
    "end": "521710"
  },
  {
    "text": "what we will get to is instead of",
    "start": "521710",
    "end": "527790"
  },
  {
    "text": "instead of promoting the artifact that we build we are kind of a trend a lot of",
    "start": "528540",
    "end": "537040"
  },
  {
    "text": "people trend to promote the docker file and docker build in every environment so",
    "start": "537040",
    "end": "542260"
  },
  {
    "text": "we will take this docker build source file as an artifact we will build it",
    "start": "542260",
    "end": "549050"
  },
  {
    "text": "development and then we'll build it again for system test and then it will build it again from production mirror",
    "start": "549050",
    "end": "554870"
  },
  {
    "text": "and then we build it again from production environment it's very convenient to do because all you need to",
    "start": "554870",
    "end": "563180"
  },
  {
    "text": "do to promote a text file is just tag it in in get right so you attach a tag that",
    "start": "563180",
    "end": "569240"
  },
  {
    "text": "describes its state and then you can build and deploy to whatever environment you want and it sounds like a good idea",
    "start": "569240",
    "end": "576529"
  },
  {
    "start": "575000",
    "end": "975000"
  },
  {
    "text": "but and fast and cheap builds are not always the way to go and I will give you",
    "start": "576529",
    "end": "584180"
  },
  {
    "text": "one example that when I wanted to create like the most unstable the most unstable",
    "start": "584180",
    "end": "591620"
  },
  {
    "text": "dockerfile and I said ok I will create something that doesn't make any sense no one will",
    "start": "591620",
    "end": "596839"
  },
  {
    "text": "ever do it it will be for explanation all kind of purposes only but then I",
    "start": "596839",
    "end": "602209"
  },
  {
    "text": "went to the Internet and I discovered that the internet is full of dogger files which are much less stable that my",
    "start": "602209",
    "end": "610100"
  },
  {
    "text": "any imagination and eventually this file is just an example that is actually used",
    "start": "610100",
    "end": "617899"
  },
  {
    "text": "in production there it has many Forks and you can actually see the link to it",
    "start": "617899",
    "end": "624860"
  },
  {
    "text": "in the show notes again Jeff comes their show notes and you'll see that it's not",
    "start": "624860",
    "end": "630760"
  },
  {
    "text": "it's not a fantasy it's actually something that is used and this is a horrible daughter file because every",
    "start": "630760",
    "end": "638060"
  },
  {
    "text": "line in it actually refers to unstable",
    "start": "638060",
    "end": "643670"
  },
  {
    "text": "version of a dependency so when you say from guntu you actually mean take whatever version of Ubuntu there and",
    "start": "643670",
    "end": "650420"
  },
  {
    "text": "download it and build it with it you're from docker hub and it's the same with no GS the latest version with Python the",
    "start": "650420",
    "end": "659180"
  },
  {
    "text": "latest version and even adding our App our javascript file is also a latest",
    "start": "659180",
    "end": "666649"
  },
  {
    "text": "version and this is all obviously horrible because it means that the chances that every time I run docker",
    "start": "666649",
    "end": "674000"
  },
  {
    "text": "build with this docker this district or file I will get a slightly different",
    "start": "674000",
    "end": "680120"
  },
  {
    "text": "version of her image and that means that there are very high chances that what we will run",
    "start": "680120",
    "end": "687800"
  },
  {
    "text": "in production will be different from what we actually built in our dev",
    "start": "687800",
    "end": "694010"
  },
  {
    "text": "environment or intended to build that we tested through our promotion and",
    "start": "694010",
    "end": "699530"
  },
  {
    "text": "actually this is something different from what we intended and this is one of",
    "start": "699530",
    "end": "704660"
  },
  {
    "text": "the reasons we don't trust docker a lot of the times because we have this feeling in the back of our hand that",
    "start": "704660",
    "end": "711620"
  },
  {
    "text": "what we build is not necessarily what we run in production we should obviously",
    "start": "711620",
    "end": "718430"
  },
  {
    "text": "fix it and we can try and fix it and we can say okay we can use a version here so we will use 1904 and the question is",
    "start": "718430",
    "end": "726230"
  },
  {
    "text": "is it better well to some extent first of all obviously now when 20.4 is out we",
    "start": "726230",
    "end": "734570"
  },
  {
    "text": "won't get it instead of 1904 but in docker hub the versions are not mutable",
    "start": "734570",
    "end": "742820"
  },
  {
    "text": "so Ubuntu for canonical for this reason or another can actually push new image",
    "start": "742820",
    "end": "750470"
  },
  {
    "text": "and tag it 1904 so still when we are going to download when we are going to",
    "start": "750470",
    "end": "756770"
  },
  {
    "text": "build this file we will get a slightly different version of our base image there are usually very good reasons to",
    "start": "756770",
    "end": "764300"
  },
  {
    "text": "do so usually there are security vulnerabilities but still when you want",
    "start": "764300",
    "end": "769820"
  },
  {
    "text": "a repeatable build you cannot allow this to happen there is a way to nail down a",
    "start": "769820",
    "end": "775700"
  },
  {
    "text": "version very very strict and that's",
    "start": "775700",
    "end": "780710"
  },
  {
    "text": "using the hash code if I use the hash of an image it correlates to an array of",
    "start": "780710",
    "end": "789320"
  },
  {
    "text": "bytes and this is immutable this will always end up in the same array of bytes",
    "start": "789320",
    "end": "794990"
  },
  {
    "text": "the problem is this is completely unusable you have no idea what version of Ubuntu my daughter Valerie first",
    "start": "794990",
    "end": "801350"
  },
  {
    "text": "tuned and frankly you don't even know in that it's the valleys cache maybe I just",
    "start": "801350",
    "end": "807290"
  },
  {
    "text": "um you know fell to sleep on my keyboard or my cat just went through my keyboard",
    "start": "807290",
    "end": "812960"
  },
  {
    "text": "and this is what we ended up we have no idea what version this refers to this is a very unusable now we'll",
    "start": "812960",
    "end": "821720"
  },
  {
    "text": "also have all our applicative dependencies that you might or might not",
    "start": "821720",
    "end": "828370"
  },
  {
    "text": "know how to log the version or maybe look in the version sometimes is impossible so to order to know how to",
    "start": "828370",
    "end": "836000"
  },
  {
    "text": "log the versions of Python and OGS in those examples you need to know how",
    "start": "836000",
    "end": "841040"
  },
  {
    "text": "update command works which a parameters its accept and how to specify the",
    "start": "841040",
    "end": "846680"
  },
  {
    "text": "version now I bet the majority of you if you come from herbs background know exactly how to nail down apt-get",
    "start": "846680",
    "end": "855020"
  },
  {
    "text": "versions and know how to specify a specific version of Python but what",
    "start": "855020",
    "end": "860270"
  },
  {
    "text": "about this this is a maven command and I guess some of you know how maybe it",
    "start": "860270",
    "end": "866990"
  },
  {
    "text": "works and you might imagine that you need to check the pom file and check if all the versions are nailed down but",
    "start": "866990",
    "end": "873920"
  },
  {
    "text": "then my question will be what about transitive dependencies what happens in one of the transitive dependencies have",
    "start": "873920",
    "end": "879440"
  },
  {
    "text": "a version range how stable this will be and how you will even know about it and here you will require you will be",
    "start": "879440",
    "end": "887420"
  },
  {
    "text": "required to have a very deep knowledge of this particular build tool for this",
    "start": "887420",
    "end": "892430"
  },
  {
    "text": "particular part of your drug your image to make sure it is reproducible and you",
    "start": "892430",
    "end": "897860"
  },
  {
    "text": "nail down the version and this goes for let's say what if I use now basil for my",
    "start": "897860",
    "end": "904160"
  },
  {
    "text": "java build do you know how to nail all the versions there and what happens if I use go now and I use go before 111 and",
    "start": "904160",
    "end": "913540"
  },
  {
    "text": "use one of the 19 available go build or",
    "start": "913540",
    "end": "918950"
  },
  {
    "text": "after 111 and then I use the official go modules do you know how to nail all the versions there it requires increasingly",
    "start": "918950",
    "end": "928900"
  },
  {
    "text": "complicated knowledge to know how to create a reproducible build and then",
    "start": "929500",
    "end": "935630"
  },
  {
    "text": "custom stuff what about that what about if our daughter image just go ahead and",
    "start": "935630",
    "end": "940850"
  },
  {
    "text": "download bunch of files from Internet how can we guarantee that those files",
    "start": "940850",
    "end": "946220"
  },
  {
    "text": "never change and Ansari's we really can't so this is why",
    "start": "946220",
    "end": "951999"
  },
  {
    "text": "the problem exists when we go and we rerun the build of our docker image for",
    "start": "951999",
    "end": "958059"
  },
  {
    "text": "every environment we will end up with different with different docker docker",
    "start": "958059",
    "end": "967540"
  },
  {
    "text": "images in every environment that's obviously a very very big problem so the",
    "start": "967540",
    "end": "973269"
  },
  {
    "text": "way we the way we solve it is that instead of a building in each and every",
    "start": "973269",
    "end": "980319"
  },
  {
    "start": "975000",
    "end": "1005000"
  },
  {
    "text": "environment we actually want to build ones and promote those binaries through",
    "start": "980319",
    "end": "986739"
  },
  {
    "text": "those quality gates all the way to production so we run docker build ones and then we have an image and this will",
    "start": "986739",
    "end": "994059"
  },
  {
    "text": "be whatever we are going to promote and then we go through the quality gates and",
    "start": "994059",
    "end": "999129"
  },
  {
    "text": "promote it through our pipeline every step of the way now I keep talking about",
    "start": "999129",
    "end": "1007619"
  },
  {
    "start": "1005000",
    "end": "1051000"
  },
  {
    "text": "those gates and those gates are very very important because this is how we guarantee we actually test and then",
    "start": "1007619",
    "end": "1015029"
  },
  {
    "text": "stage and then run the right thing the gates are there so the QA won't get test",
    "start": "1015029",
    "end": "1022049"
  },
  {
    "text": "images by mistake Delta images by mistake which they are not ready to create the staging won't get images",
    "start": "1022049",
    "end": "1029579"
  },
  {
    "text": "which are not ready to staging and obviously the production won't get any images that are not ready to be",
    "start": "1029579",
    "end": "1036380"
  },
  {
    "text": "production views and this is again not as trivial as it might sound and not",
    "start": "1036380",
    "end": "1043740"
  },
  {
    "text": "entry as trivial as it might be your experience with other technology steps",
    "start": "1043740",
    "end": "1049500"
  },
  {
    "text": "docker makes it a little bit harder so let's see how we can build a rock-solid",
    "start": "1049500",
    "end": "1055289"
  },
  {
    "text": "pipeline the real question that we need to answer when we build this pipeline is",
    "start": "1055289",
    "end": "1060570"
  },
  {
    "text": "how do we separate there from prod how do we separate there from staging and",
    "start": "1060570",
    "end": "1066360"
  },
  {
    "text": "staging from prod how we separate between the environments one of the options that docker gives us is using",
    "start": "1066360",
    "end": "1076799"
  },
  {
    "text": "metadata we can tag our images with labels he value and we can say environment",
    "start": "1076799",
    "end": "1084670"
  },
  {
    "text": "staging environment testing this is nice but it requires from us first of all to",
    "start": "1084670",
    "end": "1092660"
  },
  {
    "text": "make sure that all of them are annotated it requires from us to make sure that our runtime environments will check",
    "start": "1092660",
    "end": "1099650"
  },
  {
    "text": "those stats every time they get the pool docker image and it basically cannot be",
    "start": "1099650",
    "end": "1106990"
  },
  {
    "text": "enforced in any way because there is no our bot controls on tags so this is nice",
    "start": "1106990",
    "end": "1113930"
  },
  {
    "text": "but we can do better another option is using docker repositories repositories in docker are",
    "start": "1113930",
    "end": "1121010"
  },
  {
    "text": "actually folders in our doctor industry and what docker suggesting is taking",
    "start": "1121010",
    "end": "1129980"
  },
  {
    "text": "those repositories taking those folders and creating virtual folders for each",
    "start": "1129980",
    "end": "1136010"
  },
  {
    "text": "and every image so each and every image will have their own folders for",
    "start": "1136010",
    "end": "1141100"
  },
  {
    "text": "development for testing for production and this is all already better because you can do our box on repositories but",
    "start": "1141100",
    "end": "1148910"
  },
  {
    "text": "it's still not very useful because then for each and every new image you create",
    "start": "1148910",
    "end": "1154100"
  },
  {
    "text": "and think about micro services with tens of thousands of images then for each and",
    "start": "1154100",
    "end": "1159470"
  },
  {
    "text": "every one you need to remember to create those repositories those folders and",
    "start": "1159470",
    "end": "1164900"
  },
  {
    "text": "make sure you attach the correct are back to each and every one of them so this is also nice but we actually need",
    "start": "1164900",
    "end": "1173300"
  },
  {
    "text": "to do better what we want to do is create a separate registry per",
    "start": "1173300",
    "end": "1179720"
  },
  {
    "text": "environment so we will have a registry that that only the devil images are the",
    "start": "1179720",
    "end": "1186260"
  },
  {
    "text": "registry that only the staging images are and the registry that only the production images are and this sounds",
    "start": "1186260",
    "end": "1193550"
  },
  {
    "text": "like something that we should be able to do how hard it is to establish number of",
    "start": "1193550",
    "end": "1199940"
  },
  {
    "text": "registries and apparently it's not so easy it's not so easy because we have",
    "start": "1199940",
    "end": "1207010"
  },
  {
    "start": "1200000",
    "end": "1395000"
  },
  {
    "text": "historical limitations a little bit like this one if you organ off to remember that makes our",
    "start": "1207010",
    "end": "1215380"
  },
  {
    "text": "ability to have multiple registries on the same horse when our pipeline is run",
    "start": "1215399",
    "end": "1221190"
  },
  {
    "text": "very very limited and the problem is this standard of docker tag how docker",
    "start": "1221190",
    "end": "1230580"
  },
  {
    "text": "tag is defined and when you look at this when you look at the standard that you",
    "start": "1230580",
    "end": "1236429"
  },
  {
    "text": "see that we have the host we have the port we have the user we have the docker",
    "start": "1236429",
    "end": "1242339"
  },
  {
    "text": "image and then we have the tag diversion so basically there is no way here that",
    "start": "1242339",
    "end": "1249179"
  },
  {
    "text": "we can express okay what maturity of registry is it on the same host there is",
    "start": "1249179",
    "end": "1257999"
  },
  {
    "text": "no way to do it right so there is no way to express that we have multiple registries per host what do you wanna",
    "start": "1257999",
    "end": "1264869"
  },
  {
    "text": "have is something like that I have my host I have my port and then I wanna do",
    "start": "1264869",
    "end": "1270029"
  },
  {
    "text": "I want to have dr. dev as a separate registry blocker QA is a separate registry docker staging and dr. prade",
    "start": "1270029",
    "end": "1276809"
  },
  {
    "text": "all as separate registries on the same host you cannot do it because dr. tab",
    "start": "1276809",
    "end": "1282839"
  },
  {
    "text": "want allowed you so that's kind of a little bit a strange limitation that",
    "start": "1282839",
    "end": "1289320"
  },
  {
    "text": "won't allow us to do it so obviously first reaction will be well that sucks I",
    "start": "1289320",
    "end": "1295320"
  },
  {
    "text": "cannot do it but then we can start thinking about it and getting smart on",
    "start": "1295320",
    "end": "1301409"
  },
  {
    "text": "how we can do it one of the options will be virtual hosts or virtual ports so",
    "start": "1301409",
    "end": "1308339"
  },
  {
    "text": "this is how it works when you run docker tag host port and the tag name then it",
    "start": "1308339",
    "end": "1314159"
  },
  {
    "text": "converts into this URL of the actual request when it goes to dr. registry",
    "start": "1314159",
    "end": "1319320"
  },
  {
    "text": "host ports we should do in them tag name now what we want to have is host port",
    "start": "1319320",
    "end": "1326580"
  },
  {
    "text": "and then maybe context name if we need it or we can drop it if we don't and then the registry name here and only",
    "start": "1326580",
    "end": "1333570"
  },
  {
    "text": "then the tag name and the way we can do it is by using fake ports or fake host",
    "start": "1333570",
    "end": "1341339"
  },
  {
    "text": "names so here's an example with a fake port we can say ok now we are going to",
    "start": "1341339",
    "end": "1346889"
  },
  {
    "text": "specify in our daughter poo another port not the real one 80 81 but",
    "start": "1346889",
    "end": "1352590"
  },
  {
    "text": "a fake one five thousand and one and every time our reverse proxy kind of a",
    "start": "1352590",
    "end": "1358820"
  },
  {
    "text": "layer another layer of abstraction before we actually hit the doctor",
    "start": "1358820",
    "end": "1364020"
  },
  {
    "text": "registry will receive a call to this non-existent port 5001 what it actually",
    "start": "1364020",
    "end": "1370170"
  },
  {
    "text": "has to do is to translate it to a call",
    "start": "1370170",
    "end": "1375570"
  },
  {
    "text": "to dr. death and then five thousand two will go to dr. staging five thousand",
    "start": "1375570",
    "end": "1382260"
  },
  {
    "text": "three will go to dr. prade and what's not now this actually works and this is",
    "start": "1382260",
    "end": "1390260"
  },
  {
    "text": "approach that a lot of users do and it",
    "start": "1390260",
    "end": "1395340"
  },
  {
    "start": "1395000",
    "end": "1475000"
  },
  {
    "text": "actually works the only problem with it is that it requires this additional",
    "start": "1395340",
    "end": "1400770"
  },
  {
    "text": "software this requires the reverse proxy well a lot of products already have it",
    "start": "1400770",
    "end": "1405929"
  },
  {
    "text": "built in but it's still configuration and babysitting etc and we still can do",
    "start": "1405929",
    "end": "1412290"
  },
  {
    "text": "better and we can do better by abusing things so look at that we have here this",
    "start": "1412290",
    "end": "1419730"
  },
  {
    "text": "user well while it is important and usually it is not used and as you saw in",
    "start": "1419730",
    "end": "1427860"
  },
  {
    "text": "previous example with busybox we didn't use it at all but this token becomes available and we",
    "start": "1427860",
    "end": "1434309"
  },
  {
    "text": "can use this token for for actually",
    "start": "1434309",
    "end": "1439950"
  },
  {
    "text": "providing a witch registry exactly our we wanna a tag or push or pull our ador",
    "start": "1439950",
    "end": "1448080"
  },
  {
    "text": "care image so this actually becomes very very easy and while we lose the ability",
    "start": "1448080",
    "end": "1456179"
  },
  {
    "text": "to use it for them for the username we actually gain the ability to have",
    "start": "1456179",
    "end": "1461850"
  },
  {
    "text": "multiple registries per host without having a reverse proxy and this is very",
    "start": "1461850",
    "end": "1467940"
  },
  {
    "text": "very useful now okay we set up we have multiple registries in the same in the",
    "start": "1467940",
    "end": "1475350"
  },
  {
    "start": "1475000",
    "end": "1745000"
  },
  {
    "text": "same host and the next version will be the next question will be how do we actually promote how do we take",
    "start": "1475350",
    "end": "1483120"
  },
  {
    "text": "those images from staging from dev to staging from staging to prod and the way",
    "start": "1483120",
    "end": "1490110"
  },
  {
    "text": "docker works the way dr. kind of implies that you use it is pull retag and push",
    "start": "1490110",
    "end": "1498410"
  },
  {
    "text": "now this is wrong on so many levels first of all we are talking about two",
    "start": "1498410",
    "end": "1504120"
  },
  {
    "text": "registers in the same host why would I pull an image to a different host over network images are big just to",
    "start": "1504120",
    "end": "1512640"
  },
  {
    "text": "be able to rename it and push it back this is just wrong but again there is no",
    "start": "1512640",
    "end": "1518990"
  },
  {
    "text": "native way of doing something else now the good news are there are tools that",
    "start": "1518990",
    "end": "1525660"
  },
  {
    "text": "can help us I will use an example of Jeffro container registry which is a",
    "start": "1525660",
    "end": "1530910"
  },
  {
    "text": "container registry that supports all that obviously and it's free for you to use but there are other tools that use",
    "start": "1530910",
    "end": "1537809"
  },
  {
    "text": "that as well and what I'm describing here is the approach that you need to",
    "start": "1537809",
    "end": "1544230"
  },
  {
    "text": "look for in your tool not necessarily doesn't matter which tool is that and",
    "start": "1544230",
    "end": "1549559"
  },
  {
    "text": "here's the approach that I would suggest you will look for so what you see here is actually a bunch of registries inside",
    "start": "1549559",
    "end": "1557970"
  },
  {
    "text": "the same the same tool right inside again this is Jeffro container registry",
    "start": "1557970",
    "end": "1564510"
  },
  {
    "text": "so you can see here we have docker dr. dev local we have testing we have",
    "start": "1564510",
    "end": "1569880"
  },
  {
    "text": "staging docker tests local docker stage local and dr. prade local all inside one",
    "start": "1569880",
    "end": "1576929"
  },
  {
    "text": "tool and then if you need to promote all you need to do is actually issue an API",
    "start": "1576929",
    "end": "1584970"
  },
  {
    "text": "request and no files are actually moved because the storage of all these images",
    "start": "1584970",
    "end": "1590880"
  },
  {
    "text": "are on the same storage so we don't move filers even around on the disk not even",
    "start": "1590880",
    "end": "1597960"
  },
  {
    "text": "mentioning stuff like pulling retargeting pushing all we do is they change the visibility of those images",
    "start": "1597960",
    "end": "1605490"
  },
  {
    "text": "for our environments now additional features that you might like now you",
    "start": "1605490",
    "end": "1611040"
  },
  {
    "text": "have four different four different doctor registers you as a developer or your developer they",
    "start": "1611040",
    "end": "1618390"
  },
  {
    "text": "need to work with all of them constantly switching between registries is painful",
    "start": "1618390",
    "end": "1623850"
  },
  {
    "text": "so instead if we can have a virtual registry that presents a single registry",
    "start": "1623850",
    "end": "1630360"
  },
  {
    "text": "but in the back containing the number of them this obviously helps a lot and this",
    "start": "1630360",
    "end": "1636210"
  },
  {
    "text": "obviously simplifies their our interaction with docker another feature in proximity remote registries this is",
    "start": "1636210",
    "end": "1644640"
  },
  {
    "text": "also very useful to have first of all again we simplify the configuration now",
    "start": "1644640",
    "end": "1650040"
  },
  {
    "text": "our virtual repository or virtual registry now not only sees all the",
    "start": "1650040",
    "end": "1655590"
  },
  {
    "text": "docker images that are locally stored but also all the images that exist from",
    "start": "1655590",
    "end": "1660780"
  },
  {
    "text": "a remote registry like docker hub and also it provides a protection against",
    "start": "1660780",
    "end": "1667890"
  },
  {
    "text": "situations when our remote registry is down and I'm sure you noticed over the",
    "start": "1667890",
    "end": "1675840"
  },
  {
    "text": "last couple of month there are a number of times when a docker hub goes down so",
    "start": "1675840",
    "end": "1682680"
  },
  {
    "text": "if you used a registry that gave you this proxying ability then obviously you",
    "start": "1682680",
    "end": "1689130"
  },
  {
    "text": "weren't affected Fe and if you didn't you probably were so this is another nice feature and going back to the",
    "start": "1689130",
    "end": "1696900"
  },
  {
    "text": "visibility of those registries from the outside world when you have your",
    "start": "1696900",
    "end": "1702420"
  },
  {
    "text": "clusters the dev cluster the test cluster the staging in the prod they only see those registries that they are",
    "start": "1702420",
    "end": "1709860"
  },
  {
    "text": "allowed to see and this is exactly what we spoke about this provides the ultimate quality gates the strongest",
    "start": "1709860",
    "end": "1716820"
  },
  {
    "text": "quality gates that can be there is no way that the production cluster will now",
    "start": "1716820",
    "end": "1723060"
  },
  {
    "text": "be able to access the testing environment because it doesn't know that there is your registry there at all it",
    "start": "1723060",
    "end": "1730260"
  },
  {
    "text": "only sees one registry for for production and from the other side no",
    "start": "1730260",
    "end": "1735540"
  },
  {
    "text": "push and pull the promotion is actually done inside the system so all we do is",
    "start": "1735540",
    "end": "1741960"
  },
  {
    "text": "change the visibility of the container registry I hope that makes sense m.i",
    "start": "1741960",
    "end": "1747950"
  },
  {
    "start": "1745000",
    "end": "1790000"
  },
  {
    "text": "number of times sleep night table and called registries repositories and vice versa and that's",
    "start": "1747950",
    "end": "1754919"
  },
  {
    "text": "because there is a little bit of confusion of those terms so docker kind",
    "start": "1754919",
    "end": "1760589"
  },
  {
    "text": "of retook and the existing term repository as a top-level directory in",
    "start": "1760589",
    "end": "1766409"
  },
  {
    "text": "the registry and everybody else more or less use repository as a term synonyms",
    "start": "1766409",
    "end": "1774389"
  },
  {
    "text": "for the registry so apologize for the confusion when you when we talk about the repositories in j4 container",
    "start": "1774389",
    "end": "1781649"
  },
  {
    "text": "registry for example we actually mean different registries within one tool so",
    "start": "1781649",
    "end": "1787019"
  },
  {
    "text": "this is an important clarification so to summarize what I encourage you to look",
    "start": "1787019",
    "end": "1794489"
  },
  {
    "start": "1790000",
    "end": "1824000"
  },
  {
    "text": "for is a situation of win-win-win when you have a single point of access for",
    "start": "1794489",
    "end": "1799679"
  },
  {
    "text": "multiple registers when needed by using virtual registry when you have completely isolated environments and",
    "start": "1799679",
    "end": "1806429"
  },
  {
    "text": "that means isolated registries for every step in your in your pipeline with",
    "start": "1806429",
    "end": "1814379"
  },
  {
    "text": "quality gates and you have immediate and free promotions without without pushing",
    "start": "1814379",
    "end": "1820409"
  },
  {
    "text": "pool and this is obviously something that also very important another topic",
    "start": "1820409",
    "end": "1825599"
  },
  {
    "start": "1824000",
    "end": "1912000"
  },
  {
    "text": "that comes up as a reaction for especially my first part of the",
    "start": "1825599",
    "end": "1831149"
  },
  {
    "text": "presentation when I talk about how important it is not to use latest when",
    "start": "1831149",
    "end": "1836190"
  },
  {
    "text": "we are talking about base images and how open to 1904 is much better than just",
    "start": "1836190",
    "end": "1842279"
  },
  {
    "text": "open to a lot of people actually like the simplicity of working with latest",
    "start": "1842279",
    "end": "1848549"
  },
  {
    "text": "they can also say give me the latest docker image and they will know that",
    "start": "1848549",
    "end": "1853950"
  },
  {
    "text": "they will have something that has been recently updated and it's good to go now",
    "start": "1853950",
    "end": "1859469"
  },
  {
    "text": "we still can have both worlds and that's again an example from Jeffro container",
    "start": "1859469",
    "end": "1864899"
  },
  {
    "text": "registry but others probably do that as well and this is using of metadata to",
    "start": "1864899",
    "end": "1870869"
  },
  {
    "text": "express what latest actually relates to the biggest problem with latest is that you don't know latest to where it was",
    "start": "1870869",
    "end": "1880139"
  },
  {
    "text": "was it the latest really latest or it was latest to created a month ago and",
    "start": "1880139",
    "end": "1885960"
  },
  {
    "text": "still seems there we have hundreds of builds which are now the latest but latest was not updated so using a",
    "start": "1885960",
    "end": "1893430"
  },
  {
    "text": "metadata you can have here latest that is referring to a certain build by",
    "start": "1893430",
    "end": "1901710"
  },
  {
    "text": "number or a certain tag by number and this is how we know this latest actually",
    "start": "1901710",
    "end": "1907200"
  },
  {
    "text": "refers to actually email actual image with the tag 26 and this gives you a",
    "start": "1907200",
    "end": "1914550"
  },
  {
    "start": "1912000",
    "end": "1989000"
  },
  {
    "text": "win-win of the simplicity of using the latest and you always know what it",
    "start": "1914550",
    "end": "1920100"
  },
  {
    "text": "really means as long as this 26 that refers to is promoted as immutable",
    "start": "1920100",
    "end": "1927600"
  },
  {
    "text": "artifact because if you remember if you keep rebuilding 26 you will actually not",
    "start": "1927600",
    "end": "1933390"
  },
  {
    "text": "know if this 26 is 326 that you actually",
    "start": "1933390",
    "end": "1938460"
  },
  {
    "text": "started so remember first is promoting immutable artifacts once you do that you",
    "start": "1938460",
    "end": "1945240"
  },
  {
    "text": "can also alias it as the latest if you wish to and it's very important to make",
    "start": "1945240",
    "end": "1951810"
  },
  {
    "text": "sure that this connection this alias between latest in 26 is super clear it",
    "start": "1951810",
    "end": "1958710"
  },
  {
    "text": "is their own in metadata and this metadata can be automated so you can",
    "start": "1958710",
    "end": "1965520"
  },
  {
    "text": "actually query in API in e query language what is my latest and know that",
    "start": "1965520",
    "end": "1971580"
  },
  {
    "text": "it is 26 I mean the UI is definitely nice and it's very nice for our webinar",
    "start": "1971580",
    "end": "1977460"
  },
  {
    "text": "but in the end of the day when you go and automate your pipelines those",
    "start": "1977460",
    "end": "1983340"
  },
  {
    "text": "questions should be answered with an API and a query language now obviously not",
    "start": "1983340",
    "end": "1990630"
  },
  {
    "start": "1989000",
    "end": "2158000"
  },
  {
    "text": "less important for you to nail down not only your docker images but also the",
    "start": "1990630",
    "end": "1998580"
  },
  {
    "text": "rest of your dependencies because at the end of the day no one uses docker just",
    "start": "1998580",
    "end": "2003740"
  },
  {
    "text": "for a docker you always have something inside you have your NPM you have your",
    "start": "2003740",
    "end": "2009410"
  },
  {
    "text": "Java you have your go you have your C C++ Makonnen in the end of the day there",
    "start": "2009410",
    "end": "2015020"
  },
  {
    "text": "are dependencies which are also needs to be locked down you need to",
    "start": "2015020",
    "end": "2020389"
  },
  {
    "text": "know that when you install your JDK in your daughter image this JDK is exactly",
    "start": "2020389",
    "end": "2028669"
  },
  {
    "text": "what you meant it to be and for that again if you're too",
    "start": "2028669",
    "end": "2035049"
  },
  {
    "text": "supports in as I mentioned for daugher the remote repositories this is what you",
    "start": "2035169",
    "end": "2041570"
  },
  {
    "text": "do for your base image so your base image will be cached in your tool and",
    "start": "2041570",
    "end": "2046580"
  },
  {
    "text": "then you know every time you need your base Ubuntu to rebuild your image it",
    "start": "2046580",
    "end": "2051590"
  },
  {
    "text": "will be there you can rely on the fact that it's cached and it doesn't matter",
    "start": "2051590",
    "end": "2056750"
  },
  {
    "text": "if it was changed in the docker hub or even deleted or docker hub now went away",
    "start": "2056750",
    "end": "2063138"
  },
  {
    "text": "because I don't know something happened right so you have your cache you control",
    "start": "2063139",
    "end": "2068810"
  },
  {
    "text": "your dependencies and for dependencies which are not docker again here's an example of Jeffro container registry you",
    "start": "2068810",
    "end": "2075950"
  },
  {
    "text": "can see how having a generic storage generic repositories as we call them",
    "start": "2075950",
    "end": "2080990"
  },
  {
    "text": "allow you to actually save cache and control your dependencies which are not",
    "start": "2080990",
    "end": "2088820"
  },
  {
    "text": "only your base image so when you need to put this JDK and the Apache Tomcat and",
    "start": "2088820",
    "end": "2096710"
  },
  {
    "text": "in the end they your application inside your dog your image you know that they",
    "start": "2096710",
    "end": "2102410"
  },
  {
    "text": "all come from trusted and control environment and exactly as we did with",
    "start": "2102410",
    "end": "2109250"
  },
  {
    "text": "docker registries we can do with generic repositories we can have an entire",
    "start": "2109250",
    "end": "2114710"
  },
  {
    "text": "pipeline of those repositories dev staging pre prod prod whatever make",
    "start": "2114710",
    "end": "2120830"
  },
  {
    "text": "sense and then promote your dependencies as you promoted your daughter images",
    "start": "2120830",
    "end": "2129800"
  },
  {
    "text": "across those quality gates so it works exactly the same for any type of",
    "start": "2129800",
    "end": "2135740"
  },
  {
    "text": "artifact being a docker image be helm",
    "start": "2135740",
    "end": "2143440"
  },
  {
    "text": "packages which are a home charts which are supported in Jeffro container registry as well or b8 any type of",
    "start": "2143440",
    "end": "2152090"
  },
  {
    "text": "artifact in generic repository right so here we go your JDK and you're talking",
    "start": "2152090",
    "end": "2157310"
  },
  {
    "text": "so basically you have to own your dependencies if you want to build your",
    "start": "2157310",
    "end": "2163760"
  },
  {
    "text": "reliable pipeline your base image and this is by cashing it from docker hub your",
    "start": "2163760",
    "end": "2170650"
  },
  {
    "text": "infrastructure everything that your application needs to run and your",
    "start": "2170650",
    "end": "2175930"
  },
  {
    "text": "application files as well so just to summarize for the conclusions you build",
    "start": "2175930",
    "end": "2182019"
  },
  {
    "text": "only once very important because there is practically no way to guarantee a",
    "start": "2182019",
    "end": "2190680"
  },
  {
    "text": "repeatable rebuild we can get closer we",
    "start": "2190680",
    "end": "2195819"
  },
  {
    "text": "is doing a lot of stuff and knowing a lot about our application knowing a lot about how daughter works with the don't",
    "start": "2195819",
    "end": "2204819"
  },
  {
    "text": "use latest but also don't write tags also use hash tags this is sorry always",
    "start": "2204819",
    "end": "2212410"
  },
  {
    "text": "use hashes this is kind of information that we need to learn but it gets more",
    "start": "2212410",
    "end": "2217869"
  },
  {
    "text": "complicated with every new technology we put into our container we use update for",
    "start": "2217869",
    "end": "2223539"
  },
  {
    "text": "our dependencies we need to know how to nail down a everything object we use",
    "start": "2223539",
    "end": "2228759"
  },
  {
    "text": "Java we need to know the Java beutel's we use go we need to know the goal so it",
    "start": "2228759",
    "end": "2234190"
  },
  {
    "text": "gets more complicated with more and more technologies that we use so instead of trying and nailing down every little",
    "start": "2234190",
    "end": "2242109"
  },
  {
    "text": "piece that might make your build unstable and not repeatable instead",
    "start": "2242109",
    "end": "2247119"
  },
  {
    "text": "build only once and if you build only once you don't have this problem you can rely on yeah you can rely on your you",
    "start": "2247119",
    "end": "2260319"
  },
  {
    "text": "can rely on this image to be actually the same all over separate environments",
    "start": "2260319",
    "end": "2265719"
  },
  {
    "text": "as we mentioned very important as separating the environments by using",
    "start": "2265719",
    "end": "2270880"
  },
  {
    "text": "different registries is actually the way to implement the most robust and secure",
    "start": "2270880",
    "end": "2276700"
  },
  {
    "text": "quality gates promote what you will already build and then own your",
    "start": "2276700",
    "end": "2282009"
  },
  {
    "text": "dependencies and that means cache everything don't trust downloading stuff",
    "start": "2282009",
    "end": "2287410"
  },
  {
    "text": "from internet because either you will download something",
    "start": "2287410",
    "end": "2292930"
  },
  {
    "text": "different or you won't be able download what you used before because it wasn't",
    "start": "2292930",
    "end": "2298599"
  },
  {
    "text": "there so with that link's as I mentioned @j baru on twitter",
    "start": "2298599",
    "end": "2305070"
  },
  {
    "text": "CN CF is the hashtag of CN CF and obviously as a CN CF ambassador I will",
    "start": "2305070",
    "end": "2312360"
  },
  {
    "text": "be happy if you mentioned that when you talk about this talking in social media and as I mentioned Jeff would come as",
    "start": "2312360",
    "end": "2319290"
  },
  {
    "text": "/aa notes this is the place where you go in order to get the slides the video all",
    "start": "2319290",
    "end": "2329490"
  },
  {
    "text": "the links and participate in as I mentioned very very attractive very",
    "start": "2329490",
    "end": "2335490"
  },
  {
    "text": "attractive raffle of the Nintendo switch meaning for a thank you for being here",
    "start": "2335490",
    "end": "2340770"
  },
  {
    "text": "I'm pasting the link to the show notes in the chat so you can use it there from",
    "start": "2340770",
    "end": "2346680"
  },
  {
    "text": "there as well it will make it one click away so with that thank you very much",
    "start": "2346680",
    "end": "2353580"
  },
  {
    "text": "and I think it's now time for questions awesome thank you so much I definitely",
    "start": "2353580",
    "end": "2359970"
  },
  {
    "text": "have some people in mind that I need to forward the recording to after this so if you have a question please do put it",
    "start": "2359970",
    "end": "2367410"
  },
  {
    "text": "into the Q and a box or tap at the bottom of your screen and we'll get to as many as we have time for the first",
    "start": "2367410",
    "end": "2374310"
  },
  {
    "text": "one we got there is from revista VAR e which is hi Babu are there any other tools that support this tank retag",
    "start": "2374310",
    "end": "2381300"
  },
  {
    "text": "without pull there are as much needed feature well this is much-needed feature do you think this might be supported by",
    "start": "2381300",
    "end": "2388260"
  },
  {
    "text": "documentary yeah reverse thank you for this question and when we look at the",
    "start": "2388260",
    "end": "2396120"
  },
  {
    "start": "2390000",
    "end": "2575000"
  },
  {
    "text": "landscape of the registries that are available for us and I just think if you",
    "start": "2396120",
    "end": "2401900"
  },
  {
    "text": "all the cloud providers have their own container registries the Google Azure",
    "start": "2401900",
    "end": "2407790"
  },
  {
    "text": "and and AWS we have harbor which is an amazing project from a CNC F which is a",
    "start": "2407790",
    "end": "2415470"
  },
  {
    "text": "container registry by itself also get lab supports container registry github",
    "start": "2415470",
    "end": "2421350"
  },
  {
    "text": "supports container register every everywhere you you look you see container registry and the reason why",
    "start": "2421350",
    "end": "2427260"
  },
  {
    "text": "it's so easy to find container registers around is because docker did a very good",
    "start": "2427260",
    "end": "2433890"
  },
  {
    "text": "job in making container registry available for distribution the it's actually called",
    "start": "2433890",
    "end": "2439700"
  },
  {
    "text": "docker distribution and this is an open source free and relatively simple to run",
    "start": "2439700",
    "end": "2446660"
  },
  {
    "text": "piece of software that allows you to have a container registry and then you can put your UI on it your brand on it",
    "start": "2446660",
    "end": "2453560"
  },
  {
    "text": "provide additional features like harbor does for example her security and what's not and but the end of the day most of",
    "start": "2453560",
    "end": "2460970"
  },
  {
    "text": "them is if not all of them have this docker distribution under the hood and",
    "start": "2460970",
    "end": "2467110"
  },
  {
    "text": "docume ster bution means exactly single isolated container registry inside and",
    "start": "2467110",
    "end": "2474820"
  },
  {
    "text": "since it has its own storage there is no way to promote easily between one",
    "start": "2474820",
    "end": "2481520"
  },
  {
    "text": "container registry and another so even in tools that supposedly can have",
    "start": "2481520",
    "end": "2488450"
  },
  {
    "text": "multiple container registries in one tool you unfortunately will end up",
    "start": "2488450",
    "end": "2493820"
  },
  {
    "text": "promoting them by pooling andrey tagging and pushing the game it might be a",
    "start": "2493820",
    "end": "2500330"
  },
  {
    "text": "little bit easier if you do it on the same machine maybe or in the same",
    "start": "2500330",
    "end": "2505550"
  },
  {
    "text": "network or in the same availability zone but in the end of the day making shared",
    "start": "2505550",
    "end": "2514100"
  },
  {
    "text": "storage for multiple container registries required awesome jet from",
    "start": "2514100",
    "end": "2519160"
  },
  {
    "text": "rewriting re-implementing the docker distribution from scratch this is not",
    "start": "2519160",
    "end": "2526100"
  },
  {
    "text": "what we have is not an embedded document distribution and this is the was the",
    "start": "2526100",
    "end": "2531200"
  },
  {
    "text": "only way for us to implement different views of registries with the shirt back",
    "start": "2531200",
    "end": "2537200"
  },
  {
    "text": "and storage in a in the back so I didn't hear I did i I don't know about any",
    "start": "2537200",
    "end": "2543860"
  },
  {
    "text": "other tool that do that and the good news are different in your registry is free to use so you might very well give",
    "start": "2543860",
    "end": "2550220"
  },
  {
    "text": "it a try oh thank you so much there is another question from daniel",
    "start": "2550220",
    "end": "2557090"
  },
  {
    "text": "silverman who is asking if you could actually show a design example of a CI",
    "start": "2557090",
    "end": "2562760"
  },
  {
    "text": "CD pipeline that performs the internal pocket image promotion from def to test to prod",
    "start": "2562760",
    "end": "2567830"
  },
  {
    "text": "and deploys it to a kubernetes cluster he is working with Harbor but it doesn't",
    "start": "2567830",
    "end": "2573620"
  },
  {
    "text": "have to be specific to it yeah so let me give me one sec and let me check if I",
    "start": "2573620",
    "end": "2581030"
  },
  {
    "start": "2575000",
    "end": "3043000"
  },
  {
    "text": "have an example of a CI that does that",
    "start": "2581030",
    "end": "2587420"
  },
  {
    "text": "and I will be more than happy to share it with you real quick it it won't be",
    "start": "2587420",
    "end": "2593750"
  },
  {
    "text": "the entire pipeline but I think you know exactly how to deploy to communities from jail for registry the promotion",
    "start": "2593750",
    "end": "2600590"
  },
  {
    "text": "part is interesting though and let me see if I can find the build and share it",
    "start": "2600590",
    "end": "2609470"
  },
  {
    "text": "with you so I will stop sharing the slides and instead I will share my",
    "start": "2609470",
    "end": "2617860"
  },
  {
    "text": "browser here where is my Firefox here",
    "start": "2618370",
    "end": "2628360"
  },
  {
    "text": "okay do you see the J frog container out",
    "start": "2628900",
    "end": "2634070"
  },
  {
    "text": "that's the pipeline's yeah yeah so I need the pipeline's",
    "start": "2634070",
    "end": "2640960"
  },
  {
    "text": "differ glob container registry yeah I",
    "start": "2640960",
    "end": "2650960"
  },
  {
    "text": "think we need actually this one so I'm just trying to find a finally CI server",
    "start": "2650960",
    "end": "2657050"
  },
  {
    "text": "that runs this promotion and then I will be able to show it to you so let me",
    "start": "2657050",
    "end": "2663230"
  },
  {
    "text": "begin to it real quick and see if I can show you that how it actually runs so",
    "start": "2663230",
    "end": "2672530"
  },
  {
    "text": "[Music] yeah so if I look at the artifacts I can",
    "start": "2672530",
    "end": "2678620"
  },
  {
    "text": "actually see here let's take dr. prade local that's",
    "start": "2678620",
    "end": "2684170"
  },
  {
    "text": "exactly nothing is here okay that's",
    "start": "2684170",
    "end": "2690550"
  },
  {
    "text": "again not the right one I'm sorry I wasn't prepared to show this demo so but",
    "start": "2690550",
    "end": "2698960"
  },
  {
    "text": "this is an interesting this is an interesting question so it's",
    "start": "2698960",
    "end": "2705660"
  },
  {
    "text": "the last doctor we know how I stick it on okay okay then I will probably find",
    "start": "2705660",
    "end": "2713250"
  },
  {
    "text": "the rest one yeah I it's just I had a",
    "start": "2713250",
    "end": "2723000"
  },
  {
    "text": "lot of Jeffro container registers around some of them show the right thing the",
    "start": "2723000",
    "end": "2730560"
  },
  {
    "text": "other not so much so here it is and dr. prade local yay okay I found it",
    "start": "2730560",
    "end": "2737730"
  },
  {
    "text": "so let's look at the 26 that actually what I used a to take screenshots into",
    "start": "2737730",
    "end": "2744840"
  },
  {
    "text": "my slides and if you look at the properties here I hope we can see the",
    "start": "2744840",
    "end": "2750450"
  },
  {
    "text": "build yes okay here we go so this is the build URL this is how it",
    "start": "2750450",
    "end": "2755940"
  },
  {
    "text": "was built and if I click on it this is different pipelines which is a sea-ice",
    "start": "2755940",
    "end": "2762480"
  },
  {
    "text": "CD tool from Jeff Rock obviously you don't have to use that but I just want",
    "start": "2762480",
    "end": "2767940"
  },
  {
    "text": "to show you the promotion and the promotion here promote application built and the step that we use is just using",
    "start": "2767940",
    "end": "2776670"
  },
  {
    "text": "curl to actually uh okay here is my key that I probably need to revoke once this",
    "start": "2776670",
    "end": "2782220"
  },
  {
    "text": "webinar is recorded and don't do that don't hard-code your keys into your ASCI",
    "start": "2782220",
    "end": "2789120"
  },
  {
    "text": "scripts but what you definitely do is you use the promote API and then you say",
    "start": "2789120",
    "end": "2796410"
  },
  {
    "text": "okay my target wrapper will be dr. prade local and I will promote this tag and I",
    "start": "2796410",
    "end": "2804750"
  },
  {
    "text": "just vary from my daughter images with the run numbers but it could be whatever makes sense and just move it and what it",
    "start": "2804750",
    "end": "2813120"
  },
  {
    "text": "does this is an operation that ended up in six seconds and it actually and those",
    "start": "2813120",
    "end": "2819780"
  },
  {
    "text": "six seconds was actually the API call the promotion itself was immediate because as I mentioned nothing actually",
    "start": "2819780",
    "end": "2826260"
  },
  {
    "text": "changed what changed is that now before this bill 26 was in dr. dev local",
    "start": "2826260",
    "end": "2834450"
  },
  {
    "text": "and now it's not there there is only number 10 because the promotion failed then at the 26 actually moved to Prague",
    "start": "2834450",
    "end": "2841530"
  },
  {
    "text": "local so this is how the promotion does works it's just - it's just one rest API",
    "start": "2841530",
    "end": "2847530"
  },
  {
    "text": "by the way the way you do the alias between the 26 and local is also the",
    "start": "2847530",
    "end": "2855599"
  },
  {
    "text": "same rest api you can see here all I do is I actually promote it kind of",
    "start": "2855599",
    "end": "2862079"
  },
  {
    "text": "promoted from the same registry to the same registry and what I do change is",
    "start": "2862079",
    "end": "2868170"
  },
  {
    "text": "the tag so from tag number i target to latest and this is how we have here 26",
    "start": "2868170",
    "end": "2874890"
  },
  {
    "text": "and latest and they actually refer to the same - the same image the",
    "start": "2874890",
    "end": "2880079"
  },
  {
    "text": "interesting part here of course is that this docker refers to and this doctor",
    "start": "2880079",
    "end": "2886470"
  },
  {
    "text": "refers to is another REST API call which is right here and that will be put",
    "start": "2886470",
    "end": "2891810"
  },
  {
    "text": "properties so the properties that I want to put is doctor refer to run number I",
    "start": "2891810",
    "end": "2898320"
  },
  {
    "text": "learn mint on the latest and I say okay it refers to 26 and we are looking in",
    "start": "2898320",
    "end": "2903960"
  },
  {
    "text": "the bill 26 I mean I hope that gives you a clue and how to how to do it and",
    "start": "2903960",
    "end": "2909599"
  },
  {
    "text": "basically what you do is this is how you build your pipeline you build a docker image you push the docker image you",
    "start": "2909599",
    "end": "2915630"
  },
  {
    "text": "publish the building for here you do all your tests here will run your system",
    "start": "2915630",
    "end": "2923579"
  },
  {
    "text": "tests your integration test obviously your security test and this is very important and again today you expect",
    "start": "2923579",
    "end": "2931380"
  },
  {
    "text": "from tool that does your artifact management also to have at least",
    "start": "2931380",
    "end": "2937560"
  },
  {
    "text": "integration if not building verification of the security of your artifacts so",
    "start": "2937560",
    "end": "2943589"
  },
  {
    "text": "this all will be here and based on the results of your tests you will decide whether you are going to promote your",
    "start": "2943589",
    "end": "2950880"
  },
  {
    "text": "build or not and if you decide to promote then it's just a rest api we're from where to and done I hope that",
    "start": "2950880",
    "end": "2959910"
  },
  {
    "text": "kind of answered and of course as I mentioned doesn't have to be in Jeffro pipelines it can be in any",
    "start": "2959910",
    "end": "2967970"
  },
  {
    "text": "in any CI server awesome what a demo",
    "start": "2968330",
    "end": "2973710"
  },
  {
    "text": "thank you so much yeah very very ad hoc they're more sorry about it so Daniel is",
    "start": "2973710",
    "end": "2982340"
  },
  {
    "text": "spelling thank you in capitals as as a new question so I think the question",
    "start": "2982340",
    "end": "2988380"
  },
  {
    "text": "quiz answered any other questions we have a few more minutes",
    "start": "2988380",
    "end": "2994460"
  },
  {
    "text": "you",
    "start": "2996660",
    "end": "2998720"
  },
  {
    "text": "all right I think we on top of hopefully useful webinar also give five minutes",
    "start": "3004910",
    "end": "3011630"
  },
  {
    "text": "back to people enough to get coffee before the next meetings that we'll probably have so with that thank you",
    "start": "3011630",
    "end": "3018830"
  },
  {
    "text": "very much for having me that was fun and I hope that was useful as well for me",
    "start": "3018830",
    "end": "3024590"
  },
  {
    "text": "it's almost 8:00 in the evening so no coffee for me anymore but thank you very much for a great presentation and thanks",
    "start": "3024590",
    "end": "3031670"
  },
  {
    "text": "to everyone else for joining us today the webinar recording and the slides will be online later today we're looking",
    "start": "3031670",
    "end": "3037190"
  },
  {
    "text": "forward to see you in the future have a great day thank you so much",
    "start": "3037190",
    "end": "3043720"
  }
]