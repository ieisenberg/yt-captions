[
  {
    "text": "I'm Subash I'm an engineer at guru Guerrero is a europe-wide travel aggregator travel search and booking",
    "start": "60",
    "end": "7290"
  },
  {
    "text": "engine we have a operate across 12 countries we cover thousands of stations",
    "start": "7290",
    "end": "13200"
  },
  {
    "text": "200 plus providers 10 million plus monthly searches it's just search as you know not",
    "start": "13200",
    "end": "19080"
  },
  {
    "text": "sessions huge number of volume and one of one of the more successful startups",
    "start": "19080",
    "end": "24269"
  },
  {
    "text": "out of Berlin not the most but one of the more successful startups and I'm the",
    "start": "24269",
    "end": "29580"
  },
  {
    "text": "I'm an engineer there leading the CI CD platform team and the transition to kubernetes and doctor so our transition",
    "start": "29580",
    "end": "38879"
  },
  {
    "text": "journey goes back like so we went we scaled up from 50 engineers and eight to",
    "start": "38879",
    "end": "45360"
  },
  {
    "text": "ten services 250 engineers 50 services new one starting every one or two weeks",
    "start": "45360",
    "end": "51800"
  },
  {
    "text": "we scaled up from 10 coordinated releases to 150 plus independent releases happening every week that",
    "start": "51800",
    "end": "58710"
  },
  {
    "text": "number is not definitely an upper bound we are just warming up and we went from legacy infrastructure to see ICD docker",
    "start": "58710",
    "end": "66150"
  },
  {
    "text": "and kubernetes through all kinds of legacy problems like we had all sort of integration patterns file driven",
    "start": "66150",
    "end": "72119"
  },
  {
    "text": "integration shared database rest message queues metrics driven integration like",
    "start": "72119",
    "end": "79530"
  },
  {
    "text": "one up writes to graphite or another app read from graphite like you name it you got it compile-time additional artifacts like",
    "start": "79530",
    "end": "86640"
  },
  {
    "text": "probably you know and across the spectrum you also had all sort of",
    "start": "86640",
    "end": "91650"
  },
  {
    "text": "problems like you know dev hacks for ops problems and ops hacks for dev problems",
    "start": "91650",
    "end": "97350"
  },
  {
    "text": "like all the things that you would expect when devs and ops work in silos yeah so we finished the transition",
    "start": "97350",
    "end": "104759"
  },
  {
    "text": "across four months in the entire company and so before I go into the actual",
    "start": "104759",
    "end": "111360"
  },
  {
    "text": "transition journey I would first like to skip ahead and show you where we are right now and then work backwards to see",
    "start": "111360",
    "end": "118979"
  },
  {
    "text": "how we got there so let's first start with development like we'll start with",
    "start": "118979",
    "end": "124860"
  },
  {
    "text": "the most basic unit from the bottom up like the first thing that we have is that the first thing that we enable is",
    "start": "124860",
    "end": "132100"
  },
  {
    "text": "development in the cloud so we had something called hyper-v M this is before mini cube became easy to use so",
    "start": "132100",
    "end": "139660"
  },
  {
    "text": "the hyper-v M is just a single node docker and cuber Nettie's cluster which is really optimized for development like",
    "start": "139660",
    "end": "146590"
  },
  {
    "text": "you can docker build on the same node and gives you an Cube CTL run on the same node without having to push your",
    "start": "146590",
    "end": "153370"
  },
  {
    "text": "docker image to a central registry and we this VM image also adds a little bit",
    "start": "153370",
    "end": "160630"
  },
  {
    "text": "of metadata driven customization like you can say book these services like apply these kubernetes services when",
    "start": "160630",
    "end": "166840"
  },
  {
    "text": "this machine starts at boot and we also have like everything else that is",
    "start": "166840",
    "end": "172150"
  },
  {
    "text": "required for developing in the cloud like making docker work with our DNS",
    "start": "172150",
    "end": "177400"
  },
  {
    "text": "like darker inside the current signed documents work with all readiness and integrate with our internal networks all",
    "start": "177400",
    "end": "183430"
  },
  {
    "text": "the ops all the legacy ops hacks for devs hidden inside and you know build",
    "start": "183430",
    "end": "188950"
  },
  {
    "text": "arguments activated darker patches because you know we don't want to distribute tools we want to distribute",
    "start": "188950",
    "end": "195400"
  },
  {
    "text": "services so we just have the rebel or docker client and this hyper VM runs a",
    "start": "195400",
    "end": "201190"
  },
  {
    "text": "docker server which is patched and if you specify certain build arguments like if you want build I'm caching like if",
    "start": "201190",
    "end": "208030"
  },
  {
    "text": "you want to mount volumes during build remember that we are operating with lots of legacy services you just use Bulldogs",
    "start": "208030",
    "end": "214090"
  },
  {
    "text": "for it and at the same time if you just point your docker command line to proper",
    "start": "214090",
    "end": "219400"
  },
  {
    "text": "docker mission or mini cube it still works perfectly fine except a little slower yeah and this is this VM is",
    "start": "219400",
    "end": "226270"
  },
  {
    "text": "always our first point to begin upgrading docker or kubernetes versions",
    "start": "226270",
    "end": "231280"
  },
  {
    "text": "from dev to prod like it's just mini cube in the cloud but this is where I",
    "start": "231280",
    "end": "236440"
  },
  {
    "text": "just want to start with slow so developers like every application repository has an ops folder like again",
    "start": "236440",
    "end": "244660"
  },
  {
    "text": "I'm showing you where we are and then I'll later work backwards so every application has an ops folder which",
    "start": "244660",
    "end": "250210"
  },
  {
    "text": "contains all the ops requirements for that including the docker file the helm chart CI dotty AMA we'll see more about",
    "start": "250210",
    "end": "256810"
  },
  {
    "text": "that soon the make files and everything else so most of most of the DevOps",
    "start": "256810",
    "end": "263440"
  },
  {
    "text": "requirements are self-contained within the application repository so the",
    "start": "263440",
    "end": "271190"
  },
  {
    "text": "after applications have created they are ops folder with the necessary help chart",
    "start": "271190",
    "end": "276440"
  },
  {
    "text": "and the dockerfile we have something called as y8s it started out as a fun",
    "start": "276440",
    "end": "281930"
  },
  {
    "text": "name but today I'm just kind of stuck so it's nothing but yama kubernetes sharing",
    "start": "281930",
    "end": "287810"
  },
  {
    "text": "again before helm and so what we did was this was when helm was transitioning",
    "start": "287810",
    "end": "294380"
  },
  {
    "text": "from the zero point X to 1 dot X release so what we did was we adopted the helm",
    "start": "294380",
    "end": "299630"
  },
  {
    "text": "chart standard so and we just rendered the helm chart as a service so you can",
    "start": "299630",
    "end": "306080"
  },
  {
    "text": "call an API I'll just show you up next so you can say HTTP y8 s dot internal",
    "start": "306080",
    "end": "314150"
  },
  {
    "text": "and just give it any repository and it will check out that repository and",
    "start": "314150",
    "end": "319819"
  },
  {
    "text": "vendor the helm chart and give you back the output so cube cuddle has this really nice but hidden feature that you",
    "start": "319819",
    "end": "327740"
  },
  {
    "text": "can use HTTP URLs when you are applying with cube with cube control and we just use it to the max and so and why we do",
    "start": "327740",
    "end": "336650"
  },
  {
    "text": "that is because and we also dog food the same thing for our own services like all",
    "start": "336650",
    "end": "342949"
  },
  {
    "text": "of our DevOps services that we deploy in all the clusters are also using the same",
    "start": "342949",
    "end": "348680"
  },
  {
    "text": "way it is tool and the the widest service also supports additional rest options you can pass in parameters to",
    "start": "348680",
    "end": "356120"
  },
  {
    "text": "the templating but we just expose a slightly smaller subject like all the",
    "start": "356120",
    "end": "362740"
  },
  {
    "text": "repositories are supposed to render with only one variable called as env and the",
    "start": "362740",
    "end": "369800"
  },
  {
    "text": "env is like we have predefined environments development testing mock QA",
    "start": "369800",
    "end": "374930"
  },
  {
    "text": "pre prod prod EU and or production regions so there is a certain set of environments that every service must",
    "start": "374930",
    "end": "381770"
  },
  {
    "text": "support and outside of that everything else is additionally configurable but",
    "start": "381770",
    "end": "386900"
  },
  {
    "text": "they should work out of the box so in addition the ml sharing service also",
    "start": "386900",
    "end": "392120"
  },
  {
    "text": "when rendering the helm charts it prints out a whole lot of annotations to every",
    "start": "392120",
    "end": "397669"
  },
  {
    "text": "resource like including the get commit ID from which it was rendered from the parameters using which it was rendered",
    "start": "397669",
    "end": "403750"
  },
  {
    "text": "from we can always trace back running services to source from how they were generated so this is our development",
    "start": "403750",
    "end": "413740"
  },
  {
    "text": "landscape so we have ops folder in all the reports docker file CI ml and",
    "start": "413740",
    "end": "418930"
  },
  {
    "text": "everything else we have the ml sharing service and the hyper VM to develop in the cloud where developers can just say",
    "start": "418930",
    "end": "425889"
  },
  {
    "text": "Cube control apply all the services that they want so this is the from the",
    "start": "425889",
    "end": "432130"
  },
  {
    "text": "development and let's move on next to the integration cycle so we have the CI",
    "start": "432130",
    "end": "439569"
  },
  {
    "text": "dot Yama file in every repository and we decided not to reinvent any new CI",
    "start": "439569",
    "end": "446710"
  },
  {
    "text": "contract or you know a new different Yama language so instead what we did was we adopted the gitlab CI ml design like",
    "start": "446710",
    "end": "454900"
  },
  {
    "text": "get lab has a really nice yomel syntax that allows for pipelines and stages and",
    "start": "454900",
    "end": "460120"
  },
  {
    "text": "cron jobs and everything so we adopted get lab CI ml but then we converted",
    "start": "460120",
    "end": "466120"
  },
  {
    "text": "those into CI jobs on our own terms like we filled out everything else like all",
    "start": "466120",
    "end": "471969"
  },
  {
    "text": "the plumbing we basically made the choice of CI tool independent for the",
    "start": "471969",
    "end": "477130"
  },
  {
    "text": "developers like we today we use Jenkins build pipelines because build pipelines",
    "start": "477130",
    "end": "482469"
  },
  {
    "text": "support manual checkpoints tomorrow we could fish to go CD and no developer would notice and we fill in everything",
    "start": "482469",
    "end": "489849"
  },
  {
    "text": "else PR checks manual checkpoints cron jobs distributed build caching the",
    "start": "489849",
    "end": "495550"
  },
  {
    "text": "current signed or unsigned docker builds like all the stuff that you have come to expect from da Christ environment slack",
    "start": "495550",
    "end": "502599"
  },
  {
    "text": "notifications release procedures filling out Excel sheets all of those are automated inside developers just declare",
    "start": "502599",
    "end": "509889"
  },
  {
    "text": "their jobs in this format so they say this is the image that I want my bill to",
    "start": "509889",
    "end": "516010"
  },
  {
    "text": "run on and these are my jobs and these are the stages in which my jobs runs on",
    "start": "516010",
    "end": "521289"
  },
  {
    "text": "and for every job if they can also specify an environment which is you know",
    "start": "521289",
    "end": "527800"
  },
  {
    "text": "QA production pre-production and so on so this is the debt lab amyl syntax we",
    "start": "527800",
    "end": "534250"
  },
  {
    "text": "will come to the credential spot later and we build out the rest of the whole pipelines and the contract for the",
    "start": "534250",
    "end": "541630"
  },
  {
    "text": "pipeline's is really simple every build runs in an agent which is a hyper vm",
    "start": "541630",
    "end": "547900"
  },
  {
    "text": "like that's why I started with the hyper VM in development all the Jenkins agents are hyper Williams in addition they have",
    "start": "547900",
    "end": "555640"
  },
  {
    "text": "Jenkins agent running there is nothing else different it's like they are operating on the same dev mission that",
    "start": "555640",
    "end": "561070"
  },
  {
    "text": "they are used to so and the other contract of the build is that when your",
    "start": "561070",
    "end": "566140"
  },
  {
    "text": "bill starts docker and cube control are readily configured just start using it like you don't have to get the",
    "start": "566140",
    "end": "572950"
  },
  {
    "text": "credentials or anything 2.2 QA or pre prod so if you say that environment is",
    "start": "572950",
    "end": "579280"
  },
  {
    "text": "QA well you get a very connection to QA when your job runs if you don't specify",
    "start": "579280",
    "end": "584320"
  },
  {
    "text": "an environment each job is running in its own agent with its own isolated",
    "start": "584320",
    "end": "589390"
  },
  {
    "text": "kubernetes so they can use it for doing end to end tests and so on and the other",
    "start": "589390",
    "end": "594670"
  },
  {
    "text": "thing is that all jobs are recreated from source every two hours there is no",
    "start": "594670",
    "end": "599800"
  },
  {
    "text": "possibility of clicking and configuring the snowflake CI and we encourage early integration tests",
    "start": "599800",
    "end": "605470"
  },
  {
    "text": "cube CTL apply y8s any service that you want and hit it with your end-to-end",
    "start": "605470",
    "end": "610600"
  },
  {
    "text": "tests and we take jobs all the way to production like we don't drop them off in pre prod and then like DevOps doesn't",
    "start": "610600",
    "end": "617800"
  },
  {
    "text": "take over releases at any given point we let applications go all the way to prod",
    "start": "617800",
    "end": "622990"
  },
  {
    "text": "by themselves but we ensure certain amount of safety which are it's covered in the upcoming slides so this is the",
    "start": "622990",
    "end": "631420"
  },
  {
    "text": "closer look so if you don't specify an environment the agent is the hyper VM",
    "start": "631420",
    "end": "636640"
  },
  {
    "text": "you can start applying and running your ETA tests well if you specify the",
    "start": "636640",
    "end": "642070"
  },
  {
    "text": "environment as preview 24 hours well what it does is that when the build",
    "start": "642070",
    "end": "647290"
  },
  {
    "text": "starts it dynamically provisions a new cube or Nettie's hyper vm and points you",
    "start": "647290",
    "end": "653560"
  },
  {
    "text": "are built to that and then runs your job normally like you can still do dockable cube cereal apply accept the agent is",
    "start": "653560",
    "end": "660870"
  },
  {
    "text": "accept you know the the results persist like even after the job is finish you still have the preview VM running",
    "start": "660870",
    "end": "666970"
  },
  {
    "text": "it's not cleaned up like unlike the other jobs which use ephemeral agents",
    "start": "666970",
    "end": "672220"
  },
  {
    "text": "and they are cleaned out after every build this preview vm is dedicated to your pool request and it stays after",
    "start": "672220",
    "end": "678850"
  },
  {
    "text": "your job is complete and you can use this to show previews to product you can",
    "start": "678850",
    "end": "683860"
  },
  {
    "text": "use this to do debugging like you know you can find out why and into and test is failing and so on yes so and but the",
    "start": "683860",
    "end": "690309"
  },
  {
    "text": "build contract the most essential part is the build contract remains the same if you specify the environment as QA pre",
    "start": "690309",
    "end": "698170"
  },
  {
    "text": "prod or any of those shared production clusters that multiple teams are using right you still get the same build",
    "start": "698170",
    "end": "705069"
  },
  {
    "text": "contract like just do Q CTL apply to deploy and we'll talk about security",
    "start": "705069",
    "end": "710649"
  },
  {
    "text": "later so that you know the new do keeps it will apply you should make sure not to mess up with any other application",
    "start": "710649",
    "end": "716920"
  },
  {
    "text": "and there is also some amount of composition that you can do like it's",
    "start": "716920",
    "end": "723399"
  },
  {
    "text": "it's still the same job if you say stage PR those jobs are going to end in the",
    "start": "723399",
    "end": "728439"
  },
  {
    "text": "PRS if you say when manual right on normal build pipelines when manual means",
    "start": "728439",
    "end": "735540"
  },
  {
    "text": "it's manually triggered but on a pull request well when manual means that you have to",
    "start": "735540",
    "end": "742149"
  },
  {
    "text": "comment just comment on the pull request say trigger my job and it gets triggered it's still like a manual trigger and",
    "start": "742149",
    "end": "749290"
  },
  {
    "text": "then you can say the environment as per you 24 hours you get a provisioned environment and mix and match this and",
    "start": "749290",
    "end": "755559"
  },
  {
    "text": "you can do product demos on demand you can do github flow like you know from the PR job you can say name is",
    "start": "755559",
    "end": "762249"
  },
  {
    "text": "production a manual trigger and you can deploy to production so if you want to follow github flow style of going from",
    "start": "762249",
    "end": "768459"
  },
  {
    "text": "PRS to production well you can do that as well so people mix and match this to",
    "start": "768459",
    "end": "775569"
  },
  {
    "text": "achieve the desired effect in their pipelines so we have pretty much a lot",
    "start": "775569",
    "end": "781869"
  },
  {
    "text": "of patterns covered database migrations it took us a lot of time to figure out",
    "start": "781869",
    "end": "787449"
  },
  {
    "text": "how to run database migrations using cubes ETL one yeah so basically the",
    "start": "787449",
    "end": "792670"
  },
  {
    "text": "Viator service it just accepts content type I mean except headers so you can",
    "start": "792670",
    "end": "797920"
  },
  {
    "text": "say give me the migration in a JSON format give me the migration definition of the",
    "start": "797920",
    "end": "804610"
  },
  {
    "text": "container you know JSON format and you can run it with cubes ETL so basically instead of docker running migrations you",
    "start": "804610",
    "end": "811270"
  },
  {
    "text": "can run cube CTL run migrations and they have access to all the cube a cube root",
    "start": "811270",
    "end": "816670"
  },
  {
    "text": "is defined services and endpoints and everything else you can do in to end testing shard e to e services like there",
    "start": "816670",
    "end": "824200"
  },
  {
    "text": "are three major e to e suits in the organization all of them are also",
    "start": "824200",
    "end": "829540"
  },
  {
    "text": "treated as services they also have their CI pipelines they publish docker artifacts and other teams you know cube",
    "start": "829540",
    "end": "836380"
  },
  {
    "text": "CTL run them using waitis so so they",
    "start": "836380",
    "end": "841540"
  },
  {
    "text": "just thought they just build and run their own services and they run the e to e tests on top of them we also have we",
    "start": "841540",
    "end": "849340"
  },
  {
    "text": "were also wondering if we should add special syntax like whatever you seen before here is all perfectly valid",
    "start": "849340",
    "end": "856780"
  },
  {
    "text": "gitlab CI ml so if you tomorrow if you switch to get lab CI nothing drastically",
    "start": "856780",
    "end": "862420"
  },
  {
    "text": "changes and we were wondering if we should add special annotations for booting additional services like",
    "start": "862420",
    "end": "869110"
  },
  {
    "text": "selenium or my sequel or so on like how Travis CI does but then we decided against it like you can just cube CTL",
    "start": "869110",
    "end": "875560"
  },
  {
    "text": "apply whatever you want so we did not need any additional abstractions for it",
    "start": "875560",
    "end": "881550"
  },
  {
    "text": "so this is our second level landscape you have caml",
    "start": "881550",
    "end": "887890"
  },
  {
    "text": "in every repository you have every CI agent is a hyper V M so it's pretty much",
    "start": "887890",
    "end": "893950"
  },
  {
    "text": "the same contract that you come to expect and we allow you to deploy readily to all the environments so the",
    "start": "893950",
    "end": "903550"
  },
  {
    "text": "last part of this is how do we actually deploy all these services once the once they cross the CI CD pipeline so so we",
    "start": "903550",
    "end": "911920"
  },
  {
    "text": "developed the simple cube or Nettie's api gateway proxy it's called as or Thetas it takes only a few a couple of",
    "start": "911920",
    "end": "920470"
  },
  {
    "text": "hundred lines of node.js code to proxy the kubernetes api it's so simple that you know we don't even have to open",
    "start": "920470",
    "end": "926290"
  },
  {
    "text": "source it you can bring one up just by playing around with it so it's deployed in every",
    "start": "926290",
    "end": "932030"
  },
  {
    "text": "after and it proxies to the kubernetes master so people don't deploy to kubernetes directly they go through this",
    "start": "932030",
    "end": "938750"
  },
  {
    "text": "API gateway and what and each namespace gets its own username and password so",
    "start": "938750",
    "end": "945580"
  },
  {
    "text": "each team rather like each team gets its own username and password and that",
    "start": "945580",
    "end": "950590"
  },
  {
    "text": "username and password is tied to one specific name space so they can deploy",
    "start": "950590",
    "end": "955880"
  },
  {
    "text": "only to that namespace and every other operation is restricted so today we got",
    "start": "955880",
    "end": "960890"
  },
  {
    "text": "to know that in occupant is one point six has well based access control so we will we can easily replace this service",
    "start": "960890",
    "end": "967700"
  },
  {
    "text": "we can remove this after we have ported the same rules over to cube or entities",
    "start": "967700",
    "end": "973460"
  },
  {
    "text": "or matter what we do in addition outside of security is also compliance like we",
    "start": "973460",
    "end": "978890"
  },
  {
    "text": "don't want to run services that do not have CPU and memory limits in production like this is not just role based access",
    "start": "978890",
    "end": "986420"
  },
  {
    "text": "control this is more about compliance right so we we require certain",
    "start": "986420",
    "end": "991820"
  },
  {
    "text": "annotations in every single pod and every single namespace so all of this we",
    "start": "991820",
    "end": "997760"
  },
  {
    "text": "enforce through the proxy so whenever you try to apply a new deployment we",
    "start": "997760",
    "end": "1002980"
  },
  {
    "text": "make sure that it has all the normal rules that you come to expect in cube",
    "start": "1002980",
    "end": "1008530"
  },
  {
    "text": "realities so again the approach has been that instead of trying to create an abstraction instead of trying to design",
    "start": "1008530",
    "end": "1015160"
  },
  {
    "text": "our own Yamal file we rather do compliance and validation like we help",
    "start": "1015160",
    "end": "1021190"
  },
  {
    "text": "developers to write the correct kubernetes AML's we whitelist the",
    "start": "1021190",
    "end": "1026920"
  },
  {
    "text": "resources that they can use so right now you know because kubernetes has a lot of API s-- and we don't want this to become",
    "start": "1026920",
    "end": "1034209"
  },
  {
    "text": "like a Wild West where everybody uses some sort of beta or alpha API so we gather just whitelist that only these",
    "start": "1034210",
    "end": "1040870"
  },
  {
    "text": "resources can be used in production so all of these we validate through here",
    "start": "1040870",
    "end": "1046990"
  },
  {
    "text": "and that this was a major piece why we were able to take all the applications",
    "start": "1046990",
    "end": "1052840"
  },
  {
    "text": "from dev to prod while still being safe that you know nobody else will get hurt in the process we provide a lot of value",
    "start": "1052840",
    "end": "1061870"
  },
  {
    "text": "additions in the cluster servers every server has a DNS registration agent that sort of",
    "start": "1061870",
    "end": "1068470"
  },
  {
    "text": "automatically creates a DNS entry for all the clusters we provide everything",
    "start": "1068470",
    "end": "1074320"
  },
  {
    "text": "else that you come to expect in production heap stir pod restart counters logging shipping container logs",
    "start": "1074320",
    "end": "1080470"
  },
  {
    "text": "and if the container logs are structured we parse and ship structured logs as well so we sort of support both plain",
    "start": "1080470",
    "end": "1087190"
  },
  {
    "text": "text and structured log output and for now we use node ports for routing and",
    "start": "1087190",
    "end": "1093580"
  },
  {
    "text": "but we are moving to ingress and we are also working on like whenever you create a service we would also like to create",
    "start": "1093580",
    "end": "1100420"
  },
  {
    "text": "automatically external health checks for it just the same way we create an external DNS we also want to create",
    "start": "1100420",
    "end": "1106420"
  },
  {
    "text": "external health checks like Kingdom spy checks for all the services we offer",
    "start": "1106420",
    "end": "1114000"
  },
  {
    "text": "additional services like sidecar containers like as we said we deal with a lot of legacy services and some of",
    "start": "1114000",
    "end": "1120940"
  },
  {
    "text": "them require like geo databases which are like two gigabytes or three gigabytes in size and we can't build it",
    "start": "1120940",
    "end": "1128110"
  },
  {
    "text": "into the image so there are a lot of additional artifacts that every service requires and we just provide sidecar",
    "start": "1128110",
    "end": "1135190"
  },
  {
    "text": "containers that do our sinking of these artifacts to a host folder to a host",
    "start": "1135190",
    "end": "1141070"
  },
  {
    "text": "mounted folder so so we provide sidecar containers for additional artifacts and",
    "start": "1141070",
    "end": "1146080"
  },
  {
    "text": "we also provide endpoints for region specific services like if a service says",
    "start": "1146080",
    "end": "1151420"
  },
  {
    "text": "I want to connect to my sequel we make sure that this my sequel endpoint is",
    "start": "1151420",
    "end": "1157420"
  },
  {
    "text": "correctly configured for that service in every single region basically whatever",
    "start": "1157420",
    "end": "1163360"
  },
  {
    "text": "resource whatever persistent resource that DevOps provides is exposed as",
    "start": "1163360",
    "end": "1169380"
  },
  {
    "text": "kubernetes endpoints and we do CD for our own stuff as well and we were",
    "start": "1169380",
    "end": "1175660"
  },
  {
    "text": "multi-region focused from the beginning we did not try to hide you know there are two production regions for beau euro",
    "start": "1175660",
    "end": "1183520"
  },
  {
    "text": "we did not try to hide it from the developers developers are supposed to understand and configure their",
    "start": "1183520",
    "end": "1189970"
  },
  {
    "text": "application for multiple regions from day one most of the time like 90% of the",
    "start": "1189970",
    "end": "1196120"
  },
  {
    "text": "time the configuration is the same except certain stateful applications but we really",
    "start": "1196120",
    "end": "1201780"
  },
  {
    "text": "don't want to hide it from our developers so more and more annotation",
    "start": "1201780",
    "end": "1208020"
  },
  {
    "text": "driven services so some of our services have problems like you know suddenly",
    "start": "1208020",
    "end": "1213510"
  },
  {
    "text": "crashing under load like we want to capture their heap dumps when they crash we would like them to just specify that",
    "start": "1213510",
    "end": "1220440"
  },
  {
    "text": "they need heap dumps and we want to take care of it take care of that concern",
    "start": "1220440",
    "end": "1225960"
  },
  {
    "text": "rather than them having to write the old-style cron jobs in production environments we have to give them a",
    "start": "1225960",
    "end": "1231390"
  },
  {
    "text": "substitute and we would like to drive it through annotations like randoms auto scaling with metric queries like I",
    "start": "1231390",
    "end": "1237810"
  },
  {
    "text": "think with the recent release of kubernetes they have also added support for pluggable metrics we will be reviewing that too yeah external checks",
    "start": "1237810",
    "end": "1245550"
  },
  {
    "text": "status pages like we want to customize a lot of their functionality just by using",
    "start": "1245550",
    "end": "1251670"
  },
  {
    "text": "annotations so this is pretty much or",
    "start": "1251670",
    "end": "1256940"
  },
  {
    "text": "landscape we use the hyper vm's only for development and CI all or shant clusters",
    "start": "1256940",
    "end": "1263250"
  },
  {
    "text": "or in GAE in Google Cloud and Google container engine we use our Thetas for",
    "start": "1263250",
    "end": "1268590"
  },
  {
    "text": "security and compliance and we offer a lot of value-added services so this is",
    "start": "1268590",
    "end": "1274440"
  },
  {
    "text": "where we are this is what this what it took us to get here and so sorry",
    "start": "1274440",
    "end": "1279600"
  },
  {
    "text": "actually what did it take us to get here to this point from a really legacy world",
    "start": "1279600",
    "end": "1286080"
  },
  {
    "text": "right so the first thing is that containers are a cultural change right",
    "start": "1286080",
    "end": "1292920"
  },
  {
    "text": "so it's like all the all the years of working with dev and ops s silos and now",
    "start": "1292920",
    "end": "1300960"
  },
  {
    "text": "when we say that we are container izing everyone it doesn't mean only a deployment concern it also means that",
    "start": "1300960",
    "end": "1308070"
  },
  {
    "text": "developers are responsible for running their containers in production so it's like we have to do a lot of",
    "start": "1308070",
    "end": "1314310"
  },
  {
    "text": "presentations a lot of emails internal blogs internal emails call it lobbying and by the time we",
    "start": "1314310",
    "end": "1322020"
  },
  {
    "text": "actually started this out a lot of internal prototyping as well a few a few",
    "start": "1322020",
    "end": "1327030"
  },
  {
    "text": "hard projects that we had to prototype and prove to everyone that this works and it's better and by time we actually started for the company",
    "start": "1327030",
    "end": "1334710"
  },
  {
    "text": "everybody we're like we needed this yesterday where were you all this time so so we we decided to do all this at",
    "start": "1334710",
    "end": "1343049"
  },
  {
    "text": "the same time see ICD we made a unfortunate sighs across the whole",
    "start": "1343049",
    "end": "1348419"
  },
  {
    "text": "company we were doing coordinated releases a lot like the ten plus releases before before see ICD and",
    "start": "1348419",
    "end": "1356960"
  },
  {
    "text": "instead we now made it that you know all services have only git commit us the version that's about it so there is no",
    "start": "1356960",
    "end": "1364590"
  },
  {
    "text": "semantic versioning for services we use an anti questioning only for libraries all services just have git commit us",
    "start": "1364590",
    "end": "1370650"
  },
  {
    "text": "diversion and that's about it so doc rising Cuban writing so this was the",
    "start": "1370650",
    "end": "1376320"
  },
  {
    "text": "main focus of our whole effort right and we could not have done this without",
    "start": "1376320",
    "end": "1381540"
  },
  {
    "text": "support from across the organization so this part really mattered we had to take",
    "start": "1381540",
    "end": "1387690"
  },
  {
    "text": "support from the teams from the product owners from the managers from the business people business people were willing enough at a point to say that we",
    "start": "1387690",
    "end": "1395010"
  },
  {
    "text": "are ready to take risks and risks mean downtime like you know when you are doing such a huge change and when you",
    "start": "1395010",
    "end": "1401309"
  },
  {
    "text": "suddenly have a two or three hour downtime or revenue loss then it",
    "start": "1401309",
    "end": "1407100"
  },
  {
    "text": "reflects really badly it puts a black mark on your whole effort so we had to have everybody on board before we",
    "start": "1407100",
    "end": "1413400"
  },
  {
    "text": "started this out and we did not try to change the whole world at the same time like you know in the conference we see a",
    "start": "1413400",
    "end": "1420390"
  },
  {
    "text": "lot of things a lot of cool things happening like you know Prometheus monitoring start logging fluently a lot",
    "start": "1420390",
    "end": "1427380"
  },
  {
    "text": "of things happening right but we did not want to jump into everything at the same time this was already begin of as it",
    "start": "1427380",
    "end": "1434160"
  },
  {
    "text": "gets and the second thing that we did is wherever possible we try to migrate",
    "start": "1434160",
    "end": "1439530"
  },
  {
    "text": "applications as they are we did not try to you know make them 12 factor in the",
    "start": "1439530",
    "end": "1445530"
  },
  {
    "text": "process of migration like that that could have just we couldn't have put a timeline to it at all then so so we we",
    "start": "1445530",
    "end": "1454049"
  },
  {
    "text": "profiled a lot of our services there were some services that were close to 12 factor there were some services which",
    "start": "1454049",
    "end": "1460590"
  },
  {
    "text": "were not but they had a very small dependency graph and then like a few services which were really",
    "start": "1460590",
    "end": "1466580"
  },
  {
    "text": "hard legacy challenges and we always split the migration that we were",
    "start": "1466580",
    "end": "1471919"
  },
  {
    "text": "tackling all three at the same time like you know we had one prototype project with a really hard legacy service we",
    "start": "1471919",
    "end": "1478610"
  },
  {
    "text": "proved that this can be done with that service like it was a SBT play framework",
    "start": "1478610",
    "end": "1483760"
  },
  {
    "text": "stateful singleton application and a very core piece of our business and we",
    "start": "1483760",
    "end": "1489289"
  },
  {
    "text": "started with that and we proved that we can do for that and then at the same time we had smaller we were also",
    "start": "1489289",
    "end": "1496370"
  },
  {
    "text": "focusing in bulk on these services as well so we were trying profiled approach",
    "start": "1496370",
    "end": "1502010"
  },
  {
    "text": "and always balancing out which services were you know getting to see I seen EQ",
    "start": "1502010",
    "end": "1508159"
  },
  {
    "text": "British and everything because we didn't want to come to the legacy challenges in the end and suddenly hit a whole new",
    "start": "1508159",
    "end": "1514279"
  },
  {
    "text": "wall yeah so what this means is that if if some of these services took five",
    "start": "1514279",
    "end": "1520220"
  },
  {
    "text": "minutes to boot up if they had a six hundred megabyte container image if they had all those dev and ops hacks we don't",
    "start": "1520220",
    "end": "1526730"
  },
  {
    "text": "care we are not fixing it like we are first oh sorry yeah so we are first",
    "start": "1526730",
    "end": "1532750"
  },
  {
    "text": "establishing the pipe for them and once we establish the pipe once we empower",
    "start": "1532750",
    "end": "1537919"
  },
  {
    "text": "our developers they are smart enough to optimize the pipe from there yeah also",
    "start": "1537919",
    "end": "1544130"
  },
  {
    "text": "multiple approaches like you know we containerized a few services without actually serving traffic for people to",
    "start": "1544130",
    "end": "1550549"
  },
  {
    "text": "test we did shadow comparison traffic routing check the metrics check the logs",
    "start": "1550549",
    "end": "1556309"
  },
  {
    "text": "like check the metrics and logs of the service which is not serving all the new",
    "start": "1556309",
    "end": "1561380"
  },
  {
    "text": "customers right so we did all of these to migrate most of our services the",
    "start": "1561380",
    "end": "1570470"
  },
  {
    "text": "other thing that we learned is work closely with the feature teams like if it means that you have to get out of the",
    "start": "1570470",
    "end": "1576289"
  },
  {
    "text": "DevOps desk or team or whatever you are sitting close together it means yes like just get out of the desk and go and be",
    "start": "1576289",
    "end": "1582799"
  },
  {
    "text": "part of the developer journeys like go and be part of the feature teams and help them work with them let them on",
    "start": "1582799",
    "end": "1590510"
  },
  {
    "text": "their success let them go and present to their company what they have done and how things are better for them now it's",
    "start": "1590510",
    "end": "1596330"
  },
  {
    "text": "okay to own the failures but it's okay to you know distribute the success and avoid the same mistake that we have done",
    "start": "1596330",
    "end": "1602989"
  },
  {
    "text": "for all the years like you know dev and ops silos we don't want to repeat that when migrating to Cuba nice right we",
    "start": "1602989",
    "end": "1608720"
  },
  {
    "text": "just don't want to do it under a new name and the other thing that we learned again more and more learnings is that",
    "start": "1608720",
    "end": "1615549"
  },
  {
    "text": "embrace standards pick a standard you know today like DevOps tools is more",
    "start": "1615549",
    "end": "1621830"
  },
  {
    "text": "like a four year back NPM landscape where you had hundreds of micro J's",
    "start": "1621830",
    "end": "1627739"
  },
  {
    "text": "libraries you know 2 KB micro J's libraries every single week now it's just 2 MB golang binaries so there are a",
    "start": "1627739",
    "end": "1636169"
  },
  {
    "text": "lot of tools coming up and you have to choose really wisely you have to choose really well and you have to always be",
    "start": "1636169",
    "end": "1642789"
  },
  {
    "text": "into an ecosystem rather than trying to invent your own format or standard right",
    "start": "1642789",
    "end": "1648470"
  },
  {
    "text": "and what we do is whenever we are in doubt about a standard we just validate",
    "start": "1648470",
    "end": "1654139"
  },
  {
    "text": "like we just enforce a subset of it like the same way how we enforce a subset of",
    "start": "1654139",
    "end": "1659269"
  },
  {
    "text": "gitlab caml a subset of the helm chart or sub and a subset of the kubernetes api so we",
    "start": "1659269",
    "end": "1667009"
  },
  {
    "text": "always enforce a subset through validation linting whatever possible means through testing sometimes unit",
    "start": "1667009",
    "end": "1673789"
  },
  {
    "text": "tests and so that's how we evaluate a standard and then later we choose to",
    "start": "1673789",
    "end": "1679009"
  },
  {
    "text": "decide okay whether let's now move this out across the board and whatever we",
    "start": "1679009",
    "end": "1684409"
  },
  {
    "text": "develop we just dog food add it to ourselves first like devops first used it to deploy our own services and we had",
    "start": "1684409",
    "end": "1691909"
  },
  {
    "text": "a very very early on decision that we will create very little command-line tools and wherever possible docker and",
    "start": "1691909",
    "end": "1699739"
  },
  {
    "text": "cube CTL should be or like official docker and cube CTL unpatched should be your favorable tools like probably the",
    "start": "1699739",
    "end": "1707869"
  },
  {
    "text": "only tools that developers work with and so this is like it's a long list like",
    "start": "1707869",
    "end": "1714470"
  },
  {
    "text": "this a list of all the projects that we transition every single one is a journey and every single one is a success story",
    "start": "1714470",
    "end": "1723190"
  },
  {
    "text": "so what cube realities enabled us like Cubana T's was what enabled this",
    "start": "1724989",
    "end": "1731539"
  },
  {
    "text": "transition for us like you know previously you know you had to create cloud images and then do terraform and",
    "start": "1731539",
    "end": "1737690"
  },
  {
    "text": "then manipulate physical resources like when cloud first came cloud was called virtual and now that kubernetes is here",
    "start": "1737690",
    "end": "1744049"
  },
  {
    "text": "cloud is now called as physical and cuban tesis called as virtual so i don't",
    "start": "1744049",
    "end": "1749119"
  },
  {
    "text": "know the lines between what physical and virtual means anymore so so so it's like",
    "start": "1749119",
    "end": "1755090"
  },
  {
    "text": "so we got from physical to virtual resources purely because kubernetes makes it really easy for a developer to",
    "start": "1755090",
    "end": "1763429"
  },
  {
    "text": "write a Ammal and manipulate this say they are their own resources the same",
    "start": "1763429",
    "end": "1769220"
  },
  {
    "text": "way DevOps used to manipulate the cloud like instead of an instance group we were using a deployment instead of a load",
    "start": "1769220",
    "end": "1775129"
  },
  {
    "text": "balancer we are using a service and instead of disk images it's docker images so we're just translating one on",
    "start": "1775129",
    "end": "1780289"
  },
  {
    "text": "one cloud setup into a cube or a tea set up and yeah we just moved from Packer",
    "start": "1780289",
    "end": "1786320"
  },
  {
    "text": "build to cube CTL apply and this is safe enough that we can give full control to",
    "start": "1786320",
    "end": "1791989"
  },
  {
    "text": "our developers because this one nobody really feels comfortable you know",
    "start": "1791989",
    "end": "1797080"
  },
  {
    "text": "distributing to every team because it's very hard to control and it also involves real resources which cost money",
    "start": "1797080",
    "end": "1804759"
  },
  {
    "text": "so cube or Metis is what really enabled us to deliver this whole pipe like there",
    "start": "1804759",
    "end": "1811340"
  },
  {
    "text": "are individual solutions in each step for AML sharing or for development or",
    "start": "1811340",
    "end": "1816409"
  },
  {
    "text": "for CI or four-cd and for deployment but cube realities is an underpinning behind all of this and kubernetes also",
    "start": "1816409",
    "end": "1825320"
  },
  {
    "text": "enabled us to transition legacy and modern services like you know we are still running 400 MB services we are",
    "start": "1825320",
    "end": "1831139"
  },
  {
    "text": "still running you know 4 minute 5 minute boot up time services and kubernetes allowed us to transition all those yeah",
    "start": "1831139",
    "end": "1839470"
  },
  {
    "text": "so stepping forward what we what we would like to do going forward is that",
    "start": "1839470",
    "end": "1844659"
  },
  {
    "text": "so we started with engineering and then we tackled CI CD tooling value-added",
    "start": "1844659",
    "end": "1851029"
  },
  {
    "text": "services and then we have to automate our infrastructure and once we reach all these once we raised the bar across all",
    "start": "1851029",
    "end": "1858499"
  },
  {
    "text": "this then finally we can do site reliability engineering like once all our applications can do continuous",
    "start": "1858499",
    "end": "1864320"
  },
  {
    "text": "delivery we make sure that so once all our applications have compatibility policies",
    "start": "1864320",
    "end": "1869780"
  },
  {
    "text": "like if every single release is compatible with the previous write then what we can do is we can we can",
    "start": "1869780",
    "end": "1876530"
  },
  {
    "text": "automatically make prod mean prod zero or prod one person like right now they",
    "start": "1876530",
    "end": "1882920"
  },
  {
    "text": "are deploying 200% of prod traffic without changing any of their processes",
    "start": "1882920",
    "end": "1887990"
  },
  {
    "text": "we can just say that whenever they mean I want to deploy it to prod like when they say environment prod we can deploy",
    "start": "1887990",
    "end": "1895040"
  },
  {
    "text": "it to a 10 percent or 1 percent or zero percent broad cluster and from there we",
    "start": "1895040",
    "end": "1900800"
  },
  {
    "text": "can synch to all the other clusters based on metric stability and so on so",
    "start": "1900800",
    "end": "1906200"
  },
  {
    "text": "but we have to cross all these to do this we also want to do better state",
    "start": "1906200",
    "end": "1911210"
  },
  {
    "text": "management so you know the y8s is service is good like it's easy to use",
    "start": "1911210",
    "end": "1917630"
  },
  {
    "text": "but at the same time you have to clean up afterwards like you know whenever you change the deployment labels or you know",
    "start": "1917630",
    "end": "1923810"
  },
  {
    "text": "when you rename the service you have to go and manually clean up the old service like that's what helm is really good at helm is able to convert this whole thing",
    "start": "1923810",
    "end": "1932180"
  },
  {
    "text": "into one atomic transaction clean up everything and then run the new services so we we would like to move slowly to",
    "start": "1932180",
    "end": "1939410"
  },
  {
    "text": "better state management there are multiple ways of doing it and we also",
    "start": "1939410",
    "end": "1944540"
  },
  {
    "text": "want to do secret management again you know we don't want to leave our payment",
    "start": "1944540",
    "end": "1950150"
  },
  {
    "text": "gateways and so on like all the other secrets lying around and disk in the application developer repositories like",
    "start": "1950150",
    "end": "1955760"
  },
  {
    "text": "we can't make sure that you know all the application developers have all this really figure out so whether we would",
    "start": "1955760",
    "end": "1962210"
  },
  {
    "text": "want to move to some form of secret management not necessarily at runtime but also during CI time or during deploy",
    "start": "1962210",
    "end": "1969680"
  },
  {
    "text": "time or in the compliance gateway like there are multiple layers where we can do this you want to move to ingress and",
    "start": "1969680",
    "end": "1976220"
  },
  {
    "text": "the Federation plane if a service is down in one region we want calls to it",
    "start": "1976220",
    "end": "1981260"
  },
  {
    "text": "to go to another region and we also want to enable namespace quotas and finally",
    "start": "1981260",
    "end": "1986330"
  },
  {
    "text": "have a sense of you know how much resources is each namespace really using",
    "start": "1986330",
    "end": "1991700"
  },
  {
    "text": "like we don't want a service that is handling 1% of traffic to consume 99% of",
    "start": "1991700",
    "end": "1998720"
  },
  {
    "text": "and resources this is what we would like to stepping forward so this this does",
    "start": "1998720",
    "end": "2006880"
  },
  {
    "text": "not cover as I said before like we did not try to change any of our monitoring",
    "start": "2006880",
    "end": "2012370"
  },
  {
    "text": "logging and all the other stacks like me kept stuff as it is so but this is",
    "start": "2012370",
    "end": "2017650"
  },
  {
    "text": "purely or CI CD dev to prod transition and if you have any other questions I'll",
    "start": "2017650",
    "end": "2022960"
  },
  {
    "text": "be happy to answer [Applause]",
    "start": "2022960",
    "end": "2034259"
  }
]