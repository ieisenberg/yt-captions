[
  {
    "text": "all right thank you everyone for joining us for today's live webinar with",
    "start": "1719",
    "end": "7280"
  },
  {
    "text": "cncf AKs and spin integration I'm liby Schultz and I'll be moderating today's",
    "start": "7280",
    "end": "13080"
  },
  {
    "text": "live webinar I'm going to read our code of conduct and then hand over to Ralph sillis principal product manager Azure",
    "start": "13080",
    "end": "19600"
  },
  {
    "text": "core Upstream at Microsoft a few housekeeping items before we get started during the webinar you're not able to",
    "start": "19600",
    "end": "25960"
  },
  {
    "text": "speak but there is a chat box please go ahead and pop your questions in there as we go Ralph is ready to get to your",
    "start": "25960",
    "end": "34160"
  },
  {
    "text": "questions this is an official webinar of the cncf and as such is subject to the cncf code of conduct please do not add",
    "start": "34160",
    "end": "41440"
  },
  {
    "text": "anything to the chat or questions that would be in violation of that code of conduct and please be respectful of all",
    "start": "41440",
    "end": "47160"
  },
  {
    "text": "your fellow participants and presenters please also note that the recording and slides will be posted later today to the",
    "start": "47160",
    "end": "53440"
  },
  {
    "text": "cncf online programs page at community. cncf doio under online programs they're",
    "start": "53440",
    "end": "60199"
  },
  {
    "text": "also available via your registration link you use today and the recording will be on our online programs YouTube",
    "start": "60199",
    "end": "66119"
  },
  {
    "text": "playlist with that I will hand things over to Ralph to kick it off all right uh can everybody hear me",
    "start": "66119",
    "end": "75240"
  },
  {
    "text": "okay somebody give me a thumbs up or the equivalent of a thumbs up in the uh in",
    "start": "75240",
    "end": "82600"
  },
  {
    "text": "the chat just to make sure we're doing okay all right we've got one that means",
    "start": "82600",
    "end": "88320"
  },
  {
    "text": "we're doing okay uh thank you thank you very much Libby and I'm really really pleased to be here um the uh high order",
    "start": "88320",
    "end": "95439"
  },
  {
    "text": "bit is is talking about web assembly and seeing how easy it is to get started and make things work but we also want to",
    "start": "95439",
    "end": "101640"
  },
  {
    "text": "talk about uh the areas where web assembly is difficult so that you're aware of them don't get frustrated when",
    "start": "101640",
    "end": "106920"
  },
  {
    "text": "you bum into them and so forth and we can also talk about the future of these areas like that when will they improve",
    "start": "106920",
    "end": "113880"
  },
  {
    "text": "when will this be uh super ready to use where you won't even think about anything and so forth we'll just cover the whole gamut and we'll also talk uh",
    "start": "113880",
    "end": "122200"
  },
  {
    "text": "generally about uh web assembly itself and the component model these are the you know the questions like why we do",
    "start": "122200",
    "end": "129000"
  },
  {
    "text": "these things and so forth are very very important um as engineers and as people",
    "start": "129000",
    "end": "135120"
  },
  {
    "text": "in the business of software um depending where you are in the in the entire ecosystem of the world um sometimes the",
    "start": "135120",
    "end": "143000"
  },
  {
    "text": "business questions are more important than the engineering questions and sometimes the engineering questions are more important than business questions",
    "start": "143000",
    "end": "148840"
  },
  {
    "text": "and those are three different things so we can talk about those kinds of things as well and I am going to walk you",
    "start": "148840",
    "end": "154680"
  },
  {
    "text": "through a good portion of uh the spin uh faon Workshop that we did",
    "start": "154680",
    "end": "162480"
  },
  {
    "text": "collaboratively um with the faon team at cucon and Chicago just to give you an idea of how easy this is so I did drop a",
    "start": "162480",
    "end": "169440"
  },
  {
    "text": "link into the chat um but we'll you know I'll reiterate it you'll see the the",
    "start": "169440",
    "end": "174560"
  },
  {
    "text": "links when we get to the demo part of the of the session and so you can",
    "start": "174560",
    "end": "180280"
  },
  {
    "text": "actually install this and follow along it's really easy to do takes about maybe five 10 minutes to set up uh",
    "start": "180280",
    "end": "188599"
  },
  {
    "text": "your machine depending on whether you have dock or a desktop installed depending on whether you need to install",
    "start": "188599",
    "end": "194400"
  },
  {
    "text": "Spin 2.0.1 and uh also things like uh let's",
    "start": "194400",
    "end": "202280"
  },
  {
    "text": "see what else uh the language that you intend to use and so we'll go through those various areas we'll build a couple",
    "start": "202280",
    "end": "207920"
  },
  {
    "text": "of languages um but and we will also show you the difference in performance",
    "start": "207920",
    "end": "213080"
  },
  {
    "text": "which is really really critical between uh Native spin um modules with different",
    "start": "213080",
    "end": "219319"
  },
  {
    "text": "languages because different languages have different performance characteristics we'll show you that and",
    "start": "219319",
    "end": "224640"
  },
  {
    "text": "also the comparison between uh web assembly Standalone and web things like",
    "start": "224640",
    "end": "231159"
  },
  {
    "text": "uh containerized web assembly like in kubernetes very very different experience and there are little bits of",
    "start": "231159",
    "end": "236640"
  },
  {
    "text": "overhead there that are F uh that are important to be aware of um all of these",
    "start": "236640",
    "end": "241680"
  },
  {
    "text": "are just normal engineering differences they're not uh as a result of anything",
    "start": "241680",
    "end": "246760"
  },
  {
    "text": "going wrong they're result of very different choices at the engineering level at the technical level so let's",
    "start": "246760",
    "end": "253120"
  },
  {
    "text": "get started um to do that I've got a little bit of an introduction on web assembly I want to make sure that we're",
    "start": "253120",
    "end": "258479"
  },
  {
    "text": "all in the same uh boat more or less and",
    "start": "258479",
    "end": "263880"
  },
  {
    "text": "let's see I got that started so let's go back to the webinar page and I'm going to share my screen and first you're",
    "start": "263880",
    "end": "269759"
  },
  {
    "text": "going to get Inception and then we'll jump over to um the actual screen so",
    "start": "269759",
    "end": "276680"
  },
  {
    "text": "we're going to do the entire screen here uh in theory that should be okay I'm G to hide my screen we now have Inception",
    "start": "276680",
    "end": "285039"
  },
  {
    "text": "so I'm going to go over here uh and so in theory uh everybody can see AKs and",
    "start": "285039",
    "end": "290960"
  },
  {
    "text": "spin 101 to zoom so we're going to go from the very Beginnings all the way up",
    "start": "290960",
    "end": "296639"
  },
  {
    "text": "to burning a whole bunch of cores really fast um my name is R Kachi as Libby said",
    "start": "296639",
    "end": "303919"
  },
  {
    "text": "I'm on the Azure Court Upstream team I'm also the Microsoft board member for the bite code Alliance Foundation that",
    "start": "303919",
    "end": "310000"
  },
  {
    "text": "Foundation provides the legal and engineering resources to ensure that uh",
    "start": "310000",
    "end": "316360"
  },
  {
    "text": "more than I believe now more than 2,000 developers are in the ecosystem that we",
    "start": "316360",
    "end": "321720"
  },
  {
    "text": "know of messaging communicating and and committing uh it's quite a quite a",
    "start": "321720",
    "end": "327479"
  },
  {
    "text": "substantial group of people all of whom committing um to one of the repositories",
    "start": "327479",
    "end": "332639"
  },
  {
    "text": "things like run times like web assembly uh micro runtime or whammer and WM time",
    "start": "332639",
    "end": "338360"
  },
  {
    "text": "in addition to all the tooling necessary for the web assembly component model all",
    "start": "338360",
    "end": "344360"
  },
  {
    "text": "of that work ends up if it's a specification ends up in the w3c um or is a tool that is generally",
    "start": "344360",
    "end": "351960"
  },
  {
    "text": "available for anybody to use we love to have you do it so here's the abstract uh we this was on the um front page of the",
    "start": "351960",
    "end": "359840"
  },
  {
    "text": "site for the webinar um but first we're going to talk about web assembly itself then we're going to talk about how you",
    "start": "359840",
    "end": "365720"
  },
  {
    "text": "make these things into kubernetes and then we're gonna actually do it and uh",
    "start": "365720",
    "end": "371560"
  },
  {
    "text": "we're going to use spin because it's a really one of the more fantastic serverless platforms to run web assembly",
    "start": "371560",
    "end": "377599"
  },
  {
    "text": "I'm going to show you the differences okay so first let's talk about why we do",
    "start": "377599",
    "end": "383440"
  },
  {
    "text": "this web assembly thing right the problem space that we're in um doesn't initially seem like a",
    "start": "383440",
    "end": "390400"
  },
  {
    "text": "problem space unless you've been really working on containers for a while and it also doesn't seem like a problem space",
    "start": "390400",
    "end": "396800"
  },
  {
    "text": "if you've been doing native code like if especially in particular there's a lot of artisanal native code still on the",
    "start": "396800",
    "end": "403160"
  },
  {
    "text": "edge like not in hyperscale Cloud native not in kubernetes for example and both",
    "start": "403160",
    "end": "409960"
  },
  {
    "text": "crowds might think this isn't really a they don't really have a problem there's so many things that they have yet to",
    "start": "409960",
    "end": "415479"
  },
  {
    "text": "improve on and that's probably true but for a lot of people we've been working on containers for 10 plus years now and",
    "start": "415479",
    "end": "422639"
  },
  {
    "text": "kubernetes for quite a while and what you realize is that you want to do things with containers that are really",
    "start": "422639",
    "end": "429240"
  },
  {
    "text": "you just can't do and a lot of them revolve around the fact that containers are essentially too much",
    "start": "429240",
    "end": "436360"
  },
  {
    "text": "Vish right and we'll get to what that means so before we get to that though we",
    "start": "436360",
    "end": "443960"
  },
  {
    "text": "want to talk about the core feature set of web assembly and the first one is",
    "start": "443960",
    "end": "449440"
  },
  {
    "text": "that it is actually essentially a cloud native binary and if we think of containers as sort of a cloud native application that's the way we sort of",
    "start": "449440",
    "end": "455840"
  },
  {
    "text": "thought about it for a while but it's really a cloud native operating system with an application on it um web",
    "start": "455840",
    "end": "463199"
  },
  {
    "text": "assembly is extremely small it's essentially a binary format for uh an",
    "start": "463199",
    "end": "469319"
  },
  {
    "text": "abstract virtual machine and as a result you compile it to a binary like you",
    "start": "469319",
    "end": "475960"
  },
  {
    "text": "compile to a web assembly module and it's very very different than the docker",
    "start": "475960",
    "end": "481400"
  },
  {
    "text": "container um experience that we're used to with containers for example and it also makes things very small and I'll",
    "start": "481400",
    "end": "487599"
  },
  {
    "text": "give you an example um so and you're you're thinking about containers some of",
    "start": "487599",
    "end": "492680"
  },
  {
    "text": "the containers are very very large that's not really the important thing those do get smaller but let's take a",
    "start": "492680",
    "end": "499159"
  },
  {
    "text": "very small container like a go language um container that we have one we were compiling one of our go language",
    "start": "499159",
    "end": "505879"
  },
  {
    "text": "operators which is only about 12 megabytes and we compiled that down to web assembly and we got that down to 176",
    "start": "505879",
    "end": "513200"
  },
  {
    "text": "KB and that's a substantial reduction if uh you have a big language with a big",
    "start": "513200",
    "end": "519680"
  },
  {
    "text": "runtime and things like that the reduction might not be so much but at the same time something like net for",
    "start": "519680",
    "end": "526480"
  },
  {
    "text": "example um which is a substantial runtime can be contained at about 50 50",
    "start": "526480",
    "end": "532959"
  },
  {
    "text": "or 60 megabytes um for a very optimized container but comp fing down to web",
    "start": "532959",
    "end": "539920"
  },
  {
    "text": "assembly we immediately dropped within the realm of TW 10 megabytes and we believe we can get it down below five",
    "start": "539920",
    "end": "546320"
  },
  {
    "text": "and so there really are scales of of difference between size",
    "start": "546320",
    "end": "551560"
  },
  {
    "text": "here the second bit is that we have a b by default deny security stance and we",
    "start": "551560",
    "end": "558360"
  },
  {
    "text": "had to have this because web assembly was born in the browser was born in",
    "start": "558360",
    "end": "564160"
  },
  {
    "text": "order to enable complex languages uh Advanced languages C and rust and other",
    "start": "564160",
    "end": "570760"
  },
  {
    "text": "languages like that to compile and be able to host in a JavaScript engine and",
    "start": "570760",
    "end": "575920"
  },
  {
    "text": "it turns out it works really really well but to do that the browser has to have",
    "start": "575920",
    "end": "581519"
  },
  {
    "text": "complete control over what the module is able to do and that means the browser",
    "start": "581519",
    "end": "586560"
  },
  {
    "text": "the host of web assembly is able to opt in to behaviors that the module may wish",
    "start": "586560",
    "end": "592720"
  },
  {
    "text": "to perform unlike containers where you have direct access to the kernel the container essentially can be prevented",
    "start": "592720",
    "end": "600480"
  },
  {
    "text": "from doing things in the kernel but otherwise the container believes and by default has access to the kernel which",
    "start": "600480",
    "end": "607600"
  },
  {
    "text": "is extremely large uh surface to attack and so that becomes a very very",
    "start": "607600",
    "end": "613279"
  },
  {
    "text": "difficult thing to secure even though the industry's made tons of changes the other one has to do with portability",
    "start": "613279",
    "end": "619640"
  },
  {
    "text": "it's web assemblies language agnostic as in abstract virtual specification right",
    "start": "619640",
    "end": "626079"
  },
  {
    "text": "um any language could in theory compiled to it and many if not most do in some",
    "start": "626079",
    "end": "631120"
  },
  {
    "text": "way shape or form for Better or For Worse depending on the languages and I'm expecting some questions about that kind",
    "start": "631120",
    "end": "636800"
  },
  {
    "text": "of thing I'll I'll be happy to discuss it but it's also OS agnostic think about",
    "start": "636800",
    "end": "642320"
  },
  {
    "text": "running inside a browser you'd have to be able to run on Windows and on Mac and on Linux and things like this and so the",
    "start": "642320",
    "end": "649880"
  },
  {
    "text": "operating system can't be relevant at all so it isn't and that allows one",
    "start": "649880",
    "end": "655600"
  },
  {
    "text": "module to move from one operating system to the other and finally it's CPU",
    "start": "655600",
    "end": "660680"
  },
  {
    "text": "architecture agnostic think about again browsers they have to be able to run on",
    "start": "660680",
    "end": "665800"
  },
  {
    "text": "arm they have to be able to run on AMD but more importantly they often run on very strange chips indeed and so as a",
    "start": "665800",
    "end": "672639"
  },
  {
    "text": "result so does web assembly and that language OS and CPU agnosticism if you",
    "start": "672639",
    "end": "680040"
  },
  {
    "text": "will can bring it to almost any location because it's very small and so it's location agnostic you can run it almost",
    "start": "680040",
    "end": "688160"
  },
  {
    "text": "anywhere so these are the key feature sets but what do we mean really what is web",
    "start": "688160",
    "end": "695240"
  },
  {
    "text": "assembly right and why I've stolen this keynote uh slide from Luke Wagner at",
    "start": "695240",
    "end": "702279"
  },
  {
    "text": "fley distinguished engineer there and a key uh designer and contributor to the",
    "start": "702279",
    "end": "707639"
  },
  {
    "text": "component model and web assembly and the link you'll get this deck and the link",
    "start": "707639",
    "end": "712680"
  },
  {
    "text": "is the YouTube keynote from WMC con which was in September and Luke laid it",
    "start": "712680",
    "end": "718440"
  },
  {
    "text": "out like this this web assembly is a binary instruction format for a stack",
    "start": "718440",
    "end": "723480"
  },
  {
    "text": "based virtual machine and that's abstract St stack based virtual machine",
    "start": "723480",
    "end": "728800"
  },
  {
    "text": "in other words there is no physical machine that's that's designed this way you need a runtime to present this",
    "start": "728800",
    "end": "735600"
  },
  {
    "text": "machine to your web assembly um and execute it and wasm then is designed as",
    "start": "735600",
    "end": "742240"
  },
  {
    "text": "a portable compilation Target so you shouldn't think of it so much as a web a virtual machine in the sense of",
    "start": "742240",
    "end": "749199"
  },
  {
    "text": "hypervisor right it is a generalized virtual machine but the specification for executing one is not a hypervisor",
    "start": "749199",
    "end": "757040"
  },
  {
    "text": "it's in fact a web assembly runtime and from the language point of view you",
    "start": "757040",
    "end": "762079"
  },
  {
    "text": "should be able to compile your native code directly to web",
    "start": "762079",
    "end": "768120"
  },
  {
    "text": "assembly to get the advantages of web assembly portability off language and",
    "start": "768120",
    "end": "773680"
  },
  {
    "text": "runtime agnostic and so forth so how does that look like so if we think about regulars language that we use in",
    "start": "773680",
    "end": "779800"
  },
  {
    "text": "developer right go R JavaScript c c PHP Java all of these things right",
    "start": "779800",
    "end": "787320"
  },
  {
    "text": "normally they would be compiled out to a specific operating system or specific",
    "start": "787320",
    "end": "793399"
  },
  {
    "text": "architecture like you see here and some languages that do interpretation like",
    "start": "793399",
    "end": "798720"
  },
  {
    "text": "python or JavaScript will have actually the compilation Target will will take place inside the JavaScript runtime",
    "start": "798720",
    "end": "806199"
  },
  {
    "text": "it'll be parsed and interpreted um or ahead of time compiled for the specific",
    "start": "806199",
    "end": "812839"
  },
  {
    "text": "um uh operating system and architecture right so the glory of web assembly is",
    "start": "812839",
    "end": "819160"
  },
  {
    "text": "that because almost all languages can Target it you could compile directly to web assembly and if you did that a",
    "start": "819160",
    "end": "826440"
  },
  {
    "text": "browser or a wasm engine or a wasm engine on a phone or a browser on a",
    "start": "826440",
    "end": "832560"
  },
  {
    "text": "phone or a device can in fact automatically handle the translation",
    "start": "832560",
    "end": "838759"
  },
  {
    "text": "between architectures and operating systems for you which means your language can be compiled once and can",
    "start": "838759",
    "end": "845600"
  },
  {
    "text": "run in all of those places now that's a very interesting experience right and Luke had said the",
    "start": "845600",
    "end": "853160"
  },
  {
    "text": "winds are portability determinism and control flow integrity",
    "start": "853160",
    "end": "858680"
  },
  {
    "text": "and those two determinism and control flow in Integrity those have to do with the fact that the uh code the the",
    "start": "858680",
    "end": "866880"
  },
  {
    "text": "specification for web assembly does not allow arbitrary creation of memory and",
    "start": "866880",
    "end": "872320"
  },
  {
    "text": "so things like go-tos and infinite loops and so forth don't really exist that's",
    "start": "872320",
    "end": "877560"
  },
  {
    "text": "actually a good thing because it means you can programmatically examine a",
    "start": "877560",
    "end": "882920"
  },
  {
    "text": "module or even test a runtime for conformance to ensure that the sandbox",
    "start": "882920",
    "end": "890399"
  },
  {
    "text": "uh is not broken out of or that you're not leaking memory anywhere or violating somebody else's memory and that's really",
    "start": "890399",
    "end": "896560"
  },
  {
    "text": "cool and and that along with the specification for a Sandbox um which was",
    "start": "896560",
    "end": "901800"
  },
  {
    "text": "required for browser hosting as you can imagine gives us the ability to start",
    "start": "901800",
    "end": "906920"
  },
  {
    "text": "and protect any module from the memory of any other module or the host and do it",
    "start": "906920",
    "end": "914759"
  },
  {
    "text": "lightning speed this is really fantastic so my modification this is my modified",
    "start": "914759",
    "end": "920040"
  },
  {
    "text": "version is the winds are portability security size and speed by default",
    "start": "920040",
    "end": "926440"
  },
  {
    "text": "nobody can do anything with your with your module and to get an idea of what this really means if you think about uh",
    "start": "926440",
    "end": "933800"
  },
  {
    "text": "last year's log for J um issue with malicious code that basically assumed it",
    "start": "933800",
    "end": "941079"
  },
  {
    "text": "had operating systemwide access but if you didn't notice that it was compiled",
    "start": "941079",
    "end": "946160"
  },
  {
    "text": "as a dependency for your application it would go ahead and use the operating system to exfiltrate data and",
    "start": "946160",
    "end": "953720"
  },
  {
    "text": "credentials that can't happen in web assembly by default you can only opt into that ability and that's something",
    "start": "953720",
    "end": "960959"
  },
  {
    "text": "that you can control but in a container environment it's very very hard to do that a priori for all the containers",
    "start": "960959",
    "end": "967880"
  },
  {
    "text": "that you wish to run and all the dependencies therein okay so when we get concrete what you",
    "start": "967880",
    "end": "975240"
  },
  {
    "text": "want a list like this this comes from a um a uh presentation that I saw that was actually pretty good and you can see",
    "start": "975240",
    "end": "982120"
  },
  {
    "text": "that like for some several aspects web assembling might be several megabytes in reality we target for well under a",
    "start": "982120",
    "end": "988920"
  },
  {
    "text": "megabyte if we possibly can and it depends what you're trying to run if you're running something like a postris",
    "start": "988920",
    "end": "994560"
  },
  {
    "text": "server in uh web assembly it might be more than a several megabytes but if",
    "start": "994560",
    "end": "999639"
  },
  {
    "text": "you're running a serverless function it might be as little as several hundred KB and that's fantastic because it's really",
    "start": "999639",
    "end": "1005319"
  },
  {
    "text": "what you want to Target the container on the other hand extremely large and laughing at the",
    "start": "1005319",
    "end": "1011560"
  },
  {
    "text": "hundreds of megabytes because I routinely see containers that are well more than a gigabyte and still fully",
    "start": "1011560",
    "end": "1017839"
  },
  {
    "text": "functional as a server as as a service because the developer doesn't have to pay for the big Network and the big",
    "start": "1017839",
    "end": "1024240"
  },
  {
    "text": "machines and if they don't have to pay they don't have to optimize and so there's really kind of a a what you",
    "start": "1024240",
    "end": "1029600"
  },
  {
    "text": "might call a disciplinary and operational um mismatch there startup time for web assembly used to be",
    "start": "1029600",
    "end": "1036280"
  },
  {
    "text": "referred to as milliseconds that's not actually true um for a noop web assembly",
    "start": "1036280",
    "end": "1041600"
  },
  {
    "text": "you can start from cold and enter a web assembly function in low nanc and you will see that millisec",
    "start": "1041600",
    "end": "1048720"
  },
  {
    "text": "startup time is actually not considered very good we're actually going to show",
    "start": "1048720",
    "end": "1054320"
  },
  {
    "text": "you that and I'm going to describe the problems with my machine that result in",
    "start": "1054320",
    "end": "1060280"
  },
  {
    "text": "mere microseconds instead of instead of nanoseconds it's possible that uh that",
    "start": "1060280",
    "end": "1065720"
  },
  {
    "text": "you can get into the nanc yourself with spin containers start in seconds but the",
    "start": "1065720",
    "end": "1071400"
  },
  {
    "text": "bigger they are the more those seconds stretch out into even minutes but they're still much better than VMS in",
    "start": "1071400",
    "end": "1078600"
  },
  {
    "text": "performance speed web assembly is usually said to be kind of about 10% of native speed but it really varies on",
    "start": "1078600",
    "end": "1085720"
  },
  {
    "text": "what you're trying to do uh if in fact you want to run at Native speed you can",
    "start": "1085720",
    "end": "1091679"
  },
  {
    "text": "certain kinds of workloads H especially if you ahead of time compile um but you're not really going",
    "start": "1091679",
    "end": "1100080"
  },
  {
    "text": "to get close to 10% of native speed if you're doing all kinds of heavy work uh that web assembly is not really leaning",
    "start": "1100080",
    "end": "1106320"
  },
  {
    "text": "into yet so web assembly also runs in the browser uh crossplatform portability",
    "start": "1106320",
    "end": "1111720"
  },
  {
    "text": "is extremely high all the standards are in w3c and oci uh and also the cncf so",
    "start": "1111720",
    "end": "1117480"
  },
  {
    "text": "we're going to show you the Run Wy project in container D and system interactions we use Wy or",
    "start": "1117480",
    "end": "1124679"
  },
  {
    "text": "the web assembly system interfaces or standard interfaces to model an",
    "start": "1124679",
    "end": "1130159"
  },
  {
    "text": "underlying OS and virtualize it and we'll show you a little bit what those mean later on this isn't exactly uh as",
    "start": "1130159",
    "end": "1137960"
  },
  {
    "text": "you can see the current way of interpreting but it gives you some idea of the differences that we're looking at",
    "start": "1137960",
    "end": "1144039"
  },
  {
    "text": "here now why what and why this web assembly thing let's get back to the whole vmh problem so what what do we",
    "start": "1144039",
    "end": "1153000"
  },
  {
    "text": "really mean with that so what we really mean is that essentially VMS were a",
    "start": "1153000",
    "end": "1158559"
  },
  {
    "text": "tremendous Advance on bare metal code code that was native running on a bare",
    "start": "1158559",
    "end": "1163600"
  },
  {
    "text": "metal installation of an operating system and that th that code was built",
    "start": "1163600",
    "end": "1168919"
  },
  {
    "text": "and created especially if you're talking about Linux and open source code often",
    "start": "1168919",
    "end": "1174080"
  },
  {
    "text": "the core uh code bases were created 2030 40 years ago and what we're doing is",
    "start": "1174080",
    "end": "1179280"
  },
  {
    "text": "bringing forward all of the assumptions that that code made and much of our",
    "start": "1179280",
    "end": "1184600"
  },
  {
    "text": "security uh and supply chain issues that we're dealing with now in the container ecosystem really are a result of the",
    "start": "1184600",
    "end": "1191039"
  },
  {
    "text": "fact that all of that code assumed it had full OS permissions everybody loves",
    "start": "1191039",
    "end": "1196320"
  },
  {
    "text": "root um if I could get my daughter to behave properly when I called out pseudo",
    "start": "1196320",
    "end": "1202600"
  },
  {
    "text": "I would love that but that's not the way humans work and it really isn't actually the way we want code to work in the",
    "start": "1202600",
    "end": "1209080"
  },
  {
    "text": "future it is true that containers essentially sold themselves based on",
    "start": "1209080",
    "end": "1216520"
  },
  {
    "text": "like containing an application but that application was actually bundled up with an operating system in it as layers and",
    "start": "1216520",
    "end": "1224400"
  },
  {
    "text": "so forth and the only thing that was really shared was the kernel and that that the assumptions of the code you",
    "start": "1224400",
    "end": "1229840"
  },
  {
    "text": "brought with it were the essentially the assumptions of full operating system permission with containers if you don't",
    "start": "1229840",
    "end": "1236919"
  },
  {
    "text": "have to boot boot the kernel you turns out you come up pretty fast and that's",
    "start": "1236919",
    "end": "1242280"
  },
  {
    "text": "really nice when you're comparing yourself with VMS and you know and so forth and native code if you had to boot",
    "start": "1242280",
    "end": "1247799"
  },
  {
    "text": "the O in the beginning but in reality these features really impact kubernetes",
    "start": "1247799",
    "end": "1254720"
  },
  {
    "text": "and it turns out that kubernetes is limited in its usage scenarios not",
    "start": "1254720",
    "end": "1260679"
  },
  {
    "text": "because kubernetes has any inherent problem but because the features that you need are not container features so",
    "start": "1260679",
    "end": "1268559"
  },
  {
    "text": "to make kubernetes useful in more scenarios and at less cost what you",
    "start": "1268559",
    "end": "1274520"
  },
  {
    "text": "really want are small smaller excuse me more responsive clusters and that cost",
    "start": "1274520",
    "end": "1280760"
  },
  {
    "text": "will that will drive clost down and by smaller clusters you'd like to be able to have a fewer nodes you'd like to have",
    "start": "1280760",
    "end": "1287640"
  },
  {
    "text": "those no running on smaller SKS for example or maybe even an arm right uh",
    "start": "1287640",
    "end": "1293799"
  },
  {
    "text": "skew so that in fact you can pay 20 or 30% less depending on where you're doing",
    "start": "1293799",
    "end": "1299600"
  },
  {
    "text": "your Cloud husting for example you'd also want to run clusters in small heterogenous spaces um maybe you're a",
    "start": "1299600",
    "end": "1306480"
  },
  {
    "text": "restaurant and you want to run one cluster with one node for each point of sale cashier cash reg cash register that",
    "start": "1306480",
    "end": "1314559"
  },
  {
    "text": "you have maybe you want to just have a serve HTML 5 and push buttons and that a",
    "start": "1314559",
    "end": "1320159"
  },
  {
    "text": "regular kubernetes distribution doesn't really serve itself lend itself to that environment there's very little I it",
    "start": "1320159",
    "end": "1327279"
  },
  {
    "text": "support um it's hard to keep things running and so when you do you want something that's a lot more flexible you",
    "start": "1327279",
    "end": "1333440"
  },
  {
    "text": "also have older machines you have different architectures not everything's the same and your networks are weak so",
    "start": "1333440",
    "end": "1339919"
  },
  {
    "text": "you can't use a big huge container so that's really important web assembly",
    "start": "1339919",
    "end": "1345159"
  },
  {
    "text": "helps address these situations and it brings kubernetes to new places where otherwise you wouldn't expect it to",
    "start": "1345159",
    "end": "1351080"
  },
  {
    "text": "appear if at all and finally you can ignore nodes and",
    "start": "1351080",
    "end": "1356480"
  },
  {
    "text": "pods and let the Ops Team Ops Team choose skews now the interesting thing",
    "start": "1356480",
    "end": "1361520"
  },
  {
    "text": "about this is that it's hard to know what that means until you see it and I'm",
    "start": "1361520",
    "end": "1366840"
  },
  {
    "text": "going to show you in just a second all of this stuff I'm talking about right now is purely open source it's the best",
    "start": "1366840",
    "end": "1373640"
  },
  {
    "text": "of the cncf container D is the vanilla shim with run see inside and there is a",
    "start": "1373640",
    "end": "1379520"
  },
  {
    "text": "run Wy shim project there which you can use and we're going to show you how that works um in a little bit and mo most of",
    "start": "1379520",
    "end": "1387360"
  },
  {
    "text": "the web assembly stuff that we're going to use is hosted or related to the BCA or the cncf for example wasm edges in",
    "start": "1387360",
    "end": "1395200"
  },
  {
    "text": "the cncf and wasm time which we're going to use here and whammer and other uh",
    "start": "1395200",
    "end": "1400240"
  },
  {
    "text": "tools to run and use components are in um the",
    "start": "1400240",
    "end": "1406159"
  },
  {
    "text": "BCA and we're also going to highlight I also want to highlight kwm which is a great open source project",
    "start": "1406159",
    "end": "1414000"
  },
  {
    "text": "that allows you to install the kubernetes shims the Run wasi shims almost anywhere uh which means you can",
    "start": "1414000",
    "end": "1420360"
  },
  {
    "text": "run what we're going to run tonight in AKs in Azure as your kubernetes service or you can use Google uh kubernetes",
    "start": "1420360",
    "end": "1428279"
  },
  {
    "text": "engine or you can use um eks on Amazon or anywhere you wish whether it's on",
    "start": "1428279",
    "end": "1434520"
  },
  {
    "text": "Prem or whether it's in a cloud holer that you prefer so we'll show you how that",
    "start": "1434520",
    "end": "1440360"
  },
  {
    "text": "works so we're going to do this with k3s and kkss if we have time we may or may",
    "start": "1440360",
    "end": "1446960"
  },
  {
    "text": "not have time but we'll figure it figure out whether we do but before we do this",
    "start": "1446960",
    "end": "1452279"
  },
  {
    "text": "this we want to show you uh I want to step back for a moment come to um the chat and I want to look in see if",
    "start": "1452279",
    "end": "1460760"
  },
  {
    "text": "everybody's got any questions I see Jeff you seem to be helping people out which",
    "start": "1460760",
    "end": "1467360"
  },
  {
    "text": "is great we are going to in fact use 2.0.1 what I want to do is show you a",
    "start": "1467360",
    "end": "1474679"
  },
  {
    "text": "little demo um this is Fon spin right there let's get back here here's the demo I",
    "start": "1474679",
    "end": "1481799"
  },
  {
    "text": "want to show you and this is a demo that gives you an idea of what kind of",
    "start": "1481799",
    "end": "1488559"
  },
  {
    "text": "features the web assembly gives kubernetes this is an AKs cluster and",
    "start": "1488559",
    "end": "1494559"
  },
  {
    "text": "it's a special kind of cluster so when I'm GNA I'm going to play this let's see if this",
    "start": "1494559",
    "end": "1500039"
  },
  {
    "text": "works um it's a little fuzzy at first probably because the upload and download",
    "start": "1500039",
    "end": "1506279"
  },
  {
    "text": "there it goes and you can see this cluster doesn't have anything but it does have a Windows AMD node pool it",
    "start": "1506279",
    "end": "1514440"
  },
  {
    "text": "also has a Linux AMD node pool and it also has uh a Linux arm node pool so",
    "start": "1514440",
    "end": "1523240"
  },
  {
    "text": "this is a very different kind of cluster and normally when deploy containers to",
    "start": "1523240",
    "end": "1529399"
  },
  {
    "text": "something cluster like this you'd have to use paints and tolerations and node selectors with labels and the whole",
    "start": "1529399",
    "end": "1535360"
  },
  {
    "text": "thing to make sure that your containers got deployed to the node that supported them and I want to demonstrate that here",
    "start": "1535360",
    "end": "1542320"
  },
  {
    "text": "this is a simple two container app and you can see that we get a lot of mis scheduled containers the air the the",
    "start": "1542320",
    "end": "1550240"
  },
  {
    "text": "image won't pull because it the container D shim will not load anything",
    "start": "1550240",
    "end": "1555480"
  },
  {
    "text": "if we sit there and deploy the same kind of application that is built with web",
    "start": "1555480",
    "end": "1562120"
  },
  {
    "text": "assembly you'll see a different effect right I'm going to show uh five",
    "start": "1562120",
    "end": "1568080"
  },
  {
    "text": "different applications and they're all running and they distribute now look at the node pools you can see that that in",
    "start": "1568080",
    "end": "1576120"
  },
  {
    "text": "fact web assembly the same module will Deploy on Windows andd or arm and we're",
    "start": "1576120",
    "end": "1583399"
  },
  {
    "text": "going to prove that to you we're going to go ahead and Destroy one the node pools just delete it right out from",
    "start": "1583399",
    "end": "1590200"
  },
  {
    "text": "under the cluster and you should expect that we would see kubernetes native uh",
    "start": "1590200",
    "end": "1596480"
  },
  {
    "text": "understanding that in fact we need to terminate things and redeploy them and you can see them happening here this one",
    "start": "1596480",
    "end": "1602640"
  },
  {
    "text": "happens fast we only killed one node pool but let's kill the other one and in",
    "start": "1602640",
    "end": "1608480"
  },
  {
    "text": "this case the only node pool running will be the windows node pool at the end now let's watch what happens and just",
    "start": "1608480",
    "end": "1615799"
  },
  {
    "text": "for a moment there goes terminating and creating and you can see at this point",
    "start": "1615799",
    "end": "1621240"
  },
  {
    "text": "right the only container running happened to be scheduled to the the",
    "start": "1621240",
    "end": "1626760"
  },
  {
    "text": "master node pool and that's okay but all the others are not working at all and",
    "start": "1626760",
    "end": "1632520"
  },
  {
    "text": "yet all the other web assemblies have now been rescheduled to Windows now there's nothing Windows",
    "start": "1632520",
    "end": "1638440"
  },
  {
    "text": "specific about this and so what you can imagine here what you're really looking at is the way that web assembly",
    "start": "1638440",
    "end": "1645279"
  },
  {
    "text": "abstracts the details of the node away there are no node pool selectors here",
    "start": "1645279",
    "end": "1650480"
  },
  {
    "text": "there are no taints and tolerations now your operations team if it wants and you're running uh um web",
    "start": "1650480",
    "end": "1658440"
  },
  {
    "text": "assembly it can actually deploy to nodes that are armed and immediately see a 20",
    "start": "1658440",
    "end": "1664600"
  },
  {
    "text": "or 30% uh savings so that gets really",
    "start": "1664600",
    "end": "1670200"
  },
  {
    "text": "fun so I'm going to go ahead and stop sharing this and I'm going to go ahead",
    "start": "1670200",
    "end": "1676519"
  },
  {
    "text": "and move here and what we're going to do move here and then move here I'm going",
    "start": "1676519",
    "end": "1683159"
  },
  {
    "text": "to drop through the incredible thing what we're doing is you can see that",
    "start": "1683159",
    "end": "1688519"
  },
  {
    "text": "this is the uh getting started I want to show you how this works um uh from the",
    "start": "1688519",
    "end": "1695200"
  },
  {
    "text": "setup and I don't know if you can see okay I hope you can you can look at this",
    "start": "1695200",
    "end": "1701840"
  },
  {
    "text": "setup and you can see what we're going to do is we're going to install this this installation right here I believe",
    "start": "1701840",
    "end": "1709519"
  },
  {
    "text": "will give you spin 1.51 I actually go ahead and just do um",
    "start": "1709519",
    "end": "1717360"
  },
  {
    "text": "uh spin 2.01 which is the latest so that's what I'm going to demonstrate for you and so you should be able to follow",
    "start": "1717360",
    "end": "1723919"
  },
  {
    "text": "along without too much trouble I'm also going to use the typescript one and the go one which requires and the go uh",
    "start": "1723919",
    "end": "1732120"
  },
  {
    "text": "excuse me typescript if you'll notice you click here typescript requ requires",
    "start": "1732120",
    "end": "1738399"
  },
  {
    "text": "npm so get node and npm involved and the tiny go one will",
    "start": "1738399",
    "end": "1746240"
  },
  {
    "text": "require tiny go and so you're going to need tiny go tiny go right and the",
    "start": "1746240",
    "end": "1752760"
  },
  {
    "text": "version you want is latest and you'll need",
    "start": "1752760",
    "end": "1758440"
  },
  {
    "text": "30.0 okay so you like to follow along this is",
    "start": "1758440",
    "end": "1764320"
  },
  {
    "text": "the way to do it but you don't have to I'm going to actually walk through everything so if we're going to do this",
    "start": "1764320",
    "end": "1771960"
  },
  {
    "text": "that's the installation steps you can use the dev container this does provide",
    "start": "1771960",
    "end": "1777519"
  },
  {
    "text": "you with 1.51 and compatible um dependencies but as I say we're going to",
    "start": "1777519",
    "end": "1784480"
  },
  {
    "text": "do this live on 2.01 to see whether uh I can get in trouble",
    "start": "1784480",
    "end": "1791000"
  },
  {
    "text": "right so first to get started with Spin and web assembly now what I'm going to",
    "start": "1791000",
    "end": "1797039"
  },
  {
    "text": "do is I've cloned this over here as you can see right and if I do this we'll go to the",
    "start": "1797039",
    "end": "1805159"
  },
  {
    "text": "code and I can go ahead and here like I can open the preview of website in fact",
    "start": "1805159",
    "end": "1812399"
  },
  {
    "text": "it opened right away G to get this out of the way and you can see we're here at",
    "start": "1812399",
    "end": "1817440"
  },
  {
    "text": "the setup again so instead I'm going to open up the preview to this this is where we're starting and this is a quick",
    "start": "1817440",
    "end": "1824919"
  },
  {
    "text": "reference to get up and going now I'll walk through this but we'll also make",
    "start": "1824919",
    "end": "1830480"
  },
  {
    "text": "sure we're checking and see if we can catch any errors or documentation errors because I'd love to submit a PR uh if",
    "start": "1830480",
    "end": "1837360"
  },
  {
    "text": "anything is mistaken now the easy way to do this in vs code is just to open this up here so I'll do",
    "start": "1837360",
    "end": "1844120"
  },
  {
    "text": "so um I hope that you can see that easily enough so we'll move this over here and",
    "start": "1844120",
    "end": "1852720"
  },
  {
    "text": "the critical thing is we're going to talk about spin new let's do spin version",
    "start": "1852720",
    "end": "1858360"
  },
  {
    "text": "just to make sure you can see that I'm using this spin version",
    "start": "1858360",
    "end": "1863960"
  },
  {
    "text": "2.0.1 and it says Hey spin new let's do that and in fact I said I was going to",
    "start": "1863960",
    "end": "1870799"
  },
  {
    "text": "do JavaScript so I'm going to do JavaScript uh HTTP resk request Handler",
    "start": "1870799",
    "end": "1876320"
  },
  {
    "text": "uh all of these are request handlers right now and that gives you the idea that in fact this is a fantastic",
    "start": "1876320",
    "end": "1883200"
  },
  {
    "text": "serverless um uh platform that's been that Veron has here and so we're going",
    "start": "1883200",
    "end": "1888799"
  },
  {
    "text": "to say hey uh new Js um",
    "start": "1888799",
    "end": "1895399"
  },
  {
    "text": "function okay description you can just delete through those um or excuse me",
    "start": "1895399",
    "end": "1902559"
  },
  {
    "text": "enter through those and when you get done you can actually see that we've got",
    "start": "1902559",
    "end": "1908799"
  },
  {
    "text": "a new new Js function we go to CD to new okay get a little bit more room and if",
    "start": "1908799",
    "end": "1915399"
  },
  {
    "text": "we do tree um tree is apparently having",
    "start": "1915399",
    "end": "1920519"
  },
  {
    "text": "a great time not running so I'm going to clear that and just say LS oops I didn't",
    "start": "1920519",
    "end": "1925760"
  },
  {
    "text": "clear that wow clear there we go so in",
    "start": "1925760",
    "end": "1934919"
  },
  {
    "text": "fact why we're not reading I'm not really sure but I'm not going to hang up on that problem for a moment you can see",
    "start": "1934919",
    "end": "1941480"
  },
  {
    "text": "the spin toml file is described here right and we're going to actually end up",
    "start": "1941480",
    "end": "1948120"
  },
  {
    "text": "building an application and that application is going to be web assembly and we're",
    "start": "1948120",
    "end": "1954039"
  },
  {
    "text": "telling the uh the component they were telling spin that the component will be called this and it will be located here",
    "start": "1954039",
    "end": "1961840"
  },
  {
    "text": "um you will exclude that is not build into the module the the node stuff",
    "start": "1961840",
    "end": "1967039"
  },
  {
    "text": "that'll get all get compiled down into web assembly there's the route and when",
    "start": "1967039",
    "end": "1972679"
  },
  {
    "text": "you do a build command you can specify custom builds commands in here so one of the things that the um that we do with",
    "start": "1972679",
    "end": "1980799"
  },
  {
    "text": "the uh versioning right I'm going to skip over the language stuff because we are going to in fact use the uh",
    "start": "1980799",
    "end": "1987519"
  },
  {
    "text": "typescript application so you you notice it's npm run build so we're going to",
    "start": "1987519",
    "end": "1992720"
  },
  {
    "text": "have to um actually do uh npm install",
    "start": "1992720",
    "end": "1998880"
  },
  {
    "text": "first we'll let that come in and in fact there we",
    "start": "1998880",
    "end": "2005960"
  },
  {
    "text": "go coming in relatively slowly I'm not necessarily surprised that my network",
    "start": "2005960",
    "end": "2011559"
  },
  {
    "text": "connection is waiting for that kind of fun we've got no vulnerabilities which",
    "start": "2011559",
    "end": "2017600"
  },
  {
    "text": "is a miracle and we can now do spin build and you'll see that it's going",
    "start": "2017600",
    "end": "2023200"
  },
  {
    "text": "ahead and building the module and optimizing by using the wiser tool and",
    "start": "2023200",
    "end": "2030240"
  },
  {
    "text": "then smashing the size down using a wasm opt you don't have to do this spin does this for you to make it as success as",
    "start": "2030240",
    "end": "2038080"
  },
  {
    "text": "easy as possible for you so if you do now a spin up in fact you get a new",
    "start": "2038080",
    "end": "2044600"
  },
  {
    "text": "service and we open a browser sure enough hello from jssd K now let's give",
    "start": "2044600",
    "end": "2050720"
  },
  {
    "text": "you an idea of what we're doing here so notice that we've got this in uh vs code",
    "start": "2050720",
    "end": "2057040"
  },
  {
    "text": "we've got this running here okay Local Host 3000 so if we go ahead and curl HTP",
    "start": "2057040",
    "end": "2065158"
  },
  {
    "text": "Local Host 3,000 we get it hello from JS that's",
    "start": "2065159",
    "end": "2070599"
  },
  {
    "text": "fantastic but I want to use a tool called hey and if you don't know about hey you should it's a great load tool",
    "start": "2070599",
    "end": "2078118"
  },
  {
    "text": "very basic and very easy and it gives us a sense of performance density right",
    "start": "2078119",
    "end": "2083839"
  },
  {
    "text": "this is super useful so we're gonna say I want 5,000 requests and I want them on",
    "start": "2083839",
    "end": "2089079"
  },
  {
    "text": "five connections for the same endpoint whop Local Host 3,000 now the",
    "start": "2089079",
    "end": "2096638"
  },
  {
    "text": "first first one involves downloading look at this so just out of",
    "start": "2096639",
    "end": "2104280"
  },
  {
    "text": "the gate that's tenth of a second that's a 100th of a second that's a millisecond",
    "start": "2104280",
    "end": "2113119"
  },
  {
    "text": "and we did not even reach a millisecond this is five",
    "start": "2113119",
    "end": "2119640"
  },
  {
    "text": "microseconds for the fastest one and you may think that that's not very good or",
    "start": "2119640",
    "end": "2125160"
  },
  {
    "text": "may you think that is very good but notice that the average is 8",
    "start": "2125160",
    "end": "2131800"
  },
  {
    "text": "microseconds now I'm running on windows inside WSL and I'm streaming network",
    "start": "2131800",
    "end": "2139640"
  },
  {
    "text": "connection from it if we add all the overhead and remove",
    "start": "2139640",
    "end": "2145760"
  },
  {
    "text": "that extra processing that we happen to be doing you can imagine that this is going to drop down and is that",
    "start": "2145760",
    "end": "2151280"
  },
  {
    "text": "repeatable actually it is not only repeatable but it actually gets better",
    "start": "2151280",
    "end": "2156520"
  },
  {
    "text": "in many respects right so that's fascinating look at how good that is",
    "start": "2156520",
    "end": "2163440"
  },
  {
    "text": "that's really nuts so great stuff now if we go ahead and",
    "start": "2163440",
    "end": "2171200"
  },
  {
    "text": "take that back let's do something else let's do something like go because it",
    "start": "2171200",
    "end": "2176920"
  },
  {
    "text": "gives us a clear idea of the differences at languages have now if we do spin",
    "start": "2176920",
    "end": "2185720"
  },
  {
    "text": "new and we say hey we're going to use go with tiny go the go language component",
    "start": "2185720",
    "end": "2192240"
  },
  {
    "text": "support is coming along uh sometime in the next half year I would hope that they support preview two which is what",
    "start": "2192240",
    "end": "2198440"
  },
  {
    "text": "we're using um so this is U my go and no description and so forth and",
    "start": "2198440",
    "end": "2207839"
  },
  {
    "text": "remember for this one I have to have tiny go installed because we need a",
    "start": "2207839",
    "end": "2213359"
  },
  {
    "text": "compiler for our go it turns out to tiny go actually comp piles go code so you need go invol installed as well but once",
    "start": "2213359",
    "end": "2220680"
  },
  {
    "text": "you do that you can just do spin build whoops I got to now go into my go",
    "start": "2220680",
    "end": "2226200"
  },
  {
    "text": "directory my apologies and I can do spin build you see that I'm actually building",
    "start": "2226200",
    "end": "2233319"
  },
  {
    "text": "tiny go build Target wasy go ahead and leak GC there's a reason for that",
    "start": "2233319",
    "end": "2239480"
  },
  {
    "text": "eliminate debug symbols and go ahead and build main.m and there we are so now I",
    "start": "2239480",
    "end": "2245880"
  },
  {
    "text": "can do spin up and sure enough I open that up we got hello Fon",
    "start": "2245880",
    "end": "2252440"
  },
  {
    "text": "in um in go okay great but how does this stack up so here we are we're going to",
    "start": "2252440",
    "end": "2259760"
  },
  {
    "text": "run the same program and",
    "start": "2259760",
    "end": "2263079"
  },
  {
    "text": "go let's let it run a couple of times so that we got all it everything cached do",
    "start": "2264960",
    "end": "2271280"
  },
  {
    "text": "it one more time now look at our histogram the fastest",
    "start": "2271280",
    "end": "2277560"
  },
  {
    "text": "was in fact down to 002 now that's actually unexpected and I",
    "start": "2277560",
    "end": "2282960"
  },
  {
    "text": "actually usually the go takes a little bit longer so this is super thrilling to",
    "start": "2282960",
    "end": "2288119"
  },
  {
    "text": "see and remember we've got nested virtual machines going on here and so",
    "start": "2288119",
    "end": "2293839"
  },
  {
    "text": "forth that's really interesting so I'm glad to see it we go back we go back here and we go",
    "start": "2293839",
    "end": "2301720"
  },
  {
    "text": "ahead and tear that down and we're good to go so so far so",
    "start": "2301720",
    "end": "2307599"
  },
  {
    "text": "good I'm going to jump back in here to our webinar and see um what we got there",
    "start": "2307599",
    "end": "2315480"
  },
  {
    "text": "you go yeah uh Jeff notes uh that the downloads the binary is all really you",
    "start": "2315480",
    "end": "2320960"
  },
  {
    "text": "need you need the signature file if you're going to validate uh the download and make sure you do that the",
    "start": "2320960",
    "end": "2326480"
  },
  {
    "text": "documentation for spin has the cosign command to validate that um when you do",
    "start": "2326480",
    "end": "2331720"
  },
  {
    "text": "do the tree uh as Jeff seen you but you actually get Tree in your con I'm not",
    "start": "2331720",
    "end": "2336920"
  },
  {
    "text": "really sure why tree is hanging up in W cell right now but we'll figure that out later um so if there's any other",
    "start": "2336920",
    "end": "2343839"
  },
  {
    "text": "questions remember to jump dump dump them in here um you're not seeing the response",
    "start": "2343839",
    "end": "2350480"
  },
  {
    "text": "from the Java the J the the",
    "start": "2350480",
    "end": "2354480"
  },
  {
    "text": "serlet no I'm gonna yep okay so let's do a couple of diagnostic things we'll work",
    "start": "2357640",
    "end": "2364560"
  },
  {
    "text": "with you here Jeff no obvious content so here's what the",
    "start": "2364560",
    "end": "2369680"
  },
  {
    "text": "serlet is if I do this so let's see I'm going to clear if I list uh we got new",
    "start": "2369680",
    "end": "2376240"
  },
  {
    "text": "Js function so I'm gonna CD to new Js function and I'm going to do spin up so",
    "start": "2376240",
    "end": "2382359"
  },
  {
    "text": "if I hit this okay with are you hitting it with a browser or are you hitting it",
    "start": "2382359",
    "end": "2388560"
  },
  {
    "text": "with um curl right so here's what it looks like",
    "start": "2388560",
    "end": "2394040"
  },
  {
    "text": "with curl curl HTP Local Host um",
    "start": "2394040",
    "end": "2400400"
  },
  {
    "text": "3,000 right and so what you get is like no return if you don't notice it it's",
    "start": "2400400",
    "end": "2405480"
  },
  {
    "text": "like there because there's no there's no run there's no uh extra new line in the",
    "start": "2405480",
    "end": "2411000"
  },
  {
    "text": "in the return and so you can actually say if you want to do curl you can do",
    "start": "2411000",
    "end": "2416040"
  },
  {
    "text": "curl V and then you get the whole return and that probably will help you out yeah",
    "start": "2416040",
    "end": "2421359"
  },
  {
    "text": "you can add new lines too right so in fact I'll do that while you're doing this",
    "start": "2421359",
    "end": "2426920"
  },
  {
    "text": "right I'm going to go here and I'm going to get rid of that and I'm going to go back to my",
    "start": "2426920",
    "end": "2432560"
  },
  {
    "text": "code um let's see here why my go J newest function source and I'm going to",
    "start": "2432560",
    "end": "2439640"
  },
  {
    "text": "go like here hello from jsk but this is Ralph um and we save it and we go ahead",
    "start": "2439640",
    "end": "2447839"
  },
  {
    "text": "and CD new Js function and we go ahead and",
    "start": "2447839",
    "end": "2453079"
  },
  {
    "text": "spin build",
    "start": "2453079",
    "end": "2458319"
  },
  {
    "text": "right and spin up spin up and it says already in air in in",
    "start": "2458599",
    "end": "2465520"
  },
  {
    "text": "service so that Port I got a kill yep that's the spin trigger Auto",
    "start": "2465520",
    "end": "2472200"
  },
  {
    "text": "forwarded so stop forwarding Port okay there we go let's do that again",
    "start": "2472200",
    "end": "2479680"
  },
  {
    "text": "terminal SP up o eror I wonder if this is a do I have it running over here yes",
    "start": "2479680",
    "end": "2485839"
  },
  {
    "text": "I do bad man right so we'll spin up over here now",
    "start": "2485839",
    "end": "2491720"
  },
  {
    "text": "we have it running and if we do this again we're going to get that but you can see that",
    "start": "2491720",
    "end": "2497640"
  },
  {
    "text": "this is Ralph right so that should be the experience up",
    "start": "2497640",
    "end": "2503920"
  },
  {
    "text": "here I'm gonna come back here Jeff do you are you having that",
    "start": "2503920",
    "end": "2510240"
  },
  {
    "text": "experience okay um we're at 743 we're doing fine I got other things to show",
    "start": "2511800",
    "end": "2517640"
  },
  {
    "text": "but I'd like to get you get you running here ah okay so uh but you know the the",
    "start": "2517640",
    "end": "2527040"
  },
  {
    "text": "truth is the spin build failing you need to do npm install first did you do",
    "start": "2527040",
    "end": "2535400"
  },
  {
    "text": "that because we're in JavaScript remember if you're in tiny go you don't need to do that because tiny go go",
    "start": "2535720",
    "end": "2543240"
  },
  {
    "text": "doesn't need you to do that ah go ahead and try it I'm going to",
    "start": "2543240",
    "end": "2549319"
  },
  {
    "text": "talk I'm going to move on to the container right but build won't make a difference it's got to be npm install",
    "start": "2549319",
    "end": "2556359"
  },
  {
    "text": "first oh did Jeff let's say let's just say me",
    "start": "2556359",
    "end": "2563359"
  },
  {
    "text": "talking to you about it made it magically happen and as a developer this",
    "start": "2563359",
    "end": "2569440"
  },
  {
    "text": "has happened to us all the time so like fine yep npm will eventually get called",
    "start": "2569440",
    "end": "2574880"
  },
  {
    "text": "for it's like spin build if you look at spin build right if we go over here and",
    "start": "2574880",
    "end": "2581200"
  },
  {
    "text": "look at our spin tomel right it should be npm run build but in",
    "start": "2581200",
    "end": "2588760"
  },
  {
    "text": "fact whether npm run build actually calls install first really depends on",
    "start": "2588760",
    "end": "2594839"
  },
  {
    "text": "your configuration so npm can get called there right if you look at the uh using",
    "start": "2594839",
    "end": "2603040"
  },
  {
    "text": "typescript one what they really want you to do is make make sure you install the application dependencies",
    "start": "2603040",
    "end": "2609200"
  },
  {
    "text": "first and so forth now what we really want to do next is run this in a",
    "start": "2609200",
    "end": "2615880"
  },
  {
    "text": "container and that's kind of interesting now the thing I'm going to show you is that I'm working in WSL and whether",
    "start": "2615880",
    "end": "2623440"
  },
  {
    "text": "you're on a Mac or WSL or on Linux the easiest way to get this all running for",
    "start": "2623440",
    "end": "2628800"
  },
  {
    "text": "yourself uh requires a special configuration of tooling and it the easiest place to get that is Docker",
    "start": "2628800",
    "end": "2635440"
  },
  {
    "text": "desktop and that's just because Docker has done a really great job here I'm going to clear this up Docker version",
    "start": "2635440",
    "end": "2644040"
  },
  {
    "text": "get you exactly what you need you can see that this is Docker desktop and you'll note that the actual",
    "start": "2644040",
    "end": "2651200"
  },
  {
    "text": "versions are really good you're going to need a container D version of 1.625 or above you also have Docker",
    "start": "2651200",
    "end": "2658559"
  },
  {
    "text": "wired up to build kit so Docker we're going to do Docker build X which",
    "start": "2658559",
    "end": "2664640"
  },
  {
    "text": "requires and if you do a version of doer build X you're going to need at least I think it's",
    "start": "2664640",
    "end": "2670760"
  },
  {
    "text": "11.6 or above might be 11.8 but doer desktop gives you the newest version and",
    "start": "2670760",
    "end": "2677160"
  },
  {
    "text": "it's very very nice that way okay so move into the Container space in",
    "start": "2677160",
    "end": "2683760"
  },
  {
    "text": "other words to actually be able to deploy this in kubernetes it it gets packaged in a container we're going to",
    "start": "2683760",
    "end": "2689400"
  },
  {
    "text": "go and do this so let's go ahead and do this we're",
    "start": "2689400",
    "end": "2697000"
  },
  {
    "text": "going to say running in a container so if we go ahead and run in a",
    "start": "2697000",
    "end": "2703160"
  },
  {
    "text": "container we're going to do this with our thing we're going to actually create a Docker file and so to do that copy",
    "start": "2703160",
    "end": "2711079"
  },
  {
    "text": "we're going to go ahead and tear down our thing we're going to use our JavaScript function and we're going to create a Docker file okay and we're GNA",
    "start": "2711079",
    "end": "2719559"
  },
  {
    "text": "create the new Docker file and Jeff I can't wait if you got this running you should be able to follow along if you",
    "start": "2719559",
    "end": "2725680"
  },
  {
    "text": "have Docker desktop installed um we're going to go ahead and",
    "start": "2725680",
    "end": "2731000"
  },
  {
    "text": "drop this into the docker file now note we",
    "start": "2731000",
    "end": "2737920"
  },
  {
    "text": "actually have to modify this to make sure that the targets are correct so the",
    "start": "2737920",
    "end": "2743720"
  },
  {
    "text": "target is actually new J function so we got to do new J function new Js function",
    "start": "2743720",
    "end": "2751640"
  },
  {
    "text": "wasm and in this case uh we got to write it again because why would we not have",
    "start": "2751640",
    "end": "2757520"
  },
  {
    "text": "to write it again new Js function",
    "start": "2757520",
    "end": "2763119"
  },
  {
    "text": "inm Okay so we've done that and then we can use this now this",
    "start": "2763119",
    "end": "2772040"
  },
  {
    "text": "is Docker build build X you're you when you do a Docker build build a build build X build you're using buildkit",
    "start": "2772040",
    "end": "2778680"
  },
  {
    "text": "underneath the hood but Docker desktop takes care of that for you so you don't really need to know about the build the",
    "start": "2778680",
    "end": "2786040"
  },
  {
    "text": "build kit part however notice a couple things in here one we need to tag it and",
    "start": "2786040",
    "end": "2794680"
  },
  {
    "text": "it needs to be tagged with the name of our thing so I'm actually going to call it the same thing just to make sure it's",
    "start": "2794680",
    "end": "2802040"
  },
  {
    "text": "clear um we're in new Js function and my GitHub ID is squi my last name which is",
    "start": "2802040",
    "end": "2809160"
  },
  {
    "text": "nice it's always good to have a great uh strange last name because then you get to use your last name as an alias for",
    "start": "2809160",
    "end": "2815800"
  },
  {
    "text": "almost everything it's really nice um I feel bad for the Joneses Johnson Smiths",
    "start": "2815800",
    "end": "2821040"
  },
  {
    "text": "um of the world so there's one other little bit you need to do here for sure and that's",
    "start": "2821040",
    "end": "2828640"
  },
  {
    "text": "this one whoops uh this Providence equals false step there's a reason for",
    "start": "2828640",
    "end": "2836000"
  },
  {
    "text": "that and I'll explain it but basically this tells Docker build uh build kit to",
    "start": "2836000",
    "end": "2842119"
  },
  {
    "text": "not attach Providence information in the image uh in the image manifest and the",
    "start": "2842119",
    "end": "2847160"
  },
  {
    "text": "reason for that is because kubernetes does not yet know what that Providence image is it",
    "start": "2847160",
    "end": "2854119"
  },
  {
    "text": "gets tagged as unknown platform and kubernetes will refuse to pull it um",
    "start": "2854119",
    "end": "2860040"
  },
  {
    "text": "even though the module is in a container and that's fine you're going to build this as a type of platform",
    "start": "2860040",
    "end": "2867359"
  },
  {
    "text": "wywm and you're going to go ahead and use the the um the build context is",
    "start": "2867359",
    "end": "2874760"
  },
  {
    "text": "right here so we're going to go ahead and do that you can see that that's all done yay so if I do go over here just to",
    "start": "2874760",
    "end": "2883240"
  },
  {
    "text": "have more room and do Docker uh image list right you can see that I've got new",
    "start": "2883240",
    "end": "2890640"
  },
  {
    "text": "Js function up here and it's tagged for G GHC o I don't want that",
    "start": "2890640",
    "end": "2897640"
  },
  {
    "text": "actually um I'm gonna go ahead and use dockerhub just for fun and so I'm going to build it again",
    "start": "2897640",
    "end": "2905920"
  },
  {
    "text": "and now I should have another one which is just Docker Hub it makes it easier but uh you can see that you can tag it",
    "start": "2905920",
    "end": "2912720"
  },
  {
    "text": "any way it's just a container and I do want you to point out the size of your container here look at that 837 KB it's",
    "start": "2912720",
    "end": "2923119"
  },
  {
    "text": "really quite amazing how small this can be um yeah so you don't need think you",
    "start": "2923119",
    "end": "2929880"
  },
  {
    "text": "dry yeah you'll skip ahead and you'll just watch this um and it's possible",
    "start": "2929880",
    "end": "2935920"
  },
  {
    "text": "that uh editing might have provoked the correct dependency sequence it's possible yes",
    "start": "2935920",
    "end": "2941799"
  },
  {
    "text": "absolutely um okay so back here um to this no to this so you can",
    "start": "2941799",
    "end": "2950839"
  },
  {
    "text": "see the size of the container we just created now let's do this if we go here",
    "start": "2950839",
    "end": "2958280"
  },
  {
    "text": "to running in the container okay we built and now we want to run it",
    "start": "2958280",
    "end": "2966319"
  },
  {
    "text": "and we're going to run it as a background item and we're going to actually use not the GHC we're going to",
    "start": "2966319",
    "end": "2971520"
  },
  {
    "text": "use the the image we could in this particular case right",
    "start": "2971520",
    "end": "2977200"
  },
  {
    "text": "but instead we're going to go ahead and use the image we just built which is I got to type my own name correctly um new",
    "start": "2977200",
    "end": "2985760"
  },
  {
    "text": "Js function okay and there it is",
    "start": "2985760",
    "end": "2992760"
  },
  {
    "text": "O spin binary not written invol ah okay",
    "start": "2992760",
    "end": "2998160"
  },
  {
    "text": "here's the interesting thing look at this if we go to the",
    "start": "2998160",
    "end": "3004040"
  },
  {
    "text": "toml excuse me uh no no no not to the tomel you see",
    "start": "3004040",
    "end": "3011240"
  },
  {
    "text": "right here we did this okay this is a Docker desktop and a Docker thing what",
    "start": "3011240",
    "end": "3017599"
  },
  {
    "text": "we're doing is telling Docker go ahead and use this shim to run this but this is spin V1 we actually don't have V1",
    "start": "3017599",
    "end": "3025520"
  },
  {
    "text": "loaded we have V2 loaded because using Spin 2.0.1 and so in fact now it's running",
    "start": "3025520",
    "end": "3033640"
  },
  {
    "text": "how do we know it's running well in theory we should be able to do",
    "start": "3033640",
    "end": "3039920"
  },
  {
    "text": "this 3,000 and sure enough it's running well",
    "start": "3042520",
    "end": "3049079"
  },
  {
    "text": "great can we do that whole thing that we do over here with hey",
    "start": "3049079",
    "end": "3057440"
  },
  {
    "text": "n5000 uh C5 HTP Local Host I always forget the",
    "start": "3057559",
    "end": "3065520"
  },
  {
    "text": "L 3000 NOW Watch What Happens do you remember how fast this",
    "start": "3065520",
    "end": "3072079"
  },
  {
    "text": "ran it ran in in low singled digigit",
    "start": "3072079",
    "end": "3078559"
  },
  {
    "text": "microseconds right look at the",
    "start": "3078559",
    "end": "3082880"
  },
  {
    "text": "difference now we're into milliseconds for the",
    "start": "3084359",
    "end": "3091160"
  },
  {
    "text": "fastest right we can rerun it we're still doing pretty well we're",
    "start": "3095920",
    "end": "3101880"
  },
  {
    "text": "into milliseconds we've dropped from 11,000 requests a second to",
    "start": "3101880",
    "end": "3108520"
  },
  {
    "text": "2600 that's really quite amazing so if we do Docker PS we know what that one 's",
    "start": "3108720",
    "end": "3115599"
  },
  {
    "text": "going so darker kill 592 we're going to go ahead and kill",
    "start": "3115599",
    "end": "3121359"
  },
  {
    "text": "that but now let's do spin up",
    "start": "3121359",
    "end": "3126480"
  },
  {
    "text": "okay and remember so we just did this one we just did this",
    "start": "3126480",
    "end": "3133599"
  },
  {
    "text": "one we're going to do the same command boom do it",
    "start": "3133599",
    "end": "3141000"
  },
  {
    "text": "again incredibly lower in this case we ended up at",
    "start": "3142440",
    "end": "3147920"
  },
  {
    "text": "66,000 instead of whatever we were",
    "start": "3147920",
    "end": "3152040"
  },
  {
    "text": "doing 6,000 no problem if we go back here to The Container one we're looking",
    "start": "3153000",
    "end": "3162040"
  },
  {
    "text": "at 2,600 so in in in an environment that is not virtually looped right where you",
    "start": "3162040",
    "end": "3168440"
  },
  {
    "text": "don't have a bunch that difference is really amazing at scale right let me",
    "start": "3168440",
    "end": "3174119"
  },
  {
    "text": "make sure we're plugg in here that's that difference is really",
    "start": "3174119",
    "end": "3179480"
  },
  {
    "text": "amazing at scale so now we're at the very end of our hour do people have",
    "start": "3179480",
    "end": "3185559"
  },
  {
    "text": "general questions or should I try and pull off a kubernetes",
    "start": "3185559",
    "end": "3193960"
  },
  {
    "text": "installation installation TRS Libby you're provoking me just in",
    "start": "3197760",
    "end": "3203440"
  },
  {
    "text": "case truls didn't didn't didn't jump on it okay we're gonna do it okay here",
    "start": "3203440",
    "end": "3209240"
  },
  {
    "text": "we're gonna do it we got five minutes to not only build a cluster okay let's do it we're going to",
    "start": "3209240",
    "end": "3215880"
  },
  {
    "text": "build a cluster and we're going to run clear",
    "start": "3215880",
    "end": "3221680"
  },
  {
    "text": "okay we go over here now we're going to deploy kubernetes right so kubernetes",
    "start": "3221680",
    "end": "3228000"
  },
  {
    "text": "we're going to create configure the cluster now notice I'm going to change some things there's a newer thing here",
    "start": "3228000",
    "end": "3234319"
  },
  {
    "text": "you have for this one you have to have K 3DS on but we k3d but we know that there",
    "start": "3234319",
    "end": "3240520"
  },
  {
    "text": "is a newer brand new shim so we're going to go ahead and create our cluster NOW Watch What",
    "start": "3240520",
    "end": "3247240"
  },
  {
    "text": "Happens going create K",
    "start": "3247240",
    "end": "3250720"
  },
  {
    "text": "3DS and then we're going to go ahead and watch",
    "start": "3253480",
    "end": "3258280"
  },
  {
    "text": "it come on oh it's there okay now I can do Cube",
    "start": "3262480",
    "end": "3268799"
  },
  {
    "text": "control get po and we'll look at all of them and in fact I'm going to go ahead",
    "start": "3268799",
    "end": "3274040"
  },
  {
    "text": "and do a watch so that we now what's happening now is we have to pull in inside",
    "start": "3274040",
    "end": "3281119"
  },
  {
    "text": "kubernetes all the internal um internal containers that make kubernetes run so this is going to",
    "start": "3281119",
    "end": "3287720"
  },
  {
    "text": "be our big uh hit our time hit here but let's go back and map out our thing so",
    "start": "3287720",
    "end": "3294640"
  },
  {
    "text": "deploy we got to create a runtime we going to add the shim and once we do",
    "start": "3294640",
    "end": "3299960"
  },
  {
    "text": "that right we can go ahead and import our uh image to the k3d cluster",
    "start": "3299960",
    "end": "3308319"
  },
  {
    "text": "that we can do and once we do that we can actually this is the only difference",
    "start": "3308319",
    "end": "3315160"
  },
  {
    "text": "we can go ahead and match the image name right and the only difference",
    "start": "3315160",
    "end": "3320240"
  },
  {
    "text": "between a container yaml and web assembly yaml is that runtime class that's it there's no",
    "start": "3320240",
    "end": "3328760"
  },
  {
    "text": "other difference right so this is the one where we're",
    "start": "3328760",
    "end": "3334760"
  },
  {
    "text": "we're pulling in brand new brand new images oh we've got it we've got one",
    "start": "3334760",
    "end": "3341319"
  },
  {
    "text": "running let's see if we can pull it off we're at",
    "start": "3341319",
    "end": "3345960"
  },
  {
    "text": "757 and we're going to do this okay we've got that deploy a",
    "start": "3347839",
    "end": "3355440"
  },
  {
    "text": "cluster we're going to touch the spin run time while we're doing",
    "start": "3355440",
    "end": "3360559"
  },
  {
    "text": "that okay over here",
    "start": "3360680",
    "end": "3366359"
  },
  {
    "text": "okay okay and we'll touch spin runtime yaml and we'll add this to the",
    "start": "3366359",
    "end": "3374920"
  },
  {
    "text": "file okay and I'll spin run runtime yl",
    "start": "3375079",
    "end": "3382079"
  },
  {
    "text": "beep great thing about me is I come with sound effect I come with my own beep sounds and we're",
    "start": "3382079",
    "end": "3388440"
  },
  {
    "text": "going to go ahead and add that to the cluster at some point",
    "start": "3388440",
    "end": "3393680"
  },
  {
    "text": "right but we got to wait till the cluster's up and running we're almost running you can see we're getting in our",
    "start": "3396240",
    "end": "3403400"
  },
  {
    "text": "traic uh service load balancers that's almost",
    "start": "3403400",
    "end": "3409520"
  },
  {
    "text": "there two minutes left almost almost okay we got traffic running the jobs are",
    "start": "3409799",
    "end": "3416640"
  },
  {
    "text": "completing and we're waiting for the LA the last traffic manager completed it's done we got running running running",
    "start": "3416640",
    "end": "3422839"
  },
  {
    "text": "running running running running great fantastic okay so now we can do things",
    "start": "3422839",
    "end": "3428559"
  },
  {
    "text": "like this get over here um we're in nanm",
    "start": "3428559",
    "end": "3433960"
  },
  {
    "text": "runtime and so now we want to install we're we're this shim command already",
    "start": "3433960",
    "end": "3440920"
  },
  {
    "text": "has the container D shim in involved in it and so what we need to do is tell kubernetes that it's there and so we do",
    "start": "3440920",
    "end": "3447200"
  },
  {
    "text": "K Cube control apply F uh spin oop",
    "start": "3447200",
    "end": "3453920"
  },
  {
    "text": "spin um I'm typing as fast as I can I promise okay we've got that right and",
    "start": "3453920",
    "end": "3460240"
  },
  {
    "text": "then we do this um and this my application wasm cluster image import my",
    "start": "3460240",
    "end": "3467280"
  },
  {
    "text": "application is schach whoops schach I'm typing as fast as I can new Js fun",
    "start": "3467280",
    "end": "3475440"
  },
  {
    "text": "function okay and it says okay I'm importing that so now we're adding like",
    "start": "3475440",
    "end": "3480880"
  },
  {
    "text": "this image is now in the cluster's cache right and then you can touch uh",
    "start": "3480880",
    "end": "3488079"
  },
  {
    "text": "the you can create a spin app yaml okay we did that whoop uh got the star I've",
    "start": "3488079",
    "end": "3496760"
  },
  {
    "text": "got one more minute can I pull it off uh",
    "start": "3496760",
    "end": "3501880"
  },
  {
    "text": "touch spin app yam all make the sure yeah okay image import uh yeah we already did the image",
    "start": "3501880",
    "end": "3508599"
  },
  {
    "text": "import so we're going to do this Nano spin app yaml",
    "start": "3508599",
    "end": "3515280"
  },
  {
    "text": "boom uh X yeah D okay and then once",
    "start": "3515280",
    "end": "3520319"
  },
  {
    "text": "that's ready we go ahead and apply the spin app right here and I'm so close",
    "start": "3520319",
    "end": "3528079"
  },
  {
    "text": "will it work created Watch Cube control get po and container is is creating 5",
    "start": "3528079",
    "end": "3535640"
  },
  {
    "text": "Seconds please do not blow up because what we did is we imported the container error image pull",
    "start": "3535640",
    "end": "3542559"
  },
  {
    "text": "boom Oh that's unfortunate all right we almost did it",
    "start": "3542559",
    "end": "3549359"
  },
  {
    "text": "we almost did it what I'm gonna do is go ahead and jump to uh this just to show",
    "start": "3549359",
    "end": "3558799"
  },
  {
    "text": "you that we can do this no problem if you're deploying from kubernetes from outside kubernetes uh Let's see we had",
    "start": "3558799",
    "end": "3565920"
  },
  {
    "text": "wasm times spin let's see what was the ingresses oh I know what it was we",
    "start": "3565920",
    "end": "3571440"
  },
  {
    "text": "didn't change the application maybe I'll pull it off maybe",
    "start": "3571440",
    "end": "3576760"
  },
  {
    "text": "I'll pull it off Nano spin app okay let's get down here this isn't",
    "start": "3576760",
    "end": "3583760"
  },
  {
    "text": "the name of the image it's skach uh new Js",
    "start": "3583760",
    "end": "3592039"
  },
  {
    "text": "function XOM boom now [Music] spin app okay unchange configured apply",
    "start": "3592039",
    "end": "3600240"
  },
  {
    "text": "Nano watch and it's running oh thank goodness and now if we clear and we",
    "start": "3600240",
    "end": "3607200"
  },
  {
    "text": "run let's do we got a hay so this [Music]",
    "start": "3607200",
    "end": "3613280"
  },
  {
    "text": "one is at 8081 so now we do",
    "start": "3613280",
    "end": "3619559"
  },
  {
    "text": "8081 and in theory in kubernetes 1 minute",
    "start": "3620319",
    "end": "3626839"
  },
  {
    "text": "late notice the lag time I wonder if this is WSL or whether it's",
    "start": "3626839",
    "end": "3632799"
  },
  {
    "text": "actually um something else should be something else if we get",
    "start": "3632799",
    "end": "3639280"
  },
  {
    "text": "this I get this control and",
    "start": "3639280",
    "end": "3645000"
  },
  {
    "text": "curl 8081 yep it's there so in fact what",
    "start": "3647200",
    "end": "3652520"
  },
  {
    "text": "we're doing is getting blocked by the by the kubernetes infrastructure how many do we get we",
    "start": "3652520",
    "end": "3658480"
  },
  {
    "text": "got uh much lower request per second you can see that there's something that went",
    "start": "3658480",
    "end": "3664520"
  },
  {
    "text": "on in there in the in the cluster but I'll wrap up with uh we're looking at 15",
    "start": "3664520",
    "end": "3669680"
  },
  {
    "text": "milliseconds there for for the fastest request in fact once we get this I'll",
    "start": "3669680",
    "end": "3675359"
  },
  {
    "text": "get this figured out you can see the fact is just chewing through them much more slowly",
    "start": "3675359",
    "end": "3681680"
  },
  {
    "text": "so we did it but but not perfectly I'll stop sharing thank you",
    "start": "3681680",
    "end": "3689839"
  },
  {
    "text": "very much and uh uh I'm G to keep working on this if you're interested go",
    "start": "3689839",
    "end": "3696079"
  },
  {
    "text": "ahead and ping me on Twitter I'm Ralph uncore hey there you",
    "start": "3696079",
    "end": "3702119"
  },
  {
    "text": "go I'm Ralph orach uh on Twitter uh andachi on in",
    "start": "3702119",
    "end": "3710200"
  },
  {
    "text": "hacker. for Mastadon and I don't know there's blue sky and there's email and",
    "start": "3710200",
    "end": "3715359"
  },
  {
    "text": "there's the whole thing thank you Libby very much and thanks everybody else thank you Ralph so much uh thank you",
    "start": "3715359",
    "end": "3722000"
  },
  {
    "text": "everyone for attending again thanks for bearing with us with the timing and we",
    "start": "3722000",
    "end": "3727039"
  },
  {
    "text": "will see y'all next year have a great rest of 2023 and um we will see you for cncf",
    "start": "3727039",
    "end": "3735200"
  },
  {
    "text": "live webinars in January everybody have a great",
    "start": "3735200",
    "end": "3740880"
  },
  {
    "text": "break",
    "start": "3741119",
    "end": "3744119"
  }
]