[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "hi everybody my name is antoine ammo",
    "start": "160",
    "end": "3040"
  },
  {
    "text": "and i'm very pleased to be here for the",
    "start": "3040",
    "end": "4560"
  },
  {
    "text": "first vietnam cubicle",
    "start": "4560",
    "end": "6560"
  },
  {
    "text": "to talk about how we could use",
    "start": "6560",
    "end": "8080"
  },
  {
    "text": "mathematics to better configure auto",
    "start": "8080",
    "end": "10480"
  },
  {
    "text": "scanning",
    "start": "10480",
    "end": "12879"
  },
  {
    "start": "13000",
    "end": "45000"
  },
  {
    "text": "i'm a freelance cloud architect and",
    "start": "15599",
    "end": "17680"
  },
  {
    "text": "devops",
    "start": "17680",
    "end": "18640"
  },
  {
    "text": "i'm mainly playing on aws and openstack",
    "start": "18640",
    "end": "21680"
  },
  {
    "text": "and i'm currently working for an",
    "start": "21680",
    "end": "23039"
  },
  {
    "text": "american based company",
    "start": "23039",
    "end": "24720"
  },
  {
    "text": "named pipestream as a developer leader",
    "start": "24720",
    "end": "29039"
  },
  {
    "text": "this story this talk is actually out of",
    "start": "29760",
    "end": "31760"
  },
  {
    "text": "an article i wrote over a year ago",
    "start": "31760",
    "end": "34480"
  },
  {
    "text": "so i definitely recommend you to check",
    "start": "34480",
    "end": "36399"
  },
  {
    "text": "it out if you need some more details",
    "start": "36399",
    "end": "38640"
  },
  {
    "text": "there's also the link for the web app",
    "start": "38640",
    "end": "40320"
  },
  {
    "text": "created that i'm gonna introduce later",
    "start": "40320",
    "end": "45440"
  },
  {
    "start": "45000",
    "end": "78000"
  },
  {
    "text": "it's not quite a surprise that the micro",
    "start": "45440",
    "end": "47200"
  },
  {
    "text": "services architecture",
    "start": "47200",
    "end": "48879"
  },
  {
    "text": "continues to invade the software design",
    "start": "48879",
    "end": "52000"
  },
  {
    "text": "it's easy to manage easy to develop your",
    "start": "52000",
    "end": "54480"
  },
  {
    "text": "smaller team",
    "start": "54480",
    "end": "55600"
  },
  {
    "text": "it's better at distributing the load",
    "start": "55600",
    "end": "57680"
  },
  {
    "text": "it's easy to create hd deployments",
    "start": "57680",
    "end": "59760"
  },
  {
    "text": "and easy to manage upgrades but the game",
    "start": "59760",
    "end": "62800"
  },
  {
    "text": "surely won't be the same without cloud",
    "start": "62800",
    "end": "64320"
  },
  {
    "text": "orchestrators such as kubernetes",
    "start": "64320",
    "end": "66479"
  },
  {
    "text": "as they bring to the table a lot of",
    "start": "66479",
    "end": "68240"
  },
  {
    "text": "useful features",
    "start": "68240",
    "end": "69600"
  },
  {
    "text": "to manage the lifecycle of those",
    "start": "69600",
    "end": "71920"
  },
  {
    "text": "microservices",
    "start": "71920",
    "end": "73360"
  },
  {
    "text": "and obviously one of them is auto",
    "start": "73360",
    "end": "75439"
  },
  {
    "text": "scaling",
    "start": "75439",
    "end": "77840"
  },
  {
    "start": "78000",
    "end": "116000"
  },
  {
    "text": "what a blessing it is to watch your",
    "start": "78880",
    "end": "80479"
  },
  {
    "text": "deployment's number of replicas",
    "start": "80479",
    "end": "82000"
  },
  {
    "text": "fluctuating all over the day",
    "start": "82000",
    "end": "84159"
  },
  {
    "text": "gently sized to the current load but",
    "start": "84159",
    "end": "87280"
  },
  {
    "text": "don't get me wrong",
    "start": "87280",
    "end": "88240"
  },
  {
    "text": "auto scanning is hard a lot of",
    "start": "88240",
    "end": "90880"
  },
  {
    "text": "parameters are involved in the process",
    "start": "90880",
    "end": "93119"
  },
  {
    "text": "such such as the minimum and maximum",
    "start": "93119",
    "end": "94880"
  },
  {
    "text": "number of replicas",
    "start": "94880",
    "end": "96159"
  },
  {
    "text": "the upscale threshold the sync period",
    "start": "96159",
    "end": "98640"
  },
  {
    "text": "cooldown delays etc",
    "start": "98640",
    "end": "101600"
  },
  {
    "text": "so i wondered instead of keeping those",
    "start": "101600",
    "end": "103840"
  },
  {
    "text": "parameters to their default value",
    "start": "103840",
    "end": "105680"
  },
  {
    "text": "and set the well-known 80 percent as the",
    "start": "105680",
    "end": "107759"
  },
  {
    "text": "upscale threshold",
    "start": "107759",
    "end": "109360"
  },
  {
    "text": "would it be possible to find a more",
    "start": "109360",
    "end": "111280"
  },
  {
    "text": "mathematical way",
    "start": "111280",
    "end": "112720"
  },
  {
    "text": "of saying those parameters",
    "start": "112720",
    "end": "115840"
  },
  {
    "start": "116000",
    "end": "158000"
  },
  {
    "text": "first we need to set up some goals we",
    "start": "117520",
    "end": "120240"
  },
  {
    "text": "want the scale up to be fast enough",
    "start": "120240",
    "end": "122000"
  },
  {
    "text": "so users do not fix any error meaning",
    "start": "122000",
    "end": "125040"
  },
  {
    "text": "with a given number of running replicas",
    "start": "125040",
    "end": "127920"
  },
  {
    "text": "if you have a rapid load increase",
    "start": "127920",
    "end": "130000"
  },
  {
    "text": "we want the running replicas to be able",
    "start": "130000",
    "end": "132400"
  },
  {
    "text": "to handle the load",
    "start": "132400",
    "end": "133840"
  },
  {
    "text": "until new replicas are created",
    "start": "133840",
    "end": "137200"
  },
  {
    "text": "we want a minimum number of replicas to",
    "start": "137200",
    "end": "140160"
  },
  {
    "text": "be running",
    "start": "140160",
    "end": "140959"
  },
  {
    "text": "so this is in order to save some bucks",
    "start": "140959",
    "end": "143520"
  },
  {
    "text": "and we want the model",
    "start": "143520",
    "end": "144879"
  },
  {
    "text": "to be working for every given load",
    "start": "144879",
    "end": "146879"
  },
  {
    "text": "variation",
    "start": "146879",
    "end": "148319"
  },
  {
    "text": "and that's all tied down to fine tuning",
    "start": "148319",
    "end": "150640"
  },
  {
    "text": "the upscale and downscale threshold",
    "start": "150640",
    "end": "152800"
  },
  {
    "text": "and as you may know communities has a",
    "start": "152800",
    "end": "154879"
  },
  {
    "text": "single parameter",
    "start": "154879",
    "end": "157840"
  },
  {
    "start": "158000",
    "end": "202000"
  },
  {
    "text": "let's try to translate those goals into",
    "start": "158959",
    "end": "160879"
  },
  {
    "text": "a more mathematical problem",
    "start": "160879",
    "end": "164080"
  },
  {
    "text": "as we said we want the model to be able",
    "start": "164080",
    "end": "166720"
  },
  {
    "text": "to work for all",
    "start": "166720",
    "end": "168239"
  },
  {
    "text": "type of load variation so that should",
    "start": "168239",
    "end": "171200"
  },
  {
    "text": "also",
    "start": "171200",
    "end": "171599"
  },
  {
    "text": "include a worse case scenario",
    "start": "171599",
    "end": "176080"
  },
  {
    "text": "but what could be a worst case scenario",
    "start": "176080",
    "end": "179519"
  },
  {
    "text": "to me a good definition could be to have",
    "start": "179519",
    "end": "182400"
  },
  {
    "text": "a great increase in the number of users",
    "start": "182400",
    "end": "185200"
  },
  {
    "text": "doing a resource consuming operation",
    "start": "185200",
    "end": "187760"
  },
  {
    "text": "within a short period of time",
    "start": "187760",
    "end": "190080"
  },
  {
    "text": "let's say you are a cncf administrator",
    "start": "190080",
    "end": "193040"
  },
  {
    "text": "about to release kipcon tickets",
    "start": "193040",
    "end": "195440"
  },
  {
    "text": "and obviously expecting thousands of",
    "start": "195440",
    "end": "197200"
  },
  {
    "text": "users buying them",
    "start": "197200",
    "end": "198959"
  },
  {
    "text": "within 30 minutes",
    "start": "198959",
    "end": "201920"
  },
  {
    "start": "202000",
    "end": "220000"
  },
  {
    "text": "let's set some variables let's say we",
    "start": "202879",
    "end": "205680"
  },
  {
    "text": "call any",
    "start": "205680",
    "end": "206720"
  },
  {
    "text": "the number of users t taught this short",
    "start": "206720",
    "end": "209680"
  },
  {
    "text": "period of time",
    "start": "209680",
    "end": "211120"
  },
  {
    "text": "the function l u of t is a load",
    "start": "211120",
    "end": "212959"
  },
  {
    "text": "generated by a single user",
    "start": "212959",
    "end": "215040"
  },
  {
    "text": "and the function at total of t solar",
    "start": "215040",
    "end": "217120"
  },
  {
    "text": "generated by all users on the system",
    "start": "217120",
    "end": "220640"
  },
  {
    "start": "220000",
    "end": "245000"
  },
  {
    "text": "we are also going to introduce some",
    "start": "220640",
    "end": "222159"
  },
  {
    "text": "hypotheses",
    "start": "222159",
    "end": "223920"
  },
  {
    "text": "we are going to suppose that the loss is",
    "start": "223920",
    "end": "225920"
  },
  {
    "text": "evenly distributed across",
    "start": "225920",
    "end": "227360"
  },
  {
    "text": "all replicas that your application is",
    "start": "227360",
    "end": "229920"
  },
  {
    "text": "stateless",
    "start": "229920",
    "end": "230560"
  },
  {
    "text": "meaning that all requests are",
    "start": "230560",
    "end": "233360"
  },
  {
    "text": "round-robin across",
    "start": "233360",
    "end": "234480"
  },
  {
    "text": "all back-ends that the average request",
    "start": "234480",
    "end": "237439"
  },
  {
    "text": "timing is shorter than the",
    "start": "237439",
    "end": "238879"
  },
  {
    "text": "kubernetes load check interval and that",
    "start": "238879",
    "end": "241760"
  },
  {
    "text": "you are dealing with a large number of",
    "start": "241760",
    "end": "243200"
  },
  {
    "text": "users",
    "start": "243200",
    "end": "245599"
  },
  {
    "start": "245000",
    "end": "396000"
  },
  {
    "text": "and here we dive in you can get your",
    "start": "245920",
    "end": "247840"
  },
  {
    "text": "aspirin ready",
    "start": "247840",
    "end": "250400"
  },
  {
    "text": "in the mathematical world whenever you",
    "start": "250400",
    "end": "252640"
  },
  {
    "text": "have a large number of events",
    "start": "252640",
    "end": "254799"
  },
  {
    "text": "occurring almost at the same time this",
    "start": "254799",
    "end": "258000"
  },
  {
    "text": "even distribution",
    "start": "258000",
    "end": "259199"
  },
  {
    "text": "follows a gaussian or normal",
    "start": "259199",
    "end": "261359"
  },
  {
    "text": "distribution",
    "start": "261359",
    "end": "262479"
  },
  {
    "text": "which has the following formula",
    "start": "262479",
    "end": "265520"
  },
  {
    "text": "where nu is the expected value changing",
    "start": "265520",
    "end": "268800"
  },
  {
    "text": "u will actually translate the curve on",
    "start": "268800",
    "end": "270560"
  },
  {
    "text": "the horizontal axis",
    "start": "270560",
    "end": "272960"
  },
  {
    "text": "and where sigma is a standard deviation",
    "start": "272960",
    "end": "276000"
  },
  {
    "text": "meaning how steep is the curve",
    "start": "276000",
    "end": "279600"
  },
  {
    "text": "and we are dealing here with our first",
    "start": "279919",
    "end": "281680"
  },
  {
    "text": "issue because in the mathematical world",
    "start": "281680",
    "end": "284880"
  },
  {
    "text": "if you want to cover all events you need",
    "start": "284880",
    "end": "287840"
  },
  {
    "text": "to cover an interval from minus infinity",
    "start": "287840",
    "end": "290639"
  },
  {
    "text": "to plus infinity and that's obviously",
    "start": "290639",
    "end": "293199"
  },
  {
    "text": "not computable",
    "start": "293199",
    "end": "296000"
  },
  {
    "text": "but if you look at the curve you will",
    "start": "296000",
    "end": "297840"
  },
  {
    "text": "notice that 99.7 percent of all events",
    "start": "297840",
    "end": "301120"
  },
  {
    "text": "will occur between minus three sigmas",
    "start": "301120",
    "end": "303280"
  },
  {
    "text": "and three sigmas",
    "start": "303280",
    "end": "304960"
  },
  {
    "text": "so we can call it close enough to only",
    "start": "304960",
    "end": "308080"
  },
  {
    "text": "consider that interval",
    "start": "308080",
    "end": "311280"
  },
  {
    "text": "even though we are choosing the interval",
    "start": "311280",
    "end": "313360"
  },
  {
    "text": "minus three sigmas to three sigmas for",
    "start": "313360",
    "end": "315440"
  },
  {
    "text": "the simulation",
    "start": "315440",
    "end": "317199"
  },
  {
    "text": "we are not going to choose the total",
    "start": "317199",
    "end": "319280"
  },
  {
    "text": "terminal to be equal to six sigmas",
    "start": "319280",
    "end": "321759"
  },
  {
    "text": "because as you can see on the graph over",
    "start": "321759",
    "end": "324320"
  },
  {
    "text": "95",
    "start": "324320",
    "end": "325199"
  },
  {
    "text": "of all events occurs within the four",
    "start": "325199",
    "end": "327360"
  },
  {
    "text": "segments",
    "start": "327360",
    "end": "329520"
  },
  {
    "text": "so choosing the total time to be equal",
    "start": "329520",
    "end": "331520"
  },
  {
    "text": "to six sigmas",
    "start": "331520",
    "end": "332960"
  },
  {
    "text": "will add half the time compared to four",
    "start": "332960",
    "end": "335520"
  },
  {
    "text": "sigmas",
    "start": "335520",
    "end": "336639"
  },
  {
    "text": "for only four percent of users which is",
    "start": "336639",
    "end": "339759"
  },
  {
    "text": "too few so let's choose the total time",
    "start": "339759",
    "end": "342479"
  },
  {
    "text": "to be equal to four segments",
    "start": "342479",
    "end": "345199"
  },
  {
    "text": "hence sigma is equal to the total time",
    "start": "345199",
    "end": "347360"
  },
  {
    "text": "divided by four",
    "start": "347360",
    "end": "348960"
  },
  {
    "text": "and since we want the curve to start at",
    "start": "348960",
    "end": "350880"
  },
  {
    "text": "the beginning of the simulation",
    "start": "350880",
    "end": "352880"
  },
  {
    "text": "nu is equal to three-quarter of the",
    "start": "352880",
    "end": "354880"
  },
  {
    "text": "total time",
    "start": "354880",
    "end": "357440"
  },
  {
    "text": "we now have redefined the problematic",
    "start": "357440",
    "end": "359600"
  },
  {
    "text": "into this following sentence",
    "start": "359600",
    "end": "361520"
  },
  {
    "text": "we are going to calculate the law",
    "start": "361520",
    "end": "362960"
  },
  {
    "text": "generated by 99.7 percent of all users",
    "start": "362960",
    "end": "366639"
  },
  {
    "text": "each one of them performing a resource",
    "start": "366639",
    "end": "368479"
  },
  {
    "text": "consuming operation",
    "start": "368479",
    "end": "370240"
  },
  {
    "text": "and where 95.4 of them are doing it",
    "start": "370240",
    "end": "373600"
  },
  {
    "text": "within a short period of time replacing",
    "start": "373600",
    "end": "376720"
  },
  {
    "text": "sigma and u",
    "start": "376720",
    "end": "378080"
  },
  {
    "text": "within the gaussian distribution gives",
    "start": "378080",
    "end": "380319"
  },
  {
    "text": "us that",
    "start": "380319",
    "end": "381440"
  },
  {
    "text": "formula and we have a second issue here",
    "start": "381440",
    "end": "385759"
  },
  {
    "text": "because we're going to need the integral",
    "start": "385759",
    "end": "387520"
  },
  {
    "text": "of the equation",
    "start": "387520",
    "end": "389199"
  },
  {
    "text": "and there are no mathematical formula",
    "start": "389199",
    "end": "391759"
  },
  {
    "text": "for integrating",
    "start": "391759",
    "end": "392720"
  },
  {
    "text": "e with the polynomial exponents",
    "start": "392720",
    "end": "396479"
  },
  {
    "text": "to work around the second issue we're",
    "start": "397199",
    "end": "399600"
  },
  {
    "text": "gonna use the riemann sum",
    "start": "399600",
    "end": "402160"
  },
  {
    "start": "401000",
    "end": "471000"
  },
  {
    "text": "riemann is a german mathematician who",
    "start": "402160",
    "end": "404560"
  },
  {
    "text": "has proven that",
    "start": "404560",
    "end": "405919"
  },
  {
    "text": "the integral of function is equal to an",
    "start": "405919",
    "end": "408880"
  },
  {
    "text": "infinite",
    "start": "408880",
    "end": "409599"
  },
  {
    "text": "sum of infinitely small rectangles",
    "start": "409599",
    "end": "413599"
  },
  {
    "text": "and that is going to be very helpful for",
    "start": "413599",
    "end": "415440"
  },
  {
    "text": "us because now",
    "start": "415440",
    "end": "416880"
  },
  {
    "text": "we can consider that all users within a",
    "start": "416880",
    "end": "419440"
  },
  {
    "text": "small rectangles",
    "start": "419440",
    "end": "420800"
  },
  {
    "text": "have started their operation at the same",
    "start": "420800",
    "end": "422960"
  },
  {
    "text": "time",
    "start": "422960",
    "end": "425199"
  },
  {
    "text": "i don't want to go into too much details",
    "start": "427120",
    "end": "429520"
  },
  {
    "text": "about the calculation",
    "start": "429520",
    "end": "431440"
  },
  {
    "text": "but we can now define the total load",
    "start": "431440",
    "end": "433599"
  },
  {
    "text": "function as following",
    "start": "433599",
    "end": "436080"
  },
  {
    "text": "after replacing variables with our",
    "start": "436080",
    "end": "438000"
  },
  {
    "text": "current values",
    "start": "438000",
    "end": "439360"
  },
  {
    "text": "gives us that results so we had",
    "start": "439360",
    "end": "442720"
  },
  {
    "text": "succeeding in having the total load",
    "start": "442720",
    "end": "444560"
  },
  {
    "text": "function",
    "start": "444560",
    "end": "445599"
  },
  {
    "text": "defined as a formula involving",
    "start": "445599",
    "end": "448720"
  },
  {
    "text": "the number of users and the user load",
    "start": "448720",
    "end": "451440"
  },
  {
    "text": "function",
    "start": "451440",
    "end": "453840"
  },
  {
    "text": "all that we need to do now is to use a",
    "start": "454160",
    "end": "456319"
  },
  {
    "text": "dichotomy algorithm",
    "start": "456319",
    "end": "458080"
  },
  {
    "text": "in order to find the highest upscale",
    "start": "458080",
    "end": "459759"
  },
  {
    "text": "threshold where",
    "start": "459759",
    "end": "461599"
  },
  {
    "text": "no replica ever reached its resource",
    "start": "461599",
    "end": "464000"
  },
  {
    "text": "limits",
    "start": "464000",
    "end": "465520"
  },
  {
    "text": "all over the worst case scenario aka",
    "start": "465520",
    "end": "468720"
  },
  {
    "text": "the total load function",
    "start": "468720",
    "end": "471840"
  },
  {
    "start": "471000",
    "end": "737000"
  },
  {
    "text": "there is one last thing that i need to",
    "start": "473680",
    "end": "474960"
  },
  {
    "text": "cover with you before we do the demo",
    "start": "474960",
    "end": "477520"
  },
  {
    "text": "and that is how we could create the user",
    "start": "477520",
    "end": "479680"
  },
  {
    "text": "load function",
    "start": "479680",
    "end": "481599"
  },
  {
    "text": "we have to know it's impossible to have",
    "start": "481599",
    "end": "483599"
  },
  {
    "text": "a proper mathematical representation",
    "start": "483599",
    "end": "485919"
  },
  {
    "text": "of the load but onto a system by a",
    "start": "485919",
    "end": "488479"
  },
  {
    "text": "single user",
    "start": "488479",
    "end": "489919"
  },
  {
    "text": "and that is also also true if you are",
    "start": "489919",
    "end": "492479"
  },
  {
    "text": "not running",
    "start": "492479",
    "end": "493360"
  },
  {
    "text": "real-time operating system such as linux",
    "start": "493360",
    "end": "496160"
  },
  {
    "text": "and others",
    "start": "496160",
    "end": "498080"
  },
  {
    "text": "but i came up with a procedure that is",
    "start": "498080",
    "end": "500160"
  },
  {
    "text": "to me close enough to be valid",
    "start": "500160",
    "end": "502080"
  },
  {
    "text": "and the idea is following if you have a",
    "start": "502080",
    "end": "504800"
  },
  {
    "text": "large number of users",
    "start": "504800",
    "end": "506479"
  },
  {
    "text": "repeatedly doing the same task at",
    "start": "506479",
    "end": "508560"
  },
  {
    "text": "slightly different time",
    "start": "508560",
    "end": "510400"
  },
  {
    "text": "you should see the application resource",
    "start": "510400",
    "end": "512080"
  },
  {
    "text": "consumption to be pretty much flat",
    "start": "512080",
    "end": "514159"
  },
  {
    "text": "so all it takes to calculate the impact",
    "start": "514159",
    "end": "516800"
  },
  {
    "text": "of a single user",
    "start": "516800",
    "end": "518240"
  },
  {
    "text": "is to divide the resource consumption of",
    "start": "518240",
    "end": "519919"
  },
  {
    "text": "the application",
    "start": "519919",
    "end": "521279"
  },
  {
    "text": "by the number of users",
    "start": "521279",
    "end": "524399"
  },
  {
    "text": "calculate average request timing repeat",
    "start": "524560",
    "end": "527600"
  },
  {
    "text": "this procedure for all",
    "start": "527600",
    "end": "528959"
  },
  {
    "text": "tasks that you want to include in your",
    "start": "528959",
    "end": "530480"
  },
  {
    "text": "user scenario",
    "start": "530480",
    "end": "532080"
  },
  {
    "text": "add some timing and voila",
    "start": "532080",
    "end": "535839"
  },
  {
    "text": "all right demo time spoiler alert",
    "start": "536240",
    "end": "539839"
  },
  {
    "text": "since the demo is pre-recorded",
    "start": "539839",
    "end": "541440"
  },
  {
    "text": "everything's gonna be fine",
    "start": "541440",
    "end": "544560"
  },
  {
    "text": "we will do two simulations for the first",
    "start": "544800",
    "end": "547680"
  },
  {
    "text": "one",
    "start": "547680",
    "end": "548720"
  },
  {
    "text": "let's say the resource limit is at one",
    "start": "548720",
    "end": "551279"
  },
  {
    "text": "cpu",
    "start": "551279",
    "end": "552640"
  },
  {
    "text": "it takes 30 seconds to start and we have",
    "start": "552640",
    "end": "555600"
  },
  {
    "text": "a minimum number of instance",
    "start": "555600",
    "end": "557040"
  },
  {
    "text": "of 2. for the user load function",
    "start": "557040",
    "end": "560720"
  },
  {
    "text": "we will consider a user scenario with",
    "start": "560720",
    "end": "562880"
  },
  {
    "text": "only two actions",
    "start": "562880",
    "end": "564800"
  },
  {
    "text": "the first one would be something similar",
    "start": "564800",
    "end": "567200"
  },
  {
    "text": "to a user logging",
    "start": "567200",
    "end": "569519"
  },
  {
    "text": "that would take around two seconds and",
    "start": "569519",
    "end": "571600"
  },
  {
    "text": "it's quite cpu intensive",
    "start": "571600",
    "end": "573120"
  },
  {
    "text": "because of the cryptography",
    "start": "573120",
    "end": "576240"
  },
  {
    "text": "the users wait sometimes and then",
    "start": "576240",
    "end": "579680"
  },
  {
    "text": "upload a file that takes a bit longer",
    "start": "579680",
    "end": "582800"
  },
  {
    "text": "but is less cpu intensive",
    "start": "582800",
    "end": "591120"
  },
  {
    "text": "in order to lower the compute time we",
    "start": "591120",
    "end": "593600"
  },
  {
    "text": "specify to the application",
    "start": "593600",
    "end": "595440"
  },
  {
    "text": "how long is the user load function",
    "start": "595440",
    "end": "598959"
  },
  {
    "text": "then we specify our t dot and nu",
    "start": "598959",
    "end": "602800"
  },
  {
    "text": "in our case ninety-five percent of a",
    "start": "602800",
    "end": "605519"
  },
  {
    "text": "hundred thousand users",
    "start": "605519",
    "end": "607360"
  },
  {
    "text": "are doing the action within 15 minutes",
    "start": "607360",
    "end": "611760"
  },
  {
    "text": "then we choose the orchestrator those",
    "start": "612160",
    "end": "614880"
  },
  {
    "text": "are the default values",
    "start": "614880",
    "end": "617680"
  },
  {
    "text": "and as soon as you made sure that you",
    "start": "617680",
    "end": "619360"
  },
  {
    "text": "had a sufficient number of points for",
    "start": "619360",
    "end": "620959"
  },
  {
    "text": "the computation",
    "start": "620959",
    "end": "622480"
  },
  {
    "text": "you can run the test",
    "start": "622480",
    "end": "625440"
  },
  {
    "text": "it takes a bit of time i actually cut",
    "start": "626240",
    "end": "628480"
  },
  {
    "text": "the video so it doesn't take too long",
    "start": "628480",
    "end": "630000"
  },
  {
    "text": "here",
    "start": "630000",
    "end": "630959"
  },
  {
    "text": "but it will eventually get you the",
    "start": "630959",
    "end": "632800"
  },
  {
    "text": "results",
    "start": "632800",
    "end": "635279"
  },
  {
    "text": "the first graph gives you a",
    "start": "636880",
    "end": "638000"
  },
  {
    "text": "representation of the user load function",
    "start": "638000",
    "end": "640720"
  },
  {
    "text": "the second graph gives you a",
    "start": "640720",
    "end": "641760"
  },
  {
    "text": "representation of the total load",
    "start": "641760",
    "end": "643200"
  },
  {
    "text": "function",
    "start": "643200",
    "end": "644959"
  },
  {
    "text": "and the last graph gives you the result",
    "start": "644959",
    "end": "648160"
  },
  {
    "text": "the orange curve represents the load",
    "start": "648160",
    "end": "650000"
  },
  {
    "text": "appearing stance",
    "start": "650000",
    "end": "651680"
  },
  {
    "text": "the dark blue curve represents the",
    "start": "651680",
    "end": "653519"
  },
  {
    "text": "number of replicas that are running",
    "start": "653519",
    "end": "655360"
  },
  {
    "text": "and ready and the light blue curve",
    "start": "655360",
    "end": "658320"
  },
  {
    "text": "represents the number of instances",
    "start": "658320",
    "end": "660320"
  },
  {
    "text": "that are not yet ready",
    "start": "660320",
    "end": "663519"
  },
  {
    "text": "so the upscale threshold is at 54.4",
    "start": "663600",
    "end": "666160"
  },
  {
    "text": "percent",
    "start": "666160",
    "end": "666880"
  },
  {
    "text": "which is quite low the maximum number of",
    "start": "666880",
    "end": "669440"
  },
  {
    "text": "replicas",
    "start": "669440",
    "end": "670320"
  },
  {
    "text": "that are needed to handle the load is",
    "start": "670320",
    "end": "672839"
  },
  {
    "text": "78.",
    "start": "672839",
    "end": "674320"
  },
  {
    "text": "and we have a maximum load per instance",
    "start": "674320",
    "end": "676959"
  },
  {
    "text": "as 94.6",
    "start": "676959",
    "end": "678640"
  },
  {
    "text": "percent we are going to change some of",
    "start": "678640",
    "end": "681360"
  },
  {
    "text": "those values",
    "start": "681360",
    "end": "682399"
  },
  {
    "text": "so we can highlight the impact they have",
    "start": "682399",
    "end": "684320"
  },
  {
    "text": "on the system",
    "start": "684320",
    "end": "686079"
  },
  {
    "text": "we are going to double the application",
    "start": "686079",
    "end": "688000"
  },
  {
    "text": "resource limit",
    "start": "688000",
    "end": "690079"
  },
  {
    "text": "decrease the application start duration",
    "start": "690079",
    "end": "693200"
  },
  {
    "text": "and increase the minimum number of",
    "start": "693200",
    "end": "695200"
  },
  {
    "text": "replicas",
    "start": "695200",
    "end": "696720"
  },
  {
    "text": "since the application takes less time to",
    "start": "696720",
    "end": "698480"
  },
  {
    "text": "start we are going to lower the",
    "start": "698480",
    "end": "700560"
  },
  {
    "text": "readiness delay",
    "start": "700560",
    "end": "703839"
  },
  {
    "text": "so let's see what impact those change",
    "start": "707519",
    "end": "709360"
  },
  {
    "text": "had",
    "start": "709360",
    "end": "711279"
  },
  {
    "text": "first we can notice that the upscale",
    "start": "711279",
    "end": "713519"
  },
  {
    "text": "threshold",
    "start": "713519",
    "end": "714399"
  },
  {
    "text": "has a much higher and acceptable value",
    "start": "714399",
    "end": "718639"
  },
  {
    "text": "second we see something rather",
    "start": "718639",
    "end": "720399"
  },
  {
    "text": "interesting",
    "start": "720399",
    "end": "721680"
  },
  {
    "text": "where doubling the resource limit on the",
    "start": "721680",
    "end": "724240"
  },
  {
    "text": "application",
    "start": "724240",
    "end": "725680"
  },
  {
    "text": "divided by more than two the maximum",
    "start": "725680",
    "end": "728000"
  },
  {
    "text": "number of replicas",
    "start": "728000",
    "end": "729200"
  },
  {
    "text": "needed for the simulation as it was",
    "start": "729200",
    "end": "732320"
  },
  {
    "text": "previously 78",
    "start": "732320",
    "end": "733920"
  },
  {
    "text": "and it's now 27.",
    "start": "733920",
    "end": "737440"
  },
  {
    "start": "737000",
    "end": "798000"
  },
  {
    "text": "i will finish this presentation by",
    "start": "738399",
    "end": "740240"
  },
  {
    "text": "giving you some advices",
    "start": "740240",
    "end": "741839"
  },
  {
    "text": "on how you could improve the upscale",
    "start": "741839",
    "end": "744560"
  },
  {
    "text": "threshold value",
    "start": "744560",
    "end": "747200"
  },
  {
    "text": "first i by far the most important or the",
    "start": "747200",
    "end": "750320"
  },
  {
    "text": "one that has the most impacts",
    "start": "750320",
    "end": "752639"
  },
  {
    "text": "your application setup time should be",
    "start": "752639",
    "end": "754240"
  },
  {
    "text": "very fast the faster",
    "start": "754240",
    "end": "756000"
  },
  {
    "text": "the better the web application",
    "start": "756000",
    "end": "759200"
  },
  {
    "text": "do not as of yet separate resource",
    "start": "759200",
    "end": "762160"
  },
  {
    "text": "requests",
    "start": "762160",
    "end": "762720"
  },
  {
    "text": "from resource limits and as you may know",
    "start": "762720",
    "end": "765680"
  },
  {
    "text": "kubernetes calculates the auto scaling",
    "start": "765680",
    "end": "767760"
  },
  {
    "text": "against the resource request so",
    "start": "767760",
    "end": "770079"
  },
  {
    "text": "increasing the resource limits",
    "start": "770079",
    "end": "772000"
  },
  {
    "text": "will give you a little more time to",
    "start": "772000",
    "end": "773440"
  },
  {
    "text": "handle the load",
    "start": "773440",
    "end": "775839"
  },
  {
    "text": "you can also increase the minimum number",
    "start": "775839",
    "end": "777839"
  },
  {
    "text": "of replicas",
    "start": "777839",
    "end": "779120"
  },
  {
    "text": "and this is because the highest load",
    "start": "779120",
    "end": "780720"
  },
  {
    "text": "increase per replicas",
    "start": "780720",
    "end": "782240"
  },
  {
    "text": "occurs at the beginning of the",
    "start": "782240",
    "end": "783440"
  },
  {
    "text": "simulation",
    "start": "783440",
    "end": "785279"
  },
  {
    "text": "and you can also increase the resource",
    "start": "785279",
    "end": "787200"
  },
  {
    "text": "limitation on your application",
    "start": "787200",
    "end": "790720"
  },
  {
    "text": "that's it for me if you have any",
    "start": "791440",
    "end": "793760"
  },
  {
    "text": "question i will be very pleased to",
    "start": "793760",
    "end": "795440"
  },
  {
    "text": "answer you",
    "start": "795440",
    "end": "796639"
  },
  {
    "text": "thank you guys",
    "start": "796639",
    "end": "800160"
  }
]