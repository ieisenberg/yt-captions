[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "thanks for joining my session today i'd",
    "start": "719",
    "end": "3439"
  },
  {
    "text": "like to talk about",
    "start": "3439",
    "end": "4880"
  },
  {
    "text": "iowa and why we migrated into micro",
    "start": "4880",
    "end": "7440"
  },
  {
    "text": "services communication method",
    "start": "7440",
    "end": "9440"
  },
  {
    "text": "from http to jbc especially in our",
    "start": "9440",
    "end": "12880"
  },
  {
    "text": "rubric microservice",
    "start": "12880",
    "end": "15519"
  },
  {
    "text": "my name is nao and i work advantage from",
    "start": "15519",
    "end": "18240"
  },
  {
    "text": "tokyo",
    "start": "18240",
    "end": "19039"
  },
  {
    "text": "and i work as a software engineer at the",
    "start": "19039",
    "end": "21119"
  },
  {
    "text": "infrastructure team",
    "start": "21119",
    "end": "23199"
  },
  {
    "text": "my team has two responsibilities sre and",
    "start": "23199",
    "end": "26480"
  },
  {
    "text": "development infrastructure why",
    "start": "26480",
    "end": "29519"
  },
  {
    "text": "i worked on introducing of grpc in the",
    "start": "29519",
    "end": "32160"
  },
  {
    "text": "microservices",
    "start": "32160",
    "end": "34719"
  },
  {
    "text": "in this talk i'd like to talk about",
    "start": "34719",
    "end": "36640"
  },
  {
    "text": "those three things",
    "start": "36640",
    "end": "38719"
  },
  {
    "text": "the first one is why we decided to",
    "start": "38719",
    "end": "41280"
  },
  {
    "text": "introduce",
    "start": "41280",
    "end": "42840"
  },
  {
    "text": "grpc and the second one",
    "start": "42840",
    "end": "45360"
  },
  {
    "text": "is about how we migrate it from http to",
    "start": "45360",
    "end": "48480"
  },
  {
    "text": "jpc",
    "start": "48480",
    "end": "50239"
  },
  {
    "text": "and the third one is what we achieved by",
    "start": "50239",
    "end": "52719"
  },
  {
    "text": "using jpc",
    "start": "52719",
    "end": "55680"
  },
  {
    "text": "okay let's start from y",
    "start": "55760",
    "end": "59440"
  },
  {
    "text": "at first as a background let me",
    "start": "59680",
    "end": "62000"
  },
  {
    "text": "introduce my company's products",
    "start": "62000",
    "end": "64799"
  },
  {
    "text": "we have several products advantage visit",
    "start": "64799",
    "end": "68240"
  },
  {
    "text": "is a product for javascript candidate",
    "start": "68240",
    "end": "70240"
  },
  {
    "text": "matching",
    "start": "70240",
    "end": "71119"
  },
  {
    "text": "advantage people is a product for",
    "start": "71119",
    "end": "73600"
  },
  {
    "text": "professional contact management",
    "start": "73600",
    "end": "76240"
  },
  {
    "text": "by this product we offer our user",
    "start": "76240",
    "end": "78560"
  },
  {
    "text": "experience like",
    "start": "78560",
    "end": "79520"
  },
  {
    "text": "linkedin based in agil",
    "start": "79520",
    "end": "82720"
  },
  {
    "text": "these products are on one platform which",
    "start": "82720",
    "end": "85280"
  },
  {
    "text": "means",
    "start": "85280",
    "end": "85759"
  },
  {
    "text": "they share the same set of users profile",
    "start": "85759",
    "end": "88000"
  },
  {
    "text": "data",
    "start": "88000",
    "end": "89040"
  },
  {
    "text": "so use that profile data is very",
    "start": "89040",
    "end": "91119"
  },
  {
    "text": "important for our products",
    "start": "91119",
    "end": "94479"
  },
  {
    "text": "our products are built with more than",
    "start": "94880",
    "end": "96560"
  },
  {
    "start": "95000",
    "end": "95000"
  },
  {
    "text": "100 micro services",
    "start": "96560",
    "end": "99119"
  },
  {
    "text": "they are written in ruby girl python",
    "start": "99119",
    "end": "102320"
  },
  {
    "text": "non.js etc and run on the kubernetes",
    "start": "102320",
    "end": "105759"
  },
  {
    "text": "cluster",
    "start": "105759",
    "end": "107360"
  },
  {
    "text": "we have been using h1 for majority of my",
    "start": "107360",
    "end": "110799"
  },
  {
    "text": "microservices as i said",
    "start": "110799",
    "end": "114240"
  },
  {
    "text": "user profile data is very important for",
    "start": "114240",
    "end": "116479"
  },
  {
    "text": "our products",
    "start": "116479",
    "end": "117680"
  },
  {
    "text": "and it is managed by a service we call",
    "start": "117680",
    "end": "119840"
  },
  {
    "text": "user service",
    "start": "119840",
    "end": "121600"
  },
  {
    "text": "so this service is very important for us",
    "start": "121600",
    "end": "125759"
  },
  {
    "text": "now this service is written in a movie",
    "start": "125759",
    "end": "128080"
  },
  {
    "text": "by historical reason",
    "start": "128080",
    "end": "129599"
  },
  {
    "text": "and today i focus on this service",
    "start": "129599",
    "end": "133200"
  },
  {
    "text": "let's dig into the details of user size",
    "start": "133200",
    "end": "137120"
  },
  {
    "text": "user services and microservice used to",
    "start": "137120",
    "end": "139360"
  },
  {
    "text": "get or update user's profile data",
    "start": "139360",
    "end": "142720"
  },
  {
    "text": "this substrate fundamental data so used",
    "start": "142720",
    "end": "145520"
  },
  {
    "text": "from many micro services",
    "start": "145520",
    "end": "147200"
  },
  {
    "text": "and the high throughput is required",
    "start": "147200",
    "end": "150480"
  },
  {
    "text": "and this services latency often directly",
    "start": "150480",
    "end": "153280"
  },
  {
    "text": "affects the user experience",
    "start": "153280",
    "end": "155280"
  },
  {
    "text": "the low latency is also required",
    "start": "155280",
    "end": "159120"
  },
  {
    "text": "this service was widely used in the",
    "start": "159120",
    "end": "160879"
  },
  {
    "text": "microservices",
    "start": "160879",
    "end": "162560"
  },
  {
    "text": "but there was a problem so what was the",
    "start": "162560",
    "end": "166239"
  },
  {
    "start": "166000",
    "end": "166000"
  },
  {
    "text": "problem",
    "start": "166239",
    "end": "167920"
  },
  {
    "text": "the problem was the latency caused by",
    "start": "167920",
    "end": "170400"
  },
  {
    "text": "using h1",
    "start": "170400",
    "end": "172560"
  },
  {
    "text": "without keep arrive hn does not perform",
    "start": "172560",
    "end": "175360"
  },
  {
    "text": "well for several reasons",
    "start": "175360",
    "end": "177680"
  },
  {
    "text": "for example dns program and the tcp 3",
    "start": "177680",
    "end": "180879"
  },
  {
    "text": "handshake is necessary increase their",
    "start": "180879",
    "end": "183680"
  },
  {
    "text": "latency",
    "start": "183680",
    "end": "185280"
  },
  {
    "text": "and the tcp strong stuff is also a",
    "start": "185280",
    "end": "187920"
  },
  {
    "text": "problem",
    "start": "187920",
    "end": "189760"
  },
  {
    "text": "we reduced the server side latency as",
    "start": "189760",
    "end": "191840"
  },
  {
    "text": "much as possible",
    "start": "191840",
    "end": "193120"
  },
  {
    "text": "but it was not enough to meet the",
    "start": "193120",
    "end": "195040"
  },
  {
    "text": "increasing demand",
    "start": "195040",
    "end": "198000"
  },
  {
    "text": "so we decided to introduce jrpc",
    "start": "198000",
    "end": "202640"
  },
  {
    "text": "ygrpc as you know there are some rpc",
    "start": "203599",
    "end": "207120"
  },
  {
    "text": "frameworks involved",
    "start": "207120",
    "end": "208799"
  },
  {
    "text": "and we could choose a suitable one in",
    "start": "208799",
    "end": "211599"
  },
  {
    "text": "that situation",
    "start": "211599",
    "end": "212720"
  },
  {
    "text": "we've decided to use grpc by those three",
    "start": "212720",
    "end": "216080"
  },
  {
    "text": "reasons",
    "start": "216080",
    "end": "218000"
  },
  {
    "text": "the first reason is high performance",
    "start": "218000",
    "end": "221360"
  },
  {
    "text": "grpc is written h2 and",
    "start": "221360",
    "end": "224560"
  },
  {
    "text": "so it can use run drive real-time",
    "start": "224560",
    "end": "226720"
  },
  {
    "text": "communication streams",
    "start": "226720",
    "end": "228959"
  },
  {
    "text": "this gives us low latency and high",
    "start": "228959",
    "end": "231120"
  },
  {
    "text": "throughput",
    "start": "231120",
    "end": "233280"
  },
  {
    "text": "the second reason is protocol buffers",
    "start": "233280",
    "end": "236720"
  },
  {
    "text": "grpc uses protocol buffers it provides",
    "start": "236720",
    "end": "240080"
  },
  {
    "text": "a single source of truth of grpc service",
    "start": "240080",
    "end": "242560"
  },
  {
    "text": "definition",
    "start": "242560",
    "end": "244720"
  },
  {
    "text": "it is a very good point and as an",
    "start": "244720",
    "end": "247840"
  },
  {
    "text": "additional good point",
    "start": "247840",
    "end": "249040"
  },
  {
    "text": "we were already using protocol buffers",
    "start": "249040",
    "end": "251439"
  },
  {
    "text": "over h1 before using jpc",
    "start": "251439",
    "end": "254720"
  },
  {
    "text": "so it was a very natural choice for us",
    "start": "254720",
    "end": "258160"
  },
  {
    "text": "and the third reason is multiple ranking",
    "start": "258160",
    "end": "260479"
  },
  {
    "text": "support",
    "start": "260479",
    "end": "262240"
  },
  {
    "text": "we have micro services written in",
    "start": "262240",
    "end": "264080"
  },
  {
    "text": "several languages such as",
    "start": "264080",
    "end": "265440"
  },
  {
    "text": "ruby python go nos.js etc",
    "start": "265440",
    "end": "269360"
  },
  {
    "text": "and the grpc support disadvantages",
    "start": "269360",
    "end": "272479"
  },
  {
    "text": "it was a very important point",
    "start": "272479",
    "end": "276080"
  },
  {
    "text": "for these reasons we chose grpc",
    "start": "276080",
    "end": "280400"
  },
  {
    "text": "ok the next topic is how we migrate it",
    "start": "280880",
    "end": "283440"
  },
  {
    "text": "from http",
    "start": "283440",
    "end": "284479"
  },
  {
    "text": "to jpc how we migrate it",
    "start": "284479",
    "end": "289280"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "looking back i think there are two steps",
    "start": "289280",
    "end": "292479"
  },
  {
    "text": "the first step is preparation and the",
    "start": "292479",
    "end": "295199"
  },
  {
    "text": "second step is migration",
    "start": "295199",
    "end": "298320"
  },
  {
    "text": "let's start from the preparation step",
    "start": "298320",
    "end": "302720"
  },
  {
    "text": "for using jvc there are four required",
    "start": "302720",
    "end": "305199"
  },
  {
    "text": "preparations",
    "start": "305199",
    "end": "306639"
  },
  {
    "text": "schema management monitoring productive",
    "start": "306639",
    "end": "309520"
  },
  {
    "text": "development",
    "start": "309520",
    "end": "310160"
  },
  {
    "text": "environment and load balancing right now",
    "start": "310160",
    "end": "313919"
  },
  {
    "text": "the jvc ecosystem is not so mentioned",
    "start": "313919",
    "end": "316320"
  },
  {
    "text": "enough so",
    "start": "316320",
    "end": "317759"
  },
  {
    "text": "especially in ruby so we have to think",
    "start": "317759",
    "end": "319919"
  },
  {
    "text": "about those things",
    "start": "319919",
    "end": "322320"
  },
  {
    "text": "the first one is schema management",
    "start": "322320",
    "end": "325840"
  },
  {
    "start": "326000",
    "end": "326000"
  },
  {
    "text": "without the monorail which means under",
    "start": "326400",
    "end": "328560"
  },
  {
    "text": "the system maintain multiple robberies",
    "start": "328560",
    "end": "331280"
  },
  {
    "text": "we have to share the same profiles",
    "start": "331280",
    "end": "333039"
  },
  {
    "text": "across the multiple repositories",
    "start": "333039",
    "end": "335919"
  },
  {
    "text": "so how should we share profiles a few",
    "start": "335919",
    "end": "338880"
  },
  {
    "start": "337000",
    "end": "337000"
  },
  {
    "text": "approaches we can take here",
    "start": "338880",
    "end": "341120"
  },
  {
    "text": "for example copy and paste manually in",
    "start": "341120",
    "end": "344240"
  },
  {
    "text": "this approach",
    "start": "344240",
    "end": "345360"
  },
  {
    "text": "it's very hard to update multiple",
    "start": "345360",
    "end": "347520"
  },
  {
    "text": "laboratories continuously",
    "start": "347520",
    "end": "350720"
  },
  {
    "text": "download profiles automatically in each",
    "start": "350720",
    "end": "353039"
  },
  {
    "text": "battery",
    "start": "353039",
    "end": "354560"
  },
  {
    "text": "in this approach you still need to",
    "start": "354560",
    "end": "356720"
  },
  {
    "text": "generate code manually for each",
    "start": "356720",
    "end": "358479"
  },
  {
    "text": "repository",
    "start": "358479",
    "end": "360160"
  },
  {
    "text": "so you will suffer from the differences",
    "start": "360160",
    "end": "362240"
  },
  {
    "text": "in each device",
    "start": "362240",
    "end": "363680"
  },
  {
    "text": "environment for example version of proxy",
    "start": "363680",
    "end": "366560"
  },
  {
    "text": "presence over plugins",
    "start": "366560",
    "end": "368000"
  },
  {
    "text": "etc so we decided to make a central",
    "start": "368000",
    "end": "371520"
  },
  {
    "text": "repository for profiles",
    "start": "371520",
    "end": "374879"
  },
  {
    "start": "375000",
    "end": "375000"
  },
  {
    "text": "apis this is the central repository for",
    "start": "375199",
    "end": "377520"
  },
  {
    "text": "schema management",
    "start": "377520",
    "end": "380400"
  },
  {
    "text": "api source open files for our company",
    "start": "380400",
    "end": "383680"
  },
  {
    "text": "and do various tasks in the ca pipelines",
    "start": "383680",
    "end": "388720"
  },
  {
    "text": "how to use aps report3 in this",
    "start": "388880",
    "end": "391759"
  },
  {
    "text": "repository code is automatically",
    "start": "391759",
    "end": "393759"
  },
  {
    "text": "generated in the series pipelines",
    "start": "393759",
    "end": "396160"
  },
  {
    "text": "ruby go and node.js code is generated",
    "start": "396160",
    "end": "399199"
  },
  {
    "text": "in for each profile then",
    "start": "399199",
    "end": "402319"
  },
  {
    "text": "generated code is distributed via packet",
    "start": "402319",
    "end": "405280"
  },
  {
    "text": "managers",
    "start": "405280",
    "end": "406240"
  },
  {
    "text": "such as bandwagon commodores and npm",
    "start": "406240",
    "end": "410240"
  },
  {
    "text": "with this workflow developers don't need",
    "start": "410240",
    "end": "412960"
  },
  {
    "text": "to generate code by themselves and",
    "start": "412960",
    "end": "415840"
  },
  {
    "text": "can focus on the implementation of",
    "start": "415840",
    "end": "417919"
  },
  {
    "text": "features",
    "start": "417919",
    "end": "420240"
  },
  {
    "text": "this is an example code in apis",
    "start": "420240",
    "end": "423280"
  },
  {
    "text": "ruby code generated and published at",
    "start": "423280",
    "end": "426000"
  },
  {
    "text": "rubygems",
    "start": "426000",
    "end": "427840"
  },
  {
    "text": "by using bandra the robot can fetch and",
    "start": "427840",
    "end": "430800"
  },
  {
    "text": "use a generated ruby code",
    "start": "430800",
    "end": "434638"
  },
  {
    "text": "so with this workflow how we drop jp",
    "start": "435520",
    "end": "439360"
  },
  {
    "text": "servers on the client in ruby",
    "start": "439360",
    "end": "442319"
  },
  {
    "text": "for jpc servers we implement a cloud",
    "start": "442319",
    "end": "446240"
  },
  {
    "text": "which enhance the generated grpc service",
    "start": "446240",
    "end": "448479"
  },
  {
    "text": "class based from apis",
    "start": "448479",
    "end": "451360"
  },
  {
    "text": "by implementing instance methods for",
    "start": "451360",
    "end": "453199"
  },
  {
    "text": "each ipc method",
    "start": "453199",
    "end": "454639"
  },
  {
    "text": "we can use jpc servers written in ruby",
    "start": "454639",
    "end": "458319"
  },
  {
    "text": "and for jrpg clients",
    "start": "458319",
    "end": "461360"
  },
  {
    "text": "we use a subgraph first from apis",
    "start": "461360",
    "end": "464639"
  },
  {
    "text": "by using a stub object like this we can",
    "start": "464639",
    "end": "467440"
  },
  {
    "text": "communicate with grpc servers in ruby",
    "start": "467440",
    "end": "469840"
  },
  {
    "text": "code",
    "start": "469840",
    "end": "471520"
  },
  {
    "text": "this is the basic usage of apis and we",
    "start": "471520",
    "end": "474319"
  },
  {
    "text": "drop grpc servers and clients like this",
    "start": "474319",
    "end": "479280"
  },
  {
    "text": "okay and the next topic is monitoring",
    "start": "479280",
    "end": "483440"
  },
  {
    "text": "as you know application monitoring is",
    "start": "483440",
    "end": "485360"
  },
  {
    "start": "484000",
    "end": "484000"
  },
  {
    "text": "required in production",
    "start": "485360",
    "end": "488400"
  },
  {
    "text": "as a background we were using various",
    "start": "488400",
    "end": "490400"
  },
  {
    "text": "source products such as feedback",
    "start": "490400",
    "end": "492160"
  },
  {
    "text": "numeric animation etc for monitoring our",
    "start": "492160",
    "end": "495680"
  },
  {
    "text": "h1 servers",
    "start": "495680",
    "end": "497599"
  },
  {
    "text": "we wanted to continue to use them for",
    "start": "497599",
    "end": "500000"
  },
  {
    "text": "grpc",
    "start": "500000",
    "end": "500800"
  },
  {
    "text": "servers the hard monitor grpc servers",
    "start": "500800",
    "end": "506240"
  },
  {
    "text": "for this purpose we can use grpc",
    "start": "506240",
    "end": "509199"
  },
  {
    "text": "interceptors",
    "start": "509199",
    "end": "511199"
  },
  {
    "text": "we need to send metrics of hdfc request",
    "start": "511199",
    "end": "514640"
  },
  {
    "text": "and with grpc intercepts that we can",
    "start": "514640",
    "end": "517200"
  },
  {
    "text": "implement such features",
    "start": "517200",
    "end": "520000"
  },
  {
    "text": "jrpc intercepts as a user activist",
    "start": "520000",
    "end": "523599"
  },
  {
    "text": "the current interceptors and server",
    "start": "523599",
    "end": "525600"
  },
  {
    "text": "interceptors",
    "start": "525600",
    "end": "527200"
  },
  {
    "text": "client interceptors are executed on the",
    "start": "527200",
    "end": "530000"
  },
  {
    "text": "jvc client",
    "start": "530000",
    "end": "531120"
  },
  {
    "text": "around the user code and server",
    "start": "531120",
    "end": "533360"
  },
  {
    "text": "interceptors are",
    "start": "533360",
    "end": "534399"
  },
  {
    "text": "executed on the jvc server before the",
    "start": "534399",
    "end": "537200"
  },
  {
    "text": "request is passed onto the user's",
    "start": "537200",
    "end": "539360"
  },
  {
    "text": "application logic",
    "start": "539360",
    "end": "541519"
  },
  {
    "text": "it is a perfect way to implement command",
    "start": "541519",
    "end": "543680"
  },
  {
    "text": "patterns for example logging",
    "start": "543680",
    "end": "545440"
  },
  {
    "text": "monitoring authentication etc",
    "start": "545440",
    "end": "548720"
  },
  {
    "text": "so we can use jpc interceptors for",
    "start": "548720",
    "end": "550959"
  },
  {
    "text": "monitoring",
    "start": "550959",
    "end": "553440"
  },
  {
    "text": "but jpc interceptors for each such",
    "start": "553440",
    "end": "556240"
  },
  {
    "text": "products are",
    "start": "556240",
    "end": "557279"
  },
  {
    "text": "not actually provided at this time so we",
    "start": "557279",
    "end": "560240"
  },
  {
    "text": "have to implement some grpc interceptors",
    "start": "560240",
    "end": "562880"
  },
  {
    "text": "by ourselves we implemented",
    "start": "562880",
    "end": "566320"
  },
  {
    "text": "them and made them available to the",
    "start": "566320",
    "end": "568399"
  },
  {
    "text": "rubric community as",
    "start": "568399",
    "end": "569680"
  },
  {
    "text": "open source software the published",
    "start": "569680",
    "end": "572480"
  },
  {
    "text": "interceptors are shown here",
    "start": "572480",
    "end": "575680"
  },
  {
    "text": "for example we implemented the grpc",
    "start": "575680",
    "end": "577920"
  },
  {
    "text": "interceptor from neuric",
    "start": "577920",
    "end": "580480"
  },
  {
    "text": "with this channel we can send the metric",
    "start": "580480",
    "end": "582399"
  },
  {
    "text": "matrix to numeric in each request",
    "start": "582399",
    "end": "585920"
  },
  {
    "text": "and the other one is a jpc interceptor",
    "start": "585920",
    "end": "589120"
  },
  {
    "text": "for open sensors",
    "start": "589120",
    "end": "591040"
  },
  {
    "text": "with this gel we can send the metrics to",
    "start": "591040",
    "end": "593279"
  },
  {
    "text": "some such products supporting open",
    "start": "593279",
    "end": "595200"
  },
  {
    "text": "sensors",
    "start": "595200",
    "end": "596800"
  },
  {
    "text": "and another one is the jpc interceptor",
    "start": "596800",
    "end": "599200"
  },
  {
    "text": "for access logging",
    "start": "599200",
    "end": "600959"
  },
  {
    "text": "with this gen we can print access routes",
    "start": "600959",
    "end": "603120"
  },
  {
    "text": "in a specified format",
    "start": "603120",
    "end": "605600"
  },
  {
    "text": "by this grpc interceptors we monitor",
    "start": "605600",
    "end": "608640"
  },
  {
    "text": "our grpc servers",
    "start": "608640",
    "end": "611920"
  },
  {
    "text": "ok the next topic is productive",
    "start": "612640",
    "end": "614959"
  },
  {
    "text": "development environment",
    "start": "614959",
    "end": "617279"
  },
  {
    "text": "as you know it is very important topic",
    "start": "617279",
    "end": "621760"
  },
  {
    "start": "622000",
    "end": "622000"
  },
  {
    "text": "now we need to create a product",
    "start": "622079",
    "end": "623920"
  },
  {
    "text": "development environment for jpc",
    "start": "623920",
    "end": "626079"
  },
  {
    "text": "by ourselves for h1 servers",
    "start": "626079",
    "end": "629440"
  },
  {
    "text": "the ecosystem is major and the many open",
    "start": "629440",
    "end": "631920"
  },
  {
    "text": "source",
    "start": "631920",
    "end": "632959"
  },
  {
    "text": "source libraries exist so we can use",
    "start": "632959",
    "end": "635600"
  },
  {
    "text": "them",
    "start": "635600",
    "end": "637120"
  },
  {
    "text": "but this is not the case with grpt",
    "start": "637120",
    "end": "639440"
  },
  {
    "text": "servers",
    "start": "639440",
    "end": "640480"
  },
  {
    "text": "especially in ruby we need to",
    "start": "640480",
    "end": "644079"
  },
  {
    "text": "create a productive development",
    "start": "644079",
    "end": "646079"
  },
  {
    "text": "environment by ourselves",
    "start": "646079",
    "end": "648720"
  },
  {
    "text": "so how to create success environment",
    "start": "648720",
    "end": "654079"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "for the productivity we use a common",
    "start": "654160",
    "end": "656560"
  },
  {
    "text": "utility library",
    "start": "656560",
    "end": "657760"
  },
  {
    "text": "named subsix we want to use some useful",
    "start": "657760",
    "end": "661360"
  },
  {
    "text": "features for you",
    "start": "661360",
    "end": "662399"
  },
  {
    "text": "for example hot reloading and utility",
    "start": "662399",
    "end": "664560"
  },
  {
    "text": "for protocol buffers",
    "start": "664560",
    "end": "666399"
  },
  {
    "text": "and we want to avoid repeating the same",
    "start": "666399",
    "end": "668880"
  },
  {
    "text": "configuration",
    "start": "668880",
    "end": "669760"
  },
  {
    "text": "in multiple micro services so we",
    "start": "669760",
    "end": "672800"
  },
  {
    "text": "implemented a common utility library",
    "start": "672800",
    "end": "674720"
  },
  {
    "text": "named servicex",
    "start": "674720",
    "end": "676959"
  },
  {
    "text": "servicex is used by all jpc",
    "start": "676959",
    "end": "679200"
  },
  {
    "text": "microservices",
    "start": "679200",
    "end": "680480"
  },
  {
    "text": "in our company",
    "start": "680480",
    "end": "683279"
  },
  {
    "text": "i'll show you some useful features of",
    "start": "683519",
    "end": "685279"
  },
  {
    "text": "servicex",
    "start": "685279",
    "end": "686959"
  },
  {
    "text": "for jbc servers we implemented jpc",
    "start": "686959",
    "end": "690079"
  },
  {
    "text": "server command",
    "start": "690079",
    "end": "691760"
  },
  {
    "text": "this is used like this we execute",
    "start": "691760",
    "end": "695120"
  },
  {
    "text": "bundle xx jvc server then jfc server",
    "start": "695120",
    "end": "698480"
  },
  {
    "text": "process starts",
    "start": "698480",
    "end": "699360"
  },
  {
    "text": "run it prints some rocks and the third",
    "start": "699360",
    "end": "702959"
  },
  {
    "text": "reason known about 6046",
    "start": "702959",
    "end": "707200"
  },
  {
    "text": "with this command the rpc service class",
    "start": "708560",
    "end": "710959"
  },
  {
    "text": "is automatically",
    "start": "710959",
    "end": "712399"
  },
  {
    "text": "loaded and the sum of jvc intercepts are",
    "start": "712399",
    "end": "715200"
  },
  {
    "text": "automatically",
    "start": "715200",
    "end": "716079"
  },
  {
    "text": "set afterwarding feature is also",
    "start": "716079",
    "end": "719360"
  },
  {
    "text": "implemented with this command developers",
    "start": "719360",
    "end": "722800"
  },
  {
    "text": "can just focus on the",
    "start": "722800",
    "end": "724320"
  },
  {
    "text": "implementation of the grpc service",
    "start": "724320",
    "end": "726959"
  },
  {
    "text": "classes",
    "start": "726959",
    "end": "728959"
  },
  {
    "text": "and next for javascript clients we",
    "start": "728959",
    "end": "731760"
  },
  {
    "text": "implemented",
    "start": "731760",
    "end": "732880"
  },
  {
    "text": "servicex jpc start form method",
    "start": "732880",
    "end": "736320"
  },
  {
    "text": "this is just like this",
    "start": "736320",
    "end": "739680"
  },
  {
    "text": "with this method some jbc intercepts",
    "start": "741120",
    "end": "743440"
  },
  {
    "text": "that are automatically set and the user",
    "start": "743440",
    "end": "745680"
  },
  {
    "text": "agent",
    "start": "745680",
    "end": "746160"
  },
  {
    "text": "is automatically configured so their",
    "start": "746160",
    "end": "749519"
  },
  {
    "text": "developers don't need to do",
    "start": "749519",
    "end": "751519"
  },
  {
    "text": "complicated configuration so they can",
    "start": "751519",
    "end": "753839"
  },
  {
    "text": "just focus on",
    "start": "753839",
    "end": "754880"
  },
  {
    "text": "implementing the business logic",
    "start": "754880",
    "end": "758639"
  },
  {
    "text": "and the next by using protocol buffers",
    "start": "758639",
    "end": "761120"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "in ruby",
    "start": "761120",
    "end": "762079"
  },
  {
    "text": "we implement the utd library named pb",
    "start": "762079",
    "end": "766079"
  },
  {
    "text": "with vb we can create photograph objects",
    "start": "766079",
    "end": "768480"
  },
  {
    "text": "more easily",
    "start": "768480",
    "end": "771120"
  },
  {
    "text": "for example as shown here we can create",
    "start": "771120",
    "end": "773279"
  },
  {
    "text": "a timestamp object from a string object",
    "start": "773279",
    "end": "775519"
  },
  {
    "text": "in the easy way without bb we have to",
    "start": "775519",
    "end": "779040"
  },
  {
    "text": "convert a string object to a time",
    "start": "779040",
    "end": "780880"
  },
  {
    "text": "object by time.first method then pass it",
    "start": "780880",
    "end": "783920"
  },
  {
    "text": "to the google.timestamp class",
    "start": "783920",
    "end": "786000"
  },
  {
    "text": "as an argument on the other hand",
    "start": "786000",
    "end": "789120"
  },
  {
    "text": "with bb we don't need to do such",
    "start": "789120",
    "end": "791519"
  },
  {
    "text": "complicated things",
    "start": "791519",
    "end": "793680"
  },
  {
    "text": "by passing a string object to bb.27",
    "start": "793680",
    "end": "796800"
  },
  {
    "text": "stamp method we can get a protocol",
    "start": "796800",
    "end": "799279"
  },
  {
    "text": "timestamp",
    "start": "799279",
    "end": "799839"
  },
  {
    "text": "object easily and the fibo.method",
    "start": "799839",
    "end": "805040"
  },
  {
    "text": "is also useful with this method",
    "start": "805040",
    "end": "808160"
  },
  {
    "text": "we can create user-defined prototype",
    "start": "808160",
    "end": "810079"
  },
  {
    "text": "object from hash object",
    "start": "810079",
    "end": "812560"
  },
  {
    "text": "as shown here the values of hash objects",
    "start": "812560",
    "end": "815360"
  },
  {
    "text": "are",
    "start": "815360",
    "end": "815600"
  },
  {
    "text": "automatically converted to broadband",
    "start": "815600",
    "end": "817839"
  },
  {
    "text": "objects",
    "start": "817839",
    "end": "819040"
  },
  {
    "text": "so we can create nested prototype",
    "start": "819040",
    "end": "820720"
  },
  {
    "text": "objects in the easy way",
    "start": "820720",
    "end": "824000"
  },
  {
    "text": "maybe it's included in subsets but we",
    "start": "824480",
    "end": "827120"
  },
  {
    "text": "made it available to the ruby community",
    "start": "827120",
    "end": "829199"
  },
  {
    "text": "as open source software so if you are",
    "start": "829199",
    "end": "832320"
  },
  {
    "text": "interested",
    "start": "832320",
    "end": "833040"
  },
  {
    "text": "please try it that's all for",
    "start": "833040",
    "end": "836160"
  },
  {
    "text": "services and the next topic is",
    "start": "836160",
    "end": "839519"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "vmrays for productivity we decided to",
    "start": "839519",
    "end": "843519"
  },
  {
    "text": "use grpc",
    "start": "843519",
    "end": "844639"
  },
  {
    "text": "combined with parts of program rates",
    "start": "844639",
    "end": "847760"
  },
  {
    "text": "at the background we migrated to",
    "start": "847760",
    "end": "849920"
  },
  {
    "text": "migrated from ruby on race",
    "start": "849920",
    "end": "852000"
  },
  {
    "text": "and wanted to keep using possible",
    "start": "852000",
    "end": "854240"
  },
  {
    "text": "features in it",
    "start": "854240",
    "end": "856000"
  },
  {
    "text": "so we decided to use jerpush jam with",
    "start": "856000",
    "end": "858639"
  },
  {
    "text": "rav jam",
    "start": "858639",
    "end": "860480"
  },
  {
    "text": "and we found that it's very useful to",
    "start": "860480",
    "end": "862560"
  },
  {
    "text": "build a jpc server with portable",
    "start": "862560",
    "end": "864720"
  },
  {
    "text": "uploading rate so we recommend this",
    "start": "864720",
    "end": "867839"
  },
  {
    "text": "configuration",
    "start": "867839",
    "end": "868800"
  },
  {
    "text": "if you are in the same situation",
    "start": "868800",
    "end": "872639"
  },
  {
    "text": "and then next let's think about the load",
    "start": "873040",
    "end": "875680"
  },
  {
    "text": "balancing",
    "start": "875680",
    "end": "877199"
  },
  {
    "text": "what should we consider for it",
    "start": "877199",
    "end": "880560"
  },
  {
    "text": "for grpc f4 load balancers and very",
    "start": "880560",
    "end": "883360"
  },
  {
    "text": "useful",
    "start": "883360",
    "end": "885440"
  },
  {
    "text": "as you know jrpc is the rhythm h2",
    "start": "885440",
    "end": "888480"
  },
  {
    "text": "which is designed to have a single long",
    "start": "888480",
    "end": "890560"
  },
  {
    "text": "live tcp connection",
    "start": "890560",
    "end": "893120"
  },
  {
    "text": "so in forward balances once that",
    "start": "893120",
    "end": "896560"
  },
  {
    "text": "connection is established there's no",
    "start": "896560",
    "end": "898959"
  },
  {
    "text": "more browsing to be done",
    "start": "898959",
    "end": "901519"
  },
  {
    "text": "our request will get into a single",
    "start": "901519",
    "end": "903600"
  },
  {
    "text": "destination",
    "start": "903600",
    "end": "905519"
  },
  {
    "text": "this is not a good situation",
    "start": "905519",
    "end": "909040"
  },
  {
    "text": "so we use steel for s7 load balancing in",
    "start": "909040",
    "end": "912160"
  },
  {
    "text": "kubernetes classes",
    "start": "912160",
    "end": "914399"
  },
  {
    "text": "as shown here and by continents",
    "start": "914399",
    "end": "916560"
  },
  {
    "text": "configured by steel",
    "start": "916560",
    "end": "918000"
  },
  {
    "text": "are injected as cycle proxies and used",
    "start": "918000",
    "end": "921279"
  },
  {
    "text": "for l7 application level road balancing",
    "start": "921279",
    "end": "925199"
  },
  {
    "text": "by this configuration the load is evenly",
    "start": "925199",
    "end": "928240"
  },
  {
    "text": "distributed",
    "start": "928240",
    "end": "931040"
  },
  {
    "text": "okay i explained the preparation step",
    "start": "931680",
    "end": "935040"
  },
  {
    "text": "next i'll introduce our migration step",
    "start": "935040",
    "end": "939279"
  },
  {
    "text": "so how we migrate it",
    "start": "939279",
    "end": "942560"
  },
  {
    "text": "in the migration a basic strategy that",
    "start": "942560",
    "end": "945360"
  },
  {
    "text": "tries more",
    "start": "945360",
    "end": "947759"
  },
  {
    "text": "at first we made a prototype as a",
    "start": "947759",
    "end": "950240"
  },
  {
    "text": "profile concept to frequency impact",
    "start": "950240",
    "end": "953680"
  },
  {
    "text": "and then next we used grpc for our part",
    "start": "953680",
    "end": "956480"
  },
  {
    "text": "of the traffic",
    "start": "956480",
    "end": "957360"
  },
  {
    "text": "in production and gradually increase the",
    "start": "957360",
    "end": "960240"
  },
  {
    "text": "percentage of the",
    "start": "960240",
    "end": "961440"
  },
  {
    "text": "jvc this is a schematic diagram of plc",
    "start": "961440",
    "end": "968000"
  },
  {
    "text": "have a development vanettes cluster this",
    "start": "968000",
    "end": "970959"
  },
  {
    "text": "is separate from production faster",
    "start": "970959",
    "end": "973680"
  },
  {
    "text": "and we tried jrpc in this cluster",
    "start": "973680",
    "end": "977199"
  },
  {
    "text": "by using a development cluster we could",
    "start": "977199",
    "end": "980000"
  },
  {
    "text": "try jrpc without worrying about",
    "start": "980000",
    "end": "982160"
  },
  {
    "text": "affecting production environment",
    "start": "982160",
    "end": "985759"
  },
  {
    "text": "this is the result of poc",
    "start": "986000",
    "end": "989279"
  },
  {
    "text": "this diagram shows the distribution of",
    "start": "989279",
    "end": "991199"
  },
  {
    "text": "latency",
    "start": "991199",
    "end": "993360"
  },
  {
    "text": "as shown here latency decreased",
    "start": "993360",
    "end": "995440"
  },
  {
    "text": "dramatically in all cases",
    "start": "995440",
    "end": "998480"
  },
  {
    "text": "by seeing this result we decided to try",
    "start": "998480",
    "end": "1001199"
  },
  {
    "text": "jpc in a production cluster",
    "start": "1001199",
    "end": "1005120"
  },
  {
    "text": "so how we tried grpc in production",
    "start": "1005519",
    "end": "1010480"
  },
  {
    "text": "this is a schematic diagram of our trial",
    "start": "1010480",
    "end": "1012959"
  },
  {
    "text": "observation in the production cluster",
    "start": "1012959",
    "end": "1016399"
  },
  {
    "text": "at first we used jvc for only a small",
    "start": "1016399",
    "end": "1019120"
  },
  {
    "text": "part of the traffic",
    "start": "1019120",
    "end": "1021120"
  },
  {
    "text": "by trying small we could minimize the",
    "start": "1021120",
    "end": "1023199"
  },
  {
    "text": "preparation cost",
    "start": "1023199",
    "end": "1024400"
  },
  {
    "text": "to minimize risk and the next",
    "start": "1024400",
    "end": "1027438"
  },
  {
    "text": "we gradually increase increase the",
    "start": "1027439",
    "end": "1030000"
  },
  {
    "text": "percentage of grpc",
    "start": "1030000",
    "end": "1032240"
  },
  {
    "text": "by gradually increasing the traffic",
    "start": "1032240",
    "end": "1035360"
  },
  {
    "text": "we could control the risk and finally",
    "start": "1035360",
    "end": "1038558"
  },
  {
    "text": "we could achieve the complete migration",
    "start": "1038559",
    "end": "1042720"
  },
  {
    "text": "with these steps we migrated to grpc",
    "start": "1043760",
    "end": "1048400"
  },
  {
    "text": "okay on the next let me introduce the",
    "start": "1048799",
    "end": "1050880"
  },
  {
    "text": "result achieved by",
    "start": "1050880",
    "end": "1052000"
  },
  {
    "text": "using jpc",
    "start": "1052000",
    "end": "1055039"
  },
  {
    "start": "1055000",
    "end": "1055000"
  },
  {
    "text": "as a result we've achieved the",
    "start": "1055280",
    "end": "1057200"
  },
  {
    "text": "performance improvement",
    "start": "1057200",
    "end": "1059600"
  },
  {
    "text": "by using jpc average latency decrease",
    "start": "1059600",
    "end": "1062799"
  },
  {
    "text": "dramatically average latency",
    "start": "1062799",
    "end": "1066080"
  },
  {
    "text": "decreased by about 20 milliseconds per",
    "start": "1066080",
    "end": "1068720"
  },
  {
    "text": "request",
    "start": "1068720",
    "end": "1069840"
  },
  {
    "text": "and the impact was more remarkable when",
    "start": "1069840",
    "end": "1072240"
  },
  {
    "text": "many requests to user service were",
    "start": "1072240",
    "end": "1074080"
  },
  {
    "text": "involved in one web transaction",
    "start": "1074080",
    "end": "1077200"
  },
  {
    "text": "for example as soon as shown here in the",
    "start": "1077200",
    "end": "1079760"
  },
  {
    "text": "microservices",
    "start": "1079760",
    "end": "1081039"
  },
  {
    "text": "average frequency decreased by a half",
    "start": "1081039",
    "end": "1084160"
  },
  {
    "text": "the brand one is the latency when using",
    "start": "1084160",
    "end": "1086720"
  },
  {
    "text": "h1",
    "start": "1086720",
    "end": "1087600"
  },
  {
    "text": "and the later one is the latency when",
    "start": "1087600",
    "end": "1089520"
  },
  {
    "text": "using jpc",
    "start": "1089520",
    "end": "1091600"
  },
  {
    "text": "average latency to decreased from 130",
    "start": "1091600",
    "end": "1094320"
  },
  {
    "text": "milliseconds",
    "start": "1094320",
    "end": "1095120"
  },
  {
    "text": "to 65 music by switching to jrpc",
    "start": "1095120",
    "end": "1099120"
  },
  {
    "text": "in this microservice multiple request",
    "start": "1099120",
    "end": "1101760"
  },
  {
    "text": "user service were involved",
    "start": "1101760",
    "end": "1103600"
  },
  {
    "text": "so the impact was remarkable",
    "start": "1103600",
    "end": "1107120"
  },
  {
    "text": "so by using jrpc we could achieve a",
    "start": "1107120",
    "end": "1110559"
  },
  {
    "text": "performance improvement",
    "start": "1110559",
    "end": "1112160"
  },
  {
    "text": "and improve the user experience",
    "start": "1112160",
    "end": "1116000"
  },
  {
    "text": "next let me introduce what we are doing",
    "start": "1116080",
    "end": "1118080"
  },
  {
    "text": "since migration",
    "start": "1118080",
    "end": "1121360"
  },
  {
    "text": "after the success of the migration from",
    "start": "1121760",
    "end": "1124080"
  },
  {
    "text": "http",
    "start": "1124080",
    "end": "1124880"
  },
  {
    "text": "to jvc and the achievement of",
    "start": "1124880",
    "end": "1126960"
  },
  {
    "text": "performance improvement",
    "start": "1126960",
    "end": "1128960"
  },
  {
    "text": "the use of grpc is increasing throughout",
    "start": "1128960",
    "end": "1131679"
  },
  {
    "text": "the organization",
    "start": "1131679",
    "end": "1134640"
  },
  {
    "text": "now almost all clients of user service",
    "start": "1134960",
    "end": "1137520"
  },
  {
    "text": "are using jvc",
    "start": "1137520",
    "end": "1140000"
  },
  {
    "text": "and the new microservices are being",
    "start": "1140000",
    "end": "1141840"
  },
  {
    "text": "developed using grpc",
    "start": "1141840",
    "end": "1144480"
  },
  {
    "text": "and the jvc started to be used in other",
    "start": "1144480",
    "end": "1147520"
  },
  {
    "text": "languages",
    "start": "1147520",
    "end": "1148559"
  },
  {
    "text": "for example gold not js etc",
    "start": "1148559",
    "end": "1152240"
  },
  {
    "text": "so jrpc is becoming vitally used in the",
    "start": "1152240",
    "end": "1155200"
  },
  {
    "text": "organization",
    "start": "1155200",
    "end": "1157919"
  },
  {
    "text": "this is the summary of this talk",
    "start": "1158640",
    "end": "1161840"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "at first i talked about why we chose",
    "start": "1161840",
    "end": "1164080"
  },
  {
    "text": "jrpc",
    "start": "1164080",
    "end": "1165840"
  },
  {
    "text": "and the answer is what we needed a high",
    "start": "1165840",
    "end": "1168480"
  },
  {
    "text": "performance average framework",
    "start": "1168480",
    "end": "1170799"
  },
  {
    "text": "and the jvc was performant enough",
    "start": "1170799",
    "end": "1174880"
  },
  {
    "text": "and another reason is that we by already",
    "start": "1174880",
    "end": "1177280"
  },
  {
    "text": "using protocol first",
    "start": "1177280",
    "end": "1179039"
  },
  {
    "text": "so it was a natural choice and",
    "start": "1179039",
    "end": "1182160"
  },
  {
    "text": "we also needed multiple languages",
    "start": "1182160",
    "end": "1184000"
  },
  {
    "text": "support because we had micro services",
    "start": "1184000",
    "end": "1186640"
  },
  {
    "text": "seats written in several languages",
    "start": "1186640",
    "end": "1189679"
  },
  {
    "text": "jvg supported them it was a very",
    "start": "1189679",
    "end": "1191840"
  },
  {
    "text": "important point",
    "start": "1191840",
    "end": "1193840"
  },
  {
    "text": "and next i talked about how we migrated",
    "start": "1193840",
    "end": "1196400"
  },
  {
    "text": "from http",
    "start": "1196400",
    "end": "1197440"
  },
  {
    "text": "to jrpc by using jpc",
    "start": "1197440",
    "end": "1200720"
  },
  {
    "text": "we have created a workflow for protocol",
    "start": "1200720",
    "end": "1202799"
  },
  {
    "text": "buffers using our aps repository",
    "start": "1202799",
    "end": "1206559"
  },
  {
    "text": "and we have also developed some",
    "start": "1206559",
    "end": "1208559"
  },
  {
    "text": "libraries for productive development",
    "start": "1208559",
    "end": "1210880"
  },
  {
    "text": "environment of jrpc and published some",
    "start": "1210880",
    "end": "1214159"
  },
  {
    "text": "of them as oss",
    "start": "1214159",
    "end": "1217120"
  },
  {
    "text": "and in migration step the basic strategy",
    "start": "1217120",
    "end": "1220400"
  },
  {
    "text": "were try small",
    "start": "1220400",
    "end": "1221760"
  },
  {
    "text": "so we tried in the smoke and the quick",
    "start": "1221760",
    "end": "1223760"
  },
  {
    "text": "way then we could achieve the migration",
    "start": "1223760",
    "end": "1227760"
  },
  {
    "text": "at last i talked about some results of",
    "start": "1227760",
    "end": "1230240"
  },
  {
    "text": "migration from http to jpc",
    "start": "1230240",
    "end": "1233520"
  },
  {
    "text": "by using jpc we could achieve the",
    "start": "1233520",
    "end": "1236000"
  },
  {
    "text": "performance improvement",
    "start": "1236000",
    "end": "1238320"
  },
  {
    "text": "now the use of jpc is increasing",
    "start": "1238320",
    "end": "1240799"
  },
  {
    "text": "throughout the organization",
    "start": "1240799",
    "end": "1243360"
  },
  {
    "text": "that's all thank you for listening",
    "start": "1243360",
    "end": "1248480"
  }
]