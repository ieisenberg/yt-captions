[
  {
    "text": "hello and welcome to my talk writing robust operators my name is Ilya chick",
    "start": "439",
    "end": "6720"
  },
  {
    "text": "Reagan I'm a founding engineer at abound I'm also super tired like most of you",
    "start": "6720",
    "end": "13049"
  },
  {
    "text": "probably and unlike most of am super-nervous and also I'm a little",
    "start": "13049",
    "end": "18539"
  },
  {
    "text": "meeting and crossplane open source project we started about eight to nine months ago at a bound we open source is",
    "start": "18539",
    "end": "26490"
  },
  {
    "text": "right before cube con in Seattle last December crossplane is an open source multi-cloud control",
    "start": "26490",
    "end": "32430"
  },
  {
    "text": "plane and without going into any more details cross plane is operator and this",
    "start": "32430",
    "end": "38820"
  },
  {
    "text": "is what I've been doing for last a year year and a half riding operators and today I want to share my experience and knowledge with",
    "start": "38820",
    "end": "45120"
  },
  {
    "text": "you the title of this talk is inspired by Paul Morey engineer thread head",
    "start": "45120",
    "end": "51600"
  },
  {
    "text": "comment in kubernetes persistent volume control go file and today we'll spend",
    "start": "51600",
    "end": "57239"
  },
  {
    "text": "next 30 minutes reading all comments from Healy control that go in the entirety so let's start from the top",
    "start": "57239",
    "end": "64400"
  },
  {
    "text": "hello okay that's what's terrible joke I was terrible idea but idle didn't work",
    "start": "64400",
    "end": "72270"
  },
  {
    "text": "out for shuttle that well either yeah program was cancelled so I guess there is lesson for there somewhere okay",
    "start": "72270",
    "end": "79770"
  },
  {
    "text": "joking aside I think this comment captures precisely the spirit and intent",
    "start": "79770",
    "end": "85650"
  },
  {
    "text": "of this presentation writing robust kubernetes operators okay kubernetes is",
    "start": "85650",
    "end": "93570"
  },
  {
    "text": "incredible product it revolutionized our construction of continuous workload and services and when I started with",
    "start": "93570",
    "end": "100740"
  },
  {
    "text": "companies about 2015 I was sold an idea of kubernetes but at that time I call I",
    "start": "100740",
    "end": "106590"
  },
  {
    "text": "knew and care about writing and running controllers nope sorry containers it",
    "start": "106590",
    "end": "112470"
  },
  {
    "text": "took some time for me to realize that arguably the best feature of kubernetes is kubernetes api with its declarative",
    "start": "112470",
    "end": "118890"
  },
  {
    "text": "style versus traditional imperative where users express captures once versus",
    "start": "118890",
    "end": "123990"
  },
  {
    "text": "how to accomplish things it's level based versus age based which enables robust behavior in the presence of mists",
    "start": "123990",
    "end": "130950"
  },
  {
    "text": "intermediate steps changes and it's complete and authoritative and",
    "start": "130950",
    "end": "137220"
  },
  {
    "text": "last but not least it's extensible and this is what the rest of this talk about",
    "start": "137220",
    "end": "142280"
  },
  {
    "text": "so you can customize grace by either configuration and when you change let's",
    "start": "142280",
    "end": "148530"
  },
  {
    "text": "say you config files for kubernetes api controllers cubelet or extensions which",
    "start": "148530",
    "end": "153840"
  },
  {
    "text": "involve running additional programs kubernetes is designed to be automated by writing client programs and any",
    "start": "153840",
    "end": "160290"
  },
  {
    "text": "program that read and write to complete API key and provide useful automation do",
    "start": "160290",
    "end": "165420"
  },
  {
    "text": "the specific pattern for writing client programs that work well with koobideh is called a controller pattern and controls",
    "start": "165420",
    "end": "170970"
  },
  {
    "text": "typically read objects back do things and then update object status custom",
    "start": "170970",
    "end": "177000"
  },
  {
    "text": "resources are extension of kubernetes api and the two types in the IP",
    "start": "177000",
    "end": "182010"
  },
  {
    "text": "aggregation allows you to provide specialized implementation for your custom resources to do that you need to",
    "start": "182010",
    "end": "189690"
  },
  {
    "text": "write your own API server to support your API types and there's also you can define series which separate objects",
    "start": "189690",
    "end": "197819"
  },
  {
    "text": "which you can create your schema and type and you can register it and store it in existing companies API this frees",
    "start": "197819",
    "end": "204810"
  },
  {
    "text": "you from writing API server to handle your type but generic nature of the implementation means that you have less",
    "start": "204810",
    "end": "211620"
  },
  {
    "text": "flexibility done in a pea aggregation kubernetes application is an application",
    "start": "211620",
    "end": "217829"
  },
  {
    "text": "that is both deploying kubernetes and managed using kubernetes api and capacity all tooling and operate a term",
    "start": "217829",
    "end": "224880"
  },
  {
    "text": "if not invented that this was pioneered by core OS and is a method of packaging",
    "start": "224880",
    "end": "229980"
  },
  {
    "text": "deploying and managing kubernetes applications so how do I write the",
    "start": "229980",
    "end": "235230"
  },
  {
    "text": "operator probably two most popular frameworks today to write apparatus are based on controller runtime",
    "start": "235230",
    "end": "242579"
  },
  {
    "text": "it's a queue builder and a parade SDK and this is a great time for me to thank",
    "start": "242579",
    "end": "249090"
  },
  {
    "text": "all contributors to company six controller runtime especially direct x-men 12 Sally Ross I don't know he's an",
    "start": "249090",
    "end": "255840"
  },
  {
    "text": "audience or maybe he'll be watching this presentation later on for super amazing and super useful project obviously build",
    "start": "255840",
    "end": "263280"
  },
  {
    "text": "that to bootstrap multiple project we started and abound including crossplane so this I'm the most familiar",
    "start": "263280",
    "end": "269310"
  },
  {
    "text": "with meta control is a different take on extending kubernetes by using meta",
    "start": "269310",
    "end": "274380"
  },
  {
    "text": "controller server and the lambda controls and lambda hooks in their own words meta controller is an add-on for",
    "start": "274380",
    "end": "280560"
  },
  {
    "text": "kubernetes that makes it easy to write and deploy custom controls in the form of simple scripts and this is fresh of",
    "start": "280560",
    "end": "289440"
  },
  {
    "text": "the press the I read today the shell appeared was just announced and I didn't",
    "start": "289440",
    "end": "294660"
  },
  {
    "text": "look too much into it but it kind of very cursory look from reading initial blog post it's very similar conceptual",
    "start": "294660",
    "end": "301650"
  },
  {
    "text": "tomato controller in terms of using shell script hooks then of course there",
    "start": "301650",
    "end": "307620"
  },
  {
    "text": "is a low-level apparatus like Luca predicate probably one of the oldest frameworks and is very popular within a",
    "start": "307620",
    "end": "313949"
  },
  {
    "text": "root community and outside of it it's pretty low level as I mentioned it's very close to rock lion go and also",
    "start": "313949",
    "end": "320099"
  },
  {
    "text": "simple controller which is basically example how to write your own operating implementation from scratch using client",
    "start": "320099",
    "end": "325530"
  },
  {
    "text": "though so big question which framework",
    "start": "325530",
    "end": "331169"
  },
  {
    "text": "would you like to use or do you want to use to write your operator and I think this is not so straightforward if you",
    "start": "331169",
    "end": "336599"
  },
  {
    "text": "are new to operators I would recommend to use controller runtime with this you build the base tour operators decay now",
    "start": "336599",
    "end": "344090"
  },
  {
    "text": "if you feel like controller runtime is too restrictive because introduces too much magic which Darrent the very",
    "start": "344090",
    "end": "351590"
  },
  {
    "text": "correctly pointed out it's kind of sometimes hides details from you it's harder to understand then I also agree",
    "start": "351590",
    "end": "359010"
  },
  {
    "text": "with the Adrian from Admiralty with with tweet back saying that intent of control",
    "start": "359010",
    "end": "364500"
  },
  {
    "text": "runtime perhaps to make the control writing controls approachable for general developers it's a good place to",
    "start": "364500",
    "end": "371849"
  },
  {
    "text": "start and you don't need to worry about all the nitty-gritty details of the controller which can be quite formidable",
    "start": "371849",
    "end": "378510"
  },
  {
    "text": "challenge and most of the times right in many operators in a cross plane and",
    "start": "378510",
    "end": "383760"
  },
  {
    "text": "outside of it at a bound I found that control runtime is quite adequately satisfying your needs for writing operator and again if you find",
    "start": "383760",
    "end": "390659"
  },
  {
    "text": "yourself being constrained by control runtime you can always refactor later and go into the example of either rook",
    "start": "390659",
    "end": "396029"
  },
  {
    "text": "or sample operator so let me just do a quick poll of hands how many of you have written operator",
    "start": "396029",
    "end": "403230"
  },
  {
    "text": "okay so we have pretty good number of people so I'll quickly skip to the next slides which deals with the description",
    "start": "403230",
    "end": "409600"
  },
  {
    "text": "of type and I jump straight into controller control loop roughly can be described by follows a controller is",
    "start": "409600",
    "end": "415630"
  },
  {
    "text": "back to this component which you write code for in deploy into kubernetes which will process you types can be roughly",
    "start": "415630",
    "end": "421780"
  },
  {
    "text": "described by following state and this is the diagram I bought from the block of from Couchbase they have a it's observed",
    "start": "421780",
    "end": "429700"
  },
  {
    "text": "state analyze and react so in general in",
    "start": "429700",
    "end": "435400"
  },
  {
    "text": "controller reconcile loop you will retrieve your object based on key and you will retrieve the specs for that",
    "start": "435400",
    "end": "441790"
  },
  {
    "text": "object and you will analyze desired state which captured the spec with the state of a system and you perform some",
    "start": "441790",
    "end": "448210"
  },
  {
    "text": "several steps if needed and then finally you will save the status of those steps in the status of your object sorry so",
    "start": "448210",
    "end": "457419"
  },
  {
    "text": "when you deploy operator which manages kubernetes types in the same cluster typically both operator and the objects",
    "start": "457419",
    "end": "463900"
  },
  {
    "text": "it produce or manages will be deployed in the same cluster so when you write",
    "start": "463900",
    "end": "470770"
  },
  {
    "text": "operator which manages external types let's say a cross plane for example it manages types using cloud public cloud",
    "start": "470770",
    "end": "478360"
  },
  {
    "text": "API I'll say spin up me a RDS database or create GCS buckets and so forth then",
    "start": "478360",
    "end": "484090"
  },
  {
    "text": "steps exactly the same except the diagram slightly different the operator",
    "start": "484090",
    "end": "489430"
  },
  {
    "text": "will make external calls however it also has a certification on the keepin state of those objects because they not share",
    "start": "489430",
    "end": "495729"
  },
  {
    "text": "in the same notification mechanism so you need to do a little bit extra work it also requires a little extra work to clean them up",
    "start": "495729",
    "end": "502950"
  },
  {
    "text": "so just as you write mentioned internal states or internal objects with operators you will use kubernetes api",
    "start": "506160",
    "end": "512710"
  },
  {
    "text": "and client go and as we increase play for example managing external objects we",
    "start": "512710",
    "end": "518860"
  },
  {
    "text": "use cloud providers api's and the respective go clients and of course there could be other external objects as",
    "start": "518860",
    "end": "524710"
  },
  {
    "text": "well how could not you can also use external manager external objects with",
    "start": "524710",
    "end": "530350"
  },
  {
    "text": "the kubernetes api if you manage other objects in other clusters as i have",
    "start": "530350",
    "end": "538420"
  },
  {
    "text": "mentioned the controller runtime does a great job of hiding all the low-level details of Watchers informers indexers",
    "start": "538420",
    "end": "544480"
  },
  {
    "text": "and so forth and present throughout that clean reconcile interface reconcile function is called to handle object",
    "start": "544480",
    "end": "550840"
  },
  {
    "text": "which was in queued into work you for practicing and it's happened by a external update or internal in this",
    "start": "550840",
    "end": "556990"
  },
  {
    "text": "context external or internal means external to this controller example",
    "start": "556990",
    "end": "562000"
  },
  {
    "text": "external would be you use keep CTL to create your object or you keep yourself to apply changes to your object internal",
    "start": "562000",
    "end": "568480"
  },
  {
    "text": "when you practice your beauty controller you want to update some states what is metadata with its spec or status you can",
    "start": "568480",
    "end": "576280"
  },
  {
    "text": "sell function returns to values result always and error if any and quickly",
    "start": "576280",
    "end": "582640"
  },
  {
    "text": "recap and riku and result it has the different review properties when you set it to true in other words you say I want",
    "start": "582640",
    "end": "590560"
  },
  {
    "text": "to Riku the subject for next processing typically you want to use it when you encourage some error condition in other",
    "start": "590560",
    "end": "596890"
  },
  {
    "text": "words that is saying that I could not fulfill your cancellation at this loop I want to Riku the process again it be",
    "start": "596890",
    "end": "603580"
  },
  {
    "text": "cautious with Riku you use it at for waiting States for example when you create external resources it takes time",
    "start": "603580",
    "end": "610210"
  },
  {
    "text": "for them to get provision so you say ok I issue requests to create bucket I want to now go away and come back next time",
    "start": "610210",
    "end": "617080"
  },
  {
    "text": "in to check on it again so if you do Riku true it will fulfill that functionality however there is the",
    "start": "617080",
    "end": "623920"
  },
  {
    "text": "ramification typically when you in queue object he has to interface in control runtime it's called delayed and the one",
    "start": "623920",
    "end": "632260"
  },
  {
    "text": "which is causes exponential back-off now name escapes me using those two interface let's say for example if you",
    "start": "632260",
    "end": "638290"
  },
  {
    "text": "look you true it will cause exponential back-off so if you use it frequently your object will be delayed in the pew and further and",
    "start": "638290",
    "end": "644829"
  },
  {
    "text": "further and further and this is what happened initially and crossplane when we let's say waiting for kubernetes cluster to come up as external resource",
    "start": "644829",
    "end": "650769"
  },
  {
    "text": "we'll be reviewing waiting for it and it will increase exponential back-off so by the time restriction sauce is",
    "start": "650769",
    "end": "657160"
  },
  {
    "text": "ready we so far back in exponential back-off than our controller simply sits idle waiting for object to being healed",
    "start": "657160",
    "end": "662769"
  },
  {
    "text": "again and we have this gap of minutes sometimes up to 5 minutes where our state in the controller on object",
    "start": "662769",
    "end": "669130"
  },
  {
    "text": "doesn't match the state of external resource so be careful with that it's not good thing to use for waiting instead consider using the riku after",
    "start": "669130",
    "end": "676240"
  },
  {
    "text": "very similar it's using however delayed interface and what it does it say hey I'm provision external resource which",
    "start": "676240",
    "end": "681970"
  },
  {
    "text": "takes about five minutes to prevail so I will go ahead and I will Riku after five",
    "start": "681970",
    "end": "687459"
  },
  {
    "text": "minutes after five minutes is getting place and work you if there's no external changes and then you perform functionality again and hopefully if",
    "start": "687459",
    "end": "693130"
  },
  {
    "text": "resource is ready you update your status however it's not ready then you can use more gradual Sinicki from this point on",
    "start": "693130",
    "end": "698290"
  },
  {
    "text": "Riku and wait for 10 seconds because it's almost ready I want to have a more frequent checks also be careful again",
    "start": "698290",
    "end": "705910"
  },
  {
    "text": "review after would be a granular cause because if your object will never get in the ready state never get successful provision and you do in this vehicle",
    "start": "705910",
    "end": "712269"
  },
  {
    "text": "checked you're basically going to be fresh from the operating system continuously spinning glued Riku falls",
    "start": "712269",
    "end": "718839"
  },
  {
    "text": "basically means I'm done with it forget about it I need to process it anymore",
    "start": "718839",
    "end": "724269"
  },
  {
    "text": "don't let Y me anymore with that the only time you will get that quite back if somebody externally edit would say",
    "start": "724269",
    "end": "730240"
  },
  {
    "text": "somebody do keep still update or keep still deleting it and finally there is a synch period Control Manager property which basically",
    "start": "730240",
    "end": "737769"
  },
  {
    "text": "said that at a given point I want everything to be refreshed such a global refresh for simple projects maybe it's",
    "start": "737769",
    "end": "746380"
  },
  {
    "text": "not a bad thing to use however by default value of synced set to 10 hours and maybe it's deliberately so can",
    "start": "746380",
    "end": "753339"
  },
  {
    "text": "discourage you from using it to maintain state of your system however you can tweak it and you said too short a period",
    "start": "753339",
    "end": "759519"
  },
  {
    "text": "of time however be careful again if you set it even through the system with a simple project like has one type you can",
    "start": "759519",
    "end": "765040"
  },
  {
    "text": "have many instance of the same type so if you set it to very short period time let's say we've Riku every 10 seconds",
    "start": "765040",
    "end": "770680"
  },
  {
    "text": "you'll find yourself a speeding and refreshing many objects very frequently and you're going to always",
    "start": "770680",
    "end": "775810"
  },
  {
    "text": "have busy loop without actual external change or state change so the big",
    "start": "775810",
    "end": "783279"
  },
  {
    "text": "question and this is matrix we used in cross plane but Ricky or not to review and the answer is both",
    "start": "783279",
    "end": "790600"
  },
  {
    "text": "you always Riku however just went so if the object state is dirty and it's been",
    "start": "790600",
    "end": "796930"
  },
  {
    "text": "updated externally or internally it will be always immediately reviewed and put an EQ if the object is in clean State",
    "start": "796930",
    "end": "803199"
  },
  {
    "text": "next cases then if you have an error it will go and be recued by a exponential",
    "start": "803199",
    "end": "810519"
  },
  {
    "text": "back-off rate limiting interface that's the term and if the you said recuse they",
    "start": "810519",
    "end": "816579"
  },
  {
    "text": "are similar to error also rate limiting interface exponential back-off if you do Riku false you not going to get reviewed",
    "start": "816579",
    "end": "824050"
  },
  {
    "text": "again unless it's been external updated and of course now you have this Riku after we can actually little set delay",
    "start": "824050",
    "end": "831459"
  },
  {
    "text": "when you want to get through killed yes",
    "start": "831459",
    "end": "837160"
  },
  {
    "text": "quick what about status in early days kubernetes type used phase to track the object status and phase was deprecated",
    "start": "837160",
    "end": "843790"
  },
  {
    "text": "because it's I think it's adequately captured the stars of the object it more of a state machine rather than actual",
    "start": "843790",
    "end": "849730"
  },
  {
    "text": "state of an object today it's encouraged to use and by IP a convention is encouraged to use conditions conditions",
    "start": "849730",
    "end": "855910"
  },
  {
    "text": "represent the latest available observation of object state conditions should be added to explicitly convey",
    "start": "855910",
    "end": "861160"
  },
  {
    "text": "properties that users or components care but rather than requiring those properties to be inferred from the other",
    "start": "861160",
    "end": "866829"
  },
  {
    "text": "observations once defined conditions should be treated just like an API a",
    "start": "866829",
    "end": "872079"
  },
  {
    "text": "meaning that any changes cannot be applied fairly and have to be considered for backward and for compatibility",
    "start": "872079",
    "end": "879509"
  },
  {
    "text": "objects may report multiple states conditions and new types conditions may be added by third party controllers",
    "start": "879509",
    "end": "885639"
  },
  {
    "text": "therefore conditions represented by a slice or list where you have all of them",
    "start": "885639",
    "end": "891220"
  },
  {
    "text": "have similar structure all conditions have a type and those types should be specific for your application all of",
    "start": "891220",
    "end": "899230"
  },
  {
    "text": "them have a status whether it's active condition are not a true or false and unknown reason it's a single word",
    "start": "899230",
    "end": "904779"
  },
  {
    "text": "camelcase this of the condition and message is more expanded message why this condition was activated and finally have a -",
    "start": "904779",
    "end": "912310"
  },
  {
    "text": "timestamps this is all captured in the API conventions the link at the end of the slide deck in references we used",
    "start": "912310",
    "end": "919900"
  },
  {
    "text": "last transition time we don't use deduce heartbeat or I didn't use carbon so you typically use the timestamp to set one",
    "start": "919900",
    "end": "926290"
  },
  {
    "text": "condition been activated what of caution about timestamp used in timestamp you want to set that time only",
    "start": "926290",
    "end": "933610"
  },
  {
    "text": "one condition being set you know what's being changed initially we had controllers which basically say okay",
    "start": "933610",
    "end": "939580"
  },
  {
    "text": "condition unset or condition when I'm processing and then at the end check the condition of the object and match in one",
    "start": "939580",
    "end": "945550"
  },
  {
    "text": "and was created that we had the object resource which was always in ready condition ready to go how IRS's will",
    "start": "945550",
    "end": "952120"
  },
  {
    "text": "perform this check all the time rules always update the last transmission time which in turn created object to be",
    "start": "952120",
    "end": "958630"
  },
  {
    "text": "always in dirty state meaning that we always perpetually worry queuing same object inventor there were no changes to",
    "start": "958630",
    "end": "964120"
  },
  {
    "text": "state need external no spec so be careful on that you only want to activate what set this time step well",
    "start": "964120",
    "end": "970690"
  },
  {
    "text": "conditions being activated or deactivated all right this one is",
    "start": "970690",
    "end": "975960"
  },
  {
    "text": "concurrency yes so typically controller runtime has a",
    "start": "975960",
    "end": "981040"
  },
  {
    "text": "single girl routine per controller per type so if your project have only single type you will have single routine",
    "start": "981040",
    "end": "987070"
  },
  {
    "text": "controller if you have multiple types all of them all controls will be run separate go routines control runtime",
    "start": "987070",
    "end": "993130"
  },
  {
    "text": "supports functionality to run multiple go routines for controller we haven't",
    "start": "993130",
    "end": "1000090"
  },
  {
    "text": "used it but I think you have to provide the own bookkeeping so you don't want the same instance being processed by multiple controllers also another",
    "start": "1000090",
    "end": "1008340"
  },
  {
    "text": "consideration is to make if you make in the call which let's say your internal object and you have to make external call which takes a long time to fulfill",
    "start": "1008340",
    "end": "1014960"
  },
  {
    "text": "typically you don't want to block your controller because all the other instances of the same type will be",
    "start": "1014960",
    "end": "1020520"
  },
  {
    "text": "queued and will be waiting to be processed so let's say if I'm spinning up resource which takes five minutes to",
    "start": "1020520",
    "end": "1025589"
  },
  {
    "text": "provision I don't want to sit and wait for response to be ready because other resources will be sitting in Hue saying",
    "start": "1025590",
    "end": "1031350"
  },
  {
    "text": "that all we need to go to and nothing's happening instead what you want to do you say ok market is a pending and I'll",
    "start": "1031350",
    "end": "1038490"
  },
  {
    "text": "come back next time check around and starts on this provisioning you can spawn up separate",
    "start": "1038490",
    "end": "1044310"
  },
  {
    "text": "go routine and saying okay return reconcile know and go ahead and do due process in the waiting in different go",
    "start": "1044310",
    "end": "1049590"
  },
  {
    "text": "routine however again you need to be mindful about the concurrency so you need to do keep and make sure that you",
    "start": "1049590",
    "end": "1055530"
  },
  {
    "text": "don't process the same instance by multiple operators have multiple controllers so don't block don't branch",
    "start": "1055530",
    "end": "1063210"
  },
  {
    "text": "and take everything here in the slide and in this presentation grain of salt this is kind of my experience your",
    "start": "1063210",
    "end": "1069300"
  },
  {
    "text": "mileage may vary so it may have different needs okay status yes you may",
    "start": "1069300",
    "end": "1076500"
  },
  {
    "text": "have need for additional fields in your status besides the conditions typically application creates other things like",
    "start": "1076500",
    "end": "1083040"
  },
  {
    "text": "you say create service or create secrets and external resources as well so",
    "start": "1083040",
    "end": "1088200"
  },
  {
    "text": "sometimes it's nice to propagate those states back and especially if you're using additional printer columns in your",
    "start": "1088200",
    "end": "1094680"
  },
  {
    "text": "definition it's nice for you object user types they get my type and it gets",
    "start": "1094680",
    "end": "1100950"
  },
  {
    "text": "additional columns which attach to it via status so this is an example of one of the crossplane which I think it's",
    "start": "1100950",
    "end": "1108210"
  },
  {
    "text": "kubernetes cluster which shows the end point of cluster cluster name and some other things so that those things you",
    "start": "1108210",
    "end": "1114840"
  },
  {
    "text": "can put those stars as well and of course now there is other things like running operations some cloud providers",
    "start": "1114840",
    "end": "1121800"
  },
  {
    "text": "instead of provision resource and saying okay I've got it it's pending come back and when you ask",
    "start": "1121800",
    "end": "1127170"
  },
  {
    "text": "and give me resources okay it's there but it's still in panic state some cloud providers will actually say here's the",
    "start": "1127170",
    "end": "1132570"
  },
  {
    "text": "ID of operation so instead of kind of and when you ask for resource again it",
    "start": "1132570",
    "end": "1137730"
  },
  {
    "text": "says up it's not fun because it's not being fully flushed out yet so instead of kind of inferring about resource you",
    "start": "1137730",
    "end": "1144180"
  },
  {
    "text": "need to infer now about the status of operation so you may want to save with that operation ID into your status in",
    "start": "1144180",
    "end": "1150240"
  },
  {
    "text": "object so this way next time when you reconcile and see oh yeah I have pending operation going in against this cloud provider go ahead and use that",
    "start": "1150240",
    "end": "1156120"
  },
  {
    "text": "oppression ID infer what is the status right now is it finished operating or not it's a little bit a little bit clunky but I think that's the only way",
    "start": "1156120",
    "end": "1162480"
  },
  {
    "text": "to kind of keep track of those process because ironically the same cloud provider will treat create and update as",
    "start": "1162480",
    "end": "1168960"
  },
  {
    "text": "a single call so what happens that you say create is okay I'm creating it it exists for but if you turn around say create",
    "start": "1168960",
    "end": "1174690"
  },
  {
    "text": "again it will actually issue update command because it will see that there is create oppression pending and which",
    "start": "1174690",
    "end": "1180269"
  },
  {
    "text": "ultimately would lead to failure so I kind of need to be careful develop about that okay this is very interesting topic",
    "start": "1180269",
    "end": "1188519"
  },
  {
    "text": "and I think we've got it from or I've got it wrong several times so how do you",
    "start": "1188519",
    "end": "1195179"
  },
  {
    "text": "delete things in kubernetes when you delete an object kubernetes api marks it for dilution by setting dilution timestamp in metadata and then",
    "start": "1195179",
    "end": "1203070"
  },
  {
    "text": "it updates the object which makes dirty and then object triggers to be put in the queue and that's why you reconcile",
    "start": "1203070",
    "end": "1208289"
  },
  {
    "text": "get cold and you try to get a route through that object and so what happened next it's kind of up to you how you implement",
    "start": "1208289",
    "end": "1214109"
  },
  {
    "text": "your delete logic if you need any know that once object is deleted it cannot be",
    "start": "1214109",
    "end": "1219929"
  },
  {
    "text": "undelivered so it's kind of any future updates to delete the object will be ignored by kubernetes api and if your",
    "start": "1219929",
    "end": "1225899"
  },
  {
    "text": "controller does not create any children resources internal/external then cleanup is rather straightforward upon the",
    "start": "1225899",
    "end": "1232679"
  },
  {
    "text": "average of deletion object gets automatically garbage collected by api and remove from the api Urich and cellular will call one more last time",
    "start": "1232679",
    "end": "1238649"
  },
  {
    "text": "with key and you attempt to retrieve an object and get all four object not found which is okay in this case because it's already been garbage collected now when",
    "start": "1238649",
    "end": "1247679"
  },
  {
    "text": "you when you controller create some additional company's resources okay for",
    "start": "1247679",
    "end": "1253649"
  },
  {
    "text": "example the deployment of secret or external resources then other a few option you need to consider typically",
    "start": "1253649",
    "end": "1259590"
  },
  {
    "text": "almost always you wanna sign object reference for kubernetes resources published reference and the children",
    "start": "1259590",
    "end": "1265080"
  },
  {
    "text": "resources which point on a reference which point to your parent object or parent controller thus when you delete your parent again",
    "start": "1265080",
    "end": "1273809"
  },
  {
    "text": "you don't have to do anything special and your children object will be automatically garbage collected as well so it will delete a parent garbage",
    "start": "1273809",
    "end": "1280200"
  },
  {
    "text": "collected and cascade delete all children objects okay if you don't",
    "start": "1280200",
    "end": "1288899"
  },
  {
    "text": "assign on a reference then what's going to happen if you delete your parent your children and parent gets garbage",
    "start": "1288899",
    "end": "1295109"
  },
  {
    "text": "collected that will become an orphan state and then you have to perform additional steps to clean them up which may be not good if you want to perform",
    "start": "1295109",
    "end": "1303539"
  },
  {
    "text": "additional cleanup steps then you must use finalized errs in fact this is the only way to handle",
    "start": "1303539",
    "end": "1308919"
  },
  {
    "text": "deletion and external resources that's kind of effect of what we do in communica and crossplane object metadata",
    "start": "1308919",
    "end": "1316029"
  },
  {
    "text": "contains the definition for list the finalized errs they could be more than one and as long as finalize the list is",
    "start": "1316029",
    "end": "1321820"
  },
  {
    "text": "not empty the object will not be removed from the API you can set finalizes in",
    "start": "1321820",
    "end": "1327340"
  },
  {
    "text": "different way for example when you create your type will say keep steel trade your llamo may contain already",
    "start": "1327340",
    "end": "1332380"
  },
  {
    "text": "metadata finalizar in it you can also set it by default in webhook or you can set it in your reconciler first time",
    "start": "1332380",
    "end": "1338860"
  },
  {
    "text": "when you encounter this objects in American style and creating children object let me say finalized now we'll",
    "start": "1338860",
    "end": "1344710"
  },
  {
    "text": "set finalize it when you delete your object reconcile it gets notified and it retrieves an object because it's not removed from the API it will examine if",
    "start": "1344710",
    "end": "1351549"
  },
  {
    "text": "it has dilution timestamp and if it says okay yes dilution time stem is set then I need to perform some deletion steps",
    "start": "1351549",
    "end": "1357549"
  },
  {
    "text": "and once it perform the steps and cleanup is successful then controller can remove finalizer",
    "start": "1357549",
    "end": "1362889"
  },
  {
    "text": "and again it goes through the standard garbage collection if there is no more finalizes in list it's get garbage",
    "start": "1362889",
    "end": "1368080"
  },
  {
    "text": "collected and move from AP automatically and finally quick word about the",
    "start": "1368080",
    "end": "1373389"
  },
  {
    "text": "foreground dilution policy chances are that you will never need to use it the key difference between foreground and",
    "start": "1373389",
    "end": "1379690"
  },
  {
    "text": "background policy is that with the background policy when parent object is marked for deletion its removed and",
    "start": "1379690",
    "end": "1385210"
  },
  {
    "text": "garbage collected and then children kind of suffer the same fate in foreground policy parent object marked for deletion",
    "start": "1385210",
    "end": "1390940"
  },
  {
    "text": "but it's not removed from API instead all children then get marked for",
    "start": "1390940",
    "end": "1396309"
  },
  {
    "text": "deletion and garbage collected and then once all children a gun then parent gets garbage collected as well so the good",
    "start": "1396309",
    "end": "1404049"
  },
  {
    "text": "use case for that may be kind of contrived but what we experience sometimes is that if your children",
    "start": "1404049",
    "end": "1410500"
  },
  {
    "text": "object depend on some properties of your parent object for example it needs some connection reference or something like",
    "start": "1410500",
    "end": "1415929"
  },
  {
    "text": "that if you delete parent first your children cannot retrieve anymore and they become stranded and orphaned",
    "start": "1415929",
    "end": "1421149"
  },
  {
    "text": "not by intent but as a matter of fact so you may use this for grant policy and",
    "start": "1421149",
    "end": "1428169"
  },
  {
    "text": "another what about for grant policy that it cannot be activated from keep CTL so if you try to say keep CTL delete you",
    "start": "1428169",
    "end": "1434110"
  },
  {
    "text": "cannot set foreground policy in order to achieve that and again there is a issue github issue against that I linked",
    "start": "1434110",
    "end": "1440590"
  },
  {
    "text": "it in my reference slide if you want to achieve foreground policies through kind of from client side you need to use curl",
    "start": "1440590",
    "end": "1446740"
  },
  {
    "text": "command where you will say curl this API request with the options deletion options okay let's a couple of words",
    "start": "1446740",
    "end": "1458560"
  },
  {
    "text": "about the issues we've encountered while working with controller run time control",
    "start": "1458560",
    "end": "1464350"
  },
  {
    "text": "run time not so much control run time but rather controller tools which kind of comes with it which enables you to bootstrap and set up the additional",
    "start": "1464350",
    "end": "1471880"
  },
  {
    "text": "inventory tasks like generating series and so forth they're very particular about the project structure and I think",
    "start": "1471880",
    "end": "1478750"
  },
  {
    "text": "maybe it's a good thing it basically expects your types to reside in specific directory structure",
    "start": "1478750",
    "end": "1484210"
  },
  {
    "text": "like you're gonna have you ap is you have a group version and you type if you deviate from that layout then when you",
    "start": "1484210",
    "end": "1490570"
  },
  {
    "text": "try to generate series it may not work through control tools we kind of in cross plane when we initially bootstrap",
    "start": "1490570",
    "end": "1496960"
  },
  {
    "text": "the project we decided to go mono repo and we like lump a lot of cloud providers all claw providers and all",
    "start": "1496960",
    "end": "1502420"
  },
  {
    "text": "types and groups into one project which may be in hindsight not really a good thing we kind of still in defense about",
    "start": "1502420",
    "end": "1508090"
  },
  {
    "text": "that but what it lets you we realize that we need to subgroup further down but then once we did that and try to use",
    "start": "1508090",
    "end": "1514000"
  },
  {
    "text": "control tools to generate series of this series we've stuck in an errors and we end up to actually patch in control",
    "start": "1514000",
    "end": "1520510"
  },
  {
    "text": "tools to handle the specific condition i initially create the issue in the control tools but then i realized that",
    "start": "1520510",
    "end": "1526450"
  },
  {
    "text": "maybe it's a good reason why that structure in the first place you want to keep things simple and whatnot better",
    "start": "1526450",
    "end": "1533290"
  },
  {
    "text": "example how to keep things simple is testing when you use cube builder i'm not sure if you build a property so",
    "start": "1533290",
    "end": "1539530"
  },
  {
    "text": "controller a runtime it will automatically generate tests for you it kind of scaffolding for your tests for",
    "start": "1539530",
    "end": "1545260"
  },
  {
    "text": "both type and the controller so the way type just set up it will basically every",
    "start": "1545260",
    "end": "1551410"
  },
  {
    "text": "time you run tests it will spin up new cube API and you sed so you have this pristine API to which",
    "start": "1551410",
    "end": "1557020"
  },
  {
    "text": "you can register your type and perform some tests which is great because you always have this reproducible test one",
    "start": "1557020",
    "end": "1562330"
  },
  {
    "text": "thing it you worry about if you have a very busy project with a lot of groups with a lot of types the way go run tests",
    "start": "1562330",
    "end": "1568600"
  },
  {
    "text": "it basically it's per package so it many packages can run in pair long ago so imagine if you have many many groups let's say 10 and all of them",
    "start": "1568600",
    "end": "1576700"
  },
  {
    "text": "are gonna run parallel so you're gonna have 10 sets of cube API and H CDs which",
    "start": "1576700",
    "end": "1581830"
  },
  {
    "text": "can be taxed on your system before if we don't put any clamp on it how many we can run a parallel if I try to build or",
    "start": "1581830",
    "end": "1587620"
  },
  {
    "text": "run test for control cross plane in my laptop my laptop will freeze for like 5 minutes I cannot do anything now so we",
    "start": "1587620",
    "end": "1594850"
  },
  {
    "text": "have to actually clamp down and make file to say ok use this ratio CPU cores per how many parallel go tests you can",
    "start": "1594850",
    "end": "1600700"
  },
  {
    "text": "run and that's I think we'll be good testament why you want to keep your project simple don't kind of try to",
    "start": "1600700",
    "end": "1606580"
  },
  {
    "text": "attempt to lump many different types I mean different controllers rather than have the specific may be dedicated",
    "start": "1606580",
    "end": "1612880"
  },
  {
    "text": "things what else yes and there are other issues this one I want to highlight you",
    "start": "1612880",
    "end": "1619450"
  },
  {
    "text": "need to be mindful about the still routes through controller runtime when you update your object it also",
    "start": "1619450",
    "end": "1625899"
  },
  {
    "text": "increments the revision version on your object metadata however when you read that object again right away from the",
    "start": "1625899",
    "end": "1631149"
  },
  {
    "text": "controller runtime you may get cached version which actually have a stale revision in which may lead to this error",
    "start": "1631149",
    "end": "1637299"
  },
  {
    "text": "you probably some of you saw this error when you try to let's say keep his jail dump in the ammo and then apply at some",
    "start": "1637299",
    "end": "1642700"
  },
  {
    "text": "point later but when revision been changed it will reject because said hey you have a stale copy of the object so",
    "start": "1642700",
    "end": "1648690"
  },
  {
    "text": "this ongoing issue has a link in reference slide so you can check it out",
    "start": "1648690",
    "end": "1654309"
  },
  {
    "text": "also so take away from this presentation try to keep your operators simple if it",
    "start": "1654309",
    "end": "1662200"
  },
  {
    "text": "is possible start with controller runtime you build the operators decay and if it's too much magic for you",
    "start": "1662200",
    "end": "1668230"
  },
  {
    "text": "refactor and use either rook or sample controller try not to prematurely",
    "start": "1668230",
    "end": "1675070"
  },
  {
    "text": "optimize your types specs or statuses in others do not try to share them right away watch out for busier cancellation",
    "start": "1675070",
    "end": "1682630"
  },
  {
    "text": "loops we didn't even know that we have these organization loops in cross plane until we added some login and all",
    "start": "1682630",
    "end": "1687789"
  },
  {
    "text": "suddenly when I run my controller I just see wall of same message coming through because the controller cancel spinning",
    "start": "1687789",
    "end": "1694110"
  },
  {
    "text": "stick with default one makes sense for example for unit tests for types or project structure change defaults when",
    "start": "1694110",
    "end": "1700840"
  },
  {
    "text": "they don't for example unit tests for controllers also kind of tries to use the same integration like a unit testing way spin",
    "start": "1700840",
    "end": "1708640"
  },
  {
    "text": "up the cabarrus api and SCD and then use this controller like running entity and we try to test it while it could be",
    "start": "1708640",
    "end": "1715300"
  },
  {
    "text": "simply tested with the go unit test and just run standard unit tests against this function which is worth great",
    "start": "1715300",
    "end": "1721920"
  },
  {
    "text": "collector garbage and get involved as I mentioned earlier I started with",
    "start": "1721920",
    "end": "1727390"
  },
  {
    "text": "kubernetes about four years ago and in my previous life I had the companies all dead who breeds migration effort at each",
    "start": "1727390",
    "end": "1733660"
  },
  {
    "text": "bill so and it culminated and run the Game of Thrones Season seven it was big milestone for us for production",
    "start": "1733660",
    "end": "1740320"
  },
  {
    "text": "readiness and the big factor of success back then and still true now is this active and vibrant communities",
    "start": "1740320",
    "end": "1746500"
  },
  {
    "text": "communities so I encourage all of you to become part of it and with that I have",
    "start": "1746500",
    "end": "1751540"
  },
  {
    "text": "this reference list so you can actually when you download the presentation check it and I will open the floor for questions this is end of my presentation",
    "start": "1751540",
    "end": "1758590"
  },
  {
    "text": "so I want to thank you all of you coming",
    "start": "1758590",
    "end": "1763169"
  },
  {
    "text": "and just a reminder again to rate the session at the ending so you're",
    "start": "1769000",
    "end": "1778400"
  },
  {
    "text": "resilient operator how do you respond to different event types such as fail TVs",
    "start": "1778400",
    "end": "1786410"
  },
  {
    "text": "and so on oh you're not guaranteed to get all the events correct right so how do you gain",
    "start": "1786410",
    "end": "1791900"
  },
  {
    "text": "all that that's that's a good question I'm not sure fully prepared to answer it but I think if I put it in context of",
    "start": "1791900",
    "end": "1797960"
  },
  {
    "text": "the controller run time you will always get the notification with the key and what you will do you basically retrieve",
    "start": "1797960",
    "end": "1804770"
  },
  {
    "text": "the object from the animate API and you examine the state of the object against",
    "start": "1804770",
    "end": "1809840"
  },
  {
    "text": "the desired July state of the object against the state of your system then you perform reconciliation when you do external resource management let's say",
    "start": "1809840",
    "end": "1816230"
  },
  {
    "text": "I'm the Truman State and say okay I supposed to have this database with this many replicas what is my state right now",
    "start": "1816230",
    "end": "1822370"
  },
  {
    "text": "if the state identical then I can continue rocket science and I'm done otherwise I'll perform steps to update",
    "start": "1822370",
    "end": "1828470"
  },
  {
    "text": "it",
    "start": "1828470",
    "end": "1830590"
  },
  {
    "text": "and my questions",
    "start": "1835610",
    "end": "1838450"
  },
  {
    "text": "first light very first okay",
    "start": "1840870",
    "end": "1846350"
  },
  {
    "text": "Oh with the common we can find a comment in the village hi",
    "start": "1851760",
    "end": "1859640"
  },
  {
    "text": "new question operators are new for me I was wondering if they are used cases you",
    "start": "1859640",
    "end": "1867440"
  },
  {
    "text": "would discourage use operators for I think I'm thinking for example there are",
    "start": "1867440",
    "end": "1872690"
  },
  {
    "text": "many things that you could do either in a CIC the pipeline or an operator I was wondering if there is a pattern to help",
    "start": "1872690",
    "end": "1880940"
  },
  {
    "text": "decide when some functionality should be implemented in a place or another it's",
    "start": "1880940",
    "end": "1886640"
  },
  {
    "text": "hard to answer this question without known specific details of the CIC deep steps like that I would say that you can",
    "start": "1886640",
    "end": "1893600"
  },
  {
    "text": "use a period of almost for anything effectively whatever its kind of specific logic for your type you can manage anything outside of Cabrini's to",
    "start": "1893600",
    "end": "1900140"
  },
  {
    "text": "good use case example we're managing provision in external resources in a",
    "start": "1900140",
    "end": "1905330"
  },
  {
    "text": "public cloud so you can manage it to do that and you can manage external source in other companies clusters you can",
    "start": "1905330",
    "end": "1911809"
  },
  {
    "text": "manage things in your notes so it depend what you need so it's kind of hard for",
    "start": "1911809",
    "end": "1917179"
  },
  {
    "text": "me to answer if you want to we can discuss more specific details about you see ICD thing",
    "start": "1917179",
    "end": "1922480"
  },
  {
    "text": "thank you and can you tell what in your experience will be the better framework",
    "start": "1931280",
    "end": "1936650"
  },
  {
    "text": "so what would use cube builder or open SDK or maybe you've encountered some",
    "start": "1936650",
    "end": "1942320"
  },
  {
    "text": "problems with one of them and choose another yes that's a good question I think that I briefly touched in my slide",
    "start": "1942320",
    "end": "1948080"
  },
  {
    "text": "deck I think it depends so I think both cube builder and a parodies Gabler",
    "start": "1948080",
    "end": "1953480"
  },
  {
    "text": "compatible I looked and a priest gave one we just announced before they were based on the cube controller runtime so",
    "start": "1953480",
    "end": "1959600"
  },
  {
    "text": "kind of for me that was a little bit that's when I decided to go with the cube builder first now since then they changed and they use in controller",
    "start": "1959600",
    "end": "1965810"
  },
  {
    "text": "runtime I didn't eat and I checked briefly about two weeks ago and a generate new project and I could have briefed to look at it the scaffolding",
    "start": "1965810",
    "end": "1971750"
  },
  {
    "text": "looks very similar so it's almost I would say you can use either or what are we more comfortable with I like",
    "start": "1971750",
    "end": "1977810"
  },
  {
    "text": "personally cube build up because I'm more familiar with it for once so this I'm been using but I also like",
    "start": "1977810",
    "end": "1983090"
  },
  {
    "text": "the ability to control tools they provide to generate this irides and regenerate the schemas and everything",
    "start": "1983090",
    "end": "1989030"
  },
  {
    "text": "like that so it's really nice it's also have this nice comment based annotation where you can say hey Q builder generate",
    "start": "1989030",
    "end": "1994100"
  },
  {
    "text": "this when they have slide with custom columns you can actually don't have to do it yourself you can put these comments you build the comments and it",
    "start": "1994100",
    "end": "2000580"
  },
  {
    "text": "will happen automatically so there's a lot of nice is I'm sure probably a critique a has also similar things",
    "start": "2000580",
    "end": "2006100"
  },
  {
    "text": "I just don't know them so I can you can use either or you equals successful okay",
    "start": "2006100",
    "end": "2012880"
  },
  {
    "text": "I think we have time for one more question",
    "start": "2012880",
    "end": "2016140"
  },
  {
    "text": "so thanks for the talk my question is one problem I often ran into while",
    "start": "2021720",
    "end": "2028960"
  },
  {
    "text": "writing tests for a controller was waiting for reconciliation it's like",
    "start": "2028960",
    "end": "2038820"
  },
  {
    "text": "basically two approaches worked like waiting for some time till there are no more reconciliation requests yeah or",
    "start": "2038820",
    "end": "2046029"
  },
  {
    "text": "just turning off caching with which helped in some cases but the second",
    "start": "2046029",
    "end": "2055419"
  },
  {
    "text": "approach which maybe is not very correct and the first one makes this like",
    "start": "2055419",
    "end": "2060638"
  },
  {
    "text": "forever to run an advice system yes so as I",
    "start": "2060639",
    "end": "2066310"
  },
  {
    "text": "mentioned earlier that we used initially the default test harness when it straps",
    "start": "2066310",
    "end": "2071319"
  },
  {
    "text": "the control test and it started controller to start API and HCD and then basically submit object a and your",
    "start": "2071319",
    "end": "2077500"
  },
  {
    "text": "controller actually running so you kind of run the concurrent test you have a controller running and you have your",
    "start": "2077500",
    "end": "2082628"
  },
  {
    "text": "test running and you try to kind of synchronize and see okay what's no conciliation step right now it was a",
    "start": "2082629",
    "end": "2087730"
  },
  {
    "text": "little bit difficult to time response especially because if you mutate object state automatically get reviewed so it's",
    "start": "2087730",
    "end": "2092980"
  },
  {
    "text": "gonna hurt to a certain result so what we end up doing we completely stop doing that and instead we just use basic unit",
    "start": "2092980",
    "end": "2098859"
  },
  {
    "text": "tests for reconcile function where you can actually say call it once go through the function flow run and then basically",
    "start": "2098859",
    "end": "2105640"
  },
  {
    "text": "examine the output and you can repeat that with the different input parameters because remember the reconcile function",
    "start": "2105640",
    "end": "2112540"
  },
  {
    "text": "makes the decision based on the object state so you can actually then if you want to alter different paths you can",
    "start": "2112540",
    "end": "2118450"
  },
  {
    "text": "say okay now set this state in my object or set the mark object whatever using for your external resource so I would",
    "start": "2118450",
    "end": "2124390"
  },
  {
    "text": "recommend you to use that thank you",
    "start": "2124390",
    "end": "2128940"
  },
  {
    "text": "all right thank you very much Ilya [Applause]",
    "start": "2130020",
    "end": "2136399"
  }
]