[
  {
    "text": "hey people good morning or whatever the time is it and my name is dario and i'm here with",
    "start": "1599",
    "end": "8240"
  },
  {
    "text": "max hi max how do you do hello everyone yeah i'm fine thanks how are you well well a little bit",
    "start": "8240",
    "end": "16400"
  },
  {
    "text": "excited because it's my first time at cubecom as speaker and also as attendee and i'm really happy to be here with you",
    "start": "16400",
    "end": "23439"
  },
  {
    "text": "because we are going to we did with capsule and it's really as astonishing i'm really free to be here",
    "start": "23439",
    "end": "30960"
  },
  {
    "text": "and i'd like to thank all the people that is joining this session because we did a great job together as",
    "start": "30960",
    "end": "37280"
  },
  {
    "text": "developers and also as architect of the software that we built so um yeah uh i'd like to show you",
    "start": "37280",
    "end": "45680"
  },
  {
    "text": "how this presentation is made of so uh this is obviously the introduction and",
    "start": "45680",
    "end": "51039"
  },
  {
    "text": "we are going to have two session because this is a presentation between me and max and i'm going to introduce you",
    "start": "51039",
    "end": "57280"
  },
  {
    "text": "what is capsule because capsule is an open source project and it's able to provide a multi-tenancy",
    "start": "57280",
    "end": "64239"
  },
  {
    "text": "also it's the topic of this session and after that max is going to share",
    "start": "64239",
    "end": "69360"
  },
  {
    "text": "what they were able to achieve at wargaming.net with capsule and is going to share some",
    "start": "69360",
    "end": "75920"
  },
  {
    "text": "really nice insights regarding the abilities of capsule and the platform that they built so i don't",
    "start": "75920",
    "end": "83280"
  },
  {
    "text": "want to provide so much spoilers so i can just suggest you to",
    "start": "83280",
    "end": "88400"
  },
  {
    "text": "enjoy it and see you later for the last session bye-bye goodbye and i hope",
    "start": "88400",
    "end": "94960"
  },
  {
    "text": "you will be interested hi people my name is zero tranquitella",
    "start": "94960",
    "end": "100479"
  },
  {
    "text": "and i'm an open source software engineer at classics an italian startup based in italy with",
    "start": "100479",
    "end": "105680"
  },
  {
    "text": "the mission of bringing kubernetes everywhere in this section i'd like to introduce you to capsule",
    "start": "105680",
    "end": "111439"
  },
  {
    "text": "the multi-tenancy operator but first i think i should give you a brief introduction about the multi-tenancy",
    "start": "111439",
    "end": "117360"
  },
  {
    "text": "dilemma and the current state of multi-tenancy in kubernetes itself and the ecosystem multi-tenancy is",
    "start": "117360",
    "end": "124159"
  },
  {
    "text": "nothing new if you're already familiar with the kubernetes the basic resources you are using is namespace allowing you to group",
    "start": "124159",
    "end": "130879"
  },
  {
    "text": "application into an application logical group all the posts deployments services ingresses and so",
    "start": "130879",
    "end": "137200"
  },
  {
    "text": "forth of each application or maybe team in big corporations is collect in namespaces",
    "start": "137200",
    "end": "143840"
  },
  {
    "text": "it's pretty easy to understand this is common and best practice dividing components and applications in",
    "start": "143840",
    "end": "150160"
  },
  {
    "text": "several name spaces but doing so doesn't mean you're adopting multi-tenancy there are some aspects you have to",
    "start": "150160",
    "end": "156080"
  },
  {
    "text": "consider since it's like the sure dosing in the mid to thousands and i'm referring to the noisy neighbor",
    "start": "156080",
    "end": "163200"
  },
  {
    "text": "effects we all know kubernetes is great at crafting distributed systems and",
    "start": "163200",
    "end": "168319"
  },
  {
    "text": "provides out of the box some resources that help you to tackle the downside of dealing",
    "start": "168319",
    "end": "173599"
  },
  {
    "text": "with a multi-talent environment the resources i'm referring to are limit range",
    "start": "173599",
    "end": "178879"
  },
  {
    "text": "resource quota and the well-known and famous network policy i'm not going to do a one-on-one",
    "start": "178879",
    "end": "184720"
  },
  {
    "text": "introduction about this because documentation is there for this kind of stuff but i'm going to provide a brief",
    "start": "184720",
    "end": "190640"
  },
  {
    "text": "overview since with the combination of these resources you can achieve complex multi-tenant",
    "start": "190640",
    "end": "196840"
  },
  {
    "text": "strategies said so limit range is the resource you have to",
    "start": "196840",
    "end": "201920"
  },
  {
    "text": "use to set a minimum and or a maximum amount of resource requests also known as cpu",
    "start": "201920",
    "end": "208159"
  },
  {
    "text": "memory and storage these policies are useful to set the minimum amount a",
    "start": "208159",
    "end": "213840"
  },
  {
    "text": "part has to use really useful when dealing with unconstrained containers that can",
    "start": "213840",
    "end": "219120"
  },
  {
    "text": "lead to cpu throttling or out of memory of node as well for the upper limits since few things",
    "start": "219120",
    "end": "225200"
  },
  {
    "text": "are infinite and resources pretty sure are not except you are using a cloud provider and it's not your business anyway following",
    "start": "225200",
    "end": "233439"
  },
  {
    "text": "we got the resource quota this api allows you to specify some constrained policies",
    "start": "233439",
    "end": "239120"
  },
  {
    "text": "for a specific set of resources uh let's imagine that you have to limit the",
    "start": "239120",
    "end": "245360"
  },
  {
    "text": "amount of pvc requested by a namespace persistent volume claims um this is the perfect use case as well",
    "start": "245360",
    "end": "252799"
  },
  {
    "text": "as limiting the amount of pods to avoid the container sprawl and finally the well-known network",
    "start": "252799",
    "end": "259759"
  },
  {
    "text": "policy i guess we all know them because it's used as a sort of firewall for the applications",
    "start": "259759",
    "end": "265919"
  },
  {
    "text": "that we deploy in our clusters so sometimes we are biased to consider them as a sort of security",
    "start": "265919",
    "end": "271680"
  },
  {
    "text": "thing and this is absolutely true though however um network policy must be used to deny",
    "start": "271680",
    "end": "277440"
  },
  {
    "text": "communication between services that don't belong to the same tenant for obvious reason i'd say",
    "start": "277440",
    "end": "282800"
  },
  {
    "text": "security in first place okay great now we",
    "start": "282800",
    "end": "288160"
  },
  {
    "text": "all know all the tools to build up your tenant platform besides the downside that all these",
    "start": "288160",
    "end": "293199"
  },
  {
    "text": "resources are namespaced scope and it means that the enforcement of these policies is",
    "start": "293199",
    "end": "299520"
  },
  {
    "text": "applied just to the namespace where the resource is living and this doesn't apply well in a multi-tenant environment",
    "start": "299520",
    "end": "307280"
  },
  {
    "text": "but exactly how a tenant can be defined let's try to summarize how it can be interpreted properly in kubernetes",
    "start": "307280",
    "end": "314080"
  },
  {
    "text": "ecosystem and i think the most basic definition could be a collection of namespaces where each",
    "start": "314080",
    "end": "321360"
  },
  {
    "text": "namespace is collecting the resources requested for a specific component or application",
    "start": "321360",
    "end": "327120"
  },
  {
    "text": "owned by a team or a group of developers and in the end if you start thinking",
    "start": "327120",
    "end": "333280"
  },
  {
    "text": "about if you are giving developers access to your kubernetes clusters you are just",
    "start": "333280",
    "end": "338800"
  },
  {
    "text": "granting administrator capabilities to the namespace they have to manage and sometimes just in",
    "start": "338800",
    "end": "344560"
  },
  {
    "text": "read-only mode and working with multi-tenancy with just a team is pretty easy and",
    "start": "344560",
    "end": "350400"
  },
  {
    "text": "straightforward you prepare the environments creating the namespaces set the kubernetes resources we presented early",
    "start": "350400",
    "end": "357199"
  },
  {
    "text": "and i'm referring to the limit range and through policy resource quota and giving access to them but dealing",
    "start": "357199",
    "end": "363360"
  },
  {
    "text": "with this at scale could be a nightmare and the automation must kick in for several reasons",
    "start": "363360",
    "end": "369600"
  },
  {
    "text": "capsule is our non-opinionated solution to solve this suitation you got a custom resource",
    "start": "369600",
    "end": "375360"
  },
  {
    "text": "definition named tenant that assigns a namespace creation right to their owners",
    "start": "375360",
    "end": "380639"
  },
  {
    "text": "and of the story what you just need to do is specify all the business logic in the tenant",
    "start": "380639",
    "end": "386319"
  },
  {
    "text": "manifest and the tenant owners can create on their own the namespaces that will be treated as a sort of",
    "start": "386319",
    "end": "392639"
  },
  {
    "text": "single name space the tenant abstraction but before proceeding with capsule is",
    "start": "392639",
    "end": "398720"
  },
  {
    "text": "capable of i think it's better to explain how capsule was born and yeah i still recall the first call",
    "start": "398720",
    "end": "407039"
  },
  {
    "text": "uh i had with adriano the classic the classics founder and he asked me directly hey do you want",
    "start": "407039",
    "end": "413199"
  },
  {
    "text": "to deploy and develop a kubernetes operator for the multi-tenancy and my reply was even more direct why do",
    "start": "413199",
    "end": "420560"
  },
  {
    "text": "we need yet another project to deal with this if there is red dot openshift and ranger doing this stuff",
    "start": "420560",
    "end": "426960"
  },
  {
    "text": "because multi-tenancy in kubernetes is broken what it sounds were a bold statement yeah but in the end",
    "start": "426960",
    "end": "434080"
  },
  {
    "text": "that's true and it's the reason why we got several other projects that are trying to tackle this goal and just",
    "start": "434080",
    "end": "440800"
  },
  {
    "text": "being just thinking about the hierarchical name space controller by google or the virtual cluster initiative all",
    "start": "440800",
    "end": "447520"
  },
  {
    "text": "these projects are living in the multi-tenancy special interest group and i said earlier that kubernetes is",
    "start": "447520",
    "end": "453840"
  },
  {
    "text": "great at designing distributed systems since it allows to just use the requested resources and",
    "start": "453840",
    "end": "459520"
  },
  {
    "text": "components to build your infrastructure it doesn't mean it's out of the box you have to put in place on your own and",
    "start": "459520",
    "end": "467280"
  },
  {
    "text": "the same applies also for the multi-tenancy and that's the reason why we started this lovely adventure",
    "start": "467280",
    "end": "472479"
  },
  {
    "text": "together at that time classics was doing scouting for one of its customers to provide",
    "start": "472479",
    "end": "478879"
  },
  {
    "text": "a public container platform a sort of heroku but built on top of kubernetes",
    "start": "478879",
    "end": "484400"
  },
  {
    "text": "if you prefer fancy names and acronyms i think that naas is the right one namespace as a",
    "start": "484400",
    "end": "490879"
  },
  {
    "text": "service and juxtaport the prerequisite of the project was delivering a true",
    "start": "490879",
    "end": "496479"
  },
  {
    "text": "and native kubernetes experience to developers no need to add further apis binaries to",
    "start": "496479",
    "end": "502720"
  },
  {
    "text": "install yaml definitions and anything else that called puzzle turbines the goal was issue keep ctrl from your",
    "start": "502720",
    "end": "510400"
  },
  {
    "text": "terminal and there you go and we started the project with this in mind and after some time we realized that we",
    "start": "510400",
    "end": "517680"
  },
  {
    "text": "were building something really disrupting disrupting because i was working on it absolutely not but",
    "start": "517680",
    "end": "523760"
  },
  {
    "text": "being non-opinionated on the multi-tenancy strategy provided showed us that we were crafting",
    "start": "523760",
    "end": "530080"
  },
  {
    "text": "a framework allowing any or almost level of multi-tenancy obviously",
    "start": "530080",
    "end": "537040"
  },
  {
    "text": "starting from the public-facing scenario the namespace as a service one does shaping in a smarter way",
    "start": "537040",
    "end": "544080"
  },
  {
    "text": "specification but what changed our project and the project itself",
    "start": "544080",
    "end": "549200"
  },
  {
    "text": "was the community and i'm really honored to be on this stage with maxolo virtually uh",
    "start": "549200",
    "end": "554959"
  },
  {
    "text": "since together we went further from the initial plan and this was a demonstration that the community is the real engine that helps",
    "start": "554959",
    "end": "561600"
  },
  {
    "text": "you delivering software solving people's problem and that has been a crazy and emotionalized",
    "start": "561600",
    "end": "568320"
  },
  {
    "text": "with all the people showing interest and the filing bug or feature requests but let's try to step down from the",
    "start": "568320",
    "end": "574480"
  },
  {
    "text": "emotional talk and let's try to drill down the the capsule",
    "start": "574480",
    "end": "579760"
  },
  {
    "text": "capabilities i don't want to let this talk look like a safe speech so um okay what are",
    "start": "579760",
    "end": "586720"
  },
  {
    "text": "the capsule super capabilities i'm trying to summarize in small and short sentences to leave enough room",
    "start": "586720",
    "end": "592160"
  },
  {
    "text": "to max presentation that is absolutely stunning um okay you can limit the name spaces that can be",
    "start": "592160",
    "end": "598560"
  },
  {
    "text": "created by a tenant owner really useful for the pay-per-use scenario you can specify which ingress or search",
    "start": "598560",
    "end": "605440"
  },
  {
    "text": "classes a tenant can use as providing a tire ring for the banking source used by applications",
    "start": "605440",
    "end": "611360"
  },
  {
    "text": "or forcing to announce applications using a specific load balancer and since we are we are talking about",
    "start": "611360",
    "end": "618720"
  },
  {
    "text": "networking at ingress you can put in place a policy for the allowing resource names as using a specific domain for the",
    "start": "618720",
    "end": "625440"
  },
  {
    "text": "exposed applications or you could mitigate the cve 2020 8554",
    "start": "625440",
    "end": "631200"
  },
  {
    "text": "enforcing a specific set of ip addresses or ranges that can be used by the service",
    "start": "631200",
    "end": "637760"
  },
  {
    "text": "in the tenant and also from the security perspective the container registry used by pods",
    "start": "637760",
    "end": "644000"
  },
  {
    "text": "running in the tenant can be enforced as well as assigning additional road bindings to use both",
    "start": "644000",
    "end": "649519"
  },
  {
    "text": "security policies or maybe other crds and last but not least the automation for the most important",
    "start": "649519",
    "end": "655760"
  },
  {
    "text": "resources in a multi-tenant environment enforcement of limit range network policy and resource quota across",
    "start": "655760",
    "end": "663040"
  },
  {
    "text": "all the namespaces of the tenant and before proceeding to the final",
    "start": "663040",
    "end": "668079"
  },
  {
    "text": "consideration i'd like to talk a bit about the bring your own device capability",
    "start": "668079",
    "end": "673120"
  },
  {
    "text": "as with other resources uh capsule as an oriented wheel since it's using the",
    "start": "673120",
    "end": "678480"
  },
  {
    "text": "pod node selector admission controller available in kubernetes since the 1.5 release if i recall correctly",
    "start": "678480",
    "end": "686560"
  },
  {
    "text": "however when all these features kick in together uh you can achieve for real uh bring",
    "start": "686560",
    "end": "692160"
  },
  {
    "text": "your own device um scenario because what you just do need to do is to spin up some worker",
    "start": "692160",
    "end": "699760"
  },
  {
    "text": "notes provision with a specific label let them join the cluster and you can manage your reserved",
    "start": "699760",
    "end": "705600"
  },
  {
    "text": "partitions of the cluster and it's absolutely amazing since you are totally decreasing any side effect",
    "start": "705600",
    "end": "712079"
  },
  {
    "text": "of a multi-tenant cluster no noise enables your own resources it's like being on a managed kubernetes cluster",
    "start": "712079",
    "end": "719200"
  },
  {
    "text": "but owned by your organization anyway i know what some of you start",
    "start": "719200",
    "end": "724639"
  },
  {
    "text": "mumbling about i can already do that on my own i just need to write down the dynamic",
    "start": "724639",
    "end": "730560"
  },
  {
    "text": "admission controls and yeah that's true but there is something you have to consider",
    "start": "730560",
    "end": "735760"
  },
  {
    "text": "the declarative way also known as the ammo determinant yaml definition as you can",
    "start": "735760",
    "end": "741040"
  },
  {
    "text": "see uh is easy to understand and easy to grow as any any other",
    "start": "741040",
    "end": "746320"
  },
  {
    "text": "resource in kubernetes but more it allows to combine all these policies together that will require",
    "start": "746320",
    "end": "751920"
  },
  {
    "text": "otherwise a big effort on wiring all the web books together and building a way to group together the",
    "start": "751920",
    "end": "757279"
  },
  {
    "text": "namespaces in abstraction lieutenant one and keep a look to the node selector key",
    "start": "757279",
    "end": "763040"
  },
  {
    "text": "that's the keystone enabling the bring your own device scenario beside the provisioning process",
    "start": "763040",
    "end": "768160"
  },
  {
    "text": "though this is still required to be configured at no startup trying to recap all the features i'm",
    "start": "768160",
    "end": "774800"
  },
  {
    "text": "pretty confident to say that capsule can be considered as a sort of framework to build your own",
    "start": "774800",
    "end": "779920"
  },
  {
    "text": "multi-tenancy solution without disrupting the developer experience that will enjoy a fully compatible api server",
    "start": "779920",
    "end": "788079"
  },
  {
    "text": "managing their resources using cubectl and without dealing with any complex crds since there is just",
    "start": "788079",
    "end": "794720"
  },
  {
    "text": "detailed one and it's up to the cluster administrator to to deal with it and",
    "start": "794720",
    "end": "800320"
  },
  {
    "text": "said so yeah i think i can pass the world to max that is going to show us what they were able to achieve with",
    "start": "800320",
    "end": "805839"
  },
  {
    "text": "capsule at wargaming.net during the their journey uh on using kubernetes scale",
    "start": "805839",
    "end": "810959"
  },
  {
    "text": "to avoid the famous cluster sprawl so thank you so much and cheers",
    "start": "810959",
    "end": "816560"
  },
  {
    "text": "hello everyone as you may be know my name is max vidotov and i'm working as",
    "start": "816560",
    "end": "821680"
  },
  {
    "text": "an infrastructure engineer in a maintenance department of war gaming in my part of talk i would like to share",
    "start": "821680",
    "end": "827519"
  },
  {
    "text": "with you how we were able to redesign our internal kubernetes clusters with the help of the capsule",
    "start": "827519",
    "end": "832800"
  },
  {
    "text": "why we decided to adopt multi-tenancy and which benefits we got from this decision",
    "start": "832800",
    "end": "838320"
  },
  {
    "text": "but before we start i would like to tell a few words about wargaming for those who are maybe not a big fan of video",
    "start": "838320",
    "end": "844160"
  },
  {
    "text": "games so who we are we are a global online game dev and publisher with over 220 millions of",
    "start": "844160",
    "end": "850959"
  },
  {
    "text": "players who are enjoying our games on all major gaming platforms and i think everyone had heard or maybe even",
    "start": "850959",
    "end": "857360"
  },
  {
    "text": "played our flagship products like world of tanks or world of warships and in my department we are in charge",
    "start": "857360",
    "end": "864959"
  },
  {
    "text": "of supporting all the infrastructure which is used in order to run these games",
    "start": "864959",
    "end": "870560"
  },
  {
    "text": "so what do we had before adopting capsule i think this is the this was the most",
    "start": "870560",
    "end": "875920"
  },
  {
    "text": "classic on-premise setup that you can imagine so you can find it at any kubernetes guides",
    "start": "875920",
    "end": "881360"
  },
  {
    "text": "as we are operating in multiple regions we provisioned a single kubernetes cluster per region because it is much easier to manage and",
    "start": "881360",
    "end": "888560"
  },
  {
    "text": "we were able to provide additional in-cluster services and integrations with our internal system like monitoring",
    "start": "888560",
    "end": "894800"
  },
  {
    "text": "logging authentication and so on we used shared nodes a mix of hardware",
    "start": "894800",
    "end": "900800"
  },
  {
    "text": "and vms and we created a separate namespace per customer which our internal development teams in order to provide some type of",
    "start": "900800",
    "end": "907440"
  },
  {
    "text": "isolation we also used kalika global network policies for network installation",
    "start": "907440",
    "end": "913040"
  },
  {
    "text": "and at the beginning when we hadn't got a lot of customers this setup was quite good for us but",
    "start": "913040",
    "end": "920079"
  },
  {
    "text": "things changed when clusters start to grow and we got more customers on board so",
    "start": "920079",
    "end": "925279"
  },
  {
    "text": "what was wrong the first problem was that namespaces are too granular",
    "start": "925279",
    "end": "930480"
  },
  {
    "text": "most of our customers needed more than a single namespace they needed a namespace per project or namespace per application",
    "start": "930480",
    "end": "937199"
  },
  {
    "text": "so we had to manage namespace provisioning for them and we also managed access and permissions",
    "start": "937199",
    "end": "942720"
  },
  {
    "text": "node provisioning was also on us so we so we had to do some type of capacity planning and management",
    "start": "942720",
    "end": "948800"
  },
  {
    "text": "and another problem was billing so when you had shared nodes you need to implement complex building rules",
    "start": "948800",
    "end": "954240"
  },
  {
    "text": "and that's not easy at all really and also due to shared resources it was very easy to get a noisy neighbor effect that",
    "start": "954240",
    "end": "960720"
  },
  {
    "text": "darya already mentioned in his talk when customer workloads began to interfere with each other",
    "start": "960720",
    "end": "967120"
  },
  {
    "text": "so you will ask me an obvious questions if the shared module was not so good for us why not to use a cluster",
    "start": "967120",
    "end": "973440"
  },
  {
    "text": "per customer and that was one of our initial thoughts too",
    "start": "973440",
    "end": "979040"
  },
  {
    "text": "but in this scenario there were also some disadvantages for us the first one is that we have six",
    "start": "979040",
    "end": "985279"
  },
  {
    "text": "regions of present so in reality for each customer we need to provision not a single cluster but",
    "start": "985279",
    "end": "990480"
  },
  {
    "text": "six clusters so we multiply the number of customers by number of regions and we understood that",
    "start": "990480",
    "end": "997920"
  },
  {
    "text": "it would be too much really for us so the maintenance cost for this solution will be quite high for",
    "start": "997920",
    "end": "1003920"
  },
  {
    "text": "another problem was that we had to support different version of kubernetes why because you know like it's always in",
    "start": "1003920",
    "end": "1011040"
  },
  {
    "text": "a big companies there is a customer a who wants to have the newest",
    "start": "1011040",
    "end": "1016079"
  },
  {
    "text": "version and there is a customer b who wants to have the more stable version and that's a problem for us",
    "start": "1016079",
    "end": "1022480"
  },
  {
    "text": "because we had different tools some of them were our internal tools some were different open source",
    "start": "1022480",
    "end": "1027839"
  },
  {
    "text": "operators that we installed in order to provide additional in cluster services and sometimes we even",
    "start": "1027839",
    "end": "1033120"
  },
  {
    "text": "modified for them so they fit best for our environment so we had to build and maintain a",
    "start": "1033120",
    "end": "1039199"
  },
  {
    "text": "separate version for each two for each version of kubernetes and it",
    "start": "1039199",
    "end": "1044319"
  },
  {
    "text": "may seems like not a big deal but still it adds something to maintenance costs too",
    "start": "1044319",
    "end": "1050160"
  },
  {
    "text": "also we were a bit afraid that when everyone will be sitting in their separate clusters it will be hard to share some knowledge",
    "start": "1050160",
    "end": "1056400"
  },
  {
    "text": "of services or ideas so what we wanted to is that if one of our customers had adopted some",
    "start": "1056400",
    "end": "1063440"
  },
  {
    "text": "new technology or had brought or implemented some operator he should be able to provide",
    "start": "1063440",
    "end": "1070160"
  },
  {
    "text": "this as a service to all other customers so as a result this separate cluster per",
    "start": "1070160",
    "end": "1076480"
  },
  {
    "text": "customer approach seemed more like a kubernetes as a service and what we wanted to provide",
    "start": "1076480",
    "end": "1081919"
  },
  {
    "text": "for our customers was a managed kubernetes solution so we understood that having a single",
    "start": "1081919",
    "end": "1088400"
  },
  {
    "text": "cluster per region is the best model for us and what we needed was to broad some advanced",
    "start": "1088400",
    "end": "1093520"
  },
  {
    "text": "multi-tenancy capabilities to kubernetes so we wrote down some critical points that we wanted to have in our new",
    "start": "1093520",
    "end": "1100160"
  },
  {
    "text": "cluster design so the first one was that we wanted to have a bring your own device approach so",
    "start": "1100160",
    "end": "1106960"
  },
  {
    "text": "customer can bring his own hardware nodes or he can provision a vm in some of the cloud",
    "start": "1106960",
    "end": "1112080"
  },
  {
    "text": "provider and his workloads will run only on these dedicated nodes this also helped us to simplify blink as",
    "start": "1112080",
    "end": "1119120"
  },
  {
    "text": "there is direct mapping with nodes and customer we also wanted to have more self-service",
    "start": "1119120",
    "end": "1124480"
  },
  {
    "text": "for customers so they can provision their own namespace if they manage access they and permissions and them",
    "start": "1124480",
    "end": "1130720"
  },
  {
    "text": "so if it's possible the best option for us would be that customers think that they are living in",
    "start": "1130720",
    "end": "1136480"
  },
  {
    "text": "their own private cluster while in reality they are located in a big shared kubernetes cluster",
    "start": "1136480",
    "end": "1142400"
  },
  {
    "text": "and also important was to keep vanilla kubernetes experience so when our users are reading kubernetes",
    "start": "1142400",
    "end": "1148799"
  },
  {
    "text": "dogs or they are reading some articles in the internet they don't need to think",
    "start": "1148799",
    "end": "1153840"
  },
  {
    "text": "if the thing they are reading reading about will work on our internal kubernetes",
    "start": "1153840",
    "end": "1159200"
  },
  {
    "text": "cluster and as a good engineer i've started",
    "start": "1159200",
    "end": "1164320"
  },
  {
    "text": "googling and reading about current situation with multi-tenancy and kubernetes and as dario already mentioned in his",
    "start": "1164320",
    "end": "1171600"
  },
  {
    "text": "talk there are problems with multi-tenancy and i will definitely agree with him on this",
    "start": "1171600",
    "end": "1176960"
  },
  {
    "text": "but then i found capsule and it was really a perfect fit for our",
    "start": "1176960",
    "end": "1182559"
  },
  {
    "text": "demands so we became one of the early capsule adopters and soon it became a potential component of our",
    "start": "1182559",
    "end": "1189600"
  },
  {
    "text": "internal kubernetes clusters and what i really love about the capsule",
    "start": "1189600",
    "end": "1194880"
  },
  {
    "text": "not saying about some technical details a technical part it is its community and maintainers so",
    "start": "1194880",
    "end": "1201600"
  },
  {
    "text": "when you are adopting some new open source technology you always found out some use cases in",
    "start": "1201600",
    "end": "1207280"
  },
  {
    "text": "your environment that are not already covered by it so",
    "start": "1207280",
    "end": "1212400"
  },
  {
    "text": "you need to add some functions or maybe you even don't understand how better to use",
    "start": "1212400",
    "end": "1217520"
  },
  {
    "text": "this new product and dara and other maintenance were always so helpful",
    "start": "1217520",
    "end": "1222960"
  },
  {
    "text": "and they helped us not only with the adopting git but they also helped us to",
    "start": "1222960",
    "end": "1228080"
  },
  {
    "text": "contribute different features and i'm really very proud that now i'm also one of the capsule maintainers too",
    "start": "1228080",
    "end": "1236080"
  },
  {
    "text": "so with the help of capsule we were able to formalize two core concepts that we are now using in",
    "start": "1236080",
    "end": "1242159"
  },
  {
    "text": "our internal kubernetes clusters first one is tenant it's our customer so",
    "start": "1242159",
    "end": "1247360"
  },
  {
    "text": "it has some name a group of owners who had an admin privileges in the tenant",
    "start": "1247360",
    "end": "1252400"
  },
  {
    "text": "and the cost center which is a label that we applied to tenants node as attack and then later we",
    "start": "1252400",
    "end": "1258400"
  },
  {
    "text": "use it for billing so we can directly send bills for a for our customers",
    "start": "1258400",
    "end": "1264880"
  },
  {
    "text": "another one is a nod group it is a set of nodes with the common flavor that are created in one of the cloud providers",
    "start": "1264880",
    "end": "1271039"
  },
  {
    "text": "and they're always bound to for some tenant so you can think about it like a cloud agnostic obstruction of aws",
    "start": "1271039",
    "end": "1278400"
  },
  {
    "text": "after scaling groups or a google cloud after scaling non-groups a node group also had a name which we",
    "start": "1278400",
    "end": "1285039"
  },
  {
    "text": "apply as a label to all nodes so our customers can use it later in label selectors",
    "start": "1285039",
    "end": "1290480"
  },
  {
    "text": "it is created in some of the cloud providers and all nodes in the node group had the same common flavor",
    "start": "1290480",
    "end": "1296080"
  },
  {
    "text": "for node group we also introduced a concept called roll it's some type of a predefined template",
    "start": "1296080",
    "end": "1302080"
  },
  {
    "text": "so for example for ingress role we install and configure an ingress controller on each of the",
    "start": "1302080",
    "end": "1307120"
  },
  {
    "text": "nodes of the node group and the last one is mean not in max nodes",
    "start": "1307120",
    "end": "1312320"
  },
  {
    "text": "these are used in order to support auto scaling and we have a set of core components",
    "start": "1312320",
    "end": "1318320"
  },
  {
    "text": "that we are using to in order to implement this concept first one is called provisioner it's our",
    "start": "1318320",
    "end": "1324000"
  },
  {
    "text": "internal component which is in charge of provisioning everything so it subscribes",
    "start": "1324000",
    "end": "1329679"
  },
  {
    "text": "using web sockets to our internal configuration management databases database where information about tenants",
    "start": "1329679",
    "end": "1335919"
  },
  {
    "text": "and non-groups is stored and then it's managed 10 on singles and storage classes provisioning",
    "start": "1335919",
    "end": "1341200"
  },
  {
    "text": "as well as knowledge group provisioning in different cloud providers so this is the core company that",
    "start": "1341200",
    "end": "1346960"
  },
  {
    "text": "communicates with all cloud providers next one is capsule and the first thing",
    "start": "1346960",
    "end": "1353760"
  },
  {
    "text": "that capsule helps us is with implementing bring your own device approach so when a node is registered in",
    "start": "1353760",
    "end": "1360720"
  },
  {
    "text": "kubernetes we add a label with the name of the tenant on it and then we use the capsule not selector",
    "start": "1360720",
    "end": "1367520"
  },
  {
    "text": "to ensure that tenants workloads will run only on dedicated tenant node groups",
    "start": "1367520",
    "end": "1372720"
  },
  {
    "text": "we were also able to get rid of a shared ingresses when a customer creates a node group",
    "start": "1372720",
    "end": "1378000"
  },
  {
    "text": "with ingress role provisioning creates a dedicated ingress class for it and then capsule forces the application",
    "start": "1378000",
    "end": "1384240"
  },
  {
    "text": "in the tenants to be published only by the assigned ingress controllers another feature that we get was",
    "start": "1384240",
    "end": "1392400"
  },
  {
    "text": "additional serve service abilities so our customers are always mapped to a dedicated ldap groups",
    "start": "1392400",
    "end": "1399039"
  },
  {
    "text": "and when a customer creates a tenant we assign his group as a tenant owner so they can manage everything inside",
    "start": "1399039",
    "end": "1405200"
  },
  {
    "text": "their tenant without any need without any help of the cluster administrators and the last one",
    "start": "1405200",
    "end": "1412799"
  },
  {
    "text": "is isolation so capsule had an ability to assign specific labels or annotations",
    "start": "1412799",
    "end": "1419440"
  },
  {
    "text": "on tenant namespaces and tenant services so namespace labels are used in order to",
    "start": "1419440",
    "end": "1426159"
  },
  {
    "text": "achieve network resolution with kaliko global network policies and our tenants are always isolated from",
    "start": "1426159",
    "end": "1432000"
  },
  {
    "text": "each other and with the help of labels on services we are able to make notepods",
    "start": "1432000",
    "end": "1437120"
  },
  {
    "text": "to be opened only on the tenant nodes and i will tell you about how we will be able to do this on the",
    "start": "1437120",
    "end": "1443200"
  },
  {
    "text": "next so a few words about notepad and multi-tenancy",
    "start": "1443200",
    "end": "1449039"
  },
  {
    "text": "we are using coupeproxy in iptables mode and by default it watches services and creates iptables rules on",
    "start": "1449039",
    "end": "1455520"
  },
  {
    "text": "all cluster nodes and that is okay for a cluster ip services",
    "start": "1455520",
    "end": "1461039"
  },
  {
    "text": "but how to deal with the node boards in a multi-tenant environment so we forked qproxy and added additional",
    "start": "1461039",
    "end": "1467679"
  },
  {
    "text": "configuration flag with the name of the tenant on whose node coupe proxy is running and then we added additional labels",
    "start": "1467679",
    "end": "1474159"
  },
  {
    "text": "selector for the watch where this configuration flag is passed so avako proxy watches only for services",
    "start": "1474159",
    "end": "1480720"
  },
  {
    "text": "located in the same tenant as coup proxy is and now not boards are opened only on",
    "start": "1480720",
    "end": "1485919"
  },
  {
    "text": "the tenant nodes capsule proxy is another member of",
    "start": "1485919",
    "end": "1491120"
  },
  {
    "text": "capsule ecosystem it is a simple reverse proxy that intercepts specific requests to the ip",
    "start": "1491120",
    "end": "1496559"
  },
  {
    "text": "servers so for now notes and namespaces and points are already in open source",
    "start": "1496559",
    "end": "1502400"
  },
  {
    "text": "version of capsule proxy and the last two ingress classes and storage classes are in our private fork but we are going",
    "start": "1502400",
    "end": "1509919"
  },
  {
    "text": "to contribute it soon so capsule proxy modifies user's request so they only see resources available in",
    "start": "1509919",
    "end": "1516720"
  },
  {
    "text": "their tenant and it provides users an experience that they are working in their own private cluster",
    "start": "1516720",
    "end": "1523600"
  },
  {
    "text": "and the last company we have is a tenant after scalar it is a forked version of cluster after",
    "start": "1523600",
    "end": "1529039"
  },
  {
    "text": "scalar which watches for unschedulable ports only in the tenant namespaces",
    "start": "1529039",
    "end": "1534080"
  },
  {
    "text": "it has also we also had an implementation a custom implementation of cloud",
    "start": "1534080",
    "end": "1539360"
  },
  {
    "text": "provider interface for it so instead of directly interacting with specific cloud providers",
    "start": "1539360",
    "end": "1544880"
  },
  {
    "text": "it talks to our provisioner and that is the way that we are able to support nodes from",
    "start": "1544880",
    "end": "1550720"
  },
  {
    "text": "different cloud providers in a single tenant",
    "start": "1550720",
    "end": "1555039"
  },
  {
    "text": "if we take a look from a user perspective they are working with us the same way that they will work with any other cloud provider",
    "start": "1555840",
    "end": "1561919"
  },
  {
    "text": "so we created a dedicated admin portal for them where they can create and manage their tenants and known groups",
    "start": "1561919",
    "end": "1568240"
  },
  {
    "text": "so instead of creating a bare cluster in one of the major cloud providers they can create a tenant and non-groups",
    "start": "1568240",
    "end": "1574799"
  },
  {
    "text": "in our internal cluster where they had a lot of additional services and integrations with our",
    "start": "1574799",
    "end": "1579919"
  },
  {
    "text": "internal systems out of the box and of course they got a premium support from our engineers",
    "start": "1579919",
    "end": "1585120"
  },
  {
    "text": "who are close to them and who know their pain and who know how they work so of course it's very hard to compete",
    "start": "1585120",
    "end": "1592080"
  },
  {
    "text": "with big cloud guys but with the help of capsule we can be a cloud provider of their choice",
    "start": "1592080",
    "end": "1597279"
  },
  {
    "text": "due to additional value that they will get from working with us",
    "start": "1597279",
    "end": "1602000"
  },
  {
    "text": "that's all that i wanted to share thank you for your time and giving grog back to darya okay",
    "start": "1603039",
    "end": "1610080"
  },
  {
    "text": "welcome back people and yeah it has been really enjoyable i really enjoyed the",
    "start": "1610080",
    "end": "1615760"
  },
  {
    "text": "presentation by max because what they achieved that wargaming is absolutely stunning i'm really happy",
    "start": "1615760",
    "end": "1622960"
  },
  {
    "text": "that uh max helped us also shaping the capsule capabilities and features",
    "start": "1622960",
    "end": "1628320"
  },
  {
    "text": "and what do you think max uh did we do a great job i think yes and thank you",
    "start": "1628320",
    "end": "1635440"
  },
  {
    "text": "dario for making capsules available for the world because mostly it is your big achievement and i was just a",
    "start": "1635440",
    "end": "1643360"
  },
  {
    "text": "guest who joined in a time yeah yeah probably i had also",
    "start": "1643360",
    "end": "1648640"
  },
  {
    "text": "to share our first um meetings because i recall when you opened the first prs",
    "start": "1648640",
    "end": "1655200"
  },
  {
    "text": "regarding feature requests or also little optics i recall uh the boss support one and it",
    "start": "1655200",
    "end": "1661200"
  },
  {
    "text": "was the broken binary search into the capsule user groups do you recall that",
    "start": "1661200",
    "end": "1667840"
  },
  {
    "text": "yeah yeah yeah that was awkward but anyway i'm really happy because we are shaping",
    "start": "1667840",
    "end": "1674240"
  },
  {
    "text": "a great product and as i said also in my presentation of capsule is able to be a framework to",
    "start": "1674240",
    "end": "1679679"
  },
  {
    "text": "be your own multi-tenancy environment on top of kubernetes so it's highly",
    "start": "1679679",
    "end": "1685200"
  },
  {
    "text": "non-opinionated you can do whatever you want and obviously we are planning further improvements um regarding also",
    "start": "1685200",
    "end": "1692159"
  },
  {
    "text": "you can see some facts max because you shared also the capsule proxy and the capsule proxy is playing a big",
    "start": "1692159",
    "end": "1698960"
  },
  {
    "text": "role in 2d multi tenancy because in the end we are using the capsule proxy just to provide the least",
    "start": "1698960",
    "end": "1704799"
  },
  {
    "text": "of the namespaces owned by the tenant but we got also another project and that",
    "start": "1704799",
    "end": "1711200"
  },
  {
    "text": "we at the time to share and it's the lens extension so lens it's an ide",
    "start": "1711200",
    "end": "1717120"
  },
  {
    "text": "developed by mirantis and it's really useful because uh with this ide you can you can see",
    "start": "1717120",
    "end": "1724320"
  },
  {
    "text": "all the stuff that is running in your kubernetes cluster and there is also the ability to add some",
    "start": "1724320",
    "end": "1730559"
  },
  {
    "text": "extensions and we at classics we developed that with our partner nikolai and adriano",
    "start": "1730559",
    "end": "1737360"
  },
  {
    "text": "and it's quite interesting and i'd say that it's really useful well it's not quite",
    "start": "1737360",
    "end": "1743039"
  },
  {
    "text": "but it's absolutely uh useful and take a look to that and i would like also to um take this chance",
    "start": "1743039",
    "end": "1751200"
  },
  {
    "text": "to do um to ask for people if you like capsule if you are also",
    "start": "1751200",
    "end": "1758000"
  },
  {
    "text": "considering the multi-tenancy um topic really interesting uh please drop",
    "start": "1758000",
    "end": "1764480"
  },
  {
    "text": "us a call on twitter on linkedin or github because we are looking for contributors",
    "start": "1764480",
    "end": "1770320"
  },
  {
    "text": "and also if you have feature requests or you are facing some bugs don't hesitate to open",
    "start": "1770320",
    "end": "1776720"
  },
  {
    "text": "the issues because as i said um we are really happy to get feedback from people",
    "start": "1776720",
    "end": "1782080"
  },
  {
    "text": "so don't be shy anything else to add max or if you just need some help about how to",
    "start": "1782080",
    "end": "1788080"
  },
  {
    "text": "build multi-tenancy watch options you have you can also join us on the github and we will be glad to",
    "start": "1788080",
    "end": "1793520"
  },
  {
    "text": "help anyone yeah yeah absolutely so don't be shy uh we are looking for you",
    "start": "1793520",
    "end": "1799760"
  },
  {
    "text": "and thanks for all the time attending attending this call and it has been amazing and thank you so",
    "start": "1799760",
    "end": "1805440"
  },
  {
    "text": "much thank you goodbye",
    "start": "1805440",
    "end": "1809840"
  }
]