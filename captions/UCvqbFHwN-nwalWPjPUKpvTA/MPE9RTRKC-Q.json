[
  {
    "text": "hello everyone and welcome to this tutorial manage apps and cloud resources in",
    "start": "640",
    "end": "6240"
  },
  {
    "text": "unified approach i'm andy she from alibaba cloud",
    "start": "6240",
    "end": "11679"
  },
  {
    "text": "alongside with me virtually is jared from upbound and project crossplay",
    "start": "11679",
    "end": "18400"
  },
  {
    "text": "my colleague jimbo was originally the co-host but he cannot make it today",
    "start": "18400",
    "end": "24960"
  },
  {
    "text": "so i am his double and that's why i'm showing my face here so you don't get confused but later we're",
    "start": "24960",
    "end": "32398"
  },
  {
    "text": "gonna switch to our screen recording since there are a lot of exercises to do",
    "start": "32399",
    "end": "39040"
  },
  {
    "text": "this is roughly the schedule for today uh we'll go through the prerequisites first",
    "start": "39040",
    "end": "44239"
  },
  {
    "text": "and then i'm going to talk a little bit about kubila and then we're going to go to lab one",
    "start": "44239",
    "end": "50480"
  },
  {
    "text": "which is ship the first cloud native application and then we're going to talk a little",
    "start": "50480",
    "end": "55680"
  },
  {
    "text": "bit more on kavita and then go to the next exercise",
    "start": "55680",
    "end": "61120"
  },
  {
    "text": "extending curvila and then jared is going to talk more about cross playing and",
    "start": "61120",
    "end": "69040"
  },
  {
    "text": "then we're going to do the third exercise which utilizes crossplane and kervila together",
    "start": "69040",
    "end": "76240"
  },
  {
    "text": "and that's pretty much what we're going to cover today",
    "start": "76240",
    "end": "81439"
  },
  {
    "text": "let's talk about the prerequisites there's an instruction hosted on a github page i",
    "start": "81439",
    "end": "87520"
  },
  {
    "text": "would suggest you go there and check it out especially there are a couple scripts that's going to be used so i would",
    "start": "87520",
    "end": "94640"
  },
  {
    "text": "suggest you clone the repo as well let's take a look at that github page",
    "start": "94640",
    "end": "102640"
  },
  {
    "text": "so what are we going to need we need a clean cluster a kubernetes cluster a",
    "start": "102640",
    "end": "108720"
  },
  {
    "text": "mini cube and kind of fine but the cluster has to be newer than 1.16 and",
    "start": "108720",
    "end": "114079"
  },
  {
    "text": "please verify your cluster installation on the third or last exercise we're",
    "start": "114079",
    "end": "120399"
  },
  {
    "text": "going to be using cosplaying to provision a public cloud database so probably you're going to need an",
    "start": "120399",
    "end": "126960"
  },
  {
    "text": "access key and secret to do so but if you don't have one we can still",
    "start": "126960",
    "end": "132239"
  },
  {
    "text": "go through the first two labs without using public cloud resources and also on the last",
    "start": "132239",
    "end": "140160"
  },
  {
    "text": "lab we're going to be installing cosplay next let's install villa or cube visa",
    "start": "140160",
    "end": "147680"
  },
  {
    "text": "release from this release page the current release is 008 i will suggest you",
    "start": "147680",
    "end": "155519"
  },
  {
    "text": "uh use this release as it is uh proven it's being tested so after you download",
    "start": "155519",
    "end": "163680"
  },
  {
    "text": "one of these uh distributions uh it's gonna be under the um",
    "start": "163680",
    "end": "170959"
  },
  {
    "text": "folder that's matching the art of your computer uh so let's take a look",
    "start": "170959",
    "end": "178480"
  },
  {
    "text": "there's a binary now let's move this binary to user local bing",
    "start": "178480",
    "end": "183599"
  },
  {
    "text": "and after that we'll be able to use the command so now we have",
    "start": "183599",
    "end": "192159"
  },
  {
    "text": "installed the binary on your local machine what we need to do now is to install vita onto your kubernetes",
    "start": "192159",
    "end": "199519"
  },
  {
    "text": "cluster so let's do vita install",
    "start": "199519",
    "end": "204800"
  },
  {
    "text": "and what that will do is going to install a vita chord chart and a couple other crds",
    "start": "204879",
    "end": "213840"
  },
  {
    "text": "and we are done for the prerequisites so let me first give you some background",
    "start": "214159",
    "end": "220560"
  },
  {
    "text": "information about project q villa and who are we we are the platform builders at alibaba",
    "start": "220560",
    "end": "227840"
  },
  {
    "text": "cloud we often call ourselves yamo engineers because that's mostly what we do but",
    "start": "227840",
    "end": "235680"
  },
  {
    "text": "jokes aside we do work on very interesting technologies and we are dealing some of these very",
    "start": "235680",
    "end": "243280"
  },
  {
    "text": "unique challenges and one of them is that alibaba has probably the world's largest",
    "start": "243280",
    "end": "249920"
  },
  {
    "text": "kubernetes cluster more than ten thousand nodes and also we are dealing with uh",
    "start": "249920",
    "end": "256160"
  },
  {
    "text": "different customers both internally and externally so we get to experience a lot of the challenges that",
    "start": "256160",
    "end": "263199"
  },
  {
    "text": "i think that's ahead of the community as to why we build these application",
    "start": "263199",
    "end": "269600"
  },
  {
    "text": "platforms i think the answer is that kubernetes is not designed to be used directly",
    "start": "269600",
    "end": "275680"
  },
  {
    "text": "especially the yemo part right by users and just like we wouldn't expect users",
    "start": "275680",
    "end": "282880"
  },
  {
    "text": "to directly interact with linux the kernel or the projects",
    "start": "282880",
    "end": "288880"
  },
  {
    "text": "we need to build a platform or tools on top of kubernetes and especially for the cloud",
    "start": "288880",
    "end": "296320"
  },
  {
    "text": "native applications there are so many operational tasks that's relying",
    "start": "296320",
    "end": "301520"
  },
  {
    "text": "on the kubernetes or underlying platform it is very important to provide that app",
    "start": "301520",
    "end": "307600"
  },
  {
    "text": "centric view or app centric abstraction so that developers don't feel like overwhelmed",
    "start": "307600",
    "end": "313840"
  },
  {
    "text": "and they don't have to keep track of all those resources that's provisioned and they don't have",
    "start": "313840",
    "end": "319680"
  },
  {
    "text": "to deal with all those fields in the api that they have no clues about so our focus a lot of them is",
    "start": "319680",
    "end": "327120"
  },
  {
    "text": "diverted into creating abcentric apis abstractions and user interfaces",
    "start": "327120",
    "end": "334080"
  },
  {
    "text": "if we look at these three different products will notice that they have a lot in common",
    "start": "334080",
    "end": "341440"
  },
  {
    "text": "they have canary deployment other scaling ingress etc but why is it that they have to redo all",
    "start": "341440",
    "end": "348639"
  },
  {
    "text": "those features themselves well we believe that's because people tend to map their apis kubernetes",
    "start": "348639",
    "end": "356319"
  },
  {
    "text": "apis directly to the user interfaces and in this process of creating very",
    "start": "356319",
    "end": "363680"
  },
  {
    "text": "opinionated template or schema they eliminate the possibility",
    "start": "363680",
    "end": "370160"
  },
  {
    "text": "of them being reused because people will notice oh this feature comes from that pipeline",
    "start": "370160",
    "end": "377039"
  },
  {
    "text": "and we don't need this user experience right so everyone is reinventing the wheels and that's",
    "start": "377039",
    "end": "383360"
  },
  {
    "text": "what we want to avoid because that's really creating uh fragmentation it's",
    "start": "383360",
    "end": "389600"
  },
  {
    "text": "causing silos and really stretching the engineering capabilities very soon",
    "start": "389600",
    "end": "396319"
  },
  {
    "text": "so what we are proposing is adding layers in between just like in",
    "start": "396319",
    "end": "402160"
  },
  {
    "text": "application work we have data modeling we add abstractions we create building",
    "start": "402160",
    "end": "408160"
  },
  {
    "text": "blocks and people can build their user experience",
    "start": "408160",
    "end": "413280"
  },
  {
    "text": "on top of those building blocks by reusing those building blocks",
    "start": "413280",
    "end": "418319"
  },
  {
    "text": "just like when you're building houses you buy lumber you buy bricks and they're all coming at this similar",
    "start": "418319",
    "end": "425039"
  },
  {
    "text": "sizes but the houses eventually look different because you create your own unique user",
    "start": "425039",
    "end": "432080"
  },
  {
    "text": "experience on top of it so that's where the the idea of cubita",
    "start": "432080",
    "end": "437520"
  },
  {
    "text": "came from um so right now cube villa is already uh used in alibaba we have this",
    "start": "437520",
    "end": "445680"
  },
  {
    "text": "unified application platform engine that's utilizing design and also we are open sourcing it",
    "start": "445680",
    "end": "453199"
  },
  {
    "text": "hoping that it's going to help the community to solve this problem of silos",
    "start": "453199",
    "end": "459840"
  },
  {
    "text": "so i guess we all agree a lot of us agree on the same problem",
    "start": "459840",
    "end": "465280"
  },
  {
    "text": "because from day zero we have contributors from several different organizations they all",
    "start": "465280",
    "end": "472080"
  },
  {
    "text": "come to help us to bootstrap our basic features another point i want to make is that uh",
    "start": "472080",
    "end": "479120"
  },
  {
    "text": "currently kavita is still under oam community and and that's because kubila really",
    "start": "479120",
    "end": "486240"
  },
  {
    "text": "follows the oem spec and it's built on top of oem",
    "start": "486240",
    "end": "492000"
  },
  {
    "text": "runtime but eventually we want to be an independent product facing developers so",
    "start": "492000",
    "end": "499520"
  },
  {
    "text": "we intend to donate this project to a neutral foundation",
    "start": "499520",
    "end": "504560"
  },
  {
    "text": "and we will do it very soon so if you have concerns that this project is owned by one of those",
    "start": "504560",
    "end": "511120"
  },
  {
    "text": "companies uh don't worry we will be into a foundation",
    "start": "511120",
    "end": "516880"
  },
  {
    "text": "the goal of cube villa qvilla of course is designed to serve developers we want",
    "start": "517360",
    "end": "523839"
  },
  {
    "text": "to provide the developers with an app centric user experience so the developers can",
    "start": "523839",
    "end": "530080"
  },
  {
    "text": "concentrate on their own code and will take care of the rest",
    "start": "530080",
    "end": "535839"
  },
  {
    "text": "on top of that we also want to help our fellow platform builders because as platform",
    "start": "535839",
    "end": "541839"
  },
  {
    "text": "builders especially in the kubernetes community this community being so vibrant and",
    "start": "541839",
    "end": "548240"
  },
  {
    "text": "active we on a daily basis are seeing new features coming out",
    "start": "548240",
    "end": "553360"
  },
  {
    "text": "so we are struggling with the idea that do we need to catch up if so how do we do that and",
    "start": "553360",
    "end": "560000"
  },
  {
    "text": "it's day in day out we are struggling with uh all those pressure so we're saying",
    "start": "560000",
    "end": "567360"
  },
  {
    "text": "why don't we reuse these capabilities why do we have to serve customers in the day and then",
    "start": "567360",
    "end": "573920"
  },
  {
    "text": "writing new code during the night why can't we have a better life and that's also the goal of cubevilla",
    "start": "573920",
    "end": "582880"
  },
  {
    "text": "there are three design principles of cubevilla the first one and the most important one",
    "start": "582880",
    "end": "589040"
  },
  {
    "text": "is being application-centric well you might ask there are so many other",
    "start": "589040",
    "end": "595200"
  },
  {
    "text": "projects claiming to be application-centric as well so how can kavita be better",
    "start": "595200",
    "end": "601839"
  },
  {
    "text": "well that's because kuvita is built upon open application model or oem",
    "start": "601839",
    "end": "607920"
  },
  {
    "text": "this allows us to decouple the kubernetes apis from its ui",
    "start": "607920",
    "end": "613519"
  },
  {
    "text": "now for those who have viewed pipelines or platforms we always worry about",
    "start": "613519",
    "end": "621680"
  },
  {
    "text": "when building this opinionated pipeline we're going to lose some use cases for example there are 10",
    "start": "621680",
    "end": "628480"
  },
  {
    "text": "fields in one kubernetes natives api if you expose all of them that's going to",
    "start": "628480",
    "end": "634640"
  },
  {
    "text": "be very hard to use but let's say we would a few seven of",
    "start": "634640",
    "end": "639760"
  },
  {
    "text": "them and these three now what happens when the user asks for the for the fourth one",
    "start": "639760",
    "end": "645760"
  },
  {
    "text": "or fifth one we're going to lose those use cases vita on the other hand is built upon oam",
    "start": "645760",
    "end": "654399"
  },
  {
    "text": "and we don't have to use even one field from that api so it totally",
    "start": "654399",
    "end": "660720"
  },
  {
    "text": "decouples from the api itself so that's why we can be application",
    "start": "660720",
    "end": "665760"
  },
  {
    "text": "centric now the next principle is we want kvla to be capability oriented",
    "start": "665760",
    "end": "672560"
  },
  {
    "text": "what that means is we would like to have something like a repository or market",
    "start": "672560",
    "end": "678959"
  },
  {
    "text": "for all those building blocks that we talked about and then we can simply build our uis or",
    "start": "678959",
    "end": "686480"
  },
  {
    "text": "user experiences based on those building blocks and",
    "start": "686480",
    "end": "692160"
  },
  {
    "text": "those building blocks can be independent and they can be reused by other projects",
    "start": "692160",
    "end": "697760"
  },
  {
    "text": "as well so currently we have a couple i think three uh trades that's installed",
    "start": "697760",
    "end": "705360"
  },
  {
    "text": "when you install your villa and we're gonna see them uh in a minute uh for the royal trade we",
    "start": "705360",
    "end": "711760"
  },
  {
    "text": "use flagger for auto scaling we use kita for those who are familiar with these",
    "start": "711760",
    "end": "718720"
  },
  {
    "text": "trades with these products i will challenge you when i'm using that",
    "start": "718720",
    "end": "724160"
  },
  {
    "text": "we will see in the lab you will not notice at all and",
    "start": "724160",
    "end": "731279"
  },
  {
    "text": "the last principle we have is to be highly extensible and what that means is really on the",
    "start": "731279",
    "end": "738079"
  },
  {
    "text": "user interface side we have this technology called temp app",
    "start": "738079",
    "end": "744160"
  },
  {
    "text": "file and it's built on top of queue template so this technology allows us",
    "start": "744160",
    "end": "751519"
  },
  {
    "text": "to modify or to customize the user interface without rebuilding or recompiling or",
    "start": "751519",
    "end": "758720"
  },
  {
    "text": "reinstalling vita and that's one very important feature that we believe to have so in",
    "start": "758720",
    "end": "766560"
  },
  {
    "text": "today's lab we're gonna see all three of these principles",
    "start": "766560",
    "end": "771920"
  },
  {
    "text": "the first one is our lab one we're gonna taste the command line of qvila",
    "start": "771920",
    "end": "778959"
  },
  {
    "text": "and see how that gives us the application centric user experience the second is",
    "start": "778959",
    "end": "787519"
  },
  {
    "text": "to add a new feature or new capacity to our existing vita system and we're",
    "start": "787519",
    "end": "793920"
  },
  {
    "text": "going to use it and the third one is we're going to go through the details of app file",
    "start": "793920",
    "end": "799680"
  },
  {
    "text": "and use app file to install a fairly complicated cloud native application exercise 1",
    "start": "799680",
    "end": "808000"
  },
  {
    "text": "ships the first cloud native application with cube villa in this exercise we mainly to get used",
    "start": "808000",
    "end": "815360"
  },
  {
    "text": "to the veda commands and see how application is treated as a first-class citizen",
    "start": "815360",
    "end": "821920"
  },
  {
    "text": "now let's go to the instructions first we'll do a vita system update",
    "start": "821920",
    "end": "830800"
  },
  {
    "text": "it is very important to keep this habit since villa is a client and",
    "start": "833120",
    "end": "839600"
  },
  {
    "text": "cluster is a server we need to sync with the server from time to time especially after any changes you're",
    "start": "839600",
    "end": "846560"
  },
  {
    "text": "making on the cluster it has to sync to the client",
    "start": "846560",
    "end": "851680"
  },
  {
    "text": "next this command via workloads will show all the workloads that's",
    "start": "851680",
    "end": "858399"
  },
  {
    "text": "available for us to use so currently we have the three built-in workflows coming with the beta core",
    "start": "858399",
    "end": "865600"
  },
  {
    "text": "the templates and the definitions are all here we don't have to do anything to use them and they are very straightforward to",
    "start": "865600",
    "end": "871680"
  },
  {
    "text": "understand the next command is realer traits",
    "start": "871680",
    "end": "879600"
  },
  {
    "text": "traits are operational tasks so right now again there are three of them",
    "start": "882079",
    "end": "887519"
  },
  {
    "text": "that's installed and we can use them right away matrix route and scale",
    "start": "887519",
    "end": "894000"
  },
  {
    "text": "they will be attached to workloads next let's create an application this is a",
    "start": "894000",
    "end": "899360"
  },
  {
    "text": "very simple application called lab one it has two components of the back end",
    "start": "899360",
    "end": "905120"
  },
  {
    "text": "and the front end the back end is using the back end workload",
    "start": "905120",
    "end": "910800"
  },
  {
    "text": "and the front hand you this the web service",
    "start": "910800",
    "end": "915360"
  },
  {
    "text": "let's create the back end first",
    "start": "917120",
    "end": "921440"
  },
  {
    "text": "all right",
    "start": "925440",
    "end": "927839"
  },
  {
    "text": "okay so we have created this app lab1 it has two components now let's take a",
    "start": "933199",
    "end": "939600"
  },
  {
    "text": "look at the app definition or status",
    "start": "939600",
    "end": "946880"
  },
  {
    "text": "it is a very simple printout but it actually shows the application centric view",
    "start": "947120",
    "end": "953920"
  },
  {
    "text": "for that application the components and the trades there's no deployments",
    "start": "953920",
    "end": "961440"
  },
  {
    "text": "no uh any other kubernetes resources it's just your application and that's",
    "start": "961440",
    "end": "968320"
  },
  {
    "text": "our lab1 app file in our lab1 we used ci",
    "start": "968320",
    "end": "975120"
  },
  {
    "text": "and that's it's fine because those are very simple commands for any complicated or production grade",
    "start": "975120",
    "end": "983360"
  },
  {
    "text": "applications probably we need to have a more complicated way to describe it so file is something",
    "start": "983360",
    "end": "992639"
  },
  {
    "text": "to satisfy that requirement if you look at it at first glance it",
    "start": "992639",
    "end": "997839"
  },
  {
    "text": "looks like a darker compost file and that's our goal is to have this file",
    "start": "997839",
    "end": "1004079"
  },
  {
    "text": "as the docker compost for kubernetes and what it has",
    "start": "1004079",
    "end": "1009120"
  },
  {
    "text": "is also somewhat similar to what docker compost can do is we allow users to specify",
    "start": "1009120",
    "end": "1016720"
  },
  {
    "text": "the docker image on or even to build in your file and create the docker image",
    "start": "1016720",
    "end": "1023440"
  },
  {
    "text": "for you and also i want to say that it's",
    "start": "1023440",
    "end": "1028798"
  },
  {
    "text": "fairly extensible meaning that each section you see here maps to a different capability",
    "start": "1028799",
    "end": "1035839"
  },
  {
    "text": "definition so the first section of course is the build pack definition capability the second one",
    "start": "1035839",
    "end": "1043280"
  },
  {
    "text": "is actually the route capability and then we have the environmental",
    "start": "1043280",
    "end": "1050840"
  },
  {
    "text": "variables and then we have the scaling trait",
    "start": "1050840",
    "end": "1056400"
  },
  {
    "text": "etc so it's fairly extensible and the third feature about app file",
    "start": "1056400",
    "end": "1064559"
  },
  {
    "text": "is that it's based on q land template which is a very powerful tool",
    "start": "1064559",
    "end": "1071440"
  },
  {
    "text": "so this format is totally customizable using a template",
    "start": "1071440",
    "end": "1077760"
  },
  {
    "text": "file and once you define the template it's effective right away there's no intermediate steps to",
    "start": "1077760",
    "end": "1085840"
  },
  {
    "text": "customize your ci or to add new things to your gui no it's available right away for example",
    "start": "1085840",
    "end": "1093840"
  },
  {
    "text": "if we import a new workload a new trade it's going to show up on your cri on your gui",
    "start": "1093840",
    "end": "1101440"
  },
  {
    "text": "and you can use it you can right away use it in your app file as well",
    "start": "1101440",
    "end": "1106480"
  },
  {
    "text": "so this q template gives us this capability",
    "start": "1106480",
    "end": "1111520"
  },
  {
    "text": "to customize the look and feel and to extend it how does f5 work um let's take a look",
    "start": "1111520",
    "end": "1119679"
  },
  {
    "text": "at this diagram so there are two concepts in kubila one is called workload",
    "start": "1119679",
    "end": "1126640"
  },
  {
    "text": "types and the other is traits well workloads are just workloads trades are operational tasks",
    "start": "1126640",
    "end": "1133679"
  },
  {
    "text": "attached to workloads so when we are defining the workload types we can define a",
    "start": "1133679",
    "end": "1139120"
  },
  {
    "text": "template that's decoupling the workload itself from the presentation layer of the",
    "start": "1139120",
    "end": "1145280"
  },
  {
    "text": "workload so remember workloads and trades are still kubernetes apis",
    "start": "1145280",
    "end": "1150640"
  },
  {
    "text": "but they are already simplified or somewhat twisted um apis from its original",
    "start": "1150640",
    "end": "1158240"
  },
  {
    "text": "controllers or crds like we see at the bottom right but um we create another layer",
    "start": "1158240",
    "end": "1166160"
  },
  {
    "text": "of abstraction which is a queue template and when you write your app file it's",
    "start": "1166160",
    "end": "1172240"
  },
  {
    "text": "going to be evaluated against those templates you defined in your file let's say you say",
    "start": "1172240",
    "end": "1178720"
  },
  {
    "text": "i'm going to write an app file for this workload type",
    "start": "1178720",
    "end": "1184000"
  },
  {
    "text": "deployment it's going to be evaluated against that workload type so that's how file works",
    "start": "1184000",
    "end": "1192559"
  },
  {
    "text": "for example if you have defined a template for the trade route and then in your",
    "start": "1192559",
    "end": "1198559"
  },
  {
    "text": "file you declare to use that route trade it's going to be",
    "start": "1198559",
    "end": "1203600"
  },
  {
    "text": "evaluated against the template you wrote not the route api itself",
    "start": "1203600",
    "end": "1210159"
  },
  {
    "text": "we talked a lot about not reinventing the wheels but how do we actually do it well basically",
    "start": "1210159",
    "end": "1217919"
  },
  {
    "text": "all you got to do is to create a definition file and in this case we're creating a treat",
    "start": "1217919",
    "end": "1224080"
  },
  {
    "text": "definition for matrix and look at this definition file",
    "start": "1224080",
    "end": "1229120"
  },
  {
    "text": "basically on the top of it it's kubernetes api based on oem",
    "start": "1229120",
    "end": "1236080"
  },
  {
    "text": "um and then at the bottom of it you see the template so there's the extension",
    "start": "1236080",
    "end": "1243840"
  },
  {
    "text": "and then template and underneath it is a template this template once you apply it and it's synced",
    "start": "1243840",
    "end": "1251440"
  },
  {
    "text": "on your local vita system will be taking effect right away so you can",
    "start": "1251440",
    "end": "1258159"
  },
  {
    "text": "write your f file and it's going to be evaluated against it or it's going to show up on your",
    "start": "1258159",
    "end": "1264720"
  },
  {
    "text": "cri and also on your gui exercise two add the new capability to",
    "start": "1264720",
    "end": "1271120"
  },
  {
    "text": "curvilla so in this exercise we're going to add a new capability called cube watch",
    "start": "1271120",
    "end": "1276640"
  },
  {
    "text": "cube watch is a community project basically it's going to watch the events on the api level and it's",
    "start": "1276640",
    "end": "1284480"
  },
  {
    "text": "going to send the notifications to your channel in our case it's going to be a slack",
    "start": "1284480",
    "end": "1290240"
  },
  {
    "text": "channel so let's go through the instructions",
    "start": "1290240",
    "end": "1296240"
  },
  {
    "text": "first we need to create a stack bot let's do that i'm going to do it quickly",
    "start": "1296240",
    "end": "1305840"
  },
  {
    "text": "make sure we use the right stack and we're going to pick incoming",
    "start": "1307360",
    "end": "1313919"
  },
  {
    "text": "webhooks that's the simplest",
    "start": "1313919",
    "end": "1319840"
  },
  {
    "text": "and",
    "start": "1330840",
    "end": "1333840"
  },
  {
    "text": "and it has successively configured okay now let us add the capacity",
    "start": "1354720",
    "end": "1363360"
  },
  {
    "text": "so this crd is hosted in the catalog repository",
    "start": "1363360",
    "end": "1371120"
  },
  {
    "text": "the idea is that many other developers can also contribute to this registry",
    "start": "1371120",
    "end": "1377919"
  },
  {
    "text": "and we will be able to uh have something like node.js repositories or java maven",
    "start": "1377919",
    "end": "1384880"
  },
  {
    "text": "repositories things like that so that the platform builders don't have to",
    "start": "1384880",
    "end": "1390240"
  },
  {
    "text": "reinvent the wheels all the time so let's create a",
    "start": "1390240",
    "end": "1396880"
  },
  {
    "text": "capability center first",
    "start": "1396880",
    "end": "1403440"
  },
  {
    "text": "and next let's take a look at the capability",
    "start": "1403440",
    "end": "1410399"
  },
  {
    "text": "and it's not installed so we need to install that",
    "start": "1410480",
    "end": "1417840"
  },
  {
    "text": "okay now it is installed let's take a look",
    "start": "1431200",
    "end": "1437679"
  },
  {
    "text": "okay now we can see that this cube watch has been installed",
    "start": "1439919",
    "end": "1446559"
  },
  {
    "text": "next we're going to be creating a component just to try out this new capability",
    "start": "1446559",
    "end": "1456399"
  },
  {
    "text": "and it's the same as a previous one lab one except that",
    "start": "1456799",
    "end": "1463840"
  },
  {
    "text": "this one this application has only one component and the next we will be attaching this",
    "start": "1463840",
    "end": "1471279"
  },
  {
    "text": "capability to the component now look at the structure of the command",
    "start": "1471279",
    "end": "1477840"
  },
  {
    "text": "line it is vita and then it's the trade name and applied to the component name and then",
    "start": "1477840",
    "end": "1486080"
  },
  {
    "text": "application name and then here is the environmental variables let's copy",
    "start": "1486080",
    "end": "1491919"
  },
  {
    "text": "that",
    "start": "1491919",
    "end": "1494158"
  },
  {
    "text": "so this is the webhook url we'll just be copying this",
    "start": "1498559",
    "end": "1506320"
  },
  {
    "text": "okay now it's successful let's take a look do we see any events yes now it",
    "start": "1511679",
    "end": "1519919"
  },
  {
    "text": "keeps populating events",
    "start": "1519919",
    "end": "1524480"
  },
  {
    "text": "okay so that's a simple example of how to add a new capability from the community",
    "start": "1524960",
    "end": "1532480"
  },
  {
    "text": "into your vita system this is a simplified diagram of qvila",
    "start": "1532480",
    "end": "1537520"
  },
  {
    "text": "from the user's perspective it is dealing with the workloads and traits and through the",
    "start": "1537520",
    "end": "1544400"
  },
  {
    "text": "ui the ui consists of the ci the gui and app file all of which",
    "start": "1544400",
    "end": "1552559"
  },
  {
    "text": "are application centric which means that application is the first class citizen or the main api the entry",
    "start": "1552559",
    "end": "1559520"
  },
  {
    "text": "point of kervila of course under the hood we have the capabilities from the community",
    "start": "1559520",
    "end": "1568000"
  },
  {
    "text": "and we also have the capability of discovery and management system unlike",
    "start": "1568000",
    "end": "1574000"
  },
  {
    "text": "any repository we need to be able to manage our assets so that's basically",
    "start": "1574000",
    "end": "1580480"
  },
  {
    "text": "a convenient in a nutshell this is the overall architecture of kuvila",
    "start": "1580480",
    "end": "1586799"
  },
  {
    "text": "system i would say it provides more details or more comprehensive views of all the",
    "start": "1586799",
    "end": "1593440"
  },
  {
    "text": "logical systems within the cuvette system from the bottom we see that all the",
    "start": "1593440",
    "end": "1601039"
  },
  {
    "text": "capabilities are coming from the community so that's the first takeaway out of",
    "start": "1601039",
    "end": "1607039"
  },
  {
    "text": "this diagram we've talked about kita we've talked about flagger but now i want to talk about about cross",
    "start": "1607039",
    "end": "1614080"
  },
  {
    "text": "playing so crossplane does two things for us one of course it provisions uh cloud resources on",
    "start": "1614080",
    "end": "1620640"
  },
  {
    "text": "different clouds and the second is that project cross playing also includes the",
    "start": "1620640",
    "end": "1626000"
  },
  {
    "text": "oem kubernetes runtime this oem runtime will shape the raw crds",
    "start": "1626000",
    "end": "1633279"
  },
  {
    "text": "into the building blocks that can be reused by kuvila and all the other projects",
    "start": "1633279",
    "end": "1640559"
  },
  {
    "text": "that leads to the second takeaway that is qveda system actually has",
    "start": "1640559",
    "end": "1645600"
  },
  {
    "text": "two layers of abstractions one is through the oem runtime which shapes up",
    "start": "1645600",
    "end": "1653279"
  },
  {
    "text": "the raw crds into building blocks and once you import those building",
    "start": "1653279",
    "end": "1659200"
  },
  {
    "text": "blocks as trades and workloads the queue template and app",
    "start": "1659200",
    "end": "1664320"
  },
  {
    "text": "file will do another layer of abstraction to present",
    "start": "1664320",
    "end": "1669760"
  },
  {
    "text": "the user interface so that's two layers of abstractions and this gives us",
    "start": "1669760",
    "end": "1676480"
  },
  {
    "text": "great flexibility in designing the best user experience for application-centric application",
    "start": "1676480",
    "end": "1684080"
  },
  {
    "text": "platform on kubernetes we've heard a couple references to crossplanes so far in this presentation",
    "start": "1684080",
    "end": "1690720"
  },
  {
    "text": "but let's take a quick second to introduce it a little further so the easiest way to explain what",
    "start": "1690720",
    "end": "1696399"
  },
  {
    "text": "crossblind does is that it handles the infrastructure for your applications it does this by extending the kubernetes",
    "start": "1696399",
    "end": "1703360"
  },
  {
    "text": "control plane with a set of crds and controllers that essentially allow you to provision and manage",
    "start": "1703360",
    "end": "1711679"
  },
  {
    "text": "infrastructure resources those could be cloud provider managed services like amazon dynamo database or they",
    "start": "1711679",
    "end": "1719360"
  },
  {
    "text": "could be on premises infrastructure but crossplane allows you to control them",
    "start": "1719360",
    "end": "1724559"
  },
  {
    "text": "and manage them etc from inside of kubernetes it is now a cncf sandbox project we",
    "start": "1724559",
    "end": "1731039"
  },
  {
    "text": "donated it in june of this year and it's from the same creators of the rook project",
    "start": "1731039",
    "end": "1737039"
  },
  {
    "text": "which is also a cncf project and recently graduated this year so happy about that news",
    "start": "1737039",
    "end": "1743200"
  },
  {
    "text": "there's three main feature areas to crossplane the first one we kind of already talked about there where you can",
    "start": "1743200",
    "end": "1749039"
  },
  {
    "text": "provision infrastructure in a declarative way from inside of kubernetes",
    "start": "1749039",
    "end": "1754159"
  },
  {
    "text": "uh but then you can build on top of those infrastructure primitives to essentially create your own",
    "start": "1754159",
    "end": "1760399"
  },
  {
    "text": "infrastructure api your own platform that you can then offer up to your teams for them to be",
    "start": "1760399",
    "end": "1767200"
  },
  {
    "text": "able to consume that api and self-service provision their infrastructure when they need it",
    "start": "1767200",
    "end": "1772880"
  },
  {
    "text": "and then third it allows you to run and deploy applications that will",
    "start": "1772880",
    "end": "1778880"
  },
  {
    "text": "consume this infrastructure okay so now let's do the last",
    "start": "1778880",
    "end": "1784080"
  },
  {
    "text": "lab which is managing cloud resource and applications in application centric way so in this",
    "start": "1784080",
    "end": "1791440"
  },
  {
    "text": "lab what we're going to do is we're going to deploy a fairly complicated cloud native",
    "start": "1791440",
    "end": "1796960"
  },
  {
    "text": "application so this application has six different components one of them is",
    "start": "1796960",
    "end": "1804559"
  },
  {
    "text": "a cloud resource it's a database which we're going to be provisioning using crossplay",
    "start": "1804559",
    "end": "1811360"
  },
  {
    "text": "and the others are just regular micro services and before we get started",
    "start": "1811360",
    "end": "1819039"
  },
  {
    "text": "we would have to install cosplay so in this lab we have verified with",
    "start": "1819039",
    "end": "1826480"
  },
  {
    "text": "cosplaying version 0.13 and that's why we have also provided the helm chart locally",
    "start": "1826480",
    "end": "1834799"
  },
  {
    "text": "so the first step is to create a namespace",
    "start": "1834799",
    "end": "1840320"
  },
  {
    "text": "and the next will be installing the crossplane charts",
    "start": "1843679",
    "end": "1851840"
  },
  {
    "text": "all right it's done and the third one is to install the cross plane cri which",
    "start": "1853679",
    "end": "1859279"
  },
  {
    "text": "i have done already but we need to keep in mind that",
    "start": "1859279",
    "end": "1864320"
  },
  {
    "text": "we need to move this or we need to add the ci to pass otherwise",
    "start": "1864320",
    "end": "1869919"
  },
  {
    "text": "uh kubectio cannot execute it so the next couple of steps would",
    "start": "1869919",
    "end": "1876880"
  },
  {
    "text": "configure a cloud provider in this case it's alibaba cloud",
    "start": "1876880",
    "end": "1883120"
  },
  {
    "text": "okay and this step is to create",
    "start": "1891200",
    "end": "1896320"
  },
  {
    "text": "a secret using your access key and secret so i'll access key secret",
    "start": "1896559",
    "end": "1904240"
  },
  {
    "text": "so make sure that you change these strings here so i'm gonna do mine and i'm gonna edit",
    "start": "1904240",
    "end": "1911279"
  },
  {
    "text": "this part out all right coming back uh we're gonna create a configure a provider",
    "start": "1911279",
    "end": "1921840"
  },
  {
    "text": "okay explain a little of what we have done so far i think jared would do a",
    "start": "1925200",
    "end": "1930799"
  },
  {
    "text": "much better job so up to you now up to this part",
    "start": "1930799",
    "end": "1936720"
  },
  {
    "text": "the cloud provider part we have created a crd a controller in our own cluster that's",
    "start": "1936720",
    "end": "1944159"
  },
  {
    "text": "going to control the life cycle of the remote cloud resource and the second part is configuration",
    "start": "1944159",
    "end": "1950480"
  },
  {
    "text": "part which will change different resources together so in in our case we're provisioning a",
    "start": "1950480",
    "end": "1956640"
  },
  {
    "text": "database but also the storage of that database so it's two things",
    "start": "1956640",
    "end": "1961679"
  },
  {
    "text": "together it's got a composite uh this configuration is a composite configuration now keep in mind who",
    "start": "1961679",
    "end": "1969120"
  },
  {
    "text": "should be doing this right it is the platform builder's job to provide these to the customers or to",
    "start": "1969120",
    "end": "1975919"
  },
  {
    "text": "developers but today since we're self-serving ourselves so we have to do it and also let's",
    "start": "1975919",
    "end": "1983600"
  },
  {
    "text": "reflect back on where we are right now remember in the last system diagram that we have at the",
    "start": "1983600",
    "end": "1990799"
  },
  {
    "text": "bottom of those raw resources and then through the oem kubernetes runtime",
    "start": "1990799",
    "end": "1998880"
  },
  {
    "text": "they became uh the building blocks so that's where we are now we have the building blocks and the next step",
    "start": "1998880",
    "end": "2005360"
  },
  {
    "text": "is to make a definition of those building blocks and import them into visa system to",
    "start": "2005360",
    "end": "2012559"
  },
  {
    "text": "become traits and components so in our case we are gonna create a definition",
    "start": "2012559",
    "end": "2019200"
  },
  {
    "text": "for this database and it's gonna become a workload and let's do that",
    "start": "2019200",
    "end": "2025919"
  },
  {
    "text": "okay that's done one important thing this is created on the cluster so we need to",
    "start": "2030320",
    "end": "2036640"
  },
  {
    "text": "synchronize back with our local visa system",
    "start": "2036640",
    "end": "2041360"
  },
  {
    "text": "and let's take a look",
    "start": "2042880",
    "end": "2047840"
  },
  {
    "text": "uh the rds that's what we call it and remember we have a template so we are going to call it a different",
    "start": "2048000",
    "end": "2055440"
  },
  {
    "text": "name so it's rds i'm just using the simple words here",
    "start": "2055440",
    "end": "2061679"
  },
  {
    "text": "that's all the prep work actually and let's do a vita up and we're gonna just shoot up",
    "start": "2061679",
    "end": "2069440"
  },
  {
    "text": "this application",
    "start": "2069440",
    "end": "2075520"
  },
  {
    "text": "that's how simple it is right compared to all the previous steps now this deployment takes a long time",
    "start": "2075520",
    "end": "2081679"
  },
  {
    "text": "because we actually have to provision the database on alibaba cloud",
    "start": "2081679",
    "end": "2088638"
  },
  {
    "text": "so let's take a look at this vlad.yaml file which is our app file",
    "start": "2088639",
    "end": "2094638"
  },
  {
    "text": "there are six different components and they use web service and rds two workload types",
    "start": "2094639",
    "end": "2104000"
  },
  {
    "text": "these workload types again the the the template was built in the definition",
    "start": "2104000",
    "end": "2110800"
  },
  {
    "text": "so uh you can change it you can negotiate with your platform builder because they resemble nothing of the",
    "start": "2110800",
    "end": "2117760"
  },
  {
    "text": "kubernetes api underneath for the web ui i actually created a route this is a",
    "start": "2117760",
    "end": "2123760"
  },
  {
    "text": "trade so look at this we simply added a domain",
    "start": "2123760",
    "end": "2128880"
  },
  {
    "text": "do you recognize flagger probably not right so this is the beauty of using the",
    "start": "2128880",
    "end": "2134720"
  },
  {
    "text": "templating and also the oem runtime to basically model the data twice look at",
    "start": "2134720",
    "end": "2142800"
  },
  {
    "text": "how many environmental variables we have for just one",
    "start": "2142800",
    "end": "2147920"
  },
  {
    "text": "component or service if you do this through cri obviously it's going to give you a hard",
    "start": "2147920",
    "end": "2153920"
  },
  {
    "text": "time and also given so many different components",
    "start": "2153920",
    "end": "2158960"
  },
  {
    "text": "it's really hard to keep track of so app file really is a practical way of",
    "start": "2158960",
    "end": "2166400"
  },
  {
    "text": "keeping your application together of providing the app centric user experience now let's take a look",
    "start": "2166400",
    "end": "2173200"
  },
  {
    "text": "at how many resources that actually is generated by kubernetes",
    "start": "2173200",
    "end": "2179760"
  },
  {
    "text": "yes see there are so many of them now imagine you have to keep track of all those",
    "start": "2181680",
    "end": "2187119"
  },
  {
    "text": "resources all right let's take a look at the",
    "start": "2187119",
    "end": "2195040"
  },
  {
    "text": "database so um",
    "start": "2195040",
    "end": "2201520"
  },
  {
    "text": "okay i think the database is ready let's take a look at the ui let's access",
    "start": "2201520",
    "end": "2208800"
  },
  {
    "text": "the ui so as i mentioned that i have created route trade to the web ui but",
    "start": "2208800",
    "end": "2215920"
  },
  {
    "text": "my cluster my local cluster is a is a kind cluster that i didn't install",
    "start": "2215920",
    "end": "2221280"
  },
  {
    "text": "ingress i cannot do that but if you do have ingress most public cloud will have",
    "start": "2221280",
    "end": "2228720"
  },
  {
    "text": "you can use the get ingress command and get the ip address and",
    "start": "2228720",
    "end": "2236079"
  },
  {
    "text": "see this is the ui web ui trade right and then normally we would have",
    "start": "2236079",
    "end": "2242640"
  },
  {
    "text": "the ip address here and next what you're going to do is you're going to do a vi of your",
    "start": "2242640",
    "end": "2250000"
  },
  {
    "text": "hosts file and",
    "start": "2250000",
    "end": "2255040"
  },
  {
    "text": "and then you can add that host here so you can access by hostname",
    "start": "2255680",
    "end": "2263359"
  },
  {
    "text": "but for us since i don't have ingress configured i'm just going to use",
    "start": "2265599",
    "end": "2271839"
  },
  {
    "text": "port forward and it's also very straightforward",
    "start": "2271839",
    "end": "2284560"
  },
  {
    "text": "we're going to use this part the web ui pod",
    "start": "2284560",
    "end": "2290880"
  },
  {
    "text": "and the port is 8080.",
    "start": "2293440",
    "end": "2299838"
  },
  {
    "text": "okay this is a dashboard so let's refresh some data",
    "start": "2310400",
    "end": "2316880"
  },
  {
    "text": "okay all right so let's take a look at the flights",
    "start": "2317599",
    "end": "2325119"
  },
  {
    "text": "yeah so here are other flights available at this hour and this is earthquake information",
    "start": "2325520",
    "end": "2333440"
  },
  {
    "text": "uh yes so these are the earthquakes that's happening",
    "start": "2333440",
    "end": "2338839"
  },
  {
    "text": "recently and lastly it's the weather",
    "start": "2338839",
    "end": "2344480"
  },
  {
    "text": "okay so i guess that is the demo app so we need to",
    "start": "2346560",
    "end": "2353440"
  },
  {
    "text": "give credits to the folks who actually build this demo not us all right let's recap what we did so",
    "start": "2353440",
    "end": "2360320"
  },
  {
    "text": "basically um we just used one reader up command and of course we have",
    "start": "2360320",
    "end": "2368640"
  },
  {
    "text": "this file written prepared and that's developer's job",
    "start": "2368640",
    "end": "2374400"
  },
  {
    "text": "but overall i think over the three labs i think for the first live we created",
    "start": "2374400",
    "end": "2380720"
  },
  {
    "text": "two components and then for the second one we just added one uh trait",
    "start": "2380720",
    "end": "2388000"
  },
  {
    "text": "to the component and then the last one we just used the ad file so totally four",
    "start": "2388000",
    "end": "2394880"
  },
  {
    "text": "different commands that's really what has to be done by the developers to have all the things we did",
    "start": "2394880",
    "end": "2402640"
  },
  {
    "text": "and if you think that's impressive please come and join us and that concludes this demo thank you",
    "start": "2402640",
    "end": "2410480"
  },
  {
    "text": "now that we've seen a little bit of crossplane in action let's go ahead and dive down a little",
    "start": "2410480",
    "end": "2415599"
  },
  {
    "text": "bit deeper into the architecture and some of those three functional areas we were talking about earlier",
    "start": "2415599",
    "end": "2422160"
  },
  {
    "text": "so let's start with the first one about being able to provision infrastructure using the kubernetes api",
    "start": "2422160",
    "end": "2428880"
  },
  {
    "text": "so as we mentioned earlier cloud cloud provider managed services and on-premises infrastructure",
    "start": "2428880",
    "end": "2435440"
  },
  {
    "text": "can be represented with crossplane as crds so this lets you declaratively configure",
    "start": "2435440",
    "end": "2442079"
  },
  {
    "text": "a crd to capture the desired state that you want for your cloud provider managed services",
    "start": "2442079",
    "end": "2447839"
  },
  {
    "text": "or other infrastructure and so controllers inside a crossplane will be watching for events on those",
    "start": "2447839",
    "end": "2454079"
  },
  {
    "text": "crds and then reconciling the desired state on them with the actual state within the cloud",
    "start": "2454079",
    "end": "2460480"
  },
  {
    "text": "provider or other infrastructure and so you know this enables you to use",
    "start": "2460480",
    "end": "2468400"
  },
  {
    "text": "cubecontrol or any other tool that talks to the kubernetes api to provision and manage the",
    "start": "2468400",
    "end": "2474560"
  },
  {
    "text": "infrastructure that is actually outside of kubernetes in most circumstances so",
    "start": "2474560",
    "end": "2480560"
  },
  {
    "text": "in the diagram at the bottom of the slide here we're going to use an example of amazon rds and so on the left here",
    "start": "2480560",
    "end": "2488240"
  },
  {
    "text": "we've got a crd that captures all the configuration that you may want for your amazon relational database",
    "start": "2488240",
    "end": "2495599"
  },
  {
    "text": "service your rds database there and you'll use cube control to send that over to the",
    "start": "2495599",
    "end": "2500960"
  },
  {
    "text": "kubernetes api server and then inside of the control plane there we've got crossplane has a rds",
    "start": "2500960",
    "end": "2507520"
  },
  {
    "text": "controller that's watching for events via the api server on that rds",
    "start": "2507520",
    "end": "2513119"
  },
  {
    "text": "crd and then it sees that rds crd was created and then it will",
    "start": "2513119",
    "end": "2519280"
  },
  {
    "text": "call out over the network to the aws api using",
    "start": "2519280",
    "end": "2524480"
  },
  {
    "text": "aws restful apis to provision and make that actual sorry the",
    "start": "2524480",
    "end": "2531040"
  },
  {
    "text": "desired state that was captured in the crd to make that an actual state inside of",
    "start": "2531040",
    "end": "2536160"
  },
  {
    "text": "amazon's cloud over there so on the screen now is basically just",
    "start": "2536160",
    "end": "2542480"
  },
  {
    "text": "an example sticking with aws of some of the",
    "start": "2542480",
    "end": "2547520"
  },
  {
    "text": "crds that represent services and infrastructure inside amazon you can see this on the",
    "start": "2547520",
    "end": "2553240"
  },
  {
    "text": "doc.crds.dev site which captures uh the documentation and the specs and",
    "start": "2553240",
    "end": "2558560"
  },
  {
    "text": "all the fields and everything their help and everything for all the crds that are offered by",
    "start": "2558560",
    "end": "2564400"
  },
  {
    "text": "crossplane right now but basically we see a bunch of crds uh that are in the aws.crossplane.io",
    "start": "2564400",
    "end": "2570560"
  },
  {
    "text": "namespace and they capture a whole bunch of different types of services and resources inside",
    "start": "2570560",
    "end": "2575839"
  },
  {
    "text": "of aws so you know networking and caches database kubernetes clusters",
    "start": "2575839",
    "end": "2581680"
  },
  {
    "text": "themselves etc all those you can create instances of crds inside of kubernetes using",
    "start": "2581680",
    "end": "2589280"
  },
  {
    "text": "crossplane to create and provision configure manage etc uh real life instances of those",
    "start": "2589280",
    "end": "2596079"
  },
  {
    "text": "infrastructure resources inside of amazon and that's just an example right you can do that with google cloud and azure and alibaba and",
    "start": "2596079",
    "end": "2604000"
  },
  {
    "text": "packet and others as well too the second feature area that we'll focus",
    "start": "2604000",
    "end": "2609839"
  },
  {
    "text": "on in crossplane here is around offering declarative infrastructure apis for your application teams to consume so we",
    "start": "2609839",
    "end": "2617760"
  },
  {
    "text": "do that by composing together some of the infrastructure primitives that we",
    "start": "2617760",
    "end": "2624480"
  },
  {
    "text": "saw previously you know like the cloud provider managed services on on-premises infrastructure",
    "start": "2624480",
    "end": "2630079"
  },
  {
    "text": "and so we can compose those into higher level api abstractions of",
    "start": "2630079",
    "end": "2636480"
  },
  {
    "text": "infrastructure and then offer that to our application teams to consume",
    "start": "2636480",
    "end": "2642240"
  },
  {
    "text": "uh to make an example of this here let's think about a mysql resource that an application team",
    "start": "2642240",
    "end": "2648160"
  },
  {
    "text": "might want you know they might want a mysql database to use for their app and so one way to do that would be to",
    "start": "2648160",
    "end": "2655280"
  },
  {
    "text": "compose that mysql abstraction of underneath the covers some azure resources like the azure",
    "start": "2655280",
    "end": "2661440"
  },
  {
    "text": "mysql a resource group for it to live in and a firewall rule to open up some access to",
    "start": "2661440",
    "end": "2666960"
  },
  {
    "text": "it so we can compose those azure resources together and then offer it to our application",
    "start": "2666960",
    "end": "2673520"
  },
  {
    "text": "teams as a mysql abstraction a mysql infrastructure api that they can then",
    "start": "2673520",
    "end": "2680000"
  },
  {
    "text": "consume on demand when they need it and so a nice part about this is that it",
    "start": "2680000",
    "end": "2685359"
  },
  {
    "text": "hides some of the complexity of the infrastructure and environment details away from the application teams",
    "start": "2685359",
    "end": "2691040"
  },
  {
    "text": "and then even better it allows the infrastructure owners to encode some of the policy",
    "start": "2691040",
    "end": "2699200"
  },
  {
    "text": "and best practices and configuration that's important to their organization",
    "start": "2699200",
    "end": "2704400"
  },
  {
    "text": "and only expose this simplified infrastructure abstraction this api to",
    "start": "2704400",
    "end": "2710480"
  },
  {
    "text": "their application teams to get the infrastructure they need when they need it but in a safe",
    "start": "2710480",
    "end": "2716240"
  },
  {
    "text": "safely configured and secure way and this is all done with no code writing at all it's done declaratively by the",
    "start": "2716240",
    "end": "2723359"
  },
  {
    "text": "infrastructure owners to surface this api to their teams so let's look at a diagram here",
    "start": "2723359",
    "end": "2731520"
  },
  {
    "text": "that kind of shows a little bit further of what i'm talking about so in the top left we've got our",
    "start": "2731520",
    "end": "2736560"
  },
  {
    "text": "application our developers their application team and they want to consume a mysql",
    "start": "2736560",
    "end": "2742880"
  },
  {
    "text": "database right so we as the infrastructure owners here have composed together a mysql instance",
    "start": "2742880",
    "end": "2751040"
  },
  {
    "text": "api an abstraction there that represents my sql and so one of my application teams they",
    "start": "2751040",
    "end": "2756560"
  },
  {
    "text": "want the aws flavor and another application team wants the azure flavor uh but to both those teams they're",
    "start": "2756560",
    "end": "2764160"
  },
  {
    "text": "pretty much exactly the same thing right they're dealing with the exact same mysql instance uh that is a infrastructure abstraction",
    "start": "2764160",
    "end": "2771440"
  },
  {
    "text": "that we've offered up to them they're just kind of setting a little config knob to tweak which flavor they",
    "start": "2771440",
    "end": "2776480"
  },
  {
    "text": "get so underneath the covers that selects a specific composition that we've put",
    "start": "2776480",
    "end": "2782960"
  },
  {
    "text": "together to represent an amazon or an azure mysql",
    "start": "2782960",
    "end": "2788079"
  },
  {
    "text": "so some of these infrastructure primitives like amazon rds database and a subnet group and a security group",
    "start": "2788079",
    "end": "2796079"
  },
  {
    "text": "you know those are composed together to form a specific implementation of this",
    "start": "2796079",
    "end": "2802319"
  },
  {
    "text": "simplified mysql api that we've exposed to the team and likewise we could do something",
    "start": "2802319",
    "end": "2808160"
  },
  {
    "text": "similar with azure so note that we're making different compositions to fulfill",
    "start": "2808160",
    "end": "2814640"
  },
  {
    "text": "the mysql abstraction with different cloud providers in this example",
    "start": "2814640",
    "end": "2820000"
  },
  {
    "text": "but you could do the same thing with different classes of service so for instance you could do a",
    "start": "2820000",
    "end": "2825359"
  },
  {
    "text": "composition that represents a high performance database or you can make a separate composition",
    "start": "2825359",
    "end": "2831920"
  },
  {
    "text": "for the same infrastructure api that represents a low cost version but either way you as the",
    "start": "2831920",
    "end": "2839119"
  },
  {
    "text": "infrastructure operator have control of the policy the configuration you know",
    "start": "2839119",
    "end": "2844319"
  },
  {
    "text": "what primitives are composed uh into this abstraction here in order to",
    "start": "2844319",
    "end": "2849599"
  },
  {
    "text": "give the team what they need but with the policy that you're in control of and then at the bottom of the diagram uh",
    "start": "2849599",
    "end": "2855760"
  },
  {
    "text": "once again we have the providers that are you know reconciling the",
    "start": "2855760",
    "end": "2860880"
  },
  {
    "text": "infrastructure primitives with their with the cloud provider apis to make that an actual state in the",
    "start": "2860880",
    "end": "2869200"
  },
  {
    "text": "in the clouds represent what the what the team has requested for their infrastructure",
    "start": "2869200",
    "end": "2875359"
  },
  {
    "text": "and the third feature area of crossplane is around running and deploying applications as well it does it",
    "start": "2875359",
    "end": "2882800"
  },
  {
    "text": "through its support and implementation of the open application model the ohm spec",
    "start": "2882800",
    "end": "2888559"
  },
  {
    "text": "which is definitely a focus of this presentation today as well uh but it allows you to deploy the",
    "start": "2888559",
    "end": "2894960"
  },
  {
    "text": "applications alongside of the infrastructure that they need to run on as well and it allows you to do that",
    "start": "2894960",
    "end": "2902160"
  },
  {
    "text": "in a standardized normalized way where you can deploy or sorry declare your applications in a very similar way",
    "start": "2902160",
    "end": "2908160"
  },
  {
    "text": "to how you're declaring your infrastructure as well crossplane is you know the kubernetes",
    "start": "2908160",
    "end": "2913599"
  },
  {
    "text": "implementation of the om spec and it's a very good fit together uh because they both",
    "start": "2913599",
    "end": "2920960"
  },
  {
    "text": "employ a model of a strong separation of concerns where you've got a few personas at play",
    "start": "2920960",
    "end": "2926640"
  },
  {
    "text": "where you've got the infrastructure operators the people that are the owners and in charge of the infrastructure and",
    "start": "2926640",
    "end": "2932720"
  },
  {
    "text": "services of the platform but then at the top layer you've got the application developers that are building",
    "start": "2932720",
    "end": "2938240"
  },
  {
    "text": "the application components and don't really need or have much insight into the specifics of the",
    "start": "2938240",
    "end": "2945760"
  },
  {
    "text": "environment they'll be running in they want to express their needs for their applications in a in the infrastructure in a very general way",
    "start": "2945760",
    "end": "2953040"
  },
  {
    "text": "and then you've got your application operators that are kind of the the runtime deployers and",
    "start": "2953040",
    "end": "2959359"
  },
  {
    "text": "builders of the of the applications and kind of marrying the infrastructure and the applications together",
    "start": "2959359",
    "end": "2965520"
  },
  {
    "text": "so that strong separation of concerns there is supported in both the ohm spec and with crossplane as well you know and",
    "start": "2965520",
    "end": "2972240"
  },
  {
    "text": "being able to declare your applications and your infrastructures",
    "start": "2972240",
    "end": "2977760"
  },
  {
    "text": "in a single standardized way is is a very nice fit",
    "start": "2977760",
    "end": "2982960"
  },
  {
    "text": "so let's put all those three functional areas of crossband together now with a final diagram here that",
    "start": "2982960",
    "end": "2988880"
  },
  {
    "text": "summarizes the architecture and so your application team at the top there they can use the open application",
    "start": "2988880",
    "end": "2994800"
  },
  {
    "text": "model they can use some of the kubernetes core resources directly",
    "start": "2994800",
    "end": "3000720"
  },
  {
    "text": "you know to declare their application and the infrastructure that they need as well from",
    "start": "3000720",
    "end": "3006960"
  },
  {
    "text": "the layers below of the infrastructure apis and abstractions that you as the",
    "start": "3006960",
    "end": "3012160"
  },
  {
    "text": "infrastructure owner or operator are defining for them and you know exposing to them with some",
    "start": "3012160",
    "end": "3018800"
  },
  {
    "text": "simple configuration that they need but enabling them to self-service on demand get the infrastructure that",
    "start": "3018800",
    "end": "3025839"
  },
  {
    "text": "they need for their applications in a standardized way in a very similar way to how they define the applications",
    "start": "3025839",
    "end": "3031680"
  },
  {
    "text": "themselves and then those infrastructure abstractions there that you're exposing they are composed of",
    "start": "3031680",
    "end": "3041280"
  },
  {
    "text": "infrastructure primitives underneath uh and so using crossplane's composition feature",
    "start": "3041280",
    "end": "3046400"
  },
  {
    "text": "to pull together and set policy and configuration on a number of infrastructure primitives",
    "start": "3046400",
    "end": "3052720"
  },
  {
    "text": "all composed together to form this infrastructure api and then on the bottom those are talking",
    "start": "3052720",
    "end": "3058640"
  },
  {
    "text": "to the cloud provider apis to make that infrastructure happen in reality as well too so application",
    "start": "3058640",
    "end": "3065760"
  },
  {
    "text": "teams are getting getting their applications deployed they're getting the infrastructure that they need through a simple abstraction they're",
    "start": "3065760",
    "end": "3072240"
  },
  {
    "text": "doing that all in a consistent way the infrastructure operators are putting together these platform or",
    "start": "3072240",
    "end": "3078160"
  },
  {
    "text": "infrastructure apis they're getting to encode the organizational policy and best practices",
    "start": "3078160",
    "end": "3084640"
  },
  {
    "text": "and configuration that's important they're enabling the application teams to get that infrastructure when they",
    "start": "3084640",
    "end": "3089920"
  },
  {
    "text": "need it but in a safe and secure way and everybody's happy at the end there",
    "start": "3089920",
    "end": "3096400"
  },
  {
    "text": "okay let's go ahead and start exercise 4 now the final exercise of this tutorial",
    "start": "3096400",
    "end": "3101440"
  },
  {
    "text": "in this exercise we're going to be building and offering an infrastructure api",
    "start": "3101440",
    "end": "3106800"
  },
  {
    "text": "to our application teams and this is this api here is going to focus on",
    "start": "3106800",
    "end": "3113520"
  },
  {
    "text": "making some infrastructure resources in aws available for our application teams to",
    "start": "3113520",
    "end": "3118800"
  },
  {
    "text": "consume you can follow along with everything because it is all published and made available",
    "start": "3118800",
    "end": "3124960"
  },
  {
    "text": "on github with the link provided there it's under the upbound organization and it's called platform dash ref aws",
    "start": "3124960",
    "end": "3133200"
  },
  {
    "text": "so basically we're going to be making uh some network resources a kubernetes cluster and a postgres",
    "start": "3133200",
    "end": "3139440"
  },
  {
    "text": "database we're going to be building an api that we will make available for consumption",
    "start": "3139440",
    "end": "3145200"
  },
  {
    "text": "to our application teams as well then so we're going to author this we're going to push this configuration",
    "start": "3145200",
    "end": "3151680"
  },
  {
    "text": "up to a registry and then we're going to install this configuration into",
    "start": "3151680",
    "end": "3157760"
  },
  {
    "text": "a crossplane instance a control plane that we have and then we'll go ahead and publish it",
    "start": "3157760",
    "end": "3163440"
  },
  {
    "text": "or offer it some of the claims that we make available in this configuration we're",
    "start": "3163440",
    "end": "3168880"
  },
  {
    "text": "gonna offer those to our application team and then we'll allow the application teams to go ahead and",
    "start": "3168880",
    "end": "3175040"
  },
  {
    "text": "provision their infrastructure uh self-service you know on demand whenever they want to and it's going to",
    "start": "3175040",
    "end": "3180720"
  },
  {
    "text": "have all of the policy and configuration that we uh declare inside of this configuration that we're going to build",
    "start": "3180720",
    "end": "3186720"
  },
  {
    "text": "together all right let's get started the easiest way to get started here",
    "start": "3186720",
    "end": "3192000"
  },
  {
    "text": "is to go to upbound cloud upbound.io and get started with creating a",
    "start": "3192000",
    "end": "3199359"
  },
  {
    "text": "hosted crossplane instance and also some nice ui to",
    "start": "3199359",
    "end": "3206240"
  },
  {
    "text": "kind of watch the platform and infrastructure api that we're going to be building come up together all right so i am at",
    "start": "3206240",
    "end": "3214800"
  },
  {
    "text": "upbound.io i already have a kubecon staging uh platform here but i'm going to go ahead",
    "start": "3214800",
    "end": "3220240"
  },
  {
    "text": "and create a new one here for kubecon production and this is my",
    "start": "3220240",
    "end": "3225520"
  },
  {
    "text": "prod kubecon environment i can't spell that so let's just go env",
    "start": "3225520",
    "end": "3231760"
  },
  {
    "text": "right and let's kick this off so that's going to be running here now and that doesn't take a very long time",
    "start": "3231760",
    "end": "3238960"
  },
  {
    "text": "for our crossbane instance to come up but let's go ahead and start talking about",
    "start": "3238960",
    "end": "3244480"
  },
  {
    "text": "the configuration and platform infrastructure apis we're going to build",
    "start": "3244480",
    "end": "3251040"
  },
  {
    "text": "the first thing we're looking at here at the root of the repo is just a simple metadata file basically",
    "start": "3251040",
    "end": "3256720"
  },
  {
    "text": "the crossplan.yaml and this is saying that we are building a crossplane configuration and it's the",
    "start": "3256720",
    "end": "3264160"
  },
  {
    "text": "aws reference platform it was made by me and you know just some simple metadata",
    "start": "3264160",
    "end": "3271119"
  },
  {
    "text": "that says what version of crossplanet runs on and what its dependencies are and things like that so",
    "start": "3271119",
    "end": "3276640"
  },
  {
    "text": "more interesting content though is in some of these folders here so i've got the repo organized here by",
    "start": "3276640",
    "end": "3283760"
  },
  {
    "text": "resource or infrastructure type so let's first dig into the network type and we're going to",
    "start": "3283760",
    "end": "3289520"
  },
  {
    "text": "see a similar pattern here for each one of these types here for a network and for also for a cluster and",
    "start": "3289520",
    "end": "3295599"
  },
  {
    "text": "database as well but we're going to have two main files there the definition",
    "start": "3295599",
    "end": "3300640"
  },
  {
    "text": "of that api and then it's composition what is it made of so the definition for uh the network",
    "start": "3300640",
    "end": "3308319"
  },
  {
    "text": "uh infrastructure api we're building uh we're gonna see that it is a composite resource definition",
    "start": "3308319",
    "end": "3314319"
  },
  {
    "text": "uh we like to call these xrds in crossplane and so it's got some uh ui metadata",
    "start": "3314319",
    "end": "3320799"
  },
  {
    "text": "which will help uh influence how it shows up in the ui if you wanted to create one from the ui",
    "start": "3320799",
    "end": "3326079"
  },
  {
    "text": "the configuration fields that would show up etc but uh another important part here",
    "start": "3326079",
    "end": "3331680"
  },
  {
    "text": "is that basically we're defining a network api for our app teams to consume and we're",
    "start": "3331680",
    "end": "3338240"
  },
  {
    "text": "defining the shape of that api we're defining sort of what are the configuration knobs",
    "start": "3338240",
    "end": "3344640"
  },
  {
    "text": "that the application team will get to turn when they want to create a",
    "start": "3344640",
    "end": "3350319"
  },
  {
    "text": "network self-service on their own right uh so there's not too much for giving them",
    "start": "3350319",
    "end": "3355440"
  },
  {
    "text": "here we're kind of giving them the name um of what they want the network to be and then what cluster",
    "start": "3355440",
    "end": "3361200"
  },
  {
    "text": "the uh this network will belong to so we're not really giving them a lot of of configuration here at all right and",
    "start": "3361200",
    "end": "3368880"
  },
  {
    "text": "then under the covers for this uh this definition of an infrastructure api we're building",
    "start": "3368880",
    "end": "3375599"
  },
  {
    "text": "under the covers is the composition what what is the underlying",
    "start": "3375599",
    "end": "3381040"
  },
  {
    "text": "infrastructure primitives that will make up this uh network api that we're building",
    "start": "3381040",
    "end": "3386799"
  },
  {
    "text": "and so here we go is a composition a crossband composition that matches back to that network api",
    "start": "3386799",
    "end": "3394880"
  },
  {
    "text": "that we're defining and there's a whole bunch of infrastructure primitives that belong",
    "start": "3394880",
    "end": "3400400"
  },
  {
    "text": "in here right so there's a bunch of aws resources so a vpc an internet gateway some subnets",
    "start": "3400400",
    "end": "3407200"
  },
  {
    "text": "multiple subnets that we're building here a route table and a security group and i",
    "start": "3407200",
    "end": "3413200"
  },
  {
    "text": "think that's the end of them right so basically this is composing together a bunch of different aws networking",
    "start": "3413200",
    "end": "3421119"
  },
  {
    "text": "primitives and all those will be instantiated",
    "start": "3421119",
    "end": "3426559"
  },
  {
    "text": "when the application team self-service asks for a network right so all this",
    "start": "3426559",
    "end": "3431680"
  },
  {
    "text": "configuration information and the policy and everything this is all a",
    "start": "3431680",
    "end": "3437280"
  },
  {
    "text": "set of basic infrastructure primitives uh capturing that configuration policy but",
    "start": "3437280",
    "end": "3443200"
  },
  {
    "text": "behind underneath the api line that we're building together right so we'll see a very similar pattern for",
    "start": "3443200",
    "end": "3450960"
  },
  {
    "text": "the other types of infrastructure apis that we're building so we're also",
    "start": "3450960",
    "end": "3456960"
  },
  {
    "text": "building a database api too so let's look at that so we're building",
    "start": "3456960",
    "end": "3462000"
  },
  {
    "text": "another composite resource definition uh underneath the database postgres folder",
    "start": "3462000",
    "end": "3467280"
  },
  {
    "text": "and so this xrd this composite resource definition is going to be for postgres and",
    "start": "3467280",
    "end": "3474640"
  },
  {
    "text": "the shape of this postgres api is going to have a couple of configuration knobs for the",
    "start": "3474640",
    "end": "3480960"
  },
  {
    "text": "application team to twirl and spin as well too so for instance we have a storage",
    "start": "3480960",
    "end": "3486960"
  },
  {
    "text": "uh storage gb field that we're defining here is an integer type and that that field there will basically",
    "start": "3486960",
    "end": "3493839"
  },
  {
    "text": "be used to determine how big of a database they could get we're not exposing much",
    "start": "3493839",
    "end": "3499040"
  },
  {
    "text": "to them here at all once again you know just how big do you want it and what network do you want it",
    "start": "3499040",
    "end": "3504079"
  },
  {
    "text": "to use a network reference field and that's about it in terms of the definition",
    "start": "3504079",
    "end": "3509119"
  },
  {
    "text": "of the uh database or postgres infrastructure api we'll be exposing to",
    "start": "3509119",
    "end": "3514160"
  },
  {
    "text": "our users and then underneath the covers again here underneath the api line the this this postgres",
    "start": "3514160",
    "end": "3521839"
  },
  {
    "text": "api is composed of a couple of different aws resources again right so here's a",
    "start": "3521839",
    "end": "3528559"
  },
  {
    "text": "composition once again that is for postgres our postgres that",
    "start": "3528559",
    "end": "3534000"
  },
  {
    "text": "we defined the infrastructure api for postgres and it will have a db subnet group",
    "start": "3534000",
    "end": "3540000"
  },
  {
    "text": "and it will have an amazon rds instance so here is some policy and configuration",
    "start": "3540000",
    "end": "3545920"
  },
  {
    "text": "that's being captured here of um you know what size we want it to be uh or type instance type that is and",
    "start": "3545920",
    "end": "3553920"
  },
  {
    "text": "here's a very interesting or important part of these compositions that we're authoring here so remember that in the definition we",
    "start": "3553920",
    "end": "3561920"
  },
  {
    "text": "exposed a storage gigabyte surge db field and so inside the composition underneath",
    "start": "3561920",
    "end": "3569280"
  },
  {
    "text": "the api line we're going to do a patch and we're going to take",
    "start": "3569280",
    "end": "3574400"
  },
  {
    "text": "the storage gb field from the user from the application team's request for",
    "start": "3574400",
    "end": "3579760"
  },
  {
    "text": "a postgres database and we're going to map that down into the rds",
    "start": "3579760",
    "end": "3584839"
  },
  {
    "text": "instance aws infrastructure primitive and we're going to map it down into a",
    "start": "3584839",
    "end": "3590799"
  },
  {
    "text": "particular field there that's inside the amazon api so the allocated storage field there",
    "start": "3590799",
    "end": "3596480"
  },
  {
    "text": "will be a recipient of our storage gb field so this is a way",
    "start": "3596480",
    "end": "3601599"
  },
  {
    "text": "that we give configuration to be exposed to the application team",
    "start": "3601599",
    "end": "3606720"
  },
  {
    "text": "but without exposing the entire surface area of the amazon rds",
    "start": "3606720",
    "end": "3613280"
  },
  {
    "text": "database or whatever other infrastructure primitive that we are exposing for them so",
    "start": "3613280",
    "end": "3620079"
  },
  {
    "text": "remember that uh you know you can have multiple compositions for",
    "start": "3620079",
    "end": "3625680"
  },
  {
    "text": "each infrastructure api you're exposing so for instance we could have a a fast",
    "start": "3625680",
    "end": "3631440"
  },
  {
    "text": "or high performance database with a certain set of configuration parameters here like maybe a beefier",
    "start": "3631440",
    "end": "3638400"
  },
  {
    "text": "instance type and then we could also have a cheap uh version or flavor",
    "start": "3638400",
    "end": "3645599"
  },
  {
    "text": "of the infrastructure api as well too that maybe uses a a smaller lower cost instance type",
    "start": "3645599",
    "end": "3653359"
  },
  {
    "text": "so through those means there we can expose different classes of service for our application",
    "start": "3653359",
    "end": "3659359"
  },
  {
    "text": "teams but without giving them the entire surface area or the ability to create",
    "start": "3659359",
    "end": "3664799"
  },
  {
    "text": "these instances in the in the cloud providers apis directly we're putting this api",
    "start": "3664799",
    "end": "3671200"
  },
  {
    "text": "line in front of them that makes sure that they use that our configuration or policy that as",
    "start": "3671200",
    "end": "3676400"
  },
  {
    "text": "infrastructure owners were okay with okay so then we're not going to go too",
    "start": "3676400",
    "end": "3681520"
  },
  {
    "text": "deep into the cluster one two but cluster is a self-service",
    "start": "3681520",
    "end": "3686720"
  },
  {
    "text": "uh infrastructure api for the application team to get their own uh kubernetes cluster",
    "start": "3686720",
    "end": "3692799"
  },
  {
    "text": "when they want one so there's some configuration fields here too of uh like what's what size cluster do they want small",
    "start": "3692799",
    "end": "3699359"
  },
  {
    "text": "medium or large how many nodes uh do they want in the cluster etc but this is an interesting one because",
    "start": "3699359",
    "end": "3705760"
  },
  {
    "text": "its composition is actually a nested composition where underneath the top level cluster",
    "start": "3705760",
    "end": "3713599"
  },
  {
    "text": "api that we're exposing it's composed of an eks api and then a services api that will",
    "start": "3713599",
    "end": "3720319"
  },
  {
    "text": "install a bunch of platform services like prometheus and you know tracing and things like that",
    "start": "3720319",
    "end": "3726000"
  },
  {
    "text": "so not only can we put together infrastructure primitives like cloud provider managed services and networking",
    "start": "3726000",
    "end": "3732799"
  },
  {
    "text": "and stuff like that but we can also put together other composite resources to create kind of a",
    "start": "3732799",
    "end": "3738400"
  },
  {
    "text": "nested tree of them as well and create more complicated abstractions that we're exposing to our",
    "start": "3738400",
    "end": "3743760"
  },
  {
    "text": "application teams let's go ahead and build and package up",
    "start": "3743760",
    "end": "3749200"
  },
  {
    "text": "this configuration that we've built together this set of infrastructure apis",
    "start": "3749200",
    "end": "3754319"
  },
  {
    "text": "let's build and package it up and push it up to a registry here so we're going to use",
    "start": "3754319",
    "end": "3760319"
  },
  {
    "text": "the cross plane uh cube control plugin so we're going to do a cube control cross plane build and we're building this",
    "start": "3760319",
    "end": "3766400"
  },
  {
    "text": "configuration together and we're just going to say ignore the examples directory and",
    "start": "3766400",
    "end": "3771760"
  },
  {
    "text": "go ahead and call it a package.xp xpkg so let's do that build there real quick",
    "start": "3771760",
    "end": "3777839"
  },
  {
    "text": "that was easy and then now we should have that package.xpkg",
    "start": "3777839",
    "end": "3783599"
  },
  {
    "text": "sitting there on disk here which we do and now let's go ahead and oops accidentally copied that didn't",
    "start": "3783599",
    "end": "3791920"
  },
  {
    "text": "mean to so the next command i want to run is i'm going to go ahead and use the cube control cross plane plug-in to push this",
    "start": "3791920",
    "end": "3798880"
  },
  {
    "text": "configuration up to the upbound cloud uh the upbound.io registry that we are using right now so i've",
    "start": "3798880",
    "end": "3806799"
  },
  {
    "text": "gonna tag it as a 0.0.3 inversion there and i'm going to push it",
    "start": "3806799",
    "end": "3813039"
  },
  {
    "text": "up to my my repo here this platform reference aws platform here",
    "start": "3813039",
    "end": "3818480"
  },
  {
    "text": "and so let's push that and that should push it up to the registry so let's head on over to",
    "start": "3818480",
    "end": "3825920"
  },
  {
    "text": "uh upbound cloud again and uh let's check and see my repository sweet",
    "start": "3825920",
    "end": "3831839"
  },
  {
    "text": "we got that 0.0.3 version that we just pushed right now and so let's go ahead and take a look at",
    "start": "3831839",
    "end": "3838799"
  },
  {
    "text": "our platform that finished quite a while ago and let's go ahead and install this",
    "start": "3838799",
    "end": "3845920"
  },
  {
    "text": "configuration into the platform so then i can start exposing it and making it available for my application teams",
    "start": "3845920",
    "end": "3853839"
  },
  {
    "text": "okay i've got my cube control pointed to that hosted crossplane instance i have an upbound cloud",
    "start": "3854880",
    "end": "3861039"
  },
  {
    "text": "uh kubecon production there there we go and so now i'm going to use the cube",
    "start": "3861039",
    "end": "3866079"
  },
  {
    "text": "control cross plane plugin uh while pointed at that hosted crossplane instance in about",
    "start": "3866079",
    "end": "3871599"
  },
  {
    "text": "cloud to install this configuration that we had pushed up to the registry there so my platform",
    "start": "3871599",
    "end": "3879200"
  },
  {
    "text": "reference aws to 0.0.3 i'm going to go ahead and cube control crossplane install it",
    "start": "3879200",
    "end": "3886240"
  },
  {
    "text": "so let's kick that that's good and so now we can do things like cube control git pkg to get all the cross plane",
    "start": "3886240",
    "end": "3893119"
  },
  {
    "text": "packages that are installed here and uh so it is yes",
    "start": "3893119",
    "end": "3898880"
  },
  {
    "text": "our reference platform aws is uh now installed that's great good good and so once",
    "start": "3898880",
    "end": "3906839"
  },
  {
    "text": "uh now that that is available here uh we can go ahead and see",
    "start": "3906839",
    "end": "3913440"
  },
  {
    "text": "that um as the the infrastructure owner here or the",
    "start": "3913440",
    "end": "3918480"
  },
  {
    "text": "administrator of this platform for my team i've got all the raw composite resources",
    "start": "3918480",
    "end": "3924480"
  },
  {
    "text": "here exposed right so i've got the composite clusters the composite networks eks services all that",
    "start": "3924480",
    "end": "3929839"
  },
  {
    "text": "stuff but it's not quite ready for my team still so i want to go ahead and",
    "start": "3929839",
    "end": "3937359"
  },
  {
    "text": "create a workspace for my team to use so let's go ahead and create a team for",
    "start": "3937359",
    "end": "3944000"
  },
  {
    "text": "team one let's create a team one workspace",
    "start": "3944000",
    "end": "3950240"
  },
  {
    "text": "okay let's go ahead and create that so that will be the place in my cubecon production environment there",
    "start": "3950240",
    "end": "3956640"
  },
  {
    "text": "that team one will work and so what i want to do now",
    "start": "3956640",
    "end": "3961839"
  },
  {
    "text": "is enable some apis here right because there's nothing available yet",
    "start": "3961839",
    "end": "3967599"
  },
  {
    "text": "so i'm wanting the team one to be able to on their own self-service create clusters when they",
    "start": "3967599",
    "end": "3974079"
  },
  {
    "text": "want to and create networks when they want to and create postgres instances when they",
    "start": "3974079",
    "end": "3980240"
  },
  {
    "text": "want to so now that that is done i am going to log in",
    "start": "3980240",
    "end": "3988319"
  },
  {
    "text": "as a team one member and they will get a different view here",
    "start": "3988319",
    "end": "3993599"
  },
  {
    "text": "where when they log in they will see a custom cloud control panel basically",
    "start": "3993599",
    "end": "3999520"
  },
  {
    "text": "which is a visual or a view of all the apis that i have defined and",
    "start": "3999520",
    "end": "4006319"
  },
  {
    "text": "published for them and made aware for them so let's go ahead and do that too",
    "start": "4006319",
    "end": "4012799"
  },
  {
    "text": "okay so i am logged in as a member of team one here and basically i am looking at a",
    "start": "4013920",
    "end": "4021760"
  },
  {
    "text": "custom cloud control panel or console that my infrastructure team has",
    "start": "4021760",
    "end": "4027200"
  },
  {
    "text": "essentially built for me uh using the configuration uh and everything that we",
    "start": "4027200",
    "end": "4032640"
  },
  {
    "text": "defined and declared earlier on in this exercise so i log in here and i'm looking at",
    "start": "4032640",
    "end": "4039520"
  },
  {
    "text": "all of the infrastructure api and abstractions that i have been enabled or",
    "start": "4039520",
    "end": "4045920"
  },
  {
    "text": "allowed to create similar to when you log into the aws console or the gcp console",
    "start": "4045920",
    "end": "4051680"
  },
  {
    "text": "and you see all the services you can create i'm seeing essentially a custom one that was defined by my",
    "start": "4051680",
    "end": "4058559"
  },
  {
    "text": "infrastructure owners my infrastructure team so i come in here and i'm allowed to create a cluster a",
    "start": "4058559",
    "end": "4066160"
  },
  {
    "text": "network or a postgres instance so i want to start off by creating a network and so i",
    "start": "4066160",
    "end": "4073599"
  },
  {
    "text": "will click in here and this ui is generated by the",
    "start": "4073599",
    "end": "4079440"
  },
  {
    "text": "the declarations uh the definition the schema that we defined earlier on when we were playing",
    "start": "4080400",
    "end": "4086160"
  },
  {
    "text": "the role of infrastructure owners and so i create uh create that network and that will start getting ready for us",
    "start": "4086160",
    "end": "4094240"
  },
  {
    "text": "okay our network infrastructure resource is ready to go done being created and",
    "start": "4094240",
    "end": "4100960"
  },
  {
    "text": "as a member of my app team here team one i can keep creating more infrastructure",
    "start": "4100960",
    "end": "4107040"
  },
  {
    "text": "resources in much the same way so now that we have an underlying network fabric created we could go ahead and also create a",
    "start": "4107040",
    "end": "4114238"
  },
  {
    "text": "cluster or a database for my application to use you know we're rolling out a new service and it needs a database and so i could",
    "start": "4114239",
    "end": "4121600"
  },
  {
    "text": "create my own uh or on demand a postgres instance for it as well i",
    "start": "4121600",
    "end": "4126960"
  },
  {
    "text": "could specify the size that i want for it you know that's part of the configuration that my infrastructure",
    "start": "4126960",
    "end": "4132560"
  },
  {
    "text": "team has has uh configured or enabled for me to be able to set um you know i could go ahead and create",
    "start": "4132560",
    "end": "4140000"
  },
  {
    "text": "a whole cluster in order to roll out some some containers or other services that",
    "start": "4140000",
    "end": "4146640"
  },
  {
    "text": "are my app team needs to run i can say how many nodes i want in it uh what size i want",
    "start": "4146640",
    "end": "4153040"
  },
  {
    "text": "those nodes to be but essentially here the infrastructure team has created the an api",
    "start": "4153040",
    "end": "4160880"
  },
  {
    "text": "that this console is built on top of and you know generates the ui so that i",
    "start": "4160880",
    "end": "4167600"
  },
  {
    "text": "as an app developer for team one can on demand create the infrastructure that i need to",
    "start": "4167600",
    "end": "4173679"
  },
  {
    "text": "get my job done and to roll out my applications more easily and with less friction",
    "start": "4173679",
    "end": "4180880"
  },
  {
    "text": "so let's review everything we did here right so we started with creating a",
    "start": "4180880",
    "end": "4189120"
  },
  {
    "text": "an infrastructure api basically as infrastructure owner we created a network definition we created",
    "start": "4189120",
    "end": "4197199"
  },
  {
    "text": "a database definition and we created a cluster definition as well and we defined the",
    "start": "4197199",
    "end": "4205199"
  },
  {
    "text": "schema for these infrastructure resources this infrastructure api that",
    "start": "4205199",
    "end": "4211120"
  },
  {
    "text": "we're going to make available for our team we defined define the configuration knobs that we want the application teams",
    "start": "4211120",
    "end": "4217280"
  },
  {
    "text": "to be able to set and configure and we encoded all of our policy and our configuration",
    "start": "4217280",
    "end": "4224880"
  },
  {
    "text": "that we think is important into into this api that we're building we defined the infrastructure primitives",
    "start": "4224880",
    "end": "4231600"
  },
  {
    "text": "that these these infrastructure apis should be composed of",
    "start": "4231600",
    "end": "4236880"
  },
  {
    "text": "we used composition to put together infrastructure primitives to specify how they should be rolled out",
    "start": "4236880",
    "end": "4242960"
  },
  {
    "text": "and what their policy configuration is and then we built and we published this package a package",
    "start": "4242960",
    "end": "4250400"
  },
  {
    "text": "of these configurations together up to the upbound cloud registry and then we",
    "start": "4250400",
    "end": "4256080"
  },
  {
    "text": "created a basically a running instance of crossplane for the",
    "start": "4256080",
    "end": "4261920"
  },
  {
    "text": "application team and all of these infrastructure apis",
    "start": "4261920",
    "end": "4267040"
  },
  {
    "text": "and abstractions that we defined for them with all the configuration and policy baked in underneath the api",
    "start": "4267040",
    "end": "4274080"
  },
  {
    "text": "we exposed that api to the team so that the team could then self-service",
    "start": "4274080",
    "end": "4279679"
  },
  {
    "text": "get the infrastructure that they need uh with a nice ui and custom cloud control console basically to do it",
    "start": "4279679",
    "end": "4286159"
  },
  {
    "text": "and now they can create the infrastructure they need when they need it to keep",
    "start": "4286159",
    "end": "4291199"
  },
  {
    "text": "their application development uh rolling and be uh be basically empowered or enabled to get",
    "start": "4291199",
    "end": "4297600"
  },
  {
    "text": "the infrastructure they need without creating a ticket and coming back to us while that infrastructure will still",
    "start": "4297600",
    "end": "4302640"
  },
  {
    "text": "have all the policy and configuration that we baked into the infrastructure",
    "start": "4302640",
    "end": "4308239"
  },
  {
    "text": "abstractions that we defined for them let's talk about uh the community",
    "start": "4308239",
    "end": "4315360"
  },
  {
    "text": "currently oem curvilla are together so for oem we have",
    "start": "4315360",
    "end": "4320400"
  },
  {
    "text": "uh the specification that's getting stabilized uh we're moving to beta which will be",
    "start": "4320400",
    "end": "4327520"
  },
  {
    "text": "backward compatible and for curvilla it's still in working progress",
    "start": "4327520",
    "end": "4333760"
  },
  {
    "text": "not ready for production yet but we plan to have 1.0 release in december",
    "start": "4333760",
    "end": "4340880"
  },
  {
    "text": "so currently we have um the features such as file the ci and dashboard",
    "start": "4340880",
    "end": "4348239"
  },
  {
    "text": "we have the trades like rollout route and scaling and they are all coming from",
    "start": "4348239",
    "end": "4353600"
  },
  {
    "text": "the community we didn't do anything ourselves and also the",
    "start": "4353600",
    "end": "4359199"
  },
  {
    "text": "included or the default workloads are web services tasks and back end and we have",
    "start": "4359199",
    "end": "4366880"
  },
  {
    "text": "a active community and we have the stack channel and getter",
    "start": "4366880",
    "end": "4373360"
  },
  {
    "text": "for both oem and kubila if you're interested please come",
    "start": "4373360",
    "end": "4379920"
  },
  {
    "text": "and join us and here are some links for how to get",
    "start": "4379920",
    "end": "4385520"
  },
  {
    "text": "involved in the crossplane community as well too so you know we mentioned it's a cncf",
    "start": "4385520",
    "end": "4391199"
  },
  {
    "text": "sandbox project and it's open and very welcoming to new contributors and adopters and anybody who wants to",
    "start": "4391199",
    "end": "4398159"
  },
  {
    "text": "get involved so crossplane dot io is the main website to jump into everything",
    "start": "4398159",
    "end": "4403520"
  },
  {
    "text": "and all the links to everything else can be pretty much found from there but we're also super active on slack and",
    "start": "4403520",
    "end": "4410800"
  },
  {
    "text": "really you know welcoming and talkative there too so join us at slack.crossplane.io as well too",
    "start": "4410800",
    "end": "4416960"
  },
  {
    "text": "and you can check out the rest of the links on the page here but we would love to have you join the project and a quick look",
    "start": "4416960",
    "end": "4423920"
  },
  {
    "text": "at our roadmap the big news here is that we are working towards a v 1.0 release for the end of this year",
    "start": "4423920",
    "end": "4431360"
  },
  {
    "text": "and then beyond that as well too many good things and exciting things the roadmap but basically a big focus here is",
    "start": "4431360",
    "end": "4438880"
  },
  {
    "text": "getting to v 1.0 and that means uh some hardening moving or graduating some of our apis to get to",
    "start": "4438880",
    "end": "4446320"
  },
  {
    "text": "a stable place as well too so there won't be breaking changes and you can you know",
    "start": "4446320",
    "end": "4451679"
  },
  {
    "text": "upgrade between versions with minimal headaches and hassles there definitely some exciting features around",
    "start": "4451679",
    "end": "4458159"
  },
  {
    "text": "composition itself and our package manager as well too a big investment we'll be making as well",
    "start": "4458159",
    "end": "4465679"
  },
  {
    "text": "is around the providers for all the cloud providers to to greatly expand the amount of",
    "start": "4465679",
    "end": "4472000"
  },
  {
    "text": "coverage that they have so our goal is to get to 90 coverage of all the services offered by",
    "start": "4472000",
    "end": "4477120"
  },
  {
    "text": "each of the cloud providers and we'll do that by working with the cloud providers themselves to do some code generation and",
    "start": "4477120",
    "end": "4484880"
  },
  {
    "text": "kind of get hooked into those pipelines there so that new services will come out uh very quickly and with minimal",
    "start": "4484880",
    "end": "4491199"
  },
  {
    "text": "maintenance effort there it's very excited about that and you know we have some uh investments still into ohm as well too",
    "start": "4491199",
    "end": "4498800"
  },
  {
    "text": "to get that one to a v one beta one level uh with some new features as well too so",
    "start": "4498800",
    "end": "4504000"
  },
  {
    "text": "a lot of exciting things on the roadmap there is we get to a v 1.0 for crossplane by the end of the",
    "start": "4504000",
    "end": "4509440"
  },
  {
    "text": "year and further beyond into 2021 so that's everything we got for the",
    "start": "4509440",
    "end": "4515679"
  },
  {
    "text": "presentation and tutorial today we definitely are really appreciative of you joining us",
    "start": "4515679",
    "end": "4521440"
  },
  {
    "text": "and following along and we will have some time for some questions now as well too so thank you everybody",
    "start": "4521440",
    "end": "4528080"
  },
  {
    "text": "really appreciate it",
    "start": "4528080",
    "end": "4532560"
  }
]