[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "my name is ma che I'm the sexy Li lead and I work for Red Hat and I'm one of",
    "start": "30",
    "end": "7470"
  },
  {
    "text": "the core contributors from Red Hat to kubernetes",
    "start": "7470",
    "end": "12320"
  },
  {
    "text": "working on Murphy Nui and I did a lot of so ap I'm just going to be plumbing around auditing so okay I apparently I",
    "start": "13519",
    "end": "22410"
  },
  {
    "text": "can't be too close to Stefan anyway let's start with a quick history lesson so that you can get a context and a feel",
    "start": "22410",
    "end": "29849"
  },
  {
    "text": "how we landed the the current auditing mechanisms that we have in kubernetes so",
    "start": "29849",
    "end": "36180"
  },
  {
    "text": "we started back in 2016 when we introduced the basic auditing mechanism",
    "start": "36180",
    "end": "42540"
  },
  {
    "text": "it was very simplistic it was like a page-long of code it was a handler that",
    "start": "42540",
    "end": "50640"
  },
  {
    "start": "43000",
    "end": "43000"
  },
  {
    "text": "was responsible for logging then from basic information about every single request that was hitting API server that",
    "start": "50640",
    "end": "57989"
  },
  {
    "text": "included both the API the user that was making the request some basic",
    "start": "57989",
    "end": "63180"
  },
  {
    "text": "information about what was being requested which is the URI and additional information so aside from the",
    "start": "63180",
    "end": "69510"
  },
  {
    "text": "user is the impersonation information each such request was logging two lines",
    "start": "69510",
    "end": "76979"
  },
  {
    "text": "of code two lines of data one was what I just mentioned and the other one was the response information which in the",
    "start": "76979",
    "end": "84150"
  },
  {
    "text": "simplest code was just a HTTP code of the request so 200-400 whatever we to",
    "start": "84150",
    "end": "92100"
  },
  {
    "text": "reader we returned from from the API server of course that was very",
    "start": "92100",
    "end": "97500"
  },
  {
    "text": "simplistic that allowed us to start further discussions and further work",
    "start": "97500",
    "end": "104520"
  },
  {
    "text": "because a lot of people were actually interested in in auditing and with the help from Google Korres Fujitsu we",
    "start": "104520",
    "end": "113939"
  },
  {
    "text": "started at the implementation that we beforehand drafted with Stefan so the",
    "start": "113939",
    "end": "121290"
  },
  {
    "text": "advanced editing introduced in 1.7 as an alpha allowed us not only to log the",
    "start": "121290",
    "end": "127409"
  },
  {
    "text": "basic information from the basic auditing mechanism in a textual form but additionally we were",
    "start": "127409",
    "end": "133800"
  },
  {
    "text": "we are now able to lock deep information about the full objects that were both",
    "start": "133800",
    "end": "139170"
  },
  {
    "text": "sent over to the server and then we will send back as a response to to the",
    "start": "139170",
    "end": "145710"
  },
  {
    "text": "requests which was probably the most requested feature for auditing that we",
    "start": "145710",
    "end": "151620"
  },
  {
    "text": "heard about additionally the textual form was one option for logging the",
    "start": "151620",
    "end": "158700"
  },
  {
    "text": "information but on top of that we introduced a JSON format of the JSON",
    "start": "158700",
    "end": "164940"
  },
  {
    "text": "format for auditing and the audit event we will be showing in a short while and what was probably the most advanced",
    "start": "164940",
    "end": "172260"
  },
  {
    "text": "feature is very sophisticated filtering mechanism for deciding how many",
    "start": "172260",
    "end": "178290"
  },
  {
    "text": "information for what kind of information and at what level we are actually",
    "start": "178290",
    "end": "185070"
  },
  {
    "text": "logging in the auditing for every request so the next couple releases all",
    "start": "185070",
    "end": "191070"
  },
  {
    "text": "the way up to 112 let us to stabilizing the mechanism improving the filtering",
    "start": "191070",
    "end": "197880"
  },
  {
    "text": "mechanism improving the batching requests and entire mech machinery to be",
    "start": "197880",
    "end": "206400"
  },
  {
    "text": "able to actually and finally release the advanced editing in version 1.12",
    "start": "206400",
    "end": "213830"
  },
  {
    "start": "218000",
    "end": "218000"
  },
  {
    "text": "we want to go into a bit of the details of auditing to really understand what is",
    "start": "222080",
    "end": "227760"
  },
  {
    "text": "locked and what it means how complete it is how consistent it is and so on so we",
    "start": "227760",
    "end": "233280"
  },
  {
    "text": "have the event here it's basically what you what you get either printed out runs a lock or sent to a vet book",
    "start": "233280",
    "end": "240800"
  },
  {
    "text": "yeah like 20 or something fields we have here so a lot of the metadata that's",
    "start": "240800",
    "end": "247290"
  },
  {
    "text": "basically what we had in basic auditing already then we have of course when it",
    "start": "247290",
    "end": "253980"
  },
  {
    "text": "happens especially when the request came in and when the event was created this can be different so there's a long",
    "start": "253980",
    "end": "260820"
  },
  {
    "text": "running request which takes 40 seconds this time stem can be very different in fact who also on doing this request so",
    "start": "260820",
    "end": "270300"
  },
  {
    "text": "the user especially which includes also information this comes from the",
    "start": "270300",
    "end": "275790"
  },
  {
    "text": "authentication part of the API server and also something like user agent and source IP source up he other guys the",
    "start": "275790",
    "end": "284160"
  },
  {
    "text": "source IP of HTTP of course also TCP connection but also from proxies in between and the user agent is really",
    "start": "284160",
    "end": "290160"
  },
  {
    "text": "what the client claims to be so it's just a string you cannot trust and so on so but it's it's very helpful in the in",
    "start": "290160",
    "end": "296340"
  },
  {
    "text": "the order clock as well and deep logging what was really requested so weed is object coming into the API server and",
    "start": "296340",
    "end": "304200"
  },
  {
    "text": "which went out as a response to understand what those informations mean",
    "start": "304200",
    "end": "311280"
  },
  {
    "text": "let's take a look at the API server so he is yeah so inner working of an API server so each request dosis follows has",
    "start": "311280",
    "end": "319500"
  },
  {
    "text": "got lines whose API server so it comes in here it goes who authentication",
    "start": "319500",
    "end": "325100"
  },
  {
    "text": "impersonation also is Asian maybe it's phone I can get it I serve us so maybe it goes this way out to another",
    "start": "325100",
    "end": "332250"
  },
  {
    "text": "process but usually goes through the implementation here this long pipeline where so logic for the API is a test",
    "start": "332250",
    "end": "340110"
  },
  {
    "text": "logics will be implemented at some point it goes out and they're sent back to the to control or controller whatever gets",
    "start": "340110",
    "end": "346500"
  },
  {
    "text": "requests originally and of course we have also admission web hooks today so so object can be influenced",
    "start": "346500",
    "end": "353969"
  },
  {
    "text": "by web hooks as well we have a number of probes where we collect information and",
    "start": "353969",
    "end": "360079"
  },
  {
    "text": "obviously use the information we have already here so after authentication we",
    "start": "360079",
    "end": "365819"
  },
  {
    "text": "know who this user is usually here also indicated by our token or by a client",
    "start": "365819",
    "end": "372329"
  },
  {
    "text": "certificate and we know user name we know the groups maybe uses impersonation",
    "start": "372329",
    "end": "377939"
  },
  {
    "text": "so it tries to do something like a pseudo on a CLI we can lock that and",
    "start": "377939",
    "end": "382949"
  },
  {
    "text": "finally we check that the user really can access the resource that he",
    "start": "382949",
    "end": "388349"
  },
  {
    "text": "requested that's authorization finally it goes here into the API server and if you",
    "start": "388349",
    "end": "394979"
  },
  {
    "text": "imagine you did to create of a pots so cou couple create - F pot Yama",
    "start": "394979",
    "end": "401249"
  },
  {
    "text": "we have decoding and we record the object as the user we descend at this",
    "start": "401249",
    "end": "406349"
  },
  {
    "text": "position and then we have admission admission hooks one may be some web",
    "start": "406349",
    "end": "412259"
  },
  {
    "text": "hooks one and we can also record information in this stage for example if",
    "start": "412259",
    "end": "417719"
  },
  {
    "text": "you really want to know why could this pot be executed and it's very important to know to know support security policy",
    "start": "417719",
    "end": "425309"
  },
  {
    "text": "which allows this pot through to one or to do some command like exag or port for",
    "start": "425309",
    "end": "432329"
  },
  {
    "text": "what this is also locked and that's what we record at this position and finally on the right side we have subjects and",
    "start": "432329",
    "end": "440550"
  },
  {
    "text": "response and we send it back through the wire to the user and this is a response which we collect there we can lock",
    "start": "440550",
    "end": "450389"
  },
  {
    "start": "447000",
    "end": "447000"
  },
  {
    "text": "different information different depths of information so what we had already in",
    "start": "450389",
    "end": "455579"
  },
  {
    "text": "in basic auditing long ago was this metadata all those probes here at the",
    "start": "455579",
    "end": "461099"
  },
  {
    "text": "top they just collect metadata it's very small easy to collect it's cheap you can",
    "start": "461099",
    "end": "467849"
  },
  {
    "text": "just do it more or less all the time there's nothing secret about it as well so it doesn't matter you don't have to",
    "start": "467849",
    "end": "474899"
  },
  {
    "text": "forbid metadata for for requests usually the request object here it's much more",
    "start": "474899",
    "end": "481589"
  },
  {
    "text": "expensive if you look at an event later the event as much much bigger because there's a whole",
    "start": "481589",
    "end": "487800"
  },
  {
    "text": "object so it can be a huge pot spec which takes several pages of JSON text",
    "start": "487800",
    "end": "494330"
  },
  {
    "text": "it's big and it's much more CPU demanding for the API so I were to do",
    "start": "494330",
    "end": "499950"
  },
  {
    "text": "that so maybe you should think about whether I really need that also for secrets maybe you don't want that",
    "start": "499950",
    "end": "505590"
  },
  {
    "text": "because secrets are secret obviously so maybe don't send it over the auditing there poop at this bubble here it's",
    "start": "505590",
    "end": "515070"
  },
  {
    "text": "again metadata some key values annotations from submission plugins also cheap yeah you can do it more or less",
    "start": "515070",
    "end": "521279"
  },
  {
    "text": "every for every request and again the response is similar as a request",
    "start": "521279",
    "end": "526320"
  },
  {
    "text": "responses again usually a big object they are the same place as for the",
    "start": "526320",
    "end": "531720"
  },
  {
    "text": "request yeah I mentioned performance it's mostly CPU demanding what we are",
    "start": "531720",
    "end": "538800"
  },
  {
    "text": "doing here but that's another dimension um consistency that's what I called it",
    "start": "538800",
    "end": "547650"
  },
  {
    "start": "543000",
    "end": "543000"
  },
  {
    "text": "so level is mostly about what we watch me record or what we ordered I've",
    "start": "547650",
    "end": "555030"
  },
  {
    "text": "painted one a timeline here so this is a request it comes in its zero",
    "start": "555030",
    "end": "560339"
  },
  {
    "text": "milliseconds so this one starts so there's a first byte going to the to the",
    "start": "560339",
    "end": "566330"
  },
  {
    "text": "to control or user other end there might be a panic panic means this may be some",
    "start": "566330",
    "end": "573030"
  },
  {
    "text": "bug in the handling or maybe the connection is destroyed or something like that if all this doesn't happen everything is",
    "start": "573030",
    "end": "580410"
  },
  {
    "text": "fine there's a response complete here and it doesn't help used in certain",
    "start": "580410",
    "end": "587660"
  },
  {
    "text": "situations if you just just have some requests received so he only knows that",
    "start": "587660",
    "end": "592770"
  },
  {
    "text": "there was a request started but you have no information whether it's still ongoing so you maybe want to audit logs",
    "start": "592770",
    "end": "600150"
  },
  {
    "text": "as a request was really finished and there's nothing no connection anymore with the cube cutter or also controlled",
    "start": "600150",
    "end": "606600"
  },
  {
    "text": "at the other end so those are two dimensions first the depths and then",
    "start": "606600",
    "end": "613130"
  },
  {
    "text": "yeah we call it stages each of those stages produces its own event so you get",
    "start": "613130",
    "end": "619980"
  },
  {
    "text": "couple of events it's like basic editing you get multiple lines of of output here",
    "start": "619980",
    "end": "625980"
  },
  {
    "text": "you have different events and yeah the",
    "start": "625980",
    "end": "631770"
  },
  {
    "start": "630000",
    "end": "630000"
  },
  {
    "text": "same thing in this picture again so request received obviously it's he ends beginning and the other events are",
    "start": "631770",
    "end": "638700"
  },
  {
    "text": "created here and he has a byte stream or bit stream and when every singer sent",
    "start": "638700",
    "end": "644700"
  },
  {
    "text": "response completes assent and before he gets a response started maybe in between we get a pending event and yeah I I use",
    "start": "644700",
    "end": "654240"
  },
  {
    "text": "the word dimension so those are two dimensions you have to go you can configure in the policy stages how many",
    "start": "654240",
    "end": "662370"
  },
  {
    "text": "events at which positions and levers describes the depths ok I'm good thanks",
    "start": "662370",
    "end": "684260"
  },
  {
    "start": "667000",
    "end": "667000"
  },
  {
    "text": "so we covered how every requests throat flows through the API server now that we",
    "start": "684260",
    "end": "691170"
  },
  {
    "text": "know how to process the requests we want to and we are currently interested in how to define the policies which",
    "start": "691170",
    "end": "697980"
  },
  {
    "text": "basically means how we can decide which requests got locked and at what level at",
    "start": "697980",
    "end": "704400"
  },
  {
    "text": "which stages which is what cell phone was covering a minute ago currently you define this by creating a",
    "start": "704400",
    "end": "712380"
  },
  {
    "text": "very detailed audit policy file which you then pass as a flag to the cube API",
    "start": "712380",
    "end": "718350"
  },
  {
    "text": "server there is an option about a dynamic auditing which is currently and",
    "start": "718350",
    "end": "724320"
  },
  {
    "text": "now fine once and just release 113 I'll cover that shortly and towards the end",
    "start": "724320",
    "end": "730170"
  },
  {
    "text": "of the slides but all you need to know at this point in time is that every",
    "start": "730170",
    "end": "735870"
  },
  {
    "text": "single policy will always have the API",
    "start": "735870",
    "end": "742170"
  },
  {
    "text": "version audit kate's il v1 and its kind will be policy then you can define a",
    "start": "742170",
    "end": "748740"
  },
  {
    "text": "global stages that you are emitting and there comes the rules and let me show",
    "start": "748740",
    "end": "754339"
  },
  {
    "text": "you a couple examples of rules so that you can better understand how you filter",
    "start": "754339",
    "end": "760490"
  },
  {
    "text": "every specific request so let's start with deep logging objects because that",
    "start": "760490",
    "end": "767959"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "was the one that was most frequently asked for to define to have an object",
    "start": "767959",
    "end": "773180"
  },
  {
    "text": "being deep locked you specify a request response level which basically means we",
    "start": "773180",
    "end": "780470"
  },
  {
    "text": "are logging full object both coming into this API server and getting out if you",
    "start": "780470",
    "end": "787820"
  },
  {
    "text": "look towards the right this is pretty big this is pretty big output of a",
    "start": "787820",
    "end": "793790"
  },
  {
    "text": "sample other event for getting pots this is where the requests you see quickly",
    "start": "793790",
    "end": "799880"
  },
  {
    "text": "because I can't remember this is the response object of the get you can see that it contains full pots including its",
    "start": "799880",
    "end": "808010"
  },
  {
    "text": "spec including status it's really big now getting back going back to the",
    "start": "808010",
    "end": "815029"
  },
  {
    "text": "policy there are a couple more information that we included in this particular policy we are logging",
    "start": "815029",
    "end": "822220"
  },
  {
    "text": "specific resources we are not logging everything we are very picky and we",
    "start": "822220",
    "end": "827870"
  },
  {
    "text": "define that we only care about the core group and apps group which basically",
    "start": "827870",
    "end": "833390"
  },
  {
    "text": "means every resource that falls in one of those two groups will be logged at",
    "start": "833390",
    "end": "840260"
  },
  {
    "text": "the request response level we also overridden the default the global ahmud",
    "start": "840260",
    "end": "847160"
  },
  {
    "text": "stages policy at this level but specifying all pretty much I think the same the same level going further",
    "start": "847160",
    "end": "855850"
  },
  {
    "start": "854000",
    "end": "854000"
  },
  {
    "text": "Stephan mentioned that earlier that we don't want to lock auditing we don't",
    "start": "855850",
    "end": "862519"
  },
  {
    "text": "know we don't want secrets to be included in any of the other linked events so for that particular purpose",
    "start": "862519",
    "end": "868459"
  },
  {
    "text": "we're going to set the level to metadata and we want to exclude secrets so in",
    "start": "868459",
    "end": "875930"
  },
  {
    "text": "this particular case we are explicitly naming secrets and config maps from the",
    "start": "875930",
    "end": "882140"
  },
  {
    "text": "core group as well as touken reviews from the authentication",
    "start": "882140",
    "end": "887360"
  },
  {
    "text": "case IL group you can see in this example how you can apply a rule to",
    "start": "887360",
    "end": "893210"
  },
  {
    "text": "multiple groups at once and multiple resources if you for example like from",
    "start": "893210",
    "end": "899150"
  },
  {
    "text": "the previous example where we did not specify the resources that meant it applied to every single resource within",
    "start": "899150",
    "end": "906170"
  },
  {
    "text": "the group if you are specifying resources like we are - in this example",
    "start": "906170",
    "end": "911300"
  },
  {
    "text": "that rule applies only to those resources in that particular group of",
    "start": "911300",
    "end": "916550"
  },
  {
    "text": "course you can include multiple groups and multiple resources in every single in every single policy rule but they",
    "start": "916550",
    "end": "924170"
  },
  {
    "text": "will be it's an or in that case okay",
    "start": "924170",
    "end": "932300"
  },
  {
    "text": "going further logging objects at different levels this is one that is very important and where it comes how",
    "start": "932300",
    "end": "939290"
  },
  {
    "start": "933000",
    "end": "933000"
  },
  {
    "text": "the policy overall combines into the",
    "start": "939290",
    "end": "944540"
  },
  {
    "text": "actual logging events that you are getting in your audit so in this particular case we will start with the",
    "start": "944540",
    "end": "952430"
  },
  {
    "text": "non resource URLs which is the example on the right so as you might be familiar",
    "start": "952430",
    "end": "958640"
  },
  {
    "text": "with the majority of the resources are you working with cubes such as jobs",
    "start": "958640",
    "end": "963970"
  },
  {
    "text": "deployments stateful sets pod services and whatnot these are so-called",
    "start": "963970",
    "end": "969710"
  },
  {
    "text": "resources in the cube API there are though some endpoints in the cube API",
    "start": "969710",
    "end": "975650"
  },
  {
    "text": "such as Health's version swagger and a couple more might exist which are not",
    "start": "975650",
    "end": "981380"
  },
  {
    "text": "resources for those there is a specific rule within every single policy that has",
    "start": "981380",
    "end": "988100"
  },
  {
    "text": "named non resource URLs where you explicitly define partic particular URLs",
    "start": "988100",
    "end": "993860"
  },
  {
    "text": "that you want to include in your role so for this particular case we are setting",
    "start": "993860",
    "end": "999110"
  },
  {
    "text": "the level to none which basically means we are not logging any of those URLs",
    "start": "999110",
    "end": "1005440"
  },
  {
    "text": "that are similar to this one the matching is a very simplistic rag axe so",
    "start": "1005440",
    "end": "1012370"
  },
  {
    "text": "you might see a an asterisk at the end of the health and swagger end point now",
    "start": "1012370",
    "end": "1019610"
  },
  {
    "text": "we want to be a little bit more specific how we going to lock resources from the",
    "start": "1019610",
    "end": "1026010"
  },
  {
    "text": "group bat if you compare both of the on the left you've probably noticed that",
    "start": "1026010",
    "end": "1032699"
  },
  {
    "text": "both of them contain resources from the batch group but the difference between",
    "start": "1032699",
    "end": "1038430"
  },
  {
    "text": "the two is that the first one logs at the request level whereas the other one",
    "start": "1038430",
    "end": "1044839"
  },
  {
    "text": "goes all the way down to the request and response level what that it means the",
    "start": "1044839",
    "end": "1053400"
  },
  {
    "text": "first rule applies only to particular verbs and it is important to notice that",
    "start": "1053400",
    "end": "1058500"
  },
  {
    "text": "these verbs are cube verbs and not a HTTP verbs so this is a get which gets a",
    "start": "1058500",
    "end": "1066090"
  },
  {
    "text": "particular object from the batch group this is a list as well as watching",
    "start": "1066090",
    "end": "1071210"
  },
  {
    "text": "watching resources from the batch group and for that particular request we will",
    "start": "1071210",
    "end": "1078960"
  },
  {
    "text": "only lock the request object for other",
    "start": "1078960",
    "end": "1085760"
  },
  {
    "text": "verbs which basically means create update delete because these are not",
    "start": "1085760",
    "end": "1091500"
  },
  {
    "text": "mentioned we will be applying the request response which means not only we",
    "start": "1091500",
    "end": "1097110"
  },
  {
    "text": "will log the phone incoming request but we will also lock the full response",
    "start": "1097110",
    "end": "1104010"
  },
  {
    "text": "object and at this point in time it's also important to notice that when you",
    "start": "1104010",
    "end": "1110430"
  },
  {
    "text": "are composing your policy file the policy matching rules always start at",
    "start": "1110430",
    "end": "1117690"
  },
  {
    "text": "the top so the first match rule will apply to the will apply to the incoming",
    "start": "1117690",
    "end": "1125040"
  },
  {
    "text": "request which basically means when you are composing your your policy file the",
    "start": "1125040",
    "end": "1131490"
  },
  {
    "text": "more the most generic filters should be at the bottom of the file but the very",
    "start": "1131490",
    "end": "1137880"
  },
  {
    "text": "concrete examples the very concrete policies there are targeting specific",
    "start": "1137880",
    "end": "1144200"
  },
  {
    "text": "requests that are only for example get let's watch from the group a batch has to be at top",
    "start": "1144200",
    "end": "1151980"
  },
  {
    "text": "so it's very important to note here that we are always processing top to bottom",
    "start": "1151980",
    "end": "1157500"
  },
  {
    "text": "the policy file one more example aside from matching by resource by",
    "start": "1157500",
    "end": "1166080"
  },
  {
    "text": "matching by the actions performed by non URLs we can also go all the way up to",
    "start": "1166080",
    "end": "1172560"
  },
  {
    "text": "matching by either a group of users or a user particularly in this particular",
    "start": "1172560",
    "end": "1178020"
  },
  {
    "text": "case on the slide we are matching a user that is named not a user and we are",
    "start": "1178020",
    "end": "1184800"
  },
  {
    "text": "vlogging the entire requests and response of every single action this",
    "start": "1184800",
    "end": "1191160"
  },
  {
    "text": "particular user is performing similarly we can specify a group a group of users",
    "start": "1191160",
    "end": "1202250"
  },
  {
    "text": "yeah after policy and what we collect the big question is how to integrate",
    "start": "1204290",
    "end": "1210060"
  },
  {
    "text": "that with your infrastructure everything we are talking about here it's just in the API server at the moment so",
    "start": "1210060",
    "end": "1216420"
  },
  {
    "text": "obviously those things are configured as flex and the IPS API server so I listed",
    "start": "1216420",
    "end": "1222360"
  },
  {
    "text": "them here I guess you cannot with them they are like 20 30 maybe there are so",
    "start": "1222360",
    "end": "1228900"
  },
  {
    "text": "many because we have different backends and each back-end has the same configurations basically what you do is",
    "start": "1228900",
    "end": "1235260"
  },
  {
    "start": "1234000",
    "end": "1234000"
  },
  {
    "text": "I think we saw it before maybe is the first flag which is important as to give the yeah in the case of logging gives",
    "start": "1235260",
    "end": "1242400"
  },
  {
    "text": "the pairs of a file or stand out if we like that and in the case of a web hook you can just configure Zaku config and",
    "start": "1242400",
    "end": "1248730"
  },
  {
    "text": "just by doing that you enable a back-end you enable so auditing after that you",
    "start": "1248730",
    "end": "1253920"
  },
  {
    "text": "have an audit output you can configure certain things some are common for all",
    "start": "1253920",
    "end": "1260540"
  },
  {
    "text": "of the back and some are not and one which is crucial is a mode so we had",
    "start": "1260540",
    "end": "1267840"
  },
  {
    "text": "stages we had levels before and the mode is a cert I mentioned we are talking",
    "start": "1267840",
    "end": "1274320"
  },
  {
    "text": "about events and events which are sent somewhere or maybe printed out this",
    "start": "1274320",
    "end": "1279450"
  },
  {
    "text": "sounds like it magically happens what happens when an API server dies for example so there's a back-end API server",
    "start": "1279450",
    "end": "1285990"
  },
  {
    "text": "and maybe an attacker tries to use a security exploit and he knows how to",
    "start": "1285990",
    "end": "1291750"
  },
  {
    "text": "kill the API server maybe he is able to do something malicious and kills a API",
    "start": "1291750",
    "end": "1298410"
  },
  {
    "text": "server just after that and you have no clue about what he did because there's no auditing being persisted on disk and",
    "start": "1298410",
    "end": "1306230"
  },
  {
    "text": "this mode is exactly about that we have",
    "start": "1306230",
    "end": "1311490"
  },
  {
    "text": "three modes batch blocking and blocking strict blocking strict means that we",
    "start": "1311490",
    "end": "1316740"
  },
  {
    "text": "really wait for i/o to happen we wait until the lock is really out so the",
    "start": "1316740",
    "end": "1322710"
  },
  {
    "text": "output the sweida finished in the case of the red hook we really wait until the web hook returns hgp code so the",
    "start": "1322710",
    "end": "1330240"
  },
  {
    "text": "response is finished the sounds very very good so it's it's pretty sure that",
    "start": "1330240",
    "end": "1336180"
  },
  {
    "text": "your audit event is stored before the request as really handled but it's slow",
    "start": "1336180",
    "end": "1342870"
  },
  {
    "text": "because it's synchronous so it slows down the whole yeah it's a main code",
    "start": "1342870",
    "end": "1347970"
  },
  {
    "text": "part of the API server so your request has to wait until all the thing is really done depending on the use cases",
    "start": "1347970",
    "end": "1354300"
  },
  {
    "text": "environments this is what you want because all thing is so important that it's yeah this mode is the one you want",
    "start": "1354300",
    "end": "1361760"
  },
  {
    "text": "this to it means if auditing fails the request is rejected so if the audit",
    "start": "1361760",
    "end": "1368820"
  },
  {
    "text": "event cannot be written to disk or set to the web hook so the request will not succeed the second one is just blocking",
    "start": "1368820",
    "end": "1375840"
  },
  {
    "text": "it's the synchronous so there's the blocking behavior but if the auditing system goes down just as a system still",
    "start": "1375840",
    "end": "1383210"
  },
  {
    "text": "is working and the last one is betch betch means that events are collected in",
    "start": "1383210",
    "end": "1390270"
  },
  {
    "text": "memory and sent to the web poke impetuous like a thousand events so it",
    "start": "1390270",
    "end": "1396660"
  },
  {
    "text": "waits for a thousand events or maybe a time mode you can configure that it may be it collects up to ten seconds and",
    "start": "1396660",
    "end": "1404160"
  },
  {
    "text": "then sends it to the audits back book those things you can configure so on the on the slide before you will find those",
    "start": "1404160",
    "end": "1410790"
  },
  {
    "text": "options there if you really look into the details there obviously if the APS are precious you",
    "start": "1410790",
    "end": "1417810"
  },
  {
    "text": "might have lost a couple of events so depending on your environment you have to decide what to do all this supports",
    "start": "1417810",
    "end": "1425070"
  },
  {
    "text": "graceful shutdown so if you have API server holding update this mechanism",
    "start": "1425070",
    "end": "1432110"
  },
  {
    "text": "knows auditing and it's weights on to the web who really has gotten all the events in memory so graceful termination",
    "start": "1432110",
    "end": "1439110"
  },
  {
    "text": "just works fine if you use the batch mode for for auditing so I said it's a",
    "start": "1439110",
    "end": "1446850"
  },
  {
    "text": "certain engine which gives us this nice picture so again you have stages which is a point in time when events are sent",
    "start": "1446850",
    "end": "1453990"
  },
  {
    "text": "never the depths and now we have the backend which gives you something like consistency or something in this",
    "start": "1453990",
    "end": "1460290"
  },
  {
    "text": "direction okay I've mentioned before",
    "start": "1460290",
    "end": "1466650"
  },
  {
    "start": "1462000",
    "end": "1462000"
  },
  {
    "text": "that I'll shortly describe the dynamic",
    "start": "1466650",
    "end": "1472530"
  },
  {
    "text": "audit configuration so what are the current problem with the defining the",
    "start": "1472530",
    "end": "1477930"
  },
  {
    "text": "policy the policy is read only once on the start of the server so with the",
    "start": "1477930",
    "end": "1484710"
  },
  {
    "text": "current approach of how we allow users to define see are these or dynamically",
    "start": "1484710",
    "end": "1491250"
  },
  {
    "text": "configure the functionality of the API server it is always changing the",
    "start": "1491250",
    "end": "1498210"
  },
  {
    "text": "functionality available in the API server those the administrators needs to be able to respond to the changes by",
    "start": "1498210",
    "end": "1505350"
  },
  {
    "text": "changing the audit configuration unfortunately currently it is the only",
    "start": "1505350",
    "end": "1510570"
  },
  {
    "text": "possible way to respond to such a change is by updating the file on a disk and",
    "start": "1510570",
    "end": "1516350"
  },
  {
    "text": "restarting the cube API server which obviously is a painful process that's",
    "start": "1516350",
    "end": "1521850"
  },
  {
    "text": "why we come up with the dynamic other configuration option since this is an",
    "start": "1521850",
    "end": "1526980"
  },
  {
    "text": "alpha feature in 113 you need to be explicit that you want to use this feature that's why we have the - - audit",
    "start": "1526980",
    "end": "1534530"
  },
  {
    "text": "dynamic configuration which tells the mecca the audit mechanism that yes I am",
    "start": "1534530",
    "end": "1540330"
  },
  {
    "text": "aware of the that this is an alpha feature but I still want to give it a try",
    "start": "1540330",
    "end": "1546740"
  },
  {
    "text": "when you do so you create an object which is an audit saying our audit",
    "start": "1546740",
    "end": "1552800"
  },
  {
    "text": "registration that cait's that iov one alpha one within which you specify the",
    "start": "1552800",
    "end": "1558020"
  },
  {
    "text": "policy and the source where the data are flowing from the from the dynamic order",
    "start": "1558020",
    "end": "1566330"
  },
  {
    "text": "configuration as you probably notice the current policy rules for the dynamic",
    "start": "1566330",
    "end": "1573559"
  },
  {
    "text": "audit configuration are very simplistic like I said this is an alpha feature so",
    "start": "1573559",
    "end": "1579230"
  },
  {
    "text": "very early stage that we landed in for 113 it only allows very simplistic",
    "start": "1579230",
    "end": "1587140"
  },
  {
    "text": "policies we are hardly working on making it more efficient so that it can have",
    "start": "1587140",
    "end": "1592730"
  },
  {
    "text": "the exact same mechanisms the as the regular audit mechanism that we",
    "start": "1592730",
    "end": "1600170"
  },
  {
    "text": "currently have okay so before we close",
    "start": "1600170",
    "end": "1607040"
  },
  {
    "start": "1603000",
    "end": "1603000"
  },
  {
    "text": "there are a couple of references that we want to point you to so the first one is",
    "start": "1607040",
    "end": "1612320"
  },
  {
    "text": "the actual design that the second one is the design proposal that Stefan and I",
    "start": "1612320",
    "end": "1618770"
  },
  {
    "text": "wrote two years ago about how the audit works you can check it out it contains",
    "start": "1618770",
    "end": "1624770"
  },
  {
    "text": "we spent numerous hours trying to cover all the possible use cases it is a good",
    "start": "1624770",
    "end": "1632420"
  },
  {
    "text": "starting pose also for for understanding how the auditing mechanism work there is",
    "start": "1632420",
    "end": "1638150"
  },
  {
    "text": "a very good documentation about auditing including the the description how to",
    "start": "1638150",
    "end": "1643550"
  },
  {
    "text": "create those policies that we were discussing earlier today there's the cap",
    "start": "1643550",
    "end": "1649220"
  },
  {
    "text": "which falls under SiC auth currently which describes how they are dynamic",
    "start": "1649220",
    "end": "1655309"
  },
  {
    "text": "auditing configuration will work in the future releases if you're interested in helping out feel free to reach out to us",
    "start": "1655309",
    "end": "1662960"
  },
  {
    "text": "feel free to reach out to check off we're more than happy to help people get",
    "start": "1662960",
    "end": "1668720"
  },
  {
    "text": "started to help you help us with enhancing those features finally as a",
    "start": "1668720",
    "end": "1675980"
  },
  {
    "text": "very interesting point to note Jordan late wrote a tool which is added to our back",
    "start": "1675980",
    "end": "1683509"
  },
  {
    "text": "so currently if you enable Arabic it is very hard to figure out what you",
    "start": "1683509",
    "end": "1688820"
  },
  {
    "text": "actually want to do what should be the are back policies for example for your",
    "start": "1688820",
    "end": "1694159"
  },
  {
    "text": "app for your new application with auditing it is very simple in this tool",
    "start": "1694159",
    "end": "1699529"
  },
  {
    "text": "to generate a policy that will be specifically designed for your application all you need to do is enable",
    "start": "1699529",
    "end": "1706279"
  },
  {
    "text": "the default auditing which will just log the entire data at the metadata level if",
    "start": "1706279",
    "end": "1712609"
  },
  {
    "text": "I remember correctly and then run your application the application will get",
    "start": "1712609",
    "end": "1717619"
  },
  {
    "text": "rejects which rejects are then processed by Jordan tool and based on the rejects",
    "start": "1717619",
    "end": "1724190"
  },
  {
    "text": "he's able to create proper Arabic rules if you do a couple iteration you will",
    "start": "1724190",
    "end": "1729950"
  },
  {
    "text": "get a very nice very detailed policy tailored specifically for your",
    "start": "1729950",
    "end": "1734960"
  },
  {
    "text": "application takeaways yeah takeaways",
    "start": "1734960",
    "end": "1740679"
  },
  {
    "text": "sweet dimensions we went into that very much back-end options logging and web",
    "start": "1740679",
    "end": "1748159"
  },
  {
    "text": "hooks those are the two options and hopefully soon we will have certain Eric one also be epic of course but yeah it's",
    "start": "1748159",
    "end": "1756580"
  },
  {
    "text": "dynamically configurable via as a cluster API and the last thing is a",
    "start": "1756580",
    "end": "1762619"
  },
  {
    "text": "policy so those are the components you have to understand to really employ auditing yeah and one thing to add if",
    "start": "1762619",
    "end": "1771349"
  },
  {
    "text": "you are in a environment where you have regulations for example and you have",
    "start": "1771349",
    "end": "1776929"
  },
  {
    "text": "requirements for auditing which we don't fulfill yet feel free to come to us and",
    "start": "1776929",
    "end": "1782869"
  },
  {
    "text": "talk to us yeah this feedback I mean we can block a lot we can extend event",
    "start": "1782869",
    "end": "1790749"
  },
  {
    "text": "according to requirements so we need feedback from real applications of",
    "start": "1790749",
    "end": "1795830"
  },
  {
    "text": "auditing so come to us and speak to us would be very very welcome yeah both",
    "start": "1795830",
    "end": "1800989"
  },
  {
    "text": "stefan and i are available on cube slack or on github just ping",
    "start": "1800989",
    "end": "1806029"
  },
  {
    "text": "either one of us and we're more than happy to help you with the problems that you have with auditing thank you very",
    "start": "1806029",
    "end": "1812479"
  },
  {
    "text": "much [Applause]",
    "start": "1812479",
    "end": "1819059"
  }
]