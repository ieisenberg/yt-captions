[
  {
    "text": "okay so um we are going to together actually architect a dynamic internal developer",
    "start": "240",
    "end": "6180"
  },
  {
    "text": "platform um and so first of all I want to quickly speak about the making of of this reference architectures what problems we",
    "start": "6180",
    "end": "12540"
  },
  {
    "text": "aim to solve the design principles that we applied and we're going to go to the actual design and then I'm going to like",
    "start": "12540",
    "end": "18480"
  },
  {
    "text": "a dry run walk through if you want and um I've asked",
    "start": "18480",
    "end": "24600"
  },
  {
    "text": "um in the top platform con for our live conference we're expecting up to 20 000 people this year I've really asked",
    "start": "24600",
    "end": "32220"
  },
  {
    "text": "um all the speakers hey please focus on reference architecture so I hope there are a lot more reference architectures",
    "start": "32220",
    "end": "37680"
  },
  {
    "text": "coming we had 500 subscription 500 proposals for talks I think we accepted",
    "start": "37680",
    "end": "42840"
  },
  {
    "text": "100 so super excited about that make sure you have a look at this as well so um again",
    "start": "42840",
    "end": "48300"
  },
  {
    "text": "um I talked about that McKinsey is working on this um starting with Amazon and then we have a lot of others coming but there are a lot of different",
    "start": "48300",
    "end": "55520"
  },
  {
    "text": "Enterprises and actual platforms that we looked at um for that and we've used common",
    "start": "55520",
    "end": "61379"
  },
  {
    "text": "patterns and um I think it's worth noticing that we have an like a like a",
    "start": "61379",
    "end": "67920"
  },
  {
    "text": "size buyers right so those architectures are designed for teams with app tool",
    "start": "67920",
    "end": "73080"
  },
  {
    "text": "with not up to you know thousands of users but from you know minimum 50 users rather 100",
    "start": "73080",
    "end": "81299"
  },
  {
    "text": "users onwards so if you're like a cool startup and you're just starting off and",
    "start": "81299",
    "end": "86820"
  },
  {
    "text": "you're fresh and standardization doesn't matter please use first cell or Heroku um but other than that this is actually",
    "start": "86820",
    "end": "93000"
  },
  {
    "text": "I think something pretty cool okay um let's go ahead what are the problems that we wanted to",
    "start": "93000",
    "end": "99240"
  },
  {
    "text": "um solve um the usual things that why we're doing platform engineering we have long lead",
    "start": "99240",
    "end": "105060"
  },
  {
    "text": "times it just takes too long time to Market we're in a recession it needs to",
    "start": "105060",
    "end": "110220"
  },
  {
    "text": "go faster uh other otherwise executives are set and then we have too much ticket ops and we have high cost of Maintenance",
    "start": "110220",
    "end": "116579"
  },
  {
    "text": "and we have overwhelmed developers and we have waiting times and we've missing self-service and that's because our",
    "start": "116579",
    "end": "123240"
  },
  {
    "text": "setup is unstructured it's because we have too many versions of postgres and we need to maintain them and we have too",
    "start": "123240",
    "end": "128580"
  },
  {
    "text": "many files here and too many terraform files and the communication doesn't work all of these things and now we want to",
    "start": "128580",
    "end": "135239"
  },
  {
    "text": "get into a situation with low lead time and we want to have a high degree of sanitization I cannot say that enough",
    "start": "135239",
    "end": "140459"
  },
  {
    "text": "that's that's the key thing here we need to Design Systems we're getting to get into the design principles that drive",
    "start": "140459",
    "end": "146220"
  },
  {
    "text": "standardization by Design we want to have to a certain degree and many people have crucified me for this",
    "start": "146220",
    "end": "152879"
  },
  {
    "text": "but we want to have a certain degree of separation of concern yes ownership of the services yes to a certain degree you",
    "start": "152879",
    "end": "159540"
  },
  {
    "text": "build it you run it but separation of concern is nothing to be afraid of abstractions are nothing to be afraid of",
    "start": "159540",
    "end": "165000"
  },
  {
    "text": "as long as you don't take context and then we want to have self-service and um that is another principle here okay",
    "start": "165000",
    "end": "172860"
  },
  {
    "text": "um the um yeah exactly um and so",
    "start": "172860",
    "end": "179280"
  },
  {
    "text": "um the um uh the the the sequencing if you want",
    "start": "179280",
    "end": "185459"
  },
  {
    "text": "and it took me a while to understand this you want to be able to dynamically generate configurations we want to have",
    "start": "185459",
    "end": "192120"
  },
  {
    "text": "however you do this but we want to have and I'm going to explain what that means a design that is able to dynamically",
    "start": "192120",
    "end": "198720"
  },
  {
    "text": "generate application infrastructure configurations with every deployment because the drive standardization by",
    "start": "198720",
    "end": "205500"
  },
  {
    "text": "design by doing this we enable all of these things self-service eliminate ticket ops golden paths and I'm going to",
    "start": "205500",
    "end": "211920"
  },
  {
    "text": "be very concrete it's another little bit of passwords but I'm going to be very concrete and because of this we're",
    "start": "211920",
    "end": "217200"
  },
  {
    "text": "slashing a time so this is actually sort of the logical thing here I want to make sure that we give the right people",
    "start": "217200",
    "end": "222480"
  },
  {
    "text": "credit because I didn't code this this has been done by uh Stefan Schneider",
    "start": "222480",
    "end": "227700"
  },
  {
    "text": "Mike gato and Marco maruti and I think we'll hear a lot more from them um and um I wanted to insert photos but",
    "start": "227700",
    "end": "234959"
  },
  {
    "text": "I didn't find good photos so we'll probably do that hopefully when we send this out",
    "start": "234959",
    "end": "240239"
  },
  {
    "text": "um what is a reference architecture first of all those are standard patents on how to combine frequently used tools",
    "start": "240239",
    "end": "246480"
  },
  {
    "text": "and design choices we'll have them as visual flow diagrams and you're going to see that now we have that package just",
    "start": "246480",
    "end": "252060"
  },
  {
    "text": "code that's in open sourcing we have white papers on this we can share that and then we are going to have we don't",
    "start": "252060",
    "end": "257400"
  },
  {
    "text": "have that yet tutorials on how to actually interact with them and we're going to do a lot of this cool what are the design principles that",
    "start": "257400",
    "end": "263460"
  },
  {
    "text": "we've implied number one golden paths over cages what does that mean it means very concretely",
    "start": "263460",
    "end": "269280"
  },
  {
    "text": "follow this platform use this if you use this you get certain guarantees if you want to go off the Golden path please do",
    "start": "269280",
    "end": "275460"
  },
  {
    "text": "so opaque abstractions we don't force anybody you can do whatever you want you can go down to the lowest level but then",
    "start": "275460",
    "end": "281759"
  },
  {
    "text": "my friend you're on your own second we want to have standardization by Design what does that concretely mean",
    "start": "281759",
    "end": "287520"
  },
  {
    "text": "by using the system to deploy and deliver your application",
    "start": "287520",
    "end": "293460"
  },
  {
    "text": "we are keeping the degree of standardization as is",
    "start": "293460",
    "end": "300000"
  },
  {
    "text": "or we are improving it by deploying more by adding more",
    "start": "300000",
    "end": "305580"
  },
  {
    "text": "services we are not making it more complex and that's a very very very difficult thing to achieve but that's",
    "start": "305580",
    "end": "311520"
  },
  {
    "text": "what we've tried to apply to you apply here possible through Dynamic overstatic configurations that means rather than",
    "start": "311520",
    "end": "317280"
  },
  {
    "text": "having I don't know terraform home combinations that you need to maintain and they're really clean at day Zero",
    "start": "317280",
    "end": "322919"
  },
  {
    "text": "because you Fork a um something from a service catalog but then they start",
    "start": "322919",
    "end": "328259"
  },
  {
    "text": "derailing through the lifetime of the application through the environments rather than that we treat every day like",
    "start": "328259",
    "end": "333960"
  },
  {
    "text": "this zero if there's anything I want you to take away treat every day like Day Zero regenerate app and infrastructure",
    "start": "333960",
    "end": "340020"
  },
  {
    "text": "configurations with every single deployment and then we want to have code for code first",
    "start": "340020",
    "end": "346759"
  },
  {
    "text": "very important modern Enterprise um we have we want to have we want to",
    "start": "346759",
    "end": "352020"
  },
  {
    "text": "make sure that we have disaster recovery but you want to make sure everything is as code and we never break the workload",
    "start": "352020",
    "end": "357600"
  },
  {
    "text": "of the developer where's the developer in code and it doesn't mean you can't put a user interface on top we're going",
    "start": "357600",
    "end": "363060"
  },
  {
    "text": "to um have that as well and you can do all sorts of fancy things and clis and yada yada yada and I've even advocate for",
    "start": "363060",
    "end": "370620"
  },
  {
    "text": "leaving interface choice but the code needs to be the single source of Truth Okay cool so that's it right this is the",
    "start": "370620",
    "end": "377820"
  },
  {
    "text": "reference architecture um and uh this is a lot of lots of logos",
    "start": "377820",
    "end": "383160"
  },
  {
    "text": "let me say one first thing you can interchange all of the logos um you know you can you can use different",
    "start": "383160",
    "end": "389100"
  },
  {
    "text": "CI power plants you can use five different CI providers you can use three different registry providers you can use",
    "start": "389100",
    "end": "394440"
  },
  {
    "text": "different orchestrators different resource plans it doesn't matter that logical design is all the same",
    "start": "394440",
    "end": "400740"
  },
  {
    "text": "um and we have five layers and for me this was also mckinsey's proposal so you",
    "start": "400740",
    "end": "407039"
  },
  {
    "text": "know I'm piggy banking on their Fame but um they have they they dissected this",
    "start": "407039",
    "end": "412139"
  },
  {
    "text": "into five different control plane layers you have the developer control plane layer which is the interaction between",
    "start": "412139",
    "end": "417300"
  },
  {
    "text": "the developers and platform engineers and everybody with the platform you have the integration delivery plane you have",
    "start": "417300",
    "end": "423840"
  },
  {
    "text": "the resource plane you have the monitoring plane and you have the security plan and what I want to do right now is I",
    "start": "423840",
    "end": "431100"
  },
  {
    "text": "want to go through the different planes explain what they are explain the design",
    "start": "431100",
    "end": "438180"
  },
  {
    "text": "Choice and then what we're going to do as a um in the next step we are actually",
    "start": "438180",
    "end": "443340"
  },
  {
    "text": "going to follow a simple deployment because the unit of",
    "start": "443340",
    "end": "448680"
  },
  {
    "text": "change in this platform is the deployment um so all of these activities always have my deployment time that's",
    "start": "448680",
    "end": "455280"
  },
  {
    "text": "our pulse of business if you want um and that's exactly what we're going to do here that's sort of a couple of",
    "start": "455280",
    "end": "461039"
  },
  {
    "text": "observations we've in this uh reference architecture chose um backstage as a",
    "start": "461039",
    "end": "466080"
  },
  {
    "text": "portal because it's the most commonly used there's another one coming with um gcp and that's using atlassian",
    "start": "466080",
    "end": "473400"
  },
  {
    "text": "Compass which I think is sort of the second big player in that important space not many know it yet but um it's",
    "start": "473400",
    "end": "481560"
  },
  {
    "text": "we're seeing it in more and more cases and it's accelerator really really fast and I'm if you're in the in the",
    "start": "481560",
    "end": "487020"
  },
  {
    "text": "Adolescent ecosystem I'm personally a big fan then we have obviously Version Control we're using score as a workload",
    "start": "487020",
    "end": "492840"
  },
  {
    "text": "specification in this case infrastructure is code with terraform but you could swap that logo with cross plane or polumi or whatever and we have",
    "start": "492840",
    "end": "501840"
  },
  {
    "text": "um GitHub actions here Amazon ECR humanitarism platform orchestrator this",
    "start": "501840",
    "end": "507780"
  },
  {
    "text": "is I think a little misleading and the actual implementation we're using Argo CD which is the most the commonly used",
    "start": "507780",
    "end": "514200"
  },
  {
    "text": "and has much more beef and then you have the Jesus plane they are here and this I",
    "start": "514200",
    "end": "519419"
  },
  {
    "text": "think I've seen a version with with datadog very helpful and this is um hashicorp Cloud evolved again the the",
    "start": "519419",
    "end": "525720"
  },
  {
    "text": "The Usual Suspects cool now let's actually um get a cracking and dissect this so",
    "start": "525720",
    "end": "533279"
  },
  {
    "text": "develop a control plane level and and I we looked at this already a little bit",
    "start": "533279",
    "end": "538440"
  },
  {
    "text": "um obviously let's zoom in um and the first thing that I want to zoom into the thing that not everybody",
    "start": "538440",
    "end": "545160"
  },
  {
    "text": "is using yet um is um yeah this is a little here let's start with this first the workload",
    "start": "545160",
    "end": "550820"
  },
  {
    "text": "specification and the workload specification what is that actually it's",
    "start": "550820",
    "end": "556620"
  },
  {
    "text": "a um General recipe on how my workload relates to dependent resources if you",
    "start": "556620",
    "end": "563220"
  },
  {
    "text": "want it's a general way of explaining my architecture to a system and I'm",
    "start": "563220",
    "end": "568560"
  },
  {
    "text": "explaining this in an environment agnostic way which means that the description is it doesn't matter whether",
    "start": "568560",
    "end": "574320"
  },
  {
    "text": "it's staging or production in any case my in this example python service",
    "start": "574320",
    "end": "579360"
  },
  {
    "text": "depends on a resource of database postgres storage S3 and then type DNS",
    "start": "579360",
    "end": "585180"
  },
  {
    "text": "and then we have a connection string that tells my workload how to connect to my database and I I this is actually how",
    "start": "585180",
    "end": "591420"
  },
  {
    "text": "the score file looks so it's not um I'm depending on that particular RDS",
    "start": "591420",
    "end": "596760"
  },
  {
    "text": "database no we're saying I'm depending on a database of type postgres now there is exactly one score file one",
    "start": "596760",
    "end": "604260"
  },
  {
    "text": "workload specification and you can use score you can use anything else that sort of doesn't matter we're using score because you know it's the open source",
    "start": "604260",
    "end": "610620"
  },
  {
    "text": "project I worked on so I'm in love with it but you know what you can write your own many Enterprises have their own",
    "start": "610620",
    "end": "616380"
  },
  {
    "text": "version of this um and uh you have one of those workload specifications and they sit next to your",
    "start": "616380",
    "end": "622320"
  },
  {
    "text": "workload source code um and um you will then localize them on an environment by environment Basics so",
    "start": "622320",
    "end": "628860"
  },
  {
    "text": "that's the workload specification this is where if you want the developer with every single deployment orders what they",
    "start": "628860",
    "end": "635399"
  },
  {
    "text": "need okay um and then the other interfaces are used in different situations so um and I",
    "start": "635399",
    "end": "642720"
  },
  {
    "text": "listed this and we're going to send it over but um let's actually have a look at and this is not data driven you know",
    "start": "642720",
    "end": "648480"
  },
  {
    "text": "I've I've jotted my my observations done and I would have loved to give you this is against one thousand uh um people but",
    "start": "648480",
    "end": "656220"
  },
  {
    "text": "that's really just what I'm observing so usually for deployment you have your git push flow right terminal IDE then for",
    "start": "656220",
    "end": "663120"
  },
  {
    "text": "configurations and change to configurations you have the workload specification same thing if you want to",
    "start": "663120",
    "end": "668220"
  },
  {
    "text": "add and remove a resource and that's already like a hint now you can actually add a resource by",
    "start": "668220",
    "end": "673560"
  },
  {
    "text": "just saying hey I'm adding another resource definition to the workload specification you can do that on the go and by just doing a git push it will",
    "start": "673560",
    "end": "680700"
  },
  {
    "text": "create that resource and wire this up promote this to the next environment and it will do that in the next environment",
    "start": "680700",
    "end": "686220"
  },
  {
    "text": "so that's the beauty here so this is what we're using for removing resources then for rollbacks and divs because we",
    "start": "686220",
    "end": "692940"
  },
  {
    "text": "have that single source of Truth we would probably use an API CLI a UI resource detail configuration so how is",
    "start": "692940",
    "end": "699720"
  },
  {
    "text": "the conflict of the S3 bucket actually looking definitely infrastructure as code predominant method still terraform",
    "start": "699720",
    "end": "705740"
  },
  {
    "text": "spinning up a new environment by definition if every day is Day Zero you can also do that",
    "start": "705740",
    "end": "711660"
  },
  {
    "text": "um that's definitely API CLI or UI same for logs although that would probably be aggregated as the portal layer I don't",
    "start": "711660",
    "end": "717300"
  },
  {
    "text": "think that this is so correct then the portal the service catalog you would use that if you want to you know search what",
    "start": "717300",
    "end": "724740"
  },
  {
    "text": "microservices we already have we have an inner Source use case has this been done before definitely portable and we have a",
    "start": "724740",
    "end": "731579"
  },
  {
    "text": "service create like a scaffolding cage right so there's usually the portal in combination with the templating",
    "start": "731579",
    "end": "738839"
  },
  {
    "text": "um API of something like GitHub or git GitHub so those are the interfaces and so the answer it it depends what the",
    "start": "738839",
    "end": "745200"
  },
  {
    "text": "user is using and the answer is hey different uses different um choices if",
    "start": "745200",
    "end": "751500"
  },
  {
    "text": "you have a couple of dozen developers some developers like the CLI some developers like to use the code base and",
    "start": "751500",
    "end": "756720"
  },
  {
    "text": "I'm a big fan if you really want to drive adoption the system should be designed in a way that they can actually choose this cool so this is our",
    "start": "756720",
    "end": "764519"
  },
  {
    "text": "um developer control plane layer the next element is the integration and delivery plane and a number of these",
    "start": "764519",
    "end": "771600"
  },
  {
    "text": "things are obviously familiar we have a CI pipeline building the code and then we need to push the code somewhere",
    "start": "771600",
    "end": "779339"
  },
  {
    "text": "um and in that case it's a registry and I'm using ECI here it could be any other and then we have to orchestrate our",
    "start": "779339",
    "end": "785040"
  },
  {
    "text": "component and the orchestrator is basically a configuration file generator like a smart config file generator with",
    "start": "785040",
    "end": "792600"
  },
  {
    "text": "sophisticated R back functionality could deploy could orchestrate infrastructure but could also just call other apis like",
    "start": "792600",
    "end": "799320"
  },
  {
    "text": "call terraform Enterprise call um I don't know hand over to Argos CD whatever but the job of the orchestrator",
    "start": "799320",
    "end": "806040"
  },
  {
    "text": "is to read that score file and say hey okay well where are you deploying to environment of type staging well perfect",
    "start": "806040",
    "end": "812459"
  },
  {
    "text": "let me dig up what database to wire you or what to create for you create the app",
    "start": "812459",
    "end": "817680"
  },
  {
    "text": "configs um pull the secrets and then actually hand over to deploy to deploy itself so",
    "start": "817680",
    "end": "823380"
  },
  {
    "text": "that's the integration and delivery plane let's go to the next element the resource control plan also comparably",
    "start": "823380",
    "end": "831600"
  },
  {
    "text": "um straightforward what we uh um what we have here those are the infrastructure components you're using",
    "start": "831600",
    "end": "837779"
  },
  {
    "text": "um today in this example so out of the box this platform is good just to give you a",
    "start": "837779",
    "end": "843480"
  },
  {
    "text": "couple of examples is um spinning up an eks cluster and then you know you can order namespaces or whatever you have",
    "start": "843480",
    "end": "851040"
  },
  {
    "text": "um RDS as a database Route 53 Amazon sqs but the design of this architecture",
    "start": "851040",
    "end": "856800"
  },
  {
    "text": "allows you to really genuinely use whatever you want you can use",
    "start": "856800",
    "end": "862980"
  },
  {
    "text": "um you know you can have your postgres running on a VM in a basement of your grandmother that you've never looked at",
    "start": "862980",
    "end": "868740"
  },
  {
    "text": "in um ages and you can wire this app anything that can you know construct a",
    "start": "868740",
    "end": "874440"
  },
  {
    "text": "uh you know has an API basically is something you can you can wire here so that's the resource and control plane",
    "start": "874440",
    "end": "881699"
  },
  {
    "text": "and because we are applying Dynamic configuration management it's totally possible to have",
    "start": "881699",
    "end": "888899"
  },
  {
    "text": "many Cloud Estates so another thing that's coming out is um this in a multi-cloud example",
    "start": "888899",
    "end": "895440"
  },
  {
    "text": "um multi-cloud or multi-cluster in this case doesn't really you know it is that much of a difference",
    "start": "895440",
    "end": "901980"
  },
  {
    "text": "then um because the actual configurations are created with every deployment the configurations are",
    "start": "901980",
    "end": "908399"
  },
  {
    "text": "created against the target environment so that means if you're deploying to",
    "start": "908399",
    "end": "914940"
  },
  {
    "text": "um Amazon or you're deploying to Google you know it doesn't matter that much because that's going to be localized and",
    "start": "914940",
    "end": "922620"
  },
  {
    "text": "um what this also supports is fairly complicated",
    "start": "922620",
    "end": "929399"
  },
  {
    "text": "um resource combination orchestration if you want so let's say",
    "start": "929399",
    "end": "935459"
  },
  {
    "text": "give you an example the developer in the score file says hey I need DNS well what that actually means in the",
    "start": "935459",
    "end": "943740"
  },
  {
    "text": "real world is yeah you need DNS you probably also need a certificate issued right and you know you need in Ingress",
    "start": "943740",
    "end": "950339"
  },
  {
    "text": "and that means that simple request DNS if we would just translate that that wouldn't be enough so we that that would",
    "start": "950339",
    "end": "959279"
  },
  {
    "text": "actually create a cyclic resource graph and sequence the creation of these elements so they're actually ready in",
    "start": "959279",
    "end": "966420"
  },
  {
    "text": "combination um which also allows you to then QA this better and operate against this uh more",
    "start": "966420",
    "end": "974160"
  },
  {
    "text": "more sustainably in its game so that's the resource control plane again um then we have the monitoring and logging",
    "start": "974160",
    "end": "982980"
  },
  {
    "text": "plane and here this is too simple so actually if you know if I have a couple of areas",
    "start": "982980",
    "end": "988800"
  },
  {
    "text": "where I think we need to improve this um that's definitely the monitoring and logging claim because the reality is you",
    "start": "988800",
    "end": "994440"
  },
  {
    "text": "have APM right you want to see what's going on in my infrastructure you have a whole topic around error messaging so",
    "start": "994440",
    "end": "1001220"
  },
  {
    "text": "how do you surface errors from different infrastructure components centrally you",
    "start": "1001220",
    "end": "1007220"
  },
  {
    "text": "have a whole conversation around um how do you Center like stream",
    "start": "1007220",
    "end": "1012680"
  },
  {
    "text": "centralized the elements of the or the outputs of the workflow how is CD",
    "start": "1012680",
    "end": "1018680"
  },
  {
    "text": "performing um are there any sign-offs that need to happen",
    "start": "1018680",
    "end": "1024500"
  },
  {
    "text": "um all of these things need to actually be aggregated and that's a pretty non-trivial task so actually here you",
    "start": "1024500",
    "end": "1030558"
  },
  {
    "text": "need more and then you probably want to aggregate that on an orchestrator API level or on a portal level so that's",
    "start": "1030559",
    "end": "1037339"
  },
  {
    "text": "actually easier to consume um for the for the for for the user so that's the monitoring and logging plan",
    "start": "1037339",
    "end": "1043880"
  },
  {
    "text": "you know pretty much you want to have the observability tied in you probably if you're creating creating",
    "start": "1043880",
    "end": "1051200"
  },
  {
    "text": "the app conflicts with every single deployment you know you can enforce the use of sidecars uh labels and",
    "start": "1051200",
    "end": "1056240"
  },
  {
    "text": "annotations make sure that you really have good coverage here and make sure",
    "start": "1056240",
    "end": "1061400"
  },
  {
    "text": "you can actually centrally pull in all the locks on a workload by workload basis and really see what's what's going",
    "start": "1061400",
    "end": "1067100"
  },
  {
    "text": "on so that's either monitoring and logging plane and then there's the next element where I think you know real life",
    "start": "1067100",
    "end": "1072860"
  },
  {
    "text": "is a lot more complex the security plan you know now Secrets management with with world but then you",
    "start": "1072860",
    "end": "1080000"
  },
  {
    "text": "know we often have policy systems compliance based translator elements",
    "start": "1080000",
    "end": "1085220"
  },
  {
    "text": "that say well in this situation you need to create a ticket and it needs to be",
    "start": "1085220",
    "end": "1090320"
  },
  {
    "text": "approved and it goes into production so I think all of those things also need to find their way in so this is heavily",
    "start": "1090320",
    "end": "1097220"
  },
  {
    "text": "simplified but a good good starting point I think yeah so now those are all of these",
    "start": "1097220",
    "end": "1103280"
  },
  {
    "text": "um different elements and now what I actually want to do let's quickly go",
    "start": "1103280",
    "end": "1108320"
  },
  {
    "text": "back to our beautiful overview graphic here I want to actually follow a",
    "start": "1108320",
    "end": "1115220"
  },
  {
    "text": "deployment our unit our rhythm of business all the way from the git push down to the running",
    "start": "1115220",
    "end": "1123260"
  },
  {
    "text": "um application to the configured resources um and before we do that I want you to",
    "start": "1123260",
    "end": "1129980"
  },
  {
    "text": "understand that again that idea of dynamic configuration management and 9 out of 10 people when they say yeah I",
    "start": "1129980",
    "end": "1137120"
  },
  {
    "text": "get Dynamic configuration management now don't really get it because it's very different to the approach that we've",
    "start": "1137120",
    "end": "1143000"
  },
  {
    "text": "been uh you know approaching for a for a good decade or so so let's go through",
    "start": "1143000",
    "end": "1149720"
  },
  {
    "text": "this again I think about Dynamic configuration management as an asynchronous love",
    "start": "1149720",
    "end": "1155240"
  },
  {
    "text": "affair between platform engineering and application developers which is um such an unsatisfying",
    "start": "1155240",
    "end": "1162679"
  },
  {
    "text": "um experience right having an asynchronous love affair but um that's really what it is so do",
    "start": "1162679",
    "end": "1169580"
  },
  {
    "text": "um you have that abstract description of the world hey I'm a developer I have a",
    "start": "1169580",
    "end": "1175480"
  },
  {
    "text": "workload it depends on a database of type posters I'm describing what I need",
    "start": "1175480",
    "end": "1180740"
  },
  {
    "text": "now I'm sending that through my CI Pipeline and by doing that by definition",
    "start": "1180740",
    "end": "1187760"
  },
  {
    "text": "I'm indicating a context you know otherwise that that couldn't build so it's a tag or and then I have a matching",
    "start": "1187760",
    "end": "1194780"
  },
  {
    "text": "criteria I'm deploying to an environment of type staging I'm deploying to an environment of type production this is",
    "start": "1194780",
    "end": "1201860"
  },
  {
    "text": "an ephemeral environment I have an app ID I have a test ID I I have an end IDM",
    "start": "1201860",
    "end": "1207799"
  },
  {
    "text": "you got the grill so there's some sort of indication of context how we're doing",
    "start": "1207799",
    "end": "1213200"
  },
  {
    "text": "the indication you know subject to the specific respective organization and whatever but we have a context now I'm",
    "start": "1213200",
    "end": "1220820"
  },
  {
    "text": "sending the context it's making its way through CI and I would do that if I've applied a change to a workload",
    "start": "1220820",
    "end": "1227780"
  },
  {
    "text": "and source code and um with every deployment I've used that sentence a lot",
    "start": "1227780",
    "end": "1233600"
  },
  {
    "text": "but it's also very important with every deployment the score file is making its way through my ICI Pipeline and it hits",
    "start": "1233600",
    "end": "1240140"
  },
  {
    "text": "the orchestrator and now the orchestrator is performing an rmcd execution pattern and it's",
    "start": "1240140",
    "end": "1247100"
  },
  {
    "text": "called rmcd because of the song YMCA that's actually the only reason because",
    "start": "1247100",
    "end": "1252799"
  },
  {
    "text": "why MCA you always remember this and then you think about rmcd and it's easy to remember and you have the Tunes in",
    "start": "1252799",
    "end": "1259100"
  },
  {
    "text": "your your ears and rmcd means read match create deploy I'm reading the file and",
    "start": "1259100",
    "end": "1267620"
  },
  {
    "text": "the orchestrator says oh there is a file and because we treat every day like day Zero the orchestrator has no Prejudice",
    "start": "1267620",
    "end": "1274340"
  },
  {
    "text": "so the orchestra thinks let me read that file and figure out what that workload needs and read the file figures out only",
    "start": "1274340",
    "end": "1280460"
  },
  {
    "text": "supposed to need to DNS needs an S3 okay fine now next step read match match",
    "start": "1280460",
    "end": "1286460"
  },
  {
    "text": "what's the context and the orchestra again looks at the metadata and says oh yeah this is an",
    "start": "1286460",
    "end": "1292159"
  },
  {
    "text": "environment where this is a deployment to an environment of type staging well let me look make a look up what the",
    "start": "1292159",
    "end": "1298940"
  },
  {
    "text": "platform engineering team wants me to use in that circumstance now let's say in that case we say oh",
    "start": "1298940",
    "end": "1305780"
  },
  {
    "text": "this is just a deployment to development I just want you to use the there is",
    "start": "1305780",
    "end": "1311000"
  },
  {
    "text": "already like a postgres database and I don't want you to create a new one I just want you to route to the existing one",
    "start": "1311000",
    "end": "1316159"
  },
  {
    "text": "okay says the orchestrator I'm going to go over to the next stage the create stage in the create stage we're going to",
    "start": "1316159",
    "end": "1322460"
  },
  {
    "text": "say okay we'll create application and application configurations by applying that workload to Baseline configs you",
    "start": "1322460",
    "end": "1329000"
  },
  {
    "text": "know think of them like empty Helm charts and then we are actually going to create or wire existing infrastructure",
    "start": "1329000",
    "end": "1335419"
  },
  {
    "text": "components in the very trivial case we'll just reach out to the Amazon API and fetch the latest credentials and",
    "start": "1335419",
    "end": "1341600"
  },
  {
    "text": "then inject them through Secrets at runtime into the Container um or in the more complex case we're",
    "start": "1341600",
    "end": "1347960"
  },
  {
    "text": "going to do Advanced um resource a cyclic resource graphs and",
    "start": "1347960",
    "end": "1353299"
  },
  {
    "text": "we'll do all sorts of procedures in the background and then we'll we'll route everything up",
    "start": "1353299",
    "end": "1358840"
  },
  {
    "text": "now um then there's the deployment stage at the deployment stage we again have you",
    "start": "1358840",
    "end": "1365120"
  },
  {
    "text": "know you guessed it code files and those code files can sit in a repository and then something like Argo can take over",
    "start": "1365120",
    "end": "1372440"
  },
  {
    "text": "um or um we're handing over to other orchestration things all your orchestrator can do that in-house if you",
    "start": "1372440",
    "end": "1378500"
  },
  {
    "text": "want you know that depends on the um on the on the systems you're using but in the end that's what we have every",
    "start": "1378500",
    "end": "1385340"
  },
  {
    "text": "single deployment we are dynamically regeneration configurations and we have that hot",
    "start": "1385340",
    "end": "1390940"
  },
  {
    "text": "juicy as synchronous love affair between platform engineering and application Developers",
    "start": "1390940",
    "end": "1396440"
  },
  {
    "text": "good and what we're going to do now is and that's like a world premiere we are",
    "start": "1396440",
    "end": "1401840"
  },
  {
    "text": "actually going to look at a golden path so um a golden path is something that the",
    "start": "1401840",
    "end": "1409460"
  },
  {
    "text": "developers can use and if they stay on this they get certain guarantees and I want to show you the first golden path",
    "start": "1409460",
    "end": "1414799"
  },
  {
    "text": "now and it's a golden path that's so trivial and trivial you'll think what the",
    "start": "1414799",
    "end": "1420919"
  },
  {
    "text": "Casper my GitHub actions can do that today what are you talking about it's deployment to development nothing is",
    "start": "1420919",
    "end": "1428480"
  },
  {
    "text": "special about deploying to development really like nothing but by taking the most trivial case you'll get you you're",
    "start": "1428480",
    "end": "1435980"
  },
  {
    "text": "getting understanding on how this actually works and pans out and you will understand",
    "start": "1435980",
    "end": "1441620"
  },
  {
    "text": "even in that trivial case what is the beauty of standardization by Design okay",
    "start": "1441620",
    "end": "1447200"
  },
  {
    "text": "so we're deploying to development we've applied the change to our little python service nothing special git push let's",
    "start": "1447200",
    "end": "1455299"
  },
  {
    "text": "let's let it run our workload specification also runs because it's always uh being sent and",
    "start": "1455299",
    "end": "1462200"
  },
  {
    "text": "um we now have the context the context environment equals development environment type actually equals",
    "start": "1462200",
    "end": "1467780"
  },
  {
    "text": "development and then we are going to hit at some point we orchestrator component",
    "start": "1467780",
    "end": "1473000"
  },
  {
    "text": "and the orchestrator is thinking it's June read match create deploy rncd it's",
    "start": "1473000",
    "end": "1478280"
  },
  {
    "text": "reading this it's matching the context it's creating the configs it's configuring the resources in this case",
    "start": "1478280",
    "end": "1483620"
  },
  {
    "text": "it's really just reaching out because the resources are already there and then it's deploying and we have our clusters",
    "start": "1483620",
    "end": "1489500"
  },
  {
    "text": "configured and everything is wired and everybody's happy now again you're looking at this and",
    "start": "1489500",
    "end": "1494720"
  },
  {
    "text": "saying okay well great you know whatever you have the performance to development congratulations well the thing is",
    "start": "1494720",
    "end": "1501380"
  },
  {
    "text": "while this is the case there are like a ton of things that could have changed under the hood let me give you a couple",
    "start": "1501380",
    "end": "1506659"
  },
  {
    "text": "of examples um you might have changed the labels and annotations that you wanted in workloads",
    "start": "1506659",
    "end": "1512000"
  },
  {
    "text": "right you might want a different side card you might want to update postgres version 14 from to postgres version 15.",
    "start": "1512000",
    "end": "1520340"
  },
  {
    "text": "you have different I can give you like hundreds of examples now in the normal",
    "start": "1520340",
    "end": "1526340"
  },
  {
    "text": "world you would send out a request to all developers can you please update that and then after a week you would do",
    "start": "1526340",
    "end": "1531440"
  },
  {
    "text": "this again and Nobody Does it and then um after four weeks you ask your CTO to send the email it's like we've all done",
    "start": "1531440",
    "end": "1537320"
  },
  {
    "text": "that a couple of times now in this world all you change is the Baseline",
    "start": "1537320",
    "end": "1542480"
  },
  {
    "text": "configuration and then with the next deployment these things are dynamically flowing in",
    "start": "1542480",
    "end": "1549080"
  },
  {
    "text": "standardization by design by just using the system it is standardizing itself so",
    "start": "1549080",
    "end": "1555080"
  },
  {
    "text": "that's the beauty and now because we are dynamically creating stuff we can actually take this",
    "start": "1555080",
    "end": "1560960"
  },
  {
    "text": "to the next level and we can go into the scaffolding workflows and we can go into the creation of a new environment for",
    "start": "1560960",
    "end": "1567559"
  },
  {
    "text": "instance and let's actually do this and this is my golden path scenario number two",
    "start": "1567559",
    "end": "1573020"
  },
  {
    "text": "we want to create a new environment and what's the developer experience incredibly simple we take the exact same",
    "start": "1573020",
    "end": "1579740"
  },
  {
    "text": "scroll file we take the exact same code and the only thing we change is that we",
    "start": "1579740",
    "end": "1585679"
  },
  {
    "text": "indicate a new context and the context in this case is hey this is an environment of type ephemeral",
    "start": "1585679",
    "end": "1592760"
  },
  {
    "text": "it hits the orchestrator the orchestrator says right rmcd exactly read match a environment equals",
    "start": "1592760",
    "end": "1600919"
  },
  {
    "text": "ephemeral all right well now I'm going to create a postgres I'm going to create an S3 bucket I'm going to create a DNS",
    "start": "1600919",
    "end": "1607039"
  },
  {
    "text": "wait a minute DNS we need Ingress and certificate oh cool I can do that as well I'll use terraform or cross plane",
    "start": "1607039",
    "end": "1614120"
  },
  {
    "text": "or I will automatically send an SMS to the Vatican and the pope will do it himself",
    "start": "1614120",
    "end": "1619760"
  },
  {
    "text": "and then send back the credentials it doesn't really matter we do that and then we create the application",
    "start": "1619760",
    "end": "1625760"
  },
  {
    "text": "configurations we receive the credentials secrets we write everything up yeah well and then it's deployed and",
    "start": "1625760",
    "end": "1631820"
  },
  {
    "text": "we have a new namespace we have RDS S3 DNS everything is in the latest state",
    "start": "1631820",
    "end": "1638419"
  },
  {
    "text": "okay that's the second column path and this also means well it doesn't matter whether it is the",
    "start": "1638419",
    "end": "1644240"
  },
  {
    "text": "first time or the 10th time this could be a scaffolding this could be after",
    "start": "1644240",
    "end": "1649700"
  },
  {
    "text": "two years that this application exists and this is running through completely",
    "start": "1649700",
    "end": "1655460"
  },
  {
    "text": "automated and making sure everything is tidy and clean cool next example here is",
    "start": "1655460",
    "end": "1663740"
  },
  {
    "text": "um just for the sake of a deployment of production what's the message I want to send the message I want to send is is",
    "start": "1663740",
    "end": "1669320"
  },
  {
    "text": "the exact same thing uh you know indicate context and then we have everything running",
    "start": "1669320",
    "end": "1675460"
  },
  {
    "text": "the more important example is what happens if you want to go off the",
    "start": "1675460",
    "end": "1682580"
  },
  {
    "text": "Golden path you know I'm always another nice buzzword that I'm always saying is uh golden paths not cages you know",
    "start": "1682580",
    "end": "1690559"
  },
  {
    "text": "and so how do you ensure that this isn't golden golden cage right because I mean these these things are great but there's",
    "start": "1690559",
    "end": "1697760"
  },
  {
    "text": "always that situation where you need a resource and the platform engineering",
    "start": "1697760",
    "end": "1702980"
  },
  {
    "text": "team hasn't provided it yet and that's a very very frustrating experience for the user because now you have the feeling oh",
    "start": "1702980",
    "end": "1710480"
  },
  {
    "text": "you know I've been restricted and I have to wait for another team and how is this",
    "start": "1710480",
    "end": "1716179"
  },
  {
    "text": "better better than what I have today and the wonderful thing here is you can give an answer to that and the answer is",
    "start": "1716179",
    "end": "1723020"
  },
  {
    "text": "going off the Golden path I will use the example of a rainbow DB which I'm always",
    "start": "1723020",
    "end": "1728419"
  },
  {
    "text": "using because a rainbow DB is something you never need until you need it and so then you say",
    "start": "1728419",
    "end": "1734840"
  },
  {
    "text": "well I need a rainbow DB but and you're sending the request to the orchestrator and maybe that has dry round",
    "start": "1734840",
    "end": "1740900"
  },
  {
    "text": "functionality and it's returning hey Wrangler degree I don't know that I have no idea what to do so you know in in most cases you",
    "start": "1740900",
    "end": "1747980"
  },
  {
    "text": "would be stuck now not in this case you can actually teach the system how to create a Rango DB right and that is also",
    "start": "1747980",
    "end": "1755960"
  },
  {
    "text": "what I mean by layered abstractions if assuming the developer has the row based Access Control to do so they can now go",
    "start": "1755960",
    "end": "1763760"
  },
  {
    "text": "in and actually Define how a rainbow DB is set up that that that that resource",
    "start": "1763760",
    "end": "1769460"
  },
  {
    "text": "Knowledge Graph if you if you want can actually learn decently and this is",
    "start": "1769460",
    "end": "1774919"
  },
  {
    "text": "leading to something that is a was a revelation for me two weeks ago that if",
    "start": "1774919",
    "end": "1780740"
  },
  {
    "text": "you want platform engineering good platform engineering is actually about",
    "start": "1780740",
    "end": "1788080"
  },
  {
    "text": "cutting and designing your repositories in a sustainable way I was mind-blowing",
    "start": "1788080",
    "end": "1796399"
  },
  {
    "text": "for me when I when I uh first person but then actually there's a lot of truth to this we're going to look at this in a",
    "start": "1796399",
    "end": "1801679"
  },
  {
    "text": "second and so that's exactly what you can do here hey you're just teaching that system well by the way this is how",
    "start": "1801679",
    "end": "1807980"
  },
  {
    "text": "you create a Wrangler DB and in those situations if those matching",
    "start": "1807980",
    "end": "1814039"
  },
  {
    "text": "criteria are met should you actually be using a regular DB all right so again it's the orchestrator r and CD and then",
    "start": "1814039",
    "end": "1821240"
  },
  {
    "text": "we have a regular DB but the next time a developer now needs a Wrangle DB and the matching criteria I hit in fact a Rango",
    "start": "1821240",
    "end": "1827600"
  },
  {
    "text": "DB is there right and so that's actually what I want to double down a little bit a little bit",
    "start": "1827600",
    "end": "1833539"
  },
  {
    "text": "more that platform engineering is about structuring repositories um a good setup right has a certain has",
    "start": "1833539",
    "end": "1842899"
  },
  {
    "text": "a different repository structure than a lot of the repository structures that were that we've been used to so and if",
    "start": "1842899",
    "end": "1849020"
  },
  {
    "text": "I'm if I'm saying developer owned or platform engineering owned I'm not saying that this is mandatory and I'm",
    "start": "1849020",
    "end": "1854779"
  },
  {
    "text": "not saying that sometimes there are developers that have both roles that really really depends on the",
    "start": "1854779",
    "end": "1861820"
  },
  {
    "text": "compliance and security posture of your respective organization right so I'm just uh I was just in London yesterday",
    "start": "1861820",
    "end": "1868940"
  },
  {
    "text": "with a you know large bank and at that large Bank the the division would be",
    "start": "1868940",
    "end": "1875779"
  },
  {
    "text": "very very extreme you know you there it's not in the realm of possibilities",
    "start": "1875779",
    "end": "1881059"
  },
  {
    "text": "that a developer is allowed to change the respective configurations of an S3",
    "start": "1881059",
    "end": "1886460"
  },
  {
    "text": "bucket in production but you know this is not going to happen but let's say you are in a in a less",
    "start": "1886460",
    "end": "1892820"
  },
  {
    "text": "security uh heavy environment then you could absolutely say hey as a developer you can maybe change everything globally",
    "start": "1892820",
    "end": "1900020"
  },
  {
    "text": "until you get into a pre-product and you can actually send a pull request to the global uh configuration of an S3 bucket",
    "start": "1900020",
    "end": "1908299"
  },
  {
    "text": "but what's different and let's actually have a look at this is that we do separate these things out so the",
    "start": "1908299",
    "end": "1913399"
  },
  {
    "text": "developer actually now primarily owns the workload",
    "start": "1913399",
    "end": "1919039"
  },
  {
    "text": "um you have the work in your in in every workload repository you have the workload source code you have a workload",
    "start": "1919039",
    "end": "1924799"
  },
  {
    "text": "specification file you know you have your Docker file you have your pipeline yaml and then you have the things that are",
    "start": "1924799",
    "end": "1931880"
  },
  {
    "text": "cross-cutting across the organization and the first thing that I want to look at with you again is the workload",
    "start": "1931880",
    "end": "1937399"
  },
  {
    "text": "profile here um in the middle and you can think of the workload profile I said that before like an empty Helm chart and",
    "start": "1937399",
    "end": "1943880"
  },
  {
    "text": "it contains the things we need to create the application configurations that could be CPU minimum allocation labels",
    "start": "1943880",
    "end": "1950419"
  },
  {
    "text": "and annotations uh maybe the fact that hashicot ball should start up as a sidecar all of these things",
    "start": "1950419",
    "end": "1956779"
  },
  {
    "text": "now um workload profiles are have a one-on-one relationship with a workload",
    "start": "1956779",
    "end": "1963980"
  },
  {
    "text": "but no it's not one-on-one it's one-to-many so one workload can actually",
    "start": "1963980",
    "end": "1970039"
  },
  {
    "text": "um workload profile can be used in many many different uh um work loads",
    "start": "1970039",
    "end": "1975620"
  },
  {
    "text": "um because in reality and I can tell you that firsthand even if you're a very very very large organization you maybe",
    "start": "1975620",
    "end": "1983659"
  },
  {
    "text": "need three four five different workload profiles that is pretty much it",
    "start": "1983659",
    "end": "1989539"
  },
  {
    "text": "um now then we have the the way that resources are created and that again all",
    "start": "1989539",
    "end": "1996320"
  },
  {
    "text": "wired and that again differentiates static so resources that you don't want to have life cycle owned by the platform",
    "start": "1996320",
    "end": "2002519"
  },
  {
    "text": "they are just referenced so you can register them and say hey by the way we",
    "start": "2002519",
    "end": "2008380"
  },
  {
    "text": "have this postgres it's already there if somebody hits those criteria please route and then you have Dynamic",
    "start": "2008380",
    "end": "2015519"
  },
  {
    "text": "resources and those are resources that if somebody needs an S3 and it needs to",
    "start": "2015519",
    "end": "2020679"
  },
  {
    "text": "be spun up please use this template so this would be usually infrastructure as code the difference is you now don't",
    "start": "2020679",
    "end": "2027940"
  },
  {
    "text": "have I was at this absurd case today where they had 470 different ways of creating",
    "start": "2027940",
    "end": "2035559"
  },
  {
    "text": "postgres across all teams and you can say you know why not but you can also",
    "start": "2035559",
    "end": "2041200"
  },
  {
    "text": "say like why would that be a good idea it's there are no it doesn't make sense",
    "start": "2041200",
    "end": "2046360"
  },
  {
    "text": "that I'm not you don't need 470 different ways to to instantiate postgres this is not necessary like you",
    "start": "2046360",
    "end": "2052118"
  },
  {
    "text": "maybe need a couple and so that's what you would actually have here and then",
    "start": "2052119",
    "end": "2058658"
  },
  {
    "text": "you have resource definitions and resource definitions you know there's a terraform provider for an orchestrator",
    "start": "2058659",
    "end": "2063878"
  },
  {
    "text": "for instance that says if the end ID is staging and the app ID is ABC then",
    "start": "2063879",
    "end": "2069220"
  },
  {
    "text": "please use the following resource drivers and the last thing are certain automations compliance elements and and",
    "start": "2069220",
    "end": "2075700"
  },
  {
    "text": "all of these things and that's it and so if if you want to have that case a Rango",
    "start": "2075700",
    "end": "2081339"
  },
  {
    "text": "DB well what you actually do is that you go into the terraform provider for the",
    "start": "2081339",
    "end": "2086378"
  },
  {
    "text": "orchestrator and by the way we can do that together it's a fun exercise um",
    "start": "2086379",
    "end": "2091679"
  },
  {
    "text": "so this is the provider you go into the terraform provider you go into the documentation uh",
    "start": "2091679",
    "end": "2100000"
  },
  {
    "text": "uh boom and we read this documentation from from the bottom um",
    "start": "2100839",
    "end": "2106420"
  },
  {
    "text": "yeah this is actually a terrible example let's look at this so you say this one okay so you say if",
    "start": "2106420",
    "end": "2114280"
  },
  {
    "text": "the criteria app ID equals test app and the user wants a postgres",
    "start": "2114280",
    "end": "2122980"
  },
  {
    "text": "then I want you to use the following resource definition period that's it right or let's take",
    "start": "2122980",
    "end": "2129700"
  },
  {
    "text": "another example if M5 is staging an app ID is test app and amp type is development and app IDs test app then",
    "start": "2129700",
    "end": "2137079"
  },
  {
    "text": "please um at the request of gke use this resource definition that's it it's not",
    "start": "2137079",
    "end": "2142839"
  },
  {
    "text": "super complicated so that means in that case right where we want to",
    "start": "2142839",
    "end": "2148599"
  },
  {
    "text": "um train the system how to create a Rangoli B what that train the system actually",
    "start": "2148599",
    "end": "2154359"
  },
  {
    "text": "means is you are extending that Central um Logic on when to use what",
    "start": "2154359",
    "end": "2161260"
  },
  {
    "text": "cool um all right so now you know I I bombarded you you will stop I'm I'm sure",
    "start": "2161260",
    "end": "2167079"
  },
  {
    "text": "you're completely overwhelmed if you want to be even more overwhelmed then you can read the white paper on this",
    "start": "2167079",
    "end": "2172540"
  },
  {
    "text": "that um that is there's one coming out on um",
    "start": "2172540",
    "end": "2177780"
  },
  {
    "text": "mckenzie.com and um I wrote another one that uh you know",
    "start": "2177780",
    "end": "2183400"
  },
  {
    "text": "that adds more of these these things in is a little more you know detailed 36 pages so if you're at home with your",
    "start": "2183400",
    "end": "2190839"
  },
  {
    "text": "partner and you really want to have a great thing to read at night 36",
    "start": "2190839",
    "end": "2197680"
  },
  {
    "text": "pages of Juicy platform content uh definitely cool and the package version is ready",
    "start": "2197680",
    "end": "2203460"
  },
  {
    "text": "it's coming hopefully soon there's no tutorials so it's extremely hard for it",
    "start": "2203460",
    "end": "2209140"
  },
  {
    "text": "to use for you but um I'm hoping um some of these guys can write",
    "start": "2209140",
    "end": "2214420"
  },
  {
    "text": "tutorials and otherwise um otherwise I hope somebody else does it or I'll do it and then you can actually",
    "start": "2214420",
    "end": "2221140"
  },
  {
    "text": "try these things yourself and um you know why everything up and package this",
    "start": "2221140",
    "end": "2226599"
  },
  {
    "text": "cool and then you know last comment there are like a ton ton more coming the gcp one is in development right now and",
    "start": "2226599",
    "end": "2233440"
  },
  {
    "text": "then I think next is azure and then either multi-cloud and then openshift so",
    "start": "2233440",
    "end": "2238599"
  },
  {
    "text": "yeah pretty cool all right cool thank you so much Casper and hope everyone",
    "start": "2238599",
    "end": "2244440"
  },
  {
    "text": "have a great end of the day or beginning of the day bye bye okay",
    "start": "2244440",
    "end": "2253020"
  }
]