[
  {
    "text": "thank you everybody for coming um glad to see you good turnout um you all",
    "start": "120",
    "end": "5319"
  },
  {
    "text": "probably interested in side cars yeah more people will probably keep",
    "start": "5319",
    "end": "10559"
  },
  {
    "text": "coming so I hope it wouldn't uh interrupt you too much um so I'm Serge Kel I'm work for Google",
    "start": "10559",
    "end": "18000"
  },
  {
    "text": "and I'm chair of",
    "start": "18000",
    "end": "21279"
  },
  {
    "text": "signote hey I'm Todd Neil and I work for AWS and I'm a sign",
    "start": "23880",
    "end": "28960"
  },
  {
    "text": "reviewer so side",
    "start": "28960",
    "end": "34399"
  },
  {
    "text": "cars you know this construction wouldn't probably steer well when I was a kid uh",
    "start": "37559",
    "end": "45360"
  },
  {
    "text": "smallish um I was spending time every summer with my grandparents and my",
    "start": "45360",
    "end": "51680"
  },
  {
    "text": "grandfather has a motorcycle with a side car imagine um sitting in a side car",
    "start": "51680",
    "end": "58440"
  },
  {
    "text": "there is no belt no nothing nothing wind in your face and so exciting and I was",
    "start": "58440",
    "end": "64080"
  },
  {
    "text": "small and imaginative so I was like oh I'm steing a motorcycle oh let's go left",
    "start": "64080",
    "end": "69960"
  },
  {
    "text": "let's go right and like uh unfortunately when I need I need to watch my grandfather really carefully where he is",
    "start": "69960",
    "end": "77400"
  },
  {
    "text": "going right then I would pretend to turn my wheel and go right as well but I was",
    "start": "77400",
    "end": "84439"
  },
  {
    "text": "Imaging that I'm still in the motorcycle so um kubernetes was feeling similarly",
    "start": "84439",
    "end": "91640"
  },
  {
    "text": "to me uh side cars were steering the ports it's like yeah it's not right uh",
    "start": "91640",
    "end": "98159"
  },
  {
    "text": "we need to fix it so we decided that we need to fix it and now it's fixed we",
    "start": "98159",
    "end": "104360"
  },
  {
    "text": "will be so now yeah no imaginative uh steering wheels that actually steers a",
    "start": "104360",
    "end": "110799"
  },
  {
    "text": "motorcycle so let's go to the next slide so what is side cars side cars is",
    "start": "110799",
    "end": "116719"
  },
  {
    "text": "a special type of container it's a pattern that you will use when you",
    "start": "116719",
    "end": "122240"
  },
  {
    "text": "implement your um workload so let's say you have an application you want toize this application uh it may be existing",
    "start": "122240",
    "end": "129560"
  },
  {
    "text": "code it may be something that you write specifically for kubernetes but nevertheless it's something that",
    "start": "129560",
    "end": "135000"
  },
  {
    "text": "implements a business logic you deployed and you want it to work and uh sometimes you need to to",
    "start": "135000",
    "end": "141640"
  },
  {
    "text": "work and you need to communicate with something else like sometimes you need to collect Telemetry out of this",
    "start": "141640",
    "end": "147680"
  },
  {
    "text": "container you have different ways to do that uh one of the way is to get a specialized process that will go around",
    "start": "147680",
    "end": "155720"
  },
  {
    "text": "and like collect logs when needed and you don't want this process to run inside your container because you may",
    "start": "155720",
    "end": "162319"
  },
  {
    "text": "have the different dependency it's much easier to just run a separate container inside your port and you golden uh same",
    "start": "162319",
    "end": "168800"
  },
  {
    "text": "concept with networking access you may have different n networking requirements",
    "start": "168800",
    "end": "174120"
  },
  {
    "text": "and you want to deploy it as a um some sort of container that it's already existing on a market or you build it",
    "start": "174120",
    "end": "180959"
  },
  {
    "text": "yourself other things like security somebody will download certificate and keep it up to date all the time so you",
    "start": "180959",
    "end": "187360"
  },
  {
    "text": "don't need to worry about uh about it and um uh data access is Al interesting",
    "start": "187360",
    "end": "192879"
  },
  {
    "text": "pattern uh we see some drivers being installed as a side car and the reason people also install this side car not",
    "start": "192879",
    "end": "199360"
  },
  {
    "text": "only because they can control it more precisely they can configure it specifically for your Port but also you",
    "start": "199360",
    "end": "206319"
  },
  {
    "text": "can account resources for your Port so imagine this driver is not installed as a side carard is installed as demon set",
    "start": "206319",
    "end": "212920"
  },
  {
    "text": "in this case whenever your workload goes to the demon Set uh demon Set uh becomes",
    "start": "212920",
    "end": "219480"
  },
  {
    "text": "a resource sharable resource that may experience neighbor um Noisy Neighbor problem so as a container using up all",
    "start": "219480",
    "end": "227840"
  },
  {
    "text": "the resources you out of resources so you don't have your data access there um it doesn't work really well so side car",
    "start": "227840",
    "end": "235720"
  },
  {
    "text": "eliminate this problem now if you run side car inside your port you are responsible for that and you charged for",
    "start": "235720",
    "end": "241760"
  },
  {
    "text": "this resources so you can limit it you can unlimit it it's your choice but you are responsible for this resources and",
    "start": "241760",
    "end": "248000"
  },
  {
    "text": "it's a very powerful pattern in this Regard in fact there was a talk uh on a",
    "start": "248000",
    "end": "253879"
  },
  {
    "text": "day Zero talking about some data access pattern for AIML that using sidecar uh",
    "start": "253879",
    "end": "260120"
  },
  {
    "text": "as we developed um specifically for this purpose because they wanted to attribute all this cost of encryption and",
    "start": "260120",
    "end": "267199"
  },
  {
    "text": "decryption to the port rather than like making system administrator pay for that",
    "start": "267199",
    "end": "273800"
  },
  {
    "text": "um anyway uh this is side car pattern and um out of out of all the",
    "start": "273800",
    "end": "282039"
  },
  {
    "text": "existing Concepts that we have today in kubernetes we have uh in need containers",
    "start": "282039",
    "end": "287440"
  },
  {
    "text": "that runs to completion runs in order and we need regular containers that start in almost a sequential order and",
    "start": "287440",
    "end": "294639"
  },
  {
    "text": "then whenever they all terminate pot will terminate so in this model it's uh quite",
    "start": "294639",
    "end": "301080"
  },
  {
    "text": "easy to say uh let's take one of these containers and make a side car and it works so it was working for many years",
    "start": "301080",
    "end": "308280"
  },
  {
    "text": "this article is written um I mean on previous slide article is written on like 2000 uh single digit year I think oh",
    "start": "308280",
    "end": "316960"
  },
  {
    "text": "mightbe yeah so uh PN existed and it worked very well for web apps um web apps are unique they",
    "start": "316960",
    "end": "325919"
  },
  {
    "text": "never end they keep going um and uh uh whenever container crashed it been",
    "start": "325919",
    "end": "333080"
  },
  {
    "text": "restarted so it works perfectly fine for web apps uh more more uh I mean some",
    "start": "333080",
    "end": "339240"
  },
  {
    "text": "people complain for about sidec cars in web apps because uh termination order is",
    "start": "339240",
    "end": "344639"
  },
  {
    "text": "not declar it so if you want uh to gracefully terminate your Port then your",
    "start": "344639",
    "end": "350240"
  },
  {
    "text": "main container May finish before you after your side car finished so uh",
    "start": "350240",
    "end": "355840"
  },
  {
    "text": "imagine you have a network providing side car and container still need a side",
    "start": "355840",
    "end": "361759"
  },
  {
    "text": "car but side car already finished because there is no ordering cont termination so there were problems like",
    "start": "361759",
    "end": "367039"
  },
  {
    "text": "that but it was HKS like nobody cares about HK that much uh I mean it will crash a couple times who yeah they know",
    "start": "367039",
    "end": "374560"
  },
  {
    "text": "how it goes but uh hopefully you are not that person you want real side cars so",
    "start": "374560",
    "end": "380120"
  },
  {
    "text": "uh we solve this problem and another problem that was much bigger and it was in the face like it wasn't like this",
    "start": "380120",
    "end": "386199"
  },
  {
    "text": "Edge case like when graceful termination happens sometimes or in is not right this is a real problem um you put",
    "start": "386199",
    "end": "393560"
  },
  {
    "text": "monitoring uh container in your job and the job never finish monitoring still",
    "start": "393560",
    "end": "399440"
  },
  {
    "text": "wants to run it running it's running and running and sending zero Matrix uh",
    "start": "399440",
    "end": "404680"
  },
  {
    "text": "unless you will manually uh terminate this job so another problem for long",
    "start": "404680",
    "end": "411800"
  },
  {
    "text": "running jobs we experienced is if job is 10 hours and after first 15 minutes you",
    "start": "411800",
    "end": "419759"
  },
  {
    "text": "uh monitoring containers suddenly decided to allocate too much memory just out of blue and it was O killed it will",
    "start": "419759",
    "end": "425919"
  },
  {
    "text": "never be restarted so 10 hours you run blind without any monitoring which also",
    "start": "425919",
    "end": "431199"
  },
  {
    "text": "not ideal so we wanted to restart side car so many problems is jobs and uh we heard all these problems",
    "start": "431199",
    "end": "440560"
  },
  {
    "text": "uh as a community it was even before I joined kubernetes so I I I heard that",
    "start": "440560",
    "end": "445919"
  },
  {
    "text": "they hurt uh I saw very old issues disc desing this problems and uh uh documents",
    "start": "445919",
    "end": "452599"
  },
  {
    "text": "how to solve this problem and why it wasn't solved before so let's uh get uh",
    "start": "452599",
    "end": "458879"
  },
  {
    "text": "to the next slide so um to understand why it wasn't solved before we need to understand what's happening now in",
    "start": "458879",
    "end": "465400"
  },
  {
    "text": "kubernetes so as you may heard on keynote kubernetes is everywhere it's",
    "start": "465400",
    "end": "471319"
  },
  {
    "text": "ubiquitous it's a new Linux um so people running everything on kubernetes many",
    "start": "471319",
    "end": "477080"
  },
  {
    "text": "many different types of workloads and for um all this workloads kubernetes",
    "start": "477080",
    "end": "482960"
  },
  {
    "text": "pretty much works it's it's okay it's not bad it's uh it it can manage your",
    "start": "482960",
    "end": "489319"
  },
  {
    "text": "workload reasonably well and you can uh uh hug things together so it will not",
    "start": "489319",
    "end": "494960"
  },
  {
    "text": "not even look ugly so uh it's great and um the problem was that even for those",
    "start": "494960",
    "end": "501360"
  },
  {
    "text": "workloads that we had we didn't have it very um uh reliable in sigot so signote",
    "start": "501360",
    "end": "507960"
  },
  {
    "text": "experience a problem when we imp implemented many many features and suddenly we felt that uh those features",
    "start": "507960",
    "end": "514680"
  },
  {
    "text": "are not all polished like we have bunch of Perma betas Perma beta is something permanently in beta uh we had bunch of",
    "start": "514680",
    "end": "522200"
  },
  {
    "text": "code that is not well tested and not uh implemented as conformance so we needed",
    "start": "522200",
    "end": "527320"
  },
  {
    "text": "to do something about it and we started working on eliminating all the permas cleaning up Cod improving test cases um",
    "start": "527320",
    "end": "535040"
  },
  {
    "text": "and finally we get to a very stable state so now uh if you look at signal in kubernetes we are at 40 feature Gates",
    "start": "535040",
    "end": "542720"
  },
  {
    "text": "and 19 of them is experimentation so now we get into this like maybe one year ago",
    "start": "542720",
    "end": "548200"
  },
  {
    "text": "we get in the mod when we not only deprecating and cleaning up stuff but we also experimenting and we experimenting",
    "start": "548200",
    "end": "554720"
  },
  {
    "text": "a lot and side car and Main directions when we experiment is uh uh new",
    "start": "554720",
    "end": "560640"
  },
  {
    "text": "workloads especially IML that are very popular now but also like just before IML were HPC which are as important as a",
    "start": "560640",
    "end": "569480"
  },
  {
    "text": "ml um and also we wanted to understand uh Hardware better so Hardware is not",
    "start": "569480",
    "end": "575680"
  },
  {
    "text": "relative here but uh um new workloads are definitely something that we want to",
    "start": "575680",
    "end": "580760"
  },
  {
    "text": "support better so we've been on this uh good point when we are reliable enough",
    "start": "580760",
    "end": "586560"
  },
  {
    "text": "so we can uh start experimenting and introducing new features and we also",
    "start": "586560",
    "end": "591600"
  },
  {
    "text": "really really want side cars for new workload types and when I say new",
    "start": "591600",
    "end": "597720"
  },
  {
    "text": "workload types I keep repeating B jobs and stuff but also we have things",
    "start": "597720",
    "end": "602839"
  },
  {
    "text": "like open Telemetry that uh uh get so popular and fluent be be fluent bit",
    "start": "602839",
    "end": "607959"
  },
  {
    "text": "became like such a ulous part of uh logs collection so all this agents want to",
    "start": "607959",
    "end": "615480"
  },
  {
    "text": "run inside your port and they want to run uh more and more uh inside the jobs",
    "start": "615480",
    "end": "620920"
  },
  {
    "text": "that you're running so to accommodate those uh scenarios we really needed side",
    "start": "620920",
    "end": "626800"
  },
  {
    "text": "cars so again uh remember this kid trying to steer the uh side car uh",
    "start": "626800",
    "end": "634079"
  },
  {
    "text": "thinking that it's steering the motorcycle I want you to understand that",
    "start": "634079",
    "end": "639200"
  },
  {
    "text": "sidecar feature is not a great new addition it's like not a uh major um",
    "start": "639200",
    "end": "647760"
  },
  {
    "text": "it's not something that didn't work before so it's worked before especially for web apps what we fixing right now is",
    "start": "647760",
    "end": "654320"
  },
  {
    "text": "fixing side cars for new workload and specifically for jobs uh when we will start uh keep restarting these jobs and",
    "start": "654320",
    "end": "661600"
  },
  {
    "text": "um uh now I want to start talking about implementation of side cars and to here",
    "start": "661600",
    "end": "668279"
  },
  {
    "text": "will uh walk us through the implementation all right so uh Sergey",
    "start": "668279",
    "end": "675000"
  },
  {
    "text": "reminded us um about why we would want sidecars the problems that we had um and",
    "start": "675000",
    "end": "680200"
  },
  {
    "text": "I'm sure everyone's probably tried to work around sidecars before right and start Runing bash scripts and containers so that you can try to control the order",
    "start": "680200",
    "end": "686800"
  },
  {
    "text": "of their startup with like files or amount in between them and then do the same thing on the reverse side and now you've got like this Half Baked system",
    "start": "686800",
    "end": "693560"
  },
  {
    "text": "deimplementation and Bash in your pod that's really running like yeah I see some shaking heads and everyone's like yeah that's fun to ride",
    "start": "693560",
    "end": "701720"
  },
  {
    "text": "um so how how are things better now so a sidecar is annit container with a",
    "start": "701720",
    "end": "707720"
  },
  {
    "text": "restart policy of always and we can all go get lunch now because that's see it's really all we need to know um the first",
    "start": "707720",
    "end": "715079"
  },
  {
    "text": "thing you'll notice is like Ser said there's not a new type of container side cars are just init containers that",
    "start": "715079",
    "end": "721079"
  },
  {
    "text": "continue to run um and there's some neat things that come about from that if you want to sequence your regular init",
    "start": "721079",
    "end": "728519"
  },
  {
    "text": "containers with your side cars that just sort of falls out of the implementation in this case we have a secret fetch standard init container it runs first",
    "start": "728519",
    "end": "735760"
  },
  {
    "text": "because it's first in the anit container list then our Network proxy can know that the secret fetch container has",
    "start": "735760",
    "end": "741800"
  },
  {
    "text": "already finished and it can start up then the log sender can start up after and then finally all of our main containers can start up and",
    "start": "741800",
    "end": "750760"
  },
  {
    "text": "how does it really look though if you look at like the Pod lifetime so here uh time going right towards or towards",
    "start": "750760",
    "end": "757279"
  },
  {
    "text": "increasing towards the right our secret fetch container starts runs finishes and once it's finished we're still in the",
    "start": "757279",
    "end": "763920"
  },
  {
    "text": "unit container section we have a network proxy it starts up has a startup probe a",
    "start": "763920",
    "end": "769000"
  },
  {
    "text": "pre-art hook once it's running we're now ready to start our log sender we don't wait for the network proxy to finish we",
    "start": "769000",
    "end": "775880"
  },
  {
    "text": "have a log cender now has a you know a a startup probe maybe a pre-art hook um or",
    "start": "775880",
    "end": "782079"
  },
  {
    "text": "postart hook we run that everything's great and now we can simultaneously Stout uh start our main",
    "start": "782079",
    "end": "788399"
  },
  {
    "text": "containers now we're ready for the Pod to finish we can stop our main containers",
    "start": "788399",
    "end": "793639"
  },
  {
    "text": "simultaneously and now we have our side cars um the log sender was the one we",
    "start": "793639",
    "end": "798920"
  },
  {
    "text": "started last so we terminated first because there's sort of this implicit dependency that the log sender needs a",
    "start": "798920",
    "end": "804160"
  },
  {
    "text": "network proxy so we need to terminate the log sender first and then we'll stop our Network proxy and finally our pod is",
    "start": "804160",
    "end": "810199"
  },
  {
    "text": "completely done and terminated um one way of thinking about this is that our sidecars lifetime sort of bracket the",
    "start": "810199",
    "end": "815639"
  },
  {
    "text": "main containers and they sort of bracket each other and you kind of get this Tower of Hanoi looking figure of the Pod lifetimes and that lets you sort of make",
    "start": "815639",
    "end": "823199"
  },
  {
    "text": "some assumptions about container lifetimes that really weren't possible before without doing a lot of hacky",
    "start": "823199",
    "end": "829160"
  },
  {
    "text": "stuff on your own like we Skip",
    "start": "829160",
    "end": "834440"
  },
  {
    "text": "Along so initialization is pretty standard but termination ordering is a",
    "start": "834440",
    "end": "839839"
  },
  {
    "text": "bit more complicated um so we'll talk about it here uh you have pre-stop hooks",
    "start": "839839",
    "end": "845399"
  },
  {
    "text": "and then you have the stop container call that the CRI or is made through the CRI actually stop containers um so with",
    "start": "845399",
    "end": "851680"
  },
  {
    "text": "side cars the pre-stop hook effectively tells you that hey the Pod is terminating",
    "start": "851680",
    "end": "857639"
  },
  {
    "text": "termination process has started so pre-stop gets called simultaneously uh",
    "start": "857639",
    "end": "862720"
  },
  {
    "text": "for main containers and side cars for the main containers as soon as your pre-stop is completed",
    "start": "862720",
    "end": "869560"
  },
  {
    "text": "we call stop container which ends up in a Sig term and eventually a Sig kill if you don't exit but for side cars that's",
    "start": "869560",
    "end": "875480"
  },
  {
    "text": "not what happens um for sidecars we actually don't call stop container and you don't get a Sig term until it's your",
    "start": "875480",
    "end": "881240"
  },
  {
    "text": "turn to stop so in this case log sender is pre-stop hook finished but we don't",
    "start": "881240",
    "end": "886880"
  },
  {
    "text": "call a stop container and we don't get a Sig term until all of the main containers are done so your main",
    "start": "886880",
    "end": "892040"
  },
  {
    "text": "containers can effectively rely on the fact that your side containers will not be stopped until all of the M containers",
    "start": "892040",
    "end": "897720"
  },
  {
    "text": "completed similarly the network proxy like log container may depend on network proxy so we don't call stop container we",
    "start": "897720",
    "end": "904880"
  },
  {
    "text": "don't send the Sig term for the network proxy until the log sender is actually finished so that's sort of how the",
    "start": "904880",
    "end": "910360"
  },
  {
    "text": "termination Works a bit more complicated than initialization but it gives you some nice guarantees about the lifetime",
    "start": "910360",
    "end": "915440"
  },
  {
    "text": "and relationship between the lifetimes of the various containers and with any new feature um",
    "start": "915440",
    "end": "923120"
  },
  {
    "text": "there's always ways to use and misuse it um so we'll go through a few of those",
    "start": "923120",
    "end": "929240"
  },
  {
    "text": "um everyone's familiar with requests and limits on containers and should always set requests and limits um side cars",
    "start": "929240",
    "end": "936120"
  },
  {
    "text": "still important um one thing and I'll get back to this in a few minutes but if you're",
    "start": "936120",
    "end": "941839"
  },
  {
    "text": "trying to figure out like what are these sort of sum of pod requests for this pod like the how much or how many CPUs does",
    "start": "941839",
    "end": "948000"
  },
  {
    "text": "this pod require and you go look at the containers like oh it has one CPU and there's a nit container but actually",
    "start": "948000",
    "end": "953160"
  },
  {
    "text": "that n container is a restart policy if we look at the lifetimes those are both running at the same time now so if you",
    "start": "953160",
    "end": "958440"
  },
  {
    "text": "ever ever sort of made assumptions that hey I'll just sum up the main containers and compare them with the max of the init containers that's how I get pod",
    "start": "958440",
    "end": "963720"
  },
  {
    "text": "requests that calculation no longer works so you really need to consider the lifetime of the pods and the resource",
    "start": "963720",
    "end": "969759"
  },
  {
    "text": "requests and sort of take them into consideration with your uh your allocation",
    "start": "969759",
    "end": "975120"
  },
  {
    "text": "planning the great thing about sidecars is you get this serialized um startup",
    "start": "975759",
    "end": "981800"
  },
  {
    "text": "ordering but if your startup is really slow it can turn into one of the bad things about sidecars so in this case",
    "start": "981800",
    "end": "987279"
  },
  {
    "text": "our Network proxy is taking a really long time to start up and because of that the log sender we don't even begin",
    "start": "987279",
    "end": "993000"
  },
  {
    "text": "to start it until the startup probe and pre-art hook have or postart hook have completed in this case log sender also",
    "start": "993000",
    "end": "999880"
  },
  {
    "text": "has a really long startup prob and postart hook and what you end up seeing is that just sort of lengthens the time",
    "start": "999880",
    "end": "1005560"
  },
  {
    "text": "before we ever even begin to consider starting your main containers so sort of a best practice minimize the time before",
    "start": "1005560",
    "end": "1011079"
  },
  {
    "text": "your containers go ready so that we can quickly start all the other",
    "start": "1011079",
    "end": "1016199"
  },
  {
    "text": "containers termination order ordering or the termination sort of the same problem um there's a single uh graceful pod uh",
    "start": "1016839",
    "end": "1026079"
  },
  {
    "text": "stop time period And it shared between the main containers and all the side cars so in this case our main containers",
    "start": "1026079",
    "end": "1033160"
  },
  {
    "text": "everything gets the uh start hook init immediately we send Sig term the main containers exits and then our log sender",
    "start": "1033160",
    "end": "1039839"
  },
  {
    "text": "gets a Sig term and it just ignores it okay I don't want to stop and so what ends up happening is eventually we run",
    "start": "1039839",
    "end": "1046079"
  },
  {
    "text": "out of time um and once we run out of time uh we just quickly try to shut down the Pod as rapidly as possible so uh best",
    "start": "1046079",
    "end": "1053280"
  },
  {
    "text": "practice exit your pre-op hook as soon as possible and then shut down fully if you're a side car once you get that Sig",
    "start": "1053280",
    "end": "1058480"
  },
  {
    "text": "term because you're you're a side car once you get a Sig term you know that no one that depends on you is alive anymore",
    "start": "1058480",
    "end": "1063559"
  },
  {
    "text": "so you're good to shut down to and that will let us quickly tear down the Pod without exceeding the grace",
    "start": "1063559",
    "end": "1069160"
  },
  {
    "text": "period and then lastly just a few things um I said that the resource calculation",
    "start": "1069160",
    "end": "1075240"
  },
  {
    "text": "sort of summing up request for a pod has changed um so I'm certain that there are some metrics or cost accounting uh tools",
    "start": "1075240",
    "end": "1083080"
  },
  {
    "text": "that someone has written to like allocate cost to teams those are all going to be wrong in 129 unless you go",
    "start": "1083080",
    "end": "1088559"
  },
  {
    "text": "update them to accounts for sidecars so side cars are in the init container section so just be aware that you need",
    "start": "1088559",
    "end": "1094280"
  },
  {
    "text": "to go check all that out and make sure it uh works correctly and then there's at least been one report of a mutating",
    "start": "1094280",
    "end": "1100000"
  },
  {
    "text": "emission Web book that dropped the uh restart policy field on a nit containers so if you have any of those uh be sure",
    "start": "1100000",
    "end": "1106120"
  },
  {
    "text": "to test those out with side cars and ensure that it doesn't break anything and other than that just go out and use some side",
    "start": "1106120",
    "end": "1111960"
  },
  {
    "text": "cars go back to Sergey to finish",
    "start": "1111960",
    "end": "1116600"
  },
  {
    "text": "out yeah you may have heard it um I mean we spend a lot of time drawing all those",
    "start": "1119679",
    "end": "1125600"
  },
  {
    "text": "diagrams with dots like 6 from here what if it's here would be better and um",
    "start": "1125600",
    "end": "1132760"
  },
  {
    "text": "we've been spending a lot of time debating and uh understanding what will work the best and we not did it alone we",
    "start": "1132760",
    "end": "1140760"
  },
  {
    "text": "did it with many many people um and uh those people were not only sign not",
    "start": "1140760",
    "end": "1147799"
  },
  {
    "text": "maintainers and sign not reviewers approvers code reviewers uh it also people who actually implementing this so",
    "start": "1147799",
    "end": "1154559"
  },
  {
    "text": "we can confident say that uh we thought about almost everything that you may have think of uh when you implement side",
    "start": "1154559",
    "end": "1161360"
  },
  {
    "text": "cars so if you haven't uh thought of something or you think we haven't",
    "start": "1161360",
    "end": "1166520"
  },
  {
    "text": "thought of something maybe we just it's just impossible to implement so some things are just uh not achievable in in",
    "start": "1166520",
    "end": "1174159"
  },
  {
    "text": "this uh physical world but I also want to talk about something what's next uh",
    "start": "1174159",
    "end": "1179760"
  },
  {
    "text": "talking about side cars you you you enter the room and you saying side cars and immediately ice Le it and people",
    "start": "1179760",
    "end": "1187320"
  },
  {
    "text": "saying oh you know what I wanted from side car I wanted something else so what",
    "start": "1187320",
    "end": "1193440"
  },
  {
    "text": "we decided to do we decided to take this approach with a smaller uh footprint we said that we will solve specific",
    "start": "1193440",
    "end": "1200080"
  },
  {
    "text": "problems with a specific field uh and we did so we uh did Alpha in 128 uh we did",
    "start": "1200080",
    "end": "1207440"
  },
  {
    "text": "beta 129 uh beta now has termination ordering that uh Todd was talking about in at",
    "start": "1207440",
    "end": "1213679"
  },
  {
    "text": "length uh so behavior of 128 and 128 difference a little bit so if you want",
    "start": "1213679",
    "end": "1219640"
  },
  {
    "text": "to implement something that will be surviving till G at 129 is your version",
    "start": "1219640",
    "end": "1225320"
  },
  {
    "text": "um and then adoption wise we already have e block post explaining how exactly you need to you can try out side car",
    "start": "1225320",
    "end": "1232360"
  },
  {
    "text": "containers with EO and um GCS fuse is uh one of the uh data drivers I was talking",
    "start": "1232360",
    "end": "1239720"
  },
  {
    "text": "about they also had a side card and already have a kit say like let's remove all this old Cod and uh we'll all get",
    "start": "1239720",
    "end": "1247360"
  },
  {
    "text": "the side cars and uh it will be much better for everybody so we have adoption we have tasting already um so welcome to",
    "start": "1247360",
    "end": "1254640"
  },
  {
    "text": "try it out as well and uh upcoming so we have one small feature that we also want",
    "start": "1254640",
    "end": "1260600"
  },
  {
    "text": "to deliver to GA this feature will change Behavior a little little little little bit um most of people wouldn't",
    "start": "1260600",
    "end": "1267960"
  },
  {
    "text": "notice it uh it's a behavior for for restarts of side cars while Port is",
    "start": "1267960",
    "end": "1273159"
  },
  {
    "text": "terminating so imagine you're taking 30 minutes to terminate your port for some reason maybe you need to uninstall",
    "start": "1273159",
    "end": "1279480"
  },
  {
    "text": "drivers or like uh clean up major file uh which is huge in this case if side",
    "start": "1279480",
    "end": "1285640"
  },
  {
    "text": "car still running we want to be keep being restarted if it crashed so it's uh",
    "start": "1285640",
    "end": "1291840"
  },
  {
    "text": "very Ed Cas scenario but it's important for some use cases and we really want to cover all of them so the last feature we",
    "start": "1291840",
    "end": "1298039"
  },
  {
    "text": "will uh take for GA as a part of this cap um but uh apart of this cap we also",
    "start": "1298039",
    "end": "1305640"
  },
  {
    "text": "had uh uh more goodness that people asked about uh at one point or another",
    "start": "1305640",
    "end": "1313000"
  },
  {
    "text": "and uh this goodness may or may not be implemented uh there is no guarantee but it's something we hear a lot lot and we",
    "start": "1313000",
    "end": "1318919"
  },
  {
    "text": "may want to uh think about it more as part of a follow up on side cars so uh",
    "start": "1318919",
    "end": "1326279"
  },
  {
    "text": "things like security boundaries like uh right now there is no difference between",
    "start": "1326279",
    "end": "1331880"
  },
  {
    "text": "side car and non-side car and people really concerned about it because side cars may be Envoy proxies being injected",
    "start": "1331880",
    "end": "1339480"
  },
  {
    "text": "and it needs a little bit of privilege to modify um what is this table uh",
    "start": "1339480",
    "end": "1345120"
  },
  {
    "text": "Network table and um people may not want to have even like",
    "start": "1345120",
    "end": "1351200"
  },
  {
    "text": "allow SSH access to this uh side card that this has a little bit more privilege and they maybe want to allow",
    "start": "1351200",
    "end": "1357919"
  },
  {
    "text": "SSH to something that is container that is less privileged just using this network tables um what else other things",
    "start": "1357919",
    "end": "1365600"
  },
  {
    "text": "is resource uh reuse so there are two types of side Cars one side car is",
    "start": "1365600",
    "end": "1372080"
  },
  {
    "text": "logging you want your HPC running on dedicated CPUs and all the logs and",
    "start": "1372080",
    "end": "1377360"
  },
  {
    "text": "everything else trying uh as far as possible to not interfere uh and another scenario is networking when you want to",
    "start": "1377360",
    "end": "1384159"
  },
  {
    "text": "run your side car as close as possible to your workload so like networking calls wouldn't take extra uh hoop U so",
    "start": "1384159",
    "end": "1392200"
  },
  {
    "text": "you want to run on same num note or something uh and then other feature like Crush back Loop off and better om",
    "start": "1392200",
    "end": "1398320"
  },
  {
    "text": "handling uh we all we hear all these features uh they're not coming as part",
    "start": "1398320",
    "end": "1403520"
  },
  {
    "text": "of this C but uh we may start working on it later and we also wanted to highlight",
    "start": "1403520",
    "end": "1409679"
  },
  {
    "text": "something that definitely will not be part of kubernetes anytime soon so um",
    "start": "1409679",
    "end": "1415640"
  },
  {
    "text": "one of the interesting request we hear is when uh side car needs to be declared",
    "start": "1415640",
    "end": "1421400"
  },
  {
    "text": "in some other asset that will be automatically plugged like attached to",
    "start": "1421400",
    "end": "1426480"
  },
  {
    "text": "the port so Port became like not a single yaml file but bunch of yaml files that will be constructed together on a",
    "start": "1426480",
    "end": "1432760"
  },
  {
    "text": "fly so I don't think that will be that will happen anytime soon uh it's a neat idea though but um it's not something",
    "start": "1432760",
    "end": "1439679"
  },
  {
    "text": "that we actively pursuing um right now and also we uh we've been debating a lot",
    "start": "1439679",
    "end": "1447159"
  },
  {
    "text": "whether we want to replace like emulate systemd inside a port so do we want to make Port an orchestrator of container",
    "start": "1447159",
    "end": "1454159"
  },
  {
    "text": "so you can say one container depend on another container and depend on thir third container so run them specifically",
    "start": "1454159",
    "end": "1460159"
  },
  {
    "text": "in this order and if if uh container number two restarts you restart like uh start from very beginning you need to",
    "start": "1460159",
    "end": "1466520"
  },
  {
    "text": "start the first one again we decid that we don't want to go this",
    "start": "1466520",
    "end": "1471559"
  },
  {
    "text": "uh Direction anytime soon so Port will stay uh single deployment unit you",
    "start": "1471559",
    "end": "1477520"
  },
  {
    "text": "deploy main container it runs to the completion or runs forever but it doesn't have any orchestration inside",
    "start": "1477520",
    "end": "1483440"
  },
  {
    "text": "the orchestrator so yeah that's something we wouldn't Implement and there are a couple more features I",
    "start": "1483440",
    "end": "1489240"
  },
  {
    "text": "listed here that is like percentage of uh usage it's another interesting thing",
    "start": "1489240",
    "end": "1494760"
  },
  {
    "text": "that probably not happening anytime soon uh but it's a neat",
    "start": "1494760",
    "end": "1499880"
  },
  {
    "text": "idea so if you have any questions uh we left specifically more time for",
    "start": "1499880",
    "end": "1505640"
  },
  {
    "text": "questions because we believe that uh it's a Hot Topic uh you can go to the microphone if you want to leave feedback",
    "start": "1505640",
    "end": "1512760"
  },
  {
    "text": "here you go uh if you want to run grab lunch we are not offended at all uh lunch is very important for your health",
    "start": "1512760",
    "end": "1519880"
  },
  {
    "text": "thank [Applause] [Music]",
    "start": "1519880",
    "end": "1526679"
  },
  {
    "text": "you",
    "start": "1526679",
    "end": "1529679"
  },
  {
    "text": "um hello uh so uh great presentation thank you very much uh I have a question",
    "start": "1532320",
    "end": "1538399"
  },
  {
    "text": "since you mentioned that you thought of everything could you possibly share your thoughts behind why is it uh filled",
    "start": "1538399",
    "end": "1545600"
  },
  {
    "text": "inside an init container and not its own set of containers why did you make that",
    "start": "1545600",
    "end": "1551480"
  },
  {
    "text": "decision to Define side card containers basically piggyback only Min",
    "start": "1551480",
    "end": "1556679"
  },
  {
    "text": "containers don't I can so uh the main idea was that uh we wanted to make sure",
    "start": "1556679",
    "end": "1563039"
  },
  {
    "text": "that Sonic running side car is running while init containers are running and uh",
    "start": "1563039",
    "end": "1568679"
  },
  {
    "text": "we also knew that not every init container wants to run with a side car so uh if we will put it in some other",
    "start": "1568679",
    "end": "1576080"
  },
  {
    "text": "collection we will need to have coordination with init containers after that and we didn't want this coordination effectively have it already",
    "start": "1576080",
    "end": "1582559"
  },
  {
    "text": "right so the unit containers without restart holders run as init containers and only then the",
    "start": "1582559",
    "end": "1589399"
  },
  {
    "text": "containers we or can you actually mix and match yes we can mix mix and match and order will be preserved so first",
    "start": "1589399",
    "end": "1596240"
  },
  {
    "text": "container will run second container with restart policy will start up and only",
    "start": "1596240",
    "end": "1601399"
  },
  {
    "text": "after it fully start up second third container will run so ordering is preser",
    "start": "1601399",
    "end": "1606559"
  },
  {
    "text": "container could be just a simple init container not a side C yes and it will run to completion before the next car",
    "start": "1606559",
    "end": "1613640"
  },
  {
    "text": "container will run okay yes thank you",
    "start": "1613640",
    "end": "1619360"
  },
  {
    "text": "uh in 1.29 how are you planning to implement the order of termination is it depend on the order of init containers",
    "start": "1619360",
    "end": "1626120"
  },
  {
    "text": "that we configure uh yeah it's the reverse order that we started them up in so the basically look at the list of in",
    "start": "1626120",
    "end": "1632760"
  },
  {
    "text": "containers look at your side cars and going in reverse is how they're terminated got it thank",
    "start": "1632760",
    "end": "1638679"
  },
  {
    "text": "you piggy backing off of the uh first question um right now the field uh set",
    "start": "1638799",
    "end": "1646440"
  },
  {
    "text": "to like either never restart or always restart is there a more option is there",
    "start": "1646440",
    "end": "1654200"
  },
  {
    "text": "a idea for adding more options to that restart field or is it just going to always be like never restart or always",
    "start": "1654200",
    "end": "1662039"
  },
  {
    "text": "restart there are ideas um not for in containers but because for in containers basically support all of them like we",
    "start": "1662039",
    "end": "1668600"
  },
  {
    "text": "have three never on failure and always right so we kind of support all of them",
    "start": "1668600",
    "end": "1674600"
  },
  {
    "text": "uh I mean you can only specify always so really r on default and default will be either all but theoretically we can",
    "start": "1674600",
    "end": "1681200"
  },
  {
    "text": "introduce three of them and wouldn't be a problem uh the ideas are for uh main",
    "start": "1681200",
    "end": "1687399"
  },
  {
    "text": "containers for main containers Beyond uh never on failer and restart some ideas",
    "start": "1687399",
    "end": "1693600"
  },
  {
    "text": "of how how can we say that container is so important that uh it will restart",
    "start": "1693600",
    "end": "1700080"
  },
  {
    "text": "alongside entire Port so it will basically terminate the entire port and restart as a whole Port together so",
    "start": "1700080",
    "end": "1706720"
  },
  {
    "text": "that's kind of new values it may be the same field may be different field but uh that is uh new life cycle ideas that we",
    "start": "1706720",
    "end": "1713640"
  },
  {
    "text": "have for borts all right thank you hey thanks for the talk uh I just",
    "start": "1713640",
    "end": "1720120"
  },
  {
    "text": "wanted to ask I know about service meses I I saw that you mentioned that ISO now",
    "start": "1720120",
    "end": "1726000"
  },
  {
    "text": "offers uh Native support for sidecar containers uh do other service meshes",
    "start": "1726000",
    "end": "1732320"
  },
  {
    "text": "not offer this support how does a service mesh uh handle requests and",
    "start": "1732320",
    "end": "1737840"
  },
  {
    "text": "things from sidecar containers in general can you if you can speak to that bit um so they're really they're just uh",
    "start": "1737840",
    "end": "1745080"
  },
  {
    "text": "they're just regular containers in the Pod um we just start them earlier and then also Define a termination ordering",
    "start": "1745080",
    "end": "1750679"
  },
  {
    "text": "but other than that they just act like regular containers within the Pod so if you have a side car that you're running as a main container now for the most",
    "start": "1750679",
    "end": "1757559"
  },
  {
    "text": "part you can probably just turn it into a side car by moving it to the knit containers at the restart policy to always and you've gotten um serialized",
    "start": "1757559",
    "end": "1765440"
  },
  {
    "text": "and known initialization termination orders so it should work out of the box okay I guess I was a little confused by",
    "start": "1765440",
    "end": "1771640"
  },
  {
    "text": "you know what ISO means by native support maybe it's a better question for sto but yeah so right now how e works it",
    "start": "1771640",
    "end": "1780279"
  },
  {
    "text": "uh has a this injection proxy and for every port it will inject the side car",
    "start": "1780279",
    "end": "1785440"
  },
  {
    "text": "side car is basically Envoy proxy uh preconfigured it will inject it as a regular container so what they",
    "start": "1785440",
    "end": "1791760"
  },
  {
    "text": "implemented is uh if they detect it 129 and it has side car support they will",
    "start": "1791760",
    "end": "1797320"
  },
  {
    "text": "injected as a new type of like init container with restart policy always and",
    "start": "1797320",
    "end": "1802880"
  },
  {
    "text": "it helps a lot because now they cover in containers that they have better termination so I mean it's the same",
    "start": "1802880",
    "end": "1809840"
  },
  {
    "text": "functionality but better okay got it thanks I appreciate it yeah I think like what uh Sergey had mentioned with fuse",
    "start": "1809840",
    "end": "1816200"
  },
  {
    "text": "it may allow some of them to remove some container or some logic that they're doing now where they're trying to sort of enforce this initialization order",
    "start": "1816200",
    "end": "1822720"
  },
  {
    "text": "determination order themselves and just rely on the fact that that's how that's how side cars work now so",
    "start": "1822720",
    "end": "1829200"
  },
  {
    "text": "I have a question so uh once the part runs is it is it the default setting of",
    "start": "1829200",
    "end": "1834640"
  },
  {
    "text": "the side C that it's going to run automatically once it",
    "start": "1834640",
    "end": "1839519"
  },
  {
    "text": "starts so we will um from a kuet perspective we will start you uh you",
    "start": "1839919",
    "end": "1846480"
  },
  {
    "text": "being side car uh and then uh uh we will start side car and we will monitor its",
    "start": "1846480",
    "end": "1852960"
  },
  {
    "text": "execution if it uh terminated or finished we will restart it and started they restarted so uh we will keep it",
    "start": "1852960",
    "end": "1860320"
  },
  {
    "text": "alive for the duration of Port being alive okay got so for doing any type of",
    "start": "1860320",
    "end": "1867000"
  },
  {
    "text": "a code change is site C can be add can be of any value to the main",
    "start": "1867000",
    "end": "1874880"
  },
  {
    "text": "container can you can you repeat the question uh in order to do any code change will the site car will be of any",
    "start": "1874880",
    "end": "1882480"
  },
  {
    "text": "value to the main container I mean doing any code change and testing it I mean if",
    "start": "1882480",
    "end": "1887919"
  },
  {
    "text": "you have already side car implemented as regular container yeah correct yes uh I",
    "start": "1887919",
    "end": "1894440"
  },
  {
    "text": "mean minor changes will be needed mostly changes will be needed in how you terminate so typically side cars today",
    "start": "1894440",
    "end": "1902519"
  },
  {
    "text": "uh will receive a SE term and we'll wait for a little bit uh to provide services for main containers now you shouldn't",
    "start": "1902519",
    "end": "1908559"
  },
  {
    "text": "wait you just like terminate and you know that uh it will be terminated in the right time so probably you'll just",
    "start": "1908559",
    "end": "1914760"
  },
  {
    "text": "remove a little bit of code but other than that is work the same okay gotcha thank",
    "start": "1914760",
    "end": "1920399"
  },
  {
    "text": "you uh so this kind of blurs my understanding a bit of like a knit containers and Main containers so a knit",
    "start": "1920399",
    "end": "1926960"
  },
  {
    "text": "containers now are are just kind of ordered and Main containers are running in parallel is there any like interest",
    "start": "1926960",
    "end": "1933679"
  },
  {
    "text": "in making that maybe more flexible where you could Define like layers of ordering",
    "start": "1933679",
    "end": "1939120"
  },
  {
    "text": "and paration or yeah I think there was a on one of the slides on the things that are not",
    "start": "1939120",
    "end": "1945120"
  },
  {
    "text": "going to be done soon anyway or like sort of implementing a system D like you know container a depends on container B",
    "start": "1945120",
    "end": "1951039"
  },
  {
    "text": "depends on container C and just build a dependency tree and figure out how to start up like this is sort of like a minimal API that gives us the ability to",
    "start": "1951039",
    "end": "1958639"
  },
  {
    "text": "um solve a lot of the problems that we've had with using sort of extend extended side car containers before um",
    "start": "1958639",
    "end": "1965480"
  },
  {
    "text": "without introducing a sort of a whole new set of features and maybe one more followup uh if you only have one main",
    "start": "1965480",
    "end": "1972600"
  },
  {
    "text": "container is there a reason not to just use these init containers exclusively",
    "start": "1972600",
    "end": "1977639"
  },
  {
    "text": "now or yes um the side car containers do not extend the lifetime of the Pod so",
    "start": "1977639",
    "end": "1983399"
  },
  {
    "text": "okay that's the other sort of key thing so if if that was your main container so if you don't have any main container",
    "start": "1983399",
    "end": "1988760"
  },
  {
    "text": "then like it will terminate okay thanks it wouldn't even",
    "start": "1988760",
    "end": "1994120"
  },
  {
    "text": "start okay thank you very much",
    "start": "2000600",
    "end": "2007799"
  }
]