[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "so hello beautiful people of cube corn who came here to listen to me to my talk",
    "start": "350",
    "end": "7400"
  },
  {
    "text": "today let me briefly introduce myself",
    "start": "7400",
    "end": "14179"
  },
  {
    "text": "so I'm Sergi and I have a Python",
    "start": "15770",
    "end": "21210"
  },
  {
    "text": "developer well I am software engineer for maybe 20 or 15 years already",
    "start": "21210",
    "end": "26490"
  },
  {
    "text": "depends on what to count and although all those 15 to 20 years I used Python",
    "start": "26490",
    "end": "32099"
  },
  {
    "text": "for 10 years originally I'm from Siberia now live in Germany Berlin and work in a",
    "start": "32099",
    "end": "40020"
  },
  {
    "text": "company called solando in the department called pricing forecasting as a signal",
    "start": "40020",
    "end": "45510"
  },
  {
    "text": "back end engineer where we do the machine learning for the sales forecasting and I will briefly provide",
    "start": "45510",
    "end": "53850"
  },
  {
    "start": "52000",
    "end": "83000"
  },
  {
    "text": "you some information about this company so the londo is one of the biggest",
    "start": "53850",
    "end": "59699"
  },
  {
    "text": "online retailers and the fashion platform in europe with almost half a million of articles on sales and we",
    "start": "59699",
    "end": "66869"
  },
  {
    "text": "operate in 17 countries also in europe and technically so go into the technical",
    "start": "66869",
    "end": "72750"
  },
  {
    "text": "side we have something about 13 millions of 300 millions of site widgets on the",
    "start": "72750",
    "end": "79200"
  },
  {
    "text": "shop per month and the size of the",
    "start": "79200",
    "end": "84570"
  },
  {
    "start": "83000",
    "end": "397000"
  },
  {
    "text": "company is pretty big so it's something about 14,000 employees of which 2,000",
    "start": "84570",
    "end": "90030"
  },
  {
    "text": "signed a technology department and in that technology department we have",
    "start": "90030",
    "end": "95520"
  },
  {
    "text": "something about 200 teams which use something about 140 kubernetes clusters",
    "start": "95520",
    "end": "102000"
  },
  {
    "text": "so the kubernetes is the default deployment platform in our company and",
    "start": "102000",
    "end": "110159"
  },
  {
    "text": "we well and in our team we also use it actively in the team so this is the",
    "start": "110159",
    "end": "116969"
  },
  {
    "text": "slogan which I relate the most about the company's disease so we dress code and",
    "start": "116969",
    "end": "123299"
  },
  {
    "text": "in our team we orchestrate the machine learning applications specifically the machine learning pipelines and machine",
    "start": "123299",
    "end": "128580"
  },
  {
    "text": "learning API is not only of the models but also the applications as they deployed",
    "start": "128580",
    "end": "134280"
  },
  {
    "text": "provided as micro-services and some time ago we had to migrate these applications",
    "start": "134280",
    "end": "139319"
  },
  {
    "text": "from a legacy system to kubernetes and since kubernetes was so good in",
    "start": "139319",
    "end": "144690"
  },
  {
    "text": "orchestrating things we decided to use kubernetes also to orchestrate our applications and our domain entities but",
    "start": "144690",
    "end": "152670"
  },
  {
    "text": "first before we go for the technical parts let me quickly remind you here click on",
    "start": "152670",
    "end": "158010"
  },
  {
    "text": "what kubernetes is so kubernetes is often defined as an Orchestrator of",
    "start": "158010",
    "end": "165180"
  },
  {
    "text": "containers where you just pods where you just create a llam√≥ file and you create",
    "start": "165180",
    "end": "170640"
  },
  {
    "text": "posts or UK deployments consisting of thoughts or jokes consisting of cords or services and ingresses where you do",
    "start": "170640",
    "end": "177090"
  },
  {
    "text": "traffic for the pods and so on and so on about the pods and idle sounds some time",
    "start": "177090",
    "end": "183750"
  },
  {
    "text": "ago it wasn't in the main purpose of kubernetes the magic happens there so",
    "start": "183750",
    "end": "190080"
  },
  {
    "text": "everything just works out of the box however kubernetes actually is under the",
    "start": "190080",
    "end": "195090"
  },
  {
    "text": "hood is an API so from the software development point of view it's a restful api a database for the persistence it's",
    "start": "195090",
    "end": "202230"
  },
  {
    "text": "an access control system it's a common line toolkit the whole ecosystem of the common line toolkits and the UI",
    "start": "202230",
    "end": "208200"
  },
  {
    "text": "applications of a CI CD applications so everything already is ready out of the box so basically it's a restful",
    "start": "208200",
    "end": "218540"
  },
  {
    "text": "application management system and if you",
    "start": "218540",
    "end": "225750"
  },
  {
    "text": "want to extend since custom resources work I did it open that as one or two",
    "start": "225750",
    "end": "232590"
  },
  {
    "text": "years ago all these api's and common line tools and databases became available for the applications for the",
    "start": "232590",
    "end": "239010"
  },
  {
    "text": "application developers so they can be used to orchestrate their arbitrary",
    "start": "239010",
    "end": "244980"
  },
  {
    "text": "resources in the same way as the internet built-in resources like pods you just define a gamma file you apply",
    "start": "244980",
    "end": "251820"
  },
  {
    "text": "it and voila you have it all also out of the box but",
    "start": "251820",
    "end": "256859"
  },
  {
    "text": "having a kubernetes as a database over HTTP just means know what 0 value to us",
    "start": "256859",
    "end": "264690"
  },
  {
    "text": "on top of that some business domain logic should be added and here come the controllers and",
    "start": "264690",
    "end": "272520"
  },
  {
    "text": "operators into play and this pattern of controllers and operators basically",
    "start": "272520",
    "end": "277830"
  },
  {
    "text": "implies that some application watches for the changes order of the customer",
    "start": "277830",
    "end": "282930"
  },
  {
    "text": "resources notices them somehow in the first place and second it reacts with all changes by applying changes to some",
    "start": "282930",
    "end": "292020"
  },
  {
    "text": "other resources or creating some other resources or maybe the same resources",
    "start": "292020",
    "end": "297270"
  },
  {
    "text": "that trigger these changes this reaction and this is called an operator and",
    "start": "297270",
    "end": "304290"
  },
  {
    "text": "basically this pattern this pattern of reacting and watching base makes",
    "start": "304290",
    "end": "312770"
  },
  {
    "text": "governance an Orchestrator of everything not just only of containers the common",
    "start": "312770",
    "end": "319380"
  },
  {
    "text": "scenario for this is to basically a completed application deployment so for",
    "start": "319380",
    "end": "326220"
  },
  {
    "text": "example so for example on this elasticsearch operator also made by the",
    "start": "326220",
    "end": "331860"
  },
  {
    "text": "Londo you not only deploy elasticsearch with a single Yama file if you have an operator",
    "start": "331860",
    "end": "338550"
  },
  {
    "text": "engine of course but also this operator looks inside of this application and measure some metrics and scales it up",
    "start": "338550",
    "end": "345000"
  },
  {
    "text": "and down when needed but when you as a software developer start to develop your",
    "start": "345000",
    "end": "352919"
  },
  {
    "text": "own operator you quickly find yourself in a in a hassle of an infrastructure",
    "start": "352919",
    "end": "358169"
  },
  {
    "text": "holder so you have to talk to the API you have to authenticate with this API you have two parallel eyes and multiplex",
    "start": "358169",
    "end": "366000"
  },
  {
    "text": "the events coming from that API you have to marshal the data to the functions and the results back to the",
    "start": "366000",
    "end": "371010"
  },
  {
    "text": "resources you have to you have to do the persistence in case the operator fails",
    "start": "371010",
    "end": "377550"
  },
  {
    "text": "and restarts you have to do the login you have to do the uro hunting and so on a lot of infrastructure logic which is",
    "start": "377550",
    "end": "386370"
  },
  {
    "text": "not the business domain of yours and what do we do when we see a lot of",
    "start": "386370",
    "end": "393750"
  },
  {
    "text": "infrastructure logic which is not a dominated we make a framework",
    "start": "393750",
    "end": "401090"
  },
  {
    "text": "and there is one already in for the kubernetes operators so it's called cob",
    "start": "401090",
    "end": "406700"
  },
  {
    "text": "kubernetes operator framework or covariance operator pythonic framework if you wish so and this world cough also",
    "start": "406700",
    "end": "414000"
  },
  {
    "text": "means head and body part in German and this is actually exactly what a cop does",
    "start": "414000",
    "end": "420540"
  },
  {
    "text": "it just removes all the infrastructure hassle from you and enables fighting for the operators easily so how difficult is",
    "start": "420540",
    "end": "431130"
  },
  {
    "text": "it to make a single operator turns out",
    "start": "431130",
    "end": "436140"
  },
  {
    "text": "it's only three lines of code basically",
    "start": "436140",
    "end": "441180"
  },
  {
    "text": "importing a library connecting it to the resource and the occasion when you want to react and writing a function which",
    "start": "441180",
    "end": "448200"
  },
  {
    "text": "accepts some data about this resource maybe some system objects like the logo or four lines if you count the Domenic",
    "start": "448200",
    "end": "454770"
  },
  {
    "text": "itself which does something how",
    "start": "454770",
    "end": "461400"
  },
  {
    "text": "difficult is it to run an operator well you just do on your note on your",
    "start": "461400",
    "end": "468300"
  },
  {
    "text": "notebook you just do cop run some file dot pi and trance and you can start",
    "start": "468300",
    "end": "473760"
  },
  {
    "text": "manipulating the objects immediately and the operator reacts immediately on your",
    "start": "473760",
    "end": "480780"
  },
  {
    "text": "notebook just operating the resources in the remote in the remote cluster that",
    "start": "480780",
    "end": "486870"
  },
  {
    "text": "even you can start just in few minutes with the operators well we assume that they're custom resource definitions are",
    "start": "486870",
    "end": "493080"
  },
  {
    "text": "already applied and now let me quickly",
    "start": "493080",
    "end": "500090"
  },
  {
    "text": "run you through the features of this framework just to see them which hassle",
    "start": "500090",
    "end": "505440"
  },
  {
    "text": "doesn't remove from you and how does it look like in general when you write the operators so first things first there is",
    "start": "505440",
    "end": "512849"
  },
  {
    "text": "a event handler the low-level event handler which is a closed equivalent of cube control gap - - watch it basically",
    "start": "512849",
    "end": "522300"
  },
  {
    "text": "connects with the API and marshals all the events to the function if the function fails it fails it's never",
    "start": "522300",
    "end": "528660"
  },
  {
    "text": "admitted it's never right right and you can also get all the all the",
    "start": "528660",
    "end": "535460"
  },
  {
    "text": "information about these results in the in the arguments of this function but cop also doesn't stop at this at this",
    "start": "535460",
    "end": "542960"
  },
  {
    "text": "point at this level it goes beyond that it remembers and keeps track of the",
    "start": "542960",
    "end": "548450"
  },
  {
    "text": "objects state of the objects last handled State and detects the essential differences in the in these events",
    "start": "548450",
    "end": "556040"
  },
  {
    "text": "essentials means that those that are not technical like not estoppel some of the metadata may be including like labels",
    "start": "556040",
    "end": "563570"
  },
  {
    "text": "but adapt annotations but not the rest of it so nothing that produces is produced by the system but only those",
    "start": "563570",
    "end": "570020"
  },
  {
    "text": "that are produced by the users and then it decides to trigger this create update",
    "start": "570020",
    "end": "576500"
  },
  {
    "text": "delete handles depending if depending on what has changed and if something has",
    "start": "576500",
    "end": "583070"
  },
  {
    "text": "changed at all and also it keeps track of these as I said it keeps track of the state when the hundreds succeed finally",
    "start": "583070",
    "end": "590990"
  },
  {
    "text": "and to these functions you can also receive not the current state of the object but also the old state of the",
    "start": "590990",
    "end": "597380"
  },
  {
    "text": "object and the give of the fields that have changed which is quite convenient",
    "start": "597380",
    "end": "603080"
  },
  {
    "text": "when you want to react to the some specific fields changed like step dot template or speck dot items or whatever",
    "start": "603080",
    "end": "610460"
  },
  {
    "text": "else and the most difficult part of",
    "start": "610460",
    "end": "616450"
  },
  {
    "text": "developing basically any software is the Europe handling and here cough also",
    "start": "616450",
    "end": "622280"
  },
  {
    "text": "balls and dusted for you it assumes that all the eros all the exceptions in Python are just temporary and if we try",
    "start": "622280",
    "end": "630140"
  },
  {
    "text": "multiple times and try try again the Eden's will just disappear maybe",
    "start": "630140",
    "end": "635150"
  },
  {
    "text": "self resolved like a connection euros and they will be tried until sometime",
    "start": "635150",
    "end": "643070"
  },
  {
    "text": "out you can define the timeout when the unload will be considered totally permanently failed or some number of",
    "start": "643070",
    "end": "648589"
  },
  {
    "text": "referees or you can explicitly say that this handler failed completely and",
    "start": "648589",
    "end": "654140"
  },
  {
    "text": "permanently forever no need to try it so all these exceptions are specially handled and what's more important all",
    "start": "654140",
    "end": "661940"
  },
  {
    "text": "these exceptions are logged well not only to establish it happens but also to the kubernetes",
    "start": "661940",
    "end": "667120"
  },
  {
    "text": "events attached to the resource so you can see them you can see them on queue control describe of this object but what",
    "start": "667120",
    "end": "678579"
  },
  {
    "text": "happens when you cannot identify what's the reason of the hero and the important",
    "start": "678579",
    "end": "684399"
  },
  {
    "text": "part of the ease-of-use which is the main value one of the main values of this framework and the human",
    "start": "684399",
    "end": "689649"
  },
  {
    "text": "friendliness is that we can reduce the breakpoints and humans like breakpoints",
    "start": "689649",
    "end": "695740"
  },
  {
    "text": "especially the breakpoints in their IDs and since cops can run locally not only",
    "start": "695740",
    "end": "702790"
  },
  {
    "text": "in the cluster but locally on your machine it can basically use your IDE and put the breakpoints and here on the screen you can see that a break two",
    "start": "702790",
    "end": "710290"
  },
  {
    "text": "break points are set one is currently at the moment of being executed and you can investigate the state of all the",
    "start": "710290",
    "end": "716439"
  },
  {
    "text": "variables of the object which is being handled and there are few other things",
    "start": "716439",
    "end": "726249"
  },
  {
    "text": "which are worth mentioning I will not put an additional slide for any of them but as I said there is Python login",
    "start": "726249",
    "end": "732370"
  },
  {
    "text": "which is directly mapped to the resources little source events in kubernetes but not the whole login of",
    "start": "732370",
    "end": "738639"
  },
  {
    "text": "course but only the related to them to this sorry resource and if you have for",
    "start": "738639",
    "end": "752889"
  },
  {
    "text": "example your custom authentication methods your custom very very specific clusters custom authentication you can",
    "start": "752889",
    "end": "760930"
  },
  {
    "text": "also implement that the special handlers like unloading handler you can implement the startup and cleanup activities if",
    "start": "760930",
    "end": "767019"
  },
  {
    "text": "you have the global state managed and you can make this operator in fact your operator that you write with this",
    "start": "767019",
    "end": "773019"
  },
  {
    "text": "framework embeddable into other applications so for example you can write an application which is a UI for",
    "start": "773019",
    "end": "778990"
  },
  {
    "text": "kubernetes which runs this operator to monitor the state of the objects and keep them in the global memory and just",
    "start": "778990",
    "end": "784920"
  },
  {
    "text": "show them somewhere in the web or in the UI and also there is a toolkit for",
    "start": "784920",
    "end": "792639"
  },
  {
    "text": "testing the operators there is no code toolkit for managing the resource hierarchies and more and more and more",
    "start": "792639",
    "end": "800050"
  },
  {
    "text": "and if you have some wishes so this is a young framework it's only six or seven",
    "start": "800050",
    "end": "805120"
  },
  {
    "text": "months old so if you have some ideas how it can be used and can be can be extended you can please send the feature",
    "start": "805120",
    "end": "812860"
  },
  {
    "text": "request to the repository by the side of",
    "start": "812860",
    "end": "818830"
  },
  {
    "start": "817000",
    "end": "872000"
  },
  {
    "text": "these fancy features let me show you maybe three patterns just only three but",
    "start": "818830",
    "end": "824650"
  },
  {
    "text": "there can be more of course but three patterns which can be easily implemented with this framework one of the most",
    "start": "824650",
    "end": "830980"
  },
  {
    "text": "common pattern is basically creation of the children as sources when when their parent resource is created and",
    "start": "830980",
    "end": "837810"
  },
  {
    "text": "monitoring their statuses so in this case which we use in our team it's the job creation also persistent vol-plane",
    "start": "837810",
    "end": "845830"
  },
  {
    "text": "creation and then we are not interested in the status of the jobs we are interested in the statuses of the pods",
    "start": "845830",
    "end": "852310"
  },
  {
    "text": "which executed and basically based on these statuses we make decisions on what to do with the parent resource how to",
    "start": "852310",
    "end": "859500"
  },
  {
    "text": "report its success arm or failure or the status and the exchange in this case is",
    "start": "859500",
    "end": "866830"
  },
  {
    "text": "implemented via the status field of the objects so here is the code how it can look like the code fits on there",
    "start": "866830",
    "end": "875080"
  },
  {
    "text": "screaming for the hole okay right okay I remove their inverse but generally the code fits on the screen",
    "start": "875080",
    "end": "881310"
  },
  {
    "text": "you can see that we just create the job resources we use the special methods for",
    "start": "881310",
    "end": "888100"
  },
  {
    "text": "adopting the created job and the pods and putting the labels on it and then we",
    "start": "888100",
    "end": "893890"
  },
  {
    "text": "watch for the ports which have this label only these ports and others will be ignored and by knowing this label",
    "start": "893890",
    "end": "900550"
  },
  {
    "text": "will report back to the parent resource what has happened with this port so this",
    "start": "900550",
    "end": "907570"
  },
  {
    "text": "is one pattern the next pattern is how to orcas in hope can they wear the scale",
    "start": "907570",
    "end": "914440"
  },
  {
    "text": "orchestrate not only the resources in the coop in this class but they also can all orchestrate the resources outside of",
    "start": "914440",
    "end": "919600"
  },
  {
    "text": "the cluster completely irrelevant to the cluster like sage maker like spark",
    "start": "919600",
    "end": "925390"
  },
  {
    "text": "clusters like whatever else we are the initial customer resources in the cluster and the implementation for this",
    "start": "925390",
    "end": "933700"
  },
  {
    "text": "it's also simple smallest I had to",
    "start": "933700",
    "end": "939460"
  },
  {
    "text": "reduce their font size to fit it on the screen slightly but still it fits on the screen here I don't know who imagined to",
    "start": "939460",
    "end": "947290"
  },
  {
    "text": "the details but here you start at background tasks whenever the source is created and in that task you pull the remote system",
    "start": "947290",
    "end": "953560"
  },
  {
    "text": "somehow but it are every 10 seconds and you have the status and put it back on the resource and this what you see on",
    "start": "953560",
    "end": "961180"
  },
  {
    "text": "the screen is what I call the infrastructure hassle this shouldn't be here I couldn't implement this feature too",
    "start": "961180",
    "end": "969460"
  },
  {
    "text": "fast but this is how it should look like and will look like in maybe 2 1 2 weeks just every 10 seconds you express the",
    "start": "969460",
    "end": "977020"
  },
  {
    "text": "intention that every 10 seconds you want this candidate will be triggered and you check the remote system and put the status of that remote system back on to",
    "start": "977020",
    "end": "985210"
  },
  {
    "text": "the custom registers and this third pattern is basically since you can",
    "start": "985210",
    "end": "992440"
  },
  {
    "text": "orchestrate kubernetes since it seems you can all orchestrate the remote system with with the cost of resources",
    "start": "992440",
    "end": "998320"
  },
  {
    "text": "and operators you can use kubernetes as this remote system but it's it is not",
    "start": "998320",
    "end": "1003600"
  },
  {
    "text": "always safe because if you for example add to run pods to an operator and the token is leaked stolen by the hackers",
    "start": "1003600",
    "end": "1010560"
  },
  {
    "text": "the hackers can execute an arbitrary image or container in your cluster and",
    "start": "1010560",
    "end": "1015860"
  },
  {
    "text": "do a lot of bad stuff instead you can implement the operator so that it runs",
    "start": "1015860",
    "end": "1022020"
  },
  {
    "text": "in another cluster where the jobs actually decoded and listens for the resources for their changes and put the",
    "start": "1022020",
    "end": "1027390"
  },
  {
    "text": "results back to the original cast where these resources are created so how",
    "start": "1027390",
    "end": "1033630"
  },
  {
    "text": "difficult do you think it is to implement such a solution it is that",
    "start": "1033630",
    "end": "1042060"
  },
  {
    "text": "simple we just defined only on login handler where you define the remote connection",
    "start": "1042060",
    "end": "1048840"
  },
  {
    "text": "information with the tokens no matter how you'll tip leeteuk these tokens and",
    "start": "1048840",
    "end": "1054000"
  },
  {
    "text": "that's it it works and we use this well we try this solution as a proof of",
    "start": "1054000",
    "end": "1060420"
  },
  {
    "text": "concept in our team tool however we now migrate to another solution which is much more simple but",
    "start": "1060420",
    "end": "1067170"
  },
  {
    "text": "this is a solution proven by practice",
    "start": "1067170",
    "end": "1073100"
  },
  {
    "start": "1072000",
    "end": "1207000"
  },
  {
    "text": "there are some still there still some important features which are absent so I",
    "start": "1074000",
    "end": "1079380"
  },
  {
    "text": "have shown you how to orchestrate the cross resource events across the solar",
    "start": "1079380",
    "end": "1087120"
  },
  {
    "text": "resource relations but you have to basically manage all these patching and Status reactions between them yourself",
    "start": "1087120",
    "end": "1094790"
  },
  {
    "text": "one feature which is going to be implemented little actively soon is that one decorator basically to declare the",
    "start": "1094790",
    "end": "1101340"
  },
  {
    "text": "relation between the resources like the parent resource attica add children resources like my application run which",
    "start": "1101340",
    "end": "1109890"
  },
  {
    "text": "listens to the pods and have it that the same simple as it was for the timer on",
    "start": "1109890",
    "end": "1116640"
  },
  {
    "text": "time handlers another frequent request from the users is how to do the",
    "start": "1116640",
    "end": "1122490"
  },
  {
    "text": "reconciliation for example we have some remote system or even kubernetes object and we want to check them from time to",
    "start": "1122490",
    "end": "1128880"
  },
  {
    "text": "time and for that well there is already some solution partial solution is that we can resume that the cost of resource",
    "start": "1128880",
    "end": "1136260"
  },
  {
    "text": "when the operator is restarted even if nothing has changed but I'm showing you the timer solution and also there will",
    "start": "1136260",
    "end": "1143160"
  },
  {
    "text": "be some background daemons else easily implemented with the same decorator approach so just following the same",
    "start": "1143160",
    "end": "1151200"
  },
  {
    "text": "value of removing the infrastructure hassle and making it easy to implement operators and the typical tasks of the",
    "start": "1151200",
    "end": "1157350"
  },
  {
    "text": "operators so another group of topics is",
    "start": "1157350",
    "end": "1163200"
  },
  {
    "text": "that these operators once they are implemented once the framework is finished with the features the operators",
    "start": "1163200",
    "end": "1169440"
  },
  {
    "text": "has to be easily integrated into the existing operator development kits like",
    "start": "1169440",
    "end": "1175740"
  },
  {
    "text": "the operator lifecycle management and etc etc so some code generation will be added these are the plans and after that",
    "start": "1175740",
    "end": "1184200"
  },
  {
    "text": "the intention is to build a community to help people to develop the operators based on this framework and if you have",
    "start": "1184200",
    "end": "1192990"
  },
  {
    "text": "an idea of all many ideas of all the operators that you would like to develop and maybe like some features please tell",
    "start": "1192990",
    "end": "1200580"
  },
  {
    "text": "me in three term or whatever else and we",
    "start": "1200580",
    "end": "1205800"
  },
  {
    "text": "will consider how to add them so to summarize I would like to",
    "start": "1205800",
    "end": "1213560"
  },
  {
    "start": "1207000",
    "end": "1307000"
  },
  {
    "text": "highlight how easy it should be to write as it is to write the operators",
    "start": "1213560",
    "end": "1219900"
  },
  {
    "text": "kubernetes operators and since it is so easy and since you don't have this infrastructure order which you have to",
    "start": "1219900",
    "end": "1226290"
  },
  {
    "text": "maintain which means costs it can be used to write the ad hoc operators and",
    "start": "1226290",
    "end": "1231810"
  },
  {
    "text": "ad hoc in this case means that you can write an operator just for your application it's not reusable like phosphorus or elastic search operators",
    "start": "1231810",
    "end": "1238290"
  },
  {
    "text": "or whatever just for one specific use case for one specific application which is probably in-house and you don't worry",
    "start": "1238290",
    "end": "1244530"
  },
  {
    "text": "that it will be difficult to maintain it because well you don't you only have the business project there and also it is",
    "start": "1244530",
    "end": "1251250"
  },
  {
    "text": "easy to write the operators with Python because now as far as I know the",
    "start": "1251250",
    "end": "1257580"
  },
  {
    "text": "operators are usually written with coal and this basically excludes Python community which is huge enough from this",
    "start": "1257580",
    "end": "1264090"
  },
  {
    "text": "field of operators which can benefit from Python community they are actually",
    "start": "1264090",
    "end": "1270920"
  },
  {
    "text": "and one more time is that I would like to highlight it ok kubernetes is the",
    "start": "1270920",
    "end": "1277830"
  },
  {
    "text": "orchestrator of everything not only of containers so you can maybe forget about the containers and orchestrate your own",
    "start": "1277830",
    "end": "1282990"
  },
  {
    "text": "pipelines own API is with the same approach and that's it so their",
    "start": "1282990",
    "end": "1290610"
  },
  {
    "text": "simplicity and human friendliness is their number one priority from this framework it is as I said already it is",
    "start": "1290610",
    "end": "1297840"
  },
  {
    "text": "quite young so if you would like to contribute them please do and at least",
    "start": "1297840",
    "end": "1303840"
  },
  {
    "text": "start with using it here are the links",
    "start": "1303840",
    "end": "1310700"
  },
  {
    "start": "1307000",
    "end": "1332000"
  },
  {
    "text": "if you want to make a photo please make a photo the documentation is quite a",
    "start": "1310700",
    "end": "1318660"
  },
  {
    "text": "wall so you can start with in there there are some little mistakes but if you can figure them out actually and I",
    "start": "1318660",
    "end": "1324690"
  },
  {
    "text": "will fix them later",
    "start": "1324690",
    "end": "1327320"
  },
  {
    "text": "so questions I have seen that you have",
    "start": "1329900",
    "end": "1343580"
  },
  {
    "start": "1332000",
    "end": "1357000"
  },
  {
    "text": "used PI cube as the pipe model for cough why kubernetes pattern model was not",
    "start": "1343580",
    "end": "1351980"
  },
  {
    "text": "used what was the advantage of using PI Q as a postal yeah I tried I tried few",
    "start": "1351980",
    "end": "1357380"
  },
  {
    "start": "1357000",
    "end": "1397000"
  },
  {
    "text": "libraries initially it was kubernetes official Python client however it is developed so that all them met with it's",
    "start": "1357380",
    "end": "1364490"
  },
  {
    "text": "not object-oriented so we have create memes based port method a creating space job and you have to keep the mapping of",
    "start": "1364490",
    "end": "1371059"
  },
  {
    "text": "these methods to the object that you want to manipulate it was very difficult and I didn't want to create this making",
    "start": "1371059",
    "end": "1377540"
  },
  {
    "text": "and then I switched to PI cube in G which is more object-oriented however",
    "start": "1377540",
    "end": "1385100"
  },
  {
    "text": "both kubernetes client and Hydra PG verse in central synchronous and they used synchronous socket reads and it was",
    "start": "1385100",
    "end": "1392390"
  },
  {
    "text": "a big problem because there the framework this framework is a synchronous and basically scenes let me",
    "start": "1392390",
    "end": "1399290"
  },
  {
    "start": "1397000",
    "end": "1447000"
  },
  {
    "text": "say two or three days there is a release of new of new version which is fully a",
    "start": "1399290",
    "end": "1404330"
  },
  {
    "text": "synchronous so Evan pipe UPG is not used as a client for that however what",
    "start": "1404330",
    "end": "1410480"
  },
  {
    "text": "kubernetes client and pi q kanji are used for piggybacking there there are authentication methods because I don't",
    "start": "1410480",
    "end": "1416780"
  },
  {
    "text": "want to put the full authentication complexity into this framework and if",
    "start": "1416780",
    "end": "1422090"
  },
  {
    "text": "those libraries are installed they will be used to extract the token basic of",
    "start": "1422090",
    "end": "1428110"
  },
  {
    "text": "SSL Certificates and this information to how to communicate with the customer so",
    "start": "1428110",
    "end": "1436070"
  },
  {
    "text": "they are still there but they are not actually used because all their synchronous and have some design in case",
    "start": "1436070",
    "end": "1443570"
  },
  {
    "text": "of kubernetes they have some design troubles",
    "start": "1443570",
    "end": "1447190"
  },
  {
    "start": "1447000",
    "end": "1542000"
  },
  {
    "text": "so with with operators being this easy to create in in Python and it's a you",
    "start": "1452070",
    "end": "1459909"
  },
  {
    "text": "know the examples are you know got me thinking about all sorts of things I could be doing have you found any",
    "start": "1459909",
    "end": "1466629"
  },
  {
    "text": "particular use cases where you don't necessarily need the custom resource definition with it like an operator that",
    "start": "1466629",
    "end": "1473499"
  },
  {
    "text": "does things on resources that already exist in the cluster or do you find that really the operator pattern there really",
    "start": "1473499",
    "end": "1479679"
  },
  {
    "text": "only works best when you pair it with a custom resource definition that is keeping an eye on it depends on what",
    "start": "1479679",
    "end": "1486730"
  },
  {
    "text": "problems do you want to solve so if you want to orchestrate something of your own then you have customers then you use",
    "start": "1486730",
    "end": "1493090"
  },
  {
    "text": "custom resources if you want to write a controller then you can watch for the pod jobs deployments and all other",
    "start": "1493090",
    "end": "1499749"
  },
  {
    "text": "built-in objects about the built-in resources and that will also work so this is not a problem all the resources",
    "start": "1499749",
    "end": "1507309"
  },
  {
    "text": "are the same for this framework so if you see any idea of how it can be used then you're welcome to write it in our",
    "start": "1507309",
    "end": "1514720"
  },
  {
    "text": "use case of possibly use the custom resources because our domain machine learning applications are not the",
    "start": "1514720",
    "end": "1523869"
  },
  {
    "text": "built-in resources are not enough for this so we have to define our own runs and pipelines are there any limitations",
    "start": "1523869",
    "end": "1532899"
  },
  {
    "text": "that the Python operator can't do that the go operator frameworks can yes a lot",
    "start": "1532899",
    "end": "1544259"
  },
  {
    "start": "1542000",
    "end": "1582000"
  },
  {
    "text": "so admission hooks for example I forgot to mention the admission hooks they're",
    "start": "1544289",
    "end": "1549369"
  },
  {
    "text": "currently absent they're in the backlog I will add them sometime later the",
    "start": "1549369",
    "end": "1554529"
  },
  {
    "text": "difficulty is that it will be they have to run also when the operator runs locally on the live on the notebooks and",
    "start": "1554529",
    "end": "1560519"
  },
  {
    "text": "there should be some port forwarding magic implemented maybe some other",
    "start": "1560519",
    "end": "1569289"
  },
  {
    "text": "features so it's better if you ask specifically which features are would you like to have but yes this is this",
    "start": "1569289",
    "end": "1574629"
  },
  {
    "text": "framework is not yet that mature as maybe gold frameworks",
    "start": "1574629",
    "end": "1581070"
  },
  {
    "text": "yeah Tess no I don't have a particular task in mind I haven't written an",
    "start": "1581750",
    "end": "1587190"
  },
  {
    "start": "1582000",
    "end": "1627000"
  },
  {
    "text": "operator before so it's I'd like I know Python should I learn go if I want to do an operator and if it's just a matter of",
    "start": "1587190",
    "end": "1595760"
  },
  {
    "text": "expanding copy itself to make it available as opposed to for some reason the API just can't do it then that's",
    "start": "1595760",
    "end": "1604050"
  },
  {
    "text": "fine okay",
    "start": "1604050",
    "end": "1608990"
  },
  {
    "start": "1627000",
    "end": "1722000"
  },
  {
    "text": "that's yeah kind of like a follow-up question on that so in their stole like",
    "start": "1628370",
    "end": "1636480"
  },
  {
    "text": "in the goal client you have informers to",
    "start": "1636480",
    "end": "1641520"
  },
  {
    "text": "watch this and that's kind of the recommended way to to implement these controllers when you want to watch",
    "start": "1641520",
    "end": "1647750"
  },
  {
    "text": "resources in your coordinators cluster in Python though there is no API call",
    "start": "1647750",
    "end": "1654570"
  },
  {
    "text": "for that it's just to watch for the Python client how you guys implement and",
    "start": "1654570",
    "end": "1659580"
  },
  {
    "text": "essentially use the cash to make like a",
    "start": "1659580",
    "end": "1664950"
  },
  {
    "text": "good implementation of this because I'm assuming that if you want to watch bunch of resources and and go has these",
    "start": "1664950",
    "end": "1672060"
  },
  {
    "text": "capabilities already but it's not yet in Python okay yeah maybe I can't answer",
    "start": "1672060",
    "end": "1679920"
  },
  {
    "text": "this question because I don't know what are the information goal in this",
    "start": "1679920",
    "end": "1684930"
  },
  {
    "text": "framework it is implemented as a simple streaming API call over the HTTP with",
    "start": "1684930",
    "end": "1690120"
  },
  {
    "text": "the watch equals true and some additional magic with the resource Russian so it continued every time it is",
    "start": "1690120",
    "end": "1696120"
  },
  {
    "text": "reconnected and basically every individual resource it has only one",
    "start": "1696120",
    "end": "1701190"
  },
  {
    "text": "connection for that so if you have only one resource you will have one connection if you have ten resources or different kinds it'll have ten",
    "start": "1701190",
    "end": "1706620"
  },
  {
    "text": "connections at most and then all these events received from there will be",
    "start": "1706620",
    "end": "1711900"
  },
  {
    "text": "multiplexed in different handlers functions and etcetera Thanks there is",
    "start": "1711900",
    "end": "1720840"
  },
  {
    "text": "no question yes",
    "start": "1720840",
    "end": "1724490"
  },
  {
    "start": "1722000",
    "end": "1777000"
  },
  {
    "text": "the question is what are the most common issues I see when the when developing these operators and deploying them well",
    "start": "1733140",
    "end": "1739950"
  },
  {
    "text": "actually deploying them is the most is the biggest problem right now because I have to write a lot of llamo files for",
    "start": "1739950",
    "end": "1746430"
  },
  {
    "text": "the deployment the intention is to make a little SDK to generate those channels based on the Python code so we put I",
    "start": "1746430",
    "end": "1753060"
  },
  {
    "text": "would like to produce data from the code not code from the data and other issues",
    "start": "1753060",
    "end": "1759450"
  },
  {
    "text": "are always surprises and complexities of talking with the API sometimes",
    "start": "1759450",
    "end": "1765000"
  },
  {
    "text": "disconnects sometimes doesn't behave as as intended but generally they're easily",
    "start": "1765000",
    "end": "1770760"
  },
  {
    "text": "solvable just on the go there are no big difficulties with this so the question",
    "start": "1770760",
    "end": "1796800"
  },
  {
    "start": "1777000",
    "end": "1827000"
  },
  {
    "text": "is did I ever see somebody deploying developing the whole stack from the with the operators maybe I don't get the",
    "start": "1796800",
    "end": "1803370"
  },
  {
    "text": "question exactly what do you mean the whole step with the operators that would",
    "start": "1803370",
    "end": "1816900"
  },
  {
    "text": "the operator would take perhaps not I",
    "start": "1816900",
    "end": "1824670"
  },
  {
    "text": "didn't check that yet but you can go can we open the browser there for the fun of",
    "start": "1824670",
    "end": "1834390"
  },
  {
    "start": "1827000",
    "end": "1887000"
  },
  {
    "text": "it you can go to the git repository and",
    "start": "1834390",
    "end": "1848510"
  },
  {
    "text": "there's a fence link",
    "start": "1848510",
    "end": "1852320"
  },
  {
    "text": "on how it is used and maybe can go watch",
    "start": "1855430",
    "end": "1863350"
  },
  {
    "text": "no no no which where it is used and how",
    "start": "1863350",
    "end": "1869090"
  },
  {
    "text": "it is used Rakhi ideas there was something about",
    "start": "1869090",
    "end": "1877820"
  },
  {
    "text": "redhot two times yeah yes update these",
    "start": "1877820",
    "end": "1889370"
  },
  {
    "text": "ones you spoke well at least get happiness soul any other questions have",
    "start": "1889370",
    "end": "1912260"
  },
  {
    "text": "you ever had an issue with the watch api so with the official Python SDK I've",
    "start": "1912260",
    "end": "1919670"
  },
  {
    "text": "used like the stream watch events but sometimes I need to restart my pod",
    "start": "1919670",
    "end": "1926440"
  },
  {
    "text": "because for some reason it just can't see events anymore how's your frame your operate operators using your framework",
    "start": "1926440",
    "end": "1932930"
  },
  {
    "start": "1927000",
    "end": "1982000"
  },
  {
    "text": "ever had that issue or years I've had that issue there no a few reports that",
    "start": "1932930",
    "end": "1938650"
  },
  {
    "text": "these watching sometimes freeze my assumption currently that it was because of the synchronous sockets because there",
    "start": "1938650",
    "end": "1946220"
  },
  {
    "text": "was a clear issue when the operator was terminated it was hanging there for 16 90 seconds until this something happens",
    "start": "1946220",
    "end": "1952610"
  },
  {
    "text": "in kubernetes in if the cluster is empty enough nothing happens the socket remains in the blocking read state and",
    "start": "1952610",
    "end": "1959530"
  },
  {
    "text": "it never ends and the operator hence there if it will continue with this",
    "start": "1959530",
    "end": "1964850"
  },
  {
    "text": "newly newly newly released version then probably it is something with the APS because people said that it was",
    "start": "1964850",
    "end": "1971360"
  },
  {
    "text": "something about the Watchers but I didn't check that I couldn't reproduce that you have this same problem yeah it",
    "start": "1971360",
    "end": "1978620"
  },
  {
    "text": "so we just run the pod and then maybe after 15 days of running it just freezes",
    "start": "1978620",
    "end": "1987160"
  },
  {
    "text": "so for example we have I guess an operator where it just looks for deployment events and then it just sends",
    "start": "1987160",
    "end": "1993100"
  },
  {
    "text": "a slack message hey can you please clean please approach me after that talk and",
    "start": "1993100",
    "end": "2000240"
  },
  {
    "text": "we can discuss the details so any other questions no no questions so thank you",
    "start": "2000240",
    "end": "2009809"
  },
  {
    "text": "very much what's happening here [Applause]",
    "start": "2009809",
    "end": "2017460"
  }
]