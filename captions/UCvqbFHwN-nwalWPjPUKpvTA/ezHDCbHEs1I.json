[
  {
    "text": "so before we begin I kind of want to Define what I do here and I want to",
    "start": "5819",
    "end": "11280"
  },
  {
    "text": "start by this very detailed drawing of how Planet scale works",
    "start": "11280",
    "end": "18180"
  },
  {
    "text": "um this is a very you know in our infrastructure we have obviously at the core of things we have my sequel",
    "start": "18180",
    "end": "25320"
  },
  {
    "text": "there's some other glue in here that makes everything work and then there is",
    "start": "25320",
    "end": "30420"
  },
  {
    "text": "this layer that I call Edge and I want to call this out because Edge",
    "start": "30420",
    "end": "35760"
  },
  {
    "text": "is kind of different for everybody and in different contexts but for us and and",
    "start": "35760",
    "end": "41579"
  },
  {
    "text": "for me specifically Edge relates to the outermost part of our Network so this is",
    "start": "41579",
    "end": "48059"
  },
  {
    "text": "the edge of our Network it is if you are connecting to a planet scale database if",
    "start": "48059",
    "end": "53399"
  },
  {
    "text": "you are running SQL doing anything against the actual mySQL database you go",
    "start": "53399",
    "end": "59039"
  },
  {
    "text": "through Edge so this is you this is all of you",
    "start": "59039",
    "end": "65040"
  },
  {
    "text": "um some of you are very close to us as in",
    "start": "65040",
    "end": "70619"
  },
  {
    "text": "you might have your servers in the same Data Center and ideally you would provision say you you run your stuff in",
    "start": "70619",
    "end": "77939"
  },
  {
    "text": "AWS Us East uh you also provision a database in Us East and you're kind of",
    "start": "77939",
    "end": "83700"
  },
  {
    "text": "next door to to us and that's kind of the ideal situation for most of our customers",
    "start": "83700",
    "end": "89580"
  },
  {
    "text": "but there's also a good amount of you believe it or not that are far away from",
    "start": "89580",
    "end": "94619"
  },
  {
    "text": "our databases and I am by far I mean geographically far",
    "start": "94619",
    "end": "99900"
  },
  {
    "text": "um so this might be for example you running something on your laptop and you're you're doing some data analysis",
    "start": "99900",
    "end": "106799"
  },
  {
    "text": "or or something like that or which is a little bit more common you might be using a serverless thing where you don't",
    "start": "106799",
    "end": "112920"
  },
  {
    "text": "actually know where your stuff is you've just kind of thrown it out into the internet and the Internet is just you",
    "start": "112920",
    "end": "118860"
  },
  {
    "text": "know do doing its computation and all of that is now phoning back home to to us",
    "start": "118860",
    "end": "124619"
  },
  {
    "text": "so these are kind of two very distinct different problems that we need to deal",
    "start": "124619",
    "end": "130020"
  },
  {
    "text": "with um and we don't want to really be harmful to either of those so if we do optimizations for the people that are",
    "start": "130020",
    "end": "136800"
  },
  {
    "text": "far away we obviously don't want to degrade the experience for the people that are very close to us",
    "start": "136800",
    "end": "144080"
  },
  {
    "text": "uh this specific layer uh so this is wrapping all of our MySQL this is Edge",
    "start": "145440",
    "end": "152640"
  },
  {
    "text": "Edge is responsible for uh kind of our our API I guess we we can call it uh",
    "start": "152640",
    "end": "159420"
  },
  {
    "text": "this API is for directly interfacing with our database typically this is",
    "start": "159420",
    "end": "164760"
  },
  {
    "text": "something that you use with SQL it is responsible for authentication uh so when you you know have credentials you",
    "start": "164760",
    "end": "171300"
  },
  {
    "text": "talk to us we we're not just exposing MySQL directly to the internet that",
    "start": "171300",
    "end": "176819"
  },
  {
    "text": "would cause a lot of problems so we have to have this shim layer of kind of our planet scale sauce that you know doesn't",
    "start": "176819",
    "end": "183480"
  },
  {
    "text": "just just hears a my sequel socket on the internet",
    "start": "183480",
    "end": "188599"
  },
  {
    "text": "so me personally I care a lot about performance I care about your experience",
    "start": "189000",
    "end": "194459"
  },
  {
    "text": "I care about fast applications for the most part we can kind of say",
    "start": "194459",
    "end": "200819"
  },
  {
    "text": "that everyone here probably cares about running queries",
    "start": "200819",
    "end": "206760"
  },
  {
    "text": "against the database you care about things being quickly you probably run some sort of web application",
    "start": "206760",
    "end": "212700"
  },
  {
    "text": "Hit or Miss they all kind of at the same at the end of the day you want things to be fast that's kind of the sales pitch",
    "start": "212700",
    "end": "218519"
  },
  {
    "text": "of our product is that we can we can we can scale really you know large and we can also maintain being fast",
    "start": "218519",
    "end": "227120"
  },
  {
    "text": "but as a software engineer working on this layer there's only so many things I",
    "start": "228360",
    "end": "234000"
  },
  {
    "text": "could do and if you can tell that is a very sad face of mine that I would like to do so much more",
    "start": "234000",
    "end": "242180"
  },
  {
    "text": "but within the scope of my responsibilities you can tell me rewrite it in Rust you",
    "start": "242700",
    "end": "248879"
  },
  {
    "text": "can tell me you know make this algorithm more efficient you can make the computers faster",
    "start": "248879",
    "end": "255000"
  },
  {
    "text": "but at the end of the day there's different orders of magnitudes of when it comes to Performance",
    "start": "255000",
    "end": "263520"
  },
  {
    "text": "a lot of what I do and a lot of my optimizations are in the nanoseconds to",
    "start": "263520",
    "end": "269160"
  },
  {
    "text": "microseconds world I have a lot of control when it comes to",
    "start": "269160",
    "end": "274380"
  },
  {
    "text": "that if someone tells me hey make this algorithm not on that is usually for the",
    "start": "274380",
    "end": "280020"
  },
  {
    "text": "most part typically in like a microseconds or nanoseconds layer",
    "start": "280020",
    "end": "285360"
  },
  {
    "text": "but the real issue is the milliseconds and that's generally for the most part",
    "start": "285360",
    "end": "291479"
  },
  {
    "text": "what we can't control my entire stack of software",
    "start": "291479",
    "end": "297120"
  },
  {
    "text": "executes well under a single millisecond so any kind of incremental improvements",
    "start": "297120",
    "end": "302880"
  },
  {
    "text": "we make generally are in single digit microseconds nanoseconds these are",
    "start": "302880",
    "end": "308759"
  },
  {
    "text": "important for us because when you when you think about doing database access doing a select one",
    "start": "308759",
    "end": "315720"
  },
  {
    "text": "is very fast so adding on a millisecond of latency to a select one is very",
    "start": "315720",
    "end": "323039"
  },
  {
    "text": "noticeable it's less noticeable when you are talking from Europe talking to a US database",
    "start": "323039",
    "end": "329759"
  },
  {
    "text": "that millisecond isn't going to be noticeable but it is going to be noticeable if you're in the data center",
    "start": "329759",
    "end": "334820"
  },
  {
    "text": "or in the same data center or data center next door but I can't control that path that's",
    "start": "334820",
    "end": "341039"
  },
  {
    "text": "that's either clients that's your internet connectivity that is your ISP that is your data provider that is out",
    "start": "341039",
    "end": "348539"
  },
  {
    "text": "of my hands so where this kind of comes together is",
    "start": "348539",
    "end": "353880"
  },
  {
    "text": "our database has an API and I kind of want to separate the concern that this is a an",
    "start": "353880",
    "end": "361440"
  },
  {
    "text": "API for the database layer not for managing our",
    "start": "361440",
    "end": "368000"
  },
  {
    "text": "managing the product so it's a little bit different line here so this is how I'm going to get access in and out of of",
    "start": "368000",
    "end": "375479"
  },
  {
    "text": "our database so we have two of these apis the first one is a pretty obvious uh you",
    "start": "375479",
    "end": "384660"
  },
  {
    "text": "you interface with mySQL and by that I mean explicitly the MySQL protocol",
    "start": "384660",
    "end": "391620"
  },
  {
    "text": "not necessarily MySQL the database as an API we run mySQL database but the",
    "start": "391620",
    "end": "396780"
  },
  {
    "text": "protocol is its own separate thing this is what you get if you are using let's",
    "start": "396780",
    "end": "403080"
  },
  {
    "text": "let's say python for example and you you install the you know my SQL client package use the MySQL CLI tool",
    "start": "403080",
    "end": "410460"
  },
  {
    "text": "you're going to be communicating through the MySQL protocol so we all know this you might not know",
    "start": "410460",
    "end": "417479"
  },
  {
    "text": "it to a level of of how I actually write my SQL protocol or what the packets look",
    "start": "417479",
    "end": "422699"
  },
  {
    "text": "like but it's really an RPC API like there's nothing really too fancy going on it has",
    "start": "422699",
    "end": "430620"
  },
  {
    "text": "a uh honestly a series of commands like for example the common one is com query",
    "start": "430620",
    "end": "437160"
  },
  {
    "text": "and that is its own structured binary packet you can send com query and that is how you send along SQL",
    "start": "437160",
    "end": "445199"
  },
  {
    "text": "it's a really easy thing especially for to to implement uh you just open up a",
    "start": "445199",
    "end": "450240"
  },
  {
    "text": "TCP socket and you just put some bytes on it and you expect to get some bytes back it's its own unique thing",
    "start": "450240",
    "end": "457259"
  },
  {
    "text": "uh the one thing I want to point out it is that it is a stateful protocol so a",
    "start": "457259",
    "end": "463139"
  },
  {
    "text": "good majority of you are probably aware that you open up many connections and",
    "start": "463139",
    "end": "469199"
  },
  {
    "text": "you need to you know typically manage some sort of connection Pooler and a lot of the state",
    "start": "469199",
    "end": "475440"
  },
  {
    "text": "of your connections or transactions session variables things like that are tied to that open connection",
    "start": "475440",
    "end": "482580"
  },
  {
    "text": "so if at any point if that connection is severed the state that is maintained",
    "start": "482580",
    "end": "487919"
  },
  {
    "text": "with that connection is lost so if you were executing 10 queries it got through",
    "start": "487919",
    "end": "493139"
  },
  {
    "text": "and you you ran through five of them and then you have a network interruption uh depending on what you're doing if you",
    "start": "493139",
    "end": "499139"
  },
  {
    "text": "have or within a transaction things like that you've lost your session maybe some",
    "start": "499139",
    "end": "504360"
  },
  {
    "text": "of it's half committed uh it it's really kind of you know for the most part indeterministic from my point of view",
    "start": "504360",
    "end": "510599"
  },
  {
    "text": "here so the other API that we have is http",
    "start": "510599",
    "end": "516719"
  },
  {
    "text": "this is the language of the internet whether we like it or not it is pretty ubiquitous just in existence it's",
    "start": "516719",
    "end": "524760"
  },
  {
    "text": "everywhere but you probably didn't know that we have this API",
    "start": "524760",
    "end": "531060"
  },
  {
    "text": "um it's not a restful API so it's not something that you're you know what you would traditionally find it's very",
    "start": "531060",
    "end": "537540"
  },
  {
    "text": "different from our API to manage our product it is specifically designed for",
    "start": "537540",
    "end": "543839"
  },
  {
    "text": "interacting with a database and one nice thing about it is it is",
    "start": "543839",
    "end": "549420"
  },
  {
    "text": "stateless so in this case your state is not tied to the actual connection so",
    "start": "549420",
    "end": "554940"
  },
  {
    "text": "similar to how you interact with a browser session on a website you're logged in you might bounce to you know",
    "start": "554940",
    "end": "561720"
  },
  {
    "text": "your connection is going to go away but you're not logged out um so HTTP kind of is inherently stateless",
    "start": "561720",
    "end": "568500"
  },
  {
    "text": "in that case people also really like this thing called Json or Json however you want to",
    "start": "568500",
    "end": "576600"
  },
  {
    "text": "pronounce it I like to say Json but I think it's wrong but it's a thing people like to do it's",
    "start": "576600",
    "end": "582120"
  },
  {
    "text": "really easy to interact with you can write Json by hand it doesn't require you to implement parsers it's just a",
    "start": "582120",
    "end": "589860"
  },
  {
    "text": "very known structure which means it interrupts with other languages very very well",
    "start": "589860",
    "end": "596519"
  },
  {
    "text": "it works with curl so it's really nice in our case it's kind of convenient you can just uh",
    "start": "596519",
    "end": "602760"
  },
  {
    "text": "command line just run something with curl and work with Json if you needed to",
    "start": "602760",
    "end": "608519"
  },
  {
    "text": "where things get interesting is that it also supports grpc and if you're not",
    "start": "608519",
    "end": "615000"
  },
  {
    "text": "very keenly aware grpc",
    "start": "615000",
    "end": "620040"
  },
  {
    "text": "is transported over HTTP so it's kind of a it's not its own thing it's kind of",
    "start": "620040",
    "end": "625260"
  },
  {
    "text": "another layer of a format on HTTP so we kind of get that I don't want to say for",
    "start": "625260",
    "end": "630360"
  },
  {
    "text": "free but it's it it works with us and it's very complementary",
    "start": "630360",
    "end": "635880"
  },
  {
    "text": "this is all undocumented because this is all pretty new just FYI I fully plan on getting this documented",
    "start": "635880",
    "end": "642600"
  },
  {
    "text": "very very soon but it's it's complicated but we're getting there",
    "start": "642600",
    "end": "648120"
  },
  {
    "text": "so right now though everyone is using MySQL",
    "start": "648120",
    "end": "653160"
  },
  {
    "text": "I hope that's gonna change I have selfish reasons as an infrastructure provider why why this would be nice but",
    "start": "653160",
    "end": "659820"
  },
  {
    "text": "for the most part like it it's not gonna go away no matter what we can't we're",
    "start": "659820",
    "end": "665100"
  },
  {
    "text": "never gonna convince people like hey you're gonna adopt this bleeding new you know vendor lock-in Tech it's just not",
    "start": "665100",
    "end": "671820"
  },
  {
    "text": "gonna happen we have to provide compelling reasons so at some point we might be able to convince people to do",
    "start": "671820",
    "end": "678300"
  },
  {
    "text": "it if we can sell them enough reasons to say this is objectively better here's",
    "start": "678300",
    "end": "683339"
  },
  {
    "text": "what you're getting but for now it's never going to go away we have to support the MySQL protocol but maybe",
    "start": "683339",
    "end": "689279"
  },
  {
    "text": "someday that's something that we could we we can pull off",
    "start": "689279",
    "end": "694380"
  },
  {
    "text": "so here's where I'm going to rant a little bit uh so as a service provider my sequel is not",
    "start": "694380",
    "end": "701940"
  },
  {
    "text": "a very good thing for us to support so starting with stateful connections",
    "start": "701940",
    "end": "709560"
  },
  {
    "text": "as a service provider your your your all of your session",
    "start": "709560",
    "end": "714600"
  },
  {
    "text": "information is tied to that individual connection you have which means we have no capability of disconnecting a",
    "start": "714600",
    "end": "722279"
  },
  {
    "text": "connection that you have open if we do that is very disruptive to a majority of",
    "start": "722279",
    "end": "727920"
  },
  {
    "text": "people's applications depending on what clients they use in some cases it's not that bad but for",
    "start": "727920",
    "end": "734040"
  },
  {
    "text": "the most cases it's kind of uh it's it's disruptive so what that means for us is like we it",
    "start": "734040",
    "end": "740700"
  },
  {
    "text": "makes it hard for us to deploy software we can't easily restart things like you",
    "start": "740700",
    "end": "748320"
  },
  {
    "text": "you typically could all of this can be summarized by it's not HTTP and I kind",
    "start": "748320",
    "end": "754200"
  },
  {
    "text": "of mean I don't mean that HTTP itself is superior the ubiquity that came with HTTP just",
    "start": "754200",
    "end": "760620"
  },
  {
    "text": "kind of gives the ecosystem a lot of these tools and it's meant to",
    "start": "760620",
    "end": "765779"
  },
  {
    "text": "handle very lossy scenarios um things going up and down if we want",
    "start": "765779",
    "end": "771540"
  },
  {
    "text": "to add new servers remove servers deploying code it's relatively non-trivial with my sequel",
    "start": "771540",
    "end": "778920"
  },
  {
    "text": "my favorite personal part is clients once they have a MySQL connection",
    "start": "778920",
    "end": "784200"
  },
  {
    "text": "because everything is stateful they literally never disconnect um some do some connection poolers are a",
    "start": "784200",
    "end": "792120"
  },
  {
    "text": "little bit more kind and say you know every hour maybe it'll recycle connections",
    "start": "792120",
    "end": "797279"
  },
  {
    "text": "but in a vast majority of cases once a client has opened up a TCP connection it",
    "start": "797279",
    "end": "803339"
  },
  {
    "text": "kind of assumes it's never gonna go away and a lot of these assumptions are",
    "start": "803339",
    "end": "809100"
  },
  {
    "text": "because you are running your own MySQL server and the only reason why you would",
    "start": "809100",
    "end": "814500"
  },
  {
    "text": "disconnect is like I've restarted the server or done something disruptive there's not typically some layer in",
    "start": "814500",
    "end": "821100"
  },
  {
    "text": "between like us where we need to deploy software and do more of like continuous",
    "start": "821100",
    "end": "826320"
  },
  {
    "text": "deployment on um but clients never disconnect which is which is tricky for us",
    "start": "826320",
    "end": "832139"
  },
  {
    "text": "because all these stateful connections there's a lot of them uh those of you",
    "start": "832139",
    "end": "837180"
  },
  {
    "text": "that do any large-scale web application are pretty aware that you kind of need",
    "start": "837180",
    "end": "842639"
  },
  {
    "text": "a unique connection per parallel request that's happening so you tend to have",
    "start": "842639",
    "end": "848279"
  },
  {
    "text": "applications that have hundreds of connections dozens of connections at minimum just to be able to handle the",
    "start": "848279",
    "end": "854639"
  },
  {
    "text": "throughput throughput because each individual connection is its own State nothing can be multiplexed over it",
    "start": "854639",
    "end": "862079"
  },
  {
    "text": "it s own thing uh and then the last one is a little bit unique in that the TLs support for MySQL",
    "start": "862079",
    "end": "870120"
  },
  {
    "text": "is kind of weird in that it's something that we have to support but it uses this thing called start TLS",
    "start": "870120",
    "end": "878220"
  },
  {
    "text": "which is a basically what that means there's different things there's a few different things that Implement start TLs but it's",
    "start": "878220",
    "end": "886199"
  },
  {
    "text": "a way for MySQL to have Port 3306 standardized and serve both encrypted",
    "start": "886199",
    "end": "893699"
  },
  {
    "text": "and unencrypted traffic in our case as a service provider we don't want to do",
    "start": "893699",
    "end": "898920"
  },
  {
    "text": "unencrypted traffic we want to only give TLS but the way that start TLS works is",
    "start": "898920",
    "end": "904680"
  },
  {
    "text": "there's an initial handshake that's unencrypted and then after those few bits we say hey",
    "start": "904680",
    "end": "911459"
  },
  {
    "text": "we require encryption and it's up to the client to also say I agree with this",
    "start": "911459",
    "end": "918660"
  },
  {
    "text": "and then you negotiate the TLs handshake but what that means is because of that",
    "start": "918660",
    "end": "924180"
  },
  {
    "text": "behavior it mitigate it eliminates the ability for a lot of other software to help us",
    "start": "924180",
    "end": "930060"
  },
  {
    "text": "we can't offload TLS we can't do it like we have to own all of this because we also have to own the MySQL handshake",
    "start": "930060",
    "end": "938120"
  },
  {
    "text": "so we didn't invent the HTTP stuff just for fun we didn't do HTTP necessarily to",
    "start": "939300",
    "end": "945959"
  },
  {
    "text": "solve this problem supporting HTTP by itself doesn't necessarily get us more customers it",
    "start": "945959",
    "end": "952560"
  },
  {
    "text": "doesn't they're just difficult software engineering problems for us to solve but",
    "start": "952560",
    "end": "957660"
  },
  {
    "text": "some of our product demands were wanting to extend the capabilities of MySQL",
    "start": "957660",
    "end": "964440"
  },
  {
    "text": "so the two that I'm going to call out are serverless so whether you use them or not it is a decent amount of our",
    "start": "964440",
    "end": "972000"
  },
  {
    "text": "customers and platforms such as like versel netlify cloudflare workers",
    "start": "972000",
    "end": "977459"
  },
  {
    "text": "whatever all of those like Edge compute things they tend to have a lot more uh",
    "start": "977459",
    "end": "985399"
  },
  {
    "text": "restrictive environments in which they run and they don't just want you to open up you can't just run a TCP",
    "start": "985399",
    "end": "992339"
  },
  {
    "text": "you can't just open up a TCP socket and do whatever you want to anything on the internet they limit the functionality to",
    "start": "992339",
    "end": "999240"
  },
  {
    "text": "basically http and when we want to augment new features",
    "start": "999240",
    "end": "1004600"
  },
  {
    "text": "it's not very trivial for us to just add on to the MySQL protocol while",
    "start": "1004600",
    "end": "1011060"
  },
  {
    "text": "technically we can add new of those like basically rfpc commands and add on new",
    "start": "1011060",
    "end": "1016699"
  },
  {
    "text": "packets and add all this stuff we're kind of at the same problem in that we now have to ship a modified MySQL client",
    "start": "1016699",
    "end": "1024678"
  },
  {
    "text": "for you to view and then like how do you access it you know it's not necessarily SQL",
    "start": "1024679",
    "end": "1029720"
  },
  {
    "text": "so this kind of leads to to being fetch API compatible if you're not",
    "start": "1029720",
    "end": "1036678"
  },
  {
    "text": "very familiar with the web fetch API has kind of become the browser standard for a JavaScript API for making",
    "start": "1036679",
    "end": "1045260"
  },
  {
    "text": "uh HTTP requests so basically it's this this just interface a lot of things",
    "start": "1045260",
    "end": "1051260"
  },
  {
    "text": "implement it um for us being able to support the fetch API opens up the door to a lot of",
    "start": "1051260",
    "end": "1058340"
  },
  {
    "text": "different stuff like serverless or even from the browser directly and we chose for adding new features we",
    "start": "1058340",
    "end": "1065480"
  },
  {
    "text": "want to be able to support grpc because grpc is a pretty common thing if you're",
    "start": "1065480",
    "end": "1070820"
  },
  {
    "text": "using um a lot of like Google services because grpc came from Google",
    "start": "1070820",
    "end": "1075980"
  },
  {
    "text": "are all kind of just natively grpc and you're not particularly aware of it it's just what what they happen to use for",
    "start": "1075980",
    "end": "1082160"
  },
  {
    "text": "transport so so why is grpc interesting to us and",
    "start": "1082160",
    "end": "1088700"
  },
  {
    "text": "where does that fall in here so grpc combines uh this thing called Proto Buffs or protocol buffers and http 2.",
    "start": "1088700",
    "end": "1098480"
  },
  {
    "text": "this is all nicely on top of TCP and HTTP",
    "start": "1098480",
    "end": "1103960"
  },
  {
    "text": "grpc is just kind of a specification for how to you know similar to like a rest",
    "start": "1103960",
    "end": "1110539"
  },
  {
    "text": "API or something like that it's just some structure of how to make calls but for the most part if you're if you just",
    "start": "1110539",
    "end": "1117679"
  },
  {
    "text": "wanted to interact with grpc you don't have to have like a grpc client you can just use HTTP and shape a request to",
    "start": "1117679",
    "end": "1124400"
  },
  {
    "text": "match protobuf is where things get a little bit interesting with that in which the",
    "start": "1124400",
    "end": "1130100"
  },
  {
    "text": "data that is transported can be sent encoded via protobuf and",
    "start": "1130100",
    "end": "1136100"
  },
  {
    "text": "protobuf is a format for it's a definition for how to pack",
    "start": "1136100",
    "end": "1142000"
  },
  {
    "text": "arbitrary structures into bytes so similar to how the MySQL protocol has a",
    "start": "1142000",
    "end": "1147980"
  },
  {
    "text": "com query you know whatever in theory those could be defined as protobufs and",
    "start": "1147980",
    "end": "1154340"
  },
  {
    "text": "have kind of a uniform way to encode and decode those structures and that's kind of what protobuf gives us as just a",
    "start": "1154340",
    "end": "1161960"
  },
  {
    "text": "generic API so similar to like Json we can use protobuf but we get a binary format instead of this plain text Json",
    "start": "1161960",
    "end": "1170660"
  },
  {
    "text": "so is the only slide I promise that has hex",
    "start": "1170660",
    "end": "1176480"
  },
  {
    "text": "and and raw binary but I want to make the point of what this kind of looks",
    "start": "1176480",
    "end": "1181880"
  },
  {
    "text": "like on the wire because there's a lot of preconceived Notions of",
    "start": "1181880",
    "end": "1188960"
  },
  {
    "text": "doing it this way is is worse so if we just kind of look at a com query packet",
    "start": "1188960",
    "end": "1194299"
  },
  {
    "text": "in my sequel and compare it to what the protobuf encoded version of our what we have is a",
    "start": "1194299",
    "end": "1201620"
  },
  {
    "text": "execute request which accomplishes the same goal we can actually see that the protobuf",
    "start": "1201620",
    "end": "1207200"
  },
  {
    "text": "one is shorter and but between both of them what dominates",
    "start": "1207200",
    "end": "1214039"
  },
  {
    "text": "it is the actual payload and this could be the same for basically all the packets it's it's both",
    "start": "1214039",
    "end": "1220700"
  },
  {
    "text": "on a response you're usually getting back many many rows and the padding and",
    "start": "1220700",
    "end": "1225860"
  },
  {
    "text": "overhead of the actual protocol is is for the most part minimal compared to uh",
    "start": "1225860",
    "end": "1233120"
  },
  {
    "text": "the actual payload or even just queries so",
    "start": "1233120",
    "end": "1238640"
  },
  {
    "text": "the only reading that makes this not a one-to-one comparison is because on the protobuf side we are",
    "start": "1238700",
    "end": "1246020"
  },
  {
    "text": "ignoring the HTTP 2 and the grpc part of",
    "start": "1246020",
    "end": "1251120"
  },
  {
    "text": "it and there's kind of a reason for that um it's a lot more complicated to just kind",
    "start": "1251120",
    "end": "1257720"
  },
  {
    "text": "of give an example of what it is because of the way that HTTP 2 and 3 work it's",
    "start": "1257720",
    "end": "1262760"
  },
  {
    "text": "not a one-to-one like here is the payload here is what you're going to get out HTTP 2 and 3 kind of",
    "start": "1262760",
    "end": "1270340"
  },
  {
    "text": "optimize and improve headers as it goes along so the longer",
    "start": "1270340",
    "end": "1275900"
  },
  {
    "text": "you have a connection open it will it kind of like compresses and and optimizes a lot of stuff away",
    "start": "1275900",
    "end": "1282559"
  },
  {
    "text": "so it's it's it's a really interesting thing you know it's not worth getting into the details there but it kind of",
    "start": "1282559",
    "end": "1287960"
  },
  {
    "text": "just goes away uh in a lot of cases so HTTP one was text based and that's",
    "start": "1287960",
    "end": "1295700"
  },
  {
    "text": "kind of where a lot of these these preconceived notions came into play is",
    "start": "1295700",
    "end": "1300980"
  },
  {
    "text": "that you know HTTP is very slow and Bloated and and just very quickly this",
    "start": "1300980",
    "end": "1306500"
  },
  {
    "text": "is why you know when we think of HTTP this is what we see this is kind of what your browser shows even if you're using",
    "start": "1306500",
    "end": "1312140"
  },
  {
    "text": "HTTP 2. but for the most part you got the you know you got the uh got key value stuff they're separated by",
    "start": "1312140",
    "end": "1319159"
  },
  {
    "text": "colons you got a bunch of metadata it's not an easy format to parse um it's got",
    "start": "1319159",
    "end": "1325100"
  },
  {
    "text": "a lot of bloat none of this exists in http 2. or three",
    "start": "1325100",
    "end": "1331580"
  },
  {
    "text": "HTTP 2 is binary and not a plain text thing",
    "start": "1331580",
    "end": "1337220"
  },
  {
    "text": "but we get a lot of really cool stuff because of this so it's not just to do binary format they've kind of superseded",
    "start": "1337220",
    "end": "1344539"
  },
  {
    "text": "a lot of use cases of things like web sockets and that we've introduced bi-directional streaming so you can have",
    "start": "1344539",
    "end": "1351380"
  },
  {
    "text": "one one connection and both client and server could be sending RPC streams back",
    "start": "1351380",
    "end": "1356960"
  },
  {
    "text": "and forth we have multiplexing so we can handle multiple concurrent streams over",
    "start": "1356960",
    "end": "1362659"
  },
  {
    "text": "one actual physical connection hpac is the uh the binary encoding of",
    "start": "1362659",
    "end": "1370220"
  },
  {
    "text": "headers which is it's it's genuinely pretty wild a lot of header compression",
    "start": "1370220",
    "end": "1376100"
  },
  {
    "text": "happens and it can get down in a lot of cases to one or two bytes um per header pair as opposed to parsing",
    "start": "1376100",
    "end": "1383539"
  },
  {
    "text": "and splitting you know ASCII texts HTTP 2 also brings along",
    "start": "1383539",
    "end": "1389840"
  },
  {
    "text": "TLS 1.2 and this is kind of important because web technology tends to push",
    "start": "1389840",
    "end": "1397460"
  },
  {
    "text": "a lot of the boundaries with security and and that kind of tech and when we're",
    "start": "1397460",
    "end": "1403280"
  },
  {
    "text": "talking the MySQL protocol a lot of that is used on internal traffic so it's not",
    "start": "1403280",
    "end": "1410059"
  },
  {
    "text": "as battle tested with with staying up to date with the leading you know technology for TLS",
    "start": "1410059",
    "end": "1417020"
  },
  {
    "text": "you can do it there's nothing that prevents it just in practice using TLS with mySQL is hard because it's not the",
    "start": "1417020",
    "end": "1424280"
  },
  {
    "text": "common case whereas browsers these days especially is default uh TLS everywhere",
    "start": "1424280",
    "end": "1432220"
  },
  {
    "text": "so we we just recently got http 2. but now we got this really interesting thing called HTTP 3. and it's not super",
    "start": "1433280",
    "end": "1442400"
  },
  {
    "text": "common it's this is excessively bleeding edge",
    "start": "1442400",
    "end": "1447980"
  },
  {
    "text": "um and a lot of it's excessively bleeding edge because it took basically a lot of what it",
    "start": "1447980",
    "end": "1453919"
  },
  {
    "text": "learned from HTTP 2. so a lot of the header compression and all of that the",
    "start": "1453919",
    "end": "1459080"
  },
  {
    "text": "binary all of that is pretty similar but they decided to tackle the worst",
    "start": "1459080",
    "end": "1464960"
  },
  {
    "text": "part about HTTP and that's TCP and to be clear TCP is also what MySQL",
    "start": "1464960",
    "end": "1472340"
  },
  {
    "text": "uses so the same issues that HTTP 2 have or HTTP before three have the same",
    "start": "1472340",
    "end": "1479000"
  },
  {
    "text": "issues over the MySQL protocol so such things as like packet re-transmitting head of line blocking those kind of",
    "start": "1479000",
    "end": "1486860"
  },
  {
    "text": "things are just inherently issues with TCP so for example if you drop a packet",
    "start": "1486860",
    "end": "1493240"
  },
  {
    "text": "all the other packets on the network have to wait or on that socket are waiting until you know the one is",
    "start": "1493240",
    "end": "1499580"
  },
  {
    "text": "re-transmitted and if if you're on high latency is when these get really really",
    "start": "1499580",
    "end": "1504740"
  },
  {
    "text": "bad so HTTP kind of attack you want to",
    "start": "1504740",
    "end": "1510200"
  },
  {
    "text": "tackle this and they decided to not use TCP",
    "start": "1510200",
    "end": "1515720"
  },
  {
    "text": "and they kind of built this new thing on top of UDP",
    "start": "1515720",
    "end": "1521059"
  },
  {
    "text": "and there's a gut reaction to UDP if you're not you know real familiar is that udp's lossy so how does this work",
    "start": "1521059",
    "end": "1529520"
  },
  {
    "text": "and so instead of just saying it's on top of UDP they've created another",
    "start": "1529520",
    "end": "1534799"
  },
  {
    "text": "protocol called quick uh quic and quick is intended to replace",
    "start": "1534799",
    "end": "1541340"
  },
  {
    "text": "TCP so if you think about TCP TCP is built on",
    "start": "1541340",
    "end": "1547279"
  },
  {
    "text": "top of an unreliable Network it has physical things underneath it it has a",
    "start": "1547279",
    "end": "1552320"
  },
  {
    "text": "physical ethernet wire you know down the layers Network packets can be lost but TCP provides that reliability on top of",
    "start": "1552320",
    "end": "1561500"
  },
  {
    "text": "raw you know ethernet packets and stuff like that quick is is the analogous and",
    "start": "1561500",
    "end": "1567260"
  },
  {
    "text": "it's it accomplishes that in a very different way to more accommodate modern internet TCP",
    "start": "1567260",
    "end": "1574820"
  },
  {
    "text": "was created in the 70s a lot of things have changed in 50 years with networks",
    "start": "1574820",
    "end": "1580279"
  },
  {
    "text": "Network performance Network reliability we use them very differently so quick has attempted to solve that",
    "start": "1580279",
    "end": "1586940"
  },
  {
    "text": "quick also integrates with now a newer version of TLS called TLS 1.3",
    "start": "1586940",
    "end": "1594140"
  },
  {
    "text": "and following the trend of web kind of pushing bleeding edge Tech",
    "start": "1594140",
    "end": "1599840"
  },
  {
    "text": "TLS 1.3 entirely shakes up how to do a TLS",
    "start": "1599840",
    "end": "1605419"
  },
  {
    "text": "handshake to a server so typically if you think about you know there's like this multiple handshake of",
    "start": "1605419",
    "end": "1611480"
  },
  {
    "text": "like hey I'm doing this and I'm doing this and with TCP you've got the sin synack you know that whole handshake",
    "start": "1611480",
    "end": "1617840"
  },
  {
    "text": "when you're very in a latent Network all of that takes a long time if you're 20",
    "start": "1617840",
    "end": "1623000"
  },
  {
    "text": "milliseconds away it's going to take you at minimum 60 milliseconds to establish a connection through the handshakes",
    "start": "1623000",
    "end": "1629600"
  },
  {
    "text": "so TLS and quick are a unit as a part of establishing a new quick",
    "start": "1629600",
    "end": "1636559"
  },
  {
    "text": "connection the TLs handshake goes with it it is not a separate do TCP",
    "start": "1636559",
    "end": "1642559"
  },
  {
    "text": "connection do the TLs negotiation they are they are one it is inseparable",
    "start": "1642559",
    "end": "1649100"
  },
  {
    "text": "with TLS 1.3 it also has this really cool new feature called zero rtt which",
    "start": "1649100",
    "end": "1656360"
  },
  {
    "text": "is zero round trip meaning it can re-establish a connection",
    "start": "1656360",
    "end": "1661520"
  },
  {
    "text": "to an existing something it has seen before without doing any handshake you",
    "start": "1661520",
    "end": "1667700"
  },
  {
    "text": "just you connect and you're there so this kind of so kind of thinking",
    "start": "1667700",
    "end": "1674659"
  },
  {
    "text": "about the broader picture is that now that we fundamentally have an HTTP API",
    "start": "1674659",
    "end": "1682220"
  },
  {
    "text": "can we start mixing these things together and like HTTP 3 kind of goes once you have HTTP we can kind of just",
    "start": "1682220",
    "end": "1689960"
  },
  {
    "text": "use this stuff for free it doesn't require a lot of effort for us to use a newer version",
    "start": "1689960",
    "end": "1696440"
  },
  {
    "text": "um and we kind of get all those nice things so I started experimenting what if we",
    "start": "1696440",
    "end": "1703820"
  },
  {
    "text": "combine the niceness that we got from grpc and requiring protobuf as the as the wire",
    "start": "1703820",
    "end": "1711020"
  },
  {
    "text": "format and pairing that with http 3. so now from here we basically have a",
    "start": "1711020",
    "end": "1719960"
  },
  {
    "text": "very light efficient protobuf encoded version of our of our requests and",
    "start": "1719960",
    "end": "1725600"
  },
  {
    "text": "responses and now over a lighter weight actual transport protocol",
    "start": "1725600",
    "end": "1732140"
  },
  {
    "text": "and this is something that my sequel cannot do because it is based on TCP",
    "start": "1732140",
    "end": "1739299"
  },
  {
    "text": "so I kind of started Theory crafting here and this is genuinely was just like",
    "start": "1739580",
    "end": "1745760"
  },
  {
    "text": "I wonder if this can be better at this point like doing with when everything was based on TCP it didn't seem as",
    "start": "1745760",
    "end": "1753799"
  },
  {
    "text": "appealing to kind of dig in and see if we can do better given that I know the",
    "start": "1753799",
    "end": "1759140"
  },
  {
    "text": "downside is TCP I know that we can't you know if you are an unreliable Network there's only so",
    "start": "1759140",
    "end": "1765740"
  },
  {
    "text": "much we can do but now with hp3 I started thinking can we actually if we were to build a driver",
    "start": "1765740",
    "end": "1773120"
  },
  {
    "text": "on top of uh on top of HTTP 3 could we be comparable",
    "start": "1773120",
    "end": "1780220"
  },
  {
    "text": "and it's it it's a low bar I didn't want to be worse",
    "start": "1780220",
    "end": "1787760"
  },
  {
    "text": "um so kind of my thought process here was that the protocol overhead is negligible at this point we got super",
    "start": "1787760",
    "end": "1794240"
  },
  {
    "text": "fast networks you know especially you're in AWS you got some 10 gigabit pipe that just basically is plugging into us",
    "start": "1794240",
    "end": "1801380"
  },
  {
    "text": "send you know being even though HTTP 2 pretty efficient over the network it",
    "start": "1801380",
    "end": "1807380"
  },
  {
    "text": "does have some extra bloat it's it's negligible though on this scale if we're adding an extra even a hundred bytes or",
    "start": "1807380",
    "end": "1814640"
  },
  {
    "text": "a kilobyte per payload back and forth it's dwarfed by the amount of data and",
    "start": "1814640",
    "end": "1820039"
  },
  {
    "text": "an extra 100 bytes over a super fast network is it's it's not a thing that is",
    "start": "1820039",
    "end": "1826820"
  },
  {
    "text": "a concern these days Network latency dwarfs all of this stuff if you have a",
    "start": "1826820",
    "end": "1833600"
  },
  {
    "text": "network hiccup if you are not in the data center next door you have a five",
    "start": "1833600",
    "end": "1838640"
  },
  {
    "text": "millisecond ping to us you have a hundred millisecond ping to us all of this is substantially larger when it",
    "start": "1838640",
    "end": "1846500"
  },
  {
    "text": "comes to uh performance than uh adding an extra few bytes on The Wire",
    "start": "1846500",
    "end": "1852980"
  },
  {
    "text": "TLS is slow using a MySQL client it's hard to get the modern tls's it's hard to get TLS",
    "start": "1852980",
    "end": "1860539"
  },
  {
    "text": "1.3 you can do it but again kind of leading the trend of using web technology that kind of leads the the",
    "start": "1860539",
    "end": "1868880"
  },
  {
    "text": "the the race here especially if we can adopt quick that mandates the TLs 1.3",
    "start": "1868880",
    "end": "1877460"
  },
  {
    "text": "and like it or not even if HTTP isn't the most efficient protocol it is so",
    "start": "1877460",
    "end": "1884059"
  },
  {
    "text": "scrutinized http is so efficient to parse even the",
    "start": "1884059",
    "end": "1889940"
  },
  {
    "text": "text-based protocol is so much faster than a lot of binary protocols just",
    "start": "1889940",
    "end": "1895460"
  },
  {
    "text": "because it's so scrutinized and so heavily used I think of HTTP like Json",
    "start": "1895460",
    "end": "1901760"
  },
  {
    "text": "people are always trying to squeak out performance out of Json just because Json is so ubiquitous not because Json",
    "start": "1901760",
    "end": "1908779"
  },
  {
    "text": "is a better format it's just so heavily used so it's scrutinized",
    "start": "1908779",
    "end": "1914919"
  },
  {
    "text": "so to me now I was kind of looking at this I was like what if what if I did write a driver what if",
    "start": "1915020",
    "end": "1922100"
  },
  {
    "text": "I played with this what what would I claim as success and to me I like to set",
    "start": "1922100",
    "end": "1928039"
  },
  {
    "text": "low bars on things I like to you know it's hard and disingenuous to think that",
    "start": "1928039",
    "end": "1934039"
  },
  {
    "text": "I can do better in a lot of cases than my sequel like you you run a select one",
    "start": "1934039",
    "end": "1940159"
  },
  {
    "text": "it happens in microseconds there's not a lot of room to make that more efficient",
    "start": "1940159",
    "end": "1945860"
  },
  {
    "text": "you gotta send the string select one you gotta like there's a minimum amount of",
    "start": "1945860",
    "end": "1951919"
  },
  {
    "text": "work that needs to be done without a lot of bloat so to me I just didn't like if I can be",
    "start": "1951919",
    "end": "1959600"
  },
  {
    "text": "comparable was pretty cool and that to me seemed like a pretty pretty good result because",
    "start": "1959600",
    "end": "1966080"
  },
  {
    "text": "at that point there's not a reason not to do it there just might not be a reason to do it",
    "start": "1966080",
    "end": "1973960"
  },
  {
    "text": "so I didn't want to go into a ton of the the all the individual benchmarks I so",
    "start": "1974000",
    "end": "1980240"
  },
  {
    "text": "the blog posts that we have that accompanies this went into a bunch of them in a lot more detail uh but I",
    "start": "1980240",
    "end": "1987620"
  },
  {
    "text": "wanted to call out two of the test results that I thought were the most interesting and I say that",
    "start": "1987620",
    "end": "1994460"
  },
  {
    "text": "because to me they were actually pretty interesting in the other results that",
    "start": "1994460",
    "end": "2000039"
  },
  {
    "text": "were the same and that's interesting because we just matched the MySQL",
    "start": "2000039",
    "end": "2005799"
  },
  {
    "text": "protocol in my testing the ones that didn't match are not necessarily what I expected so I had",
    "start": "2005799",
    "end": "2013480"
  },
  {
    "text": "hunches so the connect and select one test case",
    "start": "2013480",
    "end": "2019000"
  },
  {
    "text": "was one that I had a very big hunch that uh because that's where the new TLS",
    "start": "2019000",
    "end": "2026080"
  },
  {
    "text": "comes in because you're worse so this test was establishing a new connection and running a select one and",
    "start": "2026080",
    "end": "2032200"
  },
  {
    "text": "disconnecting it's a very extreme Edge case it's not something that is very practical in your",
    "start": "2032200",
    "end": "2038140"
  },
  {
    "text": "application most people fire up a connection pool so it's kind of easy to counteract this and be like hey I I",
    "start": "2038140",
    "end": "2044799"
  },
  {
    "text": "don't really care this isn't this isn't really doing much for me but it was an extreme case to kind of test that part",
    "start": "2044799",
    "end": "2052060"
  },
  {
    "text": "of the protocol and while it might not be important for you or a lot of people this does become relevant in serverless",
    "start": "2052060",
    "end": "2059378"
  },
  {
    "text": "stuff or if you're running on like AWS Lambda you have the the boot up costs time of getting started so these do",
    "start": "2059379",
    "end": "2066580"
  },
  {
    "text": "become pretty relevant in those cases and as we can see",
    "start": "2066580",
    "end": "2072158"
  },
  {
    "text": "um we're pretty drastically improved on both HTTP 2 and 3 and that's only",
    "start": "2072159",
    "end": "2077800"
  },
  {
    "text": "because the MySQL client is doing TLS 1.2 and",
    "start": "2077800",
    "end": "2083740"
  },
  {
    "text": "the other two are doing on TLS 1.3 we don't see much of a gain uh between HTTP",
    "start": "2083740",
    "end": "2090099"
  },
  {
    "text": "3 and HTTP 2. for the most part I would say that those are not scientifically",
    "start": "2090099",
    "end": "2096000"
  },
  {
    "text": "uh different um where it kind of came interesting was a",
    "start": "2096000",
    "end": "2102580"
  },
  {
    "text": "large select so this was me kind of stress testing the",
    "start": "2102580",
    "end": "2108280"
  },
  {
    "text": "a large you know I think it was like 50 megabytes or something of data that's",
    "start": "2108280",
    "end": "2113500"
  },
  {
    "text": "basically being downloaded I did a similar upload test which at that point I started also stress the mySQL database",
    "start": "2113500",
    "end": "2121119"
  },
  {
    "text": "and the disks and stuff like that which it was a pretty good result as well and",
    "start": "2121119",
    "end": "2126940"
  },
  {
    "text": "that the protocol wasn't getting in the way what I find interesting that I wanted to",
    "start": "2126940",
    "end": "2132460"
  },
  {
    "text": "call out was that on the high latency Network",
    "start": "2132460",
    "end": "2137980"
  },
  {
    "text": "is where HTTP 3 kind of shines oh God I missed this look so",
    "start": "2137980",
    "end": "2145119"
  },
  {
    "text": "um HTTP kind of Excel or quick specifically is what excels on the high",
    "start": "2145119",
    "end": "2151119"
  },
  {
    "text": "latency large amount of data networks which makes sense um because now at this point we're",
    "start": "2151119",
    "end": "2157540"
  },
  {
    "text": "trying to send 50 megabytes over the wire uh and yes to answer that",
    "start": "2157540",
    "end": "2163420"
  },
  {
    "text": "question it is it's using protobuf so this was trying to be the most refined",
    "start": "2163420",
    "end": "2169180"
  },
  {
    "text": "version obviously if we're using Json and things like that there's going to be a little bit more compromises but this was trying to be the you know as as",
    "start": "2169180",
    "end": "2175480"
  },
  {
    "text": "efficient as we can so HTTP 3 in this case is where this starts shining when you're sending 50",
    "start": "2175480",
    "end": "2182140"
  },
  {
    "text": "megabytes over a network over a high latency Network and this is a large geographic region there's a lot of",
    "start": "2182140",
    "end": "2188800"
  },
  {
    "text": "network switches there's a lot of things involved if it drops a packet you can pretty quickly see that things get",
    "start": "2188800",
    "end": "2195820"
  },
  {
    "text": "slower pretty pretty quickly so having HTTP 3 there was a was a big success",
    "start": "2195820",
    "end": "2203079"
  },
  {
    "text": "what was kind of this is the only test the only test in anything I've done were",
    "start": "2203079",
    "end": "2208960"
  },
  {
    "text": "HTTP 3 was universally worse than both hdb2 and the MySQL protocol",
    "start": "2208960",
    "end": "2217240"
  },
  {
    "text": "so this was on a low latency Network this is literally in the same AWS data",
    "start": "2217240",
    "end": "2223480"
  },
  {
    "text": "center as where the database was so we tried to remove everything you know that's removing all Network hops as much",
    "start": "2223480",
    "end": "2230380"
  },
  {
    "text": "as we can and what I my theory here HTTP 3 and quick specifically are still",
    "start": "2230380",
    "end": "2237820"
  },
  {
    "text": "very immature they're not you think about TCP TCP is",
    "start": "2237820",
    "end": "2243339"
  },
  {
    "text": "built into the kernel it's been around since the 70s we're really at this point stress testing the implementation",
    "start": "2243339",
    "end": "2251320"
  },
  {
    "text": "of quick and I find it very hard to believe that this won't improve over",
    "start": "2251320",
    "end": "2258160"
  },
  {
    "text": "time I would imagine and I didn't get into actually running like profiles and",
    "start": "2258160",
    "end": "2263380"
  },
  {
    "text": "things like that but my guess is we're actually losing um",
    "start": "2263380",
    "end": "2269440"
  },
  {
    "text": "CPU clock Cycles to actually parsing quick um but that'll improve",
    "start": "2269440",
    "end": "2276520"
  },
  {
    "text": "but other than that we can still see that HTTP 2 which is something that we can use today is still uh",
    "start": "2276520",
    "end": "2283839"
  },
  {
    "text": "that was shockingly better so my summary of this was that in every",
    "start": "2283839",
    "end": "2290619"
  },
  {
    "text": "scenario I tested HTTP 2 with HTTP 3 with the caveat of that last",
    "start": "2290619",
    "end": "2296859"
  },
  {
    "text": "example it was comparable and better in a lot of cases and what this kind of meant to me",
    "start": "2296859",
    "end": "2303280"
  },
  {
    "text": "was that like if we were to write in a driver today",
    "start": "2303280",
    "end": "2309400"
  },
  {
    "text": "that was you know the planet scale MySQL driver and you were able to plug it in",
    "start": "2309400",
    "end": "2314440"
  },
  {
    "text": "with like an orm or use it in your existing application and you just use it and you don't have to know that it was",
    "start": "2314440",
    "end": "2321839"
  },
  {
    "text": "uh not using the MySQL protocol you're not going to degrade in",
    "start": "2321839",
    "end": "2327280"
  },
  {
    "text": "performance in a lot of cases we can give you an improvement but why emphasize being comparable",
    "start": "2327280",
    "end": "2334960"
  },
  {
    "text": "is that that makes it a drop-in thing even if you are on a low latency and you",
    "start": "2334960",
    "end": "2340660"
  },
  {
    "text": "don't actually have the problem set that it is improved if you open up a connection and never disconnect it like",
    "start": "2340660",
    "end": "2346839"
  },
  {
    "text": "if these aren't problems to you using something based on HTTP 2 wouldn't be a downgrade it would just be a lateral",
    "start": "2346839",
    "end": "2353800"
  },
  {
    "text": "movement but if you are in those scenarios we can say we improve as well as not being",
    "start": "2353800",
    "end": "2360640"
  },
  {
    "text": "worse in anything else if it was worse now you'd have to make a decision because you're making a compromise",
    "start": "2360640",
    "end": "2367359"
  },
  {
    "text": "but it's not and that was kind of what was a little bit more shocking to me in that uh there's basically no compromise",
    "start": "2367359",
    "end": "2373240"
  },
  {
    "text": "at least getting into http 2. so so now we're left with you know what",
    "start": "2373240",
    "end": "2378820"
  },
  {
    "text": "do we do now we've done these experiments uh that's cool Matt what do I do with this",
    "start": "2378820",
    "end": "2386079"
  },
  {
    "text": "and honestly there's not a lot so outside of our own product development",
    "start": "2386079",
    "end": "2394000"
  },
  {
    "text": "um we're definitely going to build new features that use the HTTP 2 protocol because we need grpc",
    "start": "2394000",
    "end": "2400540"
  },
  {
    "text": "we're gonna be experimenting with writing drivers based on hp2 or three",
    "start": "2400540",
    "end": "2407260"
  },
  {
    "text": "we're gonna see where that goes but it's not something that you're just gonna roll in today and be like hey let me",
    "start": "2407260",
    "end": "2412359"
  },
  {
    "text": "just let me just fire this up and and get you know double the performance that's that's not gonna happen",
    "start": "2412359",
    "end": "2419079"
  },
  {
    "text": "the coolest side effect that I find from this was within our product we have a myciful",
    "start": "2419079",
    "end": "2427180"
  },
  {
    "text": "console this is my SQL console and this isn't explicitly because of HTTP 3 but just in",
    "start": "2427180",
    "end": "2433480"
  },
  {
    "text": "general because of having an HTTP compatible API we directly communicate from the browser",
    "start": "2433480",
    "end": "2440339"
  },
  {
    "text": "to the database using our API and because you're using it in a browser",
    "start": "2440339",
    "end": "2447400"
  },
  {
    "text": "modern browsers will support hp3 and you kind of get it for free in this case",
    "start": "2447400",
    "end": "2453160"
  },
  {
    "text": "it's not really going to buy you anything because you're typically not doing large data processing and things",
    "start": "2453160",
    "end": "2459280"
  },
  {
    "text": "like that but it's kind of a way for us to experiment and and see what our downsides are before we committed to",
    "start": "2459280",
    "end": "2466540"
  },
  {
    "text": "other stuff but it's something that we kind of get for free",
    "start": "2466540",
    "end": "2470760"
  },
  {
    "text": "so the downside to this is that HTTP 3 because it comes with a whole new",
    "start": "2471760",
    "end": "2477780"
  },
  {
    "text": "effectively a whole new um networking stack of quick and UDP and",
    "start": "2477780",
    "end": "2483760"
  },
  {
    "text": "all of that it is very rare to find implementations of this it is very new",
    "start": "2483760",
    "end": "2492099"
  },
  {
    "text": "and the demand really isn't there on server stuff so outside of browsers",
    "start": "2492099",
    "end": "2498880"
  },
  {
    "text": "it's really hard to find honestly it's also kind of hard to find HTTP too",
    "start": "2498880",
    "end": "2504520"
  },
  {
    "text": "so this is kind of an upward Hill if we wanted to actually lean into http 3.",
    "start": "2504520",
    "end": "2509920"
  },
  {
    "text": "but I kind of hope this is like a chicken and egg thing if we can provide a compelling reason",
    "start": "2509920",
    "end": "2515260"
  },
  {
    "text": "and say hey if uh like versel if if you want to support communicating via HTTP 3",
    "start": "2515260",
    "end": "2522359"
  },
  {
    "text": "I'm willing to help you make them but it's going to make your customers also a lot faster because especially in that",
    "start": "2522359",
    "end": "2528220"
  },
  {
    "text": "case it's going to have a little bit higher higher latent um connection because they're distributed",
    "start": "2528220",
    "end": "2534339"
  },
  {
    "text": "all over but fortunately the conclusion here is HTTP 2 was also really good and HTTP 2",
    "start": "2534339",
    "end": "2542380"
  },
  {
    "text": "is quite a bit ubiquitous um so being grpc compatible kind of opens",
    "start": "2542380",
    "end": "2549579"
  },
  {
    "text": "up the door that if you want to use it or if we wanted to write a grpc client",
    "start": "2549579",
    "end": "2555940"
  },
  {
    "text": "that is very prevalent and very available and the fact that HTTP 2",
    "start": "2555940",
    "end": "2561700"
  },
  {
    "text": "gives us a good amount of the benefits that's something that we can explore",
    "start": "2561700",
    "end": "2566920"
  },
  {
    "text": "today without needing to go too far and drinking the Kool-Aid of getting all",
    "start": "2566920",
    "end": "2573460"
  },
  {
    "text": "into hp3 but keeping HTTP 3 in mind for future adoption is kind of what uh",
    "start": "2573460",
    "end": "2580420"
  },
  {
    "text": "what I hope most so to me the future is interesting there's we we haven't really tapped into all of",
    "start": "2580420",
    "end": "2588579"
  },
  {
    "text": "the things that we can do with this we haven't you know written drivers we haven't gotten out there and said hey uh",
    "start": "2588579",
    "end": "2595599"
  },
  {
    "text": "I want to work with you to get cloudflare Workers to use HTTP 3 or",
    "start": "2595599",
    "end": "2600880"
  },
  {
    "text": "whatever it would be we we haven't had a compelling reason so part of these experiments were to",
    "start": "2600880",
    "end": "2606819"
  },
  {
    "text": "kind of get in front of that chicken and egg thing and then say hey like we we",
    "start": "2606819",
    "end": "2611859"
  },
  {
    "text": "can measurably improve this situation with no downsides",
    "start": "2611859",
    "end": "2618700"
  },
  {
    "text": "or at least for the most part UDP comes with its own",
    "start": "2618700",
    "end": "2623980"
  },
  {
    "text": "stuff but for the most part there's no real downsides if you can if your infrastructure can handle it",
    "start": "2623980",
    "end": "2629740"
  },
  {
    "text": "so we kind of need to see where this can go we're we're not getting rid of it um we're planning on documenting the",
    "start": "2629740",
    "end": "2635980"
  },
  {
    "text": "apis and when I say grpc compatible I'm being very intentional on that that we support",
    "start": "2635980",
    "end": "2642700"
  },
  {
    "text": "more than just grpc for example using our web console does not use grpc from",
    "start": "2642700",
    "end": "2648700"
  },
  {
    "text": "the browser it is just using Json so the API is going to be fully",
    "start": "2648700",
    "end": "2653859"
  },
  {
    "text": "compatible with using Json which does make it really easy if you're not in a",
    "start": "2653859",
    "end": "2659560"
  },
  {
    "text": "performance critical situation you could just use some Json like if I want to curl from command line",
    "start": "2659560",
    "end": "2666040"
  },
  {
    "text": "I can do that because I don't need to write a Proto buff or binary encode you know through",
    "start": "2666040",
    "end": "2671980"
  },
  {
    "text": "something to be able to send that payload so we're going to keep exploring and seeing what we can do I would fully",
    "start": "2671980",
    "end": "2678700"
  },
  {
    "text": "expect at some point for us to publish some experimental libraries that directly speak over",
    "start": "2678700",
    "end": "2685359"
  },
  {
    "text": "the uh our new HTTP apis whether that is HTTP 2 or 3 it's probably going to be",
    "start": "2685359",
    "end": "2691420"
  },
  {
    "text": "language dependent like if you're using a ruby application for example good luck getting an hgv3 client like",
    "start": "2691420",
    "end": "2698740"
  },
  {
    "text": "it's and I'm not writing it um so it's kind of interesting to see",
    "start": "2698740",
    "end": "2703839"
  },
  {
    "text": "where this is going to go um it's been fun so yeah so I'm I'm I'm down to",
    "start": "2703839",
    "end": "2712000"
  },
  {
    "text": "answer anything I'm pretty at least try I'm not the most",
    "start": "2712000",
    "end": "2717220"
  },
  {
    "text": "knowledgeable but you know I've written a lot of this stuff written a lot of this code I've played around with it a lot",
    "start": "2717220",
    "end": "2724780"
  },
  {
    "text": "it's been fun yeah so I guess we'll start with the",
    "start": "2724780",
    "end": "2730300"
  },
  {
    "text": "first thing so I want to address one person asked about uh packet loss with with UDP",
    "start": "2730300",
    "end": "2736660"
  },
  {
    "text": "so I think I I touched on that um that is has been the probably the number",
    "start": "2736660",
    "end": "2743440"
  },
  {
    "text": "one concern that someone has brought up and been like hey you know I hear that UDP is going to lose lose my data",
    "start": "2743440",
    "end": "2750400"
  },
  {
    "text": "um and that's true but so does the wire that you plug into your",
    "start": "2750400",
    "end": "2756040"
  },
  {
    "text": "computer there's always data loss on the protocol",
    "start": "2756040",
    "end": "2761260"
  },
  {
    "text": "the whole point of TCP is to make it reliable so TCP is its own",
    "start": "2761260",
    "end": "2769260"
  },
  {
    "text": "wrapper around Raw Network bytes and that wrapper is what",
    "start": "2769260",
    "end": "2775780"
  },
  {
    "text": "gives sequence numbers and all these other things so that the other side knows them like hey I missed a thing",
    "start": "2775780",
    "end": "2781140"
  },
  {
    "text": "re-give me the thing that I missed or it it is the structure for the unreliable",
    "start": "2781140",
    "end": "2787180"
  },
  {
    "text": "data so if we think about the same analogy UDP is that primitive in in this case",
    "start": "2787180",
    "end": "2794140"
  },
  {
    "text": "UDP is the is the lossy Primitive UDP is just sending some stuff you don't know if they got it there's no acknowledgment",
    "start": "2794140",
    "end": "2801280"
  },
  {
    "text": "there's no nothing so in that sense UDP is is lossy that's",
    "start": "2801280",
    "end": "2806560"
  },
  {
    "text": "where quick comes in so quick is that structured protocol that uses UDP as a",
    "start": "2806560",
    "end": "2812200"
  },
  {
    "text": "primitive and quick is what gives similar semantics to TCP in that with",
    "start": "2812200",
    "end": "2818140"
  },
  {
    "text": "the same goal of reliability so if you're going to send a request you will know that the requests got there in very",
    "start": "2818140",
    "end": "2826300"
  },
  {
    "text": "similar semantics to TCP so in the case of using it as a service or something",
    "start": "2826300",
    "end": "2832000"
  },
  {
    "text": "with us we're not just losing data there's not things that are um",
    "start": "2832000",
    "end": "2838359"
  },
  {
    "text": "we're not just losing queries we're not receiving you know everything works as you would expect",
    "start": "2838359",
    "end": "2845520"
  },
  {
    "text": "uh okay so uh so the API used in the planet scale",
    "start": "2845680",
    "end": "2852700"
  },
  {
    "text": "console so yes so it's kind of clever how this works I plan on writing a blog post a",
    "start": "2852700",
    "end": "2859119"
  },
  {
    "text": "little bit more in detail about how our web console works because it was something that we we did very silently",
    "start": "2859119",
    "end": "2865720"
  },
  {
    "text": "because it was experimental for us it solved a lot of",
    "start": "2865720",
    "end": "2871540"
  },
  {
    "text": "problems that we had so the old way the console worked was when you when you",
    "start": "2871540",
    "end": "2876760"
  },
  {
    "text": "fired it up it would talk to our API server so you'd basically make a",
    "start": "2876760",
    "end": "2883180"
  },
  {
    "text": "Json API request to our API server our API server is in Us East I believe",
    "start": "2883180",
    "end": "2891579"
  },
  {
    "text": "and then it would talk from our servers it would get the credentials it needs and talks to your database wherever it",
    "start": "2891579",
    "end": "2899260"
  },
  {
    "text": "is so if you're in uh Europe that's an easy one if it's an EU West",
    "start": "2899260",
    "end": "2906040"
  },
  {
    "text": "you are physically in EU West you already have a lot of latency talking to our API because you're going from us or",
    "start": "2906040",
    "end": "2912880"
  },
  {
    "text": "EU West talking to us East and then the US East server is talking",
    "start": "2912880",
    "end": "2918400"
  },
  {
    "text": "to your EU database and then back all the way to you so",
    "start": "2918400",
    "end": "2924460"
  },
  {
    "text": "that's obviously a lot of latency if you're not in the US so we wanted to",
    "start": "2924460",
    "end": "2930880"
  },
  {
    "text": "solve the fact that it and if you're in like Asia it was entirely unusable",
    "start": "2930880",
    "end": "2938440"
  },
  {
    "text": "so this became appealing because I was like we can just let you talk directly to the database and not go through us",
    "start": "2938440",
    "end": "2944619"
  },
  {
    "text": "because now we can talk to the database over http so the way that it works today",
    "start": "2944619",
    "end": "2951579"
  },
  {
    "text": "um you can kind of see what it's going if you were looking at the network inspector and see what happens",
    "start": "2951579",
    "end": "2956859"
  },
  {
    "text": "on connect we issue some short-lived ephemeral credentials",
    "start": "2956859",
    "end": "2962500"
  },
  {
    "text": "so part of all this is that the credentials can be Stamped Out For A Minute five minutes you know whatever",
    "start": "2962500",
    "end": "2968380"
  },
  {
    "text": "short-lived that is bound to your browser session so you have to talk to our API to get credentials the",
    "start": "2968380",
    "end": "2975400"
  },
  {
    "text": "credentials stay in your browser and then they are refreshed just like an oauth token uh in the background so",
    "start": "2975400",
    "end": "2981819"
  },
  {
    "text": "while you're still on the page it'll continuously refresh if you leave the page they expire and then that is direct",
    "start": "2981819",
    "end": "2988300"
  },
  {
    "text": "communication between uh the database and and you which is kind of nice",
    "start": "2988300",
    "end": "2994119"
  },
  {
    "text": "because now it also doesn't go through our API servers which is just less liability for us you know or just",
    "start": "2994119",
    "end": "3001020"
  },
  {
    "text": "knowing that you're not sending hopefully you're not just querying credit card numbers or something in the",
    "start": "3001020",
    "end": "3006060"
  },
  {
    "text": "console but you know if if you are it's not going through another intermediate hop it's directly talking to the",
    "start": "3006060",
    "end": "3012000"
  },
  {
    "text": "database I do plan on writing a bit about more about how that works because I think it's neat and we've used that as",
    "start": "3012000",
    "end": "3017460"
  },
  {
    "text": "kind of this uh some ex you know a test bed for some of this stuff",
    "start": "3017460",
    "end": "3023640"
  },
  {
    "text": "anyways so benefits for highly concurrent workloads I'm gonna go down these lists uh benefits of having",
    "start": "3023640",
    "end": "3030540"
  },
  {
    "text": "concurrent workloads in principal voting headline due to TCP should reduce long tail latency for Multiplex streams",
    "start": "3030540",
    "end": "3037380"
  },
  {
    "text": "in simple terms yes that is the um",
    "start": "3037380",
    "end": "3042780"
  },
  {
    "text": "so the benefit of being able to have one connection for everything kind of eliminates the MySQL like",
    "start": "3042780",
    "end": "3049980"
  },
  {
    "text": "connection pool issue this isn't necessarily an issue for",
    "start": "3049980",
    "end": "3055020"
  },
  {
    "text": "everybody because some people just open up a connection pool of 100 connections and then you just use those hundred",
    "start": "3055020",
    "end": "3060839"
  },
  {
    "text": "connections that's not the reality for everyone some people are creating a lot of connections",
    "start": "3060839",
    "end": "3066599"
  },
  {
    "text": "starting them up tearing them down but in the case of multiplexing that's",
    "start": "3066599",
    "end": "3072000"
  },
  {
    "text": "where quick comes in and solves some of the head of line issues as opposed to TCP and that's just something that",
    "start": "3072000",
    "end": "3079319"
  },
  {
    "text": "you're really going to notice on latent networks you it's relatively rare if",
    "start": "3079319",
    "end": "3084359"
  },
  {
    "text": "you're just in AWS talking to us next door but yeah having quick and stuff",
    "start": "3084359",
    "end": "3089640"
  },
  {
    "text": "does solve that it's a little bit harder to measure and quantify that because it does rely on the network being",
    "start": "3089640",
    "end": "3096380"
  },
  {
    "text": "unreliable so uh it does just objectively improve things",
    "start": "3096380",
    "end": "3102960"
  },
  {
    "text": "um there are there places in the tests to use this for internal traffic",
    "start": "3102960",
    "end": "3108780"
  },
  {
    "text": "so that's also an interesting question so the test uses grpc",
    "start": "3108780",
    "end": "3115260"
  },
  {
    "text": "and that is correct we communicate with the tests internally everything grpc we for many",
    "start": "3115260",
    "end": "3123660"
  },
  {
    "text": "reasons we don't use MySQL Connections in our internal infrastructure for a lot of the same reasons of what we're",
    "start": "3123660",
    "end": "3130200"
  },
  {
    "text": "solving for public connectivity it's just a pain we don't want to manage connection",
    "start": "3130200",
    "end": "3135480"
  },
  {
    "text": "poolers we don't want to have to deal with severing connections and all that so we use the grpc interface internally",
    "start": "3135480",
    "end": "3143099"
  },
  {
    "text": "the different whenever we communicate with Vitesse is also within the same",
    "start": "3143099",
    "end": "3150240"
  },
  {
    "text": "availability Zone explicitly so even in in a U.S east one or whatever",
    "start": "3150240",
    "end": "3156720"
  },
  {
    "text": "data center in AWS we explicitly keep everything within a U.S east 1A and",
    "start": "3156720",
    "end": "3164160"
  },
  {
    "text": "follow that chain all the way through the stack so the cases of saying let's use HTTP 3",
    "start": "3164160",
    "end": "3171960"
  },
  {
    "text": "for this what it genuinely would not do anything",
    "start": "3171960",
    "end": "3177599"
  },
  {
    "text": "because we're it's not solving any of the pro like we don't have high latency networks it wouldn't necessarily be",
    "start": "3177599",
    "end": "3183540"
  },
  {
    "text": "worse but it's also just not a problem on very reliable networks we keep hold",
    "start": "3183540",
    "end": "3190500"
  },
  {
    "text": "open connections for a long time so it's just not a it's not a problem we maintain we can do",
    "start": "3190500",
    "end": "3197160"
  },
  {
    "text": "TLS 1.3 internally like there's just a lot of things that we can do because we control that environment that it's just",
    "start": "3197160",
    "end": "3203819"
  },
  {
    "text": "not that practical the one thing I will point out grpc is very explicitly also bound to",
    "start": "3203819",
    "end": "3213300"
  },
  {
    "text": "http 2. we cannot just use HTTP 3 with grpc",
    "start": "3213300",
    "end": "3219960"
  },
  {
    "text": "nobody can it's just not a it's not a thing the libraries do which is why I",
    "start": "3219960",
    "end": "3225540"
  },
  {
    "text": "was calling out that we're grpc compatible when you use HTTP 3 we kind of use a",
    "start": "3225540",
    "end": "3232619"
  },
  {
    "text": "little deviation and which is why I kind of called out it's just protobuff over HTTP 3 because we can't actually just",
    "start": "3232619",
    "end": "3240300"
  },
  {
    "text": "use grpc you'd be kind of swimming Upstream there's nothing that prevents",
    "start": "3240300",
    "end": "3245760"
  },
  {
    "text": "you from doing that just none of the ecosystem uh really does it",
    "start": "3245760",
    "end": "3253640"
  },
  {
    "text": "so it's definitely not something we could just bold into the test and say hey like hey let's use HTTP 3 now",
    "start": "3253740",
    "end": "3259880"
  },
  {
    "text": "anything else for me",
    "start": "3264900",
    "end": "3268279"
  },
  {
    "text": "we are pretty good on time I I nailed that uh so the last thing is my only",
    "start": "3271260",
    "end": "3276960"
  },
  {
    "text": "real marketing pitch um in that if you are not a customer you",
    "start": "3276960",
    "end": "3282839"
  },
  {
    "text": "should you should definitely check it out you should sign up we're continuing to try to make this stuff better",
    "start": "3282839",
    "end": "3289800"
  },
  {
    "text": "um I like seeing how we can push the envelope I like challenging the assumptions of of you know preconceived",
    "start": "3289800",
    "end": "3297180"
  },
  {
    "text": "notions uh our serverless driver which is what",
    "start": "3297180",
    "end": "3302220"
  },
  {
    "text": "you would run in versel use our HTTP API it doesn't necessarily use HTTP 3",
    "start": "3302220",
    "end": "3309420"
  },
  {
    "text": "there's nothing that prevents it from using HTTP 3 that goes back to the",
    "start": "3309420",
    "end": "3314880"
  },
  {
    "text": "support of providers when you run this on for sale you're kind of at the mercy of what versel gives you as the fetch",
    "start": "3314880",
    "end": "3321480"
  },
  {
    "text": "API so maybe someday we can put enough pressure on the providers to be like hey",
    "start": "3321480",
    "end": "3327359"
  },
  {
    "text": "can you make can we get this to work on hp3 and it's going to be faster but anyways for the most part the serverless",
    "start": "3327359",
    "end": "3333240"
  },
  {
    "text": "driver just it'll use HTTP one it'll use hp2 it just uses whatever that is HTTP",
    "start": "3333240",
    "end": "3338880"
  },
  {
    "text": "compatible uh Planet scale connect is the first feature that demanded an extension to",
    "start": "3338880",
    "end": "3348059"
  },
  {
    "text": "our apis or extension to the MySQL protocol this is if you're not familiar this feature is um",
    "start": "3348059",
    "end": "3355319"
  },
  {
    "text": "it supports like ETL so if you wanted to change or if you wanted to change",
    "start": "3355319",
    "end": "3360420"
  },
  {
    "text": "capture in real time rows that are added mutated all of that shove that into",
    "start": "3360420",
    "end": "3365880"
  },
  {
    "text": "something else that was not a great it's similar to like if you were writing your own thing that parts entailed bin logs",
    "start": "3365880",
    "end": "3371579"
  },
  {
    "text": "and things like that but we kind of want to make it a little more user friendly and that we can just hook into existing",
    "start": "3371579",
    "end": "3376980"
  },
  {
    "text": "systems that API is based on grpc we can have grpc clients that interact with",
    "start": "3376980",
    "end": "3383339"
  },
  {
    "text": "that API I'm going to talk quite a bit Dean browser MySQL console outside of",
    "start": "3383339",
    "end": "3388859"
  },
  {
    "text": "these things there's not a lot of direct application today but now that we",
    "start": "3388859",
    "end": "3394380"
  },
  {
    "text": "have these Primitives in place and we have things to play with we're definitely planning on building new features and newer Tech that's going to",
    "start": "3394380",
    "end": "3400800"
  },
  {
    "text": "come out and leverage this but for the most part these are all these are pretty cool things and it's all production ready it's",
    "start": "3400800",
    "end": "3406980"
  },
  {
    "text": "stable um it's ready to use uh last question here",
    "start": "3406980",
    "end": "3414599"
  },
  {
    "text": "latest did you run comparison against AWS Aurora serverless with HP driver I",
    "start": "3414599",
    "end": "3419700"
  },
  {
    "text": "did not because I don't even really know what AWS Aurora is and I don't even I'm not even entirely",
    "start": "3419700",
    "end": "3425579"
  },
  {
    "text": "sure is that still available I thought that was one they shut down but either way I I haven't done a lot of",
    "start": "3425579",
    "end": "3432119"
  },
  {
    "text": "comparison with different providers because I think that introduces a lot of",
    "start": "3432119",
    "end": "3437940"
  },
  {
    "text": "variables um a lot of variables that are not just testing the protocol and that gets into",
    "start": "3437940",
    "end": "3444720"
  },
  {
    "text": "are we stress testing Aurora are we stress testing you know whatever it's",
    "start": "3444720",
    "end": "3451260"
  },
  {
    "text": "not as controlled environment and it's hard to get tangible results out of that unless like I'm an",
    "start": "3451260",
    "end": "3457980"
  },
  {
    "text": "aurora expert and I'm not um testing the protocol is kind of what I was trying to really focus on here",
    "start": "3457980",
    "end": "3464579"
  },
  {
    "text": "which is why like when I got into stress testing MySQL I didn't want to just add capacity to",
    "start": "3464579",
    "end": "3470280"
  },
  {
    "text": "mySQL or do you know Planet scale Shard things up and do things like that because it didn't",
    "start": "3470280",
    "end": "3475800"
  },
  {
    "text": "it didn't make sense I'm really stress testing the protocol if we're bottlenecked on the database that's good",
    "start": "3475800",
    "end": "3481619"
  },
  {
    "text": "means the protocol is not getting in the way it's not slowing things down",
    "start": "3481619",
    "end": "3487079"
  },
  {
    "text": "um so comparing to other things to me just feels kind of moot because it's really comparing Planet scale as a service",
    "start": "3487079",
    "end": "3494040"
  },
  {
    "text": "being fast to AWS Aurora um for measuring Network latency like it",
    "start": "3494040",
    "end": "3501000"
  },
  {
    "text": "could be Aurora has a closer region or a closer hop than than where we are it's",
    "start": "3501000",
    "end": "3507240"
  },
  {
    "text": "just not a it's hard to get a one-to-one comparison",
    "start": "3507240",
    "end": "3511579"
  },
  {
    "text": "foreign",
    "start": "3512640",
    "end": "3514818"
  },
  {
    "text": "well I think uh I think it's good to go thanks thanks everyone for",
    "start": "3518240",
    "end": "3524280"
  },
  {
    "text": "wasting some time with me it's been it's been fun thanks a lot",
    "start": "3524280",
    "end": "3531680"
  }
]