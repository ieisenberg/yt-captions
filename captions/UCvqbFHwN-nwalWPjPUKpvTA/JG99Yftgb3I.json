[
  {
    "text": "hello everyone welcome to my session",
    "start": "40",
    "end": "2200"
  },
  {
    "text": "daer Unleashed accelerating microservice",
    "start": "2200",
    "end": "5160"
  },
  {
    "text": "development first of all I would like to",
    "start": "5160",
    "end": "7520"
  },
  {
    "text": "thank everyone behind drer days 2024 I",
    "start": "7520",
    "end": "10519"
  },
  {
    "text": "think it's a great organization and I'm",
    "start": "10519",
    "end": "12920"
  },
  {
    "text": "really honored to be part of this",
    "start": "12920",
    "end": "15160"
  },
  {
    "text": "selection of uh great sessions I'm",
    "start": "15160",
    "end": "17680"
  },
  {
    "text": "really looking forward to follow up on",
    "start": "17680",
    "end": "19560"
  },
  {
    "text": "all the sessions because I think they're",
    "start": "19560",
    "end": "21080"
  },
  {
    "text": "very relevant and to the topic my",
    "start": "21080",
    "end": "24000"
  },
  {
    "text": "session is about practical",
    "start": "24000",
    "end": "25199"
  },
  {
    "text": "implementation and practical application",
    "start": "25199",
    "end": "27279"
  },
  {
    "text": "of topper in a real project uh in my",
    "start": "27279",
    "end": "30080"
  },
  {
    "text": "session I would like to give a developer",
    "start": "30080",
    "end": "32558"
  },
  {
    "text": "perspective on how to use Dapper on a",
    "start": "32559",
    "end": "35960"
  },
  {
    "text": "real development team and how a daer can",
    "start": "35960",
    "end": "38480"
  },
  {
    "text": "help that development team to produce uh",
    "start": "38480",
    "end": "42079"
  },
  {
    "text": "more reliable projects faster and of",
    "start": "42079",
    "end": "44640"
  },
  {
    "text": "course with better quality it's very",
    "start": "44640",
    "end": "47160"
  },
  {
    "text": "difficult to to explore the whole",
    "start": "47160",
    "end": "48920"
  },
  {
    "text": "journey in 30 minutes so therefore I",
    "start": "48920",
    "end": "51000"
  },
  {
    "text": "will focus on the most important aspects",
    "start": "51000",
    "end": "53079"
  },
  {
    "text": "from my",
    "start": "53079",
    "end": "54239"
  },
  {
    "text": "perspective of course you are very",
    "start": "54239",
    "end": "57039"
  },
  {
    "text": "welcome to to reach out with more",
    "start": "57039",
    "end": "58960"
  },
  {
    "text": "questions and discuss discussion before",
    "start": "58960",
    "end": "61680"
  },
  {
    "text": "I dive in I would like to introduce",
    "start": "61680",
    "end": "63399"
  },
  {
    "text": "myself I am MOS fki technical director",
    "start": "63399",
    "end": "66159"
  },
  {
    "text": "at init group init group is a Nordic",
    "start": "66159",
    "end": "68119"
  },
  {
    "text": "champion in providing IT solutions for",
    "start": "68119",
    "end": "70240"
  },
  {
    "text": "the industrial world as a technical",
    "start": "70240",
    "end": "72600"
  },
  {
    "text": "director I'm responsible for Cloud Web",
    "start": "72600",
    "end": "74640"
  },
  {
    "text": "and mobile development I hold",
    "start": "74640",
    "end": "77479"
  },
  {
    "text": "engineering doctorate title from the",
    "start": "77479",
    "end": "79080"
  },
  {
    "text": "enoven University of Technology almost",
    "start": "79080",
    "end": "81479"
  },
  {
    "text": "17 years of experience with net hate and",
    "start": "81479",
    "end": "84439"
  },
  {
    "text": "love relationship more more of it it's a",
    "start": "84439",
    "end": "88000"
  },
  {
    "text": "love and much less it's hate",
    "start": "88000",
    "end": "90840"
  },
  {
    "text": "and uh I've had different titles in my",
    "start": "90840",
    "end": "93520"
  },
  {
    "text": "software engineering career starting as",
    "start": "93520",
    "end": "95640"
  },
  {
    "text": "a junior engineer through through",
    "start": "95640",
    "end": "98000"
  },
  {
    "text": "technical manager and now uh technical",
    "start": "98000",
    "end": "101280"
  },
  {
    "text": "director okay now we can start since you",
    "start": "101280",
    "end": "104119"
  },
  {
    "text": "know me now we can start the agenda for",
    "start": "104119",
    "end": "107640"
  },
  {
    "text": "this for my session is the following",
    "start": "107640",
    "end": "109600"
  },
  {
    "text": "first of all I introduce to a case study",
    "start": "109600",
    "end": "111920"
  },
  {
    "text": "a real project that has been simplified",
    "start": "111920",
    "end": "114360"
  },
  {
    "text": "for the purpose of this presentation",
    "start": "114360",
    "end": "116840"
  },
  {
    "text": "this project originally started without",
    "start": "116840",
    "end": "118600"
  },
  {
    "text": "Dapper and due to our curiosity and",
    "start": "118600",
    "end": "120880"
  },
  {
    "text": "passion for Quality software engineering",
    "start": "120880",
    "end": "123000"
  },
  {
    "text": "we have uh explored Dapper and its",
    "start": "123000",
    "end": "125479"
  },
  {
    "text": "possibilities once you introduced to the",
    "start": "125479",
    "end": "127640"
  },
  {
    "text": "case study I will explore the non duer",
    "start": "127640",
    "end": "129679"
  },
  {
    "text": "version of the project and then I will",
    "start": "129679",
    "end": "131400"
  },
  {
    "text": "daize it during that I will show The",
    "start": "131400",
    "end": "133879"
  },
  {
    "text": "Source C Source Cod and point to only",
    "start": "133879",
    "end": "137080"
  },
  {
    "text": "the most important code Snippets from D",
    "start": "137080",
    "end": "140800"
  },
  {
    "text": "perspective finally I will elaborate at",
    "start": "140800",
    "end": "143440"
  },
  {
    "text": "one way well for my team from my team's",
    "start": "143440",
    "end": "145920"
  },
  {
    "text": "perspective and what are our next steps",
    "start": "145920",
    "end": "150360"
  },
  {
    "text": "case study uh built an II supported",
    "start": "150360",
    "end": "154120"
  },
  {
    "text": "service for attech assignment evaluation",
    "start": "154120",
    "end": "157360"
  },
  {
    "text": "for one of our first favorite customers",
    "start": "157360",
    "end": "159800"
  },
  {
    "text": "we had to build an AI supported service",
    "start": "159800",
    "end": "161840"
  },
  {
    "text": "for formative assessment of students",
    "start": "161840",
    "end": "163760"
  },
  {
    "text": "products and homework and also give",
    "start": "163760",
    "end": "165920"
  },
  {
    "text": "suggestions for further",
    "start": "165920",
    "end": "168280"
  },
  {
    "text": "development our customer is basically",
    "start": "168280",
    "end": "170840"
  },
  {
    "text": "attech startup that wants to completely",
    "start": "170840",
    "end": "173519"
  },
  {
    "text": "change the education process by",
    "start": "173519",
    "end": "175239"
  },
  {
    "text": "establishing creative and engaging",
    "start": "175239",
    "end": "177560"
  },
  {
    "text": "learning for a better world the the",
    "start": "177560",
    "end": "179840"
  },
  {
    "text": "customer has an ecosystem of several",
    "start": "179840",
    "end": "181599"
  },
  {
    "text": "different web applications for",
    "start": "181599",
    "end": "183040"
  },
  {
    "text": "creativity and collaboration with the",
    "start": "183040",
    "end": "185280"
  },
  {
    "text": "applications the students can create",
    "start": "185280",
    "end": "187120"
  },
  {
    "text": "different type of content videos books",
    "start": "187120",
    "end": "190040"
  },
  {
    "text": "mind maps and so on and of course they",
    "start": "190040",
    "end": "192799"
  },
  {
    "text": "can collaborate on this content",
    "start": "192799",
    "end": "195519"
  },
  {
    "text": "interactively init group is technology",
    "start": "195519",
    "end": "197920"
  },
  {
    "text": "partner for this customer and we are uh",
    "start": "197920",
    "end": "201720"
  },
  {
    "text": "responsible for their accelerated HL",
    "start": "201720",
    "end": "204560"
  },
  {
    "text": "development very recently inspired by",
    "start": "204560",
    "end": "207040"
  },
  {
    "text": "the great success of GPT the customer",
    "start": "207040",
    "end": "210080"
  },
  {
    "text": "wanted to create an AI driven module for",
    "start": "210080",
    "end": "213519"
  },
  {
    "text": "formative assessment of student products",
    "start": "213519",
    "end": "217120"
  },
  {
    "text": "and also to give suggestions for their",
    "start": "217120",
    "end": "218959"
  },
  {
    "text": "further development very often the",
    "start": "218959",
    "end": "221159"
  },
  {
    "text": "students have no inspiration and they",
    "start": "221159",
    "end": "223760"
  },
  {
    "text": "get stuck into their creativity so we",
    "start": "223760",
    "end": "226760"
  },
  {
    "text": "would like to use GPT and AI basically",
    "start": "226760",
    "end": "229760"
  },
  {
    "text": "to give them and to inspire them so they",
    "start": "229760",
    "end": "232280"
  },
  {
    "text": "can uh be more creative and more",
    "start": "232280",
    "end": "236079"
  },
  {
    "text": "productive the idea is that the students",
    "start": "236079",
    "end": "238400"
  },
  {
    "text": "create content of very ious types",
    "start": "238400",
    "end": "240959"
  },
  {
    "text": "basically they can use the all the",
    "start": "240959",
    "end": "242879"
  },
  {
    "text": "different products from the startup to",
    "start": "242879",
    "end": "245519"
  },
  {
    "text": "uh create audios videos mind maps text",
    "start": "245519",
    "end": "249040"
  },
  {
    "text": "and so on and then they can ask GPT for",
    "start": "249040",
    "end": "252560"
  },
  {
    "text": "feed feedback or for further development",
    "start": "252560",
    "end": "254959"
  },
  {
    "text": "of ideas for that purpose we have to",
    "start": "254959",
    "end": "257519"
  },
  {
    "text": "transform transform everything the",
    "start": "257519",
    "end": "260160"
  },
  {
    "text": "student has produced into text then",
    "start": "260160",
    "end": "264639"
  },
  {
    "text": "create a form and send it to GPT since",
    "start": "264639",
    "end": "268720"
  },
  {
    "text": "this is startup we know that everything",
    "start": "268720",
    "end": "271600"
  },
  {
    "text": "must be production ready from day one",
    "start": "271600",
    "end": "273960"
  },
  {
    "text": "that means at least scalability",
    "start": "273960",
    "end": "275800"
  },
  {
    "text": "resilience and security have to be",
    "start": "275800",
    "end": "277720"
  },
  {
    "text": "treated with the same priority as the",
    "start": "277720",
    "end": "279400"
  },
  {
    "text": "functional requirements therefore we",
    "start": "279400",
    "end": "281880"
  },
  {
    "text": "went for microservice architecture from",
    "start": "281880",
    "end": "283919"
  },
  {
    "text": "the very",
    "start": "283919",
    "end": "285039"
  },
  {
    "text": "beginning we have Ed identified three",
    "start": "285039",
    "end": "288680"
  },
  {
    "text": "microservices or three microservice",
    "start": "288680",
    "end": "291120"
  },
  {
    "text": "application the first one is ingestion",
    "start": "291120",
    "end": "293320"
  },
  {
    "text": "service the ingestion service is",
    "start": "293320",
    "end": "295479"
  },
  {
    "text": "responsible for receiving requests from",
    "start": "295479",
    "end": "297440"
  },
  {
    "text": "students from students and teachers the",
    "start": "297440",
    "end": "300120"
  },
  {
    "text": "ingestion service has one single HTTP",
    "start": "300120",
    "end": "303440"
  },
  {
    "text": "endpoint and when a request is received",
    "start": "303440",
    "end": "306199"
  },
  {
    "text": "containing all the multimedia content",
    "start": "306199",
    "end": "308680"
  },
  {
    "text": "text audio video and so on it is stored",
    "start": "308680",
    "end": "312280"
  },
  {
    "text": "into a common prom",
    "start": "312280",
    "end": "314160"
  },
  {
    "text": "storage and then the request is sent by",
    "start": "314160",
    "end": "319000"
  },
  {
    "text": "reference to the next microservice of",
    "start": "319000",
    "end": "322280"
  },
  {
    "text": "course it sent via que the",
    "start": "322280",
    "end": "325639"
  },
  {
    "text": "transformation service is the one in the",
    "start": "325639",
    "end": "327479"
  },
  {
    "text": "middle that one is responsible for",
    "start": "327479",
    "end": "329840"
  },
  {
    "text": "transforming the request by transforming",
    "start": "329840",
    "end": "332479"
  },
  {
    "text": "everything non text to text this service",
    "start": "332479",
    "end": "335960"
  },
  {
    "text": "use",
    "start": "335960",
    "end": "337280"
  },
  {
    "text": "combination of various cognitive",
    "start": "337280",
    "end": "339360"
  },
  {
    "text": "Services as well",
    "start": "339360",
    "end": "341120"
  },
  {
    "text": "as domain knowledge and when the request",
    "start": "341120",
    "end": "344360"
  },
  {
    "text": "is being",
    "start": "344360",
    "end": "345680"
  },
  {
    "text": "transformed the final result is being",
    "start": "345680",
    "end": "347960"
  },
  {
    "text": "stored into a prompt storage again into",
    "start": "347960",
    "end": "350360"
  },
  {
    "text": "the common prompt storage and also sent",
    "start": "350360",
    "end": "354479"
  },
  {
    "text": "further by reference to the next micros",
    "start": "354479",
    "end": "358880"
  },
  {
    "text": "service",
    "start": "358880",
    "end": "360160"
  },
  {
    "text": "the final micros service is basically",
    "start": "360160",
    "end": "362000"
  },
  {
    "text": "the extraction service and this servic",
    "start": "362000",
    "end": "364160"
  },
  {
    "text": "is responsible for creating a prompt",
    "start": "364160",
    "end": "366680"
  },
  {
    "text": "including domain knowledge sending that",
    "start": "366680",
    "end": "369160"
  },
  {
    "text": "prompt to GPT service and then once the",
    "start": "369160",
    "end": "372120"
  },
  {
    "text": "result",
    "start": "372120",
    "end": "373280"
  },
  {
    "text": "is ready the result is stored into the",
    "start": "373280",
    "end": "376520"
  },
  {
    "text": "common prom storage and is forwarded",
    "start": "376520",
    "end": "378560"
  },
  {
    "text": "back to the requestor one common one",
    "start": "378560",
    "end": "382319"
  },
  {
    "text": "comment about the common PR storage you",
    "start": "382319",
    "end": "384800"
  },
  {
    "text": "might argue that this is not a valid",
    "start": "384800",
    "end": "386599"
  },
  {
    "text": "microservice architecture because all",
    "start": "386599",
    "end": "389039"
  },
  {
    "text": "the microservices they they share the",
    "start": "389039",
    "end": "391440"
  },
  {
    "text": "same database or the same data storage",
    "start": "391440",
    "end": "394880"
  },
  {
    "text": "in this case that is not really a valid",
    "start": "394880",
    "end": "397039"
  },
  {
    "text": "argument because we use serverless",
    "start": "397039",
    "end": "398840"
  },
  {
    "text": "prompt storage and that is Cosmos DV",
    "start": "398840",
    "end": "401080"
  },
  {
    "text": "basically technology with Autos scale",
    "start": "401080",
    "end": "403680"
  },
  {
    "text": "that can support",
    "start": "403680",
    "end": "404840"
  },
  {
    "text": "scalability in theory infinite",
    "start": "404840",
    "end": "406800"
  },
  {
    "text": "scalability and avoid the problems or",
    "start": "406800",
    "end": "410520"
  },
  {
    "text": "the effects of a Noisy Neighbor so even",
    "start": "410520",
    "end": "413440"
  },
  {
    "text": "if there is a noisy microservice",
    "start": "413440",
    "end": "415120"
  },
  {
    "text": "ingestion transformation or ingestion it",
    "start": "415120",
    "end": "418280"
  },
  {
    "text": "doesn't really matter because Cosmos DB",
    "start": "418280",
    "end": "420120"
  },
  {
    "text": "has to handle that out of the out of the",
    "start": "420120",
    "end": "424360"
  },
  {
    "text": "box this is the current architecture AR",
    "start": "424360",
    "end": "428560"
  },
  {
    "text": "architecture implemented in Asia and as",
    "start": "428560",
    "end": "431840"
  },
  {
    "text": "it is being shown now it runs in",
    "start": "431840",
    "end": "433800"
  },
  {
    "text": "production at this moment so you can see",
    "start": "433800",
    "end": "436280"
  },
  {
    "text": "we have the three",
    "start": "436280",
    "end": "437680"
  },
  {
    "text": "microservice uh applications implemented",
    "start": "437680",
    "end": "441000"
  },
  {
    "text": "in net and they run in Docker containers",
    "start": "441000",
    "end": "444000"
  },
  {
    "text": "in aure container using aure container",
    "start": "444000",
    "end": "446280"
  },
  {
    "text": "services we have cues asure service bus",
    "start": "446280",
    "end": "449440"
  },
  {
    "text": "use between them and we have Cosmos DB",
    "start": "449440",
    "end": "453319"
  },
  {
    "text": "as a common storage of course there are",
    "start": "453319",
    "end": "455160"
  },
  {
    "text": "many more services that are being used",
    "start": "455160",
    "end": "457280"
  },
  {
    "text": "like the cognitive Services open AI",
    "start": "457280",
    "end": "459919"
  },
  {
    "text": "application insights key volts Azure",
    "start": "459919",
    "end": "462080"
  },
  {
    "text": "Monitor and so on and so",
    "start": "462080",
    "end": "465599"
  },
  {
    "text": "on before we dive in into the non dper",
    "start": "466800",
    "end": "471319"
  },
  {
    "text": "version source code I want to emphasize",
    "start": "471319",
    "end": "473520"
  },
  {
    "text": "some important points for this session",
    "start": "473520",
    "end": "475840"
  },
  {
    "text": "namely in the noner version all the",
    "start": "475840",
    "end": "477960"
  },
  {
    "text": "microservices must must know how to",
    "start": "477960",
    "end": "480639"
  },
  {
    "text": "connect to aure kyol how to read a write",
    "start": "480639",
    "end": "484080"
  },
  {
    "text": "to aure Cosmos DB and how to send and",
    "start": "484080",
    "end": "486960"
  },
  {
    "text": "receive cues or",
    "start": "486960",
    "end": "489680"
  },
  {
    "text": "requests to asure service bus cues so",
    "start": "489680",
    "end": "492840"
  },
  {
    "text": "basically all these three services they",
    "start": "492840",
    "end": "495039"
  },
  {
    "text": "have to have these three knowledges or",
    "start": "495039",
    "end": "498039"
  },
  {
    "text": "these",
    "start": "498039",
    "end": "498960"
  },
  {
    "text": "three Kno hows on how in order to",
    "start": "498960",
    "end": "502199"
  },
  {
    "text": "complete their tasks this common",
    "start": "502199",
    "end": "504639"
  },
  {
    "text": "knowledge is basically manifested into a",
    "start": "504639",
    "end": "506479"
  },
  {
    "text": "boilerplate source code that is dragged",
    "start": "506479",
    "end": "508520"
  },
  {
    "text": "alone to through the application life",
    "start": "508520",
    "end": "510319"
  },
  {
    "text": "cycle and as such it requires continuous",
    "start": "510319",
    "end": "513200"
  },
  {
    "text": "maintenance updates and tests otherwise",
    "start": "513200",
    "end": "516039"
  },
  {
    "text": "it will become a technical",
    "start": "516039",
    "end": "520120"
  },
  {
    "text": "dep okay now let's see the noner source",
    "start": "520120",
    "end": "524600"
  },
  {
    "text": "code one uh note here is that for the",
    "start": "524600",
    "end": "529080"
  },
  {
    "text": "purpose of this session I have all the",
    "start": "529080",
    "end": "530760"
  },
  {
    "text": "projects leing into a single repository",
    "start": "530760",
    "end": "532959"
  },
  {
    "text": "while the production version or the the",
    "start": "532959",
    "end": "535240"
  },
  {
    "text": "real project uh it's a multi repo",
    "start": "535240",
    "end": "538440"
  },
  {
    "text": "organiz has a multi organization where",
    "start": "538440",
    "end": "540560"
  },
  {
    "text": "each microservice lives into own its own",
    "start": "540560",
    "end": "543040"
  },
  {
    "text": "repository and has its own cicd",
    "start": "543040",
    "end": "545720"
  },
  {
    "text": "pipelines okay uh in the non duer",
    "start": "545720",
    "end": "549760"
  },
  {
    "text": "version we have five projects and that",
    "start": "549760",
    "end": "552160"
  },
  {
    "text": "is the API project which is basically",
    "start": "552160",
    "end": "554360"
  },
  {
    "text": "the",
    "start": "554360",
    "end": "555040"
  },
  {
    "text": "ingestion responsible for receiving",
    "start": "555040",
    "end": "557360"
  },
  {
    "text": "requests we have the transformation",
    "start": "557360",
    "end": "559600"
  },
  {
    "text": "service we have the extraction",
    "start": "559600",
    "end": "562279"
  },
  {
    "text": "service and we have two more additional",
    "start": "562279",
    "end": "565440"
  },
  {
    "text": "projects and that is domain model",
    "start": "565440",
    "end": "567480"
  },
  {
    "text": "project which holds all the domain en",
    "start": "567480",
    "end": "569480"
  },
  {
    "text": "that we need for this solution and we",
    "start": "569480",
    "end": "571640"
  },
  {
    "text": "have common service which basically",
    "start": "571640",
    "end": "574000"
  },
  {
    "text": "implements the common services that are",
    "start": "574000",
    "end": "576399"
  },
  {
    "text": "needed across the microservice",
    "start": "576399",
    "end": "578360"
  },
  {
    "text": "applications in the common service we",
    "start": "578360",
    "end": "580600"
  },
  {
    "text": "have implementation on how to",
    "start": "580600",
    "end": "584720"
  },
  {
    "text": "store and how to read values from Cosmos",
    "start": "584720",
    "end": "588120"
  },
  {
    "text": "DB and we do have a Q service that is",
    "start": "588120",
    "end": "591120"
  },
  {
    "text": "responsible for",
    "start": "591120",
    "end": "592560"
  },
  {
    "text": "sending items into say uh into asure",
    "start": "592560",
    "end": "595920"
  },
  {
    "text": "service bus Cube it's important that",
    "start": "595920",
    "end": "599320"
  },
  {
    "text": "this project is being shared among among",
    "start": "599320",
    "end": "601640"
  },
  {
    "text": "all the three microservice application",
    "start": "601640",
    "end": "604360"
  },
  {
    "text": "and that is the basically the one that",
    "start": "604360",
    "end": "606800"
  },
  {
    "text": "uh that has the knowledge on how to use",
    "start": "606800",
    "end": "609519"
  },
  {
    "text": "this these services or how to use the",
    "start": "609519",
    "end": "611920"
  },
  {
    "text": "third party services that we",
    "start": "611920",
    "end": "614160"
  },
  {
    "text": "need okay uh the API project it it has",
    "start": "614160",
    "end": "618440"
  },
  {
    "text": "only one controller uh and uh what it",
    "start": "618440",
    "end": "621760"
  },
  {
    "text": "does it waits for new Ser for new",
    "start": "621760",
    "end": "624079"
  },
  {
    "text": "requests when a new request is coming is",
    "start": "624079",
    "end": "627079"
  },
  {
    "text": "basically executing",
    "start": "627079",
    "end": "629600"
  },
  {
    "text": "internal prompt service and that service",
    "start": "629600",
    "end": "633000"
  },
  {
    "text": "what it",
    "start": "633000",
    "end": "634200"
  },
  {
    "text": "does it",
    "start": "634200",
    "end": "636240"
  },
  {
    "text": "sends it adds some logs of course and",
    "start": "636240",
    "end": "639399"
  },
  {
    "text": "then it stores the request into the",
    "start": "639399",
    "end": "642040"
  },
  {
    "text": "storage service and send the the request",
    "start": "642040",
    "end": "644880"
  },
  {
    "text": "into the cube then we",
    "start": "644880",
    "end": "647959"
  },
  {
    "text": "have the transformation service the",
    "start": "647959",
    "end": "650720"
  },
  {
    "text": "transformation service is basically a",
    "start": "650720",
    "end": "652440"
  },
  {
    "text": "console application that continuously",
    "start": "652440",
    "end": "655279"
  },
  {
    "text": "listens for new changes on the Queue and",
    "start": "655279",
    "end": "657519"
  },
  {
    "text": "whenever there is a new change on the",
    "start": "657519",
    "end": "659639"
  },
  {
    "text": "que it basically transforms the new",
    "start": "659639",
    "end": "662920"
  },
  {
    "text": "items so it gets the Q message it reads",
    "start": "662920",
    "end": "667320"
  },
  {
    "text": "all the details from the storage",
    "start": "667320",
    "end": "669519"
  },
  {
    "text": "service it do it does some magic of",
    "start": "669519",
    "end": "672639"
  },
  {
    "text": "course then update the lock States and",
    "start": "672639",
    "end": "675440"
  },
  {
    "text": "again store to the storage and send to",
    "start": "675440",
    "end": "677680"
  },
  {
    "text": "the next queue in the",
    "start": "677680",
    "end": "680079"
  },
  {
    "text": "pipeline and of course we have the",
    "start": "680079",
    "end": "682320"
  },
  {
    "text": "extraction service which is pretty",
    "start": "682320",
    "end": "683880"
  },
  {
    "text": "similar it has extraction service",
    "start": "683880",
    "end": "686079"
  },
  {
    "text": "implementation in it and what it does it",
    "start": "686079",
    "end": "689120"
  },
  {
    "text": "waits for a q message and whenever there",
    "start": "689120",
    "end": "691240"
  },
  {
    "text": "is a new Q message it gets all the",
    "start": "691240",
    "end": "694160"
  },
  {
    "text": "details from the",
    "start": "694160",
    "end": "696880"
  },
  {
    "text": "storage executes open Ai call updates",
    "start": "696880",
    "end": "701160"
  },
  {
    "text": "the LOD the the loog states and of",
    "start": "701160",
    "end": "703560"
  },
  {
    "text": "course stores the final result into the",
    "start": "703560",
    "end": "706160"
  },
  {
    "text": "prompt uh or into the storage service",
    "start": "706160",
    "end": "710440"
  },
  {
    "text": "again and as you can see all these three",
    "start": "710440",
    "end": "713399"
  },
  {
    "text": "services they have basically",
    "start": "713399",
    "end": "715760"
  },
  {
    "text": "implementation or basically",
    "start": "715760",
    "end": "717800"
  },
  {
    "text": "initialization any injection of the",
    "start": "717800",
    "end": "719800"
  },
  {
    "text": "common service and that is being",
    "start": "719800",
    "end": "721880"
  },
  {
    "text": "implemented here so into the API we we",
    "start": "721880",
    "end": "726560"
  },
  {
    "text": "do have these two methods register stor",
    "start": "726560",
    "end": "729320"
  },
  {
    "text": "service and register Q service and what",
    "start": "729320",
    "end": "732800"
  },
  {
    "text": "they do they create a new keol inst",
    "start": "732800",
    "end": "736639"
  },
  {
    "text": "client then they read the cosmos DB",
    "start": "736639",
    "end": "739199"
  },
  {
    "text": "connection string they create new",
    "start": "739199",
    "end": "741920"
  },
  {
    "text": "database connection and they inject that",
    "start": "741920",
    "end": "744880"
  },
  {
    "text": "into a storage service it is very",
    "start": "744880",
    "end": "747880"
  },
  {
    "text": "similar",
    "start": "747880",
    "end": "749440"
  },
  {
    "text": "with the cues again we read from the key",
    "start": "749440",
    "end": "752000"
  },
  {
    "text": "Vol name we create key Vol client we",
    "start": "752000",
    "end": "754959"
  },
  {
    "text": "read the service bus connection string",
    "start": "754959",
    "end": "757240"
  },
  {
    "text": "and create Q service so what we get here",
    "start": "757240",
    "end": "760399"
  },
  {
    "text": "we get",
    "start": "760399",
    "end": "761760"
  },
  {
    "text": "around 30 lines of code that are being",
    "start": "761760",
    "end": "766000"
  },
  {
    "text": "used for creating and injection",
    "start": "766000",
    "end": "769440"
  },
  {
    "text": "injecting uh the common Services it's",
    "start": "769440",
    "end": "772240"
  },
  {
    "text": "pretty much similar with the other two",
    "start": "772240",
    "end": "774800"
  },
  {
    "text": "microservices in the transformation",
    "start": "774800",
    "end": "776800"
  },
  {
    "text": "service we have the same case",
    "start": "776800",
    "end": "779519"
  },
  {
    "text": "we have initialize Asing which is again",
    "start": "779519",
    "end": "783079"
  },
  {
    "text": "around 30 lines of code that is being",
    "start": "783079",
    "end": "786360"
  },
  {
    "text": "used for creating the common services",
    "start": "786360",
    "end": "788720"
  },
  {
    "text": "and their appropriate",
    "start": "788720",
    "end": "792360"
  },
  {
    "text": "injection and of course we have the same",
    "start": "792360",
    "end": "794639"
  },
  {
    "text": "thing for the extraction",
    "start": "794639",
    "end": "796880"
  },
  {
    "text": "service one thing that I want to note",
    "start": "796880",
    "end": "799880"
  },
  {
    "text": "here is the docker compos file so the",
    "start": "799880",
    "end": "803560"
  },
  {
    "text": "docker compos file is quite similar or",
    "start": "803560",
    "end": "806920"
  },
  {
    "text": "quite simple because we have three a",
    "start": "806920",
    "end": "809920"
  },
  {
    "text": "three uh microservices which are",
    "start": "809920",
    "end": "812680"
  },
  {
    "text": "represented by three Docker files and",
    "start": "812680",
    "end": "815240"
  },
  {
    "text": "these three are created into the docker",
    "start": "815240",
    "end": "818320"
  },
  {
    "text": "compos",
    "start": "818320",
    "end": "819720"
  },
  {
    "text": "file okay so that was the noner version",
    "start": "819720",
    "end": "824000"
  },
  {
    "text": "source code now the next thing is to",
    "start": "824000",
    "end": "827079"
  },
  {
    "text": "diarize this solution so let's do it",
    "start": "827079",
    "end": "831279"
  },
  {
    "text": "before I jump in into the source code I",
    "start": "831279",
    "end": "833279"
  },
  {
    "text": "would like to give some uh elaboration",
    "start": "833279",
    "end": "835880"
  },
  {
    "text": "on the on the steps that I'm going to do",
    "start": "835880",
    "end": "839360"
  },
  {
    "text": "so in the noner version as you you",
    "start": "839360",
    "end": "842800"
  },
  {
    "text": "already have seen that uh all three",
    "start": "842800",
    "end": "845839"
  },
  {
    "text": "microservices they have to have",
    "start": "845839",
    "end": "847639"
  },
  {
    "text": "implementation of the common service",
    "start": "847639",
    "end": "849800"
  },
  {
    "text": "services that basically Implement",
    "start": "849800",
    "end": "851480"
  },
  {
    "text": "talking to Cosmos DV and uh talking to",
    "start": "851480",
    "end": "854440"
  },
  {
    "text": "Asia service bus cues in the in the",
    "start": "854440",
    "end": "857279"
  },
  {
    "text": "Dapper version what we will achieve",
    "start": "857279",
    "end": "860279"
  },
  {
    "text": "basically we will get rid of the common",
    "start": "860279",
    "end": "862959"
  },
  {
    "text": "services so that is the first and and",
    "start": "862959",
    "end": "865519"
  },
  {
    "text": "most important benefit of the",
    "start": "865519",
    "end": "867480"
  },
  {
    "text": "diarization so so we remove the common",
    "start": "867480",
    "end": "870360"
  },
  {
    "text": "services that have implementation on how",
    "start": "870360",
    "end": "873480"
  },
  {
    "text": "to talk to Cosmos DB and how to send and",
    "start": "873480",
    "end": "875959"
  },
  {
    "text": "receive uh request to the service bus",
    "start": "875959",
    "end": "878560"
  },
  {
    "text": "que and then instead of that we get one",
    "start": "878560",
    "end": "882480"
  },
  {
    "text": "daer side car container next to our",
    "start": "882480",
    "end": "884800"
  },
  {
    "text": "three",
    "start": "884800",
    "end": "886480"
  },
  {
    "text": "microservices so theorization basically",
    "start": "886480",
    "end": "889079"
  },
  {
    "text": "starts with one big deal and that is we",
    "start": "889079",
    "end": "891639"
  },
  {
    "text": "don't need the common Services",
    "start": "891639",
    "end": "894320"
  },
  {
    "text": "anymore technically in source code with",
    "start": "894320",
    "end": "896920"
  },
  {
    "text": "source code um language it means one",
    "start": "896920",
    "end": "899600"
  },
  {
    "text": "project less no service initialization",
    "start": "899600",
    "end": "902800"
  },
  {
    "text": "and no injection so those 30 lines of",
    "start": "902800",
    "end": "905480"
  },
  {
    "text": "injection that we have to copy from from",
    "start": "905480",
    "end": "908120"
  },
  {
    "text": "one microservice to another and of",
    "start": "908120",
    "end": "910759"
  },
  {
    "text": "course no third party SDK dependencies",
    "start": "910759",
    "end": "914639"
  },
  {
    "text": "so our solution will not depend anymore",
    "start": "914639",
    "end": "917720"
  },
  {
    "text": "on SDK for Cosmos DB and for aure K and",
    "start": "917720",
    "end": "921759"
  },
  {
    "text": "for aure service bus of course we reduce",
    "start": "921759",
    "end": "925399"
  },
  {
    "text": "the source code but on the other side we",
    "start": "925399",
    "end": "927360"
  },
  {
    "text": "will have to uh uh increase the",
    "start": "927360",
    "end": "930000"
  },
  {
    "text": "configuration so we will have to",
    "start": "930000",
    "end": "931839"
  },
  {
    "text": "introduce the the do the Dapper",
    "start": "931839",
    "end": "934920"
  },
  {
    "text": "components and of course we will get",
    "start": "934920",
    "end": "937519"
  },
  {
    "text": "more complex uh docare compos file at",
    "start": "937519",
    "end": "940319"
  },
  {
    "text": "least for local",
    "start": "940319",
    "end": "943440"
  },
  {
    "text": "development so in when I was trying to",
    "start": "943440",
    "end": "947120"
  },
  {
    "text": "explain to the developers in my team",
    "start": "947120",
    "end": "949519"
  },
  {
    "text": "when we do dapper transition we",
    "start": "949519",
    "end": "951440"
  },
  {
    "text": "basically remove source code with",
    "start": "951440",
    "end": "954680"
  },
  {
    "text": "configuration and that source code is",
    "start": "954680",
    "end": "957160"
  },
  {
    "text": "pretty much boiler plate source code",
    "start": "957160",
    "end": "959519"
  },
  {
    "text": "that we still have to maintain and if we",
    "start": "959519",
    "end": "962199"
  },
  {
    "text": "don't do that it will it will become a",
    "start": "962199",
    "end": "964399"
  },
  {
    "text": "technical depth",
    "start": "964399",
    "end": "966399"
  },
  {
    "text": "and with Dapper basically we get rid of",
    "start": "966399",
    "end": "970240"
  },
  {
    "text": "that boiler plate uh source code that",
    "start": "970240",
    "end": "973519"
  },
  {
    "text": "can become a problem after some time and",
    "start": "973519",
    "end": "976440"
  },
  {
    "text": "we move that complexity into uh",
    "start": "976440",
    "end": "979000"
  },
  {
    "text": "configuration and config",
    "start": "979000",
    "end": "981360"
  },
  {
    "text": "files uh because I mentioned AIA and",
    "start": "981360",
    "end": "984800"
  },
  {
    "text": "this is running in Asia and we are using",
    "start": "984800",
    "end": "987079"
  },
  {
    "text": "AIA as a cloud provider so all these",
    "start": "987079",
    "end": "989000"
  },
  {
    "text": "three uh services are",
    "start": "989000",
    "end": "991040"
  },
  {
    "text": "basically implemented with aure our",
    "start": "991040",
    "end": "994079"
  },
  {
    "text": "three microservices or our three micros",
    "start": "994079",
    "end": "996600"
  },
  {
    "text": "service application applications they",
    "start": "996600",
    "end": "999000"
  },
  {
    "text": "have daer site car running next to them",
    "start": "999000",
    "end": "1001959"
  },
  {
    "text": "that is has knowledge on how to",
    "start": "1001959",
    "end": "1005160"
  },
  {
    "text": "communicate to kolt how to read and",
    "start": "1005160",
    "end": "1007560"
  },
  {
    "text": "write items to the cosmos DB and also",
    "start": "1007560",
    "end": "1010360"
  },
  {
    "text": "how to send requests to service bus Cube",
    "start": "1010360",
    "end": "1014399"
  },
  {
    "text": "so now let's see the daer version source",
    "start": "1014399",
    "end": "1017519"
  },
  {
    "text": "code",
    "start": "1017519",
    "end": "1020480"
  },
  {
    "text": "okay now let's see the duper version of",
    "start": "1020680",
    "end": "1024558"
  },
  {
    "text": "The Source Code of the project so as I",
    "start": "1024559",
    "end": "1028120"
  },
  {
    "text": "already mentioned we don't have the",
    "start": "1028120",
    "end": "1029839"
  },
  {
    "text": "common service and that is one big win",
    "start": "1029839",
    "end": "1032438"
  },
  {
    "text": "so we do REM we do have removed the Q",
    "start": "1032439",
    "end": "1035558"
  },
  {
    "text": "service and the storage service and we",
    "start": "1035559",
    "end": "1038400"
  },
  {
    "text": "also removed their dependency so I will",
    "start": "1038400",
    "end": "1041798"
  },
  {
    "text": "now",
    "start": "1041799",
    "end": "1042760"
  },
  {
    "text": "open the API the ingestion service and I",
    "start": "1042760",
    "end": "1046120"
  },
  {
    "text": "will open the the dependency injection",
    "start": "1046120",
    "end": "1049880"
  },
  {
    "text": "or the pro program CS file and we did",
    "start": "1049880",
    "end": "1053960"
  },
  {
    "text": "remove all that 7 30 something clients",
    "start": "1053960",
    "end": "1056960"
  },
  {
    "text": "of cod where we create new instance of",
    "start": "1056960",
    "end": "1059080"
  },
  {
    "text": "the Q service and injection and also",
    "start": "1059080",
    "end": "1061520"
  },
  {
    "text": "from the uh storage service and instead",
    "start": "1061520",
    "end": "1064720"
  },
  {
    "text": "of that we do have only one single line",
    "start": "1064720",
    "end": "1067039"
  },
  {
    "text": "at Dapper",
    "start": "1067039",
    "end": "1068799"
  },
  {
    "text": "client going further in the prompt",
    "start": "1068799",
    "end": "1071240"
  },
  {
    "text": "service instead of injection the",
    "start": "1071240",
    "end": "1073679"
  },
  {
    "text": "injecting the Q service and the storage",
    "start": "1073679",
    "end": "1075559"
  },
  {
    "text": "service we have injected only the Dapper",
    "start": "1075559",
    "end": "1077760"
  },
  {
    "text": "client",
    "start": "1077760",
    "end": "1079159"
  },
  {
    "text": "and when we process new prompts",
    "start": "1079159",
    "end": "1081440"
  },
  {
    "text": "basically there is no big difference in",
    "start": "1081440",
    "end": "1083240"
  },
  {
    "text": "the numbers of source code lines but",
    "start": "1083240",
    "end": "1086400"
  },
  {
    "text": "there is a difference in the way how do",
    "start": "1086400",
    "end": "1088280"
  },
  {
    "text": "we",
    "start": "1088280",
    "end": "1090280"
  },
  {
    "text": "save prompts and how do we send them to",
    "start": "1090280",
    "end": "1093240"
  },
  {
    "text": "the next queue in the",
    "start": "1093240",
    "end": "1096039"
  },
  {
    "text": "pipeline okay uh another big thing and",
    "start": "1096039",
    "end": "1099880"
  },
  {
    "text": "another big transformation is in the",
    "start": "1099880",
    "end": "1102240"
  },
  {
    "text": "type of the project so in the noner",
    "start": "1102240",
    "end": "1104880"
  },
  {
    "text": "version we have the extraction service",
    "start": "1104880",
    "end": "1106880"
  },
  {
    "text": "and the transformation service",
    "start": "1106880",
    "end": "1109280"
  },
  {
    "text": "uh as a console application in this case",
    "start": "1109280",
    "end": "1112400"
  },
  {
    "text": "in the Dapper version they are apis",
    "start": "1112400",
    "end": "1115880"
  },
  {
    "text": "why because now the daer side car",
    "start": "1115880",
    "end": "1118600"
  },
  {
    "text": "container basically takes over the",
    "start": "1118600",
    "end": "1120360"
  },
  {
    "text": "responsibility for continuously",
    "start": "1120360",
    "end": "1122159"
  },
  {
    "text": "listening for new changes or for new",
    "start": "1122159",
    "end": "1124520"
  },
  {
    "text": "items on the Queue and whenever there is",
    "start": "1124520",
    "end": "1126880"
  },
  {
    "text": "a new item in the queue they have they",
    "start": "1126880",
    "end": "1129799"
  },
  {
    "text": "create HTTP call to our application to",
    "start": "1129799",
    "end": "1134000"
  },
  {
    "text": "inform us that there is a new item in",
    "start": "1134000",
    "end": "1136320"
  },
  {
    "text": "the queue so the transformation service",
    "start": "1136320",
    "end": "1139320"
  },
  {
    "text": "now is a web API solution and it has a",
    "start": "1139320",
    "end": "1142159"
  },
  {
    "text": "prompt controller and in that prompt",
    "start": "1142159",
    "end": "1144720"
  },
  {
    "text": "controller Whenever there is a new item",
    "start": "1144720",
    "end": "1147280"
  },
  {
    "text": "in the queue the dper side side car",
    "start": "1147280",
    "end": "1149960"
  },
  {
    "text": "container detects that item and send us",
    "start": "1149960",
    "end": "1154360"
  },
  {
    "text": "via HTTP to our prompt controller so",
    "start": "1154360",
    "end": "1158120"
  },
  {
    "text": "this definition here basically says that",
    "start": "1158120",
    "end": "1160520"
  },
  {
    "text": "this controller continuously Le um I",
    "start": "1160520",
    "end": "1163799"
  },
  {
    "text": "mean this controller will accept uh new",
    "start": "1163799",
    "end": "1167440"
  },
  {
    "text": "items from the Sub sub pops sub",
    "start": "1167440",
    "end": "1169280"
  },
  {
    "text": "component and from the transform CU",
    "start": "1169280",
    "end": "1172520"
  },
  {
    "text": "whenever we have a new item there that",
    "start": "1172520",
    "end": "1174320"
  },
  {
    "text": "is being sent to the transformation",
    "start": "1174320",
    "end": "1176039"
  },
  {
    "text": "service the transformation service it's",
    "start": "1176039",
    "end": "1178720"
  },
  {
    "text": "also quite simplified but not too much",
    "start": "1178720",
    "end": "1182200"
  },
  {
    "text": "because there is a difference in the",
    "start": "1182200",
    "end": "1183720"
  },
  {
    "text": "injection we don't inject the Dapper the",
    "start": "1183720",
    "end": "1187280"
  },
  {
    "text": "Q service and the storage service but we",
    "start": "1187280",
    "end": "1189280"
  },
  {
    "text": "do inject the Dapper client of course",
    "start": "1189280",
    "end": "1192520"
  },
  {
    "text": "the difference here is that we don't",
    "start": "1192520",
    "end": "1194200"
  },
  {
    "text": "call the storage service and the Q",
    "start": "1194200",
    "end": "1196280"
  },
  {
    "text": "service but we call the Dapper client to",
    "start": "1196280",
    "end": "1198360"
  },
  {
    "text": "save State and to publish",
    "start": "1198360",
    "end": "1200880"
  },
  {
    "text": "events the same goes for uh extraction",
    "start": "1200880",
    "end": "1205360"
  },
  {
    "text": "service and I will skip that elaboration",
    "start": "1205360",
    "end": "1208880"
  },
  {
    "text": "what I want to elaborate is the docker",
    "start": "1208880",
    "end": "1211080"
  },
  {
    "text": "compos file as I mentioned we do have",
    "start": "1211080",
    "end": "1213520"
  },
  {
    "text": "more complex doer Docker compos file why",
    "start": "1213520",
    "end": "1217000"
  },
  {
    "text": "because for each of our uh Services now",
    "start": "1217000",
    "end": "1220000"
  },
  {
    "text": "we have to register the side car or the",
    "start": "1220000",
    "end": "1222840"
  },
  {
    "text": "Dapper container so instead of three now",
    "start": "1222840",
    "end": "1226480"
  },
  {
    "text": "we have six services registered in the",
    "start": "1226480",
    "end": "1228960"
  },
  {
    "text": "docker compos file again this is for",
    "start": "1228960",
    "end": "1231520"
  },
  {
    "text": "local",
    "start": "1231520",
    "end": "1232440"
  },
  {
    "text": "development uh for uh Cloud development",
    "start": "1232440",
    "end": "1235640"
  },
  {
    "text": "there are different uh configurations",
    "start": "1235640",
    "end": "1237720"
  },
  {
    "text": "that I will skip um that are not part of",
    "start": "1237720",
    "end": "1240440"
  },
  {
    "text": "this",
    "start": "1240440",
    "end": "1242880"
  },
  {
    "text": "session I would like to emphasize a",
    "start": "1242880",
    "end": "1245200"
  },
  {
    "text": "couple of things about the components I",
    "start": "1245200",
    "end": "1248120"
  },
  {
    "text": "really like the Simplicity and the the",
    "start": "1248120",
    "end": "1251720"
  },
  {
    "text": "configurability of the components",
    "start": "1251720",
    "end": "1253720"
  },
  {
    "text": "they're very simple to use and out of",
    "start": "1253720",
    "end": "1256159"
  },
  {
    "text": "the box so this is the AER key Vol",
    "start": "1256159",
    "end": "1259200"
  },
  {
    "text": "component uh and also for instance in",
    "start": "1259200",
    "end": "1262720"
  },
  {
    "text": "the pops up component this is how we use",
    "start": "1262720",
    "end": "1265799"
  },
  {
    "text": "the Secret store so we tell that we use",
    "start": "1265799",
    "end": "1268200"
  },
  {
    "text": "the this Secret store and we know we",
    "start": "1268200",
    "end": "1271240"
  },
  {
    "text": "tell that if you want to use this queue",
    "start": "1271240",
    "end": "1273880"
  },
  {
    "text": "the connection string for this queue is",
    "start": "1273880",
    "end": "1275919"
  },
  {
    "text": "basically a secret key",
    "start": "1275919",
    "end": "1278320"
  },
  {
    "text": "reference in The Secret store so this is",
    "start": "1278320",
    "end": "1281440"
  },
  {
    "text": "very elegent eligent and very simple to",
    "start": "1281440",
    "end": "1284679"
  },
  {
    "text": "use and of course this is the prompt",
    "start": "1284679",
    "end": "1287799"
  },
  {
    "text": "store the cosmos DB",
    "start": "1287799",
    "end": "1291159"
  },
  {
    "text": "configuration one thing that I want to",
    "start": "1291159",
    "end": "1293200"
  },
  {
    "text": "emphasize here is the key prefix feature",
    "start": "1293200",
    "end": "1297120"
  },
  {
    "text": "basically with the key prefix feature uh",
    "start": "1297120",
    "end": "1299520"
  },
  {
    "text": "we were able to reuse the same prompt",
    "start": "1299520",
    "end": "1302760"
  },
  {
    "text": "service but also the same items that we",
    "start": "1302760",
    "end": "1306400"
  },
  {
    "text": "store into the prompt service from all",
    "start": "1306400",
    "end": "1309000"
  },
  {
    "text": "the three microservice applications so",
    "start": "1309000",
    "end": "1312279"
  },
  {
    "text": "the key prefix basically uh makes a",
    "start": "1312279",
    "end": "1314840"
  },
  {
    "text": "distinguish whether do we share the",
    "start": "1314840",
    "end": "1317240"
  },
  {
    "text": "items across all the microservices or",
    "start": "1317240",
    "end": "1319559"
  },
  {
    "text": "not what we wanted to achieve is",
    "start": "1319559",
    "end": "1321679"
  },
  {
    "text": "basically that our prompts from the",
    "start": "1321679",
    "end": "1323600"
  },
  {
    "text": "ingestion service they have to be",
    "start": "1323600",
    "end": "1325360"
  },
  {
    "text": "available and reachable also for the",
    "start": "1325360",
    "end": "1329279"
  },
  {
    "text": "extraction service and also from the",
    "start": "1329279",
    "end": "1331120"
  },
  {
    "text": "transformation service by using this",
    "start": "1331120",
    "end": "1333440"
  },
  {
    "text": "feature we basically enabled that in a",
    "start": "1333440",
    "end": "1336200"
  },
  {
    "text": "very elegant uh solution again in a very",
    "start": "1336200",
    "end": "1339080"
  },
  {
    "text": "elegant",
    "start": "1339080",
    "end": "1340200"
  },
  {
    "text": "way and one more thing that I want to",
    "start": "1340200",
    "end": "1343440"
  },
  {
    "text": "mention here is basically how Dapper",
    "start": "1343440",
    "end": "1346960"
  },
  {
    "text": "utilizes the uh metad data so the the",
    "start": "1346960",
    "end": "1352760"
  },
  {
    "text": "partition key partition key is very",
    "start": "1352760",
    "end": "1355039"
  },
  {
    "text": "important thing to know and to",
    "start": "1355039",
    "end": "1356919"
  },
  {
    "text": "especially when you design a new Cosmos",
    "start": "1356919",
    "end": "1359679"
  },
  {
    "text": "DB uh domain model",
    "start": "1359679",
    "end": "1363480"
  },
  {
    "text": "so what it what it does dapper it",
    "start": "1363480",
    "end": "1367760"
  },
  {
    "text": "basically enables through the metadata",
    "start": "1367760",
    "end": "1370320"
  },
  {
    "text": "to set the proper partition",
    "start": "1370320",
    "end": "1372880"
  },
  {
    "text": "key into the Save State assing call",
    "start": "1372880",
    "end": "1376240"
  },
  {
    "text": "method so this is very very good and",
    "start": "1376240",
    "end": "1378760"
  },
  {
    "text": "very efficient in our case we have",
    "start": "1378760",
    "end": "1380480"
  },
  {
    "text": "decided to use the type as a partition",
    "start": "1380480",
    "end": "1384320"
  },
  {
    "text": "key and when we get a new prompt we get",
    "start": "1384320",
    "end": "1387200"
  },
  {
    "text": "the prompt type and when we send Save",
    "start": "1387200",
    "end": "1390120"
  },
  {
    "text": "State we basically set the partition key",
    "start": "1390120",
    "end": "1393120"
  },
  {
    "text": "to type and that's how we store the new",
    "start": "1393120",
    "end": "1396039"
  },
  {
    "text": "uh items into the storage",
    "start": "1396039",
    "end": "1399919"
  },
  {
    "text": "service so that was the source code",
    "start": "1400480",
    "end": "1404440"
  },
  {
    "text": "overview of the Dapper version as a as a",
    "start": "1404440",
    "end": "1409480"
  },
  {
    "text": "because of my R&D background I really",
    "start": "1409480",
    "end": "1411679"
  },
  {
    "text": "want to get deeper into the numbers",
    "start": "1411679",
    "end": "1414559"
  },
  {
    "text": "every now and then so I did Static",
    "start": "1414559",
    "end": "1416960"
  },
  {
    "text": "source code analysis on the both",
    "start": "1416960",
    "end": "1418640"
  },
  {
    "text": "projects with Dapper and without",
    "start": "1418640",
    "end": "1421039"
  },
  {
    "text": "Dapper uh we were I was following three",
    "start": "1421039",
    "end": "1424640"
  },
  {
    "text": "uh parameters maintainability index",
    "start": "1424640",
    "end": "1427200"
  },
  {
    "text": "cyclomatic complexity and lines of",
    "start": "1427200",
    "end": "1429400"
  },
  {
    "text": "executable",
    "start": "1429400",
    "end": "1431000"
  },
  {
    "text": "codes on the maintainability index we",
    "start": "1431000",
    "end": "1433600"
  },
  {
    "text": "did not get significant reduction",
    "start": "1433600",
    "end": "1435960"
  },
  {
    "text": "because we pretty much got the same uh",
    "start": "1435960",
    "end": "1438159"
  },
  {
    "text": "uh",
    "start": "1438159",
    "end": "1439480"
  },
  {
    "text": "uh uh index or the same numbers why is",
    "start": "1439480",
    "end": "1443159"
  },
  {
    "text": "that because this uh projects they don't",
    "start": "1443159",
    "end": "1446120"
  },
  {
    "text": "have the business logic inside them so",
    "start": "1446120",
    "end": "1448000"
  },
  {
    "text": "it's quite clean and pristine source",
    "start": "1448000",
    "end": "1450320"
  },
  {
    "text": "code on the catic complexity we got",
    "start": "1450320",
    "end": "1453440"
  },
  {
    "text": "around 10% reduction which is quite good",
    "start": "1453440",
    "end": "1457880"
  },
  {
    "text": "and I'm really happy with that and I",
    "start": "1457880",
    "end": "1459679"
  },
  {
    "text": "think the main reasons for that is that",
    "start": "1459679",
    "end": "1461440"
  },
  {
    "text": "we remove the the dependency injection",
    "start": "1461440",
    "end": "1464799"
  },
  {
    "text": "for the common",
    "start": "1464799",
    "end": "1466520"
  },
  {
    "text": "services and the most important uh thing",
    "start": "1466520",
    "end": "1469520"
  },
  {
    "text": "is the reduction of the lines of",
    "start": "1469520",
    "end": "1471520"
  },
  {
    "text": "executable source code we got 40%",
    "start": "1471520",
    "end": "1475600"
  },
  {
    "text": "reduction for this project and that is",
    "start": "1475600",
    "end": "1479480"
  },
  {
    "text": "great number but also of course this",
    "start": "1479480",
    "end": "1481960"
  },
  {
    "text": "project is not a real project and does",
    "start": "1481960",
    "end": "1484279"
  },
  {
    "text": "not have all the business logic that is",
    "start": "1484279",
    "end": "1486240"
  },
  {
    "text": "being uh uh implemented in the real",
    "start": "1486240",
    "end": "1489120"
  },
  {
    "text": "project for the real project we get",
    "start": "1489120",
    "end": "1491520"
  },
  {
    "text": "around",
    "start": "1491520",
    "end": "1492440"
  },
  {
    "text": "22% reduction on the lines of executable",
    "start": "1492440",
    "end": "1496039"
  },
  {
    "text": "source code but in that solution we",
    "start": "1496039",
    "end": "1499159"
  },
  {
    "text": "don't have um we don't use Dapper for",
    "start": "1499159",
    "end": "1502279"
  },
  {
    "text": "instance for AI component for",
    "start": "1502279",
    "end": "1505039"
  },
  {
    "text": "communication to open AI service now I",
    "start": "1505039",
    "end": "1507640"
  },
  {
    "text": "know that there is a Dapper component",
    "start": "1507640",
    "end": "1510320"
  },
  {
    "text": "for that so with more services and more",
    "start": "1510320",
    "end": "1513279"
  },
  {
    "text": "components coming into the uh into",
    "start": "1513279",
    "end": "1516760"
  },
  {
    "text": "Dapper I expect also more reduction even",
    "start": "1516760",
    "end": "1520279"
  },
  {
    "text": "on real",
    "start": "1520279",
    "end": "1522039"
  },
  {
    "text": "projects so what went well of course",
    "start": "1522039",
    "end": "1525640"
  },
  {
    "text": "that is the last source code technically",
    "start": "1525640",
    "end": "1528120"
  },
  {
    "text": "for me and for my team that means less",
    "start": "1528120",
    "end": "1530279"
  },
  {
    "text": "technical depth or at least less source",
    "start": "1530279",
    "end": "1532720"
  },
  {
    "text": "code to",
    "start": "1532720",
    "end": "1533679"
  },
  {
    "text": "maintain we did achieve accelerated",
    "start": "1533679",
    "end": "1536240"
  },
  {
    "text": "development with a minimal learning",
    "start": "1536240",
    "end": "1538200"
  },
  {
    "text": "curve so of course the de developers",
    "start": "1538200",
    "end": "1541159"
  },
  {
    "text": "they have to understand what is going on",
    "start": "1541159",
    "end": "1542960"
  },
  {
    "text": "and how we are going to utilize Dapper",
    "start": "1542960",
    "end": "1544880"
  },
  {
    "text": "and the whole logic but once they they",
    "start": "1544880",
    "end": "1547240"
  },
  {
    "text": "they get that then it's easy to continue",
    "start": "1547240",
    "end": "1551320"
  },
  {
    "text": "I'm really happy with uh with Dapper",
    "start": "1551320",
    "end": "1553720"
  },
  {
    "text": "because it's a set of the best",
    "start": "1553720",
    "end": "1555200"
  },
  {
    "text": "engineering patterns and practices just",
    "start": "1555200",
    "end": "1558399"
  },
  {
    "text": "uh the side card pattern is",
    "start": "1558399",
    "end": "1560520"
  },
  {
    "text": "also something that is very well",
    "start": "1560520",
    "end": "1562640"
  },
  {
    "text": "established into the into our world",
    "start": "1562640",
    "end": "1566360"
  },
  {
    "text": "simple and elegant Secrets",
    "start": "1566360",
    "end": "1568840"
  },
  {
    "text": "implementation uh leveraging technology",
    "start": "1568840",
    "end": "1571159"
  },
  {
    "text": "specific features like the cosmos DB",
    "start": "1571159",
    "end": "1573679"
  },
  {
    "text": "partition key and also the the key",
    "start": "1573679",
    "end": "1576760"
  },
  {
    "text": "prefix there and what I also like is",
    "start": "1576760",
    "end": "1580000"
  },
  {
    "text": "that the obstruction is on the source",
    "start": "1580000",
    "end": "1581679"
  },
  {
    "text": "code level but not on the architectural",
    "start": "1581679",
    "end": "1583679"
  },
  {
    "text": "level what I mean by this is that if you",
    "start": "1583679",
    "end": "1586600"
  },
  {
    "text": "decide to use for instance like in our",
    "start": "1586600",
    "end": "1588679"
  },
  {
    "text": "case Cosmos DB you still have to",
    "start": "1588679",
    "end": "1591880"
  },
  {
    "text": "be familiar and to know how to use",
    "start": "1591880",
    "end": "1596120"
  },
  {
    "text": "Cosmos DB and to know how to design a",
    "start": "1596120",
    "end": "1598640"
  },
  {
    "text": "database in Cosmos DB but you don't have",
    "start": "1598640",
    "end": "1601279"
  },
  {
    "text": "to write the source code so you get less",
    "start": "1601279",
    "end": "1603799"
  },
  {
    "text": "source code but you still have to be",
    "start": "1603799",
    "end": "1605760"
  },
  {
    "text": "aware on how to use the the technology",
    "start": "1605760",
    "end": "1609080"
  },
  {
    "text": "that you are going to select and that is",
    "start": "1609080",
    "end": "1611240"
  },
  {
    "text": "expected but still I really like how",
    "start": "1611240",
    "end": "1613480"
  },
  {
    "text": "it's",
    "start": "1613480",
    "end": "1614520"
  },
  {
    "text": "implemented what's next uh as I",
    "start": "1614520",
    "end": "1617080"
  },
  {
    "text": "mentioned we we will uh first of all we",
    "start": "1617080",
    "end": "1619440"
  },
  {
    "text": "will Explore More non non functional",
    "start": "1619440",
    "end": "1621880"
  },
  {
    "text": "requirements like resiliency",
    "start": "1621880",
    "end": "1623480"
  },
  {
    "text": "observability and security before we",
    "start": "1623480",
    "end": "1626080"
  },
  {
    "text": "decide to move to production with uh",
    "start": "1626080",
    "end": "1629399"
  },
  {
    "text": "with the dupper version of the of the",
    "start": "1629399",
    "end": "1631399"
  },
  {
    "text": "project there are new components coming",
    "start": "1631399",
    "end": "1634520"
  },
  {
    "text": "to the ecosystem like the open AI",
    "start": "1634520",
    "end": "1636840"
  },
  {
    "text": "component that we would like to utilize",
    "start": "1636840",
    "end": "1638840"
  },
  {
    "text": "and also benefit from that I'm curious",
    "start": "1638840",
    "end": "1641919"
  },
  {
    "text": "to combine Dapper with radius and Aspire",
    "start": "1641919",
    "end": "1644559"
  },
  {
    "text": "and there is also already a session on",
    "start": "1644559",
    "end": "1646440"
  },
  {
    "text": "this conference about radius and and",
    "start": "1646440",
    "end": "1648840"
  },
  {
    "text": "uper and I'm really uh happy with that",
    "start": "1648840",
    "end": "1651520"
  },
  {
    "text": "and of course uh I would like to explore",
    "start": "1651520",
    "end": "1653720"
  },
  {
    "text": "the cloud deployment",
    "start": "1653720",
    "end": "1655480"
  },
  {
    "text": "options one thing uh that we did we try",
    "start": "1655480",
    "end": "1659240"
  },
  {
    "text": "to use uh aure container services and we",
    "start": "1659240",
    "end": "1661960"
  },
  {
    "text": "notice that there is a difference in the",
    "start": "1661960",
    "end": "1664080"
  },
  {
    "text": "component format so we would like to see",
    "start": "1664080",
    "end": "1667279"
  },
  {
    "text": "how that will",
    "start": "1667279",
    "end": "1670000"
  },
  {
    "text": "go if you have questions feel free to",
    "start": "1670000",
    "end": "1673360"
  },
  {
    "text": "reach out to me either through Linkedin",
    "start": "1673360",
    "end": "1675559"
  },
  {
    "text": "or through the email uh uh the source",
    "start": "1675559",
    "end": "1678279"
  },
  {
    "text": "code is on my GitHub link uh feel free",
    "start": "1678279",
    "end": "1681279"
  },
  {
    "text": "to reach out as I said thank you very",
    "start": "1681279",
    "end": "1683320"
  },
  {
    "text": "much",
    "start": "1683320",
    "end": "1686278"
  }
]