[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "welcome everyone my name is Clemens this is Cathy and we will talk about some",
    "start": "439",
    "end": "6569"
  },
  {
    "text": "things that we've done in the server list working group as well as in the cloud events project so this is a split",
    "start": "6569",
    "end": "15470"
  },
  {
    "text": "presentation between the work flow work that we've been doing in the serviceworker group and after that there",
    "start": "15470",
    "end": "22949"
  },
  {
    "text": "will be a deep dive into kind of the principles and elements of the cloud",
    "start": "22949",
    "end": "29160"
  },
  {
    "text": "events specification per se yesterday it was an overview if you missed that there",
    "start": "29160",
    "end": "34200"
  },
  {
    "text": "will be great there is a great video that you can watch there's also some demos we're not going to do demos today but rarely talk about the the protocol",
    "start": "34200",
    "end": "40800"
  },
  {
    "text": "architecture what's that I'll leave it to Kathy to talk about workflow hi",
    "start": "40800",
    "end": "46680"
  },
  {
    "text": "everyone yeah I'm Cathedral I've been with the service work group since the beginning I'm reading the work and the",
    "start": "46680",
    "end": "56789"
  },
  {
    "text": "writing of the work group of the work flow specification so I'm going to talk about the work flow so um okay so first",
    "start": "56789",
    "end": "67860"
  },
  {
    "text": "I'm going to talk about what is cerberus workflow and why do we need a workflow",
    "start": "67860",
    "end": "73610"
  },
  {
    "text": "specification and then I'm going to give a description of the workflow",
    "start": "73610",
    "end": "79950"
  },
  {
    "text": "specification scope and overview of the workflow primitives and then I'm going",
    "start": "79950",
    "end": "85590"
  },
  {
    "text": "to give some example use cases so what",
    "start": "85590",
    "end": "92040"
  },
  {
    "start": "90000",
    "end": "90000"
  },
  {
    "text": "is a sublease workflow as we found out there many service applications are not",
    "start": "92040",
    "end": "99420"
  },
  {
    "text": "really a simple function triggered by a simple event it is all they are always",
    "start": "99420",
    "end": "106530"
  },
  {
    "text": "composed of a multiple steps of functional execution and the functions",
    "start": "106530",
    "end": "113520"
  },
  {
    "text": "at different steps could be triggered by different events or different event",
    "start": "113520",
    "end": "119549"
  },
  {
    "text": "combinations and the functions step could run in parallel or in",
    "start": "119549",
    "end": "126280"
  },
  {
    "text": "sequence an information may need to be passed from the event to the function",
    "start": "126280",
    "end": "132069"
  },
  {
    "text": "from one function to the next function or from one step of the workflow to the",
    "start": "132069",
    "end": "137410"
  },
  {
    "text": "next step of the workflow and function also need to be retried when the",
    "start": "137410",
    "end": "142810"
  },
  {
    "text": "execution of that function fails so of a PI function workflow it is actually a",
    "start": "142810",
    "end": "148870"
  },
  {
    "text": "function execution flow as showing this diagram this is a function illustration",
    "start": "148870",
    "end": "155739"
  },
  {
    "text": "of the function workflow so why do we need our workflows back with the",
    "start": "155739",
    "end": "163959"
  },
  {
    "start": "158000",
    "end": "158000"
  },
  {
    "text": "introduction of serverless the application developers work is reduced",
    "start": "163959",
    "end": "170530"
  },
  {
    "text": "to just writing in providing the function logic and all the other work",
    "start": "170530",
    "end": "176530"
  },
  {
    "text": "has been passed to the savviest platform so those work includes like you know",
    "start": "176530",
    "end": "183209"
  },
  {
    "text": "monitoring the events deciding when to trigger the function execution and also",
    "start": "183209",
    "end": "189340"
  },
  {
    "text": "you know managing you know how to schedule resources to run those functions and how to run those functions",
    "start": "189340",
    "end": "196269"
  },
  {
    "text": "and also managing the arm the different steps of the different steps of the",
    "start": "196269",
    "end": "201760"
  },
  {
    "text": "workflow and retry and also the information passing and filtering so all",
    "start": "201760",
    "end": "209650"
  },
  {
    "text": "these are done by the Cerberus platform and then they know in order for the service platform to do this job the app",
    "start": "209650",
    "end": "217239"
  },
  {
    "text": "developer needs to give a specification of the workflow to the service platform",
    "start": "217239",
    "end": "223120"
  },
  {
    "text": "so the server the prover knows how to manage and schedule resources for the",
    "start": "223120",
    "end": "229780"
  },
  {
    "text": "functions and managing the workflow so",
    "start": "229780",
    "end": "234970"
  },
  {
    "start": "233000",
    "end": "233000"
  },
  {
    "text": "the goal of the workflow specification is provide a standard way for the users",
    "start": "234970",
    "end": "240250"
  },
  {
    "text": "to specify the function and workflow template for their service applications",
    "start": "240250",
    "end": "246160"
  },
  {
    "text": "so as to facilitate portability of the of the application across different",
    "start": "246160",
    "end": "252970"
  },
  {
    "text": "vendors plan it is not the goal of the specification to specify the function signature that",
    "start": "252970",
    "end": "260539"
  },
  {
    "text": "we need we need another specification it is also another specification for the",
    "start": "260539",
    "end": "266930"
  },
  {
    "text": "detail event format or metadata for that we already have the crowd events and",
    "start": "266930",
    "end": "272410"
  },
  {
    "text": "specification so specifically the workflow specification scope includes",
    "start": "272410",
    "end": "279039"
  },
  {
    "text": "the primitives to spray for the app developer to specify under steps or",
    "start": "279039",
    "end": "285440"
  },
  {
    "text": "states that that are involved in a service application workflow and it",
    "start": "285440",
    "end": "292430"
  },
  {
    "text": "provides also event primitives for the app developer to specify the event",
    "start": "292430",
    "end": "299419"
  },
  {
    "text": "triggers for each function in the workflow it also provides primitives for",
    "start": "299419",
    "end": "305000"
  },
  {
    "text": "the application developer to specify functions involved in each step such as",
    "start": "305000",
    "end": "311150"
  },
  {
    "text": "you know what kind of function should be executed and whether those functions should be executed in sequence or in",
    "start": "311150",
    "end": "316610"
  },
  {
    "text": "parallel how to do the retry it also provides primitives for the application developer",
    "start": "316610",
    "end": "324320"
  },
  {
    "text": "to specify how information should be filtered and passed from you know function to them from one function to",
    "start": "324320",
    "end": "331010"
  },
  {
    "text": "the next function from or from one step to the next step so here is just a",
    "start": "331010",
    "end": "337580"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "overview of the of the key primitives provided by the workflow specification",
    "start": "337580",
    "end": "343669"
  },
  {
    "text": "in the first draft a surface function workflow can be naturally modeled as a",
    "start": "343669",
    "end": "349940"
  },
  {
    "text": "state machine the workflow may be invoked by our CLI command manually",
    "start": "349940",
    "end": "357110"
  },
  {
    "text": "through a segment or API call it can also be triggered dynamically upon",
    "start": "357110",
    "end": "362300"
  },
  {
    "text": "arrival of the event so there are three key parts in the work flow model the",
    "start": "362300",
    "end": "368180"
  },
  {
    "text": "first part is list of events so there are many different types of events that",
    "start": "368180",
    "end": "374479"
  },
  {
    "text": "could trigger a function execution here are some examples of the event triggers",
    "start": "374479",
    "end": "380000"
  },
  {
    "text": "a storage event that means when a file is stored in a storage that could",
    "start": "380000",
    "end": "386090"
  },
  {
    "text": "trigger function execution HTTP web request event or video streaming event or",
    "start": "386090",
    "end": "392840"
  },
  {
    "text": "database database access event or email notification event there are many",
    "start": "392840",
    "end": "398629"
  },
  {
    "text": "different types of events and the second part is a list of states currently we",
    "start": "398629",
    "end": "405169"
  },
  {
    "text": "define a sixth state and the first one is the event State in this state the",
    "start": "405169",
    "end": "411439"
  },
  {
    "text": "workflow will wait for a while or more events arrival and then will trigger a",
    "start": "411439",
    "end": "416629"
  },
  {
    "text": "function to allow more functions to execute when those events arrived and",
    "start": "416629",
    "end": "422509"
  },
  {
    "text": "this function could execute in sequence or in parallel the second state is",
    "start": "422509",
    "end": "428300"
  },
  {
    "text": "operation state at this state the workflow will not wait for any external",
    "start": "428300",
    "end": "433520"
  },
  {
    "text": "events trigger they were just start to execute those functions and the third",
    "start": "433520",
    "end": "439580"
  },
  {
    "text": "state is a switch state at this state the workflow will branch out to",
    "start": "439580",
    "end": "446120"
  },
  {
    "text": "different next next state based on the input data and the last state you know",
    "start": "446120",
    "end": "453110"
  },
  {
    "text": "that means the workflow will you know will delay for us basic pre-specified",
    "start": "453110",
    "end": "458240"
  },
  {
    "text": "period of time and we have parallel state at this state the workflow is",
    "start": "458240",
    "end": "464419"
  },
  {
    "text": "going to branch out different next States and so this enables state",
    "start": "464419",
    "end": "471789"
  },
  {
    "text": "embedding which can be used to describe more complicated service applications",
    "start": "471789",
    "end": "479240"
  },
  {
    "text": "and the last data is an state which means a workflow is going to end either",
    "start": "479240",
    "end": "484729"
  },
  {
    "text": "with a success of failure status and the third part is a s primitives to specify",
    "start": "484729",
    "end": "491930"
  },
  {
    "text": "the functions associated with the state so we have directives for you to specify",
    "start": "491930",
    "end": "497899"
  },
  {
    "text": "with other functions should be executed in sequence or in parallel and directives for you to see better how you",
    "start": "497899",
    "end": "505969"
  },
  {
    "text": "know the service platform should do the retry for your service function and also",
    "start": "505969",
    "end": "511550"
  },
  {
    "text": "it also provides directives for you to specify information filtering and",
    "start": "511550",
    "end": "517068"
  },
  {
    "text": "parsing from event to function from one function to the next function from one state to the",
    "start": "517069",
    "end": "523138"
  },
  {
    "text": "next state so now I'm going to go through two example use cases the first",
    "start": "523139",
    "end": "530490"
  },
  {
    "start": "526000",
    "end": "526000"
  },
  {
    "text": "example is a stock trade system so we",
    "start": "530490",
    "end": "536279"
  },
  {
    "text": "before I go through before I describe how we can use those workflow primitives",
    "start": "536279",
    "end": "543600"
  },
  {
    "text": "to describe this application I would like to first to go through how the stock trade system works of course this",
    "start": "543600",
    "end": "550319"
  },
  {
    "text": "is a simplified version of the stock trade system so every stock trade process begins with customers making a",
    "start": "550319",
    "end": "557610"
  },
  {
    "text": "stock trade request so when receiving a stock trade request the system is going",
    "start": "557610",
    "end": "563730"
  },
  {
    "text": "to authenticate the customer and then interpret a trader request to see",
    "start": "563730",
    "end": "569189"
  },
  {
    "text": "whether it's a buy or it's a sale and then it's going to validate whether stock ticker is a it's a correct one and",
    "start": "569189",
    "end": "575459"
  },
  {
    "text": "what check also check the transaction again some security trading rules etc so",
    "start": "575459",
    "end": "581430"
  },
  {
    "text": "if it's a is a buy stock request a system going to verify that the account has enough money to buy the stock and",
    "start": "581430",
    "end": "587579"
  },
  {
    "text": "they were debate the stock cost from the account and then send the response to",
    "start": "587579",
    "end": "593069"
  },
  {
    "text": "the customer to confirm the buy operation if it's a stock if it's a sales talk request the system will",
    "start": "593069",
    "end": "600059"
  },
  {
    "text": "verify whether there the account has enough shares for the sale transaction and also on send the",
    "start": "600059",
    "end": "607259"
  },
  {
    "text": "response for the customer to confirm the operation and then the system system will wait for the customers confirmation",
    "start": "607259",
    "end": "614579"
  },
  {
    "text": "of the stock transaction so when receiving that confirmation it's going to start executing stock transaction",
    "start": "614579",
    "end": "622309"
  },
  {
    "text": "update is going to update the account with a new number of shares update the",
    "start": "622309",
    "end": "628350"
  },
  {
    "text": "customers account with the new balance and also said that setlist transaction status to completion and also send out a",
    "start": "628350",
    "end": "635910"
  },
  {
    "text": "notification to the customer or the transaction completion in parallel the system will update the central stock",
    "start": "635910",
    "end": "643249"
  },
  {
    "text": "transaction data statistic database with a new buy or sale information",
    "start": "643249",
    "end": "650130"
  },
  {
    "text": "so now let's see how we come out we can describe this use case with using the",
    "start": "650130",
    "end": "655290"
  },
  {
    "text": "primitives defined in the workflow specification so the right side using a",
    "start": "655290",
    "end": "661019"
  },
  {
    "text": "diagram to illustrate such a workflow template we can see that there are five",
    "start": "661019",
    "end": "666870"
  },
  {
    "text": "states the the first state is an event state so in this state that means the",
    "start": "666870",
    "end": "673410"
  },
  {
    "text": "application needs to wait for event 1 which is a stock trade request event from the customer and then when this",
    "start": "673410",
    "end": "680610"
  },
  {
    "text": "event arrives the workflow will trigger a function 1 to execute the function one",
    "start": "680610",
    "end": "686009"
  },
  {
    "text": "will do authentication of the customer and interpreting the trade request to",
    "start": "686009",
    "end": "691649"
  },
  {
    "text": "see whether there is a buy or sell request and validate the stock ticker",
    "start": "691649",
    "end": "696750"
  },
  {
    "text": "check the transaction again against security or trading rules and process the trade request and then return the",
    "start": "696750",
    "end": "704430"
  },
  {
    "text": "processing result which you know either buy or sale and then the workflow is",
    "start": "704430",
    "end": "709470"
  },
  {
    "text": "going to transition to switch state and also pass the function ones return result to the switch state so if the",
    "start": "709470",
    "end": "717630"
  },
  {
    "text": "switch state is going to look at the function one reads out if it's a spy stock it's going to transition workflow",
    "start": "717630",
    "end": "724199"
  },
  {
    "text": "is going to transition to the buy operation State on the left side if it's",
    "start": "724199",
    "end": "729480"
  },
  {
    "text": "a sales talk the workflow will transition to the sale operation state",
    "start": "729480",
    "end": "734759"
  },
  {
    "text": "on the right side so suppose it's a buy stock request then you know in the fire",
    "start": "734759",
    "end": "741990"
  },
  {
    "text": "operation state the workflow will trigger the function to to execute without waiting for any is to annul",
    "start": "741990",
    "end": "747480"
  },
  {
    "text": "event so what function to does is to execute the buy stock operation verify",
    "start": "747480",
    "end": "753990"
  },
  {
    "text": "enough money to buy the stock debate this dark house from the account and also send a response for the customer to",
    "start": "753990",
    "end": "761279"
  },
  {
    "text": "confirm the operation similarly if it's a sales talk request then the workflow",
    "start": "761279",
    "end": "770100"
  },
  {
    "text": "is going to go into trigger of functions 3 to execute and what functions 3 does is to execute the sale stock operation",
    "start": "770100",
    "end": "778079"
  },
  {
    "text": "to verify this they are enough share to sell for the sale transaction and",
    "start": "778079",
    "end": "783290"
  },
  {
    "text": "also send the response for the customer to confirm the operation and then the workflow will transition to event state",
    "start": "783290",
    "end": "791060"
  },
  {
    "text": "in this at this event state the workflow is going to wait for the customers confirmation on the stock transaction",
    "start": "791060",
    "end": "797660"
  },
  {
    "text": "when that event happens the workflow will trigger a function for and function five to execute in in parallel so what",
    "start": "797660",
    "end": "806120"
  },
  {
    "text": "function for does is to execute the transaction update the stock account with a new number of shares take the",
    "start": "806120",
    "end": "813380"
  },
  {
    "text": "saving or checking account with the new balance and then to send out a notification to the customer in parallel",
    "start": "813380",
    "end": "821270"
  },
  {
    "text": "function five was also start to execute to update the central stock transaction",
    "start": "821270",
    "end": "826640"
  },
  {
    "text": "dates that history database with a new buy or sale information there will be a",
    "start": "826640",
    "end": "832399"
  },
  {
    "text": "end state which this diagram you know there's a there's a arrow here I'm sorry about that",
    "start": "832399",
    "end": "837830"
  },
  {
    "text": "but after the event state there will be a end state so now let's go through a",
    "start": "837830",
    "end": "843500"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "video streaming example use case so this application involves you know five",
    "start": "843500",
    "end": "850880"
  },
  {
    "text": "states to and first state is an event state so the application will start when",
    "start": "850880",
    "end": "857930"
  },
  {
    "text": "the video is uploaded to a storage and then the workflow will trigger a",
    "start": "857930",
    "end": "863870"
  },
  {
    "text": "function to analyze the videos file make a data and then pass that analyze the",
    "start": "863870",
    "end": "870680"
  },
  {
    "text": "information down to the next state which is an operation state and in the",
    "start": "870680",
    "end": "876290"
  },
  {
    "text": "operation state it's going to trigger three functions to execute in parallel the first function is to invoke mp4",
    "start": "876290",
    "end": "884000"
  },
  {
    "text": "media transcoder service the second function second function is to invoke",
    "start": "884000",
    "end": "889430"
  },
  {
    "text": "hrs media transcoder service and the third is to invoke - media transcoder",
    "start": "889430",
    "end": "896089"
  },
  {
    "text": "service and then after that workflow or transition to event stay - at this state",
    "start": "896089",
    "end": "902180"
  },
  {
    "text": "the workflow will wait for three external events so if you see whenever I",
    "start": "902180",
    "end": "909770"
  },
  {
    "text": "received a one event response event from the video transcoder",
    "start": "909770",
    "end": "915010"
  },
  {
    "text": "service is going to trigger a function to publish the transcoded video stream",
    "start": "915010",
    "end": "920830"
  },
  {
    "text": "to a component which can send it out to the unput and then it's going to walk",
    "start": "920830",
    "end": "926980"
  },
  {
    "text": "forward transition to the switch state at a switch state it's going to see",
    "start": "926980",
    "end": "933220"
  },
  {
    "text": "whether you know it has received all three responses or not if not it's going",
    "start": "933220",
    "end": "938650"
  },
  {
    "text": "to workflow overlooked back to the events date - if yes it's going to go to the end state so you might wonder why",
    "start": "938650",
    "end": "946780"
  },
  {
    "text": "you know we you need to break as a user and you need to break your video",
    "start": "946780",
    "end": "951880"
  },
  {
    "text": "streaming application or any other application into a service workflow",
    "start": "951880",
    "end": "957010"
  },
  {
    "text": "what is the benefit so there are several benefits I think you know the key benefit is it allows you know the",
    "start": "957010",
    "end": "964330"
  },
  {
    "text": "flexibility and agility for you to you know update your application will add",
    "start": "964330",
    "end": "969970"
  },
  {
    "text": "new functionality to your application for example you can modify your function",
    "start": "969970",
    "end": "976060"
  },
  {
    "text": "well if your function in the work flow without impacting any other functions or any other steps or you can add a new",
    "start": "976060",
    "end": "983020"
  },
  {
    "text": "function in the workflow very easily without changing other functions or other steps or you can add a new step to",
    "start": "983020",
    "end": "990460"
  },
  {
    "text": "provide a new service for example as of this video streaming application you can",
    "start": "990460",
    "end": "996160"
  },
  {
    "text": "provide a new step such as to create thumbnails or to inserting some to",
    "start": "996160",
    "end": "1002760"
  },
  {
    "text": "insert some ads in the video stream or inserting insert a video transcription",
    "start": "1002760",
    "end": "1008460"
  },
  {
    "text": "so the to do this if you break up your workflow into a service application",
    "start": "1008460",
    "end": "1014839"
  },
  {
    "text": "workflow it break up your application into a separate workflow will be easy to",
    "start": "1014839",
    "end": "1020460"
  },
  {
    "text": "do it so up to now we already finished",
    "start": "1020460",
    "end": "1025470"
  },
  {
    "text": "the first draft of the workflow specification it's still the first draft there are still quite some work to do",
    "start": "1025470",
    "end": "1032370"
  },
  {
    "text": "and you're welcome to take a look at that specification in no service what",
    "start": "1032370",
    "end": "1039270"
  },
  {
    "text": "group kick rebel and if you have any questions or if you think the the primitives are",
    "start": "1039270",
    "end": "1046750"
  },
  {
    "text": "provided in that spec and I'll satisfy your service your application you're",
    "start": "1046750",
    "end": "1053330"
  },
  {
    "text": "welcome to create a poor request or post questions and then we will work out that or better you can work with us together",
    "start": "1053330",
    "end": "1060110"
  },
  {
    "text": "to make that aspect more comprehensive and that can you know satisfy all",
    "start": "1060110",
    "end": "1065810"
  },
  {
    "text": "different use cases that's all I'm going to hand over to Colonel thank you for",
    "start": "1065810",
    "end": "1071120"
  },
  {
    "text": "Border Collie events all right sorry dog",
    "start": "1071120",
    "end": "1078950"
  },
  {
    "text": "drop don't fall Thank You Kathy now we're going to talk",
    "start": "1078950",
    "end": "1084140"
  },
  {
    "text": "about cloud events and the specification we gave you yesterday an introduction to cloud events with a few demos or with",
    "start": "1084140",
    "end": "1091430"
  },
  {
    "text": "one big demo and with a walkthrough through the various SDKs that we have",
    "start": "1091430",
    "end": "1096800"
  },
  {
    "text": "and said now I want to spend a little bit of time on the protocol architecture kind of one of the what's the thought",
    "start": "1096800",
    "end": "1102800"
  },
  {
    "text": "process behind you know what cloud events what the cloud events shape is and why is there so relatively little in",
    "start": "1102800",
    "end": "1111620"
  },
  {
    "text": "terms of metadata and cloud events and why are they not bigger so we're gonna get get to most of those things what I",
    "start": "1111620",
    "end": "1117530"
  },
  {
    "start": "1115000",
    "end": "1115000"
  },
  {
    "text": "want to start with and and thankfully Kathy has two great examples here in the",
    "start": "1117530",
    "end": "1123740"
  },
  {
    "text": "work flow examples for this is to distinguish between venting and messaging the work flow example that you",
    "start": "1123740",
    "end": "1132380"
  },
  {
    "text": "saw that has to do with stock trades is really a messaging example because you're walking up to a processor you're",
    "start": "1132380",
    "end": "1139310"
  },
  {
    "text": "walking up to a workflow and you say go do the following work which means you have the intent to have a stock trade",
    "start": "1139310",
    "end": "1146840"
  },
  {
    "text": "executed and with that intent you walk up to a system you give it a job that",
    "start": "1146840",
    "end": "1152390"
  },
  {
    "text": "sort of transfer is typically done with messaging and what you will typically want is you want to have feedback back",
    "start": "1152390",
    "end": "1159920"
  },
  {
    "text": "to you when that processing has been happening that's slightly different then",
    "start": "1159920",
    "end": "1166430"
  },
  {
    "text": "the second the video workflow that we've seen where you're uploading a file into",
    "start": "1166430",
    "end": "1172220"
  },
  {
    "text": "a store that raises an event and now are you basically hooking up",
    "start": "1172220",
    "end": "1178010"
  },
  {
    "text": "functionality to that event that has been raised without that fact that the",
    "start": "1178010",
    "end": "1185090"
  },
  {
    "text": "video has been uploaded being specifically targeted at that workflow it's simply something that is an",
    "start": "1185090",
    "end": "1190550"
  },
  {
    "text": "extension you turn a storage system where the video is put into a video",
    "start": "1190550",
    "end": "1196940"
  },
  {
    "text": "processing system by extension via eventing so in one case it's you have",
    "start": "1196940",
    "end": "1205160"
  },
  {
    "text": "intend you sent messages to a particular place and you expect messages back in",
    "start": "1205160",
    "end": "1212090"
  },
  {
    "text": "the other case you're raising events and you make them available for subscription and then you can build reactive systems",
    "start": "1212090",
    "end": "1217820"
  },
  {
    "text": "which are effectively natural extensions so events carry facts they report things",
    "start": "1217820",
    "end": "1226340"
  },
  {
    "text": "that have happened that's what an event is it has no destination it has no",
    "start": "1226340",
    "end": "1233480"
  },
  {
    "text": "correlation it has no reply because",
    "start": "1233480",
    "end": "1238870"
  },
  {
    "text": "there's nothing to reply to the fact has already happened and messages carry",
    "start": "1238870",
    "end": "1244430"
  },
  {
    "text": "intense there are hard architectural",
    "start": "1244430",
    "end": "1249700"
  },
  {
    "text": "consequences from having events versus having messages and when you look around the open source landscape in terms of",
    "start": "1249700",
    "end": "1256700"
  },
  {
    "text": "the application infrastructures that you see you see eventing infrastructures and messaging infrastructures which all",
    "start": "1256700",
    "end": "1263090"
  },
  {
    "text": "speak similar protocols but they have different shapes so for instance you see",
    "start": "1263090",
    "end": "1268900"
  },
  {
    "text": "Kinesis Kafka event hubs message bus as",
    "start": "1268900",
    "end": "1274550"
  },
  {
    "text": "being in jesters for large you know streams of telemetry of events and they",
    "start": "1274550",
    "end": "1280280"
  },
  {
    "text": "capture events and they basically are append-only lock infrastructures that you can go in and and read from later",
    "start": "1280280",
    "end": "1286720"
  },
  {
    "text": "that is different from a message broker where you send a message in into a queue",
    "start": "1286720",
    "end": "1291830"
  },
  {
    "text": "and now we have a competing consumer scenario where only one party can get the message and then the system managers",
    "start": "1291830",
    "end": "1297020"
  },
  {
    "text": "of the courser for you that is different from an event distribution platform",
    "start": "1297020",
    "end": "1304360"
  },
  {
    "text": "where you send message where you send events in and they get distributed in a",
    "start": "1304360",
    "end": "1309630"
  },
  {
    "text": "fashioned unto serverless functions similar to what we do in the demo for",
    "start": "1309630",
    "end": "1314880"
  },
  {
    "text": "cloud events because you have discrete events this thing just happened and you",
    "start": "1314880",
    "end": "1322020"
  },
  {
    "text": "can action on that versus things you put into Kafka where you have typically some",
    "start": "1322020",
    "end": "1328920"
  },
  {
    "text": "stateful processor some stateful analyzer well you know pulling data towards you towards that stateful",
    "start": "1328920",
    "end": "1335220"
  },
  {
    "text": "analyzer which will then yield some insight which will then go and trigger some activity in your system so you need",
    "start": "1335220",
    "end": "1342480"
  },
  {
    "text": "to have these event ingestion systems like Kafka so that you can go and pull a",
    "start": "1342480",
    "end": "1348480"
  },
  {
    "text": "stream towards a processor and that's why there push-pull and these events are",
    "start": "1348480",
    "end": "1354210"
  },
  {
    "text": "solution systems they can be pushed pushed because the events are discrete",
    "start": "1354210",
    "end": "1359400"
  },
  {
    "text": "and because you don't need to have correlation between event one event two so that distinction between events and",
    "start": "1359400",
    "end": "1366260"
  },
  {
    "text": "discrete events and event series and messaging is important because it causes",
    "start": "1366260",
    "end": "1371370"
  },
  {
    "text": "you to write and then use different architectures and it's perfectly okay",
    "start": "1371370",
    "end": "1377430"
  },
  {
    "text": "within a system to use multiple message broker infrastructures for particular",
    "start": "1377430",
    "end": "1383400"
  },
  {
    "text": "purposes what I see and that worries me a lot is that people think of Kafka as a",
    "start": "1383400",
    "end": "1389340"
  },
  {
    "text": "queue and it's not so what we do in",
    "start": "1389340",
    "end": "1396990"
  },
  {
    "text": "cloud events is we deal with events and not with messaging that has hard",
    "start": "1396990",
    "end": "1402060"
  },
  {
    "start": "1402000",
    "end": "1402000"
  },
  {
    "text": "consequences we have a lightweight common convention for those events we",
    "start": "1402060",
    "end": "1408270"
  },
  {
    "text": "don't go down the road of saying I need to have a reply to address I need to",
    "start": "1408270",
    "end": "1415170"
  },
  {
    "text": "have a message to message correlation model for how I can go and say this request matches this response there is",
    "start": "1415170",
    "end": "1422160"
  },
  {
    "text": "no address target in address indicator there's no notion of this message is",
    "start": "1422160",
    "end": "1427170"
  },
  {
    "text": "going to the following place and there's no notion of a command verb and any of",
    "start": "1427170",
    "end": "1433920"
  },
  {
    "text": "these things what you ought to be doing because these are all for publish/subscribe you are not telling",
    "start": "1433920",
    "end": "1440970"
  },
  {
    "text": "someone to do something but you're offering information that can go in act on so we've constrained",
    "start": "1440970",
    "end": "1446909"
  },
  {
    "text": "effectively ourselves in that architecture to only deliver a small subset of information that's broadly",
    "start": "1446909",
    "end": "1453480"
  },
  {
    "text": "useful if you're building event-driven systems so and what do we need we need",
    "start": "1453480",
    "end": "1461190"
  },
  {
    "text": "first a discriminator for what type of event is this so that's type and type is",
    "start": "1461190",
    "end": "1466980"
  },
  {
    "text": "a effectively a DNS reverse DNS expression if you want to make it so for",
    "start": "1466980",
    "end": "1473580"
  },
  {
    "text": "this ambiguous but across systems it's useful to use a reverse DNS notation",
    "start": "1473580",
    "end": "1481049"
  },
  {
    "text": "obviously so that they don't collide but we are not prescriptive that's a should",
    "start": "1481049",
    "end": "1486299"
  },
  {
    "text": "rule we set the time when an event was sent we give an indicator of the context",
    "start": "1486299",
    "end": "1493559"
  },
  {
    "text": "from which that event origin ated that's what the source is and don't think of",
    "start": "1493559",
    "end": "1499259"
  },
  {
    "text": "source as you know it's a your eye but don't think of that as an IP address bound thing right it could be that but",
    "start": "1499259",
    "end": "1507299"
  },
  {
    "text": "typically it's a UI date expresses the origin of the event and it can be",
    "start": "1507299",
    "end": "1512610"
  },
  {
    "text": "something abstract and it can be something like an indicator of you know",
    "start": "1512610",
    "end": "1517889"
  },
  {
    "text": "the temperature sensor that's up in that corner and identifies that within the scope of a system so source is a UI that",
    "start": "1517889",
    "end": "1525889"
  },
  {
    "text": "identifies where that event came from one question no we don't so so the",
    "start": "1525889",
    "end": "1540749"
  },
  {
    "text": "question what the question was and do you have any guidance specifically for how the source should be structured the",
    "start": "1540749",
    "end": "1546149"
  },
  {
    "text": "answer is no we don't it's a URI and you can make the UI whatever you want and it's since its",
    "start": "1546149",
    "end": "1553169"
  },
  {
    "text": "scope so the scoping here is its scope by the event type so so that's your",
    "start": "1553169",
    "end": "1559619"
  },
  {
    "text": "first criterion for scoping which means within that event type you can now basically set a rule for how the source",
    "start": "1559619",
    "end": "1565559"
  },
  {
    "text": "should be interpreted if you want to interpret it and not just use it as a source identifier so if you if you want",
    "start": "1565559",
    "end": "1572159"
  },
  {
    "text": "to be intelligent about the structure of the source information then that is keyed by effectively by the time",
    "start": "1572159",
    "end": "1579230"
  },
  {
    "text": "and then there's a unique identifier obviously for that event as the fire so you can discriminate it from from others",
    "start": "1579230",
    "end": "1586470"
  },
  {
    "text": "and also for instance useful if you need to have deduplication or if you need to",
    "start": "1586470",
    "end": "1594029"
  },
  {
    "text": "have a key that you can when you store that event somewhere and you want to go and retrieve the data then that's useful",
    "start": "1594029",
    "end": "1602340"
  },
  {
    "text": "and then we have information about the event data that's being carried so all of these were attributes that are kind",
    "start": "1602340",
    "end": "1608909"
  },
  {
    "text": "of metadata attributes that describe the events and then content type in schema is really about the data that's key and",
    "start": "1608909",
    "end": "1614159"
  },
  {
    "text": "carrot with the event so the notion is we give infrastructure event routers",
    "start": "1614159",
    "end": "1621080"
  },
  {
    "text": "message brokers things like Kafka all of those messaging infrastructures we give",
    "start": "1621080",
    "end": "1626850"
  },
  {
    "text": "those enough information so that they can go and route these events and that",
    "start": "1626850",
    "end": "1633510"
  },
  {
    "text": "you can go and and in a service infrastructure yes you can go and dispatch that event to the right function without you having to crack the",
    "start": "1633510",
    "end": "1640590"
  },
  {
    "text": "payload the payload only needs to be opened and and interpreted once it has",
    "start": "1640590",
    "end": "1645899"
  },
  {
    "text": "reached a destination where there is a compute host which can go and do that work so that's we believe that's enough",
    "start": "1645899",
    "end": "1652289"
  },
  {
    "text": "now we've also created extensibility that allows you to go and add your own but this is after a bunch of long",
    "start": "1652289",
    "end": "1659519"
  },
  {
    "text": "discussions that we haven't had in that group we believe that's a sufficient set",
    "start": "1659519",
    "end": "1667700"
  },
  {
    "start": "1664000",
    "end": "1664000"
  },
  {
    "text": "the events and so first of all the event",
    "start": "1667700",
    "end": "1673679"
  },
  {
    "text": "per se is an abstract data model we have a very simple type system that has exactly what we needed right we don't",
    "start": "1673679",
    "end": "1680340"
  },
  {
    "text": "have a floating point type because we don't have a floating point attributes we have an integer type we have a string",
    "start": "1680340",
    "end": "1686970"
  },
  {
    "text": "and and those exist mostly so that we can go and map those for what we call",
    "start": "1686970",
    "end": "1692340"
  },
  {
    "text": "event formats so an event format takes that that abstract cloud events",
    "start": "1692340",
    "end": "1697830"
  },
  {
    "text": "information model the information set now people are getting echoes of XML",
    "start": "1697830",
    "end": "1706669"
  },
  {
    "text": "maybe but the so but think about this so you have an abstract information model and now",
    "start": "1706669",
    "end": "1713850"
  },
  {
    "text": "you take that abstract information model and you map that onto an encoding the encoding that we have in the",
    "start": "1713850",
    "end": "1720120"
  },
  {
    "text": "specification here is Jason we have one for AMQP and then there's another and",
    "start": "1720120",
    "end": "1725880"
  },
  {
    "text": "another number of candidates for those encoding x' protobuf being one and one",
    "start": "1725880",
    "end": "1731130"
  },
  {
    "text": "that i still would like to see is Seymour which is a binary encoding which",
    "start": "1731130",
    "end": "1736200"
  },
  {
    "text": "is structurally I equivalent to Jason and so what those formats do is they",
    "start": "1736200",
    "end": "1741419"
  },
  {
    "text": "basically take your cloud event and then map them into a wire projection that can",
    "start": "1741419",
    "end": "1747179"
  },
  {
    "text": "then be carried on your transport all implementations must support Jason also",
    "start": "1747179",
    "end": "1755250"
  },
  {
    "text": "because a Jason is a foundational element here for it with the rendering",
    "start": "1755250",
    "end": "1760799"
  },
  {
    "text": "of some values into headers in transports for instance in HTTP and MQTT",
    "start": "1760799",
    "end": "1768500"
  },
  {
    "text": "the AMQP type system is defined because we need to map onto the transport",
    "start": "1768500",
    "end": "1774779"
  },
  {
    "text": "headers or properties that's our calling AMQP and so we need to have a clean mapping from the abstract type system",
    "start": "1774779",
    "end": "1780630"
  },
  {
    "text": "into the actual IP type system nqp has a fully blow a full-blown type system but",
    "start": "1780630",
    "end": "1786539"
  },
  {
    "text": "for payloads that is not very popular so we kind of left that out and kind of",
    "start": "1786539",
    "end": "1792809"
  },
  {
    "text": "steering people towards of making the payloads Jason in that structure and",
    "start": "1792809",
    "end": "1797820"
  },
  {
    "text": "then you know with binary being see boar or protobuf being the alternatives so",
    "start": "1797820",
    "end": "1807240"
  },
  {
    "start": "1805000",
    "end": "1805000"
  },
  {
    "text": "that was the event format so you find I said if you look at this the repo you'll find two event forms that are currently",
    "start": "1807240",
    "end": "1813480"
  },
  {
    "text": "there then there are transport bindings and what the transport bindings do is in",
    "start": "1813480",
    "end": "1821039"
  },
  {
    "text": "the first place they bind the cloud event to the messages of the respective",
    "start": "1821039",
    "end": "1827130"
  },
  {
    "text": "transport they don't say how a message should be sent they don't say whether it's a request or",
    "start": "1827130",
    "end": "1833970"
  },
  {
    "text": "a response the HTTP binding basically projects a cloud event onto the HTTP",
    "start": "1833970",
    "end": "1840960"
  },
  {
    "text": "message and the HTTP message is the same structure except for the header line",
    "start": "1840960",
    "end": "1846190"
  },
  {
    "text": "whether it's a request and response and so we're we're able to to map the map",
    "start": "1846190",
    "end": "1851260"
  },
  {
    "text": "that on top of it usually the delivery for those events will be based on you",
    "start": "1851260",
    "end": "1858010"
  },
  {
    "text": "know typically we will be in HTV post but it should be possible for you to solicit an event using an HTTP GET or an",
    "start": "1858010",
    "end": "1865090"
  },
  {
    "text": "HTTP delete even from a source that or so from a storage system and then have",
    "start": "1865090",
    "end": "1871750"
  },
  {
    "text": "the event delivered to you in the response of the message so the HTTP spec does allow that there's two modes the",
    "start": "1871750",
    "end": "1879550"
  },
  {
    "text": "structure of mode the structured mode takes the whole event and sticks that into the entity body of the HTTP message",
    "start": "1879550",
    "end": "1885910"
  },
  {
    "text": "and the binary mode takes the entire information model of the cloud event and projects that on top of the HTTP HTTP",
    "start": "1885910",
    "end": "1892840"
  },
  {
    "text": "message as is which means attributes become headers and the entity body becomes the entity body of the HTTP",
    "start": "1892840",
    "end": "1899320"
  },
  {
    "text": "message so here's the structured binding mode the structured binding mode uses",
    "start": "1899320",
    "end": "1905740"
  },
  {
    "start": "1902000",
    "end": "1902000"
  },
  {
    "text": "the application cloud events plus jason notation if we have other for other",
    "start": "1905740",
    "end": "1912660"
  },
  {
    "text": "encoding that will be cloud events plus mqp cloud events plus proto and the nice",
    "start": "1912660",
    "end": "1921340"
  },
  {
    "text": "thing about this the structured binding mode is obviously that you can go and take that message as is because it's",
    "start": "1921340",
    "end": "1928780"
  },
  {
    "text": "just effectively the content of the HTTP message and without doing any",
    "start": "1928780",
    "end": "1934270"
  },
  {
    "text": "transformations whatsoever you can now stick that you can get it up through HTTP you take the binary and stuff that",
    "start": "1934270",
    "end": "1940929"
  },
  {
    "text": "into into a Kafka transport which means if you do kind of these routing multi",
    "start": "1940929",
    "end": "1946030"
  },
  {
    "text": "layer routing infrastructures then the structured mode is better because you have all the data together if you want",
    "start": "1946030",
    "end": "1953890"
  },
  {
    "text": "to save some space or if you have large binary data then the binary mode is better because what the binary mode does",
    "start": "1953890",
    "end": "1960730"
  },
  {
    "start": "1959000",
    "end": "1959000"
  },
  {
    "text": "is it effectively takes the the the attributes of called events puts them on",
    "start": "1960730",
    "end": "1968350"
  },
  {
    "text": "to the HTTP headers prefixed with C dash and then you carry",
    "start": "1968350",
    "end": "1975550"
  },
  {
    "text": "the content really as the content of the HTTP message so one of the things that we explicitly trying to avoid here with",
    "start": "1975550",
    "end": "1981580"
  },
  {
    "text": "the protocol design is to make the same mistake as as soap did back in the day",
    "start": "1981580",
    "end": "1986670"
  },
  {
    "text": "which tried to have a total abstraction and treat all the product all the",
    "start": "1986670",
    "end": "1991780"
  },
  {
    "text": "protocols alike this is actually all leveraging all those those bindings leverage the facilities of the protocol",
    "start": "1991780",
    "end": "1998230"
  },
  {
    "text": "to be as natural in those protocols as possible and then with that also allow",
    "start": "1998230",
    "end": "2005690"
  },
  {
    "text": "specific infrastructure that is able to you know filter route based on on",
    "start": "2005690",
    "end": "2012420"
  },
  {
    "text": "information on metadata in those transports to go and act on those right",
    "start": "2012420",
    "end": "2018990"
  },
  {
    "text": "if you have a smart router and the smart router wants to go and look at the headers they need to be there and so",
    "start": "2018990",
    "end": "2025830"
  },
  {
    "text": "that's something that this doesn't have and that has there's a there's a may",
    "start": "2025830",
    "end": "2032100"
  },
  {
    "text": "rule and for the for the structured mode where it's explicitly allowed to also",
    "start": "2032100",
    "end": "2039600"
  },
  {
    "text": "add the HTTP equivalent headers if you are carrying the structured format for",
    "start": "2039600",
    "end": "2047280"
  },
  {
    "start": "2046000",
    "end": "2046000"
  },
  {
    "text": "the other for the other transports we have a binding for MVP for MQTT for Nats",
    "start": "2047280",
    "end": "2055908"
  },
  {
    "text": "and they are largely equivalent which means what they do is they also project",
    "start": "2055909",
    "end": "2061800"
  },
  {
    "text": "the cloud event onto an AMQP message or onto the MQTT published packet because",
    "start": "2061800",
    "end": "2069240"
  },
  {
    "text": "that's very specific and MQTT that's the only thing that actually carries payloads and onto the nats message so",
    "start": "2069240",
    "end": "2078090"
  },
  {
    "text": "these are these projections MQTT 3-1-1 can't do the binary mode so because",
    "start": "2078090",
    "end": "2085590"
  },
  {
    "text": "there's no custom headers so that always use a structured mode Nats it's the same thing always use a structured mode which",
    "start": "2085590",
    "end": "2091950"
  },
  {
    "text": "means the content is always in the payload completely and AMQP just like",
    "start": "2091950",
    "end": "2097800"
  },
  {
    "text": "HTTP supports effectively both of those modes where you can have either the binary or the structure both the binary",
    "start": "2097800",
    "end": "2106110"
  },
  {
    "text": "mode is probably the best choice for AMQP because AMQP typically impe",
    "start": "2106110",
    "end": "2111809"
  },
  {
    "text": "infrastructures typically allow it to filter on metadata and route based on metadata and I think that comes with",
    "start": "2111809",
    "end": "2117779"
  },
  {
    "text": "messages and so we're allowing effectively the cloud event information that is the basis for such routing to",
    "start": "2117779",
    "end": "2125430"
  },
  {
    "text": "then be available in the application properties and that's what we have kind",
    "start": "2125430",
    "end": "2132690"
  },
  {
    "text": "of as as intro you have another question sir didn't you ah so Trey it's a great",
    "start": "2132690",
    "end": "2154140"
  },
  {
    "text": "great great great point so yeah so the question was 48 for Tracy to be",
    "start": "2154140",
    "end": "2161339"
  },
  {
    "text": "reflected one thing I haven't that I",
    "start": "2161339",
    "end": "2167460"
  },
  {
    "text": "don't have in this neck surprisingly it's our extensions model so effectively there is an open tracing",
    "start": "2167460",
    "end": "2174359"
  },
  {
    "text": "extension in the in the spec in the spectrum that defines - for other",
    "start": "2174359",
    "end": "2181440"
  },
  {
    "text": "attributes so the way how we've done this and let me just go and and show you this here if you want to add any custom",
    "start": "2181440",
    "end": "2190140"
  },
  {
    "text": "content to an event you can go and do that as you like right as long as there's no coalition you can go in edges",
    "start": "2190140",
    "end": "2195539"
  },
  {
    "text": "add add attributes at the at the outer level there are some formal extensions",
    "start": "2195539",
    "end": "2202130"
  },
  {
    "text": "including the the tracing one that defined two attributes trace parent",
    "start": "2202130",
    "end": "2207809"
  },
  {
    "text": "tri-state which then can be inserted and then there's mapping rules specifically",
    "start": "2207809",
    "end": "2213000"
  },
  {
    "text": "for instance for HTTP where if you map this to http then you need to use the",
    "start": "2213000",
    "end": "2219359"
  },
  {
    "text": "following particular headers and not our our pattern here so we would use usually",
    "start": "2219359",
    "end": "2224700"
  },
  {
    "text": "this would be named C - trace parent C - tre State but an extension especailly",
    "start": "2224700",
    "end": "2230670"
  },
  {
    "text": "override this and define its own header mapping and then the implementation effectively of the of the extension must",
    "start": "2230670",
    "end": "2237390"
  },
  {
    "text": "then basically set that in the transport",
    "start": "2237390",
    "end": "2242510"
  },
  {
    "text": "so an extension generally owns it cetera coding and all of its its transport",
    "start": "2242510",
    "end": "2251330"
  },
  {
    "text": "mappings if they deviate from the from what the standard otherwise gives you",
    "start": "2251330",
    "end": "2259210"
  },
  {
    "text": "yeah for the so it's the requirement for",
    "start": "2260020",
    "end": "2269300"
  },
  {
    "text": "the event ID to be globally unique no it just needs to be unique enough that it",
    "start": "2269300",
    "end": "2275810"
  },
  {
    "text": "doesn't cause collision in your system so it can be it should be system unique right and system unique within the time",
    "start": "2275810",
    "end": "2282500"
  },
  {
    "text": "span where you care the easiest way to do this is always use a good but you don't have to because uniqueness is",
    "start": "2282500",
    "end": "2290720"
  },
  {
    "text": "always kind of a system scope but but people tend to use goods because you know thirty nine by its who cares yes so",
    "start": "2290720",
    "end": "2301880"
  },
  {
    "text": "so it's it's very convenient to use it but it's not there's no room we have not set a requirement for the unique this year and there need to be no need to be",
    "start": "2301880",
    "end": "2308600"
  },
  {
    "text": "you go over unique for the questions questions for Kathy ah yes see we always forget that on that",
    "start": "2308600",
    "end": "2318080"
  },
  {
    "text": "table our cloud event stickers which you will want because they're awesome and",
    "start": "2318080",
    "end": "2323560"
  },
  {
    "text": "and and Doug who is our fearless leader and the chair of the working group has",
    "start": "2323560",
    "end": "2329000"
  },
  {
    "text": "been trying to get them distributed to the people now for two events and it can",
    "start": "2329000",
    "end": "2336470"
  },
  {
    "text": "it never worked because we kind of always forgot this so so please go and get a sticker and take one for your",
    "start": "2336470",
    "end": "2343310"
  },
  {
    "text": "friend too all right thank you very much",
    "start": "2343310",
    "end": "2350470"
  },
  {
    "text": "[Applause]",
    "start": "2351280",
    "end": "2354469"
  }
]