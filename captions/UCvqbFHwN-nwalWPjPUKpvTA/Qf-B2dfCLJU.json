[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "thank you for joining us in this talk on",
    "start": "1520",
    "end": "3199"
  },
  {
    "text": "health checks",
    "start": "3199",
    "end": "4880"
  },
  {
    "text": "we will begin with quick introductions",
    "start": "4880",
    "end": "7120"
  },
  {
    "text": "i'm vanilla narona i work on the service",
    "start": "7120",
    "end": "9120"
  },
  {
    "text": "mesh platform at stripe i've been a",
    "start": "9120",
    "end": "11120"
  },
  {
    "text": "contributor in the istio and envoy",
    "start": "11120",
    "end": "13280"
  },
  {
    "text": "communities and i really enjoy",
    "start": "13280",
    "end": "15200"
  },
  {
    "text": "distributed systems",
    "start": "15200",
    "end": "18080"
  },
  {
    "text": "my name is john murray i am a engineer",
    "start": "19600",
    "end": "22560"
  },
  {
    "text": "on the service networking team at stripe",
    "start": "22560",
    "end": "24240"
  },
  {
    "text": "i'm building our internal service mesh i",
    "start": "24240",
    "end": "26240"
  },
  {
    "text": "am an occasional envoy contributor when",
    "start": "26240",
    "end": "28320"
  },
  {
    "text": "the need arises",
    "start": "28320",
    "end": "30000"
  },
  {
    "text": "and outside of work i am a sql sports",
    "start": "30000",
    "end": "32160"
  },
  {
    "text": "enthusiast",
    "start": "32160",
    "end": "34719"
  },
  {
    "text": "in this talk we will have a look at the",
    "start": "35280",
    "end": "37360"
  },
  {
    "text": "conceptual overview of health checks",
    "start": "37360",
    "end": "39920"
  },
  {
    "text": "some options within envoy for health",
    "start": "39920",
    "end": "41680"
  },
  {
    "text": "checking",
    "start": "41680",
    "end": "42960"
  },
  {
    "text": "how we perform health checks at stripe",
    "start": "42960",
    "end": "45760"
  },
  {
    "text": "some problems that we have encountered",
    "start": "45760",
    "end": "47600"
  },
  {
    "text": "with scale",
    "start": "47600",
    "end": "49039"
  },
  {
    "text": "and finally we will share our own",
    "start": "49039",
    "end": "50480"
  },
  {
    "text": "thoughts regarding headsets",
    "start": "50480",
    "end": "54000"
  },
  {
    "start": "53000",
    "end": "177000"
  },
  {
    "text": "let's now begin with the conceptual",
    "start": "54160",
    "end": "56000"
  },
  {
    "text": "overview of health x",
    "start": "56000",
    "end": "59600"
  },
  {
    "text": "what is health checking",
    "start": "59600",
    "end": "61440"
  },
  {
    "text": "to understand that let's take an example",
    "start": "61440",
    "end": "63840"
  },
  {
    "text": "of two services service a and service b",
    "start": "63840",
    "end": "67280"
  },
  {
    "text": "and service a here simply makes a",
    "start": "67280",
    "end": "69200"
  },
  {
    "text": "request to service b to get the cat's",
    "start": "69200",
    "end": "71520"
  },
  {
    "text": "gif",
    "start": "71520",
    "end": "72560"
  },
  {
    "text": "and if service b is down it's going to",
    "start": "72560",
    "end": "74640"
  },
  {
    "text": "result in an error",
    "start": "74640",
    "end": "77119"
  },
  {
    "text": "this error would go unnoticed until",
    "start": "77119",
    "end": "79280"
  },
  {
    "text": "there are several such requests that",
    "start": "79280",
    "end": "81200"
  },
  {
    "text": "fail",
    "start": "81200",
    "end": "82240"
  },
  {
    "text": "and someone then realizes that there is",
    "start": "82240",
    "end": "84560"
  },
  {
    "text": "a spike in errors on a dashboard",
    "start": "84560",
    "end": "86240"
  },
  {
    "text": "somewhere",
    "start": "86240",
    "end": "87360"
  },
  {
    "text": "or someone gets paged due to these high",
    "start": "87360",
    "end": "89600"
  },
  {
    "text": "number of errors",
    "start": "89600",
    "end": "91759"
  },
  {
    "text": "this is pretty bad because the time to",
    "start": "91759",
    "end": "94079"
  },
  {
    "text": "recovery from a failure scenario is",
    "start": "94079",
    "end": "96640"
  },
  {
    "text": "quite high in this system",
    "start": "96640",
    "end": "98880"
  },
  {
    "text": "and also several requests would have",
    "start": "98880",
    "end": "101119"
  },
  {
    "text": "failed in the meanwhile",
    "start": "101119",
    "end": "104240"
  },
  {
    "text": "what can we do better",
    "start": "104240",
    "end": "107040"
  },
  {
    "text": "we could introduce a new component",
    "start": "107040",
    "end": "108560"
  },
  {
    "text": "called the health checker",
    "start": "108560",
    "end": "110399"
  },
  {
    "text": "and the health sticker could basically",
    "start": "110399",
    "end": "111920"
  },
  {
    "text": "do two things",
    "start": "111920",
    "end": "113520"
  },
  {
    "text": "it could first query for the status of",
    "start": "113520",
    "end": "115840"
  },
  {
    "text": "the server that is service b in this",
    "start": "115840",
    "end": "117840"
  },
  {
    "text": "case",
    "start": "117840",
    "end": "118719"
  },
  {
    "text": "and then report the same to the client",
    "start": "118719",
    "end": "121360"
  },
  {
    "text": "which is service a in this case",
    "start": "121360",
    "end": "124000"
  },
  {
    "text": "service a can then make a decision on",
    "start": "124000",
    "end": "126479"
  },
  {
    "text": "whether to actually make a request to",
    "start": "126479",
    "end": "128080"
  },
  {
    "text": "service b that is if it is healthy",
    "start": "128080",
    "end": "130479"
  },
  {
    "text": "or simply hold back or act differently",
    "start": "130479",
    "end": "132800"
  },
  {
    "text": "if service weighs down",
    "start": "132800",
    "end": "135840"
  },
  {
    "text": "this pattern is very useful if you have",
    "start": "136160",
    "end": "138080"
  },
  {
    "text": "redundancy in the system",
    "start": "138080",
    "end": "140640"
  },
  {
    "text": "let's see how",
    "start": "140640",
    "end": "142879"
  },
  {
    "text": "in this example we have three instances",
    "start": "142879",
    "end": "145200"
  },
  {
    "text": "of service b",
    "start": "145200",
    "end": "146560"
  },
  {
    "text": "two of which are down and only one is",
    "start": "146560",
    "end": "148640"
  },
  {
    "text": "healthy",
    "start": "148640",
    "end": "149840"
  },
  {
    "text": "and because now we have the health",
    "start": "149840",
    "end": "151360"
  },
  {
    "text": "checker in the system it clearly knows",
    "start": "151360",
    "end": "153599"
  },
  {
    "text": "which instance is healthy and which ones",
    "start": "153599",
    "end": "155760"
  },
  {
    "text": "are not",
    "start": "155760",
    "end": "157440"
  },
  {
    "text": "it then reports this information to",
    "start": "157440",
    "end": "159440"
  },
  {
    "text": "service a",
    "start": "159440",
    "end": "160800"
  },
  {
    "text": "and now service a can make a wise",
    "start": "160800",
    "end": "162560"
  },
  {
    "text": "decision on where exactly to route the",
    "start": "162560",
    "end": "164879"
  },
  {
    "text": "request and because it routes the",
    "start": "164879",
    "end": "166879"
  },
  {
    "text": "request to only the healthy service b",
    "start": "166879",
    "end": "169120"
  },
  {
    "text": "instance it's going to get the correct",
    "start": "169120",
    "end": "171360"
  },
  {
    "text": "response",
    "start": "171360",
    "end": "172560"
  },
  {
    "text": "also right at the first time",
    "start": "172560",
    "end": "175760"
  },
  {
    "start": "177000",
    "end": "402000"
  },
  {
    "text": "now that we know what are health checks",
    "start": "177360",
    "end": "179680"
  },
  {
    "text": "let us look at some options within envoy",
    "start": "179680",
    "end": "181599"
  },
  {
    "text": "for health checking",
    "start": "181599",
    "end": "184000"
  },
  {
    "text": "mainly there are three options with an",
    "start": "184000",
    "end": "185440"
  },
  {
    "text": "envoy for health checking",
    "start": "185440",
    "end": "187440"
  },
  {
    "text": "active health checks",
    "start": "187440",
    "end": "189040"
  },
  {
    "text": "passive health checks or outlier",
    "start": "189040",
    "end": "190480"
  },
  {
    "text": "detection",
    "start": "190480",
    "end": "191680"
  },
  {
    "text": "and externally sourced health",
    "start": "191680",
    "end": "195120"
  },
  {
    "text": "what are active health",
    "start": "195360",
    "end": "196840"
  },
  {
    "text": "checks active health checking is where",
    "start": "196840",
    "end": "199360"
  },
  {
    "text": "you configure envoy to make explicit",
    "start": "199360",
    "end": "201920"
  },
  {
    "text": "calls to these upstream services",
    "start": "201920",
    "end": "204239"
  },
  {
    "text": "to figure out if they are healthy or not",
    "start": "204239",
    "end": "207200"
  },
  {
    "text": "these calls are made to these upstream",
    "start": "207200",
    "end": "209040"
  },
  {
    "text": "services in addition to the regular data",
    "start": "209040",
    "end": "211360"
  },
  {
    "text": "plane traffic",
    "start": "211360",
    "end": "212480"
  },
  {
    "text": "that this envoy is servicing",
    "start": "212480",
    "end": "215599"
  },
  {
    "text": "on the right you see an example of how",
    "start": "215599",
    "end": "217519"
  },
  {
    "text": "we can configure health checks with an",
    "start": "217519",
    "end": "219280"
  },
  {
    "text": "envoy",
    "start": "219280",
    "end": "220720"
  },
  {
    "text": "in this example we have configured envoy",
    "start": "220720",
    "end": "223440"
  },
  {
    "text": "to make",
    "start": "223440",
    "end": "224560"
  },
  {
    "text": "calls to my cluster dot service dot",
    "start": "224560",
    "end": "226720"
  },
  {
    "text": "envoy",
    "start": "226720",
    "end": "227760"
  },
  {
    "text": "every five seconds",
    "start": "227760",
    "end": "229440"
  },
  {
    "text": "at the health check path",
    "start": "229440",
    "end": "232000"
  },
  {
    "text": "now if the request from one y fails due",
    "start": "232000",
    "end": "234720"
  },
  {
    "text": "to a 5 x x error",
    "start": "234720",
    "end": "236799"
  },
  {
    "text": "or if it times out that is after four",
    "start": "236799",
    "end": "238959"
  },
  {
    "text": "seconds onward is going to consider a",
    "start": "238959",
    "end": "241360"
  },
  {
    "text": "particular upstream as unhealthy",
    "start": "241360",
    "end": "244959"
  },
  {
    "text": "the next option here is passive health",
    "start": "246560",
    "end": "248720"
  },
  {
    "text": "checks which is also known as outlier",
    "start": "248720",
    "end": "250799"
  },
  {
    "text": "detection",
    "start": "250799",
    "end": "252239"
  },
  {
    "text": "in this case onward doesn't really have",
    "start": "252239",
    "end": "254400"
  },
  {
    "text": "to make extra calls to these upstream",
    "start": "254400",
    "end": "256639"
  },
  {
    "text": "services",
    "start": "256639",
    "end": "257680"
  },
  {
    "text": "to figure out if they are healthy or not",
    "start": "257680",
    "end": "260239"
  },
  {
    "text": "it simply relies on regular data plane",
    "start": "260239",
    "end": "262240"
  },
  {
    "text": "traffic to figure out if upstream",
    "start": "262240",
    "end": "264320"
  },
  {
    "text": "services are healthy",
    "start": "264320",
    "end": "266479"
  },
  {
    "text": "and it does that by inspecting",
    "start": "266479",
    "end": "268639"
  },
  {
    "text": "properties of request response such as",
    "start": "268639",
    "end": "271199"
  },
  {
    "text": "response codes",
    "start": "271199",
    "end": "272560"
  },
  {
    "text": "latency",
    "start": "272560",
    "end": "273840"
  },
  {
    "text": "or other attributes",
    "start": "273840",
    "end": "276800"
  },
  {
    "text": "on the right side you see example",
    "start": "277280",
    "end": "278880"
  },
  {
    "text": "configurations",
    "start": "278880",
    "end": "280320"
  },
  {
    "text": "the first one says that onward should",
    "start": "280320",
    "end": "282320"
  },
  {
    "text": "consider a host unhealthy",
    "start": "282320",
    "end": "284800"
  },
  {
    "text": "if it returns",
    "start": "284800",
    "end": "286160"
  },
  {
    "text": "20 consecutive 5xx responses",
    "start": "286160",
    "end": "290160"
  },
  {
    "text": "onward would then eject that host from",
    "start": "290160",
    "end": "292479"
  },
  {
    "text": "the healthy pool of hosts",
    "start": "292479",
    "end": "294479"
  },
  {
    "text": "for two minutes",
    "start": "294479",
    "end": "297280"
  },
  {
    "text": "the second configuration is used for",
    "start": "297280",
    "end": "299199"
  },
  {
    "text": "detecting timeout or connection issues",
    "start": "299199",
    "end": "302080"
  },
  {
    "text": "that is going to consider a link to a",
    "start": "302080",
    "end": "304800"
  },
  {
    "text": "service unhealthy",
    "start": "304800",
    "end": "306400"
  },
  {
    "text": "if there are consecutive five locally",
    "start": "306400",
    "end": "308960"
  },
  {
    "text": "originating errors",
    "start": "308960",
    "end": "311840"
  },
  {
    "text": "the primary difference between active",
    "start": "311840",
    "end": "313600"
  },
  {
    "text": "health checks and passive health checks",
    "start": "313600",
    "end": "315759"
  },
  {
    "text": "is that",
    "start": "315759",
    "end": "316720"
  },
  {
    "text": "active health checks is where you need",
    "start": "316720",
    "end": "318560"
  },
  {
    "text": "to configure onward to make extra calls",
    "start": "318560",
    "end": "321520"
  },
  {
    "text": "along with regular data plane traffic",
    "start": "321520",
    "end": "324320"
  },
  {
    "text": "but in passive health checks envoy",
    "start": "324320",
    "end": "326080"
  },
  {
    "text": "doesn't use extra network bandwidths to",
    "start": "326080",
    "end": "328479"
  },
  {
    "text": "figure out if app stream is healthy or",
    "start": "328479",
    "end": "330560"
  },
  {
    "text": "not",
    "start": "330560",
    "end": "332800"
  },
  {
    "text": "let's now look at the final option which",
    "start": "334560",
    "end": "336560"
  },
  {
    "text": "is externally sourced health",
    "start": "336560",
    "end": "339360"
  },
  {
    "text": "in this case onward doesn't really use",
    "start": "339360",
    "end": "342000"
  },
  {
    "text": "any traffic",
    "start": "342000",
    "end": "343600"
  },
  {
    "text": "between itself and the service to figure",
    "start": "343600",
    "end": "346000"
  },
  {
    "text": "out the status of these upstream",
    "start": "346000",
    "end": "347600"
  },
  {
    "text": "services",
    "start": "347600",
    "end": "349520"
  },
  {
    "text": "onward instead relies on the xts server",
    "start": "349520",
    "end": "352800"
  },
  {
    "text": "to inform it about the status of each of",
    "start": "352800",
    "end": "355280"
  },
  {
    "text": "these upstream services",
    "start": "355280",
    "end": "358319"
  },
  {
    "text": "there is an external health checker",
    "start": "358319",
    "end": "359919"
  },
  {
    "text": "component",
    "start": "359919",
    "end": "361120"
  },
  {
    "text": "which knows the exact status of each of",
    "start": "361120",
    "end": "363039"
  },
  {
    "text": "these upstream services",
    "start": "363039",
    "end": "364800"
  },
  {
    "text": "and it feeds this information to the xts",
    "start": "364800",
    "end": "367600"
  },
  {
    "text": "server",
    "start": "367600",
    "end": "368639"
  },
  {
    "text": "and then envoy using the eds mechanism",
    "start": "368639",
    "end": "371680"
  },
  {
    "text": "that is the endpoint discovery service",
    "start": "371680",
    "end": "373440"
  },
  {
    "text": "mechanism",
    "start": "373440",
    "end": "374880"
  },
  {
    "text": "figures out if a given endpoint is",
    "start": "374880",
    "end": "377120"
  },
  {
    "text": "healthy or not",
    "start": "377120",
    "end": "378880"
  },
  {
    "text": "in this case we have marked the first",
    "start": "378880",
    "end": "381360"
  },
  {
    "text": "upstream as healthy",
    "start": "381360",
    "end": "383440"
  },
  {
    "text": "the second one as unhealthy",
    "start": "383440",
    "end": "385600"
  },
  {
    "text": "and the third instance as draining",
    "start": "385600",
    "end": "388800"
  },
  {
    "text": "onward can therefore route to the first",
    "start": "388800",
    "end": "391280"
  },
  {
    "text": "healthy instance and it would refrain",
    "start": "391280",
    "end": "393600"
  },
  {
    "text": "from routing to the second or the third",
    "start": "393600",
    "end": "396160"
  },
  {
    "text": "instance because they are unhealthy or",
    "start": "396160",
    "end": "398080"
  },
  {
    "text": "draining",
    "start": "398080",
    "end": "400478"
  },
  {
    "start": "402000",
    "end": "570000"
  },
  {
    "text": "let's now look at how we do headsets at",
    "start": "402560",
    "end": "404639"
  },
  {
    "text": "stripe",
    "start": "404639",
    "end": "405600"
  },
  {
    "text": "and for that i hand it over to john",
    "start": "405600",
    "end": "409280"
  },
  {
    "text": "thanks vanilla let's jump into health",
    "start": "409280",
    "end": "411280"
  },
  {
    "text": "checking at strike",
    "start": "411280",
    "end": "413680"
  },
  {
    "text": "so we do active health checking by envoy",
    "start": "413680",
    "end": "416479"
  },
  {
    "text": "we do",
    "start": "416479",
    "end": "418720"
  },
  {
    "text": "health checking setup is a little bit",
    "start": "418720",
    "end": "419759"
  },
  {
    "text": "different than the default",
    "start": "419759",
    "end": "421360"
  },
  {
    "text": "active health checks",
    "start": "421360",
    "end": "422880"
  },
  {
    "text": "we used cached values that are proxy via",
    "start": "422880",
    "end": "425120"
  },
  {
    "text": "an internal cluster this means that we",
    "start": "425120",
    "end": "426720"
  },
  {
    "text": "have a cluster configured on the server",
    "start": "426720",
    "end": "429199"
  },
  {
    "text": "side envoy that health checks",
    "start": "429199",
    "end": "431680"
  },
  {
    "text": "the local application",
    "start": "431680",
    "end": "434080"
  },
  {
    "text": "on a fairly frequent interval um and",
    "start": "434080",
    "end": "436400"
  },
  {
    "text": "then we have a standardized health",
    "start": "436400",
    "end": "438400"
  },
  {
    "text": "check-in point that envoy exposes where",
    "start": "438400",
    "end": "440880"
  },
  {
    "text": "we return the health size of that",
    "start": "440880",
    "end": "443120"
  },
  {
    "text": "cluster meaning that we never actually",
    "start": "443120",
    "end": "445280"
  },
  {
    "text": "pass through",
    "start": "445280",
    "end": "446479"
  },
  {
    "text": "any traffic to our backends for health",
    "start": "446479",
    "end": "448319"
  },
  {
    "text": "checking it's all handled within envoy",
    "start": "448319",
    "end": "451599"
  },
  {
    "text": "um our health checks also aggregate host",
    "start": "451599",
    "end": "454080"
  },
  {
    "text": "health with service health uh so that",
    "start": "454080",
    "end": "456400"
  },
  {
    "text": "local cluster reforms health checks to",
    "start": "456400",
    "end": "458800"
  },
  {
    "text": "the local back end but then we also have",
    "start": "458800",
    "end": "461360"
  },
  {
    "text": "kind of a different set of side cars and",
    "start": "461360",
    "end": "463680"
  },
  {
    "text": "processes that determine if a server is",
    "start": "463680",
    "end": "465759"
  },
  {
    "text": "healthy um",
    "start": "465759",
    "end": "467520"
  },
  {
    "text": "and so our health checks will also look",
    "start": "467520",
    "end": "470000"
  },
  {
    "text": "at this value and decide whether we",
    "start": "470000",
    "end": "471599"
  },
  {
    "text": "should be healthy or not this is useful",
    "start": "471599",
    "end": "473840"
  },
  {
    "text": "for things like lifespan management",
    "start": "473840",
    "end": "475919"
  },
  {
    "text": "where we need to like gracefully shut",
    "start": "475919",
    "end": "477120"
  },
  {
    "text": "down hosts or if we're an incident we",
    "start": "477120",
    "end": "479039"
  },
  {
    "text": "can kind of just turn off like",
    "start": "479039",
    "end": "480240"
  },
  {
    "text": "everything to a host and our service",
    "start": "480240",
    "end": "481919"
  },
  {
    "text": "mesh is kind of integrated into these",
    "start": "481919",
    "end": "483360"
  },
  {
    "text": "systems",
    "start": "483360",
    "end": "485440"
  },
  {
    "text": "uh we also implement kind of local",
    "start": "485440",
    "end": "487199"
  },
  {
    "text": "active training so if we detect the host",
    "start": "487199",
    "end": "490560"
  },
  {
    "text": "becomes unhealthy um then we can kind of",
    "start": "490560",
    "end": "493440"
  },
  {
    "text": "set some flexible envoy to proactively",
    "start": "493440",
    "end": "495680"
  },
  {
    "text": "train connections um and then fail",
    "start": "495680",
    "end": "498000"
  },
  {
    "text": "health checks",
    "start": "498000",
    "end": "500000"
  },
  {
    "text": "historically this has worked really well",
    "start": "500000",
    "end": "502080"
  },
  {
    "text": "for strength we have some low volume",
    "start": "502080",
    "end": "504720"
  },
  {
    "text": "latency sensitive connections so you can",
    "start": "504720",
    "end": "506800"
  },
  {
    "text": "think of like some",
    "start": "506800",
    "end": "508960"
  },
  {
    "text": "cross region you know maybe uh one data",
    "start": "508960",
    "end": "512159"
  },
  {
    "text": "center in us another data center in",
    "start": "512159",
    "end": "514560"
  },
  {
    "text": "europe or asia",
    "start": "514560",
    "end": "516800"
  },
  {
    "text": "and",
    "start": "516800",
    "end": "518399"
  },
  {
    "text": "for regulatory reasons we might have to",
    "start": "518399",
    "end": "521120"
  },
  {
    "text": "locate some of our data processing",
    "start": "521120",
    "end": "523039"
  },
  {
    "text": "within those regions but then it may",
    "start": "523039",
    "end": "525200"
  },
  {
    "text": "periodically request something back from",
    "start": "525200",
    "end": "527760"
  },
  {
    "text": "a us data center",
    "start": "527760",
    "end": "529839"
  },
  {
    "text": "these connections are very lazy",
    "start": "529839",
    "end": "531600"
  },
  {
    "text": "sensitive because the cost is very high",
    "start": "531600",
    "end": "534320"
  },
  {
    "text": "and relatively low volume so",
    "start": "534320",
    "end": "536320"
  },
  {
    "text": "having active health checking means that",
    "start": "536320",
    "end": "538880"
  },
  {
    "text": "we don't have to rely",
    "start": "538880",
    "end": "540880"
  },
  {
    "text": "a ton on retries we generally can uh",
    "start": "540880",
    "end": "544959"
  },
  {
    "text": "land on that on a healthy host because",
    "start": "544959",
    "end": "546800"
  },
  {
    "text": "of back of health checks um and also we",
    "start": "546800",
    "end": "549040"
  },
  {
    "text": "have traffic shifting controls we think",
    "start": "549040",
    "end": "550880"
  },
  {
    "text": "blue green deployments or things like",
    "start": "550880",
    "end": "552399"
  },
  {
    "text": "things of that nature",
    "start": "552399",
    "end": "554080"
  },
  {
    "text": "hosts go from",
    "start": "554080",
    "end": "555060"
  },
  {
    "text": "[Music]",
    "start": "555060",
    "end": "556240"
  },
  {
    "text": "none or very little traffic to high",
    "start": "556240",
    "end": "557839"
  },
  {
    "text": "amounts of traffic a very short period",
    "start": "557839",
    "end": "559120"
  },
  {
    "text": "of time",
    "start": "559120",
    "end": "560080"
  },
  {
    "text": "having active health checking ensures",
    "start": "560080",
    "end": "561600"
  },
  {
    "text": "that when we switch over we don't see a",
    "start": "561600",
    "end": "563040"
  },
  {
    "text": "burst of failures that may be associated",
    "start": "563040",
    "end": "565519"
  },
  {
    "text": "with if we have only relied on passive",
    "start": "565519",
    "end": "567680"
  },
  {
    "text": "health checking for example",
    "start": "567680",
    "end": "570640"
  },
  {
    "start": "570000",
    "end": "628000"
  },
  {
    "text": "uh so that's all i'm going to say about",
    "start": "570880",
    "end": "572160"
  },
  {
    "text": "stripes health checking",
    "start": "572160",
    "end": "573920"
  },
  {
    "text": "but i do want to talk about quite a bit",
    "start": "573920",
    "end": "575680"
  },
  {
    "text": "about problems that we've kind of seen",
    "start": "575680",
    "end": "577440"
  },
  {
    "text": "at scale and some some solutions you",
    "start": "577440",
    "end": "580080"
  },
  {
    "text": "might consider",
    "start": "580080",
    "end": "581360"
  },
  {
    "text": "so an overview of the problems uh slow",
    "start": "581360",
    "end": "583680"
  },
  {
    "text": "times detection right uh this is",
    "start": "583680",
    "end": "585440"
  },
  {
    "text": "problematic for high volume high volume",
    "start": "585440",
    "end": "587279"
  },
  {
    "text": "connections so connections where there's",
    "start": "587279",
    "end": "588880"
  },
  {
    "text": "a lot of traffic flowing if your health",
    "start": "588880",
    "end": "590480"
  },
  {
    "text": "check interval is is fairly wide",
    "start": "590480",
    "end": "593519"
  },
  {
    "text": "then there's a decent amount of time",
    "start": "593519",
    "end": "595760"
  },
  {
    "text": "where failures can happen before you",
    "start": "595760",
    "end": "597760"
  },
  {
    "text": "react",
    "start": "597760",
    "end": "600000"
  },
  {
    "text": "uh high health check volume right so you",
    "start": "600000",
    "end": "602399"
  },
  {
    "text": "have these like shared foundational",
    "start": "602399",
    "end": "603600"
  },
  {
    "text": "services that have a ton of downstream",
    "start": "603600",
    "end": "605279"
  },
  {
    "text": "they're all doing all this health checks",
    "start": "605279",
    "end": "606640"
  },
  {
    "text": "upstream um and that can that can cause",
    "start": "606640",
    "end": "609760"
  },
  {
    "text": "a lot of problems and the active pros",
    "start": "609760",
    "end": "611200"
  },
  {
    "text": "themselves because of this volume can",
    "start": "611200",
    "end": "613120"
  },
  {
    "text": "kind of add significant overhead",
    "start": "613120",
    "end": "615519"
  },
  {
    "text": "and lastly network costs right health",
    "start": "615519",
    "end": "618480"
  },
  {
    "text": "checks kind of traverse all the paths",
    "start": "618480",
    "end": "620480"
  },
  {
    "text": "regardless of all the effort and work",
    "start": "620480",
    "end": "622079"
  },
  {
    "text": "we've put in to optimizing our our",
    "start": "622079",
    "end": "625040"
  },
  {
    "text": "network efficiency and costs",
    "start": "625040",
    "end": "628160"
  },
  {
    "start": "628000",
    "end": "775000"
  },
  {
    "text": "okay so let's talk about uh slow time",
    "start": "628160",
    "end": "630399"
  },
  {
    "text": "detection so let's start with an example",
    "start": "630399",
    "end": "633120"
  },
  {
    "text": "we're going to have active health check",
    "start": "633120",
    "end": "634560"
  },
  {
    "text": "set to an interval of five seconds",
    "start": "634560",
    "end": "636800"
  },
  {
    "text": "meaning that our downstream is pulling",
    "start": "636800",
    "end": "638399"
  },
  {
    "text": "the upstream for itself every five",
    "start": "638399",
    "end": "639839"
  },
  {
    "text": "seconds",
    "start": "639839",
    "end": "640800"
  },
  {
    "text": "uh network link processes twenty five",
    "start": "640800",
    "end": "642640"
  },
  {
    "text": "thousand qps so by network link i mean a",
    "start": "642640",
    "end": "644880"
  },
  {
    "text": "single downstream upstream pair right",
    "start": "644880",
    "end": "646959"
  },
  {
    "text": "sending 25 000 requests a second",
    "start": "646959",
    "end": "649680"
  },
  {
    "text": "so the potential impact of that server",
    "start": "649680",
    "end": "651920"
  },
  {
    "text": "becoming unhealthy uh is",
    "start": "651920",
    "end": "654880"
  },
  {
    "text": "essentially the duration",
    "start": "654880",
    "end": "656640"
  },
  {
    "text": "number of seconds times ups right so in",
    "start": "656640",
    "end": "658880"
  },
  {
    "text": "this case we might see a potentially 125",
    "start": "658880",
    "end": "661920"
  },
  {
    "text": "000 failed requests uh solely using",
    "start": "661920",
    "end": "664079"
  },
  {
    "text": "active health checking before realizing",
    "start": "664079",
    "end": "666079"
  },
  {
    "text": "uh there's an issue",
    "start": "666079",
    "end": "667920"
  },
  {
    "text": "and that that is a fairly large impact",
    "start": "667920",
    "end": "671839"
  },
  {
    "text": "uh so what can we do to mitigate this uh",
    "start": "671839",
    "end": "674079"
  },
  {
    "text": "well one so we can reduce the active",
    "start": "674079",
    "end": "675519"
  },
  {
    "text": "health check interval right instead of",
    "start": "675519",
    "end": "677440"
  },
  {
    "text": "five seconds maybe it's one second um",
    "start": "677440",
    "end": "680399"
  },
  {
    "text": "that reduces our impact from 125 000 to",
    "start": "680399",
    "end": "682880"
  },
  {
    "text": "25 000. it's not great but you know it's",
    "start": "682880",
    "end": "686480"
  },
  {
    "text": "a slight improvement uh the drawback to",
    "start": "686480",
    "end": "689040"
  },
  {
    "text": "this is that there's additional steady",
    "start": "689040",
    "end": "690320"
  },
  {
    "text": "state costs right even when there's not",
    "start": "690320",
    "end": "692320"
  },
  {
    "text": "traffic flowing you're sending active",
    "start": "692320",
    "end": "694320"
  },
  {
    "text": "health checks that new interval um that",
    "start": "694320",
    "end": "697360"
  },
  {
    "text": "may cause you know more more load on the",
    "start": "697360",
    "end": "699839"
  },
  {
    "text": "server",
    "start": "699839",
    "end": "700720"
  },
  {
    "text": "and there's only so far we can drive",
    "start": "700720",
    "end": "702320"
  },
  {
    "text": "this down",
    "start": "702320",
    "end": "703839"
  },
  {
    "text": "to",
    "start": "703839",
    "end": "704640"
  },
  {
    "text": "to try to mitigate that potential impact",
    "start": "704640",
    "end": "706959"
  },
  {
    "text": "amount",
    "start": "706959",
    "end": "708480"
  },
  {
    "text": "a better strategy is to implement",
    "start": "708480",
    "end": "710480"
  },
  {
    "text": "passive health change right or an envoy",
    "start": "710480",
    "end": "712399"
  },
  {
    "text": "outlier detection same thing",
    "start": "712399",
    "end": "715279"
  },
  {
    "text": "so this is faster than active health",
    "start": "715279",
    "end": "716720"
  },
  {
    "text": "checking right because as we saw earlier",
    "start": "716720",
    "end": "718320"
  },
  {
    "text": "we can look at you know consecutive 5x",
    "start": "718320",
    "end": "721040"
  },
  {
    "text": "and maybe we'll fail after 50 requests",
    "start": "721040",
    "end": "723200"
  },
  {
    "text": "right that can happen very very fast",
    "start": "723200",
    "end": "725519"
  },
  {
    "text": "uh it has lower overhead compared to",
    "start": "725519",
    "end": "727040"
  },
  {
    "text": "acapella checking right meaning that we",
    "start": "727040",
    "end": "728959"
  },
  {
    "text": "only pay the cost when there's actual",
    "start": "728959",
    "end": "731200"
  },
  {
    "text": "traffic flowing uh from a downstream to",
    "start": "731200",
    "end": "733440"
  },
  {
    "text": "an upstream",
    "start": "733440",
    "end": "735120"
  },
  {
    "text": "um and if we want a holistic setup we",
    "start": "735120",
    "end": "737680"
  },
  {
    "text": "can still configure this with active",
    "start": "737680",
    "end": "738880"
  },
  {
    "text": "health checking right if we still want",
    "start": "738880",
    "end": "740079"
  },
  {
    "text": "to satisfy that traffic shifting",
    "start": "740079",
    "end": "741920"
  },
  {
    "text": "scenario that we talked about earlier or",
    "start": "741920",
    "end": "743920"
  },
  {
    "text": "those",
    "start": "743920",
    "end": "745040"
  },
  {
    "text": "low volume latency sensitive links we",
    "start": "745040",
    "end": "747200"
  },
  {
    "text": "can still have acapella checking on top",
    "start": "747200",
    "end": "749040"
  },
  {
    "text": "of it",
    "start": "749040",
    "end": "750079"
  },
  {
    "text": "to provide more of a holistic solution",
    "start": "750079",
    "end": "753279"
  },
  {
    "text": "okay so let's talk about high health",
    "start": "753279",
    "end": "754880"
  },
  {
    "text": "check volume",
    "start": "754880",
    "end": "756399"
  },
  {
    "text": "you know typical diagram you see with a",
    "start": "756399",
    "end": "758800"
  },
  {
    "text": "hacked health check as an envoy checks a",
    "start": "758800",
    "end": "760560"
  },
  {
    "text": "single upstream but what happens if that",
    "start": "760560",
    "end": "762880"
  },
  {
    "text": "upstream is kind of a core or",
    "start": "762880",
    "end": "765120"
  },
  {
    "text": "foundational service in your platform",
    "start": "765120",
    "end": "767440"
  },
  {
    "text": "in that case it likely has a lot of",
    "start": "767440",
    "end": "769680"
  },
  {
    "text": "downstream it's kind of all performing",
    "start": "769680",
    "end": "772079"
  },
  {
    "text": "uh active health checking on that single",
    "start": "772079",
    "end": "773839"
  },
  {
    "text": "upstream host",
    "start": "773839",
    "end": "775920"
  },
  {
    "start": "775000",
    "end": "873000"
  },
  {
    "text": "so what are some issues we've",
    "start": "775920",
    "end": "777360"
  },
  {
    "text": "encountered uh well first is like high",
    "start": "777360",
    "end": "779680"
  },
  {
    "text": "back end load right i mean think about",
    "start": "779680",
    "end": "781839"
  },
  {
    "text": "your your back an application actually",
    "start": "781839",
    "end": "783760"
  },
  {
    "text": "serving all these health check requests",
    "start": "783760",
    "end": "786399"
  },
  {
    "text": "um and this this load can impact uh",
    "start": "786399",
    "end": "788959"
  },
  {
    "text": "normal traffic as well if your backend",
    "start": "788959",
    "end": "790800"
  },
  {
    "text": "application becomes overloaded",
    "start": "790800",
    "end": "793200"
  },
  {
    "text": "uh high connection load right we we have",
    "start": "793200",
    "end": "795360"
  },
  {
    "text": "to have a connection in order to make an",
    "start": "795360",
    "end": "797040"
  },
  {
    "text": "active health check and if we have a lot",
    "start": "797040",
    "end": "798959"
  },
  {
    "text": "of down streams like in that diagram uh",
    "start": "798959",
    "end": "801120"
  },
  {
    "text": "checking a single upstream host you're",
    "start": "801120",
    "end": "802959"
  },
  {
    "text": "just gonna have a lot of connections",
    "start": "802959",
    "end": "804480"
  },
  {
    "text": "dedicated health checking um in fact",
    "start": "804480",
    "end": "806480"
  },
  {
    "text": "these health check load could easily",
    "start": "806480",
    "end": "808240"
  },
  {
    "text": "exceed your actual traffic load in terms",
    "start": "808240",
    "end": "810720"
  },
  {
    "text": "of the connections created to service",
    "start": "810720",
    "end": "812639"
  },
  {
    "text": "that",
    "start": "812639",
    "end": "814320"
  },
  {
    "text": "high cpu load right so",
    "start": "814320",
    "end": "816720"
  },
  {
    "text": "uh",
    "start": "816720",
    "end": "817600"
  },
  {
    "text": "both the application and envoy still",
    "start": "817600",
    "end": "819760"
  },
  {
    "text": "have to do work uh every time they make",
    "start": "819760",
    "end": "822160"
  },
  {
    "text": "a health check request",
    "start": "822160",
    "end": "823839"
  },
  {
    "text": "uh so anecdotally what are some things",
    "start": "823839",
    "end": "826320"
  },
  {
    "text": "we've seen",
    "start": "826320",
    "end": "827519"
  },
  {
    "text": "well we've seen a host burning two plus",
    "start": "827519",
    "end": "830639"
  },
  {
    "text": "cpu cores like exclusively to serving",
    "start": "830639",
    "end": "833040"
  },
  {
    "text": "health check traffic or one of these",
    "start": "833040",
    "end": "834639"
  },
  {
    "text": "kind of like central services that had a",
    "start": "834639",
    "end": "836639"
  },
  {
    "text": "lot of downstream health checking it",
    "start": "836639",
    "end": "839199"
  },
  {
    "text": "we've had to deploy larger instance",
    "start": "839199",
    "end": "840560"
  },
  {
    "text": "types just to account for the overhead",
    "start": "840560",
    "end": "843120"
  },
  {
    "text": "of health check volume",
    "start": "843120",
    "end": "845040"
  },
  {
    "text": "um and we've also in the past observed a",
    "start": "845040",
    "end": "846880"
  },
  {
    "text": "general slogan of envoy right even with",
    "start": "846880",
    "end": "850160"
  },
  {
    "text": "implemented caching and just hitting",
    "start": "850160",
    "end": "852399"
  },
  {
    "text": "those cached endpoints onboard may take",
    "start": "852399",
    "end": "854160"
  },
  {
    "text": "30 plus seconds to respond simply",
    "start": "854160",
    "end": "856399"
  },
  {
    "text": "because it was so overwhelmed with the",
    "start": "856399",
    "end": "858800"
  },
  {
    "text": "amount of health check traffic",
    "start": "858800",
    "end": "861040"
  },
  {
    "text": "we've also seen hosts kind of reaching",
    "start": "861040",
    "end": "862720"
  },
  {
    "text": "their file descriptor limits",
    "start": "862720",
    "end": "864480"
  },
  {
    "text": "because of the number of connections",
    "start": "864480",
    "end": "865920"
  },
  {
    "text": "created for health checking i mean this",
    "start": "865920",
    "end": "867440"
  },
  {
    "text": "has a real impact on live traffic as",
    "start": "867440",
    "end": "869279"
  },
  {
    "text": "well a bunch of other functions of the",
    "start": "869279",
    "end": "871360"
  },
  {
    "text": "host",
    "start": "871360",
    "end": "873519"
  },
  {
    "start": "873000",
    "end": "1108000"
  },
  {
    "text": "all right so mitigations what can we do",
    "start": "873519",
    "end": "875519"
  },
  {
    "text": "to make this better",
    "start": "875519",
    "end": "876959"
  },
  {
    "text": "uh one we can we can cache the back end",
    "start": "876959",
    "end": "879279"
  },
  {
    "text": "health",
    "start": "879279",
    "end": "881279"
  },
  {
    "text": "there's two types of caching here one is",
    "start": "881279",
    "end": "883279"
  },
  {
    "text": "the traditional type of caching where",
    "start": "883279",
    "end": "884800"
  },
  {
    "text": "the response from the the back end",
    "start": "884800",
    "end": "886560"
  },
  {
    "text": "health check service",
    "start": "886560",
    "end": "888399"
  },
  {
    "text": "is cached for some duration of time",
    "start": "888399",
    "end": "890480"
  },
  {
    "text": "and then once it expires",
    "start": "890480",
    "end": "892800"
  },
  {
    "text": "active health checks are passed through",
    "start": "892800",
    "end": "894079"
  },
  {
    "text": "to the application again and we catch",
    "start": "894079",
    "end": "896079"
  },
  {
    "text": "that value again this reduces the load",
    "start": "896079",
    "end": "898880"
  },
  {
    "text": "on the backend applications but we still",
    "start": "898880",
    "end": "901120"
  },
  {
    "text": "may see spikes of activity",
    "start": "901120",
    "end": "903680"
  },
  {
    "text": "as the cache expires",
    "start": "903680",
    "end": "906000"
  },
  {
    "text": "and then there's the",
    "start": "906000",
    "end": "907279"
  },
  {
    "text": "kind of internal cluster caching which",
    "start": "907279",
    "end": "908800"
  },
  {
    "text": "kind of what i described earlier that",
    "start": "908800",
    "end": "910160"
  },
  {
    "text": "stripe does um which",
    "start": "910160",
    "end": "913519"
  },
  {
    "text": "never which has better semantics and it",
    "start": "913519",
    "end": "915279"
  },
  {
    "text": "never kind of overwhelms the back end",
    "start": "915279",
    "end": "916880"
  },
  {
    "text": "service and you know the traffic doesn't",
    "start": "916880",
    "end": "919040"
  },
  {
    "text": "spike as the cash expires",
    "start": "919040",
    "end": "922240"
  },
  {
    "text": "uh one thing we can do is we can reduce",
    "start": "922240",
    "end": "923839"
  },
  {
    "text": "the health check interval right um",
    "start": "923839",
    "end": "927120"
  },
  {
    "text": "so maybe instead of five seconds we make",
    "start": "927120",
    "end": "929360"
  },
  {
    "text": "it make it ten seconds right um",
    "start": "929360",
    "end": "932320"
  },
  {
    "text": "that that reduces our load because you",
    "start": "932320",
    "end": "934639"
  },
  {
    "text": "know just reduce the number of requests",
    "start": "934639",
    "end": "935920"
  },
  {
    "text": "that we send uh the caveats here are",
    "start": "935920",
    "end": "938240"
  },
  {
    "text": "that this this may violate your business",
    "start": "938240",
    "end": "940079"
  },
  {
    "text": "constraints right maybe your traffic",
    "start": "940079",
    "end": "941920"
  },
  {
    "text": "shifting controls or your deployment",
    "start": "941920",
    "end": "943519"
  },
  {
    "text": "systems are relying on that interval",
    "start": "943519",
    "end": "945759"
  },
  {
    "text": "value uh for for how they operate um",
    "start": "945759",
    "end": "950079"
  },
  {
    "text": "and you know as we saw in the previous",
    "start": "950079",
    "end": "952399"
  },
  {
    "text": "example maybe it competes with faster",
    "start": "952399",
    "end": "954800"
  },
  {
    "text": "time to detection",
    "start": "954800",
    "end": "957279"
  },
  {
    "text": "reduce reachability note there's no",
    "start": "957279",
    "end": "959279"
  },
  {
    "text": "asterisk here there is no there's no",
    "start": "959279",
    "end": "961120"
  },
  {
    "text": "drawback to this this is essentially",
    "start": "961120",
    "end": "962399"
  },
  {
    "text": "meaning that you should be looking at",
    "start": "962399",
    "end": "963759"
  },
  {
    "text": "your surface graph and the active",
    "start": "963759",
    "end": "965600"
  },
  {
    "text": "traffic that is flowing across it and",
    "start": "965600",
    "end": "968079"
  },
  {
    "text": "for links that that are maybe defined in",
    "start": "968079",
    "end": "970320"
  },
  {
    "text": "the reachability graph but aren't being",
    "start": "970320",
    "end": "971759"
  },
  {
    "text": "used you should prune those there's",
    "start": "971759",
    "end": "973680"
  },
  {
    "text": "there's really no drawback to making",
    "start": "973680",
    "end": "975680"
  },
  {
    "text": "sure your reachability graph is properly",
    "start": "975680",
    "end": "977759"
  },
  {
    "text": "print uh control plane subsets so this",
    "start": "977759",
    "end": "980480"
  },
  {
    "text": "is the idea that the control plane",
    "start": "980480",
    "end": "982399"
  },
  {
    "text": "delivers a subsetted view",
    "start": "982399",
    "end": "985120"
  },
  {
    "text": "of your uh your service graph to each",
    "start": "985120",
    "end": "987600"
  },
  {
    "text": "envoy uh artificially shrinking the size",
    "start": "987600",
    "end": "989920"
  },
  {
    "text": "of your fleet um to reduce the health",
    "start": "989920",
    "end": "992320"
  },
  {
    "text": "check volume that's being created right",
    "start": "992320",
    "end": "993680"
  },
  {
    "text": "each envoy node will then help check",
    "start": "993680",
    "end": "995920"
  },
  {
    "text": "less upstreams because they simply don't",
    "start": "995920",
    "end": "997440"
  },
  {
    "text": "know about them",
    "start": "997440",
    "end": "998959"
  },
  {
    "text": "this however is very difficult to",
    "start": "998959",
    "end": "1000560"
  },
  {
    "text": "correct for errors and having the full",
    "start": "1000560",
    "end": "1003279"
  },
  {
    "text": "set of nodes in the reachability graph",
    "start": "1003279",
    "end": "1005440"
  },
  {
    "text": "and envoy is really important for",
    "start": "1005440",
    "end": "1007279"
  },
  {
    "text": "reliability and error recovery",
    "start": "1007279",
    "end": "1010720"
  },
  {
    "text": "uh and lastly we could move to a",
    "start": "1010720",
    "end": "1012000"
  },
  {
    "text": "centralized health check system right",
    "start": "1012000",
    "end": "1014079"
  },
  {
    "text": "this is most interesting because it's",
    "start": "1014079",
    "end": "1016079"
  },
  {
    "text": "the most",
    "start": "1016079",
    "end": "1017839"
  },
  {
    "text": "flexible",
    "start": "1017839",
    "end": "1019040"
  },
  {
    "text": "we can account for for volume we can",
    "start": "1019040",
    "end": "1021759"
  },
  {
    "text": "account for the interval right so if we",
    "start": "1021759",
    "end": "1023519"
  },
  {
    "text": "have centralized health check nodes",
    "start": "1023519",
    "end": "1025839"
  },
  {
    "text": "we know that when we control the number",
    "start": "1025839",
    "end": "1028000"
  },
  {
    "text": "of connections or the number of nodes",
    "start": "1028000",
    "end": "1029600"
  },
  {
    "text": "that are performing those active health",
    "start": "1029600",
    "end": "1030880"
  },
  {
    "text": "checks uh because of this we're just",
    "start": "1030880",
    "end": "1033280"
  },
  {
    "text": "opening a lot less connections right",
    "start": "1033280",
    "end": "1035280"
  },
  {
    "text": "to any individual service and we could",
    "start": "1035280",
    "end": "1037360"
  },
  {
    "text": "potentially even increase our our",
    "start": "1037360",
    "end": "1039280"
  },
  {
    "text": "interval to be like really small like",
    "start": "1039280",
    "end": "1040798"
  },
  {
    "text": "one second or a half second because we",
    "start": "1040799",
    "end": "1043199"
  },
  {
    "text": "are also controlling uh the volume both",
    "start": "1043199",
    "end": "1045678"
  },
  {
    "text": "of requests and connections uh big",
    "start": "1045679",
    "end": "1048240"
  },
  {
    "text": "asterisks here though because um",
    "start": "1048240",
    "end": "1051039"
  },
  {
    "text": "this is uh",
    "start": "1051039",
    "end": "1053200"
  },
  {
    "text": "you know a lot of work if you're gonna",
    "start": "1053200",
    "end": "1055120"
  },
  {
    "text": "go this route and there are likely a ton",
    "start": "1055120",
    "end": "1057200"
  },
  {
    "text": "of hidden landmines with this approach",
    "start": "1057200",
    "end": "1060240"
  },
  {
    "text": "okay next is nowhere costs um here you",
    "start": "1060240",
    "end": "1062960"
  },
  {
    "text": "can see we have three different services",
    "start": "1062960",
    "end": "1064880"
  },
  {
    "text": "running in three different regions or",
    "start": "1064880",
    "end": "1066559"
  },
  {
    "text": "availability zones",
    "start": "1066559",
    "end": "1068160"
  },
  {
    "text": "and that thick bar kind of represents a",
    "start": "1068160",
    "end": "1070000"
  },
  {
    "text": "cost boundary right and we can see",
    "start": "1070000",
    "end": "1071520"
  },
  {
    "text": "they're doing health checks",
    "start": "1071520",
    "end": "1073200"
  },
  {
    "text": "across these crop across these cost",
    "start": "1073200",
    "end": "1075600"
  },
  {
    "text": "boundaries",
    "start": "1075600",
    "end": "1077679"
  },
  {
    "text": "and you know similarly if we have",
    "start": "1077679",
    "end": "1079600"
  },
  {
    "text": "another data center",
    "start": "1079600",
    "end": "1081280"
  },
  {
    "text": "it's likely doing the exact same thing",
    "start": "1081280",
    "end": "1083280"
  },
  {
    "text": "until checking services across these",
    "start": "1083280",
    "end": "1084799"
  },
  {
    "text": "cost boundaries um and then kind of",
    "start": "1084799",
    "end": "1087200"
  },
  {
    "text": "worst of all is that you're going to be",
    "start": "1087200",
    "end": "1088880"
  },
  {
    "text": "held checking across data centers and",
    "start": "1088880",
    "end": "1090799"
  },
  {
    "text": "this this uh",
    "start": "1090799",
    "end": "1092720"
  },
  {
    "text": "active health check data path really",
    "start": "1092720",
    "end": "1094240"
  },
  {
    "text": "just kind of mirrors your reachability",
    "start": "1094240",
    "end": "1096480"
  },
  {
    "text": "graph right and this can get expensive",
    "start": "1096480",
    "end": "1099280"
  },
  {
    "text": "um and this is also likely you know kind",
    "start": "1099280",
    "end": "1101360"
  },
  {
    "text": "of ignoring any sort of optimization",
    "start": "1101360",
    "end": "1103200"
  },
  {
    "text": "you've done on your typical data path uh",
    "start": "1103200",
    "end": "1105600"
  },
  {
    "text": "either for efficiency or for cost right",
    "start": "1105600",
    "end": "1109200"
  },
  {
    "start": "1108000",
    "end": "1188000"
  },
  {
    "text": "uh so what can we do uh well we can",
    "start": "1109200",
    "end": "1111360"
  },
  {
    "text": "increase the health check interval right",
    "start": "1111360",
    "end": "1112799"
  },
  {
    "text": "instead of going like oh like five",
    "start": "1112799",
    "end": "1114000"
  },
  {
    "text": "seconds ten seconds",
    "start": "1114000",
    "end": "1115600"
  },
  {
    "text": "again this may violate some of your",
    "start": "1115600",
    "end": "1117280"
  },
  {
    "text": "business uh principles or properties um",
    "start": "1117280",
    "end": "1120240"
  },
  {
    "text": "and this may not work for everyone",
    "start": "1120240",
    "end": "1123520"
  },
  {
    "text": "um you can exclusively use passive",
    "start": "1123520",
    "end": "1126000"
  },
  {
    "text": "health checks right so you're not",
    "start": "1126000",
    "end": "1127120"
  },
  {
    "text": "incurring that additional cost and it",
    "start": "1127120",
    "end": "1128799"
  },
  {
    "text": "actually will take advantage of all of",
    "start": "1128799",
    "end": "1130240"
  },
  {
    "text": "your optimizations you've done in terms",
    "start": "1130240",
    "end": "1132160"
  },
  {
    "text": "of efficiency and costs in your network",
    "start": "1132160",
    "end": "1134400"
  },
  {
    "text": "data path",
    "start": "1134400",
    "end": "1135679"
  },
  {
    "text": "you know first right this doesn't work",
    "start": "1135679",
    "end": "1137120"
  },
  {
    "text": "because we still need those active",
    "start": "1137120",
    "end": "1138160"
  },
  {
    "text": "health checks for those traffic shifting",
    "start": "1138160",
    "end": "1140160"
  },
  {
    "text": "primitives and for those kind of low",
    "start": "1140160",
    "end": "1141760"
  },
  {
    "text": "volume uh",
    "start": "1141760",
    "end": "1143360"
  },
  {
    "text": "latency sensitive links right",
    "start": "1143360",
    "end": "1145919"
  },
  {
    "text": "uh again we can reduce the reachability",
    "start": "1145919",
    "end": "1148320"
  },
  {
    "text": "you should do this this is a definite",
    "start": "1148320",
    "end": "1149679"
  },
  {
    "text": "win",
    "start": "1149679",
    "end": "1150400"
  },
  {
    "text": "uh and very few drawbacks here",
    "start": "1150400",
    "end": "1153440"
  },
  {
    "text": "um again we can do control plane subsets",
    "start": "1153440",
    "end": "1155520"
  },
  {
    "text": "right we can reduce the number of edges",
    "start": "1155520",
    "end": "1157120"
  },
  {
    "text": "in the reachability graph",
    "start": "1157120",
    "end": "1158640"
  },
  {
    "text": "and then therefore we can reduce costs",
    "start": "1158640",
    "end": "1160160"
  },
  {
    "text": "again this is still hard to correct for",
    "start": "1160160",
    "end": "1161919"
  },
  {
    "text": "errors",
    "start": "1161919",
    "end": "1163840"
  },
  {
    "text": "and again we can move to centralized",
    "start": "1163840",
    "end": "1165039"
  },
  {
    "text": "health checks and the interesting part",
    "start": "1165039",
    "end": "1166480"
  },
  {
    "text": "of this design is that",
    "start": "1166480",
    "end": "1168160"
  },
  {
    "text": "using a system like this we could",
    "start": "1168160",
    "end": "1169919"
  },
  {
    "text": "optimize for uh locality and putting",
    "start": "1169919",
    "end": "1172559"
  },
  {
    "text": "those those health check nodes local in",
    "start": "1172559",
    "end": "1174720"
  },
  {
    "text": "the region and data center for the items",
    "start": "1174720",
    "end": "1176640"
  },
  {
    "text": "of health checking you can do smart",
    "start": "1176640",
    "end": "1178000"
  },
  {
    "text": "things like sharing discs",
    "start": "1178000",
    "end": "1179679"
  },
  {
    "text": "across those cost boundaries to kind of",
    "start": "1179679",
    "end": "1182160"
  },
  {
    "text": "reduce the the impact",
    "start": "1182160",
    "end": "1185440"
  },
  {
    "text": "um and so what are what are the",
    "start": "1185600",
    "end": "1187200"
  },
  {
    "text": "conclusions we can draw from this",
    "start": "1187200",
    "end": "1189520"
  },
  {
    "start": "1188000",
    "end": "1254000"
  },
  {
    "text": "well",
    "start": "1189520",
    "end": "1190320"
  },
  {
    "text": "first all strategies are going to be",
    "start": "1190320",
    "end": "1191760"
  },
  {
    "text": "context dependent",
    "start": "1191760",
    "end": "1193520"
  },
  {
    "text": "right depending on your business use",
    "start": "1193520",
    "end": "1195360"
  },
  {
    "text": "cases and needs uh",
    "start": "1195360",
    "end": "1197120"
  },
  {
    "text": "the the particular approach you take or",
    "start": "1197120",
    "end": "1198880"
  },
  {
    "text": "their particular combination of",
    "start": "1198880",
    "end": "1200400"
  },
  {
    "text": "approaches you take",
    "start": "1200400",
    "end": "1201760"
  },
  {
    "text": "will really kind of depend on what uh",
    "start": "1201760",
    "end": "1203600"
  },
  {
    "text": "what your outcomes you're trying to",
    "start": "1203600",
    "end": "1204640"
  },
  {
    "text": "drive are",
    "start": "1204640",
    "end": "1206640"
  },
  {
    "text": "another thing take away is just one",
    "start": "1206640",
    "end": "1208240"
  },
  {
    "text": "strategy may not be enough um some sort",
    "start": "1208240",
    "end": "1211360"
  },
  {
    "text": "of active passive health drinking",
    "start": "1211360",
    "end": "1212720"
  },
  {
    "text": "combination is likely the best approach",
    "start": "1212720",
    "end": "1215200"
  },
  {
    "text": "for the most holistic health checking",
    "start": "1215200",
    "end": "1217679"
  },
  {
    "text": "strategy",
    "start": "1217679",
    "end": "1219760"
  },
  {
    "text": "however it's important to keep in mind",
    "start": "1219760",
    "end": "1221280"
  },
  {
    "text": "the data path is never 100 safe",
    "start": "1221280",
    "end": "1224480"
  },
  {
    "text": "retries and hedging will continue to",
    "start": "1224480",
    "end": "1227120"
  },
  {
    "text": "remain relevant and useful tools that",
    "start": "1227120",
    "end": "1228880"
  },
  {
    "text": "you should be using",
    "start": "1228880",
    "end": "1230720"
  },
  {
    "text": "um and lastly let scale drive your",
    "start": "1230720",
    "end": "1233520"
  },
  {
    "text": "design uh don't over optimize",
    "start": "1233520",
    "end": "1236559"
  },
  {
    "text": "early on i think you may be surprised as",
    "start": "1236559",
    "end": "1239520"
  },
  {
    "text": "your organization grows with the use",
    "start": "1239520",
    "end": "1241600"
  },
  {
    "text": "cases that your customers may bring to",
    "start": "1241600",
    "end": "1243520"
  },
  {
    "text": "you",
    "start": "1243520",
    "end": "1244240"
  },
  {
    "text": "yeah",
    "start": "1244240",
    "end": "1245600"
  },
  {
    "text": "uh and yeah thank you for attending the",
    "start": "1245600",
    "end": "1247039"
  },
  {
    "text": "talk today",
    "start": "1247039",
    "end": "1248400"
  },
  {
    "text": "i should mention that stripe is hiring",
    "start": "1248400",
    "end": "1250640"
  },
  {
    "text": "feel free to reach out and now we can",
    "start": "1250640",
    "end": "1252320"
  },
  {
    "text": "open up for q a",
    "start": "1252320",
    "end": "1256000"
  }
]