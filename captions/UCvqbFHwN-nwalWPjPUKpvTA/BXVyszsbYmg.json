[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "hello everyone and thank you for tuning",
    "start": "1040",
    "end": "3040"
  },
  {
    "text": "in",
    "start": "3040",
    "end": "3919"
  },
  {
    "text": "my name is ritesh naik and i'm here to",
    "start": "3919",
    "end": "6319"
  },
  {
    "text": "talk about using container checkpoint",
    "start": "6319",
    "end": "8400"
  },
  {
    "text": "restore in kubernetes to achieve fast",
    "start": "8400",
    "end": "10639"
  },
  {
    "text": "port startup time",
    "start": "10639",
    "end": "13040"
  },
  {
    "text": "we at mathworks have been using",
    "start": "13040",
    "end": "14880"
  },
  {
    "text": "container checkpoint restore at high",
    "start": "14880",
    "end": "16880"
  },
  {
    "text": "scale since 2016.",
    "start": "16880",
    "end": "19359"
  },
  {
    "text": "and in this talk i'll go over how we",
    "start": "19359",
    "end": "21600"
  },
  {
    "text": "incorporated checkpoint restore in",
    "start": "21600",
    "end": "23439"
  },
  {
    "text": "kubernetes to achieve a scalable system",
    "start": "23439",
    "end": "27680"
  },
  {
    "text": "hopefully you can take something away",
    "start": "27680",
    "end": "29359"
  },
  {
    "text": "from the session and apply to your own",
    "start": "29359",
    "end": "31439"
  },
  {
    "text": "environment",
    "start": "31439",
    "end": "33040"
  },
  {
    "text": "on that note before we get started let",
    "start": "33040",
    "end": "35120"
  },
  {
    "text": "me quickly introduce myself",
    "start": "35120",
    "end": "38480"
  },
  {
    "text": "my name is ritesh naik and i'm a senior",
    "start": "39200",
    "end": "41280"
  },
  {
    "text": "software engineer at mathworks",
    "start": "41280",
    "end": "44160"
  },
  {
    "text": "for those who are not familiar with",
    "start": "44160",
    "end": "46000"
  },
  {
    "text": "mathworks mathworks is a leading",
    "start": "46000",
    "end": "47600"
  },
  {
    "text": "developer of mathematical computing",
    "start": "47600",
    "end": "49440"
  },
  {
    "text": "software",
    "start": "49440",
    "end": "50960"
  },
  {
    "text": "engineers scientists and researchers",
    "start": "50960",
    "end": "52800"
  },
  {
    "text": "worldwide rely on its products to",
    "start": "52800",
    "end": "54960"
  },
  {
    "text": "accelerate the pace of discovery",
    "start": "54960",
    "end": "57360"
  },
  {
    "text": "innovation",
    "start": "57360",
    "end": "58480"
  },
  {
    "text": "and development",
    "start": "58480",
    "end": "61280"
  },
  {
    "text": "i've been at mathworks for over five",
    "start": "61359",
    "end": "63199"
  },
  {
    "text": "years working on various areas of",
    "start": "63199",
    "end": "66240"
  },
  {
    "text": "infrastructure and scalability",
    "start": "66240",
    "end": "68479"
  },
  {
    "text": "my team and i have been focusing on",
    "start": "68479",
    "end": "70400"
  },
  {
    "text": "doing things in kubernetes space since",
    "start": "70400",
    "end": "73040"
  },
  {
    "text": "few years",
    "start": "73040",
    "end": "75040"
  },
  {
    "text": "if you'd like to reach out to me after",
    "start": "75040",
    "end": "76479"
  },
  {
    "text": "this talk feel free to ping me on",
    "start": "76479",
    "end": "78880"
  },
  {
    "text": "kubernetes slack or via email",
    "start": "78880",
    "end": "81280"
  },
  {
    "text": "i'm happy to talk about all things",
    "start": "81280",
    "end": "83040"
  },
  {
    "text": "containers kubernetes checkpoint restore",
    "start": "83040",
    "end": "85600"
  },
  {
    "text": "travel or anything for that matter",
    "start": "85600",
    "end": "89600"
  },
  {
    "start": "90000",
    "end": "90000"
  },
  {
    "text": "so in this talk i'll go with the",
    "start": "90560",
    "end": "92320"
  },
  {
    "text": "motivation behind using container",
    "start": "92320",
    "end": "94320"
  },
  {
    "text": "checkpoint restore",
    "start": "94320",
    "end": "95920"
  },
  {
    "text": "quick introduction of checkpoint restore",
    "start": "95920",
    "end": "97759"
  },
  {
    "text": "along with a demo",
    "start": "97759",
    "end": "99439"
  },
  {
    "text": "our solution of using container",
    "start": "99439",
    "end": "101439"
  },
  {
    "text": "checkpoint restoring kubernetes along",
    "start": "101439",
    "end": "103680"
  },
  {
    "text": "with some of the lessons learned best",
    "start": "103680",
    "end": "105520"
  },
  {
    "text": "practices and future enhancements",
    "start": "105520",
    "end": "108640"
  },
  {
    "text": "finally we'll wrap it up with q a at the",
    "start": "108640",
    "end": "110640"
  },
  {
    "text": "end",
    "start": "110640",
    "end": "113640"
  },
  {
    "start": "113000",
    "end": "113000"
  },
  {
    "text": "as in any typical kubernetes cluster",
    "start": "116399",
    "end": "119280"
  },
  {
    "text": "here we have a workload of containerized",
    "start": "119280",
    "end": "121439"
  },
  {
    "text": "applications orchestrated by kubernetes",
    "start": "121439",
    "end": "124560"
  },
  {
    "text": "this workload could include application",
    "start": "124560",
    "end": "126479"
  },
  {
    "text": "serving concurrent requests like web",
    "start": "126479",
    "end": "128560"
  },
  {
    "text": "service or each request could be handled",
    "start": "128560",
    "end": "131120"
  },
  {
    "text": "by individual containerized application",
    "start": "131120",
    "end": "133280"
  },
  {
    "text": "like in a function as a service or",
    "start": "133280",
    "end": "135280"
  },
  {
    "text": "serverless setup",
    "start": "135280",
    "end": "137280"
  },
  {
    "text": "applications could come up pretty fast",
    "start": "137280",
    "end": "139360"
  },
  {
    "text": "or they might have initialization",
    "start": "139360",
    "end": "140959"
  },
  {
    "text": "overhead",
    "start": "140959",
    "end": "142800"
  },
  {
    "text": "now keeping different workloads in mind",
    "start": "142800",
    "end": "145520"
  },
  {
    "text": "what are some of the things we need to",
    "start": "145520",
    "end": "146959"
  },
  {
    "text": "consider to build a scalable system",
    "start": "146959",
    "end": "150959"
  },
  {
    "text": "first and foremost system should be able",
    "start": "151040",
    "end": "153360"
  },
  {
    "text": "to react quickly and scale fast to any",
    "start": "153360",
    "end": "156400"
  },
  {
    "text": "unexpected traffic spikes",
    "start": "156400",
    "end": "159840"
  },
  {
    "text": "secondly there should not be any first",
    "start": "160480",
    "end": "162400"
  },
  {
    "text": "use performance impact on the latency",
    "start": "162400",
    "end": "164400"
  },
  {
    "text": "due to a cold start",
    "start": "164400",
    "end": "166239"
  },
  {
    "text": "this is basically the time spent on",
    "start": "166239",
    "end": "168720"
  },
  {
    "text": "setting up the container environment",
    "start": "168720",
    "end": "170879"
  },
  {
    "text": "along with the application",
    "start": "170879",
    "end": "171920"
  },
  {
    "text": "initialization to come up ready",
    "start": "171920",
    "end": "175360"
  },
  {
    "text": "this could be avoided by keeping the",
    "start": "175360",
    "end": "176879"
  },
  {
    "text": "containerized application warm and ready",
    "start": "176879",
    "end": "179040"
  },
  {
    "text": "to go and part of warming the",
    "start": "179040",
    "end": "180879"
  },
  {
    "text": "containerized application involves",
    "start": "180879",
    "end": "182640"
  },
  {
    "text": "initializing the application",
    "start": "182640",
    "end": "185120"
  },
  {
    "text": "we'll talk about this more in the",
    "start": "185120",
    "end": "186480"
  },
  {
    "text": "upcoming slides",
    "start": "186480",
    "end": "189200"
  },
  {
    "text": "third to use the resources efficiently",
    "start": "189200",
    "end": "191440"
  },
  {
    "text": "by maintaining low cost waste",
    "start": "191440",
    "end": "194640"
  },
  {
    "text": "so",
    "start": "194640",
    "end": "195360"
  },
  {
    "text": "how easy or difficult it is to achieve",
    "start": "195360",
    "end": "197440"
  },
  {
    "text": "these goals",
    "start": "197440",
    "end": "199840"
  },
  {
    "start": "199000",
    "end": "199000"
  },
  {
    "text": "let's start by addressing the elephant",
    "start": "200080",
    "end": "201599"
  },
  {
    "text": "in the room cold start",
    "start": "201599",
    "end": "204000"
  },
  {
    "text": "yes cold start is one of the main",
    "start": "204000",
    "end": "206000"
  },
  {
    "text": "challenge that makes it difficult to",
    "start": "206000",
    "end": "207519"
  },
  {
    "text": "achieve all three goals in the same time",
    "start": "207519",
    "end": "211440"
  },
  {
    "text": "this could also be seen in the function",
    "start": "211440",
    "end": "213680"
  },
  {
    "text": "as a service or serverless use cases",
    "start": "213680",
    "end": "217599"
  },
  {
    "text": "let me walk you through some of the",
    "start": "217760",
    "end": "219360"
  },
  {
    "text": "options in the next couple of slides on",
    "start": "219360",
    "end": "221760"
  },
  {
    "text": "why it becomes difficult to achieve all",
    "start": "221760",
    "end": "224319"
  },
  {
    "text": "goals with container or application cold",
    "start": "224319",
    "end": "226720"
  },
  {
    "text": "startup time",
    "start": "226720",
    "end": "229440"
  },
  {
    "start": "230000",
    "end": "230000"
  },
  {
    "text": "option 1 scale out on demand with usage",
    "start": "231360",
    "end": "236400"
  },
  {
    "text": "basically wait for the usage demand and",
    "start": "236640",
    "end": "239360"
  },
  {
    "text": "scale up the workload to meet the meat",
    "start": "239360",
    "end": "241120"
  },
  {
    "text": "demand",
    "start": "241120",
    "end": "243040"
  },
  {
    "text": "let's take this and stack it up against",
    "start": "243040",
    "end": "245120"
  },
  {
    "text": "our goals i'll give you a couple of",
    "start": "245120",
    "end": "247040"
  },
  {
    "text": "seconds to guess i'm sure most of you",
    "start": "247040",
    "end": "249680"
  },
  {
    "text": "got it right",
    "start": "249680",
    "end": "252159"
  },
  {
    "text": "so as you see here this does well with",
    "start": "252159",
    "end": "254400"
  },
  {
    "text": "the goal of use using resources",
    "start": "254400",
    "end": "256079"
  },
  {
    "text": "efficiently since new pods are spawned",
    "start": "256079",
    "end": "258799"
  },
  {
    "text": "only when needed",
    "start": "258799",
    "end": "260560"
  },
  {
    "text": "however this is prone to cold start",
    "start": "260560",
    "end": "262720"
  },
  {
    "text": "paints and would",
    "start": "262720",
    "end": "264320"
  },
  {
    "text": "have poor first use performance",
    "start": "264320",
    "end": "267040"
  },
  {
    "text": "also this wouldn't be able to scale",
    "start": "267040",
    "end": "269040"
  },
  {
    "text": "quickly to meet the sudden burst in the",
    "start": "269040",
    "end": "271120"
  },
  {
    "text": "workload",
    "start": "271120",
    "end": "273360"
  },
  {
    "text": "can we do better",
    "start": "273360",
    "end": "275280"
  },
  {
    "text": "let's see",
    "start": "275280",
    "end": "277680"
  },
  {
    "start": "277000",
    "end": "277000"
  },
  {
    "text": "how about we create a standby pool of",
    "start": "277680",
    "end": "279919"
  },
  {
    "text": "pre-warmed pool",
    "start": "279919",
    "end": "282320"
  },
  {
    "text": "basically maintain a pool of pre-warmed",
    "start": "282320",
    "end": "284639"
  },
  {
    "text": "containers",
    "start": "284639",
    "end": "286400"
  },
  {
    "text": "and size of the pool could be calculated",
    "start": "286400",
    "end": "288240"
  },
  {
    "text": "based on the historical traffic trend",
    "start": "288240",
    "end": "291520"
  },
  {
    "text": "now let's do the same exercise again and",
    "start": "291520",
    "end": "293520"
  },
  {
    "text": "stack it against the gold",
    "start": "293520",
    "end": "297280"
  },
  {
    "text": "so it does address the core start pane",
    "start": "297280",
    "end": "300000"
  },
  {
    "text": "setting up of a container environment",
    "start": "300000",
    "end": "301759"
  },
  {
    "text": "and initializing the application is done",
    "start": "301759",
    "end": "303600"
  },
  {
    "text": "ahead of time",
    "start": "303600",
    "end": "305199"
  },
  {
    "text": "but",
    "start": "305199",
    "end": "306000"
  },
  {
    "text": "it still suffers from handling this",
    "start": "306000",
    "end": "307759"
  },
  {
    "text": "sudden burst in the workload and since",
    "start": "307759",
    "end": "310080"
  },
  {
    "text": "we are maintaining these pre-warmed pods",
    "start": "310080",
    "end": "312160"
  },
  {
    "text": "there would be lot of waste and",
    "start": "312160",
    "end": "313520"
  },
  {
    "text": "resources if these spots are sitting",
    "start": "313520",
    "end": "315840"
  },
  {
    "text": "idle and traffic is slow",
    "start": "315840",
    "end": "319440"
  },
  {
    "start": "320000",
    "end": "320000"
  },
  {
    "text": "now can we achieve these seemingly",
    "start": "321039",
    "end": "322880"
  },
  {
    "text": "contradictory goals can we get around",
    "start": "322880",
    "end": "325280"
  },
  {
    "text": "the cold start paints to provide fast",
    "start": "325280",
    "end": "327919"
  },
  {
    "text": "performance on first use",
    "start": "327919",
    "end": "329759"
  },
  {
    "text": "with the ability to scale out fast to",
    "start": "329759",
    "end": "331919"
  },
  {
    "text": "account for unexpected traffic spikes",
    "start": "331919",
    "end": "334560"
  },
  {
    "text": "along with maintaining low utilization",
    "start": "334560",
    "end": "336560"
  },
  {
    "text": "weight",
    "start": "336560",
    "end": "338240"
  },
  {
    "text": "it seems like a daunting ask",
    "start": "338240",
    "end": "341280"
  },
  {
    "text": "but",
    "start": "341280",
    "end": "342639"
  },
  {
    "start": "342000",
    "end": "342000"
  },
  {
    "text": "yes we can and the answer is checkpoint",
    "start": "342639",
    "end": "344800"
  },
  {
    "text": "restore",
    "start": "344800",
    "end": "347280"
  },
  {
    "text": "we used linux utility called cryo",
    "start": "347759",
    "end": "351120"
  },
  {
    "text": "which stands for checkpoint restoring",
    "start": "351120",
    "end": "353199"
  },
  {
    "text": "user space",
    "start": "353199",
    "end": "354639"
  },
  {
    "text": "to perform checkpoint register of the",
    "start": "354639",
    "end": "356160"
  },
  {
    "text": "containerized application",
    "start": "356160",
    "end": "358319"
  },
  {
    "text": "it's an open source project on github",
    "start": "358319",
    "end": "360400"
  },
  {
    "text": "with around",
    "start": "360400",
    "end": "361680"
  },
  {
    "text": "ten thousand commits and hundreds of",
    "start": "361680",
    "end": "363280"
  },
  {
    "text": "contributors",
    "start": "363280",
    "end": "365360"
  },
  {
    "text": "now idea here is to checkpoint the",
    "start": "365360",
    "end": "367680"
  },
  {
    "text": "warmed container that is already",
    "start": "367680",
    "end": "369680"
  },
  {
    "text": "initialized",
    "start": "369680",
    "end": "371039"
  },
  {
    "text": "and restore as needed during scaling",
    "start": "371039",
    "end": "374960"
  },
  {
    "text": "with this approach the startup time is",
    "start": "374960",
    "end": "377199"
  },
  {
    "text": "reduced considerably",
    "start": "377199",
    "end": "379039"
  },
  {
    "text": "in some cases we saw around 70 folds",
    "start": "379039",
    "end": "381680"
  },
  {
    "text": "improvement in the startup time",
    "start": "381680",
    "end": "383600"
  },
  {
    "text": "by going from couple of minutes to",
    "start": "383600",
    "end": "385360"
  },
  {
    "text": "couple of seconds",
    "start": "385360",
    "end": "388240"
  },
  {
    "text": "so how checkpoint restore works",
    "start": "388800",
    "end": "393400"
  },
  {
    "start": "393000",
    "end": "393000"
  },
  {
    "text": "checkpoint freezes a running application",
    "start": "394800",
    "end": "397520"
  },
  {
    "text": "or any linux processes for that matter",
    "start": "397520",
    "end": "399680"
  },
  {
    "text": "and serializes the state to the disk as",
    "start": "399680",
    "end": "402160"
  },
  {
    "text": "a collection of files",
    "start": "402160",
    "end": "404639"
  },
  {
    "text": "these files includes any files related",
    "start": "404639",
    "end": "406880"
  },
  {
    "text": "info sockets namespaces memory etc",
    "start": "406880",
    "end": "411919"
  },
  {
    "text": "now",
    "start": "411919",
    "end": "412800"
  },
  {
    "text": "restore creates a process tree by",
    "start": "412800",
    "end": "414800"
  },
  {
    "text": "reading these collection of files",
    "start": "414800",
    "end": "417039"
  },
  {
    "text": "and restores the process state",
    "start": "417039",
    "end": "420400"
  },
  {
    "text": "let's go for a quick demo on checkpoint",
    "start": "420400",
    "end": "422319"
  },
  {
    "text": "restore to understand more about cryo",
    "start": "422319",
    "end": "425280"
  },
  {
    "text": "in this demo i have a containerized go",
    "start": "425280",
    "end": "427520"
  },
  {
    "text": "web application that i call it as gopas",
    "start": "427520",
    "end": "431039"
  },
  {
    "text": "basically gopos is simulating an app",
    "start": "431039",
    "end": "433360"
  },
  {
    "text": "doing real startup and pre-warming that",
    "start": "433360",
    "end": "436160"
  },
  {
    "text": "takes about 30 seconds before it starts",
    "start": "436160",
    "end": "438479"
  },
  {
    "text": "listening over port 4000.",
    "start": "438479",
    "end": "440800"
  },
  {
    "text": "and you can see how a checkpoint restore",
    "start": "440800",
    "end": "443199"
  },
  {
    "text": "this 30 second initialization has to",
    "start": "443199",
    "end": "445199"
  },
  {
    "text": "happen just once during the checkpoint",
    "start": "445199",
    "end": "447759"
  },
  {
    "text": "and every register of the container",
    "start": "447759",
    "end": "449199"
  },
  {
    "text": "would skip the initialization and be",
    "start": "449199",
    "end": "450960"
  },
  {
    "text": "ready in couple of seconds",
    "start": "450960",
    "end": "453199"
  },
  {
    "text": "so let's get started",
    "start": "453199",
    "end": "455680"
  },
  {
    "text": "so we have a go web application here",
    "start": "455680",
    "end": "459520"
  },
  {
    "text": "that takes around 30 seconds to",
    "start": "459520",
    "end": "461599"
  },
  {
    "text": "initialize",
    "start": "461599",
    "end": "463440"
  },
  {
    "text": "waits for initialization to complete",
    "start": "463440",
    "end": "466879"
  },
  {
    "text": "it starts listening on port 4000 after",
    "start": "466879",
    "end": "469360"
  },
  {
    "text": "initialization is complete and returns a",
    "start": "469360",
    "end": "473120"
  },
  {
    "text": "string as cr demo go app",
    "start": "473120",
    "end": "476639"
  },
  {
    "text": "for this we are using run c as container",
    "start": "476639",
    "end": "478319"
  },
  {
    "text": "run time for creating and main managing",
    "start": "478319",
    "end": "480879"
  },
  {
    "text": "container lifecycle and cryo to enable",
    "start": "480879",
    "end": "483120"
  },
  {
    "text": "checkpoint restore functionality",
    "start": "483120",
    "end": "485520"
  },
  {
    "text": "run c itself needs a config.json file",
    "start": "485520",
    "end": "488400"
  },
  {
    "text": "through which container options are",
    "start": "488400",
    "end": "490560"
  },
  {
    "text": "passed and root file system to be used",
    "start": "490560",
    "end": "493280"
  },
  {
    "text": "for containers",
    "start": "493280",
    "end": "496000"
  },
  {
    "text": "with that let's take a look at the",
    "start": "496720",
    "end": "499360"
  },
  {
    "text": "config file to see what is included in",
    "start": "499360",
    "end": "502400"
  },
  {
    "text": "there",
    "start": "502400",
    "end": "503440"
  },
  {
    "text": "it includes",
    "start": "503440",
    "end": "504639"
  },
  {
    "text": "details like oci compliant version",
    "start": "504639",
    "end": "507280"
  },
  {
    "text": "command to run at the start of the",
    "start": "507280",
    "end": "508639"
  },
  {
    "text": "container",
    "start": "508639",
    "end": "511199"
  },
  {
    "text": "part to the",
    "start": "512000",
    "end": "513599"
  },
  {
    "text": "root file system",
    "start": "513599",
    "end": "516640"
  },
  {
    "text": "as you can see here",
    "start": "516640",
    "end": "520159"
  },
  {
    "text": "with some of the amounts required on",
    "start": "520159",
    "end": "522560"
  },
  {
    "text": "linux basically any container options",
    "start": "522560",
    "end": "524720"
  },
  {
    "text": "that is required for container goes here",
    "start": "524720",
    "end": "528720"
  },
  {
    "text": "let's start a container",
    "start": "528880",
    "end": "530720"
  },
  {
    "text": "running the go web application",
    "start": "530720",
    "end": "534680"
  },
  {
    "text": "as you see it's waiting for the",
    "start": "535360",
    "end": "536880"
  },
  {
    "text": "application to finish initialization and",
    "start": "536880",
    "end": "538880"
  },
  {
    "text": "it would take around 30 seconds to",
    "start": "538880",
    "end": "541040"
  },
  {
    "text": "initialize while we are",
    "start": "541040",
    "end": "543360"
  },
  {
    "text": "waiting let's start pulling port 4000",
    "start": "543360",
    "end": "546080"
  },
  {
    "text": "this should get the",
    "start": "546080",
    "end": "547760"
  },
  {
    "text": "response back once they go up finishes",
    "start": "547760",
    "end": "550480"
  },
  {
    "text": "up initialization and starts this thing",
    "start": "550480",
    "end": "552959"
  },
  {
    "text": "on port 4000",
    "start": "552959",
    "end": "556240"
  },
  {
    "text": "so container is ready if we get the",
    "start": "556240",
    "end": "558000"
  },
  {
    "text": "string back as the response",
    "start": "558000",
    "end": "561040"
  },
  {
    "text": "since the container is ready let's check",
    "start": "561040",
    "end": "562880"
  },
  {
    "text": "point",
    "start": "562880",
    "end": "563680"
  },
  {
    "text": "using run c checkpoint",
    "start": "563680",
    "end": "565680"
  },
  {
    "text": "this should stop the container as you",
    "start": "565680",
    "end": "567920"
  },
  {
    "text": "see",
    "start": "567920",
    "end": "570160"
  },
  {
    "text": "and",
    "start": "570880",
    "end": "571760"
  },
  {
    "text": "writes the checkpoint files to the disk",
    "start": "571760",
    "end": "576600"
  },
  {
    "text": "let's",
    "start": "577760",
    "end": "578640"
  },
  {
    "text": "see what the status of so yeah container",
    "start": "578640",
    "end": "581040"
  },
  {
    "text": "is stopped",
    "start": "581040",
    "end": "583519"
  },
  {
    "text": "now let's restore the container from the",
    "start": "583519",
    "end": "585440"
  },
  {
    "text": "checkpoint",
    "start": "585440",
    "end": "588000"
  },
  {
    "text": "and you should see that it comes up",
    "start": "588000",
    "end": "589519"
  },
  {
    "text": "ready in a second",
    "start": "589519",
    "end": "592560"
  },
  {
    "text": "unlike running the container that would",
    "start": "594320",
    "end": "595920"
  },
  {
    "text": "have spent 30 seconds to initialize and",
    "start": "595920",
    "end": "597920"
  },
  {
    "text": "come up ready",
    "start": "597920",
    "end": "600160"
  },
  {
    "text": "so you should see the advantage of",
    "start": "600160",
    "end": "602720"
  },
  {
    "text": "having restoring the container over just",
    "start": "602720",
    "end": "605600"
  },
  {
    "text": "running the container if you have",
    "start": "605600",
    "end": "606959"
  },
  {
    "text": "checkpoint available",
    "start": "606959",
    "end": "608880"
  },
  {
    "text": "so if you look at container lifecycle",
    "start": "608880",
    "end": "611519"
  },
  {
    "start": "609000",
    "end": "609000"
  },
  {
    "text": "through the straight transition lens",
    "start": "611519",
    "end": "614000"
  },
  {
    "text": "with checkpoint restore we were able to",
    "start": "614000",
    "end": "615760"
  },
  {
    "text": "skip the initialization and jump to",
    "start": "615760",
    "end": "617680"
  },
  {
    "text": "ready",
    "start": "617680",
    "end": "618959"
  },
  {
    "text": "so to summarize checkpoint restore is",
    "start": "618959",
    "end": "621040"
  },
  {
    "text": "the answer to fast container startup",
    "start": "621040",
    "end": "623040"
  },
  {
    "text": "type",
    "start": "623040",
    "end": "624320"
  },
  {
    "text": "wonderful isn't it",
    "start": "624320",
    "end": "626079"
  },
  {
    "text": "let's leverage this in our world of",
    "start": "626079",
    "end": "628000"
  },
  {
    "text": "kubernetes",
    "start": "628000",
    "end": "630720"
  },
  {
    "start": "630000",
    "end": "630000"
  },
  {
    "text": "unfortunately as of today there is no",
    "start": "630880",
    "end": "633200"
  },
  {
    "text": "need for support of checkpoint restoring",
    "start": "633200",
    "end": "634800"
  },
  {
    "text": "kubernetes",
    "start": "634800",
    "end": "637519"
  },
  {
    "text": "let's see what options we have here to",
    "start": "637680",
    "end": "640000"
  },
  {
    "text": "bring in the checkpoint restore",
    "start": "640000",
    "end": "641839"
  },
  {
    "text": "functionality to kubernetes",
    "start": "641839",
    "end": "645560"
  },
  {
    "text": "option would be to add a support of",
    "start": "646160",
    "end": "648079"
  },
  {
    "text": "checkpoint restore in kubernetes",
    "start": "648079",
    "end": "650240"
  },
  {
    "text": "natively",
    "start": "650240",
    "end": "651760"
  },
  {
    "text": "this would involve creating kubernetes",
    "start": "651760",
    "end": "653839"
  },
  {
    "text": "enhancement proposal design and pr",
    "start": "653839",
    "end": "656240"
  },
  {
    "text": "review",
    "start": "656240",
    "end": "658560"
  },
  {
    "text": "second option is to take a non-native",
    "start": "659440",
    "end": "661360"
  },
  {
    "text": "approach without touching the kubernetes",
    "start": "661360",
    "end": "663839"
  },
  {
    "text": "code base",
    "start": "663839",
    "end": "665120"
  },
  {
    "text": "and in this talk i'll walk you through",
    "start": "665120",
    "end": "666880"
  },
  {
    "text": "our solution to non-native approach",
    "start": "666880",
    "end": "670000"
  },
  {
    "text": "so checkpoint restore basically has",
    "start": "670000",
    "end": "671839"
  },
  {
    "text": "different use cases it could be used to",
    "start": "671839",
    "end": "674720"
  },
  {
    "text": "address cold start that we talked about",
    "start": "674720",
    "end": "677200"
  },
  {
    "text": "or migrate a container from one host to",
    "start": "677200",
    "end": "679200"
  },
  {
    "text": "the other",
    "start": "679200",
    "end": "680800"
  },
  {
    "text": "maybe during maintenance among many",
    "start": "680800",
    "end": "682399"
  },
  {
    "text": "other use cases",
    "start": "682399",
    "end": "684880"
  },
  {
    "text": "given the different use cases and",
    "start": "684880",
    "end": "686880"
  },
  {
    "text": "complexity of checkpoint restore in",
    "start": "686880",
    "end": "688800"
  },
  {
    "text": "kubernetes it touches some of the core",
    "start": "688800",
    "end": "690880"
  },
  {
    "text": "workflow and components",
    "start": "690880",
    "end": "692959"
  },
  {
    "text": "so adding checkpoint restore natively",
    "start": "692959",
    "end": "694880"
  },
  {
    "text": "would involve making some core design",
    "start": "694880",
    "end": "697200"
  },
  {
    "text": "decisions and might extend the timeline",
    "start": "697200",
    "end": "699440"
  },
  {
    "text": "to make it to general availability",
    "start": "699440",
    "end": "702720"
  },
  {
    "text": "time to ga was one of the factors that",
    "start": "702720",
    "end": "704880"
  },
  {
    "text": "was considered to offer non-native",
    "start": "704880",
    "end": "706880"
  },
  {
    "text": "approach over native approach",
    "start": "706880",
    "end": "709200"
  },
  {
    "text": "having said that there might be a case",
    "start": "709200",
    "end": "711519"
  },
  {
    "text": "that could be made where",
    "start": "711519",
    "end": "713760"
  },
  {
    "text": "non-native and native could coexist",
    "start": "713760",
    "end": "716240"
  },
  {
    "text": "given the specific problems it is trying",
    "start": "716240",
    "end": "718000"
  },
  {
    "text": "to solve",
    "start": "718000",
    "end": "720480"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "so our approach of introducing",
    "start": "721600",
    "end": "723200"
  },
  {
    "text": "checkpoint restore capabilities in",
    "start": "723200",
    "end": "725040"
  },
  {
    "text": "kubernetes involved adding",
    "start": "725040",
    "end": "727760"
  },
  {
    "text": "checkpoint and restore microservices",
    "start": "727760",
    "end": "730560"
  },
  {
    "text": "checkpoint's basic functionality is to",
    "start": "730560",
    "end": "733040"
  },
  {
    "text": "checkpoint a running container",
    "start": "733040",
    "end": "735839"
  },
  {
    "text": "restores basic functionality is to",
    "start": "735839",
    "end": "738000"
  },
  {
    "text": "restore a container from the checkpoint",
    "start": "738000",
    "end": "741360"
  },
  {
    "text": "checkpoint accepts container image and",
    "start": "741360",
    "end": "743839"
  },
  {
    "text": "configurations required to run a",
    "start": "743839",
    "end": "745920"
  },
  {
    "text": "container",
    "start": "745920",
    "end": "746959"
  },
  {
    "text": "waits for the container to start and",
    "start": "746959",
    "end": "748959"
  },
  {
    "text": "complete its initialization and",
    "start": "748959",
    "end": "750560"
  },
  {
    "text": "checkpoints the container",
    "start": "750560",
    "end": "753600"
  },
  {
    "text": "restore",
    "start": "753600",
    "end": "754880"
  },
  {
    "text": "uses this checkpoint image and restores",
    "start": "754880",
    "end": "757519"
  },
  {
    "text": "the container to the state at which the",
    "start": "757519",
    "end": "759360"
  },
  {
    "text": "container was checkpointed",
    "start": "759360",
    "end": "762240"
  },
  {
    "text": "now kubernetes doesn't expose checkpoint",
    "start": "762240",
    "end": "764959"
  },
  {
    "text": "restore functionalities through its api",
    "start": "764959",
    "end": "767360"
  },
  {
    "text": "and in order to checkpoint or restore",
    "start": "767360",
    "end": "769839"
  },
  {
    "text": "the containers in kubernetes we had to",
    "start": "769839",
    "end": "772000"
  },
  {
    "text": "think little outside the box",
    "start": "772000",
    "end": "774880"
  },
  {
    "text": "we needed a way to introduce container",
    "start": "774880",
    "end": "776959"
  },
  {
    "text": "runtime in kubernetes that supports",
    "start": "776959",
    "end": "779200"
  },
  {
    "text": "checkpoint restore functionality and",
    "start": "779200",
    "end": "782560"
  },
  {
    "text": "not managed by kubernetes hence we went",
    "start": "782560",
    "end": "785200"
  },
  {
    "text": "with the design of",
    "start": "785200",
    "end": "787120"
  },
  {
    "text": "container runtime and container runtime",
    "start": "787120",
    "end": "790720"
  },
  {
    "start": "790000",
    "end": "790000"
  },
  {
    "text": "as the name suggests",
    "start": "790720",
    "end": "792639"
  },
  {
    "text": "it's running a container runtime inside",
    "start": "792639",
    "end": "795120"
  },
  {
    "text": "the container of a pod spawned by",
    "start": "795120",
    "end": "798320"
  },
  {
    "text": "container runtime that is managed by",
    "start": "798320",
    "end": "799920"
  },
  {
    "text": "kubernetes",
    "start": "799920",
    "end": "802160"
  },
  {
    "text": "parent container that runs the",
    "start": "802160",
    "end": "803680"
  },
  {
    "text": "checkpoint register service",
    "start": "803680",
    "end": "805920"
  },
  {
    "text": "runs the containerized application using",
    "start": "805920",
    "end": "808160"
  },
  {
    "text": "the child container runtime",
    "start": "808160",
    "end": "811279"
  },
  {
    "text": "parent container runtime could be any",
    "start": "811279",
    "end": "813360"
  },
  {
    "text": "container runtime supported by",
    "start": "813360",
    "end": "814720"
  },
  {
    "text": "kubernetes and child container runtime",
    "start": "814720",
    "end": "817279"
  },
  {
    "text": "needs to support checkpoint restore",
    "start": "817279",
    "end": "820560"
  },
  {
    "text": "for this talk i would be using",
    "start": "820560",
    "end": "822880"
  },
  {
    "text": "docker is the parent container runtime",
    "start": "822880",
    "end": "824959"
  },
  {
    "text": "and runcy as the child container time",
    "start": "824959",
    "end": "829360"
  },
  {
    "text": "hence run scene docker",
    "start": "829680",
    "end": "832639"
  },
  {
    "text": "let's take another look of the state",
    "start": "832639",
    "end": "834720"
  },
  {
    "text": "from pre-checkpoint to post restore",
    "start": "834720",
    "end": "838079"
  },
  {
    "text": "in a pre-checkpoint state pod running",
    "start": "838079",
    "end": "840480"
  },
  {
    "text": "checkpoint service is spawned",
    "start": "840480",
    "end": "842399"
  },
  {
    "text": "that runs the inner container to be",
    "start": "842399",
    "end": "844000"
  },
  {
    "text": "chuck pointed",
    "start": "844000",
    "end": "845760"
  },
  {
    "text": "in a checkpoint state checkpoint image",
    "start": "845760",
    "end": "848160"
  },
  {
    "text": "is made available",
    "start": "848160",
    "end": "850320"
  },
  {
    "text": "in a post restore state there is a pod",
    "start": "850320",
    "end": "852560"
  },
  {
    "text": "running restore service that has a",
    "start": "852560",
    "end": "854720"
  },
  {
    "text": "restored container running inside the",
    "start": "854720",
    "end": "856880"
  },
  {
    "text": "outer container using the checkpoint",
    "start": "856880",
    "end": "858720"
  },
  {
    "text": "image",
    "start": "858720",
    "end": "860480"
  },
  {
    "start": "860000",
    "end": "860000"
  },
  {
    "text": "now let's look from the sequence of",
    "start": "860480",
    "end": "862079"
  },
  {
    "text": "events anchor",
    "start": "862079",
    "end": "863760"
  },
  {
    "text": "in checkpoint sequence checkpoint",
    "start": "863760",
    "end": "865680"
  },
  {
    "text": "service is deployed",
    "start": "865680",
    "end": "867839"
  },
  {
    "text": "checkpoint service starts the",
    "start": "867839",
    "end": "869279"
  },
  {
    "text": "application container running as a child",
    "start": "869279",
    "end": "871440"
  },
  {
    "text": "container",
    "start": "871440",
    "end": "872880"
  },
  {
    "text": "and waits for application to become",
    "start": "872880",
    "end": "874639"
  },
  {
    "text": "ready",
    "start": "874639",
    "end": "876480"
  },
  {
    "text": "once it is ready",
    "start": "876480",
    "end": "878160"
  },
  {
    "text": "checkpoint the container and save the",
    "start": "878160",
    "end": "880079"
  },
  {
    "text": "checkpoint in the location that could be",
    "start": "880079",
    "end": "881920"
  },
  {
    "text": "accessed by the restore service",
    "start": "881920",
    "end": "884959"
  },
  {
    "text": "now moving on to the restore sequence",
    "start": "884959",
    "end": "889519"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "restore service is deployed",
    "start": "889519",
    "end": "892240"
  },
  {
    "text": "restore services looks for the",
    "start": "892240",
    "end": "894079"
  },
  {
    "text": "checkpoint and waits for the checkpoint",
    "start": "894079",
    "end": "896160"
  },
  {
    "text": "to become available if none exist",
    "start": "896160",
    "end": "899519"
  },
  {
    "text": "once it is ready",
    "start": "899519",
    "end": "901279"
  },
  {
    "text": "restores the container from the",
    "start": "901279",
    "end": "902560"
  },
  {
    "text": "checkpoint",
    "start": "902560",
    "end": "905120"
  },
  {
    "start": "905000",
    "end": "905000"
  },
  {
    "text": "tying in all things together",
    "start": "906320",
    "end": "908639"
  },
  {
    "text": "in the first phase of an incremental",
    "start": "908639",
    "end": "910240"
  },
  {
    "text": "approach we made a design decision to",
    "start": "910240",
    "end": "913199"
  },
  {
    "text": "just to checkpoint and restore per node",
    "start": "913199",
    "end": "917199"
  },
  {
    "text": "now checkpoint service is scheduled as",
    "start": "917199",
    "end": "919360"
  },
  {
    "text": "daemon ports that would run on every",
    "start": "919360",
    "end": "921680"
  },
  {
    "text": "node to run the containerized",
    "start": "921680",
    "end": "923279"
  },
  {
    "text": "application",
    "start": "923279",
    "end": "925120"
  },
  {
    "text": "and create a checkpoint",
    "start": "925120",
    "end": "927440"
  },
  {
    "text": "meanwhile restore service waits for the",
    "start": "927440",
    "end": "929680"
  },
  {
    "text": "checkpoint to become available on the",
    "start": "929680",
    "end": "931440"
  },
  {
    "text": "node",
    "start": "931440",
    "end": "932320"
  },
  {
    "text": "and restores the container from the",
    "start": "932320",
    "end": "933759"
  },
  {
    "text": "checkpoint",
    "start": "933759",
    "end": "935440"
  },
  {
    "text": "henceforth any new ports that are coming",
    "start": "935440",
    "end": "938000"
  },
  {
    "text": "up on that particular node would start",
    "start": "938000",
    "end": "940160"
  },
  {
    "text": "from the checkpoint that is available on",
    "start": "940160",
    "end": "941759"
  },
  {
    "text": "the node",
    "start": "941759",
    "end": "943839"
  },
  {
    "text": "this should reduce the power startup",
    "start": "943839",
    "end": "945519"
  },
  {
    "text": "time from seconds to milliseconds and",
    "start": "945519",
    "end": "947680"
  },
  {
    "text": "from minutes to couple of seconds",
    "start": "947680",
    "end": "950720"
  },
  {
    "text": "let's see checkpoint and restore service",
    "start": "950720",
    "end": "952560"
  },
  {
    "text": "in action",
    "start": "952560",
    "end": "953759"
  },
  {
    "text": "in this demo we'll scale the application",
    "start": "953759",
    "end": "956880"
  },
  {
    "text": "with and without checkpoint restore next",
    "start": "956880",
    "end": "959279"
  },
  {
    "text": "to each other to see the difference",
    "start": "959279",
    "end": "961040"
  },
  {
    "text": "checkpoint restore makes while scaling",
    "start": "961040",
    "end": "962880"
  },
  {
    "text": "the application",
    "start": "962880",
    "end": "965040"
  },
  {
    "text": "we'll use the same go app that we used",
    "start": "965040",
    "end": "967040"
  },
  {
    "text": "in our previous demo and deploy them in",
    "start": "967040",
    "end": "969120"
  },
  {
    "text": "the cluster as a vanilla container and",
    "start": "969120",
    "end": "971920"
  },
  {
    "text": "as a container with checkpoint restore",
    "start": "971920",
    "end": "974880"
  },
  {
    "text": "we'll scale both the ports and you'll",
    "start": "974880",
    "end": "977040"
  },
  {
    "text": "notice that restored ports should scale",
    "start": "977040",
    "end": "979120"
  },
  {
    "text": "around 30 times faster compared to",
    "start": "979120",
    "end": "980959"
  },
  {
    "text": "vanilla pod",
    "start": "980959",
    "end": "983279"
  },
  {
    "text": "for this demo",
    "start": "983279",
    "end": "986240"
  },
  {
    "text": "we are using the same go application",
    "start": "988720",
    "end": "991040"
  },
  {
    "text": "that we used before that takes around 30",
    "start": "991040",
    "end": "993199"
  },
  {
    "text": "seconds to initialize",
    "start": "993199",
    "end": "995120"
  },
  {
    "text": "and listens on the port 4000",
    "start": "995120",
    "end": "998639"
  },
  {
    "text": "now the sample go application is",
    "start": "1000000",
    "end": "1001759"
  },
  {
    "text": "containerized that just calls the binary",
    "start": "1001759",
    "end": "1004000"
  },
  {
    "text": "executable when run",
    "start": "1004000",
    "end": "1007040"
  },
  {
    "text": "and the same go application is",
    "start": "1007040",
    "end": "1009199"
  },
  {
    "text": "containerized and provided to the",
    "start": "1009199",
    "end": "1010720"
  },
  {
    "text": "checkpoint restore service",
    "start": "1010720",
    "end": "1013120"
  },
  {
    "text": "which uses run cbs as the base image",
    "start": "1013120",
    "end": "1015360"
  },
  {
    "text": "which has",
    "start": "1015360",
    "end": "1016399"
  },
  {
    "text": "ways to run the container checkpoint and",
    "start": "1016399",
    "end": "1018320"
  },
  {
    "text": "restore",
    "start": "1018320",
    "end": "1021320"
  },
  {
    "text": "let's look into the",
    "start": "1024240",
    "end": "1025678"
  },
  {
    "text": "deployment object",
    "start": "1025679",
    "end": "1028720"
  },
  {
    "text": "so this is a deployment object for",
    "start": "1029360",
    "end": "1031918"
  },
  {
    "text": "deploying go application as a vanilla",
    "start": "1031919",
    "end": "1034160"
  },
  {
    "text": "container",
    "start": "1034160",
    "end": "1036720"
  },
  {
    "text": "as you see it's the it's using the",
    "start": "1036799",
    "end": "1038558"
  },
  {
    "text": "vanilla go app image",
    "start": "1038559",
    "end": "1041038"
  },
  {
    "text": "and liveness and readiness probe is set",
    "start": "1041039",
    "end": "1042798"
  },
  {
    "text": "to probe at port 4000",
    "start": "1042799",
    "end": "1046558"
  },
  {
    "text": "let's look into checkpoint",
    "start": "1047520",
    "end": "1050840"
  },
  {
    "text": "object now checkpoint here is",
    "start": "1050840",
    "end": "1054480"
  },
  {
    "text": "of a type daemon set that uses the image",
    "start": "1054480",
    "end": "1057039"
  },
  {
    "text": "that has runs helpers to run checkpoint",
    "start": "1057039",
    "end": "1059919"
  },
  {
    "text": "and restore",
    "start": "1059919",
    "end": "1062480"
  },
  {
    "text": "the operation here is checkpoint",
    "start": "1063520",
    "end": "1067840"
  },
  {
    "text": "and we are mounting some properties",
    "start": "1068720",
    "end": "1070720"
  },
  {
    "text": "required to save the checkpoint artifact",
    "start": "1070720",
    "end": "1073120"
  },
  {
    "text": "and get the checkpoint restore",
    "start": "1073120",
    "end": "1074880"
  },
  {
    "text": "properties",
    "start": "1074880",
    "end": "1077520"
  },
  {
    "text": "let's look into restore object it's a",
    "start": "1077919",
    "end": "1081120"
  },
  {
    "text": "deployment object exactly like go",
    "start": "1081120",
    "end": "1082960"
  },
  {
    "text": "application deployment object",
    "start": "1082960",
    "end": "1085360"
  },
  {
    "text": "but using the image that has ranci",
    "start": "1085360",
    "end": "1087120"
  },
  {
    "text": "helpers again",
    "start": "1087120",
    "end": "1090000"
  },
  {
    "text": "so the operation to be performed here is",
    "start": "1092880",
    "end": "1094640"
  },
  {
    "text": "restored from the",
    "start": "1094640",
    "end": "1096880"
  },
  {
    "text": "image",
    "start": "1096880",
    "end": "1098320"
  },
  {
    "text": "and location for",
    "start": "1098320",
    "end": "1100000"
  },
  {
    "text": "checkpoint artifacts and properties",
    "start": "1100000",
    "end": "1103760"
  },
  {
    "text": "this is the config map where properties",
    "start": "1104559",
    "end": "1106559"
  },
  {
    "text": "are passed through it basically has a",
    "start": "1106559",
    "end": "1109120"
  },
  {
    "text": "probe to check the readiness of the",
    "start": "1109120",
    "end": "1111679"
  },
  {
    "text": "container running inside the",
    "start": "1111679",
    "end": "1113840"
  },
  {
    "text": "parent container",
    "start": "1113840",
    "end": "1115840"
  },
  {
    "text": "now let's deploy all the resources",
    "start": "1115840",
    "end": "1118799"
  },
  {
    "text": "on the right",
    "start": "1118799",
    "end": "1121200"
  },
  {
    "text": "you should see there are three parts",
    "start": "1121200",
    "end": "1123280"
  },
  {
    "text": "first one is checkpoint pod that is",
    "start": "1123280",
    "end": "1125600"
  },
  {
    "text": "starting an application basically",
    "start": "1125600",
    "end": "1127520"
  },
  {
    "text": "running the",
    "start": "1127520",
    "end": "1129120"
  },
  {
    "text": "container with the go web app and",
    "start": "1129120",
    "end": "1131600"
  },
  {
    "text": "waiting for",
    "start": "1131600",
    "end": "1132640"
  },
  {
    "text": "it to initialize",
    "start": "1132640",
    "end": "1134640"
  },
  {
    "text": "similarly vanilla container or vanilla",
    "start": "1134640",
    "end": "1137120"
  },
  {
    "text": "pod is running with govab container and",
    "start": "1137120",
    "end": "1139760"
  },
  {
    "text": "restore container is waiting for",
    "start": "1139760",
    "end": "1141760"
  },
  {
    "text": "checkpoint to become available",
    "start": "1141760",
    "end": "1144960"
  },
  {
    "text": "while it is coming up",
    "start": "1144960",
    "end": "1146720"
  },
  {
    "text": "let's",
    "start": "1146720",
    "end": "1149720"
  },
  {
    "text": "the vanilla",
    "start": "1150160",
    "end": "1152640"
  },
  {
    "text": "container",
    "start": "1152640",
    "end": "1154160"
  },
  {
    "text": "to two",
    "start": "1154160",
    "end": "1156400"
  },
  {
    "text": "as you see on the right both",
    "start": "1156400",
    "end": "1158480"
  },
  {
    "text": "pots have come up ready",
    "start": "1158480",
    "end": "1161679"
  },
  {
    "text": "and now let's scale",
    "start": "1162480",
    "end": "1165840"
  },
  {
    "text": "go web app",
    "start": "1166160",
    "end": "1167919"
  },
  {
    "text": "restore pod",
    "start": "1167919",
    "end": "1170080"
  },
  {
    "text": "and as you see on the right the digital",
    "start": "1170080",
    "end": "1171760"
  },
  {
    "text": "port came up ready in couple of seconds",
    "start": "1171760",
    "end": "1174880"
  },
  {
    "text": "and",
    "start": "1174880",
    "end": "1176160"
  },
  {
    "text": "the vanilla pod is still waiting to come",
    "start": "1176160",
    "end": "1178240"
  },
  {
    "text": "up because it is initializing whereas",
    "start": "1178240",
    "end": "1180799"
  },
  {
    "text": "restored ports kept that initialization",
    "start": "1180799",
    "end": "1182880"
  },
  {
    "text": "part and came up ready in couple of",
    "start": "1182880",
    "end": "1184320"
  },
  {
    "text": "seconds",
    "start": "1184320",
    "end": "1186559"
  },
  {
    "text": "as you see all the ports are up for the",
    "start": "1186559",
    "end": "1188320"
  },
  {
    "text": "restore port but the vanilla pod is",
    "start": "1188320",
    "end": "1190320"
  },
  {
    "text": "still coming up and it is initializing",
    "start": "1190320",
    "end": "1193200"
  },
  {
    "text": "so you can see",
    "start": "1193200",
    "end": "1194559"
  },
  {
    "text": "what how much of this how much of a",
    "start": "1194559",
    "end": "1196400"
  },
  {
    "text": "difference this would mean make if you",
    "start": "1196400",
    "end": "1199440"
  },
  {
    "text": "are scaling two thousand parts or ten",
    "start": "1199440",
    "end": "1201440"
  },
  {
    "text": "thousand ports",
    "start": "1201440",
    "end": "1202880"
  },
  {
    "text": "um",
    "start": "1202880",
    "end": "1203679"
  },
  {
    "text": "and every pod is trying to initialize",
    "start": "1203679",
    "end": "1205520"
  },
  {
    "text": "whereas with restore you have you can",
    "start": "1205520",
    "end": "1207919"
  },
  {
    "text": "skip that part and",
    "start": "1207919",
    "end": "1210720"
  },
  {
    "text": "ports could come up ready",
    "start": "1210720",
    "end": "1212880"
  },
  {
    "text": "in couple of seconds or in milliseconds",
    "start": "1212880",
    "end": "1214720"
  },
  {
    "text": "in fact",
    "start": "1214720",
    "end": "1217120"
  },
  {
    "start": "1218000",
    "end": "1218000"
  },
  {
    "text": "tying all things together",
    "start": "1219360",
    "end": "1221520"
  },
  {
    "text": "on a high level what does it look like",
    "start": "1221520",
    "end": "1223360"
  },
  {
    "text": "to introduce checkpoint rush to service",
    "start": "1223360",
    "end": "1225200"
  },
  {
    "text": "for existing application",
    "start": "1225200",
    "end": "1227919"
  },
  {
    "text": "please note that this is just one of the",
    "start": "1227919",
    "end": "1229919"
  },
  {
    "text": "ways you could achieve this and there",
    "start": "1229919",
    "end": "1231440"
  },
  {
    "text": "might be multiple ways but the overall",
    "start": "1231440",
    "end": "1233520"
  },
  {
    "text": "concept remains same",
    "start": "1233520",
    "end": "1236480"
  },
  {
    "text": "say you have an existing image that runs",
    "start": "1236480",
    "end": "1238640"
  },
  {
    "text": "a goa",
    "start": "1238640",
    "end": "1240320"
  },
  {
    "text": "you could create a respective checkpoint",
    "start": "1240320",
    "end": "1242640"
  },
  {
    "text": "and restore image as a wrapper around",
    "start": "1242640",
    "end": "1244720"
  },
  {
    "text": "the existing image",
    "start": "1244720",
    "end": "1247679"
  },
  {
    "text": "this is one way to hand over the",
    "start": "1247679",
    "end": "1249200"
  },
  {
    "text": "existing app to checkpoint restore",
    "start": "1249200",
    "end": "1250960"
  },
  {
    "text": "service",
    "start": "1250960",
    "end": "1253200"
  },
  {
    "text": "now let's take the deployment object for",
    "start": "1253200",
    "end": "1255200"
  },
  {
    "text": "that application",
    "start": "1255200",
    "end": "1258000"
  },
  {
    "text": "configurable properties like a way to",
    "start": "1258080",
    "end": "1260400"
  },
  {
    "text": "check in if the application is ready or",
    "start": "1260400",
    "end": "1262720"
  },
  {
    "text": "a way to pass in the container option",
    "start": "1262720",
    "end": "1264480"
  },
  {
    "text": "could be passed as config map",
    "start": "1264480",
    "end": "1268158"
  },
  {
    "text": "along with that respective",
    "start": "1268720",
    "end": "1269919"
  },
  {
    "text": "representation for checkpoint and",
    "start": "1269919",
    "end": "1271679"
  },
  {
    "text": "restore service",
    "start": "1271679",
    "end": "1274480"
  },
  {
    "text": "if the checkpoint is per node the",
    "start": "1275039",
    "end": "1276880"
  },
  {
    "text": "kubernetes object for checkpoint would",
    "start": "1276880",
    "end": "1278720"
  },
  {
    "text": "be a daemon set here",
    "start": "1278720",
    "end": "1280720"
  },
  {
    "text": "and register would be a deployment",
    "start": "1280720",
    "end": "1283440"
  },
  {
    "text": "if not checkpoint could be a deployment",
    "start": "1283440",
    "end": "1285280"
  },
  {
    "text": "or a cron job that runs once per",
    "start": "1285280",
    "end": "1287360"
  },
  {
    "text": "deployment if checkpoint is saved in the",
    "start": "1287360",
    "end": "1289600"
  },
  {
    "text": "external storage or",
    "start": "1289600",
    "end": "1291840"
  },
  {
    "text": "performed as part of ci cd pipeline",
    "start": "1291840",
    "end": "1296000"
  },
  {
    "text": "this is the respective image used by",
    "start": "1296799",
    "end": "1298559"
  },
  {
    "text": "check pointer and restore",
    "start": "1298559",
    "end": "1301520"
  },
  {
    "text": "checkpoint restore service does require",
    "start": "1301520",
    "end": "1303200"
  },
  {
    "text": "privileges but the actual application",
    "start": "1303200",
    "end": "1305280"
  },
  {
    "text": "container running inside doesn't so",
    "start": "1305280",
    "end": "1307200"
  },
  {
    "text": "application container shouldn't have any",
    "start": "1307200",
    "end": "1309039"
  },
  {
    "text": "impact",
    "start": "1309039",
    "end": "1311360"
  },
  {
    "text": "the next one is the location information",
    "start": "1311840",
    "end": "1313520"
  },
  {
    "text": "of the checkpoint artifacts here it is a",
    "start": "1313520",
    "end": "1316559"
  },
  {
    "text": "local storage location but it could be",
    "start": "1316559",
    "end": "1318240"
  },
  {
    "text": "an external storage or an oci registry",
    "start": "1318240",
    "end": "1323120"
  },
  {
    "text": "finally some way to pass the passing the",
    "start": "1323120",
    "end": "1325120"
  },
  {
    "text": "properties again here it is done locally",
    "start": "1325120",
    "end": "1329280"
  },
  {
    "text": "with this we wrap up the non-native",
    "start": "1329679",
    "end": "1331840"
  },
  {
    "text": "solution for checkpoint restore in",
    "start": "1331840",
    "end": "1333440"
  },
  {
    "text": "kubernetes",
    "start": "1333440",
    "end": "1334880"
  },
  {
    "text": "and this zero to checkpoint restoring",
    "start": "1334880",
    "end": "1336960"
  },
  {
    "text": "kubernetes should give a complete",
    "start": "1336960",
    "end": "1338640"
  },
  {
    "text": "picture",
    "start": "1338640",
    "end": "1339919"
  },
  {
    "text": "of what it looks like",
    "start": "1339919",
    "end": "1343120"
  },
  {
    "text": "for native support i would encourage you",
    "start": "1343840",
    "end": "1345679"
  },
  {
    "text": "all to attend adrian rivers talk",
    "start": "1345679",
    "end": "1347520"
  },
  {
    "text": "tomorrow",
    "start": "1347520",
    "end": "1348720"
  },
  {
    "text": "to learn more on the vision of adding",
    "start": "1348720",
    "end": "1350400"
  },
  {
    "text": "checkpoint rush to support in kubernetes",
    "start": "1350400",
    "end": "1352559"
  },
  {
    "text": "natively",
    "start": "1352559",
    "end": "1354559"
  },
  {
    "text": "there is also an existing cap created",
    "start": "1354559",
    "end": "1356720"
  },
  {
    "text": "and owned by adrian ripper on adding",
    "start": "1356720",
    "end": "1358559"
  },
  {
    "text": "checkpoint risk to support natively in",
    "start": "1358559",
    "end": "1360480"
  },
  {
    "text": "kubernetes",
    "start": "1360480",
    "end": "1362480"
  },
  {
    "text": "adrian stock and cap focuses on one of",
    "start": "1362480",
    "end": "1365120"
  },
  {
    "text": "the use cases of checkpoint restore",
    "start": "1365120",
    "end": "1366799"
  },
  {
    "text": "called pod migration",
    "start": "1366799",
    "end": "1368960"
  },
  {
    "text": "it doesn't take on other use cases yet",
    "start": "1368960",
    "end": "1370960"
  },
  {
    "text": "in its initial phase",
    "start": "1370960",
    "end": "1373760"
  },
  {
    "text": "signore meetings are also one of the",
    "start": "1373760",
    "end": "1375440"
  },
  {
    "text": "other good resource to involve in",
    "start": "1375440",
    "end": "1377120"
  },
  {
    "text": "conversation about checkpoint restore",
    "start": "1377120",
    "end": "1379919"
  },
  {
    "text": "i have been involved in reviewing",
    "start": "1379919",
    "end": "1381440"
  },
  {
    "text": "adrian's proposal and design and have",
    "start": "1381440",
    "end": "1383600"
  },
  {
    "text": "been attending signaled meeting",
    "start": "1383600",
    "end": "1384880"
  },
  {
    "text": "discussions around the native support",
    "start": "1384880",
    "end": "1388159"
  },
  {
    "text": "i highly recommend to check out these",
    "start": "1388159",
    "end": "1389760"
  },
  {
    "text": "resources if this is something of",
    "start": "1389760",
    "end": "1391760"
  },
  {
    "text": "interest to you and are welcome to",
    "start": "1391760",
    "end": "1393440"
  },
  {
    "text": "review and contribute",
    "start": "1393440",
    "end": "1396480"
  },
  {
    "start": "1396000",
    "end": "1396000"
  },
  {
    "text": "let's go over some of the lessons",
    "start": "1397120",
    "end": "1398960"
  },
  {
    "text": "learned using checkpoint",
    "start": "1398960",
    "end": "1400840"
  },
  {
    "text": "restore one thing to note is that",
    "start": "1400840",
    "end": "1403360"
  },
  {
    "text": "checkpoint restore behavior is sensitive",
    "start": "1403360",
    "end": "1405840"
  },
  {
    "text": "and could have unexpected results if",
    "start": "1405840",
    "end": "1408080"
  },
  {
    "text": "there are additional processes that's",
    "start": "1408080",
    "end": "1410000"
  },
  {
    "text": "added or removed from the container",
    "start": "1410000",
    "end": "1412799"
  },
  {
    "text": "or if there are new network connections",
    "start": "1412799",
    "end": "1414720"
  },
  {
    "text": "at the time of checkpoint",
    "start": "1414720",
    "end": "1416720"
  },
  {
    "text": "it could specially become challenging if",
    "start": "1416720",
    "end": "1419200"
  },
  {
    "text": "it is an application not owned by the",
    "start": "1419200",
    "end": "1421360"
  },
  {
    "text": "team that consumes it and has to control",
    "start": "1421360",
    "end": "1423760"
  },
  {
    "text": "over what goes into and out of the",
    "start": "1423760",
    "end": "1425919"
  },
  {
    "text": "containerized application",
    "start": "1425919",
    "end": "1428960"
  },
  {
    "text": "checkpoint restore has its capabilities",
    "start": "1428960",
    "end": "1430960"
  },
  {
    "text": "and functionalities sprinkled across",
    "start": "1430960",
    "end": "1432960"
  },
  {
    "text": "cryo the tool itself",
    "start": "1432960",
    "end": "1435039"
  },
  {
    "text": "container runtime",
    "start": "1435039",
    "end": "1436799"
  },
  {
    "text": "and even in the kernel",
    "start": "1436799",
    "end": "1439360"
  },
  {
    "text": "so in the past we had to look at",
    "start": "1439360",
    "end": "1441279"
  },
  {
    "text": "different layers of the technological",
    "start": "1441279",
    "end": "1443039"
  },
  {
    "text": "stacks to understand the root cause of",
    "start": "1443039",
    "end": "1445520"
  },
  {
    "text": "some of the issues that we ran into",
    "start": "1445520",
    "end": "1448640"
  },
  {
    "text": "it has been a learning experience",
    "start": "1448640",
    "end": "1450240"
  },
  {
    "text": "throughout this course",
    "start": "1450240",
    "end": "1453120"
  },
  {
    "text": "designing it for specific container",
    "start": "1453279",
    "end": "1455679"
  },
  {
    "text": "runtime would lock you down to the",
    "start": "1455679",
    "end": "1457840"
  },
  {
    "text": "specific implementation",
    "start": "1457840",
    "end": "1459760"
  },
  {
    "text": "and any breaking change in the basic",
    "start": "1459760",
    "end": "1461600"
  },
  {
    "text": "functionality in some of the other",
    "start": "1461600",
    "end": "1463440"
  },
  {
    "text": "components could break the workflow",
    "start": "1463440",
    "end": "1466159"
  },
  {
    "text": "for example there was a change in the",
    "start": "1466159",
    "end": "1468320"
  },
  {
    "text": "way checkpoint location could be",
    "start": "1468320",
    "end": "1470400"
  },
  {
    "text": "specified during restore and docker",
    "start": "1470400",
    "end": "1473039"
  },
  {
    "text": "and though there was no change in the",
    "start": "1473039",
    "end": "1474720"
  },
  {
    "text": "lower container runtime like run c",
    "start": "1474720",
    "end": "1477520"
  },
  {
    "text": "it broke the docker workflow",
    "start": "1477520",
    "end": "1479919"
  },
  {
    "text": "since we were so tied to using docker",
    "start": "1479919",
    "end": "1482480"
  },
  {
    "text": "runtime it took us some time to",
    "start": "1482480",
    "end": "1485200"
  },
  {
    "text": "make a transition to using different",
    "start": "1485200",
    "end": "1487120"
  },
  {
    "text": "runtime or different version of the",
    "start": "1487120",
    "end": "1489120"
  },
  {
    "text": "docker",
    "start": "1489120",
    "end": "1491600"
  },
  {
    "text": "also trading off between portability and",
    "start": "1491840",
    "end": "1494320"
  },
  {
    "text": "optimization is a difficult task the",
    "start": "1494320",
    "end": "1496880"
  },
  {
    "text": "more optimization",
    "start": "1496880",
    "end": "1498720"
  },
  {
    "text": "in place make sportability more",
    "start": "1498720",
    "end": "1501120"
  },
  {
    "text": "challenging that affects local workflows",
    "start": "1501120",
    "end": "1504159"
  },
  {
    "text": "this might create a gap and allow issues",
    "start": "1504159",
    "end": "1506240"
  },
  {
    "text": "to slip through the cracks",
    "start": "1506240",
    "end": "1508720"
  },
  {
    "text": "and this could be part of late discovery",
    "start": "1508720",
    "end": "1511360"
  },
  {
    "text": "so right balance prevents any gaps that",
    "start": "1511360",
    "end": "1513679"
  },
  {
    "text": "would create with developers local",
    "start": "1513679",
    "end": "1515600"
  },
  {
    "text": "workflow and the cloud environment",
    "start": "1515600",
    "end": "1519440"
  },
  {
    "start": "1519000",
    "end": "1519000"
  },
  {
    "text": "some of these practices listed down here",
    "start": "1519440",
    "end": "1521600"
  },
  {
    "text": "should hold good for any cloud native",
    "start": "1521600",
    "end": "1523200"
  },
  {
    "text": "application and holds good with",
    "start": "1523200",
    "end": "1524799"
  },
  {
    "text": "checkpoint restore 2.",
    "start": "1524799",
    "end": "1527039"
  },
  {
    "text": "highly recommend enabling locks and",
    "start": "1527039",
    "end": "1528720"
  },
  {
    "text": "metrics on checkpoint restore",
    "start": "1528720",
    "end": "1530799"
  },
  {
    "text": "these locks and metrics are really",
    "start": "1530799",
    "end": "1532159"
  },
  {
    "text": "helpful and at the same time maintainers",
    "start": "1532159",
    "end": "1534320"
  },
  {
    "text": "are well accessible to discuss if you",
    "start": "1534320",
    "end": "1536240"
  },
  {
    "text": "run into any issues",
    "start": "1536240",
    "end": "1538240"
  },
  {
    "text": "i'll make this logs and metrics as",
    "start": "1538240",
    "end": "1540320"
  },
  {
    "text": "easily as accessible as possible",
    "start": "1540320",
    "end": "1543360"
  },
  {
    "text": "having that repeatability factor and",
    "start": "1543360",
    "end": "1545600"
  },
  {
    "text": "including checkpoint register in the",
    "start": "1545600",
    "end": "1546880"
  },
  {
    "text": "cicd pipeline would help for quicker",
    "start": "1546880",
    "end": "1548880"
  },
  {
    "text": "detection of any failures or change in",
    "start": "1548880",
    "end": "1550880"
  },
  {
    "text": "behavior",
    "start": "1550880",
    "end": "1553039"
  },
  {
    "text": "since there are different components",
    "start": "1553039",
    "end": "1554320"
  },
  {
    "text": "involved in bringing the checkpoint risk",
    "start": "1554320",
    "end": "1555919"
  },
  {
    "text": "together always make sure to update to",
    "start": "1555919",
    "end": "1558000"
  },
  {
    "text": "the latest in order to get all the",
    "start": "1558000",
    "end": "1559919"
  },
  {
    "text": "required security patches updates and",
    "start": "1559919",
    "end": "1562400"
  },
  {
    "text": "bug fixes",
    "start": "1562400",
    "end": "1565039"
  },
  {
    "text": "there are some things to keep in mind",
    "start": "1565360",
    "end": "1566960"
  },
  {
    "text": "about the limitations and boundaries of",
    "start": "1566960",
    "end": "1568720"
  },
  {
    "text": "cryo in order to design checkpoint",
    "start": "1568720",
    "end": "1570960"
  },
  {
    "text": "register around that",
    "start": "1570960",
    "end": "1572559"
  },
  {
    "text": "for example",
    "start": "1572559",
    "end": "1574480"
  },
  {
    "text": "one thing that comes to my mind is fs",
    "start": "1574480",
    "end": "1576559"
  },
  {
    "text": "notify system",
    "start": "1576559",
    "end": "1578400"
  },
  {
    "text": "we ran into issues with checkpointing a",
    "start": "1578400",
    "end": "1580320"
  },
  {
    "text": "process consisting of inotify and it",
    "start": "1580320",
    "end": "1583919"
  },
  {
    "text": "makes it difficult for cryo to resolve",
    "start": "1583919",
    "end": "1585840"
  },
  {
    "text": "some of these handles with the current",
    "start": "1585840",
    "end": "1588000"
  },
  {
    "text": "implementation of fs notify",
    "start": "1588000",
    "end": "1590960"
  },
  {
    "text": "this is the known limitations",
    "start": "1590960",
    "end": "1592240"
  },
  {
    "text": "undocumented but limitations like this",
    "start": "1592240",
    "end": "1594720"
  },
  {
    "text": "should be good to be aware of",
    "start": "1594720",
    "end": "1598919"
  },
  {
    "start": "1598000",
    "end": "1598000"
  },
  {
    "text": "so what are some of the enhancements",
    "start": "1599279",
    "end": "1600880"
  },
  {
    "text": "that we envision in future with a",
    "start": "1600880",
    "end": "1602960"
  },
  {
    "text": "non-native approach",
    "start": "1602960",
    "end": "1605360"
  },
  {
    "text": "as i mentioned with an initial approach",
    "start": "1605360",
    "end": "1607600"
  },
  {
    "text": "we decided to go with making checkpoint",
    "start": "1607600",
    "end": "1609919"
  },
  {
    "text": "available on the node this need not be",
    "start": "1609919",
    "end": "1612960"
  },
  {
    "text": "the case and it could be made available",
    "start": "1612960",
    "end": "1614880"
  },
  {
    "text": "to the external storage and save on",
    "start": "1614880",
    "end": "1617039"
  },
  {
    "text": "checkpointing for every node",
    "start": "1617039",
    "end": "1619279"
  },
  {
    "text": "this is something we plan to take on",
    "start": "1619279",
    "end": "1621039"
  },
  {
    "text": "moving forward",
    "start": "1621039",
    "end": "1623840"
  },
  {
    "text": "also we can go one step further and make",
    "start": "1623919",
    "end": "1626320"
  },
  {
    "text": "it part of ci cd pipeline",
    "start": "1626320",
    "end": "1629120"
  },
  {
    "text": "and get it closer to the integration and",
    "start": "1629120",
    "end": "1631200"
  },
  {
    "text": "avoid late discoveries",
    "start": "1631200",
    "end": "1634399"
  },
  {
    "text": "current non-native targets the fast",
    "start": "1634880",
    "end": "1636880"
  },
  {
    "text": "startup use case",
    "start": "1636880",
    "end": "1638640"
  },
  {
    "text": "but would eventually could be extended",
    "start": "1638640",
    "end": "1640720"
  },
  {
    "text": "to poor migration as well",
    "start": "1640720",
    "end": "1643600"
  },
  {
    "text": "also the other way",
    "start": "1643600",
    "end": "1645360"
  },
  {
    "text": "current native support in kubernetes",
    "start": "1645360",
    "end": "1649200"
  },
  {
    "text": "targets poor migration but it could be",
    "start": "1649200",
    "end": "1651760"
  },
  {
    "text": "extended to support fast or poor chart",
    "start": "1651760",
    "end": "1654000"
  },
  {
    "text": "up use cases as well",
    "start": "1654000",
    "end": "1656320"
  },
  {
    "start": "1656000",
    "end": "1656000"
  },
  {
    "text": "this brings us to the end of this talk",
    "start": "1656320",
    "end": "1658320"
  },
  {
    "text": "and i am happy to share that mathworks",
    "start": "1658320",
    "end": "1660159"
  },
  {
    "text": "is hiring",
    "start": "1660159",
    "end": "1661520"
  },
  {
    "text": "if you are interested to be part of",
    "start": "1661520",
    "end": "1662960"
  },
  {
    "text": "mathworks feel free to use this qr code",
    "start": "1662960",
    "end": "1665120"
  },
  {
    "text": "that should take you to the careers at",
    "start": "1665120",
    "end": "1666880"
  },
  {
    "text": "mathworks page that list turns the job",
    "start": "1666880",
    "end": "1669120"
  },
  {
    "text": "opportunities at mathworks or get in",
    "start": "1669120",
    "end": "1671279"
  },
  {
    "text": "touch with me",
    "start": "1671279",
    "end": "1673120"
  },
  {
    "text": "i like to thank you all for attending",
    "start": "1673120",
    "end": "1675200"
  },
  {
    "text": "and hope that you got something to take",
    "start": "1675200",
    "end": "1676880"
  },
  {
    "text": "away from this talk we learned a lot",
    "start": "1676880",
    "end": "1679039"
  },
  {
    "text": "during this journey and i think this",
    "start": "1679039",
    "end": "1681120"
  },
  {
    "text": "should be super helpful for building a",
    "start": "1681120",
    "end": "1682799"
  },
  {
    "text": "scalable system",
    "start": "1682799",
    "end": "1685120"
  },
  {
    "text": "i will be available for q a now thank",
    "start": "1685120",
    "end": "1687200"
  },
  {
    "text": "you",
    "start": "1687200",
    "end": "1689600"
  }
]