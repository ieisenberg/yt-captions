[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "thank thank you everybody for joining us today and welcome to today's cmts webinar Calico networking with ebps I'm",
    "start": "2030",
    "end": "10679"
  },
  {
    "text": "Tanner Waggoner the CNC have operations analyst and I'll be moderating today's webinar we would like to welcome our",
    "start": "10679",
    "end": "16560"
  },
  {
    "text": "presenters today Chris Hodge developer advocate for project calico and Sean captained core developer for project Cal",
    "start": "16560",
    "end": "22500"
  },
  {
    "text": "go before we get going I'd like to go over a few housekeeping items during the webinar you are not able to talk as an",
    "start": "22500",
    "end": "29160"
  },
  {
    "text": "attendee there is a Q&A box at the bottom of your screen so please feel free to drop your questions in there",
    "start": "29160",
    "end": "34860"
  },
  {
    "text": "rather than the chat window and we'll get to as many of those we can at the end this is an official CNCs webinar and as",
    "start": "34860",
    "end": "42090"
  },
  {
    "text": "such is subject to those stands you have code of conduct so please do not add anything to the chat or to the Q&A that",
    "start": "42090",
    "end": "48719"
  },
  {
    "text": "would be in violation of our code of conduct so basically please be respectful of all of your fellow participants and",
    "start": "48719",
    "end": "55350"
  },
  {
    "text": "presenters please note that the recording and slides for today's webinar will be posted to the CN CF webinar page",
    "start": "55350",
    "end": "62340"
  },
  {
    "text": "and this afternoon at CN CF do slash webinars with that Chris for today's",
    "start": "62340",
    "end": "70590"
  },
  {
    "text": "presentation they're good to everybody and thanks for joining us this is today",
    "start": "70590",
    "end": "78420"
  },
  {
    "text": "we're going to be talking about Cal code networking with eb PF and we're gonna cover a lot during the presentation it's",
    "start": "78420",
    "end": "85710"
  },
  {
    "text": "it's a pretty exciting feature that we just unveiled a few days ago with the latest calico 3.13 release and so we're",
    "start": "85710",
    "end": "92700"
  },
  {
    "text": "pretty excited to be talking about it and to and to share though what's and",
    "start": "92700",
    "end": "99450"
  },
  {
    "text": "the whys of EP PF networking with you so if we go on to the next slide and",
    "start": "99450",
    "end": "107220"
  },
  {
    "start": "105000",
    "end": "270000"
  },
  {
    "text": "speaking with today is going to be Sean Crampton who is one of the core developers on this feature and so he has",
    "start": "107220",
    "end": "113610"
  },
  {
    "text": "a tremendous amount of knowledge about the implementation and how it works and the benefits from it and so we're gonna",
    "start": "113610",
    "end": "119430"
  },
  {
    "text": "have a little bit of a Q&A session with him so that he can talk about why you know why we implemented this and and how",
    "start": "119430",
    "end": "126540"
  },
  {
    "text": "it works and so welcome Sean for the first question what prompted the team",
    "start": "126540",
    "end": "133530"
  },
  {
    "text": "add another data plane to calico so from",
    "start": "133530",
    "end": "139800"
  },
  {
    "text": "the very beginning we design calico with with kind of political data planes in mind a general kind of philosophy on",
    "start": "139800",
    "end": "148860"
  },
  {
    "text": "this is like we want to use the best tool for the job so when we first started with calico we",
    "start": "148860",
    "end": "156660"
  },
  {
    "text": "went for tried-and-true technologies we went for standard Linux networking with",
    "start": "156660",
    "end": "162690"
  },
  {
    "text": "IP tables we used BGP in our networking side because that's that's kind of",
    "start": "162690",
    "end": "171450"
  },
  {
    "text": "proving the internet scale and that that's kind of great for a lot of a lot",
    "start": "171450",
    "end": "179070"
  },
  {
    "text": "of use cases and as I say kind of it's great if you want to stick with we've kind of tried and true technologies and",
    "start": "179070",
    "end": "185459"
  },
  {
    "text": "you're fairly conservative then Along Came Windows and we added a as a second",
    "start": "185459",
    "end": "195570"
  },
  {
    "text": "data plane so so we've got a second pluggable data point Windows H and s",
    "start": "195570",
    "end": "200640"
  },
  {
    "text": "based and that's in our commercial offering on top of calico but one of the",
    "start": "200640",
    "end": "207030"
  },
  {
    "text": "things is the best tool for the job is not a static a static thing and there's been a lot of innovation going on in the",
    "start": "207030",
    "end": "214320"
  },
  {
    "text": "kernel that the Linux kernel in this case and one of the things that they've been adding is is this EBP F technology",
    "start": "214320",
    "end": "223280"
  },
  {
    "text": "and it's kind of reached the point where as it's starting to be useful it's",
    "start": "223280",
    "end": "228360"
  },
  {
    "text": "starting to be deployed and and we think it's it's worth investing in now we're",
    "start": "228360",
    "end": "236700"
  },
  {
    "text": "where before we which stuck with the more conservative choices on the other",
    "start": "236700",
    "end": "242430"
  },
  {
    "text": "side like there's a lot of enterprises who are out there who are not going to want to run the latest kernels with that",
    "start": "242430",
    "end": "249120"
  },
  {
    "text": "the bleeding edge technology in it and and for those we have the you know tried",
    "start": "249120",
    "end": "254220"
  },
  {
    "text": "and true technology that we did we had there already and yeah we just want to future-proof calico and make sure that",
    "start": "254220",
    "end": "261950"
  },
  {
    "text": "that we're we're ready as as the technology develops and with still",
    "start": "261950",
    "end": "267090"
  },
  {
    "text": "the job okay so so II BPF is is a new",
    "start": "267090",
    "end": "273000"
  },
  {
    "start": "270000",
    "end": "455000"
  },
  {
    "text": "technology that's inside of the Linux kernel but you know being new there may",
    "start": "273000",
    "end": "278130"
  },
  {
    "text": "be people who haven't heard about it or you know know the the power that it has so what exactly is EBP eff yes so ii BPF",
    "start": "278130",
    "end": "292310"
  },
  {
    "text": "it's a technology that lets you run kind of little mini programs inside the",
    "start": "292310",
    "end": "297810"
  },
  {
    "text": "kernel and and they run when things happen in the kernel so it's kind of event-driven there's been a bit of hype",
    "start": "297810",
    "end": "306479"
  },
  {
    "text": "around it but the the big idea is that you can write a program compile it to",
    "start": "306479",
    "end": "313880"
  },
  {
    "text": "ebps bytecode so it's a virtual machine a bit like a java virtual machine or",
    "start": "313880",
    "end": "319620"
  },
  {
    "text": "something like that if you if you're familiar with that and then you load it into the kernel and you don't you don't",
    "start": "319620",
    "end": "327870"
  },
  {
    "text": "need to give it all kinds of permissions so when you load it into the kernel the",
    "start": "327870",
    "end": "334580"
  },
  {
    "text": "kernel verifies that that code is safe so it verifies that it can't go off and",
    "start": "334580",
    "end": "339780"
  },
  {
    "text": "access arbitrary kernel memory or like panic your kernel or like blow something",
    "start": "339780",
    "end": "346979"
  },
  {
    "text": "up the ebps program is is kind of verified to make sure that it can only",
    "start": "346979",
    "end": "352169"
  },
  {
    "text": "do a certain range of things and it's verified to make sure it can't tight",
    "start": "352169",
    "end": "357180"
  },
  {
    "text": "loop or kind of run forever it has to pass the terminate and and it's kind of",
    "start": "357180",
    "end": "362190"
  },
  {
    "text": "limited in that way but another another",
    "start": "362190",
    "end": "368669"
  },
  {
    "text": "aspect is its verified to make sure it can only call certain helper functions so your BPF code can do calculations but",
    "start": "368669",
    "end": "378030"
  },
  {
    "text": "if it wants to kind of affect the environment or affect the world around it it has to go through a helper those",
    "start": "378030",
    "end": "383580"
  },
  {
    "text": "are all policed and so it's quite a lockdown environment but it runs all the way in the kernel where it can run very",
    "start": "383580",
    "end": "390330"
  },
  {
    "text": "very fast it's all kind of compiled down to real machine code when you load it in",
    "start": "390330",
    "end": "396050"
  },
  {
    "text": "and it doesn't have to jump between user mode and to do things that it can it can run",
    "start": "396050",
    "end": "402659"
  },
  {
    "text": "right at full speed inside the kernel in in a kind of very streamlined way I",
    "start": "402659",
    "end": "410840"
  },
  {
    "text": "talked about compilation and and the technology were using to kind of build",
    "start": "410840",
    "end": "416039"
  },
  {
    "text": "our BPF programs we're writing them in C and then compiling them down with the",
    "start": "416039",
    "end": "421770"
  },
  {
    "text": "clang compiler so clang now has a back-end that targets EBP F and",
    "start": "421770",
    "end": "427379"
  },
  {
    "text": "generates these byte code programs yeah big big idea is we can run little mini",
    "start": "427379",
    "end": "434250"
  },
  {
    "text": "programs inside the kernel they can run fast and they can do interesting things",
    "start": "434250",
    "end": "439379"
  },
  {
    "text": "that like make different decisions than what the kernel might do on its own and",
    "start": "439379",
    "end": "445949"
  },
  {
    "text": "and bypass things that the kernel might might do that we're taking taking a",
    "start": "445949",
    "end": "451139"
  },
  {
    "text": "longer time so that's that sounds really",
    "start": "451139",
    "end": "456150"
  },
  {
    "start": "455000",
    "end": "645000"
  },
  {
    "text": "cool so when you're when you have these eb PF programs what what sort of things",
    "start": "456150",
    "end": "462210"
  },
  {
    "text": "can you do with them like what what's the power that it unlocks for firt for developers and users yeah so it's it's",
    "start": "462210",
    "end": "469819"
  },
  {
    "text": "it's quite a broad set of set of features so the original purpose of BPF",
    "start": "469819",
    "end": "482370"
  },
  {
    "text": "like before it was EBP F which is extended BPF remember correctly there",
    "start": "482370",
    "end": "489870"
  },
  {
    "text": "was BPF which was was designed for filtering packets and it's used by tcp",
    "start": "489870",
    "end": "495270"
  },
  {
    "text": "dump if you've ever used that program so TCP dump loads in a program that says give me these packets and they a sent up",
    "start": "495270",
    "end": "502139"
  },
  {
    "text": "to use a space that was the original original idea behind it I think but then",
    "start": "502139",
    "end": "508080"
  },
  {
    "text": "once that technology was in there and the virtual machine was in there it got extended and expanded with with",
    "start": "508080",
    "end": "513750"
  },
  {
    "text": "additional features and the modern variant has become quite powerful one",
    "start": "513750",
    "end": "520190"
  },
  {
    "text": "one use case in there is its security so it got some use for set comp filters so",
    "start": "520190",
    "end": "528690"
  },
  {
    "text": "those allow you to police various thing various operations",
    "start": "528690",
    "end": "534600"
  },
  {
    "text": "user space programs can do with the kernel so they caught make a sis call into the kernel and and you can police",
    "start": "534600",
    "end": "541670"
  },
  {
    "text": "what files that sis call is allowed to access or what you know what the parameters to that are allowed to be and",
    "start": "541670",
    "end": "549330"
  },
  {
    "text": "your PDF program would run on the data that was passed to the kernel and you could decide is this okay or not another",
    "start": "549330",
    "end": "556380"
  },
  {
    "text": "aspect is logging and tracing and so there's a very flexible set of hooks",
    "start": "556380",
    "end": "563400"
  },
  {
    "text": "inside the kernel where you can basically hook a very large percentage",
    "start": "563400",
    "end": "568680"
  },
  {
    "text": "of the functions in the kernel and run a little bit of code that kind of snoops",
    "start": "568680",
    "end": "574740"
  },
  {
    "text": "on what that function is doing it can't really affect what the function is doing but it can snoop on it and record some",
    "start": "574740",
    "end": "581070"
  },
  {
    "text": "information that you can pick up later so you can you could record how long that function took or you could record",
    "start": "581070",
    "end": "587990"
  },
  {
    "text": "like what the arguments of the function were and people are using that for all kinds of exciting things but it's kind",
    "start": "587990",
    "end": "594840"
  },
  {
    "text": "of not not exciting what we're doing and the there's sort of next class of things",
    "start": "594840",
    "end": "600420"
  },
  {
    "text": "is is it's kind of the meat of what we're we're doing so network routing and",
    "start": "600420",
    "end": "606060"
  },
  {
    "text": "and packet filtering so there's some some very like specific hooks in the",
    "start": "606060",
    "end": "611670"
  },
  {
    "text": "kernel that are designed especially for doing networking operations so we have",
    "start": "611670",
    "end": "618570"
  },
  {
    "text": "hooks where where packets are being processed and we get handed the packet",
    "start": "618570",
    "end": "624150"
  },
  {
    "text": "data so we can inspect it and and decide what to do with it I'm some very some",
    "start": "624150",
    "end": "629220"
  },
  {
    "text": "very powerful helper functions in those those hooks that allow us to do quite",
    "start": "629220",
    "end": "634830"
  },
  {
    "text": "powerful things so yeah it's it's a very broad technology and there's lots of exciting things going on in the",
    "start": "634830",
    "end": "640260"
  },
  {
    "text": "ecosystem we're focused on that networking side of it okay so you so you",
    "start": "640260",
    "end": "646140"
  },
  {
    "start": "645000",
    "end": "965000"
  },
  {
    "text": "have this really powerful technology at your hands and you also have an existing data plane that is very highly regarded",
    "start": "646140",
    "end": "653520"
  },
  {
    "text": "and provides all sorts of features so when you have these two and you're bringing them together how do you figure out what to build and and what's your",
    "start": "653520",
    "end": "660330"
  },
  {
    "text": "design and development process right yes",
    "start": "660330",
    "end": "665480"
  },
  {
    "text": "too far like so I guess we we didn't",
    "start": "666970",
    "end": "673810"
  },
  {
    "text": "just want to kind of I guess jump on the bandwagon and slap EVP F on the on the",
    "start": "673810",
    "end": "679260"
  },
  {
    "text": "product Wesley went back to back to back to",
    "start": "679260",
    "end": "684370"
  },
  {
    "text": "basics and kind of evaluated a whole range of technologies so the various",
    "start": "684370",
    "end": "691800"
  },
  {
    "text": "various ways where we wanted to improve on the the previous data plane so we",
    "start": "691800",
    "end": "697390"
  },
  {
    "text": "went we went and we looked at various different types of eb PF approach we",
    "start": "697390",
    "end": "703210"
  },
  {
    "text": "looked at whether we could use the xdp",
    "start": "703210",
    "end": "709000"
  },
  {
    "text": "hooks which are quite exciting and some some projects use those so it's a",
    "start": "709000",
    "end": "715300"
  },
  {
    "text": "facebook had a project that was using that that's an e BBF hook that can run all the way down in the network card and",
    "start": "715300",
    "end": "721960"
  },
  {
    "text": "that was pretty exciting so we looked at that we looked at the traffic control EBV F hook so the TC layer if you're",
    "start": "721960",
    "end": "729280"
  },
  {
    "text": "familiar with those tools and we looked at getting involved in socket processing",
    "start": "729280",
    "end": "734590"
  },
  {
    "text": "as well we also compared that to NF tables wit so the current the current",
    "start": "734590",
    "end": "741540"
  },
  {
    "text": "standard Linux data plane for for calico uses IP tables and n F tables is kind of",
    "start": "741540",
    "end": "749140"
  },
  {
    "text": "the version two of IP tables so we've investigated that and we also looked at",
    "start": "749140",
    "end": "755650"
  },
  {
    "text": "different networking approaches as well so IP VLAN versus our current current",
    "start": "755650",
    "end": "761560"
  },
  {
    "text": "approach which is using bethe devices we built a bunch of prototypes and we spend",
    "start": "761560",
    "end": "768070"
  },
  {
    "text": "a few months digging into the performance of those those different prototypes and we found that we found",
    "start": "768070",
    "end": "776740"
  },
  {
    "text": "some surprises there so NF tables as IP tables version 2 is generally quite a",
    "start": "776740",
    "end": "782890"
  },
  {
    "text": "bit slower than IP tables which were disappointing and I think they say you know it's a kind of version 1 of the",
    "start": "782890",
    "end": "790150"
  },
  {
    "text": "version 2 and they're still working on the performance so the main driver for building NF tables wasn't really",
    "start": "790150",
    "end": "797230"
  },
  {
    "text": "performance it was it was the API complex and so on and they wanted to improve that so there's still got some work to",
    "start": "797230",
    "end": "804520"
  },
  {
    "text": "do on the performance there and we looked at XT P because it has this exciting like hardware offload",
    "start": "804520",
    "end": "811300"
  },
  {
    "text": "capability it can run all the way in the network card if if supported but we",
    "start": "811300",
    "end": "816730"
  },
  {
    "text": "found that had a lot of a lot of corner cases that come with it so if you have",
    "start": "816730",
    "end": "822220"
  },
  {
    "text": "exactly the right hardware and you're doing exactly what it's designed for then you can you can push millions of",
    "start": "822220",
    "end": "828550"
  },
  {
    "text": "packets per second and it's it's fantastic but if you're if you're needing to in to work with the various",
    "start": "828550",
    "end": "836890"
  },
  {
    "text": "other things that we were using so vet devices for the pod networking and and",
    "start": "836890",
    "end": "843880"
  },
  {
    "text": "the like then we were found we found that that was it came out slower or it had it had issues where you had",
    "start": "843880",
    "end": "851290"
  },
  {
    "text": "mismatches between the the type of XDP that was supported on different devices and things like that and and that that",
    "start": "851290",
    "end": "858150"
  },
  {
    "text": "made that prototype very hard to get going so we ended up settling on the the",
    "start": "858150",
    "end": "865510"
  },
  {
    "text": "TCB PF hooks which seem to be the most the most mature so those allow us to run",
    "start": "865510",
    "end": "871710"
  },
  {
    "text": "BF programs on packets quite early in the pipeline so that the packet arrives",
    "start": "871710",
    "end": "877660"
  },
  {
    "text": "and the buffer gets allocated for it and then our program gets to run and we get to inspect the packet and decide what we",
    "start": "877660",
    "end": "884170"
  },
  {
    "text": "do with it they're also quite powerful so we can we can do things like redirect the packet if we want to bypass a bunch",
    "start": "884170",
    "end": "892540"
  },
  {
    "text": "of the colonel's processing we can have a packet come in and redirect it out of another interface if we've if we've kind",
    "start": "892540",
    "end": "898960"
  },
  {
    "text": "of figured out that we have a fast path for that particular packet so a lot of this is about finding fast paths where",
    "start": "898960",
    "end": "906010"
  },
  {
    "text": "them where the majority of packets can take some kind of fast path but then we fall back to the normal kernel",
    "start": "906010",
    "end": "911710"
  },
  {
    "text": "processing if if that doesn't work for the particular packet yeah so I think",
    "start": "911710",
    "end": "918490"
  },
  {
    "text": "yeah we spent spent a few months building towards having a having a sort",
    "start": "918490",
    "end": "923770"
  },
  {
    "text": "of consistent design I mentioned IP VLANs another surprise that we had there",
    "start": "923770",
    "end": "931060"
  },
  {
    "text": "was i pv lands were way slower than we thought going to be like we thought that was a an interesting technology to check out",
    "start": "931060",
    "end": "938350"
  },
  {
    "text": "for pod networking but we tested it on like a colonel in the 415 sort of range",
    "start": "938350",
    "end": "946690"
  },
  {
    "text": "and it turned out there been a massive performance regression and and it it was really really slow and that wasn't fixed",
    "start": "946690",
    "end": "953500"
  },
  {
    "text": "until a really recent colonel so we we got what we got put off that one and and then like maybe we're looking to it",
    "start": "953500",
    "end": "960339"
  },
  {
    "text": "again later when now it's back to performing reasonably okay so so you",
    "start": "960339",
    "end": "966519"
  },
  {
    "text": "spend a couple months considering the options considering performance requirements and and I imagine that you",
    "start": "966519",
    "end": "973480"
  },
  {
    "text": "know if you put that much work into it that you know it's not just like a you",
    "start": "973480",
    "end": "978670"
  },
  {
    "text": "know a complete line for line replacement for the existing implementation so so exactly what are",
    "start": "978670",
    "end": "984940"
  },
  {
    "text": "the differences you know from from the from the eb PF and implementation and the the traditional Linux networking",
    "start": "984940",
    "end": "992079"
  },
  {
    "text": "implementation yeah so like first of all",
    "start": "992079",
    "end": "997300"
  },
  {
    "text": "I think the key thing to notice we're aiming for the same user experience so you define your your policy in the same",
    "start": "997300",
    "end": "1004230"
  },
  {
    "text": "way with what we've kept the same routed approach to networking so we use the",
    "start": "1004230",
    "end": "1011130"
  },
  {
    "text": "Linux routing table still if you're if you're using calicoes like networking",
    "start": "1011130",
    "end": "1018930"
  },
  {
    "text": "like calicoes various networking modes like BGP or IP IP or VX LAN",
    "start": "1018930",
    "end": "1025110"
  },
  {
    "text": "they work the same way with routed [Music] routing the traffic around and the the",
    "start": "1025110",
    "end": "1032640"
  },
  {
    "text": "scalability and the coma calculation engine is all the all the same with with",
    "start": "1032640",
    "end": "1038579"
  },
  {
    "text": "the new data finalists that's where we want to be for 4G a we haven't haven't",
    "start": "1038579",
    "end": "1043709"
  },
  {
    "text": "tested to sort of full scale yet I would say just just a little caveat so we want",
    "start": "1043709",
    "end": "1049380"
  },
  {
    "text": "to keep a lot of that the same but basically I sort of alluded to it before but we're we're looking for fast paths",
    "start": "1049380",
    "end": "1057240"
  },
  {
    "text": "where we can pick up a packet early we can spot that this packet is destined",
    "start": "1057240",
    "end": "1063840"
  },
  {
    "text": "for a particular pod or this packet is going to a server or whatever it is and we can say rather",
    "start": "1063840",
    "end": "1069800"
  },
  {
    "text": "than sending it through layer after layer of my IP tables and the and the",
    "start": "1069800",
    "end": "1075050"
  },
  {
    "text": "the normal Linux stack we'll just take that back in and we'll we'll fast path",
    "start": "1075050",
    "end": "1080300"
  },
  {
    "text": "it to some some other destinations so if it's a local pod packet will check have",
    "start": "1080300",
    "end": "1086840"
  },
  {
    "text": "we have we already done a policy calculation to verify that this flow is is good to go with a networking policy",
    "start": "1086840",
    "end": "1094700"
  },
  {
    "text": "and if it is then we'll we'll just redirect that packet directly to the vet and we'll skip a whole bunch of",
    "start": "1094700",
    "end": "1100520"
  },
  {
    "text": "processing in the middle so that that's the kind of the goal here is to sort of",
    "start": "1100520",
    "end": "1106190"
  },
  {
    "text": "maintain the outward appearance speed up things with fast paths and then also to",
    "start": "1106190",
    "end": "1112760"
  },
  {
    "text": "try and improve some of the behavior that that would that was suboptimal as",
    "start": "1112760",
    "end": "1119210"
  },
  {
    "text": "well so one of the things that we found fairly early on is when we combine some",
    "start": "1119210",
    "end": "1126830"
  },
  {
    "text": "of calicoes like calicoes like unique features like we support host endpoint",
    "start": "1126830",
    "end": "1133730"
  },
  {
    "text": "policy and things like that where you you can secure your host I think calling",
    "start": "1133730",
    "end": "1139370"
  },
  {
    "text": "that micro segmentation people are familiar with that that term where you can secure your host as well as your workloads your pubs in",
    "start": "1139370",
    "end": "1146420"
  },
  {
    "text": "kubernetes when you combine those two we were kind of pushed in a particular",
    "start": "1146420",
    "end": "1152240"
  },
  {
    "text": "direction with our with our design and that led us to think that we need to",
    "start": "1152240",
    "end": "1158690"
  },
  {
    "text": "take over some responsibility from cube proxy as well so we actually we sort of",
    "start": "1158690",
    "end": "1164000"
  },
  {
    "text": "forced into implementing a reimplementation of cube proxy and then",
    "start": "1164000",
    "end": "1170030"
  },
  {
    "text": "we thought how can we improve on that so we've managed to improve on some of the aspects and some of the pain points of",
    "start": "1170030",
    "end": "1175730"
  },
  {
    "text": "cube proxy particularly when you put it with network policy which if have tripped up users in the past so so we've",
    "start": "1175730",
    "end": "1182600"
  },
  {
    "text": "we've tried to keep the sort of good things about calicos data pain where",
    "start": "1182600",
    "end": "1190370"
  },
  {
    "text": "we've where we've taken over from cube proxy we tried to improve on on the behavior there and yet the remaining",
    "start": "1190370",
    "end": "1199700"
  },
  {
    "text": "point to say is we quite a new kernel to do some of the things that we're doing so okay we",
    "start": "1199700",
    "end": "1204890"
  },
  {
    "text": "targeted kernel 5.3 in this in this release okay so you have a newer kernel huh you have",
    "start": "1204890",
    "end": "1211220"
  },
  {
    "start": "1210000",
    "end": "1425000"
  },
  {
    "text": "a virtual machine that is helping you prioritize the the fast path and you've",
    "start": "1211220",
    "end": "1218000"
  },
  {
    "text": "rewritten cube proxy so with all of this work behind you what improvements does",
    "start": "1218000",
    "end": "1223730"
  },
  {
    "text": "it actually bring like are you are you are you seeing performance improvements or you know what are the what are the benefits of e BPF over the the",
    "start": "1223730",
    "end": "1230150"
  },
  {
    "text": "traditional data plane yeah and just just like when you say we we rewritten",
    "start": "1230150",
    "end": "1236480"
  },
  {
    "text": "keep proxy I think we we've tried to keep as much common code with the oj proxy as possible so we we really hate",
    "start": "1236480",
    "end": "1244160"
  },
  {
    "text": "like reimplemented something we we much prefer to kind of stay stay compatible",
    "start": "1244160",
    "end": "1250970"
  },
  {
    "text": "with with other things but it it's that combination of needing to support",
    "start": "1250970",
    "end": "1256010"
  },
  {
    "text": "features that host endpoints that are not actually implemented yet in the in",
    "start": "1256010",
    "end": "1261140"
  },
  {
    "text": "the root in the release there but yeah but but they're required by the design we saw we sort of got forced into it but",
    "start": "1261140",
    "end": "1266450"
  },
  {
    "text": "then we thought if we're gonna do it let's let's see what we do we can do yeah so it's less are-- implementation",
    "start": "1266450",
    "end": "1272150"
  },
  {
    "text": "and more of a custom optimization based on the the changes that are needed",
    "start": "1272150",
    "end": "1279730"
  },
  {
    "text": "okay we've kind of got a different data plane for cube proxy but they could be",
    "start": "1279730",
    "end": "1285320"
  },
  {
    "text": "like calculation is is shared code with okay all right so it's so it's still so",
    "start": "1285320",
    "end": "1291620"
  },
  {
    "text": "it's still okay that's that's that's that that's great to know so what improvements does it all bring",
    "start": "1291620",
    "end": "1298460"
  },
  {
    "text": "like what's the what's the final outcome and result of this yes so one of the one",
    "start": "1298460",
    "end": "1306260"
  },
  {
    "text": "of the improvements is throughput and so we did some testing on a pair of",
    "start": "1306260",
    "end": "1314500"
  },
  {
    "text": "physical machines in our lab with back-to-back 40 gig links I'm this this",
    "start": "1314500",
    "end": "1322070"
  },
  {
    "text": "is just fairly simple testing we used a tool called Cooper which is mostly single threaded and it's it's you know",
    "start": "1322070",
    "end": "1328670"
  },
  {
    "text": "somewhat optimized but it's not like it's not totally pushing the limit so it's",
    "start": "1328670",
    "end": "1335559"
  },
  {
    "text": "but we found that when you have these optimizations in and you have the have the fast paths in there we're getting",
    "start": "1335559",
    "end": "1343880"
  },
  {
    "text": "higher throughput with a single threaded test like queue birth and if we measure",
    "start": "1343880",
    "end": "1349039"
  },
  {
    "text": "the CPU usage per packet where we're using less CPU and quite significantly",
    "start": "1349039",
    "end": "1354590"
  },
  {
    "text": "less in when you're dealing with small packets so if you're if you're in a data",
    "start": "1354590",
    "end": "1361309"
  },
  {
    "text": "center and you're doing mostly east-west traffic and your MTU is a nice you know",
    "start": "1361309",
    "end": "1366620"
  },
  {
    "text": "9000 or something like that and so you can put really big packets then the difference is fairly small so",
    "start": "1366620",
    "end": "1372950"
  },
  {
    "text": "that's the that's the graphs on the on the right of the of the picture here so",
    "start": "1372950",
    "end": "1379059"
  },
  {
    "text": "MTU we were testing with eight eight nine four zero because that's that's the",
    "start": "1379059",
    "end": "1384950"
  },
  {
    "text": "MTU of our hardware you get a small improvement but if you if you're pushing",
    "start": "1384950",
    "end": "1390980"
  },
  {
    "text": "internet size packet so you know small 15 1,500 byte packets then the reduce",
    "start": "1390980",
    "end": "1398090"
  },
  {
    "text": "CPU per packet and bypassing a bunch of that that logic does give you a higher",
    "start": "1398090",
    "end": "1403159"
  },
  {
    "text": "throughput at least with a single threaded test but that whether it's single threaded or not you're seeing",
    "start": "1403159",
    "end": "1409399"
  },
  {
    "text": "lower CPU usage for your your networking stack which is which is a win for for",
    "start": "1409399",
    "end": "1415519"
  },
  {
    "text": "any pretty much any workload I think so",
    "start": "1415519",
    "end": "1422600"
  },
  {
    "text": "that's one advantage the other one with our Q proxy implementation so there's",
    "start": "1422600",
    "end": "1428570"
  },
  {
    "start": "1425000",
    "end": "1605000"
  },
  {
    "text": "three lines here what what we're measuring here is the TCP handshake time",
    "start": "1428570",
    "end": "1433820"
  },
  {
    "text": "to a to a service so if you if you run",
    "start": "1433820",
    "end": "1439820"
  },
  {
    "text": "like curl to curl an engine X quad that's I think that's how we collected these numbers so you're just doing a",
    "start": "1439820",
    "end": "1446360"
  },
  {
    "text": "simple curl test but you tell it you you pass the verbose argument and tell it to",
    "start": "1446360",
    "end": "1452440"
  },
  {
    "text": "logout all the detailed connection statistics so the first thing that happens in a TCP connection is you have",
    "start": "1452440",
    "end": "1459380"
  },
  {
    "text": "one packet there and one packet back and then an acknowledgment that like forms",
    "start": "1459380",
    "end": "1465080"
  },
  {
    "text": "the TCP handshake and the the the TCP handshake pays quite",
    "start": "1465080",
    "end": "1471350"
  },
  {
    "text": "a high price for when you're doing load balancing because when you when you send",
    "start": "1471350",
    "end": "1478129"
  },
  {
    "text": "that first packet it has to do a load balancing calculation to figure out which back-end do I send this to and",
    "start": "1478129",
    "end": "1484399"
  },
  {
    "text": "then it stores that in a connection tracking table so the next packet doesn't pay much of a price so what",
    "start": "1484399",
    "end": "1491570"
  },
  {
    "text": "we're trying to measure here is that first packet latency or the handshake latency so packet in each direction and",
    "start": "1491570",
    "end": "1498729"
  },
  {
    "text": "for IP tables cue proxy what you see is",
    "start": "1498729",
    "end": "1503899"
  },
  {
    "text": "that as the number of services goes up then the latency goes up linearly and",
    "start": "1503899",
    "end": "1509029"
  },
  {
    "text": "that's just due to the implementation of IP tables so you just have a linear set",
    "start": "1509029",
    "end": "1514789"
  },
  {
    "text": "of rules that say if it's this service then do this if it's this other service",
    "start": "1514789",
    "end": "1520429"
  },
  {
    "text": "then do this if it's this service to that and the more services you have the more rules you have to traverse to find",
    "start": "1520429",
    "end": "1526639"
  },
  {
    "text": "the service that you're looking for so the the longer it takes for that first packet subsequent packets flow really",
    "start": "1526639",
    "end": "1534200"
  },
  {
    "text": "fast on on all the data planes because the the connection tracking kicks in but",
    "start": "1534200",
    "end": "1540229"
  },
  {
    "text": "one of the things that the cube proxy IP vs mode was designed to address is is",
    "start": "1540229",
    "end": "1545869"
  },
  {
    "text": "that issue where you have more services means more latency and we do pretty well",
    "start": "1545869",
    "end": "1550879"
  },
  {
    "text": "on this too so we've in this in this particular test come out slightly ahead",
    "start": "1550879",
    "end": "1556729"
  },
  {
    "text": "of even IP vsq proxy where you know we're shaving fractions of a millisecond",
    "start": "1556729",
    "end": "1562519"
  },
  {
    "text": "off that and then if you have lots of services then IP vs or RB PF they",
    "start": "1562519",
    "end": "1568729"
  },
  {
    "text": "deplane away better than then iptables cube proxy that said the the top of this",
    "start": "1568729",
    "end": "1577369"
  },
  {
    "text": "graph is 1.5 milliseconds so if you have 10,000 services you're paying a",
    "start": "1577369",
    "end": "1582970"
  },
  {
    "text": "millisecond cost but your your latency across the internet might be a hundred milliseconds so depending on your use",
    "start": "1582970",
    "end": "1590330"
  },
  {
    "text": "case you may or not notice this kind of thing but it but it is a nice a nice win that we get that get that number as low",
    "start": "1590330",
    "end": "1597349"
  },
  {
    "text": "as possible [Music] okay so yeah that's that one another",
    "start": "1597349",
    "end": "1607730"
  },
  {
    "start": "1605000",
    "end": "1740000"
  },
  {
    "text": "another nice feature is the the way we",
    "start": "1607730",
    "end": "1615470"
  },
  {
    "text": "update the data plane for BPF has the it",
    "start": "1615470",
    "end": "1621110"
  },
  {
    "text": "can be more efficient than the Nyepi tables and ipbs so just the kernel API",
    "start": "1621110",
    "end": "1629300"
  },
  {
    "text": "is that we use to update IP tables ipbs and BPF are all quite different and the",
    "start": "1629300",
    "end": "1637990"
  },
  {
    "text": "IP tables cube proxy uses quite a lot of CPU like measuring across the whole host",
    "start": "1637990",
    "end": "1645110"
  },
  {
    "text": "so including like the kernel CPU and the IP tables program itself it uses quite a",
    "start": "1645110",
    "end": "1652790"
  },
  {
    "text": "lot of CPU to do its updates so in this test we set up 5,000 services and then",
    "start": "1652790",
    "end": "1658760"
  },
  {
    "text": "we turn the service added and removed a service I think so each time the service",
    "start": "1658760",
    "end": "1666020"
  },
  {
    "text": "gets added and removed it causes causes some CPU usage in the in the control",
    "start": "1666020",
    "end": "1672050"
  },
  {
    "text": "plane and the data plane when you add that all up IP tables cube proxy and IP",
    "start": "1672050",
    "end": "1678350"
  },
  {
    "text": "vsq perhaps you use quite a bit of CPU where as updating the BPF data",
    "start": "1678350",
    "end": "1683690"
  },
  {
    "text": "structures in the kernel is quite a bit more efficient we can do very precise little Delta updates to the to the the",
    "start": "1683690",
    "end": "1692330"
  },
  {
    "text": "information in the kernel yeah programs are working with so we we've",
    "start": "1692330",
    "end": "1697610"
  },
  {
    "text": "kind of very low in it solving the noise versus the CPI usage yeah yeah the",
    "start": "1697610",
    "end": "1705080"
  },
  {
    "text": "smoothing of that CPU spike is is quite noticeable it's it's it's it's something there yeah so I think it came out even a",
    "start": "1705080",
    "end": "1714770"
  },
  {
    "text": "little bit better than we were expecting on this one I was expecting ipbs to be pretty low in the noise as well I think",
    "start": "1714770",
    "end": "1722450"
  },
  {
    "text": "there might still be a few inefficiencies in the implementation and in queue in kubernetes because ipbs has",
    "start": "1722450",
    "end": "1728300"
  },
  {
    "text": "quite a quite a good API to the kernel I think maybe it's doing a little bit more",
    "start": "1728300",
    "end": "1733310"
  },
  {
    "text": "work than it needs to do our database not answers",
    "start": "1733310",
    "end": "1740659"
  },
  {
    "text": "that the next thing so there are a",
    "start": "1740659",
    "end": "1745760"
  },
  {
    "text": "couple of pain points in light service load balancing and and so on with with",
    "start": "1745760",
    "end": "1752840"
  },
  {
    "text": "queue proxy particularly when you bring in policy so one of those is that when a",
    "start": "1752840",
    "end": "1758299"
  },
  {
    "text": "packet comes in from outside the cluster if it's going to a node port or a service cluster IP you often lose the",
    "start": "1758299",
    "end": "1766059"
  },
  {
    "text": "source IP of the traffic so that was one thing that we wanted to address and that",
    "start": "1766059",
    "end": "1775850"
  },
  {
    "text": "losing the source IP is bad for your logs but it's also bad for policy because you know what's the first thing",
    "start": "1775850",
    "end": "1781159"
  },
  {
    "text": "people want to do with policy on their nginx you know pod they want to lock it",
    "start": "1781159",
    "end": "1787970"
  },
  {
    "text": "down so only these IPS can access it and in the standard data plane like to do",
    "start": "1787970",
    "end": "1796970"
  },
  {
    "text": "that with with Calico you have to you have to get into having host policy and",
    "start": "1796970",
    "end": "1802640"
  },
  {
    "text": "you have to get that traffic before before it reaches queue proxy and I'd be",
    "start": "1802640",
    "end": "1808940"
  },
  {
    "text": "tables and everything and so we kind of have support for that but wouldn't it be nice if the source IP was preserved all",
    "start": "1808940",
    "end": "1816230"
  },
  {
    "text": "the way to the pod so that was one one thing that we wanted to do and wouldn't",
    "start": "1816230",
    "end": "1823070"
  },
  {
    "text": "it be nice if we did our best to remove any extra network hops to speed up the",
    "start": "1823070",
    "end": "1830600"
  },
  {
    "text": "speed up the traffic on these paths so we were we were able to do that so you",
    "start": "1830600",
    "end": "1836000"
  },
  {
    "text": "have on the left you have the kind of queue proxy data plane where an external",
    "start": "1836000",
    "end": "1842870"
  },
  {
    "text": "client coming in ghost its accessing a node port it arrives on one host that's",
    "start": "1842870",
    "end": "1849320"
  },
  {
    "text": "not the right house that the the host that has the backing pod is a different host so it has to send that packet off",
    "start": "1849320",
    "end": "1856070"
  },
  {
    "text": "and then the packet has to come the response packet has to come all the way back to that first host and then and",
    "start": "1856070",
    "end": "1861830"
  },
  {
    "text": "then be redirected back out again with with BPF we can kind of do more",
    "start": "1861830",
    "end": "1867890"
  },
  {
    "text": "clever like customized things so this is the kind of aspect of BPF where we can",
    "start": "1867890",
    "end": "1875300"
  },
  {
    "text": "make different decisions to the colonel so with BPF we can send that packet and",
    "start": "1875300",
    "end": "1880340"
  },
  {
    "text": "and we have a few ways of sending it right now we're using a tunnel so we",
    "start": "1880340",
    "end": "1885950"
  },
  {
    "text": "send that packet on to the right host and then that host can can grab the",
    "start": "1885950",
    "end": "1892790"
  },
  {
    "text": "packet and send it to the relevant pod and if your network supports it we can send the response all the way back to",
    "start": "1892790",
    "end": "1899240"
  },
  {
    "text": "the external client from that second host so instead of having four hops through the network you've only got",
    "start": "1899240",
    "end": "1905900"
  },
  {
    "text": "three hops and and we cut out that return and back to the original host so",
    "start": "1905900",
    "end": "1911750"
  },
  {
    "text": "that that improves your latency and it reduces your CPU because you're not spending two amounts of CPU on that",
    "start": "1911750",
    "end": "1919490"
  },
  {
    "text": "first host you're only spending one so that says that's a nice improvement when",
    "start": "1919490",
    "end": "1924740"
  },
  {
    "text": "we look at the the performance site we were able to measure this so we again",
    "start": "1924740",
    "end": "1929990"
  },
  {
    "start": "1925000",
    "end": "1963000"
  },
  {
    "text": "measured the connect time to a service and in this case it was an engine X pod",
    "start": "1929990",
    "end": "1935480"
  },
  {
    "text": "again so we were doing curl and we were getting a trivial response back just the hello world page so the time to get the",
    "start": "1935480",
    "end": "1944150"
  },
  {
    "text": "hello world page like the total time with iptables cube proxy was 1.5 milliseconds and we've managed to get",
    "start": "1944150",
    "end": "1951050"
  },
  {
    "text": "that down to one millisecond with the direct return approach there",
    "start": "1951050",
    "end": "1959080"
  },
  {
    "text": "okay that's pretty exciting so how can",
    "start": "1959470",
    "end": "1966200"
  },
  {
    "start": "1963000",
    "end": "2021000"
  },
  {
    "text": "we try it out I you know what's what's the best way to get started you know playing with this and and and you know",
    "start": "1966200",
    "end": "1973010"
  },
  {
    "text": "kind of using it for yourself yeah so a",
    "start": "1973010",
    "end": "1978070"
  },
  {
    "text": "key thing to stress is this is a technology preview at this stage so it",
    "start": "1978070",
    "end": "1984470"
  },
  {
    "text": "takes awhile to like really harder than a data plane and put it through its paces so we don't want be reusing this",
    "start": "1984470",
    "end": "1991070"
  },
  {
    "text": "in production but if you do want to try it out we've got a link to the the",
    "start": "1991070",
    "end": "1996440"
  },
  {
    "text": "documentation there and there's a how-to guide that will tell you what sort of systems ended up on",
    "start": "1996440",
    "end": "2001630"
  },
  {
    "text": "as I said there's there's a requirement for a new kernel and we we did our",
    "start": "2001630",
    "end": "2006760"
  },
  {
    "text": "testing on particular platforms so we're steering people to the same platforms that we used for now and then you'll",
    "start": "2006760",
    "end": "2013480"
  },
  {
    "text": "hopefully have the best experience if you if you want to try this out so yeah",
    "start": "2013480",
    "end": "2019450"
  },
  {
    "text": "that's that's how you try it out great so so what's next like what's what what",
    "start": "2019450",
    "end": "2025480"
  },
  {
    "start": "2021000",
    "end": "2149000"
  },
  {
    "text": "what are what are the community's plans for you know the continued development of this of this new feature yeah the",
    "start": "2025480",
    "end": "2034630"
  },
  {
    "text": "first thing to do is like we want to drive up the like the quality and the",
    "start": "2034630",
    "end": "2040960"
  },
  {
    "text": "robustness so we have a few like known gaps including some security gaps so",
    "start": "2040960",
    "end": "2046240"
  },
  {
    "text": "like really don't use it in production and a few a few rough edges kinds of things right now it relies on",
    "start": "2046240",
    "end": "2053950"
  },
  {
    "text": "like having a fixed MTU we need to get rid of that we haven't implemented ipv6",
    "start": "2053950",
    "end": "2059740"
  },
  {
    "text": "support yet but yeah we're moving towards a ga release and I'm looking at",
    "start": "2059740",
    "end": "2066300"
  },
  {
    "text": "knocking off those those rough edges implementing the missing missing features we did want to to cover a",
    "start": "2066300",
    "end": "2074648"
  },
  {
    "text": "pretty broad base in this first tech preview because one of the dangers with releasing this kind of thing is if you",
    "start": "2074649",
    "end": "2080378"
  },
  {
    "text": "optimize the hot path but you haven't implemented enough for the rest of it then you might you might have something",
    "start": "2080379",
    "end": "2085480"
  },
  {
    "text": "that only works for that one case so we've tried to implement quite a broad swathe of Calico features but there's a",
    "start": "2085480",
    "end": "2093190"
  },
  {
    "text": "there's a few things that we didn't get to in this in this tech preview release so that's where we are yeah GA release",
    "start": "2093190",
    "end": "2101250"
  },
  {
    "text": "hopefully coming soon and we welcome your feedback they you know I'm sure with with something of this size there's",
    "start": "2101250",
    "end": "2108610"
  },
  {
    "text": "bound to be bugs and and corner cases that we haven't hit in our testing yet and where as I say we're beefing up our",
    "start": "2108610",
    "end": "2115270"
  },
  {
    "text": "testing and improving that as we go towards GA so Duke if you if you hit something funny or you have like a",
    "start": "2115270",
    "end": "2121540"
  },
  {
    "text": "packet that's unexpectedly slow or gets dropped or whatever then reach out to us",
    "start": "2121540",
    "end": "2126550"
  },
  {
    "text": "we really want to know about any any corner cases that we've missed",
    "start": "2126550",
    "end": "2132780"
  },
  {
    "text": "apart from that we'll be bringing this through into calico enterprise at some point so the the enterprise version of",
    "start": "2133060",
    "end": "2139990"
  },
  {
    "text": "calico that requires more features to be implemented in the data plane to support",
    "start": "2139990",
    "end": "2145210"
  },
  {
    "text": "the enterprise features as well okay so well think Shawn for answering the",
    "start": "2145210",
    "end": "2153160"
  },
  {
    "start": "2149000",
    "end": "2208000"
  },
  {
    "text": "questions and talking about both EBP F and and calicos data plan implementation",
    "start": "2153160",
    "end": "2158980"
  },
  {
    "text": "of it we're gonna get to the questions that people have asked in just a moment",
    "start": "2158980",
    "end": "2163990"
  },
  {
    "text": "but before we do that project I want to remind everyone that project calico is open source we you know there's a",
    "start": "2163990",
    "end": "2171220"
  },
  {
    "text": "there's a large community of people who are who are using it and there are tons of ways that you can get engaged if we",
    "start": "2171220",
    "end": "2176680"
  },
  {
    "text": "don't answer your questions here and you want to talk with us about how you get started with it how you use it you know",
    "start": "2176680",
    "end": "2182830"
  },
  {
    "text": "you know I as a developer advocate I'm here to help people you don't get involved in the community so we have a",
    "start": "2182830",
    "end": "2189700"
  },
  {
    "text": "Twitter channel this is all open source over on github you can talk to us",
    "start": "2189700",
    "end": "2196000"
  },
  {
    "text": "directly on you know the rest of the community on the slack Channel and we've also launched a new a new discourse for",
    "start": "2196000",
    "end": "2203200"
  },
  {
    "text": "for people that you know for community members to ask questions on and help each other out with so with that we'll",
    "start": "2203200",
    "end": "2209920"
  },
  {
    "start": "2208000",
    "end": "2291000"
  },
  {
    "text": "move on to the questions our first one is from Adam debts Dunstan who asks who",
    "start": "2209920",
    "end": "2216610"
  },
  {
    "text": "says who asks iptables has a high level of visibility for troubleshooting and is well understood",
    "start": "2216610",
    "end": "2221620"
  },
  {
    "text": "well moving to this include new tools to be able to debug these by these new byte",
    "start": "2221620",
    "end": "2228850"
  },
  {
    "text": "code programs in the data path yes so that's something we're very conscious of so as we've gone along we've had to",
    "start": "2228850",
    "end": "2236260"
  },
  {
    "text": "build tools to to help us debug the debug the data plane I don't think we",
    "start": "2236260",
    "end": "2243370"
  },
  {
    "text": "package those up yet but we we have them we have them kind of ready to go and",
    "start": "2243370",
    "end": "2248650"
  },
  {
    "text": "they allow you to dump the state of the data plane out you can also turn on really detailed debug logging in the for",
    "start": "2248650",
    "end": "2258100"
  },
  {
    "text": "the bps programs so once you turn that on basically you can get information",
    "start": "2258100",
    "end": "2263860"
  },
  {
    "text": "about every decision that's made about every get and we'll be working on that I think",
    "start": "2263860",
    "end": "2271700"
  },
  {
    "text": "the main problem we have with there at the moment is it's a fire hose so I think we'll be working on that to limit",
    "start": "2271700",
    "end": "2278480"
  },
  {
    "text": "it down so you can say log these packets for me but but don't log every packet I think maybe we need some BPF on our BPF",
    "start": "2278480",
    "end": "2286690"
  },
  {
    "text": "to control which filter you get okay",
    "start": "2286690",
    "end": "2291760"
  },
  {
    "start": "2291000",
    "end": "2376000"
  },
  {
    "text": "another question which which which I think we're Ian reiterates a point that",
    "start": "2291760",
    "end": "2298160"
  },
  {
    "text": "we covered earlier is Calico replacing Q proxy it's it's and if I if I under if",
    "start": "2298160",
    "end": "2304790"
  },
  {
    "text": "we understand that correctly that we are that the project Calico is not replacing",
    "start": "2304790",
    "end": "2310460"
  },
  {
    "text": "Q proxy but using the existing code and extending it yeah so we've we've kind of",
    "start": "2310460",
    "end": "2318200"
  },
  {
    "text": "imported the Q proxy business logic and we've implemented an alternative proxy",
    "start": "2318200",
    "end": "2324080"
  },
  {
    "text": "implementation so our proxy or implementation programs our data plane",
    "start": "2324080",
    "end": "2329900"
  },
  {
    "text": "instead of iptables and just in the same way that there's an IP tables one and there's an IP BS one",
    "start": "2329900",
    "end": "2335770"
  },
  {
    "text": "we wondered about whether we could do it as something we could upstream but one",
    "start": "2335770",
    "end": "2344630"
  },
  {
    "text": "of the things that's quite difficult with BPF firms at the moment is attaching multiple to one interface and",
    "start": "2344630",
    "end": "2350000"
  },
  {
    "text": "making them all work together so we didn't have a good a good first idea for",
    "start": "2350000",
    "end": "2355490"
  },
  {
    "text": "how to how to split up the cube proxy function from the Calico function have them work together nicely so the the",
    "start": "2355490",
    "end": "2363619"
  },
  {
    "text": "load balancing function is integrated into our BPF programs and then we have",
    "start": "2363619",
    "end": "2368780"
  },
  {
    "text": "this small shim that programs the programs our data plane from that okay",
    "start": "2368780",
    "end": "2377450"
  },
  {
    "start": "2376000",
    "end": "2498000"
  },
  {
    "text": "so Christopher luciano asks there was talk of the iptables maintainer x'",
    "start": "2377450",
    "end": "2383570"
  },
  {
    "text": "creating a new BP filter to handle lots of the problems with scalability in the current implementation does anyone know",
    "start": "2383570",
    "end": "2391250"
  },
  {
    "text": "what the status of this is and what it changed things with the Calico implementation I investigated BP filter",
    "start": "2391250",
    "end": "2399630"
  },
  {
    "text": "as one of the one of the things that was out there at the start as far as I could",
    "start": "2399630",
    "end": "2405300"
  },
  {
    "text": "tell it was still in the prototype stage I believe that the companies that were",
    "start": "2405300",
    "end": "2411180"
  },
  {
    "text": "behind it may have some private demos where they've done more but I think",
    "start": "2411180",
    "end": "2417600"
  },
  {
    "text": "maybe BP filters a little bit of a misnomer as well so the the actual technology they put in the kernel was a",
    "start": "2417600",
    "end": "2423870"
  },
  {
    "text": "way for the kernel to call out to a user",
    "start": "2423870",
    "end": "2429150"
  },
  {
    "text": "space program to do some work on behalf of the kernel but there was a huge",
    "start": "2429150",
    "end": "2434460"
  },
  {
    "text": "amount of work that still needed to be done in the kernel in order to to come",
    "start": "2434460",
    "end": "2440310"
  },
  {
    "text": "close to replacing IP tables with BPF in in that way so they needed you know a",
    "start": "2440310",
    "end": "2447030"
  },
  {
    "text": "dozen extra EPF hooks in the in the places where IP tables hooks into and",
    "start": "2447030",
    "end": "2455070"
  },
  {
    "text": "then a huge amount of work in in the user space portion as well to implement",
    "start": "2455070",
    "end": "2461760"
  },
  {
    "text": "the the BPF compilation engine and so on so that the the project was kind of a",
    "start": "2461760",
    "end": "2468420"
  },
  {
    "text": "prototype stage and I don't think it's matured yet I'm also I think I think",
    "start": "2468420",
    "end": "2474300"
  },
  {
    "text": "there was some tension in the kernel maintainer x' like though some people are very Pro it and then the IP tables",
    "start": "2474300",
    "end": "2480180"
  },
  {
    "text": "developers wanted to do nf tables instead and that was their answer so I",
    "start": "2480180",
    "end": "2485970"
  },
  {
    "text": "don't know how the politics plays out in the kernel but though I got the impression there was some some politics",
    "start": "2485970",
    "end": "2492630"
  },
  {
    "text": "and some difference of opinion but I'm not not sure okay",
    "start": "2492630",
    "end": "2498620"
  },
  {
    "start": "2498000",
    "end": "2573000"
  },
  {
    "text": "we're going back to some some performance questions from Daniel Varys",
    "start": "2498900",
    "end": "2504570"
  },
  {
    "text": "Vera Sami can you provide more details about CPU usage and and MPPs and how",
    "start": "2504570",
    "end": "2514260"
  },
  {
    "text": "does it compare with DP DK I don't think we've done the next level of detail on",
    "start": "2514260",
    "end": "2522150"
  },
  {
    "text": "on those numbers so I I would expect DP",
    "start": "2522150",
    "end": "2527190"
  },
  {
    "text": "DK still to be faster but BP DK is very",
    "start": "2527190",
    "end": "2534390"
  },
  {
    "text": "like it requires you to react at your program in to use DP DK and use all that",
    "start": "2534390",
    "end": "2541089"
  },
  {
    "text": "user space stuff I think DP DK gets an even earlier in the stack it's more like",
    "start": "2541089",
    "end": "2546869"
  },
  {
    "text": "more like x DP but it requires a lot more a lot more integration and your",
    "start": "2546869",
    "end": "2553059"
  },
  {
    "text": "application so we're really going for a general purpose data plane for",
    "start": "2553059",
    "end": "2558700"
  },
  {
    "text": "kubernetes so DP DK is not really the",
    "start": "2558700",
    "end": "2563829"
  },
  {
    "text": "right technology for us to use because it needs to be implemented into grated",
    "start": "2563829",
    "end": "2569229"
  },
  {
    "text": "into individual programs okay so how",
    "start": "2569229",
    "end": "2576069"
  },
  {
    "start": "2573000",
    "end": "2649000"
  },
  {
    "text": "does the how does BPF play on on a",
    "start": "2576069",
    "end": "2582220"
  },
  {
    "text": "locked kernel like like one that Red Hat would provide so there there's only one",
    "start": "2582220",
    "end": "2591579"
  },
  {
    "text": "or two kind of things that are locked down with BPF right now so you can look",
    "start": "2591579",
    "end": "2597670"
  },
  {
    "text": "down the BPF system call completely and stop it from operating at least outside",
    "start": "2597670",
    "end": "2604599"
  },
  {
    "text": "of the host the host namespace which is where calico runs basically you need to",
    "start": "2604599",
    "end": "2611289"
  },
  {
    "text": "allow you need to allow calico to do its",
    "start": "2611289",
    "end": "2616809"
  },
  {
    "text": "BPF operations if you want to use our BPF data plane that's just part and",
    "start": "2616809",
    "end": "2623650"
  },
  {
    "text": "parcel of using this feature is it's the usual usual answer with with a lock-down",
    "start": "2623650",
    "end": "2629319"
  },
  {
    "text": "kernel like if we're using a feature that you've locked down then we can't use it so you can come reconfigure your",
    "start": "2629319",
    "end": "2637119"
  },
  {
    "text": "kernel not not to lock that down or you can use one of our other data by mode",
    "start": "2637119",
    "end": "2643809"
  },
  {
    "text": "Ziff if you want it locked down and it's not right for you okay",
    "start": "2643809",
    "end": "2650109"
  },
  {
    "start": "2649000",
    "end": "2704000"
  },
  {
    "text": "another another question from from from Daniel and this this this comes back to",
    "start": "2650109",
    "end": "2656650"
  },
  {
    "text": "kind of the extended features of EBP F are we able to have improved telemetry",
    "start": "2656650",
    "end": "2662799"
  },
  {
    "text": "capabilities with EBP F without performance penalty and so that's that's certainly one of",
    "start": "2662799",
    "end": "2670340"
  },
  {
    "text": "the one of the hopes that we'll we'll be able to add using using this new",
    "start": "2670340",
    "end": "2675410"
  },
  {
    "text": "technology so BPF it's one of the things that BPF is designed to do well is to",
    "start": "2675410",
    "end": "2682730"
  },
  {
    "text": "efficiently update you know counters and",
    "start": "2682730",
    "end": "2688450"
  },
  {
    "text": "send trace events up to use a space for us to collect that kind of thing so",
    "start": "2688450",
    "end": "2695380"
  },
  {
    "text": "certainly certainly one of the one of the possibilities for this yes okay a",
    "start": "2695380",
    "end": "2705520"
  },
  {
    "start": "2704000",
    "end": "2777000"
  },
  {
    "text": "quick question about is EBP F the default or do I need calico to activated",
    "start": "2705520",
    "end": "2712300"
  },
  {
    "text": "the so the answer that question is is is",
    "start": "2712300",
    "end": "2717500"
  },
  {
    "text": "it's a protect preview and it's not enabled by default but but we have documentation that that guides you",
    "start": "2717500",
    "end": "2722810"
  },
  {
    "text": "through enabling it on a newer kernel yeah yeah exactly so it's a",
    "start": "2722810",
    "end": "2729530"
  },
  {
    "text": "configuration parameter we've actually shipped a dedicated manifest that sets",
    "start": "2729530",
    "end": "2735590"
  },
  {
    "text": "all of the sets all the configuration parameters for you so rather than rather",
    "start": "2735590",
    "end": "2741770"
  },
  {
    "text": "than having to set a few configuration parameters to enable it and make sure that you know MTU lines up and all that",
    "start": "2741770",
    "end": "2748070"
  },
  {
    "text": "kind of stuff we just we put their manifest on a Doc's website that you can apply instead of the normal calico dot",
    "start": "2748070",
    "end": "2755090"
  },
  {
    "text": "Yama you would apply the calico BPF ml and then it will go and BPF mode I think the",
    "start": "2755090",
    "end": "2763100"
  },
  {
    "text": "the main issue is if your kernel isn't new enough then it will try to start up",
    "start": "2763100",
    "end": "2768140"
  },
  {
    "text": "the BPF data plane and and fail to do so if if you tried to apply it on on an",
    "start": "2768140",
    "end": "2773630"
  },
  {
    "text": "older kernel okay Arijit asks I don't know if I understand",
    "start": "2773630",
    "end": "2783500"
  },
  {
    "start": "2777000",
    "end": "2900000"
  },
  {
    "text": "the question entirely so help me help me clarify if I if I get this wrong but I said that the MTU size is fixed in",
    "start": "2783500",
    "end": "2789710"
  },
  {
    "text": "calico do we not keep the size X minus 2250 to keep the MTU size and so so",
    "start": "2789710",
    "end": "2799330"
  },
  {
    "text": "yeah just in this in this particular tech preview release the the MTU that",
    "start": "2799330",
    "end": "2809470"
  },
  {
    "text": "the data plane expects needs to be at least like fourteen sixty I think we did",
    "start": "2809470",
    "end": "2818500"
  },
  {
    "text": "a survey of the clouds and I think I think the Google cloud has the lower the",
    "start": "2818500",
    "end": "2826090"
  },
  {
    "text": "lower MTU so we pick the right value for that but you can't change it to a lower",
    "start": "2826090",
    "end": "2831700"
  },
  {
    "text": "value if you need to if people are wondering how I had some slides that had",
    "start": "2831700",
    "end": "2838260"
  },
  {
    "text": "like 9,000 MTU on them the empty MTU in",
    "start": "2838260",
    "end": "2843370"
  },
  {
    "text": "the kernel is quite a complicated concept so the MTU on your like e0",
    "start": "2843370",
    "end": "2851530"
  },
  {
    "text": "device your kind of main networking device on the house can be higher than the the Baths device and the kernel has",
    "start": "2851530",
    "end": "2859380"
  },
  {
    "text": "offload mechanisms where the the MTU that you're setting for calico is not",
    "start": "2859380",
    "end": "2865570"
  },
  {
    "text": "actually relevant on most packet path so the it will actually send a bigger packet and then the network card will",
    "start": "2865570",
    "end": "2872260"
  },
  {
    "text": "chunk it up or the or Linux will chunk it up at the very last second before it",
    "start": "2872260",
    "end": "2877480"
  },
  {
    "text": "leaves the house so empty is quite a complicated topic but we've we've",
    "start": "2877480",
    "end": "2883120"
  },
  {
    "text": "configured a sensible default but the main problem is you can't change it to anything smaller if you need if you need",
    "start": "2883120",
    "end": "2889270"
  },
  {
    "text": "to have it smaller on your particular Hardware in BPF mode the conflict",
    "start": "2889270",
    "end": "2896710"
  },
  {
    "text": "parameter is just not implemented yet okay hmm and the and the last question",
    "start": "2896710",
    "end": "2903940"
  },
  {
    "start": "2900000",
    "end": "3012000"
  },
  {
    "text": "that we have is can you detail how are",
    "start": "2903940",
    "end": "2909550"
  },
  {
    "text": "you able to maintain latency with EBP F yeah so the main way that we get lower",
    "start": "2909550",
    "end": "2918250"
  },
  {
    "text": "lower latency is to skip big parts of",
    "start": "2918250",
    "end": "2925150"
  },
  {
    "text": "what the kernel would normally do for for packets that where that's appropriate so pod to pod traffic and",
    "start": "2925150",
    "end": "2931870"
  },
  {
    "text": "that kind of so we we skip a bunch of the processing we skip iptables we skip the we do the",
    "start": "2931870",
    "end": "2939940"
  },
  {
    "text": "routing calculation using a BPF helper and so on so a bunch of that gets",
    "start": "2939940",
    "end": "2946720"
  },
  {
    "text": "skipped and we've optimized our BPF",
    "start": "2946720",
    "end": "2952359"
  },
  {
    "text": "programs so that for the for the mainline case so after your initial",
    "start": "2952359",
    "end": "2958690"
  },
  {
    "text": "handshake when we do all the policy calculation subsequent packets get handled with the minimum number of BPF",
    "start": "2958690",
    "end": "2966789"
  },
  {
    "text": "map lookups so a map lookup is how a BPF program can store data and and look it",
    "start": "2966789",
    "end": "2972279"
  },
  {
    "text": "up later so we minimize the number of of map lookups which are the most expensive thing that a big gift program does so",
    "start": "2972279",
    "end": "2979869"
  },
  {
    "text": "yeah that's those are those are the things that we've done really tried to keep the BPF program as efficient as we",
    "start": "2979869",
    "end": "2986349"
  },
  {
    "text": "can and skip anything that we can one",
    "start": "2986349",
    "end": "2991779"
  },
  {
    "text": "impact of that is if you have your own IP tables rules they may not be honored if you have BPF mode on so you need to",
    "start": "2991779",
    "end": "2998890"
  },
  {
    "text": "be aware that that you know that's the price you're paying to you get the more efficient data path but we're more",
    "start": "2998890",
    "end": "3007259"
  },
  {
    "text": "efficient because we're skipping some some operations so that's great Shawn",
    "start": "3007259",
    "end": "3013710"
  },
  {
    "start": "3012000",
    "end": "3103000"
  },
  {
    "text": "thank you so much for taking the time to talk about this and and until tell us about EBP F end calicos implementation",
    "start": "3013710",
    "end": "3020940"
  },
  {
    "text": "of it I also want to thank the CNC F for hosting these webinars and giving us the",
    "start": "3020940",
    "end": "3026759"
  },
  {
    "text": "chance to talk about some of the you know the exciting work that's happening within the project and I also want to",
    "start": "3026759",
    "end": "3033359"
  },
  {
    "text": "thank every one of the attendees who came and listened it's it's to me it's it's personally exciting to see the",
    "start": "3033359",
    "end": "3039359"
  },
  {
    "text": "level of interest in this new implementation and and the project and",
    "start": "3039359",
    "end": "3045559"
  },
  {
    "text": "everyone is part of the project calico community and we want to encourage you to to ask questions and stay involved",
    "start": "3045559",
    "end": "3052220"
  },
  {
    "text": "Project calico org on Twitter project calico through the project calico github",
    "start": "3052220",
    "end": "3059009"
  },
  {
    "text": "repositories as well as on slack and on on discourse so thank you everyone and",
    "start": "3059009",
    "end": "3066180"
  },
  {
    "text": "we also have a list of references at the end of the slides that talk a little bit",
    "start": "3066180",
    "end": "3071440"
  },
  {
    "text": "more about EBP F so if you go and you download the slides you should be able to access those also so thank you",
    "start": "3071440",
    "end": "3077770"
  },
  {
    "text": "everybody and have have a fantastic week instead of mushroom increase for a great",
    "start": "3077770",
    "end": "3083980"
  },
  {
    "text": "webinar or minor that will have the recording of slides posted on CN CF dot IO slash webinars later today so you can",
    "start": "3083980",
    "end": "3090190"
  },
  {
    "text": "find the slides there thanks again and hope to see everybody at a future webinar great day everybody",
    "start": "3090190",
    "end": "3098430"
  }
]