[
  {
    "text": "hi there welcome everyone to the webinar",
    "start": "399",
    "end": "4000"
  },
  {
    "text": "today",
    "start": "4000",
    "end": "5600"
  },
  {
    "text": "i am chiptan tucker the founder at a",
    "start": "5600",
    "end": "8639"
  },
  {
    "text": "company called sars and we build the on",
    "start": "8639",
    "end": "11679"
  },
  {
    "text": "route in race controller api gateway",
    "start": "11679",
    "end": "14719"
  },
  {
    "text": "in this talk uh we'll go over how to",
    "start": "14719",
    "end": "17680"
  },
  {
    "text": "have end-to-end encryption",
    "start": "17680",
    "end": "19920"
  },
  {
    "text": "using the on rooting grace controller",
    "start": "19920",
    "end": "22400"
  },
  {
    "text": "and the link rd service mesh",
    "start": "22400",
    "end": "26240"
  },
  {
    "text": "so",
    "start": "27279",
    "end": "28080"
  },
  {
    "text": "this is sort of a workshop you can",
    "start": "28080",
    "end": "29920"
  },
  {
    "text": "follow through it and uh even go through",
    "start": "29920",
    "end": "32480"
  },
  {
    "text": "the steps while you achieve the same",
    "start": "32480",
    "end": "34880"
  },
  {
    "text": "things that we do in this webinar",
    "start": "34880",
    "end": "37440"
  },
  {
    "text": "if you have questions uh feel free to",
    "start": "37440",
    "end": "39920"
  },
  {
    "text": "join the slack channel",
    "start": "39920",
    "end": "41840"
  },
  {
    "text": "or if you want to try out the enterprise",
    "start": "41840",
    "end": "43840"
  },
  {
    "text": "features for",
    "start": "43840",
    "end": "46000"
  },
  {
    "text": "the on root controller you can drop us a",
    "start": "46000",
    "end": "48640"
  },
  {
    "text": "note using the form on the website",
    "start": "48640",
    "end": "52719"
  },
  {
    "text": "this is about me um you can also follow",
    "start": "52719",
    "end": "55920"
  },
  {
    "text": "us on twitter",
    "start": "55920",
    "end": "57199"
  },
  {
    "text": "we also have",
    "start": "57199",
    "end": "59280"
  },
  {
    "text": "an open source version of our software",
    "start": "59280",
    "end": "61280"
  },
  {
    "text": "apart from a community and enterprise",
    "start": "61280",
    "end": "63280"
  },
  {
    "text": "version",
    "start": "63280",
    "end": "64400"
  },
  {
    "text": "to check out the open source",
    "start": "64400",
    "end": "66640"
  },
  {
    "text": "you can use this address on github",
    "start": "66640",
    "end": "70720"
  },
  {
    "text": "um at the high level uh we are going to",
    "start": "70960",
    "end": "74080"
  },
  {
    "text": "talk about uh",
    "start": "74080",
    "end": "75840"
  },
  {
    "text": "these cloud native solution uh figure",
    "start": "75840",
    "end": "78720"
  },
  {
    "text": "out the different components involved uh",
    "start": "78720",
    "end": "81200"
  },
  {
    "text": "to take a high level view of uh where",
    "start": "81200",
    "end": "84080"
  },
  {
    "text": "the solution fits what are the different",
    "start": "84080",
    "end": "86320"
  },
  {
    "text": "components",
    "start": "86320",
    "end": "87840"
  },
  {
    "text": "so",
    "start": "87840",
    "end": "88720"
  },
  {
    "text": "at a high level the application",
    "start": "88720",
    "end": "91040"
  },
  {
    "text": "networking and security involves the",
    "start": "91040",
    "end": "93520"
  },
  {
    "text": "container networking interface",
    "start": "93520",
    "end": "96240"
  },
  {
    "text": "these are",
    "start": "96240",
    "end": "97150"
  },
  {
    "text": "[Music]",
    "start": "97150",
    "end": "98240"
  },
  {
    "text": "these are software's like uh celiums uh",
    "start": "98240",
    "end": "101520"
  },
  {
    "text": "celium or uh",
    "start": "101520",
    "end": "103680"
  },
  {
    "text": "calico or flannel which essentially",
    "start": "103680",
    "end": "106079"
  },
  {
    "text": "provides the network plumbing between",
    "start": "106079",
    "end": "108479"
  },
  {
    "text": "the pods",
    "start": "108479",
    "end": "109680"
  },
  {
    "text": "uh that's the container networking",
    "start": "109680",
    "end": "111439"
  },
  {
    "text": "interface",
    "start": "111439",
    "end": "113360"
  },
  {
    "text": "then there is uh",
    "start": "113360",
    "end": "115200"
  },
  {
    "text": "how does your traffic enter the cluster",
    "start": "115200",
    "end": "117280"
  },
  {
    "text": "that's where the increased controller",
    "start": "117280",
    "end": "118799"
  },
  {
    "text": "comes in",
    "start": "118799",
    "end": "119840"
  },
  {
    "text": "uh one example of that is the on road",
    "start": "119840",
    "end": "122079"
  },
  {
    "text": "one step",
    "start": "122079",
    "end": "123439"
  },
  {
    "text": "uh and then we have service meshes like",
    "start": "123439",
    "end": "127200"
  },
  {
    "text": "linkardi and istio",
    "start": "127200",
    "end": "129119"
  },
  {
    "text": "which essentially help with",
    "start": "129119",
    "end": "132400"
  },
  {
    "text": "not only traffic management but mtls",
    "start": "132400",
    "end": "136000"
  },
  {
    "text": "observability and a lot of operational",
    "start": "136000",
    "end": "138560"
  },
  {
    "text": "concerns are met so we'll quickly talk",
    "start": "138560",
    "end": "141200"
  },
  {
    "text": "about all these things and then uh",
    "start": "141200",
    "end": "143520"
  },
  {
    "text": "finally we'll go over a demo",
    "start": "143520",
    "end": "146879"
  },
  {
    "text": "so this is a graphical representation of",
    "start": "146959",
    "end": "150800"
  },
  {
    "text": "the major components in kubernetes",
    "start": "150800",
    "end": "153680"
  },
  {
    "text": "application delivery and security so uh",
    "start": "153680",
    "end": "157760"
  },
  {
    "text": "of course you have the cluster",
    "start": "157760",
    "end": "159760"
  },
  {
    "text": "and you have the cni",
    "start": "159760",
    "end": "161599"
  },
  {
    "text": "the cni wires of all the parts and the",
    "start": "161599",
    "end": "164160"
  },
  {
    "text": "services performs the network plumbing",
    "start": "164160",
    "end": "166959"
  },
  {
    "text": "and",
    "start": "166959",
    "end": "168000"
  },
  {
    "text": "a lot of times",
    "start": "168000",
    "end": "169599"
  },
  {
    "text": "they also do",
    "start": "169599",
    "end": "170959"
  },
  {
    "text": "security functions like network",
    "start": "170959",
    "end": "172400"
  },
  {
    "text": "segmentation at layer 3",
    "start": "172400",
    "end": "174879"
  },
  {
    "text": "of course you have the service mesh",
    "start": "174879",
    "end": "176959"
  },
  {
    "text": "inside the cluster",
    "start": "176959",
    "end": "178800"
  },
  {
    "text": "which performs mtls",
    "start": "178800",
    "end": "181200"
  },
  {
    "text": "and traffic management and",
    "start": "181200",
    "end": "183760"
  },
  {
    "text": "the ingress controller is essentially",
    "start": "183760",
    "end": "185519"
  },
  {
    "text": "the piece",
    "start": "185519",
    "end": "186800"
  },
  {
    "text": "how your traffic gets inside the cluster",
    "start": "186800",
    "end": "190879"
  },
  {
    "text": "so android one step is an ingress",
    "start": "190879",
    "end": "193040"
  },
  {
    "text": "controller api gateway it is built on",
    "start": "193040",
    "end": "195840"
  },
  {
    "text": "onboard proxy and essentially helps out",
    "start": "195840",
    "end": "198319"
  },
  {
    "text": "with north south traffic security and",
    "start": "198319",
    "end": "201200"
  },
  {
    "text": "management",
    "start": "201200",
    "end": "202480"
  },
  {
    "text": "uh it's extremely simple",
    "start": "202480",
    "end": "204560"
  },
  {
    "text": "typically",
    "start": "204560",
    "end": "206319"
  },
  {
    "text": "the policy and connectivity that you",
    "start": "206319",
    "end": "208400"
  },
  {
    "text": "want to specify for a service can be",
    "start": "208400",
    "end": "210400"
  },
  {
    "text": "done using one step that's the idea",
    "start": "210400",
    "end": "213120"
  },
  {
    "text": "behind it and it's declarative so",
    "start": "213120",
    "end": "216799"
  },
  {
    "text": "you can",
    "start": "216799",
    "end": "218080"
  },
  {
    "text": "just declare the things you want",
    "start": "218080",
    "end": "220400"
  },
  {
    "text": "execute one command and it will provide",
    "start": "220400",
    "end": "222720"
  },
  {
    "text": "the necessary",
    "start": "222720",
    "end": "224840"
  },
  {
    "text": "policy and uh android one step is",
    "start": "224840",
    "end": "228319"
  },
  {
    "text": "completely kubernetes native",
    "start": "228319",
    "end": "230640"
  },
  {
    "text": "uh it runs as a container and uh it it",
    "start": "230640",
    "end": "234000"
  },
  {
    "text": "can be used to run another image",
    "start": "234000",
    "end": "235840"
  },
  {
    "text": "controller service",
    "start": "235840",
    "end": "238239"
  },
  {
    "text": "uh how is it different um it is built on",
    "start": "238239",
    "end": "240959"
  },
  {
    "text": "on y proxy of course uh it's again on y",
    "start": "240959",
    "end": "244319"
  },
  {
    "text": "proxy the cncf graduated project um it",
    "start": "244319",
    "end": "247920"
  },
  {
    "text": "works for both kubernetes and non",
    "start": "247920",
    "end": "249840"
  },
  {
    "text": "kubernetes",
    "start": "249840",
    "end": "251200"
  },
  {
    "text": "um",
    "start": "251200",
    "end": "252319"
  },
  {
    "text": "on route also can function as a shim",
    "start": "252319",
    "end": "257120"
  },
  {
    "text": "outside of kubernetes uh when you run it",
    "start": "257120",
    "end": "259759"
  },
  {
    "text": "in standalone mode uh say for instance",
    "start": "259759",
    "end": "262160"
  },
  {
    "text": "in a darker container if you just want",
    "start": "262160",
    "end": "264000"
  },
  {
    "text": "it to run",
    "start": "264000",
    "end": "265600"
  },
  {
    "text": "on root and envoy",
    "start": "265600",
    "end": "267520"
  },
  {
    "text": "you get simple",
    "start": "267520",
    "end": "269199"
  },
  {
    "text": "rest or graphql based apis to",
    "start": "269199",
    "end": "272560"
  },
  {
    "text": "configure um on root",
    "start": "272560",
    "end": "275759"
  },
  {
    "text": "it is",
    "start": "275759",
    "end": "277040"
  },
  {
    "text": "purely declarative there is no yaml",
    "start": "277040",
    "end": "279120"
  },
  {
    "text": "involved when you are setting it up you",
    "start": "279120",
    "end": "281280"
  },
  {
    "text": "can just select a set of service and l7",
    "start": "281280",
    "end": "284800"
  },
  {
    "text": "policies",
    "start": "284800",
    "end": "286320"
  },
  {
    "text": "specify those policies run one command",
    "start": "286320",
    "end": "289199"
  },
  {
    "text": "and it's all good to go",
    "start": "289199",
    "end": "291040"
  },
  {
    "text": "you can then tweak it",
    "start": "291040",
    "end": "292610"
  },
  {
    "text": "[Music]",
    "start": "292610",
    "end": "294400"
  },
  {
    "text": "by editing different config objects and",
    "start": "294400",
    "end": "296880"
  },
  {
    "text": "then",
    "start": "296880",
    "end": "297919"
  },
  {
    "text": "you know tune it more to your needs",
    "start": "297919",
    "end": "300720"
  },
  {
    "text": "there are three versions of course uh",
    "start": "300720",
    "end": "302320"
  },
  {
    "text": "the os is the community and enterprise",
    "start": "302320",
    "end": "304479"
  },
  {
    "text": "and uh you can check out the complete",
    "start": "304479",
    "end": "306400"
  },
  {
    "text": "list of features",
    "start": "306400",
    "end": "308080"
  },
  {
    "text": "and get android dot io slash features",
    "start": "308080",
    "end": "312080"
  },
  {
    "text": "uh linker d is again a cncf graduated",
    "start": "312080",
    "end": "315199"
  },
  {
    "text": "project it's a service mesh ultra",
    "start": "315199",
    "end": "317120"
  },
  {
    "text": "lightweight and uh it's an extremely",
    "start": "317120",
    "end": "319600"
  },
  {
    "text": "popular service mesh",
    "start": "319600",
    "end": "321520"
  },
  {
    "text": "uh which has over 200 contributors and i",
    "start": "321520",
    "end": "324960"
  },
  {
    "text": "think if i'm not wrong about 10k stars",
    "start": "324960",
    "end": "328560"
  },
  {
    "text": "um why do we need a service mesh and",
    "start": "328560",
    "end": "332479"
  },
  {
    "text": "why end-to-end encryption",
    "start": "332479",
    "end": "334560"
  },
  {
    "text": "so",
    "start": "334560",
    "end": "335440"
  },
  {
    "text": "with",
    "start": "335440",
    "end": "336199"
  },
  {
    "text": "microservices the",
    "start": "336199",
    "end": "338720"
  },
  {
    "text": "surface area for attack increases",
    "start": "338720",
    "end": "342000"
  },
  {
    "text": "to",
    "start": "342000",
    "end": "343039"
  },
  {
    "text": "establish",
    "start": "343039",
    "end": "344400"
  },
  {
    "text": "you know like a secure environment to",
    "start": "344400",
    "end": "346320"
  },
  {
    "text": "run your micro services",
    "start": "346320",
    "end": "348560"
  },
  {
    "text": "there is the zero trust paradigm which",
    "start": "348560",
    "end": "350720"
  },
  {
    "text": "has never trust always verify",
    "start": "350720",
    "end": "353440"
  },
  {
    "text": "so you essentially verify every single",
    "start": "353440",
    "end": "356560"
  },
  {
    "text": "request coming inside your cluster",
    "start": "356560",
    "end": "359039"
  },
  {
    "text": "and",
    "start": "359039",
    "end": "359840"
  },
  {
    "text": "when the services talk to each other",
    "start": "359840",
    "end": "361919"
  },
  {
    "text": "they also verify every request",
    "start": "361919",
    "end": "364800"
  },
  {
    "text": "and the verification comes in forms of",
    "start": "364800",
    "end": "367039"
  },
  {
    "text": "authentication and authorization so",
    "start": "367039",
    "end": "369600"
  },
  {
    "text": "of course",
    "start": "369600",
    "end": "370720"
  },
  {
    "text": "you need your identity set up for each",
    "start": "370720",
    "end": "373840"
  },
  {
    "text": "of the workloads",
    "start": "373840",
    "end": "375520"
  },
  {
    "text": "that you can use to perform uh the",
    "start": "375520",
    "end": "378479"
  },
  {
    "text": "enforcement",
    "start": "378479",
    "end": "380000"
  },
  {
    "text": "so the zero trust principles for traffic",
    "start": "380000",
    "end": "382880"
  },
  {
    "text": "entering the cluster can be",
    "start": "382880",
    "end": "385199"
  },
  {
    "text": "um can be essentially done at the",
    "start": "385199",
    "end": "387600"
  },
  {
    "text": "ingress uh this is where android comes",
    "start": "387600",
    "end": "389759"
  },
  {
    "text": "in",
    "start": "389759",
    "end": "390400"
  },
  {
    "text": "and enforcing zero trust principles",
    "start": "390400",
    "end": "392560"
  },
  {
    "text": "inside the cluster would be a component",
    "start": "392560",
    "end": "394639"
  },
  {
    "text": "like a service mesh which performs",
    "start": "394639",
    "end": "397759"
  },
  {
    "text": "um some rc authen for inter service",
    "start": "397759",
    "end": "401039"
  },
  {
    "text": "communication or the east-west traffic",
    "start": "401039",
    "end": "404400"
  },
  {
    "text": "so this pictorially represents",
    "start": "404400",
    "end": "407520"
  },
  {
    "text": "how",
    "start": "407520",
    "end": "408639"
  },
  {
    "text": "the end-to-end encryption looks like",
    "start": "408639",
    "end": "411520"
  },
  {
    "text": "so of course when the traffic enters the",
    "start": "411520",
    "end": "413840"
  },
  {
    "text": "cluster you have tls from the user to",
    "start": "413840",
    "end": "416639"
  },
  {
    "text": "unroot this is the downstream leg and",
    "start": "416639",
    "end": "419520"
  },
  {
    "text": "then once the traffic hits the ingress",
    "start": "419520",
    "end": "422639"
  },
  {
    "text": "controller",
    "start": "422639",
    "end": "423840"
  },
  {
    "text": "uh it's all encrypted",
    "start": "423840",
    "end": "426479"
  },
  {
    "text": "as it is meshed with uh mtls",
    "start": "426479",
    "end": "430319"
  },
  {
    "text": "this example specifically talks about",
    "start": "430319",
    "end": "432960"
  },
  {
    "text": "linker d",
    "start": "432960",
    "end": "434880"
  },
  {
    "text": "and on road",
    "start": "434880",
    "end": "437840"
  },
  {
    "text": "so uh now that was just a quick overview",
    "start": "438720",
    "end": "441919"
  },
  {
    "text": "uh we'll go over uh",
    "start": "441919",
    "end": "444080"
  },
  {
    "text": "a quick demo um and uh this involves",
    "start": "444080",
    "end": "447039"
  },
  {
    "text": "installing the linker d service mesh we",
    "start": "447039",
    "end": "449440"
  },
  {
    "text": "have a kubernetes cluster",
    "start": "449440",
    "end": "452080"
  },
  {
    "text": "there is linkard installed on top of it",
    "start": "452080",
    "end": "455039"
  },
  {
    "text": "there is an example workload in form of",
    "start": "455039",
    "end": "457120"
  },
  {
    "text": "emojio2 that's an example workload and",
    "start": "457120",
    "end": "459840"
  },
  {
    "text": "then",
    "start": "459840",
    "end": "460960"
  },
  {
    "text": "we'll",
    "start": "460960",
    "end": "462400"
  },
  {
    "text": "mesh that example workload",
    "start": "462400",
    "end": "464479"
  },
  {
    "text": "um in the",
    "start": "464479",
    "end": "466479"
  },
  {
    "text": "link rd mesh so essentially insert a",
    "start": "466479",
    "end": "468560"
  },
  {
    "text": "proxy with the workload",
    "start": "468560",
    "end": "470800"
  },
  {
    "text": "so",
    "start": "470800",
    "end": "471599"
  },
  {
    "text": "and then",
    "start": "471599",
    "end": "472720"
  },
  {
    "text": "the other aspect is uh we'll install",
    "start": "472720",
    "end": "475120"
  },
  {
    "text": "onroot uh we'll mesh on group with link",
    "start": "475120",
    "end": "477599"
  },
  {
    "text": "rd",
    "start": "477599",
    "end": "478960"
  },
  {
    "text": "will externally expose the application",
    "start": "478960",
    "end": "483120"
  },
  {
    "text": "to the client and then we'll secure that",
    "start": "483120",
    "end": "485680"
  },
  {
    "text": "communication using a certificate and",
    "start": "485680",
    "end": "488000"
  },
  {
    "text": "acne certificate that will generate sign",
    "start": "488000",
    "end": "491280"
  },
  {
    "text": "and install in one step again",
    "start": "491280",
    "end": "493520"
  },
  {
    "text": "so that's a high level introduction",
    "start": "493520",
    "end": "496000"
  },
  {
    "text": "about uh android one step uh",
    "start": "496000",
    "end": "500000"
  },
  {
    "text": "and uh linker d and uh what we'll be",
    "start": "500000",
    "end": "503039"
  },
  {
    "text": "covering in the demo",
    "start": "503039",
    "end": "505120"
  },
  {
    "text": "so so the demo steps are also uh present",
    "start": "505120",
    "end": "509120"
  },
  {
    "text": "on the website there is a high level",
    "start": "509120",
    "end": "511680"
  },
  {
    "text": "article that talks about it so you can",
    "start": "511680",
    "end": "514000"
  },
  {
    "text": "just navigate to the website and",
    "start": "514000",
    "end": "519000"
  },
  {
    "text": "in the blog section you can go to end to",
    "start": "521120",
    "end": "523279"
  },
  {
    "text": "end encryption using our root and linker",
    "start": "523279",
    "end": "525600"
  },
  {
    "text": "d",
    "start": "525600",
    "end": "526640"
  },
  {
    "text": "and uh that will essentially walk you",
    "start": "526640",
    "end": "528959"
  },
  {
    "text": "through the same things so we have a",
    "start": "528959",
    "end": "531279"
  },
  {
    "text": "cluster right now uh so let's just",
    "start": "531279",
    "end": "533680"
  },
  {
    "text": "quickly",
    "start": "533680",
    "end": "535680"
  },
  {
    "text": "check that",
    "start": "535680",
    "end": "538240"
  },
  {
    "text": "right so we have a cluster and",
    "start": "538240",
    "end": "541040"
  },
  {
    "text": "we also have link already installed",
    "start": "541040",
    "end": "544080"
  },
  {
    "text": "so",
    "start": "544080",
    "end": "545120"
  },
  {
    "text": "that's",
    "start": "545120",
    "end": "547200"
  },
  {
    "text": "link card installation so",
    "start": "547200",
    "end": "550480"
  },
  {
    "text": "we have also connected to the uh beyond",
    "start": "550480",
    "end": "553519"
  },
  {
    "text": "cloud bouillon",
    "start": "553519",
    "end": "555040"
  },
  {
    "text": "is the company that created linkerd so",
    "start": "555040",
    "end": "557680"
  },
  {
    "text": "we are also connected to the cloud just",
    "start": "557680",
    "end": "560160"
  },
  {
    "text": "to verify the mtls",
    "start": "560160",
    "end": "562480"
  },
  {
    "text": "so right now here is the connection and",
    "start": "562480",
    "end": "564800"
  },
  {
    "text": "we can see that there's one active",
    "start": "564800",
    "end": "566399"
  },
  {
    "text": "cluster with a couple of nodes",
    "start": "566399",
    "end": "568800"
  },
  {
    "text": "there's a few workloads",
    "start": "568800",
    "end": "572160"
  },
  {
    "text": "right",
    "start": "572240",
    "end": "573440"
  },
  {
    "text": "so we'll use this to verify our mtls",
    "start": "573440",
    "end": "578720"
  },
  {
    "text": "so moving ahead uh let's go ahead and",
    "start": "578720",
    "end": "581920"
  },
  {
    "text": "install uh the emoji",
    "start": "581920",
    "end": "584240"
  },
  {
    "text": "workload",
    "start": "584240",
    "end": "585600"
  },
  {
    "text": "so that's the command that installs the",
    "start": "585600",
    "end": "589120"
  },
  {
    "text": "workload",
    "start": "589120",
    "end": "590800"
  },
  {
    "text": "and then",
    "start": "590800",
    "end": "591920"
  },
  {
    "text": "of course we have i think we have these",
    "start": "591920",
    "end": "595680"
  },
  {
    "text": "so",
    "start": "595680",
    "end": "596560"
  },
  {
    "text": "we have um",
    "start": "596560",
    "end": "598240"
  },
  {
    "text": "we have the jet stack sort manager which",
    "start": "598240",
    "end": "600399"
  },
  {
    "text": "we'll be using to install the",
    "start": "600399",
    "end": "602640"
  },
  {
    "text": "eight mesa we also have the",
    "start": "602640",
    "end": "605440"
  },
  {
    "text": "on route api gateway",
    "start": "605440",
    "end": "608399"
  },
  {
    "text": "health charts which we'll be using to",
    "start": "608399",
    "end": "610720"
  },
  {
    "text": "install android",
    "start": "610720",
    "end": "612560"
  },
  {
    "text": "and the service policy essentially how",
    "start": "612560",
    "end": "615440"
  },
  {
    "text": "to expose the service how to secure the",
    "start": "615440",
    "end": "617519"
  },
  {
    "text": "service",
    "start": "617519",
    "end": "619200"
  },
  {
    "text": "so let's just go ahead and",
    "start": "619200",
    "end": "621279"
  },
  {
    "text": "install",
    "start": "621279",
    "end": "623760"
  },
  {
    "text": "android so here",
    "start": "624640",
    "end": "626880"
  },
  {
    "text": "it's going to",
    "start": "626880",
    "end": "628560"
  },
  {
    "text": "create an instance of",
    "start": "628560",
    "end": "630880"
  },
  {
    "text": "on road ingress controller ak api",
    "start": "630880",
    "end": "633120"
  },
  {
    "text": "gateway",
    "start": "633120",
    "end": "634399"
  },
  {
    "text": "and",
    "start": "634399",
    "end": "635279"
  },
  {
    "text": "let's",
    "start": "635279",
    "end": "637519"
  },
  {
    "text": "quickly look at that so it's still",
    "start": "640800",
    "end": "643600"
  },
  {
    "text": "getting an external ip",
    "start": "643600",
    "end": "646560"
  },
  {
    "text": "in the meanwhile",
    "start": "646560",
    "end": "648399"
  },
  {
    "text": "let's go ahead and set on root up",
    "start": "648399",
    "end": "651760"
  },
  {
    "text": "for",
    "start": "651760",
    "end": "652560"
  },
  {
    "text": "running with linker d",
    "start": "652560",
    "end": "655360"
  },
  {
    "text": "so",
    "start": "655360",
    "end": "656160"
  },
  {
    "text": "when you are integrating an ingress",
    "start": "656160",
    "end": "658079"
  },
  {
    "text": "controller with linkard there are a",
    "start": "658079",
    "end": "660240"
  },
  {
    "text": "couple of suggested",
    "start": "660240",
    "end": "662959"
  },
  {
    "text": "practices",
    "start": "662959",
    "end": "664320"
  },
  {
    "text": "one is",
    "start": "664320",
    "end": "665519"
  },
  {
    "text": "around adding a header to provide",
    "start": "665519",
    "end": "668720"
  },
  {
    "text": "hints to linkardi the other one is",
    "start": "668720",
    "end": "671040"
  },
  {
    "text": "around",
    "start": "671040",
    "end": "672839"
  },
  {
    "text": "delegating the the endpoint selection",
    "start": "672839",
    "end": "676000"
  },
  {
    "text": "for routing to link rd so",
    "start": "676000",
    "end": "678560"
  },
  {
    "text": "um there is one flag setting in uh",
    "start": "678560",
    "end": "681760"
  },
  {
    "text": "android which takes care of all of this",
    "start": "681760",
    "end": "684880"
  },
  {
    "text": "and it can be further customized if you",
    "start": "684880",
    "end": "687120"
  },
  {
    "text": "like but essentially there are a couple",
    "start": "687120",
    "end": "689440"
  },
  {
    "text": "of requirements",
    "start": "689440",
    "end": "690880"
  },
  {
    "text": "when you're trying to run an ingress",
    "start": "690880",
    "end": "692399"
  },
  {
    "text": "controller with uh linkardi",
    "start": "692399",
    "end": "695040"
  },
  {
    "text": "and uh with our root one step we have",
    "start": "695040",
    "end": "697040"
  },
  {
    "text": "made it extremely simple uh where you",
    "start": "697040",
    "end": "699440"
  },
  {
    "text": "just set one flag and everything just",
    "start": "699440",
    "end": "702079"
  },
  {
    "text": "works so let's just set this one global",
    "start": "702079",
    "end": "704240"
  },
  {
    "text": "config",
    "start": "704240",
    "end": "706720"
  },
  {
    "text": "and that's it",
    "start": "706720",
    "end": "708240"
  },
  {
    "text": "so that's all you need and now on root",
    "start": "708240",
    "end": "710240"
  },
  {
    "text": "is ready to",
    "start": "710240",
    "end": "711760"
  },
  {
    "text": "work with",
    "start": "711760",
    "end": "713760"
  },
  {
    "text": "link rd",
    "start": "713760",
    "end": "715040"
  },
  {
    "text": "now you can take a look at this more on",
    "start": "715040",
    "end": "718240"
  },
  {
    "text": "the website to see",
    "start": "718240",
    "end": "720079"
  },
  {
    "text": "uh what are the other cast",
    "start": "720079",
    "end": "721519"
  },
  {
    "text": "customizations available but essentially",
    "start": "721519",
    "end": "724800"
  },
  {
    "text": "uh you've already enabled the link",
    "start": "724800",
    "end": "727279"
  },
  {
    "text": "enabled",
    "start": "727279",
    "end": "728720"
  },
  {
    "text": "setting to set up the",
    "start": "728720",
    "end": "730639"
  },
  {
    "text": "controller",
    "start": "730639",
    "end": "731760"
  },
  {
    "text": "and if you want you can disable the",
    "start": "731760",
    "end": "734160"
  },
  {
    "text": "header addition and",
    "start": "734160",
    "end": "736480"
  },
  {
    "text": "the endpoint delegation endpoint",
    "start": "736480",
    "end": "738880"
  },
  {
    "text": "selection delegation",
    "start": "738880",
    "end": "740720"
  },
  {
    "text": "uh you could disable any of these if you",
    "start": "740720",
    "end": "743120"
  },
  {
    "text": "like but by default",
    "start": "743120",
    "end": "744720"
  },
  {
    "text": "it's all enabled",
    "start": "744720",
    "end": "746800"
  },
  {
    "text": "now we earlier created the",
    "start": "746800",
    "end": "751200"
  },
  {
    "text": "emoji auto workload now we are just",
    "start": "751920",
    "end": "754720"
  },
  {
    "text": "going to",
    "start": "754720",
    "end": "756880"
  },
  {
    "text": "mesh it so just going back to this",
    "start": "756880",
    "end": "759920"
  },
  {
    "text": "what we are talking about now is uh we",
    "start": "759920",
    "end": "762160"
  },
  {
    "text": "got a workload setup say emoji auto",
    "start": "762160",
    "end": "764240"
  },
  {
    "text": "workload now we are going to mesh it as",
    "start": "764240",
    "end": "767120"
  },
  {
    "text": "as then we are going to add the link",
    "start": "767120",
    "end": "768399"
  },
  {
    "text": "kerdi proxy to it",
    "start": "768399",
    "end": "770959"
  },
  {
    "text": "and uh that's the command to do that so",
    "start": "770959",
    "end": "773040"
  },
  {
    "text": "what it does is it adds an annotation to",
    "start": "773040",
    "end": "775360"
  },
  {
    "text": "the deployment",
    "start": "775360",
    "end": "777040"
  },
  {
    "text": "and uh that inserts uh the",
    "start": "777040",
    "end": "780480"
  },
  {
    "text": "linkard proxy",
    "start": "780480",
    "end": "782560"
  },
  {
    "text": "and then we do the same thing for on",
    "start": "782560",
    "end": "785200"
  },
  {
    "text": "route",
    "start": "785200",
    "end": "786399"
  },
  {
    "text": "so so what we are doing here is uh we",
    "start": "786399",
    "end": "788480"
  },
  {
    "text": "are in injecting the linkard proxy",
    "start": "788480",
    "end": "791680"
  },
  {
    "text": "for both the workloads uh the emoji",
    "start": "791680",
    "end": "794160"
  },
  {
    "text": "voter workload or test workload",
    "start": "794160",
    "end": "796480"
  },
  {
    "text": "and uh the on route workload",
    "start": "796480",
    "end": "800079"
  },
  {
    "text": "so now let's",
    "start": "800079",
    "end": "801290"
  },
  {
    "text": "[Music]",
    "start": "801290",
    "end": "803920"
  },
  {
    "text": "let's quickly look at the cloud and how",
    "start": "803920",
    "end": "806079"
  },
  {
    "text": "it looks",
    "start": "806079",
    "end": "809240"
  },
  {
    "text": "right so we see that emoji auto",
    "start": "814480",
    "end": "818000"
  },
  {
    "text": "is now",
    "start": "818000",
    "end": "819519"
  },
  {
    "text": "seen by",
    "start": "819519",
    "end": "821839"
  },
  {
    "text": "the",
    "start": "821839",
    "end": "823680"
  },
  {
    "text": "cloud and then here",
    "start": "823680",
    "end": "825680"
  },
  {
    "text": "it's",
    "start": "825680",
    "end": "827680"
  },
  {
    "text": "here we can see emoji auto",
    "start": "827680",
    "end": "831199"
  },
  {
    "text": "emoji auto is meshed and we also see",
    "start": "831199",
    "end": "834480"
  },
  {
    "text": "that on root is meshed",
    "start": "834480",
    "end": "836639"
  },
  {
    "text": "uh the dark circle here with our",
    "start": "836639",
    "end": "839360"
  },
  {
    "text": "solid dot in there shows that it is",
    "start": "839360",
    "end": "841680"
  },
  {
    "text": "meshed",
    "start": "841680",
    "end": "842800"
  },
  {
    "text": "we can also verify this by looking at",
    "start": "842800",
    "end": "845360"
  },
  {
    "text": "the parts",
    "start": "845360",
    "end": "846480"
  },
  {
    "text": "i think there's a command here",
    "start": "846480",
    "end": "848480"
  },
  {
    "text": "yeah so",
    "start": "848480",
    "end": "851279"
  },
  {
    "text": "so here what we see is",
    "start": "853279",
    "end": "855680"
  },
  {
    "text": "we have",
    "start": "855680",
    "end": "858320"
  },
  {
    "text": "the",
    "start": "858639",
    "end": "860800"
  },
  {
    "text": "we have the um",
    "start": "861760",
    "end": "864880"
  },
  {
    "text": "on root pod",
    "start": "864880",
    "end": "866639"
  },
  {
    "text": "which is running the",
    "start": "866639",
    "end": "868639"
  },
  {
    "text": "on root image and redis and of course uh",
    "start": "868639",
    "end": "872079"
  },
  {
    "text": "on y proxy",
    "start": "872079",
    "end": "873760"
  },
  {
    "text": "but at the same time it is running",
    "start": "873760",
    "end": "876320"
  },
  {
    "text": "the linker d proxy as well in the same",
    "start": "876320",
    "end": "879120"
  },
  {
    "text": "part",
    "start": "879120",
    "end": "880000"
  },
  {
    "text": "so what it is showing is that we have",
    "start": "880000",
    "end": "883199"
  },
  {
    "text": "successfully meshed",
    "start": "883199",
    "end": "885760"
  },
  {
    "text": "the on root bond",
    "start": "885760",
    "end": "888959"
  },
  {
    "text": "so now let's quickly look at",
    "start": "890399",
    "end": "895320"
  },
  {
    "text": "yeah we now have an external ip so what",
    "start": "901920",
    "end": "904320"
  },
  {
    "text": "i'm going to do for this demo is uh",
    "start": "904320",
    "end": "907040"
  },
  {
    "text": "create a dns entry",
    "start": "907040",
    "end": "909040"
  },
  {
    "text": "for this",
    "start": "909040",
    "end": "910560"
  },
  {
    "text": "external ip and let's call it uh",
    "start": "910560",
    "end": "915440"
  },
  {
    "text": "link already",
    "start": "915440",
    "end": "917040"
  },
  {
    "text": "image to demo and then we're just going",
    "start": "917040",
    "end": "919279"
  },
  {
    "text": "to set it to the external id",
    "start": "919279",
    "end": "922880"
  },
  {
    "text": "right and then let's just quickly ping",
    "start": "924839",
    "end": "927519"
  },
  {
    "text": "this and see if it is set up",
    "start": "927519",
    "end": "931040"
  },
  {
    "text": "wait for some time to set",
    "start": "933519",
    "end": "935680"
  },
  {
    "text": "that it's set up",
    "start": "935680",
    "end": "937040"
  },
  {
    "text": "but in the meanwhile let's go ahead and",
    "start": "937040",
    "end": "939680"
  },
  {
    "text": "expose this service",
    "start": "939680",
    "end": "941680"
  },
  {
    "text": "externally so the way to do that is",
    "start": "941680",
    "end": "946079"
  },
  {
    "text": "just use one command from the chart",
    "start": "952720",
    "end": "956639"
  },
  {
    "text": "and what we are doing here is we are",
    "start": "956639",
    "end": "959120"
  },
  {
    "text": "saying",
    "start": "959120",
    "end": "960079"
  },
  {
    "text": "program the ingress in such a way that i",
    "start": "960079",
    "end": "962720"
  },
  {
    "text": "can talk to the emoji voter service",
    "start": "962720",
    "end": "965920"
  },
  {
    "text": "over that dns name and we are specifying",
    "start": "965920",
    "end": "968800"
  },
  {
    "text": "a couple of properties about the service",
    "start": "968800",
    "end": "971759"
  },
  {
    "text": "what's the name of the service uh what",
    "start": "971759",
    "end": "973839"
  },
  {
    "text": "prefix to reach it on",
    "start": "973839",
    "end": "975920"
  },
  {
    "text": "uh what port the service is accessible",
    "start": "975920",
    "end": "978480"
  },
  {
    "text": "on so let's just go ahead and run that",
    "start": "978480",
    "end": "980399"
  },
  {
    "text": "command",
    "start": "980399",
    "end": "982800"
  },
  {
    "text": "so so this shows me that",
    "start": "982800",
    "end": "986480"
  },
  {
    "text": "the service",
    "start": "988320",
    "end": "989839"
  },
  {
    "text": "the ingress is",
    "start": "989839",
    "end": "991279"
  },
  {
    "text": "getting programmed and it right now",
    "start": "991279",
    "end": "993279"
  },
  {
    "text": "installed a couple of filters which i",
    "start": "993279",
    "end": "994880"
  },
  {
    "text": "can quickly look at if i like so that",
    "start": "994880",
    "end": "997199"
  },
  {
    "text": "tells me that oh i have a",
    "start": "997199",
    "end": "999360"
  },
  {
    "text": "lua filter setup which is going to add a",
    "start": "999360",
    "end": "1003040"
  },
  {
    "text": "lua filter says hello",
    "start": "1003040",
    "end": "1005279"
  },
  {
    "text": "header and then",
    "start": "1005279",
    "end": "1007120"
  },
  {
    "text": "there is also",
    "start": "1007120",
    "end": "1008880"
  },
  {
    "text": "the rate limit layer seven rate limits",
    "start": "1008880",
    "end": "1011680"
  },
  {
    "text": "are set up which which again you can",
    "start": "1011680",
    "end": "1013440"
  },
  {
    "text": "take a look at over here",
    "start": "1013440",
    "end": "1015040"
  },
  {
    "text": "so you're saying for uh",
    "start": "1015040",
    "end": "1018079"
  },
  {
    "text": "the http protocol uh limited to five",
    "start": "1018079",
    "end": "1021199"
  },
  {
    "text": "requests per second so this all got set",
    "start": "1021199",
    "end": "1023360"
  },
  {
    "text": "up automatically",
    "start": "1023360",
    "end": "1026798"
  },
  {
    "text": "let's ping the domain name",
    "start": "1036400",
    "end": "1039760"
  },
  {
    "text": "and now let's try to call",
    "start": "1039760",
    "end": "1043199"
  },
  {
    "text": "right so we are able to see a 200",
    "start": "1046160",
    "end": "1049039"
  },
  {
    "text": "and of course we are also able to see",
    "start": "1049039",
    "end": "1051520"
  },
  {
    "text": "the lua filter sales hello",
    "start": "1051520",
    "end": "1054160"
  },
  {
    "text": "let's try and navigate to the service",
    "start": "1054160",
    "end": "1056160"
  },
  {
    "text": "from the ui",
    "start": "1056160",
    "end": "1058559"
  },
  {
    "text": "so",
    "start": "1058559",
    "end": "1060799"
  },
  {
    "text": "here we are",
    "start": "1061760",
    "end": "1063039"
  },
  {
    "text": "so let's just",
    "start": "1063039",
    "end": "1066759"
  },
  {
    "text": "and then let's look at",
    "start": "1072640",
    "end": "1075840"
  },
  {
    "text": "let's look at the workloads and we see",
    "start": "1077840",
    "end": "1081679"
  },
  {
    "text": "that unroot is meshed",
    "start": "1081679",
    "end": "1084400"
  },
  {
    "text": "right and then",
    "start": "1084400",
    "end": "1086240"
  },
  {
    "text": "we",
    "start": "1086240",
    "end": "1086960"
  },
  {
    "text": "let's look at the topology",
    "start": "1086960",
    "end": "1090160"
  },
  {
    "text": "so now this shows me that our root is",
    "start": "1090160",
    "end": "1093200"
  },
  {
    "text": "meshed",
    "start": "1093200",
    "end": "1095440"
  },
  {
    "text": "and",
    "start": "1095440",
    "end": "1096720"
  },
  {
    "text": "we are able to pass traffic to android",
    "start": "1096720",
    "end": "1099840"
  },
  {
    "text": "and it is",
    "start": "1099840",
    "end": "1101320"
  },
  {
    "text": "mtlist to the web service and the",
    "start": "1101320",
    "end": "1106240"
  },
  {
    "text": "other aspects since we had",
    "start": "1106240",
    "end": "1109280"
  },
  {
    "text": "meshed the",
    "start": "1109280",
    "end": "1110799"
  },
  {
    "text": "emoji water workload and that also shows",
    "start": "1110799",
    "end": "1113520"
  },
  {
    "text": "up here",
    "start": "1113520",
    "end": "1115200"
  },
  {
    "text": "and now let's just go ahead and add an",
    "start": "1115200",
    "end": "1118320"
  },
  {
    "text": "ssl cert",
    "start": "1118320",
    "end": "1120400"
  },
  {
    "text": "um we have the",
    "start": "1120400",
    "end": "1123840"
  },
  {
    "text": "uh we have the uh on root uh setup and",
    "start": "1124640",
    "end": "1129120"
  },
  {
    "text": "let's just install the certificate on it",
    "start": "1129120",
    "end": "1132320"
  },
  {
    "text": "so",
    "start": "1132320",
    "end": "1135320"
  },
  {
    "text": "here we just change the",
    "start": "1136000",
    "end": "1138320"
  },
  {
    "text": "name",
    "start": "1138320",
    "end": "1140559"
  },
  {
    "text": "and",
    "start": "1142240",
    "end": "1143600"
  },
  {
    "text": "everything else is the same",
    "start": "1143600",
    "end": "1146400"
  },
  {
    "text": "and we enable tls to true",
    "start": "1146400",
    "end": "1149600"
  },
  {
    "text": "we set up our email to",
    "start": "1149600",
    "end": "1153280"
  },
  {
    "text": "a valid email for us and then let's",
    "start": "1153520",
    "end": "1156720"
  },
  {
    "text": "go ahead and",
    "start": "1156720",
    "end": "1158480"
  },
  {
    "text": "request a certificate using acme from",
    "start": "1158480",
    "end": "1161679"
  },
  {
    "text": "let's encrypt",
    "start": "1161679",
    "end": "1165000"
  },
  {
    "text": "and then again",
    "start": "1166799",
    "end": "1168320"
  },
  {
    "text": "this will go ahead and",
    "start": "1168320",
    "end": "1171120"
  },
  {
    "text": "talk to the acne server to get a",
    "start": "1171120",
    "end": "1173520"
  },
  {
    "text": "certificate verify a certificate",
    "start": "1173520",
    "end": "1176880"
  },
  {
    "text": "and then the certificate will get",
    "start": "1176880",
    "end": "1178880"
  },
  {
    "text": "installed",
    "start": "1178880",
    "end": "1181200"
  },
  {
    "text": "on the app so let's quickly look at",
    "start": "1181200",
    "end": "1183600"
  },
  {
    "text": "what's going on with the cert",
    "start": "1183600",
    "end": "1187039"
  },
  {
    "text": "so it is not ready yet",
    "start": "1187280",
    "end": "1191720"
  },
  {
    "text": "there you are it's ready",
    "start": "1192559",
    "end": "1194480"
  },
  {
    "text": "so let's go ahead and",
    "start": "1194480",
    "end": "1197440"
  },
  {
    "text": "fire a call request",
    "start": "1197440",
    "end": "1200960"
  },
  {
    "text": "and",
    "start": "1203600",
    "end": "1204799"
  },
  {
    "text": "we're able to see that",
    "start": "1204799",
    "end": "1207679"
  },
  {
    "text": "there is end to end tls here",
    "start": "1207679",
    "end": "1211440"
  },
  {
    "text": "and",
    "start": "1211440",
    "end": "1213679"
  },
  {
    "text": "we see the tls handshake and",
    "start": "1216480",
    "end": "1219360"
  },
  {
    "text": "we see that",
    "start": "1219360",
    "end": "1222240"
  },
  {
    "text": "the cn is set to",
    "start": "1227360",
    "end": "1229440"
  },
  {
    "text": "the domain name that we specified",
    "start": "1229440",
    "end": "1232640"
  },
  {
    "text": "and",
    "start": "1232640",
    "end": "1235640"
  },
  {
    "text": "let's look at the cloud and see",
    "start": "1235760",
    "end": "1240320"
  },
  {
    "text": "so i think",
    "start": "1242000",
    "end": "1243360"
  },
  {
    "text": "here you can look at this and go",
    "start": "1243360",
    "end": "1246720"
  },
  {
    "text": "let's look at application tls and linker",
    "start": "1246720",
    "end": "1249679"
  },
  {
    "text": "dtls",
    "start": "1249679",
    "end": "1252480"
  },
  {
    "text": "and there you are the application tier",
    "start": "1257440",
    "end": "1259360"
  },
  {
    "text": "that showed up",
    "start": "1259360",
    "end": "1260960"
  },
  {
    "text": "that's the linker dtls",
    "start": "1260960",
    "end": "1263760"
  },
  {
    "text": "so going back to",
    "start": "1263760",
    "end": "1265840"
  },
  {
    "text": "uh this uh the",
    "start": "1265840",
    "end": "1268080"
  },
  {
    "text": "cert that we installed",
    "start": "1268080",
    "end": "1270320"
  },
  {
    "text": "that covered the tls from the user to",
    "start": "1270320",
    "end": "1273039"
  },
  {
    "text": "android",
    "start": "1273039",
    "end": "1274000"
  },
  {
    "text": "and we were able to mesh on root",
    "start": "1274000",
    "end": "1277120"
  },
  {
    "text": "and",
    "start": "1277120",
    "end": "1278080"
  },
  {
    "text": "the emoji water workload",
    "start": "1278080",
    "end": "1280880"
  },
  {
    "text": "which was the mesh mtrs aspect so that's",
    "start": "1280880",
    "end": "1283600"
  },
  {
    "text": "how we achieved the end-to-end",
    "start": "1283600",
    "end": "1285600"
  },
  {
    "text": "encryption",
    "start": "1285600",
    "end": "1287360"
  },
  {
    "text": "uh using",
    "start": "1287360",
    "end": "1288960"
  },
  {
    "text": "the liquidity service mesh and on root",
    "start": "1288960",
    "end": "1292799"
  },
  {
    "text": "so that concludes the",
    "start": "1292799",
    "end": "1295360"
  },
  {
    "text": "demo uh if you have questions feel free",
    "start": "1295360",
    "end": "1298400"
  },
  {
    "text": "to drop us a note through the website",
    "start": "1298400",
    "end": "1301120"
  },
  {
    "text": "and thank you for joining us have a",
    "start": "1301120",
    "end": "1303840"
  },
  {
    "text": "great day bye",
    "start": "1303840",
    "end": "1307360"
  }
]