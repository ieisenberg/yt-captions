[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "all right hello everyone thanks for",
    "start": "30",
    "end": "3840"
  },
  {
    "text": "joining my session on extending",
    "start": "3840",
    "end": "5940"
  },
  {
    "text": "kubernetes our implementation on elf for",
    "start": "5940",
    "end": "10080"
  },
  {
    "text": "ingress controller",
    "start": "10080",
    "end": "13049"
  },
  {
    "text": "I am sinuous bra morale - I work as a",
    "start": "13049",
    "end": "18840"
  },
  {
    "text": "software engineer at IBM excited to come",
    "start": "18840",
    "end": "25260"
  },
  {
    "text": "to Bangalore to give this talk and meet",
    "start": "25260",
    "end": "28170"
  },
  {
    "text": "you all",
    "start": "28170",
    "end": "29029"
  },
  {
    "text": "I'm told that if you have questions on",
    "start": "29029",
    "end": "33030"
  },
  {
    "text": "the session we can meet outside after",
    "start": "33030",
    "end": "35790"
  },
  {
    "text": "the session and discuss the original",
    "start": "35790",
    "end": "40500"
  },
  {
    "start": "39000",
    "end": "78000"
  },
  {
    "text": "presentation of this implementation was",
    "start": "40500",
    "end": "43500"
  },
  {
    "text": "given in cube corn 2018 in Seattle we",
    "start": "43500",
    "end": "49379"
  },
  {
    "text": "both developed the application we hung",
    "start": "49379",
    "end": "52640"
  },
  {
    "text": "he is now the chair of cig scheduling",
    "start": "52640",
    "end": "56039"
  },
  {
    "text": "and I actually participate on kubernetes",
    "start": "56039",
    "end": "60090"
  },
  {
    "text": "conformance program as well as sig",
    "start": "60090",
    "end": "62520"
  },
  {
    "text": "testing and six storage I've been",
    "start": "62520",
    "end": "66140"
  },
  {
    "text": "working on open source projects for four",
    "start": "66140",
    "end": "70979"
  },
  {
    "text": "five years now and about last two three",
    "start": "70979",
    "end": "74610"
  },
  {
    "text": "years on communities",
    "start": "74610",
    "end": "77720"
  },
  {
    "text": "- to give you a big background on this",
    "start": "80340",
    "end": "84390"
  },
  {
    "text": "how do we expose the communities",
    "start": "84390",
    "end": "87310"
  },
  {
    "text": "workloads externally especially for El",
    "start": "87310",
    "end": "92350"
  },
  {
    "text": "for services and the background and",
    "start": "92350",
    "end": "97420"
  },
  {
    "text": "motivation for why we ended up",
    "start": "97420",
    "end": "99070"
  },
  {
    "text": "developing this solution and we",
    "start": "99070",
    "end": "101440"
  },
  {
    "text": "introduced a concept called shared load",
    "start": "101440",
    "end": "103270"
  },
  {
    "text": "balancer which is a CRT and a custom",
    "start": "103270",
    "end": "107560"
  },
  {
    "text": "controller which is the way to go",
    "start": "107560",
    "end": "110020"
  },
  {
    "text": "nowadays and I'll show you a few demos",
    "start": "110020",
    "end": "113740"
  },
  {
    "text": "on different cloud providers how this is",
    "start": "113740",
    "end": "115960"
  },
  {
    "text": "done what words are nothing but set of",
    "start": "115960",
    "end": "123310"
  },
  {
    "start": "117000",
    "end": "175000"
  },
  {
    "text": "containers running inside communities",
    "start": "123310",
    "end": "125440"
  },
  {
    "text": "pods they can communicate within the",
    "start": "125440",
    "end": "127570"
  },
  {
    "text": "cluster using their internal network but",
    "start": "127570",
    "end": "131830"
  },
  {
    "text": "they cannot communicate to outside world",
    "start": "131830",
    "end": "134560"
  },
  {
    "text": "and in order to facilitate the",
    "start": "134560",
    "end": "137800"
  },
  {
    "text": "communication we have a resource called",
    "start": "137800",
    "end": "141550"
  },
  {
    "text": "service services are of two types right",
    "start": "141550",
    "end": "144780"
  },
  {
    "text": "internal services which are of service",
    "start": "144780",
    "end": "148360"
  },
  {
    "text": "type cluster IP and external services",
    "start": "148360",
    "end": "151170"
  },
  {
    "text": "which are of type node port or load",
    "start": "151170",
    "end": "154390"
  },
  {
    "text": "balancer cluster IP server service",
    "start": "154390",
    "end": "158019"
  },
  {
    "text": "exposes the service on a cluster",
    "start": "158019",
    "end": "160079"
  },
  {
    "text": "internal IP choosing this value makes",
    "start": "160079",
    "end": "164470"
  },
  {
    "text": "the service only reachable within the",
    "start": "164470",
    "end": "166420"
  },
  {
    "text": "cluster but not outside our main focus",
    "start": "166420",
    "end": "169510"
  },
  {
    "text": "today is to provide the connectivity for",
    "start": "169510",
    "end": "171670"
  },
  {
    "text": "all our clients outside of the cluster",
    "start": "171670",
    "end": "175380"
  },
  {
    "start": "175000",
    "end": "209000"
  },
  {
    "text": "so let's see what a node port service is",
    "start": "175380",
    "end": "178360"
  },
  {
    "text": "a node boat service opens a port on the",
    "start": "178360",
    "end": "182829"
  },
  {
    "text": "nodes of the cluster and when the client",
    "start": "182829",
    "end": "185380"
  },
  {
    "text": "wants to connect it needs to know the",
    "start": "185380",
    "end": "187090"
  },
  {
    "text": "public IP along with the port of your",
    "start": "187090",
    "end": "190150"
  },
  {
    "text": "service to reach your back-end",
    "start": "190150",
    "end": "192489"
  },
  {
    "text": "applications so the port range is 30,000",
    "start": "192489",
    "end": "197620"
  },
  {
    "text": "to 32,000 767 is allocated for and all",
    "start": "197620",
    "end": "200859"
  },
  {
    "text": "the workers should open this should have",
    "start": "200859",
    "end": "203769"
  },
  {
    "text": "a public IP and open these ports for you",
    "start": "203769",
    "end": "205540"
  },
  {
    "text": "for in order to communicate",
    "start": "205540",
    "end": "209750"
  },
  {
    "start": "209000",
    "end": "280000"
  },
  {
    "text": "the other option is service type load",
    "start": "209750",
    "end": "212840"
  },
  {
    "text": "balancer when you create a service type",
    "start": "212840",
    "end": "215510"
  },
  {
    "text": "load balancer the its it's actually the",
    "start": "215510",
    "end": "221960"
  },
  {
    "text": "service provider who knows the best of",
    "start": "221960",
    "end": "225260"
  },
  {
    "text": "the network setup and whatnot and",
    "start": "225260",
    "end": "227420"
  },
  {
    "text": "they'll create a load balancer for you",
    "start": "227420",
    "end": "229640"
  },
  {
    "text": "which is external to the cluster and",
    "start": "229640",
    "end": "232190"
  },
  {
    "text": "that's a public IP you used to connect",
    "start": "232190",
    "end": "235190"
  },
  {
    "text": "to your node port service inside the",
    "start": "235190",
    "end": "238400"
  },
  {
    "text": "cluster this is the best option and",
    "start": "238400",
    "end": "243490"
  },
  {
    "text": "using this option you should be able to",
    "start": "243490",
    "end": "247220"
  },
  {
    "text": "connect a workload running inside the",
    "start": "247220",
    "end": "251120"
  },
  {
    "text": "cluster through the load balancer to",
    "start": "251120",
    "end": "255020"
  },
  {
    "text": "your external client again this is very",
    "start": "255020",
    "end": "261079"
  },
  {
    "text": "dedicated in the sense that each of your",
    "start": "261080",
    "end": "265040"
  },
  {
    "text": "applications running inside the cluster",
    "start": "265040",
    "end": "266540"
  },
  {
    "text": "will end up having a load balancer that",
    "start": "266540",
    "end": "269630"
  },
  {
    "text": "is that cannot be shared by different",
    "start": "269630",
    "end": "273320"
  },
  {
    "text": "applications inside the cluster which",
    "start": "273320",
    "end": "275840"
  },
  {
    "text": "causes some of the problems that I",
    "start": "275840",
    "end": "277850"
  },
  {
    "text": "talked about today and briefly I want to",
    "start": "277850",
    "end": "283580"
  },
  {
    "start": "280000",
    "end": "373000"
  },
  {
    "text": "touch upon the ingress ingress object is",
    "start": "283580",
    "end": "286460"
  },
  {
    "text": "native to kubernetes and with the",
    "start": "286460",
    "end": "290180"
  },
  {
    "text": "ingress object we have shared",
    "start": "290180",
    "end": "293830"
  },
  {
    "text": "connectivity at l7 HTTP headers have lot",
    "start": "293830",
    "end": "300020"
  },
  {
    "text": "of information and using the path",
    "start": "300020",
    "end": "302240"
  },
  {
    "text": "supports we we can allow sharing and",
    "start": "302240",
    "end": "306050"
  },
  {
    "text": "routing by setting up rules on the",
    "start": "306050",
    "end": "309110"
  },
  {
    "text": "ingress object and have the English",
    "start": "309110",
    "end": "312320"
  },
  {
    "text": "controller process these rules and send",
    "start": "312320",
    "end": "317660"
  },
  {
    "text": "your traffic to different applications",
    "start": "317660",
    "end": "319400"
  },
  {
    "text": "are running inside the cluster ingress",
    "start": "319400",
    "end": "324320"
  },
  {
    "text": "is a deployment model it can be run as a",
    "start": "324320",
    "end": "327320"
  },
  {
    "text": "daemon set ideally there is one external",
    "start": "327320",
    "end": "332510"
  },
  {
    "text": "load balancer like I show here that",
    "start": "332510",
    "end": "336470"
  },
  {
    "text": "connects to the ingress controller which",
    "start": "336470",
    "end": "338180"
  },
  {
    "text": "process the rules so that you can",
    "start": "338180",
    "end": "340160"
  },
  {
    "text": "connect to multiple",
    "start": "340160",
    "end": "341190"
  },
  {
    "text": "applications the advantage with this is",
    "start": "341190",
    "end": "343620"
  },
  {
    "text": "there is less configuration less",
    "start": "343620",
    "end": "346890"
  },
  {
    "text": "resources to manage there is only one",
    "start": "346890",
    "end": "349110"
  },
  {
    "text": "load balancer you can also have multiple",
    "start": "349110",
    "end": "351720"
  },
  {
    "text": "ingress controllers running inside your",
    "start": "351720",
    "end": "353790"
  },
  {
    "text": "cluster by defining various classes of",
    "start": "353790",
    "end": "357300"
  },
  {
    "text": "ingress objects so they can act upon",
    "start": "357300",
    "end": "359840"
  },
  {
    "text": "certain set of classes popular ingress",
    "start": "359840",
    "end": "366540"
  },
  {
    "text": "control controllers are like traffic and",
    "start": "366540",
    "end": "368790"
  },
  {
    "text": "genetics or envoy and it's useful for l7",
    "start": "368790",
    "end": "374480"
  },
  {
    "text": "so based on my brief introduction to",
    "start": "374480",
    "end": "378930"
  },
  {
    "text": "services in communities what you see",
    "start": "378930",
    "end": "382920"
  },
  {
    "text": "here is a quadrant a simple node port or",
    "start": "382920",
    "end": "390210"
  },
  {
    "text": "load balance of service for l 4 or l 7",
    "start": "390210",
    "end": "392880"
  },
  {
    "text": "they are dedicated each application",
    "start": "392880",
    "end": "395760"
  },
  {
    "text": "requires a service and the service is",
    "start": "395760",
    "end": "398900"
  },
  {
    "text": "one-to-one correspondence to an external",
    "start": "398900",
    "end": "402890"
  },
  {
    "text": "IP with the with ingress",
    "start": "402890",
    "end": "410720"
  },
  {
    "start": "410000",
    "end": "432000"
  },
  {
    "text": "you can share l7 but there is something",
    "start": "413380",
    "end": "417280"
  },
  {
    "text": "missing here which even the upstream",
    "start": "417280",
    "end": "420070"
  },
  {
    "text": "wants that is sharing on the l4 side",
    "start": "420070",
    "end": "424590"
  },
  {
    "text": "this is not a hypothetical problem we",
    "start": "424590",
    "end": "428290"
  },
  {
    "text": "ran into that's where our background and",
    "start": "428290",
    "end": "431230"
  },
  {
    "text": "motivation is we have an application",
    "start": "431230",
    "end": "434920"
  },
  {
    "start": "432000",
    "end": "472000"
  },
  {
    "text": "that we wanted to borrow and the",
    "start": "434920",
    "end": "437560"
  },
  {
    "text": "application had several individual",
    "start": "437560",
    "end": "442060"
  },
  {
    "text": "workloads inside one for to date JDBC",
    "start": "442060",
    "end": "446080"
  },
  {
    "text": "connections we needed to connect to",
    "start": "446080",
    "end": "447840"
  },
  {
    "text": "databases and a UDP to transfer data and",
    "start": "447840",
    "end": "451950"
  },
  {
    "text": "then they a web console what happens",
    "start": "451950",
    "end": "456100"
  },
  {
    "text": "here is that when you when you try to",
    "start": "456100",
    "end": "459960"
  },
  {
    "text": "deploy this application we end up",
    "start": "459960",
    "end": "463690"
  },
  {
    "text": "creating multiple load balancers that is",
    "start": "463690",
    "end": "468070"
  },
  {
    "text": "not an efficient way for us to manage",
    "start": "468070",
    "end": "472290"
  },
  {
    "start": "472000",
    "end": "493000"
  },
  {
    "text": "what I wanted to do is as you can see",
    "start": "473250",
    "end": "476290"
  },
  {
    "text": "here if I deploy an application for",
    "start": "476290",
    "end": "478750"
  },
  {
    "text": "instance four of the applications I want",
    "start": "478750",
    "end": "481660"
  },
  {
    "text": "to have a single external IP with",
    "start": "481660",
    "end": "484750"
  },
  {
    "text": "multiple each of the applications have",
    "start": "484750",
    "end": "487260"
  },
  {
    "text": "their own port",
    "start": "487260",
    "end": "490680"
  },
  {
    "text": "to achieve this we wanted to share the",
    "start": "492640",
    "end": "497060"
  },
  {
    "start": "493000",
    "end": "581000"
  },
  {
    "text": "load balancer that the cluster service",
    "start": "497060",
    "end": "499670"
  },
  {
    "text": "provider will create for you the way we",
    "start": "499670",
    "end": "503510"
  },
  {
    "text": "can do that is if we can create a port",
    "start": "503510",
    "end": "506110"
  },
  {
    "text": "for each of the services we can use that",
    "start": "506110",
    "end": "511160"
  },
  {
    "text": "port to delegate the traffic to",
    "start": "511160",
    "end": "514640"
  },
  {
    "text": "individual node port services running",
    "start": "514640",
    "end": "517010"
  },
  {
    "text": "inside the cluster such that we can talk",
    "start": "517010",
    "end": "520760"
  },
  {
    "text": "to different applications this way it is",
    "start": "520760",
    "end": "527780"
  },
  {
    "text": "cost effective we are using less number",
    "start": "527780",
    "end": "529580"
  },
  {
    "text": "of resources it's also user friendly you",
    "start": "529580",
    "end": "533930"
  },
  {
    "text": "don't have to remember much there is",
    "start": "533930",
    "end": "536060"
  },
  {
    "text": "only one external IP of the load",
    "start": "536060",
    "end": "537680"
  },
  {
    "text": "balancer and much better to operate on",
    "start": "537680",
    "end": "542390"
  },
  {
    "text": "and we can use the well-known ports of",
    "start": "542390",
    "end": "544820"
  },
  {
    "text": "the applications that we can expose to",
    "start": "544820",
    "end": "546800"
  },
  {
    "text": "outside world and we are using the Kuban",
    "start": "546800",
    "end": "552440"
  },
  {
    "text": "IDs assets we are not reinventing",
    "start": "552440",
    "end": "556610"
  },
  {
    "text": "anything only concept we have to",
    "start": "556610",
    "end": "559340"
  },
  {
    "text": "introduce is a shared load balancer",
    "start": "559340",
    "end": "561050"
  },
  {
    "text": "which is a custom resource object it is",
    "start": "561050",
    "end": "564260"
  },
  {
    "text": "exactly almost similar to a service",
    "start": "564260",
    "end": "567400"
  },
  {
    "text": "definition if you look at the spec of",
    "start": "567400",
    "end": "569630"
  },
  {
    "text": "the service is nothing but s LV has to",
    "start": "569630",
    "end": "572420"
  },
  {
    "text": "send that information back to create the",
    "start": "572420",
    "end": "574700"
  },
  {
    "text": "services so all we need is similar to a",
    "start": "574700",
    "end": "577550"
  },
  {
    "text": "service pack the CRT is similar to that",
    "start": "577550",
    "end": "581710"
  },
  {
    "start": "581000",
    "end": "621000"
  },
  {
    "text": "if you break down the problem the",
    "start": "581710",
    "end": "584600"
  },
  {
    "text": "problem now as I described in the last",
    "start": "584600",
    "end": "587690"
  },
  {
    "text": "two slides you need to open additional",
    "start": "587690",
    "end": "590780"
  },
  {
    "text": "ports on already deployed load balancer",
    "start": "590780",
    "end": "593330"
  },
  {
    "text": "and of course you said all the security",
    "start": "593330",
    "end": "596930"
  },
  {
    "text": "groups on Amazon or firewall rules",
    "start": "596930",
    "end": "598820"
  },
  {
    "text": "forwarding rules was not and then",
    "start": "598820",
    "end": "603190"
  },
  {
    "text": "associate this to the backend parts so",
    "start": "603190",
    "end": "606430"
  },
  {
    "text": "all these ports that you are creating on",
    "start": "606430",
    "end": "608900"
  },
  {
    "text": "the load balancer has to be able to talk",
    "start": "608900",
    "end": "612380"
  },
  {
    "text": "to the backend part and how do we",
    "start": "612380",
    "end": "614780"
  },
  {
    "text": "delegate that information back to the",
    "start": "614780",
    "end": "616670"
  },
  {
    "text": "end-user because he does not know what I",
    "start": "616670",
    "end": "618830"
  },
  {
    "text": "did on the load balancer",
    "start": "618830",
    "end": "622270"
  },
  {
    "text": "the way we implemented is using a custom",
    "start": "622690",
    "end": "627430"
  },
  {
    "text": "resource which I call it shared lb",
    "start": "627430",
    "end": "629320"
  },
  {
    "text": "sometimes s lb sometimes so bear with me",
    "start": "629320",
    "end": "631600"
  },
  {
    "text": "on that a custom resource object when it",
    "start": "631600",
    "end": "635080"
  },
  {
    "text": "is created it creates a load balancer",
    "start": "635080",
    "end": "638940"
  },
  {
    "text": "type service which means that a share a",
    "start": "638940",
    "end": "642550"
  },
  {
    "text": "load balancer is created for you and to",
    "start": "642550",
    "end": "645460"
  },
  {
    "text": "create the load balancer we create with",
    "start": "645460",
    "end": "647470"
  },
  {
    "text": "a dummy 4333 what not you see it in the",
    "start": "647470",
    "end": "650230"
  },
  {
    "text": "demo and once we create that we read the",
    "start": "650230",
    "end": "653380"
  },
  {
    "text": "spec of the custom resource object use",
    "start": "653380",
    "end": "657670"
  },
  {
    "text": "that to create a port like in this case",
    "start": "657670",
    "end": "659950"
  },
  {
    "text": "for ta and that for ta is associated",
    "start": "659950",
    "end": "663430"
  },
  {
    "text": "with the node port service inside the",
    "start": "663430",
    "end": "665200"
  },
  {
    "text": "cluster now we have the connectivity",
    "start": "665200",
    "end": "668560"
  },
  {
    "text": "into the cluster to talk to the",
    "start": "668560",
    "end": "670480"
  },
  {
    "text": "application we want the last step is",
    "start": "670480",
    "end": "675250"
  },
  {
    "text": "whatever the node port services we",
    "start": "675250",
    "end": "677650"
  },
  {
    "text": "created we need to transfer the",
    "start": "677650",
    "end": "679270"
  },
  {
    "text": "information of that back to the customer",
    "start": "679270",
    "end": "682450"
  },
  {
    "text": "resource object store it in there so",
    "start": "682450",
    "end": "684610"
  },
  {
    "text": "that when the user queries he knows",
    "start": "684610",
    "end": "687160"
  },
  {
    "text": "exactly what is the IP and the port",
    "start": "687160",
    "end": "690610"
  },
  {
    "text": "he needs to connect it this way you can",
    "start": "690610",
    "end": "693970"
  },
  {
    "text": "share multiple L for services through a",
    "start": "693970",
    "end": "698110"
  },
  {
    "text": "single load balancer let's see some",
    "start": "698110",
    "end": "703810"
  },
  {
    "start": "701000",
    "end": "966000"
  },
  {
    "text": "demos that will probably give us a",
    "start": "703810",
    "end": "706720"
  },
  {
    "text": "little more insight into",
    "start": "706720",
    "end": "710699"
  },
  {
    "text": "so this is Google flower there are three",
    "start": "713040",
    "end": "716509"
  },
  {
    "text": "nodes that are running out sorry",
    "start": "716509",
    "end": "720800"
  },
  {
    "text": "give me one second",
    "start": "736430",
    "end": "739630"
  },
  {
    "text": "all right we are running a Google cloud",
    "start": "770130",
    "end": "773990"
  },
  {
    "text": "inside a global flood with three notes",
    "start": "773990",
    "end": "776790"
  },
  {
    "text": "running the version of the Google Google",
    "start": "776790",
    "end": "781620"
  },
  {
    "text": "flouts server is 116 so we'd like dim",
    "start": "781620",
    "end": "787800"
  },
  {
    "text": "said in the morning we have all the new",
    "start": "787800",
    "end": "790139"
  },
  {
    "text": "CRD definition validations and whatnot",
    "start": "790139",
    "end": "793350"
  },
  {
    "text": "and plus the new controller runtime",
    "start": "793350",
    "end": "796970"
  },
  {
    "text": "there are no services running and I",
    "start": "796970",
    "end": "800850"
  },
  {
    "text": "deploy for applications on this cluster",
    "start": "800850",
    "end": "807440"
  },
  {
    "text": "well",
    "start": "808670",
    "end": "810970"
  },
  {
    "text": "and when you say get CR is there is a",
    "start": "810970",
    "end": "814569"
  },
  {
    "text": "shared LBC already already created and",
    "start": "814569",
    "end": "819930"
  },
  {
    "text": "if you see the instances of shared",
    "start": "819930",
    "end": "822279"
  },
  {
    "text": "shared lb there are none at this point",
    "start": "822279",
    "end": "825699"
  },
  {
    "text": "we want to connect to all this for",
    "start": "825699",
    "end": "827910"
  },
  {
    "text": "applications so we create for instances",
    "start": "827910",
    "end": "830379"
  },
  {
    "text": "of the Sherrill base each of them have",
    "start": "830379",
    "end": "834250"
  },
  {
    "text": "the information how to connect to those",
    "start": "834250",
    "end": "835899"
  },
  {
    "text": "applications this triggers us to create",
    "start": "835899",
    "end": "841060"
  },
  {
    "text": "one load balancer only one because our",
    "start": "841060",
    "end": "843970"
  },
  {
    "text": "capacity of the lower back of this",
    "start": "843970",
    "end": "847089"
  },
  {
    "text": "particular application is to run five",
    "start": "847089",
    "end": "849189"
  },
  {
    "text": "connections on single load balancer by",
    "start": "849189",
    "end": "851259"
  },
  {
    "text": "default so if you look at the GCP",
    "start": "851259",
    "end": "853899"
  },
  {
    "text": "console there is only one load balancer",
    "start": "853899",
    "end": "857019"
  },
  {
    "text": "created at this point in time and on the",
    "start": "857019",
    "end": "865089"
  },
  {
    "text": "front ends if you see there are that's",
    "start": "865089",
    "end": "868660"
  },
  {
    "text": "the dummy port I'm talking about when I",
    "start": "868660",
    "end": "870430"
  },
  {
    "text": "created the load balancer type and as",
    "start": "870430",
    "end": "874629"
  },
  {
    "text": "the applications share deltas are",
    "start": "874629",
    "end": "877540"
  },
  {
    "text": "created they are getting all that loop",
    "start": "877540",
    "end": "881980"
  },
  {
    "text": "is happening the node port service is",
    "start": "881980",
    "end": "884769"
  },
  {
    "text": "created in the cluster and the",
    "start": "884769",
    "end": "886420"
  },
  {
    "text": "assignments are happening so all the",
    "start": "886420",
    "end": "888910"
  },
  {
    "text": "four services are having the same",
    "start": "888910",
    "end": "891970"
  },
  {
    "text": "external public IP and the ports are",
    "start": "891970",
    "end": "895300"
  },
  {
    "text": "mapped there is a four thousand one port",
    "start": "895300",
    "end": "898259"
  },
  {
    "text": "that is mapped to a port on the load",
    "start": "898259",
    "end": "900970"
  },
  {
    "text": "balancer now if you see there are four",
    "start": "900970",
    "end": "904620"
  },
  {
    "text": "friend ports that are created for you",
    "start": "904620",
    "end": "908819"
  },
  {
    "text": "that will be able to talk to the backend",
    "start": "908819",
    "end": "911559"
  },
  {
    "text": "node port service to connect to these",
    "start": "911559",
    "end": "913839"
  },
  {
    "text": "four applications and we have to create",
    "start": "913839",
    "end": "916930"
  },
  {
    "text": "some firewall rules to open up the ports",
    "start": "916930",
    "end": "920470"
  },
  {
    "text": "so we by default open up all the TCP and",
    "start": "920470",
    "end": "924100"
  },
  {
    "text": "UDP ports from 30,000 to 32,000 767",
    "start": "924100",
    "end": "929610"
  },
  {
    "text": "and there is only one external IP that",
    "start": "935270",
    "end": "937700"
  },
  {
    "text": "we are buying so the load balancer is",
    "start": "937700",
    "end": "941510"
  },
  {
    "text": "said to use an external IP and set up",
    "start": "941510",
    "end": "945050"
  },
  {
    "text": "forwarding rules so that the traffic can",
    "start": "945050",
    "end": "947120"
  },
  {
    "text": "go through as you can query the shared",
    "start": "947120",
    "end": "953420"
  },
  {
    "text": "load balancers they all show you the",
    "start": "953420",
    "end": "956420"
  },
  {
    "text": "name of the load balancer as well as a",
    "start": "956420",
    "end": "958070"
  },
  {
    "text": "port so now if I do a net cat on these",
    "start": "958070",
    "end": "961490"
  },
  {
    "text": "I'm able to access all the applications",
    "start": "961490",
    "end": "964250"
  },
  {
    "text": "that are running in the back let's see a",
    "start": "964250",
    "end": "968350"
  },
  {
    "start": "966000",
    "end": "1141000"
  },
  {
    "text": "different approach now on IBM cloud I",
    "start": "968350",
    "end": "973300"
  },
  {
    "text": "want to see if my TCP and UDP services",
    "start": "973300",
    "end": "976910"
  },
  {
    "text": "work again like I said load balancers",
    "start": "976910",
    "end": "980180"
  },
  {
    "text": "are specific to individual flower",
    "start": "980180",
    "end": "981800"
  },
  {
    "text": "providers they have different quirks or",
    "start": "981800",
    "end": "988820"
  },
  {
    "text": "whatever you call it so again our Nikias",
    "start": "988820",
    "end": "991820"
  },
  {
    "text": "I'm running 116 and I have three nodes",
    "start": "991820",
    "end": "998710"
  },
  {
    "text": "there are no services running at this",
    "start": "998710",
    "end": "1001990"
  },
  {
    "text": "point and let me create two deployments",
    "start": "1001990",
    "end": "1004150"
  },
  {
    "text": "one is TCP and the other is UDP let's",
    "start": "1004150",
    "end": "1011590"
  },
  {
    "text": "see the CRD definition seared in a",
    "start": "1011590",
    "end": "1013600"
  },
  {
    "text": "petition is already uploaded into the",
    "start": "1013600",
    "end": "1015340"
  },
  {
    "text": "cluster so we can create the CRD objects",
    "start": "1015340",
    "end": "1018790"
  },
  {
    "text": "i am going to create one like i said",
    "start": "1018790",
    "end": "1022060"
  },
  {
    "text": "here i show the service definition of",
    "start": "1022060",
    "end": "1024490"
  },
  {
    "text": "the CRD object the port is 4001 for the",
    "start": "1024490",
    "end": "1028030"
  },
  {
    "text": "TCP connection and 5,000 won for the UDP",
    "start": "1028030",
    "end": "1031420"
  },
  {
    "text": "connection when once I create the TCP",
    "start": "1031420",
    "end": "1036240"
  },
  {
    "text": "shared elbe at this point that triggers",
    "start": "1036240",
    "end": "1039610"
  },
  {
    "text": "me to create a load balancer on IKS as",
    "start": "1039610",
    "end": "1044140"
  },
  {
    "text": "you can see get service shows you a load",
    "start": "1044140",
    "end": "1046990"
  },
  {
    "text": "balancer created with a public IP and",
    "start": "1046990",
    "end": "1049030"
  },
  {
    "text": "the same IP is associated with my shared",
    "start": "1049030",
    "end": "1052390"
  },
  {
    "text": "lb object also apart from the default",
    "start": "1052390",
    "end": "1056380"
  },
  {
    "text": "port 3 3 3 there is also 4,000 won and",
    "start": "1056380",
    "end": "1060730"
  },
  {
    "text": "if you look at the shared lb the 4,000",
    "start": "1060730",
    "end": "1063010"
  },
  {
    "text": "won is associated with that",
    "start": "1063010",
    "end": "1065220"
  },
  {
    "text": "let's create the UDP service now both",
    "start": "1065220",
    "end": "1068440"
  },
  {
    "text": "the services are going to share the same",
    "start": "1068440",
    "end": "1070480"
  },
  {
    "text": "load balancer again and the same IP but",
    "start": "1070480",
    "end": "1074290"
  },
  {
    "text": "a different port if there is a port",
    "start": "1074290",
    "end": "1076540"
  },
  {
    "text": "conflict what we do is we create a new",
    "start": "1076540",
    "end": "1078700"
  },
  {
    "text": "shared new node back load balancer and",
    "start": "1078700",
    "end": "1081730"
  },
  {
    "text": "use that load balancer for that port so",
    "start": "1081730",
    "end": "1084220"
  },
  {
    "text": "no worries about poor conflicts let's do",
    "start": "1084220",
    "end": "1088390"
  },
  {
    "text": "an echo test for the TCP and UDP with a",
    "start": "1088390",
    "end": "1091090"
  },
  {
    "text": "minus u option so we did a echo test",
    "start": "1091090",
    "end": "1094480"
  },
  {
    "text": "onto the application so let's look at",
    "start": "1094480",
    "end": "1096610"
  },
  {
    "text": "the application logs the TCP log shows",
    "start": "1096610",
    "end": "1099070"
  },
  {
    "text": "you the echo test work fine as well as",
    "start": "1099070",
    "end": "1102700"
  },
  {
    "text": "on the UDP we saw they could test was",
    "start": "1102700",
    "end": "1106630"
  },
  {
    "text": "fine",
    "start": "1106630",
    "end": "1108420"
  },
  {
    "text": "you can set the capacity of how many",
    "start": "1108420",
    "end": "1111940"
  },
  {
    "text": "shared connections you want on the load",
    "start": "1111940",
    "end": "1113800"
  },
  {
    "text": "balancer one other cloud service",
    "start": "1113800",
    "end": "1120550"
  },
  {
    "text": "provided I would like to show you is",
    "start": "1120550",
    "end": "1123660"
  },
  {
    "text": "Amazon",
    "start": "1123660",
    "end": "1126660"
  },
  {
    "text": "oh by the way I'm also showing in this",
    "start": "1132880",
    "end": "1135250"
  },
  {
    "text": "demo another random port assignments so",
    "start": "1135250",
    "end": "1137920"
  },
  {
    "text": "if you don't specify the port here and",
    "start": "1137920",
    "end": "1139810"
  },
  {
    "text": "up what is assigned so that so in this",
    "start": "1139810",
    "end": "1142570"
  },
  {
    "text": "case I am sitting the capacity to two on",
    "start": "1142570",
    "end": "1144790"
  },
  {
    "text": "Amazon let's run it on Amazon Amazon is",
    "start": "1144790",
    "end": "1148780"
  },
  {
    "text": "still you can only deploy 114 so you",
    "start": "1148780",
    "end": "1152950"
  },
  {
    "text": "don't have all the goodies that CR DS",
    "start": "1152950",
    "end": "1155860"
  },
  {
    "text": "brings with 115 and 116",
    "start": "1155860",
    "end": "1159299"
  },
  {
    "text": "there are no services running at this",
    "start": "1166960",
    "end": "1168880"
  },
  {
    "text": "point I want to do three applications",
    "start": "1168880",
    "end": "1173370"
  },
  {
    "text": "since I said the capacity to two",
    "start": "1173370",
    "end": "1175860"
  },
  {
    "text": "eventually I'll be triggering how many",
    "start": "1175860",
    "end": "1178570"
  },
  {
    "text": "load balancers two because we will run",
    "start": "1178570",
    "end": "1183010"
  },
  {
    "text": "out of connections on the first load",
    "start": "1183010",
    "end": "1185320"
  },
  {
    "text": "balancer shared LB definition is already",
    "start": "1185320",
    "end": "1190630"
  },
  {
    "text": "in there three deployments are created",
    "start": "1190630",
    "end": "1194610"
  },
  {
    "text": "by the way the solution is namespace",
    "start": "1200580",
    "end": "1202830"
  },
  {
    "text": "centric so you can apply it to a",
    "start": "1202830",
    "end": "1206490"
  },
  {
    "text": "multi-tenant environment again I'm",
    "start": "1206490",
    "end": "1210809"
  },
  {
    "text": "showing you what the shirt shared lb",
    "start": "1210809",
    "end": "1214289"
  },
  {
    "text": "port should look like four thousand one",
    "start": "1214289",
    "end": "1216240"
  },
  {
    "text": "I created a shared lb this triggers a",
    "start": "1216240",
    "end": "1220220"
  },
  {
    "text": "creation of a load balancer on Amazon as",
    "start": "1220220",
    "end": "1225149"
  },
  {
    "text": "you can see in there and there is a",
    "start": "1225149",
    "end": "1228750"
  },
  {
    "text": "dummy listener as well as port 4,000 won",
    "start": "1228750",
    "end": "1231510"
  },
  {
    "text": "for the first application and we also",
    "start": "1231510",
    "end": "1235110"
  },
  {
    "text": "have to create on Amazon security groups",
    "start": "1235110",
    "end": "1238190"
  },
  {
    "text": "so if you go into the details and click",
    "start": "1238190",
    "end": "1242519"
  },
  {
    "text": "on the security group there is a",
    "start": "1242519",
    "end": "1245909"
  },
  {
    "text": "forwarding port on that Citigroup that",
    "start": "1245909",
    "end": "1250260"
  },
  {
    "text": "needs to be said inbound rule 4001 so",
    "start": "1250260",
    "end": "1256950"
  },
  {
    "text": "we're all good so we can connect to the",
    "start": "1256950",
    "end": "1258899"
  },
  {
    "text": "application Amazon of course users see",
    "start": "1258899",
    "end": "1262289"
  },
  {
    "text": "names to resolve and that is my first",
    "start": "1262289",
    "end": "1267380"
  },
  {
    "text": "shared",
    "start": "1267380",
    "end": "1269419"
  },
  {
    "text": "load balancer that is created on Amazon",
    "start": "1269419",
    "end": "1272330"
  },
  {
    "text": "with a dummy port and then I have my",
    "start": "1272330",
    "end": "1277500"
  },
  {
    "text": "shared lb which has opened about four",
    "start": "1277500",
    "end": "1279600"
  },
  {
    "text": "thousand one if you look at the shared",
    "start": "1279600",
    "end": "1282450"
  },
  {
    "text": "lb it shows me the definition slightly",
    "start": "1282450",
    "end": "1285990"
  },
  {
    "text": "differently because we are using one",
    "start": "1285990",
    "end": "1287700"
  },
  {
    "text": "fourteen we can do some magic with the",
    "start": "1287700",
    "end": "1293630"
  },
  {
    "text": "with the output to see in a much more",
    "start": "1293630",
    "end": "1297269"
  },
  {
    "text": "concise way so shared lb 1 is connected",
    "start": "1297269",
    "end": "1302010"
  },
  {
    "text": "to that load balancer at four to four",
    "start": "1302010",
    "end": "1305460"
  },
  {
    "text": "thousand one let's create the second one",
    "start": "1305460",
    "end": "1307710"
  },
  {
    "text": "what happens our capacity is two so that",
    "start": "1307710",
    "end": "1311159"
  },
  {
    "text": "means we can still share the first load",
    "start": "1311159",
    "end": "1314340"
  },
  {
    "text": "balancer so the second shared lb will",
    "start": "1314340",
    "end": "1318899"
  },
  {
    "text": "still use the first load balancer and we",
    "start": "1318899",
    "end": "1322740"
  },
  {
    "text": "will get an association pretty soon with",
    "start": "1322740",
    "end": "1327389"
  },
  {
    "text": "the same load balancer",
    "start": "1327389",
    "end": "1330620"
  },
  {
    "text": "as you can see the cname remains the",
    "start": "1340080",
    "end": "1343050"
  },
  {
    "text": "same a new port is four thousand two now",
    "start": "1343050",
    "end": "1348510"
  },
  {
    "text": "we create the third shared lb and now we",
    "start": "1348510",
    "end": "1354060"
  },
  {
    "text": "ran out of capacity which triggers the",
    "start": "1354060",
    "end": "1357900"
  },
  {
    "text": "loop to create another load balancer on",
    "start": "1357900",
    "end": "1362520"
  },
  {
    "text": "Amazon for us honey cares",
    "start": "1362520",
    "end": "1368330"
  },
  {
    "text": "there you see the second load balance is",
    "start": "1372160",
    "end": "1374620"
  },
  {
    "text": "created with a dummy port three three",
    "start": "1374620",
    "end": "1376150"
  },
  {
    "text": "three and the third shared load balancer",
    "start": "1376150",
    "end": "1382450"
  },
  {
    "text": "will be associated with that",
    "start": "1382450",
    "end": "1385320"
  },
  {
    "text": "the first two are two the first one and",
    "start": "1394010",
    "end": "1396260"
  },
  {
    "text": "the third one is so at this point what",
    "start": "1396260",
    "end": "1399470"
  },
  {
    "text": "happens if my post shared load balancer",
    "start": "1399470",
    "end": "1401690"
  },
  {
    "text": "is deleted I'll still have to load",
    "start": "1401690",
    "end": "1406490"
  },
  {
    "text": "balancers because I cannot rebalance the",
    "start": "1406490",
    "end": "1410270"
  },
  {
    "text": "traffic at this point we don't have any",
    "start": "1410270",
    "end": "1412190"
  },
  {
    "text": "solution to rebalance so as you can see",
    "start": "1412190",
    "end": "1416690"
  },
  {
    "text": "the load balancers are updated the",
    "start": "1416690",
    "end": "1420680"
  },
  {
    "text": "listeners are updated security groups",
    "start": "1420680",
    "end": "1422420"
  },
  {
    "text": "are updated",
    "start": "1422420",
    "end": "1425110"
  },
  {
    "text": "you can see the second load balancer is",
    "start": "1433420",
    "end": "1435550"
  },
  {
    "text": "using port 4003 first one is using four",
    "start": "1435550",
    "end": "1439150"
  },
  {
    "text": "thousand one and four thousand two to",
    "start": "1439150",
    "end": "1440560"
  },
  {
    "text": "connect to all my three applications and",
    "start": "1440560",
    "end": "1445690"
  },
  {
    "text": "if you go check the security groups the",
    "start": "1445690",
    "end": "1449140"
  },
  {
    "text": "security groups are also updated",
    "start": "1449140",
    "end": "1450730"
  },
  {
    "text": "accordingly",
    "start": "1450730",
    "end": "1453330"
  },
  {
    "text": "with the inbound rule set for those two",
    "start": "1463070",
    "end": "1468250"
  },
  {
    "text": "and s lookups on those C names will work",
    "start": "1472620",
    "end": "1475320"
  },
  {
    "text": "because it's an external load balancer",
    "start": "1475320",
    "end": "1477630"
  },
  {
    "text": "we can resolve it and the netcat on to",
    "start": "1477630",
    "end": "1481140"
  },
  {
    "text": "the first application of works fine tip",
    "start": "1481140",
    "end": "1483000"
  },
  {
    "text": "let's create a delete one of the shade",
    "start": "1483000",
    "end": "1485669"
  },
  {
    "text": "load balancers so at this point nothing",
    "start": "1485669",
    "end": "1491970"
  },
  {
    "text": "else will be done the the load balancer",
    "start": "1491970",
    "end": "1495120"
  },
  {
    "text": "both the load balances will remain",
    "start": "1495120",
    "end": "1496850"
  },
  {
    "text": "because there is at least one shared",
    "start": "1496850",
    "end": "1500210"
  },
  {
    "text": "application still connected to them",
    "start": "1500210",
    "end": "1502940"
  },
  {
    "text": "only thing that changes is the rules",
    "start": "1502940",
    "end": "1505320"
  },
  {
    "text": "change because the 4001 is application",
    "start": "1505320",
    "end": "1511470"
  },
  {
    "text": "is deleted we clean up those things in",
    "start": "1511470",
    "end": "1519330"
  },
  {
    "text": "the interest of the time since I am",
    "start": "1519330",
    "end": "1521309"
  },
  {
    "text": "running out let me go back to here to",
    "start": "1521309",
    "end": "1529409"
  },
  {
    "start": "1527000",
    "end": "1595000"
  },
  {
    "text": "wrap up I would like to discuss more",
    "start": "1529409",
    "end": "1532169"
  },
  {
    "text": "about the design and implementation",
    "start": "1532169",
    "end": "1534140"
  },
  {
    "text": "essentially we used existing resource",
    "start": "1534140",
    "end": "1536970"
  },
  {
    "text": "objects from kubernetes only thing our",
    "start": "1536970",
    "end": "1539190"
  },
  {
    "text": "controller does is manage the objects",
    "start": "1539190",
    "end": "1542659"
  },
  {
    "text": "using the Cloud SDK to to add ports and",
    "start": "1542659",
    "end": "1546690"
  },
  {
    "text": "security groups or firewall rules what",
    "start": "1546690",
    "end": "1548880"
  },
  {
    "text": "not n is configurable and we create load",
    "start": "1548880",
    "end": "1553830"
  },
  {
    "text": "balancers on demand and we use",
    "start": "1553830",
    "end": "1556250"
  },
  {
    "text": "well-known ports on the applications so",
    "start": "1556250",
    "end": "1558450"
  },
  {
    "text": "it's not easy to connect there are some",
    "start": "1558450",
    "end": "1560669"
  },
  {
    "text": "differences on the cloud providers that",
    "start": "1560669",
    "end": "1562409"
  },
  {
    "text": "is listed here on the slide deck you can",
    "start": "1562409",
    "end": "1564510"
  },
  {
    "text": "go through them all in all the most",
    "start": "1564510",
    "end": "1567450"
  },
  {
    "text": "important thing I want to say is our",
    "start": "1567450",
    "end": "1569460"
  },
  {
    "text": "code is on github please do check out",
    "start": "1569460",
    "end": "1573720"
  },
  {
    "text": "our code and if you want to better our",
    "start": "1573720",
    "end": "1577350"
  },
  {
    "text": "solution or make some changes you wanted",
    "start": "1577350",
    "end": "1580440"
  },
  {
    "text": "us to make some changes just communicate",
    "start": "1580440",
    "end": "1583230"
  },
  {
    "text": "with us on github again thanks for",
    "start": "1583230",
    "end": "1586710"
  },
  {
    "text": "listening to me any questions I'll take",
    "start": "1586710",
    "end": "1590309"
  },
  {
    "text": "it outside thank you",
    "start": "1590309",
    "end": "1595610"
  }
]