[
  {
    "text": "hello everyone uh we're very happy to be here today we're going",
    "start": "240",
    "end": "5399"
  },
  {
    "text": "to to to tell you how we migrated to arm at at data dog so I'm Lauren bernai and",
    "start": "5399",
    "end": "12240"
  },
  {
    "text": "Eric is going to start hello hi yes so I'm Eric mountain and uh so data dog",
    "start": "12240",
    "end": "17720"
  },
  {
    "text": "we're an observability monitoring and security platform and uh we we inest an",
    "start": "17720",
    "end": "24599"
  },
  {
    "text": "awful lot of data we present that data to our users and to run all these Services we need need a lot of",
    "start": "24599",
    "end": "30560"
  },
  {
    "text": "infrastructure tens of thousands of hosts running on dozens of kubernetes service uh clusters this uh costs a lot of money so",
    "start": "30560",
    "end": "39040"
  },
  {
    "text": "we're of course introducing and minimizing our costs so today we're here to tell you a",
    "start": "39040",
    "end": "46239"
  },
  {
    "text": "bit about well why did we want to migrate to arm uh how we bootstrapped that initiative how we then scale the",
    "start": "46239",
    "end": "53359"
  },
  {
    "text": "migration once we got past the first few applications uh running in production on arm and what's our strategy to today now",
    "start": "53359",
    "end": "60320"
  },
  {
    "text": "that we've got a lot of applications running on arm what do we want to do um so why arm anyway for a start so",
    "start": "60320",
    "end": "68759"
  },
  {
    "text": "the game changer was in 2019 when AWS announced the graviton 2",
    "start": "68759",
    "end": "74680"
  },
  {
    "text": "based instances because these were the first ones to actually be somewhere on",
    "start": "74680",
    "end": "79840"
  },
  {
    "text": "par with C5 M5 uh type instances that are the kinds that we use typically for",
    "start": "79840",
    "end": "86040"
  },
  {
    "text": "most of our workloads so there these gravit twos seemed capable of of running our workloads and synthetic benchmarks",
    "start": "86040",
    "end": "93280"
  },
  {
    "text": "that you can find like on fonics uh seem to indicate that indeed performance was good and even possibly better than the",
    "start": "93280",
    "end": "100479"
  },
  {
    "text": "the x86 based uh offering um also these new instance",
    "start": "100479",
    "end": "107000"
  },
  {
    "text": "types were actually 20% cheaper than the hardware equivalent uh C5 M5 R5 uh",
    "start": "107000",
    "end": "114040"
  },
  {
    "text": "instances so it seemed on paper a very good offering um to re assure ourselves a",
    "start": "114040",
    "end": "120640"
  },
  {
    "text": "little bit we also did some internal benchmarks on a few uh applications that",
    "start": "120640",
    "end": "125960"
  },
  {
    "text": "we use a lot so etcd redis kfka uh here we got a few results for Fred City and",
    "start": "125960",
    "end": "132520"
  },
  {
    "text": "we're seeing basically that it's actually 25% faster on top of being 20% cheaper for some real work loans not",
    "start": "132520",
    "end": "138840"
  },
  {
    "text": "just synthetic benchmarks so this was rather comforting um at the executive level uh",
    "start": "138840",
    "end": "145040"
  },
  {
    "text": "our CTO Alex he wanted us to he gave us the mission to go out and try and",
    "start": "145040",
    "end": "150760"
  },
  {
    "text": "migrate workloads to are uh to control our costs uh we want to control our",
    "start": "150760",
    "end": "156000"
  },
  {
    "text": "costs and if we can get certain percentage out from just migrating to arm well that's already a benefit um the",
    "start": "156000",
    "end": "162840"
  },
  {
    "text": "arm footprint is growing fast we see AWS with new instance types Apple was uh",
    "start": "162840",
    "end": "168159"
  },
  {
    "text": "driving their own Apple silicon already at the time uh so the ecosystem is maturing uh we thought that most of the",
    "start": "168159",
    "end": "175440"
  },
  {
    "text": "effort would be on platform teams like compute and builds c those kinds of",
    "start": "175440",
    "end": "181239"
  },
  {
    "text": "things we thought as well that adoption criteria would be pretty simple either it works or it doesn't work um either it",
    "start": "181239",
    "end": "188400"
  },
  {
    "text": "performs better or it performs worse in the end it's the cost that has the final word and we also thought that well the",
    "start": "188400",
    "end": "194799"
  },
  {
    "text": "first applications that we migrate they would hit some problems but this would basically iron out things for the future",
    "start": "194799",
    "end": "201400"
  },
  {
    "text": "applications would come along it they would iron out the teething problems um so at that point what we're",
    "start": "201400",
    "end": "208200"
  },
  {
    "text": "starting with is we know that gravon 2 costs 20% less as the equivalent C5 M5",
    "start": "208200",
    "end": "215080"
  },
  {
    "text": "Generations uh we know that applications uh companies are using arm extensively",
    "start": "215080",
    "end": "220840"
  },
  {
    "text": "already uh what we don't know is how that's really going to apply to our own applications in terms of performance and",
    "start": "220840",
    "end": "228360"
  },
  {
    "text": "we don't know to what extent we actually depend on some x86 specifics for instance there were some known like for",
    "start": "228360",
    "end": "234879"
  },
  {
    "text": "instance we had applications that depended on uh hypers scan which is very specific um but in general we didn't",
    "start": "234879",
    "end": "242319"
  },
  {
    "text": "know what was going to happen we also knew you know success is if we can handle the same workload at a lower",
    "start": "242319",
    "end": "248720"
  },
  {
    "text": "price than we've made a game and I'll hand over to",
    "start": "248720",
    "end": "253840"
  },
  {
    "text": "all at this point were convinced at this point we're convinced",
    "start": "253840",
    "end": "260239"
  },
  {
    "text": "that we needed to do something about it and at least have a look at what arm was going to look like for us so how do we",
    "start": "260239",
    "end": "267400"
  },
  {
    "text": "start so in order to understand how how we did it uh we need to get back to how we run things as Eric says uh said",
    "start": "267400",
    "end": "274639"
  },
  {
    "text": "earlier we run everything in kubes at data do right so of course we had to do something about our clusters um this is",
    "start": "274639",
    "end": "281520"
  },
  {
    "text": "what our clusters look like nothing surprising there uh we have node pools for different",
    "start": "281520",
    "end": "286560"
  },
  {
    "text": "applications and and of course everything at the time was running on x86 so a very quick note here I'm going",
    "start": "286560",
    "end": "292919"
  },
  {
    "text": "to try and say x86 and arm it's very likely that at some point I'm going to slip and say amd64 which might be",
    "start": "292919",
    "end": "299720"
  },
  {
    "text": "confusing but I'm going to do my best in any case it's the same so of course what we want to do is",
    "start": "299720",
    "end": "305440"
  },
  {
    "text": "we want to be able to migrate some not pools to arm CPUs to see what what it gives us for some",
    "start": "305440",
    "end": "311560"
  },
  {
    "text": "applications so what does this require right if we zoom on a node what do we need to do to make it arm ready so of",
    "start": "311560",
    "end": "317919"
  },
  {
    "text": "course the first thing is well we need to make sure that it's running uh distribution that supports arm then we",
    "start": "317919",
    "end": "323400"
  },
  {
    "text": "need the kuet component to support arm so cuet and container on our notes we run a lot of",
    "start": "323400",
    "end": "329759"
  },
  {
    "text": "sh Services right demon sets uh we run a local cache we run the agent of course",
    "start": "329759",
    "end": "335880"
  },
  {
    "text": "and we run celium to provide cni we also need to migrate applications of course right but applications might",
    "start": "335880",
    "end": "342440"
  },
  {
    "text": "be a bit more complex than this example here right sometimes you have un need containers side cars um whole bunch of",
    "start": "342440",
    "end": "348759"
  },
  {
    "text": "unity containers so let's zoom on on this and see how it went so the first",
    "start": "348759",
    "end": "354319"
  },
  {
    "text": "thing we did was well we need to find Ani supporting arm turns out we were very lucky uh ubu provided us with",
    "start": "354319",
    "end": "361919"
  },
  {
    "text": "one it was also very easy for the cuet turns out all the builds in kubernetes support multiple architectures and so it",
    "start": "361919",
    "end": "368080"
  },
  {
    "text": "was very easy for us to get a an arm ready cuet container was our first surprise we",
    "start": "368080",
    "end": "374160"
  },
  {
    "text": "assumed it was going to be very easy for us to get container D for arm turns out there was no arm release for container",
    "start": "374160",
    "end": "380919"
  },
  {
    "text": "D it wasn't that big a deal uh it turns out Docker provided a package for container for arm n x86 so we just",
    "start": "380919",
    "end": "388400"
  },
  {
    "text": "changed um and now actually contend provides uh a release for arm",
    "start": "388400",
    "end": "393599"
  },
  {
    "text": "to demon sets now so the first one we migr was very easy turns out no local",
    "start": "393599",
    "end": "398800"
  },
  {
    "text": "DNS or the local DNS cash we use uh is in the community streo that has been provided providing uh arm images for a",
    "start": "398800",
    "end": "405240"
  },
  {
    "text": "long time so it was very easy the datadog agent had been supporting arm for quite some time",
    "start": "405240",
    "end": "410720"
  },
  {
    "text": "because of course we had some customers running on arm already was one of our first uh big",
    "start": "410720",
    "end": "417520"
  },
  {
    "text": "hle right at at the time we running 1.8 which was x86 only so we figured",
    "start": "417520",
    "end": "423560"
  },
  {
    "text": "this might be tricky we're a bit lucky though because while 1.8 was x86 only we were not the",
    "start": "423560",
    "end": "430680"
  },
  {
    "text": "only ones considering arm and so there were work happening to make celium arm compatible for the next",
    "start": "430680",
    "end": "436960"
  },
  {
    "text": "version it was quite a big backport and many thanks uh to Hamond for doing it",
    "start": "436960",
    "end": "442000"
  },
  {
    "text": "but we backported the patch uh from 1.9 to 1.8 and we now had a 1.8 arm ready",
    "start": "442000",
    "end": "447840"
  },
  {
    "text": "seum version in terms of utility containers so you need containers inside cars um",
    "start": "447840",
    "end": "454240"
  },
  {
    "text": "everything was mostly okay except for a very interesting case so we use console template",
    "start": "454240",
    "end": "460360"
  },
  {
    "text": "extensively uh in our applications to retrieve secrets from vaults there was no arm image Upstream uh but it was an",
    "start": "460360",
    "end": "467039"
  },
  {
    "text": "arm binary so we figured well it was going to be very easy to adapt the docker file that was used to build the",
    "start": "467039",
    "end": "473000"
  },
  {
    "text": "x86 image to use it for arm right just change the arch parameter here well with tried that we build the",
    "start": "473000",
    "end": "480479"
  },
  {
    "text": "image and we tried it it didn't work it was very confusing so what we did is well we created a container we exact",
    "start": "480479",
    "end": "487560"
  },
  {
    "text": "into it we try and run the image uh the binary and as you can see we had this very confusing error that says file not",
    "start": "487560",
    "end": "494000"
  },
  {
    "text": "found I promise you the F was there so we looked a bit deeper uh it",
    "start": "494000",
    "end": "499919"
  },
  {
    "text": "turns out the reason we were having an issue was that this binary for arm was linked against the gdpc but if you",
    "start": "499919",
    "end": "506560"
  },
  {
    "text": "remember our image was built from Alpine right so so it was trying to find um gipc library but on Alpine uh you have",
    "start": "506560",
    "end": "514200"
  },
  {
    "text": "mule so it didn't work that's confusing though right because the only difference is we're using the arm binary and not",
    "start": "514200",
    "end": "519640"
  },
  {
    "text": "the MD the x86 one what's what's what's happening so we looked at the x86 binary",
    "start": "519640",
    "end": "525480"
  },
  {
    "text": "and the x86 binary was actually statically linked right so that's why it worked so what what happened why was",
    "start": "525480",
    "end": "532959"
  },
  {
    "text": "console template built differently between x86 and arm well we found we went to the repo",
    "start": "532959",
    "end": "539120"
  },
  {
    "text": "and we we had a look at the the pull request making the modification for for arm and we find this interesting pull",
    "start": "539120",
    "end": "544680"
  },
  {
    "text": "request here that says well there's a specific bug in go and so we're going to special case the arm built to use SEO",
    "start": "544680",
    "end": "552560"
  },
  {
    "text": "while for x86 it was using um it was using normal uh SE was disabled",
    "start": "552560",
    "end": "559079"
  },
  {
    "text": "sorry but of course because uh then we have a dependency on the on the build",
    "start": "559079",
    "end": "564560"
  },
  {
    "text": "distribution it turned out the build distribution was JC and so the binary was linked against JPC but the run time",
    "start": "564560",
    "end": "569760"
  },
  {
    "text": "image was Alpine the go bug was was interesting right it's it's it's an old bug but it",
    "start": "569760",
    "end": "575880"
  },
  {
    "text": "was triggering crashes on arm but not when using SEO and the bug was fixed in go14 it was",
    "start": "575880",
    "end": "582240"
  },
  {
    "text": "a very weird bug when you were calling lowlevel bdso function uh and the signal was happening at the same time and the",
    "start": "582240",
    "end": "588760"
  },
  {
    "text": "go run time was completely crashing so once it was fixed in 114 uh",
    "start": "588760",
    "end": "593920"
  },
  {
    "text": "the change was reverted in console template and now all the console template build are also static",
    "start": "593920",
    "end": "599480"
  },
  {
    "text": "in our case it was easier we actually just had to just had to change the the image the base image we used instead of",
    "start": "599480",
    "end": "605959"
  },
  {
    "text": "Alpine we use auntu and it fixed our isue so as a summary um at this point we",
    "start": "605959",
    "end": "612079"
  },
  {
    "text": "had arm nodes uh we had arm images for demon sets and we had arm images for our",
    "start": "612079",
    "end": "617160"
  },
  {
    "text": "utility containers side cards and un containers we faced a few interesting challenges showing that the ecosystem",
    "start": "617160",
    "end": "623279"
  },
  {
    "text": "was not completely ready at the time but nothing too big what what now right well we have we",
    "start": "623279",
    "end": "629440"
  },
  {
    "text": "have uh arm nodes but we also need arm binaries for applications and because we",
    "start": "629440",
    "end": "634519"
  },
  {
    "text": "run everything in kubernetes we also need arm images for this",
    "start": "634519",
    "end": "639240"
  },
  {
    "text": "applications and what we want to do is we want to make it as simple as possible for application and to do that we want",
    "start": "639600",
    "end": "646160"
  },
  {
    "text": "them to avoid having to change anything uh with the H charts right we don't want to have any Dash arm reference in the H",
    "start": "646160",
    "end": "652279"
  },
  {
    "text": "chart or the image references and to do this in the docker ecosystem what you need to do is you",
    "start": "652279",
    "end": "657880"
  },
  {
    "text": "need to have a multi-arch image so what's a multi-arch image if you look at a static at a classic image",
    "start": "657880",
    "end": "664760"
  },
  {
    "text": "that is not multi-arch this is what it looks like what if you inspect the Manifest of the image you see this Json file that is built of that consists of",
    "start": "664760",
    "end": "672000"
  },
  {
    "text": "two things metadata about the image and then layers right all the layers that are the images is built",
    "start": "672000",
    "end": "678320"
  },
  {
    "text": "from when you look at the multiarch image it's slightly different you see that metadata about the image but you",
    "start": "678320",
    "end": "683720"
  },
  {
    "text": "also have a manifest for each sported architecture right and this sub manifest actually points to",
    "start": "683720",
    "end": "690120"
  },
  {
    "text": "um single architecture manifests and what happens is when a runtime is seeing a multi-arch image it's going to say",
    "start": "690120",
    "end": "695959"
  },
  {
    "text": "well I'm running on an arm node or an ax6 node so I know which image I need to pull to run on my",
    "start": "695959",
    "end": "702880"
  },
  {
    "text": "node so we were convinced we wanted to have MTI images now what we're going to",
    "start": "702880",
    "end": "708160"
  },
  {
    "text": "do to have some to explain this to you we need to get back a bit and and show you how",
    "start": "708160",
    "end": "713680"
  },
  {
    "text": "we're doing CI before we migr it to arm so all our Runners were already running",
    "start": "713680",
    "end": "718839"
  },
  {
    "text": "on KU right they were pulling jobs from gitlab and creating pods and jobs in our",
    "start": "718839",
    "end": "724440"
  },
  {
    "text": "clusters we had a specific use case uh for Docker images because we didn't",
    "start": "724440",
    "end": "729680"
  },
  {
    "text": "build Docker images in incubators at the time and so we had dedicated nodes that were running Docker and building Docker",
    "start": "729680",
    "end": "735320"
  },
  {
    "text": "images using Docker and Docker and pushing images to registers and of course everything was",
    "start": "735320",
    "end": "741639"
  },
  {
    "text": "running on x86 so let's see how we made our C arm",
    "start": "741639",
    "end": "746760"
  },
  {
    "text": "ready so what we wanted to achieve is want the ability to run arm arm pod arm",
    "start": "746760",
    "end": "752680"
  },
  {
    "text": "workloads but to do this we need to have arm nodes right we need to be all the images uh I I mentioned",
    "start": "752680",
    "end": "759160"
  },
  {
    "text": "before so how do we start so if we take a very simple uh DOL",
    "start": "759160",
    "end": "765720"
  },
  {
    "text": "image like this one right where you can see here we do two things we build a simple go application and we download a",
    "start": "765720",
    "end": "772320"
  },
  {
    "text": "simple binary if we build this Imon xx6 it's going to be built very easily very fine",
    "start": "772320",
    "end": "779839"
  },
  {
    "text": "and if we run it on the next 86 Noe it's going to work okay however if we try running uh this",
    "start": "779839",
    "end": "786920"
  },
  {
    "text": "image on an N node it's not going to work right because well we don't have an ARM version of",
    "start": "786920",
    "end": "793680"
  },
  {
    "text": "it recent version of Dockers uh of Docker have a nice way of building",
    "start": "794040",
    "end": "799680"
  },
  {
    "text": "multiarch Imes If instead of using Docker build using you use do buildex to to to build images you can provide a",
    "start": "799680",
    "end": "806839"
  },
  {
    "text": "flag saying all the images you want to build for so so we tried that on an x86 note we tried building an image for both",
    "start": "806839",
    "end": "813680"
  },
  {
    "text": "x86 and arm well it started it starts okay but",
    "start": "813680",
    "end": "819120"
  },
  {
    "text": "as you can see in the middle of the slide it starts breaking because at some point we're trying to run something that",
    "start": "819120",
    "end": "824160"
  },
  {
    "text": "doesn't work and what's happening in where we're running our build on an X",
    "start": "824160",
    "end": "829920"
  },
  {
    "text": "x86 node but when we're building for arm what the runtime is doing it's pulling the arm image and trying to run what's",
    "start": "829920",
    "end": "836800"
  },
  {
    "text": "in the docker file and of course as we the line two of the docker file here the APK Ed command well we're trying to run",
    "start": "836800",
    "end": "844279"
  },
  {
    "text": "a binary that was built for arm on an nex6 node which of course is failing so how can we address this let's",
    "start": "844279",
    "end": "851079"
  },
  {
    "text": "go back to the image maybe we can be a bit more clever about it um I'm sure most of you are familiar with",
    "start": "851079",
    "end": "856959"
  },
  {
    "text": "multi-stage build which allows you to separate building artifact in an image and then assembling the layers to have",
    "start": "856959",
    "end": "862959"
  },
  {
    "text": "the runtime image well if we modify the image we we we had before to to do this we we now",
    "start": "862959",
    "end": "869399"
  },
  {
    "text": "have two steps a build phase that will always run on x86 right and produce",
    "start": "869399",
    "end": "875040"
  },
  {
    "text": "artifact both for x86 and arm and what's happening you can see on the slide is when we're building the go application",
    "start": "875040",
    "end": "881120"
  },
  {
    "text": "for arm on an xt6 node we're actually cross compiling which go helps us do",
    "start": "881120",
    "end": "886720"
  },
  {
    "text": "easily and then in the second stage of the build what we do is we just assemble layers and the reason this work is",
    "start": "886720",
    "end": "893399"
  },
  {
    "text": "because when we assemble layers we actually just copy F around right there's no common executed which makes",
    "start": "893399",
    "end": "899040"
  },
  {
    "text": "makes it work on um on x86 even when we're building a n image and it's magic",
    "start": "899040",
    "end": "905199"
  },
  {
    "text": "right we now have the ability uh to run the same image on both an ex8 Sy node",
    "start": "905199",
    "end": "910320"
  },
  {
    "text": "and an arm node if we get back to our doing CI you can see that we now have a solution",
    "start": "910320",
    "end": "916360"
  },
  {
    "text": "where uh if we want to build multiarch images what we do is we do a multi-age build and we leverage Coss",
    "start": "916360",
    "end": "923360"
  },
  {
    "text": "compilation it works great and it's a it's a very common way of building multiart images today and for instance",
    "start": "923360",
    "end": "929639"
  },
  {
    "text": "this is the approach that was used by  at the time probably still the case I I haven't checked",
    "start": "929639",
    "end": "935120"
  },
  {
    "text": "recently however as you've seen for this very simple image this require significant change in the image right",
    "start": "935120",
    "end": "941079"
  },
  {
    "text": "you see the refactoring was pretty extensive and it doesn't always work if in your runtime image you need to run",
    "start": "941079",
    "end": "947680"
  },
  {
    "text": "commands and a typical example would be you need to install a package it won't work right because you actually need to run uh a non binary on on the next",
    "start": "947680",
    "end": "955319"
  },
  {
    "text": "statistics note so do we have alternatives to to this",
    "start": "955319",
    "end": "960440"
  },
  {
    "text": "solution if you if if you look at what Docker suggest on their website in in in",
    "start": "960440",
    "end": "965639"
  },
  {
    "text": "matter of how to to build M images what they say is well you can also use emulation so if we if we get back to our",
    "start": "965639",
    "end": "972839"
  },
  {
    "text": "image here what we want to do is we want to use emulation to run these commands",
    "start": "972839",
    "end": "978560"
  },
  {
    "text": "here so remember we're trying to build an arm image on the xx6 Node and but we're going to run uh to use um an arm",
    "start": "978560",
    "end": "986880"
  },
  {
    "text": "image from from from the layers right and so we're going to be running on binaries on this H6 node and we need",
    "start": "986880",
    "end": "992240"
  },
  {
    "text": "this to work and this is what emulation is going to going to help how does this work it's not that",
    "start": "992240",
    "end": "997800"
  },
  {
    "text": "complicated actually uh you just need to emulate arm which you can do with qmu standard emulator on",
    "start": "997800",
    "end": "1004360"
  },
  {
    "text": "x86 and and also um you need to be able to autodetect that you're trying to run",
    "start": "1004360",
    "end": "1009720"
  },
  {
    "text": "uh an arm binary and on Linux if you're you might be familiar with um bfmt which",
    "start": "1009720",
    "end": "1015639"
  },
  {
    "text": "is a way to support miscellenous binary format and have Linux be able to handle them in multiple different ways so what",
    "start": "1015639",
    "end": "1022279"
  },
  {
    "text": "happened there is when Linux is going to detect that you're trying to run an arm binary it's going to invoke um qm2",
    "start": "1022279",
    "end": "1029880"
  },
  {
    "text": "emulate arm then it works you still have to do some small changes uh in your image but",
    "start": "1029880",
    "end": "1036520"
  },
  {
    "text": "as you can see here it's pretty minimal if we get back to our CI we now",
    "start": "1036520",
    "end": "1042120"
  },
  {
    "text": "have two solutions the first one is well we do we can do multistage and cross compilation and if that doesn't work you",
    "start": "1042120",
    "end": "1048400"
  },
  {
    "text": "can also use emulation and this is how we started the first the first few months almost the",
    "start": "1048400",
    "end": "1053520"
  },
  {
    "text": "first year all the images we built we built that way uh it sounds like we have a perfect",
    "start": "1053520",
    "end": "1060320"
  },
  {
    "text": "solution right between uh using multistage and using emulation it's not that simple actually because emulation",
    "start": "1060320",
    "end": "1067600"
  },
  {
    "text": "is actually sometimes tricky to set up the first thing is you need the ability to install and configure emulation which",
    "start": "1067600",
    "end": "1072720"
  },
  {
    "text": "depending on how you run CI might be tricky because you need to inst qmu and you need to configure it in addition",
    "start": "1072720",
    "end": "1078480"
  },
  {
    "text": "building a a complex image uh can take a long time I give a small example here you can see an image taking more than an",
    "start": "1078480",
    "end": "1084640"
  },
  {
    "text": "hour and a half to build if you remember now that we have",
    "start": "1084640",
    "end": "1089760"
  },
  {
    "text": "the abil to build the the basic images into an arm node we can maybe use this arm noes to build iron binary and arm",
    "start": "1089760",
    "end": "1097400"
  },
  {
    "text": "images let's get back to our clusters so we have our clusters running PS on ft6",
    "start": "1097400",
    "end": "1102600"
  },
  {
    "text": "nodes and we had we now have the ability to run arm nodes too right Buton arm",
    "start": "1102600",
    "end": "1107919"
  },
  {
    "text": "nodes if we get back to RCI we have Runners able to pull jobs and we can run this job either on X xt6 or on AR",
    "start": "1107919",
    "end": "1117159"
  },
  {
    "text": "nodes what if we were Building images uh within this note right what we can do is we can run doca builds uh within this uh",
    "start": "1117159",
    "end": "1125080"
  },
  {
    "text": "Runners right and we'll be able to build an image for x86 and an image for",
    "start": "1125080",
    "end": "1130400"
  },
  {
    "text": "arm it's a bit more involved that what I showed earlier because it requires um",
    "start": "1130400",
    "end": "1135600"
  },
  {
    "text": "some orchestration because you need to do two builds when each architecture and then you need to create a manifest and",
    "start": "1135600",
    "end": "1141559"
  },
  {
    "text": "push it to Docker provided a very nice way to make the user expans a little better uh",
    "start": "1141559",
    "end": "1148559"
  },
  {
    "text": "by using build de and using remote Builders right so instead of building locally when you do a Docker build what you're going to say you can to say",
    "start": "1148559",
    "end": "1154440"
  },
  {
    "text": "Docker well use a remote Builder and the remote Builder facility uh provided by do is called buildkit and you can see",
    "start": "1154440",
    "end": "1160880"
  },
  {
    "text": "here that when you're building this image for both X xt6 and arm we're using build kit running on x86 for the xt6",
    "start": "1160880",
    "end": "1168280"
  },
  {
    "text": "image and build King G arm for the arm image and then assembling this and pushing the multiarch image of course",
    "start": "1168280",
    "end": "1174960"
  },
  {
    "text": "because we're now doing native builds it's much faster so image Builds on kubernetes are",
    "start": "1174960",
    "end": "1181760"
  },
  {
    "text": "are great but it wasn't easy to get there and Eric and I actually gave a talk about this uh at a previous cucon",
    "start": "1181760",
    "end": "1189000"
  },
  {
    "text": "and and we talk about all the challenges we Face to to make it work it's likely the best option but has a lot of gutches",
    "start": "1189000",
    "end": "1195120"
  },
  {
    "text": "and it might be easier to set with other options now that we we've seen how we started let's talk about what we got out",
    "start": "1195120",
    "end": "1202440"
  },
  {
    "text": "of this yeah so at this point we're able to",
    "start": "1202440",
    "end": "1208039"
  },
  {
    "text": "build can you hear me now yeah sorry so at this point we have uh we're able to build container images we're able to we",
    "start": "1210720",
    "end": "1218159"
  },
  {
    "text": "have the binaries on arm as well um so we're able to start migrating applications for real um our strategy",
    "start": "1218159",
    "end": "1225480"
  },
  {
    "text": "was to go first for um high potential and easy applications what do I mean by",
    "start": "1225480",
    "end": "1231280"
  },
  {
    "text": "that so high potential was like large scale applications applications where by",
    "start": "1231280",
    "end": "1236640"
  },
  {
    "text": "migrating them we would see a big effect because they were many pods many nodes",
    "start": "1236640",
    "end": "1241840"
  },
  {
    "text": "uh easy applications we figured that managed language applications would be easiest so we focused on a large goang",
    "start": "1241840",
    "end": "1248159"
  },
  {
    "text": "repository where we had lots of applications and we also took on board some early adopters in Java and",
    "start": "1248159",
    "end": "1256120"
  },
  {
    "text": "rust um the first application we migrated uh was something that takes part in the",
    "start": "1256120",
    "end": "1261559"
  },
  {
    "text": "metrics intake so it's a very high trffic application today it runs on about 4,700 pods so it was a bit less a",
    "start": "1261559",
    "end": "1269600"
  },
  {
    "text": "few years back but it was still considerable it's written and go it's load balanced it's stateless meaning we",
    "start": "1269600",
    "end": "1275799"
  },
  {
    "text": "don't have to deal with discs local discs or attached discs or anything like that um and because it's load balanced",
    "start": "1275799",
    "end": "1282640"
  },
  {
    "text": "we can easily have two deployments uh running on different architectures simultaneously and that's what we set up",
    "start": "1282640",
    "end": "1288799"
  },
  {
    "text": "we had the x86 one we gave it some headr room in case there was a problem with arm and we could fall back easily uh",
    "start": "1288799",
    "end": "1294840"
  },
  {
    "text": "without incurring any issues and we started off with a bit of a canary on the arm on a few arm nodes uh something",
    "start": "1294840",
    "end": "1302120"
  },
  {
    "text": "like four for a little while it looked good we then started migrating a third at a time and we got to the point where",
    "start": "1302120",
    "end": "1309080"
  },
  {
    "text": "we had 100% running on arm and we were pretty happy because while this was going on actually traffic increased on",
    "start": "1309080",
    "end": "1314919"
  },
  {
    "text": "this application uh but the net effect all the same is that we see a reduction of 20% in cost one little caveat was that",
    "start": "1314919",
    "end": "1323240"
  },
  {
    "text": "it was about 3 to 5% slower but because we were able to Simply scale",
    "start": "1323240",
    "end": "1328520"
  },
  {
    "text": "horizontally and the cost remained cheaper in the end it's a win and we're",
    "start": "1328520",
    "end": "1333559"
  },
  {
    "text": "happy with this application running on arm um we migrated a second application",
    "start": "1333559",
    "end": "1339480"
  },
  {
    "text": "uh at this point uh Again part of the metrics intake uh uh flow um and this",
    "start": "1339480",
    "end": "1346720"
  },
  {
    "text": "one was even better we got 20% Sav savings but we also actually got 5% better throughput it was performing even",
    "start": "1346720",
    "end": "1352240"
  },
  {
    "text": "better on arm so here we've already got two cases right two different applications behaving slightly different",
    "start": "1352240",
    "end": "1357640"
  },
  {
    "text": "in terms of performance but the net gain is is positive we went on migrating a few",
    "start": "1357640",
    "end": "1363960"
  },
  {
    "text": "applications and progressively we started hitting a few little bugs here and there um so we'll talk a bit about",
    "start": "1363960",
    "end": "1370960"
  },
  {
    "text": "those um one of the next challenges we went for were applications which were stateful we have a lot of stateful",
    "start": "1370960",
    "end": "1376960"
  },
  {
    "text": "applications so we need to able to migrate those otherwise it's not really interesting um so we have some that use",
    "start": "1376960",
    "end": "1384640"
  },
  {
    "text": "local discs and what we saw was that the instances were taking several minutes literally to actually boot we traced",
    "start": "1384640",
    "end": "1390880"
  },
  {
    "text": "this to Lux volume encryption uh creation this is because we were encrypting these these volumes and we",
    "start": "1390880",
    "end": "1397840"
  },
  {
    "text": "just generate a random password at boot and we read Dev Dev random to get that",
    "start": "1397840",
    "end": "1403400"
  },
  {
    "text": "password and it seems that there wasn't enough entropy on the arm instances to get that password were generated quickly",
    "start": "1403400",
    "end": "1411159"
  },
  {
    "text": "um so we switched to Dev random which is probably what we should have been reading anyway uh and we talked to AWS",
    "start": "1411159",
    "end": "1418400"
  },
  {
    "text": "and canonical and this was fixed in the later kernel it was simply that there was an early boot entropy seed that",
    "start": "1418400",
    "end": "1423720"
  },
  {
    "text": "wasn't being passed in through Fe and once that was fixed it was all",
    "start": "1423720",
    "end": "1428840"
  },
  {
    "text": "good um I mentioned we also had some Rust apps uh and the first one we",
    "start": "1428840",
    "end": "1434320"
  },
  {
    "text": "migrated we saw absolutely abysmal performance uh it wasn't just 10 10 or 20% slower it was like 10 times slower",
    "start": "1434320",
    "end": "1441559"
  },
  {
    "text": "than x86 and we profiled that and we realized that what was going on was that uh the",
    "start": "1441559",
    "end": "1447520"
  },
  {
    "text": "function instant now which is raiding the monotonic clock uh was a lot slower",
    "start": "1447520",
    "end": "1453559"
  },
  {
    "text": "on on arm and uh with a simple reproducer we were seeing that it was like 70 times slower so the reason for",
    "start": "1453559",
    "end": "1461360"
  },
  {
    "text": "this is that rust at the time didn't trust arm as a platform to supply a monotonic clock that worked correctly",
    "start": "1461360",
    "end": "1468240"
  },
  {
    "text": "and uh there had been some buggy CPUs and so rust had implemented a solution",
    "start": "1468240",
    "end": "1473320"
  },
  {
    "text": "based on IM mutex to always ensure that it returned a mon monotonically increasing",
    "start": "1473320",
    "end": "1479320"
  },
  {
    "text": "time um so there were actually mitigations in the kernel so that uh",
    "start": "1479320",
    "end": "1485440"
  },
  {
    "text": "runtime languages and things like that didn't need or user space didn't need to worry about this anymore so there was",
    "start": "1485440",
    "end": "1490600"
  },
  {
    "text": "really no justification for us to do this any longer um so PR was pushed Upstream by uh the AWS folks uh thank",
    "start": "1490600",
    "end": "1497880"
  },
  {
    "text": "you to them and um just got the native implementation and performance was",
    "start": "1497880",
    "end": "1503480"
  },
  {
    "text": "normal again um we also saw some applications which would suddenly stall so here what",
    "start": "1503480",
    "end": "1510080"
  },
  {
    "text": "you can see is two cases where the uh ready replicas count decreases by one um",
    "start": "1510080",
    "end": "1516760"
  },
  {
    "text": "and the livess probe kicks in uh and kills the application and that's why it then starts up again um we if we look",
    "start": "1516760",
    "end": "1525840"
  },
  {
    "text": "closely at the CPU graph for this uh what we realized is that actually the idle CPU never really reaches 100% here",
    "start": "1525840",
    "end": "1533960"
  },
  {
    "text": "and in fact there's about a three and a bit per headr room which is corresponds",
    "start": "1533960",
    "end": "1539120"
  },
  {
    "text": "to one CPU uh because this is a 32 CPU machine and so actually one CPU is just",
    "start": "1539120",
    "end": "1545080"
  },
  {
    "text": "burning away even though the application isn't working so we had this with about four",
    "start": "1545080",
    "end": "1550320"
  },
  {
    "text": "applications the common points were go 118 and only happening on arm and we",
    "start": "1550320",
    "end": "1556760"
  },
  {
    "text": "realized that actually this was a bug that was already mentioned Upstream um",
    "start": "1556760",
    "end": "1562120"
  },
  {
    "text": "in gen Trace pack uh in go which basically builds stack Traces by reading",
    "start": "1562120",
    "end": "1567559"
  },
  {
    "text": "the stack and it was misinterpreting the stack and ending up in an infinite Loop",
    "start": "1567559",
    "end": "1572640"
  },
  {
    "text": "so what we did there is uh oh and it's exacerbated by profiling which we happen to do absolutely everywhere in go or",
    "start": "1572640",
    "end": "1580080"
  },
  {
    "text": "almost everywhere uh so there was a fix available Upstream we patched locally",
    "start": "1580080",
    "end": "1585960"
  },
  {
    "text": "until it was released because it was in 19 uh we had a bit of a gotcha because we",
    "start": "1585960",
    "end": "1591120"
  },
  {
    "text": "were also in the middle of migrating Mac OS laptops from x86 to M1 at the time",
    "start": "1591120",
    "end": "1596799"
  },
  {
    "text": "and so we had to provide both builds of go with that fix and we weren't really equipped to maintain local go",
    "start": "1596799",
    "end": "1603039"
  },
  {
    "text": "builds anyway at this point so we've migrated a number of applications uh we've got about uh 15%",
    "start": "1603039",
    "end": "1610919"
  },
  {
    "text": "of CPU cores uh on AWS that are using arm thanks to all the applications we've migrated bit by bit um we've seen some",
    "start": "1610919",
    "end": "1619240"
  },
  {
    "text": "lack of maturity in the ecosystem especially in 2021 2022 but beyond that",
    "start": "1619240",
    "end": "1624559"
  },
  {
    "text": "we stopped really seeing any problems or not so many problems um performance isn't always as good as hoped uh but all",
    "start": "1624559",
    "end": "1632520"
  },
  {
    "text": "the same it's very promising when we consider the overall cost reduction so then what we wanted to do",
    "start": "1632520",
    "end": "1639440"
  },
  {
    "text": "was go further how do we scale this to the organization so for recap a little bit",
    "start": "1639440",
    "end": "1646159"
  },
  {
    "text": "um first half of 2021 we did the first tests first benchmarks uh and gave",
    "start": "1646159",
    "end": "1651760"
  },
  {
    "text": "ourselves a little bit of confidence in the second half of 2021 we did all this platform set up with the CI and uh in",
    "start": "1651760",
    "end": "1659840"
  },
  {
    "text": "the first half of 2022 we started migrating a first few real applications hitting bugs in real life and fixing",
    "start": "1659840",
    "end": "1666640"
  },
  {
    "text": "them little by little um and by the end of 2022 we'd",
    "start": "1666640",
    "end": "1672000"
  },
  {
    "text": "migrated all our main repositories all our large repositories to support arm produce the binaries produce the images",
    "start": "1672000",
    "end": "1679120"
  },
  {
    "text": "and we had some of our largest Services migrated hence the 15% CPU Calles running on",
    "start": "1679120",
    "end": "1684760"
  },
  {
    "text": "arm so then uh our CTO Alexi uh he said well now what I would like to see is all",
    "start": "1684760",
    "end": "1692320"
  },
  {
    "text": "the applications that can run on arm I would like them running on arm by the end of",
    "start": "1692320",
    "end": "1697880"
  },
  {
    "text": "2023 so we set up a program uh we got some technical project managers working",
    "start": "1697880",
    "end": "1703519"
  },
  {
    "text": "on this uh the first phase was essentially data collection trying to figure out you know what are the",
    "start": "1703519",
    "end": "1708919"
  },
  {
    "text": "applications out there that could migrate to arm which ones might need exceptions like are the instance types",
    "start": "1708919",
    "end": "1715360"
  },
  {
    "text": "uh that we need available because okay we had a certain set of graviton to instance types but things where uh high",
    "start": "1715360",
    "end": "1722640"
  },
  {
    "text": "performance local dis um instance types for instance weren't uh were coming out but might be rare you might need to deal",
    "start": "1722640",
    "end": "1729720"
  },
  {
    "text": "with capacity issues and things like that on new instances so we had to collect all that data then we kicked",
    "start": "1729720",
    "end": "1735840"
  },
  {
    "text": "into the large scale migration of all the applications which we figured we could migrate and by the end of 2023 we",
    "start": "1735840",
    "end": "1741840"
  },
  {
    "text": "closed down the program um because uh we we figured we reached",
    "start": "1741840",
    "end": "1747720"
  },
  {
    "text": "all the the main applications that we could migrate so at that point uh well actually mid 2024 we're at 70% of arm",
    "start": "1747720",
    "end": "1755679"
  },
  {
    "text": "cores and we've got a ballpark of 10% savings which is really good for",
    "start": "1755679",
    "end": "1762600"
  },
  {
    "text": "us so I Point uh We've we've seen the initial success we've seen large scale",
    "start": "1766000",
    "end": "1771679"
  },
  {
    "text": "migration and we're at the end of 2023 which is uh about a year ago and the question is what's",
    "start": "1771679",
    "end": "1778760"
  },
  {
    "text": "next so if we get back to the original Target we had right we we did all",
    "start": "1778760",
    "end": "1784519"
  },
  {
    "text": "because we expected savings and as Eric said we were saving about 10% on compute cost and you can imagine that at our",
    "start": "1784519",
    "end": "1791279"
  },
  {
    "text": "scale it's pretty significant and so if the goal is to reduce cost we need to keep in mind that",
    "start": "1791279",
    "end": "1797080"
  },
  {
    "text": "instance types keep keep changing and evolving right all the business case we built from the beginning was comparing",
    "start": "1797080",
    "end": "1802440"
  },
  {
    "text": "C5 and C6 GS so all the generation instances but new instances have been",
    "start": "1802440",
    "end": "1807559"
  },
  {
    "text": "released and so we need to do this test over and over so we need to consider new",
    "start": "1807559",
    "end": "1812840"
  },
  {
    "text": "instance type newer instance types but also other CPUs right uh we mentioned x86 up until now but when we said x86 uh",
    "start": "1812840",
    "end": "1821080"
  },
  {
    "text": "we're only seeing uh mentioning Intel turns out AMD was reling new instances",
    "start": "1821080",
    "end": "1826679"
  },
  {
    "text": "uh and some some of them looked pretty promising we've also mostly considered AWS because AWS was uh the first cloud",
    "start": "1826679",
    "end": "1834600"
  },
  {
    "text": "provider to support arm CPUs so what about Cloud providers what about other Cloud providers so the the first thing we did",
    "start": "1834600",
    "end": "1841960"
  },
  {
    "text": "uh is we automated the interal benchmarks we do right so we take synthetic benchmarks that are available",
    "start": "1841960",
    "end": "1848919"
  },
  {
    "text": "and we run them on all the instances we we have right all the instance type that are that are possible and that allows",
    "start": "1848919",
    "end": "1854399"
  },
  {
    "text": "for easy comparison between instance types and you can see here a compar of all four ex large instance Types on AWS",
    "start": "1854399",
    "end": "1861120"
  },
  {
    "text": "and how they perform for two types of Benchmark um stock fishion and cor Mark",
    "start": "1861120",
    "end": "1866440"
  },
  {
    "text": "so that's interesting but that's synthetic Benchmark right one of the challenges we've seen with with with M CPUs is they tend to perform pretty well",
    "start": "1866440",
    "end": "1874039"
  },
  {
    "text": "in benchmarks uh like very well as we seen at the beginning with 20% faster for instance but for real life",
    "start": "1874039",
    "end": "1880000"
  },
  {
    "text": "applications we tend to see gains sometimes uh and sometimes a bit um some sometimes AIT slower but it's not 20%",
    "start": "1880000",
    "end": "1886799"
  },
  {
    "text": "better so so what about real applications so for some applications uh",
    "start": "1886799",
    "end": "1891919"
  },
  {
    "text": "we actually have the ability to test them at a pretty large scale and in pretty automated way so we have a team",
    "start": "1891919",
    "end": "1897840"
  },
  {
    "text": "that is very good at doing this and what they do is they test application on multiple instance types and and then",
    "start": "1897840",
    "end": "1905159"
  },
  {
    "text": "they can tell us well on this instance type I'm able to do this amount of work uh in in an",
    "start": "1905159",
    "end": "1911080"
  },
  {
    "text": "hour this graph here for this very specific application once again it's not valid for every every application is is",
    "start": "1911080",
    "end": "1917919"
  },
  {
    "text": "saying well if you ear this application on uh I don't know um c7a for instance",
    "start": "1917919",
    "end": "1923760"
  },
  {
    "text": "which is the latest one of the latest NB instances you're going to get 40% more work done um on in an hour than if you",
    "start": "1923760",
    "end": "1931760"
  },
  {
    "text": "run it on a c6i which is uh an Intel version of it we also have this prices for all this",
    "start": "1931760",
    "end": "1939240"
  },
  {
    "text": "instance typ right it's public uh public prices and so what we can do is we can take these two numbers so the work we",
    "start": "1939240",
    "end": "1945279"
  },
  {
    "text": "get done per hour and the allly cost of the instan is to compare to to to integrate both numbers and see which",
    "start": "1945279",
    "end": "1952080"
  },
  {
    "text": "instance types are the most C efficient for this specific application and this is a graph we get",
    "start": "1952080",
    "end": "1957200"
  },
  {
    "text": "right if uh the graph is showing the what it cost to uh to run a unit of work",
    "start": "1957200",
    "end": "1963279"
  },
  {
    "text": "uh on across all instance type of this application compared to c6i and as you can see here uh everything that's green",
    "start": "1963279",
    "end": "1969840"
  },
  {
    "text": "is it means it's cheaper than c6i which is a reference application and we can see that we have a few uh CPUs that are",
    "start": "1969840",
    "end": "1977159"
  },
  {
    "text": "actually cheaper uh to run this uh this application so we have two sets uh two",
    "start": "1977159",
    "end": "1982320"
  },
  {
    "text": "arm CPUs graviton three and graviton four and two AMD CPUs uh the Gen 3 CPUs",
    "start": "1982320",
    "end": "1988600"
  },
  {
    "text": "and the Gen 4 ones and you can see that savings are actually pretty significant for this application we're talking about",
    "start": "1988600",
    "end": "1993799"
  },
  {
    "text": "almost 15% in some cases so this is the ideal case right the case where you can um where you can",
    "start": "1993799",
    "end": "2001279"
  },
  {
    "text": "run the application you can run large scale tests we have many application that can't do this type of testing right",
    "start": "2001279",
    "end": "2007840"
  },
  {
    "text": "and in that case we we wanted to have high level guidelines for the application",
    "start": "2007840",
    "end": "2013519"
  },
  {
    "text": "and we we have this very high level guideline that application can use the first one is if you're not CPU bound use",
    "start": "2013519",
    "end": "2019919"
  },
  {
    "text": "graviton 2 and why use graviton 2 is because well it's the cheapest SCS right so use them it's going to be it's going",
    "start": "2019919",
    "end": "2025600"
  },
  {
    "text": "to be the best for you if your application is CPU bound but it can autoscale use the CPUs that have the",
    "start": "2025600",
    "end": "2033080"
  },
  {
    "text": "most uh cost efficient profiles so exactly the test I was showing before and same results right I use the latest",
    "start": "2033080",
    "end": "2039360"
  },
  {
    "text": "AMD CPUs or use the latest gravit instances in some cases if you need a",
    "start": "2039360",
    "end": "2044639"
  },
  {
    "text": "single core the highest single core performance we still have several cases where inter CPUs do",
    "start": "2044639",
    "end": "2051000"
  },
  {
    "text": "better so we're getting to the end of the talk uh we have a few a few parting words for you in terms of takeaways so",
    "start": "2051000",
    "end": "2058679"
  },
  {
    "text": "the first one is uh if you want to go that D trout and and and and support",
    "start": "2058679",
    "end": "2064200"
  },
  {
    "text": "medal architectures well invest in in CI earlier right because the CI is going to be is going to require significant",
    "start": "2064200",
    "end": "2071280"
  },
  {
    "text": "effort to to get it ready desue applications Benchmark only go so far",
    "start": "2071280",
    "end": "2076480"
  },
  {
    "text": "that you want to know how your application will perform on arm something we didn't mention at all",
    "start": "2076480",
    "end": "2082760"
  },
  {
    "text": "is also be careful with capacity planning right because when new CPUs get out they tend to be much more cost",
    "start": "2082760",
    "end": "2088878"
  },
  {
    "text": "efficient than the previous generations but you won't be the only ones noticing it right and so we find many cases where",
    "start": "2088879",
    "end": "2095520"
  },
  {
    "text": "some new instance types are amazing for us but we have to wait a bit to get them because they're very hard to get and and",
    "start": "2095520",
    "end": "2101560"
  },
  {
    "text": "so be careful with capacity planning and and and talk with your Cloud providers um arm is clearly here to stay",
    "start": "2101560",
    "end": "2109160"
  },
  {
    "text": "uh I don't know if you've seen but last week gcp announced their own arm CPUs built in house called ation which means",
    "start": "2109160",
    "end": "2116359"
  },
  {
    "text": "they Al they're also doing a significant in investment in arm the arm ecosystem",
    "start": "2116359",
    "end": "2121960"
  },
  {
    "text": "is is improving very fast uh a few years back uh we were seeing a lot of small issues but most most of them have been",
    "start": "2121960",
    "end": "2128359"
  },
  {
    "text": "ired out I think they're working fine that said uh we can still find a few very interesting edge cases and for",
    "start": "2128359",
    "end": "2135320"
  },
  {
    "text": "instance we found a very crazy bug in nlvm that makes po gr crash right when",
    "start": "2135320",
    "end": "2141000"
  },
  {
    "text": "you run it on on arm and we're going to publish a blog post with all the details soon so it's rare but you can find very",
    "start": "2141000",
    "end": "2147000"
  },
  {
    "text": "interesting and we issues um we we're uh at the end of the",
    "start": "2147000",
    "end": "2152920"
  },
  {
    "text": "of the talk I don't think we'll have much time for questions but we'll be around we'll be around right now we'll",
    "start": "2152920",
    "end": "2158359"
  },
  {
    "text": "be around during the conference and you can always come back the Boo and come by the DAT boost where we'll be uh for some",
    "start": "2158359",
    "end": "2165119"
  },
  {
    "text": "of the day uh thank you very much [Applause]",
    "start": "2165119",
    "end": "2171219"
  }
]