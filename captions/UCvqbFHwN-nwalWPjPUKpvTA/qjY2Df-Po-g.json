[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "all right um welcome to this talk uh houston we've got a problem how to",
    "start": "80",
    "end": "6000"
  },
  {
    "text": "debug your pipeline in tecton uh i'm vincent demister principal software",
    "start": "6000",
    "end": "12880"
  },
  {
    "text": "senior principal software engineer red and i am one of the leader of the techdown project",
    "start": "12880",
    "end": "21359"
  },
  {
    "text": "um i also worked very hard and i work on load checking stuff and",
    "start": "22480",
    "end": "29679"
  },
  {
    "text": "technon as well and yeah today we are going to talk about how to debug your pipeline",
    "start": "29679",
    "end": "36960"
  },
  {
    "start": "36000",
    "end": "90000"
  },
  {
    "text": "uh right so let's go through the agenda um first we'll define a little bit what do",
    "start": "38719",
    "end": "44879"
  },
  {
    "text": "we mean by debug in debug what uh then we'll",
    "start": "44879",
    "end": "50640"
  },
  {
    "text": "go rather quickly on what is takedown in tekton in a nutshell hopefully you",
    "start": "50640",
    "end": "56719"
  },
  {
    "text": "know already a bit what is takedown when going to this talk but if you don't uh",
    "start": "56719",
    "end": "62480"
  },
  {
    "text": "this will be a really quick introduction to tectum then uh we'll do a little bit of magic",
    "start": "62480",
    "end": "70080"
  },
  {
    "text": "in russian dolls explaining how all this works uh then the bob will do a",
    "start": "70080",
    "end": "77040"
  },
  {
    "text": "demo and and we'll finish with the next steps after after",
    "start": "77040",
    "end": "82400"
  },
  {
    "text": "after this demo after this work what will be the next steps so first debug what",
    "start": "82400",
    "end": "90640"
  },
  {
    "start": "90000",
    "end": "120000"
  },
  {
    "text": "so um let's talk a little bit about about debugging so uh debugging is the process of",
    "start": "92880",
    "end": "99520"
  },
  {
    "text": "identifying and removing errors from computer hardware and software and in this case so we will be talking",
    "start": "99520",
    "end": "107600"
  },
  {
    "text": "about debugging but it will be in terms of pipelines so and debugging pipelines themselves so",
    "start": "107600",
    "end": "115040"
  },
  {
    "text": "what do i mean by when like debugging pipelines and what are pipelines",
    "start": "115040",
    "end": "121200"
  },
  {
    "start": "120000",
    "end": "175000"
  },
  {
    "text": "so pipelines uh pipelines usually is a liner leaner liner linear sequence of",
    "start": "121200",
    "end": "128000"
  },
  {
    "text": "specialized model used for pipelining uh basically this means uh you do a task uh or an action then an",
    "start": "128000",
    "end": "135599"
  },
  {
    "text": "election then another action and some can be in sequence some can be impressed",
    "start": "135599",
    "end": "141120"
  },
  {
    "text": "there's a lot of types of pipeliners that are pipeliners",
    "start": "141120",
    "end": "146319"
  },
  {
    "text": "even pipeline there's a lot of type of pipeline in our context in the context of this talk we're mainly talking about",
    "start": "147120",
    "end": "154400"
  },
  {
    "text": "cicd pipelines and in our example is more accurately be useful in a continuous",
    "start": "154400",
    "end": "161599"
  },
  {
    "text": "integration pipeline but yeah we will focus on the ci cd pipelines uh but this could probably",
    "start": "161599",
    "end": "169760"
  },
  {
    "text": "apply to other type of pipeline that can be done inside texan if we wanted to",
    "start": "169760",
    "end": "176560"
  },
  {
    "start": "175000",
    "end": "300000"
  },
  {
    "text": "yeah so why would we ever want to debug our pipelines",
    "start": "180000",
    "end": "185519"
  },
  {
    "text": "now if there is a pipeline which works on your machine but not on the ci it's very hard to",
    "start": "185519",
    "end": "191360"
  },
  {
    "text": "understand why it's not working on the ci because you would need to understand what is the environment uh the pipeline",
    "start": "191360",
    "end": "198400"
  },
  {
    "text": "is running in and that would be the ci environment and you would need to get access to the ci environment and",
    "start": "198400",
    "end": "204560"
  },
  {
    "text": "understand this thing so uh debugging pipelines could be helpful in this way where you just get access to",
    "start": "204560",
    "end": "210400"
  },
  {
    "text": "the ci movement and uh figure out why it's not working on the ci",
    "start": "210400",
    "end": "215440"
  },
  {
    "text": "but then there are also times when it only runs on the ci and you can't you can't run it on your machine because of",
    "start": "215440",
    "end": "220959"
  },
  {
    "text": "resource constraints and you will have to debug your pipeline while it is running",
    "start": "220959",
    "end": "226159"
  },
  {
    "text": "and go to a particular part of the pipeline and debug it there then while it is while you're debugging",
    "start": "226159",
    "end": "233920"
  },
  {
    "text": "that same pipeline on the ci there there is a possible possibility that",
    "start": "233920",
    "end": "239200"
  },
  {
    "text": "you you won't be able to fix it if you are just passing some parameters",
    "start": "239200",
    "end": "245599"
  },
  {
    "text": "uh around and you never understand where the error is happening because you",
    "start": "245599",
    "end": "250799"
  },
  {
    "text": "run the pipeline you see the error you fix it you run it you see you see",
    "start": "250799",
    "end": "256079"
  },
  {
    "text": "the same error you fix it again and you keep doing this you get really frustrated and you",
    "start": "256079",
    "end": "263360"
  },
  {
    "text": "probably want to leave your job at that point but you can't do that and you have to keep debugging pipelines as they are",
    "start": "263360",
    "end": "270000"
  },
  {
    "text": "but there are better ways to debug pipelines and instead of doing it in this way and some ci tools allow you to",
    "start": "270000",
    "end": "278639"
  },
  {
    "text": "debug pipelines while they're running and they provide a great support for this",
    "start": "278639",
    "end": "284080"
  },
  {
    "text": "some of these examples are so-called cr build travels uh which which do this",
    "start": "284080",
    "end": "289600"
  },
  {
    "text": "very well so getting inspiration from this we in tecton figure that we could do this",
    "start": "289600",
    "end": "296479"
  },
  {
    "text": "in tech town as well right so uh how how uh",
    "start": "296479",
    "end": "305199"
  },
  {
    "start": "300000",
    "end": "443000"
  },
  {
    "text": "how would you debug pipelines so this is kind of explaining what we will do in",
    "start": "305199",
    "end": "310800"
  },
  {
    "text": "tecton and what other tools kind of do in some matter",
    "start": "310800",
    "end": "316479"
  },
  {
    "text": "so debugging pipeline uh what do you want for for it to do one once one first",
    "start": "316479",
    "end": "323759"
  },
  {
    "text": "you want to be able to pause the execution of your pipeline at at demand uh so anywhere",
    "start": "323759",
    "end": "330240"
  },
  {
    "text": "if the user wants to and or in case of a failure so some steps or some action",
    "start": "330240",
    "end": "337199"
  },
  {
    "text": "failed i want to stop the execution there and be able to drop in so we want to",
    "start": "337199",
    "end": "343199"
  },
  {
    "text": "to allow the user to drop in directly in the ci environment so it sees what files are there",
    "start": "343199",
    "end": "350720"
  },
  {
    "text": "what processes are running um anything really that could help them debug more what happened",
    "start": "350880",
    "end": "358560"
  },
  {
    "text": "and why it failed and probably also re-execute some stuff in the context of the environment the ci",
    "start": "358560",
    "end": "364840"
  },
  {
    "text": "environment and of course once we allow the user to",
    "start": "364840",
    "end": "370000"
  },
  {
    "text": "drop in the ci environment we want to allow him to continue or break the flow so",
    "start": "370000",
    "end": "377759"
  },
  {
    "text": "if he feels like he knows what's happening he fix it manually for this run and wants to see if there's one anything",
    "start": "377759",
    "end": "384240"
  },
  {
    "text": "else that that will fail later he can continue it with success and let the pipeline",
    "start": "384240",
    "end": "389680"
  },
  {
    "text": "continue running or if he knows how to fix it it's pretty sure it's it's not gonna fail after",
    "start": "389680",
    "end": "397680"
  },
  {
    "text": "he can just go and fix it and thus he wants just to",
    "start": "397680",
    "end": "402880"
  },
  {
    "text": "not consume too much resources and break the flow or finish the pipeline as it would have been without the table",
    "start": "402880",
    "end": "410560"
  },
  {
    "text": "and how we will do this in tecton we'll dig a little bit more how we do this in",
    "start": "410560",
    "end": "418160"
  },
  {
    "text": "tecton but this is based on tep the number 42 so tp stands for tickton enhancement",
    "start": "418160",
    "end": "425919"
  },
  {
    "text": "proposal and this tp is about adding breakpoint on fader for",
    "start": "425919",
    "end": "431280"
  },
  {
    "text": "steps inside the task run this is focused on touchscreen to start the work but this tep is going to extend",
    "start": "431280",
    "end": "439120"
  },
  {
    "text": "more and more as as we go so first let's",
    "start": "439120",
    "end": "445680"
  },
  {
    "start": "443000",
    "end": "465000"
  },
  {
    "text": "go quickly on what is takedown uh for uh those who are um who do do not",
    "start": "445680",
    "end": "453280"
  },
  {
    "text": "know what is takedown or have a really general idea of it uh if you do know takedown very well uh",
    "start": "453280",
    "end": "459759"
  },
  {
    "text": "the next few minutes will probably be a little bit boring but it's okay um",
    "start": "459759",
    "end": "464879"
  },
  {
    "text": "so what is checked on in a nutshell tecton is an open source project uh that aims to provide a set of",
    "start": "464879",
    "end": "471440"
  },
  {
    "start": "465000",
    "end": "512000"
  },
  {
    "text": "standard and shared and shareable components for building uh kubernetes society cicd system",
    "start": "471440",
    "end": "479440"
  },
  {
    "text": "this is governed by this continuous delivery foundation the ce foundation",
    "start": "479440",
    "end": "485120"
  },
  {
    "text": "which is a kind of a cousin of the cncf and contributions are coming from uh",
    "start": "485120",
    "end": "492160"
  },
  {
    "text": "literally everywhere in the world and and lots of companies uh some of the most important one are",
    "start": "492160",
    "end": "498400"
  },
  {
    "text": "google red hat cloud b's ibm pivotal and d2iq there's many many more it's a really",
    "start": "498400",
    "end": "506210"
  },
  {
    "text": "[Music] high highly active",
    "start": "506210",
    "end": "511280"
  },
  {
    "text": "community right now so in a nutshell a little bit more",
    "start": "511280",
    "end": "518000"
  },
  {
    "start": "512000",
    "end": "657000"
  },
  {
    "text": "so tecton allows you to write declarative pipelines with standard custom current custom",
    "start": "518000",
    "end": "524800"
  },
  {
    "text": "resource this means we're using the exact same mechanism you use for",
    "start": "524800",
    "end": "529839"
  },
  {
    "text": "services deployments posts in kubernetes but to to be able to",
    "start": "529839",
    "end": "535360"
  },
  {
    "text": "declare pipelines um everything runs into containers so",
    "start": "535360",
    "end": "540959"
  },
  {
    "text": "takedown itself the control plane etc are running inside containers and any steps any tasks",
    "start": "540959",
    "end": "547760"
  },
  {
    "text": "anything that you might do inside your pipeline will be uh",
    "start": "547760",
    "end": "552880"
  },
  {
    "text": "running in uh in containers uh in conclusions uh you can do almost",
    "start": "552880",
    "end": "560000"
  },
  {
    "text": "whatever you want inside um inside your pipeline because as long as",
    "start": "560000",
    "end": "565279"
  },
  {
    "text": "it runs into a container it's gonna run into pipeline one example is you can build images using kubernetes",
    "start": "565279",
    "end": "572160"
  },
  {
    "text": "kubernetes tools inside your task uh you can use whatever tools you want",
    "start": "572160",
    "end": "578240"
  },
  {
    "text": "and then uh through parameters and through results and through resources you can",
    "start": "578240",
    "end": "583279"
  },
  {
    "text": "reuse what you just built somewhere else so you can use social image build i can",
    "start": "583279",
    "end": "588640"
  },
  {
    "text": "echo whatever you want you can deploy to multiple platforms so of course you can deploy on",
    "start": "588640",
    "end": "593680"
  },
  {
    "text": "kubernetes so anything like document sports deployment services",
    "start": "593680",
    "end": "600160"
  },
  {
    "text": "serverless etc but you can literally deploy on anything as long as you have tools inside your containers",
    "start": "600160",
    "end": "606079"
  },
  {
    "text": "allowing you to do that one example that we have upstream is um",
    "start": "606079",
    "end": "612640"
  },
  {
    "text": "there's some tasks that allows you to create a mini um mac mini",
    "start": "612640",
    "end": "620399"
  },
  {
    "text": "uh vm i don't i don't even know if it's a vm or not maybe it's a real one",
    "start": "620399",
    "end": "627200"
  },
  {
    "text": "uh somewhere in the cloud deploy something in there run your tests get back the results",
    "start": "627200",
    "end": "633279"
  },
  {
    "text": "as everything is used is is kind of running into containers you can do this",
    "start": "633279",
    "end": "639760"
  },
  {
    "text": "and it provides sets or it aims to provide a set of powerful user interface right now we do have a",
    "start": "639760",
    "end": "646480"
  },
  {
    "text": "command line tool an official command line tool you know an official dashboard the common light will be in tkn and yeah",
    "start": "646480",
    "end": "653760"
  },
  {
    "text": "let's dig a little bit more into the tecton concepts now",
    "start": "653760",
    "end": "660880"
  },
  {
    "start": "657000",
    "end": "840000"
  },
  {
    "text": "so there are a few concepts in tecton that really helped to understand how",
    "start": "660880",
    "end": "667680"
  },
  {
    "text": "the tecton pipeline itself works so uh these would be step task pipeline",
    "start": "667680",
    "end": "674000"
  },
  {
    "text": "task run and pipeline run and we couldn't think of these uh resources in uh two different of two different kinds",
    "start": "674000",
    "end": "681839"
  },
  {
    "text": "uh the first one would be the definitions second would be executions among the definitions we've got task and",
    "start": "681839",
    "end": "688560"
  },
  {
    "text": "pipeline where a task is a list of steps that run sequentially in the same port and each step is by itself running in a",
    "start": "688560",
    "end": "696480"
  },
  {
    "text": "container and a pipeline is a graph of task inputs and outputs",
    "start": "696480",
    "end": "702880"
  },
  {
    "text": "executed in a certain order and a pipeline and when we see a graph",
    "start": "702880",
    "end": "708160"
  },
  {
    "text": "of tasks we mean that these pipelines can be uh made of",
    "start": "708160",
    "end": "714000"
  },
  {
    "text": "com can be made of different tasks together and these can be pre-existing tasks new",
    "start": "714000",
    "end": "720320"
  },
  {
    "text": "tasks that you can create uh right in the pipeline itself and then",
    "start": "720320",
    "end": "725519"
  },
  {
    "text": "you can just basically compose different tasks together to form a pipeline and this really shows the",
    "start": "725519",
    "end": "731519"
  },
  {
    "text": "composability of tecton itself when it comes to creating pipeline and to run each of these stars and",
    "start": "731519",
    "end": "738079"
  },
  {
    "text": "pipeline to have these uh as reproducible as possible you can just",
    "start": "738079",
    "end": "744560"
  },
  {
    "text": "define these tasks and pipelines once and then run uh their equivalent",
    "start": "744560",
    "end": "750639"
  },
  {
    "text": "run uh resources which are that you have a task run for a task and you have a",
    "start": "750639",
    "end": "755680"
  },
  {
    "text": "pipeline run for a pipeline so if you want to run a task with certain parameters",
    "start": "755680",
    "end": "761360"
  },
  {
    "text": "uh you would basically create a task with a task run and when you create this task",
    "start": "761360",
    "end": "768079"
  },
  {
    "text": "you can give any parameters that you want or the task to run with if there are some of the parameters you would",
    "start": "768079",
    "end": "773360"
  },
  {
    "text": "want to run the task in the future you can do that as well you just have to provide different parameters in that",
    "start": "773360",
    "end": "778399"
  },
  {
    "text": "case and the same is the case with pipeline and you already have your pipeline with the tasks which can run either in",
    "start": "778399",
    "end": "785440"
  },
  {
    "text": "sequence or in parallel and uh you just provide a pipeline run uh in which which has all the inputs",
    "start": "785440",
    "end": "792720"
  },
  {
    "text": "that that are necessary for the pipeline and then you can you can just run the pipeline and",
    "start": "792720",
    "end": "798560"
  },
  {
    "text": "in this way you can just keep testing your tasks and pipelines with different parameters",
    "start": "798560",
    "end": "803600"
  },
  {
    "text": "and you can compose different pipelines with multiple different tasks and you never",
    "start": "803600",
    "end": "808880"
  },
  {
    "text": "have to uh have uh have to write different pipelines every time even if you're using the same",
    "start": "808880",
    "end": "815760"
  },
  {
    "text": "functionalities you before so techton is in this way like very",
    "start": "815760",
    "end": "821680"
  },
  {
    "text": "uh reproducible and composable and it makes it easy for the users to just kind",
    "start": "821680",
    "end": "828639"
  },
  {
    "text": "of get down and start making pipelines easily if you have a certain set of tasks and a lot of these tasks are present in",
    "start": "828639",
    "end": "835199"
  },
  {
    "text": "the task catalog so the user can just start building their own pipelines okay so uh let's look at um",
    "start": "835199",
    "end": "843760"
  },
  {
    "start": "840000",
    "end": "958000"
  },
  {
    "text": "so let's look at uh what a pipeline looks like here uh so you can see that there's a",
    "start": "843760",
    "end": "848800"
  },
  {
    "text": "pipeline and then there are four tasks over here and the first task is running uh the",
    "start": "848800",
    "end": "854959"
  },
  {
    "text": "first three steps and each of these steps runs in a container of itself then the output is being passed",
    "start": "854959",
    "end": "860639"
  },
  {
    "text": "to the next two tasks which are running in parallel and the second task which is there is",
    "start": "860639",
    "end": "866560"
  },
  {
    "text": "sending its output as an input for the last task which is there and you can see that the",
    "start": "866560",
    "end": "871680"
  },
  {
    "text": "first task is running by itself the second to in parallel and third one by itself and uh this is just a definition of the",
    "start": "871680",
    "end": "878560"
  },
  {
    "text": "pipeline and the task that it's references or has defined and defined in the pipeline itself so to run",
    "start": "878560",
    "end": "885760"
  },
  {
    "text": "this pipeline actually you have to provide a pipeline run and which sees that there's an execution",
    "start": "885760",
    "end": "892160"
  },
  {
    "text": "of the pipeline which creates task runs in insert to create each of these tasks are task runs and execute them and",
    "start": "892160",
    "end": "900480"
  },
  {
    "text": "uh before there were there were pipeline resources and uh currently they are being deprecated",
    "start": "900480",
    "end": "908160"
  },
  {
    "text": "and they are replaced with they are replaced with uh inputs",
    "start": "908160",
    "end": "914639"
  },
  {
    "text": "uh other kind of inputs such as workspaces and parameters workspaces obviously uh",
    "start": "914639",
    "end": "921440"
  },
  {
    "text": "places where resources can be shared or data can be shared",
    "start": "921440",
    "end": "927440"
  },
  {
    "text": "uh through volumes and uh inputs can be given by parameters",
    "start": "927440",
    "end": "932639"
  },
  {
    "text": "also uh and these two concepts replace pipeline resources completely um let's look at uh let's now look at",
    "start": "932639",
    "end": "941360"
  },
  {
    "text": "like what a task run actually looks like because in this demo and in this uh scenario we",
    "start": "941360",
    "end": "947279"
  },
  {
    "text": "are going to focus on how to debug a task and in the future we should be also",
    "start": "947279",
    "end": "952959"
  },
  {
    "text": "able to debug a pipeline down but for now we will only focus on a task so let's talk about",
    "start": "952959",
    "end": "960240"
  },
  {
    "start": "958000",
    "end": "1016000"
  },
  {
    "text": "uh what a task actually looks like okay uh so here in the task uh we've got a",
    "start": "960240",
    "end": "966480"
  },
  {
    "text": "spec and there are steps uh which we can define in the task and we are going to focus on this task",
    "start": "966480",
    "end": "972320"
  },
  {
    "text": "uh not this task in particular but we're going to focus on tasks and task runs and trying to debug them",
    "start": "972320",
    "end": "980800"
  },
  {
    "text": "in the future we should also be able to debug pipelines pipeline runs uh uh so for now we are going to look at",
    "start": "980800",
    "end": "988240"
  },
  {
    "text": "this task and create a task run from this task and trying to i'm going to try and debug",
    "start": "988240",
    "end": "994959"
  },
  {
    "text": "this so let's actually understand what debugging",
    "start": "994959",
    "end": "1001440"
  },
  {
    "text": "looks like and how we've gone ahead and implemented it for that we look at something called the",
    "start": "1001440",
    "end": "1008480"
  },
  {
    "text": "russian draw entry point hack and [Music]",
    "start": "1008480",
    "end": "1014320"
  },
  {
    "text": "vincent you would like to go ahead with it uh yeah so let's dig a little bit about the russian doll",
    "start": "1014320",
    "end": "1020079"
  },
  {
    "text": "debug um so we use tuition the original",
    "start": "1020079",
    "end": "1025120"
  },
  {
    "start": "1023000",
    "end": "1076000"
  },
  {
    "text": "uh as a reference uh mainly in in in reference to the talk",
    "start": "1025120",
    "end": "1031678"
  },
  {
    "text": "that christie wilson and jason hall from google uh did in 2019",
    "start": "1031679",
    "end": "1038558"
  },
  {
    "text": "in kubecon where they described a little bit what tecton was doing uh",
    "start": "1038559",
    "end": "1047360"
  },
  {
    "text": "what magic tecton was doing to be able to run containers in sequence",
    "start": "1047360",
    "end": "1053919"
  },
  {
    "text": "inside a boat because this is some need we had uh to be able to control the flow of",
    "start": "1053919",
    "end": "1060000"
  },
  {
    "text": "execution inside the board and and and this this talk is is a bit",
    "start": "1060000",
    "end": "1066080"
  },
  {
    "text": "uh going through the through to this so i uh uh i'll let you uh after",
    "start": "1066080",
    "end": "1073200"
  },
  {
    "text": "uh watch this if it's interesting but in uh in a gist uh what it what we do",
    "start": "1073200",
    "end": "1081039"
  },
  {
    "start": "1076000",
    "end": "1152000"
  },
  {
    "text": "uh let's just first define what we mean by entry point and then what this ack is all about in in one one",
    "start": "1081039",
    "end": "1088000"
  },
  {
    "text": "slide so an entry point in the container world is",
    "start": "1088000",
    "end": "1093520"
  },
  {
    "text": "whatever binary or command that is uh gonna run when the container",
    "start": "1093520",
    "end": "1099440"
  },
  {
    "text": "starts it's either specified by uh by the image itself uh so if you build",
    "start": "1099440",
    "end": "1106880"
  },
  {
    "text": "your image using the kefir for example on the left um it's",
    "start": "1106880",
    "end": "1112160"
  },
  {
    "text": "whatever was defined as using the entry point keyword um",
    "start": "1112160",
    "end": "1119200"
  },
  {
    "text": "if you don't want to use the image entry point you can always specifically uh explicitly uh",
    "start": "1119200",
    "end": "1127520"
  },
  {
    "text": "define the entry point uh when you describe your com your container so inside the board it's going",
    "start": "1127520",
    "end": "1134480"
  },
  {
    "text": "to be container step which is in the step container spec which is what we have in the in steps in the task",
    "start": "1134480",
    "end": "1140880"
  },
  {
    "text": "on the on the right so you're always able to define or override the entry",
    "start": "1140880",
    "end": "1147039"
  },
  {
    "text": "point you want when you start a container but yeah this is what we mean by entry point",
    "start": "1147039",
    "end": "1152240"
  },
  {
    "start": "1152000",
    "end": "1315000"
  },
  {
    "text": "and uh the talk uh that jason and christie did",
    "start": "1152240",
    "end": "1158160"
  },
  {
    "text": "resumed in one slide is we do overload the user entry point so either the",
    "start": "1158160",
    "end": "1164960"
  },
  {
    "text": "screen that comes from the image or the one that the user provides we override overwrite this one with our",
    "start": "1164960",
    "end": "1171679"
  },
  {
    "text": "own one we control this is a binary called entry points so we what's what tekton",
    "start": "1171679",
    "end": "1179280"
  },
  {
    "text": "does when it's schedules a pod for a task it's copying itself the entry point",
    "start": "1179280",
    "end": "1187600"
  },
  {
    "text": "inside each and every container uh",
    "start": "1187600",
    "end": "1192880"
  },
  {
    "text": "so that we can we know what we execute then uh we do uh change the entry points to be our own",
    "start": "1192880",
    "end": "1200080"
  },
  {
    "text": "entry point and then in arguments the whatever was the original entry point",
    "start": "1200080",
    "end": "1206240"
  },
  {
    "text": "so if the user didn't specify anything we'll check what was the image entry point and then we'll append",
    "start": "1206240",
    "end": "1213440"
  },
  {
    "text": "it to our arguments if the user provided something we will append it to ours so for example if the user",
    "start": "1213440",
    "end": "1220559"
  },
  {
    "text": "wanted to do a ls-l as entry point in a really simple way",
    "start": "1220559",
    "end": "1227520"
  },
  {
    "text": "this is going to be executed as our entry point then ls-l",
    "start": "1227520",
    "end": "1233520"
  },
  {
    "text": "and thus we can control uh whatever it gets executed and that's the third the third step is",
    "start": "1233520",
    "end": "1239520"
  },
  {
    "text": "gonna be our binary is waiting for some signal to start",
    "start": "1239520",
    "end": "1244559"
  },
  {
    "text": "we are using uh files from previous",
    "start": "1244559",
    "end": "1250080"
  },
  {
    "text": "previous steps if if there's any previous and then if we got the signal we just",
    "start": "1251039",
    "end": "1257360"
  },
  {
    "text": "run the initial command that the user provided",
    "start": "1257360",
    "end": "1264720"
  },
  {
    "text": "and then when it's done we can gather the results so",
    "start": "1265200",
    "end": "1272240"
  },
  {
    "text": "gather if it failed or not which exit point it was and signal the next step so in the",
    "start": "1272240",
    "end": "1278720"
  },
  {
    "text": "natural normal flow if the command failed",
    "start": "1278720",
    "end": "1283760"
  },
  {
    "text": "we will write that it's an error and the next step entry point will know that the previous",
    "start": "1283760",
    "end": "1290880"
  },
  {
    "text": "step failed and and and skip and and and so on for all",
    "start": "1290880",
    "end": "1295919"
  },
  {
    "text": "all the other steps so this is how the entry point works if you're interested in digging more uh",
    "start": "1295919",
    "end": "1302240"
  },
  {
    "text": "uh i'll let you watch the the talk after but uh for",
    "start": "1302240",
    "end": "1309520"
  },
  {
    "text": "our debugging purpose we needed uh to enhance this uh and this is where the",
    "start": "1309520",
    "end": "1316480"
  },
  {
    "start": "1315000",
    "end": "1482000"
  },
  {
    "text": "debug breakpoint story happens so as uh vincent you said like to",
    "start": "1316480",
    "end": "1327280"
  },
  {
    "text": "actually start debugging and like you know providing the feature for debug what uh we've had to uh kind of expand",
    "start": "1327840",
    "end": "1336080"
  },
  {
    "text": "this entry point hack and a little bit flip it over its head and uh use this hack to actually control the",
    "start": "1336080",
    "end": "1343919"
  },
  {
    "text": "life cycle of the steps itself so that when a step is executing",
    "start": "1343919",
    "end": "1350240"
  },
  {
    "text": "and it fails the step should stop at the failure and not stop the",
    "start": "1350240",
    "end": "1356320"
  },
  {
    "text": "execution of the task run itself and the user should be",
    "start": "1356320",
    "end": "1361760"
  },
  {
    "text": "able to go into the environment and then uh debug it and troubleshoot",
    "start": "1361760",
    "end": "1367200"
  },
  {
    "text": "and figure out what's the issue and then go back and you know fix the issue that will that is there that they form so for this",
    "start": "1367200",
    "end": "1374799"
  },
  {
    "text": "what we do is first of all we mark the last run is debuggable by adding the",
    "start": "1374799",
    "end": "1380320"
  },
  {
    "text": "debug spec and also um adding where we want the breakpoint to",
    "start": "1380320",
    "end": "1386240"
  },
  {
    "text": "be on failure over here is a dynamic break point which basically uh stops the",
    "start": "1386240",
    "end": "1392080"
  },
  {
    "text": "step stops like the task run on any step that fails so how many of the steps fail",
    "start": "1392080",
    "end": "1399919"
  },
  {
    "text": "the step would be paused at that point and the user can basically gain access to the environment of the uh",
    "start": "1399919",
    "end": "1408080"
  },
  {
    "text": "step at that point and what what is done is uh when the user",
    "start": "1408080",
    "end": "1414240"
  },
  {
    "text": "gets environment access they can debug do whatever they want over there and then",
    "start": "1414240",
    "end": "1419360"
  },
  {
    "text": "they can after that continue the step from there by marking the step either as",
    "start": "1419360",
    "end": "1425039"
  },
  {
    "text": "a success or a failure so to continue uh and break the breakpoint and mark the",
    "start": "1425039",
    "end": "1432320"
  },
  {
    "text": "step as the failure we provide scripts uh which help to do all these things uh so",
    "start": "1432320",
    "end": "1440799"
  },
  {
    "text": "we we provide a debug continuous script which basically marks the step as a success and then breaks",
    "start": "1440799",
    "end": "1447120"
  },
  {
    "text": "the breakpoint and uh the user can also mark the step as a failure by using the debug field",
    "start": "1447120",
    "end": "1452240"
  },
  {
    "text": "continue script and this step would be marked as a failure and in the end the task run would also be marked as a failure",
    "start": "1452240",
    "end": "1460080"
  },
  {
    "text": "so when this execution is complete uh the user can basically go ahead and",
    "start": "1460080",
    "end": "1467279"
  },
  {
    "text": "kind of get get an idea of what exactly failed so that they can go",
    "start": "1467279",
    "end": "1472960"
  },
  {
    "text": "back to the task run and fix it over there so yeah um now we'll actually look at uh",
    "start": "1472960",
    "end": "1481039"
  },
  {
    "text": "how to do this in uh like in an actual demo and",
    "start": "1481039",
    "end": "1487919"
  },
  {
    "text": "let's go ahead with it okay so uh we are running mini cube and with tekton installed and you can see",
    "start": "1487919",
    "end": "1494320"
  },
  {
    "start": "1489000",
    "end": "1975000"
  },
  {
    "text": "that there is a tecton controller and that book pods over here and what we are going to do is we are",
    "start": "1494320",
    "end": "1501279"
  },
  {
    "text": "going to run our task uh task run which contains a task spec so we don't have to create a different",
    "start": "1501279",
    "end": "1507360"
  },
  {
    "text": "task and this is going to have a task",
    "start": "1507360",
    "end": "1512799"
  },
  {
    "text": "which is going to write a file uh and then start it and then read the file",
    "start": "1512799",
    "end": "1519200"
  },
  {
    "text": "uh and let's see how that goes so this and somewhere along the way the",
    "start": "1519200",
    "end": "1526400"
  },
  {
    "text": "task is going to fail and we will probably figure out by the end like how we can debug",
    "start": "1526400",
    "end": "1532159"
  },
  {
    "text": "and fix the tasks so let's go um i'm going to go ahead and create",
    "start": "1532159",
    "end": "1538799"
  },
  {
    "text": "this task which is called step script bash",
    "start": "1538799",
    "end": "1545120"
  },
  {
    "text": "and then you can see here that the task run has been created called step script and",
    "start": "1547600",
    "end": "1553840"
  },
  {
    "text": "the generated name and it's in pending mode because the board is initializing",
    "start": "1553840",
    "end": "1559200"
  },
  {
    "text": "class report is initializing and over here we should be able to see the tasks and logs which come up",
    "start": "1559200",
    "end": "1566000"
  },
  {
    "text": "so we'll just wait for a sec till that comes right up",
    "start": "1566000",
    "end": "1571840"
  },
  {
    "text": "okay so you can see the task task run is running and",
    "start": "1573039",
    "end": "1580240"
  },
  {
    "text": "but you can see in the logs also that we've got an error in the stacked step uh",
    "start": "1580240",
    "end": "1586720"
  },
  {
    "text": "which says that cannot start shared data new right no such file or directory",
    "start": "1586720",
    "end": "1591919"
  },
  {
    "text": "so uh i don't know what's going on here let's go back and check",
    "start": "1591919",
    "end": "1599520"
  },
  {
    "text": "in the task answer like what happened considering like we are on on failure right now uh we can see this debug uh steps saying",
    "start": "1599520",
    "end": "1607360"
  },
  {
    "text": "that skipping writing on writing for the post file related to debug and what we'll do is",
    "start": "1607360",
    "end": "1613360"
  },
  {
    "text": "we will get into this pod and go to the step start",
    "start": "1613360",
    "end": "1621679"
  },
  {
    "text": "container which is basically step dash uh step name",
    "start": "1621679",
    "end": "1630000"
  },
  {
    "text": "that is the container name format for this so this is the step that we are going into we're going to see like what is going on",
    "start": "1630000",
    "end": "1635919"
  },
  {
    "text": "we uh so we are using the ubuntu uh image here so there is the",
    "start": "1635919",
    "end": "1641679"
  },
  {
    "text": "bash uh shell so we are able to use it so we are in the bash shell in the container",
    "start": "1641679",
    "end": "1647279"
  },
  {
    "text": "right now and what we are going to do is we are going to check uh cannot start share data new right so",
    "start": "1647279",
    "end": "1655200"
  },
  {
    "text": "we're gonna going to check if new right is there or not just in case",
    "start": "1655200",
    "end": "1661440"
  },
  {
    "text": "so there is no such firewall directory let's just go ahead and share data if we can figure this out",
    "start": "1661440",
    "end": "1669039"
  },
  {
    "text": "so we are in shared data oh it seems like there is data in the shell data i'm going to read it",
    "start": "1669039",
    "end": "1676480"
  },
  {
    "text": "okay there is something that is awesomeness inside now what we're going to do is we're",
    "start": "1676480",
    "end": "1682480"
  },
  {
    "text": "going to uh okay now we know that the data is in",
    "start": "1682480",
    "end": "1687840"
  },
  {
    "text": "data uh file and not in new write file so we are going to go uh to the task run",
    "start": "1687840",
    "end": "1695520"
  },
  {
    "text": "and try i'm going to try and debug it so",
    "start": "1695520",
    "end": "1700720"
  },
  {
    "text": "the task that we run was this tab script bash in the step script bash so the second",
    "start": "1700720",
    "end": "1707520"
  },
  {
    "text": "step so the right or seem to work well and the stat is doing a start on share data new right",
    "start": "1707520",
    "end": "1716880"
  },
  {
    "text": "which is wrong because it seems like it's writing to data and not you right so i'm going to",
    "start": "1716880",
    "end": "1721919"
  },
  {
    "text": "go ahead and fix this right away uh and then considering that",
    "start": "1721919",
    "end": "1728480"
  },
  {
    "text": "uh considering that at the end in the last we are eating",
    "start": "1728480",
    "end": "1735120"
  },
  {
    "text": "shared data data so i think it should work so we'll just mark the step as a success",
    "start": "1735120",
    "end": "1741520"
  },
  {
    "text": "for now so let's go back to the container and then mark this task run as a success",
    "start": "1741520",
    "end": "1750399"
  },
  {
    "text": "so i'm going to uh so how do i mark this as a success so i'm going to go to techton",
    "start": "1750840",
    "end": "1756720"
  },
  {
    "text": "debug scripts and in the scripts we have so these are the debug scripts which",
    "start": "1756720",
    "end": "1762480"
  },
  {
    "text": "come along with the debug spec and the user can use to either mark the",
    "start": "1762480",
    "end": "1767840"
  },
  {
    "text": "uh step as a success or as a failure and close the breakpoint at the same time uh",
    "start": "1767840",
    "end": "1774240"
  },
  {
    "text": "so i'm going to go ahead and run the debug continue script over here and yep",
    "start": "1774240",
    "end": "1781760"
  },
  {
    "text": "so the pod terminates and the task run is marked as a success over",
    "start": "1781760",
    "end": "1787919"
  },
  {
    "text": "here and you can see that see that you we find read awesomeness over here as well",
    "start": "1787919",
    "end": "1794000"
  },
  {
    "text": "uh so we see the task has passed with such success now let me just go and test out",
    "start": "1794000",
    "end": "1801200"
  },
  {
    "text": "if our la the check that we made the debugging that we did",
    "start": "1801200",
    "end": "1806640"
  },
  {
    "text": "came to fruition after changing uh the new right to data",
    "start": "1806640",
    "end": "1812559"
  },
  {
    "text": "so i'm going to run the same task run again uh so we've got",
    "start": "1812559",
    "end": "1820640"
  },
  {
    "text": "we got this task run right here it's the port is initializing it's",
    "start": "1820640",
    "end": "1827360"
  },
  {
    "text": "running it'll start running soon i hope",
    "start": "1827360",
    "end": "1836960"
  },
  {
    "text": "right so i i as as we saw and as we are seeing it right now uh we",
    "start": "1836960",
    "end": "1843039"
  },
  {
    "text": "were able to quickly get in the container and see what was inside and it helped",
    "start": "1843039",
    "end": "1849600"
  },
  {
    "text": "us see that we were looking at the wrong file so yeah this was pretty useful web right",
    "start": "1849600",
    "end": "1855600"
  },
  {
    "text": "now decided to mark the step as the the step in this test as a success because",
    "start": "1855600",
    "end": "1861200"
  },
  {
    "text": "we knew the next step would succeed but we could have done the opposite",
    "start": "1861200",
    "end": "1869200"
  },
  {
    "text": "doing marking it as fail and just have a new one i don't know if you want to demo that",
    "start": "1869200",
    "end": "1876320"
  },
  {
    "text": "let's actually see how that works so how marking your failure works and if it actually marks the task on the",
    "start": "1876480",
    "end": "1882559"
  },
  {
    "text": "failure so i'm going to go ahead and go ahead and start again the wrong",
    "start": "1882559",
    "end": "1891120"
  },
  {
    "text": "wrong file uh and then we'll try to run this again uh",
    "start": "1891440",
    "end": "1898000"
  },
  {
    "text": "and let's let's mark this as a failure and see how it goes so i'm going to create this again and",
    "start": "1898000",
    "end": "1905440"
  },
  {
    "text": "this one as we know it should fail on the second step so let's",
    "start": "1905440",
    "end": "1914399"
  },
  {
    "text": "let's get the pod for the task run and let's uh just wait",
    "start": "1916559",
    "end": "1922640"
  },
  {
    "text": "for the step to fail yeah so we have this fail step over here",
    "start": "1922640",
    "end": "1929840"
  },
  {
    "text": "again so we're gonna go ahead and in it and then uh",
    "start": "1929840",
    "end": "1934880"
  },
  {
    "text": "we we know we know the drill and we know that the file is wrong and but we are just",
    "start": "1934880",
    "end": "1941039"
  },
  {
    "text": "going to mark the step as a failure so we are going to run the",
    "start": "1941039",
    "end": "1946158"
  },
  {
    "text": "script for failure so debug fail continue uh so i'm gonna run this and",
    "start": "1946399",
    "end": "1955840"
  },
  {
    "text": "even if even if the task uh continued and we had the output the step",
    "start": "1955840",
    "end": "1962240"
  },
  {
    "text": "failed so you can see that uh uh task run over here is in a failed status",
    "start": "1962240",
    "end": "1968640"
  },
  {
    "text": "so in this way like you can mark this as a success or a failure",
    "start": "1968640",
    "end": "1975360"
  },
  {
    "start": "1975000",
    "end": "2072000"
  },
  {
    "text": "uh so let's recap the demo and let's recap the demo and see like what",
    "start": "1975360",
    "end": "1981039"
  },
  {
    "text": "we did basically so there was a tasker which we executed and a step in the task run failed so",
    "start": "1981039",
    "end": "1987440"
  },
  {
    "text": "uh we had already provided debug breakpoint on failure in the spec so the task and did not",
    "start": "1987440",
    "end": "1994399"
  },
  {
    "text": "complete the execution rather it halted so that the user can come in for debugging and",
    "start": "1994399",
    "end": "2000399"
  },
  {
    "text": "uh when the task was halted the user could get access to the debug environment in",
    "start": "2000399",
    "end": "2006080"
  },
  {
    "text": "this case that is a step container and the user could figure out okay",
    "start": "2006080",
    "end": "2011440"
  },
  {
    "text": "why the step failed and then mark the step as a success after failure",
    "start": "2011440",
    "end": "2017120"
  },
  {
    "text": "after after it failed so uh they can just let the task and continue as it did",
    "start": "2017120",
    "end": "2024480"
  },
  {
    "text": "then that then after figuring it out the task and continues executing with no problem",
    "start": "2024480",
    "end": "2029760"
  },
  {
    "text": "the user now knows uh the reason why the step failed in the first place so",
    "start": "2029760",
    "end": "2037279"
  },
  {
    "text": "this basically uh didn't involve any kind of you know hacky processes",
    "start": "2037279",
    "end": "2045120"
  },
  {
    "text": "internally it did it did but externally did not uh let the user to figuring figure out",
    "start": "2045120",
    "end": "2051839"
  },
  {
    "text": "like okay why did this fail i probably need to run this again the user had to run the task run just once the failure",
    "start": "2051839",
    "end": "2058240"
  },
  {
    "text": "happened only once and they were able to debug it",
    "start": "2058240",
    "end": "2063599"
  },
  {
    "text": "understand the root cause of failure and then go ahead with running the task and again",
    "start": "2063599",
    "end": "2071679"
  },
  {
    "start": "2072000",
    "end": "2312000"
  },
  {
    "text": "all right so um this is more or less the current status of our um proposal and our work",
    "start": "2072720",
    "end": "2080320"
  },
  {
    "text": "uh let's see what are the next steps um for this so there's a few things that",
    "start": "2080320",
    "end": "2087118"
  },
  {
    "text": "we need to enhance our ads to have a more complete debug feature one one thing is right now",
    "start": "2087119",
    "end": "2095679"
  },
  {
    "text": "there's a kind of shortcomings which is if you are using",
    "start": "2095679",
    "end": "2100720"
  },
  {
    "text": "inside your steps an image that doesn't have",
    "start": "2100720",
    "end": "2107200"
  },
  {
    "text": "doesn't have a shell then the debug scripts won't work you",
    "start": "2107520",
    "end": "2113200"
  },
  {
    "text": "won't be able to continue or are break the flow because we need a shell to do that",
    "start": "2113200",
    "end": "2119839"
  },
  {
    "text": "one thing that we would like to provide for this reason and for other useful reason uh is for tecton to be",
    "start": "2119839",
    "end": "2127440"
  },
  {
    "text": "able to provide its own shell probably as part of the entry point",
    "start": "2127440",
    "end": "2132720"
  },
  {
    "text": "itself either the same binary are using the entry point injection arc to",
    "start": "2132720",
    "end": "2138960"
  },
  {
    "text": "inject another binary this would be useful because then no matter what image is used inside your",
    "start": "2138960",
    "end": "2145040"
  },
  {
    "text": "step you could debug it but it would also mean no matter what um",
    "start": "2145040",
    "end": "2152400"
  },
  {
    "text": "no matter what uh image you use you could use the script feature uh of of tectum then",
    "start": "2152480",
    "end": "2159760"
  },
  {
    "text": "we also want to support more modes or breakpoints that the user can provide we",
    "start": "2159760",
    "end": "2165680"
  },
  {
    "text": "demodes the only mode that is currently supported which is",
    "start": "2165680",
    "end": "2171359"
  },
  {
    "text": "the unfailure mode uh we would like probably to uh add more uh things like",
    "start": "2171359",
    "end": "2178560"
  },
  {
    "text": "um uh debug on each steps or specify the steps that we want to",
    "start": "2178560",
    "end": "2184480"
  },
  {
    "text": "debug those kind of things we need to support and probably the same on on the pipeline",
    "start": "2184480",
    "end": "2189599"
  },
  {
    "text": "itself so be able to say i want these and these stats to be debuggable but not the other ones",
    "start": "2189599",
    "end": "2195720"
  },
  {
    "text": "[Music] in addition we would like probably to go",
    "start": "2195720",
    "end": "2201040"
  },
  {
    "text": "forward we kind of uh are waiting for feedback of the community but",
    "start": "2201040",
    "end": "2206320"
  },
  {
    "text": "uh we are thinking of uh in the future being able to actually do",
    "start": "2206320",
    "end": "2212400"
  },
  {
    "text": "the software debug of a process running in the ci",
    "start": "2212400",
    "end": "2217440"
  },
  {
    "text": "directly from your ide so uh the flow would be something like i do uh",
    "start": "2217440",
    "end": "2223520"
  },
  {
    "text": "run my pipeline uh there's some end-to-end test that runs and my service is running",
    "start": "2223520",
    "end": "2229440"
  },
  {
    "text": "and is opening a port to debug i would be able to would like to be able to",
    "start": "2229440",
    "end": "2234640"
  },
  {
    "text": "hook my ide on this running process somewhere and just do my usual id",
    "start": "2234640",
    "end": "2242320"
  },
  {
    "text": "debugging feature on there and of course one of uh probably one of",
    "start": "2242320",
    "end": "2249599"
  },
  {
    "text": "the most important next step is the a better user experience so",
    "start": "2249599",
    "end": "2255520"
  },
  {
    "text": "we would like to make it even more easier for the user to",
    "start": "2255520",
    "end": "2260640"
  },
  {
    "text": "actually debug his steps or his pipeline uh so integrate it with dkn",
    "start": "2260640",
    "end": "2265920"
  },
  {
    "text": "the the tecton official client or dashboard where you could just see it failed and",
    "start": "2265920",
    "end": "2272000"
  },
  {
    "text": "it's in a debug it's in a debug mode so i just do it can",
    "start": "2272000",
    "end": "2277440"
  },
  {
    "text": "debug and get dropped in or from the dashboard just okay it's in debug mode to stop me in in the",
    "start": "2277440",
    "end": "2283920"
  },
  {
    "text": "in the shell and of course more tooling integration so integrate it directly within your ide",
    "start": "2283920",
    "end": "2291520"
  },
  {
    "text": "being intelligent being vs code etc and those are the next steps that we are",
    "start": "2291520",
    "end": "2298800"
  },
  {
    "text": "seeing right now uh of course we are open to any feedback on on this",
    "start": "2298800",
    "end": "2304079"
  },
  {
    "text": "uh because it's not set in stone it's gonna be an experimental feature to start with um so yeah we would like to hear from",
    "start": "2304079",
    "end": "2311359"
  },
  {
    "text": "you and yeah thank you for for uh attending this talk uh as other",
    "start": "2311359",
    "end": "2318640"
  },
  {
    "start": "2312000",
    "end": "2334000"
  },
  {
    "text": "beautiful talk we are available on chat for questions uh so yeah thank you for for listening",
    "start": "2318640",
    "end": "2325599"
  },
  {
    "text": "to us and watching this talk thank you everyone",
    "start": "2325599",
    "end": "2331200"
  },
  {
    "text": "take care bye",
    "start": "2331200",
    "end": "2336560"
  }
]