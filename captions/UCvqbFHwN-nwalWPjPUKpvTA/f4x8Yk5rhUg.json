[
  {
    "text": "all right I think it's 11:30 so I'll go and get started",
    "start": "3580",
    "end": "9360"
  },
  {
    "text": "if you don't know why you're here hopefully you're here because you want to hear about the kubernetes CRI",
    "start": "9360",
    "end": "16000"
  },
  {
    "text": "interface so how it talks to container runtimes and specifically first half",
    "start": "16000",
    "end": "22749"
  },
  {
    "text": "I'll talk about the CRI and and runtimes second half I'll try and demonstrate and",
    "start": "22749",
    "end": "30369"
  },
  {
    "text": "make it practical by showing container D as a runtime for kubernetes the fun part",
    "start": "30369",
    "end": "37539"
  },
  {
    "text": "of this demo is we're going to talk to my kubernetes cluster back in dallas texas and IBM cloud over my phone's 4G",
    "start": "37539",
    "end": "45719"
  },
  {
    "text": "connection so the demo made my commands maybe slow enough that we can talk",
    "start": "45719",
    "end": "50980"
  },
  {
    "text": "through that and answer questions as we go so so let's get started I'm Phil",
    "start": "50980",
    "end": "59499"
  },
  {
    "text": "Estes I work for IBM a distinguished engineer in our cloud platform unit more",
    "start": "59499",
    "end": "67690"
  },
  {
    "text": "importantly to this topic I've been contributing to container runtimes for about four years starting with docker",
    "start": "67690",
    "end": "74110"
  },
  {
    "text": "and the whole docker ecosystem and then in the last couple years container D I'm",
    "start": "74110",
    "end": "80050"
  },
  {
    "text": "a maintainer in container D as well as a we have a few others here in fact if",
    "start": "80050",
    "end": "85060"
  },
  {
    "text": "you're unhappy with how deep I get into container D you have another chance today at 3:05 Derek is over here on your",
    "start": "85060",
    "end": "93000"
  },
  {
    "text": "the far corner of the room Derek and Mike Brown Mike Brown is also from IBM",
    "start": "93000",
    "end": "98890"
  },
  {
    "text": "and a maintainer in the CRI plugin they're going to take you on a deep dive of the whole container D architecture so",
    "start": "98890",
    "end": "106960"
  },
  {
    "text": "again you have a couple chances to hear more today about that so you're at cube",
    "start": "106960",
    "end": "112540"
  },
  {
    "text": "con Shanghai the very first cloud native and cube con on the continent and so",
    "start": "112540",
    "end": "120550"
  },
  {
    "text": "maybe it's silly to ask you know are you using kubernetes maybe you're not yet",
    "start": "120550",
    "end": "127030"
  },
  {
    "text": "but you're interested or you're learning this week about it and the important",
    "start": "127030",
    "end": "133120"
  },
  {
    "text": "thing to note is that kubernetes is really just that orchestration platform above a container run time and that's",
    "start": "133120",
    "end": "142150"
  },
  {
    "text": "important because kubernetes doesn't actually run your containers so there's no code if you look through the entire",
    "start": "142150",
    "end": "148330"
  },
  {
    "text": "github repo for kubernetes you will not find any code that knows how to run to",
    "start": "148330",
    "end": "153849"
  },
  {
    "text": "start a container on a Linux or Windows system to handle the lifecycle commands",
    "start": "153849",
    "end": "158920"
  },
  {
    "text": "of creating starting stopping containers for many years that's been done that",
    "start": "158920",
    "end": "164319"
  },
  {
    "text": "role has been played by the docker engine again you can look back this URL",
    "start": "164319",
    "end": "171099"
  },
  {
    "text": "here is to release 1.4 of kubernetes so you know ancient history if you're keeping up with kubernetes 1.11 1.12 but",
    "start": "171099",
    "end": "178690"
  },
  {
    "text": "you know pick an old release you'll find a package called docker shim in",
    "start": "178690",
    "end": "184180"
  },
  {
    "text": "kubernetes and the docker shim was implemented to know how to talk to the",
    "start": "184180",
    "end": "189970"
  },
  {
    "text": "to the docker engine and have it do commands like docker run docker start on",
    "start": "189970",
    "end": "196060"
  },
  {
    "text": "behalf of kubernetes as it created pods as it created your put your application",
    "start": "196060",
    "end": "202470"
  },
  {
    "text": "orchestrated across a cluster so again that's that's kind of been the life",
    "start": "202470",
    "end": "207819"
  },
  {
    "text": "cycle of kubernetes again I don't have a lot of time to go into how docker has",
    "start": "207819",
    "end": "213540"
  },
  {
    "text": "itself has grown and matured over the last few years to really be a stack of",
    "start": "213540",
    "end": "219069"
  },
  {
    "text": "components with the open container initiatives run see at the bottom of that stack container d.a CN CF project",
    "start": "219069",
    "end": "226780"
  },
  {
    "text": "as you know and docker driving those so again that's been kind of the way things are for a good while",
    "start": "226780",
    "end": "234220"
  },
  {
    "text": "but back in 2016 and actually we're coming up on two years since this blog",
    "start": "234220",
    "end": "239560"
  },
  {
    "text": "post came out on kubernetes on the kubernetes blog about hey we're",
    "start": "239560",
    "end": "247150"
  },
  {
    "text": "introducing a container runtime interface to abstract the kubernetes code base from runtimes like docker at",
    "start": "247150",
    "end": "255519"
  },
  {
    "text": "this point rocket also a CN CF project had a variant of kubernetes called",
    "start": "255519",
    "end": "262539"
  },
  {
    "text": "rocket Nettie's where you could drive rocket as the container runtime but as",
    "start": "262539",
    "end": "268840"
  },
  {
    "text": "the kubernetes community tried to figure out what to do with the",
    "start": "268840",
    "end": "274809"
  },
  {
    "text": "fact that now you had places all across the Cuban Andes code base that had to know about the run time and that got",
    "start": "274809",
    "end": "281829"
  },
  {
    "text": "very messy and if you thought about adding a third or a fourth or another runtime the CRI was meant to separate",
    "start": "281829",
    "end": "289269"
  },
  {
    "text": "those concerns so anyone could implement the CRI API and you could become a container runtime underneath kubernetes",
    "start": "289269",
    "end": "298889"
  },
  {
    "text": "this is a rough differentiation between the role of what kubernetes still has to",
    "start": "298889",
    "end": "305829"
  },
  {
    "text": "do and then the CRI interface effectively separating out what the",
    "start": "305829",
    "end": "311079"
  },
  {
    "text": "container runtimes job is underneath kubernetes this picture isn't perfect",
    "start": "311079",
    "end": "316149"
  },
  {
    "text": "I've gotten feedback from a few other talks that you know there's obviously ways in which some of these come some of",
    "start": "316149",
    "end": "323289"
  },
  {
    "text": "these roles are handled on both sides of the CRI but it gives you a general idea that kubernetes is still handling the",
    "start": "323289",
    "end": "331209"
  },
  {
    "text": "kubernetes api it's handling storage concerns you've picked a C&I plugin to",
    "start": "331209",
    "end": "337360"
  },
  {
    "text": "handle your networking kubernetes all the API machinery around health checking",
    "start": "337360",
    "end": "343839"
  },
  {
    "text": "and placement all the orchestration parts of kubernetes all that is still",
    "start": "343839",
    "end": "349059"
  },
  {
    "text": "handled by kubernetes on the when it wants to place a container on a node via",
    "start": "349059",
    "end": "357099"
  },
  {
    "text": "the couplet obviously the things on the right are things that your container runtime is going to have to implement",
    "start": "357099",
    "end": "362169"
  },
  {
    "text": "that are part of the container runtime interface such as all this all the",
    "start": "362169",
    "end": "367479"
  },
  {
    "text": "lifecycle commands you'd expect start/stop delete also image management",
    "start": "367479",
    "end": "373299"
  },
  {
    "text": "so your container runtime is going to have to talk to registries pull pull images actually push is not correct you",
    "start": "373299",
    "end": "380379"
  },
  {
    "text": "don't push images from a pod get the status of an image you know is it pulled",
    "start": "380379",
    "end": "386229"
  },
  {
    "text": "get to get all the layers pod status and all the related parts of knowing the",
    "start": "386229",
    "end": "393699"
  },
  {
    "text": "state of your pods and containers within them and then there's a bunch of things you can do from the kubernetes interface",
    "start": "393699",
    "end": "401379"
  },
  {
    "text": "side like I want an exact into a container I want to attack I want to assign a port I want to get",
    "start": "401379",
    "end": "407680"
  },
  {
    "text": "logs all those interactions have to be implemented by your container runtime",
    "start": "407680",
    "end": "413590"
  },
  {
    "text": "via CRI so that when those kubernetes api czar called your container runtime can handle",
    "start": "413590",
    "end": "420340"
  },
  {
    "text": "the runtime aspect of those operations so again that gives you a basic idea of",
    "start": "420340",
    "end": "426220"
  },
  {
    "text": "who's job is what in the kubernetes world between the runtime and the kubernetes stack",
    "start": "426220",
    "end": "433800"
  },
  {
    "text": "so now that we have the CRI you might think well who's implemented this API",
    "start": "434690",
    "end": "441050"
  },
  {
    "text": "you know what runtimes are available underneath kubernetes obviously docker shim has been repurposed to implement",
    "start": "441050",
    "end": "449090"
  },
  {
    "text": "the CRI and so you you know many clusters today many production clusters continue to use docker as the runtime",
    "start": "449090",
    "end": "457660"
  },
  {
    "text": "obviously with container D the project I'm associated with we have a CRI",
    "start": "457660",
    "end": "462680"
  },
  {
    "text": "implementation that handles the CRI API and then calls into container D to again",
    "start": "462680",
    "end": "470330"
  },
  {
    "text": "do all those those runtime steps for the CRI who's heard of creo from Red Hat so",
    "start": "470330",
    "end": "478850"
  },
  {
    "text": "cryo is a project that also implements the CRI and basically cryo has all the",
    "start": "478850",
    "end": "486710"
  },
  {
    "text": "code to drive run seed directly so again run C is underneath both docker and",
    "start": "486710",
    "end": "491780"
  },
  {
    "text": "container D but cryo is a wrapper on run C to again implement the CRI and then",
    "start": "491780",
    "end": "500180"
  },
  {
    "text": "frac T is a shim implementation initially hyper dot SH and Intel clear",
    "start": "500180",
    "end": "510080"
  },
  {
    "text": "containers both had lightweight virtualization capabilities so this shim could basically either do",
    "start": "510080",
    "end": "516260"
  },
  {
    "text": "lightweight virtualization like through run V or call the docker engine when you didn't want to use lightweight",
    "start": "516260",
    "end": "522229"
  },
  {
    "text": "virtualization but if we fast forward today a lot of that has been is now",
    "start": "522229",
    "end": "528200"
  },
  {
    "text": "handled in the merged projects of cata containers which I think you've probably heard about a little bit this week",
    "start": "528200",
    "end": "534380"
  },
  {
    "text": "already and not only is cata associated with frac D but they're working with",
    "start": "534380",
    "end": "540860"
  },
  {
    "text": "both cryo and with our team in container D so that you can actually use cata",
    "start": "540860",
    "end": "546230"
  },
  {
    "text": "containers on other runtimes as well again the couplet has ways to specify",
    "start": "546230",
    "end": "552650"
  },
  {
    "text": "which runtime do I want to use the tools that you use to install your kubernetes",
    "start": "552650",
    "end": "558440"
  },
  {
    "text": "cluster may allow you to factor this out we'll talk about who's using container D",
    "start": "558440",
    "end": "564910"
  },
  {
    "text": "and making that possible but at this point you might ask why I'm",
    "start": "564910",
    "end": "571390"
  },
  {
    "text": "just a kubernetes you know end-user you know why do I care what run time is at",
    "start": "571390",
    "end": "576970"
  },
  {
    "text": "the sort of bottom of the stack handling running my containers and it's true that",
    "start": "576970",
    "end": "583240"
  },
  {
    "text": "most of the benefits of being able to plug in different runtimes is is",
    "start": "583240",
    "end": "589980"
  },
  {
    "text": "operational more than end-user focused so your coop coop huddle commands don't",
    "start": "589980",
    "end": "596170"
  },
  {
    "text": "change depending on what runtime and so your application developer and and the",
    "start": "596170",
    "end": "601510"
  },
  {
    "text": "people at that end of your development organization probably don't care if docker or container D or cryo or cata",
    "start": "601510",
    "end": "609580"
  },
  {
    "text": "containers is running the containers at the bottom but operationally there may be benefits so I cheated and took one of",
    "start": "609580",
    "end": "618880"
  },
  {
    "text": "Kelsey Hightower's tweets where he said treating containers like a black box will eventually leave you in the dark",
    "start": "618880",
    "end": "624430"
  },
  {
    "text": "and I hacked it to say treating container runtimes like a black box will",
    "start": "624430",
    "end": "629440"
  },
  {
    "text": "eventually leave you in the dark I haven't officially gotten his approval that the the sense of the tweet still",
    "start": "629440",
    "end": "635050"
  },
  {
    "text": "stands but what what I mean by this is that even as an application developer or",
    "start": "635050",
    "end": "641020"
  },
  {
    "text": "someone at a higher layer of the stack knowing what container runtime is is their and what its capabilities are and",
    "start": "641020",
    "end": "647650"
  },
  {
    "text": "how to interact with it can be valuable and definitely to your operational team",
    "start": "647650",
    "end": "653530"
  },
  {
    "text": "there may be benefits to container D or cry or docker depending on other needs",
    "start": "653530",
    "end": "659140"
  },
  {
    "text": "of your environment so for you know just just to hypothetically you know talk",
    "start": "659140",
    "end": "666850"
  },
  {
    "text": "about what would you need from a container runtime you probably are going to care about performance you know",
    "start": "666850",
    "end": "671920"
  },
  {
    "text": "you've heard in the keynotes all the interesting workloads that people are placing on top of kubernetes everything",
    "start": "671920",
    "end": "678370"
  },
  {
    "text": "from a I - you know genomic sequencing they were talking about this morning",
    "start": "678370",
    "end": "683400"
  },
  {
    "text": "maybe you have security concerns maybe you're running untrusted workloads and",
    "start": "683400",
    "end": "688570"
  },
  {
    "text": "so the hypervisor isolation of Katta is very interesting to you or maybe you're",
    "start": "688570",
    "end": "695170"
  },
  {
    "text": "interested in G visor or other interesting isolation capabilities so",
    "start": "695170",
    "end": "702250"
  },
  {
    "text": "maybe the runtime you choose you want to make sure it has those those those options maybe you care about multi",
    "start": "702250",
    "end": "709450"
  },
  {
    "text": "architecture support so at IBM we have power systems we have Z systems and so",
    "start": "709450",
    "end": "715150"
  },
  {
    "text": "making sure that my container runtime operates in those environments maybe you're in the IOT space and you have arm",
    "start": "715150",
    "end": "721780"
  },
  {
    "text": "devices or other cpu enablement that you want to make sure your container runtime",
    "start": "721780",
    "end": "727510"
  },
  {
    "text": "has those capabilities so again those are things you might think about if you were deciding what runtime do I want my",
    "start": "727510",
    "end": "734710"
  },
  {
    "text": "kubernetes cluster to use so let me talk a little bit more about",
    "start": "734710",
    "end": "740180"
  },
  {
    "text": "container D I don't have enough time in the in the session to really dig deep",
    "start": "740180",
    "end": "746660"
  },
  {
    "text": "but as I mentioned at the beginning and some people have showed up so I'll mention it again later this afternoon at",
    "start": "746660",
    "end": "753290"
  },
  {
    "text": "3:05 there's a deep dive on container D on its architecture that will go into",
    "start": "753290",
    "end": "759860"
  },
  {
    "text": "more depth than I can but effectively over the last few years",
    "start": "759860",
    "end": "765050"
  },
  {
    "text": "docker has contributed code that used to be part of the monolithic docker codebase to various open source",
    "start": "765050",
    "end": "771709"
  },
  {
    "text": "foundations so you have run C which is that basic unit of simply executing",
    "start": "771709",
    "end": "777820"
  },
  {
    "text": "containers mostly thinking in a Linux kernel interface environment so how are",
    "start": "777820",
    "end": "784339"
  },
  {
    "text": "the namespaces and C groups and everything's set up that's what run C is doing for you",
    "start": "784339",
    "end": "789459"
  },
  {
    "text": "container D has been donated to the cloud native competing foundation so",
    "start": "789459",
    "end": "794779"
  },
  {
    "text": "again you've seen container D as a component of the many projects within the CNC F it sits on top of run C and",
    "start": "794779",
    "end": "802760"
  },
  {
    "text": "basically manages those run C processes for you",
    "start": "802760",
    "end": "808250"
  },
  {
    "text": "and then in our recent releases under the CNC F has image management so we can",
    "start": "808250",
    "end": "813800"
  },
  {
    "text": "push and pull from registries it fully supports OCI it has a great client API",
    "start": "813800",
    "end": "819529"
  },
  {
    "text": "so we're finding many users who love container D as a way to be embedded into",
    "start": "819529",
    "end": "825519"
  },
  {
    "text": "other runtimes or other software systems and so alabama's pouch container is also",
    "start": "825519",
    "end": "832579"
  },
  {
    "text": "a user of container D and so on top of that you can obviously build other other",
    "start": "832579",
    "end": "839329"
  },
  {
    "text": "software stacks so the docker engine docker seee docker for mac docker",
    "start": "839329",
    "end": "844370"
  },
  {
    "text": "enterprise they all use container D and run c kubernetes via the CR I can use",
    "start": "844370",
    "end": "850730"
  },
  {
    "text": "the same stack docker swarm and their orchestration can use the same stack and",
    "start": "850730",
    "end": "856010"
  },
  {
    "text": "so we see container D is really that core container runtime for the cloud",
    "start": "856010",
    "end": "861820"
  },
  {
    "text": "again some of the benefits these are just highlights not really a deep dive but really we intended for container D",
    "start": "861820",
    "end": "869600"
  },
  {
    "text": "to have broad you in the industry so projects like Linux kid and kubernetes Cloud Foundry some of",
    "start": "869600",
    "end": "878010"
  },
  {
    "text": "the other use cases I mentioned we expect the container D because of a good client API stability performance can be",
    "start": "878010",
    "end": "885420"
  },
  {
    "text": "used by many many projects as a great container runtime we've also spent a lot",
    "start": "885420",
    "end": "891210"
  },
  {
    "text": "of time doing stress testing making sure that container D is stable that we can",
    "start": "891210",
    "end": "896850"
  },
  {
    "text": "meet its performance criteria and so Michael Crosby one of the key",
    "start": "896850",
    "end": "902640"
  },
  {
    "text": "contributors and maintainer zhan container d tweeted earlier this year that we have a 24/7 system that's just",
    "start": "902640",
    "end": "910680"
  },
  {
    "text": "constantly starting stopping exacting all the lifecycle operations into",
    "start": "910680",
    "end": "915750"
  },
  {
    "text": "container D and running millions of containers every week just to continue testing and making sure that every",
    "start": "915750",
    "end": "922770"
  },
  {
    "text": "change that gets checked in we haven't impacted the stability or performance of container D and again",
    "start": "922770",
    "end": "930320"
  },
  {
    "text": "another aspect of what we've done with our commitment to stability is also a",
    "start": "930320",
    "end": "936180"
  },
  {
    "text": "stable API and and stable releases with",
    "start": "936180",
    "end": "941360"
  },
  {
    "text": "very specific support guarantees and so we do bug-fix releases with you back",
    "start": "941360",
    "end": "947160"
  },
  {
    "text": "ports and bug fixes into old releases that's okay and that's just part of what",
    "start": "947160",
    "end": "952620"
  },
  {
    "text": "we hope is a viable platform on which other people can build their products and software",
    "start": "952620",
    "end": "959750"
  },
  {
    "text": "this was announced yesterday morning Liz Rice mentioned that between Copenhagen",
    "start": "960279",
    "end": "966220"
  },
  {
    "text": "and this event that container D integration into kubernetes was",
    "start": "966220",
    "end": "971529"
  },
  {
    "text": "announced as GA in May that was actually around the timeframe of coop con in",
    "start": "971529",
    "end": "979180"
  },
  {
    "text": "Copenhagen but again just a validation that the implementation of the CRI and",
    "start": "979180",
    "end": "986459"
  },
  {
    "text": "integration into container D is viable for use cases production use cases in",
    "start": "986459",
    "end": "995199"
  },
  {
    "text": "your cloud or in your software platform so based on that you know who is using",
    "start": "995199",
    "end": "1001290"
  },
  {
    "text": "container D today obviously one of the interesting places you can go hear a lot",
    "start": "1001290",
    "end": "1008220"
  },
  {
    "text": "more about container D being used as Kelsey Hightower's kubernetes the hard way uses in all the examples container D",
    "start": "1008220",
    "end": "1015870"
  },
  {
    "text": "is the runtime we have two public clouds that are currently using container D in",
    "start": "1015870",
    "end": "1022319"
  },
  {
    "text": "sort of early preview IBM clouds kubernetes service has container D if",
    "start": "1022319",
    "end": "1027870"
  },
  {
    "text": "you select kubernetes 1.11 or 1.12 as your cluster you automatically get",
    "start": "1027870",
    "end": "1035280"
  },
  {
    "text": "container D as the runtime and then down and below that that's the google",
    "start": "1035280",
    "end": "1040350"
  },
  {
    "text": "kubernetes engine logo they have in beta today you can select container D as the",
    "start": "1040350",
    "end": "1045808"
  },
  {
    "text": "runtime in a gke cluster again every version of docker for the last few years",
    "start": "1045809",
    "end": "1052140"
  },
  {
    "text": "uses container D so every time you install docker you're also getting container D Linux kit which is a project",
    "start": "1052140",
    "end": "1060390"
  },
  {
    "text": "that builds Linux distributions purpose optimized Linux also uses container D",
    "start": "1060390",
    "end": "1067830"
  },
  {
    "text": "our Rancher has a project using container D cata has been a big proponent of container D and our new v2",
    "start": "1067830",
    "end": "1074970"
  },
  {
    "text": "shim that maybe you can hear more about if you go to the deep dive today I",
    "start": "1074970",
    "end": "1080390"
  },
  {
    "text": "mentioned alibaba's pouch container and there's a couple I Oh T projects ballina",
    "start": "1080390",
    "end": "1085650"
  },
  {
    "text": "and Elliott that are using container D and the Cloud Foundry container runtime was using run C and there",
    "start": "1085650",
    "end": "1092940"
  },
  {
    "text": "now switching to container D as well so again the purpose of making sure the",
    "start": "1092940",
    "end": "1098340"
  },
  {
    "text": "container D was viable for many use cases we feel like we're seeing that come to fruition with a lot of users a",
    "start": "1098340",
    "end": "1104730"
  },
  {
    "text": "lot of people building on top of container D and finding it valuable for",
    "start": "1104730",
    "end": "1110670"
  },
  {
    "text": "their model of needing a container run time",
    "start": "1110670",
    "end": "1115910"
  },
  {
    "text": "so effectively the rest of the time so",
    "start": "1115970",
    "end": "1121970"
  },
  {
    "text": "we have just about 15 minutes I'd like to demonstrate kind of these layers and",
    "start": "1121970",
    "end": "1127040"
  },
  {
    "text": "before I do that I thought it'd be useful yeah I'm gonna show you that my cluster setup in a minute but this",
    "start": "1127040",
    "end": "1134090"
  },
  {
    "text": "picture may help to describe what I'm gonna try and show especially if it doesn't go well at least you'll step",
    "start": "1134090",
    "end": "1140900"
  },
  {
    "text": "away with an understanding of what I was trying to show so really now that we're",
    "start": "1140900",
    "end": "1146540"
  },
  {
    "text": "talking about kubernetes having the CRI and a container runtime you can think about talking about the workloads on",
    "start": "1146540",
    "end": "1153350"
  },
  {
    "text": "your node from three aspects one is the cube cuddle commands which is you",
    "start": "1153350",
    "end": "1159290"
  },
  {
    "text": "talking to the kubernetes api so i'm going to use the client the standard client something about a command like",
    "start": "1159290",
    "end": "1166430"
  },
  {
    "text": "cube cuddle get pods and so that asks the kubernetes api list my pods if we go",
    "start": "1166430",
    "end": "1173420"
  },
  {
    "text": "down to the CRI layer there's a nice tool cry cuddle that interacts with the CRI API directly and so I can do a very",
    "start": "1173420",
    "end": "1180920"
  },
  {
    "text": "similar thing with cry cuddle if I'm sitting on the host node where the couplet is running I can use cry cuddle",
    "start": "1180920",
    "end": "1187940"
  },
  {
    "text": "to talk to that CRI API and say hey tell me what pods are running well now if",
    "start": "1187940",
    "end": "1193310"
  },
  {
    "text": "container D is my runtime underneath kubernetes I can now use the CTR tool",
    "start": "1193310",
    "end": "1199850"
  },
  {
    "text": "which is container DS simple client and I can I can say container D hey tell me",
    "start": "1199850",
    "end": "1204980"
  },
  {
    "text": "what containers are running because obviously that should match to the pods and the containers running inside there",
    "start": "1204980",
    "end": "1211880"
  },
  {
    "text": "so I'm gonna do a few examples using these three commands because of time I'm",
    "start": "1211880",
    "end": "1217760"
  },
  {
    "text": "not going to show you how the shims actually drive run see because run C even has a client where we could",
    "start": "1217760",
    "end": "1224300"
  },
  {
    "text": "potentially LS and look at run C processes on the hosts but for the",
    "start": "1224300",
    "end": "1230930"
  },
  {
    "text": "interest of time let's see what we can accomplish here so again I did say I",
    "start": "1230930",
    "end": "1240050"
  },
  {
    "text": "would show you my cluster so I have a kubernetes 1.11",
    "start": "1240050",
    "end": "1251890"
  },
  {
    "text": "IVM clouds Dallas 12 region I have three",
    "start": "1252850",
    "end": "1257929"
  },
  {
    "text": "worker nodes the IBM managed kubernetes service is handling the master node I",
    "start": "1257929",
    "end": "1263179"
  },
  {
    "text": "don't have to worry about that but my worker nodes are running kubernetes 1.11",
    "start": "1263179",
    "end": "1268700"
  },
  {
    "text": "dot i've already for the interest of time",
    "start": "1268700",
    "end": "1274040"
  },
  {
    "text": "deployed a few things out there so I have some pods that are already running on this node and if I switch to",
    "start": "1274040",
    "end": "1284020"
  },
  {
    "text": "my secret little meth of getting onto the so now I you can see",
    "start": "1286169",
    "end": "1291609"
  },
  {
    "text": "I'm on w2 which is work or two so if I go back to this other picture you know",
    "start": "1291609",
    "end": "1298929"
  },
  {
    "text": "that should match this the middle entry here a certain public IP that's the",
    "start": "1298929",
    "end": "1305019"
  },
  {
    "text": "actual note on sshd into and so",
    "start": "1305019",
    "end": "1310889"
  },
  {
    "text": "obviously if I'm right about this cluster running",
    "start": "1310889",
    "end": "1318010"
  },
  {
    "text": "container D I should see that PS looking for a docker process there's nothing on",
    "start": "1318010",
    "end": "1324350"
  },
  {
    "text": "the system running docker obviously if I use the CTR tool",
    "start": "1324350",
    "end": "1332050"
  },
  {
    "text": "and just asked for a version I can see that I'm running container D one dot one",
    "start": "1332050",
    "end": "1337540"
  },
  {
    "text": "dot four which is our latest release on the one dot one line and it actually was",
    "start": "1337540",
    "end": "1342910"
  },
  {
    "text": "able to connect to the server also running one dot one dot four and so you can see this is a worker node within my",
    "start": "1342910",
    "end": "1349450"
  },
  {
    "text": "kubernetes cluster running container D and if I like I said I can talk to the",
    "start": "1349450",
    "end": "1356260"
  },
  {
    "text": "CRI with cry cuddle and I'm sorry that I",
    "start": "1356260",
    "end": "1362830"
  },
  {
    "text": "made the text big so hopefully everyone can read it but that makes the output not quite as pretty but these are",
    "start": "1362830",
    "end": "1368950"
  },
  {
    "text": "obviously the list of of pods that are running there are many pods because",
    "start": "1368950",
    "end": "1373960"
  },
  {
    "text": "there's obviously many namespaces so IBM and cube system and it's I have sto",
    "start": "1373960",
    "end": "1379150"
  },
  {
    "text": "deployed here you know it's a huge list of pods but because in this other window",
    "start": "1379150",
    "end": "1386920"
  },
  {
    "text": "you can see I have this my nginx running and there's four of them and I only have",
    "start": "1386920",
    "end": "1393970"
  },
  {
    "text": "three nodes so I should at least have one pod on this node and so let's let's",
    "start": "1393970",
    "end": "1400630"
  },
  {
    "text": "see if I can find that here if I cry cuddle pods and grep my nginx sure",
    "start": "1400630",
    "end": "1412660"
  },
  {
    "text": "enough it's down here at the bottom I have the TV for 7q pod so if we go back",
    "start": "1412660",
    "end": "1420670"
  },
  {
    "text": "and look at the pods that looks like the very last one here that the my nginx so",
    "start": "1420670",
    "end": "1428080"
  },
  {
    "text": "that pod is running on my worker two node and cry cuddle I've been able to",
    "start": "1428080",
    "end": "1434110"
  },
  {
    "text": "use I've seen from coop cuddle it's told me that these pods exist I've gone to",
    "start": "1434110",
    "end": "1439150"
  },
  {
    "text": "one of my worker nodes and now I'm talking to the CRI socket and I've asked it to tell me the pods I'm sure enough",
    "start": "1439150",
    "end": "1445870"
  },
  {
    "text": "my nginx pod is here well now let's go down to container D and see if I can",
    "start": "1445870",
    "end": "1451570"
  },
  {
    "text": "find you know this pod because at some point that should turn into an actual container and we can see the container",
    "start": "1451570",
    "end": "1458890"
  },
  {
    "text": "running on the system via container D",
    "start": "1458890",
    "end": "1463230"
  },
  {
    "text": "I think I already exported so another thing that maybe you'll learn",
    "start": "1465230",
    "end": "1471890"
  },
  {
    "text": "about if you go to the deep dive actually I don't have it set here so",
    "start": "1471890",
    "end": "1478120"
  },
  {
    "text": "container D supports namespaces which means you can actually use container D",
    "start": "1478120",
    "end": "1484640"
  },
  {
    "text": "by multiple kind of higher layer users including actually if I go to my laptop",
    "start": "1484640",
    "end": "1493430"
  },
  {
    "text": "here you can see that if I talk to the CTR that's so my laptop is running",
    "start": "1493430",
    "end": "1498710"
  },
  {
    "text": "docker 18:09 that just came out last week if I ask the CTR on my on my laptop",
    "start": "1498710",
    "end": "1509510"
  },
  {
    "text": "you know what namespaces do you have you'll see it the you'll see ka desa I oh and Moby so now that docker is using",
    "start": "1509510",
    "end": "1517400"
  },
  {
    "text": "my system container D it's creating containers inside the mobi namespace if",
    "start": "1517400",
    "end": "1522740"
  },
  {
    "text": "I had a Kubla running on my laptop it would use the K dot IO namespace and so",
    "start": "1522740",
    "end": "1528710"
  },
  {
    "text": "if I go back to this worker node and do CTR namespaces LS you can see I only",
    "start": "1528710",
    "end": "1536930"
  },
  {
    "text": "have a que ésta IO I don't have docker running here I don't have other users of container D and so if I don't set a",
    "start": "1536930",
    "end": "1545810"
  },
  {
    "text": "namespace and I ask container D to list containers it gives me nothing I actually have to tell it no I want to",
    "start": "1545810",
    "end": "1552920"
  },
  {
    "text": "look at the decayed sto namespace to save time typing I'm going to export a",
    "start": "1552920",
    "end": "1561310"
  },
  {
    "text": "variable name space equals ka dust io and now",
    "start": "1561310",
    "end": "1572010"
  },
  {
    "text": "when I do CTR CLS I get a huge lung again it's kind of ugly output because",
    "start": "1572010",
    "end": "1577380"
  },
  {
    "text": "of the text size but again these are all the containers that container D knows about because again couplet has talked",
    "start": "1577380",
    "end": "1584370"
  },
  {
    "text": "to the CRI it started pods which started containers and so this is representing",
    "start": "1584370",
    "end": "1589830"
  },
  {
    "text": "that list and so if I if I look for that",
    "start": "1589830",
    "end": "1597860"
  },
  {
    "text": "nginx container again so I'm going to grep for nginx",
    "start": "1597860",
    "end": "1605330"
  },
  {
    "text": "you'll see that here at the bottom I have a long container ID and you can see",
    "start": "1605559",
    "end": "1612169"
  },
  {
    "text": "that the image being used is my little nginx demo and it's using the container",
    "start": "1612169",
    "end": "1617720"
  },
  {
    "text": "DV 1 Linux runtime and so again we've mapped all the way from cube cuddle get",
    "start": "1617720",
    "end": "1625040"
  },
  {
    "text": "pods so we saw that there were a bunch of nginx pods we asked the CRI to list",
    "start": "1625040",
    "end": "1630380"
  },
  {
    "text": "pods we saw that one of those pods is on this worker node and now I've gotten all the way down to a container in container",
    "start": "1630380",
    "end": "1637100"
  },
  {
    "text": "D is actually running the nginx there so the next thing I can do is I can",
    "start": "1637100",
    "end": "1642740"
  },
  {
    "text": "actually I can",
    "start": "1642740",
    "end": "1648670"
  },
  {
    "text": "I can asks actually I want to get that ID let me get that",
    "start": "1648810",
    "end": "1656480"
  },
  {
    "text": "so it starts 3 9 6:05 if I copy this and",
    "start": "1659270",
    "end": "1664760"
  },
  {
    "text": "then task CTR to tell me the tasks that are running which map to actual",
    "start": "1664760",
    "end": "1671690"
  },
  {
    "text": "processes on my system I can find that there's a pid' two six nine seven seven",
    "start": "1671690",
    "end": "1678080"
  },
  {
    "text": "that's actually running and this matches that container which matches that pod and so unless I've got something",
    "start": "1678080",
    "end": "1686000"
  },
  {
    "text": "disastrously wrong if I ask the system to list processes and graph for that",
    "start": "1686000",
    "end": "1694700"
  },
  {
    "text": "pid' it better be an engine X process and sure enough well it's got F CGI",
    "start": "1694700",
    "end": "1700160"
  },
  {
    "text": "running and engine X so this is my actual containers process running engine",
    "start": "1700160",
    "end": "1706940"
  },
  {
    "text": "X so again we've gone all the way from cube kuddle listing pods to cry cuddle",
    "start": "1706940",
    "end": "1713510"
  },
  {
    "text": "again listing what pods are on this specific node to a container to a task to an actual pid' running that workload",
    "start": "1713510",
    "end": "1721240"
  },
  {
    "text": "we have a couple minutes left so one thing that might be interesting is to think about how in this scenario we can",
    "start": "1721240",
    "end": "1728780"
  },
  {
    "text": "start to see how kubernetes and container runtimes interact and so one thing I can do here",
    "start": "1728780",
    "end": "1736210"
  },
  {
    "text": "I'm gonna so basically this engine exits running I can show it in the browser just so you get a sense for what we're",
    "start": "1740820",
    "end": "1749399"
  },
  {
    "text": "doing here if I hit I've got this connected to s T O's ingress all this nginx container is",
    "start": "1749399",
    "end": "1757919"
  },
  {
    "text": "doing is it returns the pod name you know as the HTML response from a request",
    "start": "1757919",
    "end": "1764970"
  },
  {
    "text": "for index.html and so if I keep refreshing I should you know be hitting",
    "start": "1764970",
    "end": "1770370"
  },
  {
    "text": "the various pods and every once in a while you'll see it's actually hitting the pod on this node that I'm logged",
    "start": "1770370",
    "end": "1775649"
  },
  {
    "text": "into the TV for seven queue so that's great so you know kubernetes load",
    "start": "1775649",
    "end": "1783090"
  },
  {
    "text": "balancers Sto that's all doing magic to to route traffic to my actual pods which",
    "start": "1783090",
    "end": "1788190"
  },
  {
    "text": "ends up at my actual containers if I",
    "start": "1788190",
    "end": "1794750"
  },
  {
    "text": "if I set up a little watch that this is just running that same it's using curl",
    "start": "1794760",
    "end": "1800500"
  },
  {
    "text": "to to you know query the pods and every once in a while it'll pop around and and change to",
    "start": "1800500",
    "end": "1807850"
  },
  {
    "text": "various pods one thing we can do is we can actually kill the nginx container on",
    "start": "1807850",
    "end": "1816130"
  },
  {
    "text": "this node now I'm not going to stop the pot I'm just going to kill the container using container D and let me see if I",
    "start": "1816130",
    "end": "1823419"
  },
  {
    "text": "remember how to do all this right actually I need that ID",
    "start": "1823419",
    "end": "1831649"
  },
  {
    "text": "you so remember Derek you remember the signal is a - s",
    "start": "1837440",
    "end": "1845430"
  },
  {
    "text": "let's try this let's have fun I think okay so if that worked I should no",
    "start": "1845430",
    "end": "1852090"
  },
  {
    "text": "longer have",
    "start": "1852090",
    "end": "1854750"
  },
  {
    "text": "I'll still have a container I shouldn't have",
    "start": "1857440",
    "end": "1862990"
  },
  {
    "text": "let me look for nginx again",
    "start": "1866070",
    "end": "1870200"
  },
  {
    "text": "you'll see that it started anew and on on this node here and so what what",
    "start": "1872029",
    "end": "1879379"
  },
  {
    "text": "shouldn't have happened is we should still have a pod named tv4 7q because i",
    "start": "1879379",
    "end": "1885409"
  },
  {
    "text": "didn't actually kill the pot I killed the container and it can recover from that by just restarting the container",
    "start": "1885409",
    "end": "1892789"
  },
  {
    "text": "but now so again we can step back up to CRI so now we could use cry cuddle",
    "start": "1892789",
    "end": "1903460"
  },
  {
    "text": "this is where I haven't memorized all the commands so this will be fun I think it's stop P oh I need the ID",
    "start": "1903670",
    "end": "1913160"
  },
  {
    "text": "don't know so I'm going to get the pods",
    "start": "1913160",
    "end": "1918730"
  },
  {
    "text": "so here's the pod ID I'm going to copy that so cry cuddle stop pod stop Pia's",
    "start": "1923239",
    "end": "1932639"
  },
  {
    "text": "stop pod and cry cuddle remove pod same",
    "start": "1932639",
    "end": "1938940"
  },
  {
    "text": "one if I did it right so you can see that it stopped and removed the sandbox",
    "start": "1938940",
    "end": "1945389"
  },
  {
    "text": "there actually I'd be good at this point",
    "start": "1945389",
    "end": "1951649"
  },
  {
    "text": "to cube cuddle get pods I'm probably not fast enough to actually see the the",
    "start": "1951649",
    "end": "1958830"
  },
  {
    "text": "container I must have done that wrong",
    "start": "1958830",
    "end": "1965639"
  },
  {
    "text": "because I still have a pod Dona name TV 47q",
    "start": "1965639",
    "end": "1971778"
  },
  {
    "text": "you here that or the",
    "start": "1979410",
    "end": "1988220"
  },
  {
    "text": "yeah definitely deleted the pod",
    "start": "1990809",
    "end": "1995220"
  },
  {
    "text": "so it's interesting we should have seen in coop Cod oh we should have seen a",
    "start": "1998400",
    "end": "2004039"
  },
  {
    "text": "failure in coop kado get pods and then a restart I think we're almost at time we",
    "start": "2004039",
    "end": "2012960"
  },
  {
    "text": "only have a couple minutes so I think rather than investigate why I didn't get",
    "start": "2012960",
    "end": "2018390"
  },
  {
    "text": "to show you that properly let's just switch back to the charts for a second and we'll finish up",
    "start": "2018390",
    "end": "2026780"
  },
  {
    "text": "so again there's a grit so if you're gonna use CRI and then CRI run times there's a great users guide for cry",
    "start": "2030429",
    "end": "2037149"
  },
  {
    "text": "cuddle all the things you can do I showed almost nothing of all the possible things you could do with cry",
    "start": "2037149",
    "end": "2042249"
  },
  {
    "text": "cuddle you can even create pods you can have a no CI spec and start and stop pods from cry cuddle there's a great",
    "start": "2042249",
    "end": "2049599"
  },
  {
    "text": "talk from Kubb khan in copenhagen doing some more he had a little more time so you could do interesting things like",
    "start": "2049599",
    "end": "2056079"
  },
  {
    "text": "actually replace the runtime underneath the coolant you could actually switch from docker to container d and back and",
    "start": "2056079",
    "end": "2062378"
  },
  {
    "text": "show that the pods kind of restart and continue running we have lots more information at our github project page",
    "start": "2062379",
    "end": "2069908"
  },
  {
    "text": "and I should be adding in our website because we have a new website container di o that also has a lot of great",
    "start": "2069909",
    "end": "2076059"
  },
  {
    "text": "information so with that I say thank you and say please go see Derek and Mike's",
    "start": "2076059",
    "end": "2081970"
  },
  {
    "text": "deep dive if you're interested in more about container D and the architecture later today and you can find me online",
    "start": "2081970",
    "end": "2088148"
  },
  {
    "text": "or send me an email if you have more questions and I think we're effectively all out of time I'll pack up and be",
    "start": "2088149",
    "end": "2094540"
  },
  {
    "text": "available here if you want to chat but I'll make room for the next speaker so thank you very much",
    "start": "2094540",
    "end": "2099710"
  },
  {
    "text": "[Applause] [Music]",
    "start": "2099710",
    "end": "2105080"
  },
  {
    "text": "you",
    "start": "2105080",
    "end": "2107140"
  }
]