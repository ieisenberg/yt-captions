[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "so",
    "start": "80",
    "end": "990"
  },
  {
    "text": "[Music]",
    "start": "990",
    "end": "2960"
  },
  {
    "text": "right now i'm gonna tell you about",
    "start": "2960",
    "end": "6160"
  },
  {
    "text": "using some ideas from cortex to improve",
    "start": "6160",
    "end": "9440"
  },
  {
    "text": "high availability in the prom scale",
    "start": "9440",
    "end": "13200"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "so",
    "start": "13200",
    "end": "14000"
  },
  {
    "text": "this is a recap prometheus high",
    "start": "14000",
    "end": "17279"
  },
  {
    "text": "availability works by just deploying two",
    "start": "17279",
    "end": "21359"
  },
  {
    "text": "identical prometheus servers scraping",
    "start": "21359",
    "end": "24640"
  },
  {
    "text": "the same endpoints and storing",
    "start": "24640",
    "end": "28640"
  },
  {
    "text": "almost the same data right ben",
    "start": "28640",
    "end": "31039"
  },
  {
    "text": "mentioned that the time stamps might not",
    "start": "31039",
    "end": "33920"
  },
  {
    "text": "quite align but it's close enough it's",
    "start": "33920",
    "end": "36800"
  },
  {
    "text": "it's very close data",
    "start": "36800",
    "end": "39200"
  },
  {
    "text": "but when you think about",
    "start": "39200",
    "end": "41200"
  },
  {
    "text": "a",
    "start": "41200",
    "end": "42320"
  },
  {
    "text": "remote storage solutions people don't",
    "start": "42320",
    "end": "45280"
  },
  {
    "text": "actually want to pay the storage course",
    "start": "45280",
    "end": "48399"
  },
  {
    "text": "of keeping both copies of the data",
    "start": "48399",
    "end": "51280"
  },
  {
    "text": "so what most remote storage systems",
    "start": "51280",
    "end": "55280"
  },
  {
    "text": "support is some ability to de-duplicate",
    "start": "55280",
    "end": "58960"
  },
  {
    "text": "this data in a way right keep only one",
    "start": "58960",
    "end": "61600"
  },
  {
    "text": "copy",
    "start": "61600",
    "end": "63520"
  },
  {
    "text": "of the data for time period so for",
    "start": "63520",
    "end": "66080"
  },
  {
    "text": "example replica one might be sending the",
    "start": "66080",
    "end": "69280"
  },
  {
    "text": "data and keeping the data if a replica",
    "start": "69280",
    "end": "71920"
  },
  {
    "text": "one goes down",
    "start": "71920",
    "end": "73439"
  },
  {
    "text": "then the long term storage",
    "start": "73439",
    "end": "75759"
  },
  {
    "text": "might want to switch over to replica 2",
    "start": "75759",
    "end": "78640"
  },
  {
    "text": "and and the slower that until that goes",
    "start": "78640",
    "end": "80960"
  },
  {
    "text": "down and so forth",
    "start": "80960",
    "end": "83840"
  },
  {
    "text": "um",
    "start": "83840",
    "end": "84720"
  },
  {
    "start": "84000",
    "end": "84000"
  },
  {
    "text": "so uh promiscuous based on sql so",
    "start": "84720",
    "end": "88960"
  },
  {
    "text": "we originally implemented a very naive",
    "start": "88960",
    "end": "91920"
  },
  {
    "text": "solution to this using database logs",
    "start": "91920",
    "end": "94720"
  },
  {
    "text": "right",
    "start": "94720",
    "end": "95600"
  },
  {
    "text": "all of the problem scale instances in",
    "start": "95600",
    "end": "98560"
  },
  {
    "text": "one cluster tried to get the same",
    "start": "98560",
    "end": "101520"
  },
  {
    "text": "database lock whichever",
    "start": "101520",
    "end": "105040"
  },
  {
    "text": "promise scale instance got the database",
    "start": "105040",
    "end": "107759"
  },
  {
    "text": "lock was the writer and the other data",
    "start": "107759",
    "end": "111280"
  },
  {
    "text": "was just dropped if the writer died",
    "start": "111280",
    "end": "114720"
  },
  {
    "text": "it would give up its lock and the other",
    "start": "114720",
    "end": "117920"
  },
  {
    "text": "replicas would get its lock etc etc",
    "start": "117920",
    "end": "122479"
  },
  {
    "text": "there were two problems with the",
    "start": "122479",
    "end": "124320"
  },
  {
    "start": "124000",
    "end": "124000"
  },
  {
    "text": "solution",
    "start": "124320",
    "end": "125600"
  },
  {
    "text": "one problem is that this created a tight",
    "start": "125600",
    "end": "128239"
  },
  {
    "text": "coupling between the prometheus",
    "start": "128239",
    "end": "131360"
  },
  {
    "text": "instances and the problem scale",
    "start": "131360",
    "end": "133360"
  },
  {
    "text": "instances prometheus itself couldn't",
    "start": "133360",
    "end": "135840"
  },
  {
    "text": "take the lock it had to delegate that to",
    "start": "135840",
    "end": "138480"
  },
  {
    "text": "promise scale but now you have to have",
    "start": "138480",
    "end": "141840"
  },
  {
    "text": "this one-to-one coupling between um the",
    "start": "141840",
    "end": "146000"
  },
  {
    "text": "prometheus servers and the prom scale",
    "start": "146000",
    "end": "148480"
  },
  {
    "text": "servers but really what you want in",
    "start": "148480",
    "end": "150879"
  },
  {
    "text": "these type of systems is",
    "start": "150879",
    "end": "153280"
  },
  {
    "text": "one prometheus",
    "start": "153280",
    "end": "155120"
  },
  {
    "text": "a tier a load balancer and then one",
    "start": "155120",
    "end": "158319"
  },
  {
    "text": "promise cat here this was impossible in",
    "start": "158319",
    "end": "161519"
  },
  {
    "text": "this kind of system the other thing is",
    "start": "161519",
    "end": "164800"
  },
  {
    "text": "as with",
    "start": "164800",
    "end": "166560"
  },
  {
    "text": "most database locking systems",
    "start": "166560",
    "end": "169360"
  },
  {
    "text": "you know who has the lock right now you",
    "start": "169360",
    "end": "172879"
  },
  {
    "text": "don't know who had the lock an hour ago",
    "start": "172879",
    "end": "176160"
  },
  {
    "text": "and so if you are getting delayed data",
    "start": "176160",
    "end": "178400"
  },
  {
    "text": "now you can decide whether to keep that",
    "start": "178400",
    "end": "181200"
  },
  {
    "text": "data or not",
    "start": "181200",
    "end": "183760"
  },
  {
    "text": "we solved this",
    "start": "183760",
    "end": "186560"
  },
  {
    "start": "184000",
    "end": "184000"
  },
  {
    "text": "second problem by switching to an",
    "start": "186560",
    "end": "188560"
  },
  {
    "text": "immutable lease approach",
    "start": "188560",
    "end": "191519"
  },
  {
    "text": "where",
    "start": "191519",
    "end": "192400"
  },
  {
    "text": "for each cluster time period only one",
    "start": "192400",
    "end": "195599"
  },
  {
    "text": "replica",
    "start": "195599",
    "end": "196959"
  },
  {
    "text": "took a lease and once that leaves was",
    "start": "196959",
    "end": "199440"
  },
  {
    "text": "taken it was immutable you couldn't",
    "start": "199440",
    "end": "201599"
  },
  {
    "text": "change the leaves at the end of the",
    "start": "201599",
    "end": "204159"
  },
  {
    "text": "lease if that replica was still alive it",
    "start": "204159",
    "end": "207680"
  },
  {
    "text": "could extend the lease right",
    "start": "207680",
    "end": "210400"
  },
  {
    "text": "but if the replica went down then",
    "start": "210400",
    "end": "214720"
  },
  {
    "text": "another replica say replica 2 could take",
    "start": "214720",
    "end": "218080"
  },
  {
    "text": "the lease for a future time period so",
    "start": "218080",
    "end": "220720"
  },
  {
    "text": "you couldn't modify",
    "start": "220720",
    "end": "222400"
  },
  {
    "text": "the current lease but when that lease is",
    "start": "222400",
    "end": "225200"
  },
  {
    "text": "up you could switch over",
    "start": "225200",
    "end": "228400"
  },
  {
    "text": "uh that solved the",
    "start": "228400",
    "end": "230799"
  },
  {
    "text": "second problem uh because now you have a",
    "start": "230799",
    "end": "233920"
  },
  {
    "text": "log of you know who",
    "start": "233920",
    "end": "236480"
  },
  {
    "text": "had the lock an hour ago right",
    "start": "236480",
    "end": "241720"
  },
  {
    "start": "241000",
    "end": "241000"
  },
  {
    "text": "to solve the first problem which was",
    "start": "242480",
    "end": "244640"
  },
  {
    "text": "already",
    "start": "244640",
    "end": "246000"
  },
  {
    "text": "coupling the um",
    "start": "246000",
    "end": "248480"
  },
  {
    "text": "the network topology",
    "start": "248480",
    "end": "251280"
  },
  {
    "text": "uh from uh",
    "start": "251280",
    "end": "253760"
  },
  {
    "text": "knowing who the replica was right so",
    "start": "253760",
    "end": "257519"
  },
  {
    "text": "you wanted a promiscuous know",
    "start": "257519",
    "end": "260959"
  },
  {
    "text": "or",
    "start": "260959",
    "end": "261759"
  },
  {
    "text": "which replica data came from without",
    "start": "261759",
    "end": "264639"
  },
  {
    "text": "having to constrain the network topology",
    "start": "264639",
    "end": "268000"
  },
  {
    "text": "and for this we used a clever idea from",
    "start": "268000",
    "end": "270720"
  },
  {
    "text": "cortex which was just to put in",
    "start": "270720",
    "end": "274000"
  },
  {
    "text": "the replicant information into the data",
    "start": "274000",
    "end": "277040"
  },
  {
    "text": "itself",
    "start": "277040",
    "end": "278160"
  },
  {
    "text": "this is commonly and then cortex is done",
    "start": "278160",
    "end": "280880"
  },
  {
    "text": "with external labels",
    "start": "280880",
    "end": "283440"
  },
  {
    "text": "where",
    "start": "283440",
    "end": "284560"
  },
  {
    "text": "you define external labels on your",
    "start": "284560",
    "end": "288560"
  },
  {
    "text": "prometheus instead of saying",
    "start": "288560",
    "end": "291199"
  },
  {
    "text": "hey i'm sending data from cluster a and",
    "start": "291199",
    "end": "295120"
  },
  {
    "text": "i'm a replica one or i'm a replica too",
    "start": "295120",
    "end": "298400"
  },
  {
    "text": "and now the data can be sent through a",
    "start": "298400",
    "end": "300960"
  },
  {
    "text": "load balancer and once the data is",
    "start": "300960",
    "end": "303600"
  },
  {
    "text": "received you still know",
    "start": "303600",
    "end": "307680"
  },
  {
    "text": "what replica that day they came from",
    "start": "307919",
    "end": "312000"
  },
  {
    "text": "and so this allowed us to",
    "start": "312000",
    "end": "314560"
  },
  {
    "start": "313000",
    "end": "313000"
  },
  {
    "text": "create a new high availability",
    "start": "314560",
    "end": "316960"
  },
  {
    "text": "architecture which is actually what you",
    "start": "316960",
    "end": "318720"
  },
  {
    "text": "would",
    "start": "318720",
    "end": "319680"
  },
  {
    "text": "expect you have your prometheus",
    "start": "319680",
    "end": "322240"
  },
  {
    "text": "instances sending data labeled with the",
    "start": "322240",
    "end": "325120"
  },
  {
    "text": "appropriate external labels to alert",
    "start": "325120",
    "end": "327840"
  },
  {
    "text": "balancer which then sends data to a prom",
    "start": "327840",
    "end": "331360"
  },
  {
    "text": "scale tier which uses a releasing",
    "start": "331360",
    "end": "335039"
  },
  {
    "text": "mechanism at the scrubbed",
    "start": "335039",
    "end": "337840"
  },
  {
    "text": "to save it into our database which is",
    "start": "337840",
    "end": "340720"
  },
  {
    "text": "time scaredy be a database built on top",
    "start": "340720",
    "end": "343520"
  },
  {
    "text": "of postgres",
    "start": "343520",
    "end": "346400"
  },
  {
    "text": "and that's it",
    "start": "346639",
    "end": "350110"
  },
  {
    "text": "[Applause]",
    "start": "350110",
    "end": "353860"
  }
]