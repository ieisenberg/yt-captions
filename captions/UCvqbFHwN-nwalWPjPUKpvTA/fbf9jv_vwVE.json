[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "hello my name is yanil quinn",
    "start": "2639",
    "end": "4640"
  },
  {
    "text": "and i'm going to give this session",
    "start": "4640",
    "end": "6319"
  },
  {
    "text": "alongside francesco omani",
    "start": "6319",
    "end": "8320"
  },
  {
    "text": "we're both engineers at red hat and",
    "start": "8320",
    "end": "10480"
  },
  {
    "text": "today's session is going to be about",
    "start": "10480",
    "end": "12320"
  },
  {
    "text": "how to enable low latency workloads in",
    "start": "12320",
    "end": "14880"
  },
  {
    "text": "kubernetes clusters",
    "start": "14880",
    "end": "16160"
  },
  {
    "text": "so let's start now that kubernetes has",
    "start": "16160",
    "end": "19439"
  },
  {
    "text": "conquered the cloud",
    "start": "19439",
    "end": "20560"
  },
  {
    "text": "it's time for it to move on to other",
    "start": "20560",
    "end": "22240"
  },
  {
    "text": "domains for and foremost conquering",
    "start": "22240",
    "end": "24880"
  },
  {
    "text": "cloud native network functions",
    "start": "24880",
    "end": "26720"
  },
  {
    "text": "the cornerstone of 5g deployments to",
    "start": "26720",
    "end": "29679"
  },
  {
    "text": "make that happen",
    "start": "29679",
    "end": "30800"
  },
  {
    "text": "we need to address an important",
    "start": "30800",
    "end": "32238"
  },
  {
    "text": "limitation ensuring low latency",
    "start": "32239",
    "end": "36718"
  },
  {
    "text": "the workload of running cloud native",
    "start": "37920",
    "end": "39760"
  },
  {
    "text": "network functions such as",
    "start": "39760",
    "end": "41520"
  },
  {
    "text": "workloads designed for telcos stalls",
    "start": "41520",
    "end": "44079"
  },
  {
    "text": "interesting challenges to overcome",
    "start": "44079",
    "end": "46640"
  },
  {
    "text": "it's very demanding requiring fine",
    "start": "46640",
    "end": "48800"
  },
  {
    "text": "tuning of the node behavior to ensure",
    "start": "48800",
    "end": "50719"
  },
  {
    "text": "low latency processing",
    "start": "50719",
    "end": "52160"
  },
  {
    "text": "of network packets where special",
    "start": "52160",
    "end": "54079"
  },
  {
    "text": "hardware and software are needed",
    "start": "54079",
    "end": "56640"
  },
  {
    "text": "kubernetes container platform can be",
    "start": "56640",
    "end": "58800"
  },
  {
    "text": "augmented and tuned to",
    "start": "58800",
    "end": "60640"
  },
  {
    "text": "to become a great platform for some",
    "start": "60640",
    "end": "62879"
  },
  {
    "text": "demanding class of cnf workloads",
    "start": "62879",
    "end": "65119"
  },
  {
    "text": "and this talk will demonstrate how we",
    "start": "65119",
    "end": "68000"
  },
  {
    "text": "will describe the features available",
    "start": "68000",
    "end": "69920"
  },
  {
    "text": "alongside",
    "start": "69920",
    "end": "70560"
  },
  {
    "text": "upstream kubernetes to provide real-time",
    "start": "70560",
    "end": "72640"
  },
  {
    "text": "guarantees",
    "start": "72640",
    "end": "73680"
  },
  {
    "text": "and to handle low latency and high",
    "start": "73680",
    "end": "75439"
  },
  {
    "text": "performance workloads",
    "start": "75439",
    "end": "78720"
  },
  {
    "start": "78000",
    "end": "78000"
  },
  {
    "text": "let's have a look of a feature use case",
    "start": "80479",
    "end": "83200"
  },
  {
    "text": "taken from the telco world",
    "start": "83200",
    "end": "85439"
  },
  {
    "text": "a cluster admin handling a deployment",
    "start": "85439",
    "end": "87600"
  },
  {
    "text": "that should provide low latency",
    "start": "87600",
    "end": "89920"
  },
  {
    "text": "real-time or dpdk purposes will want to",
    "start": "89920",
    "end": "93520"
  },
  {
    "text": "configure it without deep understanding",
    "start": "93520",
    "end": "95439"
  },
  {
    "text": "of all",
    "start": "95439",
    "end": "96000"
  },
  {
    "text": "the interactions of the kernel and",
    "start": "96000",
    "end": "99360"
  },
  {
    "text": "operating system components that are in",
    "start": "99360",
    "end": "101680"
  },
  {
    "text": "the mix",
    "start": "101680",
    "end": "103600"
  },
  {
    "text": "you should be able to do so in an easy",
    "start": "103600",
    "end": "105439"
  },
  {
    "text": "declarative manner that will encompass",
    "start": "105439",
    "end": "108000"
  },
  {
    "text": "all the moving parts to achieve this",
    "start": "108000",
    "end": "110399"
  },
  {
    "text": "goal such as",
    "start": "110399",
    "end": "111360"
  },
  {
    "text": "isolating workloads for interruptions",
    "start": "111360",
    "end": "113600"
  },
  {
    "text": "for gaining better latency results for",
    "start": "113600",
    "end": "115680"
  },
  {
    "text": "his telco company",
    "start": "115680",
    "end": "116880"
  },
  {
    "text": "and on the web scale and edge fronts",
    "start": "116880",
    "end": "121360"
  },
  {
    "text": "so how do we do it and how can we",
    "start": "122560",
    "end": "124880"
  },
  {
    "text": "guarantee performance and low latency",
    "start": "124880",
    "end": "127680"
  },
  {
    "text": "let's have a look",
    "start": "127680",
    "end": "130399"
  },
  {
    "text": "the ecosystem that will provide the way",
    "start": "132239",
    "end": "134080"
  },
  {
    "text": "to achieve this is built from these",
    "start": "134080",
    "end": "135840"
  },
  {
    "text": "existing",
    "start": "135840",
    "end": "136480"
  },
  {
    "text": "and further developed components",
    "start": "136480",
    "end": "139520"
  },
  {
    "text": "we will explore the cubelet settings",
    "start": "139520",
    "end": "142000"
  },
  {
    "text": "topology and cpu manager",
    "start": "142000",
    "end": "144480"
  },
  {
    "text": "the kernel settings on the node using",
    "start": "144480",
    "end": "147280"
  },
  {
    "text": "tunde",
    "start": "147280",
    "end": "148560"
  },
  {
    "text": "and how they interact to deliver the",
    "start": "148560",
    "end": "150239"
  },
  {
    "text": "workload guarantees",
    "start": "150239",
    "end": "152879"
  },
  {
    "text": "kubernetes tunings that can be achieved",
    "start": "152879",
    "end": "155200"
  },
  {
    "text": "harnessing and manipulating kubelet",
    "start": "155200",
    "end": "157120"
  },
  {
    "text": "settings",
    "start": "157120",
    "end": "157920"
  },
  {
    "text": "entangled with cpu and device managers",
    "start": "157920",
    "end": "161200"
  },
  {
    "text": "as well as applied topology structures",
    "start": "161200",
    "end": "165519"
  },
  {
    "text": "and doing that on the side we can be",
    "start": "166000",
    "end": "169040"
  },
  {
    "text": "using",
    "start": "169040",
    "end": "169599"
  },
  {
    "text": "operators and we'll be using operators",
    "start": "169599",
    "end": "171760"
  },
  {
    "text": "to apply machine configurations",
    "start": "171760",
    "end": "173760"
  },
  {
    "text": "to the operating system itself including",
    "start": "173760",
    "end": "176640"
  },
  {
    "text": "installation of real-time kernel and",
    "start": "176640",
    "end": "178560"
  },
  {
    "text": "other configurations",
    "start": "178560",
    "end": "180080"
  },
  {
    "text": "between the kernel and cubelet we will",
    "start": "180080",
    "end": "183200"
  },
  {
    "text": "be setting node level tunings",
    "start": "183200",
    "end": "185200"
  },
  {
    "text": "relayed by tundi this also will be done",
    "start": "185200",
    "end": "187840"
  },
  {
    "text": "by an operator",
    "start": "187840",
    "end": "190080"
  },
  {
    "text": "at the top we have an operator",
    "start": "190080",
    "end": "192560"
  },
  {
    "text": "performance add-on operator we will",
    "start": "192560",
    "end": "194720"
  },
  {
    "text": "see it later on it will orchestrate",
    "start": "194720",
    "end": "197680"
  },
  {
    "text": "everything to achieve",
    "start": "197680",
    "end": "198800"
  },
  {
    "text": "optimized clusters for applications",
    "start": "198800",
    "end": "201040"
  },
  {
    "text": "sensitive to cpu and network latency",
    "start": "201040",
    "end": "205519"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "if you're asking yourself what is an",
    "start": "207440",
    "end": "209040"
  },
  {
    "text": "operator so an operator is a kubernetes",
    "start": "209040",
    "end": "211840"
  },
  {
    "text": "controller specif",
    "start": "211840",
    "end": "213040"
  },
  {
    "text": "specified to operating an application",
    "start": "213040",
    "end": "216239"
  },
  {
    "text": "it's a kubernetes pattern that is",
    "start": "216239",
    "end": "218640"
  },
  {
    "text": "extending the kubernetes control plane",
    "start": "218640",
    "end": "220640"
  },
  {
    "text": "with a custom controller and a",
    "start": "220640",
    "end": "222720"
  },
  {
    "text": "custom resource definition that add",
    "start": "222720",
    "end": "225519"
  },
  {
    "text": "additional operational knowledge of an",
    "start": "225519",
    "end": "227680"
  },
  {
    "text": "application",
    "start": "227680",
    "end": "229680"
  },
  {
    "text": "we will see some of the operators in",
    "start": "229680",
    "end": "231519"
  },
  {
    "text": "actions as i mentioned",
    "start": "231519",
    "end": "232879"
  },
  {
    "text": "combined to tailor a tuning suit for our",
    "start": "232879",
    "end": "237439"
  },
  {
    "text": "cluster",
    "start": "238840",
    "end": "241519"
  },
  {
    "start": "239000",
    "end": "239000"
  },
  {
    "text": "to optimize kubernetes clusters for",
    "start": "241519",
    "end": "243760"
  },
  {
    "text": "applications",
    "start": "243760",
    "end": "244560"
  },
  {
    "text": "sensitive to latency installing a",
    "start": "244560",
    "end": "247599"
  },
  {
    "text": "real-time kernel and configuring the",
    "start": "247599",
    "end": "249280"
  },
  {
    "text": "operating system to run as a real-time",
    "start": "249280",
    "end": "251360"
  },
  {
    "text": "system",
    "start": "251360",
    "end": "251920"
  },
  {
    "text": "is one of the key aspects linux can be",
    "start": "251920",
    "end": "255200"
  },
  {
    "text": "considered as",
    "start": "255200",
    "end": "256160"
  },
  {
    "text": "the best choice for high performance",
    "start": "256160",
    "end": "257919"
  },
  {
    "text": "computing due to the years of linux",
    "start": "257919",
    "end": "260000"
  },
  {
    "text": "kernel optimizations",
    "start": "260000",
    "end": "261840"
  },
  {
    "text": "focused on delivering high average",
    "start": "261840",
    "end": "263680"
  },
  {
    "text": "throughput for a vast number of",
    "start": "263680",
    "end": "265680"
  },
  {
    "text": "different workloads",
    "start": "265680",
    "end": "268000"
  },
  {
    "text": "real-time is not necessarily superior or",
    "start": "268000",
    "end": "270240"
  },
  {
    "text": "better than a standard kernel",
    "start": "270240",
    "end": "272960"
  },
  {
    "text": "instead it meets different business or",
    "start": "272960",
    "end": "275360"
  },
  {
    "text": "system requirements",
    "start": "275360",
    "end": "277120"
  },
  {
    "text": "it is an optimized kernel designed to",
    "start": "277120",
    "end": "279680"
  },
  {
    "text": "maintain low latency",
    "start": "279680",
    "end": "281600"
  },
  {
    "text": "consistent response time and determinism",
    "start": "281600",
    "end": "286560"
  },
  {
    "text": "all resources managed by the linux any",
    "start": "286560",
    "end": "288880"
  },
  {
    "text": "linux kernel",
    "start": "288880",
    "end": "290240"
  },
  {
    "text": "cpu time is a principal resource",
    "start": "290240",
    "end": "293919"
  },
  {
    "text": "tuning a cpu towards better performance",
    "start": "293919",
    "end": "296160"
  },
  {
    "text": "aspects should be according to",
    "start": "296160",
    "end": "297680"
  },
  {
    "text": "scheduling algorithms",
    "start": "297680",
    "end": "299280"
  },
  {
    "text": "that use priorities and real-time",
    "start": "299280",
    "end": "301120"
  },
  {
    "text": "policies to control",
    "start": "301120",
    "end": "302400"
  },
  {
    "text": "execution favoring high priority tasks",
    "start": "302400",
    "end": "305919"
  },
  {
    "text": "while interrupts and preemptions are",
    "start": "305919",
    "end": "307919"
  },
  {
    "text": "enabled for a much wider range",
    "start": "307919",
    "end": "310639"
  },
  {
    "text": "of time than on traditional kernel",
    "start": "310639",
    "end": "315840"
  },
  {
    "text": "let's see how we reach and touch the",
    "start": "318000",
    "end": "320080"
  },
  {
    "text": "nodes in our cluster",
    "start": "320080",
    "end": "321280"
  },
  {
    "text": "to make them real stars using operators",
    "start": "321280",
    "end": "325840"
  },
  {
    "text": "with the user machine config operator",
    "start": "329840",
    "end": "333039"
  },
  {
    "text": "one of the operators we mentioned",
    "start": "333039",
    "end": "335440"
  },
  {
    "text": "earlier on",
    "start": "335440",
    "end": "336240"
  },
  {
    "text": "and will see following the slides",
    "start": "336240",
    "end": "340160"
  },
  {
    "text": "the machine config operator manages the",
    "start": "340560",
    "end": "342800"
  },
  {
    "text": "operating system and keeps the cluster",
    "start": "342800",
    "end": "345039"
  },
  {
    "text": "up to date and configured",
    "start": "345039",
    "end": "346960"
  },
  {
    "text": "using this operator platform",
    "start": "346960",
    "end": "348800"
  },
  {
    "text": "administrators can configure and update",
    "start": "348800",
    "end": "350960"
  },
  {
    "text": "systemd cryo or cubelet",
    "start": "350960",
    "end": "354000"
  },
  {
    "text": "kernel network manager and more on the",
    "start": "354000",
    "end": "356720"
  },
  {
    "text": "nodes",
    "start": "356720",
    "end": "358479"
  },
  {
    "text": "to do so the machine config operator",
    "start": "358479",
    "end": "361039"
  },
  {
    "text": "creates a statically rendered machine",
    "start": "361039",
    "end": "362960"
  },
  {
    "text": "config",
    "start": "362960",
    "end": "363440"
  },
  {
    "text": "file which includes the machine configs",
    "start": "363440",
    "end": "365919"
  },
  {
    "text": "for each node",
    "start": "365919",
    "end": "367280"
  },
  {
    "text": "it then applies that configuration to",
    "start": "367280",
    "end": "369199"
  },
  {
    "text": "each node with the machine config server",
    "start": "369199",
    "end": "371120"
  },
  {
    "text": "and the machine config controller",
    "start": "371120",
    "end": "372720"
  },
  {
    "text": "really relaying this configuration",
    "start": "372720",
    "end": "376400"
  },
  {
    "text": "in the following example we see how a",
    "start": "376400",
    "end": "379440"
  },
  {
    "text": "machine configuration can set",
    "start": "379440",
    "end": "381120"
  },
  {
    "text": "a kernel type to real time on a specific",
    "start": "381120",
    "end": "384240"
  },
  {
    "text": "node in declarative way",
    "start": "384240",
    "end": "386080"
  },
  {
    "text": "so we have this configuration called of",
    "start": "386080",
    "end": "389120"
  },
  {
    "text": "kind machine config",
    "start": "389120",
    "end": "390639"
  },
  {
    "text": "we set real time kernel as an argument",
    "start": "390639",
    "end": "393919"
  },
  {
    "text": "and this will apply using the operator",
    "start": "393919",
    "end": "396800"
  },
  {
    "text": "on the nodes let's see it in a micro",
    "start": "396800",
    "end": "399120"
  },
  {
    "text": "demo now",
    "start": "399120",
    "end": "401680"
  },
  {
    "text": "before the micro demo we'll see another",
    "start": "405120",
    "end": "407039"
  },
  {
    "text": "example here",
    "start": "407039",
    "end": "408720"
  },
  {
    "text": "of a machine config capabilities which",
    "start": "408720",
    "end": "411199"
  },
  {
    "text": "sets",
    "start": "411199",
    "end": "411759"
  },
  {
    "text": "kublet's configuration such as cpu",
    "start": "411759",
    "end": "414720"
  },
  {
    "text": "memory and topology manager policies on",
    "start": "414720",
    "end": "417280"
  },
  {
    "text": "the node",
    "start": "417280",
    "end": "418639"
  },
  {
    "text": "the configuration goes through the",
    "start": "418639",
    "end": "420880"
  },
  {
    "text": "operator and finally lands on cubelet",
    "start": "420880",
    "end": "423120"
  },
  {
    "text": "conf",
    "start": "423120",
    "end": "423599"
  },
  {
    "text": "files for matching nodes",
    "start": "423599",
    "end": "427120"
  },
  {
    "text": "and now we'll get to the demo so we'll",
    "start": "427199",
    "end": "429840"
  },
  {
    "text": "see how we apply real-time qnl and",
    "start": "429840",
    "end": "431919"
  },
  {
    "text": "cubelet arguments on nodes using the",
    "start": "431919",
    "end": "434840"
  },
  {
    "text": "operator",
    "start": "434840",
    "end": "437840"
  },
  {
    "text": "first we'll see how we change the kernel",
    "start": "441199",
    "end": "443919"
  },
  {
    "text": "nodes",
    "start": "443919",
    "end": "444720"
  },
  {
    "text": "to real-time kernel",
    "start": "444720",
    "end": "447759"
  },
  {
    "text": "so here we label the node with a",
    "start": "447759",
    "end": "451759"
  },
  {
    "text": "we have an alti worker label",
    "start": "451759",
    "end": "456000"
  },
  {
    "text": "we create the machine config as we saw",
    "start": "457199",
    "end": "459120"
  },
  {
    "text": "earlier on to set",
    "start": "459120",
    "end": "460639"
  },
  {
    "text": "the node as real-time kernel",
    "start": "460639",
    "end": "465840"
  },
  {
    "text": "we create a machine config pull a poll",
    "start": "466879",
    "end": "468800"
  },
  {
    "text": "where the machine configurations we",
    "start": "468800",
    "end": "470560"
  },
  {
    "text": "create",
    "start": "470560",
    "end": "471199"
  },
  {
    "text": "will apply to so if we apply the machine",
    "start": "471199",
    "end": "473840"
  },
  {
    "text": "the pool",
    "start": "473840",
    "end": "474479"
  },
  {
    "text": "all the machines configs associated to",
    "start": "474479",
    "end": "476479"
  },
  {
    "text": "it will be applied on the nodes",
    "start": "476479",
    "end": "478319"
  },
  {
    "text": "according to the labels the enables the",
    "start": "478319",
    "end": "480720"
  },
  {
    "text": "label we used earlier on was the walk lt",
    "start": "480720",
    "end": "485039"
  },
  {
    "text": "we get the nodes we see the label",
    "start": "488400",
    "end": "491759"
  },
  {
    "start": "491000",
    "end": "491000"
  },
  {
    "text": "and now digging into the node we can see",
    "start": "491759",
    "end": "495039"
  },
  {
    "text": "that",
    "start": "495039",
    "end": "495599"
  },
  {
    "text": "the linux has changed to real time",
    "start": "495599",
    "end": "499360"
  },
  {
    "text": "that's one example i'm using here oc but",
    "start": "499360",
    "end": "502319"
  },
  {
    "text": "you can consider it as a cli",
    "start": "502319",
    "end": "504400"
  },
  {
    "text": "very similar to cube ctl with additional",
    "start": "504400",
    "end": "506720"
  },
  {
    "text": "capabilities",
    "start": "506720",
    "end": "509520"
  },
  {
    "text": "next example we will see how we change",
    "start": "510560",
    "end": "512880"
  },
  {
    "text": "cubelet configuration on",
    "start": "512880",
    "end": "514800"
  },
  {
    "text": "desired nodes so we click create this",
    "start": "514800",
    "end": "518560"
  },
  {
    "text": "machine config and fit machine",
    "start": "518560",
    "end": "520479"
  },
  {
    "text": "configuration with cubelet config",
    "start": "520479",
    "end": "522479"
  },
  {
    "text": "settings",
    "start": "522479",
    "end": "523120"
  },
  {
    "text": "then that will sync into cubelet conf",
    "start": "523120",
    "end": "526480"
  },
  {
    "text": "files on the node so we have here cpu",
    "start": "526480",
    "end": "528640"
  },
  {
    "text": "system reserved",
    "start": "528640",
    "end": "529839"
  },
  {
    "text": "values and cube results for example and",
    "start": "529839",
    "end": "532399"
  },
  {
    "text": "also",
    "start": "532399",
    "end": "533279"
  },
  {
    "text": "manager policy and reconcile period",
    "start": "533279",
    "end": "537360"
  },
  {
    "text": "we create the configuration",
    "start": "537839",
    "end": "541200"
  },
  {
    "text": "the pool already existed so changes has",
    "start": "541680",
    "end": "543680"
  },
  {
    "text": "applied and then we go",
    "start": "543680",
    "end": "545440"
  },
  {
    "text": "into the specific node we labeled and",
    "start": "545440",
    "end": "548640"
  },
  {
    "text": "here we can see",
    "start": "548640",
    "end": "551279"
  },
  {
    "text": "go into the cubeletcon file that values",
    "start": "551279",
    "end": "554640"
  },
  {
    "text": "has actually changed according to to the",
    "start": "554640",
    "end": "557760"
  },
  {
    "text": "configuration we",
    "start": "557760",
    "end": "559279"
  },
  {
    "text": "we added",
    "start": "559279",
    "end": "563839"
  },
  {
    "text": "so after seeing how we use machine",
    "start": "572800",
    "end": "575600"
  },
  {
    "text": "configuration let's talk about",
    "start": "575600",
    "end": "577279"
  },
  {
    "text": "tunity tuned is an open source system",
    "start": "577279",
    "end": "580800"
  },
  {
    "text": "tuning service for linux it monitors",
    "start": "580800",
    "end": "584160"
  },
  {
    "text": "connect connected devices using the udev",
    "start": "584160",
    "end": "586720"
  },
  {
    "text": "device manager",
    "start": "586720",
    "end": "588560"
  },
  {
    "text": "tune system settings according to the to",
    "start": "588560",
    "end": "591040"
  },
  {
    "text": "a selected profile",
    "start": "591040",
    "end": "592800"
  },
  {
    "text": "it supports various types of",
    "start": "592800",
    "end": "594480"
  },
  {
    "text": "configuration like syscatal",
    "start": "594480",
    "end": "596320"
  },
  {
    "text": "csfs or kernel boot command line",
    "start": "596320",
    "end": "598480"
  },
  {
    "text": "parameters which are integrated",
    "start": "598480",
    "end": "600160"
  },
  {
    "text": "in a plug-in architecture many of the",
    "start": "600160",
    "end": "604399"
  },
  {
    "text": "plugins are supported by",
    "start": "604399",
    "end": "605839"
  },
  {
    "text": "another operator node tuning or portal",
    "start": "605839",
    "end": "608079"
  },
  {
    "text": "and include",
    "start": "608079",
    "end": "609360"
  },
  {
    "text": "the plugins we see below cisco cpu",
    "start": "609360",
    "end": "611920"
  },
  {
    "text": "bootloader for example",
    "start": "611920",
    "end": "614959"
  },
  {
    "text": "tund also supports hot plugin of devices",
    "start": "614959",
    "end": "618480"
  },
  {
    "text": "and stores and also stores all of all",
    "start": "618480",
    "end": "621120"
  },
  {
    "text": "its configurations cleanly in one place",
    "start": "621120",
    "end": "625200"
  },
  {
    "text": "tune the profiles that that manifests",
    "start": "625760",
    "end": "628800"
  },
  {
    "text": "the required tunings we desire can be",
    "start": "628800",
    "end": "631440"
  },
  {
    "text": "defined",
    "start": "631440",
    "end": "632399"
  },
  {
    "text": "hierarchically as we can see in the",
    "start": "632399",
    "end": "634480"
  },
  {
    "text": "diagram which reduces duplication",
    "start": "634480",
    "end": "637360"
  },
  {
    "text": "and simplifies maintenance tundi also",
    "start": "637360",
    "end": "640240"
  },
  {
    "text": "supports full wall back where the system",
    "start": "640240",
    "end": "642480"
  },
  {
    "text": "can be easily returned to the state",
    "start": "642480",
    "end": "644160"
  },
  {
    "text": "before",
    "start": "644160",
    "end": "644880"
  },
  {
    "text": "the profile was applied and it also",
    "start": "644880",
    "end": "647440"
  },
  {
    "text": "includes a number of predefined profiles",
    "start": "647440",
    "end": "649519"
  },
  {
    "text": "for",
    "start": "649519",
    "end": "650079"
  },
  {
    "text": "common use cases for example presets for",
    "start": "650079",
    "end": "652720"
  },
  {
    "text": "high throughput",
    "start": "652720",
    "end": "653680"
  },
  {
    "text": "low latency or power saving are",
    "start": "653680",
    "end": "656399"
  },
  {
    "text": "distributed",
    "start": "656399",
    "end": "658480"
  },
  {
    "text": "ultimately we will want to ship a",
    "start": "658480",
    "end": "660399"
  },
  {
    "text": "profile that best suits",
    "start": "660399",
    "end": "662000"
  },
  {
    "text": "the tuning requirements we have the",
    "start": "662000",
    "end": "664560"
  },
  {
    "text": "profile can be composed from one or more",
    "start": "664560",
    "end": "666800"
  },
  {
    "text": "presets",
    "start": "666800",
    "end": "667519"
  },
  {
    "text": "to have our desired settings but more",
    "start": "667519",
    "end": "670480"
  },
  {
    "text": "parts are needed to compile",
    "start": "670480",
    "end": "672320"
  },
  {
    "text": "to complete the picture as we will see",
    "start": "672320",
    "end": "674240"
  },
  {
    "text": "soon",
    "start": "674240",
    "end": "676480"
  },
  {
    "start": "678000",
    "end": "678000"
  },
  {
    "text": "here we meet yet another operator after",
    "start": "678959",
    "end": "681519"
  },
  {
    "text": "the machine config operator and no",
    "start": "681519",
    "end": "683200"
  },
  {
    "text": "tuning operator",
    "start": "683200",
    "end": "684640"
  },
  {
    "text": "it is designed for node tunings that",
    "start": "684640",
    "end": "686560"
  },
  {
    "text": "provide us a centralized way to",
    "start": "686560",
    "end": "688560"
  },
  {
    "text": "customize",
    "start": "688560",
    "end": "689360"
  },
  {
    "text": "node level tuning for cluster",
    "start": "689360",
    "end": "691279"
  },
  {
    "text": "administrators",
    "start": "691279",
    "end": "692640"
  },
  {
    "text": "abstract os version level dependent",
    "start": "692640",
    "end": "694800"
  },
  {
    "text": "tunings details away",
    "start": "694800",
    "end": "696640"
  },
  {
    "text": "enable modularity and tuned profile",
    "start": "696640",
    "end": "699680"
  },
  {
    "text": "inheritance",
    "start": "699680",
    "end": "701120"
  },
  {
    "text": "provides same defaults for control plane",
    "start": "701120",
    "end": "703519"
  },
  {
    "text": "and worker nodes",
    "start": "703519",
    "end": "704720"
  },
  {
    "text": "and also provide dynamic tuning with",
    "start": "704720",
    "end": "706800"
  },
  {
    "text": "wallback without the need",
    "start": "706800",
    "end": "708399"
  },
  {
    "text": "for node reboots",
    "start": "708399",
    "end": "711440"
  },
  {
    "text": "the node tuning operator manages tundy",
    "start": "713920",
    "end": "716399"
  },
  {
    "text": "as a containerized kubernetes demon set",
    "start": "716399",
    "end": "719279"
  },
  {
    "text": "it ensures custom tuning specification",
    "start": "719279",
    "end": "722959"
  },
  {
    "text": "is passed to all containers tuned to",
    "start": "722959",
    "end": "724800"
  },
  {
    "text": "demons running in the cluster",
    "start": "724800",
    "end": "727200"
  },
  {
    "text": "in the format that the demons understand",
    "start": "727200",
    "end": "729519"
  },
  {
    "text": "the daemons run",
    "start": "729519",
    "end": "730560"
  },
  {
    "text": "on all nodes in the cluster one per node",
    "start": "730560",
    "end": "734240"
  },
  {
    "text": "deployment of custom tunings is done by",
    "start": "734240",
    "end": "736639"
  },
  {
    "text": "creating a tuned dcl which includes",
    "start": "736639",
    "end": "738639"
  },
  {
    "text": "profile data",
    "start": "738639",
    "end": "740000"
  },
  {
    "text": "recommendation logic and machine",
    "start": "740000",
    "end": "742079"
  },
  {
    "text": "configuration labels",
    "start": "742079",
    "end": "743760"
  },
  {
    "text": "and selectors to apply these tunings on",
    "start": "743760",
    "end": "746160"
  },
  {
    "text": "desired nodes",
    "start": "746160",
    "end": "749040"
  },
  {
    "text": "so let's see a short demo of how the",
    "start": "750639",
    "end": "752880"
  },
  {
    "text": "node tuning operator",
    "start": "752880",
    "end": "754880"
  },
  {
    "text": "applies our tune d profiles",
    "start": "754880",
    "end": "759839"
  },
  {
    "text": "first we label the node we want changes",
    "start": "763120",
    "end": "765200"
  },
  {
    "text": "to apply to as we did before",
    "start": "765200",
    "end": "767920"
  },
  {
    "text": "so in our case we see the label here",
    "start": "767920",
    "end": "773040"
  },
  {
    "text": "we create the pool to be associated with",
    "start": "773040",
    "end": "775600"
  },
  {
    "text": "the notes as we mentioned earlier on",
    "start": "775600",
    "end": "779199"
  },
  {
    "text": "and here we see a tuned declarative cl",
    "start": "782079",
    "end": "784880"
  },
  {
    "text": "associated with the no tuning operator",
    "start": "784880",
    "end": "787040"
  },
  {
    "text": "where we set",
    "start": "787040",
    "end": "789440"
  },
  {
    "text": "several variables such as kernel",
    "start": "789440",
    "end": "792000"
  },
  {
    "text": "arguments for isolated calls",
    "start": "792000",
    "end": "794560"
  },
  {
    "text": "but we also see it includes a real time",
    "start": "794560",
    "end": "797600"
  },
  {
    "text": "and openshift nodes apparent profiles",
    "start": "797600",
    "end": "800800"
  },
  {
    "text": "in our example so let's see the parent",
    "start": "800800",
    "end": "802800"
  },
  {
    "text": "profile",
    "start": "802800",
    "end": "805279"
  },
  {
    "text": "the parent profile also sets several",
    "start": "808240",
    "end": "810639"
  },
  {
    "text": "variables",
    "start": "810639",
    "end": "811440"
  },
  {
    "text": "for example under cisco canal hang task",
    "start": "811440",
    "end": "814560"
  },
  {
    "text": "timeout 6 to 600",
    "start": "814560",
    "end": "818160"
  },
  {
    "text": "so we get into the nodes again",
    "start": "819920",
    "end": "823519"
  },
  {
    "text": "and we debug our specific node we can",
    "start": "823920",
    "end": "827120"
  },
  {
    "text": "see the kernel",
    "start": "827120",
    "end": "828000"
  },
  {
    "text": "arguments has changed to isolated cpus",
    "start": "828000",
    "end": "830480"
  },
  {
    "text": "equals one",
    "start": "830480",
    "end": "831680"
  },
  {
    "text": "and also check the cisco value for",
    "start": "831680",
    "end": "834720"
  },
  {
    "text": "kernel hung task timeout sex which is",
    "start": "834720",
    "end": "836959"
  },
  {
    "text": "indeed 600.",
    "start": "836959",
    "end": "842639"
  },
  {
    "text": "let's look at the cubelet and let's see",
    "start": "842639",
    "end": "844399"
  },
  {
    "text": "how we can tune it and then",
    "start": "844399",
    "end": "846320"
  },
  {
    "text": "the work nodes for telco workloads",
    "start": "846320",
    "end": "850000"
  },
  {
    "start": "850000",
    "end": "850000"
  },
  {
    "text": "let's start with the most basic computer",
    "start": "850000",
    "end": "851920"
  },
  {
    "text": "resources the cpu cores",
    "start": "851920",
    "end": "853920"
  },
  {
    "text": "to meet the latency requirements we need",
    "start": "853920",
    "end": "855839"
  },
  {
    "text": "to mitigate cpu contention and context",
    "start": "855839",
    "end": "857760"
  },
  {
    "text": "switches",
    "start": "857760",
    "end": "858639"
  },
  {
    "text": "to do so we can use the cpu manager",
    "start": "858639",
    "end": "860959"
  },
  {
    "text": "which is built in in the cubelet",
    "start": "860959",
    "end": "863120"
  },
  {
    "text": "the cpu manager supports different",
    "start": "863120",
    "end": "864880"
  },
  {
    "text": "policies the static policy allows",
    "start": "864880",
    "end": "867199"
  },
  {
    "text": "exclusive allocation of cpus to the",
    "start": "867199",
    "end": "868959"
  },
  {
    "text": "workload",
    "start": "868959",
    "end": "870000"
  },
  {
    "text": "exclusive locations allow us to avoid",
    "start": "870000",
    "end": "872000"
  },
  {
    "text": "the context switches and reduce",
    "start": "872000",
    "end": "873519"
  },
  {
    "text": "and to reduce cache misses because no",
    "start": "873519",
    "end": "875839"
  },
  {
    "text": "other workload can run on the",
    "start": "875839",
    "end": "877120"
  },
  {
    "text": "exclusively allocated cpus",
    "start": "877120",
    "end": "879279"
  },
  {
    "text": "however system activities can still run",
    "start": "879279",
    "end": "881680"
  },
  {
    "text": "on isolated cpus for full insulation we",
    "start": "881680",
    "end": "883920"
  },
  {
    "text": "need other settings like for example",
    "start": "883920",
    "end": "886800"
  },
  {
    "text": "handling the error processing on",
    "start": "886800",
    "end": "889040"
  },
  {
    "text": "housekeeping cpus housekeeping cpus can",
    "start": "889040",
    "end": "891199"
  },
  {
    "text": "be selected using for example",
    "start": "891199",
    "end": "893600"
  },
  {
    "text": "other cablet options like the reserve",
    "start": "893600",
    "end": "895680"
  },
  {
    "text": "cpus option",
    "start": "895680",
    "end": "896959"
  },
  {
    "text": "command write option",
    "start": "896959",
    "end": "899839"
  },
  {
    "start": "899000",
    "end": "899000"
  },
  {
    "text": "and the tech workloads very often",
    "start": "900399",
    "end": "902480"
  },
  {
    "text": "require access to",
    "start": "902480",
    "end": "903680"
  },
  {
    "text": "survey virtual functions or to hardware",
    "start": "903680",
    "end": "905680"
  },
  {
    "text": "devices in general",
    "start": "905680",
    "end": "907360"
  },
  {
    "text": "kubernetes provides a device plug-in",
    "start": "907360",
    "end": "909279"
  },
  {
    "text": "framework which works together with the",
    "start": "909279",
    "end": "911040"
  },
  {
    "text": "device manager",
    "start": "911040",
    "end": "912000"
  },
  {
    "text": "another component built in in the",
    "start": "912000",
    "end": "913440"
  },
  {
    "text": "cubelet and this",
    "start": "913440",
    "end": "915279"
  },
  {
    "text": "and this system can be used to expose",
    "start": "915279",
    "end": "916959"
  },
  {
    "text": "other resources to the cubelet",
    "start": "916959",
    "end": "920000"
  },
  {
    "text": "hardware supported by the device plugins",
    "start": "920000",
    "end": "922240"
  },
  {
    "text": "includes the aforementioned reserve",
    "start": "922240",
    "end": "923920"
  },
  {
    "text": "virtual functions but also other devices",
    "start": "923920",
    "end": "926480"
  },
  {
    "text": "like",
    "start": "926480",
    "end": "926880"
  },
  {
    "text": "gpus or hardware accelerators in general",
    "start": "926880",
    "end": "929920"
  },
  {
    "text": "the device plugins report topology",
    "start": "929920",
    "end": "931759"
  },
  {
    "text": "information for the order they manage",
    "start": "931759",
    "end": "933600"
  },
  {
    "text": "including the new affinity",
    "start": "933600",
    "end": "937040"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "the topology manager is another",
    "start": "937920",
    "end": "939680"
  },
  {
    "text": "component built in in the cubelet",
    "start": "939680",
    "end": "941680"
  },
  {
    "text": "it orchestrates the other resource",
    "start": "941680",
    "end": "943279"
  },
  {
    "text": "manager like for example cpu and device",
    "start": "943279",
    "end": "945279"
  },
  {
    "text": "manager",
    "start": "945279",
    "end": "946000"
  },
  {
    "text": "it allows to align the resources that a",
    "start": "946000",
    "end": "947839"
  },
  {
    "text": "workload requires",
    "start": "947839",
    "end": "949360"
  },
  {
    "text": "using the topology information provided",
    "start": "949360",
    "end": "951199"
  },
  {
    "text": "by those managers",
    "start": "951199",
    "end": "952480"
  },
  {
    "text": "for example we can do normal cell",
    "start": "952480",
    "end": "954000"
  },
  {
    "text": "alignment",
    "start": "954000",
    "end": "955920"
  },
  {
    "text": "the topology manager is configurable",
    "start": "955920",
    "end": "957759"
  },
  {
    "text": "using policies",
    "start": "957759",
    "end": "959279"
  },
  {
    "text": "with the most restrictive policy enabled",
    "start": "959279",
    "end": "961440"
  },
  {
    "text": "called single numanode",
    "start": "961440",
    "end": "963199"
  },
  {
    "text": "all the resources a workload required",
    "start": "963199",
    "end": "965120"
  },
  {
    "text": "must be allocated with the same new",
    "start": "965120",
    "end": "966800"
  },
  {
    "text": "affinity",
    "start": "966800",
    "end": "967759"
  },
  {
    "text": "if this requirement is not met under",
    "start": "967759",
    "end": "969920"
  },
  {
    "text": "this strict policy",
    "start": "969920",
    "end": "971279"
  },
  {
    "text": "the workload won't be admitted other",
    "start": "971279",
    "end": "974000"
  },
  {
    "text": "policies",
    "start": "974000",
    "end": "974959"
  },
  {
    "text": "allow less strict behavior the topology",
    "start": "974959",
    "end": "978320"
  },
  {
    "text": "manager can do for example best effort",
    "start": "978320",
    "end": "980240"
  },
  {
    "text": "location",
    "start": "980240",
    "end": "980800"
  },
  {
    "text": "if it is not possible to allocate the",
    "start": "980800",
    "end": "982399"
  },
  {
    "text": "required resources with the same new",
    "start": "982399",
    "end": "983920"
  },
  {
    "text": "affinity the workload will still be",
    "start": "983920",
    "end": "985519"
  },
  {
    "text": "admitted",
    "start": "985519",
    "end": "988000"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "let's see a few examples of new aligned",
    "start": "988800",
    "end": "990720"
  },
  {
    "text": "and numa unaligned",
    "start": "990720",
    "end": "992800"
  },
  {
    "text": "resource allocation in order to see how",
    "start": "992800",
    "end": "994480"
  },
  {
    "text": "the topology manager works",
    "start": "994480",
    "end": "997120"
  },
  {
    "text": "in general we should not ex not expect",
    "start": "997120",
    "end": "999920"
  },
  {
    "text": "renumera cell to be symmetric",
    "start": "999920",
    "end": "1001920"
  },
  {
    "text": "or we should not expect the numa cell to",
    "start": "1001920",
    "end": "1005040"
  },
  {
    "text": "all er",
    "start": "1005040",
    "end": "1005759"
  },
  {
    "text": "the new cells to all have cpu cores",
    "start": "1005759",
    "end": "1008560"
  },
  {
    "text": "memory and pci buses",
    "start": "1008560",
    "end": "1010160"
  },
  {
    "text": "because in general numa cells may have",
    "start": "1010160",
    "end": "1012240"
  },
  {
    "text": "different combination of those resources",
    "start": "1012240",
    "end": "1015279"
  },
  {
    "text": "for simplicity's sake however we will",
    "start": "1015279",
    "end": "1017440"
  },
  {
    "text": "consider we will",
    "start": "1017440",
    "end": "1019040"
  },
  {
    "text": "consider a system",
    "start": "1019040",
    "end": "1022320"
  },
  {
    "text": "with two symmetric numa cells each of",
    "start": "1022320",
    "end": "1024640"
  },
  {
    "text": "them will have cpu cores local memory",
    "start": "1024640",
    "end": "1027120"
  },
  {
    "text": "and a pci bus attached to them",
    "start": "1027120",
    "end": "1029280"
  },
  {
    "text": "this is the simplest scenario and we use",
    "start": "1029280",
    "end": "1031600"
  },
  {
    "text": "it for illustration purposes",
    "start": "1031600",
    "end": "1034880"
  },
  {
    "text": "our first example is a numa unaware",
    "start": "1035600",
    "end": "1038079"
  },
  {
    "start": "1036000",
    "end": "1036000"
  },
  {
    "text": "resource allocation",
    "start": "1038079",
    "end": "1039520"
  },
  {
    "text": "the workload is allocated regardless and",
    "start": "1039520",
    "end": "1041678"
  },
  {
    "text": "innova cell alignment for the required",
    "start": "1041679",
    "end": "1043280"
  },
  {
    "text": "resources",
    "start": "1043280",
    "end": "1044558"
  },
  {
    "text": "so those required resources required by",
    "start": "1044559",
    "end": "1047520"
  },
  {
    "text": "the workload may span",
    "start": "1047520",
    "end": "1048880"
  },
  {
    "text": "across different luma cells this",
    "start": "1048880",
    "end": "1052640"
  },
  {
    "text": "still allows the workload to run but the",
    "start": "1052640",
    "end": "1055120"
  },
  {
    "text": "performance is not optimal because",
    "start": "1055120",
    "end": "1057200"
  },
  {
    "text": "for example of the of the traffic",
    "start": "1057200",
    "end": "1059520"
  },
  {
    "text": "required",
    "start": "1059520",
    "end": "1060480"
  },
  {
    "text": "between the pneuma cells for example",
    "start": "1060480",
    "end": "1064240"
  },
  {
    "text": "if our workload gets core number three",
    "start": "1064240",
    "end": "1066640"
  },
  {
    "text": "and the cervical function for numerous",
    "start": "1066640",
    "end": "1068400"
  },
  {
    "text": "zero on the left",
    "start": "1068400",
    "end": "1069440"
  },
  {
    "text": "and core number six in the memory from",
    "start": "1069440",
    "end": "1071520"
  },
  {
    "text": "muscle number one",
    "start": "1071520",
    "end": "1072480"
  },
  {
    "text": "picture on the right this is a legal",
    "start": "1072480",
    "end": "1075679"
  },
  {
    "text": "allocation",
    "start": "1075679",
    "end": "1076559"
  },
  {
    "text": "unaware allocation does not prevent the",
    "start": "1076559",
    "end": "1079440"
  },
  {
    "text": "workload run",
    "start": "1079440",
    "end": "1080720"
  },
  {
    "text": "but if for example core number six",
    "start": "1080720",
    "end": "1084000"
  },
  {
    "text": "on the right needs to access there's a",
    "start": "1084000",
    "end": "1086240"
  },
  {
    "text": "referred virtual function",
    "start": "1086240",
    "end": "1087760"
  },
  {
    "text": "on the normal cell number zero on the",
    "start": "1087760",
    "end": "1090160"
  },
  {
    "text": "left",
    "start": "1090160",
    "end": "1091039"
  },
  {
    "text": "it it must pass across the cross pneuma",
    "start": "1091039",
    "end": "1095039"
  },
  {
    "text": "link and this causes a performance",
    "start": "1095039",
    "end": "1097440"
  },
  {
    "text": "penalty",
    "start": "1097440",
    "end": "1099840"
  },
  {
    "text": "this is our second example as it is a",
    "start": "1099840",
    "end": "1102880"
  },
  {
    "text": "numa aware resource location",
    "start": "1102880",
    "end": "1105120"
  },
  {
    "text": "we can do we can obtain this allocation",
    "start": "1105120",
    "end": "1107360"
  },
  {
    "text": "for example using the single luma node",
    "start": "1107360",
    "end": "1109679"
  },
  {
    "text": "topology manager policy in this case all",
    "start": "1109679",
    "end": "1112160"
  },
  {
    "text": "the resources the workload requires are",
    "start": "1112160",
    "end": "1113760"
  },
  {
    "text": "aligned",
    "start": "1113760",
    "end": "1114480"
  },
  {
    "text": "on the same numa cell in this case the",
    "start": "1114480",
    "end": "1116240"
  },
  {
    "text": "number cell 0 on the left",
    "start": "1116240",
    "end": "1118400"
  },
  {
    "text": "the performance is optimal because no",
    "start": "1118400",
    "end": "1120960"
  },
  {
    "text": "cross number link traffic",
    "start": "1120960",
    "end": "1122400"
  },
  {
    "text": "is graphics is ever required",
    "start": "1122400",
    "end": "1126559"
  },
  {
    "text": "let's see a demo of how the topology",
    "start": "1126880",
    "end": "1128799"
  },
  {
    "text": "manner works on a real kubernetes",
    "start": "1128799",
    "end": "1132720"
  },
  {
    "text": "cluster okay",
    "start": "1134840",
    "end": "1136799"
  },
  {
    "text": "we are now seeing the demo so",
    "start": "1136799",
    "end": "1140160"
  },
  {
    "text": "let's run a workload which requires a",
    "start": "1140160",
    "end": "1143280"
  },
  {
    "text": "line of resources",
    "start": "1143280",
    "end": "1146160"
  },
  {
    "text": "for workload perspective the only",
    "start": "1148080",
    "end": "1149440"
  },
  {
    "text": "requirement is to obtain in the",
    "start": "1149440",
    "end": "1151120"
  },
  {
    "text": "guaranteed class and",
    "start": "1151120",
    "end": "1152480"
  },
  {
    "text": "quality of service class so this is the",
    "start": "1152480",
    "end": "1155120"
  },
  {
    "text": "example workload which we are going to",
    "start": "1155120",
    "end": "1157039"
  },
  {
    "text": "run which is very very similar",
    "start": "1157039",
    "end": "1159360"
  },
  {
    "text": "to the workload we seen previously in",
    "start": "1159360",
    "end": "1161679"
  },
  {
    "text": "the in the example slide so",
    "start": "1161679",
    "end": "1163120"
  },
  {
    "text": "two chords are required and one is",
    "start": "1163120",
    "end": "1164640"
  },
  {
    "text": "through virtual function",
    "start": "1164640",
    "end": "1167039"
  },
  {
    "text": "so from the user perspective with",
    "start": "1167039",
    "end": "1169440"
  },
  {
    "text": "topology manager enabled there is no",
    "start": "1169440",
    "end": "1170960"
  },
  {
    "text": "difference in the flow we just run the",
    "start": "1170960",
    "end": "1172720"
  },
  {
    "text": "pod",
    "start": "1172720",
    "end": "1175039"
  },
  {
    "text": "and it is running okay",
    "start": "1175760",
    "end": "1179600"
  },
  {
    "text": "yeah it is running so which is more",
    "start": "1179600",
    "end": "1182799"
  },
  {
    "text": "more interesting is how the resource",
    "start": "1182799",
    "end": "1184720"
  },
  {
    "text": "looks like from inside the port",
    "start": "1184720",
    "end": "1188400"
  },
  {
    "text": "so to inspect the resources from cdepot",
    "start": "1188400",
    "end": "1191360"
  },
  {
    "text": "we can run",
    "start": "1191360",
    "end": "1192160"
  },
  {
    "text": "a debug workload but first let's see how",
    "start": "1192160",
    "end": "1195760"
  },
  {
    "text": "the",
    "start": "1195760",
    "end": "1196160"
  },
  {
    "text": "definition workload definition actually",
    "start": "1196160",
    "end": "1197679"
  },
  {
    "text": "looks like so again we record the same",
    "start": "1197679",
    "end": "1200000"
  },
  {
    "text": "resources and we just run a different",
    "start": "1200000",
    "end": "1201840"
  },
  {
    "text": "command",
    "start": "1201840",
    "end": "1203360"
  },
  {
    "text": "because we want to run our debug tool so",
    "start": "1203360",
    "end": "1206000"
  },
  {
    "text": "we create the port as usual",
    "start": "1206000",
    "end": "1208640"
  },
  {
    "text": "we wait for it to be running",
    "start": "1208640",
    "end": "1212240"
  },
  {
    "text": "and here it is no not yet here it is",
    "start": "1214799",
    "end": "1218799"
  },
  {
    "text": "so now we can jump inside the board and",
    "start": "1218799",
    "end": "1222080"
  },
  {
    "text": "check the resource location",
    "start": "1222080",
    "end": "1225279"
  },
  {
    "text": "and okay there it is so",
    "start": "1230960",
    "end": "1234080"
  },
  {
    "text": "two cpus core two cpu cores are required",
    "start": "1234080",
    "end": "1237200"
  },
  {
    "text": "and this workload got two of them and",
    "start": "1237200",
    "end": "1239600"
  },
  {
    "text": "both of them",
    "start": "1239600",
    "end": "1240559"
  },
  {
    "text": "are bound to numerator cell one we",
    "start": "1240559",
    "end": "1243440"
  },
  {
    "text": "required one srv virtual function",
    "start": "1243440",
    "end": "1246480"
  },
  {
    "text": "which is as a pcr devices again bounded",
    "start": "1246480",
    "end": "1249919"
  },
  {
    "text": "to numadon one",
    "start": "1249919",
    "end": "1250960"
  },
  {
    "text": "so everything is aligned on normal node",
    "start": "1250960",
    "end": "1252799"
  },
  {
    "text": "one",
    "start": "1252799",
    "end": "1255039"
  },
  {
    "text": "we have seen so far how many moving",
    "start": "1258880",
    "end": "1260559"
  },
  {
    "text": "parts like operator",
    "start": "1260559",
    "end": "1262000"
  },
  {
    "text": "components cubelet settings we need to",
    "start": "1262000",
    "end": "1263760"
  },
  {
    "text": "configure to ensure optimal performance",
    "start": "1263760",
    "end": "1266320"
  },
  {
    "text": "for low latency workloads let's see how",
    "start": "1266320",
    "end": "1268880"
  },
  {
    "text": "we can",
    "start": "1268880",
    "end": "1269760"
  },
  {
    "text": "bridge together everything since this is",
    "start": "1269760",
    "end": "1272799"
  },
  {
    "text": "also a quite complex task",
    "start": "1272799",
    "end": "1274240"
  },
  {
    "text": "let's see how we can it could be",
    "start": "1274240",
    "end": "1275520"
  },
  {
    "text": "automated and to automate it",
    "start": "1275520",
    "end": "1278320"
  },
  {
    "text": "we can use for example another operator",
    "start": "1278320",
    "end": "1280480"
  },
  {
    "text": "which is the performance operator",
    "start": "1280480",
    "end": "1282400"
  },
  {
    "text": "to configure a cluster we can use this",
    "start": "1282400",
    "end": "1284559"
  },
  {
    "text": "operator which simplifies the process",
    "start": "1284559",
    "end": "1286400"
  },
  {
    "text": "exposing a high level profile",
    "start": "1286400",
    "end": "1288480"
  },
  {
    "text": "which allows us to configure the pers",
    "start": "1288480",
    "end": "1290000"
  },
  {
    "text": "formats behavior of the cluster",
    "start": "1290000",
    "end": "1292080"
  },
  {
    "text": "we use another higher level of",
    "start": "1292080",
    "end": "1294320"
  },
  {
    "text": "abstraction",
    "start": "1294320",
    "end": "1295440"
  },
  {
    "text": "the performance operator will",
    "start": "1295440",
    "end": "1296640"
  },
  {
    "text": "orchestrate the configuration of all the",
    "start": "1296640",
    "end": "1298559"
  },
  {
    "text": "components like the operator we see in",
    "start": "1298559",
    "end": "1300480"
  },
  {
    "text": "the cubelet settings",
    "start": "1300480",
    "end": "1301919"
  },
  {
    "text": "and we it will drive them instead of",
    "start": "1301919",
    "end": "1304720"
  },
  {
    "text": "user",
    "start": "1304720",
    "end": "1306400"
  },
  {
    "text": "so the performance operator acts as",
    "start": "1306400",
    "end": "1308720"
  },
  {
    "start": "1308000",
    "end": "1308000"
  },
  {
    "text": "orchestrator for all the",
    "start": "1308720",
    "end": "1310640"
  },
  {
    "text": "cluster components so in this slide we",
    "start": "1310640",
    "end": "1313919"
  },
  {
    "text": "see an example of all",
    "start": "1313919",
    "end": "1315360"
  },
  {
    "text": "of how the performance operator will",
    "start": "1315360",
    "end": "1317200"
  },
  {
    "text": "drive all the other components and",
    "start": "1317200",
    "end": "1319039"
  },
  {
    "text": "for example some settings are still done",
    "start": "1319039",
    "end": "1322320"
  },
  {
    "text": "almost directly by the operator itself",
    "start": "1322320",
    "end": "1324159"
  },
  {
    "text": "like for example for now huge pages",
    "start": "1324159",
    "end": "1326000"
  },
  {
    "text": "configuration",
    "start": "1326000",
    "end": "1327600"
  },
  {
    "text": "this is how the performance profile",
    "start": "1327600",
    "end": "1329679"
  },
  {
    "text": "could look like we for example we can",
    "start": "1329679",
    "end": "1331840"
  },
  {
    "text": "request",
    "start": "1331840",
    "end": "1332320"
  },
  {
    "text": "like huge pages we can select the",
    "start": "1332320",
    "end": "1334640"
  },
  {
    "text": "reserved",
    "start": "1334640",
    "end": "1335679"
  },
  {
    "text": "housekeeping cpus and we can we can add",
    "start": "1335679",
    "end": "1338640"
  },
  {
    "text": "command line",
    "start": "1338640",
    "end": "1339840"
  },
  {
    "text": "kernel command line arguments and we",
    "start": "1339840",
    "end": "1342640"
  },
  {
    "text": "will see now how the performance",
    "start": "1342640",
    "end": "1344320"
  },
  {
    "text": "operator",
    "start": "1344320",
    "end": "1345679"
  },
  {
    "text": "works in practice in a cluster okay",
    "start": "1345679",
    "end": "1349280"
  },
  {
    "text": "we have a cluster with few nodes",
    "start": "1349280",
    "end": "1352640"
  },
  {
    "text": "a few worker nodes and",
    "start": "1352640",
    "end": "1356159"
  },
  {
    "text": "we selected the role to make sure the",
    "start": "1356159",
    "end": "1358880"
  },
  {
    "text": "performance operator can work",
    "start": "1358880",
    "end": "1360640"
  },
  {
    "text": "can change the compression of work or",
    "start": "1360640",
    "end": "1362480"
  },
  {
    "text": "not so we see the performance separator",
    "start": "1362480",
    "end": "1363919"
  },
  {
    "text": "is running and we",
    "start": "1363919",
    "end": "1364960"
  },
  {
    "text": "how the spec look likes so again some",
    "start": "1364960",
    "end": "1367919"
  },
  {
    "text": "camera arguments some youtube edges for",
    "start": "1367919",
    "end": "1369760"
  },
  {
    "text": "illustration purposes",
    "start": "1369760",
    "end": "1371440"
  },
  {
    "text": "the single number node topology manager",
    "start": "1371440",
    "end": "1373679"
  },
  {
    "text": "policy and",
    "start": "1373679",
    "end": "1374799"
  },
  {
    "text": "in this case we also we require the",
    "start": "1374799",
    "end": "1377840"
  },
  {
    "text": "real-time kernel and",
    "start": "1377840",
    "end": "1379120"
  },
  {
    "text": "for that we need a cluster capability to",
    "start": "1379120",
    "end": "1381600"
  },
  {
    "text": "support real-time current",
    "start": "1381600",
    "end": "1383760"
  },
  {
    "text": "so for example we see again the huge",
    "start": "1383760",
    "end": "1386840"
  },
  {
    "text": "pages",
    "start": "1386840",
    "end": "1388080"
  },
  {
    "text": "and now we see how the performance",
    "start": "1388080",
    "end": "1390240"
  },
  {
    "text": "operator works with the all the other",
    "start": "1390240",
    "end": "1392159"
  },
  {
    "text": "cluster components for example we are",
    "start": "1392159",
    "end": "1393760"
  },
  {
    "text": "now checking",
    "start": "1393760",
    "end": "1394799"
  },
  {
    "text": "the tunde the tuning node tuning",
    "start": "1394799",
    "end": "1397200"
  },
  {
    "text": "settings we seen",
    "start": "1397200",
    "end": "1398320"
  },
  {
    "text": "previously in this session okay",
    "start": "1398320",
    "end": "1402000"
  },
  {
    "text": "we are seeing how the 2d profile is",
    "start": "1402000",
    "end": "1405039"
  },
  {
    "text": "translated in practice",
    "start": "1405039",
    "end": "1407360"
  },
  {
    "text": "and now we're checking we are checking",
    "start": "1407360",
    "end": "1409280"
  },
  {
    "text": "we're going to check the huge pages so",
    "start": "1409280",
    "end": "1412880"
  },
  {
    "text": "this is how it should look like",
    "start": "1413120",
    "end": "1416320"
  },
  {
    "text": "but now let's jump on a node and check",
    "start": "1416320",
    "end": "1419919"
  },
  {
    "text": "how the all those settings actually",
    "start": "1419919",
    "end": "1421760"
  },
  {
    "text": "translated",
    "start": "1421760",
    "end": "1423600"
  },
  {
    "text": "to node tunings for example again with",
    "start": "1423600",
    "end": "1426720"
  },
  {
    "text": "proper clustered support we",
    "start": "1426720",
    "end": "1430400"
  },
  {
    "text": "see in the rt kernel button",
    "start": "1430400",
    "end": "1434000"
  },
  {
    "text": "we also seen the kernel arguments we",
    "start": "1434000",
    "end": "1435919"
  },
  {
    "text": "required",
    "start": "1435919",
    "end": "1437120"
  },
  {
    "text": "and the huge pages we requested in just",
    "start": "1437120",
    "end": "1440559"
  },
  {
    "text": "a moment",
    "start": "1440559",
    "end": "1441679"
  },
  {
    "text": "and here they are",
    "start": "1441679",
    "end": "1445840"
  },
  {
    "text": "here it is huge page is configured so",
    "start": "1446799",
    "end": "1449200"
  },
  {
    "text": "this is how",
    "start": "1449200",
    "end": "1450640"
  },
  {
    "text": "so this is how the performance operator",
    "start": "1450640",
    "end": "1452640"
  },
  {
    "text": "drives the configuration of all the",
    "start": "1452640",
    "end": "1454080"
  },
  {
    "text": "cluster",
    "start": "1454080",
    "end": "1456399"
  },
  {
    "text": "if you want to try the performance",
    "start": "1456960",
    "end": "1458480"
  },
  {
    "text": "operator we can check the",
    "start": "1458480",
    "end": "1460240"
  },
  {
    "text": "github page of the project on which",
    "start": "1460240",
    "end": "1462960"
  },
  {
    "text": "you'll find of course the search code",
    "start": "1462960",
    "end": "1464480"
  },
  {
    "text": "everything is open source the",
    "start": "1464480",
    "end": "1465600"
  },
  {
    "text": "documentation the installing",
    "start": "1465600",
    "end": "1466880"
  },
  {
    "text": "instructions",
    "start": "1466880",
    "end": "1468159"
  },
  {
    "text": "we have pre-built container image and",
    "start": "1468159",
    "end": "1469919"
  },
  {
    "text": "very soon we'll have all the operator",
    "start": "1469919",
    "end": "1471760"
  },
  {
    "text": "available on operatorapp.io",
    "start": "1471760",
    "end": "1473679"
  },
  {
    "text": "to ease your consumption so",
    "start": "1473679",
    "end": "1476720"
  },
  {
    "text": "this concludes our session thank you",
    "start": "1476720",
    "end": "1478640"
  },
  {
    "text": "very much for attending",
    "start": "1478640",
    "end": "1483120"
  }
]