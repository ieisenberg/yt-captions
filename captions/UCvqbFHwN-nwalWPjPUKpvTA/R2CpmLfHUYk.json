[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hi everyone welcome to today's session uh today i'm going to to give",
    "start": "1040",
    "end": "6160"
  },
  {
    "text": "you a deep dive on the sixth scheduling my name is i work for ibm and i'm also the current",
    "start": "6160",
    "end": "12639"
  },
  {
    "text": "co-chair of the sikh scheduling so today's agenda contains three parts first i will give you a brief",
    "start": "12639",
    "end": "18720"
  },
  {
    "text": "introduction on schedule and then we'll share with you some best practice tips",
    "start": "18720",
    "end": "25199"
  },
  {
    "text": "and so that you can make the most of your schedule and the third part is i will give you some update on the latest",
    "start": "25199",
    "end": "32238"
  },
  {
    "text": "development progress so firstly what does scheduler exactly do",
    "start": "32239",
    "end": "38160"
  },
  {
    "start": "34000",
    "end": "94000"
  },
  {
    "text": "so in short-term limit terms scheduler just does one thing which is to put the path to the nose",
    "start": "38160",
    "end": "44800"
  },
  {
    "text": "so that means it doesn't evolve into the path creation it also doesn't evolve into the",
    "start": "44800",
    "end": "52239"
  },
  {
    "text": "spin of the underlying containers you just find a node for the pending path",
    "start": "52239",
    "end": "59199"
  },
  {
    "text": "and technical terms so basically scheduler will watch the pending path",
    "start": "59199",
    "end": "64559"
  },
  {
    "text": "which which means the path doesn't have the spectrum name set and then it will",
    "start": "64559",
    "end": "70479"
  },
  {
    "text": "look into the part explicit scheduling constraint like cpu memory requests another affinity et",
    "start": "70479",
    "end": "77040"
  },
  {
    "text": "cetera and also taking some predefined implicit scheduling preference into",
    "start": "77040",
    "end": "83040"
  },
  {
    "text": "consideration and look at the cluster resource usage and make the decision to place the path to the optimal node",
    "start": "83040",
    "end": "91840"
  },
  {
    "text": "so this is what scheduler does and inside scheduler there are",
    "start": "91840",
    "end": "97920"
  },
  {
    "start": "94000",
    "end": "171000"
  },
  {
    "text": "basically several components the first one we call the caching so to make the",
    "start": "97920",
    "end": "102960"
  },
  {
    "text": "most optimal decision schedule has to maintain a cache to",
    "start": "102960",
    "end": "108479"
  },
  {
    "text": "have a sort of choose view of the whole cluster like how many nails are there how many tiles are there and",
    "start": "108479",
    "end": "115439"
  },
  {
    "text": "how many pv pvcs etc etc so scheduler we run internal",
    "start": "115439",
    "end": "120719"
  },
  {
    "text": "fuel scheduling formulas to watch for the api objects so that we can maintain the",
    "start": "120719",
    "end": "126399"
  },
  {
    "text": "internal cache properly and the second part is called queuing so if a pi is coming to the queue we",
    "start": "126399",
    "end": "134400"
  },
  {
    "text": "schedule it with reasonable order so internally we have a",
    "start": "134400",
    "end": "139520"
  },
  {
    "text": "priority queue and if there's no note fit for the path we also have some back",
    "start": "139520",
    "end": "145840"
  },
  {
    "text": "off mechanism to ensure the lower priority part has a",
    "start": "145840",
    "end": "151120"
  },
  {
    "text": "chance to be scheduled and also the path can have a fair chance to be",
    "start": "151120",
    "end": "156640"
  },
  {
    "text": "re-popped up and be retried and also next uh",
    "start": "156640",
    "end": "162400"
  },
  {
    "text": "our main scheduling goal routine and binding routine which is a serious processes to do the",
    "start": "162400",
    "end": "169280"
  },
  {
    "text": "core scheduling flow so the core scheduling flow looks like this so firstly we will pick apart from",
    "start": "169280",
    "end": "177440"
  },
  {
    "start": "171000",
    "end": "308000"
  },
  {
    "text": "the scratching queue and we will go through a series what we call extension",
    "start": "177440",
    "end": "183200"
  },
  {
    "text": "point here so for each extension point we have a series of",
    "start": "183200",
    "end": "188400"
  },
  {
    "text": "plugins and we will go through those plugins either",
    "start": "188400",
    "end": "193599"
  },
  {
    "text": "sequentially or in parallel depends on what phase it is it will first go",
    "start": "193599",
    "end": "199280"
  },
  {
    "text": "through the pre-filter and filter to check the hard requirements for the part",
    "start": "199280",
    "end": "205040"
  },
  {
    "text": "like how much cpu it requires detain deterioration not affinity etc so if",
    "start": "205040",
    "end": "211920"
  },
  {
    "text": "there are some nails fit for the part we will do prioritization on the nails which is to",
    "start": "211920",
    "end": "219200"
  },
  {
    "text": "give the nails candidate score for each according to predefined the score",
    "start": "219200",
    "end": "226400"
  },
  {
    "text": "plugins and then finally the node has the highest score we have chosen as the",
    "start": "226400",
    "end": "231760"
  },
  {
    "text": "final net and then we go to next cycle binding cycle to assign the node to the",
    "start": "231760",
    "end": "238080"
  },
  {
    "text": "path so this is the happy path so what about the negative test what if in the filter",
    "start": "238080",
    "end": "245439"
  },
  {
    "text": "there's no single node can fit for the path we will go to the postal filter",
    "start": "245439",
    "end": "250640"
  },
  {
    "text": "phase right now by default we have a preemption performance which",
    "start": "250640",
    "end": "256239"
  },
  {
    "text": "semantically tries to preempt lower priority paths so that to make",
    "start": "256239",
    "end": "264160"
  },
  {
    "text": "room for the incoming part so and if it succeeds means we can find a node to",
    "start": "264160",
    "end": "272160"
  },
  {
    "text": "serve the path with the cost of preempting some victims",
    "start": "272160",
    "end": "277600"
  },
  {
    "text": "then we will also set the path status that nominated no name to the path and",
    "start": "277600",
    "end": "284960"
  },
  {
    "text": "then put it back to the queue because we cannot immediately",
    "start": "284960",
    "end": "290880"
  },
  {
    "text": "assign the no name to it because the victims are still being deleted so we",
    "start": "290880",
    "end": "296639"
  },
  {
    "text": "should have a grace period for those parts to be deleted so this is basic the",
    "start": "296639",
    "end": "302639"
  },
  {
    "text": "core scheduling flow and this is the basic introduction of how scheduler does",
    "start": "302639",
    "end": "309440"
  },
  {
    "text": "so next i call it make the most of your schedule the first",
    "start": "309440",
    "end": "314720"
  },
  {
    "text": "part i call it policy customization so schedule is a box it has a lot of",
    "start": "314720",
    "end": "322400"
  },
  {
    "start": "317000",
    "end": "371000"
  },
  {
    "text": "nars of a lot of options so if the by this default option doesn't",
    "start": "322400",
    "end": "328080"
  },
  {
    "text": "work for you you can adjust them but one thing to keep in mind is that if you",
    "start": "328080",
    "end": "334880"
  },
  {
    "text": "want to use some latest feature latest options you have to use the",
    "start": "334880",
    "end": "341440"
  },
  {
    "text": "dash dash config and the following with the scheduler config demo and this yamo is the most standardized",
    "start": "341440",
    "end": "348960"
  },
  {
    "text": "and most organized way to use this kind of option",
    "start": "348960",
    "end": "355840"
  },
  {
    "text": "the latest version of the schedule config is v1b2",
    "start": "355840",
    "end": "361840"
  },
  {
    "text": "this is the example so you usually have to pass it",
    "start": "361840",
    "end": "367039"
  },
  {
    "text": "to the cube scheduler binary",
    "start": "367039",
    "end": "371600"
  },
  {
    "start": "371000",
    "end": "484000"
  },
  {
    "text": "and second thing to keep in mind is that by default there's a lot of scoring",
    "start": "372080",
    "end": "378160"
  },
  {
    "text": "plugins to like to favor each kind of preference and apply that",
    "start": "378160",
    "end": "385600"
  },
  {
    "text": "impact on your final decision and by default the weight is usually one",
    "start": "385600",
    "end": "391759"
  },
  {
    "text": "so if you prefer one scoring policy over the other for example",
    "start": "391759",
    "end": "398160"
  },
  {
    "text": "in this case i put image locality for example image locality",
    "start": "398160",
    "end": "403440"
  },
  {
    "text": "means you prefer to schedule the path to the nodes that already has an image",
    "start": "403440",
    "end": "409599"
  },
  {
    "text": "downloaded so in this case i gave a",
    "start": "409599",
    "end": "414639"
  },
  {
    "text": "very large weight which is 50 000 for this kind of plugin so that i can impact",
    "start": "414639",
    "end": "421280"
  },
  {
    "text": "the final decision for the part so that it will be preferred to be land on the",
    "start": "421280",
    "end": "427120"
  },
  {
    "text": "node which has the image already downloaded so this is i call it",
    "start": "427120",
    "end": "432240"
  },
  {
    "text": "a plugin specific weight because this weight is so plugging",
    "start": "432240",
    "end": "437759"
  },
  {
    "text": "in the plugins configuration context and there's another way to configure the weight using the",
    "start": "437759",
    "end": "444160"
  },
  {
    "text": "work work cloud itself like in no dfinity part affinity about entire",
    "start": "444160",
    "end": "450000"
  },
  {
    "text": "affinity there is a field called preferred during scheduling ignore during execution there is also a wait",
    "start": "450000",
    "end": "458000"
  },
  {
    "text": "for your part to show your favor to the existing part",
    "start": "458000",
    "end": "466000"
  },
  {
    "text": "either you want to co exist or not coexist with those kind of paths so this",
    "start": "466000",
    "end": "472319"
  },
  {
    "text": "is also a prevalence previous and has a weight associated to it so basically two types",
    "start": "472319",
    "end": "478800"
  },
  {
    "text": "plug-in specific and the cloud specific",
    "start": "478800",
    "end": "483440"
  },
  {
    "text": "and next thing is that we have a default set of the",
    "start": "484800",
    "end": "490479"
  },
  {
    "text": "plugins but that doesn't prevent you to use another plugin to replace the default",
    "start": "490479",
    "end": "498000"
  },
  {
    "text": "plugins or you just want to make additional plugins so for example",
    "start": "498000",
    "end": "504000"
  },
  {
    "text": "by default we enable the list allocated plugin which means we",
    "start": "504000",
    "end": "509759"
  },
  {
    "text": "prefer to schedule the paths evenly across the cluster but in some use cases",
    "start": "509759",
    "end": "515440"
  },
  {
    "text": "like cluster autoscaler is not the case it's totally the opposite it prefers to",
    "start": "515440",
    "end": "522640"
  },
  {
    "text": "make the use of existing nodes as much as possible instead of like in case case will spin up a new",
    "start": "522640",
    "end": "530880"
  },
  {
    "text": "machine which we are waste the money so",
    "start": "530880",
    "end": "536560"
  },
  {
    "text": "in case of ca you maybe want to use the most allocated plugin and",
    "start": "536560",
    "end": "543680"
  },
  {
    "text": "disable the list located plugin wait you're maybe you're wondering",
    "start": "543680",
    "end": "551440"
  },
  {
    "text": "i may don't have the full knowledge on what kind of plugins are there and what",
    "start": "551440",
    "end": "556720"
  },
  {
    "text": "kind of plugins should be enabled so what if i enable the most allocated plugin but",
    "start": "556720",
    "end": "564560"
  },
  {
    "text": "forgot to or i don't know to disable the list allocated what should i do so in",
    "start": "564560",
    "end": "570000"
  },
  {
    "text": "this case this two plugin will work in the opposite way so this is not the the",
    "start": "570000",
    "end": "577640"
  },
  {
    "text": "expected behavior so that is one thing we are considering",
    "start": "577640",
    "end": "583680"
  },
  {
    "start": "579000",
    "end": "650000"
  },
  {
    "text": "all the time and for this kind of conflict plugins we",
    "start": "583680",
    "end": "589680"
  },
  {
    "text": "try to reflect them and come for example in this case we come up with a",
    "start": "589680",
    "end": "596480"
  },
  {
    "text": "new score plugin called node resource fit and in any time we",
    "start": "596480",
    "end": "603120"
  },
  {
    "text": "enforce there is only one type of behavior is enabled so in this case your",
    "start": "603120",
    "end": "608800"
  },
  {
    "text": "you can specify the plugin arguments which in this case is called scoring",
    "start": "608800",
    "end": "615600"
  },
  {
    "text": "strategy dot type where it's mostly allocated so anytime there's only one",
    "start": "615600",
    "end": "620640"
  },
  {
    "text": "type can be specified so you don't need to worry about the mistake of enable two",
    "start": "620640",
    "end": "626079"
  },
  {
    "text": "conflicting plugin at the same time so this is the example to",
    "start": "626079",
    "end": "633120"
  },
  {
    "text": "adjust your scheduling behavior by modifying the default or modifying the plugin",
    "start": "633120",
    "end": "640959"
  },
  {
    "text": "arguments so here i put a link for you to get familiar with all the plugins and",
    "start": "640959",
    "end": "647360"
  },
  {
    "text": "their arguments and what their metrics so basically that's the",
    "start": "647360",
    "end": "653440"
  },
  {
    "start": "650000",
    "end": "674000"
  },
  {
    "text": "first recipe i want to share with you to customize your schedule behavior by modifying the default scheduler config",
    "start": "653440",
    "end": "661360"
  },
  {
    "text": "like changing the plugin weight and changing the plugging arguments etc",
    "start": "661360",
    "end": "669200"
  },
  {
    "text": "the second part about want to talk about multi profile versus multi-scheduler",
    "start": "669200",
    "end": "675360"
  },
  {
    "start": "674000",
    "end": "779000"
  },
  {
    "text": "so my schedule you may have know that is that in addition to the default",
    "start": "675360",
    "end": "680480"
  },
  {
    "text": "scheduler you can run your own schedule to cover some scheduling",
    "start": "680480",
    "end": "687200"
  },
  {
    "text": "tasks of a particular path so what's the problem of running multiple scheduler",
    "start": "687200",
    "end": "693040"
  },
  {
    "text": "the biggest problem is resource confliction because these two scheduled banners doesn't communicate",
    "start": "693040",
    "end": "700000"
  },
  {
    "text": "with each other so they may compete for the limited resources suppose a node has",
    "start": "700000",
    "end": "706720"
  },
  {
    "text": "only one cpu left and default scheduler and your for example full scheduler",
    "start": "706720",
    "end": "712240"
  },
  {
    "text": "simultaneously assign their path x and y",
    "start": "712240",
    "end": "717519"
  },
  {
    "text": "to the node and suppose both tiles request one cpu and in this case cubelet will be the",
    "start": "717519",
    "end": "724240"
  },
  {
    "text": "eventual arbitrator it will reject the latter arriving party",
    "start": "724240",
    "end": "730240"
  },
  {
    "text": "suppose in this case it's part y so there will be a very",
    "start": "730240",
    "end": "736160"
  },
  {
    "text": "severe and weird symptom which is the letter arrived the part will be show up",
    "start": "736160",
    "end": "742720"
  },
  {
    "text": "in this case without of cpu and in api's perspective this part are",
    "start": "742720",
    "end": "749279"
  },
  {
    "text": "already finished the scheduling phase it has already has the no name set",
    "start": "749279",
    "end": "755839"
  },
  {
    "text": "that implies this part we are behind there forever until the resources in this node get",
    "start": "755839",
    "end": "764160"
  },
  {
    "text": "released that's a very unexpected behavior will sometimes even",
    "start": "764160",
    "end": "770000"
  },
  {
    "text": "involve operation to manual resolve this so this is the biggest problem of",
    "start": "770000",
    "end": "776160"
  },
  {
    "text": "multi-schedulers so do you have solutions yeah we do have some",
    "start": "776160",
    "end": "783440"
  },
  {
    "start": "779000",
    "end": "843000"
  },
  {
    "text": "solutions to mitigate this but not perfect for example some users",
    "start": "783440",
    "end": "789040"
  },
  {
    "text": "are trying to divide the cluster into several pieces and delegate the thumb piece to one",
    "start": "789040",
    "end": "796000"
  },
  {
    "text": "scheduler and others to another so this can work that will cause fragmentation",
    "start": "796000",
    "end": "802160"
  },
  {
    "text": "and hope has caused a low cluster utilization another solution is",
    "start": "802160",
    "end": "807920"
  },
  {
    "text": "on top of this multiple scheduler they set up extra arbitrator so that each",
    "start": "807920",
    "end": "813519"
  },
  {
    "text": "scheduled decision was reported to the arbitrator and the actuator works as a central place to do",
    "start": "813519",
    "end": "820320"
  },
  {
    "text": "a decision reject or accept so this works but",
    "start": "820320",
    "end": "826480"
  },
  {
    "text": "as you'll see will definitely cause extra workload and also because you",
    "start": "826480",
    "end": "831760"
  },
  {
    "text": "introduce another component you have to uh manage the",
    "start": "831760",
    "end": "836800"
  },
  {
    "text": "extra efforts better manage this kind of textures",
    "start": "836800",
    "end": "843040"
  },
  {
    "start": "843000",
    "end": "970000"
  },
  {
    "text": "so what's the community direction on this so the community direction is is to",
    "start": "843040",
    "end": "850160"
  },
  {
    "text": "use a multi-profile schedule much prefer schedule is on steel",
    "start": "850160",
    "end": "855680"
  },
  {
    "text": "schedule but inside the scheduler it can define different profiles and each",
    "start": "855680",
    "end": "861600"
  },
  {
    "text": "profile you can think of is as sub schedule so because it has its own",
    "start": "861600",
    "end": "867920"
  },
  {
    "text": "set of scheduling policies to including which kind of weights which kind of plugins and which kinds of",
    "start": "867920",
    "end": "875600"
  },
  {
    "text": "plugin arguments et cetera so in this case i provided a schedule config",
    "start": "875600",
    "end": "881360"
  },
  {
    "text": "multi-profile demo and here you can see that we have four kinds of",
    "start": "881360",
    "end": "887600"
  },
  {
    "text": "scheduled profiles one is the first scheduler to keep it as is for the regular workloads",
    "start": "887600",
    "end": "895040"
  },
  {
    "text": "and the second is image first to favor the image locality so that maybe some",
    "start": "895040",
    "end": "901839"
  },
  {
    "text": "service workers care about the code start time so they want to schedule a path to the notes",
    "start": "901839",
    "end": "908480"
  },
  {
    "text": "with the image already downloaded and third is called bin pack so custom",
    "start": "908480",
    "end": "914160"
  },
  {
    "text": "auto scaler may be beneficial for this because you want to save the cost of running machines",
    "start": "914160",
    "end": "921839"
  },
  {
    "text": "the last is called skip score because score phase is the",
    "start": "921839",
    "end": "928240"
  },
  {
    "text": "doing the ranking is to uh to do the preference for the path so in",
    "start": "928240",
    "end": "936000"
  },
  {
    "text": "some cases like the cluster is very scheduling",
    "start": "936000",
    "end": "942000"
  },
  {
    "text": "highly used and there's a lot of cause queueing there you maybe want to schedule the",
    "start": "942000",
    "end": "948399"
  },
  {
    "text": "path in most cases low priority or offline workers as quick as possible so i don't",
    "start": "948399",
    "end": "955360"
  },
  {
    "text": "care about finding the best note this is the satisfying the",
    "start": "955360",
    "end": "961440"
  },
  {
    "text": "heart requirements that works for me so in this case you have four kind of",
    "start": "961440",
    "end": "967120"
  },
  {
    "text": "profiles and your workloads",
    "start": "967120",
    "end": "972320"
  },
  {
    "start": "970000",
    "end": "1075000"
  },
  {
    "text": "can specify the spec the scheduler name to map to the profile name so there's",
    "start": "972320",
    "end": "979120"
  },
  {
    "text": "two ways to specify uh secondary name once you express them uh manually the second way",
    "start": "979120",
    "end": "987040"
  },
  {
    "text": "is to do that dynamically so you can set up a admission controller and so that it can",
    "start": "987040",
    "end": "994160"
  },
  {
    "text": "intercept the creation of the path right so you can programmatically",
    "start": "994160",
    "end": "1000240"
  },
  {
    "text": "like assign the path to the",
    "start": "1000240",
    "end": "1005839"
  },
  {
    "text": "the schedule profile by for example the path labels or by",
    "start": "1005839",
    "end": "1011360"
  },
  {
    "text": "even by some external metrics like how business the current schedule is",
    "start": "1011360",
    "end": "1017040"
  },
  {
    "text": "behaving right like the how many paths are there are being queued up in the schedule so",
    "start": "1017040",
    "end": "1023759"
  },
  {
    "text": "it's very dynamic you can work on a lot of innovative ideas to do",
    "start": "1023759",
    "end": "1029199"
  },
  {
    "text": "this and in terms of the scheduled config",
    "start": "1029199",
    "end": "1035918"
  },
  {
    "text": "we are also reading up a cap to simplify the scheduled conflict we",
    "start": "1035919",
    "end": "1042079"
  },
  {
    "text": "you know we we will introduce a multi-point plugin so that",
    "start": "1042079",
    "end": "1047760"
  },
  {
    "text": "for a user you don't need to know whether the plugin implements score or filter or postal filter you just",
    "start": "1047760",
    "end": "1054880"
  },
  {
    "text": "define the name and provide that as a practice so internally you will it will",
    "start": "1054880",
    "end": "1060880"
  },
  {
    "text": "smartly detect whether which extension points it it implements and",
    "start": "1060880",
    "end": "1066799"
  },
  {
    "text": "then download them properly so this cab is still being developed so we'll be",
    "start": "1066799",
    "end": "1072480"
  },
  {
    "text": "available in 123. so this is the second part multiply",
    "start": "1072480",
    "end": "1077919"
  },
  {
    "start": "1075000",
    "end": "1098000"
  },
  {
    "text": "versus the market schedule running multi-schedule is fine but you should be knowing the limitation and",
    "start": "1077919",
    "end": "1086240"
  },
  {
    "text": "upon the resource confliction maybe some manual operation work will be involved",
    "start": "1086240",
    "end": "1092400"
  },
  {
    "text": "the third recipe is um improve your throughput",
    "start": "1092400",
    "end": "1098320"
  },
  {
    "start": "1098000",
    "end": "1214000"
  },
  {
    "text": "so scheduler especially on a large cluster",
    "start": "1098320",
    "end": "1103919"
  },
  {
    "text": "you sometimes don't need to iterate all the cluster to find a node to fit the path",
    "start": "1103919",
    "end": "1111360"
  },
  {
    "text": "so there is one option called percentage of nodes to score",
    "start": "1111360",
    "end": "1116480"
  },
  {
    "text": "and by default is set to 50 but not exact 50 is the adaptive",
    "start": "1116480",
    "end": "1123679"
  },
  {
    "text": "algorithm to calculate the percentage by default so for example suppose you have",
    "start": "1123679",
    "end": "1129120"
  },
  {
    "text": "a 500 nails you will the adapted percentage default percentage will be",
    "start": "1129120",
    "end": "1135760"
  },
  {
    "text": "46 that means each well in the filter phase it will",
    "start": "1135760",
    "end": "1142160"
  },
  {
    "text": "check the nodes and if the number reached to in this case 230",
    "start": "1142640",
    "end": "1149360"
  },
  {
    "text": "in the filter if two to 230 nails has",
    "start": "1149360",
    "end": "1155200"
  },
  {
    "text": "been available to be a candidate for that for the part the filter phase will stop",
    "start": "1155200",
    "end": "1162000"
  },
  {
    "text": "instead of going through all 500 nails so and then this 250 30 nails will be",
    "start": "1162000",
    "end": "1168559"
  },
  {
    "text": "passed down to the scoring phase and give the score to each node so in this case",
    "start": "1168559",
    "end": "1173760"
  },
  {
    "text": "you can see that you know 200 nails in the most",
    "start": "1173760",
    "end": "1179280"
  },
  {
    "text": "desired case unit only need to filter 680 nails and the hands",
    "start": "1179280",
    "end": "1186400"
  },
  {
    "text": "only score those kind of females so this is the default percentage so in",
    "start": "1186400",
    "end": "1192799"
  },
  {
    "text": "your case you maybe want to tune this potential value according to your cluster size for",
    "start": "1192799",
    "end": "1199760"
  },
  {
    "text": "example if you have 2 000 nails and specify the percentage as 10 you only",
    "start": "1199760",
    "end": "1207919"
  },
  {
    "text": "well score on the filter 200 nails this is the first parameter i want to",
    "start": "1207919",
    "end": "1213440"
  },
  {
    "text": "highlight second one is also follow the same idea",
    "start": "1213440",
    "end": "1218559"
  },
  {
    "text": "to iterate a few nodes instead of going through all of them in the default",
    "start": "1218559",
    "end": "1224480"
  },
  {
    "text": "preemption plugin there is some parameters like minimum candidates no percentage or",
    "start": "1224480",
    "end": "1232000"
  },
  {
    "text": "minimum candidate knows absolute so by defining these two parameters you can",
    "start": "1232000",
    "end": "1237919"
  },
  {
    "text": "define how many nodes you want to go through the preemption phase instead it goes through",
    "start": "1237919",
    "end": "1245200"
  },
  {
    "text": "all the nails another option is called prefer nominate",
    "start": "1245200",
    "end": "1250880"
  },
  {
    "start": "1246000",
    "end": "1316000"
  },
  {
    "text": "node it's a feature it's not an option it's just a feature gate introducing 102",
    "start": "1250880",
    "end": "1257520"
  },
  {
    "text": "y and already enabled by default in 22 so it's just a yes or no option you want",
    "start": "1257520",
    "end": "1264000"
  },
  {
    "text": "to use and we believe it's a very useful feature so we don't want to",
    "start": "1264000",
    "end": "1270080"
  },
  {
    "text": "provide as an option it's a shortcut to leverage the status nominating node name",
    "start": "1270080",
    "end": "1277440"
  },
  {
    "text": "so that when the path has been already carried with that field",
    "start": "1277440",
    "end": "1283200"
  },
  {
    "text": "we won't go through all the nodes instead we will just do once to check",
    "start": "1283200",
    "end": "1288880"
  },
  {
    "text": "whether the previous nominated node still fits if it fits",
    "start": "1288880",
    "end": "1294480"
  },
  {
    "text": "i will just assign the node to it rather than going through the regular scanning flow if not",
    "start": "1294480",
    "end": "1301280"
  },
  {
    "text": "don't worry we all fall back to the regular screen flow so that's why i say this is a",
    "start": "1301280",
    "end": "1307440"
  },
  {
    "text": "feature i think mostly will increase the scheduling especially the",
    "start": "1307440",
    "end": "1312720"
  },
  {
    "text": "preemption throughput another parameter is called parallelism",
    "start": "1312720",
    "end": "1320720"
  },
  {
    "start": "1316000",
    "end": "1393000"
  },
  {
    "text": "so across the scheduling flow there are two phase we run the plugins",
    "start": "1320720",
    "end": "1327520"
  },
  {
    "text": "in parallel and by default we run the",
    "start": "1327520",
    "end": "1333520"
  },
  {
    "text": "nodes in batch so we default to 16.",
    "start": "1333520",
    "end": "1338559"
  },
  {
    "text": "so the same thing sounds like to corresponding to the cpu cores but",
    "start": "1338559",
    "end": "1344720"
  },
  {
    "text": "underlying you will involve the operation system as well as go through",
    "start": "1344720",
    "end": "1350480"
  },
  {
    "text": "the go long schedule so sometimes it cannot be",
    "start": "1350480",
    "end": "1356159"
  },
  {
    "text": "hard coded to the cpu cores so it needs some tuning to get the best of all",
    "start": "1356159",
    "end": "1362799"
  },
  {
    "text": "performance we used to have the pr2 wanted to set this to the uh cpu cost number but it seems",
    "start": "1362799",
    "end": "1370880"
  },
  {
    "text": "doesn't work properly so we revert up here so if you want to [Music]",
    "start": "1370880",
    "end": "1376640"
  },
  {
    "text": "customize this and want to for example if i have a lot of cpu cores maybe",
    "start": "1376640",
    "end": "1382480"
  },
  {
    "text": "default to 16 cannot make for the cpu usage so maybe you want to",
    "start": "1382480",
    "end": "1389120"
  },
  {
    "text": "tune it and so that adjusted so that's the third recipe i want i",
    "start": "1389120",
    "end": "1397440"
  },
  {
    "start": "1393000",
    "end": "1420000"
  },
  {
    "text": "wanted to share to improve your throughput optimization and the final one is uh",
    "start": "1397440",
    "end": "1404640"
  },
  {
    "text": "i think it's uh the knowledge that i just want to highlight is that in addition to some regular resource",
    "start": "1404640",
    "end": "1411760"
  },
  {
    "text": "core resource like cpu memory we can model your customer resource",
    "start": "1411760",
    "end": "1418960"
  },
  {
    "text": "in the format of extended resource i give a very",
    "start": "1418960",
    "end": "1425039"
  },
  {
    "start": "1420000",
    "end": "1492000"
  },
  {
    "text": "easy example so as a user you can model your resource",
    "start": "1425039",
    "end": "1431120"
  },
  {
    "text": "then you can give a key value pair and patch that to",
    "start": "1431120",
    "end": "1436960"
  },
  {
    "text": "the node capacity so because we manage this kind of no capacity in a",
    "start": "1436960",
    "end": "1443679"
  },
  {
    "text": "very generalized way so in this case if you patch that to the null spec",
    "start": "1443679",
    "end": "1450320"
  },
  {
    "text": "status will have the capacity automatically populated so that also the",
    "start": "1450320",
    "end": "1456960"
  },
  {
    "text": "scheduler knows that you have this kind of well it's fake gp information so that",
    "start": "1456960",
    "end": "1463440"
  },
  {
    "text": "you can submit a part request with this kind of gpu with file and the scheduler will use",
    "start": "1463440",
    "end": "1470960"
  },
  {
    "text": "the default plugin load the resource fit plugin to to to schedule your pop",
    "start": "1470960",
    "end": "1477120"
  },
  {
    "text": "so in this case a lot i see a lot of users implement their own screen plugin",
    "start": "1477120",
    "end": "1482320"
  },
  {
    "text": "but it's not necessary a lot of practice already taking the external resources for citizens and",
    "start": "1482320",
    "end": "1489840"
  },
  {
    "text": "supporting them well all right last four",
    "start": "1489840",
    "end": "1496000"
  },
  {
    "text": "recipes i want to share with you so that i hope those recipes help so you can",
    "start": "1496000",
    "end": "1502159"
  },
  {
    "text": "make the most of your schedule do more customized options and without any further",
    "start": "1502159",
    "end": "1508960"
  },
  {
    "text": "coding well maybe you you may say that it still doesn't fit my needs what should i do",
    "start": "1508960",
    "end": "1516480"
  },
  {
    "text": "are there any viable options to fulfill like advanced scheduling",
    "start": "1516480",
    "end": "1521760"
  },
  {
    "text": "requirements like batch requires the answer is yes we do",
    "start": "1521760",
    "end": "1527200"
  },
  {
    "text": "we have been thinking about to supporting more diverse workers",
    "start": "1527200",
    "end": "1533440"
  },
  {
    "text": "two years ago or three years ago so we initialized the scheduled framework",
    "start": "1533440",
    "end": "1538720"
  },
  {
    "text": "design to focus more on expose the internal mechanics",
    "start": "1538720",
    "end": "1544960"
  },
  {
    "text": "to the external developers so that you can",
    "start": "1544960",
    "end": "1550640"
  },
  {
    "text": "use the core scheduling capabilities easily and then easily build your own",
    "start": "1550640",
    "end": "1555919"
  },
  {
    "text": "schedule plugins and so that with your customize the autofortree plugins and",
    "start": "1555919",
    "end": "1563679"
  },
  {
    "text": "plug into the default scheduler you will make it a schedule plus plus so it's",
    "start": "1563679",
    "end": "1570480"
  },
  {
    "text": "still one scheduling binary with extra functionalities your developer",
    "start": "1570480",
    "end": "1577120"
  },
  {
    "text": "the other thing we were thinking about is that in some cases you have to involve other components to facilitate",
    "start": "1577120",
    "end": "1584720"
  },
  {
    "text": "the scheduling for example in terms of batch workflows",
    "start": "1584720",
    "end": "1589840"
  },
  {
    "text": "sometimes you know exactly where and how to control the creation of",
    "start": "1589840",
    "end": "1595039"
  },
  {
    "text": "the path and if you can control the part creation more",
    "start": "1595039",
    "end": "1601919"
  },
  {
    "text": "smartly instead of just dumping the paths immediately when the while the",
    "start": "1601919",
    "end": "1607360"
  },
  {
    "text": "cloud is created then maybe can save a lot of scheduling efforts",
    "start": "1607360",
    "end": "1612880"
  },
  {
    "text": "to fulfill the scheduling constraints of your",
    "start": "1612880",
    "end": "1618159"
  },
  {
    "text": "workload so recently we were thinking about that so either you can define some",
    "start": "1618159",
    "end": "1624080"
  },
  {
    "text": "your own crds so that with some extra controllers and the minutes animation",
    "start": "1624080",
    "end": "1629200"
  },
  {
    "text": "web to control the better creation time of the path also",
    "start": "1629200",
    "end": "1634960"
  },
  {
    "text": "there's we have done some upstream work like suspended job",
    "start": "1634960",
    "end": "1640399"
  },
  {
    "text": "like in the next series we were doing some features like multiple scheduling",
    "start": "1640399",
    "end": "1646240"
  },
  {
    "text": "directory for the suspending job so this in one way we",
    "start": "1646240",
    "end": "1652640"
  },
  {
    "text": "will perfect of internal scheduling mechanics in another way other components can also help so that",
    "start": "1652640",
    "end": "1659520"
  },
  {
    "text": "these two things combined together can make the scheduling experience more smooth to",
    "start": "1659520",
    "end": "1665360"
  },
  {
    "text": "adapt to more diverse requests",
    "start": "1665360",
    "end": "1669840"
  },
  {
    "start": "1669000",
    "end": "1872000"
  },
  {
    "text": "all right that's pretty much i want to share with you to make the most of your schedule so",
    "start": "1670559",
    "end": "1676159"
  },
  {
    "text": "the last surprise is the update on the development progress",
    "start": "1676159",
    "end": "1681200"
  },
  {
    "text": "the first thing is the schedule component config in 122 we upgrade the",
    "start": "1681200",
    "end": "1686320"
  },
  {
    "text": "version to v1 beta 2 we remove some options that are either",
    "start": "1686320",
    "end": "1692799"
  },
  {
    "text": "not used quite often or doesn't quite make sense and we will also in the next release",
    "start": "1692799",
    "end": "1700000"
  },
  {
    "text": "will come up with a simplified scheduling conflict so that you can have a more",
    "start": "1700000",
    "end": "1705600"
  },
  {
    "text": "easy to configure way to configure this kind of plugins and also well well",
    "start": "1705600",
    "end": "1713039"
  },
  {
    "text": "try to make that totally backwards compatible and there are some features i've already",
    "start": "1713039",
    "end": "1720240"
  },
  {
    "text": "mentioned like prefer normally now like multiple scheduling directives",
    "start": "1720240",
    "end": "1725520"
  },
  {
    "text": "and also in 122 we add a namespace selector",
    "start": "1725520",
    "end": "1730880"
  },
  {
    "text": "for part affinity before in the pod affinity we only provide the",
    "start": "1730880",
    "end": "1736640"
  },
  {
    "text": "option for you to specify a slice of the namespaces but now we support the main",
    "start": "1736640",
    "end": "1743039"
  },
  {
    "text": "space selector the last thing we did is the a series of scheduling",
    "start": "1743039",
    "end": "1750840"
  },
  {
    "text": "queueing enhancement to improve the efficiency like we",
    "start": "1750840",
    "end": "1756799"
  },
  {
    "text": "in the before we re-kill the path in a very",
    "start": "1756799",
    "end": "1762799"
  },
  {
    "text": "brute force way like any any events comes in we will move the",
    "start": "1762799",
    "end": "1767840"
  },
  {
    "text": "parts back to the back to the head of the schedule queue but now we will",
    "start": "1767840",
    "end": "1773600"
  },
  {
    "text": "we defined the series of rules for the path only to be",
    "start": "1773600",
    "end": "1781360"
  },
  {
    "text": "moved to the head on its method events comes in like if a part failed with a pvc or pv",
    "start": "1781360",
    "end": "1790399"
  },
  {
    "text": "restriction one for example irrelevant events comes in",
    "start": "1790399",
    "end": "1796640"
  },
  {
    "text": "the part will not be moved to the head so it can save a lot of",
    "start": "1796640",
    "end": "1801840"
  },
  {
    "text": "scheduling cycles and also mitigate the sort of head of blocking problems in this kind",
    "start": "1801840",
    "end": "1808480"
  },
  {
    "text": "of queue and also as more and more",
    "start": "1808480",
    "end": "1813760"
  },
  {
    "text": "users are using scheduling framework to do their customer plug-in so",
    "start": "1813760",
    "end": "1819039"
  },
  {
    "text": "we also did some work to support some dynamic event handlers so that you can",
    "start": "1819039",
    "end": "1827200"
  },
  {
    "text": "define your crds so that the cd can be also detected by the scheduling",
    "start": "1827200",
    "end": "1832720"
  },
  {
    "text": "framework we internally use some dynamic triangle mechanics to do this",
    "start": "1832720",
    "end": "1839279"
  },
  {
    "text": "and also we provide the option for the plug-in developers to proactively move keypads to active queue",
    "start": "1839279",
    "end": "1846399"
  },
  {
    "text": "it can be sometimes useful for like the co-scheduling plug-in",
    "start": "1846399",
    "end": "1852880"
  },
  {
    "text": "to for example if you have a spark job when the driver",
    "start": "1852880",
    "end": "1858399"
  },
  {
    "text": "part comes in you may want at that time to move associated executor path back to the xq",
    "start": "1858399",
    "end": "1866320"
  },
  {
    "text": "so the executor path can be scheduled afterwards immediately",
    "start": "1866320",
    "end": "1872640"
  },
  {
    "start": "1872000",
    "end": "2005000"
  },
  {
    "text": "okay so next is about some sub projects the",
    "start": "1872640",
    "end": "1878399"
  },
  {
    "text": "first one is schedule plugin so schedule plugins a repo which we initial edit for",
    "start": "1878399",
    "end": "1886640"
  },
  {
    "text": "we want to engage the different vendors to contribute their design",
    "start": "1886640",
    "end": "1892000"
  },
  {
    "text": "implementations here are two cube contacts you can check out",
    "start": "1892000",
    "end": "1898559"
  },
  {
    "text": "and both are using the scheduler framework to build some customer",
    "start": "1898559",
    "end": "1905039"
  },
  {
    "text": "schedule plugin to fulfill the business need a second sub project is descheduling so this schedule",
    "start": "1905039",
    "end": "1911840"
  },
  {
    "text": "provides some rebalancing policy to",
    "start": "1911840",
    "end": "1918120"
  },
  {
    "text": "redistribute the path according to some defined rules because scheduling decisions",
    "start": "1918120",
    "end": "1925120"
  },
  {
    "text": "is happens on the scheduling time but along with the cluster as time goes some some constraint may",
    "start": "1925120",
    "end": "1933279"
  },
  {
    "text": "not satisfy anymore so this scheduler can instantly regularly check this kind of",
    "start": "1933279",
    "end": "1940640"
  },
  {
    "text": "policies so that if the policy violates it will practically",
    "start": "1940640",
    "end": "1946799"
  },
  {
    "text": "delete them so that they got another chance to be rescheduled",
    "start": "1946799",
    "end": "1951919"
  },
  {
    "text": "and third one is called cube schedule simulator it's a new",
    "start": "1951919",
    "end": "1957360"
  },
  {
    "text": "g-stock project which provides some web ui as well as some",
    "start": "1957360",
    "end": "1965519"
  },
  {
    "text": "simulating sdks for you to easily build your uh your your toolkit to like set up",
    "start": "1965519",
    "end": "1974840"
  },
  {
    "text": "a cluster programmatically and see whether",
    "start": "1974840",
    "end": "1980240"
  },
  {
    "text": "uh you can replace a series of workers and see how the scheduling result is so",
    "start": "1980240",
    "end": "1986960"
  },
  {
    "text": "right now is during the very early phase but yeah we maybe want to",
    "start": "1986960",
    "end": "1993760"
  },
  {
    "text": "to spend more efforts on it to make it very have a very solid sdks so that the",
    "start": "1993760",
    "end": "2000399"
  },
  {
    "text": "integrators can benefit from that",
    "start": "2000399",
    "end": "2005679"
  },
  {
    "start": "2005000",
    "end": "2029000"
  },
  {
    "text": "all right and you can contact us in the china's in the",
    "start": "2005679",
    "end": "2010880"
  },
  {
    "text": "mailing list and also welcome to join our vehicle meeting you can raise your",
    "start": "2010880",
    "end": "2017200"
  },
  {
    "text": "gender item there we will discover your proposal etc message",
    "start": "2017200",
    "end": "2025679"
  },
  {
    "text": "all right thank you for joining today's session",
    "start": "2025679",
    "end": "2030840"
  }
]