[
  {
    "text": "so um so hello everyone so my name is G this is Pam so we're going to be talking",
    "start": "120",
    "end": "5440"
  },
  {
    "text": "about how Google built a new Cloud on top of kubernetes unfortunately s cannot be joining this presentation so going to",
    "start": "5440",
    "end": "11759"
  },
  {
    "text": "just be me and pan presenting this all right so um many of you are familiar",
    "start": "11759",
    "end": "17000"
  },
  {
    "text": "with the hyperscaler kind of public cloud computing platform and the benefit that the benefit that um they offer and",
    "start": "17000",
    "end": "24960"
  },
  {
    "text": "as more and more workloads are shifting to the public Cloud so uh at Google we notice some customer actually want the",
    "start": "24960",
    "end": "31160"
  },
  {
    "text": "the the benefit of the cloud but they want that in a disconnected environment so those en those customers would love",
    "start": "31160",
    "end": "37000"
  },
  {
    "text": "to leverage the benefit of cloud computing but due to like a regulatory or security reasons they can cannot just",
    "start": "37000",
    "end": "42960"
  },
  {
    "text": "use public offerings so um to to better serve those customers so in 2021 so we",
    "start": "42960",
    "end": "48840"
  },
  {
    "text": "start an effort trying to build a new Cloud kind of air Gable Cloud at Google",
    "start": "48840",
    "end": "54359"
  },
  {
    "text": "so we want that cloud to be kind of um like air Gable and look and feel just like our Cloud offerings and uh but can",
    "start": "54359",
    "end": "62280"
  },
  {
    "text": "be completely disconnected from the internet and uh and and more important is able to kind of scale from a very",
    "start": "62280",
    "end": "68200"
  },
  {
    "text": "small scale like a few racks to a large scale so um of course this is like a very audacious kind of undertaking and",
    "start": "68200",
    "end": "75040"
  },
  {
    "text": "the the big natural question is um how to do this so uh of course when you're",
    "start": "75040",
    "end": "80200"
  },
  {
    "text": "building something new um the first thing you do is actually look around and see uh what have been built already and",
    "start": "80200",
    "end": "85680"
  },
  {
    "text": "whether you can reuse those things right so uh over the years Google has built like a a kind of like very amazing",
    "start": "85680",
    "end": "91320"
  },
  {
    "text": "internal technology like B stubby classes spanner and more and this internal technology enable us to run",
    "start": "91320",
    "end": "98399"
  },
  {
    "text": "massive distribut systems uh including search Gmail and of course our public",
    "start": "98399",
    "end": "103600"
  },
  {
    "text": "Cloud um but we couldn't just blindly use those Technologies uh for multiple reasons and the more importantly the the",
    "start": "103600",
    "end": "110119"
  },
  {
    "text": "reason is because those Technologies are actually built for a very different scale so Google's internal infrastructure is quite literally built",
    "start": "110119",
    "end": "116920"
  },
  {
    "text": "for a planning scale um but the good news is that um Google has invested in",
    "start": "116920",
    "end": "122240"
  },
  {
    "text": "building open source variant of those internal Technologies uh over the years and so can kind of let us start small",
    "start": "122240",
    "end": "128920"
  },
  {
    "text": "and kind of scale up so this is one of our key design kind of architecture goals all right so um this naturally",
    "start": "128920",
    "end": "135680"
  },
  {
    "text": "leads us to the cloud native ecosystem so in cncf we have so many building blocks that we that we uh that we can",
    "start": "135680",
    "end": "142720"
  },
  {
    "text": "can use to build a cloud for example of course you have kubernetes uh which is a very excellent general purpose resource",
    "start": "142720",
    "end": "148480"
  },
  {
    "text": "manager and container orchestration system you have cubert which is built on top of kubernetes and let you orchestrate kbm VMS with a common",
    "start": "148480",
    "end": "155959"
  },
  {
    "text": "Resource Management layer and there also multiple service match options on the table uh that are key building blocks",
    "start": "155959",
    "end": "162239"
  },
  {
    "text": "for any sort of microservice architecture and there are also a lot of other project like for example for image",
    "start": "162239",
    "end": "167400"
  },
  {
    "text": "management you have Harbor and for data plan you have celum so there's a lot of benefits of building on top of those OSS",
    "start": "167400",
    "end": "173879"
  },
  {
    "text": "cncf ecosystem projects for example we don't have to build from scratch and that improve our time to Market",
    "start": "173879",
    "end": "180680"
  },
  {
    "text": "and uh and usually customer appreciate those kind of like a building off industry standard Technologies um",
    "start": "180680",
    "end": "185920"
  },
  {
    "text": "because um then they can understand and operate if necessary and uh and also",
    "start": "185920",
    "end": "191080"
  },
  {
    "text": "like Google being a very big open source contributor U certainly helped this because I so many experts for those",
    "start": "191080",
    "end": "196599"
  },
  {
    "text": "Technologies are literally just sat upstairs and of course OSS is where so much of the Innovation is happening want",
    "start": "196599",
    "end": "202519"
  },
  {
    "text": "to ride that wave um but like all major decisions um the the choice to go with OS is not without drawbacks uh we would",
    "start": "202519",
    "end": "210200"
  },
  {
    "text": "have to pour over a bunch of services uh into the new stack um and while many of",
    "start": "210200",
    "end": "215239"
  },
  {
    "text": "the building blocks were there um there were missing functionality that require like a like to that's required to build",
    "start": "215239",
    "end": "221439"
  },
  {
    "text": "a true Cloud experience and there were also other challenges for example to align with our desired tendency model",
    "start": "221439",
    "end": "228599"
  },
  {
    "text": "all right so uh we took the Gamble and it worked so um GDC air gap Google distributed Cloud air gap is our private",
    "start": "228599",
    "end": "235799"
  },
  {
    "text": "Cloud offering built on top open source so it looks and feel very similar to our",
    "start": "235799",
    "end": "241439"
  },
  {
    "text": "the public uh Cloud offerings on the hyperscalers and offer many of the same manager services including BMS database",
    "start": "241439",
    "end": "247840"
  },
  {
    "text": "vertex Ai and more right so while I would love to kind of dive into all aspects of our uh",
    "start": "247840",
    "end": "254959"
  },
  {
    "text": "private Cloud offerings it will take like many hours so uh instead in this talk we talk about like work you through",
    "start": "254959",
    "end": "260359"
  },
  {
    "text": "like three key key design decisions explain how kind of Open Source helped us and share uh what the gaps were uh",
    "start": "260359",
    "end": "268199"
  },
  {
    "text": "and and how we fill them right so so before we dive into kind of three design principles we need to",
    "start": "268199",
    "end": "274199"
  },
  {
    "text": "understand some of the key kind kind of concept first so this diagram actually shows the uh Cloud resource hierarchy uh",
    "start": "274199",
    "end": "280479"
  },
  {
    "text": "in Google distribut Cloud so it's the same as our public Cloud uh where Cloud resources like VM clusters are created",
    "start": "280479",
    "end": "286639"
  },
  {
    "text": "inside the project and the project can be grouped together into organizations",
    "start": "286639",
    "end": "291840"
  },
  {
    "text": "where the organization wi policies can be set um think this product can run in an air gap environment so introduce A",
    "start": "291840",
    "end": "297960"
  },
  {
    "text": "New Concept called universe where each Universe usually maps to a given customer or a a given a fabric for a",
    "start": "297960",
    "end": "305440"
  },
  {
    "text": "given customer so each Universe consists one or more zones uh and each zone is an",
    "start": "305440",
    "end": "311000"
  },
  {
    "text": "independent set of hardware and software stack right so the first design principle uh is multicluster and Nam",
    "start": "311000",
    "end": "317960"
  },
  {
    "text": "space sess it might sounds very familiar because there's like actually a lot of talks about this but we'll get to why",
    "start": "317960",
    "end": "323199"
  },
  {
    "text": "this kind of important for us so why multicluster there are many reasons and some of them are quite OB is",
    "start": "323199",
    "end": "330240"
  },
  {
    "text": "so we're listing a few kind of key reasons here so first uh we need cluster with different types and shapes to",
    "start": "330240",
    "end": "335800"
  },
  {
    "text": "accommodate various needs from first party services and customers for example VM managed by vmn service needs to run",
    "start": "335800",
    "end": "342479"
  },
  {
    "text": "on bare middle clusters for reasons and uh some Services teams sometimes actually uh want special tuning or",
    "start": "342479",
    "end": "349479"
  },
  {
    "text": "configuration on their clusters especially when some of the OSS components are used uh and those",
    "start": "349479",
    "end": "354639"
  },
  {
    "text": "configuration tuning might not be applicable to all the all the other services and of course our customer",
    "start": "354639",
    "end": "359960"
  },
  {
    "text": "would like their ciz cluster to be in different size and shape to better see their needs so second an organization",
    "start": "359960",
    "end": "366080"
  },
  {
    "text": "might spam multiple regions and zones apparently you need like multiple cluster um for different regions at the",
    "start": "366080",
    "end": "372000"
  },
  {
    "text": "very least third uh one of the primary goal of this product is actually to be able to scale from rack scale to a DC",
    "start": "372000",
    "end": "378360"
  },
  {
    "text": "scale so in a smaller scale uh we need virtual clusters in addition to enironmental Cluster to better utilize",
    "start": "378360",
    "end": "383880"
  },
  {
    "text": "the the resources uh in those racks because they they are pretty small and uh so it's not only multicluster we also",
    "start": "383880",
    "end": "390599"
  },
  {
    "text": "need a hybrid of virtual environmental clusters to better Su our need there's also other apparent reasons for example",
    "start": "390599",
    "end": "396479"
  },
  {
    "text": "multicluster for like for tolerance and a reduced blast radius so finally I",
    "start": "396479",
    "end": "402160"
  },
  {
    "text": "think uh our security team generally prefers service data plan components for example the actual workloads that's",
    "start": "402160",
    "end": "408479"
  },
  {
    "text": "serving the uh the the traffic to run in Virtual clusters in in VM so that container breakout won't kind of affect",
    "start": "408479",
    "end": "415919"
  },
  {
    "text": "kind of privileged host stack Rex so we come up with this kind of cluster architecture so uh each GDC",
    "start": "415919",
    "end": "423400"
  },
  {
    "text": "zone is a has a rot aming cluster on baral servers so that's the only cluster",
    "start": "423400",
    "end": "428840"
  },
  {
    "text": "that has access to various devices and in the zone via uh Al band management Network and it also runs controllers",
    "start": "428840",
    "end": "435160"
  },
  {
    "text": "that that will be responsible for allocating Hardware resources like servers to each organization in the zone",
    "start": "435160",
    "end": "440919"
  },
  {
    "text": "each organization in the zone will have a dedicated infra cluster infrastructure cluster so the infrastructure cluster",
    "start": "440919",
    "end": "446400"
  },
  {
    "text": "for the organization will be running on bare metal servers and we can dynamically add more capacity into the",
    "start": "446400",
    "end": "451919"
  },
  {
    "text": "infrastructure cluster based on customer needs so note that for each organization we Rune a set of system parts on the",
    "start": "451919",
    "end": "458599"
  },
  {
    "text": "infrastructure cluster so one of those parts are the actually the management plan API server for the organization in",
    "start": "458599",
    "end": "463720"
  },
  {
    "text": "that zone so this is the place where the customer will uh kind of CR their Cloud resources like create update read and",
    "start": "463720",
    "end": "469800"
  },
  {
    "text": "delete their Cloud resources and we'll get to that later so I want to highlight um that the management plan API server",
    "start": "469800",
    "end": "476240"
  },
  {
    "text": "here are separated from the infra cluster API servers so this design actually uh provides a very clean",
    "start": "476240",
    "end": "482680"
  },
  {
    "text": "separation between customer facing kind of management plane functionalities from internal control Point details and allow",
    "start": "482680",
    "end": "489400"
  },
  {
    "text": "us to not leak implementation detail to the end users so so if we zoom into like an",
    "start": "489400",
    "end": "495879"
  },
  {
    "text": "organization So within an organization we support multiple types of so-called virtual clusters so virtual cluster are",
    "start": "495879",
    "end": "502400"
  },
  {
    "text": "just critic clusters running on VMS and those VMS are running as Parts in the organ organization infra cluster so um",
    "start": "502400",
    "end": "509520"
  },
  {
    "text": "there are two type of uh virtual clusters one type is actually the customer facing kind of virtual clusters",
    "start": "509520",
    "end": "515279"
  },
  {
    "text": "and um and the other is the service clusters are not visible to the end users so service cluster are used to",
    "start": "515279",
    "end": "522719"
  },
  {
    "text": "host service producer workloads uh like databases or model servers Etc um know",
    "start": "522719",
    "end": "528240"
  },
  {
    "text": "that the U the infrastructure cluster is essentially a a special service cluster if you think about that way that can run",
    "start": "528240",
    "end": "533920"
  },
  {
    "text": "environmental servers and it's not visible to the users too right so it's not easy to deal with",
    "start": "533920",
    "end": "540880"
  },
  {
    "text": "so many clusters um uh with different types and and and shapes for the service",
    "start": "540880",
    "end": "546120"
  },
  {
    "text": "producers so it will become a huge burden if the platform doesn't provide a way to kind of make this easy and",
    "start": "546120",
    "end": "551160"
  },
  {
    "text": "provide consistency across those clusters so so naturally because of this we apply namespace sameness concept",
    "start": "551160",
    "end": "556519"
  },
  {
    "text": "within an organization um across cluster uh in in that organization so names space sameness Is Not A New Concept and",
    "start": "556519",
    "end": "563720"
  },
  {
    "text": "people have done this before so but in our case each project uh will actually have a unique namespace assignment into",
    "start": "563720",
    "end": "569640"
  },
  {
    "text": "that and the namespace will be created across all the Clusters within an organization and the namespace hosts",
    "start": "569640",
    "end": "576680"
  },
  {
    "text": "kind of car resources uh representations and service workloads um for the project and depends on the cluster type it hosts",
    "start": "576680",
    "end": "583680"
  },
  {
    "text": "different type of resource and workloads we enforce consistent policies for that names space across clusters so that for",
    "start": "583680",
    "end": "591120"
  },
  {
    "text": "from like service producers pers perspective it feel like as if they're working work are running on the same cluster and policies for example um like",
    "start": "591120",
    "end": "598760"
  },
  {
    "text": "ad Administration policy like policies project policy or networking policy will be enforced consistently so we also",
    "start": "598760",
    "end": "605320"
  },
  {
    "text": "support this concept called Shadow Nam space for a given project so think about Shadow namespace are just like a regular",
    "start": "605320",
    "end": "611640"
  },
  {
    "text": "project namespace that are linked to the project so this is for the case uh where some service actually require dedicated",
    "start": "611640",
    "end": "618200"
  },
  {
    "text": "name spaces for each service instance for example like say a database instance might require a dedicated namespace uh",
    "start": "618200",
    "end": "625279"
  },
  {
    "text": "not sharing any namespace with the the other database instances and this is actually quite quite typical for some of",
    "start": "625279",
    "end": "630399"
  },
  {
    "text": "the OSS components that we're using all right so this is kind of a visualization of the namespace concept",
    "start": "630399",
    "end": "637120"
  },
  {
    "text": "name space same name concept that I just talked about right so in this particular case the project back end uh on the top",
    "start": "637120",
    "end": "644399"
  },
  {
    "text": "uh in in green box it is a user created project so a unique name Stace called backand will be created on all clusters",
    "start": "644399",
    "end": "651399"
  },
  {
    "text": "including the management plan API server and Cloud resources like uh are basically namespaced resources U store",
    "start": "651399",
    "end": "658440"
  },
  {
    "text": "inside the IM PL API server in this case we have a VM crd defined there",
    "start": "658440",
    "end": "664560"
  },
  {
    "text": "so and if the user create a VM on the virtual machine pod will be actually created in the backhand names space on",
    "start": "664560",
    "end": "671399"
  },
  {
    "text": "the infrastructure cluster which is bare metal and for some and for some services like database Services um the workflow",
    "start": "671399",
    "end": "677760"
  },
  {
    "text": "will be actually creating the service cluster and uh um the service producer can request kind of additional Shadow",
    "start": "677760",
    "end": "683680"
  },
  {
    "text": "names spaces associated with the backhand namespace uh where the actual database part will be placed",
    "start": "683680",
    "end": "689800"
  },
  {
    "text": "so the policy as I mentioned earlier like the policy will be enforced consistently across those uh across those cluster for those name spaces",
    "start": "689800",
    "end": "695680"
  },
  {
    "text": "including the shadow name spaces uh for the project so so from service producers perspective um their experience is",
    "start": "695680",
    "end": "701959"
  },
  {
    "text": "roughly the same despite the existing of like multiple clusters with different types and",
    "start": "701959",
    "end": "707160"
  },
  {
    "text": "shapes right so that's the first principle um multicluster and namespace sameness the second principle is uh is",
    "start": "707160",
    "end": "714680"
  },
  {
    "text": "to in Embrace kubernets resource model krm based API machinery and controll of pattern when building a cloud so this",
    "start": "714680",
    "end": "722639"
  },
  {
    "text": "diagram shows a highlight of how a cloud service uh on GDC is built right so for each service we separate its apis into",
    "start": "722639",
    "end": "730079"
  },
  {
    "text": "kind of two major category on the management plane and the data plane so for management plane think of that as",
    "start": "730079",
    "end": "735760"
  },
  {
    "text": "like mainly related to the life cycle of a cloud resource U for example like create a database or delete a VM those",
    "start": "735760",
    "end": "741639"
  },
  {
    "text": "are like a management plane kind of operations for management plan apis all service kind of consistently using",
    "start": "741639",
    "end": "747320"
  },
  {
    "text": "declarative km resource model and uh and Define customer resource definitions for their C resources and",
    "start": "747320",
    "end": "753160"
  },
  {
    "text": "install those in the dedicated management plan API server as we discussed earlier in the talk for data",
    "start": "753160",
    "end": "758600"
  },
  {
    "text": "plane we split actually into like further two like subcategories so one category is like for those data plane",
    "start": "758600",
    "end": "764360"
  },
  {
    "text": "apis um that has like industry standard for example like oci for container registry we just use those industry",
    "start": "764360",
    "end": "770279"
  },
  {
    "text": "standard and for some of the Google Preparatory like data plan API like KMS vertex pre-train apis and those are to",
    "start": "770279",
    "end": "776560"
  },
  {
    "text": "be consistently based on grpc um API and then we also support a Json HTTP",
    "start": "776560",
    "end": "782560"
  },
  {
    "text": "transcoding layer um for those API similar to our public offerings so and",
    "start": "782560",
    "end": "788279"
  },
  {
    "text": "policies are enforced by API proxy so there's an API proxy in front those in front of those API services and API",
    "start": "788279",
    "end": "795000"
  },
  {
    "text": "request will actually go through those proxies and and the proxy will actually forward those requests to um to like a",
    "start": "795000",
    "end": "802000"
  },
  {
    "text": "policy decision point and policy decision point will make a decision whether to uh accept request or deny the",
    "start": "802000",
    "end": "807279"
  },
  {
    "text": "request based on policies and we use the management plan API server as our policy",
    "start": "807279",
    "end": "813399"
  },
  {
    "text": "store right so we heavily rely on kuet style controller pattern for building managed services and the service",
    "start": "813399",
    "end": "820480"
  },
  {
    "text": "controller I basically just react to the desired state of the user in the management plan API server and reconcile",
    "start": "820480",
    "end": "826360"
  },
  {
    "text": "the system to reach the desired State we also apply controller pattern pretty much in all over the places like for",
    "start": "826360",
    "end": "832320"
  },
  {
    "text": "example we use controller pattern also for our internal infrastructure management and Hardware configurations so this allow us to kind of be able to",
    "start": "832320",
    "end": "839240"
  },
  {
    "text": "recover from failures uh kind of automatically so one notable difference as compared to most of the OSS",
    "start": "839240",
    "end": "845240"
  },
  {
    "text": "controllers is that our service controller typically needs to deal with a multiple clusters so um the intent is",
    "start": "845240",
    "end": "850399"
  },
  {
    "text": "actually stored inside the management Point API server and the data plane components are usually in a different cluster like the service cluster or",
    "start": "850399",
    "end": "855880"
  },
  {
    "text": "infra cluster so to make this easy actually we build a thing layer on top of controller run time to support",
    "start": "855880",
    "end": "861279"
  },
  {
    "text": "multiple clusters better all right so I'm going to now I'm going to hand over to pan to talk about the third principle",
    "start": "861279",
    "end": "867720"
  },
  {
    "text": "thank you g can everyone hear me yes okay great hi I'm Prashant vopal I'm",
    "start": "867720",
    "end": "874160"
  },
  {
    "text": "going to be talking about um the networking piece of this private Cloud just Swit this use the other",
    "start": "874160",
    "end": "881920"
  },
  {
    "text": "one all right okay the third design principle so",
    "start": "883800",
    "end": "889480"
  },
  {
    "text": "the third design principle heavily influenced um the evolution of our networking architecture for this private",
    "start": "889480",
    "end": "896440"
  },
  {
    "text": "Cloud um and let's go into what the principle is so",
    "start": "896440",
    "end": "901680"
  },
  {
    "text": "treat containers and VMS equally I mean like that sounds very vague and ambiguous so let's go a little deeper",
    "start": "901680",
    "end": "908399"
  },
  {
    "text": "into what that really means to understand what this uh what",
    "start": "908399",
    "end": "913880"
  },
  {
    "text": "this principle really means let's start with what we set out to do we're building a private Cloud we need to",
    "start": "913880",
    "end": "919320"
  },
  {
    "text": "build some networking components for that cloud what is a typical Cloud networking component networking",
    "start": "919320",
    "end": "924959"
  },
  {
    "text": "subsystem look like uh it typically contains some sort of a virtual networking layer whose job is to make",
    "start": "924959",
    "end": "931600"
  },
  {
    "text": "sure that workloads have some Network Plumbing to the physical networking layer right you eventually need switches",
    "start": "931600",
    "end": "937959"
  },
  {
    "text": "and tows and whatnot to move packets around right the other part of it is now",
    "start": "937959",
    "end": "943160"
  },
  {
    "text": "that you have some way of Plumbing a virtual networking layer to the physical networking layer you need to expose some",
    "start": "943160",
    "end": "949120"
  },
  {
    "text": "knobs to the customer so that they can decide uh how to customize this network",
    "start": "949120",
    "end": "954480"
  },
  {
    "text": "Plumbing they may decide to connect to multiple physical networks same physic Network etc etc right so these are the",
    "start": "954480",
    "end": "961920"
  },
  {
    "text": "two core pieces of what typically defines a cloud networking um",
    "start": "961920",
    "end": "967279"
  },
  {
    "text": "layer and any Cloud networking stack especially virtual networking stack typically has",
    "start": "967279",
    "end": "974160"
  },
  {
    "text": "three big buckets where features go into right uh there connectivity services and",
    "start": "974160",
    "end": "980399"
  },
  {
    "text": "security so connectivity is nothing but how a workload talks to another workload",
    "start": "980399",
    "end": "985519"
  },
  {
    "text": "within a cloud or how an entity outside the cloud Cloud can communicate with the workload inside a cloud so East West and",
    "start": "985519",
    "end": "992560"
  },
  {
    "text": "north south Services is a point where you abstract L3 routing mechanisms to a",
    "start": "992560",
    "end": "999480"
  },
  {
    "text": "more application Level service exposure mechanism so you use load balancers L4 and L7 load balancers and you use DNS",
    "start": "999480",
    "end": "1006759"
  },
  {
    "text": "for service discovery of course no private cloud or no public cloud in fact is going to be complete without some",
    "start": "1006759",
    "end": "1012720"
  },
  {
    "text": "sort of security paradigms at various granularity levels so you need at least three these three buckets to be formed",
    "start": "1012720",
    "end": "1018560"
  },
  {
    "text": "right but what we really want to focus on and specifically in the context of this design principle is this part here",
    "start": "1018560",
    "end": "1025760"
  },
  {
    "text": "expose workloads uh related networking knobs so we use the term workloads",
    "start": "1025760",
    "end": "1031360"
  },
  {
    "text": "because we want to support VMS and containers and we want to expose knobs or configuration patterns to customers",
    "start": "1031360",
    "end": "1037760"
  },
  {
    "text": "where they shouldn't have to worry whether they're using VMS or containers to deploy their applications right and",
    "start": "1037760",
    "end": "1043400"
  },
  {
    "text": "we'll talk about why this is important so the cloud that we aspired towards was built on the premise of",
    "start": "1043400",
    "end": "1050919"
  },
  {
    "text": "treat VMS and containers equally what does it really mean consistent policies",
    "start": "1050919",
    "end": "1056000"
  },
  {
    "text": "and features that can be supported for both VMS and containers on the same platform typically if you look at Cloud",
    "start": "1056000",
    "end": "1063320"
  },
  {
    "text": "platforms they're probably shifting more towards VMS or towards containers but we know that our customers sometimes don't",
    "start": "1063320",
    "end": "1070440"
  },
  {
    "text": "want to pick in fact the on-prem world where we built this product for there's still a lot of VM based applications but",
    "start": "1070440",
    "end": "1076200"
  },
  {
    "text": "they do want to move to The Container World they we want to give them a path make it easier for them to move to The Container World okay all right so now",
    "start": "1076200",
    "end": "1083640"
  },
  {
    "text": "imagine that you could bring up a kubernetes load balance a kubernetes service that can have both VMS and",
    "start": "1083640",
    "end": "1088919"
  },
  {
    "text": "containers as backends how easy would migration be for these customers right",
    "start": "1088919",
    "end": "1094200"
  },
  {
    "text": "imagine that you can specify network security rules firewall rules using the same API irres of whether you're",
    "start": "1094200",
    "end": "1100919"
  },
  {
    "text": "deploying something as a VM application or as a container application right then imagine if you were building one first",
    "start": "1100919",
    "end": "1107760"
  },
  {
    "text": "party services like databases or AIML applications that you want to expose to your customers using the same API right",
    "start": "1107760",
    "end": "1114919"
  },
  {
    "text": "the customer shouldn't care whether you have implemented using VMS or containers and you can switch any time between VMS",
    "start": "1114919",
    "end": "1120360"
  },
  {
    "text": "and containers as needed now theoretically some of this could be built by creating a logical",
    "start": "1120360",
    "end": "1126799"
  },
  {
    "text": "data plane that could perhaps be built using a kubernetes cni and we'll talk about why kubernetes is suddenly getting",
    "start": "1126799",
    "end": "1132480"
  },
  {
    "text": "introduced here which can support both customer and system workloads irrespec",
    "start": "1132480",
    "end": "1138520"
  },
  {
    "text": "of the workload type so workload could be VMS or pods could be customer or system workloads with the same set of",
    "start": "1138520",
    "end": "1144200"
  },
  {
    "text": "knobs and bells and whistles are available for all types of workloads right so there's a lot of Imagine This",
    "start": "1144200",
    "end": "1149880"
  },
  {
    "text": "and imagine that so where is this leading to right one more imagine now imagine making it easier for customers",
    "start": "1149880",
    "end": "1157039"
  },
  {
    "text": "to move to a truly Cloud native environment right there are a lot of customers in the on Prem world who want to move to Containers but they've",
    "start": "1157039",
    "end": "1163520"
  },
  {
    "text": "invested so much money and time on VM applications right so we give them a path maybe they will will make the",
    "start": "1163520",
    "end": "1170280"
  },
  {
    "text": "move okay so all of those um you know Core Design principle constructs um led",
    "start": "1170280",
    "end": "1177080"
  },
  {
    "text": "us to this concept that we call kubernetes defined networking how many of you here have heard of the term sdn",
    "start": "1177080",
    "end": "1183919"
  },
  {
    "text": "show fans okay good so when someone talks about software defined networking",
    "start": "1183919",
    "end": "1189760"
  },
  {
    "text": "at least to us it typically means you're orchestrating some sort of a fabric and",
    "start": "1189760",
    "end": "1194880"
  },
  {
    "text": "you're trying to set up networking between multiple set of servers and typically it is used in the context of",
    "start": "1194880",
    "end": "1200240"
  },
  {
    "text": "VMS these are physical servers that are running some VMS and you want to set up some sort of a networking layer among",
    "start": "1200240",
    "end": "1205360"
  },
  {
    "text": "those VMS to communicate with each other that's what sdn typically brings up in your mind right then we thought about",
    "start": "1205360",
    "end": "1211840"
  },
  {
    "text": "well what is going on in the kubernetes world so kubernetes deployments have multiple kubernetes nodes kubernetes by",
    "start": "1211840",
    "end": "1219120"
  },
  {
    "text": "default needs to coordinate between networking between these nodes so there is a networking Fabric in the kubernetes",
    "start": "1219120",
    "end": "1224840"
  },
  {
    "text": "nodes right without this there is no successful kubernetes deployment right right so this sort of brought us to an",
    "start": "1224840",
    "end": "1230480"
  },
  {
    "text": "epiphany that there is a built-in sdn that is part of kubernetes I mean when",
    "start": "1230480",
    "end": "1235799"
  },
  {
    "text": "you say it out loud you say well of course it's obvious but then we don't talk enough about it right so then the",
    "start": "1235799",
    "end": "1242080"
  },
  {
    "text": "next step would be well with all the cncf ecosystem there is set of features and projects that are going on the cncf",
    "start": "1242080",
    "end": "1248120"
  },
  {
    "text": "ecosystem and we want to build a platform that treats VMS and KU and containers equally perhaps kubernetes is",
    "start": "1248120",
    "end": "1254880"
  },
  {
    "text": "the more ideal platform to build such an sdn layer right we want to make sure",
    "start": "1254880",
    "end": "1260039"
  },
  {
    "text": "that someone configuring a firewall rule does not need to worry whether their application is a VM or container they",
    "start": "1260039",
    "end": "1265679"
  },
  {
    "text": "deployed as a VM today tomorrow they move into a container they don't change the firewall Dr",
    "start": "1265679",
    "end": "1272080"
  },
  {
    "text": "right okay so what is kdn then so Ken is a k based approach to Define deploy and",
    "start": "1272080",
    "end": "1279559"
  },
  {
    "text": "manage a network fabric that can support both VMS and container based",
    "start": "1279559",
    "end": "1285480"
  },
  {
    "text": "applications but any networking Fabric or ation system typically has a management plane a control plane and a",
    "start": "1285480",
    "end": "1292480"
  },
  {
    "text": "data plane so in the kdn world the krm based kuet is API server we treat that",
    "start": "1292480",
    "end": "1298480"
  },
  {
    "text": "as the management plane a k based controller ecosystem we use that as a",
    "start": "1298480",
    "end": "1303679"
  },
  {
    "text": "control plane and a k cni that is supporting container networking we",
    "start": "1303679",
    "end": "1310520"
  },
  {
    "text": "extend that to support VM networking now we have our data plane so this constitutes at a high level what we call",
    "start": "1310520",
    "end": "1316320"
  },
  {
    "text": "as kdn in this platform of course the bonus here is that kuber net is being",
    "start": "1316320",
    "end": "1321760"
  },
  {
    "text": "portable you build it once and you can deploy it in any platform that is going to be built off of",
    "start": "1321760",
    "end": "1328080"
  },
  {
    "text": "kubernetes right okay so again quite a bit of that was a bit abstract so maybe let's go a",
    "start": "1328080",
    "end": "1334720"
  },
  {
    "text": "little bit more into um concrete examples what is the difference between kdn and all the other uh you know uh",
    "start": "1334720",
    "end": "1341559"
  },
  {
    "text": "defined networking constructs that you're aware of so looks like most people are familiar",
    "start": "1341559",
    "end": "1347600"
  },
  {
    "text": "with sdn and and I assume you're familiar with what kubernetes networking is so let's call out what kdn how is it",
    "start": "1347600",
    "end": "1352960"
  },
  {
    "text": "any different so sdn typically focuses on VMS right kdn tries to focus on VMS",
    "start": "1352960",
    "end": "1359039"
  },
  {
    "text": "and containers equally every feature every networking feature every networking knob needs to be supported on",
    "start": "1359039",
    "end": "1364679"
  },
  {
    "text": "both types of workloads this API has to be the same how you select a workload would need to be the same etc etc right",
    "start": "1364679",
    "end": "1371480"
  },
  {
    "text": "kuet is networking of course focuses more on container networking there are many variations of",
    "start": "1371480",
    "end": "1377159"
  },
  {
    "text": "an API or API surface area for sdn so depending upon which vendor you go with I mean you can go with VMware NSX you",
    "start": "1377159",
    "end": "1383120"
  },
  {
    "text": "can go with Cisco ACI whatever they all have different their own sets of apis right with kdn we try to come up with a",
    "start": "1383120",
    "end": "1388840"
  },
  {
    "text": "consistent API surface what that means is that you want to do Nat you do Nat using a simple API the API is carried",
    "start": "1388840",
    "end": "1395320"
  },
  {
    "text": "over wherever kubernets can be deployed you want to do load balancing you use the service object or you use the Gateway API you want to do uh Network",
    "start": "1395320",
    "end": "1402480"
  },
  {
    "text": "policy or firewalls use a network policy API right so the goal is to try and have consistent apis no matter what kind of",
    "start": "1402480",
    "end": "1408600"
  },
  {
    "text": "of platform you're trying to build using kubernetes right of course that is borrowed as an advantage from kubernetes",
    "start": "1408600",
    "end": "1414000"
  },
  {
    "text": "networking stack multi homing so any sdn stack typically supports things like hey I",
    "start": "1414000",
    "end": "1420520"
  },
  {
    "text": "want to connect to vpca and vpcb in the on-prem world maybe it is VLAN a and",
    "start": "1420520",
    "end": "1425600"
  },
  {
    "text": "VLAN B and I need to connect to a management uh Network and a data plane Network right so these are very common",
    "start": "1425600",
    "end": "1432080"
  },
  {
    "text": "constructs in the sdn world in the kdn world we also support these constructs again for both VMS and containers there",
    "start": "1432080",
    "end": "1439080"
  },
  {
    "text": "could be containers that could be saying I want to connect to a data play Network and a management Network we support that",
    "start": "1439080",
    "end": "1444640"
  },
  {
    "text": "with kdn right in the kubernets networking world it's not natively supported there are some projects like",
    "start": "1444640",
    "end": "1450720"
  },
  {
    "text": "malus that do allow you to support additional networks but you always need to have the primary Network that we",
    "start": "1450720",
    "end": "1457360"
  },
  {
    "text": "start calling us a default pod Network okay and these projects are not feature Rich that you can't support load",
    "start": "1457360",
    "end": "1462480"
  },
  {
    "text": "balancing on them you can't support network policy on them yet okay so there some there's some missing gaps there",
    "start": "1462480",
    "end": "1469360"
  },
  {
    "text": "uh vendor specific end of integration so if you were to get an sdn stack from one of the vendors and then you want to use",
    "start": "1469360",
    "end": "1476159"
  },
  {
    "text": "it with a F5 load balancer or you want to use it with Palo Alto firewalls um",
    "start": "1476159",
    "end": "1481480"
  },
  {
    "text": "maybe the sdn stack supports that integration maybe they don't and you'll have to support it so it's very vendor specific depending upon which sdn stack",
    "start": "1481480",
    "end": "1487799"
  },
  {
    "text": "you go with versus in the kdan world we sort of abstract this out uh using apis",
    "start": "1487799",
    "end": "1493600"
  },
  {
    "text": "you can say Network policy API is actually implemented through palal to firewall for all you care right uh so",
    "start": "1493600",
    "end": "1500000"
  },
  {
    "text": "you abstracting out the vendor implementation or you can also support vendor specific apis if that is a need",
    "start": "1500000",
    "end": "1505919"
  },
  {
    "text": "for palto firewall or F5 can come up with their own krm apis that you can support on your platform so you support",
    "start": "1505919",
    "end": "1511600"
  },
  {
    "text": "both right there a lot of choice of course again this is something that we borrowed from the kuers networking stack",
    "start": "1511600",
    "end": "1517760"
  },
  {
    "text": "right feature Rich Network fabric for fall tolerance so a production worthy",
    "start": "1517760",
    "end": "1523279"
  },
  {
    "text": "SDM stack typically supports multi rack scenarios right you don't want to support just all your computer on one",
    "start": "1523279",
    "end": "1528760"
  },
  {
    "text": "rack right doesn't scale and also is not fall tolerant in the kdan world we support this using multicluster Concepts",
    "start": "1528760",
    "end": "1535600"
  },
  {
    "text": "that g spoke about we typically use one cluster as one fault domain and if that cluster dies you can always run it on",
    "start": "1535600",
    "end": "1540720"
  },
  {
    "text": "some other cluster okay and uh in the K networking world so there's a bunch of networking feature gaps there I mean",
    "start": "1540720",
    "end": "1547240"
  },
  {
    "text": "when you think about multicluster the only thing you can talk about is typically multicluster services like what about multicluster Network policy",
    "start": "1547240",
    "end": "1554039"
  },
  {
    "text": "what about multicluster connectivity there's a lot of gaps missing there right k networking it does support some",
    "start": "1554039",
    "end": "1559880"
  },
  {
    "text": "amount of multicluster networking but we think that there's a bit of lack of feature richness",
    "start": "1559880",
    "end": "1565279"
  },
  {
    "text": "there and another type of isolation is multi- tency so there multi homing and",
    "start": "1565279",
    "end": "1570480"
  },
  {
    "text": "multi- tency if you give the customer an ability to create multiple networks they",
    "start": "1570480",
    "end": "1575760"
  },
  {
    "text": "can deploy a workload to say I want the workload to connect to multiple networks that is multihoming I can deploy a",
    "start": "1575760",
    "end": "1582440"
  },
  {
    "text": "workload to connect to a network but different workloads connect to different networks so I have a red workload",
    "start": "1582440",
    "end": "1587640"
  },
  {
    "text": "connecting only to the red Network and a blue workload connecting only to the blue workload blue Network that's multi-tenancy right so this is also",
    "start": "1587640",
    "end": "1595159"
  },
  {
    "text": "something that we support natively in kdn any sdn this is a basic construct that is asked for in the kubernetes",
    "start": "1595159",
    "end": "1600720"
  },
  {
    "text": "networking world again this is not a native integration this is a missing piece in kubernets world so what we",
    "start": "1600720",
    "end": "1605960"
  },
  {
    "text": "really want to focus on here are the biggest gaps that we feel are are part",
    "start": "1605960",
    "end": "1611399"
  },
  {
    "text": "of the kubernets networking stack right the networking construct networking API that you can Define to say support multi",
    "start": "1611399",
    "end": "1617640"
  },
  {
    "text": "tency support support multi networking these are core principles for any sdn sta okay so let's assume you I hope all",
    "start": "1617640",
    "end": "1624480"
  },
  {
    "text": "of you have uh bought into what we're calling us Ken and now let's say you want to go build your own kdan how would",
    "start": "1624480",
    "end": "1630000"
  },
  {
    "text": "you go about do that right to do that first we want to try and Bridge the big gaps that we feel is not uh is is part",
    "start": "1630000",
    "end": "1637720"
  },
  {
    "text": "of the kubernetes networking stack right the two big pieces that we felt was missing was supporting multihoming and",
    "start": "1637720",
    "end": "1643760"
  },
  {
    "text": "multi-tenancy use cases so we want to try and introduce a networking API where you can Define what a network is and",
    "start": "1643760",
    "end": "1650640"
  },
  {
    "text": "then you can say workload a you can tell me which network you want to connect to and of course there is all sorts of",
    "start": "1650640",
    "end": "1655720"
  },
  {
    "text": "rback and I am policies around it so you can secure this right there are some efforts that Google and red hat and some",
    "start": "1655720",
    "end": "1661720"
  },
  {
    "text": "other companies um are starting off um on for this you know work that we want",
    "start": "1661720",
    "end": "1667240"
  },
  {
    "text": "to bring into kubernetes I have some links here so if you're interested in",
    "start": "1667240",
    "end": "1672279"
  },
  {
    "text": "seeing this become a reality I highly encourage you to follow these links and maybe participate more actively to bring",
    "start": "1672279",
    "end": "1678320"
  },
  {
    "text": "this dation okay okay so there's a lot of Imagine",
    "start": "1678320",
    "end": "1683600"
  },
  {
    "text": "This and imagine that uh I wouldn't blame you if you start thinking that we're just smoking something and not",
    "start": "1683600",
    "end": "1688720"
  },
  {
    "text": "really doing any real work so we did manage to build something using all these Core Concepts and here is how we",
    "start": "1688720",
    "end": "1694519"
  },
  {
    "text": "built it right so we started creating a networking layer kick right we created a",
    "start": "1694519",
    "end": "1700960"
  },
  {
    "text": "bare metal kubernetes cluster that we call as an infrastructure cluster and then we said that every kubernetes",
    "start": "1700960",
    "end": "1706559"
  },
  {
    "text": "cluster comes with its own sdn built-in sdn so this came with its own built-in sdn which provided",
    "start": "1706559",
    "end": "1713320"
  },
  {
    "text": "connectivity internal and external load balancing let's focus more on the internal I'll talk about why external",
    "start": "1713320",
    "end": "1718760"
  },
  {
    "text": "needs to be different internal load balancing is like cluster IP support right it comes with DNS support and then",
    "start": "1718760",
    "end": "1725159"
  },
  {
    "text": "it comes with firewall so now you have an in you have a built-in sdn available in this bare metal cluster then we",
    "start": "1725159",
    "end": "1730919"
  },
  {
    "text": "started supporting Cube word and supporting VM networking Concepts things like what happens when a VM migrates how",
    "start": "1730919",
    "end": "1737240"
  },
  {
    "text": "do we carry over the IP address from whichever node the VM was on to the new node where the VM is static IP",
    "start": "1737240",
    "end": "1743240"
  },
  {
    "text": "configuration these are things that VM customers are used to right so we started supporting VM networking constructs with Cube word once you start",
    "start": "1743240",
    "end": "1750960"
  },
  {
    "text": "enabling Cube word on a bare metal cluster we use those cubeb VMS to start supporting virtual clusters now this is",
    "start": "1750960",
    "end": "1758080"
  },
  {
    "text": "like a nested cluster concept a bit like Inception uh you've had a base be metal uh kubernetes cluster and now you have",
    "start": "1758080",
    "end": "1764399"
  },
  {
    "text": "virtual clusters that are hosted on that base bare bare metal kubernetes cluster and we have various types of virtual",
    "start": "1764399",
    "end": "1770360"
  },
  {
    "text": "clusters we have user facing ones which are used by customers to run their container workload we have service",
    "start": "1770360",
    "end": "1776480"
  },
  {
    "text": "virtual cluster where as a platform we can offer database as a first party service or AIML workloads as a first",
    "start": "1776480",
    "end": "1782640"
  },
  {
    "text": "party service and we have a edge virtual cluster which runs some networking functions right so each of these",
    "start": "1782640",
    "end": "1789760"
  },
  {
    "text": "clusters come with their own inbuilt sdn stack right they provide connectivity in U internal load balancing DNS firewall",
    "start": "1789760",
    "end": "1797039"
  },
  {
    "text": "Etc The Edge cluster is a little interesting it comes with its own sdn stack which means it provides",
    "start": "1797039",
    "end": "1802200"
  },
  {
    "text": "connectivity by default but we need more than that remember we're trying to deploy this platform in an on-prem world",
    "start": "1802200",
    "end": "1808320"
  },
  {
    "text": "we need some way to communicate with the on-prem world what that means is that we started building an external uh load",
    "start": "1808320",
    "end": "1814000"
  },
  {
    "text": "balancing nfv right and external load balancing nfv typically involves some sort of bgp communication to tell the",
    "start": "1814000",
    "end": "1819919"
  },
  {
    "text": "on-prem world how to attract traffic to the to the private CR okay we need DNS communication Etc uh then we built in a",
    "start": "1819919",
    "end": "1826919"
  },
  {
    "text": "VPN nfb we put a routing nfv and then we put a Nat nfv so all of these these are all",
    "start": "1826919",
    "end": "1833640"
  },
  {
    "text": "containerized right all of these put together formed an external network integration layer right now you already",
    "start": "1833640",
    "end": "1840519"
  },
  {
    "text": "see a few clusters here now you need the connectivity across all of these clusters you need VMS to talk to the outside world you need VMS to talk to",
    "start": "1840519",
    "end": "1847000"
  },
  {
    "text": "other VMS you need VMS to talk to containers that are running inside other VMS right so you need connectivity",
    "start": "1847000",
    "end": "1852200"
  },
  {
    "text": "everywhere across all of these clusters so we supported multicluster connectivity of course when you talk",
    "start": "1852200",
    "end": "1857600"
  },
  {
    "text": "from VM to another container you need multicluster Services you're exposing pods as as a load balancing as a load",
    "start": "1857600",
    "end": "1864480"
  },
  {
    "text": "balancing whip TOS a VM when you need multicluster security is the front end VM allowed to talk to a",
    "start": "1864480",
    "end": "1871279"
  },
  {
    "text": "middleware pod or a backend pod right remember customers can mix and match applications they are at various stages",
    "start": "1871279",
    "end": "1876639"
  },
  {
    "text": "of their Cloud native um you know Evolution so all of this puts together",
    "start": "1876639",
    "end": "1882200"
  },
  {
    "text": "is what we call as our kdn stack and one such kdn stack is what runs in one particular Zone",
    "start": "1882200",
    "end": "1888440"
  },
  {
    "text": "under a single Cloud multi tency unit so when G talked about an organization",
    "start": "1888440",
    "end": "1893720"
  },
  {
    "text": "that's one Cloud tency unit inside a single zone all of this in one zone you replicate across multiple zones because",
    "start": "1893720",
    "end": "1900399"
  },
  {
    "text": "it's already using multicluster it's just expanding the number of clusters that you need to communicate",
    "start": "1900399",
    "end": "1906000"
  },
  {
    "text": "with so what are our takeaways from this journey um since we are in a cncf",
    "start": "1906000",
    "end": "1911360"
  },
  {
    "text": "conference uh more in the context of cncf how did cncf ecosystem help us while we're trying to build this",
    "start": "1911360",
    "end": "1917440"
  },
  {
    "text": "platform we don't have to obviously start from scratch it's a feature Rich ecosystem we use Cube word we use celium as a base",
    "start": "1917440",
    "end": "1924399"
  },
  {
    "text": "for our data plane and we bridged all the gaps on top of it right that really helped with time to market now open and",
    "start": "1924399",
    "end": "1931360"
  },
  {
    "text": "St open standard and vendor agnostic so customers love that right you don't need to T be tied to Google because these are",
    "start": "1931360",
    "end": "1937480"
  },
  {
    "text": "all open uh ecosystem projects right a developer and operator mind share you",
    "start": "1937480",
    "end": "1943120"
  },
  {
    "text": "have a lot of talent out there who understand kubernetes and open source projects you don't need to be trained by",
    "start": "1943120",
    "end": "1948919"
  },
  {
    "text": "vendors so this allows customers to operate their private Cloud more efficiently you can hire Talent anywhere",
    "start": "1948919",
    "end": "1955960"
  },
  {
    "text": "around the world right how did it get in the way so obviously concubinas was",
    "start": "1955960",
    "end": "1961760"
  },
  {
    "text": "built for container management not VM management but not all customers in the on-prem world are container ready yet so",
    "start": "1961760",
    "end": "1968760"
  },
  {
    "text": "we have to bring in some VM constructs in and sort of nudge them towards moving towards a container more container",
    "start": "1968760",
    "end": "1973840"
  },
  {
    "text": "native world so some of the VM constructs were missing and we had to bridge that Gap multicluster constructs",
    "start": "1973840",
    "end": "1979559"
  },
  {
    "text": "which is core to our fall tolerant mechanism was also not very feature I mean we could use NCS but we need a",
    "start": "1979559",
    "end": "1986039"
  },
  {
    "text": "network policy that spans multiple clusters we need connectivity that spans multiple clusters of course there's mesh but not everything is L7 we need L4 L3",
    "start": "1986039",
    "end": "1993799"
  },
  {
    "text": "right um so that's our takeaway from building this product um I think we are",
    "start": "1993799",
    "end": "1999679"
  },
  {
    "text": "open for Q&A any questions that we can answer will be here gni yeah how do it from",
    "start": "1999679",
    "end": "2009039"
  },
  {
    "text": "yeah um anthos is a single kubernetes cluster typically that runs containers",
    "start": "2009039",
    "end": "2014480"
  },
  {
    "text": "sure you can play you can put VMS on it it doesn't apply it doesn't provide multi- tency constructs there's no VPC",
    "start": "2014480",
    "end": "2020760"
  },
  {
    "text": "there's no multi VLAN etc etc right we want to abstract that out with a virtual layer there's no virtual layer in anthos",
    "start": "2020760",
    "end": "2026600"
  },
  {
    "text": "right you can talk to the physical Network you can have one tunnel and you can put everything on that tunnel that's about it so this is a lot more",
    "start": "2026600",
    "end": "2033080"
  },
  {
    "text": "sophisticated yeah I like anos is like extension to a cluster as a service about this is like more like a cloud",
    "start": "2033080",
    "end": "2040000"
  },
  {
    "text": "where you have all these other",
    "start": "2040000",
    "end": "2043080"
  },
  {
    "text": "services but it comes packaged with storage with networking",
    "start": "2050119",
    "end": "2055760"
  },
  {
    "text": "and when you when you say about multicluster right we if we have um can",
    "start": "2056000",
    "end": "2062599"
  },
  {
    "text": "we have a hybrid cluster of uh GPU bare metal nodes and the worksh nodes which",
    "start": "2062599",
    "end": "2069118"
  },
  {
    "text": "can be used BYL type of a platform yes you can uh it's it's possible yes I don't is my mic",
    "start": "2069119",
    "end": "2077520"
  },
  {
    "text": "working can you hear me oh uh yeah I think yes you can you can do that and uh",
    "start": "2077520",
    "end": "2084480"
  },
  {
    "text": "um actually we all the user facing clusters are virtual clusters so if you want to use GPU for your AI workloads it",
    "start": "2084480",
    "end": "2090960"
  },
  {
    "text": "has been a virtual cluster and we we pass through GPU through those virtu machines are would the recommendation be",
    "start": "2090960",
    "end": "2098000"
  },
  {
    "text": "to keep the GPU nodes in the base cluster and then use those resources from every other cluster is that a",
    "start": "2098000",
    "end": "2104960"
  },
  {
    "text": "possibility to or what would",
    "start": "2104960",
    "end": "2108640"
  },
  {
    "text": "be",
    "start": "2115720",
    "end": "2118720"
  },
  {
    "text": "ASP Okay so we don't have to create vgpu VMS but we can tap the bare metal",
    "start": "2125599",
    "end": "2133000"
  },
  {
    "text": "clusters gpus directly from the virtual clusters is that",
    "start": "2133000",
    "end": "2139560"
  },
  {
    "text": "that I I can't hear you at all you want to use",
    "start": "2143079",
    "end": "2149160"
  },
  {
    "text": "this maybe we can use yeah I think the I mean the infra",
    "start": "2154880",
    "end": "2160880"
  },
  {
    "text": "cluster is not like the bareal cluster is not exposed to any users okay uh and the main reason for that just like a Google Borg is not like visible to users",
    "start": "2160880",
    "end": "2168000"
  },
  {
    "text": "that's where we run all these like workflows inside Google like container workflows in Google right it's not exposed to users so we apply a same kind",
    "start": "2168000",
    "end": "2174760"
  },
  {
    "text": "of uh Solutions there right so yeah if you want to use GPU in your kind of like",
    "start": "2174760",
    "end": "2179880"
  },
  {
    "text": "say accurance cluster it will be a virtual cluster and then uh and then the GPU on the bare midal cluster will be",
    "start": "2179880",
    "end": "2185520"
  },
  {
    "text": "passed through to the VM that's uh creating that no for the virtual cluster so then you can use GPU as if it they're",
    "start": "2185520",
    "end": "2192119"
  },
  {
    "text": "like running on bare middle because you don't lose any of the performance stuff there yeah but if you pass through uh if",
    "start": "2192119",
    "end": "2198440"
  },
  {
    "text": "it is uh Nvidia right and if we do pass through or any kind of vgpu then we have",
    "start": "2198440",
    "end": "2204440"
  },
  {
    "text": "that uh uh hit in the performance right we need to have a separate driver",
    "start": "2204440",
    "end": "2210960"
  },
  {
    "text": "there so performance it's it's direct path through so you have direct IO basically there so",
    "start": "2210960",
    "end": "2217800"
  },
  {
    "text": "oh okay yeah hi uh I have a question on",
    "start": "2217800",
    "end": "2223359"
  },
  {
    "text": "multihoming so how do you do load balancing and network policies for the secondary interface on the port like I'm",
    "start": "2223359",
    "end": "2229880"
  },
  {
    "text": "assuming that you have your own um yaml spec defining the policies uh kubernetes",
    "start": "2229880",
    "end": "2237680"
  },
  {
    "text": "doesn't have Services concept for the secondary interface so does it should not translate to a service on kubernets",
    "start": "2237680",
    "end": "2244560"
  },
  {
    "text": "so can you explain more yeah so when I mentioned that there are projects like malas that support additional networks",
    "start": "2244560",
    "end": "2251520"
  },
  {
    "text": "but are not future Rich this is what I meant yeah exactly so you can provide connectivity but you can't provide that",
    "start": "2251520",
    "end": "2257079"
  },
  {
    "text": "secondary interface as a backend to a load balancer correct right so we supported all of that using this multi",
    "start": "2257079",
    "end": "2263560"
  },
  {
    "text": "networking API and that's part of this kdn stack and that's what we're trying to bring to kubernetes open source so",
    "start": "2263560",
    "end": "2270720"
  },
  {
    "text": "I'm assuming that the front end would look like a kubernetes object but the back end would be an implementation of your own is that correct Yeah so",
    "start": "2270720",
    "end": "2276960"
  },
  {
    "text": "basically now when you define a load balancer you have to say I want a load balancer on this network yes right and",
    "start": "2276960",
    "end": "2282160"
  },
  {
    "text": "here are my backends go find if these back ends have a leg in that network if they have a leg in the network use that",
    "start": "2282160",
    "end": "2287599"
  },
  {
    "text": "interface as my back end as my endpoint right so you identify um if you have",
    "start": "2287599",
    "end": "2293520"
  },
  {
    "text": "frontend pods that are supposed to be in red and blue right and uh red network is management and blue network is data",
    "start": "2293520",
    "end": "2299880"
  },
  {
    "text": "plane you can define a load balancing service for the red Network and say go find these front end pods for the red",
    "start": "2299880",
    "end": "2306040"
  },
  {
    "text": "Network so our controllers will go figure out that these pods have red and blue but use the red networks interfaces",
    "start": "2306040",
    "end": "2312319"
  },
  {
    "text": "and IP addresses as an endpoint in the endpoint slies for that load balancing okay so now the next part of",
    "start": "2312319",
    "end": "2319560"
  },
  {
    "text": "the question so the network policies has to be implemented per cni so the it",
    "start": "2319560",
    "end": "2325720"
  },
  {
    "text": "depends on what cni you use as the back end yes that cni will have its own implementation of the network policies",
    "start": "2325720",
    "end": "2332560"
  },
  {
    "text": "so your network policies spec cannot be generic right it has to be you you can",
    "start": "2332560",
    "end": "2337599"
  },
  {
    "text": "have some kind of an overlay network uh like what you mentioned as multitenant",
    "start": "2337599",
    "end": "2342640"
  },
  {
    "text": "but you can only support like an OBS or ovn or Calico or a CDM but yeah like",
    "start": "2342640",
    "end": "2348839"
  },
  {
    "text": "other cnis it has to be it's work in progress is that correct yeah so we use celum as a base right but what we expose",
    "start": "2348839",
    "end": "2356200"
  },
  {
    "text": "to customers is remember that I spoke about multicluster Network policy there's nothing like multicluster",
    "start": "2356200",
    "end": "2361359"
  },
  {
    "text": "Network policy today cor so we defined a policy called project Network policy it's like multicluster Network policy",
    "start": "2361359",
    "end": "2368000"
  },
  {
    "text": "that gets translated by our controllers into individual Network policies for each cluster and these are just",
    "start": "2368000",
    "end": "2373960"
  },
  {
    "text": "kubernetes Network policies but when we Define those Network policies we add annotations to say which network is this",
    "start": "2373960",
    "end": "2380000"
  },
  {
    "text": "network policy for and that our controllers will parse and identify that if I have a pod again with red and blue",
    "start": "2380000",
    "end": "2386680"
  },
  {
    "text": "networks go go put this network policy only for the red Network end points okay",
    "start": "2386680",
    "end": "2391920"
  },
  {
    "text": "got it thanks think we're hi um we're over time",
    "start": "2391920",
    "end": "2397760"
  },
  {
    "text": "I can take one more question yeah um sorry thanks for the great talk uh I think it painted a great picture altoe",
    "start": "2397760",
    "end": "2405240"
  },
  {
    "text": "um so you're talking about multiple clusters here so is there like some sort of a placement API that decides so what",
    "start": "2405240",
    "end": "2411520"
  },
  {
    "text": "I'm imagining is when I deploy this platform I would see a gcp account of",
    "start": "2411520",
    "end": "2417319"
  },
  {
    "text": "sorts with a VPC that I can create so when a user comes and creates workloads",
    "start": "2417319",
    "end": "2423599"
  },
  {
    "text": "how do you decide which underlying kubernetes cluster that goes to so do you have a heuristic use to distribute",
    "start": "2423599",
    "end": "2430319"
  },
  {
    "text": "everything because that I don't think that piece exists in the open source world today yeah so I think there's a",
    "start": "2430319",
    "end": "2436119"
  },
  {
    "text": "scheduling component to it and there's a networking component I assume you're asking about the scheduling component",
    "start": "2436119",
    "end": "2441599"
  },
  {
    "text": "right yeah okay you want to take it or should I take uh so basically when you deploy a VM we have only one bare metal",
    "start": "2441599",
    "end": "2448359"
  },
  {
    "text": "cluster per zone so there's no decision that needs to be made you just need to figure out in the bare metal cluster where does that BM fit so so it's it's",
    "start": "2448359",
    "end": "2456960"
  },
  {
    "text": "just like Cloud right there's one big server form okay the only difference is when you deploy containers or pods right",
    "start": "2456960",
    "end": "2463680"
  },
  {
    "text": "so there we have multiple options here we have a concept that says hey we can you a user can create multiple user",
    "start": "2463680",
    "end": "2469880"
  },
  {
    "text": "clusters and they can span their project or expand their project across those user clusters and you can Define which",
    "start": "2469880",
    "end": "2476160"
  },
  {
    "text": "user cluster you can go towards this is like more like Fleet Management right uh but I think we're working towards a more",
    "start": "2476160",
    "end": "2482240"
  },
  {
    "text": "common API um uh schema where you can say actually there are a few options",
    "start": "2482240",
    "end": "2487400"
  },
  {
    "text": "here we can say hey deploy we don't have um a mechanism yet to to automatically",
    "start": "2487400",
    "end": "2494680"
  },
  {
    "text": "detect which user cluster to go deploy because they could be a test production development Etc right we also have some",
    "start": "2494680",
    "end": "2501680"
  },
  {
    "text": "plans to support a whole user cluster inside a project just like how gka and eks and AWS works right so scheduling",
    "start": "2501680",
    "end": "2509599"
  },
  {
    "text": "across user clusters is a very customer um unique this thing depending on how",
    "start": "2509599",
    "end": "2515359"
  },
  {
    "text": "the customers are deploying those user clusters right so we'll have to wait for some customer feedback to see if you need to do something there but VM",
    "start": "2515359",
    "end": "2521839"
  },
  {
    "text": "scheduling is pretty straightforward there's only one infra cluster got it um",
    "start": "2521839",
    "end": "2527079"
  },
  {
    "text": "so you're talking about cubert and celum Os I don't think supports cubert like so",
    "start": "2527079",
    "end": "2533560"
  },
  {
    "text": "is there a plan on open sourcing some canot speak for yeah we can we can",
    "start": "2533560",
    "end": "2540359"
  },
  {
    "text": "talk maybe here thank this is our yeah all right",
    "start": "2540359",
    "end": "2545400"
  },
  {
    "text": "thanks for all the questions y [Applause]",
    "start": "2545400",
    "end": "2551659"
  }
]