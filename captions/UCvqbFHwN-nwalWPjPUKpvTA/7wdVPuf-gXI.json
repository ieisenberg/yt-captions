[
  {
    "text": "uh hi everybody uh so welcome to the cluster API tutorial uh you're all very",
    "start": "1620",
    "end": "7140"
  },
  {
    "text": "welcome uh I'm Killian I'm urad hi I'm Stefan I'm Jack",
    "start": "7140",
    "end": "12900"
  },
  {
    "text": "and Shivani uh is supposed to be presenting with she couldn't be here due to travel restrictions we're going to",
    "start": "12900",
    "end": "18600"
  },
  {
    "text": "have a video from her in a few minutes so a couple of announcements um there's prerequisites on the tutorial",
    "start": "18600",
    "end": "25740"
  },
  {
    "text": "at the link if you've all run through them can I just get a sense in the room can you put up your hand if you have done the",
    "start": "25740",
    "end": "31260"
  },
  {
    "text": "prerequisites okay good showing um so we're going to",
    "start": "31260",
    "end": "37260"
  },
  {
    "text": "take a few minutes now to just let people run through the prerequisites a couple of important things uh if you're",
    "start": "37260",
    "end": "42600"
  },
  {
    "text": "running on Fedora uh on your laptop or whatever if you go to our troubleshooting guys",
    "start": "42600",
    "end": "48120"
  },
  {
    "text": "there's a specific setting you've got to set in Fedora the tutorial can be unstable on Fedora because of yeah",
    "start": "48120",
    "end": "53820"
  },
  {
    "text": "system limits so please just check that out also for Windows if you're using Docker for Windows to run this tutorial",
    "start": "53820",
    "end": "60120"
  },
  {
    "text": "uh you won't be using Docker for Windows 4.10.1 newer versions are very unstable",
    "start": "60120",
    "end": "67500"
  },
  {
    "text": "for reasons we didn't figure out um so yeah so let's go through some of",
    "start": "67500",
    "end": "73619"
  },
  {
    "text": "the uh basically the prerequisites just to talk through that also if you have a",
    "start": "73619",
    "end": "79680"
  },
  {
    "text": "dark web account Docker login will help prevent you from getting rate Limited",
    "start": "79680",
    "end": "84900"
  },
  {
    "text": "uh yeah so just to repeat what Jack said there um if you yeah we will get if you're",
    "start": "84900",
    "end": "90119"
  },
  {
    "text": "pulling the images which is part of the prerequisites uh please do log into Docker because otherwise uh there's many",
    "start": "90119",
    "end": "96240"
  },
  {
    "text": "people call them from the same IP is probably going to Limited",
    "start": "96240",
    "end": "101720"
  },
  {
    "text": "so yeah so the prerequisites are up there on screen they're also on the repo this is the",
    "start": "103020",
    "end": "108780"
  },
  {
    "text": "link to the repo see if any need to type it in it's also on the shared entry the",
    "start": "108780",
    "end": "116040"
  },
  {
    "text": "description so it's there the CPU limits uh RAM 32",
    "start": "116040",
    "end": "122399"
  },
  {
    "text": "gigs of disk space you need to install Docker Cube cuddle kind cluster cuttle",
    "start": "122399",
    "end": "129239"
  },
  {
    "text": "and Hound all of the instructions for installing those things are in the guide and there will be people circling around",
    "start": "129239",
    "end": "134760"
  },
  {
    "text": "the room for the next few minutes just if you've got any trouble with that yeah yeah let's go just",
    "start": "134760",
    "end": "142980"
  },
  {
    "text": "going on yep so yeah if you have trouble just put up your hands and somebody will come to you",
    "start": "142980",
    "end": "150840"
  },
  {
    "text": "want to say something about it do you want to say something yeah so",
    "start": "150840",
    "end": "156060"
  },
  {
    "text": "we'll do this for uh the next five to ten minutes and we'll time box it and then we'll get into the full tutorial",
    "start": "156060",
    "end": "162800"
  },
  {
    "text": "let's see",
    "start": "165540",
    "end": "167959"
  },
  {
    "text": "foreign",
    "start": "173879",
    "end": "176120"
  },
  {
    "text": "problems",
    "start": "219300",
    "end": "222260"
  },
  {
    "text": "so just for anybody just joining us we're going through the prerequisites currently for the next about five",
    "start": "226860",
    "end": "231900"
  },
  {
    "text": "minutes um if you haven't already managed to run through them",
    "start": "231900",
    "end": "236420"
  },
  {
    "text": "good",
    "start": "264600",
    "end": "267600"
  },
  {
    "text": "foreign",
    "start": "289259",
    "end": "292220"
  },
  {
    "text": "foreign",
    "start": "342000",
    "end": "344539"
  },
  {
    "text": "thank you I think we can get started two minutes",
    "start": "367440",
    "end": "373820"
  },
  {
    "text": "would this be helpful no",
    "start": "397580",
    "end": "403100"
  },
  {
    "text": "I'll just stand right next to you",
    "start": "410759",
    "end": "413900"
  },
  {
    "text": "too fresh",
    "start": "420840",
    "end": "423620"
  },
  {
    "text": "okay",
    "start": "449639",
    "end": "452060"
  },
  {
    "text": "okay so uh there'll be people circulating through the room throughout this tutorial put your hand up if you",
    "start": "455699",
    "end": "460800"
  },
  {
    "text": "want help with any of the steps if you still haven't passed the prereqs uh please yeah ask for help later on if you",
    "start": "460800",
    "end": "467160"
  },
  {
    "text": "need it uh so now we're going to hear from Shivani Shivan is going to give us a quick overview of cluster API as a project uh what the",
    "start": "467160",
    "end": "473340"
  },
  {
    "text": "project is doing and yeah let's hear from Shivani",
    "start": "473340",
    "end": "479419"
  },
  {
    "text": "hello all are very well this one yes",
    "start": "489060",
    "end": "495660"
  },
  {
    "text": "yes thank you no worries",
    "start": "495660",
    "end": "502379"
  },
  {
    "text": "um",
    "start": "502379",
    "end": "504500"
  },
  {
    "text": "[Music] okay",
    "start": "534110",
    "end": "539660"
  },
  {
    "text": "is that is that loud enough a little louder better",
    "start": "540060",
    "end": "544760"
  },
  {
    "text": "way up there too expensive",
    "start": "565560",
    "end": "571019"
  },
  {
    "text": "is your headphones yes",
    "start": "571019",
    "end": "577160"
  },
  {
    "text": "thank you",
    "start": "585260",
    "end": "588380"
  },
  {
    "text": "foreign",
    "start": "701399",
    "end": "704399"
  },
  {
    "text": "foreign",
    "start": "707399",
    "end": "710399"
  },
  {
    "text": "tooling is very difficult there are several tools that solves a",
    "start": "712760",
    "end": "719940"
  },
  {
    "text": "part of the problem and this is that is intentional like as the Sig which is",
    "start": "719940",
    "end": "725640"
  },
  {
    "text": "focusing on building this tutorial wants to solve the prop pieces of the problem and never tries to build one solution",
    "start": "725640",
    "end": "732660"
  },
  {
    "text": "and even not try to build one solution that fit all problems that's because",
    "start": "732660",
    "end": "737820"
  },
  {
    "text": "they don't believe that will actually have Traction in the community as everybody's needs are so different",
    "start": "737820",
    "end": "744980"
  },
  {
    "text": "cluster management is really difficult and one of the pieces that difficult is",
    "start": "744980",
    "end": "751200"
  },
  {
    "text": "cluster creation so we have cubarium for that piece but another uh another part",
    "start": "751200",
    "end": "757019"
  },
  {
    "text": "of problem is managing infrastructure so even uh if you have bootstrapping tools",
    "start": "757019",
    "end": "763920"
  },
  {
    "text": "like Cube ADM they assume that you already have physical or virtual machines to run cubadian commands on top",
    "start": "763920",
    "end": "771540"
  },
  {
    "text": "of it but to get this environment we should have our infrastructure specific",
    "start": "771540",
    "end": "777660"
  },
  {
    "text": "knowledge also we don't have any common interface",
    "start": "777660",
    "end": "783060"
  },
  {
    "text": "until cluster API that ties together the infrastructure around tools like cubeadm",
    "start": "783060",
    "end": "790200"
  },
  {
    "text": "to provide you a sort of holistic way to set up and manage the kubernetes",
    "start": "790200",
    "end": "795660"
  },
  {
    "text": "Clusters so like till here we have discussed a",
    "start": "795660",
    "end": "800700"
  },
  {
    "text": "bunch of problems but now we'll see how we can solve it using the cluster API",
    "start": "800700",
    "end": "807540"
  },
  {
    "text": "first and foremost like cluster API is a declarative API and prior to this the",
    "start": "807540",
    "end": "814260"
  },
  {
    "text": "kubernetes ecosystem didn't really have a way to represent clusters and machine",
    "start": "814260",
    "end": "819360"
  },
  {
    "text": "inside of a kubernetes cluster itself it not only helps in creating and",
    "start": "819360",
    "end": "825839"
  },
  {
    "text": "managing kubernetes objects but also provides declarative apis to orchestrate",
    "start": "825839",
    "end": "832680"
  },
  {
    "text": "the underlying infrastructure components we really think that it's important to",
    "start": "832680",
    "end": "840480"
  },
  {
    "text": "have the pluggable architecture well we don't want to provide common logic to",
    "start": "840480",
    "end": "846060"
  },
  {
    "text": "solve these use cases for people it's not gonna be one size to fit all problems so one place where it's really",
    "start": "846060",
    "end": "854519"
  },
  {
    "text": "important to have a pluggable architecture is the level where we interact with infrastructure provider",
    "start": "854519",
    "end": "860220"
  },
  {
    "text": "for infra provisioning or management we should have a provider abstraction where",
    "start": "860220",
    "end": "866880"
  },
  {
    "text": "we can plug in support for any new cloud provider or bare metal provided",
    "start": "866880",
    "end": "873660"
  },
  {
    "text": "providers relatively easily finally we really want to be able to enable common",
    "start": "873660",
    "end": "879540"
  },
  {
    "text": "tooling to manage cluster across many different environments",
    "start": "879540",
    "end": "885540"
  },
  {
    "text": "so now we understand how cluster API helps and what is cluster API but let's",
    "start": "885540",
    "end": "891600"
  },
  {
    "text": "now look at the official definition of cluster API we also call it as gappy and",
    "start": "891600",
    "end": "897540"
  },
  {
    "text": "it's a project of sick cluster lifecycle it uses kubernetes to manage kubernetes",
    "start": "897540",
    "end": "903540"
  },
  {
    "text": "which is also referred by kapi logo Turtle all the way down and by official",
    "start": "903540",
    "end": "910380"
  },
  {
    "text": "definition cluster API is a kubernetes project to bring declarative kubernetes",
    "start": "910380",
    "end": "916800"
  },
  {
    "text": "style apis to not only manage kubernetes objects like pod deployment but also",
    "start": "916800",
    "end": "923279"
  },
  {
    "text": "useful in Creation in cluster creation configuration and management",
    "start": "923279",
    "end": "930079"
  },
  {
    "text": "so have we are done with cluster API basic introduction now let's look take a",
    "start": "930180",
    "end": "936420"
  },
  {
    "text": "look at uh next item from our agenda so to establish a common language that you",
    "start": "936420",
    "end": "942480"
  },
  {
    "text": "and I can use throughout the remainder of this tutorial I would like to provide you some definitions for frequently used",
    "start": "942480",
    "end": "948540"
  },
  {
    "text": "term so first is management cluster management cluster is a kubernetes",
    "start": "948540",
    "end": "954060"
  },
  {
    "text": "cluster on which and to which the cluster API components have been installed",
    "start": "954060",
    "end": "961040"
  },
  {
    "text": "this enables the management cluster to manage the life cycle of other kubernetes clusters that are known as",
    "start": "961040",
    "end": "968459"
  },
  {
    "text": "workload clusters and this is the place where we uh like deploy our workloads",
    "start": "968459",
    "end": "974519"
  },
  {
    "text": "our app and our application we also have another term like",
    "start": "974519",
    "end": "980220"
  },
  {
    "text": "self-hosted management cluster there are type of management clusters that manages uh itself",
    "start": "980220",
    "end": "986579"
  },
  {
    "text": "so to accomplish this uh life cycle management cluster API also leverages",
    "start": "986579",
    "end": "992880"
  },
  {
    "text": "the concept of a provider providers have names like cluster API",
    "start": "992880",
    "end": "998040"
  },
  {
    "text": "provider for AWS for cluster API provider for Azure and similarly vsphere",
    "start": "998040",
    "end": "1003199"
  },
  {
    "text": "and many more these providers are also known by their acronyms like Kappa cap z cap V and so",
    "start": "1003199",
    "end": "1011420"
  },
  {
    "text": "on so they provide the support for an integration with a particular",
    "start": "1011420",
    "end": "1017180"
  },
  {
    "text": "infrastructure platform and in the last of this glossary section",
    "start": "1017180",
    "end": "1022759"
  },
  {
    "text": "we discuss what all things comes under inside cluster life",
    "start": "1022759",
    "end": "1028339"
  },
  {
    "text": "cycle management so it includes creation and deletion of your kubernetes cluster including the underlying infrastructure",
    "start": "1028339",
    "end": "1036280"
  },
  {
    "text": "managing the underlying infrastructure scaling up scaling up and down the",
    "start": "1036280",
    "end": "1041298"
  },
  {
    "text": "number of nodes in the cluster and upgrading clusters to another kubernetes version",
    "start": "1041299",
    "end": "1048260"
  },
  {
    "text": "so now let's see how does cluster API work but before directly jumping into",
    "start": "1048260",
    "end": "1054380"
  },
  {
    "text": "the cluster API functionality I want to give a brief overview of kubernetes some",
    "start": "1054380",
    "end": "1059720"
  },
  {
    "text": "of the kubernetes concepts that are heavily used in cluster API so at the core of kubernetes is a",
    "start": "1059720",
    "end": "1067580"
  },
  {
    "text": "control Loop we also call it reconciliation room that is responsible for reconcile reconciling the desired",
    "start": "1067580",
    "end": "1074600"
  },
  {
    "text": "State and the actual State reconciling desired State and actual",
    "start": "1074600",
    "end": "1080539"
  },
  {
    "text": "State simply uh means changing actual state uh to look like the desired one",
    "start": "1080539",
    "end": "1088520"
  },
  {
    "text": "the desired state is the intended uh intended state of the system which is",
    "start": "1088520",
    "end": "1095059"
  },
  {
    "text": "specified by the user and actual State refers to the state in which your system is actually in",
    "start": "1095059",
    "end": "1100760"
  },
  {
    "text": "the controllers are the components that Implement those uh control Loop which",
    "start": "1100760",
    "end": "1106460"
  },
  {
    "text": "modifies the actual State based on the desired one the kubernetes way to specify the",
    "start": "1106460",
    "end": "1113720"
  },
  {
    "text": "desired state is through objects called custom resource definitions the cids",
    "start": "1113720",
    "end": "1120260"
  },
  {
    "text": "have a spec object representing the star desired State and Status object",
    "start": "1120260",
    "end": "1125660"
  },
  {
    "text": "representing the actual State along with crds we Implement their controllers and",
    "start": "1125660",
    "end": "1131360"
  },
  {
    "text": "cluster API uses these crds and controller to extend kubernetes to",
    "start": "1131360",
    "end": "1136400"
  },
  {
    "text": "manage the life cycle of clusters basically users want to specify the",
    "start": "1136400",
    "end": "1142760"
  },
  {
    "text": "configuration of clusters and based on this configuration let the",
    "start": "1142760",
    "end": "1148340"
  },
  {
    "text": "controllers implemented by cluster API to create and manage the cluster this",
    "start": "1148340",
    "end": "1153799"
  },
  {
    "text": "way the building blocks provided by kubernetes in the form of crds and controllers are used to create or manage",
    "start": "1153799",
    "end": "1161299"
  },
  {
    "text": "your new kubernetes clusters let's see uh this again uh for more",
    "start": "1161299",
    "end": "1166520"
  },
  {
    "text": "understanding with this diagram here uh we have a management cluster uh on which",
    "start": "1166520",
    "end": "1172160"
  },
  {
    "text": "our we are running our cluster ePay components and we have one client so the",
    "start": "1172160",
    "end": "1178160"
  },
  {
    "text": "user specifies the declarative cluster configuration in the form of crd to the",
    "start": "1178160",
    "end": "1183380"
  },
  {
    "text": "management cluster the cluster API controller then present in the management cluster read those",
    "start": "1183380",
    "end": "1188780"
  },
  {
    "text": "configurations uh available in crd and create new kubernetes cluster based on",
    "start": "1188780",
    "end": "1194299"
  },
  {
    "text": "that configuration this way Cappy makes the actual state of the system same as",
    "start": "1194299",
    "end": "1199700"
  },
  {
    "text": "the desired state now let's see what all uh cluster API",
    "start": "1199700",
    "end": "1204860"
  },
  {
    "text": "components are running inside management cluster so the controllers are divided",
    "start": "1204860",
    "end": "1210200"
  },
  {
    "text": "into four types of Provider based on their responsibility and each provider has a manager which runs their",
    "start": "1210200",
    "end": "1216320"
  },
  {
    "text": "respective controller so in uh cluster API components we have four iPhone",
    "start": "1216320",
    "end": "1222020"
  },
  {
    "text": "managers core controller manager bootstrap controller manager infrastructure controller manager and",
    "start": "1222020",
    "end": "1227900"
  },
  {
    "text": "the last one control plane controller manager now we'll see uh in brief like what all",
    "start": "1227900",
    "end": "1234799"
  },
  {
    "text": "these uh these manager contain with the help of this diagram",
    "start": "1234799",
    "end": "1241100"
  },
  {
    "text": "so core provider manager infrastructure provider manager control plane provider manager and bootstrap provider manager",
    "start": "1241100",
    "end": "1247660"
  },
  {
    "text": "they are they contain some type of crds and their definition so the core one",
    "start": "1247660",
    "end": "1254059"
  },
  {
    "text": "have four type of crds cluster machine deployment machine set and machine crds",
    "start": "1254059",
    "end": "1261220"
  },
  {
    "text": "similarly infrastructure provider contain inpra infraspecific controllers that are responsible for connecting with",
    "start": "1261220",
    "end": "1268400"
  },
  {
    "text": "the infrastructure beat cloud or bare metal servers whereas in the middle you",
    "start": "1268400",
    "end": "1273620"
  },
  {
    "text": "can see control plane provider and it's responsible for initializing your control plane and bootstrap provider",
    "start": "1273620",
    "end": "1281179"
  },
  {
    "text": "finally responsible for bootstrapping other worker nodes into our kubernetes cluster",
    "start": "1281179",
    "end": "1286880"
  },
  {
    "text": "I think it's a big uh bit high level view but now let's understand how these",
    "start": "1286880",
    "end": "1292340"
  },
  {
    "text": "mentioned crds work with each other so in the next few slides I'll explain",
    "start": "1292340",
    "end": "1298340"
  },
  {
    "text": "each of the uh cids mentioned uh in the previous slides and their interaction",
    "start": "1298340",
    "end": "1305179"
  },
  {
    "text": "first we'll take a look at cluster CRT it's a root of whole thing and",
    "start": "1305179",
    "end": "1310460"
  },
  {
    "text": "responsible for maintaining the cluster life cycle environment specific configurations like pod serviceiders and",
    "start": "1310460",
    "end": "1318679"
  },
  {
    "text": "DNS domain goes into the cluster oh sorry uh DNS DNS domain goes into the",
    "start": "1318679",
    "end": "1326299"
  },
  {
    "text": "cluster specification next we have infrastructure cluster infra can be AWS",
    "start": "1326299",
    "end": "1332900"
  },
  {
    "text": "Azure vsphere or even bring your own host and specifications are under infra",
    "start": "1332900",
    "end": "1338780"
  },
  {
    "text": "cluster are based on underlying infrastructure and have details required for that particular environment",
    "start": "1338780",
    "end": "1345140"
  },
  {
    "text": "next we have configurations for initializing your control plane by",
    "start": "1345140",
    "end": "1350299"
  },
  {
    "text": "default Cappy supports cubeadm and it's related uh specifications like init and",
    "start": "1350299",
    "end": "1356600"
  },
  {
    "text": "join configuration are mentioned in control plane crd so once control plane is initialized we",
    "start": "1356600",
    "end": "1363919"
  },
  {
    "text": "need machine deployments that defines machine for the worker nodes so that's",
    "start": "1363919",
    "end": "1369320"
  },
  {
    "text": "how the these all these crds interact with each other and dependent like their",
    "start": "1369320",
    "end": "1376820"
  },
  {
    "text": "flow is streamlined and they are dependent how they are dependent on each other next we discuss about uh cluster",
    "start": "1376820",
    "end": "1386059"
  },
  {
    "text": "class and managed topology it's a huge huge ux Improvement on how end users",
    "start": "1386059",
    "end": "1394179"
  },
  {
    "text": "interact with cluster API and it basically reduces customers surface area",
    "start": "1394179",
    "end": "1399919"
  },
  {
    "text": "of interaction this sole idea behind cluster class is we just want to define",
    "start": "1399919",
    "end": "1406039"
  },
  {
    "text": "the structure of a cluster or the topology of a cluster once and reuse it",
    "start": "1406039",
    "end": "1412220"
  },
  {
    "text": "across multiple clusters so that we just have one object called the cluster",
    "start": "1412220",
    "end": "1418159"
  },
  {
    "text": "object in which we will have a topology section which then can be used to Stamp",
    "start": "1418159",
    "end": "1423200"
  },
  {
    "text": "Out clusters that look alike so that would look something like this uh like this on the screen so if you see",
    "start": "1423200",
    "end": "1430820"
  },
  {
    "text": "on the left hand side we defined a cluster class it's a collection of templates and when we provide different",
    "start": "1430820",
    "end": "1437360"
  },
  {
    "text": "managed topologies to the cluster class like we have here cluster a man is topology and cluster B manage topology",
    "start": "1437360",
    "end": "1444500"
  },
  {
    "text": "then they refer it then the cluster then they refer this cluster class to create two different cluster object which looks",
    "start": "1444500",
    "end": "1451340"
  },
  {
    "text": "alike but also different in their own way so that's how we can leverage uh the",
    "start": "1451340",
    "end": "1459200"
  },
  {
    "text": "concept of cluster class to create different clusters which looks alike so that's all basically with the cluster",
    "start": "1459200",
    "end": "1466760"
  },
  {
    "text": "API fundamentals and now with other fellows fellow speakers will start with",
    "start": "1466760",
    "end": "1473480"
  },
  {
    "text": "Hands-On uh Hands-On part thank you everyone",
    "start": "1473480",
    "end": "1478960"
  },
  {
    "text": "okay I just like to really thank Shivani for that video um and yeah it's really nice to have her",
    "start": "1481760",
    "end": "1487400"
  },
  {
    "text": "here in some way um so I guess at this point have we got hands for who's done the prereqs have a",
    "start": "1487400",
    "end": "1494059"
  },
  {
    "text": "lot of people managed to do them during the course anybody having serious problems that they'd like help",
    "start": "1494059",
    "end": "1499580"
  },
  {
    "text": "with at this point again hand up any time somebody will come to you um so yeah for those of you that have",
    "start": "1499580",
    "end": "1505940"
  },
  {
    "text": "your Docker kind everything set up it's time to get your first cluster running so let's see what that looks like so uh",
    "start": "1505940",
    "end": "1514159"
  },
  {
    "text": "at the bottom of the prereqs if you've got that open on the tutorial there's a link to the next section which is",
    "start": "1514159",
    "end": "1519260"
  },
  {
    "text": "creating your first cluster or cluster API make sure I've got my command line here",
    "start": "1519260",
    "end": "1525820"
  },
  {
    "text": "all right",
    "start": "1528520",
    "end": "1531700"
  },
  {
    "text": "okay so uh the prerequisites mentioned this a bit but there's going to be a cluster you're going to set up using",
    "start": "1534320",
    "end": "1539960"
  },
  {
    "text": "Docker infrastructure so you're going to set up kubernetes clusters where each node is running in a Docker container on",
    "start": "1539960",
    "end": "1545299"
  },
  {
    "text": "your local machine so we have a cluster API provider called CAP D cluster API",
    "start": "1545299",
    "end": "1550520"
  },
  {
    "text": "provider Docker infrastructure that manages this for us you can also use",
    "start": "1550520",
    "end": "1555799"
  },
  {
    "text": "cluster API to set a clusters up across any number of clouds bare metal environments there's loads of different",
    "start": "1555799",
    "end": "1561200"
  },
  {
    "text": "providers and we have a quick start guide for a lot of those the actual flow of the quick start might be a bit",
    "start": "1561200",
    "end": "1566900"
  },
  {
    "text": "different which I'll explain in a few minutes but yeah so you can set up clusters on AWS Azure gcp digitalocean",
    "start": "1566900",
    "end": "1574460"
  },
  {
    "text": "and we've got a list of providers on the cluster API book online so for this guide this part of the tutorial like the",
    "start": "1574460",
    "end": "1582020"
  },
  {
    "text": "prerequisites is split up into Linux Mac and windows so select the version that's closest for you the windows version is",
    "start": "1582020",
    "end": "1588080"
  },
  {
    "text": "Powershell with Docker for desktop if you're running in something more like a Linux environment on Windows or VM or",
    "start": "1588080",
    "end": "1594679"
  },
  {
    "text": "uh WSL or something you might want to follow the Linux guide instead we also click on one of those that's closest to",
    "start": "1594679",
    "end": "1600679"
  },
  {
    "text": "your system the Mac OS so the first thing we're going to do is set up a single kubernetes cluster so we",
    "start": "1600679",
    "end": "1607820"
  },
  {
    "text": "should have already pre-polled the images so these are all the docker images we use here in the tutorial uh",
    "start": "1607820",
    "end": "1613159"
  },
  {
    "text": "during the prerequisites so I'm going to make sure I'm in the right directory and I'm just going to",
    "start": "1613159",
    "end": "1619039"
  },
  {
    "text": "run the script to create a client cluster this is a normal enough coin cluster it just has a couple of slight",
    "start": "1619039",
    "end": "1624260"
  },
  {
    "text": "changes to help it work with our infrastructure provider for docker",
    "start": "1624260",
    "end": "1630520"
  },
  {
    "text": "so this cluster is going to perform the basis of our management cluster so once it's up and running the next step will",
    "start": "1632659",
    "end": "1638059"
  },
  {
    "text": "be to install the management components on it and those components are what will manage new clusters that we create using",
    "start": "1638059",
    "end": "1645200"
  },
  {
    "text": "cluster API manage their lifecycle manage their infrastructure um all of the providers that Shivani",
    "start": "1645200",
    "end": "1650480"
  },
  {
    "text": "showed us there so the core controller manager the infrastructure controller manager the control plane controller manager and",
    "start": "1650480",
    "end": "1656840"
  },
  {
    "text": "the bootstrap controller manager they run on the management cluster which then creates other clusters which we call",
    "start": "1656840",
    "end": "1662480"
  },
  {
    "text": "workload clusters",
    "start": "1662480",
    "end": "1665380"
  },
  {
    "text": "foreign",
    "start": "1672080",
    "end": "1674320"
  },
  {
    "text": "so once we've got our client cluster up we just",
    "start": "1684020",
    "end": "1688778"
  },
  {
    "text": "just check our nodes so we got one row there's a single little coin cluster",
    "start": "1697279",
    "end": "1704260"
  },
  {
    "text": "so now we're going to install the management components this is the controllers I mentioned earlier so",
    "start": "1704720",
    "end": "1711559"
  },
  {
    "text": "uh cluster API is pluggable so we've got the idea of a control plane provider and there's multiple implementations of that",
    "start": "1711559",
    "end": "1718340"
  },
  {
    "text": "so the specific providers we're using today are the docker provider for infrastructure cap Z which is the Azure",
    "start": "1718340",
    "end": "1725059"
  },
  {
    "text": "infrastructure providers and alternative to that we're using the core cluster API provider which every setup uses that's",
    "start": "1725059",
    "end": "1730700"
  },
  {
    "text": "what manages the fundamental crds that cluster API manages our bootstrap",
    "start": "1730700",
    "end": "1736460"
  },
  {
    "text": "providers using kubernetm so we've got a core in our core repo we've got a APR uh",
    "start": "1736460",
    "end": "1742400"
  },
  {
    "text": "cluster API provider at bootstrap provider for qbdm and similarly we've got a qbdm control plane provider",
    "start": "1742400",
    "end": "1749179"
  },
  {
    "text": "but everything except for the core manager is pluggable so to run this we just need to uh run this command get up",
    "start": "1749179",
    "end": "1756440"
  },
  {
    "text": "as this copy and paste which I should use more so we're just going to copy this so this",
    "start": "1756440",
    "end": "1761539"
  },
  {
    "text": "will set up a couple environmental variables so one of them is the repository we use",
    "start": "1761539",
    "end": "1766760"
  },
  {
    "text": "locally I'm just going to let that role model explain the next two are feature flags that we'll be using in the courses",
    "start": "1766760",
    "end": "1772220"
  },
  {
    "text": "tutorials these are recent features that were added to Cluster API over the last I guess year 18 months the first one is",
    "start": "1772220",
    "end": "1778520"
  },
  {
    "text": "cluster topology which is cluster class this lets us create many clusters from a",
    "start": "1778520",
    "end": "1783620"
  },
  {
    "text": "single template that we stamped them from that templates called the cluster class this is the difference you may see",
    "start": "1783620",
    "end": "1788720"
  },
  {
    "text": "with on the quick start as it stands at the moment on the cluster API book many of the other providers aren't using",
    "start": "1788720",
    "end": "1794960"
  },
  {
    "text": "cluster class as their primary method right now but the cluster provider for Docker should be very similar to this",
    "start": "1794960",
    "end": "1800299"
  },
  {
    "text": "guide runtime SDK is another feature that we're using we'll see that a little bit",
    "start": "1800299",
    "end": "1805640"
  },
  {
    "text": "later and so this will install all of our controllers and it installs cert",
    "start": "1805640",
    "end": "1811220"
  },
  {
    "text": "manager as well which we just need to manage communication between components uh so now that we've installed also",
    "start": "1811220",
    "end": "1817700"
  },
  {
    "text": "closure kotlin it does all of that for us we can just see what parts are running on the cluster",
    "start": "1817700",
    "end": "1823880"
  },
  {
    "text": "and we can see capti this is our infrastructure this is Docker controller manager",
    "start": "1823880",
    "end": "1829100"
  },
  {
    "text": "qbd and bootstrap controller which handles the bootstrapping in the nodes qbm control plane controller which handles our control plane and the copy",
    "start": "1829100",
    "end": "1835460"
  },
  {
    "text": "controller manager which is our core manager and then some cert manager and the normal uh kubernetes control plane components",
    "start": "1835460",
    "end": "1843500"
  },
  {
    "text": "are there as well so now we've got a functioning management cluster the next step is",
    "start": "1843500",
    "end": "1850039"
  },
  {
    "text": "actually to create a cluster so the first thing we're going to do is create the cluster class which I mentioned earlier that's this command so all of",
    "start": "1850039",
    "end": "1856159"
  },
  {
    "text": "these are in the repo so we just apply that like any other kubernetes resource and that will create",
    "start": "1856159",
    "end": "1862279"
  },
  {
    "text": "the cluster in our API so we have that successful we can take a look at the what the cluster looks like just before",
    "start": "1862279",
    "end": "1869120"
  },
  {
    "text": "we create it so uh this culture because the specific",
    "start": "1869120",
    "end": "1876020"
  },
  {
    "text": "spec of the cluster is defined in our cluster class it hides a lot of that complexity so this cluster is a very simple object it has a name namespace a",
    "start": "1876020",
    "end": "1883940"
  },
  {
    "text": "little bit of networking information and then under the topology which is how we stamp the shape of it this is the",
    "start": "1883940",
    "end": "1890779"
  },
  {
    "text": "cluster class that we've just created it's just called quick start we've got a kubernetes version we've got the number",
    "start": "1890779",
    "end": "1896000"
  },
  {
    "text": "of replicas we want in the control plane and then under workers we've got we want a single machine deployment this is",
    "start": "1896000",
    "end": "1901820"
  },
  {
    "text": "analogous to a deployment in kubernetes and we want one machine in that machine deployment so",
    "start": "1901820",
    "end": "1909200"
  },
  {
    "text": "just going to create a cluster",
    "start": "1909200",
    "end": "1912940"
  },
  {
    "text": "and we're going to use cluster cuddle so cluster cuttle is the CLI that comes packaged with",
    "start": "1915620",
    "end": "1921380"
  },
  {
    "text": "with cluster API so it's part of the core repo so you should have been able to download this during the prereqs I'm",
    "start": "1921380",
    "end": "1927500"
  },
  {
    "text": "going to use watch here if you have it installed let's encourages watch for a minute so with cluster coddle described",
    "start": "1927500",
    "end": "1933679"
  },
  {
    "text": "we can see all of the different parts of the cluster come up so cluster API after creating that yaml",
    "start": "1933679",
    "end": "1939860"
  },
  {
    "text": "simple yaml with 10 or 20 lines we create the cluster it goes away and links it all together",
    "start": "1939860",
    "end": "1946460"
  },
  {
    "text": "it creates machines in the infrastructure in this case Docker containers it will bootstrap those",
    "start": "1946460",
    "end": "1951559"
  },
  {
    "text": "machines into nodes it will boots up the first machines into a",
    "start": "1951559",
    "end": "1957080"
  },
  {
    "text": "control plane node and then create a second node that will be a machine deployment which is a worker node and this is all then managed",
    "start": "1957080",
    "end": "1963440"
  },
  {
    "text": "centrally from our management cluster",
    "start": "1963440",
    "end": "1967059"
  },
  {
    "text": "so next up let's just have a look at the Clusters again it's a kubernetes resource we can just have a look at it",
    "start": "1970279",
    "end": "1977960"
  },
  {
    "text": "uh any way we want so",
    "start": "1977960",
    "end": "1982059"
  },
  {
    "text": "we can see the cluster there it's in provision state and the next thing we can do in order to",
    "start": "1985100",
    "end": "1991159"
  },
  {
    "text": "install so from that cluster we're going to use kind because this is using Docker infrastructure we can treat it as a kind",
    "start": "1991159",
    "end": "1996559"
  },
  {
    "text": "cluster as well we're going to use kind to get the cubeconfig and with that cubeconfig we're going to",
    "start": "1996559",
    "end": "2001720"
  },
  {
    "text": "get the nodes in the cluster to see how they're doing so right now we only have a control",
    "start": "2001720",
    "end": "2008260"
  },
  {
    "text": "plane node uh it's not ready yet so these nodes will become ready in a minute once we install the cni and we",
    "start": "2008260",
    "end": "2014860"
  },
  {
    "text": "can do give us detail to get machines to see how the machines are doing",
    "start": "2014860",
    "end": "2020559"
  },
  {
    "text": "so we've got two machines but only one node and that's because the second machine which is our machine deployment",
    "start": "2020559",
    "end": "2026500"
  },
  {
    "text": "worker that's still waiting to bootstrap",
    "start": "2026500",
    "end": "2032200"
  },
  {
    "text": "so a second",
    "start": "2032200",
    "end": "2035880"
  },
  {
    "text": "so to make our nodes into ready State we're going to install a cni in this case Calico just get the cni ready",
    "start": "2039039",
    "end": "2044559"
  },
  {
    "text": "condition so we're using the cubeconfig for our cluster we can",
    "start": "2044559",
    "end": "2050200"
  },
  {
    "text": "get the pods",
    "start": "2050200",
    "end": "2053338"
  },
  {
    "text": "we can see the Calico nodes coming up and we can just have a look at the nodes and",
    "start": "2059560",
    "end": "2065440"
  },
  {
    "text": "just wait for them to be ready so we can see we've got so the First Command here is",
    "start": "2065440",
    "end": "2071679"
  },
  {
    "text": "uh get nodes on the workload cluster we can see",
    "start": "2071679",
    "end": "2077800"
  },
  {
    "text": "both of them have become ready one's 19 seconds old that's the worker in cluster called describe",
    "start": "2077800",
    "end": "2083980"
  },
  {
    "text": "everything is true so this machine means that all of our machines have come up all of our nodes have come up",
    "start": "2083980",
    "end": "2090658"
  },
  {
    "text": "yep and just to have a look at our clusters again okay",
    "start": "2092560",
    "end": "2098980"
  },
  {
    "text": "so that's your first cluster um you'll have a few minutes or a few kind of a couple of minutes to finish",
    "start": "2098980",
    "end": "2105339"
  },
  {
    "text": "that up but if we've been successfully managing to create their cluster we got hands up for people who've actually got",
    "start": "2105339",
    "end": "2110440"
  },
  {
    "text": "one up and running people happy yep cool so",
    "start": "2110440",
    "end": "2117359"
  },
  {
    "text": "next section is we're going to use the copy visualizer this is an open source",
    "start": "2117359",
    "end": "2123220"
  },
  {
    "text": "project this kind of",
    "start": "2123220",
    "end": "2126180"
  },
  {
    "text": "sorry so it's by Jonathan Tong so Jonathan made this really cool open source",
    "start": "2129760",
    "end": "2135760"
  },
  {
    "text": "project that we're going to deploy in our cluster now on our management cluster it'll just let us have a look at what the cluster looks like so I'm going",
    "start": "2135760",
    "end": "2142960"
  },
  {
    "text": "to open a new terminal run this",
    "start": "2142960",
    "end": "2148500"
  },
  {
    "text": "uh so we're going to use Helm to install this you should have all the charts and everything locally",
    "start": "2157920",
    "end": "2163480"
  },
  {
    "text": "um so run that Helm command we can see it's come up here",
    "start": "2163480",
    "end": "2171480"
  },
  {
    "text": "and the next step is so we're going to just run a port forward you might want to do this in a",
    "start": "2171579",
    "end": "2177820"
  },
  {
    "text": "different terminal window and leave this running in the background because this visualizer is a really interesting thing to look at throughout the tutorial so",
    "start": "2177820",
    "end": "2183880"
  },
  {
    "text": "it's really good to get an overview of what your cluster looks like so we're going to run power forward and like that command you can either run it in the",
    "start": "2183880",
    "end": "2189760"
  },
  {
    "text": "background in your terminal or run in another terminal and just make sure it stays up it'll take a couple minutes to",
    "start": "2189760",
    "end": "2195220"
  },
  {
    "text": "get up and when you contact it it does tend to die if it's not up yet so",
    "start": "2195220",
    "end": "2200680"
  },
  {
    "text": "just try that in a couple seconds",
    "start": "2200680",
    "end": "2204660"
  },
  {
    "text": "yeah so we can see this is our management cluster sure",
    "start": "2212320",
    "end": "2219000"
  },
  {
    "text": "so this is our management cluster we're going to click into doc plus one and this is the overall topology of our cluster once you've got your cluster",
    "start": "2219220",
    "end": "2226839"
  },
  {
    "text": "um up and running in your machine run this like I said if you keep it running in the background on your machine you'll be",
    "start": "2226839",
    "end": "2232839"
  },
  {
    "text": "able to check this throughout the tutorial that we should go through different operations scaling and see",
    "start": "2232839",
    "end": "2238900"
  },
  {
    "text": "what happens so I think for the next few minutes we're just going to run around and just help everybody who can get up",
    "start": "2238900",
    "end": "2244660"
  },
  {
    "text": "their first cluster just before moving on to the next section",
    "start": "2244660",
    "end": "2249000"
  },
  {
    "text": "something just",
    "start": "2254820",
    "end": "2257940"
  },
  {
    "text": "nowhere",
    "start": "2290380",
    "end": "2293220"
  },
  {
    "text": "foreign",
    "start": "2327220",
    "end": "2329460"
  },
  {
    "text": "yes error like unable to Revenge data",
    "start": "2350020",
    "end": "2356500"
  },
  {
    "text": "from from kapadi error said it for loading images into",
    "start": "2356500",
    "end": "2362980"
  },
  {
    "text": "the docker machine do we could",
    "start": "2362980",
    "end": "2368859"
  },
  {
    "text": "uh it seems that he is missing some images that we are",
    "start": "2368859",
    "end": "2375220"
  },
  {
    "text": "expecting which which did you do the pre-poll script yeah and it worked it seemed four times let's check it let's",
    "start": "2375220",
    "end": "2382359"
  },
  {
    "text": "check if you have the old Dem because I don't remember which one I mean all these guys came from the people",
    "start": "2382359",
    "end": "2388839"
  },
  {
    "text": "this is from the which part is this uh logs from",
    "start": "2388839",
    "end": "2393960"
  },
  {
    "text": "okay got it cool oh we can look at the",
    "start": "2395760",
    "end": "2403980"
  },
  {
    "text": "another cup of the image to see which should I try to prefill them what is the",
    "start": "2404680",
    "end": "2410320"
  },
  {
    "text": "traffic again uh let's see maybe the I don't know if the images are",
    "start": "2410320",
    "end": "2415720"
  },
  {
    "text": "only maybe they're only I don't see the exact",
    "start": "2415720",
    "end": "2420780"
  },
  {
    "text": "okay",
    "start": "2458140",
    "end": "2461140"
  },
  {
    "text": "God changes",
    "start": "2491500",
    "end": "2498040"
  },
  {
    "text": "okay how many folks built their first cluster API cluster in the last 20",
    "start": "2512940",
    "end": "2518740"
  },
  {
    "text": "minutes wow that's great I see like 10 hands how many people totally failed to do the",
    "start": "2518740",
    "end": "2525460"
  },
  {
    "text": "same thing nobody oh one a couple of people are okay",
    "start": "2525460",
    "end": "2531640"
  },
  {
    "text": "yeah if you raise your hand and we'll we'll have folks come and help you out",
    "start": "2531640",
    "end": "2536700"
  },
  {
    "text": "all right awesome",
    "start": "2561760",
    "end": "2564480"
  },
  {
    "text": "I'm not really into that but he told me to rescue because you're looking for something yeah",
    "start": "2585220",
    "end": "2591838"
  },
  {
    "text": "and",
    "start": "2591940",
    "end": "2594940"
  },
  {
    "text": "um no it's not it's separate yeah well",
    "start": "2597579",
    "end": "2604660"
  },
  {
    "text": "yeah so um",
    "start": "2606700",
    "end": "2612900"
  },
  {
    "text": "so that um",
    "start": "2625060",
    "end": "2628440"
  },
  {
    "text": "but we're I mean we're talking to each other",
    "start": "2641859",
    "end": "2646260"
  },
  {
    "text": "yourself for my colleagues out there helping out",
    "start": "2658420",
    "end": "2664180"
  },
  {
    "text": "thumbs up thumbs down on progressing forwards we wait a few more minutes what do we think",
    "start": "2664180",
    "end": "2671020"
  },
  {
    "text": "I think that means wait a few more minutes two minutes",
    "start": "2671020",
    "end": "2675060"
  },
  {
    "text": "foreign",
    "start": "2701140",
    "end": "2704140"
  },
  {
    "text": "videos",
    "start": "2731800",
    "end": "2734800"
  },
  {
    "text": "foreign [Music]",
    "start": "2762160",
    "end": "2771580"
  },
  {
    "text": "[Music]",
    "start": "2786330",
    "end": "2789480"
  },
  {
    "text": "[Music]",
    "start": "2817550",
    "end": "2820749"
  },
  {
    "text": "thank you [Music]",
    "start": "2834540",
    "end": "2840500"
  },
  {
    "text": "okay",
    "start": "2841960",
    "end": "2844920"
  },
  {
    "text": "um",
    "start": "2848200",
    "end": "2850200"
  },
  {
    "text": "foreign [Music]",
    "start": "2854680",
    "end": "2862269"
  },
  {
    "text": "[Music]",
    "start": "2877630",
    "end": "2880768"
  },
  {
    "text": "here",
    "start": "2887619",
    "end": "2890160"
  },
  {
    "text": "[Music]",
    "start": "2905410",
    "end": "2908520"
  },
  {
    "text": "apartment hey Rob",
    "start": "2921460",
    "end": "2929760"
  },
  {
    "text": "shoes",
    "start": "2951220",
    "end": "2953819"
  },
  {
    "text": "[Music]",
    "start": "2960850",
    "end": "2964170"
  },
  {
    "text": "thank you all right so in the issue of times",
    "start": "2985480",
    "end": "2990660"
  },
  {
    "text": "[Music]",
    "start": "3007490",
    "end": "3010770"
  },
  {
    "text": "continue hopefully my voice is loud enough some folks heard that anyway",
    "start": "3018180",
    "end": "3026180"
  },
  {
    "text": "let's think of the same thing all right so the next section we are",
    "start": "3030180",
    "end": "3037079"
  },
  {
    "text": "going to go through is cluster topology so when we say cluster topology in cluster API we mean uh you'll hear terms",
    "start": "3037079",
    "end": "3044940"
  },
  {
    "text": "like shape and size so typically it means things like the number of control plane nodes running on your cluster the",
    "start": "3044940",
    "end": "3051359"
  },
  {
    "text": "number of worker machines running on your cluster is another number of pools working of worker machines running on",
    "start": "3051359",
    "end": "3057599"
  },
  {
    "text": "your cluster and what we can demonstrate now that you've built a cluster with cluster API",
    "start": "3057599",
    "end": "3064200"
  },
  {
    "text": "the real power of doing things like cluster Fleet Management can come into focus with",
    "start": "3064200",
    "end": "3070619"
  },
  {
    "text": "cluster topology gestures so the first thing we're going to do is",
    "start": "3070619",
    "end": "3076260"
  },
  {
    "text": "we're going to add a new pool of worker nodes so if you have your clusters all ready and",
    "start": "3076260",
    "end": "3082920"
  },
  {
    "text": "set up what we're essentially going to do is Define a new declarative spec that",
    "start": "3082920",
    "end": "3088380"
  },
  {
    "text": "declares a new worker pool node we're going to point our Cube CTL to the worker cluster that we're running",
    "start": "3088380",
    "end": "3094140"
  },
  {
    "text": "and we're going to apply that spec and we'll see an entirely new pool of nodes",
    "start": "3094140",
    "end": "3099680"
  },
  {
    "text": "show up in our cluster so here in as for reference if you folks",
    "start": "3099680",
    "end": "3106920"
  },
  {
    "text": "can see this this is what the original declarative spec for our worker nodes",
    "start": "3106920",
    "end": "3112800"
  },
  {
    "text": "look like um you see we've got this workers and then machine deployments array and",
    "start": "3112800",
    "end": "3120059"
  },
  {
    "text": "we've got one entry in that array called of a class default worker",
    "start": "3120059",
    "end": "3126059"
  },
  {
    "text": "so what we're going to do is I'm going to copy this command",
    "start": "3126059",
    "end": "3131700"
  },
  {
    "text": "and show you the difference between what we originally installed and this",
    "start": "3131700",
    "end": "3139319"
  },
  {
    "text": "additive yaml spec so we can see that there's a new entry called md-1",
    "start": "3139319",
    "end": "3146280"
  },
  {
    "text": "with the replica count of one so if I apply that real quickly let's",
    "start": "3146280",
    "end": "3152339"
  },
  {
    "text": "see if I can find a command to get the current nodes",
    "start": "3152339",
    "end": "3160740"
  },
  {
    "text": "so here is here's the current set of nodes running on the system so you can see I've got",
    "start": "3160740",
    "end": "3167040"
  },
  {
    "text": "one control plane node it's that second one in the list and then I've got one worker node with if you look right in",
    "start": "3167040",
    "end": "3172619"
  },
  {
    "text": "the middle you can see even though the text is really small you can see that little prefix md-0",
    "start": "3172619",
    "end": "3178559"
  },
  {
    "text": "so again we're going to apply a spec that installs a new pool and it's going to be identified with md-1",
    "start": "3178559",
    "end": "3187500"
  },
  {
    "text": "so I'm going to run this Cube ctail apply command and now I can do this get nodes and I",
    "start": "3187500",
    "end": "3195000"
  },
  {
    "text": "can watch it and before too long we should see another note appear see if",
    "start": "3195000",
    "end": "3200880"
  },
  {
    "text": "there's any other material here",
    "start": "3200880",
    "end": "3204200"
  },
  {
    "text": "so wait a few seconds for you folks to do that same keeps detail apply and then",
    "start": "3210480",
    "end": "3217140"
  },
  {
    "text": "well that's happening hopefully this get nodes Watcher statement will give us what we're looking for",
    "start": "3217140",
    "end": "3225200"
  },
  {
    "text": "foreign",
    "start": "3225359",
    "end": "3228078"
  },
  {
    "text": "there we go so you can see it's identified there in",
    "start": "3236040",
    "end": "3242520"
  },
  {
    "text": "the middle of that long gnarly string with an md-1 and now we've gone to ready",
    "start": "3242520",
    "end": "3249660"
  },
  {
    "text": "so that was an example of let's like sort of revisit what we just did that was an example of a really simple Cube",
    "start": "3249660",
    "end": "3255480"
  },
  {
    "text": "CTL gesture against the management cluster to add a",
    "start": "3255480",
    "end": "3260760"
  },
  {
    "text": "new worker pool and so then on our worker node we've got a new node coming online",
    "start": "3260760",
    "end": "3266180"
  },
  {
    "text": "and another fun thing we can do is if we go over here to our visualize you can",
    "start": "3268140",
    "end": "3274619"
  },
  {
    "text": "actually see you saw there for a second the visualizer um sort of refreshed itself so now we can see even though it's a little",
    "start": "3274619",
    "end": "3282440"
  },
  {
    "text": "tight in there we can see we've got another machine deployment that's a cluster API crd so again we're looking",
    "start": "3282480",
    "end": "3288720"
  },
  {
    "text": "at in this visualizer we're looking at the cluster API abstraction layer so these are the this is the view of the cluster from cluster",
    "start": "3288720",
    "end": "3295740"
  },
  {
    "text": "api's point of view but you can see if we expand this we've got md1 which joined the pre-existing",
    "start": "3295740",
    "end": "3302520"
  },
  {
    "text": "md0 . so this can this this visualizer is a really nice Tool uh in addition to doing this watch command in the command line",
    "start": "3302520",
    "end": "3308760"
  },
  {
    "text": "it's sort of similar to that as we modify the topology the visualizer will sort of show some in progress visual",
    "start": "3308760",
    "end": "3315540"
  },
  {
    "text": "visualizations to indicate what's going on all right so now we're going to do the",
    "start": "3315540",
    "end": "3321059"
  },
  {
    "text": "same thing uh in Reverse so I'm going to item potently apply",
    "start": "3321059",
    "end": "3326400"
  },
  {
    "text": "the original cluster spec and that this is going to now",
    "start": "3326400",
    "end": "3333420"
  },
  {
    "text": "um this is going to going to determine that there's a Delta between the new spec and",
    "start": "3333420",
    "end": "3339300"
  },
  {
    "text": "this this spec right here where there's no longer that md1 in the configuration",
    "start": "3339300",
    "end": "3345660"
  },
  {
    "text": "and I'm actually going to use the visualizer this time we should see that md1 machine set disappear",
    "start": "3345660",
    "end": "3353579"
  },
  {
    "text": "so the way that you can sort of infer this works is that the authoritative set of pools in that",
    "start": "3353579",
    "end": "3360839"
  },
  {
    "text": "um array is understood to be the definitive configuration so if we've got say there",
    "start": "3360839",
    "end": "3368520"
  },
  {
    "text": "we go just got rid of md1 so if we've got like five pools in our rape and we send a cube CT apply with a declarative",
    "start": "3368520",
    "end": "3375599"
  },
  {
    "text": "spec with two then those three that aren't there are going to be deleted and I should point out that these are",
    "start": "3375599",
    "end": "3380940"
  },
  {
    "text": "going to be deleted gracefully there's going to be a a coordinate drain as a part of it so if depending on your",
    "start": "3380940",
    "end": "3386280"
  },
  {
    "text": "workload scenario and production if you're doing this in production that might take a long time for that machine pool to disappear because cordon and",
    "start": "3386280",
    "end": "3392280"
  },
  {
    "text": "drain can you know block on success but because we're doing this in a demo environment where there's no workloads running on the system that coordinate",
    "start": "3392280",
    "end": "3398280"
  },
  {
    "text": "drain was really fast",
    "start": "3398280",
    "end": "3401119"
  },
  {
    "text": "okay so there is a section here that I'm actually going to skip because it takes",
    "start": "3404540",
    "end": "3409800"
  },
  {
    "text": "about 10 to 15 minutes and in the interest of time we don't have to wait for for this to happen but um in your",
    "start": "3409800",
    "end": "3414900"
  },
  {
    "text": "own time definitely go through this is a super powerful gesture for cluster API to scale out your control plane nodes so as you've",
    "start": "3414900",
    "end": "3421020"
  },
  {
    "text": "probably noticed you wouldn't run a production cluster like we've been doing in this demo with only a single control plane node so to get that to three or",
    "start": "3421020",
    "end": "3427260"
  },
  {
    "text": "five or some appropriately ha redundant number you simply update the replica",
    "start": "3427260",
    "end": "3432300"
  },
  {
    "text": "count in the existing okay I'll show you the the the diff here",
    "start": "3432300",
    "end": "3438300"
  },
  {
    "text": "without actually running through the command and you can see that if we change that replicas value from",
    "start": "3438300",
    "end": "3445200"
  },
  {
    "text": "one to three then cluster API will receive that spec and then reconcile that eventual consistency the way that",
    "start": "3445200",
    "end": "3450599"
  },
  {
    "text": "it does it for control plane nodes is one at a time which is why it takes a little bit of time and it's probably best to just skip it for the demo but",
    "start": "3450599",
    "end": "3457680"
  },
  {
    "text": "super super important gesture there okay so the final thing we're going to",
    "start": "3457680",
    "end": "3464640"
  },
  {
    "text": "do here in topology is uh well so I've been I'll do a really",
    "start": "3464640",
    "end": "3471059"
  },
  {
    "text": "quick demonstration of maybe a more idiomatic gesture for folks used to editing yeah",
    "start": "3471059",
    "end": "3478200"
  },
  {
    "text": "live kubernetes resources so this should be familiar to folks if you want to like",
    "start": "3478200",
    "end": "3483300"
  },
  {
    "text": "edit a deployment um to increase the replicas or perhaps you want to change the image from the image reference points to V1 and you",
    "start": "3483300",
    "end": "3489720"
  },
  {
    "text": "want to update that to V2 so we can do something similar for all these cluster API resources so as we see here in the",
    "start": "3489720",
    "end": "3496740"
  },
  {
    "text": "the cluster resource we've got a replicas count for the control plane so I can if I",
    "start": "3496740",
    "end": "3502500"
  },
  {
    "text": "change it to three and that's that's going to initiate an eventual reconciliation for that and if I go down here you can see that",
    "start": "3502500",
    "end": "3509520"
  },
  {
    "text": "now in this cluster spec I'm back to having a single worker pool called md0 if I were to put that to 10 that would",
    "start": "3509520",
    "end": "3516660"
  },
  {
    "text": "scale out to 10 nodes from one so that's that's a more sort of",
    "start": "3516660",
    "end": "3523559"
  },
  {
    "text": "real-time view of how you might apply that configuration",
    "start": "3523559",
    "end": "3528920"
  },
  {
    "text": "and the final thing I'm going to do here is",
    "start": "3528960",
    "end": "3533420"
  },
  {
    "text": "so I think the the doc walks through scaling out from one to three so I'll",
    "start": "3534599",
    "end": "3539940"
  },
  {
    "text": "actually go through that and make that change so I'm gonna",
    "start": "3539940",
    "end": "3547079"
  },
  {
    "text": "what the documentation is trying to describe is find the replicas configuration in your md0 machine",
    "start": "3547079",
    "end": "3553619"
  },
  {
    "text": "deployment and I'm going to change that to three so I'm",
    "start": "3553619",
    "end": "3558960"
  },
  {
    "text": "going to colon WQ because VI is my configured editor here and I've got the",
    "start": "3558960",
    "end": "3565380"
  },
  {
    "text": "output from that command that the docker cluster one resource was edited now I",
    "start": "3565380",
    "end": "3571500"
  },
  {
    "text": "can go over to the visualizer I could also do a cube CTL minus w and as we see right now under here if",
    "start": "3571500",
    "end": "3579480"
  },
  {
    "text": "you can follow my mouse on the screen we've got one machine under this machine set so what we should see",
    "start": "3579480",
    "end": "3585079"
  },
  {
    "text": "in 30 seconds or so is that expand to three and these these scale out events will",
    "start": "3585079",
    "end": "3592380"
  },
  {
    "text": "happen concurrently there there's cluster API configuration that you can look through in the QuickBook that describes how to",
    "start": "3592380",
    "end": "3599099"
  },
  {
    "text": "set those sort of rolling upgrade type events so you can do and at a time it's",
    "start": "3599099",
    "end": "3604799"
  },
  {
    "text": "configurable all right so now we've gone to Orange so",
    "start": "3604799",
    "end": "3611579"
  },
  {
    "text": "you probably can't see it on the on the screen and in that much detail just do electric and maybe zoom in a little bit",
    "start": "3611579",
    "end": "3618960"
  },
  {
    "text": "so if we go over here uh so just a retry run the image script",
    "start": "3618960",
    "end": "3625500"
  },
  {
    "text": "again I know this is actually maybe that's big enough you can see this is sort of it's like Mr Coffee churning and",
    "start": "3625500",
    "end": "3631140"
  },
  {
    "text": "bubbling stuff is happening there and and also are you talking about them just to make sure that you don't have",
    "start": "3631140",
    "end": "3636299"
  },
  {
    "text": "the right limiting issue",
    "start": "3636299",
    "end": "3639140"
  },
  {
    "text": "okay anybody doing any successful topology",
    "start": "3643020",
    "end": "3650400"
  },
  {
    "text": "changes out there anyone scaled their cluster added a pool deleted the pool",
    "start": "3650400",
    "end": "3657000"
  },
  {
    "text": "cool any of those folks do this for the very first time never done this before",
    "start": "3657000",
    "end": "3662760"
  },
  {
    "text": "exciting",
    "start": "3662760",
    "end": "3665420"
  },
  {
    "text": "all right I think in the interest of time I'm going to skip ahead so we can get our next speaker here",
    "start": "3672000",
    "end": "3678180"
  },
  {
    "text": "the next page in the docs are about machine health checks",
    "start": "3678180",
    "end": "3683760"
  },
  {
    "text": "so I'll quickly give an overview of what this is so a machine health check is really a way of",
    "start": "3683760",
    "end": "3689540"
  },
  {
    "text": "declaring certain vectors that um inform the health of a",
    "start": "3689540",
    "end": "3696540"
  },
  {
    "text": "particular machine and when that Vector goes unhealthy then cluster API will coordinate and drain and replace",
    "start": "3696540",
    "end": "3704579"
  },
  {
    "text": "that machine [Music] so here is an example hopefully it's big",
    "start": "3704579",
    "end": "3711900"
  },
  {
    "text": "enough of the sort of at least for me these are these are sort",
    "start": "3711900",
    "end": "3717480"
  },
  {
    "text": "of canonical Health vectors to check so at the top we've got this under machine",
    "start": "3717480",
    "end": "3723359"
  },
  {
    "text": "health check node startup timeout so you're able to declare a sort of Maximum",
    "start": "3723359",
    "end": "3728460"
  },
  {
    "text": "timeout value Beyond which you're no longer going to wait for that node and you're actually going to re-initiate the",
    "start": "3728460",
    "end": "3733500"
  },
  {
    "text": "provisioning process you're going to clean up that machine replace it with a new one so that's one way of configuring",
    "start": "3733500",
    "end": "3739200"
  },
  {
    "text": "a machine health check there are these two other conditions that are under the unhealthy conditions",
    "start": "3739200",
    "end": "3744900"
  },
  {
    "text": "array there and one is defined as type ready status false so essentially what",
    "start": "3744900",
    "end": "3750299"
  },
  {
    "text": "that means is a machine is deemed to be unhealthy if the ready condition is not met so when you're doing like a cube CTL",
    "start": "3750299",
    "end": "3757079"
  },
  {
    "text": "get nodes the the thing you'll see in the status column is not ready so we've got a timeout defined here what that",
    "start": "3757079",
    "end": "3763319"
  },
  {
    "text": "tells us is that if we if cluster API observes that a node is in a not ready condition for five minutes then it's",
    "start": "3763319",
    "end": "3769920"
  },
  {
    "text": "going to go ahead and recycle that node it's gonna consider that an unhealthy event and similarly this example here",
    "start": "3769920",
    "end": "3775500"
  },
  {
    "text": "for ready unknown so if you've got a node in an unknown State it's going to recycle that machine",
    "start": "3775500",
    "end": "3781220"
  },
  {
    "text": "so if I go down here further here's an example of a novel machine health check",
    "start": "3781220",
    "end": "3786540"
  },
  {
    "text": "that we're defining we're calling it demo node healthy and similar to the examples above this",
    "start": "3786540",
    "end": "3794160"
  },
  {
    "text": "if the status is false for 60 seconds or more then we're going to consider that node unhealthy and the",
    "start": "3794160",
    "end": "3800520"
  },
  {
    "text": "reason we're defining this novel condition is so that we can easily reproduce this",
    "start": "3800520",
    "end": "3805640"
  },
  {
    "text": "so let me make sure that and and so the we ship these machine health checks in",
    "start": "3805640",
    "end": "3812220"
  },
  {
    "text": "that original cluster class spec that's in the example so I should see those running here okay great",
    "start": "3812220",
    "end": "3819599"
  },
  {
    "text": "so uh as we see here we've got our machine",
    "start": "3819599",
    "end": "3825720"
  },
  {
    "text": "health check output there's not that much detail there we could we could get more if we wanted to drill down but what I'm going to do here is",
    "start": "3825720",
    "end": "3834558"
  },
  {
    "text": "let's see just go look at the machines as the doc suggests and we've got",
    "start": "3835319",
    "end": "3841740"
  },
  {
    "text": "four machines running running running running so I am going to manually patch and make",
    "start": "3841740",
    "end": "3849599"
  },
  {
    "text": "sure to change I think I think the way this command works it's going to manually patch all the nodes in the in",
    "start": "3849599",
    "end": "3855240"
  },
  {
    "text": "the dock I believe we scale back down to one before we proceed but this will be fun anyway let's do it live demo so this is going to manually patch these",
    "start": "3855240",
    "end": "3862200"
  },
  {
    "text": "nodes with these the condition that we're looking for in our demo demo node",
    "start": "3862200",
    "end": "3868980"
  },
  {
    "text": "healthy machine health check so you can see here in this sort of gnarly escaped Json data that we're doing that",
    "start": "3868980",
    "end": "3876859"
  },
  {
    "text": "and that didn't work I wonder if nothing has to do with the replicas count",
    "start": "3876859",
    "end": "3885319"
  },
  {
    "text": "I should have those limits it's not just the mixed machines but I'm going to set this back down to one",
    "start": "3888960",
    "end": "3894960"
  },
  {
    "text": "and this should wreck itself fairly quickly because again we don't have production",
    "start": "3894960",
    "end": "3900720"
  },
  {
    "text": "workloads running on this and so the coordinate drain will be quick and let's see and Watch What Happens here",
    "start": "3900720",
    "end": "3908058"
  },
  {
    "text": "looks like I've only got one machine right okay let's retry that command",
    "start": "3909619",
    "end": "3916380"
  },
  {
    "text": "uh Fades",
    "start": "3916380",
    "end": "3922280"
  },
  {
    "text": "oops make sure I'm doing copy paste oh that",
    "start": "3922280",
    "end": "3928020"
  },
  {
    "text": "wasn't for Windows I see so like we're trying to wait a little bit beware everyone when using Windows Escape",
    "start": "3928020",
    "end": "3933359"
  },
  {
    "text": "commands on Mac OS",
    "start": "3933359",
    "end": "3936619"
  },
  {
    "text": "yeah yeah okay so you can see it was patched so we've added that statement and now",
    "start": "3940440",
    "end": "3948799"
  },
  {
    "text": "if we now we'll see that we were I was already",
    "start": "3948799",
    "end": "3954839"
  },
  {
    "text": "not quick enough to even detect that machine being recycled so I'm going to look at the visualizer here and what are you",
    "start": "3954839",
    "end": "3962520"
  },
  {
    "text": "going to tell me all right so we can see now again we're in that there's a little orange spinny",
    "start": "3962520",
    "end": "3968280"
  },
  {
    "text": "thing that you probably can't detect in any detail up there on the screen which is indicating that that machine is in",
    "start": "3968280",
    "end": "3973559"
  },
  {
    "text": "the in the process of reconciling so we've deleted that machine after patching it with the",
    "start": "3973559",
    "end": "3978839"
  },
  {
    "text": "the machine health check condition that we defined and in the visualizer and over here in our",
    "start": "3978839",
    "end": "3985799"
  },
  {
    "text": "Watcher which there we go we see the new machine so now cluster API has cordon and drained that prior machine",
    "start": "3985799",
    "end": "3991319"
  },
  {
    "text": "according to the machine health check condition being fulfilled and then",
    "start": "3991319",
    "end": "3996559"
  },
  {
    "text": "according to the rolling update configuration recycled that machine brought a new one online and now we've got a new node",
    "start": "3996559",
    "end": "4002780"
  },
  {
    "text": "logs species",
    "start": "4002780",
    "end": "4008619"
  },
  {
    "text": "can't do this and I think we are ready for kubernetes upgrade",
    "start": "4009680",
    "end": "4015980"
  },
  {
    "text": "I know we're kind of cruising right along here",
    "start": "4015980",
    "end": "4020380"
  },
  {
    "text": "do you want to give a few minutes it's it's okay how many folks are in real time with the",
    "start": "4021020",
    "end": "4028160"
  },
  {
    "text": "uh presentation on stage how many folks are way behind",
    "start": "4028160",
    "end": "4034339"
  },
  {
    "text": "okay yeah we'll wait three minutes machine so",
    "start": "4034339",
    "end": "4042220"
  },
  {
    "text": "thank you",
    "start": "4044900",
    "end": "4047558"
  },
  {
    "text": "feel free to raise hand if you have any questions",
    "start": "4050780",
    "end": "4054400"
  },
  {
    "text": "foreign",
    "start": "4093260",
    "end": "4096259"
  },
  {
    "text": "[Music]",
    "start": "4102130",
    "end": "4109630"
  },
  {
    "text": "[Music]",
    "start": "4125479",
    "end": "4128659"
  },
  {
    "text": "[Music]",
    "start": "4135529",
    "end": "4138669"
  },
  {
    "text": "foreign",
    "start": "4161060",
    "end": "4163298"
  },
  {
    "text": "[Music]",
    "start": "4170439",
    "end": "4173579"
  },
  {
    "text": "thank you",
    "start": "4220300",
    "end": "4223300"
  },
  {
    "text": "Chinese customers",
    "start": "4271540",
    "end": "4275199"
  },
  {
    "text": "this is",
    "start": "4290500",
    "end": "4293620"
  },
  {
    "text": "alive and [Music]",
    "start": "4316120",
    "end": "4327199"
  },
  {
    "text": "and also while people are working on this feel free to continue this lab at home or whenever you find time and if",
    "start": "4327199",
    "end": "4334400"
  },
  {
    "text": "you have any problems feel free to reach out to us on the upsync kubernetes lag the slack handle is called cluster API",
    "start": "4334400",
    "end": "4341000"
  },
  {
    "text": "and we should be able to address any of the problems there if you have any issues we should be able to sit up there",
    "start": "4341000",
    "end": "4346820"
  },
  {
    "text": "and feel free to open up uh open up a discussion thread and we'll",
    "start": "4346820",
    "end": "4352400"
  },
  {
    "text": "take a look yeah so let's take a look at what we",
    "start": "4352400",
    "end": "4357500"
  },
  {
    "text": "have right now so we do we have one workflow cluster that's that",
    "start": "4357500",
    "end": "4363980"
  },
  {
    "text": "has one control plane node and one worker node which are both at 124.6",
    "start": "4363980",
    "end": "4369620"
  },
  {
    "text": "version uh let's try to upgrade this to our 125 version and",
    "start": "4369620",
    "end": "4375980"
  },
  {
    "text": "so since class API is declarative we like following the same pattern as we",
    "start": "4375980",
    "end": "4381620"
  },
  {
    "text": "have for the other examples we just have another yaml file that dictates how uh the dictates the change inversion of the",
    "start": "4381620",
    "end": "4388580"
  },
  {
    "text": "target cluster and if you take a look at that change",
    "start": "4388580",
    "end": "4393580"
  },
  {
    "text": "foreign field in the yaml so from we changed it",
    "start": "4394219",
    "end": "4402140"
  },
  {
    "text": "from 124 6 to our 125.2 and that's it that's the only thing you'll have to change to be able to bump up to a",
    "start": "4402140",
    "end": "4408440"
  },
  {
    "text": "kubernetes version and it's as simple as that right just change one value in the yaml and you see our kubernetes cluster",
    "start": "4408440",
    "end": "4415100"
  },
  {
    "text": "upgrade should be triggered and let's do that right now",
    "start": "4415100",
    "end": "4420260"
  },
  {
    "text": "so I'm applying the change",
    "start": "4420260",
    "end": "4424059"
  },
  {
    "text": "yeah so my chains of change is applied and let's just watch the",
    "start": "4426860",
    "end": "4433400"
  },
  {
    "text": "Philippines to see that it's changing oh and you can see that the way closely",
    "start": "4433400",
    "end": "4440000"
  },
  {
    "text": "type performs an upgrade on these workflow clusters is it first upgrades the control plane nodes all of them to",
    "start": "4440000",
    "end": "4446300"
  },
  {
    "text": "the Target version and only after they are successfully upgraded to the Target version will it move on to your mission",
    "start": "4446300",
    "end": "4452179"
  },
  {
    "text": "deployments and if your workload cluster has more than one machine deployments it",
    "start": "4452179",
    "end": "4457460"
  },
  {
    "text": "will go it will go and upgrade them in order and it's completely orchestrated and you just have to monitor it you",
    "start": "4457460",
    "end": "4463640"
  },
  {
    "text": "don't have to perform any immediate actions to be able to let this through and",
    "start": "4463640",
    "end": "4468800"
  },
  {
    "text": "as we can see the control plane spin up a new machine to be able to pick the new",
    "start": "4468800",
    "end": "4474260"
  },
  {
    "text": "version and once the new once a controlling machine for the new version is available it will scale down the uh",
    "start": "4474260",
    "end": "4480260"
  },
  {
    "text": "it will delete the machine at the older version and once the control plane is completely upgraded it will move on to upgrading the machine departments",
    "start": "4480260",
    "end": "4488678"
  },
  {
    "text": "it will take a few minutes for this to go through but uh just let it go through",
    "start": "4493640",
    "end": "4498679"
  },
  {
    "text": "and we'll see that the controller is completely updated",
    "start": "4498679",
    "end": "4502659"
  },
  {
    "text": "attached",
    "start": "4535280",
    "end": "4538119"
  },
  {
    "text": "until next",
    "start": "4546440",
    "end": "4549400"
  },
  {
    "text": "week",
    "start": "4556100",
    "end": "4558100"
  },
  {
    "text": "as you can see the control plane is now targeting the version 125 too and as",
    "start": "4565820",
    "end": "4571460"
  },
  {
    "text": "soon as the other machine is scaled down the 1246 machine is scaled down we",
    "start": "4571460",
    "end": "4576980"
  },
  {
    "text": "should be able to get a control game that's completely at Target position",
    "start": "4576980",
    "end": "4582158"
  },
  {
    "text": "yeah it's started deleting the whole control pin",
    "start": "4582560",
    "end": "4587860"
  },
  {
    "text": "how many how many were able to trigger the upgrade",
    "start": "4622460",
    "end": "4627219"
  },
  {
    "text": "one okay okay",
    "start": "4627860",
    "end": "4633940"
  },
  {
    "text": "yeah so the control plane is completely upgraded to the Target version and now it's moved on to upgrading the machine",
    "start": "4637760",
    "end": "4643640"
  },
  {
    "text": "deployment you can see that uh a 125 2 version machine for the md0 machine",
    "start": "4643640",
    "end": "4650060"
  },
  {
    "text": "deployment is now being provisioned and as soon as that was ready the 124 6",
    "start": "4650060",
    "end": "4655760"
  },
  {
    "text": "machine for the machine deployment and d0 will be scaled down will be deleted and then our control and then our",
    "start": "4655760",
    "end": "4662420"
  },
  {
    "text": "cluster is completely considered as upgraded",
    "start": "4662420",
    "end": "4666580"
  },
  {
    "text": "okay",
    "start": "4686120",
    "end": "4688239"
  },
  {
    "text": "so yeah uh the machine for the machine inflammation are completely upgraded and",
    "start": "4692380",
    "end": "4697640"
  },
  {
    "text": "the control plane is now completely updated so now we just have like one control plane node and one machine",
    "start": "4697640",
    "end": "4703100"
  },
  {
    "text": "deployment node so the same topology as for same topology as the Clusters that we had",
    "start": "4703100",
    "end": "4709280"
  },
  {
    "text": "before it's just that both of them have been upgraded to the newest version",
    "start": "4709280",
    "end": "4713920"
  },
  {
    "text": "yeah so so we just have one control name node and one machine deployment mode as",
    "start": "4720080",
    "end": "4725659"
  },
  {
    "text": "before and both of them are at 125 of top two",
    "start": "4725659",
    "end": "4730540"
  },
  {
    "text": "now let's move on to the next section so before that we can just clean up this cluster for now so we don't need this",
    "start": "4736040",
    "end": "4741440"
  },
  {
    "text": "anymore so let's just delete the cluster that we would the top plus the one cluster that",
    "start": "4741440",
    "end": "4747560"
  },
  {
    "text": "we have been using and after that after that successfully deleted let's move on to the next section which is plus",
    "start": "4747560",
    "end": "4753320"
  },
  {
    "text": "lifecycle books it's pretty interesting",
    "start": "4753320",
    "end": "4757420"
  },
  {
    "text": "yeah the class has successfully deleted there are no one plus there are no more workflow clusters in our setup right now",
    "start": "4772400",
    "end": "4778040"
  },
  {
    "text": "so let's move to the class lifecycle books",
    "start": "4778040",
    "end": "4782198"
  },
  {
    "text": "a little bit about cluster life cycle hooks so cluster API right now has the",
    "start": "4783380",
    "end": "4789320"
  },
  {
    "text": "ability to produce certain events called first life cycles uh events and they can be hooked",
    "start": "4789320",
    "end": "4796880"
  },
  {
    "text": "into by external systems to perform certain actions in this demo today we'll just take a look at a simple extension",
    "start": "4796880",
    "end": "4803000"
  },
  {
    "text": "simple extension that just receives these events and then logs them as you can see in the topology that we",
    "start": "4803000",
    "end": "4809719"
  },
  {
    "text": "have here the management cluster sends certain events to a targeted extent test",
    "start": "4809719",
    "end": "4815060"
  },
  {
    "text": "test extension server that could be running anywhere in this demo we'll just run that as a deployment within our",
    "start": "4815060",
    "end": "4821840"
  },
  {
    "text": "management cluster itself and once the extension server receives these events it can send back a particular response",
    "start": "4821840",
    "end": "4828219"
  },
  {
    "text": "depending on the event that it received and then that can affect the Clusters",
    "start": "4828219",
    "end": "4833659"
  },
  {
    "text": "life cycle in certain ways a simple example would be when a new workload cluster is requested",
    "start": "4833659",
    "end": "4840860"
  },
  {
    "text": "to be created the management cluster can then send a before cluster create hook to the extension server The Exchange",
    "start": "4840860",
    "end": "4847820"
  },
  {
    "text": "Server can either send back and allow response or a block response so if a",
    "start": "4847820",
    "end": "4853580"
  },
  {
    "text": "block response is sent the workload cluster will be not created and in the cluster API will just keep requesting",
    "start": "4853580",
    "end": "4859820"
  },
  {
    "text": "the test extension server depending on some of the parameters that it's sent back on okay am I allowed to create the",
    "start": "4859820",
    "end": "4865940"
  },
  {
    "text": "workload cluster no if not just let me know when I need to check back and so on so you can set up an environment like like so where you have maybe not one",
    "start": "4865940",
    "end": "4873800"
  },
  {
    "text": "maybe have multiple extension servers each of them dictating if you need to if you're allowed to go ahead and create",
    "start": "4873800",
    "end": "4879260"
  },
  {
    "text": "the workload cluster or if you need to wait before the workload cluster is created the before cluster create Hook",
    "start": "4879260",
    "end": "4884360"
  },
  {
    "text": "is just one example we have six life cycle hooks right now within cluster API and",
    "start": "4884360",
    "end": "4890480"
  },
  {
    "text": "this demo will take a look at at least three of them",
    "start": "4890480",
    "end": "4895719"
  },
  {
    "text": "so as I mentioned before in this demo we'll be running a test extension server test extension server that is",
    "start": "4897620",
    "end": "4904400"
  },
  {
    "text": "within the management cluster because it's easier for this but ideally you could imagine you could possibly imagine",
    "start": "4904400",
    "end": "4909560"
  },
  {
    "text": "a case where you are running an external so external service or you can run it in any other cluster you're not required to",
    "start": "4909560",
    "end": "4916100"
  },
  {
    "text": "always run management cluster as long as it's reachable it should be fine",
    "start": "4916100",
    "end": "4921940"
  },
  {
    "text": "so for this demo let's just run uh test actions in server deployment within our management cluster",
    "start": "4921980",
    "end": "4928100"
  },
  {
    "text": "that",
    "start": "4928100",
    "end": "4930640"
  },
  {
    "text": "just make sure that our deployment is running our text extension server is running",
    "start": "4934280",
    "end": "4939440"
  },
  {
    "text": "it's running it's up we have the uh one replica available so we should be able to move ahead once the test extension",
    "start": "4939440",
    "end": "4946400"
  },
  {
    "text": "server is running we need a way to register that with cluster API so the cluster API knows where it is how to",
    "start": "4946400",
    "end": "4953719"
  },
  {
    "text": "reach it and additional information like certificates and so on um so here is an example of an extension",
    "start": "4953719",
    "end": "4960020"
  },
  {
    "text": "config which is used to define which is used to declare where an exchange serverless is and this is how we",
    "start": "4960020",
    "end": "4967280"
  },
  {
    "text": "register an extension server with cluster API so for each extension config you just",
    "start": "4967280",
    "end": "4972980"
  },
  {
    "text": "you need a unique name and I'm using uh I'm uh I have some",
    "start": "4972980",
    "end": "4979340"
  },
  {
    "text": "CA injection mechanism set up right here so this is just to be able to inject the corresponding CA and the certificates",
    "start": "4979340",
    "end": "4984739"
  },
  {
    "text": "and uh the client config refers to where the",
    "start": "4984739",
    "end": "4990320"
  },
  {
    "text": "extension server lives since my extension server lives within my within my management cluster so I just have a",
    "start": "4990320",
    "end": "4996199"
  },
  {
    "text": "reference to that particular service that's exposed as part of the deployment and it should be able to reach the",
    "start": "4996199",
    "end": "5002560"
  },
  {
    "text": "cluster API controller should be able to reach the extension server from within the management cluster right",
    "start": "5002560",
    "end": "5008800"
  },
  {
    "text": "I also have a match expression this is just to be able to make sure that this extension Server doesn't operate on all",
    "start": "5008800",
    "end": "5016179"
  },
  {
    "text": "events from all the workload clusters so you should be able to filter it down to only act on certain events if you if",
    "start": "5016179",
    "end": "5022540"
  },
  {
    "text": "they match if they are coming for a particular workflow cluster that matches certain labels here I just have a",
    "start": "5022540",
    "end": "5028239"
  },
  {
    "text": "namespace label so only the events that are triggered by workload clusters in",
    "start": "5028239",
    "end": "5033880"
  },
  {
    "text": "this target namespace will be handled by this particular extension server",
    "start": "5033880",
    "end": "5040960"
  },
  {
    "text": "so let's register that so let's register our extension server with cluster API",
    "start": "5040960",
    "end": "5046739"
  },
  {
    "text": "just make sure that it's reachable and it's all good yeah",
    "start": "5049900",
    "end": "5057159"
  },
  {
    "text": "so the extension server has successfully discovered cluster API was able to reach the extension server and do the",
    "start": "5057159",
    "end": "5062980"
  },
  {
    "text": "necessary things to be able to register and there are a few optional sections for you to",
    "start": "5062980",
    "end": "5068860"
  },
  {
    "text": "explore on how an extension server communicates with cluster API to to let",
    "start": "5068860",
    "end": "5074980"
  },
  {
    "text": "clust to let it inform what kinds of events it supports and what kinds of events it's expecting",
    "start": "5074980",
    "end": "5081760"
  },
  {
    "text": "um I'll I'll leave that for you guys to explore now that we have an exchange server",
    "start": "5081760",
    "end": "5086800"
  },
  {
    "text": "registered and an extension uh server that's already running let's actually look at some of these events uh so as I",
    "start": "5086800",
    "end": "5094540"
  },
  {
    "text": "mentioned cluster API right now supports six lifecycle hooks uh we'll take a look at two of them so we'll try to create a",
    "start": "5094540",
    "end": "5102520"
  },
  {
    "text": "workflow cluster we'll see that the extension server receives an event called before cluster create and then it",
    "start": "5102520",
    "end": "5108760"
  },
  {
    "text": "just logs it it doesn't block the cluster creation operation you can always change the extension server to be",
    "start": "5108760",
    "end": "5115540"
  },
  {
    "text": "able to block it and then maybe rely on some other input to decide when to unblock",
    "start": "5115540",
    "end": "5122140"
  },
  {
    "text": "the creation and then allow the process to go ahead right",
    "start": "5122140",
    "end": "5127780"
  },
  {
    "text": "so I just have a file here I just have a yaml file here that creates a workload cluster so let me just do that",
    "start": "5127780",
    "end": "5135480"
  },
  {
    "text": "once the workload cluster creation is triggered uh the an event should have been sent to the test text instance",
    "start": "5140080",
    "end": "5145840"
  },
  {
    "text": "server so let's take a look at the test section servers logs to see that it actually received the event and it",
    "start": "5145840",
    "end": "5151239"
  },
  {
    "text": "logged it",
    "start": "5151239",
    "end": "5153780"
  },
  {
    "text": "yeah so I did receive the extension server received the before cluster create event and I just logged it and",
    "start": "5157179",
    "end": "5163600"
  },
  {
    "text": "you can see that it sent back a success response with retry 0 retry 0 just",
    "start": "5163600",
    "end": "5169000"
  },
  {
    "text": "implies that do not block the creation just let it go through let it allow uh",
    "start": "5169000",
    "end": "5174400"
  },
  {
    "text": "it's basically equal into an allow response there is a there is a section at the end of this tutorial uh which in",
    "start": "5174400",
    "end": "5182320"
  },
  {
    "text": "which it's an it's completely optional in which you can try to change the extension server's logic so that it",
    "start": "5182320",
    "end": "5187600"
  },
  {
    "text": "blocks um and it's completely optional try that when you have some time",
    "start": "5187600",
    "end": "5193679"
  },
  {
    "text": "for this tutorial we'll just continue with the yellow responses but I would highly highly encourage you to try it",
    "start": "5193679",
    "end": "5200139"
  },
  {
    "text": "out to get a feel of how extensions how powerful runtime extensions are and how you can use them",
    "start": "5200139",
    "end": "5207239"
  },
  {
    "text": "now uh let's also try to delete the cluster and we should receive similarly receive a delete cluster hook and again",
    "start": "5213460",
    "end": "5220900"
  },
  {
    "text": "this extension server def defaults to just allow allowing the operation to go",
    "start": "5220900",
    "end": "5226120"
  },
  {
    "text": "ahead and it doesn't block any of the operations and it should allow the workload cluster to get deleted but as I",
    "start": "5226120",
    "end": "5232600"
  },
  {
    "text": "mentioned there is an optional option section in which you should be able to block it and see that the workload",
    "start": "5232600",
    "end": "5238000"
  },
  {
    "text": "cluster deletion is blocked until the extension server responds with the success allow response",
    "start": "5238000",
    "end": "5245440"
  },
  {
    "text": "foreign",
    "start": "5245440",
    "end": "5247678"
  },
  {
    "text": "extension servers logs to see that it received the event",
    "start": "5258000",
    "end": "5263080"
  },
  {
    "text": "sorry",
    "start": "5263080",
    "end": "5265500"
  },
  {
    "text": "yeah it did receive the event as you can see here relax",
    "start": "5272380",
    "end": "5279300"
  },
  {
    "text": "let's just clean up let's just clean up the extension server so that we don't change the change any other items here",
    "start": "5282360",
    "end": "5290520"
  },
  {
    "text": "fine yeah",
    "start": "5312340",
    "end": "5317460"
  },
  {
    "text": "okay so we wrap it up here thanks everyone for coming",
    "start": "5342820",
    "end": "5348420"
  },
  {
    "text": "um we would have had one last section which is about self-hosted clusters so how to use cluster API to manage cluster",
    "start": "5350800",
    "end": "5357280"
  },
  {
    "text": "API itself um feel free to follow up at home if you have any problems any questions",
    "start": "5357280",
    "end": "5363100"
  },
  {
    "text": "we are in the Upstream cognatus slack Channel cluster API feel free to ask",
    "start": "5363100",
    "end": "5368800"
  },
  {
    "text": "whenever you need anything yeah that's it feel free to stick around ask some questions but let's say to official Park",
    "start": "5368800",
    "end": "5377219"
  },
  {
    "text": "thanks everyone",
    "start": "5377219",
    "end": "5380400"
  }
]