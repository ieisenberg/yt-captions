[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "all right so a couple things before I get started first I just want to thank everybody for coming out",
    "start": "4799",
    "end": "10679"
  },
  {
    "text": "um this is definitely the biggest uh crowd I've ever seen for a web assembly",
    "start": "10679",
    "end": "16680"
  },
  {
    "text": "talk you are all here for web assembly right it's not you're okay just making sure you're not in the wrong room",
    "start": "16680",
    "end": "22980"
  },
  {
    "text": "uh let's see second I apologize if the reflection off my head is uncomfortable for some of you the",
    "start": "22980",
    "end": "29519"
  },
  {
    "text": "the lights here are pretty intense wasn't counting on that all right so",
    "start": "29519",
    "end": "36239"
  },
  {
    "text": "uh my name is Kevin Hoffman I'm the CTO and co-founder of cosmonic which is a",
    "start": "36239",
    "end": "41460"
  },
  {
    "text": "webassembly Paz I created the web web assembly open source project called wasmcloud",
    "start": "41460",
    "end": "48840"
  },
  {
    "text": "uh wrote a couple of books and I'm very easily nerd sniped all you have",
    "start": "48840",
    "end": "54840"
  },
  {
    "text": "to do is say one or two distributed systems buzzwords and I'll wake up a",
    "start": "54840",
    "end": "60840"
  },
  {
    "text": "week later with a thousand open browser tabs so my goal for this session is to",
    "start": "60840",
    "end": "68340"
  },
  {
    "text": "hopefully make it so that you will want to leave and go and start playing with",
    "start": "68340",
    "end": "75600"
  },
  {
    "text": "this stuff and explore it so that's that's the goal",
    "start": "75600",
    "end": "82380"
  },
  {
    "text": "so basically going to go through some",
    "start": "82380",
    "end": "87840"
  },
  {
    "text": "layers at the base layer I'm going to talk about what web assembly is so actually I need to pause before that uh",
    "start": "87840",
    "end": "95700"
  },
  {
    "text": "I checked that you're all in the right room but how many of you have used webassembly",
    "start": "95700",
    "end": "101820"
  },
  {
    "text": "that is insane okay how many of you are sick of hearing about webassembly",
    "start": "101820",
    "end": "109200"
  },
  {
    "text": "a couple in the back I see you um so another goal is to hopefully try and",
    "start": "109200",
    "end": "116220"
  },
  {
    "text": "convince you that all of the hype around webassembly isn't just hype and there's",
    "start": "116220",
    "end": "121799"
  },
  {
    "text": "actually some meat on this so after I go through webassembly we'll talk about wasm Cloud that'll talk about",
    "start": "121799",
    "end": "128759"
  },
  {
    "text": "how you can build all sorts of things on top of the wasm cloud and the thing that I'm going to talk about today is event",
    "start": "128759",
    "end": "134819"
  },
  {
    "text": "sourcing uh and then hopefully I'll be able to get to the demos fairly quickly so we",
    "start": "134819",
    "end": "140340"
  },
  {
    "text": "can get to QA um I can I'm going to skim through this",
    "start": "140340",
    "end": "145980"
  },
  {
    "start": "143000",
    "end": "143000"
  },
  {
    "text": "fairly quickly uh webassembly is an open standard uh and the usual buzzwords are",
    "start": "145980",
    "end": "153000"
  },
  {
    "text": "that it's safe and secure it's fast and efficient uh polyglot and portable",
    "start": "153000",
    "end": "159800"
  },
  {
    "start": "161000",
    "end": "161000"
  },
  {
    "text": "wasmcloud is how many of you have heard of wasmcloud",
    "start": "161160",
    "end": "166920"
  },
  {
    "text": "okay that's also insane great um cloud is an open source runtime that",
    "start": "166920",
    "end": "173340"
  },
  {
    "text": "sits on top of webassembly and adds what amounts to you an orchestration layer in",
    "start": "173340",
    "end": "179519"
  },
  {
    "text": "an application runtime it gives you secure access to capabilities and I'll",
    "start": "179519",
    "end": "186300"
  },
  {
    "text": "talk about what capabilities are in a minute it's horizontally and vertically scalable but the thing that I think is",
    "start": "186300",
    "end": "192360"
  },
  {
    "text": "most important about was and cloud is that it moves the decision about the",
    "start": "192360",
    "end": "198180"
  },
  {
    "text": "size and shape of your application from design and compile time to something",
    "start": "198180",
    "end": "203280"
  },
  {
    "text": "that you can just adjust at runtime you should be able to take your monolith",
    "start": "203280",
    "end": "208440"
  },
  {
    "text": "that runs on your laptop turn a knob and spread it out across global distribution",
    "start": "208440",
    "end": "213599"
  },
  {
    "text": "without having to recompile your code",
    "start": "213599",
    "end": "217400"
  },
  {
    "text": "not sure why these are all animated my skills with slides are fantastic all",
    "start": "219360",
    "end": "226500"
  },
  {
    "text": "right so the basic primitive when you're building applications with Wiseman cloud",
    "start": "226500",
    "end": "231900"
  },
  {
    "text": "is what's called an actor they are inspired by the actor model and",
    "start": "231900",
    "end": "237239"
  },
  {
    "text": "the goal is to build your business logic in these units these web assembly",
    "start": "237239",
    "end": "243060"
  },
  {
    "text": "modules that are um freestanding and",
    "start": "243060",
    "end": "249500"
  },
  {
    "text": "Tiny and affordable and scalable and secure and I've got a red asterisk next to",
    "start": "249500",
    "end": "257040"
  },
  {
    "text": "components because at the moment the webassembly component model is still",
    "start": "257040",
    "end": "262560"
  },
  {
    "text": "fairly volatile so while we have support for this right now the developer",
    "start": "262560",
    "end": "269100"
  },
  {
    "text": "experience isn't quite where I'd want it to be that's stabilizing soon as the",
    "start": "269100",
    "end": "275580"
  },
  {
    "text": "standards firm up but the short version is",
    "start": "275580",
    "end": "280620"
  },
  {
    "text": "write your business logic compile it to a webassembly module and we call that an actor",
    "start": "280620",
    "end": "286880"
  },
  {
    "start": "286000",
    "end": "286000"
  },
  {
    "text": "capabilities are a separation of",
    "start": "286880",
    "end": "292199"
  },
  {
    "text": "the purpose of your code from how your code executes so if I want to write code",
    "start": "292199",
    "end": "298560"
  },
  {
    "text": "that talks to a key Value Store I my code should not have to care about",
    "start": "298560",
    "end": "304259"
  },
  {
    "text": "how it communicates with that key value store or even what key value store it is all I want to do is get and set data and",
    "start": "304259",
    "end": "312300"
  },
  {
    "text": "that's it so this decouples the libraries from business logic and we cryptographically",
    "start": "312300",
    "end": "319500"
  },
  {
    "text": "signed them so the actors that are running in wasm Cloud have an explicit",
    "start": "319500",
    "end": "325500"
  },
  {
    "text": "Grant of privileges so in addition to the webassembly sandbox and all of the",
    "start": "325500",
    "end": "332220"
  },
  {
    "text": "other security you get wise and Cloud will prevent any webassembly module from",
    "start": "332220",
    "end": "337380"
  },
  {
    "text": "talking to a capability that it's not supposed to",
    "start": "337380",
    "end": "342080"
  },
  {
    "start": "342000",
    "end": "342000"
  },
  {
    "text": "weapon Cloud also comes with what we call a lattice it's essentially the webassembly version of a cluster it's a",
    "start": "342960",
    "end": "350280"
  },
  {
    "text": "flat topology with no Discovery required so every one of the actors that you've",
    "start": "350280",
    "end": "356280"
  },
  {
    "text": "deployed regardless of where you deployed it or how you deployed it is accessible on",
    "start": "356280",
    "end": "361979"
  },
  {
    "text": "this cluster and you can simply communicate it with it and it just works a lot of that is enabled by Nats which",
    "start": "361979",
    "end": "369360"
  },
  {
    "text": "is another cncf project",
    "start": "369360",
    "end": "373520"
  },
  {
    "text": "has anybody heard of Nets okay I'm definitely in the right room",
    "start": "374520",
    "end": "380639"
  },
  {
    "text": "all right so let's do some demos",
    "start": "380639",
    "end": "385220"
  },
  {
    "text": "so the first thing I want to show is this which is a dashboard that was in",
    "start": "385979",
    "end": "392639"
  },
  {
    "text": "Cloud provides this is I'm essentially looking at a wasm cloud host and you can",
    "start": "392639",
    "end": "399419"
  },
  {
    "text": "see I've got a couple of actors in here my list of capability providers I've got a web server",
    "start": "399419",
    "end": "405660"
  },
  {
    "text": "event sourcing which I'm going to show in a minute and also redis",
    "start": "405660",
    "end": "411240"
  },
  {
    "text": "and these actors are linked to these providers through configuration that's all that's",
    "start": "411240",
    "end": "417960"
  },
  {
    "text": "set up down here and I don't want to go through all the low level details but",
    "start": "417960",
    "end": "426120"
  },
  {
    "text": "one thing that I think is important to point out here is that the actors don't own the the",
    "start": "426120",
    "end": "434759"
  },
  {
    "text": "abilities so when I'm building a microservice and go",
    "start": "434759",
    "end": "440160"
  },
  {
    "text": "and you know it has a restful API and it talks to a SQL database when I build",
    "start": "440160",
    "end": "447180"
  },
  {
    "text": "that it owns my choice of client for the database and it owns the web server and",
    "start": "447180",
    "end": "453660"
  },
  {
    "text": "it owns how the web server starts what port number it picks all of that stuff is in my application and I own it",
    "start": "453660",
    "end": "462060"
  },
  {
    "text": "whether I like it or not what wasmcloud does is make it so that",
    "start": "462060",
    "end": "468900"
  },
  {
    "text": "the infrastructure owns the abilities and your code just works against the",
    "start": "468900",
    "end": "474240"
  },
  {
    "text": "abstractions so it's kind of hard to tell from here but the echoactor and the",
    "start": "474240",
    "end": "481440"
  },
  {
    "text": "KV counteractor are both using the same web server ability they just have",
    "start": "481440",
    "end": "487680"
  },
  {
    "text": "different configurations the KV counteractor and the bank account projector are both connected to a redis",
    "start": "487680",
    "end": "495240"
  },
  {
    "text": "key Value Store but three different configurations so if let's say I have a logging ability",
    "start": "495240",
    "end": "503819"
  },
  {
    "text": "and there's a giant vulnerability in the log application or in the log Library",
    "start": "503819",
    "end": "511440"
  },
  {
    "text": "instead of having to take every single team that has that dependency force them",
    "start": "511440",
    "end": "517200"
  },
  {
    "text": "to stop what they're doing and make them put be patch fix into their release cycle I",
    "start": "517200",
    "end": "523020"
  },
  {
    "text": "can just change the the ability at runtime and none of the actors know about it and I only have to change it",
    "start": "523020",
    "end": "530040"
  },
  {
    "text": "once so I could I could literally Swap this redis provider out for Cassandra and",
    "start": "530040",
    "end": "537600"
  },
  {
    "text": "none of the actors would know nor would they miss a message so the first actor is the echo actor and",
    "start": "537600",
    "end": "547620"
  },
  {
    "text": "in typical fashion I'm just going to demo some Json here and this is I'm sorry I haven't been",
    "start": "547620",
    "end": "556140"
  },
  {
    "text": "able to figure out how to zoom in on the new browser but basically I'm just running",
    "start": "556140",
    "end": "563399"
  },
  {
    "text": "I'm accessing my actor and if I take a look at the code for this",
    "start": "563399",
    "end": "569720"
  },
  {
    "text": " there we go this is the entire thing everything else",
    "start": "573480",
    "end": "579600"
  },
  {
    "text": "is just you know headers and and things like that this",
    "start": "579600",
    "end": "584880"
  },
  {
    "text": "this actor is a web assembly module that is that declares that it talks to a web",
    "start": "584880",
    "end": "592380"
  },
  {
    "text": "server it takes a web request as input and returns an HTTP response as output",
    "start": "592380",
    "end": "598620"
  },
  {
    "text": "there's nothing else here uh you know there's no port number there's no TLS termination there's no",
    "start": "598620",
    "end": "605700"
  },
  {
    "text": "certificates all of the stuff that my code should not care about is missing from this",
    "start": "605700",
    "end": "612540"
  },
  {
    "text": "so the next one that's also running in this web in this uh post",
    "start": "612540",
    "end": "617580"
  },
  {
    "text": "is this thing called the key value counter and the key value counter is similar to the yaco actor except it's",
    "start": "617580",
    "end": "624300"
  },
  {
    "text": "receiving a web request incrementing a value in a key value store and then returning that data and",
    "start": "624300",
    "end": "631620"
  },
  {
    "text": "if I look at that one",
    "start": "631620",
    "end": "634940"
  },
  {
    "text": "you'll see it's got a little bit of a restful API here and then",
    "start": "636660",
    "end": "642839"
  },
  {
    "text": "when it increments the counter that's it",
    "start": "642839",
    "end": "648540"
  },
  {
    "text": "sorry I'm having some track pad issues I just call them increment on my abstraction and then the runtime takes",
    "start": "648540",
    "end": "655560"
  },
  {
    "text": "care of the rest so when I call increment here it could be in the middle of a unit",
    "start": "655560",
    "end": "662040"
  },
  {
    "text": "test in an acceptance test on my laptop using a memory store or like I'm new now",
    "start": "662040",
    "end": "669779"
  },
  {
    "text": "it's in redis and let me see if I can",
    "start": "669779",
    "end": "675839"
  },
  {
    "text": "just to show that",
    "start": "675839",
    "end": "678980"
  },
  {
    "text": "yeah there's my cubecon counter so",
    "start": "681480",
    "end": "685760"
  },
  {
    "text": "apologies for the typing all right so that's just wanted to show you that there's",
    "start": "689459",
    "end": "694500"
  },
  {
    "text": "nothing up my short sleeves so",
    "start": "694500",
    "end": "700699"
  },
  {
    "text": "we've got the counter and we've got an echo and all of this is rigged up",
    "start": "701040",
    "end": "707700"
  },
  {
    "text": "through awesome Cloud host and you get one of these just by typing wash up the wash is the command line tool for wasm",
    "start": "707700",
    "end": "715260"
  },
  {
    "text": "cloud so let me see if I can get back here",
    "start": "715260",
    "end": "721399"
  },
  {
    "text": "so all right",
    "start": "723420",
    "end": "729620"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "so with wise and Cloud you saw that we can build a fully functional",
    "start": "731579",
    "end": "736680"
  },
  {
    "text": "applications microservices functions as a service monoliths fully distributed systems",
    "start": "736680",
    "end": "743880"
  },
  {
    "text": "all just using simple webassembly modules and they can deploy to anywhere",
    "start": "743880",
    "end": "749940"
  },
  {
    "text": "from anywhere and one of the really powerful things about Wiles and Cloud isn't that it",
    "start": "749940",
    "end": "756440"
  },
  {
    "text": "isn't just an end goal for building applications it's that you can build",
    "start": "756440",
    "end": "761720"
  },
  {
    "text": "your own capabilities so we saw that a web server is a",
    "start": "761720",
    "end": "768600"
  },
  {
    "text": "capability and key value store is the capability there's things like message Brokers and SQL databases and I even",
    "start": "768600",
    "end": "776339"
  },
  {
    "text": "wrote a telnet one because that's just how nerdy I am and event sourcing is",
    "start": "776339",
    "end": "782760"
  },
  {
    "text": "actually a capability that we added to wasm Cloud so",
    "start": "782760",
    "end": "790560"
  },
  {
    "text": "who here has heard of or used event sourcing",
    "start": "790560",
    "end": "796139"
  },
  {
    "text": "keep your hand up if it was a horrible painful experience yep",
    "start": "796139",
    "end": "801800"
  },
  {
    "text": "that's as expected so the key pieces of event sourcing is that",
    "start": "801800",
    "end": "809040"
  },
  {
    "text": "reality is event sourced everything that happens in the world has already happened it's in the past",
    "start": "809040",
    "end": "815820"
  },
  {
    "text": "and we take that same concept and apply it to an application and say that the state of the our",
    "start": "815820",
    "end": "822300"
  },
  {
    "text": "application is derived as a fold or you know just some function across",
    "start": "822300",
    "end": "829079"
  },
  {
    "text": "the stream of events um event sourcing is the strict and",
    "start": "829079",
    "end": "835560"
  },
  {
    "text": "opinionated version of some other buzzwords that you've probably heard like event driven cqrs and so on there's",
    "start": "835560",
    "end": "843600"
  },
  {
    "text": "a there's a level of rigor and discipline uh jump between just having a reactive",
    "start": "843600",
    "end": "850860"
  },
  {
    "text": "app or an event driven app to being event sourced and what that usually means is there are rules that you",
    "start": "850860",
    "end": "856980"
  },
  {
    "text": "shouldn't break that everyone breaks um event sourcing or event sourced apps are",
    "start": "856980",
    "end": "864660"
  },
  {
    "text": "built out of a bunch of primitive Lego blocks that you stitch together to form your own there are Aggregates projectors",
    "start": "864660",
    "end": "872100"
  },
  {
    "text": "process managers the terminology gets a little muddy when we talk about IO I",
    "start": "872100",
    "end": "877980"
  },
  {
    "text": "refer to them as gateways which are made up of notifiers and injectors and concordance is the name of the open",
    "start": "877980",
    "end": "885779"
  },
  {
    "text": "source event sourcing capability provider that cosmonic created",
    "start": "885779",
    "end": "890959"
  },
  {
    "start": "892000",
    "end": "892000"
  },
  {
    "text": "so why do we actually care about event sourcing especially when it comes to distributed",
    "start": "892019",
    "end": "899040"
  },
  {
    "text": "systems one thing that we always want is a single source of immutable truth",
    "start": "899040",
    "end": "905100"
  },
  {
    "text": "having built applications that have caught fire in production many times",
    "start": "905100",
    "end": "910440"
  },
  {
    "text": "one problem that we typically run into is not only do we have multiple sources of",
    "start": "910440",
    "end": "917399"
  },
  {
    "text": "Truth in that in production but we have multiple conflicting sources of Truth and that usually ends up producing a bad",
    "start": "917399",
    "end": "926399"
  },
  {
    "text": "experience for the people trying to use your app another thing that's sort of a different",
    "start": "926399",
    "end": "932279"
  },
  {
    "text": "mindset between the quote unquote regular application and an event sourced one is that",
    "start": "932279",
    "end": "939420"
  },
  {
    "text": "failures are actually modeled as events rather than things that we suppress",
    "start": "939420",
    "end": "945540"
  },
  {
    "text": "inside a try catch block they're designed for evolutionary",
    "start": "945540",
    "end": "951240"
  },
  {
    "text": "architectures one of the phrases you may have seen on some blog posts is that event sourcing",
    "start": "951240",
    "end": "957420"
  },
  {
    "text": "is all about choreography whereas the traditional model of microservices is about orchestration",
    "start": "957420",
    "end": "965000"
  },
  {
    "text": "and finally and probably one of the more important ones is that with event sourcing",
    "start": "965000",
    "end": "971459"
  },
  {
    "text": "not only do you have the state of your application but you have how that state",
    "start": "971459",
    "end": "977220"
  },
  {
    "text": "came to be and why it is what it is and that helps for a number of reasons but a",
    "start": "977220",
    "end": "984240"
  },
  {
    "text": "lot of times it's just there to make to make auditing and compliance rules happy",
    "start": "984240",
    "end": "989760"
  },
  {
    "text": "but uh in the demo I'll show some of the other reasons why having those is",
    "start": "989760",
    "end": "995040"
  },
  {
    "text": "important so those of you who kept your hands up",
    "start": "995040",
    "end": "1000079"
  },
  {
    "start": "996000",
    "end": "996000"
  },
  {
    "text": "when I asked if your event sourcing attempts had been horrible dumpster fires",
    "start": "1000079",
    "end": "1007060"
  },
  {
    "text": "a lot of times when people build their Source applications",
    "start": "1007579",
    "end": "1012740"
  },
  {
    "text": "um they fail and people I've been in this",
    "start": "1012740",
    "end": "1018139"
  },
  {
    "text": "boat before where I've blamed event sourcing for the failure",
    "start": "1018139",
    "end": "1023919"
  },
  {
    "text": "so when we do Event Source applications we have to do a little bit more upfront work it requires more design we have to",
    "start": "1023919",
    "end": "1031938"
  },
  {
    "text": "model the flows through the system rather than just the data that we read and write",
    "start": "1031939",
    "end": "1037760"
  },
  {
    "text": "a lot of times for very small applications event sourcing is uh way",
    "start": "1037760",
    "end": "1043100"
  },
  {
    "text": "too much it's Overkill and it ends up taking too much time to maintain so",
    "start": "1043100",
    "end": "1049100"
  },
  {
    "text": "people throw it out and like I said there is a pretty big",
    "start": "1049100",
    "end": "1055340"
  },
  {
    "text": "penalty for doing it wrong you can get all the way to production and have your",
    "start": "1055340",
    "end": "1060559"
  },
  {
    "text": "Event Source system fail in completely unexpected yet horrible ways",
    "start": "1060559",
    "end": "1067220"
  },
  {
    "text": "and another one is that event sourcing is just not the default way people build",
    "start": "1067220",
    "end": "1072740"
  },
  {
    "text": "applications so usually you have to have teams ramp up on how to build it and",
    "start": "1072740",
    "end": "1081100"
  },
  {
    "text": "you know how to follow the right patterns so first primitive Lego block that I",
    "start": "1081100",
    "end": "1089120"
  },
  {
    "start": "1085000",
    "end": "1085000"
  },
  {
    "text": "mentioned is an aggregate Aggregates in an Event Source system they take commands and convert them into",
    "start": "1089120",
    "end": "1096559"
  },
  {
    "text": "events so in other words a command will ask the system to do something and when",
    "start": "1096559",
    "end": "1103280"
  },
  {
    "text": "the aggregate invalidates the command it emits an event saying this this actually occurred",
    "start": "1103280",
    "end": "1109160"
  },
  {
    "text": "Aggregates have their own State and the part of the one of the many reasons",
    "start": "1109160",
    "end": "1117160"
  },
  {
    "text": "where we fail is Aggregates are purely functional they must not have side",
    "start": "1117160",
    "end": "1122660"
  },
  {
    "text": "effects and they cannot do work and probably the number one failure I see",
    "start": "1122660",
    "end": "1128900"
  },
  {
    "text": "with them at source apps is Aggregates that commit side effects",
    "start": "1128900",
    "end": "1135039"
  },
  {
    "start": "1135000",
    "end": "1135000"
  },
  {
    "text": "projectors are designed to build the read model for your application in an",
    "start": "1135679",
    "end": "1141320"
  },
  {
    "text": "event sourced app rather than the Consumer of your app making a query and",
    "start": "1141320",
    "end": "1147020"
  },
  {
    "text": "your code doing some kind of a join on a database uh with an Event Source system you can",
    "start": "1147020",
    "end": "1154340"
  },
  {
    "text": "generally anticipate what data your customers are going to need and what shape that's going to take",
    "start": "1154340",
    "end": "1160539"
  },
  {
    "text": "so rather than building that ad hoc when they query an Event Source system will",
    "start": "1160539",
    "end": "1166640"
  },
  {
    "text": "build that when the data changes so every time an event comes through",
    "start": "1166640",
    "end": "1171980"
  },
  {
    "text": "a projector will take that event and create a read model and I'll show some",
    "start": "1171980",
    "end": "1177320"
  },
  {
    "text": "of that in in the demo you can choose whatever you want to do for storage",
    "start": "1177320",
    "end": "1182840"
  },
  {
    "text": "because these projectors are also wasm Cloud components you have access to all",
    "start": "1182840",
    "end": "1189440"
  },
  {
    "text": "the capabilities that regular actors do so you can use key value stores SQL",
    "start": "1189440",
    "end": "1195320"
  },
  {
    "text": "database there's access to blob stores and so on",
    "start": "1195320",
    "end": "1201320"
  },
  {
    "text": "you can regenerate your projections on demand this is another thing that kind of",
    "start": "1201320",
    "end": "1207200"
  },
  {
    "text": "scares people is that you can completely blow away all of your application State and",
    "start": "1207200",
    "end": "1213620"
  },
  {
    "text": "no harm done you just run through the events again and regenerate your app",
    "start": "1213620",
    "end": "1219080"
  },
  {
    "text": "State and that's actually I don't have enough time to demo that but that's how you actually migrate",
    "start": "1219080",
    "end": "1224120"
  },
  {
    "text": "schemas projectors are stateless with an",
    "start": "1224120",
    "end": "1229340"
  },
  {
    "text": "asterisk in that the projector doesn't maintain State all it does is build the read model which is external state",
    "start": "1229340",
    "end": "1238179"
  },
  {
    "start": "1237000",
    "end": "1237000"
  },
  {
    "text": "process managers some of you may have heard the term Saga before process manager is essentially the strict",
    "start": "1238640",
    "end": "1245840"
  },
  {
    "text": "opinionated event sourced version of asaga and their job is essentially the",
    "start": "1245840",
    "end": "1252559"
  },
  {
    "text": "opposite of an aggregate they take events and convert them into commands so",
    "start": "1252559",
    "end": "1258320"
  },
  {
    "text": "they monitor when things take place and then if something else needs to happen",
    "start": "1258320",
    "end": "1263600"
  },
  {
    "text": "as a result the process manager kicks that off through a command and the reason that",
    "start": "1263600",
    "end": "1269419"
  },
  {
    "text": "I've Got The Dominoes here is that typically what you see in production",
    "start": "1269419",
    "end": "1276080"
  },
  {
    "text": "for any large Event Source application is one command may go through and then",
    "start": "1276080",
    "end": "1282380"
  },
  {
    "text": "any number of process managers will kick off and you'll just see a massive stream pun intended of events that happen as a",
    "start": "1282380",
    "end": "1290600"
  },
  {
    "text": "result and I'll show some of this in the demo but is a little scary because people",
    "start": "1290600",
    "end": "1297940"
  },
  {
    "text": "aren't used to having things happen unattended that way",
    "start": "1297940",
    "end": "1303880"
  },
  {
    "start": "1304000",
    "end": "1304000"
  },
  {
    "text": "gateways I'm not sure if Gateway is an official term or if that's just what I call them",
    "start": "1304960",
    "end": "1310820"
  },
  {
    "text": "but you need to have i o somehow in an Event",
    "start": "1310820",
    "end": "1315980"
  },
  {
    "text": "Source system if your Aggregates can't do work your projectors can't do work the and your process managers can't have",
    "start": "1315980",
    "end": "1324200"
  },
  {
    "text": "state then you need dedicated Primitives that are designed to",
    "start": "1324200",
    "end": "1330559"
  },
  {
    "text": "deal with IO as a side effect in a way that doesn't actually pollute",
    "start": "1330559",
    "end": "1335840"
  },
  {
    "text": "your event stream and that's a whole it's a whole separate could be a whole",
    "start": "1335840",
    "end": "1341539"
  },
  {
    "text": "separate talk so the sample that I'm going to walk through",
    "start": "1341539",
    "end": "1347240"
  },
  {
    "start": "1343000",
    "end": "1343000"
  },
  {
    "text": "is well event sourcing is a little hard to do in hello world because it's",
    "start": "1347240",
    "end": "1354200"
  },
  {
    "text": "inherently more complex than that so one of the simpler apps that you can do in",
    "start": "1354200",
    "end": "1359299"
  },
  {
    "text": "event sourcing is banking so we have an account Aggregate and",
    "start": "1359299",
    "end": "1364580"
  },
  {
    "text": "like I said they take commands so you'll see commands like create account deposit funds Reserve release",
    "start": "1364580",
    "end": "1371360"
  },
  {
    "text": "and so on the aggregate then emits the past tense",
    "start": "1371360",
    "end": "1377659"
  },
  {
    "text": "version of those commands now there isn't always a one-to-one correlation but it's it's pretty common so we get",
    "start": "1377659",
    "end": "1384980"
  },
  {
    "text": "account created funds deposited things like that the the domain doesn't really matter too",
    "start": "1384980",
    "end": "1390799"
  },
  {
    "text": "much it's just a domain that's simple enough for me to be able to demo some of this",
    "start": "1390799",
    "end": "1398320"
  },
  {
    "text": "and then the process manager in response to a number of events will kick off more",
    "start": "1399380",
    "end": "1405020"
  },
  {
    "text": "commands which could then produce more events and so on hence the Domino analogy",
    "start": "1405020",
    "end": "1411740"
  },
  {
    "text": "uh has anybody familiar with Cloud events",
    "start": "1411740",
    "end": "1416840"
  },
  {
    "text": "all right so Cloud events there's a booth for them out there um it's a cncf project that defines a",
    "start": "1416840",
    "end": "1425659"
  },
  {
    "text": "standard envelope for event data and so concordance uses that so",
    "start": "1425659",
    "end": "1433900"
  },
  {
    "text": "part of the problem with a number of Event Source systems is the events themselves aren't",
    "start": "1433900",
    "end": "1440840"
  },
  {
    "text": "um you can't reflect over them they're not introspectable so by having them as",
    "start": "1440840",
    "end": "1446120"
  },
  {
    "text": "simple Json payloads it's easy for both humans and machines to read them",
    "start": "1446120",
    "end": "1451820"
  },
  {
    "text": "the big the important bit here is you can see the type of the event which is",
    "start": "1451820",
    "end": "1458480"
  },
  {
    "text": "used for event dispatch and so this is a simple command Handler",
    "start": "1458480",
    "end": "1467179"
  },
  {
    "text": "in the aggregate and similar to the pattern that we saw with",
    "start": "1467179",
    "end": "1473480"
  },
  {
    "text": "the web server that takes a request and returns a response this function withdrawal funds takes a",
    "start": "1473480",
    "end": "1480320"
  },
  {
    "text": "command and returns a list of events so it takes the withdrawal funds command",
    "start": "1480320",
    "end": "1485780"
  },
  {
    "text": "and returns a fund's withdrawn event and there's some business logic in here to",
    "start": "1485780",
    "end": "1491840"
  },
  {
    "text": "make sure that I can't withdraw beyond my available balance but what's missing",
    "start": "1491840",
    "end": "1497480"
  },
  {
    "text": "here and that's a good thing is I don't see any information about how these messages",
    "start": "1497480",
    "end": "1504500"
  },
  {
    "text": "are dispatched I don't I'm not explicitly publishing events I'm not publishing commands I'm not",
    "start": "1504500",
    "end": "1511340"
  },
  {
    "text": "communicating with a state store all of that is taken care of for me by the",
    "start": "1511340",
    "end": "1516559"
  },
  {
    "text": "concordance capability provider so that I can write simple unit testable",
    "start": "1516559",
    "end": "1522679"
  },
  {
    "text": "functions that take predictable input and produce a predictable output",
    "start": "1522679",
    "end": "1528520"
  },
  {
    "text": "the same goes for applying events to an aggregate when you apply an event you the event",
    "start": "1529340",
    "end": "1536419"
  },
  {
    "text": "goes into the Aggregate and it uses that to mutate its own internal state so here we take the funds withdrawn event and",
    "start": "1536419",
    "end": "1544940"
  },
  {
    "text": "couldn't be simpler we subtract the event amount from the current balance and that's it there's this thing doesn't",
    "start": "1544940",
    "end": "1552500"
  },
  {
    "text": "know about read models doesn't care about them doesn't have any code to talk",
    "start": "1552500",
    "end": "1558020"
  },
  {
    "text": "to Kafka or event buses or anything else it's just a function that we can test",
    "start": "1558020",
    "end": "1565720"
  },
  {
    "text": "and uh is anybody familiar with wit in the component model all right one or two hands this uh I",
    "start": "1566860",
    "end": "1574640"
  },
  {
    "text": "mentioned that this is where dragons are because this is super early and very volatile",
    "start": "1574640",
    "end": "1579919"
  },
  {
    "text": "right now the both the wit spec and the support for component model in wasm time",
    "start": "1579919",
    "end": "1585500"
  },
  {
    "text": "is changing rapidly but the reason why I wanted to show this slide is",
    "start": "1585500",
    "end": "1592159"
  },
  {
    "text": "that in the near impending future we'll be able to Define your entire",
    "start": "1592159",
    "end": "1598520"
  },
  {
    "text": "event sourced model in terms of",
    "start": "1598520",
    "end": "1605860"
  },
  {
    "text": "um hopefully that doesn't mean I'm running late on time but you'll be able to Define your model in terms of the",
    "start": "1606320",
    "end": "1613340"
  },
  {
    "text": "simple interface contract and co-generation will take care of everything for you",
    "start": "1613340",
    "end": "1619820"
  },
  {
    "text": "all right so I showed at the bottom you've got web assembly run times",
    "start": "1619820",
    "end": "1627039"
  },
  {
    "text": "whammer there's probably a half a dozen fairly common web assembly run times",
    "start": "1627400",
    "end": "1633620"
  },
  {
    "text": "that's gray because we don't care that's just something that's taken care",
    "start": "1633620",
    "end": "1639260"
  },
  {
    "text": "of for us was in cloud is the distributed computing framework that",
    "start": "1639260",
    "end": "1645740"
  },
  {
    "text": "sits on top of webassembly yeah I must be running late",
    "start": "1645740",
    "end": "1651440"
  },
  {
    "text": "concordance it's on tops of that and the code that you write is uh just on top of",
    "start": "1651440",
    "end": "1656779"
  },
  {
    "text": "that so let's see if I can get through the actual demo here",
    "start": "1656779",
    "end": "1663100"
  },
  {
    "text": "uh",
    "start": "1665480",
    "end": "1668440"
  },
  {
    "text": "all right let me just show you what I'm going to do here so this is going to send four commands",
    "start": "1674779",
    "end": "1681440"
  },
  {
    "text": "into the event sourcing system I'm going to create an account I'm going to make two deposits and then make one",
    "start": "1681440",
    "end": "1687740"
  },
  {
    "text": "withdrawal and what we should see on the other end of this is four permanently persisted events plus some projected",
    "start": "1687740",
    "end": "1695600"
  },
  {
    "text": "state so assuming the the demo gods are with me so that was super fast that's",
    "start": "1695600",
    "end": "1702320"
  },
  {
    "text": "intentional kind of why we built wasmcloud the uh these go through command dispatch",
    "start": "1702320",
    "end": "1710559"
  },
  {
    "text": "and if I view the event stream and now you see",
    "start": "1710559",
    "end": "1717860"
  },
  {
    "text": "why I wanted to use cloud events so that I can do stuff like this you'll see",
    "start": "1717860",
    "end": "1722960"
  },
  {
    "text": "that I've got an account created event funds deposited funds deposited and",
    "start": "1722960",
    "end": "1728240"
  },
  {
    "text": "funds withdrawn and if I go into redis and if I can actually type",
    "start": "1728240",
    "end": "1736059"
  },
  {
    "text": "so I've got a read model where I can query my current balance which is sixty dollars",
    "start": "1736880",
    "end": "1744200"
  },
  {
    "text": "and then",
    "start": "1744200",
    "end": "1747100"
  },
  {
    "text": "I can pull The Ledger the entire Ledger history out as a read model as well so",
    "start": "1751100",
    "end": "1757159"
  },
  {
    "text": "this essentially makes it seem this is building a read model so that I",
    "start": "1757159",
    "end": "1763100"
  },
  {
    "text": "can have my application consumers just get the data without any computation",
    "start": "1763100",
    "end": "1768559"
  },
  {
    "text": "costs it's a big O of one cost sorry I had to run through that",
    "start": "1768559",
    "end": "1773840"
  },
  {
    "start": "1773000",
    "end": "1773000"
  },
  {
    "text": "um so key takeaways here we should be writing features not Plumbing if you",
    "start": "1773840",
    "end": "1779299"
  },
  {
    "text": "find yourself writing Plumbing there there is a better way webassembly is the enabling technology",
    "start": "1779299",
    "end": "1786020"
  },
  {
    "text": "that will get you there but like Docker and kubernetes before it webassembly is",
    "start": "1786020",
    "end": "1791419"
  },
  {
    "text": "not the end goal it's the tool you want to use to get where you're going um",
    "start": "1791419",
    "end": "1797120"
  },
  {
    "text": "you should try out building distributed applications on wasmcloud Wells and cloud has a bunch of",
    "start": "1797120",
    "end": "1803240"
  },
  {
    "text": "connectors including one of the kubernetes that lets you talk to your legacy applications and you can build Event Source",
    "start": "1803240",
    "end": "1809120"
  },
  {
    "text": "applications on top of wazen Cloud via concordance and here we go",
    "start": "1809120",
    "end": "1815659"
  },
  {
    "text": "all right so uh hopefully I have enough time for questions I'm well I don't see the",
    "start": "1815659",
    "end": "1822200"
  },
  {
    "text": "amount of time signs so uh let's see if we can do some q a here",
    "start": "1822200",
    "end": "1829299"
  }
]