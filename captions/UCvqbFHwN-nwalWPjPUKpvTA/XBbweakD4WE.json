[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello everybody my name is jay pipes i'm",
    "start": "560",
    "end": "2879"
  },
  {
    "text": "an engineer on the eks team",
    "start": "2879",
    "end": "5120"
  },
  {
    "text": "at aws and i focus on open source",
    "start": "5120",
    "end": "7919"
  },
  {
    "text": "contribution",
    "start": "7919",
    "end": "8800"
  },
  {
    "text": "in particular in the kubernetes",
    "start": "8800",
    "end": "10160"
  },
  {
    "text": "ecosystem and today",
    "start": "10160",
    "end": "12160"
  },
  {
    "text": "i'm going to be talking a little bit",
    "start": "12160",
    "end": "13360"
  },
  {
    "text": "about the aws controllers for kubernetes",
    "start": "13360",
    "end": "16080"
  },
  {
    "text": "project or ack",
    "start": "16080",
    "end": "19600"
  },
  {
    "text": "so to sort of introduce you to ack i'm",
    "start": "19920",
    "end": "23039"
  },
  {
    "text": "going to tell you",
    "start": "23039",
    "end": "24000"
  },
  {
    "text": "a little story and it should be pretty",
    "start": "24000",
    "end": "26560"
  },
  {
    "text": "familiar to",
    "start": "26560",
    "end": "27439"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "quite a few of you so we've got alice",
    "start": "27439",
    "end": "30000"
  },
  {
    "text": "alice is a web developer",
    "start": "30000",
    "end": "31439"
  },
  {
    "text": "she develops a node.js application",
    "start": "31439",
    "end": "34640"
  },
  {
    "text": "and she's following most modern",
    "start": "34640",
    "end": "37200"
  },
  {
    "text": "application",
    "start": "37200",
    "end": "38320"
  },
  {
    "text": "um build techniques she's building her",
    "start": "38320",
    "end": "41280"
  },
  {
    "text": "application into immutable docker images",
    "start": "41280",
    "end": "44160"
  },
  {
    "text": "and developing on node.js",
    "start": "44160",
    "end": "47680"
  },
  {
    "text": "and she chooses to use sqlite for simple",
    "start": "47680",
    "end": "50399"
  },
  {
    "text": "storage",
    "start": "50399",
    "end": "50960"
  },
  {
    "text": "needs for her web application",
    "start": "50960",
    "end": "54320"
  },
  {
    "text": "oh i forgot to mention that alice is a",
    "start": "54320",
    "end": "56640"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "huge kubernetes fan of course",
    "start": "56640",
    "end": "60160"
  },
  {
    "text": "so alice goes to deploy her application",
    "start": "60160",
    "end": "63039"
  },
  {
    "text": "to",
    "start": "63039",
    "end": "63359"
  },
  {
    "text": "a target kubernetes cluster and um",
    "start": "63359",
    "end": "66640"
  },
  {
    "text": "to do so she does the typical cube",
    "start": "66640",
    "end": "68880"
  },
  {
    "text": "cuddle apply",
    "start": "68880",
    "end": "70159"
  },
  {
    "text": "for her deployment and a service",
    "start": "70159",
    "end": "73200"
  },
  {
    "text": "and possibly an ingress",
    "start": "73200",
    "end": "76400"
  },
  {
    "text": "um an ingress resource for top level",
    "start": "76400",
    "end": "80000"
  },
  {
    "text": "uh inbound routing everything is fine",
    "start": "80000",
    "end": "84240"
  },
  {
    "text": "um but then quite predictably sqlite",
    "start": "84240",
    "end": "88000"
  },
  {
    "text": "falls over it's not really designed for",
    "start": "88000",
    "end": "90079"
  },
  {
    "text": "heavily concurrent access and so when",
    "start": "90079",
    "end": "92240"
  },
  {
    "text": "10 users try to use her website all at",
    "start": "92240",
    "end": "94960"
  },
  {
    "text": "once",
    "start": "94960",
    "end": "95520"
  },
  {
    "text": "well uh things don't go uh very well",
    "start": "95520",
    "end": "98560"
  },
  {
    "text": "so alice she realizes that she needs a",
    "start": "98560",
    "end": "100960"
  },
  {
    "text": "real database and she knows that",
    "start": "100960",
    "end": "102880"
  },
  {
    "text": "postgres is a good example of a you know",
    "start": "102880",
    "end": "106000"
  },
  {
    "text": "quote real database",
    "start": "106000",
    "end": "107520"
  },
  {
    "text": "uh that is heavily concurrent and",
    "start": "107520",
    "end": "110799"
  },
  {
    "text": "um uh so she goes and she googles for",
    "start": "110799",
    "end": "115520"
  },
  {
    "start": "114000",
    "end": "114000"
  },
  {
    "text": "some tutorials on how do i set up",
    "start": "115520",
    "end": "118640"
  },
  {
    "text": "postgres to run on kubernetes and most",
    "start": "118640",
    "end": "121119"
  },
  {
    "text": "of those tutorials they sort of boil",
    "start": "121119",
    "end": "123360"
  },
  {
    "text": "down to what's on the screen here which",
    "start": "123360",
    "end": "125520"
  },
  {
    "text": "is",
    "start": "125520",
    "end": "126479"
  },
  {
    "text": "creating a secret in kubernetes creating",
    "start": "126479",
    "end": "129200"
  },
  {
    "text": "a",
    "start": "129200",
    "end": "129599"
  },
  {
    "text": "persistent volume claim for some storage",
    "start": "129599",
    "end": "132800"
  },
  {
    "text": "um creating a deployment for the",
    "start": "132800",
    "end": "136239"
  },
  {
    "text": "the database server heads and then a",
    "start": "136239",
    "end": "139280"
  },
  {
    "text": "service record um for the postgres",
    "start": "139280",
    "end": "142560"
  },
  {
    "text": "database service all of that goes to",
    "start": "142560",
    "end": "146160"
  },
  {
    "text": "plan",
    "start": "146160",
    "end": "147760"
  },
  {
    "text": "but unfortunately alice realizes that",
    "start": "147760",
    "end": "150319"
  },
  {
    "text": "she's now",
    "start": "150319",
    "end": "150959"
  },
  {
    "text": "in the database administrator game and",
    "start": "150959",
    "end": "152959"
  },
  {
    "text": "that's definitely not what alice had in",
    "start": "152959",
    "end": "154560"
  },
  {
    "text": "mind",
    "start": "154560",
    "end": "155519"
  },
  {
    "text": "when she deployed her",
    "start": "155519",
    "end": "158800"
  },
  {
    "text": "initial node.js application to",
    "start": "158800",
    "end": "160480"
  },
  {
    "text": "kubernetes um",
    "start": "160480",
    "end": "162160"
  },
  {
    "text": "so alice really wants to focus on her",
    "start": "162160",
    "end": "164560"
  },
  {
    "text": "application",
    "start": "164560",
    "end": "165440"
  },
  {
    "text": "um she doesn't really want to be a dba",
    "start": "165440",
    "end": "167840"
  },
  {
    "text": "that's not what she had in mind so what",
    "start": "167840",
    "end": "169680"
  },
  {
    "text": "can",
    "start": "169680",
    "end": "170000"
  },
  {
    "text": "she do so alice hears about",
    "start": "170000",
    "end": "173599"
  },
  {
    "start": "172000",
    "end": "172000"
  },
  {
    "text": "amazon rds the relational database",
    "start": "173599",
    "end": "175760"
  },
  {
    "text": "service and it",
    "start": "175760",
    "end": "176800"
  },
  {
    "text": "kind of sounds like hey this is a great",
    "start": "176800",
    "end": "179040"
  },
  {
    "text": "solution here",
    "start": "179040",
    "end": "180239"
  },
  {
    "text": "um it's going to take away all the pain",
    "start": "180239",
    "end": "182560"
  },
  {
    "text": "points that",
    "start": "182560",
    "end": "183360"
  },
  {
    "text": "she has about installing and maintaining",
    "start": "183360",
    "end": "187120"
  },
  {
    "text": "postgres by um you know doing all that",
    "start": "187120",
    "end": "190080"
  },
  {
    "text": "for",
    "start": "190080",
    "end": "190560"
  },
  {
    "text": "alice but there is a little bit of a",
    "start": "190560",
    "end": "194000"
  },
  {
    "text": "problem",
    "start": "194000",
    "end": "194959"
  },
  {
    "text": "and i did mention that alice was a huge",
    "start": "194959",
    "end": "197200"
  },
  {
    "start": "196000",
    "end": "196000"
  },
  {
    "text": "kubernetes fan",
    "start": "197200",
    "end": "198560"
  },
  {
    "text": "and um alice goes to use",
    "start": "198560",
    "end": "201599"
  },
  {
    "text": "amazon rds and she goes to the amazon",
    "start": "201599",
    "end": "204480"
  },
  {
    "text": "web",
    "start": "204480",
    "end": "205120"
  },
  {
    "text": "web console and she clicks through",
    "start": "205120",
    "end": "208640"
  },
  {
    "text": "some sort of gui wizards to to create",
    "start": "208640",
    "end": "211280"
  },
  {
    "text": "her database",
    "start": "211280",
    "end": "212000"
  },
  {
    "text": "instance and she just doesn't really",
    "start": "212000",
    "end": "215519"
  },
  {
    "text": "like it right she she where's where's",
    "start": "215519",
    "end": "217599"
  },
  {
    "text": "her cozy kubernetes experience that she",
    "start": "217599",
    "end": "219760"
  },
  {
    "text": "loves",
    "start": "219760",
    "end": "222080"
  },
  {
    "text": "well she doesn't have to use the web",
    "start": "222080",
    "end": "225440"
  },
  {
    "text": "console of course she could use the",
    "start": "225440",
    "end": "227200"
  },
  {
    "text": "aws cli tool or she could use a tool",
    "start": "227200",
    "end": "229760"
  },
  {
    "text": "like cloud formation or terraform",
    "start": "229760",
    "end": "232000"
  },
  {
    "text": "but at the end of the day none of those",
    "start": "232000",
    "end": "233760"
  },
  {
    "text": "things are kubernetes",
    "start": "233760",
    "end": "235120"
  },
  {
    "text": "and like i mentioned alice really does",
    "start": "235120",
    "end": "237280"
  },
  {
    "text": "love kubernetes so what is she to do",
    "start": "237280",
    "end": "240239"
  },
  {
    "text": "well what if she could just do this what",
    "start": "240239",
    "end": "242080"
  },
  {
    "text": "if she could cuddle apply",
    "start": "242080",
    "end": "243840"
  },
  {
    "text": "a kubernetes manifest with some yaml",
    "start": "243840",
    "end": "246560"
  },
  {
    "text": "that describes her rds database instance",
    "start": "246560",
    "end": "249599"
  },
  {
    "text": "and send that off to the kubernetes api",
    "start": "249599",
    "end": "252000"
  },
  {
    "text": "server",
    "start": "252000",
    "end": "252959"
  },
  {
    "text": "and have a kubernetes controller manage",
    "start": "252959",
    "end": "256239"
  },
  {
    "text": "the lifecycle of her",
    "start": "256239",
    "end": "257280"
  },
  {
    "text": "rds database instance for her well",
    "start": "257280",
    "end": "260479"
  },
  {
    "text": "this is pretty much what ack is",
    "start": "260479",
    "end": "263520"
  },
  {
    "text": "this is allowing kubernetes users to",
    "start": "263520",
    "end": "265600"
  },
  {
    "text": "continue using the kubernetes api",
    "start": "265600",
    "end": "267759"
  },
  {
    "text": "and the configuration language of the",
    "start": "267759",
    "end": "269840"
  },
  {
    "text": "kubernetes api machinery",
    "start": "269840",
    "end": "272080"
  },
  {
    "text": "to manage aws infrastructure resources",
    "start": "272080",
    "end": "275120"
  },
  {
    "text": "things like rds databases and s3 buckets",
    "start": "275120",
    "end": "278000"
  },
  {
    "text": "and sns topics etc",
    "start": "278000",
    "end": "281199"
  },
  {
    "text": "so that in a nutshell is what aws",
    "start": "281199",
    "end": "283759"
  },
  {
    "text": "controllers for kubernetes is all about",
    "start": "283759",
    "end": "285440"
  },
  {
    "text": "it's it's bridging the world of aws",
    "start": "285440",
    "end": "288639"
  },
  {
    "text": "service apis with the kubernetes api",
    "start": "288639",
    "end": "291919"
  },
  {
    "text": "and it's solving alice's problems and",
    "start": "291919",
    "end": "293919"
  },
  {
    "text": "let's see if it'll uh",
    "start": "293919",
    "end": "295120"
  },
  {
    "text": "solve yours too so",
    "start": "295120",
    "end": "298800"
  },
  {
    "text": "ack stands for aws controllers for",
    "start": "298800",
    "end": "302080"
  },
  {
    "text": "kubernetes and",
    "start": "302080",
    "end": "303360"
  },
  {
    "text": "in particular that's controllers plural",
    "start": "303360",
    "end": "306479"
  },
  {
    "text": "it is a collection of kubernetes custom",
    "start": "306479",
    "end": "308880"
  },
  {
    "text": "controllers one for each aws service api",
    "start": "308880",
    "end": "312720"
  },
  {
    "text": "and the ack service controller for that",
    "start": "312720",
    "end": "316560"
  },
  {
    "text": "particular service saying s3 or rds",
    "start": "316560",
    "end": "319120"
  },
  {
    "text": "or sns they manage the backend aws",
    "start": "319120",
    "end": "322479"
  },
  {
    "text": "resources for that service api",
    "start": "322479",
    "end": "324720"
  },
  {
    "text": "on behalf of a kubernetes user so the",
    "start": "324720",
    "end": "327039"
  },
  {
    "text": "kubernetes user",
    "start": "327039",
    "end": "328479"
  },
  {
    "text": "submits their rds instance",
    "start": "328479",
    "end": "331840"
  },
  {
    "text": "or s3 bucket as a kubernetes manifest",
    "start": "331840",
    "end": "334880"
  },
  {
    "text": "the kubernetes api server receives that",
    "start": "334880",
    "end": "338479"
  },
  {
    "text": "writes at the lcd and then the ack",
    "start": "338479",
    "end": "341199"
  },
  {
    "text": "service controller",
    "start": "341199",
    "end": "342320"
  },
  {
    "text": "gets notified of a new custom resource",
    "start": "342320",
    "end": "345280"
  },
  {
    "text": "of a particular kind that it is",
    "start": "345280",
    "end": "346720"
  },
  {
    "text": "interested in",
    "start": "346720",
    "end": "347680"
  },
  {
    "text": "and the ack service controller for that",
    "start": "347680",
    "end": "349440"
  },
  {
    "text": "service then goes ahead and manages the",
    "start": "349440",
    "end": "351600"
  },
  {
    "text": "life cycle of that resource by calling",
    "start": "351600",
    "end": "353840"
  },
  {
    "text": "the aws apis itself",
    "start": "353840",
    "end": "357440"
  },
  {
    "start": "358000",
    "end": "358000"
  },
  {
    "text": "a little bit about the design of ack so",
    "start": "359600",
    "end": "363520"
  },
  {
    "text": "as many of you might know aws has a lot",
    "start": "363520",
    "end": "366960"
  },
  {
    "text": "of services",
    "start": "366960",
    "end": "367919"
  },
  {
    "text": "um i think we're like 165",
    "start": "367919",
    "end": "371199"
  },
  {
    "text": "plus at this point um when",
    "start": "371199",
    "end": "374479"
  },
  {
    "text": "we started designing ack we've realized",
    "start": "374479",
    "end": "376960"
  },
  {
    "text": "early on that",
    "start": "376960",
    "end": "377840"
  },
  {
    "text": "it's just it wasn't feasible to hand",
    "start": "377840",
    "end": "380160"
  },
  {
    "text": "build",
    "start": "380160",
    "end": "381039"
  },
  {
    "text": "you know manually create 160 plus",
    "start": "381039",
    "end": "384000"
  },
  {
    "text": "different",
    "start": "384000",
    "end": "384560"
  },
  {
    "text": "uh custom kubernetes controllers and so",
    "start": "384560",
    "end": "387120"
  },
  {
    "text": "we set out early on",
    "start": "387120",
    "end": "388479"
  },
  {
    "text": "to do everything using code generation",
    "start": "388479",
    "end": "390720"
  },
  {
    "text": "in ack",
    "start": "390720",
    "end": "392000"
  },
  {
    "text": "so we generate the api types from",
    "start": "392000",
    "end": "395680"
  },
  {
    "text": "a set of json model documents",
    "start": "395680",
    "end": "399360"
  },
  {
    "text": "uh in addition to the api types we also",
    "start": "399360",
    "end": "401840"
  },
  {
    "text": "generate",
    "start": "401840",
    "end": "403039"
  },
  {
    "text": "all of the service controller",
    "start": "403039",
    "end": "404319"
  },
  {
    "text": "implementation itself",
    "start": "404319",
    "end": "406080"
  },
  {
    "text": "now this makes ack a little bit",
    "start": "406080",
    "end": "407680"
  },
  {
    "text": "different from something like kube",
    "start": "407680",
    "end": "409039"
  },
  {
    "text": "builder right which is an awesome",
    "start": "409039",
    "end": "410800"
  },
  {
    "text": "awesome project the difference is that",
    "start": "410800",
    "end": "413599"
  },
  {
    "text": "coupe builder when you",
    "start": "413599",
    "end": "414720"
  },
  {
    "text": "generate your custom controller using",
    "start": "414720",
    "end": "417199"
  },
  {
    "text": "cube builder",
    "start": "417199",
    "end": "418000"
  },
  {
    "text": "it provides you with like a skeleton a",
    "start": "418000",
    "end": "420160"
  },
  {
    "text": "stub for the controller and then you're",
    "start": "420160",
    "end": "421599"
  },
  {
    "text": "responsible for going and implementing",
    "start": "421599",
    "end": "423199"
  },
  {
    "text": "that uh that controller",
    "start": "423199",
    "end": "425360"
  },
  {
    "text": "and uh like i said we realized that we",
    "start": "425360",
    "end": "428960"
  },
  {
    "text": "we couldn't hand uh implement 160 plus",
    "start": "428960",
    "end": "432479"
  },
  {
    "text": "service controllers so",
    "start": "432479",
    "end": "434080"
  },
  {
    "text": "um we actually generate the entire",
    "start": "434080",
    "end": "436319"
  },
  {
    "text": "implementation of the service",
    "start": "436319",
    "end": "437840"
  },
  {
    "text": "controllers in ack",
    "start": "437840",
    "end": "439759"
  },
  {
    "text": "um directly from the api models",
    "start": "439759",
    "end": "442960"
  },
  {
    "text": "themselves",
    "start": "442960",
    "end": "444080"
  },
  {
    "text": "so that's a fairly big difference about",
    "start": "444080",
    "end": "446240"
  },
  {
    "text": "ack compared to something like cube",
    "start": "446240",
    "end": "447759"
  },
  {
    "text": "builder",
    "start": "447759",
    "end": "449680"
  },
  {
    "text": "behind the scenes we actually coo",
    "start": "449680",
    "end": "451440"
  },
  {
    "text": "builder and ack both rely",
    "start": "451440",
    "end": "453520"
  },
  {
    "text": "on the controller tools and controller",
    "start": "453520",
    "end": "455840"
  },
  {
    "text": "gen",
    "start": "455840",
    "end": "456560"
  },
  {
    "text": "binary to do",
    "start": "456560",
    "end": "459680"
  },
  {
    "text": "various low-level code generation um for",
    "start": "459680",
    "end": "462960"
  },
  {
    "text": "crds and the deep copy gen things like",
    "start": "462960",
    "end": "465840"
  },
  {
    "text": "that",
    "start": "465840",
    "end": "467599"
  },
  {
    "text": "um one way that we are",
    "start": "467599",
    "end": "470639"
  },
  {
    "text": "um different uh",
    "start": "470639",
    "end": "474000"
  },
  {
    "text": "is that we don't use cloud formation um",
    "start": "474000",
    "end": "477440"
  },
  {
    "text": "the ack project had its genesis",
    "start": "477440",
    "end": "480960"
  },
  {
    "text": "and another project called the aws",
    "start": "480960",
    "end": "482639"
  },
  {
    "text": "service operator or aso",
    "start": "482639",
    "end": "484720"
  },
  {
    "text": "um and an old colleague of mine chris",
    "start": "484720",
    "end": "487280"
  },
  {
    "text": "hein",
    "start": "487280",
    "end": "487919"
  },
  {
    "text": "created the aso project maybe two years",
    "start": "487919",
    "end": "490720"
  },
  {
    "text": "ago",
    "start": "490720",
    "end": "491599"
  },
  {
    "text": "when he built aso he",
    "start": "491599",
    "end": "495039"
  },
  {
    "text": "he used cloud formation behind the scene",
    "start": "495039",
    "end": "497280"
  },
  {
    "text": "so when for instance you created an s3",
    "start": "497280",
    "end": "499360"
  },
  {
    "text": "bucket",
    "start": "499360",
    "end": "499840"
  },
  {
    "text": "through aso it would actually create a",
    "start": "499840",
    "end": "502800"
  },
  {
    "text": "cloud formation stack which created an",
    "start": "502800",
    "end": "504560"
  },
  {
    "text": "s3 bucket",
    "start": "504560",
    "end": "505759"
  },
  {
    "text": "and we thought that that user experience",
    "start": "505759",
    "end": "507440"
  },
  {
    "text": "was",
    "start": "507440",
    "end": "509039"
  },
  {
    "text": "a little surprising for for users when",
    "start": "509039",
    "end": "512159"
  },
  {
    "text": "we started investigating",
    "start": "512159",
    "end": "513919"
  },
  {
    "text": "ack and diving into some implementation",
    "start": "513919",
    "end": "517440"
  },
  {
    "text": "proposals we also realized that",
    "start": "517440",
    "end": "519680"
  },
  {
    "text": "at the end of the day a kubernetes",
    "start": "519680",
    "end": "521360"
  },
  {
    "text": "custom controller",
    "start": "521360",
    "end": "522719"
  },
  {
    "text": "it relies on the kubernetes api server",
    "start": "522719",
    "end": "525680"
  },
  {
    "text": "and xcd to be the single source of truth",
    "start": "525680",
    "end": "528160"
  },
  {
    "text": "for the desired state of a resource",
    "start": "528160",
    "end": "530720"
  },
  {
    "text": "and cloud formation because well it is",
    "start": "530720",
    "end": "534080"
  },
  {
    "text": "managing resources for",
    "start": "534080",
    "end": "535839"
  },
  {
    "text": "um for the user it has its own uh",
    "start": "535839",
    "end": "539040"
  },
  {
    "text": "idea about uh who is who has the desired",
    "start": "539040",
    "end": "542720"
  },
  {
    "text": "state of truth for",
    "start": "542720",
    "end": "543920"
  },
  {
    "text": "a resource and by using cloud formation",
    "start": "543920",
    "end": "547920"
  },
  {
    "text": "we you kind of get into these race",
    "start": "547920",
    "end": "549600"
  },
  {
    "text": "conditions and this",
    "start": "549600",
    "end": "551120"
  },
  {
    "text": "conflict between well who owns the state",
    "start": "551120",
    "end": "553360"
  },
  {
    "text": "of a particular resource",
    "start": "553360",
    "end": "555040"
  },
  {
    "text": "so we didn't want to have that conflict",
    "start": "555040",
    "end": "557760"
  },
  {
    "text": "and so",
    "start": "557760",
    "end": "558720"
  },
  {
    "text": "the design of ack we do not use cloud",
    "start": "558720",
    "end": "561600"
  },
  {
    "text": "formation",
    "start": "561600",
    "end": "562160"
  },
  {
    "text": "instead we directly call the aws service",
    "start": "562160",
    "end": "564880"
  },
  {
    "text": "apis themselves",
    "start": "564880",
    "end": "567519"
  },
  {
    "text": "it's important to point out that ack",
    "start": "567519",
    "end": "569839"
  },
  {
    "text": "service controllers can be installed on",
    "start": "569839",
    "end": "571839"
  },
  {
    "text": "any kubernetes cluster",
    "start": "571839",
    "end": "573600"
  },
  {
    "text": "and there's nothing about ack that is",
    "start": "573600",
    "end": "577120"
  },
  {
    "text": "specific to eks",
    "start": "577120",
    "end": "578959"
  },
  {
    "text": "you can run an ack service controller on",
    "start": "578959",
    "end": "582160"
  },
  {
    "text": "a gke instance of kubernetes",
    "start": "582160",
    "end": "585440"
  },
  {
    "text": "or on-prem or a cops cluster running on",
    "start": "585440",
    "end": "588160"
  },
  {
    "text": "ec2",
    "start": "588160",
    "end": "588959"
  },
  {
    "text": "there's absolutely nothing about eks",
    "start": "588959",
    "end": "590880"
  },
  {
    "text": "that",
    "start": "590880",
    "end": "592240"
  },
  {
    "text": "or there's absolutely nothing about ack",
    "start": "592240",
    "end": "593920"
  },
  {
    "text": "that is specific to eks",
    "start": "593920",
    "end": "596399"
  },
  {
    "text": "and then finally the way that we are",
    "start": "596399",
    "end": "599920"
  },
  {
    "text": "building the ack service controllers is",
    "start": "599920",
    "end": "602079"
  },
  {
    "text": "that we are",
    "start": "602079",
    "end": "603040"
  },
  {
    "text": "working hand-in-hand with the individual",
    "start": "603040",
    "end": "605040"
  },
  {
    "text": "aws service teams like elastic",
    "start": "605040",
    "end": "607440"
  },
  {
    "text": "or api gateway working with their",
    "start": "607440",
    "end": "609440"
  },
  {
    "text": "engineers in developing",
    "start": "609440",
    "end": "611600"
  },
  {
    "text": "um the custom code for their particular",
    "start": "611600",
    "end": "615360"
  },
  {
    "text": "ack service controller",
    "start": "615360",
    "end": "617040"
  },
  {
    "text": "along with a set of end-to-end tests",
    "start": "617040",
    "end": "618800"
  },
  {
    "text": "that validate verify that",
    "start": "618800",
    "end": "620640"
  },
  {
    "text": "service controller in ack is calling",
    "start": "620640",
    "end": "624160"
  },
  {
    "text": "their api in a behaviorally and",
    "start": "624160",
    "end": "627200"
  },
  {
    "text": "semantically correct",
    "start": "627200",
    "end": "628480"
  },
  {
    "text": "fashion so we are actively collaborating",
    "start": "628480",
    "end": "632320"
  },
  {
    "text": "with the aws service teams",
    "start": "632320",
    "end": "635839"
  },
  {
    "start": "635000",
    "end": "635000"
  },
  {
    "text": "so one big feature that we rolled out in",
    "start": "636959",
    "end": "640399"
  },
  {
    "text": "ack about three or four weeks ago",
    "start": "640399",
    "end": "643920"
  },
  {
    "text": "is something called cross account",
    "start": "643920",
    "end": "645120"
  },
  {
    "text": "resource management a contributor to ack",
    "start": "645120",
    "end": "648240"
  },
  {
    "text": "named amin hilali",
    "start": "648240",
    "end": "650079"
  },
  {
    "text": "is the the mastermind behind this",
    "start": "650079",
    "end": "652240"
  },
  {
    "text": "particular",
    "start": "652240",
    "end": "653519"
  },
  {
    "text": "feature and um let me let me explain a",
    "start": "653519",
    "end": "656959"
  },
  {
    "text": "little bit about why it's important",
    "start": "656959",
    "end": "659440"
  },
  {
    "text": "so as i explained earlier ack is a set",
    "start": "659440",
    "end": "663200"
  },
  {
    "text": "of kubernetes server or kubernetes",
    "start": "663200",
    "end": "665839"
  },
  {
    "text": "custom controllers one for each aws",
    "start": "665839",
    "end": "667760"
  },
  {
    "text": "service",
    "start": "667760",
    "end": "668480"
  },
  {
    "text": "and we realized that um that experience",
    "start": "668480",
    "end": "672480"
  },
  {
    "text": "may be a little cumbersome for users to",
    "start": "672480",
    "end": "675120"
  },
  {
    "text": "have to install",
    "start": "675120",
    "end": "676320"
  },
  {
    "text": "multiple pods containing an ack service",
    "start": "676320",
    "end": "678800"
  },
  {
    "text": "controller for each individually",
    "start": "678800",
    "end": "680640"
  },
  {
    "text": "aws service well we didn't want to",
    "start": "680640",
    "end": "683279"
  },
  {
    "text": "compound",
    "start": "683279",
    "end": "684240"
  },
  {
    "text": "that particular encumbrance of the user",
    "start": "684240",
    "end": "689040"
  },
  {
    "text": "by also having the user have to install",
    "start": "689040",
    "end": "692720"
  },
  {
    "text": "an ack service controller in",
    "start": "692720",
    "end": "694480"
  },
  {
    "text": "lots of different kubernetes clusters in",
    "start": "694480",
    "end": "696640"
  },
  {
    "text": "order to manage resources across",
    "start": "696640",
    "end": "698240"
  },
  {
    "text": "multiple aws accounts",
    "start": "698240",
    "end": "700240"
  },
  {
    "text": "and look we talked to many customers and",
    "start": "700240",
    "end": "702959"
  },
  {
    "text": "it's almost universal",
    "start": "702959",
    "end": "704560"
  },
  {
    "text": "they all use multiple aws accounts to",
    "start": "704560",
    "end": "707519"
  },
  {
    "text": "sort of segregate",
    "start": "707519",
    "end": "708640"
  },
  {
    "text": "and and sort of isolate resources within",
    "start": "708640",
    "end": "711600"
  },
  {
    "text": "their organization",
    "start": "711600",
    "end": "712560"
  },
  {
    "text": "so some application development teams",
    "start": "712560",
    "end": "715120"
  },
  {
    "text": "they get their own aws account it might",
    "start": "715120",
    "end": "716959"
  },
  {
    "text": "be within",
    "start": "716959",
    "end": "717760"
  },
  {
    "text": "an organization an im organization or it",
    "start": "717760",
    "end": "720880"
  },
  {
    "text": "might be separate",
    "start": "720880",
    "end": "722480"
  },
  {
    "text": "but we we find it very common",
    "start": "722480",
    "end": "725680"
  },
  {
    "text": "that uh users have",
    "start": "725680",
    "end": "728880"
  },
  {
    "text": "have the need to manage the life cycle",
    "start": "728880",
    "end": "730720"
  },
  {
    "text": "of resources across lots of different",
    "start": "730720",
    "end": "732480"
  },
  {
    "text": "aws",
    "start": "732480",
    "end": "733600"
  },
  {
    "text": "accounts and so what cross-account",
    "start": "733600",
    "end": "736079"
  },
  {
    "text": "resource management allows is for the",
    "start": "736079",
    "end": "738240"
  },
  {
    "text": "kubernetes cluster admin to annotate",
    "start": "738240",
    "end": "741279"
  },
  {
    "text": "a kubernetes namespace with a specific",
    "start": "741279",
    "end": "744240"
  },
  {
    "text": "annotation",
    "start": "744240",
    "end": "745560"
  },
  {
    "text": "services.kates.aws forward slash owner",
    "start": "745560",
    "end": "747600"
  },
  {
    "text": "dash account dash id",
    "start": "747600",
    "end": "749279"
  },
  {
    "text": "with the aws account id that",
    "start": "749279",
    "end": "753440"
  },
  {
    "text": "that should own all of the resources",
    "start": "753440",
    "end": "755279"
  },
  {
    "text": "that get created within that kubernetes",
    "start": "755279",
    "end": "757440"
  },
  {
    "text": "namespace",
    "start": "757440",
    "end": "758720"
  },
  {
    "text": "so if i go ahead and do a cube cuddle",
    "start": "758720",
    "end": "761760"
  },
  {
    "text": "apply and i pass in",
    "start": "761760",
    "end": "763360"
  },
  {
    "text": "a manifest for an s3 bucket and",
    "start": "763360",
    "end": "766399"
  },
  {
    "text": "that custom resource has um",
    "start": "766399",
    "end": "769760"
  },
  {
    "text": "namespace x it is you know it is created",
    "start": "769760",
    "end": "773040"
  },
  {
    "text": "in namespace",
    "start": "773040",
    "end": "773839"
  },
  {
    "text": "x and the cluster admin has annotated",
    "start": "773839",
    "end": "777120"
  },
  {
    "text": "namespace x",
    "start": "777120",
    "end": "778160"
  },
  {
    "text": "with a particular owner account id uh",
    "start": "778160",
    "end": "780800"
  },
  {
    "text": "aws account id",
    "start": "780800",
    "end": "782399"
  },
  {
    "text": "what the ack service controller will do",
    "start": "782399",
    "end": "785040"
  },
  {
    "text": "is it will call sts assume role",
    "start": "785040",
    "end": "787920"
  },
  {
    "text": "to pivot the aws client that is",
    "start": "787920",
    "end": "791040"
  },
  {
    "text": "that lives within the service controller",
    "start": "791040",
    "end": "793120"
  },
  {
    "text": "so that it can start managing resources",
    "start": "793120",
    "end": "795200"
  },
  {
    "text": "in",
    "start": "795200",
    "end": "795680"
  },
  {
    "text": "a target a different target aws account",
    "start": "795680",
    "end": "799600"
  },
  {
    "text": "than is associated with the i am role",
    "start": "799600",
    "end": "801519"
  },
  {
    "text": "under which it is",
    "start": "801519",
    "end": "802800"
  },
  {
    "text": "was running by default and in this way",
    "start": "802800",
    "end": "806079"
  },
  {
    "text": "a single ack service controller for s3",
    "start": "806079",
    "end": "808720"
  },
  {
    "text": "or rds can manage resources",
    "start": "808720",
    "end": "811200"
  },
  {
    "text": "within that particular service across",
    "start": "811200",
    "end": "813120"
  },
  {
    "text": "lots of different target accounts",
    "start": "813120",
    "end": "815120"
  },
  {
    "text": "you don't need to install lots of",
    "start": "815120",
    "end": "816720"
  },
  {
    "text": "different ack service controllers one",
    "start": "816720",
    "end": "818720"
  },
  {
    "text": "for each different",
    "start": "818720",
    "end": "820160"
  },
  {
    "text": "aws account id that you need to manage",
    "start": "820160",
    "end": "824160"
  },
  {
    "start": "824000",
    "end": "824000"
  },
  {
    "text": "related to the cross account resource",
    "start": "825680",
    "end": "827839"
  },
  {
    "text": "management",
    "start": "827839",
    "end": "828800"
  },
  {
    "text": "is the topic of authorization and access",
    "start": "828800",
    "end": "831360"
  },
  {
    "text": "control",
    "start": "831360",
    "end": "832000"
  },
  {
    "text": "the reason i bring it up it's a fairly",
    "start": "832000",
    "end": "834720"
  },
  {
    "text": "complex",
    "start": "834720",
    "end": "835519"
  },
  {
    "text": "topic and especially with ack you need",
    "start": "835519",
    "end": "838399"
  },
  {
    "text": "to remember that there are two rbox",
    "start": "838399",
    "end": "839920"
  },
  {
    "text": "systems in play at any given time",
    "start": "839920",
    "end": "842000"
  },
  {
    "text": "one is the kubernetes are box system the",
    "start": "842000",
    "end": "844320"
  },
  {
    "text": "role base access control system",
    "start": "844320",
    "end": "846240"
  },
  {
    "text": "and that will dictate what kubernetes",
    "start": "846240",
    "end": "848320"
  },
  {
    "text": "users for instance alice",
    "start": "848320",
    "end": "850160"
  },
  {
    "text": "can create lists patch delete different",
    "start": "850160",
    "end": "853760"
  },
  {
    "text": "custom resource kinds in the kubernetes",
    "start": "853760",
    "end": "856399"
  },
  {
    "text": "api",
    "start": "856399",
    "end": "857839"
  },
  {
    "text": "once that once the kubernetes api",
    "start": "857839",
    "end": "861120"
  },
  {
    "text": "um performs its authorization checks",
    "start": "861120",
    "end": "865440"
  },
  {
    "text": "that's the end of the kubernetes arbok",
    "start": "865440",
    "end": "867920"
  },
  {
    "text": "uh",
    "start": "867920",
    "end": "868560"
  },
  {
    "text": "system or at least for um for the",
    "start": "868560",
    "end": "870959"
  },
  {
    "text": "purposes of ack",
    "start": "870959",
    "end": "872639"
  },
  {
    "text": "after that point when an ack service",
    "start": "872639",
    "end": "874880"
  },
  {
    "text": "controller receives",
    "start": "874880",
    "end": "876240"
  },
  {
    "text": "an event notification of a new custom",
    "start": "876240",
    "end": "878560"
  },
  {
    "text": "resource of a particular kind",
    "start": "878560",
    "end": "880560"
  },
  {
    "text": "it needs to talk to the aws apis and in",
    "start": "880560",
    "end": "884079"
  },
  {
    "text": "order to do that",
    "start": "884079",
    "end": "885519"
  },
  {
    "text": "that's where the aws iam",
    "start": "885519",
    "end": "888639"
  },
  {
    "text": "rbox system comes into play and",
    "start": "888639",
    "end": "891760"
  },
  {
    "text": "uh there is an im role that is",
    "start": "891760",
    "end": "894560"
  },
  {
    "text": "associated with the service account",
    "start": "894560",
    "end": "896959"
  },
  {
    "text": "that is running uh that the pod",
    "start": "896959",
    "end": "900160"
  },
  {
    "text": "with the service controller is running",
    "start": "900160",
    "end": "901440"
  },
  {
    "text": "as that i am role has a set of",
    "start": "901440",
    "end": "904160"
  },
  {
    "text": "permissions or policies",
    "start": "904160",
    "end": "905839"
  },
  {
    "text": "um that allow it to manage the life",
    "start": "905839",
    "end": "908639"
  },
  {
    "text": "cycle of resources in a particular",
    "start": "908639",
    "end": "911120"
  },
  {
    "text": "aws api the two",
    "start": "911120",
    "end": "914880"
  },
  {
    "text": "rbox systems kubernetes and im they",
    "start": "914880",
    "end": "918000"
  },
  {
    "text": "don't overlap right and if you go to the",
    "start": "918000",
    "end": "921440"
  },
  {
    "text": "link that's",
    "start": "921440",
    "end": "922560"
  },
  {
    "text": "on this page here i show a diagram",
    "start": "922560",
    "end": "925120"
  },
  {
    "text": "explaining just how",
    "start": "925120",
    "end": "927279"
  },
  {
    "text": "those two rbox systems come into play",
    "start": "927279",
    "end": "929440"
  },
  {
    "text": "but they don't actually overlap with",
    "start": "929440",
    "end": "931120"
  },
  {
    "text": "each other and it's important as you",
    "start": "931120",
    "end": "932959"
  },
  {
    "text": "start using ack and testing it out",
    "start": "932959",
    "end": "934720"
  },
  {
    "text": "trying it out that you understand",
    "start": "934720",
    "end": "936959"
  },
  {
    "text": "where these two are box systems come",
    "start": "936959",
    "end": "938399"
  },
  {
    "text": "into play",
    "start": "938399",
    "end": "940320"
  },
  {
    "start": "940000",
    "end": "940000"
  },
  {
    "text": "so what about secret things those of you",
    "start": "940320",
    "end": "943120"
  },
  {
    "text": "who are familiar with the rds",
    "start": "943120",
    "end": "945680"
  },
  {
    "text": "api you might know that the create db",
    "start": "945680",
    "end": "948800"
  },
  {
    "text": "instance api call unfortunately passes",
    "start": "948800",
    "end": "952000"
  },
  {
    "text": "in plain text a field called master user",
    "start": "952000",
    "end": "954399"
  },
  {
    "text": "password",
    "start": "954399",
    "end": "956320"
  },
  {
    "text": "clearly that is not something that is a",
    "start": "956320",
    "end": "958480"
  },
  {
    "text": "kubernetes best practice with regards to",
    "start": "958480",
    "end": "961759"
  },
  {
    "text": "secret like fields instead the",
    "start": "961759",
    "end": "964079"
  },
  {
    "text": "kubernetes best practice is of course to",
    "start": "964079",
    "end": "965839"
  },
  {
    "text": "create a kubernetes secret object and",
    "start": "965839",
    "end": "967839"
  },
  {
    "text": "then",
    "start": "967839",
    "end": "968560"
  },
  {
    "text": "a key within that secret object and then",
    "start": "968560",
    "end": "970639"
  },
  {
    "text": "refer to that key",
    "start": "970639",
    "end": "971920"
  },
  {
    "text": "within the secret from another resource",
    "start": "971920",
    "end": "974800"
  },
  {
    "text": "and so",
    "start": "974800",
    "end": "975440"
  },
  {
    "text": "our secret replacement feature which",
    "start": "975440",
    "end": "977920"
  },
  {
    "text": "should be coming out in the next month",
    "start": "977920",
    "end": "979120"
  },
  {
    "text": "or so",
    "start": "979120",
    "end": "980480"
  },
  {
    "text": "does just that it uh replaces certain",
    "start": "980480",
    "end": "983199"
  },
  {
    "text": "fields",
    "start": "983199",
    "end": "983839"
  },
  {
    "text": "in various resources like db instance or",
    "start": "983839",
    "end": "987040"
  },
  {
    "text": "rdsdb instance",
    "start": "987040",
    "end": "989360"
  },
  {
    "text": "replaces those plain text string types",
    "start": "989360",
    "end": "993040"
  },
  {
    "text": "with",
    "start": "993040",
    "end": "993440"
  },
  {
    "text": "a reference to a key within a secret",
    "start": "993440",
    "end": "996560"
  },
  {
    "text": "so alice can set",
    "start": "996560",
    "end": "999920"
  },
  {
    "text": "master user password to be name of db",
    "start": "999920",
    "end": "1002639"
  },
  {
    "text": "secrets and key of master user password",
    "start": "1002639",
    "end": "1005199"
  },
  {
    "text": "and kubernetes cluster admin kind of",
    "start": "1005199",
    "end": "1008240"
  },
  {
    "text": "created a kubernetes secret called db",
    "start": "1008240",
    "end": "1010320"
  },
  {
    "text": "secrets",
    "start": "1010320",
    "end": "1011040"
  },
  {
    "text": "and put in the um the actual master user",
    "start": "1011040",
    "end": "1013600"
  },
  {
    "text": "password",
    "start": "1013600",
    "end": "1014639"
  },
  {
    "text": "uh into that secret as opposed to",
    "start": "1014639",
    "end": "1016800"
  },
  {
    "text": "passing it in plain text",
    "start": "1016800",
    "end": "1019199"
  },
  {
    "text": "both to and from the aws apis",
    "start": "1019199",
    "end": "1024400"
  },
  {
    "text": "so which aws services do we have uh",
    "start": "1024400",
    "end": "1027678"
  },
  {
    "start": "1025000",
    "end": "1025000"
  },
  {
    "text": "currently in developer preview well uh",
    "start": "1027679",
    "end": "1030640"
  },
  {
    "text": "as of today which is the 27th of october",
    "start": "1030640",
    "end": "1034160"
  },
  {
    "text": "we have uh seven services in",
    "start": "1034160",
    "end": "1037280"
  },
  {
    "text": "developer preview s3 sns",
    "start": "1037280",
    "end": "1040400"
  },
  {
    "text": "sqs ecr dynamodb api gateway v2 and",
    "start": "1040400",
    "end": "1044079"
  },
  {
    "text": "elasticash",
    "start": "1044079",
    "end": "1046079"
  },
  {
    "text": "we have a roadmap that is publicly",
    "start": "1046079",
    "end": "1049120"
  },
  {
    "text": "available at the link that you see on",
    "start": "1049120",
    "end": "1050400"
  },
  {
    "text": "your screen",
    "start": "1050400",
    "end": "1051440"
  },
  {
    "text": "and that lists our rough",
    "start": "1051440",
    "end": "1054720"
  },
  {
    "text": "timelines of when we are bringing new",
    "start": "1054720",
    "end": "1057200"
  },
  {
    "text": "services into developer preview and when",
    "start": "1057200",
    "end": "1059200"
  },
  {
    "text": "we plan on getting",
    "start": "1059200",
    "end": "1060559"
  },
  {
    "text": "the services that we already have in",
    "start": "1060559",
    "end": "1062640"
  },
  {
    "text": "developer preview into a beta state",
    "start": "1062640",
    "end": "1064640"
  },
  {
    "text": "and a ga state you'll also find links to",
    "start": "1064640",
    "end": "1068000"
  },
  {
    "text": "from the github repository here to our",
    "start": "1068000",
    "end": "1070080"
  },
  {
    "text": "documentation that describes",
    "start": "1070080",
    "end": "1071919"
  },
  {
    "text": "our release criteria for developer",
    "start": "1071919",
    "end": "1074000"
  },
  {
    "text": "preview beta and ga",
    "start": "1074000",
    "end": "1076240"
  },
  {
    "text": "basically it boils down to beta",
    "start": "1076240",
    "end": "1079679"
  },
  {
    "text": "you'll have the ability to easily",
    "start": "1079679",
    "end": "1081600"
  },
  {
    "text": "install the service controller",
    "start": "1081600",
    "end": "1083520"
  },
  {
    "text": "using helm um and there'll be quite a",
    "start": "1083520",
    "end": "1086640"
  },
  {
    "text": "bit more",
    "start": "1086640",
    "end": "1087360"
  },
  {
    "text": "uh testing and documentation for all of",
    "start": "1087360",
    "end": "1089600"
  },
  {
    "text": "the resources exposed in the api",
    "start": "1089600",
    "end": "1091679"
  },
  {
    "text": "and then ga it's really about",
    "start": "1091679",
    "end": "1094400"
  },
  {
    "text": "stabilization of the api types",
    "start": "1094400",
    "end": "1096880"
  },
  {
    "text": "and a low level of reported bugs for",
    "start": "1096880",
    "end": "1100240"
  },
  {
    "text": "that particular service controller",
    "start": "1100240",
    "end": "1103440"
  },
  {
    "text": "so our roadmap also includes a couple",
    "start": "1104480",
    "end": "1106880"
  },
  {
    "start": "1105000",
    "end": "1105000"
  },
  {
    "text": "more important items",
    "start": "1106880",
    "end": "1108320"
  },
  {
    "text": "one is the normalization",
    "start": "1108320",
    "end": "1112480"
  },
  {
    "text": "of the representation for aws tags",
    "start": "1112480",
    "end": "1115919"
  },
  {
    "text": "so those of you familiar with aws apis",
    "start": "1115919",
    "end": "1118080"
  },
  {
    "text": "probably know that",
    "start": "1118080",
    "end": "1120160"
  },
  {
    "text": "various service apis in the aws api",
    "start": "1120160",
    "end": "1122720"
  },
  {
    "text": "universe",
    "start": "1122720",
    "end": "1123520"
  },
  {
    "text": "use different representations for aws",
    "start": "1123520",
    "end": "1125840"
  },
  {
    "text": "tags some use a map of string to string",
    "start": "1125840",
    "end": "1127760"
  },
  {
    "text": "some use a list of structs with a key",
    "start": "1127760",
    "end": "1130559"
  },
  {
    "text": "and a value",
    "start": "1130559",
    "end": "1131280"
  },
  {
    "text": "etc uh it's all different anyway we'll",
    "start": "1131280",
    "end": "1133360"
  },
  {
    "text": "be standardizing that",
    "start": "1133360",
    "end": "1134640"
  },
  {
    "text": "to all be spec dot tags which will be a",
    "start": "1134640",
    "end": "1137120"
  },
  {
    "text": "map of string to string",
    "start": "1137120",
    "end": "1138720"
  },
  {
    "text": "um there's an adopt a resource uh",
    "start": "1138720",
    "end": "1142640"
  },
  {
    "text": "feature where if you create something",
    "start": "1142640",
    "end": "1144640"
  },
  {
    "text": "out of band from ack",
    "start": "1144640",
    "end": "1146080"
  },
  {
    "text": "like let's say you have a pre-existing",
    "start": "1146080",
    "end": "1147840"
  },
  {
    "text": "s3 bucket and you just want to bring it",
    "start": "1147840",
    "end": "1149600"
  },
  {
    "text": "under",
    "start": "1149600",
    "end": "1150240"
  },
  {
    "text": "the ownership of the ack service",
    "start": "1150240",
    "end": "1151760"
  },
  {
    "text": "controller you'll be able to do that by",
    "start": "1151760",
    "end": "1153679"
  },
  {
    "text": "annotating the",
    "start": "1153679",
    "end": "1154640"
  },
  {
    "text": "the custom resource with a particular",
    "start": "1154640",
    "end": "1156799"
  },
  {
    "text": "arn",
    "start": "1156799",
    "end": "1158400"
  },
  {
    "text": "or amazon resource name we'll have a",
    "start": "1158400",
    "end": "1160720"
  },
  {
    "text": "common rate limiting and throttling",
    "start": "1160720",
    "end": "1162240"
  },
  {
    "text": "library that's",
    "start": "1162240",
    "end": "1163200"
  },
  {
    "text": "going to be separate from ack but will",
    "start": "1163200",
    "end": "1164880"
  },
  {
    "text": "be used by ack along with other projects",
    "start": "1164880",
    "end": "1166880"
  },
  {
    "text": "like",
    "start": "1166880",
    "end": "1167280"
  },
  {
    "text": "crossplane or maybe even the",
    "start": "1167280",
    "end": "1170559"
  },
  {
    "text": "cluster api for aws or cloud provider",
    "start": "1170559",
    "end": "1174080"
  },
  {
    "text": "aws",
    "start": "1174080",
    "end": "1174799"
  },
  {
    "text": "in the core kubernetes universe",
    "start": "1174799",
    "end": "1179280"
  },
  {
    "text": "so i very much encourage you to check",
    "start": "1179280",
    "end": "1182240"
  },
  {
    "text": "out",
    "start": "1182240",
    "end": "1182799"
  },
  {
    "text": "the uh repository here github.com aws",
    "start": "1182799",
    "end": "1186160"
  },
  {
    "text": "aws controllers kates and we hang out on",
    "start": "1186160",
    "end": "1189440"
  },
  {
    "text": "the provider aws channel on the",
    "start": "1189440",
    "end": "1191280"
  },
  {
    "text": "kubernetes slack community",
    "start": "1191280",
    "end": "1192720"
  },
  {
    "text": "and anytime you can get in touch with me",
    "start": "1192720",
    "end": "1195840"
  },
  {
    "text": "twitter github slack i'm uh jpypes",
    "start": "1195840",
    "end": "1199360"
  },
  {
    "text": "thank you very much",
    "start": "1199360",
    "end": "1202400"
  }
]