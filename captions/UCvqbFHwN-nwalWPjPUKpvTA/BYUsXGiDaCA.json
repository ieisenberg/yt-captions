[
  {
    "start": "0",
    "end": "200000"
  },
  {
    "text": "I'm weak alko i'm founder of layer 5 i'm a cloud native ambassador we are here",
    "start": "30",
    "end": "9450"
  },
  {
    "text": "today to to talk about tales of the kubernetes ingress networking deployment",
    "start": "9450",
    "end": "15089"
  },
  {
    "text": "patterns for external load balancers so today i'll be moderating our webinar i",
    "start": "15089",
    "end": "21289"
  },
  {
    "text": "am joined by our presenter today and I'd like to welcome Manuel",
    "start": "21289",
    "end": "26699"
  },
  {
    "text": "zap solution architect at containers",
    "start": "26699",
    "end": "31640"
  },
  {
    "text": "very good so let's go ahead and get started then so just as we do a couple",
    "start": "35000",
    "end": "41250"
  },
  {
    "text": "of housekeeping items all of your questions are encouraged Manuel is here to take them on but of these",
    "start": "41250",
    "end": "49320"
  },
  {
    "text": "housekeeping items I do want to let everyone know that during the webinar you're not able to talk as an attendee",
    "start": "49320",
    "end": "55890"
  },
  {
    "text": "that said there is a Q&A box at the bottom of your screen so please feel free to drop your questions in there and",
    "start": "55890",
    "end": "63359"
  },
  {
    "text": "we'll get to them as we go likely we'll hit those at the end if there are some urgent ones and and we we may Manuel for",
    "start": "63359",
    "end": "71909"
  },
  {
    "text": "warning we may interrupt and ask an urgent one but but but please submit your questions in there they will be",
    "start": "71909",
    "end": "77850"
  },
  {
    "text": "answered so this is an official webinar at the CN CF and so as such it is subject to the CN CF code of conduct so",
    "start": "77850",
    "end": "85530"
  },
  {
    "text": "please don't add anything to the chat or questions that would be in violation of that code of conduct",
    "start": "85530",
    "end": "90689"
  },
  {
    "text": "you essentially please be respectful of your fellow participants and the presenter and the housekeeping out of",
    "start": "90689",
    "end": "97619"
  },
  {
    "text": "the way let me welcome Manuel and hand it off to you all right thanks for",
    "start": "97619",
    "end": "104189"
  },
  {
    "text": "ending it over to me hey all welcome to this webinars this webinar today as",
    "start": "104189",
    "end": "110310"
  },
  {
    "text": "already introduced we are going to speak about tales of the kubernetes ingress networking deployment patterns for",
    "start": "110310",
    "end": "116460"
  },
  {
    "text": "external load balancers just like one organizational thing first I will keep",
    "start": "116460",
    "end": "121590"
  },
  {
    "text": "this slide open for like 10 to 15 seconds in case you want to follow this leave the slides online while I in while",
    "start": "121590",
    "end": "128399"
  },
  {
    "text": "I'm talking",
    "start": "128399",
    "end": "130789"
  },
  {
    "text": "there we go so as already introduced my name is Manila I'm a thirty years old",
    "start": "135549",
    "end": "141769"
  },
  {
    "text": "living in Germany so all good I'm currently working as a head of product open source that contain yes as we",
    "start": "141769",
    "end": "148970"
  },
  {
    "text": "already mentioned you can find me on Twitter or get up I'm happy to also answer questions later there or receive",
    "start": "148970",
    "end": "156379"
  },
  {
    "text": "your feedback for the talk or whatever you want to you want to talk with me about as I mentioned already I'm working",
    "start": "156379",
    "end": "163760"
  },
  {
    "text": "for cutaneous so we we believe in open source we are the company that delivers",
    "start": "163760",
    "end": "168799"
  },
  {
    "text": "traffic traffic across addition that mesh we also offer a commercial support we are currently around 30 people",
    "start": "168799",
    "end": "175909"
  },
  {
    "text": "distributed around the globe whereas around 90% of our of our people have some sort of tech background so yeah we",
    "start": "175909",
    "end": "183980"
  },
  {
    "text": "try to take all that knowledge we have and make our products the products or a",
    "start": "183980",
    "end": "189260"
  },
  {
    "text": "user base and especially the cloud native landscapes needs with that being",
    "start": "189260",
    "end": "195019"
  },
  {
    "text": "said without further ado I would like to take it to the actual topic we just",
    "start": "195019",
    "end": "201560"
  },
  {
    "start": "200000",
    "end": "312000"
  },
  {
    "text": "deployment peresvet external load balancers however we need to start first at the ground and this is of course the",
    "start": "201560",
    "end": "208190"
  },
  {
    "text": "communities cluster usually or how a cube raters cluster is is built and you",
    "start": "208190",
    "end": "213590"
  },
  {
    "text": "probably all know that is the cluster is made out of notes and these nodes have",
    "start": "213590",
    "end": "219440"
  },
  {
    "text": "pots that's essentially it that's where the scheduler pops pops worklog workloads on and we go from",
    "start": "219440",
    "end": "225680"
  },
  {
    "text": "there the first thing that that already happens them is pots of private eyepiece",
    "start": "225680",
    "end": "231980"
  },
  {
    "text": "so in case like pots want to talk to each other our traffic should be rounded",
    "start": "231980",
    "end": "237260"
  },
  {
    "text": "from the outside to these pots things will get a bit tricky because like they",
    "start": "237260",
    "end": "242480"
  },
  {
    "text": "just have private eyepiece they can just be addressed on the node by default so there's like there's like a gap let's",
    "start": "242480",
    "end": "248569"
  },
  {
    "text": "say luckily kubernetes has it has a resource to overcome this challenge which is the service and the service",
    "start": "248569",
    "end": "255560"
  },
  {
    "text": "comes right it comes right for your rescue in that in that case a goal of services to",
    "start": "255560",
    "end": "260989"
  },
  {
    "text": "expose pots to allow incoming traffic no matter like where it comes from so as you can",
    "start": "260989",
    "end": "266610"
  },
  {
    "text": "see like parts could be grouped together to a service and then these parts could start kids start talking to each other",
    "start": "266610",
    "end": "272850"
  },
  {
    "text": "because traffic we'll just we'll just through a flow through it as the diagram",
    "start": "272850",
    "end": "277980"
  },
  {
    "text": "might suggest there can be multiple parts group than a service so somehow",
    "start": "277980",
    "end": "283050"
  },
  {
    "text": "service a load balancers services can have multiple endpoints which can be nun",
    "start": "283050",
    "end": "290340"
  },
  {
    "text": "or an r1 and these endpoints are usually determined by the kubernetes api so",
    "start": "290340",
    "end": "296610"
  },
  {
    "text": "given a days api like these sites given certain factors what are the possible",
    "start": "296610",
    "end": "302160"
  },
  {
    "text": "endpoints for for services to route their traffic to how it does determine",
    "start": "302160",
    "end": "308160"
  },
  {
    "text": "that well one thing of this is that services can have different types we can",
    "start": "308160",
    "end": "314130"
  },
  {
    "start": "312000",
    "end": "534000"
  },
  {
    "text": "write we can group these services into two major made two major directions",
    "start": "314130",
    "end": "319890"
  },
  {
    "text": "let's say because these kinds are different or enable you to use to use",
    "start": "319890",
    "end": "326670"
  },
  {
    "text": "one or the other given the use case you have if you want to think about like",
    "start": "326670",
    "end": "331860"
  },
  {
    "text": "from inside the cluster which we could then take the inside type the default types cluster AP or if you think about",
    "start": "331860",
    "end": "338910"
  },
  {
    "text": "exposing your services from the outside or your applications from the outside you would go like for one of the other",
    "start": "338910",
    "end": "346290"
  },
  {
    "text": "types which could either be no port or load balancer for example so at first we",
    "start": "346290",
    "end": "352320"
  },
  {
    "text": "will have a quick glimpse about these service types and of course we start with the service type cluster IP in that",
    "start": "352320",
    "end": "358800"
  },
  {
    "text": "case if you deploy service with some type lustre IP this service will receive",
    "start": "358800",
    "end": "365040"
  },
  {
    "text": "of which you like P which is private to the cluster well that actually means is that this IP is just viable inside the",
    "start": "365040",
    "end": "372450"
  },
  {
    "text": "scope of the cluster and it works within that Chester so if you want for example",
    "start": "372450",
    "end": "377760"
  },
  {
    "text": "that the part of this nodes want to reach like this node the pod on this node for example you would go through",
    "start": "377760",
    "end": "384630"
  },
  {
    "text": "the service cluster IP all right through the service which is exposed by the typecast IP this would be a virtual IP",
    "start": "384630",
    "end": "390450"
  },
  {
    "text": "then and this service will then like connect to this part or this part making",
    "start": "390450",
    "end": "396000"
  },
  {
    "text": "the connection work two parts can wherever on which note on the clusters so it can mean any node to any note as",
    "start": "396000",
    "end": "404039"
  },
  {
    "text": "this works fine for for for communication inside your like within",
    "start": "404039",
    "end": "410610"
  },
  {
    "text": "the kubernetes borders within your clusters borders that is certainly not enough if you want to expose an",
    "start": "410610",
    "end": "415979"
  },
  {
    "text": "application to the outside the first the first thing we want to look in this scenario is having a service of type",
    "start": "415979",
    "end": "423119"
  },
  {
    "text": "note port if you go for a service of type note port what it basically does is",
    "start": "423119",
    "end": "428610"
  },
  {
    "text": "it uses two different things it uses at first public eye piece which your notes might be might might be addressed with",
    "start": "428610",
    "end": "435629"
  },
  {
    "text": "it might be like responding on and it needs ports on this notes based on that",
    "start": "435629",
    "end": "441089"
  },
  {
    "text": "combination it forms some sort of routing good let's say what service of",
    "start": "441089",
    "end": "446459"
  },
  {
    "text": "this type usually or does is it opens support on any note inside the cluster",
    "start": "446459",
    "end": "453240"
  },
  {
    "text": "so let's let's take for example we will apply the service with the techno port and it acts on purred 300-500 it would",
    "start": "453240",
    "end": "462029"
  },
  {
    "text": "open this port on any on any note if now the client wants to like connect with a",
    "start": "462029",
    "end": "468360"
  },
  {
    "text": "certain application he would go for foreign notes he would go for notes",
    "start": "468360",
    "end": "474089"
  },
  {
    "text": "public IP on port 3500 which is like handled by the service and the",
    "start": "474089",
    "end": "480929"
  },
  {
    "text": "connection would then go straight to the pot so this is a kind to to expose your",
    "start": "480929",
    "end": "486240"
  },
  {
    "text": "application easily let's say that taking",
    "start": "486240",
    "end": "491429"
  },
  {
    "text": "a step further the second type we have is a type load balancer it's a bit the same as note",
    "start": "491429",
    "end": "497610"
  },
  {
    "text": "port except it requires and uses an external load balancer in front so you",
    "start": "497610",
    "end": "503699"
  },
  {
    "text": "have like the external load balancer as a service which is running in front and from there it would go as we seen before",
    "start": "503699",
    "end": "510119"
  },
  {
    "text": "to the north part and from there to the actual pot but for easiness we just go",
    "start": "510119",
    "end": "515189"
  },
  {
    "text": "currently straight from the external load balancer to the pot so instead of the client will target or try to connect",
    "start": "515189",
    "end": "521818"
  },
  {
    "text": "with them with a node directly he would connect with the load balancer and with",
    "start": "521819",
    "end": "526949"
  },
  {
    "text": "the load balancer straight through as this seems to be good services are",
    "start": "526949",
    "end": "535220"
  },
  {
    "start": "534000",
    "end": "657000"
  },
  {
    "text": "still not enough let's take a context that we want to expose a bunch of",
    "start": "535220",
    "end": "540230"
  },
  {
    "text": "applications externally as typically or at least in cloud environments let's say",
    "start": "540230",
    "end": "547510"
  },
  {
    "text": "the especially if you deploy service with type load balancer there will be a",
    "start": "547510",
    "end": "552950"
  },
  {
    "text": "dedicated load balancer resource inside the cloud for you which will either be than a machine or a dedicated appliance",
    "start": "552950",
    "end": "559430"
  },
  {
    "text": "or whatever this will also like of course require a public IP because you",
    "start": "559430",
    "end": "564440"
  },
  {
    "text": "need to point to something and if you then think one step further for example for Amazon load balancers let's say you",
    "start": "564440",
    "end": "572480"
  },
  {
    "text": "might have these are typically exposed by sea names so you might have to create",
    "start": "572480",
    "end": "577580"
  },
  {
    "text": "a bunch of sea names on your own to like link to the load balancer which is exposed for your application and stuff",
    "start": "577580",
    "end": "583100"
  },
  {
    "text": "so just managing those DNS records will be will be a nightmare",
    "start": "583100",
    "end": "588500"
  },
  {
    "text": "additionally as you have multiple multiple instances or multiple resources",
    "start": "588500",
    "end": "594230"
  },
  {
    "text": "you have no real centralization of everything or of anything sorry so even",
    "start": "594230",
    "end": "599690"
  },
  {
    "text": "if it's TLS certificates or locks or whatever everything is basically managed on its own and you don't really have you",
    "start": "599690",
    "end": "605900"
  },
  {
    "text": "don't really have a good way to to shorten that as this is quite probably quite a problem kinetics in communities",
    "start": "605900",
    "end": "614960"
  },
  {
    "text": "allows for a different concept which is that further risk of the ingress and this example here we are using traffic",
    "start": "614960",
    "end": "622250"
  },
  {
    "text": "as an ingress controller what did then does is it's exposed over a service of",
    "start": "622250",
    "end": "628250"
  },
  {
    "text": "the type load balancer what we just saw but instead then the English controller",
    "start": "628250",
    "end": "633320"
  },
  {
    "text": "is like reading the ingress objects inside your kubernetes cluster and make sure that your service then routes to",
    "start": "633320",
    "end": "641540"
  },
  {
    "text": "year two to the parts of the service it needs it needs to have so you have some sort of an intermediate there because",
    "start": "641540",
    "end": "648110"
  },
  {
    "text": "the request hits the controller and then goes to the pots some notes about about",
    "start": "648110",
    "end": "656060"
  },
  {
    "text": "the ingress though ingresses our standard cuban ettus applications so",
    "start": "656060",
    "end": "661910"
  },
  {
    "start": "657000",
    "end": "741000"
  },
  {
    "text": "they're typically deployed as which is these days either a deployment set deployment or a demon set sorry and",
    "start": "661910",
    "end": "670040"
  },
  {
    "text": "from there they are exposed exposed to through the service object we just",
    "start": "670040",
    "end": "676020"
  },
  {
    "text": "thought you still need to access these some are from the outside because it",
    "start": "676020",
    "end": "682020"
  },
  {
    "text": "will be like potentially your applications but ideally you only have",
    "start": "682020",
    "end": "687060"
  },
  {
    "text": "to have to have to deal with one service now because because your English",
    "start": "687060",
    "end": "692220"
  },
  {
    "text": "controller will take care of it how that looks from like a connection standpoint",
    "start": "692220",
    "end": "697560"
  },
  {
    "text": "is that the ingress have has services as well so if you go from the outside you",
    "start": "697560",
    "end": "703770"
  },
  {
    "text": "have your public domain or your IP which then points to your to your to your",
    "start": "703770",
    "end": "709410"
  },
  {
    "text": "service of a type load balancer which in reality is like an external load balancer from there it will get",
    "start": "709410",
    "end": "716280"
  },
  {
    "text": "forwarded to the English controller which is typically a pod running inside your kubernetes cluster which then goes",
    "start": "716280",
    "end": "723000"
  },
  {
    "text": "for the service of the service we want to expose which is then just a private service of the type cluster IP and from",
    "start": "723000",
    "end": "730020"
  },
  {
    "text": "there you can go to to the pot that is I want it for your for your service why is",
    "start": "730020",
    "end": "738060"
  },
  {
    "text": "this actually cool or to ask it the other way around why should you actually care about this it's a simplified setup",
    "start": "738060",
    "end": "745260"
  },
  {
    "start": "741000",
    "end": "800000"
  },
  {
    "text": "because you just have one entry point a single entry point which which takes care of it",
    "start": "745260",
    "end": "750900"
  },
  {
    "text": "which results in less configuration because you only have to configure in one instance instead of instead of",
    "start": "750900",
    "end": "757740"
  },
  {
    "text": "multiples that also leads to less resources used because you might just",
    "start": "757740",
    "end": "763590"
  },
  {
    "text": "have one this or you might just have one single a lot doubles are for example which targets the entry point instead of",
    "start": "763590",
    "end": "770850"
  },
  {
    "text": "having multiple and what this actually makes cool is if you if you take an",
    "start": "770850",
    "end": "776580"
  },
  {
    "text": "English controller for example you can achieve a separation of concerns quite easily because the English controller",
    "start": "776580",
    "end": "782280"
  },
  {
    "text": "takes like care of it so you can you can have different load balancing algorithms for example or circuit breakers or meat",
    "start": "782280",
    "end": "789540"
  },
  {
    "text": "rice or whatever and just the beamers controller takes care of it instead of",
    "start": "789540",
    "end": "794820"
  },
  {
    "text": "that you need multiple layers let's say but what is it actually what would what",
    "start": "794820",
    "end": "802230"
  },
  {
    "start": "800000",
    "end": "864000"
  },
  {
    "text": "does it actually bring what could be hard with it well by design ingresses",
    "start": "802230",
    "end": "807390"
  },
  {
    "text": "are four simple HTTP or HTTPS cases they",
    "start": "807390",
    "end": "812880"
  },
  {
    "text": "are virtual hosts first centric let's say so for all that now ingress and I guess that's the most of you you can set",
    "start": "812880",
    "end": "819750"
  },
  {
    "text": "a hostname where to react on and you can set some pallets and stuff but it's always centered around that hostname so",
    "start": "819750",
    "end": "826620"
  },
  {
    "text": "it's really it's really designed to help in the HTTP HTTPS case it can be used",
    "start": "826620",
    "end": "833910"
  },
  {
    "text": "with TCP or UDP but it's definitely not a first-class citizen because like per",
    "start": "833910",
    "end": "839330"
  },
  {
    "text": "specification it is designed for HTTP or HTTPS that could lead to the feeling",
    "start": "839330",
    "end": "845670"
  },
  {
    "text": "that you really have to carefully select your English controller because because",
    "start": "845670",
    "end": "850800"
  },
  {
    "text": "like that's the one consume EU ingress object and then making sure somehow magically that your that your parts are",
    "start": "850800",
    "end": "857310"
  },
  {
    "text": "actually being actually are receiving traffic but it's a little different in",
    "start": "857310",
    "end": "862980"
  },
  {
    "text": "urban areas because cavalettis gives you the freedom you can use multiple ingress controllers if you want how this works",
    "start": "862980",
    "end": "869520"
  },
  {
    "start": "864000",
    "end": "940000"
  },
  {
    "text": "is what you have in kubernetes is the concept of annotations let's say so it's some sort of meter informations you can",
    "start": "869520",
    "end": "876690"
  },
  {
    "text": "attach to an object and de facto standard annotation is English class so",
    "start": "876690",
    "end": "882300"
  },
  {
    "text": "let's say you just have multiple ingress controllers in your in your in your in your environment deployed by just",
    "start": "882300",
    "end": "888330"
  },
  {
    "text": "setting these annotations with meta information and giving it basically the class you can select which ingress",
    "start": "888330",
    "end": "895709"
  },
  {
    "text": "controller will take care of which ingress you just deployed so if if you need multiple ingress controllers",
    "start": "895709",
    "end": "901260"
  },
  {
    "text": "because maybe not one ingress controller has all the features you need you're welcome to deploy multiple and just just",
    "start": "901260",
    "end": "908730"
  },
  {
    "text": "control it by the annotations which one is actually responsible for working on which particular ingress kubernetes",
    "start": "908730",
    "end": "916620"
  },
  {
    "text": "gives you all the choices you need in that or gives you the freedom for all the choices and that you need there are",
    "start": "916620",
    "end": "922770"
  },
  {
    "text": "so many deployment patterns that you can literally do almost anything it really",
    "start": "922770",
    "end": "928380"
  },
  {
    "text": "always depends on the case and then tie kids well which pattern might be might",
    "start": "928380",
    "end": "934200"
  },
  {
    "text": "be your your most desired one all right",
    "start": "934200",
    "end": "940140"
  },
  {
    "start": "940000",
    "end": "1040000"
  },
  {
    "text": "I already touched this briefly in terms of type load balancer I said there might",
    "start": "940140",
    "end": "945510"
  },
  {
    "text": "be an external load balancer before but what does it actually mean external in",
    "start": "945510",
    "end": "952440"
  },
  {
    "text": "that case means outside of the borders of Cuba ladies mostly if you're on",
    "start": "952440",
    "end": "957480"
  },
  {
    "text": "within cloud cloud environments for example on Amazon Cloud do Google",
    "start": "957480",
    "end": "962850"
  },
  {
    "text": "communities engine or whatever this runs outside of your actual of your actual",
    "start": "962850",
    "end": "969029"
  },
  {
    "text": "platform either in infrastructure like on-prem or cloud and there it can just",
    "start": "969029",
    "end": "974880"
  },
  {
    "text": "depends on where it actually runs however it doesn't mean that this piece",
    "start": "974880",
    "end": "980459"
  },
  {
    "text": "of technology is not managed by could be netis anymore because what typically",
    "start": "980459",
    "end": "985830"
  },
  {
    "text": "happens is that by automation something is lessening on the community's API like",
    "start": "985830",
    "end": "991950"
  },
  {
    "text": "the load balance provider is lessening a Maitre D' native API and did write killed first operators modules plugins",
    "start": "991950",
    "end": "999150"
  },
  {
    "text": "call it whatever you want and as he is listening on the kubernetes api he sees",
    "start": "999150",
    "end": "1004730"
  },
  {
    "text": "that there is for example a new service deployed which has the type load balancer and takes the management away",
    "start": "1004730",
    "end": "1011240"
  },
  {
    "text": "from you and does everything it needs to do in case you are like on bare metal so",
    "start": "1011240",
    "end": "1017360"
  },
  {
    "text": "there might no API for your cloud balance or provider or your load balancer provider does not have Kuban IT",
    "start": "1017360",
    "end": "1023450"
  },
  {
    "text": "support you'll believe you will be required to switch back to service of tech Northport because as we just",
    "start": "1023450",
    "end": "1029510"
  },
  {
    "text": "learned they are literally the same except that there is an external load balancer and if there is none switch",
    "start": "1029510",
    "end": "1036110"
  },
  {
    "text": "back to note board or get to sum that up and I already managed hit that briefly",
    "start": "1036110",
    "end": "1043959"
  },
  {
    "text": "what you will do is hardly depending on which kubernetes distribution you are",
    "start": "1043959",
    "end": "1049790"
  },
  {
    "text": "currently using because that will that will decide which load balancer solution",
    "start": "1049790",
    "end": "1055490"
  },
  {
    "text": "you should use if we have a quick look at the actual cubanelles distributions",
    "start": "1055490",
    "end": "1060679"
  },
  {
    "text": "we have like three different flavors let's say now the first is definitely cloud",
    "start": "1060679",
    "end": "1067160"
  },
  {
    "text": "managed to be nice you all know G ke e KS aks digitalocean whatever that let's",
    "start": "1067160",
    "end": "1076700"
  },
  {
    "text": "lump providers that manage the Cuban Aries for you and usually they also provide their own external load balancer",
    "start": "1076700",
    "end": "1083600"
  },
  {
    "text": "solution how that's works and I already explained this quickly there's like a fully automated management through the",
    "start": "1083600",
    "end": "1089630"
  },
  {
    "text": "Cuban AD say PR so you just do what you need you do you expose your service by type load balancer add the API kicks in",
    "start": "1089630",
    "end": "1096950"
  },
  {
    "text": "and make sure that that the load balancer resource is created as you need it or as you want it then of course",
    "start": "1096950",
    "end": "1104179"
  },
  {
    "text": "results and really a great user experience because based on the integration for use an end user",
    "start": "1104179",
    "end": "1111260"
  },
  {
    "text": "it just works playing out of the box you just have to do anything more it just",
    "start": "1111260",
    "end": "1116720"
  },
  {
    "text": "works also you are very beneficial from all the benefits the cloud provider",
    "start": "1116720",
    "end": "1123290"
  },
  {
    "text": "provides you higher availability performances all of them you just have that because like the club provider",
    "start": "1123290",
    "end": "1130280"
  },
  {
    "text": "takes in sponsor resources for you so you use a product of your club provider and of course you you immediately have",
    "start": "1130280",
    "end": "1137840"
  },
  {
    "text": "all the all the all the benefits he offers you there are a couple downsides",
    "start": "1137840",
    "end": "1144799"
  },
  {
    "text": "of course the base as well of course you have to pay for this I mean the club provider is not like doing it because",
    "start": "1144799",
    "end": "1150350"
  },
  {
    "text": "he's super nice to you because they need to earn money and that's fine as already mentioned configuration can be done",
    "start": "1150350",
    "end": "1157850"
  },
  {
    "text": "using annotations and as this is a cloud specific annotation configuration can change so it can be that in your let's",
    "start": "1157850",
    "end": "1166100"
  },
  {
    "text": "say you use a load balancer like you have your cluster for example and I wasn't I just switch it over to Google",
    "start": "1166100",
    "end": "1171320"
  },
  {
    "text": "communities it can happen that you have to reconfigure it by like finding the other annotations and stuff then there",
    "start": "1171320",
    "end": "1178370"
  },
  {
    "text": "is no standardization in it so you just pop in your your meta information which is basically just key value and from",
    "start": "1178370",
    "end": "1184730"
  },
  {
    "text": "there can change of course also what you can configure actually relies heavily on",
    "start": "1184730",
    "end": "1191450"
  },
  {
    "text": "the actual load balancer implementation so whatever limits the load balancer in",
    "start": "1191450",
    "end": "1196460"
  },
  {
    "text": "front of you has you are working within this limits the",
    "start": "1196460",
    "end": "1202230"
  },
  {
    "text": "second approach is sorry the second approach is bare metal kubernetes or",
    "start": "1202230",
    "end": "1207450"
  },
  {
    "start": "1203000",
    "end": "1302000"
  },
  {
    "text": "also known as running on your boxes let's say you're just taking some some drop loads or some ec2 instances or",
    "start": "1207450",
    "end": "1214140"
  },
  {
    "text": "whatever and they're managing kubernetes on your own then from our from our experience during the last month the",
    "start": "1214140",
    "end": "1221010"
  },
  {
    "text": "best approach is to use something as metal lb which is a load balancer implementation for kubernetes and this",
    "start": "1221010",
    "end": "1227490"
  },
  {
    "text": "one is running actually inside your communities cluster what that means is that metal lb uses all communities",
    "start": "1227490",
    "end": "1234540"
  },
  {
    "text": "primitives you have so it's deployed it's like a typical communities application but has all the benefits as",
    "start": "1234540",
    "end": "1241620"
  },
  {
    "text": "high availability and stuff also it operates on the layer 2 or it can",
    "start": "1241620",
    "end": "1248910"
  },
  {
    "text": "operate on the layer 2 on the network layer 2 which is routing as well as bgp",
    "start": "1248910",
    "end": "1254450"
  },
  {
    "text": "the only bad thing is they are still considering themselves not as production-ready they're keeping it as",
    "start": "1254450",
    "end": "1261720"
  },
  {
    "text": "sort of yeah we are working in a beta state take care what you do so of course you have to take care of what you do and",
    "start": "1261720",
    "end": "1269010"
  },
  {
    "text": "if for that reason for example you won't you don't want to use something like metal I'll be an option you have is",
    "start": "1269010",
    "end": "1275520"
  },
  {
    "text": "annex to use to use an external a static load balancer is something that has been done for quite some time by now but",
    "start": "1275520",
    "end": "1283230"
  },
  {
    "text": "again this requires you to switch back to the service page with the service type note port because you need to",
    "start": "1283230",
    "end": "1289470"
  },
  {
    "text": "target you that your external load balancer targets and that is typically a combination of nodes and ports and so",
    "start": "1289470",
    "end": "1296220"
  },
  {
    "text": "that's exactly where the node port service has its strengths and comes back in last but not least we also have",
    "start": "1296220",
    "end": "1304640"
  },
  {
    "start": "1302000",
    "end": "1357000"
  },
  {
    "text": "something which we call the cloud semi managed kubernetes this is also heavily",
    "start": "1304640",
    "end": "1309930"
  },
  {
    "text": "depending on the actual compute provider like if you're running on cloud or like completely bare metal inside your inside",
    "start": "1309930",
    "end": "1317490"
  },
  {
    "text": "you're inside your data center you then need a tool for managing those clusters",
    "start": "1317490",
    "end": "1324390"
  },
  {
    "text": "and you typically know them as like you baby em more cups or there some more if",
    "start": "1324390",
    "end": "1330150"
  },
  {
    "text": "you use that tools to manager communities clusters they sometimes also already managed a",
    "start": "1330150",
    "end": "1337779"
  },
  {
    "text": "load balancer if and there comes the compute provider it back end if they compute provided offers something like",
    "start": "1337779",
    "end": "1344229"
  },
  {
    "text": "this as well then it can manage this for this for you okay as we know I've",
    "start": "1344229",
    "end": "1350679"
  },
  {
    "text": "explored some some ways how this actually operates and what are the actual ups and downs we go back to to to",
    "start": "1350679",
    "end": "1360340"
  },
  {
    "start": "1357000",
    "end": "1371000"
  },
  {
    "text": "why is this all important what what is really important in terms of having the",
    "start": "1360340",
    "end": "1365529"
  },
  {
    "text": "network running is the source IP like we want to know who is currently emitting",
    "start": "1365529",
    "end": "1371379"
  },
  {
    "start": "1371000",
    "end": "1402000"
  },
  {
    "text": "requests because sometimes business managers have these lease requirement",
    "start": "1371379",
    "end": "1376539"
  },
  {
    "text": "for various of reasons it can be that they need to know the IP of the of the emitter of the request like to track",
    "start": "1376539",
    "end": "1382599"
  },
  {
    "text": "usage to potentially build the right the right person right access logs have it",
    "start": "1382599",
    "end": "1388330"
  },
  {
    "text": "for legal reasons whatever they can be really a wide variety on cases for that",
    "start": "1388330",
    "end": "1394470"
  },
  {
    "text": "to make that happen things can get can get a little tricky",
    "start": "1394470",
    "end": "1399489"
  },
  {
    "text": "let's say because what happens then is not that stands for network address",
    "start": "1399489",
    "end": "1405820"
  },
  {
    "start": "1402000",
    "end": "1557000"
  },
  {
    "text": "translation and in an IP version 4 world the Rooter masquerades I piece like",
    "start": "1405820",
    "end": "1411759"
  },
  {
    "text": "really the network piece to allow routing from wonderful from one network to another different network these",
    "start": "1411759",
    "end": "1419559"
  },
  {
    "text": "process has like two processes let's say which is at first denied which stands",
    "start": "1419559",
    "end": "1426399"
  },
  {
    "text": "for destination now in that case the Rooter esker it actually masquerades the",
    "start": "1426399",
    "end": "1433389"
  },
  {
    "text": "destination IP with an internal part I P and we will see if chart for that and in",
    "start": "1433389",
    "end": "1438970"
  },
  {
    "text": "the next slide and the other option is a source net which is s net and that does",
    "start": "1438970",
    "end": "1445389"
  },
  {
    "text": "actually the other way around it masquerades the source IP with the routers IP so if we take it like a quick",
    "start": "1445389",
    "end": "1452080"
  },
  {
    "text": "look at it just in an example we have just to set up with a client a router and a server the client is like",
    "start": "1452080",
    "end": "1458889"
  },
  {
    "text": "addressed with this IP their router with this IP from the external and from the inside the router",
    "start": "1458889",
    "end": "1464640"
  },
  {
    "text": "as an external IP and the actual server also so in case of destination of the",
    "start": "1464640",
    "end": "1470340"
  },
  {
    "text": "client tries to connect with the IP address like this so the packet reaches reaches the router it still of course",
    "start": "1470340",
    "end": "1478290"
  },
  {
    "text": "has the source IP correctly set from the client the router then does the destination the destination up so it",
    "start": "1478290",
    "end": "1485520"
  },
  {
    "text": "masquerades the destination IP address the the outer destination IP address",
    "start": "1485520",
    "end": "1492510"
  },
  {
    "text": "with the IP address of the server and the inside what keeps the source IP in",
    "start": "1492510",
    "end": "1498420"
  },
  {
    "text": "case of source NAT he does the other way around so the request goes to the router",
    "start": "1498420",
    "end": "1504060"
  },
  {
    "text": "and the route of masquerades the source IP with being the router as if he would",
    "start": "1504060",
    "end": "1509610"
  },
  {
    "text": "be emitting the actual request and stays with the destination address and forwards so that's a bad idea",
    "start": "1509610",
    "end": "1517560"
  },
  {
    "text": "because as we just said our business manager once a wants us to actually",
    "start": "1517560",
    "end": "1522990"
  },
  {
    "text": "preserve this IP so our golden rule is to not want source net to happen because",
    "start": "1522990",
    "end": "1531090"
  },
  {
    "text": "that will lose us the source IP and we cannot like fulfill our business manager needs therefore the actual challenges",
    "start": "1531090",
    "end": "1538500"
  },
  {
    "text": "with with intermediate components such as for example an external load balancer",
    "start": "1538500",
    "end": "1543920"
  },
  {
    "text": "they can interfere into this process and potentially make s net to happen like",
    "start": "1543920",
    "end": "1550110"
  },
  {
    "text": "one of the steps which could make us the source if you lose so if we now take a",
    "start": "1550110",
    "end": "1555900"
  },
  {
    "text": "look inside actual kubernetes we have cube proxy what is cube proxy to proxy",
    "start": "1555900",
    "end": "1560910"
  },
  {
    "start": "1557000",
    "end": "1601000"
  },
  {
    "text": "is secure now this component running on each work in it the reason we have proxy",
    "start": "1560910",
    "end": "1567900"
  },
  {
    "text": "is we need someone to actually manage virtual like piece which are used by the services and we need to like have",
    "start": "1567900",
    "end": "1575100"
  },
  {
    "text": "something to like pass it the challenge with this is that given the case cube",
    "start": "1575100",
    "end": "1581850"
  },
  {
    "text": "proxy might actually ask not requests and that depends heavily on the service",
    "start": "1581850",
    "end": "1589950"
  },
  {
    "text": "type as we just learned there like three different service types and on these service type it depends on what queue",
    "start": "1589950",
    "end": "1596400"
  },
  {
    "text": "proxy will actually do so let's do a quick tour of these the",
    "start": "1596400",
    "end": "1602130"
  },
  {
    "start": "1601000",
    "end": "1691000"
  },
  {
    "text": "first we have a look at is the source IP or the case source IP with a service of",
    "start": "1602130",
    "end": "1607290"
  },
  {
    "text": "type class therapy usually or by default let's say Q proxy is is deployed in the",
    "start": "1607290",
    "end": "1614160"
  },
  {
    "text": "IP tables mode which is good for what we need because in that case no s net will happen because there will be no",
    "start": "1614160",
    "end": "1620130"
  },
  {
    "text": "intermediate component so the client requests their service off the class or IP which is which configures per proxy",
    "start": "1620130",
    "end": "1626970"
  },
  {
    "text": "and we just go straight to the pub so there is no one in between which like",
    "start": "1626970",
    "end": "1631980"
  },
  {
    "text": "tempers with request or might like in my do read packages or whatever so we just have clearly the source IP of the",
    "start": "1631980",
    "end": "1638610"
  },
  {
    "text": "request emitter and we get things get a little more complicated when we go to",
    "start": "1638610",
    "end": "1645120"
  },
  {
    "text": "services with the type node port for example because let's have a look of",
    "start": "1645120",
    "end": "1650220"
  },
  {
    "text": "what actually happens the client requests one of the notes let's take note node one in that example",
    "start": "1650220",
    "end": "1656010"
  },
  {
    "text": "on the court we just exposed and queue proxy sees okay here here here's no part",
    "start": "1656010",
    "end": "1662429"
  },
  {
    "text": "to go to I need to go to second node and check if there is the pub so the ëthe nets the original requests in order to",
    "start": "1662429",
    "end": "1670110"
  },
  {
    "text": "forward it to another node inside the kubernetes cluster so that's that point we already lost or shows like the source",
    "start": "1670110",
    "end": "1677460"
  },
  {
    "text": "IP and cubes queue proxy then forwards it to the pot running on the node so we lost source IP lost we can fulfill",
    "start": "1677460",
    "end": "1686190"
  },
  {
    "text": "our business manager needs with another",
    "start": "1686190",
    "end": "1692390"
  },
  {
    "start": "1691000",
    "end": "1756000"
  },
  {
    "text": "with another or another variant let's say of services having a type node port",
    "start": "1692390",
    "end": "1698490"
  },
  {
    "text": "what cuba name is offers is something that is called external traffic policy you can basically configure this service",
    "start": "1698490",
    "end": "1705030"
  },
  {
    "text": "a bit if we configure it and set this policy to local we we actually have the",
    "start": "1705030",
    "end": "1711210"
  },
  {
    "text": "good thing that no no no source not will happen but we also have a downside and",
    "start": "1711210",
    "end": "1716280"
  },
  {
    "text": "let's have it have a look at it the client goes for again node one goes",
    "start": "1716280",
    "end": "1722040"
  },
  {
    "text": "through the port goes to proxy and to proxy sees all right I don't have the",
    "start": "1722040",
    "end": "1727799"
  },
  {
    "text": "pot running on my node and as the external traffic policies have to true the the request will dropped here",
    "start": "1727799",
    "end": "1734640"
  },
  {
    "text": "because there is like no no part to locally for what the traffic to so he",
    "start": "1734640",
    "end": "1740130"
  },
  {
    "text": "just cuts it in the other way the client goes to the other note having the port opens q proxy knows all right I have the",
    "start": "1740130",
    "end": "1747570"
  },
  {
    "text": "pot and just it goes through and in that case because there's again no intermediate component we have this",
    "start": "1747570",
    "end": "1754050"
  },
  {
    "text": "recipe now the service type building up",
    "start": "1754050",
    "end": "1761220"
  },
  {
    "text": "on there's this load balancer and there by default as net is done same as nope",
    "start": "1761220",
    "end": "1766830"
  },
  {
    "text": "or same reason it just doesn't work the external load balancer can route to any",
    "start": "1766830",
    "end": "1772680"
  },
  {
    "text": "node inside you're inside your queue my name is clustering and if on the only node receiving the request is no local",
    "start": "1772680",
    "end": "1779340"
  },
  {
    "text": "endpoint Cuban itis will forward it to another node and then s not will happen so source IP lost however there's also",
    "start": "1779340",
    "end": "1788250"
  },
  {
    "text": "another another way we can also set this local external traffic policy and there",
    "start": "1788250",
    "end": "1794490"
  },
  {
    "text": "are a lot of load balancers actually implementing this for example on Google communities engine the Google cloud load",
    "start": "1794490",
    "end": "1801510"
  },
  {
    "text": "balancer or the Amazon and lb or whatever what happens then is that nodes",
    "start": "1801510",
    "end": "1807060"
  },
  {
    "text": "without a local end point will have failing health checks because there is like no one responding on the part and",
    "start": "1807060",
    "end": "1812850"
  },
  {
    "text": "therefore these nodes will like rotate out of let's say the target group the",
    "start": "1812850",
    "end": "1819030"
  },
  {
    "text": "load balancer is forwarding the requests to this is of course nice because you have no requests drop from a client",
    "start": "1819030",
    "end": "1825630"
  },
  {
    "text": "perspective everything works and as the health checks are like making sure that all my notes are healthy because that's",
    "start": "1825630",
    "end": "1832350"
  },
  {
    "text": "a job of the checks they are always ready so that that's that's perfect however the only downside here is it",
    "start": "1832350",
    "end": "1840450"
  },
  {
    "text": "relies heavily on health check timeouts so if half checks are a bit too slow to happen you might potentially forward",
    "start": "1840450",
    "end": "1847380"
  },
  {
    "text": "requests to to like unhealthy notes as usual and then your and then your",
    "start": "1847380",
    "end": "1852690"
  },
  {
    "text": "requests might be dropped what we already know is that sometimes source",
    "start": "1852690",
    "end": "1860070"
  },
  {
    "text": "not is mandatory some sometimes you just can't go",
    "start": "1860070",
    "end": "1865680"
  },
  {
    "text": "times you just can't can't be can't evade it usually it happens with",
    "start": "1865680",
    "end": "1870990"
  },
  {
    "text": "external load balancers as we just heard also that can be Network constraints that force s not to happen or for",
    "start": "1870990",
    "end": "1878820"
  },
  {
    "text": "example in case of an ingress controller in the middle because there's like another component which which does the",
    "start": "1878820",
    "end": "1884430"
  },
  {
    "text": "job of reading and you might also need to forward requests to other nodes and stuff so we have the same problem again",
    "start": "1884430",
    "end": "1891290"
  },
  {
    "text": "but as we already figured out network is based on layers so we have like seven",
    "start": "1891290",
    "end": "1896940"
  },
  {
    "text": "layers by default in a network and maybe why don't we try to tackle this issue",
    "start": "1896940",
    "end": "1904010"
  },
  {
    "text": "with with moving this issue to another layer so in case of using HTTP which is",
    "start": "1904010",
    "end": "1910260"
  },
  {
    "text": "also the prime the prime citizen of ingress for example we can retry this",
    "start": "1910260",
    "end": "1916170"
  },
  {
    "text": "recipe from the actual Harris if we're going for TCP UDP we could use the proxy",
    "start": "1916170",
    "end": "1922260"
  },
  {
    "text": "protocol which might help us in this case or also an option would be to use",
    "start": "1922260",
    "end": "1927480"
  },
  {
    "text": "distributed logging in tracing because our manager just wants to have it early in the cycle and the flow sorry and if",
    "start": "1927480",
    "end": "1934380"
  },
  {
    "text": "we have it in other systems that could also work as well so let's have a look at the HTTP part first",
    "start": "1934380",
    "end": "1941150"
  },
  {
    "start": "1939000",
    "end": "2020000"
  },
  {
    "text": "we have headers inside HTTP because they are like part of the protocol and one of",
    "start": "1941150",
    "end": "1946650"
  },
  {
    "text": "the headers is X forwarded from this header typically holds a comma-separated list of all the source IP that has been",
    "start": "1946650",
    "end": "1953670"
  },
  {
    "text": "like placed in this header due to network hops with s net taking place the",
    "start": "1953670",
    "end": "1960270"
  },
  {
    "text": "good thing is lots of external load balancers or also English controllers are supporting this header so in case",
    "start": "1960270",
    "end": "1966330"
  },
  {
    "text": "they receive a request they need to forward it somewhere else and need as not to happen they just put in the the",
    "start": "1966330",
    "end": "1971640"
  },
  {
    "text": "their current client at feedback and the header so your actual application running in the pot can still figure out",
    "start": "1971640",
    "end": "1979290"
  },
  {
    "text": "who was the original source caller because he just parses the header basically and sees all right the first",
    "start": "1979290",
    "end": "1985080"
  },
  {
    "text": "IP was this okay that's my source as we see the header is starting with an X so",
    "start": "1985080",
    "end": "1991620"
  },
  {
    "text": "that means it's not a standard header which means that not all HTTP appliances",
    "start": "1991620",
    "end": "1996660"
  },
  {
    "text": "might actually support it this has been recognized and therefore",
    "start": "1996660",
    "end": "2003590"
  },
  {
    "text": "there won't be an official HTTP at our calls forwarded which will do the same job but as it's like a default header or",
    "start": "2003590",
    "end": "2011030"
  },
  {
    "text": "an official header all appliances should support it and we will have at least some parts of this issue sourced the",
    "start": "2011030",
    "end": "2020750"
  },
  {
    "start": "2020000",
    "end": "2080000"
  },
  {
    "text": "second option we wanted to have a quick look so it is proxy protocol so proxy protocol was introduced by H a proxy",
    "start": "2020750",
    "end": "2027800"
  },
  {
    "text": "which is another reverse proxy solution it happens at layer 4 which is the transport layer in TCP UDP and the goal",
    "start": "2027800",
    "end": "2035690"
  },
  {
    "text": "of proxy protocol is to chain proxies without losing the actual client",
    "start": "2035690",
    "end": "2041510"
  },
  {
    "text": "information so even even if the request is passing through the proxy the goal is",
    "start": "2041510",
    "end": "2047630"
  },
  {
    "text": "to not use the source IP luckily the proxy protocol is supported by a lot of",
    "start": "2047630",
    "end": "2053120"
  },
  {
    "text": "appliances like Amazon Amazon elastic load balancer traffic apache nginx like",
    "start": "2053120",
    "end": "2059840"
  },
  {
    "text": "really by a lots so this is a good let's say standard that can be used in many many cases and he usually uses when",
    "start": "2059840",
    "end": "2067520"
  },
  {
    "text": "source not happens but as you are for example operating on the TCP level there",
    "start": "2067520",
    "end": "2072860"
  },
  {
    "text": "is no way to use HTTP headers yet so you need an alternative and that could be a good one last but not least out of the",
    "start": "2072860",
    "end": "2081230"
  },
  {
    "start": "2080000",
    "end": "2139000"
  },
  {
    "text": "three especially options is distributed logging and tracing that's kinda off idea for now let's say",
    "start": "2081230",
    "end": "2087980"
  },
  {
    "text": "the idea is to collect the source IP as soon as possible and put it in my distributed logging system because once",
    "start": "2087980",
    "end": "2095330"
  },
  {
    "text": "I have it I cannot lose it anymore and then lose tracing tracing system to",
    "start": "2095330",
    "end": "2101720"
  },
  {
    "text": "actually track the requests and then do billing or whatever you need to do the good thing in this is that it doesn't",
    "start": "2101720",
    "end": "2109640"
  },
  {
    "text": "require you to do more complex Network setups because the most distribution",
    "start": "2109640",
    "end": "2114820"
  },
  {
    "text": "logging and tracing stacks already available inside your cluster so you can just reuse existing tap however it",
    "start": "2114820",
    "end": "2122750"
  },
  {
    "text": "really relies heavily on the actual stack being deployed on your cluster so",
    "start": "2122750",
    "end": "2127820"
  },
  {
    "text": "it can be a bit of a bit of cumbersome let's say to to actually get that running and get it",
    "start": "2127820",
    "end": "2134720"
  },
  {
    "text": "working last but not least I want to",
    "start": "2134720",
    "end": "2140090"
  },
  {
    "start": "2139000",
    "end": "2148000"
  },
  {
    "text": "give you two use cases and how that could actually work in reality so the",
    "start": "2140090",
    "end": "2147500"
  },
  {
    "text": "first and probably the most easy use case that you can already think of is having the external load balancer with a",
    "start": "2147500",
    "end": "2155030"
  },
  {
    "start": "2148000",
    "end": "2223000"
  },
  {
    "text": "traffic policy how this works then is you just deploy your service of a type load balancer set the external traffic",
    "start": "2155030",
    "end": "2161300"
  },
  {
    "text": "policy to true the kubernetes api has this information available so the cloud",
    "start": "2161300",
    "end": "2166460"
  },
  {
    "text": "provider can automatically configure a load balancer instance based on this so",
    "start": "2166460",
    "end": "2173120"
  },
  {
    "text": "a potential client will like just point to public then domain OAP again which",
    "start": "2173120",
    "end": "2178670"
  },
  {
    "text": "ends up at being the actual load balancer that has been just automatically configured from there he",
    "start": "2178670",
    "end": "2184460"
  },
  {
    "text": "goes to a node which has the actual target pod running cue proxy will forward it to the to the pub all good",
    "start": "2184460",
    "end": "2191480"
  },
  {
    "text": "we're safe the good thing here is that we have full of limitation because like the cloud provider is taking care of it",
    "start": "2191480",
    "end": "2197360"
  },
  {
    "text": "and make sure that it works Conn and you can you can you can imagine that already",
    "start": "2197360",
    "end": "2203210"
  },
  {
    "text": "that also really depends on the actual autumn's implementations so if your load balancer",
    "start": "2203210",
    "end": "2208430"
  },
  {
    "text": "doesn't support external traffic policy for example it won't help you because he",
    "start": "2208430",
    "end": "2214850"
  },
  {
    "text": "could then target also this node and then you're still you're still in the wilds and might have dropped requests",
    "start": "2214850",
    "end": "2222550"
  },
  {
    "text": "secondly is capturing the source IP from the HTTP header because that's also an",
    "start": "2222550",
    "end": "2228740"
  },
  {
    "text": "option the good thing here is it's a really simple set up because it's just relying on the HTTP headers which are",
    "start": "2228740",
    "end": "2235730"
  },
  {
    "text": "part of the protocol so the client talks to an HTTP reverse proxy the HTTP",
    "start": "2235730",
    "end": "2241340"
  },
  {
    "text": "reverse proxy appends the original client IP into the exponent from as we",
    "start": "2241340",
    "end": "2246680"
  },
  {
    "text": "just heard a couple minutes ago and forwards the request to the actual English controller and then the English",
    "start": "2246680",
    "end": "2252920"
  },
  {
    "text": "controller forwards to request to your back-end or to your plot better to say and from there the pod can just read out",
    "start": "2252920",
    "end": "2259040"
  },
  {
    "text": "the value in the header and and you're good to go however the large downside is it only",
    "start": "2259040",
    "end": "2264980"
  },
  {
    "text": "works with HTTP because it's an HTTP field in most cases or in some cases let's say that can already be",
    "start": "2264980",
    "end": "2272000"
  },
  {
    "text": "sufficient then just here are some sources in case you want to read up",
    "start": "2272000",
    "end": "2278660"
  },
  {
    "start": "2276000",
    "end": "2285000"
  },
  {
    "text": "again on what I what I just said and want to potentially learn more about this um also we published a worldwide",
    "start": "2278660",
    "end": "2286580"
  },
  {
    "start": "2285000",
    "end": "2302000"
  },
  {
    "text": "paper called routing in the cloud which takes this topic which picks up this",
    "start": "2286580",
    "end": "2291800"
  },
  {
    "text": "topic and evaluates it a bit more because like you have more time and to read it and don't need to present it so",
    "start": "2291800",
    "end": "2298970"
  },
  {
    "text": "last but not least for them before the actual presentation thank you for being with me thank you for listening to me",
    "start": "2298970",
    "end": "2304580"
  },
  {
    "start": "2302000",
    "end": "2387000"
  },
  {
    "text": "and now I'm looking forward to all your questions well I have to say I'm not",
    "start": "2304580",
    "end": "2310790"
  },
  {
    "text": "looking forward to all the questions why is that well my goodness what a popular topic",
    "start": "2310790",
    "end": "2317720"
  },
  {
    "text": "you have so this is great we've got lots of lots of attendees that we call enough",
    "start": "2317720",
    "end": "2325130"
  },
  {
    "text": "questions to fill the rest of our time so let's see if we can choose a few that",
    "start": "2325130",
    "end": "2331490"
  },
  {
    "text": "are that might benefit the most folks one was just maybe a brief point of",
    "start": "2331490",
    "end": "2338330"
  },
  {
    "text": "clarification on the last couple of slides the question is I think you were",
    "start": "2338330",
    "end": "2345320"
  },
  {
    "text": "speaking about and X forwarded from and just just whether or not that might have",
    "start": "2345320",
    "end": "2351140"
  },
  {
    "text": "been a typo with respect to X for X one morning for yeah yeah that was the type",
    "start": "2351140",
    "end": "2357020"
  },
  {
    "text": "of sorry that not very good you you put",
    "start": "2357020",
    "end": "2362360"
  },
  {
    "text": "you pulled early on that one so we've",
    "start": "2362360",
    "end": "2367730"
  },
  {
    "text": "got that looks a few other questions here's one from Karthik is you know how",
    "start": "2367730",
    "end": "2373550"
  },
  {
    "text": "do you expose traffic how do you expose any are you exposed traffic ingress",
    "start": "2373550",
    "end": "2379400"
  },
  {
    "text": "controller pod as I said pots pots are",
    "start": "2379400",
    "end": "2386330"
  },
  {
    "text": "exposed through services and that's actually the same for everyone let's say so let me bring up the slides so let's",
    "start": "2386330",
    "end": "2395510"
  },
  {
    "start": "2387000",
    "end": "2432000"
  },
  {
    "text": "say one of these pots is the traffic plot you explos it you expose it by my service or actually we can take this",
    "start": "2395510",
    "end": "2402620"
  },
  {
    "text": "this is better this is your traffic pot this is exposed over service of type load balancer typically and then I said",
    "start": "2402620",
    "end": "2411140"
  },
  {
    "text": "as there might get for example if you're running in Google communities engine or Amazon or whatever you will you will you",
    "start": "2411140",
    "end": "2418490"
  },
  {
    "text": "will see this instance for you be load balancer instance for you and as this is",
    "start": "2418490",
    "end": "2425870"
  },
  {
    "text": "of type of type load balancer which is in an enhancement of type of type not",
    "start": "2425870",
    "end": "2431930"
  },
  {
    "text": "part he will like route to the parts that are exposed from from the traffic",
    "start": "2431930",
    "end": "2437390"
  },
  {
    "start": "2432000",
    "end": "3011000"
  },
  {
    "text": "pot and from there you will have the routing and you will have it accessible from the outside very good so some other",
    "start": "2437390",
    "end": "2448130"
  },
  {
    "text": "questions here the question is can you",
    "start": "2448130",
    "end": "2453200"
  },
  {
    "text": "please state some pros and cons in using traffic as an ingress controller as",
    "start": "2453200",
    "end": "2459830"
  },
  {
    "text": "versus using nginx as an ingress controller yeah sure",
    "start": "2459830",
    "end": "2466180"
  },
  {
    "text": "the main difference let's say is and I don't mean this like bad or something",
    "start": "2466180",
    "end": "2471260"
  },
  {
    "text": "just just to state of what it is nginx has been made like really really long",
    "start": "2471260",
    "end": "2477170"
  },
  {
    "text": "ago because it was it was solving you need back at the time and therefore for",
    "start": "2477170",
    "end": "2483140"
  },
  {
    "text": "a long time that they have an architectural I would yeah miss solution",
    "start": "2483140",
    "end": "2491330"
  },
  {
    "text": "or misbehavior let's say which is they need to restart the process when they",
    "start": "2491330",
    "end": "2496430"
  },
  {
    "text": "reload configuration and as we know within the container world containers can move like from one node to another",
    "start": "2496430",
    "end": "2502190"
  },
  {
    "text": "in like milliseconds so they're so the endpoint might change and this will",
    "start": "2502190",
    "end": "2507560"
  },
  {
    "text": "require them the actual nginx process to boot up again which could potentially",
    "start": "2507560",
    "end": "2512870"
  },
  {
    "text": "loose you some requests let's say so that's like one of the of the main differences between nginx and then",
    "start": "2512870",
    "end": "2520220"
  },
  {
    "text": "traffic because traffic is like build with that being in mind so autoconfig Euler out he configures itself and some",
    "start": "2520220",
    "end": "2526760"
  },
  {
    "text": "sort of hot reload fashion and therefore you won't like those requests",
    "start": "2526760",
    "end": "2533290"
  },
  {
    "text": "and that's actually the most difference traffic has been built as I said for the cloud world in mind",
    "start": "2533630",
    "end": "2539870"
  },
  {
    "text": "so everything traffic death was fetching let's accrued certificates and all of that is meant to make the containerized",
    "start": "2539870",
    "end": "2547040"
  },
  {
    "text": "the container in rest ingress working better and engine X was it works but it",
    "start": "2547040",
    "end": "2553280"
  },
  {
    "text": "was built for a different use case and it's just being ported over so all right",
    "start": "2553280",
    "end": "2559760"
  },
  {
    "text": "very good next question is is it advisable to have more than one replica",
    "start": "2559760",
    "end": "2566450"
  },
  {
    "text": "of the ingress controller for both performance and redundancy the answer",
    "start": "2566450",
    "end": "2575330"
  },
  {
    "text": "sadly as it depends of course having more than one replica is always something you should you should keep in",
    "start": "2575330",
    "end": "2583250"
  },
  {
    "text": "mind at least for the failover redundancy high availability part however especially in terms of lingers",
    "start": "2583250",
    "end": "2591050"
  },
  {
    "text": "controller it can be a bit tricky it depends on what the English controller actually does if the ingress controller",
    "start": "2591050",
    "end": "2597320"
  },
  {
    "text": "like I said is also for example managing lots of certificates for you you bring",
    "start": "2597320",
    "end": "2602900"
  },
  {
    "text": "in some challenges because then all your replicas need to have access to the same - the same certificates for like so like",
    "start": "2602900",
    "end": "2609920"
  },
  {
    "text": "have all the certificates available to do TLS termination and stuff but in",
    "start": "2609920",
    "end": "2615350"
  },
  {
    "text": "general it is something if possible giving your case I would go for it just like it makes your life easier yeah",
    "start": "2615350",
    "end": "2624170"
  },
  {
    "text": "that's my answer otherwise I talk too long there's a",
    "start": "2624170",
    "end": "2629870"
  },
  {
    "text": "related question to that and the question is how do you scale the ingress controller so that it's not a bottleneck",
    "start": "2629870",
    "end": "2639070"
  },
  {
    "text": "what we typically do in this sort of scenarios is also with our customers we",
    "start": "2640000",
    "end": "2645820"
  },
  {
    "text": "assess the situation they are facing with them together because if someone",
    "start": "2645820",
    "end": "2650900"
  },
  {
    "text": "tells you ok I'm having I'm having resource resource issues on my on my on",
    "start": "2650900",
    "end": "2656540"
  },
  {
    "text": "my wrist controller it can have two different reasons let's say one of",
    "start": "2656540",
    "end": "2662120"
  },
  {
    "text": "course is that you might have liked found a bug in your software which might be causing Adam",
    "start": "2662120",
    "end": "2667150"
  },
  {
    "text": "release or something and then you of course have to fix it but the other is that they are just having too many",
    "start": "2667150",
    "end": "2673540"
  },
  {
    "text": "requests for example per second but this is sometimes a bad metric but I will still go for it from work for now so",
    "start": "2673540",
    "end": "2681790"
  },
  {
    "text": "that the English controller can just not go with it so what we typically advise is start",
    "start": "2681790",
    "end": "2687220"
  },
  {
    "text": "lowered than you think wait until you might potentially see that sort of behavior that requests are just getting",
    "start": "2687220",
    "end": "2694540"
  },
  {
    "text": "slower for example and then split up another replica if possible and if then",
    "start": "2694540",
    "end": "2699670"
  },
  {
    "text": "you're like your response time in itself is getting back to a normal state again you know that you're good and if you can",
    "start": "2699670",
    "end": "2705880"
  },
  {
    "text": "scale it without having changes you know okay like I can stay at my previous spot",
    "start": "2705880",
    "end": "2711160"
  },
  {
    "text": "because I'm still good I don't need to scale up very good well we'll keep on",
    "start": "2711160",
    "end": "2717310"
  },
  {
    "text": "this theme for at least another question here yes this related question is can",
    "start": "2717310",
    "end": "2722680"
  },
  {
    "text": "you have multiple ingress controllers that are load balanced externally for AJ",
    "start": "2722680",
    "end": "2728470"
  },
  {
    "text": "oh that's actually a tricky question so",
    "start": "2728470",
    "end": "2733690"
  },
  {
    "text": "when I when I got the question correctly is um you you will you will have multiple ingress controllers that are",
    "start": "2733690",
    "end": "2739570"
  },
  {
    "text": "both exposed from the outside ah okay that's tricky because if you like one to",
    "start": "2739570",
    "end": "2747640"
  },
  {
    "text": "have to load balancers for AJ reasons they will have to work on the same ingress objects because like they need",
    "start": "2747640",
    "end": "2754720"
  },
  {
    "text": "to have the same configuration need to serve the same applications and that can",
    "start": "2754720",
    "end": "2760900"
  },
  {
    "text": "be depending on what actual opponents of implementation you use ingress controller implementation sorry that can",
    "start": "2760900",
    "end": "2767680"
  },
  {
    "text": "be tricky because it can happen that the English controllers fight for the actual",
    "start": "2767680",
    "end": "2774280"
  },
  {
    "text": "ingress let's say so that could be could be tricky but what I think will be more complex is that these days could usually",
    "start": "2774280",
    "end": "2782440"
  },
  {
    "text": "ingress objects are configured by by putting these annotations on the objects",
    "start": "2782440",
    "end": "2789340"
  },
  {
    "text": "and as annotations are basically just key value pairs the keys will probably",
    "start": "2789340",
    "end": "2794410"
  },
  {
    "text": "differ between various ingress controller between Mary's ingress controllers so you might have",
    "start": "2794410",
    "end": "2801130"
  },
  {
    "text": "to have like the configuration twice let's say one spring was controller in order that both English controller can",
    "start": "2801130",
    "end": "2808180"
  },
  {
    "text": "work with the actual objects just time and then of course if you have two external load balancers you will have",
    "start": "2808180",
    "end": "2815319"
  },
  {
    "text": "all your DNS records you have they will need to of course point to both load",
    "start": "2815319",
    "end": "2821259"
  },
  {
    "text": "balancers as well otherwise the requests will not float nice if we could hand out",
    "start": "2821259",
    "end": "2827890"
  },
  {
    "text": "kudos I would give those to Jason for the the the trickiness of that question that's great yeah that was actually good",
    "start": "2827890",
    "end": "2834490"
  },
  {
    "text": "one all right well we do have it we do have a few more minutes and we've got a",
    "start": "2834490",
    "end": "2840460"
  },
  {
    "text": "number of more questions to go through so that let's let's take this one next",
    "start": "2840460",
    "end": "2845710"
  },
  {
    "text": "up so the question is do you have any take on the alb I guess it's probably I",
    "start": "2845710",
    "end": "2856059"
  },
  {
    "text": "think they're questions do you have any take on the alb - ingress controllers made available by cloud providers",
    "start": "2856059",
    "end": "2862650"
  },
  {
    "text": "compared to bringing on your own ingress controller it's probably meant them",
    "start": "2862650",
    "end": "2870509"
  },
  {
    "text": "except do not bring like an own load balancer I guess but yeah I haven't",
    "start": "2870509",
    "end": "2875799"
  },
  {
    "text": "taken Bissell it's a personal take as I said also in the slides typically going",
    "start": "2875799",
    "end": "2881740"
  },
  {
    "text": "for if you're in a cloud environment where your cloud provider can assist you it was sort of like placing a load",
    "start": "2881740",
    "end": "2887710"
  },
  {
    "text": "balancer there I personally think it's always a good idea to do so because",
    "start": "2887710",
    "end": "2892869"
  },
  {
    "text": "usually they're not super expensive to have and you just like get away of the",
    "start": "2892869",
    "end": "2898750"
  },
  {
    "text": "complexity of managing there's infrastructure on your own because the cloud provider just does it",
    "start": "2898750",
    "end": "2903970"
  },
  {
    "text": "for you however of course if you need a specific",
    "start": "2903970",
    "end": "2909039"
  },
  {
    "text": "feature the cloud load balancer just plain doesn't offer you don't have a",
    "start": "2909039",
    "end": "2915730"
  },
  {
    "text": "choice you then have to like manage you and infrastructure bring it up make sure it works correctly with a cluster but",
    "start": "2915730",
    "end": "2921609"
  },
  {
    "text": "typically and this is something we see at our customers as well if there is a cloud balance are available within the",
    "start": "2921609",
    "end": "2928089"
  },
  {
    "text": "cloud they are running in they go for it just just for the easiness because usually it's fully automated",
    "start": "2928089",
    "end": "2934540"
  },
  {
    "text": "and it just works and that's and I would say most cases worse the money that one",
    "start": "2934540",
    "end": "2941350"
  },
  {
    "text": "is taking from you I understood very good here's a hopefully an easy one that",
    "start": "2941350",
    "end": "2947290"
  },
  {
    "text": "there's this traffic support proxy protocol to preserve this source IP",
    "start": "2947290",
    "end": "2954010"
  },
  {
    "text": "address yes the best that was really an easy one here's a little one so the",
    "start": "2954010",
    "end": "2962830"
  },
  {
    "text": "question is if I expose the service as type load balancer the ingress traffic",
    "start": "2962830",
    "end": "2970390"
  },
  {
    "text": "first hits the load announcer and then it will be forwarded to the back-end service right and not to the pod",
    "start": "2970390",
    "end": "2978520"
  },
  {
    "text": "directly so in your diet actually for traffic we go to the pot directly I",
    "start": "2978520",
    "end": "2984610"
  },
  {
    "text": "can't I can't speak about all all other ingress controls because I don't know",
    "start": "2984610",
    "end": "2989680"
  },
  {
    "text": "them that deep but for traffic we just use the service object to actually see",
    "start": "2989680",
    "end": "2995050"
  },
  {
    "text": "the pots and directly forward to the pots because when we develop this we",
    "start": "2995050",
    "end": "3000060"
  },
  {
    "text": "figured that to be to be faster and a bit more stable for us so we we just",
    "start": "3000060",
    "end": "3006120"
  },
  {
    "text": "take the service to see where we actually need to go and go there directly here's another one what is a",
    "start": "3006120",
    "end": "3015870"
  },
  {
    "start": "3011000",
    "end": "3131000"
  },
  {
    "text": "recommended way and considerations that you might make like preventing DDoS to",
    "start": "3015870",
    "end": "3022530"
  },
  {
    "text": "enforce authentication at the ingress service and routing down to the pods",
    "start": "3022530",
    "end": "3027960"
  },
  {
    "text": "only if the client is authenticated well what is my take or how would I do this",
    "start": "3027960",
    "end": "3034410"
  },
  {
    "text": "all right yeah yeah like a recommended considerations that you might or what I",
    "start": "3034410",
    "end": "3040380"
  },
  {
    "text": "have yeah that's a pretty tough one",
    "start": "3040380",
    "end": "3045500"
  },
  {
    "text": "because this also very much relies on on what is your exit case or better what is",
    "start": "3045500",
    "end": "3053130"
  },
  {
    "text": "your exact setup because typically that sort of attacks happen if you have like a certain size",
    "start": "3053130",
    "end": "3061230"
  },
  {
    "text": "as a service or as an application or whatever and then there are like",
    "start": "3061230",
    "end": "3066270"
  },
  {
    "text": "multiple ways to do so most or not most but some of the customers we have ourself that just lets say by money",
    "start": "3066270",
    "end": "3073720"
  },
  {
    "text": "they buy appliances like in a five or whatever place it in front of the actual English controller and let this",
    "start": "3073720",
    "end": "3080170"
  },
  {
    "text": "appliance handle it that is a for something you could also have with like for example placing a",
    "start": "3080170",
    "end": "3087640"
  },
  {
    "text": "CloudFlare and and from the fear of your kubernetes cluster for example which",
    "start": "3087640",
    "end": "3093100"
  },
  {
    "text": "would also like take care of the DDoS for authentication it also depends a bit",
    "start": "3093100",
    "end": "3100740"
  },
  {
    "text": "it would be possible for for for some ingress controllers that the ingress",
    "start": "3100740",
    "end": "3106660"
  },
  {
    "text": "controller itself talks to a certain to certain servers and forwards just the authentication requests basically and",
    "start": "3106660",
    "end": "3113560"
  },
  {
    "text": "then just lets the process the request go through once once this request is authenticated that would also be a",
    "start": "3113560",
    "end": "3122170"
  },
  {
    "text": "possibility so yeah it really depends on what is your your actual case you know",
    "start": "3122170",
    "end": "3132130"
  },
  {
    "start": "3131000",
    "end": "3193000"
  },
  {
    "text": "it's a good question when there's an it's depends in there somewhere so that's great yeah it's it's always hard",
    "start": "3132130",
    "end": "3138310"
  },
  {
    "text": "to answer the lucky correct way because you don't know the exit situation then so you just can give hints but yeah it",
    "start": "3138310",
    "end": "3144610"
  },
  {
    "text": "is what it is there's a couple of folks on the call that just highlighted the I",
    "start": "3144610",
    "end": "3151990"
  },
  {
    "text": "think Indian X's ability and sounds like f5s ability to also directly forward",
    "start": "3151990",
    "end": "3157390"
  },
  {
    "text": "traffic to pods and so wrapping those up I think we so we're we've got about four",
    "start": "3157390",
    "end": "3164440"
  },
  {
    "text": "minutes left I I'm not sure if Manuel queue could withstand being hammered with this many more questions let me see",
    "start": "3164440",
    "end": "3172630"
  },
  {
    "text": "a couple of quick ones I'm there there are a couple that you know I think are asking for comparisons to other products",
    "start": "3172630",
    "end": "3180520"
  },
  {
    "text": "or projects and so maybe we will forego those just to not put you in an inner",
    "start": "3180520",
    "end": "3186820"
  },
  {
    "text": "stress it yeah but here's one you know that there I",
    "start": "3186820",
    "end": "3195190"
  },
  {
    "text": "think it's just sort of point of discussion that one of the",
    "start": "3195190",
    "end": "3200730"
  },
  {
    "text": "attendees is noting that many inverse controllers that are deployed that that",
    "start": "3200730",
    "end": "3208860"
  },
  {
    "text": "come from cloud providers can be sync with external DNS yeah that is true that is true for example traffic can do this",
    "start": "3208860",
    "end": "3216300"
  },
  {
    "text": "as well and not just traffic there are others that can do this as well but that's pretty nice because how this",
    "start": "3216300",
    "end": "3221430"
  },
  {
    "text": "works is ingress objects has a status field where the load balancer can put",
    "start": "3221430",
    "end": "3226440"
  },
  {
    "text": "their IP and that's what the cloud provider or the ingress controller does then like because the services exposed",
    "start": "3226440",
    "end": "3233430"
  },
  {
    "text": "are retired load balancer and so typically the cloud provider adds the external IP of the load balancer",
    "start": "3233430",
    "end": "3239700"
  },
  {
    "text": "attached to the service to the service object and then the ingress controllers can basically copy this external IP into",
    "start": "3239700",
    "end": "3247110"
  },
  {
    "text": "the ingress status let's say and then other tools such as for example external",
    "start": "3247110",
    "end": "3252360"
  },
  {
    "text": "VMs can take this ingress records and can create automatically DNS records for",
    "start": "3252360",
    "end": "3258090"
  },
  {
    "text": "you so you don't even have to manage DNS records anymore very good okay well",
    "start": "3258090",
    "end": "3264780"
  },
  {
    "text": "that's great what's up Thank You Manuel fantastic presentation thanks for having",
    "start": "3264780",
    "end": "3270030"
  },
  {
    "text": "me yeah we've got some questions we haven't gotten to but but you've been",
    "start": "3270030",
    "end": "3276030"
  },
  {
    "text": "bludgeoned with them already so do you want to say thanks to everyone for joining today it's been a fantastic",
    "start": "3276030",
    "end": "3282630"
  },
  {
    "text": "webinar as a reminder both the recording and the slides will be online later",
    "start": "3282630",
    "end": "3288990"
  },
  {
    "text": "today the slides are available here the links have been posted a link has also been posted in the chat as to where you",
    "start": "3288990",
    "end": "3295590"
  },
  {
    "text": "can find the webinar recording so you know we look forward to seeing you all at a future CNC app webinar and have a",
    "start": "3295590",
    "end": "3302010"
  },
  {
    "text": "great day thank you take care bye bye",
    "start": "3302010",
    "end": "3306800"
  }
]