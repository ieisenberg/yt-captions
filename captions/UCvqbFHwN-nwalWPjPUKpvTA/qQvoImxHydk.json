[
  {
    "text": "hello everybody this is leo today we've got a story for you folks guess what it's a tale about falco but",
    "start": "80",
    "end": "7200"
  },
  {
    "text": "not that kind of tale about bpf cisco's runtime security and so on that i usually stress",
    "start": "7200",
    "end": "13040"
  },
  {
    "text": "people about sorry not sorry today is different i promise today i will talk about an",
    "start": "13040",
    "end": "20240"
  },
  {
    "text": "important pose for falco to adopt pro the same cicd system kubernetes uses",
    "start": "20240",
    "end": "26320"
  },
  {
    "text": "to automate the whole set of workflows and policies that the governance of an open source project requires",
    "start": "26320",
    "end": "33840"
  },
  {
    "text": "anyways my name is leonardo di donato i'm an open source software engineer assistant where my daily job is to go to",
    "start": "34399",
    "end": "40320"
  },
  {
    "text": "falco evolve it and maintain it as i'm maintenance farco i also have to advocate and present its",
    "start": "40320",
    "end": "45840"
  },
  {
    "text": "technology and all the artwork we do to continuously improve it as a software and as an open source project",
    "start": "45840",
    "end": "52719"
  },
  {
    "text": "so here i am if there's a thought of me moving ends like a real italian falco swag the first one guessing the",
    "start": "52719",
    "end": "59039"
  },
  {
    "text": "exact meaning and since it's very very likely that they will do other italian",
    "start": "59039",
    "end": "64158"
  },
  {
    "text": "gestures while speaking please don't give up if you don't get this one there will be other",
    "start": "64159",
    "end": "69439"
  },
  {
    "text": "opportunities you can usually find me on twitter github and generally the webverse",
    "start": "69439",
    "end": "75280"
  },
  {
    "text": "with the nickname ludido feel free to drop me a line ask me questions about falco ebpf kernel",
    "start": "75280",
    "end": "81360"
  },
  {
    "text": "whatever no problem at all i like to socialize",
    "start": "81360",
    "end": "87600"
  },
  {
    "text": "when i first joined sysdig to work full time on falco which is now the first runtime security project incubated by",
    "start": "87600",
    "end": "93600"
  },
  {
    "text": "cncf honestly the contributor experience was not that good",
    "start": "93600",
    "end": "99280"
  },
  {
    "text": "falco created in 2016 to pass kernel and container events and the tech security",
    "start": "99280",
    "end": "104399"
  },
  {
    "text": "threat from them was just donated to the cncf at that time",
    "start": "104399",
    "end": "110000"
  },
  {
    "text": "initial efforts to provide healthy open source governance were already being put in place but they",
    "start": "110000",
    "end": "116479"
  },
  {
    "text": "were not structured at that time yeah we had an initial continuous",
    "start": "116479",
    "end": "122159"
  },
  {
    "text": "integration system built on top of travis ci but it was honestly causing more troubles than",
    "start": "122159",
    "end": "128160"
  },
  {
    "text": "benefits we still had the building and testing infrastructure for falco drivers",
    "start": "128160",
    "end": "133360"
  },
  {
    "text": "kernel modules and the bpf probes internally at sysdig and we needed to bring it in the open",
    "start": "133360",
    "end": "139840"
  },
  {
    "text": "the one here in the mem memphis me the first days i joined the last years ago like",
    "start": "139840",
    "end": "146080"
  },
  {
    "text": "the repositories in the falco security github organization had zero or near zero automation there were",
    "start": "148080",
    "end": "154800"
  },
  {
    "text": "policies but no one or nothing enforcing them nor they were easy to discover from the community",
    "start": "154800",
    "end": "162319"
  },
  {
    "text": "prerequisites were often merged in by the same outdoor without reviews there was not a clear transparent",
    "start": "162319",
    "end": "168720"
  },
  {
    "text": "auditable path for maintainers to not mention external contributors lists could continue",
    "start": "168720",
    "end": "175120"
  },
  {
    "text": "but you got the pint so hey no blame we are earlier to learn and",
    "start": "175120",
    "end": "181200"
  },
  {
    "text": "improve and do things better and better open source is about culture first of all the only problem",
    "start": "181200",
    "end": "187440"
  },
  {
    "text": "was i didn't have enough time to build a custom cicd system for falco",
    "start": "187440",
    "end": "192720"
  },
  {
    "text": "we all know that testing and automatically verifying the code we merge into our repository is a crucial",
    "start": "192720",
    "end": "198239"
  },
  {
    "text": "step towards the creation of good mindable and successful software right but that's just one of the things that",
    "start": "198239",
    "end": "205440"
  },
  {
    "text": "revolve around the code especially around open source code but neither i did have spare time to",
    "start": "205440",
    "end": "212239"
  },
  {
    "text": "create an automatic easily configurable and outable policy enforcer system and for the same",
    "start": "212239",
    "end": "217760"
  },
  {
    "text": "reason spending hours by reviewing and double checking every single action performing on github from",
    "start": "217760",
    "end": "223200"
  },
  {
    "text": "other contributors where they were following the policies or not whether they were expecting contributor",
    "start": "223200",
    "end": "228959"
  },
  {
    "text": "workflow or not on various repositories in the falco github organization has never been an option i mean for",
    "start": "228959",
    "end": "236959"
  },
  {
    "text": "evident reasons this cannot be a task for a human i mean at the time the team working full-time",
    "start": "236959",
    "end": "243120"
  },
  {
    "text": "on falco was just the two of us me and murphy and lorenzo therefore we",
    "start": "243120",
    "end": "248159"
  },
  {
    "text": "needed to focus on writing ebpf code and c c plus plus to improve falco first of all",
    "start": "248159",
    "end": "254560"
  },
  {
    "text": "not reinvent the will however we couldn't leave out or ignore this",
    "start": "254560",
    "end": "260400"
  },
  {
    "text": "topic at all so how did i solve this problem",
    "start": "260400",
    "end": "265600"
  },
  {
    "text": "i started thinking of other successful open source projects from which to borrow ideas and best practice",
    "start": "265600",
    "end": "271680"
  },
  {
    "text": "i asked myself to look for something already implementing must if not all our needs to create a healthier open",
    "start": "271680",
    "end": "278560"
  },
  {
    "text": "source environment and better open source a typical example of a successful",
    "start": "278560",
    "end": "283600"
  },
  {
    "text": "problem solving i mean coping i still look at the kubernetes",
    "start": "283600",
    "end": "289280"
  },
  {
    "text": "and here came into play pro you might not know it's pro but",
    "start": "289280",
    "end": "294320"
  },
  {
    "text": "if you contributed to kubernetes or interacted with some of the issues or its prerequisites",
    "start": "294320",
    "end": "300000"
  },
  {
    "text": "for sure you somehow already interacted with it have you ever met kubernetes ci robot",
    "start": "300000",
    "end": "306000"
  },
  {
    "text": "that's just one of the faces of pro pro is advertised as a continuous",
    "start": "306000",
    "end": "312000"
  },
  {
    "text": "integration system based on kubernetes well it turns out it's way more than",
    "start": "312000",
    "end": "317600"
  },
  {
    "text": "that it's a platform for automating our open source github code lifecycle too",
    "start": "317600",
    "end": "323440"
  },
  {
    "text": "it was built for kubernetes on kubernetes because kubernetes already shipped some of the features needed",
    "start": "323440",
    "end": "329680"
  },
  {
    "text": "for continuous integration continuous deploying systems and automation leveraging parts you can containerize",
    "start": "329680",
    "end": "336479"
  },
  {
    "text": "your builds craft test runners that will execute your test suites making everything more self-contained",
    "start": "336479",
    "end": "342560"
  },
  {
    "text": "and reproducible but since pods are just a bunch of containers you can also",
    "start": "342560",
    "end": "348320"
  },
  {
    "text": "check out your open source code by using init containers you can share volumes upload build or",
    "start": "348320",
    "end": "354800"
  },
  {
    "text": "test results using sidecar containers and so on a lot more by using configmaps",
    "start": "354800",
    "end": "361360"
  },
  {
    "text": "you can also check in and roll out configurations in a declarative way with secrets we already have credentials",
    "start": "361360",
    "end": "367680"
  },
  {
    "text": "management and do not forget custom resource definitions they can mean pretty ending",
    "start": "367680",
    "end": "373440"
  },
  {
    "text": "if you want to build a continuous integration system because they let us define controllers",
    "start": "373440",
    "end": "378960"
  },
  {
    "text": "to interact with custom resources dedicated testing with custom controllers you can also implement different triggers",
    "start": "378960",
    "end": "385759"
  },
  {
    "text": "for different events for example you can write a controller that listens",
    "start": "385759",
    "end": "390960"
  },
  {
    "text": "for guitar block payloads or github events or even one polling at the fixed interval some other git platform",
    "start": "390960",
    "end": "397360"
  },
  {
    "text": "you can schedule custom resources on different clusters or in a different namespace",
    "start": "397360",
    "end": "402479"
  },
  {
    "text": "and so on a custom controller could work over the status of the custom resource definition and",
    "start": "402479",
    "end": "408319"
  },
  {
    "text": "whenever it's completed can perform other actions so basically they are very powerful mechanism that",
    "start": "408319",
    "end": "414560"
  },
  {
    "text": "makes scheduling allocation customization flows easier furthermore kubernetes gives us",
    "start": "414560",
    "end": "420880"
  },
  {
    "text": "the freedom to do not worry about scaling and scheduling since it's distributed it's full tolerant and",
    "start": "420880",
    "end": "426960"
  },
  {
    "text": "it's declarative these are all the features that pro inherited",
    "start": "426960",
    "end": "432880"
  },
  {
    "text": "also pro can span across different repositories and different github organizations if you want",
    "start": "432880",
    "end": "440560"
  },
  {
    "text": "this means we were able to deploy the same system over every falcon security project so to provide to the falco",
    "start": "440560",
    "end": "446960"
  },
  {
    "text": "community the same contributor experience disregarding the precise repository or",
    "start": "446960",
    "end": "452000"
  },
  {
    "text": "project they are contributing to for all these reasons it seemed perfect",
    "start": "452000",
    "end": "457199"
  },
  {
    "text": "for me and in the end poyana the name we gave to it",
    "start": "457199",
    "end": "462639"
  },
  {
    "text": "helped us spending a lot less time caring about cicd and open source automatic governance",
    "start": "462639",
    "end": "468400"
  },
  {
    "text": "allowing us to invest that time in more falco coding having it in place since more than one",
    "start": "468400",
    "end": "474400"
  },
  {
    "text": "year i also noticed that having the same recognized and mostly automated contributing process in",
    "start": "474400",
    "end": "479919"
  },
  {
    "text": "place for different repositories helps people it increases their confidence in contributing because after",
    "start": "479919",
    "end": "486400"
  },
  {
    "text": "the first attempt or contribution they don't have to learn and adapt to a different process for doing the second",
    "start": "486400",
    "end": "491840"
  },
  {
    "text": "one maybe on a different but related project honestly as a cncf maintenance trying to improve",
    "start": "491840",
    "end": "498479"
  },
  {
    "text": "its software while also increasing its community and making it healthier i couldn't task more but what's pro",
    "start": "498479",
    "end": "508800"
  },
  {
    "text": "let's give a deeper look at its architecture and how it's made it's composed of various microservices",
    "start": "508960",
    "end": "514719"
  },
  {
    "text": "that take advantage of the kubernetes functionalities as said to provide a set of core components",
    "start": "514719",
    "end": "520959"
  },
  {
    "text": "mainly the one depicted in this diagram this architecture as you can see is pretty modular it allows",
    "start": "520959",
    "end": "527440"
  },
  {
    "text": "for extendability and eventually replacement of components the copies from which to start is the",
    "start": "527440",
    "end": "534399"
  },
  {
    "text": "pro job custom resource for sure it lets us store the state in the kubernetes api server",
    "start": "534399",
    "end": "540399"
  },
  {
    "text": "every pro component is a custom controller dedicated to managing pro jobs somehow and for some purpose",
    "start": "540399",
    "end": "546959"
  },
  {
    "text": "for those interested in more details about the life of a pro job i put a cool link to red in the slide",
    "start": "546959",
    "end": "553040"
  },
  {
    "text": "anyways pro has different types of pro jobs the type of upper job specifies",
    "start": "553040",
    "end": "558800"
  },
  {
    "text": "when and how it will be triggered the more common one is the one called pre-submit",
    "start": "558800",
    "end": "565920"
  },
  {
    "text": "this type of pro job runs on pull frequencies and it can be triggered automatically or be",
    "start": "565920",
    "end": "571600"
  },
  {
    "text": "triggered by a slash command they usually run as kubernetes pods and report the status to github in form of",
    "start": "571600",
    "end": "578640"
  },
  {
    "text": "github status checks but you can also run pro jobs resources on different execution platforms like",
    "start": "578640",
    "end": "585680"
  },
  {
    "text": "k native or jenkins if you feel brave enough i mean we can trigger them for different",
    "start": "585680",
    "end": "592080"
  },
  {
    "text": "purposes too we can trigger them for building testing even publishing the artifacts of our",
    "start": "592080",
    "end": "597360"
  },
  {
    "text": "project we can run them when a pure request is merged in or just periodically they give",
    "start": "597360",
    "end": "603200"
  },
  {
    "text": "us a lot of options but what's the component that manages the lifecycle and execution of",
    "start": "603200",
    "end": "609360"
  },
  {
    "text": "this job it is planned plank is the main piece responsible for running the jobs within",
    "start": "609360",
    "end": "615360"
  },
  {
    "text": "pro it sits there watching for changes to the custom resources which means it looks for jobs created by",
    "start": "615360",
    "end": "622000"
  },
  {
    "text": "pro with agent kubernetes it starts them updates their state and terminates duplicated press admin jobs",
    "start": "622000",
    "end": "629440"
  },
  {
    "text": "which is a useful functionality when you push another change to your frequency soon after the previous one",
    "start": "629440",
    "end": "636240"
  },
  {
    "text": "so that's a pro job not to have a pod planck creates it the pro job does have",
    "start": "636240",
    "end": "642880"
  },
  {
    "text": "a part that's marked as completed planck updates the pro job status according to the job exit status either",
    "start": "642880",
    "end": "649600"
  },
  {
    "text": "passed or failed it also stores the lags of your job but only on google cloud storage buckets",
    "start": "649600",
    "end": "655920"
  },
  {
    "text": "last time i checked anyways i know there are ongoing efforts to power this functionality",
    "start": "655920",
    "end": "661680"
  },
  {
    "text": "also to other platforms instead arola jim is the service responsible",
    "start": "661680",
    "end": "666720"
  },
  {
    "text": "for scheduling periodic jobs input the definition of periodic per job",
    "start": "666720",
    "end": "672480"
  },
  {
    "text": "i'm working on for the falcon security guitar organization it implements a pro job which scope is",
    "start": "672480",
    "end": "678240"
  },
  {
    "text": "to mark issues with more than 90 days of inactivity as steel issues by electing our but",
    "start": "678240",
    "end": "686000"
  },
  {
    "text": "boyana commenting on such issues with the life cycle stale slash command",
    "start": "686000",
    "end": "691279"
  },
  {
    "text": "which in turn invokes the life cycle plugin as you can see here it's very simple to",
    "start": "691279",
    "end": "696480"
  },
  {
    "text": "create proof job and decide their frequencies just a bit of yammer you can put here almost whatever you",
    "start": "696480",
    "end": "702959"
  },
  {
    "text": "want in form of a docker image also a container that runs tests periodically",
    "start": "702959",
    "end": "708320"
  },
  {
    "text": "and things like that the only limit is your imagination",
    "start": "708320",
    "end": "713600"
  },
  {
    "text": "another essential part of pro architecture is the oak component and the plug-in system it provides it",
    "start": "713600",
    "end": "720560"
  },
  {
    "text": "all starts with guitable box but what githubs were booker well they",
    "start": "720560",
    "end": "726079"
  },
  {
    "text": "are mechanism that github provides us to listen on its events it tell us who generated an",
    "start": "726079",
    "end": "732639"
  },
  {
    "text": "event who sent it when what the content was and other related info when a guitar book is directed towards",
    "start": "732639",
    "end": "740079"
  },
  {
    "text": "our pro cluster it reaches the slash shook endpoint exposed by the deck component we'll see",
    "start": "740079",
    "end": "745680"
  },
  {
    "text": "in a bit all our github workbooks will go through this and the point that simply pipes",
    "start": "745680",
    "end": "751519"
  },
  {
    "text": "their payloads down to the component which in turn depending on what workbook",
    "start": "751519",
    "end": "756560"
  },
  {
    "text": "payload content words will trigger the relative plugin in fact new component is just a tiny go",
    "start": "756560",
    "end": "764160"
  },
  {
    "text": "server that accepts github events maps them to actions and acts as a plugin's agent it's",
    "start": "764160",
    "end": "771200"
  },
  {
    "text": "basically a dispatcher of github events to pro plugins to simplify i suggest you to give a look",
    "start": "771200",
    "end": "776720"
  },
  {
    "text": "at it by clicking on the link in this slide as you have probably started to imagine the previous slide",
    "start": "776720",
    "end": "782800"
  },
  {
    "text": "with plugins you can do awesome things like honking at all the prerequisites of your",
    "start": "782800",
    "end": "788399"
  },
  {
    "text": "friends like i do all the time jokes aside pro comes with some cool",
    "start": "788399",
    "end": "793920"
  },
  {
    "text": "plugins by default you can find all of them in the link provided into the slide but it also",
    "start": "793920",
    "end": "799440"
  },
  {
    "text": "supports external ones and this is really a cool thing some of them react to comments on the tab",
    "start": "799440",
    "end": "805839"
  },
  {
    "text": "containing slash commands implementing a kind of chat tops flow others",
    "start": "805839",
    "end": "811360"
  },
  {
    "text": "simply watch over other types of github events like comments reviews merged and so on a notable one",
    "start": "811360",
    "end": "819199"
  },
  {
    "text": "is the config updater plugin for sure we would like to redeploy our",
    "start": "819199",
    "end": "824480"
  },
  {
    "text": "controllers every time there is a configuration change right this plugin handles it it acts like an",
    "start": "824480",
    "end": "830800"
  },
  {
    "text": "agent that automatically reacts to events happening on the configuration files",
    "start": "830800",
    "end": "835920"
  },
  {
    "text": "and we love it instead the trigger plugin determines which job to run depending on the config files",
    "start": "835920",
    "end": "842320"
  },
  {
    "text": "and creates the corresponding pro job resource responding to the slash ok to test or slash retest commands",
    "start": "842320",
    "end": "849519"
  },
  {
    "text": "there are also plugins like the old one that labels a prerequisite with a label that block it to be merged",
    "start": "849519",
    "end": "855920"
  },
  {
    "text": "by tida another important component we are going to talk about soon or the approve or looks good to me and",
    "start": "855920",
    "end": "862720"
  },
  {
    "text": "blunderblast plugins the latter provides statistical means to select a subset of reviewers found in",
    "start": "862720",
    "end": "869680"
  },
  {
    "text": "the owner's file for reviewing and approving a prerequisite then reviewers can take a look at it and",
    "start": "869680",
    "end": "876720"
  },
  {
    "text": "mark it with lgtm command to signal the code is okay or at least looks okay in their opinion",
    "start": "876720",
    "end": "884320"
  },
  {
    "text": "anyways the poor request will be ready to be merged in only when an approval will approve it",
    "start": "884320",
    "end": "889600"
  },
  {
    "text": "either by the slash approve command or by clicking the approve green button on github do you want to",
    "start": "889600",
    "end": "896000"
  },
  {
    "text": "see what's going on on your pro cluster the answer is deck this component provides a dashboard to",
    "start": "896000",
    "end": "902480"
  },
  {
    "text": "look at all the ongoing the routers what's buying them to be merged in their current state in detail",
    "start": "902480",
    "end": "909760"
  },
  {
    "text": "and recent proof jobs it also gives us a glance of the queue of prerequisite schedules for auto matching by the tidal",
    "start": "909760",
    "end": "916240"
  },
  {
    "text": "service finally it also provides the help on plugins and slash commands",
    "start": "916240",
    "end": "921760"
  },
  {
    "text": "available for every repository you enabled profile this works pretty well to document your",
    "start": "921760",
    "end": "927600"
  },
  {
    "text": "open source workflows and policies when you want to onboard new contributors in an easy way i just",
    "start": "927600",
    "end": "934240"
  },
  {
    "text": "mentioned it tida two times right well tida is simply amazing i don't know if it's",
    "start": "934240",
    "end": "941040"
  },
  {
    "text": "pronounced td or title but forgive me it lets your butt automatically merge",
    "start": "941040",
    "end": "947199"
  },
  {
    "text": "prerequisites when the relatively required guitar status checks are okay you don't have to do it by hand anymore",
    "start": "947199",
    "end": "954959"
  },
  {
    "text": "it uses the github search query to inspect all the merge requirements",
    "start": "954959",
    "end": "960079"
  },
  {
    "text": "for example in the falco case it ensures that the poor rigas is not merged until it got through approvals from",
    "start": "960079",
    "end": "966959"
  },
  {
    "text": "maintainers comments are signed off there is no hold from maintaining a pull request it's not a work in progress or a",
    "start": "966959",
    "end": "974240"
  },
  {
    "text": "draft per request the history has been based on top of the current master of falco",
    "start": "974240",
    "end": "979600"
  },
  {
    "text": "the poor rigorous copus text contains a release note block for the future changelog",
    "start": "979600",
    "end": "984639"
  },
  {
    "text": "and finally all the contexts which can also be external continuous integrations jobs",
    "start": "984639",
    "end": "990480"
  },
  {
    "text": "not tolerable jobs are grey and you can have a look at all of these",
    "start": "990480",
    "end": "995680"
  },
  {
    "text": "merge requirements they can vary from repo to repo to enough visual form inside that you can",
    "start": "995680",
    "end": "1002160"
  },
  {
    "text": "even see what precise label is blocking a pure rigors from being merged in or if",
    "start": "1002160",
    "end": "1007279"
  },
  {
    "text": "anything else is preventing it to be merged when tidal shows up in the form of a",
    "start": "1007279",
    "end": "1012639"
  },
  {
    "text": "guitar status check into your prerequisites as you can see in the screenshot here on",
    "start": "1012639",
    "end": "1017839"
  },
  {
    "text": "the right it's very clear about what the pull request is missing to be put in the merge queue",
    "start": "1017839",
    "end": "1023120"
  },
  {
    "text": "finally tidal lets us decide the merge strategy we want to use which is something i love because it helps me",
    "start": "1023120",
    "end": "1029839"
  },
  {
    "text": "keeping the falcon git testing linear now suppose we are pro running from mums",
    "start": "1029839",
    "end": "1035918"
  },
  {
    "text": "maybe about two years like in our case the sinker component centers the scene",
    "start": "1035919",
    "end": "1041839"
  },
  {
    "text": "its main duty is to delete completed pro jobs and remove leftover pads it also ensures to keep",
    "start": "1041839",
    "end": "1048319"
  },
  {
    "text": "around the most recent periodic jobs because pro needs them to calculate when to trigger the new ones",
    "start": "1048319",
    "end": "1054160"
  },
  {
    "text": "so as do not lose the state it's kind of the garbage collector of pro",
    "start": "1054160",
    "end": "1059200"
  },
  {
    "text": "after two days it deletes completed pro jobs after 30 minutes it clean ups completed pods",
    "start": "1059200",
    "end": "1064880"
  },
  {
    "text": "but you can also configure these values if you want at this point we just need a mechanism",
    "start": "1064880",
    "end": "1069919"
  },
  {
    "text": "to get notified when our jobs complete right we don't want to stay at google cloud storage all day or other",
    "start": "1069919",
    "end": "1077360"
  },
  {
    "text": "things like that here enters the scene the crier component",
    "start": "1077360",
    "end": "1082400"
  },
  {
    "text": "it detects changes to pro job custom resources and repository status changes it can report to github which will cause",
    "start": "1082400",
    "end": "1089440"
  },
  {
    "text": "the time statuses to show up or it can report to pub sub services to garrett or to slack",
    "start": "1089440",
    "end": "1095120"
  },
  {
    "text": "notice it overlaps a bit with blank as a pro user you only want one of the two to",
    "start": "1095120",
    "end": "1100640"
  },
  {
    "text": "do this job but no worries you can disable the tab reporting plug adding the",
    "start": "1100640",
    "end": "1106320"
  },
  {
    "text": "skip dash part 2 flag to its deployment red mod if you want in the provided",
    "start": "1106320",
    "end": "1111760"
  },
  {
    "text": "links now that we know all the pieces in the landscape what's the resulting workflow",
    "start": "1111760",
    "end": "1116799"
  },
  {
    "text": "they implement let's see for example the prerequisite contribution workflow i implemented the with proof of falco",
    "start": "1116799",
    "end": "1123600"
  },
  {
    "text": "for the sake of presentation i'm gonna simplify it a bit but you will get the sense",
    "start": "1123600",
    "end": "1129280"
  },
  {
    "text": "so we have two participants here a contributor and that reviewer",
    "start": "1129280",
    "end": "1136000"
  },
  {
    "text": "when the contributor sends a fantastic prerequisite from farco i'm happy but what happens under the words github",
    "start": "1136000",
    "end": "1144400"
  },
  {
    "text": "sends our book to the pro oak component containing the details about this just opened pull request",
    "start": "1144400",
    "end": "1150640"
  },
  {
    "text": "the hook component dispatches the payload of the web book to the pro plugin which analyzing the",
    "start": "1150640",
    "end": "1156720"
  },
  {
    "text": "owner's file of falcon understands that no approval has already reviewed and approved for rigas",
    "start": "1156720",
    "end": "1162480"
  },
  {
    "text": "so the approved plugin in the form of our beautiful bot called payana",
    "start": "1162480",
    "end": "1167679"
  },
  {
    "text": "creates a comment on the pull request to notify that the purchase is not yet approved and needs to be at the same",
    "start": "1167679",
    "end": "1174480"
  },
  {
    "text": "time the same payload gets dispatched to other pro plugins like the size plugin that simply labels",
    "start": "1174480",
    "end": "1181440"
  },
  {
    "text": "the pull records depending on the number of line changes in the meantime the dco plugin verifies",
    "start": "1181440",
    "end": "1187679"
  },
  {
    "text": "all the commits of the prerequisites to ensure the outer signal of them because our contributing",
    "start": "1187679",
    "end": "1194400"
  },
  {
    "text": "process requires the developer certificate of origin at this point dual component adds",
    "start": "1194400",
    "end": "1200640"
  },
  {
    "text": "reviewers to the github request and the tab notifies them either via mail or via notifications or buff",
    "start": "1200640",
    "end": "1207200"
  },
  {
    "text": "depending on their github settings soon after leo being a paranoid maintainer",
    "start": "1207200",
    "end": "1213679"
  },
  {
    "text": "comes to look at this new pull request maxi tweet looks good to me common",
    "start": "1213679",
    "end": "1219760"
  },
  {
    "text": "and eventually triggers some press admin job with some other slash comment in this",
    "start": "1219760",
    "end": "1225840"
  },
  {
    "text": "case the trigger plugin enters the scene and contacts the kubernetes api server to ask it to",
    "start": "1225840",
    "end": "1232400"
  },
  {
    "text": "create a projob custom resource kubernetes does all its magic and runs this pro job",
    "start": "1232400",
    "end": "1240159"
  },
  {
    "text": "when these jobs completes depending on its x the github rigors is updated accordingly",
    "start": "1240159",
    "end": "1246960"
  },
  {
    "text": "now a maintainer can finally approve your awesome contribution either by using the slash approve",
    "start": "1246960",
    "end": "1253600"
  },
  {
    "text": "command or by pushing all the green buttons on the tab the proof plugins wake up again verifies",
    "start": "1253600",
    "end": "1261120"
  },
  {
    "text": "that an approver approved leaves a comment in pull request about this and labels it with a proven label",
    "start": "1261120",
    "end": "1268799"
  },
  {
    "text": "in the meantime tda is sitting there creating an old github provisions it notices that your purigas",
    "start": "1268799",
    "end": "1276400"
  },
  {
    "text": "has now all the merge labels required that it got the correct number of approvals from",
    "start": "1276400",
    "end": "1281760"
  },
  {
    "text": "the maintainers and so puts it into the merge queue finally a minute or two later your prerequisites",
    "start": "1281760",
    "end": "1288880"
  },
  {
    "text": "will be merged in the default branch of falco and you will officially become a falco country",
    "start": "1288880",
    "end": "1295600"
  },
  {
    "text": "builder congratulations i know i know now you want your own pro",
    "start": "1295600",
    "end": "1301840"
  },
  {
    "text": "tool right so let's see the minimal steps needed to have one",
    "start": "1301840",
    "end": "1307440"
  },
  {
    "text": "pro runs in any kubernetes cluster with no more minimal changes so first thing first create a kubernetes",
    "start": "1307440",
    "end": "1313520"
  },
  {
    "text": "cluster i will not show you how to do it sorry then you need to do three things",
    "start": "1313520",
    "end": "1321919"
  },
  {
    "text": "first of all create a github account for pro to use it will be your fantastic bot acting on",
    "start": "1321919",
    "end": "1328480"
  },
  {
    "text": "the alpha pro like our piano we call it that way because it's the italian name for a kind of little",
    "start": "1328480",
    "end": "1334960"
  },
  {
    "text": "falcons by the way pro will ignore most github events generated by this account",
    "start": "1334960",
    "end": "1340960"
  },
  {
    "text": "so it's important this account is different from any other you wish to interact with pro",
    "start": "1340960",
    "end": "1346480"
  },
  {
    "text": "also ensure this bot account is a no remember of the organizations you plan on handling and that it has",
    "start": "1346480",
    "end": "1354000"
  },
  {
    "text": "right access to the specific repositories it will operate on once created this new",
    "start": "1354000",
    "end": "1359440"
  },
  {
    "text": "github account create a personal access token with public rebound and repo status scopes",
    "start": "1359440",
    "end": "1365600"
  },
  {
    "text": "in case you plan on making it under like the tab organizations also add the admin art or scope",
    "start": "1365600",
    "end": "1374400"
  },
  {
    "text": "for private repositories it needs the wall ripper scope at this point it's time to deploy pro",
    "start": "1374400",
    "end": "1382000"
  },
  {
    "text": "it has a utility called tackle that guides you through the deployment of pro components in a couple of minutes",
    "start": "1382000",
    "end": "1388960"
  },
  {
    "text": "otherwise you have to put on your high yaml engineer hut and manually write the deployments the",
    "start": "1388960",
    "end": "1394880"
  },
  {
    "text": "cluster rule bindings and everything else by hand this is how i did it and we are gonna see it in the next",
    "start": "1394880",
    "end": "1401120"
  },
  {
    "text": "slide and do not forget to create the secrets from the github tokens generate an edgemark token for",
    "start": "1401120",
    "end": "1407120"
  },
  {
    "text": "validating the guitar box and the or2 token we created before",
    "start": "1407120",
    "end": "1414159"
  },
  {
    "text": "what's left to do now well the usual cube ctl apply the last step is to add the workbook to",
    "start": "1414159",
    "end": "1420480"
  },
  {
    "text": "github you can do this manually but i suggest using the update utility that comes in really handy as",
    "start": "1420480",
    "end": "1427279"
  },
  {
    "text": "shown in the slide you now have a working procaster welcome to the club",
    "start": "1427279",
    "end": "1433600"
  },
  {
    "text": "there are other steps and requirements that can be done like configuring a google cloud storage bucket for",
    "start": "1433600",
    "end": "1439360"
  },
  {
    "text": "persisting logs or exploring the upcoming integration of pro with the ks",
    "start": "1439360",
    "end": "1444720"
  },
  {
    "text": "and s3 but for my sanity i'm gonna skip this and i left you as an exercise",
    "start": "1444720",
    "end": "1451520"
  },
  {
    "text": "anyways in case you want to take inspiration from our pojana you can take a look at pro",
    "start": "1451520",
    "end": "1456720"
  },
  {
    "text": "directory of the farco security slash testing for repository here you can find some little help to",
    "start": "1456720",
    "end": "1462159"
  },
  {
    "text": "deploy your pro for example you can use the deployments rule bindings and rules packs i already did to create",
    "start": "1462159",
    "end": "1468880"
  },
  {
    "text": "boyara in the subdirectory named cluster and save some effort you will find here",
    "start": "1468880",
    "end": "1474000"
  },
  {
    "text": "also the chrome job for the branch protector component we can't talk much about it but it's very useful to enforce policies on your",
    "start": "1474000",
    "end": "1481039"
  },
  {
    "text": "git branches for example i use it to private anyone even me to push to the falco master yeah you",
    "start": "1481039",
    "end": "1488559"
  },
  {
    "text": "could do it manually by clicking the tab buttons i knew but the word point here is to do it in an auditable way for the",
    "start": "1488559",
    "end": "1495840"
  },
  {
    "text": "community so this way anyone know it's in place",
    "start": "1495840",
    "end": "1501360"
  },
  {
    "text": "why it's there when it was activated or might be updated everything is transparent then",
    "start": "1501360",
    "end": "1508799"
  },
  {
    "text": "you can also use the make file i put in place to reproduce boyan",
    "start": "1508799",
    "end": "1513840"
  },
  {
    "text": "if you run make pro it will look for the files token hmac dash token and then splash",
    "start": "1513840",
    "end": "1520400"
  },
  {
    "text": "token from which to create the kubernetes secrets and then automatically apply all the previous yum",
    "start": "1520400",
    "end": "1527679"
  },
  {
    "text": "files we mentioned remember to create those tokens files especially the splash one it is required",
    "start": "1527679",
    "end": "1534720"
  },
  {
    "text": "by the goose plugin to anch everywhere jokes aside after make pro you can now",
    "start": "1534720",
    "end": "1542320"
  },
  {
    "text": "run make configs command and then make plugins one they will create config maps from the config xml and from the",
    "start": "1542320",
    "end": "1550000"
  },
  {
    "text": "pluginsymbol file we say that pro plugins are just sub components of the hook binary that",
    "start": "1550000",
    "end": "1556480"
  },
  {
    "text": "register event handlers for various type of github events right",
    "start": "1556480",
    "end": "1562639"
  },
  {
    "text": "these event handlers are provided with clients and agents that give them access to the configurations the pro jobs",
    "start": "1563679",
    "end": "1570240"
  },
  {
    "text": "github owner's file secrets and more anything that receives github web books",
    "start": "1570240",
    "end": "1577440"
  },
  {
    "text": "can be configured to be forwarded them and acts as an external plugin and this makes pro even more powerful",
    "start": "1577440",
    "end": "1584559"
  },
  {
    "text": "allowing in cluster or even out of the cluster plugins and integrations with other bots or",
    "start": "1584559",
    "end": "1590640"
  },
  {
    "text": "infrastructures well let's make a plan together to create a simple custom plugin",
    "start": "1590640",
    "end": "1596960"
  },
  {
    "text": "for pojana we need to do the following things write a little ghost server that handles",
    "start": "1596960",
    "end": "1602880"
  },
  {
    "text": "incoming web book referring to issue and pull request comments we can use the same go packages pro uses",
    "start": "1602880",
    "end": "1609440"
  },
  {
    "text": "for its own internal plugins so the task is not that difficult as you'll see in a second because those",
    "start": "1609440",
    "end": "1616000"
  },
  {
    "text": "packages make our life easier by providing us a lot of helpers for obtaining the configs the secrets",
    "start": "1616000",
    "end": "1621919"
  },
  {
    "text": "and an already configured github client and so on then we have to create a docker image",
    "start": "1621919",
    "end": "1628480"
  },
  {
    "text": "exposing this little server and create a kubernetes service and deployment using it",
    "start": "1628480",
    "end": "1633600"
  },
  {
    "text": "at this point what's left the usual complexity i'll apply but remember we also need to add the",
    "start": "1633600",
    "end": "1639360"
  },
  {
    "text": "external plugin in the plugins config map of our pro cluster now by creating a",
    "start": "1639360",
    "end": "1645120"
  },
  {
    "text": "pull request towards our testing repository once it will be approved and merged the config updated plugin will",
    "start": "1645120",
    "end": "1651520"
  },
  {
    "text": "take care of automatically update the config maps i wanted to make boyana aware of who it",
    "start": "1651520",
    "end": "1658799"
  },
  {
    "text": "is for this reason i created a plugin that gives it the ability to reply when slash",
    "start": "1658799",
    "end": "1664240"
  },
  {
    "text": "parana command is used it's called say my name pro plugin it's under my github i put",
    "start": "1664240",
    "end": "1670640"
  },
  {
    "text": "the link to it here in the slide so you can inspect it later but we're gonna see a bit of its code right",
    "start": "1670640",
    "end": "1677120"
  },
  {
    "text": "now it's very simple here we are let's briefly look at the",
    "start": "1677120",
    "end": "1682559"
  },
  {
    "text": "main method of the seminar custom external pro plugin as you can",
    "start": "1682559",
    "end": "1690240"
  },
  {
    "text": "see it's pretty simple we instantiate of the plugin",
    "start": "1690240",
    "end": "1695279"
  },
  {
    "text": "by using the helpers that pro provides as i mentioned before",
    "start": "1695279",
    "end": "1701440"
  },
  {
    "text": "we validate those options then we use utilities to grab the secrets",
    "start": "1701520",
    "end": "1709600"
  },
  {
    "text": "and with those we instantiate a github client",
    "start": "1709600",
    "end": "1714960"
  },
  {
    "text": "once done we can pass down this github client",
    "start": "1715200",
    "end": "1720240"
  },
  {
    "text": "to the server also proper size",
    "start": "1720240",
    "end": "1726880"
  },
  {
    "text": "also pro provides us an interrupt library which is used for handling the",
    "start": "1726880",
    "end": "1733679"
  },
  {
    "text": "interrupts of the server and a method to serve",
    "start": "1733679",
    "end": "1738880"
  },
  {
    "text": "the help of the plugin here i created the service gtp method to make",
    "start": "1738880",
    "end": "1746000"
  },
  {
    "text": "our server struct instance to implement angular interface that",
    "start": "1746000",
    "end": "1752559"
  },
  {
    "text": "the http mock server requires as you can see all i do is validating",
    "start": "1752559",
    "end": "1758559"
  },
  {
    "text": "the workbook through the facility that pro provides us the",
    "start": "1758559",
    "end": "1763919"
  },
  {
    "text": "validate web book method and then i pass down the web book payload to the handler",
    "start": "1763919",
    "end": "1773600"
  },
  {
    "text": "as you can see such handler just ignores every even type different than",
    "start": "1774320",
    "end": "1781600"
  },
  {
    "text": "issue comment when the event is an issue comment it basically unmarshals the payload",
    "start": "1781600",
    "end": "1788960"
  },
  {
    "text": "and spawns a go routine to handle such comment",
    "start": "1788960",
    "end": "1796000"
  },
  {
    "text": "this guru thing calls the endo issue comment method which basically first checks the issue",
    "start": "1796000",
    "end": "1802720"
  },
  {
    "text": "is not closed and the the comment was just created",
    "start": "1802720",
    "end": "1809120"
  },
  {
    "text": "at that point basically he logs some information and it matches the string by checking",
    "start": "1809120",
    "end": "1815440"
  },
  {
    "text": "that the content of the comment contains the slash payana",
    "start": "1815440",
    "end": "1821200"
  },
  {
    "text": "command if that's the case it randomly chooses a an answer from an array from a slice",
    "start": "1821200",
    "end": "1830000"
  },
  {
    "text": "and then use an alpha to format the response commenting on the same guitar",
    "start": "1830000",
    "end": "1838559"
  },
  {
    "text": "as you can see anyway in this repository i also provided the docker file a make file build it and",
    "start": "1838559",
    "end": "1846000"
  },
  {
    "text": "push and an example deploy ammo that you can use to deploy this custom example external",
    "start": "1846000",
    "end": "1853760"
  },
  {
    "text": "plug-in for pro on your own instances",
    "start": "1853760",
    "end": "1858480"
  },
  {
    "text": "and here we are this was the result i can't tell how happy i was when i started spamming all the issues and",
    "start": "1858960",
    "end": "1865600"
  },
  {
    "text": "prerequisites with this newsletter comment i was in a rush so it was in night time",
    "start": "1865600",
    "end": "1871519"
  },
  {
    "text": "in italy and my colleagues started writing me why",
    "start": "1871519",
    "end": "1876720"
  },
  {
    "text": "what are you doing well it's not me it's boyana it's here to stop the drama in case you",
    "start": "1876720",
    "end": "1884399"
  },
  {
    "text": "do want to have some fun too here there are some ideas in the proof topic that came to my mind well",
    "start": "1884399",
    "end": "1890480"
  },
  {
    "text": "first thing we need to do is enable the github api proxy to optimize pro against the github api",
    "start": "1890480",
    "end": "1896000"
  },
  {
    "text": "limits we could also think of spawning pro jobs both on kubernetes but also on external",
    "start": "1896000",
    "end": "1901840"
  },
  {
    "text": "executors to verify the falco drivers installed correctly on different operating systems different kernels",
    "start": "1901840",
    "end": "1908720"
  },
  {
    "text": "either when containerized and when not or you can use what you already said about creating",
    "start": "1908720",
    "end": "1914399"
  },
  {
    "text": "external plugins and you can help us creating custom plugins",
    "start": "1914399",
    "end": "1919679"
  },
  {
    "text": "for linking the c plus plus and this make files of falco against a set of conventions or even",
    "start": "1919679",
    "end": "1926480"
  },
  {
    "text": "better we can create together a custom plugin that automatically prepares",
    "start": "1926480",
    "end": "1931840"
  },
  {
    "text": "a pull request to release falco version and updates the changelog using the release notes in the prerequisites",
    "start": "1931840",
    "end": "1938240"
  },
  {
    "text": "when it detects the corresponding milestone has been completed there's a lot more so",
    "start": "1938240",
    "end": "1944159"
  },
  {
    "text": "it's just your call join our wednesday community call so we can assist some tasks to you please",
    "start": "1944159",
    "end": "1951039"
  },
  {
    "text": "also this story has come to an end thanks so much for coming feel free to drop any questions you have",
    "start": "1951039",
    "end": "1957519"
  },
  {
    "text": "now or to contact me later also we welcome a lot new contributors",
    "start": "1957519",
    "end": "1962960"
  },
  {
    "text": "have you seen the previous slide there's always a lot of work to do now we have piano in place for moon then",
    "start": "1962960",
    "end": "1969679"
  },
  {
    "text": "a year everything is placed for a healthy transparent thing a clear path to participating in open",
    "start": "1969679",
    "end": "1976559"
  },
  {
    "text": "source so it's very simple to contribute to one of the falco projects even to point itself as say anyway my",
    "start": "1976559",
    "end": "1983600"
  },
  {
    "text": "direct messages are hope and you can find me with luditricleme on twitter on github on the kubernetes log feel",
    "start": "1983600",
    "end": "1990399"
  },
  {
    "text": "free to get in touch with me for everything about open source falco and bpf and so on",
    "start": "1990399",
    "end": "1996760"
  },
  {
    "text": "ciao",
    "start": "1996760",
    "end": "1999760"
  }
]