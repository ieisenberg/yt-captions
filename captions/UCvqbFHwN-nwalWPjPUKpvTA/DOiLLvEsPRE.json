[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Applause]",
    "start": "910",
    "end": "4569"
  },
  {
    "text": "hi",
    "start": "9360",
    "end": "9920"
  },
  {
    "text": "i'm cedric linven director of developer",
    "start": "9920",
    "end": "12400"
  },
  {
    "text": "advocacy at tedx",
    "start": "12400",
    "end": "14400"
  },
  {
    "text": "and today i want to show you how to",
    "start": "14400",
    "end": "16560"
  },
  {
    "text": "deploy apache cassandra",
    "start": "16560",
    "end": "18560"
  },
  {
    "text": "in kubernetes using the cass operator",
    "start": "18560",
    "end": "22080"
  },
  {
    "text": "let's get started the first things to",
    "start": "22080",
    "end": "25279"
  },
  {
    "start": "24000",
    "end": "60000"
  },
  {
    "text": "ask",
    "start": "25279",
    "end": "25680"
  },
  {
    "text": "is what is cassandra well apache",
    "start": "25680",
    "end": "27920"
  },
  {
    "text": "cassandra is a distributed nosql",
    "start": "27920",
    "end": "30160"
  },
  {
    "text": "database you can install cassandra on a",
    "start": "30160",
    "end": "32880"
  },
  {
    "text": "single node",
    "start": "32880",
    "end": "34079"
  },
  {
    "text": "you would have about one terabyte of",
    "start": "34079",
    "end": "35760"
  },
  {
    "text": "data 3000",
    "start": "35760",
    "end": "37200"
  },
  {
    "text": "transaction and per node but it makes",
    "start": "37200",
    "end": "39600"
  },
  {
    "text": "sense to install cansandra on multiple",
    "start": "39600",
    "end": "41920"
  },
  {
    "text": "nodes",
    "start": "41920",
    "end": "42879"
  },
  {
    "text": "in these architectures there is no",
    "start": "42879",
    "end": "44800"
  },
  {
    "text": "master they all communicate to each",
    "start": "44800",
    "end": "46879"
  },
  {
    "text": "other with a peer-to-peer",
    "start": "46879",
    "end": "49120"
  },
  {
    "text": "protocol called go seeping those nodes",
    "start": "49120",
    "end": "51760"
  },
  {
    "text": "can be grouped",
    "start": "51760",
    "end": "52879"
  },
  {
    "text": "as rings or data centers",
    "start": "52879",
    "end": "56000"
  },
  {
    "text": "with that let's see the use case you",
    "start": "56000",
    "end": "57600"
  },
  {
    "text": "have with this database",
    "start": "57600",
    "end": "59039"
  },
  {
    "text": "well first the more capacity you need",
    "start": "59039",
    "end": "63120"
  },
  {
    "start": "60000",
    "end": "160000"
  },
  {
    "text": "the more node you add if you also need",
    "start": "63120",
    "end": "65280"
  },
  {
    "text": "more throughput simply add new nodes",
    "start": "65280",
    "end": "68080"
  },
  {
    "text": "so with that cassandra fit all the ev",
    "start": "68080",
    "end": "70960"
  },
  {
    "text": "rights",
    "start": "70960",
    "end": "71520"
  },
  {
    "text": "ev read use case could be time series",
    "start": "71520",
    "end": "74720"
  },
  {
    "text": "event streaming log analytics internet",
    "start": "74720",
    "end": "77119"
  },
  {
    "text": "of things",
    "start": "77119",
    "end": "78159"
  },
  {
    "text": "second range of use case for cassandra",
    "start": "78159",
    "end": "80560"
  },
  {
    "text": "is to leverage on the availability",
    "start": "80560",
    "end": "82960"
  },
  {
    "text": "the data there in the cluster is",
    "start": "82960",
    "end": "85680"
  },
  {
    "text": "replicated",
    "start": "85680",
    "end": "86560"
  },
  {
    "text": "multiple times that means you can lose",
    "start": "86560",
    "end": "89520"
  },
  {
    "text": "any of the node",
    "start": "89520",
    "end": "90479"
  },
  {
    "text": "is not a big deal so with that there is",
    "start": "90479",
    "end": "93600"
  },
  {
    "text": "no data loss and the system is always on",
    "start": "93600",
    "end": "96640"
  },
  {
    "text": "remember peer-to-peer no master and data",
    "start": "96640",
    "end": "99759"
  },
  {
    "text": "is replicated",
    "start": "99759",
    "end": "100720"
  },
  {
    "text": "yes you can totally lose any of the node",
    "start": "100720",
    "end": "103280"
  },
  {
    "text": "it's not a big deal at all",
    "start": "103280",
    "end": "104799"
  },
  {
    "text": "so with rangers use case caching market",
    "start": "104799",
    "end": "107280"
  },
  {
    "text": "data pricing or inventory",
    "start": "107280",
    "end": "109280"
  },
  {
    "text": "and many many more then cassandra is",
    "start": "109280",
    "end": "112880"
  },
  {
    "text": "distributed you might have seen in the",
    "start": "112880",
    "end": "115040"
  },
  {
    "text": "schema before",
    "start": "115040",
    "end": "116240"
  },
  {
    "text": "and so with that you can install some",
    "start": "116240",
    "end": "118880"
  },
  {
    "text": "nodes",
    "start": "118880",
    "end": "119439"
  },
  {
    "text": "on dedicated countries or nodes on",
    "start": "119439",
    "end": "121840"
  },
  {
    "text": "dedicated regions and comply with gdpr",
    "start": "121840",
    "end": "124960"
  },
  {
    "text": "laws or cope with latency constraints",
    "start": "124960",
    "end": "128239"
  },
  {
    "text": "from your applications",
    "start": "128239",
    "end": "129679"
  },
  {
    "text": "again a lot of range of use case you",
    "start": "129679",
    "end": "131680"
  },
  {
    "text": "might think of",
    "start": "131680",
    "end": "132800"
  },
  {
    "text": "banking retail or global company would",
    "start": "132800",
    "end": "135680"
  },
  {
    "text": "like to benefit on the distributed",
    "start": "135680",
    "end": "138080"
  },
  {
    "text": "capability and last of course cloud",
    "start": "138080",
    "end": "141120"
  },
  {
    "text": "native",
    "start": "141120",
    "end": "142160"
  },
  {
    "text": "this is community hardware you can lose",
    "start": "142160",
    "end": "144720"
  },
  {
    "text": "any of the node",
    "start": "144720",
    "end": "145920"
  },
  {
    "text": "having bad network or not good",
    "start": "145920",
    "end": "149520"
  },
  {
    "text": "disk is not that a big deal everything",
    "start": "149520",
    "end": "151440"
  },
  {
    "text": "is done asynchronously",
    "start": "151440",
    "end": "153120"
  },
  {
    "text": "and so you can totally implement api",
    "start": "153120",
    "end": "157040"
  },
  {
    "text": "hybrid cloud multi-cloud on top of",
    "start": "157040",
    "end": "159599"
  },
  {
    "text": "casama",
    "start": "159599",
    "end": "160480"
  },
  {
    "text": "so how well in kasana in a cassandra",
    "start": "160480",
    "end": "164239"
  },
  {
    "text": "cluster you would have one to multiple",
    "start": "164239",
    "end": "166959"
  },
  {
    "text": "rings",
    "start": "166959",
    "end": "167760"
  },
  {
    "text": "those rings could be distributed",
    "start": "167760",
    "end": "169519"
  },
  {
    "text": "geographically",
    "start": "169519",
    "end": "171120"
  },
  {
    "text": "apple uber are famous to have those kind",
    "start": "171120",
    "end": "173599"
  },
  {
    "text": "of distribution",
    "start": "173599",
    "end": "174800"
  },
  {
    "text": "or using hybrid or multi-cloud having",
    "start": "174800",
    "end": "178159"
  },
  {
    "text": "the same data layer available in the",
    "start": "178159",
    "end": "181040"
  },
  {
    "text": "multi-cloud",
    "start": "181040",
    "end": "183120"
  },
  {
    "text": "yeah so how to deploy that let's see we",
    "start": "183120",
    "end": "185920"
  },
  {
    "text": "will probably",
    "start": "185920",
    "end": "186800"
  },
  {
    "text": "leverage on kubernetes right",
    "start": "186800",
    "end": "190319"
  },
  {
    "text": "this is the cassandra cluster the big",
    "start": "190959",
    "end": "193760"
  },
  {
    "text": "blue",
    "start": "193760",
    "end": "194239"
  },
  {
    "text": "is the cluster inside you could find",
    "start": "194239",
    "end": "197519"
  },
  {
    "text": "rings one to multiple rings and within",
    "start": "197519",
    "end": "200480"
  },
  {
    "text": "the rings",
    "start": "200480",
    "end": "201280"
  },
  {
    "text": "multiple nodes now there is also",
    "start": "201280",
    "end": "204560"
  },
  {
    "text": "something called the rack in cassandra",
    "start": "204560",
    "end": "207120"
  },
  {
    "text": "architectures",
    "start": "207120",
    "end": "208159"
  },
  {
    "text": "that tells cassandra how to distribute",
    "start": "208159",
    "end": "211599"
  },
  {
    "text": "the data among the nodes because if you",
    "start": "211599",
    "end": "214720"
  },
  {
    "text": "know that",
    "start": "214720",
    "end": "215280"
  },
  {
    "text": "two nodes are on the same rack or the",
    "start": "215280",
    "end": "217840"
  },
  {
    "text": "same geographical region",
    "start": "217840",
    "end": "220159"
  },
  {
    "text": "you may want to do the distribution of",
    "start": "220159",
    "end": "222879"
  },
  {
    "text": "the data",
    "start": "222879",
    "end": "223680"
  },
  {
    "text": "to lose as many data as possible if you",
    "start": "223680",
    "end": "226560"
  },
  {
    "text": "lose",
    "start": "226560",
    "end": "226959"
  },
  {
    "text": "this rack so now let's see how we put",
    "start": "226959",
    "end": "230720"
  },
  {
    "text": "these into kubernetes cassandra has been",
    "start": "230720",
    "end": "234879"
  },
  {
    "start": "233000",
    "end": "310000"
  },
  {
    "text": "available for ages in docker",
    "start": "234879",
    "end": "237200"
  },
  {
    "text": "but this is a stateful container and as",
    "start": "237200",
    "end": "240000"
  },
  {
    "text": "such you need to provide",
    "start": "240000",
    "end": "241599"
  },
  {
    "text": "some volume to under the storage to",
    "start": "241599",
    "end": "244159"
  },
  {
    "text": "export sport",
    "start": "244159",
    "end": "245599"
  },
  {
    "text": "get some environment variables quite a",
    "start": "245599",
    "end": "248159"
  },
  {
    "text": "lot of",
    "start": "248159",
    "end": "248640"
  },
  {
    "text": "parameters to add right so first docker",
    "start": "248640",
    "end": "251120"
  },
  {
    "text": "compose can come to the rescue",
    "start": "251120",
    "end": "253040"
  },
  {
    "text": "but even then in a cassandra ring there",
    "start": "253040",
    "end": "255439"
  },
  {
    "text": "are some nodes",
    "start": "255439",
    "end": "256720"
  },
  {
    "text": "tagged as scenes identified by ip",
    "start": "256720",
    "end": "260000"
  },
  {
    "text": "and each time a node wants to join the",
    "start": "260000",
    "end": "263360"
  },
  {
    "text": "cluster you need to be aware of those",
    "start": "263360",
    "end": "265520"
  },
  {
    "text": "nodes",
    "start": "265520",
    "end": "266320"
  },
  {
    "text": "so it's not that easy to make a",
    "start": "266320",
    "end": "269600"
  },
  {
    "text": "cluster scale you can scale nodes you",
    "start": "269600",
    "end": "271600"
  },
  {
    "text": "can scale",
    "start": "271600",
    "end": "272639"
  },
  {
    "text": "seeds it's not behaves the same way so",
    "start": "272639",
    "end": "276240"
  },
  {
    "text": "of course kubernetes come to the rescue",
    "start": "276240",
    "end": "279440"
  },
  {
    "text": "we would need to create a dedicated",
    "start": "279440",
    "end": "281919"
  },
  {
    "text": "custom",
    "start": "281919",
    "end": "282639"
  },
  {
    "text": "resource to properly manage the life",
    "start": "282639",
    "end": "285440"
  },
  {
    "text": "cycle of",
    "start": "285440",
    "end": "286320"
  },
  {
    "text": "a cassandra cluster how to stop stop",
    "start": "286320",
    "end": "289440"
  },
  {
    "text": "nodes",
    "start": "289440",
    "end": "290160"
  },
  {
    "text": "make the cluster scale or even stopping",
    "start": "290160",
    "end": "293680"
  },
  {
    "text": "parts",
    "start": "293680",
    "end": "294560"
  },
  {
    "text": "doing some updates of the configuration",
    "start": "294560",
    "end": "298000"
  },
  {
    "text": "rolling restart everything will be",
    "start": "298000",
    "end": "301039"
  },
  {
    "text": "listened and scheduled and managed by an",
    "start": "301039",
    "end": "303759"
  },
  {
    "text": "operator",
    "start": "303759",
    "end": "304720"
  },
  {
    "text": "so let's see how you install the printer",
    "start": "304720",
    "end": "307039"
  },
  {
    "text": "and how it works in the kubernetes",
    "start": "307039",
    "end": "308960"
  },
  {
    "text": "cluster",
    "start": "308960",
    "end": "311840"
  },
  {
    "start": "310000",
    "end": "580000"
  },
  {
    "text": "okay i am on my laptop and i have",
    "start": "312960",
    "end": "316160"
  },
  {
    "text": "installed kind",
    "start": "316160",
    "end": "317520"
  },
  {
    "text": "just to show you that you can run the",
    "start": "317520",
    "end": "319520"
  },
  {
    "text": "demo even on your laptop",
    "start": "319520",
    "end": "322560"
  },
  {
    "text": "first i've created a kind cluster using",
    "start": "322560",
    "end": "326400"
  },
  {
    "text": "this kind config file i do have a single",
    "start": "326400",
    "end": "329440"
  },
  {
    "text": "control plane",
    "start": "329440",
    "end": "330560"
  },
  {
    "text": "and multiple workers the reason is i",
    "start": "330560",
    "end": "333600"
  },
  {
    "text": "need",
    "start": "333600",
    "end": "333919"
  },
  {
    "text": "one worker per cassandra node right",
    "start": "333919",
    "end": "338720"
  },
  {
    "text": "then i associate kind with coupe ctel to",
    "start": "338720",
    "end": "341280"
  },
  {
    "text": "be able to do",
    "start": "341280",
    "end": "342479"
  },
  {
    "text": "cube get nodes and get both my worker",
    "start": "342479",
    "end": "345840"
  },
  {
    "text": "and control plane then i create",
    "start": "345840",
    "end": "349600"
  },
  {
    "text": "a key space to put everything in a",
    "start": "349600",
    "end": "352560"
  },
  {
    "text": "single place",
    "start": "352560",
    "end": "354320"
  },
  {
    "text": "and then first step in the key space",
    "start": "354320",
    "end": "357600"
  },
  {
    "text": "i create a storage class so now",
    "start": "357600",
    "end": "361360"
  },
  {
    "text": "you might tell yeah there is a default",
    "start": "361360",
    "end": "363600"
  },
  {
    "text": "storage class",
    "start": "363600",
    "end": "364560"
  },
  {
    "text": "but the volume you want to mount for",
    "start": "364560",
    "end": "366960"
  },
  {
    "text": "each cassandra node",
    "start": "366960",
    "end": "368479"
  },
  {
    "text": "will be specific on your needs you want",
    "start": "368479",
    "end": "371199"
  },
  {
    "text": "to use",
    "start": "371199",
    "end": "371840"
  },
  {
    "text": "local storage and have the disk as fast",
    "start": "371840",
    "end": "374960"
  },
  {
    "text": "as possible probably",
    "start": "374960",
    "end": "376560"
  },
  {
    "text": "if you are running on gke maybe you have",
    "start": "376560",
    "end": "378960"
  },
  {
    "text": "some dedicated faster storage",
    "start": "378960",
    "end": "381360"
  },
  {
    "text": "so anyway the storage class is really",
    "start": "381360",
    "end": "384560"
  },
  {
    "text": "custom for your environment",
    "start": "384560",
    "end": "387840"
  },
  {
    "text": "important part is wait for first",
    "start": "387840",
    "end": "389759"
  },
  {
    "text": "customer to be able to",
    "start": "389759",
    "end": "392160"
  },
  {
    "text": "start and use the storage class okay",
    "start": "392160",
    "end": "396400"
  },
  {
    "text": "i've created simply this courage class",
    "start": "396400",
    "end": "398960"
  },
  {
    "text": "then",
    "start": "398960",
    "end": "399600"
  },
  {
    "text": "i have imported the operator",
    "start": "399600",
    "end": "402800"
  },
  {
    "text": "so this time the yaml is there i",
    "start": "402800",
    "end": "406960"
  },
  {
    "text": "we create the namespace it was there",
    "start": "406960",
    "end": "408720"
  },
  {
    "text": "already create some services",
    "start": "408720",
    "end": "410960"
  },
  {
    "text": "the cast operator define the custom",
    "start": "410960",
    "end": "414400"
  },
  {
    "text": "resource definition all right",
    "start": "414400",
    "end": "417759"
  },
  {
    "text": "and a couple of accounts and",
    "start": "417759",
    "end": "422080"
  },
  {
    "text": "secrets are needed to have the",
    "start": "422080",
    "end": "425759"
  },
  {
    "text": "environment ready if i go there and",
    "start": "425759",
    "end": "428720"
  },
  {
    "text": "simply do",
    "start": "428720",
    "end": "429680"
  },
  {
    "text": "koopa ctl get pods you can see that i do",
    "start": "429680",
    "end": "432880"
  },
  {
    "text": "have the cast operator",
    "start": "432880",
    "end": "434800"
  },
  {
    "text": "running but except from that my coop",
    "start": "434800",
    "end": "437840"
  },
  {
    "text": "cluster",
    "start": "437840",
    "end": "438479"
  },
  {
    "text": "is empty if i want to show you what just",
    "start": "438479",
    "end": "440960"
  },
  {
    "text": "happened",
    "start": "440960",
    "end": "441520"
  },
  {
    "text": "using a schema this is what i do guys",
    "start": "441520",
    "end": "444720"
  },
  {
    "text": "i do have my cass operator namespace",
    "start": "444720",
    "end": "448080"
  },
  {
    "text": "i create a couple of uh secrets",
    "start": "448080",
    "end": "451120"
  },
  {
    "text": "services and custom resource definitions",
    "start": "451120",
    "end": "453840"
  },
  {
    "text": "under",
    "start": "453840",
    "end": "454240"
  },
  {
    "text": "security and webhook all to handle",
    "start": "454240",
    "end": "457520"
  },
  {
    "text": "the connection between the operator and",
    "start": "457520",
    "end": "460000"
  },
  {
    "text": "the custom resource we are created",
    "start": "460000",
    "end": "462400"
  },
  {
    "text": "and we also had defined a storage class",
    "start": "462400",
    "end": "466080"
  },
  {
    "text": "which is here the kind uh storage class",
    "start": "466080",
    "end": "469199"
  },
  {
    "text": "for my laptop",
    "start": "469199",
    "end": "470800"
  },
  {
    "text": "all right so now let's create a custom",
    "start": "470800",
    "end": "474080"
  },
  {
    "text": "right cluster",
    "start": "474080",
    "end": "474960"
  },
  {
    "text": "using the operator first",
    "start": "474960",
    "end": "478160"
  },
  {
    "text": "i will define a yaml so",
    "start": "478160",
    "end": "481520"
  },
  {
    "text": "let's create a single node",
    "start": "481520",
    "end": "484560"
  },
  {
    "text": "cluster for cassandra you can see that",
    "start": "484560",
    "end": "486800"
  },
  {
    "text": "i'm using the cassandra data center",
    "start": "486800",
    "end": "489199"
  },
  {
    "text": "custom resource",
    "start": "489199",
    "end": "490639"
  },
  {
    "text": "here you define the data center name and",
    "start": "490639",
    "end": "493360"
  },
  {
    "text": "this is",
    "start": "493360",
    "end": "493919"
  },
  {
    "text": "how we could define multiple data center",
    "start": "493919",
    "end": "497680"
  },
  {
    "text": "in a single ring or in a single cluster",
    "start": "497680",
    "end": "500879"
  },
  {
    "text": "or maybe even having multiple cluster",
    "start": "500879",
    "end": "504240"
  },
  {
    "text": "with multiple rings each time you will",
    "start": "504240",
    "end": "506960"
  },
  {
    "text": "set that",
    "start": "506960",
    "end": "507680"
  },
  {
    "text": "cluster name and metadata name here",
    "start": "507680",
    "end": "511520"
  },
  {
    "text": "so we are using cassandra as you can see",
    "start": "511520",
    "end": "513760"
  },
  {
    "text": "it's an open source",
    "start": "513760",
    "end": "515279"
  },
  {
    "text": "so the operator is not only for datastax",
    "start": "515279",
    "end": "517839"
  },
  {
    "text": "enterprise it's just",
    "start": "517839",
    "end": "519120"
  },
  {
    "text": "open and it's work with customer",
    "start": "519120",
    "end": "521599"
  },
  {
    "text": "versions",
    "start": "521599",
    "end": "523039"
  },
  {
    "text": "you define how many nodes do you like",
    "start": "523039",
    "end": "526080"
  },
  {
    "text": "you do the mapping with the storage",
    "start": "526080",
    "end": "528640"
  },
  {
    "text": "class",
    "start": "528640",
    "end": "529839"
  },
  {
    "text": "and once the node will be set up",
    "start": "529839",
    "end": "533120"
  },
  {
    "text": "we want to override the default",
    "start": "533120",
    "end": "535040"
  },
  {
    "text": "configuration providing",
    "start": "535040",
    "end": "536720"
  },
  {
    "text": "cassandra dml keys and also gvm",
    "start": "536720",
    "end": "540000"
  },
  {
    "text": "option keys so what i do now is go in",
    "start": "540000",
    "end": "543120"
  },
  {
    "text": "here",
    "start": "543120",
    "end": "543839"
  },
  {
    "text": "and i will copy",
    "start": "543839",
    "end": "548000"
  },
  {
    "text": "and apply those configuration",
    "start": "548000",
    "end": "551760"
  },
  {
    "text": "to be able to watch what's happening i",
    "start": "551760",
    "end": "554320"
  },
  {
    "text": "will",
    "start": "554320",
    "end": "555440"
  },
  {
    "text": "watch the code and see that",
    "start": "555440",
    "end": "558800"
  },
  {
    "text": "i will have my sts created",
    "start": "558800",
    "end": "562959"
  },
  {
    "text": "so kubernetes will",
    "start": "562959",
    "end": "566080"
  },
  {
    "text": "create uh the cooperator will create sts",
    "start": "566080",
    "end": "569839"
  },
  {
    "text": "for each cassandra rack",
    "start": "569839",
    "end": "573519"
  },
  {
    "text": "so let's see how it goes",
    "start": "573519",
    "end": "577839"
  },
  {
    "start": "580000",
    "end": "870000"
  },
  {
    "text": "all right after a few minutes time to",
    "start": "580880",
    "end": "583760"
  },
  {
    "text": "download all the images",
    "start": "583760",
    "end": "585600"
  },
  {
    "text": "now we do have the sds",
    "start": "585600",
    "end": "589120"
  },
  {
    "text": "ready and if i want to describe the",
    "start": "589120",
    "end": "592480"
  },
  {
    "text": "cassandra data center or cast dc",
    "start": "592480",
    "end": "596080"
  },
  {
    "text": "custom resource named dc1 this is what i",
    "start": "596080",
    "end": "599519"
  },
  {
    "text": "get",
    "start": "599519",
    "end": "600240"
  },
  {
    "text": "so i do have all the information coming",
    "start": "600240",
    "end": "603360"
  },
  {
    "text": "from my yaml of course and here you can",
    "start": "603360",
    "end": "606240"
  },
  {
    "text": "see",
    "start": "606240",
    "end": "606560"
  },
  {
    "text": "all the event that made possible that",
    "start": "606560",
    "end": "609040"
  },
  {
    "text": "cluster creation",
    "start": "609040",
    "end": "610480"
  },
  {
    "text": "so creating service seed",
    "start": "610480",
    "end": "614160"
  },
  {
    "text": "all the services creating the rack",
    "start": "614160",
    "end": "616399"
  },
  {
    "text": "putting the node in the rack",
    "start": "616399",
    "end": "618240"
  },
  {
    "text": "and created all the users needed to",
    "start": "618240",
    "end": "621120"
  },
  {
    "text": "manage",
    "start": "621120",
    "end": "621680"
  },
  {
    "text": "this rack if i want to show you what it",
    "start": "621680",
    "end": "624640"
  },
  {
    "text": "looks like",
    "start": "624640",
    "end": "625440"
  },
  {
    "text": "so by creating this custom resource",
    "start": "625440",
    "end": "628959"
  },
  {
    "text": "this is everything that we've just",
    "start": "628959",
    "end": "631360"
  },
  {
    "text": "created",
    "start": "631360",
    "end": "632079"
  },
  {
    "text": "so we created the custom resource dc one",
    "start": "632079",
    "end": "634720"
  },
  {
    "text": "it",
    "start": "634720",
    "end": "635120"
  },
  {
    "text": "we do have a super user secret",
    "start": "635120",
    "end": "638160"
  },
  {
    "text": "uh sts for each rack no rack has been",
    "start": "638160",
    "end": "641200"
  },
  {
    "text": "provided in the yaml file so it will",
    "start": "641200",
    "end": "643120"
  },
  {
    "text": "create one by default",
    "start": "643120",
    "end": "645040"
  },
  {
    "text": "then i will create a dedicated",
    "start": "645040",
    "end": "648160"
  },
  {
    "text": "pod for each cassandra node",
    "start": "648160",
    "end": "651920"
  },
  {
    "text": "this is the name of the board and for",
    "start": "651920",
    "end": "654079"
  },
  {
    "text": "each node",
    "start": "654079",
    "end": "654959"
  },
  {
    "text": "we will attach some persistent volume",
    "start": "654959",
    "end": "658079"
  },
  {
    "text": "and it's all done by the sts now we also",
    "start": "658079",
    "end": "661279"
  },
  {
    "text": "have some dedicated",
    "start": "661279",
    "end": "662560"
  },
  {
    "text": "services to run all pods only the seeds",
    "start": "662560",
    "end": "665920"
  },
  {
    "text": "or service and with that you can totally",
    "start": "665920",
    "end": "669040"
  },
  {
    "text": "scale up your cluster in transparent",
    "start": "669040",
    "end": "671040"
  },
  {
    "text": "manner and",
    "start": "671040",
    "end": "672160"
  },
  {
    "text": "all will be updated as you expect so",
    "start": "672160",
    "end": "674320"
  },
  {
    "text": "speaking of that",
    "start": "674320",
    "end": "675920"
  },
  {
    "text": "i do have here a second yaml this time",
    "start": "675920",
    "end": "679120"
  },
  {
    "text": "called three node with new config so",
    "start": "679120",
    "end": "681440"
  },
  {
    "text": "what i do",
    "start": "681440",
    "end": "682240"
  },
  {
    "text": "is changing the scale the size to",
    "start": "682240",
    "end": "685360"
  },
  {
    "text": "three and also adding new value in the",
    "start": "685360",
    "end": "689040"
  },
  {
    "text": "configuration",
    "start": "689040",
    "end": "690079"
  },
  {
    "text": "and what i do expect from the customer",
    "start": "690079",
    "end": "692480"
  },
  {
    "text": "operator",
    "start": "692480",
    "end": "693200"
  },
  {
    "text": "is to make my cluster scale up and do",
    "start": "693200",
    "end": "696640"
  },
  {
    "text": "the rolling restart if needed to update",
    "start": "696640",
    "end": "699920"
  },
  {
    "text": "my settings so to do so i will",
    "start": "699920",
    "end": "703200"
  },
  {
    "text": "copy my command here so see simply",
    "start": "703200",
    "end": "706480"
  },
  {
    "text": "applying this new yaml",
    "start": "706480",
    "end": "710000"
  },
  {
    "text": "and again i will watch my",
    "start": "710000",
    "end": "714560"
  },
  {
    "text": "but to see what's happened and as you",
    "start": "715279",
    "end": "717600"
  },
  {
    "text": "can see",
    "start": "717600",
    "end": "718639"
  },
  {
    "text": "it's immediately start the new pods in",
    "start": "718639",
    "end": "722240"
  },
  {
    "text": "the same",
    "start": "722240",
    "end": "722880"
  },
  {
    "text": "sts and now i will start",
    "start": "722880",
    "end": "726079"
  },
  {
    "text": "cassandra make it available first init",
    "start": "726079",
    "end": "729839"
  },
  {
    "text": "and",
    "start": "729839",
    "end": "730160"
  },
  {
    "text": "only when the first will be available we",
    "start": "730160",
    "end": "733360"
  },
  {
    "text": "will",
    "start": "733360",
    "end": "733760"
  },
  {
    "text": "start the second one and this is all the",
    "start": "733760",
    "end": "736959"
  },
  {
    "text": "purpose of the operator doing the step",
    "start": "736959",
    "end": "740079"
  },
  {
    "text": "in the proper order again let's see in a",
    "start": "740079",
    "end": "743040"
  },
  {
    "text": "couple of minutes",
    "start": "743040",
    "end": "745839"
  },
  {
    "text": "during the time that image are pulled",
    "start": "747120",
    "end": "750240"
  },
  {
    "text": "back off",
    "start": "750240",
    "end": "751680"
  },
  {
    "text": "we can try to show what happened at the",
    "start": "751680",
    "end": "754720"
  },
  {
    "text": "cassandra data center level so you might",
    "start": "754720",
    "end": "757680"
  },
  {
    "text": "see",
    "start": "757680",
    "end": "758079"
  },
  {
    "text": "that because now we ask",
    "start": "758079",
    "end": "761920"
  },
  {
    "text": "to scale and have the size to three",
    "start": "761920",
    "end": "765040"
  },
  {
    "text": "the state of the custom resource",
    "start": "765040",
    "end": "766800"
  },
  {
    "text": "definition is not what it should",
    "start": "766800",
    "end": "769200"
  },
  {
    "text": "and so as a consequence the operator",
    "start": "769200",
    "end": "771519"
  },
  {
    "text": "will",
    "start": "771519",
    "end": "772240"
  },
  {
    "text": "make the cluster scale to match the new",
    "start": "772240",
    "end": "775040"
  },
  {
    "text": "state",
    "start": "775040",
    "end": "776000"
  },
  {
    "text": "and so we will move from this state",
    "start": "776000",
    "end": "779120"
  },
  {
    "text": "with a single pod for the sts",
    "start": "779120",
    "end": "783360"
  },
  {
    "text": "to three pod and this is exactly what's",
    "start": "783360",
    "end": "786320"
  },
  {
    "text": "happening",
    "start": "786320",
    "end": "787279"
  },
  {
    "text": "zero one two where all the pod will beat",
    "start": "787279",
    "end": "790399"
  },
  {
    "text": "startup",
    "start": "790399",
    "end": "791360"
  },
  {
    "text": "but when does the operator know",
    "start": "791360",
    "end": "795279"
  },
  {
    "text": "when to start another one because",
    "start": "795279",
    "end": "798240"
  },
  {
    "text": "cassandra alone",
    "start": "798240",
    "end": "799519"
  },
  {
    "text": "is not kubernetes ready at the tax stack",
    "start": "799519",
    "end": "803200"
  },
  {
    "text": "we had to create it and",
    "start": "803200",
    "end": "804800"
  },
  {
    "text": "update and do some open source for a",
    "start": "804800",
    "end": "807839"
  },
  {
    "text": "cassandra management api service",
    "start": "807839",
    "end": "810720"
  },
  {
    "text": "this is a sidecar running in the pod",
    "start": "810720",
    "end": "813519"
  },
  {
    "text": "just to",
    "start": "813519",
    "end": "814079"
  },
  {
    "text": "expose a rest api for kubernetes",
    "start": "814079",
    "end": "817360"
  },
  {
    "text": "to know you know the liveness and the",
    "start": "817360",
    "end": "819760"
  },
  {
    "text": "readiness",
    "start": "819760",
    "end": "820800"
  },
  {
    "text": "of each pod and if that you see how it",
    "start": "820800",
    "end": "824320"
  },
  {
    "text": "works you",
    "start": "824320",
    "end": "824959"
  },
  {
    "text": "expo you deploy new yaml",
    "start": "824959",
    "end": "828000"
  },
  {
    "text": "operator will match the state of what in",
    "start": "828000",
    "end": "830720"
  },
  {
    "text": "the ml and what it should be",
    "start": "830720",
    "end": "832480"
  },
  {
    "text": "and will execute the command to make the",
    "start": "832480",
    "end": "835680"
  },
  {
    "text": "cassandra cluster fit the reality",
    "start": "835680",
    "end": "839199"
  },
  {
    "text": "and with that i'm done with the demo but",
    "start": "839199",
    "end": "842320"
  },
  {
    "text": "you can do the same by using this query",
    "start": "842320",
    "end": "844720"
  },
  {
    "text": "code and i",
    "start": "844720",
    "end": "845680"
  },
  {
    "text": "expect you to see all of you at the",
    "start": "845680",
    "end": "848720"
  },
  {
    "text": "workshop all together where we can play",
    "start": "848720",
    "end": "850880"
  },
  {
    "text": "even more",
    "start": "850880",
    "end": "851760"
  },
  {
    "text": "including graffana prometheus monitoring",
    "start": "851760",
    "end": "855680"
  },
  {
    "text": "and some operation using cassandra",
    "start": "855680",
    "end": "858639"
  },
  {
    "text": "itself",
    "start": "858639",
    "end": "859440"
  },
  {
    "text": "thank you very much and see you there",
    "start": "859440",
    "end": "871839"
  }
]