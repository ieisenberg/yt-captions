[
  {
    "text": "all right okay so um I think it's time so let's get started um well um thank",
    "start": "320",
    "end": "6000"
  },
  {
    "text": "you all for being here you know I'm really glad to see so many people are interested in this topic and uh um you",
    "start": "6000",
    "end": "12400"
  },
  {
    "text": "know uh Cube accounts have you know earlier deadlines for the uh for the talk so when I submitted the talk I want",
    "start": "12400",
    "end": "17640"
  },
  {
    "text": "to talk about log processing but when I thought about it when I write up the the slides I thought you know it's really",
    "start": "17640",
    "end": "23039"
  },
  {
    "text": "about stream processing not just limited logs about other things so you know uh my name is Michael Yan and I'm the",
    "start": "23039",
    "end": "29160"
  },
  {
    "text": "maintainer of cnf's um web some long time project called wasm Ed so that's a a GitHub link",
    "start": "29160",
    "end": "35920"
  },
  {
    "text": "if you're interested you know um withit us on on GitHub you know there's",
    "start": "35920",
    "end": "41640"
  },
  {
    "text": "essentially all activities happening over there so um as you can see the title you know there's two seemingly",
    "start": "41640",
    "end": "48320"
  },
  {
    "text": "unrelated technology that be mentioned in the same sentence wasm and ebpf you know um if I if I ask people most people",
    "start": "48320",
    "end": "56879"
  },
  {
    "text": "would just know that both um lightwe meral virtual machine formats but how are they related you know that's that's",
    "start": "56879",
    "end": "63719"
  },
  {
    "text": "you know we're going to dive into that and uh we're going to even go further you know we're going to uh towards the end of this talk and we can also talk",
    "start": "63719",
    "end": "70080"
  },
  {
    "text": "about things like U you know um Ai and machine learning which seem to be the the the topic of this conference right",
    "start": "70080",
    "end": "76799"
  },
  {
    "text": "how does that relat to say wasm and ebpf and uh the whole idea of stream",
    "start": "76799",
    "end": "82320"
  },
  {
    "text": "processing right you know so there's a lot of topic we're going to cover um I do have some um some demos but I don't",
    "start": "82320",
    "end": "89400"
  },
  {
    "text": "think we have time to do the live demo here so I going to give you the link and uh um and you can you know go home and",
    "start": "89400",
    "end": "96799"
  },
  {
    "text": "do that from your hotel room you know that's I think it also would be more friendly to the to the conference band",
    "start": "96799",
    "end": "102280"
  },
  {
    "text": "WDS right so you know um from the conversation",
    "start": "102280",
    "end": "108759"
  },
  {
    "text": "that I had U yesterday and the the day before that um it seems like um a lot of",
    "start": "108759",
    "end": "115039"
  },
  {
    "text": "people are not really familiar with say the cloud native wasm idea you know so",
    "start": "115039",
    "end": "120240"
  },
  {
    "text": "web assembly sounds like something you use in the browser you know how's that how's that related with you know um uh",
    "start": "120240",
    "end": "126960"
  },
  {
    "text": "Cloud native Computing and what do you mean what do we mean by you know um wasm on the server side so this um this whole",
    "start": "126960",
    "end": "134879"
  },
  {
    "text": "idea goes all the way so added a couple slides at the beginning of this talk right so this is one of the slides that added",
    "start": "134879",
    "end": "141440"
  },
  {
    "text": "so the idea goes all the way back to the origin of the cloud computing right you know so the cloud is really you know",
    "start": "141440",
    "end": "148000"
  },
  {
    "text": "sharing Resources with other people people you know on the on on the larger computer you know so there's no Cloud",
    "start": "148000",
    "end": "153920"
  },
  {
    "text": "they just running programming other people's computer right so the whole idea of this is that the the enabling",
    "start": "153920",
    "end": "160920"
  },
  {
    "text": "technology really is isolation and virtualization that's why you know the the um you know the clouds grow up with",
    "start": "160920",
    "end": "169040"
  },
  {
    "text": "say AWS you know that's VMware you know this generation of companies that provide virtualization and isolation on",
    "start": "169040",
    "end": "176440"
  },
  {
    "text": "workloads and the the evolution of the um um of the isolation virtualization",
    "start": "176440",
    "end": "182799"
  },
  {
    "text": "goes uh you know um from our point of view goes through three phases the first",
    "start": "182799",
    "end": "188040"
  },
  {
    "text": "is the virtual machine era so where you have you know hypervisor and you know things like that and uh that is where um",
    "start": "188040",
    "end": "196879"
  },
  {
    "text": "the cloud computing first come up right you know you rent uh VPS virtual machines from say um you know isps or",
    "start": "196879",
    "end": "204599"
  },
  {
    "text": "even AWS right you know that's a lot of original cloud provider using this technology and um um after a couple",
    "start": "204599",
    "end": "212959"
  },
  {
    "text": "years um doer come along and the container come along you know that's uh people find you don't need to wrap say",
    "start": "212959",
    "end": "221360"
  },
  {
    "text": "uh operating system and then give people root access to install multiple applications you can containerize each",
    "start": "221360",
    "end": "227599"
  },
  {
    "text": "application in their own container so deploy a lot of those and uh that's I think that's the crust of cloud native",
    "start": "227599",
    "end": "234680"
  },
  {
    "text": "right you know Cloud native is to say there's a lighter weight and more flexible way of running workloads that",
    "start": "234680",
    "end": "241560"
  },
  {
    "text": "in isolation right so that's the container error which um you know is um",
    "start": "241560",
    "end": "247120"
  },
  {
    "text": "I think is the error we're currently in although towards the end of it I think you know so that's uh um to make",
    "start": "247120",
    "end": "253720"
  },
  {
    "text": "application and workload in the container right so what's the next uh generation after container because",
    "start": "253720",
    "end": "259759"
  },
  {
    "text": "container why why tell people a container is a heavyweight solution most people are very surprised you know especially in cubec people say",
    "start": "259759",
    "end": "266160"
  },
  {
    "text": "containers are lightweight Solutions you know you are you know that's a uh because they are comparing that with",
    "start": "266160",
    "end": "271600"
  },
  {
    "text": "virtual machine right but if we compare a container with a new generation of uh virtual machines um you know we we call",
    "start": "271600",
    "end": "278720"
  },
  {
    "text": "application virtual machines though U which happens not at the application Level isolation but as the function",
    "start": "278720",
    "end": "284880"
  },
  {
    "text": "level isolation you know meaning that I no longer just isolate an entire application but I isolate a function in",
    "start": "284880",
    "end": "292320"
  },
  {
    "text": "the application right you know so that's what we call the wasm area because that's where the um the the lightweight",
    "start": "292320",
    "end": "299759"
  },
  {
    "text": "virtual machine that is even lighter than the container ERS magnitude lighter than the container can play a important",
    "start": "299759",
    "end": "306240"
  },
  {
    "text": "role so that's so if people ask what's wasm on the server side wasm on the",
    "start": "306240",
    "end": "311320"
  },
  {
    "text": "server side is even ever smaller granulation ever small U fine green",
    "start": "311320",
    "end": "316960"
  },
  {
    "text": "isolation level for applications you know we go from the whole computer to an application on the computer to a",
    "start": "316960",
    "end": "323680"
  },
  {
    "text": "function in the application right you know so wasm would be able to um um you",
    "start": "323680",
    "end": "328720"
  },
  {
    "text": "know um provide uh security and isolation for those for those very small workloads right so the",
    "start": "328720",
    "end": "335080"
  },
  {
    "text": "whole idea of um you may say you know that's okay that's you are describing",
    "start": "335080",
    "end": "340319"
  },
  {
    "text": "microservices although traditional definition microservices is not that traditional definition microservices is",
    "start": "340319",
    "end": "345600"
  },
  {
    "text": "um you know uh uh uh application service that wrapped in the in the container right however if you look at um how",
    "start": "345600",
    "end": "353120"
  },
  {
    "text": "those um uh today's microservices are being wrong in a in a data center you would find that uh you know a large",
    "start": "353120",
    "end": "360479"
  },
  {
    "text": "percentage of the virt uh the the uh utilization is spent on things that are",
    "start": "360479",
    "end": "369039"
  },
  {
    "text": "at the function level it's things that are Transit you know that's things are very shortlived but um with the um uh",
    "start": "369039",
    "end": "376800"
  },
  {
    "text": "container Paradigm you have to start a container for all those you know if you if you think about how you set up a",
    "start": "376800",
    "end": "382280"
  },
  {
    "text": "kubernetes cluster you know there's everything is a container even the weight action doing nothing and weight",
    "start": "382280",
    "end": "387560"
  },
  {
    "text": "is a container right you know that's a so um for all of those you need to spin up the operating system the virtualized",
    "start": "387560",
    "end": "392639"
  },
  {
    "text": "environment and all that so you know um um to a lot of people this is uh um this",
    "start": "392639",
    "end": "397759"
  },
  {
    "text": "as microservices goes more and more finally green it becomes more and more problems you know so we have worked with",
    "start": "397759",
    "end": "405039"
  },
  {
    "text": "a large internet companies that has 50,000 microservices you know it's not",
    "start": "405039",
    "end": "410400"
  },
  {
    "text": "50,000 machines it's 50,000 different Services each service has a team to",
    "start": "410400",
    "end": "415560"
  },
  {
    "text": "maintain and has its own machine provision right you know so it's the the",
    "start": "415560",
    "end": "420680"
  },
  {
    "text": "you know the the spread of microservices has really put a lot of strength on the uh on the infrastructure right that",
    "start": "420680",
    "end": "427639"
  },
  {
    "text": "leads to uh you know a very interesting um uh exchange I think from last year I",
    "start": "427639",
    "end": "434520"
  },
  {
    "text": "mean hope maybe two years ago you know so when uh Elon mask acquired Twitter you know that's uh um you know he was",
    "start": "434520",
    "end": "441520"
  },
  {
    "text": "looking to very aggressively cut cost and you know so he was thinking a lot thinking out a lot at the time a lot of",
    "start": "441520",
    "end": "447720"
  },
  {
    "text": "people thought he was um you know this was crazy you know that's uh um you know you can't um move from microservices",
    "start": "447720",
    "end": "454800"
  },
  {
    "text": "environment overnight to to something that is not microservice but you know that's uh uh although um you know",
    "start": "454800",
    "end": "463160"
  },
  {
    "text": "Twitter as we know it is still ex still exists right and this hasn't crashed yet you know so you know it's a it's a um",
    "start": "463160",
    "end": "469560"
  },
  {
    "text": "from outside a lot there's a lot of um uh uh you know um people have a lot of",
    "start": "469560",
    "end": "476240"
  },
  {
    "text": "uh resentment in terms of you know how um the microservices Paradigm is being abused right you know that's um to",
    "start": "476240",
    "end": "483199"
  },
  {
    "text": "putting everything um every minute function into a container and then make",
    "start": "483199",
    "end": "488840"
  },
  {
    "text": "it um uh uh as part of the heavyweight infrastructure is um you know is I think",
    "start": "488840",
    "end": "496080"
  },
  {
    "text": "ra people the wrong way right you know so that's why he had this to and to say that he going to turn off 80% of the",
    "start": "496080",
    "end": "503120"
  },
  {
    "text": "micro services and you know the the the website needs to still be functioning right you know that's a it was uh it was",
    "start": "503120",
    "end": "509199"
  },
  {
    "text": "very interesting because at the at the time you know you would see Twitter has um random failes for instance the two",
    "start": "509199",
    "end": "515200"
  },
  {
    "text": "Fact Two uh you know the the the two Factor authentication would fail because there is a microservice that's",
    "start": "515200",
    "end": "520640"
  },
  {
    "text": "responsible for sending out the SMS right you know and he shut that down that you know the two Factor authenication was suddenly not working",
    "start": "520640",
    "end": "526959"
  },
  {
    "text": "right you know so it's uh gradually they fix all those problems but you know that's uh it is one of those um very",
    "start": "526959",
    "end": "533080"
  },
  {
    "text": "high profile I would say um uh you know objections to this whole Paradigm of how",
    "start": "533080",
    "end": "539480"
  },
  {
    "text": "having too many containers and too many uh Services that's that clutter up the",
    "start": "539480",
    "end": "544920"
  },
  {
    "text": "whole infrastructure right so we um so in in the in the in in the",
    "start": "544920",
    "end": "552279"
  },
  {
    "text": "language of the cloud native Computing you know we position wasm as another container long time you know so we we",
    "start": "552279",
    "end": "558959"
  },
  {
    "text": "often call wasm as a container you know that's although it's not really a container it's uh it doesn't give you uh",
    "start": "558959",
    "end": "565040"
  },
  {
    "text": "operating system it has a very confined set of uun functionalities that you have",
    "start": "565040",
    "end": "570519"
  },
  {
    "text": "to write your application to that specification order to take advantage of it right however if you do that if you",
    "start": "570519",
    "end": "576120"
  },
  {
    "text": "use um you know um if you write applications in um to the wasm API and",
    "start": "576120",
    "end": "582120"
  },
  {
    "text": "then compile to wasum the benefit you get is uh first of all it's very lightweight you know it's uh uh as I",
    "start": "582120",
    "end": "589120"
  },
  {
    "text": "demonstrate in a minute it's about two orders of magnitude smaller than the comparable container images you know",
    "start": "589120",
    "end": "595040"
  },
  {
    "text": "that's a so we are going from as I will show in a minute T of megabytes or even",
    "start": "595040",
    "end": "600120"
  },
  {
    "text": "hundreds of megabytes container images to ones that measured in kilobytes okay so a database application can now become",
    "start": "600120",
    "end": "607800"
  },
  {
    "text": "kilobytes in wasm you know that's uh so um when we had those screenshots on",
    "start": "607800",
    "end": "613640"
  },
  {
    "text": "Twitter you know people were very shocked you know that's so so we have a three- tier web application that has a MySQL background has a web server and",
    "start": "613640",
    "end": "620720"
  },
  {
    "text": "the total size of the application is 700 kilobytes okay you know so it's uh um so",
    "start": "620720",
    "end": "626600"
  },
  {
    "text": "but exchange you have to use um you know um um maybe a new language a rust or",
    "start": "626600",
    "end": "632760"
  },
  {
    "text": "maybe a new SDK you know to rewrite your application this way right and uh it's going to go a lot faster than spinning",
    "start": "632760",
    "end": "639760"
  },
  {
    "text": "up a container you know that's a or spinning up spinning spinning up a Linux container so it would be um again one or",
    "start": "639760",
    "end": "647720"
  },
  {
    "text": "two others of magnitude faster not at wrong time but at startup that allows it to scale to zero meaning you a lot of",
    "start": "647720",
    "end": "654480"
  },
  {
    "text": "container settings because it takes like close to 1 second to start a container",
    "start": "654480",
    "end": "659720"
  },
  {
    "text": "in order to ensure that response opens happens in milliseconds you have to have the container running all the time you",
    "start": "659720",
    "end": "665320"
  },
  {
    "text": "have to keep it in the in the uh in the memory or or or have a dedicated CPU to",
    "start": "665320",
    "end": "670600"
  },
  {
    "text": "it it's called keep warm right you know but with wasm you can truly scale to zero meaning you run nothing when when",
    "start": "670600",
    "end": "677120"
  },
  {
    "text": "this task is not needed right you know so it's uh um it's it's truly startup On Demand right because in wasm it's in in",
    "start": "677120",
    "end": "684560"
  },
  {
    "text": "the host environment it's just a starting up a threat you know there's no um um additional over head that you have",
    "start": "684560",
    "end": "690079"
  },
  {
    "text": "to load all those me all those libraries and you know things like that and uh WM can arguably be more secure because it",
    "start": "690079",
    "end": "697760"
  },
  {
    "text": "is uh uh it is a new security Paradigm that that's that's uh that's um what",
    "start": "697760",
    "end": "703040"
  },
  {
    "text": "they call capability based security meaning that you have to explicitly declare what you um what this container",
    "start": "703040",
    "end": "710160"
  },
  {
    "text": "or this application have access to right it's unlike say um a regular container applicating and as we all see when we",
    "start": "710160",
    "end": "715839"
  },
  {
    "text": "talk about ebpf is that a lot of things ask for the root permission you know so you know you don't really want that you",
    "start": "715839",
    "end": "722160"
  },
  {
    "text": "know that's so in the in wasm there's more finally green way for you to for you to do those things and perhaps more",
    "start": "722160",
    "end": "730160"
  },
  {
    "text": "interesting and very interesting today is that wasm application is truly pable",
    "start": "730160",
    "end": "735519"
  },
  {
    "text": "uh traditional container applications are not truly pable because when you look at the container images they have",
    "start": "735519",
    "end": "741760"
  },
  {
    "text": "x86 they have arms you know arm CPU you know you have at least those two distinguish which is okay if you only",
    "start": "741760",
    "end": "748680"
  },
  {
    "text": "have two CP however more and more workload we see today runs on gpus and other specialized",
    "start": "748680",
    "end": "753959"
  },
  {
    "text": "Hardwares so if you look at py toch doer image it has different image for",
    "start": "753959",
    "end": "760360"
  },
  {
    "text": "different version of Cuda and different version of Cuda so there's hundreds of images and each of them has uh has",
    "start": "760360",
    "end": "767480"
  },
  {
    "text": "slightly different you know um um uh you know external driver version that is",
    "start": "767480",
    "end": "774440"
  },
  {
    "text": "that's being version to external drivers right that's really one of the big challenges in",
    "start": "774440",
    "end": "779880"
  },
  {
    "text": "um uh Cloud native Computing is that kubernetes is designed to distribute binary artifact it's not designed to",
    "start": "779880",
    "end": "786880"
  },
  {
    "text": "recompile your source code on your deployment machine because it assumes that the binary artifact is somewhat",
    "start": "786880",
    "end": "793480"
  },
  {
    "text": "portable and uh with the new um that's why I want to talk about AI in a minute that's with the new Ai and armm",
    "start": "793480",
    "end": "800279"
  },
  {
    "text": "workloads that promise has been broken you know because you know um say if I develop uh U even if a python",
    "start": "800279",
    "end": "807880"
  },
  {
    "text": "application you have to specify with the underneath that we want to do the Cula driver or something else right you know so if I develop something um on the Mac",
    "start": "807880",
    "end": "815480"
  },
  {
    "text": "there's no guarantee that this this same application going to work on uh Nvidia machine in the cloud there's no",
    "start": "815480",
    "end": "821639"
  },
  {
    "text": "guarantee that this m this this application going to work in say AWS specialized inference chip that's called",
    "start": "821639",
    "end": "828399"
  },
  {
    "text": "infer I think you know so you are going all the way back to pre Java days 25",
    "start": "828399",
    "end": "834160"
  },
  {
    "text": "years ago where you developers have to recompile and test their applications on the deployment platforming you know so I",
    "start": "834160",
    "end": "841279"
  },
  {
    "text": "think that's um um is also one of the features that was significant features wasm going to give us is that um it's",
    "start": "841279",
    "end": "847959"
  },
  {
    "text": "truly aordable you know it's just one binary it's OS independent CPU independent with machine learning and AI",
    "start": "847959",
    "end": "854800"
  },
  {
    "text": "workloads it's GPU independent so you know you can just uh you can truly run anywhere so those are the um some of the",
    "start": "854800",
    "end": "862160"
  },
  {
    "text": "features so you know so those are the things that I talked about right you know so uh if you I know it's a little",
    "start": "862160",
    "end": "868079"
  },
  {
    "text": "hard to read but you know um we have um um you know at around that",
    "start": "868079",
    "end": "874480"
  },
  {
    "text": "time we we we we published um uh the I wouldn't call the benchmarks but you",
    "start": "874480",
    "end": "879639"
  },
  {
    "text": "know some some numbers of you know and some applications that we built right you know so all those applications is",
    "start": "879639",
    "end": "885720"
  },
  {
    "text": "some kind of web service it has a has a you know it runs a web server so you can access from outside and uh it has some",
    "start": "885720",
    "end": "893160"
  },
  {
    "text": "kind of database on the back end the database could be MySQL could be red redus could be postgress and uh if you",
    "start": "893160",
    "end": "899480"
  },
  {
    "text": "use the um a traditional way to let's not say Java because Java is hundreds of",
    "start": "899480",
    "end": "906920"
  },
  {
    "text": "megabytes but even if you use go to write or rust to write those applications and wrap wrap them around",
    "start": "906920",
    "end": "913360"
  },
  {
    "text": "in a uh sayto image the the the the container size would be in the tens of",
    "start": "913360",
    "end": "919800"
  },
  {
    "text": "megabytes but um here we can see that um you know um the WM size the entire",
    "start": "919800",
    "end": "926959"
  },
  {
    "text": "application is about I think 700 kilobytes or 800 kilobytes you know it's",
    "start": "926959",
    "end": "932680"
  },
  {
    "text": "that you know sub one um sub one megabytes you know so it's that the",
    "start": "932680",
    "end": "937720"
  },
  {
    "text": "difference is huge the difference is at least one order magnitude often times two orders",
    "start": "937720",
    "end": "943279"
  },
  {
    "text": "so well it's not just us that says that you know so uh the cncf annual survey",
    "start": "943279",
    "end": "948800"
  },
  {
    "text": "said um what did they say oh containers are the new normal andw is the future I",
    "start": "948800",
    "end": "954880"
  },
  {
    "text": "think that's why you know that's why they say it right you know so so a little worried about um you know",
    "start": "954880",
    "end": "962920"
  },
  {
    "text": "the wasm Ed project wasm Ed project is a CNF and is only wasm R time project in CNF you know so there's other wasm",
    "start": "962920",
    "end": "969680"
  },
  {
    "text": "application project like wasum cloud is actually the application server that build on wasum right you know so um you",
    "start": "969680",
    "end": "975399"
  },
  {
    "text": "um um but was match is the actual wrong timee right you know so it is a um what",
    "start": "975399",
    "end": "981000"
  },
  {
    "text": "we call Cloud native purpose build um a web around time for for server side",
    "start": "981000",
    "end": "986120"
  },
  {
    "text": "applications and uh it has a lot of features that are important on server",
    "start": "986120",
    "end": "991600"
  },
  {
    "text": "side but not important in the browser right so for instance it can create HTTP servers and in order to create HTTP",
    "start": "991600",
    "end": "997959"
  },
  {
    "text": "servers you need um asynchronous connections because you can't you know s",
    "start": "997959",
    "end": "1003800"
  },
  {
    "text": "NOS nodejs is a single threaded HTTP server you can have multiple connections",
    "start": "1003800",
    "end": "1009240"
  },
  {
    "text": "coming at the same time but they on the same threat but they can share time because they they do not block each",
    "start": "1009240",
    "end": "1015279"
  },
  {
    "text": "other right so we do the same thing with uh with was starting HTTP servers in",
    "start": "1015279",
    "end": "1020639"
  },
  {
    "text": "that right you know so we support database connections we can connect out to mySQL or post and you know a variety",
    "start": "1020639",
    "end": "1026839"
  },
  {
    "text": "of different databases as we have seen from the from other uh from the previous Twi right you know so build three tier",
    "start": "1026839",
    "end": "1032880"
  },
  {
    "text": "architecture applications the the Ser the web server the middleware and the database right we support a lot of AI workflows",
    "start": "1032880",
    "end": "1040600"
  },
  {
    "text": "which we're going to talk about later you know including pytorch tensorflow l. CPP and you know things like that to",
    "start": "1040600",
    "end": "1046360"
  },
  {
    "text": "provide a crossplatform AI experience for the um for the um you know for our",
    "start": "1046360",
    "end": "1052880"
  },
  {
    "text": "applications and uh perhaps more interesting is that we support existing container tooling meaning that's within",
    "start": "1052880",
    "end": "1060000"
  },
  {
    "text": "today you can use kubernetes or cryo or",
    "start": "1060000",
    "end": "1065039"
  },
  {
    "text": "crong or elements of the or even doer desktop to directly manage was manage",
    "start": "1065039",
    "end": "1070880"
  },
  {
    "text": "applications as if they are Linux containers and then we're going to show that in a minute right you know so",
    "start": "1070880",
    "end": "1076280"
  },
  {
    "text": "that's one of the advantages of playing this ecosystem playing the cncf ecosystem is that we get um other tools",
    "start": "1076280",
    "end": "1083159"
  },
  {
    "text": "to support you know um deployment of of WM applications so let's see how it works",
    "start": "1083159",
    "end": "1089880"
  },
  {
    "text": "in um because this is a question I get a lot you know in",
    "start": "1089880",
    "end": "1094840"
  },
  {
    "text": "kubernetes uh as we have just mentioned the kubernetes container um uh Linux",
    "start": "1095280",
    "end": "1100840"
  },
  {
    "text": "container for Linux containers are not are uh are not truly cross platform so you need to give it a CPU architecture",
    "start": "1100840",
    "end": "1107400"
  },
  {
    "text": "right you know it's X8 or um 64 you know whatever so there's a new um CPU",
    "start": "1107400",
    "end": "1113799"
  },
  {
    "text": "architecture called Web assembly WM 32 okay so when you when you have a wasm",
    "start": "1113799",
    "end": "1119200"
  },
  {
    "text": "binary artifact you build a wasm application to build a wasm binary B code application sort of like Java Bal",
    "start": "1119200",
    "end": "1125000"
  },
  {
    "text": "application right you can upload it to doer Hub and give it uh the CPU label as",
    "start": "1125000",
    "end": "1130880"
  },
  {
    "text": "wasm 32 when the um kubernetes tools like cron or coner plus plus a shim plus",
    "start": "1130880",
    "end": "1138280"
  },
  {
    "text": "wrong um pulls that artifact from the doer Club it checks the CPU architect um CPU",
    "start": "1138280",
    "end": "1146039"
  },
  {
    "text": "architecture to see if can wrong locally now it sees it's wasm 32 it's there's no",
    "start": "1146039",
    "end": "1151240"
  },
  {
    "text": "corresponding CPU that can wrong wasm 32 at that point the tool knows that it",
    "start": "1151240",
    "end": "1156720"
  },
  {
    "text": "needs to use a wasm run to run it right you know so at that point it start wasm Edge and run it so for uh for uh",
    "start": "1156720",
    "end": "1164039"
  },
  {
    "text": "developers it is a fairly straightforward experience you know is that you can run WR Linux containers and",
    "start": "1164039",
    "end": "1170320"
  },
  {
    "text": "wasm wasm applications side by side in the same cluster so you have a pod that has maybe three Linux containers running",
    "start": "1170320",
    "end": "1176280"
  },
  {
    "text": "as a servers and two WM um applications that running as um as serverless functions or something like that right",
    "start": "1176280",
    "end": "1182880"
  },
  {
    "text": "so it's a um this experience of course still needs to be um is continuously being improved you know so we have um",
    "start": "1182880",
    "end": "1189360"
  },
  {
    "text": "you know uh the partners that we work with like liquid reply you know they have a kwm project that has a has a",
    "start": "1189360",
    "end": "1195039"
  },
  {
    "text": "kubernetes operator that's automatically installed wasm WR time on the cluster and you know things like that so there's",
    "start": "1195039",
    "end": "1200360"
  },
  {
    "text": "lot of things that's uh that happen in this space but the general idea is that we Define the new CPU format called bom",
    "start": "1200360",
    "end": "1206720"
  },
  {
    "text": "32 that doesn't really exist in in the real world but when the uh kues wrong",
    "start": "1206720",
    "end": "1212080"
  },
  {
    "text": "time sees that it knows to use the wasm edge wrong time to run it okay so here",
    "start": "1212080",
    "end": "1217760"
  },
  {
    "text": "are the some of the database connections that we support you know that's we're going to go over that so you know that's",
    "start": "1217760",
    "end": "1223120"
  },
  {
    "text": "um with all the introduction about what is waterm and you know things like that you know so we we we we can finally talk",
    "start": "1223120",
    "end": "1229400"
  },
  {
    "text": "about some use cases right you know so the first use case we want to talk about is wasm for streaming functions and uh",
    "start": "1229400",
    "end": "1235400"
  },
  {
    "text": "you know this is uh somewhat a hot field so you know um I think only a couple months ago um you know um well it said",
    "start": "1235400",
    "end": "1243919"
  },
  {
    "text": "2022 but I think um this may be early release they have a new updated release so um uh streaming engine red panda has",
    "start": "1243919",
    "end": "1251679"
  },
  {
    "text": "um declared that they would have wasm to build um build into their product you know so the idea is really to have the",
    "start": "1251679",
    "end": "1257720"
  },
  {
    "text": "messaging queue and prodct processing live on the same place because used to be they separate the Kaa server and the",
    "start": "1257720",
    "end": "1264360"
  },
  {
    "text": "Flink server are two separate servers one manage the messaging queue the other process the manage messaging queue right",
    "start": "1264360",
    "end": "1271200"
  },
  {
    "text": "but with the wasm Ser this function embedded into the messaging que you can do light we processing right there so one of the uh use case examples is that",
    "start": "1271200",
    "end": "1278400"
  },
  {
    "text": "so for instance there are lot of incoming messages but some of them have sensitive data like containing password you know things like that or you worse",
    "start": "1278400",
    "end": "1285279"
  },
  {
    "text": "uh Bitcoin private key right so you could have a WM program that detect those features and discard those",
    "start": "1285279",
    "end": "1290640"
  },
  {
    "text": "messages not log them right you know so right there without having to spin up uh a Flink server on the side right you",
    "start": "1290640",
    "end": "1297039"
  },
  {
    "text": "know so do that right there in the in the uh in the messaging queue right you know so that's um red panda's work but",
    "start": "1297039",
    "end": "1304360"
  },
  {
    "text": "the thing I want to really talk about is U we can go a step further to say we can",
    "start": "1304360",
    "end": "1310799"
  },
  {
    "text": "we want to use wasm to do log processing in the in the um uh in our say large",
    "start": "1310799",
    "end": "1317919"
  },
  {
    "text": "deployment of kubernetes clusters so the current state of art or the current",
    "start": "1317919",
    "end": "1322960"
  },
  {
    "text": "state is that the elk stack I think many of you probably have heard of that and",
    "start": "1322960",
    "end": "1328159"
  },
  {
    "text": "played you know struggled with that you know it's a stack of elastic search lock stash and the kibana those are three",
    "start": "1328159",
    "end": "1335720"
  },
  {
    "text": "jvms those are jvm applications and of course you can't directly deploy jvm",
    "start": "1335720",
    "end": "1341200"
  },
  {
    "text": "applications in a in a in a cloud native cluster you have to wrap them around in Linux containers and VMS so that blows",
    "start": "1341200",
    "end": "1347440"
  },
  {
    "text": "their size to you know hundreds of megabytes and uh you know um so it's a it is a very popular stock but it's also",
    "start": "1347440",
    "end": "1354640"
  },
  {
    "text": "in my opinion very slow right you know so um this is actually one of the huge bottlenecks if you look at uh leading",
    "start": "1354640",
    "end": "1360919"
  },
  {
    "text": "internet companies so you know one of the guys that we work with um they have uh 2,000 3,000 machines processing locks",
    "start": "1360919",
    "end": "1368320"
  },
  {
    "text": "of course they have 700 you know they have over a billion um you know Maus",
    "start": "1368320",
    "end": "1374200"
  },
  {
    "text": "using their platform you know there's uh but you know the the cost that incurred by just processing those logs",
    "start": "1374200",
    "end": "1381240"
  },
  {
    "text": "and in the new era of you know people want all their data to do machine learning and you know things like that",
    "start": "1381240",
    "end": "1386640"
  },
  {
    "text": "it's even more costly because you can't really because you want to save those you want more deeply process those datas",
    "start": "1386640",
    "end": "1392240"
  },
  {
    "text": "right you know so it's uh it is a uh it is a challenge that's that's that is",
    "start": "1392240",
    "end": "1397640"
  },
  {
    "text": "very big you know that's um sorry so how does um wasm help here is that instead",
    "start": "1397640",
    "end": "1403840"
  },
  {
    "text": "of having those three containers with jvms and the process data can't we have",
    "start": "1403840",
    "end": "1409559"
  },
  {
    "text": "lightweight containers uh written in wasm that is much fast that is much faster and much smaller to do something",
    "start": "1409559",
    "end": "1417080"
  },
  {
    "text": "Mund like processing logs right so this is the project that's exactly what we",
    "start": "1417080",
    "end": "1422159"
  },
  {
    "text": "did with one of our um so um by the way I I'll give a shout out to uh Linux",
    "start": "1422159",
    "end": "1428799"
  },
  {
    "text": "Foundation uh mentorship programs that's you know so they get uh graduate students from all over the world to work",
    "start": "1428799",
    "end": "1435200"
  },
  {
    "text": "on um you know uh Linux Foundation host State projects so this this is one of our graduate student interns um he came",
    "start": "1435200",
    "end": "1441240"
  },
  {
    "text": "up with the whole solution and U um and uh so he sort of like Google sum of code",
    "start": "1441240",
    "end": "1446320"
  },
  {
    "text": "but did the did the whole project right so in this project you know um as you can",
    "start": "1446320",
    "end": "1452039"
  },
  {
    "text": "see he wrote uh a wasm application that start with the uh database spin",
    "start": "1452039",
    "end": "1458799"
  },
  {
    "text": "collector or the PO block collector you know so collects a log hook up with a",
    "start": "1458799",
    "end": "1464320"
  },
  {
    "text": "database or hook up with a log file in a in a in a different um in a different container in the same pot",
    "start": "1464320",
    "end": "1471399"
  },
  {
    "text": "right collect those um those uh logs and then with those logs he implemented the",
    "start": "1471399",
    "end": "1477559"
  },
  {
    "text": "components to pass those logs and aggregate them and then process them with each step there's a way to plug in",
    "start": "1477559",
    "end": "1485279"
  },
  {
    "text": "your own logic right you know so um wasm is ultimately application development platform so it provides um you know if",
    "start": "1485279",
    "end": "1492760"
  },
  {
    "text": "you think in Java terms it's the abstract class that Divine in here so you have to provide your own implementation but in Russ terms it's",
    "start": "1492760",
    "end": "1498919"
  },
  {
    "text": "the traits right you know so you implement those trait and compare it with the with the existing application",
    "start": "1498919",
    "end": "1504200"
  },
  {
    "text": "you add new features to it right so you know um that's he did all this in Rust",
    "start": "1504200",
    "end": "1509559"
  },
  {
    "text": "so he so this so this is overall diagram that's you know that's allows um the",
    "start": "1509559",
    "end": "1515360"
  },
  {
    "text": "application to uh start a very lightweight uh wasm application wasm container and then use it to process all",
    "start": "1515360",
    "end": "1522880"
  },
  {
    "text": "this data right you know so um the UR the the GitHub repository to this um you",
    "start": "1522880",
    "end": "1528440"
  },
  {
    "text": "know let list it here it's under the wage organization it called log reflex and uh if you look at um it works out of",
    "start": "1528440",
    "end": "1535520"
  },
  {
    "text": "the box so it has a configuration file that's um that you can just simply use because the by default it just collects",
    "start": "1535520",
    "end": "1542039"
  },
  {
    "text": "those logs and send them to a database right you know that's uh so you know so it collect Bing lock from my SQL and you",
    "start": "1542039",
    "end": "1548039"
  },
  {
    "text": "know so it's a configuration file the application reads and then it specifies where to collect the data where to uh",
    "start": "1548039",
    "end": "1554880"
  },
  {
    "text": "how to combine the data and uh what's the format for the output to to to send out right you know so so um I won't have",
    "start": "1554880",
    "end": "1561880"
  },
  {
    "text": "time to really demonstrate this but you know that's um but when you see that you um you get the idea right you know",
    "start": "1561880",
    "end": "1567159"
  },
  {
    "text": "that's uh get data from my SQL and output radius or output cka you know something like that right and uh but",
    "start": "1567159",
    "end": "1574360"
  },
  {
    "text": "like I said the most interesting thing about it is that um this this project if you're R developer you know this allows",
    "start": "1574360",
    "end": "1580240"
  },
  {
    "text": "you to Define your own uh logic in terms of how the data is being processed so an",
    "start": "1580240",
    "end": "1585559"
  },
  {
    "text": "important thing here really is that you know you implement this trade and uh you um you you compile this trade with the",
    "start": "1585559",
    "end": "1592080"
  },
  {
    "text": "um with the WM lock Flex project you get a new WM file and then you deploy the",
    "start": "1592080",
    "end": "1598159"
  },
  {
    "text": "new you deploy this WM file into your kubernetes cluster now you don't need those um the elk stuff right you know",
    "start": "1598159",
    "end": "1604880"
  },
  {
    "text": "don't need three jvms plus three containers plus operating system and everything you just have one um you know",
    "start": "1604880",
    "end": "1611679"
  },
  {
    "text": "very lightweight um perhaps 2 3 megab sized um you know um um wasm application",
    "start": "1611679",
    "end": "1617600"
  },
  {
    "text": "where you know know you can uh you can start in your in your your part and and start to collect all those data right",
    "start": "1617600",
    "end": "1623520"
  },
  {
    "text": "you know so this is uh one of the examples and uh um I'll go a little quicker because I only have eight",
    "start": "1623520",
    "end": "1628919"
  },
  {
    "text": "minutes left so we talked about how to get data and how to um you know um um",
    "start": "1628919",
    "end": "1636480"
  },
  {
    "text": "process the log this is one project so I want to then move on to the next project which is also done by one of our Linux",
    "start": "1636480",
    "end": "1642880"
  },
  {
    "text": "Foundation interns she's also a graduate student and uh what she did is to um",
    "start": "1642880",
    "end": "1648559"
  },
  {
    "text": "solve the problem of how do you get the source of the data you know because the the the source of the log data typically",
    "start": "1648559",
    "end": "1655600"
  },
  {
    "text": "come from say um you know um like in the previous example it's uh come from the",
    "start": "1655600",
    "end": "1661720"
  },
  {
    "text": "the um the My BNG lock right but a lot of system level data increasingly they",
    "start": "1661720",
    "end": "1667320"
  },
  {
    "text": "come from ebpf so you have a ebpf program you inject into the kernel in the that runs the whole stering system",
    "start": "1667320",
    "end": "1674120"
  },
  {
    "text": "right you know and then start to collect networking level data so that when that data get it you can have the the stack",
    "start": "1674120",
    "end": "1680799"
  },
  {
    "text": "that I talk about instead of the El but I have a file to process that but to deploy the ebpf is uh is one of the pain",
    "start": "1680799",
    "end": "1689080"
  },
  {
    "text": "points that we we have identified that's you know that we we are working with um some um you know on cloud native",
    "start": "1689080",
    "end": "1695200"
  },
  {
    "text": "companies that's that are doing this work right you know so today without wasm there's really two ways to deploy a",
    "start": "1695200",
    "end": "1701640"
  },
  {
    "text": "DPF one is to in integrate control plan you know that's essentially you start a container to deploy it right you know",
    "start": "1701640",
    "end": "1707399"
  },
  {
    "text": "that's uh and the other one is that you you have a side car you have a EVP of demon that's um you know things project",
    "start": "1707399",
    "end": "1713919"
  },
  {
    "text": "like B and things like that so those are the two existing um deployment models",
    "start": "1713919",
    "end": "1719720"
  },
  {
    "text": "but they all have problems you know so for the integrated deployment you have to start container with the operating",
    "start": "1719720",
    "end": "1725559"
  },
  {
    "text": "system just to deploy a ebpf agent and manage the life cycle of that agent just think about you know whenever I see",
    "start": "1725559",
    "end": "1732760"
  },
  {
    "text": "those I think about the waste it generates right you know it's a you know all you need to do is deploy something",
    "start": "1732760",
    "end": "1737919"
  },
  {
    "text": "but but instead you have to start a container to to do that and the container need root access because you",
    "start": "1737919",
    "end": "1743799"
  },
  {
    "text": "know it's a um because the Linux security model is that you know nothing",
    "start": "1743799",
    "end": "1748919"
  },
  {
    "text": "at all you can't have fining grain access you know you have to if you want to inject something into C you have to have a root access right so this is one",
    "start": "1748919",
    "end": "1755399"
  },
  {
    "text": "of the problems with integrated deployment where you know you have um you have dedicated Linux container to",
    "start": "1755399",
    "end": "1761559"
  },
  {
    "text": "manage this process right you know so um then on the other side is a sidecar",
    "start": "1761559",
    "end": "1766600"
  },
  {
    "text": "deployment side car deployment is um um because that's a process you have to run in the part it's a lot less",
    "start": "1766600",
    "end": "1773159"
  },
  {
    "text": "flexible it's a lot more intrusive to the uh to the kubernetes system itself",
    "start": "1773159",
    "end": "1778200"
  },
  {
    "text": "right you know so I'm not saying there's anything wrong with those two deployment I'm just saying there's room for improvement right you know so the idea",
    "start": "1778200",
    "end": "1784120"
  },
  {
    "text": "of room uh Improvement is really to have the ebpf deployment container not be a",
    "start": "1784120",
    "end": "1790399"
  },
  {
    "text": "Linux container okay but a wasm container so something like that oh sorry uh I think I'm missing a slide",
    "start": "1790399",
    "end": "1797120"
  },
  {
    "text": "okay well yeah so that's the the red one should be um a wasm container that has",
    "start": "1797120",
    "end": "1804039"
  },
  {
    "text": "what we call wasi extension for ebpf meaning that uh there's a s a set of system calls that's specifically scoped",
    "start": "1804039",
    "end": "1811440"
  },
  {
    "text": "for deploying ebpf agent and collect data from those agents right you know so um the project itself is uh is uh is uh",
    "start": "1811440",
    "end": "1819080"
  },
  {
    "text": "is here so there's a library and tools you know you have your existing evpa program and you use the the the tools",
    "start": "1819080",
    "end": "1826080"
  },
  {
    "text": "provided here to compile them into wasm right and then you use the um wasm Edge",
    "start": "1826080",
    "end": "1831679"
  },
  {
    "text": "plug-in which provide those host functions into the into the wasm round time into wasm container and then the",
    "start": "1831679",
    "end": "1837640"
  },
  {
    "text": "wasm container would be able to take that wasm file strip out the ebpf stuff and inject that into the kernel right",
    "start": "1837640",
    "end": "1843399"
  },
  {
    "text": "you know so it's a complete the whole process you know i' really um again I'm running of time but I really encourage",
    "start": "1843399",
    "end": "1848799"
  },
  {
    "text": "you guys to um try this I think this is a really nice way to um you know to to",
    "start": "1848799",
    "end": "1854200"
  },
  {
    "text": "deploy abpf that's um you know that's that's um you know that's that is lightweight and that's more manageable",
    "start": "1854200",
    "end": "1860039"
  },
  {
    "text": "yeah so you know so here are some of the um you know um um benefits you know",
    "start": "1860039",
    "end": "1865480"
  },
  {
    "text": "that's it's easier faster but you know we already knew that you know that's so we I keep I talk non-stop for like more",
    "start": "1865480",
    "end": "1872600"
  },
  {
    "text": "than half an hour to say why this is better faster easier right you know so um there's um one last thing we want to",
    "start": "1872600",
    "end": "1880120"
  },
  {
    "text": "talk about is that there's another way of streaming processing streaming processing is called AI you know the AI",
    "start": "1880120",
    "end": "1886399"
  },
  {
    "text": "applications are just data streaming if you think about the armm applications they just you know you you inject",
    "start": "1886399",
    "end": "1892080"
  },
  {
    "text": "prompts and then you get some data back and then use that data to call function you know something like that when wasm",
    "start": "1892080",
    "end": "1897360"
  },
  {
    "text": "Edge first started a lot of our customers use AI on the edge meaning that's the AI in the camera in the car",
    "start": "1897360",
    "end": "1904320"
  },
  {
    "text": "you know those are all data stream of image datas right you know so you uh do processing over those and uh the idea is",
    "start": "1904320",
    "end": "1912760"
  },
  {
    "text": "I'll skip forward so you know so we have a a project called llama Edge which is a application that build on top of wasm",
    "start": "1912760",
    "end": "1919279"
  },
  {
    "text": "edge that's allows um a true crossplatform compatibilities for those",
    "start": "1919279",
    "end": "1924679"
  },
  {
    "text": "air applications meaning that I write towards wasm API and once I um once it's",
    "start": "1924679",
    "end": "1931480"
  },
  {
    "text": "compiled I can deploy it to any device be Intel be AMD be Nvidia be Mac be arm",
    "start": "1931480",
    "end": "1937679"
  },
  {
    "text": "you know anything the was run time figures out what is underlying wrong time it going to use and what's the GPU",
    "start": "1937679",
    "end": "1943840"
  },
  {
    "text": "it going to use right so it's going to um so the there will be one binary that being orchestrated across the entire H",
    "start": "1943840",
    "end": "1950720"
  },
  {
    "text": "Network and the the the uh Cloud Network by kubernetes so um yeah so there's um",
    "start": "1950720",
    "end": "1957760"
  },
  {
    "text": "uh there's I going to share that in the slide so you know there's something you can go go to the hotel and try it you",
    "start": "1957760",
    "end": "1963360"
  },
  {
    "text": "know that's it going to download a large language model where on your own on your own computer and you can try it right you know so um again those the third",
    "start": "1963360",
    "end": "1971000"
  },
  {
    "text": "time those are also built by our interns thank you so you know um our interns has",
    "start": "1971000",
    "end": "1976880"
  },
  {
    "text": "build a pyic extension to wasm edge meaning there's a there's not no python in there but the pyth C library and the",
    "start": "1976880",
    "end": "1983639"
  },
  {
    "text": "pyth C API build that into wasm so that from from wasm you can use rust or go or",
    "start": "1983639",
    "end": "1989200"
  },
  {
    "text": "JavaScript to call those P um pyto functions they build tensor flow they build open yo so this not done by the",
    "start": "1989200",
    "end": "1996240"
  },
  {
    "text": "same intern done by um over uh over the span of I think one and a half year by",
    "start": "1996240",
    "end": "2002600"
  },
  {
    "text": "over five or six interns you know so some of them build open CV FFM Peg you know so now we can support the The Meta",
    "start": "2002600",
    "end": "2009440"
  },
  {
    "text": "models the media pipe models which is a Google set of you know um uh uh vision",
    "start": "2009440",
    "end": "2014519"
  },
  {
    "text": "and audio mod models and even things like the ulo 5 object detection models and you know things like that so you",
    "start": "2014519",
    "end": "2020279"
  },
  {
    "text": "know um I think again I'm running out time but there's a lots of examples that uh uh that you can see for this type of",
    "start": "2020279",
    "end": "2026279"
  },
  {
    "text": "stream processing not really log anymore but image data audio um language and uh",
    "start": "2026279",
    "end": "2032840"
  },
  {
    "text": "you know so you can um you know um you know every single one of them has",
    "start": "2032840",
    "end": "2039600"
  },
  {
    "text": "you know uh cicd attached to them so you can see how they run you know get up environment so you can run it on your",
    "start": "2039600",
    "end": "2045000"
  },
  {
    "text": "own environment and yeah that's uh so thank thank you",
    "start": "2045000",
    "end": "2051240"
  },
  {
    "text": "yeah",
    "start": "2056839",
    "end": "2059839"
  }
]