[
  {
    "text": "hello and welcome to the introduction to",
    "start": "269",
    "end": "2820"
  },
  {
    "text": "mega talk I'm 1 and this is pretty",
    "start": "2820",
    "end": "6150"
  },
  {
    "text": "we're both software engineers at uber",
    "start": "6150",
    "end": "8400"
  },
  {
    "text": "the company that lost the DD and are",
    "start": "8400",
    "end": "11580"
  },
  {
    "text": "they translating my joke ok whatever and",
    "start": "11580",
    "end": "13710"
  },
  {
    "text": "more importantly we are maintenance of",
    "start": "13710",
    "end": "15780"
  },
  {
    "text": "the Jaeger project ok so as for the",
    "start": "15780",
    "end": "18810"
  },
  {
    "text": "agenda I'll do an introduction to",
    "start": "18810",
    "end": "20580"
  },
  {
    "text": "distributed tracing to get everyone in",
    "start": "20580",
    "end": "22650"
  },
  {
    "text": "the room familiarize with the problem",
    "start": "22650",
    "end": "24560"
  },
  {
    "text": "area that Jaeger attempts to solve",
    "start": "24560",
    "end": "26630"
  },
  {
    "text": "pretty will then run in a demo of Jaeger",
    "start": "26630",
    "end": "29849"
  },
  {
    "text": "and show how it can be used to debug",
    "start": "29849",
    "end": "31769"
  },
  {
    "text": "certain observability issues within a",
    "start": "31769",
    "end": "34500"
  },
  {
    "text": "micro services architecture then I'll",
    "start": "34500",
    "end": "36660"
  },
  {
    "text": "give an introduction to the Jaeger",
    "start": "36660",
    "end": "38309"
  },
  {
    "text": "project talk about our project roadmap",
    "start": "38309",
    "end": "40559"
  },
  {
    "text": "and then we'll open the floor to",
    "start": "40559",
    "end": "42239"
  },
  {
    "text": "questions",
    "start": "42239",
    "end": "43040"
  },
  {
    "text": "so before we get going a quick show of",
    "start": "43040",
    "end": "46200"
  },
  {
    "text": "hands who's familiar with distributed",
    "start": "46200",
    "end": "48270"
  },
  {
    "text": "tracing and have used it at some point",
    "start": "48270",
    "end": "50160"
  },
  {
    "text": "to debug a production problem ok I count",
    "start": "50160",
    "end": "56250"
  },
  {
    "text": "three hands ok so ok so cool so okay so",
    "start": "56250",
    "end": "60600"
  },
  {
    "text": "for the newcomers let's just go over the",
    "start": "60600",
    "end": "62969"
  },
  {
    "text": "key concepts and terminology of",
    "start": "62969",
    "end": "64650"
  },
  {
    "text": "distributed tracing to get everyone in",
    "start": "64650",
    "end": "66810"
  },
  {
    "text": "the room on the same page ok so why do",
    "start": "66810",
    "end": "70049"
  },
  {
    "text": "we need to distribute tracing in the",
    "start": "70049",
    "end": "71729"
  },
  {
    "text": "first place",
    "start": "71729",
    "end": "72630"
  },
  {
    "text": "this colorful visualization is the",
    "start": "72630",
    "end": "74369"
  },
  {
    "text": "service dependency diagram of a subset",
    "start": "74369",
    "end": "77340"
  },
  {
    "text": "of micro services over so this means",
    "start": "77340",
    "end": "79979"
  },
  {
    "text": "that every node in this graph is a",
    "start": "79979",
    "end": "81659"
  },
  {
    "text": "service and every edge between two",
    "start": "81659",
    "end": "83880"
  },
  {
    "text": "services mean that those two services",
    "start": "83880",
    "end": "86040"
  },
  {
    "text": "depend on each other uber we have over",
    "start": "86040",
    "end": "88799"
  },
  {
    "text": "4000 micro services this equates to more",
    "start": "88799",
    "end": "91740"
  },
  {
    "text": "than one micro service per engineer",
    "start": "91740",
    "end": "93360"
  },
  {
    "text": "which is kind of stupid if you think",
    "start": "93360",
    "end": "95070"
  },
  {
    "text": "about it um so as an engineer at uber",
    "start": "95070",
    "end": "97650"
  },
  {
    "text": "how do you make sense of all this chaos",
    "start": "97650",
    "end": "99750"
  },
  {
    "text": "if you own one of the services in this",
    "start": "99750",
    "end": "102180"
  },
  {
    "text": "diagram and there's a problem with your",
    "start": "102180",
    "end": "104640"
  },
  {
    "text": "service how do you narrow down which one",
    "start": "104640",
    "end": "106770"
  },
  {
    "text": "of your dependencies is actually the",
    "start": "106770",
    "end": "108689"
  },
  {
    "text": "root cause of the problem",
    "start": "108689",
    "end": "110220"
  },
  {
    "text": "so distributed tracing can assist you",
    "start": "110220",
    "end": "112049"
  },
  {
    "text": "with narrowing down your search space",
    "start": "112049",
    "end": "113610"
  },
  {
    "text": "pretty we'll be demoing this capability",
    "start": "113610",
    "end": "116310"
  },
  {
    "text": "in a short while so what else can",
    "start": "116310",
    "end": "119460"
  },
  {
    "text": "distribute your tracing be use be useful",
    "start": "119460",
    "end": "121590"
  },
  {
    "text": "so it can be used to monitor",
    "start": "121590",
    "end": "123119"
  },
  {
    "text": "transactions and micro services let's",
    "start": "123119",
    "end": "125399"
  },
  {
    "text": "say you have a transaction that is just",
    "start": "125399",
    "end": "127320"
  },
  {
    "text": "isolated to a single service like the",
    "start": "127320",
    "end": "129690"
  },
  {
    "text": "diagram has on",
    "start": "129690",
    "end": "131930"
  },
  {
    "text": "there are already existing tools to",
    "start": "131930",
    "end": "133790"
  },
  {
    "text": "observe this transaction like this and",
    "start": "133790",
    "end": "135890"
  },
  {
    "text": "you could use login for example so if",
    "start": "135890",
    "end": "138500"
  },
  {
    "text": "you do logging when a transaction first",
    "start": "138500",
    "end": "140690"
  },
  {
    "text": "starts you can pass around the",
    "start": "140690",
    "end": "142250"
  },
  {
    "text": "transaction ID and use it whenever you",
    "start": "142250",
    "end": "144440"
  },
  {
    "text": "log something you can then piece",
    "start": "144440",
    "end": "147080"
  },
  {
    "text": "together the timeline for the",
    "start": "147080",
    "end": "148430"
  },
  {
    "text": "distributed transaction via some",
    "start": "148430",
    "end": "150290"
  },
  {
    "text": "processing by searching for all logs",
    "start": "150290",
    "end": "152300"
  },
  {
    "text": "with that transaction ID so this very",
    "start": "152300",
    "end": "154760"
  },
  {
    "text": "simple mechanism will work for most both",
    "start": "154760",
    "end": "157220"
  },
  {
    "text": "basic concurrency and asynchronous",
    "start": "157220",
    "end": "159770"
  },
  {
    "text": "concurrency as long as you add the",
    "start": "159770",
    "end": "161540"
  },
  {
    "text": "ability to pass around this transaction",
    "start": "161540",
    "end": "163580"
  },
  {
    "text": "ID throughout your code however once we",
    "start": "163580",
    "end": "166730"
  },
  {
    "text": "move to a micro services architecture",
    "start": "166730",
    "end": "168980"
  },
  {
    "text": "with distributed concurrency simply",
    "start": "168980",
    "end": "171200"
  },
  {
    "text": "passing around the transaction ID within",
    "start": "171200",
    "end": "173450"
  },
  {
    "text": "a single service won't get you the",
    "start": "173450",
    "end": "174830"
  },
  {
    "text": "entire picture",
    "start": "174830",
    "end": "175490"
  },
  {
    "text": "we now need a mechanism that can",
    "start": "175490",
    "end": "177560"
  },
  {
    "text": "propagate this transaction ID across",
    "start": "177560",
    "end": "179660"
  },
  {
    "text": "services service boundaries so we we can",
    "start": "179660",
    "end": "183170"
  },
  {
    "text": "piece together the timeline of the",
    "start": "183170",
    "end": "184730"
  },
  {
    "text": "distributed transaction so distributed",
    "start": "184730",
    "end": "187340"
  },
  {
    "text": "tracing solves this issue with context",
    "start": "187340",
    "end": "190310"
  },
  {
    "text": "propagation so what is context context",
    "start": "190310",
    "end": "194120"
  },
  {
    "text": "is just a metadata that is passed around",
    "start": "194120",
    "end": "196130"
  },
  {
    "text": "between services this metadata includes",
    "start": "196130",
    "end": "198500"
  },
  {
    "text": "a unique ID that can be used to identify",
    "start": "198500",
    "end": "200390"
  },
  {
    "text": "the distributed transaction on the left",
    "start": "200390",
    "end": "203420"
  },
  {
    "text": "here you can see a call graph where",
    "start": "203420",
    "end": "205490"
  },
  {
    "text": "every node represents a service and the",
    "start": "205490",
    "end": "208040"
  },
  {
    "text": "directed edges between them signify",
    "start": "208040",
    "end": "210020"
  },
  {
    "text": "requesting so service a receives a",
    "start": "210020",
    "end": "213260"
  },
  {
    "text": "request from some external service and",
    "start": "213260",
    "end": "215510"
  },
  {
    "text": "it generates a unique ID and inserts it",
    "start": "215510",
    "end": "218720"
  },
  {
    "text": "into a context object the context is",
    "start": "218720",
    "end": "221330"
  },
  {
    "text": "then propagated along with along two",
    "start": "221330",
    "end": "223970"
  },
  {
    "text": "other requests sorry-sorry okay so the",
    "start": "223970",
    "end": "227540"
  },
  {
    "text": "context is then propagated along with",
    "start": "227540",
    "end": "229520"
  },
  {
    "text": "request to other services here service a",
    "start": "229520",
    "end": "232520"
  },
  {
    "text": "called service B it will also include",
    "start": "232520",
    "end": "235340"
  },
  {
    "text": "the context inside the payload so to",
    "start": "235340",
    "end": "237590"
  },
  {
    "text": "visualize the work done by individual",
    "start": "237590",
    "end": "239510"
  },
  {
    "text": "services within this transaction we use",
    "start": "239510",
    "end": "242000"
  },
  {
    "text": "a trace view as seen on the right unlike",
    "start": "242000",
    "end": "244760"
  },
  {
    "text": "the call graph on the Left where all we",
    "start": "244760",
    "end": "246590"
  },
  {
    "text": "can see is the causality between the",
    "start": "246590",
    "end": "248720"
  },
  {
    "text": "services the trace view allows us to see",
    "start": "248720",
    "end": "251450"
  },
  {
    "text": "both causality and the amount of work",
    "start": "251450",
    "end": "253940"
  },
  {
    "text": "done by each service in the graph so",
    "start": "253940",
    "end": "256489"
  },
  {
    "text": "trace is composed of multiple spans and",
    "start": "256489",
    "end": "258920"
  },
  {
    "text": "each span has a start time a finished",
    "start": "258920",
    "end": "261350"
  },
  {
    "text": "time logs tags and represents the work",
    "start": "261350",
    "end": "264620"
  },
  {
    "text": "done",
    "start": "264620",
    "end": "265010"
  },
  {
    "text": "by a service within the distributed",
    "start": "265010",
    "end": "266960"
  },
  {
    "text": "transaction here we can see that service",
    "start": "266960",
    "end": "269420"
  },
  {
    "text": "a took the longest time to finish we can",
    "start": "269420",
    "end": "272420"
  },
  {
    "text": "also see that service a is calling",
    "start": "272420",
    "end": "274850"
  },
  {
    "text": "service B which in turn is calling",
    "start": "274850",
    "end": "276800"
  },
  {
    "text": "service C but then service B wait until",
    "start": "276800",
    "end": "279920"
  },
  {
    "text": "service C is finished and only then",
    "start": "279920",
    "end": "281990"
  },
  {
    "text": "makes a request to service D and so on",
    "start": "281990",
    "end": "284420"
  },
  {
    "text": "and so forth so one last thing I need to",
    "start": "284420",
    "end": "287960"
  },
  {
    "text": "mention before the demo is that is open",
    "start": "287960",
    "end": "291080"
  },
  {
    "text": "tracing so you've probably heard about",
    "start": "291080",
    "end": "292760"
  },
  {
    "text": "open tracing at this conference",
    "start": "292760",
    "end": "294440"
  },
  {
    "text": "since it's also a CNC F member project",
    "start": "294440",
    "end": "296600"
  },
  {
    "text": "it's a vendor-neutral",
    "start": "296600",
    "end": "298450"
  },
  {
    "text": "instrumentation API that allows context",
    "start": "298450",
    "end": "301340"
  },
  {
    "text": "propagation and distributed tracing",
    "start": "301340",
    "end": "303080"
  },
  {
    "text": "amongst other things so as long as your",
    "start": "303080",
    "end": "305330"
  },
  {
    "text": "services are instrumented with this API",
    "start": "305330",
    "end": "307310"
  },
  {
    "text": "you can plug in different open tracing",
    "start": "307310",
    "end": "309680"
  },
  {
    "text": "compatible tracers like Jager light step",
    "start": "309680",
    "end": "312290"
  },
  {
    "text": "and sky walking without having to",
    "start": "312290",
    "end": "314390"
  },
  {
    "text": "rewrite all your instrumentation code",
    "start": "314390",
    "end": "316090"
  },
  {
    "text": "okay okay so I'll stop speaking now and",
    "start": "316090",
    "end": "319730"
  },
  {
    "text": "let proceed do them thank you all for",
    "start": "319730",
    "end": "327050"
  },
  {
    "text": "that introduction so I'm going to",
    "start": "327050",
    "end": "329270"
  },
  {
    "text": "reconfigure my laptop and we're going to",
    "start": "329270",
    "end": "331970"
  },
  {
    "text": "do a quick demo",
    "start": "331970",
    "end": "335950"
  },
  {
    "text": "okay so I'm going to do a demo of the",
    "start": "352009",
    "end": "354860"
  },
  {
    "text": "Jager UI",
    "start": "354860",
    "end": "355550"
  },
  {
    "text": "and we are going to use a mock",
    "start": "355550",
    "end": "357889"
  },
  {
    "text": "application called hot rod to do this",
    "start": "357889",
    "end": "360020"
  },
  {
    "text": "demo so I am just copying and pasting",
    "start": "360020",
    "end": "362479"
  },
  {
    "text": "this command that just runs Jager in a",
    "start": "362479",
    "end": "368089"
  },
  {
    "text": "docker container in all-in-one mode so",
    "start": "368089",
    "end": "371119"
  },
  {
    "text": "it has integrated storage so that is",
    "start": "371119",
    "end": "375499"
  },
  {
    "text": "done that is cool too",
    "start": "375499",
    "end": "379419"
  },
  {
    "text": "so the front end foot okay not if this",
    "start": "379419",
    "end": "382399"
  },
  {
    "text": "printing for yeegar is at localhost 166",
    "start": "382399",
    "end": "386300"
  },
  {
    "text": "86",
    "start": "386300",
    "end": "386870"
  },
  {
    "text": "here the Jager logo and I'm going to do",
    "start": "386870",
    "end": "392330"
  },
  {
    "text": "the same for the demo application so oh",
    "start": "392330",
    "end": "401749"
  },
  {
    "text": "he'll be launching the demo application",
    "start": "401749",
    "end": "403550"
  },
  {
    "text": "called hot rod so I would direct your",
    "start": "403550",
    "end": "407449"
  },
  {
    "text": "attention to its logs so now when you",
    "start": "407449",
    "end": "410180"
  },
  {
    "text": "look at these logs here like you see the",
    "start": "410180",
    "end": "412249"
  },
  {
    "text": "word service with route service front",
    "start": "412249",
    "end": "414919"
  },
  {
    "text": "end service customer and service driver",
    "start": "414919",
    "end": "417139"
  },
  {
    "text": "now these logs immediately tell us that",
    "start": "417139",
    "end": "420589"
  },
  {
    "text": "this demo application consists of",
    "start": "420589",
    "end": "422360"
  },
  {
    "text": "multiple smaller services in this case I",
    "start": "422360",
    "end": "426680"
  },
  {
    "text": "think we are most interested in the",
    "start": "426680",
    "end": "428180"
  },
  {
    "text": "front end because the front end is",
    "start": "428180",
    "end": "429649"
  },
  {
    "text": "usually the entry point for these apps",
    "start": "429649",
    "end": "431539"
  },
  {
    "text": "so let me click on this address so the",
    "start": "431539",
    "end": "436459"
  },
  {
    "text": "front end takes us to this particular",
    "start": "436459",
    "end": "438229"
  },
  {
    "text": "website now let me give you an",
    "start": "438229",
    "end": "441229"
  },
  {
    "text": "introduction about hot rod hot rod",
    "start": "441229",
    "end": "443300"
  },
  {
    "text": "stands for rides on demand and it is",
    "start": "443300",
    "end": "446839"
  },
  {
    "text": "this simulation of a ride-sharing app",
    "start": "446839",
    "end": "449330"
  },
  {
    "text": "like say uber or DB that allows people",
    "start": "449330",
    "end": "453339"
  },
  {
    "text": "allows customers to request vehicles for",
    "start": "453339",
    "end": "456649"
  },
  {
    "text": "a given location so we only support",
    "start": "456649",
    "end": "459080"
  },
  {
    "text": "these four locations in this app now",
    "start": "459080",
    "end": "461240"
  },
  {
    "text": "when we click on one of these you see it",
    "start": "461240",
    "end": "464870"
  },
  {
    "text": "says it's dispatching an app and then a",
    "start": "464870",
    "end": "467180"
  },
  {
    "text": "car and then here we see this number",
    "start": "467180",
    "end": "470389"
  },
  {
    "text": "which is a new york-style number plate",
    "start": "470389",
    "end": "472519"
  },
  {
    "text": "it's a car number plate and it says that",
    "start": "472519",
    "end": "474529"
  },
  {
    "text": "it's arriving in some amount of time so",
    "start": "474529",
    "end": "476839"
  },
  {
    "text": "this application goes through looks at",
    "start": "476839",
    "end": "479240"
  },
  {
    "text": "the nearest cars and sends one of these",
    "start": "479240",
    "end": "481699"
  },
  {
    "text": "cars to the customer some of the things",
    "start": "481699",
    "end": "484099"
  },
  {
    "text": "that are important to note in this",
    "start": "484099",
    "end": "486169"
  },
  {
    "text": "we have this web client ID now this is a",
    "start": "486169",
    "end": "489889"
  },
  {
    "text": "unique ID ID that's given by the",
    "start": "489889",
    "end": "492050"
  },
  {
    "text": "JavaScript on the front-end if i refresh",
    "start": "492050",
    "end": "493850"
  },
  {
    "text": "this browser window you'll see a",
    "start": "493850",
    "end": "495110"
  },
  {
    "text": "different ID and we have request IDs so",
    "start": "495110",
    "end": "498290"
  },
  {
    "text": "this is also by the front-end the",
    "start": "498290",
    "end": "500180"
  },
  {
    "text": "latency as measured on the front-end now",
    "start": "500180",
    "end": "503510"
  },
  {
    "text": "that we've done this we go to the Jager",
    "start": "503510",
    "end": "505610"
  },
  {
    "text": "UI now it's very interesting that we",
    "start": "505610",
    "end": "507919"
  },
  {
    "text": "haven't really we haven't really seen",
    "start": "507919",
    "end": "511250"
  },
  {
    "text": "what this application is so we know that",
    "start": "511250",
    "end": "513469"
  },
  {
    "text": "this application consists of many parts",
    "start": "513469",
    "end": "515140"
  },
  {
    "text": "but we don't really know how these parts",
    "start": "515140",
    "end": "518120"
  },
  {
    "text": "relate to each other what the",
    "start": "518120",
    "end": "519289"
  },
  {
    "text": "architecture is now recall that we",
    "start": "519289",
    "end": "522140"
  },
  {
    "text": "already did one requester here now this",
    "start": "522140",
    "end": "525200"
  },
  {
    "text": "sends data spam data to Jager so Jager",
    "start": "525200",
    "end": "528710"
  },
  {
    "text": "captures that data and it stores it and",
    "start": "528710",
    "end": "531260"
  },
  {
    "text": "allows you to visualize it so when you",
    "start": "531260",
    "end": "533420"
  },
  {
    "text": "go to the dependencies tab here so we",
    "start": "533420",
    "end": "537290"
  },
  {
    "text": "can already see that the front-end",
    "start": "537290",
    "end": "539510"
  },
  {
    "text": "service called three services customer",
    "start": "539510",
    "end": "542450"
  },
  {
    "text": "driver and route and customer calls my",
    "start": "542450",
    "end": "545540"
  },
  {
    "text": "sequel backing so driver calls Redis",
    "start": "545540",
    "end": "548779"
  },
  {
    "text": "so already we are gaining an",
    "start": "548779",
    "end": "550400"
  },
  {
    "text": "understanding of how these services",
    "start": "550400",
    "end": "552400"
  },
  {
    "text": "communicate with each other so we've",
    "start": "552400",
    "end": "555709"
  },
  {
    "text": "only made one request so let's go to the",
    "start": "555709",
    "end": "559040"
  },
  {
    "text": "search page and let's hit on find traces",
    "start": "559040",
    "end": "562810"
  },
  {
    "text": "so this shows two traces for this",
    "start": "562810",
    "end": "566390"
  },
  {
    "text": "particular website right for this app so",
    "start": "566390",
    "end": "569660"
  },
  {
    "text": "on the front end like we see that we",
    "start": "569660",
    "end": "571580"
  },
  {
    "text": "call HTTP GET slash dispatch that's",
    "start": "571580",
    "end": "574790"
  },
  {
    "text": "that's the end point that front end code",
    "start": "574790",
    "end": "577250"
  },
  {
    "text": "and oh here it shows all the services",
    "start": "577250",
    "end": "579770"
  },
  {
    "text": "involved in serving that request and",
    "start": "579770",
    "end": "581750"
  },
  {
    "text": "then we see that there few errors and we",
    "start": "581750",
    "end": "585020"
  },
  {
    "text": "also see this time that says that it",
    "start": "585020",
    "end": "587150"
  },
  {
    "text": "took about seven 50 milliseconds and",
    "start": "587150",
    "end": "590180"
  },
  {
    "text": "this if you notice this small 750 is",
    "start": "590180",
    "end": "593300"
  },
  {
    "text": "smaller than 759 and this is because",
    "start": "593300",
    "end": "595390"
  },
  {
    "text": "this particular timing comes from the",
    "start": "595390",
    "end": "598550"
  },
  {
    "text": "front end whereas the timing over here",
    "start": "598550",
    "end": "601580"
  },
  {
    "text": "this 750 is coming from the back end",
    "start": "601580",
    "end": "604180"
  },
  {
    "text": "it's also collected today a few minutes",
    "start": "604180",
    "end": "607190"
  },
  {
    "text": "ago so all of this is just an",
    "start": "607190",
    "end": "608870"
  },
  {
    "text": "information screen right we also have",
    "start": "608870",
    "end": "611690"
  },
  {
    "text": "this display here that shows like how",
    "start": "611690",
    "end": "614570"
  },
  {
    "text": "much time this tick it's about 700",
    "start": "614570",
    "end": "617030"
  },
  {
    "text": "something millisecond",
    "start": "617030",
    "end": "618140"
  },
  {
    "text": "let us click into this so when we click",
    "start": "618140",
    "end": "622370"
  },
  {
    "text": "into this we immediately get a timeline",
    "start": "622370",
    "end": "624710"
  },
  {
    "text": "view so here we see that we can just go",
    "start": "624710",
    "end": "628730"
  },
  {
    "text": "through this we see that this is",
    "start": "628730",
    "end": "630110"
  },
  {
    "text": "front-end service that called a customer",
    "start": "630110",
    "end": "632839"
  },
  {
    "text": "service which calls my sequel once we",
    "start": "632839",
    "end": "635000"
  },
  {
    "text": "collapses we see that the front-end",
    "start": "635000",
    "end": "637220"
  },
  {
    "text": "service calls driver dot find nearest",
    "start": "637220",
    "end": "639320"
  },
  {
    "text": "and then we see get route being called",
    "start": "639320",
    "end": "643360"
  },
  {
    "text": "many times so if you look at this this",
    "start": "643360",
    "end": "647149"
  },
  {
    "text": "is just a timeline view saying what we",
    "start": "647149",
    "end": "650480"
  },
  {
    "text": "do not know what the business logic",
    "start": "650480",
    "end": "651680"
  },
  {
    "text": "inside is but we know how long each",
    "start": "651680",
    "end": "654890"
  },
  {
    "text": "component took and how they interacted",
    "start": "654890",
    "end": "657380"
  },
  {
    "text": "with each other so this is very",
    "start": "657380",
    "end": "661130"
  },
  {
    "text": "contextual information this is all from",
    "start": "661130",
    "end": "663770"
  },
  {
    "text": "one craze it's collected across multiple",
    "start": "663770",
    "end": "665839"
  },
  {
    "text": "services and it's all presented to you",
    "start": "665839",
    "end": "668180"
  },
  {
    "text": "in one screen so it tells you a story of",
    "start": "668180",
    "end": "670250"
  },
  {
    "text": "what's happening in your service",
    "start": "670250",
    "end": "671870"
  },
  {
    "text": "architecture now if we click into this",
    "start": "671870",
    "end": "674660"
  },
  {
    "text": "we see these logs and these logs are",
    "start": "674660",
    "end": "678410"
  },
  {
    "text": "very contextualized these are pure",
    "start": "678410",
    "end": "679760"
  },
  {
    "text": "request logs so looking at these logs we",
    "start": "679760",
    "end": "682850"
  },
  {
    "text": "can see that there's a HTTP request",
    "start": "682850",
    "end": "684680"
  },
  {
    "text": "received the was getting a customer and",
    "start": "684680",
    "end": "687890"
  },
  {
    "text": "then this is search for the nearest",
    "start": "687890",
    "end": "689630"
  },
  {
    "text": "drivers and monsters that search is",
    "start": "689630",
    "end": "692420"
  },
  {
    "text": "completed we do we the application finds",
    "start": "692420",
    "end": "695959"
  },
  {
    "text": "the most efficient route and once it's",
    "start": "695959",
    "end": "698390"
  },
  {
    "text": "done it finally sends the dispatch which",
    "start": "698390",
    "end": "701779"
  },
  {
    "text": "is sending a car to the customer now we",
    "start": "701779",
    "end": "704510"
  },
  {
    "text": "see all of this in this logging",
    "start": "704510",
    "end": "705800"
  },
  {
    "text": "information this is in contrast with the",
    "start": "705800",
    "end": "708410"
  },
  {
    "text": "logs over here now these are the same",
    "start": "708410",
    "end": "710990"
  },
  {
    "text": "logs from all these services for just",
    "start": "710990",
    "end": "713660"
  },
  {
    "text": "one request and it is very difficult to",
    "start": "713660",
    "end": "717350"
  },
  {
    "text": "make out what's going on from here as",
    "start": "717350",
    "end": "720529"
  },
  {
    "text": "opposed to looking at the trace view",
    "start": "720529",
    "end": "723170"
  },
  {
    "text": "where everything is in context now I'm",
    "start": "723170",
    "end": "725959"
  },
  {
    "text": "going to dig deeper into this timeline",
    "start": "725959",
    "end": "727940"
  },
  {
    "text": "to explore more interesting things so we",
    "start": "727940",
    "end": "731450"
  },
  {
    "text": "have this logo here and when you go down",
    "start": "731450",
    "end": "734750"
  },
  {
    "text": "we see front-end called customer which",
    "start": "734750",
    "end": "736550"
  },
  {
    "text": "calls my sequel and then we see a",
    "start": "736550",
    "end": "738529"
  },
  {
    "text": "front-end calling the driver service and",
    "start": "738529",
    "end": "740600"
  },
  {
    "text": "the driver service calls Redis one of",
    "start": "740600",
    "end": "742670"
  },
  {
    "text": "the interesting things is you can",
    "start": "742670",
    "end": "743959"
  },
  {
    "text": "annotate errors so this exclamation mark",
    "start": "743959",
    "end": "746839"
  },
  {
    "text": "or here means that there's a error in",
    "start": "746839",
    "end": "749779"
  },
  {
    "text": "this path",
    "start": "749779",
    "end": "750410"
  },
  {
    "text": "and we can dig in to see what that error",
    "start": "750410",
    "end": "752930"
  },
  {
    "text": "is like we see that there's a Redis",
    "start": "752930",
    "end": "755810"
  },
  {
    "text": "timeout so it's very informational that",
    "start": "755810",
    "end": "759140"
  },
  {
    "text": "way and users can choose to like report",
    "start": "759140",
    "end": "762380"
  },
  {
    "text": "errors at any granularity that they want",
    "start": "762380",
    "end": "766630"
  },
  {
    "text": "we also have for things like my sequel",
    "start": "766630",
    "end": "770270"
  },
  {
    "text": "you can actually put in the my sequel",
    "start": "770270",
    "end": "772790"
  },
  {
    "text": "query right inside your span so that you",
    "start": "772790",
    "end": "776750"
  },
  {
    "text": "know exactly what query was executing at",
    "start": "776750",
    "end": "779810"
  },
  {
    "text": "that point so going down like we might",
    "start": "779810",
    "end": "785600"
  },
  {
    "text": "want to see how the performance of this",
    "start": "785600",
    "end": "788750"
  },
  {
    "text": "app or like we might want to learn like",
    "start": "788750",
    "end": "792110"
  },
  {
    "text": "what is actually going on when someone",
    "start": "792110",
    "end": "794870"
  },
  {
    "text": "calls a dispatch or here we see that",
    "start": "794870",
    "end": "796940"
  },
  {
    "text": "driver calls read is many times and it's",
    "start": "796940",
    "end": "800930"
  },
  {
    "text": "very easy to notice in this example that",
    "start": "800930",
    "end": "803650"
  },
  {
    "text": "each of these calls only happens after",
    "start": "803650",
    "end": "806930"
  },
  {
    "text": "the previous call completed so here",
    "start": "806930",
    "end": "810710"
  },
  {
    "text": "already you get some notion of you a",
    "start": "810710",
    "end": "812960"
  },
  {
    "text": "question that is can these Redis calls",
    "start": "812960",
    "end": "815870"
  },
  {
    "text": "being made in parallel they're being",
    "start": "815870",
    "end": "818150"
  },
  {
    "text": "made in serial right now but do they",
    "start": "818150",
    "end": "820400"
  },
  {
    "text": "have to be made in serial and that is",
    "start": "820400",
    "end": "822080"
  },
  {
    "text": "something that can be investigated",
    "start": "822080",
    "end": "824350"
  },
  {
    "text": "looking at this frampton service it also",
    "start": "824350",
    "end": "827000"
  },
  {
    "text": "seems like three of these calls happen",
    "start": "827000",
    "end": "830930"
  },
  {
    "text": "in parallel and then the next three and",
    "start": "830930",
    "end": "832820"
  },
  {
    "text": "then the next three and so on so also",
    "start": "832820",
    "end": "835700"
  },
  {
    "text": "this gives you like we can see clearly",
    "start": "835700",
    "end": "837470"
  },
  {
    "text": "see this pattern right here and this",
    "start": "837470",
    "end": "840320"
  },
  {
    "text": "also gives us this notion of whether the",
    "start": "840320",
    "end": "842870"
  },
  {
    "text": "resource constrained on some other on",
    "start": "842870",
    "end": "847040"
  },
  {
    "text": "some other resource right like maybe",
    "start": "847040",
    "end": "848510"
  },
  {
    "text": "there's an executor pool with only three",
    "start": "848510",
    "end": "850490"
  },
  {
    "text": "threads and the trace timeline view",
    "start": "850490",
    "end": "853790"
  },
  {
    "text": "gives you this nice visualization that",
    "start": "853790",
    "end": "856640"
  },
  {
    "text": "allows you to dig in very deep into a",
    "start": "856640",
    "end": "858860"
  },
  {
    "text": "single request and find out how that",
    "start": "858860",
    "end": "861500"
  },
  {
    "text": "request is going on the key point is all",
    "start": "861500",
    "end": "863900"
  },
  {
    "text": "of this is empirical data this is actual",
    "start": "863900",
    "end": "865940"
  },
  {
    "text": "data that the app is sending to Yaeger",
    "start": "865940",
    "end": "868780"
  },
  {
    "text": "so let's go back to our simulation now",
    "start": "868780",
    "end": "873740"
  },
  {
    "text": "I'm curious about how the simulation",
    "start": "873740",
    "end": "876020"
  },
  {
    "text": "works when the multiple requests right",
    "start": "876020",
    "end": "878570"
  },
  {
    "text": "now we have only seen one request so I'm",
    "start": "878570",
    "end": "880670"
  },
  {
    "text": "going to click on something many times",
    "start": "880670",
    "end": "882290"
  },
  {
    "text": "so if you see the request",
    "start": "882290",
    "end": "883510"
  },
  {
    "text": "it's just increasing so let me quick",
    "start": "883510",
    "end": "888550"
  },
  {
    "text": "some more so we have a lot of requests",
    "start": "888550",
    "end": "894610"
  },
  {
    "text": "and if you see that if you notice the",
    "start": "894610",
    "end": "896740"
  },
  {
    "text": "latency our initial request was only 759",
    "start": "896740",
    "end": "899529"
  },
  {
    "text": "milliseconds and our final request is",
    "start": "899529",
    "end": "902199"
  },
  {
    "text": "almost three seconds so it is increasing",
    "start": "902199",
    "end": "904750"
  },
  {
    "text": "so clearly there's something funny going",
    "start": "904750",
    "end": "908260"
  },
  {
    "text": "on with the app so to see what's going",
    "start": "908260",
    "end": "912160"
  },
  {
    "text": "on I'm going to select one of these one",
    "start": "912160",
    "end": "915970"
  },
  {
    "text": "of these number plates and going to the",
    "start": "915970",
    "end": "918490"
  },
  {
    "text": "Jaeger UI I'm going to search via a tag",
    "start": "918490",
    "end": "924209"
  },
  {
    "text": "so well so on the left side there's a",
    "start": "925139",
    "end": "928540"
  },
  {
    "text": "search functionality you can search we",
    "start": "928540",
    "end": "930310"
  },
  {
    "text": "are key value pairs so it's just key",
    "start": "930310",
    "end": "932470"
  },
  {
    "text": "equal to value and then if your",
    "start": "932470",
    "end": "935110"
  },
  {
    "text": "instrumentation tags it correctly you",
    "start": "935110",
    "end": "937360"
  },
  {
    "text": "could just get that particular results",
    "start": "937360",
    "end": "939639"
  },
  {
    "text": "so we see over here that this particular",
    "start": "939639",
    "end": "941790"
  },
  {
    "text": "trace take one point seven nine seconds",
    "start": "941790",
    "end": "944470"
  },
  {
    "text": "let us dig into it",
    "start": "944470",
    "end": "946110"
  },
  {
    "text": "now going inside this my sequel select",
    "start": "946110",
    "end": "950980"
  },
  {
    "text": "is almost taking one point three nine",
    "start": "950980",
    "end": "952930"
  },
  {
    "text": "seconds and clearly something is wrong",
    "start": "952930",
    "end": "956980"
  },
  {
    "text": "here right and we look at it as just go",
    "start": "956980",
    "end": "960279"
  },
  {
    "text": "into this you see that this is a select",
    "start": "960279",
    "end": "962800"
  },
  {
    "text": "query the Select looks normal but let's",
    "start": "962800",
    "end": "966069"
  },
  {
    "text": "look into the logs now the interesting",
    "start": "966069",
    "end": "968800"
  },
  {
    "text": "thing here is like we see that this",
    "start": "968800",
    "end": "972699"
  },
  {
    "text": "particular log line says that it's",
    "start": "972699",
    "end": "974380"
  },
  {
    "text": "waiting for a lock behind full",
    "start": "974380",
    "end": "976089"
  },
  {
    "text": "transactions right and this happens and",
    "start": "976089",
    "end": "979810"
  },
  {
    "text": "the lock is acquired only after one",
    "start": "979810",
    "end": "981940"
  },
  {
    "text": "whole second now open tracing allows us",
    "start": "981940",
    "end": "985959"
  },
  {
    "text": "to create rich instrumentation that",
    "start": "985959",
    "end": "989589"
  },
  {
    "text": "exposes these details on to logs and in",
    "start": "989589",
    "end": "993490"
  },
  {
    "text": "this case this could potentially be a",
    "start": "993490",
    "end": "995709"
  },
  {
    "text": "database that's configured to only use",
    "start": "995709",
    "end": "997810"
  },
  {
    "text": "one serial connection or like only one",
    "start": "997810",
    "end": "1001139"
  },
  {
    "text": "or something behind the queue so",
    "start": "1001139",
    "end": "1005060"
  },
  {
    "text": "essentially when there multiple requests",
    "start": "1005060",
    "end": "1007589"
  },
  {
    "text": "coming in everything is waiting for the",
    "start": "1007589",
    "end": "1009600"
  },
  {
    "text": "previous request to complete before it",
    "start": "1009600",
    "end": "1011220"
  },
  {
    "text": "can be served",
    "start": "1011220",
    "end": "1013759"
  },
  {
    "text": "so ideally the next step you take is",
    "start": "1015710",
    "end": "1018050"
  },
  {
    "text": "look into what is going on here",
    "start": "1018050",
    "end": "1021980"
  },
  {
    "text": "the other interesting thing here is that",
    "start": "1021980",
    "end": "1024290"
  },
  {
    "text": "you see this blockers and these blockers",
    "start": "1024290",
    "end": "1027770"
  },
  {
    "text": "are request IDs from this page so these",
    "start": "1027770",
    "end": "1033589"
  },
  {
    "text": "request IDs are available in the in the",
    "start": "1033589",
    "end": "1038089"
  },
  {
    "text": "UI and your app knows about it",
    "start": "1038089",
    "end": "1040250"
  },
  {
    "text": "the interesting thing is your storage",
    "start": "1040250",
    "end": "1042020"
  },
  {
    "text": "layer knows about it the storage layers",
    "start": "1042020",
    "end": "1044678"
  },
  {
    "text": "looking at the dependencies the storage",
    "start": "1044679",
    "end": "1047000"
  },
  {
    "text": "layers three levels deep it's the is the",
    "start": "1047000",
    "end": "1049550"
  },
  {
    "text": "thing at the bottom the bottom most",
    "start": "1049550",
    "end": "1051050"
  },
  {
    "text": "thing knows who the customer that made",
    "start": "1051050",
    "end": "1054470"
  },
  {
    "text": "this request and this is possible",
    "start": "1054470",
    "end": "1057200"
  },
  {
    "text": "through an open tracing feature called",
    "start": "1057200",
    "end": "1059120"
  },
  {
    "text": "baggage which allows you to pass key",
    "start": "1059120",
    "end": "1062990"
  },
  {
    "text": "value pairs throughout your architecture",
    "start": "1062990",
    "end": "1065929"
  },
  {
    "text": "without changing your applications api's",
    "start": "1065929",
    "end": "1071470"
  },
  {
    "text": "so that is all I have for the demo so",
    "start": "1074470",
    "end": "1079160"
  },
  {
    "text": "I'm going to hand it back to one",
    "start": "1079160",
    "end": "1083110"
  },
  {
    "text": "I don't know England",
    "start": "1094919",
    "end": "1106700"
  },
  {
    "text": "okay",
    "start": "1121669",
    "end": "1124669"
  },
  {
    "text": "No yeah",
    "start": "1131149",
    "end": "1134929"
  },
  {
    "text": "look slow clicking checking check okay",
    "start": "1138169",
    "end": "1146580"
  },
  {
    "text": "thank you",
    "start": "1146580",
    "end": "1147480"
  },
  {
    "text": "okay thanks let's see sorry",
    "start": "1147480",
    "end": "1151710"
  },
  {
    "text": "thanks pretty for the demo so as you can",
    "start": "1151710",
    "end": "1153779"
  },
  {
    "text": "probably tell mine now Jaeger is an open",
    "start": "1153779",
    "end": "1156000"
  },
  {
    "text": "source open tracing compatible",
    "start": "1156000",
    "end": "1157799"
  },
  {
    "text": "distributed tracing system so Jaeger was",
    "start": "1157799",
    "end": "1161250"
  },
  {
    "text": "inspired by Google's dapper and open",
    "start": "1161250",
    "end": "1164100"
  },
  {
    "text": "Zipkin and we started out over in August",
    "start": "1164100",
    "end": "1166470"
  },
  {
    "text": "2015 we open sourced the project in",
    "start": "1166470",
    "end": "1169440"
  },
  {
    "text": "April 2017 and it was accepted as an",
    "start": "1169440",
    "end": "1172350"
  },
  {
    "text": "official CN CF member project in",
    "start": "1172350",
    "end": "1174570"
  },
  {
    "text": "September 2017 so let's just take a",
    "start": "1174570",
    "end": "1177480"
  },
  {
    "text": "brief look at the tech stack the Jaeger",
    "start": "1177480",
    "end": "1179399"
  },
  {
    "text": "back-end is written in : and we support",
    "start": "1179399",
    "end": "1181889"
  },
  {
    "text": "pluggable storage engines such as",
    "start": "1181889",
    "end": "1183659"
  },
  {
    "text": "Cassandra elasticsearch and other and an",
    "start": "1183659",
    "end": "1187049"
  },
  {
    "text": "in-memory storage to persist traces the",
    "start": "1187049",
    "end": "1190080"
  },
  {
    "text": "front-end is written in JavaScript and",
    "start": "1190080",
    "end": "1191759"
  },
  {
    "text": "it uses the react framework we support",
    "start": "1191759",
    "end": "1194639"
  },
  {
    "text": "many different languages and have client",
    "start": "1194639",
    "end": "1196860"
  },
  {
    "text": "support for all the languages listed on",
    "start": "1196860",
    "end": "1199440"
  },
  {
    "text": "the bottom here so one of the awesome",
    "start": "1199440",
    "end": "1201600"
  },
  {
    "text": "things to note is that the PHP the",
    "start": "1201600",
    "end": "1204389"
  },
  {
    "text": "c-sharp and the Ruby Jaeger clients were",
    "start": "1204389",
    "end": "1207600"
  },
  {
    "text": "all community contributed so speaking of",
    "start": "1207600",
    "end": "1211200"
  },
  {
    "text": "community we have full ten full-time",
    "start": "1211200",
    "end": "1213809"
  },
  {
    "text": "engineers at both uber and Red Hat",
    "start": "1213809",
    "end": "1216029"
  },
  {
    "text": "working on Jaeger we have sixty",
    "start": "1216029",
    "end": "1219779"
  },
  {
    "text": "contributors to the main Yaga repository",
    "start": "1219779",
    "end": "1222120"
  },
  {
    "text": "but if we were to include all the sub",
    "start": "1222120",
    "end": "1223860"
  },
  {
    "text": "repositories like client libraries and",
    "start": "1223860",
    "end": "1225870"
  },
  {
    "text": "such then we would have a total of 200",
    "start": "1225870",
    "end": "1228149"
  },
  {
    "text": "plus contributors we also have many",
    "start": "1228149",
    "end": "1230490"
  },
  {
    "text": "organizations using Jaeger for",
    "start": "1230490",
    "end": "1232379"
  },
  {
    "text": "day-to-day debugging as listed here if",
    "start": "1232379",
    "end": "1235259"
  },
  {
    "text": "your organization is already using",
    "start": "1235259",
    "end": "1237000"
  },
  {
    "text": "Jaeger in production let us know and",
    "start": "1237000",
    "end": "1239100"
  },
  {
    "text": "we'll gladly add you to the list so",
    "start": "1239100",
    "end": "1242629"
  },
  {
    "text": "let's just briefly summarize what",
    "start": "1242629",
    "end": "1245399"
  },
  {
    "text": "distributor tracing is for so firstly",
    "start": "1245399",
    "end": "1248850"
  },
  {
    "text": "rather than monitoring individual",
    "start": "1248850",
    "end": "1251070"
  },
  {
    "text": "components of the architecture like with",
    "start": "1251070",
    "end": "1253740"
  },
  {
    "text": "metrics and logs we can monitor",
    "start": "1253740",
    "end": "1256139"
  },
  {
    "text": "distributed transactions across multiple",
    "start": "1256139",
    "end": "1258299"
  },
  {
    "text": "components additionally we can use",
    "start": "1258299",
    "end": "1261720"
  },
  {
    "text": "traces to do",
    "start": "1261720",
    "end": "1263080"
  },
  {
    "text": "analysis which is integral for companies",
    "start": "1263080",
    "end": "1265480"
  },
  {
    "text": "like uber where each request will",
    "start": "1265480",
    "end": "1267669"
  },
  {
    "text": "sometimes fan out to hundreds of",
    "start": "1267669",
    "end": "1269260"
  },
  {
    "text": "different services we can also use",
    "start": "1269260",
    "end": "1272019"
  },
  {
    "text": "traces to detect a critical path and do",
    "start": "1272019",
    "end": "1274659"
  },
  {
    "text": "performance and latency optimizations so",
    "start": "1274659",
    "end": "1277360"
  },
  {
    "text": "in the demo we saw previously we saw",
    "start": "1277360",
    "end": "1279429"
  },
  {
    "text": "that my sequel was taking in the longest",
    "start": "1279429",
    "end": "1280990"
  },
  {
    "text": "time we could have gone in there and we",
    "start": "1280990",
    "end": "1282669"
  },
  {
    "text": "could have tried to optimize as that was",
    "start": "1282669",
    "end": "1284440"
  },
  {
    "text": "where the bottleneck was furthermore",
    "start": "1284440",
    "end": "1287320"
  },
  {
    "text": "with some post-processing we can",
    "start": "1287320",
    "end": "1289240"
  },
  {
    "text": "generate dependency diagrams that allow",
    "start": "1289240",
    "end": "1291789"
  },
  {
    "text": "engineers to better understand the",
    "start": "1291789",
    "end": "1293679"
  },
  {
    "text": "system that they're working on and",
    "start": "1293679",
    "end": "1295679"
  },
  {
    "text": "finally distributed tracing provides a",
    "start": "1295679",
    "end": "1298840"
  },
  {
    "text": "generic distributed context propagation",
    "start": "1298840",
    "end": "1300820"
  },
  {
    "text": "facility upon which everything else is",
    "start": "1300820",
    "end": "1302860"
  },
  {
    "text": "built ok so these are some some of the",
    "start": "1302860",
    "end": "1306850"
  },
  {
    "text": "recent highlights for the Jaeger project",
    "start": "1306850",
    "end": "1308940"
  },
  {
    "text": "so I'm just gonna gloss over them here",
    "start": "1308940",
    "end": "1311409"
  },
  {
    "text": "we have adaptive sampling we have",
    "start": "1311409",
    "end": "1313539"
  },
  {
    "text": "asynchronous ingestion trace comparisons",
    "start": "1313539",
    "end": "1316630"
  },
  {
    "text": "and Jaeger operator so we'll actually do",
    "start": "1316630",
    "end": "1320289"
  },
  {
    "text": "a deeper dive into each one of these new",
    "start": "1320289",
    "end": "1322210"
  },
  {
    "text": "features tomorrow during the deep dive",
    "start": "1322210",
    "end": "1323919"
  },
  {
    "text": "session since if I go over all of them",
    "start": "1323919",
    "end": "1326380"
  },
  {
    "text": "today none of you guys would show up",
    "start": "1326380",
    "end": "1328389"
  },
  {
    "text": "tomorrow so ok so let's take a brief",
    "start": "1328389",
    "end": "1331600"
  },
  {
    "text": "look in at the project roadmap so as in",
    "start": "1331600",
    "end": "1335919"
  },
  {
    "text": "the previous slide I'm only just going",
    "start": "1335919",
    "end": "1338200"
  },
  {
    "text": "to gloss over some of the new features",
    "start": "1338200",
    "end": "1340179"
  },
  {
    "text": "here and we'll in the deep dive tomorrow",
    "start": "1340179",
    "end": "1342639"
  },
  {
    "text": "we'll go through and go through all the",
    "start": "1342639",
    "end": "1345010"
  },
  {
    "text": "features ok so one of the features I'd",
    "start": "1345010",
    "end": "1347799"
  },
  {
    "text": "like to talk about is a called post tree",
    "start": "1347799",
    "end": "1350049"
  },
  {
    "text": "sampling and it's something that we're",
    "start": "1350049",
    "end": "1351580"
  },
  {
    "text": "very interested in so currently Jaeger",
    "start": "1351580",
    "end": "1353950"
  },
  {
    "text": "samples traces based on a default",
    "start": "1353950",
    "end": "1356169"
  },
  {
    "text": "probability of one in 1,000 this means",
    "start": "1356169",
    "end": "1359080"
  },
  {
    "text": "that if there are 1,000 requests we",
    "start": "1359080",
    "end": "1361419"
  },
  {
    "text": "expect that we expect it to be at least",
    "start": "1361419",
    "end": "1363309"
  },
  {
    "text": "one request that is actually traced and",
    "start": "1363309",
    "end": "1365590"
  },
  {
    "text": "sampled and saved in Jaeger this means",
    "start": "1365590",
    "end": "1368230"
  },
  {
    "text": "that we have a high probability of",
    "start": "1368230",
    "end": "1369700"
  },
  {
    "text": "missing interesting and anomalous traces",
    "start": "1369700",
    "end": "1371889"
  },
  {
    "text": "with post trace sampling we'll sample",
    "start": "1371889",
    "end": "1374529"
  },
  {
    "text": "all the requests and then cherry-pick",
    "start": "1374529",
    "end": "1376690"
  },
  {
    "text": "only the interesting traces based on",
    "start": "1376690",
    "end": "1378970"
  },
  {
    "text": "certain heuristics these heuristics can",
    "start": "1378970",
    "end": "1381549"
  },
  {
    "text": "be as simple as keeping a histogram of",
    "start": "1381549",
    "end": "1383559"
  },
  {
    "text": "trace durations and then just",
    "start": "1383559",
    "end": "1385630"
  },
  {
    "text": "cherry-picking the p1 and the p99",
    "start": "1385630",
    "end": "1387940"
  },
  {
    "text": "duration traces or counting the number",
    "start": "1387940",
    "end": "1390370"
  },
  {
    "text": "of errors in a single trace and only",
    "start": "1390370",
    "end": "1392440"
  },
  {
    "text": "saving those that cross a certain",
    "start": "1392440",
    "end": "1393730"
  },
  {
    "text": "threshold so",
    "start": "1393730",
    "end": "1396530"
  },
  {
    "text": "we have the data pipeline this is based",
    "start": "1396530",
    "end": "1399050"
  },
  {
    "text": "on Kafka and a pan chief link which is a",
    "start": "1399050",
    "end": "1401600"
  },
  {
    "text": "stream processing your air system the",
    "start": "1401600",
    "end": "1403910"
  },
  {
    "text": "data pipeline allows us to support",
    "start": "1403910",
    "end": "1405620"
  },
  {
    "text": "feature extraction trace aggregations",
    "start": "1405620",
    "end": "1408080"
  },
  {
    "text": "and data mining this is a huge feature",
    "start": "1408080",
    "end": "1410600"
  },
  {
    "text": "because it although individual traces",
    "start": "1410600",
    "end": "1412940"
  },
  {
    "text": "are useful as you saw in the demo",
    "start": "1412940",
    "end": "1414760"
  },
  {
    "text": "aggregations of traces allow us to build",
    "start": "1414760",
    "end": "1416990"
  },
  {
    "text": "models that can be used to pinpoint",
    "start": "1416990",
    "end": "1419030"
  },
  {
    "text": "anomalous traces and automatically",
    "start": "1419030",
    "end": "1421190"
  },
  {
    "text": "surface them to the engineer you just",
    "start": "1421190",
    "end": "1423320"
  },
  {
    "text": "can't do that by looking at single",
    "start": "1423320",
    "end": "1424700"
  },
  {
    "text": "traces in isolation so another way of",
    "start": "1424700",
    "end": "1427160"
  },
  {
    "text": "phrasing this is that single traces are",
    "start": "1427160",
    "end": "1429500"
  },
  {
    "text": "relatively are sorry so single traces",
    "start": "1429500",
    "end": "1432830"
  },
  {
    "text": "are we actively looked up by engineers",
    "start": "1432830",
    "end": "1434840"
  },
  {
    "text": "only after that davisc only after they",
    "start": "1434840",
    "end": "1437480"
  },
  {
    "text": "discover a problem on the other hand",
    "start": "1437480",
    "end": "1439550"
  },
  {
    "text": "once you have aggregations of traces you",
    "start": "1439550",
    "end": "1441770"
  },
  {
    "text": "can automatically detect anomalies and",
    "start": "1441770",
    "end": "1443930"
  },
  {
    "text": "then proactively let users know of",
    "start": "1443930",
    "end": "1446210"
  },
  {
    "text": "degradation of their services so a lot",
    "start": "1446210",
    "end": "1448910"
  },
  {
    "text": "of this is already live at uber and will",
    "start": "1448910",
    "end": "1450650"
  },
  {
    "text": "be open sourcing all of this shortly so",
    "start": "1450650",
    "end": "1454340"
  },
  {
    "text": "then just the last feature I'll touch",
    "start": "1454340",
    "end": "1456650"
  },
  {
    "text": "upon is incomplete span support so at",
    "start": "1456650",
    "end": "1459590"
  },
  {
    "text": "the moment spans are only emitted once",
    "start": "1459590",
    "end": "1461660"
  },
  {
    "text": "when the service is finished with its",
    "start": "1461660",
    "end": "1464300"
  },
  {
    "text": "with its work however some services have",
    "start": "1464300",
    "end": "1467300"
  },
  {
    "text": "workflows that are hours long which",
    "start": "1467300",
    "end": "1469340"
  },
  {
    "text": "means that the users have zero",
    "start": "1469340",
    "end": "1470750"
  },
  {
    "text": "observability into ongoing requests",
    "start": "1470750",
    "end": "1472880"
  },
  {
    "text": "until the entire workflow is finished so",
    "start": "1472880",
    "end": "1474860"
  },
  {
    "text": "this new feature allows you to",
    "start": "1474860",
    "end": "1476780"
  },
  {
    "text": "incrementally build spans and view them",
    "start": "1476780",
    "end": "1479090"
  },
  {
    "text": "as the workflow is running giving you",
    "start": "1479090",
    "end": "1481190"
  },
  {
    "text": "greater insight into these longer",
    "start": "1481190",
    "end": "1482840"
  },
  {
    "text": "workflows so again we'll go into a",
    "start": "1482840",
    "end": "1486110"
  },
  {
    "text": "deeper dive into all of these topics",
    "start": "1486110",
    "end": "1487910"
  },
  {
    "text": "tomorrow but I just wanted to cover them",
    "start": "1487910",
    "end": "1489740"
  },
  {
    "text": "here okay and okay and that's all we had",
    "start": "1489740",
    "end": "1493610"
  },
  {
    "text": "for today thanks for coming so are there",
    "start": "1493610",
    "end": "1499130"
  },
  {
    "text": "any questions I can answer we can answer",
    "start": "1499130",
    "end": "1503920"
  },
  {
    "text": "thank you why I use yogic elevator dog",
    "start": "1511510",
    "end": "1515360"
  },
  {
    "text": "Frank Africa how in text log how do we",
    "start": "1515360",
    "end": "1519800"
  },
  {
    "text": "index a log okay in Kafka sorry Africa",
    "start": "1519800",
    "end": "1523550"
  },
  {
    "text": "afk how do we index the log in Kafka",
    "start": "1523550",
    "end": "1528720"
  },
  {
    "text": "yeah yeah use the yokai front",
    "start": "1528720",
    "end": "1532049"
  },
  {
    "text": "kavika mm-hmm yeah we do not index the",
    "start": "1532049",
    "end": "1537240"
  },
  {
    "text": "code I mean we do not index log so we do",
    "start": "1537240",
    "end": "1539520"
  },
  {
    "text": "not index anything in Kafka so we only",
    "start": "1539520",
    "end": "1542340"
  },
  {
    "text": "put things onto Kafka and we use it as a",
    "start": "1542340",
    "end": "1545880"
  },
  {
    "text": "buffer mechanism so eventually finally",
    "start": "1545880",
    "end": "1548909"
  },
  {
    "text": "it ends up in Cassandra or elasticsearch",
    "start": "1548909",
    "end": "1551940"
  },
  {
    "text": "on cough kitesurf there's no indexing",
    "start": "1551940",
    "end": "1555950"
  },
  {
    "text": "is there are public eager services in",
    "start": "1575960",
    "end": "1578960"
  },
  {
    "text": "any of the cloud vendor called provider",
    "start": "1578960",
    "end": "1582550"
  },
  {
    "text": "so the question is but it is a hosted",
    "start": "1582550",
    "end": "1585920"
  },
  {
    "text": "Diego service oh yeah",
    "start": "1585920",
    "end": "1587330"
  },
  {
    "text": "so you need to pay someone money to just",
    "start": "1587330",
    "end": "1589970"
  },
  {
    "text": "send sense yeah I think there is you I",
    "start": "1589970",
    "end": "1594710"
  },
  {
    "text": "don't think there is there is one it",
    "start": "1594710",
    "end": "1598190"
  },
  {
    "text": "might hold on I will get back to you on",
    "start": "1598190",
    "end": "1600560"
  },
  {
    "text": "this there's at least one option okay",
    "start": "1600560",
    "end": "1603470"
  },
  {
    "text": "thank you okay we can take questions",
    "start": "1603470",
    "end": "1615050"
  },
  {
    "text": "after yeah we're just going to hang out",
    "start": "1615050",
    "end": "1617270"
  },
  {
    "text": "here and you could just come and ask",
    "start": "1617270",
    "end": "1619190"
  },
  {
    "text": "questions on the side so just just one",
    "start": "1619190",
    "end": "1623060"
  },
  {
    "text": "last slide so our deep dive session is",
    "start": "1623060",
    "end": "1625880"
  },
  {
    "text": "tomorrow so if you were interested in",
    "start": "1625880",
    "end": "1627740"
  },
  {
    "text": "any of the topics that I mentioned it's",
    "start": "1627740",
    "end": "1629690"
  },
  {
    "text": "in the same room here at 220 and we hope",
    "start": "1629690",
    "end": "1632900"
  },
  {
    "text": "to see you there and also if you're",
    "start": "1632900",
    "end": "1634550"
  },
  {
    "text": "interested in other how other",
    "start": "1634550",
    "end": "1636800"
  },
  {
    "text": "organizations are using open tracing",
    "start": "1636800",
    "end": "1639020"
  },
  {
    "text": "there is a talk that started at the same",
    "start": "1639020",
    "end": "1641300"
  },
  {
    "text": "time as this talk and is ending right",
    "start": "1641300",
    "end": "1642740"
  },
  {
    "text": "now so if you have a time machine you",
    "start": "1642740",
    "end": "1644780"
  },
  {
    "text": "could you can go back and watch that",
    "start": "1644780",
    "end": "1646840"
  },
  {
    "text": "okay thank you",
    "start": "1646840",
    "end": "1650110"
  }
]