[
  {
    "start": "0",
    "end": "155000"
  },
  {
    "text": "okay let's get started I have so much content so my name is Carson Anderson I'm here from Domo I'm here to talk",
    "start": "30",
    "end": "5370"
  },
  {
    "text": "about kubernetes though so don't worry it's not a pitch at all for Domo right there's my github back carcinoid that's",
    "start": "5370",
    "end": "10860"
  },
  {
    "text": "where you can contact me and you can get the full source for this presentation the whole thing's open-source to start",
    "start": "10860",
    "end": "16650"
  },
  {
    "text": "off who's read the description for the session and you think it to yourself how is it gonna fit all of that into thirty five minutes yeah I might have an hour",
    "start": "16650",
    "end": "24740"
  },
  {
    "text": "the good news is I have a link at the end of the slides I pre recorded the whole thing unabridged and you can go",
    "start": "24740",
    "end": "30570"
  },
  {
    "text": "watch that and I go through things a little slower I'm gonna skip some stuff and I'm gonna take this to you so raise",
    "start": "30570",
    "end": "36090"
  },
  {
    "text": "your hand if you've used darker before all right that's good we can skip some stuff raise your hand if you've used kubernetes before okay raise your hand",
    "start": "36090",
    "end": "43440"
  },
  {
    "text": "if you really want to know the dirty work of kubernetes oh good good okay we are going into the dirty work of",
    "start": "43440",
    "end": "49649"
  },
  {
    "text": "kubernetes I know the keynotes are all about magic but I'm all about real like that's behind-the-scenes we're gonna",
    "start": "49649",
    "end": "55890"
  },
  {
    "text": "pull apart the curtain so before I do that I've been think about how to describe this it's not a deep dive it's whatever the inverse of a deep dive is",
    "start": "55890",
    "end": "61859"
  },
  {
    "text": "this is a like low altitude flight over the landscape of Corrine Eddie's we're",
    "start": "61859",
    "end": "67140"
  },
  {
    "text": "gonna breeze by everything and I don't have time to focus on any one bit because we're gonna run right by it but hopefully it's give you an idea where",
    "start": "67140",
    "end": "73229"
  },
  {
    "text": "everything fits together and you can go kind of look up the details later let's get right into it I'm gonna start at the",
    "start": "73229",
    "end": "78450"
  },
  {
    "text": "basic user section this is where we just make a really basic kubernetes application so we can talk about the magic behind it in the deeper sections",
    "start": "78450",
    "end": "84810"
  },
  {
    "text": "let's get right into it so for the basic user I don't care about the details I'm gonna just really",
    "start": "84810",
    "end": "90210"
  },
  {
    "text": "quickly make some stuff and I'm gonna start with containers we're all docker people so I can skip this so we won't",
    "start": "90210",
    "end": "96000"
  },
  {
    "text": "havn't something you want to containerize like this application this presentation that's really just a filesystem you tore that filesystem up",
    "start": "96000",
    "end": "103140"
  },
  {
    "text": "stick it inside a box put some metadata on it so you know what kind of runtime information it needs stick some labels",
    "start": "103140",
    "end": "109259"
  },
  {
    "text": "on it so you can identify it amongst all your other images awesome you've got one container one application one process",
    "start": "109259",
    "end": "115439"
  },
  {
    "text": "tree you're doing containers right but we all know that that's not really enough a lot of times you want to run",
    "start": "115439",
    "end": "120659"
  },
  {
    "text": "things together one application and don't do init systems that's a bad idea you want something better you want to",
    "start": "120659",
    "end": "126570"
  },
  {
    "text": "run maybe a Prometheus export or an extra application you want them tightly coupled you want to put an envoy sidecar",
    "start": "126570",
    "end": "131970"
  },
  {
    "text": "you've heard this a lot maybe even some volume data and docker doesn't really provide the low-level",
    "start": "131970",
    "end": "137160"
  },
  {
    "text": "tools for that but kubernetes does right it's the pod we all know what a pod is I'm gonna skip a lot of this pot is a",
    "start": "137160",
    "end": "142740"
  },
  {
    "text": "container multiple containers container and a volume any combination of all those things it's what kubernetes",
    "start": "142740",
    "end": "147780"
  },
  {
    "text": "executes you'll kind of see it used interchangeably between pod and container in fact the docks even do this",
    "start": "147780",
    "end": "153030"
  },
  {
    "text": "but really it's always pause so we can make a pod we can deploy this presentation in which one pod awesome",
    "start": "153030",
    "end": "160080"
  },
  {
    "start": "155000",
    "end": "276000"
  },
  {
    "text": "but what we want fault-tolerance we want load balancing we want two pods they can make two pods manually we all know this",
    "start": "160080",
    "end": "166800"
  },
  {
    "text": "no that sucks so we're gonna make a deployment right in a deployment is just everything it",
    "start": "166800",
    "end": "173100"
  },
  {
    "text": "needs to know about how to create the pod the replicas and how to label it so we make a deployment and it's gonna make",
    "start": "173100",
    "end": "178230"
  },
  {
    "text": "the pods quick note on this symbology here everything in kubernetes is going to look like this there's lots of properties underneath the name I'm only",
    "start": "178230",
    "end": "184830"
  },
  {
    "text": "gonna point out the ones I care about at any point in time there's way more than just a port to find in these pods but we",
    "start": "184830",
    "end": "189870"
  },
  {
    "text": "make the deployment we've got our application running that's really cool but we need to get to it and if your native needs get to it the service so we",
    "start": "189870",
    "end": "196739"
  },
  {
    "text": "take our service pointed out our pods and that's how you go inside the cluster at either the service IP your name and you get to your pods and then you do",
    "start": "196739",
    "end": "203070"
  },
  {
    "text": "cool things like use the selectors so that as things change we change the image in the syrup in the deployment it's going to change and cycle out again",
    "start": "203070",
    "end": "209910"
  },
  {
    "text": "I'm skipping this watch the video so we just pointed the service its magic I'm gonna tell you how that happens later",
    "start": "209910",
    "end": "214980"
  },
  {
    "text": "but I want to understand what we're creating is a basic user finally even you people using communities a lot may",
    "start": "214980",
    "end": "219989"
  },
  {
    "text": "not have used ingress yet ingress rules this is the way we get from outside the cluster into the cluster so we create",
    "start": "219989",
    "end": "225269"
  },
  {
    "text": "rules that say hey if you're coming into a predefined load balancer again as basic user I don't care I'm just gonna see what's there I will break it down",
    "start": "225269",
    "end": "230549"
  },
  {
    "text": "you come into a load balancer destined for that host go to this service traverse all the way through awesome we",
    "start": "230549",
    "end": "237120"
  },
  {
    "text": "do that with master access right we have a place to go credentials we're gonna use cube cuddle and at least I don't use",
    "start": "237120",
    "end": "242400"
  },
  {
    "text": "cue cuddle but I'm a really basic user so we're gonna use an imperative create a namespace called this thing declaratives create and something",
    "start": "242400",
    "end": "249480"
  },
  {
    "text": "defined in this yamo here's the I mean this is boilerplate this is like day one community stuff we got a deployment with",
    "start": "249480",
    "end": "255420"
  },
  {
    "text": "all the selectors all the pod spec we've got the service using both the load",
    "start": "255420",
    "end": "260430"
  },
  {
    "text": "balancing discovery and abstraction parts of the service notice the service listens on a tea but we're going to some weird port on the backend",
    "start": "260430",
    "end": "266520"
  },
  {
    "text": "that's fine and we're creating that ingress rule which again is just a rule says hey if you're going to this hostname anything under this path go to",
    "start": "266520",
    "end": "272610"
  },
  {
    "text": "this service and the service port using the service abstraction so take your credentials are files send the de",
    "start": "272610",
    "end": "278099"
  },
  {
    "start": "276000",
    "end": "413000"
  },
  {
    "text": "kubernetes and croon Eddie's gonna spit out the things we asked for that makes sense it's also gonna spit out some things we didn't really explicitly ask",
    "start": "278099",
    "end": "284130"
  },
  {
    "text": "for but we expected also kind of note these weird names I'll tell you where those come from in a bit let's do it",
    "start": "284130",
    "end": "289259"
  },
  {
    "text": "well I'm doing it you can start loading either of those and hopefully it should stop getting 404s here in a bit I've",
    "start": "289259",
    "end": "295380"
  },
  {
    "text": "also got at the bottom one just redirects to the other so for the basic demo this is just Auto type because I'm",
    "start": "295380",
    "end": "301860"
  },
  {
    "text": "not gonna fat finger stuff you configure to hook the master address you're going to the credentials that we knew we",
    "start": "301860",
    "end": "307409"
  },
  {
    "text": "needed that use a context to tie them together and then use that context so you can just switch around in clusters awesome",
    "start": "307409",
    "end": "313949"
  },
  {
    "text": "now let's make them basic user so I'm gonna make things really simply I'm gonna imperative create the namespace",
    "start": "313949",
    "end": "319500"
  },
  {
    "text": "and then one at a time throw my mo files at it this is not advanced but I'm a basic user this is simple so there we go",
    "start": "319500",
    "end": "326819"
  },
  {
    "text": "we're making all our stuff we're gonna get it seho alright so someone raise your hand as",
    "start": "326819",
    "end": "332190"
  },
  {
    "text": "soon as that loads just start hitting refresh on your and from now on if you're looking at your laptops I'm just gonna assume you're looking at my slides",
    "start": "332190",
    "end": "337650"
  },
  {
    "text": "this is how you guys can follow along if you can't see what I'm doing so this is not fancy right anyone got the",
    "start": "337650",
    "end": "344570"
  },
  {
    "text": "application up yet okay move on I don't really I'm going to go back to my slides",
    "start": "344570",
    "end": "351740"
  },
  {
    "text": "it's up alright awesome it's all the slides it's just web server files so I'm",
    "start": "351740",
    "end": "358409"
  },
  {
    "text": "a basic user oh yeah I've deployed my application but you guys are here for the meet let's get into the meat for the cluster admin I'm not satisfied I want",
    "start": "358409",
    "end": "365370"
  },
  {
    "text": "to point out these symbols I've scattered them all over this section and a little bit in the rest they are places where you can replace extend and highly",
    "start": "365370",
    "end": "371310"
  },
  {
    "text": "configure crew Burnette ease I'm not pointing out all of them I've learned I'm their stuff I don't even know you can add on to like you guys know now",
    "start": "371310",
    "end": "377190"
  },
  {
    "text": "it's built to be extended upon but I'm gonna point out some big ones throughout the session so senator files to",
    "start": "377190",
    "end": "384180"
  },
  {
    "text": "kubernetes we got stuff but we know communities isn't a just a nebulous thing we've been calling it that the whole conference but it's actually a",
    "start": "384180",
    "end": "391380"
  },
  {
    "text": "bunch of things it's even more than this these are just the big ones that talk through your master components the bottom two are primarily node components",
    "start": "391380",
    "end": "397710"
  },
  {
    "text": "but they can run on the Masters I'm gonna I'm all one at a time also notice basically everything's pluggable",
    "start": "397710",
    "end": "403360"
  },
  {
    "text": "replaceable looks configurable in fact cubelet i've learned some stuff that's replaceable like rocket let swaps up",
    "start": "403360",
    "end": "409300"
  },
  {
    "text": "cubelets so really basically everything in communities can be replaced or extended starting with the API server",
    "start": "409300",
    "end": "414790"
  },
  {
    "start": "413000",
    "end": "431000"
  },
  {
    "text": "when we sent our files into the API and got stuff we kind of guess that was the API server that makes a lot of sense",
    "start": "414790",
    "end": "420040"
  },
  {
    "text": "notice we've got our first extension here this is custom resource definitions and the API server extension they talk",
    "start": "420040",
    "end": "425140"
  },
  {
    "text": "about this in the keynote I don't have time but they're really cool ways to just like kubernetes do the dirty work of adding stuff to the API we sent it in",
    "start": "425140",
    "end": "432670"
  },
  {
    "start": "431000",
    "end": "452000"
  },
  {
    "text": "we got stuff out but those things don't live in the ether these resources have to live somewhere and again you guys know this it's at CB or a net CD cluster",
    "start": "432670",
    "end": "440380"
  },
  {
    "text": "more commonly that CDs great cuz a lot of power and like reactivity of communities is just at CD features like",
    "start": "440380",
    "end": "445870"
  },
  {
    "text": "surfaced up through the API like they even write them themselves they just use that CD features it's distributed fault-tolerant all that good stuff and",
    "start": "445870",
    "end": "452490"
  },
  {
    "start": "452000",
    "end": "575000"
  },
  {
    "text": "that's why the API servers it's not magic it's just the heart and veins of communities that's how everything",
    "start": "452490",
    "end": "458170"
  },
  {
    "text": "connects up and talks to everything else but it's not doing anything for you know that magics really there when we want of",
    "start": "458170",
    "end": "463930"
  },
  {
    "text": "the scheduler scheduler is the best analogy I've heard is it's the Maitre D' of cribben at ease right so it's gonna",
    "start": "463930",
    "end": "469600"
  },
  {
    "text": "hook up to the api server with a long watch this is one of those SED features that's really cool it's kind of a",
    "start": "469600",
    "end": "474670"
  },
  {
    "text": "pub/sub event model so basically nothing communities if you're doing it right is like listing and checking for",
    "start": "474670",
    "end": "480220"
  },
  {
    "text": "differences and reacting it's just telling me hey I'm subscribed to all of these tell me about it and I'll react",
    "start": "480220",
    "end": "485620"
  },
  {
    "text": "instantly everything uses that so it's watchin API server and still watching for pods that need a place to live like",
    "start": "485620",
    "end": "491380"
  },
  {
    "text": "the maitre d sits at a restaurant says I got people coming in I got lots of tables I'm gonna make decision who sits",
    "start": "491380",
    "end": "496840"
  },
  {
    "text": "where so the scheduler says ok you you live there you live there there's lots of ways to influence that decision it's",
    "start": "496840",
    "end": "504220"
  },
  {
    "text": "really really highly configurable so I don't have time to cover all these this is basically things you put in the pod or node and then you give scheduler",
    "start": "504220",
    "end": "511000"
  },
  {
    "text": "information about what your service needs what your pod needs and it'll make smart decisions about where to run it but if that's not good enough for you",
    "start": "511000",
    "end": "517810"
  },
  {
    "text": "replace the scheduler write your own custom scheduler it's not that I've seen it done in a few lines of bash I think",
    "start": "517810",
    "end": "523539"
  },
  {
    "text": "it done as easy as pod dozen have a place to live first node next pod next node it's not smart but it you can do it",
    "start": "523540",
    "end": "530040"
  },
  {
    "text": "and it's really the custom schedule is really useful if you need to make sketch decisions based on outside information",
    "start": "530040",
    "end": "535360"
  },
  {
    "text": "that the regular scheduler just doesn't know about and if you are worried about doing that duple you can do both you can",
    "start": "535360",
    "end": "541630"
  },
  {
    "text": "run the coop scheduler and just let it do the default for all the pods and just per pod say oh no for this pod use that",
    "start": "541630",
    "end": "547810"
  },
  {
    "text": "scheduler to decide where he lives so that's really cool and that's the scheduler some Maitre D' controller",
    "start": "547810",
    "end": "553810"
  },
  {
    "text": "manager if the api service the heart this is the brain he's the thing that made all this stuff if we had time to",
    "start": "553810",
    "end": "559450"
  },
  {
    "text": "poke around in the API we didn't make almost any of this we made like two things on here and tons of other stuff",
    "start": "559450",
    "end": "565060"
  },
  {
    "text": "got created and it's the controller manager that's doing that but notice it's the controller manager and just",
    "start": "565060",
    "end": "570820"
  },
  {
    "text": "like a real life manager he's not doing any work himself he's in charge of the",
    "start": "570820",
    "end": "577149"
  },
  {
    "text": "guys that do the work inside the controller manager there's way more than three I'm just pointing out there's all",
    "start": "577149",
    "end": "582190"
  },
  {
    "text": "these core control loops that do that sit there and watch and make one specific thing one bit of logic happen",
    "start": "582190",
    "end": "587529"
  },
  {
    "text": "for kubernetes we've got the extension here this is you heard it this morning this is the operator pattern or custom controllers this is actually even easier",
    "start": "587529",
    "end": "594100"
  },
  {
    "text": "now at the meta controller which I'm really excited about this is almost always paired with custom resource definitions we're using this right now",
    "start": "594100",
    "end": "600370"
  },
  {
    "text": "to basically add notes to our cluster by creating a extra resource and kubernetes it says I want more notes and it'll make",
    "start": "600370",
    "end": "606220"
  },
  {
    "text": "them so all these controllers talk to a bunch of things in the API it is not a",
    "start": "606220",
    "end": "611920"
  },
  {
    "text": "one-to-one I'm just showing you there's lots and lots of these connections all the controllers are watching and making things happen these are the proactive",
    "start": "611920",
    "end": "618760"
  },
  {
    "text": "parts of kubernetes so for example a user creates a namespace a controller makes the service account another",
    "start": "618760",
    "end": "624880"
  },
  {
    "text": "controller makes a secret a user makes a deployment a controller makes a replica set another controller makes nodes user",
    "start": "624880",
    "end": "632529"
  },
  {
    "text": "makes a service a controller makes an endpoints object points it at the pods I didn't not going to cover endpoints",
    "start": "632529",
    "end": "637810"
  },
  {
    "text": "they're really just kind of the actual routing meat of services I just want you to see that this is the part that's",
    "start": "637810",
    "end": "643690"
  },
  {
    "text": "reactive this is when you say kubernetes quote unquote did something for me it's a controller in the controller manager",
    "start": "643690",
    "end": "649420"
  },
  {
    "text": "that did that and with kind of advanced logging and making and using our vac extensively you can actually get really",
    "start": "649420",
    "end": "655000"
  },
  {
    "text": "cool logs that say exactly which piece did what action to all your resources that's the controller manager the master",
    "start": "655000",
    "end": "661690"
  },
  {
    "start": "659000",
    "end": "757000"
  },
  {
    "text": "components we have the heart and the veins the maitre d and the brain these bottom two do sometimes run the Masters",
    "start": "661690",
    "end": "667120"
  },
  {
    "text": "I'll cover that in the cloud section but they're primarily node components the cubelets job is he hooks up to the API",
    "start": "667120",
    "end": "672880"
  },
  {
    "text": "server like everything else does and his job is to live on every single node and make containers real it's all he's there",
    "start": "672880",
    "end": "678070"
  },
  {
    "text": "for so he's watching said oh I'm on this node you have this pod that's scheduled there the maitre d said go sit there",
    "start": "678070",
    "end": "683260"
  },
  {
    "text": "somebody has to make it real and that is the cubelet he talks to your container runtime there's actually way more than",
    "start": "683260",
    "end": "688750"
  },
  {
    "text": "those two those just the two I'm gonna talk about again anything that uses the standard runtime interfaces can do this talk to the runtime creates the pod",
    "start": "688750",
    "end": "695980"
  },
  {
    "text": "makes the container real he also does cool things like liveness probes like your processes running that doesn't mean",
    "start": "695980",
    "end": "702130"
  },
  {
    "text": "you're alive and readiness checks like are you ready to receive traffic so he's constantly checking up on these containers and",
    "start": "702130",
    "end": "708190"
  },
  {
    "text": "reporting information back up to the API server it just makes containers real queue",
    "start": "708190",
    "end": "713380"
  },
  {
    "text": "proxy I'm gonna gloss way over this because it's in really depth in the network section in a second but basically his job is to talk to the API",
    "start": "713380",
    "end": "719589"
  },
  {
    "text": "server and everything connects to the mains and make services real so he's constantly watching for all services and",
    "start": "719589",
    "end": "725170"
  },
  {
    "text": "on every node every single service is remade real all the time by cube proxy so if something changes about the",
    "start": "725170",
    "end": "731320"
  },
  {
    "text": "underlying service a pod behind it changes goes away cue proxy makes it real no one comes in cue proxy makes it",
    "start": "731320",
    "end": "736720"
  },
  {
    "text": "real it's just this whole job and you can completely swap out cube proxy entirely different network providers do",
    "start": "736720",
    "end": "742510"
  },
  {
    "text": "this load balancing companies do this I've seen it done with just Linux kernel features there's a lot of ways to do",
    "start": "742510",
    "end": "747610"
  },
  {
    "text": "that and that's it that's the magic behind kubernetes quote unquote and",
    "start": "747610",
    "end": "753520"
  },
  {
    "text": "where all that stuff you made a couple things and where it all went and how it all worked let's talk about networking",
    "start": "753520",
    "end": "758950"
  },
  {
    "text": "in more detail so if the network admin I want to know that actually how things talk to each other I care I know we're",
    "start": "758950",
    "end": "765279"
  },
  {
    "text": "not supposed to but I do so we're gonna kind of take the basic stuff we made and starting with the pods explain the way",
    "start": "765279",
    "end": "771250"
  },
  {
    "start": "767000",
    "end": "797000"
  },
  {
    "text": "the networking works in kubernetes I'm just covering default communities networking the provider you use may change a lot of this but it might be you",
    "start": "771250",
    "end": "777820"
  },
  {
    "text": "know every pot in community is in fundamental tenant has a unique IP that pot is unique across the entire cluster pods live on nodes because they're",
    "start": "777820",
    "end": "784510"
  },
  {
    "text": "containers they have to run somewhere nodes have a unique IP across the entire cluster they also have a cider range",
    "start": "784510",
    "end": "790150"
  },
  {
    "text": "that says here's all the range that any pot on me has to be in that's mostly for routing reasons that can change entirely",
    "start": "790150",
    "end": "797190"
  },
  {
    "text": "based on the network provider but I'm going to cover the default they just get a big chunk of a larger",
    "start": "797190",
    "end": "802419"
  },
  {
    "text": "range so let's make some pods put on my notes all the IPS makes sense they line up like you expect them to and they have",
    "start": "802419",
    "end": "809499"
  },
  {
    "text": "to talk to each other they have to talk to each other with a network provider and I'm gonna go way more in depth here but this is the most replaced part of",
    "start": "809499",
    "end": "816009"
  },
  {
    "text": "kubernetes arguably to me if you've ever gone through the install page and looked at like all the tabs for network",
    "start": "816009",
    "end": "821109"
  },
  {
    "text": "providers and that's not even all of them there's tons of ways to do this and the reason is it's not that hard",
    "start": "821109",
    "end": "826449"
  },
  {
    "text": "it really isn't to be in our providing kubernetes you got to do three things you got to check these three boxes and",
    "start": "826449",
    "end": "831699"
  },
  {
    "text": "you are a valid network provider technically you have to make CNI plugins and but I'm talking about functionality so first all pods they're using",
    "start": "831699",
    "end": "839229"
  },
  {
    "text": "containers that use them interchangeably this is straight from the docs all containers pods communicate with all other without NAT so this is simple you",
    "start": "839229",
    "end": "846069"
  },
  {
    "text": "got lots of pods it's flat it's a very simple architecture you just need to be able to get from everything to",
    "start": "846069",
    "end": "851559"
  },
  {
    "text": "everything directly if this scares you as a security person do not worry I have some solutions for that in the power",
    "start": "851559",
    "end": "857409"
  },
  {
    "text": "user section but this is the network architecture it's very flat so you do that second rule all nodes communicate",
    "start": "857409",
    "end": "863709"
  },
  {
    "text": "with all their containers pods without NAT so nodes pods flat it's just",
    "start": "863709",
    "end": "869679"
  },
  {
    "text": "everything just talks to everything I put it here so it's easy to understand and to see but it's actually like this",
    "start": "869679",
    "end": "875349"
  },
  {
    "text": "right but again it's just a flat it's just everything needs to hit everything at a network layer this is a weird one",
    "start": "875349",
    "end": "880959"
  },
  {
    "text": "the IP nut container sees itself as the same IP everyone sees it as this basically means don't muncher ip's don't",
    "start": "880959",
    "end": "887139"
  },
  {
    "text": "let me think I'm sitting somewhere and everyone else thinks I'm somewhere else it's very confusing so just keep it",
    "start": "887139",
    "end": "892239"
  },
  {
    "text": "simple mostly according to the docs this is done to make it easier to go from a VM architecture to a pod architecture so",
    "start": "892239",
    "end": "900009"
  },
  {
    "text": "let you do those three things right you see and I plug in your network provider there are so many ways to do this so",
    "start": "900009",
    "end": "905609"
  },
  {
    "text": "we've covered the pods let's move on to services on the deep that like the details of how those work so when I make",
    "start": "905609",
    "end": "912069"
  },
  {
    "start": "906000",
    "end": "1180000"
  },
  {
    "text": "a service it's got a selector that points it at a subset of pods it's also got at least one port hopefully so it's",
    "start": "912069",
    "end": "918759"
  },
  {
    "text": "listening on 140 to one on the back end they can be different that's right it's abstraction and load balancing and everything else you could have multiples",
    "start": "918759",
    "end": "925689"
  },
  {
    "text": "they have to be unique listening but they can for do the same on the back end that's fine you can use the abstraction that way when I talk about one and",
    "start": "925689",
    "end": "931389"
  },
  {
    "text": "services have a type the llamo I use the basic section didn't specify type because",
    "start": "931389",
    "end": "936459"
  },
  {
    "text": "there's a default it's the bottom one here there's actually four types by the way I'm just cover than three big ones and I can start from the bottom up",
    "start": "936459",
    "end": "943269"
  },
  {
    "text": "because they all kind of build on each other so when we create a service even weather explicitly or without one it's",
    "start": "943269",
    "end": "948279"
  },
  {
    "text": "going to get definitely a cluster IP and you would expect cluster IP type when",
    "start": "948279",
    "end": "953889"
  },
  {
    "text": "you do that a controller in the controller manager says here let me give you a cluster IP that makes a lot of sense and kind of a illustrate what",
    "start": "953889",
    "end": "961720"
  },
  {
    "text": "that's for we're gonna make some webserver pods a cache pod and we need the webserver to use the cache we could point them",
    "start": "961720",
    "end": "967990"
  },
  {
    "text": "straight at the cache IP right like it's flat they don't get there but that sucks",
    "start": "967990",
    "end": "973000"
  },
  {
    "text": "because what happens if that pod goes away or we want to scale up the number or any of those other things we'd have to reconfigure so we're gonna use a",
    "start": "973000",
    "end": "979540"
  },
  {
    "text": "service that that makes a lot of sense so cluster IP service we care about the cluster IP we can then point our web",
    "start": "979540",
    "end": "985120"
  },
  {
    "text": "server pods at that and they'll get to the cache behind it and just point it at that IP and it never changes I do want",
    "start": "985120",
    "end": "990850"
  },
  {
    "text": "to point out real quick fallaciously they don't know you can use names if you're the DNS add-on in kubernetes is optional but really highly recommended",
    "start": "990850",
    "end": "997389"
  },
  {
    "text": "so you can go to service name name with the namespace specification full cluster qualification they're all valid ways to",
    "start": "997389",
    "end": "1003959"
  },
  {
    "text": "get to your service and they never change I'm gonna talk about ip's because everything just resolves up to that so",
    "start": "1003959",
    "end": "1009540"
  },
  {
    "text": "that's what it boils down to so we point a web service at the IP get to the cache pod and we never have to",
    "start": "1009540",
    "end": "1015089"
  },
  {
    "text": "change if something comes up new ones behind it we don't care we just used the abstraction let's talk about how this",
    "start": "1015089",
    "end": "1021209"
  },
  {
    "text": "hop looks alright so far we've just said that's magic well I care about the magic so we're gonna put these pods on",
    "start": "1021209",
    "end": "1026548"
  },
  {
    "text": "different nodes cuz they're gonna be on different nodes more often than not notice the positive on notes but the IP doesn't you can go to every machine in",
    "start": "1026549",
    "end": "1033209"
  },
  {
    "text": "your cluster list all the addresses you'll never find that IP anywhere it's not on an interface it's a target for IP",
    "start": "1033209",
    "end": "1039298"
  },
  {
    "text": "tables with again with default networking it's that's all it is it's a thing that says oh traffic coming out of here destined for that that means I need",
    "start": "1039299",
    "end": "1046260"
  },
  {
    "text": "to randomly assign you to the pods that are active behind it and the thing that makes those rules is the thing that makes service is real so we have the",
    "start": "1046260",
    "end": "1053820"
  },
  {
    "text": "cube proxy sitting there watching all the services and the endpoints and making that real so he talks iptables",
    "start": "1053820",
    "end": "1059429"
  },
  {
    "text": "something changes in the API server he makes it real scales up another change",
    "start": "1059429",
    "end": "1064620"
  },
  {
    "text": "he makes it real that's cute proxies whole job unless you replaced it and this might be a little different so that's the cluster IP let's",
    "start": "1064620",
    "end": "1072110"
  },
  {
    "text": "move on to node port so this is great inside the cluster right like pod - pod easy but not all our communication is",
    "start": "1072110",
    "end": "1078830"
  },
  {
    "text": "pod - pod we know that we need to get to it from the rest of our infrastructure and that is where at its most part service comes in so we'll make a node",
    "start": "1078830",
    "end": "1084919"
  },
  {
    "text": "port service like I said it builds on cluster IP it still gets a cluster IP but it also gets tada node port that",
    "start": "1084919",
    "end": "1091940"
  },
  {
    "text": "makes sense this no port comes from a weird high rain are you so it'll get that node port",
    "start": "1091940",
    "end": "1101750"
  },
  {
    "text": "node poor it means nodes so we take that",
    "start": "1101750",
    "end": "1106820"
  },
  {
    "text": "node port use IP tables to make just another basically another target another entry point into those same IP tables",
    "start": "1106820",
    "end": "1112429"
  },
  {
    "text": "rules that pod - pod communication uses except for that node port is available from other from anywhere else that can",
    "start": "1112429",
    "end": "1118490"
  },
  {
    "text": "get to that so you can take your clients pointed it out weird node port and they'll get load balance with normal methods from there",
    "start": "1118490",
    "end": "1123970"
  },
  {
    "text": "that's awesome but ugly right like you're not going to that right now if",
    "start": "1123970",
    "end": "1128990"
  },
  {
    "text": "you're looking at the slides or you look at them later like you're not gonna go weird node port I'm not gonna give you that URL so we need one more step we",
    "start": "1128990",
    "end": "1135350"
  },
  {
    "text": "need a load balancer type service you can this is really cloud specific by the",
    "start": "1135350",
    "end": "1140510"
  },
  {
    "text": "way these two are always there this one is cloud specific whether it's there and exactly the details of how it works but",
    "start": "1140510",
    "end": "1147020"
  },
  {
    "text": "in general you know we're going to suppose or in a supported cloud so make that load balancer type service a controlling the controller manager",
    "start": "1147020",
    "end": "1152630"
  },
  {
    "text": "because that's where all the real brain action goes sees that toxic cloud provider makes a load balancer points it",
    "start": "1152630",
    "end": "1159679"
  },
  {
    "text": "at the node port and then you can point your clients at that load balancer and you traverse in through a normal kind of",
    "start": "1159679",
    "end": "1164990"
  },
  {
    "text": "this can be static and not change and go to all the nodes as they scale up and down again that's a little different in",
    "start": "1164990",
    "end": "1171020"
  },
  {
    "text": "different clouds but this is the general ideas that you let the communities just make those load balancers provision them for you you can also just make node",
    "start": "1171020",
    "end": "1177140"
  },
  {
    "text": "ports and make their load balancers yourself if you want so that's how we get all the way through and at a network",
    "start": "1177140",
    "end": "1182720"
  },
  {
    "start": "1180000",
    "end": "1209000"
  },
  {
    "text": "layer that's kind of the meat of kubernetes functioning as we wander the cloud layer so as the cloud layer as a",
    "start": "1182720",
    "end": "1189049"
  },
  {
    "text": "cloud admin I'm a cloud ad I mean I care about execution care about where things live right like this is all well and good but I got to spin stuff up and in",
    "start": "1189049",
    "end": "1195470"
  },
  {
    "text": "kubernetes we make a big distinction between nodes worker nodes and master nodes they can be the same but in big",
    "start": "1195470",
    "end": "1201470"
  },
  {
    "text": "big environments they're not because there's a lot of security like safety that we get from separating them out",
    "start": "1201470",
    "end": "1206840"
  },
  {
    "text": "it's not elected like swarm so let's put our components places right all these represent pieces of communities code",
    "start": "1206840",
    "end": "1213260"
  },
  {
    "start": "1209000",
    "end": "1301000"
  },
  {
    "text": "that need to execute they need to have somewhere I'm gonna describe a kind of a default H a master scenario it may or",
    "start": "1213260",
    "end": "1219440"
  },
  {
    "text": "may not look different depending on what you're doing but we take the API server we run it everywhere that is not a",
    "start": "1219440",
    "end": "1224510"
  },
  {
    "text": "surprise to anybody right we take the scheduler we put it everywhere kind of",
    "start": "1224510",
    "end": "1229790"
  },
  {
    "text": "it's active the code is there on every single master all the time it's always running but they talk amongst themselves",
    "start": "1229790",
    "end": "1235549"
  },
  {
    "text": "to their local API servers and elect the leaders at you you're in charge the person in charge is the maitre d now and",
    "start": "1235549",
    "end": "1242120"
  },
  {
    "text": "the other two are just waiting for him to die they just they're just waiting so he dies if he doesn't check in they take",
    "start": "1242120",
    "end": "1248240"
  },
  {
    "text": "over his job we do the same thing in the controller manager you don't want more than one brain that would be really",
    "start": "1248240",
    "end": "1253730"
  },
  {
    "text": "confusing we're not what does stegosaurus has one in its tail so we elect again controller",
    "start": "1253730",
    "end": "1259429"
  },
  {
    "text": "manager runs on all the masters but if one of them explodes another one will take over they don't have to be the same",
    "start": "1259429",
    "end": "1264440"
  },
  {
    "text": "notice they are not the same you can you just need one active at a time I said it",
    "start": "1264440",
    "end": "1269809"
  },
  {
    "text": "was a node component but the cubelet really runs on all the masters so we also know that API server has to talk to",
    "start": "1269809",
    "end": "1276559"
  },
  {
    "text": "the data store has to put data somewhere and that's SED we could use as a cloud I mean I could use an STD service just",
    "start": "1276559",
    "end": "1282230"
  },
  {
    "text": "make a CD somewhere let a cloud deal with it and that's great or you know what we do and kind of hyper",
    "start": "1282230",
    "end": "1288230"
  },
  {
    "text": "converge you say ok every master runs a copy of SED and they all cluster monks themselves and then api server each one",
    "start": "1288230",
    "end": "1294290"
  },
  {
    "text": "uses its own local copy that way i have full control over at CD and i reduce the",
    "start": "1294290",
    "end": "1299330"
  },
  {
    "text": "number of VMS that i need we had our access that's backed by cloud load balancer pointed at the API servers we",
    "start": "1299330",
    "end": "1306919"
  },
  {
    "text": "point our cubelet all our node components at it and even our client libraries from outside the cluster if",
    "start": "1306919",
    "end": "1312350"
  },
  {
    "text": "you're inside the cluster pod to API server you actually go straight to their private IPS with like an endpoint like",
    "start": "1312350",
    "end": "1318020"
  },
  {
    "text": "it's kind of normal service discovery thing but if your components or an outside user this is what you should be",
    "start": "1318020",
    "end": "1323630"
  },
  {
    "text": "using because you get all the cloud magic of normal load balancing and fault tolerance when I said ingress rules I",
    "start": "1323630",
    "end": "1330140"
  },
  {
    "text": "didn't cover that in Orca section o if you notice this because it's it's really more of a cloud thing than the network thing ingress rules are just",
    "start": "1330140",
    "end": "1336650"
  },
  {
    "text": "rules right we made it before but we need something to make it real and the think ranae's makes that real is an ingress controller you will probably",
    "start": "1336650",
    "end": "1343310"
  },
  {
    "text": "hear a lot of operas for a lot of these all over the expo floor like there are lots of things that do this right now tons and tons of companies because it's",
    "start": "1343310",
    "end": "1349880"
  },
  {
    "text": "open they don't provide when they say go go make one so the rules have to have be enforced so we make ingress controllers",
    "start": "1349880",
    "end": "1354980"
  },
  {
    "text": "will also need a load balancer to get into them I'm gonna try back up eleventh ways we've done ingress just because",
    "start": "1354980",
    "end": "1361550"
  },
  {
    "text": "we've kind of learned some stuff as we went we've got nodes there are normal nodes I'm just not showing the other components we used at first we set aside",
    "start": "1361550",
    "end": "1369380"
  },
  {
    "text": "notice these are called ingress nodes we set aside a subset of our nodes and said okay these are ingress nodes and the",
    "start": "1369380",
    "end": "1374750"
  },
  {
    "text": "reason for that is we used a daemon set targeting just those nodes and created a host port mapping I didn't cover this",
    "start": "1374750",
    "end": "1380180"
  },
  {
    "text": "because you shouldn't do it but what we did there's there's a good thing right this is very direct this is like the",
    "start": "1380180",
    "end": "1385760"
  },
  {
    "text": "old-school docker port mapping this is like this port on the host goes straight to this port on this container which is",
    "start": "1385760",
    "end": "1391250"
  },
  {
    "text": "very direct and neat and if you're really sensitive you might want to do this but you get into port madness you have to start managing what ports things",
    "start": "1391250",
    "end": "1397760"
  },
  {
    "text": "are listening on and no one can you kind of have to listen on the same host port but we did this rain grace because we set aside some notes and that's a",
    "start": "1397760",
    "end": "1403190"
  },
  {
    "text": "straight hop but if you don't want to go through that you want to just create a like a load balancer type service you'll",
    "start": "1403190",
    "end": "1408440"
  },
  {
    "text": "get a node port that's no surprise you'll balance into that and then you'll hop around from your service the",
    "start": "1408440",
    "end": "1414050"
  },
  {
    "text": "downside is you've got balance twice you got a double hop you get load balance - once at this end and then the",
    "start": "1414050",
    "end": "1419180"
  },
  {
    "text": "controller's going to bounce you again somewhere else potentially most records honestly it's fine but that's something",
    "start": "1419180",
    "end": "1424730"
  },
  {
    "text": "to be aware of if you're not jumping straight in you might have to get jumped twice we then take your clients point",
    "start": "1424730",
    "end": "1430460"
  },
  {
    "text": "them at that and you're almost there right we've got to our controller but it's enforcing rules that point to a service so we have one last hop to get",
    "start": "1430460",
    "end": "1437390"
  },
  {
    "text": "to our service so we got our service our pods there even on some more nodes that's fine once you've hopped in from",
    "start": "1437390",
    "end": "1443810"
  },
  {
    "text": "the load balancer to your ingress controller service to your ingress controller it can just do normal standard cluster load balancing to the",
    "start": "1443810",
    "end": "1449930"
  },
  {
    "text": "back-end services inside your cluster and you've gotten all the way through that's what you're doing right now if you're looking at the slides on your",
    "start": "1449930",
    "end": "1455360"
  },
  {
    "text": "phone so I'm going to the Linux section I have to skip a lot of this because of",
    "start": "1455360",
    "end": "1460700"
  },
  {
    "start": "1456000",
    "end": "1691000"
  },
  {
    "text": "time but I'm gonna cover one part of container essentials because I think you need to understand that to understand",
    "start": "1460700",
    "end": "1465929"
  },
  {
    "text": "docker and kubernetes and that is Linux kernel namespaces again I'm gonna just focus on this one this is not kubernetes",
    "start": "1465929",
    "end": "1472590"
  },
  {
    "text": "namespaces this is Linux kernel namespaces meaning that it's ways of isolating processes in Linux so you take",
    "start": "1472590",
    "end": "1478590"
  },
  {
    "text": "your application your process really but we're gonna talk about containers and you can isolate it in a bunch of ways you can stick it in its own process",
    "start": "1478590",
    "end": "1484350"
  },
  {
    "text": "namespace its own file system namespace its own network and file and it's really all of them right like really when you",
    "start": "1484350",
    "end": "1490769"
  },
  {
    "text": "make a docker container you're getting split all of the ways but we really care about the cool part of features is that",
    "start": "1490769",
    "end": "1496139"
  },
  {
    "text": "it's not one-to-one it's not one container one namespace you can join other containers or processes into an",
    "start": "1496139",
    "end": "1501360"
  },
  {
    "text": "existing one this is how you take that one container and you make your pod you just join all these containers into an",
    "start": "1501360",
    "end": "1507360"
  },
  {
    "text": "existing namespace so they can share that one IP and then in the entire cluster I'll kind of go over how docker",
    "start": "1507360",
    "end": "1514049"
  },
  {
    "text": "does that I have to skip the rest of this needless to say see groups are the Linux way that you split up resources and it's",
    "start": "1514049",
    "end": "1519480"
  },
  {
    "text": "also provides some built in accounting and stat management stuff again watch the video if you kind of want more details on this and even file systems I",
    "start": "1519480",
    "end": "1526799"
  },
  {
    "text": "just put in here cuz they're neat the way they work and the way they save space again I don't have time for them I do want to break down the notes though",
    "start": "1526799",
    "end": "1533700"
  },
  {
    "text": "so we've covered coop rocks in the network section we care about the cubelet we care about running things right so it's watching API server it's",
    "start": "1533700",
    "end": "1539519"
  },
  {
    "text": "checking see hey or do I have pods that you want on the node I'm on ok you do let me make it we're gonna make an",
    "start": "1539519",
    "end": "1545519"
  },
  {
    "text": "interesting pod just for argument's sake we're gonna put nginx in their previous exporter envoy we're putting all the",
    "start": "1545519",
    "end": "1551879"
  },
  {
    "text": "containers in there because I want to show you how they share an IP address so we're going to talk to docker docker is",
    "start": "1551879",
    "end": "1558119"
  },
  {
    "text": "the main right now kubernetes way like most clusters I think are running docker that's safe to say again it's not the",
    "start": "1558119",
    "end": "1563759"
  },
  {
    "text": "only one there's lots of options but I'm gonna talk about how it does it so when it sees that you want that pod running it's gonna talk to docker see they'll",
    "start": "1563759",
    "end": "1570119"
  },
  {
    "text": "check the pod and it's gonna first make this weird infra container that I'll cover in a second this is why if you go",
    "start": "1570119",
    "end": "1575610"
  },
  {
    "text": "on any criminales noda you do a docker PS you get about twice as many containers on theirs you thought you needed it's making this weird infer",
    "start": "1575610",
    "end": "1582929"
  },
  {
    "text": "container it's joining all of the other containers into the network namespace of that infra which is how they all share",
    "start": "1582929",
    "end": "1589080"
  },
  {
    "text": "one address and the port part of infra is it's really just this tiny piece of code whose whole job it is to be there",
    "start": "1589080",
    "end": "1594389"
  },
  {
    "text": "and not die that's it just stay alive so I have to restart you recreate",
    "start": "1594389",
    "end": "1599730"
  },
  {
    "text": "so you can always keep your address then you join everybody else in I don't have time for CNI it's kind of that standard",
    "start": "1599730",
    "end": "1605700"
  },
  {
    "text": "way that the IP address gets discovered rocket is the other big alternative for",
    "start": "1605700",
    "end": "1611309"
  },
  {
    "text": "kubernetes and there's some important and cool differences between using docker or using rocket so it can do CNI",
    "start": "1611309",
    "end": "1617909"
  },
  {
    "text": "the normal way also seeing I came out of rocket so you don't have to have the cubelet do it it can be native but more",
    "start": "1617909",
    "end": "1624570"
  },
  {
    "text": "importantly that whole song and dance at the end for container yeah it's gone Rockets pod native rocket doesn't it",
    "start": "1624570",
    "end": "1631289"
  },
  {
    "text": "slowest thing is already a pod not a container so when you want to create a pod in rocket you just create a pod and",
    "start": "1631289",
    "end": "1636299"
  },
  {
    "text": "rocket also you spin it off meaning there's no long-running daemon there's",
    "start": "1636299",
    "end": "1641519"
  },
  {
    "text": "no dock or rocket thing just sitting there the whole time because you kick it off and it is self-contained so if you",
    "start": "1641519",
    "end": "1647039"
  },
  {
    "text": "want to make another pod spin off another rocket it's all file systems and whatnot to actually manage it and also",
    "start": "1647039",
    "end": "1654000"
  },
  {
    "text": "last thing you can do hypervisor isolation with the rocket you just annotate the pod say hey your stage 1 which is a rocket term basically run",
    "start": "1654000",
    "end": "1660840"
  },
  {
    "text": "this thing inside of a mini super lightweight VM that's so if you want some if you're scared of container isolation and you want some extra stuff",
    "start": "1660840",
    "end": "1667049"
  },
  {
    "text": "there's limitations but you can absolutely do it and you can do it for just some pods I don't really have time",
    "start": "1667049",
    "end": "1673350"
  },
  {
    "text": "for locking we know we use queue catalogs mostly just want to you understand that it's connecting all the way through to stream your data directly",
    "start": "1673350",
    "end": "1680990"
  },
  {
    "text": "you can also basically any log and drive it supports docker supports kubernetes you just hopefully grab some metadata on",
    "start": "1680990",
    "end": "1687659"
  },
  {
    "text": "your way out so you can tag your messages and filter them let's get to the power user section",
    "start": "1687659",
    "end": "1692789"
  },
  {
    "start": "1691000",
    "end": "1994000"
  },
  {
    "text": "what this is is kind of like this cool grab bag of fun kubernetes features I'm",
    "start": "1692789",
    "end": "1697860"
  },
  {
    "text": "gonna add a bunch of stuff on top of my normal deployment with no code change I'm gonna add more features without",
    "start": "1697860",
    "end": "1703500"
  },
  {
    "text": "having to change anything in my image so go ahead if you want to reload that or",
    "start": "1703500",
    "end": "1708990"
  },
  {
    "text": "just add on to the slash markdown I'm gonna kick off the power demo and it's",
    "start": "1708990",
    "end": "1716880"
  },
  {
    "text": "doing an apply so I'm a power user right I'm not gonna create in one at a time just gonna apply the whole directory which says create or update just do we",
    "start": "1716880",
    "end": "1722490"
  },
  {
    "text": "have to do and then hopefully in about a minute or so you guys should have that",
    "start": "1722490",
    "end": "1727529"
  },
  {
    "text": "markdown page running and you'll have some links that break down basically every feature that I'm gonna",
    "start": "1727529",
    "end": "1732580"
  },
  {
    "text": "show you here in a second is like explicitly shown how you do it in markdown in the examples and pretty well",
    "start": "1732580",
    "end": "1738520"
  },
  {
    "text": "commented so I'm just likes it just fun features that I want you to be aware of",
    "start": "1738520",
    "end": "1743560"
  },
  {
    "text": "security context is a feature where you can basically define a bunch of execution rules about your what the",
    "start": "1743560",
    "end": "1750310"
  },
  {
    "text": "runtime information for your pods and containers should be of things they can and can't do you create that apply it at the pod layer or the container layer or",
    "start": "1750310",
    "end": "1757150"
  },
  {
    "text": "both they can even be different for different containers in the same pod and just tell the cuba extra information security stuff about how you want to run",
    "start": "1757150",
    "end": "1763210"
  },
  {
    "text": "your pod network policy is that way if you're scared of the flat network architecture that's that way that you",
    "start": "1763210",
    "end": "1769510"
  },
  {
    "text": "create some rules that block access to different things and it's just labels it's just yeah mo",
    "start": "1769510",
    "end": "1775090"
  },
  {
    "text": "policy is just rules by the way you need something on top that enforces network policy there's a lot of options for that",
    "start": "1775090",
    "end": "1780340"
  },
  {
    "text": "you just need to go find one that will read those rules and make them happen but you can define pay pods with these",
    "start": "1780340",
    "end": "1785950"
  },
  {
    "text": "labels can only talk to pods with these labels on this pores and you can start walking things down in a reactive way",
    "start": "1785950",
    "end": "1791200"
  },
  {
    "text": "where you don't care about the details you just say make this happen and that's explicitly decoupled from the network model download API is really cool it's a",
    "start": "1791200",
    "end": "1798940"
  },
  {
    "text": "way of taking pod this is not all of it there's you can labels annotations everything but you take metadata about your running containers feed them",
    "start": "1798940",
    "end": "1805360"
  },
  {
    "text": "through to the containers at runtime if you click either the proxy links in the markdown page they will spit back their pod information and their node",
    "start": "1805360",
    "end": "1811420"
  },
  {
    "text": "information because they're getting it from the downward api at runtime config maps I didn't cover they're just key",
    "start": "1811420",
    "end": "1817990"
  },
  {
    "text": "value data pairs config maps and secrets they're handled a little differently but that's all they are you can mount them",
    "start": "1817990",
    "end": "1823300"
  },
  {
    "text": "through to your containers as volumes and you can do it it's even live which is really cool so the markdown you're",
    "start": "1823300",
    "end": "1828520"
  },
  {
    "text": "looking at right now is from a config map and if I go change that right now in the config map in about a minute it will change and I don't have to restart the",
    "start": "1828520",
    "end": "1834730"
  },
  {
    "text": "pods because it's refreshed live you can also take those same key values and put them in as environment variables so your",
    "start": "1834730",
    "end": "1840910"
  },
  {
    "text": "docker images that expect that as configuration will work just fine affinity is one of the things I wish I",
    "start": "1840910",
    "end": "1846340"
  },
  {
    "text": "had time to cover it's one of those cool advanced scheduling features that says here's how these pods relate to each",
    "start": "1846340",
    "end": "1851350"
  },
  {
    "text": "other I want this pod to always be scheduled next to this pod no matter where you put it if one's there put the other one there tightly coupled you know like put",
    "start": "1851350",
    "end": "1858160"
  },
  {
    "text": "them right together all the time just extra information for the scheduler to tell it what you want from it",
    "start": "1858160",
    "end": "1863340"
  },
  {
    "text": "and it will always it won't move them around but it'll always make sure that if one's there the others there you can also loosely couple and say try to but I",
    "start": "1863340",
    "end": "1870180"
  },
  {
    "text": "don't care if you have to split it up like and you can wait that even you can do the same thing for nodes this pot has",
    "start": "1870180",
    "end": "1875670"
  },
  {
    "text": "to be on a node like this or try to put a pot on a node like this useful if you've got workloads that have to use",
    "start": "1875670",
    "end": "1880860"
  },
  {
    "text": "like GPUs where you would say you have to reason with the GPO you're not gonna work ants - IDs the opposite of all those",
    "start": "1880860",
    "end": "1887070"
  },
  {
    "text": "things I just said where you have hard and soft things that don't like each other usually they're paired actually so",
    "start": "1887070",
    "end": "1894570"
  },
  {
    "text": "you'll see anti affinity if you have like a GPU node you'd want hard affinity for your GP or workloads and hard anti",
    "start": "1894570",
    "end": "1899910"
  },
  {
    "text": "affinity for your non GPU workloads so you just reserve that and that is the",
    "start": "1899910",
    "end": "1905670"
  },
  {
    "text": "power user section move on to the credits so I'll use Suzie as my presentation software it's open source",
    "start": "1905670",
    "end": "1910830"
  },
  {
    "text": "you make an SVG you can animate every layer independently and it just spits out web server files so if you like",
    "start": "1910830",
    "end": "1916860"
  },
  {
    "text": "press you feel like Prezi but you want to pay for it cuz we're all open source here or you just want really hard like",
    "start": "1916860",
    "end": "1923850"
  },
  {
    "text": "you do make an SVG this is so cool and it can be as hard or as easy you want it to be prior to each class on that by now",
    "start": "1923850",
    "end": "1929690"
  },
  {
    "text": "all the logos I used are properties of their respective companies and open clipart was immensely helpful in all of",
    "start": "1929690",
    "end": "1936150"
  },
  {
    "text": "the art and the kind of the diagrams and everything that I made I just stole a lot of this and altered it so highly",
    "start": "1936150",
    "end": "1941490"
  },
  {
    "text": "recommend you use that or contribute to it and I do have some time for I think I have a few minutes for questions yeah I",
    "start": "1941490",
    "end": "1947760"
  },
  {
    "text": "have a couple minutes and here's all the links I will keep this up as long as I can I'll probably move it to one of those free Red Hat clusters at some",
    "start": "1947760",
    "end": "1953910"
  },
  {
    "text": "point so why not if you want the video",
    "start": "1953910",
    "end": "1959130"
  },
  {
    "text": "it may or may not be there they told me they're trying to finish editing so it there's a placeholder you can always go",
    "start": "1959130",
    "end": "1964440"
  },
  {
    "text": "to that link and that link will always be the right one even when I redirects you to so anybody have any questions yes",
    "start": "1964440",
    "end": "1972800"
  },
  {
    "text": "so um I don't know I have to double-check on that it might yeah I mean it might just be a",
    "start": "1977120",
    "end": "1983340"
  },
  {
    "text": "detail I missed so yeah thanks for coming feel free to come talk to me",
    "start": "1983340",
    "end": "1988840"
  },
  {
    "text": "[Applause]",
    "start": "1988840",
    "end": "1996260"
  }
]