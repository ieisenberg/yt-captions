[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "bonjour coup con eu",
    "start": "2720",
    "end": "4400"
  },
  {
    "text": "and welcome to our demo theater as joe",
    "start": "4400",
    "end": "7279"
  },
  {
    "text": "beda our principal engineer at vmware",
    "start": "7279",
    "end": "9760"
  },
  {
    "text": "co-creator of google compute engine and",
    "start": "9760",
    "end": "12559"
  },
  {
    "text": "first ever kubernetes project committer",
    "start": "12559",
    "end": "14960"
  },
  {
    "text": "sums up why we all love open source i",
    "start": "14960",
    "end": "17920"
  },
  {
    "text": "don't care who you are",
    "start": "17920",
    "end": "19359"
  },
  {
    "text": "there are more smart people outside of",
    "start": "19359",
    "end": "21199"
  },
  {
    "text": "your company than there are smart people",
    "start": "21199",
    "end": "23279"
  },
  {
    "text": "inside of your company our two",
    "start": "23279",
    "end": "25279"
  },
  {
    "text": "presenters today",
    "start": "25279",
    "end": "26480"
  },
  {
    "text": "show cluster api and valero",
    "start": "26480",
    "end": "30000"
  },
  {
    "text": "our first presenter kendrick coleman is",
    "start": "30000",
    "end": "32238"
  },
  {
    "text": "an open source",
    "start": "32239",
    "end": "33280"
  },
  {
    "text": "technical product manager he figures out",
    "start": "33280",
    "end": "36000"
  },
  {
    "text": "new and interesting ways",
    "start": "36000",
    "end": "37680"
  },
  {
    "text": "to run open source cloud-native",
    "start": "37680",
    "end": "39600"
  },
  {
    "text": "infrastructure tools",
    "start": "39600",
    "end": "40879"
  },
  {
    "text": "with vmware products kendrick is",
    "start": "40879",
    "end": "43680"
  },
  {
    "text": "involved",
    "start": "43680",
    "end": "44160"
  },
  {
    "text": "with the kubernetes community and",
    "start": "44160",
    "end": "46320"
  },
  {
    "text": "frequently blogs",
    "start": "46320",
    "end": "47440"
  },
  {
    "text": "about what he's learning he has spoken",
    "start": "47440",
    "end": "49920"
  },
  {
    "text": "at dockercon",
    "start": "49920",
    "end": "50960"
  },
  {
    "text": "open source summit containercon",
    "start": "50960",
    "end": "52719"
  },
  {
    "text": "cloudnativecon and many more",
    "start": "52719",
    "end": "55120"
  },
  {
    "text": "in his free time he's hosting the",
    "start": "55120",
    "end": "57360"
  },
  {
    "text": "bourbon pursuit podcast",
    "start": "57360",
    "end": "59120"
  },
  {
    "text": "kendrick tweets at kendrick coleman",
    "start": "59120",
    "end": "63440"
  },
  {
    "start": "62000",
    "end": "83000"
  },
  {
    "text": "hello i'm kenny coleman a senior",
    "start": "63680",
    "end": "65760"
  },
  {
    "text": "technical marketing manager at vmware",
    "start": "65760",
    "end": "67600"
  },
  {
    "text": "focused on the tonzu kubernetes grid",
    "start": "67600",
    "end": "69680"
  },
  {
    "text": "service for vsphere",
    "start": "69680",
    "end": "71040"
  },
  {
    "text": "we'll be looking at the tonzu kubernetes",
    "start": "71040",
    "end": "73040"
  },
  {
    "text": "grid service for vsphere",
    "start": "73040",
    "end": "74560"
  },
  {
    "text": "before getting started and using the",
    "start": "74560",
    "end": "76080"
  },
  {
    "text": "service it's good to have an",
    "start": "76080",
    "end": "77520"
  },
  {
    "text": "understanding of the kubernetes",
    "start": "77520",
    "end": "78960"
  },
  {
    "text": "architecture",
    "start": "78960",
    "end": "79840"
  },
  {
    "text": "and the underlying technology that is",
    "start": "79840",
    "end": "81680"
  },
  {
    "text": "making all this possible",
    "start": "81680",
    "end": "83280"
  },
  {
    "start": "83000",
    "end": "128000"
  },
  {
    "text": "we'll start at the lowest layer and zoom",
    "start": "83280",
    "end": "85200"
  },
  {
    "text": "out thereby painting a picture of how",
    "start": "85200",
    "end": "87439"
  },
  {
    "text": "all these are interconnected",
    "start": "87439",
    "end": "89280"
  },
  {
    "text": "this is an introduction and not a deep",
    "start": "89280",
    "end": "91200"
  },
  {
    "text": "dive into the individual components",
    "start": "91200",
    "end": "93200"
  },
  {
    "text": "such as networking or storage but it is",
    "start": "93200",
    "end": "95680"
  },
  {
    "text": "meant to be a high level overview for",
    "start": "95680",
    "end": "97439"
  },
  {
    "text": "anyone getting started",
    "start": "97439",
    "end": "99280"
  },
  {
    "text": "there are multiple layers in this",
    "start": "99280",
    "end": "100640"
  },
  {
    "text": "architecture first is taking a look at",
    "start": "100640",
    "end": "102799"
  },
  {
    "text": "the kubernetes architecture",
    "start": "102799",
    "end": "104479"
  },
  {
    "text": "this will not go deep into the services",
    "start": "104479",
    "end": "106320"
  },
  {
    "text": "or how storage or networking work but",
    "start": "106320",
    "end": "108000"
  },
  {
    "text": "instead just focus on the core",
    "start": "108000",
    "end": "109439"
  },
  {
    "text": "components",
    "start": "109439",
    "end": "110159"
  },
  {
    "text": "that satisfy a kubernetes cluster at the",
    "start": "110159",
    "end": "112399"
  },
  {
    "text": "infrastructure level next we will look",
    "start": "112399",
    "end": "114479"
  },
  {
    "text": "at the cluster api architecture",
    "start": "114479",
    "end": "116320"
  },
  {
    "text": "and what this technology is doing to",
    "start": "116320",
    "end": "118159"
  },
  {
    "text": "automate kubernetes deployments",
    "start": "118159",
    "end": "120159"
  },
  {
    "text": "finally we will take a look at the",
    "start": "120159",
    "end": "121759"
  },
  {
    "text": "vsphere with kubernetes environment",
    "start": "121759",
    "end": "123520"
  },
  {
    "text": "to see how these components all relate",
    "start": "123520",
    "end": "125280"
  },
  {
    "text": "to what we've learned thus far",
    "start": "125280",
    "end": "127200"
  },
  {
    "text": "alright let's get started at the end of",
    "start": "127200",
    "end": "129759"
  },
  {
    "start": "128000",
    "end": "346000"
  },
  {
    "text": "the day",
    "start": "129759",
    "end": "130399"
  },
  {
    "text": "what is it that we're trying to",
    "start": "130399",
    "end": "131440"
  },
  {
    "text": "accomplish well it's to get this",
    "start": "131440",
    "end": "133680"
  },
  {
    "text": "containerized application running",
    "start": "133680",
    "end": "135840"
  },
  {
    "text": "if you're watching this then it's likely",
    "start": "135840",
    "end": "137680"
  },
  {
    "text": "you're already familiar with what a",
    "start": "137680",
    "end": "138879"
  },
  {
    "text": "container is",
    "start": "138879",
    "end": "139680"
  },
  {
    "text": "and as well as a container time",
    "start": "139680",
    "end": "141760"
  },
  {
    "text": "kubernetes adds a topology",
    "start": "141760",
    "end": "143440"
  },
  {
    "text": "and combines features to make it one of",
    "start": "143440",
    "end": "145120"
  },
  {
    "text": "the best suited container schedulers",
    "start": "145120",
    "end": "146800"
  },
  {
    "text": "available",
    "start": "146800",
    "end": "147680"
  },
  {
    "text": "in the context of kubernetes a container",
    "start": "147680",
    "end": "150000"
  },
  {
    "text": "is not the lowest level object",
    "start": "150000",
    "end": "152239"
  },
  {
    "text": "instead it's the pod a pod can have one",
    "start": "152239",
    "end": "155200"
  },
  {
    "text": "or more containers",
    "start": "155200",
    "end": "156000"
  },
  {
    "text": "within it if you have an application",
    "start": "156000",
    "end": "157760"
  },
  {
    "text": "that has multiple services or layers",
    "start": "157760",
    "end": "159680"
  },
  {
    "text": "that all have their own container",
    "start": "159680",
    "end": "161280"
  },
  {
    "text": "the pod doesn't have to make up the",
    "start": "161280",
    "end": "162879"
  },
  {
    "text": "entire application the application can",
    "start": "162879",
    "end": "165200"
  },
  {
    "text": "be spread out amongst",
    "start": "165200",
    "end": "166319"
  },
  {
    "text": "multiple pods or even across traditional",
    "start": "166319",
    "end": "168480"
  },
  {
    "text": "virtual machines as well",
    "start": "168480",
    "end": "170000"
  },
  {
    "text": "kubernetes gives you the flexibility to",
    "start": "170000",
    "end": "171680"
  },
  {
    "text": "architect the application",
    "start": "171680",
    "end": "173120"
  },
  {
    "text": "that best fits your environment and",
    "start": "173120",
    "end": "175040"
  },
  {
    "text": "needs",
    "start": "175040",
    "end": "176480"
  },
  {
    "text": "a pod has to run somewhere and this is",
    "start": "176480",
    "end": "178640"
  },
  {
    "text": "the first part of where the kubernetes",
    "start": "178640",
    "end": "180239"
  },
  {
    "text": "infrastructure layer",
    "start": "180239",
    "end": "181200"
  },
  {
    "text": "comes into play with the kubernetes",
    "start": "181200",
    "end": "183040"
  },
  {
    "text": "worker or node",
    "start": "183040",
    "end": "184480"
  },
  {
    "text": "the kubernetes infrastructure is made up",
    "start": "184480",
    "end": "186400"
  },
  {
    "text": "of only a few pieces",
    "start": "186400",
    "end": "187760"
  },
  {
    "text": "but just like the vsphere esxi hosts",
    "start": "187760",
    "end": "190000"
  },
  {
    "text": "that are responsible for running your",
    "start": "190000",
    "end": "191280"
  },
  {
    "text": "virtualized applications",
    "start": "191280",
    "end": "192879"
  },
  {
    "text": "kubernetes workers are responsible for",
    "start": "192879",
    "end": "194879"
  },
  {
    "text": "running your containerized applications",
    "start": "194879",
    "end": "197920"
  },
  {
    "text": "the kubernetes worker can run",
    "start": "197920",
    "end": "199280"
  },
  {
    "text": "multiple pods and the size and the",
    "start": "199280",
    "end": "201200"
  },
  {
    "text": "amount of the pods that can run on a",
    "start": "201200",
    "end": "202720"
  },
  {
    "text": "worker",
    "start": "202720",
    "end": "203280"
  },
  {
    "text": "are going to depend on the size of the",
    "start": "203280",
    "end": "205040"
  },
  {
    "text": "worker itself this is analogous to what",
    "start": "205040",
    "end": "207440"
  },
  {
    "text": "we experienced with vsphere today",
    "start": "207440",
    "end": "209200"
  },
  {
    "text": "on how big our esxi hosts are next",
    "start": "209200",
    "end": "212319"
  },
  {
    "text": "is the kubernetes master or controller",
    "start": "212319",
    "end": "214640"
  },
  {
    "text": "like vcenter this is the brain of the",
    "start": "214640",
    "end": "216640"
  },
  {
    "text": "kubernetes deployment",
    "start": "216640",
    "end": "218000"
  },
  {
    "text": "it is packed with services that are",
    "start": "218000",
    "end": "219599"
  },
  {
    "text": "required for keeping the cluster",
    "start": "219599",
    "end": "221040"
  },
  {
    "text": "functioning",
    "start": "221040",
    "end": "221680"
  },
  {
    "text": "and carries all the components for",
    "start": "221680",
    "end": "223200"
  },
  {
    "text": "deploying applications to the workers",
    "start": "223200",
    "end": "225200"
  },
  {
    "text": "themselves",
    "start": "225200",
    "end": "226480"
  },
  {
    "text": "the api server is the central",
    "start": "226480",
    "end": "228000"
  },
  {
    "text": "communication hub it provides",
    "start": "228000",
    "end": "229920"
  },
  {
    "text": "rest based services for the components",
    "start": "229920",
    "end": "231760"
  },
  {
    "text": "to talk to one another",
    "start": "231760",
    "end": "232959"
  },
  {
    "text": "as well as user interaction when",
    "start": "232959",
    "end": "234400"
  },
  {
    "text": "deploying applications the api server",
    "start": "234400",
    "end": "236879"
  },
  {
    "text": "provides the front end for the cluster",
    "start": "236879",
    "end": "238400"
  },
  {
    "text": "by exposing the kubernetes api",
    "start": "238400",
    "end": "240720"
  },
  {
    "text": "internal components such as the",
    "start": "240720",
    "end": "242159"
  },
  {
    "text": "scheduler or the nodes and external",
    "start": "242159",
    "end": "243760"
  },
  {
    "text": "components such as cube cuddle or api",
    "start": "243760",
    "end": "245519"
  },
  {
    "text": "driven systems",
    "start": "245519",
    "end": "246480"
  },
  {
    "text": "can all make calls to the api server the",
    "start": "246480",
    "end": "249280"
  },
  {
    "text": "kubernetes controller manager is a",
    "start": "249280",
    "end": "250799"
  },
  {
    "text": "service that watches the shared state of",
    "start": "250799",
    "end": "252400"
  },
  {
    "text": "the cluster",
    "start": "252400",
    "end": "253200"
  },
  {
    "text": "through the api server and makes changes",
    "start": "253200",
    "end": "255439"
  },
  {
    "text": "attempting to move the current state",
    "start": "255439",
    "end": "256959"
  },
  {
    "text": "towards",
    "start": "256959",
    "end": "257440"
  },
  {
    "text": "a desired state the controller manager",
    "start": "257440",
    "end": "259840"
  },
  {
    "text": "runs all the kubernetes reconciliation",
    "start": "259840",
    "end": "261840"
  },
  {
    "text": "state machine services and each",
    "start": "261840",
    "end": "263600"
  },
  {
    "text": "controller provides a control loop",
    "start": "263600",
    "end": "265440"
  },
  {
    "text": "that evaluates the current state of the",
    "start": "265440",
    "end": "266960"
  },
  {
    "text": "system compares the current state to the",
    "start": "266960",
    "end": "269120"
  },
  {
    "text": "desired state",
    "start": "269120",
    "end": "270160"
  },
  {
    "text": "and then takes action to reconcile the",
    "start": "270160",
    "end": "272240"
  },
  {
    "text": "differences",
    "start": "272240",
    "end": "273440"
  },
  {
    "text": "the scheduler is what will watch for new",
    "start": "273440",
    "end": "275199"
  },
  {
    "text": "pods as they are requested and created",
    "start": "275199",
    "end": "277919"
  },
  {
    "text": "etcd pretty much becomes our database it",
    "start": "277919",
    "end": "280479"
  },
  {
    "text": "saves the current state of the cluster",
    "start": "280479",
    "end": "282880"
  },
  {
    "text": "the control plane of kubernetes can",
    "start": "282880",
    "end": "284320"
  },
  {
    "text": "scale as well there's a lot more complex",
    "start": "284320",
    "end": "286560"
  },
  {
    "text": "configurations that need to take place",
    "start": "286560",
    "end": "288560"
  },
  {
    "text": "that isn't mentioned in this diagram",
    "start": "288560",
    "end": "290080"
  },
  {
    "text": "such as front ending all these",
    "start": "290080",
    "end": "291360"
  },
  {
    "text": "additional master nodes with a load",
    "start": "291360",
    "end": "293199"
  },
  {
    "text": "balancer but ncd will replicate changes",
    "start": "293199",
    "end": "295600"
  },
  {
    "text": "across",
    "start": "295600",
    "end": "296000"
  },
  {
    "text": "the masternodes given in a highly",
    "start": "296000",
    "end": "298000"
  },
  {
    "text": "available situation",
    "start": "298000",
    "end": "299600"
  },
  {
    "text": "the amount of worker nodes needed is",
    "start": "299600",
    "end": "301199"
  },
  {
    "text": "based on the resources needed to run the",
    "start": "301199",
    "end": "302960"
  },
  {
    "text": "applications",
    "start": "302960",
    "end": "304080"
  },
  {
    "text": "these can scale as needed as well all of",
    "start": "304080",
    "end": "306560"
  },
  {
    "text": "this combined represents a single",
    "start": "306560",
    "end": "308400"
  },
  {
    "text": "kubernetes cluster at the infrastructure",
    "start": "308400",
    "end": "310720"
  },
  {
    "text": "level",
    "start": "310720",
    "end": "311280"
  },
  {
    "text": "these are all virtual machines running",
    "start": "311280",
    "end": "313440"
  },
  {
    "text": "on top of vsphere",
    "start": "313440",
    "end": "315120"
  },
  {
    "text": "now that we understand what a cluster is",
    "start": "315120",
    "end": "316560"
  },
  {
    "text": "comprised of we need to know how it's",
    "start": "316560",
    "end": "318639"
  },
  {
    "text": "built",
    "start": "318639",
    "end": "319280"
  },
  {
    "text": "there are a lot of blogs and articles",
    "start": "319280",
    "end": "321360"
  },
  {
    "text": "github repos and tools available",
    "start": "321360",
    "end": "323520"
  },
  {
    "text": "that cover everything from starting at",
    "start": "323520",
    "end": "325199"
  },
  {
    "text": "the lowest level by installing",
    "start": "325199",
    "end": "326880"
  },
  {
    "text": "individual services on linux",
    "start": "326880",
    "end": "328720"
  },
  {
    "text": "and creating tls certificates up to the",
    "start": "328720",
    "end": "331039"
  },
  {
    "text": "highest point where everything is",
    "start": "331039",
    "end": "332320"
  },
  {
    "text": "deployed automatically",
    "start": "332320",
    "end": "334000"
  },
  {
    "text": "there have been multiple attempts at",
    "start": "334000",
    "end": "335280"
  },
  {
    "text": "delivering a single kubernetes installer",
    "start": "335280",
    "end": "337120"
  },
  {
    "text": "experience but",
    "start": "337120",
    "end": "338240"
  },
  {
    "text": "they're either tailored to a specific",
    "start": "338240",
    "end": "339680"
  },
  {
    "text": "infrastructure provider they were",
    "start": "339680",
    "end": "341360"
  },
  {
    "text": "developed very early before kubernetes",
    "start": "341360",
    "end": "343039"
  },
  {
    "text": "began maturing",
    "start": "343039",
    "end": "344080"
  },
  {
    "text": "or their proprietary solutions however",
    "start": "344080",
    "end": "346880"
  },
  {
    "start": "346000",
    "end": "374000"
  },
  {
    "text": "that's why we have cluster api",
    "start": "346880",
    "end": "348720"
  },
  {
    "text": "it's a tool that is developed in the",
    "start": "348720",
    "end": "350080"
  },
  {
    "text": "kubernetes open source community",
    "start": "350080",
    "end": "352000"
  },
  {
    "text": "under the special interest group of",
    "start": "352000",
    "end": "353759"
  },
  {
    "text": "project lifecycle",
    "start": "353759",
    "end": "356080"
  },
  {
    "text": "this means it's an accepted tool by the",
    "start": "356080",
    "end": "357919"
  },
  {
    "text": "upstream and larger kubernetes community",
    "start": "357919",
    "end": "360000"
  },
  {
    "text": "for building and deploying kubernetes",
    "start": "360000",
    "end": "361680"
  },
  {
    "text": "clusters in an automated fashion",
    "start": "361680",
    "end": "363919"
  },
  {
    "text": "it uses the same kubernetes principles",
    "start": "363919",
    "end": "366000"
  },
  {
    "text": "of using the declarative control loop",
    "start": "366000",
    "end": "367919"
  },
  {
    "text": "to achieve a desired state and perform",
    "start": "367919",
    "end": "370160"
  },
  {
    "text": "all the functions of create",
    "start": "370160",
    "end": "371600"
  },
  {
    "text": "scale upgrade and delete clusters",
    "start": "371600",
    "end": "373759"
  },
  {
    "text": "themselves",
    "start": "373759",
    "end": "375600"
  },
  {
    "start": "374000",
    "end": "413000"
  },
  {
    "text": "to roll this back just slightly we have",
    "start": "375600",
    "end": "377600"
  },
  {
    "text": "to understand how to extend kubernetes",
    "start": "377600",
    "end": "379919"
  },
  {
    "text": "natively",
    "start": "379919",
    "end": "380560"
  },
  {
    "text": "kubernetes knows what a pod is as well",
    "start": "380560",
    "end": "382720"
  },
  {
    "text": "as an application deployment object such",
    "start": "382720",
    "end": "384479"
  },
  {
    "text": "as a staple set",
    "start": "384479",
    "end": "385440"
  },
  {
    "text": "or deployment so how does kubernetes",
    "start": "385440",
    "end": "387919"
  },
  {
    "text": "know how to use its principles on",
    "start": "387919",
    "end": "389840"
  },
  {
    "text": "objects that it doesn't understand this",
    "start": "389840",
    "end": "392639"
  },
  {
    "text": "is where the custom resource definition",
    "start": "392639",
    "end": "394479"
  },
  {
    "text": "or the crd comes into play this is an",
    "start": "394479",
    "end": "397199"
  },
  {
    "text": "extension of the kubernetes api",
    "start": "397199",
    "end": "399199"
  },
  {
    "text": "so it knows how to interact with new",
    "start": "399199",
    "end": "400800"
  },
  {
    "text": "types of objects cluster api",
    "start": "400800",
    "end": "403120"
  },
  {
    "text": "is a set of crds that allows kubernetes",
    "start": "403120",
    "end": "405600"
  },
  {
    "text": "to know how to interface with an",
    "start": "405600",
    "end": "407039"
  },
  {
    "text": "infrastructure provider",
    "start": "407039",
    "end": "408400"
  },
  {
    "text": "and it knows how an object of type",
    "start": "408400",
    "end": "410560"
  },
  {
    "text": "machine or cluster is represented",
    "start": "410560",
    "end": "413440"
  },
  {
    "start": "413000",
    "end": "472000"
  },
  {
    "text": "at a high level this is how cluster api",
    "start": "413440",
    "end": "415680"
  },
  {
    "text": "works",
    "start": "415680",
    "end": "416479"
  },
  {
    "text": "as a user i define a cluster",
    "start": "416479",
    "end": "418240"
  },
  {
    "text": "specification within the specification",
    "start": "418240",
    "end": "420800"
  },
  {
    "text": "i define the types of machines that will",
    "start": "420800",
    "end": "422560"
  },
  {
    "text": "make up my cluster",
    "start": "422560",
    "end": "424000"
  },
  {
    "text": "and using the standard cubecontrol",
    "start": "424000",
    "end": "425440"
  },
  {
    "text": "command line i apply this to a",
    "start": "425440",
    "end": "427280"
  },
  {
    "text": "kubernetes cluster",
    "start": "427280",
    "end": "428319"
  },
  {
    "text": "that has the cluster api components",
    "start": "428319",
    "end": "430160"
  },
  {
    "text": "installed the kubernetes cluster with",
    "start": "430160",
    "end": "432400"
  },
  {
    "text": "cluster api",
    "start": "432400",
    "end": "433440"
  },
  {
    "text": "is considered now my management cluster",
    "start": "433440",
    "end": "436240"
  },
  {
    "text": "this cluster is going to be responsible",
    "start": "436240",
    "end": "437919"
  },
  {
    "text": "for communicating to the infrastructure",
    "start": "437919",
    "end": "439520"
  },
  {
    "text": "provider of my choice",
    "start": "439520",
    "end": "440960"
  },
  {
    "text": "and deploying kubernetes clusters based",
    "start": "440960",
    "end": "443199"
  },
  {
    "text": "on the specification i provide",
    "start": "443199",
    "end": "445440"
  },
  {
    "text": "cluster api will use that declarative",
    "start": "445440",
    "end": "447440"
  },
  {
    "text": "nature of kubernetes to make sure it",
    "start": "447440",
    "end": "449520"
  },
  {
    "text": "achieves",
    "start": "449520",
    "end": "450000"
  },
  {
    "text": "my desired state and if at a later time",
    "start": "450000",
    "end": "452560"
  },
  {
    "text": "i want to add more kubernetes workers or",
    "start": "452560",
    "end": "454479"
  },
  {
    "text": "masters",
    "start": "454479",
    "end": "455199"
  },
  {
    "text": "i simply edit the specification and",
    "start": "455199",
    "end": "457199"
  },
  {
    "text": "apply it to the management cluster",
    "start": "457199",
    "end": "460000"
  },
  {
    "text": "cluster api has many different providers",
    "start": "460000",
    "end": "462080"
  },
  {
    "text": "available and there is a cluster",
    "start": "462080",
    "end": "464000"
  },
  {
    "text": "api provider for vsphere that allows it",
    "start": "464000",
    "end": "466160"
  },
  {
    "text": "to know how to communicate to vcenter",
    "start": "466160",
    "end": "468080"
  },
  {
    "text": "and deploy virtual machines based on",
    "start": "468080",
    "end": "470080"
  },
  {
    "text": "templates or content catalogs",
    "start": "470080",
    "end": "473440"
  },
  {
    "start": "472000",
    "end": "510000"
  },
  {
    "text": "vsphere with kubernetes takes this to",
    "start": "473440",
    "end": "475120"
  },
  {
    "text": "another level by introducing an",
    "start": "475120",
    "end": "476800"
  },
  {
    "text": "architecture",
    "start": "476800",
    "end": "477520"
  },
  {
    "text": "that provides even more features and",
    "start": "477520",
    "end": "479360"
  },
  {
    "text": "unique capabilities",
    "start": "479360",
    "end": "480639"
  },
  {
    "text": "within vsphere there is a concept of the",
    "start": "480639",
    "end": "482800"
  },
  {
    "text": "supervisor cluster",
    "start": "482800",
    "end": "484240"
  },
  {
    "text": "this is our management cluster for",
    "start": "484240",
    "end": "485680"
  },
  {
    "text": "cluster api it's represented as a few",
    "start": "485680",
    "end": "488319"
  },
  {
    "text": "virtual machines",
    "start": "488319",
    "end": "489199"
  },
  {
    "text": "that are automatically created when",
    "start": "489199",
    "end": "491120"
  },
  {
    "text": "enabling the workload platform service",
    "start": "491120",
    "end": "493120"
  },
  {
    "text": "on a cluster that satisfies all the",
    "start": "493120",
    "end": "494800"
  },
  {
    "text": "requirements",
    "start": "494800",
    "end": "496000"
  },
  {
    "text": "the supervisor cluster can provision",
    "start": "496000",
    "end": "497759"
  },
  {
    "text": "virtual machines it can run containers",
    "start": "497759",
    "end": "499840"
  },
  {
    "text": "that are wrapped",
    "start": "499840",
    "end": "500639"
  },
  {
    "text": "at a very lightweight virtual machine",
    "start": "500639",
    "end": "502160"
  },
  {
    "text": "called a vsphere pod",
    "start": "502160",
    "end": "503759"
  },
  {
    "text": "and it's also responsible for deploying",
    "start": "503759",
    "end": "505759"
  },
  {
    "text": "kubernetes clusters",
    "start": "505759",
    "end": "506800"
  },
  {
    "text": "as a part of the tanzu kubernetes grid",
    "start": "506800",
    "end": "509199"
  },
  {
    "text": "service",
    "start": "509199",
    "end": "511039"
  },
  {
    "start": "510000",
    "end": "547000"
  },
  {
    "text": "vsphere with kubernetes has a concept of",
    "start": "511039",
    "end": "512959"
  },
  {
    "text": "vsphere namespaces",
    "start": "512959",
    "end": "514560"
  },
  {
    "text": "like kubernetes or linux namespaces it",
    "start": "514560",
    "end": "516719"
  },
  {
    "text": "defines a boundary or security context",
    "start": "516719",
    "end": "519279"
  },
  {
    "text": "a vsphere namespace is like a resource",
    "start": "519279",
    "end": "521360"
  },
  {
    "text": "pool but it can run multiple types of",
    "start": "521360",
    "end": "523440"
  },
  {
    "text": "kubernetes objects",
    "start": "523440",
    "end": "524560"
  },
  {
    "text": "such as virtual machines vsphere pods",
    "start": "524560",
    "end": "526720"
  },
  {
    "text": "and even multiple",
    "start": "526720",
    "end": "527839"
  },
  {
    "text": "tonsi kubernetes grid service clusters",
    "start": "527839",
    "end": "530880"
  },
  {
    "text": "the namespaces also have role-based",
    "start": "530880",
    "end": "532880"
  },
  {
    "text": "access control which is inherited",
    "start": "532880",
    "end": "534320"
  },
  {
    "text": "through vsphere single sign-on",
    "start": "534320",
    "end": "535920"
  },
  {
    "text": "and there's also resource and object",
    "start": "535920",
    "end": "537839"
  },
  {
    "text": "limits that can be imposed",
    "start": "537839",
    "end": "539360"
  },
  {
    "text": "these limits give administrators the",
    "start": "539360",
    "end": "540959"
  },
  {
    "text": "control over the namespaces",
    "start": "540959",
    "end": "542720"
  },
  {
    "text": "and make sure applications do not take",
    "start": "542720",
    "end": "544640"
  },
  {
    "text": "up more resources than allowed",
    "start": "544640",
    "end": "547200"
  },
  {
    "start": "547000",
    "end": "569000"
  },
  {
    "text": "within vcenter we can see that the",
    "start": "547200",
    "end": "548959"
  },
  {
    "text": "compute cluster has passed all the tests",
    "start": "548959",
    "end": "550880"
  },
  {
    "text": "required to enable the workload service",
    "start": "550880",
    "end": "553120"
  },
  {
    "text": "and the supervisor cluster virtual",
    "start": "553120",
    "end": "554560"
  },
  {
    "text": "machines have been created",
    "start": "554560",
    "end": "556399"
  },
  {
    "text": "these virtual machines represent the",
    "start": "556399",
    "end": "557920"
  },
  {
    "text": "kubernetes and cluster api management",
    "start": "557920",
    "end": "559920"
  },
  {
    "text": "cluster",
    "start": "559920",
    "end": "560720"
  },
  {
    "text": "each one has its own unique ip address",
    "start": "560720",
    "end": "563040"
  },
  {
    "text": "but through a leader election process",
    "start": "563040",
    "end": "565040"
  },
  {
    "text": "only one will be the interface needed to",
    "start": "565040",
    "end": "566880"
  },
  {
    "text": "interact with any cluster",
    "start": "566880",
    "end": "568399"
  },
  {
    "text": "or vsphere pod this example shows a",
    "start": "568399",
    "end": "571519"
  },
  {
    "start": "569000",
    "end": "596000"
  },
  {
    "text": "tonzu kubernetes grid cluster",
    "start": "571519",
    "end": "573440"
  },
  {
    "text": "without going through everything in",
    "start": "573440",
    "end": "574880"
  },
  {
    "text": "depth it's easy to understand the",
    "start": "574880",
    "end": "576399"
  },
  {
    "text": "cluster specification",
    "start": "576399",
    "end": "577680"
  },
  {
    "text": "and the types and amounts of virtual",
    "start": "577680",
    "end": "579279"
  },
  {
    "text": "machines we want to represent a new",
    "start": "579279",
    "end": "581440"
  },
  {
    "text": "kubernetes cluster",
    "start": "581440",
    "end": "583200"
  },
  {
    "text": "after this specification is applied to",
    "start": "583200",
    "end": "584959"
  },
  {
    "text": "the supervisor cluster",
    "start": "584959",
    "end": "586240"
  },
  {
    "text": "it will invoke the cluster api",
    "start": "586240",
    "end": "587839"
  },
  {
    "text": "components to achieve a desired end",
    "start": "587839",
    "end": "590000"
  },
  {
    "text": "state the kubernetes master and worker",
    "start": "590000",
    "end": "592399"
  },
  {
    "text": "nodes are represented as virtual",
    "start": "592399",
    "end": "593920"
  },
  {
    "text": "machines within the namespace",
    "start": "593920",
    "end": "595600"
  },
  {
    "text": "that was defined in the specification",
    "start": "595600",
    "end": "598399"
  },
  {
    "start": "596000",
    "end": "684000"
  },
  {
    "text": "thanks for watching this video",
    "start": "598399",
    "end": "599680"
  },
  {
    "text": "on the tonzu kubernetes grid service",
    "start": "599680",
    "end": "601360"
  },
  {
    "text": "architecture our next presenter",
    "start": "601360",
    "end": "603440"
  },
  {
    "text": "keith is a senior tech marketing",
    "start": "603440",
    "end": "605680"
  },
  {
    "text": "architect",
    "start": "605680",
    "end": "606480"
  },
  {
    "text": "for vmware tanzu working on all things",
    "start": "606480",
    "end": "608720"
  },
  {
    "text": "kubernetes",
    "start": "608720",
    "end": "610000"
  },
  {
    "text": "he has previous roles as a course",
    "start": "610000",
    "end": "611839"
  },
  {
    "text": "developer and instructor",
    "start": "611839",
    "end": "613360"
  },
  {
    "text": "solutions engineer systems architect and",
    "start": "613360",
    "end": "615600"
  },
  {
    "text": "has led r d teams across",
    "start": "615600",
    "end": "617200"
  },
  {
    "text": "dell technologies he has written several",
    "start": "617200",
    "end": "619519"
  },
  {
    "text": "white papers",
    "start": "619519",
    "end": "620480"
  },
  {
    "text": "and reference architectures in the cloud",
    "start": "620480",
    "end": "622079"
  },
  {
    "text": "native and data analytics space",
    "start": "622079",
    "end": "624000"
  },
  {
    "text": "keith is also a passionate v expert he",
    "start": "624000",
    "end": "626240"
  },
  {
    "text": "will be showing us how valero can back",
    "start": "626240",
    "end": "627839"
  },
  {
    "text": "up your kubernetes clusters",
    "start": "627839",
    "end": "629200"
  },
  {
    "text": "using tanzu mission control hi i'm keith",
    "start": "629200",
    "end": "632480"
  },
  {
    "text": "lee",
    "start": "632480",
    "end": "632959"
  },
  {
    "text": "a technical marketing manager at vmware",
    "start": "632959",
    "end": "634560"
  },
  {
    "text": "focused on tanzu mission control",
    "start": "634560",
    "end": "636720"
  },
  {
    "text": "in this short video i'm going to",
    "start": "636720",
    "end": "638000"
  },
  {
    "text": "demonstrate the new data protection",
    "start": "638000",
    "end": "639200"
  },
  {
    "text": "feature in vmware tanzania mission",
    "start": "639200",
    "end": "640640"
  },
  {
    "text": "control",
    "start": "640640",
    "end": "641680"
  },
  {
    "text": "this new feature allows operators to",
    "start": "641680",
    "end": "643279"
  },
  {
    "text": "centrally manage data protection across",
    "start": "643279",
    "end": "645040"
  },
  {
    "text": "their entire fleet of kubernetes",
    "start": "645040",
    "end": "646480"
  },
  {
    "text": "clusters",
    "start": "646480",
    "end": "647360"
  },
  {
    "text": "tanzu mission control data protection is",
    "start": "647360",
    "end": "649279"
  },
  {
    "text": "built on a solid open source foundation",
    "start": "649279",
    "end": "651519"
  },
  {
    "text": "using the popular valero project tanzu",
    "start": "651519",
    "end": "653920"
  },
  {
    "text": "mission control installs and manages the",
    "start": "653920",
    "end": "655600"
  },
  {
    "text": "lifecycle of valero so you don't have to",
    "start": "655600",
    "end": "658079"
  },
  {
    "text": "instead of operating valero directly in",
    "start": "658079",
    "end": "659600"
  },
  {
    "text": "every cluster tanzania mission controls",
    "start": "659600",
    "end": "661440"
  },
  {
    "text": "ui",
    "start": "661440",
    "end": "662079"
  },
  {
    "text": "cli and api allows you to centrally",
    "start": "662079",
    "end": "664480"
  },
  {
    "text": "create backups and restores of all your",
    "start": "664480",
    "end": "666240"
  },
  {
    "text": "clusters",
    "start": "666240",
    "end": "666959"
  },
  {
    "text": "regardless of where they are located you",
    "start": "666959",
    "end": "668800"
  },
  {
    "text": "can backup and restore clusters",
    "start": "668800",
    "end": "670320"
  },
  {
    "text": "namespaces and even groups of resources",
    "start": "670320",
    "end": "672399"
  },
  {
    "text": "using kubernetes label selectors tanzu",
    "start": "672399",
    "end": "675120"
  },
  {
    "text": "mission control automatically passes",
    "start": "675120",
    "end": "676640"
  },
  {
    "text": "these commands to its cluster agent",
    "start": "676640",
    "end": "678240"
  },
  {
    "text": "technology",
    "start": "678240",
    "end": "679040"
  },
  {
    "text": "and valero executes the backups passing",
    "start": "679040",
    "end": "681120"
  },
  {
    "text": "back status",
    "start": "681120",
    "end": "682079"
  },
  {
    "text": "errors and full backup details okay so",
    "start": "682079",
    "end": "685040"
  },
  {
    "start": "684000",
    "end": "893000"
  },
  {
    "text": "let's get into the demo",
    "start": "685040",
    "end": "686560"
  },
  {
    "text": "here in my production cluster group i",
    "start": "686560",
    "end": "688160"
  },
  {
    "text": "have a few tanzu kubernetes grid",
    "start": "688160",
    "end": "689680"
  },
  {
    "text": "clusters",
    "start": "689680",
    "end": "690320"
  },
  {
    "text": "on vsphere and aws tanzio mission",
    "start": "690320",
    "end": "692880"
  },
  {
    "text": "control users can take advantage of data",
    "start": "692880",
    "end": "694560"
  },
  {
    "text": "protection on any managed cluster",
    "start": "694560",
    "end": "696640"
  },
  {
    "text": "whether it was provisioned by",
    "start": "696640",
    "end": "697600"
  },
  {
    "text": "transmission control or is attached",
    "start": "697600",
    "end": "699920"
  },
  {
    "text": "such as tkg eks aks gke etc",
    "start": "699920",
    "end": "704320"
  },
  {
    "text": "before i can enable data protection and",
    "start": "704320",
    "end": "706480"
  },
  {
    "text": "perform a backup",
    "start": "706480",
    "end": "707519"
  },
  {
    "text": "i need to create an account credential",
    "start": "707519",
    "end": "709120"
  },
  {
    "text": "for data protection",
    "start": "709120",
    "end": "710639"
  },
  {
    "text": "an account credential is a cloud",
    "start": "710639",
    "end": "712000"
  },
  {
    "text": "provider account which tanz image",
    "start": "712000",
    "end": "713279"
  },
  {
    "text": "control uses for either lifecycle",
    "start": "713279",
    "end": "714720"
  },
  {
    "text": "management of clusters as seen here",
    "start": "714720",
    "end": "716800"
  },
  {
    "text": "or for data protection as we're going to",
    "start": "716800",
    "end": "718320"
  },
  {
    "text": "create now creating this allows tmc to",
    "start": "718320",
    "end": "720880"
  },
  {
    "text": "create and use s3 buckets to store the",
    "start": "720880",
    "end": "722720"
  },
  {
    "text": "backups",
    "start": "722720",
    "end": "723680"
  },
  {
    "text": "you can create one or many data",
    "start": "723680",
    "end": "725200"
  },
  {
    "text": "protection credentials",
    "start": "725200",
    "end": "727040"
  },
  {
    "text": "so we give it a name and it will create",
    "start": "727040",
    "end": "728480"
  },
  {
    "text": "an aws cloud formation stack template",
    "start": "728480",
    "end": "731040"
  },
  {
    "text": "next i will log into my aws console off",
    "start": "731040",
    "end": "733200"
  },
  {
    "text": "screen and create a cloud information",
    "start": "733200",
    "end": "734639"
  },
  {
    "text": "stack",
    "start": "734639",
    "end": "735120"
  },
  {
    "text": "using this template in which it will",
    "start": "735120",
    "end": "736800"
  },
  {
    "text": "return an arn and amazon resource name",
    "start": "736800",
    "end": "739680"
  },
  {
    "text": "and there we have a credential created",
    "start": "739680",
    "end": "742000"
  },
  {
    "text": "now let's enable data protection on a",
    "start": "742000",
    "end": "743600"
  },
  {
    "text": "cluster",
    "start": "743600",
    "end": "745839"
  },
  {
    "text": "as we can see it's showing data",
    "start": "747279",
    "end": "748639"
  },
  {
    "text": "protection is not enabled on this",
    "start": "748639",
    "end": "749920"
  },
  {
    "text": "cluster",
    "start": "749920",
    "end": "750800"
  },
  {
    "text": "so i click enable data protection and",
    "start": "750800",
    "end": "752480"
  },
  {
    "text": "here we select the account credential we",
    "start": "752480",
    "end": "754160"
  },
  {
    "text": "just created for data protection",
    "start": "754160",
    "end": "756320"
  },
  {
    "text": "what is happening now is that the tenzi",
    "start": "756320",
    "end": "757760"
  },
  {
    "text": "image control cluster agent on the",
    "start": "757760",
    "end": "759120"
  },
  {
    "text": "cluster",
    "start": "759120",
    "end": "759839"
  },
  {
    "text": "now sees that data protection is to be",
    "start": "759839",
    "end": "761279"
  },
  {
    "text": "enabled and so it installs the extension",
    "start": "761279",
    "end": "763360"
  },
  {
    "text": "which i said earlier is valero",
    "start": "763360",
    "end": "765760"
  },
  {
    "text": "here in the workloads tab we can see the",
    "start": "765760",
    "end": "767760"
  },
  {
    "text": "valero extension being installed in the",
    "start": "767760",
    "end": "769120"
  },
  {
    "text": "cluster",
    "start": "769120",
    "end": "770800"
  },
  {
    "text": "we now see data protection is enabled on",
    "start": "770800",
    "end": "772720"
  },
  {
    "text": "the cluster and we now have a data",
    "start": "772720",
    "end": "774399"
  },
  {
    "text": "protection tab",
    "start": "774399",
    "end": "776079"
  },
  {
    "text": "to demo data protection i'm going to use",
    "start": "776079",
    "end": "778000"
  },
  {
    "text": "an app called acme fitness",
    "start": "778000",
    "end": "779680"
  },
  {
    "text": "which comprises of many microservices",
    "start": "779680",
    "end": "781360"
  },
  {
    "text": "such as front-end catalog",
    "start": "781360",
    "end": "782800"
  },
  {
    "text": "cart payment etc we will up the",
    "start": "782800",
    "end": "785279"
  },
  {
    "text": "namespace this app was deployed to",
    "start": "785279",
    "end": "787040"
  },
  {
    "text": "delete the catalog service which",
    "start": "787040",
    "end": "788639"
  },
  {
    "text": "includes a mongodb and a persistent",
    "start": "788639",
    "end": "790320"
  },
  {
    "text": "volume",
    "start": "790320",
    "end": "790959"
  },
  {
    "text": "and then restore it on the data",
    "start": "790959",
    "end": "793440"
  },
  {
    "text": "protection tab we can create backups and",
    "start": "793440",
    "end": "795360"
  },
  {
    "text": "restores",
    "start": "795360",
    "end": "796480"
  },
  {
    "text": "let's go ahead and create a backup you",
    "start": "796480",
    "end": "799040"
  },
  {
    "text": "can backup the entire",
    "start": "799040",
    "end": "800000"
  },
  {
    "text": "cluster selected namespaces or use label",
    "start": "800000",
    "end": "802639"
  },
  {
    "text": "selectors",
    "start": "802639",
    "end": "804560"
  },
  {
    "text": "so let's back up the acme fitness",
    "start": "804560",
    "end": "806240"
  },
  {
    "text": "namespace set retention to 30 days",
    "start": "806240",
    "end": "808959"
  },
  {
    "text": "and give it a name",
    "start": "808959",
    "end": "814480"
  },
  {
    "text": "and now we can see its processing and in",
    "start": "814480",
    "end": "816320"
  },
  {
    "text": "a few moments it will be ready",
    "start": "816320",
    "end": "818959"
  },
  {
    "text": "on clicking the backup we get some",
    "start": "818959",
    "end": "820480"
  },
  {
    "text": "further details such as the backup type",
    "start": "820480",
    "end": "822800"
  },
  {
    "text": "if label selectors were used number of",
    "start": "822800",
    "end": "824800"
  },
  {
    "text": "name spaces backed up",
    "start": "824800",
    "end": "826079"
  },
  {
    "text": "and how many volumes were a snapshot",
    "start": "826079",
    "end": "829519"
  },
  {
    "text": "so now off screen i'm going to create a",
    "start": "829519",
    "end": "831279"
  },
  {
    "text": "disaster by deleting the catalog service",
    "start": "831279",
    "end": "833519"
  },
  {
    "text": "in my acme fitness app",
    "start": "833519",
    "end": "835920"
  },
  {
    "text": "on refreshing the page we can now see we",
    "start": "835920",
    "end": "837839"
  },
  {
    "text": "don't have any catalog items in our app",
    "start": "837839",
    "end": "840480"
  },
  {
    "text": "to perform a restore we select a recent",
    "start": "840480",
    "end": "842639"
  },
  {
    "text": "backup and click restore",
    "start": "842639",
    "end": "844079"
  },
  {
    "text": "for restore we have several options we",
    "start": "844079",
    "end": "846079"
  },
  {
    "text": "can restore the entire backup",
    "start": "846079",
    "end": "847519"
  },
  {
    "text": "a selected namespace or use a label",
    "start": "847519",
    "end": "849680"
  },
  {
    "text": "selector",
    "start": "849680",
    "end": "850880"
  },
  {
    "text": "here we're going to use a label selector",
    "start": "850880",
    "end": "852240"
  },
  {
    "text": "to only restore the catalog service",
    "start": "852240",
    "end": "854720"
  },
  {
    "text": "so i want to restore using app acme fit",
    "start": "854720",
    "end": "857279"
  },
  {
    "text": "and service catalog",
    "start": "857279",
    "end": "860320"
  },
  {
    "text": "give it a name",
    "start": "860720",
    "end": "863279"
  },
  {
    "text": "and click restore we see the restore",
    "start": "866560",
    "end": "868480"
  },
  {
    "text": "processing and in a few moments",
    "start": "868480",
    "end": "870000"
  },
  {
    "text": "it shall be ready",
    "start": "870000",
    "end": "872800"
  },
  {
    "text": "restore is complete so let's check our",
    "start": "873040",
    "end": "875040"
  },
  {
    "text": "app and here we can see the catalog is",
    "start": "875040",
    "end": "876880"
  },
  {
    "text": "now restored",
    "start": "876880",
    "end": "879040"
  },
  {
    "text": "that completes this demonstration and",
    "start": "879040",
    "end": "880399"
  },
  {
    "text": "thank you for watching for more intense",
    "start": "880399",
    "end": "882480"
  },
  {
    "text": "image control please see",
    "start": "882480",
    "end": "885519"
  },
  {
    "text": "tanzu.vmware.com",
    "start": "891959",
    "end": "894959"
  }
]