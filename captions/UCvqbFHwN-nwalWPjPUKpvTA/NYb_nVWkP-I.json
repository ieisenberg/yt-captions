[
  {
    "start": "0",
    "end": "84000"
  },
  {
    "text": "all right hi everyone thank you for coming to our session this is the first",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "talk that our team has done about the work that we have been focusing at lift for the past few months so Mike and I",
    "start": "6029",
    "end": "12300"
  },
  {
    "text": "are really excited to be here and sharing this progress with you in this talk we want to introduce you to envoy",
    "start": "12300",
    "end": "18539"
  },
  {
    "text": "Mobile which is a child project of the Envoy ecosystem and it is building envoy",
    "start": "18539",
    "end": "24750"
  },
  {
    "text": "as a multi-platform mobile networking library with ongoing mobile we want to",
    "start": "24750",
    "end": "30510"
  },
  {
    "text": "push the edge of your network topology to include your mobile clients so that",
    "start": "30510",
    "end": "36870"
  },
  {
    "text": "these mobile clients become another node in your network part of the mesh so we",
    "start": "36870",
    "end": "44070"
  },
  {
    "text": "want to take you through this story in in four parts the first part is sharing with you the motivation for why we want",
    "start": "44070",
    "end": "50760"
  },
  {
    "text": "to bring Android to mobile as any other project it's a it's a big engineering",
    "start": "50760",
    "end": "56280"
  },
  {
    "text": "effort and so we want to justify to justify the effort with all of you next we will dive deep into the internals of",
    "start": "56280",
    "end": "63329"
  },
  {
    "text": "Android mobile and what it took to bring envoy into our mobile clients then we",
    "start": "63329",
    "end": "69119"
  },
  {
    "text": "want to share where the library is right now both as an open source project and also in its integration with with a lyft",
    "start": "69119",
    "end": "76680"
  },
  {
    "text": "app and lastly we want to share some of the exciting roadmap roadmap items that",
    "start": "76680",
    "end": "81869"
  },
  {
    "text": "we have planned ahead so let's begin with the motivation of building this project as all of you might know envoy",
    "start": "81869",
    "end": "90299"
  },
  {
    "start": "84000",
    "end": "341000"
  },
  {
    "text": "is a network proxy that is extremely flexible so with with envoy a lot of",
    "start": "90299",
    "end": "97560"
  },
  {
    "text": "companies lyft included have moved into this type of topology where envoy is dealing with network traffic all the way",
    "start": "97560",
    "end": "104220"
  },
  {
    "text": "through and through from the edge of the infrastructure into the service mesh and even fronting third-party services and",
    "start": "104220",
    "end": "111030"
  },
  {
    "text": "data sort of storage primitives envoy has done a great deal in May in making",
    "start": "111030",
    "end": "118770"
  },
  {
    "text": "the network more reliable server-side by having this Universal network primitive that is that is configurable extensible",
    "start": "118770",
    "end": "126780"
  },
  {
    "text": "reliable and observable we have really made made the network transparent to our server engineers",
    "start": "126780",
    "end": "133020"
  },
  {
    "text": "and more importantly because Han boy has best-in-class observability when problems actually happening in the",
    "start": "133020",
    "end": "139270"
  },
  {
    "text": "network we have made it increasingly easy to debug however our premise with this project is",
    "start": "139270",
    "end": "146080"
  },
  {
    "text": "that 3:9 server-side are actually meaningless if then the the application",
    "start": "146080",
    "end": "151930"
  },
  {
    "text": "flows that the users interact with in in mobile applications are actually only",
    "start": "151930",
    "end": "157090"
  },
  {
    "text": "successful a fraction of the time so we believe that with Android mobile we can",
    "start": "157090",
    "end": "162190"
  },
  {
    "text": "extend all the benefits that we have broad server-side with Android to our mobile clients but that vision requires",
    "start": "162190",
    "end": "170200"
  },
  {
    "text": "a paradigm shift because traditionally we thought of mobile clients as independent from the backend mesh and",
    "start": "170200",
    "end": "175780"
  },
  {
    "text": "we've build a unique solution for what we think what we have thought it's a unique space so we really can say that",
    "start": "175780",
    "end": "183520"
  },
  {
    "text": "envoy has become this true Universal Network primitive if all the network",
    "start": "183520",
    "end": "189040"
  },
  {
    "text": "flows for our four mobile platforms start and end in the mobile client which is the only hope that our voice not",
    "start": "189040",
    "end": "195490"
  },
  {
    "text": "running in so we are proposing that we don't need to treat the mobile care in",
    "start": "195490",
    "end": "200560"
  },
  {
    "text": "any differently we can have our our clients become another node in the",
    "start": "200560",
    "end": "205960"
  },
  {
    "text": "network another part of this homogeneous mesh the problem is that that current",
    "start": "205960",
    "end": "212650"
  },
  {
    "text": "solutions are platform-specific both for ios and android so we really can have",
    "start": "212650",
    "end": "217690"
  },
  {
    "text": "this true networking substrate that is that is all homogenized in other words",
    "start": "217690",
    "end": "223810"
  },
  {
    "text": "there's no open source solution that is giving us this Universal network primitive and this is where we believe",
    "start": "223810",
    "end": "228820"
  },
  {
    "text": "that unblameable fits because with an boy in the class and with mobile in the",
    "start": "228820",
    "end": "234370"
  },
  {
    "text": "client and envoy server side we have this true standardization of our networking substrate it's similar to",
    "start": "234370",
    "end": "240310"
  },
  {
    "text": "what kubernetes has done for container orchestration and so we one onward to do the same thing with standardizing the",
    "start": "240310",
    "end": "246700"
  },
  {
    "text": "network so why do we believe that",
    "start": "246700",
    "end": "252790"
  },
  {
    "text": "standardization is important between the mobile client and the back-end infrastructure well we think it's",
    "start": "252790",
    "end": "259000"
  },
  {
    "text": "important by largely similar reasons of why standardization in the backend was",
    "start": "259000",
    "end": "264340"
  },
  {
    "text": "useful so first of all we have this tenant of right once and deploy everywhere by having this",
    "start": "264340",
    "end": "271600"
  },
  {
    "text": "universal network substrate we can embark on projects that would have otherwise been prohibitive due to the",
    "start": "271600",
    "end": "278090"
  },
  {
    "text": "engineering effort of trying of implementing the solutions in three different platforms iOS Android and the",
    "start": "278090",
    "end": "284990"
  },
  {
    "text": "back end with a true Universal Network primitive we can invest our resources on",
    "start": "284990",
    "end": "290120"
  },
  {
    "text": "that one networking stack and deployed everywhere second we can share common",
    "start": "290120",
    "end": "296570"
  },
  {
    "text": "tooling for common problems so for example by emitting the same metrics everywhere in our in our network",
    "start": "296570",
    "end": "303320"
  },
  {
    "text": "topology all the way from the clients to the edge to the mesh we can share the same infrastructure and the same",
    "start": "303320",
    "end": "310160"
  },
  {
    "text": "visualization tools to give a clear a clear a clear flow of how our network",
    "start": "310160",
    "end": "317419"
  },
  {
    "text": "traffic is is flowing and lastly by having this common network substrate",
    "start": "317419",
    "end": "323750"
  },
  {
    "text": "then we can homogenize the behavior and the reliability of of our network and by",
    "start": "323750",
    "end": "330200"
  },
  {
    "text": "doing this we're really reducing the cognitive load of our engineers that",
    "start": "330200",
    "end": "335450"
  },
  {
    "text": "have to operate this network because all the guarantees are the same end to end",
    "start": "335450",
    "end": "342129"
  },
  {
    "start": "341000",
    "end": "383000"
  },
  {
    "text": "all of this sounded really compelling to us we were still struggling to solve a set of problems on our mobile devices",
    "start": "345900",
    "end": "352530"
  },
  {
    "text": "which we had solved elegantly and consistently across our back-end infrastructure but we were still left",
    "start": "352530",
    "end": "359130"
  },
  {
    "text": "with the question was this even going to be possible Envoy runs in the backend of course as a server in a dedicated",
    "start": "359130",
    "end": "365610"
  },
  {
    "text": "multi-threaded process and you can't do that on a client there's no such thing as a sidecar proxy that can run an iOS",
    "start": "365610",
    "end": "372060"
  },
  {
    "text": "or on Android we needed some way to actually run envoy inside an app the",
    "start": "372060",
    "end": "377730"
  },
  {
    "text": "only kind of process that's allowed to run on mobile devices a lot of our",
    "start": "377730",
    "end": "384240"
  },
  {
    "start": "383000",
    "end": "620000"
  },
  {
    "text": "initial effort was simply invested in answering this question we worked to actually build envoy within an application as a harness and just get",
    "start": "384240",
    "end": "391200"
  },
  {
    "text": "the server started just get it running and see that we could run it on iOS on Android with the different platforms OSS",
    "start": "391200",
    "end": "397950"
  },
  {
    "text": "and architectures we knew we wanted envoy Mobile's core to be Envoy and once",
    "start": "397950",
    "end": "403260"
  },
  {
    "text": "we'd answer that question we were finally able to actually start working on developing not a server which would",
    "start": "403260",
    "end": "408930"
  },
  {
    "text": "run on the client but an actual library something that would run as an engine in the client we used Basil's our build",
    "start": "408930",
    "end": "415620"
  },
  {
    "text": "system not only because its envoys build system and offers numerous advantages in",
    "start": "415620",
    "end": "420630"
  },
  {
    "text": "terms of incremental builds and parallelizable builds but also because it has great multi-platform support we",
    "start": "420630",
    "end": "427020"
  },
  {
    "text": "knew this project was going to require us to build code in Swift Kotlin Java",
    "start": "427020",
    "end": "432180"
  },
  {
    "text": "objective-c C because we wanted the actual core the library to be platform agnostic and share as much code as",
    "start": "432180",
    "end": "438600"
  },
  {
    "text": "possible and C you provided that common bridging layer and finally the actual code that runs on voi and works the",
    "start": "438600",
    "end": "444960"
  },
  {
    "text": "honest on voice native types and interfaces this kind of caused our library to form a three layered",
    "start": "444960",
    "end": "450389"
  },
  {
    "text": "architecture on the right we actually have Envoy itself as one of our basil targets and really forms the",
    "start": "450389",
    "end": "456810"
  },
  {
    "text": "core of the library it does all the heavy lifting then we have code that interacts with envoy and then the blue",
    "start": "456810",
    "end": "462600"
  },
  {
    "text": "layer in the middle is actually our bridge code it's the code would actually allows the platform's to call down to envoy envoy to call back to the up to",
    "start": "462600",
    "end": "469590"
  },
  {
    "text": "the platforms without is actually trying to embed any sort of platform specific logic in the code that works directly",
    "start": "469590",
    "end": "475650"
  },
  {
    "text": "with Envoy it also allows us to potentially support other line which is in the future as well other",
    "start": "475650",
    "end": "480810"
  },
  {
    "text": "environments and finally we knew we wanted application developers not to need to know a lot about envoy in order",
    "start": "480810",
    "end": "487380"
  },
  {
    "text": "to realize the benefits of this library we want them interacting with interfaces with which they're comfortable using",
    "start": "487380",
    "end": "492630"
  },
  {
    "text": "mechanisms with which they're comfortable and so we have platform specific code to provide flexible",
    "start": "492630",
    "end": "498210"
  },
  {
    "text": "bindings into the library and that allows platform developers to use the patterns are familiar with again this",
    "start": "498210",
    "end": "506670"
  },
  {
    "text": "sort of forms three different layers in our library we have the platform code written using high-level platform contracts we have our bridge code which",
    "start": "506670",
    "end": "513930"
  },
  {
    "text": "bridges between the two and provides the platform agnostic layer and finally we have the code which actually works directly with Envoy and leverages its",
    "start": "513930",
    "end": "520740"
  },
  {
    "text": "native types still this doesn't answer the question of how do we take code that",
    "start": "520740",
    "end": "526140"
  },
  {
    "text": "was written to run in a dedicated server and actually run it on a mobile device in an application and as a library how",
    "start": "526140",
    "end": "532920"
  },
  {
    "text": "do we take something that was meant to be a server and make it an engine to",
    "start": "532920",
    "end": "538230"
  },
  {
    "text": "start to answer this it's helpful also to look at the actual context under which code can run first we have",
    "start": "538230",
    "end": "544350"
  },
  {
    "text": "application threads the application threads are threads that are owned by the actual app they're started by the",
    "start": "544350",
    "end": "549570"
  },
  {
    "text": "app that the threads or other application recode runs and ultimately it's the code which will eventually need",
    "start": "549570",
    "end": "555510"
  },
  {
    "text": "to call down into envoy to issue requests in order to library to be usable we made the decision to have our",
    "start": "555510",
    "end": "561210"
  },
  {
    "text": "library be single threaded just to allow it to be more streamlined and operate with more predictable patterns on the",
    "start": "561210",
    "end": "567930"
  },
  {
    "text": "device itself fortunately for us Envoy itself actually is largely single threaded code despite the fact that",
    "start": "567930",
    "end": "574200"
  },
  {
    "text": "Envoy is a multi-threaded vibrant a multi-threaded server most code has been written to assume it runs under a single",
    "start": "574200",
    "end": "580230"
  },
  {
    "text": "threaded context there's very little synchronization very little shared state instead explicit mechanisms are used to",
    "start": "580230",
    "end": "586530"
  },
  {
    "text": "actually communicate across threads and finally we have callback threads these",
    "start": "586530",
    "end": "591900"
  },
  {
    "text": "are potentially the same threads as the application threads but importantly they're provided by the application we",
    "start": "591900",
    "end": "597450"
  },
  {
    "text": "wanted users to be able to specify how they want to callbacks to fire where the code will run if we take these three",
    "start": "597450",
    "end": "606180"
  },
  {
    "text": "layers and we overlay them over the three threading contracts contexts we can actually step through walk through",
    "start": "606180",
    "end": "612450"
  },
  {
    "text": "what it looks like for a request to traverse envoy mobile and explore a little bit of its architecture and how we solved this",
    "start": "612450",
    "end": "618290"
  },
  {
    "text": "paradigm shift when a client goes to actually use envoy mobile first they",
    "start": "618290",
    "end": "625610"
  },
  {
    "start": "620000",
    "end": "729000"
  },
  {
    "text": "create a client which will prefer which will form their primary interface into the library under the hood the client",
    "start": "625610",
    "end": "631670"
  },
  {
    "text": "creates an envoy engine that engine is then actually responsible for starting envoy Runner thread the Fed will become",
    "start": "631670",
    "end": "638089"
  },
  {
    "text": "envoy his main thread and is in fact very similar to envoys main thread they are the same as far as envoy is",
    "start": "638089",
    "end": "643490"
  },
  {
    "text": "concerned the one notable difference is that the event loop which drives envoy runs under a very different pattern in",
    "start": "643490",
    "end": "650180"
  },
  {
    "text": "envoy mobile instead of running almost constantly doing bookkeeping and management of the server instead it's",
    "start": "650180",
    "end": "656750"
  },
  {
    "text": "primarily reactive it wakes up in response to Iowa vents and platform calls and that's about it only rarely",
    "start": "656750",
    "end": "662899"
  },
  {
    "text": "for other work now in server side envoy",
    "start": "662899",
    "end": "668420"
  },
  {
    "text": "in addition to ombos main thread we have worker threads when envoy is functioning as a proxy when a request comes in a",
    "start": "668420",
    "end": "674120"
  },
  {
    "text": "listener will take a request and assign it a dedicated thread which will stay on for the entire lifetime of that request",
    "start": "674120",
    "end": "680540"
  },
  {
    "text": "when that worker thread needs to communicate with the envoys main thread it will use an event dispatcher that's",
    "start": "680540",
    "end": "686510"
  },
  {
    "text": "dedicated to the main thread net event dispatcher is backed by a low-level event library like live event",
    "start": "686510",
    "end": "691930"
  },
  {
    "text": "additionally worker threads will sometimes need to perform asynchronous work like issuing a request out to the",
    "start": "691930",
    "end": "697790"
  },
  {
    "text": "internet that's a side channel from the actual main proxying pipeline this could be to perform off with a different",
    "start": "697790",
    "end": "703550"
  },
  {
    "text": "server or do rate limiting it uses a construct called an async client to do",
    "start": "703550",
    "end": "708740"
  },
  {
    "text": "this we took an event dispatcher and an async client and use these to form the",
    "start": "708740",
    "end": "715910"
  },
  {
    "text": "core of our alpha release direct API into envoy basically these are the code",
    "start": "715910",
    "end": "721970"
  },
  {
    "text": "paths that we use to actually get code into envoy running through it once it's been initialized now when it's time for",
    "start": "721970",
    "end": "730939"
  },
  {
    "start": "729000",
    "end": "1044000"
  },
  {
    "text": "a client to actually issue a request it will do so by means of creating an HTTP stream at the bridge layer we have these",
    "start": "730939",
    "end": "737720"
  },
  {
    "text": "platform high-level types we have NS data representing buffers or potentially byte buffers from Java and we need to",
    "start": "737720",
    "end": "744560"
  },
  {
    "text": "convert them into something that envoy can understand this is the work that our bridge layer does it converts them into C types that",
    "start": "744560",
    "end": "751009"
  },
  {
    "text": "can be mapped directly into envoy native types we have another issue here however and that's at the memory we're getting",
    "start": "751009",
    "end": "756860"
  },
  {
    "text": "from the platform which is essential for both the headers and the actual bodies of requests is owned by the application",
    "start": "756860",
    "end": "763129"
  },
  {
    "text": "it's being managed on iOS by AR C by automatic reference counting it's being",
    "start": "763129",
    "end": "768170"
  },
  {
    "text": "managed on Android by the JVM and the garbage collector and Envoy knows nothing about this and we didn't want",
    "start": "768170",
    "end": "774529"
  },
  {
    "text": "envoy didn't know anything about this this is another case where we've been able to actually leverage a useful",
    "start": "774529",
    "end": "779629"
  },
  {
    "text": "pattern already in place an envoy to actually solve this problem envoy maintains an abstraction around buffers",
    "start": "779629",
    "end": "785930"
  },
  {
    "text": "rather than working with direct memory addresses and lengths of the buffers instead a buffer is an abstraction",
    "start": "785930",
    "end": "792470"
  },
  {
    "text": "around buffer fragments but for fragments know how to retrieve the memory when it's time for i/o to be performed and they know how to release",
    "start": "792470",
    "end": "798980"
  },
  {
    "text": "that memory when Envoy is actually done with i/o but they don't really expose anything else we've extended this",
    "start": "798980",
    "end": "804589"
  },
  {
    "text": "concept of buffer fragments and actually mapped it back up to the platform layer so we're able to represent this platform",
    "start": "804589",
    "end": "810560"
  },
  {
    "text": "memory in a type that envoy understands directly when Envoy is done with the",
    "start": "810560",
    "end": "815810"
  },
  {
    "text": "memory we then signal back up to AR C or the Java garbage collector that envoy is done with it",
    "start": "815810",
    "end": "821120"
  },
  {
    "text": "envoy doesn't D allocate the memory we don't know if the platform is done with it but it also doesn't need to know the",
    "start": "821120",
    "end": "826160"
  },
  {
    "text": "platform can resume its normal handling of the memory and release it if necessary or maintain it if necessary this is an",
    "start": "826160",
    "end": "833209"
  },
  {
    "text": "elegant pattern which we've been able to extend and actually avoids a lot of complexity in passing this memory notably it also avoids us needing to",
    "start": "833209",
    "end": "840230"
  },
  {
    "text": "copy buffers unnecessarily we can use the same memory that was passed to us from the platform and pass it all the",
    "start": "840230",
    "end": "845899"
  },
  {
    "text": "way down to the socket that's being written an envoy here you can actually",
    "start": "845899",
    "end": "851149"
  },
  {
    "text": "see just briefly what that struct looks like so the bridge layer including the callback that on will uses to release",
    "start": "851149",
    "end": "856670"
  },
  {
    "text": "that memory in a forum where it's entirely agnostic of the platform once",
    "start": "856670",
    "end": "862639"
  },
  {
    "text": "we've converted the types we're ready to actually pass them into Envoy we use the event dispatcher to get it onto the main",
    "start": "862639",
    "end": "867649"
  },
  {
    "text": "thread the async line issues the request and it goes out into the Internet importantly this is actually the same",
    "start": "867649",
    "end": "873410"
  },
  {
    "text": "code past that Envoy is using on the server to send requests the Internet this means we get the same stats we have",
    "start": "873410",
    "end": "879230"
  },
  {
    "text": "the same points to actually work with it it's truly running on the same code it's the same platform despite",
    "start": "879230",
    "end": "884320"
  },
  {
    "text": "the fact that it came from platform specific code as opposed to a request that envoy is proxying once we get a",
    "start": "884320",
    "end": "892930"
  },
  {
    "text": "response or get an error as the case may be it's time to actually surface that information back up to the platform",
    "start": "892930",
    "end": "899110"
  },
  {
    "text": "again first we need to traverse the bridge layer we need to send this up from envoy without needing to tie",
    "start": "899110",
    "end": "905200"
  },
  {
    "text": "platform specific notions in the code that works with Envoy we want this to be portable so these callbacks are at this",
    "start": "905200",
    "end": "911290"
  },
  {
    "text": "point simply function pointers we also don't want platform code actually",
    "start": "911290",
    "end": "916870"
  },
  {
    "text": "blocking envoys main thread since it does have important work to do in a wake us up so we also need to get things on",
    "start": "916870",
    "end": "922360"
  },
  {
    "text": "the cut on the callback threads we achieve this by means of dispatchers that are provided by the platform and",
    "start": "922360",
    "end": "928120"
  },
  {
    "text": "unique to the platform so in iOS we are talking about Grand Central Dispatch and dispatch queues and Android we're",
    "start": "928120",
    "end": "934330"
  },
  {
    "text": "talking about executor and runner bowls we chose patterns that could be extended to work with other models of concurrency",
    "start": "934330",
    "end": "939730"
  },
  {
    "text": "people are using but again which would be familiar to application developers now we still have a problem because we",
    "start": "939730",
    "end": "946330"
  },
  {
    "text": "don't want envoy or even the bridge layer to really understand anything that the platforms are calling into and so",
    "start": "946330",
    "end": "951970"
  },
  {
    "text": "we've used an old C pattern to allow the platform to pass in state which neither",
    "start": "951970",
    "end": "957070"
  },
  {
    "text": "Envoy nor the bridge layer knows about via a type arrest type erased context parameter this context parameter is",
    "start": "957070",
    "end": "963640"
  },
  {
    "text": "specified by the platform it basically contains everything the platform needs to know when the callback that is",
    "start": "963640",
    "end": "968770"
  },
  {
    "text": "provided is also called in order to take a static C function pointer with no state and turn it into a platform lambda",
    "start": "968770",
    "end": "975460"
  },
  {
    "text": "which can run and be dispatched using that platform's own mechanism it essentially hydrates the lambda from",
    "start": "975460",
    "end": "983560"
  },
  {
    "text": "the C primitive we've also deliberately made the choice to keep these paths",
    "start": "983560",
    "end": "989490"
  },
  {
    "text": "unsynchronized from each other this is a pattern which again we take from envoy on voice code is mostly single threaded",
    "start": "989490",
    "end": "996460"
  },
  {
    "text": "and doesn't share state similarly we knew that code in the application where",
    "start": "996460",
    "end": "1001980"
  },
  {
    "text": "the request is issued might be very far remote from where the actual response is being handled so to avoid a lot of",
    "start": "1001980",
    "end": "1008820"
  },
  {
    "text": "bookkeeping and tracking that would be necessary instead we provide contracts around when functions are called",
    "start": "1008820",
    "end": "1014250"
  },
  {
    "text": "and when callbacks are issued so that the estate can be largely and synchronized really the only exception to this is cancellation we dispatched",
    "start": "1014250",
    "end": "1021390"
  },
  {
    "text": "this as an interrupt in both directions again providing strong contractual guarantees and so forms the only actual",
    "start": "1021390",
    "end": "1026910"
  },
  {
    "text": "atomic shared state and that's a high-level step through of what the architecture of envoy Mobile looks like",
    "start": "1026910",
    "end": "1032069"
  },
  {
    "text": "today and how we're able to actually work directly with high-level platform code but still call into envoys",
    "start": "1032070",
    "end": "1037230"
  },
  {
    "text": "internals for all the important work that's done with HTTP well thank you for",
    "start": "1037230",
    "end": "1043079"
  },
  {
    "text": "that excellent deep dive Mike so with all that built out let's take a look at where the library is today both as an",
    "start": "1043080",
    "end": "1050640"
  },
  {
    "start": "1044000",
    "end": "1507000"
  },
  {
    "text": "open source project but also in its integration was left a few weeks ago we",
    "start": "1050640",
    "end": "1056160"
  },
  {
    "text": "released version 0.2 of the library which we consider to be in office state ready for people to experiment with",
    "start": "1056160",
    "end": "1062340"
  },
  {
    "text": "while the API might change very slightly we believe that the design decisions that we made are our sound and",
    "start": "1062340",
    "end": "1069600"
  },
  {
    "text": "foundational to the to the library additionally and perhaps more importantly for a little over a month",
    "start": "1069600",
    "end": "1075990"
  },
  {
    "text": "now we actually have integrated ongoing mobile into the lift up and we have released it to to our alpha release this",
    "start": "1075990",
    "end": "1083970"
  },
  {
    "text": "actually is a picture of our team taking the first lift right in history where all the network requests were dispatched",
    "start": "1083970",
    "end": "1089940"
  },
  {
    "text": "through envoy mobile we actually went and grabbed some doughnuts so let's take",
    "start": "1089940",
    "end": "1095040"
  },
  {
    "text": "a look at how we integrated envoy mobile into the lift up and this starts with",
    "start": "1095040",
    "end": "1100050"
  },
  {
    "text": "how lift does public API is a lift we have taken a model-based approach to our",
    "start": "1100050",
    "end": "1105240"
  },
  {
    "text": "API so what this means is that when an engineer wants to create a new public facing API all they have to care about",
    "start": "1105240",
    "end": "1111600"
  },
  {
    "text": "is writing the model and we have chosen part of both to do that after that our",
    "start": "1111600",
    "end": "1116940"
  },
  {
    "text": "generation pipelines actually generate clients in all the supported languages at lift both for mobile clients but also",
    "start": "1116940",
    "end": "1124170"
  },
  {
    "text": "for our back-end services if you're interested in learning more about our mobile or model-based API so I'd",
    "start": "1124170",
    "end": "1131010"
  },
  {
    "text": "encourage you to check out a blog post and a talk that my coworker Michael Roberto will put up and they lift",
    "start": "1131010",
    "end": "1137400"
  },
  {
    "text": "engineering blog data this year after our after the the generator has",
    "start": "1137400",
    "end": "1145050"
  },
  {
    "text": "generated this this clients for us we've actually gone a step further in our in our mobile clients and we pre",
    "start": "1145050",
    "end": "1151960"
  },
  {
    "text": "compiled this files into into modules for iOS and for and for Android we do",
    "start": "1151960",
    "end": "1159879"
  },
  {
    "text": "this in order to reduce compilation time for our mobile clients but also to better organize our API and manage our",
    "start": "1159879",
    "end": "1166539"
  },
  {
    "text": "dependencies and what this abstraction really has done for us is it has given",
    "start": "1166539",
    "end": "1172059"
  },
  {
    "text": "us a way to transparently shift implementation details about this kinds without interrupting or having to ask",
    "start": "1172059",
    "end": "1179499"
  },
  {
    "text": "our client engineers to upgrade their their libraries more specifically what",
    "start": "1179499",
    "end": "1185830"
  },
  {
    "text": "this means for ongoing mobile is that by having this abstraction layer we can transparently remove classic networking",
    "start": "1185830",
    "end": "1192190"
  },
  {
    "text": "libraries like nsurl session for iOS and ok HTTP for Android and instead put in",
    "start": "1192190",
    "end": "1198940"
  },
  {
    "text": "Android mobile in in in that in those generated clients so replacing those API",
    "start": "1198940",
    "end": "1204820"
  },
  {
    "text": "calls for API calls that we exposed in the platform layer that Mike was talking about so let's take a look at that at",
    "start": "1204820",
    "end": "1211960"
  },
  {
    "text": "those platform API s and something that I want to highlight here is that we have made it a goal the project to actually",
    "start": "1211960",
    "end": "1218379"
  },
  {
    "text": "have nearly identical priority between the the ergonomics of using the platform",
    "start": "1218379",
    "end": "1224710"
  },
  {
    "text": "API in iOS and in Android so while here up top you see swift and Kotlin moving",
    "start": "1224710",
    "end": "1231940"
  },
  {
    "text": "for and we're just going to show the swift code but you can assume that the code link code looks nearly identical so",
    "start": "1231940",
    "end": "1238690"
  },
  {
    "text": "the first thing that you do is you build an Android client and this is the this",
    "start": "1238690",
    "end": "1243970"
  },
  {
    "text": "is the object that is actually instantiating and managing the lifecycle of the engine underneath and it's also",
    "start": "1243970",
    "end": "1251379"
  },
  {
    "text": "the interface that is used in order to make Network calls but when you build",
    "start": "1251379",
    "end": "1257649"
  },
  {
    "text": "the android client we also expose configuration points at this level for",
    "start": "1257649",
    "end": "1263619"
  },
  {
    "text": "example you can change the logging of of the engine or even the stats flushing interval then you can build a request",
    "start": "1263619",
    "end": "1272229"
  },
  {
    "text": "with the request builder and the API paths are you that you want to hit at",
    "start": "1272229",
    "end": "1277779"
  },
  {
    "text": "this point we have also exposed ways to custom headers and also and more",
    "start": "1277779",
    "end": "1283630"
  },
  {
    "text": "importantly to change the behavior that this week the network behavior that this request will have so for example here",
    "start": "1283630",
    "end": "1289330"
  },
  {
    "text": "you can see that we can attach retry policies to this request I want to be",
    "start": "1289330",
    "end": "1294759"
  },
  {
    "text": "very specific here and highlight that this retry post is actually mapped to",
    "start": "1294759",
    "end": "1300480"
  },
  {
    "text": "behavior that Envoy itself conducts so it's the same networking code paths that",
    "start": "1300480",
    "end": "1306159"
  },
  {
    "text": "handle retry policies in the backend so",
    "start": "1306159",
    "end": "1311500"
  },
  {
    "text": "lastly you build a response handler and this is the object that is going to receive those callbacks back from the",
    "start": "1311500",
    "end": "1318669"
  },
  {
    "text": "engine that that Mike was describing so for example when headers come back on the stream or when data come back that",
    "start": "1318669",
    "end": "1324610"
  },
  {
    "text": "comes back on the stream these are the handlers that are gonna deal with that to wrap it all up you submit the request",
    "start": "1324610",
    "end": "1332590"
  },
  {
    "text": "and response handler into the engine and then the engine gives us a way to interact with the open stream for",
    "start": "1332590",
    "end": "1339159"
  },
  {
    "text": "example by sending data and and until you close it so what we have integrated",
    "start": "1339159",
    "end": "1346570"
  },
  {
    "text": "on going mobile at lyft based on this model based API is we actually want to make the library an easy drop-in",
    "start": "1346570",
    "end": "1352360"
  },
  {
    "text": "replacement for all sorts of patterns in in mobile in mobile clients so for",
    "start": "1352360",
    "end": "1358899"
  },
  {
    "text": "example we want to expose bindings for the classic networking libraries like NS euro session in iOS and ok HTTP in",
    "start": "1358899",
    "end": "1366250"
  },
  {
    "text": "Android so we started this project with the premise that mobile clients were",
    "start": "1366250",
    "end": "1372610"
  },
  {
    "text": "really primed to to receive the benefits of envoy that we have seen in back-end",
    "start": "1372610",
    "end": "1379299"
  },
  {
    "text": "services with the alpha release of Android mobile at lyft we embarked on this journey and we started with",
    "start": "1379299",
    "end": "1385840"
  },
  {
    "text": "observability so as as you may know",
    "start": "1385840",
    "end": "1391269"
  },
  {
    "text": "envoy has best-in-class observability for example it flushes nearly hundreds",
    "start": "1391269",
    "end": "1396460"
  },
  {
    "text": "of time-series metrics that have become really essential for lyft engineers to",
    "start": "1396460",
    "end": "1402309"
  },
  {
    "text": "monitor the network well now that Android mobile is running in our mobile clients we have access to",
    "start": "1402309",
    "end": "1408460"
  },
  {
    "text": "those same metrics coming from the mobile clients so here the goal is that",
    "start": "1408460",
    "end": "1413500"
  },
  {
    "text": "engineers are able to really monitor and observe the network and to end using the same",
    "start": "1413500",
    "end": "1419140"
  },
  {
    "text": "tooling and the same concepts metrics is one of the places where we have already",
    "start": "1419140",
    "end": "1424930"
  },
  {
    "text": "started to receive dividends from building Android mobile on top of the Android core because envoy on voice is a",
    "start": "1424930",
    "end": "1432880"
  },
  {
    "text": "high extensibility has given us access to different stat sinks and specifically it gave us access to the metrics service",
    "start": "1432880",
    "end": "1440140"
  },
  {
    "text": "which is a way to get envoy metrics out of of Android mobile using protobuf and",
    "start": "1440140",
    "end": "1446710"
  },
  {
    "text": "G RPC so we build a very small G RPC server that just receives those metrics",
    "start": "1446710",
    "end": "1452410"
  },
  {
    "text": "and then emits them to our already existing observability infrastructure",
    "start": "1452410",
    "end": "1457450"
  },
  {
    "text": "and what this really allows and this is a very powerful part is it allows allows",
    "start": "1457450",
    "end": "1464560"
  },
  {
    "text": "us to build dashboards like this where up at the top you see metrics coming from our mobile clients in this case the",
    "start": "1464560",
    "end": "1471760"
  },
  {
    "text": "total number of upstream request and then complimentary at the bottom you see the same metrics at the edge of our",
    "start": "1471760",
    "end": "1477850"
  },
  {
    "text": "infrastructure I really want to highlight how powerful this is it's giving us insight that we didn't have",
    "start": "1477850",
    "end": "1483850"
  },
  {
    "text": "before coming out of the mobile clients and it's giving us a way to really monitor the network all the way and to",
    "start": "1483850",
    "end": "1490960"
  },
  {
    "text": "end using the same constructs this is really the first of many examples of the",
    "start": "1490960",
    "end": "1496570"
  },
  {
    "text": "possibilities that we're unlocking by having ongoing Mobile in our mobile clients",
    "start": "1496570",
    "end": "1502380"
  },
  {
    "text": "as Jose shared we really feel we're just beginning to unlock the potential of",
    "start": "1506550",
    "end": "1512350"
  },
  {
    "start": "1507000",
    "end": "1526000"
  },
  {
    "text": "envoy mobile we sort of have table stakes at this point we have a networking library it actually works like the other networking libraries that",
    "start": "1512350",
    "end": "1518740"
  },
  {
    "text": "are available but envoy is so much more than just a networking library and we feel that a great deal of that",
    "start": "1518740",
    "end": "1524260"
  },
  {
    "text": "translates to the clients in the very near future we're going to use this as",
    "start": "1524260",
    "end": "1529510"
  },
  {
    "start": "1526000",
    "end": "1725000"
  },
  {
    "text": "our platform to implement quick an HTTP 3 on our mobile clients having gone through this sort of thing before it's",
    "start": "1529510",
    "end": "1536230"
  },
  {
    "text": "much harder doing this on both the backend and on an Android device and on an iOS device and it is working with a",
    "start": "1536230",
    "end": "1542320"
  },
  {
    "text": "single common stack without discrepancies and bakeries that go into multiple different implementations",
    "start": "1542320",
    "end": "1547830"
  },
  {
    "text": "additionally working on next-gen protocols was previously something that was really out of the reach of most",
    "start": "1547830",
    "end": "1553300"
  },
  {
    "text": "organizations someone like Google or Apple could do it sure they have huge",
    "start": "1553300",
    "end": "1558400"
  },
  {
    "text": "resources in terms of engineering but again you have to build this for different platforms and ensure",
    "start": "1558400",
    "end": "1564390"
  },
  {
    "text": "interoperate with envoy mobile you can build the single stack a single stack and run that single stack reason about",
    "start": "1564390",
    "end": "1571300"
  },
  {
    "text": "that single stack and actually be able to deploy something that's consistent envoy is also an incredibly extensible",
    "start": "1571300",
    "end": "1578170"
  },
  {
    "text": "platform by means of its filter chain you can do introduced almost any logic into request processing we see a lot of",
    "start": "1578170",
    "end": "1585700"
  },
  {
    "text": "opportunity to leverage these filter chains on the clients just like they've been leveraged on the back end some",
    "start": "1585700",
    "end": "1591010"
  },
  {
    "text": "obvious early examples that again we plan to work on in the near future are off we see it a single auth implemented",
    "start": "1591010",
    "end": "1597310"
  },
  {
    "text": "as possible for OAuth on both the clients and the backend by virtue of an envoy filter compression is another",
    "start": "1597310",
    "end": "1603280"
  },
  {
    "text": "example sure it's possible to get gzip support rolled out to your clients because everything supports it already",
    "start": "1603280",
    "end": "1608350"
  },
  {
    "text": "but say you want to experiment with broadly google's new protocol for compression that's something which again",
    "start": "1608350",
    "end": "1613480"
  },
  {
    "text": "you can do by virtue of implementing it once and deploying it across your entire mesh which includes your clients envoy",
    "start": "1613480",
    "end": "1620620"
  },
  {
    "text": "already has intelligent network behavior it selects connections it selects hosts that are healthy and rejects ones that",
    "start": "1620620",
    "end": "1626440"
  },
  {
    "text": "aren't we see this as something we can extend to clients selecting cellular or Wi-Fi connections based on network",
    "start": "1626440",
    "end": "1632110"
  },
  {
    "text": "conditions falling back from ipv6 to ipv4 for networks that don't support it or similarly from quick and UDP based",
    "start": "1632110",
    "end": "1639580"
  },
  {
    "text": "proto calls the TCB based protocols when needed Jose shared the model based API",
    "start": "1639580",
    "end": "1644860"
  },
  {
    "text": "that we use a lift we actually plan to expose support for this directly an envoy mobile despite also supporting",
    "start": "1644860",
    "end": "1650860"
  },
  {
    "text": "standard HTTP with the model based API we see opportunities to actually annotate it so you could actually",
    "start": "1650860",
    "end": "1656710"
  },
  {
    "text": "annotate the schema of the model with the behavior you want to it's a face under different Network conditions maybe",
    "start": "1656710",
    "end": "1662019"
  },
  {
    "text": "you drop certain fields under the face of low bandwidth or for connectivity maybe you mark the model as something",
    "start": "1662019",
    "end": "1667750"
  },
  {
    "text": "that can be sent deferrable or that on boy can mock is successful or when it's offline so the application flow can",
    "start": "1667750",
    "end": "1673269"
  },
  {
    "text": "continue and on VoIP transparently in the background could synchronize with the server later envoy is very",
    "start": "1673269",
    "end": "1679330"
  },
  {
    "text": "configurable online and again we see this as something we can extend to the mobile clients when you need to failover",
    "start": "1679330",
    "end": "1684879"
  },
  {
    "text": "you could do it by virtue of envoy configuration that's distributed via XDS as opposed to actually needing to use",
    "start": "1684879",
    "end": "1691179"
  },
  {
    "text": "server-side controls for it or when it comes time to roll out a new pop rather than need to roll out new clients with",
    "start": "1691179",
    "end": "1696759"
  },
  {
    "text": "new dns configuration instead you could do it via Envoy configuration and even",
    "start": "1696759",
    "end": "1702399"
  },
  {
    "text": "beyond mobile phones envoy Mobile is truly a cross-platform library we're already exploring integration with lifts",
    "start": "1702399",
    "end": "1708580"
  },
  {
    "text": "fleet of rentable transportation devices we've considered IOT we've also had",
    "start": "1708580",
    "end": "1714039"
  },
  {
    "text": "interest from folks even just looking to use it as a replacement Python networking library because at the end of the day it is a high performance C++",
    "start": "1714039",
    "end": "1720789"
  },
  {
    "text": "library under the hood the C bindings there make this all possible envoys",
    "start": "1720789",
    "end": "1726490"
  },
  {
    "start": "1725000",
    "end": "2138000"
  },
  {
    "text": "success is a platform is largely because of its vibrant community that has contributed from open source across",
    "start": "1726490",
    "end": "1733120"
  },
  {
    "text": "different disciplines and across different organizations envoy mobile is also being developed completely in the",
    "start": "1733120",
    "end": "1738970"
  },
  {
    "text": "open it has been open source since even version 0.1 and we really just barely had a proof of concept",
    "start": "1738970",
    "end": "1744100"
  },
  {
    "text": "we'd like to welcome you all to join us in working on this platform let us know what your needs are contribute to the",
    "start": "1744100",
    "end": "1749710"
  },
  {
    "text": "library and join us in revolutionising mobile networking thank you",
    "start": "1749710",
    "end": "1755850"
  },
  {
    "text": "we have five minutes for questions okay",
    "start": "1759060",
    "end": "1763470"
  },
  {
    "text": "yeah let's start let's start here with",
    "start": "1766320",
    "end": "1773500"
  },
  {
    "text": "with envoi in the data center you have control over all the nodes that are connecting having this distributed and",
    "start": "1773500",
    "end": "1780070"
  },
  {
    "text": "potentially exploited by somebody that is malicious it what concerns do you",
    "start": "1780070",
    "end": "1786910"
  },
  {
    "text": "have in that area do you have any how have you approached that I mean we definitely it's something you have to be",
    "start": "1786910",
    "end": "1793510"
  },
  {
    "text": "concerned about right so if you're talking about sending down dynamic configuration or even potentially in the future dynamically",
    "start": "1793510",
    "end": "1800200"
  },
  {
    "text": "executed code like via web assembly or Lua which are supported by on boy",
    "start": "1800200",
    "end": "1805300"
  },
  {
    "text": "filters that's something you have to be concerned about envoy of course does have mechanisms already in place for",
    "start": "1805300",
    "end": "1811060"
  },
  {
    "text": "doing both encryption you know via TLS and also authentication whether that be",
    "start": "1811060",
    "end": "1816310"
  },
  {
    "text": "certs or another mechanism like oh ah so you'd have to be careful about what you built and what you accepted in terms of",
    "start": "1816310",
    "end": "1821440"
  },
  {
    "text": "configuration security is definitely something we're thinking about we wouldn't actually include functionality",
    "start": "1821440",
    "end": "1827110"
  },
  {
    "text": "in library that could introduce arbitrary configurations or run arbitrary code without putting a lot of",
    "start": "1827110",
    "end": "1832780"
  },
  {
    "text": "thought into it that said there are cases where envoy mobile can actually potentially make things even more secure",
    "start": "1832780",
    "end": "1838180"
  },
  {
    "text": "just today envoy already has support for client-side certificates for TLS for certificate pinning you can do a great",
    "start": "1838180",
    "end": "1845260"
  },
  {
    "text": "deal more configuration around what kinds of TLS connections you're willing to make under what circumstances with",
    "start": "1845260",
    "end": "1850570"
  },
  {
    "text": "Envoy then you can out-of-the-box with pretty much anything else out there just because again it's envoy and it's what envoys supports so there's actually",
    "start": "1850570",
    "end": "1857560"
  },
  {
    "text": "security wins I think even today granted it's alpha software so you know be careful but there's at least the",
    "start": "1857560",
    "end": "1863650"
  },
  {
    "text": "opportunity to realize some security wins today hi great doc do you know what the impact was on the CPU and the memory",
    "start": "1863650",
    "end": "1870670"
  },
  {
    "text": "that this added to their also its impact on their doubled size yeah so early on",
    "start": "1870670",
    "end": "1877240"
  },
  {
    "text": "we established benchmarking for CPU battery consumption and the binary size",
    "start": "1877240",
    "end": "1883990"
  },
  {
    "text": "and it's something that we actually want to run every every time we're cutting",
    "start": "1883990",
    "end": "1889450"
  },
  {
    "text": "releases we run regression tests against those benchmarks to keep keep that in check yeah actually we already have binary",
    "start": "1889450",
    "end": "1897169"
  },
  {
    "text": "sighs in CI so we're already tracking that because of this an item of concern for mobile applications and we did early",
    "start": "1897169",
    "end": "1904399"
  },
  {
    "text": "on see performance issues that's part of why we retuned envoys main event loop so it's much more relaxed now envoy is",
    "start": "1904399",
    "end": "1910580"
  },
  {
    "text": "basically not doing work now unless there's networking happening at this point there you'll see very little",
    "start": "1910580",
    "end": "1915619"
  },
  {
    "text": "impact outside of maybe degenerate conditions yeah I had the same question",
    "start": "1915619",
    "end": "1922549"
  },
  {
    "text": "about app size and resource requirements and also what about the data usage you",
    "start": "1922549",
    "end": "1928339"
  },
  {
    "text": "said you sending a lot more matrix right from a you're sending more matrix and before so is that impacting data",
    "start": "1928339",
    "end": "1935659"
  },
  {
    "text": "conception a lot or so so we had to to",
    "start": "1935659",
    "end": "1940969"
  },
  {
    "text": "layer answer I think the first answer is right now we we expose the ability to",
    "start": "1940969",
    "end": "1946029"
  },
  {
    "text": "continue no configure the the frequency at which you're actually emitting metrics later on we actually want to",
    "start": "1946029",
    "end": "1953469"
  },
  {
    "text": "create interfaces where we can actually batch metrics and only flush them for",
    "start": "1953469",
    "end": "1959659"
  },
  {
    "text": "example when the app is getting background there or gonna be killed so we're only actually getting you know",
    "start": "1959659",
    "end": "1965629"
  },
  {
    "text": "emitting metrics when that's happening and it's configurable as the other part of that answer right so no matter what",
    "start": "1965629",
    "end": "1972469"
  },
  {
    "text": "if you want increased insight and what's happening you're not to send something and the best answer to that is I think",
    "start": "1972469",
    "end": "1978289"
  },
  {
    "text": "we can try to send it as efficiently as possible and let whoever's using the library decide what they want to send",
    "start": "1978289",
    "end": "1983749"
  },
  {
    "text": "and how often they want to send it you know awesome project",
    "start": "1983749",
    "end": "1989089"
  },
  {
    "text": "I like the initial announcement from Matt Klein on this I'm just wondering",
    "start": "1989089",
    "end": "1996159"
  },
  {
    "text": "you have on my mobile and Envoy are in the server side let's say I'm a you know",
    "start": "1996159",
    "end": "2002379"
  },
  {
    "text": "my company decides to adopt this what is the advantage that you guys you know not",
    "start": "2002379",
    "end": "2009339"
  },
  {
    "text": "right now if not right now or in future as well in terms of connectivity we use SEO also would like",
    "start": "2009339",
    "end": "2017349"
  },
  {
    "text": "to say stick to you steer for being having envoy as a sidecar so",
    "start": "2017349",
    "end": "2023380"
  },
  {
    "text": "what is yeah that's the question basically if I want to bring on my mobile just like left word for their app",
    "start": "2023380",
    "end": "2029770"
  },
  {
    "text": "for any app in general or even IOT going forward what is the advantage I see you",
    "start": "2029770",
    "end": "2037030"
  },
  {
    "text": "know library and functionality and algorithm being similar and being shared",
    "start": "2037030",
    "end": "2042120"
  },
  {
    "text": "and maybe being more slim slim doubt for smaller you know resources but what is",
    "start": "2042120",
    "end": "2049600"
  },
  {
    "text": "what is the benefits I would obtain being equal on either side or having",
    "start": "2049600",
    "end": "2055710"
  },
  {
    "text": "similar functionality on equal equal side both sides so what are intellect so",
    "start": "2055710",
    "end": "2062408"
  },
  {
    "text": "we actually try to unpack that a little bit that's okay there is I mean of",
    "start": "2062409",
    "end": "2067870"
  },
  {
    "text": "course we see a lot of potential benefit to running envoy you're asking about benefit to running envoy mobile as",
    "start": "2067870",
    "end": "2072908"
  },
  {
    "text": "opposed to running envoy as a sidecar in certain cases are you just asking about the benefit of running Envoy mobiles in",
    "start": "2072909",
    "end": "2078340"
  },
  {
    "text": "network library in general regardless potential even what you're running on the back end so what's the benefits to",
    "start": "2078340",
    "end": "2100060"
  },
  {
    "text": "using both and we're gonna have to do a brief answer and cut this off I think we're out of time but let's talk about it more after briefly though again it's",
    "start": "2100060",
    "end": "2106810"
  },
  {
    "text": "just you getting if you're already used to running envoy you realizing those same benefits if you've dashboards driven by envoy you can drive them from",
    "start": "2106810",
    "end": "2112570"
  },
  {
    "text": "your clients now if you have configuration you're used to running for envoy you can configure your clients now extensions that you build for your",
    "start": "2112570",
    "end": "2118090"
  },
  {
    "text": "back-end can work in the clients where they make sense so it's actually having that common layer everywhere it's kind of why envoy is great for the backend in",
    "start": "2118090",
    "end": "2124510"
  },
  {
    "text": "the first place thank you gentlemen appreciate the talk please rate this kind of schedule and if you have further",
    "start": "2124510",
    "end": "2130330"
  },
  {
    "text": "questions please take the conversation out to the hallway as we have another talk moving in thank you everyone thank you we'll stick around so if anyone has",
    "start": "2130330",
    "end": "2137230"
  },
  {
    "text": "questions we'll be out there",
    "start": "2137230",
    "end": "2140220"
  }
]