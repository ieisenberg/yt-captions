[
  {
    "text": "today securing user server access in kubernetes hi I'm messim I'm an engineer at Dallas",
    "start": "60",
    "end": "6600"
  },
  {
    "text": "kill and I'm Mike atrovsky I'm the head of product at tailskill we work at telescale today we're here to talk about",
    "start": "6600",
    "end": "12360"
  },
  {
    "text": "a specific problem that you might have which is allowing users to access internal services that you have running",
    "start": "12360",
    "end": "17520"
  },
  {
    "text": "in a kubernetes cluster so we're talking about the network security of connecting users to services",
    "start": "17520",
    "end": "23220"
  },
  {
    "text": "and kubernetes we'll cover first what kinds of traffic you might need to protect in kubernetes and why you might",
    "start": "23220",
    "end": "29160"
  },
  {
    "text": "have that kind of traffic going to your cluster then we'll specifically look at users accessing internal services in",
    "start": "29160",
    "end": "34559"
  },
  {
    "text": "your clusters that's the focus of this talk so we'll look at the security properties that you likely want for",
    "start": "34559",
    "end": "40079"
  },
  {
    "text": "protecting access to these internal services and we'll go over the various options that exist in and out of kubernetes for protecting this traffic",
    "start": "40079",
    "end": "46200"
  },
  {
    "text": "and then compare those so analyzing which options work for the security properties that you actually need this",
    "start": "46200",
    "end": "51719"
  },
  {
    "text": "talk is geared or meant for Network administrators or security teams using kubernetes with some understanding of",
    "start": "51719",
    "end": "56879"
  },
  {
    "text": "how kubernetes works so let's jump in there are many kinds of traffic that",
    "start": "56879",
    "end": "63000"
  },
  {
    "text": "might be going to your kubernetes cluster first it's the traffic that you need to get kubernetes working the",
    "start": "63000",
    "end": "68520"
  },
  {
    "text": "traffic between the components of kubernetes like from the cube API server to the control plane in the control plane to the cubelet in your work your",
    "start": "68520",
    "end": "74760"
  },
  {
    "text": "nodes or pod to pod Communications hilariously I gave a talk on exactly this topic four years ago now at kubecon",
    "start": "74760",
    "end": "81600"
  },
  {
    "text": "and I've forgotten all of it but if you want you can watch the talk the traffic that's managed in kubernetes and is",
    "start": "81600",
    "end": "87060"
  },
  {
    "text": "mostly has authentication integrity and encryption again watch the talk if you're interested",
    "start": "87060",
    "end": "92460"
  },
  {
    "text": "our second kind of traffic is traffic from a service to a service such as from like a front-end application to a",
    "start": "92460",
    "end": "97740"
  },
  {
    "text": "database this can be both intra or inter-cluster it might be coming from another kubernetes cluster if the two",
    "start": "97740",
    "end": "103799"
  },
  {
    "text": "applications are in different trust domains or hosted on different platforms or just managed by a different team or",
    "start": "103799",
    "end": "109799"
  },
  {
    "text": "if you're using like a microservice architecture and the full app runs across multiple clusters this service to",
    "start": "109799",
    "end": "115079"
  },
  {
    "text": "service traffic is often controlled monitored and secured using a service mesh",
    "start": "115079",
    "end": "120119"
  },
  {
    "text": "Third Kind of traffic here traffic from a user to a kubernetes control plane for when a member of like your devops team",
    "start": "120119",
    "end": "125399"
  },
  {
    "text": "or info team is accessing the control plane to manage cluster configurations you can hit the IP of the cube API",
    "start": "125399",
    "end": "130979"
  },
  {
    "text": "server directly and authenticate to cubectl but many folks secure this connection with something like Sebastian",
    "start": "130979",
    "end": "136560"
  },
  {
    "text": "and then lastly traffic from a user to a service that you're running on kubernetes if this is a web app for",
    "start": "136560",
    "end": "142680"
  },
  {
    "text": "example then this could be an end user of your application who's trying to buy a dog toy or on your website or if it's",
    "start": "142680",
    "end": "147959"
  },
  {
    "text": "an internal app then it's an employee of your company trying to run a Check processing job or something like that in",
    "start": "147959",
    "end": "153120"
  },
  {
    "text": "a bank branch and if it's a public app you might use like a load balancer to manage direct access to that service",
    "start": "153120",
    "end": "158520"
  },
  {
    "text": "so thinking of those like four kinds of traffic that we just talked about you know security folks and those are",
    "start": "158520",
    "end": "164940"
  },
  {
    "text": "the typical Solutions we also also also mention security folks worry a lot about how to secure access from a user to the",
    "start": "164940",
    "end": "170519"
  },
  {
    "text": "kubernetes control plane like with good reason you know mostly because apps is in the control plane would give you full control over the cluster however we're",
    "start": "170519",
    "end": "177300"
  },
  {
    "text": "not here to talk about that because there's so much guidance on that topic but what we are talking about is that",
    "start": "177300",
    "end": "182640"
  },
  {
    "text": "last item there a user accessing internal applications that you're running on kubernetes because there's a lot less guidance on how to do that and",
    "start": "182640",
    "end": "188700"
  },
  {
    "text": "how to do that well an internal app that you're running on your kubernetes cluster is different",
    "start": "188700",
    "end": "193800"
  },
  {
    "text": "depending on your circumstances some of the other options listed here like a service mesh or Bastion or a load",
    "start": "193800",
    "end": "199140"
  },
  {
    "text": "balancer might apply to how you protect traffic from users to internal services um so you're asking like do I really",
    "start": "199140",
    "end": "204959"
  },
  {
    "text": "need guidance on this topic uh probably um the kubernetes docs unhelpfully tell",
    "start": "204959",
    "end": "210480"
  },
  {
    "text": "you that your service may or may not be public and also it may or may not be authenticated I'm not a bad at the docs",
    "start": "210480",
    "end": "216180"
  },
  {
    "text": "like there's so many potential options that you can have here so it's on you to implement a solution",
    "start": "216180",
    "end": "222299"
  },
  {
    "text": "um all right so what are some examples of kinds of apps that you have these internal apps that users are trying to access",
    "start": "222299",
    "end": "227760"
  },
  {
    "text": "there's many internal services that might be in your cluster when you're running a service in kubernetes there",
    "start": "227760",
    "end": "234120"
  },
  {
    "text": "are a lot of other things that you run alongside your actual service that you need to maintain and then be able to access",
    "start": "234120",
    "end": "239819"
  },
  {
    "text": "anything that's started by Cube system so databases monitoring logging and",
    "start": "239819",
    "end": "244860"
  },
  {
    "text": "tracing other tools those should only be accessible to your info team and if",
    "start": "244860",
    "end": "250260"
  },
  {
    "text": "you're in the kubernetes dashboard or like the web UI that's another monitoring service that's only meant for your info team",
    "start": "250260",
    "end": "256079"
  },
  {
    "text": "you might also have some other internet applications for your organization that you you know manage and host on",
    "start": "256079",
    "end": "262139"
  },
  {
    "text": "kubernetes just like web apps for your customers maybe there's an easy way internally to look at a metrics",
    "start": "262139",
    "end": "267540"
  },
  {
    "text": "dashboard or look up the employees in your company in a Wiki of some kind and so do you really need to secure",
    "start": "267540",
    "end": "274380"
  },
  {
    "text": "access to these applications well probably they might include sensitive information that could be used to learn",
    "start": "274380",
    "end": "280740"
  },
  {
    "text": "your organizations data like customers or financials or at the very least they probably shouldn't",
    "start": "280740",
    "end": "286500"
  },
  {
    "text": "be public and these Services shouldn't necessarily be accessible by everyone at your organization so you are actually",
    "start": "286500",
    "end": "292740"
  },
  {
    "text": "going to need some kind of way of authenticating or restricting access even internally",
    "start": "292740",
    "end": "299240"
  },
  {
    "text": "so let's look at some criteria and these are these are the criteria we came up with right um when you're hosting an",
    "start": "300060",
    "end": "305340"
  },
  {
    "text": "internal application there are several security properties that you're going to want the service to have first visibility this is hopefully",
    "start": "305340",
    "end": "312120"
  },
  {
    "text": "self-evident but if you're hosting an internal application it should well actually be internal you want something",
    "start": "312120",
    "end": "318180"
  },
  {
    "text": "that's not publicly accessible and restricted to a set of individuals who are part of your organization",
    "start": "318180",
    "end": "323400"
  },
  {
    "text": "authentication this ensures that you know and verify the source and destination of the traffic that is you",
    "start": "323400",
    "end": "328979"
  },
  {
    "text": "verify the user and the service they're connecting to authorization stricter than just",
    "start": "328979",
    "end": "334680"
  },
  {
    "text": "visibility authorization ensures not only that your service is internal but only the right individuals in your",
    "start": "334680",
    "end": "341160"
  },
  {
    "text": "organization have access to it you could also build authorization into each of your applications rather than as",
    "start": "341160",
    "end": "346380"
  },
  {
    "text": "part of the Central Access solution but that's putting a lot of a lot of work on each of your application teams",
    "start": "346380",
    "end": "352080"
  },
  {
    "text": "encryption by encrypting your traffic you're preventing just anyone from reading it encryption ensures that only",
    "start": "352080",
    "end": "357960"
  },
  {
    "text": "the authorized parties can actually read the traffic so that any unauthorized party that intercepts traffic can't read",
    "start": "357960",
    "end": "364020"
  },
  {
    "text": "its contents load balancing if you're running multiple instances of a service you want",
    "start": "364020",
    "end": "369660"
  },
  {
    "text": "to load balance between them so that you're not overwhelming a service in any one node This falls into the availability part of",
    "start": "369660",
    "end": "376259"
  },
  {
    "text": "security and traffic filtering your service might not allow all traffic to access it you",
    "start": "376259",
    "end": "382380"
  },
  {
    "text": "can fill the traffic for unusually high requests like in response to a DDOS",
    "start": "382380",
    "end": "387479"
  },
  {
    "text": "attack or to rate limit one user who might be limiting another user's ability to use a service",
    "start": "387479",
    "end": "393539"
  },
  {
    "text": "internal applications might also filter traffic based on other criteria like location maybe you don't have any",
    "start": "393539",
    "end": "398880"
  },
  {
    "text": "employees in Australia and so it's weird to see traffic coming from there and lastly auditability you want to",
    "start": "398880",
    "end": "405000"
  },
  {
    "text": "Monitor and log information about the traffic going to your service so you can ensure it's acting as expected",
    "start": "405000",
    "end": "410340"
  },
  {
    "text": "you also need these logs in case you need to review access as part of like a security incident and there are other criteria here that",
    "start": "410340",
    "end": "416759"
  },
  {
    "text": "we haven't mentioned that aren't necessarily you know purely security focused you're going to you're going to want to have for users connecting to",
    "start": "416759",
    "end": "421860"
  },
  {
    "text": "internal Services um namely latency and availability but like I said we're going to focus on the",
    "start": "421860",
    "end": "427560"
  },
  {
    "text": "security properties so let's keep these criteria in mind when evaluating solutions for accessing",
    "start": "427560",
    "end": "434520"
  },
  {
    "text": "internal apps all right so what options do we really",
    "start": "434520",
    "end": "440460"
  },
  {
    "text": "have um the first couple options laid out on this on this slide are kubernetes",
    "start": "440460",
    "end": "445620"
  },
  {
    "text": "constructs they're what kubernetes provides out of the box with cluster IP and then on top of cluster IP you can",
    "start": "445620",
    "end": "451979"
  },
  {
    "text": "use a kubernetes load balancer which allows you to load balance traffic hitting a service across multiple different instances of that service the",
    "start": "451979",
    "end": "459120"
  },
  {
    "text": "traffic could originate from either outside or inside the cluster kubernetes Ingress which allows you to",
    "start": "459120",
    "end": "465180"
  },
  {
    "text": "Route web traffic from outside the cluster to Services running inside your cluster and kubernetes network policy",
    "start": "465180",
    "end": "470460"
  },
  {
    "text": "which allows you to restrict access to a given service the next set of options we're going to consider are some of those that we",
    "start": "470460",
    "end": "476520"
  },
  {
    "text": "mentioned earlier that you're typically used for other kinds of traffic in kubernetes so a service mesh which allows you to Route traffic between two",
    "start": "476520",
    "end": "483000"
  },
  {
    "text": "Services which could be in the same or in different clusters and a Bastion to enforce traffic to a",
    "start": "483000",
    "end": "488759"
  },
  {
    "text": "sensitive resource that goes through an audited and controlled entry point like restricting access to the kubernetes",
    "start": "488759",
    "end": "493919"
  },
  {
    "text": "control plane and lastly we're going to throw into the mix some more generic options for",
    "start": "493919",
    "end": "499139"
  },
  {
    "text": "protecting traffic between users and services at layer three where the underlying network is encrypted or untrusted the first is ipsec which is a",
    "start": "499139",
    "end": "506639"
  },
  {
    "text": "protocol for encrypting Communications between endpoints and then wireguard which is a more modern tunneling",
    "start": "506639",
    "end": "511800"
  },
  {
    "text": "protocol for end-to-end encrypted connections and those can be used Standalone or as part of VPN type",
    "start": "511800",
    "end": "517140"
  },
  {
    "text": "Solutions so I gave you two lists a list of all the criteria and a list of all the",
    "start": "517140",
    "end": "522539"
  },
  {
    "text": "options so you know what we're going to do we're going to compare them it's a very exciting talk",
    "start": "522539",
    "end": "528300"
  },
  {
    "text": "all right thank you Maya so let's dig in so as I mentioned the basic",
    "start": "528300",
    "end": "536940"
  },
  {
    "text": "building block for services on kubernetes is a cluster IP service right which basically provides a stable IP and",
    "start": "536940",
    "end": "542339"
  },
  {
    "text": "DNA stands for accessing Bots within a cluster uh the virtual IP is shared among the",
    "start": "542339",
    "end": "547980"
  },
  {
    "text": "pods a all the traffic router to that ipe will be routed by the cluster to that pod or to any of the replicas uh",
    "start": "547980",
    "end": "556140"
  },
  {
    "text": "the Pod if the pods go uh come in or are scaled up or scaled down uh though those",
    "start": "556140",
    "end": "562500"
  },
  {
    "text": "pods get removed from the service destinations uh the traffic keeps working fine you don't ex you shouldn't",
    "start": "562500",
    "end": "569339"
  },
  {
    "text": "see hiccups with that point however the cluster IP service is internal only to the cluster it is not something that you",
    "start": "569339",
    "end": "574440"
  },
  {
    "text": "can hit from outside the cluster without doing some additional steps",
    "start": "574440",
    "end": "579560"
  },
  {
    "text": "the other thing is that cluster IP also does not provide any encryption all it really does is that it takes your",
    "start": "579560",
    "end": "586080"
  },
  {
    "text": "packets of that your application would get normally and it just gets it from",
    "start": "586080",
    "end": "591240"
  },
  {
    "text": "like different sources from like different parts of the cluster different nodes different pods it also doesn't do any authentication or",
    "start": "591240",
    "end": "597660"
  },
  {
    "text": "authorization out of the box you need to add authentication and authorization to your application layer",
    "start": "597660",
    "end": "604740"
  },
  {
    "text": "uh",
    "start": "604740",
    "end": "607580"
  },
  {
    "text": "unlike cluster ipe Services load balancer services are actually publicly visible",
    "start": "610220",
    "end": "615740"
  },
  {
    "text": "uh these Services basically take a cluster IP service which is pointing to",
    "start": "615740",
    "end": "621300"
  },
  {
    "text": "like multiple replicas of your pods and it gives it a public IP",
    "start": "621300",
    "end": "626399"
  },
  {
    "text": "uh the problem is that that IP is public which really means that anyone on the",
    "start": "626399",
    "end": "631560"
  },
  {
    "text": "internet can reach it so it puts even more onus on this application layer to",
    "start": "631560",
    "end": "636839"
  },
  {
    "text": "add authentication and authorization and to do traffic filtering a lot of sases",
    "start": "636839",
    "end": "642720"
  },
  {
    "text": "actually do something similar not necessarily in kubernetes but they have IP allow listing and uh so that you can",
    "start": "642720",
    "end": "649920"
  },
  {
    "text": "only restrict access or you can only access the service for using some well-trusted IPS",
    "start": "649920",
    "end": "657620"
  },
  {
    "text": "yeah the third type of thing that we use to build all these Services is kubernetes",
    "start": "660720",
    "end": "667079"
  },
  {
    "text": "ingress which is a collection of routing rules that specify how traffic is routed to the service within a cluster so you",
    "start": "667079",
    "end": "673680"
  },
  {
    "text": "could imagine that you have a web web page which is uh running your toy app or your uh internal",
    "start": "673680",
    "end": "683959"
  },
  {
    "text": "banking system or CI system or anything",
    "start": "683959",
    "end": "689579"
  },
  {
    "text": "and you could expose all of those as like different services with different load balancers and all of them could get",
    "start": "689579",
    "end": "695940"
  },
  {
    "text": "different IPS but instead you could use kubernetes Ingress which provides a way for you to reuse some of those like use",
    "start": "695940",
    "end": "702360"
  },
  {
    "text": "a single public IPS and public instance and Route multiple domains behind it",
    "start": "702360",
    "end": "708480"
  },
  {
    "text": "it also allows you to do traffic routing based on paths not just host names uh",
    "start": "708480",
    "end": "715140"
  },
  {
    "text": "some of the some Ingress controllers like nginx and traffic uh provide",
    "start": "715140",
    "end": "720660"
  },
  {
    "text": "authentication and authorization using oauth and jots but it's still really uh and the really",
    "start": "720660",
    "end": "729120"
  },
  {
    "text": "nice thing that they provide is GEOS encryption which is that any traffic hitting your uh hitting that service",
    "start": "729120",
    "end": "735899"
  },
  {
    "text": "will get automatically get a HTTP assert or and make sure that those that no one",
    "start": "735899",
    "end": "741779"
  },
  {
    "text": "in on the public internet can intercept your traffic and see what is going on without doing like no one can man in the",
    "start": "741779",
    "end": "747060"
  },
  {
    "text": "middle of your thing uh the fourth type of thing that we use for",
    "start": "747060",
    "end": "754560"
  },
  {
    "text": "all of this is kubernetes Network policy what this does is that it says uh for a",
    "start": "754560",
    "end": "759899"
  },
  {
    "text": "set of PODS or a set of or namespace or set of services it can restrict what uh",
    "start": "759899",
    "end": "767220"
  },
  {
    "text": "traffic goes in and out of that pod so you could say that only a namespace can",
    "start": "767220",
    "end": "772800"
  },
  {
    "text": "talk within itself you can say that only these pods can talk only like the front-end pods can talk to the back end",
    "start": "772800",
    "end": "779100"
  },
  {
    "text": "pods uh only the back end ports you talk to the database pods and you can restrict access using that",
    "start": "779100",
    "end": "786980"
  },
  {
    "text": "you can use the network policy in addition to like kubernetes load balancers or kubernetes Ingress to",
    "start": "788220",
    "end": "793860"
  },
  {
    "text": "further restrict who can access it but really all this provides is a way for",
    "start": "793860",
    "end": "799139"
  },
  {
    "text": "you to secure servers to service communication it really doesn't help much with the user to service",
    "start": "799139",
    "end": "804600"
  },
  {
    "text": "communication because the user users are on the public internet and they're going to be reaching over the public internet",
    "start": "804600",
    "end": "810000"
  },
  {
    "text": "so you would need either to do like IPL listing like I mentioned earlier or you",
    "start": "810000",
    "end": "815339"
  },
  {
    "text": "would need to do something more fancy like uh authentication and authorization on",
    "start": "815339",
    "end": "822660"
  },
  {
    "text": "like different parts of the user identity",
    "start": "822660",
    "end": "828320"
  },
  {
    "text": "the other really interesting thing development that happened in kubernetes or in this space was a service mesh what",
    "start": "829980",
    "end": "836820"
  },
  {
    "text": "this does is that in typically in kubernetes when you have pods communicating with each other the",
    "start": "836820",
    "end": "842339"
  },
  {
    "text": "traffic is Flowing between them is plain text it is not encrypted it is not some",
    "start": "842339",
    "end": "848220"
  },
  {
    "text": "it does when you're sending traffic to someone on in your network in your cluster it is not necessarily you're not",
    "start": "848220",
    "end": "855600"
  },
  {
    "text": "always there's no way to guarantee who that traffic is coming from you could spoof the traffic you could spoof the",
    "start": "855600",
    "end": "861000"
  },
  {
    "text": "IPS you could do a lot of you could do a lot of funky things in order to get around the",
    "start": "861000",
    "end": "869339"
  },
  {
    "text": "restrictions however what service measures provide is that they run you use a sidecar proxy next to basically",
    "start": "869339",
    "end": "876060"
  },
  {
    "text": "all of your pods that side of car proxy will intercept all of the traffic and make sure and it",
    "start": "876060",
    "end": "883079"
  },
  {
    "text": "will commit when it's communicating with other services it will form mtls connections or Mutual Tios connection",
    "start": "883079",
    "end": "888600"
  },
  {
    "text": "and make sure that the communication between the services is strongly authenticated and you know that two",
    "start": "888600",
    "end": "894360"
  },
  {
    "text": "services are really that when you're talking to a service you're guaranteed that it is that",
    "start": "894360",
    "end": "899760"
  },
  {
    "text": "service that you're talking to and you're also guaranteed that the person who's calling you is the or the service that is calling you is that service",
    "start": "899760",
    "end": "908600"
  },
  {
    "text": "uh yeah",
    "start": "910500",
    "end": "914959"
  },
  {
    "text": "back over to me so um the next option we have is the Bastion so Bastion host is a",
    "start": "917399",
    "end": "922740"
  },
  {
    "text": "server running an application like a proxy or a load balancer that serves as the entry point to an internal service",
    "start": "922740",
    "end": "928680"
  },
  {
    "text": "um traditionally the combastian is the point of entry to your network it's the it's the hole in your firewall and",
    "start": "928680",
    "end": "933899"
  },
  {
    "text": "following a traditional Network model because it was a single point of entry to everything in your network and everything inside of your network wasn't",
    "start": "933899",
    "end": "940560"
  },
  {
    "text": "encrypted or authenticated since this is before zero trust Trends then the Bastion was particularly strongly",
    "start": "940560",
    "end": "946560"
  },
  {
    "text": "protected so once you got past Sebastian then you were just into the network so a Bastion is meant to be a single",
    "start": "946560",
    "end": "952260"
  },
  {
    "text": "bottleneck for anything that needs to flow into an application and by forcing all the traffic through a Bastion you",
    "start": "952260",
    "end": "958139"
  },
  {
    "text": "can then have a single place to enforce authorization and authentication do any filtering you want to do and then log",
    "start": "958139",
    "end": "964139"
  },
  {
    "text": "access um so it's your point of entry yeah but it's also your your point of policy enforcement",
    "start": "964139",
    "end": "969480"
  },
  {
    "text": "typically a Bastion is often just like openssh set up on a host U.S agent to",
    "start": "969480",
    "end": "974880"
  },
  {
    "text": "the host and then from there you can reach the resource that you're actually trying to access so in terms of visibility Sebastian has to be publicly",
    "start": "974880",
    "end": "982079"
  },
  {
    "text": "accessible which means that others at minimum know that it's there even if they can't actually access it you can",
    "start": "982079",
    "end": "988260"
  },
  {
    "text": "authenticate users to the host on based on SSH username and password keys or certs and use this for authorization",
    "start": "988260",
    "end": "994019"
  },
  {
    "text": "decisions although you might also be running a Bastion with like a single user that everybody logs in as and so",
    "start": "994019",
    "end": "1000320"
  },
  {
    "text": "you might not have that if that's if that's what you've set up instead opensh is encrypted so you get that",
    "start": "1000320",
    "end": "1006220"
  },
  {
    "text": "bastions don't have any notion of the services that you're connecting to they just say like oh you're on the network now you're in so and then and so they",
    "start": "1006220",
    "end": "1013519"
  },
  {
    "text": "don't try to load balance or in any way or do any kind of like sophisticated traffic traffic filtering you know once once you're in",
    "start": "1013519",
    "end": "1019820"
  },
  {
    "text": "and if you're using openssh open SSH lets you log messages about what the SSH server is doing",
    "start": "1019820",
    "end": "1025339"
  },
  {
    "text": "there's there's obviously more complex Bastion offerings on the market now which have better logging simple to manage authorization and some traffic",
    "start": "1025339",
    "end": "1032120"
  },
  {
    "text": "management like I mentioned but um and there's also hosted proxies that are",
    "start": "1032120",
    "end": "1037339"
  },
  {
    "text": "provided by the cloud provider so if you have something running in a cloud that might be the better solution for you to have it managed to manage for you on",
    "start": "1037339",
    "end": "1042860"
  },
  {
    "text": "your behalf all right so those are the options that were that we're considering that are you",
    "start": "1042860",
    "end": "1047900"
  },
  {
    "text": "know used for other kinds of accessing kubernetes so now let's talk about kind of generic connection and protection options",
    "start": "1047900",
    "end": "1055100"
  },
  {
    "text": "um so ipsec ipsec is a layer 3 protocol for encrypting information between two",
    "start": "1055100",
    "end": "1060919"
  },
  {
    "text": "endpoints it's used for transferring data or as part of a traditional VPN to encrypt traffic when it's on an",
    "start": "1060919",
    "end": "1067280"
  },
  {
    "text": "untrusted Network ipsec can encrypt the whole packet in like a tunneling mode or just a data packet in a transport mode",
    "start": "1067280",
    "end": "1073820"
  },
  {
    "text": "which allows you to inspect the headers for like more complicated routing you might be wanting to do in your network",
    "start": "1073820",
    "end": "1079460"
  },
  {
    "text": "to use ipsec you need to have both the source and destination host that you're connecting from into perform a key",
    "start": "1079460",
    "end": "1085880"
  },
  {
    "text": "exchange to establish a tunnel of which traffic is then sent so for users that are connecting to an internal service",
    "start": "1085880",
    "end": "1092059"
  },
  {
    "text": "that means in practice that each user's device will need to be able to initiate an ipsec connection so for example by",
    "start": "1092059",
    "end": "1099440"
  },
  {
    "text": "installing a client on each of those users devices this is the most common implementation I'm not using ipsecond",
    "start": "1099440",
    "end": "1105980"
  },
  {
    "text": "like a standalone tacky way but by using it as part as a protocol on a VPN ipsec",
    "start": "1105980",
    "end": "1111620"
  },
  {
    "text": "vpns are a common way for users to access internal Services no matter where they're running not just on kubernetes",
    "start": "1111620",
    "end": "1117080"
  },
  {
    "text": "but they could also be used to access Services running on a Commerce cluster so if we're looking at ipsec and IPC",
    "start": "1117080",
    "end": "1124039"
  },
  {
    "text": "vpns for this use case in terms of visibility ipsec doesn't care where it's connecting to as long as",
    "start": "1124039",
    "end": "1131720"
  },
  {
    "text": "they're reachable so if you if you you can have a service on only you know private IPS but you'll need your VPN to",
    "start": "1131720",
    "end": "1137419"
  },
  {
    "text": "have something like not traversal to actually make them accessible ipsec provides authentication and",
    "start": "1137419",
    "end": "1143059"
  },
  {
    "text": "encryption of Ip packets it doesn't provide authorization natively but probably if you're using an ipsec VPN",
    "start": "1143059",
    "end": "1149179"
  },
  {
    "text": "that's exactly what it's doing it's giving you authorization ipsec doesn't have any built-in traffic",
    "start": "1149179",
    "end": "1155000"
  },
  {
    "text": "management like a notion of load balancing or traffic filtering some of my PSI vpns if they're using",
    "start": "1155000",
    "end": "1160820"
  },
  {
    "text": "concentrators which is kind of like a Bastion you put all your traffic through there to get access to other stuff on",
    "start": "1160820",
    "end": "1165919"
  },
  {
    "text": "your network then they funnel all the traffic through that Central Point and in that case a VPN concentrator might",
    "start": "1165919",
    "end": "1171260"
  },
  {
    "text": "allow you to do some load balancing or traffic filtering and lastly auditability again since",
    "start": "1171260",
    "end": "1177440"
  },
  {
    "text": "ipsec is just a protocol you don't get any of this for free but with an ipsec based VPN you can expect to get network",
    "start": "1177440",
    "end": "1183559"
  },
  {
    "text": "logs of which users are accessing which services in some cases you can also introspect the actual traffic like the",
    "start": "1183559",
    "end": "1189740"
  },
  {
    "text": "packets So Not only would you know metadata but a connection like you know Alice is connecting to the hiirs system",
    "start": "1189740",
    "end": "1195760"
  },
  {
    "text": "but specific information like which SSH commands are being run by a specific user on a specific box",
    "start": "1195760",
    "end": "1203559"
  },
  {
    "text": "and the last option we're going to consider wireguard so if you're not familiar with wireguard wireguard is a",
    "start": "1204320",
    "end": "1210260"
  },
  {
    "text": "layer 3 tunneling protocol that lets two peers privately establish an end-10 encrypted connection wireguard uses",
    "start": "1210260",
    "end": "1216140"
  },
  {
    "text": "public Keys rather than public IP addresses to identify peers so as peers move connections can still persist the",
    "start": "1216140",
    "end": "1223760"
  },
  {
    "text": "only thing you actually need to configure is which peers you want to communicate with like ipsec you need to have both the",
    "start": "1223760",
    "end": "1229580"
  },
  {
    "text": "source and destination host that you're connecting to and from perform a key handshake to establish a tunnel which is",
    "start": "1229580",
    "end": "1234679"
  },
  {
    "text": "then used for for traffic to encrypt the traffic that's being sent so again for users connecting to a service each",
    "start": "1234679",
    "end": "1240919"
  },
  {
    "text": "user's device will need to install wireguard however compared to ipsec wire",
    "start": "1240919",
    "end": "1245960"
  },
  {
    "text": "guard is explicitly designed to optimize for security performance and ease of use and so wireguard given it has like",
    "start": "1245960",
    "end": "1251780"
  },
  {
    "text": "opinionated modern photography there's very little things to configure the only thing you really do configure is like I said the set of peers that you're going",
    "start": "1251780",
    "end": "1257480"
  },
  {
    "text": "to connect to you're not picking protocols for encryption all that kind of stuff so looking at wireguard connecting to",
    "start": "1257480",
    "end": "1263900"
  },
  {
    "text": "internal services wireguard like ipsec lets you connect Two Hosts anywhere as long as they're",
    "start": "1263900",
    "end": "1269000"
  },
  {
    "text": "reachable and can continue to connect even if an IP address changes as I mentioned so a user could like initiate",
    "start": "1269000",
    "end": "1274760"
  },
  {
    "text": "a connection to their database on their laptop at home bring it to the coffee shop and finish their work and then the",
    "start": "1274760",
    "end": "1279860"
  },
  {
    "text": "connection will still continue with no hiccups you can also connect to private IPS like with ipsec if the VPN that",
    "start": "1279860",
    "end": "1285860"
  },
  {
    "text": "you're using offers something like Nat traversal wireguard has built-in authentication and encryption Margaret uses the stream",
    "start": "1285860",
    "end": "1293000"
  },
  {
    "text": "Cipher Cha-Cha 20 and encryption for encryption and poly 1305 for Authentication",
    "start": "1293000",
    "end": "1298760"
  },
  {
    "text": "authorization is managed based on the configured list of peers so if a device has a peers public key then they can",
    "start": "1298760",
    "end": "1304400"
  },
  {
    "text": "communicate and there's but there's no other authentication built in again like with ipsec vpns that are built on top of",
    "start": "1304400",
    "end": "1310280"
  },
  {
    "text": "wireguard would add authorization that's what you're using a VPN for and like ipsec wire guard doesn't have",
    "start": "1310280",
    "end": "1316820"
  },
  {
    "text": "any built-in traffic management for load balancing or traffic filtering again if you're using a VPN and it's in like that",
    "start": "1316820",
    "end": "1322640"
  },
  {
    "text": "concentrator model like that funnel model then you might be able to do it use it to do load balancing",
    "start": "1322640",
    "end": "1327679"
  },
  {
    "text": "and like ipsec there's a theme here there's no built-in logs or monitoring for auditability of a wire guard based",
    "start": "1327679",
    "end": "1333260"
  },
  {
    "text": "connection but you could expect that from a VPN that you're that you use that it's wiregrade based to have to have those kinds of logs",
    "start": "1333260",
    "end": "1340340"
  },
  {
    "text": "right um so let's do something a bit more fun let's do a demo yeah uh",
    "start": "1340340",
    "end": "1348140"
  },
  {
    "text": "so since I work at TL scale we're gonna demo tail scale using tail scale to reach a kubernetes",
    "start": "1348140",
    "end": "1354380"
  },
  {
    "text": "service internally uh in this tail scale is a wireguard-based mesh VPN mesh Network",
    "start": "1354380",
    "end": "1361100"
  },
  {
    "text": "means that traffic doesn't go through a concentrator but connections are directly peer-to-peer so you get better",
    "start": "1361100",
    "end": "1368900"
  },
  {
    "text": "latency you you're not there's no single point of failure uh and it because it's based on wireguard",
    "start": "1368900",
    "end": "1376159"
  },
  {
    "text": "all of your connections are always encrypted from like one device to a different from any device on to any",
    "start": "1376159",
    "end": "1382580"
  },
  {
    "text": "other device it will always be into an interoper so in this demo we're going to set up a service in uh kubernetes",
    "start": "1382580",
    "end": "1389480"
  },
  {
    "text": "uh then we're going to set up uh something that we just are about to release yeah we're dropping something",
    "start": "1389480",
    "end": "1396620"
  },
  {
    "text": "we're dropping some new stuff soon not CVS yeah hopefully",
    "start": "1396620",
    "end": "1401720"
  },
  {
    "text": "so uh yeah we're gonna use we're gonna install the telescope operator uh and",
    "start": "1401720",
    "end": "1407120"
  },
  {
    "text": "using that tailsql operator we're going to expose the service to our tlnet and let's see what that does",
    "start": "1407120",
    "end": "1413240"
  },
  {
    "text": "okay so I'm gonna",
    "start": "1413240",
    "end": "1418120"
  },
  {
    "text": "I'm sorry this is going to be annoying because I have to change this place",
    "start": "1418340",
    "end": "1423220"
  },
  {
    "text": "can you see the same thing now okay cool so",
    "start": "1438919",
    "end": "1444559"
  },
  {
    "text": "I have bigger okay so I have this",
    "start": "1444559",
    "end": "1452659"
  },
  {
    "text": "mini Cube cluster that I created yesterday it is about 17 hours old you can see that it has nothing running",
    "start": "1452659",
    "end": "1460100"
  },
  {
    "text": "on it there's only the cube system namespace which has pods running on it there are there's just",
    "start": "1460100",
    "end": "1465919"
  },
  {
    "text": "it's it's a blank cluster there's really nothing here so the first thing I'm going to do is",
    "start": "1465919",
    "end": "1471679"
  },
  {
    "text": "I'm going to create this service called classes",
    "start": "1471679",
    "end": "1476080"
  },
  {
    "text": "and this will get me some parts and we're going to hope and pray that the",
    "start": "1476960",
    "end": "1482240"
  },
  {
    "text": "parts come out quickly and did it okay so uh then we are gonna expose that service",
    "start": "1482240",
    "end": "1489860"
  },
  {
    "text": "and you can see this and I'll just show this to you so it's literally just a simple",
    "start": "1489860",
    "end": "1495080"
  },
  {
    "text": "deployment it there's nothing fancy here uh it's just running in web mode",
    "start": "1495080",
    "end": "1500380"
  },
  {
    "text": "and I can show you the glances service this shows again standard nothing",
    "start": "1500380",
    "end": "1507260"
  },
  {
    "text": "interesting I'm going to now apply this and we can see that as we were speaking",
    "start": "1507260",
    "end": "1515659"
  },
  {
    "text": "talking about this earlier we have a cluster IP that we can now read well if we were in it in the cluster we could",
    "start": "1515659",
    "end": "1521840"
  },
  {
    "text": "hit it if I do this oops nothing will happen but what I can do is",
    "start": "1521840",
    "end": "1529340"
  },
  {
    "text": "I can do port forward I have port forward somewhere yeah there you go",
    "start": "1529340",
    "end": "1535220"
  },
  {
    "text": "and then I can go to localhost 5000 and I get this fancy thing that works right",
    "start": "1535220",
    "end": "1541520"
  },
  {
    "text": "but obviously this is running on my local machine and that's not useful right so what we're going to do",
    "start": "1541520",
    "end": "1547340"
  },
  {
    "text": "is we're going to now apply slightly we're gonna create the operator which",
    "start": "1547340",
    "end": "1554480"
  },
  {
    "text": "so this is the kubernetes tail scale operator that we're just releasing",
    "start": "1554480",
    "end": "1560080"
  },
  {
    "text": "and you can see that things are coming up and things are there and as the",
    "start": "1560740",
    "end": "1567559"
  },
  {
    "text": "telescope upper starts it joins my cluster oh it joins my tail net you can see that this I have tail scale",
    "start": "1567559",
    "end": "1574279"
  },
  {
    "text": "running here and there's the operator is here it's not that interesting yet we'll",
    "start": "1574279",
    "end": "1579380"
  },
  {
    "text": "we have some plans on how to make this more interesting but anyways back to this so now I have the kubernetes operator",
    "start": "1579380",
    "end": "1587059"
  },
  {
    "text": "line I'm going to do a diff of this and this now",
    "start": "1587059",
    "end": "1593900"
  },
  {
    "text": "to show you that all I'm doing is basically making a load balancer class I'm",
    "start": "1593900",
    "end": "1599059"
  },
  {
    "text": "changing it from this is mini Cube running on my laptop I'm going to say that no make it a load balancer instead",
    "start": "1599059",
    "end": "1605419"
  },
  {
    "text": "of a cluster IP and use a tailscale load balancer class I also tell it to use the demo hostname",
    "start": "1605419",
    "end": "1611360"
  },
  {
    "text": "so let's do that",
    "start": "1611360",
    "end": "1614260"
  },
  {
    "text": "so you will see that details here operator has spun up a",
    "start": "1618020",
    "end": "1624020"
  },
  {
    "text": "new pod and has given me a",
    "start": "1624020",
    "end": "1629299"
  },
  {
    "text": "a URL that I can hit okay so I'm going to hit this URL on my machine and this",
    "start": "1629299",
    "end": "1636799"
  },
  {
    "text": "is not going to work but this might hopefully maybe if I'm lucky",
    "start": "1636799",
    "end": "1643279"
  },
  {
    "text": "oh it does work right no Port forwards no nothing I have something that's running on this",
    "start": "1643279",
    "end": "1651400"
  },
  {
    "text": "um I hope that it doesn't isn't always this slow but I guess Wi-Fi",
    "start": "1651860",
    "end": "1657080"
  },
  {
    "text": "it's fine uh while we wait for this to do stuff what we're going to do is we're going to",
    "start": "1657080",
    "end": "1663860"
  },
  {
    "text": "use a new feature and this is this is not part of the operator that we're about to drop this is coming soon but I",
    "start": "1663860",
    "end": "1670100"
  },
  {
    "text": "it's in a branch somewhere that I'm working on but what this does is so there's a I'm sorry",
    "start": "1670100",
    "end": "1679640"
  },
  {
    "text": "yeah it's it's like literally ours old",
    "start": "1679640",
    "end": "1685419"
  },
  {
    "text": "so we're gonna and this is the other one which is",
    "start": "1685580",
    "end": "1690760"
  },
  {
    "text": "glances funnel with this the only difference is that",
    "start": "1691539",
    "end": "1697159"
  },
  {
    "text": "this is another annotation that I add and as you can see from it what it does is it uses the new uh new feature in",
    "start": "1697159",
    "end": "1704299"
  },
  {
    "text": "telescope called funnel and it will allow you to have a public IP on your machine",
    "start": "1704299",
    "end": "1710419"
  },
  {
    "text": "on my laptop sitting here in this booth all right",
    "start": "1710419",
    "end": "1716919"
  },
  {
    "text": "okay it loaded yay now what has let's see",
    "start": "1721039",
    "end": "1729700"
  },
  {
    "text": "yeah it seems to be working okay so now I can go to",
    "start": "1734539",
    "end": "1740480"
  },
  {
    "text": "this and if I do that",
    "start": "1740480",
    "end": "1745940"
  },
  {
    "text": "it starts to get a certificate wait what",
    "start": "1745940",
    "end": "1751159"
  },
  {
    "text": "it's doing stuff but in HTTPS cert and doing DNS yeah it",
    "start": "1751159",
    "end": "1757220"
  },
  {
    "text": "sets DNS locally and now what I can do is I can get off of tail scale",
    "start": "1757220",
    "end": "1764659"
  },
  {
    "text": "I'm no longer connected to Telltale and if I'm lucky in the Democrats are with me this should still work",
    "start": "1764659",
    "end": "1772659"
  },
  {
    "text": "and and maybe not Maybe",
    "start": "1772659",
    "end": "1780039"
  },
  {
    "text": "we're in limbo we're in limbo we're hoping that it works maybe Carl has a better luck",
    "start": "1781880",
    "end": "1790600"
  },
  {
    "text": "that's very small yeah I'm just so as you can see it did do stuff it did",
    "start": "1793100",
    "end": "1799880"
  },
  {
    "text": "uh the it hasn't it has a public IP it did stuff it is it got the certificate",
    "start": "1799880",
    "end": "1806360"
  },
  {
    "text": "uh and I'm sorry the internet is not great but uh you guys can right now go to this",
    "start": "1806360",
    "end": "1812899"
  },
  {
    "text": "this URL as you can see on your phone and it should work you can hit his laptop you",
    "start": "1812899",
    "end": "1818659"
  },
  {
    "text": "can hit my laptop my service is running on this cluster so this is obviously this is not you would not",
    "start": "1818659",
    "end": "1826039"
  },
  {
    "text": "expose an internal service like this but you could use you can use sales skill to expose the service running basically anywhere in",
    "start": "1826039",
    "end": "1832760"
  },
  {
    "text": "the world uh either on kubernetes are not in kubernetes and access it from anywhere in the world without doing any",
    "start": "1832760",
    "end": "1837980"
  },
  {
    "text": "port forwarding without like I'm on a public Wi-Fi in some conference and it works",
    "start": "1837980",
    "end": "1843860"
  },
  {
    "text": "nice thanks",
    "start": "1843860",
    "end": "1846278"
  },
  {
    "text": "yeah don't kill the service yet so people can hit it yeah I'm trying not to",
    "start": "1848919",
    "end": "1854299"
  },
  {
    "text": "um yeah so I think there is that's not what I wanted the um so it was spinning up a service of a",
    "start": "1854299",
    "end": "1861679"
  },
  {
    "text": "load balancer class type on on kubernetes adding a true telescope Network which then made it accessible to",
    "start": "1861679",
    "end": "1867740"
  },
  {
    "text": "anybody else who's on your telescale network who has authentication encryption all that goodness just like you would want for an internal",
    "start": "1867740",
    "end": "1873620"
  },
  {
    "text": "service and then if you wanted to make it publicly accessible like if you were trying to share a link with a partner of you know something in CI CD that you",
    "start": "1873620",
    "end": "1879500"
  },
  {
    "text": "were developing or that type of thing you can just share you can easily get I am um trying DNS and https and then go",
    "start": "1879500",
    "end": "1887179"
  },
  {
    "text": "from there while we figure out how monitors work because that's actually harder than what",
    "start": "1887179",
    "end": "1893000"
  },
  {
    "text": "Messengers did apparently so okay you also type really fast okay where was my presentation",
    "start": "1893000",
    "end": "1901490"
  },
  {
    "text": "[Music] I think I think I lost it",
    "start": "1901490",
    "end": "1906500"
  },
  {
    "text": "s lights okay cool",
    "start": "1906500",
    "end": "1913659"
  },
  {
    "text": "yeah I'll make it happen oh no that didn't work either oh I see give",
    "start": "1913899",
    "end": "1920779"
  },
  {
    "text": "me a sec dragon the other way click the next slide for",
    "start": "1920779",
    "end": "1928159"
  },
  {
    "text": "doing the wrong way there we go we have something oh live demos are fun",
    "start": "1928159",
    "end": "1935799"
  },
  {
    "text": "and these aren't lived almost fun I love that the live demo is easier than",
    "start": "1942440",
    "end": "1948140"
  },
  {
    "text": "than fixing slides all right so we did a demo",
    "start": "1948140",
    "end": "1953480"
  },
  {
    "text": "um again thanks for the demoism so we've covered all the options that we had and none of them provides all the properties",
    "start": "1953480",
    "end": "1958700"
  },
  {
    "text": "that we were looking for which is not shocking nonetheless let's go look back at the options that we considered and how they stack up and I'm sorry that the",
    "start": "1958700",
    "end": "1965299"
  },
  {
    "text": "text is so tiny there's too many options and two criteria so for the kubernetes constructs you",
    "start": "1965299",
    "end": "1970940"
  },
  {
    "text": "know combining kubernetes cluster services with load balancer gets you load balancing that's it it gives you inbound connectivity from outside the",
    "start": "1970940",
    "end": "1977240"
  },
  {
    "text": "cluster to Services running inside of it combining kubernetes cluster services with kubernetes Ingress gives you",
    "start": "1977240",
    "end": "1982279"
  },
  {
    "text": "encryption and load balancing you can still you know you can Route traffic into a cluster with TLS that terminates at",
    "start": "1982279",
    "end": "1988820"
  },
  {
    "text": "Ingress which may or may not be inside the cluster with kubernetes network policy you can restrict which Services inside a cluster",
    "start": "1988820",
    "end": "1994820"
  },
  {
    "text": "can communicate with which other services including restricting a service to only access accept traffic from Ingress",
    "start": "1994820",
    "end": "2000519"
  },
  {
    "text": "then for the set of options that are typically used for other kinds of trafficking kubernetes service mesh does",
    "start": "2000519",
    "end": "2005860"
  },
  {
    "text": "it everything or it can in some cases depending on what you're trying to do so why shouldn't you use a service mesh for",
    "start": "2005860",
    "end": "2012279"
  },
  {
    "text": "the user to internal service use case well you can again you just need a user",
    "start": "2012279",
    "end": "2017380"
  },
  {
    "text": "to install the service mesh agent on all user machines which ends up looking a lot like a VPN right a",
    "start": "2017380",
    "end": "2024640"
  },
  {
    "text": "Bastion is a single point of entry to your network it typically provides authentication authorization encryption and auditability but it sits on the",
    "start": "2024640",
    "end": "2030940"
  },
  {
    "text": "public web and it might have some traffic management capabilities if that's something that you need and then for protocols that are used to",
    "start": "2030940",
    "end": "2037419"
  },
  {
    "text": "protect traffic that we talked about and are typically used as part of a VPN ipsec gives you authentication and",
    "start": "2037419",
    "end": "2043000"
  },
  {
    "text": "encryption and ipsec-based VPN will typically provide you with authorization and auditability and may have some",
    "start": "2043000",
    "end": "2049060"
  },
  {
    "text": "traffic management options and similarly wire guard can be used anywhere that you wrote traffic but only gives you",
    "start": "2049060",
    "end": "2054158"
  },
  {
    "text": "authentication and encryption with authorization based on public Keys a wire guard based VPN will typically",
    "start": "2054159",
    "end": "2060040"
  },
  {
    "text": "provide you with authorization and auditability and might have some traffic filtering the main reason to favor",
    "start": "2060040",
    "end": "2065378"
  },
  {
    "text": "wireguard over ipsec in this scenario is just a simpler configuration right with better connectivity as the user changes",
    "start": "2065379",
    "end": "2071378"
  },
  {
    "text": "between between IPS wireguard-based vpns with a coordination server rather than a",
    "start": "2071379",
    "end": "2078940"
  },
  {
    "text": "um yeah with the coordination server like Tesco can also use natural to allow you to Route traffic to private private",
    "start": "2078940",
    "end": "2084940"
  },
  {
    "text": "IPS so the option that you should choose for your application doesn't only depend on security properties right as I mentioned",
    "start": "2084940",
    "end": "2090820"
  },
  {
    "text": "earlier you also think about you know latency availability usability it's a huge reason to decide what to do for",
    "start": "2090820",
    "end": "2095919"
  },
  {
    "text": "your internal users as well as ease of management of whatever solution you pick but there isn't a clear winner so I have",
    "start": "2095919",
    "end": "2101500"
  },
  {
    "text": "this very you know every solution has its trade-offs I know it's a very unsatisfying conclusion to this talk but",
    "start": "2101500",
    "end": "2106660"
  },
  {
    "text": "here we are nobody wins but also nobody loses which is",
    "start": "2106660",
    "end": "2111720"
  },
  {
    "text": "um all right if you want to learn more about some of the content we covered today check out these links um there's a community's documentation a",
    "start": "2112240",
    "end": "2118540"
  },
  {
    "text": "link to the operator that messum demoed and you can get a link to these slides I will leave this here and then I'll put",
    "start": "2118540",
    "end": "2124180"
  },
  {
    "text": "up the next slide which is a QR code for some feedback great",
    "start": "2124180",
    "end": "2129960"
  },
  {
    "text": "yeah so uh tailskill provides uh has its own uh Apple system so you can restrict",
    "start": "2143500",
    "end": "2150700"
  },
  {
    "text": "access to like uh you can say like uh Maya can reach my laptop or I can reach her laptop but no one else can so you",
    "start": "2150700",
    "end": "2157180"
  },
  {
    "text": "can and the authentication is based on your identity provider so it'll be like Maya tillscale.com or",
    "start": "2157180",
    "end": "2162760"
  },
  {
    "text": "whatever or her email is yeah is going to be able to reach my lotto",
    "start": "2162760",
    "end": "2168839"
  },
  {
    "text": "not your browser but your machine so there's a tail skill client that you need to install on your machine",
    "start": "2171599",
    "end": "2178780"
  },
  {
    "text": "and you log into that which will authenticate you to the using your IDP and give you credentials",
    "start": "2178780",
    "end": "2185880"
  },
  {
    "text": "yes or is it all around",
    "start": "2190000",
    "end": "2198240"
  },
  {
    "text": "uh to find uh if I wanted to expose an application",
    "start": "2200320",
    "end": "2206079"
  },
  {
    "text": "I want to at all then",
    "start": "2206079",
    "end": "2213000"
  },
  {
    "text": "um no not really so you can you can make um you can write access controls based",
    "start": "2213880",
    "end": "2220060"
  },
  {
    "text": "on users groups that includes groups from your identity provider IP addresses",
    "start": "2220060",
    "end": "2226540"
  },
  {
    "text": "uh tags which are kind of like a service account like a service account um that type of thing",
    "start": "2226540",
    "end": "2233500"
  },
  {
    "text": "um so you might say something like you know like my can access Finance machines or people in the you know Dev team can",
    "start": "2233500",
    "end": "2239500"
  },
  {
    "text": "access the production Network uh you can also restrict based on important protocol",
    "start": "2239500",
    "end": "2246000"
  },
  {
    "text": "yes yeah",
    "start": "2246820",
    "end": "2249420"
  },
  {
    "text": "any idea that tastes like",
    "start": "2274839",
    "end": "2279119"
  },
  {
    "text": "uh not that I know of uh you can I don't know about that but I know wireguard's",
    "start": "2280599",
    "end": "2286420"
  },
  {
    "text": "padding is very well defined and very small yeah like if like if wire guard breaks they have to redo like if the",
    "start": "2286420",
    "end": "2292480"
  },
  {
    "text": "underlying encryption breaks they have a way of changing like a version number but then like everything else every single bit is used basically right",
    "start": "2292480",
    "end": "2297820"
  },
  {
    "text": "there's no there's nothing over there's no overhead I don't know about if he's like yeah neither sorry yeah",
    "start": "2297820",
    "end": "2303960"
  },
  {
    "text": "yes",
    "start": "2304119",
    "end": "2306660"
  },
  {
    "text": "yes so tail scale has a feature called tailscale SSH which does basically that",
    "start": "2313300",
    "end": "2318760"
  },
  {
    "text": "so if you can install if you install jail scale on your nodes you can restrict who can access your nodes and",
    "start": "2318760",
    "end": "2326260"
  },
  {
    "text": "as what user and it runs its own SSH agent on the machine so it gets a lot",
    "start": "2326260",
    "end": "2331780"
  },
  {
    "text": "more fine-grained access you can there's also a Mode called check mode so you can say like Maya needs to re-authenticate",
    "start": "2331780",
    "end": "2337900"
  },
  {
    "text": "every four hours in order to reach the servers you could also just run any SSH traffic over any either ipsec or",
    "start": "2337900",
    "end": "2344079"
  },
  {
    "text": "wireguard and that should work fine but then you have to manage the client the you know user names and passwords or keys or whatever it happens to be",
    "start": "2344079",
    "end": "2350320"
  },
  {
    "text": "there's no reason that wouldn't work for for both ipsec and wireguard-based solutions",
    "start": "2350320",
    "end": "2356400"
  },
  {
    "text": "any more questions cool if you have any feedback",
    "start": "2360339",
    "end": "2366940"
  },
  {
    "text": "there's a QR code [Applause]",
    "start": "2366940",
    "end": "2374780"
  }
]