[
  {
    "text": "foreign on using the built-in SQL database with",
    "start": "1620",
    "end": "8820"
  },
  {
    "text": "spin 1.4 today we're going to take a look at this new feature in the latest",
    "start": "8820",
    "end": "13860"
  },
  {
    "text": "version of spin I am Melissa Klein the open source",
    "start": "13860",
    "end": "20279"
  },
  {
    "text": "program manager at fermion I'm going to start the webinar off with a quick introduction to spin and the built-in",
    "start": "20279",
    "end": "27660"
  },
  {
    "text": "SQL database feature later I will be joined with by Ryan",
    "start": "27660",
    "end": "33020"
  },
  {
    "text": "Levick a principal engineer at vermeon and he will be doing the demo",
    "start": "33020",
    "end": "39300"
  },
  {
    "text": "in the second half of this webinar so let's get started",
    "start": "39300",
    "end": "45079"
  },
  {
    "text": "first what is spin spin is an open source framework for",
    "start": "45840",
    "end": "51000"
  },
  {
    "text": "building and running event driven microservices with webassembly",
    "start": "51000",
    "end": "56520"
  },
  {
    "text": "the first release of spin was in Spring of 2020. this past spring we hit an important",
    "start": "56520",
    "end": "64198"
  },
  {
    "text": "Milestone with the 1.0 release since that release in March we've done",
    "start": "64199",
    "end": "70140"
  },
  {
    "text": "monthly releases with the current release of spin at 1.4 in July",
    "start": "70140",
    "end": "77240"
  },
  {
    "text": "spin is at it's open source and built on Open Standards so you can take your spin",
    "start": "77240",
    "end": "84000"
  },
  {
    "text": "applications and run them almost anywhere there are spin implementations for local",
    "start": "84000",
    "end": "89580"
  },
  {
    "text": "development for self-hosted servers for kubernetes and for cloud hosted services",
    "start": "89580",
    "end": "97520"
  },
  {
    "text": "spin aims to be an awesome developer experience it is a single binary tool to create",
    "start": "99299",
    "end": "106439"
  },
  {
    "text": "build and run your applications spin comes with built-in templates and",
    "start": "106439",
    "end": "112020"
  },
  {
    "text": "requires no boilerplate so it is fast and easy to get started writing the",
    "start": "112020",
    "end": "117600"
  },
  {
    "text": "logic of your applications there are sdks from multiple languages including rust go python JavaScript and",
    "start": "117600",
    "end": "127560"
  },
  {
    "text": "typescript so let's take a step back and talk about webassembly or wasm for short",
    "start": "127560",
    "end": "135480"
  },
  {
    "text": "awesome is a w3c standard binary format for a stacked based virtual machine",
    "start": "135480",
    "end": "140580"
  },
  {
    "text": "which makes it both cross-platform and cross architecture you may be thinking I know webassembly",
    "start": "140580",
    "end": "147959"
  },
  {
    "text": "as a browser-based technology why would I build microservices with it",
    "start": "147959",
    "end": "153840"
  },
  {
    "text": "well wasm is sandboxed portable and fast with millisecond cold start times",
    "start": "153840",
    "end": "160739"
  },
  {
    "text": "these characteristics make it appealing for other use cases such as mobile and",
    "start": "160739",
    "end": "166800"
  },
  {
    "text": "Edge devices and serverless applications additionally because it is an open",
    "start": "166800",
    "end": "172739"
  },
  {
    "text": "standard many languages have added wasm implementations which means you can get",
    "start": "172739",
    "end": "177840"
  },
  {
    "text": "started with wasm without learning a new language",
    "start": "177840",
    "end": "182480"
  },
  {
    "text": "now let's take a look at how easy it is to get an app up and running with spin",
    "start": "183720",
    "end": "188819"
  },
  {
    "text": "after installing spin we start by running the spin new command this command gives you a list of",
    "start": "188819",
    "end": "196440"
  },
  {
    "text": "templates pick one that matches your application type and language",
    "start": "196440",
    "end": "201659"
  },
  {
    "text": "here I picked an HTTP request Handler using python I'm going to give the app a",
    "start": "201659",
    "end": "207180"
  },
  {
    "text": "name in this case Pi test and to accept the fault for the other options",
    "start": "207180",
    "end": "213239"
  },
  {
    "text": "okay so now there's a directory with my new app in it so I'm going to change to",
    "start": "213239",
    "end": "218280"
  },
  {
    "text": "the pi test directory and I see there's an app.pi and a spin dot toml file in",
    "start": "218280",
    "end": "223560"
  },
  {
    "text": "this directory I'm going to edit the app.pi file and I",
    "start": "223560",
    "end": "228840"
  },
  {
    "text": "see I already have a basic HTTP request Handler",
    "start": "228840",
    "end": "234000"
  },
  {
    "text": "I'm going to make a little a few quick changes to this just to make it my own",
    "start": "234000",
    "end": "239340"
  },
  {
    "text": "and once I do that I'm going to save this file and go back",
    "start": "239340",
    "end": "245519"
  },
  {
    "text": "to the command line now we're ready to build",
    "start": "245519",
    "end": "252659"
  },
  {
    "text": "so we do a spin build command and it builds the application",
    "start": "252659",
    "end": "258060"
  },
  {
    "text": "next spin up we'll start the application running and we can see that it's running at Port",
    "start": "258060",
    "end": "264120"
  },
  {
    "text": "3000. so I go over to another terminal window",
    "start": "264120",
    "end": "269220"
  },
  {
    "text": "and I'm going to curl to that address",
    "start": "269220",
    "end": "273320"
  },
  {
    "text": "and now I see that I got my expected result and there that's how you run uh get",
    "start": "278520",
    "end": "285960"
  },
  {
    "text": "started running a spin application",
    "start": "285960",
    "end": "289880"
  },
  {
    "text": "so as you can see it is easy to get started with spin there are many more features you can use to build a spin app",
    "start": "293100",
    "end": "298919"
  },
  {
    "text": "you can check out our documentation to learn more about those features but now let's talk about accessing",
    "start": "298919",
    "end": "305820"
  },
  {
    "text": "accessing data sources from a spin application",
    "start": "305820",
    "end": "311100"
  },
  {
    "text": "even before our 1.0 release spin head support for bringing your own database",
    "start": "311100",
    "end": "316860"
  },
  {
    "text": "with this feature you can host and manage a data store outside of Spin and",
    "start": "316860",
    "end": "321960"
  },
  {
    "text": "use a spin API to make outbound calls to it there is support for relational",
    "start": "321960",
    "end": "327360"
  },
  {
    "text": "databases such as MySQL and postgres and then also support for redis data stores",
    "start": "327360",
    "end": "334199"
  },
  {
    "text": "this is useful when you have existing data you want to access with your new application you can find an extensive",
    "start": "334199",
    "end": "341340"
  },
  {
    "text": "example of how to use this feature in the example directory of the spin refund",
    "start": "341340",
    "end": "348020"
  },
  {
    "text": "next spin 1.0 introduced a built-in key value data store this means there's no Ops required for",
    "start": "351300",
    "end": "358440"
  },
  {
    "text": "all the provisioning configuration and management is done by spin components are not given access to the",
    "start": "358440",
    "end": "365160"
  },
  {
    "text": "KV store by default they must be granted access to do this you simply add one line to your application manifest file",
    "start": "365160",
    "end": "372539"
  },
  {
    "text": "then you can access the key Value Store from the component of your application using the API",
    "start": "372539",
    "end": "378180"
  },
  {
    "text": "or examples on how to use this feature you can see the examples database excuse",
    "start": "378180",
    "end": "384240"
  },
  {
    "text": "me the examples folder and the spin repo or in the language sdks",
    "start": "384240",
    "end": "390800"
  },
  {
    "text": "so now if you want an SQL database but you don't want to host your own",
    "start": "393440",
    "end": "400199"
  },
  {
    "text": "with spin 1.4 we now have a built-in sqlite database",
    "start": "400199",
    "end": "405360"
  },
  {
    "text": "again no Ops are required spin is going to create configure and manage the SQL database for you",
    "start": "405360",
    "end": "413580"
  },
  {
    "text": "components do not have access to the database by default only one line needs to be added to the application manifest",
    "start": "413580",
    "end": "420180"
  },
  {
    "text": "file to Grant access to the components and there's no credentials or connection strings to be managed spin handles all",
    "start": "420180",
    "end": "427380"
  },
  {
    "text": "the communications securely",
    "start": "427380",
    "end": "430940"
  },
  {
    "text": "to get started using the SQL Lite database feature first you want to make",
    "start": "435660",
    "end": "440819"
  },
  {
    "text": "sure you have spin 1.4 or later installed you also want to make sure",
    "start": "440819",
    "end": "445860"
  },
  {
    "text": "that you're up to date with the latest versions of your language sdks you wish to use",
    "start": "445860",
    "end": "451979"
  },
  {
    "text": "then we're going to go through the spin new and with your desired template start",
    "start": "451979",
    "end": "457919"
  },
  {
    "text": "your application and then in the spin.tamil file the application manifest you're going to",
    "start": "457919",
    "end": "464340"
  },
  {
    "text": "add this SQL Lite databases equals default this will give access to the",
    "start": "464340",
    "end": "469560"
  },
  {
    "text": "default database to any components that you wish to give access to",
    "start": "469560",
    "end": "476900"
  },
  {
    "text": "and that's it spin will create the database for you and then you can access it from your",
    "start": "480360",
    "end": "486599"
  },
  {
    "text": "code here you see an example python file here you see it's using the spin sqlite",
    "start": "486599",
    "end": "494460"
  },
  {
    "text": "uh module to access the database just opens a connection to the default",
    "start": "494460",
    "end": "501300"
  },
  {
    "text": "database it runs an SQL statement and returns a result and then Returns",
    "start": "501300",
    "end": "509039"
  },
  {
    "text": "the within the HTTP request Handler returns that result to the user",
    "start": "509039",
    "end": "514120"
  },
  {
    "text": "[Applause] all of the language sdks are using a",
    "start": "514120",
    "end": "520860"
  },
  {
    "text": "common set of operations for interacting with the SQL database open execute and close",
    "start": "520860",
    "end": "528120"
  },
  {
    "text": "the open and close operations open and close a connection to the database the",
    "start": "528120",
    "end": "533760"
  },
  {
    "text": "execute operation will execute an SQL statement so for a more in-depth explanation of",
    "start": "533760",
    "end": "541920"
  },
  {
    "text": "how to use these operations and how to use them with your preferred language you can see the SQL storage API guide in",
    "start": "541920",
    "end": "549720"
  },
  {
    "text": "the spin documentation so spins start a brand new database for",
    "start": "549720",
    "end": "558180"
  },
  {
    "text": "you but that that this database does not include any tables",
    "start": "558180",
    "end": "564839"
  },
  {
    "text": "so you can write code to run SQL statements that will create the tables that you want or",
    "start": "564839",
    "end": "572459"
  },
  {
    "text": "with your spin up command you can use the SQL Lite option to either run a file",
    "start": "572459",
    "end": "578519"
  },
  {
    "text": "to set up the database or",
    "start": "578519",
    "end": "583320"
  },
  {
    "text": "you can run the sqlite option with it with SQL commands",
    "start": "583680",
    "end": "591740"
  },
  {
    "text": "you can also use the runtime configuration file or the runtime config.toml file",
    "start": "595800",
    "end": "601980"
  },
  {
    "text": "to add additional SQL light databases each with their own name",
    "start": "601980",
    "end": "607980"
  },
  {
    "text": "so if you reference just default you'll get a default database but then you can add additional ones with different names",
    "start": "607980",
    "end": "614100"
  },
  {
    "text": "in different locations you can also specify what location you",
    "start": "614100",
    "end": "620700"
  },
  {
    "text": "want the default database to be it will if nothing is specified it will",
    "start": "620700",
    "end": "626279"
  },
  {
    "text": "save it in the dot spin directory but if you want to save it or reference an existing database you can set it in the",
    "start": "626279",
    "end": "632760"
  },
  {
    "text": "runtime configuration file",
    "start": "632760",
    "end": "636740"
  },
  {
    "text": "okay so now it's time for a demo I'd like to pass it off to Ryan Levick for",
    "start": "637920",
    "end": "643440"
  },
  {
    "text": "to do the demo all right everybody are you ready to build a to-do application using Spin and",
    "start": "643440",
    "end": "649860"
  },
  {
    "text": "sqlite let's do it so I've already created a little bit of our spin to do workspace here with a bit of the",
    "start": "649860",
    "end": "656339"
  },
  {
    "text": "boilerplate already created for us so that we don't have to do that but let's take a look at what we already have here",
    "start": "656339",
    "end": "661500"
  },
  {
    "text": "so I'm going to run tree with Git ignore flag here",
    "start": "661500",
    "end": "667500"
  },
  {
    "text": "in order to show what we already have so we have a couple of things here that are probably familiar with to you if you've",
    "start": "667500",
    "end": "673200"
  },
  {
    "text": "done any spin development before or if you're a rust developer but let's take it what that looks like so we have a",
    "start": "673200",
    "end": "678600"
  },
  {
    "text": "spin.tomel manifest file here and that describes what our spin application looks like we'll take a look at that in",
    "start": "678600",
    "end": "683820"
  },
  {
    "text": "just a second we also have a cargo.tomo file that's a manifest file for our rust application",
    "start": "683820",
    "end": "690000"
  },
  {
    "text": "that we're building and we have a source directory here that has lib.rs inside of it and that's where",
    "start": "690000",
    "end": "696120"
  },
  {
    "text": "the code that we'll be working on today and lastly we have a static assets file here this is all of the front-end code",
    "start": "696120",
    "end": "702420"
  },
  {
    "text": "that we're going to need in order to run our our application I went ahead and did that ahead of time so that we don't have",
    "start": "702420",
    "end": "707519"
  },
  {
    "text": "to worry about building the front end for us as as we go all right so let's take a look at the",
    "start": "707519",
    "end": "714600"
  },
  {
    "text": "spin.tumble file in order to know what our spin application actually looks like so here's what that looks like and it",
    "start": "714600",
    "end": "720540"
  },
  {
    "text": "should be familiar to you if you've seen a spin manifest file before but if not don't worry it includes some metadata",
    "start": "720540",
    "end": "727980"
  },
  {
    "text": "about our application here including a description the authors of the the",
    "start": "727980",
    "end": "733079"
  },
  {
    "text": "application name and this is an important part here the trigger so what actually triggers our application to run",
    "start": "733079",
    "end": "738660"
  },
  {
    "text": "and this says that HTTP requests are what triggers it we have other types of triggers in spin as well",
    "start": "738660",
    "end": "745560"
  },
  {
    "text": "and this application is composed of two components one is the to do API component and that's what we're going to",
    "start": "745560",
    "end": "751800"
  },
  {
    "text": "be working on today that's the API for our application and the second one is a file server that serves all the static",
    "start": "751800",
    "end": "757620"
  },
  {
    "text": "assets that we have over here and our static assets file so including our index.html CSS favicons app.js as well",
    "start": "757620",
    "end": "766880"
  },
  {
    "text": "and what we specify right here with our component trigger is anything any",
    "start": "766880",
    "end": "772800"
  },
  {
    "text": "request that comes in to slash API slash anything will be served by this",
    "start": "772800",
    "end": "777899"
  },
  {
    "text": "component right here our API component and otherwise we kind of have the fallback route of Slash anything will be",
    "start": "777899",
    "end": "784860"
  },
  {
    "text": "served by our static file server instead all right",
    "start": "784860",
    "end": "790079"
  },
  {
    "text": "so then we can take a look at what our code actually looks like so far and if you jump over here you'll see that in",
    "start": "790079",
    "end": "795720"
  },
  {
    "text": "fact we're we're just dealing with the spin sort of hello world or hello fermion example that we have that you",
    "start": "795720",
    "end": "803459"
  },
  {
    "text": "create when whenever you have a default application so this is what we're going to be replacing with our API logic",
    "start": "803459",
    "end": "809700"
  },
  {
    "text": "instead all right so let's go ahead and give this a run we can do that by doing spin build",
    "start": "809700",
    "end": "815459"
  },
  {
    "text": "here that builds our application um and then once we've built our application we can run spin up and that",
    "start": "815459",
    "end": "822839"
  },
  {
    "text": "brings up our application here so our application is up and it's getting up and running here and now it's running on",
    "start": "822839",
    "end": "829500"
  },
  {
    "text": "localhost Port 3000 and you can see that for a slash API we'll be serving the API",
    "start": "829500",
    "end": "835639"
  },
  {
    "text": "component and for anything else the file server will be serving it so let's take a look at what this looks like in",
    "start": "835639",
    "end": "841680"
  },
  {
    "text": "practice here is our our to-do application front end already running looks great but if we try and add a to",
    "start": "841680",
    "end": "848880"
  },
  {
    "text": "do like do laundry or laundry instead it doesn't work like",
    "start": "848880",
    "end": "855360"
  },
  {
    "text": "it's not working um here and so let's take a look and see what's happening over here we'll bump",
    "start": "855360",
    "end": "860579"
  },
  {
    "text": "over here and we'll see oh we're running into the fact that that hello fermion that we're returning from our API is not",
    "start": "860579",
    "end": "866639"
  },
  {
    "text": "valid Json and certainly not the Json or any response that our to-do application",
    "start": "866639",
    "end": "871860"
  },
  {
    "text": "is expecting so this is an expected error we want to go ahead and actually return back something that our",
    "start": "871860",
    "end": "877740"
  },
  {
    "text": "application can can actually work with all right so let's return back to our",
    "start": "877740",
    "end": "883139"
  },
  {
    "text": "code here we'll go ahead and and comment this out here and the first thing that",
    "start": "883139",
    "end": "888480"
  },
  {
    "text": "we're going to want to do is actually connect to our sqlite database so that we can actually query for for data",
    "start": "888480",
    "end": "894180"
  },
  {
    "text": "inside of it so in order to do that we're going to use this connection type that you can see right here comes from",
    "start": "894180",
    "end": "900300"
  },
  {
    "text": "the spin SDK SQL Lite module if we go ahead and bring that in we can",
    "start": "900300",
    "end": "905639"
  },
  {
    "text": "use open or rather open default here to open default database for our",
    "start": "905639",
    "end": "912000"
  },
  {
    "text": "application every spin application comes by default with a default database that",
    "start": "912000",
    "end": "917100"
  },
  {
    "text": "we can use where we don't really have to configure very much in order to use it if we have more databases then we can",
    "start": "917100",
    "end": "923760"
  },
  {
    "text": "use the open method in order to open those databases by whatever name we decide to give them",
    "start": "923760",
    "end": "928980"
  },
  {
    "text": "so we're opening our database here and if it fails we'll go ahead and return back that error and once we have a",
    "start": "928980",
    "end": "936300"
  },
  {
    "text": "connection here then there's only really one thing we can do with it and that's calling the",
    "start": "936300",
    "end": "941339"
  },
  {
    "text": "execute method on it so we can pass in some kind of SQL statement here in order",
    "start": "941339",
    "end": "947459"
  },
  {
    "text": "to be executed and in order to do that what we can do is uh let's just run",
    "start": "947459",
    "end": "952980"
  },
  {
    "text": "select star from to deuce from some to-do's table and we have to",
    "start": "952980",
    "end": "960240"
  },
  {
    "text": "pass in some parameters here but we don't have any so we'll just return an empty list that's if you want to",
    "start": "960240",
    "end": "965579"
  },
  {
    "text": "interpolate in some parameters and doing that in a way that's safe from SQL",
    "start": "965579",
    "end": "971279"
  },
  {
    "text": "injection and that can also fail so we'll question mark that up as well here",
    "start": "971279",
    "end": "977760"
  },
  {
    "text": "and that will run our um uh our query that we have here and we'll turn back a",
    "start": "977760",
    "end": "984420"
  },
  {
    "text": "result so we'll do we'll call that to Do's here and you'll see here that rust",
    "start": "984420",
    "end": "990240"
  },
  {
    "text": "analyzer is is printing out that um to-do's is of type query result so it returns back some object called query",
    "start": "990240",
    "end": "996060"
  },
  {
    "text": "result that we can get the rows of our query from and then the columns from our query and of course we're still",
    "start": "996060",
    "end": "1002180"
  },
  {
    "text": "complaining that we have to return a response here so let's let's uncomment this again and at least return something here but",
    "start": "1002180",
    "end": "1009079"
  },
  {
    "text": "we'll go ahead in the meantime and print out the to-do's that we have to Do's like this",
    "start": "1009079",
    "end": "1017500"
  },
  {
    "text": "and in fact I'll go ahead and print it out using that so we'll see nice verbose output as well",
    "start": "1018740",
    "end": "1025459"
  },
  {
    "text": "all right so let's go ahead and run this um go in here we'll run spin build and then",
    "start": "1025459",
    "end": "1032240"
  },
  {
    "text": "we'll do the dash U option that does spin build and then spin Up All In One",
    "start": "1032240",
    "end": "1037699"
  },
  {
    "text": "Go so we're just getting a warning that we're not using this request object here",
    "start": "1037699",
    "end": "1042740"
  },
  {
    "text": "that's fine and now our application is being served on Port 3000 again we'll hop over to our",
    "start": "1042740",
    "end": "1049040"
  },
  {
    "text": "front end um and we'll see that we're getting a 500 here uh oh so what's happening here",
    "start": "1049040",
    "end": "1054799"
  },
  {
    "text": "well we can see by the error message right here that we have access denied so we're not being allowed access to our",
    "start": "1054799",
    "end": "1061520"
  },
  {
    "text": "default database what what's up with that well it turns out by default default databases or any database is not",
    "start": "1061520",
    "end": "1069020"
  },
  {
    "text": "allow or any applications not allowed to access a database unless it is explicitly allowed to do so and we do",
    "start": "1069020",
    "end": "1076340"
  },
  {
    "text": "that inside of our spin.tommel file by coming in here finding the component that we want to give access to which is",
    "start": "1076340",
    "end": "1082220"
  },
  {
    "text": "our API component in this case and saying that the sqlite databases that it",
    "start": "1082220",
    "end": "1087860"
  },
  {
    "text": "has access to are equal to the default database so now our",
    "start": "1087860",
    "end": "1095539"
  },
  {
    "text": "component will have access to the default database so let's go ahead and try running that",
    "start": "1095539",
    "end": "1101179"
  },
  {
    "text": "again and you can see down here that we're actually accessing our our default",
    "start": "1101179",
    "end": "1106400"
  },
  {
    "text": "database as well okay let's head over here and refresh",
    "start": "1106400",
    "end": "1113179"
  },
  {
    "text": "and you'll see okay we're still getting a 500 that's not good but it's a different error and if we head over to",
    "start": "1113179",
    "end": "1118640"
  },
  {
    "text": "our our terminal here we'll see that the error that we're actually running into is that we do not have a table called to",
    "start": "1118640",
    "end": "1126200"
  },
  {
    "text": "Do's so we need our database which is completely empty now to have some kind of schema and it's expecting to have the",
    "start": "1126200",
    "end": "1132980"
  },
  {
    "text": "tables the table called to do's and we're going to have to create that so how do we do that",
    "start": "1132980",
    "end": "1138440"
  },
  {
    "text": "well we can take advantage of a flag on spin up",
    "start": "1138440",
    "end": "1144500"
  },
  {
    "text": "called sqlite and if we pass we can pass SQL light a",
    "start": "1144500",
    "end": "1149840"
  },
  {
    "text": "flag here a string to execute or even a file of SQL to to go ahead and execute",
    "start": "1149840",
    "end": "1155240"
  },
  {
    "text": "we'll do that we can specify a file by doing this at sign here and then doing the name of the file and",
    "start": "1155240",
    "end": "1161960"
  },
  {
    "text": "we'll we'll call it migration.sql if we run this we'll see it it errors out",
    "start": "1161960",
    "end": "1167179"
  },
  {
    "text": "because it doesn't know what migration.sql is so let's go ahead and create that migration",
    "start": "1167179",
    "end": "1173059"
  },
  {
    "text": "dot SQL all right we've created our migration.sql file here and we'll have",
    "start": "1173059",
    "end": "1178760"
  },
  {
    "text": "to populate this with some SQL that we want to run I'm going to come over to the off screen here and copy some SQL",
    "start": "1178760",
    "end": "1184340"
  },
  {
    "text": "that I have over here and in fact I'll even simplify it a bit by just doing two",
    "start": "1184340",
    "end": "1189559"
  },
  {
    "text": "two Fields here so this sequel is pretty simple it just creates a table if it doesn't exist",
    "start": "1189559",
    "end": "1194900"
  },
  {
    "text": "called to Do's has an ID that's an auto incrementing primary key and a description that's text that can't be",
    "start": "1194900",
    "end": "1201200"
  },
  {
    "text": "null so pretty straightforward and if we come back here and try and run this again",
    "start": "1201200",
    "end": "1206660"
  },
  {
    "text": "um oh seems like we have a an error because I left a comma there when I shouldn't see SQL is very fickle that's",
    "start": "1206660",
    "end": "1213559"
  },
  {
    "text": "why I copied it and and then I went ahead and edited it anyway oh oh well I guess I'll",
    "start": "1213559",
    "end": "1219860"
  },
  {
    "text": "learn next time so we see here now it's working because I fixed our our error",
    "start": "1219860",
    "end": "1225260"
  },
  {
    "text": "it's it's up and running and now we should have a a table called to Do's so",
    "start": "1225260",
    "end": "1231080"
  },
  {
    "text": "if we come back here we'll see we're back to the original error that we had before where",
    "start": "1231080",
    "end": "1237799"
  },
  {
    "text": "um we're returning back hello fermion and it's not valid Json like our um like",
    "start": "1237799",
    "end": "1242960"
  },
  {
    "text": "our app expects all right but we're now printing out the query result that we",
    "start": "1242960",
    "end": "1248059"
  },
  {
    "text": "have and you can see that we have two columns ID and description and no rows so no rows of data here so that's great",
    "start": "1248059",
    "end": "1255500"
  },
  {
    "text": "we're making some progress here so now inside of our app what we have to do is somehow convert the result that",
    "start": "1255500",
    "end": "1262460"
  },
  {
    "text": "we're getting back from um from our query and turn it into an",
    "start": "1262460",
    "end": "1267620"
  },
  {
    "text": "HTTP result a response that we can return back to the client",
    "start": "1267620",
    "end": "1273200"
  },
  {
    "text": "all right so in order to to do this I think it's better if we if we have some data to work with and in fact we can",
    "start": "1273200",
    "end": "1280100"
  },
  {
    "text": "actually manipulate our database directly if we want to because all it is is a sqlite database that exists in our",
    "start": "1280100",
    "end": "1285980"
  },
  {
    "text": "DOT spin file over here and if you're not familiar with that spin it just is a file where we stick some stuff that's um",
    "start": "1285980",
    "end": "1292220"
  },
  {
    "text": "of interest to you like logs and your default database so we can use SQL light",
    "start": "1292220",
    "end": "1297440"
  },
  {
    "text": "and let me clear the screen here and we can use sqlite3 here to access",
    "start": "1297440",
    "end": "1302600"
  },
  {
    "text": "our our database and here and",
    "start": "1302600",
    "end": "1309260"
  },
  {
    "text": "um we'll go ahead and run insert into to",
    "start": "1309260",
    "end": "1314480"
  },
  {
    "text": "do's and I hope I remember the uh",
    "start": "1314480",
    "end": "1320419"
  },
  {
    "text": "um the incantation correctly so insert into to to Do's",
    "start": "1320419",
    "end": "1326419"
  },
  {
    "text": "um description description",
    "start": "1326419",
    "end": "1332000"
  },
  {
    "text": "and then values um",
    "start": "1333140",
    "end": "1339080"
  },
  {
    "text": "do laundry",
    "start": "1339080",
    "end": "1341980"
  },
  {
    "text": "all right and if we go ahead and run select star from to Do's now now we have",
    "start": "1344299",
    "end": "1350480"
  },
  {
    "text": "one to do in our to-do's table called do laundry and let's go ahead and verify",
    "start": "1350480",
    "end": "1357140"
  },
  {
    "text": "that our app sees the same thing as well by running spin up",
    "start": "1357140",
    "end": "1362720"
  },
  {
    "text": "and coming over here refreshing the page",
    "start": "1362720",
    "end": "1368140"
  },
  {
    "text": "there we go getting the same error but you can see now that we actually are getting data",
    "start": "1368600",
    "end": "1374000"
  },
  {
    "text": "returned back to us so awesome we're we're almost done we're almost on our way so now we need to convert this query",
    "start": "1374000",
    "end": "1380780"
  },
  {
    "text": "result into to a response that we can return back to the um uh to our front end so we need to go",
    "start": "1380780",
    "end": "1389059"
  },
  {
    "text": "ahead and do to do's and we can call the rows function on it in order to get an",
    "start": "1389059",
    "end": "1395600"
  },
  {
    "text": "iterator of rows um and we'll just map over those rows here",
    "start": "1395600",
    "end": "1402759"
  },
  {
    "text": "like this and we can call let ID equals r dot get",
    "start": "1404659",
    "end": "1412700"
  },
  {
    "text": "and we can pass in the name of the column that we have little ID and description",
    "start": "1412700",
    "end": "1421600"
  },
  {
    "text": "is called description",
    "start": "1421760",
    "end": "1425620"
  },
  {
    "text": "all right now of course these things might not exist there's no way to statically know that these things exist",
    "start": "1426980",
    "end": "1433039"
  },
  {
    "text": "so we're going to have to handle the the optionality of it and for now because this is a demo I'm going to go ahead and",
    "start": "1433039",
    "end": "1438260"
  },
  {
    "text": "use unwrap but of course you would want to handle that a little bit more elegantly in real life",
    "start": "1438260",
    "end": "1443780"
  },
  {
    "text": "um here and the last thing that it's complaining about is that it needs some specific type in order to convert into",
    "start": "1443780",
    "end": "1451100"
  },
  {
    "text": "so it will automatically cast our uh the real result into what we expect for ID",
    "start": "1451100",
    "end": "1456919"
  },
  {
    "text": "we'll do u32 and for description we'll do a string of some sort and then we're",
    "start": "1456919",
    "end": "1463820"
  },
  {
    "text": "going to take that data and turn it into something that we can serialize as as Json so I'm going to create a struct",
    "start": "1463820",
    "end": "1470600"
  },
  {
    "text": "called to do here and it's going to have an ID of type u32 and a description",
    "start": "1470600",
    "end": "1478280"
  },
  {
    "text": "of type string and we're going to use our good old friend survey in order to",
    "start": "1478280",
    "end": "1483620"
  },
  {
    "text": "actually convert this into Json so",
    "start": "1483620",
    "end": "1489260"
  },
  {
    "text": "insert a um serialize we're gonna have to bring in survey as a",
    "start": "1489260",
    "end": "1496539"
  },
  {
    "text": "dependency and rust so survey and it's going to be version 1.0",
    "start": "1496539",
    "end": "1504860"
  },
  {
    "text": "um and it's going to use the feature of derive in order to be able to derive our",
    "start": "1505220",
    "end": "1513200"
  },
  {
    "text": "D series or our serialization so that brings in survey now this is all",
    "start": "1513200",
    "end": "1518539"
  },
  {
    "text": "looking happy um oh and what is it complaining about here",
    "start": "1518539",
    "end": "1523880"
  },
  {
    "text": "um [Applause] it is not liking that",
    "start": "1523880",
    "end": "1530860"
  },
  {
    "text": "I'm not quite sure why that would be let's just real quick",
    "start": "1538279",
    "end": "1544940"
  },
  {
    "text": "build this figure that out and in the meantime what",
    "start": "1544940",
    "end": "1551059"
  },
  {
    "text": "we're going to do is convert this into a to-do",
    "start": "1551059",
    "end": "1556480"
  },
  {
    "text": "and of course we're going to have to change our description which is a string slice into an owned string I like to run",
    "start": "1557380",
    "end": "1565520"
  },
  {
    "text": "to Owned on it in order to do that um let's see",
    "start": "1565520",
    "end": "1573340"
  },
  {
    "text": "[Music] um so for some reason uh it's not playing",
    "start": "1585430",
    "end": "1591320"
  },
  {
    "text": "well with me and I'm sure people at home are uh sure why this isn't working but that's fine",
    "start": "1591320",
    "end": "1596779"
  },
  {
    "text": "um we'll we'll go ahead and instead we'll pull insert a Json in order to do this",
    "start": "1596779",
    "end": "1603640"
  },
  {
    "text": "[Applause]",
    "start": "1603700",
    "end": "1606889"
  },
  {
    "text": "all right so we're bringing inserty Jason here and we're going to take our to do here",
    "start": "1610159",
    "end": "1617900"
  },
  {
    "text": "and convert it into uh into Json all right so let's go ahead and do that so the",
    "start": "1617900",
    "end": "1623960"
  },
  {
    "text": "first thing we do is collect into a vac here",
    "start": "1623960",
    "end": "1630440"
  },
  {
    "text": "so we have all of our to-do's Here and Now what we have to do",
    "start": "1630440",
    "end": "1638740"
  },
  {
    "text": "is convert this into uh Json that um that we can return back to the to the",
    "start": "1639200",
    "end": "1645679"
  },
  {
    "text": "user so we'll say let Json equals and we will convert our to-do's",
    "start": "1645679",
    "end": "1654700"
  },
  {
    "text": "into a Json object of some sort",
    "start": "1654799",
    "end": "1659320"
  },
  {
    "text": "so 30 Json",
    "start": "1662179",
    "end": "1665679"
  },
  {
    "text": "we can use the Json macro here in order to do this so we can say ID is equal to",
    "start": "1667580",
    "end": "1675320"
  },
  {
    "text": "T dot ID and description",
    "start": "1675320",
    "end": "1680799"
  },
  {
    "text": "I gotta learn how to spell description is equal to T dot description here",
    "start": "1682820",
    "end": "1689919"
  },
  {
    "text": "all right and we're just going to collect that into a vector",
    "start": "1691760",
    "end": "1698179"
  },
  {
    "text": "and then we should be able to turn this into",
    "start": "1704799",
    "end": "1710559"
  },
  {
    "text": "a body and it's complaining here that it doesn't know how to turn this into a",
    "start": "1711500",
    "end": "1718039"
  },
  {
    "text": "vector that's fine we can say Json dot um",
    "start": "1718039",
    "end": "1724720"
  },
  {
    "text": "survey Json serialize",
    "start": "1726640",
    "end": "1732620"
  },
  {
    "text": "sorry to string we'll turn our Json into a string here",
    "start": "1732740",
    "end": "1739900"
  },
  {
    "text": "and then turn that into the bytes that we need",
    "start": "1739900",
    "end": "1745600"
  },
  {
    "text": "oh and of course we need two unwrap in case that our turning into",
    "start": "1747440",
    "end": "1752840"
  },
  {
    "text": "string fails all right so we should be good here um sorry about the 30 serialized I'm sure",
    "start": "1752840",
    "end": "1760520"
  },
  {
    "text": "after this I'll hit myself on the head for why that actually happened but we have something turned into Json here",
    "start": "1760520",
    "end": "1766760"
  },
  {
    "text": "we're going to return it back to the user as well so let's try and run this by running spin clear the screen for us",
    "start": "1766760",
    "end": "1774500"
  },
  {
    "text": "then build and then Dash U and that's taking in the the new",
    "start": "1774500",
    "end": "1781760"
  },
  {
    "text": "dependencies there building them and we're up and running and we can",
    "start": "1781760",
    "end": "1787820"
  },
  {
    "text": "go ahead and there we go we have do laundry then so we're up and running we have everything running",
    "start": "1787820",
    "end": "1793940"
  },
  {
    "text": "so just to repeat back what we got uh got going here is we started with not",
    "start": "1793940",
    "end": "1799220"
  },
  {
    "text": "having a database we went into our spin dot Tamil file here",
    "start": "1799220",
    "end": "1804260"
  },
  {
    "text": "and allowed the usage of the database by using this line then inside of our code",
    "start": "1804260",
    "end": "1810200"
  },
  {
    "text": "here what we were able to do is connect to the default database make a query to",
    "start": "1810200",
    "end": "1815240"
  },
  {
    "text": "that database gets back some data converted into a model of some sort turn that model into Json in a roundabout way",
    "start": "1815240",
    "end": "1822799"
  },
  {
    "text": "sorry about that again and then return it back to the user and the front end knows how to take that and actually",
    "start": "1822799",
    "end": "1828679"
  },
  {
    "text": "display it to the user in the UI so if you found this interesting and",
    "start": "1828679",
    "end": "1834020"
  },
  {
    "text": "like to keep going you can go to this example demonstration here where we have",
    "start": "1834020",
    "end": "1841460"
  },
  {
    "text": "this whole application written out with the ability to edit and to delete and",
    "start": "1841460",
    "end": "1846860"
  },
  {
    "text": "you can run this in your locally as well and try and",
    "start": "1846860",
    "end": "1852399"
  },
  {
    "text": "build out the rest of the application for you for your own self so I hope you enjoy this",
    "start": "1852399",
    "end": "1858559"
  },
  {
    "text": "um thank you very much",
    "start": "1858559",
    "end": "1861520"
  }
]