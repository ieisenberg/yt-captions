[
  {
    "text": "hello everybody can you hear me well we are going to start talking about",
    "start": "40",
    "end": "5600"
  },
  {
    "text": "uh enforceable supply chain policies in that stations using intoto I'm really excited to be uh all the way across the",
    "start": "5600",
    "end": "12200"
  },
  {
    "text": "pond to talk about a project that's been uh dear to my heart for I think it's",
    "start": "12200",
    "end": "17279"
  },
  {
    "text": "turning 10 years uh this year which is very exciting I'm Santiago I work at",
    "start": "17279",
    "end": "22320"
  },
  {
    "text": "Purdue and this is Alan hi everyone",
    "start": "22320",
    "end": "27400"
  },
  {
    "text": "so in order to understand what in to is for and what it is about we want to we",
    "start": "27400",
    "end": "32840"
  },
  {
    "text": "first need to understand what a software supply chain attack is and uh actually does everybody know what a software",
    "start": "32840",
    "end": "38879"
  },
  {
    "text": "supply chain is first of all I assume that if you're in this room you have some passing knowledge and you're interested in securing the supply chain",
    "start": "38879",
    "end": "44960"
  },
  {
    "text": "rather than understanding what it is but a supply chain is essentially a",
    "start": "44960",
    "end": "50079"
  },
  {
    "text": "collection of steps that are carried out in order to produces soft the product",
    "start": "50079",
    "end": "55600"
  },
  {
    "text": "the uh the common understanding nowadays is that in order to make a serious piece",
    "start": "55600",
    "end": "61760"
  },
  {
    "text": "of software really any software you're going to rely on a bunch of different things to make that software this",
    "start": "61760",
    "end": "67439"
  },
  {
    "text": "includes devices servers organizations and people that uh will help you produce",
    "start": "67439",
    "end": "73600"
  },
  {
    "text": "the software that you want to produce a software supply chain attack is when somebody tries to attack that",
    "start": "73600",
    "end": "79840"
  },
  {
    "text": "particular aspect of software development in order to carry out something malicious this is stealing",
    "start": "79840",
    "end": "85799"
  },
  {
    "text": "your uh private property or intellectual property or introducing a Rogen in your software or even denying uh your ability",
    "start": "85799",
    "end": "93479"
  },
  {
    "text": "to deliver the software to to our users the software supply chain security",
    "start": "93479",
    "end": "99200"
  },
  {
    "text": "ecosystem nowadays is pretty uh Prem mature there's a lot of things out there sometimes it's a little bit daunting",
    "start": "99200",
    "end": "105079"
  },
  {
    "text": "when you look at all of the solutions that exists something that I want to uh",
    "start": "105079",
    "end": "110439"
  },
  {
    "text": "to help you uh contextualize is this uh model where you uh have three major things that you want to do in order to",
    "start": "110439",
    "end": "116479"
  },
  {
    "text": "protect the software supply chain at the left you have evidence ga in uh things like salsa Tech and chains witness cycl",
    "start": "116479",
    "end": "123960"
  },
  {
    "text": "DX and spdx are ways for you to say hey this is what I know about this",
    "start": "123960",
    "end": "129119"
  },
  {
    "text": "particular step or element on my software supply chain once you know everything about the software supply",
    "start": "129119",
    "end": "134519"
  },
  {
    "text": "chain you need to communicate it to your users so you may want to use a system that allows you to verifiably transmit",
    "start": "134519",
    "end": "140080"
  },
  {
    "text": "this information to your clients you have things like whack or get G bomb or omniore you have Arista you have graphus",
    "start": "140080",
    "end": "148360"
  },
  {
    "text": "skit six door all of this system provide transparency to the evidence that has been gathered through the supply chain",
    "start": "148360",
    "end": "155000"
  },
  {
    "text": "uh now giving this information to the user is not enough they want to know whether they can trust your piece of",
    "start": "155000",
    "end": "160400"
  },
  {
    "text": "software based on the evidence that they you collected so things like Q an open policy agent or kerno there's really so",
    "start": "160400",
    "end": "168560"
  },
  {
    "text": "many things out there that can help you verify this information but they will contact and talk to this transparency",
    "start": "168560",
    "end": "174080"
  },
  {
    "text": "services in order to verify the state of the supply chain now you may",
    "start": "174080",
    "end": "180680"
  },
  {
    "text": "be asking yourself does this have to do with intto and the answer is yes intto is part of all of this solutions in some",
    "start": "180680",
    "end": "188680"
  },
  {
    "text": "way or another or it really is meant to allow you to carry out this flow of gathering delivery and verification in a",
    "start": "188680",
    "end": "196080"
  },
  {
    "text": "unified framework you may notice uh intoto is involved in other things that you all are very familiar with for",
    "start": "196080",
    "end": "202680"
  },
  {
    "text": "example Salsa Salsa and in Toto play very well together if you have seen Tucker image attestations they uh",
    "start": "202680",
    "end": "209799"
  },
  {
    "text": "piggybacking on top of intto to also communicate the information about the images mpm and GitHub attestations which",
    "start": "209799",
    "end": "216319"
  },
  {
    "text": "is a very exciting uh public data that allows you to verify that a build on GitHub actions is actually providing uh",
    "start": "216319",
    "end": "224159"
  },
  {
    "text": "Providence for the package that you're about to install in a different platform which is mpm I'll talk a little bit more",
    "start": "224159",
    "end": "230599"
  },
  {
    "text": "about those in detail in a minute now more explicitly intoto is a",
    "start": "230599",
    "end": "236920"
  },
  {
    "text": "way to manage all of the supply chain metadata and deliver it verifiably to your consumers so for example you",
    "start": "236920",
    "end": "244560"
  },
  {
    "text": "collect information about your software supply chain as you are carrying out Source uh Source Cod development or",
    "start": "244560",
    "end": "252599"
  },
  {
    "text": "you're building a cicd system like Travis or you are using a uh an",
    "start": "252599",
    "end": "258239"
  },
  {
    "text": "independent build Farm using Meson or something like that or you're packaging on a on a l Destro you want to",
    "start": "258239",
    "end": "265000"
  },
  {
    "text": "communicate information about each individual step now each individual step in this case is an attestation and it's",
    "start": "265000",
    "end": "271680"
  },
  {
    "text": "a literally a small receipt a sence receipt that says I did the source code",
    "start": "271680",
    "end": "277120"
  },
  {
    "text": "development I did the building I did the testing I did the packaging in total is comprised of two",
    "start": "277120",
    "end": "284759"
  },
  {
    "text": "uh fundamental things then we have attestations as I just pointed out and you also have uh layouts and policies",
    "start": "284759",
    "end": "290960"
  },
  {
    "text": "that tell you what are those attestations supposed to look like this looks a little bit like this you have an",
    "start": "290960",
    "end": "297600"
  },
  {
    "text": "attestation that comprises of an EMP a predicate and a",
    "start": "297600",
    "end": "302800"
  },
  {
    "text": "subject uh at a very high level the envelope combines the uh predicate and",
    "start": "302800",
    "end": "309479"
  },
  {
    "text": "the subject it says this particular piece of uh software say a package or a piece of source code has this",
    "start": "309479",
    "end": "316120"
  },
  {
    "text": "information attached to it that is the predicate so for example to put it on more concrete uh terms you may have",
    "start": "316120",
    "end": "323280"
  },
  {
    "text": "something like this particular build has a Sala Provence attached to it now now",
    "start": "323280",
    "end": "329800"
  },
  {
    "text": "you know that this Sals of Provence is applicable to this particular uh artifact that was built if you wanted to",
    "start": "329800",
    "end": "336680"
  },
  {
    "text": "seek uh congruence or check that there's also a vulnerability scan then you can find an attestation that talks about the",
    "start": "336680",
    "end": "343080"
  },
  {
    "text": "exact same piece of software but with a different predicate that would be the result of something like",
    "start": "343080",
    "end": "349919"
  },
  {
    "text": "trivy when you have when you combine enough attestations you're able to essentially visualize the software",
    "start": "349919",
    "end": "355440"
  },
  {
    "text": "supply chain and the different steps as they connect to each other in this case uh the stations that I showed",
    "start": "355440",
    "end": "361080"
  },
  {
    "text": "you where uh displaying something like you take the Version Control System code",
    "start": "361080",
    "end": "366520"
  },
  {
    "text": "you put it on Travis CI to to check that everything is correct but you also want to build it on a separate build farm and",
    "start": "366520",
    "end": "372479"
  },
  {
    "text": "create the Sal a Providence attestation for it and then you eventually want to package it and produce a nbone for it",
    "start": "372479",
    "end": "377880"
  },
  {
    "text": "and you want all of these things to be in agreement so that you know that all of these are part of the same supply",
    "start": "377880",
    "end": "383039"
  },
  {
    "text": "chain it's veriable it's trustworthy in totto then lets you",
    "start": "383039",
    "end": "388520"
  },
  {
    "text": "answer a bunch of different question questions not only at the at the individual predicate level but actually",
    "start": "388520",
    "end": "393840"
  },
  {
    "text": "at the whole end to end software supply chain level so in this case we know who did what that is who's the person who",
    "start": "393840",
    "end": "401000"
  },
  {
    "text": "taged the release which server was used to build the source code which um which",
    "start": "401000",
    "end": "407360"
  },
  {
    "text": "packager or which build Farm is the one where this was built what server was this run are they",
    "start": "407360",
    "end": "413319"
  },
  {
    "text": "allow to do this uh this release uh is this SAS bomb the one that applies to",
    "start": "413319",
    "end": "418440"
  },
  {
    "text": "this uh particular artifact that also has a Sala Provence attached to it and so on so forth really the fundamental",
    "start": "418440",
    "end": "426120"
  },
  {
    "text": "question that we want to answer when we're using int is should I be using this piece of",
    "start": "426120",
    "end": "431759"
  },
  {
    "text": "software so to bring it a little bit more to the concrete you can use a tool like trivy today you can scan your",
    "start": "432160",
    "end": "438120"
  },
  {
    "text": "software and you can spit out information about the about the scan in an internal attestation and then well",
    "start": "438120",
    "end": "445240"
  },
  {
    "text": "you can create a policy that says I want every single artifact that I'm delivering to my users to have a",
    "start": "445240",
    "end": "451360"
  },
  {
    "text": "vulnerability scan and that vulnerability scan needs to be trustworthy so I want somebody in my company to be the one that's running",
    "start": "451360",
    "end": "457560"
  },
  {
    "text": "this vulnerability scan you can do things like salsa Provence attestations which you're",
    "start": "457560",
    "end": "464199"
  },
  {
    "text": "probably very familiar with by now which are I want this to be built on GitHub actions or I want this to be uh built on",
    "start": "464199",
    "end": "471240"
  },
  {
    "text": "my Jenkins Runner and I only want it to be built on that Jenkins Runner with a",
    "start": "471240",
    "end": "476360"
  },
  {
    "text": "proper compiler and the proper tools and dependencies and the latest kernel with",
    "start": "476360",
    "end": "481639"
  },
  {
    "text": "the best patches available and so on and so forth we'll talk a little bit more about this on the",
    "start": "481639",
    "end": "487280"
  },
  {
    "text": "demo you can also answer other more like open-ended questions that's why the there's open-ended attestation types",
    "start": "487280",
    "end": "494639"
  },
  {
    "text": "that can uh fill in the blanks of well when I run the tests did they pass was there an okay at the end or was there a",
    "start": "494639",
    "end": "502520"
  },
  {
    "text": "build like a runtime trays that collected information of of the build as it was being built so I can I can do a",
    "start": "502520",
    "end": "508199"
  },
  {
    "text": "little bit more granular analysis of the artifact as it was being built the idea is that you can use in",
    "start": "508199",
    "end": "515479"
  },
  {
    "text": "Toto as a common method to manage and to analyze the software supply chain at station and apply it to a policy that",
    "start": "515479",
    "end": "521518"
  },
  {
    "text": "applies not only to a particular part of the supply chain but rather encompasses an endtoend",
    "start": "521519",
    "end": "527640"
  },
  {
    "text": "flow of the software supply chain now you can do this with uh in",
    "start": "527640",
    "end": "533279"
  },
  {
    "text": "total tooling there is a lot so don't get overwhelmed something I wanted to do this time around uh is to give you a",
    "start": "533279",
    "end": "539519"
  },
  {
    "text": "little bit of an overview of all of the tools that are out there and give you a little bit of guidance on how to get",
    "start": "539519",
    "end": "545560"
  },
  {
    "text": "started there's a lot of uh in total reference implementations in different languages uh there's Java rust",
    "start": "545560",
    "end": "553519"
  },
  {
    "text": "python go I think there's a couple of others but really focus on those ones I",
    "start": "553519",
    "end": "558560"
  },
  {
    "text": "think that's enough to play with but uh if you wanted to just go",
    "start": "558560",
    "end": "563600"
  },
  {
    "text": "ahead and use intto directly on your system you probably want to use something like witness Witness is a",
    "start": "563600",
    "end": "570040"
  },
  {
    "text": "production ready CLI that allows you to collect different types of attestations of different steps of the software",
    "start": "570040",
    "end": "575320"
  },
  {
    "text": "supply chain sign them deliver to a right Discovery platform and so on and so",
    "start": "575320",
    "end": "581240"
  },
  {
    "text": "forth you can use uh you can use Arista as your Discovery platform as",
    "start": "581240",
    "end": "588279"
  },
  {
    "text": "well so that as you generate attestations on witness you can deliver them to Arch step for Discovery",
    "start": "588279",
    "end": "596720"
  },
  {
    "text": "later yeah uh and we also have there's also judge which can let you verify as well",
    "start": "597079",
    "end": "604959"
  },
  {
    "text": "really you can uh apply uh inal policies with layouts using in toal tooling as",
    "start": "604959",
    "end": "610360"
  },
  {
    "text": "well in total uh attestation verifier which I think we'll showcase today covers this really well now if you think",
    "start": "610360",
    "end": "619360"
  },
  {
    "text": "about it this means that there's a lot of different things that you can say about software and it's a little bit of a it's almost like a programming",
    "start": "619360",
    "end": "625360"
  },
  {
    "text": "language or a natural language we have a collection of different predicates that you can use that uh help you answer and",
    "start": "625360",
    "end": "632240"
  },
  {
    "text": "collect the information about most common questions on the software supply chain if you're familiar with salsa well",
    "start": "632240",
    "end": "638000"
  },
  {
    "text": "salsa is one of the predicates probably the most popular one and it's answering a very specific question which is how",
    "start": "638000",
    "end": "643160"
  },
  {
    "text": "did I build this but there may be other things that you may want to answer again like what was the version of the",
    "start": "643160",
    "end": "649440"
  },
  {
    "text": "compiler that or the sh of the compiler that built this binary or what was the",
    "start": "649440",
    "end": "656040"
  },
  {
    "text": "result or output of of a vulnerability scan on my particular artifact as it as it was being",
    "start": "656040",
    "end": "662040"
  },
  {
    "text": "built so I encourage you to take a look at the attestation repo and just almost look at it as a menu of well what would",
    "start": "662040",
    "end": "668240"
  },
  {
    "text": "I want to do in order to protect my supply chain to summarize all of the all of the",
    "start": "668240",
    "end": "674959"
  },
  {
    "text": "information about the tooling uh this table I think it encapsulated it very well if you are somebody who wants to",
    "start": "674959",
    "end": "681600"
  },
  {
    "text": "use intto and you want to use a very complex workflow that's in very elaborate you may want to use witness",
    "start": "681600",
    "end": "687639"
  },
  {
    "text": "and Arista together to to collect and discover the information and apply policy an example of this could be",
    "start": "687639",
    "end": "694560"
  },
  {
    "text": "something like automated NSP 800 204d there's European union and French",
    "start": "694560",
    "end": "703000"
  },
  {
    "text": "and British and German uh standards are very similar to this uh they're trying",
    "start": "703000",
    "end": "708600"
  },
  {
    "text": "to to guide you in ways that you can collect different information not only Provence but also uh s bombs or V Le",
    "start": "708600",
    "end": "717000"
  },
  {
    "text": "scans or yeah or information about the stack that was used to build something",
    "start": "717000",
    "end": "724160"
  },
  {
    "text": "if you want to automize compliance which is a very elaborate uh uh endeav or you",
    "start": "724160",
    "end": "729680"
  },
  {
    "text": "may want to use something like witness or AC if you're a developer that wants to uh extend or integrate and or add",
    "start": "729680",
    "end": "737040"
  },
  {
    "text": "support to your project you may want to use interal libraries if you're for example adding total verification to a",
    "start": "737040",
    "end": "744320"
  },
  {
    "text": "package manager uh like npm did you may want to use in total",
    "start": "744320",
    "end": "749760"
  },
  {
    "text": "uh reference libraries if you're a user and you just want to get started and adding some",
    "start": "749760",
    "end": "755680"
  },
  {
    "text": "degree of in total verification to your pipeline you may want to start with a CI",
    "start": "755680",
    "end": "760920"
  },
  {
    "text": "uh platform they are the ones that are the most ahead in integrating so you may",
    "start": "760920",
    "end": "767240"
  },
  {
    "text": "just want to enable it in your in your platform GitHub actions already has uh ways to enable a Providence on",
    "start": "767240",
    "end": "774199"
  },
  {
    "text": "your um on your project gitlab Runners also have support for in Toto",
    "start": "774199",
    "end": "779639"
  },
  {
    "text": "techic chains there's a Jenkins plugin that you can use all of these tools are almost just flick a switch and start",
    "start": "779639",
    "end": "786399"
  },
  {
    "text": "producing at the stations that the G can verify later down the line now I'm going to hand it to Alan so",
    "start": "786399",
    "end": "792600"
  },
  {
    "text": "he can walk me through uh or walk us through the demo um I think this will help crystallize the concept A little",
    "start": "792600",
    "end": "798839"
  },
  {
    "text": "bit better yeah thank you Santiago so uh for today's demo um I'm doing something",
    "start": "798839",
    "end": "804040"
  },
  {
    "text": "very Bare Bones just a simple um C application just to demonstrate the uh the power of like using like attesting",
    "start": "804040",
    "end": "810800"
  },
  {
    "text": "to certain steps and then using um layouts to verify your policy and making sure that the integr of your supply",
    "start": "810800",
    "end": "817760"
  },
  {
    "text": "chain is intact right so this is a high level high level overview so you Tak in",
    "start": "817760",
    "end": "823399"
  },
  {
    "text": "a tarball you unar it um and you generate like all the files and then you compile each file to an object file and",
    "start": "823399",
    "end": "830320"
  },
  {
    "text": "then compile it all to the binary um so let's see so if you look at this the",
    "start": "830320",
    "end": "838600"
  },
  {
    "text": "uh the demo will basically take all of this and then um switch out the external",
    "start": "838600",
    "end": "843720"
  },
  {
    "text": "object file um just to basically Sim simulate uh what an example supply chain",
    "start": "843720",
    "end": "849759"
  },
  {
    "text": "attack would be right so for example if this were running on a specific um environment where um for some reason",
    "start": "849759",
    "end": "856199"
  },
  {
    "text": "every time you try to build the executable it switches out the object file um you will not be able to detect",
    "start": "856199",
    "end": "861680"
  },
  {
    "text": "it even if you know that the external C file is um the original right um so the",
    "start": "861680",
    "end": "868839"
  },
  {
    "text": "way I will demonstrate how intto works is basically use intto to basically secure each of these steps uh these",
    "start": "868839",
    "end": "874079"
  },
  {
    "text": "steps are um encircled in the dot lines if you can see and um basically",
    "start": "874079",
    "end": "881079"
  },
  {
    "text": "uh between each step we have think of it as like a chain on in that case if the",
    "start": "881079",
    "end": "888199"
  },
  {
    "text": "external object file is compromised the chain will break um so hopefully uh the",
    "start": "888199",
    "end": "894000"
  },
  {
    "text": "demo will demonstrate it um so let's give it a go let's",
    "start": "894000",
    "end": "899800"
  },
  {
    "text": "see uh yep so first I the project so first of all I'm going to do a dry run",
    "start": "899800",
    "end": "905360"
  },
  {
    "text": "without intto just so you guys can see what it's expected so I enter the project you can see the project",
    "start": "905360",
    "end": "911639"
  },
  {
    "text": "directory um and then you start building the object files and run the command um",
    "start": "911639",
    "end": "917800"
  },
  {
    "text": "without any errors so as you can see um just print safe H low world now I will inject the malicious object file um and",
    "start": "917800",
    "end": "926680"
  },
  {
    "text": "build it again um and obviously if you capture hashes they",
    "start": "926680",
    "end": "932519"
  },
  {
    "text": "will be different but if you run the execute R again it's un safe unknown code um who knows what's in",
    "start": "932519",
    "end": "938000"
  },
  {
    "text": "there um and now right now I'm going to demonstrate the how it will happen using",
    "start": "938000",
    "end": "944079"
  },
  {
    "text": "um intal right so I have a new um I wrote a small program that basically",
    "start": "944079",
    "end": "949519"
  },
  {
    "text": "just generates a new uh Link at station at each step so Link at the station uh high level basically takes you have the",
    "start": "949519",
    "end": "957279"
  },
  {
    "text": "you take in the input files and you uh capture the output files um it's pretty",
    "start": "957279",
    "end": "962360"
  },
  {
    "text": "simple gives you a lot of power to basically connect a lot of the steps together uh just using files and other",
    "start": "962360",
    "end": "969639"
  },
  {
    "text": "artifacts so as you can see um you you basically",
    "start": "969639",
    "end": "975040"
  },
  {
    "text": "pass it the key to sign the inal um artifact and then you also give",
    "start": "975040",
    "end": "980120"
  },
  {
    "text": "it a name um and and if we run through most of the uh steps again um you get",
    "start": "980120",
    "end": "986800"
  },
  {
    "text": "the same executable and now we're we're running the in total verify um command which basically passes",
    "start": "986800",
    "end": "995800"
  },
  {
    "text": "in a layout I'll show the layout later um but um basically what happens is that",
    "start": "995800",
    "end": "1001560"
  },
  {
    "text": "it takes in all of the uh adust stations generated and this basically verifies",
    "start": "1001560",
    "end": "1006680"
  },
  {
    "text": "each step um and then if we were to inject a malicious",
    "start": "1006680",
    "end": "1012959"
  },
  {
    "text": "file this and build a project again this should and as you can see is the unsafe",
    "start": "1012959",
    "end": "1019839"
  },
  {
    "text": "code if you run the verify again it fails so doesn't print it in red but",
    "start": "1019839",
    "end": "1025160"
  },
  {
    "text": "verification failed so I'll show the layout right",
    "start": "1025160",
    "end": "1030319"
  },
  {
    "text": "now and as you can see um we basically declare something called a functionary so people who are allowed to carry out",
    "start": "1030319",
    "end": "1037000"
  },
  {
    "text": "certain steps and then we also have and then in each step you can see uh how I Define um what's created what's produced",
    "start": "1037000",
    "end": "1044720"
  },
  {
    "text": "and what command I expected to use so the onar creates all these files",
    "start": "1044720",
    "end": "1050000"
  },
  {
    "text": "uh build external uses the uh source files as I showed earlier um and generates the object file same goes with",
    "start": "1050000",
    "end": "1057120"
  },
  {
    "text": "Main and then as you can see in the final uh one of the nice things you could do is basically match so whatever",
    "start": "1057120",
    "end": "1063440"
  },
  {
    "text": "is so you can have one future step rely on the product of past steps",
    "start": "1063440",
    "end": "1070760"
  },
  {
    "text": "um yeah I believe that's it for the demo and if you like to look at it I still",
    "start": "1070760",
    "end": "1077039"
  },
  {
    "text": "have working production but um but yeah here's the link to the demo if you like to look at it in the later",
    "start": "1077039",
    "end": "1084840"
  },
  {
    "text": "time yeah I'll pass it off to Sano to talk about thank you real war use cases",
    "start": "1084840",
    "end": "1090240"
  },
  {
    "text": "so uh something that I I don't know if you noticed here is that intoto works a little bit like a firewall and it was",
    "start": "1090240",
    "end": "1095799"
  },
  {
    "text": "able to filter any artifact that was not authenticated from an actor in the supply chain uh this Al also connects to",
    "start": "1095799",
    "end": "1103240"
  },
  {
    "text": "the use cases um because this is a simulation of",
    "start": "1103240",
    "end": "1109000"
  },
  {
    "text": "uh probably the most uh Infamous software supply chain attack in history that was solar winds in which uh a",
    "start": "1109000",
    "end": "1116320"
  },
  {
    "text": "process was changing an object file as it was being linked within Toto you can",
    "start": "1116320",
    "end": "1121360"
  },
  {
    "text": "essentially filter out the object file as it was as it's being linked but you can also uh",
    "start": "1121360",
    "end": "1127120"
  },
  {
    "text": "ensure that say different Builders agree or that different",
    "start": "1127120",
    "end": "1132480"
  },
  {
    "text": "uh different aspects of the of the stack are actually authenticated like the compiler the Linker all processes that",
    "start": "1132480",
    "end": "1139440"
  },
  {
    "text": "are touching the files and so on so forth I wanted to give a shout out to",
    "start": "1139440",
    "end": "1144640"
  },
  {
    "text": "gaban mpm uh I think it's one of the coolest uh in total Integrations out",
    "start": "1144640",
    "end": "1150120"
  },
  {
    "text": "there to explain how uh GitHub and npm are using in Toto and Sixto and other uh",
    "start": "1150120",
    "end": "1157600"
  },
  {
    "text": "related Technologies uh this is a diagram directly from the blog essentially what they're doing is",
    "start": "1157600",
    "end": "1164679"
  },
  {
    "text": "every time you do publish mpm publish with Providence it will authenticate you",
    "start": "1164679",
    "end": "1170120"
  },
  {
    "text": "using Sixto or fullco and it will give you a signing key so you thanks to Sixto",
    "start": "1170120",
    "end": "1175720"
  },
  {
    "text": "you don't even need to Reon about how do I manage my keys but rather who is the",
    "start": "1175720",
    "end": "1181400"
  },
  {
    "text": "uh email or the identity that's allowed to publish this artifact once you get the key or the or",
    "start": "1181400",
    "end": "1188679"
  },
  {
    "text": "use the keyless flow from six store you generate a Providence at the station what does that mean it will connect the",
    "start": "1188679",
    "end": "1194600"
  },
  {
    "text": "GitHub repo where the source code is located to the MP M uh package as it's",
    "start": "1194600",
    "end": "1200200"
  },
  {
    "text": "being published when oh yeah once uh once that's uh signed",
    "start": "1200200",
    "end": "1209000"
  },
  {
    "text": "and generated it is put together into oh I think I think I'm missing a slide it",
    "start": "1209000",
    "end": "1214080"
  },
  {
    "text": "is put together the package and the Providence are put together into into the mpm repo what does that",
    "start": "1214080",
    "end": "1220600"
  },
  {
    "text": "mean that if somebody were to break into the mpm repo and change the packages",
    "start": "1220600",
    "end": "1225880"
  },
  {
    "text": "they wouldn't be able to uh to also tamper with the original commute that was in the in GitHub because these two",
    "start": "1225880",
    "end": "1234200"
  },
  {
    "text": "things are linked together now does this make sense I see a couple of people nodding",
    "start": "1234200",
    "end": "1239720"
  },
  {
    "text": "that's great the other uh example that I wanted",
    "start": "1239720",
    "end": "1245280"
  },
  {
    "text": "to highlight is the post Sunburst uh solar winds deployment again the",
    "start": "1245280",
    "end": "1250840"
  },
  {
    "text": "inspiration for the demo was borrowed borrowing a little bit of how uh solar burst happened the they did it a little bit",
    "start": "1250840",
    "end": "1257400"
  },
  {
    "text": "differently on solar winds though they have a white paper called truchet if you want to read on it uh there's a lot of",
    "start": "1257400",
    "end": "1263720"
  },
  {
    "text": "more details here's uh screenshot of their uh",
    "start": "1263720",
    "end": "1268840"
  },
  {
    "text": "diagram what they what they do is they do a very similar thing as a GitHub and",
    "start": "1268840",
    "end": "1274799"
  },
  {
    "text": "mpm the but instead they're leveraging reproducible builds and they're leveraging in total to verify",
    "start": "1274799",
    "end": "1281360"
  },
  {
    "text": "reproducible builds what does that mean they separate two different uh build",
    "start": "1281360",
    "end": "1286600"
  },
  {
    "text": "pipelines completely disconnected from each other different Stacks different network configurations so that if",
    "start": "1286600",
    "end": "1292200"
  },
  {
    "text": "somebody were to hack into the system they would have to hack into both systems at the same time and hack it in",
    "start": "1292200",
    "end": "1297880"
  },
  {
    "text": "the very same way to produce the same malicious binary what this really means is that in order to introduce a back",
    "start": "1297880",
    "end": "1304440"
  },
  {
    "text": "door through the compiler you not only need to compromise both servers but you also need to to make your compromise",
    "start": "1304440",
    "end": "1310480"
  },
  {
    "text": "reproducible in a way now once each individual pipeline",
    "start": "1310480",
    "end": "1315799"
  },
  {
    "text": "builds uh there uh their binary they produce an an intoto plus salsa Provence at the",
    "start": "1315799",
    "end": "1323279"
  },
  {
    "text": "station and they store it on the metadata store that's that's the store that's in the sorry the box that's in",
    "start": "1323279",
    "end": "1328440"
  },
  {
    "text": "the middle when it is when a deployment this takes more information",
    "start": "1328440",
    "end": "1334799"
  },
  {
    "text": "for example a vulnerability scan this also makes it to the metadata store and eventually they receive a",
    "start": "1334799",
    "end": "1342320"
  },
  {
    "text": "signal to validate the result of the two what does this mean it goes and queries both southide Provence at the stations",
    "start": "1342320",
    "end": "1348600"
  },
  {
    "text": "it ques any other Associated metadata like a vulnerabilities can and it asks itself are these two the same binary",
    "start": "1348600",
    "end": "1356360"
  },
  {
    "text": "even though they were built by different people are they the same exact binary if that passes then the binary is released",
    "start": "1356360",
    "end": "1364320"
  },
  {
    "text": "it is put to uh to the build binary artifacts and the container images so that uh users can download the resulting",
    "start": "1364320",
    "end": "1372880"
  },
  {
    "text": "build to close out I wanted to talk a little bit about",
    "start": "1372919",
    "end": "1378120"
  },
  {
    "text": "how you can get involved into the project and then uh jump into the jump into the questions in total it's a",
    "start": "1378120",
    "end": "1384640"
  },
  {
    "text": "mature project it's actually waiting for uh graduation uh this Al this means that",
    "start": "1384640",
    "end": "1390080"
  },
  {
    "text": "even though there's a lot of mature pieces of software out there there's also a lot of things that you can do to",
    "start": "1390080",
    "end": "1395440"
  },
  {
    "text": "get involved in the project perhaps the most obvious one is contributing to tooling I think a very exciting place to",
    "start": "1395440",
    "end": "1403000"
  },
  {
    "text": "be working at right now is uh the witness arist implementations these are two uh recently donated pieces of",
    "start": "1403000",
    "end": "1410200"
  },
  {
    "text": "software they are meant to work with most of the new uh attestation types they're meant to allow you to create new",
    "start": "1410200",
    "end": "1416400"
  },
  {
    "text": "attestation types if you think that there's no predicates that match your use case they uh allow you to integrate",
    "start": "1416400",
    "end": "1422600"
  },
  {
    "text": "with other project a little bit better for example if you're using Sixt door to sign they allow you to use Sixto to sign",
    "start": "1422600",
    "end": "1430240"
  },
  {
    "text": "and they also uh come with a lot of little knobs that you can really use to",
    "start": "1430240",
    "end": "1436039"
  },
  {
    "text": "forget about implementing Toto and just using in Toto contributing to uh winess",
    "start": "1436039",
    "end": "1442279"
  },
  {
    "text": "Arista is something that I really suggest because it I believe it that's the way that in Toto should be used in",
    "start": "1442279",
    "end": "1448039"
  },
  {
    "text": "the future if you are trying to useing Toto in a particular project",
    "start": "1448039",
    "end": "1457320"
  },
  {
    "text": "um and you feel that there's a feature missing integrating with uh that",
    "start": "1457320",
    "end": "1462480"
  },
  {
    "text": "particular project is also a good way to help us out what what this is really saying is not contribute doing total the",
    "start": "1462480",
    "end": "1469880"
  },
  {
    "text": "total project proper but maybe working your project and adding total support for it making your tool especially if",
    "start": "1469880",
    "end": "1477159"
  },
  {
    "text": "it's a supply chain related spit out attestations or generate attestations it's relatively simple I've done it for",
    "start": "1477159",
    "end": "1483440"
  },
  {
    "text": "a couple of projects myself a lot of the times it's 15 lines of code you use the runtime libraries you import the right",
    "start": "1483440",
    "end": "1489799"
  },
  {
    "text": "modules you fill in a data structure you call sign and then you print it out on",
    "start": "1489799",
    "end": "1495799"
  },
  {
    "text": "the appropriate Channel uh I I think cube is a good",
    "start": "1495799",
    "end": "1500960"
  },
  {
    "text": "example if you want to take a look at how easy it would be to do it you just add that particular line of code on an",
    "start": "1500960",
    "end": "1507399"
  },
  {
    "text": "API response and then you can start authenticating within totto provenance of uh API um questions and answers for",
    "start": "1507399",
    "end": "1515360"
  },
  {
    "text": "example for codex or new like emerging Technologies the last thing and I don't",
    "start": "1515360",
    "end": "1520799"
  },
  {
    "text": "want to minimize this I think this is actually the most useful is uh help us integrate with your",
    "start": "1520799",
    "end": "1527679"
  },
  {
    "text": "environment that is if you uh have a project in the cncf or the open ssf or really anything",
    "start": "1527679",
    "end": "1533320"
  },
  {
    "text": "out there and you don't know how in total could fit we learn a lot from that",
    "start": "1533320",
    "end": "1539240"
  },
  {
    "text": "perspective a lot of the times this is what drives new predicate new predicate types or new projects Al together that",
    "start": "1539240",
    "end": "1544600"
  },
  {
    "text": "help us work with uh integrating things if you don't know how to verify a",
    "start": "1544600",
    "end": "1549720"
  },
  {
    "text": "particular thing of the software supply chain like how do I know if this is running on a on a Intel sgx",
    "start": "1549720",
    "end": "1556720"
  },
  {
    "text": "Enclave this allows us to drive better tooling and future innovation in the",
    "start": "1556720",
    "end": "1562000"
  },
  {
    "text": "project so don't discard that I think that's a that's a very good way to engage with",
    "start": "1562000",
    "end": "1567640"
  },
  {
    "text": "us and well we have a we have a more open-ended way to to interact which is",
    "start": "1567640",
    "end": "1573000"
  },
  {
    "text": "just join our communication challenge channels sorry uh the intto community",
    "start": "1573000",
    "end": "1578080"
  },
  {
    "text": "meeting is on F the first Friday of every month right now it's at 11 uh a.m.",
    "start": "1578080",
    "end": "1583399"
  },
  {
    "text": "eastern which is a little bit late for the EU time zone folks we may be uh",
    "start": "1583399",
    "end": "1588720"
  },
  {
    "text": "adding another time zone to accommodate EU and uh Asia time zones you can drop",
    "start": "1588720",
    "end": "1595320"
  },
  {
    "text": "by the cncf slack uh and in Toto Channel that's the main Hub we have other channels but that that's the first place",
    "start": "1595320",
    "end": "1601679"
  },
  {
    "text": "to interact and get involved if you are old school like myself there is a IRC",
    "start": "1601679",
    "end": "1607679"
  },
  {
    "text": "channel on uh Libera I am there it's not very it's it's not very chatty right now",
    "start": "1607679",
    "end": "1615120"
  },
  {
    "text": "but it's supposed to be Bridge so a lot of the times the messages balc between slack and uh and Libra and we'll find a",
    "start": "1615120",
    "end": "1621080"
  },
  {
    "text": "way to answer there we also have the public mailing list if you're even more old school than IRC and you want to say",
    "start": "1621080",
    "end": "1627600"
  },
  {
    "text": "send emails exclusively to a mailing list this is also what we use for announcements of like big releases or",
    "start": "1627600",
    "end": "1633520"
  },
  {
    "text": "project donations and things like that and well you can also take a look at the organization and just browse the",
    "start": "1633520",
    "end": "1640360"
  },
  {
    "text": "projects leave leave us feedback open an issue and so on and so",
    "start": "1640360",
    "end": "1646279"
  },
  {
    "text": "forth I think with this we can open the floor for questions we have plenty of",
    "start": "1646279",
    "end": "1652240"
  },
  {
    "text": "time for",
    "start": "1652240",
    "end": "1654559"
  },
  {
    "text": "questions oh I think I I think I have",
    "start": "1663080",
    "end": "1667200"
  },
  {
    "text": "this uh you said runtime or at link time sound",
    "start": "1674200",
    "end": "1680120"
  },
  {
    "text": "[Music] oh okay so like a you mean monitoring",
    "start": "1680760",
    "end": "1685840"
  },
  {
    "text": "once it is deployed yeah so we have runtime Trace attest stations",
    "start": "1685840",
    "end": "1693559"
  },
  {
    "text": "that you can use to essentially check for the for the state of a of a process",
    "start": "1693559",
    "end": "1699120"
  },
  {
    "text": "they're a little bit open-ended and the use case is not entirely mature uh I would say that there's a",
    "start": "1699120",
    "end": "1705120"
  },
  {
    "text": "distinction between like runtime and",
    "start": "1705120",
    "end": "1710120"
  },
  {
    "text": "how to call it so runtime and continuous monitoring I want to separate those two things so for example you may be",
    "start": "1710679",
    "end": "1717320"
  },
  {
    "text": "continuously creating attestations of vulnerability scans and replacing all vulnerability scan attestations so that",
    "start": "1717320",
    "end": "1723919"
  },
  {
    "text": "if the policy stops verifying at any point you deprovision the container yeah okay makes sense we've um",
    "start": "1723919",
    "end": "1731519"
  },
  {
    "text": "acquired a new regulation in the UK for Telco stuff that says you know thou must",
    "start": "1731519",
    "end": "1738519"
  },
  {
    "text": "only run signed containers and we're trying to work out",
    "start": "1738519",
    "end": "1744320"
  },
  {
    "text": "how yeah well we should also add that to a demo um there are a couple of",
    "start": "1744320",
    "end": "1750760"
  },
  {
    "text": "admission controllers that can verify signatures of containers as they are getting in uh and you can verify a",
    "start": "1750760",
    "end": "1758440"
  },
  {
    "text": "policy uh on at admission time I think uh kerno is one that does that it it",
    "start": "1758440",
    "end": "1765000"
  },
  {
    "text": "also add support for six door and uh for interal stations as they are coming in",
    "start": "1765000",
    "end": "1771039"
  },
  {
    "text": "uh I think there's the six door policy controller that allows you to do the",
    "start": "1771039",
    "end": "1776640"
  },
  {
    "text": "same more on the like six or native land and yeah you can also do the like",
    "start": "1776640",
    "end": "1782480"
  },
  {
    "text": "the continuous monitoring but for that I think better support in something like a service mesh would be Ado uh essentially",
    "start": "1782480",
    "end": "1788960"
  },
  {
    "text": "can you de provision something that somebody marked as malicious or like",
    "start": "1788960",
    "end": "1795320"
  },
  {
    "text": "untrusted I think uh integrating uh w with a service manage may be an interesting killer combo in that regard",
    "start": "1795320",
    "end": "1800919"
  },
  {
    "text": "but I think that use case is not fully developed yet interesting sounds unsolved to",
    "start": "1800919",
    "end": "1807919"
  },
  {
    "text": "me well uh it depends on uh whether it's solved at the theoretical level which",
    "start": "1807919",
    "end": "1813279"
  },
  {
    "text": "I'm comfortable with as an academic or uh or is it productionize",
    "start": "1813279",
    "end": "1819760"
  },
  {
    "text": "yet hi everyone Nicholas uh from Tales uh thank you Mercy for your presentation",
    "start": "1823720",
    "end": "1829679"
  },
  {
    "text": "I have a question about um environment where you are uh not necessarily connected to uh the network uh in or you",
    "start": "1829679",
    "end": "1838159"
  },
  {
    "text": "have intermittent Network like uh I think uh yesterday it was the edge day uh there a lot of people talking about",
    "start": "1838159",
    "end": "1844200"
  },
  {
    "text": "intermittent connections so what happens to the attestation uh when you don't",
    "start": "1844200",
    "end": "1850679"
  },
  {
    "text": "have uh access to like a a remote uh rist three with everything going on",
    "start": "1850679",
    "end": "1857720"
  },
  {
    "text": "there that is a good very good question um discover is agnostic to a lot of int",
    "start": "1857720",
    "end": "1865440"
  },
  {
    "text": "tooling uh for example and the case that you saw here it was copying attestations",
    "start": "1865440",
    "end": "1871399"
  },
  {
    "text": "like through the directory almost like sneaker net you could put it on USB stick and carry it",
    "start": "1871399",
    "end": "1877120"
  },
  {
    "text": "over uh there is a a somewhat established solution for",
    "start": "1877120",
    "end": "1884080"
  },
  {
    "text": "communicating this trust information as part of a six door bundle that is you get the regular six or trust information",
    "start": "1884080",
    "end": "1891480"
  },
  {
    "text": "plus Associated attestations on a single sort of blob that then you go deliver somewhere and it's meant to work fully",
    "start": "1891480",
    "end": "1898559"
  },
  {
    "text": "offline um for the more intermittent case uh I I",
    "start": "1898559",
    "end": "1904720"
  },
  {
    "text": "would assume that a lot of this discovery platforms allow you to pull or batch uh I I know",
    "start": "1904720",
    "end": "1910960"
  },
  {
    "text": "that walk for example allows you to do a badge push like you detect uh connection you send as many attestations as you can",
    "start": "1910960",
    "end": "1917960"
  },
  {
    "text": "and then you and then you stop transmitting but really you wouldn't trust the artifact until all of the",
    "start": "1917960",
    "end": "1923360"
  },
  {
    "text": "attestations are there or maybe you could trigger the deployment uh once you",
    "start": "1923360",
    "end": "1928440"
  },
  {
    "text": "have the connection for example with kerno uh which is looking after it and",
    "start": "1928440",
    "end": "1935240"
  },
  {
    "text": "then when you are not connected anymore maybe the cache would be enough [Music]",
    "start": "1935240",
    "end": "1940360"
  },
  {
    "text": "to yes so uh the verification usually pulls in the ad stations and then you",
    "start": "1940360",
    "end": "1946320"
  },
  {
    "text": "have those for essentially reference on your side uh which should be enough for you to to say reprovision a container or",
    "start": "1946320",
    "end": "1956240"
  },
  {
    "text": "reverifying a look at them thank you very",
    "start": "1963880",
    "end": "1968279"
  },
  {
    "text": "much hi I had a question so if you are a consumer of a pipeline that was digitally signed and attested to and",
    "start": "1972279",
    "end": "1980039"
  },
  {
    "text": "let's say it's a Docker a base Docker image and I validated that signature validated those attestations is there a",
    "start": "1980039",
    "end": "1986279"
  },
  {
    "text": "standardized way for me then in my own pipeline to for the consumers of my",
    "start": "1986279",
    "end": "1991600"
  },
  {
    "text": "artifacts say that I verified this whether it's inheriting those ad stations or some level of verification",
    "start": "1991600",
    "end": "1999320"
  },
  {
    "text": "of the entire supply chain yes uh I love that question uh almost feels like I was",
    "start": "1999320",
    "end": "2004960"
  },
  {
    "text": "wishing for it so there's a couple of things there uh there is a type of",
    "start": "2004960",
    "end": "2010679"
  },
  {
    "text": "predicate you can generate an attestation that says I verified this attest this collection of attestations",
    "start": "2010679",
    "end": "2016039"
  },
  {
    "text": "that's called a VSA uh running in total verify on a pipeline produces that attestation only",
    "start": "2016039",
    "end": "2023919"
  },
  {
    "text": "if you successfully do it uh if you want to be like very transparent about it in",
    "start": "2023919",
    "end": "2029760"
  },
  {
    "text": "total layouts are also uh composable so you can say my step of getting",
    "start": "2029760",
    "end": "2036039"
  },
  {
    "text": "dependencies for example needed to run this uh verification so I'll give you",
    "start": "2036039",
    "end": "2041480"
  },
  {
    "text": "all of the attestations and you can verify them yourself if you so want to now the vssa this verification summary",
    "start": "2041480",
    "end": "2048398"
  },
  {
    "text": "attestations are useful a lot of the times because you don't want to a transmit like petabytes of attestations",
    "start": "2048399",
    "end": "2054320"
  },
  {
    "text": "and B you may not want to be fully disclosing of every single detail right",
    "start": "2054320",
    "end": "2060839"
  },
  {
    "text": "if it's a third party sort of like private dependency that doesn't want to tell how exactly this built but there's",
    "start": "2060839",
    "end": "2068320"
  },
  {
    "text": "a good compromise of well trust me I verified it uh under a particular policy",
    "start": "2068320",
    "end": "2075118"
  },
  {
    "text": "that is a that is a good sort of like approach I feel thank",
    "start": "2075119",
    "end": "2081000"
  },
  {
    "text": "you I think we have time for a last",
    "start": "2081960",
    "end": "2086638"
  },
  {
    "text": "one or maybe not we actually out of time it was a pleasure and uh I'll be around",
    "start": "2088599",
    "end": "2094280"
  },
  {
    "text": "if you have any questions for offline",
    "start": "2094280",
    "end": "2099640"
  }
]