[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello everyone please join me in welcoming onstage German Gillman",
    "start": "50",
    "end": "5879"
  },
  {
    "text": "engineer Saito and Jean Cramton senior software engineers Tiger they will tell",
    "start": "5879",
    "end": "11580"
  },
  {
    "text": "us about service mash zero to our service mesh with calico spire and then boy hi everyone",
    "start": "11580",
    "end": "25010"
  },
  {
    "text": "yes so I'm showing this Evan hello they said we're gonna talk about zero trust",
    "start": "25010",
    "end": "30840"
  },
  {
    "text": "service mesh or kind of building a zero trust service mesh with Kelly codes by an M boy now as you can imagine with a",
    "start": "30840",
    "end": "39510"
  },
  {
    "text": "title like that we've got quite a bit to unpack so Evans gonna start by giving us",
    "start": "39510",
    "end": "44789"
  },
  {
    "text": "a rundown of what zero trust is then I'm gonna talk a bit about service measures",
    "start": "44789",
    "end": "50340"
  },
  {
    "text": "in general then we're gonna dive into spiffy and spire calico and pull it all",
    "start": "50340",
    "end": "55829"
  },
  {
    "text": "together for a demo at the end Evan asome Thank You Sean see ya so mr.",
    "start": "55829",
    "end": "64830"
  },
  {
    "start": "60000",
    "end": "463000"
  },
  {
    "text": "hero trust this has become pretty pretty unfortunate buzzword over the last",
    "start": "64830",
    "end": "69930"
  },
  {
    "text": "couple years and and so many of you may have heard of it in the past but despite it kind of being fairly well known at",
    "start": "69930",
    "end": "76290"
  },
  {
    "text": "this point a lot of people still aren't quite super familiar with it with the concept behind it and the simplest way",
    "start": "76290",
    "end": "83880"
  },
  {
    "text": "to describe it I think is just that it's a simple statement that hopes that data and entities shouldn't be trusted by",
    "start": "83880",
    "end": "90840"
  },
  {
    "text": "default so this idea can be applied to like many aspects of computing but if",
    "start": "90840",
    "end": "96420"
  },
  {
    "text": "you think about it a little bit deeper can't really be taken to the logical extreme because in the end you have to",
    "start": "96420",
    "end": "102090"
  },
  {
    "text": "trust something right it's very difficult to get a computer to do anything useful for you if you don't trust anything about it you think like",
    "start": "102090",
    "end": "109770"
  },
  {
    "text": "the execution environment or the hardware it's running on I think it's like this so you know don't get me wrong",
    "start": "109770",
    "end": "114990"
  },
  {
    "text": "there is some work going on in these particular areas but I think that for our purposes today it's useful to kind",
    "start": "114990",
    "end": "120990"
  },
  {
    "text": "of like pull back a little bit and be a little bit more specific so today we're just going to be talking about the zero trust networks in particular so zero",
    "start": "120990",
    "end": "129239"
  },
  {
    "text": "trust network just kind of takes this GeoTrust concept and applies it towards network design so what does that really",
    "start": "129239",
    "end": "136380"
  },
  {
    "text": "mean it just means that all those entities and data on the network are strongly authenticated and authorized so",
    "start": "136380",
    "end": "142650"
  },
  {
    "text": "the data has encryption applied and integrity protection and the requesting and serving entities are proven to be",
    "start": "142650",
    "end": "149040"
  },
  {
    "text": "legitimate and they're also proven to be allowed to actually request or serve said data and there's a big difference",
    "start": "149040",
    "end": "155180"
  },
  {
    "text": "between those two things as you'll see later on in this talk um so this is a",
    "start": "155180",
    "end": "161190"
  },
  {
    "text": "pretty far departure from you know what I would call traditional network design where networks have this kind of crunchy",
    "start": "161190",
    "end": "167459"
  },
  {
    "text": "shell and this soft gooey center and then you provide just like rigorous protection around the perimeter and you",
    "start": "167459",
    "end": "174150"
  },
  {
    "text": "form these like trusted zones in the middle and then you wire those trusted zones together so this is kind of an",
    "start": "174150",
    "end": "180630"
  },
  {
    "text": "example of that traditional network design where you have two different data centers with a site-to-site tunnel in",
    "start": "180630",
    "end": "186660"
  },
  {
    "text": "between and then each one has this kind of perimeter protection you know which you know keeps the bad people outside",
    "start": "186660",
    "end": "192269"
  },
  {
    "text": "and the happy ones inside the problem is that this inevitably leads to like really poorly secured hosts because the",
    "start": "192269",
    "end": "198510"
  },
  {
    "text": "idea is that the network on the inside is safe and of course this practically",
    "start": "198510",
    "end": "203790"
  },
  {
    "text": "all networks have some sort of entry point all right like it can be a public web server that was accidentally exposed",
    "start": "203790",
    "end": "208920"
  },
  {
    "text": "can be purposely exposed if it was a product or something like that it can be a VPN server a jump host even",
    "start": "208920",
    "end": "215940"
  },
  {
    "text": "air gapped networks tend to have entry points right and and those are sometimes the worst offenders because the belief",
    "start": "215940",
    "end": "222480"
  },
  {
    "text": "and perimeter security on those kinds of networks are so strong but whatever the",
    "start": "222480",
    "end": "227970"
  },
  {
    "text": "entry point is it can definitely be abused I assure you so most networks don't really look like",
    "start": "227970",
    "end": "233970"
  },
  {
    "text": "this they kind of look more like this right so the key thing to understand here is that there's always some way to",
    "start": "233970",
    "end": "239640"
  },
  {
    "text": "get in right and when a host is compromised on that network a lot less",
    "start": "239640",
    "end": "245010"
  },
  {
    "text": "than if there's internal controls tend to be really really poor and the end",
    "start": "245010",
    "end": "250260"
  },
  {
    "text": "result of that is that it makes lateral movement throughout the network super trivial to do so a single compromised",
    "start": "250260",
    "end": "256019"
  },
  {
    "text": "host becomes multiple compromised hosts and all of a sudden this attack is much worse than it should really have been in",
    "start": "256019",
    "end": "262260"
  },
  {
    "text": "the first place this kind of thing happens all the time by the way it's not",
    "start": "262260",
    "end": "267620"
  },
  {
    "text": "they made up story right this is a key element and the target attack that everyone heard about a few years back",
    "start": "267620",
    "end": "273440"
  },
  {
    "text": "where the attacker is famous they came in through the HVAC system right so this",
    "start": "273440",
    "end": "278510"
  },
  {
    "text": "is all a result of like this poor internal security posture because it's assumed that the network and the hosts",
    "start": "278510",
    "end": "284600"
  },
  {
    "text": "that are on that network or are safe and trusted and when this happens we all loose right and not only do you lose but",
    "start": "284600",
    "end": "290389"
  },
  {
    "text": "your customers probably lose out too luckily there's a simple answer to address all this stuff and it's just",
    "start": "290389",
    "end": "297020"
  },
  {
    "text": "don't trust the network to do the right thing and don't trust a host just because it's on your super safe private",
    "start": "297020",
    "end": "302450"
  },
  {
    "text": "network so rather than building your networks like this where they have this crunchy outside in those gooey inside",
    "start": "302450",
    "end": "308600"
  },
  {
    "text": "you have to kind of imagine that there is no perimeter right and that there are bad people all around including inside",
    "start": "308600",
    "end": "313940"
  },
  {
    "text": "your network perhaps already so you build these networks to be crunchy on the inside right and when you take this",
    "start": "313940",
    "end": "319850"
  },
  {
    "text": "this you know zero trust idea or model and you apply it towards network design this is this kind of posture is pretty",
    "start": "319850",
    "end": "327020"
  },
  {
    "text": "much required in order to meet it so we don't assume that there are no entry points or that the perimeter is is",
    "start": "327020",
    "end": "332600"
  },
  {
    "text": "infallible instead we acknowledge that someone's going to get in and we build like tight controls around each service so when",
    "start": "332600",
    "end": "340880"
  },
  {
    "text": "someone does get in damage is much much more limited than it would have been in the previous posture so this like sounds",
    "start": "340880",
    "end": "349820"
  },
  {
    "text": "great in theory but there's one big problem with it and it's how do I manage all this crap right all of a sudden you",
    "start": "349820",
    "end": "356120"
  },
  {
    "text": "have to have authentication everywhere credentials the applications have to speak TLS or some sort of other you know",
    "start": "356120",
    "end": "362870"
  },
  {
    "text": "wire protection protocol and you have to have access control lists and those things have to all be managed like who",
    "start": "362870",
    "end": "368270"
  },
  {
    "text": "should be talking to what and those control lists change all the time right new services are coming and going new",
    "start": "368270",
    "end": "374419"
  },
  {
    "text": "dependencies are being introduced so you know you have all these knobs and have to be a constantly twiddled and",
    "start": "374419",
    "end": "379550"
  },
  {
    "text": "maintained in order to keep this state up right and we certainly don't want developers to have to deal with this",
    "start": "379550",
    "end": "385669"
  },
  {
    "text": "thing you know it's wrong on dell l developers means like well you have to train them to do that this is a whole",
    "start": "385669",
    "end": "390889"
  },
  {
    "text": "other skill set and it's quite like a deep area and security in general right some of these configurations can be",
    "start": "390889",
    "end": "397159"
  },
  {
    "text": "really really easy to screw up if you ever configure like a TLS stack or something it's definitely non-trivial we want these",
    "start": "397159",
    "end": "404210"
  },
  {
    "text": "developers to focus on business problems we don't want them to have to worry about like you know authentication and",
    "start": "404210",
    "end": "409640"
  },
  {
    "text": "access control this and all this other crap right it's not to mention that you",
    "start": "409640",
    "end": "414860"
  },
  {
    "text": "know not all apps can actually be modified to do these things very a lot of them are packaged up or maybe the person who wrote it is no longer there",
    "start": "414860",
    "end": "420980"
  },
  {
    "text": "or whatever so this is where like the concept of a service mesh comes in and",
    "start": "420980",
    "end": "427130"
  },
  {
    "text": "the service mesh includes a transparent proxy that is like adjacent to every workload and this proxy then becomes",
    "start": "427130",
    "end": "433700"
  },
  {
    "text": "like a really good place to implement these security controls so it allows you to like slip those controls in",
    "start": "433700",
    "end": "438740"
  },
  {
    "text": "underneath the application without actually having to modify it so you get all these like nice and fancy things that we want in order to build a zero",
    "start": "438740",
    "end": "445070"
  },
  {
    "text": "trust network but we can do it without necessarily like directly modifying the apps yes so service mesh another one of",
    "start": "445070",
    "end": "453620"
  },
  {
    "text": "those buzzwords it's definitely a buzz word yeah let's unpack that a little bit",
    "start": "453620",
    "end": "459860"
  },
  {
    "text": "sure cool so just just kind of rolling back a",
    "start": "459860",
    "end": "467570"
  },
  {
    "text": "little bit when we talk about a service mesh let's get back to basics so let's",
    "start": "467570",
    "end": "473420"
  },
  {
    "text": "say we have an app running in a pod over here and it's accessing a service over there this is how most of a prototype",
    "start": "473420",
    "end": "480470"
  },
  {
    "text": "start right we we set up a simple HTTP request we get the data we want job done",
    "start": "480470",
    "end": "486310"
  },
  {
    "text": "except one we try to move this into production we start caring about other",
    "start": "486310",
    "end": "493160"
  },
  {
    "text": "things so we start caring about discoverability like how do the applications find each other we start",
    "start": "493160",
    "end": "499880"
  },
  {
    "text": "caring about load balancing so how do we scale up you know more advanced things like a bee testing and things like that",
    "start": "499880",
    "end": "506300"
  },
  {
    "text": "too we start caring about observability so how do you see what's going on in",
    "start": "506300",
    "end": "512210"
  },
  {
    "text": "your network and a service mesh kinda comes out of out of these ideas but it's",
    "start": "512210",
    "end": "517550"
  },
  {
    "text": "also a good place to do the things that are really relevant for our talk so encryption authentication authorization",
    "start": "517550",
    "end": "525370"
  },
  {
    "text": "so encryption to keep your data from being Easter opt on authentication so",
    "start": "525370",
    "end": "531590"
  },
  {
    "text": "that you know who you're talking to and authorization so you you can lock it down and say who can",
    "start": "531590",
    "end": "537200"
  },
  {
    "text": "talk to who as Evan said a cervical mesh works by putting a proxy really close to",
    "start": "537200",
    "end": "543590"
  },
  {
    "text": "each of your workloads so the idea is that your application continues to make its simple requests the proxy intercepts",
    "start": "543590",
    "end": "550880"
  },
  {
    "text": "it and then between the proxies we try to do best-of-breed versions of all of these things so best-of-breed encryption",
    "start": "550880",
    "end": "557600"
  },
  {
    "text": "with mutually authenticated TLS and things like that as euler guessed from",
    "start": "557600",
    "end": "563060"
  },
  {
    "text": "the name of our talk mmm boy is the proxy that we're using here so envoi is a fairly light proxy it runs inside your",
    "start": "563060",
    "end": "570800"
  },
  {
    "text": "pod as a sidecar intercepts the request really close to your application before",
    "start": "570800",
    "end": "575960"
  },
  {
    "text": "it leaves the pod and that means that even the host namespace on on the host doesn't see the unencrypted traffic an",
    "start": "575960",
    "end": "583100"
  },
  {
    "text": "envoy basically does all of the above so it does encryption authentication it can",
    "start": "583100",
    "end": "588740"
  },
  {
    "text": "enforce policy decisions but whenever you're doing something like encryption and authentication you need a whole",
    "start": "588740",
    "end": "594920"
  },
  {
    "text": "bunch of certificates right Evan yes definitely not just certificates you",
    "start": "594920",
    "end": "603860"
  },
  {
    "text": "need an identity alright and this is kind of where spire comes into the picture",
    "start": "603860",
    "end": "609310"
  },
  {
    "text": "I'm spiffy too of course so spiffy inspire are two different projects but",
    "start": "609310",
    "end": "615980"
  },
  {
    "text": "they're very much related spiffy is the logo up on the left here spiffy defines",
    "start": "615980",
    "end": "621110"
  },
  {
    "text": "workload identity so that is like what is a workload identity right how is it expressed how do I prove it right how do",
    "start": "621110",
    "end": "629510"
  },
  {
    "text": "I get one how do i Fedder a tit so on and so forth at the end of the day it's really just a bunch of markdown",
    "start": "629510",
    "end": "635150"
  },
  {
    "text": "documents spire on the other hand as by process of elimination the one on the",
    "start": "635150",
    "end": "640550"
  },
  {
    "text": "right is an implementation software implementation of those pipi specs so",
    "start": "640550",
    "end": "646010"
  },
  {
    "text": "spire is just one of these implementations are several but that's the one that we'll focus on today so",
    "start": "646010",
    "end": "651920"
  },
  {
    "text": "spires job is to handle the secure issuance of these spiffy IDs right nurse nifty identities rather and these",
    "start": "651920",
    "end": "658070"
  },
  {
    "text": "identities have a finite lifetime so by necessity aspire also automatically handles the rotation of these identities",
    "start": "658070",
    "end": "664900"
  },
  {
    "text": "and after a lot of thought I think the best way to describe spiffy is kind of like a passport right everyone",
    "start": "664900",
    "end": "671210"
  },
  {
    "text": "knows how to read a passport they're all generally the same they all have the same size they are the same",
    "start": "671210",
    "end": "676520"
  },
  {
    "text": "funny-looking barcode at the bottom in the same place they have a picture et cetera the dimensions of a passport are",
    "start": "676520",
    "end": "683240"
  },
  {
    "text": "very well-defined they're hard to fake all right and they just prove who you are they don't necessarily say that you're",
    "start": "683240",
    "end": "689390"
  },
  {
    "text": "allowed to enter a country they just have your name and what country you're from and it does a pretty good job at",
    "start": "689390",
    "end": "695930"
  },
  {
    "text": "that no matter where you go so in that vein spire is kind of like the passport",
    "start": "695930",
    "end": "701930"
  },
  {
    "text": "agency right at first you don't have a passport you need to get one and then it",
    "start": "701930",
    "end": "707030"
  },
  {
    "text": "expires after sometime you need to renew it all right so aspire is the implementation that handles the issuance",
    "start": "707030",
    "end": "712190"
  },
  {
    "text": "and renewal of these spiffy identities or passports if you will aspire",
    "start": "712190",
    "end": "717740"
  },
  {
    "text": "comprises two primary components the spire server and the spire agent the",
    "start": "717740",
    "end": "723500"
  },
  {
    "text": "spire server acts as the authority in this case the certificate authority or CA and that's responsible for",
    "start": "723500",
    "end": "730730"
  },
  {
    "text": "controlling the issuance of these identities it also houses the authoritative key which is used to sign them and prove the validity of them the",
    "start": "730730",
    "end": "738050"
  },
  {
    "text": "agent on the other hand manages this certificate lifecycle and also figures",
    "start": "738050",
    "end": "743210"
  },
  {
    "text": "out which certificate to give to which envoy so you can see from this diagram",
    "start": "743210",
    "end": "748640"
  },
  {
    "text": "here that spire lives inside the control plane so it's really only needed when envoy boots and when it has to rotate",
    "start": "748640",
    "end": "755060"
  },
  {
    "text": "these identities so um I can still run even if there's a spire outage or something like this at least until those",
    "start": "755060",
    "end": "761240"
  },
  {
    "text": "identities expire that's the agents job to track those explorations and as they're coming up it",
    "start": "761240",
    "end": "767450"
  },
  {
    "text": "generates new ones and pushes those new certain tomboy but because this renewal",
    "start": "767450",
    "end": "774590"
  },
  {
    "text": "is automated the lifetime can be fairly short so you know again this is a trade",
    "start": "774590",
    "end": "780200"
  },
  {
    "text": "off it's a it affects availability right but it's up to you right some people choose one day two days a week something",
    "start": "780200",
    "end": "786800"
  },
  {
    "text": "like that some people choose 12 hours but since this is fully automated like this we don't actually need to store any",
    "start": "786800",
    "end": "793040"
  },
  {
    "text": "of these keys because we can always just get a new one if we need to which means that you don't actually need any",
    "start": "793040",
    "end": "798860"
  },
  {
    "text": "long-lived credentials in the data plane which is really nice in fact spire knows how to rotate",
    "start": "798860",
    "end": "805440"
  },
  {
    "text": "all of the keys not just these you know and and identities I can even rotate the",
    "start": "805440",
    "end": "811110"
  },
  {
    "text": "route keys too so that means that under certain configurations long live keys aren't really required in",
    "start": "811110",
    "end": "817470"
  },
  {
    "text": "the control plane either no I'll stress that spire is SuperDuper flexible so you",
    "start": "817470",
    "end": "823620"
  },
  {
    "text": "know how you configure it and deploy it there's a series of trade-offs right but in the end a spire could provide this",
    "start": "823620",
    "end": "830010"
  },
  {
    "text": "really highly automated spiffy base PKI system that delivers and rotates these",
    "start": "830010",
    "end": "836070"
  },
  {
    "text": "search for your fleet of envoys so here now you have all these envoys they've",
    "start": "836070",
    "end": "843180"
  },
  {
    "text": "been all issued these nifty identities and you can use these nifty identities to do mutually authenticated TLS between",
    "start": "843180",
    "end": "848790"
  },
  {
    "text": "the envoys but really this is just the beginning right spire knows who is who",
    "start": "848790",
    "end": "854310"
  },
  {
    "text": "but it doesn't necessarily know who should be accessing what yeah that's a different problem yeah it's a very",
    "start": "854310",
    "end": "860400"
  },
  {
    "text": "different problem it's the difference between authentication and authorization so Shawn will you tell us a little bit",
    "start": "860400",
    "end": "865590"
  },
  {
    "text": "about the authorization part sure so just going back to our simple example",
    "start": "865590",
    "end": "872090"
  },
  {
    "start": "870000",
    "end": "920000"
  },
  {
    "text": "we've got M go in there we've got the spiffy identities provided by spire and",
    "start": "872090",
    "end": "878870"
  },
  {
    "text": "we've got mutual TLS going between the two so you know it's all great everybody",
    "start": "878870",
    "end": "884520"
  },
  {
    "text": "knows who C but what about this request coming in from another pod so this is",
    "start": "884520",
    "end": "891720"
  },
  {
    "text": "another pod in our system it has a valid identity but it has no business talking",
    "start": "891720",
    "end": "897060"
  },
  {
    "text": "to this particular server so maybe this is a compromised pod maybe this is a pod",
    "start": "897060",
    "end": "902910"
  },
  {
    "text": "that is running in staging and someone programmed in the prod database",
    "start": "902910",
    "end": "908730"
  },
  {
    "text": "credential something and it's accidentally trying to access the the the production database either way we",
    "start": "908730",
    "end": "915360"
  },
  {
    "text": "want to lock it down minimize our attack surface and just only allow the requests that we want so that's what a calico",
    "start": "915360",
    "end": "922290"
  },
  {
    "start": "920000",
    "end": "998000"
  },
  {
    "text": "comes in so one component of calico is",
    "start": "922290",
    "end": "927870"
  },
  {
    "text": "is Felix which is our host agent and Felix's job is to calculate the precise",
    "start": "927870",
    "end": "934500"
  },
  {
    "text": "policy that applies to each pod it does that by reading the Calico policy from our data store and",
    "start": "934500",
    "end": "940420"
  },
  {
    "text": "the Calico policy that we care about here is what we call application their policy so using our application their",
    "start": "940420",
    "end": "947890"
  },
  {
    "text": "policy you can specify things like only allow HTTP GET so you effectively make",
    "start": "947890",
    "end": "954510"
  },
  {
    "text": "something read-only and you can specify details of the service accounts that you",
    "start": "954510",
    "end": "959800"
  },
  {
    "text": "want to allow requests from so you can say I only want to allow requests from",
    "start": "959800",
    "end": "966630"
  },
  {
    "text": "like my client service account and then that service account will be backed by a",
    "start": "966630",
    "end": "971700"
  },
  {
    "text": "spiffy identity and you can lock it down to the individual HTTP paths if if",
    "start": "971700",
    "end": "978490"
  },
  {
    "text": "you're using HTTP and as as envoy rolls out additional additional features for",
    "start": "978490",
    "end": "985780"
  },
  {
    "text": "understanding different protocols we'll be able to add additional additional match criteria in there so Felix takes",
    "start": "985780",
    "end": "993010"
  },
  {
    "text": "that policy distills it down for each individual pod calculates the optimized policy and then it hands it over to our",
    "start": "993010",
    "end": "1000150"
  },
  {
    "text": "other component which is called de cast ease now the cast ease is our android",
    "start": "1000150",
    "end": "1005550"
  },
  {
    "text": "plug-in and the reason is wearing a Judge Dredd mask like that is because the cast ease is the ancient Greek judge",
    "start": "1005550",
    "end": "1013380"
  },
  {
    "text": "or decider so the cassadee's takes a cache of the individual policy for a particular pod",
    "start": "1013380",
    "end": "1020610"
  },
  {
    "text": "and then when a request comes into envoi and boys going to authenticate the",
    "start": "1020610",
    "end": "1026910"
  },
  {
    "text": "request figure out the identity of the of the requesting service and then it's",
    "start": "1026910",
    "end": "1032880"
  },
  {
    "text": "going to pass the details of the request along with the details of the identity over to DES Cassidy's de Cassidy's",
    "start": "1032880",
    "end": "1039569"
  },
  {
    "text": "execute the policy that Felix has calculated and returns a response like",
    "start": "1039570",
    "end": "1044850"
  },
  {
    "text": "yay or nay the reason we have a split between Felix and DES Cassidy's is",
    "start": "1044850",
    "end": "1050640"
  },
  {
    "text": "because the Cassidy's is in the data plane so de Cassidy's needs to be highly",
    "start": "1050640",
    "end": "1055920"
  },
  {
    "text": "available Felix is our country one of our control plane components so Felix",
    "start": "1055920",
    "end": "1061560"
  },
  {
    "text": "can restart and that won't affect your network it's similar to spire like it's Felix is only needed",
    "start": "1061560",
    "end": "1067820"
  },
  {
    "text": "you make changes to the to the data model and Felix monitors the policy",
    "start": "1067820",
    "end": "1074090"
  },
  {
    "text": "continuously and and updates it so Felix is how you kind of handle all those",
    "start": "1074090",
    "end": "1079270"
  },
  {
    "text": "10,000 a CL knobs that everyone was talking about bringing that all together",
    "start": "1079270",
    "end": "1085610"
  },
  {
    "text": "we can lock out that request coming in from a random pod and eventually we end",
    "start": "1085610",
    "end": "1091760"
  },
  {
    "text": "up with therefore 2 less of an authorization over spiffy identities issued by spire cool thank you of a demo",
    "start": "1091760",
    "end": "1099740"
  },
  {
    "text": "right we do have a demo let's check it out cool so like all good demos we're gonna",
    "start": "1099740",
    "end": "1107900"
  },
  {
    "start": "1102000",
    "end": "1191000"
  },
  {
    "text": "rob a bank I love robbing banks and this is the setup so my colleague Spike's gonna open",
    "start": "1107900",
    "end": "1116450"
  },
  {
    "text": "his web browser there and I want to give him a big shout out because he was the guy who built this demo for me so spike",
    "start": "1116450",
    "end": "1123500"
  },
  {
    "text": "opens his browser and he's going to hit the yet another online bank customer portal that's gonna go via a second",
    "start": "1123500",
    "end": "1130750"
  },
  {
    "text": "micro service which is in charge of getting the particular summary details for for Spike's account that's going to",
    "start": "1130750",
    "end": "1138800"
  },
  {
    "text": "hit the database and we get a request coming back showing the showing his balance",
    "start": "1138800",
    "end": "1145040"
  },
  {
    "text": "it wouldn't be a service mash demo if we weren't running a service mash so we've got envoi in running in all the pods and",
    "start": "1145040",
    "end": "1152200"
  },
  {
    "text": "spires going to be injecting those lovely spiffy identities and of course",
    "start": "1152200",
    "end": "1158360"
  },
  {
    "text": "we're gonna run Felix and the Cassidy's so we're ready - ready to roll with",
    "start": "1158360",
    "end": "1163910"
  },
  {
    "text": "policy before we add some policy though we're going to use the good old",
    "start": "1163910",
    "end": "1168950"
  },
  {
    "text": "fashioned keeper tool exec zero-day to get into this this customer facing pod",
    "start": "1168950",
    "end": "1175130"
  },
  {
    "text": "so we'll get root in the customer facing pod then we're gonna directly access the database and see if we can give yet",
    "start": "1175130",
    "end": "1181760"
  },
  {
    "text": "another online bank a bad day then we're gonna load up the policy and lock",
    "start": "1181760",
    "end": "1187130"
  },
  {
    "text": "ourselves out again cool sound good yeah let's do it cool demo time",
    "start": "1187130",
    "end": "1194710"
  },
  {
    "start": "1191000",
    "end": "1247000"
  },
  {
    "text": "afraid I have to go into settings and switch to mirror mode",
    "start": "1197100",
    "end": "1202470"
  },
  {
    "text": "stupid presenter tricks yeah okay there we go so like like all good kubernetes demos",
    "start": "1210780",
    "end": "1219010"
  },
  {
    "text": "we have a whole load of yeah Milles and I'm just going to start applying those so I'm going to apply the Calico llamo",
    "start": "1219010",
    "end": "1225450"
  },
  {
    "text": "this is just a basic off-the-shelf Calico llamo with application their",
    "start": "1225450",
    "end": "1230770"
  },
  {
    "text": "policy enabled that's like a tick box option in our Docs then we're going to apply the spire server so that's that",
    "start": "1230770",
    "end": "1238150"
  },
  {
    "text": "first component that Evan was talking about and I'll pull that up okay so he wants to say anything about that oh yeah",
    "start": "1238150",
    "end": "1248440"
  },
  {
    "start": "1247000",
    "end": "1369000"
  },
  {
    "text": "sure so this is the spire server deployment yeah mo it's a pretty typical spire",
    "start": "1248440",
    "end": "1254440"
  },
  {
    "text": "server deployment that I think the most interesting part here is just the plugins so you can see that we have a",
    "start": "1254440",
    "end": "1260350"
  },
  {
    "text": "pluggable data store and inspire so this is demos just using sequel Lite basic sequel Lite plugin but in kind of snap",
    "start": "1260350",
    "end": "1266800"
  },
  {
    "text": "different things in here if you need to we have this plug-in called an Oda tester which is like when new agents or",
    "start": "1266800",
    "end": "1272230"
  },
  {
    "text": "nodes come online how do they identify themselves to the spire server to begin with how do they bootstrap that",
    "start": "1272230",
    "end": "1277240"
  },
  {
    "text": "relationship we call that metadata station and here we're using kubernetes service account tokens and finally we",
    "start": "1277240",
    "end": "1284230"
  },
  {
    "text": "have this upstream CA plug-in here which is allowing spire to actually plug into",
    "start": "1284230",
    "end": "1289960"
  },
  {
    "text": "like an existing PKI system if you have one in this demo we have this wired ups",
    "start": "1289960",
    "end": "1295390"
  },
  {
    "text": "like a dummy key that we use to bootstrap the demo just so that it's a little bit cleaner newer versions of",
    "start": "1295390",
    "end": "1300850"
  },
  {
    "text": "spire the server actually knows how to inject this bundle as a config map into",
    "start": "1300850",
    "end": "1306700"
  },
  {
    "text": "kubernetes so this bootstrap key isn't really required demo is just a little bit older than that in that regard",
    "start": "1306700",
    "end": "1312300"
  },
  {
    "text": "thanks Evan go on to the 14 manifest so",
    "start": "1312300",
    "end": "1318760"
  },
  {
    "text": "this one just applies the auerbach that spy needs there's nothing fun in there so I'll just like that one I'm gonna",
    "start": "1318760",
    "end": "1326740"
  },
  {
    "text": "play the agent and I'll pull that up again yeah I mean this one looks kind of",
    "start": "1326740",
    "end": "1332350"
  },
  {
    "text": "similar to the server configuration it's just the you know the agent side of things so again you'll see this node a",
    "start": "1332350",
    "end": "1338800"
  },
  {
    "text": "tester kubernetes plugin because the agent has to know how to challenge the server has the",
    "start": "1338800",
    "end": "1343990"
  },
  {
    "text": "two things gonna have to match this key manager memory plug-in is basically saying don't write any of these keys to",
    "start": "1343990",
    "end": "1349720"
  },
  {
    "text": "disk just keep them in the memory for now and then finally we have this workload a tester plug-in and this is",
    "start": "1349720",
    "end": "1355510"
  },
  {
    "text": "how spire agent is able to identify which envoy is calling so in this particular case we're using this",
    "start": "1355510",
    "end": "1361570"
  },
  {
    "text": "kubernetes workload a tester where the agent knows how to talk to the cubelet and get a bunch of information about the",
    "start": "1361570",
    "end": "1366880"
  },
  {
    "text": "pod and things like this Thanks I'm one",
    "start": "1366880",
    "end": "1371980"
  },
  {
    "start": "1369000",
    "end": "1462000"
  },
  {
    "text": "thing and it just came to mind is we used to have a version of this demo that we that we ran with it with another",
    "start": "1371980",
    "end": "1379480"
  },
  {
    "text": "service mesh and in that version we used to demo like stealing a certificate and",
    "start": "1379480",
    "end": "1385540"
  },
  {
    "text": "then we thought like I could we work that into this demo it's like it's in RAM like it's really hard to steal like",
    "start": "1385540",
    "end": "1391840"
  },
  {
    "text": "even even if you have like privileges to enter the pod but you need to be like",
    "start": "1391840",
    "end": "1397690"
  },
  {
    "text": "crawling through memory to find the certificate so we couldn't steal our own certificate right so that's that's",
    "start": "1397690",
    "end": "1405220"
  },
  {
    "text": "applied next that we're going to apply might create the identities in the in",
    "start": "1405220",
    "end": "1411760"
  },
  {
    "text": "this bio database right just teach aspire who is who right so you know this",
    "start": "1411760",
    "end": "1417970"
  },
  {
    "text": "envoy is you know foo and this envoy is bar and here are the spiffy IDs that that you should be assigning it we've",
    "start": "1417970",
    "end": "1423520"
  },
  {
    "text": "looked at that workload a tester plug-in on the agent before that is kubernetes based that means the agent knows how to",
    "start": "1423520",
    "end": "1429250"
  },
  {
    "text": "identify workloads based on kubernetes primitives so you see these things called selectors here where we can use",
    "start": "1429250",
    "end": "1435220"
  },
  {
    "text": "these kind of kubernetes ideas to identify particular workloads because at the end of the day they don't have a",
    "start": "1435220",
    "end": "1441010"
  },
  {
    "text": "secret or any other way to identify themself this is what we use and you can mix and match these things doesn't have to be just kubernetes it can be unix",
    "start": "1441010",
    "end": "1447640"
  },
  {
    "text": "primitives it can be all kinds of other things too cool so now think we're ready",
    "start": "1447640",
    "end": "1453100"
  },
  {
    "text": "to apply the bank itself and while that's starting up so standard",
    "start": "1453100",
    "end": "1463750"
  },
  {
    "start": "1462000",
    "end": "1655000"
  },
  {
    "text": "kubernetes stuff we've got services for each of different pods we've got a service account for each pod and then",
    "start": "1463750",
    "end": "1471820"
  },
  {
    "text": "because we're configuring envoi manually we've got an envelope a config map for each pod as well so",
    "start": "1471820",
    "end": "1477879"
  },
  {
    "text": "this one's for the database we're telling envoi which which like TCP",
    "start": "1477879",
    "end": "1486199"
  },
  {
    "text": "ports to listen on things that one actually we're telling it to manage HTTP",
    "start": "1486199",
    "end": "1492649"
  },
  {
    "text": "and which URLs it should serve we're telling it that it should do or thent",
    "start": "1492649",
    "end": "1499429"
  },
  {
    "text": "occation by the cast ease and we're",
    "start": "1499429",
    "end": "1505009"
  },
  {
    "text": "telling it to require certificates so this is where the M TLS comes in we're",
    "start": "1505009",
    "end": "1510109"
  },
  {
    "text": "telling it who it is so it needs to know its own identity and if you were doing this like for real like moving into",
    "start": "1510109",
    "end": "1516889"
  },
  {
    "text": "production you'd want to be auto-generating all these all these things right and I think you've got some",
    "start": "1516889",
    "end": "1522349"
  },
  {
    "text": "working yeah we have an admission controller coming up which handle a lot of these things at least on the spire",
    "start": "1522349",
    "end": "1528349"
  },
  {
    "text": "side of the house yep and then we're saying we're putting in SDS config thing",
    "start": "1528349",
    "end": "1538519"
  },
  {
    "text": "that's the API that spire connects in on and we have like mounts for the DES",
    "start": "1538519",
    "end": "1544609"
  },
  {
    "text": "caste socket and the spire socket and things like that then we have the same for each of the other services so one I",
    "start": "1544609",
    "end": "1551059"
  },
  {
    "text": "won't bore you with all the detail now if everything went to plan I should be",
    "start": "1551059",
    "end": "1556699"
  },
  {
    "text": "able to open the browser and we should see exactly what we've got before so",
    "start": "1556699",
    "end": "1561949"
  },
  {
    "text": "great so if I hit ctrl R so I am",
    "start": "1561949",
    "end": "1567289"
  },
  {
    "text": "refreshing that just to check yeah so service is live now and we can see",
    "start": "1567289",
    "end": "1574519"
  },
  {
    "text": "spikes balance but let's see what",
    "start": "1574519",
    "end": "1580069"
  },
  {
    "text": "happens if I jump into the customer pod",
    "start": "1580069",
    "end": "1585190"
  },
  {
    "text": "so hopefully they've left bash in there for me oh I need a TI in there there we",
    "start": "1585190",
    "end": "1595940"
  },
  {
    "text": "go so hopefully you know they left bashing their customer-facing but I was a little bit when they do that right and looks",
    "start": "1595940",
    "end": "1604279"
  },
  {
    "text": "like curl is there too so that's really useful let's see if they've got their nice discoverability",
    "start": "1604279",
    "end": "1609770"
  },
  {
    "text": "set up so hmm yeah database I'm getting responses and I guess I'm gonna guess",
    "start": "1609770",
    "end": "1617450"
  },
  {
    "text": "it's gonna be a @ CD database so let's see if we can get some keys ooh and if I",
    "start": "1617450",
    "end": "1626179"
  },
  {
    "text": "tack recursive equals true all right boom so we've got rich yeah exactly",
    "start": "1626179",
    "end": "1633250"
  },
  {
    "text": "so we've got the whole of yet another online banks database dump to screen",
    "start": "1633250",
    "end": "1638270"
  },
  {
    "text": "it's not a good day for yet another online bank right so let's see if we can",
    "start": "1638270",
    "end": "1644630"
  },
  {
    "text": "lock that down so if I apply the Calico",
    "start": "1644630",
    "end": "1650570"
  },
  {
    "text": "policy and I'll just show you that to show you that policy I played so this is",
    "start": "1650570",
    "end": "1656570"
  },
  {
    "start": "1655000",
    "end": "1847000"
  },
  {
    "text": "a calico network policy it's a global network policy so that that applies",
    "start": "1656570",
    "end": "1662360"
  },
  {
    "text": "across namespaces which is something you can't easily do and in keeping that ease and the two things I sort of call your",
    "start": "1662360",
    "end": "1669710"
  },
  {
    "text": "attention to one is the the selector here so we've labeled our pods like",
    "start": "1669710",
    "end": "1675289"
  },
  {
    "text": "customer summary and database so this selector here is based on those labels",
    "start": "1675289",
    "end": "1680450"
  },
  {
    "text": "and it tells Calico which pods that should apply which policy to so this is",
    "start": "1680450",
    "end": "1685789"
  },
  {
    "text": "what Felix uses when it's trying to figure out which policies apply locally",
    "start": "1685789",
    "end": "1690909"
  },
  {
    "text": "and then we've got some ingress policy here so on the customer pod we've said",
    "start": "1690909",
    "end": "1698330"
  },
  {
    "text": "allow ingress and allow get only so where we're not allowing puts or",
    "start": "1698330",
    "end": "1703640"
  },
  {
    "text": "anything there but perhaps more interesting like if I go to the the summary and database pods this row gets",
    "start": "1703640",
    "end": "1711409"
  },
  {
    "text": "it gets even more relevant for our talks so applies to the summary and we've got",
    "start": "1711409",
    "end": "1716419"
  },
  {
    "text": "an ingress rule there that says only allow from this specific service account",
    "start": "1716419",
    "end": "1721580"
  },
  {
    "text": "and that specific service account due to the way we've structured our spiffy identities is going to map to the the",
    "start": "1721580",
    "end": "1728480"
  },
  {
    "text": "spiffy identity for that one so it will be authenticating the their particular",
    "start": "1728480",
    "end": "1734140"
  },
  {
    "text": "so well we'll piggyback on the authentication for the specific service account",
    "start": "1734140",
    "end": "1739660"
  },
  {
    "text": "then we'll authorize that that request we haven't worried about egress policy",
    "start": "1739660",
    "end": "1744850"
  },
  {
    "text": "in this particular demo okay so if that",
    "start": "1744850",
    "end": "1750220"
  },
  {
    "text": "will apply just fine I should be still be able to access the web services still up so it's a good",
    "start": "1750220",
    "end": "1757090"
  },
  {
    "text": "good test and now if I exact back into the pod and",
    "start": "1757090",
    "end": "1762130"
  },
  {
    "text": "try running what I did before I get in that outlet but if I put a dash V on",
    "start": "1762130",
    "end": "1767500"
  },
  {
    "text": "there there we are not rich we're not rich so yeah that's the story of how we",
    "start": "1767500",
    "end": "1776650"
  },
  {
    "text": "didn't manage to rob the bank in the end we tried yeah so that 403 forbidden is",
    "start": "1776650",
    "end": "1781990"
  },
  {
    "text": "coming back from m'boy so you get you get a fairly clear response that tells",
    "start": "1781990",
    "end": "1787480"
  },
  {
    "text": "you why your request wasn't allowed and that's what you'll see whenever de Castries denies a request",
    "start": "1787480",
    "end": "1793860"
  },
  {
    "text": "okay I think that's all we have for the",
    "start": "1793860",
    "end": "1798910"
  },
  {
    "text": "demo right yeah exactly yeah if you guys want to learn more a couple links link",
    "start": "1798910",
    "end": "1806500"
  },
  {
    "text": "to the spire project linked to the Calico project and you can actually download this demo and run it yourself",
    "start": "1806500",
    "end": "1812820"
  },
  {
    "text": "there's a link to the demo yeah Mille there feel free to pull it down run through it and let us know what you",
    "start": "1812820",
    "end": "1817840"
  },
  {
    "text": "think thank you everybody thanks",
    "start": "1817840",
    "end": "1822510"
  },
  {
    "text": "I believe we have time for questions is that true question time oh I think you need to",
    "start": "1826890",
    "end": "1835710"
  },
  {
    "text": "pass this right hello",
    "start": "1835710",
    "end": "1850320"
  },
  {
    "start": "1847000",
    "end": "1963000"
  },
  {
    "text": "you mentioned in the demo that or either before the demo in your presentation that you're using Calico policy",
    "start": "1850320",
    "end": "1857580"
  },
  {
    "text": "controller to secure well using the whole solution to secure last four",
    "start": "1857580",
    "end": "1863279"
  },
  {
    "text": "through two seven are you also using the post controller to implement any",
    "start": "1863279",
    "end": "1869549"
  },
  {
    "text": "security at layer 3 so between pods so in this particular",
    "start": "1869549",
    "end": "1877230"
  },
  {
    "text": "demo I don't think we had anything in there but you absolutely can so you can",
    "start": "1877230",
    "end": "1883019"
  },
  {
    "text": "you can have kind of typical Calico policy like not the application there",
    "start": "1883019",
    "end": "1888990"
  },
  {
    "text": "stuff and that runs a layer three based on IP so you can have both of those",
    "start": "1888990",
    "end": "1894120"
  },
  {
    "text": "running and maybe you get you know defense-in-depth from that like this certain types of attack or someone",
    "start": "1894120",
    "end": "1900419"
  },
  {
    "text": "steals a certificate or something you might be able to lock them down but it's kind of not really the theme of our talk",
    "start": "1900419",
    "end": "1906510"
  },
  {
    "text": "because we're talking about zero trust networking here do you think calico 4c",
    "start": "1906510",
    "end": "1912539"
  },
  {
    "text": "and I yeah yeah you don't have to be",
    "start": "1912539",
    "end": "1917820"
  },
  {
    "text": "using calico for your CNI plugin for this so calico",
    "start": "1917820",
    "end": "1923539"
  },
  {
    "text": "Calico has a c and i plug in and you know we support various types of",
    "start": "1923539",
    "end": "1928970"
  },
  {
    "text": "networking and an overlay but this is all in our policy engine and the policy engine works with various difference he",
    "start": "1928970",
    "end": "1936230"
  },
  {
    "text": "and I plug in so we work with like AWS SC and I plug in and the the EOC and I",
    "start": "1936230",
    "end": "1943279"
  },
  {
    "text": "plug in and very various other ones that we were flying on as well so questions",
    "start": "1943279",
    "end": "1954500"
  },
  {
    "text": "down here",
    "start": "1954500",
    "end": "1956980"
  },
  {
    "text": "I am curious those aspire support",
    "start": "1959520",
    "end": "1966540"
  },
  {
    "start": "1963000",
    "end": "2007000"
  },
  {
    "text": "multiple roots of trust say the bank has different see ace yes it does so",
    "start": "1966540",
    "end": "1973140"
  },
  {
    "text": "depending on how you want to set it up you can have multiple roots of trust and kind of the same what we call trust domain or you can have disparate rates",
    "start": "1973140",
    "end": "1981059"
  },
  {
    "text": "of trust which federate between each other that's something that is fairly new and is kind of in the works now but",
    "start": "1981059",
    "end": "1987150"
  },
  {
    "text": "it'll allow you to kind of have like multiple disparate domains of trust with multiple disparate roots that have like",
    "start": "1987150",
    "end": "1993270"
  },
  {
    "text": "a loose coupling between them Oh fantastic looking forward to it thank you",
    "start": "1993270",
    "end": "1999350"
  },
  {
    "text": "who's next I was wondering about our spy",
    "start": "1999350",
    "end": "2011150"
  },
  {
    "start": "2007000",
    "end": "2107000"
  },
  {
    "text": "era exactly a position compared to sto Citadel and is it possible to do the",
    "start": "2011150",
    "end": "2018350"
  },
  {
    "text": "same thing here using Citadel for the MPLS certificate deployment I believe it",
    "start": "2018350",
    "end": "2025640"
  },
  {
    "text": "is possible do Citadel relies on service account tokens to authenticate envoys",
    "start": "2025640",
    "end": "2033429"
  },
  {
    "text": "aspire doesn't have that requirement there's also an integration that we have where you can use a spire server in",
    "start": "2033429",
    "end": "2039290"
  },
  {
    "text": "place of Citadel server and then use this do note agent instead of spire agent so there's a lot of different",
    "start": "2039290",
    "end": "2044390"
  },
  {
    "text": "possibilities here the key thing to understand is that Citadel is a very very purpose-built and works in a small",
    "start": "2044390",
    "end": "2050780"
  },
  {
    "text": "number of cases or aspire is kind of a general purpose solution we can work across different kinds of environments and different platforms and things like",
    "start": "2050780",
    "end": "2056990"
  },
  {
    "text": "this you are using invoice as a data",
    "start": "2056990",
    "end": "2064520"
  },
  {
    "text": "plane but is it possible to would this work as well with data plane",
    "start": "2064520",
    "end": "2071080"
  },
  {
    "text": "implementation yeah so that the trick is just that you need to get parody on the",
    "start": "2071080",
    "end": "2076368"
  },
  {
    "text": "API that spire uses to push certs into the into the proxy so here spire is",
    "start": "2076369",
    "end": "2082340"
  },
  {
    "text": "supporting STS API which is an envoy specific API but we also have an engine X module which knows how to speak the",
    "start": "2082340",
    "end": "2088158"
  },
  {
    "text": "spiffy workload API and can talk into spire agent and pull those certs out the same way so it just depends on the API support on both sides and",
    "start": "2088159",
    "end": "2096139"
  },
  {
    "text": "even if there's not there you can kind of build some glue in between those two things okay how do you establish trust",
    "start": "2096140",
    "end": "2109310"
  },
  {
    "start": "2107000",
    "end": "2187000"
  },
  {
    "text": "between Felix and calico like how do you verify the policy that you get is the",
    "start": "2109310",
    "end": "2117080"
  },
  {
    "text": "question how do you establish trust between sorrywhat and calico Velux well",
    "start": "2117080",
    "end": "2122720"
  },
  {
    "text": "the agent Felix so we have a slightly",
    "start": "2122720",
    "end": "2129470"
  },
  {
    "text": "awkward problem because we're kind of an infrastructure layer so we kind of can't",
    "start": "2129470",
    "end": "2136460"
  },
  {
    "text": "rely on all of the stuff that that spire provides but we do support the like",
    "start": "2136460",
    "end": "2144710"
  },
  {
    "text": "normal security primitives for accessing like the kubernetes api and we support TLS for accessing at CD but it's a bit",
    "start": "2144710",
    "end": "2151730"
  },
  {
    "text": "more of a manual process or you know we have some upcoming work to do a do an",
    "start": "2151730",
    "end": "2157640"
  },
  {
    "text": "operator for calico which will automate setting up a lot of the certificates and so on it's a little bit frustrating that",
    "start": "2157640",
    "end": "2163340"
  },
  {
    "text": "we want to work in in networks that have you know they don't have the spire setup",
    "start": "2163340",
    "end": "2169070"
  },
  {
    "text": "yeah because spire as a service that might run on top of calico to serve to its pods so we we have to kind of do",
    "start": "2169070",
    "end": "2175310"
  },
  {
    "text": "some of this stuff manually but we we use we support certificates and so on",
    "start": "2175310",
    "end": "2181250"
  },
  {
    "text": "for establishing that trust all right thank you so how would you go on and",
    "start": "2181250",
    "end": "2189350"
  },
  {
    "start": "2187000",
    "end": "2235000"
  },
  {
    "text": "debug network issues if you write a policy that isn't valid it can't match",
    "start": "2189350",
    "end": "2194870"
  },
  {
    "text": "on based on selectors that force it etc so you can turn up the debug logs in the",
    "start": "2194870",
    "end": "2202160"
  },
  {
    "text": "castes and it will explain the decisions it's making the caste is also logs I",
    "start": "2202160",
    "end": "2207530"
  },
  {
    "text": "think every decision so first you'll get the 403 response that will have envoi in",
    "start": "2207530",
    "end": "2215210"
  },
  {
    "text": "there and it will say this is a 403 from envoi and once you know that you've got a 403 from envoi you can go dive into",
    "start": "2215210",
    "end": "2221870"
  },
  {
    "text": "the de castes and then boy and get more details about what happened and if you crank up the debug log you",
    "start": "2221870",
    "end": "2226970"
  },
  {
    "text": "should get get information about exactly what happened how does the health check",
    "start": "2226970",
    "end": "2237890"
  },
  {
    "start": "2235000",
    "end": "2273000"
  },
  {
    "text": "look for something like this so how do you connect between cubelet and the actual port so I think what happens",
    "start": "2237890",
    "end": "2248330"
  },
  {
    "text": "there is cubelet looks like an outsider so normally in Calico policy but not the",
    "start": "2248330",
    "end": "2257210"
  },
  {
    "text": "application less stuff we just wipe this cubelet and allow it through with",
    "start": "2257210",
    "end": "2262520"
  },
  {
    "text": "application their policy I'm not a hundred percent sure sorry Thanks",
    "start": "2262520",
    "end": "2270790"
  },
  {
    "start": "2273000",
    "end": "2333000"
  },
  {
    "text": "any tips on how to safely roll out spire updates or config changes yeah so you",
    "start": "2273860",
    "end": "2286100"
  },
  {
    "text": "know I've mentioned earlier that spires this control plane component so you you can't like tolerate some downtime there",
    "start": "2286100",
    "end": "2291830"
  },
  {
    "text": "a few few fat fingers screw something up while rolling an update out that's something that is okay to do but in",
    "start": "2291830",
    "end": "2297770"
  },
  {
    "text": "general we recommend that you upgrade the spire server first and upgrade the",
    "start": "2297770",
    "end": "2303110"
  },
  {
    "text": "agents but we do maintain like compatibility between major versions of spire so it shouldn't be too difficult",
    "start": "2303110",
    "end": "2308600"
  },
  {
    "text": "to roll out without it hit but even if you do encounter a problem or something like that you know if your TTL if the",
    "start": "2308600",
    "end": "2314450"
  },
  {
    "text": "lifetime of the certificates is one day you'll have 12 to 18 hours or so to",
    "start": "2314450",
    "end": "2319670"
  },
  {
    "text": "clean things up any more questions",
    "start": "2319670",
    "end": "2328359"
  },
  {
    "text": "we'll take a while to go there it's kind",
    "start": "2328980",
    "end": "2334560"
  },
  {
    "start": "2333000",
    "end": "2410000"
  },
  {
    "text": "of the same story the Calico is where we we have a strict separation between data",
    "start": "2334560",
    "end": "2339570"
  },
  {
    "text": "plan components and and control plan components so what's the overhead on the",
    "start": "2339570",
    "end": "2345030"
  },
  {
    "text": "overall application performance with authorizing every single cross support request so what what's the overhead on",
    "start": "2345030",
    "end": "2354510"
  },
  {
    "text": "the application performance because basically you have to update your expected Leighton season yes sir",
    "start": "2354510",
    "end": "2361500"
  },
  {
    "text": "so there is there is overhead and there's an extra bit of overhead from the small network hop to to envoi itself",
    "start": "2361500",
    "end": "2370470"
  },
  {
    "text": "and then there's the processing overhead of doing like an TLS or something like that and whatever approach you take",
    "start": "2370470",
    "end": "2377040"
  },
  {
    "text": "you're gonna have the MTA less overhead and we have some work in progress to optimize the connection to 2n voice so",
    "start": "2377040",
    "end": "2384990"
  },
  {
    "text": "that we can use some of the features in the kernel to to kind of bypass that socket and get the package directly to",
    "start": "2384990",
    "end": "2391770"
  },
  {
    "text": "to envoi so it does add some overhead I don't know exactly how much but but yeah",
    "start": "2391770",
    "end": "2398760"
  },
  {
    "text": "can't get away from that",
    "start": "2398760",
    "end": "2401660"
  },
  {
    "text": "I think we ran out of time so thank you",
    "start": "2403960",
    "end": "2409230"
  },
  {
    "text": "[Applause]",
    "start": "2409230",
    "end": "2411949"
  }
]