[
  {
    "text": "um so today we are going to be talking about how we use efficient transparent",
    "start": "160",
    "end": "7120"
  },
  {
    "text": "checkpointing for um AI workloads and in Kubernetes and uh this work is a",
    "start": "7120",
    "end": "14240"
  },
  {
    "text": "collaboration between my supervisors professor Rodrigo Bruno and professor Wes Armo and a few people from um Nvidia",
    "start": "14240",
    "end": "22160"
  },
  {
    "text": "and AMD Um Victoria over to you",
    "start": "22160",
    "end": "27800"
  },
  {
    "text": "Hi So do you know what all these talks have in common so during past CubeCons",
    "start": "29480",
    "end": "37840"
  },
  {
    "text": "folks have already presented some problems regarding",
    "start": "37840",
    "end": "42879"
  },
  {
    "text": "inefficient resource utilization and fault tolerance These people were",
    "start": "42879",
    "end": "48239"
  },
  {
    "text": "worried and concerned about ensuring that GPUs are used efficiently and that",
    "start": "48239",
    "end": "53440"
  },
  {
    "text": "any problems that arise concerning GPU are resolved simply because GPUs are",
    "start": "53440",
    "end": "59359"
  },
  {
    "text": "expensive resource We can see that people from companies like Google Microsoft Huawei Nvidia or CERN were um",
    "start": "59359",
    "end": "68479"
  },
  {
    "text": "invested in this and they suggested various solutions uh mostly using mix or",
    "start": "68479",
    "end": "75200"
  },
  {
    "text": "time sharing or some mentioned some new scheduling strategies and the thing is",
    "start": "75200",
    "end": "80479"
  },
  {
    "text": "that this problem persists and in our case we experience it too but we are suggesting slightly different approach",
    "start": "80479",
    "end": "87680"
  },
  {
    "text": "to solving these problems So who is we um I represent Czech",
    "start": "87680",
    "end": "94240"
  },
  {
    "text": "national e infrastructure that operates multi-tenant multi-purpose kubernetes clusters that are free of charge for",
    "start": "94240",
    "end": "101840"
  },
  {
    "text": "researchers and academics in Czech Republic These clusters feature around",
    "start": "101840",
    "end": "107360"
  },
  {
    "text": "50 GPUs of various uh types and around 300 active users that operate uh",
    "start": "107360",
    "end": "114799"
  },
  {
    "text": "different kinds of workloads that generally fall into two categories of bench workloads or interactive workloads",
    "start": "114799",
    "end": "121680"
  },
  {
    "text": "In operations we aim for simplicity and some level of general applicability",
    "start": "121680",
    "end": "128000"
  },
  {
    "text": "because of these variety of workloads but also because by far not all users",
    "start": "128000",
    "end": "133599"
  },
  {
    "text": "are proficient with containers Kubernetes or generally complex",
    "start": "133599",
    "end": "138840"
  },
  {
    "text": "setups Now I will present three insights from our infrastructure So starting with",
    "start": "138840",
    "end": "144400"
  },
  {
    "text": "the first one on this graph we can see the said reality So computational nodes",
    "start": "144400",
    "end": "151680"
  },
  {
    "text": "seem generally occupied due to generous requests but the in reality the real",
    "start": "151680",
    "end": "158160"
  },
  {
    "text": "utilization is quite low Um in this data utilization in this like CPU utilization",
    "start": "158160",
    "end": "165440"
  },
  {
    "text": "graph uh we can see computational nodes and their real utilization and the whole",
    "start": "165440",
    "end": "171720"
  },
  {
    "text": "capacity and the ratio between these two generally vise between 1 to 50% with an",
    "start": "171720",
    "end": "178800"
  },
  {
    "text": "average being 6% which is quite sad and definitely could be improved But overall",
    "start": "178800",
    "end": "186080"
  },
  {
    "text": "in cloud some level of overprovisioning is necessary because cloud should be elastic Cloud should be able to",
    "start": "186080",
    "end": "193040"
  },
  {
    "text": "provision for sudden spikes and also cloud should be able to accommodate redundant workloads and if this is the",
    "start": "193040",
    "end": "200000"
  },
  {
    "text": "case with the CPU utilization then we can imagine that with GPUs is sometimes",
    "start": "200000",
    "end": "207800"
  },
  {
    "text": "worse Continuing with the second insight This insight comes from the category of",
    "start": "207800",
    "end": "214000"
  },
  {
    "text": "batch workloads So this plot shows alpha fold jobs and their durations and the",
    "start": "214000",
    "end": "220159"
  },
  {
    "text": "amount of and the amount of jobs falling into the relevant duration category",
    "start": "220159",
    "end": "225840"
  },
  {
    "text": "Alpha Fold is a protein structure prediction software and jobs require a GPU to run and they usually run for many",
    "start": "225840",
    "end": "233280"
  },
  {
    "text": "hours normally up to 10 hours but we've experienced cases when the job ran for",
    "start": "233280",
    "end": "238560"
  },
  {
    "text": "30 days since it's a batch workload uh GPU utilization is quite fine it's uh",
    "start": "238560",
    "end": "245519"
  },
  {
    "text": "usually about 90% so the case is obviously fall",
    "start": "245519",
    "end": "250840"
  },
  {
    "text": "tolerance in everyday data center operations hard or soft failures happen",
    "start": "250840",
    "end": "258079"
  },
  {
    "text": "kind of all the time So we want to ensure that these long running jobs do",
    "start": "258079",
    "end": "263120"
  },
  {
    "text": "not lose their progress and so we would like to have some mechanism for ensuring",
    "start": "263120",
    "end": "270960"
  },
  {
    "text": "their fault to tolerance The third insight is from the",
    "start": "270960",
    "end": "278160"
  },
  {
    "text": "interactive workloads category Uh on this graph we can see GPU utilization of",
    "start": "278160",
    "end": "283840"
  },
  {
    "text": "a Jupyter notebook We can see that it's quite unpredictable and dynamic and",
    "start": "283840",
    "end": "289520"
  },
  {
    "text": "there are times and bursts of activity followed by inactive periods in some cases long as long as one day uh Jupyter",
    "start": "289520",
    "end": "298080"
  },
  {
    "text": "notebooks or generally interactive workloads are expected to be readily",
    "start": "298080",
    "end": "303759"
  },
  {
    "text": "available but at the same time we don't know when human will interact with them and so by definition the resources are",
    "start": "303759",
    "end": "311280"
  },
  {
    "text": "allocated but can remain underutilized or not utilized at all and it is worth",
    "start": "311280",
    "end": "317759"
  },
  {
    "text": "noting that overprovisioning such underutil underutilized workloads even",
    "start": "317759",
    "end": "323199"
  },
  {
    "text": "worsens the problem of ineffective utilization",
    "start": "323199",
    "end": "327600"
  },
  {
    "text": "So um based on these insights and also like the insights from the previous",
    "start": "328240",
    "end": "333880"
  },
  {
    "text": "talks we now can have kind of a wish list for GPU workloads with two wishes",
    "start": "333880",
    "end": "340240"
  },
  {
    "text": "First wish is a wish for um fall tolerance generally for any kind of",
    "start": "340240",
    "end": "346880"
  },
  {
    "text": "workloads but longunning workloads would be very interesting and uh ensuring",
    "start": "346880",
    "end": "352400"
  },
  {
    "text": "fault tolerance isn't essential it's not the nice to have Second kind second wish",
    "start": "352400",
    "end": "357919"
  },
  {
    "text": "is achieving efficient utilization of resources mostly for interactive workloads Uh because we've seen what's",
    "start": "357919",
    "end": "365120"
  },
  {
    "text": "their utilization pattern and also because they're becoming more and more ubiquitous in the",
    "start": "365120",
    "end": "372159"
  },
  {
    "text": "clusters And of course there exists some existing approaches to these problems",
    "start": "372759",
    "end": "379039"
  },
  {
    "text": "concerning utilization But uh not all approaches can be applied to every use",
    "start": "379039",
    "end": "385120"
  },
  {
    "text": "case or to every workload Overprovisioning is not suitable for all workload types because workloads need to",
    "start": "385120",
    "end": "392639"
  },
  {
    "text": "be aware that they can be autoscaled Then GPU sharing in form of",
    "start": "392639",
    "end": "398960"
  },
  {
    "text": "multi-instance GPUs is limited in up to how many parts you can partition the GPU",
    "start": "398960",
    "end": "405120"
  },
  {
    "text": "and also can lead to fragmentation Time sharing can worsen the performance",
    "start": "405120",
    "end": "410160"
  },
  {
    "text": "and also is not suitable in environments where resources are shared by unrelated",
    "start": "410160",
    "end": "415720"
  },
  {
    "text": "groups New scheduling strategies tend to be workload specific and are not",
    "start": "415720",
    "end": "421840"
  },
  {
    "text": "applicable widely in general environments So we are suggesting uh to",
    "start": "421840",
    "end": "427120"
  },
  {
    "text": "use another versatile tool and to have it in the toolbox alongside all these existing approaches and that is",
    "start": "427120",
    "end": "434240"
  },
  {
    "text": "transparent GPU checkpointing And now to Red Austin",
    "start": "434240",
    "end": "440440"
  },
  {
    "text": "Thanks Vicki Um so as Victoria mentioned transparent check GPU checkpointing can",
    "start": "441520",
    "end": "446720"
  },
  {
    "text": "be used for improving um resource utilization or providing fault tolerance",
    "start": "446720",
    "end": "452000"
  },
  {
    "text": "for um GPU accelerated workloads Um last year at CubeCon we we",
    "start": "452000",
    "end": "459039"
  },
  {
    "text": "had a talk presenting how we can enable coordinated checkpointing for distributed applications And at the end",
    "start": "459039",
    "end": "465199"
  },
  {
    "text": "of our talk there were many questions about how can we actually checkpoint restore GP applications and this is a",
    "start": "465199",
    "end": "471120"
  },
  {
    "text": "follow-up session on uh this talk Um so there are a few existing approaches of",
    "start": "471120",
    "end": "476560"
  },
  {
    "text": "how do we checkpoint restore GP applications and the most commonly used approach is to use something called API",
    "start": "476560",
    "end": "483440"
  },
  {
    "text": "interception So this is where um essentially replacing the uh CUDA",
    "start": "483440",
    "end": "490080"
  },
  {
    "text": "libraries and or ROM libraries essentially JP libraries with interception mechanism that um logs and",
    "start": "490080",
    "end": "498560"
  },
  {
    "text": "replace API calls and keeps track of memory transfers And the problem with",
    "start": "498560",
    "end": "504240"
  },
  {
    "text": "this approach is it's difficult to implement You have to uh essentially explicitly intercept every API call and",
    "start": "504240",
    "end": "511919"
  },
  {
    "text": "you have to track all the memory transfers It adds performance overhead and you have to handle the loading and",
    "start": "511919",
    "end": "518719"
  },
  {
    "text": "um essentially loading the uh kernels on on the GPU which is architecture",
    "start": "518719",
    "end": "523839"
  },
  {
    "text": "specific and uh it can be different for uh different versions of libraries and",
    "start": "523839",
    "end": "528959"
  },
  {
    "text": "it also requires dynamic linking Um so for example has uses static linking by",
    "start": "528959",
    "end": "534480"
  },
  {
    "text": "default for the p runtime So you have to recompile certain applications Um and",
    "start": "534480",
    "end": "540240"
  },
  {
    "text": "our approach is using recently introduced uh GPU capabilities that",
    "start": "540240",
    "end": "545279"
  },
  {
    "text": "allow you to um essentially checkpoint restore GPU the state of GPU",
    "start": "545279",
    "end": "550399"
  },
  {
    "text": "applications We call this transparently unified CPU GPU snapshots because it allows you to create a single snapshot",
    "start": "550399",
    "end": "557120"
  },
  {
    "text": "that combines both CPU and GPU state It's fully transparent to the application It works with both static",
    "start": "557120",
    "end": "562880"
  },
  {
    "text": "and dynamic linking and uh it can it's integrated in into Creo through plug-in",
    "start": "562880",
    "end": "568800"
  },
  {
    "text": "mechanisms Um so this allows us to be used for example with docker pmon other",
    "start": "568800",
    "end": "574640"
  },
  {
    "text": "container engines and kubernetes Um for AMD GPUs the uh AMD",
    "start": "574640",
    "end": "581760"
  },
  {
    "text": "GPU driver is part of the NOS's kernel and the AMD team essentially introduced new API calls",
    "start": "581760",
    "end": "588360"
  },
  {
    "text": "uh API calls that allow you to obtain information about the process currently",
    "start": "588360",
    "end": "594160"
  },
  {
    "text": "running on the GPU and freeze the process from ex essentially evict the",
    "start": "594160",
    "end": "599279"
  },
  {
    "text": "cues of the process And um the second step is to checkpoint the state of the",
    "start": "599279",
    "end": "604880"
  },
  {
    "text": "process which is safety to um a file descriptor and the unpulse operation allows you to um essentially unevict the",
    "start": "604880",
    "end": "613200"
  },
  {
    "text": "cues So these are the three main steps that can be used to enable GPU checkpointing and similarly for the cool",
    "start": "613200",
    "end": "621440"
  },
  {
    "text": "check uh for the for Nvidia GPUs we have a few similar steps The first is to",
    "start": "621440",
    "end": "627360"
  },
  {
    "text": "obtain the status Now what what is the current status of the CUDA task um to",
    "start": "627360",
    "end": "633920"
  },
  {
    "text": "essentially pause the execution of of the GPU process and then to checkpoint",
    "start": "633920",
    "end": "639519"
  },
  {
    "text": "the GPU state into first memory and this functionality is exposed through",
    "start": "639519",
    "end": "645120"
  },
  {
    "text": "uh command line utility code for the checkpoint and there is a blog post on uh from Steven um describing how this",
    "start": "645120",
    "end": "652720"
  },
  {
    "text": "works in more detail um integrating this functionality with",
    "start": "652720",
    "end": "658000"
  },
  {
    "text": "Kubernetes is fairly simple It's part of Creo and it's fully transparent to the applications So it doesn't require for",
    "start": "658000",
    "end": "664480"
  },
  {
    "text": "example to inject additional libraries into the container image or to uh",
    "start": "664480",
    "end": "669600"
  },
  {
    "text": "essentially modify the workflow the applications that are being used And Adrian is going to describe in more",
    "start": "669600",
    "end": "674959"
  },
  {
    "text": "detail how um the checkpoint restore mechanisms work in Kubernetes Um so we have a a demo showing how we",
    "start": "674959",
    "end": "683040"
  },
  {
    "text": "can use this mechanism for uh hot swapping of models So in this case we",
    "start": "683040",
    "end": "688320"
  },
  {
    "text": "have the cluster that Victoria just presented um using a single Kubernetes",
    "start": "688320",
    "end": "694399"
  },
  {
    "text": "node uh running a training port in a Jupyter notebook And here we have high",
    "start": "694399",
    "end": "700360"
  },
  {
    "text": "utilization but we consider this to be a low priority task that will be running for a long time And if we need to switch",
    "start": "700360",
    "end": "707920"
  },
  {
    "text": "to for example hyper task we can checkpoint deplication from the GPU into",
    "start": "707920",
    "end": "713360"
  },
  {
    "text": "host memory And this essentially allows us to allocate the GPU to another process to essentially in this case use",
    "start": "713360",
    "end": "720720"
  },
  {
    "text": "an inference workload with lama 3.3 Um and this would essentially load",
    "start": "720720",
    "end": "726639"
  },
  {
    "text": "the model into the GPU and start responding to the request And if you have another workload with even higher",
    "start": "726639",
    "end": "733279"
  },
  {
    "text": "priority we can essentially checkpoint the inference task again into host memory And then um after this is",
    "start": "733279",
    "end": "740399"
  },
  {
    "text": "checkpoint it We can um",
    "start": "740399",
    "end": "745480"
  },
  {
    "text": "essentially we have two ports here The first port is notebook and the second",
    "start": "746120",
    "end": "751360"
  },
  {
    "text": "one is open web UI which serves two users The first one is the llama 3.3",
    "start": "751360",
    "end": "756959"
  },
  {
    "text": "workload The second user is using deepseek So the deep sync um model has",
    "start": "756959",
    "end": "762399"
  },
  {
    "text": "fewer parameters and it's faster It generates response in a faster way And",
    "start": "762399",
    "end": "768320"
  },
  {
    "text": "once the high priority workload in this case deepseek has completed we can",
    "start": "768320",
    "end": "773360"
  },
  {
    "text": "resume the execution of um of the inference",
    "start": "773360",
    "end": "778600"
  },
  {
    "text": "workload And once this is completed we can also",
    "start": "778600",
    "end": "784720"
  },
  {
    "text": "resume the training job at the end So this transparent checkpointing",
    "start": "784720",
    "end": "790880"
  },
  {
    "text": "mechanism allows to implement something we called hot swapping Essentially uh swap multiple models or workloads uh to",
    "start": "790880",
    "end": "799279"
  },
  {
    "text": "and from host memory um to essentially optimize resource",
    "start": "799279",
    "end": "806040"
  },
  {
    "text": "utilization and Adrian has another demo for migration later on Uh just show the",
    "start": "806040",
    "end": "811440"
  },
  {
    "text": "evolution results Um yeah Um so we have",
    "start": "811440",
    "end": "816800"
  },
  {
    "text": "we we we evaluate the checkpoint restore mechanisms with uh different",
    "start": "816800",
    "end": "824200"
  },
  {
    "text": "uh with different models and model sizes and GPUs And we we were able to",
    "start": "824800",
    "end": "830800"
  },
  {
    "text": "demonstrate that it achieves transparent uh checkpointing for essentially faster",
    "start": "830800",
    "end": "837600"
  },
  {
    "text": "recovery and to accelerate the gold start times of inference works um Adrian over to you",
    "start": "837600",
    "end": "845760"
  },
  {
    "text": "Yeah thank you So thank you for the um presentation of the use cases and of the",
    "start": "845760",
    "end": "850800"
  },
  {
    "text": "details about um how it works with GPUs I want to talk a bit more about the",
    "start": "850800",
    "end": "856560"
  },
  {
    "text": "whole state of checkpoint restore in Kubernetes focused on on GPUs but um",
    "start": "856560",
    "end": "861680"
  },
  {
    "text": "give some background around it So I prepared another demo a live demo So we",
    "start": "861680",
    "end": "866720"
  },
  {
    "text": "have seen the demo right now which um kind of preempts the the running um",
    "start": "866720",
    "end": "872639"
  },
  {
    "text": "application on your GPU and in my demo I want to migrate um an LLM from one host",
    "start": "872639",
    "end": "878639"
  },
  {
    "text": "to another host while it's running So here so um this is a really simple setup",
    "start": "878639",
    "end": "886000"
  },
  {
    "text": "here So this is Kubernetes and cryo from git from maybe three weeks",
    "start": "886000",
    "end": "894079"
  },
  {
    "text": "ago So I have this really simple um pot definition here which I will start now",
    "start": "894079",
    "end": "900519"
  },
  {
    "text": "and I um I have a rubber script around it which tries to measure how long it takes for the application to start so",
    "start": "900519",
    "end": "907920"
  },
  {
    "text": "that we can see um if maybe restarting from a checkpoint and I hope it's faster",
    "start": "907920",
    "end": "913040"
  },
  {
    "text": "it should be faster um is actually faster than doing a cold start So what's",
    "start": "913040",
    "end": "918160"
  },
  {
    "text": "currently um happening here is um this is this is starting the the VLM It's",
    "start": "918160",
    "end": "925440"
  },
  {
    "text": "running on an Nvidia GPU an A10 on an Amazon EC2 something Um it's a it's a",
    "start": "925440",
    "end": "933199"
  },
  {
    "text": "rail 9 based system and it's it takes some time to start It",
    "start": "933199",
    "end": "940480"
  },
  {
    "text": "should should be around 40 seconds and then it should be ready to go Yeah So um now the LM is running We can see it here",
    "start": "940480",
    "end": "948680"
  },
  {
    "text": "Oh where's my demo here Nvidia SMI So we see it's it's using",
    "start": "948680",
    "end": "954560"
  },
  {
    "text": "around 4 GB of memory on the on the GPU It's it's a Python process and I can talk to my LLM using um using",
    "start": "954560",
    "end": "962519"
  },
  {
    "text": "curl and it basically um I can just uh give it a sentence Cre is a Linux tool",
    "start": "962519",
    "end": "968880"
  },
  {
    "text": "So Creo is the tool with just a checkpoint restore below everything So I'm telling it please finish the",
    "start": "968880",
    "end": "974000"
  },
  {
    "text": "sentence create is a Linux tool and the LLM says you should definitely try it out I I agree and then it says a couple",
    "start": "974000",
    "end": "982240"
  },
  {
    "text": "of things So um we have this um container running um in Kubernetes on",
    "start": "982240",
    "end": "988320"
  },
  {
    "text": "our uh on our A10 GPU and now I have a script which does the the checkpointing",
    "start": "988320",
    "end": "993920"
  },
  {
    "text": "The checkpointing takes about one minute to write all the data um to the local disk The um checkpointing interface in",
    "start": "993920",
    "end": "1000880"
  },
  {
    "text": "Kubernetes is currently a cubelet only API That's why the command line is a bit",
    "start": "1000880",
    "end": "1005920"
  },
  {
    "text": "more complicated than just writing cubectl something What the script will also do it will checkpoint",
    "start": "1005920",
    "end": "1013680"
  },
  {
    "text": "um the container from the host and GPU and then it will also transfer it to the second host Um what's happening now here",
    "start": "1013680",
    "end": "1020720"
  },
  {
    "text": "in the background is so I talk to to the cublet The cublet talks to to cryo the container engine The container engine",
    "start": "1020720",
    "end": "1027600"
  },
  {
    "text": "talks to run Runci talks to Creu the tool doing the checkpoint restore tool And run as Rodstein mentioned then talks",
    "start": "1027600",
    "end": "1034720"
  },
  {
    "text": "to the Cuda checkpoint tool The Cuda checkpoint tool will write all will stop um all running kernels on on your GPU",
    "start": "1034720",
    "end": "1041760"
  },
  {
    "text": "will write all the information to main memory Then Creo will take all the information from main main memory make a",
    "start": "1041760",
    "end": "1049160"
  },
  {
    "text": "stateful copy of your container and then cryo will the container engine will add",
    "start": "1049160",
    "end": "1054880"
  },
  {
    "text": "additional information about meta data and about file system changes and all this information is then written to disk",
    "start": "1054880",
    "end": "1061120"
  },
  {
    "text": "and it takes about 1 minute and 4 seconds And now this checkpoint image which is quite large at this point",
    "start": "1061120",
    "end": "1067520"
  },
  {
    "text": "around 11 GB from the GPU and an CPU side is now transferred to the",
    "start": "1067520",
    "end": "1073200"
  },
  {
    "text": "destination host Currently in Kubernetes um this is um independent if you use",
    "start": "1073200",
    "end": "1079840"
  },
  {
    "text": "cryo or containerd they both create the same file format It's a tar archive",
    "start": "1079840",
    "end": "1085200"
  },
  {
    "text": "which contains all the information about your running process is this if this is running with GPU or without GPU doesn't",
    "start": "1085200",
    "end": "1092640"
  },
  {
    "text": "make any any difference at this point So now that the the checkpoint image has",
    "start": "1092640",
    "end": "1097760"
  },
  {
    "text": "been transferred to the destination system I have to convert this to a to an OCI image",
    "start": "1097760",
    "end": "1106799"
  },
  {
    "text": "This is another script This is basically running builder in the background which takes the OCI image which takes the",
    "start": "1106799",
    "end": "1113039"
  },
  {
    "text": "checkpoint archive and copies it into uh into an o which takes the tar archive",
    "start": "1113039",
    "end": "1119919"
  },
  {
    "text": "and copies it into an OCI image This will also take a couple of minutes So I will switch back to the slides and talk",
    "start": "1119919",
    "end": "1126559"
  },
  {
    "text": "um go back to the talk So um the interesting thing is if you look back in the history of checkpoint restore in",
    "start": "1126559",
    "end": "1132720"
  },
  {
    "text": "Kubernetes there's actually a ticket open since 2015 which talks about it's a very high level discussion about",
    "start": "1132720",
    "end": "1139559"
  },
  {
    "text": "migrating workloads migrating pots containers it doesn't go into many",
    "start": "1139559",
    "end": "1145360"
  },
  {
    "text": "details but the interesting thing from my point of view is that um container",
    "start": "1145360",
    "end": "1150400"
  },
  {
    "text": "migration has been discussed for over 10 years now in in Kubernetes and in 2020 we started",
    "start": "1150400",
    "end": "1158000"
  },
  {
    "text": "working on this and we um put it under the story of forensic container checkpointing There were a couple of",
    "start": "1158000",
    "end": "1164080"
  },
  {
    "text": "reasons for doing it this way Forensic container checkpointing the idea is we have a container that's running and you",
    "start": "1164080",
    "end": "1170720"
  },
  {
    "text": "think it might be attacked or not and what you usually did or what tools today",
    "start": "1170720",
    "end": "1175760"
  },
  {
    "text": "do is they just kill the container and hope that your attacker can no longer",
    "start": "1175760",
    "end": "1180880"
  },
  {
    "text": "access the system With forensic container check checkpointing the idea is you can take a snapshot or a",
    "start": "1180880",
    "end": "1187919"
  },
  {
    "text": "checkpoint of your container without a container ever knowing that it was checkpointed and without knowing that",
    "start": "1187919",
    "end": "1195120"
  },
  {
    "text": "your container was ever checkpointed and then you can keep the container running and then you can do an off offline uh",
    "start": "1195120",
    "end": "1202480"
  },
  {
    "text": "sandbox analysis of your container If you do just just want to scan through all the memory pages there's an option",
    "start": "1202480",
    "end": "1208320"
  },
  {
    "text": "or you can um you can in um you can restart a container and see what it's",
    "start": "1208320",
    "end": "1213360"
  },
  {
    "text": "doing if it's doing something malicious or not And and the reason we did it this",
    "start": "1213360",
    "end": "1218640"
  },
  {
    "text": "way forensic container checkpointing in Kubernetes is that the impact on the source code of Kubernetes was minimal if",
    "start": "1218640",
    "end": "1225039"
  },
  {
    "text": "we just do the for if we just just do the checkpointing part This is also why",
    "start": "1225039",
    "end": "1230400"
  },
  {
    "text": "we today only have a a cublet only API just to to minimize the code changes and",
    "start": "1230400",
    "end": "1236559"
  },
  {
    "text": "see if this is a good idea to have in Kubernetes In 2022 um Kubernetes with",
    "start": "1236559",
    "end": "1242159"
  },
  {
    "text": "Kubernetes 125 the feature was released as an alpha feature forensic container checkpointing and since then you can use",
    "start": "1242159",
    "end": "1248720"
  },
  {
    "text": "it In the beginning in it was a cryo only feature and um over the couple last",
    "start": "1248720",
    "end": "1256720"
  },
  {
    "text": "two years we worked with containerd to get it also into into container D Uh",
    "start": "1256720",
    "end": "1262000"
  },
  {
    "text": "with Kubernetes 130 we switched the the the label the flag of the feature from",
    "start": "1262000",
    "end": "1267600"
  },
  {
    "text": "alpha to beta The code changes to Kubernetes at this point in time were minimal it was only about",
    "start": "1267600",
    "end": "1273640"
  },
  {
    "text": "um basically changing the label from alpha to beta and but at the same time",
    "start": "1273640",
    "end": "1278720"
  },
  {
    "text": "we also uh were able to get the changes into um container D so that container D",
    "start": "1278720",
    "end": "1285440"
  },
  {
    "text": "also can do forensic container checkpointing just like um just like cryo does the interesting thing is I'm",
    "start": "1285440",
    "end": "1292480"
  },
  {
    "text": "I'm I'm presenting here and we're talking about also restoring containers the thing what we did or which we",
    "start": "1292480",
    "end": "1298559"
  },
  {
    "text": "discovered in the process of implementing this into in the container engine is that we are able to restore a",
    "start": "1298559",
    "end": "1305840"
  },
  {
    "text": "container without Kubernetes knowing that a container is restored So when you start a container in Kubernetes",
    "start": "1305840",
    "end": "1311120"
  },
  {
    "text": "Kubernetes does a call to the container engine container create and container start And what we do in in cryo and",
    "start": "1311120",
    "end": "1318080"
  },
  {
    "text": "containerd today we hook into container start and container create and start and",
    "start": "1318080",
    "end": "1323280"
  },
  {
    "text": "see if the image we passed is a is a checkpoint image and if it's a checkpoint image then we will restore",
    "start": "1323280",
    "end": "1329039"
  },
  {
    "text": "the container So from from Kubernetes point of view it's a new container a new part but it's actually a restored",
    "start": "1329039",
    "end": "1335760"
  },
  {
    "text": "container This way we today can implement um container migration with or",
    "start": "1335760",
    "end": "1341679"
  },
  {
    "text": "without GPUs in in in Kubernetes Let's go back to to our our demo So the image",
    "start": "1341679",
    "end": "1348799"
  },
  {
    "text": "has been converted to an OCI image and now I have um I can um start this",
    "start": "1348799",
    "end": "1356559"
  },
  {
    "text": "container So the the YAML file looks almost the same I'm putting another",
    "start": "1356559",
    "end": "1362000"
  },
  {
    "text": "script around it to see how long it takes to start And so what now is happening is now the c the cube will talk to cryote",
    "start": "1362000",
    "end": "1370720"
  },
  {
    "text": "please create this container Cryo will download the image from the registry See",
    "start": "1370720",
    "end": "1376080"
  },
  {
    "text": "okay we have information that this is a checkpoint image we will unpack it and tell run and Creo the tools below and",
    "start": "1376080",
    "end": "1383039"
  },
  {
    "text": "CUDA checkpoint please restore the container and do not create a new one and this way we are able to um do a",
    "start": "1383039",
    "end": "1390720"
  },
  {
    "text": "stateful migration of the container um without losing any information and we",
    "start": "1390720",
    "end": "1396159"
  },
  {
    "text": "see so so counter six is a one of the examples that it's um at the same point",
    "start": "1396159",
    "end": "1402080"
  },
  {
    "text": "that it was here last time so if we talk to it here again we see counter five counter six and on on the on on on the",
    "start": "1402080",
    "end": "1409840"
  },
  {
    "text": "other host we see also counter six counter seven Oh no this is the wrong command Um so this is the right command",
    "start": "1409840",
    "end": "1416000"
  },
  {
    "text": "So we see um it it continues from the same point It was checkpointed um but",
    "start": "1416000",
    "end": "1421039"
  },
  {
    "text": "just on another host and now we have two GPUs programs running from the same",
    "start": "1421039",
    "end": "1426159"
  },
  {
    "text": "initialization um on one host on on two hosts And it it",
    "start": "1426159",
    "end": "1431679"
  },
  {
    "text": "took a shorter time It only took like 25 seconds instead of 40 seconds to start up So even the startup was faster going",
    "start": "1431679",
    "end": "1438480"
  },
  {
    "text": "from a pre-initialized um in GPU container So back to the slides the the",
    "start": "1438480",
    "end": "1445360"
  },
  {
    "text": "next steps we are thinking about and we we also discussed this with I think sik",
    "start": "1445360",
    "end": "1451039"
  },
  {
    "text": "node Yeah sik node was it can we declare the the",
    "start": "1451039",
    "end": "1456120"
  },
  {
    "text": "checkpointing can we declare the checkpointing API as a stable in the cube So the basically finish the",
    "start": "1456120",
    "end": "1462480"
  },
  {
    "text": "forensic container checkpointing um feature move it from beta to stable GA",
    "start": "1462480",
    "end": "1469679"
  },
  {
    "text": "and if this at some point will happen maybe we can also think about integrating in in cubectl we opened a",
    "start": "1469679",
    "end": "1477279"
  },
  {
    "text": "first Kubernetes enhancement proposal to extend the cublet API endpoint for",
    "start": "1477279",
    "end": "1482720"
  },
  {
    "text": "checkpointing to the API server and and once it's in the API server we can also",
    "start": "1482720",
    "end": "1488320"
  },
  {
    "text": "think about integrating in in it in cubectl This is an an ongoing process",
    "start": "1488320",
    "end": "1493840"
  },
  {
    "text": "currently and it will probably take some time but we're slowly trying to make it",
    "start": "1493840",
    "end": "1500080"
  },
  {
    "text": "from the lower levels of Kubernetes to the upper levels um of of cubectl so that it's easier to use than what what",
    "start": "1500080",
    "end": "1506960"
  },
  {
    "text": "I've currently shown you um in my demo uh reaching out directly to uh to the",
    "start": "1506960",
    "end": "1512720"
  },
  {
    "text": "cubelet API Another thing I just um saw last Friday there's a company Weveroft",
    "start": "1512720",
    "end": "1519679"
  },
  {
    "text": "they released a tool for um for Kubernetes um it's a it's a web",
    "start": "1519679",
    "end": "1524799"
  },
  {
    "text": "interface which you can use to um checkpoint and migrate container I have not used it myself it was just released",
    "start": "1524799",
    "end": "1531279"
  },
  {
    "text": "on Friday uh but I I was very happy to see that so that um seems like people",
    "start": "1531279",
    "end": "1537520"
  },
  {
    "text": "are not just us three are interested in a topic there are many more people um",
    "start": "1537520",
    "end": "1542960"
  },
  {
    "text": "looking into currently So with this we are at the end of our presentation So we",
    "start": "1542960",
    "end": "1549600"
  },
  {
    "text": "mentioned that we are able to fully transparently checkpoint GPU applications Um it works",
    "start": "1549600",
    "end": "1557200"
  },
  {
    "text": "with AMD Nvidia GPUs and it's out of the box integrated in Kubernetes today Um",
    "start": "1557200",
    "end": "1562640"
  },
  {
    "text": "our demos have used checkouts from I don't know three four weeks ago And with this uh we're at the end of the",
    "start": "1562640",
    "end": "1569120"
  },
  {
    "text": "presentation Thank you and happy to answer any questions you have",
    "start": "1569120",
    "end": "1575880"
  },
  {
    "text": "I have one one question on the uh so this is transparent right so the",
    "start": "1587679",
    "end": "1593120"
  },
  {
    "text": "application is not supposed to know it's being checkpoint and restored how does it uh are there any edge cases to that",
    "start": "1593120",
    "end": "1600480"
  },
  {
    "text": "so for example how does it handle the fact that uh all the network connections are broken and then it comes up with a",
    "start": "1600480",
    "end": "1606480"
  },
  {
    "text": "different IP address and stuff like that yeah so um this is one of the most asked",
    "start": "1606480",
    "end": "1611919"
  },
  {
    "text": "questions uh everybody has and so the cool the tool tool below Uh Cre handles",
    "start": "1611919",
    "end": "1617760"
  },
  {
    "text": "TCP connections So you can migrate a TCP connection from one host to another host The thing is you need to have the same",
    "start": "1617760",
    "end": "1623520"
  },
  {
    "text": "IP address which is pretty unlikely in a in a pot We we are able to to recreate",
    "start": "1623520",
    "end": "1629279"
  },
  {
    "text": "it in the demos by by editing CNI files or you can edit",
    "start": "1629279",
    "end": "1635200"
  },
  {
    "text": "the the checkpoint information to have the IP address of of the new uh port Um",
    "start": "1635200",
    "end": "1640880"
  },
  {
    "text": "but there's also the option what what we use in our demos there's an option we just say all open connections we say uh",
    "start": "1640880",
    "end": "1648240"
  },
  {
    "text": "are closed and then the expectation is of course that the application handles automatic network",
    "start": "1648240",
    "end": "1655159"
  },
  {
    "text": "reconnects So um one of the problems with TCP connections is that um",
    "start": "1655159",
    "end": "1660240"
  },
  {
    "text": "essentially with crew we have a locking mechanism that has to drop all incoming",
    "start": "1660240",
    "end": "1665919"
  },
  {
    "text": "packets from clients and this prevents sending the tier set bucket to the client Um but in Kubernetes because the",
    "start": "1665919",
    "end": "1673679"
  },
  {
    "text": "network name space is allocated to pods this mechanism it doesn't work essentially um it Creo cannot apply this",
    "start": "1673679",
    "end": "1682000"
  },
  {
    "text": "mechanism and we checkpoint restore within the name space and as Adrian mentioned there is Creo provides a TP",
    "start": "1682000",
    "end": "1688320"
  },
  {
    "text": "close option which would can be added to a configuration file that essentially closes OTP connection and then",
    "start": "1688320",
    "end": "1694880"
  },
  {
    "text": "essentially reconnects after restore and in general it depends on the use case So for live migration it's important to",
    "start": "1694880",
    "end": "1701760"
  },
  {
    "text": "checkpoint restore TP connections but for fault tolerance where essentially you can restore the checkpoint a week",
    "start": "1701760",
    "end": "1708080"
  },
  {
    "text": "later or something like this then it's not that uh essentially we use the TP",
    "start": "1708080",
    "end": "1713120"
  },
  {
    "text": "close mechanism Okay thank you",
    "start": "1713120",
    "end": "1718600"
  },
  {
    "text": "Do you see any kind of fundamental blocking points to get actual live migration the way we are familiar with",
    "start": "1719600",
    "end": "1725440"
  },
  {
    "text": "with VMs transferring between nodes so at this point it's from my point of",
    "start": "1725440",
    "end": "1733200"
  },
  {
    "text": "view it's not a technical problem It's finding the right way to integrate it in Kubernetes It's a it's kind of a feature",
    "start": "1733200",
    "end": "1741520"
  },
  {
    "text": "that breaks a lot of assumptions because containers are stateless and things like this So I think that's that's the hard",
    "start": "1741520",
    "end": "1747840"
  },
  {
    "text": "part finding the right way how to integrate it in in in Kubernetes without breaking any I don't know infrastructure",
    "start": "1747840",
    "end": "1755279"
  },
  {
    "text": "assumptions from from from something I don't know that's yeah so one of the",
    "start": "1755279",
    "end": "1760559"
  },
  {
    "text": "problems with GPUs I guess for life migration is that you need to have the same GPU on both sides and you need to",
    "start": "1760559",
    "end": "1766480"
  },
  {
    "text": "have the same number of GPUs so this is something that could be improved in the future but um in general there are",
    "start": "1766480",
    "end": "1772799"
  },
  {
    "text": "certain limitations you need to have the same libraries And yeah there are certain um requirements for life",
    "start": "1772799",
    "end": "1779200"
  },
  {
    "text": "houndation to work Y but I think those are the same with",
    "start": "1779200",
    "end": "1784480"
  },
  {
    "text": "with VMs If you change your CPU or your GPU then it's probably not going to work",
    "start": "1784480",
    "end": "1792120"
  },
  {
    "text": "Uh hi Um so follow up to the first question that you got Can this be used",
    "start": "1795679",
    "end": "1801279"
  },
  {
    "text": "for uh databases like say you have a MySQL database running or a radius cache",
    "start": "1801279",
    "end": "1808080"
  },
  {
    "text": "running uh how effective would this be for those",
    "start": "1808080",
    "end": "1813480"
  },
  {
    "text": "so I we checkpointed both We have the Microsoft SQL database was checkpointed",
    "start": "1813480",
    "end": "1819440"
  },
  {
    "text": "a couple of years ago and migrated as well as as Reddis is is an example we",
    "start": "1819440",
    "end": "1824640"
  },
  {
    "text": "also often use Yes it works Um the I think the main problem is uh like the",
    "start": "1824640",
    "end": "1831440"
  },
  {
    "text": "first question do these tools handle network reconnections automatically so I",
    "start": "1831440",
    "end": "1836640"
  },
  {
    "text": "guess this would be something uh the tools need to handle to to make it work",
    "start": "1836640",
    "end": "1843200"
  },
  {
    "text": "more easily in in any environment If they do that then I would say sure it works",
    "start": "1843200",
    "end": "1849840"
  },
  {
    "text": "And in terms of performing the operation itself you almost need the tech",
    "start": "1849840",
    "end": "1855840"
  },
  {
    "text": "checkpoint in both places Is there a way to sync the checkpoints in both places",
    "start": "1855840",
    "end": "1861279"
  },
  {
    "text": "at once uh I I don't know So we we need to transfer it just we don't need it in",
    "start": "1861279",
    "end": "1867440"
  },
  {
    "text": "both places We need it on the system where we want to restore it Ah so you mean it has to be on the same node",
    "start": "1867440",
    "end": "1874720"
  },
  {
    "text": "What about a multi multiode as in does it support pushing to object storage or NFS yes So so the way how we do",
    "start": "1874720",
    "end": "1882159"
  },
  {
    "text": "migration is we convert the checkpoint image to an to an OCI image and push it to a registry and then we can use it",
    "start": "1882159",
    "end": "1888320"
  },
  {
    "text": "from from any any any node any any cublet The thing is this image was",
    "start": "1888320",
    "end": "1894799"
  },
  {
    "text": "rather big So if I would have converted it on the original system pushed it to a",
    "start": "1894799",
    "end": "1899880"
  },
  {
    "text": "registry and then downloaded it on the other machine then it would have just taken much longer because I have to the",
    "start": "1899880",
    "end": "1906880"
  },
  {
    "text": "registry is just slower than using our sync from one node to another node",
    "start": "1906880",
    "end": "1912640"
  }
]