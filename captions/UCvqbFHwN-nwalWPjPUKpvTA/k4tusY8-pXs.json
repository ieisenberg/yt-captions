[
  {
    "text": "hi everyone uh thanks for uh spending time with me this afternoon and my apologies",
    "start": "440",
    "end": "7319"
  },
  {
    "text": "for having you squeeze into this tiny room but if I may ask uh if you can come",
    "start": "7319",
    "end": "12440"
  },
  {
    "text": "even closer you'll be able to see this the code Snippets that I'm going to show later so if you want to do that you can",
    "start": "12440",
    "end": "19640"
  },
  {
    "text": "move forward um so let me uh start by talking about myself uh I atag I'm the",
    "start": "19640",
    "end": "26160"
  },
  {
    "text": "CTO of signal. a sgnl and we're into",
    "start": "26160",
    "end": "31199"
  },
  {
    "text": "continuous authorization or continuous access management and if you would like to know what that is uh you can all go",
    "start": "31199",
    "end": "36960"
  },
  {
    "text": "to our website after my talk um and some of you might know me",
    "start": "36960",
    "end": "42160"
  },
  {
    "text": "from my work on standards called The Continuous access evaluation protocol something I started when I was at Google",
    "start": "42160",
    "end": "48160"
  },
  {
    "text": "and has now grown into this uh pretty um sort of big movement but this uh this",
    "start": "48160",
    "end": "53800"
  },
  {
    "text": "presentation is about another exciting standard that I'm working on in the ietf called transaction tokens",
    "start": "53800",
    "end": "60519"
  },
  {
    "text": "and it helps you uh secure your identity and authorization in microservices so",
    "start": "60519",
    "end": "65799"
  },
  {
    "text": "let's get started so um why do we need this right so uh as you know like um any uh modern",
    "start": "65799",
    "end": "74360"
  },
  {
    "text": "architecture you know external calls to an uh API or an application will result",
    "start": "74360",
    "end": "79799"
  },
  {
    "text": "in a lot of calls internally to various microservices right and um the in this",
    "start": "79799",
    "end": "86240"
  },
  {
    "text": "diagram that external API microservice encapsulates any like Network infrastructure that you might have right",
    "start": "86240",
    "end": "91840"
  },
  {
    "text": "so um but the important thing is that these calls are shortlived right they they don't exceed a few minutes of",
    "start": "91840",
    "end": "98720"
  },
  {
    "text": "execution at any given point of time and even if you have sort of map reduce or some large processes running they will",
    "start": "98720",
    "end": "106000"
  },
  {
    "text": "finally result into calls that last a few uh minutes or less uh individually",
    "start": "106000",
    "end": "111960"
  },
  {
    "text": "right so you can think of these internal calls that propagate through your uh internal Services as always being",
    "start": "111960",
    "end": "118840"
  },
  {
    "text": "shortlived now um unfortunately there are a lot of attacks that are possible",
    "start": "118840",
    "end": "124320"
  },
  {
    "text": "where a VPC might be compromised and as you might know some of the recent uh pretty um damaging attacks have been as",
    "start": "124320",
    "end": "131959"
  },
  {
    "text": "a result of compromise of privileged users um that you know that were uh compromising the vpcs of companies right",
    "start": "131959",
    "end": "140040"
  },
  {
    "text": "and this can result in user impersonation or you know arbitrary code and execution right and so extremely",
    "start": "140040",
    "end": "147319"
  },
  {
    "text": "damaging uh to any Enterprise that needs so obviously we need to do more about",
    "start": "147319",
    "end": "152599"
  },
  {
    "text": "security than what we have so today most commonly people use implicit trust if",
    "start": "152599",
    "end": "158000"
  },
  {
    "text": "you're in the VPC you can just call any service and um you know it doesn't matter um because you're in the VPC",
    "start": "158000",
    "end": "164959"
  },
  {
    "text": "you're fine you're trusted which is not great um you know there's something that has come up recently which is you know",
    "start": "164959",
    "end": "171959"
  },
  {
    "text": "service to service trust where you have some kind of a trust infrastructure and I'll get into that uh how it works and",
    "start": "171959",
    "end": "178480"
  },
  {
    "text": "all that and but you have established trust between a service and another",
    "start": "178480",
    "end": "183519"
  },
  {
    "text": "service and make sure that only those services that are configured properly can be called can can call other",
    "start": "183519",
    "end": "189040"
  },
  {
    "text": "services right now what we want to get to is user trust this means that you",
    "start": "189040",
    "end": "194120"
  },
  {
    "text": "have the service to service trust but you also can assure the identity of the user that is calling so you cannot let's",
    "start": "194120",
    "end": "200440"
  },
  {
    "text": "say you know Joe is calling um uh a service externally the internal service",
    "start": "200440",
    "end": "206440"
  },
  {
    "text": "cannot change that to say oh instead of Joe it's like at who's calling uh the other service right you cannot do that",
    "start": "206440",
    "end": "213519"
  },
  {
    "text": "and that's that's what I mean by user trust and then finally you get to assured context which means that if Joe",
    "start": "213519",
    "end": "219760"
  },
  {
    "text": "is making a call externally and saying I want to buy 100 shares of Microsoft the internal service cannot say it's Joe but",
    "start": "219760",
    "end": "226640"
  },
  {
    "text": "he actually wants to sell a thousand shares of Google you cannot do that right when when you have the assured con",
    "start": "226640",
    "end": "231879"
  },
  {
    "text": "context and so as you can see the the the you know the level of uh security",
    "start": "231879",
    "end": "237879"
  },
  {
    "text": "that you get uh increases as as you get down the scale now practically speaking",
    "start": "237879",
    "end": "243959"
  },
  {
    "text": "most of us are are over here right now you know say for a few companies that have in implemented their own ways of",
    "start": "243959",
    "end": "250360"
  },
  {
    "text": "doing everything uh but as a as an industry we need to be down there in",
    "start": "250360",
    "end": "256680"
  },
  {
    "text": "order to um be secure right in order to get secure outcomes uh and for people to",
    "start": "256680",
    "end": "262720"
  },
  {
    "text": "be able to trust what we doing right and so how do you get there right so before",
    "start": "262720",
    "end": "267919"
  },
  {
    "text": "we get there let's talk about how how a microservice infrastructure can be can be attacked right now the most common",
    "start": "267919",
    "end": "275600"
  },
  {
    "text": "thing is the privileged user compromise and like I was saying this is something that has happened very frequently recently in a very highly publicized",
    "start": "275600",
    "end": "282759"
  },
  {
    "text": "attacks and it can be done through credential compromise or through session hijacking where somebody just steals the",
    "start": "282759",
    "end": "289080"
  },
  {
    "text": "token after you've done all your strong authentication and all that and so it doesn't matter that you've implemented",
    "start": "289080",
    "end": "294479"
  },
  {
    "text": "the best you know pass keys or whatever security mechanism that you want but but",
    "start": "294479",
    "end": "299960"
  },
  {
    "text": "if the session gets hijacked after that then you know you're kind of lost after that um so the what the attacker can do",
    "start": "299960",
    "end": "306039"
  },
  {
    "text": "is they can make spurious calls they can you know uh uh insert their own Services uh into the",
    "start": "306039",
    "end": "311680"
  },
  {
    "text": "VPC and it's effectively like remote code execution in the cloud right and so",
    "start": "311680",
    "end": "316720"
  },
  {
    "text": "terrible terrible uh compromise the other one is uh you know there may be malicious insiders and they",
    "start": "316720",
    "end": "323319"
  },
  {
    "text": "may have different motivations um you may want you may have people trying to benefit financially on the side while",
    "start": "323319",
    "end": "330360"
  },
  {
    "text": "doing their job or you may have people who are disgruntled employees and want to compromise something about their",
    "start": "330360",
    "end": "336240"
  },
  {
    "text": "employers uh but there is also this category about you know curious insiders like if I have sensitive data about my",
    "start": "336240",
    "end": "342840"
  },
  {
    "text": "customers and a customer service rep wants to say Hey you know let me see where Taylor Swift swift lives because",
    "start": "342840",
    "end": "349080"
  },
  {
    "text": "she's one of her customers you shouldn't allow that kind of stuff to happen because that is a huge liability for the",
    "start": "349080",
    "end": "354639"
  },
  {
    "text": "company right and so you want to protect against a malicious Insider attack as",
    "start": "354639",
    "end": "359680"
  },
  {
    "text": "well right and then finally you also have the software Bild of materials kind of you know or the software supply chain",
    "start": "359680",
    "end": "365759"
  },
  {
    "text": "kind of compromise right where um you know you think your service is secure",
    "start": "365759",
    "end": "371120"
  },
  {
    "text": "but in your cicd process or something there's some code that gets in and that calls home and then sort of brings down",
    "start": "371120",
    "end": "377400"
  },
  {
    "text": "code or or is able to like modify the behavior of the service that is running right and so to protect against these",
    "start": "377400",
    "end": "384160"
  },
  {
    "text": "and and other attacks that you know maybe uh I haven't included in this presentation um let's talk about how to",
    "start": "384160",
    "end": "391160"
  },
  {
    "text": "do that right and so the the before we get into the specifics let's just say",
    "start": "391160",
    "end": "397599"
  },
  {
    "text": "that you know trust is fundamental to all this right and trust is established using I mean you know you get privacy",
    "start": "397599",
    "end": "404599"
  },
  {
    "text": "security Integrity through all these pki and you know uh finally the you know",
    "start": "404599",
    "end": "410080"
  },
  {
    "text": "certificates and all that but the trust establishment is is the fundamental thing in all this right and how is that",
    "start": "410080",
    "end": "417120"
  },
  {
    "text": "done it's done using two things it's using either you know transport level security like TLS or it's done using",
    "start": "417120",
    "end": "424879"
  },
  {
    "text": "digital signatures right and those are the you know most common ways of doing it maybe there are others but for",
    "start": "424879",
    "end": "430599"
  },
  {
    "text": "practical purposes this is this is what it is um now you need in order to verify",
    "start": "430599",
    "end": "436560"
  },
  {
    "text": "signatures in order to verify certificates you need to know the public keys right and then you have the public",
    "start": "436560",
    "end": "441879"
  },
  {
    "text": "key infrastructure like you know public Casa and all that but also like you have mechanisms of Distributing public Keys",
    "start": "441879",
    "end": "448560"
  },
  {
    "text": "within your VPC key like if you're using spiffy or Spire you'll have a way of Distributing these keys inside your",
    "start": "448560",
    "end": "455000"
  },
  {
    "text": "Enterprise but just be just be aware that that is a key place to compromise",
    "start": "455000",
    "end": "460280"
  },
  {
    "text": "because if somebody's able to change the roots in your uh trust domain then all all bets are off because that is the",
    "start": "460280",
    "end": "466599"
  },
  {
    "text": "basis of the security that you're are having in your in your VPC or in your",
    "start": "466599",
    "end": "472080"
  },
  {
    "text": "infrastructure now I talked about the four models I'm going to go a little bit into the details of what those four",
    "start": "472080",
    "end": "478039"
  },
  {
    "text": "models are uh so the first thing is the implicit trust in in microservices right",
    "start": "478039",
    "end": "483159"
  },
  {
    "text": "so this is just you've deployed stuff into your um uh infrastructure into your",
    "start": "483159",
    "end": "488919"
  },
  {
    "text": "VPC just by way of their existence in the VPC you just trust that anybody calling my micros service it's fine",
    "start": "488919",
    "end": "495919"
  },
  {
    "text": "because they're inside the VPC and I I'm not going to check anything about the about the caller and I'm just going to",
    "start": "495919",
    "end": "502360"
  },
  {
    "text": "respond with anything so this is uh this is catastrophic when when the VPC gets",
    "start": "502360",
    "end": "507520"
  },
  {
    "text": "compromised and you you'll see in if you analyze some of the attacks you know this has happened and unfortunately",
    "start": "507520",
    "end": "514518"
  },
  {
    "text": "this is uh this is a problem today um now the next step is you identify the",
    "start": "514519",
    "end": "521719"
  },
  {
    "text": "service that is calling so if there are two services or maybe five Services you've configured each Service uh in a",
    "start": "521719",
    "end": "528399"
  },
  {
    "text": "way that says this service may only be called by these other two Services right and when those service Services call",
    "start": "528399",
    "end": "535920"
  },
  {
    "text": "using spiffy or something you identify that this is the service calling me and only trust those calls and you don't let",
    "start": "535920",
    "end": "543000"
  },
  {
    "text": "other services call you right and as a result uh you know you get um better",
    "start": "543000",
    "end": "548959"
  },
  {
    "text": "security because you an attacker can't just inject their own uh service into the VPC and start calling or if a um you",
    "start": "548959",
    "end": "557160"
  },
  {
    "text": "know relatively unused Services compromised that's okay because it's not configured to call anything and and the",
    "start": "557160",
    "end": "562519"
  },
  {
    "text": "damage can be mitigated right but you know you still have a lot of vectors that are uh still unprotected right now",
    "start": "562519",
    "end": "571560"
  },
  {
    "text": "uh like I said you know you see that little green logo over there that's the spiffy logo and you know if you haven't",
    "start": "571560",
    "end": "578720"
  },
  {
    "text": "looked into spiffy I would highly recommend you to look into spiffy uh it gives you a great way to do service to",
    "start": "578720",
    "end": "584600"
  },
  {
    "text": "service trust there's actually a little booth in the um on the show floor uh",
    "start": "584600",
    "end": "589920"
  },
  {
    "text": "about spiffy you can go over there after the talk and and talk to those guys um and it's I think the most common way in",
    "start": "589920",
    "end": "597040"
  },
  {
    "text": "which people are uh doing service to service service trust right now and so let's talk about you know where we want",
    "start": "597040",
    "end": "603399"
  },
  {
    "text": "to go right we want to go to user trust and how what does that mean right it means that um you can be assured not",
    "start": "603399",
    "end": "611880"
  },
  {
    "text": "just about the service that is calling but if let's say an external user say Joe is calling then you will know at",
    "start": "611880",
    "end": "619839"
  },
  {
    "text": "every service in the call chain that it is Joe that is making the call right that cannot be changed and how to do",
    "start": "619839",
    "end": "626200"
  },
  {
    "text": "that we'll get into but that's the meaning of user trust right so it mitigates a lot of the attacks because",
    "start": "626200",
    "end": "632160"
  },
  {
    "text": "now you have a big limitation on um you know you cannot do user impersonation in",
    "start": "632160",
    "end": "637880"
  },
  {
    "text": "in the in the call chain even if you attack the VPC but at the same time you can still uh change the parameters right",
    "start": "637880",
    "end": "645800"
  },
  {
    "text": "and the best security that you can get is uh you know the assured context what that means is that it's not just that",
    "start": "645800",
    "end": "652399"
  },
  {
    "text": "you're assured of this is the user is calling you're also assured that this is the user and this is what they uh are",
    "start": "652399",
    "end": "659839"
  },
  {
    "text": "expressing that they want to do right and so if it's Joe calling and saying I want to buy 100 shares of Microsoft down",
    "start": "659839",
    "end": "667320"
  },
  {
    "text": "the call chain you will know that yes that that was indeed the way in which that initial call was made right and so",
    "start": "667320",
    "end": "673839"
  },
  {
    "text": "there's no way of changing these things um and so how do you get there right so we are introducing this concept",
    "start": "673839",
    "end": "682120"
  },
  {
    "text": "called trats transaction tokens this is a um currently an individual draft in",
    "start": "682120",
    "end": "688480"
  },
  {
    "text": "the I f o o working group it's being uh",
    "start": "688480",
    "end": "693760"
  },
  {
    "text": "you know I couldn't go to that uh meeting of ietf because I'm attending here and speaking here but it is",
    "start": "693760",
    "end": "699680"
  },
  {
    "text": "actually being proposed as an uh you know proposed to be adopted as a working group draft soon so hopefully in a few",
    "start": "699680",
    "end": "706480"
  },
  {
    "text": "months time uh we should see an RFC come out of all this and so what are they",
    "start": "706480",
    "end": "711760"
  },
  {
    "text": "they're basically just shortlived jots that assure the call context and the user identity right and so I've told you",
    "start": "711760",
    "end": "719519"
  },
  {
    "text": "what tracks is and you know I think we can end the presentation here but let's get into a little bit of details right",
    "start": "719519",
    "end": "726399"
  },
  {
    "text": "so so like I said it's a shortlived jot um and it uniquely identifies a specific",
    "start": "726399",
    "end": "733519"
  },
  {
    "text": "call chain right so when when an external call comes in it sets that context and it's able to identify down",
    "start": "733519",
    "end": "739920"
  },
  {
    "text": "the chain that this is this is what the user was trying to do this is when they call you know all those details and I'll",
    "start": "739920",
    "end": "745880"
  },
  {
    "text": "get into what all those things are but it it assures the user user identity uh it assures the it assigns a transaction",
    "start": "745880",
    "end": "752680"
  },
  {
    "text": "identifier so that the whole call chain sort of hangs off of that One external transaction and it has the originator",
    "start": "752680",
    "end": "759560"
  },
  {
    "text": "information like which was the endpoint that was called you know what was the user IP address that was called from and",
    "start": "759560",
    "end": "765000"
  },
  {
    "text": "all those things and um you know what is the purpose of the call there's something and I'll get into what the",
    "start": "765000",
    "end": "771079"
  },
  {
    "text": "purpose is and then the transaction context like you know what is the user actually trying to do what are the",
    "start": "771079",
    "end": "776279"
  },
  {
    "text": "parameters um you know things like that may not be in the call uh external call",
    "start": "776279",
    "end": "781760"
  },
  {
    "text": "but you can have some computed values like what is the Assurance level of the user and things like that and so uh all",
    "start": "781760",
    "end": "789519"
  },
  {
    "text": "that comprises a a transaction token so the the benefits here are basically that",
    "start": "789519",
    "end": "795519"
  },
  {
    "text": "you can um you know limit damage uh even if your VPC is compromised and you can",
    "start": "795519",
    "end": "802360"
  },
  {
    "text": "do that by providing an immutable context throughout the call Jin right so you basically can configure each service",
    "start": "802360",
    "end": "808839"
  },
  {
    "text": "so say unless I can verify that uh uh transaction token uh I'm not going to do",
    "start": "808839",
    "end": "814199"
  },
  {
    "text": "anything and so as a result if any spoor calls are made or if any parameters are",
    "start": "814199",
    "end": "819320"
  },
  {
    "text": "changed doesn't matter because the transaction token cannot be modified and so you know you you now have uh a way of",
    "start": "819320",
    "end": "825760"
  },
  {
    "text": "preventing damage right and there is one limitation in the way",
    "start": "825760",
    "end": "832040"
  },
  {
    "text": "transaction tokens work today and there's some future work that I'm going to go into uh in the talk that you can",
    "start": "832040",
    "end": "838399"
  },
  {
    "text": "still have a pro possibility that a service in the middle grabs a transaction token and then reuses it uh",
    "start": "838399",
    "end": "845759"
  },
  {
    "text": "you know uh bypassing some other checks in between and so there is there is no call chain you know uh information",
    "start": "845759",
    "end": "853160"
  },
  {
    "text": "inside the transaction token and I'll get into how to fix that but for now because the transaction tokens are",
    "start": "853160",
    "end": "859639"
  },
  {
    "text": "shortlived less than 5 minutes or you know whatever you want to configure it but less than what it'll take for you to",
    "start": "859639",
    "end": "866040"
  },
  {
    "text": "execute the entire call chain typically it's not going to be more than a few minutes you the chance of reusing those",
    "start": "866040",
    "end": "872519"
  },
  {
    "text": "transaction tokens to do a replay attack or something are very small and so it's okay to um have that possibility for the",
    "start": "872519",
    "end": "880079"
  },
  {
    "text": "sake of efficiency what you'd really like is hey you know I know that Joe",
    "start": "880079",
    "end": "885199"
  },
  {
    "text": "called to uh buy 100 shares of Microsoft but has the fraud protection service",
    "start": "885199",
    "end": "890440"
  },
  {
    "text": "actually processed that call I need to know that that was executed before I can execute the trade right so if you can",
    "start": "890440",
    "end": "897519"
  },
  {
    "text": "have that kind of an assurance that would be even better but that's something that we are not covering in the current spec we are proposing that",
    "start": "897519",
    "end": "904920"
  },
  {
    "text": "for later and I'll get into that so so let's talk about you know what exactly",
    "start": "904920",
    "end": "910320"
  },
  {
    "text": "goes into a transaction token right so there's an issue like this is uh who created the transaction token and then",
    "start": "910320",
    "end": "916720"
  },
  {
    "text": "get into how it gets created and all that uh there's an issue at time and an expiration time and like I said the",
    "start": "916720",
    "end": "922000"
  },
  {
    "text": "expiration time is typically a very small window and um the audience is the",
    "start": "922000",
    "end": "927639"
  },
  {
    "text": "trust domain in which the transaction token can be used um then there is the transaction identifier that stays",
    "start": "927639",
    "end": "933759"
  },
  {
    "text": "constant throughout the call chain uh there's the subject identifier uh there's the request context uh and then",
    "start": "933759",
    "end": "940279"
  },
  {
    "text": "there is the uh purpose of the call and then uh there are the authorization details right let's get into all those",
    "start": "940279",
    "end": "946639"
  },
  {
    "text": "things um now so um the subject identifiers in in transaction tokens are",
    "start": "946639",
    "end": "955160"
  },
  {
    "text": "um defined from a related spec that is soon to be an RFC in the ITF it's called",
    "start": "955160",
    "end": "960880"
  },
  {
    "text": "the SEC event subject identifier spec and it defines subjects in different",
    "start": "960880",
    "end": "966240"
  },
  {
    "text": "ways right so you can have simple subjects that have only one component like an email address or a user",
    "start": "966240",
    "end": "973199"
  },
  {
    "text": "identifier a phone number or whatever way you choose to identify a user right",
    "start": "973199",
    "end": "978319"
  },
  {
    "text": "there provides a lot of flexibility or it can be a complex subject now an complex subject would be",
    "start": "978319",
    "end": "984240"
  },
  {
    "text": "basically something that needs multiple entries to identify the same subject",
    "start": "984240",
    "end": "989360"
  },
  {
    "text": "like in this case you're saying that this is uh the email but you're also saying that well uh this is the user",
    "start": "989360",
    "end": "996000"
  },
  {
    "text": "with this email address but I also want to say for which tenant in my system is that user acting right now right so the",
    "start": "996000",
    "end": "1003279"
  },
  {
    "text": "same user might be in two different tenants and you want to specify the tenant so you can use a complex subject",
    "start": "1003279",
    "end": "1008680"
  },
  {
    "text": "to clarify which particular uh um you know tenant that user belongs to or",
    "start": "1008680",
    "end": "1015440"
  },
  {
    "text": "whatever U you need to specify a subject uniquely right and there is some work",
    "start": "1015440",
    "end": "1022240"
  },
  {
    "text": "going on there is some proposed changes to this where we can use the sub um you",
    "start": "1022240",
    "end": "1027640"
  },
  {
    "text": "know field of a jot uh to specify a subject by a single simple string and",
    "start": "1027640",
    "end": "1032839"
  },
  {
    "text": "that would be a shortcut to just uh any of these things",
    "start": "1032839",
    "end": "1038079"
  },
  {
    "text": "um the the other uh important claims like I said is the requester context uh",
    "start": "1038079",
    "end": "1043720"
  },
  {
    "text": "which um you know it's a claim that identifies the origin originating component like you know this came from",
    "start": "1043720",
    "end": "1050440"
  },
  {
    "text": "this particular API Gateway or this came this call came into this particular Endo right or this call was originated from",
    "start": "1050440",
    "end": "1056440"
  },
  {
    "text": "this IP address by the user you know all of those things that may be important to services that that are down the call",
    "start": "1056440",
    "end": "1062679"
  },
  {
    "text": "chain right um it can also have some other environmental information like maybe you know your time zone or uh",
    "start": "1062679",
    "end": "1069919"
  },
  {
    "text": "other things that you know can be useful uh for processing um the other one which is",
    "start": "1069919",
    "end": "1076960"
  },
  {
    "text": "purpose and this is what gets into the transaction token server which is going to issue that transaction token based on",
    "start": "1076960",
    "end": "1083640"
  },
  {
    "text": "that external call there is a representation of that the you know what is that caller trying to do uh that is",
    "start": "1083640",
    "end": "1091559"
  },
  {
    "text": "trying to we are trying to capture that with this field called the purpose and the reason why this is important is",
    "start": "1091559",
    "end": "1097520"
  },
  {
    "text": "because you don't want that transaction token to be misused in a way that is not intended of how it was supposed to be",
    "start": "1097520",
    "end": "1104559"
  },
  {
    "text": "used in the first place right so if if Joe is calling for ex executing a trade",
    "start": "1104559",
    "end": "1110000"
  },
  {
    "text": "that token should not be used to say well give me historical data for this this stock or something like that right",
    "start": "1110000",
    "end": "1116880"
  },
  {
    "text": "so you need to be able to specify and you can think of this like a oot scope",
    "start": "1116880",
    "end": "1122799"
  },
  {
    "text": "but we are specifically not using the word scope here because uh you don't",
    "start": "1122799",
    "end": "1127880"
  },
  {
    "text": "want to confuse transaction tokens with o tokens and I'll get into that a little bit and these are so completely",
    "start": "1127880",
    "end": "1133640"
  },
  {
    "text": "different things uh just just so you know and so finally the most important",
    "start": "1133640",
    "end": "1138919"
  },
  {
    "text": "thing in the transaction token is the authorization details right so this could be like parameters that are um",
    "start": "1138919",
    "end": "1145640"
  },
  {
    "text": "specified in the external request or it could be things that are inferred from",
    "start": "1145640",
    "end": "1151640"
  },
  {
    "text": "uh you know those uh those parameters right like for example the last um you",
    "start": "1151640",
    "end": "1156799"
  },
  {
    "text": "know the last thing that you see over here um is the user level right and the user",
    "start": "1156799",
    "end": "1164000"
  },
  {
    "text": "level is uh claimed to be a VIP that is something that was inserted by the the",
    "start": "1164000",
    "end": "1169039"
  },
  {
    "text": "issuer of that transaction token right it wasn't something that came into the external call right so it could be a",
    "start": "1169039",
    "end": "1174760"
  },
  {
    "text": "combination of things that come into the external call or things that the transaction token service decides that",
    "start": "1174760",
    "end": "1182159"
  },
  {
    "text": "needs to be specified and is immutable through the call chain right and so what",
    "start": "1182159",
    "end": "1187360"
  },
  {
    "text": "this does is um basically gives you a complete picture of what the user is trying to do where did the call",
    "start": "1187360",
    "end": "1192679"
  },
  {
    "text": "originate from and what is the purpose of the call right and so let's let's take a quick look at at how this whole",
    "start": "1192679",
    "end": "1199240"
  },
  {
    "text": "thing works right so this is sort of a flow diagram the the box at the top here",
    "start": "1199240",
    "end": "1204400"
  },
  {
    "text": "is the external microservice that that is going to be called and this like I said it encapsulates any network",
    "start": "1204400",
    "end": "1210159"
  },
  {
    "text": "infrastructure that you might have firewalls API gateways and all that and then from there it sort of hangs all",
    "start": "1210159",
    "end": "1216440"
  },
  {
    "text": "these internal services that you know that are just called uh directly right",
    "start": "1216440",
    "end": "1221720"
  },
  {
    "text": "and this is the new thing that we're introducing which is the transaction token server and so let's see how it",
    "start": "1221720",
    "end": "1227440"
  },
  {
    "text": "works right so what happens is the end user or uh the external application will",
    "start": "1227440",
    "end": "1233240"
  },
  {
    "text": "invoke the um uh API microservice and the API microservice will present the",
    "start": "1233240",
    "end": "1240000"
  },
  {
    "text": "authentication information it could be an oath token or it could be something else it presents that authentication",
    "start": "1240000",
    "end": "1245600"
  },
  {
    "text": "information the call context everything that comes in and it gives it to the transaction server and it says okay now",
    "start": "1245600",
    "end": "1251640"
  },
  {
    "text": "mint me a transaction token right based on this now important thing to note is",
    "start": "1251640",
    "end": "1257120"
  },
  {
    "text": "let's say you get an access token or an oidc ID token or something in the input",
    "start": "1257120",
    "end": "1262280"
  },
  {
    "text": "you're not going to put that into the the trat right the trat is like its own thing it's just used to assure the",
    "start": "1262280",
    "end": "1269000"
  },
  {
    "text": "transaction token service that yeah this actually represents a legitimate sort of uh thing now why this works is because",
    "start": "1269000",
    "end": "1276600"
  },
  {
    "text": "if you can now control the evolution of your API microservice right then you can",
    "start": "1276600",
    "end": "1283000"
  },
  {
    "text": "be sure about uh you know issuing a transaction token securely now all the",
    "start": "1283000",
    "end": "1288440"
  },
  {
    "text": "rest of your call you know your services in your call chain can have a cicd pipeline that is you know not as secure",
    "start": "1288440",
    "end": "1295360"
  },
  {
    "text": "as what is needed to update your API uh microservice right and as a result you",
    "start": "1295360",
    "end": "1300679"
  },
  {
    "text": "get better security because let's say one of these internal microservices get compromised the damage becomes extremely",
    "start": "1300679",
    "end": "1306880"
  },
  {
    "text": "limited right and so what this uh so let's let's go into what that happens",
    "start": "1306880",
    "end": "1312840"
  },
  {
    "text": "what happens after that is that the transaction token server now verifies that request make sure that it you know",
    "start": "1312840",
    "end": "1319200"
  },
  {
    "text": "understands um you know what the user is trying to do verifies the Trust on everything um does its own computation",
    "start": "1319200",
    "end": "1326200"
  },
  {
    "text": "about what to put into that transaction to token and then issues the track back to the um API micros service and then",
    "start": "1326200",
    "end": "1334600"
  },
  {
    "text": "that transaction token is then issued uh then just propagated down in the call chain uh all the way to any service that",
    "start": "1334600",
    "end": "1341240"
  },
  {
    "text": "requires it right um so this is basically just how transaction tokens work and um",
    "start": "1341240",
    "end": "1349840"
  },
  {
    "text": "okay so how does the actual communication between the API microservice and the transaction token",
    "start": "1349840",
    "end": "1356720"
  },
  {
    "text": "server work it's using a a spec called oo uh token exchange right so there is",
    "start": "1356720",
    "end": "1362480"
  },
  {
    "text": "an existing RFC on how you can uh do a token exchange with an oat server we're",
    "start": "1362480",
    "end": "1368760"
  },
  {
    "text": "using that same spec uh to issue transaction tokens right even though what we're issuing are not o or oidc",
    "start": "1368760",
    "end": "1375559"
  },
  {
    "text": "tokens they are transaction tokens now there is a specific way in which you have to use the oo uh token exchange uh",
    "start": "1375559",
    "end": "1383440"
  },
  {
    "text": "protocol in order to use to get transaction tokens and so uh these are the way these are the things that you",
    "start": "1383440",
    "end": "1389679"
  },
  {
    "text": "need to do is that you know the subject token field has to be the external token that was used to authorize the external",
    "start": "1389679",
    "end": "1395080"
  },
  {
    "text": "call the subject token type is the external token type that you got and the rctx parameter um contains the",
    "start": "1395080",
    "end": "1402120"
  },
  {
    "text": "information that you need to generate the Trap right um I'm sure you have a",
    "start": "1402120",
    "end": "1407480"
  },
  {
    "text": "few question about it I'm happy to explain to you after the uh uh after the",
    "start": "1407480",
    "end": "1412960"
  },
  {
    "text": "uh talk um so now in response to a uh o",
    "start": "1412960",
    "end": "1419480"
  },
  {
    "text": "token uh exchange request what the transaction token server does is it basically does all its computation of",
    "start": "1419480",
    "end": "1426240"
  },
  {
    "text": "whether this is a legitimate request you know whether you know this transaction token should be issued or not it does",
    "start": "1426240",
    "end": "1431679"
  },
  {
    "text": "all that computation and says okay now I'm going to issue this transaction token and then issues a particular",
    "start": "1431679",
    "end": "1436760"
  },
  {
    "text": "transaction token I explain to you all the fields the token type in the response is txn token which is stands",
    "start": "1436760",
    "end": "1442200"
  },
  {
    "text": "for transaction token and um you know uh this is how the O token exchange",
    "start": "1442200",
    "end": "1448799"
  },
  {
    "text": "protocol fields are used uh to provide the response and like you know there's no refresh token or something like that",
    "start": "1448799",
    "end": "1455200"
  },
  {
    "text": "in the response it's a a requirement of the Strat creation process now there is an additional case",
    "start": "1455200",
    "end": "1462520"
  },
  {
    "text": "where somewhere down the call chain you may want to specialize that transaction token even further or you may want to",
    "start": "1462520",
    "end": "1468320"
  },
  {
    "text": "modify something about that transaction token in a way that doesn't damage the security of the call chain so it's it's",
    "start": "1468320",
    "end": "1474640"
  },
  {
    "text": "a very sensitive operation but it is required unfortunately in many cases and so what you can do is you can also do a",
    "start": "1474640",
    "end": "1480440"
  },
  {
    "text": "replacement transaction token now in that case what you're sending along in the O token exchange request is just the",
    "start": "1480440",
    "end": "1487000"
  },
  {
    "text": "trat itself right and maybe any additional things that you are indicating to the tra service that hey I",
    "start": "1487000",
    "end": "1493279"
  },
  {
    "text": "want this new transaction token to replace the existing transaction token and this is what what I'm trying to do",
    "start": "1493279",
    "end": "1499720"
  },
  {
    "text": "now the trat server is it's very important for that TR server to make sure that it it's not negating the",
    "start": "1499720",
    "end": "1506880"
  },
  {
    "text": "security by issuing this new transaction token this replacement transaction token but you know um by making all those",
    "start": "1506880",
    "end": "1514279"
  },
  {
    "text": "checks it can still issue a new transaction token back uh to the requesting",
    "start": "1514279",
    "end": "1519520"
  },
  {
    "text": "Service uh like I said you know there is a lot of caution to be exercised in this process and um you know this is what we",
    "start": "1519520",
    "end": "1528000"
  },
  {
    "text": "recommend in the in the spec there's no requirement you can do whatever you want but at least these are the things that",
    "start": "1528000",
    "end": "1534200"
  },
  {
    "text": "you should be careful about you should not uh you know change the purpose",
    "start": "1534200",
    "end": "1539360"
  },
  {
    "text": "arbitrarily or you should not like suddenly make it loser than what it was try to specialize it more try to uh",
    "start": "1539360",
    "end": "1546840"
  },
  {
    "text": "assert more values rather than removing values from the transaction token and things like",
    "start": "1546840",
    "end": "1552039"
  },
  {
    "text": "that now I told you that uh there is um you know there is still still a",
    "start": "1552039",
    "end": "1558120"
  },
  {
    "text": "possibility that let's say there is a call chain and uh there's a service that",
    "start": "1558120",
    "end": "1563399"
  },
  {
    "text": "is compromised and it's trying to bypass the fraud service and it's just directly calling the settlement service just as",
    "start": "1563399",
    "end": "1569520"
  },
  {
    "text": "an example of a stock trading operation current spec of transaction tokens does",
    "start": "1569520",
    "end": "1575080"
  },
  {
    "text": "not uh have a way to uh identify the call chain so to do that what we are",
    "start": "1575080",
    "end": "1581399"
  },
  {
    "text": "proposing is that you know we can have actually nested transaction tokens and",
    "start": "1581399",
    "end": "1586559"
  },
  {
    "text": "so what that does is um yeah I I don't think the slide is",
    "start": "1586559",
    "end": "1593720"
  },
  {
    "text": "very clear but a service in between can sign the transaction token by itself so",
    "start": "1593720",
    "end": "1599760"
  },
  {
    "text": "basically let's say you know the external callers Jo is trying to buy 100 shares shares of Microsoft there's a",
    "start": "1599760",
    "end": "1606440"
  },
  {
    "text": "fraud uh prevention service in between that does all kinds of checks and says okay I've I've processed this",
    "start": "1606440",
    "end": "1611760"
  },
  {
    "text": "transaction token I need the downstream services to know that I've processed it so I'm just going to sign this",
    "start": "1611760",
    "end": "1617240"
  },
  {
    "text": "transaction token myself that's what creates the nested transaction token and then that gets propagated down and like",
    "start": "1617240",
    "end": "1624440"
  },
  {
    "text": "I said this is not yet in the spec it's something that we are working on",
    "start": "1624440",
    "end": "1630200"
  },
  {
    "text": "um the the drawback is that the the transaction tokens tend to get bloated as a result because now you have",
    "start": "1630200",
    "end": "1636720"
  },
  {
    "text": "intermediate services that are uh you know padding their own signatures to it",
    "start": "1636720",
    "end": "1641760"
  },
  {
    "text": "as long as those services are very limited you know not like every service needs to do this um you know you should",
    "start": "1641760",
    "end": "1647720"
  },
  {
    "text": "be okay but there now there's some additional consideration there's also the problem that now those Services have",
    "start": "1647720",
    "end": "1654080"
  },
  {
    "text": "to be trusted because you cannot have them evolve the same way other services are otherwise You're vulnerable to the",
    "start": "1654080",
    "end": "1660320"
  },
  {
    "text": "same risks that uh you know you're trying to prevent against all right uh that was it we",
    "start": "1660320",
    "end": "1667159"
  },
  {
    "text": "still have 7 minutes for questions um if you want to know about signal the uh the",
    "start": "1667159",
    "end": "1673279"
  },
  {
    "text": "um you know the QR code on the left uh will tell you and if you want to know about trats the QR code on the right uh",
    "start": "1673279",
    "end": "1680240"
  },
  {
    "text": "will give you more information thank you everyone and uh if you would like to ask",
    "start": "1680240",
    "end": "1687799"
  },
  {
    "text": "questions please uh come up to the mics so that uh um you know for remote users",
    "start": "1687799",
    "end": "1694200"
  },
  {
    "text": "it's uh easier to um you know uh for them to",
    "start": "1694200",
    "end": "1700639"
  },
  {
    "text": "listen yes hi uh thank you for the talk uh do I understand correct like if it's",
    "start": "1703519",
    "end": "1710799"
  },
  {
    "text": "there's a c chain then uh service one will repurpose a token so that the",
    "start": "1710799",
    "end": "1717200"
  },
  {
    "text": "operation of service 2 will happen uh but then uh if you have to",
    "start": "1717200",
    "end": "1723159"
  },
  {
    "text": "enforce some policies then the transaction token server has to be aware",
    "start": "1723159",
    "end": "1729960"
  },
  {
    "text": "of the the flow of the the operations in order to constrain",
    "start": "1729960",
    "end": "1735440"
  },
  {
    "text": "it uh no I think what the transaction token server is trying to do is basically just assure something about",
    "start": "1735440",
    "end": "1743080"
  },
  {
    "text": "that call chain it doesn't really need to know which services that token is going to get propagated to because all",
    "start": "1743080",
    "end": "1748919"
  },
  {
    "text": "it's trying to say is this external caller is this person or this application that is calling and it's",
    "start": "1748919",
    "end": "1755480"
  },
  {
    "text": "saying that oh these are the things that are immutable about this transaction like this is the um let's say it's a",
    "start": "1755480",
    "end": "1761799"
  },
  {
    "text": "share settlement transaction you know these this is the shares we're talking about this is the quantity you any other",
    "start": "1761799",
    "end": "1768600"
  },
  {
    "text": "context that needs to be preserved throughout the call genain it doesn't need to know which service is going to",
    "start": "1768600",
    "end": "1774039"
  },
  {
    "text": "get involed but then when so let's say in your buying shares example right so",
    "start": "1774039",
    "end": "1780960"
  },
  {
    "text": "there's a a token that allows you to buy uh the shares but then you need to",
    "start": "1780960",
    "end": "1787760"
  },
  {
    "text": "request the balance of the account right so then how would the service number two",
    "start": "1787760",
    "end": "1794640"
  },
  {
    "text": "know that okay I can use a buy shares token uh to give arbitrary uh account",
    "start": "1794640",
    "end": "1803519"
  },
  {
    "text": "numbers no so the what the service is going to do is is going to check the the content of the track right",
    "start": "1803519",
    "end": "1811600"
  },
  {
    "text": "it has the public key of the trat server it's going to verify that this trat came from that server right and then it's",
    "start": "1811600",
    "end": "1818640"
  },
  {
    "text": "going to say okay this allows me only to do these things right and so it can only do those things right and so even if it",
    "start": "1818640",
    "end": "1828000"
  },
  {
    "text": "tries to modify something let's say it tries to modify something about that track the downstream service is going to",
    "start": "1828000",
    "end": "1833440"
  },
  {
    "text": "reject it because it the the signature one computer right on the track",
    "start": "1833440",
    "end": "1839480"
  },
  {
    "text": "okay thank you",
    "start": "1839480",
    "end": "1843120"
  },
  {
    "text": "sure um yeah my question is regarding the transaction token server how does it",
    "start": "1845519",
    "end": "1852399"
  },
  {
    "text": "um verify that the claims that it's going to put in the jot token are",
    "start": "1852399",
    "end": "1859519"
  },
  {
    "text": "correct does that make sense like how does it know that the API service isn't",
    "start": "1859519",
    "end": "1865039"
  },
  {
    "text": "lying about which user made this request right so that's a great question because",
    "start": "1865039",
    "end": "1872399"
  },
  {
    "text": "that is exactly sort of the you're now limiting the trust to be just with the",
    "start": "1872399",
    "end": "1878880"
  },
  {
    "text": "external Endo so the internal services that are that are there in your",
    "start": "1878880",
    "end": "1884519"
  },
  {
    "text": "infrastructure uh can evolve much more rapidly without a lot of um checks but",
    "start": "1884519",
    "end": "1890519"
  },
  {
    "text": "the external endpoint which is your API microservice or could be the um you know user facing microservice or something",
    "start": "1890519",
    "end": "1897440"
  },
  {
    "text": "that needs to be secure because it's going to trust that microservice to give",
    "start": "1897440",
    "end": "1902840"
  },
  {
    "text": "you um some information like the call context and all that it can give you the",
    "start": "1902840",
    "end": "1908519"
  },
  {
    "text": "incoming oo token so that micros service won't be able to impersonate uh someone else like because",
    "start": "1908519",
    "end": "1914720"
  },
  {
    "text": "there's an oidc token let's say which has the IDE identity of the user in there and as a result you know the track",
    "start": "1914720",
    "end": "1921240"
  },
  {
    "text": "server will not be able to you know you won't be able to trick the track server from in saying that oh it's not Joe it's",
    "start": "1921240",
    "end": "1927279"
  },
  {
    "text": "actually Atul calling but because the IDC token that is in the request will say that it's Atul calling right but",
    "start": "1927279",
    "end": "1933840"
  },
  {
    "text": "there is a high level of trust between the API or the initial microservice and the tra",
    "start": "1933840",
    "end": "1941320"
  },
  {
    "text": "Service uh this might be a dumb question or but uh this reminds me of a little",
    "start": "1942760",
    "end": "1948440"
  },
  {
    "text": "bit of the open Telemetry and how you have like a root trace and then you have spans and you've got like Telemetry",
    "start": "1948440",
    "end": "1954600"
  },
  {
    "text": "being emitted by each individual service towards an outbalance thing um I'm wondering if there's any inspiration or",
    "start": "1954600",
    "end": "1960440"
  },
  {
    "text": "anything useful there like um I'm not familiar with open Telemetry but just based on what you said uh there's been",
    "start": "1960440",
    "end": "1967600"
  },
  {
    "text": "some discussion about how these trats can be used to like log um the execution",
    "start": "1967600",
    "end": "1973480"
  },
  {
    "text": "of a particular call and that that is definitely an offline use of the tracks but it's not something that is core to",
    "start": "1973480",
    "end": "1979760"
  },
  {
    "text": "the problem that we're solving I guess what I'm thinking is let's say you've got uh like you have",
    "start": "1979760",
    "end": "1985919"
  },
  {
    "text": "the propagation you have the root context like so you're passing along this rout uh span for the request each",
    "start": "1985919",
    "end": "1993200"
  },
  {
    "text": "uh service has its own like span ID underneath of the root Trace ID um if",
    "start": "1993200",
    "end": "1998880"
  },
  {
    "text": "you wanted to do an authorization check like say that the you know the fraud",
    "start": "1998880",
    "end": "2004159"
  },
  {
    "text": "service ran against it you know isn't used this way right now but I could",
    "start": "2004159",
    "end": "2009320"
  },
  {
    "text": "imagine like reaching out to this authorization system you know outbound not carrying that information with the J",
    "start": "2009320",
    "end": "2015960"
  },
  {
    "text": "but to check that that happened yeah I was just trying to find that slide that has that information",
    "start": "2015960",
    "end": "2023159"
  },
  {
    "text": "so the trace ID is like the txn here right but we don't have a span ID",
    "start": "2023159",
    "end": "2029639"
  },
  {
    "text": "because each service cannot modify the track right it only comes you know it's",
    "start": "2029639",
    "end": "2034960"
  },
  {
    "text": "minted at the beginning of the call and it's just just used afterwards unless you want a replacement then then you to",
    "start": "2034960",
    "end": "2040440"
  },
  {
    "text": "go back to the track server and you don't want to do that all the time because otherwise you're going to make that track server work really hard right",
    "start": "2040440",
    "end": "2048040"
  },
  {
    "text": "so that is a problem I see in because in open I mean I don't know about open",
    "start": "2048040",
    "end": "2054118"
  },
  {
    "text": "Telemetry but in other cases you need a trace ID and a span ID like in a Dapper I don't know if you know about Dapper uh",
    "start": "2054119",
    "end": "2061679"
  },
  {
    "text": "so that's what I'm familiar with uh that um you know you need those things and",
    "start": "2061679",
    "end": "2068358"
  },
  {
    "text": "the track can only give you the the txn the trace ID and not the span ID so",
    "start": "2068359",
    "end": "2074040"
  },
  {
    "text": "thank",
    "start": "2074040",
    "end": "2076240"
  },
  {
    "text": "you thank you for the session so question is the transaction token never",
    "start": "2080760",
    "end": "2087480"
  },
  {
    "text": "goes back to the user right it's it's basically it's it's only inside the inside if you see the uh audience value",
    "start": "2087480",
    "end": "2094878"
  },
  {
    "text": "right it's it's the trust domain that you have internally it doesn't have any meaning outside that uh trust domain",
    "start": "2094879",
    "end": "2102440"
  },
  {
    "text": "okay so second question is you said the session hijacking uh this can prevent",
    "start": "2102440",
    "end": "2108760"
  },
  {
    "text": "right but uh session hijack of a privileged user it can prevent but if an",
    "start": "2108760",
    "end": "2114359"
  },
  {
    "text": "end user gets hijacked then there's no impersonation because you're now thinking that the end user is making",
    "start": "2114359",
    "end": "2120480"
  },
  {
    "text": "that specific call but it's not a catastrophic compromise like the let's",
    "start": "2120480",
    "end": "2126320"
  },
  {
    "text": "say Joe's session gets hijacked you can only make calls as Joe you cannot make calls as Atul or",
    "start": "2126320",
    "end": "2133000"
  },
  {
    "text": "something else right so but Insider Also let's say I have a privilege access I",
    "start": "2133000",
    "end": "2139800"
  },
  {
    "text": "passed a session or some sort of a token and with that you created a a",
    "start": "2139800",
    "end": "2145839"
  },
  {
    "text": "transaction token so what if somebody inside compromise the initial token of",
    "start": "2145839",
    "end": "2152480"
  },
  {
    "text": "an Insider so they can act on his behalf with all the Privileges even with the",
    "start": "2152480",
    "end": "2159599"
  },
  {
    "text": "Trot right right so you're not I mean you're using these",
    "start": "2159599",
    "end": "2165640"
  },
  {
    "text": "transaction tokens to uh execute normal user requests right if you're using",
    "start": "2165640",
    "end": "2172400"
  },
  {
    "text": "these transaction tokens to do privileged user requests like modifying services and all that I think that's a",
    "start": "2172400",
    "end": "2177720"
  },
  {
    "text": "slightly different use case and maybe we can discuss that because I don't know how that'll work uh but yeah I hope I",
    "start": "2177720",
    "end": "2185400"
  },
  {
    "text": "answered your question we out of time so maybe we can take the discussion offline but thank you everyone uh for sitting",
    "start": "2185400",
    "end": "2191520"
  },
  {
    "text": "through the talk",
    "start": "2191520",
    "end": "2195560"
  }
]