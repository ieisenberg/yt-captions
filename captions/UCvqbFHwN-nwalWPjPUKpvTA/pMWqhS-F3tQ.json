[
  {
    "text": "[Music] hello and welcome to this webinar about",
    "start": "1570",
    "end": "8080"
  },
  {
    "text": "chaos engineering with litmus chaos i am um head of chaos engineering at",
    "start": "8080",
    "end": "13840"
  },
  {
    "text": "harness along with me my colleague koptik is principal engineer at harness",
    "start": "13840",
    "end": "21359"
  },
  {
    "text": "together we have created litmus chaos project around four years ago",
    "start": "21359",
    "end": "26560"
  },
  {
    "text": "which is now a cncf incubating project here is a agenda",
    "start": "26560",
    "end": "33760"
  },
  {
    "text": "we'll first look at why and what are chaos engineering and its relevance to cloud native",
    "start": "33760",
    "end": "42399"
  },
  {
    "text": "and i'll also talk about uh how chaos generally matures in an",
    "start": "42399",
    "end": "48960"
  },
  {
    "text": "organization that practices around devops then i'll delve a little bit into um",
    "start": "48960",
    "end": "55840"
  },
  {
    "text": "the introduction of nitmus it's features use cases there have been a lot of learnings about how litmus is used by",
    "start": "55840",
    "end": "64158"
  },
  {
    "text": "community and enterprises i'll talk a little bit about the newly found use cases for litmus and",
    "start": "64159",
    "end": "72640"
  },
  {
    "text": "at the end kartik will do a demo of how to get",
    "start": "72640",
    "end": "77840"
  },
  {
    "text": "started with litmus and he'll show an example of running chaos uh using litmus and",
    "start": "77840",
    "end": "84560"
  },
  {
    "text": "connecting new targets etc etc to the litmus based control plane",
    "start": "84560",
    "end": "91439"
  },
  {
    "text": "so let's start with uh some facts around id that are happening today",
    "start": "92000",
    "end": "97920"
  },
  {
    "text": "so we all know that digital services are growing fast and the digital traffic uh is growing at an alarming rate in the",
    "start": "97920",
    "end": "104880"
  },
  {
    "text": "last few years and this is uh fueled by the digital transformation that's that's happening",
    "start": "104880",
    "end": "111680"
  },
  {
    "text": "and one of the reasons why the digital transformation is happening at this rate is",
    "start": "111680",
    "end": "117520"
  },
  {
    "text": "the enablement given by kubernetes and the transformation of id",
    "start": "117520",
    "end": "122719"
  },
  {
    "text": "into digital uh world is actually fueled by the adoption of kubernetes",
    "start": "122719",
    "end": "129759"
  },
  {
    "text": "because of this there is a change that's happening in devops as well",
    "start": "129759",
    "end": "135440"
  },
  {
    "text": "there is a subsection of devops that we are calling as cloud native devops",
    "start": "135440",
    "end": "140800"
  },
  {
    "text": "which is a little different than the traditional devops in that it's uh",
    "start": "140800",
    "end": "146400"
  },
  {
    "text": "faster the deliveries happen in a more automated way the new set of tools that are happening",
    "start": "146400",
    "end": "152239"
  },
  {
    "text": "the automation of uh applying the configuration upgrades",
    "start": "152239",
    "end": "157760"
  },
  {
    "text": "overall delivery everything is happening fast service reliability is extremely",
    "start": "157760",
    "end": "163599"
  },
  {
    "text": "important for businesses um so of course",
    "start": "163599",
    "end": "169040"
  },
  {
    "text": "when you have less reliability it really means that you are facing",
    "start": "169040",
    "end": "174239"
  },
  {
    "text": "service down times or outages which is not good the businesses can face financial and",
    "start": "174239",
    "end": "181040"
  },
  {
    "text": "reputational damages so we all know the importance of service reliability",
    "start": "181040",
    "end": "187760"
  },
  {
    "text": "for the businesses and in general all services are built for providing maximum reliability",
    "start": "187760",
    "end": "196080"
  },
  {
    "text": "in that they are built the components or applications micro services are generally built with",
    "start": "196080",
    "end": "203519"
  },
  {
    "text": "redundancy uh as a goal right and even with that we are seeing um outages",
    "start": "203519",
    "end": "211920"
  },
  {
    "text": "uh happening right and this is because how much ever you build",
    "start": "211920",
    "end": "218720"
  },
  {
    "text": "carefully there is always new thing that fails and you have not taken care of that corner case so outages will",
    "start": "218720",
    "end": "227040"
  },
  {
    "text": "still happen and um that's why it's it's a matter of how many nines in the reliability do you",
    "start": "227040",
    "end": "232959"
  },
  {
    "text": "have 99.999 or one more nine to this percentage of reliability",
    "start": "232959",
    "end": "239280"
  },
  {
    "text": "right so there are um there are general metrics that have evolved over a period",
    "start": "239280",
    "end": "244879"
  },
  {
    "text": "of time when you talk about reliability mean time to fail uh how",
    "start": "244879",
    "end": "250640"
  },
  {
    "text": "often you fail um so the distance has to be uh bigger and bigger",
    "start": "250640",
    "end": "256799"
  },
  {
    "text": "between the values and even when they fail how fast you recover right so the service downtime can be reduced when",
    "start": "256799",
    "end": "264800"
  },
  {
    "text": "there is a service outage right so this is uh the context of uh reliability with",
    "start": "264800",
    "end": "270639"
  },
  {
    "text": "respect to the the business uh you know and its reputation",
    "start": "270639",
    "end": "276320"
  },
  {
    "text": "so there is a need to increase the reliability or reduce the downtime and how do you do that right",
    "start": "276320",
    "end": "282720"
  },
  {
    "text": "and we have seen uh devops uh continuously focusing on",
    "start": "282720",
    "end": "288400"
  },
  {
    "text": "you know various degrees of testing various types of testing including functional system load value",
    "start": "288400",
    "end": "295040"
  },
  {
    "text": "testing right a well architected system with a good qa",
    "start": "295040",
    "end": "301039"
  },
  {
    "text": "provides a good reliability or less outages but there is a limit",
    "start": "301039",
    "end": "307759"
  },
  {
    "text": "to which all these types of testing can guarantee uh the quality or reliability",
    "start": "307759",
    "end": "314160"
  },
  {
    "text": "of a product or service right so the next uh",
    "start": "314160",
    "end": "320240"
  },
  {
    "text": "option or innovation in increasing the reliability or resilience of a service",
    "start": "320240",
    "end": "326960"
  },
  {
    "text": "is to introduce chaos testing or to practice chaos engineering",
    "start": "326960",
    "end": "332080"
  },
  {
    "text": "and um what is chaos engineering right",
    "start": "332080",
    "end": "337199"
  },
  {
    "text": "it's in simple terms it is uh introducing false on purpose",
    "start": "337199",
    "end": "343280"
  },
  {
    "text": "and observing the system uh you know if a fault uh can happen it will happen so",
    "start": "343280",
    "end": "349120"
  },
  {
    "text": "why not do it right away right so you want to be able to uh",
    "start": "349120",
    "end": "354479"
  },
  {
    "text": "increase uh your responsiveness to down times so",
    "start": "354479",
    "end": "359520"
  },
  {
    "text": "let's actually uh introduce this false to see if there are some weakness uh weaknesses and then uh reduce the",
    "start": "359520",
    "end": "366720"
  },
  {
    "text": "recovery times right outfits issues so in general it's an iterative process",
    "start": "366720",
    "end": "372240"
  },
  {
    "text": "so in chaos engineering you pick some systems or applications",
    "start": "372240",
    "end": "379120"
  },
  {
    "text": "and then you pick a certain chaos experiments or scenarios and you run them",
    "start": "379120",
    "end": "385039"
  },
  {
    "text": "in in a focused manner with the low blast radius and then see",
    "start": "385039",
    "end": "390240"
  },
  {
    "text": "if it is matching your expected results or it is matching your expected",
    "start": "390240",
    "end": "396720"
  },
  {
    "text": "steady state hypothesis um if not you have a learning and you go",
    "start": "396720",
    "end": "402000"
  },
  {
    "text": "and fix that issue and then you keep doing it so this is an iterative process what it",
    "start": "402000",
    "end": "407680"
  },
  {
    "text": "means is that you start small and then you start covering various services",
    "start": "407680",
    "end": "412880"
  },
  {
    "text": "various components within services and the degree of randomness of falls",
    "start": "412880",
    "end": "418960"
  },
  {
    "text": "increases and you start covering uh more complex faults that could happen um you know",
    "start": "418960",
    "end": "425520"
  },
  {
    "text": "with chaos engineering right so that is what chaos engineering is",
    "start": "425520",
    "end": "431440"
  },
  {
    "text": "and uh it its relevance uh is becoming more and more in cloud native ecosystems",
    "start": "431440",
    "end": "437759"
  },
  {
    "text": "uh simply because you have proliferation of microservices",
    "start": "437759",
    "end": "443599"
  },
  {
    "text": "right developers focus on their code within a",
    "start": "443599",
    "end": "449520"
  },
  {
    "text": "micro service which is now a tip of a pyramid right unlike in the legacy systems",
    "start": "449520",
    "end": "456000"
  },
  {
    "text": "where you have that integrations with your stack underneath or surrounding",
    "start": "456000",
    "end": "462560"
  },
  {
    "text": "in microservices or cloud native world uh you are operating totally independently uh you're designing your",
    "start": "462560",
    "end": "469280"
  },
  {
    "text": "code uh totally independently to run within a container as a microservice",
    "start": "469280",
    "end": "474319"
  },
  {
    "text": "so because of this uh you're running um uh you're shipping faster right and",
    "start": "474319",
    "end": "481280"
  },
  {
    "text": "instead of uh shipping every quarter uh we see now you know shipments happening every week or",
    "start": "481280",
    "end": "488000"
  },
  {
    "text": "on a daily basis sometimes multiple releases in a day right so in effect uh",
    "start": "488000",
    "end": "493520"
  },
  {
    "text": "you have multiple micro services to deal with and you are receiving the updates to",
    "start": "493520",
    "end": "499919"
  },
  {
    "text": "this micro services at a phenomenal uh rate right um so together uh you are seeing more",
    "start": "499919",
    "end": "507360"
  },
  {
    "text": "dynamism and how can you make sure that the service reliability is intact if there",
    "start": "507360",
    "end": "514719"
  },
  {
    "text": "are any failures either um you know within this micro services or the infrastructure that hosts this micro",
    "start": "514719",
    "end": "521120"
  },
  {
    "text": "services and the answer to that is uh you know chaos engineering can help",
    "start": "521120",
    "end": "527040"
  },
  {
    "text": "because of this increased dynamism chaos engineering is becoming or has become",
    "start": "527040",
    "end": "532480"
  },
  {
    "text": "a more obvious choice uh to deal with the reliability problem",
    "start": "532480",
    "end": "538240"
  },
  {
    "text": "of cloud native business services",
    "start": "538240",
    "end": "543519"
  },
  {
    "text": "so in cloud native if you are talking about chaos engineering practice um",
    "start": "544959",
    "end": "550800"
  },
  {
    "text": "we've been advocating certain principles generally cloud native rights on open",
    "start": "550800",
    "end": "556000"
  },
  {
    "text": "source right so your chaos engineering stack or solution could be um an open source based one and",
    "start": "556000",
    "end": "564480"
  },
  {
    "text": "uh the chaos experiments need to be uh you know well tested rugged flexible so",
    "start": "564480",
    "end": "571360"
  },
  {
    "text": "they're better built uh you know through the community or",
    "start": "571360",
    "end": "576480"
  },
  {
    "text": "put them in an open market place right and chaos experiments are like any other",
    "start": "576480",
    "end": "582480"
  },
  {
    "text": "software uh code so that really means that you keep changing them there are various version you need version control",
    "start": "582480",
    "end": "590240"
  },
  {
    "text": "management around chaos experiments so it's better that you have chaos",
    "start": "590240",
    "end": "595440"
  },
  {
    "text": "operators and chaos experiments as custom resources on cloud native and then",
    "start": "595440",
    "end": "600800"
  },
  {
    "text": "obviously the real problems happen at scale so you need to ensure reliability at scale so which really means that",
    "start": "600800",
    "end": "607279"
  },
  {
    "text": "chaos engineering also has to be applied on a scale system and you have to increase the scale of chaos engineering",
    "start": "607279",
    "end": "613680"
  },
  {
    "text": "as well right so gitobs is one possible answer to",
    "start": "613680",
    "end": "619920"
  },
  {
    "text": "uh you know chaos engineering uh happening at scale the last one is observability uh",
    "start": "619920",
    "end": "626720"
  },
  {
    "text": "observability is very important in chaos engineering uh in that um",
    "start": "626720",
    "end": "632800"
  },
  {
    "text": "you introduce faults and uh but you always observe through your established observability practices",
    "start": "632800",
    "end": "639680"
  },
  {
    "text": "right so the context of chaos has to be placed along",
    "start": "639680",
    "end": "645200"
  },
  {
    "text": "or on top of your observability system so what it really means for cloud native",
    "start": "645200",
    "end": "650720"
  },
  {
    "text": "chaos engineering is you better have open apis or apis that",
    "start": "650720",
    "end": "656480"
  },
  {
    "text": "are easily available to integrate with chaos engineering or chaos engineering tools a",
    "start": "656480",
    "end": "663680"
  },
  {
    "text": "framework should uh provide apis to upload or",
    "start": "663680",
    "end": "669360"
  },
  {
    "text": "you know pull the chaos metrics from the chaos engineering platform",
    "start": "669360",
    "end": "675680"
  },
  {
    "text": "so together these principles uh it covers um",
    "start": "675680",
    "end": "681120"
  },
  {
    "text": "all the requirements of a good chaos native cloud native chaos engineering",
    "start": "681120",
    "end": "687279"
  },
  {
    "text": "platform so one such platform of course is litmus chaos which i'll talk in a bit so before",
    "start": "687279",
    "end": "695120"
  },
  {
    "text": "i do that let's also see how chaos engineering happens how it starts and matures within an",
    "start": "695120",
    "end": "702320"
  },
  {
    "text": "organization first of all chaos engineering uh is relevant in any of the",
    "start": "702320",
    "end": "707519"
  },
  {
    "text": "bills uh qa dev or ops so it's not necessary that chaos",
    "start": "707519",
    "end": "714160"
  },
  {
    "text": "engineering is only for ops so you can do light uh right shift or left shift and similarly um you start chaos",
    "start": "714160",
    "end": "722079"
  },
  {
    "text": "engineering at generally infrastructure players uh you know with the simple experiments and as you develop and get",
    "start": "722079",
    "end": "729680"
  },
  {
    "text": "experience of chaos tests running kl stress on cross section layer then you go one level up into",
    "start": "729680",
    "end": "736480"
  },
  {
    "text": "middle layer api's message queues or apa servers and then you go into more",
    "start": "736480",
    "end": "741920"
  },
  {
    "text": "stateful services databases and data services and finally your own applications you can start introducing",
    "start": "741920",
    "end": "749040"
  },
  {
    "text": "simulated faults right and when you reach that level uh you can say that you",
    "start": "749040",
    "end": "754880"
  },
  {
    "text": "have reached a maximum level of chaos engineering uh in your organization right when you",
    "start": "754880",
    "end": "762000"
  },
  {
    "text": "reach that level you can generally observe if your language of chaos engineering uh",
    "start": "762000",
    "end": "769600"
  },
  {
    "text": "you know the maturity is being dealt in terms of uh you know slows",
    "start": "769600",
    "end": "775040"
  },
  {
    "text": "sorry metrics is it linked to chaos engineering or not and developer metrics is also",
    "start": "775040",
    "end": "780639"
  },
  {
    "text": "linked to chaos engineering or not so as you can see uh chaos engineering",
    "start": "780639",
    "end": "786480"
  },
  {
    "text": "plays a core role in in cloud native devops right",
    "start": "786480",
    "end": "791920"
  },
  {
    "text": "and a good chaos engineering solution within devops or cloud native devops",
    "start": "792000",
    "end": "798880"
  },
  {
    "text": "adopts the culture of chaos or chaos culture",
    "start": "798880",
    "end": "804000"
  },
  {
    "text": "across all functions within devops what i mean is",
    "start": "804000",
    "end": "809120"
  },
  {
    "text": "uh in dev qa and ops or by developers and srs you know both",
    "start": "809120",
    "end": "815519"
  },
  {
    "text": "like practice chaos engineering so developers run chaos in their pipelines and",
    "start": "815519",
    "end": "822800"
  },
  {
    "text": "you know sres run slow validation using chaos and they introduce",
    "start": "822800",
    "end": "829920"
  },
  {
    "text": "randomized chaos in pre-production or in production through game days",
    "start": "829920",
    "end": "835279"
  },
  {
    "text": "similarly the test systems actually go and introduce deeper chaos tests in in their test",
    "start": "835279",
    "end": "842480"
  },
  {
    "text": "systems and into their cd pipelines 3cd and 4ct so when you introduce chaos",
    "start": "842480",
    "end": "848720"
  },
  {
    "text": "engineering in all fields there is a general maturity of",
    "start": "848720",
    "end": "854320"
  },
  {
    "text": "deeper tests that get developed and you are obviously validating the products",
    "start": "854320",
    "end": "860880"
  },
  {
    "text": "being shipped products being run for more error scenarios so your services become generally more resilient",
    "start": "860880",
    "end": "868560"
  },
  {
    "text": "litmus chaos is a cncf incubating project",
    "start": "868560",
    "end": "873920"
  },
  {
    "text": "that has got high adoption uh levels by this popular companies",
    "start": "873920",
    "end": "880959"
  },
  {
    "text": "and also it's got a large community around 2000 users the usage is growing",
    "start": "880959",
    "end": "888160"
  },
  {
    "text": "you know it has grown 30x in the last few quarters and we're seeing around",
    "start": "888160",
    "end": "893199"
  },
  {
    "text": "2000 installations per day of litmus operators",
    "start": "893199",
    "end": "899399"
  },
  {
    "text": "let's talk about the litmus use cases that are generally practiced",
    "start": "899440",
    "end": "904560"
  },
  {
    "text": "from vertical standpoint they are more used in banking retail and e-commerce uh services which",
    "start": "904560",
    "end": "912880"
  },
  {
    "text": "is directly related to the digital traffic um we have seen um litmus being used in",
    "start": "912880",
    "end": "919360"
  },
  {
    "text": "edge computing um you know scenarios as well um in general the litmus usage is more and",
    "start": "919360",
    "end": "927040"
  },
  {
    "text": "more happening around wherever cloud native uh devops uh or uh or commonplace",
    "start": "927040",
    "end": "933440"
  },
  {
    "text": "um and they can uh the use cases can be in in many",
    "start": "933440",
    "end": "938880"
  },
  {
    "text": "different forms primarily various uh game days to start with and",
    "start": "938880",
    "end": "944959"
  },
  {
    "text": "then slowly get integrated into your cd systems a pre cdr positi",
    "start": "944959",
    "end": "950880"
  },
  {
    "text": "and auto triggered uh chaos for uh continuous deployment",
    "start": "950880",
    "end": "956399"
  },
  {
    "text": "and uh one more level of maturity is to include litmus in",
    "start": "956399",
    "end": "962240"
  },
  {
    "text": "ca pipelines themselves and if you have a good um",
    "start": "962240",
    "end": "967440"
  },
  {
    "text": "you know scale and performance testing chaos engineering",
    "start": "967440",
    "end": "972480"
  },
  {
    "text": "can help or litmus can help validating the current strategy of your scale and",
    "start": "972480",
    "end": "978079"
  },
  {
    "text": "performance testing and similarly if you have invested in good observability systems around cloud",
    "start": "978079",
    "end": "985040"
  },
  {
    "text": "native litmus or chaos engineering that's based on litmus can help",
    "start": "985040",
    "end": "992720"
  },
  {
    "text": "validating whether your observability systems will really help when when there are outages that may",
    "start": "992720",
    "end": "999440"
  },
  {
    "text": "happen right so how litmus chaos in general works",
    "start": "999440",
    "end": "1005519"
  },
  {
    "text": "litmus you can start very small and grow uh you know in a distributed",
    "start": "1005519",
    "end": "1011199"
  },
  {
    "text": "fashion as it's a kubernetes application uh you you start with a simple helm shot",
    "start": "1011199",
    "end": "1017440"
  },
  {
    "text": "uh when you install litmus you have chaos center uh where users can",
    "start": "1017440",
    "end": "1024480"
  },
  {
    "text": "go and orchestrate create orchestrate and manage chaos scenarios right",
    "start": "1024480",
    "end": "1030400"
  },
  {
    "text": "and when you install the platform comes with a bunch of experiments",
    "start": "1030400",
    "end": "1036959"
  },
  {
    "text": "these are chaos experiments for kubernetes resources and you have some",
    "start": "1036959",
    "end": "1043199"
  },
  {
    "text": "cloud chaos experiments as well and it also comes with a good sdk",
    "start": "1043199",
    "end": "1051679"
  },
  {
    "text": "way to introduce uh your own uh chaos logic into the platform we call it as",
    "start": "1051679",
    "end": "1058480"
  },
  {
    "text": "bring your own chaos right so you use all these chaos experiments and then you put them into a chaos",
    "start": "1058480",
    "end": "1065200"
  },
  {
    "text": "scenarios or chaos workloads and you stitch them",
    "start": "1065200",
    "end": "1070640"
  },
  {
    "text": "however you want to make a meaningful chaos scenario once you have a",
    "start": "1070640",
    "end": "1075840"
  },
  {
    "text": "meaningful scenario you can use it um to",
    "start": "1075840",
    "end": "1081440"
  },
  {
    "text": "trigger through uh githubs or directly trigger or schedule it using chaos center and then apply it on any use",
    "start": "1081440",
    "end": "1088960"
  },
  {
    "text": "cases so these are the general chaos experiments around kubernetes",
    "start": "1088960",
    "end": "1094640"
  },
  {
    "text": "the platform provides a good coverage of chaos for",
    "start": "1094640",
    "end": "1100080"
  },
  {
    "text": "various kubernetes resources and they're super highly tunable and",
    "start": "1100080",
    "end": "1105679"
  },
  {
    "text": "if you know how to manage kubernetes resources you can manage the chaos experiments the same way",
    "start": "1105679",
    "end": "1112080"
  },
  {
    "text": "so other uh very powerful feature of litmus apart from various different",
    "start": "1112080",
    "end": "1117200"
  },
  {
    "text": "experiments is the probes probes are a way to",
    "start": "1117200",
    "end": "1123679"
  },
  {
    "text": "declaratively define your steady state hypothesis right um of a given",
    "start": "1123679",
    "end": "1129679"
  },
  {
    "text": "experiment and you can use probes",
    "start": "1129679",
    "end": "1135280"
  },
  {
    "text": "to manage the meaning of chaos experiment results or to implement slos",
    "start": "1135280",
    "end": "1141919"
  },
  {
    "text": "and there are many types of probes like http probe or command probe kubernetes probe or",
    "start": "1141919",
    "end": "1148320"
  },
  {
    "text": "prometheus probe and you can implement this probes in different modes either",
    "start": "1148320",
    "end": "1153520"
  },
  {
    "text": "continuously or at the edge or whenever there's a failure happens",
    "start": "1153520",
    "end": "1159039"
  },
  {
    "text": "then only go and do this probe right so with this probes you can actually",
    "start": "1159039",
    "end": "1164400"
  },
  {
    "text": "um you know think of a chaos scenario and then you know declaratively define it and then",
    "start": "1164400",
    "end": "1170880"
  },
  {
    "text": "keep moving so this is how litmus landscape looks",
    "start": "1170880",
    "end": "1176640"
  },
  {
    "text": "when it comes to ci cd and observability in ci",
    "start": "1176640",
    "end": "1182799"
  },
  {
    "text": "what is possible is in in pipelines you can log into chaos center create a workflow",
    "start": "1182799",
    "end": "1190559"
  },
  {
    "text": "that creates a manifest and include that manifest into a stage of a pipeline all right and we",
    "start": "1190559",
    "end": "1197120"
  },
  {
    "text": "have uh tested this uh integration of ci there are tested",
    "start": "1197120",
    "end": "1202159"
  },
  {
    "text": "examples available for jenkins get lab data actions and a harness drone similarly in cd uh you can",
    "start": "1202159",
    "end": "1211440"
  },
  {
    "text": "trigger it pre-cd post cd or based on an event um happening",
    "start": "1211440",
    "end": "1217360"
  },
  {
    "text": "at the time of deployment example a pod version changes so you can run some chaos test so it's well tested with our",
    "start": "1217360",
    "end": "1225039"
  },
  {
    "text": "gopluck spinnaker and harness continuous delivery module",
    "start": "1225039",
    "end": "1230320"
  },
  {
    "text": "and similarly on the observability side it's got integrations with well-known um",
    "start": "1230320",
    "end": "1237120"
  },
  {
    "text": "observability platforms in general how you can do observability integration",
    "start": "1237120",
    "end": "1243280"
  },
  {
    "text": "with these platforms is uh by using litmus http pro",
    "start": "1243280",
    "end": "1249120"
  },
  {
    "text": "you can trigger an http request around chaos",
    "start": "1249120",
    "end": "1255280"
  },
  {
    "text": "and start interacting with the observability platform to go and read the slos or verify their slos and",
    "start": "1255280",
    "end": "1263520"
  },
  {
    "text": "then you know observing it on the observability platform",
    "start": "1263520",
    "end": "1268559"
  },
  {
    "text": "and there are some new use cases that have evolved in the recent years",
    "start": "1268960",
    "end": "1274080"
  },
  {
    "text": "politics and primarily uh it's around kubernetes becoming",
    "start": "1274080",
    "end": "1280720"
  },
  {
    "text": "a configuration control plane uh like google and those or azure uh or",
    "start": "1280720",
    "end": "1286480"
  },
  {
    "text": "cross plane or even kubernetes to manage openstack uh so the usage of kubernetes is",
    "start": "1286480",
    "end": "1292880"
  },
  {
    "text": "increasing and that really means that kubernetes becomes really really critical the reliability of kubernetes",
    "start": "1292880",
    "end": "1298480"
  },
  {
    "text": "becomes critical but there are many users who are using litmus to validate",
    "start": "1298480",
    "end": "1304000"
  },
  {
    "text": "uh such a platform implementation by introducing kubernetes faults and the",
    "start": "1304000",
    "end": "1310159"
  },
  {
    "text": "other one is um you know you will always have hybrid infrastructures even though you start uh",
    "start": "1310159",
    "end": "1316240"
  },
  {
    "text": "litmus with the kubernetes experiments you will see the need for uh an integrated chaos around bare metal",
    "start": "1316240",
    "end": "1323840"
  },
  {
    "text": "or other switches rack servers load balancer etc etc and also nowadays you",
    "start": "1323840",
    "end": "1330240"
  },
  {
    "text": "have multi-cloud you know scenarios or deployments where you're",
    "start": "1330240",
    "end": "1335280"
  },
  {
    "text": "using various cloud services either database services or app services or serverless",
    "start": "1335280",
    "end": "1341520"
  },
  {
    "text": "systems where you will start using different other tools in conjunction with chaos",
    "start": "1341520",
    "end": "1347840"
  },
  {
    "text": "for example load testers right a chaos tool plus load tester together can",
    "start": "1347840",
    "end": "1354240"
  },
  {
    "text": "simulate a chaos scenario for you so these are some of the newly",
    "start": "1354240",
    "end": "1359600"
  },
  {
    "text": "foreign use cases of repress so to summarize uh benefits of lateness",
    "start": "1359600",
    "end": "1365919"
  },
  {
    "text": "with litmus or with chaos engineering you increase uh your capability to inject false as",
    "start": "1365919",
    "end": "1373200"
  },
  {
    "text": "well so mean time to inject or identify a fault uh actually decreases your faster",
    "start": "1373200",
    "end": "1381200"
  },
  {
    "text": "and whenever faults happen or service outages happen you recover faster your mttr decreases and because",
    "start": "1381200",
    "end": "1389280"
  },
  {
    "text": "of one and two you are more agile and you are fixing issues or weaknesses so",
    "start": "1389280",
    "end": "1396640"
  },
  {
    "text": "the failures will eventually reduce right so these are the general benefits of chaos engineering and especially true",
    "start": "1396640",
    "end": "1403840"
  },
  {
    "text": "with the litmus together so we have a service available for litmus chaos",
    "start": "1403840",
    "end": "1410720"
  },
  {
    "text": "engineering control plane as a service for users you can get your own control plane by",
    "start": "1410720",
    "end": "1416640"
  },
  {
    "text": "signing up at litmus k all star cloud connect your uh targets and run chaos",
    "start": "1416640",
    "end": "1422159"
  },
  {
    "text": "experiment and you know observe um resilience or you know find an",
    "start": "1422159",
    "end": "1427760"
  },
  {
    "text": "opportunity to improve resilience with that uh let me turn over",
    "start": "1427760",
    "end": "1433679"
  },
  {
    "text": "to karthik to do a demo hello everyone",
    "start": "1433679",
    "end": "1440320"
  },
  {
    "text": "in this demonstration let us take a look at how you can install the litmus chaos",
    "start": "1440320",
    "end": "1446960"
  },
  {
    "text": "platform and how you can get started by running a simple chaos workflow against",
    "start": "1446960",
    "end": "1452320"
  },
  {
    "text": "a sample application and observe the impact of the chaos my name is karthik i am one of the",
    "start": "1452320",
    "end": "1458000"
  },
  {
    "text": "maintainers of the ritmos project we will get started by installing the",
    "start": "1458000",
    "end": "1463520"
  },
  {
    "text": "litmus helm chart on an eks cluster and then go on to add another cluster",
    "start": "1463520",
    "end": "1471200"
  },
  {
    "text": "this time on gke to our control plane in order to carry",
    "start": "1471200",
    "end": "1476559"
  },
  {
    "text": "out our chaos experiments we will use the docs docs.litmus chaos",
    "start": "1476559",
    "end": "1481840"
  },
  {
    "text": "dot io to help with our installation",
    "start": "1481840",
    "end": "1487320"
  },
  {
    "text": "let's copy the helm chart related commands",
    "start": "1488480",
    "end": "1493840"
  },
  {
    "text": "let's create litmus namespace",
    "start": "1498640",
    "end": "1502480"
  },
  {
    "text": "and go ahead and install the charts using the release name called as",
    "start": "1508720",
    "end": "1515760"
  },
  {
    "text": "chaos now let us watch the progress of the",
    "start": "1515760",
    "end": "1521840"
  },
  {
    "text": "installation our deployments are up",
    "start": "1521840",
    "end": "1530400"
  },
  {
    "text": "we need to be accessing the chaos center and for that we'll just make use of a",
    "start": "1531039",
    "end": "1537360"
  },
  {
    "text": "simple node port for this exercise",
    "start": "1537360",
    "end": "1543840"
  },
  {
    "text": "let me identify the node eyepiece alternatively we could",
    "start": "1546640",
    "end": "1553039"
  },
  {
    "text": "even use a load balancer it is left to the",
    "start": "1553039",
    "end": "1558720"
  },
  {
    "text": "user's choice you could also use ingress along with",
    "start": "1558720",
    "end": "1565120"
  },
  {
    "text": "certificates in order to access the service over a specific host name",
    "start": "1565120",
    "end": "1572400"
  },
  {
    "text": "with tls i am going to be editing",
    "start": "1572400",
    "end": "1577840"
  },
  {
    "text": "my front end service in order",
    "start": "1577840",
    "end": "1583120"
  },
  {
    "text": "to access my dashboard obtain load balancer path here",
    "start": "1583120",
    "end": "1591039"
  },
  {
    "text": "this is something you can do as part of your health values",
    "start": "1595840",
    "end": "1603720"
  },
  {
    "text": "we now have an external ip available to us so let us go ahead",
    "start": "1613520",
    "end": "1619919"
  },
  {
    "text": "and try to access this",
    "start": "1619919",
    "end": "1623960"
  },
  {
    "text": "now that we have our chaos center",
    "start": "1626320",
    "end": "1631679"
  },
  {
    "text": "up and available the load balancer is working let us go ahead and login",
    "start": "1631679",
    "end": "1637679"
  },
  {
    "text": "with the default credentials that is admin and litmus",
    "start": "1637679",
    "end": "1642799"
  },
  {
    "text": "so each user in kr center is allocated a dedicated chaos workspace",
    "start": "1643200",
    "end": "1649440"
  },
  {
    "text": "also called as the chaos project which is where they will be performing",
    "start": "1649440",
    "end": "1655840"
  },
  {
    "text": "the chaos workflows management creation of workflows",
    "start": "1655840",
    "end": "1661760"
  },
  {
    "text": "visualization of the workflows creation of new teams with",
    "start": "1661760",
    "end": "1667679"
  },
  {
    "text": "the invited members comparison of workflow runs etc",
    "start": "1667679",
    "end": "1673200"
  },
  {
    "text": "we will take a quick look at what all is possible in terms of configuration",
    "start": "1673200",
    "end": "1678880"
  },
  {
    "text": "in the chaos project before that now that we've logged in let us take a",
    "start": "1678880",
    "end": "1685760"
  },
  {
    "text": "look at our dashboard the kiosk dashboard is the first page",
    "start": "1685760",
    "end": "1692000"
  },
  {
    "text": "that grades us once we log into the chaos center we do not have any workflows that are",
    "start": "1692000",
    "end": "1698640"
  },
  {
    "text": "executed this was our first login but one of the most important things to",
    "start": "1698640",
    "end": "1704159"
  },
  {
    "text": "look for and check immediately after logging in into the chaos center",
    "start": "1704159",
    "end": "1710399"
  },
  {
    "text": "is whether we have a chaos agent connected",
    "start": "1710399",
    "end": "1715600"
  },
  {
    "text": "like you're already aware the redwoods microservices can be logically separated as",
    "start": "1716159",
    "end": "1722960"
  },
  {
    "text": "control plane micro services as well as execution plane microservices",
    "start": "1722960",
    "end": "1728080"
  },
  {
    "text": "or components we took it we took a look at what the control plane services",
    "start": "1728080",
    "end": "1733679"
  },
  {
    "text": "are that includes the the chaos center front end the graphql",
    "start": "1733679",
    "end": "1740159"
  },
  {
    "text": "based chaos server mongodb and auth server the execution plane components",
    "start": "1740159",
    "end": "1746240"
  },
  {
    "text": "are the ones that actually carry out and participate in the execution of a chaos workflow or the",
    "start": "1746240",
    "end": "1751919"
  },
  {
    "text": "implementation of the kiosk experiment business logic",
    "start": "1751919",
    "end": "1757840"
  },
  {
    "text": "and in litmus you could connect different clusters",
    "start": "1758399",
    "end": "1763440"
  },
  {
    "text": "to the control plane and carry out chaos against micro services residing in that cluster",
    "start": "1763440",
    "end": "1770960"
  },
  {
    "text": "and the entity that helps you to connect your clusters into the control plane is the chaos agent",
    "start": "1770960",
    "end": "1778159"
  },
  {
    "text": "also known as the subscriber the subscriber takes instructions from",
    "start": "1778159",
    "end": "1784080"
  },
  {
    "text": "the chaos control plane and executes them on the execution plane",
    "start": "1784080",
    "end": "1789279"
  },
  {
    "text": "that is the target environment or the cluster that you've added in this case we see that a self agent",
    "start": "1789279",
    "end": "1795760"
  },
  {
    "text": "has auto magically register itself in our chaos center it is an active stage",
    "start": "1795760",
    "end": "1803039"
  },
  {
    "text": "what this means is that the cluster where we have installed",
    "start": "1803039",
    "end": "1808159"
  },
  {
    "text": "the control plane microservices automatically qualifies as an environment in which you can do your",
    "start": "1808159",
    "end": "1814159"
  },
  {
    "text": "chaos in our demonstration we would be connecting an external cluster which",
    "start": "1814159",
    "end": "1820960"
  },
  {
    "text": "houses our sample application but this is the self agent that's available for you",
    "start": "1820960",
    "end": "1827919"
  },
  {
    "text": "so you could have micro services that you want to do chaos upon on the same cluster and this helps",
    "start": "1827919",
    "end": "1833279"
  },
  {
    "text": "you execute it next useful thing to look forward to",
    "start": "1833279",
    "end": "1838480"
  },
  {
    "text": "in the chaos center is the chaos hub the chaos hub is an open",
    "start": "1838480",
    "end": "1844399"
  },
  {
    "text": "catalogue of several faults or chaos experiments which you can piece",
    "start": "1844399",
    "end": "1850159"
  },
  {
    "text": "together perform a chaos workflow there are different number of",
    "start": "1850159",
    "end": "1855200"
  },
  {
    "text": "experiments there are different types of experiments totaling 50 experiments in the chaos hub",
    "start": "1855200",
    "end": "1861840"
  },
  {
    "text": "and the chaos hub is also the place where you have some demo or illustration",
    "start": "1861840",
    "end": "1866880"
  },
  {
    "text": "workflows that you can use to kick start your evaluation process of the kiosk project fitness",
    "start": "1866880",
    "end": "1874398"
  },
  {
    "text": "the experiments have been categorized based on their nature and based on the environment",
    "start": "1875120",
    "end": "1881919"
  },
  {
    "text": "they can be applied in that includes generic kubernetes faults",
    "start": "1881919",
    "end": "1890000"
  },
  {
    "text": "faults on aws using the ssm or the aws system manager",
    "start": "1890000",
    "end": "1898000"
  },
  {
    "text": "faults executed against gcp environments azure vmware",
    "start": "1898000",
    "end": "1903760"
  },
  {
    "text": "as well as certain experiments crafted for popular applications like kafka and",
    "start": "1903760",
    "end": "1909360"
  },
  {
    "text": "cassandra the chaos center also",
    "start": "1909360",
    "end": "1914559"
  },
  {
    "text": "provides you with a view into how your workflow execution has taken place over a period",
    "start": "1914559",
    "end": "1922080"
  },
  {
    "text": "of time you can compare workflow runs once you have them",
    "start": "1922080",
    "end": "1928000"
  },
  {
    "text": "to see whether your resilience trends are on an upward curve or",
    "start": "1928000",
    "end": "1933679"
  },
  {
    "text": "whether they are falling away what actually needs to be taken",
    "start": "1933679",
    "end": "1938799"
  },
  {
    "text": "the settings page in kr center is useful to manage your account",
    "start": "1941360",
    "end": "1947519"
  },
  {
    "text": "to create new users on the platform as an admin you could create new users",
    "start": "1947519",
    "end": "1954480"
  },
  {
    "text": "and you can also create teams in each project where you invite",
    "start": "1954480",
    "end": "1960559"
  },
  {
    "text": "members that are already created on the project that is the admin can go ahead and create",
    "start": "1960559",
    "end": "1966960"
  },
  {
    "text": "different users providing them with username and password the respective users can log in with",
    "start": "1966960",
    "end": "1972799"
  },
  {
    "text": "their credentials and once they get into their chaos project they can come to settings",
    "start": "1972799",
    "end": "1979679"
  },
  {
    "text": "go to the teams tab and invite members into their own project",
    "start": "1979679",
    "end": "1984960"
  },
  {
    "text": "with specific role so let us provides our back at the chaos center level the users are classified as",
    "start": "1984960",
    "end": "1992159"
  },
  {
    "text": "owners editors and viewers each with desired set permissions",
    "start": "1992159",
    "end": "1999200"
  },
  {
    "text": "in managing the chaos workflows the other option that you have on",
    "start": "1999600",
    "end": "2005200"
  },
  {
    "text": "settings is to enable the gitops feature",
    "start": "2005200",
    "end": "2010240"
  },
  {
    "text": "you could store the workflows that you create on the kiosk center locally in litmus which is the default",
    "start": "2010240",
    "end": "2017120"
  },
  {
    "text": "option or you could choose to push these workflows into a git source",
    "start": "2017120",
    "end": "2024799"
  },
  {
    "text": "the git source can be public or a private repository",
    "start": "2025279",
    "end": "2030559"
  },
  {
    "text": "and whatever workflows are constructed on the platform will be committed into the git repository",
    "start": "2030559",
    "end": "2036480"
  },
  {
    "text": "and there's also the option of changing your workflow specs on this git",
    "start": "2036480",
    "end": "2042320"
  },
  {
    "text": "source and have them reflected for future iterations of the workflow run",
    "start": "2042320",
    "end": "2047919"
  },
  {
    "text": "on the cluster on your chaos center",
    "start": "2047919",
    "end": "2053279"
  },
  {
    "text": "the repository used for pushing your workflows can be the same",
    "start": "2053919",
    "end": "2058960"
  },
  {
    "text": "as the one that powers your chaos hub or it could be",
    "start": "2058960",
    "end": "2065440"
  },
  {
    "text": "a different repo altogether talking about",
    "start": "2065440",
    "end": "2070638"
  },
  {
    "text": "the chaos artifact source the chaos hub you could create your own chaos hubs",
    "start": "2070639",
    "end": "2077679"
  },
  {
    "text": "coming from your own git repositories",
    "start": "2077679",
    "end": "2082720"
  },
  {
    "text": "it is expected for these repositories to house the chaos experiment artifacts in a",
    "start": "2083040",
    "end": "2089839"
  },
  {
    "text": "specific folder structure the details of which is available in the documentation",
    "start": "2089839",
    "end": "2097200"
  },
  {
    "text": "you could create again a public canonical source for the chaos hub or it",
    "start": "2097200",
    "end": "2102640"
  },
  {
    "text": "could be a private chaos hub in case you're operating",
    "start": "2102640",
    "end": "2107920"
  },
  {
    "text": "out of air gap or disconnected environments or have restrictions on how how you could",
    "start": "2107920",
    "end": "2114400"
  },
  {
    "text": "consume artifact sources you could be using the private chaos hub",
    "start": "2114400",
    "end": "2119920"
  },
  {
    "text": "feature to create private repositories in your own environment and pull them onto the chaos",
    "start": "2119920",
    "end": "2127200"
  },
  {
    "text": "center dashboard there are a few other settings",
    "start": "2127200",
    "end": "2133200"
  },
  {
    "text": "that are available on the chaos center typically used as part of the data operations as",
    "start": "2133200",
    "end": "2140960"
  },
  {
    "text": "part of a chaos practice for example you could influence",
    "start": "2140960",
    "end": "2146079"
  },
  {
    "text": "where your images for the the chaos",
    "start": "2146079",
    "end": "2151280"
  },
  {
    "text": "workflow parts are coming from you could be using the default",
    "start": "2151280",
    "end": "2156640"
  },
  {
    "text": "docker dot io registry and the litmus repository",
    "start": "2156640",
    "end": "2161839"
  },
  {
    "text": "or you could be using your own registries from where you pull in",
    "start": "2161839",
    "end": "2167680"
  },
  {
    "text": "the experiment and workflow parts the usage statistics",
    "start": "2167680",
    "end": "2173760"
  },
  {
    "text": "is a very quick provides you with a very quick view of the execution thus far",
    "start": "2173760",
    "end": "2180160"
  },
  {
    "text": "and you could actually see how many experiments you've run how many workflows you've run how many users are there on the platform",
    "start": "2180160",
    "end": "2186800"
  },
  {
    "text": "etc this is something that is useful for the admin to generate some",
    "start": "2186800",
    "end": "2192480"
  },
  {
    "text": "helpful reports so with this introduction",
    "start": "2192480",
    "end": "2198480"
  },
  {
    "text": "to the various screens possible on the chaos center let us go ahead",
    "start": "2198480",
    "end": "2204480"
  },
  {
    "text": "and connect our target environment we spoke about a gke cluster on which we",
    "start": "2204480",
    "end": "2210960"
  },
  {
    "text": "have our sample app residing so let us connect that to the",
    "start": "2210960",
    "end": "2216800"
  },
  {
    "text": "center let us add that to the control plane then begin with our first chaos workflow",
    "start": "2216800",
    "end": "2223599"
  },
  {
    "text": "we talked about the agent that is helping us to connect",
    "start": "2223599",
    "end": "2229760"
  },
  {
    "text": "external clusters to our control plane the installation of the agent",
    "start": "2229760",
    "end": "2235280"
  },
  {
    "text": "on a remote cluster today is aided",
    "start": "2235280",
    "end": "2240480"
  },
  {
    "text": "by tool call it ctl i have just opened up the readme",
    "start": "2240480",
    "end": "2246480"
  },
  {
    "text": "page for the litmus ctl on the git repository it was chaos fitness ctl",
    "start": "2246480",
    "end": "2253599"
  },
  {
    "text": "we're first going to go ahead and pull this particular binary",
    "start": "2255040",
    "end": "2260560"
  },
  {
    "text": "you could do that from the release page or you could just use the table on the readme to pick the",
    "start": "2260560",
    "end": "2267599"
  },
  {
    "text": "litmus util binary for your os distribu i have just pulled",
    "start": "2267599",
    "end": "2272800"
  },
  {
    "text": "it already and i am going to go ahead and follow the steps",
    "start": "2272800",
    "end": "2278720"
  },
  {
    "text": "for the interactive execution of this cli to set up my agent",
    "start": "2278720",
    "end": "2285520"
  },
  {
    "text": "so the first step here would be to create",
    "start": "2285520",
    "end": "2290560"
  },
  {
    "text": "your account or to set the account on the on the working space that you have where you",
    "start": "2290560",
    "end": "2298480"
  },
  {
    "text": "have installed the litmus ctl tool so let me go ahead and perform the",
    "start": "2298480",
    "end": "2304160"
  },
  {
    "text": "ctl set account step so this is going to help you with",
    "start": "2304160",
    "end": "2312000"
  },
  {
    "text": "setting up the right keys and the auth in order to access",
    "start": "2312000",
    "end": "2317440"
  },
  {
    "text": "the the control plane with your credentials for your project",
    "start": "2317440",
    "end": "2322800"
  },
  {
    "text": "we're going to provide the end point where litmus is running let us take a look",
    "start": "2322800",
    "end": "2329119"
  },
  {
    "text": "at our control plane endpoint so this is it",
    "start": "2329119",
    "end": "2335200"
  },
  {
    "text": "the next step is to provide our user detail i am trying to perform all these",
    "start": "2339680",
    "end": "2344800"
  },
  {
    "text": "operations as admin so i'm going to provide the admin credentials",
    "start": "2344800",
    "end": "2352440"
  },
  {
    "text": "now my configuration is set you could take a look at",
    "start": "2354000",
    "end": "2359440"
  },
  {
    "text": "the configuration in the litmus config file you can see that there are some tokens available here",
    "start": "2359440",
    "end": "2368599"
  },
  {
    "text": "my next step would be to create the agent let us take a look at the instruction",
    "start": "2369760",
    "end": "2376480"
  },
  {
    "text": "for that fitness ctl create agent is the command",
    "start": "2376480",
    "end": "2382400"
  },
  {
    "text": "so let me go ahead and create the agent",
    "start": "2382400",
    "end": "2387599"
  },
  {
    "text": "we are doing this in interactive mode so it asks us for a few questions",
    "start": "2387599",
    "end": "2393119"
  },
  {
    "text": "i am going to select the admin project i have the option of setting up the",
    "start": "2393119",
    "end": "2398720"
  },
  {
    "text": "agent in a cluster-wide mode or a namespace mode",
    "start": "2398720",
    "end": "2404000"
  },
  {
    "text": "by following the cluster-wide approach you will be able to run chaos workflows",
    "start": "2404000",
    "end": "2409359"
  },
  {
    "text": "targeting microservices that reside across different namespaces on your cluster",
    "start": "2409359",
    "end": "2416720"
  },
  {
    "text": "which is ideal if you have autonomy over the cluster or you could be connecting it in",
    "start": "2416720",
    "end": "2422160"
  },
  {
    "text": "namespace mode which means that you will be able to target microservices",
    "start": "2422160",
    "end": "2427200"
  },
  {
    "text": "only that are running in the namespace where the agent is installed and this is helpful",
    "start": "2427200",
    "end": "2433200"
  },
  {
    "text": "when you're running in shared environments where there are folks users",
    "start": "2433200",
    "end": "2439839"
  },
  {
    "text": "having their own test environments in different name spaces i am going to select the cluster mode",
    "start": "2439839",
    "end": "2447920"
  },
  {
    "text": "i can provide some metadata about the agent",
    "start": "2448240",
    "end": "2453599"
  },
  {
    "text": "and the cluster where we are installing it i've just gone ahead and provided some",
    "start": "2453599",
    "end": "2460000"
  },
  {
    "text": "information it asks whether we want to do some",
    "start": "2460000",
    "end": "2466079"
  },
  {
    "text": "checks against the control plane",
    "start": "2466079",
    "end": "2472480"
  },
  {
    "text": "in terms of ssl it asks whether we want to install the agent in a specific node",
    "start": "2472480",
    "end": "2478319"
  },
  {
    "text": "we do not have these compulsions at this point",
    "start": "2478319",
    "end": "2482800"
  },
  {
    "text": "and we are going to install the agent the default name space that's with us",
    "start": "2487200",
    "end": "2492880"
  },
  {
    "text": "using the default service account call it miss you could choose an existing namespace and an existing",
    "start": "2493280",
    "end": "2500319"
  },
  {
    "text": "service account if you would like to do so",
    "start": "2500319",
    "end": "2505440"
  },
  {
    "text": "it provides us with a summary of the options that we selected with that let's go ahead and",
    "start": "2505440",
    "end": "2511520"
  },
  {
    "text": "install our agent",
    "start": "2511520",
    "end": "2514800"
  },
  {
    "text": "the agent installation progress can be tracked either on the console",
    "start": "2518240",
    "end": "2525119"
  },
  {
    "text": "or you can also go ahead and take a look the chaos center",
    "start": "2525119",
    "end": "2530560"
  },
  {
    "text": "and check whether our agent is active it is in pending state right now",
    "start": "2530560",
    "end": "2537200"
  },
  {
    "text": "the deployments are in place and we're just going to wait for them to be active and establish connectivity",
    "start": "2537200",
    "end": "2545359"
  },
  {
    "text": "with the control plane they're all running right now and we",
    "start": "2545359",
    "end": "2550560"
  },
  {
    "text": "should have this active in a few seconds time",
    "start": "2550560",
    "end": "2554560"
  },
  {
    "text": "the subscriber as you can see installed with a set of other components",
    "start": "2556160",
    "end": "2562880"
  },
  {
    "text": "most of which are kubernetes controllers the ks operator the event tracker and",
    "start": "2562880",
    "end": "2568079"
  },
  {
    "text": "workflow controllers are custom communities controllers that act upon different custom resources and",
    "start": "2568079",
    "end": "2574880"
  },
  {
    "text": "participate in the chaos execution process the exporter happens to be a",
    "start": "2574880",
    "end": "2579920"
  },
  {
    "text": "prometheus exporter that provides chaos metrics our agent is active right now and this",
    "start": "2579920",
    "end": "2587359"
  },
  {
    "text": "means that our demo environment is good for taking chaos",
    "start": "2587359",
    "end": "2594078"
  },
  {
    "text": "let's take a look at how you can construct chaos workflows now",
    "start": "2594560",
    "end": "2599920"
  },
  {
    "text": "now that we've connected our agent successfully let us go ahead and create our first workflow",
    "start": "2600160",
    "end": "2607119"
  },
  {
    "text": "like we said this is going to be a simple podcall chaos experiment along with an",
    "start": "2607119",
    "end": "2612480"
  },
  {
    "text": "availability check against the the website the potato head application",
    "start": "2612480",
    "end": "2617920"
  },
  {
    "text": "website let us choose our agent",
    "start": "2617920",
    "end": "2622960"
  },
  {
    "text": "this is the agent that we just connected this is the gke cluster named demo",
    "start": "2622960",
    "end": "2629599"
  },
  {
    "text": "we have different options for creating workflows we could be using a predefined workflow we could be cloning an existing",
    "start": "2629599",
    "end": "2636880"
  },
  {
    "text": "workflow template or we could be importing something that is handcrafted and when i said predefined workflow",
    "start": "2636880",
    "end": "2644000"
  },
  {
    "text": "this is the one that is available to us from the chaos hub which is where you might have pushed your workflows earlier",
    "start": "2644000",
    "end": "2650720"
  },
  {
    "text": "now since this is our first workflow it is constructed by picking the files or the experiments",
    "start": "2650720",
    "end": "2656720"
  },
  {
    "text": "from the chaos hub i have selected the default embedded chaos hub",
    "start": "2656720",
    "end": "2663119"
  },
  {
    "text": "we'll just name it as a custom workflow",
    "start": "2663119",
    "end": "2668400"
  },
  {
    "text": "we will pick an experiment you could search for the desired experiment or the fault here i'm just",
    "start": "2668400",
    "end": "2674400"
  },
  {
    "text": "selecting the power delete one and now we'll go ahead and tune it",
    "start": "2674400",
    "end": "2681040"
  },
  {
    "text": "this is some context or metadata around the experiment i am looking for a deployment in the",
    "start": "2681520",
    "end": "2688400"
  },
  {
    "text": "default space with the label that is named potato head main you could see",
    "start": "2688400",
    "end": "2695599"
  },
  {
    "text": "that litmus provides you with some asset discovery features where you can see the micro services that are available on the",
    "start": "2695599",
    "end": "2702079"
  },
  {
    "text": "system i am going to select the deployment that carries the label potato main",
    "start": "2702079",
    "end": "2709119"
  },
  {
    "text": "and this is the micro service that pieces together the different components and gives you the mr potato rendering on",
    "start": "2709119",
    "end": "2715440"
  },
  {
    "text": "the web page now that we've selected the microservice against which we want to do chaos let us",
    "start": "2715440",
    "end": "2722640"
  },
  {
    "text": "go ahead and add our availability check or the constraint",
    "start": "2722640",
    "end": "2728800"
  },
  {
    "text": "the hypothesis validation as part of experiment runs can be carried out using something called switches probes",
    "start": "2728800",
    "end": "2735680"
  },
  {
    "text": "we are going to make use of an http probe for this particular demonstration and we",
    "start": "2735680",
    "end": "2743280"
  },
  {
    "text": "are going to be running this probe in a continuous mode we're going to set up a polling interval of one second",
    "start": "2743280",
    "end": "2748720"
  },
  {
    "text": "we're going to be looking for the availability of the website every second",
    "start": "2748720",
    "end": "2754160"
  },
  {
    "text": "these are some properties that you could provide am providing",
    "start": "2754640",
    "end": "2759680"
  },
  {
    "text": "minimal values just one second for the polling interval just one retry if the",
    "start": "2759680",
    "end": "2766560"
  },
  {
    "text": "response code is not 200 and we're going to begin this let's say a second after the experiment",
    "start": "2766560",
    "end": "2773359"
  },
  {
    "text": "execution begins so you have an option to abort the workflow in case",
    "start": "2773359",
    "end": "2780240"
  },
  {
    "text": "the constraint is not validated you could choose the stop and failure to be true we will set it to false for this",
    "start": "2780240",
    "end": "2786720"
  },
  {
    "text": "run i'm going to provide the url",
    "start": "2786720",
    "end": "2792240"
  },
  {
    "text": "of the potato head application in my probe and i'm going to provide a pretty",
    "start": "2792240",
    "end": "2799359"
  },
  {
    "text": "aggressive timeout we're going to be using this is in milliseconds by the way",
    "start": "2799359",
    "end": "2806800"
  },
  {
    "text": "and we're going to be using",
    "start": "2806800",
    "end": "2810240"
  },
  {
    "text": "a get operation we're going to be looking for 200 response when we hit the url",
    "start": "2811839",
    "end": "2820160"
  },
  {
    "text": "with this conditions let us go ahead and create our pro",
    "start": "2820400",
    "end": "2826880"
  },
  {
    "text": "i've added my probe i'll take a look at the other tunable supported by this",
    "start": "2827520",
    "end": "2832640"
  },
  {
    "text": "experiment you could run this experiment for a total duration",
    "start": "2832640",
    "end": "2837920"
  },
  {
    "text": "of 30 seconds with a 10 second interval that means a pod is going to be picked and killed",
    "start": "2837920",
    "end": "2845119"
  },
  {
    "text": "every 10 seconds up until the total chaos duration of 30 seconds is the upper bound",
    "start": "2845119",
    "end": "2851520"
  },
  {
    "text": "we just want one iteration of chaos so i'll just probably change the duration to a much smaller value",
    "start": "2851520",
    "end": "2860160"
  },
  {
    "text": "one aspect to note is that the duration here talks about the chaos duration",
    "start": "2860480",
    "end": "2865520"
  },
  {
    "text": "alone not for the entire experiment the experiment in litmus performs pre chaos and a post chaos check to ensure",
    "start": "2865520",
    "end": "2872880"
  },
  {
    "text": "the system is left in the healthy state and that takes a few seconds up and over the chaos duration that you",
    "start": "2872880",
    "end": "2879680"
  },
  {
    "text": "have specified you could also add more environment variables depending upon your need",
    "start": "2879680",
    "end": "2887119"
  },
  {
    "text": "let's finish it and keep it simple we have the option of cleaning up the chaos resources",
    "start": "2887119",
    "end": "2893280"
  },
  {
    "text": "immediately after the run and we have the option of keeping them as well in our case let's keep them because that",
    "start": "2893280",
    "end": "2900319"
  },
  {
    "text": "helps us to look at the experiment pod logs let us click next",
    "start": "2900319",
    "end": "2906480"
  },
  {
    "text": "and provide weightage to this experiment this helps with the calculation of a resiliency score",
    "start": "2906480",
    "end": "2912800"
  },
  {
    "text": "that you can use to compare workflow runs we're going to give all points to this",
    "start": "2912800",
    "end": "2918559"
  },
  {
    "text": "workflow as we have a single fault or experiment chosen",
    "start": "2918559",
    "end": "2923839"
  },
  {
    "text": "we have the option of scheduling it repeatedly or scale it scheduling it just once immediately which is the",
    "start": "2923839",
    "end": "2930480"
  },
  {
    "text": "option that we will take this is a summary of all the options",
    "start": "2930480",
    "end": "2936319"
  },
  {
    "text": "that we selected while constructing the workflow now let's say finish",
    "start": "2936319",
    "end": "2943400"
  },
  {
    "text": "this triggers the workflow so you have the first entry in the workflows page right now",
    "start": "2945359",
    "end": "2952079"
  },
  {
    "text": "let's take a look at what is happening as part of the workflow run you could use the workflow visualization",
    "start": "2952559",
    "end": "2959359"
  },
  {
    "text": "graph to track the progress of your chaos workflow",
    "start": "2959359",
    "end": "2964960"
  },
  {
    "text": "for each experiment that you picked within a workflow you would have typically two steps",
    "start": "2964960",
    "end": "2970400"
  },
  {
    "text": "performed so though that is easily customizable the first step",
    "start": "2970400",
    "end": "2975920"
  },
  {
    "text": "installs the fault template from the chaos hub this carries low level details of the",
    "start": "2975920",
    "end": "2982559"
  },
  {
    "text": "fault such as the images that are brought up run the part carrying out the fall",
    "start": "2982559",
    "end": "2988000"
  },
  {
    "text": "business logic now other such details around",
    "start": "2988000",
    "end": "2993359"
  },
  {
    "text": "the the fault and then the next step which is what you see right now called as part delete is when",
    "start": "2993359",
    "end": "3000640"
  },
  {
    "text": "the actual chaos invocation happens the chaos engine resource which is",
    "start": "3000640",
    "end": "3006800"
  },
  {
    "text": "the user facing resource of litmus which is where you might be going and adding your probes adding your durations and",
    "start": "3006800",
    "end": "3013200"
  },
  {
    "text": "lot of other tunables that is going to be created",
    "start": "3013200",
    "end": "3018960"
  },
  {
    "text": "and the custom controller called ks operator that we just saw when we set up the agent",
    "start": "3018960",
    "end": "3025680"
  },
  {
    "text": "it's going to pick up the chaos engine and run the fault",
    "start": "3025680",
    "end": "3031200"
  },
  {
    "text": "let's move to the lens dashboard to see what's happening you can see the potato main application",
    "start": "3031200",
    "end": "3037440"
  },
  {
    "text": "has been killed and a newer one is coming up",
    "start": "3037440",
    "end": "3042559"
  },
  {
    "text": "let's go ahead and look at what's happening on the web page i've just gone ahead and refreshed it",
    "start": "3042559",
    "end": "3048800"
  },
  {
    "text": "it is to be noted that this particular application carries an init delay",
    "start": "3048800",
    "end": "3055920"
  },
  {
    "text": "that is it is going to take some time for the application to be ready now it has come up in fairly quick time",
    "start": "3055920",
    "end": "3063599"
  },
  {
    "text": "but let's take a look at what happened as part of our run in the dashboard",
    "start": "3063599",
    "end": "3070720"
  },
  {
    "text": "you can see there was a slight dip in the probe success percentage there was a small spike in access duration as well",
    "start": "3075200",
    "end": "3083839"
  },
  {
    "text": "the red area that you see on the grafana dashboard is coming from an annotation that we added",
    "start": "3083839",
    "end": "3089680"
  },
  {
    "text": "the annotation source being a metric that is provided by the chaos exporter",
    "start": "3089680",
    "end": "3096160"
  },
  {
    "text": "it's available in prometheus so we have the metric here",
    "start": "3096160",
    "end": "3102240"
  },
  {
    "text": "it is the litmus chaos cluster scope experiments there are other metrics useful that you can use to construct",
    "start": "3102240",
    "end": "3107839"
  },
  {
    "text": "your own dashboards we've used that",
    "start": "3107839",
    "end": "3113599"
  },
  {
    "text": "to find out the exact period when the chaos has been active or the experiment has been active rather",
    "start": "3113599",
    "end": "3120720"
  },
  {
    "text": "when the experiment was active you saw that the probe success percentage dipped a little bit the excess duration spiked",
    "start": "3120720",
    "end": "3127119"
  },
  {
    "text": "then it has come back to normal state we had set a threshold on our axis",
    "start": "3127119",
    "end": "3132240"
  },
  {
    "text": "duration which is why you see the broader red area the moment it crossed 25 milliseconds",
    "start": "3132240",
    "end": "3140480"
  },
  {
    "text": "now let's take a look at what's really happened on the workflow as expected",
    "start": "3141680",
    "end": "3147119"
  },
  {
    "text": "workflow has failed our initial hypothesis well we said our initial hypothesis is",
    "start": "3147119",
    "end": "3154800"
  },
  {
    "text": "that there should be no dip in the probe success percentage and no spike in access duration that did not happen but we did brace",
    "start": "3154800",
    "end": "3161839"
  },
  {
    "text": "ourselves for this problem because there was just a single replica of the potato",
    "start": "3161839",
    "end": "3167680"
  },
  {
    "text": "main micro service you can see as you scroll down in the logs",
    "start": "3167680",
    "end": "3172960"
  },
  {
    "text": "the probes have failed we did have an aggressive",
    "start": "3172960",
    "end": "3178720"
  },
  {
    "text": "check against our application availability and that failed",
    "start": "3178720",
    "end": "3185440"
  },
  {
    "text": "what is the mitigation you could be scaling up your potato main micro service to multiple replicas",
    "start": "3185440",
    "end": "3192400"
  },
  {
    "text": "and repeat the same fault in which case you will have the",
    "start": "3192400",
    "end": "3197839"
  },
  {
    "text": "workflow succeed as for the initial hypothesis or the desired case",
    "start": "3197839",
    "end": "3203119"
  },
  {
    "text": "where you would not see any downtime on the probe success percentage or access duration",
    "start": "3203119",
    "end": "3210000"
  },
  {
    "text": "once you have the workflow runs executed thus you can go to the observability section",
    "start": "3210000",
    "end": "3217119"
  },
  {
    "text": "take a look at the workflows compare them and download reports",
    "start": "3217119",
    "end": "3223839"
  },
  {
    "text": "the workflow observability section here is helpful",
    "start": "3223839",
    "end": "3229839"
  },
  {
    "text": "in checking how your application holds up to a particular fault across",
    "start": "3229839",
    "end": "3236160"
  },
  {
    "text": "different builds or different environments or different releases",
    "start": "3236160",
    "end": "3242319"
  },
  {
    "text": "so this was a very quick execution of a simple kiosk workflow",
    "start": "3242319",
    "end": "3247359"
  },
  {
    "text": "on a sample micro services application which is residing in a remote cluster",
    "start": "3247359",
    "end": "3253040"
  },
  {
    "text": "that we connected using the litmus ctl",
    "start": "3253040",
    "end": "3258160"
  },
  {
    "text": "and we took a look at how you could use the interleave dashboard and grafana",
    "start": "3258160",
    "end": "3263440"
  },
  {
    "text": "use the litmus matrix to see when the kiosk is actually active and how you could go ahead and",
    "start": "3263440",
    "end": "3270160"
  },
  {
    "text": "observe details of that run using the observability page",
    "start": "3270160",
    "end": "3276559"
  },
  {
    "text": "using the analytics for the workflow here so that was that is a wrap-up of",
    "start": "3276559",
    "end": "3284480"
  },
  {
    "text": "the litmus demonstration hope you get a chance to try out this tool and do provide us your feedback",
    "start": "3284480",
    "end": "3293200"
  },
  {
    "text": "thank you so that's a good demo by kothik thank",
    "start": "3293200",
    "end": "3299280"
  },
  {
    "text": "you karthik and",
    "start": "3299280",
    "end": "3302480"
  },
  {
    "text": "thank you very much for uh watching this webinar and we are reachable at",
    "start": "3304400",
    "end": "3309760"
  },
  {
    "text": "kubernetes flag community and the litmus channel please do reach out to us thank you",
    "start": "3309760",
    "end": "3318040"
  }
]