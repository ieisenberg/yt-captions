[
  {
    "text": "hi everybody we're gonna go ahead and get started my name is Tim Hendricks I'm the track host for this session",
    "start": "30",
    "end": "5549"
  },
  {
    "text": "I'm from Styron oppa and so I'm especially excited to host this talk a",
    "start": "5549",
    "end": "11070"
  },
  {
    "text": "reminder we'll have five minutes for Q&A at the end I'll run around and get you the mic so the recording will pick up",
    "start": "11070",
    "end": "16170"
  },
  {
    "text": "your questions also remember to rate the talk go and login to sched to go ahead and do that",
    "start": "16170",
    "end": "22109"
  },
  {
    "text": "so without further ado I'll give you a shocker he's gonna be talking a bit",
    "start": "22109",
    "end": "27359"
  },
  {
    "text": "about policy problems in the data Lake",
    "start": "27359",
    "end": "31189"
  },
  {
    "text": "hola thank you Tim so my name is ash nutter I",
    "start": "34640",
    "end": "39719"
  },
  {
    "text": "am a software engineer at styro and we are the makers of the open policy agent",
    "start": "39719",
    "end": "45450"
  },
  {
    "text": "project and I'm also a poor contributor to the project and so today is special",
    "start": "45450",
    "end": "51719"
  },
  {
    "text": "for me because it's my first time speaking at Q Khan so I'd like to thank you all for sharing your time with me",
    "start": "51719",
    "end": "59538"
  },
  {
    "text": "so in today's talk I'm gonna discuss data leaks their architectures and the security challenges that they face then",
    "start": "59899",
    "end": "67470"
  },
  {
    "text": "introduce the open policy agent to talk about its features its use cases and then we'll drill down into a data",
    "start": "67470",
    "end": "73290"
  },
  {
    "text": "protection use case so in today's world data is king and so it can be data from",
    "start": "73290",
    "end": "82799"
  },
  {
    "text": "your cell phone your laptop your tablet data is pervasive its abundant and it",
    "start": "82799",
    "end": "88320"
  },
  {
    "text": "just keeps on growing and so this is an awesome opportunity for businesses",
    "start": "88320",
    "end": "93420"
  },
  {
    "text": "because now they can use all this data and they can analyze this data they can drop trends from this data and they can",
    "start": "93420",
    "end": "99930"
  },
  {
    "text": "use it to drive customer experience and they can also use this data to drive the growth of their companies and so with",
    "start": "99930",
    "end": "108210"
  },
  {
    "text": "data being so critical and so sensitive it is really important that this data be",
    "start": "108210",
    "end": "113640"
  },
  {
    "text": "protected especially in today's world where cyber attacks are pretty common",
    "start": "113640",
    "end": "119070"
  },
  {
    "text": "and the threat of data breaches is a reality for businesses both big and small and so with these attacks and",
    "start": "119070",
    "end": "127530"
  },
  {
    "text": "breaches your companies are not only going to get fined but more importantly you are",
    "start": "127530",
    "end": "132690"
  },
  {
    "text": "to lose the customers trust and so we need a really good solution to solve",
    "start": "132690",
    "end": "139680"
  },
  {
    "text": "this important problem and so what",
    "start": "139680",
    "end": "145980"
  },
  {
    "text": "companies normally do they are going to build up a data Lake to store their data",
    "start": "145980",
    "end": "151790"
  },
  {
    "text": "and so basically what is a data Lake and so a data Lake is nothing but a large",
    "start": "151790",
    "end": "158730"
  },
  {
    "text": "storage repository which can store massive amounts of raw data in its",
    "start": "158730",
    "end": "164160"
  },
  {
    "text": "native format until it is really needed and some of the features of data lakes",
    "start": "164160",
    "end": "170400"
  },
  {
    "text": "are like centralized content so you can store your data from different sources in this data Lake and once it is stored",
    "start": "170400",
    "end": "178200"
  },
  {
    "text": "you can that later use it for applications like machine learning for analysis whatever you choose and since",
    "start": "178200",
    "end": "185490"
  },
  {
    "text": "this data Lake is like a central store for your entire division or for an entire unit it is capable of significant",
    "start": "185490",
    "end": "192330"
  },
  {
    "text": "scalability data leaks can support multiple data types so you can have",
    "start": "192330",
    "end": "197520"
  },
  {
    "text": "structured semi-structured unstructured data can all be put inside your data Lake and finally you have resource",
    "start": "197520",
    "end": "205050"
  },
  {
    "text": "optimization so by decoupling the compute from the storage you can scale",
    "start": "205050",
    "end": "211410"
  },
  {
    "text": "both independently and so now you can store your data which in the cheap manner in your data Lake as compared to",
    "start": "211410",
    "end": "217590"
  },
  {
    "text": "databases and so you have all this data",
    "start": "217590",
    "end": "223250"
  },
  {
    "text": "storage is cheap but data in its raw form is rarely meaningful and cannot be",
    "start": "223250",
    "end": "229830"
  },
  {
    "text": "used by applications for image at consumption and so you do not want to end up in a situation where you have",
    "start": "229830",
    "end": "236160"
  },
  {
    "text": "this massive amount of data which you are just holding and you can't use any of it and the one which is even",
    "start": "236160",
    "end": "243720"
  },
  {
    "text": "useful for you you've made it difficult to access and so to solve this problem companies",
    "start": "243720",
    "end": "250530"
  },
  {
    "text": "typically build out a data Lake platform in which you're going to ingest your data you're going to store it and then",
    "start": "250530",
    "end": "258630"
  },
  {
    "text": "make it available for analysis in the future and so this figure illustrates a",
    "start": "258630",
    "end": "264570"
  },
  {
    "text": "typical workflow for a data lake platform in which you use cough cough or ingestion you can use safe for",
    "start": "264570",
    "end": "271830"
  },
  {
    "text": "storage and then you can use elasticsearch for analysis and so in today's talk we are going to focus on",
    "start": "271830",
    "end": "279330"
  },
  {
    "text": "three components kafka safe and elastic search and the security challenges that",
    "start": "279330",
    "end": "286020"
  },
  {
    "text": "all these face and so today we are going to provide you a unique and a",
    "start": "286020",
    "end": "291569"
  },
  {
    "text": "revolutionary way in which you can enforce custom security policies in each",
    "start": "291569",
    "end": "296879"
  },
  {
    "text": "of these systems in a flexible and a powerful manner so let's first look at",
    "start": "296879",
    "end": "304889"
  },
  {
    "text": "Kafka Kafka as you guys may know is a distributed streaming platform it can",
    "start": "304889",
    "end": "310050"
  },
  {
    "text": "handle trillions of events in a day it's typically used for building streaming",
    "start": "310050",
    "end": "315750"
  },
  {
    "text": "data pipelines which can transfer data between different applications and also for building streaming data applications",
    "start": "315750",
    "end": "322199"
  },
  {
    "text": "which can transform or which can react to streams of data so the authorization",
    "start": "322199",
    "end": "328259"
  },
  {
    "text": "model in Kafka is access control lists and a typical Kafka ACL statement says",
    "start": "328259",
    "end": "335940"
  },
  {
    "text": "that a principle P is allowed or denied to perform an operation o on a resource",
    "start": "335940",
    "end": "344069"
  },
  {
    "text": "R and so AC ELLs are simple and they are straightforward but they are limited by",
    "start": "344069",
    "end": "349919"
  },
  {
    "text": "their scale their flexibility the expressiveness and their management and",
    "start": "349919",
    "end": "355069"
  },
  {
    "text": "so imagine you want to enforce policies such as consumers should not be reading",
    "start": "355069",
    "end": "361680"
  },
  {
    "text": "from topics which contain PII or your personally identifiable information or",
    "start": "361680",
    "end": "366810"
  },
  {
    "text": "you want to restrict users from writing to topics which have - out if you try to",
    "start": "366810",
    "end": "373919"
  },
  {
    "text": "enforce these kinds of properties or policies using ACLs at scale given their",
    "start": "373919",
    "end": "379800"
  },
  {
    "text": "limited expressiveness is going to be a management nightmare and so the question",
    "start": "379800",
    "end": "386789"
  },
  {
    "text": "is how can you enforce such security policies in Kafka and more importantly",
    "start": "386789",
    "end": "393719"
  },
  {
    "text": "who is going to do it SEF SEF is a distributed storage system",
    "start": "393719",
    "end": "402460"
  },
  {
    "text": "that provides block storage object storage and file system storage in a unified system the security protocol in",
    "start": "402460",
    "end": "411819"
  },
  {
    "text": "SEF only applies to the safe clients and the safe servers and so it's the clients",
    "start": "411819",
    "end": "417190"
  },
  {
    "text": "responsibility to provide access control for the data that is stored in the object store and so imagine you want to",
    "start": "417190",
    "end": "424960"
  },
  {
    "text": "enforce policies which are based on a user's location such that a user can",
    "start": "424960",
    "end": "430060"
  },
  {
    "text": "only be allowed access to buckets which are in the same location or you want to",
    "start": "430060",
    "end": "435610"
  },
  {
    "text": "have access control policies based on a user's business unit his department how",
    "start": "435610",
    "end": "440949"
  },
  {
    "text": "are you going to enforce such policies that you don't even have a security framework in self and again more",
    "start": "440949",
    "end": "447669"
  },
  {
    "text": "importantly who is going to do it and lastly we have elasticsearch which is a",
    "start": "447669",
    "end": "456340"
  },
  {
    "text": "full-text search and analytics engine it's capable of storing searching and analyzing vast amounts of data in almost",
    "start": "456340",
    "end": "463750"
  },
  {
    "text": "real-time so again the security in elasticsearch is more of a premium",
    "start": "463750",
    "end": "469810"
  },
  {
    "text": "feature at least the authorization and so the user is an exercise left for the user to implement access control",
    "start": "469810",
    "end": "476650"
  },
  {
    "text": "policies and so imagine in elasticsearch you have a patient's you have an",
    "start": "476650",
    "end": "482169"
  },
  {
    "text": "individual's ph i which is the protected health information and you want to provide secure access to that",
    "start": "482169",
    "end": "489129"
  },
  {
    "text": "information based on say a user's role or some attribute based on the user how",
    "start": "489129",
    "end": "495879"
  },
  {
    "text": "are you going to enforce that kind of attribute based policies in elasticsearch and who is going to do it",
    "start": "495879",
    "end": "504550"
  },
  {
    "text": "for you and so now you have these three distinct systems each in their own",
    "start": "504550",
    "end": "513219"
  },
  {
    "text": "different programming languages each having different security requirements",
    "start": "513219",
    "end": "518649"
  },
  {
    "text": "which keep on changing over time and hence become difficult to predict and so",
    "start": "518649",
    "end": "524560"
  },
  {
    "text": "how are you going to enforce policies in each one of them without hard coding",
    "start": "524560",
    "end": "530079"
  },
  {
    "text": "that policy in so where or how are you going to enforce policies in each one of them without",
    "start": "530079",
    "end": "536460"
  },
  {
    "text": "tightly coupling the underlying system to the policy enforcement and more",
    "start": "536460",
    "end": "542670"
  },
  {
    "text": "importantly how are you going to achieve these two objectives without compromising on speed and performance",
    "start": "542670",
    "end": "549390"
  },
  {
    "text": "and in a really expressive manner and so",
    "start": "549390",
    "end": "554970"
  },
  {
    "text": "my question for you is is there a solution that can provide uniform policy",
    "start": "554970",
    "end": "562260"
  },
  {
    "text": "enforcement across the stack in all these systems in an expressive and",
    "start": "562260",
    "end": "568740"
  },
  {
    "text": "powerful manner and luckily the answer",
    "start": "568740",
    "end": "574800"
  },
  {
    "text": "is yes it's the open policy agent and so",
    "start": "574800",
    "end": "581070"
  },
  {
    "text": "with Kafka you can take the Kafka's authorization interface and you can plug",
    "start": "581070",
    "end": "586770"
  },
  {
    "text": "in OPA with that and you can enforce policies such as don't allow certain",
    "start": "586770",
    "end": "591780"
  },
  {
    "text": "users to write on - our topics in self you can integrate OPA with SEPs object",
    "start": "591780",
    "end": "599640"
  },
  {
    "text": "gateway to provide access control over the object store and we will look at this use case later in detail and",
    "start": "599640",
    "end": "606530"
  },
  {
    "text": "finally for elasticsearch so this is where OPA does something special this is like an experimental use",
    "start": "606530",
    "end": "613410"
  },
  {
    "text": "case for OPA that we have and so in this use case instead of OPA giving you a decision back OPA will return to you a",
    "start": "613410",
    "end": "620760"
  },
  {
    "text": "set of conditions which you can then translate into elastic search queries",
    "start": "620760",
    "end": "625860"
  },
  {
    "text": "and then enforce them on the database and so now let's look at what is OPA",
    "start": "625860",
    "end": "634790"
  },
  {
    "text": "just a quick show of hands how many of you have heard about OPA wow that's a",
    "start": "634790",
    "end": "640680"
  },
  {
    "text": "lot and how many of you are actually using OPA ok that that's helpful thank",
    "start": "640680",
    "end": "647130"
  },
  {
    "text": "you so oppa is an open-source general purpose policy engine you can take oppa",
    "start": "647130",
    "end": "654210"
  },
  {
    "text": "and you can use it at any layer of the stack in any system and so your services",
    "start": "654210",
    "end": "660690"
  },
  {
    "text": "can offload policy decisions to oppa by executing queries before we go more into",
    "start": "660690",
    "end": "666930"
  },
  {
    "text": "oppa I just like to mention something around opus community oppa was founded",
    "start": "666930",
    "end": "674310"
  },
  {
    "text": "in 2016 at styro and the goal of the project is being to unify policy enforcement across the stack one of the",
    "start": "674310",
    "end": "682649"
  },
  {
    "text": "earliest adopters of oppa was Netflix and they use oppa for authorization over",
    "start": "682649",
    "end": "688320"
  },
  {
    "text": "their HTTP and G RPC api's and there are more than 20 companies who are using oppa actively in production for use",
    "start": "688320",
    "end": "695220"
  },
  {
    "text": "cases such as admission control authorization risk management data protection and so on who powers recently",
    "start": "695220",
    "end": "702690"
  },
  {
    "text": "promoted to the incubating stage at C & C F we have more than 59 contributors on git we have a healthy slack community of",
    "start": "702690",
    "end": "709740"
  },
  {
    "text": "more than 800 users and just to give you some context at the beginning of the year we had around 400 users so it's",
    "start": "709740",
    "end": "716310"
  },
  {
    "text": "great to see oppa grow and people using oppa and so just to give you a brief of",
    "start": "716310",
    "end": "723360"
  },
  {
    "text": "what oppa actually is imagine you have a service and the service can be anything it can be your cough car it can be your",
    "start": "723360",
    "end": "730050"
  },
  {
    "text": "authorization service your API gateway your kubernetes api server absolutely anything and so whenever the service",
    "start": "730050",
    "end": "736020"
  },
  {
    "text": "gets an incoming request it's going to ask oppa whether this query is allowed",
    "start": "736020",
    "end": "741120"
  },
  {
    "text": "or not by executing a query and so this query can contain your input method your",
    "start": "741120",
    "end": "747120"
  },
  {
    "text": "path your request basically any JSON value and then oppa is going to evaluate",
    "start": "747120",
    "end": "754140"
  },
  {
    "text": "this query based on the policies and the data it has access to and send a decision back to your service and this",
    "start": "754140",
    "end": "762000"
  },
  {
    "text": "decision can again be any JSON value allow' denied through false any JSON value and so the whole point sure is",
    "start": "762000",
    "end": "768510"
  },
  {
    "text": "that we are trying to decouple the policy enforcement from the decision-making and so to oppa it does",
    "start": "768510",
    "end": "775260"
  },
  {
    "text": "not matter if you are doing Kafka HTTP API is SSH pseudo to cough go to oppa",
    "start": "775260",
    "end": "781680"
  },
  {
    "text": "it's all just data and that's why we say oppa is a general-purpose policy engine",
    "start": "781680",
    "end": "787040"
  },
  {
    "text": "just to give you a quick recap of oppas features at the core of oppa is a",
    "start": "787040",
    "end": "792270"
  },
  {
    "text": "high-level declarative language called as rego and so with Raghu you can answer questions such as can exit row operation",
    "start": "792270",
    "end": "799440"
  },
  {
    "text": "why on reso see or what users is a feel is what Fields is a user allowed to see",
    "start": "799440",
    "end": "806070"
  },
  {
    "text": "so with Rago you can get more than just boolean allowed the night through false kind of decisions you can get decisions",
    "start": "806070",
    "end": "812520"
  },
  {
    "text": "which are collections of values opai's written in go and you can embed it as a",
    "start": "812520",
    "end": "817770"
  },
  {
    "text": "library or run it as a sidecar or a host level daemon it's designed to be as lightweight as possible so all the",
    "start": "817770",
    "end": "824130"
  },
  {
    "text": "policies and the data that you need are kept in memory and it does not have any",
    "start": "824130",
    "end": "829529"
  },
  {
    "text": "runtime dependencies so it doesn't need anything like an external call to do a policy evaluation OPA can obviously be",
    "start": "829529",
    "end": "837480"
  },
  {
    "text": "expanded to talk to external services for getting policy and data it can upload its status logs to external",
    "start": "837480",
    "end": "844200"
  },
  {
    "text": "servers and also its decision logs the decisions that it made in the rule that was queried and so forth all this",
    "start": "844200",
    "end": "849930"
  },
  {
    "text": "information that can help in auditing and debugging OPA can upload this to your external servers and so finally",
    "start": "849930",
    "end": "856290"
  },
  {
    "text": "along with the core policy engine OPA provides rich set of tooling that you can use to build and debug your policies",
    "start": "856290",
    "end": "862980"
  },
  {
    "text": "we provide you a unit test framework which you can use to test your policies we also provide you an interactive shell",
    "start": "862980",
    "end": "869339"
  },
  {
    "text": "to write queries as well as integrations with editors like vs code and wim and so",
    "start": "869339",
    "end": "877260"
  },
  {
    "text": "just how does OPA actually work now we've seen this figure before your",
    "start": "877260",
    "end": "882450"
  },
  {
    "text": "service gets a request your service asks oppa whether it is allowed or not oppa will evaluate the request based on the",
    "start": "882450",
    "end": "888480"
  },
  {
    "text": "policy and data it has access to and send a decision back to your service and so now imagine you wanted to enforce a",
    "start": "888480",
    "end": "895709"
  },
  {
    "text": "policy in English which said that employees can read their own salary and",
    "start": "895709",
    "end": "900990"
  },
  {
    "text": "the salary of anyone they manage so now they're going to take this policy in",
    "start": "900990",
    "end": "906149"
  },
  {
    "text": "English and try to implement it oppa by adding some regu and so like i said when",
    "start": "906149",
    "end": "913829"
  },
  {
    "text": "when your service asks oppa decision it needs to provide some kind of input to oppa like your method your",
    "start": "913829",
    "end": "920770"
  },
  {
    "text": "path or the authenticated user who makes the request and so now let's take this",
    "start": "920770",
    "end": "925810"
  },
  {
    "text": "policy and try to write some Rago to implement this policy in oppa so to do",
    "start": "925810",
    "end": "932020"
  },
  {
    "text": "that to help you get started with oppa so that you can write more policies today I'm going to give you three steps",
    "start": "932020",
    "end": "939160"
  },
  {
    "text": "to getting started with oppa I like to call them the three steps to oppa and so",
    "start": "939160",
    "end": "945340"
  },
  {
    "text": "step number one is you clone the oppa repo so all you have to do you have to",
    "start": "945340",
    "end": "951370"
  },
  {
    "text": "go to github.com slash open slaughter policy agent slash oppa and you just clone the oppa repo simple step 1",
    "start": "951370",
    "end": "960150"
  },
  {
    "text": "once you've cloned the repo you just build the oppa binary so basically go in",
    "start": "960150",
    "end": "965770"
  },
  {
    "text": "the directory do a make build or a go build and that will generate for you a beautiful oppa binary and lastly you",
    "start": "965770",
    "end": "974050"
  },
  {
    "text": "simply run the binary so once you go to github clone oppa then you build the",
    "start": "974050",
    "end": "980920"
  },
  {
    "text": "binary and finally you run the binary you are going to get an interactive",
    "start": "980920",
    "end": "985960"
  },
  {
    "text": "shell which you can use to write queries in which you can use to experiment with oppa policies so it's that simple so",
    "start": "985960",
    "end": "993700"
  },
  {
    "text": "just with these three steps you can get started with oppa literally right now",
    "start": "993700",
    "end": "998980"
  },
  {
    "text": "and start writing some Rago policies it's that easy seriously and so can we do better like",
    "start": "998980",
    "end": "1010590"
  },
  {
    "text": "this is okay like this is good three steps are easy but the question is can we do better and so answer again is yes",
    "start": "1010590",
    "end": "1020210"
  },
  {
    "text": "so recently we released a regu playground which you can use to write an",
    "start": "1020210",
    "end": "1026819"
  },
  {
    "text": "experiment with Lego policies it's available at play dot open policy agent",
    "start": "1026820",
    "end": "1032370"
  },
  {
    "text": "dot org and you can use the playground right now to start experimenting with Lego policies so this is how the",
    "start": "1032370",
    "end": "1041100"
  },
  {
    "text": "playground looks like you can immediately see some syntax highlighting for Lego core which makes it easy to",
    "start": "1041100",
    "end": "1048480"
  },
  {
    "text": "read your as well as to debug your Lego policies and so the example we were taking before",
    "start": "1048480",
    "end": "1056740"
  },
  {
    "text": "is that an employee should be able to read his own salary and so the way you",
    "start": "1056740",
    "end": "1062799"
  },
  {
    "text": "read this policy is that allow is through allow is true if input dot",
    "start": "1062799",
    "end": "1071860"
  },
  {
    "text": "method is get and input path a salary employee ID and input dot user is",
    "start": "1071860",
    "end": "1081190"
  },
  {
    "text": "employee ID and so the cool thing about this policy is that the employee ID",
    "start": "1081190",
    "end": "1087159"
  },
  {
    "text": "value is going to be bound from a value from the input and so the way to give an",
    "start": "1087159",
    "end": "1093759"
  },
  {
    "text": "input to this policy is simply by clicking the input button so you have",
    "start": "1093759",
    "end": "1099340"
  },
  {
    "text": "pre-loaded an input to this particular policy and so the question I'm asking",
    "start": "1099340",
    "end": "1105100"
  },
  {
    "text": "here is can Bob see his own salary and",
    "start": "1105100",
    "end": "1110610"
  },
  {
    "text": "to evaluate the policy you simply click the output button and the answer is yes",
    "start": "1110610",
    "end": "1117009"
  },
  {
    "text": "Bob can see his own salary which is what we wanted now imagine alice is curious",
    "start": "1117009",
    "end": "1125289"
  },
  {
    "text": "about Bob salary and she wants to see Bob salary so if Alice wants to see Bob",
    "start": "1125289",
    "end": "1132850"
  },
  {
    "text": "salary is that allowed can Alice see Bob's salary the result is false so",
    "start": "1132850",
    "end": "1139990"
  },
  {
    "text": "Alice will not be able to see Bob salary and the reason is because the expression",
    "start": "1139990",
    "end": "1145029"
  },
  {
    "text": "on line number 8 is going to fail because the user making the request is Alice but the employee ID variable gets",
    "start": "1145029",
    "end": "1151749"
  },
  {
    "text": "bound to Bob and now let's imagine that Alice gets a promotion and she becomes",
    "start": "1151749",
    "end": "1159700"
  },
  {
    "text": "Bob's manager so the second part of a policy said that a manager should be",
    "start": "1159700",
    "end": "1164889"
  },
  {
    "text": "able to see the employees salary so you need to tell oppa this new information",
    "start": "1164889",
    "end": "1171970"
  },
  {
    "text": "about Alice being Bob's manager and so you can imagine this information being",
    "start": "1171970",
    "end": "1177730"
  },
  {
    "text": "stored somewhere in your LDAP server and you can pull that into the power see and use that as a context to your",
    "start": "1177730",
    "end": "1185260"
  },
  {
    "text": "policies so in this case just for demo purposes I'm just going to hard code",
    "start": "1185260",
    "end": "1190390"
  },
  {
    "text": "this information in the policy itself so I can say something like managers and",
    "start": "1190390",
    "end": "1198390"
  },
  {
    "text": "let's say bob's manager is Alice and",
    "start": "1198390",
    "end": "1205740"
  },
  {
    "text": "Fred and let's say Alice's manager is Fred",
    "start": "1205740",
    "end": "1213220"
  },
  {
    "text": "and so now we need to simply extend our policy to make use of this new",
    "start": "1213220",
    "end": "1219880"
  },
  {
    "text": "information and so what we can say is managers so now the person making the",
    "start": "1219880",
    "end": "1227200"
  },
  {
    "text": "request can also be a manager of the person whose salary is being queried for and so if I have typed correctly if I",
    "start": "1227200",
    "end": "1237400"
  },
  {
    "text": "again ask the same question can Alice who's Bob's manager access his salary",
    "start": "1237400",
    "end": "1244260"
  },
  {
    "text": "this time the result should be true so Alice who's Bob's manager can now access",
    "start": "1244260",
    "end": "1251710"
  },
  {
    "text": "his salary so in this way you can take a simple policy in English and write a",
    "start": "1251710",
    "end": "1259000"
  },
  {
    "text": "simple Rhaego code to implement or enforce that in OPA and so one of the cool things of",
    "start": "1259000",
    "end": "1266230"
  },
  {
    "text": "the playground it lets you evaluate certain sections of the policy so for example if I only want to evaluate the",
    "start": "1266230",
    "end": "1272919"
  },
  {
    "text": "allow rule I can simply select that and just evaluate that and the result is",
    "start": "1272919",
    "end": "1278470"
  },
  {
    "text": "true and so now that you've written a first Rhaego policy let's share this policy",
    "start": "1278470",
    "end": "1285070"
  },
  {
    "text": "with friends and family and the playground allows you to do that using the share button it gives you a link",
    "start": "1285070",
    "end": "1291970"
  },
  {
    "text": "which you can simply copy and you can share with anybody you want to but",
    "start": "1291970",
    "end": "1297250"
  },
  {
    "text": "before you do that let's see what's in the link so when you go to the link you",
    "start": "1297250",
    "end": "1303910"
  },
  {
    "text": "see the policy that you wrote which is what you expect and that's good but",
    "start": "1303910",
    "end": "1309070"
  },
  {
    "text": "there's more if you click on the input you'll also get the input that you had",
    "start": "1309070",
    "end": "1315400"
  },
  {
    "text": "provided the policy and so now again if you evaluate the same policy you should get",
    "start": "1315400",
    "end": "1320790"
  },
  {
    "text": "the result as true which is what we expect and so I hope you guys now use",
    "start": "1320790",
    "end": "1326160"
  },
  {
    "text": "the regu playground to experiment with Lego policies and share your policies with the whole world so this figure just",
    "start": "1326160",
    "end": "1335340"
  },
  {
    "text": "emphasizes the fact how oppa can be used with all of these systems and Hawaii",
    "start": "1335340",
    "end": "1341400"
  },
  {
    "text": "it's a general purpose policy engine and so the cool thing here is that we have integrations with each one of these",
    "start": "1341400",
    "end": "1347490"
  },
  {
    "text": "systems and you can start using them out of the box without having to write even",
    "start": "1347490",
    "end": "1352530"
  },
  {
    "text": "a single line of code and so now let's look at the data protection use case so",
    "start": "1352530",
    "end": "1366150"
  },
  {
    "text": "this is so like I mentioned before safe is a distributed storage system it",
    "start": "1366150",
    "end": "1371310"
  },
  {
    "text": "provides object block and file system storage and unified manner and this is a high-level architecture of safe and so",
    "start": "1371310",
    "end": "1379260"
  },
  {
    "text": "what we are going to focus on is the radwells gateway which is basically a gateway which allows access to users and",
    "start": "1379260",
    "end": "1385620"
  },
  {
    "text": "applications to safe storage cluster and how opah is integrated with this",
    "start": "1385620",
    "end": "1391290"
  },
  {
    "text": "component and so the way the integration works is that when a user asks for",
    "start": "1391290",
    "end": "1399270"
  },
  {
    "text": "access to a specific bucket that request will go to the radaway State Way and the",
    "start": "1399270",
    "end": "1407460"
  },
  {
    "text": "Gateway will again ask oppa whether this request is allowed or not and in this",
    "start": "1407460",
    "end": "1414090"
  },
  {
    "text": "case that request will contain the user making the request the method name and",
    "start": "1414090",
    "end": "1419970"
  },
  {
    "text": "the bucket name that the user is trying to access and so OPA again is going to",
    "start": "1419970",
    "end": "1427220"
  },
  {
    "text": "evaluate this query based on the policies and the data it has access to and send a decision back to the Gateway",
    "start": "1427220",
    "end": "1434430"
  },
  {
    "text": "and depending on if it's an allow or deny the data will then be fetched from",
    "start": "1434430",
    "end": "1439440"
  },
  {
    "text": "the object storage and so again the other high level goal is the same that",
    "start": "1439440",
    "end": "1444570"
  },
  {
    "text": "we are trying to decouple the policy enforcement from the",
    "start": "1444570",
    "end": "1450029"
  },
  {
    "text": "policy decision-making and so now let's say we have this policy that we want to",
    "start": "1450029",
    "end": "1457200"
  },
  {
    "text": "enforce in self it's a location-based policy which says",
    "start": "1457200",
    "end": "1462299"
  },
  {
    "text": "that users can access only those buckets belonging to the same geographical",
    "start": "1462299",
    "end": "1469019"
  },
  {
    "text": "region as them and so now let's see we",
    "start": "1469019",
    "end": "1474419"
  },
  {
    "text": "are going to go back to the playground and see how we've implemented this policy in Rago so the first thing you",
    "start": "1474419",
    "end": "1481289"
  },
  {
    "text": "see is that I have hard-coded the user's location in the policy itself but again this is for demo purposes you can",
    "start": "1481289",
    "end": "1488129"
  },
  {
    "text": "imagine this information being stored in get your LDAP server or anywhere else in the world and so what I'm saying here is",
    "start": "1488129",
    "end": "1493979"
  },
  {
    "text": "that Alice belongs to UK and Bob belongs to USA have also hard-coded the bucket",
    "start": "1493979",
    "end": "1500159"
  },
  {
    "text": "location in the policy itself and I'm saying there is a super-secret bucket which can which is located in the",
    "start": "1500159",
    "end": "1506369"
  },
  {
    "text": "USA and so let me emphasize again that all this information can be given to",
    "start": "1506369",
    "end": "1511830"
  },
  {
    "text": "open as external context it doesn't need to be hard-coded in your policy and so",
    "start": "1511830",
    "end": "1518099"
  },
  {
    "text": "if I give an input to this policy which says that Bob who is from the u.s.a",
    "start": "1518099",
    "end": "1524719"
  },
  {
    "text": "wants to access a bucket for the super-secret bucket which is in the USA",
    "start": "1524719",
    "end": "1531239"
  },
  {
    "text": "is he allowed to do that and again if you evaluate this policy if you evaluate",
    "start": "1531239",
    "end": "1539429"
  },
  {
    "text": "this rule specifically you are going to get a value through which means Bob is gonna be allowed to access the bucket",
    "start": "1539429",
    "end": "1546029"
  },
  {
    "text": "super-secret bucket which is locate in the USA but if you try to do this with Alice",
    "start": "1546029",
    "end": "1551580"
  },
  {
    "text": "so if Alice makes a request to access a bucket which is located in the USA",
    "start": "1551580",
    "end": "1556820"
  },
  {
    "text": "hopefully opus policy should kick in and prevent this request from going through",
    "start": "1556820",
    "end": "1561869"
  },
  {
    "text": "and so now if we evaluate this query the result should be false because obviously Alice does not belong",
    "start": "1561869",
    "end": "1568799"
  },
  {
    "text": "to the US and so she can't access any buckets located in the United States and so again we've taken that policy in",
    "start": "1568799",
    "end": "1576239"
  },
  {
    "text": "English and we've converted it into ragu code using such a simple",
    "start": "1576239",
    "end": "1581970"
  },
  {
    "text": "Rhaego code and so what you've done is we've taken",
    "start": "1581970",
    "end": "1587460"
  },
  {
    "text": "this entire integration and we've converted this integration into a step by step interactive tutorial which you",
    "start": "1587460",
    "end": "1594000"
  },
  {
    "text": "guys can try on by going to this specific link and if you go to that link",
    "start": "1594000",
    "end": "1600320"
  },
  {
    "text": "you will not just find that self tutorial but you'll also find a cool admission control tutorial with",
    "start": "1600320",
    "end": "1606750"
  },
  {
    "text": "kubernetes which you can try out as well so you simply do you start the scenario and you can go step by step to the",
    "start": "1606750",
    "end": "1613649"
  },
  {
    "text": "entire integration and try out how we can authorize request using open and",
    "start": "1613649",
    "end": "1619080"
  },
  {
    "text": "safe so I encourage you guys to try it out later and so this is what we started",
    "start": "1619080",
    "end": "1625590"
  },
  {
    "text": "with we said data is king we said data is everywhere it's super critical is",
    "start": "1625590",
    "end": "1631620"
  },
  {
    "text": "super sensitive and it's really important and so data security is of a big concern and so really important",
    "start": "1631620",
    "end": "1637770"
  },
  {
    "text": "thing that you need to address and then we saw how OPA the open-source general",
    "start": "1637770",
    "end": "1643289"
  },
  {
    "text": "purpose policy engine can provide a framework which can do uniform policy enforcement across the stack in multiple",
    "start": "1643289",
    "end": "1650130"
  },
  {
    "text": "systems and so I hope at this point we",
    "start": "1650130",
    "end": "1655620"
  },
  {
    "text": "can update this figure a little to replace it with our favorite policy engine the open policy agent and so",
    "start": "1655620",
    "end": "1665909"
  },
  {
    "text": "thank you so much for listening and if you guys want to learn more about OPA please check out the style of booth you",
    "start": "1665909",
    "end": "1673230"
  },
  {
    "text": "can come there and more importantly if you guys want this special edition really cool OPA short please stop by the",
    "start": "1673230",
    "end": "1679919"
  },
  {
    "text": "booth and if you have any questions so I can take some questions now thank you",
    "start": "1679919",
    "end": "1689840"
  },
  {
    "text": "[Applause]",
    "start": "1689840",
    "end": "1694080"
  },
  {
    "text": "Hey so what was the thinking behind using a domain-specific language instead of like",
    "start": "1696880",
    "end": "1703429"
  },
  {
    "text": "a like a subset of Python or something that's sort of well known and I guess",
    "start": "1703429",
    "end": "1708890"
  },
  {
    "text": "the follow-up to that is what's the library support like could you call out to like a Kafka queue from a policy so",
    "start": "1708890",
    "end": "1716710"
  },
  {
    "text": "the first question was why you can't just do this in code not like in a",
    "start": "1716710",
    "end": "1722149"
  },
  {
    "text": "programming language right so you have",
    "start": "1722149",
    "end": "1727340"
  },
  {
    "text": "so many systems each having different programming languages and then you're",
    "start": "1727340",
    "end": "1732889"
  },
  {
    "text": "trying to express these policies which are completely based on deeply nested JSON structures for these various",
    "start": "1732889",
    "end": "1739460"
  },
  {
    "text": "systems and then you have users who have to interact with these system and learn these different languages to enforce",
    "start": "1739460",
    "end": "1746000"
  },
  {
    "text": "policies in all these distinct systems and so what oppan does is like it tries to uniformly enforce policies in any",
    "start": "1746000",
    "end": "1752779"
  },
  {
    "text": "system so you do not need to go into specific languages and learn specific ways to enforce policies which only",
    "start": "1752779",
    "end": "1759799"
  },
  {
    "text": "apply to that specific system it gives you a generic way you can do this for anything and so imagine if you are",
    "start": "1759799",
    "end": "1766039"
  },
  {
    "text": "something like a security operation person you don't have to go and learn the details of all your services which",
    "start": "1766039",
    "end": "1772010"
  },
  {
    "text": "will be written in go Python Java on all these languages you can simply write your policies using a unified framework",
    "start": "1772010",
    "end": "1778730"
  },
  {
    "text": "like OPA so that was the motivation behind not using a programming language",
    "start": "1778730",
    "end": "1784309"
  },
  {
    "text": "and developing an old DSL second question was about can you make a call",
    "start": "1784309",
    "end": "1790730"
  },
  {
    "text": "from the policy itself to Kafka the",
    "start": "1790730",
    "end": "1799309"
  },
  {
    "text": "library sub so we do have so like opposite didn't go so you can embed it",
    "start": "1799309",
    "end": "1804649"
  },
  {
    "text": "into your go code that's one option and as far as the support for making calls",
    "start": "1804649",
    "end": "1810710"
  },
  {
    "text": "you can make calls from the policy itself so we have an HTTP send command which you can use to make calls",
    "start": "1810710",
    "end": "1816799"
  },
  {
    "text": "externally from the policy itself we don't recommend doing that because it's experimental right now but there are",
    "start": "1816799",
    "end": "1823039"
  },
  {
    "text": "ways you can do that I've to question the first question",
    "start": "1823039",
    "end": "1828230"
  },
  {
    "text": "Islam can talk a little bit about how policies being pushed to the agent that you're going to put in the host like is",
    "start": "1828230",
    "end": "1836360"
  },
  {
    "text": "there any like when I update my policy right obviously I want to make sure that my policy works in in the production",
    "start": "1836360",
    "end": "1843440"
  },
  {
    "text": "environment is there a way to do the canary or dock launch for the policy in",
    "start": "1843440",
    "end": "1848600"
  },
  {
    "text": "agent so the question is you deploying your policy in production how do you",
    "start": "1848600",
    "end": "1854600"
  },
  {
    "text": "make sure it's at doing what it's supposed to do is that the gist okay cool so fit OPA we provide you a unit test",
    "start": "1854600",
    "end": "1861919"
  },
  {
    "text": "framework so like with any programming language what we always recommend is before you deploy your policies in",
    "start": "1861919",
    "end": "1868159"
  },
  {
    "text": "production or in kubernetes permission control you can first unit test your policies thoroughly and only then you",
    "start": "1868159",
    "end": "1874399"
  },
  {
    "text": "should go and deploy them in production so we provide a really cool or unit test framework which allows you to mock out a",
    "start": "1874399",
    "end": "1879980"
  },
  {
    "text": "bunch of things in the policy and you can you be recommended to do that before going into production so that would be",
    "start": "1879980",
    "end": "1886070"
  },
  {
    "text": "our recommended approach for that well I",
    "start": "1886070",
    "end": "1891679"
  },
  {
    "text": "guess the sanera see if you have like say 10,000 notes right like can i push my policy to just 1% of the notes see",
    "start": "1891679",
    "end": "1899350"
  },
  {
    "text": "you know you always prepare for the worst so can you push the question is can you",
    "start": "1899350",
    "end": "1907220"
  },
  {
    "text": "push your policies if you have 10,000 nodes can you push them to specific nodes that's that's the question okay so",
    "start": "1907220",
    "end": "1914470"
  },
  {
    "text": "there are multiple ways in which you can push policies into OPA like you can have",
    "start": "1914470",
    "end": "1920299"
  },
  {
    "text": "OPA talk to your external service and it can pull policies from certain endpoints",
    "start": "1920299",
    "end": "1925309"
  },
  {
    "text": "or because OPA does not provide it provides you of api's for the control",
    "start": "1925309",
    "end": "1930590"
  },
  {
    "text": "plane it does not implement the control plane yourself so that is a responsibility for the user and there are commercial options like styrodur",
    "start": "1930590",
    "end": "1936649"
  },
  {
    "text": "that for you provide you the control plane and so there are multi and the other option is using REST API if you if",
    "start": "1936649",
    "end": "1942740"
  },
  {
    "text": "you develop your own system you can push policies into specific opus that you want as per your use case so there are",
    "start": "1942740",
    "end": "1948259"
  },
  {
    "text": "multiple ways you can do this",
    "start": "1948259",
    "end": "1951340"
  },
  {
    "text": "I hope thank you very much what would be the general approach for using this with",
    "start": "1954059",
    "end": "1961499"
  },
  {
    "text": "CFS I think that example was using the Ceph object store right is it quite",
    "start": "1961499",
    "end": "1966809"
  },
  {
    "text": "generic in the sense that you could use the same print suppose to use the open policy agent with a set of s using work",
    "start": "1966809",
    "end": "1974789"
  },
  {
    "text": "for example so if you had SAP FS okay and you wanted to do policies around",
    "start": "1974789",
    "end": "1980789"
  },
  {
    "text": "that instead of objects or the general approach so the approach is pretty constant you're always trying to",
    "start": "1980789",
    "end": "1986969"
  },
  {
    "text": "decouple the enforcement from decision-making so like in the case of SEP the rad always gateway made a call",
    "start": "1986969",
    "end": "1992399"
  },
  {
    "text": "to oppa oppa made a decision send it back to the OS dad OS for enforcement the same principle will apply event",
    "start": "1992399",
    "end": "1998639"
  },
  {
    "text": "force ffs the agent or whatever is the server which is running the agents ffs agent is going to make a call out to",
    "start": "1998639",
    "end": "2005269"
  },
  {
    "text": "oppa oppa by Jerry decision back to your FS and then you can authorize the access to your file system so the principle",
    "start": "2005269",
    "end": "2012139"
  },
  {
    "text": "remains the same irrespective of your system it's an adapter available for op my D",
    "start": "2012139",
    "end": "2019129"
  },
  {
    "text": "connect or draw tokens to read the identities out of two scopes from access",
    "start": "2019129",
    "end": "2024739"
  },
  {
    "text": "tokens for example can you please give me the question I couldn't hear ya so identities if I have an identity talking",
    "start": "2024739",
    "end": "2031369"
  },
  {
    "text": "from opmod I connect can I somehow integrated with OTA or with open policy",
    "start": "2031369",
    "end": "2038629"
  },
  {
    "text": "agent or or do I get our identities of an identity token into the system so in",
    "start": "2038629",
    "end": "2045049"
  },
  {
    "text": "a connector there because normally I have for authentication solution which provides me up my t connector",
    "start": "2045049",
    "end": "2051700"
  },
  {
    "text": "essentially so the question is how does oppa handle identities in a way okay",
    "start": "2051700",
    "end": "2058460"
  },
  {
    "text": "cool oppa has support for your tokens so if",
    "start": "2058460",
    "end": "2063740"
  },
  {
    "text": "you give your job to oppa oppa is going to decode that and take the claims out and you can make a policy based on the",
    "start": "2063740",
    "end": "2069770"
  },
  {
    "text": "jot we have support for that also oppa oppa has support for x.509 certificates so even if you give think the",
    "start": "2069770",
    "end": "2075980"
  },
  {
    "text": "certificate you can make a decision based on the stand in the certificate as well so there are ways you can you can",
    "start": "2075980",
    "end": "2081349"
  },
  {
    "text": "handle identities in oppa other option could be you can connect oppa to your LDAP server get fetch it from there",
    "start": "2081349",
    "end": "2087368"
  },
  {
    "text": "and use that as well as identity for user or whatever alright maybe one or",
    "start": "2087369",
    "end": "2093398"
  },
  {
    "text": "two more yeah thank you for your talk if you had a policy where someone requests",
    "start": "2093399",
    "end": "2099910"
  },
  {
    "text": "access and they are able to access under two different options let's say they are",
    "start": "2099910",
    "end": "2105160"
  },
  {
    "text": "both you have two claims through which they could gain access is it possible for audit reasons to see",
    "start": "2105160",
    "end": "2111970"
  },
  {
    "text": "which claim granted them access ultimately I couldn't understand the",
    "start": "2111970",
    "end": "2118210"
  },
  {
    "text": "question I'm sorry if I write a policy ah that says I can access my own salary",
    "start": "2118210",
    "end": "2124180"
  },
  {
    "text": "and I can access the salary of anyone you know below me in the company or",
    "start": "2124180",
    "end": "2129460"
  },
  {
    "text": "including myself then maybe there's two ways I can gain access to the salary can you show which policy was triggered",
    "start": "2129460",
    "end": "2138609"
  },
  {
    "text": "or which one causes a result to occur because in the example you gave you just",
    "start": "2138609",
    "end": "2144039"
  },
  {
    "text": "had resulted true weren't able to say why that result was true okay so yes so",
    "start": "2144039",
    "end": "2150249"
  },
  {
    "text": "the example I gave only showed you a boolean response but OPA can return to you any kind of JSON value so you can",
    "start": "2150249",
    "end": "2157029"
  },
  {
    "text": "have you can make policies around that we say okay why a certain policy work and return a specific response as for",
    "start": "2157029",
    "end": "2163390"
  },
  {
    "text": "that match so yeah depending on who you write your policy you can return a specific reason why the policy or which",
    "start": "2163390",
    "end": "2169329"
  },
  {
    "text": "policy was applied or you can work through that for sure because it supports any random JSON value as a decision I have a couple of questions",
    "start": "2169329",
    "end": "2179440"
  },
  {
    "text": "one is is there any way to manage all to identify conflicts so I can create",
    "start": "2179440",
    "end": "2184960"
  },
  {
    "text": "policies I'm a human being I make mistakes no conflicts is there any",
    "start": "2184960",
    "end": "2189970"
  },
  {
    "text": "methods of managing conflicts okay and the second question is I'm guessing all",
    "start": "2189970",
    "end": "2195160"
  },
  {
    "text": "of the policies are kept on a file right like the it's a file with all the",
    "start": "2195160",
    "end": "2201009"
  },
  {
    "text": "different policies is it kept encrypted what is preventing potential attacker",
    "start": "2201009",
    "end": "2206829"
  },
  {
    "text": "from adding rules putting a line at the top which is all allow or something like",
    "start": "2206829",
    "end": "2212200"
  },
  {
    "text": "that okay cool so the first question was how do you handle conflicts so the regul",
    "start": "2212200",
    "end": "2219430"
  },
  {
    "text": "anguish itself is where expressive and it allows you to make a decision on that so you can do something",
    "start": "2219430",
    "end": "2225220"
  },
  {
    "text": "like your denies are going to override your allows so you can have those kind of rules which you as a user can enforce",
    "start": "2225220",
    "end": "2232540"
  },
  {
    "text": "in the policy and also we provide you like an else keyboard which gives you an",
    "start": "2232540",
    "end": "2238210"
  },
  {
    "text": "ordering for your statements so it's wholly up to the user how they want to resolve context in the policy OPA is",
    "start": "2238210",
    "end": "2245800"
  },
  {
    "text": "very flexible in that way and so the second question was if there is policy in OPA what's stopping somebody from",
    "start": "2245800",
    "end": "2252490"
  },
  {
    "text": "just going in there and changing the policy or deleting the policy right so",
    "start": "2252490",
    "end": "2258480"
  },
  {
    "text": "that's possible too you can lock down the OPA agent using TLS and using a",
    "start": "2258480",
    "end": "2264760"
  },
  {
    "text": "start up authorization policy and you can only allow certain users access to certain paths and certain policies",
    "start": "2264760",
    "end": "2271420"
  },
  {
    "text": "within OPA so you can you can enforce such kind of security policies on the",
    "start": "2271420",
    "end": "2276790"
  },
  {
    "text": "agent itself so yeah there are options for that too all right we are out of time so let's go ahead and thank the",
    "start": "2276790",
    "end": "2283150"
  },
  {
    "text": "speaker thank you so much for coming and [Applause]",
    "start": "2283150",
    "end": "2290050"
  }
]