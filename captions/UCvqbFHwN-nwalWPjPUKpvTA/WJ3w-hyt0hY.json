[
  {
    "start": "0",
    "end": "145000"
  },
  {
    "text": "okay let's get started i'd like to welcome everyone to today's cncf webinars k8",
    "start": "2240",
    "end": "10559"
  },
  {
    "text": "auditing in depth my name is jerry fallon and i will be hosting today's webinar",
    "start": "10559",
    "end": "16160"
  },
  {
    "text": "we would like to welcome our presenter today randy abernephy managing partner at rxm we just have a",
    "start": "16160",
    "end": "23519"
  },
  {
    "text": "few housekeeping items before we get started during the webinar you are not able to talk as an attendee there is a q a box",
    "start": "23519",
    "end": "29199"
  },
  {
    "text": "at the bottom of your screen so please feel free to drop your questions in there and we'll get to as many as we can at the end",
    "start": "29199",
    "end": "34800"
  },
  {
    "text": "this is an official webinar the cncf and as such is subject to the cncf code of conduct so please do not add anything to the",
    "start": "34800",
    "end": "41280"
  },
  {
    "text": "chatter questions that would be in violation of the code of conduct please be respectful of your fellow participants and presenters",
    "start": "41280",
    "end": "48079"
  },
  {
    "text": "please also note that the recording on slides will be posted later today to the cncf webinar page at cncf dot io slash",
    "start": "48079",
    "end": "54239"
  },
  {
    "text": "webinars and with that i will hand it over to randy for today's presentation",
    "start": "54239",
    "end": "61038"
  },
  {
    "text": "randy your mic is on mute hey thanks a lot for that good morning",
    "start": "69119",
    "end": "75920"
  },
  {
    "text": "afternoon evening and welcome um uh this is uh the kate's auditing in",
    "start": "75920",
    "end": "81280"
  },
  {
    "text": "depth session a bunch of interesting stuff to take a look at over the next half hour or so",
    "start": "81280",
    "end": "87200"
  },
  {
    "text": "so why don't we go ahead and just jump right in all right so my name is randy abernathy",
    "start": "87200",
    "end": "94880"
  },
  {
    "text": "i'm a cloud native geek of the first order i'm a big fan of microservices and",
    "start": "94880",
    "end": "101680"
  },
  {
    "text": "apache thrift and things in that area and um i work for rxm and we're you know um diving a little cloud native",
    "start": "101680",
    "end": "108000"
  },
  {
    "text": "folks over here that's just a quick note on me the session today is gonna cover",
    "start": "108000",
    "end": "113119"
  },
  {
    "text": "um auditing and we're going to we're going to start from the start and go through some of the basics but",
    "start": "113119",
    "end": "118320"
  },
  {
    "text": "we're going to quickly move into more advanced concepts and we're going to talk about some of the challenges and issues with",
    "start": "118320",
    "end": "125840"
  },
  {
    "text": "multiple api servers and mutating admission controller web hooks and how to deal with different audit log",
    "start": "125840",
    "end": "132160"
  },
  {
    "text": "back-ends in scenarios where you have you know kind of massive throughput requirements and you know what exactly you can expect",
    "start": "132160",
    "end": "139599"
  },
  {
    "text": "from audit logging from a throughput and capacity standpoint so",
    "start": "139599",
    "end": "145200"
  },
  {
    "start": "145000",
    "end": "342000"
  },
  {
    "text": "let's uh let's start off you know audit what is audit logging if we just start",
    "start": "145200",
    "end": "150800"
  },
  {
    "text": "at the very start well the definition of audit is an official inspection of an individual's",
    "start": "150800",
    "end": "156640"
  },
  {
    "text": "or organization's accounts typically by an independent body and",
    "start": "156640",
    "end": "161760"
  },
  {
    "text": "this is a you know kind of an interesting parallel to what kubernetes auditing is and you can see the the uh the context",
    "start": "161760",
    "end": "168400"
  },
  {
    "text": "sentence i think is actually even more telling audits can be expected to detect can't be expected to detect every fraud",
    "start": "168400",
    "end": "174720"
  },
  {
    "text": "so this is exactly the spirit of auditing in kubernetes logging happens in",
    "start": "174720",
    "end": "182560"
  },
  {
    "text": "in services that you run in kubernetes including the control plane services like your you know controller managers",
    "start": "182560",
    "end": "189200"
  },
  {
    "text": "scheduler the api server um kublets and so on and they all um",
    "start": "189200",
    "end": "194560"
  },
  {
    "text": "log to standard out standard error and if you're a systemd service that's going to be manageable through",
    "start": "194560",
    "end": "200080"
  },
  {
    "text": "journal cuddle and all that stuff if you're actually running in a pod as you may if you're running you know",
    "start": "200080",
    "end": "207360"
  },
  {
    "text": "kind of a cube adm style setup for your your control plane then um cubecode logs",
    "start": "207360",
    "end": "213120"
  },
  {
    "text": "would be able to show you the log output of these different services and it can be managed with you know",
    "start": "213120",
    "end": "218239"
  },
  {
    "text": "plugins that forward the logs off the backends low key elasticsearch what have you and then you've also got events taking",
    "start": "218239",
    "end": "225360"
  },
  {
    "text": "place inside the cluster control plane events and those events are going to be visible through code get",
    "start": "225360",
    "end": "231599"
  },
  {
    "text": "events for example or if you describe an object you'll be able to see information about it but this is a",
    "start": "231599",
    "end": "237040"
  },
  {
    "text": "different beast auditing right auditing is designed to",
    "start": "237040",
    "end": "242720"
  },
  {
    "text": "give you the ability to inspect um an individual organization's accounts um right and to",
    "start": "242720",
    "end": "250400"
  },
  {
    "text": "be able to detect activity that might be fraudulent for example some of the other verb uses here",
    "start": "250400",
    "end": "256959"
  },
  {
    "text": "companies must have their accounts audited he made use of knowledge gleaned from economics class he audited so",
    "start": "256959",
    "end": "263600"
  },
  {
    "text": "being able to watch and oversee something right is sort of the idea of the audit log",
    "start": "263600",
    "end": "268960"
  },
  {
    "text": "and it's a you know it's different in kind because what it's designed to do is capture um",
    "start": "268960",
    "end": "275520"
  },
  {
    "text": "the who what and whys of activity going on in the cluster and it's usually at a far more granular level",
    "start": "275520",
    "end": "283520"
  },
  {
    "text": "than these other types of logs right application level logging that you get in standard out and standard error is going to be things",
    "start": "283520",
    "end": "289680"
  },
  {
    "text": "like you know i created this i did that it did this other thing and some of the details may be um",
    "start": "289680",
    "end": "296560"
  },
  {
    "text": "obscured for security reasons or something like that but an audit log is designed to capture",
    "start": "296560",
    "end": "304639"
  },
  {
    "text": "all of the details it is designed for no holds barred inspection of what's",
    "start": "304639",
    "end": "309840"
  },
  {
    "text": "going on in the cluster and so you know generally um only you know privileged individuals should",
    "start": "309840",
    "end": "316160"
  },
  {
    "text": "be looking at the audit log because it can expose a lot of stuff you know you can",
    "start": "316160",
    "end": "321600"
  },
  {
    "text": "you can look at the exact manifest posted by every user for all of the resources that they're creating",
    "start": "321600",
    "end": "328000"
  },
  {
    "text": "you can see the responses in detail from the cluster and so on and so forth so it's really a",
    "start": "328000",
    "end": "335360"
  },
  {
    "text": "you know a function like you would have a security audit that's really what the audit log is for it's for facilitating those types of",
    "start": "335360",
    "end": "342240"
  },
  {
    "start": "342000",
    "end": "443000"
  },
  {
    "text": "activities so let's start off with just uh some of the basics this is the definition straight out of the kate's i o docs",
    "start": "342240",
    "end": "348320"
  },
  {
    "text": "kubernetes auditing provides a security relevant chronological set of records documenting the sequence of activities by individual",
    "start": "348320",
    "end": "355199"
  },
  {
    "text": "users administrators or other components affecting the system so an interesting thing about the audit",
    "start": "355199",
    "end": "360639"
  },
  {
    "text": "log is that not only are you looking at the actions of users administrators or otherwise but you're",
    "start": "360639",
    "end": "366080"
  },
  {
    "text": "also seeing the interaction from the the system principles within",
    "start": "366080",
    "end": "371520"
  },
  {
    "text": "the cluster so you're going to see activity from kubelets and from controller managers and schedulers and",
    "start": "371520",
    "end": "377840"
  },
  {
    "text": "in this way you can use the audit log as a great way to get an in-depth understanding of how your",
    "start": "377840",
    "end": "384080"
  },
  {
    "text": "cluster is actually operating and in fact um you know how frequently",
    "start": "384080",
    "end": "389759"
  },
  {
    "text": "you know certain types of activities are taking place and so you know you can always go and dig around and config",
    "start": "389759",
    "end": "395120"
  },
  {
    "text": "files and things like that to sort of figure out how things are set up and what they're doing but going to the horse's mouth",
    "start": "395120",
    "end": "401280"
  },
  {
    "text": "is always you know the authoritative answer because you might see a configuration file that says this thing's supposed to",
    "start": "401280",
    "end": "407600"
  },
  {
    "text": "happen every five minutes and you look at the audit log and it's happening every three seconds well that's putting a lot of load on the",
    "start": "407600",
    "end": "414080"
  },
  {
    "text": "control plane maybe you want to look into why that is is it because the config file is mistyped is it because",
    "start": "414080",
    "end": "419599"
  },
  {
    "text": "uh there's a default that is is at play in some scenarios where there",
    "start": "419599",
    "end": "424800"
  },
  {
    "text": "isn't a config file you know there's all sorts of interesting things you can glean from digging through the audit log so",
    "start": "424800",
    "end": "430319"
  },
  {
    "text": "it can be used for um you know for security professionals and forensics and things like that",
    "start": "430319",
    "end": "435599"
  },
  {
    "text": "but it can also be used for cluster debugging and performance tuning and it's a you know just a really",
    "start": "435599",
    "end": "441840"
  },
  {
    "text": "all-around powerful facility so if we were to look at the um the architecture",
    "start": "441840",
    "end": "448080"
  },
  {
    "start": "443000",
    "end": "732000"
  },
  {
    "text": "picture of the audit log it probably looks something like this all roads lead to the api server the api",
    "start": "448080",
    "end": "454639"
  },
  {
    "text": "server is the state manager for the cluster at the end of the day it's the microservice that owns all of the",
    "start": "454639",
    "end": "462080"
  },
  {
    "text": "metadata describing what the cluster is doing now the api servers are stateless themselves",
    "start": "462080",
    "end": "468000"
  },
  {
    "text": "but they have the logic that is there to handle authentication",
    "start": "468000",
    "end": "473199"
  },
  {
    "text": "authorization admission control and all of these types of things that decide whether",
    "start": "473199",
    "end": "478319"
  },
  {
    "text": "something that a end user would like to create as a specification is going to be accepted or not now if that specification is accepted",
    "start": "478319",
    "end": "486479"
  },
  {
    "text": "it's going to be dropped into etcd so ncd is a highly consistent key value store sitting behind",
    "start": "486479",
    "end": "492639"
  },
  {
    "text": "the api server and you know this is a simplified model you generally have multiple api servers and",
    "start": "492639",
    "end": "498000"
  },
  {
    "text": "a cluster of ncd nodes but the communications channels are the same right everybody talks to the api server",
    "start": "498000",
    "end": "505120"
  },
  {
    "text": "and only the api server talks dead cd and so if you want to know the status of",
    "start": "505120",
    "end": "510400"
  },
  {
    "text": "something if you want to create something delete something update something modify something you do it through the api",
    "start": "510400",
    "end": "516479"
  },
  {
    "text": "server so essentially the api server is the gatekeeper of all you know configuration and status",
    "start": "516479",
    "end": "523919"
  },
  {
    "text": "for the cluster when the kubelets which are the node agents running out there in the cluster nodes",
    "start": "523919",
    "end": "529120"
  },
  {
    "text": "report in the activity that they're seeing the status of their memory and cpu",
    "start": "529120",
    "end": "534320"
  },
  {
    "text": "consumption the specifications that they're maintaining for pods and containers",
    "start": "534320",
    "end": "540000"
  },
  {
    "text": "all of that stuff's being dumped into the api server and dropped into ncd so if we enable the api",
    "start": "540000",
    "end": "546959"
  },
  {
    "text": "server to log all of this activity at the api level and since the api",
    "start": "546959",
    "end": "552880"
  },
  {
    "text": "server's api is the gateway to all state in in the kubernetes cluster",
    "start": "552880",
    "end": "559040"
  },
  {
    "text": "then you know we're really creating a place where we can see everything",
    "start": "559040",
    "end": "564320"
  },
  {
    "text": "happening now it's not completely true it is a distributed system you know kublets keep the cache of the",
    "start": "564320",
    "end": "570160"
  },
  {
    "text": "pods that they're supposed to be running and there are you know little pockets of information throughout the system",
    "start": "570160",
    "end": "576240"
  },
  {
    "text": "but at the end of the day if if the api server is right and good most things in your",
    "start": "576240",
    "end": "582800"
  },
  {
    "text": "cluster are going to be right and good and if there's something wrong the api server is going to be able to",
    "start": "582800",
    "end": "587920"
  },
  {
    "text": "see that in most cases so it's the perfect place to be capturing",
    "start": "587920",
    "end": "593200"
  },
  {
    "text": "this kind of detailed logging now when you run an api server by default there is no audit log",
    "start": "593200",
    "end": "598240"
  },
  {
    "text": "and so we don't have this facility it's therefore very good to know that the audit log exists and to",
    "start": "598240",
    "end": "604560"
  },
  {
    "text": "start thinking ahead and saying hey today we don't need the audit log but after something catastrophic happens",
    "start": "604560",
    "end": "611600"
  },
  {
    "text": "it's too late right you want to see what caused this big problem and you have no",
    "start": "611600",
    "end": "616720"
  },
  {
    "text": "no record of the activity so there's a lot of different ways we might want to configure audit",
    "start": "616720",
    "end": "622560"
  },
  {
    "text": "logging because audit logging can range from non-existence so no load at all to capturing every single",
    "start": "622560",
    "end": "630640"
  },
  {
    "text": "thing that comes and goes from the api server which is going to be a lot heavier when you think about the",
    "start": "630640",
    "end": "636640"
  },
  {
    "text": "the the cluster picture that you see here you can you can quickly rationalize you know kind of a of the",
    "start": "636640",
    "end": "644079"
  },
  {
    "text": "the amount of activity that's going to be coming into the api server if you imagine that you've got a a maximal sized",
    "start": "644079",
    "end": "651360"
  },
  {
    "text": "cluster currently upstream kubernetes is 5000 nodes right so if you've got a 5 000 node cluster",
    "start": "651360",
    "end": "657120"
  },
  {
    "text": "you've got 5 000 kubelet's reporting status to the api server on a regular",
    "start": "657120",
    "end": "662480"
  },
  {
    "text": "basis you've got reconciliation loops in the configuration managers looking at all of those deployments and",
    "start": "662480",
    "end": "669440"
  },
  {
    "text": "services and and as pods come and go they get evicted because one node gets a little bit",
    "start": "669440",
    "end": "674480"
  },
  {
    "text": "tight on memory and they pop up somewhere else you've got the scheduler moving things around and imagine you maybe have you know 10",
    "start": "674480",
    "end": "682240"
  },
  {
    "text": "pods per node in a 5 000 node cluster that's 50 000 pods and that might equate to",
    "start": "682240",
    "end": "688959"
  },
  {
    "text": "something like 5000 deployments and 5 000 services and 50 000 end points for all of those",
    "start": "688959",
    "end": "696000"
  },
  {
    "text": "services and that's a lot of that's a lot of just quiescent activity even though nothing",
    "start": "696000",
    "end": "702079"
  },
  {
    "text": "might be happening um in the cluster driven by users the the reporting and the constant",
    "start": "702079",
    "end": "708640"
  },
  {
    "text": "reconciliation the self-healing behaviors that that kubernetes is performing",
    "start": "708640",
    "end": "714160"
  },
  {
    "text": "all the time can create massive you know flows of messages into the audit log depending on how",
    "start": "714160",
    "end": "720800"
  },
  {
    "text": "you've got it tuned so um the api server is really the centerpiece all the requests to view or modify state",
    "start": "720800",
    "end": "727760"
  },
  {
    "text": "go through that api server and so it's the central place where we want to do auditing um",
    "start": "727760",
    "end": "732880"
  },
  {
    "start": "732000",
    "end": "798000"
  },
  {
    "text": "so what's in the audit log well it tells you what happened so if i for example create a pod or",
    "start": "732880",
    "end": "739360"
  },
  {
    "text": "create a deployment or create a service that's going to be recorded it's going to record when it happened so the",
    "start": "739360",
    "end": "745360"
  },
  {
    "text": "api server will time stamp the audit log event they're called it's going to specify who",
    "start": "745360",
    "end": "751120"
  },
  {
    "text": "initiated it so it'll capture my identity and this is very detailed so",
    "start": "751120",
    "end": "756800"
  },
  {
    "text": "if i am an administrator and i'm impersonating another user um when i create this pod it'll capture",
    "start": "756800",
    "end": "763440"
  },
  {
    "text": "both of those identities the my identity and the party i'm impersonating um so what object did this happen on so the",
    "start": "763440",
    "end": "770480"
  },
  {
    "text": "pod the deployment whatever you can get the exact um uh identity of that object and uh",
    "start": "770480",
    "end": "776800"
  },
  {
    "text": "where was it observed so as information you know is is being processed by the api server we",
    "start": "776800",
    "end": "784240"
  },
  {
    "text": "have different uh stages and so on and then from where was it initiated where did this request",
    "start": "784240",
    "end": "791440"
  },
  {
    "text": "come in from and where is it going so if there's any destination for this thing that can also be identified in the",
    "start": "791440",
    "end": "797839"
  },
  {
    "text": "audit log so an example of an audit event might look something like this and as",
    "start": "797839",
    "end": "804160"
  },
  {
    "start": "798000",
    "end": "1274000"
  },
  {
    "text": "you can see here we're just tailing the the audit log file and just grabbing one line",
    "start": "804160",
    "end": "810160"
  },
  {
    "text": "and the modern audit log is json based so the old audit logging which is",
    "start": "810160",
    "end": "816639"
  },
  {
    "text": "deprecated at this point legacy audit logging was a text based format and so audit events",
    "start": "816639",
    "end": "822480"
  },
  {
    "text": "were a single line but the current approaches json which is a lot easier to",
    "start": "822480",
    "end": "827920"
  },
  {
    "text": "parse and process and store and search and index and all that kind of stuff so",
    "start": "827920",
    "end": "832959"
  },
  {
    "text": "if we just clean clean up the formatting and you know space it and indent it a little bit there with jq",
    "start": "832959",
    "end": "839040"
  },
  {
    "text": "our json query tool we get a nice dump like this and so you can see this looks a lot like",
    "start": "839040",
    "end": "844399"
  },
  {
    "text": "a kubernetes resource um a kubernetes um you know manifest",
    "start": "844399",
    "end": "850079"
  },
  {
    "text": "or a kubernetes spec and so it follows the same exact principles as everything else in kubernetes",
    "start": "850079",
    "end": "856079"
  },
  {
    "text": "where it is kind of a sort of a declarative approach with key value pairs and you know support for",
    "start": "856079",
    "end": "863760"
  },
  {
    "text": "nesting and collections and things like that and so any kubernetes object",
    "start": "863760",
    "end": "869199"
  },
  {
    "text": "that you would try to create would have a kind and so that's the type of thing it is",
    "start": "869199",
    "end": "874560"
  },
  {
    "text": "this is an event however the kind of a thing doesn't create a",
    "start": "874560",
    "end": "880240"
  },
  {
    "text": "unique definition and this is because parties can",
    "start": "880240",
    "end": "885920"
  },
  {
    "text": "can create custom resources for example and so if if my company let's say rxm creates",
    "start": "885920",
    "end": "892560"
  },
  {
    "text": "an event type of resource and then let's say you know another company creates an event type of resource how",
    "start": "892560",
    "end": "899120"
  },
  {
    "text": "would you disambiguate well there's an api um group that you would organize those",
    "start": "899120",
    "end": "906240"
  },
  {
    "text": "kinds under and so as you can see here this is an audit case io based event and it also has a version",
    "start": "906240",
    "end": "914320"
  },
  {
    "text": "so it takes three pieces to put together a complete um you know kind actually you need the",
    "start": "914320",
    "end": "922079"
  },
  {
    "text": "the group you need the um the kind itself which is subordinate to the group and then you",
    "start": "922079",
    "end": "927440"
  },
  {
    "text": "need a version and so there are other types of events and this can be confusing to people first getting",
    "start": "927440",
    "end": "933920"
  },
  {
    "text": "into audit logging the typical kubernetes event that you deal with is a control plane event",
    "start": "933920",
    "end": "940000"
  },
  {
    "text": "that is not an audit event so there are different kinds of events keep an eye on that api group",
    "start": "940000",
    "end": "945360"
  },
  {
    "text": "to know which type of event you're dealing with and then these guys have",
    "start": "945360",
    "end": "952160"
  },
  {
    "text": "they've got a number of other bits of information which makes them a little bit different from a typical",
    "start": "952160",
    "end": "957839"
  },
  {
    "text": "kubernetes resource generally kubernetes resources would support metadata and the",
    "start": "957839",
    "end": "964399"
  },
  {
    "text": "object in question would have a name so these events um have um",
    "start": "964399",
    "end": "971519"
  },
  {
    "text": "you know they have identity um you know per se but they're not named right they're just",
    "start": "971519",
    "end": "977120"
  },
  {
    "text": "events in a stream and so it's not like a pod that would have a name and",
    "start": "977120",
    "end": "982560"
  },
  {
    "text": "also you'll note that these events aren't labeled right they're emitted only we don't create them",
    "start": "982560",
    "end": "987839"
  },
  {
    "text": "they're an artifact of activity in the in the cluster and so um they're created by the api",
    "start": "987839",
    "end": "994160"
  },
  {
    "text": "server in a stream as things happen and they're so they're they're a little bit different um from your traditional resource but",
    "start": "994160",
    "end": "1001199"
  },
  {
    "text": "the the format is kind of similar now you will note down at the bottom here that we have annotations",
    "start": "1001199",
    "end": "1006800"
  },
  {
    "text": "and these are just exactly like annotations in a typical kubernetes",
    "start": "1006800",
    "end": "1012399"
  },
  {
    "text": "resource they give us the ability to expand on the functionality",
    "start": "1012399",
    "end": "1018000"
  },
  {
    "text": "of the audit log event without damaging the overall spec so for example",
    "start": "1018000",
    "end": "1024000"
  },
  {
    "text": "if you create a pod and you want to tell um you know some oh uh let's say some",
    "start": "1024000",
    "end": "1031038"
  },
  {
    "text": "some c and i plug in something special like maybe the c i plug-in has some tricky dual networking functionality and you",
    "start": "1031039",
    "end": "1037360"
  },
  {
    "text": "want to tell it to put you on the b network you could use an annotation kubernetes doesn't know anything about",
    "start": "1037360",
    "end": "1042480"
  },
  {
    "text": "multiple networks but by plugging an annotation in there you're creating a key value pair that",
    "start": "1042480",
    "end": "1048079"
  },
  {
    "text": "kubernetes basically passes around everywhere but just ignores and so all of the plug-in components and",
    "start": "1048079",
    "end": "1053919"
  },
  {
    "text": "extension points in kubernetes are often going to use these annotations to um",
    "start": "1053919",
    "end": "1059360"
  },
  {
    "text": "to augment the functionality of a particular thing and so in the case of audit logging that's exactly true",
    "start": "1059360",
    "end": "1064559"
  },
  {
    "text": "so if we have for example um an admission controller that we've um added to our cluster",
    "start": "1064559",
    "end": "1071120"
  },
  {
    "text": "through a web hook well kubernetes can create audit events around hey this thing got denied because",
    "start": "1071120",
    "end": "1077520"
  },
  {
    "text": "the pod security policy denied it but if the um if the web hook um",
    "start": "1077520",
    "end": "1082559"
  },
  {
    "text": "that is not part of kubernetes denies this we need to you know maybe have some some reasons why or if it mutates the request",
    "start": "1082559",
    "end": "1090240"
  },
  {
    "text": "we might want to know what the mutation was and all those types of things can be represented in annotations so annotations are really",
    "start": "1090240",
    "end": "1096320"
  },
  {
    "text": "um really give us a lot of flexibility here some other things um that you'll note",
    "start": "1096320",
    "end": "1102240"
  },
  {
    "text": "that we're going to talk about in a second are that there are stages of processing and so you can record events at",
    "start": "1102240",
    "end": "1110720"
  },
  {
    "text": "a given stage of processing or multiple stages of processing if you like we have a you know the user as we",
    "start": "1110720",
    "end": "1117600"
  },
  {
    "text": "described who was involved here so this is this particular node so that's",
    "start": "1117600",
    "end": "1122799"
  },
  {
    "text": "the hostname of the node that that made this api",
    "start": "1122799",
    "end": "1128400"
  },
  {
    "text": "get request and you can also see the the url so this was the request api",
    "start": "1128400",
    "end": "1135360"
  },
  {
    "text": "so this this particular node was getting the uh api v1 nodes information on itself",
    "start": "1135360",
    "end": "1142400"
  },
  {
    "text": "um which it is allowed to do um and it is going to do on a on a regular basis right",
    "start": "1142400",
    "end": "1147679"
  },
  {
    "text": "to get any um you know kind of updated information about itself this is an interesting thing about kubernetes right",
    "start": "1147679",
    "end": "1153360"
  },
  {
    "text": "you have to remember that when you submit a specification to kubernetes the api server basically",
    "start": "1153360",
    "end": "1158640"
  },
  {
    "text": "verifies it from a security standpoint and then dumps it into cd there is no guarantee",
    "start": "1158640",
    "end": "1164320"
  },
  {
    "text": "that that means it's going to be okay or work right and so um things asynchronously then kick off",
    "start": "1164320",
    "end": "1170480"
  },
  {
    "text": "after that like the scheduler assigns pods to nodes and if there's no node available your pod might be pending if the pod",
    "start": "1170480",
    "end": "1176640"
  },
  {
    "text": "does end up on node but there you know the image that you've specified in the pod is no good um that's gonna cause the",
    "start": "1176640",
    "end": "1184640"
  },
  {
    "text": "kubelet to not be able to pull the image and it's not gonna run again but in all cases as far as the api",
    "start": "1184640",
    "end": "1190080"
  },
  {
    "text": "server was concerned the spec was good and it saved it to cd so you have to also have you know a fair",
    "start": "1190080",
    "end": "1196240"
  },
  {
    "text": "amount of understanding of kubernetes to be able to follow through with some of these events because um",
    "start": "1196240",
    "end": "1202000"
  },
  {
    "text": "the ways that you would find out these other things would be after the fact right the user posted that pods fact",
    "start": "1202000",
    "end": "1207600"
  },
  {
    "text": "sure and there was no errors but that doesn't mean it's okay the scheduler might might attempt to do",
    "start": "1207600",
    "end": "1213600"
  },
  {
    "text": "something and report that it couldn't be scheduled the cubelet might report a status of",
    "start": "1213600",
    "end": "1219520"
  },
  {
    "text": "image pull you know um you know fall back and you know be be uh be failing to to",
    "start": "1219520",
    "end": "1226159"
  },
  {
    "text": "pull the image and continue retrying and reporting that so you can find lots of different pieces",
    "start": "1226159",
    "end": "1231200"
  },
  {
    "text": "of the puzzle and wiring that all together um is is definitely a skill that you develop",
    "start": "1231200",
    "end": "1236960"
  },
  {
    "text": "through practice so um you know one would suggest then that if you're going",
    "start": "1236960",
    "end": "1242960"
  },
  {
    "text": "to if you if you find that audit logging is going to be an important part of your you know operational environment um",
    "start": "1242960",
    "end": "1249679"
  },
  {
    "text": "working with audit logs and starting to craft um uh you know some experience and and",
    "start": "1249679",
    "end": "1256559"
  },
  {
    "text": "dashboards and things like that through your backend you know log management systems whatever they may",
    "start": "1256559",
    "end": "1261600"
  },
  {
    "text": "be splunk or uh elasticsearch kibana you know uh grafana on low-key or",
    "start": "1261600",
    "end": "1267280"
  },
  {
    "text": "whatever it is um you know getting getting prepared and developing some skills ahead of time can really pay",
    "start": "1267280",
    "end": "1273120"
  },
  {
    "text": "dividends when you're in a um a scenario where there's a failure or some security event that you need to",
    "start": "1273120",
    "end": "1280000"
  },
  {
    "start": "1274000",
    "end": "1497000"
  },
  {
    "text": "deal with so what is the definition of the fields in the audit event and and how",
    "start": "1280000",
    "end": "1286240"
  },
  {
    "text": "are they all organized well that's a good question and i'm just going to pull up something that you're probably",
    "start": "1286240",
    "end": "1293520"
  },
  {
    "text": "familiar with here go to kates dot io docs",
    "start": "1293520",
    "end": "1299760"
  },
  {
    "text": "and pull up the reference here so if you want to know what's you know how to specify resources",
    "start": "1299840",
    "end": "1306559"
  },
  {
    "text": "the api for kubernetes is essentially this these json documents right i mean you",
    "start": "1306559",
    "end": "1311679"
  },
  {
    "text": "you get post put and delete these things but all of the activity that's taking place",
    "start": "1311679",
    "end": "1316799"
  },
  {
    "text": "is in response to these documents and so as i mentioned if i",
    "start": "1316799",
    "end": "1322320"
  },
  {
    "text": "go ahead and search for event and we look down the left hand side here you can see that",
    "start": "1322320",
    "end": "1327520"
  },
  {
    "text": "there's a metadata api and there's an event defined there but this is part of the core group",
    "start": "1327520",
    "end": "1333200"
  },
  {
    "text": "right any any time you you don't have a a group name and so for example let me",
    "start": "1333200",
    "end": "1339120"
  },
  {
    "text": "just go over here to a cluster and do a cube ctl api",
    "start": "1339120",
    "end": "1346640"
  },
  {
    "text": "resources right so these these are all the api resources um known um to the",
    "start": "1346640",
    "end": "1353919"
  },
  {
    "text": "um to this particular api server and so these are things you can post you",
    "start": "1353919",
    "end": "1359280"
  },
  {
    "text": "know and put and and delete uh through the api server api but you'll see",
    "start": "1359280",
    "end": "1365200"
  },
  {
    "text": "that there's a bunch of these resource types pods you know the early guys that were there with version one that don't have an api group that's the",
    "start": "1365200",
    "end": "1371600"
  },
  {
    "text": "core group so those guys are always in the core group and then you've got a bunch of these guys that have different groups um",
    "start": "1371600",
    "end": "1377200"
  },
  {
    "text": "depending on you know which which working group is is managing those those particular resources and",
    "start": "1377200",
    "end": "1383679"
  },
  {
    "text": "you'll note that if we",
    "start": "1383679",
    "end": "1389840"
  },
  {
    "text": "look for events you can see that we've got events and event right events dot kate's dot io",
    "start": "1391440",
    "end": "1397120"
  },
  {
    "text": "so this is a completely different group it's an it's a not the same resource as the the audit log resource it's not part of the",
    "start": "1397120",
    "end": "1403760"
  },
  {
    "text": "api right it's these are just a format for audit um you know uh information being emitted so",
    "start": "1403760",
    "end": "1410960"
  },
  {
    "text": "you know we're kind of stranded here because if we you know you can search around and you're just you know you're",
    "start": "1410960",
    "end": "1416000"
  },
  {
    "text": "going to find these are legacy um right old api versions so there's just there's no uh there's no",
    "start": "1416000",
    "end": "1422480"
  },
  {
    "text": "information here there's there's uh limited um information about um the format of the api events and",
    "start": "1422480",
    "end": "1428960"
  },
  {
    "text": "things like that and so whenever you're in doubt you know go to the sources because kubernetes being open source is a huge",
    "start": "1428960",
    "end": "1435360"
  },
  {
    "text": "benefit um the quality of the code in kubernetes is pretty dang high because",
    "start": "1435360",
    "end": "1440799"
  },
  {
    "text": "there's a there's you know this all of this governance involved in you know how changes are made and you",
    "start": "1440799",
    "end": "1446240"
  },
  {
    "text": "know reviews and you know minimum requirements for documentation and um in the code so as you can see here",
    "start": "1446240",
    "end": "1453679"
  },
  {
    "text": "um all we really need to do is go to kubernetes in github and you know move down to the",
    "start": "1453679",
    "end": "1460799"
  },
  {
    "text": "api server package and then look in the audit b1 types go and you're going to find definitions of",
    "start": "1460799",
    "end": "1467520"
  },
  {
    "text": "all of the types of things that the audit subsystem uses so you'll find information for example here on the event struck",
    "start": "1467520",
    "end": "1474159"
  },
  {
    "text": "and you know every single field is um described and you can of course even see the data",
    "start": "1474159",
    "end": "1480080"
  },
  {
    "text": "types that are being used here which if you can read go which isn't that hard to",
    "start": "1480080",
    "end": "1485520"
  },
  {
    "text": "ingest if you know any programming language really um you got a a leg up so um getting",
    "start": "1485520",
    "end": "1492080"
  },
  {
    "text": "detailed um definitions for events and all the different fields you can find here you're running into something that",
    "start": "1492080",
    "end": "1497120"
  },
  {
    "start": "1497000",
    "end": "1930000"
  },
  {
    "text": "you're not familiar with but let's cover a few of the key things um api servers um you know process requests",
    "start": "1497120",
    "end": "1503679"
  },
  {
    "text": "and stages and so they authenticate users they authorize users they admit uh resources um",
    "start": "1503679",
    "end": "1512000"
  },
  {
    "text": "as a final stage in the security processing there's other things that happen as well and so um from an audit standpoint",
    "start": "1512000",
    "end": "1519360"
  },
  {
    "text": "um receiving request is something that we can log if we want to this is the",
    "start": "1519360",
    "end": "1524559"
  },
  {
    "text": "first stage this is generated as soon as the audit handler receives the request and so if you if you're interested",
    "start": "1524559",
    "end": "1532080"
  },
  {
    "text": "in you know every single request that's made that's that's a stage next the response started",
    "start": "1532080",
    "end": "1538320"
  },
  {
    "text": "so this is after the response headers are sent but before the response body is sent so",
    "start": "1538320",
    "end": "1543440"
  },
  {
    "text": "this would apply to like a long-running request like a watch request or something like that",
    "start": "1543440",
    "end": "1549840"
  },
  {
    "text": "and then response complete again this is the response body complete so after there's no bytes left to send",
    "start": "1549840",
    "end": "1556320"
  },
  {
    "text": "and then there are also um you know in in go programming a panic means something pretty catastrophic has",
    "start": "1556320",
    "end": "1563200"
  },
  {
    "text": "happened and while you might be able to um recover from that most of the times that means that",
    "start": "1563200",
    "end": "1568640"
  },
  {
    "text": "you know the api server would would crash so i'm pretty serious so those are some stages that you can",
    "start": "1568640",
    "end": "1574880"
  },
  {
    "text": "see identified in the events and you can also use these stages for filtering events too",
    "start": "1574880",
    "end": "1580400"
  },
  {
    "text": "as we'll see so audit levels control the level of data emitted for an event none means you're not going to log",
    "start": "1580400",
    "end": "1587279"
  },
  {
    "text": "anything this is the default so if there's no policy specifying what to do nothing's going to happen",
    "start": "1587279",
    "end": "1592559"
  },
  {
    "text": "then you've got metadata so this is basically going to log all the you know the high level stuff",
    "start": "1592559",
    "end": "1599600"
  },
  {
    "text": "like the the header type of information that you would have in a http sort of exchange so it's going to log",
    "start": "1599600",
    "end": "1605600"
  },
  {
    "text": "the user the time stamp resource information the verb used so",
    "start": "1605600",
    "end": "1611279"
  },
  {
    "text": "you can basically see what's going on but you won't be able to see the details so you wouldn't be able to see for",
    "start": "1611279",
    "end": "1617279"
  },
  {
    "text": "example you'd see that somebody's creating a particular pod but you wouldn't see what the pod spec is now that's going to do two things",
    "start": "1617279",
    "end": "1625120"
  },
  {
    "text": "by sticking with metadata you're going to be able to see broad activity in your cluster you're going to be able to know",
    "start": "1625120",
    "end": "1630240"
  },
  {
    "text": "what kinds of things are happening and and which objects they're happening too but you won't have the details",
    "start": "1630240",
    "end": "1635840"
  },
  {
    "text": "you won't know specifically you know when this thing happened or when that thing happened or when the next thing happened",
    "start": "1635840",
    "end": "1641760"
  },
  {
    "text": "insofar as mutation of a pod for example where if you go with requests that's going to give you the request body",
    "start": "1641760",
    "end": "1648960"
  },
  {
    "text": "but you won't know what the response is going to be if you're going to if you're going to capture the request",
    "start": "1648960",
    "end": "1655360"
  },
  {
    "text": "which is often um you know a big piece of the puzzle then you might want to think about",
    "start": "1655360",
    "end": "1662559"
  },
  {
    "text": "capturing the response as well so that you can see the um the response body coming back though again you know",
    "start": "1662559",
    "end": "1669120"
  },
  {
    "text": "if there's a lot of activity on your cluster that's looking things up constantly then the responses could be large and",
    "start": "1669120",
    "end": "1674720"
  },
  {
    "text": "that could you know you know not not just incrementally but you know potentially multiplicatively increase",
    "start": "1674720",
    "end": "1679760"
  },
  {
    "text": "the amount of logging so each of these gives you progressively more log output and that means you're",
    "start": "1679760",
    "end": "1686080"
  },
  {
    "text": "going to have to have more capacity and throughput in your log you know function so however you've got",
    "start": "1686080",
    "end": "1693039"
  },
  {
    "text": "your logging managed so here's the audit policy so an audit",
    "start": "1693039",
    "end": "1698159"
  },
  {
    "text": "policy is again a lot like a you know a typical kubernetes resource and it is saved in a file",
    "start": "1698159",
    "end": "1706240"
  },
  {
    "text": "and provided to the um to the api server in order to allow it to",
    "start": "1706240",
    "end": "1712399"
  },
  {
    "text": "um you know decide what kind of auditing you'd like to do and the audit policy",
    "start": "1712399",
    "end": "1717840"
  },
  {
    "text": "file is incredibly powerful it allows you to really get very very",
    "start": "1717840",
    "end": "1724080"
  },
  {
    "text": "um specific about the types of things that you want to capture so for example you've got",
    "start": "1724080",
    "end": "1731520"
  },
  {
    "text": "high level specifications that you can add like omit request received stage so",
    "start": "1731520",
    "end": "1738960"
  },
  {
    "text": "um that's you know that's sort of a global policy then you've got individual rules and",
    "start": "1738960",
    "end": "1745279"
  },
  {
    "text": "these rules specify the level so in this case request response down here metadata down here none and then you've",
    "start": "1745279",
    "end": "1753279"
  },
  {
    "text": "got the resources and so you've got the group so this is the core group right",
    "start": "1753279",
    "end": "1758799"
  },
  {
    "text": "empty string is core group if you wanted to reference apps you know you'd put apps",
    "start": "1758799",
    "end": "1764960"
  },
  {
    "text": "in there or if it was networking.kates.io you'd put that in there and then you've got the resource",
    "start": "1764960",
    "end": "1770240"
  },
  {
    "text": "types and this is of course a list so you could have as many resource types from the core group as you'd like to specify here as we move",
    "start": "1770240",
    "end": "1777360"
  },
  {
    "text": "down you can see that you can even choose specific resource names so if you want to for example make sure",
    "start": "1777360",
    "end": "1786240"
  },
  {
    "text": "that we're not logging config maps then we could specify this specific config map by name",
    "start": "1786240",
    "end": "1793760"
  },
  {
    "text": "is not to be logged and then we've got scenarios where we're picking in specific users from the list so",
    "start": "1793760",
    "end": "1801440"
  },
  {
    "text": "logging activity from the q proxy in this case and and specifying the verbs that we're",
    "start": "1801440",
    "end": "1806640"
  },
  {
    "text": "interested in well in this case not logging and so maybe there's a lot of activity in your in your log",
    "start": "1806640",
    "end": "1812720"
  },
  {
    "text": "that you've identified as not being pertinent in the scenarios that you want",
    "start": "1812720",
    "end": "1818480"
  },
  {
    "text": "to be able to do forensics around you can um you know you can sometimes carve out 10",
    "start": "1818480",
    "end": "1823840"
  },
  {
    "text": "20 30 40 percent of the you know of the i o by just carefully blocking off",
    "start": "1823840",
    "end": "1831039"
  },
  {
    "text": "certain bits of logging using level none so uh really useful um",
    "start": "1831039",
    "end": "1837360"
  },
  {
    "text": "useful tool and you know you know very very powerful and gives you lots of granular control",
    "start": "1837360",
    "end": "1842799"
  },
  {
    "text": "so again where do we get the the details um this is not a kubernetes",
    "start": "1842799",
    "end": "1849679"
  },
  {
    "text": "api server resource it's a it's an audit subsystem configuration file so",
    "start": "1849679",
    "end": "1856320"
  },
  {
    "text": "again if we go to types you can see all of the different settings for a policy rule which is you know the main",
    "start": "1856320",
    "end": "1862799"
  },
  {
    "text": "thing you're going to construct and if you look through you're in the types you'd see the you know the policy will list and the audit policy",
    "start": "1862799",
    "end": "1868799"
  },
  {
    "text": "types and all that but the rules are kind of the interesting one and so you've got the users component of",
    "start": "1868799",
    "end": "1875279"
  },
  {
    "text": "the rule for example user groups um and if you're familiar with our back if",
    "start": "1875279",
    "end": "1880799"
  },
  {
    "text": "you've done any kubernetes security and i would say that that that's almost a prerequisite to you know",
    "start": "1880799",
    "end": "1887760"
  },
  {
    "text": "working with the audit log if you're in this space and you're doing this kind of stuff you you may be a security professional or that's a hat you wear",
    "start": "1887760",
    "end": "1894080"
  },
  {
    "text": "and so audit logging um involves similar types of constructs right you are um you're in our back",
    "start": "1894080",
    "end": "1901760"
  },
  {
    "text": "going to give a particular principal a user a group or a service account some capability so some verb",
    "start": "1901760",
    "end": "1910159"
  },
  {
    "text": "on some object so some resource type and those resource types again can be scoped by",
    "start": "1910159",
    "end": "1917039"
  },
  {
    "text": "the the group and then they can even be scoped down to a specific named resource",
    "start": "1917039",
    "end": "1922320"
  },
  {
    "text": "and then a kind and so that just kind of carries on here so if you're familiar with uh with our back the audit rules are",
    "start": "1922320",
    "end": "1929760"
  },
  {
    "text": "very similar so um as we mentioned auditing's not cheap um it increases the memory consumption",
    "start": "1929760",
    "end": "1936320"
  },
  {
    "text": "of the api server remember from the model that we saw only the api server is involved in um in auditing so",
    "start": "1936320",
    "end": "1944240"
  },
  {
    "text": "you know you don't really have to worry about the activity from you know the controller managers or the other guys it's really the api server",
    "start": "1944240",
    "end": "1950399"
  },
  {
    "text": "and so um you know topping your system getting some baselines of your server without auditing and then",
    "start": "1950399",
    "end": "1958480"
  },
  {
    "text": "you know maybe progressively ratcheting up the policy to increase the amount of auditing and",
    "start": "1958480",
    "end": "1965440"
  },
  {
    "text": "watching your resource consumption on the api server side um you know is not a bad thing to do",
    "start": "1965440",
    "end": "1971039"
  },
  {
    "text": "that way you can sort of get a sense for you know where the diminishing returns are if you you know if you basically log",
    "start": "1971039",
    "end": "1978640"
  },
  {
    "text": "everything it's going to be you know crazy you know you know every byte in is going to be magnified by two because",
    "start": "1978640",
    "end": "1984480"
  },
  {
    "text": "you're going to be writing it to the audit log with a bunch of extra metadata so um you know kind of getting a sense",
    "start": "1984480",
    "end": "1990640"
  },
  {
    "text": "for um the the throughput capabilities of your system and and the memory capabilities is gonna",
    "start": "1990640",
    "end": "1996399"
  },
  {
    "text": "be important memory is a key piece of the puzzle because the um the the api servers audit",
    "start": "1996399",
    "end": "2001840"
  },
  {
    "text": "subsystem is gonna to capture you know various contexts and other types of information",
    "start": "2001840",
    "end": "2008559"
  },
  {
    "text": "about all this logging audit logging output and in many cases you'll want to be buffering",
    "start": "2008559",
    "end": "2015600"
  },
  {
    "text": "your output as we'll talk about in a little bit so watching memory utilization of your server and also the",
    "start": "2015600",
    "end": "2020720"
  },
  {
    "text": "i o consumption of your server to whatever kind of back end you're using for capturing the audit information",
    "start": "2020720",
    "end": "2027279"
  },
  {
    "text": "so how do we set up the api server well the api server has 30 audit logging",
    "start": "2027279",
    "end": "2032480"
  },
  {
    "text": "options and the most important one is perhaps audit policy file",
    "start": "2032480",
    "end": "2037679"
  },
  {
    "text": "and so that's the file to actually use um to to define your audit policy",
    "start": "2037679",
    "end": "2044480"
  },
  {
    "text": "and a lot of times when people um you know start thinking about you know this this file",
    "start": "2044480",
    "end": "2050720"
  },
  {
    "text": "um you you you can you can put it in a bunch of different places but at the end of the day",
    "start": "2050720",
    "end": "2056480"
  },
  {
    "text": "in a cube adm scenario you would probably put it in a protected directory and then",
    "start": "2056480",
    "end": "2061599"
  },
  {
    "text": "you would hostpath mount it into the api server container that would be a typical",
    "start": "2061599",
    "end": "2067520"
  },
  {
    "text": "scenario um so the next thing that we've got and let me just maybe i'll just show you a quick example of that so",
    "start": "2067520",
    "end": "2074240"
  },
  {
    "text": "let's come back over here and let me just dump out the",
    "start": "2074240",
    "end": "2083358"
  },
  {
    "text": "the manifest that's running our api servers so",
    "start": "2084159",
    "end": "2089839"
  },
  {
    "text": "there you go and so you can see this guy this guy's got a host path for var log",
    "start": "2094639",
    "end": "2100240"
  },
  {
    "text": "audit that's where the log output is going but the audit the the policy file also as it",
    "start": "2100240",
    "end": "2105440"
  },
  {
    "text": "turns out is there a lot of times the policy file would be in etsy kubernetes or something like that but there's the mount path inside the",
    "start": "2105440",
    "end": "2111359"
  },
  {
    "text": "container so it's the same as the host and then in the configuration of the api",
    "start": "2111359",
    "end": "2117040"
  },
  {
    "text": "server so we run the cube api server in our configuration we specify the audit log path and then we have the",
    "start": "2117040",
    "end": "2122560"
  },
  {
    "text": "policy so those are two key configurations and you can run the kubernetes",
    "start": "2122560",
    "end": "2128320"
  },
  {
    "text": "api server with a minus minus help and that'll dump out all the switches and there are a lot",
    "start": "2128320",
    "end": "2133920"
  },
  {
    "text": "um and you can also you know use the documentation for reference if you want to but this is a",
    "start": "2133920",
    "end": "2140000"
  },
  {
    "text": "complete list of the the current with kubernetes 119.3 audit log options now if you want to you",
    "start": "2140000",
    "end": "2147839"
  },
  {
    "text": "have two possible backends for the um the api servers audit logging one of them is a",
    "start": "2147839",
    "end": "2153040"
  },
  {
    "text": "local file or it doesn't have to be local a file and then the other one would be a web hook",
    "start": "2153040",
    "end": "2158400"
  },
  {
    "text": "and so there's a posting protocol for the web hook to receive all the events and in either scenario um there",
    "start": "2158400",
    "end": "2165920"
  },
  {
    "text": "are lots of settings right so these are all the log settings these apply to a file based",
    "start": "2165920",
    "end": "2171520"
  },
  {
    "text": "log output where regular file io would be what the api server was doing and these are the web hooks where it",
    "start": "2171520",
    "end": "2177200"
  },
  {
    "text": "would be an http um you know post style output",
    "start": "2177200",
    "end": "2183119"
  },
  {
    "text": "so that's the you know the basic configuration stuff so now let's now that we kind of got an",
    "start": "2183119",
    "end": "2189200"
  },
  {
    "start": "2186000",
    "end": "2551000"
  },
  {
    "text": "idea of audit logging we've seen some events we know how to configure servers we understand this policy thing",
    "start": "2189200",
    "end": "2194800"
  },
  {
    "text": "um what are some of the concerns um that you run into in practice with this well one of the",
    "start": "2194800",
    "end": "2200240"
  },
  {
    "text": "first things that you run into is having multiple api servers because nobody in a production environment is going to have one api server because the",
    "start": "2200240",
    "end": "2206800"
  },
  {
    "text": "api server goes down your cluster is dead two is probably fine um for most clusters",
    "start": "2206800",
    "end": "2212400"
  },
  {
    "text": "you get you know that way if one of them goes down you still have the other one and you know it's it's pretty unlikely",
    "start": "2212400",
    "end": "2217839"
  },
  {
    "text": "you're gonna lose two and and when you add api servers",
    "start": "2217839",
    "end": "2222880"
  },
  {
    "text": "you you get some scaling ability right because the logic being processed",
    "start": "2222880",
    "end": "2228240"
  },
  {
    "text": "by the api servers is you know now distributed but really at the end of the day",
    "start": "2228240",
    "end": "2233520"
  },
  {
    "text": "you know maybe i'll just go back here to this previous model at the end of the day the bottleneck is etcd",
    "start": "2233520",
    "end": "2239200"
  },
  {
    "text": "so lcd is an in-memory key value store this is why the audit log is not going",
    "start": "2239200",
    "end": "2245760"
  },
  {
    "text": "here right it would totally etcd is already a bottleneck just keeping up with the the the",
    "start": "2245760",
    "end": "2252400"
  },
  {
    "text": "configuration of the cluster right and the events that are happening because those you know the eight you know control plane level events those",
    "start": "2252400",
    "end": "2259119"
  },
  {
    "text": "events are actually being stored in std for a period of time um but the audit log data that's massive so",
    "start": "2259119",
    "end": "2264800"
  },
  {
    "text": "we have to have a completely different channel totally independent um for the you know the the audit log and when you",
    "start": "2264800",
    "end": "2272800"
  },
  {
    "text": "think about this um ftd is is is often in a production system running on a different cluster so you",
    "start": "2272800",
    "end": "2279359"
  },
  {
    "text": "would have a you know a three you know rolling production you probably have a five or a seven node std cluster",
    "start": "2279359",
    "end": "2284640"
  },
  {
    "text": "and so you know the api server uh cardinality is independent of std if you're if",
    "start": "2284640",
    "end": "2290480"
  },
  {
    "text": "you're not running them on the same box right so a collapsed std api server where the std nodes are running on the",
    "start": "2290480",
    "end": "2296079"
  },
  {
    "text": "same machines as the api servers is is an okay way to do things but if you're doing things in that way then what defines the number",
    "start": "2296079",
    "end": "2303839"
  },
  {
    "text": "of api servers you have is the xtd cluster size not the api you know not the api service two api servers is fine",
    "start": "2303839",
    "end": "2310640"
  },
  {
    "text": "for high availability for most clusters but here's a problem um when you have multiple api servers",
    "start": "2310640",
    "end": "2318000"
  },
  {
    "text": "and let's say you have three you're going to need a load balancer and so you might set up you know if you're",
    "start": "2318000",
    "end": "2325599"
  },
  {
    "text": "using google cloud you might use a network load balancer on amazon or something um google cloud use their load balance",
    "start": "2325599",
    "end": "2332320"
  },
  {
    "text": "or azure use their load balancer um to basically front end your api servers and all your",
    "start": "2332320",
    "end": "2337359"
  },
  {
    "text": "your your cube kiddo configs are going to refer to the um the tcp load balancer and so they",
    "start": "2337359",
    "end": "2344079"
  },
  {
    "text": "hit this guy he just forwards the traffic onto one of these api servers and you don't know the difference but",
    "start": "2344079",
    "end": "2349119"
  },
  {
    "text": "there's a health check so that when one of these guys crashes they only send you to the guys that are alive well that's",
    "start": "2349119",
    "end": "2354400"
  },
  {
    "text": "great but the downside is you don't know which one of these guys is going to be dumping out the audit log information",
    "start": "2354400",
    "end": "2360960"
  },
  {
    "text": "that you're interested in so you could do something like run a pod as you can see down here and",
    "start": "2360960",
    "end": "2367680"
  },
  {
    "text": "then you know tail the audit log looking for you know some sort of pod activity and not see it because you're looking at the",
    "start": "2367680",
    "end": "2373839"
  },
  {
    "text": "wrong audit log right and you you came in here and hit this guy and this guy logged the activity and these two logs don't have anything about",
    "start": "2373839",
    "end": "2380240"
  },
  {
    "text": "it so the api servers are shared nothing right they're microservices they don't",
    "start": "2380240",
    "end": "2385440"
  },
  {
    "text": "know you know what's going on in the other server they're really focused on you know being",
    "start": "2385440",
    "end": "2390960"
  },
  {
    "text": "as independent as possible so the downside is your audit log is",
    "start": "2390960",
    "end": "2396160"
  },
  {
    "text": "um now sharded basically and so to unchart it you're going to do something",
    "start": "2396160",
    "end": "2401280"
  },
  {
    "text": "like run a fluent d or a log stash or a beat or a fluid bit or something like that to",
    "start": "2401280",
    "end": "2407599"
  },
  {
    "text": "splunk you know forward or something to move that log data into a back end where you can get a complete picture of what's",
    "start": "2407599",
    "end": "2413200"
  },
  {
    "text": "going on in the cluster and so that's important another thing about these distributed",
    "start": "2413200",
    "end": "2418800"
  },
  {
    "text": "um you know api servers is that on the upside you get scaling right so",
    "start": "2418800",
    "end": "2425040"
  },
  {
    "text": "if you've got you know huge throughput going on in your audit log you just divided it by three",
    "start": "2425040",
    "end": "2430800"
  },
  {
    "text": "by having three api servers and so you know as long as your network can can handle it and you've got you know the",
    "start": "2430800",
    "end": "2437440"
  },
  {
    "text": "bandwidth um on the on the actual wire you're you're using three nicks you're using three sets of memories you're using",
    "start": "2437440",
    "end": "2443359"
  },
  {
    "text": "three sets of disk whatever the case may be you've really got scale there so this is one way in which actually having",
    "start": "2443359",
    "end": "2449599"
  },
  {
    "text": "multiple api servers can in fact have a dramatic impact on your scaling challenges",
    "start": "2449599",
    "end": "2455119"
  },
  {
    "text": "because we're not using audit logging um you know i mean one api server can handle a pretty honking big cluster it's the ncd",
    "start": "2455119",
    "end": "2462160"
  },
  {
    "text": "cluster that's always the bottleneck and so you know two api service is good for ha three is even better but you know if you",
    "start": "2462160",
    "end": "2469119"
  },
  {
    "text": "had audit log challenges you might wanna go to four or five and you know get your audit logs scaled out um",
    "start": "2469119",
    "end": "2475040"
  },
  {
    "text": "you know using using more api servers and remember the cardinality could be completely different from the xtd",
    "start": "2475040",
    "end": "2480319"
  },
  {
    "text": "cluster because you know usually that's a separate cluster of servers another thing people often you know stub",
    "start": "2480319",
    "end": "2487839"
  },
  {
    "text": "their toe on for a day or two is using config maps configmaps are awesome for configuring things and you might say",
    "start": "2487839",
    "end": "2493760"
  },
  {
    "text": "hey i'm running the api server in a pod why don't i set up the policy as a config map you",
    "start": "2493760",
    "end": "2498880"
  },
  {
    "text": "could but what happens when you start the cluster",
    "start": "2498880",
    "end": "2504319"
  },
  {
    "text": "there's no api servers running and you fire up the first api server and for him to configure himself he",
    "start": "2504319",
    "end": "2510079"
  },
  {
    "text": "needs a config map well how are you going to get that config map you need to make a request to an api server that's going to",
    "start": "2510079",
    "end": "2516560"
  },
  {
    "text": "hit std and give you the config map but there's no api service there's a chicken and egg problem so",
    "start": "2516560",
    "end": "2522079"
  },
  {
    "text": "most people skip that and do some other technique to standardize their policies but this is",
    "start": "2522079",
    "end": "2528000"
  },
  {
    "text": "another pitfall right what if api server one has one policy and server two has a different policy and server three has a",
    "start": "2528000",
    "end": "2534319"
  },
  {
    "text": "different policy i mean there there could be excuses for doing that it is totally possible but um it's going",
    "start": "2534319",
    "end": "2541920"
  },
  {
    "text": "to give you weird asymmetric log output right from the different servers so in most cases that i've run across",
    "start": "2541920",
    "end": "2549359"
  },
  {
    "text": "you probably want them to be the same and you might want to have some you know sort of immutable infrastructure",
    "start": "2549359",
    "end": "2555040"
  },
  {
    "start": "2551000",
    "end": "2780000"
  },
  {
    "text": "ansible salt you know whatever type of things it's you know keeping those files in sync or have them from a shared disk you know",
    "start": "2555040",
    "end": "2561920"
  },
  {
    "text": "or something so next thing to talk about we've got a few more things here i know i think we have to",
    "start": "2561920",
    "end": "2568160"
  },
  {
    "text": "wrap up but i'll try to hit a couple more things here and then we'll see if we can get some time for questions so mutating",
    "start": "2568160",
    "end": "2574240"
  },
  {
    "text": "admission controller webhooks it can be useful to know which mutating web hook mutated an object",
    "start": "2574240",
    "end": "2581119"
  },
  {
    "text": "in an api request and if you've got a you know if you've got a bunch of plugins into",
    "start": "2581119",
    "end": "2586319"
  },
  {
    "text": "the api server that are potentially changing the nature",
    "start": "2586319",
    "end": "2592400"
  },
  {
    "text": "of a resource that somebody created um by default the api server won't know",
    "start": "2592400",
    "end": "2598000"
  },
  {
    "text": "anything about it right it's going to call these guys and um you know it's it's they do what they do and then the",
    "start": "2598000",
    "end": "2603440"
  },
  {
    "text": "the api server just you know moves on to the next um unit in the chain and so what we want to be able to do is",
    "start": "2603440",
    "end": "2609520"
  },
  {
    "text": "see where in the chain you know change a happened and where in the chain change b happens so",
    "start": "2609520",
    "end": "2615680"
  },
  {
    "text": "a popular example would be istio for example and the istio proxy injector so i create a pod",
    "start": "2615680",
    "end": "2623280"
  },
  {
    "text": "i'm oblivious i just you know wrote my app and i put it in a pod and i go to deploy it",
    "start": "2623280",
    "end": "2628560"
  },
  {
    "text": "and now the um the api server says oh we have a we have a um you know a mutating admission",
    "start": "2628560",
    "end": "2636480"
  },
  {
    "text": "controller here that wants to mess with this pot and what is he going to do he's going to add to the pod",
    "start": "2636480",
    "end": "2641520"
  },
  {
    "text": "of an init container that's going to rewire all of the traffic in the pod",
    "start": "2641520",
    "end": "2647599"
  },
  {
    "text": "and then he's going to add a sidecar for the proxy which is going to intercept all the",
    "start": "2647599",
    "end": "2653280"
  },
  {
    "text": "outbound traffic from the main container and he's going to then you know tls encrypt it and do mtls and",
    "start": "2653280",
    "end": "2660640"
  },
  {
    "text": "emit tracing data and whatever else he's going to do but that mutation is fairly complex and it could",
    "start": "2660640",
    "end": "2666800"
  },
  {
    "text": "interact in weird ways with other mutations and it becomes hard to sort of figure out what's going on unless you have some",
    "start": "2666800",
    "end": "2672160"
  },
  {
    "text": "way to introspect and this is exactly what um mutating admission controller web hooks can do",
    "start": "2672160",
    "end": "2678720"
  },
  {
    "text": "by using annotations so you can see in the example here mutation web hook and mission controller",
    "start": "2678720",
    "end": "2683920"
  },
  {
    "text": "case io round one index two so if you're familiar with admission controllers we have you know",
    "start": "2683920",
    "end": "2690319"
  },
  {
    "text": "different phases so round one um is is uh the first pass",
    "start": "2690319",
    "end": "2696000"
  },
  {
    "text": "but then we once everything's mutated you might also have um you know an admission controller",
    "start": "2696000",
    "end": "2702160"
  },
  {
    "text": "that's going to allow or disallow only um and so um that that",
    "start": "2702160",
    "end": "2708079"
  },
  {
    "text": "machine controller you know would come up in another round and so we have these different rounds and then we have the indexes so in this case we're the the",
    "start": "2708079",
    "end": "2714400"
  },
  {
    "text": "second of the um of the mutating controllers and so we have the configuration",
    "start": "2714400",
    "end": "2720880"
  },
  {
    "text": "and we specify some configuration data we have the web hook information and then we have the status of whether",
    "start": "2720880",
    "end": "2726319"
  },
  {
    "text": "this guy mutated it or not so in this case um this this controller did not mutate",
    "start": "2726319",
    "end": "2731839"
  },
  {
    "text": "the resource and so that's a nice you know piece of documentation that you can now get from your system",
    "start": "2731839",
    "end": "2738880"
  },
  {
    "text": "you can you can see you know if you're mucking around with admission controllers you can really look in and get a deep dive into what's",
    "start": "2738880",
    "end": "2745280"
  },
  {
    "text": "going on another thing that we can do is we can specify the actual mutation",
    "start": "2745280",
    "end": "2750880"
  },
  {
    "text": "and so if you have a request level um you know audit or higher this is all",
    "start": "2750880",
    "end": "2757359"
  },
  {
    "text": "you'll get by the way if you are just a metadata level so just yes or no i mutated this",
    "start": "2757359",
    "end": "2765440"
  },
  {
    "text": "object but if you're at request level or higher which is more detailed then as you can see we get the patch",
    "start": "2765440",
    "end": "2771200"
  },
  {
    "text": "right and so you actually have the um you know the the information about how things were changed",
    "start": "2771200",
    "end": "2776560"
  },
  {
    "text": "which is um you know really really can be useful again in debugging scenarios",
    "start": "2776560",
    "end": "2781760"
  },
  {
    "start": "2780000",
    "end": "2924000"
  },
  {
    "text": "okay so i think a couple more things and then we'll wrap up here um so auto log monitoring um the",
    "start": "2781760",
    "end": "2788880"
  },
  {
    "text": "the api server it has two open metrics style",
    "start": "2788880",
    "end": "2795440"
  },
  {
    "text": "metrics endpoints or metrics uh metrics in its slash metrics endpoint and one of",
    "start": "2795440",
    "end": "2802079"
  },
  {
    "text": "them is api server audit event total so that's the cumulative total of audit events and then there's api server audit",
    "start": "2802079",
    "end": "2808640"
  },
  {
    "text": "error total so that's the total number of events that were dropped due to an error in exporting so i hadn't talked about this",
    "start": "2808640",
    "end": "2814000"
  },
  {
    "text": "just yet but if you're if you're you know dumping huge amounts of information",
    "start": "2814000",
    "end": "2819200"
  },
  {
    "text": "to a back end like an elastic search or a fluency aggregator or something",
    "start": "2819200",
    "end": "2824560"
  },
  {
    "text": "and you're overwhelming it um with ios one way to fix that problem is to batch",
    "start": "2824560",
    "end": "2830960"
  },
  {
    "text": "a bunch of events together and do a single io with a collection of events and so you can",
    "start": "2830960",
    "end": "2836480"
  },
  {
    "text": "reduce the number of ios by a factor of 10 by just collecting every 10 events and submitting them as a unit",
    "start": "2836480",
    "end": "2842160"
  },
  {
    "text": "and that often solves problems uh another thing that you can have is you can have you know sort of um up and down you know",
    "start": "2842160",
    "end": "2849040"
  },
  {
    "text": "performance in these aggregators because they might be servicing lots of other you know log streams and so you might",
    "start": "2849040",
    "end": "2855200"
  },
  {
    "text": "need to buffer your output you might send them a batch and then a whole nother batch and another batch another batch you might have five or six batches",
    "start": "2855200",
    "end": "2861040"
  },
  {
    "text": "waiting and then as soon as they process that first one then they might catch up so you need to sort of look at what the",
    "start": "2861040",
    "end": "2866480"
  },
  {
    "text": "lag is and figure out a buffer size that also works for them and so if you end up running out of",
    "start": "2866480",
    "end": "2872319"
  },
  {
    "text": "buffer you're going to drop events and this will tell you if you're doing that so those are both really important",
    "start": "2872319",
    "end": "2877520"
  },
  {
    "text": "because the first one event total is going to give you an ability to sort of estimate and discover",
    "start": "2877520",
    "end": "2882800"
  },
  {
    "text": "spikes so if you have a prometheus or something system monitoring the metrics from your api server you can",
    "start": "2882800",
    "end": "2889040"
  },
  {
    "text": "plot that and look for anomalies or trends you know if you're increasing continually",
    "start": "2889040",
    "end": "2894640"
  },
  {
    "text": "day after day you might want to make sure you've got the headroom to get to where you're going to need to be in a month and then errors of course are always",
    "start": "2894640",
    "end": "2900480"
  },
  {
    "text": "nice to know about so there's just an example dump running a cube kiddo proxy on a machine because you know",
    "start": "2900480",
    "end": "2906800"
  },
  {
    "text": "to avoid all the tls stuff that you need to get the metrics and then just curling the proxy to get",
    "start": "2906800",
    "end": "2913040"
  },
  {
    "text": "through to the api server on the metrics endpoint and you can see that we've got the audit event in this case is what we're",
    "start": "2913040",
    "end": "2918720"
  },
  {
    "text": "grabbing for the total and you could pull up the error in the same way",
    "start": "2918720",
    "end": "2923839"
  },
  {
    "text": "so that's some of the metrics um other things um handling massive throughput so",
    "start": "2923839",
    "end": "2929119"
  },
  {
    "start": "2924000",
    "end": "2989000"
  },
  {
    "text": "we talked about batching blocking and um and strict blocking um batching um is where you're gonna",
    "start": "2929119",
    "end": "2935680"
  },
  {
    "text": "buffer events asynchronously blocking you're gonna actually block the api server responses until the event is",
    "start": "2935680",
    "end": "2942800"
  },
  {
    "text": "processed so that's you know that's pretty draconian and will impact users um and then",
    "start": "2942800",
    "end": "2950400"
  },
  {
    "text": "blocking strict is the same as blocking but when there's a failure during the audit logging the whole request is rejected to the user so",
    "start": "2950400",
    "end": "2956880"
  },
  {
    "text": "that's even more strict so um batches you know typically what what people would set to for their um",
    "start": "2956880",
    "end": "2962319"
  },
  {
    "text": "the buffering strategy and then there's a you know buffer sizes wait times um throttling all sorts of",
    "start": "2962319",
    "end": "2968800"
  },
  {
    "text": "things that you can set up here to help control the throughput other considerations",
    "start": "2968800",
    "end": "2975280"
  },
  {
    "text": "remember that each api server is independent shared nothing and so scaling them can can give you",
    "start": "2975280",
    "end": "2981440"
  },
  {
    "text": "some scale so if your back end web hook is the bottleneck you're gonna have to think about that as well but you can scale the",
    "start": "2981440",
    "end": "2987520"
  },
  {
    "text": "api servers to scale the stuff out okay um i think we're getting pretty close to the end of time here so i'll",
    "start": "2987520",
    "end": "2993280"
  },
  {
    "start": "2989000",
    "end": "3095000"
  },
  {
    "text": "wrap up um thanks a bunch really appreciate your time and maybe we'll see about some questions",
    "start": "2993280",
    "end": "3001119"
  },
  {
    "text": "okay well thank you randy for that excellent presentation we have about five minutes for a",
    "start": "3001119",
    "end": "3006559"
  },
  {
    "text": "question so if you have anything you'd like to ask please drop it into the q a box first question here is the json output",
    "start": "3006559",
    "end": "3014400"
  },
  {
    "text": "formatted according to cadf specifications uh that is a good question",
    "start": "3014400",
    "end": "3024000"
  },
  {
    "text": "um types um go source is the the you know defines the structure so",
    "start": "3024839",
    "end": "3032400"
  },
  {
    "text": "i'm not positive i'll i'll i'll uh i'll see if i can um find out though and maybe i can",
    "start": "3032400",
    "end": "3038400"
  },
  {
    "text": "post an answer with a follow up in the when we uh when we upload things",
    "start": "3038400",
    "end": "3043520"
  },
  {
    "text": "not a problem does anybody else have a question they would like to ask the few moments so please",
    "start": "3043520",
    "end": "3051359"
  },
  {
    "text": "feel free to ask away",
    "start": "3051359",
    "end": "3055838"
  },
  {
    "text": "would you be able to elaborate a bit more on the relation between",
    "start": "3083760",
    "end": "3088960"
  },
  {
    "text": "an api server and xd sure um okay let me uh",
    "start": "3088960",
    "end": "3096000"
  },
  {
    "text": "back up here to this picture so um",
    "start": "3096000",
    "end": "3104319"
  },
  {
    "text": "the the ftd cluster um",
    "start": "3104319",
    "end": "3111839"
  },
  {
    "text": "just gonna see if i could draw something um but i don't think i oh yeah i can't here we go",
    "start": "3114480",
    "end": "3120800"
  },
  {
    "text": "i used so many different darn presentation tools these days i have to keep track",
    "start": "3120800",
    "end": "3125920"
  },
  {
    "text": "so if you have an ntd clutter let's say let's do it simple let's just keep an example of three that ftd cluster",
    "start": "3125920",
    "end": "3132559"
  },
  {
    "text": "with three nodes is going to use the raft consensus protocol",
    "start": "3132559",
    "end": "3140960"
  },
  {
    "text": "to elect a leader and so let's say this guy's the leader so if you've got um let's say three",
    "start": "3140960",
    "end": "3147440"
  },
  {
    "text": "let's say you've got five these guys just to make it a little bit more interesting so say you've got five sed nodes and you've got three api servers so the api servers are",
    "start": "3147440",
    "end": "3155520"
  },
  {
    "text": "all going to write to the leader and in general they're going to read from the leader too",
    "start": "3155520",
    "end": "3161119"
  },
  {
    "text": "and you might say oh my god that's terrible because the more api servers you add the more load you're creating on",
    "start": "3161119",
    "end": "3166160"
  },
  {
    "text": "that leader and while that's true at the end of the day the etsyd cluster is highly consistent",
    "start": "3166160",
    "end": "3172079"
  },
  {
    "text": "when you write to the leader it has to write that data to all of the other nodes in the cluster and",
    "start": "3172079",
    "end": "3178960"
  },
  {
    "text": "furthermore because it's a highly consistent key value store it has to know that a quorum of the",
    "start": "3178960",
    "end": "3185119"
  },
  {
    "text": "nodes have committed the data and so um etd becomes the bottleneck in most",
    "start": "3185119",
    "end": "3192960"
  },
  {
    "text": "cases when you're when you're you know experiencing control plane challenges and so the um you know the api servers",
    "start": "3192960",
    "end": "3200960"
  },
  {
    "text": "are are uh they're anonymous faceless identity-less microservices you put a",
    "start": "3200960",
    "end": "3206880"
  },
  {
    "text": "load balancer in front of them you hit the load balancer you don't care which one you get because no matter which one you talk to",
    "start": "3206880",
    "end": "3213359"
  },
  {
    "text": "it's always going to give you the same picture of the world because you have this highly consistent key value store that stores all the state",
    "start": "3213359",
    "end": "3219119"
  },
  {
    "text": "no the api servers have some you know caching and things like that but at the end of the day everything comes from fcd so if you ask",
    "start": "3219119",
    "end": "3225040"
  },
  {
    "text": "number one two or three of those masters what pods are out there um they're all",
    "start": "3225040",
    "end": "3230160"
  },
  {
    "text": "going to give you the same answer and so the the state in etd is uh is is the the real you know",
    "start": "3230160",
    "end": "3238160"
  },
  {
    "text": "bottleneck the management of that and unfortunately adding more nodes to cd slows it down the fastest scd cluster",
    "start": "3238160",
    "end": "3246240"
  },
  {
    "text": "is a single node because he doesn't have to copy the data to anybody and so the reason you need to have multiple nodes and that production",
    "start": "3246240",
    "end": "3252400"
  },
  {
    "text": "systems are like usually five or seven is that if you um for example want you know diversity",
    "start": "3252400",
    "end": "3258880"
  },
  {
    "text": "and and failure tolerance resilience which you want you know in most cases you can have three availability zones",
    "start": "3258880",
    "end": "3264800"
  },
  {
    "text": "for example in the cloud and you can run your std cluster across all three and if you lose any az you still have a quorum",
    "start": "3264800",
    "end": "3270960"
  },
  {
    "text": "right quorum is n over two greater than so if in this case five over two that's",
    "start": "3270960",
    "end": "3276240"
  },
  {
    "text": "two and a half so three would be the next higher integer so any three of these guys and we're good so we could lose a whole a z or if a",
    "start": "3276240",
    "end": "3282000"
  },
  {
    "text": "node crashes you can um and let's say you take a node down for maintenance you can still have another node crash and be okay",
    "start": "3282000",
    "end": "3288880"
  },
  {
    "text": "seven is a little bit safer than that but it's a little bit slower so um that's sort of the relationship right",
    "start": "3288880",
    "end": "3294400"
  },
  {
    "text": "stateless microservices the api server usually behind a load balancer like this would be like a kubernetes service sort",
    "start": "3294400",
    "end": "3299440"
  },
  {
    "text": "of right but in the case of a load of api servers you'd usually use",
    "start": "3299440",
    "end": "3305359"
  },
  {
    "text": "not always but usually use something else because you want people to be able to access the cluster who are not in it",
    "start": "3305359",
    "end": "3310640"
  },
  {
    "text": "and so um you know services um a load balancer service you know you",
    "start": "3310640",
    "end": "3316640"
  },
  {
    "text": "know could make sense but again you you got to worry about chicken and egg problems when you're creating resources in the cluster to access the api server",
    "start": "3316640",
    "end": "3324000"
  },
  {
    "text": "the api server is the thing that gives you access to those resources so usually some sort of external load balancer in front of the",
    "start": "3324000",
    "end": "3330000"
  },
  {
    "text": "api servers and then the api servers communicating with the leader of the std",
    "start": "3330000",
    "end": "3335359"
  },
  {
    "text": "cluster and the entity cluster leadership is dynamic so all the api servers are typically going to know about all the fcd",
    "start": "3335359",
    "end": "3341920"
  },
  {
    "text": "servers so hopefully that answers the question thank you very much randy and i want to",
    "start": "3341920",
    "end": "3348559"
  },
  {
    "text": "thank you again for a wonderful presentation um unfortunately we are out of time um i",
    "start": "3348559",
    "end": "3353839"
  },
  {
    "text": "would like to thank everybody for joining us today and as i said before today's webinar",
    "start": "3353839",
    "end": "3359760"
  },
  {
    "text": "and slides from today's presentation will be available on the cncf webinar",
    "start": "3359760",
    "end": "3364880"
  },
  {
    "text": "page at cncf dot io webinars thank you everyone for attending uh thank you",
    "start": "3364880",
    "end": "3370400"
  },
  {
    "text": "again randy for a wonderful presentation um everybody take care stay safe and we will see you at the next",
    "start": "3370400",
    "end": "3376480"
  },
  {
    "text": "cncf webinar thanks everybody",
    "start": "3376480",
    "end": "3384000"
  }
]