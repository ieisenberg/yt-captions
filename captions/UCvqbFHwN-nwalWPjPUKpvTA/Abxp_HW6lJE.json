[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "so hell hello i'd like to have here micro because i need to type okay i hope you can hear me well so my name is",
    "start": "80",
    "end": "5759"
  },
  {
    "text": "roland huss i'm working for redhead as a software engineer i'm the work group one of the working",
    "start": "5759",
    "end": "10800"
  },
  {
    "text": "group leaders of the client and until the end of the month i'm still a toc member okay let's get started today we are",
    "start": "10800",
    "end": "17440"
  },
  {
    "text": "talking about canadian camelots and uh yeah so first let's start with this classic picture i think we already",
    "start": "17440",
    "end": "23680"
  },
  {
    "text": "have seen it quite a lot today this is how you can set up eventing topology with a canadian k-native you have a",
    "start": "23680",
    "end": "29599"
  },
  {
    "text": "broker in the middle and then on the left-hand side you have something which kind of creates cloud events or more",
    "start": "29599",
    "end": "35840"
  },
  {
    "text": "like an adapter who transforms external events into cloud events pushes it to the broker and the broker",
    "start": "35840",
    "end": "41440"
  },
  {
    "text": "then calls out to so-called sinks and in this talk we are going to talk about the left-hand side so how we can",
    "start": "41440",
    "end": "47840"
  },
  {
    "text": "create easily many sources with the technology which is called camelets we will see that in a second",
    "start": "47840",
    "end": "54320"
  },
  {
    "text": "and then we also talk about things because cam let's also provide out-of-the-box things that you can",
    "start": "54320",
    "end": "59359"
  },
  {
    "text": "directly use but first of all have a look at the existing sources that we have so we have",
    "start": "59359",
    "end": "64559"
  },
  {
    "start": "60000",
    "end": "118000"
  },
  {
    "text": "four sources that come out of the box with with every kinetic installation we have the ping source and the api",
    "start": "64559",
    "end": "70479"
  },
  {
    "text": "server source which are kind of yeah scheduling source and one some source to connect to the api server of kubernetes",
    "start": "70479",
    "end": "77040"
  },
  {
    "text": "and then we have some more like general purpose sources like the container source and also sync binding and you can kind",
    "start": "77040",
    "end": "84000"
  },
  {
    "text": "of connect your deployment directly with uh with connective eventing then we have",
    "start": "84000",
    "end": "89280"
  },
  {
    "text": "also some more like maintenance of this under the umbrella of connective which is a handful like cogitosaurus or",
    "start": "89280",
    "end": "95920"
  },
  {
    "text": "couchdb source like that you find these also on the canadian repositories and then of course there",
    "start": "95920",
    "end": "101680"
  },
  {
    "text": "are also live vendors like trigger mesh that that offers uh sources out of the box and",
    "start": "101680",
    "end": "107040"
  },
  {
    "text": "here for some cloud connections and we have already seen in the other talks before that other other sources as well",
    "start": "107040",
    "end": "112479"
  },
  {
    "text": "but i would say that we have roughly maybe 50 to 60 sources out there and there's one so what the problem with",
    "start": "112479",
    "end": "119280"
  },
  {
    "start": "118000",
    "end": "403000"
  },
  {
    "text": "sources actually or what's what what i'm trying to to tell you today so first of all",
    "start": "119280",
    "end": "127360"
  },
  {
    "text": "we know sources are the entry point for cloud events they are not difficult to implement so it's quite easy you have a",
    "start": "127360",
    "end": "133200"
  },
  {
    "text": "controller then you have custom resource definition where you have a single controller for multiple custom resource definitions but still you have to to to",
    "start": "133200",
    "end": "140879"
  },
  {
    "text": "create the crds and and you can use some general purpose sources like the container source or the",
    "start": "140879",
    "end": "147840"
  },
  {
    "text": "sync binding but then you have lose some advantages like the typed approach that you get with a crd",
    "start": "147840",
    "end": "153920"
  },
  {
    "text": "or you but you still have to create a container image for that of course then the other problem actually is the",
    "start": "153920",
    "end": "160400"
  },
  {
    "text": "discovery is kind of difficult difficult you have we have the event registry but to be honest i'm not sure how many",
    "start": "160400",
    "end": "166160"
  },
  {
    "text": "people are really using it so event register means you can or a source can register an event type and so that the",
    "start": "166160",
    "end": "172160"
  },
  {
    "text": "user can detect that event type and find the source but a more a bigger problem actually is",
    "start": "172160",
    "end": "178239"
  },
  {
    "text": "that in restricted environments you are not really it's not easy to deal with cluster-wide",
    "start": "178239",
    "end": "184159"
  },
  {
    "text": "resources for a regular user so it's not easy to create install clds on your own so if you want to install an own source",
    "start": "184159",
    "end": "190319"
  },
  {
    "text": "with a crd you have a problem typically but even even more you often have issues",
    "start": "190319",
    "end": "195840"
  },
  {
    "text": "even to read clds so there are lockdown environments openshift is being one of them",
    "start": "195840",
    "end": "201280"
  },
  {
    "text": "that where you can't really as a regular user you can't even list cluster wide resources so you can't even find out what resources are available",
    "start": "201280",
    "end": "208560"
  },
  {
    "text": "that's that's no it's an issue and yeah the question is actually are there alternatives how you can how can",
    "start": "208560",
    "end": "214959"
  },
  {
    "text": "we avoid these issues and actually let's have a look to to camel and how we can can we get to many",
    "start": "214959",
    "end": "220239"
  },
  {
    "text": "more more sources actually this is a picture of things which i would like to have in",
    "start": "220239",
    "end": "225920"
  },
  {
    "text": "this native eventing sources so that easily as a user can directly connect to all of these systems",
    "start": "225920",
    "end": "231519"
  },
  {
    "text": "and so let's have a look to camille so some words so kevin you probably have",
    "start": "231519",
    "end": "236560"
  },
  {
    "text": "heard about cameron it's based so it's an implementation of that left-hand book in latin sidebook with enterprise",
    "start": "236560",
    "end": "242480"
  },
  {
    "text": "integration patterns very famous book very great stuff in there they describe all all kinds of patterns that you use",
    "start": "242480",
    "end": "249840"
  },
  {
    "text": "if you have integration scenario and chemin is more or less implementation of these patterns in code so it comes as a",
    "start": "249840",
    "end": "255760"
  },
  {
    "text": "library it actually it's already older than 10 years it's still one of the most active",
    "start": "255760",
    "end": "262639"
  },
  {
    "text": "apache open source projects it's java based so typically uses a",
    "start": "262639",
    "end": "267840"
  },
  {
    "text": "library you have a certain dsl where you can describe your integration route and then you have to compile it into",
    "start": "267840",
    "end": "273759"
  },
  {
    "text": "some runtime typically it's spring boot or it's qualcos and then this runtime needs to be operated either directly on",
    "start": "273759",
    "end": "280720"
  },
  {
    "text": "your on your server or requestration platform like with kubernetes and the benefit here is of course that",
    "start": "280720",
    "end": "286320"
  },
  {
    "text": "over those 10 years they have really the community created more than 340 components these are components are",
    "start": "286320",
    "end": "292560"
  },
  {
    "text": "really kind of connect us to external systems so therefore for incoming and for outgoing",
    "start": "292560",
    "end": "298800"
  },
  {
    "text": "connections and you see we have also a big permanent fan here over there this was quite for",
    "start": "298800",
    "end": "304400"
  },
  {
    "text": "some fun it twittered at some time okay so this was apache camera as it started but then in 2018 the camera",
    "start": "304400",
    "end": "313039"
  },
  {
    "text": "community also decided to be to modernize their stack and they invented a new sub project which is called chemi",
    "start": "313039",
    "end": "318960"
  },
  {
    "text": "k k for kubernetes and this actually means it that uses a crd which is",
    "start": "318960",
    "end": "324880"
  },
  {
    "text": "integration it's called integration you put in your your camel dsl",
    "start": "324880",
    "end": "331759"
  },
  {
    "text": "as a part of the spec of the of this of this integration custom resource and then you just deploy it and everything",
    "start": "331840",
    "end": "338479"
  },
  {
    "text": "else so creating the runtime creating the image pushing it to some registry executing it and so on is all taken care",
    "start": "338479",
    "end": "345680"
  },
  {
    "text": "by chemical itself so it's really kind gives you a much easier approach to to use camera and you don't even have to be",
    "start": "345680",
    "end": "352800"
  },
  {
    "text": "a java developer for example and then the next step in the evolution is our camelets and this is what i'm",
    "start": "352800",
    "end": "358000"
  },
  {
    "text": "going to talk about today these are really kind of predefined route snippets",
    "start": "358000",
    "end": "363840"
  },
  {
    "text": "it's really something like you'll see in a second next slide which you package into our crd which is",
    "start": "363840",
    "end": "369520"
  },
  {
    "text": "called camelot so this kind of a type like a high level custom resource definition here so you can deploy many",
    "start": "369520",
    "end": "375039"
  },
  {
    "text": "of the cameras and then you can create an instance of this camelet with a at binding",
    "start": "375039",
    "end": "381840"
  },
  {
    "text": "easily and so but these are all are really user manageable resources so there's no you don't have to be cluster",
    "start": "381919",
    "end": "388080"
  },
  {
    "text": "administrator for that and actually of course ideally you would have all these 340 components available",
    "start": "388080",
    "end": "394080"
  },
  {
    "text": "as camelettes at the moment they're around 70 plus camelets that you can directly use but this list is constantly",
    "start": "394080",
    "end": "399680"
  },
  {
    "text": "growing in quite some uh yeah amount so actually let's have a",
    "start": "399680",
    "end": "405680"
  },
  {
    "start": "403000",
    "end": "461000"
  },
  {
    "text": "quick look how this look like from the code so this is a typical example of of camera by the way who of you does",
    "start": "405680",
    "end": "411520"
  },
  {
    "text": "already know about apache camera one two okay i would say maybe half of",
    "start": "411520",
    "end": "417120"
  },
  {
    "text": "the audience that's great so then you probably recognize this kind of definition so this is a written in",
    "start": "417120",
    "end": "423919"
  },
  {
    "text": "the java dsl so it's a builder pattern so you put it into a class and then you can create a route in this case you have",
    "start": "423919",
    "end": "429759"
  },
  {
    "text": "an incoming point which is a twitter search component so behind this this schema url",
    "start": "429759",
    "end": "435680"
  },
  {
    "text": "schema there is a registered a handler and this this would do that actually the connection and then you have parameters",
    "start": "435680",
    "end": "442479"
  },
  {
    "text": "that you add as query parameters here and finally you can do all the pattern stuff here uh is it on you can transform",
    "start": "442479",
    "end": "449599"
  },
  {
    "text": "them you can enrich them you can split them you can send them out to something else and here we're sending out directly",
    "start": "449599",
    "end": "455120"
  },
  {
    "text": "to an eventing broker so super simple but still you don't have to do a lot of boilerplate here in chemical this would",
    "start": "455120",
    "end": "462319"
  },
  {
    "text": "look like that so actually this was beer integration custom resource and i only have shown",
    "start": "462319",
    "end": "468319"
  },
  {
    "text": "here really only a fragment of the specification so you have the configuration here with the concrete values and then you",
    "start": "468319",
    "end": "474400"
  },
  {
    "text": "have the route which is actually more less the same what we have seen in the slide before",
    "start": "474400",
    "end": "480080"
  },
  {
    "start": "480000",
    "end": "521000"
  },
  {
    "text": "and now finally we have camera k and chemical just split up the integration in the template part in an instantiation",
    "start": "480080",
    "end": "486560"
  },
  {
    "text": "part so actually the template part is on the left hand side this is actually the real camelet and you see that in the on the template",
    "start": "486560",
    "end": "492319"
  },
  {
    "text": "uh specification you have placeholders like access token keywords these are just parameters that you can define",
    "start": "492319",
    "end": "498720"
  },
  {
    "text": "and so there's a camelet writer who knows camel very well and it just creates this kind of objects put it",
    "start": "498720",
    "end": "505039"
  },
  {
    "text": "under the cluster and then another user can just instantiate the camelet by providing a cabinet binding and",
    "start": "505039",
    "end": "510879"
  },
  {
    "text": "providing the missing parameters and then you get in the background an integration object or the one from the",
    "start": "510879",
    "end": "516719"
  },
  {
    "text": "slide before and then the chemical operator will create the runtime okay",
    "start": "516719",
    "end": "522640"
  },
  {
    "start": "521000",
    "end": "581000"
  },
  {
    "text": "so this is about the slides now let's go to the demo i have that's good i have 50 minutes so we will try something from",
    "start": "522640",
    "end": "528399"
  },
  {
    "text": "scratch hopefully it will work so we start with a with a twitter incoming",
    "start": "528399",
    "end": "534640"
  },
  {
    "text": "twitter searcher this is a camelot component that searches for on twitter for a certain keyword in that case it's",
    "start": "534640",
    "end": "540480"
  },
  {
    "text": "a slash key doc it will create then a cloud event send it over to the creative broker",
    "start": "540480",
    "end": "546560"
  },
  {
    "text": "and the kinetic broker then moves it on to a creative function we will also see how",
    "start": "546560",
    "end": "552959"
  },
  {
    "text": "we've also created the function or by from scratch the function itself communicates with the google api",
    "start": "552959",
    "end": "559040"
  },
  {
    "text": "a google cloud translation api to translate the tweet into a random language then we create another cloud",
    "start": "559040",
    "end": "564560"
  },
  {
    "text": "event sends it back to the broker and finally it lands in the so-called slack sync so this is the opposite of a",
    "start": "564560",
    "end": "570640"
  },
  {
    "text": "source where we send out this translated tweet onto a channel on the canadian slack",
    "start": "570640",
    "end": "576720"
  },
  {
    "text": "okay so let's get started much we have not much time and",
    "start": "576720",
    "end": "581760"
  },
  {
    "start": "581000",
    "end": "587000"
  },
  {
    "text": "yeah they always want me to make demos with public services so let's please be nice to me",
    "start": "581760",
    "end": "588560"
  },
  {
    "text": "okay so we have here a mini cube cluster empty as you see on",
    "start": "588839",
    "end": "594959"
  },
  {
    "text": "the top some watches on certain resources port creative services and the cabinet bindings and the first thing",
    "start": "594959",
    "end": "601200"
  },
  {
    "text": "what we have to do is of course we have to create a broker sorry",
    "start": "601200",
    "end": "608399"
  },
  {
    "text": "i have to take off my classes okay so that was easy",
    "start": "609360",
    "end": "615440"
  },
  {
    "text": "and now let's start with the twitter search component for that we can just before i do that i'm just",
    "start": "615440",
    "end": "623120"
  },
  {
    "text": "showing you all the camelets that are listed here on the cluster we have also 4k and a plugin",
    "start": "623120",
    "end": "628320"
  },
  {
    "text": "for camelets you can do everything what i'm doing here also with the army files of course but he'll be just listing all the",
    "start": "628320",
    "end": "634480"
  },
  {
    "text": "camelettes that you are available it's over 70 i say they are really for all kind of uh external systems and",
    "start": "634480",
    "end": "641360"
  },
  {
    "text": "one of my favorite one but we don't see that much but you can try it out chuck norris source which gives you some",
    "start": "641360",
    "end": "646480"
  },
  {
    "text": "random chuck norris quote very nice very useful but we are looking for this twitter search here so this is our source that",
    "start": "646480",
    "end": "652959"
  },
  {
    "text": "we are going to instantiate now so let me do that so you can also",
    "start": "652959",
    "end": "659200"
  },
  {
    "text": "use source camelet and for that we need to create a binding",
    "start": "659200",
    "end": "664399"
  },
  {
    "text": "so what you see here now we create a binding which we call twitter search source we connect it to the default",
    "start": "664399",
    "end": "669760"
  },
  {
    "text": "broker we set some properties here so these are key value pairs that we can",
    "start": "669760",
    "end": "674880"
  },
  {
    "text": "use so keywords we're looking for for this kdac and then we are adding the access tokens for our twitter api access",
    "start": "674880",
    "end": "680720"
  },
  {
    "text": "so they are stored in some files so here on the below the directory so let's create that",
    "start": "680720",
    "end": "686560"
  },
  {
    "text": "you will see here that the thing so let's maybe let's have a quick look",
    "start": "686560",
    "end": "691760"
  },
  {
    "text": "into into the what happened behind the scenes so what i'm having here is a lock tail",
    "start": "691760",
    "end": "698959"
  },
  {
    "start": "695000",
    "end": "713000"
  },
  {
    "text": "on the camera k operator it detects this camelot binding creates the integration object and then runs a",
    "start": "698959",
    "end": "706000"
  },
  {
    "text": "compilation for the java code behind the scenes so then creates an image that gets deployed directly to our",
    "start": "706000",
    "end": "713600"
  },
  {
    "start": "713000",
    "end": "744000"
  },
  {
    "text": "system so this might take a little bit hopefully i have already pre-rounded all caches so normally if you start the first time",
    "start": "713600",
    "end": "718959"
  },
  {
    "text": "it's a little bit slower but you see already also you see already here that",
    "start": "718959",
    "end": "724160"
  },
  {
    "text": "that it's running and yeah that's it so now we have a connection to twitter and get already",
    "start": "724160",
    "end": "729519"
  },
  {
    "text": "the tweets into our broker and to to see that this really works let's",
    "start": "729519",
    "end": "735519"
  },
  {
    "text": "create a simple e-display service or the standards we have already seen the service which is",
    "start": "735519",
    "end": "741200"
  },
  {
    "text": "a server that just logs out cloudy events to the to the console and then i have course to create a trigger",
    "start": "741200",
    "end": "749440"
  },
  {
    "text": "create event display like that and then we make a",
    "start": "750399",
    "end": "756160"
  },
  {
    "text": "thing on e-display as well sorry",
    "start": "756160",
    "end": "760399"
  },
  {
    "text": "okay so you might want to try this as well but let me",
    "start": "761200",
    "end": "767040"
  },
  {
    "text": "hand over to my browser so if you my twitter client let me see uh",
    "start": "767040",
    "end": "773200"
  },
  {
    "text": "hello okay nativecon",
    "start": "773200",
    "end": "777360"
  },
  {
    "text": "con and then don't forget the attack we tweet that",
    "start": "778639",
    "end": "784720"
  },
  {
    "text": "and then head over to our",
    "start": "784720",
    "end": "788240"
  },
  {
    "text": "console and then this might take a little bit because uh",
    "start": "790079",
    "end": "795360"
  },
  {
    "text": "actually this is a pulling approach so it's really search that pulse every i i don't know the default way but every 10",
    "start": "795360",
    "end": "801360"
  },
  {
    "text": "to 15 seconds you see now okay our display is already stopping so we were a",
    "start": "801360",
    "end": "806720"
  },
  {
    "text": "little bit too slow so i'm hoping that",
    "start": "806720",
    "end": "811839"
  },
  {
    "text": "we will come up and here you see so now it's creating something and we get our cloud event",
    "start": "811920",
    "end": "817360"
  },
  {
    "start": "813000",
    "end": "837000"
  },
  {
    "text": "so you see that the twitter searches creates a very verbal cloud event with all the metadata that you can get back",
    "start": "817360",
    "end": "822880"
  },
  {
    "text": "from from from twitter and here we have our test text like we have here okay so",
    "start": "822880",
    "end": "829760"
  },
  {
    "text": "works next step is now the slack sync so we have the twitter source now let's go to",
    "start": "829760",
    "end": "835680"
  },
  {
    "text": "the slack sync unfortunately kn doesn't has yet support for camelot",
    "start": "835680",
    "end": "841760"
  },
  {
    "start": "837000",
    "end": "852000"
  },
  {
    "text": "syncs but so i can show you actually the yaml file here for such a camelet",
    "start": "841760",
    "end": "848000"
  },
  {
    "text": "and let me so this is the slack sync here",
    "start": "848000",
    "end": "853040"
  },
  {
    "text": "it's also quite simple so you give it a name you have two two legs here so the source is",
    "start": "853040",
    "end": "858800"
  },
  {
    "text": "actually what you want to connect to in our case we want the source of the broker because we received the event from the broker",
    "start": "858800",
    "end": "865120"
  },
  {
    "text": "and we filter also on on tweets three translated types and the other parties are sync which is",
    "start": "865120",
    "end": "871839"
  },
  {
    "text": "uh just a sync sorry a camelet slack sync and we",
    "start": "871839",
    "end": "877040"
  },
  {
    "text": "configure it with the configuration i have not shown the url here fully so this is the also complete authentication",
    "start": "877040",
    "end": "882639"
  },
  {
    "text": "against the slack channel and and yes that's it that's all what you need so let's try that as well",
    "start": "882639",
    "end": "889440"
  },
  {
    "text": "so i make here apply minus f sync demo so this just includes the",
    "start": "889440",
    "end": "895199"
  },
  {
    "text": "proper credentials and you will see then if i make this a little bit larger",
    "start": "895199",
    "end": "902560"
  },
  {
    "text": "the sorry the binding as well",
    "start": "902560",
    "end": "907760"
  },
  {
    "text": "oh it already comes up here you see this lexing so this is actually the sink itself is implemented as a canadian",
    "start": "907760",
    "end": "914320"
  },
  {
    "text": "service because it actually can also go down its stateless and so we have now a",
    "start": "914320",
    "end": "919920"
  },
  {
    "text": "slack service here and of course we can try that out as well so let's",
    "start": "919920",
    "end": "925360"
  },
  {
    "start": "922000",
    "end": "933000"
  },
  {
    "text": "use our event plugin for that okay and we have already seen that in action here",
    "start": "925360",
    "end": "930560"
  },
  {
    "text": "we want to send it to the broker we have of course set a type to be translated and we add some",
    "start": "930560",
    "end": "936800"
  },
  {
    "start": "933000",
    "end": "969000"
  },
  {
    "text": "random body here and if i'm doing that one second",
    "start": "936800",
    "end": "942639"
  },
  {
    "text": "going like here i have my my slack here",
    "start": "942639",
    "end": "947920"
  },
  {
    "text": "so this is the channel i'm going to post to this is on okay native and",
    "start": "947920",
    "end": "953680"
  },
  {
    "text": "what this plugin actually does it creates a container within the cluster that sends directly the cloud event to",
    "start": "953680",
    "end": "959279"
  },
  {
    "text": "the broker because the broker of course is not exposed to the outside and so you can directly now send into the slack",
    "start": "959279",
    "end": "965519"
  },
  {
    "text": "channel okay now proven select sync is already working now let's do our final",
    "start": "965519",
    "end": "971519"
  },
  {
    "start": "969000",
    "end": "1043000"
  },
  {
    "text": "thing this is actually creating the function i yeah there's still some time for that",
    "start": "971519",
    "end": "977920"
  },
  {
    "text": "so what we are doing here now is of course we create a function so actually we are using node",
    "start": "977920",
    "end": "984560"
  },
  {
    "text": "as our runtime we want to the cloud events template which already provides a nice signature for cloud events and we",
    "start": "984560",
    "end": "990880"
  },
  {
    "text": "call that thing translate tweet and as i mentioned we want to talk with the google translation api for that we",
    "start": "990880",
    "end": "997680"
  },
  {
    "text": "of course need to authenticate ourselves and the google cloud api typically work that you expose certain environment",
    "start": "997680",
    "end": "1003440"
  },
  {
    "text": "variables which points to our authentication file for that we first have to create",
    "start": "1003440",
    "end": "1010399"
  },
  {
    "text": "a secret sorry group control create secret i have it",
    "start": "1010399",
    "end": "1016560"
  },
  {
    "text": "here this is taken from that file so here's my google service account included and i create a sql secret which is called",
    "start": "1016560",
    "end": "1022560"
  },
  {
    "text": "google as a and this will be exposed to the function within an environment variable",
    "start": "1022560",
    "end": "1028079"
  },
  {
    "text": "okay this is created now let's enter our google translate suite",
    "start": "1028079",
    "end": "1033280"
  },
  {
    "text": "in order to talk to the google cloud api translation we need to install a",
    "start": "1033280",
    "end": "1038480"
  },
  {
    "text": "dependency which includes the the google cloud",
    "start": "1038480",
    "end": "1044400"
  },
  {
    "text": "api into our function itself so we use npm for that just as a regular node node",
    "start": "1044400",
    "end": "1050559"
  },
  {
    "text": "coder hopefully it should be done easily again i will get probably here outed",
    "start": "1050559",
    "end": "1056559"
  },
  {
    "text": "error i won't fix it yet okay and now as i mentioned we need to configure our",
    "start": "1056559",
    "end": "1062640"
  },
  {
    "text": "function luckily there's also a feature which is called func config",
    "start": "1062640",
    "end": "1068160"
  },
  {
    "start": "1067000",
    "end": "1082000"
  },
  {
    "text": "and we would say we want to create a volume we want to add a volume and we want to edit form a secret so actually this will",
    "start": "1068160",
    "end": "1075200"
  },
  {
    "text": "add something to your function that you mount from a secret we take the google sa which i just have created",
    "start": "1075200",
    "end": "1082320"
  },
  {
    "text": "in my namespace and then i have to to point to the sorry",
    "start": "1082320",
    "end": "1087760"
  },
  {
    "text": "to the directory i want to mount it to and i'm using opt slash pce in that example",
    "start": "1087760",
    "end": "1093600"
  },
  {
    "text": "and finally we need to add some environment variables",
    "start": "1093600",
    "end": "1098880"
  },
  {
    "text": "at so we add it here like that",
    "start": "1098880",
    "end": "1105280"
  },
  {
    "text": "and we use the i have to look that up i don't google application credentials so this",
    "start": "1105280",
    "end": "1111280"
  },
  {
    "text": "is the variable which is picked up by the dependency for google cloud translate",
    "start": "1111280",
    "end": "1116400"
  },
  {
    "text": "and we say we want here our mounted directory plus the the",
    "start": "1116400",
    "end": "1122799"
  },
  {
    "text": "credentials here so that one okay looks good and finally we need a final variable we",
    "start": "1122799",
    "end": "1128880"
  },
  {
    "start": "1124000",
    "end": "1154000"
  },
  {
    "text": "add here like that",
    "start": "1128880",
    "end": "1134400"
  },
  {
    "text": "here and we use google project id",
    "start": "1134400",
    "end": "1140720"
  },
  {
    "text": "sorry and it's k native",
    "start": "1140960",
    "end": "1146000"
  },
  {
    "text": "con demo okay okay now we have set up our",
    "start": "1146000",
    "end": "1151440"
  },
  {
    "text": "environment and now we can start coding so i'll do with that so i start my",
    "start": "1151440",
    "end": "1157440"
  },
  {
    "start": "1154000",
    "end": "1185000"
  },
  {
    "text": "i start my hope that will work",
    "start": "1157440",
    "end": "1163600"
  },
  {
    "text": "oh it's here okay this is the uh the the code that has been created for",
    "start": "1163679",
    "end": "1169919"
  },
  {
    "text": "me by can find create we remove some boilerplate which we do not need i hope i can",
    "start": "1169919",
    "end": "1176480"
  },
  {
    "text": "do that okay we don't need the sample code even",
    "start": "1176480",
    "end": "1184240"
  },
  {
    "text": "okay now let's get started so first of all i have to to import my dependency to google cloud translate",
    "start": "1184960",
    "end": "1192480"
  },
  {
    "start": "1185000",
    "end": "1314000"
  },
  {
    "text": "and then as i mentioned we wanted to translate into kind of a random language so actually i have here an array with",
    "start": "1192480",
    "end": "1199039"
  },
  {
    "text": "different languages they're all from my fellow team members here and",
    "start": "1199039",
    "end": "1205200"
  },
  {
    "text": "okay that's here and now we we extract the tweet data from the event",
    "start": "1205200",
    "end": "1211600"
  },
  {
    "text": "the event that is coming in is based on this schema from the twitter tweet so we pick up this tweet",
    "start": "1211600",
    "end": "1218559"
  },
  {
    "text": "we create this uh sorry this random number here this is just",
    "start": "1218559",
    "end": "1224559"
  },
  {
    "text": "yeah picking some random number from from this array and then we",
    "start": "1224559",
    "end": "1231120"
  },
  {
    "text": "do the translation so we have here a translate object this is all given by the google cloud",
    "start": "1231120",
    "end": "1237120"
  },
  {
    "text": "translation api and then we call translate we could also call detect or another uh",
    "start": "1237120",
    "end": "1242960"
  },
  {
    "text": "function that is exposed by this api then we enter the text in here and then we enter the language code that we want to",
    "start": "1242960",
    "end": "1249520"
  },
  {
    "text": "translate to so this is the one which is picked up randomly then we have this array here which means that the api is",
    "start": "1249520",
    "end": "1255360"
  },
  {
    "text": "asynchronous from for google so actually we need to make our function here async as well",
    "start": "1255360",
    "end": "1262760"
  },
  {
    "text": "okay and then now we have the text now let's let's create the the actual text what we want to to post",
    "start": "1262880",
    "end": "1270720"
  },
  {
    "text": "i have to make a little bit nicer here so here you see i'm using the original",
    "start": "1270720",
    "end": "1277360"
  },
  {
    "text": "tweet text and then i add the translation like here and then put a nice flag in front of this so this is also picked up from the initial array",
    "start": "1277360",
    "end": "1283919"
  },
  {
    "text": "and finally we have to return that here",
    "start": "1283919",
    "end": "1289440"
  },
  {
    "text": "which means i have to set the type to be translated and then i have here tweet three translator for for this source okay this",
    "start": "1289440",
    "end": "1297520"
  },
  {
    "text": "is the this is the code that you need so you see this is really kind of this glue code that you typically also see for lambda functions and where you really",
    "start": "1297520",
    "end": "1304480"
  },
  {
    "text": "connect two different services together and add some extra functionality like like here like translating of course you",
    "start": "1304480",
    "end": "1310559"
  },
  {
    "text": "could do any call out to any other service okay let's go back here and of course we",
    "start": "1310559",
    "end": "1316640"
  },
  {
    "start": "1314000",
    "end": "1475000"
  },
  {
    "text": "won't first to try it out here locally so it's not always it's always if you want to develop",
    "start": "1316640",
    "end": "1321919"
  },
  {
    "text": "um with with against the cloud it's all often easier to really to test and try locally for that i'm just have to",
    "start": "1321919",
    "end": "1329919"
  },
  {
    "text": "to source the environment variables locally here as well so i have i've set it in this in shell file",
    "start": "1329919",
    "end": "1336559"
  },
  {
    "text": "and then i can use npm start i'm running this in the background",
    "start": "1336559",
    "end": "1343600"
  },
  {
    "text": "so here it's running now locally my function and then i can just again leverage my event plugin in this case",
    "start": "1344080",
    "end": "1351440"
  },
  {
    "text": "i'm sending directly to a url and the url is here it's localhost 8080.",
    "start": "1351440",
    "end": "1356559"
  },
  {
    "text": "so i'm sorry i'm jumping the top so it's easier to see and i'm just adding some fake information all the data that i",
    "start": "1356559",
    "end": "1362640"
  },
  {
    "text": "needed in my function so you don't have to provide a full-blown tweet",
    "start": "1362640",
    "end": "1368559"
  },
  {
    "text": "tweet cloud event but actually only that one and if i send that in in there i have",
    "start": "1368559",
    "end": "1375440"
  },
  {
    "text": "something wrong",
    "start": "1375440",
    "end": "1378158"
  },
  {
    "text": "so let me let me just check here",
    "start": "1383360",
    "end": "1391200"
  },
  {
    "text": "and",
    "start": "1391360",
    "end": "1393679"
  },
  {
    "text": "i've followed up so some okay",
    "start": "1397360",
    "end": "1403799"
  },
  {
    "text": "so this it's got that the we tested so let's check it here it's uh",
    "start": "1404000",
    "end": "1409200"
  },
  {
    "text": "no such file opt google",
    "start": "1409840",
    "end": "1414360"
  },
  {
    "text": "but but haven't i said the",
    "start": "1416320",
    "end": "1422240"
  },
  {
    "text": "ah maybe it just has been picked up by by",
    "start": "1422240",
    "end": "1429880"
  },
  {
    "text": "ratio google application credentials",
    "start": "1430080",
    "end": "1436640"
  },
  {
    "text": "looks good so i'm not sure why it doesn't work because but nevertheless okay i can check it later but as you see",
    "start": "1436640",
    "end": "1442480"
  },
  {
    "text": "it already points to the path which is inside the builder image so let's keep finger crossed and deploy it as a",
    "start": "1442480",
    "end": "1448559"
  },
  {
    "text": "function at the moment and for that i'm",
    "start": "1448559",
    "end": "1453120"
  },
  {
    "text": "no just this really works",
    "start": "1454720",
    "end": "1461120"
  },
  {
    "text": "sand oh really strange okay let me try to",
    "start": "1462080",
    "end": "1469200"
  },
  {
    "text": "deploy it so actually you have already seen how you can deploy such a function let's go to ok and func deploy",
    "start": "1469200",
    "end": "1475520"
  },
  {
    "start": "1475000",
    "end": "1501000"
  },
  {
    "text": "so this will build the function locally where my local docker daemon sends it to docker io",
    "start": "1475520",
    "end": "1482480"
  },
  {
    "text": "and then will deploy the image as a service",
    "start": "1482480",
    "end": "1488240"
  },
  {
    "text": "creative service and yeah this might take a little bit",
    "start": "1488240",
    "end": "1492480"
  },
  {
    "text": "okay now it has been built and now it's pushed to the written registry and before then the connective service is correct you will see this at the top as",
    "start": "1494640",
    "end": "1500960"
  },
  {
    "text": "well you see also that the twitter source is really this is a true deployment because it has to pull regularly so you cannot really have it",
    "start": "1500960",
    "end": "1507840"
  },
  {
    "start": "1501000",
    "end": "1526000"
  },
  {
    "text": "scaled down to zero there in the future there are plans to combine cater for certain sources as well with",
    "start": "1507840",
    "end": "1514080"
  },
  {
    "text": "camelot so that you for example for the kafka source uh kafka camelot you also can spin down that deployment directly",
    "start": "1514080",
    "end": "1521120"
  },
  {
    "text": "so we see now that our the translator is running luckily it's ready here like that and the final step which is",
    "start": "1521120",
    "end": "1528400"
  },
  {
    "start": "1526000",
    "end": "1558000"
  },
  {
    "text": "missing is of course we need to create a trigger still",
    "start": "1528400",
    "end": "1532480"
  },
  {
    "text": "um trigger sweet translate so actually we have to",
    "start": "1533440",
    "end": "1538480"
  },
  {
    "text": "filter on type or apache camera event so this is the standard type that camelets are exposing you can override this",
    "start": "1538480",
    "end": "1545039"
  },
  {
    "text": "but this is good enough for us now and then we are pointing it to the our",
    "start": "1545039",
    "end": "1551279"
  },
  {
    "text": "uh our function so actually we connect now the twitter source with our function actually like that",
    "start": "1551279",
    "end": "1558000"
  },
  {
    "start": "1558000",
    "end": "1645000"
  },
  {
    "text": "and yeah and now this kind of is it now let's check whether this really works as expected",
    "start": "1558000",
    "end": "1564880"
  },
  {
    "text": "so sorry i have to go to that one and i have to go to slack here",
    "start": "1564880",
    "end": "1573520"
  },
  {
    "text": "and let's see what i have here",
    "start": "1573520",
    "end": "1578799"
  },
  {
    "text": "some text here and now let's tweet that",
    "start": "1578799",
    "end": "1584278"
  },
  {
    "text": "oops i already tweeted that in the first court ever so but",
    "start": "1585360",
    "end": "1591520"
  },
  {
    "text": "for sure not the last",
    "start": "1591520",
    "end": "1595720"
  },
  {
    "text": "so now let's wait and see what's happened so i can go back here",
    "start": "1599840",
    "end": "1605919"
  },
  {
    "text": "and see now that the container is great for the for this slack sync and then we should see the translated text here",
    "start": "1605919",
    "end": "1612480"
  },
  {
    "text": "immediately now in now in polish by by chance so this kind",
    "start": "1612480",
    "end": "1617679"
  },
  {
    "text": "of concludes the demo i'm let me jump back so sorry that the local experience was not working as",
    "start": "1617679",
    "end": "1623039"
  },
  {
    "text": "expected yeah but i hope i could show you that it's really super easy that you can",
    "start": "1623039",
    "end": "1628640"
  },
  {
    "text": "create fancy integrations with tons of sources combining with functions and uh yeah so",
    "start": "1628640",
    "end": "1635200"
  },
  {
    "text": "this is really the kind of at least from the final setup lambda experience that i",
    "start": "1635200",
    "end": "1640480"
  },
  {
    "text": "could think that for the future you will see more and more like that okay um last slide a quick outlook so",
    "start": "1640480",
    "end": "1648080"
  },
  {
    "start": "1645000",
    "end": "1711000"
  },
  {
    "text": "actually uh as i mentioned we are working on a sync camera plug-in there will be also a",
    "start": "1648080",
    "end": "1654480"
  },
  {
    "text": "feature that you get typed options on the command line so that you get auto completion directly for the properties that you can choose from at the moment",
    "start": "1654480",
    "end": "1661279"
  },
  {
    "text": "you see you have some general purpose properties key value pairs but since the schema is also exposed by the camelet",
    "start": "1661279",
    "end": "1667360"
  },
  {
    "text": "you can easily create dynamically cli options that that honor this the schema",
    "start": "1667360",
    "end": "1675520"
  },
  {
    "text": "and also support for secret and conflicts maps directly in our in the candidate at the moment they are just",
    "start": "1675520",
    "end": "1681760"
  },
  {
    "text": "literally included the the secrets but camelots themselves already support the secrets and contract maps but not the",
    "start": "1681760",
    "end": "1688480"
  },
  {
    "text": "client itself had yet and of course we want to have more and more and more cabinets and things and sources so but this creating such a",
    "start": "1688480",
    "end": "1695039"
  },
  {
    "text": "camel is a super easy process you just need to do that and finally as i already mentioned there will be at some point in",
    "start": "1695039",
    "end": "1701360"
  },
  {
    "text": "time some integration with cada where you can also scale down the camera sources",
    "start": "1701360",
    "end": "1706480"
  },
  {
    "text": "of course only for those sources that for which cater scalar is available",
    "start": "1706480",
    "end": "1711520"
  },
  {
    "start": "1711000",
    "end": "1826000"
  },
  {
    "text": "okay that's it and thank you very much",
    "start": "1711520",
    "end": "1716000"
  },
  {
    "text": "i think we have time for one question if anyone has any questions",
    "start": "1719679",
    "end": "1726320"
  },
  {
    "text": "thanks roland that was great the challenge i think that we've seen is",
    "start": "1732880",
    "end": "1739679"
  },
  {
    "text": "uh the payload uh schema of the events and the event type uh accepted by the",
    "start": "1739679",
    "end": "1746880"
  },
  {
    "text": "sinks so you know if you're a developer trying to do this you know how would you go about you know finding",
    "start": "1746880",
    "end": "1753200"
  },
  {
    "text": "the schema of like you know tweet the text right that's right you know and then tweet that translated to talk to",
    "start": "1753200",
    "end": "1759360"
  },
  {
    "text": "slack you know it's not it's not easy right yeah so so there's not really a schema registry for that so actually",
    "start": "1759360",
    "end": "1765440"
  },
  {
    "text": "because actually the the cameras work that they more or less hand over directly everything that they",
    "start": "1765440",
    "end": "1771600"
  },
  {
    "text": "get from the upstream source for example like to the api and what i",
    "start": "1771600",
    "end": "1776720"
  },
  {
    "text": "recommend is the workflow that i've just shown where you say you just really try examine the tweet like from the source",
    "start": "1776720",
    "end": "1782480"
  },
  {
    "text": "you just look at that and pick up what you are what you're interested in and then really create your function",
    "start": "1782480",
    "end": "1787760"
  },
  {
    "text": "around that so actually it's really at the moment still kind of a exploring thing where you still have to try out and have to test it so there's",
    "start": "1787760",
    "end": "1794399"
  },
  {
    "text": "no documentation for that but it's at the moment so it's super easy so actually to be honest 80 of the demo was",
    "start": "1794399",
    "end": "1800720"
  },
  {
    "text": "to find out how to authenticate against twitter and slack because this was twitter some you need a developer account for that and you need",
    "start": "1800720",
    "end": "1807120"
  },
  {
    "text": "to increase your developer level and whatnot so but but yeah so but the other thing was more the easier easier part",
    "start": "1807120",
    "end": "1814159"
  },
  {
    "text": "yeah thanks thanks for the question awesome thank you roland okay",
    "start": "1814159",
    "end": "1820640"
  },
  {
    "text": "thank you give big applause to roland thanks",
    "start": "1820640",
    "end": "1827880"
  }
]