[
  {
    "text": "hi",
    "start": "4860",
    "end": "6600"
  },
  {
    "text": "um thanks to amid it was a great talk",
    "start": "6600",
    "end": "10200"
  },
  {
    "text": "and I'm here to talk about observing the",
    "start": "10200",
    "end": "14639"
  },
  {
    "text": "grpc protocol",
    "start": "14639",
    "end": "16619"
  },
  {
    "text": "but first I want us to take a look at",
    "start": "16619",
    "end": "19500"
  },
  {
    "text": "the bigger picture",
    "start": "19500",
    "end": "20820"
  },
  {
    "text": "because this is about much more than",
    "start": "20820",
    "end": "23640"
  },
  {
    "text": "grpc",
    "start": "23640",
    "end": "26279"
  },
  {
    "text": "observability into our clusters will",
    "start": "26279",
    "end": "29699"
  },
  {
    "text": "undergo an enormous revolution in the",
    "start": "29699",
    "end": "32640"
  },
  {
    "text": "coming years thanks to ebpf",
    "start": "32640",
    "end": "37460"
  },
  {
    "text": "when I say observability I'm talking",
    "start": "37559",
    "end": "40200"
  },
  {
    "text": "about our ability as developers and",
    "start": "40200",
    "end": "43260"
  },
  {
    "text": "devops to see everything that's going on",
    "start": "43260",
    "end": "46440"
  },
  {
    "text": "in our cluster",
    "start": "46440",
    "end": "48239"
  },
  {
    "text": "this includes all the interactions",
    "start": "48239",
    "end": "50700"
  },
  {
    "text": "between our services all the metadata",
    "start": "50700",
    "end": "53399"
  },
  {
    "text": "that accompanies them",
    "start": "53399",
    "end": "55079"
  },
  {
    "text": "various events such as program",
    "start": "55079",
    "end": "56940"
  },
  {
    "text": "exceptions on protocol errors and",
    "start": "56940",
    "end": "59280"
  },
  {
    "text": "determining exactly when all of this",
    "start": "59280",
    "end": "62039"
  },
  {
    "text": "occurs and to which processes it belongs",
    "start": "62039",
    "end": "65280"
  },
  {
    "text": "this is what I call full observability",
    "start": "65280",
    "end": "70400"
  },
  {
    "text": "today",
    "start": "71640",
    "end": "73140"
  },
  {
    "text": "your cluster is most likely in the dark",
    "start": "73140",
    "end": "76380"
  },
  {
    "text": "when a bug occurs you don't really know",
    "start": "76380",
    "end": "78900"
  },
  {
    "text": "what happens so you have to try and",
    "start": "78900",
    "end": "80880"
  },
  {
    "text": "reproduce it in your development",
    "start": "80880",
    "end": "82320"
  },
  {
    "text": "environment and that's only if you care",
    "start": "82320",
    "end": "84659"
  },
  {
    "text": "enough but if we are able to reach full",
    "start": "84659",
    "end": "88320"
  },
  {
    "text": "observability",
    "start": "88320",
    "end": "89759"
  },
  {
    "text": "this will totally change",
    "start": "89759",
    "end": "93840"
  },
  {
    "text": "I'm already",
    "start": "93840",
    "end": "95280"
  },
  {
    "text": "a founding engineer at ground cover",
    "start": "95280",
    "end": "97740"
  },
  {
    "text": "I'm very happy to be to be here today",
    "start": "97740",
    "end": "102258"
  },
  {
    "text": "um I've been implementing observability",
    "start": "102299",
    "end": "104340"
  },
  {
    "text": "solutions for many different use cases",
    "start": "104340",
    "end": "107040"
  },
  {
    "text": "for quite some time",
    "start": "107040",
    "end": "109200"
  },
  {
    "text": "and I I fell in love",
    "start": "109200",
    "end": "112320"
  },
  {
    "text": "with the magic that is also known as",
    "start": "112320",
    "end": "115079"
  },
  {
    "text": "ebpf",
    "start": "115079",
    "end": "116820"
  },
  {
    "text": "what I want to share with you today is",
    "start": "116820",
    "end": "119220"
  },
  {
    "text": "the most important Insight that I found",
    "start": "119220",
    "end": "121560"
  },
  {
    "text": "throughout my experiments that with evpf",
    "start": "121560",
    "end": "124979"
  },
  {
    "text": "we can reach full observability",
    "start": "124979",
    "end": "130039"
  },
  {
    "text": "the best way to understand that is by",
    "start": "131640",
    "end": "133980"
  },
  {
    "text": "examples and this is where grpc comes",
    "start": "133980",
    "end": "137099"
  },
  {
    "text": "into the picture",
    "start": "137099",
    "end": "138920"
  },
  {
    "text": "grpc is quickly becoming the preferred",
    "start": "138920",
    "end": "141959"
  },
  {
    "text": "tool to connect microservices replacing",
    "start": "141959",
    "end": "144840"
  },
  {
    "text": "a lot of the uses of HTTP in the modern",
    "start": "144840",
    "end": "147780"
  },
  {
    "text": "era",
    "start": "147780",
    "end": "149220"
  },
  {
    "text": "and it is also quite hard to observe and",
    "start": "149220",
    "end": "152640"
  },
  {
    "text": "this is exactly why it makes the best",
    "start": "152640",
    "end": "154800"
  },
  {
    "text": "example for our Revolution",
    "start": "154800",
    "end": "158840"
  },
  {
    "text": "I will not dive into the technicalities",
    "start": "159300",
    "end": "161160"
  },
  {
    "text": "of grpc here but there is some basic",
    "start": "161160",
    "end": "163680"
  },
  {
    "text": "stuff that we should know",
    "start": "163680",
    "end": "166879"
  },
  {
    "text": "when the client wants to request a",
    "start": "169080",
    "end": "171000"
  },
  {
    "text": "resource from the server using grpc",
    "start": "171000",
    "end": "174540"
  },
  {
    "text": "they say they get like request with the",
    "start": "174540",
    "end": "177000"
  },
  {
    "text": "resource name as a header the path",
    "start": "177000",
    "end": "179280"
  },
  {
    "text": "header",
    "start": "179280",
    "end": "180780"
  },
  {
    "text": "the headers are then cached to minimize",
    "start": "180780",
    "end": "183120"
  },
  {
    "text": "the total amount of data sent over the",
    "start": "183120",
    "end": "185040"
  },
  {
    "text": "connection because headers usually",
    "start": "185040",
    "end": "187620"
  },
  {
    "text": "repeat themselves",
    "start": "187620",
    "end": "190400"
  },
  {
    "text": "this basically means that if the same",
    "start": "190440",
    "end": "192480"
  },
  {
    "text": "resource is requested later on",
    "start": "192480",
    "end": "195420"
  },
  {
    "text": "it is basically given an ID at the first",
    "start": "195420",
    "end": "198840"
  },
  {
    "text": "request and the ID is used instead of",
    "start": "198840",
    "end": "202379"
  },
  {
    "text": "the resource name",
    "start": "202379",
    "end": "205099"
  },
  {
    "text": "in our example the id7 is requested",
    "start": "205260",
    "end": "208319"
  },
  {
    "text": "instead of the resource name only",
    "start": "208319",
    "end": "212300"
  },
  {
    "text": "we also need to know that grpc supports",
    "start": "213540",
    "end": "216060"
  },
  {
    "text": "multiple streams",
    "start": "216060",
    "end": "218400"
  },
  {
    "text": "this means that the client May request",
    "start": "218400",
    "end": "220379"
  },
  {
    "text": "more than one resource at the same time",
    "start": "220379",
    "end": "224220"
  },
  {
    "text": "and if it does so in request for example",
    "start": "224220",
    "end": "226260"
  },
  {
    "text": "two resources almost at the same time",
    "start": "226260",
    "end": "228180"
  },
  {
    "text": "the server may even respond to the first",
    "start": "228180",
    "end": "230519"
  },
  {
    "text": "request only after responding to the",
    "start": "230519",
    "end": "233099"
  },
  {
    "text": "second one",
    "start": "233099",
    "end": "235519"
  },
  {
    "text": "sorry",
    "start": "242340",
    "end": "244080"
  },
  {
    "text": "grpc like every other protocol we know",
    "start": "244080",
    "end": "246959"
  },
  {
    "text": "of is implemented in different libraries",
    "start": "246959",
    "end": "249720"
  },
  {
    "text": "the main library that I will discuss",
    "start": "249720",
    "end": "252480"
  },
  {
    "text": "today is the grpcc library it is used by",
    "start": "252480",
    "end": "255720"
  },
  {
    "text": "a lot of languages including python",
    "start": "255720",
    "end": "259940"
  },
  {
    "text": "so",
    "start": "261660",
    "end": "262860"
  },
  {
    "text": "today here we are gonna Implement",
    "start": "262860",
    "end": "265500"
  },
  {
    "text": "observability for the grpcc library",
    "start": "265500",
    "end": "269639"
  },
  {
    "text": "but first let's consider what do we",
    "start": "269639",
    "end": "272820"
  },
  {
    "text": "really want to observe",
    "start": "272820",
    "end": "275280"
  },
  {
    "text": "let's take a simple example the most",
    "start": "275280",
    "end": "277380"
  },
  {
    "text": "simple one I could think of of two",
    "start": "277380",
    "end": "279660"
  },
  {
    "text": "containers a client and a server",
    "start": "279660",
    "end": "281520"
  },
  {
    "text": "communicating over grpc",
    "start": "281520",
    "end": "284160"
  },
  {
    "text": "the client periodically every 10 seconds",
    "start": "284160",
    "end": "286820"
  },
  {
    "text": "sends a request to the server requesting",
    "start": "286820",
    "end": "289620"
  },
  {
    "text": "for resource only",
    "start": "289620",
    "end": "291960"
  },
  {
    "text": "it's quite a common use case of a client",
    "start": "291960",
    "end": "293880"
  },
  {
    "text": "that needs to know when the resource is",
    "start": "293880",
    "end": "295919"
  },
  {
    "text": "updated",
    "start": "295919",
    "end": "298280"
  },
  {
    "text": "and in that communication",
    "start": "299160",
    "end": "301380"
  },
  {
    "text": "what do we really want to observe",
    "start": "301380",
    "end": "304320"
  },
  {
    "text": "well we have to see the grpc data this",
    "start": "304320",
    "end": "307560"
  },
  {
    "text": "is the most basic part of the protocol",
    "start": "307560",
    "end": "309060"
  },
  {
    "text": "in our case it's thus it's just the",
    "start": "309060",
    "end": "311520"
  },
  {
    "text": "resource being downloaded",
    "start": "311520",
    "end": "313560"
  },
  {
    "text": "we also need to see the headers",
    "start": "313560",
    "end": "315180"
  },
  {
    "text": "especially the path header that we",
    "start": "315180",
    "end": "317340"
  },
  {
    "text": "talked about the resource name",
    "start": "317340",
    "end": "319680"
  },
  {
    "text": "we also need to know",
    "start": "319680",
    "end": "321600"
  },
  {
    "text": "when the stream has been closed that",
    "start": "321600",
    "end": "323880"
  },
  {
    "text": "will indicate to us that the resource",
    "start": "323880",
    "end": "326520"
  },
  {
    "text": "has been downloaded or that there was",
    "start": "326520",
    "end": "328860"
  },
  {
    "text": "some other error",
    "start": "328860",
    "end": "330780"
  },
  {
    "text": "and lastly for our simple example we",
    "start": "330780",
    "end": "333419"
  },
  {
    "text": "don't really need to know the stream ID",
    "start": "333419",
    "end": "334919"
  },
  {
    "text": "but if the client were to ask for more",
    "start": "334919",
    "end": "337740"
  },
  {
    "text": "than one resource at the same time we",
    "start": "337740",
    "end": "340139"
  },
  {
    "text": "would need a stream ID to differentiate",
    "start": "340139",
    "end": "342000"
  },
  {
    "text": "the responses",
    "start": "342000",
    "end": "345020"
  },
  {
    "text": "grpc connections can live for a very",
    "start": "346740",
    "end": "350759"
  },
  {
    "text": "long time",
    "start": "350759",
    "end": "351840"
  },
  {
    "text": "these requests every 10 seconds could go",
    "start": "351840",
    "end": "355199"
  },
  {
    "text": "on forever",
    "start": "355199",
    "end": "356639"
  },
  {
    "text": "and this means that we are most likely",
    "start": "356639",
    "end": "358800"
  },
  {
    "text": "going to start observing the traffic",
    "start": "358800",
    "end": "360600"
  },
  {
    "text": "when the resource name alongside other",
    "start": "360600",
    "end": "363300"
  },
  {
    "text": "headers is not transmitted anymore",
    "start": "363300",
    "end": "367580"
  },
  {
    "text": "so the first solution that evpf brings",
    "start": "370979",
    "end": "374820"
  },
  {
    "text": "to the table is using K probes kernel",
    "start": "374820",
    "end": "377520"
  },
  {
    "text": "probes they can be attached to Kernel",
    "start": "377520",
    "end": "379919"
  },
  {
    "text": "functions including system calls and",
    "start": "379919",
    "end": "383400"
  },
  {
    "text": "there we have access to the arguments to",
    "start": "383400",
    "end": "385740"
  },
  {
    "text": "these functions",
    "start": "385740",
    "end": "387240"
  },
  {
    "text": "so for example we could attach probes to",
    "start": "387240",
    "end": "390780"
  },
  {
    "text": "the send and receive system calls and",
    "start": "390780",
    "end": "393419"
  },
  {
    "text": "have access to their arguments and this",
    "start": "393419",
    "end": "396660"
  },
  {
    "text": "will basically provide to us everything",
    "start": "396660",
    "end": "398699"
  },
  {
    "text": "going in or out of the container",
    "start": "398699",
    "end": "402120"
  },
  {
    "text": "and this is really powerful it is used",
    "start": "402120",
    "end": "404880"
  },
  {
    "text": "this way evpf is used to monitor a lot",
    "start": "404880",
    "end": "408360"
  },
  {
    "text": "of different protocols like http",
    "start": "408360",
    "end": "412199"
  },
  {
    "text": "and it also looks kind of promising",
    "start": "412199",
    "end": "413940"
  },
  {
    "text": "right everything we talked about all the",
    "start": "413940",
    "end": "416819"
  },
  {
    "text": "four items have to be there right coming",
    "start": "416819",
    "end": "418919"
  },
  {
    "text": "in or out of the container",
    "start": "418919",
    "end": "421979"
  },
  {
    "text": "well the problem is that K probes just",
    "start": "421979",
    "end": "425400"
  },
  {
    "text": "don't cut it in our case",
    "start": "425400",
    "end": "427199"
  },
  {
    "text": "the header compression mechanism we",
    "start": "427199",
    "end": "429180"
  },
  {
    "text": "talked about that replaces the resource",
    "start": "429180",
    "end": "430919"
  },
  {
    "text": "name with an ID",
    "start": "430919",
    "end": "432600"
  },
  {
    "text": "makes the grpc protocol stateful",
    "start": "432600",
    "end": "437479"
  },
  {
    "text": "if we used K probes from the beginning",
    "start": "438060",
    "end": "439979"
  },
  {
    "text": "of the connection",
    "start": "439979",
    "end": "441720"
  },
  {
    "text": "we would observe the first the first",
    "start": "441720",
    "end": "443880"
  },
  {
    "text": "request and we would see that 7",
    "start": "443880",
    "end": "446520"
  },
  {
    "text": "represents the resource only",
    "start": "446520",
    "end": "449960"
  },
  {
    "text": "but we might just start observing when",
    "start": "450060",
    "end": "453060"
  },
  {
    "text": "the connection is already alive",
    "start": "453060",
    "end": "455759"
  },
  {
    "text": "and we also want to do that without",
    "start": "455759",
    "end": "457919"
  },
  {
    "text": "harming the connection in any way with",
    "start": "457919",
    "end": "460500"
  },
  {
    "text": "zero downtime",
    "start": "460500",
    "end": "463460"
  },
  {
    "text": "and if we do that we are going to miss",
    "start": "464220",
    "end": "467460"
  },
  {
    "text": "the resource name",
    "start": "467460",
    "end": "469979"
  },
  {
    "text": "so what can we do",
    "start": "469979",
    "end": "473039"
  },
  {
    "text": "well evpf luckily also introduces your",
    "start": "473039",
    "end": "476520"
  },
  {
    "text": "probes user mode probes and they can be",
    "start": "476520",
    "end": "479639"
  },
  {
    "text": "attached to user mode functions",
    "start": "479639",
    "end": "481319"
  },
  {
    "text": "including",
    "start": "481319",
    "end": "484319"
  },
  {
    "text": "um sorry including",
    "start": "484560",
    "end": "486660"
  },
  {
    "text": "Library functions",
    "start": "486660",
    "end": "489000"
  },
  {
    "text": "using your probes we can just like with",
    "start": "489000",
    "end": "491819"
  },
  {
    "text": "K probes see the arguments to the",
    "start": "491819",
    "end": "494160"
  },
  {
    "text": "functions that we probe",
    "start": "494160",
    "end": "497340"
  },
  {
    "text": "so probing inside the grpcc Library",
    "start": "497340",
    "end": "502440"
  },
  {
    "text": "can provide to us information from the",
    "start": "502440",
    "end": "506340"
  },
  {
    "text": "library from the memory of the library",
    "start": "506340",
    "end": "510300"
  },
  {
    "text": "in the middle of the connection too",
    "start": "510300",
    "end": "513240"
  },
  {
    "text": "the library the grpcc library obviously",
    "start": "513240",
    "end": "516659"
  },
  {
    "text": "knows that the number 7 represents the",
    "start": "516659",
    "end": "519659"
  },
  {
    "text": "resource only otherwise it just wouldn't",
    "start": "519659",
    "end": "522120"
  },
  {
    "text": "have worked if the server didn't know",
    "start": "522120",
    "end": "524880"
  },
  {
    "text": "what 7 was it wouldn't know to respond",
    "start": "524880",
    "end": "527459"
  },
  {
    "text": "to a request for resource 7.",
    "start": "527459",
    "end": "531500"
  },
  {
    "text": "so if there was a grpc receive function",
    "start": "531800",
    "end": "535980"
  },
  {
    "text": "that receives all the information we",
    "start": "535980",
    "end": "538860"
  },
  {
    "text": "seek as arguments we would probe it",
    "start": "538860",
    "end": "542399"
  },
  {
    "text": "and just see all the incoming",
    "start": "542399",
    "end": "543959"
  },
  {
    "text": "information into the container we would",
    "start": "543959",
    "end": "546420"
  },
  {
    "text": "just need another another probe for the",
    "start": "546420",
    "end": "549180"
  },
  {
    "text": "complementary grpc send function and we",
    "start": "549180",
    "end": "551580"
  },
  {
    "text": "would be done we would have full",
    "start": "551580",
    "end": "553680"
  },
  {
    "text": "observability",
    "start": "553680",
    "end": "555839"
  },
  {
    "text": "when you think about it this kind of",
    "start": "555839",
    "end": "558000"
  },
  {
    "text": "solution",
    "start": "558000",
    "end": "559019"
  },
  {
    "text": "works for all types of stateful",
    "start": "559019",
    "end": "561000"
  },
  {
    "text": "connections including even encrypted",
    "start": "561000",
    "end": "564180"
  },
  {
    "text": "traffic",
    "start": "564180",
    "end": "565320"
  },
  {
    "text": "the encryption libraries for instance",
    "start": "565320",
    "end": "567959"
  },
  {
    "text": "leave us a cell obviously know what the",
    "start": "567959",
    "end": "571140"
  },
  {
    "text": "unencrypted data is after all they are",
    "start": "571140",
    "end": "574140"
  },
  {
    "text": "used to translate encrypted to",
    "start": "574140",
    "end": "576240"
  },
  {
    "text": "unencrypted data so using u-probes in",
    "start": "576240",
    "end": "579300"
  },
  {
    "text": "the correct location inside these",
    "start": "579300",
    "end": "581220"
  },
  {
    "text": "libraries will provide full",
    "start": "581220",
    "end": "583620"
  },
  {
    "text": "observability into encrypted traffic",
    "start": "583620",
    "end": "588680"
  },
  {
    "text": "we are here I I've got a feeling that we",
    "start": "589440",
    "end": "591720"
  },
  {
    "text": "are going to hear more about that today",
    "start": "591720",
    "end": "593580"
  },
  {
    "text": "later in a talk by Dom hi I'm definitely",
    "start": "593580",
    "end": "597899"
  },
  {
    "text": "looking forward to that one but for now",
    "start": "597899",
    "end": "600300"
  },
  {
    "text": "let's focus",
    "start": "600300",
    "end": "601800"
  },
  {
    "text": "on our grpc use case",
    "start": "601800",
    "end": "605220"
  },
  {
    "text": "a similar concept that uh Omid talked",
    "start": "605220",
    "end": "608459"
  },
  {
    "text": "about briefly is usdt user levels",
    "start": "608459",
    "end": "611580"
  },
  {
    "text": "statically defined tracing",
    "start": "611580",
    "end": "613920"
  },
  {
    "text": "usdt functions are basically functions",
    "start": "613920",
    "end": "616560"
  },
  {
    "text": "like the grpc receive function we just",
    "start": "616560",
    "end": "618660"
  },
  {
    "text": "saw",
    "start": "618660",
    "end": "619440"
  },
  {
    "text": "they are functions that are designed to",
    "start": "619440",
    "end": "622019"
  },
  {
    "text": "make monitoring the library easier they",
    "start": "622019",
    "end": "625080"
  },
  {
    "text": "receive all the information you need to",
    "start": "625080",
    "end": "626940"
  },
  {
    "text": "monitor as arguments",
    "start": "626940",
    "end": "629640"
  },
  {
    "text": "monitoring a library that has usdt",
    "start": "629640",
    "end": "632040"
  },
  {
    "text": "functions is the most simple and",
    "start": "632040",
    "end": "634080"
  },
  {
    "text": "reliable you probing solution you could",
    "start": "634080",
    "end": "636600"
  },
  {
    "text": "have",
    "start": "636600",
    "end": "637860"
  },
  {
    "text": "our problem is that the grpcc library",
    "start": "637860",
    "end": "640560"
  },
  {
    "text": "does not have usdt support",
    "start": "640560",
    "end": "645200"
  },
  {
    "text": "we can add usdt support",
    "start": "646620",
    "end": "649500"
  },
  {
    "text": "after all this library is an open source",
    "start": "649500",
    "end": "652320"
  },
  {
    "text": "and a Community Driven Library",
    "start": "652320",
    "end": "655560"
  },
  {
    "text": "hopefully the library developers will",
    "start": "655560",
    "end": "658140"
  },
  {
    "text": "like the idea and allow us to merge this",
    "start": "658140",
    "end": "660540"
  },
  {
    "text": "code into their pull request",
    "start": "660540",
    "end": "662940"
  },
  {
    "text": "and hopefully they will also deem it",
    "start": "662940",
    "end": "665459"
  },
  {
    "text": "important enough to be turned on by",
    "start": "665459",
    "end": "667740"
  },
  {
    "text": "default at newer versions",
    "start": "667740",
    "end": "670320"
  },
  {
    "text": "and that is great",
    "start": "670320",
    "end": "672360"
  },
  {
    "text": "because when the new version that has",
    "start": "672360",
    "end": "674579"
  },
  {
    "text": "usdt functions is rolled out and",
    "start": "674579",
    "end": "676860"
  },
  {
    "text": "everybody updates the library version",
    "start": "676860",
    "end": "678480"
  },
  {
    "text": "they are using which will take I'm",
    "start": "678480",
    "end": "681300"
  },
  {
    "text": "guessing about three years",
    "start": "681300",
    "end": "684120"
  },
  {
    "text": "then we can have full observability to",
    "start": "684120",
    "end": "687420"
  },
  {
    "text": "the library's traffic using usdtu probes",
    "start": "687420",
    "end": "692399"
  },
  {
    "text": "but what can we do right now",
    "start": "692399",
    "end": "697040"
  },
  {
    "text": "well there ought to be send and receive",
    "start": "699720",
    "end": "703079"
  },
  {
    "text": "functions inside the Library",
    "start": "703079",
    "end": "705779"
  },
  {
    "text": "and the headers and the stream ID must",
    "start": "705779",
    "end": "708720"
  },
  {
    "text": "also be somewhere in the library's",
    "start": "708720",
    "end": "710399"
  },
  {
    "text": "memory too",
    "start": "710399",
    "end": "712019"
  },
  {
    "text": "so",
    "start": "712019",
    "end": "713220"
  },
  {
    "text": "the solution to our problem may not be",
    "start": "713220",
    "end": "716519"
  },
  {
    "text": "as simple as using two neat usdt probes",
    "start": "716519",
    "end": "719579"
  },
  {
    "text": "on Library functions but the concept is",
    "start": "719579",
    "end": "722820"
  },
  {
    "text": "similar",
    "start": "722820",
    "end": "725300"
  },
  {
    "text": "we are looking for functions that",
    "start": "726240",
    "end": "728940"
  },
  {
    "text": "receive everything we seek as arguments",
    "start": "728940",
    "end": "734040"
  },
  {
    "text": "grpcc is an open source project and that",
    "start": "734040",
    "end": "737760"
  },
  {
    "text": "makes our task way more feasible we can",
    "start": "737760",
    "end": "740940"
  },
  {
    "text": "just look directly at the library's code",
    "start": "740940",
    "end": "743220"
  },
  {
    "text": "to search for these functions",
    "start": "743220",
    "end": "747139"
  },
  {
    "text": "so",
    "start": "747240",
    "end": "748560"
  },
  {
    "text": "let's see what you probe hacking looks",
    "start": "748560",
    "end": "751680"
  },
  {
    "text": "like",
    "start": "751680",
    "end": "753740"
  },
  {
    "text": "the first thing we're going to search",
    "start": "760800",
    "end": "762600"
  },
  {
    "text": "for is the grpc data it is the most",
    "start": "762600",
    "end": "766200"
  },
  {
    "text": "basic part of the protocol",
    "start": "766200",
    "end": "768839"
  },
  {
    "text": "so let's look for grpc receive and grpc",
    "start": "768839",
    "end": "771839"
  },
  {
    "text": "send functions",
    "start": "771839",
    "end": "773880"
  },
  {
    "text": "and hopefully we will find functions",
    "start": "773880",
    "end": "776459"
  },
  {
    "text": "that not only have access to the data",
    "start": "776459",
    "end": "778200"
  },
  {
    "text": "but also to the stream ID and to the",
    "start": "778200",
    "end": "779880"
  },
  {
    "text": "headers providing us with everything we",
    "start": "779880",
    "end": "782160"
  },
  {
    "text": "need in just two probes this is our",
    "start": "782160",
    "end": "785220"
  },
  {
    "text": "Dream right now this is what we are",
    "start": "785220",
    "end": "787740"
  },
  {
    "text": "hoping we can find",
    "start": "787740",
    "end": "791360"
  },
  {
    "text": "but how can we even start to search for",
    "start": "792180",
    "end": "795000"
  },
  {
    "text": "these functions in the hundreds of",
    "start": "795000",
    "end": "796800"
  },
  {
    "text": "thousands of lines of code inside the",
    "start": "796800",
    "end": "798779"
  },
  {
    "text": "grpcc Library",
    "start": "798779",
    "end": "800760"
  },
  {
    "text": "and trust me I've counted",
    "start": "800760",
    "end": "803160"
  },
  {
    "text": "well we can search for them in three",
    "start": "803160",
    "end": "805680"
  },
  {
    "text": "manners the first one is a bottom up",
    "start": "805680",
    "end": "808320"
  },
  {
    "text": "search where we start by looking at the",
    "start": "808320",
    "end": "810779"
  },
  {
    "text": "kernel system calls send and receive",
    "start": "810779",
    "end": "812880"
  },
  {
    "text": "we've established that the data we",
    "start": "812880",
    "end": "815160"
  },
  {
    "text": "search for goes through there",
    "start": "815160",
    "end": "817500"
  },
  {
    "text": "and then we can ask ourselves who uses",
    "start": "817500",
    "end": "820139"
  },
  {
    "text": "these functions the data must be there",
    "start": "820139",
    "end": "822899"
  },
  {
    "text": "too and we ask the same question again",
    "start": "822899",
    "end": "825600"
  },
  {
    "text": "and again working our way up through the",
    "start": "825600",
    "end": "828720"
  },
  {
    "text": "flow of the data receiving and data",
    "start": "828720",
    "end": "830820"
  },
  {
    "text": "sending",
    "start": "830820",
    "end": "831899"
  },
  {
    "text": "uh sequences",
    "start": "831899",
    "end": "834240"
  },
  {
    "text": "and hopefully we will find our perfect",
    "start": "834240",
    "end": "836700"
  },
  {
    "text": "functions",
    "start": "836700",
    "end": "838200"
  },
  {
    "text": "the second way is a top-down search",
    "start": "838200",
    "end": "840480"
  },
  {
    "text": "where we start by looking at the API of",
    "start": "840480",
    "end": "844139"
  },
  {
    "text": "the library these are the functions that",
    "start": "844139",
    "end": "846000"
  },
  {
    "text": "the user process calls in order to",
    "start": "846000",
    "end": "848040"
  },
  {
    "text": "communicate using",
    "start": "848040",
    "end": "850200"
  },
  {
    "text": "the grpc protocol using the library",
    "start": "850200",
    "end": "853320"
  },
  {
    "text": "and then we start working our way",
    "start": "853320",
    "end": "855180"
  },
  {
    "text": "downwards use again working through the",
    "start": "855180",
    "end": "859860"
  },
  {
    "text": "data sending and data receiving flows",
    "start": "859860",
    "end": "862380"
  },
  {
    "text": "and again hopefully we will stumble upon",
    "start": "862380",
    "end": "865680"
  },
  {
    "text": "our perfect functions",
    "start": "865680",
    "end": "868200"
  },
  {
    "text": "now the Third Way is a middle outsearch",
    "start": "868200",
    "end": "871139"
  },
  {
    "text": "where we start right at the middle",
    "start": "871139",
    "end": "872760"
  },
  {
    "text": "between the API functions and the kernel",
    "start": "872760",
    "end": "875040"
  },
  {
    "text": "system calls we can do that by for",
    "start": "875040",
    "end": "878100"
  },
  {
    "text": "example searching for a string say send",
    "start": "878100",
    "end": "881639"
  },
  {
    "text": "and if the functions in the library are",
    "start": "881639",
    "end": "883860"
  },
  {
    "text": "named properly",
    "start": "883860",
    "end": "885240"
  },
  {
    "text": "we will land somewhere in the middle of",
    "start": "885240",
    "end": "887339"
  },
  {
    "text": "the flow",
    "start": "887339",
    "end": "888540"
  },
  {
    "text": "and then we can start expanding outwards",
    "start": "888540",
    "end": "890760"
  },
  {
    "text": "in both directions",
    "start": "890760",
    "end": "893480"
  },
  {
    "text": "so starting with a bottom-up search I",
    "start": "895800",
    "end": "900000"
  },
  {
    "text": "found the flush data function",
    "start": "900000",
    "end": "902699"
  },
  {
    "text": "it is used to send data",
    "start": "902699",
    "end": "905579"
  },
  {
    "text": "and it also has access to a stream",
    "start": "905579",
    "end": "907740"
  },
  {
    "text": "struct",
    "start": "907740",
    "end": "908940"
  },
  {
    "text": "that has stored within it the stream ID",
    "start": "908940",
    "end": "911699"
  },
  {
    "text": "and the headers",
    "start": "911699",
    "end": "913860"
  },
  {
    "text": "and that is amazing because all the data",
    "start": "913860",
    "end": "916740"
  },
  {
    "text": "we were searching for is just in one",
    "start": "916740",
    "end": "918660"
  },
  {
    "text": "place",
    "start": "918660",
    "end": "920899"
  },
  {
    "text": "but",
    "start": "922320",
    "end": "923940"
  },
  {
    "text": "well it wouldn't be that simple I",
    "start": "923940",
    "end": "925800"
  },
  {
    "text": "wouldn't be here if it were that simple",
    "start": "925800",
    "end": "928100"
  },
  {
    "text": "this function is compiled in line",
    "start": "928100",
    "end": "931560"
  },
  {
    "text": "this basically means that the compiler",
    "start": "931560",
    "end": "933660"
  },
  {
    "text": "for whatever performance reasons it",
    "start": "933660",
    "end": "936720"
  },
  {
    "text": "knows better than I do decided that it's",
    "start": "936720",
    "end": "939660"
  },
  {
    "text": "as if this function doesn't even exist",
    "start": "939660",
    "end": "942740"
  },
  {
    "text": "it's just as if the code that's written",
    "start": "942740",
    "end": "945899"
  },
  {
    "text": "in this function was instead written",
    "start": "945899",
    "end": "948779"
  },
  {
    "text": "directly in inside the function that",
    "start": "948779",
    "end": "951240"
  },
  {
    "text": "calls it",
    "start": "951240",
    "end": "953699"
  },
  {
    "text": "and that's bad news for us because we",
    "start": "953699",
    "end": "956160"
  },
  {
    "text": "can't probe a function that doesn't",
    "start": "956160",
    "end": "957779"
  },
  {
    "text": "exist",
    "start": "957779",
    "end": "959880"
  },
  {
    "text": "so let's look at who uses this function",
    "start": "959880",
    "end": "962519"
  },
  {
    "text": "which is by the way bottom-up searching",
    "start": "962519",
    "end": "967279"
  },
  {
    "text": "and that is the begin write function",
    "start": "969000",
    "end": "971880"
  },
  {
    "text": "what it does is look through all the",
    "start": "971880",
    "end": "975300"
  },
  {
    "text": "different active grpc streams and",
    "start": "975300",
    "end": "978660"
  },
  {
    "text": "sending the data for each of them that",
    "start": "978660",
    "end": "980459"
  },
  {
    "text": "is ready to be sent using a set of three",
    "start": "980459",
    "end": "982620"
  },
  {
    "text": "functions",
    "start": "982620",
    "end": "983880"
  },
  {
    "text": "all of the three are compiled in line",
    "start": "983880",
    "end": "985860"
  },
  {
    "text": "and that makes the begin write function",
    "start": "985860",
    "end": "987660"
  },
  {
    "text": "be quite a a huge bloated function",
    "start": "987660",
    "end": "992160"
  },
  {
    "text": "theoretically we do know that the flush",
    "start": "992160",
    "end": "994980"
  },
  {
    "text": "data logic is embedded directly there in",
    "start": "994980",
    "end": "997680"
  },
  {
    "text": "the middle of begin right so we could",
    "start": "997680",
    "end": "1000800"
  },
  {
    "text": "probe it in the middle it is a power",
    "start": "1000800",
    "end": "1003199"
  },
  {
    "text": "that ebpf allows us",
    "start": "1003199",
    "end": "1005720"
  },
  {
    "text": "however doing that is",
    "start": "1005720",
    "end": "1008779"
  },
  {
    "text": "way harder and even more hard to",
    "start": "1008779",
    "end": "1011300"
  },
  {
    "text": "maintain",
    "start": "1011300",
    "end": "1012459"
  },
  {
    "text": "so let's look for something else",
    "start": "1012459",
    "end": "1016899"
  },
  {
    "text": "instead we found a pop writable stream",
    "start": "1017300",
    "end": "1020000"
  },
  {
    "text": "function which is used by beginright to",
    "start": "1020000",
    "end": "1022759"
  },
  {
    "text": "iterate through the different active",
    "start": "1022759",
    "end": "1025339"
  },
  {
    "text": "grpc streams",
    "start": "1025339",
    "end": "1027918"
  },
  {
    "text": "probing at the end of this function will",
    "start": "1027919",
    "end": "1031160"
  },
  {
    "text": "retrieve to us as the return value",
    "start": "1031160",
    "end": "1034220"
  },
  {
    "text": "the stream struct the same one that is",
    "start": "1034220",
    "end": "1036980"
  },
  {
    "text": "later on passed to flash data",
    "start": "1036980",
    "end": "1040819"
  },
  {
    "text": "distract has stored within it the stream",
    "start": "1040819",
    "end": "1043699"
  },
  {
    "text": "ID and the headers and from that",
    "start": "1043699",
    "end": "1045620"
  },
  {
    "text": "specific context we can also use it to",
    "start": "1045620",
    "end": "1047780"
  },
  {
    "text": "access the data",
    "start": "1047780",
    "end": "1049940"
  },
  {
    "text": "and that just as we dreamed is",
    "start": "1049940",
    "end": "1053000"
  },
  {
    "text": "everything we searched for in just one",
    "start": "1053000",
    "end": "1055280"
  },
  {
    "text": "probe",
    "start": "1055280",
    "end": "1057700"
  },
  {
    "text": "if you thought this was hard enough",
    "start": "1061700",
    "end": "1064100"
  },
  {
    "text": "to see incoming data we needed three",
    "start": "1064100",
    "end": "1067340"
  },
  {
    "text": "probes one for the data and two for the",
    "start": "1067340",
    "end": "1070880"
  },
  {
    "text": "headers",
    "start": "1070880",
    "end": "1073240"
  },
  {
    "text": "so summing up with five probes",
    "start": "1075679",
    "end": "1079340"
  },
  {
    "text": "on five Library functions one for the",
    "start": "1079340",
    "end": "1082760"
  },
  {
    "text": "outgoing data three for incoming data",
    "start": "1082760",
    "end": "1085100"
  },
  {
    "text": "and a last one to see when the stream is",
    "start": "1085100",
    "end": "1087500"
  },
  {
    "text": "closed",
    "start": "1087500",
    "end": "1089360"
  },
  {
    "text": "everything works",
    "start": "1089360",
    "end": "1091460"
  },
  {
    "text": "and that is really exciting to me so I",
    "start": "1091460",
    "end": "1094160"
  },
  {
    "text": "want to show you this solution put to",
    "start": "1094160",
    "end": "1096559"
  },
  {
    "text": "action",
    "start": "1096559",
    "end": "1098919"
  },
  {
    "text": "in this demonstration in the bottom",
    "start": "1099620",
    "end": "1101960"
  },
  {
    "text": "right",
    "start": "1101960",
    "end": "1102860"
  },
  {
    "text": "you can see the ebpf code",
    "start": "1102860",
    "end": "1105559"
  },
  {
    "text": "in the top right",
    "start": "1105559",
    "end": "1107600"
  },
  {
    "text": "is the grpc server that is now starting",
    "start": "1107600",
    "end": "1110000"
  },
  {
    "text": "and the first thing that's going to",
    "start": "1110000",
    "end": "1111320"
  },
  {
    "text": "happen is the ebpf code attaching five",
    "start": "1111320",
    "end": "1114020"
  },
  {
    "text": "you probes",
    "start": "1114020",
    "end": "1116860"
  },
  {
    "text": "the client at the left will then start",
    "start": "1117260",
    "end": "1119840"
  },
  {
    "text": "sending periodical requests to the",
    "start": "1119840",
    "end": "1122299"
  },
  {
    "text": "server and also printing all the",
    "start": "1122299",
    "end": "1125179"
  },
  {
    "text": "information from the connection",
    "start": "1125179",
    "end": "1128600"
  },
  {
    "text": "and as you can see with zero code",
    "start": "1128600",
    "end": "1131360"
  },
  {
    "text": "changes to the server or to the client",
    "start": "1131360",
    "end": "1133340"
  },
  {
    "text": "the ebpf code magically has access",
    "start": "1133340",
    "end": "1137120"
  },
  {
    "text": "to all the grpc information from the",
    "start": "1137120",
    "end": "1140720"
  },
  {
    "text": "connection",
    "start": "1140720",
    "end": "1142900"
  },
  {
    "text": "you Pro packing was also used in the",
    "start": "1151940",
    "end": "1155120"
  },
  {
    "text": "Pixi open source project",
    "start": "1155120",
    "end": "1158059"
  },
  {
    "text": "to monitor the golang grpc library",
    "start": "1158059",
    "end": "1162200"
  },
  {
    "text": "foreign",
    "start": "1162200",
    "end": "1163880"
  },
  {
    "text": "with collaboration pixie now supports",
    "start": "1163880",
    "end": "1166880"
  },
  {
    "text": "tracing both libraries grpcc and grpc go",
    "start": "1166880",
    "end": "1171559"
  },
  {
    "text": "and all the languages that use them",
    "start": "1171559",
    "end": "1175160"
  },
  {
    "text": "you can see the code to both Solutions",
    "start": "1175160",
    "end": "1177020"
  },
  {
    "text": "in GitHub",
    "start": "1177020",
    "end": "1179860"
  },
  {
    "text": "there are still some languages left",
    "start": "1179900",
    "end": "1181940"
  },
  {
    "text": "unsupported you can see three examples",
    "start": "1181940",
    "end": "1183980"
  },
  {
    "text": "in the diagram",
    "start": "1183980",
    "end": "1186880"
  },
  {
    "text": "foreign",
    "start": "1194960",
    "end": "1197140"
  },
  {
    "text": "this was rough",
    "start": "1208720",
    "end": "1212140"
  },
  {
    "text": "we can repeat this process",
    "start": "1213200",
    "end": "1215840"
  },
  {
    "text": "for every Library we wish to observe",
    "start": "1215840",
    "end": "1220600"
  },
  {
    "text": "but why bother",
    "start": "1222440",
    "end": "1225080"
  },
  {
    "text": "as I said before using usdt",
    "start": "1225080",
    "end": "1228260"
  },
  {
    "text": "for short-term solution for",
    "start": "1228260",
    "end": "1230059"
  },
  {
    "text": "observability purposes",
    "start": "1230059",
    "end": "1232160"
  },
  {
    "text": "is futile it would take three years in",
    "start": "1232160",
    "end": "1235160"
  },
  {
    "text": "the best case until we can reap the",
    "start": "1235160",
    "end": "1236720"
  },
  {
    "text": "fruits",
    "start": "1236720",
    "end": "1238100"
  },
  {
    "text": "but long term wise as one of ebpf's",
    "start": "1238100",
    "end": "1241220"
  },
  {
    "text": "forefathers Brendan said",
    "start": "1241220",
    "end": "1243740"
  },
  {
    "text": "usdt is the solution",
    "start": "1243740",
    "end": "1246980"
  },
  {
    "text": "the main reason is that you Pro packing",
    "start": "1246980",
    "end": "1249559"
  },
  {
    "text": "has its problems",
    "start": "1249559",
    "end": "1251720"
  },
  {
    "text": "they all stem from the fact that we use",
    "start": "1251720",
    "end": "1253880"
  },
  {
    "text": "the magic of ebpf to access information",
    "start": "1253880",
    "end": "1257419"
  },
  {
    "text": "in the library that is not made visible",
    "start": "1257419",
    "end": "1260600"
  },
  {
    "text": "To Us by the library Developers",
    "start": "1260600",
    "end": "1264020"
  },
  {
    "text": "it's not such a big of a deal right I",
    "start": "1264020",
    "end": "1266240"
  },
  {
    "text": "mean we saw this process it's hard but",
    "start": "1266240",
    "end": "1268400"
  },
  {
    "text": "it's not impossible we can do it just",
    "start": "1268400",
    "end": "1270020"
  },
  {
    "text": "once per Library we want to observe",
    "start": "1270020",
    "end": "1273080"
  },
  {
    "text": "well the real issue is that this kind of",
    "start": "1273080",
    "end": "1276080"
  },
  {
    "text": "solution may be hard to maintain",
    "start": "1276080",
    "end": "1278780"
  },
  {
    "text": "so let's explore three reasons",
    "start": "1278780",
    "end": "1281720"
  },
  {
    "text": "that this specific solution may require",
    "start": "1281720",
    "end": "1283820"
  },
  {
    "text": "more effort in the future",
    "start": "1283820",
    "end": "1287299"
  },
  {
    "text": "all of the three would not exist if we",
    "start": "1287299",
    "end": "1290120"
  },
  {
    "text": "used usdt probes",
    "start": "1290120",
    "end": "1293120"
  },
  {
    "text": "the first is that Library developers",
    "start": "1293120",
    "end": "1295760"
  },
  {
    "text": "refrain from changing the API of the",
    "start": "1295760",
    "end": "1299120"
  },
  {
    "text": "definition of API functions in the",
    "start": "1299120",
    "end": "1301159"
  },
  {
    "text": "library this is important because they",
    "start": "1301159",
    "end": "1303500"
  },
  {
    "text": "wouldn't want that when someone updates",
    "start": "1303500",
    "end": "1305539"
  },
  {
    "text": "the library version their code just",
    "start": "1305539",
    "end": "1307820"
  },
  {
    "text": "stops working",
    "start": "1307820",
    "end": "1310220"
  },
  {
    "text": "to encounter this whenever you you probe",
    "start": "1310220",
    "end": "1313159"
  },
  {
    "text": "hack",
    "start": "1313159",
    "end": "1313940"
  },
  {
    "text": "and if you do that be cautious",
    "start": "1313940",
    "end": "1316820"
  },
  {
    "text": "probe API functions",
    "start": "1316820",
    "end": "1319159"
  },
  {
    "text": "they usually have all the data that you",
    "start": "1319159",
    "end": "1321500"
  },
  {
    "text": "need",
    "start": "1321500",
    "end": "1322520"
  },
  {
    "text": "in our case it wasn't a possibility",
    "start": "1322520",
    "end": "1324980"
  },
  {
    "text": "because when peep installs the library",
    "start": "1324980",
    "end": "1327020"
  },
  {
    "text": "for python usage it does something quite",
    "start": "1327020",
    "end": "1329960"
  },
  {
    "text": "different",
    "start": "1329960",
    "end": "1332200"
  },
  {
    "text": "so what we did is we looked back we",
    "start": "1332600",
    "end": "1336020"
  },
  {
    "text": "looked two years back and the functions",
    "start": "1336020",
    "end": "1338120"
  },
  {
    "text": "that you saw that we chose are functions",
    "start": "1338120",
    "end": "1340100"
  },
  {
    "text": "that don't change they didn't change in",
    "start": "1340100",
    "end": "1342980"
  },
  {
    "text": "that time period",
    "start": "1342980",
    "end": "1344360"
  },
  {
    "text": "but this is just a way to minimize the",
    "start": "1344360",
    "end": "1346280"
  },
  {
    "text": "risk because they can change in the",
    "start": "1346280",
    "end": "1347900"
  },
  {
    "text": "future and if they do our probing",
    "start": "1347900",
    "end": "1350179"
  },
  {
    "text": "solution will need to be",
    "start": "1350179",
    "end": "1353480"
  },
  {
    "text": "Accord will need to be changed",
    "start": "1353480",
    "end": "1355580"
  },
  {
    "text": "accordingly",
    "start": "1355580",
    "end": "1358299"
  },
  {
    "text": "the second is that the stream ID and the",
    "start": "1359659",
    "end": "1362659"
  },
  {
    "text": "headers and sometimes even the data that",
    "start": "1362659",
    "end": "1365059"
  },
  {
    "text": "we found is all in one huge stream",
    "start": "1365059",
    "end": "1366919"
  },
  {
    "text": "struct that has thousands of bytes and",
    "start": "1366919",
    "end": "1369860"
  },
  {
    "text": "it changes almost every Library version",
    "start": "1369860",
    "end": "1373460"
  },
  {
    "text": "if in a new version a new field is added",
    "start": "1373460",
    "end": "1376400"
  },
  {
    "text": "to destruct even if it has nothing to do",
    "start": "1376400",
    "end": "1378260"
  },
  {
    "text": "with the information that we seek it",
    "start": "1378260",
    "end": "1380900"
  },
  {
    "text": "might for example shift the stream ID",
    "start": "1380900",
    "end": "1383299"
  },
  {
    "text": "forward by four bytes and this means",
    "start": "1383299",
    "end": "1386179"
  },
  {
    "text": "that for our probes to work they need to",
    "start": "1386179",
    "end": "1388340"
  },
  {
    "text": "be aware of the library version they are",
    "start": "1388340",
    "end": "1390620"
  },
  {
    "text": "probing",
    "start": "1390620",
    "end": "1392360"
  },
  {
    "text": "in our case we had no easy way to find",
    "start": "1392360",
    "end": "1395419"
  },
  {
    "text": "the library version so what we had to do",
    "start": "1395419",
    "end": "1398600"
  },
  {
    "text": "is download a bunch of Library versions",
    "start": "1398600",
    "end": "1401179"
  },
  {
    "text": "and hash them all and now when we",
    "start": "1401179",
    "end": "1403940"
  },
  {
    "text": "encounter a new library we can hash it",
    "start": "1403940",
    "end": "1406460"
  },
  {
    "text": "therefore knowing its version",
    "start": "1406460",
    "end": "1410200"
  },
  {
    "text": "the third is that new versions of the",
    "start": "1411799",
    "end": "1414020"
  },
  {
    "text": "grpcc library this specific Library are",
    "start": "1414020",
    "end": "1417500"
  },
  {
    "text": "sometimes compiled without symbols",
    "start": "1417500",
    "end": "1420740"
  },
  {
    "text": "this means that we don't know the",
    "start": "1420740",
    "end": "1422600"
  },
  {
    "text": "addresses to the functions that we are",
    "start": "1422600",
    "end": "1425419"
  },
  {
    "text": "probing and if we don't know the",
    "start": "1425419",
    "end": "1426980"
  },
  {
    "text": "addresses we can't probe them",
    "start": "1426980",
    "end": "1430340"
  },
  {
    "text": "the functions we chose are functions",
    "start": "1430340",
    "end": "1433039"
  },
  {
    "text": "that have unique strings inside them",
    "start": "1433039",
    "end": "1434720"
  },
  {
    "text": "like the one you see on the screen these",
    "start": "1434720",
    "end": "1437299"
  },
  {
    "text": "strings can be used to find the address",
    "start": "1437299",
    "end": "1440659"
  },
  {
    "text": "very easily using reverse engineering",
    "start": "1440659",
    "end": "1442880"
  },
  {
    "text": "but it still needs to be done for every",
    "start": "1442880",
    "end": "1445760"
  },
  {
    "text": "Library version",
    "start": "1445760",
    "end": "1448900"
  },
  {
    "text": "the work you heard of here",
    "start": "1452000",
    "end": "1454460"
  },
  {
    "text": "you Pro packing",
    "start": "1454460",
    "end": "1456320"
  },
  {
    "text": "is for observability right now",
    "start": "1456320",
    "end": "1460159"
  },
  {
    "text": "your pro packing is a necessity",
    "start": "1460159",
    "end": "1462980"
  },
  {
    "text": "and a necessity that I enjoy very much",
    "start": "1462980",
    "end": "1465080"
  },
  {
    "text": "to be honest but",
    "start": "1465080",
    "end": "1466880"
  },
  {
    "text": "ebpf can be made easier it shouldn't be",
    "start": "1466880",
    "end": "1470960"
  },
  {
    "text": "that hard",
    "start": "1470960",
    "end": "1472640"
  },
  {
    "text": "modern libraries should add usdt support",
    "start": "1472640",
    "end": "1476419"
  },
  {
    "text": "to make this easier because this is the",
    "start": "1476419",
    "end": "1479900"
  },
  {
    "text": "future",
    "start": "1479900",
    "end": "1481280"
  },
  {
    "text": "we already added usdt support to the",
    "start": "1481280",
    "end": "1483919"
  },
  {
    "text": "grpcc open source library and if I've",
    "start": "1483919",
    "end": "1487340"
  },
  {
    "text": "convinced you that this is a worthy",
    "start": "1487340",
    "end": "1488900"
  },
  {
    "text": "cause please upvote our pull request",
    "start": "1488900",
    "end": "1492260"
  },
  {
    "text": "meanwhile we pave the way using your",
    "start": "1492260",
    "end": "1494900"
  },
  {
    "text": "probe hacking for observability to grow",
    "start": "1494900",
    "end": "1498200"
  },
  {
    "text": "giving it everything we've got so that",
    "start": "1498200",
    "end": "1500720"
  },
  {
    "text": "in a few years we will be able to",
    "start": "1500720",
    "end": "1503299"
  },
  {
    "text": "leverage the true power of ebpf",
    "start": "1503299",
    "end": "1506720"
  },
  {
    "text": "full and effortless on demand",
    "start": "1506720",
    "end": "1509960"
  },
  {
    "text": "observability",
    "start": "1509960",
    "end": "1512919"
  },
  {
    "text": "so you experience the power of ebpf in",
    "start": "1517400",
    "end": "1521780"
  },
  {
    "text": "changing the world of observability",
    "start": "1521780",
    "end": "1524600"
  },
  {
    "text": "grpc is a very interesting",
    "start": "1524600",
    "end": "1527600"
  },
  {
    "text": "and complete and complicated use case",
    "start": "1527600",
    "end": "1531080"
  },
  {
    "text": "this work depicts only the first steps",
    "start": "1531080",
    "end": "1534200"
  },
  {
    "text": "of the revolution",
    "start": "1534200",
    "end": "1536600"
  },
  {
    "text": "I invite you to stay tuned in the coming",
    "start": "1536600",
    "end": "1539059"
  },
  {
    "text": "years and see how it all turns out",
    "start": "1539059",
    "end": "1542000"
  },
  {
    "text": "or even join me and be a part of these",
    "start": "1542000",
    "end": "1544460"
  },
  {
    "text": "two you could for example add usdt",
    "start": "1544460",
    "end": "1547279"
  },
  {
    "text": "support to a library that you use or",
    "start": "1547279",
    "end": "1549919"
  },
  {
    "text": "even maintain if you have one of these",
    "start": "1549919",
    "end": "1552620"
  },
  {
    "text": "if you do",
    "start": "1552620",
    "end": "1554360"
  },
  {
    "text": "even if you don't please message me I",
    "start": "1554360",
    "end": "1557360"
  },
  {
    "text": "would love to be of help",
    "start": "1557360",
    "end": "1559700"
  },
  {
    "text": "so thank you very much for having me",
    "start": "1559700",
    "end": "1562039"
  },
  {
    "text": "today",
    "start": "1562039",
    "end": "1563000"
  },
  {
    "text": "I hope to see you the rest of the week",
    "start": "1563000",
    "end": "1564740"
  },
  {
    "text": "and I'd love to hear any questions",
    "start": "1564740",
    "end": "1567440"
  },
  {
    "text": "thanks sorry",
    "start": "1567440",
    "end": "1568470"
  },
  {
    "text": "[Applause]",
    "start": "1568470",
    "end": "1571768"
  }
]