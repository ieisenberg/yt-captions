[
  {
    "text": "hi everyone we're really excited to be",
    "start": "1120",
    "end": "3439"
  },
  {
    "text": "at cloud native north america wasn't a",
    "start": "3439",
    "end": "5520"
  },
  {
    "text": "2021 it's a real honor to be selected to",
    "start": "5520",
    "end": "8720"
  },
  {
    "text": "talk today and we have some really",
    "start": "8720",
    "end": "10400"
  },
  {
    "text": "exciting stuff packed into the next 20",
    "start": "10400",
    "end": "12160"
  },
  {
    "text": "minutes or so",
    "start": "12160",
    "end": "13440"
  },
  {
    "text": "um we want to talk about the use of",
    "start": "13440",
    "end": "15440"
  },
  {
    "text": "webassembly server side and how it's",
    "start": "15440",
    "end": "17680"
  },
  {
    "text": "driving a revolution in platform design",
    "start": "17680",
    "end": "21520"
  },
  {
    "text": "coupled with products like wasmcloud and",
    "start": "21520",
    "end": "24240"
  },
  {
    "text": "nats",
    "start": "24240",
    "end": "25199"
  },
  {
    "text": "webassembly is creating a new paradigm",
    "start": "25199",
    "end": "27840"
  },
  {
    "text": "for cloud native which as new paradigms",
    "start": "27840",
    "end": "30560"
  },
  {
    "text": "should eliminates entire classes of",
    "start": "30560",
    "end": "32719"
  },
  {
    "text": "problems that we struggle with today",
    "start": "32719",
    "end": "34399"
  },
  {
    "text": "when building distributed applications",
    "start": "34399",
    "end": "37280"
  },
  {
    "text": "but before we dive into that let's",
    "start": "37280",
    "end": "39200"
  },
  {
    "text": "introduce ourselves i'm stuart harris",
    "start": "39200",
    "end": "41120"
  },
  {
    "text": "founder and chief scientist at robaja",
    "start": "41120",
    "end": "43440"
  },
  {
    "text": "and i'm ayush i'm a senior software",
    "start": "43440",
    "end": "45039"
  },
  {
    "text": "engineer at badger and i'll be going",
    "start": "45039",
    "end": "47120"
  },
  {
    "text": "through the demo later on",
    "start": "47120",
    "end": "50320"
  },
  {
    "text": "we're a london-based consultancy that's",
    "start": "50719",
    "end": "53120"
  },
  {
    "text": "obsessed with helping organizations",
    "start": "53120",
    "end": "55520"
  },
  {
    "text": "streamline their ability to deliver",
    "start": "55520",
    "end": "57440"
  },
  {
    "text": "digital products or services",
    "start": "57440",
    "end": "59840"
  },
  {
    "text": "we're very honored to be here and a big",
    "start": "59840",
    "end": "61120"
  },
  {
    "text": "thank you to cncf for",
    "start": "61120",
    "end": "62879"
  },
  {
    "text": "organizing this event today",
    "start": "62879",
    "end": "65840"
  },
  {
    "text": "as a consultancy we've",
    "start": "65840",
    "end": "67840"
  },
  {
    "text": "experienced the pain over and over again",
    "start": "67840",
    "end": "70640"
  },
  {
    "text": "of building microservice applications",
    "start": "70640",
    "end": "72320"
  },
  {
    "text": "with today's architectures it's not",
    "start": "72320",
    "end": "74400"
  },
  {
    "text": "straightforward by any stretch of the",
    "start": "74400",
    "end": "76080"
  },
  {
    "text": "imagination and there's a lot to think",
    "start": "76080",
    "end": "77840"
  },
  {
    "text": "about",
    "start": "77840",
    "end": "79840"
  },
  {
    "text": "one of our clients one of europe's",
    "start": "79840",
    "end": "81520"
  },
  {
    "text": "largest banks engaged us recently to",
    "start": "81520",
    "end": "84000"
  },
  {
    "text": "describe to them what a future pla state",
    "start": "84000",
    "end": "86159"
  },
  {
    "text": "as future state platform architecture",
    "start": "86159",
    "end": "88320"
  },
  {
    "text": "could look like",
    "start": "88320",
    "end": "90000"
  },
  {
    "text": "they want to prepare themselves for a",
    "start": "90000",
    "end": "91600"
  },
  {
    "text": "world where they can easily deploy",
    "start": "91600",
    "end": "93200"
  },
  {
    "text": "workloads",
    "start": "93200",
    "end": "94320"
  },
  {
    "text": "securely and reliably across on-premise",
    "start": "94320",
    "end": "96560"
  },
  {
    "text": "and any cloud without having to",
    "start": "96560",
    "end": "98720"
  },
  {
    "text": "constantly adjust network topology to",
    "start": "98720",
    "end": "100799"
  },
  {
    "text": "suit",
    "start": "100799",
    "end": "102240"
  },
  {
    "text": "this is really refreshing that large",
    "start": "102240",
    "end": "104720"
  },
  {
    "text": "enterprises are thinking ahead like this",
    "start": "104720",
    "end": "106960"
  },
  {
    "text": "but this thinking is driven by their",
    "start": "106960",
    "end": "108479"
  },
  {
    "text": "pain of working with today's complexity",
    "start": "108479",
    "end": "112399"
  },
  {
    "text": "we've built a proof of concept to show",
    "start": "112399",
    "end": "114560"
  },
  {
    "text": "what such a platform might look like",
    "start": "114560",
    "end": "116000"
  },
  {
    "text": "it's a really cool demo and i'm just",
    "start": "116000",
    "end": "117439"
  },
  {
    "text": "going to show you in a minute",
    "start": "117439",
    "end": "119119"
  },
  {
    "text": "but first some background",
    "start": "119119",
    "end": "121280"
  },
  {
    "text": "um",
    "start": "121280",
    "end": "122240"
  },
  {
    "text": "it seems to us",
    "start": "122240",
    "end": "124159"
  },
  {
    "text": "as though the last decade",
    "start": "124159",
    "end": "126079"
  },
  {
    "text": "has been characterized by a rush to the",
    "start": "126079",
    "end": "128000"
  },
  {
    "text": "cloud",
    "start": "128000",
    "end": "130239"
  },
  {
    "text": "now that we're there well most of us",
    "start": "130239",
    "end": "132160"
  },
  {
    "text": "we're rightly worried about having all",
    "start": "132160",
    "end": "133760"
  },
  {
    "text": "our eggs in one basket and we've",
    "start": "133760",
    "end": "135360"
  },
  {
    "text": "realized that it's still far too",
    "start": "135360",
    "end": "137040"
  },
  {
    "text": "complicated",
    "start": "137040",
    "end": "138480"
  },
  {
    "text": "it's easier than filling out a form and",
    "start": "138480",
    "end": "140480"
  },
  {
    "text": "sending it to the it department",
    "start": "140480",
    "end": "142480"
  },
  {
    "text": "but the burden of managing",
    "start": "142480",
    "end": "143840"
  },
  {
    "text": "infrastructure is all too real",
    "start": "143840",
    "end": "146720"
  },
  {
    "text": "i think the next decade will be",
    "start": "146720",
    "end": "148000"
  },
  {
    "text": "characterized by rush out of the cloud",
    "start": "148000",
    "end": "151040"
  },
  {
    "text": "well not out completely but out enough",
    "start": "151040",
    "end": "153519"
  },
  {
    "text": "to be independent of any one provider",
    "start": "153519",
    "end": "156319"
  },
  {
    "text": "and out enough to make good use of the",
    "start": "156319",
    "end": "157920"
  },
  {
    "text": "edge on premise internet of things etc",
    "start": "157920",
    "end": "162080"
  },
  {
    "text": "if you're in a regulated industry like",
    "start": "162080",
    "end": "164239"
  },
  {
    "text": "finance or healthcare",
    "start": "164239",
    "end": "166480"
  },
  {
    "text": "the regulator will insist that you have",
    "start": "166480",
    "end": "168800"
  },
  {
    "text": "a get out plan",
    "start": "168800",
    "end": "171200"
  },
  {
    "text": "these plans aren't real though",
    "start": "171200",
    "end": "173599"
  },
  {
    "text": "you wouldn't be able to execute them at",
    "start": "173599",
    "end": "175120"
  },
  {
    "text": "least not quickly or cheaply",
    "start": "175120",
    "end": "177280"
  },
  {
    "text": "they're really just there to satisfy the",
    "start": "177280",
    "end": "179040"
  },
  {
    "text": "regulator",
    "start": "179040",
    "end": "180159"
  },
  {
    "text": "the cost of moving everything to another",
    "start": "180159",
    "end": "181760"
  },
  {
    "text": "cloud provider is going to be",
    "start": "181760",
    "end": "183040"
  },
  {
    "text": "prohibitive",
    "start": "183040",
    "end": "184959"
  },
  {
    "text": "containers and kubernetes have been at",
    "start": "184959",
    "end": "187440"
  },
  {
    "text": "an io not for our industry it's the",
    "start": "187440",
    "end": "189200"
  },
  {
    "text": "first time that there has been a",
    "start": "189200",
    "end": "190959"
  },
  {
    "text": "standard and consistent and uniform way",
    "start": "190959",
    "end": "193440"
  },
  {
    "text": "to deploy our applications regardless of",
    "start": "193440",
    "end": "195920"
  },
  {
    "text": "which cloud provider we want to use",
    "start": "195920",
    "end": "198720"
  },
  {
    "text": "but we're still locked into cloud",
    "start": "198720",
    "end": "200319"
  },
  {
    "text": "provider specific services aws is famous",
    "start": "200319",
    "end": "203280"
  },
  {
    "text": "for the number of services it keeps",
    "start": "203280",
    "end": "205040"
  },
  {
    "text": "introducing and every cloud provider",
    "start": "205040",
    "end": "207920"
  },
  {
    "text": "specific service that we use locks us in",
    "start": "207920",
    "end": "210560"
  },
  {
    "text": "even further",
    "start": "210560",
    "end": "212959"
  },
  {
    "text": "kubernetes was the first step on this",
    "start": "212959",
    "end": "214480"
  },
  {
    "text": "ladder but what's the next step",
    "start": "214480",
    "end": "216879"
  },
  {
    "text": "it definitely needs to be multi-cloud or",
    "start": "216879",
    "end": "219840"
  },
  {
    "text": "i should say multi-location",
    "start": "219840",
    "end": "222239"
  },
  {
    "text": "and to do that it needs to sit above the",
    "start": "222239",
    "end": "224239"
  },
  {
    "text": "http tcpip networking stack that",
    "start": "224239",
    "end": "227440"
  },
  {
    "text": "dominates microservices today",
    "start": "227440",
    "end": "230000"
  },
  {
    "text": "but multicloud is not really a thing not",
    "start": "230000",
    "end": "232239"
  },
  {
    "text": "yet",
    "start": "232239",
    "end": "233120"
  },
  {
    "text": "not transparently the best we can do",
    "start": "233120",
    "end": "235360"
  },
  {
    "text": "today is to join discrete kubernetes",
    "start": "235360",
    "end": "238400"
  },
  {
    "text": "clusters together in a service mesh",
    "start": "238400",
    "end": "240560"
  },
  {
    "text": "using point-to-point connections between",
    "start": "240560",
    "end": "242080"
  },
  {
    "text": "cloud providers",
    "start": "242080",
    "end": "243680"
  },
  {
    "text": "and we can't yet have workloads that are",
    "start": "243680",
    "end": "245920"
  },
  {
    "text": "truly location independent",
    "start": "245920",
    "end": "249680"
  },
  {
    "text": "the next step on the ladder out of the",
    "start": "249760",
    "end": "251280"
  },
  {
    "text": "cloud or let's say above the cloud",
    "start": "251280",
    "end": "253760"
  },
  {
    "text": "is webassembly running server side on",
    "start": "253760",
    "end": "255920"
  },
  {
    "text": "one of the many runtimes that we have",
    "start": "255920",
    "end": "258079"
  },
  {
    "text": "now",
    "start": "258079",
    "end": "259519"
  },
  {
    "text": "and probably with a platform like wasn't",
    "start": "259519",
    "end": "261280"
  },
  {
    "text": "cloud",
    "start": "261280",
    "end": "262240"
  },
  {
    "text": "running on top of nats on top of",
    "start": "262240",
    "end": "263600"
  },
  {
    "text": "kubernetes for now on top of cloud",
    "start": "263600",
    "end": "267440"
  },
  {
    "text": "today aisha and i want to talk about how",
    "start": "267440",
    "end": "269440"
  },
  {
    "text": "these technologies are changing the game",
    "start": "269440",
    "end": "270880"
  },
  {
    "text": "completely",
    "start": "270880",
    "end": "272000"
  },
  {
    "text": "so let's start with the demo",
    "start": "272000",
    "end": "274400"
  },
  {
    "text": "i wish it's going to blow our socks up",
    "start": "274400",
    "end": "277600"
  },
  {
    "text": "cool thanks to",
    "start": "277600",
    "end": "279199"
  },
  {
    "text": "um so yeah as you mentioned i'm going to",
    "start": "279199",
    "end": "281280"
  },
  {
    "text": "be demonstrating a service vault",
    "start": "281280",
    "end": "282800"
  },
  {
    "text": "tolerance in a multi-cloud architecture",
    "start": "282800",
    "end": "285360"
  },
  {
    "text": "um in other words we're going to be",
    "start": "285360",
    "end": "286880"
  },
  {
    "text": "running uh same application code in two",
    "start": "286880",
    "end": "289199"
  },
  {
    "text": "different clouds well two different",
    "start": "289199",
    "end": "291440"
  },
  {
    "text": "kubernetes clusters within that and um",
    "start": "291440",
    "end": "294880"
  },
  {
    "text": "so yeah we'll just see",
    "start": "294880",
    "end": "296479"
  },
  {
    "text": "um once one of the actions become",
    "start": "296479",
    "end": "298160"
  },
  {
    "text": "unavailable or unhealthy for whatever",
    "start": "298160",
    "end": "300320"
  },
  {
    "text": "reason how does a service uh fail over",
    "start": "300320",
    "end": "302880"
  },
  {
    "text": "to be another uh our healthy service",
    "start": "302880",
    "end": "304720"
  },
  {
    "text": "running in the other cluster",
    "start": "304720",
    "end": "306240"
  },
  {
    "text": "uh but before we jump into our demo i",
    "start": "306240",
    "end": "308320"
  },
  {
    "text": "wanted to",
    "start": "308320",
    "end": "309360"
  },
  {
    "text": "talk a little bit about the architecture",
    "start": "309360",
    "end": "312320"
  },
  {
    "text": "of what a platform looks like when",
    "start": "312320",
    "end": "313840"
  },
  {
    "text": "you're working with uh wysom cloud",
    "start": "313840",
    "end": "316240"
  },
  {
    "text": "so here we",
    "start": "316240",
    "end": "318240"
  },
  {
    "text": "have two clouds",
    "start": "318240",
    "end": "319759"
  },
  {
    "text": "two cloud providers so you have gcp and",
    "start": "319759",
    "end": "321759"
  },
  {
    "text": "aws and within that you have this dotted",
    "start": "321759",
    "end": "324479"
  },
  {
    "text": "line or dotted container",
    "start": "324479",
    "end": "326880"
  },
  {
    "text": "which is essentially our pod",
    "start": "326880",
    "end": "328960"
  },
  {
    "text": "so it's running a kubernetes and it has",
    "start": "328960",
    "end": "330400"
  },
  {
    "text": "a pod um and a server",
    "start": "330400",
    "end": "332639"
  },
  {
    "text": "so we have a wasm cloud host runtime",
    "start": "332639",
    "end": "335360"
  },
  {
    "text": "running as a pod and on which you can",
    "start": "335360",
    "end": "338080"
  },
  {
    "text": "schedule your wasn't workloads and be",
    "start": "338080",
    "end": "339840"
  },
  {
    "text": "able to scale them",
    "start": "339840",
    "end": "341120"
  },
  {
    "text": "and obviously with you leveraging the",
    "start": "341120",
    "end": "342800"
  },
  {
    "text": "kubernetes um capabilities you're able",
    "start": "342800",
    "end": "345360"
  },
  {
    "text": "to scale your parts as well",
    "start": "345360",
    "end": "347120"
  },
  {
    "text": "so that's what our platform looks like",
    "start": "347120",
    "end": "348560"
  },
  {
    "text": "um but when you're working with ryzen",
    "start": "348560",
    "end": "350080"
  },
  {
    "text": "cloud host runtime but for this uh group",
    "start": "350080",
    "end": "353520"
  },
  {
    "text": "of concepts um",
    "start": "353520",
    "end": "355919"
  },
  {
    "text": "the architecture that we went with was",
    "start": "355919",
    "end": "358000"
  },
  {
    "text": "um having a uh a pod a business card uh",
    "start": "358000",
    "end": "362080"
  },
  {
    "text": "host runtime pod each for a type of",
    "start": "362080",
    "end": "364960"
  },
  {
    "text": "workload that we wanted to run",
    "start": "364960",
    "end": "366720"
  },
  {
    "text": "so as you can see",
    "start": "366720",
    "end": "368479"
  },
  {
    "text": "our ryzen cloud part b is running our",
    "start": "368479",
    "end": "370960"
  },
  {
    "text": "business logic",
    "start": "370960",
    "end": "372639"
  },
  {
    "text": "and uh respectively our cloud part a and",
    "start": "372639",
    "end": "375440"
  },
  {
    "text": "c",
    "start": "375440",
    "end": "376240"
  },
  {
    "text": "are running our",
    "start": "376240",
    "end": "377919"
  },
  {
    "text": "capability providers um",
    "start": "377919",
    "end": "380560"
  },
  {
    "text": "so it just becomes easier for us to",
    "start": "380560",
    "end": "382319"
  },
  {
    "text": "identify and also simulate outage when",
    "start": "382319",
    "end": "384800"
  },
  {
    "text": "we have this kind of architecture so",
    "start": "384800",
    "end": "386639"
  },
  {
    "text": "that's why we went with something like",
    "start": "386639",
    "end": "387680"
  },
  {
    "text": "this",
    "start": "387680",
    "end": "388720"
  },
  {
    "text": "um so yeah so just talking about our",
    "start": "388720",
    "end": "390880"
  },
  {
    "text": "business logic so we have our to-do",
    "start": "390880",
    "end": "392960"
  },
  {
    "text": "application so it's just another to-do",
    "start": "392960",
    "end": "394960"
  },
  {
    "text": "application uh that also supports all",
    "start": "394960",
    "end": "397520"
  },
  {
    "text": "the crud operations um",
    "start": "397520",
    "end": "399919"
  },
  {
    "text": "and it",
    "start": "399919",
    "end": "401360"
  },
  {
    "text": "complies with our buddha to do back-end",
    "start": "401360",
    "end": "403840"
  },
  {
    "text": "spec",
    "start": "403840",
    "end": "404720"
  },
  {
    "text": "so we have a to-do uh actor running in",
    "start": "404720",
    "end": "407280"
  },
  {
    "text": "both of the clouds and then we want to",
    "start": "407280",
    "end": "409520"
  },
  {
    "text": "be able to make a request to those 2d",
    "start": "409520",
    "end": "411840"
  },
  {
    "text": "reactors running into the clouds so we",
    "start": "411840",
    "end": "414000"
  },
  {
    "text": "have an external ip",
    "start": "414000",
    "end": "415599"
  },
  {
    "text": "that's why we have",
    "start": "415599",
    "end": "416880"
  },
  {
    "text": "two http capability providers as well",
    "start": "416880",
    "end": "419919"
  },
  {
    "text": "sorry one each and so yeah you can make",
    "start": "419919",
    "end": "423120"
  },
  {
    "text": "a request here to director",
    "start": "423120",
    "end": "425759"
  },
  {
    "text": "um so yeah and then we have just one uh",
    "start": "425759",
    "end": "428880"
  },
  {
    "text": "database this was to represent our",
    "start": "428880",
    "end": "432000"
  },
  {
    "text": "clients mainframe system so where they",
    "start": "432000",
    "end": "433680"
  },
  {
    "text": "have only one database then everything",
    "start": "433680",
    "end": "435199"
  },
  {
    "text": "is just built on top of that",
    "start": "435199",
    "end": "437120"
  },
  {
    "text": "um so yeah",
    "start": "437120",
    "end": "438319"
  },
  {
    "text": "and uh",
    "start": "438319",
    "end": "440000"
  },
  {
    "text": "so to end just just something to note",
    "start": "440000",
    "end": "442800"
  },
  {
    "text": "that out the um so we have a business rj",
    "start": "442800",
    "end": "445759"
  },
  {
    "text": "uh but the capability providers are",
    "start": "445759",
    "end": "447840"
  },
  {
    "text": "essentially the i o layers of the onion",
    "start": "447840",
    "end": "450639"
  },
  {
    "text": "that help you interact or you help your",
    "start": "450639",
    "end": "452080"
  },
  {
    "text": "services to interact with the outside",
    "start": "452080",
    "end": "453440"
  },
  {
    "text": "world",
    "start": "453440",
    "end": "455360"
  },
  {
    "text": "but how does this all networking work",
    "start": "455360",
    "end": "457520"
  },
  {
    "text": "inside the cluster so i'm just going to",
    "start": "457520",
    "end": "459520"
  },
  {
    "text": "zoom this out so it's visible",
    "start": "459520",
    "end": "462880"
  },
  {
    "text": "so we have our pods running in both of",
    "start": "462880",
    "end": "465280"
  },
  {
    "text": "the clusters but they communicate with",
    "start": "465280",
    "end": "467120"
  },
  {
    "text": "each other over mats",
    "start": "467120",
    "end": "469039"
  },
  {
    "text": "so nats is essentially you have your",
    "start": "469039",
    "end": "470800"
  },
  {
    "text": "topics and services subscribe to those",
    "start": "470800",
    "end": "472800"
  },
  {
    "text": "topics so they have messages uh being",
    "start": "472800",
    "end": "475039"
  },
  {
    "text": "passed through",
    "start": "475039",
    "end": "476080"
  },
  {
    "text": "um and when um and uh in a scenario",
    "start": "476080",
    "end": "480000"
  },
  {
    "text": "where our service wants to talk across",
    "start": "480000",
    "end": "481759"
  },
  {
    "text": "to the different cluster",
    "start": "481759",
    "end": "483759"
  },
  {
    "text": "we are using ngs that essentially",
    "start": "483759",
    "end": "486639"
  },
  {
    "text": "um sits right between both of our",
    "start": "486639",
    "end": "489520"
  },
  {
    "text": "clusters so uh ngs is that's a global",
    "start": "489520",
    "end": "493120"
  },
  {
    "text": "service",
    "start": "493120",
    "end": "495520"
  },
  {
    "text": "so",
    "start": "495840",
    "end": "496800"
  },
  {
    "text": "nasa is essentially another",
    "start": "496800",
    "end": "499039"
  },
  {
    "text": "cluster that you have working as a",
    "start": "499039",
    "end": "500879"
  },
  {
    "text": "acting as a gateway between your",
    "start": "500879",
    "end": "502240"
  },
  {
    "text": "clusters so our message is propagated up",
    "start": "502240",
    "end": "504479"
  },
  {
    "text": "and then down to the other cluster",
    "start": "504479",
    "end": "506720"
  },
  {
    "text": "so now is the fun time for uh demo time",
    "start": "506720",
    "end": "510319"
  },
  {
    "text": "so",
    "start": "510319",
    "end": "511039"
  },
  {
    "text": "so we have our terminal here which is a",
    "start": "511039",
    "end": "514159"
  },
  {
    "text": "lot of",
    "start": "514159",
    "end": "515039"
  },
  {
    "text": "terminal windows um so the reason we",
    "start": "515039",
    "end": "517599"
  },
  {
    "text": "have this kind of setup is because um if",
    "start": "517599",
    "end": "520080"
  },
  {
    "text": "you go back to this logical",
    "start": "520080",
    "end": "521518"
  },
  {
    "text": "representation here uh that i showed you",
    "start": "521519",
    "end": "524000"
  },
  {
    "text": "earlier",
    "start": "524000",
    "end": "524959"
  },
  {
    "text": "so on the left hand side we showed all",
    "start": "524959",
    "end": "527279"
  },
  {
    "text": "the gcp stuff and on the right hand side",
    "start": "527279",
    "end": "529040"
  },
  {
    "text": "we have all the aws so that's the just",
    "start": "529040",
    "end": "531360"
  },
  {
    "text": "wanted to replicate that in in terms of",
    "start": "531360",
    "end": "533839"
  },
  {
    "text": "terminal so just easier to visualize in",
    "start": "533839",
    "end": "536240"
  },
  {
    "text": "this demo",
    "start": "536240",
    "end": "538080"
  },
  {
    "text": "um so yeah so similarly we're going to",
    "start": "538080",
    "end": "540160"
  },
  {
    "text": "use uh two",
    "start": "540160",
    "end": "541760"
  },
  {
    "text": "two",
    "start": "541760",
    "end": "542560"
  },
  {
    "text": "top windows here as our um",
    "start": "542560",
    "end": "545760"
  },
  {
    "text": "clients so i'm just going to be using",
    "start": "545760",
    "end": "547120"
  },
  {
    "text": "curl so it's like curl gcp",
    "start": "547120",
    "end": "549760"
  },
  {
    "text": "and hull to aws",
    "start": "549760",
    "end": "552880"
  },
  {
    "text": "and these two",
    "start": "552880",
    "end": "554640"
  },
  {
    "text": "windows here",
    "start": "554640",
    "end": "556399"
  },
  {
    "text": "i'm going to be using",
    "start": "556399",
    "end": "558399"
  },
  {
    "text": "stern to",
    "start": "558399",
    "end": "560880"
  },
  {
    "text": "pull the logs from the um to do actor",
    "start": "560880",
    "end": "563360"
  },
  {
    "text": "running in gcp so as you can see the",
    "start": "563360",
    "end": "565440"
  },
  {
    "text": "context is gcp running two director and",
    "start": "565440",
    "end": "568399"
  },
  {
    "text": "excluding some of the noise that we are",
    "start": "568399",
    "end": "570160"
  },
  {
    "text": "getting from our logs from the health",
    "start": "570160",
    "end": "572080"
  },
  {
    "text": "checks and stuff so just it just makes",
    "start": "572080",
    "end": "574160"
  },
  {
    "text": "it easier for us to identify the logs we",
    "start": "574160",
    "end": "576640"
  },
  {
    "text": "care about so i'm just going to run that",
    "start": "576640",
    "end": "578800"
  },
  {
    "text": "and now we're fetching all the logs we",
    "start": "578800",
    "end": "580880"
  },
  {
    "text": "are pulling all the logs and similarly i",
    "start": "580880",
    "end": "582640"
  },
  {
    "text": "want to do the same for aws so",
    "start": "582640",
    "end": "585760"
  },
  {
    "text": "so in the middle uh windows we are",
    "start": "585760",
    "end": "587760"
  },
  {
    "text": "listening to parts on the left we listen",
    "start": "587760",
    "end": "589360"
  },
  {
    "text": "to actor running for gtp on the right we",
    "start": "589360",
    "end": "591760"
  },
  {
    "text": "have our actor running aws",
    "start": "591760",
    "end": "594480"
  },
  {
    "text": "and at the bottom um we have our ops",
    "start": "594480",
    "end": "597519"
  },
  {
    "text": "windows and this is where i'll be doing",
    "start": "597519",
    "end": "599440"
  },
  {
    "text": "some cube cuddle fun and pretending to",
    "start": "599440",
    "end": "601680"
  },
  {
    "text": "be a chaos monkey so i'm going to be",
    "start": "601680",
    "end": "603440"
  },
  {
    "text": "taking down actors and bringing them",
    "start": "603440",
    "end": "605360"
  },
  {
    "text": "back up",
    "start": "605360",
    "end": "606320"
  },
  {
    "text": "um so yeah so",
    "start": "606320",
    "end": "608399"
  },
  {
    "text": "this is the this is the setup and",
    "start": "608399",
    "end": "609839"
  },
  {
    "text": "hopefully uh it's easy enough to follow",
    "start": "609839",
    "end": "612480"
  },
  {
    "text": "um so if i curl",
    "start": "612480",
    "end": "614560"
  },
  {
    "text": "here so you can see uh we're getting",
    "start": "614560",
    "end": "616800"
  },
  {
    "text": "some logs from the actor running in gcp",
    "start": "616800",
    "end": "619519"
  },
  {
    "text": "and if i make a call across aws we are",
    "start": "619519",
    "end": "622079"
  },
  {
    "text": "seeing some logs from actor running in",
    "start": "622079",
    "end": "623839"
  },
  {
    "text": "aws",
    "start": "623839",
    "end": "624880"
  },
  {
    "text": "but we don't have any to-do's at the",
    "start": "624880",
    "end": "626720"
  },
  {
    "text": "moment so we might as well go ahead and",
    "start": "626720",
    "end": "628959"
  },
  {
    "text": "create one",
    "start": "628959",
    "end": "630480"
  },
  {
    "text": "so we can create uh",
    "start": "630480",
    "end": "633040"
  },
  {
    "text": "to do that goes to our gcp service",
    "start": "633040",
    "end": "637120"
  },
  {
    "text": "and then we can make it to dude",
    "start": "637120",
    "end": "639839"
  },
  {
    "text": "saying something hello to gcp just easy",
    "start": "639839",
    "end": "641760"
  },
  {
    "text": "to identify so we make a request and our",
    "start": "641760",
    "end": "644959"
  },
  {
    "text": "actor running in gcp",
    "start": "644959",
    "end": "647200"
  },
  {
    "text": "uh handles our request and similarly um",
    "start": "647200",
    "end": "651440"
  },
  {
    "text": "we can actually let's just curl that to",
    "start": "651440",
    "end": "654160"
  },
  {
    "text": "show that how",
    "start": "654160",
    "end": "655920"
  },
  {
    "text": "our actor running in aws is still able",
    "start": "655920",
    "end": "658560"
  },
  {
    "text": "to fetch the data from redis running in",
    "start": "658560",
    "end": "661279"
  },
  {
    "text": "gcp so it has the consistency already so",
    "start": "661279",
    "end": "663519"
  },
  {
    "text": "it can see the data and that was quick",
    "start": "663519",
    "end": "666000"
  },
  {
    "text": "um so i'm going to go ahead and just",
    "start": "666000",
    "end": "668640"
  },
  {
    "text": "create a to do from aws as well",
    "start": "668640",
    "end": "672079"
  },
  {
    "text": "just we have two",
    "start": "672079",
    "end": "673600"
  },
  {
    "text": "easily identifiable to-do's that we",
    "start": "673600",
    "end": "675760"
  },
  {
    "text": "created so i'm just going to call this",
    "start": "675760",
    "end": "677760"
  },
  {
    "text": "hello to aws and before i do that i",
    "start": "677760",
    "end": "680399"
  },
  {
    "text": "should clear these consoles",
    "start": "680399",
    "end": "682560"
  },
  {
    "text": "so i'm going to go ahead and create that",
    "start": "682560",
    "end": "684720"
  },
  {
    "text": "so yeah as expected our request to aws",
    "start": "684720",
    "end": "687760"
  },
  {
    "text": "is handled by the actor running in aws",
    "start": "687760",
    "end": "690959"
  },
  {
    "text": "and now i'm just going to make a",
    "start": "690959",
    "end": "692959"
  },
  {
    "text": "get request again and we should be able",
    "start": "692959",
    "end": "695120"
  },
  {
    "text": "to see",
    "start": "695120",
    "end": "696560"
  },
  {
    "text": "uh the two the two two to-do's that we",
    "start": "696560",
    "end": "699120"
  },
  {
    "text": "just created and they're already here so",
    "start": "699120",
    "end": "701680"
  },
  {
    "text": "we can see our hello to gcp and hello to",
    "start": "701680",
    "end": "704000"
  },
  {
    "text": "aws",
    "start": "704000",
    "end": "705040"
  },
  {
    "text": "and similarly here as well so we can see",
    "start": "705040",
    "end": "706640"
  },
  {
    "text": "that",
    "start": "706640",
    "end": "707440"
  },
  {
    "text": "uh both of the access when we call from",
    "start": "707440",
    "end": "710160"
  },
  {
    "text": "gcp",
    "start": "710160",
    "end": "711680"
  },
  {
    "text": "so what i'm gonna do next is um as i",
    "start": "711680",
    "end": "714639"
  },
  {
    "text": "said i'm gonna be a chaos monkey and i'm",
    "start": "714639",
    "end": "716800"
  },
  {
    "text": "gonna go ahead and delete the actor",
    "start": "716800",
    "end": "719600"
  },
  {
    "text": "running in um",
    "start": "719600",
    "end": "722160"
  },
  {
    "text": "sorry uh so the actor running in in gcp",
    "start": "722160",
    "end": "725839"
  },
  {
    "text": "so this will be",
    "start": "725839",
    "end": "727600"
  },
  {
    "text": "um",
    "start": "727600",
    "end": "728480"
  },
  {
    "text": "the business logic that we have that",
    "start": "728480",
    "end": "730480"
  },
  {
    "text": "handles our incoming requests that we",
    "start": "730480",
    "end": "731920"
  },
  {
    "text": "want to",
    "start": "731920",
    "end": "732880"
  },
  {
    "text": "create to do or get to do",
    "start": "732880",
    "end": "735519"
  },
  {
    "text": "so",
    "start": "735519",
    "end": "736480"
  },
  {
    "text": "what what's what have we actually done",
    "start": "736480",
    "end": "738880"
  },
  {
    "text": "so we",
    "start": "738880",
    "end": "740079"
  },
  {
    "text": "we initially we saw the happy path so we",
    "start": "740079",
    "end": "742560"
  },
  {
    "text": "saw the solid green lines where we made",
    "start": "742560",
    "end": "745040"
  },
  {
    "text": "the request to the gcp and it did some",
    "start": "745040",
    "end": "747440"
  },
  {
    "text": "work and responded back up and then we",
    "start": "747440",
    "end": "749360"
  },
  {
    "text": "did the same work with aws where we see",
    "start": "749360",
    "end": "751839"
  },
  {
    "text": "the solid green lines have a path",
    "start": "751839",
    "end": "754560"
  },
  {
    "text": "where the request is made to the",
    "start": "754560",
    "end": "755920"
  },
  {
    "text": "director it goes across to the redis",
    "start": "755920",
    "end": "758560"
  },
  {
    "text": "database in gcp",
    "start": "758560",
    "end": "760560"
  },
  {
    "text": "does the work and then responds back to",
    "start": "760560",
    "end": "762320"
  },
  {
    "text": "the client so now by deleting the actor",
    "start": "762320",
    "end": "765440"
  },
  {
    "text": "um",
    "start": "765440",
    "end": "766399"
  },
  {
    "text": "we've done something uh",
    "start": "766399",
    "end": "768320"
  },
  {
    "text": "that's represented in this diagram so",
    "start": "768320",
    "end": "770320"
  },
  {
    "text": "we've deleted the actor in running in",
    "start": "770320",
    "end": "772720"
  },
  {
    "text": "gtp",
    "start": "772720",
    "end": "773920"
  },
  {
    "text": "um and we can see what let's see what",
    "start": "773920",
    "end": "776639"
  },
  {
    "text": "happens when when the actor uh has been",
    "start": "776639",
    "end": "778720"
  },
  {
    "text": "removed um so that actor should be",
    "start": "778720",
    "end": "781680"
  },
  {
    "text": "deleted so what we can do is",
    "start": "781680",
    "end": "784000"
  },
  {
    "text": "get the pods from",
    "start": "784000",
    "end": "787600"
  },
  {
    "text": "gcp",
    "start": "787600",
    "end": "788800"
  },
  {
    "text": "and cw the actor",
    "start": "788800",
    "end": "791279"
  },
  {
    "text": "has been removed and we only have http",
    "start": "791279",
    "end": "793839"
  },
  {
    "text": "capability redis capability in the redis",
    "start": "793839",
    "end": "796000"
  },
  {
    "text": "itself",
    "start": "796000",
    "end": "797120"
  },
  {
    "text": "and if we just do the same thing to aws",
    "start": "797120",
    "end": "800480"
  },
  {
    "text": "and just get the parts that are",
    "start": "800480",
    "end": "802000"
  },
  {
    "text": "available right now",
    "start": "802000",
    "end": "803920"
  },
  {
    "text": "um and we should have acta and hdb",
    "start": "803920",
    "end": "807120"
  },
  {
    "text": "capability both",
    "start": "807120",
    "end": "808639"
  },
  {
    "text": "available in aws so we have one actor",
    "start": "808639",
    "end": "811519"
  },
  {
    "text": "healthy but it's a different cluster",
    "start": "811519",
    "end": "813760"
  },
  {
    "text": "so let's see how that works for us",
    "start": "813760",
    "end": "816000"
  },
  {
    "text": "um",
    "start": "816000",
    "end": "818160"
  },
  {
    "text": "so if we make a request to gcp",
    "start": "818160",
    "end": "820800"
  },
  {
    "text": "um in theory our healthy actor should",
    "start": "820800",
    "end": "823360"
  },
  {
    "text": "pick up that request and work with it",
    "start": "823360",
    "end": "824959"
  },
  {
    "text": "and you can see that in the logs now um",
    "start": "824959",
    "end": "828560"
  },
  {
    "text": "and",
    "start": "828560",
    "end": "829360"
  },
  {
    "text": "yeah so just one more time so we can",
    "start": "829360",
    "end": "831440"
  },
  {
    "text": "make a request to gcp and it's worked",
    "start": "831440",
    "end": "834000"
  },
  {
    "text": "and the work is done by the actor the",
    "start": "834000",
    "end": "835600"
  },
  {
    "text": "healthy actor running in aws in a",
    "start": "835600",
    "end": "837120"
  },
  {
    "text": "different cluster",
    "start": "837120",
    "end": "838399"
  },
  {
    "text": "and when we make a request to aws",
    "start": "838399",
    "end": "841120"
  },
  {
    "text": "um it should just behave the same as it",
    "start": "841120",
    "end": "843519"
  },
  {
    "text": "should",
    "start": "843519",
    "end": "844480"
  },
  {
    "text": "because it has a local actor to do the",
    "start": "844480",
    "end": "846160"
  },
  {
    "text": "work",
    "start": "846160",
    "end": "847839"
  },
  {
    "text": "um cool",
    "start": "847839",
    "end": "849279"
  },
  {
    "text": "and for",
    "start": "849279",
    "end": "850959"
  },
  {
    "text": "so now i'll just bring that actor",
    "start": "850959",
    "end": "853760"
  },
  {
    "text": "back up so just we can see how the",
    "start": "853760",
    "end": "856399"
  },
  {
    "text": "cluster recovers",
    "start": "856399",
    "end": "858160"
  },
  {
    "text": "um so",
    "start": "858160",
    "end": "859760"
  },
  {
    "text": "now we can see the logs coming through",
    "start": "859760",
    "end": "861279"
  },
  {
    "text": "so we have always some um more pods",
    "start": "861279",
    "end": "863040"
  },
  {
    "text": "coming up our",
    "start": "863040",
    "end": "864320"
  },
  {
    "text": "cloud host is coming back up as well",
    "start": "864320",
    "end": "867120"
  },
  {
    "text": "and we just can we can quickly go back",
    "start": "867120",
    "end": "869360"
  },
  {
    "text": "to the diagram here",
    "start": "869360",
    "end": "871040"
  },
  {
    "text": "so what we just witnessed was i took",
    "start": "871040",
    "end": "873120"
  },
  {
    "text": "down the actor running in gcp",
    "start": "873120",
    "end": "876399"
  },
  {
    "text": "which made our service to fall onto the",
    "start": "876399",
    "end": "879440"
  },
  {
    "text": "unexpected path or the unhappy path",
    "start": "879440",
    "end": "881680"
  },
  {
    "text": "represented by the dotted line so it",
    "start": "881680",
    "end": "883600"
  },
  {
    "text": "went across to the healthy",
    "start": "883600",
    "end": "885760"
  },
  {
    "text": "to the actor running",
    "start": "885760",
    "end": "887279"
  },
  {
    "text": "in a completely different cluster",
    "start": "887279",
    "end": "888959"
  },
  {
    "text": "um did the work",
    "start": "888959",
    "end": "890480"
  },
  {
    "text": "by querying by making the request the",
    "start": "890480",
    "end": "892560"
  },
  {
    "text": "database that's all back to the same",
    "start": "892560",
    "end": "894639"
  },
  {
    "text": "class that worker is coming from and do",
    "start": "894639",
    "end": "896560"
  },
  {
    "text": "the work and um",
    "start": "896560",
    "end": "898399"
  },
  {
    "text": "uh yeah resolving the requests and",
    "start": "898399",
    "end": "900320"
  },
  {
    "text": "success",
    "start": "900320",
    "end": "901360"
  },
  {
    "text": "um so what we've done now is uh just now",
    "start": "901360",
    "end": "904720"
  },
  {
    "text": "is we bring back the service um of",
    "start": "904720",
    "end": "906720"
  },
  {
    "text": "recovering the service back up which",
    "start": "906720",
    "end": "908720"
  },
  {
    "text": "means we are back to where we started",
    "start": "908720",
    "end": "910320"
  },
  {
    "text": "with the full service uh oh both were",
    "start": "910320",
    "end": "912880"
  },
  {
    "text": "two actors being healthy and we should",
    "start": "912880",
    "end": "914480"
  },
  {
    "text": "go back to",
    "start": "914480",
    "end": "915600"
  },
  {
    "text": "um how the things were when we started",
    "start": "915600",
    "end": "918000"
  },
  {
    "text": "so if i make a request now",
    "start": "918000",
    "end": "920079"
  },
  {
    "text": "to gcp that we can see our actors back",
    "start": "920079",
    "end": "923040"
  },
  {
    "text": "up and can then handle the request again",
    "start": "923040",
    "end": "925920"
  },
  {
    "text": "and we can do a similar thing um",
    "start": "925920",
    "end": "929600"
  },
  {
    "text": "sorry actually before i move on to",
    "start": "929600",
    "end": "932000"
  },
  {
    "text": "move on like oh sorry that's aws um",
    "start": "932000",
    "end": "934959"
  },
  {
    "text": "before i move on i just want to show you",
    "start": "934959",
    "end": "936399"
  },
  {
    "text": "the actor is back up so we have an",
    "start": "936399",
    "end": "938639"
  },
  {
    "text": "access part running previously we didn't",
    "start": "938639",
    "end": "940639"
  },
  {
    "text": "have that and now it's all back up and",
    "start": "940639",
    "end": "943199"
  },
  {
    "text": "that's why we gained a successful",
    "start": "943199",
    "end": "944399"
  },
  {
    "text": "response and similarly we can do the",
    "start": "944399",
    "end": "946560"
  },
  {
    "text": "same thing as we can see on the on",
    "start": "946560",
    "end": "949680"
  },
  {
    "text": "on aws that we still have lecture",
    "start": "949680",
    "end": "951839"
  },
  {
    "text": "available so what we'll do is delete",
    "start": "951839",
    "end": "954399"
  },
  {
    "text": "that actually as well",
    "start": "954399",
    "end": "956240"
  },
  {
    "text": "just so um",
    "start": "956240",
    "end": "958160"
  },
  {
    "text": "we can see both",
    "start": "958160",
    "end": "960079"
  },
  {
    "text": "clusters",
    "start": "960079",
    "end": "962480"
  },
  {
    "text": "how do both of the clusters handle the",
    "start": "962480",
    "end": "964000"
  },
  {
    "text": "failover so i'll go ahead and delete",
    "start": "964000",
    "end": "966240"
  },
  {
    "text": "that and what essentially we're doing",
    "start": "966240",
    "end": "968399"
  },
  {
    "text": "now is um",
    "start": "968399",
    "end": "970480"
  },
  {
    "text": "is doing something like this um so on",
    "start": "970480",
    "end": "972560"
  },
  {
    "text": "aws the only thing we'll be left with is",
    "start": "972560",
    "end": "975360"
  },
  {
    "text": "the http capability provider",
    "start": "975360",
    "end": "978000"
  },
  {
    "text": "and that's it and we'll see how that",
    "start": "978000",
    "end": "980000"
  },
  {
    "text": "kind of works out for us um in a minute",
    "start": "980000",
    "end": "982480"
  },
  {
    "text": "so what i'll do is i'm just gonna",
    "start": "982480",
    "end": "985360"
  },
  {
    "text": "wait for the pod to terminate",
    "start": "985360",
    "end": "988480"
  },
  {
    "text": "um just we're gonna do a watch command",
    "start": "988480",
    "end": "990240"
  },
  {
    "text": "on here so we can see the part is",
    "start": "990240",
    "end": "992399"
  },
  {
    "text": "terminating so it's essentially doing is",
    "start": "992399",
    "end": "994880"
  },
  {
    "text": "just getting rid of all the um about our",
    "start": "994880",
    "end": "997519"
  },
  {
    "text": "cloud host runtime with all the actives",
    "start": "997519",
    "end": "999519"
  },
  {
    "text": "that are scheduled on it and essentially",
    "start": "999519",
    "end": "1001199"
  },
  {
    "text": "that just should just leave us",
    "start": "1001199",
    "end": "1003279"
  },
  {
    "text": "with",
    "start": "1003279",
    "end": "1004560"
  },
  {
    "text": "just",
    "start": "1004560",
    "end": "1005759"
  },
  {
    "text": "one service which is just one part which",
    "start": "1005759",
    "end": "1007519"
  },
  {
    "text": "is http capability and that's all",
    "start": "1007519",
    "end": "1010399"
  },
  {
    "text": "so now if you make a request",
    "start": "1010399",
    "end": "1012399"
  },
  {
    "text": "um to aws it still works and the healthy",
    "start": "1012399",
    "end": "1016000"
  },
  {
    "text": "service running in gcp",
    "start": "1016000",
    "end": "1017920"
  },
  {
    "text": "um is just handling our work",
    "start": "1017920",
    "end": "1020560"
  },
  {
    "text": "even though we have nothing",
    "start": "1020560",
    "end": "1022639"
  },
  {
    "text": "here see we have nothing other than http",
    "start": "1022639",
    "end": "1025038"
  },
  {
    "text": "capability that's all there's no actors",
    "start": "1025039",
    "end": "1027360"
  },
  {
    "text": "that can do the business logic there's",
    "start": "1027360",
    "end": "1028400"
  },
  {
    "text": "not even a database in the aws cluster",
    "start": "1028400",
    "end": "1030558"
  },
  {
    "text": "it still can handle",
    "start": "1030559",
    "end": "1032400"
  },
  {
    "text": "uh the incoming requests successfully",
    "start": "1032400",
    "end": "1035678"
  },
  {
    "text": "so",
    "start": "1035679",
    "end": "1036480"
  },
  {
    "text": "yeah so i'm just going to go ahead and",
    "start": "1036480",
    "end": "1038079"
  },
  {
    "text": "bring that service back up again and we",
    "start": "1038079",
    "end": "1041120"
  },
  {
    "text": "can see it will",
    "start": "1041120",
    "end": "1042880"
  },
  {
    "text": "recover",
    "start": "1042880",
    "end": "1044240"
  },
  {
    "text": "similarly as we saw previously",
    "start": "1044240",
    "end": "1046640"
  },
  {
    "text": "and um so yeah the um you can already",
    "start": "1046640",
    "end": "1049600"
  },
  {
    "text": "see the logs that the pod is coming back",
    "start": "1049600",
    "end": "1051120"
  },
  {
    "text": "up and what we'll end up with is back to",
    "start": "1051120",
    "end": "1054720"
  },
  {
    "text": "where we started again with both of our",
    "start": "1054720",
    "end": "1056559"
  },
  {
    "text": "actors um in place and our",
    "start": "1056559",
    "end": "1060240"
  },
  {
    "text": "so yeah we can see the action module has",
    "start": "1060240",
    "end": "1062240"
  },
  {
    "text": "started so i want to click go ahead and",
    "start": "1062240",
    "end": "1063520"
  },
  {
    "text": "clear and just for one last time you can",
    "start": "1063520",
    "end": "1066000"
  },
  {
    "text": "see the recovery",
    "start": "1066000",
    "end": "1067440"
  },
  {
    "text": "um of our service",
    "start": "1067440",
    "end": "1069600"
  },
  {
    "text": "back to our site so we can see the logs",
    "start": "1069600",
    "end": "1071520"
  },
  {
    "text": "coming from the respectful uh",
    "start": "1071520",
    "end": "1073440"
  },
  {
    "text": "respectively from the clusters they",
    "start": "1073440",
    "end": "1074799"
  },
  {
    "text": "belong from belong to",
    "start": "1074799",
    "end": "1077440"
  },
  {
    "text": "um so yeah what we saw essentially is um",
    "start": "1077440",
    "end": "1080559"
  },
  {
    "text": "our service is running in two clusters",
    "start": "1080559",
    "end": "1083200"
  },
  {
    "text": "um or axis running in two different",
    "start": "1083200",
    "end": "1085520"
  },
  {
    "text": "western cloud",
    "start": "1085520",
    "end": "1087840"
  },
  {
    "text": "runtimes and two different kubernetes",
    "start": "1087840",
    "end": "1090160"
  },
  {
    "text": "cluster",
    "start": "1090160",
    "end": "1091440"
  },
  {
    "text": "and",
    "start": "1091440",
    "end": "1092240"
  },
  {
    "text": "in a two different uh major cloud",
    "start": "1092240",
    "end": "1094080"
  },
  {
    "text": "providers and we can see our servers",
    "start": "1094080",
    "end": "1096160"
  },
  {
    "text": "just seamlessly failing over and in",
    "start": "1096160",
    "end": "1098880"
  },
  {
    "text": "following the unexpected path and just",
    "start": "1098880",
    "end": "1101200"
  },
  {
    "text": "recovering and and yeah recovering as it",
    "start": "1101200",
    "end": "1103679"
  },
  {
    "text": "comes back up um automatically so yeah",
    "start": "1103679",
    "end": "1106720"
  },
  {
    "text": "that's what i had",
    "start": "1106720",
    "end": "1108000"
  },
  {
    "text": "to show and now i'm going to hand it all",
    "start": "1108000",
    "end": "1109600"
  },
  {
    "text": "to street",
    "start": "1109600",
    "end": "1111679"
  },
  {
    "text": "thanks aisha that was absolutely amazing",
    "start": "1111679",
    "end": "1115520"
  },
  {
    "text": "um",
    "start": "1115520",
    "end": "1116400"
  },
  {
    "text": "i think um",
    "start": "1116400",
    "end": "1118720"
  },
  {
    "text": "this is the first time i've seen",
    "start": "1118720",
    "end": "1119840"
  },
  {
    "text": "anything",
    "start": "1119840",
    "end": "1120720"
  },
  {
    "text": "like this really where you can have a",
    "start": "1120720",
    "end": "1122559"
  },
  {
    "text": "true multi-location",
    "start": "1122559",
    "end": "1124480"
  },
  {
    "text": "cluster spread across",
    "start": "1124480",
    "end": "1126799"
  },
  {
    "text": "geographic locations across the world",
    "start": "1126799",
    "end": "1130240"
  },
  {
    "text": "and it's made possible because of",
    "start": "1130240",
    "end": "1131760"
  },
  {
    "text": "webassembly for lightweight portable",
    "start": "1131760",
    "end": "1133440"
  },
  {
    "text": "workloads wasn't cloud for the",
    "start": "1133440",
    "end": "1135120"
  },
  {
    "text": "application application runtime and",
    "start": "1135120",
    "end": "1137200"
  },
  {
    "text": "that's for location independence",
    "start": "1137200",
    "end": "1139200"
  },
  {
    "text": "i'm absolutely convinced that in the",
    "start": "1139200",
    "end": "1140400"
  },
  {
    "text": "next few years or maybe even months",
    "start": "1140400",
    "end": "1142240"
  },
  {
    "text": "server side webassembly runtimes will",
    "start": "1142240",
    "end": "1143760"
  },
  {
    "text": "make significant inroads into platform",
    "start": "1143760",
    "end": "1145760"
  },
  {
    "text": "design subtly influencing our software",
    "start": "1145760",
    "end": "1148400"
  },
  {
    "text": "architecture on the way and i say this",
    "start": "1148400",
    "end": "1150000"
  },
  {
    "text": "because there's another thing happening",
    "start": "1150000",
    "end": "1151520"
  },
  {
    "text": "here",
    "start": "1151520",
    "end": "1153360"
  },
  {
    "text": "um microservices that today are",
    "start": "1153360",
    "end": "1155280"
  },
  {
    "text": "delineated by network boundaries will",
    "start": "1155280",
    "end": "1157280"
  },
  {
    "text": "give way to much smaller lighter act as",
    "start": "1157280",
    "end": "1159679"
  },
  {
    "text": "compiled to web assembly that talk over",
    "start": "1159679",
    "end": "1162559"
  },
  {
    "text": "potentially global messaging backgrounds",
    "start": "1162559",
    "end": "1166160"
  },
  {
    "text": "and importantly they'll be freed from",
    "start": "1166160",
    "end": "1167520"
  },
  {
    "text": "almost all the boilerplate code that",
    "start": "1167520",
    "end": "1168960"
  },
  {
    "text": "sucks up so much of our energy today",
    "start": "1168960",
    "end": "1171200"
  },
  {
    "text": "this is already happening this diagram",
    "start": "1171200",
    "end": "1173360"
  },
  {
    "text": "shows this evolution",
    "start": "1173360",
    "end": "1175760"
  },
  {
    "text": "on top of kubernetes today we can layer",
    "start": "1175760",
    "end": "1178000"
  },
  {
    "text": "sdo or another service mesh to",
    "start": "1178000",
    "end": "1180400"
  },
  {
    "text": "to remove boilerplate for network",
    "start": "1180400",
    "end": "1182799"
  },
  {
    "text": "related",
    "start": "1182799",
    "end": "1183840"
  },
  {
    "text": "concerns such as traffic routing",
    "start": "1183840",
    "end": "1185440"
  },
  {
    "text": "role-based access control etc",
    "start": "1185440",
    "end": "1188160"
  },
  {
    "text": "we can also layer dapper on top of",
    "start": "1188160",
    "end": "1191360"
  },
  {
    "text": "kubernetes",
    "start": "1191360",
    "end": "1193039"
  },
  {
    "text": "which removes boilerplate for",
    "start": "1193039",
    "end": "1194400"
  },
  {
    "text": "application related concerns like",
    "start": "1194400",
    "end": "1195919"
  },
  {
    "text": "talking to a key value store or a",
    "start": "1195919",
    "end": "1197440"
  },
  {
    "text": "database",
    "start": "1197440",
    "end": "1199600"
  },
  {
    "text": "these help us to make our services",
    "start": "1199600",
    "end": "1202400"
  },
  {
    "text": "smaller and more focused",
    "start": "1202400",
    "end": "1204880"
  },
  {
    "text": "excuse me then we have the paradigm",
    "start": "1204880",
    "end": "1207440"
  },
  {
    "text": "shift",
    "start": "1207440",
    "end": "1208720"
  },
  {
    "text": "with webassembly and wasn't cloud this",
    "start": "1208720",
    "end": "1210960"
  },
  {
    "text": "is where our services are now more like",
    "start": "1210960",
    "end": "1212960"
  },
  {
    "text": "actors",
    "start": "1212960",
    "end": "1214400"
  },
  {
    "text": "sitting above the network layer and",
    "start": "1214400",
    "end": "1216240"
  },
  {
    "text": "representing our pure core",
    "start": "1216240",
    "end": "1219200"
  },
  {
    "text": "in the future this may go even further",
    "start": "1219200",
    "end": "1220960"
  },
  {
    "text": "hosting immutable functions for instance",
    "start": "1220960",
    "end": "1223039"
  },
  {
    "text": "on platforms such as the upcoming unison",
    "start": "1223039",
    "end": "1224960"
  },
  {
    "text": "cloud",
    "start": "1224960",
    "end": "1227120"
  },
  {
    "text": "imagine",
    "start": "1227120",
    "end": "1228320"
  },
  {
    "text": "a typical microservice today say it's",
    "start": "1228320",
    "end": "1230320"
  },
  {
    "text": "built with rust",
    "start": "1230320",
    "end": "1231919"
  },
  {
    "text": "good choice and placed in a docker",
    "start": "1231919",
    "end": "1233360"
  },
  {
    "text": "container say www",
    "start": "1233360",
    "end": "1236559"
  },
  {
    "text": "that's an operating system which we need",
    "start": "1236559",
    "end": "1238480"
  },
  {
    "text": "because we need we want to talk to",
    "start": "1238480",
    "end": "1240240"
  },
  {
    "text": "services over http so we need a",
    "start": "1240240",
    "end": "1242640"
  },
  {
    "text": "networking stack",
    "start": "1242640",
    "end": "1244000"
  },
  {
    "text": "and we want to write a log to standard",
    "start": "1244000",
    "end": "1245520"
  },
  {
    "text": "out we also want to talk to a database",
    "start": "1245520",
    "end": "1247600"
  },
  {
    "text": "so we need to pull in all the code to do",
    "start": "1247600",
    "end": "1249200"
  },
  {
    "text": "that",
    "start": "1249200",
    "end": "1250080"
  },
  {
    "text": "now we're quite chunky",
    "start": "1250080",
    "end": "1252880"
  },
  {
    "text": "and we need direct access to a network",
    "start": "1252880",
    "end": "1256159"
  },
  {
    "text": "and routes configured to allow us to",
    "start": "1256159",
    "end": "1257600"
  },
  {
    "text": "reach the database and for our consumers",
    "start": "1257600",
    "end": "1259200"
  },
  {
    "text": "to reach us maybe firewalls or at least",
    "start": "1259200",
    "end": "1261039"
  },
  {
    "text": "security groups and the like",
    "start": "1261039",
    "end": "1263280"
  },
  {
    "text": "we need our team crucially to be devops",
    "start": "1263280",
    "end": "1266640"
  },
  {
    "text": "capable",
    "start": "1266640",
    "end": "1268080"
  },
  {
    "text": "so that we can manage all this stuff",
    "start": "1268080",
    "end": "1270159"
  },
  {
    "text": "and before we know it we've spent a lot",
    "start": "1270159",
    "end": "1272000"
  },
  {
    "text": "of time not working on our core business",
    "start": "1272000",
    "end": "1274840"
  },
  {
    "text": "value",
    "start": "1274840",
    "end": "1276559"
  },
  {
    "text": "if we",
    "start": "1276559",
    "end": "1277440"
  },
  {
    "text": "visualize the",
    "start": "1277440",
    "end": "1278799"
  },
  {
    "text": "onion architecture or ports and adapters",
    "start": "1278799",
    "end": "1282000"
  },
  {
    "text": "or hexagonal architecture or clean",
    "start": "1282000",
    "end": "1284000"
  },
  {
    "text": "architecture or whatever we want to call",
    "start": "1284000",
    "end": "1285760"
  },
  {
    "text": "it",
    "start": "1285760",
    "end": "1286400"
  },
  {
    "text": "we basically need to strip away all the",
    "start": "1286400",
    "end": "1288400"
  },
  {
    "text": "outer layers and just focus on our core",
    "start": "1288400",
    "end": "1291360"
  },
  {
    "text": "application",
    "start": "1291360",
    "end": "1292559"
  },
  {
    "text": "business logic",
    "start": "1292559",
    "end": "1294240"
  },
  {
    "text": "we want to push the side effects to the",
    "start": "1294240",
    "end": "1296000"
  },
  {
    "text": "edge",
    "start": "1296000",
    "end": "1296880"
  },
  {
    "text": "so that we can keep the core pure and",
    "start": "1296880",
    "end": "1299200"
  },
  {
    "text": "therefore simple to test",
    "start": "1299200",
    "end": "1301200"
  },
  {
    "text": "and we want to iterate on this core",
    "start": "1301200",
    "end": "1302720"
  },
  {
    "text": "quickly so that we can deliver real",
    "start": "1302720",
    "end": "1304240"
  },
  {
    "text": "value to our customers",
    "start": "1304240",
    "end": "1307039"
  },
  {
    "text": "dapper allows us to do this today on",
    "start": "1307039",
    "end": "1309360"
  },
  {
    "text": "microsoft on on for microservices on",
    "start": "1309360",
    "end": "1311679"
  },
  {
    "text": "kubernetes",
    "start": "1311679",
    "end": "1314240"
  },
  {
    "text": "but wasn't cloud allows us to do this",
    "start": "1314240",
    "end": "1316159"
  },
  {
    "text": "even more we now have actors that",
    "start": "1316159",
    "end": "1318240"
  },
  {
    "text": "consist of our core logic which are",
    "start": "1318240",
    "end": "1319840"
  },
  {
    "text": "compiled to webassembly and they can run",
    "start": "1319840",
    "end": "1322000"
  },
  {
    "text": "literally",
    "start": "1322000",
    "end": "1323039"
  },
  {
    "text": "anywhere",
    "start": "1323039",
    "end": "1325519"
  },
  {
    "text": "we can use webassembly to host anything",
    "start": "1326640",
    "end": "1328960"
  },
  {
    "text": "including wasmcloud itself but in our",
    "start": "1328960",
    "end": "1331440"
  },
  {
    "text": "demo we hosted welsh cloud in a",
    "start": "1331440",
    "end": "1332960"
  },
  {
    "text": "container on kubernetes",
    "start": "1332960",
    "end": "1334960"
  },
  {
    "text": "the application runtime is built with",
    "start": "1334960",
    "end": "1336559"
  },
  {
    "text": "elixir otp leveraging years of battle",
    "start": "1336559",
    "end": "1338640"
  },
  {
    "text": "testing and it schedules capability",
    "start": "1338640",
    "end": "1340880"
  },
  {
    "text": "providers and actors",
    "start": "1340880",
    "end": "1343760"
  },
  {
    "text": "the actors talk to capability providers",
    "start": "1343760",
    "end": "1345679"
  },
  {
    "text": "through a contract",
    "start": "1345679",
    "end": "1347280"
  },
  {
    "text": "declared with amazon's smithy idl which",
    "start": "1347280",
    "end": "1350480"
  },
  {
    "text": "is protocol and language independent the",
    "start": "1350480",
    "end": "1353039"
  },
  {
    "text": "capability providers are where the side",
    "start": "1353039",
    "end": "1354799"
  },
  {
    "text": "effects are",
    "start": "1354799",
    "end": "1356080"
  },
  {
    "text": "we build them once and we use",
    "start": "1356080",
    "end": "1358720"
  },
  {
    "text": "all we use a first party provider out of",
    "start": "1358720",
    "end": "1360400"
  },
  {
    "text": "the box",
    "start": "1360400",
    "end": "1361600"
  },
  {
    "text": "they're just like frameworks of old but",
    "start": "1361600",
    "end": "1363679"
  },
  {
    "text": "they're independently scalable and",
    "start": "1363679",
    "end": "1364960"
  },
  {
    "text": "resilient and also language",
    "start": "1364960",
    "end": "1367200"
  },
  {
    "text": "agnostic",
    "start": "1367200",
    "end": "1369440"
  },
  {
    "text": "this theme has come through from through",
    "start": "1369440",
    "end": "1371360"
  },
  {
    "text": "from istio and dapper it's the same sort",
    "start": "1371360",
    "end": "1373440"
  },
  {
    "text": "of thing like pulling this stuff to the",
    "start": "1373440",
    "end": "1375120"
  },
  {
    "text": "edge",
    "start": "1375120",
    "end": "1376320"
  },
  {
    "text": "and doing it once instead of every",
    "start": "1376320",
    "end": "1377679"
  },
  {
    "text": "single time",
    "start": "1377679",
    "end": "1379280"
  },
  {
    "text": "um so wasn't cloud has this concept",
    "start": "1379280",
    "end": "1382400"
  },
  {
    "text": "of composable actors compiled from any",
    "start": "1382400",
    "end": "1385039"
  },
  {
    "text": "language into webassembly that talk to",
    "start": "1385039",
    "end": "1387120"
  },
  {
    "text": "the capability providers which can be",
    "start": "1387120",
    "end": "1388960"
  },
  {
    "text": "either first or third party",
    "start": "1388960",
    "end": "1392559"
  },
  {
    "text": "actors are scheduled to run on hosts",
    "start": "1392559",
    "end": "1394720"
  },
  {
    "text": "that self-form into a self-healing",
    "start": "1394720",
    "end": "1396559"
  },
  {
    "text": "lattice made from a nats backplane",
    "start": "1396559",
    "end": "1400880"
  },
  {
    "text": "and that's is crucial here it's amazing",
    "start": "1400880",
    "end": "1403679"
  },
  {
    "text": "it's the key to all this a simple yet",
    "start": "1403679",
    "end": "1406480"
  },
  {
    "text": "incredibly powerful pub sub based",
    "start": "1406480",
    "end": "1408320"
  },
  {
    "text": "messaging infrastructure which is itself",
    "start": "1408320",
    "end": "1410960"
  },
  {
    "text": "a platform for building platforms that",
    "start": "1410960",
    "end": "1412799"
  },
  {
    "text": "sounds familiar",
    "start": "1412799",
    "end": "1415360"
  },
  {
    "text": "any nas infrastructure can be used and",
    "start": "1415360",
    "end": "1417120"
  },
  {
    "text": "in the demo that aish",
    "start": "1417120",
    "end": "1419120"
  },
  {
    "text": "did we used ngs",
    "start": "1419120",
    "end": "1421200"
  },
  {
    "text": "which has endpoints all over the world",
    "start": "1421200",
    "end": "1423039"
  },
  {
    "text": "it's a global communication system from",
    "start": "1423039",
    "end": "1425200"
  },
  {
    "text": "synodia",
    "start": "1425200",
    "end": "1426320"
  },
  {
    "text": "it's in audio",
    "start": "1426320",
    "end": "1428159"
  },
  {
    "text": "if it wasn't cloud host can see a nat",
    "start": "1428159",
    "end": "1430240"
  },
  {
    "text": "sleeve node then it can join a lattice",
    "start": "1430240",
    "end": "1434159"
  },
  {
    "text": "host or nodes can join and leave this",
    "start": "1434159",
    "end": "1436960"
  },
  {
    "text": "self-healing lattice hosts are just",
    "start": "1436960",
    "end": "1438799"
  },
  {
    "text": "compute that can be donated from",
    "start": "1438799",
    "end": "1440240"
  },
  {
    "text": "anywhere any cloud on-prem any edge or",
    "start": "1440240",
    "end": "1442960"
  },
  {
    "text": "iot device",
    "start": "1442960",
    "end": "1444480"
  },
  {
    "text": "even a web browser tab because as i said",
    "start": "1444480",
    "end": "1446640"
  },
  {
    "text": "earlier wasn't cloud itself has been",
    "start": "1446640",
    "end": "1448080"
  },
  {
    "text": "compiled two websites",
    "start": "1448080",
    "end": "1450080"
  },
  {
    "text": "in a web page",
    "start": "1450080",
    "end": "1451919"
  },
  {
    "text": "for the first time",
    "start": "1451919",
    "end": "1453440"
  },
  {
    "text": "as far as i'm aware we can have truly",
    "start": "1453440",
    "end": "1455679"
  },
  {
    "text": "global clusters spread across",
    "start": "1455679",
    "end": "1458240"
  },
  {
    "text": "geographical locations",
    "start": "1458240",
    "end": "1460080"
  },
  {
    "text": "all because of nas and muslim cloud",
    "start": "1460080",
    "end": "1463279"
  },
  {
    "text": "nats flattens the wells and cloud",
    "start": "1463279",
    "end": "1464720"
  },
  {
    "text": "lattice and elevates it above the",
    "start": "1464720",
    "end": "1466240"
  },
  {
    "text": "network allowing it to be independent of",
    "start": "1466240",
    "end": "1468000"
  },
  {
    "text": "network topology",
    "start": "1468000",
    "end": "1469520"
  },
  {
    "text": "no more firewalls or perimeter-based",
    "start": "1469520",
    "end": "1471200"
  },
  {
    "text": "security models",
    "start": "1471200",
    "end": "1473360"
  },
  {
    "text": "but nats",
    "start": "1473360",
    "end": "1474480"
  },
  {
    "text": "is even more secure",
    "start": "1474480",
    "end": "1476640"
  },
  {
    "text": "making extensive use of public key",
    "start": "1476640",
    "end": "1478720"
  },
  {
    "text": "cryptography to provide a secure",
    "start": "1478720",
    "end": "1480960"
  },
  {
    "text": "multi-tenant",
    "start": "1480960",
    "end": "1482480"
  },
  {
    "text": "substrate or backplane on top of which",
    "start": "1482480",
    "end": "1484640"
  },
  {
    "text": "we can easily build globally distributed",
    "start": "1484640",
    "end": "1487520"
  },
  {
    "text": "systems",
    "start": "1487520",
    "end": "1488960"
  },
  {
    "text": "so what does",
    "start": "1488960",
    "end": "1490480"
  },
  {
    "text": "a next-gen full platform look like in",
    "start": "1490480",
    "end": "1494400"
  },
  {
    "text": "large in a large enterprise you might",
    "start": "1494400",
    "end": "1496080"
  },
  {
    "text": "expect",
    "start": "1496080",
    "end": "1497600"
  },
  {
    "text": "a single global multi-tenant nats",
    "start": "1497600",
    "end": "1499840"
  },
  {
    "text": "backplane",
    "start": "1499840",
    "end": "1500960"
  },
  {
    "text": "to be the ceiling for the infrastructure",
    "start": "1500960",
    "end": "1502559"
  },
  {
    "text": "team and the floor for the platform team",
    "start": "1502559",
    "end": "1504799"
  },
  {
    "text": "wilson cloud becomes the ceiling for the",
    "start": "1504799",
    "end": "1506320"
  },
  {
    "text": "platform team and the floor for the",
    "start": "1506320",
    "end": "1507600"
  },
  {
    "text": "application teams",
    "start": "1507600",
    "end": "1509200"
  },
  {
    "text": "and it provides a great developer",
    "start": "1509200",
    "end": "1510640"
  },
  {
    "text": "experience for building modern",
    "start": "1510640",
    "end": "1511919"
  },
  {
    "text": "distributed applications",
    "start": "1511919",
    "end": "1513679"
  },
  {
    "text": "with high velocity and a core focus on",
    "start": "1513679",
    "end": "1515919"
  },
  {
    "text": "building customer value",
    "start": "1515919",
    "end": "1517840"
  },
  {
    "text": "um",
    "start": "1517840",
    "end": "1518640"
  },
  {
    "text": "that's us um we hope you've enjoyed it",
    "start": "1518640",
    "end": "1522400"
  },
  {
    "text": "and the demo thanks ayush",
    "start": "1522400",
    "end": "1524640"
  },
  {
    "text": "thanks for listening we're here for any",
    "start": "1524640",
    "end": "1526640"
  },
  {
    "text": "questions if you have any and these are",
    "start": "1526640",
    "end": "1528320"
  },
  {
    "text": "our details so hit us up",
    "start": "1528320",
    "end": "1530640"
  },
  {
    "text": "thanks",
    "start": "1530640",
    "end": "1533520"
  }
]