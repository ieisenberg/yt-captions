[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "hi I'm Greg Hansen I am a software developer with IBM and like lynn said i've been a core contributor for this",
    "start": "30",
    "end": "7799"
  },
  {
    "text": "teo project but today i am going to tell the story of one team's journey to",
    "start": "7799",
    "end": "13559"
  },
  {
    "text": "adopting SEO and their service so the previous presentation ties in really",
    "start": "13559",
    "end": "18810"
  },
  {
    "text": "well with this and i'm glad they went before me because i'll be reiterating some of those same features but before i",
    "start": "18810",
    "end": "25439"
  },
  {
    "text": "go any further like lynn said i need to give a shout out to martin Ross and the app connect",
    "start": "25439",
    "end": "30750"
  },
  {
    "text": "team I am presenting in their place today since they couldn't be here themselves they put in most of the hard",
    "start": "30750",
    "end": "36780"
  },
  {
    "text": "work and I as a developer and maintainer of sto became their lead contact for all",
    "start": "36780",
    "end": "41790"
  },
  {
    "text": "their troubleshooting needs so what is app connect app connect is a an",
    "start": "41790",
    "end": "48600"
  },
  {
    "start": "44000",
    "end": "176000"
  },
  {
    "text": "integration platform as a service that provides support for a range of styles",
    "start": "48600",
    "end": "53760"
  },
  {
    "text": "such as events api's and batch processing the app connects service itself is composed of over a hundred and",
    "start": "53760",
    "end": "60660"
  },
  {
    "text": "fifty different micro services each on a replica set with a minimum of three",
    "start": "60660",
    "end": "65670"
  },
  {
    "text": "replicas pour per service so as a result the app connects service handles over 20",
    "start": "65670",
    "end": "71460"
  },
  {
    "text": "million requests per day ranging from users interacting with the UI calls from",
    "start": "71460",
    "end": "76979"
  },
  {
    "text": "scheduled flows service to service calls within the mesh and calls to target applications hosted externally usually",
    "start": "76979",
    "end": "84150"
  },
  {
    "text": "system as a service endpoints app connect integrates with hundreds and of",
    "start": "84150",
    "end": "90600"
  },
  {
    "text": "endpoints and applications the service itself relies on external applications",
    "start": "90600",
    "end": "96420"
  },
  {
    "text": "such as Cloudant elasticsearch Redis Kafka and Cystic to name a few but it",
    "start": "96420",
    "end": "102509"
  },
  {
    "text": "also supports the additional endpoints through the use of connectors which get",
    "start": "102509",
    "end": "108149"
  },
  {
    "text": "configured by the end user examples of some of these connectors are for salesforce systems db2 systems or any",
    "start": "108149",
    "end": "117000"
  },
  {
    "text": "standard HTTP rest endpoint so just a",
    "start": "117000",
    "end": "122399"
  },
  {
    "text": "quick example here of what a user of app connect might see in this particular case they're creating a flow from a",
    "start": "122399",
    "end": "129209"
  },
  {
    "text": "template and this flow which runs periodically it's the leads for a particular account",
    "start": "129209",
    "end": "134470"
  },
  {
    "text": "sends out some notifications and then by a slacker email to each lead and then",
    "start": "134470",
    "end": "141130"
  },
  {
    "text": "saves a database entry and a back-end and kind of putting that into a simple",
    "start": "141130",
    "end": "148480"
  },
  {
    "text": "little diagram you have incoming traffic coming from users applications or those",
    "start": "148480",
    "end": "154900"
  },
  {
    "text": "scheduled flows and the app connects service itself each of the different",
    "start": "154900",
    "end": "160210"
  },
  {
    "text": "micro services handle the request making calls to external applications such as monitoring alerts logging authentication",
    "start": "160210",
    "end": "167350"
  },
  {
    "text": "etc and eventually to the corresponding connectors which interact with the",
    "start": "167350",
    "end": "172690"
  },
  {
    "text": "configured SAS target application now let's talk about app connect prior to",
    "start": "172690",
    "end": "180070"
  },
  {
    "start": "176000",
    "end": "283000"
  },
  {
    "text": "sto EPP Connect and all of its services were originally written all in nodejs",
    "start": "180070",
    "end": "185580"
  },
  {
    "text": "they wrote and published their own NPM modules for wrappers which perform",
    "start": "185580",
    "end": "190720"
  },
  {
    "text": "consistent logging metrics and retry logic for all their internal and external traffic across all the micro",
    "start": "190720",
    "end": "198040"
  },
  {
    "text": "services and since everything was in node J s the department could scale up",
    "start": "198040",
    "end": "203890"
  },
  {
    "text": "and co-chair pretty easily and the programmers within the team could move around between different components",
    "start": "203890",
    "end": "209620"
  },
  {
    "text": "pretty smoothly but as more connectors were added they discovered different",
    "start": "209620",
    "end": "215860"
  },
  {
    "text": "connectors needed to be in different languages Java for instance so they're common wrappers could no longer be just",
    "start": "215860",
    "end": "222730"
  },
  {
    "text": "dropped right in they needed to move towards supporting polyglot runtimes and for those of you that haven't heard the",
    "start": "222730",
    "end": "229330"
  },
  {
    "text": "polyglot word before it means that services can be written in a mix of any programming language and a little bit",
    "start": "229330",
    "end": "238989"
  },
  {
    "text": "about their environment IBM originally didn't have a kubernetes based cloud offering when app Connect G",
    "start": "238989",
    "end": "246310"
  },
  {
    "text": "ade and started their initial development so the team adopted a homegrown and non-declarative model for",
    "start": "246310",
    "end": "252910"
  },
  {
    "text": "deployment services were all deployed by a configurable batch script with a bunch",
    "start": "252910",
    "end": "258730"
  },
  {
    "text": "of Cloud Foundry deploy commands which had to wait for each one to complete and they had to be run sequentially",
    "start": "258730",
    "end": "265560"
  },
  {
    "text": "and they took hours to eventually complete so at the time they were not",
    "start": "265560",
    "end": "270780"
  },
  {
    "text": "strictly following 12 factor application and cloud native practices all those things about saying you know having a CI",
    "start": "270780",
    "end": "277740"
  },
  {
    "text": "and continuous delivery model for all of your applications and services so just a",
    "start": "277740",
    "end": "286230"
  },
  {
    "text": "quick example of a use case a user may have in this Cloud Foundry environment",
    "start": "286230",
    "end": "291780"
  },
  {
    "text": "the user interacts with the UI micro service to create a flow and then a",
    "start": "291780",
    "end": "297210"
  },
  {
    "text": "separate authoring service stores that user created flow in a database back-end and behind the scenes those wrapper",
    "start": "297210",
    "end": "303270"
  },
  {
    "text": "libraries are calling external services for logging alerting and monitoring",
    "start": "303270",
    "end": "308400"
  },
  {
    "text": "services and one more a little bit more complex example a user creates an API",
    "start": "308400",
    "end": "314880"
  },
  {
    "text": "that is exposed and can be called by other applications the API service receives the request and it's sent to a",
    "start": "314880",
    "end": "322110"
  },
  {
    "text": "separate logging service and specifically for user logs and stores those in an elastic search back-end and",
    "start": "322110",
    "end": "328919"
  },
  {
    "text": "then it also continues the request on to those various connectors which could be",
    "start": "328919",
    "end": "334470"
  },
  {
    "text": "one-to-many to call those SAS endpoints but the a bi service also calls a",
    "start": "334470",
    "end": "340710"
  },
  {
    "text": "separate billing service to record the number of times a particular API is called so that the end user can",
    "start": "340710",
    "end": "347520"
  },
  {
    "text": "eventually be billed for that and once again those wrappers for each component are all using those external logging and",
    "start": "347520",
    "end": "353310"
  },
  {
    "text": "alerting monitoring services so the app connect team had some areas that they",
    "start": "353310",
    "end": "360150"
  },
  {
    "start": "355000",
    "end": "439000"
  },
  {
    "text": "wanted to improve upon they were using a very homegrown deployment model and wanted to move to a declarative and more",
    "start": "360150",
    "end": "367919"
  },
  {
    "text": "cloud native model and additionally all the circuit breaking and retry logic was",
    "start": "367919",
    "end": "373889"
  },
  {
    "text": "currently hard-coded using those shared wrapper libraries excuse me which does",
    "start": "373889",
    "end": "378990"
  },
  {
    "text": "not work well as the team moves towards polyglot runtimes the current work a group workaround for",
    "start": "378990",
    "end": "384840"
  },
  {
    "text": "those Java apps is actually to deploy to containers and their job of pods one for",
    "start": "384840",
    "end": "390360"
  },
  {
    "text": "their note J's wrapper and then one for the actual Java pod itself but they're",
    "start": "390360",
    "end": "396390"
  },
  {
    "text": "still stuck with maintaining those wrapper libraries themselves also the UI developers in particular",
    "start": "396390",
    "end": "402690"
  },
  {
    "text": "were very interested in canary testing opening up the ability to share workloads between different service",
    "start": "402690",
    "end": "409800"
  },
  {
    "text": "versions for testing and staging purposes the team also wanted better",
    "start": "409800",
    "end": "415050"
  },
  {
    "text": "visibility on their error rates their interactions with external systems and ingress because in their Cloud Foundry",
    "start": "415050",
    "end": "422940"
  },
  {
    "text": "environment there is a go router which sits in front of their app Connect service and it performs a lot of things",
    "start": "422940",
    "end": "429600"
  },
  {
    "text": "behind the scenes and the team wanted better observability and metrics on say",
    "start": "429600",
    "end": "435120"
  },
  {
    "text": "all these rejected calls or the successful calls so why is steo and",
    "start": "435120",
    "end": "442880"
  },
  {
    "start": "439000",
    "end": "541000"
  },
  {
    "text": "similar to link or d SEO is an open platform service match to connect manage",
    "start": "442880",
    "end": "448650"
  },
  {
    "text": "observe and secure your micro services and so app connect originally started",
    "start": "448650",
    "end": "454650"
  },
  {
    "text": "with only ten services but like I mentioned previously they're up to a hundred and fifty different ones and",
    "start": "454650",
    "end": "460940"
  },
  {
    "text": "they are expanding and moving to polyglot runtimes they also did not want",
    "start": "460940",
    "end": "466170"
  },
  {
    "text": "to maintain those wrapper libraries and that performed the consistent logging metrics and retries across their entire",
    "start": "466170",
    "end": "471900"
  },
  {
    "text": "service they wanted to explore using Jaeger and key Olly specifically for",
    "start": "471900",
    "end": "478680"
  },
  {
    "text": "observability and those end end transactions and requests and those",
    "start": "478680",
    "end": "483840"
  },
  {
    "text": "specifically are installed as add-ons with Sto and they provide tracing and",
    "start": "483840",
    "end": "488880"
  },
  {
    "text": "visual graphs to observe traffic within your mesh they also won't sorry about",
    "start": "488880",
    "end": "497010"
  },
  {
    "text": "that anyways they also wanted better workload",
    "start": "497010",
    "end": "502080"
  },
  {
    "text": "control with focus on canary testing and traffic splitting and they wanted to",
    "start": "502080",
    "end": "507180"
  },
  {
    "text": "utilize the error injection for making more robust and stable micro services and also sto has community support and",
    "start": "507180",
    "end": "518510"
  },
  {
    "text": "within IBM they are developing on Sto so they had somebody that they could reach",
    "start": "518510",
    "end": "524400"
  },
  {
    "text": "out to on slack and ask for questions but also SDO itself has community",
    "start": "524400",
    "end": "529470"
  },
  {
    "text": "support on github and discuss I Oh and this new itself had a lot of",
    "start": "529470",
    "end": "535800"
  },
  {
    "text": "features that they were interested in playing with but these were the ones that immediately caught their eyes so",
    "start": "535800",
    "end": "542850"
  },
  {
    "start": "541000",
    "end": "599000"
  },
  {
    "text": "going back to that same diagram as earlier except deployed with sto on kubernetes the requests come in through",
    "start": "542850",
    "end": "549870"
  },
  {
    "text": "the ingress gateway which use a combination of virtual and gateway rules",
    "start": "549870",
    "end": "556620"
  },
  {
    "text": "and these eventually route to the micro services that compose app connect the",
    "start": "556620",
    "end": "563490"
  },
  {
    "text": "services themselves then use service entry rules to communicate with the external applications for monitoring",
    "start": "563490",
    "end": "569130"
  },
  {
    "text": "alerting and logging and security among others and at the bottom those are those",
    "start": "569130",
    "end": "575100"
  },
  {
    "text": "SAS target applications the connectors talk to app connect supports a variety of SAS targets and as a result cannot",
    "start": "575100",
    "end": "582570"
  },
  {
    "text": "define all these service entries that might be needed for deployment for different connectors a user may set up",
    "start": "582570",
    "end": "589110"
  },
  {
    "text": "down the line so as a workaround the team is using the include outbound IP ranges notation within sto and I'll show",
    "start": "589110",
    "end": "596640"
  },
  {
    "text": "an example of that later on and once again just looking at that same scenario",
    "start": "596640",
    "end": "602040"
  },
  {
    "text": "where a user creates a flow comes in through the ingress gateway and there's a gateway in virtual service rule to",
    "start": "602040",
    "end": "608160"
  },
  {
    "text": "direct traffic to the UI micro service and these services communicate with the external logging alerting and storage",
    "start": "608160",
    "end": "614850"
  },
  {
    "text": "services using those service entries and I should mention not shown on here is the sto control plane which handles",
    "start": "614850",
    "end": "622170"
  },
  {
    "text": "things such as certs and pushing the Envoy configurations to the ISTE o proxy",
    "start": "622170",
    "end": "627810"
  },
  {
    "text": "sidecars also mentioned in the previous talk that run along each of your services and a service mesh and so",
    "start": "627810",
    "end": "638580"
  },
  {
    "text": "looking and a similar set up for that user exposed api example that",
    "start": "638580",
    "end": "644820"
  },
  {
    "text": "application calls the api service going through the ingress gateway and service",
    "start": "644820",
    "end": "650460"
  },
  {
    "text": "entries for all the external applications except those SAS target applications for the connectors and",
    "start": "650460",
    "end": "657020"
  },
  {
    "text": "notice within the mesh there are not any rules needed for communication from the api service to any of the others such as",
    "start": "657020",
    "end": "665160"
  },
  {
    "text": "the the connectors or the billing this is because with sto default routing works",
    "start": "665160",
    "end": "670650"
  },
  {
    "text": "well by default so just here is a sample",
    "start": "670650",
    "end": "679020"
  },
  {
    "text": "gateway rule that they're using for controlling ingress into the app connect service gateway rules in sto described",
    "start": "679020",
    "end": "685800"
  },
  {
    "text": "ports which are exposed to traffic coming from outside the mesh as well as what the protocol type sni configuration",
    "start": "685800",
    "end": "692850"
  },
  {
    "text": "certs and similar in this rule port 443 is open for requests for host names",
    "start": "692850",
    "end": "699300"
  },
  {
    "text": "matching the app connect domain specified at the bottom and as you can",
    "start": "699300",
    "end": "704460"
  },
  {
    "text": "see it has TLS enabled and something to note in this particular setup they do",
    "start": "704460",
    "end": "710130"
  },
  {
    "text": "not have HTTP defined for their gateway and this is because for their particular",
    "start": "710130",
    "end": "715920"
  },
  {
    "text": "production system they have a CloudFlare instance running in front of it that enforces all traffic to be HTTPS so no",
    "start": "715920",
    "end": "723270"
  },
  {
    "text": "HTTP block was required and virtual",
    "start": "723270",
    "end": "728280"
  },
  {
    "text": "service rule virtual service rules define how traffic is routed to its service within the mesh for this one",
    "start": "728280",
    "end": "734580"
  },
  {
    "text": "here it defines surrounding behavior for the port host combination defined in that gateway it matches on a particular",
    "start": "734580",
    "end": "742080"
  },
  {
    "text": "hostname for the request and routes to the destination host and port and even",
    "start": "742080",
    "end": "747510"
  },
  {
    "text": "though this virtual service is defined with HTTP this also works with ISTE",
    "start": "747510",
    "end": "752850"
  },
  {
    "text": "OAuth enabled which will automatically upgrade traffic to HTTPS so the traffic",
    "start": "752850",
    "end": "758220"
  },
  {
    "text": "in this case would be from that sto ingress gateway instance to the sto",
    "start": "758220",
    "end": "764220"
  },
  {
    "text": "proxy sidecar that's running along the UI service and here is an example",
    "start": "764220",
    "end": "773460"
  },
  {
    "text": "service entry service entry rules define services that are not automatically",
    "start": "773460",
    "end": "778620"
  },
  {
    "text": "discover bol within the mesh so that internal services can route to them so",
    "start": "778620",
    "end": "783780"
  },
  {
    "text": "this one here is for elastic search and I should mention that URL is made up so",
    "start": "783780",
    "end": "788940"
  },
  {
    "text": "please don't try and reach out to it but it also defines a port and a protocol",
    "start": "788940",
    "end": "795060"
  },
  {
    "text": "there for that one and here is an example or one of their HTTP connectors I had",
    "start": "795060",
    "end": "802649"
  },
  {
    "text": "mentioned the include outbound IP ranges notation before for those not aware this annotation is used to decide what",
    "start": "802649",
    "end": "809970"
  },
  {
    "text": "traffic is actually sent to the Envoy proxy sidecar which runs alongside their service the way it is configured now",
    "start": "809970",
    "end": "816600"
  },
  {
    "text": "basically all local traffic within the mesh is caught by the proxy and runs through that envoy proxy but everything",
    "start": "816600",
    "end": "824129"
  },
  {
    "text": "else bypasses it since app Connect service doesn't know all the endpoints the user make specify when configuring a",
    "start": "824129",
    "end": "830850"
  },
  {
    "text": "connector this is the current workaround there is still investigated investigating alternative solutions for",
    "start": "830850",
    "end": "837060"
  },
  {
    "text": "this because they eventually want observability and metrics on those calls to external applications so where is AB",
    "start": "837060",
    "end": "845790"
  },
  {
    "start": "843000",
    "end": "969000"
  },
  {
    "text": "Connect team today with this do they have been using it for over a year now sto version 1.0 dot 4 was the first one",
    "start": "845790",
    "end": "853649"
  },
  {
    "text": "installed on one of their primary clusters but they have been playing around with versions as early as 0 9 and",
    "start": "853649",
    "end": "859829"
  },
  {
    "text": "0 7 in their test environments they have a pre prod system up and running",
    "start": "859829",
    "end": "866040"
  },
  {
    "text": "everything deployed using pipelines and testing is currently underway for",
    "start": "866040",
    "end": "871649"
  },
  {
    "text": "validation and scale purposes they also have a production environment deploy and",
    "start": "871649",
    "end": "876959"
  },
  {
    "text": "it's waiting for that testing to complete their current environments have the sto ingress gateway install with",
    "start": "876959",
    "end": "884459"
  },
  {
    "text": "Auto injection enabled which automatically deploys that sto proxy sidecar along each of their services",
    "start": "884459",
    "end": "890730"
  },
  {
    "text": "automatically they also have MPLS enabled globally so that traffic between",
    "start": "890730",
    "end": "896790"
  },
  {
    "text": "the proxies within the mesh just by default and they're also using me rewrite app HTTP probe notation which is",
    "start": "896790",
    "end": "904889"
  },
  {
    "text": "something needed once MPLS has enabled this flag tells the injector to rewrite the aliveness health check in the pot",
    "start": "904889",
    "end": "910709"
  },
  {
    "text": "spec to redirect traffic to the sidecar instead since kubernetes health check requests",
    "start": "910709",
    "end": "916410"
  },
  {
    "text": "are sent from couplet which does not have the sto issued certificates",
    "start": "916410",
    "end": "921629"
  },
  {
    "text": "so when mutual TLS is enabled those health checks actually fail which if you're not expecting it it's something",
    "start": "921629",
    "end": "928470"
  },
  {
    "text": "that's very confusing alright and yeah they are up to 150 different",
    "start": "928470",
    "end": "935030"
  },
  {
    "text": "microservices now with those replicas of each one so close to 500 containers",
    "start": "935030",
    "end": "940220"
  },
  {
    "text": "alone and doubling that once you of course add in the steel proxy sidecar",
    "start": "940220",
    "end": "945290"
  },
  {
    "text": "container that's running along all their apps and their first sto base deployment",
    "start": "945290",
    "end": "951680"
  },
  {
    "text": "is actually only going to be for one customer they're onboarding this one customer because it represents the",
    "start": "951680",
    "end": "958640"
  },
  {
    "text": "majority of the traffic for their service so once the team verifies the successful transition of that one they'll start",
    "start": "958640",
    "end": "965720"
  },
  {
    "text": "staging everyone else in early next year so let's talk a little bit about their",
    "start": "965720",
    "end": "972890"
  },
  {
    "start": "969000",
    "end": "1219000"
  },
  {
    "text": "adoption process they ran into some stability issues with sto prior to",
    "start": "972890",
    "end": "979070"
  },
  {
    "text": "version 1.1 503 specifically and for those of you that remember those days",
    "start": "979070",
    "end": "984710"
  },
  {
    "text": "503 s we're quite the bane of sto existence which made the team's initial",
    "start": "984710",
    "end": "990020"
  },
  {
    "text": "attempts more difficult to diagnose and debug along the way but they're not seeing those 503 s anymore and it was a",
    "start": "990020",
    "end": "998240"
  },
  {
    "text": "learning experience for their team understanding in finer detail how their services talked to external endpoints",
    "start": "998240",
    "end": "1004770"
  },
  {
    "text": "personally one time I was poring over some trace on void level access logs",
    "start": "1004770",
    "end": "1010120"
  },
  {
    "text": "with them wondering why particular requests were failing to Cloudant and eventually we find out that it was a",
    "start": "1010120",
    "end": "1017380"
  },
  {
    "text": "wild card domain defined for one of their service entries and it just happened to be missing like one out of",
    "start": "1017380",
    "end": "1022990"
  },
  {
    "text": "the five URLs that the service was trying to communicate with but they didn't know that was communicating with",
    "start": "1022990",
    "end": "1028510"
  },
  {
    "text": "that one and so hence the failure another pain point was pod startup time",
    "start": "1028510",
    "end": "1034569"
  },
  {
    "text": "when you inject the citecar proxy to services to deployment it takes a little",
    "start": "1034570",
    "end": "1039880"
  },
  {
    "text": "bit for the proxy to spin up and a lot of their services we're always expecting",
    "start": "1039880",
    "end": "1046270"
  },
  {
    "text": "to have networking available at startup so their services would fail the initial",
    "start": "1046270",
    "end": "1052000"
  },
  {
    "text": "calls to set up connections to external applications and some of them were never retrying on failure and in a few",
    "start": "1052000",
    "end": "1060160"
  },
  {
    "text": "instances they also didn't crash on failure so these services would come up",
    "start": "1060160",
    "end": "1065500"
  },
  {
    "text": "failed you connect to this external say database stay up but then not actually",
    "start": "1065500",
    "end": "1070840"
  },
  {
    "text": "be able to process any incoming requests as a result the team did end up",
    "start": "1070840",
    "end": "1077590"
  },
  {
    "text": "identifying bugs in their application the results of just bad coding practices creeping in over time but on the plus",
    "start": "1077590",
    "end": "1085390"
  },
  {
    "text": "side sto and kubernetes were waited to discover these bugs and move towards a",
    "start": "1085390",
    "end": "1091240"
  },
  {
    "text": "more cloud native and 12 factor application another item was",
    "start": "1091240",
    "end": "1097210"
  },
  {
    "text": "implementing the ingress solution which was not as straightforward and it's",
    "start": "1097210",
    "end": "1102880"
  },
  {
    "text": "because ingress usually ends up being partly environment specific and I have a",
    "start": "1102880",
    "end": "1109150"
  },
  {
    "text": "slide to follow for that one also they needed to decide how deployments are",
    "start": "1109150",
    "end": "1114850"
  },
  {
    "text": "handled specifically with automating the updates of sto versions because while",
    "start": "1114850",
    "end": "1120130"
  },
  {
    "text": "Sto does have long-term support for so many previous versions they do eventually need to be updated and so",
    "start": "1120130",
    "end": "1127480"
  },
  {
    "text": "their current solution right now is to perform some manual testing then run component and integration tests and",
    "start": "1127480",
    "end": "1134020"
  },
  {
    "text": "eventually promote to the product production using pipelines the team also",
    "start": "1134020",
    "end": "1139210"
  },
  {
    "text": "wants to be able to start using more features of Sto but currently a number",
    "start": "1139210",
    "end": "1145030"
  },
  {
    "text": "of them are disabled during deployment the team found that some failures were",
    "start": "1145030",
    "end": "1150580"
  },
  {
    "text": "getting introduced in components that they weren't actively using but since they weren't using them they weren't",
    "start": "1150580",
    "end": "1156760"
  },
  {
    "text": "looking for errors and those specific components so for example even though",
    "start": "1156760",
    "end": "1162429"
  },
  {
    "text": "the team wasn't using Prometheus for observability Prometheus ended up running away with resources on the",
    "start": "1162429",
    "end": "1168429"
  },
  {
    "text": "cluster which resulted in scheduling errors for other services in that cluster and another thing was one of the",
    "start": "1168429",
    "end": "1177070"
  },
  {
    "text": "times they tried to delete one of the workers in their cluster but during one",
    "start": "1177070",
    "end": "1182919"
  },
  {
    "text": "of the version updates of this do mixer had a requirement that it needed a minimum of one instances to keep keep",
    "start": "1182919",
    "end": "1191140"
  },
  {
    "text": "running but when they deleted that worker instance they accidentally deleted that telemetry instance for",
    "start": "1191140",
    "end": "1196870"
  },
  {
    "text": "mixer and then they started running into problem even though at the time they were not actually using mixer but they are",
    "start": "1196870",
    "end": "1204570"
  },
  {
    "text": "currently going to prod with sto 12.7 and have begun testing with 1.3 not four",
    "start": "1204570",
    "end": "1210970"
  },
  {
    "text": "and I hope they start testing with one not four because for those of you that don't know that it released last week so",
    "start": "1210970",
    "end": "1220650"
  },
  {
    "start": "1219000",
    "end": "1330000"
  },
  {
    "text": "just going over some of those specific sto components that they're using for",
    "start": "1220650",
    "end": "1225850"
  },
  {
    "text": "the ingress gateway this is a setup for a multi zone cluster it's a little",
    "start": "1225850",
    "end": "1231730"
  },
  {
    "text": "environment specific so I won't go into too much detail this ended up being one of their pain points because at the time",
    "start": "1231730",
    "end": "1238930"
  },
  {
    "text": "of their implementation sto docks were kind of locking lacking for a multi zone as well as IBM's own but the app connect",
    "start": "1238930",
    "end": "1248050"
  },
  {
    "text": "service has three public IP s they have a cloned network load balancer service for each availability zone and they have",
    "start": "1248050",
    "end": "1255580"
  },
  {
    "text": "that modified to point to different IPS for each a Z and then behind each",
    "start": "1255580",
    "end": "1260620"
  },
  {
    "text": "network load balancer is an sto ingress gateway and the specific services running for that a Z so when a client",
    "start": "1260620",
    "end": "1267220"
  },
  {
    "text": "calls this DNS service which has been performing health checks on each sto ingress gateway for each a Z it'll only",
    "start": "1267220",
    "end": "1274720"
  },
  {
    "text": "return in healthy end point so that client gets say IP for a specific availability zone and completes its",
    "start": "1274720",
    "end": "1281290"
  },
  {
    "text": "request app Connect is also running with sto auth enabled so all the services within",
    "start": "1281290",
    "end": "1289120"
  },
  {
    "text": "the mesh are communicating with each other through their local proxies using MPLS but this was added in after",
    "start": "1289120",
    "end": "1296650"
  },
  {
    "text": "everything else was working so that means ingress the auto injection and routing they started with disabled",
    "start": "1296650",
    "end": "1303430"
  },
  {
    "text": "move to passive and eventually striked and as you can see the ISTE o team or",
    "start": "1303430",
    "end": "1310060"
  },
  {
    "text": "Sonya the AB connect team it's currently only using pilot in Citadel and galleys should be up there so once again pilot",
    "start": "1310060",
    "end": "1316600"
  },
  {
    "text": "is pushing those conflicts to each of the Envoy proxies Citadel is managing the certs and galley is performing",
    "start": "1316600",
    "end": "1323620"
  },
  {
    "text": "config validations for all the incoming rules but the other components are",
    "start": "1323620",
    "end": "1328870"
  },
  {
    "text": "disabled so looking forward the app connect team still has more features that it wants to",
    "start": "1328870",
    "end": "1335600"
  },
  {
    "start": "1330000",
    "end": "1391000"
  },
  {
    "text": "adopt it wants observability with key ally and Jaeger they want to move to 1.3 and eventually wound up four and they",
    "start": "1335600",
    "end": "1343549"
  },
  {
    "text": "also want to adopt the operator model for installing things across their service they also want to perform locale",
    "start": "1343549",
    "end": "1351500"
  },
  {
    "text": "where routing so going back to that mul play zone example if service a instance is calling a service be instance ideally",
    "start": "1351500",
    "end": "1358580"
  },
  {
    "text": "that service be instance should be in the same availability zone as the one making the call they also want to play",
    "start": "1358580",
    "end": "1364730"
  },
  {
    "text": "with fault injection they learned a lot of things about how their services were written and how resilient they were to",
    "start": "1364730",
    "end": "1371600"
  },
  {
    "text": "failures on startup and they want to keep exploring those dependencies and failures so they can be prevented in the",
    "start": "1371600",
    "end": "1377960"
  },
  {
    "text": "future and make more robust applications and they also want to start playing",
    "start": "1377960",
    "end": "1383000"
  },
  {
    "text": "around with the canary testing so starting to split traffic between different service versions for staging",
    "start": "1383000",
    "end": "1389809"
  },
  {
    "text": "and testing purposes and so some words of wisdom from the app connect team for",
    "start": "1389809",
    "end": "1396110"
  },
  {
    "start": "1391000",
    "end": "1477000"
  },
  {
    "text": "those thinking of trying something similar with their own service-disabled components not in use don't need to",
    "start": "1396110",
    "end": "1402440"
  },
  {
    "text": "introduce failures if you don't need to be using that component also think about how ingress will be handled in your",
    "start": "1402440",
    "end": "1408950"
  },
  {
    "text": "environment one of the things to think about is do you want to chain your existing ingress solution to a sto",
    "start": "1408950",
    "end": "1415130"
  },
  {
    "text": "ingress gateway or just dive straight in with ISTE O's for the app connect team they were already switching from Cloud",
    "start": "1415130",
    "end": "1421040"
  },
  {
    "text": "Foundry to kubernetes so they had to they were doing away with their existing ingress implementation anyways and it",
    "start": "1421040",
    "end": "1427280"
  },
  {
    "text": "was easier for them to just dive right in with is teos something else make sure",
    "start": "1427280",
    "end": "1432380"
  },
  {
    "text": "you're enforcing good development practices make sure you're thinking cloud native and 12 factor also please",
    "start": "1432380",
    "end": "1438830"
  },
  {
    "text": "learn about how your applications talk to your external endpoints and how your services interact with them especially",
    "start": "1438830",
    "end": "1445250"
  },
  {
    "text": "on failure also think about how you want to handle updates or sto since they will",
    "start": "1445250",
    "end": "1451640"
  },
  {
    "text": "happen you want the latest and greatest so make sure you're ready for them when they come out and one other thing that",
    "start": "1451640",
    "end": "1459080"
  },
  {
    "text": "the team wanted to stress with Auto injection is they were surprised that",
    "start": "1459080",
    "end": "1464480"
  },
  {
    "text": "once they got it working there were a few bugs with their first initial passes but once you figure it out",
    "start": "1464480",
    "end": "1470270"
  },
  {
    "text": "you deploy your service is injected with the sidecar and communication just works",
    "start": "1470270",
    "end": "1475340"
  },
  {
    "text": "within your mesh and so that's about all I had do I have any time for questions",
    "start": "1475340",
    "end": "1481970"
  },
  {
    "start": "1477000",
    "end": "1817000"
  },
  {
    "text": "Lyn okay perfect but of course if people just want to go",
    "start": "1481970",
    "end": "1488180"
  },
  {
    "text": "out for snacks I would be more than open to that yeah in the front there so",
    "start": "1488180",
    "end": "1501110"
  },
  {
    "text": "performance testing is currently underway right now in their environment unfortunately I don't have the data on",
    "start": "1501110",
    "end": "1506360"
  },
  {
    "text": "that but if you want you can reach out to the feedback form on the surface mesh",
    "start": "1506360",
    "end": "1511670"
  },
  {
    "text": "sketch and I can get you in touch with the app connect team anybody else",
    "start": "1511670",
    "end": "1520600"
  },
  {
    "text": "so it's something they want to implement down the line they haven't done it yet oh so the question was how do you want",
    "start": "1527150",
    "end": "1536580"
  },
  {
    "text": "to handle or how are you currently handling canary deployments in your production environment and the question",
    "start": "1536580",
    "end": "1542670"
  },
  {
    "text": "and the answer is unfortunately they are not doing it yet so I cannot provide an exact answer to that in the front here",
    "start": "1542670",
    "end": "1551750"
  },
  {
    "text": "let's see in production I can't say for sure but there are other teams that are using it for deployments just similar",
    "start": "1555080",
    "end": "1562830"
  },
  {
    "text": "canactually those people are using canary testing for their deployments but I do not know off the top of my head",
    "start": "1562830",
    "end": "1569190"
  },
  {
    "text": "yeah we have several teams in the UK that have been playing around with app connect I don't know Lynn am I missing",
    "start": "1569190",
    "end": "1575160"
  },
  {
    "text": "anybody or sorry several teams in the UK that have been playing around with this do but am I missing any other big",
    "start": "1575160",
    "end": "1581490"
  },
  {
    "text": "internal users of this do with an IBM",
    "start": "1581490",
    "end": "1585710"
  },
  {
    "text": "yeah we do have other teams so the weather company was the first team actually adopting it still and we",
    "start": "1592630",
    "end": "1599540"
  },
  {
    "text": "thought it would be really interesting to have the app connect him talking to you because they are actually running",
    "start": "1599540",
    "end": "1604790"
  },
  {
    "text": "the larger scale with 500 containers we also have internally we have actually a",
    "start": "1604790",
    "end": "1611990"
  },
  {
    "text": "lot of team we have API team we have our Watson team a lot of the teams are",
    "start": "1611990",
    "end": "1618170"
  },
  {
    "text": "actually come to the SEO team because we have an architecture our carwash program",
    "start": "1618170",
    "end": "1624620"
  },
  {
    "text": "inside of the IBM and as part of the program the architecture team wants each",
    "start": "1624620",
    "end": "1632060"
  },
  {
    "text": "of the micro services make sure they have similar communication secure identity and it still is often proposed",
    "start": "1632060",
    "end": "1639560"
  },
  {
    "text": "as a solution to that so there's a lot of a team inside of IBM actually looking",
    "start": "1639560",
    "end": "1644660"
  },
  {
    "text": "and even adopting is your for that reason just for mutual tears there in",
    "start": "1644660",
    "end": "1652460"
  },
  {
    "text": "the aisle",
    "start": "1652460",
    "end": "1654700"
  },
  {
    "text": "Oh",
    "start": "1657940",
    "end": "1659970"
  },
  {
    "text": "so external applications calling into the mesh or so with app connect they",
    "start": "1667550",
    "end": "1674790"
  },
  {
    "text": "have a way to define api's that are exposed so that actually would end up going in through the ingress gateway to",
    "start": "1674790",
    "end": "1681540"
  },
  {
    "text": "the app connects official API service which handles the requests and processes",
    "start": "1681540",
    "end": "1687150"
  },
  {
    "text": "it",
    "start": "1687150",
    "end": "1689300"
  },
  {
    "text": "let's see so alright yeah",
    "start": "1704480",
    "end": "1711630"
  },
  {
    "text": "so basically services within the mesh and some of them are I guess local but",
    "start": "1711630",
    "end": "1719340"
  },
  {
    "text": "external doing the mesh is that what I'm hearing",
    "start": "1719340",
    "end": "1723260"
  },
  {
    "text": "yeah I'm assuming part of that if they are running into it is covered by the",
    "start": "1726170",
    "end": "1732120"
  },
  {
    "text": "include outbound IP sto range ISTE o notation but for that specific example I",
    "start": "1732120",
    "end": "1738840"
  },
  {
    "text": "don't have an answer for that if it's something you are interested in though please submit feedback through the sketch form",
    "start": "1738840",
    "end": "1745460"
  },
  {
    "text": "yes the sto multi-zone did you have some follow-up questions on that or that one",
    "start": "1752650",
    "end": "1764559"
  },
  {
    "text": "that one slide was about it just with regards to respect for time they it's",
    "start": "1764559",
    "end": "1770320"
  },
  {
    "text": "kind of a little compliment or complicated just because like I said it is environment specific for IKS IBM",
    "start": "1770320",
    "end": "1778870"
  },
  {
    "text": "cloud kubernetes service which is where they're running now and I'm sure it's gonna be something similar for a lot of",
    "start": "1778870",
    "end": "1784990"
  },
  {
    "text": "people depending on which environment that you're implementing and but if you would like to know more about it",
    "start": "1784990",
    "end": "1790090"
  },
  {
    "text": "like I said please submit something through the feedback form on sched and I can get you in touch with someone in the",
    "start": "1790090",
    "end": "1796420"
  },
  {
    "text": "front there yes they are all up on the sched they're added as part of my",
    "start": "1796420",
    "end": "1802210"
  },
  {
    "text": "presentation so you can download everything there and I think most of my speech is including as notes in the",
    "start": "1802210",
    "end": "1807910"
  },
  {
    "text": "presentation so thank you so much Greg let's give him a round of applause",
    "start": "1807910",
    "end": "1814450"
  },
  {
    "text": "[Applause]",
    "start": "1814450",
    "end": "1819748"
  }
]