[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "uh my name is anand",
    "start": "80",
    "end": "2399"
  },
  {
    "text": "currently i'm working as a staff",
    "start": "2399",
    "end": "3919"
  },
  {
    "text": "engineer",
    "start": "3919",
    "end": "4960"
  },
  {
    "text": "at sea scalar",
    "start": "4960",
    "end": "6799"
  },
  {
    "text": "today i'm going to present a production",
    "start": "6799",
    "end": "9280"
  },
  {
    "text": "great kafka on kubernetes we'll see how",
    "start": "9280",
    "end": "12559"
  },
  {
    "text": "kafka can be",
    "start": "12559",
    "end": "14160"
  },
  {
    "text": "inbuilt as a class citizen in kubernetes",
    "start": "14160",
    "end": "16480"
  },
  {
    "text": "so that",
    "start": "16480",
    "end": "17600"
  },
  {
    "text": "people who are familiar with kubernetes",
    "start": "17600",
    "end": "19520"
  },
  {
    "text": "they they will have a uh ease of",
    "start": "19520",
    "end": "21840"
  },
  {
    "text": "deploying kafka",
    "start": "21840",
    "end": "24000"
  },
  {
    "text": "so uh we look at the agenda first so",
    "start": "24000",
    "end": "27760"
  },
  {
    "start": "26000",
    "end": "47000"
  },
  {
    "text": "we're going to",
    "start": "27760",
    "end": "29039"
  },
  {
    "text": "cover introduction to kafka we are going",
    "start": "29039",
    "end": "31119"
  },
  {
    "text": "to look at kafka capabilities or typical",
    "start": "31119",
    "end": "33280"
  },
  {
    "text": "traditional deployment",
    "start": "33280",
    "end": "36239"
  },
  {
    "text": "and how the stream c project is going to",
    "start": "36239",
    "end": "37760"
  },
  {
    "text": "help us in this overall design",
    "start": "37760",
    "end": "40480"
  },
  {
    "text": "will look at the overall deployment",
    "start": "40480",
    "end": "42160"
  },
  {
    "text": "architecture kubernetes operated design",
    "start": "42160",
    "end": "44320"
  },
  {
    "text": "for kafka and",
    "start": "44320",
    "end": "46320"
  },
  {
    "text": "we'll look at a demo as well",
    "start": "46320",
    "end": "48079"
  },
  {
    "start": "47000",
    "end": "97000"
  },
  {
    "text": "so apache kafka so uh basically for",
    "start": "48079",
    "end": "51600"
  },
  {
    "text": "folks who are new to kafka i'll just",
    "start": "51600",
    "end": "53280"
  },
  {
    "text": "take another five minutes to quickly uh",
    "start": "53280",
    "end": "56079"
  },
  {
    "text": "brush you through the concepts like",
    "start": "56079",
    "end": "57520"
  },
  {
    "text": "kafka's and even streaming uh technology",
    "start": "57520",
    "end": "60719"
  },
  {
    "text": "has a capability to handle trillions of",
    "start": "60719",
    "end": "63199"
  },
  {
    "text": "records",
    "start": "63199",
    "end": "64239"
  },
  {
    "text": "uh",
    "start": "64239",
    "end": "65119"
  },
  {
    "text": "uh it is essentially a comment log with",
    "start": "65119",
    "end": "67439"
  },
  {
    "text": "a basic data structure",
    "start": "67439",
    "end": "69840"
  },
  {
    "text": "uh since being created as open source by",
    "start": "69840",
    "end": "72080"
  },
  {
    "text": "linkedin uh in 2011 it has it has been",
    "start": "72080",
    "end": "75600"
  },
  {
    "text": "pretty much being used as a full",
    "start": "75600",
    "end": "77520"
  },
  {
    "text": "full-fledged streaming platform",
    "start": "77520",
    "end": "79520"
  },
  {
    "text": "uh",
    "start": "79520",
    "end": "80720"
  },
  {
    "text": "brokers are actually a cluster of kafka",
    "start": "80720",
    "end": "82960"
  },
  {
    "text": "brokers handles the delivery of messages",
    "start": "82960",
    "end": "84960"
  },
  {
    "text": "and a broker uses these apache",
    "start": "84960",
    "end": "87759"
  },
  {
    "text": "zookeeper for storing the configuration",
    "start": "87759",
    "end": "90320"
  },
  {
    "text": "and for the cluster coordination",
    "start": "90320",
    "end": "92640"
  },
  {
    "text": "typical leader election mechanism is",
    "start": "92640",
    "end": "94880"
  },
  {
    "text": "also taken care by the zookeeper",
    "start": "94880",
    "end": "97840"
  },
  {
    "start": "97000",
    "end": "135000"
  },
  {
    "text": "capabilities are microservices actually",
    "start": "97840",
    "end": "100640"
  },
  {
    "text": "uses for sharing the data",
    "start": "100640",
    "end": "104000"
  },
  {
    "text": "highly useful",
    "start": "104000",
    "end": "105600"
  },
  {
    "text": "if a data requires a high throughput low",
    "start": "105600",
    "end": "108399"
  },
  {
    "text": "latency",
    "start": "108399",
    "end": "109840"
  },
  {
    "text": "guarantees messaging ordering",
    "start": "109840",
    "end": "112270"
  },
  {
    "text": "[Music]",
    "start": "112270",
    "end": "113439"
  },
  {
    "text": "it provides a rewind replay kind of a",
    "start": "113439",
    "end": "115920"
  },
  {
    "text": "mechanism so that you can reconstruct",
    "start": "115920",
    "end": "117840"
  },
  {
    "text": "your complete complete application state",
    "start": "117840",
    "end": "120079"
  },
  {
    "text": "uh message compaction is uh provided uh",
    "start": "120079",
    "end": "123920"
  },
  {
    "text": "you can horizontally scale your cluster",
    "start": "123920",
    "end": "125840"
  },
  {
    "text": "configurations",
    "start": "125840",
    "end": "127280"
  },
  {
    "text": "replication of data to control your ft",
    "start": "127280",
    "end": "130000"
  },
  {
    "text": "modes uh retention of high volumes data",
    "start": "130000",
    "end": "132400"
  },
  {
    "text": "for immediate access all of these you",
    "start": "132400",
    "end": "133840"
  },
  {
    "text": "kind of get with kafka",
    "start": "133840",
    "end": "135920"
  },
  {
    "start": "135000",
    "end": "168000"
  },
  {
    "text": "so some of the use cases is of course uh",
    "start": "135920",
    "end": "138720"
  },
  {
    "text": "it's",
    "start": "138720",
    "end": "139520"
  },
  {
    "text": "very popular in event driven",
    "start": "139520",
    "end": "140879"
  },
  {
    "text": "architectures",
    "start": "140879",
    "end": "142480"
  },
  {
    "text": "also used in even sourcing to capture",
    "start": "142480",
    "end": "144400"
  },
  {
    "text": "changes message brokering activity",
    "start": "144400",
    "end": "146879"
  },
  {
    "text": "tracking",
    "start": "146879",
    "end": "148000"
  },
  {
    "text": "operational monitoring through metrics",
    "start": "148000",
    "end": "151200"
  },
  {
    "text": "log collection and aggregation",
    "start": "151200",
    "end": "153920"
  },
  {
    "text": "of course commit logs and this for the",
    "start": "153920",
    "end": "155440"
  },
  {
    "text": "distribute systems but also stream",
    "start": "155440",
    "end": "157120"
  },
  {
    "text": "processing so that applications can",
    "start": "157120",
    "end": "158480"
  },
  {
    "text": "respond in the data real time so",
    "start": "158480",
    "end": "160480"
  },
  {
    "text": "majority of pipelines if you are",
    "start": "160480",
    "end": "162800"
  },
  {
    "text": "building pipelines so kafka would be the",
    "start": "162800",
    "end": "165360"
  },
  {
    "text": "central nervous system in that pipeline",
    "start": "165360",
    "end": "169200"
  },
  {
    "start": "168000",
    "end": "242000"
  },
  {
    "text": "so there are certain concepts and",
    "start": "169200",
    "end": "170640"
  },
  {
    "text": "terminologies let's uh go by them",
    "start": "170640",
    "end": "173200"
  },
  {
    "text": "quickly so that you will be",
    "start": "173200",
    "end": "174319"
  },
  {
    "text": "understanding uh what we mean so broker",
    "start": "174319",
    "end": "177360"
  },
  {
    "text": "is basically a server or a node that",
    "start": "177360",
    "end": "180239"
  },
  {
    "text": "orchestrates uh",
    "start": "180239",
    "end": "182000"
  },
  {
    "text": "the storage and passing of messages",
    "start": "182000",
    "end": "185200"
  },
  {
    "text": "topic is actually a more of logical but",
    "start": "185200",
    "end": "188720"
  },
  {
    "text": "it provides a destination for storage of",
    "start": "188720",
    "end": "190800"
  },
  {
    "text": "data and each topic is actually split",
    "start": "190800",
    "end": "193040"
  },
  {
    "text": "into partitions",
    "start": "193040",
    "end": "194959"
  },
  {
    "text": "cluster is a group of broker instances",
    "start": "194959",
    "end": "197360"
  },
  {
    "text": "partitions basically partitioning takes",
    "start": "197360",
    "end": "199360"
  },
  {
    "text": "a single topic log and then breaks it",
    "start": "199360",
    "end": "201200"
  },
  {
    "text": "into multiple logs each of which can",
    "start": "201200",
    "end": "204000"
  },
  {
    "text": "have a separate node in the kafka",
    "start": "204000",
    "end": "205440"
  },
  {
    "text": "cluster this way",
    "start": "205440",
    "end": "207200"
  },
  {
    "text": "the work of storing messages writing new",
    "start": "207200",
    "end": "209519"
  },
  {
    "text": "messages and processing existing message",
    "start": "209519",
    "end": "211200"
  },
  {
    "text": "can be split among many nodes in the",
    "start": "211200",
    "end": "213200"
  },
  {
    "text": "cluster so partition is a key uh concept",
    "start": "213200",
    "end": "216720"
  },
  {
    "text": "and",
    "start": "216720",
    "end": "217440"
  },
  {
    "text": "achieving your high availability concept",
    "start": "217440",
    "end": "219840"
  },
  {
    "text": "in in kafka",
    "start": "219840",
    "end": "221280"
  },
  {
    "text": "then you have a partition leader which",
    "start": "221280",
    "end": "222720"
  },
  {
    "text": "handles all the producer request then",
    "start": "222720",
    "end": "224000"
  },
  {
    "text": "you have a follower which can replicate",
    "start": "224000",
    "end": "226159"
  },
  {
    "text": "as well as consume the request so",
    "start": "226159",
    "end": "229040"
  },
  {
    "text": "in total kafka cluster comprises of",
    "start": "229040",
    "end": "231840"
  },
  {
    "text": "multiple brokers brokers contains topics",
    "start": "231840",
    "end": "234720"
  },
  {
    "text": "that can retrieve and store data topics",
    "start": "234720",
    "end": "237120"
  },
  {
    "text": "are then split by partitions where the",
    "start": "237120",
    "end": "239280"
  },
  {
    "text": "data is written and then partitions",
    "start": "239280",
    "end": "240720"
  },
  {
    "text": "replicate across the topics for fault",
    "start": "240720",
    "end": "242159"
  },
  {
    "start": "242000",
    "end": "307000"
  },
  {
    "text": "tolerant",
    "start": "242159",
    "end": "243920"
  },
  {
    "text": "so",
    "start": "243920",
    "end": "244879"
  },
  {
    "text": "let's look at",
    "start": "244879",
    "end": "247519"
  },
  {
    "text": "the typical component interaction",
    "start": "247680",
    "end": "250720"
  },
  {
    "text": "so here you can see the kafka cluster",
    "start": "250720",
    "end": "253599"
  },
  {
    "text": "which we actually consider as a brokers",
    "start": "253599",
    "end": "255519"
  },
  {
    "text": "and then you have a zookeeper",
    "start": "255519",
    "end": "259359"
  },
  {
    "text": "these internal communications are",
    "start": "260079",
    "end": "262479"
  },
  {
    "text": "managed",
    "start": "262479",
    "end": "263680"
  },
  {
    "text": "with tls and then",
    "start": "263680",
    "end": "265919"
  },
  {
    "text": "if you want to build on top of it some",
    "start": "265919",
    "end": "267840"
  },
  {
    "text": "metrics so you will have a kafka",
    "start": "267840",
    "end": "269280"
  },
  {
    "text": "exporter if you want your clients to be",
    "start": "269280",
    "end": "271680"
  },
  {
    "text": "talking through http you can have a",
    "start": "271680",
    "end": "273440"
  },
  {
    "text": "kafka bridge",
    "start": "273440",
    "end": "274800"
  },
  {
    "text": "uh if you have use cases where you want",
    "start": "274800",
    "end": "277199"
  },
  {
    "text": "to uh integrate an external system",
    "start": "277199",
    "end": "279120"
  },
  {
    "text": "directly to the kafka or your kafka",
    "start": "279120",
    "end": "281440"
  },
  {
    "text": "needs to directly send the data to an",
    "start": "281440",
    "end": "283360"
  },
  {
    "text": "external system so that's where the",
    "start": "283360",
    "end": "285120"
  },
  {
    "text": "kafka connect comes into the picture we",
    "start": "285120",
    "end": "287040"
  },
  {
    "text": "can use the source connector and sense",
    "start": "287040",
    "end": "288479"
  },
  {
    "text": "connector uh to do this integration and",
    "start": "288479",
    "end": "291120"
  },
  {
    "text": "then kafka mirror uh basically allows",
    "start": "291120",
    "end": "293680"
  },
  {
    "text": "you to",
    "start": "293680",
    "end": "295680"
  },
  {
    "text": "kind of",
    "start": "295680",
    "end": "297600"
  },
  {
    "text": "replicate",
    "start": "297600",
    "end": "298880"
  },
  {
    "text": "mostly used for the data replication",
    "start": "298880",
    "end": "300560"
  },
  {
    "text": "scenarios and then yes uh that's that's",
    "start": "300560",
    "end": "303600"
  },
  {
    "text": "pretty much a typical kapha component",
    "start": "303600",
    "end": "306479"
  },
  {
    "text": "you would see",
    "start": "306479",
    "end": "308080"
  },
  {
    "start": "307000",
    "end": "382000"
  },
  {
    "text": "let's look at a traditional deployment",
    "start": "308080",
    "end": "310160"
  },
  {
    "text": "um",
    "start": "310160",
    "end": "312080"
  },
  {
    "text": "so we create we will if if",
    "start": "312080",
    "end": "314960"
  },
  {
    "text": "just imagine if there is there is no",
    "start": "314960",
    "end": "317039"
  },
  {
    "text": "stringy project how would you look like",
    "start": "317039",
    "end": "319440"
  },
  {
    "text": "how would you look at a kafka deployment",
    "start": "319440",
    "end": "321440"
  },
  {
    "text": "or a community's",
    "start": "321440",
    "end": "323120"
  },
  {
    "text": "environment so basically we will create",
    "start": "323120",
    "end": "324639"
  },
  {
    "text": "stateful sets because uh you need",
    "start": "324639",
    "end": "326800"
  },
  {
    "text": "persistent volumes you need a stateful",
    "start": "326800",
    "end": "329039"
  },
  {
    "text": "set uh in the end to make sure uh your",
    "start": "329039",
    "end": "332479"
  },
  {
    "text": "logs your commit logs what you are",
    "start": "332479",
    "end": "334479"
  },
  {
    "text": "actually storing are",
    "start": "334479",
    "end": "336000"
  },
  {
    "text": "quickly accessible so you are going to",
    "start": "336000",
    "end": "338240"
  },
  {
    "text": "create stateful sites for zookeeper and",
    "start": "338240",
    "end": "339840"
  },
  {
    "text": "broker you are going to deploy these",
    "start": "339840",
    "end": "341280"
  },
  {
    "text": "replica sets manage these endpoints for",
    "start": "341280",
    "end": "343600"
  },
  {
    "text": "external access you have to manage the",
    "start": "343600",
    "end": "345199"
  },
  {
    "text": "versions of all the resources remember",
    "start": "345199",
    "end": "347440"
  },
  {
    "text": "that for a given broker version you need",
    "start": "347440",
    "end": "350320"
  },
  {
    "text": "to have the right zookeeper version as",
    "start": "350320",
    "end": "352160"
  },
  {
    "text": "well uh then you have to build your own",
    "start": "352160",
    "end": "354400"
  },
  {
    "text": "observability stack you have to perform",
    "start": "354400",
    "end": "356080"
  },
  {
    "text": "upgrades roll backs manage the",
    "start": "356080",
    "end": "357919"
  },
  {
    "text": "scalability challenges",
    "start": "357919",
    "end": "359759"
  },
  {
    "text": "uh and then you also will have to build",
    "start": "359759",
    "end": "362080"
  },
  {
    "text": "a lot of tools to just maintain this",
    "start": "362080",
    "end": "364000"
  },
  {
    "text": "complete stack so it's complex and just",
    "start": "364000",
    "end": "366720"
  },
  {
    "text": "imagine",
    "start": "366720",
    "end": "368160"
  },
  {
    "text": "if you look at a production gate",
    "start": "368160",
    "end": "369360"
  },
  {
    "text": "scenario where you have more than 100",
    "start": "369360",
    "end": "370960"
  },
  {
    "text": "brokers",
    "start": "370960",
    "end": "372080"
  },
  {
    "text": "more than 20 000 partitions",
    "start": "372080",
    "end": "374560"
  },
  {
    "text": "how would that set up would look like",
    "start": "374560",
    "end": "376800"
  },
  {
    "text": "it's going to be very complex given that",
    "start": "376800",
    "end": "380000"
  },
  {
    "text": "you have to manage all of these",
    "start": "380000",
    "end": "381120"
  },
  {
    "text": "resources and that's where srims he",
    "start": "381120",
    "end": "382960"
  },
  {
    "start": "382000",
    "end": "487000"
  },
  {
    "text": "comes to comes to our rescue",
    "start": "382960",
    "end": "385280"
  },
  {
    "text": "the streams he provides a way to run",
    "start": "385280",
    "end": "388000"
  },
  {
    "text": "a complete apache kafka cluster in",
    "start": "388000",
    "end": "390479"
  },
  {
    "text": "kubernetes",
    "start": "390479",
    "end": "391759"
  },
  {
    "text": "it provides lots of deployment",
    "start": "391759",
    "end": "394240"
  },
  {
    "text": "configurations so for development it's",
    "start": "394240",
    "end": "396240"
  },
  {
    "text": "as easy as just running it on a kind and",
    "start": "396240",
    "end": "398880"
  },
  {
    "text": "on for production it gives many",
    "start": "398880",
    "end": "401120"
  },
  {
    "text": "capabilities such as rack awareness",
    "start": "401120",
    "end": "404800"
  },
  {
    "text": "deploying on different availability",
    "start": "404800",
    "end": "406840"
  },
  {
    "text": "zones uh applying teens tolerations",
    "start": "406840",
    "end": "410240"
  },
  {
    "text": "making sure kafka runs on dedicated",
    "start": "410240",
    "end": "412479"
  },
  {
    "text": "nodes all of those is possible",
    "start": "412479",
    "end": "414560"
  },
  {
    "text": "um",
    "start": "414560",
    "end": "415840"
  },
  {
    "text": "and then it also allows us to expose",
    "start": "415840",
    "end": "418400"
  },
  {
    "text": "kafka to end clients in a more secure",
    "start": "418400",
    "end": "422800"
  },
  {
    "text": "way it pro it provides access like an",
    "start": "422800",
    "end": "425120"
  },
  {
    "text": "output load balancer ingress and",
    "start": "425120",
    "end": "427280"
  },
  {
    "text": "openshift routes",
    "start": "427280",
    "end": "429039"
  },
  {
    "text": "also in security it provides mtls",
    "start": "429039",
    "end": "431599"
  },
  {
    "text": "cramshaw and a layer of authentication",
    "start": "431599",
    "end": "435599"
  },
  {
    "text": "plus authorization uh use cases as well",
    "start": "435599",
    "end": "439120"
  },
  {
    "text": "uh the cube native management of kaffir",
    "start": "439120",
    "end": "441360"
  },
  {
    "text": "is just not limited broker so basically",
    "start": "441360",
    "end": "443759"
  },
  {
    "text": "swimsuit allows you to manage even the",
    "start": "443759",
    "end": "446479"
  },
  {
    "text": "topics users mirror maker connect",
    "start": "446479",
    "end": "449280"
  },
  {
    "text": "everything is using the custom resources",
    "start": "449280",
    "end": "452000"
  },
  {
    "text": "so",
    "start": "452000",
    "end": "453120"
  },
  {
    "text": "it's it's kind of one stop shop for you",
    "start": "453120",
    "end": "455360"
  },
  {
    "text": "to deploy everything related to kafka",
    "start": "455360",
    "end": "458080"
  },
  {
    "text": "this means now we can get more and more",
    "start": "458080",
    "end": "460639"
  },
  {
    "text": "familiar with kafka kubernetes processes",
    "start": "460639",
    "end": "463520"
  },
  {
    "text": "and tools to manage our complete kafka",
    "start": "463520",
    "end": "465199"
  },
  {
    "text": "application so the whole idea is",
    "start": "465199",
    "end": "468639"
  },
  {
    "text": "make kafka the first class citizen in",
    "start": "468639",
    "end": "470400"
  },
  {
    "text": "the kubernetes world",
    "start": "470400",
    "end": "472720"
  },
  {
    "text": "now it gives the benefit to all of our",
    "start": "472720",
    "end": "475759"
  },
  {
    "text": "sre because for them uh they are looking",
    "start": "475759",
    "end": "478479"
  },
  {
    "text": "at kubernetes resources and now even our",
    "start": "478479",
    "end": "481280"
  },
  {
    "text": "one of our critical application is",
    "start": "481280",
    "end": "482960"
  },
  {
    "text": "behaving like a community resources only",
    "start": "482960",
    "end": "485360"
  },
  {
    "text": "so that's where the the swimsuit project",
    "start": "485360",
    "end": "487680"
  },
  {
    "start": "487000",
    "end": "538000"
  },
  {
    "text": "comes handy uh let's look at some of the",
    "start": "487680",
    "end": "490840"
  },
  {
    "text": "features it allows you to deploy and run",
    "start": "490840",
    "end": "493840"
  },
  {
    "text": "kafka clusters seamless installation",
    "start": "493840",
    "end": "496000"
  },
  {
    "text": "seamless deployment",
    "start": "496000",
    "end": "498000"
  },
  {
    "text": "upgrade process you can manage all the",
    "start": "498000",
    "end": "500319"
  },
  {
    "text": "kafka components you can manage the",
    "start": "500319",
    "end": "502240"
  },
  {
    "text": "different dependencies as well",
    "start": "502240",
    "end": "504560"
  },
  {
    "text": "whenever you're deploying a particular",
    "start": "504560",
    "end": "506000"
  },
  {
    "text": "version of a broker it will make sure it",
    "start": "506000",
    "end": "508400"
  },
  {
    "text": "will spin up the right version of the",
    "start": "508400",
    "end": "510479"
  },
  {
    "text": "zookeeper as well uh it makes sure a",
    "start": "510479",
    "end": "514080"
  },
  {
    "text": "very configurable access to kafka",
    "start": "514080",
    "end": "516959"
  },
  {
    "text": "it provides a secure way of accessing",
    "start": "516959",
    "end": "519440"
  },
  {
    "text": "upgrading kafka is",
    "start": "519440",
    "end": "521279"
  },
  {
    "text": "easy",
    "start": "521279",
    "end": "522640"
  },
  {
    "text": "apart from all of the deployment process",
    "start": "522640",
    "end": "525360"
  },
  {
    "text": "you can also use the same for",
    "start": "525360",
    "end": "527600"
  },
  {
    "text": "creating and managing topics and also",
    "start": "527600",
    "end": "529600"
  },
  {
    "text": "managing the users so",
    "start": "529600",
    "end": "531680"
  },
  {
    "text": "all in all",
    "start": "531680",
    "end": "532800"
  },
  {
    "text": "anything related to kafka is being",
    "start": "532800",
    "end": "534399"
  },
  {
    "text": "managed so you don't have to look at any",
    "start": "534399",
    "end": "536399"
  },
  {
    "text": "external tool to manage these things",
    "start": "536399",
    "end": "539279"
  },
  {
    "start": "538000",
    "end": "622000"
  },
  {
    "text": "so let's look at the design so",
    "start": "539279",
    "end": "542320"
  },
  {
    "text": "in shrimp c majority of things are",
    "start": "542320",
    "end": "544560"
  },
  {
    "text": "actually governed by operators different",
    "start": "544560",
    "end": "546640"
  },
  {
    "text": "operators",
    "start": "546640",
    "end": "547839"
  },
  {
    "text": "have their responsibilities so here if",
    "start": "547839",
    "end": "550080"
  },
  {
    "text": "you see the cluster operator is",
    "start": "550080",
    "end": "551519"
  },
  {
    "text": "responsible to",
    "start": "551519",
    "end": "553040"
  },
  {
    "text": "manage and deploy your complete kafka",
    "start": "553040",
    "end": "556399"
  },
  {
    "text": "cluster so that will be",
    "start": "556399",
    "end": "558640"
  },
  {
    "text": "responsible to upgrade your brokers",
    "start": "558640",
    "end": "561600"
  },
  {
    "text": "upgrade your zookeepers making sure you",
    "start": "561600",
    "end": "563600"
  },
  {
    "text": "are",
    "start": "563600",
    "end": "565200"
  },
  {
    "text": "having the right deployments right set",
    "start": "565200",
    "end": "567519"
  },
  {
    "text": "off",
    "start": "567519",
    "end": "569680"
  },
  {
    "text": "replicas running all of that will be",
    "start": "570320",
    "end": "572240"
  },
  {
    "text": "kind of governed by by the cluster",
    "start": "572240",
    "end": "574160"
  },
  {
    "text": "operator",
    "start": "574160",
    "end": "575279"
  },
  {
    "text": "the topic operator is pretty much",
    "start": "575279",
    "end": "576959"
  },
  {
    "text": "managing anything related to kafka",
    "start": "576959",
    "end": "579279"
  },
  {
    "text": "topics so you can actually create kafka",
    "start": "579279",
    "end": "581920"
  },
  {
    "text": "topics on the communities using the",
    "start": "581920",
    "end": "584320"
  },
  {
    "text": "cooperative crs and similar goes for the",
    "start": "584320",
    "end": "587279"
  },
  {
    "text": "user operator so",
    "start": "587279",
    "end": "589600"
  },
  {
    "text": "general now you are",
    "start": "589600",
    "end": "591839"
  },
  {
    "text": "you are actually giving the uh",
    "start": "591839",
    "end": "594399"
  },
  {
    "text": "the operators more power to actually",
    "start": "594399",
    "end": "597040"
  },
  {
    "text": "manage your kafka clusters uh on the",
    "start": "597040",
    "end": "599519"
  },
  {
    "text": "same hand you also have the isolation of",
    "start": "599519",
    "end": "601680"
  },
  {
    "text": "the rules what it offers so in fact it",
    "start": "601680",
    "end": "604880"
  },
  {
    "text": "offers that if you are not interested to",
    "start": "604880",
    "end": "606640"
  },
  {
    "text": "use user on top you can only deploy the",
    "start": "606640",
    "end": "608399"
  },
  {
    "text": "cluster operator and just use it for the",
    "start": "608399",
    "end": "610160"
  },
  {
    "text": "cluster management and use uh any other",
    "start": "610160",
    "end": "613440"
  },
  {
    "text": "kafka two links to create the topics and",
    "start": "613440",
    "end": "615519"
  },
  {
    "text": "users so",
    "start": "615519",
    "end": "617200"
  },
  {
    "text": "it does support uh these uh different uh",
    "start": "617200",
    "end": "620480"
  },
  {
    "text": "deployment options as well",
    "start": "620480",
    "end": "623120"
  },
  {
    "start": "622000",
    "end": "820000"
  },
  {
    "text": "let's look at the uh",
    "start": "623120",
    "end": "625920"
  },
  {
    "text": "the complete uh deployment architecture",
    "start": "625920",
    "end": "628240"
  },
  {
    "text": "how it would look like uh",
    "start": "628240",
    "end": "630560"
  },
  {
    "text": "in in a a particular scenario uh i i",
    "start": "630560",
    "end": "634480"
  },
  {
    "text": "want to present a more of a ten thousand",
    "start": "634480",
    "end": "636640"
  },
  {
    "text": "feet view how you would see",
    "start": "636640",
    "end": "639200"
  },
  {
    "text": "a strimsy based project getting deployed",
    "start": "639200",
    "end": "641920"
  },
  {
    "text": "on your communities cluster so",
    "start": "641920",
    "end": "644720"
  },
  {
    "text": "left hand side section actually talks",
    "start": "644720",
    "end": "646480"
  },
  {
    "text": "about uh",
    "start": "646480",
    "end": "648000"
  },
  {
    "text": "your kubernetes cluster where all of",
    "start": "648000",
    "end": "649680"
  },
  {
    "text": "your client applications are running uh",
    "start": "649680",
    "end": "652399"
  },
  {
    "text": "uh and uh",
    "start": "652399",
    "end": "654000"
  },
  {
    "text": "sorry the right hand side is actually",
    "start": "654000",
    "end": "655600"
  },
  {
    "text": "all your",
    "start": "655600",
    "end": "656640"
  },
  {
    "text": "or all your",
    "start": "656640",
    "end": "659200"
  },
  {
    "text": "services where",
    "start": "659200",
    "end": "660399"
  },
  {
    "text": "your clients are actually connecting to",
    "start": "660399",
    "end": "662240"
  },
  {
    "text": "the front side which is your actually",
    "start": "662240",
    "end": "664240"
  },
  {
    "text": "your kafka deployments so here is where",
    "start": "664240",
    "end": "668800"
  },
  {
    "text": "you will be deploying your kafka and",
    "start": "668800",
    "end": "671200"
  },
  {
    "text": "these will be running on dedicated nodes",
    "start": "671200",
    "end": "673920"
  },
  {
    "text": "so here you can see it's running on a",
    "start": "673920",
    "end": "675920"
  },
  {
    "text": "dedicated kubernetes cluster it has it",
    "start": "675920",
    "end": "678160"
  },
  {
    "text": "is under a kubernetes kafka namespace",
    "start": "678160",
    "end": "681760"
  },
  {
    "text": "and then you can see we have also",
    "start": "681760",
    "end": "684480"
  },
  {
    "text": "divided them into different availability",
    "start": "684480",
    "end": "686720"
  },
  {
    "text": "zones",
    "start": "686720",
    "end": "687680"
  },
  {
    "text": "so",
    "start": "687680",
    "end": "689120"
  },
  {
    "text": "brokers as well as zookeepers are on",
    "start": "689120",
    "end": "691279"
  },
  {
    "text": "different availability zones",
    "start": "691279",
    "end": "693440"
  },
  {
    "text": "and you can see uh",
    "start": "693440",
    "end": "695680"
  },
  {
    "text": "it has been exposed as a load balancer",
    "start": "695680",
    "end": "697920"
  },
  {
    "text": "service so",
    "start": "697920",
    "end": "699600"
  },
  {
    "text": "any services which are trying to",
    "start": "699600",
    "end": "702399"
  },
  {
    "text": "communicate with the kafka will be using",
    "start": "702399",
    "end": "704480"
  },
  {
    "text": "this low balancer service",
    "start": "704480",
    "end": "706399"
  },
  {
    "text": "of course there are different ways to",
    "start": "706399",
    "end": "708000"
  },
  {
    "text": "expose this out you can have the ideal",
    "start": "708000",
    "end": "710560"
  },
  {
    "text": "production practices to have both of",
    "start": "710560",
    "end": "712560"
  },
  {
    "text": "these",
    "start": "712560",
    "end": "714880"
  },
  {
    "text": "typically in the aws scenario both of",
    "start": "715040",
    "end": "717440"
  },
  {
    "text": "these uh vpc speared and you",
    "start": "717440",
    "end": "721360"
  },
  {
    "text": "mostly expose this nlb as an internal lp",
    "start": "721360",
    "end": "725360"
  },
  {
    "text": "so that you uh",
    "start": "725360",
    "end": "727680"
  },
  {
    "text": "so basically the internal lb will make",
    "start": "727680",
    "end": "729440"
  },
  {
    "text": "sure that no outside access is granted",
    "start": "729440",
    "end": "732320"
  },
  {
    "text": "only the applications can actually",
    "start": "732320",
    "end": "734399"
  },
  {
    "text": "communicate with these load balancers",
    "start": "734399",
    "end": "737760"
  },
  {
    "text": "similarly uh you also have a scenario",
    "start": "737760",
    "end": "741920"
  },
  {
    "text": "where",
    "start": "741920",
    "end": "744720"
  },
  {
    "text": "your sres can actually",
    "start": "744720",
    "end": "747200"
  },
  {
    "text": "communicate",
    "start": "747200",
    "end": "749120"
  },
  {
    "text": "more efficiently so here you can see",
    "start": "749120",
    "end": "752720"
  },
  {
    "text": "they will be actually directly talking",
    "start": "752720",
    "end": "754240"
  },
  {
    "text": "to the operator",
    "start": "754240",
    "end": "756320"
  },
  {
    "text": "so let's look a look at uh the use cases",
    "start": "756320",
    "end": "759519"
  },
  {
    "text": "how your kafka would would work right so",
    "start": "759519",
    "end": "763040"
  },
  {
    "text": "here you can see an operator which",
    "start": "763040",
    "end": "764560"
  },
  {
    "text": "actually goes and deploys and manages",
    "start": "764560",
    "end": "766480"
  },
  {
    "text": "your complete deployment uh your",
    "start": "766480",
    "end": "768959"
  },
  {
    "text": "operator actually talks to aps server",
    "start": "768959",
    "end": "771200"
  },
  {
    "text": "and constantly reconciles make sure you",
    "start": "771200",
    "end": "774000"
  },
  {
    "text": "have the right number of replicas of",
    "start": "774000",
    "end": "775760"
  },
  {
    "text": "your brokers and",
    "start": "775760",
    "end": "777600"
  },
  {
    "text": "your zookeepers running",
    "start": "777600",
    "end": "780720"
  },
  {
    "text": "and also",
    "start": "780720",
    "end": "782000"
  },
  {
    "text": "sres can actually run these crs and make",
    "start": "782000",
    "end": "784880"
  },
  {
    "text": "sure that they can build more tools on",
    "start": "784880",
    "end": "787519"
  },
  {
    "text": "top of it",
    "start": "787519",
    "end": "788800"
  },
  {
    "text": "kind of create a kafka connect model",
    "start": "788800",
    "end": "791600"
  },
  {
    "text": "or or a kafka mirror maker all of these",
    "start": "791600",
    "end": "794560"
  },
  {
    "text": "are kind of then honored based",
    "start": "794560",
    "end": "796720"
  },
  {
    "text": "accordingly after your kafka is deployed",
    "start": "796720",
    "end": "799680"
  },
  {
    "text": "so a majority most of the times uh",
    "start": "799680",
    "end": "802639"
  },
  {
    "text": "the zoo keeper lag load band service are",
    "start": "802639",
    "end": "804720"
  },
  {
    "text": "never exposed outside unless until there",
    "start": "804720",
    "end": "807200"
  },
  {
    "text": "are certain",
    "start": "807200",
    "end": "808399"
  },
  {
    "text": "use cases where you want to do debugging",
    "start": "808399",
    "end": "810880"
  },
  {
    "text": "otherwise mostly it is restricted uh",
    "start": "810880",
    "end": "813920"
  },
  {
    "text": "pretty much to to the sre or ops teams",
    "start": "813920",
    "end": "816560"
  },
  {
    "text": "only",
    "start": "816560",
    "end": "818880"
  },
  {
    "start": "820000",
    "end": "1072000"
  },
  {
    "text": "so what what it is uh uh holistically",
    "start": "821360",
    "end": "825440"
  },
  {
    "text": "when you say there is a complete kafka",
    "start": "825440",
    "end": "829839"
  },
  {
    "text": "system or an ecosystem which is needed",
    "start": "829920",
    "end": "832560"
  },
  {
    "text": "so",
    "start": "832560",
    "end": "834160"
  },
  {
    "text": "what shimsu offers is a complete set of",
    "start": "834160",
    "end": "837760"
  },
  {
    "text": "ecosystem",
    "start": "837760",
    "end": "839279"
  },
  {
    "text": "which is needed",
    "start": "839279",
    "end": "840959"
  },
  {
    "text": "on a production grade uh systems right",
    "start": "840959",
    "end": "843920"
  },
  {
    "text": "so",
    "start": "843920",
    "end": "845199"
  },
  {
    "text": "you can we just discussed about the",
    "start": "845199",
    "end": "847040"
  },
  {
    "text": "kafka components like broker and",
    "start": "847040",
    "end": "848639"
  },
  {
    "text": "zookeepers we also talked about a kafka",
    "start": "848639",
    "end": "851519"
  },
  {
    "text": "cluster operator which",
    "start": "851519",
    "end": "853279"
  },
  {
    "text": "kind of allows you to upgrade and manage",
    "start": "853279",
    "end": "856720"
  },
  {
    "text": "maintain your operators",
    "start": "856720",
    "end": "859199"
  },
  {
    "text": "on the other hand uh",
    "start": "859199",
    "end": "861279"
  },
  {
    "text": "you also have these kafka resources",
    "start": "861279",
    "end": "864000"
  },
  {
    "text": "operator which is",
    "start": "864000",
    "end": "867360"
  },
  {
    "text": "for for mostly creating these topics and",
    "start": "867920",
    "end": "870240"
  },
  {
    "text": "users",
    "start": "870240",
    "end": "871360"
  },
  {
    "text": "you have an observability stack uh which",
    "start": "871360",
    "end": "873760"
  },
  {
    "text": "allows you to uh generate metrics out of",
    "start": "873760",
    "end": "877040"
  },
  {
    "text": "your uh",
    "start": "877040",
    "end": "878399"
  },
  {
    "text": "resources and track those resources and",
    "start": "878399",
    "end": "880720"
  },
  {
    "text": "also create alerts on top of it",
    "start": "880720",
    "end": "882880"
  },
  {
    "text": "it has a very nice",
    "start": "882880",
    "end": "884639"
  },
  {
    "text": "set of configurations a lot of open",
    "start": "884639",
    "end": "887279"
  },
  {
    "text": "source",
    "start": "887279",
    "end": "888560"
  },
  {
    "text": "configurations are available which you",
    "start": "888560",
    "end": "890240"
  },
  {
    "text": "can actually tune with it uh shrimsi",
    "start": "890240",
    "end": "892800"
  },
  {
    "text": "comes up with lot of",
    "start": "892800",
    "end": "895199"
  },
  {
    "text": "sample grafana dashboards which we can",
    "start": "895199",
    "end": "897199"
  },
  {
    "text": "use to actually",
    "start": "897199",
    "end": "898480"
  },
  {
    "text": "export all of this uh to kind of look at",
    "start": "898480",
    "end": "901120"
  },
  {
    "text": "all of these uh metrics",
    "start": "901120",
    "end": "903760"
  },
  {
    "text": "uh then we also have a cruise control",
    "start": "903760",
    "end": "905600"
  },
  {
    "text": "capability where you can make sure all",
    "start": "905600",
    "end": "908560"
  },
  {
    "text": "of your load all of your brokers are",
    "start": "908560",
    "end": "911440"
  },
  {
    "text": "evenly balanced",
    "start": "911440",
    "end": "913360"
  },
  {
    "text": "it identifies uh anomaly detection to",
    "start": "913360",
    "end": "916560"
  },
  {
    "text": "make sure that",
    "start": "916560",
    "end": "918399"
  },
  {
    "text": "none of the brokers are put into some",
    "start": "918399",
    "end": "921279"
  },
  {
    "text": "thresholds",
    "start": "921279",
    "end": "923199"
  },
  {
    "text": "it also makes sure that uh",
    "start": "923199",
    "end": "926240"
  },
  {
    "text": "you can you can actually avoid",
    "start": "926240",
    "end": "927760"
  },
  {
    "text": "throttling based on cpu based on",
    "start": "927760",
    "end": "930320"
  },
  {
    "text": "requests based on memory based on the",
    "start": "930320",
    "end": "933440"
  },
  {
    "text": "events coming in uh you you have many",
    "start": "933440",
    "end": "936560"
  },
  {
    "text": "options based on the number of topics",
    "start": "936560",
    "end": "938560"
  },
  {
    "text": "based on number of resources being used",
    "start": "938560",
    "end": "940800"
  },
  {
    "text": "so",
    "start": "940800",
    "end": "942000"
  },
  {
    "text": "you can also make sure that any given",
    "start": "942000",
    "end": "944000"
  },
  {
    "text": "broker is not overloaded uh all of these",
    "start": "944000",
    "end": "946880"
  },
  {
    "text": "capabilities can be taken care with the",
    "start": "946880",
    "end": "949360"
  },
  {
    "text": "cruise control cruise control is another",
    "start": "949360",
    "end": "951600"
  },
  {
    "text": "interesting project from the linkedin",
    "start": "951600",
    "end": "953519"
  },
  {
    "text": "and uh",
    "start": "953519",
    "end": "955279"
  },
  {
    "text": "it kind of makes sure that your cluster",
    "start": "955279",
    "end": "958160"
  },
  {
    "text": "is",
    "start": "958160",
    "end": "958959"
  },
  {
    "text": "evenly balanced uh on a on a scale",
    "start": "958959",
    "end": "961600"
  },
  {
    "text": "system",
    "start": "961600",
    "end": "962639"
  },
  {
    "text": "then you have a connectors ecosystem",
    "start": "962639",
    "end": "964480"
  },
  {
    "text": "it's it's it's one of one of the ways",
    "start": "964480",
    "end": "966880"
  },
  {
    "text": "where you can optimize uh how you",
    "start": "966880",
    "end": "969600"
  },
  {
    "text": "communicate with external systems uh",
    "start": "969600",
    "end": "972880"
  },
  {
    "text": "uh very classic use cases if you if you",
    "start": "972880",
    "end": "975519"
  },
  {
    "text": "are actually generating events onto the",
    "start": "975519",
    "end": "977199"
  },
  {
    "text": "kafka uh and you want to actually send",
    "start": "977199",
    "end": "980000"
  },
  {
    "text": "this data back to some external system",
    "start": "980000",
    "end": "982639"
  },
  {
    "text": "you don't need any microservice you can",
    "start": "982639",
    "end": "984480"
  },
  {
    "text": "directly have a connector or kafka",
    "start": "984480",
    "end": "986480"
  },
  {
    "text": "connector uh for example here in this",
    "start": "986480",
    "end": "988880"
  },
  {
    "text": "case uh we have done for snowflake we",
    "start": "988880",
    "end": "991199"
  },
  {
    "text": "have done for neo4j where you can",
    "start": "991199",
    "end": "992959"
  },
  {
    "text": "interconnect the data right from kafka",
    "start": "992959",
    "end": "994880"
  },
  {
    "text": "events to snowflake tables all of them",
    "start": "994880",
    "end": "996880"
  },
  {
    "text": "happening directly with the help of the",
    "start": "996880",
    "end": "998320"
  },
  {
    "text": "connector uh on and on the other hand",
    "start": "998320",
    "end": "1001440"
  },
  {
    "text": "you can also mention how many number of",
    "start": "1001440",
    "end": "1003440"
  },
  {
    "text": "tasks can be running running on that",
    "start": "1003440",
    "end": "1005120"
  },
  {
    "text": "particular kafka connect model all of",
    "start": "1005120",
    "end": "1007279"
  },
  {
    "text": "those are also configurable",
    "start": "1007279",
    "end": "1010000"
  },
  {
    "text": "and then kafka bridge comes where you",
    "start": "1010000",
    "end": "1011920"
  },
  {
    "text": "want to have an http connection model uh",
    "start": "1011920",
    "end": "1014639"
  },
  {
    "text": "rather than having a",
    "start": "1014639",
    "end": "1016639"
  },
  {
    "text": "general tcp connection that is also",
    "start": "1016639",
    "end": "1018399"
  },
  {
    "text": "supported",
    "start": "1018399",
    "end": "1019519"
  },
  {
    "text": "kafka mirror maker gives you the",
    "start": "1019519",
    "end": "1020959"
  },
  {
    "text": "disaster recovery solution for your",
    "start": "1020959",
    "end": "1023040"
  },
  {
    "text": "complete kafka system uh",
    "start": "1023040",
    "end": "1025918"
  },
  {
    "text": "currently uh",
    "start": "1025919",
    "end": "1027280"
  },
  {
    "text": "the more",
    "start": "1027280",
    "end": "1028319"
  },
  {
    "text": "prevalent and used uh is kafka mirror",
    "start": "1028319",
    "end": "1031038"
  },
  {
    "text": "maker 2 which actually uses kafka",
    "start": "1031039",
    "end": "1033199"
  },
  {
    "text": "connect a design pattern to",
    "start": "1033199",
    "end": "1035520"
  },
  {
    "text": "to do this complete",
    "start": "1035520",
    "end": "1037438"
  },
  {
    "text": "disaster recovery it also supports",
    "start": "1037439",
    "end": "1039120"
  },
  {
    "text": "active active it also supports active",
    "start": "1039120",
    "end": "1040720"
  },
  {
    "text": "passive both both the ways",
    "start": "1040720",
    "end": "1043120"
  },
  {
    "text": "um and then plus you can actually build",
    "start": "1043120",
    "end": "1045360"
  },
  {
    "text": "more and more tools on top of it like",
    "start": "1045360",
    "end": "1047120"
  },
  {
    "text": "something like a kafka ui a simple kafka",
    "start": "1047120",
    "end": "1050400"
  },
  {
    "text": "cowl based ui you can actually just",
    "start": "1050400",
    "end": "1052480"
  },
  {
    "text": "embed into it now the great thing about",
    "start": "1052480",
    "end": "1055039"
  },
  {
    "text": "this is uh your complete project is uh",
    "start": "1055039",
    "end": "1058480"
  },
  {
    "text": "very much extensible shrimzi allows you",
    "start": "1058480",
    "end": "1060640"
  },
  {
    "text": "to plug and play all of these components",
    "start": "1060640",
    "end": "1062640"
  },
  {
    "text": "very easily and",
    "start": "1062640",
    "end": "1064160"
  },
  {
    "text": "kind of again on the same side have a",
    "start": "1064160",
    "end": "1067360"
  },
  {
    "text": "way to kind of",
    "start": "1067360",
    "end": "1068880"
  },
  {
    "text": "manage all of these resources on a",
    "start": "1068880",
    "end": "1070880"
  },
  {
    "text": "central plane",
    "start": "1070880",
    "end": "1072720"
  },
  {
    "start": "1072000",
    "end": "1078000"
  },
  {
    "text": "so let's let's look at the demo uh we'll",
    "start": "1072720",
    "end": "1075760"
  },
  {
    "text": "we'll see how things work",
    "start": "1075760",
    "end": "1078400"
  },
  {
    "start": "1078000",
    "end": "1539000"
  },
  {
    "text": "okay i have an operator running uh i'll",
    "start": "1078400",
    "end": "1081520"
  },
  {
    "text": "just show you my project structure just",
    "start": "1081520",
    "end": "1084480"
  },
  {
    "text": "to make sure that i have nothing",
    "start": "1084480",
    "end": "1085919"
  },
  {
    "text": "deployed",
    "start": "1085919",
    "end": "1088080"
  },
  {
    "text": "so currently my cluster looks like this",
    "start": "1088080",
    "end": "1091919"
  },
  {
    "text": "i only have an operator running and you",
    "start": "1091919",
    "end": "1095120"
  },
  {
    "text": "can see the operator logs running here",
    "start": "1095120",
    "end": "1097520"
  },
  {
    "text": "so let's go ahead and do a deployment so",
    "start": "1097520",
    "end": "1099440"
  },
  {
    "text": "i'm going to deploy crd we'll talk about",
    "start": "1099440",
    "end": "1101840"
  },
  {
    "text": "the crd in a minute",
    "start": "1101840",
    "end": "1104720"
  },
  {
    "text": "uh and let's look at the operator okay",
    "start": "1104720",
    "end": "1108240"
  },
  {
    "text": "it's some action has happened and you",
    "start": "1108240",
    "end": "1110160"
  },
  {
    "text": "can see here",
    "start": "1110160",
    "end": "1112000"
  },
  {
    "text": "it has created this let's go and look at",
    "start": "1112000",
    "end": "1115120"
  },
  {
    "text": "the activities which are happening here",
    "start": "1115120",
    "end": "1118400"
  },
  {
    "text": "so it has started to create a zookeeper",
    "start": "1118400",
    "end": "1121200"
  },
  {
    "text": "first and",
    "start": "1121200",
    "end": "1122880"
  },
  {
    "text": "you will see that with with the crd",
    "start": "1122880",
    "end": "1125840"
  },
  {
    "text": "we are making sure uh",
    "start": "1125840",
    "end": "1128559"
  },
  {
    "text": "your deployments are streamlined it is",
    "start": "1128559",
    "end": "1130720"
  },
  {
    "text": "sequentialized uh you will first deploy",
    "start": "1130720",
    "end": "1133360"
  },
  {
    "text": "the zookeeper and then only you will",
    "start": "1133360",
    "end": "1134960"
  },
  {
    "text": "deploy the brokers",
    "start": "1134960",
    "end": "1136960"
  },
  {
    "text": "and all of this is taken care by the uh",
    "start": "1136960",
    "end": "1140160"
  },
  {
    "text": "by the shrimp itself you can see now the",
    "start": "1140160",
    "end": "1143280"
  },
  {
    "text": "zookeeper is running and it will",
    "start": "1143280",
    "end": "1146080"
  },
  {
    "text": "schedule the broker",
    "start": "1146080",
    "end": "1149039"
  },
  {
    "text": "immediately and we can actually also",
    "start": "1149039",
    "end": "1151120"
  },
  {
    "text": "look at yeah you can see the broker has",
    "start": "1151120",
    "end": "1152960"
  },
  {
    "text": "also started",
    "start": "1152960",
    "end": "1154480"
  },
  {
    "text": "uh another way to look at this is just",
    "start": "1154480",
    "end": "1157440"
  },
  {
    "text": "by doing uh cube cattle get kafka and",
    "start": "1157440",
    "end": "1161280"
  },
  {
    "text": "basically uh you are now able to track",
    "start": "1161280",
    "end": "1164559"
  },
  {
    "text": "kafka resources using a kafka cr",
    "start": "1164559",
    "end": "1167679"
  },
  {
    "text": "now this is a one-stop shop for me to",
    "start": "1167679",
    "end": "1170240"
  },
  {
    "text": "look at everything related to kafka this",
    "start": "1170240",
    "end": "1172720"
  },
  {
    "text": "says that i have i need one desired",
    "start": "1172720",
    "end": "1175039"
  },
  {
    "text": "kafka broker and one desired",
    "start": "1175039",
    "end": "1177679"
  },
  {
    "text": "replica for my zookeeper and that's it",
    "start": "1177679",
    "end": "1180080"
  },
  {
    "text": "it gives me something called as ready",
    "start": "1180080",
    "end": "1181679"
  },
  {
    "text": "and warnings unless until it's not ready",
    "start": "1181679",
    "end": "1184000"
  },
  {
    "text": "i will not uh allow the connections to",
    "start": "1184000",
    "end": "1186080"
  },
  {
    "text": "be open to my end clients",
    "start": "1186080",
    "end": "1188240"
  },
  {
    "text": "if there are warnings i can make sure",
    "start": "1188240",
    "end": "1189760"
  },
  {
    "text": "that unless until i fix those warnings i",
    "start": "1189760",
    "end": "1191840"
  },
  {
    "text": "will not allow i will not make sure my",
    "start": "1191840",
    "end": "1193840"
  },
  {
    "text": "connections are open",
    "start": "1193840",
    "end": "1195360"
  },
  {
    "text": "so uh here it will we will make sure",
    "start": "1195360",
    "end": "1197919"
  },
  {
    "text": "that the zookeeper kafka is running and",
    "start": "1197919",
    "end": "1200400"
  },
  {
    "text": "then we are also running an entity",
    "start": "1200400",
    "end": "1202400"
  },
  {
    "text": "operator entity operator is nothing but",
    "start": "1202400",
    "end": "1204080"
  },
  {
    "text": "basically it's it has three containers",
    "start": "1204080",
    "end": "1206559"
  },
  {
    "text": "which are like a topic operator your",
    "start": "1206559",
    "end": "1209280"
  },
  {
    "text": "uh user operator and other uh side cars",
    "start": "1209280",
    "end": "1213039"
  },
  {
    "text": "uh which which kind of combine together",
    "start": "1213039",
    "end": "1215679"
  },
  {
    "text": "as an entity operator unless until all",
    "start": "1215679",
    "end": "1217919"
  },
  {
    "text": "of these are running this will never",
    "start": "1217919",
    "end": "1219760"
  },
  {
    "text": "show up as ready",
    "start": "1219760",
    "end": "1221919"
  },
  {
    "text": "and uh basically if i just do a describe",
    "start": "1221919",
    "end": "1226000"
  },
  {
    "text": "on this so you can actually see uh the",
    "start": "1226000",
    "end": "1229120"
  },
  {
    "text": "complete crd here uh we'll go in detail",
    "start": "1229120",
    "end": "1232159"
  },
  {
    "text": "about the crd but",
    "start": "1232159",
    "end": "1233919"
  },
  {
    "text": "the status will always make sure that",
    "start": "1233919",
    "end": "1236480"
  },
  {
    "text": "unless and until this is not met uh we",
    "start": "1236480",
    "end": "1239280"
  },
  {
    "text": "will not open up the connection",
    "start": "1239280",
    "end": "1241840"
  },
  {
    "text": "uh",
    "start": "1241840",
    "end": "1242640"
  },
  {
    "text": "here the deployment is still in progress",
    "start": "1242640",
    "end": "1244400"
  },
  {
    "text": "yeah i can see that",
    "start": "1244400",
    "end": "1245840"
  },
  {
    "text": "this is also done now if i",
    "start": "1245840",
    "end": "1249039"
  },
  {
    "text": "try to get kafka i should see that it is",
    "start": "1249039",
    "end": "1252640"
  },
  {
    "text": "already ready",
    "start": "1252640",
    "end": "1255280"
  },
  {
    "text": "everything looks good",
    "start": "1255280",
    "end": "1257360"
  },
  {
    "text": "let's look at all the components what",
    "start": "1257360",
    "end": "1259280"
  },
  {
    "text": "are all there available",
    "start": "1259280",
    "end": "1261600"
  },
  {
    "text": "and",
    "start": "1261600",
    "end": "1262480"
  },
  {
    "text": "we can see",
    "start": "1262480",
    "end": "1263760"
  },
  {
    "text": "uh",
    "start": "1263760",
    "end": "1266000"
  },
  {
    "text": "it creates a set of pods",
    "start": "1266159",
    "end": "1269120"
  },
  {
    "text": "uh you can see these are the three parts",
    "start": "1269120",
    "end": "1271760"
  },
  {
    "text": "one is the broker the other zookeeper",
    "start": "1271760",
    "end": "1274320"
  },
  {
    "text": "and this is the entity operator",
    "start": "1274320",
    "end": "1277840"
  },
  {
    "text": "it has created certain load balancers",
    "start": "1278320",
    "end": "1281600"
  },
  {
    "text": "and one load balancer is for an external",
    "start": "1281600",
    "end": "1284000"
  },
  {
    "text": "bootstrap and the other one is for the",
    "start": "1284000",
    "end": "1285919"
  },
  {
    "text": "kafka",
    "start": "1285919",
    "end": "1287760"
  },
  {
    "text": "broker and then you can see uh an entity",
    "start": "1287760",
    "end": "1290880"
  },
  {
    "text": "operator which is a deployment that's",
    "start": "1290880",
    "end": "1292799"
  },
  {
    "text": "the part for which you can see and these",
    "start": "1292799",
    "end": "1294720"
  },
  {
    "text": "are the two stateful sets actually the",
    "start": "1294720",
    "end": "1296480"
  },
  {
    "text": "kafka and zookeeper both are",
    "start": "1296480",
    "end": "1297600"
  },
  {
    "text": "straightforward so basically just with",
    "start": "1297600",
    "end": "1299280"
  },
  {
    "text": "the crd we have actually",
    "start": "1299280",
    "end": "1302000"
  },
  {
    "text": "deployed a complete kafka cluster and uh",
    "start": "1302000",
    "end": "1305120"
  },
  {
    "text": "you can actually see all of this",
    "start": "1305120",
    "end": "1306400"
  },
  {
    "text": "resources available you can just keep on",
    "start": "1306400",
    "end": "1308640"
  },
  {
    "text": "increasing the number of pods number of",
    "start": "1308640",
    "end": "1310880"
  },
  {
    "text": "brokers and number of zookeepers all of",
    "start": "1310880",
    "end": "1312640"
  },
  {
    "text": "this will get added and you you have to",
    "start": "1312640",
    "end": "1314720"
  },
  {
    "text": "manage only the crd let's look let's",
    "start": "1314720",
    "end": "1316799"
  },
  {
    "text": "look at the crd for a minute um",
    "start": "1316799",
    "end": "1321200"
  },
  {
    "text": "yeah",
    "start": "1324880",
    "end": "1325679"
  },
  {
    "text": "so",
    "start": "1325679",
    "end": "1327919"
  },
  {
    "text": "so this is this is the crd we have used",
    "start": "1329120",
    "end": "1331280"
  },
  {
    "text": "and uh here in the cid you can see",
    "start": "1331280",
    "end": "1334559"
  },
  {
    "text": "what what all we have uh",
    "start": "1334559",
    "end": "1337360"
  },
  {
    "text": "we have an external bootstrap uh this is",
    "start": "1337360",
    "end": "1339679"
  },
  {
    "text": "the particular",
    "start": "1339679",
    "end": "1342159"
  },
  {
    "text": "kind of an endpoint which we expose out",
    "start": "1342159",
    "end": "1346400"
  },
  {
    "text": "we have a support for nlp we have",
    "start": "1346799",
    "end": "1348960"
  },
  {
    "text": "support for making internally exposed",
    "start": "1348960",
    "end": "1350640"
  },
  {
    "text": "rather than making it outside similarly",
    "start": "1350640",
    "end": "1353120"
  },
  {
    "text": "uh we have affinity strategies uh we",
    "start": "1353120",
    "end": "1356240"
  },
  {
    "text": "have like part affinity and definite and",
    "start": "1356240",
    "end": "1358320"
  },
  {
    "text": "just remember this is a kind of kafka",
    "start": "1358320",
    "end": "1360400"
  },
  {
    "text": "this is the cr which we're using coming",
    "start": "1360400",
    "end": "1362799"
  },
  {
    "text": "from the api version kafka from cio v1",
    "start": "1362799",
    "end": "1365039"
  },
  {
    "text": "beta2",
    "start": "1365039",
    "end": "1366320"
  },
  {
    "text": "uh",
    "start": "1366320",
    "end": "1367600"
  },
  {
    "text": "and then we assign some replicas uh you",
    "start": "1367600",
    "end": "1370400"
  },
  {
    "text": "can just update these replicas and",
    "start": "1370400",
    "end": "1372000"
  },
  {
    "text": "redeploy and there will be a new uh",
    "start": "1372000",
    "end": "1374720"
  },
  {
    "text": "number",
    "start": "1374720",
    "end": "1375600"
  },
  {
    "text": "there will be new brokers coming up",
    "start": "1375600",
    "end": "1378240"
  },
  {
    "text": "uh",
    "start": "1378240",
    "end": "1379679"
  },
  {
    "text": "you have different options of exposing",
    "start": "1379679",
    "end": "1382159"
  },
  {
    "text": "the end points uh we never we never",
    "start": "1382159",
    "end": "1385679"
  },
  {
    "text": "recommend something like a tls falls",
    "start": "1385679",
    "end": "1390080"
  },
  {
    "text": "kind of a",
    "start": "1390080",
    "end": "1391280"
  },
  {
    "text": "unsecured",
    "start": "1391280",
    "end": "1393200"
  },
  {
    "text": "load balancer for for external usage we",
    "start": "1393200",
    "end": "1396159"
  },
  {
    "text": "we always recommend something like an",
    "start": "1396159",
    "end": "1398240"
  },
  {
    "text": "mtls base it's just as simple as making",
    "start": "1398240",
    "end": "1401200"
  },
  {
    "text": "this as true all the certificate",
    "start": "1401200",
    "end": "1402640"
  },
  {
    "text": "management will be managed by shrimpsee",
    "start": "1402640",
    "end": "1405120"
  },
  {
    "text": "similarly you can have a scram shaft",
    "start": "1405120",
    "end": "1407520"
  },
  {
    "text": "haven to base mechanism as well or a",
    "start": "1407520",
    "end": "1409600"
  },
  {
    "text": "combination of tls with authorization as",
    "start": "1409600",
    "end": "1411919"
  },
  {
    "text": "well",
    "start": "1411919",
    "end": "1412960"
  },
  {
    "text": "um you the interesting thing is you can",
    "start": "1412960",
    "end": "1415600"
  },
  {
    "text": "use storage as jbodz and make sure you",
    "start": "1415600",
    "end": "1418559"
  },
  {
    "text": "can have multiple volumes available with",
    "start": "1418559",
    "end": "1420640"
  },
  {
    "text": "it uh so as and when you have more and",
    "start": "1420640",
    "end": "1423360"
  },
  {
    "text": "more load coming in you can just add",
    "start": "1423360",
    "end": "1425039"
  },
  {
    "text": "number of volumes and these volumes will",
    "start": "1425039",
    "end": "1426799"
  },
  {
    "text": "get attached to your uh existing brokers",
    "start": "1426799",
    "end": "1430559"
  },
  {
    "text": "and all of the configuration whatever is",
    "start": "1430559",
    "end": "1432480"
  },
  {
    "text": "possible which is supported by kafka you",
    "start": "1432480",
    "end": "1434400"
  },
  {
    "text": "can actually mention all of these here",
    "start": "1434400",
    "end": "1436320"
  },
  {
    "text": "and shims they will inject this as part",
    "start": "1436320",
    "end": "1438159"
  },
  {
    "text": "of your broker and your zookeeper",
    "start": "1438159",
    "end": "1439760"
  },
  {
    "text": "deployments so any time or you make any",
    "start": "1439760",
    "end": "1442559"
  },
  {
    "text": "changes here the rolling update happens",
    "start": "1442559",
    "end": "1444159"
  },
  {
    "text": "for all of these parts uh it also",
    "start": "1444159",
    "end": "1446320"
  },
  {
    "text": "supports uh",
    "start": "1446320",
    "end": "1448000"
  },
  {
    "text": "making sure that you can have deployment",
    "start": "1448000",
    "end": "1449840"
  },
  {
    "text": "on a dedicated node groups as well you",
    "start": "1449840",
    "end": "1451600"
  },
  {
    "text": "can have teams you can have tolerations",
    "start": "1451600",
    "end": "1453200"
  },
  {
    "text": "all of that is also supported",
    "start": "1453200",
    "end": "1455200"
  },
  {
    "text": "similarly for zookeeper as well we we",
    "start": "1455200",
    "end": "1457679"
  },
  {
    "text": "saw all of these and these are the",
    "start": "1457679",
    "end": "1459600"
  },
  {
    "text": "entity operator which contains our user",
    "start": "1459600",
    "end": "1461360"
  },
  {
    "text": "topic operator and a user operator",
    "start": "1461360",
    "end": "1463919"
  },
  {
    "text": "and then we have also used a cruise",
    "start": "1463919",
    "end": "1465440"
  },
  {
    "text": "control to make sure that we can provide",
    "start": "1465440",
    "end": "1468320"
  },
  {
    "text": "some capacities and make sure that your",
    "start": "1468320",
    "end": "1470320"
  },
  {
    "text": "ports never go beyond these capacities",
    "start": "1470320",
    "end": "1472400"
  },
  {
    "text": "and if it goes it kind of then",
    "start": "1472400",
    "end": "1475360"
  },
  {
    "text": "gives you some hard goals and give you",
    "start": "1475360",
    "end": "1477600"
  },
  {
    "text": "some suggestions and optimization goals",
    "start": "1477600",
    "end": "1479600"
  },
  {
    "text": "based on which you can actually",
    "start": "1479600",
    "end": "1481760"
  },
  {
    "text": "trigger those optimization plans so this",
    "start": "1481760",
    "end": "1484400"
  },
  {
    "text": "is a single single blueprint for me to",
    "start": "1484400",
    "end": "1487039"
  },
  {
    "text": "deploy a complete kafka rather than",
    "start": "1487039",
    "end": "1489279"
  },
  {
    "text": "looking at different resources i play",
    "start": "1489279",
    "end": "1490880"
  },
  {
    "text": "around with these values and i can have",
    "start": "1490880",
    "end": "1493600"
  },
  {
    "text": "my uh my kafka deployment uh",
    "start": "1493600",
    "end": "1496880"
  },
  {
    "text": "kind of triggering based on the change",
    "start": "1496880",
    "end": "1498640"
  },
  {
    "text": "happening on this because for any change",
    "start": "1498640",
    "end": "1501039"
  },
  {
    "text": "event there is a reconciliation",
    "start": "1501039",
    "end": "1502640"
  },
  {
    "text": "happening by the cluster operator",
    "start": "1502640",
    "end": "1505279"
  },
  {
    "text": "so uh that's what i wanted to present in",
    "start": "1505279",
    "end": "1507520"
  },
  {
    "text": "the demo these are the references",
    "start": "1507520",
    "end": "1511279"
  },
  {
    "text": "we have you can look at the website the",
    "start": "1511279",
    "end": "1512960"
  },
  {
    "text": "github project uh you can look at the",
    "start": "1512960",
    "end": "1516320"
  },
  {
    "text": "uh the",
    "start": "1516320",
    "end": "1517520"
  },
  {
    "text": "the slack channel streamsy on the cncf",
    "start": "1517520",
    "end": "1520000"
  },
  {
    "text": "project",
    "start": "1520000",
    "end": "1520960"
  },
  {
    "text": "uh",
    "start": "1520960",
    "end": "1521840"
  },
  {
    "text": "we will will help you if you have any",
    "start": "1521840",
    "end": "1524480"
  },
  {
    "text": "interesting use case will help you to",
    "start": "1524480",
    "end": "1526400"
  },
  {
    "text": "get you guys on boarded with kafka",
    "start": "1526400",
    "end": "1529600"
  },
  {
    "text": "that's what i had that's that's what i",
    "start": "1529600",
    "end": "1531440"
  },
  {
    "text": "had to cover uh thank you so much",
    "start": "1531440",
    "end": "1535200"
  },
  {
    "text": "please",
    "start": "1535200",
    "end": "1536240"
  },
  {
    "text": "ask questions if you have any i'll be",
    "start": "1536240",
    "end": "1538240"
  },
  {
    "text": "happy to answer them",
    "start": "1538240",
    "end": "1540960"
  }
]