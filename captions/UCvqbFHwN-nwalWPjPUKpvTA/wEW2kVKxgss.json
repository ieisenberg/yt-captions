[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "hi everybody",
    "start": "2080",
    "end": "4080"
  },
  {
    "text": "thanks for joining my talk it's great to",
    "start": "4080",
    "end": "6240"
  },
  {
    "text": "be able to talk to you about the cert",
    "start": "6240",
    "end": "7359"
  },
  {
    "text": "manager project",
    "start": "7359",
    "end": "8880"
  },
  {
    "text": "this year it's virtual but hopefully in",
    "start": "8880",
    "end": "11200"
  },
  {
    "text": "the not too distant future",
    "start": "11200",
    "end": "12559"
  },
  {
    "text": "we'll all be able to meet up again soon",
    "start": "12559",
    "end": "14639"
  },
  {
    "text": "and meet in person",
    "start": "14639",
    "end": "16720"
  },
  {
    "text": "i'm going to talk to you today about all",
    "start": "16720",
    "end": "18480"
  },
  {
    "text": "the various ways in which you can use",
    "start": "18480",
    "end": "20000"
  },
  {
    "text": "set manager",
    "start": "20000",
    "end": "21039"
  },
  {
    "text": "beyond ingress i'm",
    "start": "21039",
    "end": "24400"
  },
  {
    "text": "matt bates i'm from jet stack with the",
    "start": "24400",
    "end": "26400"
  },
  {
    "text": "original creators of the project",
    "start": "26400",
    "end": "28000"
  },
  {
    "start": "28000",
    "end": "127000"
  },
  {
    "text": "and together with now 280 contributors",
    "start": "28000",
    "end": "31119"
  },
  {
    "text": "in the community",
    "start": "31119",
    "end": "32160"
  },
  {
    "text": "we've got set manager to where it is",
    "start": "32160",
    "end": "34160"
  },
  {
    "text": "today",
    "start": "34160",
    "end": "35440"
  },
  {
    "text": "sub manager is effectively a kubernetes",
    "start": "35440",
    "end": "37440"
  },
  {
    "text": "add-on or extension",
    "start": "37440",
    "end": "39120"
  },
  {
    "text": "but it extends the kubernetes api and",
    "start": "39120",
    "end": "41760"
  },
  {
    "text": "adds support",
    "start": "41760",
    "end": "42719"
  },
  {
    "text": "for certificates and certificate",
    "start": "42719",
    "end": "44480"
  },
  {
    "text": "authorities it means that you can manage",
    "start": "44480",
    "end": "47520"
  },
  {
    "text": "x509 tls certificates that's the",
    "start": "47520",
    "end": "50719"
  },
  {
    "text": "complete life cycle",
    "start": "50719",
    "end": "51920"
  },
  {
    "text": "the issuance and renewal and use those",
    "start": "51920",
    "end": "54320"
  },
  {
    "text": "certificates in your applications",
    "start": "54320",
    "end": "56399"
  },
  {
    "text": "it has wide adoption and lots of",
    "start": "56399",
    "end": "58559"
  },
  {
    "text": "contribution from the community",
    "start": "58559",
    "end": "60320"
  },
  {
    "text": "and as of last year we donated the",
    "start": "60320",
    "end": "62559"
  },
  {
    "text": "project to the cncf so it's now part of",
    "start": "62559",
    "end": "64960"
  },
  {
    "text": "the sandbox",
    "start": "64960",
    "end": "66479"
  },
  {
    "text": "it's got integration with a variety of",
    "start": "66479",
    "end": "69040"
  },
  {
    "text": "different public",
    "start": "69040",
    "end": "70159"
  },
  {
    "text": "and private pki providers both in the",
    "start": "70159",
    "end": "72960"
  },
  {
    "text": "core of the project",
    "start": "72960",
    "end": "74240"
  },
  {
    "text": "but also a so-called external issuers",
    "start": "74240",
    "end": "76479"
  },
  {
    "text": "and we're going to look at that",
    "start": "76479",
    "end": "77680"
  },
  {
    "text": "in the talk today briefly",
    "start": "77680",
    "end": "80799"
  },
  {
    "text": "how does certain manager work as i said",
    "start": "80799",
    "end": "82799"
  },
  {
    "text": "search manager is an extension or an",
    "start": "82799",
    "end": "84400"
  },
  {
    "text": "add-on",
    "start": "84400",
    "end": "85119"
  },
  {
    "text": "it provides a number of additional",
    "start": "85119",
    "end": "86799"
  },
  {
    "text": "resources so called custom",
    "start": "86799",
    "end": "88880"
  },
  {
    "text": "resources crds and provides them",
    "start": "88880",
    "end": "92400"
  },
  {
    "text": "to the key on top of the kubernetes api",
    "start": "92400",
    "end": "95280"
  },
  {
    "text": "these represent",
    "start": "95280",
    "end": "96159"
  },
  {
    "text": "certificates and certificate authorities",
    "start": "96159",
    "end": "98799"
  },
  {
    "text": "we can refer to that as an issuer",
    "start": "98799",
    "end": "101840"
  },
  {
    "text": "this provides first-class support for",
    "start": "101840",
    "end": "104000"
  },
  {
    "text": "those in the kubernetes api and you get",
    "start": "104000",
    "end": "105680"
  },
  {
    "text": "all of",
    "start": "105680",
    "end": "106159"
  },
  {
    "text": "the advantages of being able to manage",
    "start": "106159",
    "end": "107840"
  },
  {
    "text": "those resources declaratively much like",
    "start": "107840",
    "end": "109759"
  },
  {
    "text": "you manage",
    "start": "109759",
    "end": "110320"
  },
  {
    "text": "pods and deployments set manager has a",
    "start": "110320",
    "end": "113520"
  },
  {
    "text": "controller",
    "start": "113520",
    "end": "114240"
  },
  {
    "text": "that manages the lifecycle of those",
    "start": "114240",
    "end": "116000"
  },
  {
    "text": "resources and importantly is able to",
    "start": "116000",
    "end": "118159"
  },
  {
    "text": "provide the automation",
    "start": "118159",
    "end": "119600"
  },
  {
    "text": "of those certificates automating the",
    "start": "119600",
    "end": "122159"
  },
  {
    "text": "fetching of those certificates and",
    "start": "122159",
    "end": "123840"
  },
  {
    "text": "importantly the renewal of those as well",
    "start": "123840",
    "end": "128399"
  },
  {
    "start": "127000",
    "end": "165000"
  },
  {
    "text": "is most commonly used to secure",
    "start": "128399",
    "end": "130640"
  },
  {
    "text": "ingresses",
    "start": "130640",
    "end": "131840"
  },
  {
    "text": "and you can see here it's really quick",
    "start": "131840",
    "end": "134000"
  },
  {
    "text": "and easy",
    "start": "134000",
    "end": "135040"
  },
  {
    "text": "to add a tls certificate to an ingress",
    "start": "135040",
    "end": "138239"
  },
  {
    "text": "it's important by adding in this case",
    "start": "138239",
    "end": "140560"
  },
  {
    "text": "the annotation",
    "start": "140560",
    "end": "142239"
  },
  {
    "text": "which references where you want the",
    "start": "142239",
    "end": "144239"
  },
  {
    "text": "certificate to be obtained from",
    "start": "144239",
    "end": "145840"
  },
  {
    "text": "so in this case it references the let's",
    "start": "145840",
    "end": "148319"
  },
  {
    "text": "encrypt staging",
    "start": "148319",
    "end": "149920"
  },
  {
    "text": "issuer that i have in my cluster and it",
    "start": "149920",
    "end": "152640"
  },
  {
    "text": "also",
    "start": "152640",
    "end": "153519"
  },
  {
    "text": "requires you to specify the secret",
    "start": "153519",
    "end": "156640"
  },
  {
    "text": "name there as well so the secret will",
    "start": "156640",
    "end": "158959"
  },
  {
    "text": "store the certificates obtained from",
    "start": "158959",
    "end": "160800"
  },
  {
    "text": "let's encrypt in my",
    "start": "160800",
    "end": "162080"
  },
  {
    "text": "ingress so really really simple",
    "start": "162080",
    "end": "165599"
  },
  {
    "start": "165000",
    "end": "228000"
  },
  {
    "text": "how does this work under the hood well",
    "start": "165599",
    "end": "167760"
  },
  {
    "text": "set manager watches for ingresses using",
    "start": "167760",
    "end": "170239"
  },
  {
    "text": "its",
    "start": "170239",
    "end": "170720"
  },
  {
    "text": "ingress shim component as part of the",
    "start": "170720",
    "end": "172640"
  },
  {
    "text": "cert manager controller",
    "start": "172640",
    "end": "174239"
  },
  {
    "text": "and is then able to create a certificate",
    "start": "174239",
    "end": "177599"
  },
  {
    "text": "which is backed by a point in time",
    "start": "177599",
    "end": "179280"
  },
  {
    "text": "certificate request",
    "start": "179280",
    "end": "180959"
  },
  {
    "text": "which encodes the certificate signing",
    "start": "180959",
    "end": "182879"
  },
  {
    "text": "request which",
    "start": "182879",
    "end": "184000"
  },
  {
    "text": "it then submits to your ca of choice",
    "start": "184000",
    "end": "187599"
  },
  {
    "text": "so in my particular case it was the",
    "start": "187599",
    "end": "189360"
  },
  {
    "text": "let's encrypt staging",
    "start": "189360",
    "end": "191440"
  },
  {
    "text": "endpoint and that's the point in which",
    "start": "191440",
    "end": "193280"
  },
  {
    "text": "cert manager is able to automate",
    "start": "193280",
    "end": "195440"
  },
  {
    "text": "the acme flow there's additional",
    "start": "195440",
    "end": "198080"
  },
  {
    "text": "resources that you can see there the",
    "start": "198080",
    "end": "200239"
  },
  {
    "text": "order and the challenge but effectively",
    "start": "200239",
    "end": "203200"
  },
  {
    "text": "all of that is automated for you",
    "start": "203200",
    "end": "205120"
  },
  {
    "text": "and it results in a signed certificate",
    "start": "205120",
    "end": "208000"
  },
  {
    "text": "from the certificate authority",
    "start": "208000",
    "end": "209840"
  },
  {
    "text": "which is placed into a secret and then",
    "start": "209840",
    "end": "212640"
  },
  {
    "text": "consumed",
    "start": "212640",
    "end": "213360"
  },
  {
    "text": "by your application in the case of an",
    "start": "213360",
    "end": "216400"
  },
  {
    "text": "ingress of course that's most likely to",
    "start": "216400",
    "end": "217840"
  },
  {
    "text": "be an ingress controller",
    "start": "217840",
    "end": "218959"
  },
  {
    "text": "something like nginx for instance and",
    "start": "218959",
    "end": "222239"
  },
  {
    "text": "it's then able to serve your application",
    "start": "222239",
    "end": "225360"
  },
  {
    "text": "securely",
    "start": "225360",
    "end": "227840"
  },
  {
    "start": "228000",
    "end": "281000"
  },
  {
    "text": "you can also use these resources more",
    "start": "228560",
    "end": "230560"
  },
  {
    "text": "directly",
    "start": "230560",
    "end": "231680"
  },
  {
    "text": "so the ingress shim automatically",
    "start": "231680",
    "end": "234400"
  },
  {
    "text": "provides that",
    "start": "234400",
    "end": "235280"
  },
  {
    "text": "automation just based on some",
    "start": "235280",
    "end": "236879"
  },
  {
    "text": "annotations that you add to the resource",
    "start": "236879",
    "end": "238959"
  },
  {
    "text": "but you can indeed tap into the",
    "start": "238959",
    "end": "241280"
  },
  {
    "text": "resources that",
    "start": "241280",
    "end": "242400"
  },
  {
    "text": "certain manager provides that is that of",
    "start": "242400",
    "end": "245040"
  },
  {
    "text": "the certificate",
    "start": "245040",
    "end": "246159"
  },
  {
    "text": "and the certificate request so the",
    "start": "246159",
    "end": "248400"
  },
  {
    "text": "certificate effectively is",
    "start": "248400",
    "end": "249760"
  },
  {
    "text": "a more human readable like",
    "start": "249760",
    "end": "251439"
  },
  {
    "text": "representation of the certificate",
    "start": "251439",
    "end": "253599"
  },
  {
    "text": "that's the one that you can see and use",
    "start": "253599",
    "end": "256320"
  },
  {
    "text": "and",
    "start": "256320",
    "end": "258000"
  },
  {
    "text": "use the api for indeed use the shell",
    "start": "258000",
    "end": "261199"
  },
  {
    "text": "this difficult request is like a point",
    "start": "261199",
    "end": "262960"
  },
  {
    "text": "in time request",
    "start": "262960",
    "end": "264479"
  },
  {
    "text": "that's made for an x509 certificate from",
    "start": "264479",
    "end": "266720"
  },
  {
    "text": "an issuer",
    "start": "266720",
    "end": "267520"
  },
  {
    "text": "and this is typically consumed by as i",
    "start": "267520",
    "end": "269280"
  },
  {
    "text": "said here by managed",
    "start": "269280",
    "end": "271199"
  },
  {
    "text": "by controllers or other systems you see",
    "start": "271199",
    "end": "274479"
  },
  {
    "text": "the certain",
    "start": "274479",
    "end": "275040"
  },
  {
    "text": "controller there is responsible for",
    "start": "275040",
    "end": "276479"
  },
  {
    "text": "reconciliating those certificate",
    "start": "276479",
    "end": "278400"
  },
  {
    "text": "and certificate request resources",
    "start": "278400",
    "end": "282240"
  },
  {
    "start": "281000",
    "end": "331000"
  },
  {
    "text": "but of course there are lots of other",
    "start": "282240",
    "end": "283680"
  },
  {
    "text": "certificates to managing kubernetes it's",
    "start": "283680",
    "end": "285360"
  },
  {
    "text": "not just the ingress certificates there",
    "start": "285360",
    "end": "286800"
  },
  {
    "text": "are many stuff goods",
    "start": "286800",
    "end": "288400"
  },
  {
    "text": "across a cluster typically that you may",
    "start": "288400",
    "end": "291440"
  },
  {
    "text": "wish to automate",
    "start": "291440",
    "end": "292880"
  },
  {
    "text": "using cert manager and i've just",
    "start": "292880",
    "end": "294960"
  },
  {
    "text": "highlighted some of these and we're",
    "start": "294960",
    "end": "296080"
  },
  {
    "text": "going to talk",
    "start": "296080",
    "end": "296800"
  },
  {
    "text": "about a number of these different use",
    "start": "296800",
    "end": "298320"
  },
  {
    "text": "cases in this talk",
    "start": "298320",
    "end": "301280"
  },
  {
    "text": "ingress as i mentioned pod to pod",
    "start": "301759",
    "end": "305520"
  },
  {
    "text": "which might be without we have or indeed",
    "start": "305520",
    "end": "307440"
  },
  {
    "text": "without a surface mesh and we're going",
    "start": "307440",
    "end": "309199"
  },
  {
    "text": "to look at both",
    "start": "309199",
    "end": "310320"
  },
  {
    "text": "in this talk today you may also wish to",
    "start": "310320",
    "end": "312560"
  },
  {
    "text": "secure",
    "start": "312560",
    "end": "313440"
  },
  {
    "text": "a cluster and the control plane and the",
    "start": "313440",
    "end": "316160"
  },
  {
    "text": "data plane",
    "start": "316160",
    "end": "318320"
  },
  {
    "text": "there are also a number of web hooks",
    "start": "318320",
    "end": "320160"
  },
  {
    "text": "that you may have",
    "start": "320160",
    "end": "321520"
  },
  {
    "text": "that are used for admission you wish to",
    "start": "321520",
    "end": "324000"
  },
  {
    "text": "secure",
    "start": "324000",
    "end": "325039"
  },
  {
    "text": "we'll look at how serve manager can be",
    "start": "325039",
    "end": "326880"
  },
  {
    "text": "used in almost all of these cases",
    "start": "326880",
    "end": "330960"
  },
  {
    "start": "331000",
    "end": "373000"
  },
  {
    "text": "we often get asked in the community how",
    "start": "331919",
    "end": "335120"
  },
  {
    "text": "you can use",
    "start": "335120",
    "end": "336080"
  },
  {
    "text": "cert manager in order to uh secure",
    "start": "336080",
    "end": "339520"
  },
  {
    "text": "you know put to pod communications",
    "start": "339520",
    "end": "341680"
  },
  {
    "text": "effect effectively that kind of",
    "start": "341680",
    "end": "342880"
  },
  {
    "text": "east-west traffic",
    "start": "342880",
    "end": "344639"
  },
  {
    "text": "uh in in a cluster without a service",
    "start": "344639",
    "end": "347759"
  },
  {
    "text": "mesh",
    "start": "347759",
    "end": "348240"
  },
  {
    "text": "um at this stage and this is",
    "start": "348240",
    "end": "349840"
  },
  {
    "text": "particularly useful",
    "start": "349840",
    "end": "351600"
  },
  {
    "text": "if actually what you've got is a really",
    "start": "351600",
    "end": "353120"
  },
  {
    "text": "small handful of micro services",
    "start": "353120",
    "end": "355120"
  },
  {
    "text": "um and you know you can",
    "start": "355120",
    "end": "358160"
  },
  {
    "text": "you can really just use you need",
    "start": "358160",
    "end": "359520"
  },
  {
    "text": "certificates you know you need those to",
    "start": "359520",
    "end": "360960"
  },
  {
    "text": "be automated and you want to be able to",
    "start": "360960",
    "end": "362720"
  },
  {
    "text": "consume those in your application",
    "start": "362720",
    "end": "364720"
  },
  {
    "text": "and this you know would be preferable to",
    "start": "364720",
    "end": "367120"
  },
  {
    "text": "the operational complexity",
    "start": "367120",
    "end": "368800"
  },
  {
    "text": "of having um that kind of full uh mesh",
    "start": "368800",
    "end": "373759"
  },
  {
    "start": "373000",
    "end": "482000"
  },
  {
    "text": "so here's an example of how actually how",
    "start": "373759",
    "end": "375440"
  },
  {
    "text": "you can use a certain manager",
    "start": "375440",
    "end": "377759"
  },
  {
    "text": "certificate resource",
    "start": "377759",
    "end": "379199"
  },
  {
    "text": "um directly basically you can go and",
    "start": "379199",
    "end": "380639"
  },
  {
    "text": "create this in source control",
    "start": "380639",
    "end": "383199"
  },
  {
    "text": "of course and apply it you know directly",
    "start": "383199",
    "end": "385840"
  },
  {
    "text": "via",
    "start": "385840",
    "end": "386479"
  },
  {
    "text": "ci cd um to your cluster and",
    "start": "386479",
    "end": "389520"
  },
  {
    "text": "cert manager will automate the issuance",
    "start": "389520",
    "end": "392560"
  },
  {
    "text": "of the certificate and put it into a",
    "start": "392560",
    "end": "394560"
  },
  {
    "text": "secret that you can then consume",
    "start": "394560",
    "end": "397120"
  },
  {
    "text": "in in an application in a pod and so a",
    "start": "397120",
    "end": "400000"
  },
  {
    "text": "couple of",
    "start": "400000",
    "end": "400960"
  },
  {
    "text": "uh things to point out here um making",
    "start": "400960",
    "end": "404319"
  },
  {
    "text": "this uh this particular example is going",
    "start": "404319",
    "end": "405840"
  },
  {
    "text": "to be very short-lived",
    "start": "405840",
    "end": "407600"
  },
  {
    "text": "i'm going to put it into a secret um",
    "start": "407600",
    "end": "410400"
  },
  {
    "text": "that i can specify",
    "start": "410400",
    "end": "412160"
  },
  {
    "text": "much like we did with the ingress and",
    "start": "412160",
    "end": "414160"
  },
  {
    "text": "you can then consume",
    "start": "414160",
    "end": "415599"
  },
  {
    "text": "that that secret in my in my application",
    "start": "415599",
    "end": "418960"
  },
  {
    "text": "you know it really is a set of files in",
    "start": "418960",
    "end": "421199"
  },
  {
    "text": "a",
    "start": "421199",
    "end": "422240"
  },
  {
    "text": "volume mount and that i can then sort of",
    "start": "422240",
    "end": "424240"
  },
  {
    "text": "put into my application and start",
    "start": "424240",
    "end": "425599"
  },
  {
    "text": "serving tls",
    "start": "425599",
    "end": "426720"
  },
  {
    "text": "and some dns sans here and i'm also",
    "start": "426720",
    "end": "429680"
  },
  {
    "text": "making",
    "start": "429680",
    "end": "430160"
  },
  {
    "text": "reference to mice yet this is going to",
    "start": "430160",
    "end": "432800"
  },
  {
    "text": "be like a private ca so this would",
    "start": "432800",
    "end": "435120"
  },
  {
    "text": "obviously not be a public ca",
    "start": "435120",
    "end": "438319"
  },
  {
    "text": "if you just really want something local",
    "start": "438319",
    "end": "439919"
  },
  {
    "text": "to the cluster and we're going to see",
    "start": "439919",
    "end": "441599"
  },
  {
    "text": "how this um",
    "start": "441599",
    "end": "442960"
  },
  {
    "text": "how you can sort of set this up in some",
    "start": "442960",
    "end": "444800"
  },
  {
    "text": "slides to come",
    "start": "444800",
    "end": "446639"
  },
  {
    "text": "here's a bit more yammer that shows how",
    "start": "446639",
    "end": "449599"
  },
  {
    "text": "you can effectively take the secret",
    "start": "449599",
    "end": "451759"
  },
  {
    "text": "and then make it available in a volume",
    "start": "451759",
    "end": "453599"
  },
  {
    "text": "and a volume mount",
    "start": "453599",
    "end": "455199"
  },
  {
    "text": "and the files would have will be",
    "start": "455199",
    "end": "456720"
  },
  {
    "text": "available to this ping service or this",
    "start": "456720",
    "end": "459039"
  },
  {
    "text": "ping pong service",
    "start": "459039",
    "end": "460400"
  },
  {
    "text": "at the mount path etsy ssl privates",
    "start": "460400",
    "end": "463520"
  },
  {
    "text": "there you go there's the",
    "start": "463520",
    "end": "464800"
  },
  {
    "text": "the key pairs and the ca certificate",
    "start": "464800",
    "end": "469199"
  },
  {
    "text": "as well there's a really really simple",
    "start": "469199",
    "end": "470639"
  },
  {
    "text": "way of being able to",
    "start": "470639",
    "end": "472479"
  },
  {
    "text": "use the underlying if you like resources",
    "start": "472479",
    "end": "474720"
  },
  {
    "text": "and certain manager programmatically",
    "start": "474720",
    "end": "476080"
  },
  {
    "text": "we've got a number of end users that do",
    "start": "476080",
    "end": "478400"
  },
  {
    "text": "exactly this at scale",
    "start": "478400",
    "end": "481680"
  },
  {
    "start": "482000",
    "end": "608000"
  },
  {
    "text": "you may also want to have certificates",
    "start": "483599",
    "end": "487039"
  },
  {
    "text": "obtained",
    "start": "487039",
    "end": "487919"
  },
  {
    "text": "from a private ca so rather than just a",
    "start": "487919",
    "end": "490639"
  },
  {
    "text": "public ca such as let's encrypt",
    "start": "490639",
    "end": "492800"
  },
  {
    "text": "if you're trying to get certificates for",
    "start": "492800",
    "end": "496560"
  },
  {
    "text": "that",
    "start": "496560",
    "end": "496879"
  },
  {
    "text": "use case where you're trying to secure",
    "start": "496879",
    "end": "499120"
  },
  {
    "text": "pods that are communicating",
    "start": "499120",
    "end": "500960"
  },
  {
    "text": "within the cluster you may wish to use a",
    "start": "500960",
    "end": "503039"
  },
  {
    "text": "private ca",
    "start": "503039",
    "end": "504000"
  },
  {
    "text": "for that purpose and there's actually",
    "start": "504000",
    "end": "506479"
  },
  {
    "text": "two issues that",
    "start": "506479",
    "end": "507440"
  },
  {
    "text": "that are built into set manager that are",
    "start": "507440",
    "end": "508960"
  },
  {
    "text": "really useful and convenient for this",
    "start": "508960",
    "end": "510560"
  },
  {
    "text": "purpose",
    "start": "510560",
    "end": "511840"
  },
  {
    "text": "they're the self-signed issuer or",
    "start": "511840",
    "end": "513760"
  },
  {
    "text": "so-called self-signed issuer",
    "start": "513760",
    "end": "515440"
  },
  {
    "text": "and the ca issuer and you can see here",
    "start": "515440",
    "end": "517360"
  },
  {
    "text": "what i've taken the number of snippets",
    "start": "517360",
    "end": "519039"
  },
  {
    "text": "of yaml will show you how you can",
    "start": "519039",
    "end": "520800"
  },
  {
    "text": "combine these resources",
    "start": "520800",
    "end": "522479"
  },
  {
    "text": "in order to create what effectively is a",
    "start": "522479",
    "end": "524240"
  },
  {
    "text": "self-signed ca",
    "start": "524240",
    "end": "526640"
  },
  {
    "text": "there on the right-hand side you can see",
    "start": "526640",
    "end": "528560"
  },
  {
    "text": "there is a certificate called",
    "start": "528560",
    "end": "530080"
  },
  {
    "text": "myca i've used the sca flag to denote",
    "start": "530080",
    "end": "534320"
  },
  {
    "text": "that this is going to be aca",
    "start": "534320",
    "end": "535680"
  },
  {
    "text": "certificate it's got a 90-day duration",
    "start": "535680",
    "end": "538480"
  },
  {
    "text": "specified the secret the common names",
    "start": "538480",
    "end": "540560"
  },
  {
    "text": "and subjects",
    "start": "540560",
    "end": "542399"
  },
  {
    "text": "the number of other properties that you",
    "start": "542399",
    "end": "543839"
  },
  {
    "text": "can specify and an issue a ref in this",
    "start": "543839",
    "end": "546560"
  },
  {
    "text": "case i'm",
    "start": "546560",
    "end": "547120"
  },
  {
    "text": "referring to that sort of self-signed",
    "start": "547120",
    "end": "550720"
  },
  {
    "text": "key that i generated there on the left",
    "start": "550720",
    "end": "552959"
  },
  {
    "text": "hand side",
    "start": "552959",
    "end": "554399"
  },
  {
    "text": "this is just sort of an out the box",
    "start": "554399",
    "end": "556240"
  },
  {
    "text": "relatively simple if you like",
    "start": "556240",
    "end": "557920"
  },
  {
    "text": "private ca that you can configure using",
    "start": "557920",
    "end": "560640"
  },
  {
    "text": "search manager and it's",
    "start": "560640",
    "end": "561680"
  },
  {
    "text": "a little known people don't know that",
    "start": "561680",
    "end": "563120"
  },
  {
    "text": "you can do this",
    "start": "563120",
    "end": "564959"
  },
  {
    "text": "you can also of course plug in and if",
    "start": "564959",
    "end": "567600"
  },
  {
    "text": "you like a more robust",
    "start": "567600",
    "end": "568800"
  },
  {
    "text": "and more secure and private",
    "start": "568800",
    "end": "572480"
  },
  {
    "text": "pki if you wish and so we've got a",
    "start": "572480",
    "end": "574959"
  },
  {
    "text": "number of options here both built into",
    "start": "574959",
    "end": "576959"
  },
  {
    "text": "the core of the project but",
    "start": "576959",
    "end": "578560"
  },
  {
    "text": "and also those that are external",
    "start": "578560",
    "end": "582240"
  },
  {
    "text": "to the project as well so called",
    "start": "582240",
    "end": "583760"
  },
  {
    "text": "external issuers so you can use vol",
    "start": "583760",
    "end": "586000"
  },
  {
    "text": "you can use small step they've got acme",
    "start": "586000",
    "end": "589120"
  },
  {
    "text": "an acme ca server um you can also use",
    "start": "589120",
    "end": "592240"
  },
  {
    "text": "the cloud providers so we've got support",
    "start": "592240",
    "end": "593920"
  },
  {
    "text": "for google's certificate authority",
    "start": "593920",
    "end": "595600"
  },
  {
    "text": "service",
    "start": "595600",
    "end": "596399"
  },
  {
    "text": "and there's also an external issuer for",
    "start": "596399",
    "end": "598000"
  },
  {
    "text": "aws is pca",
    "start": "598000",
    "end": "599839"
  },
  {
    "text": "and if you're in a more of an enterprise",
    "start": "599839",
    "end": "601440"
  },
  {
    "text": "environment you can also integrate it",
    "start": "601440",
    "end": "603519"
  },
  {
    "text": "with venify",
    "start": "603519",
    "end": "604720"
  },
  {
    "text": "and there's an issuer for tpp",
    "start": "604720",
    "end": "608560"
  },
  {
    "text": "so in that previous example we were",
    "start": "608560",
    "end": "610000"
  },
  {
    "text": "looking at how you could use",
    "start": "610000",
    "end": "612399"
  },
  {
    "text": "the certificate resource insert manager",
    "start": "612399",
    "end": "615680"
  },
  {
    "text": "in order to obtain a serving certificate",
    "start": "615680",
    "end": "619200"
  },
  {
    "text": "but how about if you wanted to use cert",
    "start": "619200",
    "end": "621279"
  },
  {
    "text": "manager",
    "start": "621279",
    "end": "622480"
  },
  {
    "text": "to do interpod pod to pod",
    "start": "622480",
    "end": "626320"
  },
  {
    "text": "mutual tls and you know obtained by",
    "start": "626320",
    "end": "629920"
  },
  {
    "text": "a by serving certificate but also a",
    "start": "629920",
    "end": "632079"
  },
  {
    "text": "client certificate",
    "start": "632079",
    "end": "633279"
  },
  {
    "text": "so i've got an example here of a really",
    "start": "633279",
    "end": "635600"
  },
  {
    "text": "really simple example",
    "start": "635600",
    "end": "636959"
  },
  {
    "text": "of a ping service and a pong service and",
    "start": "636959",
    "end": "639440"
  },
  {
    "text": "um we open source this lab",
    "start": "639440",
    "end": "641839"
  },
  {
    "text": "if you want to go and find it for you",
    "start": "641839",
    "end": "643839"
  },
  {
    "text": "follow the link there on the slide",
    "start": "643839",
    "end": "646000"
  },
  {
    "text": "and it sort of hooks up uh you know this",
    "start": "646000",
    "end": "649200"
  },
  {
    "text": "ping pong",
    "start": "649200",
    "end": "649920"
  },
  {
    "text": "service um simple go binary",
    "start": "649920",
    "end": "653120"
  },
  {
    "text": "that you can also use in some of your",
    "start": "653120",
    "end": "654800"
  },
  {
    "text": "your own examples",
    "start": "654800",
    "end": "656160"
  },
  {
    "text": "in this example we have is the two",
    "start": "656160",
    "end": "659279"
  },
  {
    "text": "services i said",
    "start": "659279",
    "end": "660480"
  },
  {
    "text": "ping context pong verifies itself for",
    "start": "660480",
    "end": "663279"
  },
  {
    "text": "clients uh",
    "start": "663279",
    "end": "664560"
  },
  {
    "text": "um pong replies that's secured using the",
    "start": "664560",
    "end": "667120"
  },
  {
    "text": "servicer",
    "start": "667120",
    "end": "668160"
  },
  {
    "text": "um and yeah it actually replies back to",
    "start": "668160",
    "end": "671040"
  },
  {
    "text": "the browser so you can see",
    "start": "671040",
    "end": "672480"
  },
  {
    "text": "the the contents of the pong certificate",
    "start": "672480",
    "end": "675600"
  },
  {
    "text": "and importantly here both ping pong",
    "start": "675600",
    "end": "678240"
  },
  {
    "text": "they're only going to trust certificates",
    "start": "678240",
    "end": "679760"
  },
  {
    "text": "that are signed by the same",
    "start": "679760",
    "end": "681839"
  },
  {
    "text": "ca so how does this look um how does",
    "start": "681839",
    "end": "684720"
  },
  {
    "text": "this look",
    "start": "684720",
    "end": "685200"
  },
  {
    "text": "um in in yaml",
    "start": "685200",
    "end": "688880"
  },
  {
    "text": "well we have uh as before we have the we",
    "start": "688880",
    "end": "691600"
  },
  {
    "text": "use this certificate resource",
    "start": "691600",
    "end": "693279"
  },
  {
    "text": "and we've now got um ones you've got",
    "start": "693279",
    "end": "695519"
  },
  {
    "text": "basically two stiff kits got both the",
    "start": "695519",
    "end": "696880"
  },
  {
    "text": "ping and the pong",
    "start": "696880",
    "end": "697760"
  },
  {
    "text": "and you can see here um in the",
    "start": "697760",
    "end": "700000"
  },
  {
    "text": "certificate resource we're able to",
    "start": "700000",
    "end": "702399"
  },
  {
    "text": "specify the the key usages um that get",
    "start": "702399",
    "end": "705120"
  },
  {
    "text": "passed",
    "start": "705120",
    "end": "705760"
  },
  {
    "text": "down you know when creating the",
    "start": "705760",
    "end": "707279"
  },
  {
    "text": "certificate and so you know",
    "start": "707279",
    "end": "709279"
  },
  {
    "text": "you can sort of use here both client or",
    "start": "709279",
    "end": "711120"
  },
  {
    "text": "sirthroth um",
    "start": "711120",
    "end": "712560"
  },
  {
    "text": "and set those appropriately and",
    "start": "712560",
    "end": "715760"
  },
  {
    "text": "both of the certificates here both for",
    "start": "715760",
    "end": "717760"
  },
  {
    "text": "both ping and pong use the same issuer",
    "start": "717760",
    "end": "719760"
  },
  {
    "text": "so they're pointing at that",
    "start": "719760",
    "end": "721519"
  },
  {
    "text": "private ca that i created",
    "start": "721519",
    "end": "724800"
  },
  {
    "text": "um on the previous slide or show on the",
    "start": "724800",
    "end": "727040"
  },
  {
    "text": "previous slide",
    "start": "727040",
    "end": "730800"
  },
  {
    "text": "so using the certificate resource in",
    "start": "730800",
    "end": "733680"
  },
  {
    "text": "this way",
    "start": "733680",
    "end": "734480"
  },
  {
    "text": "um you can you configure it to create",
    "start": "734480",
    "end": "737600"
  },
  {
    "text": "certificates",
    "start": "737600",
    "end": "738560"
  },
  {
    "text": "um in order to do things like for",
    "start": "738560",
    "end": "740399"
  },
  {
    "text": "instance um your authentication to a",
    "start": "740399",
    "end": "742560"
  },
  {
    "text": "database",
    "start": "742560",
    "end": "743519"
  },
  {
    "text": "and so we've got this blog post",
    "start": "743519",
    "end": "746880"
  },
  {
    "text": "and the one of our team put together uh",
    "start": "746880",
    "end": "749360"
  },
  {
    "text": "in which we used",
    "start": "749360",
    "end": "750639"
  },
  {
    "text": "we talked through how you can use cert",
    "start": "750639",
    "end": "753680"
  },
  {
    "text": "manager to create certificates for",
    "start": "753680",
    "end": "756320"
  },
  {
    "text": "client authentication with mysql and",
    "start": "756320",
    "end": "758800"
  },
  {
    "text": "there's been",
    "start": "758800",
    "end": "759600"
  },
  {
    "text": "lots of examples we've also seen the",
    "start": "759600",
    "end": "761360"
  },
  {
    "text": "community uh of where users have",
    "start": "761360",
    "end": "764240"
  },
  {
    "text": "used it exactly um for this type of",
    "start": "764240",
    "end": "767040"
  },
  {
    "text": "purpose",
    "start": "767040",
    "end": "769360"
  },
  {
    "start": "769000",
    "end": "788000"
  },
  {
    "text": "rather than manually having to",
    "start": "770560",
    "end": "773680"
  },
  {
    "text": "create and manage those certificate",
    "start": "773680",
    "end": "776880"
  },
  {
    "text": "resources for applications",
    "start": "776880",
    "end": "779200"
  },
  {
    "text": "in the set manager project we have",
    "start": "779200",
    "end": "781360"
  },
  {
    "text": "developed",
    "start": "781360",
    "end": "782480"
  },
  {
    "text": "a csi driver in order to make it",
    "start": "782480",
    "end": "785760"
  },
  {
    "text": "um even more seamless",
    "start": "785760",
    "end": "789200"
  },
  {
    "start": "788000",
    "end": "856000"
  },
  {
    "text": "very neat thing about the csi driver",
    "start": "789200",
    "end": "792240"
  },
  {
    "text": "is that it means the private keys can",
    "start": "792240",
    "end": "794720"
  },
  {
    "text": "remain",
    "start": "794720",
    "end": "795519"
  },
  {
    "text": "node local it's rather than being",
    "start": "795519",
    "end": "798959"
  },
  {
    "text": "put into a kubernetes secret as is the",
    "start": "798959",
    "end": "801600"
  },
  {
    "text": "case with",
    "start": "801600",
    "end": "802480"
  },
  {
    "text": "some of the integrations that we've",
    "start": "802480",
    "end": "803839"
  },
  {
    "text": "already seen in this particular case you",
    "start": "803839",
    "end": "806320"
  },
  {
    "text": "can keep",
    "start": "806320",
    "end": "807440"
  },
  {
    "text": "the private key to the node where it's",
    "start": "807440",
    "end": "810079"
  },
  {
    "text": "generated",
    "start": "810079",
    "end": "811519"
  },
  {
    "text": "by the csi driver it means you can",
    "start": "811519",
    "end": "814720"
  },
  {
    "text": "provide",
    "start": "814720",
    "end": "815279"
  },
  {
    "text": "unique key and certificates for each of",
    "start": "815279",
    "end": "819279"
  },
  {
    "text": "your applications",
    "start": "819279",
    "end": "820560"
  },
  {
    "text": "so if you're using a replica as part of",
    "start": "820560",
    "end": "823120"
  },
  {
    "text": "a deployment you've got many pods each",
    "start": "823120",
    "end": "824639"
  },
  {
    "text": "of those pods can have its own",
    "start": "824639",
    "end": "826560"
  },
  {
    "text": "unique identity and that identity that",
    "start": "826560",
    "end": "830399"
  },
  {
    "text": "x509 identity",
    "start": "830399",
    "end": "832160"
  },
  {
    "text": "can be obtained at the point of",
    "start": "832160",
    "end": "834800"
  },
  {
    "text": "application runtime",
    "start": "834800",
    "end": "837360"
  },
  {
    "text": "it also means that these certificates",
    "start": "837360",
    "end": "838959"
  },
  {
    "text": "are renewed",
    "start": "838959",
    "end": "840560"
  },
  {
    "text": "much like the other use cases that",
    "start": "840560",
    "end": "843360"
  },
  {
    "text": "manager will",
    "start": "843360",
    "end": "845120"
  },
  {
    "text": "know when to renew the certificate and",
    "start": "845120",
    "end": "847680"
  },
  {
    "text": "provide a means",
    "start": "847680",
    "end": "848880"
  },
  {
    "text": "to do that for you so this just makes it",
    "start": "848880",
    "end": "851519"
  },
  {
    "text": "really super simple",
    "start": "851519",
    "end": "853040"
  },
  {
    "text": "in order to get those certificates to",
    "start": "853040",
    "end": "856800"
  },
  {
    "start": "856000",
    "end": "964000"
  },
  {
    "text": "each of your applications how does the",
    "start": "856800",
    "end": "859120"
  },
  {
    "text": "csi driver work with the csi driver",
    "start": "859120",
    "end": "862079"
  },
  {
    "text": "resides on each of the nodes in the",
    "start": "862079",
    "end": "863839"
  },
  {
    "text": "cluster it's deployed as a daemon set",
    "start": "863839",
    "end": "867440"
  },
  {
    "text": "and just stepping through how it works",
    "start": "867440",
    "end": "871760"
  },
  {
    "text": "first of all the pod is scheduled to a",
    "start": "871760",
    "end": "873120"
  },
  {
    "text": "node the keyblade of course is",
    "start": "873120",
    "end": "875199"
  },
  {
    "text": "responsible for coordinating",
    "start": "875199",
    "end": "878000"
  },
  {
    "text": "the the runtime it works",
    "start": "878000",
    "end": "881600"
  },
  {
    "text": "with the node driver this the csi driver",
    "start": "881600",
    "end": "885040"
  },
  {
    "text": "by calling the node publish volume",
    "start": "885040",
    "end": "887760"
  },
  {
    "text": "at that point the driver kicks in and it",
    "start": "887760",
    "end": "890800"
  },
  {
    "text": "generates a private key and it generates",
    "start": "890800",
    "end": "893440"
  },
  {
    "text": "a certificate request that's a certain",
    "start": "893440",
    "end": "895120"
  },
  {
    "text": "manager",
    "start": "895120",
    "end": "895680"
  },
  {
    "text": "certificate request which it effectively",
    "start": "895680",
    "end": "899279"
  },
  {
    "text": "encodes",
    "start": "899279",
    "end": "900639"
  },
  {
    "text": "a csr that's that certificate request",
    "start": "900639",
    "end": "904399"
  },
  {
    "text": "is submitted to the api server",
    "start": "904399",
    "end": "907519"
  },
  {
    "text": "on your behalf the cr is then",
    "start": "907519",
    "end": "911040"
  },
  {
    "text": "reconciled and a certificate is obtained",
    "start": "911040",
    "end": "915360"
  },
  {
    "text": "from your kind of ca of choice and that",
    "start": "915360",
    "end": "917519"
  },
  {
    "text": "certificate",
    "start": "917519",
    "end": "918480"
  },
  {
    "text": "is then together the private key is",
    "start": "918480",
    "end": "921360"
  },
  {
    "text": "written to the node's",
    "start": "921360",
    "end": "922800"
  },
  {
    "text": "file system and then that's bind mounted",
    "start": "922800",
    "end": "925519"
  },
  {
    "text": "into",
    "start": "925519",
    "end": "926880"
  },
  {
    "text": "each each of the pods obviously in",
    "start": "926880",
    "end": "928720"
  },
  {
    "text": "teaching the relevant",
    "start": "928720",
    "end": "930480"
  },
  {
    "text": "pods the driver will keep track of all",
    "start": "930480",
    "end": "932639"
  },
  {
    "text": "of the",
    "start": "932639",
    "end": "933519"
  },
  {
    "text": "certificates and they will also be",
    "start": "933519",
    "end": "934720"
  },
  {
    "text": "responsible for it for news",
    "start": "934720",
    "end": "936959"
  },
  {
    "text": "and if at any time or if and",
    "start": "936959",
    "end": "940560"
  },
  {
    "text": "and when of course um the pod is",
    "start": "940560",
    "end": "942800"
  },
  {
    "text": "terminated",
    "start": "942800",
    "end": "943920"
  },
  {
    "text": "and then it will also send out a call to",
    "start": "943920",
    "end": "946480"
  },
  {
    "text": "the driver the cubelet will send out a",
    "start": "946480",
    "end": "948000"
  },
  {
    "text": "call",
    "start": "948000",
    "end": "948639"
  },
  {
    "text": "to the driver in order to make sure that",
    "start": "948639",
    "end": "951040"
  },
  {
    "text": "the certificate",
    "start": "951040",
    "end": "952560"
  },
  {
    "text": "and the key are deleted so this",
    "start": "952560",
    "end": "955680"
  },
  {
    "text": "is a really seamless um automated way",
    "start": "955680",
    "end": "960160"
  },
  {
    "text": "of getting those identities",
    "start": "960160",
    "end": "964639"
  },
  {
    "start": "964000",
    "end": "1025000"
  },
  {
    "text": "you can also use cert manager to secure",
    "start": "965680",
    "end": "967759"
  },
  {
    "text": "cuban these web hooks",
    "start": "967759",
    "end": "970000"
  },
  {
    "text": "web hooks are used for a sort of dynamic",
    "start": "970000",
    "end": "973519"
  },
  {
    "text": "admission control used for a variety of",
    "start": "973519",
    "end": "977360"
  },
  {
    "text": "purpose for",
    "start": "977360",
    "end": "978320"
  },
  {
    "text": "for instance mutating resources or",
    "start": "978320",
    "end": "981120"
  },
  {
    "text": "validating resources",
    "start": "981120",
    "end": "983040"
  },
  {
    "text": "um as they are admitted to the api",
    "start": "983040",
    "end": "986320"
  },
  {
    "text": "server",
    "start": "986320",
    "end": "986880"
  },
  {
    "text": "and typically use for instance for",
    "start": "986880",
    "end": "988959"
  },
  {
    "text": "applying default values or",
    "start": "988959",
    "end": "991199"
  },
  {
    "text": "enforcing policy using you know the",
    "start": "991199",
    "end": "993680"
  },
  {
    "text": "likes of opa",
    "start": "993680",
    "end": "994839"
  },
  {
    "text": "coverno and also for ensuring that",
    "start": "994839",
    "end": "997360"
  },
  {
    "text": "resources that are submitted",
    "start": "997360",
    "end": "999519"
  },
  {
    "text": "are semantically valid and in fact",
    "start": "999519",
    "end": "1001279"
  },
  {
    "text": "certain manager uses this",
    "start": "1001279",
    "end": "1003360"
  },
  {
    "text": "um itself you'll notice there's a",
    "start": "1003360",
    "end": "1005680"
  },
  {
    "text": "component called the search merger",
    "start": "1005680",
    "end": "1007440"
  },
  {
    "text": "webhook",
    "start": "1007440",
    "end": "1008320"
  },
  {
    "text": "that does exactly this now",
    "start": "1008320",
    "end": "1011600"
  },
  {
    "text": "if you're doing using this as a as an",
    "start": "1011600",
    "end": "1014160"
  },
  {
    "text": "extension point",
    "start": "1014160",
    "end": "1015600"
  },
  {
    "text": "you want to be sure that when you are",
    "start": "1015600",
    "end": "1018639"
  },
  {
    "text": "submitting these resources from the api",
    "start": "1018639",
    "end": "1020720"
  },
  {
    "text": "server to those web hooks",
    "start": "1020720",
    "end": "1022560"
  },
  {
    "text": "that it's secure and then also you can",
    "start": "1022560",
    "end": "1024240"
  },
  {
    "text": "be sure of uh",
    "start": "1024240",
    "end": "1025839"
  },
  {
    "start": "1025000",
    "end": "1082000"
  },
  {
    "text": "the uh the destination to make sure that",
    "start": "1025839",
    "end": "1029438"
  },
  {
    "text": "there's nothing that various is",
    "start": "1029439",
    "end": "1030640"
  },
  {
    "text": "happening",
    "start": "1030640",
    "end": "1031360"
  },
  {
    "text": "um with it being mutated or",
    "start": "1031360",
    "end": "1035360"
  },
  {
    "text": "or validated in in a way that you would",
    "start": "1035360",
    "end": "1037918"
  },
  {
    "text": "not expect",
    "start": "1037919",
    "end": "1040240"
  },
  {
    "text": "so you can use certain manager in order",
    "start": "1040240",
    "end": "1043038"
  },
  {
    "text": "to secure those end points and",
    "start": "1043039",
    "end": "1044880"
  },
  {
    "text": "secure those provide the means provide",
    "start": "1044880",
    "end": "1046880"
  },
  {
    "text": "the certificates for those endpoints",
    "start": "1046880",
    "end": "1048640"
  },
  {
    "text": "and there's a couple of annotations or",
    "start": "1048640",
    "end": "1050000"
  },
  {
    "text": "few annotations should i say and where",
    "start": "1050000",
    "end": "1052080"
  },
  {
    "text": "you can",
    "start": "1052080",
    "end": "1053280"
  },
  {
    "text": "do this one is inject ca from so my dry",
    "start": "1053280",
    "end": "1056559"
  },
  {
    "text": "o",
    "start": "1056559",
    "end": "1056960"
  },
  {
    "text": "inject ca from you can reference a",
    "start": "1056960",
    "end": "1058960"
  },
  {
    "text": "certificate",
    "start": "1058960",
    "end": "1061520"
  },
  {
    "text": "and you can also inject it from a secret",
    "start": "1061520",
    "end": "1063600"
  },
  {
    "text": "and you can also inject the api",
    "start": "1063600",
    "end": "1065120"
  },
  {
    "text": "server ca certificate",
    "start": "1065120",
    "end": "1068240"
  },
  {
    "text": "as well this uses a component insert",
    "start": "1068240",
    "end": "1070640"
  },
  {
    "text": "merge called the ca injector",
    "start": "1070640",
    "end": "1072960"
  },
  {
    "text": "responsible for watching in on these",
    "start": "1072960",
    "end": "1075520"
  },
  {
    "text": "annotations",
    "start": "1075520",
    "end": "1076720"
  },
  {
    "text": "and then providing the means to be able",
    "start": "1076720",
    "end": "1079200"
  },
  {
    "text": "to automate",
    "start": "1079200",
    "end": "1081039"
  },
  {
    "text": "automate it for you one example of where",
    "start": "1081039",
    "end": "1084960"
  },
  {
    "start": "1082000",
    "end": "1130000"
  },
  {
    "text": "this is used",
    "start": "1084960",
    "end": "1086320"
  },
  {
    "text": "um is in cluster api so this is an",
    "start": "1086320",
    "end": "1089440"
  },
  {
    "text": "example of a command that i ran recently",
    "start": "1089440",
    "end": "1092000"
  },
  {
    "text": "when spinning up a local cluster api",
    "start": "1092000",
    "end": "1094559"
  },
  {
    "text": "cluster",
    "start": "1094559",
    "end": "1095440"
  },
  {
    "text": "um you're using cluster ctl as you can",
    "start": "1095440",
    "end": "1097919"
  },
  {
    "text": "see",
    "start": "1097919",
    "end": "1098480"
  },
  {
    "text": "and one of the very first things that it",
    "start": "1098480",
    "end": "1099840"
  },
  {
    "text": "does it fetches the various different",
    "start": "1099840",
    "end": "1101919"
  },
  {
    "text": "providers",
    "start": "1101919",
    "end": "1102960"
  },
  {
    "text": "and then it installs cert manager and",
    "start": "1102960",
    "end": "1106000"
  },
  {
    "text": "that might look a little curious if you",
    "start": "1106000",
    "end": "1108240"
  },
  {
    "text": "but uh",
    "start": "1108240",
    "end": "1109760"
  },
  {
    "text": "if you dig a little bit deeper once the",
    "start": "1109760",
    "end": "1112160"
  },
  {
    "text": "cluster api is",
    "start": "1112160",
    "end": "1113360"
  },
  {
    "text": "up and working then you've got cube ctl",
    "start": "1113360",
    "end": "1115600"
  },
  {
    "text": "get certificates",
    "start": "1115600",
    "end": "1116799"
  },
  {
    "text": "and specifically you look in the capi",
    "start": "1116799",
    "end": "1119039"
  },
  {
    "text": "webhook system",
    "start": "1119039",
    "end": "1120640"
  },
  {
    "text": "namespace you'll see there are a number",
    "start": "1120640",
    "end": "1122720"
  },
  {
    "text": "of certificates that are used",
    "start": "1122720",
    "end": "1125120"
  },
  {
    "text": "as serving certificates for those",
    "start": "1125120",
    "end": "1128559"
  },
  {
    "text": "web hooks",
    "start": "1128559",
    "end": "1131120"
  },
  {
    "start": "1130000",
    "end": "1233000"
  },
  {
    "text": "now service message becoming",
    "start": "1134840",
    "end": "1137360"
  },
  {
    "text": "increasingly",
    "start": "1137360",
    "end": "1139039"
  },
  {
    "text": "popular and a number of users in the",
    "start": "1139039",
    "end": "1142080"
  },
  {
    "text": "community are asking",
    "start": "1142080",
    "end": "1143520"
  },
  {
    "text": "how they can integrate cert manager and",
    "start": "1143520",
    "end": "1146640"
  },
  {
    "text": "also with all its various different",
    "start": "1146640",
    "end": "1148799"
  },
  {
    "text": "ca integrations into the mesh so that",
    "start": "1148799",
    "end": "1152080"
  },
  {
    "text": "those workload search the control plane",
    "start": "1152080",
    "end": "1153760"
  },
  {
    "text": "certain data inserts",
    "start": "1153760",
    "end": "1155679"
  },
  {
    "text": "are provided from their sort of",
    "start": "1155679",
    "end": "1158960"
  },
  {
    "text": "provider of choice now if you think of",
    "start": "1158960",
    "end": "1161679"
  },
  {
    "text": "what service mesh provides",
    "start": "1161679",
    "end": "1163440"
  },
  {
    "text": "it's a really really rich capability to",
    "start": "1163440",
    "end": "1165760"
  },
  {
    "text": "have consistent observability",
    "start": "1165760",
    "end": "1168480"
  },
  {
    "text": "uh security and so various reliability",
    "start": "1168480",
    "end": "1172480"
  },
  {
    "text": "features",
    "start": "1172480",
    "end": "1173200"
  },
  {
    "text": "that are built into the platform so",
    "start": "1173200",
    "end": "1175440"
  },
  {
    "text": "rather than developers having to build",
    "start": "1175440",
    "end": "1176640"
  },
  {
    "text": "this themselves",
    "start": "1176640",
    "end": "1178000"
  },
  {
    "text": "it's transparent and it's provided for",
    "start": "1178000",
    "end": "1180799"
  },
  {
    "text": "them",
    "start": "1180799",
    "end": "1181200"
  },
  {
    "text": "this can be you know highly convenient",
    "start": "1181200",
    "end": "1184559"
  },
  {
    "text": "rather than services contacting each",
    "start": "1184559",
    "end": "1186400"
  },
  {
    "text": "other directly i've got an example here",
    "start": "1186400",
    "end": "1188160"
  },
  {
    "text": "service a and service b",
    "start": "1188160",
    "end": "1189840"
  },
  {
    "text": "and these microservices or services",
    "start": "1189840",
    "end": "1192400"
  },
  {
    "text": "communicate",
    "start": "1192400",
    "end": "1193039"
  },
  {
    "text": "via a proxy and the proxy can be",
    "start": "1193039",
    "end": "1196480"
  },
  {
    "text": "dynamically programmed",
    "start": "1196480",
    "end": "1198640"
  },
  {
    "text": "based on resources that reside in the",
    "start": "1198640",
    "end": "1201520"
  },
  {
    "text": "control plane",
    "start": "1201520",
    "end": "1203280"
  },
  {
    "text": "and so what's great about this is that",
    "start": "1203280",
    "end": "1205200"
  },
  {
    "text": "you can provide all of that capability",
    "start": "1205200",
    "end": "1206720"
  },
  {
    "text": "in the proxy",
    "start": "1206720",
    "end": "1207840"
  },
  {
    "text": "rather than having to be implemented in",
    "start": "1207840",
    "end": "1209440"
  },
  {
    "text": "the application itself",
    "start": "1209440",
    "end": "1211440"
  },
  {
    "text": "and quite often most of these meshes",
    "start": "1211440",
    "end": "1215520"
  },
  {
    "text": "so most of which are based of course on",
    "start": "1215520",
    "end": "1217039"
  },
  {
    "text": "envoy and have the ability to",
    "start": "1217039",
    "end": "1219200"
  },
  {
    "text": "automatically",
    "start": "1219200",
    "end": "1220159"
  },
  {
    "text": "provide mtls between",
    "start": "1220159",
    "end": "1223520"
  },
  {
    "text": "proxies in the mesh so you effectively",
    "start": "1223520",
    "end": "1225679"
  },
  {
    "text": "transparent",
    "start": "1225679",
    "end": "1227200"
  },
  {
    "text": "mtls between all of your services which",
    "start": "1227200",
    "end": "1230480"
  },
  {
    "text": "is highly convenient",
    "start": "1230480",
    "end": "1235840"
  },
  {
    "start": "1233000",
    "end": "1402000"
  },
  {
    "text": "a number of service meshes out there in",
    "start": "1236000",
    "end": "1238400"
  },
  {
    "text": "the open source have integrations with",
    "start": "1238400",
    "end": "1241039"
  },
  {
    "text": "set manager so linkid of course a",
    "start": "1241039",
    "end": "1243919"
  },
  {
    "text": "service mesh",
    "start": "1243919",
    "end": "1244720"
  },
  {
    "text": "that's in the cncf",
    "start": "1244720",
    "end": "1247760"
  },
  {
    "text": "the ability to integrate some measure",
    "start": "1247760",
    "end": "1249360"
  },
  {
    "text": "for some time you can provided a trust",
    "start": "1249360",
    "end": "1251840"
  },
  {
    "text": "tank",
    "start": "1251840",
    "end": "1252960"
  },
  {
    "text": "and an issue a certificate and private",
    "start": "1252960",
    "end": "1255360"
  },
  {
    "text": "key and this can all be automated using",
    "start": "1255360",
    "end": "1257360"
  },
  {
    "text": "cert manager",
    "start": "1257360",
    "end": "1258640"
  },
  {
    "text": "um and thereafter linkid has a component",
    "start": "1258640",
    "end": "1261120"
  },
  {
    "text": "built into it responsible for",
    "start": "1261120",
    "end": "1263600"
  },
  {
    "text": "uh effectively uh automating the",
    "start": "1263600",
    "end": "1266960"
  },
  {
    "text": "provisioning of the lease certificates",
    "start": "1266960",
    "end": "1268720"
  },
  {
    "text": "and the renewal of those sleeve tickets",
    "start": "1268720",
    "end": "1270320"
  },
  {
    "text": "with you know relatively short",
    "start": "1270320",
    "end": "1271919"
  },
  {
    "text": "short lifetimes so you get a full",
    "start": "1271919",
    "end": "1274840"
  },
  {
    "text": "automation",
    "start": "1274840",
    "end": "1276000"
  },
  {
    "text": "of that both the bootstrapped",
    "start": "1276000",
    "end": "1278480"
  },
  {
    "text": "certificates",
    "start": "1278480",
    "end": "1279600"
  },
  {
    "text": "um that are used the trust anchor and",
    "start": "1279600",
    "end": "1282000"
  },
  {
    "text": "also the lease certificates",
    "start": "1282000",
    "end": "1283600"
  },
  {
    "text": "uh as well so there's a really good",
    "start": "1283600",
    "end": "1284960"
  },
  {
    "text": "combination putting the two together",
    "start": "1284960",
    "end": "1287440"
  },
  {
    "text": "um istio has had the ability to plug in",
    "start": "1287440",
    "end": "1290640"
  },
  {
    "text": "custom ca certificates into its into a",
    "start": "1290640",
    "end": "1293760"
  },
  {
    "text": "citadel for some time",
    "start": "1293760",
    "end": "1295600"
  },
  {
    "text": "you can reference a ca",
    "start": "1295600",
    "end": "1299440"
  },
  {
    "text": "key pair using a kubernetes secret",
    "start": "1299440",
    "end": "1302960"
  },
  {
    "text": "but we've win working with the seo folks",
    "start": "1302960",
    "end": "1305440"
  },
  {
    "text": "in order to",
    "start": "1305440",
    "end": "1306480"
  },
  {
    "text": "more fully integrate certain managers so",
    "start": "1306480",
    "end": "1308320"
  },
  {
    "text": "that you can actually",
    "start": "1308320",
    "end": "1310559"
  },
  {
    "text": "have the workload certificates obtained",
    "start": "1310559",
    "end": "1313919"
  },
  {
    "text": "from cert manager itself because that's",
    "start": "1313919",
    "end": "1316880"
  },
  {
    "text": "advantageous because you can then start",
    "start": "1316880",
    "end": "1318400"
  },
  {
    "text": "to take advantage of all the different",
    "start": "1318400",
    "end": "1319840"
  },
  {
    "text": "issuers",
    "start": "1319840",
    "end": "1320799"
  },
  {
    "text": "that set merger has in its community",
    "start": "1320799",
    "end": "1323919"
  },
  {
    "text": "and what this involves is effectively",
    "start": "1323919",
    "end": "1325840"
  },
  {
    "text": "replacing the citadel",
    "start": "1325840",
    "end": "1327760"
  },
  {
    "text": "that's that registration authority with",
    "start": "1327760",
    "end": "1330960"
  },
  {
    "text": "cert manager we can create certificate",
    "start": "1330960",
    "end": "1334320"
  },
  {
    "text": "requests",
    "start": "1334320",
    "end": "1335360"
  },
  {
    "text": "and have those fulfilled set by those",
    "start": "1335360",
    "end": "1337600"
  },
  {
    "text": "different providers",
    "start": "1337600",
    "end": "1339200"
  },
  {
    "text": "there's also some integration which is",
    "start": "1339200",
    "end": "1341679"
  },
  {
    "text": "much more experimental",
    "start": "1341679",
    "end": "1343360"
  },
  {
    "text": "and it's been more recently released",
    "start": "1343360",
    "end": "1345039"
  },
  {
    "text": "that enables",
    "start": "1345039",
    "end": "1346400"
  },
  {
    "text": "istio to use the kubernetes certificates",
    "start": "1346400",
    "end": "1349520"
  },
  {
    "text": "api",
    "start": "1349520",
    "end": "1351120"
  },
  {
    "text": "and we're working with them on that",
    "start": "1351120",
    "end": "1354080"
  },
  {
    "text": "integration",
    "start": "1354080",
    "end": "1355600"
  },
  {
    "text": "as well and finally the third example i",
    "start": "1355600",
    "end": "1359280"
  },
  {
    "text": "have here is the open service mesh",
    "start": "1359280",
    "end": "1360880"
  },
  {
    "text": "project",
    "start": "1360880",
    "end": "1361600"
  },
  {
    "text": "osm that we've been working with",
    "start": "1361600",
    "end": "1365360"
  },
  {
    "text": "to plug in servermanager and they've had",
    "start": "1365360",
    "end": "1367200"
  },
  {
    "text": "plugable certificate management from the",
    "start": "1367200",
    "end": "1369280"
  },
  {
    "text": "get-go",
    "start": "1369280",
    "end": "1370080"
  },
  {
    "text": "and they've got their own built-in",
    "start": "1370080",
    "end": "1371360"
  },
  {
    "text": "component i believe support for also",
    "start": "1371360",
    "end": "1374799"
  },
  {
    "text": "volt and also azure's key vault um but",
    "start": "1374799",
    "end": "1377520"
  },
  {
    "text": "yeah if you want to use so much",
    "start": "1377520",
    "end": "1378960"
  },
  {
    "text": "there is an integration that enables you",
    "start": "1378960",
    "end": "1380799"
  },
  {
    "text": "to uh",
    "start": "1380799",
    "end": "1382159"
  },
  {
    "text": "plug it in um and it will",
    "start": "1382159",
    "end": "1385280"
  },
  {
    "text": "that component will be responsible for",
    "start": "1385280",
    "end": "1387600"
  },
  {
    "text": "creating and",
    "start": "1387600",
    "end": "1389039"
  },
  {
    "text": "managing certificate requests",
    "start": "1389039",
    "end": "1392080"
  },
  {
    "text": "for the workloads that run within the",
    "start": "1392080",
    "end": "1394960"
  },
  {
    "text": "mesh",
    "start": "1394960",
    "end": "1395360"
  },
  {
    "text": "so variety of different integrations",
    "start": "1395360",
    "end": "1397200"
  },
  {
    "text": "that enable you to",
    "start": "1397200",
    "end": "1398960"
  },
  {
    "text": "plug into certain manager and in turn of",
    "start": "1398960",
    "end": "1400880"
  },
  {
    "text": "course all of its",
    "start": "1400880",
    "end": "1402159"
  },
  {
    "text": "integrations that it has with different",
    "start": "1402159",
    "end": "1405120"
  },
  {
    "text": "issuers but those that are built into",
    "start": "1405120",
    "end": "1406640"
  },
  {
    "text": "the core of the project but also",
    "start": "1406640",
    "end": "1408640"
  },
  {
    "text": "those that are external to the project",
    "start": "1408640",
    "end": "1410559"
  },
  {
    "text": "as well",
    "start": "1410559",
    "end": "1412960"
  },
  {
    "text": "cert manager can also be used to secure",
    "start": "1413919",
    "end": "1417200"
  },
  {
    "text": "the kubernetes control plane",
    "start": "1417200",
    "end": "1419280"
  },
  {
    "text": "and the nodes um that form",
    "start": "1419280",
    "end": "1422640"
  },
  {
    "text": "former cluster for now for anyone that's",
    "start": "1422640",
    "end": "1426799"
  },
  {
    "start": "1424000",
    "end": "1445000"
  },
  {
    "text": "tried setting up pki and kubernetes",
    "start": "1426799",
    "end": "1429200"
  },
  {
    "text": "they'll know that there are a lot of",
    "start": "1429200",
    "end": "1430559"
  },
  {
    "text": "certs",
    "start": "1430559",
    "end": "1431919"
  },
  {
    "text": "um client search services of all",
    "start": "1431919",
    "end": "1434640"
  },
  {
    "text": "different",
    "start": "1434640",
    "end": "1435120"
  },
  {
    "text": "flavors and uh it can get quite complex",
    "start": "1435120",
    "end": "1439120"
  },
  {
    "text": "trying to manage this i know from doing",
    "start": "1439120",
    "end": "1441440"
  },
  {
    "text": "this in the very early days of",
    "start": "1441440",
    "end": "1442880"
  },
  {
    "text": "provisioning a kubernetes",
    "start": "1442880",
    "end": "1444000"
  },
  {
    "text": "cluster well now things have changed we",
    "start": "1444000",
    "end": "1446799"
  },
  {
    "start": "1445000",
    "end": "1520000"
  },
  {
    "text": "can",
    "start": "1446799",
    "end": "1448000"
  },
  {
    "text": "use the magic that is cubed m or cube",
    "start": "1448000",
    "end": "1451039"
  },
  {
    "text": "adam",
    "start": "1451039",
    "end": "1452320"
  },
  {
    "text": "is here to the rescue really it provides",
    "start": "1452320",
    "end": "1454960"
  },
  {
    "text": "auto generated",
    "start": "1454960",
    "end": "1456320"
  },
  {
    "text": "water renewed control plane inserts",
    "start": "1456320",
    "end": "1459600"
  },
  {
    "text": "and by default this uses like a",
    "start": "1459600",
    "end": "1461440"
  },
  {
    "text": "self-signed certificate",
    "start": "1461440",
    "end": "1463279"
  },
  {
    "text": "so if you're happy to accept that it's",
    "start": "1463279",
    "end": "1465919"
  },
  {
    "text": "uh not",
    "start": "1465919",
    "end": "1466640"
  },
  {
    "text": "not rooted if you like in your in your",
    "start": "1466640",
    "end": "1469520"
  },
  {
    "text": "existing",
    "start": "1469520",
    "end": "1470240"
  },
  {
    "text": "chain of trust and then you can really",
    "start": "1470240",
    "end": "1472480"
  },
  {
    "text": "just use this sort of",
    "start": "1472480",
    "end": "1473600"
  },
  {
    "text": "as as is um but if you're in an",
    "start": "1473600",
    "end": "1476080"
  },
  {
    "text": "enterprise where you need those",
    "start": "1476080",
    "end": "1477360"
  },
  {
    "text": "certificates",
    "start": "1477360",
    "end": "1478880"
  },
  {
    "text": "to be rooted in some kind of existing",
    "start": "1478880",
    "end": "1481679"
  },
  {
    "text": "pki system",
    "start": "1481679",
    "end": "1484000"
  },
  {
    "text": "then there are a couple of ways of doing",
    "start": "1484000",
    "end": "1485440"
  },
  {
    "text": "this at least one way",
    "start": "1485440",
    "end": "1487440"
  },
  {
    "text": "is using the external ca mode",
    "start": "1487440",
    "end": "1490640"
  },
  {
    "text": "and this enables keyboardium basically",
    "start": "1490640",
    "end": "1492480"
  },
  {
    "text": "to generate the private keys and then",
    "start": "1492480",
    "end": "1495120"
  },
  {
    "text": "generate the csrs and then",
    "start": "1495120",
    "end": "1496799"
  },
  {
    "text": "you fulfill effectively the certificate",
    "start": "1496799",
    "end": "1500000"
  },
  {
    "text": "signing requests yourself and so we've",
    "start": "1500000",
    "end": "1502960"
  },
  {
    "text": "built",
    "start": "1502960",
    "end": "1503600"
  },
  {
    "text": "a jet stacking integration um between",
    "start": "1503600",
    "end": "1506480"
  },
  {
    "text": "cuba dm and",
    "start": "1506480",
    "end": "1507679"
  },
  {
    "text": "venify just to demonstrate that you can",
    "start": "1507679",
    "end": "1510799"
  },
  {
    "text": "use this and",
    "start": "1510799",
    "end": "1512080"
  },
  {
    "text": "since we actually did this this command",
    "start": "1512080",
    "end": "1515440"
  },
  {
    "text": "cert generate csr has has actually begun",
    "start": "1515440",
    "end": "1519440"
  },
  {
    "text": "ga",
    "start": "1519440",
    "end": "1521520"
  },
  {
    "text": "so how about provisioning of",
    "start": "1521520",
    "end": "1523520"
  },
  {
    "text": "certificates for the the gubernates",
    "start": "1523520",
    "end": "1525200"
  },
  {
    "text": "nodes on the previous slide",
    "start": "1525200",
    "end": "1526880"
  },
  {
    "text": "we saw how you can use qbdm to",
    "start": "1526880",
    "end": "1530480"
  },
  {
    "text": "provision certificate for the control",
    "start": "1530480",
    "end": "1531840"
  },
  {
    "text": "plane and how you can customize that and",
    "start": "1531840",
    "end": "1533360"
  },
  {
    "text": "use you know an external",
    "start": "1533360",
    "end": "1535200"
  },
  {
    "text": "external ca provided certificates but",
    "start": "1535200",
    "end": "1538480"
  },
  {
    "text": "how about the nodes themselves",
    "start": "1538480",
    "end": "1540400"
  },
  {
    "text": "well keyboard em uses the kubernetes",
    "start": "1540400",
    "end": "1542799"
  },
  {
    "text": "certificates",
    "start": "1542799",
    "end": "1543919"
  },
  {
    "text": "api and um that one uh that's actually",
    "start": "1543919",
    "end": "1546880"
  },
  {
    "text": "been built into kubernetes for some time",
    "start": "1546880",
    "end": "1549200"
  },
  {
    "text": "uh it's only recently i think 118",
    "start": "1549200",
    "end": "1552640"
  },
  {
    "text": "and that kind of g8 there's now like a",
    "start": "1552640",
    "end": "1555120"
  },
  {
    "text": "v1",
    "start": "1555120",
    "end": "1556240"
  },
  {
    "text": "of that api so through a process of",
    "start": "1556240",
    "end": "1559520"
  },
  {
    "text": "bootstrap",
    "start": "1559520",
    "end": "1560720"
  },
  {
    "text": "uh the keyblade makes a certificate",
    "start": "1560720",
    "end": "1562240"
  },
  {
    "text": "signing request uh",
    "start": "1562240",
    "end": "1563840"
  },
  {
    "text": "that's this resource here to the api",
    "start": "1563840",
    "end": "1565679"
  },
  {
    "text": "server and that",
    "start": "1565679",
    "end": "1567440"
  },
  {
    "text": "certificate signing request as you can",
    "start": "1567440",
    "end": "1569919"
  },
  {
    "text": "see here on the side has a has assigned",
    "start": "1569919",
    "end": "1571679"
  },
  {
    "text": "a name",
    "start": "1571679",
    "end": "1572720"
  },
  {
    "text": "and those that's not a required field um",
    "start": "1572720",
    "end": "1575840"
  },
  {
    "text": "as of",
    "start": "1575840",
    "end": "1576400"
  },
  {
    "text": "as of uh v1 and those signers are",
    "start": "1576400",
    "end": "1579279"
  },
  {
    "text": "actually built into the keep controller",
    "start": "1579279",
    "end": "1580880"
  },
  {
    "text": "managers that one there the cube api",
    "start": "1580880",
    "end": "1582720"
  },
  {
    "text": "server",
    "start": "1582720",
    "end": "1583200"
  },
  {
    "text": "client kubler signer that's built into",
    "start": "1583200",
    "end": "1586159"
  },
  {
    "text": "the controller manager and that will",
    "start": "1586159",
    "end": "1587600"
  },
  {
    "text": "automatically basically approve",
    "start": "1587600",
    "end": "1590000"
  },
  {
    "text": "um yeah the signing of those",
    "start": "1590000",
    "end": "1592720"
  },
  {
    "text": "certificates but you can also configure",
    "start": "1592720",
    "end": "1594480"
  },
  {
    "text": "it in fact to",
    "start": "1594480",
    "end": "1595760"
  },
  {
    "text": "sort of have like a manual approval and",
    "start": "1595760",
    "end": "1598080"
  },
  {
    "text": "that you may want to provide",
    "start": "1598080",
    "end": "1599600"
  },
  {
    "text": "i'm using a something like cube ctl",
    "start": "1599600",
    "end": "1602880"
  },
  {
    "text": "so having a sign a name means that you",
    "start": "1602880",
    "end": "1605120"
  },
  {
    "text": "can plug in",
    "start": "1605120",
    "end": "1606559"
  },
  {
    "text": "also other signing mechanisms uh in that",
    "start": "1606559",
    "end": "1609039"
  },
  {
    "text": "you know and",
    "start": "1609039",
    "end": "1610240"
  },
  {
    "text": "cert in the same manager project we've",
    "start": "1610240",
    "end": "1612480"
  },
  {
    "text": "actually worked on some experimental",
    "start": "1612480",
    "end": "1614240"
  },
  {
    "text": "signs you can see a link to a couple of",
    "start": "1614240",
    "end": "1616080"
  },
  {
    "text": "them",
    "start": "1616080",
    "end": "1616720"
  },
  {
    "text": "uh there one is the sinus ca so that's",
    "start": "1616720",
    "end": "1620080"
  },
  {
    "text": "effectively a curve local",
    "start": "1620080",
    "end": "1621440"
  },
  {
    "text": "ca and also an integration um",
    "start": "1621440",
    "end": "1624799"
  },
  {
    "text": "with venifi using its uh kind of open",
    "start": "1624799",
    "end": "1627279"
  },
  {
    "text": "source visa",
    "start": "1627279",
    "end": "1628080"
  },
  {
    "text": "library in the next release of certain",
    "start": "1628080",
    "end": "1631120"
  },
  {
    "text": "manage we're actually going to be adding",
    "start": "1631120",
    "end": "1632640"
  },
  {
    "text": "uh support or the next releases should i",
    "start": "1632640",
    "end": "1634880"
  },
  {
    "text": "say open valuing support",
    "start": "1634880",
    "end": "1636880"
  },
  {
    "text": "for the community certificates api so",
    "start": "1636880",
    "end": "1639679"
  },
  {
    "text": "that means you're actually going to use",
    "start": "1639679",
    "end": "1640960"
  },
  {
    "text": "all the various cert manager issuers",
    "start": "1640960",
    "end": "1643120"
  },
  {
    "text": "um in order to sign a certificate",
    "start": "1643120",
    "end": "1645679"
  },
  {
    "text": "signing quest just like this",
    "start": "1645679",
    "end": "1647279"
  },
  {
    "text": "um and that'll open uh up you know open",
    "start": "1647279",
    "end": "1650480"
  },
  {
    "text": "the project up to being",
    "start": "1650480",
    "end": "1651520"
  },
  {
    "text": "able to support you know kind of many",
    "start": "1651520",
    "end": "1653120"
  },
  {
    "text": "more uh use cases",
    "start": "1653120",
    "end": "1655039"
  },
  {
    "text": "so we'll support this typical request",
    "start": "1655039",
    "end": "1657039"
  },
  {
    "text": "that's brought into the project",
    "start": "1657039",
    "end": "1658559"
  },
  {
    "text": "and certificate signing requests that's",
    "start": "1658559",
    "end": "1660880"
  },
  {
    "text": "in the core of the project",
    "start": "1660880",
    "end": "1662080"
  },
  {
    "text": "core of the open source kubernetes",
    "start": "1662080",
    "end": "1663919"
  },
  {
    "text": "project and over time",
    "start": "1663919",
    "end": "1665919"
  },
  {
    "text": "we'll look to sort of more fully embrace",
    "start": "1665919",
    "end": "1667679"
  },
  {
    "text": "that core type",
    "start": "1667679",
    "end": "1669440"
  },
  {
    "text": "in the project",
    "start": "1669440",
    "end": "1672398"
  },
  {
    "start": "1673000",
    "end": "1776000"
  },
  {
    "text": "so to summarize there's lots of ways in",
    "start": "1674880",
    "end": "1676720"
  },
  {
    "text": "which you can use set manager",
    "start": "1676720",
    "end": "1678880"
  },
  {
    "text": "beyond ingress there are many use cases",
    "start": "1678880",
    "end": "1681919"
  },
  {
    "text": "that stretch",
    "start": "1681919",
    "end": "1682640"
  },
  {
    "text": "far and wide really across the ecosystem",
    "start": "1682640",
    "end": "1684640"
  },
  {
    "text": "and you can use it",
    "start": "1684640",
    "end": "1685919"
  },
  {
    "text": "for lots of different types of workloads",
    "start": "1685919",
    "end": "1688240"
  },
  {
    "text": "including even",
    "start": "1688240",
    "end": "1689600"
  },
  {
    "text": "the cluster itself so you can use the",
    "start": "1689600",
    "end": "1692320"
  },
  {
    "text": "certificate",
    "start": "1692320",
    "end": "1693039"
  },
  {
    "text": "and certificate request resources",
    "start": "1693039",
    "end": "1695440"
  },
  {
    "text": "directly",
    "start": "1695440",
    "end": "1696640"
  },
  {
    "text": "and programmatically you can use the csi",
    "start": "1696640",
    "end": "1700080"
  },
  {
    "text": "driver if you want to be able to have",
    "start": "1700080",
    "end": "1701919"
  },
  {
    "text": "pretty seamless pod identities created",
    "start": "1701919",
    "end": "1705760"
  },
  {
    "text": "and have those renewed and how important",
    "start": "1705760",
    "end": "1708960"
  },
  {
    "text": "you have the private key remain",
    "start": "1708960",
    "end": "1710720"
  },
  {
    "text": "node local you can also integrate search",
    "start": "1710720",
    "end": "1713600"
  },
  {
    "text": "manager with a variety of different",
    "start": "1713600",
    "end": "1714880"
  },
  {
    "text": "service meshes we've got",
    "start": "1714880",
    "end": "1716080"
  },
  {
    "text": "integration today with link d istio and",
    "start": "1716080",
    "end": "1719200"
  },
  {
    "text": "open service mesh",
    "start": "1719200",
    "end": "1720720"
  },
  {
    "text": "more to come the web hooks and also the",
    "start": "1720720",
    "end": "1723760"
  },
  {
    "text": "control plane and node certificates as",
    "start": "1723760",
    "end": "1725440"
  },
  {
    "text": "well",
    "start": "1725440",
    "end": "1727200"
  },
  {
    "text": "as said in 1.3 or as of 1.3 we'll be",
    "start": "1727200",
    "end": "1730159"
  },
  {
    "text": "supporting the kubernetes certificates",
    "start": "1730159",
    "end": "1732320"
  },
  {
    "text": "api and we're looking for many more use",
    "start": "1732320",
    "end": "1735840"
  },
  {
    "text": "cases so if you",
    "start": "1735840",
    "end": "1737200"
  },
  {
    "text": "have some ideas or you want to become",
    "start": "1737200",
    "end": "1739279"
  },
  {
    "text": "getting involved please come and join us",
    "start": "1739279",
    "end": "1742000"
  },
  {
    "text": "set manager dev cert manager slack",
    "start": "1742000",
    "end": "1745279"
  },
  {
    "text": "channels",
    "start": "1745279",
    "end": "1746320"
  },
  {
    "text": "come and join us i'm always really",
    "start": "1746320",
    "end": "1749200"
  },
  {
    "text": "willing",
    "start": "1749200",
    "end": "1749600"
  },
  {
    "text": "to hear of new ideas feedback and",
    "start": "1749600",
    "end": "1752799"
  },
  {
    "text": "also have contributors come join us",
    "start": "1752799",
    "end": "1756240"
  },
  {
    "text": "help build it so thanks to everyone",
    "start": "1756240",
    "end": "1760000"
  },
  {
    "text": "we're going to be available here now for",
    "start": "1760000",
    "end": "1761600"
  },
  {
    "text": "some live q a",
    "start": "1761600",
    "end": "1763279"
  },
  {
    "text": "after this session it's been a pleasure",
    "start": "1763279",
    "end": "1765520"
  },
  {
    "text": "being able to tell you a bit more about",
    "start": "1765520",
    "end": "1766559"
  },
  {
    "text": "the project and",
    "start": "1766559",
    "end": "1767760"
  },
  {
    "text": "the various different use cases that",
    "start": "1767760",
    "end": "1769360"
  },
  {
    "text": "we're building set manager for",
    "start": "1769360",
    "end": "1772240"
  },
  {
    "text": "look for your questions stay safe",
    "start": "1772240",
    "end": "1774240"
  },
  {
    "text": "everyone thanks bye-bye",
    "start": "1774240",
    "end": "1778240"
  }
]