[
  {
    "text": "today we are going to explore the concepts and an implementation behind a universal control plan a control plane",
    "start": "80",
    "end": "8000"
  },
  {
    "text": "for everything infrastructure services applications but before we do that let",
    "start": "8000",
    "end": "13599"
  },
  {
    "text": "me do a quick introduction my name is victor i am a developer advocate at top bound we are a company behind the cncf",
    "start": "13599",
    "end": "21039"
  },
  {
    "text": "project crossplane which is the implementation of a universal control plan i am accompanied by two of my",
    "start": "21039",
    "end": "27359"
  },
  {
    "text": "colleagues and i will let them introduce themselves my name is aaron eaton i am the senior site reliability engineer at",
    "start": "27359",
    "end": "34079"
  },
  {
    "text": "upbound cloud and i am a maintainer on the provider aws project hi everyone i'm muafak i've been working on cross",
    "start": "34079",
    "end": "40719"
  },
  {
    "text": "playing for the last two and a half years and one of the maintainers of course playing on all the providers and",
    "start": "40719",
    "end": "46000"
  },
  {
    "text": "i'm a staff software engineering engineer at that bound traditionally we tend to manage infrastructure and",
    "start": "46000",
    "end": "51680"
  },
  {
    "text": "services by defining the desired state and then letting some command line interfaces converge the actual state",
    "start": "51680",
    "end": "59039"
  },
  {
    "text": "into that desired state by communicating with the api of a provider of choice",
    "start": "59039",
    "end": "64478"
  },
  {
    "text": "that could be aws azure google cloud alibaba or any other cloud provider what",
    "start": "64479",
    "end": "70479"
  },
  {
    "text": "is special about those apis is that there is always a control plane behind them a control plane is making sure that",
    "start": "70479",
    "end": "77360"
  },
  {
    "text": "resources are created updated deleted that they are scheduled that they have allocated resources and so on and so",
    "start": "77360",
    "end": "84159"
  },
  {
    "text": "forth however there are a couple of problems with the tools that we are using today they do not have an api and",
    "start": "84159",
    "end": "89759"
  },
  {
    "text": "they do not have a control plane and managing infrastructure and services without an api and without the control",
    "start": "89759",
    "end": "96400"
  },
  {
    "text": "plane is painful and we already experienced the benefits of having those tools through deployment of our",
    "start": "96400",
    "end": "102079"
  },
  {
    "text": "applications in a kubernetes cluster kubernetes api allows us to communicate",
    "start": "102079",
    "end": "107280"
  },
  {
    "text": "with kubernetes control plane and tell it what is the desired state that we want when dealing in applications",
    "start": "107280",
    "end": "114079"
  },
  {
    "text": "especially those running in kubernetes we moved away from the imperative way of",
    "start": "114079",
    "end": "119280"
  },
  {
    "text": "managing them we are not saying anymore install this create that update this",
    "start": "119280",
    "end": "124880"
  },
  {
    "text": "delete that and so on and so forth we are always defining the desired state and letting the scheduler the control",
    "start": "124880",
    "end": "131840"
  },
  {
    "text": "plane figure out what should be done the benefits of kubernetes api and control",
    "start": "131840",
    "end": "137440"
  },
  {
    "text": "plane are obvious and that's why most of us are moving or already moved our",
    "start": "137440",
    "end": "143520"
  },
  {
    "text": "workloads to kubernetes but that is not enough we need something more universal",
    "start": "143520",
    "end": "149440"
  },
  {
    "text": "we need a universal api and a universal control plane that will allow us to manage not only applications in a",
    "start": "149440",
    "end": "156239"
  },
  {
    "text": "kubernetes cluster but everything services infrastructure applications or",
    "start": "156239",
    "end": "161519"
  },
  {
    "text": "any other type of resources allocated to one or many clouds most of us are moving",
    "start": "161519",
    "end": "167840"
  },
  {
    "text": "towards multi-cloud type of systems and we need a universal api and a universal",
    "start": "167840",
    "end": "174720"
  },
  {
    "text": "control plane that will manage everything and the solution cannot be proprietary it needs to be open source",
    "start": "174720",
    "end": "182000"
  },
  {
    "text": "and all major vendors need to contribute to it and we already have such a solution it is called crossplane so",
    "start": "182000",
    "end": "190000"
  },
  {
    "text": "today we are going to explore crossplane and see some of the benefits there is not enough time to see all the benefits",
    "start": "190000",
    "end": "196879"
  },
  {
    "text": "but we are going to see some of the benefits that crossplan gives us especially when compared with some other",
    "start": "196879",
    "end": "202959"
  },
  {
    "text": "tools that we might be using to manage our infrastructure services and applications let's take a look at what",
    "start": "202959",
    "end": "209120"
  },
  {
    "text": "crossplane is and how crossplane can use compositions to empower your development",
    "start": "209120",
    "end": "214799"
  },
  {
    "text": "teams to self-provision custom resources while maintaining your platform team's",
    "start": "214799",
    "end": "220959"
  },
  {
    "text": "control and visibility on what is being deployed and managed crossplane is an",
    "start": "220959",
    "end": "226480"
  },
  {
    "text": "open source kubernetes add-on focuses on two main feature areas custom platform",
    "start": "226480",
    "end": "231519"
  },
  {
    "text": "abstractions which we call apis and crossplane resource model otherwise known as the xrm custom platform",
    "start": "231519",
    "end": "238319"
  },
  {
    "text": "abstractions enable infrastructure owners to declaratively build an opinionated platform for developers",
    "start": "238319",
    "end": "244080"
  },
  {
    "text": "while the crossplane resource model provides a universal api for managing those resources consistently in every",
    "start": "244080",
    "end": "249680"
  },
  {
    "text": "environment crossplane was launched in december of 2018 by the creators of rook which is a cncf graduated project as it",
    "start": "249680",
    "end": "256479"
  },
  {
    "text": "says here we were accepted into sandbox in june 2020 our first major stable milestone was released in december of",
    "start": "256479",
    "end": "262240"
  },
  {
    "text": "2020 and in september of 2021 we moved to incubation status in the cncf",
    "start": "262240",
    "end": "267840"
  },
  {
    "text": "crossplane manages granular resources for both cloud and on-prem infrastructure as represented as crds",
    "start": "267840",
    "end": "274560"
  },
  {
    "text": "controllers which we call providers are written to plug into crossplane with these crds and interface with any api",
    "start": "274560",
    "end": "282479"
  },
  {
    "text": "driven system to enable you to provision infrastructure or any api driven resource through the kubernetes control",
    "start": "282479",
    "end": "289440"
  },
  {
    "text": "plane what this means is that as a platform operator you would create an rds resource submitted to the api server",
    "start": "289440",
    "end": "296720"
  },
  {
    "text": "it would then be watched by the rds controller which would submit commands to the aws api to provision rds",
    "start": "296720",
    "end": "303039"
  },
  {
    "text": "instances we call these providers in the crossplane world there are already several providers available from major",
    "start": "303039",
    "end": "309440"
  },
  {
    "text": "clouds and more are being developed by the community every day to get a look at what we already have covered you can",
    "start": "309440",
    "end": "316080"
  },
  {
    "text": "head over to doc.crds.dev which will give you a complete breakdown of any publicly available cross plane",
    "start": "316080",
    "end": "322720"
  },
  {
    "text": "provider here we're looking at crossplane provider aws you can investigate what resources we cover what",
    "start": "322720",
    "end": "328560"
  },
  {
    "text": "sections of the api and what attributes of that resource we expose to reach alpha status and a provider resources",
    "start": "328560",
    "end": "335280"
  },
  {
    "text": "only need to be able to be created and destroyed complete coverage of every field ability to detect out-of-sync",
    "start": "335280",
    "end": "342639"
  },
  {
    "text": "changes all of that is a beta feature if something has been promoted to beta api",
    "start": "342639",
    "end": "347759"
  },
  {
    "text": "level within a provider it is fully functional and it should detect any change to a configuration of a currently",
    "start": "347759",
    "end": "353919"
  },
  {
    "text": "running resource and bring that resource in line with whatever you've specified in the kubernetes api crossplane allows",
    "start": "353919",
    "end": "360639"
  },
  {
    "text": "you to build your own platform api through the use of compositions what this means is you can take all of those",
    "start": "360639",
    "end": "366560"
  },
  {
    "text": "granular resources we were just talking about from any cloud and any vendor even mixing and matching and assemble them",
    "start": "366560",
    "end": "373039"
  },
  {
    "text": "into your own composed resource definition these will be exposed in your kubernetes control plane and can be",
    "start": "373039",
    "end": "380000"
  },
  {
    "text": "leveraged as claims by your development teams your kubernetes clusters may not",
    "start": "380000",
    "end": "385520"
  },
  {
    "text": "look like everybody else's kubernetes cluster your organization may have different security or access",
    "start": "385520",
    "end": "391840"
  },
  {
    "text": "requirements you may have certain performance goals which require tweaks to the configuration that are",
    "start": "391840",
    "end": "397360"
  },
  {
    "text": "non-standard you may have unique solutions in how your app is architected",
    "start": "397360",
    "end": "402639"
  },
  {
    "text": "that require you to provision your infrastructure in ways that are not the",
    "start": "402639",
    "end": "408000"
  },
  {
    "text": "same as everybody else you may be just be running multiple clouds you may have gke clusters which are using ec2 nodes",
    "start": "408000",
    "end": "415039"
  },
  {
    "text": "all of this is the reason we created compositions you can compose your definition of what is a kubernetes",
    "start": "415039",
    "end": "421680"
  },
  {
    "text": "cluster what is a storage bucket what is a database and make it available for your development teams to access you can",
    "start": "421680",
    "end": "428479"
  },
  {
    "text": "compose these and offer them as a single cluster resource limiting the",
    "start": "428479",
    "end": "433759"
  },
  {
    "text": "configuration values to only those that a developer would need to change to suit",
    "start": "433759",
    "end": "438960"
  },
  {
    "text": "their purposes everything else within the composition would stay within the control of the platform team this allows",
    "start": "438960",
    "end": "444319"
  },
  {
    "text": "you to hide infrastructure complexity and also allows you to add policy guard rails around the infrastructure that",
    "start": "444319",
    "end": "450639"
  },
  {
    "text": "your teams need to launch all of this is happening within the kubernetes api this means any tool that you currently use",
    "start": "450639",
    "end": "457599"
  },
  {
    "text": "in-house to talk to your kubernetes clusters can continue to be used when talking to these custom resources that",
    "start": "457599",
    "end": "464800"
  },
  {
    "text": "you have created this is not code crossplane resource model allows you to handle all of this in configuration and",
    "start": "464800",
    "end": "473039"
  },
  {
    "text": "definition you do not have to write your own custom code in order to manage these",
    "start": "473039",
    "end": "478400"
  },
  {
    "text": "custom resources crossplane uses the crossplane resource model in order to",
    "start": "478400",
    "end": "483520"
  },
  {
    "text": "give you a consistent api across all of your resources so the same",
    "start": "483520",
    "end": "488879"
  },
  {
    "text": "api that allows you to declare a deployment or a replica set or a service or a pod is also going to allow you to",
    "start": "488879",
    "end": "495360"
  },
  {
    "text": "provision a kubernetes cluster you get to decide whether that kubernetes cluster goes into an already existing",
    "start": "495360",
    "end": "501360"
  },
  {
    "text": "network or has its own you get to decide when you provision a bucket if it already comes with an iam role or",
    "start": "501360",
    "end": "507280"
  },
  {
    "text": "service account for access to it you get to decide what security configuration goes into it and all of that can be",
    "start": "507280",
    "end": "513200"
  },
  {
    "text": "built in you can call for a claim for an instance of one of these resources",
    "start": "513200",
    "end": "518399"
  },
  {
    "text": "through the same kubernetes api that you're using to deploy your services and your workloads we are extending the",
    "start": "518399",
    "end": "524320"
  },
  {
    "text": "kubernetes resource model in an opinionated way to provide this universal experience this means that if",
    "start": "524320",
    "end": "530080"
  },
  {
    "text": "you have a package that you want to run that if you are using some kind of standardized resources some publicly",
    "start": "530080",
    "end": "537120"
  },
  {
    "text": "available configuration package on the crossplane tool it's going to behave exactly the same way as your custom",
    "start": "537120",
    "end": "543440"
  },
  {
    "text": "packages every object in the kubernetes resource manager has a consistent behavior we've enabled you to do",
    "start": "543440",
    "end": "549120"
  },
  {
    "text": "cross-resource references standardize spec and status we've enabled connection secrets and credentials we allow you to",
    "start": "549120",
    "end": "554959"
  },
  {
    "text": "set the external name of your resources and we have life cycle policies for managing them through their different",
    "start": "554959",
    "end": "560080"
  },
  {
    "text": "phases of deployment and tear down our composition engine also has another unique feature in which you can publish",
    "start": "560080",
    "end": "565440"
  },
  {
    "text": "several compositions which respond to the same custom resource type you can use labels to select these compositions",
    "start": "565440",
    "end": "572560"
  },
  {
    "text": "when you create your claim this means that if you are in an organization where your developers are concerned with",
    "start": "572560",
    "end": "578399"
  },
  {
    "text": "whether their clusters are running in a specific cloud or a specific environment you may have use cases where you need to",
    "start": "578399",
    "end": "584000"
  },
  {
    "text": "test how your code behaves when it's inside of aws versus when it's inside gcp",
    "start": "584000",
    "end": "589600"
  },
  {
    "text": "versus when it's inside azure you can do all of this through the same resource by changing the label of the composition",
    "start": "589600",
    "end": "595920"
  },
  {
    "text": "that it's going to leverage so when we say you can mix and match you can have compositions that work across all clouds",
    "start": "595920",
    "end": "601040"
  },
  {
    "text": "you can have compositions that deploy resources in multiple clouds simultaneously and allows them to",
    "start": "601040",
    "end": "606399"
  },
  {
    "text": "interact or you can construct cloud specific compositions depending on your",
    "start": "606399",
    "end": "611680"
  },
  {
    "text": "use case so the same cluster resource that you declare can have an aws variant and a gcp variant and as you can see",
    "start": "611680",
    "end": "618800"
  },
  {
    "text": "launching a kubernetes cluster on eks requires a different set of support mechanisms than launching a kubernetes",
    "start": "618800",
    "end": "624959"
  },
  {
    "text": "cluster on gke some of these abstractions are name only a network and vpc are roughly analogous but some node",
    "start": "624959",
    "end": "631760"
  },
  {
    "text": "pools and node groups are roughly analogous but some of them are fundamental differences and at the same",
    "start": "631760",
    "end": "636959"
  },
  {
    "text": "time while you're launching an eks cluster or a gke cluster and all of the associated infrastructure needed to",
    "start": "636959",
    "end": "642640"
  },
  {
    "text": "drive them you can include helm charts that are standardized across both you have certain cluster operators policy",
    "start": "642640",
    "end": "648160"
  },
  {
    "text": "agents enforcement tools that you need to run on every cluster you can include those in your composition as well before",
    "start": "648160",
    "end": "653839"
  },
  {
    "text": "we jump into a demo let me give you a brief overview of what i will try to accomplish i want to have a single api",
    "start": "653839",
    "end": "661040"
  },
  {
    "text": "through which i want to manage everything some resources might be in azure others might be in aws i might",
    "start": "661040",
    "end": "667279"
  },
  {
    "text": "sprinkle it with alibaba and so on and so forth i want to be able to manage infrastructure and to manage services",
    "start": "667279",
    "end": "673839"
  },
  {
    "text": "and to manage applications and i need a single api through which i can do all that through which i can declare the",
    "start": "673839",
    "end": "680160"
  },
  {
    "text": "desired state that i want through which i can query the actual state and so on and so forth and behind that api there",
    "start": "680160",
    "end": "686720"
  },
  {
    "text": "must be a control plane a control plane capable of figuring out what to do with",
    "start": "686720",
    "end": "693040"
  },
  {
    "text": "all those resources what should go where how something should be done where",
    "start": "693040",
    "end": "698480"
  },
  {
    "text": "something should be done and so on and so forth that alone would be highly beneficial but i want to go step further",
    "start": "698480",
    "end": "704800"
  },
  {
    "text": "i want to be able to create completely new interfaces new resource definitions",
    "start": "704800",
    "end": "710000"
  },
  {
    "text": "that will enable developers to manage infrastructure and services and applications by themselves",
    "start": "710000",
    "end": "716480"
  },
  {
    "text": "so we want operators or series and security experts and so on and so forth to be able to implement best practices",
    "start": "716480",
    "end": "723279"
  },
  {
    "text": "and implementations of all the resources that we need but expose those to everybody else to developers in a way",
    "start": "723279",
    "end": "730639"
  },
  {
    "text": "that is easy to manage easy to consume and easy to define this is about being",
    "start": "730639",
    "end": "737040"
  },
  {
    "text": "able to shift left it is about collaboration between different type of experts all with the goal of enabling",
    "start": "737040",
    "end": "745440"
  },
  {
    "text": "people on the left developers testers and so on and so forth to manage everything and to have full freedom",
    "start": "745440",
    "end": "752160"
  },
  {
    "text": "without being constrained with things that do not matter to them so let's jump",
    "start": "752160",
    "end": "757600"
  },
  {
    "text": "into a demo and see crossplane in action we always want to start with the desired state we want to define what should be",
    "start": "757600",
    "end": "764240"
  },
  {
    "text": "the state of some resources and those resources could be anything it could be a cluster it could be networking it",
    "start": "764240",
    "end": "770000"
  },
  {
    "text": "could be a database it could be applications or more often than not it should be a combination of all those",
    "start": "770000",
    "end": "776079"
  },
  {
    "text": "let's start with a simple example let's say that we want to have a cluster and let it be in google cloud maybe it could",
    "start": "776079",
    "end": "782800"
  },
  {
    "text": "be gk cluster for example a definition could be something like this examples",
    "start": "782800",
    "end": "788720"
  },
  {
    "text": "google gk no xrd",
    "start": "788720",
    "end": "793920"
  },
  {
    "text": "and remember this is a very simple example i will show you more complex examples soon so here we have a cluster",
    "start": "793920",
    "end": "801279"
  },
  {
    "text": "and that cluster has some parameters like hey it should run in usc and it should be the latest version and",
    "start": "801279",
    "end": "808000"
  },
  {
    "text": "then we have a node pool that should be attached to that cluster and that node pool also has some parameters like hey",
    "start": "808000",
    "end": "814079"
  },
  {
    "text": "location should be this one and the reference to the cluster is this function so it should be attached to",
    "start": "814079",
    "end": "820160"
  },
  {
    "text": "this cluster this is the number of nodes i want to have initially and there are some other parameters here they're not",
    "start": "820160",
    "end": "826560"
  },
  {
    "text": "really important for this story what does matter is that this gives me a",
    "start": "826560",
    "end": "831680"
  },
  {
    "text": "declarative way to define my resources i could do something similar with terraform pollumi ansible and so on and",
    "start": "831680",
    "end": "839440"
  },
  {
    "text": "so forth soon you will see the things that you cannot do with those tools for now what makes this special is that this",
    "start": "839440",
    "end": "846079"
  },
  {
    "text": "is a kubernetes api these are not definitions in some proprietary format this is kubernetes syntax those are",
    "start": "846079",
    "end": "852720"
  },
  {
    "text": "kubernetes manifests and in this case we are using kubernetes resources to define",
    "start": "852720",
    "end": "858920"
  },
  {
    "text": "infrastructure in google cloud and of course we can do something like this cube cattle apply and then the dash file",
    "start": "858920",
    "end": "866560"
  },
  {
    "text": "name and the examples google i forgot what is it gk no xrd",
    "start": "866560",
    "end": "873440"
  },
  {
    "text": "dot yaml right we can apply those resources in a kubernetes cluster that already has cross plane up and running",
    "start": "873440",
    "end": "879839"
  },
  {
    "text": "in the same way as we would manage any other resources in a kubernetes cluster the major difference in this case is",
    "start": "879839",
    "end": "886959"
  },
  {
    "text": "that crossplane extends the reach of kubernetes api instead of managing only",
    "start": "886959",
    "end": "892800"
  },
  {
    "text": "our applications we are managing things not only inside the kubernetes cluster",
    "start": "892800",
    "end": "898079"
  },
  {
    "text": "but also outside and in this case outside means google cloud resources so",
    "start": "898079",
    "end": "903680"
  },
  {
    "text": "i'm going to apply this and voila come on go go there we are we",
    "start": "903680",
    "end": "910399"
  },
  {
    "text": "got two kubernetes resources created and from now on cross plane will take this as the desired state and make sure that",
    "start": "910399",
    "end": "917360"
  },
  {
    "text": "the actual state is converged into that desired state it will make sure that the",
    "start": "917360",
    "end": "922720"
  },
  {
    "text": "cluster and the node pool is not only created in google cloud but the state is",
    "start": "922720",
    "end": "928560"
  },
  {
    "text": "maintained forever or at least until i change my opinion and change the desired",
    "start": "928560",
    "end": "933759"
  },
  {
    "text": "state so crossplan is doing automated drift detection and reconciliation and i",
    "start": "933759",
    "end": "938800"
  },
  {
    "text": "will show you an example of that in a second for now what i want to focus on is the api i should be able to query the",
    "start": "938800",
    "end": "946880"
  },
  {
    "text": "kubernetes api to find out the status of those resources and i can say something like hey get clusters",
    "start": "946880",
    "end": "954399"
  },
  {
    "text": "of type container dot gcp dot cross plane dot io and i can see i should be able to",
    "start": "954399",
    "end": "962399"
  },
  {
    "text": "see in a second yes there is a cluster and right now that cluster is being provisioned crossman is communicating",
    "start": "962399",
    "end": "969279"
  },
  {
    "text": "with google cloud it is telling its api what to do and right now google is provisioning it is creating the cluster",
    "start": "969279",
    "end": "976480"
  },
  {
    "text": "but i can go further i can do things that other tools cannot do because other tools in that area like infrastructure",
    "start": "976480",
    "end": "983040"
  },
  {
    "text": "is called do not have an api so i can do things hey give me the status of all gcp",
    "start": "983040",
    "end": "989759"
  },
  {
    "text": "resources and i can see what's going on with all the resources related with gcp",
    "start": "989759",
    "end": "994959"
  },
  {
    "text": "with google cloud there is a cluster that is being provisioned right now and there is a",
    "start": "994959",
    "end": "1000320"
  },
  {
    "text": "node pool that is not even synchronized it is not synchronized because for the node pool to be created the cluster",
    "start": "1000320",
    "end": "1006480"
  },
  {
    "text": "needs to be up and running and this is an example of an advantage of having a control plane cross plane control plane",
    "start": "1006480",
    "end": "1013120"
  },
  {
    "text": "is trying to figure out what should be done how it should be done when it should be done and so on and so forth",
    "start": "1013120",
    "end": "1018880"
  },
  {
    "text": "right now it is waiting for the cluster to be provisioned and only after that it will go and create the node pool because",
    "start": "1018880",
    "end": "1025918"
  },
  {
    "text": "one depends on the other if i would need to see the details of a resource i can do something like i would do for normal",
    "start": "1025919",
    "end": "1032400"
  },
  {
    "text": "kubernetes applications i can say hey let's describe clusters container dot gcp dot cross",
    "start": "1032400",
    "end": "1040640"
  },
  {
    "text": "plane dot io and the resource i want to describe is called atm",
    "start": "1040640",
    "end": "1046480"
  },
  {
    "text": "gk no xrd and now i can see all the details about that specific resource in",
    "start": "1046480",
    "end": "1053039"
  },
  {
    "text": "this case of a kubernetes cluster of gka cluster including the events that are",
    "start": "1053039",
    "end": "1058799"
  },
  {
    "text": "happening right now now this will take a couple of more minutes i do not want you to wait until google cloud creates all",
    "start": "1058799",
    "end": "1064720"
  },
  {
    "text": "the resources so i will fast forward a few minutes and then we can explore drift detection and reconciliation we",
    "start": "1064720",
    "end": "1071520"
  },
  {
    "text": "can see here that the cluster was created in google cloud and if i go to that cluster i can see that it is fully",
    "start": "1071520",
    "end": "1077280"
  },
  {
    "text": "operational everything is great and so on and so forth but let me do something that will show how drift detection works",
    "start": "1077280",
    "end": "1084160"
  },
  {
    "text": "and that will be yet another thing that infrastructure is called tools cannot do simply because they are not controlled",
    "start": "1084160",
    "end": "1090160"
  },
  {
    "text": "planes they're not monitoring the actual state and trying to find the drifts so i will go to nodes for example and i will",
    "start": "1090160",
    "end": "1097360"
  },
  {
    "text": "simulate that something terrible happened to my node pool by deleting that node pool i'm simulating that the",
    "start": "1097360",
    "end": "1103760"
  },
  {
    "text": "data center went down or something terrible happened with the node pool and so on and so forth now if i go back to",
    "start": "1103760",
    "end": "1109120"
  },
  {
    "text": "the terminal and do cube cattle get node pools i should see that from the corresponding",
    "start": "1109120",
    "end": "1115600"
  },
  {
    "text": "perspective it is still running that's because the node pool was not yet fully shut down and let's see what's going on",
    "start": "1115600",
    "end": "1122559"
  },
  {
    "text": "node pools and we can see that the state is stopping cross plane detected that the",
    "start": "1122559",
    "end": "1127679"
  },
  {
    "text": "node pool is being shut down so it is fully aware at any given moment what is",
    "start": "1127679",
    "end": "1133280"
  },
  {
    "text": "the actual state of the resources the point here is that crossplane is making sure that the state is always maintained",
    "start": "1133280",
    "end": "1140960"
  },
  {
    "text": "and i do not need to worry about it so instead of me freaking out and saying hey i do not know what's going to happen",
    "start": "1140960",
    "end": "1147679"
  },
  {
    "text": "better not be recreated or not and so on and so forth i will just go and get myself a coffee and come back 10 minutes",
    "start": "1147679",
    "end": "1154880"
  },
  {
    "text": "later because hey i'm calm i know that crossplane is going to figure out what to do so let's see what's going on cube",
    "start": "1154880",
    "end": "1161440"
  },
  {
    "text": "cuddle get node pools and it's provisioning cross plane with its drive",
    "start": "1161440",
    "end": "1166799"
  },
  {
    "text": "detection reconciliation figured out that the desired state and the actual state are not in sync that there is a",
    "start": "1166799",
    "end": "1173039"
  },
  {
    "text": "drift between the two and as soon as it could it started creating a new note pool so that the state is maintained but",
    "start": "1173039",
    "end": "1181039"
  },
  {
    "text": "now you might be saying hey that's a simple example i want something more complicated so let's do that let's go",
    "start": "1181039",
    "end": "1186960"
  },
  {
    "text": "into more complex example and see how we can manage more resources at once and",
    "start": "1186960",
    "end": "1193280"
  },
  {
    "text": "how we can enable everybody developers testers whomever to manage infrastructure services and applications",
    "start": "1193280",
    "end": "1199120"
  },
  {
    "text": "and everything else in an easy way without going crazy so if you want to enable others we have three options we",
    "start": "1199120",
    "end": "1205280"
  },
  {
    "text": "can encourage them to open jira tickets so that other people can create infrastructure and services and deploy",
    "start": "1205280",
    "end": "1212000"
  },
  {
    "text": "applications and do whatever needs to be done but that's not the goal we want to enable others we don't want others to",
    "start": "1212000",
    "end": "1218240"
  },
  {
    "text": "depend on us so opening issues and tickets and requesting hey do this for me and do that for me is not an option",
    "start": "1218240",
    "end": "1225039"
  },
  {
    "text": "the second option would be for everybody to stop what they're doing and dedicate couple of years of figuring out all the",
    "start": "1225039",
    "end": "1231600"
  },
  {
    "text": "details about how aws works or alibaba or whatever we are using that's not a",
    "start": "1231600",
    "end": "1237120"
  },
  {
    "text": "good idea for obvious reasons so we need to think of a different solution and that different solution is to create",
    "start": "1237120",
    "end": "1243360"
  },
  {
    "text": "services that others can consume and those services should be made to fulfill",
    "start": "1243360",
    "end": "1249120"
  },
  {
    "text": "the needs of our users and those users as i said before could be developers could be testers could be whomever so",
    "start": "1249120",
    "end": "1256240"
  },
  {
    "text": "i'm about to create a completely new custom resource definition or to be more",
    "start": "1256240",
    "end": "1261360"
  },
  {
    "text": "precise cross plane resource definition or what we call xrd that will generate a",
    "start": "1261360",
    "end": "1267120"
  },
  {
    "text": "new interface and it could look something like this cross plane config definition k test so this is an open api",
    "start": "1267120",
    "end": "1275840"
  },
  {
    "text": "here we are open api schema that says hey whenever somebody wants to manage a cluster there should be some properties",
    "start": "1275840",
    "end": "1282960"
  },
  {
    "text": "and those properties would be in this example in this scenario version and note size and minimum number of nodes",
    "start": "1282960",
    "end": "1289919"
  },
  {
    "text": "and whether they would like to manage their resources through githubs and if they do what should be the repository",
    "start": "1289919",
    "end": "1296480"
  },
  {
    "text": "for the manifests and then we need the implementations of this schema and one possible implementation for aws could be",
    "start": "1296480",
    "end": "1304159"
  },
  {
    "text": "cross plane config composition eks so this is an implementation this contains",
    "start": "1304159",
    "end": "1309919"
  },
  {
    "text": "all the details that are required to run a cluster successfully in aws and as you",
    "start": "1309919",
    "end": "1316000"
  },
  {
    "text": "can see there are many things here because what we do is complex we need to do a lot of things let me scroll to the",
    "start": "1316000",
    "end": "1322480"
  },
  {
    "text": "top if i ever get to the top to show you what i need if i want to run a cluster in aws where is the top where is the top",
    "start": "1322480",
    "end": "1330320"
  },
  {
    "text": "oh my god this is really really complex here we are so i'm creating a composition which will be an",
    "start": "1330320",
    "end": "1335840"
  },
  {
    "text": "implementation of the schema that i showed you before and that one will create a cluster and then it will create",
    "start": "1335840",
    "end": "1342480"
  },
  {
    "text": "a node group and after that it will create an iam role and after that it",
    "start": "1342480",
    "end": "1348480"
  },
  {
    "text": "will create another role actually it's not before or after that crossplan will figure out what is the order of all",
    "start": "1348480",
    "end": "1354559"
  },
  {
    "text": "those things i just need to specify what i need and i need many many many many many many things",
    "start": "1354559",
    "end": "1361520"
  },
  {
    "text": "an average person who is not expert in nws would probably need a lot of time to figure this out and i will create not",
    "start": "1361520",
    "end": "1367679"
  },
  {
    "text": "only aws resources like route table but i will also make sure that that cluster",
    "start": "1367679",
    "end": "1373120"
  },
  {
    "text": "is production ready and what is production ready depends from one scenario to another and in this",
    "start": "1373120",
    "end": "1378159"
  },
  {
    "text": "hypothetical situation i will configure helm to use the credentials of the cluster",
    "start": "1378159",
    "end": "1384480"
  },
  {
    "text": "that is yet to be created and then i will install prometheus in that cluster",
    "start": "1384480",
    "end": "1389760"
  },
  {
    "text": "and then i will what else will i do i will install argo cd in that cluster actually i will not install anything",
    "start": "1389760",
    "end": "1396000"
  },
  {
    "text": "crossplane will make sure that those resources are up and running and then i will configure kubernetes provider which",
    "start": "1396000",
    "end": "1401840"
  },
  {
    "text": "will create a namespace called production and it will create an argo cd",
    "start": "1401840",
    "end": "1406880"
  },
  {
    "text": "project and then it will create an argo cd application and so on and so forth",
    "start": "1406880",
    "end": "1412080"
  },
  {
    "text": "the details are not important right now what does matter is that i as an sre or",
    "start": "1412080",
    "end": "1418159"
  },
  {
    "text": "operator or cs admin can define what infrastructure and services and so on and so forth are and what is required to",
    "start": "1418159",
    "end": "1426480"
  },
  {
    "text": "run something well but this will be hidden from everybody else this is an implementation detail because remember",
    "start": "1426480",
    "end": "1433120"
  },
  {
    "text": "i'm creating a completely new service custom made for my organization so",
    "start": "1433120",
    "end": "1438480"
  },
  {
    "text": "others consumers of this service could do something like this could they find something like examples aws cks.yaml and",
    "start": "1438480",
    "end": "1447520"
  },
  {
    "text": "say hey i want to create a cluster claim cluster claim is the name that i gave to",
    "start": "1447520",
    "end": "1452960"
  },
  {
    "text": "the definition that i showed you before and i will define some labels and say hey i would like to have a cluster in",
    "start": "1452960",
    "end": "1459200"
  },
  {
    "text": "aws and that cluster should be ks i as a user could change those labels i would",
    "start": "1459200",
    "end": "1465279"
  },
  {
    "text": "say no i would like alibaba for example or azure or google cloud that's an",
    "start": "1465279",
    "end": "1470320"
  },
  {
    "text": "implementation detail it's the job of somebody else to define the implementation of this interface of this",
    "start": "1470320",
    "end": "1476880"
  },
  {
    "text": "cluster claim and my job as a user is to say what i want and to define a couple of",
    "start": "1476880",
    "end": "1483360"
  },
  {
    "text": "parameters like hey i care about node size i would like my nodes to be small i",
    "start": "1483360",
    "end": "1488799"
  },
  {
    "text": "do not know what small is i assume that whomever created the implementation for aws in this case knows what small is and",
    "start": "1488799",
    "end": "1496720"
  },
  {
    "text": "i would like to have a minimum of three nodes so i is a developer as a user can",
    "start": "1496720",
    "end": "1502400"
  },
  {
    "text": "write this example and just say hey cubecattle namespace i want to do it in my own",
    "start": "1502400",
    "end": "1508320"
  },
  {
    "text": "namespace a team and i would like to apply something defined in a file that is",
    "start": "1508320",
    "end": "1514640"
  },
  {
    "text": "located in examples aws cks dot yaml",
    "start": "1514640",
    "end": "1520320"
  },
  {
    "text": "and there i go i created that single resource or i'm about to there we go i",
    "start": "1520320",
    "end": "1525679"
  },
  {
    "text": "created a single resource cluster claim that is easy way for me to define what i",
    "start": "1525679",
    "end": "1531520"
  },
  {
    "text": "want even though behind that single resource there are many and i will show you what those are if i would now change",
    "start": "1531520",
    "end": "1538480"
  },
  {
    "text": "the role to be an operator i could say hey let me see what victor created and that could be cube cattle get managed",
    "start": "1538480",
    "end": "1546559"
  },
  {
    "text": "managed resources see resources managed by cross plane it takes a couple of seconds until it processes everything",
    "start": "1546559",
    "end": "1552559"
  },
  {
    "text": "and i can see that behind that single ammo behind those 20 30 lines of yaml i",
    "start": "1552559",
    "end": "1558400"
  },
  {
    "text": "got some policy attachments and some roles and node group and cluster and subnets and security groups and vpcs and",
    "start": "1558400",
    "end": "1565679"
  },
  {
    "text": "internet gateway route table and so on and so forth but there's more to it because i will not get only a cluster as",
    "start": "1565679",
    "end": "1572320"
  },
  {
    "text": "you saw before from the implementation that cluster will have prometheus and it will have argo cd and that targo cd will",
    "start": "1572320",
    "end": "1579600"
  },
  {
    "text": "be already hooked to git repository so i can manage my applications just by pushing files to git let me give you an",
    "start": "1579600",
    "end": "1586880"
  },
  {
    "text": "overview of what's going to come in the next uh months in crossplane so you can",
    "start": "1586880",
    "end": "1592320"
  },
  {
    "text": "follow along everything happening uh in the roadmap project and i think we're updating that every two weeks with the",
    "start": "1592320",
    "end": "1599120"
  },
  {
    "text": "community meeting that you can also attend one of the most exciting things uh for me is tetherjet and the blast",
    "start": "1599120",
    "end": "1607919"
  },
  {
    "text": "provider coverage that it will get us teleget is a project called code generation project that will let anyone",
    "start": "1607919",
    "end": "1615200"
  },
  {
    "text": "to generate a crossplane provider using a telephone provider you can essentially take one telephone provider",
    "start": "1615200",
    "end": "1622720"
  },
  {
    "text": "and produce code controller code and every nci design everything using terajet with that project we're going to",
    "start": "1622720",
    "end": "1630400"
  },
  {
    "text": "have like thousands of crds available for you to use and now like you know we have aws and azure",
    "start": "1630400",
    "end": "1637520"
  },
  {
    "text": "but you can use any telephone provider you would like for that purpose",
    "start": "1637520",
    "end": "1642960"
  },
  {
    "text": "it could be your internal telephone provider or any provider like cloudflare or github or anything you want",
    "start": "1642960",
    "end": "1650320"
  },
  {
    "text": "so that's one thing the other things are scale testing and performance",
    "start": "1650320",
    "end": "1655520"
  },
  {
    "text": "improvements that nick is working on in core crossplane this will allow us to like you know",
    "start": "1655520",
    "end": "1663200"
  },
  {
    "text": "scale the number of composite and claim resources to or drop like a ten",
    "start": "1663200",
    "end": "1668480"
  },
  {
    "text": "thousands right now we're able to scale the two thousand or three thousand i think users are reporting",
    "start": "1668480",
    "end": "1674880"
  },
  {
    "text": "uh but with these improvements will get even higher with less resource usage",
    "start": "1674880",
    "end": "1680080"
  },
  {
    "text": "and the next thing is pluggable secret stores so there have been lots of users asking for",
    "start": "1680080",
    "end": "1686880"
  },
  {
    "text": "a way to not use kubernetes secrets for various reasons and one of the",
    "start": "1686880",
    "end": "1692640"
  },
  {
    "text": "other tools that were that was requested was using vault uh as the store for credentials of",
    "start": "1692640",
    "end": "1699600"
  },
  {
    "text": "the cloud resources that crosstalk provisions uh so that will come with uh with",
    "start": "1699600",
    "end": "1705120"
  },
  {
    "text": "pluggable secret server you can just choose secret source you would like and crosby will publish secrets to only to",
    "start": "1705120",
    "end": "1711039"
  },
  {
    "text": "those resources and the other thing is custom compositions a lot of cross-plain users are happy",
    "start": "1711039",
    "end": "1717840"
  },
  {
    "text": "with composition as is but there are also like advanced use cases or like for example for loops and if and else",
    "start": "1717840",
    "end": "1724720"
  },
  {
    "text": "conditions that they need and they're not right now possible in composition",
    "start": "1724720",
    "end": "1730720"
  },
  {
    "text": "and since we want to keep composition as a layer as simple as possible we will",
    "start": "1730720",
    "end": "1735919"
  },
  {
    "text": "introduce custom compositions that you can just hook up your own server that",
    "start": "1735919",
    "end": "1741039"
  },
  {
    "text": "can like you know render anything you would like with the programming language that you choose and",
    "start": "1741039",
    "end": "1746320"
  },
  {
    "text": "after that we have some like you know ux improvements like composition validations right now you would you",
    "start": "1746320",
    "end": "1752159"
  },
  {
    "text": "would have the templates in your compositions but they would get validated only after you create a",
    "start": "1752159",
    "end": "1757840"
  },
  {
    "text": "composite resource or a claim so with the composite composition validations we will be able to validate",
    "start": "1757840",
    "end": "1763840"
  },
  {
    "text": "them before they make it to the api server and observe only resources is another",
    "start": "1763840",
    "end": "1769520"
  },
  {
    "text": "feature that is requested by the community which will allow us which will allow users",
    "start": "1769520",
    "end": "1774880"
  },
  {
    "text": "to make a managed resource only observable meaning we cross plane will not issue an",
    "start": "1774880",
    "end": "1782399"
  },
  {
    "text": "update or deletion or anything for that matter and that is most useful in cases for example you",
    "start": "1782399",
    "end": "1789279"
  },
  {
    "text": "have a vpc and you would like to use the same vpc in different cross plane environments so having it reconciled in",
    "start": "1789279",
    "end": "1795360"
  },
  {
    "text": "different crossfit environments would might result in a racing condition so",
    "start": "1795360",
    "end": "1800640"
  },
  {
    "text": "far like you know you can just use the vpc directly or with that feature you can just import it as observer only",
    "start": "1800640",
    "end": "1806720"
  },
  {
    "text": "managed resource and then refer it using cross resource references and the last one i would like to mention is genetic",
    "start": "1806720",
    "end": "1813200"
  },
  {
    "text": "cross resource references today as you know the cross resource references work",
    "start": "1813200",
    "end": "1818640"
  },
  {
    "text": "just like how it works in kubernetes meaning you give name and name space only and then it'll",
    "start": "1818640",
    "end": "1825840"
  },
  {
    "text": "find a resource and produce the value that the source resource needs and then just add it",
    "start": "1825840",
    "end": "1832240"
  },
  {
    "text": "there without you know having to know like you know which field of that target resource you need to get i mean and in",
    "start": "1832240",
    "end": "1839600"
  },
  {
    "text": "which format however this does not scale to all all use cases",
    "start": "1839600",
    "end": "1844640"
  },
  {
    "text": "in some cases the source custom resource does not know about the target references resource in",
    "start": "1844640",
    "end": "1851520"
  },
  {
    "text": "those cases we need to have a generic way to tell controller that hey go take that value convert it in that",
    "start": "1851520",
    "end": "1858960"
  },
  {
    "text": "way and only you know put it in this field of that of this source custom resource so that",
    "start": "1858960",
    "end": "1864960"
  },
  {
    "text": "feature will enable us to do that um and these are like you know the main highlights of the roadmap but",
    "start": "1864960",
    "end": "1872080"
  },
  {
    "text": "please make sure to go ahead and like you know take a look at the roadmap and it's in the community meetings and",
    "start": "1872080",
    "end": "1877200"
  },
  {
    "text": "we really highly value user feedback when we decide on like you know which one which one of those",
    "start": "1877200",
    "end": "1883919"
  },
  {
    "text": "should get prioritized uh in our backlog this was a very quick overview i did not have time to go into",
    "start": "1883919",
    "end": "1890880"
  },
  {
    "text": "all the details because i think that the session should be 25 or 30 minutes or something like that but if you would",
    "start": "1890880",
    "end": "1896799"
  },
  {
    "text": "like to know more just come to the slack channel ask your questions you can contact me directly or contact the",
    "start": "1896799",
    "end": "1903279"
  },
  {
    "text": "community as a whole and we will do our best to help you out and give you more information more detail about crossplane",
    "start": "1903279",
    "end": "1910240"
  },
  {
    "text": "because trust me i only scratch the surface there is much more to cross",
    "start": "1910240",
    "end": "1915360"
  },
  {
    "text": "plane that what you saw in such a short period of time",
    "start": "1915360",
    "end": "1921000"
  }
]