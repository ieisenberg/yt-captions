[
  {
    "text": "hello everyone",
    "start": "599",
    "end": "2040"
  },
  {
    "text": "welcome to the cncf webinar on",
    "start": "2040",
    "end": "4440"
  },
  {
    "text": "kubernetes policy exceptions with Giver",
    "start": "4440",
    "end": "6359"
  },
  {
    "text": "now",
    "start": "6359",
    "end": "7200"
  },
  {
    "text": "before we get started a little",
    "start": "7200",
    "end": "8820"
  },
  {
    "text": "introduction about myself I am Anusha",
    "start": "8820",
    "end": "11160"
  },
  {
    "text": "Hegde I am the technical product manager",
    "start": "11160",
    "end": "13559"
  },
  {
    "text": "at narmada nirmata is the creator of",
    "start": "13559",
    "end": "15839"
  },
  {
    "text": "kevarna",
    "start": "15839",
    "end": "17039"
  },
  {
    "text": "previously I've worked at VMware I've",
    "start": "17039",
    "end": "19199"
  },
  {
    "text": "worked on vsphere sdks and tanza",
    "start": "19199",
    "end": "21600"
  },
  {
    "text": "kubernetes is great for rich",
    "start": "21600",
    "end": "24060"
  },
  {
    "text": "I started my OSS Journey back in 2020 or",
    "start": "24060",
    "end": "27359"
  },
  {
    "text": "early 21 with cluster API I was also to",
    "start": "27359",
    "end": "30300"
  },
  {
    "text": "maintain aerobical API provider for",
    "start": "30300",
    "end": "32398"
  },
  {
    "text": "bring your own host and recently I'm",
    "start": "32399",
    "end": "34860"
  },
  {
    "text": "also working with the policy working",
    "start": "34860",
    "end": "36360"
  },
  {
    "text": "group",
    "start": "36360",
    "end": "37620"
  },
  {
    "text": "this is our agenda for today I'm sure",
    "start": "37620",
    "end": "39960"
  },
  {
    "text": "most of you all know what given OS but",
    "start": "39960",
    "end": "41820"
  },
  {
    "text": "for the benefit of everyone we'll have a",
    "start": "41820",
    "end": "43379"
  },
  {
    "text": "quick overview of no what are policies",
    "start": "43379",
    "end": "45960"
  },
  {
    "text": "in kubernetes what is the need for",
    "start": "45960",
    "end": "48120"
  },
  {
    "text": "policy exceptions and how kivino enables",
    "start": "48120",
    "end": "50640"
  },
  {
    "text": "policy exceptions it will also look at",
    "start": "50640",
    "end": "53100"
  },
  {
    "text": "the demo of policy exceptions and given",
    "start": "53100",
    "end": "55920"
  },
  {
    "text": "no and in the end we'll also talk about",
    "start": "55920",
    "end": "58140"
  },
  {
    "text": "what's next for given on policy",
    "start": "58140",
    "end": "60000"
  },
  {
    "text": "exceptions",
    "start": "60000",
    "end": "62160"
  },
  {
    "text": "all right let's get started",
    "start": "62160",
    "end": "64739"
  },
  {
    "text": "this is the basic architecture Pokemon",
    "start": "64739",
    "end": "67680"
  },
  {
    "text": "any kubernetes API request goes through",
    "start": "67680",
    "end": "70560"
  },
  {
    "text": "the API request lifecycle first you have",
    "start": "70560",
    "end": "73500"
  },
  {
    "text": "the authentication and authorization and",
    "start": "73500",
    "end": "76080"
  },
  {
    "text": "then if any web books are registered the",
    "start": "76080",
    "end": "78299"
  },
  {
    "text": "API request is routed through these web",
    "start": "78299",
    "end": "80040"
  },
  {
    "text": "hooks before persisting into hcd there",
    "start": "80040",
    "end": "83400"
  },
  {
    "text": "are two types of admission controls in",
    "start": "83400",
    "end": "85500"
  },
  {
    "text": "kubernetes one is the mutating admission",
    "start": "85500",
    "end": "87420"
  },
  {
    "text": "control the other is validating",
    "start": "87420",
    "end": "89100"
  },
  {
    "text": "admission control mutating admission",
    "start": "89100",
    "end": "91380"
  },
  {
    "text": "control as the name suggests as the",
    "start": "91380",
    "end": "93479"
  },
  {
    "text": "capability to mutate incoming API",
    "start": "93479",
    "end": "95520"
  },
  {
    "text": "requests and validating admission",
    "start": "95520",
    "end": "97560"
  },
  {
    "text": "control can allow requests to persist",
    "start": "97560",
    "end": "101159"
  },
  {
    "text": "into xcd or not",
    "start": "101159",
    "end": "103079"
  },
  {
    "text": "there are no access both mutating",
    "start": "103079",
    "end": "105600"
  },
  {
    "text": "admission control and validating",
    "start": "105600",
    "end": "107040"
  },
  {
    "text": "admission controls at the heart of it it",
    "start": "107040",
    "end": "109680"
  },
  {
    "text": "is a rule processing engine since",
    "start": "109680",
    "end": "112259"
  },
  {
    "text": "cabernetes kubernetes native everything",
    "start": "112259",
    "end": "114479"
  },
  {
    "text": "in Cabernet is governed by crds and",
    "start": "114479",
    "end": "117119"
  },
  {
    "text": "controllers",
    "start": "117119",
    "end": "118320"
  },
  {
    "text": "all the Yellow Boxes you see around here",
    "start": "118320",
    "end": "120420"
  },
  {
    "text": "are custom resource definitions and",
    "start": "120420",
    "end": "123180"
  },
  {
    "text": "cabinet itself is split into multiple",
    "start": "123180",
    "end": "125159"
  },
  {
    "text": "controllers",
    "start": "125159",
    "end": "126479"
  },
  {
    "text": "that are responsible for different",
    "start": "126479",
    "end": "128280"
  },
  {
    "text": "behaviors such as we have a controller",
    "start": "128280",
    "end": "130500"
  },
  {
    "text": "for",
    "start": "130500",
    "end": "131340"
  },
  {
    "text": "policy reporting a control for",
    "start": "131340",
    "end": "133379"
  },
  {
    "text": "background scanning and so on Kevin also",
    "start": "133379",
    "end": "136379"
  },
  {
    "text": "provides the comprehensive CLI to detect",
    "start": "136379",
    "end": "139140"
  },
  {
    "text": "misconfigurations in your kubernetes",
    "start": "139140",
    "end": "140940"
  },
  {
    "text": "manifest as early as possible",
    "start": "140940",
    "end": "143520"
  },
  {
    "text": "you can use the CLI in your cicd",
    "start": "143520",
    "end": "145920"
  },
  {
    "text": "pipeline which can help to detect",
    "start": "145920",
    "end": "147900"
  },
  {
    "text": "misconfigurations much earlier in the",
    "start": "147900",
    "end": "150840"
  },
  {
    "text": "deployment lifecycle",
    "start": "150840",
    "end": "153239"
  },
  {
    "text": "before diving into how equivalent policy",
    "start": "153239",
    "end": "155640"
  },
  {
    "text": "looks like",
    "start": "155640",
    "end": "156720"
  },
  {
    "text": "let's understand what our policies in",
    "start": "156720",
    "end": "158940"
  },
  {
    "text": "kubernetes",
    "start": "158940",
    "end": "160319"
  },
  {
    "text": "policies in general are a set of rules",
    "start": "160319",
    "end": "162840"
  },
  {
    "text": "that Define how resources should be",
    "start": "162840",
    "end": "165120"
  },
  {
    "text": "configured and behave in a cloud-native",
    "start": "165120",
    "end": "167400"
  },
  {
    "text": "environment these policies ensure",
    "start": "167400",
    "end": "170040"
  },
  {
    "text": "compliance security and efficiency",
    "start": "170040",
    "end": "174239"
  },
  {
    "text": "yaml is pretty much a standard format",
    "start": "174239",
    "end": "176400"
  },
  {
    "text": "for writing kubernetes manifests and",
    "start": "176400",
    "end": "178920"
  },
  {
    "text": "giveno also enables you to write",
    "start": "178920",
    "end": "180720"
  },
  {
    "text": "policies and rules using ml",
    "start": "180720",
    "end": "185480"
  },
  {
    "text": "is composed of one or more rules",
    "start": "185599",
    "end": "188760"
  },
  {
    "text": "each rule has a match and exclude block",
    "start": "188760",
    "end": "191040"
  },
  {
    "text": "this is to filter on resources on which",
    "start": "191040",
    "end": "194400"
  },
  {
    "text": "a certain policy and Rule has to be",
    "start": "194400",
    "end": "196319"
  },
  {
    "text": "applied it can match and exclude on any",
    "start": "196319",
    "end": "198840"
  },
  {
    "text": "of these it could be resource clients",
    "start": "198840",
    "end": "200819"
  },
  {
    "text": "names labels annotations and so on there",
    "start": "200819",
    "end": "203760"
  },
  {
    "text": "are four different types of rules",
    "start": "203760",
    "end": "205379"
  },
  {
    "text": "validate mutate generate and verify",
    "start": "205379",
    "end": "207599"
  },
  {
    "text": "images",
    "start": "207599",
    "end": "208500"
  },
  {
    "text": "validate based on some pattern matching",
    "start": "208500",
    "end": "210840"
  },
  {
    "text": "in the role you either evaluates to true",
    "start": "210840",
    "end": "212640"
  },
  {
    "text": "or false",
    "start": "212640",
    "end": "214080"
  },
  {
    "text": "mutate as the name suggests is to mutate",
    "start": "214080",
    "end": "216540"
  },
  {
    "text": "the incoming request",
    "start": "216540",
    "end": "218760"
  },
  {
    "text": "generate helps you create resources on",
    "start": "218760",
    "end": "221400"
  },
  {
    "text": "the Fly based on certain triggers and",
    "start": "221400",
    "end": "224220"
  },
  {
    "text": "verify images is used for verifying",
    "start": "224220",
    "end": "226920"
  },
  {
    "text": "image signatures and attestations",
    "start": "226920",
    "end": "229379"
  },
  {
    "text": "this is a sample cluster policy the",
    "start": "229379",
    "end": "232140"
  },
  {
    "text": "validation failure action is set to",
    "start": "232140",
    "end": "233879"
  },
  {
    "text": "enforce it means if the rule evaluation",
    "start": "233879",
    "end": "235739"
  },
  {
    "text": "evaluates to false",
    "start": "235739",
    "end": "237900"
  },
  {
    "text": "then this particular request will be",
    "start": "237900",
    "end": "240360"
  },
  {
    "text": "dropped and not persisted into exceeding",
    "start": "240360",
    "end": "242340"
  },
  {
    "text": "there is another option possible called",
    "start": "242340",
    "end": "243900"
  },
  {
    "text": "the audit mode",
    "start": "243900",
    "end": "245340"
  },
  {
    "text": "and next we have one rule in this policy",
    "start": "245340",
    "end": "248040"
  },
  {
    "text": "it is matching on resource kind word",
    "start": "248040",
    "end": "251159"
  },
  {
    "text": "it follows the validate rule type this",
    "start": "251159",
    "end": "253680"
  },
  {
    "text": "is one of the four that we discussed",
    "start": "253680",
    "end": "256560"
  },
  {
    "text": "this rule checks that an image tag is",
    "start": "256560",
    "end": "259440"
  },
  {
    "text": "required but latest is not allowed so",
    "start": "259440",
    "end": "262139"
  },
  {
    "text": "here we match on the Pod spec containers",
    "start": "262139",
    "end": "264660"
  },
  {
    "text": "image and we see",
    "start": "264660",
    "end": "266460"
  },
  {
    "text": "the exclamation stands for negation",
    "start": "266460",
    "end": "268560"
  },
  {
    "text": "negation of star in regular expression",
    "start": "268560",
    "end": "271800"
  },
  {
    "text": "indicates any image",
    "start": "271800",
    "end": "274020"
  },
  {
    "text": "so any image that ending in Colon latest",
    "start": "274020",
    "end": "276960"
  },
  {
    "text": "is not allowed so if your Bot tries to",
    "start": "276960",
    "end": "279900"
  },
  {
    "text": "pull an image something like nginx cool",
    "start": "279900",
    "end": "282120"
  },
  {
    "text": "and latest that pod will be blocked by",
    "start": "282120",
    "end": "285240"
  },
  {
    "text": "the admission control",
    "start": "285240",
    "end": "286860"
  },
  {
    "text": "this is a simple validate rule policy",
    "start": "286860",
    "end": "289500"
  },
  {
    "text": "but writing mutate generate and verify",
    "start": "289500",
    "end": "292860"
  },
  {
    "text": "images is also just as simple kivano has",
    "start": "292860",
    "end": "295740"
  },
  {
    "text": "an extensive policy Library this policy",
    "start": "295740",
    "end": "297960"
  },
  {
    "text": "Library can consists of close to 300",
    "start": "297960",
    "end": "300840"
  },
  {
    "text": "policies as of date so please take a",
    "start": "300840",
    "end": "303600"
  },
  {
    "text": "look",
    "start": "303600",
    "end": "304860"
  },
  {
    "text": "now that we know what governor policies",
    "start": "304860",
    "end": "306780"
  },
  {
    "text": "are and how they are implemented you",
    "start": "306780",
    "end": "309000"
  },
  {
    "text": "might wonder that under certain special",
    "start": "309000",
    "end": "311340"
  },
  {
    "text": "circumstances you might want to deviate",
    "start": "311340",
    "end": "313500"
  },
  {
    "text": "from a certain policy rule",
    "start": "313500",
    "end": "315780"
  },
  {
    "text": "we saw that match exclude block allows",
    "start": "315780",
    "end": "318300"
  },
  {
    "text": "filtering of resources but from this",
    "start": "318300",
    "end": "320759"
  },
  {
    "text": "diagram as you can see match and exclude",
    "start": "320759",
    "end": "322919"
  },
  {
    "text": "is part of the policy itself",
    "start": "322919",
    "end": "325139"
  },
  {
    "text": "here we match on resource kind called or",
    "start": "325139",
    "end": "327660"
  },
  {
    "text": "we could exclude from certain resources",
    "start": "327660",
    "end": "329639"
  },
  {
    "text": "but we have to Define that up front at",
    "start": "329639",
    "end": "332940"
  },
  {
    "text": "the time of writing this policy",
    "start": "332940",
    "end": "335600"
  },
  {
    "text": "now this might become limiting if the",
    "start": "335600",
    "end": "338880"
  },
  {
    "text": "policies are not directly editable",
    "start": "338880",
    "end": "341340"
  },
  {
    "text": "and it is indeed a security best",
    "start": "341340",
    "end": "343259"
  },
  {
    "text": "practice to not allow edits to your",
    "start": "343259",
    "end": "345960"
  },
  {
    "text": "policies",
    "start": "345960",
    "end": "347699"
  },
  {
    "text": "and oftentimes in organizations",
    "start": "347699",
    "end": "350639"
  },
  {
    "text": "policies are defined by a Central",
    "start": "350639",
    "end": "352740"
  },
  {
    "text": "Security team and policies are authored",
    "start": "352740",
    "end": "355020"
  },
  {
    "text": "by this team",
    "start": "355020",
    "end": "356400"
  },
  {
    "text": "and different application teams that are",
    "start": "356400",
    "end": "358680"
  },
  {
    "text": "responsible for deployments will need",
    "start": "358680",
    "end": "361139"
  },
  {
    "text": "different kinds of exclusions and",
    "start": "361139",
    "end": "362880"
  },
  {
    "text": "exclusion for one team may not be",
    "start": "362880",
    "end": "364979"
  },
  {
    "text": "applicable to some other team hence it",
    "start": "364979",
    "end": "367380"
  },
  {
    "text": "becomes difficult to Define all the",
    "start": "367380",
    "end": "370139"
  },
  {
    "text": "exclusions in that Central policy",
    "start": "370139",
    "end": "374660"
  },
  {
    "text": "addresses all of these concerns because",
    "start": "374840",
    "end": "377400"
  },
  {
    "text": "it is applied externally to a policy",
    "start": "377400",
    "end": "380220"
  },
  {
    "text": "this also leads to increased",
    "start": "380220",
    "end": "382139"
  },
  {
    "text": "collaboration between teams it is always",
    "start": "382139",
    "end": "384479"
  },
  {
    "text": "a good practice to review a policy",
    "start": "384479",
    "end": "386400"
  },
  {
    "text": "exception before deploying and",
    "start": "386400",
    "end": "388080"
  },
  {
    "text": "acknowledge the risks involved",
    "start": "388080",
    "end": "390419"
  },
  {
    "text": "and exceptions are generally intended to",
    "start": "390419",
    "end": "393300"
  },
  {
    "text": "be short-lived so you can provide",
    "start": "393300",
    "end": "395340"
  },
  {
    "text": "temporary exceptions to policies by",
    "start": "395340",
    "end": "397919"
  },
  {
    "text": "combining with yet another powerful",
    "start": "397919",
    "end": "399780"
  },
  {
    "text": "feature of Kimberly no called the",
    "start": "399780",
    "end": "401160"
  },
  {
    "text": "cleanup policies",
    "start": "401160",
    "end": "402960"
  },
  {
    "text": "which allows the cleanup of resources in",
    "start": "402960",
    "end": "405300"
  },
  {
    "text": "the cluster and in this case the policy",
    "start": "405300",
    "end": "407340"
  },
  {
    "text": "exception itself is the resource",
    "start": "407340",
    "end": "410400"
  },
  {
    "text": "so how policy exceptions are implemented",
    "start": "410400",
    "end": "412500"
  },
  {
    "text": "in cover now",
    "start": "412500",
    "end": "413819"
  },
  {
    "text": "let's look at the slow diagram suppose",
    "start": "413819",
    "end": "416340"
  },
  {
    "text": "say a validate policy exists in enforce",
    "start": "416340",
    "end": "419400"
  },
  {
    "text": "mode and the webhook receives a violated",
    "start": "419400",
    "end": "422580"
  },
  {
    "text": "resource",
    "start": "422580",
    "end": "424080"
  },
  {
    "text": "without policy exception in place",
    "start": "424080",
    "end": "426240"
  },
  {
    "text": "because this is a violating resource and",
    "start": "426240",
    "end": "428940"
  },
  {
    "text": "the validate policies in enforce mode",
    "start": "428940",
    "end": "431759"
  },
  {
    "text": "this resource should be blocked that is",
    "start": "431759",
    "end": "433620"
  },
  {
    "text": "it should not be allowed to persist into",
    "start": "433620",
    "end": "435120"
  },
  {
    "text": "HCT but now what if a matching policy",
    "start": "435120",
    "end": "438000"
  },
  {
    "text": "exception exists if it exists then the",
    "start": "438000",
    "end": "440460"
  },
  {
    "text": "resource is allowed even though this is",
    "start": "440460",
    "end": "442740"
  },
  {
    "text": "a violating resource but if the policy",
    "start": "442740",
    "end": "445500"
  },
  {
    "text": "exception did not exist then as expected",
    "start": "445500",
    "end": "448020"
  },
  {
    "text": "this resource is blocked",
    "start": "448020",
    "end": "450120"
  },
  {
    "text": "this feature was introduced in given a",
    "start": "450120",
    "end": "452520"
  },
  {
    "text": "1.9 release like everything in keveno",
    "start": "452520",
    "end": "455639"
  },
  {
    "text": "policy exception is a custom resource it",
    "start": "455639",
    "end": "458039"
  },
  {
    "text": "is a namespaced custom resource",
    "start": "458039",
    "end": "460259"
  },
  {
    "text": "you have to specify the policy and Rule",
    "start": "460259",
    "end": "462840"
  },
  {
    "text": "name that needs exceptions and you can",
    "start": "462840",
    "end": "464759"
  },
  {
    "text": "also use match and exclude blocks to",
    "start": "464759",
    "end": "467099"
  },
  {
    "text": "filter on resources",
    "start": "467099",
    "end": "469139"
  },
  {
    "text": "policy exceptions are supported in",
    "start": "469139",
    "end": "471120"
  },
  {
    "text": "background scanning as well the effect",
    "start": "471120",
    "end": "472919"
  },
  {
    "text": "is that the policy report now reports as",
    "start": "472919",
    "end": "476280"
  },
  {
    "text": "a skip instead of a failure whenever",
    "start": "476280",
    "end": "478620"
  },
  {
    "text": "policy exceptions are present",
    "start": "478620",
    "end": "482180"
  },
  {
    "text": "now let's take a look at the demo",
    "start": "483300",
    "end": "487039"
  },
  {
    "text": "for this demo I have a local time",
    "start": "487800",
    "end": "490259"
  },
  {
    "text": "cluster",
    "start": "490259",
    "end": "492860"
  },
  {
    "text": "I have a",
    "start": "493020",
    "end": "494639"
  },
  {
    "text": "single node client class single node",
    "start": "494639",
    "end": "497099"
  },
  {
    "text": "kind cluster that's ready to go I've",
    "start": "497099",
    "end": "499199"
  },
  {
    "text": "also installed Kevin no",
    "start": "499199",
    "end": "503180"
  },
  {
    "text": "I've installed keyword no 1.9.5 release",
    "start": "506400",
    "end": "511160"
  },
  {
    "text": "also it is important to note that",
    "start": "512399",
    "end": "516800"
  },
  {
    "text": "the given in the kivano deployment you",
    "start": "517080",
    "end": "519120"
  },
  {
    "text": "have to enable policy exception to True",
    "start": "519120",
    "end": "521099"
  },
  {
    "text": "by default the setting is set to false",
    "start": "521099",
    "end": "524279"
  },
  {
    "text": "so if you want to use policy exceptions",
    "start": "524279",
    "end": "526020"
  },
  {
    "text": "you have to set the slack to true",
    "start": "526020",
    "end": "528779"
  },
  {
    "text": "also another",
    "start": "528779",
    "end": "530600"
  },
  {
    "text": "important flag here is the exception",
    "start": "530600",
    "end": "533339"
  },
  {
    "text": "namespace so by default this is set to",
    "start": "533339",
    "end": "535860"
  },
  {
    "text": "giveno it means you have to Define all",
    "start": "535860",
    "end": "539160"
  },
  {
    "text": "your policy exceptions in this namespace",
    "start": "539160",
    "end": "542040"
  },
  {
    "text": "even though policy exceptions are",
    "start": "542040",
    "end": "543779"
  },
  {
    "text": "defined in this namespace it is",
    "start": "543779",
    "end": "545399"
  },
  {
    "text": "applicable to accept resources in any",
    "start": "545399",
    "end": "548459"
  },
  {
    "text": "other namespace",
    "start": "548459",
    "end": "550200"
  },
  {
    "text": "it is generally a good practice to",
    "start": "550200",
    "end": "552120"
  },
  {
    "text": "Define all your exceptions together in",
    "start": "552120",
    "end": "554339"
  },
  {
    "text": "one namespace so that you are aware of",
    "start": "554339",
    "end": "556260"
  },
  {
    "text": "what exceptions are present in your",
    "start": "556260",
    "end": "558000"
  },
  {
    "text": "cluster",
    "start": "558000",
    "end": "559500"
  },
  {
    "text": "now that we have our environment ready",
    "start": "559500",
    "end": "561779"
  },
  {
    "text": "let's look at our kubernetes manifest",
    "start": "561779",
    "end": "566100"
  },
  {
    "text": "first let's look at the policy itself",
    "start": "566100",
    "end": "570440"
  },
  {
    "text": "so here I have a cluster policy disallow",
    "start": "570839",
    "end": "573600"
  },
  {
    "text": "hostname spaces the validation failure",
    "start": "573600",
    "end": "575820"
  },
  {
    "text": "action if they're to enforce the rule",
    "start": "575820",
    "end": "577920"
  },
  {
    "text": "name is host name spaces it matches on",
    "start": "577920",
    "end": "580200"
  },
  {
    "text": "resource kind called and the rule type",
    "start": "580200",
    "end": "582899"
  },
  {
    "text": "is validate so here it matches on this",
    "start": "582899",
    "end": "586920"
  },
  {
    "text": "pattern spec it says if any of these",
    "start": "586920",
    "end": "589380"
  },
  {
    "text": "fields that is host PID host IPC or host",
    "start": "589380",
    "end": "591839"
  },
  {
    "text": "network is present it should be set to",
    "start": "591839",
    "end": "594180"
  },
  {
    "text": "false either should not be present or if",
    "start": "594180",
    "end": "596459"
  },
  {
    "text": "present should be set to false and no",
    "start": "596459",
    "end": "598019"
  },
  {
    "text": "other value",
    "start": "598019",
    "end": "599519"
  },
  {
    "text": "let's apply this policy",
    "start": "599519",
    "end": "603740"
  },
  {
    "text": "policy is created let's take a quick",
    "start": "604680",
    "end": "606720"
  },
  {
    "text": "look",
    "start": "606720",
    "end": "608959"
  },
  {
    "text": "is ready",
    "start": "609080",
    "end": "612600"
  },
  {
    "text": "let's look at our deployment yaml",
    "start": "612600",
    "end": "616620"
  },
  {
    "text": "so here I have a deployment",
    "start": "616620",
    "end": "618740"
  },
  {
    "text": "and in the spec we see that host IPC is",
    "start": "618740",
    "end": "623820"
  },
  {
    "text": "set to true",
    "start": "623820",
    "end": "625320"
  },
  {
    "text": "so this is violating the policy rule",
    "start": "625320",
    "end": "628740"
  },
  {
    "text": "mentioned here",
    "start": "628740",
    "end": "630360"
  },
  {
    "text": "I have host addressing theme but it is",
    "start": "630360",
    "end": "632519"
  },
  {
    "text": "not set to false it is set to true",
    "start": "632519",
    "end": "636000"
  },
  {
    "text": "now if I try to apply this deployment",
    "start": "636000",
    "end": "639019"
  },
  {
    "text": "should block this resource because it is",
    "start": "639019",
    "end": "641820"
  },
  {
    "text": "a violating resource let's try that",
    "start": "641820",
    "end": "646640"
  },
  {
    "text": "so as you can see uh error error when",
    "start": "651779",
    "end": "655260"
  },
  {
    "text": "creating deployment Channel admission",
    "start": "655260",
    "end": "656940"
  },
  {
    "text": "webhook has denied the request and white",
    "start": "656940",
    "end": "659160"
  },
  {
    "text": "has denied because these fields if",
    "start": "659160",
    "end": "662100"
  },
  {
    "text": "prisoners be unset or set to false but",
    "start": "662100",
    "end": "664380"
  },
  {
    "text": "we have",
    "start": "664380",
    "end": "666360"
  },
  {
    "text": "we have a host IPC set to true if I get",
    "start": "666360",
    "end": "669420"
  },
  {
    "text": "all the deployments we see that it is",
    "start": "669420",
    "end": "671579"
  },
  {
    "text": "not created it is locked by the",
    "start": "671579",
    "end": "673200"
  },
  {
    "text": "admission controller",
    "start": "673200",
    "end": "676100"
  },
  {
    "text": "you might wonder that we have a rule",
    "start": "676940",
    "end": "681060"
  },
  {
    "text": "called autogen hostname spaces and also",
    "start": "681060",
    "end": "684360"
  },
  {
    "text": "another point to note is in my cluster",
    "start": "684360",
    "end": "687000"
  },
  {
    "text": "policy my match resource kind of spot",
    "start": "687000",
    "end": "689279"
  },
  {
    "text": "whereas the resources for deployment",
    "start": "689279",
    "end": "692120"
  },
  {
    "text": "is intelligent enough to determine",
    "start": "692120",
    "end": "696180"
  },
  {
    "text": "the higher order controllers for pod so",
    "start": "696180",
    "end": "698880"
  },
  {
    "text": "generally you don't create a pod",
    "start": "698880",
    "end": "700560"
  },
  {
    "text": "yourself it is usually by a higher order",
    "start": "700560",
    "end": "703019"
  },
  {
    "text": "controller like a deployment or a",
    "start": "703019",
    "end": "705120"
  },
  {
    "text": "stateful set and so on",
    "start": "705120",
    "end": "707100"
  },
  {
    "text": "so kivano has the ability to generate",
    "start": "707100",
    "end": "709579"
  },
  {
    "text": "rules for these higher order controllers",
    "start": "709579",
    "end": "712560"
  },
  {
    "text": "even though the policy states for",
    "start": "712560",
    "end": "715380"
  },
  {
    "text": "matching resource crying pod so the rule",
    "start": "715380",
    "end": "718800"
  },
  {
    "text": "name here was host name spaces and",
    "start": "718800",
    "end": "720660"
  },
  {
    "text": "keyword automatically generates rules",
    "start": "720660",
    "end": "723500"
  },
  {
    "text": "for higher order controllers like",
    "start": "723500",
    "end": "726000"
  },
  {
    "text": "deployment and the rule name is called",
    "start": "726000",
    "end": "727860"
  },
  {
    "text": "autogen hostname spaces and that is what",
    "start": "727860",
    "end": "730680"
  },
  {
    "text": "we see here autogen Host namespace this",
    "start": "730680",
    "end": "733680"
  },
  {
    "text": "rule has failed so autogen hosting",
    "start": "733680",
    "end": "736320"
  },
  {
    "text": "spaces is applicable for deployment so",
    "start": "736320",
    "end": "738300"
  },
  {
    "text": "even though the policy was for a pod and",
    "start": "738300",
    "end": "741120"
  },
  {
    "text": "the resources the deployment the rule is",
    "start": "741120",
    "end": "742980"
  },
  {
    "text": "still applicable",
    "start": "742980",
    "end": "745320"
  },
  {
    "text": "and now we'll see how policy exceptions",
    "start": "745320",
    "end": "748680"
  },
  {
    "text": "can help us",
    "start": "748680",
    "end": "750300"
  },
  {
    "text": "to bypass this Rule and allow this",
    "start": "750300",
    "end": "752220"
  },
  {
    "text": "deployment to be created",
    "start": "752220",
    "end": "755300"
  },
  {
    "text": "so let's look at our policy exception",
    "start": "755579",
    "end": "759540"
  },
  {
    "text": "like everything in kevino is a custom",
    "start": "759540",
    "end": "761640"
  },
  {
    "text": "resource policy exception is also a",
    "start": "761640",
    "end": "763980"
  },
  {
    "text": "custom resource called Delta exception",
    "start": "763980",
    "end": "766260"
  },
  {
    "text": "the policy exception itself is defined",
    "start": "766260",
    "end": "769380"
  },
  {
    "text": "in the keyword no namespace and now",
    "start": "769380",
    "end": "771720"
  },
  {
    "text": "they'll see For What policies and rules",
    "start": "771720",
    "end": "774060"
  },
  {
    "text": "this exception is applied we have this",
    "start": "774060",
    "end": "776339"
  },
  {
    "text": "exceptions block wherein we specify that",
    "start": "776339",
    "end": "779100"
  },
  {
    "text": "this allow hostname spaces is my policy",
    "start": "779100",
    "end": "781200"
  },
  {
    "text": "name and for what rules host name spaces",
    "start": "781200",
    "end": "784320"
  },
  {
    "text": "is what we originally defined in our",
    "start": "784320",
    "end": "787139"
  },
  {
    "text": "policy and autogen host name spaces is",
    "start": "787139",
    "end": "789660"
  },
  {
    "text": "whatever no",
    "start": "789660",
    "end": "791120"
  },
  {
    "text": "generated for higher order controllers",
    "start": "791120",
    "end": "795300"
  },
  {
    "text": "It Is by choice that Kevin node does not",
    "start": "795300",
    "end": "798240"
  },
  {
    "text": "Auto generate policy exception for",
    "start": "798240",
    "end": "800880"
  },
  {
    "text": "higher order controllers as well it is",
    "start": "800880",
    "end": "802980"
  },
  {
    "text": "because it is always a good practice to",
    "start": "802980",
    "end": "805440"
  },
  {
    "text": "limit the scope of your policy exception",
    "start": "805440",
    "end": "809160"
  },
  {
    "text": "so you have to always explicitly state",
    "start": "809160",
    "end": "811620"
  },
  {
    "text": "for what rules you want exception for",
    "start": "811620",
    "end": "813779"
  },
  {
    "text": "and similarly in uh match resource kind",
    "start": "813779",
    "end": "817260"
  },
  {
    "text": "you don't just say pod here you also see",
    "start": "817260",
    "end": "820200"
  },
  {
    "text": "for which higher order controller you",
    "start": "820200",
    "end": "822000"
  },
  {
    "text": "want this room to be accepted",
    "start": "822000",
    "end": "824880"
  },
  {
    "text": "and then we say in this namespace Delta",
    "start": "824880",
    "end": "827459"
  },
  {
    "text": "and also the resource name starting with",
    "start": "827459",
    "end": "830579"
  },
  {
    "text": "an important tool let's apply this",
    "start": "830579",
    "end": "832920"
  },
  {
    "text": "exception",
    "start": "832920",
    "end": "835399"
  },
  {
    "text": "for this exception is created we can",
    "start": "836480",
    "end": "840720"
  },
  {
    "text": "take a look",
    "start": "840720",
    "end": "842279"
  },
  {
    "text": "so we have Delta exception in the",
    "start": "842279",
    "end": "845160"
  },
  {
    "text": "keyword no name space which is ready to",
    "start": "845160",
    "end": "846779"
  },
  {
    "text": "go now if I apply my deployment again",
    "start": "846779",
    "end": "849779"
  },
  {
    "text": "I should be able to do so because we",
    "start": "849779",
    "end": "852540"
  },
  {
    "text": "already have a policy exception in place",
    "start": "852540",
    "end": "857519"
  },
  {
    "text": "yes our deployment got created",
    "start": "857519",
    "end": "860459"
  },
  {
    "text": "this is because even though the",
    "start": "860459",
    "end": "862920"
  },
  {
    "text": "deployment spec was a violating resource",
    "start": "862920",
    "end": "865500"
  },
  {
    "text": "because of this policy exception is",
    "start": "865500",
    "end": "867720"
  },
  {
    "text": "present",
    "start": "867720",
    "end": "869040"
  },
  {
    "text": "it allows you to bypass that violation",
    "start": "869040",
    "end": "871800"
  },
  {
    "text": "and the deployment gets created",
    "start": "871800",
    "end": "875160"
  },
  {
    "text": "that's it for the demo thank you",
    "start": "875160",
    "end": "878579"
  },
  {
    "text": "coming back to our presentation",
    "start": "878579",
    "end": "881160"
  },
  {
    "text": "so what we have learned today we learned",
    "start": "881160",
    "end": "883199"
  },
  {
    "text": "about policy exceptions and how they",
    "start": "883199",
    "end": "885060"
  },
  {
    "text": "provide an external way to specify",
    "start": "885060",
    "end": "887040"
  },
  {
    "text": "exclusions to policies and rules",
    "start": "887040",
    "end": "889500"
  },
  {
    "text": "while powerful their use has to be",
    "start": "889500",
    "end": "891720"
  },
  {
    "text": "carefully reviewed and limited in scope",
    "start": "891720",
    "end": "894000"
  },
  {
    "text": "because we saw how it can admit",
    "start": "894000",
    "end": "895980"
  },
  {
    "text": "violating resources",
    "start": "895980",
    "end": "898680"
  },
  {
    "text": "combined with other features such as",
    "start": "898680",
    "end": "900600"
  },
  {
    "text": "cleanup policies to ensure security",
    "start": "900600",
    "end": "902279"
  },
  {
    "text": "while still being flexible",
    "start": "902279",
    "end": "904680"
  },
  {
    "text": "get involved in our project so we are on",
    "start": "904680",
    "end": "907440"
  },
  {
    "text": "GitHub at giver no slash giveness if you",
    "start": "907440",
    "end": "909540"
  },
  {
    "text": "like our project to give us a star",
    "start": "909540",
    "end": "912300"
  },
  {
    "text": "we are on kubernetes slack and cncf",
    "start": "912300",
    "end": "914279"
  },
  {
    "text": "slack on the channel called giverno we",
    "start": "914279",
    "end": "917040"
  },
  {
    "text": "have a thriving community of over 2000",
    "start": "917040",
    "end": "919560"
  },
  {
    "text": "people",
    "start": "919560",
    "end": "921000"
  },
  {
    "text": "we have a weekly contributor meeting and",
    "start": "921000",
    "end": "923519"
  },
  {
    "text": "also the good first issues are listed on",
    "start": "923519",
    "end": "925920"
  },
  {
    "text": "the GitHub project",
    "start": "925920",
    "end": "927600"
  },
  {
    "text": "and these are some of the references I",
    "start": "927600",
    "end": "929459"
  },
  {
    "text": "used in today's webinar",
    "start": "929459",
    "end": "931500"
  },
  {
    "text": "thank you",
    "start": "931500",
    "end": "934279"
  }
]