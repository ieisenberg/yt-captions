[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "everyone thank you for coming you know almost last session on the last day so I",
    "start": "469",
    "end": "7529"
  },
  {
    "text": "appreciate it thank you my name is Aaron Levie and today I'm here to talk about coop control apply",
    "start": "7529",
    "end": "13679"
  },
  {
    "text": "and the dark art of declarative object management if any of you saw Bryan grants talk earlier this morning",
    "start": "13679",
    "end": "20670"
  },
  {
    "text": "apparently it Skoob control is the correct way of saying it I have a habit of saying coops ETL so I will do my best",
    "start": "20670",
    "end": "26310"
  },
  {
    "text": "to say Cube control through this presentation but let's get started so why the dark art and part of it is",
    "start": "26310",
    "end": "34320"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "because if you do Harry Potter references your talks get accepted but also because coops ETL apply may not",
    "start": "34320",
    "end": "40890"
  },
  {
    "text": "actually behave how you expect it to my original understanding of COO control apply behavior was essentially okay it's",
    "start": "40890",
    "end": "48270"
  },
  {
    "text": "taking configuration that I have locally and it's applying it to the cluster and that was about it and if you look at the",
    "start": "48270",
    "end": "54750"
  },
  {
    "text": "help text of the apply command it says something similar apply a configuration to a resource this resource will be",
    "start": "54750",
    "end": "60660"
  },
  {
    "text": "created if it doesn't exist yet perfect talks over there isn't a whole lot else to go there but in actuality there's a",
    "start": "60660",
    "end": "67170"
  },
  {
    "text": "ton of behavior underneath coop control apply and I personally didn't really understand most of it and so putting the",
    "start": "67170",
    "end": "74610"
  },
  {
    "text": "the abstract together for this talk there was a ton of stuff that I wanted to get into and then what I realized in",
    "start": "74610",
    "end": "80070"
  },
  {
    "text": "in putting this presentation together is that there's just actually too much to cover in 30 minutes so I'll do my best",
    "start": "80070",
    "end": "85740"
  },
  {
    "text": "but there's going to be some homework at the end to kind of dig further in so when I started using apply more heavily",
    "start": "85740",
    "end": "92310"
  },
  {
    "text": "some of the the things that I was seeing was inconsistent behavior across various object types I was saying inconsistent",
    "start": "92310",
    "end": "98729"
  },
  {
    "text": "behavior across various fields within objects and then kind of unexpected and somewhat vague errors not to be fair",
    "start": "98729",
    "end": "105810"
  },
  {
    "text": "most of these were my fault because I didn't actually understand the underlying behavior of apply and how to use it correctly and so I actually began",
    "start": "105810",
    "end": "114240"
  },
  {
    "text": "digging into a deeper because I wanted to be able to predict the outcome of using this command and I and I clearly wasn't able to so what I wanted to know",
    "start": "114240",
    "end": "121320"
  },
  {
    "text": "was you know how our fields actually calculated how bout the patches themselves generated and then how do I",
    "start": "121320",
    "end": "127649"
  },
  {
    "text": "predict what the final object will actually look like and then is this is this functionality client-side is",
    "start": "127649",
    "end": "134080"
  },
  {
    "text": "every side is a little bit of both so what does COO control apply actually do",
    "start": "134080",
    "end": "139530"
  },
  {
    "text": "this I kind of pulled and paraphrased from some other documentation this isn't actually the help text for the command",
    "start": "139530",
    "end": "145810"
  },
  {
    "text": "but when invoked it does a three-way diff between the previous configuration that you had the input that you're",
    "start": "145810",
    "end": "151990"
  },
  {
    "text": "providing and the current configuration of the object itself and then it uses those three states to determine how to",
    "start": "151990",
    "end": "157900"
  },
  {
    "text": "modify the resource and then it applies those changes and doesn't overwrite other changes to properties that you",
    "start": "157900",
    "end": "164050"
  },
  {
    "text": "haven't specified so we'll dig into this a bit more so those three states that I just mentioned that we're calculating",
    "start": "164050",
    "end": "170140"
  },
  {
    "text": "kind of what we're going to do the first is the object configuration file and you could think of this as you know if you",
    "start": "170140",
    "end": "175870"
  },
  {
    "text": "have a git checkout of your actual object manifests you know that you're going to operate on locally and then",
    "start": "175870",
    "end": "181660"
  },
  {
    "text": "raghu control apply on those actual files then you have your live object",
    "start": "181660",
    "end": "186700"
  },
  {
    "text": "configuration this is the state of the object as it exists in your cluster so if you were to say coop control get a",
    "start": "186700",
    "end": "192040"
  },
  {
    "text": "deployment whatever you see down that's the live object what we're talking about and then the last applied configuration",
    "start": "192040",
    "end": "198430"
  },
  {
    "text": "this is the state that the last time you invoked apply what it looked like at that time and between these three",
    "start": "198430",
    "end": "204519"
  },
  {
    "text": "states that's what you use to kind of compute what's actually going to happen when you're running this so let's start",
    "start": "204519",
    "end": "210130"
  },
  {
    "text": "off with if you're gonna create an object pretty straightforward goop control apply file name my my simple",
    "start": "210130",
    "end": "216310"
  },
  {
    "text": "application object and this does what we expect which it creates the object in the cluster but it also sets a special",
    "start": "216310",
    "end": "223150"
  },
  {
    "text": "annotation on the object called the last applied configuration and the contents of this are actually set to match what",
    "start": "223150",
    "end": "229690"
  },
  {
    "text": "you're applying to the cluster and this is used to later compute whether an action is going to add a field or update",
    "start": "229690",
    "end": "236019"
  },
  {
    "text": "a field or delete a field because you're tracking what did i do before and then what am i doing now and I'm able to",
    "start": "236019",
    "end": "241570"
  },
  {
    "text": "determine those new States so if we look at an example of this our base objects a",
    "start": "241570",
    "end": "246940"
  },
  {
    "text": "pretty simple deployment if we were to run could control apply on this what would actually end up in the live object",
    "start": "246940",
    "end": "252670"
  },
  {
    "text": "in the cluster is that it would inject that state that you're pushing into the cluster into that special annotation",
    "start": "252670",
    "end": "258880"
  },
  {
    "text": "into that last applied configuration and then the rest of your object exists normally so let's go over an example of",
    "start": "258880",
    "end": "265780"
  },
  {
    "start": "264000",
    "end": "264000"
  },
  {
    "text": "adding a field to an object so we have those three states that we talked about we have the local object",
    "start": "265780",
    "end": "271520"
  },
  {
    "text": "this is like your get check out of your manifests you have your last applied state this is an annotation that we've",
    "start": "271520",
    "end": "276620"
  },
  {
    "text": "kind of pulled out just to make it easier to describe and this is part of",
    "start": "276620",
    "end": "281720"
  },
  {
    "text": "the live object itself and then the live object is just the rest of that manifest and so between these three states we're",
    "start": "281720",
    "end": "287750"
  },
  {
    "text": "going to determine the actions that we're going to take and in this case we decided well we already have this object",
    "start": "287750",
    "end": "293270"
  },
  {
    "text": "in the cluster and the live the live object we want to add a new field to it we want to add the min ready seconds to",
    "start": "293270",
    "end": "299300"
  },
  {
    "text": "it and so we're going to you know on our local copy of that manifest we're going to add that field we're gonna run cout control apply and",
    "start": "299300",
    "end": "305720"
  },
  {
    "text": "then it's going to determine what action we're going to take based on these other states and so you see well it exists in",
    "start": "305720",
    "end": "311600"
  },
  {
    "text": "my local configuration but it doesn't exist the last time I tried to apply it and it doesn't exist in the live",
    "start": "311600",
    "end": "316610"
  },
  {
    "text": "configuration so the action that I'm actually going to take here is I want to add that field so we see after we",
    "start": "316610",
    "end": "322250"
  },
  {
    "text": "execute this that first of all the live object reflects what we wanted it to we've said we want to add this field and",
    "start": "322250",
    "end": "327920"
  },
  {
    "text": "then last supplied is now set to what we just pushed into the cluster so the next",
    "start": "327920",
    "end": "333080"
  },
  {
    "text": "time we do an action we're able to compute the next state that we want and so we can see that from you know an",
    "start": "333080",
    "end": "339140"
  },
  {
    "text": "example of now we want to actually remove a field so in this case we see that in our live object we still have",
    "start": "339140",
    "end": "344960"
  },
  {
    "text": "that field that we added previously but now we decide actually we don't want that field in it so what we do is we",
    "start": "344960",
    "end": "350270"
  },
  {
    "text": "modify our local object you know there are check out of our manifest and we say all right actually let's let's delete",
    "start": "350270",
    "end": "355580"
  },
  {
    "text": "that field from it and now when we run Q control apply what it's going to do is it's going to look and say well it",
    "start": "355580",
    "end": "360980"
  },
  {
    "text": "doesn't exist in my local state but it does exist in the live State and the last time I ran apply it existed there",
    "start": "360980",
    "end": "367220"
  },
  {
    "text": "as well and so this is actually a deletion event it used to exist now it doesn't let's get rid of it and",
    "start": "367220",
    "end": "374000"
  },
  {
    "text": "so we can see after running it all that happens is the live object that field is removed the last applied annotation is",
    "start": "374000",
    "end": "380090"
  },
  {
    "text": "updated to just match what we just pushed into the cluster so we can create",
    "start": "380090",
    "end": "386360"
  },
  {
    "text": "objects with apply we can add and remove fields what else why why do we want to use apply so another really powerful",
    "start": "386360",
    "end": "394070"
  },
  {
    "text": "aspect of using apply is the ability to kind of preserve and enforce different fields and so when I say enforce that",
    "start": "394070",
    "end": "400789"
  },
  {
    "text": "means that your local object configuration the fields that you're putting in there the things that you're populating you're",
    "start": "400789",
    "end": "405949"
  },
  {
    "text": "essentially saying these are things that I want to enforce when I run apply I want to set them to these values but you",
    "start": "405949",
    "end": "411229"
  },
  {
    "text": "can also emit certain fields from that and not have them controlled so you could apply the object and not update",
    "start": "411229",
    "end": "417949"
  },
  {
    "text": "what's on your live object and so that allows those other fields to potentially be controlled by other aspects of the",
    "start": "417949",
    "end": "424430"
  },
  {
    "text": "system a really good example of this is auto scaling components so an example",
    "start": "424430",
    "end": "429949"
  },
  {
    "text": "would be you know I want to be able to update things about my my object I want to you know change labels on it I want to change the containers that are inside",
    "start": "429949",
    "end": "436490"
  },
  {
    "text": "of it but I want an auto scaler based on some some metrics to be scaling this up",
    "start": "436490",
    "end": "441770"
  },
  {
    "text": "and down so when I run apply I don't want to know how many copies of it are running I just want something else to be",
    "start": "441770",
    "end": "446840"
  },
  {
    "text": "managing that and so that's an example of how we would say I want enforce certain fields but I actually want to ignore and preserve others so it's go",
    "start": "446840",
    "end": "454729"
  },
  {
    "text": "over an example of this so what we see is in our live object replicas is actually exists within the object and we",
    "start": "454729",
    "end": "461719"
  },
  {
    "text": "say we have three replicas of this but that same field doesn't exist in our local object and it doesn't exist in the",
    "start": "461719",
    "end": "467449"
  },
  {
    "text": "last applied annotation so whenever we've pushed updates this object we've said nothing about replicas because we",
    "start": "467449",
    "end": "473150"
  },
  {
    "text": "don't want to manage it as part of this this piece of object management we want something else to deal with it so then",
    "start": "473150",
    "end": "480430"
  },
  {
    "text": "let's say that the autoscaler is just running coupe control scale commands separately from us and so we say you",
    "start": "480430",
    "end": "486800"
  },
  {
    "text": "know scale my app deployment up to replicas the the count to five so we just went from three to five still our",
    "start": "486800",
    "end": "493099"
  },
  {
    "text": "local object and the last applied annotation don't actually change because this is just something that we're",
    "start": "493099",
    "end": "498110"
  },
  {
    "text": "essentially preserving and ignoring on the live object when we're calculating any kind of patches so let's say later",
    "start": "498110",
    "end": "504800"
  },
  {
    "text": "you know I want to deploy a new version of my application and so I check out my copy of these objects and I say well I",
    "start": "504800",
    "end": "510919"
  },
  {
    "text": "want to deploy version two of this so I update my local copy and I'm gonna run",
    "start": "510919",
    "end": "516919"
  },
  {
    "text": "coupe control apply and what ends up happening is that in my live object that field is is updated and I don't touch",
    "start": "516919",
    "end": "523729"
  },
  {
    "text": "the replicas I don't need to know about them it doesn't matter to me in this workflow I want the autoscaler to be dealing with that so we've seen how",
    "start": "523729",
    "end": "532370"
  },
  {
    "start": "530000",
    "end": "530000"
  },
  {
    "text": "coops do a cou control apply I can add update and remove and also preserve fields in force fields so how is this",
    "start": "532370",
    "end": "539810"
  },
  {
    "text": "stuff being calculated how are we deciding that some fields should be left alone and others should be updated some should be cleared there's several ways",
    "start": "539810",
    "end": "547160"
  },
  {
    "text": "the merge actually takes place so for primitive values things like strings integers boolean x' example",
    "start": "547160",
    "end": "553399"
  },
  {
    "text": "fields of this would be like the image field is a string or the replicas is an integer the actions that we can take on",
    "start": "553399",
    "end": "559190"
  },
  {
    "text": "that are essentially out of clear or replace it for things like maps and objects examples of these would be like",
    "start": "559190",
    "end": "565790"
  },
  {
    "text": "labels or metadata or maybe the deployment spec the action on this is",
    "start": "565790",
    "end": "571490"
  },
  {
    "text": "actually to merge the elements or to merge the subfields of the objects themselves and then lastly we have lists",
    "start": "571490",
    "end": "577399"
  },
  {
    "text": "and in this case like you might have in a pod a list of containers or you might have a list of ports or you might have a",
    "start": "577399",
    "end": "583730"
  },
  {
    "text": "list of arguments provided to a container and the action here actually depends quite a bit so I want to the",
    "start": "583730",
    "end": "590029"
  },
  {
    "text": "other two are decently well understood but I want to jump into list because this can get a bit more complex so",
    "start": "590029",
    "end": "595399"
  },
  {
    "text": "several strategies one is just that the list gets replaced the entire list just gets replaced and another is that you",
    "start": "595399",
    "end": "601730"
  },
  {
    "text": "can actually merge the elements of a list of objects and we'll go into both of these so another example this is a",
    "start": "601730",
    "end": "609260"
  },
  {
    "text": "list of primitive values just the args that we're passing to a container and in",
    "start": "609260",
    "end": "614750"
  },
  {
    "text": "this case all three of our states are slightly different you know our our local object our desired state that",
    "start": "614750",
    "end": "620390"
  },
  {
    "text": "we're going to be pushing into the cluster says the argument should be a and C but the live object actually has a",
    "start": "620390",
    "end": "626360"
  },
  {
    "text": "B and D and the last time we applied this it was an V when we run qu control apply what's going to happen is we're",
    "start": "626360",
    "end": "632930"
  },
  {
    "text": "going to take our desired state that local that local config and it's actually just going to replace args",
    "start": "632930",
    "end": "638240"
  },
  {
    "text": "wholesale there is no merging it's not we're going to take the live state and and mix them together it just replaces",
    "start": "638240",
    "end": "643520"
  },
  {
    "text": "it completely so that's an example of just that one option now what about if we have a list of more complex objects",
    "start": "643520",
    "end": "650360"
  },
  {
    "text": "and how do we can merge them together an example of this would be a list of",
    "start": "650360",
    "end": "655880"
  },
  {
    "text": "containers so containers being a more complex object and our goal in this case in this local object we can see is that",
    "start": "655880",
    "end": "662750"
  },
  {
    "text": "we want to be able to add a sidecar container to our existing application so initially we just had",
    "start": "662750",
    "end": "668800"
  },
  {
    "text": "just the app itself as one container and we can see that by the last time we",
    "start": "668800",
    "end": "674540"
  },
  {
    "text": "applied this configuration this last supplied the only container that's listed is app the live object but we see",
    "start": "674540",
    "end": "680420"
  },
  {
    "text": "that same thing app exists there we also see another field has been added kind of out-of-band this is one of those fields",
    "start": "680420",
    "end": "686689"
  },
  {
    "text": "where we're not managing it in our oblah in our object configuration but it exists there in live and now we're",
    "start": "686689",
    "end": "692689"
  },
  {
    "text": "updating to a new desired State so our local object we said alright we want this new sidecar container to exist so",
    "start": "692689",
    "end": "699379"
  },
  {
    "text": "when we apply that what we actually see is that the sidecar container is added to our live object as we intended but",
    "start": "699379",
    "end": "705589"
  },
  {
    "text": "also args is preserved which didn't exist in our local and our local config and so what you see there's we're not",
    "start": "705589",
    "end": "711740"
  },
  {
    "text": "simply taking the entire list of containers and then applying it and replacing it on the on the live object",
    "start": "711740",
    "end": "718610"
  },
  {
    "text": "we're actually walking into each of those objects and updating the individual elements and updating the individual fields and merging them",
    "start": "718610",
    "end": "724910"
  },
  {
    "text": "together so let's take a little bit more complex example so we just saw that",
    "start": "724910",
    "end": "729980"
  },
  {
    "text": "happen with containers but let's look at that for a list of Toleration x' so",
    "start": "729980",
    "end": "735230"
  },
  {
    "text": "again a list of complex objects we should expect that we would be able to merge these as an action so we're gonna",
    "start": "735230",
    "end": "742670"
  },
  {
    "text": "step through this kind of piece by piece into what are the expected actions that we would take by evaluating these three",
    "start": "742670",
    "end": "748370"
  },
  {
    "text": "different states so the first state being you know the local object this is you know we are going to try and push",
    "start": "748370",
    "end": "754250"
  },
  {
    "text": "some desired state into the cluster and and what's going to happen there so we see there's a toleration with a key of",
    "start": "754250",
    "end": "759829"
  },
  {
    "text": "Bath's and if we look at the last time we applied this configuration to the object",
    "start": "759829",
    "end": "765050"
  },
  {
    "text": "it didn't exist there and if we look at the live object it also doesn't exist there so my expected outcome from this",
    "start": "765050",
    "end": "771050"
  },
  {
    "text": "is this is we should add that toleration that's the action that should come out of this then next if we look at the last",
    "start": "771050",
    "end": "777889"
  },
  {
    "text": "supply the last time we ran this we actually told it that we wanted a toleration with a key of foo and we also",
    "start": "777889",
    "end": "784490"
  },
  {
    "text": "see that that still does exist in the live configuration but that no longer exists in our desired local object",
    "start": "784490",
    "end": "791059"
  },
  {
    "text": "configuration so that translates to me is okay actually we should be deleting this it used to exist we used to apply",
    "start": "791059",
    "end": "796550"
  },
  {
    "text": "it we no longer do let's get rid of it and then lastly we have this key of bar that exists in the libel",
    "start": "796550",
    "end": "802560"
  },
  {
    "text": "project and this isn't specified in our local config so again it's not something that we want to manage or enforce and so",
    "start": "802560",
    "end": "808140"
  },
  {
    "text": "essentially we're just going to ignore that that value and it should just still exist so my expected outcome of this",
    "start": "808140",
    "end": "813779"
  },
  {
    "text": "would be that we have two toleration x' we have a toleration for a kiev bar anna toleration of baz you know we saw this",
    "start": "813779",
    "end": "820020"
  },
  {
    "text": "we containers this should be my expected outcome of merging more complex objects but instead what happens is when we run",
    "start": "820020",
    "end": "826890"
  },
  {
    "text": "apply it actually just sets the live state to exactly what we had in our local config so it actually does a",
    "start": "826890",
    "end": "833160"
  },
  {
    "text": "replacement it's not merging the objects and then our last supplied is also updated as well so we expected to see",
    "start": "833160",
    "end": "840660"
  },
  {
    "text": "the Toleration merge they weren't what you know why did this happen we saw the exact completely different behavior on",
    "start": "840660",
    "end": "846390"
  },
  {
    "text": "something similar so i want to briefly go over the ways that patches are calculated here so the two that apply",
    "start": "846390",
    "end": "854779"
  },
  {
    "text": "actually makes use of our json merge patch which is an actual spec you can go read about the exact behavior of it but",
    "start": "854779",
    "end": "862589"
  },
  {
    "text": "in this case it's something called strategic merge patch which is custom to kubernetes and it deals with handling",
    "start": "862589",
    "end": "868230"
  },
  {
    "text": "how to merge lists of complex objects in when you're running applied so with a",
    "start": "868230",
    "end": "874380"
  },
  {
    "start": "873000",
    "end": "873000"
  },
  {
    "text": "strategic merge patch you can treat a list much like a map and you can merge specific elements of that list based on",
    "start": "874380",
    "end": "881190"
  },
  {
    "text": "a predefined patch merge key and then based on that key you can individual elements can either be added or update",
    "start": "881190",
    "end": "887700"
  },
  {
    "text": "or removed and this key itself is actually defined on a per field basis",
    "start": "887700",
    "end": "893310"
  },
  {
    "text": "and this exists in the kubernetes source code so generally you have to look this up directly you can look in the source",
    "start": "893310",
    "end": "899910"
  },
  {
    "text": "code itself to find it or any api reference this is also bubbled up you'll see these these patch merge keys and",
    "start": "899910",
    "end": "905970"
  },
  {
    "text": "I'll show an example of this so if we were to dig into the code and we were to look at this is just a stub of what the pod spec looks like we would see that as",
    "start": "905970",
    "end": "913170"
  },
  {
    "text": "part of the pod spec we have a list of containers and there's this metadata associated with it that says the match",
    "start": "913170",
    "end": "918570"
  },
  {
    "text": "merge key is named and so what we saw before was that we had these two containers one of the containers had a",
    "start": "918570",
    "end": "924029"
  },
  {
    "text": "name of app and one of the containers had a name of sidecar and so we were able to enter the list and merge and",
    "start": "924029",
    "end": "930390"
  },
  {
    "text": "look at the states and say well the live object has and a container with name app and my local configuration",
    "start": "930390",
    "end": "936329"
  },
  {
    "text": "the name of app let's merge those objects because of the same one even though they're their list but if we look",
    "start": "936329",
    "end": "941639"
  },
  {
    "text": "at toleration z-- it doesn't have that metadata and so we know that well it doesn't know how to inspect the complex",
    "start": "941639",
    "end": "947399"
  },
  {
    "text": "object it's just going to replace the entire list wholesale but if we look at another one like volumes we also again",
    "start": "947399",
    "end": "953429"
  },
  {
    "text": "see that that metadata added so we would know well if we wanted to update volumes we know they would be merged together it",
    "start": "953429",
    "end": "959459"
  },
  {
    "text": "wouldn't just be replaced and this is you know important to know because it's it's changing the behavior of what your",
    "start": "959459",
    "end": "965459"
  },
  {
    "text": "local configuration should be in one case you're going to always need to specify every Toleration that you want",
    "start": "965459",
    "end": "971040"
  },
  {
    "text": "and it has to be managed wholesale but in other cases you could have some containers be managed yourself and some",
    "start": "971040",
    "end": "977549"
  },
  {
    "text": "containers manage maybe by a different component in the system and the same",
    "start": "977549",
    "end": "982739"
  },
  {
    "text": "with volumes and it takes a little bit of digging because you have to either go into the code or you have to dig through the API reference Docs so a little bit",
    "start": "982739",
    "end": "990869"
  },
  {
    "text": "of complexity here in like the actual behavior is not super consistent in some cases and there's there's more",
    "start": "990869",
    "end": "996209"
  },
  {
    "text": "complexity underneath this so another one that I want to mention is actually defaulting fields of objects so an",
    "start": "996209",
    "end": "1002179"
  },
  {
    "text": "example of this is a deployment object for example even though you might have a very simple manifest itself when you",
    "start": "1002179",
    "end": "1008869"
  },
  {
    "text": "apply that that object to the cluster the API server is actually going to default certain fields for you and so if",
    "start": "1008869",
    "end": "1014600"
  },
  {
    "text": "you don't specify replicas then it's going to default to a count of one if you don't specify an update strategy",
    "start": "1014600",
    "end": "1021169"
  },
  {
    "text": "it's going to default to a rolling update strategy and in some cases these defaulting values can actually cause",
    "start": "1021169",
    "end": "1027589"
  },
  {
    "text": "some problems when you're interacting with that object with apply so an example of this is you know the local",
    "start": "1027589",
    "end": "1033918"
  },
  {
    "text": "objects pretty simple we don't define a replicas we don't define a update",
    "start": "1033919",
    "end": "1039438"
  },
  {
    "text": "strategy but when we actually apply this into the cluster those fields are created and so they're defaulted so we",
    "start": "1039439",
    "end": "1044870"
  },
  {
    "text": "actually will see in the live object if we were to just say cout control get replicas of one and then the strategy is",
    "start": "1044870",
    "end": "1051350"
  },
  {
    "text": "going to be rolling update and then as part of rolling update there's more subfields that are defaulted like Max",
    "start": "1051350",
    "end": "1056480"
  },
  {
    "text": "surged and max unavailable this becomes problematic because let's say that at some point in time you say well I want",
    "start": "1056480",
    "end": "1063230"
  },
  {
    "text": "to change what the update strategy is I want to change it to recreate instead of rolling update so the the process would",
    "start": "1063230",
    "end": "1069679"
  },
  {
    "text": "be will I just add that field to my local configuration say that's my desired state apply it to the cluster and we",
    "start": "1069679",
    "end": "1075440"
  },
  {
    "text": "should be good the problem here is actually that there's other fields that are",
    "start": "1075440",
    "end": "1080510"
  },
  {
    "text": "incompatible that still exists within the manifest so even though we're changing the type there's other",
    "start": "1080510",
    "end": "1086660"
  },
  {
    "text": "subfields like Mac Serge and Mac's unavailable and the rolling update key itself that haven't changed and so you",
    "start": "1086660",
    "end": "1092930"
  },
  {
    "text": "would actually this would fail if you were to try and apply this configuration so it can kind of cause some problems and it takes some little bit of",
    "start": "1092930",
    "end": "1099170"
  },
  {
    "text": "foresight and thinking to be like well if I might want to manage these fields I should probably explicitly define them",
    "start": "1099170",
    "end": "1105740"
  },
  {
    "text": "rather than relying on defaulted fields so at this point we should have a pretty",
    "start": "1105740",
    "end": "1110780"
  },
  {
    "text": "good understanding of the the basic apply behavior but there's some other considerations of mixing apply behavior",
    "start": "1110780",
    "end": "1117530"
  },
  {
    "text": "with other object management styles so coming back to this example of the my",
    "start": "1117530",
    "end": "1124280"
  },
  {
    "text": "app deployment in this case we're gonna have two users that are interacting with this object and one thing I just want to",
    "start": "1124280",
    "end": "1130430"
  },
  {
    "text": "know is that we're not going to specify the replicas in this again we're gonna say an auto scaler is going to manage that we don't want it as part of our",
    "start": "1130430",
    "end": "1136460"
  },
  {
    "text": "local configuration so the first user they're going to initially create this",
    "start": "1136460",
    "end": "1142100"
  },
  {
    "text": "application coupe control apply creates it over time it might be scaled up",
    "start": "1142100",
    "end": "1147670"
  },
  {
    "text": "manually it might be scaled up by the autoscaler KooKoo control scale my app",
    "start": "1147670",
    "end": "1152870"
  },
  {
    "text": "set the replicas to 3 later you know we want to bump it to a new version and so",
    "start": "1152870",
    "end": "1158240"
  },
  {
    "text": "we get our check out we change the image from Oh No - OH - OH and then we push that into the cluster",
    "start": "1158240",
    "end": "1163580"
  },
  {
    "text": "workflow works fine everything's great later a second user needs to add a",
    "start": "1163580",
    "end": "1170600"
  },
  {
    "text": "volume but for whatever reason they don't have the same local checkout and they're just like well it's a quick",
    "start": "1170600",
    "end": "1176000"
  },
  {
    "text": "change I just need to make this right now I'm just gonna get a live copy of the act of the object itself you know",
    "start": "1176000",
    "end": "1182300"
  },
  {
    "text": "it's it's what the current state is I may as well just grab it so you'd say coop control get deployment we output it",
    "start": "1182300",
    "end": "1188630"
  },
  {
    "text": "to a local file and then we edit that file directly and we add the volumes and then you know user to things Aaron said",
    "start": "1188630",
    "end": "1195710"
  },
  {
    "text": "use apply so I'm going to apply that manifest to the cluster everything works fine it's you know it has any volume",
    "start": "1195710",
    "end": "1201290"
  },
  {
    "text": "nothing changed later say a week from then user ones needs to bump the image version again",
    "start": "1201290",
    "end": "1207990"
  },
  {
    "text": "they you know check out their manifest they changed the image version they",
    "start": "1207990",
    "end": "1213690"
  },
  {
    "text": "commit it they apply it to the cluster what just happened is that user one inadvertently reset the replicas back",
    "start": "1213690",
    "end": "1219270"
  },
  {
    "text": "down to one and they removed the volume and they removed other fields as well so",
    "start": "1219270",
    "end": "1224309"
  },
  {
    "text": "if we look at how that actually happened what what we're looking at is this last applied this middle column is",
    "start": "1224309",
    "end": "1230700"
  },
  {
    "text": "essentially the outcome of what user two did and what they did is they pulled a live copy of the the object which",
    "start": "1230700",
    "end": "1237510"
  },
  {
    "text": "contained all fields whether they were originally specified or not so it contained replicas that contain the",
    "start": "1237510",
    "end": "1242940"
  },
  {
    "text": "volumes it contained the update strategy everything they pulled that local they made their edits and then they said",
    "start": "1242940",
    "end": "1248640"
  },
  {
    "text": "apply which means that all of those fields now exist in the last applied annotation so now they're managed now",
    "start": "1248640",
    "end": "1255870"
  },
  {
    "text": "they're enforced so now when user one comes back and this is their view essentially they their local object",
    "start": "1255870",
    "end": "1262020"
  },
  {
    "text": "doesn't have any of those fields it doesn't specify replicas it doesn't spy to specify the volume and they just say",
    "start": "1262020",
    "end": "1267690"
  },
  {
    "text": "apply and so these all turn into deletion events because they say well the last time you apply this a volume was present a rolling update was present",
    "start": "1267690",
    "end": "1274440"
  },
  {
    "text": "a replica count was present and now they're not so we should delete all those fields when you delete the replica",
    "start": "1274440",
    "end": "1279539"
  },
  {
    "text": "field it defaults back to one we delete the volumes that were added by user two and none of this was intended so the",
    "start": "1279539",
    "end": "1287820"
  },
  {
    "text": "important thing to note here is user ones workflow didn't change at all they did the exact same thing every single time they had a source config they",
    "start": "1287820",
    "end": "1295140"
  },
  {
    "text": "modified it and they used apply and what happened though is even though their workflow didn't change the there didn't",
    "start": "1295140",
    "end": "1301620"
  },
  {
    "text": "get the expected outcome and you could think of user 1 is actually being a CI CD system there is no behavior change it",
    "start": "1301620",
    "end": "1307169"
  },
  {
    "text": "is told this is the tag that you should check out and then you should apply those manifests of the cluster but inadvertently another user has actually",
    "start": "1307169",
    "end": "1313530"
  },
  {
    "text": "changed that workflow so it's pretty important to kind of consider that mixing these styles of object management",
    "start": "1313530",
    "end": "1318929"
  },
  {
    "text": "can lead to these unintended outcomes so brief list of recommendations based on",
    "start": "1318929",
    "end": "1325650"
  },
  {
    "start": "1321000",
    "end": "1321000"
  },
  {
    "text": "some of these things one in general you probably don't want to actually define replicas as part of your objects because",
    "start": "1325650",
    "end": "1332070"
  },
  {
    "text": "it's probably better managed separately when you're making updates to your object you probably don't want",
    "start": "1332070",
    "end": "1337140"
  },
  {
    "text": "- no how many replicas are actually running in the cluster there's times where maybe it's going to be three copies that's never going to change",
    "start": "1337140",
    "end": "1343350"
  },
  {
    "text": "that's fine but think about this from the perspective of like a CI CD system you want it to be pushing out but you",
    "start": "1343350",
    "end": "1349080"
  },
  {
    "text": "know image updates or label updates or something like that the manifest as a whole you don't want it having to ask the cluster well how many replicas do",
    "start": "1349080",
    "end": "1355590"
  },
  {
    "text": "you have right now so that I can update this local manifest so that when I push it back to the cluster that's preserved and this also goes to other fields that",
    "start": "1355590",
    "end": "1362640"
  },
  {
    "text": "you might want externally managed there's some other ones where it's like the load balancer IP for example on a",
    "start": "1362640",
    "end": "1367800"
  },
  {
    "text": "load balancer type service this isn't something that you are managing this is something that cloud provider code is",
    "start": "1367800",
    "end": "1372900"
  },
  {
    "text": "managing another thing would be explicitly defining the defaulting fields or some of them and so if you",
    "start": "1372900",
    "end": "1380100"
  },
  {
    "text": "think that added later time you might want to change the update strategy then",
    "start": "1380100",
    "end": "1385680"
  },
  {
    "text": "put that in the manifest that you're managing so that when you do want to change it you can change all of the fields at once and then lastly using",
    "start": "1385680",
    "end": "1393000"
  },
  {
    "text": "apply consistently and using it from the same source configs and so this is that",
    "start": "1393000",
    "end": "1398130"
  },
  {
    "text": "kind of user 1 user 2 model where you had two different users that were applying to different base configs with",
    "start": "1398130",
    "end": "1403770"
  },
  {
    "text": "two different views of the world which change each other's workflows and just in general mixing kind of imperative",
    "start": "1403770",
    "end": "1410190"
  },
  {
    "text": "commands like create and edit and set these can lead to unintended consequences unless you're really sure",
    "start": "1410190",
    "end": "1415230"
  },
  {
    "text": "of what you're doing so looking into the actual behavior and knowing it's okay that I set this particular field because",
    "start": "1415230",
    "end": "1420630"
  },
  {
    "text": "I know it's not going to be managed declaratively in this configuration that I have locally and then I know time wise",
    "start": "1420630",
    "end": "1427740"
  },
  {
    "start": "1426000",
    "end": "1426000"
  },
  {
    "text": "which actually I talked way faster this time but things we didn't get to cover but I do want to briefly go over is that",
    "start": "1427740",
    "end": "1435500"
  },
  {
    "text": "there's also cou control apply prune and this gets into declarative object",
    "start": "1435500",
    "end": "1441960"
  },
  {
    "text": "deletion itself so what we're talking about here is is managing objects themselves but you may also want to",
    "start": "1441960",
    "end": "1448050"
  },
  {
    "text": "manage sets of objects and what this allows you to do is you could have let's say a directory that contained object a",
    "start": "1448050",
    "end": "1453360"
  },
  {
    "text": "and object B and object C and you could say cube CTL probably prune all of those",
    "start": "1453360",
    "end": "1458730"
  },
  {
    "text": "and as part of the process it's going to create and also try and delete but first",
    "start": "1458730",
    "end": "1464100"
  },
  {
    "text": "it'll create all a B and C those objects later you decide well object C is deprecated I want it removed",
    "start": "1464100",
    "end": "1470240"
  },
  {
    "text": "the cluster rather than you having to decide oh I've got to go run coop CTL delete objects see you just remove it",
    "start": "1470240",
    "end": "1478190"
  },
  {
    "text": "from that directory and you run the exact same command again you just say coop control apply prune and it looks at",
    "start": "1478190",
    "end": "1483800"
  },
  {
    "text": "the state of the cluster in the live state of the cluster and it says well I see this object see and I don't see it",
    "start": "1483800",
    "end": "1489530"
  },
  {
    "text": "in the local configuration so that's a deletion event but this is something that you should be careful about using",
    "start": "1489530",
    "end": "1495920"
  },
  {
    "text": "definitely look deeply into its behavior because you could inadvertently delete a whole bunch of objects that you actually",
    "start": "1495920",
    "end": "1501830"
  },
  {
    "text": "don't want to um another really interesting one is you can set the override flag to false when you're",
    "start": "1501830",
    "end": "1508429"
  },
  {
    "text": "running could control apply so the typical behavior is to set this to true and that means that you're generally a",
    "start": "1508429",
    "end": "1514130"
  },
  {
    "text": "desired outcome is that your local configuration state the local file is what you want to end up in your live",
    "start": "1514130",
    "end": "1519760"
  },
  {
    "text": "object but you can actually have it calculate whether this might have been a conflict that the live changed",
    "start": "1519760",
    "end": "1526370"
  },
  {
    "text": "underneath you from the state of the last time that you applied from the state that you have locally and it can",
    "start": "1526370",
    "end": "1531679"
  },
  {
    "text": "report back in some cases that's nice because it's kind of a signal that hey wait someone should go look at this",
    "start": "1531679",
    "end": "1536870"
  },
  {
    "text": "because this changed in an unknown way and then also another one is actually interacting with this last applied",
    "start": "1536870",
    "end": "1543290"
  },
  {
    "text": "configuration annotation because it's an annotation on an object and it's just a serialized blob interacting with it can",
    "start": "1543290",
    "end": "1549440"
  },
  {
    "text": "kind of be a pain so there's some helper commands sub commands of apply so that you can view set or edit that annotation",
    "start": "1549440",
    "end": "1556240"
  },
  {
    "text": "again be aware that when you're changing this annotation you're changing behavior",
    "start": "1556240",
    "end": "1561320"
  },
  {
    "text": "when you the next time you apply to this and then similarly the patch command itself the underlying functionality of",
    "start": "1561320",
    "end": "1568790"
  },
  {
    "text": "apply is that it's calculating patches and applying them against objects in the cluster you can also do that yourself",
    "start": "1568790",
    "end": "1574429"
  },
  {
    "text": "you can actually you know formulate a patch and apply it against the object itself outside of apply as well so I did",
    "start": "1574429",
    "end": "1582740"
  },
  {
    "start": "1581000",
    "end": "1581000"
  },
  {
    "text": "have a pop quiz to see if we actually understood the three different states and how they go through but instead I'll",
    "start": "1582740",
    "end": "1588080"
  },
  {
    "text": "just give homework the first link is the most important this goes into everything",
    "start": "1588080",
    "end": "1593660"
  },
  {
    "text": "that I just talked about plus a lot more depth plus different styles of object management so the imperative style",
    "start": "1593660",
    "end": "1599300"
  },
  {
    "text": "object management big shout out to Phillip whit Rock who led the documentation effort on this and",
    "start": "1599300",
    "end": "1606120"
  },
  {
    "text": "everyone who worked on it it's incredibly helpful before this existed it was kind of a guessing game at least",
    "start": "1606120",
    "end": "1611370"
  },
  {
    "text": "for me I didn't really know what was going on also the COO control patch documentation goes more into the different pad styles",
    "start": "1611370",
    "end": "1618450"
  },
  {
    "text": "and then you can understand like what are the patches that are being calculated locally and being sent to the to the API there's a discussion about an",
    "start": "1618450",
    "end": "1626550"
  },
  {
    "text": "apply v to refactor so this is getting into some of the implementation details of how apply functions and how it's",
    "start": "1626550",
    "end": "1633150"
  },
  {
    "text": "communicating with the API server and how you can extend the kind of patch strategies that are implemented but",
    "start": "1633150",
    "end": "1639090"
  },
  {
    "text": "really interesting information and read into that like to kind of see where the future of this stuff is going and then",
    "start": "1639090",
    "end": "1644790"
  },
  {
    "text": "another really interesting document is Bryan Grant's declarative application management so again how we're talking",
    "start": "1644790",
    "end": "1651090"
  },
  {
    "text": "here about objects it's taking these kinds of concepts in expanding into how",
    "start": "1651090",
    "end": "1656130"
  },
  {
    "text": "could we generically manage generically and declaratively manage applications so",
    "start": "1656130",
    "end": "1661230"
  },
  {
    "text": "it would be multiple objects and services and control config maps and deployments taking these same kind of",
    "start": "1661230",
    "end": "1668100"
  },
  {
    "text": "concepts of these these patches in these overlays on objects and then just using all native kubernetes to manage",
    "start": "1668100",
    "end": "1674640"
  },
  {
    "text": "applications themselves really long really really interesting and then as part of that there's another document",
    "start": "1674640",
    "end": "1680070"
  },
  {
    "text": "about the issues that are related to that effort but a lot of these issues have to do with behaviors of coop CTL",
    "start": "1680070",
    "end": "1687060"
  },
  {
    "text": "apply and so they're applicable if you're kind of digging into the behavior and you want to know some of the nuances or some of the edge cases of the",
    "start": "1687060",
    "end": "1692640"
  },
  {
    "text": "problems this is discussing those states so that they can kind of be put on the roadmap and addressed anyway that's all",
    "start": "1692640",
    "end": "1698490"
  },
  {
    "text": "I have thank you so much",
    "start": "1698490",
    "end": "1701630"
  },
  {
    "text": "so can you please move to the slide with the pots back with annotations about",
    "start": "1705430",
    "end": "1710930"
  },
  {
    "text": "merge key and their strategy yeah and I do have to say I modified this slightly",
    "start": "1710930",
    "end": "1716210"
  },
  {
    "text": "for brevity but yeah so the question is like basically about the mechanics how",
    "start": "1716210",
    "end": "1722810"
  },
  {
    "text": "cube City works so the question is whether it supports custom x like CD types or custom a Passover like Service",
    "start": "1722810",
    "end": "1729770"
  },
  {
    "text": "Catalog types for example or if you if I build my own a book whether it be a server or CD controller with defining my",
    "start": "1729770",
    "end": "1737870"
  },
  {
    "text": "own types will I be able to annotate my types this way or are they built into",
    "start": "1737870",
    "end": "1743420"
  },
  {
    "text": "the cube city I mean basically like whether there is a metadata API including this API which passes this",
    "start": "1743420",
    "end": "1750830"
  },
  {
    "text": "metadata back to cube CTO right so is anyone from API machinery and/or sig CLI",
    "start": "1750830",
    "end": "1758180"
  },
  {
    "text": "in the room because I'm not sure if those mechanics are exposed to things like if you would be able to import that",
    "start": "1758180",
    "end": "1763610"
  },
  {
    "text": "into your own objects you could I mean essentially all that's happening",
    "start": "1763610",
    "end": "1769160"
  },
  {
    "text": "underneath is like patch is being calculated and then being communicated to the server so as long as it matched",
    "start": "1769160",
    "end": "1776120"
  },
  {
    "text": "those same semantics I believe so but I'm not positive on them yeah so the question is just because I have seen",
    "start": "1776120",
    "end": "1782300"
  },
  {
    "text": "with these some changes like there was a stream of changes to make it less core",
    "start": "1782300",
    "end": "1788240"
  },
  {
    "text": "specific into serial to move it back to the API server to pass the metadata from service so there with API aggregator and",
    "start": "1788240",
    "end": "1795860"
  },
  {
    "text": "other things cubes they would support like generically such things like that but I've seen the cases where when you",
    "start": "1795860",
    "end": "1802970"
  },
  {
    "text": "every Gator for example some API mention of your stuff edit the support for that",
    "start": "1802970",
    "end": "1808370"
  },
  {
    "text": "but because cube CTL haven't been changed to use that meta information we still can't really use this feature yes",
    "start": "1808370",
    "end": "1815420"
  },
  {
    "text": "yeah so I from just some discussions that I've had it sounds like the",
    "start": "1815420",
    "end": "1820790"
  },
  {
    "text": "near-term direction one option is that start with moving all of the the",
    "start": "1820790",
    "end": "1827330"
  },
  {
    "text": "calculation logic into the client side so that you would actually calculate the final state of the object and instead of",
    "start": "1827330",
    "end": "1833480"
  },
  {
    "text": "using a patch request you actually just use a put request and so it would be okay let's do all calculation locally get the final state",
    "start": "1833480",
    "end": "1840870"
  },
  {
    "text": "of the object and push that to the cluster versus calculate the patch object locally and then communicate that",
    "start": "1840870",
    "end": "1847110"
  },
  {
    "text": "with the patch tile to the API server so that would be a first step and if it was if that was the case then on your own",
    "start": "1847110",
    "end": "1852870"
  },
  {
    "text": "custom types you would just do the same kind of thing like you would put the end state that you desired then pass that",
    "start": "1852870",
    "end": "1859410"
  },
  {
    "text": "point another thing that I've heard discussed is implementing this logic on",
    "start": "1859410",
    "end": "1865470"
  },
  {
    "text": "the API server side except all you as a user doing or providing those three states explicitly to the API so you're",
    "start": "1865470",
    "end": "1871950"
  },
  {
    "text": "saying this is the local object this is the the last applied and then the server obviously has the the live and then all",
    "start": "1871950",
    "end": "1879270"
  },
  {
    "text": "it does is it calculates all of it on server side and it doesn't know any there is no patch communication at all",
    "start": "1879270",
    "end": "1884490"
  },
  {
    "text": "it's just calculating it locally but that's part of that kind of v2 discussion there's a couple people I can",
    "start": "1884490",
    "end": "1890250"
  },
  {
    "text": "try and connect you with it would probably be able to answer your question a bit better yeah thank you yeah thank",
    "start": "1890250",
    "end": "1897120"
  },
  {
    "text": "you first alright so if I understand this correctly if you're running on the",
    "start": "1897120",
    "end": "1904110"
  },
  {
    "text": "slide where you have the replicas that were not previously defined and are now getting them and you're getting an error",
    "start": "1904110",
    "end": "1910290"
  },
  {
    "text": "I believe it's what it is you're changing the the update strategy",
    "start": "1910290",
    "end": "1916320"
  },
  {
    "text": "right it is so could you work around this error by somehow updating last",
    "start": "1916320",
    "end": "1922650"
  },
  {
    "text": "applied weather by weather by patch or apply or the sub command to include the",
    "start": "1922650",
    "end": "1928740"
  },
  {
    "text": "update strategy in the last applied and then change it absolutely that would be the exact way that you would get",
    "start": "1928740",
    "end": "1934110"
  },
  {
    "text": "yourself out of this situation and so that that applies sub-command of cubes detail apply edit last supplied you",
    "start": "1934110",
    "end": "1941820"
  },
  {
    "text": "could then it would pull it up in an editor and you could add those fields into the last supplied so that next when",
    "start": "1941820",
    "end": "1947370"
  },
  {
    "text": "you went and applied this it would know that it was actually deleting all of those subfields so that would be exactly",
    "start": "1947370",
    "end": "1952770"
  },
  {
    "text": "how you get yourself out of that situation and then minor related question is the error message that you",
    "start": "1952770",
    "end": "1958860"
  },
  {
    "text": "get back in any way helpful to try and figure this out it's changed over time I",
    "start": "1958860",
    "end": "1964560"
  },
  {
    "text": "don't know if it's more helpful now once upon a time it was kind of confusing but I think now it actually",
    "start": "1964560",
    "end": "1970230"
  },
  {
    "text": "like that it's you know this field is incompatible I think it says something along the lines of like strategy type",
    "start": "1970230",
    "end": "1976380"
  },
  {
    "text": "recreate isn't compatible with rolling update or something of that sort but it's still not immediately clear you're",
    "start": "1976380",
    "end": "1983429"
  },
  {
    "text": "like okay cool I'm trying to change it so how do I get out of that state which it's not immediately clear oh you need",
    "start": "1983429",
    "end": "1988799"
  },
  {
    "text": "to go modify that you need to add fields to an annotation on the object to get",
    "start": "1988799",
    "end": "1994110"
  },
  {
    "text": "yourself out of this situation that's the kind of like behavior that it's not immediately apparent that that's what",
    "start": "1994110",
    "end": "1999690"
  },
  {
    "text": "you need to do thank you yep so two questions one is is there a mechanism to",
    "start": "1999690",
    "end": "2005059"
  },
  {
    "text": "do like a dry run or a preview to see what it would change before applying the patch and second question given what",
    "start": "2005059",
    "end": "2011809"
  },
  {
    "text": "Kelsey said about like you know maybe we shouldn't be giving developers Cube could alter run in the first place is it",
    "start": "2011809",
    "end": "2017450"
  },
  {
    "text": "a good idea to use this given all the semantics in your opinion well so so to",
    "start": "2017450",
    "end": "2023720"
  },
  {
    "text": "answer your second question first if you think of like from Kelsey's presentation that that was actually a CI CD system",
    "start": "2023720",
    "end": "2031220"
  },
  {
    "text": "underneath it I'm pretty sure he's probably running applies so you know you have your manifest and it's tweaking the",
    "start": "2031220",
    "end": "2036620"
  },
  {
    "text": "image field and then a CI CD system is going to apply that or it's going to patch it the concern is what if that",
    "start": "2036620",
    "end": "2043160"
  },
  {
    "text": "user too comes along and then does it your CI CD system is completely correct and it's doing the right thing over and",
    "start": "2043160",
    "end": "2049700"
  },
  {
    "text": "it's repeatable and yeah the user shouldn't probably be doing anything else it's that like okay well being",
    "start": "2049700",
    "end": "2054888"
  },
  {
    "text": "knowledgeable that there's real reasons why you shouldn't be you know doing that directly or you need to have very like",
    "start": "2054889",
    "end": "2060590"
  },
  {
    "text": "clear understanding of it so I actually agree like in that approach it's just also worrying that someone with the best",
    "start": "2060590",
    "end": "2066470"
  },
  {
    "text": "intentions could still mess up that system and then repeat your first question sorry is there a way to do like",
    "start": "2066470",
    "end": "2071868"
  },
  {
    "text": "a dry run in a preview is see what changes it would make with an apply not truly to my knowledge because of things",
    "start": "2071869",
    "end": "2078080"
  },
  {
    "text": "like the defaulting values and that kind of thing and there's also you never know if if it's passing through the API there",
    "start": "2078080",
    "end": "2083990"
  },
  {
    "text": "could be like initializers or other things that are going to modify the object in transit to my knowledge it",
    "start": "2083990",
    "end": "2089388"
  },
  {
    "text": "would take a couple round trips for it to actually like say this would be what we would have done but I think that if",
    "start": "2089389",
    "end": "2096608"
  },
  {
    "text": "either the code moved all the way to the client and the only thing that it was doing was a put that would be much",
    "start": "2096609",
    "end": "2102350"
  },
  {
    "text": "easier to do dry runs on or conversely if it was an implemented server side but that code at-least of",
    "start": "2102350",
    "end": "2107960"
  },
  {
    "text": "how it takes those three states and computes a final state that at least would get us closer I think yeah thanks",
    "start": "2107960",
    "end": "2114940"
  },
  {
    "text": "somewhat related to the previous question so the default fields that get applied are they also annotated in",
    "start": "2114940",
    "end": "2121970"
  },
  {
    "text": "source code so you would know beforehand what would happen so you don't have to do this round tripping they I believe I",
    "start": "2121970",
    "end": "2129760"
  },
  {
    "text": "don't know explicitly I know that there's optional metadata on some of the fields but I don't know where the actual",
    "start": "2129760",
    "end": "2135859"
  },
  {
    "text": "defaulting logic lives again if there's anyone from API machinery in here okay",
    "start": "2135859",
    "end": "2145569"
  },
  {
    "text": "there's registered functions that apply all of the all of the defaulted fields",
    "start": "2145900",
    "end": "2151309"
  },
  {
    "text": "apparently yeah so probably not the most clear thing to just understand from yeah if it does annotate it just like the",
    "start": "2151309",
    "end": "2157910"
  },
  {
    "text": "badge behavior is well documented in source code it lives right there yeah be easier to understand that yeah anyway",
    "start": "2157910",
    "end": "2166250"
  },
  {
    "text": "thank you so much [Applause]",
    "start": "2166250",
    "end": "2172749"
  }
]