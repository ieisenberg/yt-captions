[
  {
    "text": "so my name is Steven day I'm Steve ooh on github and this is take control of",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "your file system with snapshot or in container D that's have longer title you",
    "start": "6029",
    "end": "11700"
  },
  {
    "text": "can see it on the thing but I wanted to look nice on the slide so so I guess I",
    "start": "11700",
    "end": "20160"
  },
  {
    "text": "guess the question this is this is the first time I've given this talk and I want to give this talk a long time it's the first time it's got accepted and so",
    "start": "20160",
    "end": "26580"
  },
  {
    "text": "I apologize if it's not great but hopefully we can get through it but the reason I want to give this talk is I",
    "start": "26580",
    "end": "32550"
  },
  {
    "text": "want to provide a rough history of container file systems and the important parts and the way I see it and I'd like",
    "start": "32550",
    "end": "39600"
  },
  {
    "text": "to also introduce the this really cool functionality built in container D that I think has a lot of potential called",
    "start": "39600",
    "end": "46260"
  },
  {
    "text": "snapshot and I'd like to kind of show it in detail and and what some of the basic primitives are and how they can be used",
    "start": "46260",
    "end": "52260"
  },
  {
    "text": "and then somebody who's more creative than me can run with that so yeah and so",
    "start": "52260",
    "end": "58050"
  },
  {
    "text": "I mean the two areas that I think it's it's interesting in is for builders and it's already being snapchatters are",
    "start": "58050",
    "end": "64588"
  },
  {
    "text": "already being employed in build kit and then volume snapshotting and hopefully I can show you why and prove to you",
    "start": "64589",
    "end": "72240"
  },
  {
    "text": "through the talk so thank you so the other thing I'd like to address before",
    "start": "72240",
    "end": "78150"
  },
  {
    "text": "talking about this is is you know why why do we have all this complexity and file systems and you'll start seeing it",
    "start": "78150",
    "end": "83970"
  },
  {
    "text": "as I talk about some of the things over a like how docker is built up and then how we the changes we made in container",
    "start": "83970",
    "end": "90119"
  },
  {
    "text": "D and the whole goal here is just to build a root filesystem for a container and you know it's it's wildly complex",
    "start": "90119",
    "end": "96960"
  },
  {
    "text": "but when you start going through all the parts they're all there for a good reason but the biggest reason is to",
    "start": "96960",
    "end": "103470"
  },
  {
    "text": "reduce the storage requirements and increase workload density this is this is the the the main the main concept",
    "start": "103470",
    "end": "109079"
  },
  {
    "text": "that we're looking to do so you know if I had a naive model and I just unpacked",
    "start": "109079",
    "end": "114420"
  },
  {
    "text": "everything on a container file and I have storage for each of my containers",
    "start": "114420",
    "end": "119430"
  },
  {
    "text": "my storage cost is oh oh then in the number of containers so like let's say I'm running 10 new boon twos I have to",
    "start": "119430",
    "end": "125820"
  },
  {
    "text": "run ten new boon to ISOs and they all have to be independent so what we really",
    "start": "125820",
    "end": "130890"
  },
  {
    "text": "want to do with containers is so we don't have to have as many disks and",
    "start": "130890",
    "end": "135940"
  },
  {
    "text": "we can use most of that disk space for like application storage is we want to converge to so all the containers use",
    "start": "135940",
    "end": "143379"
  },
  {
    "text": "the same storage and they're using the same data and our storage cost is o of one with the number of containers that",
    "start": "143379",
    "end": "149860"
  },
  {
    "text": "are running the same file system so this is this is the whole problem and this is why you see all the complexity this is",
    "start": "149860",
    "end": "155680"
  },
  {
    "text": "why you see this the the cool behavior in in docker and other container systems that are kind of kind of come that are",
    "start": "155680",
    "end": "163330"
  },
  {
    "text": "arm in arm with with containers so that's great the other thing I want to touch on really quickly is just mounts we've all",
    "start": "163330",
    "end": "170650"
  },
  {
    "text": "seen them hopefully we can review them and I'm gonna use the term mounts in a couple of different ways but the classic",
    "start": "170650",
    "end": "177579"
  },
  {
    "text": "way is taking a device and then parameterizing it say Oh X t2 and then",
    "start": "177579",
    "end": "183069"
  },
  {
    "text": "mounting it on user local and then there's also so I have an example of a",
    "start": "183069",
    "end": "188170"
  },
  {
    "text": "buying mount to where I just take like my path and then bind mount it to var var Lib app so like I can in the first",
    "start": "188170",
    "end": "195910"
  },
  {
    "text": "example I take like a device and I say mount this device here in the second example I take like a path and I mount",
    "start": "195910",
    "end": "201790"
  },
  {
    "text": "it there and this very simple thing I hopefully who's everybody's played with",
    "start": "201790",
    "end": "207130"
  },
  {
    "text": "a mount command right yeah most people okay good good so the so the entirety of",
    "start": "207130",
    "end": "212380"
  },
  {
    "text": "all of this stuff is built up on this concept of mounts and even in other operating systems that don't have mount",
    "start": "212380",
    "end": "218200"
  },
  {
    "text": "it's mount like in a way so hopefully like these these we've developed a model",
    "start": "218200",
    "end": "223959"
  },
  {
    "text": "that actually applies to different systems and in different places and even they don't even though they don't have",
    "start": "223959",
    "end": "229359"
  },
  {
    "text": "mounts we can still use the terminology mounts and we actually I'll explain later about how we use the terminology",
    "start": "229359",
    "end": "234549"
  },
  {
    "text": "and mounts and container D and how that can apply to systems that don't even have a mount syscall per se so the the",
    "start": "234549",
    "end": "242859"
  },
  {
    "text": "the other the other big concept we will see and I hope people have seen union",
    "start": "242859",
    "end": "248709"
  },
  {
    "text": "file systems you know file systems are this concept where you can take two separate directories and then overlay",
    "start": "248709",
    "end": "254049"
  },
  {
    "text": "them together and then create a mount parametrized as overlay and then see",
    "start": "254049",
    "end": "259570"
  },
  {
    "text": "both of those things so in this example I have a layer 0 and a layer 1 layer 0",
    "start": "259570",
    "end": "265479"
  },
  {
    "text": "is my base layer in this example or whichever way the air is it doesn't doesn't matter too much",
    "start": "265479",
    "end": "270789"
  },
  {
    "text": "but they merged together like layer 0 has been layer one has lib and they",
    "start": "270789",
    "end": "277330"
  },
  {
    "text": "merged together and you have been in lib how those things merged together is another story and I'm not gonna go into",
    "start": "277330",
    "end": "283120"
  },
  {
    "text": "that in this talk at all because it's complex and there's good kernel documentation kind of and you can play",
    "start": "283120",
    "end": "288669"
  },
  {
    "text": "with it and understand how that behaves but there's a whole bunch of different models to do it so I I don't know if",
    "start": "288669",
    "end": "294610"
  },
  {
    "text": "this is right but I think the first place we saw Union file systems was maybe plan 9 I don't know if if it was",
    "start": "294610",
    "end": "300520"
  },
  {
    "text": "before that there might have been other implementations the concepts once you start thinking about file systems it's",
    "start": "300520",
    "end": "306189"
  },
  {
    "text": "not that foreign but plan 9 played with it a lot and they built an operating system around bind mounts and Union",
    "start": "306189",
    "end": "312520"
  },
  {
    "text": "mounts and then the following that is like ufs and you see that in like vs DS and and other things and then the the",
    "start": "312520",
    "end": "320199"
  },
  {
    "text": "big two that you're probably familiar with our au FS and overlay and a OFS was really employed heavily by docker and",
    "start": "320199",
    "end": "327999"
  },
  {
    "text": "then overlay is kind of the what is the current one that everybody uses and I",
    "start": "327999",
    "end": "333639"
  },
  {
    "text": "think it's called the overlay to driver you've probably heard about that at some point so the other kind of file systems",
    "start": "333639",
    "end": "341050"
  },
  {
    "text": "that we're going to talk about today and in kind of inspired snapshot or in container D is snapshotting file systems",
    "start": "341050",
    "end": "347379"
  },
  {
    "text": "and I struggled to drawing this diagram but the idea is that you have a single",
    "start": "347379",
    "end": "353439"
  },
  {
    "text": "like volume which is just a collection of data and you can pull off these pointers from it and so you can say well",
    "start": "353439",
    "end": "359139"
  },
  {
    "text": "revision zero points here in revision 1 points here but points here and even",
    "start": "359139",
    "end": "364539"
  },
  {
    "text": "though the data might be shared that that hasn't been touched yet",
    "start": "364539",
    "end": "370270"
  },
  {
    "text": "once you touch that data it Forks off and that's what we call copy-on-write and both in both Union file systems and",
    "start": "370270",
    "end": "377649"
  },
  {
    "text": "snapshotting file systems typically do some sort of a form of copy-on-write but with snapshotting file systems they'll",
    "start": "377649",
    "end": "384430"
  },
  {
    "text": "typically consolidate data storage in at the block level so you'll have some sort of like B",
    "start": "384430",
    "end": "390189"
  },
  {
    "text": "tree and the top of the B tree will point in to either like revision 0 and",
    "start": "390189",
    "end": "395889"
  },
  {
    "text": "revision 1 and depending on which tree you're in you'll be able to see bin and Lib and they'll be but they'll be completely",
    "start": "395889",
    "end": "401510"
  },
  {
    "text": "unique so as you do modifications to these two things you can fork them off in different directions",
    "start": "401510",
    "end": "406850"
  },
  {
    "text": "some examples of this are again with the plan nine folks like fossil NTFS I know",
    "start": "406850",
    "end": "412310"
  },
  {
    "text": "has some snapshotting support the big ones now are ZFS and butter FS and then",
    "start": "412310",
    "end": "417770"
  },
  {
    "text": "everybody uses get presumably it's not a file system but it's a very similar concept of kind of snapshotting where i",
    "start": "417770",
    "end": "423919"
  },
  {
    "text": "have like a commit points to a tree and then that tree you can have a bunch of different trees and then you have you",
    "start": "423919",
    "end": "430190"
  },
  {
    "text": "use your commits to define the relationships of the changes to that tree over time so so Union versus",
    "start": "430190",
    "end": "437090"
  },
  {
    "text": "snapshot why am I talking about this you know what one's not better than the other they have different properties",
    "start": "437090",
    "end": "442910"
  },
  {
    "text": "they have different behaviors like Union file systems for instance they allow",
    "start": "442910",
    "end": "448070"
  },
  {
    "text": "modification of underlying data so I can change a layer at the mid level and so I",
    "start": "448070",
    "end": "453110"
  },
  {
    "text": "can like do an upgrade at one point and then have everything else consumed from",
    "start": "453110",
    "end": "458510"
  },
  {
    "text": "that whereas like snapshots are are more static but because because of the",
    "start": "458510",
    "end": "463580"
  },
  {
    "text": "properties of snapshots they can typically handle more revisions so I can so like get sure that the repository",
    "start": "463580",
    "end": "469130"
  },
  {
    "text": "gets slow to push and pull but it it will handle a lot more revisions to say",
    "start": "469130",
    "end": "474380"
  },
  {
    "text": "then like overlay which is going to be limited to like a I don't know 100 or so",
    "start": "474380",
    "end": "480050"
  },
  {
    "text": "what I mean you can push boundaries depending on how you how you actually form the amount command but you let you're very limited in the number of",
    "start": "480050",
    "end": "486080"
  },
  {
    "text": "revisions you can actually represent the inside of a union file system but the thing is both of them are copy-on-write",
    "start": "486080",
    "end": "491960"
  },
  {
    "text": "in both of them for containers can be represented with a shared data model and that's kind of and that's and in seeing",
    "start": "491960",
    "end": "498740"
  },
  {
    "text": "that in seeing that in in the way containers behave and in the",
    "start": "498740",
    "end": "503990"
  },
  {
    "text": "implementation of Dockers graph drivers and other systems we can kind of define a common way of saying okay well let's",
    "start": "503990",
    "end": "512120"
  },
  {
    "text": "look at Union file systems and snapshot file systems that's the same way under this like snapshot model and we can",
    "start": "512120",
    "end": "517400"
  },
  {
    "text": "build up all of those things so stepping back a little bit the I want to talk",
    "start": "517400",
    "end": "524300"
  },
  {
    "text": "about the the docker storage architecture because this is where a lot of this came from and in it's very",
    "start": "524300",
    "end": "531320"
  },
  {
    "text": "complex there's like a demon on top and then just like reference store and it references images and those images have",
    "start": "531320",
    "end": "537680"
  },
  {
    "text": "like image configs and then they join together at this thing called a lair store which would then finally gets down",
    "start": "537680",
    "end": "544250"
  },
  {
    "text": "to a graph driver and if you ever ever looked at this interface inside of docker it integrates pretty tightly with",
    "start": "544250",
    "end": "550370"
  },
  {
    "text": "containers it integrates pretty tightly with images it integrates tightly so like both containers and images have",
    "start": "550370",
    "end": "556399"
  },
  {
    "text": "references into the graph driver and the graph driver actually represents those IDs directly so it's very tightly",
    "start": "556399",
    "end": "562399"
  },
  {
    "text": "coupled there you can do plug ability but with it but all of your life cycle is tied to your runtime with the",
    "start": "562399",
    "end": "569120"
  },
  {
    "text": "containers so like these are some of the problems with the graph driver model and I'm not gonna go too deep into this but",
    "start": "569120",
    "end": "576259"
  },
  {
    "text": "like one area is is it's in flexibility it's really hard to experiment because like you want to experiment with file",
    "start": "576259",
    "end": "582769"
  },
  {
    "text": "systems but like like I'm more of a filesystem guy than a container guy and I wanna play around with file systems but to play around with graph drivers",
    "start": "582769",
    "end": "590089"
  },
  {
    "text": "you have to have containers stuff so and so it's very hard to experiment with new",
    "start": "590089",
    "end": "595610"
  },
  {
    "text": "models that that might be you know take a few minutes to implement on a file system but once you start getting",
    "start": "595610",
    "end": "601579"
  },
  {
    "text": "containers involved it becomes more complex the other thing I talked about a little bit on the last slide is is how",
    "start": "601579",
    "end": "606740"
  },
  {
    "text": "tightly coupled it is so like the container life cycle is an example if you've ever ran into like deadlocks or",
    "start": "606740",
    "end": "612860"
  },
  {
    "text": "like oh I can't remove this container because of some sort of references it's because of this massive reference",
    "start": "612860",
    "end": "618350"
  },
  {
    "text": "network inside of the docker daemon it's also really tightly coupled with the image format so the image format and",
    "start": "618350",
    "end": "625130"
  },
  {
    "text": "the layers are actually the it's defined as the actual on disk format of the au",
    "start": "625130",
    "end": "632689"
  },
  {
    "text": "FS chainset so there's this like tar file in the middle that's actually just",
    "start": "632689",
    "end": "637790"
  },
  {
    "text": "you just tore up the a yo FS representation well that's really efficient and its really great but it",
    "start": "637790",
    "end": "643610"
  },
  {
    "text": "means that every other graph driver needs to convert between a o FS this a u",
    "start": "643610",
    "end": "648620"
  },
  {
    "text": "FS format and also it makes it hard to increment on image format so like you",
    "start": "648620",
    "end": "654559"
  },
  {
    "text": "can't do you can't say well I want to try out get for some reason or I want to try out a new tree thing or something",
    "start": "654559",
    "end": "660230"
  },
  {
    "text": "like that it's a lot easier it's really really hard to do in docker because you're so tightly integrated",
    "start": "660230",
    "end": "665570"
  },
  {
    "text": "with that format and then as I touched on before is the primitive is just can't simply can't be used outside containers",
    "start": "665570",
    "end": "671630"
  },
  {
    "text": "right so like you tied that lifecycle so you're tied to using containers so stepping back I hopefully I've covered",
    "start": "671630",
    "end": "678860"
  },
  {
    "text": "most much of the words I just want to say what container D is you could have come to my intro talk or I'm doing",
    "start": "678860",
    "end": "684230"
  },
  {
    "text": "another deep dive on Friday and you can learn all about it you can come and say hey what's container D or you can look it up on the internet whatever but the",
    "start": "684230",
    "end": "690920"
  },
  {
    "text": "like at the base of it it's a container runtime manager it powers docker can do",
    "start": "690920",
    "end": "696290"
  },
  {
    "text": "kubernetes CRI stuff and but provides the primitives to implement containers",
    "start": "696290",
    "end": "701360"
  },
  {
    "text": "and it increments on the internal architecture of docker and provides that it's got colton also has a great talk on",
    "start": "701360",
    "end": "706970"
  },
  {
    "text": "container d showing what it can do what it's capable of check out the URL container d you should be able to find",
    "start": "706970",
    "end": "712910"
  },
  {
    "text": "this quite easily yes so so this is the architecture of container d and at the top we have the interfaces like g RPC",
    "start": "712910",
    "end": "720020"
  },
  {
    "text": "and in the middle we have these g RPC service RG RPC and prometheus metrics and then in the middle we have all of",
    "start": "720020",
    "end": "726680"
  },
  {
    "text": "our services and this talk is really going to talk about just the snapshot in in in how that integrates with the",
    "start": "726680",
    "end": "733490"
  },
  {
    "text": "storage system but really just more about snapchatters and what they do and how they work and the lifecycle and how",
    "start": "733490",
    "end": "738500"
  },
  {
    "text": "we represented them so this diagram is just very just the simple container",
    "start": "738500",
    "end": "745160"
  },
  {
    "text": "storage architecture so basically there is a metadata store which holds like",
    "start": "745160",
    "end": "750410"
  },
  {
    "text": "containers and in images and those just reference out to snapshots and then like",
    "start": "750410",
    "end": "756230"
  },
  {
    "text": "an actual image content and so these metadata stores actually provide the",
    "start": "756230",
    "end": "762020"
  },
  {
    "text": "linking between the snapshots so there's so like you don't identify a snapshot based on the image you pulled it with",
    "start": "762020",
    "end": "768740"
  },
  {
    "text": "you just say this snapshot has this ID and I have an image record that points",
    "start": "768740",
    "end": "773990"
  },
  {
    "text": "to this ID and you and however you want to build that relationship you can do it doesn't matter the the IDs and the snap",
    "start": "773990",
    "end": "779870"
  },
  {
    "text": "shutters are completely opaque like weak so all of this these are based on simple",
    "start": "779870",
    "end": "785420"
  },
  {
    "text": "layer relationships so like you make a change you you you make some or you pull",
    "start": "785420",
    "end": "791540"
  },
  {
    "text": "off a layer you make some changes to it you commit back your changes and then now you have a layer relationship the",
    "start": "791540",
    "end": "797990"
  },
  {
    "text": "interface is much smaller it's much more focused I don't have the graph driver interface but believe me it's large and we you know like I said",
    "start": "797990",
    "end": "805550"
  },
  {
    "text": "before non updated non opinionated string keys and then the biggest piece I think will improve performance and",
    "start": "805550",
    "end": "813079"
  },
  {
    "text": "behavior under a lot of other conditions is the fact that we've externalized the mount life cycle so like the graph",
    "start": "813079",
    "end": "819769"
  },
  {
    "text": "drivers and docker actually perform the mounts so you say hey okay well mount this container for me and give me a",
    "start": "819769",
    "end": "825889"
  },
  {
    "text": "read/write image and then you say okay alright and then you get it back and then you have this handle and then you",
    "start": "825889",
    "end": "831889"
  },
  {
    "text": "got to make sure to unmount that handle whereas with the snap shutters what you get is just a mount you get this like",
    "start": "831889",
    "end": "837980"
  },
  {
    "text": "this reference object and you can then mount the filesystem as you see fit and so now you can tie it to the lifecycle",
    "start": "837980",
    "end": "843379"
  },
  {
    "text": "of the thing that you're actually using it with which is typically a container could be a build we also support",
    "start": "843379",
    "end": "849410"
  },
  {
    "text": "something called leases within container D so you can define like a transaction for when this snapshot is actually",
    "start": "849410",
    "end": "855379"
  },
  {
    "text": "available so like I said there's no mounting there's no actual mounting it",
    "start": "855379",
    "end": "861439"
  },
  {
    "text": "just returns mounts so you can do it in user space you can do all sorts of other cool stuff you don't actually have to do",
    "start": "861439",
    "end": "866809"
  },
  {
    "text": "a Cisco mount they could be you could have a snapshot er that implements URLs when it does something with URLs or something like that you'd have to have",
    "start": "866809",
    "end": "873410"
  },
  {
    "text": "special mount support for that but you can do that they're always explicitly active and",
    "start": "873410",
    "end": "878660"
  },
  {
    "text": "explicitly committed so there's a life cycle and I and I'll show you that and then all the life cycle is represented",
    "start": "878660",
    "end": "885259"
  },
  {
    "text": "by a command and and so it's very easy to use very simple there's no you don't",
    "start": "885259",
    "end": "890300"
  },
  {
    "text": "get back an object for each snapshot and that ensures that you don't have these like arbitrary life cycles they can kind",
    "start": "890300",
    "end": "895610"
  },
  {
    "text": "of get in the way and then the referent reference keys are chosen by the the callers and we don't actually integrate any of the formats all of the dipping",
    "start": "895610",
    "end": "903290"
  },
  {
    "text": "that you would do in docker to get images or in layers within docker are is is completely external to the snap",
    "start": "903290",
    "end": "910129"
  },
  {
    "text": "shutters so I can define completely new image formats but still use snap shutters with them and we provide lots",
    "start": "910129",
    "end": "916730"
  },
  {
    "text": "of libraries to do that conversely our diff system doesn't require you to use snap shutters so you can just take two",
    "start": "916730",
    "end": "922040"
  },
  {
    "text": "arbitrary directory paths on the filesystem and then dip them and generate a layer so you can you can you",
    "start": "922040",
    "end": "928819"
  },
  {
    "text": "can build a lot of primitives from that so this is the general snapshot light cycle and hopefully this little this",
    "start": "928819",
    "end": "935030"
  },
  {
    "text": "isn't too opaque but on the so the first",
    "start": "935030",
    "end": "940160"
  },
  {
    "text": "step here is we have a committed p0 and then we call prepare on it and we give it a name a and then you have a and then",
    "start": "940160",
    "end": "948260"
  },
  {
    "text": "you can do things to it on that arrow going down to a prime and then you have a prime and you call commit on it and",
    "start": "948260",
    "end": "954290"
  },
  {
    "text": "that will create p1 and then create this little can we see that arrow so that I'll create this relationship between p1",
    "start": "954290",
    "end": "960050"
  },
  {
    "text": "and p0 and then you can go through that again you you can do it prepare and then grab p1 and then you get a double Prime",
    "start": "960050",
    "end": "967970"
  },
  {
    "text": "do something to it commit it and then you would get p2 which has a relationship with p1 so is that that's",
    "start": "967970",
    "end": "975230"
  },
  {
    "text": "pretty clear so here's here's like an example and I'm gonna do this in a demo here in a moment I've done this demo",
    "start": "975230",
    "end": "982460"
  },
  {
    "text": "live yet so hopefully it works so in in in in in this one we're basically saying",
    "start": "982460",
    "end": "988370"
  },
  {
    "text": "okay well with prepare we're gonna call it active zero because it's gonna be in the active state and then we're gonna",
    "start": "988370",
    "end": "994190"
  },
  {
    "text": "actually mount it so we're gonna mount active zero onto a a location on the",
    "start": "994190",
    "end": "1000550"
  },
  {
    "text": "disk and then we'll touch hello that's missing some some path stuff but it",
    "start": "1000550",
    "end": "1006520"
  },
  {
    "text": "should be target slash hello but and then we'll unmount the target and then we'll commit that back in and then we",
    "start": "1006520",
    "end": "1013060"
  },
  {
    "text": "have a snapshot so then we can investigate that so we can list these",
    "start": "1013060",
    "end": "1018490"
  },
  {
    "text": "snapshots we can do a tree on it I don't know if you ever saw doc or tree it was a very cool command but had a lot of internal problems because the way docker",
    "start": "1018490",
    "end": "1025000"
  },
  {
    "text": "is built we can support that directly with snapshots it's really useful really cool to look at and I'll show you I'll",
    "start": "1025000",
    "end": "1030760"
  },
  {
    "text": "show you a few examples about it here in a moment and then we have a mounts command so I can so like I can run a",
    "start": "1030760",
    "end": "1036280"
  },
  {
    "text": "container and then I can stop it and I can mount it outside of the container I can fiddle with it and I can unmount",
    "start": "1036280",
    "end": "1041620"
  },
  {
    "text": "it and I can start the container up with it with those changes so you can imagine",
    "start": "1041620",
    "end": "1047140"
  },
  {
    "text": "all sorts of cool stuff you can do with build and some some op there's operational things you could do you could you could grab dumps without",
    "start": "1047140",
    "end": "1053620"
  },
  {
    "text": "having to do it exact there's a lot of there's a lot of things so hopefully let's see let's let's see if we can get",
    "start": "1053620",
    "end": "1059050"
  },
  {
    "text": "this to work all right so I have an empty container D here and",
    "start": "1059050",
    "end": "1066200"
  },
  {
    "text": "should be no snapshots okay great so we're gonna do is we're gonna create a snapshot and so all of the things are",
    "start": "1066200",
    "end": "1074389"
  },
  {
    "text": "pretty well-documented here we have like commit diff info and I'll show you show you how this relates to the actual internal interfaces here in a second but",
    "start": "1074389",
    "end": "1081500"
  },
  {
    "text": "we can do a prepare and when you do a prepare and you don't give it a parent",
    "start": "1081500",
    "end": "1086870"
  },
  {
    "text": "it's just going to start with an empty directory so we'll call this active zero just like our example in the slides and",
    "start": "1086870",
    "end": "1094059"
  },
  {
    "text": "okay it works sweet all right so now this should show up and we see that we have active zero and it is active and",
    "start": "1094059",
    "end": "1101620"
  },
  {
    "text": "well okay so what does that mean how useful is that well okay it's not that",
    "start": "1101620",
    "end": "1106700"
  },
  {
    "text": "useful yet so I have a temp of my path and what I'm gonna do is I'm going to mount this so there's a CTR snapshot",
    "start": "1106700",
    "end": "1114139"
  },
  {
    "text": "mount command and so will mount on temp my path and then we will do active zero",
    "start": "1114139",
    "end": "1122179"
  },
  {
    "text": "oops zero and so actually what this did is it",
    "start": "1122179",
    "end": "1128630"
  },
  {
    "text": "just prints the mount command I I didn't want to build an actual mounting into there so just give you the command and",
    "start": "1128630",
    "end": "1133730"
  },
  {
    "text": "then you can just is wildly dangerous thing called X hogs sudo if it's so much",
    "start": "1133730",
    "end": "1140929"
  },
  {
    "text": "fun so so we'll mount that and we can",
    "start": "1140929",
    "end": "1146179"
  },
  {
    "text": "actually see well okay it doesn't look like there's anything it's an empty directory I already already was forthcoming about",
    "start": "1146179",
    "end": "1152630"
  },
  {
    "text": "that and you can see here you can see here that's that's the mounting of it",
    "start": "1152630",
    "end": "1158360"
  },
  {
    "text": "it's it's just it's just a bind mount kind of right now because there's no changes in it but we can do we can do a",
    "start": "1158360",
    "end": "1167590"
  },
  {
    "text": "what did I say here yeah well yeah we'll go ahead and touch so we can do a touch",
    "start": "1169690",
    "end": "1175429"
  },
  {
    "text": "so we can do you know pseudo touch temp my path hello and then we can see that",
    "start": "1175429",
    "end": "1183590"
  },
  {
    "text": "in our in our path and let's get that let's get that free command a you know working nice okay so so now let's",
    "start": "1183590",
    "end": "1190700"
  },
  {
    "text": "unmount that so we'll unmount a temp my path and we you know we have to tell it",
    "start": "1190700",
    "end": "1196010"
  },
  {
    "text": "to do it you know hard with sudo and then we so now what do we have we still have",
    "start": "1196010",
    "end": "1201890"
  },
  {
    "text": "this active snapshot nothing's changed about the snapshot it's just beyond this state so like container D doesn't know about this yet so what I'm gonna do is a",
    "start": "1201890",
    "end": "1208040"
  },
  {
    "text": "commit command and a commit command is is it's just like it's just like the the",
    "start": "1208040",
    "end": "1217220"
  },
  {
    "text": "prepare command except it's kind of the the other part too and I'll show a code example about how this works in a more complicated scenario so we",
    "start": "1217220",
    "end": "1224420"
  },
  {
    "text": "just call commit and then now we could list our snapshots and we can kind of see what happens here where does that go",
    "start": "1224420",
    "end": "1231760"
  },
  {
    "text": "this and you can see here Oh foo has been committed and we no longer have our",
    "start": "1231760",
    "end": "1238370"
  },
  {
    "text": "file system path there there's nothing there because we unmelted it so what we can do next is let's create another one",
    "start": "1238370",
    "end": "1244310"
  },
  {
    "text": "but this time when we create our when we prepare we are going to define foo as",
    "start": "1244310",
    "end": "1250520"
  },
  {
    "text": "the parent so now I can do that same fancy mount command where'd it go",
    "start": "1250520",
    "end": "1259090"
  },
  {
    "text": "wouldn't amount let me just type it out CTR snapshot mount then it's gonna be",
    "start": "1259090",
    "end": "1267770"
  },
  {
    "text": "temp my path active inactive 0 this is",
    "start": "1267770",
    "end": "1272840"
  },
  {
    "text": "we're using the same reference as before even though it's a different one so that's our mount command so notice that",
    "start": "1272840",
    "end": "1277880"
  },
  {
    "text": "it changed quite a bit right so now since we're actually descending from foo we actually see that we start where we",
    "start": "1277880",
    "end": "1283910"
  },
  {
    "text": "have an overlay mount and you can see it's like type overlay overlay and it says a lot lots of things it defines a",
    "start": "1283910",
    "end": "1289670"
  },
  {
    "text": "working directory lots of implementation details about overlay which you can go read about and",
    "start": "1289670",
    "end": "1295600"
  },
  {
    "text": "um well I ran out again but actually let's do the fun thing and pipe it to X",
    "start": "1295600",
    "end": "1300860"
  },
  {
    "text": "argh sudo so so now we have it mounted",
    "start": "1300860",
    "end": "1306980"
  },
  {
    "text": "there's hello and we're we're back to it the cool thing now is we can do a CT our",
    "start": "1306980",
    "end": "1315440"
  },
  {
    "text": "snapshot tree and we can see like oh cool we have a relationship between active zero and foo so that's you know",
    "start": "1315440",
    "end": "1323240"
  },
  {
    "text": "we're in business so now we have an actual like layer relationship and if we LS these we can",
    "start": "1323240",
    "end": "1329210"
  },
  {
    "text": "see that we have two we have an active one called active zero whose parent phoo and then we have a committed one",
    "start": "1329210",
    "end": "1335190"
  },
  {
    "text": "called foo which is the base layer so now I can go and I can do the same kind of thing where I touch into we're gonna",
    "start": "1335190",
    "end": "1343560"
  },
  {
    "text": "touch world this time and then we should be so we should see tree my path and",
    "start": "1343560",
    "end": "1350400"
  },
  {
    "text": "then we got hello and world and then we can go ahead and unmount that and my",
    "start": "1350400",
    "end": "1356280"
  },
  {
    "text": "path whoops got to tell it to do it harder than that and then and then we can do a commit",
    "start": "1356280",
    "end": "1364050"
  },
  {
    "text": "so CTR snapshot commit and then we'll do",
    "start": "1364050",
    "end": "1372170"
  },
  {
    "text": "what's the ordering here so we're going to commit in do bar and then we're going",
    "start": "1372170",
    "end": "1377310"
  },
  {
    "text": "to commit active 0 active 0 we're gonna commit that into bar and then now what",
    "start": "1377310",
    "end": "1385140"
  },
  {
    "text": "happens is I have so if we look at snapshot tree we so now active 0 has",
    "start": "1385140",
    "end": "1391800"
  },
  {
    "text": "been shut down because we committed it like it acts like active active snapshots act like a transaction and",
    "start": "1391800",
    "end": "1396840"
  },
  {
    "text": "that we've committed it into bar and if we list that and when we look at that we still have the same like bar has foo as",
    "start": "1396840",
    "end": "1404190"
  },
  {
    "text": "a parent and they're both committed snapshots and so it's like what I did here is basically built up a container",
    "start": "1404190",
    "end": "1409650"
  },
  {
    "text": "file system from scratch with from the command line so I think it's cool okay",
    "start": "1409650",
    "end": "1415770"
  },
  {
    "text": "so so moving on so a little bit so the internals so if you can see that ok so",
    "start": "1415770",
    "end": "1424920"
  },
  {
    "text": "so this is the interface of the snapshot err and I have a link to it at the end and if you're if you really want to",
    "start": "1424920",
    "end": "1430740"
  },
  {
    "text": "understand it and all the operations go read the go doc we spent a lot of time ensuring the model was up to snuff and",
    "start": "1430740",
    "end": "1437100"
  },
  {
    "text": "well-defined but we have but the but the interface has is mostly method driven",
    "start": "1437100",
    "end": "1442470"
  },
  {
    "text": "you can see we have string keys everywhere in context but the in that",
    "start": "1442470",
    "end": "1448230"
  },
  {
    "text": "but the the big takeaway here is we have three kinds the with the active and",
    "start": "1448230",
    "end": "1454350"
  },
  {
    "text": "committed which I showed you and then we also have what sort of called views and so these are read-only and and that",
    "start": "1454350",
    "end": "1459600"
  },
  {
    "text": "allows snapchatters to say well if it's read-only I can mount it differently or I can do different data sharing so we",
    "start": "1459600",
    "end": "1465180"
  },
  {
    "text": "know that modifications aren't going to come through and you can actually express that in the system and then just like I showed you",
    "start": "1465180",
    "end": "1471360"
  },
  {
    "text": "on the command line with the snapshot LS you can see that that info is represented in this structure and so we",
    "start": "1471360",
    "end": "1477510"
  },
  {
    "text": "can actually stack these but that is not what I expected to do okay so we can",
    "start": "1477510",
    "end": "1482790"
  },
  {
    "text": "actually stack these and get back the info so you can actually build up so that tree command what it does is it",
    "start": "1482790",
    "end": "1488250"
  },
  {
    "text": "walks down and then gets all the info struct and then assembles a tree and so you can actually see the relationships",
    "start": "1488250",
    "end": "1494610"
  },
  {
    "text": "inside of your file systems which time do I have okay so so this is a really short code",
    "start": "1494610",
    "end": "1501540"
  },
  {
    "text": "example that I took it's a lot longer in the implementation because we have to handle errors and do other things with",
    "start": "1501540",
    "end": "1509570"
  },
  {
    "text": "like chain IDs and and whatnot those are just implementation details but here we",
    "start": "1509570",
    "end": "1514890"
  },
  {
    "text": "see the the interface in action and it's quite simple you take you prepare from a",
    "start": "1514890",
    "end": "1521610"
  },
  {
    "text": "parent and the parent is just it's just string and it can start empty and then",
    "start": "1521610",
    "end": "1527000"
  },
  {
    "text": "you get this these mounts set and then you you hand it in to this thing called",
    "start": "1527000",
    "end": "1532020"
  },
  {
    "text": "a diff dot applier and what that diff dot applier is doing is taking a layer blob like at our file and then apply",
    "start": "1532020",
    "end": "1539130"
  },
  {
    "text": "mounting everything applying it and then doing all the magical format image",
    "start": "1539130",
    "end": "1546270"
  },
  {
    "text": "format things and then gives you back a difference and I don't remember what that is actually but but then it unmount",
    "start": "1546270",
    "end": "1553290"
  },
  {
    "text": "everything which is like super key right is that you do something you mount it and then you unmount it that way you",
    "start": "1553290",
    "end": "1559590"
  },
  {
    "text": "don't have all these mounts hanging around your system and causing later problems for you and then you simply",
    "start": "1559590",
    "end": "1564840"
  },
  {
    "text": "take that and you you commit it and that's it and and so and then you can",
    "start": "1564840",
    "end": "1571680"
  },
  {
    "text": "apply this in a loop and that's how you do layered ifs and this is this is",
    "start": "1571680",
    "end": "1577710"
  },
  {
    "text": "writing container D in the root FS package you're curious it's really simple really easy to understand and it",
    "start": "1577710",
    "end": "1584010"
  },
  {
    "text": "it's it's quite a powerful concept this apply function this diff not apply ur is",
    "start": "1584010",
    "end": "1589050"
  },
  {
    "text": "implemented to deal with like OCI style or docker style containers but you could",
    "start": "1589050",
    "end": "1594420"
  },
  {
    "text": "do almost whatever you want in there and like I was just doing touches on the",
    "start": "1594420",
    "end": "1599910"
  },
  {
    "text": "file so a couple of considers considerations so like so I snapshots are a generally",
    "start": "1599910",
    "end": "1609260"
  },
  {
    "text": "good model it's pretty simple hopefully I've explained it in a in a way that can be consumed but I think we have a really",
    "start": "1609260",
    "end": "1616400"
  },
  {
    "text": "good model because I think it will work for lots of different scenarios without modifications to the actual snapchatters",
    "start": "1616400",
    "end": "1622460"
  },
  {
    "text": "we can modify things around the snapshot so that they'll work in different ways so you save run a snapshot or inside of",
    "start": "1622460",
    "end": "1628309"
  },
  {
    "text": "a container and you could get like UID mapping so for rootless I don't think the snapshot model needs to be changed",
    "start": "1628309",
    "end": "1633770"
  },
  {
    "text": "but I think all that needs to be done is how you actually do the mounts and UID mappings that do present problems for",
    "start": "1633770",
    "end": "1639110"
  },
  {
    "text": "rootless containers and I'm not an expert in that area but there are people here you can probably ask questions about the problems that might come up",
    "start": "1639110",
    "end": "1645500"
  },
  {
    "text": "the other cool thing that I don't think anybody's doing yet but would be great",
    "start": "1645500",
    "end": "1650960"
  },
  {
    "text": "and we can help out with is daemon lists snapshot or so like this is just a snapshot package there's a test suite",
    "start": "1650960",
    "end": "1657410"
  },
  {
    "text": "you can just import it and play with them and go and and do snapshotting",
    "start": "1657410",
    "end": "1662600"
  },
  {
    "text": "without the daemon and so I think there's definitely applications for builders that they're based on like native snapshot ORS and stuff like that",
    "start": "1662600",
    "end": "1668570"
  },
  {
    "text": "so there's lots of interesting things I think that can be built here I think that you could build a git snapshot err",
    "start": "1668570",
    "end": "1676820"
  },
  {
    "text": "it wouldn't be very good for production but it would be kind of a fun thing and I think that would be you know right in",
    "start": "1676820",
    "end": "1683270"
  },
  {
    "text": "the right up the alley of snapshot so currently in container D we have five",
    "start": "1683270",
    "end": "1689929"
  },
  {
    "text": "implementation this we have butter FS overlay ZFS a OFS and what we call",
    "start": "1689929",
    "end": "1695510"
  },
  {
    "text": "native native native is just where you take tar files and apply them and then copy the whole directory over and it's",
    "start": "1695510",
    "end": "1701000"
  },
  {
    "text": "it you know it gives you POSIX performance at the cost of remember the diagram I showed you at the start where",
    "start": "1701000",
    "end": "1707270"
  },
  {
    "text": "every container has its own store like that's the kind of oh of one worst case but some people need that for certain",
    "start": "1707270",
    "end": "1712640"
  },
  {
    "text": "things like where you can't perform mounts on the file system is a great example there's also we have a full test",
    "start": "1712640",
    "end": "1718429"
  },
  {
    "text": "suite so like so graph drivers and docker like they're tested but like",
    "start": "1718429",
    "end": "1725330"
  },
  {
    "text": "they're not unit there's not like a unit or functional test you can't just like modify the graph drivers and then run a",
    "start": "1725330",
    "end": "1731510"
  },
  {
    "text": "couple of tests and know everything working you have to like test them in the integration suite and I don't think",
    "start": "1731510",
    "end": "1737230"
  },
  {
    "text": "there's actually a full battery of tests they're just gonna get tested through the CLI so you can't just run the section of tests with the snapchatters",
    "start": "1737230",
    "end": "1743890"
  },
  {
    "text": "we built a full like fully verifiable and not fully that's the wrong word I like a full integration test suite that",
    "start": "1743890",
    "end": "1750640"
  },
  {
    "text": "you can just run against your snapshot or so you can implement your fubar snapshot ER and then you'll know if it's",
    "start": "1750640",
    "end": "1756730"
  },
  {
    "text": "working or not and we've we test all sorts of great edge cases in there to make sure that your snapshot or fall is",
    "start": "1756730",
    "end": "1761980"
  },
  {
    "text": "the model so going further again container D project experiment file bugs",
    "start": "1761980",
    "end": "1768990"
  },
  {
    "text": "talk to us yell at us whatever you want do it nicely though and the like I said",
    "start": "1768990",
    "end": "1775900"
  },
  {
    "text": "the this link is a little messed up but I'm sure you can figure it out by typing it in but it's the go doc to the",
    "start": "1775900",
    "end": "1783220"
  },
  {
    "text": "snapshots package and the snapshot err and it defines in detail all of the pieces of how these operations work how",
    "start": "1783220",
    "end": "1790540"
  },
  {
    "text": "they should perform and any kind of issues with those if you're more curious",
    "start": "1790540",
    "end": "1796270"
  },
  {
    "text": "about container D come to my talk on Friday and you know it you know come and",
    "start": "1796270",
    "end": "1801370"
  },
  {
    "text": "ask about it all I do talk about snapshot errs there I'm gonna for that for this talk I'm gonna almost do full",
    "start": "1801370",
    "end": "1808270"
  },
  {
    "text": "demo mode and we can just you know you can ask questions about how things work",
    "start": "1808270",
    "end": "1813370"
  },
  {
    "text": "and I can play around and show different things I can show how the snapshot has worked with other stuff too so yes with",
    "start": "1813370",
    "end": "1819310"
  },
  {
    "text": "that I think I've five minutes yeah so if there's any questions that would be great and thanks for coming to the late",
    "start": "1819310",
    "end": "1825520"
  },
  {
    "text": "talk I know it's late in the afternoon and I'm jet-lagged so I'm sure there's other people here so thanks for coming",
    "start": "1825520",
    "end": "1831550"
  },
  {
    "text": "so are there any questions okay",
    "start": "1831550",
    "end": "1840180"
  },
  {
    "text": "hi I'm photo and I still don't get it so you use overlay and with overlays you've",
    "start": "1845120",
    "end": "1851400"
  },
  {
    "text": "got a lot of mounts and now you just jump over it and take all the dips and",
    "start": "1851400",
    "end": "1856710"
  },
  {
    "text": "take another snap shot overlays in effort and put everything in a test that you only have only have one mount or",
    "start": "1856710",
    "end": "1863760"
  },
  {
    "text": "what's the big difference between the old stuff in doctor using overlay to is this this approach just to get it there",
    "start": "1863760",
    "end": "1871140"
  },
  {
    "text": "they're pretty similar and docker usually only does a single mount for each layer and it's defined like in that",
    "start": "1871140",
    "end": "1878370"
  },
  {
    "text": "mount command the the main difference is just the fact that I don't have to run a",
    "start": "1878370",
    "end": "1884220"
  },
  {
    "text": "container to get this mount and I can do this I can I can pull this mount directly out of the container deal with",
    "start": "1884220",
    "end": "1891180"
  },
  {
    "text": "a command line tool that's like the big the big difference and I can safely a mount and unmount that and and and work",
    "start": "1891180",
    "end": "1896730"
  },
  {
    "text": "and integrate with other systems in that way does that answer your question",
    "start": "1896730",
    "end": "1903840"
  },
  {
    "text": "okay anything else okay all right well",
    "start": "1903840",
    "end": "1911700"
  },
  {
    "text": "thanks everybody for coming [Applause]",
    "start": "1911700",
    "end": "1917789"
  }
]