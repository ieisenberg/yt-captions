[
  {
    "text": "I'm Greg this is Wes uh we're from Google we're going to talk about container patching today",
    "start": "60",
    "end": "5640"
  },
  {
    "text": "I actually really like the gum wall but I really wanted a Seattle theme talk so that's why there's some gumball in",
    "start": "5640",
    "end": "12660"
  },
  {
    "text": "this it is gross though um so",
    "start": "12660",
    "end": "17699"
  },
  {
    "text": "if we think about container patching at like a really very simplistic view you're trying to hit some sort of Target",
    "start": "17699",
    "end": "22859"
  },
  {
    "text": "usually so I put fedramp Targets on here you may not be subject to those ones you",
    "start": "22859",
    "end": "28019"
  },
  {
    "text": "might have PCI you might have no regulation you might just have sort of some vague notion of how quickly you",
    "start": "28019",
    "end": "34200"
  },
  {
    "text": "want to patch things but the way sort of compliance thinks about patching deadlines is a scanner detects a thing",
    "start": "34200",
    "end": "40020"
  },
  {
    "text": "you go patch it and then your production needs to be done within this whatever",
    "start": "40020",
    "end": "45239"
  },
  {
    "text": "this time window is uh so let's just start with a little trip down empathy Lane uh so imagine",
    "start": "45239",
    "end": "51899"
  },
  {
    "text": "you're the security person at an organization who's in charge of patching",
    "start": "51899",
    "end": "57300"
  },
  {
    "text": "these production clusters uh or maybe more likely you're the developer who's been told you're now the security person",
    "start": "57300",
    "end": "63420"
  },
  {
    "text": "who's patching these clusters um and so every two weeks you like go open up your dashboard and you look at",
    "start": "63420",
    "end": "69540"
  },
  {
    "text": "like the stuff that's in there and you've sort of already lost two weeks on your timer here because there's been two weeks of vulnerabilities accumulating",
    "start": "69540",
    "end": "76080"
  },
  {
    "text": "there while you weren't looking at it uh and so there's there's a couple of things in there there's a web front-end",
    "start": "76080",
    "end": "81360"
  },
  {
    "text": "container that's missing a couple of critical patches and so you go hey web team like can you go please patch this",
    "start": "81360",
    "end": "86820"
  },
  {
    "text": "uh container for me uh and of course like they ignore you feel weak and you're like hey what's up web team",
    "start": "86820",
    "end": "92820"
  },
  {
    "text": "um I'd like to get this patched to my dashboard green please and they come back and like oh actually it's not",
    "start": "92820",
    "end": "98700"
  },
  {
    "text": "really our code this looks like it might be the Django based container so you're like okay cool I know uh who",
    "start": "98700",
    "end": "105299"
  },
  {
    "text": "maintains Django without orgo go talk to them so hey Django container team it looks like you have these critical",
    "start": "105299",
    "end": "110520"
  },
  {
    "text": "patches missing can you patch a container please uh and then go away and look at it and they're like oh but this is Pearl like",
    "start": "110520",
    "end": "116759"
  },
  {
    "text": "we don't even use Pearl like uh do we really need to patch this thing and so you're like yeah look look I just",
    "start": "116759",
    "end": "124560"
  },
  {
    "text": "want my dashboard to be green uh so uh yes or but even better just get rid of",
    "start": "124560",
    "end": "130140"
  },
  {
    "text": "it so we never have to have this conversation again um and uh by this point you're out of",
    "start": "130140",
    "end": "135300"
  },
  {
    "text": "your SLO uh so uh things are not happy uh but like eventually they come back",
    "start": "135300",
    "end": "140459"
  },
  {
    "text": "and like well I we couldn't figure out how to remove it so we patched it I guess we'll have this conversation again and uh all right great okay so now",
    "start": "140459",
    "end": "148560"
  },
  {
    "text": "that's patched so you go back to the web team like hey web team uh please go rebuild with this Django container uh",
    "start": "148560",
    "end": "154860"
  },
  {
    "text": "and they're like okay yeah we did it and yeah I could uh but then you go look at the dashboard and it's still the old version I'm like",
    "start": "154860",
    "end": "161040"
  },
  {
    "text": "ah and you go back to the web team and they're like oh yeah we forgot to update the kubernetes Manifest so we patched",
    "start": "161040",
    "end": "167640"
  },
  {
    "text": "the docker container but we didn't update the Manifest the points of the container now it's really done and you go to look at it you're like oh actually",
    "start": "167640",
    "end": "173819"
  },
  {
    "text": "no it's still not done and also now there's more High vulnerabilities so like we had these criticals we were",
    "start": "173819",
    "end": "179940"
  },
  {
    "text": "trying to patch but like there's more vulnerabilities accumulating and uh and they're like oh yeah it had the soaking",
    "start": "179940",
    "end": "185940"
  },
  {
    "text": "QA so we committed the Manifest change to the QA Branch but we didn't put it in the prod branch and so now it's done and",
    "start": "185940",
    "end": "192659"
  },
  {
    "text": "you go look at it you're like okay it's fixed and then sort of a little voice in the back of your head is like well like I",
    "start": "192659",
    "end": "198540"
  },
  {
    "text": "think we have other things that run Django but like that's not your problem so you're going to just move on with your day",
    "start": "198540",
    "end": "204080"
  },
  {
    "text": "so why is this gross like it's not great uh so there's humans at every step there's",
    "start": "204080",
    "end": "210000"
  },
  {
    "text": "a human has to notice a thing human has to go tell another human to do a thing we don't know which layer we're patching",
    "start": "210000",
    "end": "215879"
  },
  {
    "text": "we don't have any inventory of containers we're patching code that we're not using and the vulnerabilities",
    "start": "215879",
    "end": "222299"
  },
  {
    "text": "are just accumulating faster than we can like pay them down so it just means this whole thing is like slow it's incomplete",
    "start": "222299",
    "end": "229140"
  },
  {
    "text": "it's not going to scale um",
    "start": "229140",
    "end": "234260"
  },
  {
    "text": "so who thanks the majority of the industry is doing better than this today",
    "start": "235019",
    "end": "241940"
  },
  {
    "text": "nobody no takers no takers all right that's what I expected",
    "start": "243599",
    "end": "249299"
  },
  {
    "text": "so the next slide says uh so slim they ran a survey and 88 of their respondents",
    "start": "249299",
    "end": "255420"
  },
  {
    "text": "were like it's challenging to ensure containerized applications are free from vulnerabilities uh and it might be",
    "start": "255420",
    "end": "261359"
  },
  {
    "text": "stories like that one that I just told so we're going to talk a little bit about what what we did for gke",
    "start": "261359",
    "end": "266880"
  },
  {
    "text": "containers we're going to talk about enforcement points we use other options that you could use and talk about these",
    "start": "266880",
    "end": "273840"
  },
  {
    "text": "sort of four things prevent detect fix monitor which is kind of our way of thinking about this problem",
    "start": "273840",
    "end": "280440"
  },
  {
    "text": "uh in terms of sort of what you can take away from this talk we're not really talking about the sort of vendor",
    "start": "280440",
    "end": "286500"
  },
  {
    "text": "containers or managed service provider containers like gke where like we've been we're just going to patch our",
    "start": "286500",
    "end": "291540"
  },
  {
    "text": "containers for you you don't need to worry about that so take this as a case study for like where you own containers",
    "start": "291540",
    "end": "297419"
  },
  {
    "text": "or you own kubernetes manifest you need to update to point at rebuilt containers that's where this sort of applies",
    "start": "297419",
    "end": "305040"
  },
  {
    "text": "uh what do we know uh we've been patching a few containers uh I guess a",
    "start": "305040",
    "end": "310080"
  },
  {
    "text": "few thousand across gke in anthos and some other products uh but we have a a reasonable number of",
    "start": "310080",
    "end": "316139"
  },
  {
    "text": "advantages so our environment helps quite a bit we mostly use golang we use",
    "start": "316139",
    "end": "322560"
  },
  {
    "text": "a small number of container repositories and in uh in a certain number of Registries uh mandatory based images we",
    "start": "322560",
    "end": "330660"
  },
  {
    "text": "have a fair bit of control over the release process so not everyone is in this situation so we're going to try and",
    "start": "330660",
    "end": "335820"
  },
  {
    "text": "give examples of what we did but then also other ways to solve the same problems if you don't have these things",
    "start": "335820",
    "end": "343039"
  },
  {
    "text": "uh really high level view of sort of container release pipeline",
    "start": "343039",
    "end": "348600"
  },
  {
    "text": "so containers flow through the top here through repos and end up on a running",
    "start": "348600",
    "end": "353880"
  },
  {
    "text": "cluster and kubernetes manifests and other yaml bits flow through the bottom and they both sort of converge on a",
    "start": "353880",
    "end": "360419"
  },
  {
    "text": "cluster there and then it all feeds an inventory system and if you're running sort of one of the",
    "start": "360419",
    "end": "366840"
  },
  {
    "text": "many scanners out there that are in the Showcase out there today you'll have some runtime detection and that'll",
    "start": "366840",
    "end": "374100"
  },
  {
    "text": "probably give you some inventory as well too so if you go install a thing on a cluster you've at least got some runtime visibility of what's going on and you've",
    "start": "374100",
    "end": "380940"
  },
  {
    "text": "got some inventory and that's a good start uh so uh I think to really get your sort",
    "start": "380940",
    "end": "387720"
  },
  {
    "text": "of like a handle on this process you need to do a bit more though uh and the further left you go uh the the sort of",
    "start": "387720",
    "end": "393419"
  },
  {
    "text": "uh the cheaper it is uh uh to to catch things earlier and so there's a whole whole bunch of other points here where",
    "start": "393419",
    "end": "399900"
  },
  {
    "text": "you can um do some prevention work and that's what we're going to talk about next",
    "start": "399900",
    "end": "405680"
  },
  {
    "text": "so uh problem is here just way too many containers way too many dependencies and if you have some sort of Target that",
    "start": "406380",
    "end": "412620"
  },
  {
    "text": "you're trying to hit it's just really hard about reducing the volume somehow uh so the sort of standard strategy that",
    "start": "412620",
    "end": "419400"
  },
  {
    "text": "you have probably heard from uh multiple people over the years is do things like this standardize on your base containers",
    "start": "419400",
    "end": "425880"
  },
  {
    "text": "make those containers as small as possible the less code you have the less patching you do get rid of unused code",
    "start": "425880",
    "end": "431940"
  },
  {
    "text": "wherever you can so if you can separate out build and run time and have those separate uh then that that can help a",
    "start": "431940",
    "end": "438419"
  },
  {
    "text": "lot and there's really sort of two approaches to getting the small containers it's either start small so",
    "start": "438419",
    "end": "444060"
  },
  {
    "text": "you start on scratch or you start on distress or one of these other like very minimal images or you uh sort of like",
    "start": "444060",
    "end": "451560"
  },
  {
    "text": "install everything you want and then you slim it down using slim toolkit that sort of gets rid of the things that",
    "start": "451560",
    "end": "457380"
  },
  {
    "text": "you're not actively using and the really hard part is just doing this everywhere consistently",
    "start": "457380",
    "end": "463699"
  },
  {
    "text": "especially if you have a very diverse environment so what we did uh was we we basically",
    "start": "463699",
    "end": "471180"
  },
  {
    "text": "standardized on display list as I said we're mostly golang so uh we have a distrostatic container that's just",
    "start": "471180",
    "end": "478440"
  },
  {
    "text": "enough to run a go binary there's no shell no package manager it's like really minimal little container and so",
    "start": "478440",
    "end": "484740"
  },
  {
    "text": "we standardize on that one for pretty much everything with a few exceptions and then another thing that we did that",
    "start": "484740",
    "end": "490259"
  },
  {
    "text": "I think is also just a good practice if you can do it is to get everything into a single registry or a small number of",
    "start": "490259",
    "end": "496020"
  },
  {
    "text": "repositories in in the registry and that just helps like you know everything's sort of in one place and it also that",
    "start": "496020",
    "end": "503039"
  },
  {
    "text": "has a a good availability property too like if you're uh say you're running in gke it's",
    "start": "503039",
    "end": "510479"
  },
  {
    "text": "your your GCR Google container registry or your artifact registry that Google",
    "start": "510479",
    "end": "515760"
  },
  {
    "text": "runs is a lot closer network-wise than something that you have to sort of reach out over the internet too and so uh",
    "start": "515760",
    "end": "522000"
  },
  {
    "text": "there's some availability advantages to just bringing that uh putting all your containers close to where your",
    "start": "522000",
    "end": "528120"
  },
  {
    "text": "production cluster is in terms of network hops so how do we do that the way we did this",
    "start": "528120",
    "end": "535680"
  },
  {
    "text": "is we wrote some pre-submit checks and so whenever a developer turns up with some yaml we run this pre-subject submit",
    "start": "535680",
    "end": "543420"
  },
  {
    "text": "check on it that looks at what image it's pointing at so we're checking that it's a GCR or artifact registry image",
    "start": "543420",
    "end": "551220"
  },
  {
    "text": "and then we're also checking that it was built on this uh distroller space and you can actually go introspect the",
    "start": "551220",
    "end": "556800"
  },
  {
    "text": "container and like pull out the file that tells you what OS it is and it'll tell you that it's a distross thing",
    "start": "556800",
    "end": "563760"
  },
  {
    "text": "there's other ways to do that though you don't necessarily have to do that that way you could do it at build time you",
    "start": "563760",
    "end": "570060"
  },
  {
    "text": "could look at the docker file you could add checks in between sort of build and putting the container into the",
    "start": "570060",
    "end": "576300"
  },
  {
    "text": "repository you could do the kubernetes piece at the packaging or deployment",
    "start": "576300",
    "end": "581399"
  },
  {
    "text": "layer but really probably one of the most common ways to do this is with admission control and so",
    "start": "581399",
    "end": "588480"
  },
  {
    "text": "here we have an example of doing those two things that I said so making sure that all containers are coming from a",
    "start": "588480",
    "end": "594899"
  },
  {
    "text": "particular registry and that they built off a particular base image so for the base image what we can do here is use",
    "start": "594899",
    "end": "601200"
  },
  {
    "text": "cosine to make an attestation a cryptographic attestation that says hey this this container is a distro-less",
    "start": "601200",
    "end": "608220"
  },
  {
    "text": "container and then that goes into your repo and then you have an admission controller that says do the containers",
    "start": "608220",
    "end": "614339"
  },
  {
    "text": "coming in have have this disturbless attestation if so let them run if they",
    "start": "614339",
    "end": "619860"
  },
  {
    "text": "don't then I won't and a similar thing uh but using gatekeeper you can write a",
    "start": "619860",
    "end": "625500"
  },
  {
    "text": "gatekeeper policy that says all of the uh all the manifests that are coming into this cluster the images have to",
    "start": "625500",
    "end": "632640"
  },
  {
    "text": "come from GCR so I'm just going to demo that quickly so what we've got here is",
    "start": "632640",
    "end": "640940"
  },
  {
    "text": "a uh we've got those two admission controllers running and they're pointing at this enforcing namespace and we're",
    "start": "641160",
    "end": "647820"
  },
  {
    "text": "going to try and run a container that's not a GCR container so this is BusyBox that's getting pulled from Docker Hub",
    "start": "647820",
    "end": "653959"
  },
  {
    "text": "and so that should get denied by the gatekeeper admission controller uh",
    "start": "653959",
    "end": "660120"
  },
  {
    "text": "that's going to block that let's draw on that",
    "start": "660120",
    "end": "666240"
  },
  {
    "text": "and so yeah you can see here the gatekeeper validation validating Mission Control",
    "start": "666240",
    "end": "672320"
  },
  {
    "text": "there's a policy called repo is GCR and it didn't let it in because uh the",
    "start": "672320",
    "end": "679920"
  },
  {
    "text": "index.docker io is not one of the GCR repos that we that we specified okay so",
    "start": "679920",
    "end": "686160"
  },
  {
    "text": "we'll do the same thing again and this time we're going to put it in GCR so it's the same busy box container but now",
    "start": "686160",
    "end": "693480"
  },
  {
    "text": "it's in GCL so it should pass gatekeeper but it still fails the six door check so we're running the six door policy",
    "start": "693480",
    "end": "699360"
  },
  {
    "text": "controller here and so that's looking for a distro-less attestation and",
    "start": "699360",
    "end": "705480"
  },
  {
    "text": "because this container doesn't have that attestation it doesn't get in there so one more time uh this time uh we're",
    "start": "705480",
    "end": "714180"
  },
  {
    "text": "going to run a container that is destroyless and a tested is disturbless using cosine and that one will go",
    "start": "714180",
    "end": "721079"
  },
  {
    "text": "through",
    "start": "721079",
    "end": "723260"
  },
  {
    "text": "okay so just quickly recapping here uh it's really good if you can look at what",
    "start": "732420",
    "end": "737459"
  },
  {
    "text": "enforcement points you have we like the pre-submit enforcement point but you might have others if you can standardize",
    "start": "737459",
    "end": "744600"
  },
  {
    "text": "on those base containers it really helps a lot and if you can get down to a smaller number of Registries for",
    "start": "744600",
    "end": "750240"
  },
  {
    "text": "inventory there's good security and availability reasons to do that if you don't do any of these things and they're",
    "start": "750240",
    "end": "755640"
  },
  {
    "text": "all kind of optional then you just have to be really good at the next things we're going to talk about I don't know the ways to talk about",
    "start": "755640",
    "end": "761399"
  },
  {
    "text": "detection cool thank you Greg all right let's get into it so the the",
    "start": "761399",
    "end": "766980"
  },
  {
    "text": "next part of our strategy is is detection so really your your vulnerability Management program is only",
    "start": "766980",
    "end": "773040"
  },
  {
    "text": "as good as your detection methods if you're if you're not detecting vulnerabilities it's unlikely you're going to patch them",
    "start": "773040",
    "end": "780240"
  },
  {
    "text": "so what are the problems with addiction first is which containers do we need to scan so you might have a lot of containers but not all of them are used",
    "start": "780240",
    "end": "787019"
  },
  {
    "text": "maybe somewhere in Dev or test or just old and outdated next is which scanner",
    "start": "787019",
    "end": "792480"
  },
  {
    "text": "should you use um so this this decision might have already been made by your organization you might already have a scanner but you",
    "start": "792480",
    "end": "799320"
  },
  {
    "text": "should be aware of sort of the differences in the scanners they have different feature sets and different coverage mostly owing to different",
    "start": "799320",
    "end": "806100"
  },
  {
    "text": "vulnerability sources and techniques and they may handle duplicates differently",
    "start": "806100",
    "end": "811139"
  },
  {
    "text": "or or filtering differently so just be aware of these things and then last you need to know what layer has a",
    "start": "811139",
    "end": "816959"
  },
  {
    "text": "vulnerability is it is it actually in this container image or is it in some base image and I need to go get that",
    "start": "816959",
    "end": "822120"
  },
  {
    "text": "fixed so our solution to the problem of which container is sort of twofold so on the",
    "start": "822120",
    "end": "830100"
  },
  {
    "text": "bottom here anytime a developer checks in a new image we have this pre-submit check similar to the pre-submit checks",
    "start": "830100",
    "end": "835680"
  },
  {
    "text": "we mentioned earlier that scans it and ensures that it's fully patched so",
    "start": "835680",
    "end": "841560"
  },
  {
    "text": "um this is kind of like when a developer is making a change it's it's the easiest time to actually patch and this makes",
    "start": "841560",
    "end": "848100"
  },
  {
    "text": "sure anything that is staged uh going to be in production will be free of vulnerabilities then second we have sort",
    "start": "848100",
    "end": "855720"
  },
  {
    "text": "of this universe of all of our container images and we scan through Source we can determine what all of those are used in",
    "start": "855720",
    "end": "863519"
  },
  {
    "text": "production or will be used in production and those are scanned continuously",
    "start": "863519",
    "end": "869120"
  },
  {
    "text": "so as an alternative here um you you have all of your images in some registry but you probably don't",
    "start": "869399",
    "end": "875279"
  },
  {
    "text": "want to scan all of them so what a lot of folks do is they have something running on their hosts a Daemon set a an",
    "start": "875279",
    "end": "881579"
  },
  {
    "text": "agent of some sort maybe some scanning tool and this collects your inventory your production inventory and scans",
    "start": "881579",
    "end": "887639"
  },
  {
    "text": "those container images so this is like we said a good start that the disadvantage here is your you're only",
    "start": "887639",
    "end": "893940"
  },
  {
    "text": "catching vulnerabilities that are have made it to production are already running",
    "start": "893940",
    "end": "899100"
  },
  {
    "text": "so next is the question of which scanner to use so a lot of container image scanners today use the national",
    "start": "899100",
    "end": "905760"
  },
  {
    "text": "vulnerability database nvd feed as well as a bunch of os vendor feeds so this",
    "start": "905760",
    "end": "911220"
  },
  {
    "text": "gives you the OS system packages but uh there are sort of some new developments",
    "start": "911220",
    "end": "916519"
  },
  {
    "text": "first a lot of scanners are beginning to support scanning the actual application code so your your go or your python",
    "start": "916519",
    "end": "923160"
  },
  {
    "text": "within the container image next we've heard a lot about s-bombs the last couple days and as they become more",
    "start": "923160",
    "end": "929160"
  },
  {
    "text": "ubiquitous scanners are beginning to consume them and then kind of optionally use these these Vex documents to help",
    "start": "929160",
    "end": "935699"
  },
  {
    "text": "augment that and then I mentioned nvd and these OS vendor feeds but there are a number of",
    "start": "935699",
    "end": "941040"
  },
  {
    "text": "other sources where vulnerabilities come from open source databases GitHub advisories these kinds of things",
    "start": "941040",
    "end": "947760"
  },
  {
    "text": "some more features here so some scanners have uh this this idea of Base image detection either from metadata in the",
    "start": "947760",
    "end": "955320"
  },
  {
    "text": "image or pointed at the docker file they could say um which can which container image is this",
    "start": "955320",
    "end": "961199"
  },
  {
    "text": "one based on and this may be useful to you it's something to explore depending on your environment uh next I think a",
    "start": "961199",
    "end": "967139"
  },
  {
    "text": "big one is reachability analysis some tools either usually pointed at source",
    "start": "967139",
    "end": "972360"
  },
  {
    "text": "code they try to determine what what methods are you actually using so rather than just returning a huge list of cves",
    "start": "972360",
    "end": "978540"
  },
  {
    "text": "we're returning only the ones that are in in code that that you're using it can",
    "start": "978540",
    "end": "983760"
  },
  {
    "text": "also use some information in the binary to do that and we'll get into that a little later and then there are also additional scan types outside of",
    "start": "983760",
    "end": "990000"
  },
  {
    "text": "vulnerability scanning there are things like CIS Etc mentioned here so we did a bit of an experiment",
    "start": "990000",
    "end": "997620"
  },
  {
    "text": "we built a go binary we have a vulnerable module I've listed it up here at a vulnerable version it's built with",
    "start": "997620",
    "end": "1004639"
  },
  {
    "text": "an old go Lang version 118 and it's on an old W base from 2021 so I had a bunch of vulnerabilities",
    "start": "1004639",
    "end": "1010759"
  },
  {
    "text": "and we scanned that with two commercial scanners and two open source scanners and these are sort of the results both",
    "start": "1010759",
    "end": "1016759"
  },
  {
    "text": "fixed and unfixed so then the question becomes which one is correct well there's there's not",
    "start": "1016759",
    "end": "1023300"
  },
  {
    "text": "really a right or a wrong answer almost all of them detected uh OS package",
    "start": "1023300",
    "end": "1028880"
  },
  {
    "text": "vulnerabilities some detected go module vulnerabilities some did Google go tool chain vulnerabilities but even within",
    "start": "1028880",
    "end": "1035900"
  },
  {
    "text": "those results they kind of differ on what they choose to hide what they choose a surface and the the key Point",
    "start": "1035900",
    "end": "1041000"
  },
  {
    "text": "here is that we really want to increase coverage increase the number of things we scan but we want to decrease false",
    "start": "1041000",
    "end": "1047839"
  },
  {
    "text": "positives so there's kind of this tension between the two so when it comes to the question of",
    "start": "1047839",
    "end": "1053419"
  },
  {
    "text": "which scanner our solution is more than one and if you're publishing images for",
    "start": "1053419",
    "end": "1059660"
  },
  {
    "text": "consumption for others to consume you have to sort of assume they're they're going to be scanned by every every",
    "start": "1059660",
    "end": "1065840"
  },
  {
    "text": "scanner in existence and we found that to be true so we we run multiple standards and compare results and this",
    "start": "1065840",
    "end": "1070880"
  },
  {
    "text": "gives us a couple advantages so first it shows us if there are any false",
    "start": "1070880",
    "end": "1076220"
  },
  {
    "text": "positives or coverage gaps or new features that are that are sort of coming online and second it gives us an",
    "start": "1076220",
    "end": "1081980"
  },
  {
    "text": "idea of what our customers actually see so if they come to us with a a scan result from some random scanner we've",
    "start": "1081980",
    "end": "1088340"
  },
  {
    "text": "had some advance notice and we um we kind of know how to interpret",
    "start": "1088340",
    "end": "1093380"
  },
  {
    "text": "those results so then we we take all these results compare them and that feedbacks into our our own internal",
    "start": "1093380",
    "end": "1099020"
  },
  {
    "text": "scanner and hopefully improves things over time so the next big problem in detection is",
    "start": "1099020",
    "end": "1106039"
  },
  {
    "text": "noise and we've broadly broken this up into two buckets so those things that are under the control of the user and",
    "start": "1106039",
    "end": "1112100"
  },
  {
    "text": "those that are under the control of the scanner so in the user control bucket um oftentimes we're scanning code that's",
    "start": "1112100",
    "end": "1119240"
  },
  {
    "text": "just not even used like the the Pearl vulnerability example at the top and that's just things we should rip out",
    "start": "1119240",
    "end": "1124960"
  },
  {
    "text": "next there A lot of times cves are discovered but there's no fix available",
    "start": "1124960",
    "end": "1130100"
  },
  {
    "text": "so depending on your environment your threat model maybe maybe you don't care about those since there's nothing really",
    "start": "1130100",
    "end": "1136700"
  },
  {
    "text": "actionable at this time and the second bucket here we've got a bunch of different instances of cves a",
    "start": "1136700",
    "end": "1143960"
  },
  {
    "text": "lot of these are just things that probably won't be patched or have no fix sometimes there's sort of discrepancies",
    "start": "1143960",
    "end": "1149539"
  },
  {
    "text": "or there's a some some arguments about what the score should actually be and sometimes they just aren't even",
    "start": "1149539",
    "end": "1154640"
  },
  {
    "text": "applicable at all to your environment and these are really some areas where we think the the scanners can improve",
    "start": "1154640",
    "end": "1162940"
  },
  {
    "text": "so next going into the application and golang in particular so we use",
    "start": "1163220",
    "end": "1168860"
  },
  {
    "text": "primarily golang throughout gke um and as I mentioned a lot of scanners are",
    "start": "1168860",
    "end": "1174320"
  },
  {
    "text": "beginning to turn up these module or tool chain vulnerabilities so a problem we often see is that they",
    "start": "1174320",
    "end": "1181100"
  },
  {
    "text": "return all of the vulnerabilities in that module all of the vulnerabilities in that that the minor version of that",
    "start": "1181100",
    "end": "1186620"
  },
  {
    "text": "go tool chain so there's a tool released by The Go security team go volc this is",
    "start": "1186620",
    "end": "1193160"
  },
  {
    "text": "kind of a new experimental tool in library and it tries to help with this problem and we'll there's a link here",
    "start": "1193160",
    "end": "1198559"
  },
  {
    "text": "and we'll go into a demo of that all right so",
    "start": "1198559",
    "end": "1204320"
  },
  {
    "text": "here I've got a small sort of terrible go program with one single module",
    "start": "1204320",
    "end": "1209720"
  },
  {
    "text": "imported and you can see in particular I'm calling this this new server con method so go ahead and build that",
    "start": "1209720",
    "end": "1217760"
  },
  {
    "text": "and I've I went ahead and I packaged this up I pushed it to artifact registry and ran container analysis on it to see",
    "start": "1217760",
    "end": "1224360"
  },
  {
    "text": "what kind of results that scanner will give us so here it is you can see there are a whole bunch of go results and this is",
    "start": "1224360",
    "end": "1230480"
  },
  {
    "text": "great this is like what we want we want scanners to start doing this but how many of these are actually reachable",
    "start": "1230480",
    "end": "1236419"
  },
  {
    "text": "that's the question so we run go voltcheck on that same binary and what it does is it actually looks at",
    "start": "1236419",
    "end": "1242840"
  },
  {
    "text": "the symbol table in the binary to determine what methods are used and so we've kind of gone from that big list",
    "start": "1242840",
    "end": "1248299"
  },
  {
    "text": "down to just a a couple two instances and you'll notice it it even calls out that new servicon method the one that I",
    "start": "1248299",
    "end": "1254960"
  },
  {
    "text": "called so this is pretty cool and this is something you could maybe incorporate in your CI CD pipeline maybe you could",
    "start": "1254960",
    "end": "1261799"
  },
  {
    "text": "leverage that that library and hopefully this is the kind of thing that scanners will start to incorporate",
    "start": "1261799",
    "end": "1268520"
  },
  {
    "text": "sort of tied all back um when it comes to detection you need to look into the new features in your",
    "start": "1268520",
    "end": "1273919"
  },
  {
    "text": "scanner be aware of those and just in new advances in coverage in general",
    "start": "1273919",
    "end": "1279260"
  },
  {
    "text": "uh when there's a lot of noise look to your scanner vendor for for help either in filtering or raising you know full",
    "start": "1279260",
    "end": "1286760"
  },
  {
    "text": "request bug requests to them I mean then where it's appropriate to your threat model use these rules to sort of silence",
    "start": "1286760",
    "end": "1293120"
  },
  {
    "text": "and ignore the things that aren't relevant things that you you have no intention of fixing",
    "start": "1293120",
    "end": "1298400"
  },
  {
    "text": "so next the next part of our strategy is fixing or remediation and this is really kind of the like the meat of it so once",
    "start": "1298400",
    "end": "1305120"
  },
  {
    "text": "you've discovered a vulnerability You Know You're vulnerable how do we go about fixing it and deploying that that",
    "start": "1305120",
    "end": "1310400"
  },
  {
    "text": "fix to our production Fleet so what is the problem well um really it's just a complex process",
    "start": "1310400",
    "end": "1316880"
  },
  {
    "text": "and this is maybe an example flow of what what it might look like so you have a scanner it detects a",
    "start": "1316880",
    "end": "1322640"
  },
  {
    "text": "vulnerability in some image and then you have to determine is it actually in this image or is it in some some parent",
    "start": "1322640",
    "end": "1328940"
  },
  {
    "text": "um some base image then you have to find the owner hopefully you know the owner you create a bug or a PR to them and",
    "start": "1328940",
    "end": "1335659"
  },
  {
    "text": "then once this is all complete you've got to sort of do this process again for anything that depends on that image",
    "start": "1335659",
    "end": "1342200"
  },
  {
    "text": "so our first solution um originally we sort of tried to",
    "start": "1342200",
    "end": "1347380"
  },
  {
    "text": "determine the parent-child relationships and images in the base images but then more recently we've taken a different",
    "start": "1347380",
    "end": "1353360"
  },
  {
    "text": "attack so as we mentioned earlier we have a sort of a finite limited set number of Base",
    "start": "1353360",
    "end": "1359000"
  },
  {
    "text": "images so those are represented here on the left and when they're built they get new tags",
    "start": "1359000",
    "end": "1364820"
  },
  {
    "text": "so on the left is the oldest tag and the the newest is on the right so what we do is we have Automation and it scans the",
    "start": "1364820",
    "end": "1371480"
  },
  {
    "text": "latest of these continuously and then say we find a vulnerability in Debian base the middle one here",
    "start": "1371480",
    "end": "1376640"
  },
  {
    "text": "so we go ahead and we automatically create a new one make a new tag and then we scan the latest again we",
    "start": "1376640",
    "end": "1382700"
  },
  {
    "text": "just do this for eternity and this ensures that when you need to patch your container you always have a patched base",
    "start": "1382700",
    "end": "1388460"
  },
  {
    "text": "image available so there's really no question of do I need to go find the base image patch the base image and do",
    "start": "1388460",
    "end": "1394100"
  },
  {
    "text": "this whole dance next is the question of ownership so again we've got to pre-submit what",
    "start": "1394100",
    "end": "1400820"
  },
  {
    "text": "happens here is whenever a developer introduces a new image this check will look and say is there an owner defined",
    "start": "1400820",
    "end": "1407539"
  },
  {
    "text": "for this image so this this ensures that we we don't have any question of who owns the thing who should be on the hook",
    "start": "1407539",
    "end": "1414080"
  },
  {
    "text": "for doing the actual patching so taking that earlier example and",
    "start": "1414080",
    "end": "1420140"
  },
  {
    "text": "pulling out those those two pieces it this might be a simplified process so your scanner to detects a CV in an image",
    "start": "1420140",
    "end": "1426320"
  },
  {
    "text": "we already know that the base image is patched so if there's a new one available we just update that we know that we have an owner to send the bug to",
    "start": "1426320",
    "end": "1433100"
  },
  {
    "text": "so we go ahead and do that and then Etc we wait for a build and and so on until we're done",
    "start": "1433100",
    "end": "1439220"
  },
  {
    "text": "something else you'll note here is that we also aggregate bugs that's sort of what we think is the appropriate level",
    "start": "1439220",
    "end": "1444799"
  },
  {
    "text": "of abstraction so say you find uh 15 cves in your your Cube proxy image it",
    "start": "1444799",
    "end": "1450860"
  },
  {
    "text": "doesn't make sense to make 15 bugs to various teams or 15 times the number of deployments hundreds of bugs we found",
    "start": "1450860",
    "end": "1458240"
  },
  {
    "text": "that when you have a large number of bugs or the larger number of bugs you",
    "start": "1458240",
    "end": "1463280"
  },
  {
    "text": "you have the less likely they are to get fixed or rather the more likely they are to get ignored so we create one bug for",
    "start": "1463280",
    "end": "1470360"
  },
  {
    "text": "the image once that image is patched that fixes all of them and that's another way we sort of simplify things",
    "start": "1470360",
    "end": "1476480"
  },
  {
    "text": "so the title back if it's useful to you track the container parent-child relationships so you know what base",
    "start": "1476480",
    "end": "1482960"
  },
  {
    "text": "image relates to what what image as a complement or alternative just automate patching based images consistently so",
    "start": "1482960",
    "end": "1489380"
  },
  {
    "text": "you know you know you always have one it's very useful to have comprehensive inventory and track your ownership so we",
    "start": "1489380",
    "end": "1495440"
  },
  {
    "text": "know who owns the image and then where possible sort of use the existing systems you have to track these things",
    "start": "1495440",
    "end": "1501740"
  },
  {
    "text": "your your issue tracker or jira whatever you use so the last part of our strategy is",
    "start": "1501740",
    "end": "1508220"
  },
  {
    "text": "monitoring our visibility and this sort of cross-cuts all the others it's kind of integral to to all of the rest and",
    "start": "1508220",
    "end": "1514220"
  },
  {
    "text": "it's complementary to each of them so as we know what gets measured gets",
    "start": "1514220",
    "end": "1520280"
  },
  {
    "text": "managed so the problems here are first there's kind of this question of what is the holistic view of the fleet given a",
    "start": "1520280",
    "end": "1528020"
  },
  {
    "text": "cve is it patched and then further has that patch been deployed next is this sort of composition",
    "start": "1528020",
    "end": "1534020"
  },
  {
    "text": "question so we know we have a cve but what containers actually have that cve and where is that container used and so",
    "start": "1534020",
    "end": "1541279"
  },
  {
    "text": "on up the stack the next inevitably bugs or PRS won't get merged or fixed and what do we do",
    "start": "1541279",
    "end": "1548480"
  },
  {
    "text": "about that so who is watching how do we measure those things and then how do we escalate so having those processes in place and then last we want to measure",
    "start": "1548480",
    "end": "1555980"
  },
  {
    "text": "all of this we want to know how we're doing against our timelines and then we also want to know are there bottlenecks",
    "start": "1555980",
    "end": "1561020"
  },
  {
    "text": "are there places we could make things better so our solution kind of a simplified",
    "start": "1561020",
    "end": "1566539"
  },
  {
    "text": "view of our solution is something like this it may burn some ideas in your mind so",
    "start": "1566539",
    "end": "1572360"
  },
  {
    "text": "um our standard detects of cve if it's new finding we we create a bug kind of like described before if it's an",
    "start": "1572360",
    "end": "1578720"
  },
  {
    "text": "existing bug we we check it against our stated SLO and we if if it's nearing um",
    "start": "1578720",
    "end": "1585380"
  },
  {
    "text": "the SLO end date we'll say hey 50 of your SLO is gone you really need to take",
    "start": "1585380",
    "end": "1590659"
  },
  {
    "text": "a look at this and then once it gets past SLO we have escalation processes so a couple other things I'll mention in",
    "start": "1590659",
    "end": "1597380"
  },
  {
    "text": "this in this slide which aren't really depicted here are we really we only scan those images that are relevant so those",
    "start": "1597380",
    "end": "1603620"
  },
  {
    "text": "we know are used in production we create bugs and the priority of those bugs is based on the severity to kind of",
    "start": "1603620",
    "end": "1610159"
  },
  {
    "text": "to drive a priority um so then we we create but we create these",
    "start": "1610159",
    "end": "1616100"
  },
  {
    "text": "bugs we've got these processes in place to add comments and and nag and then we've also got processes for um sort of",
    "start": "1616100",
    "end": "1622039"
  },
  {
    "text": "dashboarding and email reporting and that kind of thing another optimization here might be if the detection is is no",
    "start": "1622039",
    "end": "1629900"
  },
  {
    "text": "longer around you could close the bug have some automation to do something like that the next problem is composition so NGK",
    "start": "1629900",
    "end": "1637520"
  },
  {
    "text": "we've built a system all in spanner that has these relations so we have a GK version we know it has one or more applications one or more containers that",
    "start": "1637520",
    "end": "1644600"
  },
  {
    "text": "have one or more cves packages with CVS in them so then",
    "start": "1644600",
    "end": "1650059"
  },
  {
    "text": "let's say your security engineer comes along and says hey are we affected by this cve well we can say yes we are it's in this",
    "start": "1650059",
    "end": "1657380"
  },
  {
    "text": "package which is in this container which is in this application and in this gke",
    "start": "1657380",
    "end": "1662419"
  },
  {
    "text": "version so we're able to track using this system next is sort of the all-up visibility so",
    "start": "1662419",
    "end": "1670039"
  },
  {
    "text": "we have a a master dashboard that should sort of shows the um the entire status of our Fleet to see how we're doing",
    "start": "1670039",
    "end": "1677240"
  },
  {
    "text": "uh but then we've got got some other metrics that we we track that are super helpful so on the top left this is just",
    "start": "1677240",
    "end": "1684440"
  },
  {
    "text": "all example data but we track images on a number of axes so by the number of",
    "start": "1684440",
    "end": "1689659"
  },
  {
    "text": "cves by the the team um by that that sort of thing so we know",
    "start": "1689659",
    "end": "1694820"
  },
  {
    "text": "which teams are getting the most which images have the most CVS Etc so in this example we have fake image 101 and 103",
    "start": "1694820",
    "end": "1702020"
  },
  {
    "text": "have a lot of CVS this is somewhere you might look into the prevention methods we talked to the beginning moving",
    "start": "1702020",
    "end": "1708320"
  },
  {
    "text": "something to disturbless or slimming it down and the top right I think something that's often overlooked in a lot of",
    "start": "1708320",
    "end": "1714080"
  },
  {
    "text": "scanners is it's it's important to track over time we want to know how we're doing right now but we also want to know",
    "start": "1714080",
    "end": "1719179"
  },
  {
    "text": "how we're trending so this gives us an idea of uh sort of that that Trend",
    "start": "1719179",
    "end": "1724340"
  },
  {
    "text": "um and then it also tells us if we're meeting our goals so we have these stated slos are",
    "start": "1724340",
    "end": "1731419"
  },
  {
    "text": "we are we meeting them and you can kind of find Trends in the data perhaps like in this example maybe maybe our low",
    "start": "1731419",
    "end": "1737360"
  },
  {
    "text": "vulnerabilities are not being prioritized as well as they could at the bottom here this is sort of an example",
    "start": "1737360",
    "end": "1742820"
  },
  {
    "text": "of how we track the life cycle of a single vulnerability so we look at from the time it's detected to the time it's",
    "start": "1742820",
    "end": "1748279"
  },
  {
    "text": "rolled out everywhere what are as granularly as possible we try to say what actions took place and how much",
    "start": "1748279",
    "end": "1756020"
  },
  {
    "text": "time was spent between them and those might be good candidates for further automation or for maybe you know",
    "start": "1756020",
    "end": "1762799"
  },
  {
    "text": "improving QA processes or release processes simplification some Alternatives here for inventory",
    "start": "1762799",
    "end": "1768919"
  },
  {
    "text": "um you're if you're on a cloud provider they might provide some some systems for that but a lot of scanners provide this",
    "start": "1768919",
    "end": "1774380"
  },
  {
    "text": "for the kind of composition piece uh Lyft has a really good article about how they use the open source cartography",
    "start": "1774380",
    "end": "1780860"
  },
  {
    "text": "graph database to do something similar something similar to what we did um s-bombs and guac are probably probably",
    "start": "1780860",
    "end": "1788720"
  },
  {
    "text": "the future here um as those are kind of developing and then another sort of complementary thing",
    "start": "1788720",
    "end": "1794120"
  },
  {
    "text": "you can do is just ignore all of that and just patch everything you find a vulnerability update",
    "start": "1794120",
    "end": "1799340"
  },
  {
    "text": "as far as slugs go um really lean on the systems that you already use your your bug management",
    "start": "1799340",
    "end": "1804980"
  },
  {
    "text": "software and if possible try to track the kind of commits and rollouts through your system",
    "start": "1804980",
    "end": "1811520"
  },
  {
    "text": "so to tying this all back it's very important to track your slos over time not just kind of the current status",
    "start": "1811520",
    "end": "1818860"
  },
  {
    "text": "tracking those those parts of your release process can help you identify these bottlenecks to see where you can",
    "start": "1818860",
    "end": "1824840"
  },
  {
    "text": "sort of prioritize investment and then where possible use your existing systems",
    "start": "1824840",
    "end": "1830000"
  },
  {
    "text": "to do this escalation dashboarding monitoring piece all right and with that I will give it back to Greg",
    "start": "1830000",
    "end": "1838360"
  },
  {
    "text": "cool all right so just a reminder what we talked about so we talked about standardizing on Registries getting",
    "start": "1839840",
    "end": "1845480"
  },
  {
    "text": "those minimal containers getting as far left as possible I know everyone would love to say shift left and loves hearing",
    "start": "1845480",
    "end": "1851179"
  },
  {
    "text": "it um but we found like you know that that's just the cheapest uh easy cheapest way you can do it uh keep those",
    "start": "1851179",
    "end": "1858260"
  },
  {
    "text": "vulnerabilities out of production uh scanners get you inventory and uh",
    "start": "1858260",
    "end": "1864020"
  },
  {
    "text": "visibility and the record of ownership of containers is is really critical so you",
    "start": "1864020",
    "end": "1869240"
  },
  {
    "text": "know who to who to nag to patch them if you can automatic patching is definitely better uh I think you'll",
    "start": "1869240",
    "end": "1875840"
  },
  {
    "text": "probably want bugs and ticketing systems anyway but uh to help you build dashboards but uh if you can Auto patch",
    "start": "1875840",
    "end": "1883640"
  },
  {
    "text": "and send PRS instead of just sending bugs uh then that's definitely going to be better and yeah ticketing systems or escalation",
    "start": "1883640",
    "end": "1890720"
  },
  {
    "text": "and just really like if you can do rather than tell that will make a big difference",
    "start": "1890720",
    "end": "1895840"
  },
  {
    "text": "so everything we talked about here we've got links for in the slides the slides are up on the website so the demo code",
    "start": "1895840",
    "end": "1903500"
  },
  {
    "text": "is in a GitHub repository you can go see that there's actually a few other things we didn't uh demo that are in that",
    "start": "1903500",
    "end": "1910460"
  },
  {
    "text": "repository yeah happy to take any questions you know I could get a few a few minutes",
    "start": "1910460",
    "end": "1919600"
  },
  {
    "text": "ready to go do you recommend scanning again once you've updated in your CI pipeline before you re-uploaded the",
    "start": "1928100",
    "end": "1934880"
  },
  {
    "text": "registry in case you pull in like appointment library or something like that maintainer got compromised or something like that",
    "start": "1934880",
    "end": "1941360"
  },
  {
    "text": "yeah so the question is like uh scanning in the in the repo is nice but like uh",
    "start": "1941360",
    "end": "1946640"
  },
  {
    "text": "isn't it isn't a good idea to like sort of rescan uh in case like uh I don't know you brought in a dependency that",
    "start": "1946640",
    "end": "1952820"
  },
  {
    "text": "had a vulnerability in it or or some other malicious change yeah like definitely so we have like multiple",
    "start": "1952820",
    "end": "1958399"
  },
  {
    "text": "points what I was scanning I think maybe there's not too many places to do it I I",
    "start": "1958399",
    "end": "1963440"
  },
  {
    "text": "don't know a bit like it I think you can uh sort of the earlier you do it and that's sort of the least cost on the",
    "start": "1963440",
    "end": "1970039"
  },
  {
    "text": "developer to fix it if they're already built their release they've already gone through their QA and they're like about",
    "start": "1970039",
    "end": "1976220"
  },
  {
    "text": "to put it on a cluster and you're like wait that's like the most annoying place to do it",
    "start": "1976220",
    "end": "1981500"
  },
  {
    "text": "um so uh but yeah I think like uh the visibility in multiple places along that",
    "start": "1981500",
    "end": "1986720"
  },
  {
    "text": "pipeline is useful yeah",
    "start": "1986720",
    "end": "1990220"
  },
  {
    "text": "question is is where's the ownership information right now uh effectively what happens is it's like we don't have",
    "start": "2004779",
    "end": "2012220"
  },
  {
    "text": "like a huge number of images so it's just a file that's checked in and uh there's a preset that basically looks at",
    "start": "2012220",
    "end": "2019179"
  },
  {
    "text": "your manifest and if the image your image is not in that file with an owner then we won't let you put the Manifest",
    "start": "2019179",
    "end": "2025360"
  },
  {
    "text": "in so uh in the future this could maybe be something more fancy but that's",
    "start": "2025360",
    "end": "2030880"
  },
  {
    "text": "definitely doing the job at the moment yeah",
    "start": "2030880",
    "end": "2034320"
  },
  {
    "text": "do we have the open SSL CLI in our district list images I I don't know I'd have to go look I don't know I don't",
    "start": "2042760",
    "end": "2050138"
  },
  {
    "text": "think so I don't think so we have a number of uh additionalist variants and some of them certainly don't they have",
    "start": "2050139",
    "end": "2055300"
  },
  {
    "text": "only you know uh Temp and some Etsy files I mean we have sort of uh",
    "start": "2055300",
    "end": "2060398"
  },
  {
    "text": "different variants for different use cases some may include glossy to my knowledge none of them have have open SSL",
    "start": "2060399",
    "end": "2066760"
  },
  {
    "text": "um but I know that the open source um District list provided by Google some of",
    "start": "2066760",
    "end": "2071980"
  },
  {
    "text": "those do have openness associated",
    "start": "2071980",
    "end": "2075598"
  },
  {
    "text": "yeah I think we're actually we're familiar with this example yeah so the comment was that uh even if you don't",
    "start": "2097119",
    "end": "2104080"
  },
  {
    "text": "have a a CLI in your container then there are some maybe sneaky ways to get uh something that's kind of close to a",
    "start": "2104080",
    "end": "2110859"
  },
  {
    "text": "CLI if you have things like openssl there's a whole website I forget what the uh I forget what the name is but",
    "start": "2110859",
    "end": "2116920"
  },
  {
    "text": "there's entire website dedicated to this premise of just like I have a small number of tools that aren't shells how",
    "start": "2116920",
    "end": "2123460"
  },
  {
    "text": "can I turn them into shells and there's a huge and fairly surprising list of of things that you can do that with yeah",
    "start": "2123460",
    "end": "2130720"
  },
  {
    "text": "uh but you know like I I think that's like everything that not having the shell is making the attacker's job",
    "start": "2130720",
    "end": "2136060"
  },
  {
    "text": "harder it's also making my job as a Defender easier uh because I have less things to patch so it's just win-win",
    "start": "2136060",
    "end": "2141099"
  },
  {
    "text": "anyway uh even if there is a like there's still a way uh",
    "start": "2141099",
    "end": "2147359"
  },
  {
    "text": "yeah yeah",
    "start": "2148720",
    "end": "2150720"
  },
  {
    "text": "David and all the other ones who knock out 20",
    "start": "2163780",
    "end": "2169380"
  },
  {
    "text": "can I look at it that way that way you know that example was",
    "start": "2169720",
    "end": "2175079"
  },
  {
    "text": "yeah yeah so what do we do about dependencies so I think like uh for us in particular and the example was like",
    "start": "2175420",
    "end": "2182260"
  },
  {
    "text": "uh you know if there's a critical somewhere sort of like deep in the chain but there's maybe a low that will like",
    "start": "2182260",
    "end": "2187839"
  },
  {
    "text": "fix that critical and sort of hidden uh so I think it probably comes down to like what your scanners can tell you uh",
    "start": "2187839",
    "end": "2194200"
  },
  {
    "text": "uh for like in terms of like the some what we've tried to do in terms of like container layers is have the least",
    "start": "2194200",
    "end": "2200619"
  },
  {
    "text": "number of container layers that even inside those containers uh and sort of like talking Beyond things that are like",
    "start": "2200619",
    "end": "2206980"
  },
  {
    "text": "more complicated than just a go binary now like you you might have like a full programming language like a Pi Pi",
    "start": "2206980",
    "end": "2213599"
  },
  {
    "text": "requirements.txt and other stuff and so but like scanners are starting to introspect that stuff now and give you",
    "start": "2213599",
    "end": "2219400"
  },
  {
    "text": "some like uh some results uh that so they are getting smarter in that regard and so I think it's it mostly comes down",
    "start": "2219400",
    "end": "2226180"
  },
  {
    "text": "to like how good your scanner is speaking of scanners commissioned a",
    "start": "2226180",
    "end": "2232119"
  },
  {
    "text": "couple and then you also said we use almost all of them so which can actually use yeah we're not going to do product",
    "start": "2232119",
    "end": "2238839"
  },
  {
    "text": "recommendations on the scanners yeah there's a lot of great scanners out there a lot of them are here today yeah",
    "start": "2238839",
    "end": "2245820"
  },
  {
    "text": "uh yeah is there any time that you just need to go fast and uh you don't have",
    "start": "2262380",
    "end": "2268359"
  },
  {
    "text": "time to wait on the full pipeline yeah for sure like uh I I think like what we're mostly talking about here is sort",
    "start": "2268359",
    "end": "2274119"
  },
  {
    "text": "of uh like routine patching that kind of stuff but there's definitely like emergency situations where it's like all",
    "start": "2274119",
    "end": "2281079"
  },
  {
    "text": "the stops are pulled out uh and you go as fast as you can and yeah so like you",
    "start": "2281079",
    "end": "2286540"
  },
  {
    "text": "know the Google has these sort of like release processes where like best practices are sort of like rolling out",
    "start": "2286540",
    "end": "2292359"
  },
  {
    "text": "over a week rolling out Zone by Zone and like lots of like availability safety",
    "start": "2292359",
    "end": "2297460"
  },
  {
    "text": "built into things so that if we if there's something wrong in that release then we affect a small number of people",
    "start": "2297460",
    "end": "2303880"
  },
  {
    "text": "uh to start with and we hopefully notice and then we can roll it back quickly and so you went into really urgent fix then",
    "start": "2303880",
    "end": "2311740"
  },
  {
    "text": "you're talking about a different different playing field and so like the security gets dialed up and the availability gets dialed down and sort",
    "start": "2311740",
    "end": "2318040"
  },
  {
    "text": "of like how how far you dial each of those dials is sort of depends on how bad it is but if it's really bad then",
    "start": "2318040",
    "end": "2323500"
  },
  {
    "text": "you go really fast and you hope you don't break stuff yeah can uh maybe I'll add a little there so it I guess if",
    "start": "2323500",
    "end": "2330040"
  },
  {
    "text": "you're familiar with the the idea of uh ssvc or or stakeholder specific",
    "start": "2330040",
    "end": "2335560"
  },
  {
    "text": "vulnerability categorization we we think of it kind of like that internally that some things",
    "start": "2335560",
    "end": "2341380"
  },
  {
    "text": "require an emergency patch some require an expedited rollout some can just roll out as usual",
    "start": "2341380",
    "end": "2347619"
  },
  {
    "text": "um so we sort of map it to those those outcomes and I'd say what we're talking about here is sort of the the happy path",
    "start": "2347619",
    "end": "2353320"
  },
  {
    "text": "and we've we sort of try to optimize that happy path and we found that it also indirectly helps when we have like",
    "start": "2353320",
    "end": "2360339"
  },
  {
    "text": "a break glass situation because those tools and presses are in place it's just a matter of you know making the the",
    "start": "2360339",
    "end": "2366400"
  },
  {
    "text": "deployment take one day instead of seven okay that sort of thing",
    "start": "2366400",
    "end": "2371760"
  },
  {
    "text": "automated",
    "start": "2374320",
    "end": "2377099"
  },
  {
    "text": "oh yeah that's interesting so the question is how often does automated patching break test or or break prod or",
    "start": "2380200",
    "end": "2386980"
  },
  {
    "text": "whatever like I I think the for us like we mostly go and we're like",
    "start": "2386980",
    "end": "2392020"
  },
  {
    "text": "on these really tiny containers so we don't like have a whole ton of like dependencies so we're mostly talking about like go dependencies breaking us",
    "start": "2392020",
    "end": "2398140"
  },
  {
    "text": "uh and so there have been a couple of cases where a go-minded version changed",
    "start": "2398140",
    "end": "2403240"
  },
  {
    "text": "changed some things and so we're like pretty careful about how we like look after good minor version changes there's",
    "start": "2403240",
    "end": "2410320"
  },
  {
    "text": "also implications for that inside of kubernetes uh We've recently Jordan's been doing a whole ton of work to move",
    "start": "2410320",
    "end": "2417280"
  },
  {
    "text": "kubernetes onto onto modern versions of go and do that within a kubernetes minor release and that's a bit uh sort of I",
    "start": "2417280",
    "end": "2424599"
  },
  {
    "text": "guess more risky than what we've been doing before which was we'd only move kubernetes upper version only move up a",
    "start": "2424599",
    "end": "2431260"
  },
  {
    "text": "Go version when kubernetes moved up a minor version as well but that's not really keeping patch Pace with the with",
    "start": "2431260",
    "end": "2437740"
  },
  {
    "text": "the the patches that we need and so like in our experience I like we haven't had",
    "start": "2437740",
    "end": "2444040"
  },
  {
    "text": "a time like that I can't think of a like automated patching time where we had an outage or anything yeah the majority",
    "start": "2444040",
    "end": "2449859"
  },
  {
    "text": "here like Greg said these these go patches um it typically when we update a container it's just a matter of moving",
    "start": "2449859",
    "end": "2456460"
  },
  {
    "text": "to a new base image that has slightly newer system packages maybe running an apt update",
    "start": "2456460",
    "end": "2462280"
  },
  {
    "text": "Etc and those are pretty well vetted by the vendor uh the the only cases I can remember is when we moved like an image",
    "start": "2462280",
    "end": "2469900"
  },
  {
    "text": "an entire you know OS minor version and there were there were differences and a specific package and then they're caught",
    "start": "2469900",
    "end": "2476980"
  },
  {
    "text": "fairly early but it I'd say to my knowledge I can remember two instances in my time my time at Google",
    "start": "2476980",
    "end": "2483099"
  },
  {
    "text": "so fairly infrequent thank you",
    "start": "2483099",
    "end": "2488940"
  },
  {
    "text": "okay yeah all right thank you everybody [Applause]",
    "start": "2490180",
    "end": "2498530"
  }
]