[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "all right welcome to my session on building a manage database service using",
    "start": "179",
    "end": "5640"
  },
  {
    "text": "kubernetes operators before getting into the weeds I want to start off explaining",
    "start": "5640",
    "end": "11160"
  },
  {
    "text": "who I am and why you should listen to me so uh my name is Jimmy zilinski I'm the",
    "start": "11160",
    "end": "16500"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "founder of a company called auth said at offset we build a database called spice DB",
    "start": "16500",
    "end": "22380"
  },
  {
    "text": "and what spice DB does is it stores your authorization data so when you build a permission system for your applications",
    "start": "22380",
    "end": "29160"
  },
  {
    "text": "um eventually you hit a couple different types of problems maybe you want to make Dynamic changes to the system without",
    "start": "29160",
    "end": "35880"
  },
  {
    "text": "changing code in various places or maybe you have multiple applications that need",
    "start": "35880",
    "end": "41520"
  },
  {
    "text": "to share the same data in order to determine and access decision in your code and that's that's the type of",
    "start": "41520",
    "end": "47700"
  },
  {
    "text": "scenario in which you would reach out for an authorization specific database",
    "start": "47700",
    "end": "52820"
  },
  {
    "text": "so my background is in product engineering and operations so I've worked as a product manager in the past",
    "start": "52820",
    "end": "59219"
  },
  {
    "text": "I've worked as a software engineer building a distributed system projects and then I've also worked in operations",
    "start": "59219",
    "end": "64920"
  },
  {
    "text": "running those distributed systems in production so despite my background being in",
    "start": "64920",
    "end": "71640"
  },
  {
    "text": "product I still write code every day and carry a page over the services that I build",
    "start": "71640",
    "end": "77340"
  },
  {
    "text": "prior to founding onset I worked at a company called coreless which got acquired by a red hat",
    "start": "77340",
    "end": "83040"
  },
  {
    "text": "um and at coralesce I actually co-created a cncf project called the",
    "start": "83040",
    "end": "88619"
  },
  {
    "text": "operator framework alongside some other members now members of the LCD team and what the operator",
    "start": "88619",
    "end": "96540"
  },
  {
    "text": "framework lets folks do is basically more easily build operators so they can",
    "start": "96540",
    "end": "102720"
  },
  {
    "text": "customize kubernetes and extend it in ways that make sense for running their their domains",
    "start": "102720",
    "end": "109579"
  },
  {
    "text": "so as a part of coreos I was also a maintainer of oci which is the container",
    "start": "109579",
    "end": "115680"
  },
  {
    "text": "specification and I've done a bunch of work in the container registry space over the years so uh that's a bit about",
    "start": "115680",
    "end": "123780"
  },
  {
    "text": "my background all right um to level set the for the talk",
    "start": "123780",
    "end": "131160"
  },
  {
    "start": "126000",
    "end": "126000"
  },
  {
    "text": "um before anything I always like to kind of Level Playing Field make sure that everyone is using or understands the",
    "start": "131160",
    "end": "137580"
  },
  {
    "text": "same terminology or what we're talking about before diving right in um",
    "start": "137580",
    "end": "142920"
  },
  {
    "text": "so uh to be able to even discuss this topic we have to kind of cover two major",
    "start": "142920",
    "end": "150440"
  },
  {
    "text": "subjects right the first is what's a managed database our first in the second is what are kubernetes operators",
    "start": "150440",
    "end": "157260"
  },
  {
    "text": "um so manage database service is going to be pretty much uh you Outsourcing the",
    "start": "157260",
    "end": "164040"
  },
  {
    "text": "operational side of a database to a particular provider so instead of you",
    "start": "164040",
    "end": "170040"
  },
  {
    "text": "spinning up a database and managing on top of your own Hardware or even Cloud Hardware this is going to be someone",
    "start": "170040",
    "end": "176640"
  },
  {
    "text": "else doing that for you I'm purely giving you the details you need for your application to connect to that database",
    "start": "176640",
    "end": "183840"
  },
  {
    "text": "and then they're basically out of the out of the way for that so you don't",
    "start": "183840",
    "end": "189660"
  },
  {
    "text": "have to maintain a pager or anything like that to make sure that the database is operational and able to serve traffic",
    "start": "189660",
    "end": "196700"
  },
  {
    "text": "there's kind of two different types of providers that you can Outsource to",
    "start": "196700",
    "end": "202500"
  },
  {
    "text": "there are Cloud providers that obviously have the expertise in running software",
    "start": "202500",
    "end": "208200"
  },
  {
    "text": "on top of Cloud environments so examples of that would be Amazon RDS and uh Google Cloud platforms Cloud SQL",
    "start": "208200",
    "end": "216800"
  },
  {
    "text": "these providers offer the typical relational databases but they also have",
    "start": "216800",
    "end": "223680"
  },
  {
    "text": "Individual Services for more specialized databases the other type of expert that you can",
    "start": "223680",
    "end": "229620"
  },
  {
    "text": "Outsource this to are the actual database providers themselves so folks like cockroach Labs so on cockroachdb",
    "start": "229620",
    "end": "236900"
  },
  {
    "text": "dedicated and my own company outside selling supposed to be dedicated but",
    "start": "236900",
    "end": "242159"
  },
  {
    "text": "there are plenty of other database providers in the space that also do similar elasticsearch and redis also",
    "start": "242159",
    "end": "248459"
  },
  {
    "text": "come to mind as kind of examples of these database provider experts that",
    "start": "248459",
    "end": "253860"
  },
  {
    "text": "offer these types of services all right so then what are kubernetes",
    "start": "253860",
    "end": "259380"
  },
  {
    "text": "operators so operators are custom controllers for kubernetes that encode",
    "start": "259380",
    "end": "264540"
  },
  {
    "text": "application specific logic so that basically means extending the kubernetes API and teaching it about",
    "start": "264540",
    "end": "272000"
  },
  {
    "text": "effectively new Concepts that are specific to your domain the uh point to",
    "start": "272000",
    "end": "279660"
  },
  {
    "text": "all of this is to basically effectively improve how kubernetes is able to handle",
    "start": "279660",
    "end": "286740"
  },
  {
    "text": "running that application but even more greater concept is actually encoding",
    "start": "286740",
    "end": "293580"
  },
  {
    "text": "your domain into kubernetes so that the kubernetes control plane actually becomes the central interface for",
    "start": "293580",
    "end": "301320"
  },
  {
    "text": "everything it becomes the source of truth and you can always use the",
    "start": "301320",
    "end": "307199"
  },
  {
    "text": "standard tools like your your dashboard or Coupe control to query that and understand what is running it in",
    "start": "307199",
    "end": "313680"
  },
  {
    "text": "production all right so without further Ado",
    "start": "313680",
    "end": "320040"
  },
  {
    "text": "um I'm going to talk about my anecdotal experience building supposed to be dedicated the reason why I'm going to",
    "start": "320040",
    "end": "325500"
  },
  {
    "text": "use this is not only familiarity but also because we've actually built the service semi-recently there are a lot of",
    "start": "325500",
    "end": "331680"
  },
  {
    "text": "other managed database services that are probably built on top of kubernetes but because of the recency of this uh I",
    "start": "331680",
    "end": "339539"
  },
  {
    "text": "think it's probably more applicable to someone looking to build a similar service today if they're trying to do",
    "start": "339539",
    "end": "345120"
  },
  {
    "text": "that for building their own product or just building a platform uh engineering team internally at their business",
    "start": "345120",
    "end": "353220"
  },
  {
    "text": "so uh the rest of the talk is kind of be basically me describing the system we've built kind of like this the decision",
    "start": "353220",
    "end": "359759"
  },
  {
    "text": "making process we went through and uh kind of the way we've kind of divided things up and how we think about the",
    "start": "359759",
    "end": "367080"
  },
  {
    "text": "different problems that we had to solve so at a 10 000 foot view",
    "start": "367080",
    "end": "372360"
  },
  {
    "start": "370000",
    "end": "370000"
  },
  {
    "text": "um we can kind of break down this problem into three major phases um provisioning runtime and then the day",
    "start": "372360",
    "end": "378300"
  },
  {
    "text": "two operations uh the provisioning side is going to be kind of how we create the",
    "start": "378300",
    "end": "383880"
  },
  {
    "text": "customer environments um so that means everything related to creating and updating clusters and what",
    "start": "383880",
    "end": "390840"
  },
  {
    "text": "lives on those clusters and the finer details to that is actually how you decide to split up and",
    "start": "390840",
    "end": "399060"
  },
  {
    "text": "differentiate between what is what defines the cluster and what defines the configuration that lives on top of the",
    "start": "399060",
    "end": "405180"
  },
  {
    "text": "cluster this is actually pretty subtle when you're trying to understand what things",
    "start": "405180",
    "end": "411479"
  },
  {
    "text": "should need to be updated with the life cycle of kubernetes itself versus things that can be iterated on with changes to",
    "start": "411479",
    "end": "417960"
  },
  {
    "text": "the application so that that's one of the subtle aspects another big one is how you're going to",
    "start": "417960",
    "end": "425100"
  },
  {
    "text": "promote changes to these different customer environments um how are you going to roll out kubernetes updates or any changes to the",
    "start": "425100",
    "end": "432960"
  },
  {
    "text": "aforementioned cluster configuration and how are you going to do that in a way",
    "start": "432960",
    "end": "438600"
  },
  {
    "text": "that um can be Progressive and so that your customers if whether they have",
    "start": "438600",
    "end": "444660"
  },
  {
    "text": "maintenance windows or they're very sensitive to updates if you can get the updates at the regular Cadence that",
    "start": "444660",
    "end": "449880"
  },
  {
    "text": "they're expecting um and we move on to the runtime phase the runtime phase is about",
    "start": "449880",
    "end": "456560"
  },
  {
    "text": "basically what things have to be running uh live when customers are using these",
    "start": "456560",
    "end": "462720"
  },
  {
    "text": "systems this is where the managed database as a service kind of",
    "start": "462720",
    "end": "467940"
  },
  {
    "text": "differentiates from a lot of other workloads that you might be running on kubernetes because the customers are",
    "start": "467940",
    "end": "473819"
  },
  {
    "text": "actually going to be modifying the the cluster itself in real time and uh that",
    "start": "473819",
    "end": "479759"
  },
  {
    "text": "basically means that we need to be able to not only manage our own configuration but also be able to respond to end users",
    "start": "479759",
    "end": "487500"
  },
  {
    "text": "deciding they want to take operations like scaling their database cluster up or down",
    "start": "487500",
    "end": "493199"
  },
  {
    "text": "the other unique kind of problem in this space is going to be handling the availability and performance",
    "start": "493199",
    "end": "499080"
  },
  {
    "text": "requirements of running a database databases are typically very performance and latency sensitive workloads and",
    "start": "499080",
    "end": "505979"
  },
  {
    "text": "they're also stateful workloads so all these things kind of complicate the actual production runtime of of the",
    "start": "505979",
    "end": "513719"
  },
  {
    "text": "system and basically being able to run a service in",
    "start": "513719",
    "end": "519180"
  },
  {
    "text": "a way where when different events like scaling up or scaling down happens or",
    "start": "519180",
    "end": "525480"
  },
  {
    "text": "you lose a node in kubernetes uh to be able to handle that in such a way that you don't lose any performance or drop",
    "start": "525480",
    "end": "532620"
  },
  {
    "text": "any requests is very tricky and something that every database of the",
    "start": "532620",
    "end": "537959"
  },
  {
    "text": "service is going to need to manage because you can't necessarily make changes in the application code that is",
    "start": "537959",
    "end": "545940"
  },
  {
    "text": "talking to your database instead you need to make the the actual runtime as robust as possible because you don't",
    "start": "545940",
    "end": "552540"
  },
  {
    "text": "have any control of the application code connecting to the databases you're managing",
    "start": "552540",
    "end": "558480"
  },
  {
    "text": "finally we have the day two operations which are basically the the actual operations that our sres are going to be",
    "start": "558480",
    "end": "564240"
  },
  {
    "text": "managing so this has to do with basically handling backups specifically",
    "start": "564240",
    "end": "569760"
  },
  {
    "text": "as I said customers can modify these environments so that means we not only have to be able to reproduce our",
    "start": "569760",
    "end": "575760"
  },
  {
    "text": "clusters but also be able to reproduce the state that the customers changed and then we also have to power our own",
    "start": "575760",
    "end": "583140"
  },
  {
    "text": "operational workload so that means we need to be able to aggregate metrics",
    "start": "583140",
    "end": "588240"
  },
  {
    "text": "across customers who need to understand the health and state of the customers page are engineers and things like that",
    "start": "588240",
    "end": "593339"
  },
  {
    "text": "when something is going wrong on a customer environment [Music]",
    "start": "593339",
    "end": "598860"
  },
  {
    "start": "598000",
    "end": "598000"
  },
  {
    "text": "so I'm going to dive deeper into provisioning now um I'm going to list out some of the Technologies and some of the Core",
    "start": "598860",
    "end": "604500"
  },
  {
    "text": "Concepts that we've chosen to go with I would say a lot of these different Technologies are personal choice I'm not",
    "start": "604500",
    "end": "611459"
  },
  {
    "text": "saying you should choose one over the other um but I'm going to include why we ended up",
    "start": "611459",
    "end": "616980"
  },
  {
    "text": "with the ones that we have but these reasons are kind of organization specific and if you have a company for",
    "start": "616980",
    "end": "623580"
  },
  {
    "text": "example that has a ton of terraform expertise go ahead use terraform I think that's",
    "start": "623580",
    "end": "629399"
  },
  {
    "text": "going to be a better choice for you if uh if that's what you have the expertise in at your company but for us for",
    "start": "629399",
    "end": "637019"
  },
  {
    "text": "example um we picked palumi um we're very comfortable writing go code and we actually wanted to build",
    "start": "637019",
    "end": "643680"
  },
  {
    "text": "ultimately one binary that is kind of our infra program that can manage all",
    "start": "643680",
    "end": "649320"
  },
  {
    "text": "kinds of different things so palumi just gets embedded into that process so we actually have commands for provisioning",
    "start": "649320",
    "end": "655440"
  },
  {
    "text": "things but we have other commands for for accessing different systems that would be a part of our operations team",
    "start": "655440",
    "end": "661620"
  },
  {
    "text": "uh basically everyday work so uh that's why we ended up picking",
    "start": "661620",
    "end": "667140"
  },
  {
    "text": "palumi um for actually reconciling configuration on a cluster we use arcocd",
    "start": "667140",
    "end": "673860"
  },
  {
    "text": "um flux is another example of a cncf project that also kind of does this",
    "start": "673860",
    "end": "680040"
  },
  {
    "text": "continuous deployment um we ultimately aligned it on Argo specifically because it has a nice web",
    "start": "680040",
    "end": "686040"
  },
  {
    "text": "UI for checking the health of all the environments but also it has kind of",
    "start": "686040",
    "end": "691800"
  },
  {
    "text": "nice functionality for actually applying the changes like dry runs and pruning and you can actually write Lua to to",
    "start": "691800",
    "end": "699600"
  },
  {
    "text": "kind of extend Argo in some scenarios where we specifically for when you're",
    "start": "699600",
    "end": "705420"
  },
  {
    "text": "creating operators um you're going to create custom kind of definitions of healthiness in the status",
    "start": "705420",
    "end": "711420"
  },
  {
    "text": "fields and Argo can be extended with Lua to actually understand those to know whether a a custom resource that you've",
    "start": "711420",
    "end": "718260"
  },
  {
    "text": "actually created for your operator is healthy or not um so that's super useful functionality",
    "start": "718260",
    "end": "723660"
  },
  {
    "text": "there for the actual configuration we use on the cluster itself we use customize we previously used queue a lot",
    "start": "723660",
    "end": "731339"
  },
  {
    "text": "but we ultimately migrated to customize because it was really easy to structure integrates directly with Coupe cuddle so",
    "start": "731339",
    "end": "738839"
  },
  {
    "text": "our Engineers have to install any additional tooling um it's way easier to onboard Engineers",
    "start": "738839",
    "end": "744660"
  },
  {
    "text": "because if you understand kubernetes you probably a kubernetes yaml at least manifests you are going to understand",
    "start": "744660",
    "end": "750240"
  },
  {
    "text": "using uh customize to some degree and it lets us actually really reuse a lot of",
    "start": "750240",
    "end": "756540"
  },
  {
    "text": "tools off the shelf um because you can kind of point to any manifest in a git repository and use",
    "start": "756540",
    "end": "763680"
  },
  {
    "text": "that as a reference and kind of extend that using customize so as we adopt more",
    "start": "763680",
    "end": "769320"
  },
  {
    "text": "and more of the kind of standard Community tools we can kind of just point customize to those tools and get",
    "start": "769320",
    "end": "775139"
  },
  {
    "text": "them vendored almost for free or with very little notification",
    "start": "775139",
    "end": "780899"
  },
  {
    "text": "um and yeah if you're using Q you can have to do all the legwork of kind of um importing and transpiling basically a",
    "start": "780899",
    "end": "789300"
  },
  {
    "text": "yaml into queue and you're kind of on your own for a lot of uh a lot of the tooling and structure",
    "start": "789300",
    "end": "795360"
  },
  {
    "text": "um but I imagine some of that will change over time so uh it's not necessarily kind of dry if you're",
    "start": "795360",
    "end": "800579"
  },
  {
    "text": "watching this video six months from now maybe the the state of the world for Q has improved dramatically so",
    "start": "800579",
    "end": "806880"
  },
  {
    "text": "uh finally we also use GitHub actions and we use GitHub actions uh mostly because we can automate a bunch of the",
    "start": "806880",
    "end": "814980"
  },
  {
    "text": "GitHub apis for opening and emerging pull requests and that ties very much so",
    "start": "814980",
    "end": "820860"
  },
  {
    "text": "into the concepts I want to talk about um the high level Concepts that we have are largely around kind of our promotion",
    "start": "820860",
    "end": "827700"
  },
  {
    "text": "process which we call the ring model the ring model is specifically about uh basically",
    "start": "827700",
    "end": "835200"
  },
  {
    "text": "bucketing customers into groups of stability so that we can slowly roll out",
    "start": "835200",
    "end": "841200"
  },
  {
    "text": "changes uh one phase at a time to that bucket of customers so for example what we actually do is we",
    "start": "841200",
    "end": "850380"
  },
  {
    "text": "have a staging instance and the staging instance gets every change pushed to it as part of a continuous deployment and",
    "start": "850380",
    "end": "856800"
  },
  {
    "text": "then when things look good we promote that to what we call ring zero and ring",
    "start": "856800",
    "end": "863399"
  },
  {
    "text": "zero as other testing environments whether it's doing performance testing or just staging environments at all said",
    "start": "863399",
    "end": "870660"
  },
  {
    "text": "then what uh what happens is once that kind of passes the Q8 there then we",
    "start": "870660",
    "end": "875760"
  },
  {
    "text": "actually run it to ring one which would be our rapid kind of released phase so customers that have adopted into getting",
    "start": "875760",
    "end": "882360"
  },
  {
    "text": "updates sooner but potentially less stable releases and then kind of so on",
    "start": "882360",
    "end": "889019"
  },
  {
    "text": "and so forth we promote to ring two which is more stable and then ring three which is more stable",
    "start": "889019",
    "end": "894360"
  },
  {
    "text": "Etc so that's kind of how we structure How We Roll things out",
    "start": "894360",
    "end": "899420"
  },
  {
    "text": "this was inspired by the internal model used at GitHub we have some X hubbers at",
    "start": "899420",
    "end": "906240"
  },
  {
    "text": "offset and that actually inspired us greatly to to solve this problem this",
    "start": "906240",
    "end": "911279"
  },
  {
    "text": "way so we know it scales because it's being used by big companies like Microsoft so",
    "start": "911279",
    "end": "917579"
  },
  {
    "text": "and finally we have uh kind of get Ops but githubs by Bots um is kind of how I want to talk about",
    "start": "917579",
    "end": "923399"
  },
  {
    "text": "it because while githubs was great um making changes in some of these",
    "start": "923399",
    "end": "928920"
  },
  {
    "text": "repositories can be very verbose and error prone it can take a really long time so what we actually do is we have",
    "start": "928920",
    "end": "935100"
  },
  {
    "text": "automations all around it so you can manually kind of Click from a drop down to say I want to promote this ring to",
    "start": "935100",
    "end": "942420"
  },
  {
    "text": "this ring um and then box handle the rest so you get kind of like the the benefits of",
    "start": "942420",
    "end": "949260"
  },
  {
    "text": "having everything checked in to get and if you had to manually override anything you could but also a lot of the error",
    "start": "949260",
    "end": "955620"
  },
  {
    "text": "prone side of copying and pasting specific versions into specific places all automated away so in the general",
    "start": "955620",
    "end": "962040"
  },
  {
    "text": "case you pretty much don't have to open your Editor to to make the changes",
    "start": "962040",
    "end": "967459"
  },
  {
    "text": "that you want to see propagated to the system",
    "start": "967459",
    "end": "972860"
  },
  {
    "text": "so here is a drawing of our customized configuration we kind of split it into",
    "start": "973920",
    "end": "980579"
  },
  {
    "text": "three top level folders We have the bases the features and the overlays if you're familiar with customized overlays",
    "start": "980579",
    "end": "987420"
  },
  {
    "text": "are typically used for the kind of end results that's going to be a renderable",
    "start": "987420",
    "end": "993839"
  },
  {
    "text": "thing that you can actually apply to a cluster so we have a Dev one or actually",
    "start": "993839",
    "end": "1001639"
  },
  {
    "text": "variations of Dev ones and then we have kind of customer specific ones the customer specific ones we keep in a",
    "start": "1001639",
    "end": "1008000"
  },
  {
    "text": "separate repository the info repository that tracks all the customer environments and the Devlin lives in our",
    "start": "1008000",
    "end": "1013040"
  },
  {
    "text": "mono repo alongside the configuration itself um but then overlays are composed of at",
    "start": "1013040",
    "end": "1019820"
  },
  {
    "text": "least one or more base and then a set of features so examples of features are",
    "start": "1019820",
    "end": "1025160"
  },
  {
    "text": "like postgres database or ECR for getting your your images on this cloud",
    "start": "1025160",
    "end": "1031040"
  },
  {
    "text": "provider or GCR if you're using Google Cloud so we actually break everything down into these different features that",
    "start": "1031040",
    "end": "1038000"
  },
  {
    "text": "you can then compose together um and to actually build a working system",
    "start": "1038000",
    "end": "1044058"
  },
  {
    "text": "uh and then the bases are kind of like the base layout for a cluster that",
    "start": "1044059",
    "end": "1049940"
  },
  {
    "text": "installs the things that we want to assume are always going to be there so in the the actual like regular cluster",
    "start": "1049940",
    "end": "1057020"
  },
  {
    "text": "base we have um basically the monitoring stack that we want to use to deploy to absolutely",
    "start": "1057020",
    "end": "1063320"
  },
  {
    "text": "every cluster to make sure we kind of have a baseline of understanding the health of every cluster that is not",
    "start": "1063320",
    "end": "1069440"
  },
  {
    "text": "specific to any workload that we deploy to it this gets used both on a an info cluster that we run a centralized for",
    "start": "1069440",
    "end": "1076580"
  },
  {
    "text": "our infra like operations team but also then on all the customers as well but",
    "start": "1076580",
    "end": "1082580"
  },
  {
    "text": "then we also have this Dev base and this Dev base is basically filling the gap between something like a Docker desktop",
    "start": "1082580",
    "end": "1089179"
  },
  {
    "text": "kubernetes or kind and making that exactly similar to what we get when we",
    "start": "1089179",
    "end": "1095179"
  },
  {
    "text": "run palumi to generate a cluster on a cloud provider for an actual production",
    "start": "1095179",
    "end": "1100820"
  },
  {
    "text": "environment so that kind of fills the gaps there so that um the Clusters look exactly the same they have the same",
    "start": "1100820",
    "end": "1107059"
  },
  {
    "text": "starting base then we apply the base and then we apply whatever features are specific to that that environment",
    "start": "1107059",
    "end": "1114760"
  },
  {
    "text": "um so here is kind of the architecture of the git Ops pipeline in our monorepo",
    "start": "1114799",
    "end": "1120980"
  },
  {
    "text": "as I said we have a configuration that lives in there that makes it so developers can iterate on configuration",
    "start": "1120980",
    "end": "1127880"
  },
  {
    "text": "and also the code for the different projects and kind of spin that Stack Up locally and running on their machine and",
    "start": "1127880",
    "end": "1134419"
  },
  {
    "text": "test everything out and then when that looks good that gets committed to a monorepo and then what happens is we",
    "start": "1134419",
    "end": "1139820"
  },
  {
    "text": "have this other info repo which tracks customer environments and customer environments are actually",
    "start": "1139820",
    "end": "1145900"
  },
  {
    "text": "organized into rings and then those Rings reference a specific commit Sha of",
    "start": "1145900",
    "end": "1152419"
  },
  {
    "text": "the mono repo so that you can actually point it to a particular snapshot of the configuration of the monorail at a point",
    "start": "1152419",
    "end": "1158720"
  },
  {
    "text": "in time so that's how we kind of get uh basically all the version tracking and",
    "start": "1158720",
    "end": "1164960"
  },
  {
    "text": "the ability for us to promote different versions of the configuration to different customer environments inside",
    "start": "1164960",
    "end": "1171200"
  },
  {
    "text": "of that infra repo we also have the binary that manages palumi and that's",
    "start": "1171200",
    "end": "1177440"
  },
  {
    "text": "what's going to provision the individual clusters we have configuration files for each each customer environment and there",
    "start": "1177440",
    "end": "1184700"
  },
  {
    "text": "as well so that's kind of the the Central Central source of what is represented in",
    "start": "1184700",
    "end": "1192919"
  },
  {
    "text": "production every cluster is also deployed into its own cloud provider account so if you're running on Amazon",
    "start": "1192919",
    "end": "1199340"
  },
  {
    "text": "each customer runs in an AWS account that's individual to that that",
    "start": "1199340",
    "end": "1205220"
  },
  {
    "text": "particular customer that's just the level of isolation we've chosen for the system",
    "start": "1205220",
    "end": "1210559"
  },
  {
    "text": "um but that's not necessarily A Hard requirement for for every managed database as a service we're just a",
    "start": "1210559",
    "end": "1217640"
  },
  {
    "text": "security product so we take kind of isolation a bit more seriously than a lot of other people",
    "start": "1217640",
    "end": "1222740"
  },
  {
    "text": "um so then finally we have our centralized infra kubernetes cluster this is what",
    "start": "1222740",
    "end": "1228140"
  },
  {
    "text": "runs Argo it runs Thanos so that we can actually collect metrics and and query",
    "start": "1228140",
    "end": "1233539"
  },
  {
    "text": "and understand the runtime of our customer environments but what Arco is going to be doing is it's going to be pulling the infrar repo and asserting",
    "start": "1233539",
    "end": "1240559"
  },
  {
    "text": "that each of the customer environments is synchronized to the proper state that the customer environment is configured",
    "start": "1240559",
    "end": "1246679"
  },
  {
    "text": "for so it does make sure that if there's anyone that logs into a machine and they",
    "start": "1246679",
    "end": "1253700"
  },
  {
    "text": "are debugging something if they skew the configuration it's going to be restored eventually by Argo that way even if a",
    "start": "1253700",
    "end": "1262160"
  },
  {
    "text": "machine gets get compromised we kind of have something that's going to reset the",
    "start": "1262160",
    "end": "1268220"
  },
  {
    "text": "cluster and basically make sure that nothing is nothing is the way it shouldn't be",
    "start": "1268220",
    "end": "1275780"
  },
  {
    "text": "um so that's our high level of uh kind of the git Ops workflow we have",
    "start": "1275780",
    "end": "1282520"
  },
  {
    "start": "1282000",
    "end": "1282000"
  },
  {
    "text": "time to move on to the runtime environment in the runtime we have built two custom",
    "start": "1282520",
    "end": "1289940"
  },
  {
    "text": "operators so this is going to be the kind of the with kubernetes operators portion of",
    "start": "1289940",
    "end": "1295640"
  },
  {
    "text": "the talk which is kind of the meat and potatoes so we have decided to split uh",
    "start": "1295640",
    "end": "1301820"
  },
  {
    "text": "basically our system into two different operators the first operator is open source and it",
    "start": "1301820",
    "end": "1309080"
  },
  {
    "text": "is basically all of the configuration and operational know-how to automate",
    "start": "1309080",
    "end": "1314900"
  },
  {
    "text": "running Spice TV the database itself we make those open source because we",
    "start": "1314900",
    "end": "1319940"
  },
  {
    "text": "want our customers or any open source users to also be able to operationalize",
    "start": "1319940",
    "end": "1324980"
  },
  {
    "text": "and runs by Stevie just as good as we can um so this includes scaling space DB",
    "start": "1324980",
    "end": "1331100"
  },
  {
    "text": "making sure that it doesn't drop traffic making sure Space TV knows how to basically self-cluster it handles",
    "start": "1331100",
    "end": "1338679"
  },
  {
    "text": "running migrations of the data changes across versions it makes sure that it",
    "start": "1338679",
    "end": "1345440"
  },
  {
    "text": "has an update graph and make sure that you go from a supported version to a supported version and basically assures",
    "start": "1345440",
    "end": "1352460"
  },
  {
    "text": "you that you have zero downtime as you go through the upgrade process so this",
    "start": "1352460",
    "end": "1357559"
  },
  {
    "text": "kind of logic all lives inside the space DB operator and then what we have is is the auth Z",
    "start": "1357559",
    "end": "1364400"
  },
  {
    "text": "operator which is our proprietary operator and this includes automations that largely",
    "start": "1364400",
    "end": "1371980"
  },
  {
    "text": "are reliant on assumptions about how we've laid out our clusters so if the",
    "start": "1371980",
    "end": "1377780"
  },
  {
    "text": "functionality is tightly coupled to opinions and decisions for how to run a",
    "start": "1377780",
    "end": "1383360"
  },
  {
    "text": "kubernetes cluster then we keep it in the proprietary one so uh purely because it's not applicable",
    "start": "1383360",
    "end": "1390620"
  },
  {
    "text": "to anyone else's deployment it's only applicable to ours so that's kind of the decision-making",
    "start": "1390620",
    "end": "1396620"
  },
  {
    "text": "framework for us on where we cut cut things off on the open source and proprietary um but at the end of the day the users",
    "start": "1396620",
    "end": "1404419"
  },
  {
    "text": "they get this next.js front end that we've built and that's the customer facing interface but it's actually an",
    "start": "1404419",
    "end": "1410419"
  },
  {
    "text": "interface to kubernetes so what we're actually doing is making it so when a user logs into the the",
    "start": "1410419",
    "end": "1417980"
  },
  {
    "text": "dashboard for a space to be dedicated they're actually seeing a view of",
    "start": "1417980",
    "end": "1423500"
  },
  {
    "text": "kubernetes and the resources that live on the cluster and when they say for",
    "start": "1423500",
    "end": "1428539"
  },
  {
    "text": "example choose to create a new space DB cluster they're actually talking to a JavaScript",
    "start": "1428539",
    "end": "1436340"
  },
  {
    "text": "application that is going to talk to the kubernetes API and create custom",
    "start": "1436340",
    "end": "1441679"
  },
  {
    "text": "resources and that is how the core of everything is functioning it's all using kubernetes",
    "start": "1441679",
    "end": "1448760"
  },
  {
    "text": "as the source of Truth and then of course we kind of have all",
    "start": "1448760",
    "end": "1453799"
  },
  {
    "text": "the additional tooling that compose our kind of opinions for how to run",
    "start": "1453799",
    "end": "1460940"
  },
  {
    "text": "kubernetes that's using things like Contour or insert manager",
    "start": "1460940",
    "end": "1466520"
  },
  {
    "text": "um and like the Prometheus operator I think things like these",
    "start": "1466520",
    "end": "1471980"
  },
  {
    "text": "so at the core of the concepts of our runtime include basically centralizing",
    "start": "1471980",
    "end": "1477140"
  },
  {
    "text": "everything into the kubernetes control plane you want to use that as your source of Truth it makes it a convenient API",
    "start": "1477140",
    "end": "1483140"
  },
  {
    "text": "um for for managing all these things for us our data like the actual control plane that's being used for our",
    "start": "1483140",
    "end": "1490039"
  },
  {
    "text": "customers to make changes is one in the same with the control plane that our operations team is managing so that",
    "start": "1490039",
    "end": "1497659"
  },
  {
    "text": "gives us a convenient way to to basically interact with the system we don't have to build some kind of admin",
    "start": "1497659",
    "end": "1503480"
  },
  {
    "text": "interface into the dashboards that we can kind of get our operations team access to the customer control plane now",
    "start": "1503480",
    "end": "1512179"
  },
  {
    "text": "there it's just one in the same control plane for us so that's where a lot of the benefits come from but also the the",
    "start": "1512179",
    "end": "1519919"
  },
  {
    "text": "power of the operators being that the customer driven changes",
    "start": "1519919",
    "end": "1525080"
  },
  {
    "text": "um actually live also in the cluster so this is what's enabling the fact that a customer can log in start making changes",
    "start": "1525080",
    "end": "1531320"
  },
  {
    "text": "to the infrastructure and those can apply immediately because all those automations are not a living operator",
    "start": "1531320",
    "end": "1537799"
  },
  {
    "text": "that has to get paged and go to the cluster and make a change to it instead it is a kubernetes operator that's",
    "start": "1537799",
    "end": "1543559"
  },
  {
    "text": "running in the cluster that can manipulate the desired state of the deployment and just run with it",
    "start": "1543559",
    "end": "1550778"
  },
  {
    "text": "so with that we have basically the namespace layout of one of our clusters",
    "start": "1551140",
    "end": "1559059"
  },
  {
    "text": "some of these namespaces get applied to absolutely every cluster and some of these namespaces are exclusive to a",
    "start": "1560120",
    "end": "1566480"
  },
  {
    "text": "particular cluster so um the awesome monitoring namespace for example gets deployed to absolutely all",
    "start": "1566480",
    "end": "1572360"
  },
  {
    "text": "clusters that we run this includes kind of like the all the infrastructure we",
    "start": "1572360",
    "end": "1578900"
  },
  {
    "text": "need for paging alerting doing metrics tracing applications that",
    "start": "1578900",
    "end": "1585320"
  },
  {
    "text": "are running on the on the cluster base and this goes all the way to non kind of",
    "start": "1585320",
    "end": "1591919"
  },
  {
    "text": "spice DB customer clusters this also runs for example in our infra cluster so that we can make sure that the info",
    "start": "1591919",
    "end": "1597919"
  },
  {
    "text": "cluster is running and healthy even though the infra cluster is only running our internal tooling and not spiced DB",
    "start": "1597919",
    "end": "1603679"
  },
  {
    "text": "workloads so this is fully generic and can be reused across the company",
    "start": "1603679",
    "end": "1610520"
  },
  {
    "text": "but then gets specialized by kind of the resources that get created in other",
    "start": "1610520",
    "end": "1616220"
  },
  {
    "text": "namespaces so then we have the lsed system and I'll",
    "start": "1616220",
    "end": "1622220"
  },
  {
    "text": "set a region so the difference between these two are the system is what I would",
    "start": "1622220",
    "end": "1628220"
  },
  {
    "text": "say is the customer facing control plane so multiple um",
    "start": "1628220",
    "end": "1633700"
  },
  {
    "text": "uh in region in customer environments where they actually are running in multiple regions so say you have a",
    "start": "1633700",
    "end": "1640220"
  },
  {
    "text": "Europe and a North America uh kubernetes cluster deployment so you have two",
    "start": "1640220",
    "end": "1645919"
  },
  {
    "text": "individual clusters um what ends up happening is you pick one as your control plane and that's",
    "start": "1645919",
    "end": "1651980"
  },
  {
    "text": "where the offset operator runs that's where the dashboard runs",
    "start": "1651980",
    "end": "1657020"
  },
  {
    "text": "um anything that's kind of driving the information on the dashboard is going to live there and what ends up happening is",
    "start": "1657020",
    "end": "1664039"
  },
  {
    "text": "when you choose to provision something there uh the offset operator actually understands",
    "start": "1664039",
    "end": "1671240"
  },
  {
    "text": "the configuration for the other regions that make up the customer environment and it will create resources in the",
    "start": "1671240",
    "end": "1678679"
  },
  {
    "text": "appropriate cluster so onset a region is kind of the thing that standard Tides standardizes a",
    "start": "1678679",
    "end": "1685520"
  },
  {
    "text": "cluster to be able to run spice DP so primarily it has the spice to be operator in it and that's going to sit",
    "start": "1685520",
    "end": "1693260"
  },
  {
    "text": "there and watch for the request to create clusters or make changes to clusters that the offset operator is",
    "start": "1693260",
    "end": "1699860"
  },
  {
    "text": "then going to create as a reaction to a customer making a change in a dashboard and it's going to create those clusters",
    "start": "1699860",
    "end": "1706580"
  },
  {
    "text": "inside of the tonight namespace so the tenant namespace is where all the kind of runtime customer data is this is",
    "start": "1706580",
    "end": "1714500"
  },
  {
    "text": "where the systems they've proficient live it's the one that the operations team is mostly going to be inspecting",
    "start": "1714500",
    "end": "1721240"
  },
  {
    "text": "because these are these places where the customers are actually live making changes this is what we typically focus",
    "start": "1721240",
    "end": "1728960"
  },
  {
    "text": "on for backing up data like customer specific configuration the things that they have actually changed on the system",
    "start": "1728960",
    "end": "1736480"
  },
  {
    "text": "every other kind of like smaller namespace in here are the kind of cluster dependencies so we use the",
    "start": "1736480",
    "end": "1742640"
  },
  {
    "text": "Prometheus operator and Kube State metrics just to like make sure that we're kind of got the standard",
    "start": "1742640",
    "end": "1750860"
  },
  {
    "text": "centered operational um kind of deployment for collecting metrics and observability",
    "start": "1750860",
    "end": "1757340"
  },
  {
    "text": "from the cluster um I kind of mentioned earlier that we use cert manager and Contour as our",
    "start": "1757340",
    "end": "1762399"
  },
  {
    "text": "Ingress and pki infrastructure and then we actually create two deployments of",
    "start": "1762399",
    "end": "1769220"
  },
  {
    "text": "Contour in the internal and external namespaces these namespaces are for internal and",
    "start": "1769220",
    "end": "1776659"
  },
  {
    "text": "external traffic so because customer environments are often in vpcs like",
    "start": "1776659",
    "end": "1782240"
  },
  {
    "text": "virtual networks um that traffic goes through a specific load balancer and then internet facing",
    "start": "1782240",
    "end": "1789620"
  },
  {
    "text": "traffic goes through the external load balancer so that's how we kind of differentiate those and do peering to",
    "start": "1789620",
    "end": "1796340"
  },
  {
    "text": "internal networks at our customers companies and then finally we have Valero which is going to do backups and",
    "start": "1796340",
    "end": "1803360"
  },
  {
    "text": "then all the cube system e namespaces that you get from the different Cloud providers",
    "start": "1803360",
    "end": "1810020"
  },
  {
    "start": "1809000",
    "end": "1809000"
  },
  {
    "text": "cool so um kind of transitioning now to a final topic the Final Phase the day two",
    "start": "1810020",
    "end": "1816140"
  },
  {
    "text": "operations um these Technologies are kind of the standard ones",
    "start": "1816140",
    "end": "1821659"
  },
  {
    "text": "um and uh the reason why you pick the standard ones is kind of like the high level concept I want to mention which is",
    "start": "1821659",
    "end": "1829580"
  },
  {
    "text": "that the observability data isn't just for you because you are building a",
    "start": "1829580",
    "end": "1834740"
  },
  {
    "text": "system that is kind of customer facing infrastructure some of this data you're",
    "start": "1834740",
    "end": "1841220"
  },
  {
    "text": "going to pass on to your customers they want to know what the latencies are of",
    "start": "1841220",
    "end": "1846320"
  },
  {
    "text": "the the database they don't know how much CPU they're using they want to know how much capacity they're using if they're going to have to scale up if",
    "start": "1846320",
    "end": "1853039"
  },
  {
    "text": "you're growing up to scale up is that going to affect their bill um so it's not pure purely your decision",
    "start": "1853039",
    "end": "1859580"
  },
  {
    "text": "on what kind of Technologies you're going to choose for for these Stacks because they're going to integrate",
    "start": "1859580",
    "end": "1865460"
  },
  {
    "text": "potentially with customer systems they might want to ingest logs or traces or",
    "start": "1865460",
    "end": "1870799"
  },
  {
    "text": "metrics from their database as it's running into their own systems so that they can also page their Engineers if",
    "start": "1870799",
    "end": "1877580"
  },
  {
    "text": "something is going wrong inside of the manage database service so for that we're using all the standard",
    "start": "1877580",
    "end": "1884020"
  },
  {
    "text": "kind of Prometheus ecosystem for observability so that's kind of the",
    "start": "1884020",
    "end": "1890000"
  },
  {
    "text": "Prometheus operator Coupe State metrics Thanos grafana",
    "start": "1890000",
    "end": "1895220"
  },
  {
    "text": "the works there and then we use for traces but generically just open",
    "start": "1895220",
    "end": "1900500"
  },
  {
    "text": "Telemetry and then as I described before backups need to be not only data so",
    "start": "1900500",
    "end": "1909440"
  },
  {
    "text": "we're using kind of the Box standard cloud provider datastore backups so things that come with the data store",
    "start": "1909440",
    "end": "1916399"
  },
  {
    "text": "themselves but we're also building um ppis so that our customers can basically",
    "start": "1916399",
    "end": "1922940"
  },
  {
    "text": "export data out of live systems or stream that data to a replica that they",
    "start": "1922940",
    "end": "1929120"
  },
  {
    "text": "have themselves maybe on a completely different premise on-prem or a backup environment",
    "start": "1929120",
    "end": "1935899"
  },
  {
    "text": "um so we're we're kind of tackling this on both fronts but the unique thing is",
    "start": "1935899",
    "end": "1940940"
  },
  {
    "text": "actually not the backup of the data but the fact that you have to also back up the configuration because if you restore",
    "start": "1940940",
    "end": "1946039"
  },
  {
    "text": "the cluster and replay all plumey and your configuration changes that's not going to include any of the changes the",
    "start": "1946039",
    "end": "1951919"
  },
  {
    "text": "customers have made to the control plane themselves so that's where Valero comes in and we're actually continuously",
    "start": "1951919",
    "end": "1957620"
  },
  {
    "text": "backing up the changes that customers are making to the Clusters so that if we have to restore a cluster we can restore",
    "start": "1957620",
    "end": "1962899"
  },
  {
    "text": "absolutely everything and the kind of nice thing is it's all kind of decoupled in different ways so we can restore just",
    "start": "1962899",
    "end": "1968659"
  },
  {
    "text": "the customer data if we need to restore it to a older version of maybe the cluster or an older version of the",
    "start": "1968659",
    "end": "1974480"
  },
  {
    "text": "configuration all the namespaces that run in the cluster because everything is broken into these three different",
    "start": "1974480",
    "end": "1980500"
  },
  {
    "text": "categories we can actually mix and match versions to produce stable versions or",
    "start": "1980500",
    "end": "1986000"
  },
  {
    "text": "unstable versions of the environments for our users",
    "start": "1986000",
    "end": "1992360"
  },
  {
    "text": "so with that uh like to conclude you can find me on",
    "start": "1992360",
    "end": "1998000"
  },
  {
    "start": "1995000",
    "end": "1995000"
  },
  {
    "text": "social media in these three places on Twitter blue sky and then you can always",
    "start": "1998000",
    "end": "2003820"
  },
  {
    "text": "email me if you're interested in any of the projects I talked about we have a link to Spice TV dedicated the open",
    "start": "2003820",
    "end": "2011260"
  },
  {
    "text": "source space DP operator is available for exploring and kind of like learning how we went about automating the actual",
    "start": "2011260",
    "end": "2018279"
  },
  {
    "text": "operational side of our database that's actually built on another library that we have open source called",
    "start": "2018279",
    "end": "2023860"
  },
  {
    "text": "controller idioms and what controller idioms does is it wraps up high level behavior that you're going to need to",
    "start": "2023860",
    "end": "2029919"
  },
  {
    "text": "implement for idiomatic custom controllers and kubernetes operators into a library that you can just reuse",
    "start": "2029919",
    "end": "2036899"
  },
  {
    "text": "so examples of this are kind of custom informers setting statuses according to other",
    "start": "2036899",
    "end": "2043720"
  },
  {
    "text": "properties that of like other resources you're managing things like being able",
    "start": "2043720",
    "end": "2049540"
  },
  {
    "text": "to pause your your operator so that the operator stops reconciling so that a human can come in and debug kind of like",
    "start": "2049540",
    "end": "2056800"
  },
  {
    "text": "these higher level patterns that you would always need to implement that are not like the core logic of the operator",
    "start": "2056800",
    "end": "2062858"
  },
  {
    "text": "we've kind of abstracted in a way that you can import um and then also if you're more",
    "start": "2062859",
    "end": "2068440"
  },
  {
    "text": "interested in spice DB itself you can always join the space DB Discord or look",
    "start": "2068440",
    "end": "2074020"
  },
  {
    "text": "at our GitHub organization we have plenty of other open source projects all around the cloud native ecosystem things",
    "start": "2074020",
    "end": "2080560"
  },
  {
    "text": "uh regarding basically all parts of the stack operators grpc the database itself",
    "start": "2080560",
    "end": "2087000"
  },
  {
    "text": "clients for the database things like that so thanks for your time",
    "start": "2087000",
    "end": "2093659"
  }
]