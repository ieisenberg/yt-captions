[
  {
    "text": "thank you so much",
    "start": "199",
    "end": "2120"
  },
  {
    "text": "Alex",
    "start": "2120",
    "end": "5120"
  },
  {
    "text": "hi uh so hi this is five years of cloud",
    "start": "5359",
    "end": "8080"
  },
  {
    "text": "native",
    "start": "8080",
    "end": "9000"
  },
  {
    "text": "R so this talk was originally uh",
    "start": "9000",
    "end": "12240"
  },
  {
    "text": "prepared uh and was going to be given by",
    "start": "12240",
    "end": "13960"
  },
  {
    "text": "Eliza Weissman she is one of the Linker",
    "start": "13960",
    "end": "17119"
  },
  {
    "text": "maintainers maintainers of the Linker",
    "start": "17119",
    "end": "18439"
  },
  {
    "text": "project who works at buyant um she's a",
    "start": "18439",
    "end": "21080"
  },
  {
    "text": "rust Enthusiast and very very cool",
    "start": "21080",
    "end": "22480"
  },
  {
    "text": "person but unfortunately she couldn't be",
    "start": "22480",
    "end": "24119"
  },
  {
    "text": "here for illness so I have taken over uh",
    "start": "24119",
    "end": "27119"
  },
  {
    "text": "my name is Alex I'm also a Linker",
    "start": "27119",
    "end": "29480"
  },
  {
    "text": "maintainer I also work at buoyant um I'm",
    "start": "29480",
    "end": "32000"
  },
  {
    "text": "also a rest Enthusiast no comment on if",
    "start": "32000",
    "end": "34360"
  },
  {
    "text": "I'm",
    "start": "34360",
    "end": "35120"
  },
  {
    "text": "cool uh but what I want to talk about",
    "start": "35120",
    "end": "38040"
  },
  {
    "text": "today is kind of I want to give some",
    "start": "38040",
    "end": "40280"
  },
  {
    "text": "background on kind of how the F last",
    "start": "40280",
    "end": "42600"
  },
  {
    "text": "five years have gone for the linardy",
    "start": "42600",
    "end": "44840"
  },
  {
    "text": "project with respect to us adopting rust",
    "start": "44840",
    "end": "47199"
  },
  {
    "text": "so we decided about 5 years ago to adopt",
    "start": "47199",
    "end": "49760"
  },
  {
    "text": "rust as the language to write the linqu",
    "start": "49760",
    "end": "51920"
  },
  {
    "text": "proxy in uh and that was a very kind of",
    "start": "51920",
    "end": "55079"
  },
  {
    "text": "controversial or or big decision at the",
    "start": "55079",
    "end": "56719"
  },
  {
    "text": "time so I wanted to talk about why we",
    "start": "56719",
    "end": "58079"
  },
  {
    "text": "did that and talk about how that went",
    "start": "58079",
    "end": "61239"
  },
  {
    "text": "and kind of uh what the outcomes of that",
    "start": "61239",
    "end": "64198"
  },
  {
    "text": "would be would uh have been and I want",
    "start": "64199",
    "end": "66720"
  },
  {
    "text": "to talk about why that kind of matters",
    "start": "66720",
    "end": "68560"
  },
  {
    "text": "to people who are not Linker maintainers",
    "start": "68560",
    "end": "70439"
  },
  {
    "text": "and what it means kind of for the",
    "start": "70439",
    "end": "71479"
  },
  {
    "text": "ecosystem in",
    "start": "71479",
    "end": "74438"
  },
  {
    "text": "general uh so number one why did we",
    "start": "74759",
    "end": "77040"
  },
  {
    "text": "decide to use rust in first",
    "start": "77040",
    "end": "79240"
  },
  {
    "text": "place uh so first of all I've been",
    "start": "79240",
    "end": "81280"
  },
  {
    "text": "talking about being a Linker maintainer",
    "start": "81280",
    "end": "83479"
  },
  {
    "text": "link is the Open Source service mesh",
    "start": "83479",
    "end": "86000"
  },
  {
    "text": "part of the cncf um do everyone know is",
    "start": "86000",
    "end": "89320"
  },
  {
    "text": "everyone familiar with with Linker have",
    "start": "89320",
    "end": "90560"
  },
  {
    "text": "people heard of this a few hands go up",
    "start": "90560",
    "end": "93200"
  },
  {
    "text": "yeah so Linker is a service mesh um",
    "start": "93200",
    "end": "95680"
  },
  {
    "text": "after having been at coupon for a few",
    "start": "95680",
    "end": "97439"
  },
  {
    "text": "years now very good at explaining what a",
    "start": "97439",
    "end": "99520"
  },
  {
    "text": "service mesh is very quickly to people",
    "start": "99520",
    "end": "101159"
  },
  {
    "text": "whether they like it or not um so the",
    "start": "101159",
    "end": "104560"
  },
  {
    "text": "idea here is that you have a proxy uh",
    "start": "104560",
    "end": "107560"
  },
  {
    "text": "that acts as a sidecar container you put",
    "start": "107560",
    "end": "110040"
  },
  {
    "text": "one of those in every pod in your",
    "start": "110040",
    "end": "112119"
  },
  {
    "text": "cluster and then all of the network",
    "start": "112119",
    "end": "114079"
  },
  {
    "text": "traffic for that pod that's going in or",
    "start": "114079",
    "end": "115640"
  },
  {
    "text": "out goes through that proxy and so",
    "start": "115640",
    "end": "118680"
  },
  {
    "text": "because that proxy can detect what",
    "start": "118680",
    "end": "120799"
  },
  {
    "text": "protocol it is it can see whether it's",
    "start": "120799",
    "end": "122119"
  },
  {
    "text": "HTTP or TCP and it can do all kinds of",
    "start": "122119",
    "end": "124840"
  },
  {
    "text": "intelligent things with it like it can",
    "start": "124840",
    "end": "126320"
  },
  {
    "text": "transparently add mutually authenticated",
    "start": "126320",
    "end": "128800"
  },
  {
    "text": "TLS onto that connection without the",
    "start": "128800",
    "end": "130959"
  },
  {
    "text": "application needing to kind of do any",
    "start": "130959",
    "end": "132840"
  },
  {
    "text": "work to make that happen uh it can do",
    "start": "132840",
    "end": "134959"
  },
  {
    "text": "intelligent latency aware load balancing",
    "start": "134959",
    "end": "136800"
  },
  {
    "text": "based on the actual observed latencies",
    "start": "136800",
    "end": "138560"
  },
  {
    "text": "that it sees for real request data um it",
    "start": "138560",
    "end": "141599"
  },
  {
    "text": "can add observability circuit breakers",
    "start": "141599",
    "end": "143519"
  },
  {
    "text": "all kinds of really cool",
    "start": "143519",
    "end": "146400"
  },
  {
    "text": "stuff and so Linker is infrastructure",
    "start": "146840",
    "end": "149840"
  },
  {
    "text": "and there's two different things I mean",
    "start": "149840",
    "end": "151239"
  },
  {
    "text": "by this uh number one Linker is Network",
    "start": "151239",
    "end": "154000"
  },
  {
    "text": "infrastructure for your application so",
    "start": "154000",
    "end": "156400"
  },
  {
    "text": "anytime your application makes any kind",
    "start": "156400",
    "end": "158400"
  },
  {
    "text": "of network call to anything else in the",
    "start": "158400",
    "end": "160519"
  },
  {
    "text": "cluster it's going to go through linkerd",
    "start": "160519",
    "end": "162519"
  },
  {
    "text": "kind of transparently and so just like",
    "start": "162519",
    "end": "164680"
  },
  {
    "text": "the operating system is infrastructure",
    "start": "164680",
    "end": "166840"
  },
  {
    "text": "or your network card is infrastructure",
    "start": "166840",
    "end": "169080"
  },
  {
    "text": "Linker is infrastructure to your",
    "start": "169080",
    "end": "171800"
  },
  {
    "text": "application but linkerd is also used by",
    "start": "171800",
    "end": "174840"
  },
  {
    "text": "infrastructure for",
    "start": "174840",
    "end": "177720"
  },
  {
    "text": "humans so 911 caller centers use Linker",
    "start": "177760",
    "end": "180800"
  },
  {
    "text": "D Healthcare organizations use Linker D",
    "start": "180800",
    "end": "184480"
  },
  {
    "text": "financial institutions use linkerd these",
    "start": "184480",
    "end": "186319"
  },
  {
    "text": "are all very critical pieces of",
    "start": "186319",
    "end": "188280"
  },
  {
    "text": "infrastructure that you know if they",
    "start": "188280",
    "end": "190239"
  },
  {
    "text": "work or they don't work this is a big",
    "start": "190239",
    "end": "191480"
  },
  {
    "text": "deal right it's not just like you know",
    "start": "191480",
    "end": "193319"
  },
  {
    "text": "if it's slow who cares no like these are",
    "start": "193319",
    "end": "195120"
  },
  {
    "text": "very very important uh",
    "start": "195120",
    "end": "198480"
  },
  {
    "text": "applications and people rely on on these",
    "start": "198480",
    "end": "201239"
  },
  {
    "text": "pieces of infrastructure so they need to",
    "start": "201239",
    "end": "203200"
  },
  {
    "text": "be secure they need to be reliable and",
    "start": "203200",
    "end": "205480"
  },
  {
    "text": "they need to be fast in that order and",
    "start": "205480",
    "end": "209360"
  },
  {
    "text": "it's not negotiable we cannot compromise",
    "start": "209360",
    "end": "211879"
  },
  {
    "text": "on any of these three any of these three",
    "start": "211879",
    "end": "216000"
  },
  {
    "text": "things so when we're talking about",
    "start": "216200",
    "end": "218200"
  },
  {
    "text": "linard being secure you know what are",
    "start": "218200",
    "end": "220480"
  },
  {
    "text": "the types of things we're worried about",
    "start": "220480",
    "end": "221920"
  },
  {
    "text": "what types of things cause security",
    "start": "221920",
    "end": "224920"
  },
  {
    "text": "vulnerabilities well for example there's",
    "start": "224920",
    "end": "226640"
  },
  {
    "text": "buffer underruns right if you try to",
    "start": "226640",
    "end": "228599"
  },
  {
    "text": "access a piece of memory outside the",
    "start": "228599",
    "end": "230480"
  },
  {
    "text": "valid bounds for that memory it's going",
    "start": "230480",
    "end": "232280"
  },
  {
    "text": "to be a",
    "start": "232280",
    "end": "233280"
  },
  {
    "text": "problem you know there's things like",
    "start": "233280",
    "end": "235079"
  },
  {
    "text": "dangling pointers or use after free",
    "start": "235079",
    "end": "237319"
  },
  {
    "text": "where if you try to dreference a pointer",
    "start": "237319",
    "end": "239439"
  },
  {
    "text": "after after that pointer is no longer",
    "start": "239439",
    "end": "240640"
  },
  {
    "text": "valid it's going to be a",
    "start": "240640",
    "end": "242799"
  },
  {
    "text": "problem and reading uninitialized memory",
    "start": "242799",
    "end": "245519"
  },
  {
    "text": "if you try to read a piece of memory",
    "start": "245519",
    "end": "247120"
  },
  {
    "text": "before it's valid also a problem so",
    "start": "247120",
    "end": "249720"
  },
  {
    "text": "these are all examples of memory",
    "start": "249720",
    "end": "251640"
  },
  {
    "text": "unsafety trying to use a piece of data",
    "start": "251640",
    "end": "254640"
  },
  {
    "text": "without while assuming it's one thing",
    "start": "254640",
    "end": "256000"
  },
  {
    "text": "when it's actually something",
    "start": "256000",
    "end": "258840"
  },
  {
    "text": "else so it turns out that like a",
    "start": "259079",
    "end": "261880"
  },
  {
    "text": "surprising majority of security",
    "start": "261880",
    "end": "264040"
  },
  {
    "text": "vulnerabilities are due to memory",
    "start": "264040",
    "end": "265880"
  },
  {
    "text": "unsafety and 90% of Android",
    "start": "265880",
    "end": "268120"
  },
  {
    "text": "vulnerabilities 60 70% of iOS and Mac OS",
    "start": "268120",
    "end": "271520"
  },
  {
    "text": "cves 70% of CVS and chromium all due to",
    "start": "271520",
    "end": "275479"
  },
  {
    "text": "memory unsafety in one form or",
    "start": "275479",
    "end": "278880"
  },
  {
    "text": "another and so if you want to avoid",
    "start": "279199",
    "end": "281240"
  },
  {
    "text": "these kind of memory on safety issues",
    "start": "281240",
    "end": "283080"
  },
  {
    "text": "well one option is to go to a managed",
    "start": "283080",
    "end": "284720"
  },
  {
    "text": "language so if you're using something",
    "start": "284720",
    "end": "286280"
  },
  {
    "text": "like Scala or Java or go C Ruby python",
    "start": "286280",
    "end": "289759"
  },
  {
    "text": "these all do runtime checking to make",
    "start": "289759",
    "end": "292520"
  },
  {
    "text": "sure that you're using memory",
    "start": "292520",
    "end": "294320"
  },
  {
    "text": "appropriately you're not accessing",
    "start": "294320",
    "end": "295720"
  },
  {
    "text": "things outside the valid bounds you're",
    "start": "295720",
    "end": "297680"
  },
  {
    "text": "not using pointers that",
    "start": "297680",
    "end": "300240"
  },
  {
    "text": "oh that's not good all right we're we're",
    "start": "300240",
    "end": "305240"
  },
  {
    "text": "okay yeah I should have written it in",
    "start": "305240",
    "end": "307280"
  },
  {
    "text": "Rust um so all these languages they have",
    "start": "307280",
    "end": "310280"
  },
  {
    "text": "runtime checks that that make sure that",
    "start": "310280",
    "end": "312759"
  },
  {
    "text": "protect you against these kind of issues",
    "start": "312759",
    "end": "314639"
  },
  {
    "text": "but those runtime checks come with a",
    "start": "314639",
    "end": "316240"
  },
  {
    "text": "cost there's a performance cost",
    "start": "316240",
    "end": "317479"
  },
  {
    "text": "associated with doing them and so",
    "start": "317479",
    "end": "320440"
  },
  {
    "text": "sometimes you don't typically get the",
    "start": "320440",
    "end": "321680"
  },
  {
    "text": "same performance in these languages that",
    "start": "321680",
    "end": "323520"
  },
  {
    "text": "you might get in something like C++",
    "start": "323520",
    "end": "325919"
  },
  {
    "text": "which is very very fast but is",
    "start": "325919",
    "end": "328479"
  },
  {
    "text": "susceptible to these kind of memory",
    "start": "328479",
    "end": "330280"
  },
  {
    "text": "issues and it's very easy for these kind",
    "start": "330280",
    "end": "331919"
  },
  {
    "text": "of memory related bugs to slip into your",
    "start": "331919",
    "end": "335759"
  },
  {
    "text": "code so when we're talking about",
    "start": "335919",
    "end": "338400"
  },
  {
    "text": "linker's data plane uh this is uh the",
    "start": "338400",
    "end": "342360"
  },
  {
    "text": "proxy where all of your network traffic",
    "start": "342360",
    "end": "344440"
  },
  {
    "text": "is flowing through memory unsafety in",
    "start": "344440",
    "end": "347840"
  },
  {
    "text": "this case is completely unacceptable",
    "start": "347840",
    "end": "349840"
  },
  {
    "text": "right that data that's going through the",
    "start": "349840",
    "end": "351479"
  },
  {
    "text": "proxy might contain personally",
    "start": "351479",
    "end": "353560"
  },
  {
    "text": "identifiable information credit cards",
    "start": "353560",
    "end": "356199"
  },
  {
    "text": "Health car Healthcare information",
    "start": "356199",
    "end": "358360"
  },
  {
    "text": "Financial records you know any kind of",
    "start": "358360",
    "end": "360120"
  },
  {
    "text": "sensitive data and that's not something",
    "start": "360120",
    "end": "362319"
  },
  {
    "text": "that we can take any chances",
    "start": "362319",
    "end": "364639"
  },
  {
    "text": "with but if we're using a managed",
    "start": "364639",
    "end": "366960"
  },
  {
    "text": "language and we're subject to things",
    "start": "366960",
    "end": "368319"
  },
  {
    "text": "like garbage collection pauses for",
    "start": "368319",
    "end": "369840"
  },
  {
    "text": "example that's not great either uh",
    "start": "369840",
    "end": "371880"
  },
  {
    "text": "because all of your application data is",
    "start": "371880",
    "end": "373520"
  },
  {
    "text": "going through that proxy if that proxy",
    "start": "373520",
    "end": "375680"
  },
  {
    "text": "you know does a garbage collection pause",
    "start": "375680",
    "end": "377639"
  },
  {
    "text": "and waits for 100 milliseconds 200",
    "start": "377639",
    "end": "379880"
  },
  {
    "text": "milliseconds that's slowing down your",
    "start": "379880",
    "end": "381720"
  },
  {
    "text": "entire application you know that's in",
    "start": "381720",
    "end": "383240"
  },
  {
    "text": "the hot path so we really want something",
    "start": "383240",
    "end": "386919"
  },
  {
    "text": "that can give us memory safety but at",
    "start": "386919",
    "end": "389039"
  },
  {
    "text": "the same time like real time uh",
    "start": "389039",
    "end": "392960"
  },
  {
    "text": "latencies and so what if there was",
    "start": "392960",
    "end": "394960"
  },
  {
    "text": "something that could give us kind of The",
    "start": "394960",
    "end": "396039"
  },
  {
    "text": "Best of Both",
    "start": "396039",
    "end": "397759"
  },
  {
    "text": "Worlds Tada uh so rust is a system",
    "start": "397759",
    "end": "401199"
  },
  {
    "text": "programming language uh and the big idea",
    "start": "401199",
    "end": "404639"
  },
  {
    "text": "behind rust is that it gives us these",
    "start": "404639",
    "end": "406360"
  },
  {
    "text": "memory safety guarantees at compile time",
    "start": "406360",
    "end": "409360"
  },
  {
    "text": "so the compiler is able to statically",
    "start": "409360",
    "end": "411120"
  },
  {
    "text": "check your program and is able to look",
    "start": "411120",
    "end": "413240"
  },
  {
    "text": "for all kinds of memory issues at",
    "start": "413240",
    "end": "415960"
  },
  {
    "text": "compile time so it doesn't have to do",
    "start": "415960",
    "end": "417560"
  },
  {
    "text": "these checks at runtime and can",
    "start": "417560",
    "end": "419759"
  },
  {
    "text": "guarantee that the code that it produces",
    "start": "419759",
    "end": "421879"
  },
  {
    "text": "is free from large classes of",
    "start": "421879",
    "end": "425759"
  },
  {
    "text": "bugs so how does it do",
    "start": "425919",
    "end": "429319"
  },
  {
    "text": "this so one thing that Russ does is it",
    "start": "429319",
    "end": "431680"
  },
  {
    "text": "ensures unique ownership and that means",
    "start": "431680",
    "end": "434120"
  },
  {
    "text": "that if you have a piece of data in a",
    "start": "434120",
    "end": "436000"
  },
  {
    "text": "rust program there is one place that",
    "start": "436000",
    "end": "438160"
  },
  {
    "text": "that data is owned you don't have two",
    "start": "438160",
    "end": "439440"
  },
  {
    "text": "pieces of code that both think they own",
    "start": "439440",
    "end": "441039"
  },
  {
    "text": "a piece of data and you know one tries",
    "start": "441039",
    "end": "442800"
  },
  {
    "text": "to delete it or they try to modify it at",
    "start": "442800",
    "end": "444639"
  },
  {
    "text": "the same time uh the language itself",
    "start": "444639",
    "end": "447479"
  },
  {
    "text": "guarantees unique ownership",
    "start": "447479",
    "end": "451319"
  },
  {
    "text": "it also has this concept of checked",
    "start": "451800",
    "end": "453360"
  },
  {
    "text": "borrows so if you're trying to access a",
    "start": "453360",
    "end": "455759"
  },
  {
    "text": "piece of data that you don't own there's",
    "start": "455759",
    "end": "457720"
  },
  {
    "text": "a system in place for deciding when that",
    "start": "457720",
    "end": "459720"
  },
  {
    "text": "is okay when it's not okay and when uh",
    "start": "459720",
    "end": "463360"
  },
  {
    "text": "you know you can you can use this data",
    "start": "463360",
    "end": "465280"
  },
  {
    "text": "and make sure that it's still valid when",
    "start": "465280",
    "end": "466479"
  },
  {
    "text": "you're trying to access",
    "start": "466479",
    "end": "469360"
  },
  {
    "text": "it and it has this concept of exclusive",
    "start": "469800",
    "end": "472360"
  },
  {
    "text": "mutability if you want to change a piece",
    "start": "472360",
    "end": "474159"
  },
  {
    "text": "of data rust ensures at compile time",
    "start": "474159",
    "end": "477360"
  },
  {
    "text": "that you're the only uh person or the",
    "start": "477360",
    "end": "479159"
  },
  {
    "text": "only only piece of uh code is uh looking",
    "start": "479159",
    "end": "481759"
  },
  {
    "text": "at that so you don't have to worry about",
    "start": "481759",
    "end": "483639"
  },
  {
    "text": "pieces of data being changed out from",
    "start": "483639",
    "end": "485159"
  },
  {
    "text": "under you or being mutated at a time",
    "start": "485159",
    "end": "487080"
  },
  {
    "text": "that you don't",
    "start": "487080",
    "end": "488400"
  },
  {
    "text": "expect this is a little bit abstract",
    "start": "488400",
    "end": "490560"
  },
  {
    "text": "let's take a look at an",
    "start": "490560",
    "end": "492639"
  },
  {
    "text": "example is that visible yeah it's pretty",
    "start": "492639",
    "end": "494759"
  },
  {
    "text": "visible okay so this is a program",
    "start": "494759",
    "end": "496560"
  },
  {
    "text": "written in",
    "start": "496560",
    "end": "497800"
  },
  {
    "text": "C++ uh we have a vector v uh so that's a",
    "start": "497800",
    "end": "501520"
  },
  {
    "text": "growable array of strings and what we do",
    "start": "501520",
    "end": "504520"
  },
  {
    "text": "is we push a string into that Vector",
    "start": "504520",
    "end": "506479"
  },
  {
    "text": "hello world then we create a pointer",
    "start": "506479",
    "end": "509319"
  },
  {
    "text": "which is our pointer to the first",
    "start": "509319",
    "end": "510879"
  },
  {
    "text": "element in that Vector we print it out",
    "start": "510879",
    "end": "514680"
  },
  {
    "text": "and so hopefully that should print hello",
    "start": "514680",
    "end": "516880"
  },
  {
    "text": "world then we push a whole bunch more",
    "start": "516880",
    "end": "519240"
  },
  {
    "text": "strings in there hello Chicago hello",
    "start": "519240",
    "end": "520919"
  },
  {
    "text": "cucon hello San Francisco etc etc etc",
    "start": "520919",
    "end": "523719"
  },
  {
    "text": "and then we print out that first pointer",
    "start": "523719",
    "end": "525080"
  },
  {
    "text": "again that's supposed to be pointing to",
    "start": "525080",
    "end": "526360"
  },
  {
    "text": "the first element of that",
    "start": "526360",
    "end": "528000"
  },
  {
    "text": "Vector right so pretty simple program",
    "start": "528000",
    "end": "530920"
  },
  {
    "text": "hopefully uh but let's try to run it and",
    "start": "530920",
    "end": "533360"
  },
  {
    "text": "see what",
    "start": "533360",
    "end": "535680"
  },
  {
    "text": "happens segf core dump it crashes so",
    "start": "536600",
    "end": "541440"
  },
  {
    "text": "that's surprising right unless you have",
    "start": "541440",
    "end": "543279"
  },
  {
    "text": "an Eagle Eye you might not have expected",
    "start": "543279",
    "end": "545160"
  },
  {
    "text": "this program to have any problems so",
    "start": "545160",
    "end": "547399"
  },
  {
    "text": "what is happening here well V is a",
    "start": "547399",
    "end": "551160"
  },
  {
    "text": "vector it's a growable array and what",
    "start": "551160",
    "end": "554040"
  },
  {
    "text": "that means is that it's backed by a",
    "start": "554040",
    "end": "556200"
  },
  {
    "text": "static length array a fixed length array",
    "start": "556200",
    "end": "559320"
  },
  {
    "text": "and if that ever grows past the bounds",
    "start": "559320",
    "end": "561640"
  },
  {
    "text": "of that array it's going to allocate a",
    "start": "561640",
    "end": "563560"
  },
  {
    "text": "larger array somewhere else in memory",
    "start": "563560",
    "end": "565480"
  },
  {
    "text": "and it's going to copy its contents into",
    "start": "565480",
    "end": "567519"
  },
  {
    "text": "that larger array so when we just had",
    "start": "567519",
    "end": "569959"
  },
  {
    "text": "one element hello world it was fine we",
    "start": "569959",
    "end": "571680"
  },
  {
    "text": "took a pointer to that first element but",
    "start": "571680",
    "end": "574320"
  },
  {
    "text": "then as we pushed more and more data",
    "start": "574320",
    "end": "575920"
  },
  {
    "text": "into it it eventually got big enough",
    "start": "575920",
    "end": "578040"
  },
  {
    "text": "that it needed to be reated somewhere",
    "start": "578040",
    "end": "580000"
  },
  {
    "text": "else and so it moved that data to a",
    "start": "580000",
    "end": "582079"
  },
  {
    "text": "larger array somewhere else in memory",
    "start": "582079",
    "end": "584360"
  },
  {
    "text": "but that pointer was still pointing not",
    "start": "584360",
    "end": "585959"
  },
  {
    "text": "at V anymore but at where V used to be",
    "start": "585959",
    "end": "589000"
  },
  {
    "text": "and so that's why we get this uh Segal",
    "start": "589000",
    "end": "592040"
  },
  {
    "text": "because we're trying to access this",
    "start": "592040",
    "end": "593279"
  },
  {
    "text": "piece of memory which is no longer valid",
    "start": "593279",
    "end": "595839"
  },
  {
    "text": "this this array has moved out from under",
    "start": "595839",
    "end": "598360"
  },
  {
    "text": "us",
    "start": "598360",
    "end": "601120"
  },
  {
    "text": "so not great and and kind of a subtle",
    "start": "601440",
    "end": "605399"
  },
  {
    "text": "bug so how does rust help us here well",
    "start": "605399",
    "end": "607800"
  },
  {
    "text": "let's look at what this program would",
    "start": "607800",
    "end": "609120"
  },
  {
    "text": "look like if it were written in Rust so",
    "start": "609120",
    "end": "611279"
  },
  {
    "text": "basically the exact same program we have",
    "start": "611279",
    "end": "613600"
  },
  {
    "text": "a vector called V we push hello world",
    "start": "613600",
    "end": "616680"
  },
  {
    "text": "into it we take a pointer to the first",
    "start": "616680",
    "end": "619160"
  },
  {
    "text": "element in the vector we print it out",
    "start": "619160",
    "end": "623040"
  },
  {
    "text": "push a whole bunch more strings in and",
    "start": "623040",
    "end": "624880"
  },
  {
    "text": "then print that pointer again okay so",
    "start": "624880",
    "end": "627560"
  },
  {
    "text": "almost identical program",
    "start": "627560",
    "end": "629760"
  },
  {
    "text": "uh who thinks if I run this is going to",
    "start": "629760",
    "end": "633040"
  },
  {
    "text": "work run no one who thinks it's not",
    "start": "633040",
    "end": "636040"
  },
  {
    "text": "going to",
    "start": "636040",
    "end": "637160"
  },
  {
    "text": "work a few a few people uh you're half",
    "start": "637160",
    "end": "641000"
  },
  {
    "text": "right it it it doesn't even compile uh",
    "start": "641000",
    "end": "643360"
  },
  {
    "text": "the compiler is going to tell us that",
    "start": "643360",
    "end": "645079"
  },
  {
    "text": "that this is not uh not a valid program",
    "start": "645079",
    "end": "648600"
  },
  {
    "text": "and so why is that what's it what's it",
    "start": "648600",
    "end": "649839"
  },
  {
    "text": "saying it says cannot borrow v as",
    "start": "649839",
    "end": "651800"
  },
  {
    "text": "mutable because it is already borrowed",
    "start": "651800",
    "end": "654079"
  },
  {
    "text": "or is also borrowed as immutable what",
    "start": "654079",
    "end": "656480"
  },
  {
    "text": "does that mean it means that we when we",
    "start": "656480",
    "end": "658760"
  },
  {
    "text": "took a pointer to that first element of",
    "start": "658760",
    "end": "660560"
  },
  {
    "text": "V we were creating a reference into it",
    "start": "660560",
    "end": "663160"
  },
  {
    "text": "we were saying we would like to uh have",
    "start": "663160",
    "end": "665560"
  },
  {
    "text": "access to this data and then we start",
    "start": "665560",
    "end": "668440"
  },
  {
    "text": "mutating that that Vector so this is",
    "start": "668440",
    "end": "670519"
  },
  {
    "text": "that concept of exclusive",
    "start": "670519",
    "end": "672320"
  },
  {
    "text": "mutability rust guarantees that if you",
    "start": "672320",
    "end": "674800"
  },
  {
    "text": "are going to mutate someone something no",
    "start": "674800",
    "end": "677120"
  },
  {
    "text": "one else is looking at it at the same",
    "start": "677120",
    "end": "678720"
  },
  {
    "text": "time and so the the compiler has caught",
    "start": "678720",
    "end": "681519"
  },
  {
    "text": "here that we're trying to change a piece",
    "start": "681519",
    "end": "683040"
  },
  {
    "text": "of data while someone else is looking at",
    "start": "683040",
    "end": "684600"
  },
  {
    "text": "it and that's not",
    "start": "684600",
    "end": "686360"
  },
  {
    "text": "allowed so how do we fix that well it's",
    "start": "686360",
    "end": "689200"
  },
  {
    "text": "very simple if we just create a new",
    "start": "689200",
    "end": "691560"
  },
  {
    "text": "pointer down here at the bottom that's",
    "start": "691560",
    "end": "693639"
  },
  {
    "text": "going to solve our problems and the",
    "start": "693639",
    "end": "695399"
  },
  {
    "text": "reason for that is that that first",
    "start": "695399",
    "end": "697440"
  },
  {
    "text": "pointer is now used only once it's used",
    "start": "697440",
    "end": "700360"
  },
  {
    "text": "for that first print line and then it's",
    "start": "700360",
    "end": "702160"
  },
  {
    "text": "never used again so it can be dropped",
    "start": "702160",
    "end": "704160"
  },
  {
    "text": "there and the compiler is smart enough",
    "start": "704160",
    "end": "705760"
  },
  {
    "text": "to notice that it's never used again and",
    "start": "705760",
    "end": "708200"
  },
  {
    "text": "can say okay well now these edits now",
    "start": "708200",
    "end": "710000"
  },
  {
    "text": "these v. pushes are okay because no one",
    "start": "710000",
    "end": "712519"
  },
  {
    "text": "else is using that pointer so we have",
    "start": "712519",
    "end": "715000"
  },
  {
    "text": "exclusive access to it we can do that",
    "start": "715000",
    "end": "717200"
  },
  {
    "text": "mutation and then when we're done done",
    "start": "717200",
    "end": "719320"
  },
  {
    "text": "we can create a new pointer and we can",
    "start": "719320",
    "end": "721079"
  },
  {
    "text": "look at that data and it's going to work",
    "start": "721079",
    "end": "722839"
  },
  {
    "text": "and if we run the program",
    "start": "722839",
    "end": "725279"
  },
  {
    "text": "now it works hello world hello world so",
    "start": "725279",
    "end": "729760"
  },
  {
    "text": "very cool uh little way that rust can",
    "start": "729760",
    "end": "732560"
  },
  {
    "text": "protect you from these subtle bugs where",
    "start": "732560",
    "end": "734959"
  },
  {
    "text": "things kind of change out from from",
    "start": "734959",
    "end": "736320"
  },
  {
    "text": "under",
    "start": "736320",
    "end": "737320"
  },
  {
    "text": "you let's look at one more",
    "start": "737320",
    "end": "741240"
  },
  {
    "text": "example okay so here's another C++",
    "start": "742880",
    "end": "745279"
  },
  {
    "text": "program we have a class called greeter",
    "start": "745279",
    "end": "748480"
  },
  {
    "text": "it has has a reference to a string in it",
    "start": "748480",
    "end": "750639"
  },
  {
    "text": "called who uh there's a Constructor and",
    "start": "750639",
    "end": "754000"
  },
  {
    "text": "then a greet method which says hello and",
    "start": "754000",
    "end": "757440"
  },
  {
    "text": "then the contents of that who",
    "start": "757440",
    "end": "760160"
  },
  {
    "text": "reference we have a function called make",
    "start": "760160",
    "end": "762519"
  },
  {
    "text": "Hello World which creates a string",
    "start": "762519",
    "end": "764519"
  },
  {
    "text": "called world and then passes that",
    "start": "764519",
    "end": "766519"
  },
  {
    "text": "reference into a greeter and returns it",
    "start": "766519",
    "end": "769360"
  },
  {
    "text": "and then we have a main method which",
    "start": "769360",
    "end": "770680"
  },
  {
    "text": "calls make hello world and then greeter",
    "start": "770680",
    "end": "772399"
  },
  {
    "text": "dog greet okay does anyone see the bug",
    "start": "772399",
    "end": "776079"
  },
  {
    "text": "does anyone Eagle eyed enough to notice",
    "start": "776079",
    "end": "778199"
  },
  {
    "text": "what's going wrong a few people okay",
    "start": "778199",
    "end": "780880"
  },
  {
    "text": "let's try running it let's see what",
    "start": "780880",
    "end": "784160"
  },
  {
    "text": "happens uh so this does print hello but",
    "start": "784399",
    "end": "787240"
  },
  {
    "text": "it doesn't print hello world it prints",
    "start": "787240",
    "end": "789320"
  },
  {
    "text": "hello something else something bad uh it",
    "start": "789320",
    "end": "794440"
  },
  {
    "text": "says hello to something very very",
    "start": "794440",
    "end": "796000"
  },
  {
    "text": "different so what's going on here well",
    "start": "796000",
    "end": "799040"
  },
  {
    "text": "when you call string World equals world",
    "start": "799040",
    "end": "801399"
  },
  {
    "text": "you're allocating a string on the stack",
    "start": "801399",
    "end": "803839"
  },
  {
    "text": "a local stack variable and then you're",
    "start": "803839",
    "end": "806240"
  },
  {
    "text": "taking a reference",
    "start": "806240",
    "end": "807760"
  },
  {
    "text": "uhoh",
    "start": "807760",
    "end": "810160"
  },
  {
    "text": "sorry where did my slides",
    "start": "810160",
    "end": "814120"
  },
  {
    "text": "go so many tabs I",
    "start": "820480",
    "end": "823560"
  },
  {
    "text": "know all right uh we have a local stack",
    "start": "823560",
    "end": "826760"
  },
  {
    "text": "variable called world and we're taking a",
    "start": "826760",
    "end": "828680"
  },
  {
    "text": "reference to that stack variable and",
    "start": "828680",
    "end": "829880"
  },
  {
    "text": "we're passing it into greeter and",
    "start": "829880",
    "end": "831199"
  },
  {
    "text": "returning it and um where am I here we",
    "start": "831199",
    "end": "835079"
  },
  {
    "text": "are",
    "start": "835079",
    "end": "837360"
  },
  {
    "text": "um and then when we return from make",
    "start": "837360",
    "end": "839759"
  },
  {
    "text": "Holo world all those local stack",
    "start": "839759",
    "end": "841720"
  },
  {
    "text": "variables get",
    "start": "841720",
    "end": "843000"
  },
  {
    "text": "deallocated and so now you have this",
    "start": "843000",
    "end": "844880"
  },
  {
    "text": "pointer to the stack variable that no",
    "start": "844880",
    "end": "846360"
  },
  {
    "text": "longer exists and so that's why we get",
    "start": "846360",
    "end": "849160"
  },
  {
    "text": "kind of this garbage printed out because",
    "start": "849160",
    "end": "850560"
  },
  {
    "text": "we're have a pointer which has outlived",
    "start": "850560",
    "end": "852480"
  },
  {
    "text": "its valid lifetime that pointer was kind",
    "start": "852480",
    "end": "854600"
  },
  {
    "text": "of only valid for as long as that stack",
    "start": "854600",
    "end": "857519"
  },
  {
    "text": "was uh as long as we were in that stack",
    "start": "857519",
    "end": "860480"
  },
  {
    "text": "uh frame and once we pop that off that",
    "start": "860480",
    "end": "863360"
  },
  {
    "text": "reference is no longer valid but we",
    "start": "863360",
    "end": "864680"
  },
  {
    "text": "still have it around because it's kind",
    "start": "864680",
    "end": "865959"
  },
  {
    "text": "of been returned and we're still going",
    "start": "865959",
    "end": "867440"
  },
  {
    "text": "to use it even though it's not valid",
    "start": "867440",
    "end": "870880"
  },
  {
    "text": "anymore and that's why we have this this",
    "start": "870880",
    "end": "873079"
  },
  {
    "text": "issue",
    "start": "873079",
    "end": "873959"
  },
  {
    "text": "so how does rust help us well here's the",
    "start": "873959",
    "end": "876920"
  },
  {
    "text": "same program in Rust uh we have a struct",
    "start": "876920",
    "end": "880120"
  },
  {
    "text": "called greeter again it's got a",
    "start": "880120",
    "end": "881880"
  },
  {
    "text": "reference to a string it's got a greet",
    "start": "881880",
    "end": "884000"
  },
  {
    "text": "method which prints hello and then the",
    "start": "884000",
    "end": "885600"
  },
  {
    "text": "who we have a make Hello World which",
    "start": "885600",
    "end": "887800"
  },
  {
    "text": "creates a string called world and passes",
    "start": "887800",
    "end": "889880"
  },
  {
    "text": "a reference to it into greeter and then",
    "start": "889880",
    "end": "891920"
  },
  {
    "text": "we have a main which calls make hello",
    "start": "891920",
    "end": "894079"
  },
  {
    "text": "world and then greeter do",
    "start": "894079",
    "end": "896560"
  },
  {
    "text": "greet who thinks it's going to work",
    "start": "896560",
    "end": "900320"
  },
  {
    "text": "who thinks it's not going to work who",
    "start": "900320",
    "end": "902279"
  },
  {
    "text": "thinks it's not even going to",
    "start": "902279",
    "end": "903759"
  },
  {
    "text": "compile few people you're right does not",
    "start": "903759",
    "end": "907800"
  },
  {
    "text": "compile uh but the compiler error here",
    "start": "907800",
    "end": "910279"
  },
  {
    "text": "is kind of interesting it says missing",
    "start": "910279",
    "end": "912040"
  },
  {
    "text": "Lifetime",
    "start": "912040",
    "end": "913240"
  },
  {
    "text": "specifier and so rust has this concept",
    "start": "913240",
    "end": "916000"
  },
  {
    "text": "of lifetimes where if you have a",
    "start": "916000",
    "end": "917959"
  },
  {
    "text": "reference in Rust you can also specify a",
    "start": "917959",
    "end": "920680"
  },
  {
    "text": "lifetime that that reference is valid",
    "start": "920680",
    "end": "923000"
  },
  {
    "text": "for and so that lets you make sure that",
    "start": "923000",
    "end": "926199"
  },
  {
    "text": "if you're ever going to use reference",
    "start": "926199",
    "end": "927759"
  },
  {
    "text": "you're using it at a time when that",
    "start": "927759",
    "end": "929240"
  },
  {
    "text": "reference is valid and if you try to use",
    "start": "929240",
    "end": "931480"
  },
  {
    "text": "that reference at a time when it's not",
    "start": "931480",
    "end": "932880"
  },
  {
    "text": "valid it's not going to",
    "start": "932880",
    "end": "934880"
  },
  {
    "text": "work the other cool thing here is that",
    "start": "934880",
    "end": "937360"
  },
  {
    "text": "the compiler has not only told us that",
    "start": "937360",
    "end": "938880"
  },
  {
    "text": "there's a problem it's also given us a",
    "start": "938880",
    "end": "941360"
  },
  {
    "text": "suggestion on how to fix it says you",
    "start": "941360",
    "end": "943399"
  },
  {
    "text": "know if you add this little tick a",
    "start": "943399",
    "end": "945480"
  },
  {
    "text": "annotation to your reference uh that's",
    "start": "945480",
    "end": "947839"
  },
  {
    "text": "going to that's going to work it says",
    "start": "947839",
    "end": "949079"
  },
  {
    "text": "help consider introducing a named",
    "start": "949079",
    "end": "950600"
  },
  {
    "text": "lifetime parameter so let's try doing",
    "start": "950600",
    "end": "953000"
  },
  {
    "text": "what the compiler tells",
    "start": "953000",
    "end": "954880"
  },
  {
    "text": "us and now we've added these little tick",
    "start": "954880",
    "end": "957720"
  },
  {
    "text": "a references a can be anything it's just",
    "start": "957720",
    "end": "960040"
  },
  {
    "text": "a name but it's a name that specifies",
    "start": "960040",
    "end": "962839"
  },
  {
    "text": "the lifetime of this reference and so",
    "start": "962839",
    "end": "965440"
  },
  {
    "text": "now greeter is parameterized on that uh",
    "start": "965440",
    "end": "968399"
  },
  {
    "text": "a so it says this is not just any",
    "start": "968399",
    "end": "970240"
  },
  {
    "text": "greeter this is specifically a greeter",
    "start": "970240",
    "end": "972519"
  },
  {
    "text": "whose reference lives for you know some",
    "start": "972519",
    "end": "975199"
  },
  {
    "text": "amount of",
    "start": "975199",
    "end": "976720"
  },
  {
    "text": "time and this is actually going to work",
    "start": "976720",
    "end": "978880"
  },
  {
    "text": "here because uh the rust compiler is",
    "start": "978880",
    "end": "982319"
  },
  {
    "text": "also able to tell that world here is a",
    "start": "982319",
    "end": "984800"
  },
  {
    "text": "static string um and so it doesn't need",
    "start": "984800",
    "end": "987079"
  },
  {
    "text": "to be allocated On The Stack",
    "start": "987079",
    "end": "989199"
  },
  {
    "text": "uh locally in that method it can just be",
    "start": "989199",
    "end": "991519"
  },
  {
    "text": "allocated in static memory and therefore",
    "start": "991519",
    "end": "993759"
  },
  {
    "text": "the lifetime of that reference is the",
    "start": "993759",
    "end": "995199"
  },
  {
    "text": "entire lifetime of that program uh and",
    "start": "995199",
    "end": "997959"
  },
  {
    "text": "so since it's able to infer that all of",
    "start": "997959",
    "end": "999519"
  },
  {
    "text": "these lifetimes are going to work out",
    "start": "999519",
    "end": "1001959"
  },
  {
    "text": "and Tada it's going to work so this is a",
    "start": "1001959",
    "end": "1005399"
  },
  {
    "text": "little bit of a trivial example because",
    "start": "1005399",
    "end": "1007040"
  },
  {
    "text": "the static lifetime is just the whole",
    "start": "1007040",
    "end": "1009319"
  },
  {
    "text": "lifetime of the program but you can have",
    "start": "1009319",
    "end": "1011120"
  },
  {
    "text": "much more sophisticated uses of",
    "start": "1011120",
    "end": "1012959"
  },
  {
    "text": "lifetimes in Rust where you have",
    "start": "1012959",
    "end": "1014880"
  },
  {
    "text": "references that are valid for a certain",
    "start": "1014880",
    "end": "1016399"
  },
  {
    "text": "amount of time and when they go away",
    "start": "1016399",
    "end": "1018240"
  },
  {
    "text": "they're not valid anymore but because",
    "start": "1018240",
    "end": "1020519"
  },
  {
    "text": "these lifetime parameters are passed",
    "start": "1020519",
    "end": "1022120"
  },
  {
    "text": "through you can guarantee that you're",
    "start": "1022120",
    "end": "1024000"
  },
  {
    "text": "never going to use a reference outside",
    "start": "1024000",
    "end": "1026079"
  },
  {
    "text": "of its",
    "start": "1026079",
    "end": "1028438"
  },
  {
    "text": "lifetime",
    "start": "1029039",
    "end": "1031880"
  },
  {
    "text": "hooray so that's kind of some of the",
    "start": "1031880",
    "end": "1033798"
  },
  {
    "text": "benefits of rust and some of the",
    "start": "1033799",
    "end": "1035400"
  },
  {
    "text": "problems that help it can help protect",
    "start": "1035400",
    "end": "1037199"
  },
  {
    "text": "you against uh I want to talk now kind",
    "start": "1037199",
    "end": "1039360"
  },
  {
    "text": "of about how it's been for the linardy",
    "start": "1039360",
    "end": "1041400"
  },
  {
    "text": "project specifically uh adopting rust uh",
    "start": "1041400",
    "end": "1044678"
  },
  {
    "text": "way back in",
    "start": "1044679",
    "end": "1046880"
  },
  {
    "text": "2018 so when we were first working on uh",
    "start": "1046880",
    "end": "1050559"
  },
  {
    "text": "Linker 2.0 so we did a big rewrite of",
    "start": "1050559",
    "end": "1052640"
  },
  {
    "text": "linker from Linker 1.0 to linky 2.0 uh",
    "start": "1052640",
    "end": "1055720"
  },
  {
    "text": "this is where we've transitioned from",
    "start": "1055720",
    "end": "1057360"
  },
  {
    "text": "moving uh from writing Linker in Scala",
    "start": "1057360",
    "end": "1060000"
  },
  {
    "text": "to uh writing it in Rust and we had",
    "start": "1060000",
    "end": "1062360"
  },
  {
    "text": "three design principles that we really",
    "start": "1062360",
    "end": "1063880"
  },
  {
    "text": "wanted to stick to keep it simple",
    "start": "1063880",
    "end": "1067320"
  },
  {
    "text": "minimize resource requirements and it",
    "start": "1067320",
    "end": "1069480"
  },
  {
    "text": "should just work out of the box and I",
    "start": "1069480",
    "end": "1072320"
  },
  {
    "text": "want to focus on uh design principle",
    "start": "1072320",
    "end": "1074960"
  },
  {
    "text": "number two minimize resource",
    "start": "1074960",
    "end": "1076679"
  },
  {
    "text": "requirements because yes this has to do",
    "start": "1076679",
    "end": "1079799"
  },
  {
    "text": "with CPU usage you know we're writing it",
    "start": "1079799",
    "end": "1082120"
  },
  {
    "text": "in Rust which is very low level so it's",
    "start": "1082120",
    "end": "1084320"
  },
  {
    "text": "very fast um it doesn't use a lot of CPU",
    "start": "1084320",
    "end": "1087400"
  },
  {
    "text": "compared to other managed languages uh",
    "start": "1087400",
    "end": "1090600"
  },
  {
    "text": "so minimize CPU usage definitely uh",
    "start": "1090600",
    "end": "1093960"
  },
  {
    "text": "minimize memory usage also rust is very",
    "start": "1093960",
    "end": "1096200"
  },
  {
    "text": "good about memory management and being",
    "start": "1096200",
    "end": "1098280"
  },
  {
    "text": "very explicit about when you're",
    "start": "1098280",
    "end": "1099440"
  },
  {
    "text": "allocating memory and when you're not",
    "start": "1099440",
    "end": "1101080"
  },
  {
    "text": "and and how to do that so we were able",
    "start": "1101080",
    "end": "1103000"
  },
  {
    "text": "to keep the memory footprint of the link",
    "start": "1103000",
    "end": "1104919"
  },
  {
    "text": "proxy very very",
    "start": "1104919",
    "end": "1106280"
  },
  {
    "text": "small uh but this also has to do with",
    "start": "1106280",
    "end": "1108520"
  },
  {
    "text": "like human resources so if you need an",
    "start": "1108520",
    "end": "1112200"
  },
  {
    "text": "entire team of linker experts in order",
    "start": "1112200",
    "end": "1114600"
  },
  {
    "text": "to run Linker that's using a lot of",
    "start": "1114600",
    "end": "1118000"
  },
  {
    "text": "resources in terms of you know engineers",
    "start": "1118000",
    "end": "1120840"
  },
  {
    "text": "and brain power and and operational cost",
    "start": "1120840",
    "end": "1124320"
  },
  {
    "text": "and the same thing on the security side",
    "start": "1124320",
    "end": "1125679"
  },
  {
    "text": "if you have a security team that needs",
    "start": "1125679",
    "end": "1127480"
  },
  {
    "text": "to be constantly putting out fires and",
    "start": "1127480",
    "end": "1129600"
  },
  {
    "text": "doing remediations and uh and that kind",
    "start": "1129600",
    "end": "1132000"
  },
  {
    "text": "of thing because of security",
    "start": "1132000",
    "end": "1133039"
  },
  {
    "text": "vulnerabilities in your service mesh",
    "start": "1133039",
    "end": "1134919"
  },
  {
    "text": "well that's also very expensive and uses",
    "start": "1134919",
    "end": "1136520"
  },
  {
    "text": "a lot of resources so I think rust helps",
    "start": "1136520",
    "end": "1139120"
  },
  {
    "text": "with all of those",
    "start": "1139120",
    "end": "1142200"
  },
  {
    "text": "things uh so liity as a service mesh has",
    "start": "1143960",
    "end": "1146760"
  },
  {
    "text": "two different pieces there's the control",
    "start": "1146760",
    "end": "1148400"
  },
  {
    "text": "plane and the data plane uh the data",
    "start": "1148400",
    "end": "1150679"
  },
  {
    "text": "plane is the proxies where all of your",
    "start": "1150679",
    "end": "1153880"
  },
  {
    "text": "network traffic is flowing through the",
    "start": "1153880",
    "end": "1155799"
  },
  {
    "text": "control plane is the piece that uh sits",
    "start": "1155799",
    "end": "1157960"
  },
  {
    "text": "kind of outside of the data path and",
    "start": "1157960",
    "end": "1159400"
  },
  {
    "text": "controls those proxies by pushing",
    "start": "1159400",
    "end": "1161240"
  },
  {
    "text": "configuration down to them by um giving",
    "start": "1161240",
    "end": "1164799"
  },
  {
    "text": "them uh certificates and doing rotation",
    "start": "1164799",
    "end": "1167320"
  },
  {
    "text": "and that kind of thing",
    "start": "1167320",
    "end": "1169159"
  },
  {
    "text": "and for those data plane proxies this is",
    "start": "1169159",
    "end": "1170880"
  },
  {
    "text": "where that requirement that they need to",
    "start": "1170880",
    "end": "1172440"
  },
  {
    "text": "be secure fast and efficient comes in",
    "start": "1172440",
    "end": "1174480"
  },
  {
    "text": "they're in the hot path of your",
    "start": "1174480",
    "end": "1175679"
  },
  {
    "text": "application any kind of slowness uh in",
    "start": "1175679",
    "end": "1178679"
  },
  {
    "text": "the proxies will manifest a slowness in",
    "start": "1178679",
    "end": "1180320"
  },
  {
    "text": "your application any security",
    "start": "1180320",
    "end": "1182000"
  },
  {
    "text": "vulnerabilities in the proxy will result",
    "start": "1182000",
    "end": "1184000"
  },
  {
    "text": "in security vulnerabilities in your",
    "start": "1184000",
    "end": "1185919"
  },
  {
    "text": "application uh so that we cannot",
    "start": "1185919",
    "end": "1187799"
  },
  {
    "text": "compromise on being secure fast or",
    "start": "1187799",
    "end": "1190200"
  },
  {
    "text": "efficient and so for us rust was kind of",
    "start": "1190200",
    "end": "1192880"
  },
  {
    "text": "the only viable Choice it was the only",
    "start": "1192880",
    "end": "1195159"
  },
  {
    "text": "language that we felt like we could",
    "start": "1195159",
    "end": "1196679"
  },
  {
    "text": "accomplish all three of these in",
    "start": "1196679",
    "end": "1200240"
  },
  {
    "text": "but this was back in 2018 and the state",
    "start": "1201360",
    "end": "1203400"
  },
  {
    "text": "of rust back then was a little bit rough",
    "start": "1203400",
    "end": "1205919"
  },
  {
    "text": "for doing this kind of thing uh there",
    "start": "1205919",
    "end": "1208520"
  },
  {
    "text": "were no production ready htpt http2 or",
    "start": "1208520",
    "end": "1211559"
  },
  {
    "text": "grpc implementations at that time so we",
    "start": "1211559",
    "end": "1215120"
  },
  {
    "text": "helped build them uh so hyper H2 and",
    "start": "1215120",
    "end": "1217799"
  },
  {
    "text": "hypertonic the libraries that we helped",
    "start": "1217799",
    "end": "1220760"
  },
  {
    "text": "to uh uh bring to",
    "start": "1220760",
    "end": "1224080"
  },
  {
    "text": "existence and async rust uh in general",
    "start": "1224080",
    "end": "1227080"
  },
  {
    "text": "was still kind of in its infin",
    "start": "1227080",
    "end": "1229280"
  },
  {
    "text": "so we invested uh a lot in projects in",
    "start": "1229280",
    "end": "1232400"
  },
  {
    "text": "the ecosystem to kind of make uh the",
    "start": "1232400",
    "end": "1235520"
  },
  {
    "text": "foundations on which Linker was built so",
    "start": "1235520",
    "end": "1238320"
  },
  {
    "text": "for example we invested heavily in Tokyo",
    "start": "1238320",
    "end": "1240360"
  },
  {
    "text": "which is rust's async runtime for doing",
    "start": "1240360",
    "end": "1242200"
  },
  {
    "text": "async",
    "start": "1242200",
    "end": "1244120"
  },
  {
    "text": "IO uh in hyper which is the fast safe",
    "start": "1244120",
    "end": "1246799"
  },
  {
    "text": "and correct HTTP implementation for",
    "start": "1246799",
    "end": "1248720"
  },
  {
    "text": "http1 and",
    "start": "1248720",
    "end": "1251679"
  },
  {
    "text": "http2 and tracing which is an async",
    "start": "1251799",
    "end": "1254240"
  },
  {
    "text": "aware logging Library which was created",
    "start": "1254240",
    "end": "1256600"
  },
  {
    "text": "for linkerd but has since uh kind of",
    "start": "1256600",
    "end": "1259480"
  },
  {
    "text": "gained popularity and is used widely",
    "start": "1259480",
    "end": "1261080"
  },
  {
    "text": "throughout the",
    "start": "1261080",
    "end": "1263440"
  },
  {
    "text": "ecosystem and so this choice to adopt",
    "start": "1264000",
    "end": "1266919"
  },
  {
    "text": "rust in lity has paid huge dividends for",
    "start": "1266919",
    "end": "1269080"
  },
  {
    "text": "us um in terms of latency so this is a",
    "start": "1269080",
    "end": "1273120"
  },
  {
    "text": "benchmark of Link against Isa that was",
    "start": "1273120",
    "end": "1275240"
  },
  {
    "text": "done back in 2021 if you're interested",
    "start": "1275240",
    "end": "1278080"
  },
  {
    "text": "in seeing kind of the methodology or the",
    "start": "1278080",
    "end": "1280640"
  },
  {
    "text": "uh how to reproduce these results",
    "start": "1280640",
    "end": "1282080"
  },
  {
    "text": "there's a link and I'll share more Links",
    "start": "1282080",
    "end": "1284200"
  },
  {
    "text": "at the end uh but you see at the top",
    "start": "1284200",
    "end": "1286640"
  },
  {
    "text": "there in the blue is the Baseline uh so",
    "start": "1286640",
    "end": "1289440"
  },
  {
    "text": "that's just the latency of the",
    "start": "1289440",
    "end": "1290520"
  },
  {
    "text": "application by itself in the teal or or",
    "start": "1290520",
    "end": "1293159"
  },
  {
    "text": "seafoam that's the latency of the",
    "start": "1293159",
    "end": "1295240"
  },
  {
    "text": "application with linkerd added and then",
    "start": "1295240",
    "end": "1297240"
  },
  {
    "text": "in Gray it's the latency of the",
    "start": "1297240",
    "end": "1299080"
  },
  {
    "text": "application with ISO added and you can",
    "start": "1299080",
    "end": "1301440"
  },
  {
    "text": "see kind of at the p50 latency you know",
    "start": "1301440",
    "end": "1303880"
  },
  {
    "text": "lity is a little bit faster but as you",
    "start": "1303880",
    "end": "1306760"
  },
  {
    "text": "go out to the longer and longer tail",
    "start": "1306760",
    "end": "1308159"
  },
  {
    "text": "latencies that difference becomes more",
    "start": "1308159",
    "end": "1309840"
  },
  {
    "text": "and more",
    "start": "1309840",
    "end": "1312200"
  },
  {
    "text": "Stark so adopting wrestles also pay",
    "start": "1313000",
    "end": "1315360"
  },
  {
    "text": "dividends in resource efficiency so this",
    "start": "1315360",
    "end": "1317120"
  },
  {
    "text": "is CPU and memory consumption of the",
    "start": "1317120",
    "end": "1319679"
  },
  {
    "text": "linerty proxy versus the envoy proxy",
    "start": "1319679",
    "end": "1322559"
  },
  {
    "text": "Ando and you can see again like a huge",
    "start": "1322559",
    "end": "1325120"
  },
  {
    "text": "huge difference",
    "start": "1325120",
    "end": "1327799"
  },
  {
    "text": "here and it's also paid dividends in",
    "start": "1329360",
    "end": "1331679"
  },
  {
    "text": "security so these are Envoy",
    "start": "1331679",
    "end": "1334440"
  },
  {
    "text": "vulnerabilities uh and what you might",
    "start": "1334440",
    "end": "1336200"
  },
  {
    "text": "notice in this table is that almost all",
    "start": "1336200",
    "end": "1338960"
  },
  {
    "text": "of these or or a lot of these anyway are",
    "start": "1338960",
    "end": "1340840"
  },
  {
    "text": "in that memory corruption uh column so",
    "start": "1340840",
    "end": "1343520"
  },
  {
    "text": "these are the types of errors that Russ",
    "start": "1343520",
    "end": "1345520"
  },
  {
    "text": "specifically prevents and specifically",
    "start": "1345520",
    "end": "1348559"
  },
  {
    "text": "helps you to",
    "start": "1348559",
    "end": "1351080"
  },
  {
    "text": "avoid so this is all talking about the",
    "start": "1351640",
    "end": "1353880"
  },
  {
    "text": "data plane uh those proxies were all the",
    "start": "1353880",
    "end": "1355919"
  },
  {
    "text": "network traffic is going through what",
    "start": "1355919",
    "end": "1357240"
  },
  {
    "text": "about the control plane well the control",
    "start": "1357240",
    "end": "1359880"
  },
  {
    "text": "plane is not in the application's data",
    "start": "1359880",
    "end": "1361600"
  },
  {
    "text": "path right all of your requests aren't",
    "start": "1361600",
    "end": "1363240"
  },
  {
    "text": "flowing through the control plane is",
    "start": "1363240",
    "end": "1364400"
  },
  {
    "text": "just responsible for managing the",
    "start": "1364400",
    "end": "1366000"
  },
  {
    "text": "control plane or managing the data plane",
    "start": "1366000",
    "end": "1369120"
  },
  {
    "text": "um so you know if a a configuration",
    "start": "1369120",
    "end": "1372520"
  },
  {
    "text": "change takes a few more milliseconds to",
    "start": "1372520",
    "end": "1375279"
  },
  {
    "text": "to propagate to all the proxies you know",
    "start": "1375279",
    "end": "1377159"
  },
  {
    "text": "that's not the end of the world",
    "start": "1377159",
    "end": "1378960"
  },
  {
    "text": "world and so because of that using a",
    "start": "1378960",
    "end": "1381400"
  },
  {
    "text": "manag language for the control plane is",
    "start": "1381400",
    "end": "1382919"
  },
  {
    "text": "actually acceptable you know it's it's",
    "start": "1382919",
    "end": "1384919"
  },
  {
    "text": "fine uh so we used go to build the",
    "start": "1384919",
    "end": "1387600"
  },
  {
    "text": "control plane and the CLI of linker and",
    "start": "1387600",
    "end": "1390640"
  },
  {
    "text": "this was a really great decision because",
    "start": "1390640",
    "end": "1392520"
  },
  {
    "text": "it let us very easily integrate with the",
    "start": "1392520",
    "end": "1394240"
  },
  {
    "text": "rest of the kubernetes ecosystem we got",
    "start": "1394240",
    "end": "1396559"
  },
  {
    "text": "access to a lot of libraries for",
    "start": "1396559",
    "end": "1398960"
  },
  {
    "text": "interacting with the kubernetes API um",
    "start": "1398960",
    "end": "1402640"
  },
  {
    "text": "and it made that process really really",
    "start": "1402640",
    "end": "1405520"
  },
  {
    "text": "easy um but with that said in 20 22 we",
    "start": "1405520",
    "end": "1408480"
  },
  {
    "text": "introduced a new controller into the",
    "start": "1408480",
    "end": "1410400"
  },
  {
    "text": "control Plan called the policy",
    "start": "1410400",
    "end": "1411600"
  },
  {
    "text": "controller and this was written in Rust",
    "start": "1411600",
    "end": "1414400"
  },
  {
    "text": "um and there's a lot more detail about",
    "start": "1414400",
    "end": "1416159"
  },
  {
    "text": "that in Eliza's uh cubon North America",
    "start": "1416159",
    "end": "1418840"
  },
  {
    "text": "talk from last year which is linked",
    "start": "1418840",
    "end": "1420840"
  },
  {
    "text": "there um and it used a library called",
    "start": "1420840",
    "end": "1423159"
  },
  {
    "text": "cubars which is a rust library for",
    "start": "1423159",
    "end": "1425919"
  },
  {
    "text": "interacting with the kubernetes API",
    "start": "1425919",
    "end": "1428520"
  },
  {
    "text": "which is great uh but it doesn't kind of",
    "start": "1428520",
    "end": "1430679"
  },
  {
    "text": "have the same maturity or widespread",
    "start": "1430679",
    "end": "1432760"
  },
  {
    "text": "adoption that client go does which is",
    "start": "1432760",
    "end": "1434880"
  },
  {
    "text": "the the GL the go",
    "start": "1434880",
    "end": "1436720"
  },
  {
    "text": "equivalent and and there were some",
    "start": "1436720",
    "end": "1438679"
  },
  {
    "text": "things that were really difficult to do",
    "start": "1438679",
    "end": "1440000"
  },
  {
    "text": "in kubs specifically around kind of",
    "start": "1440000",
    "end": "1442440"
  },
  {
    "text": "watching kubernetes resources for State",
    "start": "1442440",
    "end": "1444240"
  },
  {
    "text": "changes and doing reconciliation loops",
    "start": "1444240",
    "end": "1446640"
  },
  {
    "text": "and that kind of",
    "start": "1446640",
    "end": "1449200"
  },
  {
    "text": "thing uh so we developed something",
    "start": "1449600",
    "end": "1452320"
  },
  {
    "text": "called kubert This is a library for",
    "start": "1452320",
    "end": "1454200"
  },
  {
    "text": "doing uh writing controllers using",
    "start": "1454200",
    "end": "1457520"
  },
  {
    "text": "kubs uh and this made it a lot easier",
    "start": "1457520",
    "end": "1459720"
  },
  {
    "text": "this kind of bridged that Gap and gave",
    "start": "1459720",
    "end": "1461200"
  },
  {
    "text": "us that client go like functionality in",
    "start": "1461200",
    "end": "1463640"
  },
  {
    "text": "Rust so if you're at all interested in",
    "start": "1463640",
    "end": "1465559"
  },
  {
    "text": "writing a kubernetes controller in Rust",
    "start": "1465559",
    "end": "1467919"
  },
  {
    "text": "highly recommend you check out kubert",
    "start": "1467919",
    "end": "1469279"
  },
  {
    "text": "it's very cool made it very",
    "start": "1469279",
    "end": "1472600"
  },
  {
    "text": "easy so why does this matter well if",
    "start": "1472600",
    "end": "1476279"
  },
  {
    "text": "you're doing anything with financial",
    "start": "1476279",
    "end": "1477720"
  },
  {
    "text": "data Health Data any sensitive data",
    "start": "1477720",
    "end": "1479760"
  },
  {
    "text": "whatsoever you owe it to your users to",
    "start": "1479760",
    "end": "1481760"
  },
  {
    "text": "avoid memory unsafe languages this is",
    "start": "1481760",
    "end": "1484440"
  },
  {
    "text": "kind of not a risk you really want to be",
    "start": "1484440",
    "end": "1487799"
  },
  {
    "text": "taking and if perform performance also",
    "start": "1487799",
    "end": "1490640"
  },
  {
    "text": "matters you know if you need the Best of",
    "start": "1490640",
    "end": "1492799"
  },
  {
    "text": "Both Worlds rust might be the right",
    "start": "1492799",
    "end": "1494960"
  },
  {
    "text": "option for",
    "start": "1494960",
    "end": "1496760"
  },
  {
    "text": "you",
    "start": "1496760",
    "end": "1498600"
  },
  {
    "text": "so if you're thinking about it if this",
    "start": "1498600",
    "end": "1500000"
  },
  {
    "text": "sounds appealing to you if this sounds",
    "start": "1500000",
    "end": "1501799"
  },
  {
    "text": "like uh similar to your requirements uh",
    "start": "1501799",
    "end": "1505320"
  },
  {
    "text": "give it a try try rust it's uh been",
    "start": "1505320",
    "end": "1507880"
  },
  {
    "text": "incredible for",
    "start": "1507880",
    "end": "1509240"
  },
  {
    "text": "us uh and we really think that that deal",
    "start": "1509240",
    "end": "1512240"
  },
  {
    "text": "like it uh this is a quote from",
    "start": "1512240",
    "end": "1515120"
  },
  {
    "text": "Alejandra who's another one of the",
    "start": "1515120",
    "end": "1516240"
  },
  {
    "text": "linkerd maintainers who didn't have any",
    "start": "1516240",
    "end": "1518200"
  },
  {
    "text": "rust experience prior to working on",
    "start": "1518200",
    "end": "1520000"
  },
  {
    "text": "linkerd and he says it doesn't cease to",
    "start": "1520000",
    "end": "1522559"
  },
  {
    "text": "amaze me that when something finally",
    "start": "1522559",
    "end": "1524200"
  },
  {
    "text": "compiles in Rust there's a high chance",
    "start": "1524200",
    "end": "1526000"
  },
  {
    "text": "the program will simply work as intended",
    "start": "1526000",
    "end": "1529679"
  },
  {
    "text": "love",
    "start": "1529760",
    "end": "1531279"
  },
  {
    "text": "it um and then Our advice to the CNC",
    "start": "1531279",
    "end": "1534080"
  },
  {
    "text": "cncf ecosystem is fund rust open source",
    "start": "1534080",
    "end": "1537159"
  },
  {
    "text": "projects uh I mean if security matters",
    "start": "1537159",
    "end": "1539520"
  },
  {
    "text": "to you invest in",
    "start": "1539520",
    "end": "1541840"
  },
  {
    "text": "it so uh we believe that the future of",
    "start": "1541840",
    "end": "1544840"
  },
  {
    "text": "the cloud will be built in rusts future",
    "start": "1544840",
    "end": "1547200"
  },
  {
    "text": "of linity certainly will be thank you",
    "start": "1547200",
    "end": "1550000"
  },
  {
    "text": "very",
    "start": "1550000",
    "end": "1551020"
  },
  {
    "text": "[Applause]",
    "start": "1551020",
    "end": "1554640"
  },
  {
    "text": "much",
    "start": "1556679",
    "end": "1559679"
  },
  {
    "text": "do you want to take questions yeah two",
    "start": "1570679",
    "end": "1572840"
  },
  {
    "text": "minutes yeah let's do it so one question",
    "start": "1572840",
    "end": "1576720"
  },
  {
    "text": "okay sorry I'm just curious uh I was",
    "start": "1576720",
    "end": "1580120"
  },
  {
    "text": "looking at the performance numbers uh",
    "start": "1580120",
    "end": "1582080"
  },
  {
    "text": "compare I mean I can understand uh the",
    "start": "1582080",
    "end": "1584200"
  },
  {
    "text": "memory issues that enoy has with sto but",
    "start": "1584200",
    "end": "1587399"
  },
  {
    "text": "uh",
    "start": "1587399",
    "end": "1588600"
  },
  {
    "text": "is there an explanation of why uh Linker",
    "start": "1588600",
    "end": "1591840"
  },
  {
    "text": "with thrust is doing much better than",
    "start": "1591840",
    "end": "1593799"
  },
  {
    "text": "ISO even in terms of performance",
    "start": "1593799",
    "end": "1595480"
  },
  {
    "text": "considering that C++ and rust are",
    "start": "1595480",
    "end": "1597840"
  },
  {
    "text": "comparable yeah yeah good question um I",
    "start": "1597840",
    "end": "1600720"
  },
  {
    "text": "think a lot of that discrepancy comes",
    "start": "1600720",
    "end": "1602600"
  },
  {
    "text": "from the fact that Envoy is a very",
    "start": "1602600",
    "end": "1604520"
  },
  {
    "text": "general purpose piece of software it's a",
    "start": "1604520",
    "end": "1606200"
  },
  {
    "text": "very powerful proxy that can do a lot of",
    "start": "1606200",
    "end": "1607760"
  },
  {
    "text": "different things um Linker the linker2",
    "start": "1607760",
    "end": "1610840"
  },
  {
    "text": "proxy was written specifically for",
    "start": "1610840",
    "end": "1612200"
  },
  {
    "text": "Linker it does nothing else so it's very",
    "start": "1612200",
    "end": "1614320"
  },
  {
    "text": "purpose-built and it can kind of avoid a",
    "start": "1614320",
    "end": "1616679"
  },
  {
    "text": "lot of overhead because it's purpose",
    "start": "1616679",
    "end": "1620360"
  },
  {
    "text": "built oh well thank you very much I'll",
    "start": "1624440",
    "end": "1626600"
  },
  {
    "text": "be at the buoyant Booth if you have more",
    "start": "1626600",
    "end": "1628000"
  },
  {
    "text": "questions you want to talk to me you",
    "start": "1628000",
    "end": "1629200"
  },
  {
    "text": "know come find me I'll be there for the",
    "start": "1629200",
    "end": "1630600"
  },
  {
    "text": "rest of the",
    "start": "1630600",
    "end": "1632919"
  },
  {
    "text": "conference",
    "start": "1634440",
    "end": "1637440"
  }
]