[
  {
    "text": "let's go ahead and get started so um",
    "start": "399",
    "end": "2760"
  },
  {
    "text": "just a little bit ago in the keynote an",
    "start": "2760",
    "end": "4720"
  },
  {
    "text": "N touched on some pain that developers",
    "start": "4720",
    "end": "7439"
  },
  {
    "text": "have historically had when managing",
    "start": "7439",
    "end": "9400"
  },
  {
    "text": "protocol buffers in a big system um in",
    "start": "9400",
    "end": "11759"
  },
  {
    "text": "this talk uh I Richard and Terry are",
    "start": "11759",
    "end": "14360"
  },
  {
    "text": "going to give you a glimpse at a new gcp",
    "start": "14360",
    "end": "16840"
  },
  {
    "text": "specific registry we've been working on",
    "start": "16840",
    "end": "19199"
  },
  {
    "text": "that will help you alleviate that pain",
    "start": "19199",
    "end": "21400"
  },
  {
    "text": "and sort of supercharge your developer",
    "start": "21400",
    "end": "23160"
  },
  {
    "text": "velocity when working with grpc and with",
    "start": "23160",
    "end": "25480"
  },
  {
    "text": "protocol buffers in general so in this",
    "start": "25480",
    "end": "27480"
  },
  {
    "text": "session we're going to revisit what you",
    "start": "27480",
    "end": "29119"
  },
  {
    "text": "heard in that keynote and then go into",
    "start": "29119",
    "end": "31000"
  },
  {
    "text": "some more depth on the problems the",
    "start": "31000",
    "end": "32800"
  },
  {
    "text": "registry will solve and how it all",
    "start": "32800",
    "end": "35600"
  },
  {
    "text": "works so this is sort of the 10,000 foot",
    "start": "35600",
    "end": "38480"
  },
  {
    "text": "view of the registry uh we believe this",
    "start": "38480",
    "end": "40600"
  },
  {
    "text": "will become a core part of your",
    "start": "40600",
    "end": "41960"
  },
  {
    "text": "development workflows over the coming",
    "start": "41960",
    "end": "43760"
  },
  {
    "text": "months and years there are some very",
    "start": "43760",
    "end": "45680"
  },
  {
    "text": "real frictions in the developer flow for",
    "start": "45680",
    "end": "47640"
  },
  {
    "text": "grpc and protuff today that the new",
    "start": "47640",
    "end": "49520"
  },
  {
    "text": "registry will resolve so I'll hand",
    "start": "49520",
    "end": "51600"
  },
  {
    "text": "things over to Terry to outline some of",
    "start": "51600",
    "end": "53640"
  },
  {
    "text": "those",
    "start": "53640",
    "end": "55840"
  },
  {
    "text": "problems all right thank you Richard um",
    "start": "56399",
    "end": "59480"
  },
  {
    "text": "so when managing the protobot files of",
    "start": "59480",
    "end": "61840"
  },
  {
    "text": "your system and the systems you depend",
    "start": "61840",
    "end": "63760"
  },
  {
    "text": "on there are generally four areas you",
    "start": "63760",
    "end": "65920"
  },
  {
    "text": "need to think about you have to think",
    "start": "65920",
    "end": "68080"
  },
  {
    "text": "about in what repositories are the protu",
    "start": "68080",
    "end": "70360"
  },
  {
    "text": "files stored in how are the protuff",
    "start": "70360",
    "end": "72600"
  },
  {
    "text": "files shared across those",
    "start": "72600",
    "end": "74520"
  },
  {
    "text": "repositories and how you generate code",
    "start": "74520",
    "end": "77360"
  },
  {
    "text": "from those protos and also if you're a",
    "start": "77360",
    "end": "79840"
  },
  {
    "text": "library author you have to think",
    "start": "79840",
    "end": "82079"
  },
  {
    "text": "consider distribution how do you",
    "start": "82079",
    "end": "84240"
  },
  {
    "text": "distribute the generated",
    "start": "84240",
    "end": "86920"
  },
  {
    "text": "code so uh let's look at some of the",
    "start": "86920",
    "end": "89159"
  },
  {
    "text": "answers people have come up for uh",
    "start": "89159",
    "end": "90920"
  },
  {
    "text": "storing the protos if your organization",
    "start": "90920",
    "end": "94200"
  },
  {
    "text": "uses a monor repo you might be wondering",
    "start": "94200",
    "end": "97119"
  },
  {
    "text": "what all the fuss is about all your",
    "start": "97119",
    "end": "99119"
  },
  {
    "text": "source code including Proto files for",
    "start": "99119",
    "end": "101079"
  },
  {
    "text": "your project and all your dependent",
    "start": "101079",
    "end": "102759"
  },
  {
    "text": "projects is all in a single directory",
    "start": "102759",
    "end": "104880"
  },
  {
    "text": "structure where you're free to refer to",
    "start": "104880",
    "end": "107200"
  },
  {
    "text": "the protos and build them anywhere you",
    "start": "107200",
    "end": "109920"
  },
  {
    "text": "choose this is easy but most",
    "start": "109920",
    "end": "112399"
  },
  {
    "text": "organizations uh do not use amono repo",
    "start": "112399",
    "end": "115399"
  },
  {
    "text": "and most likely you are looking at a",
    "start": "115399",
    "end": "117039"
  },
  {
    "text": "situation where your project and its",
    "start": "117039",
    "end": "119320"
  },
  {
    "text": "dependence",
    "start": "119320",
    "end": "120799"
  },
  {
    "text": "are spread across multiple",
    "start": "120799",
    "end": "123759"
  },
  {
    "text": "repositories with multiple repositories",
    "start": "123759",
    "end": "126200"
  },
  {
    "text": "you need to decide where the Proto files",
    "start": "126200",
    "end": "128080"
  },
  {
    "text": "for your services live they need to be",
    "start": "128080",
    "end": "130720"
  },
  {
    "text": "available to both the server",
    "start": "130720",
    "end": "132239"
  },
  {
    "text": "implementation and any client",
    "start": "132239",
    "end": "134239"
  },
  {
    "text": "applications a common approach is to",
    "start": "134239",
    "end": "136440"
  },
  {
    "text": "store them in the serers",
    "start": "136440",
    "end": "138680"
  },
  {
    "text": "repository this works to a point but",
    "start": "138680",
    "end": "141800"
  },
  {
    "text": "what if you use two different",
    "start": "141800",
    "end": "143400"
  },
  {
    "text": "implementations of the same service",
    "start": "143400",
    "end": "145879"
  },
  {
    "text": "definition maybe your next gen server is",
    "start": "145879",
    "end": "148280"
  },
  {
    "text": "running alongside your old one",
    "start": "148280",
    "end": "150560"
  },
  {
    "text": "as you migrate over or you use two",
    "start": "150560",
    "end": "153160"
  },
  {
    "text": "vendors that implement the same service",
    "start": "153160",
    "end": "155440"
  },
  {
    "text": "uh definition where is the source of",
    "start": "155440",
    "end": "157599"
  },
  {
    "text": "Truth for the service definition protop",
    "start": "157599",
    "end": "159720"
  },
  {
    "text": "file it's not so obvious",
    "start": "159720",
    "end": "163080"
  },
  {
    "text": "anymore perhaps the most popular",
    "start": "163080",
    "end": "165720"
  },
  {
    "text": "solution in recent years has been what's",
    "start": "165720",
    "end": "167680"
  },
  {
    "text": "called a protuff monor repo instead of",
    "start": "167680",
    "end": "170720"
  },
  {
    "text": "taking on the burden of a full mono repo",
    "start": "170720",
    "end": "173319"
  },
  {
    "text": "you maintain a single repository just",
    "start": "173319",
    "end": "176080"
  },
  {
    "text": "for your protuff files the challenge",
    "start": "176080",
    "end": "178959"
  },
  {
    "text": "with this approach is to assure that",
    "start": "178959",
    "end": "180519"
  },
  {
    "text": "your protobuf monor repo Remains the",
    "start": "180519",
    "end": "182440"
  },
  {
    "text": "source of Truth your success there is",
    "start": "182440",
    "end": "185440"
  },
  {
    "text": "dependent on your approach to sharing",
    "start": "185440",
    "end": "187319"
  },
  {
    "text": "the Proto files with repos that depend",
    "start": "187319",
    "end": "189720"
  },
  {
    "text": "on",
    "start": "189720",
    "end": "190959"
  },
  {
    "text": "them let's look at some ways that people",
    "start": "190959",
    "end": "193799"
  },
  {
    "text": "have um come up with to share protuff",
    "start": "193799",
    "end": "196879"
  },
  {
    "text": "files if your build system supports it",
    "start": "196879",
    "end": "199920"
  },
  {
    "text": "you could have it download an archive of",
    "start": "199920",
    "end": "202000"
  },
  {
    "text": "the remote repository with the protuff",
    "start": "202000",
    "end": "204599"
  },
  {
    "text": "files for you here you can see how you",
    "start": "204599",
    "end": "207080"
  },
  {
    "text": "would do it with basil it supports this",
    "start": "207080",
    "end": "210159"
  },
  {
    "text": "this in a way lets you simulate a mono",
    "start": "210159",
    "end": "212720"
  },
  {
    "text": "repo by pulling down your external",
    "start": "212720",
    "end": "215120"
  },
  {
    "text": "dependencies and merging them with your",
    "start": "215120",
    "end": "216920"
  },
  {
    "text": "local",
    "start": "216920",
    "end": "217799"
  },
  {
    "text": "repo this is a possible approach but can",
    "start": "217799",
    "end": "221120"
  },
  {
    "text": "be fragile and you might face some uh",
    "start": "221120",
    "end": "223280"
  },
  {
    "text": "Diamond dependency",
    "start": "223280",
    "end": "225560"
  },
  {
    "text": "issues you could also get more creative",
    "start": "225560",
    "end": "228120"
  },
  {
    "text": "and write a custom shell script to",
    "start": "228120",
    "end": "230000"
  },
  {
    "text": "download and compile remote protos for",
    "start": "230000",
    "end": "232840"
  },
  {
    "text": "you maybe throw in some said work to",
    "start": "232840",
    "end": "235799"
  },
  {
    "text": "massage the generated code to work with",
    "start": "235799",
    "end": "237720"
  },
  {
    "text": "your build system it's not that elegant",
    "start": "237720",
    "end": "240640"
  },
  {
    "text": "but it's better than doing everything by",
    "start": "240640",
    "end": "243480"
  },
  {
    "text": "hand or you could do everything by hand",
    "start": "243480",
    "end": "246799"
  },
  {
    "text": "you can copy and paste the protos from",
    "start": "246799",
    "end": "248959"
  },
  {
    "text": "the other repository and check them in",
    "start": "248959",
    "end": "251400"
  },
  {
    "text": "done the obvious danger here is that",
    "start": "251400",
    "end": "254280"
  },
  {
    "text": "over time the protos can get out of sync",
    "start": "254280",
    "end": "257440"
  },
  {
    "text": "and you can even end up with overthe",
    "start": "257440",
    "end": "259199"
  },
  {
    "text": "wireing compatibilities that can lead to",
    "start": "259199",
    "end": "261799"
  },
  {
    "text": "outages I hope you haven't been",
    "start": "261800",
    "end": "264240"
  },
  {
    "text": "there if you're using git you have the",
    "start": "264240",
    "end": "267120"
  },
  {
    "text": "option of using submodules subm modules",
    "start": "267120",
    "end": "269919"
  },
  {
    "text": "allow you to attach another repo as a",
    "start": "269919",
    "end": "271880"
  },
  {
    "text": "subdirectory in your repo uh there's a",
    "start": "271880",
    "end": "275120"
  },
  {
    "text": "little bit of extra work in the git CLI",
    "start": "275120",
    "end": "277440"
  },
  {
    "text": "to keep your subm modules updated but",
    "start": "277440",
    "end": "279520"
  },
  {
    "text": "overall this can work fairly",
    "start": "279520",
    "end": "282919"
  },
  {
    "text": "well now that you found a home for your",
    "start": "282919",
    "end": "285759"
  },
  {
    "text": "protos and you figured out a way to",
    "start": "285759",
    "end": "287400"
  },
  {
    "text": "distribute them uh to all the other",
    "start": "287400",
    "end": "289759"
  },
  {
    "text": "repos you run into the next unusual",
    "start": "289759",
    "end": "292479"
  },
  {
    "text": "aspect of protos the protoc compiler",
    "start": "292479",
    "end": "295120"
  },
  {
    "text": "outputs more code to be compiled this",
    "start": "295120",
    "end": "298160"
  },
  {
    "text": "means that any build systems supporting",
    "start": "298160",
    "end": "300120"
  },
  {
    "text": "protos requires an extra layer of added",
    "start": "300120",
    "end": "304240"
  },
  {
    "text": "complexity the grpc language teams have",
    "start": "304240",
    "end": "307120"
  },
  {
    "text": "worked hard to provide language specific",
    "start": "307120",
    "end": "309479"
  },
  {
    "text": "build system plugins to generate both",
    "start": "309479",
    "end": "312639"
  },
  {
    "text": "your message serialization",
    "start": "312639",
    "end": "314560"
  },
  {
    "text": "deserialization and your stub and",
    "start": "314560",
    "end": "316360"
  },
  {
    "text": "service code but these plugins can be",
    "start": "316360",
    "end": "319560"
  },
  {
    "text": "Troublesome they almost always depend on",
    "start": "319560",
    "end": "322400"
  },
  {
    "text": "nating Native code protoc",
    "start": "322400",
    "end": "325240"
  },
  {
    "text": "implementation uh which means that",
    "start": "325240",
    "end": "327319"
  },
  {
    "text": "certain unsupported platforms are going",
    "start": "327319",
    "end": "329360"
  },
  {
    "text": "to miss",
    "start": "329360",
    "end": "330400"
  },
  {
    "text": "out in addition many languages have",
    "start": "330400",
    "end": "333240"
  },
  {
    "text": "multiple supported build systems if we",
    "start": "333240",
    "end": "336240"
  },
  {
    "text": "don't have a PL plugin for one the users",
    "start": "336240",
    "end": "338759"
  },
  {
    "text": "have to fend for themselves also",
    "start": "338759",
    "end": "341600"
  },
  {
    "text": "sometimes people have off-the-wall",
    "start": "341600",
    "end": "343240"
  },
  {
    "text": "combinations of language and build",
    "start": "343240",
    "end": "345199"
  },
  {
    "text": "systems for example needing to generate",
    "start": "345199",
    "end": "347400"
  },
  {
    "text": "python grpc code uh from within",
    "start": "347400",
    "end": "350759"
  },
  {
    "text": "gradal this",
    "start": "350759",
    "end": "353080"
  },
  {
    "text": "happens all of this might lead to people",
    "start": "353080",
    "end": "355880"
  },
  {
    "text": "to resort to Shell scripts to generate",
    "start": "355880",
    "end": "357960"
  },
  {
    "text": "their code here's one that's been",
    "start": "357960",
    "end": "360120"
  },
  {
    "text": "spotted in the",
    "start": "360120",
    "end": "362240"
  },
  {
    "text": "wild but the worst situation is in many",
    "start": "362240",
    "end": "365280"
  },
  {
    "text": "small projects where there's no",
    "start": "365280",
    "end": "367199"
  },
  {
    "text": "integration with the build system at all",
    "start": "367199",
    "end": "369919"
  },
  {
    "text": "in these projects you would generate",
    "start": "369919",
    "end": "371479"
  },
  {
    "text": "code from the protos once and check the",
    "start": "371479",
    "end": "374199"
  },
  {
    "text": "generated code into Source control",
    "start": "374199",
    "end": "376759"
  },
  {
    "text": "possibly with hand edits to make it work",
    "start": "376759",
    "end": "378880"
  },
  {
    "text": "for you the next time you need to",
    "start": "378880",
    "end": "381160"
  },
  {
    "text": "regenerate the code you would have to go",
    "start": "381160",
    "end": "383120"
  },
  {
    "text": "through the whole cycle again uh and",
    "start": "383120",
    "end": "385800"
  },
  {
    "text": "hope that the person that has to do it",
    "start": "385800",
    "end": "387680"
  },
  {
    "text": "next time does it right as well",
    "start": "387680",
    "end": "391560"
  },
  {
    "text": "um after you've generated your code you",
    "start": "392520",
    "end": "396479"
  },
  {
    "text": "might be done but if you're not just an",
    "start": "396479",
    "end": "398919"
  },
  {
    "text": "application but a library you probably",
    "start": "398919",
    "end": "401440"
  },
  {
    "text": "want to distribute the generated code as",
    "start": "401440",
    "end": "404360"
  },
  {
    "text": "well as your protos source files and you",
    "start": "404360",
    "end": "406960"
  },
  {
    "text": "may want to share these artifacts",
    "start": "406960",
    "end": "408400"
  },
  {
    "text": "between multiple dependent",
    "start": "408400",
    "end": "410479"
  },
  {
    "text": "repositories this can be difficult",
    "start": "410479",
    "end": "412680"
  },
  {
    "text": "because to build code for a message B",
    "start": "412680",
    "end": "415680"
  },
  {
    "text": "that contains a message a defined in a",
    "start": "415680",
    "end": "418840"
  },
  {
    "text": "different repo you need not only the",
    "start": "418840",
    "end": "420919"
  },
  {
    "text": "full Proto dependency Source tree but",
    "start": "420919",
    "end": "423560"
  },
  {
    "text": "also the generated code for a or the",
    "start": "423560",
    "end": "426000"
  },
  {
    "text": "generated artifact for it if you don't",
    "start": "426000",
    "end": "428840"
  },
  {
    "text": "have this then the alternative would be",
    "start": "428840",
    "end": "431160"
  },
  {
    "text": "to regenerate that code or artifact and",
    "start": "431160",
    "end": "434680"
  },
  {
    "text": "when you compile everything together you",
    "start": "434680",
    "end": "436560"
  },
  {
    "text": "could end up with duplicate",
    "start": "436560",
    "end": "440039"
  },
  {
    "text": "symbols you can use your language",
    "start": "441000",
    "end": "443560"
  },
  {
    "text": "specific packaging system with some",
    "start": "443560",
    "end": "445599"
  },
  {
    "text": "established patterns on how to package",
    "start": "445599",
    "end": "447360"
  },
  {
    "text": "protos and generate grpc code",
    "start": "447360",
    "end": "450360"
  },
  {
    "text": "for example with Java you could build a",
    "start": "450360",
    "end": "451960"
  },
  {
    "text": "jar file and Python A Wheel file you can",
    "start": "451960",
    "end": "455039"
  },
  {
    "text": "then use uh package manager to",
    "start": "455039",
    "end": "457599"
  },
  {
    "text": "distribute for example Maven for Java or",
    "start": "457599",
    "end": "460240"
  },
  {
    "text": "pip for",
    "start": "460240",
    "end": "462599"
  },
  {
    "text": "python now you can for example",
    "start": "462599",
    "end": "464840"
  },
  {
    "text": "distribute a client for your service",
    "start": "464840",
    "end": "466599"
  },
  {
    "text": "that comes with nice documentation and",
    "start": "466599",
    "end": "468919"
  },
  {
    "text": "handles task like input validation that",
    "start": "468919",
    "end": "471560"
  },
  {
    "text": "you want to happen on the client side of",
    "start": "471560",
    "end": "474240"
  },
  {
    "text": "course if the users of your service are",
    "start": "474240",
    "end": "476360"
  },
  {
    "text": "on multiple languages um you need to",
    "start": "476360",
    "end": "479599"
  },
  {
    "text": "distribute a client for each of those",
    "start": "479599",
    "end": "481440"
  },
  {
    "text": "languages so you hit you need different",
    "start": "481440",
    "end": "485000"
  },
  {
    "text": "solutions and for many the process of",
    "start": "485000",
    "end": "487840"
  },
  {
    "text": "generation and inclusion of protos into",
    "start": "487840",
    "end": "490680"
  },
  {
    "text": "a library build is complicated enough",
    "start": "490680",
    "end": "493240"
  },
  {
    "text": "for them to decide to just avoid it all",
    "start": "493240",
    "end": "495560"
  },
  {
    "text": "together too hard um next I'll let",
    "start": "495560",
    "end": "498639"
  },
  {
    "text": "Richard discuss some ideas we have had",
    "start": "498639",
    "end": "501360"
  },
  {
    "text": "to address uh some of these issues great",
    "start": "501360",
    "end": "504199"
  },
  {
    "text": "thank you",
    "start": "504199",
    "end": "506479"
  },
  {
    "text": "Derry so that's a pretty good recap of",
    "start": "506639",
    "end": "508960"
  },
  {
    "text": "the friction that we have seen grpc and",
    "start": "508960",
    "end": "511360"
  },
  {
    "text": "Portu users have over the years and up",
    "start": "511360",
    "end": "513680"
  },
  {
    "text": "to the present moment so let's turn to",
    "start": "513680",
    "end": "515560"
  },
  {
    "text": "the solution that we have been working",
    "start": "515560",
    "end": "517200"
  },
  {
    "text": "on given all of these issues we realized",
    "start": "517200",
    "end": "519440"
  },
  {
    "text": "that there was an amazing opportunity",
    "start": "519440",
    "end": "521240"
  },
  {
    "text": "here to help our users we wanted to",
    "start": "521240",
    "end": "522959"
  },
  {
    "text": "build something that enabled dead simple",
    "start": "522959",
    "end": "525160"
  },
  {
    "text": "reuse of popular public protos depending",
    "start": "525160",
    "end": "527839"
  },
  {
    "text": "on other projects protos shouldn't be",
    "start": "527839",
    "end": "529760"
  },
  {
    "text": "rocket science but today depending on",
    "start": "529760",
    "end": "531760"
  },
  {
    "text": "projects like uh the grpc wellknown",
    "start": "531760",
    "end": "533440"
  },
  {
    "text": "protos or the XDS service mes protos is",
    "start": "533440",
    "end": "536720"
  },
  {
    "text": "a super tricky task and we also wanted",
    "start": "536720",
    "end": "539160"
  },
  {
    "text": "to provide provide the same single",
    "start": "539160",
    "end": "540440"
  },
  {
    "text": "simple mechanism for private protos",
    "start": "540440",
    "end": "543000"
  },
  {
    "text": "after all most grpc usage today is",
    "start": "543000",
    "end": "545079"
  },
  {
    "text": "within a single organization inter",
    "start": "545079",
    "end": "547440"
  },
  {
    "text": "Service East to West traffic is super",
    "start": "547440",
    "end": "549560"
  },
  {
    "text": "popular so the registry will provide a",
    "start": "549560",
    "end": "551680"
  },
  {
    "text": "source of Truth not only for public",
    "start": "551680",
    "end": "553480"
  },
  {
    "text": "protos but also your organizations's own",
    "start": "553480",
    "end": "556240"
  },
  {
    "text": "protos this will allow feature teams to",
    "start": "556240",
    "end": "558720"
  },
  {
    "text": "stop worrying about protos and start",
    "start": "558720",
    "end": "560600"
  },
  {
    "text": "worrying about their",
    "start": "560600",
    "end": "561959"
  },
  {
    "text": "features after your protos are uploaded",
    "start": "561959",
    "end": "564480"
  },
  {
    "text": "you want to be able to consume them in a",
    "start": "564480",
    "end": "565920"
  },
  {
    "text": "language specific way in Java you'll be",
    "start": "565920",
    "end": "568320"
  },
  {
    "text": "able to add amazing or Gradle dependency",
    "start": "568320",
    "end": "570680"
  },
  {
    "text": "and python a pip dependency depending on",
    "start": "570680",
    "end": "573399"
  },
  {
    "text": "someone else's protos becomes as simple",
    "start": "573399",
    "end": "575079"
  },
  {
    "text": "as depending on any other library in",
    "start": "575079",
    "end": "577000"
  },
  {
    "text": "your language of choice so it's well",
    "start": "577000",
    "end": "579800"
  },
  {
    "text": "known that prabu strong backwards",
    "start": "579800",
    "end": "581480"
  },
  {
    "text": "compatibility enables developers to",
    "start": "581480",
    "end": "583440"
  },
  {
    "text": "confidently add new features to their",
    "start": "583440",
    "end": "585279"
  },
  {
    "text": "protocols but if developers",
    "start": "585279",
    "end": "587399"
  },
  {
    "text": "unintentionally break wire protocol you",
    "start": "587399",
    "end": "590000"
  },
  {
    "text": "do not get that benefit the registry",
    "start": "590000",
    "end": "592440"
  },
  {
    "text": "will give you the confidence that you",
    "start": "592440",
    "end": "593760"
  },
  {
    "text": "need that your organization doesn't",
    "start": "593760",
    "end": "595279"
  },
  {
    "text": "break backwards",
    "start": "595279",
    "end": "597600"
  },
  {
    "text": "compatibility so let's turn to the big",
    "start": "597600",
    "end": "600680"
  },
  {
    "text": "picture diagram we started with the",
    "start": "600680",
    "end": "603200"
  },
  {
    "text": "registry aims to do everything I just",
    "start": "603200",
    "end": "605120"
  },
  {
    "text": "mentioned and more you'll be able to",
    "start": "605120",
    "end": "607279"
  },
  {
    "text": "upload protocol buffer source code from",
    "start": "607279",
    "end": "609040"
  },
  {
    "text": "your revision control system the",
    "start": "609040",
    "end": "611040"
  },
  {
    "text": "registry will help with enforcing",
    "start": "611040",
    "end": "612560"
  },
  {
    "text": "backwards compatibility and buildability",
    "start": "612560",
    "end": "614399"
  },
  {
    "text": "you'll be able to depend on Proto",
    "start": "614399",
    "end": "616839"
  },
  {
    "text": "definitions from public projects as well",
    "start": "616839",
    "end": "619120"
  },
  {
    "text": "as other protuff schema projects within",
    "start": "619120",
    "end": "621480"
  },
  {
    "text": "your organization so instead of feature",
    "start": "621480",
    "end": "623720"
  },
  {
    "text": "teams having to figure out how to knit",
    "start": "623720",
    "end": "625320"
  },
  {
    "text": "the entire organization's protocol",
    "start": "625320",
    "end": "627079"
  },
  {
    "text": "buffers together they can just focus on",
    "start": "627079",
    "end": "629480"
  },
  {
    "text": "what matters building out their",
    "start": "629480",
    "end": "631480"
  },
  {
    "text": "protocols and integrating with the rest",
    "start": "631480",
    "end": "633320"
  },
  {
    "text": "of the organization system the registry",
    "start": "633320",
    "end": "636000"
  },
  {
    "text": "will let use any Source control system",
    "start": "636000",
    "end": "638040"
  },
  {
    "text": "you'd like git perforce subversion or",
    "start": "638040",
    "end": "641200"
  },
  {
    "text": "absolutely anything else and the",
    "start": "641200",
    "end": "643120"
  },
  {
    "text": "registry will work no matter how you've",
    "start": "643120",
    "end": "644920"
  },
  {
    "text": "structured your repositories any of the",
    "start": "644920",
    "end": "647160"
  },
  {
    "text": "structures that Terry mentioned just a",
    "start": "647160",
    "end": "648880"
  },
  {
    "text": "bit ago will work so once you've",
    "start": "648880",
    "end": "651800"
  },
  {
    "text": "uploaded your protos the registry will",
    "start": "651800",
    "end": "653800"
  },
  {
    "text": "parse and compile those protos and it",
    "start": "653800",
    "end": "656279"
  },
  {
    "text": "will generate and compile the language",
    "start": "656279",
    "end": "658160"
  },
  {
    "text": "specific artifact you need to run your",
    "start": "658160",
    "end": "660519"
  },
  {
    "text": "clients and servers and also to",
    "start": "660519",
    "end": "662600"
  },
  {
    "text": "serialize your protuff messages this",
    "start": "662600",
    "end": "664839"
  },
  {
    "text": "will be powered by gcp artifact",
    "start": "664839",
    "end": "667160"
  },
  {
    "text": "registry and of course we'll provide a",
    "start": "667160",
    "end": "669440"
  },
  {
    "text": "standard grpc reflection service to",
    "start": "669440",
    "end": "671639"
  },
  {
    "text": "query all of this information",
    "start": "671639",
    "end": "673279"
  },
  {
    "text": "programmatically to drive developer",
    "start": "673279",
    "end": "675519"
  },
  {
    "text": "workflows and any other piece of",
    "start": "675519",
    "end": "677639"
  },
  {
    "text": "infrastructure in your organization that",
    "start": "677639",
    "end": "679600"
  },
  {
    "text": "you would like to integrate with your",
    "start": "679600",
    "end": "682079"
  },
  {
    "text": "schemas So today we're going to be",
    "start": "682079",
    "end": "685120"
  },
  {
    "text": "opening up a private preview uh we'll",
    "start": "685120",
    "end": "688279"
  },
  {
    "text": "send out an in form that you can you can",
    "start": "688279",
    "end": "690680"
  },
  {
    "text": "sign up with to get access to that",
    "start": "690680",
    "end": "692959"
  },
  {
    "text": "private preview uh and that's going to",
    "start": "692959",
    "end": "695200"
  },
  {
    "text": "include uh a readon version of the",
    "start": "695200",
    "end": "697680"
  },
  {
    "text": "reflection API pre-populated with the",
    "start": "697680",
    "end": "700560"
  },
  {
    "text": "most useful public protocol buffers",
    "start": "700560",
    "end": "702880"
  },
  {
    "text": "including the grpc standard protos the",
    "start": "702880",
    "end": "705399"
  },
  {
    "text": "Google API protos and the XDS service",
    "start": "705399",
    "end": "708279"
  },
  {
    "text": "mesh protos uh this will give you a",
    "start": "708279",
    "end": "710240"
  },
  {
    "text": "taste of what the registry will offer",
    "start": "710240",
    "end": "711839"
  },
  {
    "text": "over the coming months and years we'll",
    "start": "711839",
    "end": "714519"
  },
  {
    "text": "also be releasing the CLI tool that",
    "start": "714519",
    "end": "716760"
  },
  {
    "text": "you'll use to interact with the registry",
    "start": "716760",
    "end": "718920"
  },
  {
    "text": "so at the moment it will allow you to",
    "start": "718920",
    "end": "720959"
  },
  {
    "text": "download textual Proto source code to",
    "start": "720959",
    "end": "722800"
  },
  {
    "text": "your file system uh now let's take a",
    "start": "722800",
    "end": "725120"
  },
  {
    "text": "look at a couple of the interesting",
    "start": "725120",
    "end": "726639"
  },
  {
    "text": "things that you'll be able to do just",
    "start": "726639",
    "end": "728200"
  },
  {
    "text": "with this reflection API that will be",
    "start": "728200",
    "end": "729720"
  },
  {
    "text": "available to you very",
    "start": "729720",
    "end": "731920"
  },
  {
    "text": "soon so firstly you can make requests to",
    "start": "731920",
    "end": "734959"
  },
  {
    "text": "grpc backends using this reflection API",
    "start": "734959",
    "end": "737839"
  },
  {
    "text": "so with the new registry you can do this",
    "start": "737839",
    "end": "740279"
  },
  {
    "text": "even with backends that don't actually",
    "start": "740279",
    "end": "742160"
  },
  {
    "text": "have a reflection server enabled the",
    "start": "742160",
    "end": "744399"
  },
  {
    "text": "client which could be a developer CLI",
    "start": "744399",
    "end": "746560"
  },
  {
    "text": "tool or a UI will make reflection calls",
    "start": "746560",
    "end": "749360"
  },
  {
    "text": "to the registry and it will use that",
    "start": "749360",
    "end": "751040"
  },
  {
    "text": "information to figure out how to convert",
    "start": "751040",
    "end": "753040"
  },
  {
    "text": "your user input which is probably Json",
    "start": "753040",
    "end": "755760"
  },
  {
    "text": "to the serialized protocol buffer",
    "start": "755760",
    "end": "757760"
  },
  {
    "text": "messages that the server",
    "start": "757760",
    "end": "760320"
  },
  {
    "text": "expects the registry will also enable a",
    "start": "760320",
    "end": "763040"
  },
  {
    "text": "new form of rest to grpc transcoding the",
    "start": "763040",
    "end": "766360"
  },
  {
    "text": "grpc Gateway project is already used by",
    "start": "766360",
    "end": "769399"
  },
  {
    "text": "many projects to serve rest incoming to",
    "start": "769399",
    "end": "771680"
  },
  {
    "text": "their system and then to turn it into",
    "start": "771680",
    "end": "773880"
  },
  {
    "text": "grpc within their system by transcoding",
    "start": "773880",
    "end": "776480"
  },
  {
    "text": "from Ras to grpc but grpc Gateway takes",
    "start": "776480",
    "end": "779920"
  },
  {
    "text": "a single Proto at build time and",
    "start": "779920",
    "end": "781680"
  },
  {
    "text": "generates proxy code for that one Proto",
    "start": "781680",
    "end": "784920"
  },
  {
    "text": "um and once you deploy that as an",
    "start": "784920",
    "end": "786240"
  },
  {
    "text": "Ingress proxy you can't use any other",
    "start": "786240",
    "end": "789000"
  },
  {
    "text": "apis just the one that you input now",
    "start": "789000",
    "end": "792360"
  },
  {
    "text": "with this registry a generic proxy can",
    "start": "792360",
    "end": "794880"
  },
  {
    "text": "get access to upto-date typee",
    "start": "794880",
    "end": "796959"
  },
  {
    "text": "information for any arbitrary grpc API",
    "start": "796959",
    "end": "800399"
  },
  {
    "text": "this means that you can use a single",
    "start": "800399",
    "end": "801959"
  },
  {
    "text": "Ingress proxy for your entire",
    "start": "801959",
    "end": "803920"
  },
  {
    "text": "organization and that it will receive",
    "start": "803920",
    "end": "805800"
  },
  {
    "text": "updates from the registry over time as",
    "start": "805800",
    "end": "807680"
  },
  {
    "text": "additions are made to your API think of",
    "start": "807680",
    "end": "809920"
  },
  {
    "text": "it as your API control plane so let's",
    "start": "809920",
    "end": "812839"
  },
  {
    "text": "run through a quick demo and I have",
    "start": "812839",
    "end": "815639"
  },
  {
    "text": "pre-recorded this just to avoid any",
    "start": "815639",
    "end": "818279"
  },
  {
    "text": "unnecessary fat fingering and",
    "start": "818279",
    "end": "822000"
  },
  {
    "text": "derailing how's our how's our audio",
    "start": "825680",
    "end": "828920"
  },
  {
    "text": "doing back there can we uh turn that",
    "start": "828920",
    "end": "830680"
  },
  {
    "text": "audio",
    "start": "830680",
    "end": "831680"
  },
  {
    "text": "up all right so start by taking a look",
    "start": "831680",
    "end": "834000"
  },
  {
    "text": "at some of the content that's",
    "start": "834000",
    "end": "835279"
  },
  {
    "text": "prepopulated the registry uh we have a",
    "start": "835279",
    "end": "837680"
  },
  {
    "text": "new CLI tool current called gcp I don't",
    "start": "837680",
    "end": "841199"
  },
  {
    "text": "have audio controls on my",
    "start": "841199",
    "end": "843560"
  },
  {
    "text": "end um this will be your main entry",
    "start": "843560",
    "end": "846120"
  },
  {
    "text": "point for interacting with the registry",
    "start": "846120",
    "end": "848519"
  },
  {
    "text": "so I've forwarded a port to this",
    "start": "848519",
    "end": "850120"
  },
  {
    "text": "workstation from the registry service",
    "start": "850120",
    "end": "851920"
  },
  {
    "text": "and that let me uh talk over this a",
    "start": "851920",
    "end": "854120"
  },
  {
    "text": "little bit um the registry contains yeah",
    "start": "854120",
    "end": "858480"
  },
  {
    "text": "these are bundles",
    "start": "858480",
    "end": "861279"
  },
  {
    "text": "of yeah no unfortunately no uh let me",
    "start": "861440",
    "end": "866279"
  },
  {
    "text": "hop over to my other HDMI report we had",
    "start": "866279",
    "end": "869600"
  },
  {
    "text": "this working",
    "start": "869600",
    "end": "872160"
  },
  {
    "text": "yesterday take two all right so let's",
    "start": "881360",
    "end": "883880"
  },
  {
    "text": "start by taking a look at some of the",
    "start": "883880",
    "end": "885160"
  },
  {
    "text": "content that's prepopulated registry",
    "start": "885160",
    "end": "887720"
  },
  {
    "text": "yeah we have a new C tool here currently",
    "start": "887720",
    "end": "889920"
  },
  {
    "text": "called gcp Proto registry yeah so if we",
    "start": "889920",
    "end": "892880"
  },
  {
    "text": "can't get that I'll just uh talk over",
    "start": "892880",
    "end": "895519"
  },
  {
    "text": "this a little bit so um we have uh a new",
    "start": "895519",
    "end": "898120"
  },
  {
    "text": "C tool that we're introducing here name",
    "start": "898120",
    "end": "900000"
  },
  {
    "text": "is uh TBD um currently called gcp Proto",
    "start": "900000",
    "end": "903880"
  },
  {
    "text": "registry um and this is going to be your",
    "start": "903880",
    "end": "906040"
  },
  {
    "text": "main entry point for inter repositories",
    "start": "906040",
    "end": "909040"
  },
  {
    "text": "these are bundles of Proto files that",
    "start": "909040",
    "end": "912360"
  },
  {
    "text": "also those and there's a nice simple",
    "start": "912360",
    "end": "915040"
  },
  {
    "text": "well done all right so let's start by",
    "start": "915040",
    "end": "916959"
  },
  {
    "text": "taking a look at some of the content",
    "start": "916959",
    "end": "918399"
  },
  {
    "text": "that's pre-populated in the registry uh",
    "start": "918399",
    "end": "920800"
  },
  {
    "text": "we have a new CLI tool here currently",
    "start": "920800",
    "end": "922600"
  },
  {
    "text": "called gcp Proto",
    "start": "922600",
    "end": "925000"
  },
  {
    "text": "registry you can see the help text there",
    "start": "925000",
    "end": "927920"
  },
  {
    "text": "um this will be your main entry point",
    "start": "927920",
    "end": "929800"
  },
  {
    "text": "for interacting with the registry so",
    "start": "929800",
    "end": "932079"
  },
  {
    "text": "I've forwarded a port to this",
    "start": "932079",
    "end": "933440"
  },
  {
    "text": "workstation from the registry service",
    "start": "933440",
    "end": "935279"
  },
  {
    "text": "and that is available on local host at",
    "start": "935279",
    "end": "937199"
  },
  {
    "text": "Port",
    "start": "937199",
    "end": "938240"
  },
  {
    "text": "8443 um the registry contains",
    "start": "938240",
    "end": "940720"
  },
  {
    "text": "repositories these are bundles of Proto",
    "start": "940720",
    "end": "943079"
  },
  {
    "text": "files that may also depend on Proto",
    "start": "943079",
    "end": "944800"
  },
  {
    "text": "files in other repos and there's a nice",
    "start": "944800",
    "end": "947199"
  },
  {
    "text": "simple mechanism for encoding that",
    "start": "947199",
    "end": "948720"
  },
  {
    "text": "dependency so let's take a look at the",
    "start": "948720",
    "end": "950839"
  },
  {
    "text": "repos we've prepopulated so far um we",
    "start": "950839",
    "end": "953759"
  },
  {
    "text": "have one big repository that just",
    "start": "953759",
    "end": "955519"
  },
  {
    "text": "depends on all of our curated content we",
    "start": "955519",
    "end": "957759"
  },
  {
    "text": "call that the default rep because if you",
    "start": "957759",
    "end": "959759"
  },
  {
    "text": "don't specify anything else you'll get",
    "start": "959759",
    "end": "961600"
  },
  {
    "text": "the latest revision of the default repo",
    "start": "961600",
    "end": "963880"
  },
  {
    "text": "so we'll take a look at the curator",
    "start": "963880",
    "end": "965680"
  },
  {
    "text": "repositories by listing the default",
    "start": "965680",
    "end": "967440"
  },
  {
    "text": "repos dependencies so to do that we'll",
    "start": "967440",
    "end": "970519"
  },
  {
    "text": "just use the depth",
    "start": "970519",
    "end": "972600"
  },
  {
    "text": "command um so we've got um you know",
    "start": "972600",
    "end": "976600"
  },
  {
    "text": "three three repositories here so far um",
    "start": "976600",
    "end": "979319"
  },
  {
    "text": "just to give you a taste of of uh the",
    "start": "979319",
    "end": "981480"
  },
  {
    "text": "functionality so we've got GC example",
    "start": "981480",
    "end": "983680"
  },
  {
    "text": "protos this contains um our hello world",
    "start": "983680",
    "end": "986040"
  },
  {
    "text": "example our rout guut example and",
    "start": "986040",
    "end": "988199"
  },
  {
    "text": "several other B basic grpc examples um",
    "start": "988199",
    "end": "990759"
  },
  {
    "text": "we've got grpc Proto which includes sort",
    "start": "990759",
    "end": "993440"
  },
  {
    "text": "of the uh standard grpc services that",
    "start": "993440",
    "end": "996079"
  },
  {
    "text": "you would export from your server such",
    "start": "996079",
    "end": "998040"
  },
  {
    "text": "as um Channel z uh Health checking and",
    "start": "998040",
    "end": "1001160"
  },
  {
    "text": "of course reflection and then we've got",
    "start": "1001160",
    "end": "1003680"
  },
  {
    "text": "the protuff well-known types which are",
    "start": "1003680",
    "end": "1005279"
  },
  {
    "text": "sort of the standard library for um",
    "start": "1005279",
    "end": "1007399"
  },
  {
    "text": "dealing with",
    "start": "1007399",
    "end": "1009040"
  },
  {
    "text": "protuff um so let's actually zoom in on",
    "start": "1009040",
    "end": "1013880"
  },
  {
    "text": "grpc example protos um we're going to",
    "start": "1013880",
    "end": "1016839"
  },
  {
    "text": "download the textual content",
    "start": "1016839",
    "end": "1019360"
  },
  {
    "text": "of grpc example protos to our file",
    "start": "1019360",
    "end": "1024240"
  },
  {
    "text": "system uh oh whoops we want to give it",
    "start": "1024240",
    "end": "1026600"
  },
  {
    "text": "the repository flag there right um",
    "start": "1026600",
    "end": "1032038"
  },
  {
    "text": "so here you can see we've got a bunch of",
    "start": "1032039",
    "end": "1034720"
  },
  {
    "text": "Proto files let's let's take a look at",
    "start": "1034720",
    "end": "1036918"
  },
  {
    "text": "uh rout guide.",
    "start": "1036919",
    "end": "1038600"
  },
  {
    "text": "prototo um so this is the example that",
    "start": "1038600",
    "end": "1042000"
  },
  {
    "text": "uh is included in a bunch of our getting",
    "start": "1042000",
    "end": "1044038"
  },
  {
    "text": "started guides it's sort of how we teach",
    "start": "1044039",
    "end": "1045640"
  },
  {
    "text": "people um the difference between un and",
    "start": "1045640",
    "end": "1048000"
  },
  {
    "text": "streaming RPC and this is written for um",
    "start": "1048000",
    "end": "1050919"
  },
  {
    "text": "all of our our supported languages um so",
    "start": "1050919",
    "end": "1054440"
  },
  {
    "text": "let's let's start taking a look at um",
    "start": "1054440",
    "end": "1056679"
  },
  {
    "text": "these types using the reflection API",
    "start": "1056679",
    "end": "1059840"
  },
  {
    "text": "that uh the registry exports so to do",
    "start": "1059840",
    "end": "1062960"
  },
  {
    "text": "that we're going to use um grp curl um",
    "start": "1062960",
    "end": "1066280"
  },
  {
    "text": "like I mentioned um the registry is",
    "start": "1066280",
    "end": "1068320"
  },
  {
    "text": "listening at Port",
    "start": "1068320",
    "end": "1069799"
  },
  {
    "text": "8443 um we're going to use the describe",
    "start": "1069799",
    "end": "1071919"
  },
  {
    "text": "command and we're going to take a look",
    "start": "1071919",
    "end": "1073440"
  },
  {
    "text": "at the route guide package route guide",
    "start": "1073440",
    "end": "1075880"
  },
  {
    "text": "service and we'll take a look at the get",
    "start": "1075880",
    "end": "1078400"
  },
  {
    "text": "feature",
    "start": "1078400",
    "end": "1080000"
  },
  {
    "text": "method so same information we just saw",
    "start": "1080000",
    "end": "1083120"
  },
  {
    "text": "in the actual prototo file except um we",
    "start": "1083120",
    "end": "1087120"
  },
  {
    "text": "are doing this programmatically and this",
    "start": "1087120",
    "end": "1088840"
  },
  {
    "text": "can get incorporated into um your",
    "start": "1088840",
    "end": "1091559"
  },
  {
    "text": "developer workflows just to show you",
    "start": "1091559",
    "end": "1093760"
  },
  {
    "text": "that there's nothing up my sleeves let's",
    "start": "1093760",
    "end": "1095480"
  },
  {
    "text": "go ahead and remove um all of these",
    "start": "1095480",
    "end": "1097600"
  },
  {
    "text": "Proto files here okay they're gone um",
    "start": "1097600",
    "end": "1100840"
  },
  {
    "text": "and let's let's do a different symbol",
    "start": "1100840",
    "end": "1102280"
  },
  {
    "text": "this time let's look at the um request",
    "start": "1102280",
    "end": "1105159"
  },
  {
    "text": "message of the last thing which in this",
    "start": "1105159",
    "end": "1107240"
  },
  {
    "text": "case is going to be uh rout guide.",
    "start": "1107240",
    "end": "1110559"
  },
  {
    "text": "point and as you can see we get the the",
    "start": "1110559",
    "end": "1112960"
  },
  {
    "text": "def definition right there um from the",
    "start": "1112960",
    "end": "1115600"
  },
  {
    "text": "reflection service of the registry all",
    "start": "1115600",
    "end": "1118280"
  },
  {
    "text": "right so now that we know that um we can",
    "start": "1118280",
    "end": "1120440"
  },
  {
    "text": "use reflection to to get our type",
    "start": "1120440",
    "end": "1123080"
  },
  {
    "text": "information let's actually send an RPC",
    "start": "1123080",
    "end": "1126360"
  },
  {
    "text": "so um the first thing we're going to",
    "start": "1126360",
    "end": "1128280"
  },
  {
    "text": "want to do is um to set up a back end",
    "start": "1128280",
    "end": "1131280"
  },
  {
    "text": "that um is running the route guide",
    "start": "1131280",
    "end": "1133280"
  },
  {
    "text": "service so to do that um we have got um",
    "start": "1133280",
    "end": "1137440"
  },
  {
    "text": "a server I've got a file here very",
    "start": "1137440",
    "end": "1139760"
  },
  {
    "text": "simple um we clone the GPC go repo we",
    "start": "1139760",
    "end": "1143240"
  },
  {
    "text": "build the route guide example server and",
    "start": "1143240",
    "end": "1145880"
  },
  {
    "text": "then the docker container will run that",
    "start": "1145880",
    "end": "1148799"
  },
  {
    "text": "um the other thing is um grp curl does",
    "start": "1148799",
    "end": "1151559"
  },
  {
    "text": "not actually currently give you the",
    "start": "1151559",
    "end": "1153880"
  },
  {
    "text": "ability to point reflection at a",
    "start": "1153880",
    "end": "1156760"
  },
  {
    "text": "different Target from the back end um",
    "start": "1156760",
    "end": "1159760"
  },
  {
    "text": "and so as most problems in uh the same",
    "start": "1159760",
    "end": "1162720"
  },
  {
    "text": "as most problems in computer science uh",
    "start": "1162720",
    "end": "1164640"
  },
  {
    "text": "we can solve this with one additional",
    "start": "1164640",
    "end": "1166120"
  },
  {
    "text": "layer of indirection and in this case",
    "start": "1166120",
    "end": "1168080"
  },
  {
    "text": "we'll be doing that with an Envoy proxy",
    "start": "1168080",
    "end": "1171039"
  },
  {
    "text": "so let's take a look at the",
    "start": "1171039",
    "end": "1172280"
  },
  {
    "text": "configuration for",
    "start": "1172280",
    "end": "1174480"
  },
  {
    "text": "that um in here you can see we are",
    "start": "1174480",
    "end": "1178280"
  },
  {
    "text": "splitting traffic we are sending uh",
    "start": "1178280",
    "end": "1180559"
  },
  {
    "text": "reflection requests to our registry",
    "start": "1180559",
    "end": "1183159"
  },
  {
    "text": "backend and we're sending everything",
    "start": "1183159",
    "end": "1185360"
  },
  {
    "text": "else to our route guide back end um I've",
    "start": "1185360",
    "end": "1188960"
  },
  {
    "text": "taken these two things um Envoy and the",
    "start": "1188960",
    "end": "1192039"
  },
  {
    "text": "route guide back end and I've just um",
    "start": "1192039",
    "end": "1195080"
  },
  {
    "text": "orchestrated them with Docker compose",
    "start": "1195080",
    "end": "1197440"
  },
  {
    "text": "pretty simple and let's just bring these",
    "start": "1197440",
    "end": "1201159"
  },
  {
    "text": "components",
    "start": "1201159",
    "end": "1202880"
  },
  {
    "text": "up all right these components are up I'm",
    "start": "1202880",
    "end": "1206600"
  },
  {
    "text": "going to come back over to this terminal",
    "start": "1206600",
    "end": "1209000"
  },
  {
    "text": "and now we're going to send a request",
    "start": "1209000",
    "end": "1211240"
  },
  {
    "text": "with uh JP curl so um this one's going",
    "start": "1211240",
    "end": "1213840"
  },
  {
    "text": "to be plain text because uh the back end",
    "start": "1213840",
    "end": "1216120"
  },
  {
    "text": "is listening over plain text um we're",
    "start": "1216120",
    "end": "1218520"
  },
  {
    "text": "going to give it a request message um so",
    "start": "1218520",
    "end": "1220720"
  },
  {
    "text": "we just use uh latitude and longitude",
    "start": "1220720",
    "end": "1224039"
  },
  {
    "text": "here um I know there's a feature at 02",
    "start": "1224039",
    "end": "1227600"
  },
  {
    "text": "so we'll be using that",
    "start": "1227600",
    "end": "1230640"
  },
  {
    "text": "longitude and",
    "start": "1230799",
    "end": "1232679"
  },
  {
    "text": "two um now the envoy is listening at",
    "start": "1232679",
    "end": "1235159"
  },
  {
    "text": "Port 10,000 so I'll use that and then",
    "start": "1235159",
    "end": "1238720"
  },
  {
    "text": "our method is going to be rout guide.",
    "start": "1238720",
    "end": "1240760"
  },
  {
    "text": "rout guu SL get feature all right boom",
    "start": "1240760",
    "end": "1246280"
  },
  {
    "text": "we have our response back um and so this",
    "start": "1246280",
    "end": "1249400"
  },
  {
    "text": "is is really powerful because it means",
    "start": "1249400",
    "end": "1252240"
  },
  {
    "text": "that um you now don't necessarily need",
    "start": "1252240",
    "end": "1254120"
  },
  {
    "text": "to have a reflection server exported on",
    "start": "1254120",
    "end": "1256960"
  },
  {
    "text": "your backends in order to use your",
    "start": "1256960",
    "end": "1259480"
  },
  {
    "text": "really rich familiar developer tools um",
    "start": "1259480",
    "end": "1262159"
  },
  {
    "text": "this will open things up for um you know",
    "start": "1262159",
    "end": "1264559"
  },
  {
    "text": "old old backends that do not have them",
    "start": "1264559",
    "end": "1266480"
  },
  {
    "text": "installed um or if for whatever reason",
    "start": "1266480",
    "end": "1269280"
  },
  {
    "text": "you're not able to install it",
    "start": "1269280",
    "end": "1273480"
  }
]