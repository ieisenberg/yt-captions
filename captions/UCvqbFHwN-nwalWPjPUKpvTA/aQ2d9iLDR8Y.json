[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "my name is Jay I'm an engineer at",
    "start": "60",
    "end": "2010"
  },
  {
    "text": "indeed.com I work on our service",
    "start": "2010",
    "end": "4200"
  },
  {
    "text": "architecture team and today I'm here to",
    "start": "4200",
    "end": "6029"
  },
  {
    "text": "talk to you about how we're starting to",
    "start": "6029",
    "end": "7470"
  },
  {
    "text": "adopt G RPC services and facilitate kind",
    "start": "7470",
    "end": "12450"
  },
  {
    "text": "of newer capabilities inside of our",
    "start": "12450",
    "end": "13830"
  },
  {
    "text": "organization I've been with indeed for",
    "start": "13830",
    "end": "16230"
  },
  {
    "text": "four-and-a-half years if you want to",
    "start": "16230",
    "end": "18029"
  },
  {
    "text": "reach out to me you can contact me via",
    "start": "18029",
    "end": "19949"
  },
  {
    "text": "email Twitter github kind of you name it",
    "start": "19949",
    "end": "25039"
  },
  {
    "text": "by and large I'm here to talk to you",
    "start": "25039",
    "end": "27570"
  },
  {
    "start": "26000",
    "end": "398000"
  },
  {
    "text": "today about or tell you the story about",
    "start": "27570",
    "end": "29550"
  },
  {
    "text": "migration in 2009 indeed developed",
    "start": "29550",
    "end": "34380"
  },
  {
    "text": "boxcar its proprietary distributed",
    "start": "34380",
    "end": "36450"
  },
  {
    "text": "services framework in 2012 we announced",
    "start": "36450",
    "end": "40320"
  },
  {
    "text": "the performance improvements that",
    "start": "40320",
    "end": "41579"
  },
  {
    "text": "offered to our infrastructure and then",
    "start": "41579",
    "end": "43649"
  },
  {
    "text": "in 2013 we did a tech talk on the",
    "start": "43649",
    "end": "48090"
  },
  {
    "text": "protocol and some of the finer",
    "start": "48090",
    "end": "49950"
  },
  {
    "text": "components for the purpose of today's",
    "start": "49950",
    "end": "53070"
  },
  {
    "text": "talk you don't actually need to know all",
    "start": "53070",
    "end": "55199"
  },
  {
    "text": "that much about boxcar if you're",
    "start": "55199",
    "end": "57480"
  },
  {
    "text": "interested in the finer details you can",
    "start": "57480",
    "end": "59309"
  },
  {
    "text": "go and check out our tech talk on",
    "start": "59309",
    "end": "61649"
  },
  {
    "text": "YouTube and with that being said you can",
    "start": "61649",
    "end": "64619"
  },
  {
    "text": "kind of keep a few little details in",
    "start": "64619",
    "end": "66299"
  },
  {
    "text": "mind first boxcar was written on top of",
    "start": "66299",
    "end": "69090"
  },
  {
    "text": "protocol buffers it balances connections",
    "start": "69090",
    "end": "71280"
  },
  {
    "text": "between servers and not requests there's",
    "start": "71280",
    "end": "74369"
  },
  {
    "text": "one ongoing request per connection and",
    "start": "74369",
    "end": "77240"
  },
  {
    "text": "the load balancing scheme requires a",
    "start": "77240",
    "end": "79650"
  },
  {
    "text": "fixed number of connections to be pre",
    "start": "79650",
    "end": "81659"
  },
  {
    "text": "established in order for things to work",
    "start": "81659",
    "end": "84439"
  },
  {
    "text": "the scheme lies somewhere between",
    "start": "84439",
    "end": "86369"
  },
  {
    "text": "round-robin and in the proxy based model",
    "start": "86369",
    "end": "88590"
  },
  {
    "text": "but by and large it tends to manifest",
    "start": "88590",
    "end": "90600"
  },
  {
    "text": "itself as naive round-robin",
    "start": "90600",
    "end": "94220"
  },
  {
    "text": "today boxcars still plays a very fairly",
    "start": "94460",
    "end": "97290"
  },
  {
    "text": "large important role in our architecture",
    "start": "97290",
    "end": "99210"
  },
  {
    "text": "we have over 160 services running in in",
    "start": "99210",
    "end": "102420"
  },
  {
    "text": "production these services are very high",
    "start": "102420",
    "end": "105600"
  },
  {
    "text": "performance",
    "start": "105600",
    "end": "106350"
  },
  {
    "text": "client perceived latency is very low and",
    "start": "106350",
    "end": "108540"
  },
  {
    "text": "it runs out of box without any",
    "start": "108540",
    "end": "110250"
  },
  {
    "text": "additional configuration HTTP and rest",
    "start": "110250",
    "end": "114450"
  },
  {
    "text": "have started to play more and more of a",
    "start": "114450",
    "end": "116070"
  },
  {
    "text": "crucial role in our infrastructure and",
    "start": "116070",
    "end": "117899"
  },
  {
    "text": "so we see about 20 or so of services in",
    "start": "117899",
    "end": "120899"
  },
  {
    "text": "production today these systems tend to",
    "start": "120899",
    "end": "123930"
  },
  {
    "text": "have a very high latency involved when",
    "start": "123930",
    "end": "125969"
  },
  {
    "text": "performing communication with them and",
    "start": "125969",
    "end": "128239"
  },
  {
    "text": "configuring these services and getting",
    "start": "128239",
    "end": "130140"
  },
  {
    "text": "them running actually takes a fair",
    "start": "130140",
    "end": "131760"
  },
  {
    "text": "amount of work from our operation",
    "start": "131760",
    "end": "133030"
  },
  {
    "text": "team especially if you require TLS in",
    "start": "133030",
    "end": "135040"
  },
  {
    "text": "here means the communication in its",
    "start": "135040",
    "end": "138459"
  },
  {
    "text": "original implementation boxcar was",
    "start": "138459",
    "end": "140050"
  },
  {
    "text": "implemented as a library that your team",
    "start": "140050",
    "end": "142060"
  },
  {
    "text": "would pull into your projects this",
    "start": "142060",
    "end": "144550"
  },
  {
    "text": "pattern is often referred to as a thick",
    "start": "144550",
    "end": "146200"
  },
  {
    "text": "client and each web app embeds a small",
    "start": "146200",
    "end": "150160"
  },
  {
    "text": "load balancer inside of itself there's",
    "start": "150160",
    "end": "152560"
  },
  {
    "text": "one load balancer per service so if you",
    "start": "152560",
    "end": "154209"
  },
  {
    "text": "have an account management service it",
    "start": "154209",
    "end": "155650"
  },
  {
    "text": "gives its own dedicated load balancer if",
    "start": "155650",
    "end": "157660"
  },
  {
    "text": "you have a candidate data service it",
    "start": "157660",
    "end": "159550"
  },
  {
    "text": "gets its own load balancer as well the",
    "start": "159550",
    "end": "163600"
  },
  {
    "text": "problem with this solution is that as",
    "start": "163600",
    "end": "165670"
  },
  {
    "text": "indeed has started to grow over the last",
    "start": "165670",
    "end": "167170"
  },
  {
    "text": "several years we needed to start",
    "start": "167170",
    "end": "170050"
  },
  {
    "text": "adopting new languages to kind of stay",
    "start": "170050",
    "end": "172000"
  },
  {
    "text": "relevant with boxcar only having a few",
    "start": "172000",
    "end": "176350"
  },
  {
    "text": "native library implementations adding",
    "start": "176350",
    "end": "179380"
  },
  {
    "text": "support for languages like Python and",
    "start": "179380",
    "end": "181120"
  },
  {
    "text": "PHP became extremely difficult and in",
    "start": "181120",
    "end": "183640"
  },
  {
    "text": "some cases impossible also the service",
    "start": "183640",
    "end": "188019"
  },
  {
    "text": "framework required a lot of tribal",
    "start": "188019",
    "end": "189819"
  },
  {
    "text": "knowledge to get started and was very",
    "start": "189819",
    "end": "191950"
  },
  {
    "text": "slow to iterate on so as we wanted to",
    "start": "191950",
    "end": "193780"
  },
  {
    "text": "add newer features we needed to wait",
    "start": "193780",
    "end": "196810"
  },
  {
    "text": "several quarters for those features to",
    "start": "196810",
    "end": "198670"
  },
  {
    "text": "roll out to all of our production",
    "start": "198670",
    "end": "199840"
  },
  {
    "text": "systems additionally it was hard to test",
    "start": "199840",
    "end": "203110"
  },
  {
    "text": "locally teams would have to spin up",
    "start": "203110",
    "end": "205720"
  },
  {
    "text": "local proxies make manual manually",
    "start": "205720",
    "end": "209110"
  },
  {
    "text": "configured requests things that just",
    "start": "209110",
    "end": "211630"
  },
  {
    "text": "were very slow to get going as with any",
    "start": "211630",
    "end": "218350"
  },
  {
    "text": "kind of iterative solution we look back",
    "start": "218350",
    "end": "219880"
  },
  {
    "text": "that we look back over our original",
    "start": "219880",
    "end": "221890"
  },
  {
    "text": "implementation and see what to see what",
    "start": "221890",
    "end": "223989"
  },
  {
    "text": "improvements we could make one thing we",
    "start": "223989",
    "end": "226540"
  },
  {
    "text": "could do is the couple the boxcar",
    "start": "226540",
    "end": "227829"
  },
  {
    "text": "implementation with our web application",
    "start": "227829",
    "end": "230799"
  },
  {
    "text": "this would allow us to write web apps in",
    "start": "230799",
    "end": "233500"
  },
  {
    "text": "any language that we wanted to and the",
    "start": "233500",
    "end": "236049"
  },
  {
    "text": "load balancing would be encapsulated by",
    "start": "236049",
    "end": "237730"
  },
  {
    "text": "the sidecar process and so that's what",
    "start": "237730",
    "end": "241780"
  },
  {
    "text": "we started to consider it went and",
    "start": "241780",
    "end": "243459"
  },
  {
    "text": "developed a sidecar this is a very",
    "start": "243459",
    "end": "245410"
  },
  {
    "text": "popular pattern starting to emerge",
    "start": "245410",
    "end": "247470"
  },
  {
    "text": "canonically indeed kind of refers to",
    "start": "247470",
    "end": "250359"
  },
  {
    "text": "these as Co processes which are a little",
    "start": "250359",
    "end": "252280"
  },
  {
    "text": "odd but even companies like Microsoft",
    "start": "252280",
    "end": "254890"
  },
  {
    "text": "boxed and Netflix have all talked about",
    "start": "254890",
    "end": "256959"
  },
  {
    "text": "Co processes running in their",
    "start": "256959",
    "end": "258760"
  },
  {
    "text": "infrastructure as well as a sidecar",
    "start": "258760",
    "end": "263560"
  },
  {
    "text": "we're able to solve a lot of that",
    "start": "263560",
    "end": "264940"
  },
  {
    "text": "development toil that we encounter",
    "start": "264940",
    "end": "266680"
  },
  {
    "text": "the library implementation while indeed",
    "start": "266680",
    "end": "274060"
  },
  {
    "text": "needs to continue to maintain backwards",
    "start": "274060",
    "end": "275740"
  },
  {
    "text": "and forwards compatibility on the buyer",
    "start": "275740",
    "end": "277750"
  },
  {
    "text": "protocol we're now able to control the",
    "start": "277750",
    "end": "279850"
  },
  {
    "text": "release cycles a little bit better by",
    "start": "279850",
    "end": "281650"
  },
  {
    "text": "going and actually manually deploying",
    "start": "281650",
    "end": "283240"
  },
  {
    "text": "these sidecar processes this makes sure",
    "start": "283240",
    "end": "286509"
  },
  {
    "text": "this makes it so we can have the sidecar",
    "start": "286509",
    "end": "289060"
  },
  {
    "text": "pickup required features by a certain",
    "start": "289060",
    "end": "291669"
  },
  {
    "text": "date and push that architecture a little",
    "start": "291669",
    "end": "295240"
  },
  {
    "text": "bit further because this because our",
    "start": "295240",
    "end": "298570"
  },
  {
    "text": "engineers are historically bad at naming",
    "start": "298570",
    "end": "300310"
  },
  {
    "text": "things we obviously named this",
    "start": "300310",
    "end": "301570"
  },
  {
    "text": "coprocessor sidecar",
    "start": "301570",
    "end": "303099"
  },
  {
    "text": "in its original implementation it would",
    "start": "303099",
    "end": "304990"
  },
  {
    "text": "take with HTTP 1-1 requests translate it",
    "start": "304990",
    "end": "308020"
  },
  {
    "text": "into a boxcar request and then perform",
    "start": "308020",
    "end": "310570"
  },
  {
    "text": "the boxcar request on its behalf by",
    "start": "310570",
    "end": "315880"
  },
  {
    "text": "introducing sidecar we were able to",
    "start": "315880",
    "end": "317440"
  },
  {
    "text": "solve some of these problems most",
    "start": "317440",
    "end": "320380"
  },
  {
    "text": "languages have native HTTP clients which",
    "start": "320380",
    "end": "322449"
  },
  {
    "text": "made it really easy to communicate with",
    "start": "322449",
    "end": "326250"
  },
  {
    "text": "clients no longer had it working no",
    "start": "326250",
    "end": "328419"
  },
  {
    "text": "clients no longer had to worry about the",
    "start": "328419",
    "end": "330639"
  },
  {
    "text": "specific implementation details of load",
    "start": "330639",
    "end": "332919"
  },
  {
    "text": "balancing and pipe languages like Python",
    "start": "332919",
    "end": "335680"
  },
  {
    "text": "and PHP could easily get started with",
    "start": "335680",
    "end": "337810"
  },
  {
    "text": "this system the travel of knowledge",
    "start": "337810",
    "end": "344260"
  },
  {
    "text": "requirement was reduced quite a bit by",
    "start": "344260",
    "end": "347470"
  },
  {
    "text": "encapsulating load balancing logic",
    "start": "347470",
    "end": "348970"
  },
  {
    "text": "inside of the sidecar clients no longer",
    "start": "348970",
    "end": "351039"
  },
  {
    "text": "needed to worry themselves with this and",
    "start": "351039",
    "end": "352720"
  },
  {
    "text": "only needed to know how to construct a",
    "start": "352720",
    "end": "354190"
  },
  {
    "text": "request to that process and because we",
    "start": "354190",
    "end": "359979"
  },
  {
    "text": "went through and wrote so many tools to",
    "start": "359979",
    "end": "362199"
  },
  {
    "text": "test boxcar we didn't really quite solve",
    "start": "362199",
    "end": "365110"
  },
  {
    "text": "that problem using this solution and",
    "start": "365110",
    "end": "367539"
  },
  {
    "text": "that's why the development toil is left",
    "start": "367539",
    "end": "369820"
  },
  {
    "text": "unmarked additionally one of the other",
    "start": "369820",
    "end": "373599"
  },
  {
    "text": "things that kind of got introduced as we",
    "start": "373599",
    "end": "375340"
  },
  {
    "text": "introduced the sidecar process was some",
    "start": "375340",
    "end": "377380"
  },
  {
    "text": "more development toil custom library and",
    "start": "377380",
    "end": "380050"
  },
  {
    "text": "Python was written that encapsulated the",
    "start": "380050",
    "end": "382599"
  },
  {
    "text": "logic for speaking with sidecar this",
    "start": "382599",
    "end": "384940"
  },
  {
    "text": "took a protocol buffer file and code",
    "start": "384940",
    "end": "388210"
  },
  {
    "text": "generated a small footprint for the",
    "start": "388210",
    "end": "390520"
  },
  {
    "text": "consuming application this was yet",
    "start": "390520",
    "end": "392530"
  },
  {
    "text": "another thing that we needed to maintain",
    "start": "392530",
    "end": "394120"
  },
  {
    "text": "and something that we needed to iterate",
    "start": "394120",
    "end": "396310"
  },
  {
    "text": "on as time went on",
    "start": "396310",
    "end": "399110"
  },
  {
    "start": "398000",
    "end": "627000"
  },
  {
    "text": "and so acknowledging that indeed has",
    "start": "399110",
    "end": "400699"
  },
  {
    "text": "been growing and starting to adopt new",
    "start": "400699",
    "end": "403159"
  },
  {
    "text": "languages and new technologies we really",
    "start": "403159",
    "end": "404870"
  },
  {
    "text": "wanted to consider our survey reconsider",
    "start": "404870",
    "end": "406909"
  },
  {
    "text": "our service architecture over the summer",
    "start": "406909",
    "end": "410509"
  },
  {
    "text": "a few of my friends and I went and went",
    "start": "410509",
    "end": "413270"
  },
  {
    "text": "through an innovation rotation where we",
    "start": "413270",
    "end": "414650"
  },
  {
    "text": "started to reimagine some of these",
    "start": "414650",
    "end": "416270"
  },
  {
    "text": "components an innovation rotation is",
    "start": "416270",
    "end": "418639"
  },
  {
    "text": "just a small three-month block we were",
    "start": "418639",
    "end": "420409"
  },
  {
    "text": "able to work on something that we find",
    "start": "420409",
    "end": "421789"
  },
  {
    "text": "valuable to the company and then present",
    "start": "421789",
    "end": "423800"
  },
  {
    "text": "our findings at the end of that",
    "start": "423800",
    "end": "424939"
  },
  {
    "text": "three-month block in our innovation",
    "start": "424939",
    "end": "428300"
  },
  {
    "text": "rotation we set out to do three things",
    "start": "428300",
    "end": "430069"
  },
  {
    "text": "one was improve restful services that",
    "start": "430069",
    "end": "433370"
  },
  {
    "text": "indeed make us we didn't have as much",
    "start": "433370",
    "end": "434900"
  },
  {
    "text": "configuration make us so that way we",
    "start": "434900",
    "end": "436610"
  },
  {
    "text": "could kind of iterate forward the second",
    "start": "436610",
    "end": "439310"
  },
  {
    "text": "thing we wanted to do was support G RPC",
    "start": "439310",
    "end": "441289"
  },
  {
    "text": "and http2 as means of communication and",
    "start": "441289",
    "end": "444530"
  },
  {
    "text": "the last thing we wanted to do was",
    "start": "444530",
    "end": "445849"
  },
  {
    "text": "evaluate service mesh opportunities at",
    "start": "445849",
    "end": "449930"
  },
  {
    "text": "the end of the summer we had tested and",
    "start": "449930",
    "end": "452509"
  },
  {
    "text": "monitored the overhead of an HTTP 2",
    "start": "452509",
    "end": "454729"
  },
  {
    "text": "connection and now all of our Java",
    "start": "454729",
    "end": "456409"
  },
  {
    "text": "processes support HTTP 2 as means of",
    "start": "456409",
    "end": "458629"
  },
  {
    "text": "communication out of box",
    "start": "458629",
    "end": "461110"
  },
  {
    "text": "the service master we wanted to",
    "start": "461110",
    "end": "463219"
  },
  {
    "text": "establish criteria that we wanted in",
    "start": "463219",
    "end": "465680"
  },
  {
    "text": "side of the solution evaluated the",
    "start": "465680",
    "end": "468379"
  },
  {
    "text": "various options on the market and",
    "start": "468379",
    "end": "469909"
  },
  {
    "text": "ultimately wound up selecting one in the",
    "start": "469909",
    "end": "471889"
  },
  {
    "text": "end and so in our considered view",
    "start": "471889",
    "end": "474680"
  },
  {
    "text": "architecture we wanted something to look",
    "start": "474680",
    "end": "476629"
  },
  {
    "text": "a little bit more like this obviously we",
    "start": "476629",
    "end": "479360"
  },
  {
    "text": "need to continue to maintain boxcar and",
    "start": "479360",
    "end": "480979"
  },
  {
    "text": "sidecars their legacy services but",
    "start": "480979",
    "end": "484099"
  },
  {
    "text": "ideally moving over more towards having",
    "start": "484099",
    "end": "485900"
  },
  {
    "text": "a proper service mesh G RPC and restful",
    "start": "485900",
    "end": "488509"
  },
  {
    "text": "based services in the ends now as we",
    "start": "488509",
    "end": "493460"
  },
  {
    "text": "started to work on this v2 one question",
    "start": "493460",
    "end": "496099"
  },
  {
    "text": "I started to ask myself was you know how",
    "start": "496099",
    "end": "497779"
  },
  {
    "text": "might we migrate our existing",
    "start": "497779",
    "end": "499129"
  },
  {
    "text": "infrastructure to it and sidecar posed a",
    "start": "499129",
    "end": "501650"
  },
  {
    "text": "very interesting position in this",
    "start": "501650",
    "end": "503060"
  },
  {
    "text": "process but before we could leverage",
    "start": "503060",
    "end": "506210"
  },
  {
    "text": "sidecar we needed to make a few",
    "start": "506210",
    "end": "507889"
  },
  {
    "text": "improvements one we needed to improve",
    "start": "507889",
    "end": "510289"
  },
  {
    "text": "performance",
    "start": "510289",
    "end": "511099"
  },
  {
    "text": "having multiple network connections over",
    "start": "511099",
    "end": "513380"
  },
  {
    "text": "to a single sidecar process was very",
    "start": "513380",
    "end": "515690"
  },
  {
    "text": "crafty and using a text-based protocol",
    "start": "515690",
    "end": "519380"
  },
  {
    "text": "was a little non optimal for the types",
    "start": "519380",
    "end": "522229"
  },
  {
    "text": "of requests we were performing we wanted",
    "start": "522229",
    "end": "525680"
  },
  {
    "text": "to remove the toil for adding new",
    "start": "525680",
    "end": "527060"
  },
  {
    "text": "languages so no more of these custom",
    "start": "527060",
    "end": "528949"
  },
  {
    "text": "libraries that people would have to go",
    "start": "528949",
    "end": "530270"
  },
  {
    "text": "and write or maintain no more code",
    "start": "530270",
    "end": "532560"
  },
  {
    "text": "none of that and lastly we wanted to",
    "start": "532560",
    "end": "535870"
  },
  {
    "text": "keep in mind that we wanted to treat",
    "start": "535870",
    "end": "537640"
  },
  {
    "text": "this process as an intermediary as we",
    "start": "537640",
    "end": "539740"
  },
  {
    "text": "migrated so going back and reevaluating",
    "start": "539740",
    "end": "543550"
  },
  {
    "text": "our original solution a quick",
    "start": "543550",
    "end": "545460"
  },
  {
    "text": "optimization comes out of box of using",
    "start": "545460",
    "end": "547570"
  },
  {
    "text": "HTTP 2 by using this we now have all of",
    "start": "547570",
    "end": "550900"
  },
  {
    "text": "our requests going over a single TCP",
    "start": "550900",
    "end": "552610"
  },
  {
    "text": "connection there multiplex so we don't",
    "start": "552610",
    "end": "555460"
  },
  {
    "text": "have to worry about spawning up",
    "start": "555460",
    "end": "556480"
  },
  {
    "text": "additional ones as needed and this makes",
    "start": "556480",
    "end": "559600"
  },
  {
    "text": "much more efficient use of our network",
    "start": "559600",
    "end": "561670"
  },
  {
    "text": "space the other thing it does is it",
    "start": "561670",
    "end": "563590"
  },
  {
    "text": "facilitates the use of a binary protocol",
    "start": "563590",
    "end": "565450"
  },
  {
    "text": "rather than the text-based one so we",
    "start": "565450",
    "end": "566950"
  },
  {
    "text": "didn't have to go through and basic c4",
    "start": "566950",
    "end": "570430"
  },
  {
    "text": "encode all of our requests that we made",
    "start": "570430",
    "end": "572200"
  },
  {
    "text": "as we communicated with sidecar from",
    "start": "572200",
    "end": "577360"
  },
  {
    "text": "there we sought to solve little client",
    "start": "577360",
    "end": "578650"
  },
  {
    "text": "language problem after understanding how",
    "start": "578650",
    "end": "581110"
  },
  {
    "text": "sidecar took requests and relating them",
    "start": "581110",
    "end": "582910"
  },
  {
    "text": "to boxcar it was really easy to go in",
    "start": "582910",
    "end": "585730"
  },
  {
    "text": "and add G RPC support our sidecar",
    "start": "585730",
    "end": "590800"
  },
  {
    "text": "process is written and go and so goes",
    "start": "590800",
    "end": "592900"
  },
  {
    "text": "implementation of G RPC has this nice",
    "start": "592900",
    "end": "595090"
  },
  {
    "text": "little feature of an unknown service",
    "start": "595090",
    "end": "596800"
  },
  {
    "text": "handler for those that you that don't",
    "start": "596800",
    "end": "598810"
  },
  {
    "text": "know the unknown service handler is",
    "start": "598810",
    "end": "600340"
  },
  {
    "text": "invoked whenever a service is not",
    "start": "600340",
    "end": "602290"
  },
  {
    "text": "discovered on the target server from",
    "start": "602290",
    "end": "604750"
  },
  {
    "text": "there we can take the request and parse",
    "start": "604750",
    "end": "606310"
  },
  {
    "text": "out the components such as the service",
    "start": "606310",
    "end": "607990"
  },
  {
    "text": "that we're calling as well as the method",
    "start": "607990",
    "end": "609670"
  },
  {
    "text": "that we're invoking and then relay that",
    "start": "609670",
    "end": "611920"
  },
  {
    "text": "according accordingly to the various",
    "start": "611920",
    "end": "613690"
  },
  {
    "text": "boxcar services that we're calling with",
    "start": "613690",
    "end": "617560"
  },
  {
    "text": "that solution we were no longer we no",
    "start": "617560",
    "end": "619360"
  },
  {
    "text": "longer needed to maintain our custom",
    "start": "619360",
    "end": "622350"
  },
  {
    "text": "side car implemented a sidecar Python",
    "start": "622350",
    "end": "625150"
  },
  {
    "text": "library but as I started to go and get",
    "start": "625150",
    "end": "629650"
  },
  {
    "start": "627000",
    "end": "954000"
  },
  {
    "text": "more and more client languages supported",
    "start": "629650",
    "end": "632740"
  },
  {
    "text": "in add indeed I found adding all the",
    "start": "632740",
    "end": "634870"
  },
  {
    "text": "dependencies to my local box to be a",
    "start": "634870",
    "end": "636610"
  },
  {
    "text": "little crufty each language required",
    "start": "636610",
    "end": "639100"
  },
  {
    "text": "their own set of dependencies to be able",
    "start": "639100",
    "end": "640690"
  },
  {
    "text": "to compile and generate source code and",
    "start": "640690",
    "end": "643480"
  },
  {
    "text": "indeed supports five out of box Java Go",
    "start": "643480",
    "end": "646540"
  },
  {
    "text": "Python PHP and node so I wanted to look",
    "start": "646540",
    "end": "650650"
  },
  {
    "text": "to simplify this process a little bit",
    "start": "650650",
    "end": "652270"
  },
  {
    "text": "and wrote a a quick open source library",
    "start": "652270",
    "end": "654700"
  },
  {
    "text": "that lets us go and generate code inside",
    "start": "654700",
    "end": "657400"
  },
  {
    "text": "of a docker image when invoking from",
    "start": "657400",
    "end": "660310"
  },
  {
    "text": "command line you can specify a whole",
    "start": "660310",
    "end": "661870"
  },
  {
    "text": "bunch of different arguments primarily",
    "start": "661870",
    "end": "663730"
  },
  {
    "text": "the language the source",
    "start": "663730",
    "end": "665240"
  },
  {
    "text": "Oh directory in the target directory",
    "start": "665240",
    "end": "666950"
  },
  {
    "text": "you're generating out into and oh really",
    "start": "666950",
    "end": "673070"
  },
  {
    "text": "I don't trust demos so we did a video",
    "start": "673070",
    "end": "681700"
  },
  {
    "text": "the GRP see Jen docker library has a",
    "start": "681700",
    "end": "684589"
  },
  {
    "text": "demo branch on that demo branch has been",
    "start": "684589",
    "end": "688760"
  },
  {
    "text": "actually playing indeed alpha /g RPC",
    "start": "688760",
    "end": "699920"
  },
  {
    "text": "Jenn - docker right it's s it's playing",
    "start": "699920",
    "end": "705620"
  },
  {
    "text": "I don't",
    "start": "705620",
    "end": "708700"
  },
  {
    "text": "name all right",
    "start": "715140",
    "end": "716920"
  },
  {
    "text": "network buffering is not cooperating so",
    "start": "716920",
    "end": "720870"
  },
  {
    "text": "we'll go back so the nice thing is that",
    "start": "720870",
    "end": "726250"
  },
  {
    "text": "this little script encapsulates the",
    "start": "726250",
    "end": "728350"
  },
  {
    "text": "logic of pulling down the various docker",
    "start": "728350",
    "end": "730990"
  },
  {
    "text": "images for you performing all of the",
    "start": "730990",
    "end": "733090"
  },
  {
    "text": "code generation in the background and",
    "start": "733090",
    "end": "735960"
  },
  {
    "text": "then copying the built artifacts out of",
    "start": "735960",
    "end": "740230"
  },
  {
    "text": "the docker image this is not pleasant",
    "start": "740230",
    "end": "745000"
  },
  {
    "text": "because opened a new tab",
    "start": "745000",
    "end": "754020"
  },
  {
    "text": "yep we do all of our cogeneration inside",
    "start": "764109",
    "end": "768259"
  },
  {
    "text": "of a managed build system so it's able",
    "start": "768259",
    "end": "771470"
  },
  {
    "text": "to encapsulate some of those",
    "start": "771470",
    "end": "772699"
  },
  {
    "text": "dependencies but when you want to add a",
    "start": "772699",
    "end": "774859"
  },
  {
    "text": "new support you don't want to go out to",
    "start": "774859",
    "end": "776179"
  },
  {
    "text": "every build sort server add every",
    "start": "776179",
    "end": "778009"
  },
  {
    "text": "dependency and go from there but yeah",
    "start": "778009",
    "end": "781669"
  },
  {
    "text": "that Couzens actually stands up the",
    "start": "781669",
    "end": "783199"
  },
  {
    "text": "docker images can do it in parallel pull",
    "start": "783199",
    "end": "785359"
  },
  {
    "text": "all the information out and then have",
    "start": "785359",
    "end": "787850"
  },
  {
    "text": "all of your client libraries ready for",
    "start": "787850",
    "end": "789679"
  },
  {
    "text": "you and available I'm going to skip that",
    "start": "789679",
    "end": "792589"
  },
  {
    "text": "video like I said as we wanted to evolve",
    "start": "792589",
    "end": "797179"
  },
  {
    "text": "and iterate on sidecar we wanted to keep",
    "start": "797179",
    "end": "799279"
  },
  {
    "text": "in mind that we wanted to move to a",
    "start": "799279",
    "end": "800449"
  },
  {
    "text": "service mission later on some of the key",
    "start": "800449",
    "end": "803329"
  },
  {
    "text": "things to remember about a service mesh",
    "start": "803329",
    "end": "805369"
  },
  {
    "text": "is that it helps encapsulate a lot of",
    "start": "805369",
    "end": "807859"
  },
  {
    "text": "business logic that you don't want to",
    "start": "807859",
    "end": "809480"
  },
  {
    "text": "encumber your applications with things",
    "start": "809480",
    "end": "811489"
  },
  {
    "text": "like circuit breaking is really easy to",
    "start": "811489",
    "end": "814369"
  },
  {
    "text": "get configured in applications but as",
    "start": "814369",
    "end": "816109"
  },
  {
    "text": "you go and start to support multiple",
    "start": "816109",
    "end": "817459"
  },
  {
    "text": "libraries you find every circuit",
    "start": "817459",
    "end": "819139"
  },
  {
    "text": "breaking library has their own way to",
    "start": "819139",
    "end": "820970"
  },
  {
    "text": "configure different feature supports so",
    "start": "820970",
    "end": "823339"
  },
  {
    "text": "on and so forth",
    "start": "823339",
    "end": "824179"
  },
  {
    "text": "so having kind of one canonical",
    "start": "824179",
    "end": "825619"
  },
  {
    "text": "implementation the reference would be",
    "start": "825619",
    "end": "827269"
  },
  {
    "text": "great and service meshes give you that",
    "start": "827269",
    "end": "830179"
  },
  {
    "text": "ability in our considered v2 we wanted",
    "start": "830179",
    "end": "833839"
  },
  {
    "text": "to have our system look something like",
    "start": "833839",
    "end": "835339"
  },
  {
    "text": "this web apps make HTTP to requests to",
    "start": "835339",
    "end": "837949"
  },
  {
    "text": "on boxes link Rd on instances and then",
    "start": "837949",
    "end": "841579"
  },
  {
    "text": "those link Rd instances communicate with",
    "start": "841579",
    "end": "844100"
  },
  {
    "text": "off box and link Erdogan's instances",
    "start": "844100",
    "end": "846410"
  },
  {
    "text": "ultimately targeting that service in the",
    "start": "846410",
    "end": "849889"
  },
  {
    "text": "traditional boxcar set up our web apps",
    "start": "849889",
    "end": "852139"
  },
  {
    "text": "connect directly to the web apps and so",
    "start": "852139",
    "end": "855039"
  },
  {
    "text": "there's a little bit of teasing apart",
    "start": "855039",
    "end": "857059"
  },
  {
    "text": "here that we have to do by delegating",
    "start": "857059",
    "end": "860179"
  },
  {
    "text": "all of our load balancing logic into our",
    "start": "860179",
    "end": "861859"
  },
  {
    "text": "sidecar process we now have smaller and",
    "start": "861859",
    "end": "865850"
  },
  {
    "text": "dumber clients and our pattern starts to",
    "start": "865850",
    "end": "868850"
  },
  {
    "text": "look a little bit more like that service",
    "start": "868850",
    "end": "870439"
  },
  {
    "text": "mesh that we had targeted originally",
    "start": "870439",
    "end": "873910"
  },
  {
    "text": "from here we can a be test both the",
    "start": "873910",
    "end": "876410"
  },
  {
    "text": "service mesh in our existing solution",
    "start": "876410",
    "end": "878119"
  },
  {
    "text": "make sure performance is on par make",
    "start": "878119",
    "end": "880489"
  },
  {
    "text": "sure requests are being relayed",
    "start": "880489",
    "end": "881839"
  },
  {
    "text": "completely certain services that are",
    "start": "881839",
    "end": "884239"
  },
  {
    "text": "read-only we can actually do dark",
    "start": "884239",
    "end": "885619"
  },
  {
    "text": "traffic tests where we work a request",
    "start": "885619",
    "end": "887629"
  },
  {
    "text": "and just throughout its response",
    "start": "887629",
    "end": "890799"
  },
  {
    "text": "ultimately we want to kill off our old",
    "start": "891100",
    "end": "893509"
  },
  {
    "text": "sidecar and boxcar based implementations",
    "start": "893509",
    "end": "895639"
  },
  {
    "text": "and settle on the linker be",
    "start": "895639",
    "end": "897590"
  },
  {
    "text": "servus mesh based implementation again",
    "start": "897590",
    "end": "903140"
  },
  {
    "text": "revisiting some of those core concepts",
    "start": "903140",
    "end": "904790"
  },
  {
    "text": "and benefits of using a service mesh all",
    "start": "904790",
    "end": "906890"
  },
  {
    "text": "of those business logic and key",
    "start": "906890",
    "end": "910250"
  },
  {
    "text": "implementation details such as circuit",
    "start": "910250",
    "end": "911810"
  },
  {
    "text": "breaking load balancing and service",
    "start": "911810",
    "end": "913250"
  },
  {
    "text": "discovery are all encapsulated in one",
    "start": "913250",
    "end": "915170"
  },
  {
    "text": "you don't have to write that flavor",
    "start": "915170",
    "end": "916790"
  },
  {
    "text": "library for every service or every",
    "start": "916790",
    "end": "918800"
  },
  {
    "text": "client language that you want to support",
    "start": "918800",
    "end": "920380"
  },
  {
    "text": "your request past request path is",
    "start": "920380",
    "end": "923120"
  },
  {
    "text": "consistent so whether you're writing an",
    "start": "923120",
    "end": "924890"
  },
  {
    "text": "HTTP or restful base service you have",
    "start": "924890",
    "end": "927910"
  },
  {
    "text": "knowledge of how the request was",
    "start": "927910",
    "end": "929870"
  },
  {
    "text": "performed you don't have to know the",
    "start": "929870",
    "end": "932270"
  },
  {
    "text": "finer working details of every service",
    "start": "932270",
    "end": "934370"
  },
  {
    "text": "implementation out there to go and debug",
    "start": "934370",
    "end": "937190"
  },
  {
    "text": "it you can hop right in and understand",
    "start": "937190",
    "end": "938930"
  },
  {
    "text": "how everything's flowing lastly this",
    "start": "938930",
    "end": "942200"
  },
  {
    "text": "gives you the ability to centralize",
    "start": "942200",
    "end": "943640"
  },
  {
    "text": "visibility into these request flows",
    "start": "943640",
    "end": "945200"
  },
  {
    "text": "things like open tracing and zip can",
    "start": "945200",
    "end": "947240"
  },
  {
    "text": "play very nicely with this",
    "start": "947240",
    "end": "948440"
  },
  {
    "text": "implementation and you can see where",
    "start": "948440",
    "end": "950330"
  },
  {
    "text": "requests fail along the way by and large",
    "start": "950330",
    "end": "955339"
  },
  {
    "start": "954000",
    "end": "1072000"
  },
  {
    "text": "this is a very easy integration",
    "start": "955339",
    "end": "957279"
  },
  {
    "text": "especially for developers to understand",
    "start": "957279",
    "end": "959360"
  },
  {
    "text": "all of your communication is pointed out",
    "start": "959360",
    "end": "961370"
  },
  {
    "text": "localhost and when you're writing",
    "start": "961370",
    "end": "963470"
  },
  {
    "text": "clients you don't have to think too hard",
    "start": "963470",
    "end": "964730"
  },
  {
    "text": "about how things happen so where are we",
    "start": "964730",
    "end": "969680"
  },
  {
    "text": "today",
    "start": "969680",
    "end": "971589"
  },
  {
    "text": "indeed currently has G RPC support in",
    "start": "971589",
    "end": "974870"
  },
  {
    "text": "sidecar and has three client libraries",
    "start": "974870",
    "end": "978020"
  },
  {
    "text": "generating for that one for go Python",
    "start": "978020",
    "end": "980510"
  },
  {
    "text": "and node.js we have a bridge layer that",
    "start": "980510",
    "end": "984050"
  },
  {
    "text": "lets us continue to use boxcar generated",
    "start": "984050",
    "end": "986660"
  },
  {
    "text": "code but perform all of our",
    "start": "986660",
    "end": "988670"
  },
  {
    "text": "communication over G RPC this will make",
    "start": "988670",
    "end": "991400"
  },
  {
    "text": "it easy for our boxcar services to",
    "start": "991400",
    "end": "993140"
  },
  {
    "text": "migrate over to using this",
    "start": "993140",
    "end": "994400"
  },
  {
    "text": "infrastructure later on they can",
    "start": "994400",
    "end": "996440"
  },
  {
    "text": "continue to use thick client options or",
    "start": "996440",
    "end": "998330"
  },
  {
    "text": "they can even delegate all that",
    "start": "998330",
    "end": "999770"
  },
  {
    "text": "information to the service mesh layer",
    "start": "999770",
    "end": "1004260"
  },
  {
    "text": "some of the things that are still in",
    "start": "1005130",
    "end": "1006910"
  },
  {
    "text": "progress is the full adoption of a",
    "start": "1006910",
    "end": "1008410"
  },
  {
    "text": "service mesh we're considering solutions",
    "start": "1008410",
    "end": "1010270"
  },
  {
    "text": "like my sequel Redis MongoDB as",
    "start": "1010270",
    "end": "1013180"
  },
  {
    "text": "immediate adopters we have data teams",
    "start": "1013180",
    "end": "1016450"
  },
  {
    "text": "and different development team starting",
    "start": "1016450",
    "end": "1019750"
  },
  {
    "text": "to stand up their own proxies for",
    "start": "1019750",
    "end": "1021010"
  },
  {
    "text": "communicating with various some of these",
    "start": "1021010",
    "end": "1023470"
  },
  {
    "text": "various systems and some of the things",
    "start": "1023470",
    "end": "1026110"
  },
  {
    "text": "that's we got a little blocked on was",
    "start": "1026110",
    "end": "1028120"
  },
  {
    "text": "how to handle gr piecing in Java",
    "start": "1028120",
    "end": "1030260"
  },
  {
    "text": "naturally when you run your own Hadoop",
    "start": "1030260",
    "end": "1032510"
  },
  {
    "text": "cluster internally the question of how",
    "start": "1032510",
    "end": "1034970"
  },
  {
    "text": "do you deal with the proto 3 library",
    "start": "1034970",
    "end": "1037520"
  },
  {
    "text": "version comes into place there's a few",
    "start": "1037520",
    "end": "1039980"
  },
  {
    "text": "solutions out there the GRP CIO forums",
    "start": "1039980",
    "end": "1042410"
  },
  {
    "text": "call out to shading that library and",
    "start": "1042410",
    "end": "1044240"
  },
  {
    "text": "handling it that way I did a little bit",
    "start": "1044240",
    "end": "1048048"
  },
  {
    "text": "of a compatibility analysis between the",
    "start": "1048049",
    "end": "1050299"
  },
  {
    "text": "proto 3 and proto 2 serialization and",
    "start": "1050299",
    "end": "1052580"
  },
  {
    "text": "found that they were roughly compatible",
    "start": "1052580",
    "end": "1054260"
  },
  {
    "text": "with one another and there weren't too",
    "start": "1054260",
    "end": "1055490"
  },
  {
    "text": "many sharp edges but the the kind of way",
    "start": "1055490",
    "end": "1059780"
  },
  {
    "text": "that we've been looking at things lately",
    "start": "1059780",
    "end": "1061850"
  },
  {
    "text": "has been using things like OSGi and",
    "start": "1061850",
    "end": "1064210"
  },
  {
    "text": "shading at Build time rather than doing",
    "start": "1064210",
    "end": "1067850"
  },
  {
    "text": "it during the source code compilation so",
    "start": "1067850",
    "end": "1074270"
  },
  {
    "start": "1072000",
    "end": "1099000"
  },
  {
    "text": "let's kind of recap over the slew of",
    "start": "1074270",
    "end": "1076220"
  },
  {
    "text": "features that's we have run through or",
    "start": "1076220",
    "end": "1079220"
  },
  {
    "text": "the slew of things that we have talked",
    "start": "1079220",
    "end": "1080510"
  },
  {
    "text": "about we talked about some of the",
    "start": "1080510",
    "end": "1082160"
  },
  {
    "text": "inefficiencies inside of the Boxcar",
    "start": "1082160",
    "end": "1083780"
  },
  {
    "text": "framework as indeed has started to grow",
    "start": "1083780",
    "end": "1085640"
  },
  {
    "text": "and adopt new languages additionally as",
    "start": "1085640",
    "end": "1088130"
  },
  {
    "text": "I called out boxcar requires a fixed",
    "start": "1088130",
    "end": "1090470"
  },
  {
    "text": "number of connections so as you hire on",
    "start": "1090470",
    "end": "1092240"
  },
  {
    "text": "400 new engineers you have 1600 new",
    "start": "1092240",
    "end": "1096530"
  },
  {
    "text": "connections to deal with we interact a",
    "start": "1096530",
    "end": "1100850"
  },
  {
    "text": "little bit about evolving sidecar to",
    "start": "1100850",
    "end": "1102440"
  },
  {
    "text": "support G RPC and remove some of that",
    "start": "1102440",
    "end": "1104240"
  },
  {
    "text": "toil of needing to communicate with",
    "start": "1104240",
    "end": "1105770"
  },
  {
    "text": "existing Boxcar services in production",
    "start": "1105770",
    "end": "1107840"
  },
  {
    "text": "while quickly adding support for new",
    "start": "1107840",
    "end": "1109610"
  },
  {
    "text": "languages that we wanted to offer we",
    "start": "1109610",
    "end": "1114380"
  },
  {
    "start": "1113000",
    "end": "1122000"
  },
  {
    "text": "talked about how we leverage psycho how",
    "start": "1114380",
    "end": "1116360"
  },
  {
    "text": "we can leverage sidecar as means of",
    "start": "1116360",
    "end": "1118700"
  },
  {
    "text": "migrating towards a service mesh and",
    "start": "1118700",
    "end": "1122500"
  },
  {
    "start": "1122000",
    "end": "1418000"
  },
  {
    "text": "lastly we talked about kind of the state",
    "start": "1122500",
    "end": "1124730"
  },
  {
    "text": "of the world where indeed is using G RPC",
    "start": "1124730",
    "end": "1126950"
  },
  {
    "text": "today thank you",
    "start": "1126950",
    "end": "1131690"
  },
  {
    "text": "[Applause]",
    "start": "1131690",
    "end": "1138510"
  },
  {
    "text": "questions it's not that it wasn't",
    "start": "1138510",
    "end": "1150580"
  },
  {
    "text": "compatible we found serialization so",
    "start": "1150580",
    "end": "1155230"
  },
  {
    "text": "long as you're still generating code",
    "start": "1155230",
    "end": "1156580"
  },
  {
    "text": "using the proto 2 compiler things tended",
    "start": "1156580",
    "end": "1159040"
  },
  {
    "text": "to play well with one another as long as",
    "start": "1159040",
    "end": "1162010"
  },
  {
    "text": "you didn't wind up with that protojet at",
    "start": "1162010",
    "end": "1164110"
  },
  {
    "text": "3 there's some more like extensive based",
    "start": "1164110",
    "end": "1166570"
  },
  {
    "text": "testing that I wanted to do but I",
    "start": "1166570",
    "end": "1168070"
  },
  {
    "text": "haven't gotten around to doing it yet",
    "start": "1168070",
    "end": "1169570"
  },
  {
    "text": "but we've seen pretty good success with",
    "start": "1169570",
    "end": "1171850"
  },
  {
    "text": "these Python and you know clients that",
    "start": "1171850",
    "end": "1174970"
  },
  {
    "text": "are using Protege to our pro 2 3",
    "start": "1174970",
    "end": "1177250"
  },
  {
    "text": "generated code and interrupting with our",
    "start": "1177250",
    "end": "1180280"
  },
  {
    "text": "existing boxcar services that are using",
    "start": "1180280",
    "end": "1181990"
  },
  {
    "text": "proto 2 now when you go into the Hadoop",
    "start": "1181990",
    "end": "1184270"
  },
  {
    "text": "landscape you're kind of forced into the",
    "start": "1184270",
    "end": "1186250"
  },
  {
    "text": "bootloader that they have there where",
    "start": "1186250",
    "end": "1187780"
  },
  {
    "text": "there's proto 2 at the bootloader layer",
    "start": "1187780",
    "end": "1189730"
  },
  {
    "text": "versus proto 3 at your application level",
    "start": "1189730",
    "end": "1192550"
  },
  {
    "text": "layer and so we wanted to make sure that",
    "start": "1192550",
    "end": "1195180"
  },
  {
    "text": "when invoking certain aspects of G RPC",
    "start": "1195180",
    "end": "1197950"
  },
  {
    "text": "we preserve the proto 3 invocation path",
    "start": "1197950",
    "end": "1200530"
  },
  {
    "text": "and so one of our teams have started",
    "start": "1200530",
    "end": "1203260"
  },
  {
    "text": "using OSGi in that case where any time a",
    "start": "1203260",
    "end": "1206740"
  },
  {
    "text": "client invokes code within your service",
    "start": "1206740",
    "end": "1209470"
  },
  {
    "text": "package later we make sure we invoke G",
    "start": "1209470",
    "end": "1212230"
  },
  {
    "text": "our PC and proto 3 properly and then",
    "start": "1212230",
    "end": "1215710"
  },
  {
    "text": "shading at runtime is also another",
    "start": "1215710",
    "end": "1217480"
  },
  {
    "text": "possum or not at runtime at Build time",
    "start": "1217480",
    "end": "1219190"
  },
  {
    "text": "is another possibility so",
    "start": "1219190",
    "end": "1222840"
  },
  {
    "text": "when we were doing when we were doing",
    "start": "1230260",
    "end": "1234289"
  },
  {
    "text": "HTTP to base testing there was very",
    "start": "1234289",
    "end": "1236630"
  },
  {
    "text": "little overhead especially for unboxed",
    "start": "1236630",
    "end": "1238760"
  },
  {
    "text": "HTTP 2 calls sub-millisecond effectively",
    "start": "1238760",
    "end": "1242600"
  },
  {
    "text": "I had to go down to the nanosecond layer",
    "start": "1242600",
    "end": "1244190"
  },
  {
    "text": "to get any kind of rough timing around",
    "start": "1244190",
    "end": "1245720"
  },
  {
    "text": "that obviously with the initial",
    "start": "1245720",
    "end": "1248720"
  },
  {
    "text": "connection establishment there's a lot",
    "start": "1248720",
    "end": "1250399"
  },
  {
    "text": "more overhead but ideally your",
    "start": "1250399",
    "end": "1252169"
  },
  {
    "text": "application isn't issuing requests in",
    "start": "1252169",
    "end": "1254179"
  },
  {
    "text": "the critical path on that initial",
    "start": "1254179",
    "end": "1255890"
  },
  {
    "text": "connection establishment we have",
    "start": "1255890",
    "end": "1257960"
  },
  {
    "text": "background dependencies that are",
    "start": "1257960",
    "end": "1259220"
  },
  {
    "text": "constantly pinging these services and",
    "start": "1259220",
    "end": "1261080"
  },
  {
    "text": "keeping these channels open for us that",
    "start": "1261080",
    "end": "1263779"
  },
  {
    "text": "way we can ensure that when a request",
    "start": "1263779",
    "end": "1265190"
  },
  {
    "text": "comes in we can have that pre",
    "start": "1265190",
    "end": "1267740"
  },
  {
    "text": "established connection for us any other",
    "start": "1267740",
    "end": "1276590"
  },
  {
    "text": "questions",
    "start": "1276590",
    "end": "1278919"
  },
  {
    "text": "what drove the need for having to",
    "start": "1280850",
    "end": "1282740"
  },
  {
    "text": "support multiple languages correct so",
    "start": "1282740",
    "end": "1287150"
  },
  {
    "text": "our labs team is by and large had an",
    "start": "1287150",
    "end": "1289910"
  },
  {
    "text": "incubator they're making new projects on",
    "start": "1289910",
    "end": "1291710"
  },
  {
    "text": "a day to day basis they use Python by",
    "start": "1291710",
    "end": "1295220"
  },
  {
    "text": "and large and the reason for that is",
    "start": "1295220",
    "end": "1297170"
  },
  {
    "text": "speed of delivery they're able to",
    "start": "1297170",
    "end": "1299270"
  },
  {
    "text": "prototype an idea and get it out in a",
    "start": "1299270",
    "end": "1300950"
  },
  {
    "text": "matter of time or in a matter of much",
    "start": "1300950",
    "end": "1304100"
  },
  {
    "text": "smaller time than if they were to use",
    "start": "1304100",
    "end": "1305390"
  },
  {
    "text": "Java now they need to get access to",
    "start": "1305390",
    "end": "1309590"
  },
  {
    "text": "existing production data so rather going",
    "start": "1309590",
    "end": "1311510"
  },
  {
    "text": "and rolling their own system they wanted",
    "start": "1311510",
    "end": "1313130"
  },
  {
    "text": "to talk to box hard so going and using",
    "start": "1313130",
    "end": "1315950"
  },
  {
    "text": "something like G RPC to communicate with",
    "start": "1315950",
    "end": "1318260"
  },
  {
    "text": "those existing services proved to be",
    "start": "1318260",
    "end": "1320060"
  },
  {
    "text": "promising because G RPC offers code",
    "start": "1320060",
    "end": "1322010"
  },
  {
    "text": "generation across a larger variety of",
    "start": "1322010",
    "end": "1323660"
  },
  {
    "text": "languages we don't need to worry too",
    "start": "1323660",
    "end": "1326360"
  },
  {
    "text": "much about adding our own support for it",
    "start": "1326360",
    "end": "1328400"
  },
  {
    "text": "and then trying to build that into our",
    "start": "1328400",
    "end": "1329810"
  },
  {
    "text": "timing a lot of this would just come",
    "start": "1329810",
    "end": "1332720"
  },
  {
    "text": "kind of naturally and we can offer it",
    "start": "1332720",
    "end": "1334400"
  },
  {
    "text": "quickly I think I got the nodejs",
    "start": "1334400",
    "end": "1337130"
  },
  {
    "text": "implementation working in a day or so so",
    "start": "1337130",
    "end": "1340850"
  },
  {
    "text": "not really an overhead they're solve one",
    "start": "1340850",
    "end": "1346880"
  },
  {
    "text": "more yes",
    "start": "1346880",
    "end": "1349480"
  },
  {
    "text": "we did not have to migrate any restful",
    "start": "1357560",
    "end": "1359990"
  },
  {
    "text": "implementations over to using protobufs",
    "start": "1359990",
    "end": "1362350"
  },
  {
    "text": "we have a few HTTP HBP is that are you",
    "start": "1362350",
    "end": "1366650"
  },
  {
    "text": "using protocol buffers as their means of",
    "start": "1366650",
    "end": "1368450"
  },
  {
    "text": "transport but they also support things",
    "start": "1368450",
    "end": "1369890"
  },
  {
    "text": "like JSON and XML the Spring Framework",
    "start": "1369890",
    "end": "1373490"
  },
  {
    "text": "if you're using Java has an actual",
    "start": "1373490",
    "end": "1376790"
  },
  {
    "text": "message convertor built into it for",
    "start": "1376790",
    "end": "1378740"
  },
  {
    "text": "converting requests based on either",
    "start": "1378740",
    "end": "1380750"
  },
  {
    "text": "protobuf JSON or XML and so you can use",
    "start": "1380750",
    "end": "1382940"
  },
  {
    "text": "protobuf to just describe your request",
    "start": "1382940",
    "end": "1385160"
  },
  {
    "text": "response models but then in add that",
    "start": "1385160",
    "end": "1388010"
  },
  {
    "text": "converter both on the client layer and",
    "start": "1388010",
    "end": "1389690"
  },
  {
    "text": "on the server layer to use protocol",
    "start": "1389690",
    "end": "1392630"
  },
  {
    "text": "buffers as you mean it's communication",
    "start": "1392630",
    "end": "1394040"
  },
  {
    "text": "but also then let testers go and make",
    "start": "1394040",
    "end": "1397190"
  },
  {
    "text": "natural JSON based requests we use that",
    "start": "1397190",
    "end": "1400490"
  },
  {
    "text": "for our navigation system",
    "start": "1400490",
    "end": "1403780"
  },
  {
    "text": "oh sorry the demo didn't work thanks you",
    "start": "1411090",
    "end": "1413040"
  },
  {
    "text": "all for coming",
    "start": "1413040",
    "end": "1414570"
  },
  {
    "text": "[Applause]",
    "start": "1414570",
    "end": "1419889"
  }
]