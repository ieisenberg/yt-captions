[
  {
    "start": "0",
    "end": "382000"
  },
  {
    "text": "hello everyone welcome to the advanced vlogging with fluence session at qcon 2020",
    "start": "80",
    "end": "5359"
  },
  {
    "text": "europe my name is eduardo silva and together with a wesley pettit from amazon we're fluent maintainers we're going to",
    "start": "5359",
    "end": "12880"
  },
  {
    "text": "deep dive into fluid-based internals how to solve the vlogging problems and everything that you was waiting for",
    "start": "12880",
    "end": "30080"
  },
  {
    "text": "the main thing about logging is have the capability to perform data analysis but to perform their",
    "start": "30080",
    "end": "36800"
  },
  {
    "text": "analysis you need to collect the data and maybe centralize them in one place a common use case is to have a hardware",
    "start": "36800",
    "end": "43760"
  },
  {
    "text": "or a piece of software that delivers some messages on break or some blog and then centralize this information",
    "start": "43760",
    "end": "49920"
  },
  {
    "text": "like in a database or a cloud service so then you can perform your own data analysis",
    "start": "49920",
    "end": "56320"
  },
  {
    "text": "but when the data starts scaling up also we need to scale up our logging",
    "start": "56320",
    "end": "62480"
  },
  {
    "text": "pipeline we need to scale up our aggregation layer and also the analysis",
    "start": "62480",
    "end": "68560"
  },
  {
    "text": "get affected by this because now you have more data to process and sometimes a timing performance is really important",
    "start": "68560",
    "end": "75520"
  },
  {
    "text": "for any business and also there are many challenges with this",
    "start": "75520",
    "end": "80960"
  },
  {
    "text": "because data comes from different places sometimes we can collect login information or metrics from network",
    "start": "80960",
    "end": "86960"
  },
  {
    "text": "endpoints from tcp udp from the file system from the local machine or also through services like",
    "start": "86960",
    "end": "92960"
  },
  {
    "text": "systemd or others and before we can do data analysis we",
    "start": "92960",
    "end": "99200"
  },
  {
    "text": "need to of course convert take this data out from the source right convert this data from maybe instructor",
    "start": "99200",
    "end": "105680"
  },
  {
    "text": "format to a structure format perform data enrichment because sometimes we need to add some context to",
    "start": "105680",
    "end": "111360"
  },
  {
    "text": "this data to finally be able to deliver this data to a destination like a cloud service or",
    "start": "111360",
    "end": "116960"
  },
  {
    "text": "your fancy database and if we think about kubernetes i think",
    "start": "116960",
    "end": "122719"
  },
  {
    "text": "the scenario is more complex kubernetes is a distributed environment your application lives in a pot and that part is not",
    "start": "122719",
    "end": "130239"
  },
  {
    "text": "alone in a node can have many pots together and a cluster can have many nodes",
    "start": "130239",
    "end": "135440"
  },
  {
    "text": "so if your application is just in one pot and may or may n different replicas how do you correlate all this",
    "start": "135440",
    "end": "141680"
  },
  {
    "text": "information back together in a database so you can do data analysis and that is one",
    "start": "141680",
    "end": "147280"
  },
  {
    "text": "of the complexities of this",
    "start": "147280",
    "end": "150879"
  },
  {
    "text": "a common workflow for login imagine that you have like a a gmail file which you have just one",
    "start": "155280",
    "end": "161360"
  },
  {
    "text": "container this contains reading data to the standard output or standard error interface okay so as an example i have a",
    "start": "161360",
    "end": "168879"
  },
  {
    "text": "jbl file on the left which is called apache logs that just generate random apache logs",
    "start": "168879",
    "end": "174319"
  },
  {
    "text": "messages and at the end you get to some raw messages like the one that you have the right with an ip address and time sum and the",
    "start": "174319",
    "end": "181760"
  },
  {
    "text": "whole message from there from the http protocol",
    "start": "181760",
    "end": "186560"
  },
  {
    "text": "but in kubernetes or any containerized environment that message that was generated by the",
    "start": "186959",
    "end": "193519"
  },
  {
    "text": "container is redirected most of the time to the file system sometimes it's handled by",
    "start": "193519",
    "end": "198959"
  },
  {
    "text": "journal d in a different way but by default it goes to a file system to a container",
    "start": "198959",
    "end": "205040"
  },
  {
    "text": "identification that has the port name the namespace in a normal log file that also not do",
    "start": "205040",
    "end": "212480"
  },
  {
    "text": "not only contain the message but that message also comes with a bit of more context for example the original message is",
    "start": "212480",
    "end": "219280"
  },
  {
    "text": "encapsulated in a json and this json gets the log the stream name and",
    "start": "219280",
    "end": "224400"
  },
  {
    "text": "the timestamp then this information is not enough",
    "start": "224400",
    "end": "230480"
  },
  {
    "text": "because we are missing the context and the context is where this data was generated from which",
    "start": "230480",
    "end": "236000"
  },
  {
    "text": "node which host and do we have any labels do we have any annotations that comes from any specific context",
    "start": "236000",
    "end": "243760"
  },
  {
    "text": "so this information alone is not useful enough we need to correlate all this information together",
    "start": "243760",
    "end": "249360"
  },
  {
    "text": "and because at the end with this information and then we want to have something more complete",
    "start": "249360",
    "end": "254959"
  },
  {
    "text": "like this where we have all the kubernetes context we have the message for example we have the host where this",
    "start": "254959",
    "end": "261120"
  },
  {
    "text": "data was generated from the container name the docker id",
    "start": "261120",
    "end": "266160"
  },
  {
    "text": "because all this information is relevant to for us to be able to perform data",
    "start": "266160",
    "end": "271360"
  },
  {
    "text": "analysis once we centralize the data in our database and that is one a one of the solutions",
    "start": "271360",
    "end": "278960"
  },
  {
    "text": "fluent fluently is a log processor that is part of the fluency family we are proud to",
    "start": "278960",
    "end": "284240"
  },
  {
    "text": "say that fluent bait is a cncf supply under the umbrella of fluency and of",
    "start": "284240",
    "end": "289600"
  },
  {
    "text": "course a fully apache license it was created in 2015 originally for embedded linux but then",
    "start": "289600",
    "end": "296320"
  },
  {
    "text": "it quickly evolved for the cloud space and nowadays it's almost everywhere it's",
    "start": "296320",
    "end": "301840"
  },
  {
    "text": "written in c language and that's one of the main reasons because it has a very low memory",
    "start": "301840",
    "end": "307120"
  },
  {
    "text": "and cpu footprint it has a plugable architecture we have more than 60 plugins available made by",
    "start": "307120",
    "end": "312880"
  },
  {
    "text": "the community and these plugins allows us to collect data from different source from the",
    "start": "312880",
    "end": "317919"
  },
  {
    "text": "to filter data or send data out to different destinations",
    "start": "317919",
    "end": "323039"
  },
  {
    "text": "and fluently internally it's like a pipeline you can consider that the data comes from an input you can parse the data filter",
    "start": "323520",
    "end": "329759"
  },
  {
    "text": "the data buffer the data to finally send its data out to a cloud service or your database so the",
    "start": "329759",
    "end": "335919"
  },
  {
    "text": "whole point about login logins to take data from point a to point b but in the middle",
    "start": "335919",
    "end": "341360"
  },
  {
    "text": "do the data transformation and apply all your logic that is necessary",
    "start": "341360",
    "end": "346560"
  },
  {
    "text": "in kubernetes likely you deploy fluent as a demo set but also you can deploy it as a sidecar",
    "start": "346560",
    "end": "352400"
  },
  {
    "text": "but here in the example we deployed f1b as a demonstration running the node where it's able to collect all the logs",
    "start": "352400",
    "end": "358880"
  },
  {
    "text": "from the node to finally correlate all this information back with the api server",
    "start": "358880",
    "end": "364479"
  },
  {
    "text": "where the you can get information like a labels annotations so your final record",
    "start": "364479",
    "end": "370560"
  },
  {
    "text": "can have all the information that is necessary for the data analysis we're going to run a pretty quickly demo",
    "start": "370560",
    "end": "378400"
  },
  {
    "text": "to see how this works i'm going to share my screen i started the recording i'm going to",
    "start": "378400",
    "end": "384000"
  },
  {
    "start": "382000",
    "end": "675000"
  },
  {
    "text": "start the demo in three two one",
    "start": "384000",
    "end": "390080"
  },
  {
    "text": "here in the terminal the demo that we're going to do it's a pretty basic demo basically on my left hand",
    "start": "390560",
    "end": "397199"
  },
  {
    "text": "i'm running mini cube mini cube and on the right one i'm going",
    "start": "397199",
    "end": "403759"
  },
  {
    "text": "to run in my local machine fluent bed but this time flowing bit which is running the",
    "start": "403759",
    "end": "409120"
  },
  {
    "text": "right paint is basically will work as an aggregator collect any message that comes from any cluster right",
    "start": "409120",
    "end": "416880"
  },
  {
    "text": "process it reform it to json and bring it out to the standard output",
    "start": "416880",
    "end": "422400"
  },
  {
    "text": "so the first thing that we're going to do here in in mini cube in the left pane is to deploy a simple um apache logs",
    "start": "422400",
    "end": "430560"
  },
  {
    "text": "application same as we did in the presentation which basically just push out random",
    "start": "430560",
    "end": "436720"
  },
  {
    "text": "logs like looking like an apache server so we're going to deploy this spot",
    "start": "436720",
    "end": "442880"
  },
  {
    "text": "and then take a look if it's all good yeah it's already up and running so we",
    "start": "445599",
    "end": "451440"
  },
  {
    "text": "can take a look at the logs of that a specific pod",
    "start": "451440",
    "end": "456240"
  },
  {
    "text": "and see that it's generating messages in a random way different ip addresses and messages i'm",
    "start": "456639",
    "end": "461919"
  },
  {
    "text": "going to break it a little bit so we can get the whole messages here",
    "start": "461919",
    "end": "467680"
  },
  {
    "text": "okay this is just running locally because we are not shipping out the messages we're just querying the local intents of mini cube",
    "start": "467680",
    "end": "474800"
  },
  {
    "text": "so what we're going to do now is to deploy fluid i just prepare and skip to make it shorter when we",
    "start": "474800",
    "end": "482080"
  },
  {
    "text": "ingest the config map we deploy the demon set for mini cube and we just query the status of it",
    "start": "482080",
    "end": "488639"
  },
  {
    "text": "after this deployment after a few seconds we will see that in our right pane the data will start",
    "start": "488639",
    "end": "494960"
  },
  {
    "text": "flowing and being formatted in json as you can see we are getting the data without any",
    "start": "494960",
    "end": "501520"
  },
  {
    "text": "problem i'm going to stop right now i'm going to delete that pot",
    "start": "501520",
    "end": "508879"
  },
  {
    "text": "so we can do a clear analysis on the right side as you can see for example on this",
    "start": "508879",
    "end": "514800"
  },
  {
    "text": "record we have the date we have the original log the stream and the time stamp",
    "start": "514800",
    "end": "519919"
  },
  {
    "text": "from that original record and also we have the whole kubernetes metadata",
    "start": "519919",
    "end": "525120"
  },
  {
    "text": "which is quite important because we get the pot name the name space name for id labels host container name",
    "start": "525120",
    "end": "532080"
  },
  {
    "text": "and so on and well the original messages is here in the second key which is",
    "start": "532080",
    "end": "537440"
  },
  {
    "text": "called log now i'm going to show another feature of fluid",
    "start": "537440",
    "end": "542560"
  },
  {
    "text": "which support a custom parsing based on live and annotations so i have here the same",
    "start": "542560",
    "end": "550800"
  },
  {
    "text": "apache log container definition but i'm adding a parser in an annotation",
    "start": "550800",
    "end": "557760"
  },
  {
    "text": "basically i'm saying please parse this all these records from this container using the",
    "start": "557760",
    "end": "562800"
  },
  {
    "text": "apache parses and apache parasite is predefined in the fluid bed configuration",
    "start": "562800",
    "end": "568320"
  },
  {
    "text": "so as soon as i deploy this fluid will get aware of all these our apache dot messages it",
    "start": "568320",
    "end": "574240"
  },
  {
    "text": "will structure them and send it out to my aggregator which is running on the right side",
    "start": "574240",
    "end": "580160"
  },
  {
    "text": "so we follow the same procedure",
    "start": "580160",
    "end": "583680"
  },
  {
    "text": "and we will see that the data will start flowing on the right side but now take a",
    "start": "585760",
    "end": "590880"
  },
  {
    "text": "look at the output which is a little bit different",
    "start": "590880",
    "end": "596240"
  },
  {
    "text": "for example if we can take a look at this log it's pretty much the same we have the date the log the stream the time but",
    "start": "596480",
    "end": "604240"
  },
  {
    "text": "also now we have assisted flowing a new a new map which contains the data",
    "start": "604240",
    "end": "610959"
  },
  {
    "text": "processor coming from the original log message so if you go up you will see that we have the ip address",
    "start": "610959",
    "end": "617600"
  },
  {
    "text": "or the host we have the user the method the path that was accessed the return status cost",
    "start": "617600",
    "end": "624079"
  },
  {
    "text": "and the size this is a unique feature that is provided in fluent bit so for example if you are sending and",
    "start": "624079",
    "end": "631360"
  },
  {
    "text": "running a goblin application you can say hey pass my lock messages as call or well if",
    "start": "631360",
    "end": "636959"
  },
  {
    "text": "you are chipping just json messages as log messages from your container",
    "start": "636959",
    "end": "642000"
  },
  {
    "text": "that will be handled right away for you you don't need to do anything else extra so this is one of",
    "start": "642000",
    "end": "647920"
  },
  {
    "text": "the advantage of using fluent bed in kubernetes is that it can take all your logs out of",
    "start": "647920",
    "end": "653360"
  },
  {
    "text": "it i'm using another fluid bit as a navigator just as an example but you can use search influx db aws",
    "start": "653360",
    "end": "661200"
  },
  {
    "text": "cloud services google stack driver and any of the more than 20 or 30 outputs destination that we support",
    "start": "661200",
    "end": "675839"
  },
  {
    "text": "okay so weeks ago we released fluent bet 1.5 one of the major air release of the",
    "start": "677519",
    "end": "683839"
  },
  {
    "text": "fluid era and it has a lot of improvements and also a lot of",
    "start": "683839",
    "end": "689120"
  },
  {
    "text": "contributions from different companies one of the major changes also in the",
    "start": "689120",
    "end": "695279"
  },
  {
    "text": "core is ability to have a more configurable and reliable networking functions",
    "start": "695279",
    "end": "701519"
  },
  {
    "text": "and before this fluid bit was didn't have the option to send data through keep alive connections",
    "start": "701519",
    "end": "707680"
  },
  {
    "text": "right now but right now you can reuse keep alive connections you can reuse all your tls hand checks",
    "start": "707680",
    "end": "714000"
  },
  {
    "text": "so of course you can send data fastest this was not a need years ago but nowadays",
    "start": "714000",
    "end": "720399"
  },
  {
    "text": "it is since people is mostly streaming data every second",
    "start": "720399",
    "end": "726480"
  },
  {
    "text": "also we have a full windows support version and on this version we",
    "start": "727200",
    "end": "733600"
  },
  {
    "text": "we have implemented the whole windows service so you can run fluid and windows like a service",
    "start": "733600",
    "end": "739440"
  },
  {
    "text": "also the plugin to collect data from the windows event log has been highly improved in addition now",
    "start": "739440",
    "end": "745920"
  },
  {
    "text": "you can run fluid for windows on kubernetes without any problem we did a couple of improvements",
    "start": "745920",
    "end": "752800"
  },
  {
    "text": "so if you're running a windows with coordinates windows you can run your pods",
    "start": "752800",
    "end": "758240"
  },
  {
    "text": "and collect your logs with fluid without any major issue",
    "start": "758240",
    "end": "763279"
  },
  {
    "text": "also our community has contributed a lot of ways to monitor a fluent bed so right now we have in our",
    "start": "763680",
    "end": "770639"
  },
  {
    "text": "documentation a couple of examples on how to run your own grafana dashboards so you can take advantage of",
    "start": "770639",
    "end": "777040"
  },
  {
    "text": "the whole monitoring also from the same pipeline that you are working with",
    "start": "777040",
    "end": "782320"
  },
  {
    "text": "in the part of the storage we are exposing also metrics to see how the data that is inside the",
    "start": "782320",
    "end": "788560"
  },
  {
    "text": "pipeline is flowing meaning how many chunks of data do i have in memory how many of",
    "start": "788560",
    "end": "794000"
  },
  {
    "text": "them are in the file system so you can get a notion of how the data is flowing also how much this space are you using",
    "start": "794000",
    "end": "801760"
  },
  {
    "text": "and how much memory up in memory are you consuming for all your data",
    "start": "801760",
    "end": "807200"
  },
  {
    "text": "ingestion and delivery as part of the enterprise",
    "start": "807200",
    "end": "812320"
  },
  {
    "text": "and partnerships with it we're happy to say that we have a new new connector so improve connector",
    "start": "812320",
    "end": "818800"
  },
  {
    "text": "for example for the amazon elasticsearch service we have a new plugin for the amazon",
    "start": "818800",
    "end": "824000"
  },
  {
    "text": "cloud watch wes is going to talk more about it and also new enterprise connector for locked dna and new relic",
    "start": "824000",
    "end": "830000"
  },
  {
    "text": "services also in the latest mods we have been working with google to",
    "start": "830000",
    "end": "836320"
  },
  {
    "text": "improve the google stack driver connected in fluent bed which is really in the sea of course and we have many improvements for to",
    "start": "836320",
    "end": "842880"
  },
  {
    "text": "consume kubernetes resources special labels you can append special keys and nowadays",
    "start": "842880",
    "end": "848639"
  },
  {
    "text": "it's becoming a reliable solution for most of the google cloud customers",
    "start": "848639",
    "end": "855199"
  },
  {
    "text": "as an overall status of the project and just in 2020 or half of this year right now",
    "start": "855680",
    "end": "860880"
  },
  {
    "text": "we're hitting more than 100 million deployments and this is just an insane growth of the",
    "start": "860880",
    "end": "866720"
  },
  {
    "text": "project so every day we have more than 500 000 deployments from different clusters",
    "start": "866720",
    "end": "872320"
  },
  {
    "text": "and everywhere in the world we don't have visibility who or from where we just have we know that we are getting",
    "start": "872320",
    "end": "878399"
  },
  {
    "text": "all these dollars every day and of course this is thanks to the community and the traction",
    "start": "878399",
    "end": "885120"
  },
  {
    "text": "that we are getting and in the enterprise as i said the",
    "start": "885120",
    "end": "890240"
  },
  {
    "text": "traction we have many companies using flow and bed and suggesting fluid bits for the customers",
    "start": "890240",
    "end": "895360"
  },
  {
    "text": "like aws google cloud arm sumo logic data log dna and all of them that you can see",
    "start": "895360",
    "end": "901120"
  },
  {
    "text": "on these slides and many more companies that of course they use fluid bit privately for their own",
    "start": "901120",
    "end": "907279"
  },
  {
    "text": "reasons now i'm going to pass the control to wesley who's going to talk about",
    "start": "907279",
    "end": "913519"
  },
  {
    "text": "his great work on the amazon connectors i wish we were all in amsterdam but oh",
    "start": "913519",
    "end": "919680"
  },
  {
    "text": "well anyway so as edwardo said i'm going to be talking about the work that i've done with aws",
    "start": "919680",
    "end": "925360"
  },
  {
    "text": "plugins in fluent bit i am the aws co-maintainer of fluentpit i maintain the aws portions of fluentbit",
    "start": "925360",
    "end": "932560"
  },
  {
    "text": "and generally help out with the project as a whole um so last year i launched aws for",
    "start": "932560",
    "end": "940000"
  },
  {
    "text": "fluent bit which is the aws distribution of fluid bit had fluid bit bundled with a couple of",
    "start": "940000",
    "end": "945600"
  },
  {
    "text": "uh external plug-ins written in go um that supported cloud watch logs",
    "start": "945600",
    "end": "951120"
  },
  {
    "text": "kinesis fire hose and kinesis streams so the reason why i i wrote those",
    "start": "951120",
    "end": "958240"
  },
  {
    "text": "external plugins and go the main reason was because so aws has its own authentication and credential and",
    "start": "958240",
    "end": "965519"
  },
  {
    "text": "signing mechanisms and there's an address sdk and go that supports those",
    "start": "965519",
    "end": "970880"
  },
  {
    "text": "um and there was not one in c um also in general you know golang",
    "start": "970880",
    "end": "976079"
  },
  {
    "text": "supports a very fast rapid development and so it allowed us to integrate with flintbit very quickly",
    "start": "976079",
    "end": "983680"
  },
  {
    "text": "so as i mentioned aws has its own like custom unique signing mechanism that we came up",
    "start": "983680",
    "end": "989279"
  },
  {
    "text": "with to fit the scale of aws and there are many many sources that you",
    "start": "989279",
    "end": "996079"
  },
  {
    "text": "can have for credentials depending on where in aws you're running um and so this was a blocker for",
    "start": "996079",
    "end": "1002880"
  },
  {
    "text": "me to contribute plugins to the core fluid bit but new in flintbit 1.5 there is a",
    "start": "1002880",
    "end": "1012320"
  },
  {
    "text": "core library for aws authentication signing and credentials um so basically",
    "start": "1012320",
    "end": "1019600"
  },
  {
    "text": "last year eduardo and i met at kubecon and then aws re invent we talked and then i took a long",
    "start": "1019600",
    "end": "1026319"
  },
  {
    "text": "vacation in december and during that time i day and night worked writing code um to",
    "start": "1026319",
    "end": "1035600"
  },
  {
    "text": "create this library a custom library influent bit to do authentication and signing as you saw in",
    "start": "1036160",
    "end": "1042319"
  },
  {
    "text": "the previous slide uh it ended up being almost 7 000 lines of code it was it was pretty huge but um it's finally",
    "start": "1042319",
    "end": "1049039"
  },
  {
    "text": "now released and it works and so i'm going to talk about what you can do with it so the first thing that i",
    "start": "1049039",
    "end": "1055600"
  },
  {
    "text": "did is using that library um i took the elasticsearch plugin in in the core flint bit and i added",
    "start": "1055600",
    "end": "1063039"
  },
  {
    "text": "support for amazon elasticsearch service um so amazon electric search service is you",
    "start": "1063039",
    "end": "1068960"
  },
  {
    "text": "know it's just a uh a hosted version of elasticsearch but it has authentication in front",
    "start": "1068960",
    "end": "1075440"
  },
  {
    "text": "of it um so we needed this library so as you can see here there are new fields it was",
    "start": "1075440",
    "end": "1080559"
  },
  {
    "text": "off aws region um you also turn tls on and one thing i want to note is the port",
    "start": "1080559",
    "end": "1087200"
  },
  {
    "text": "is usually 443 if you're using amazon elasticsearch and for the host you do not put the",
    "start": "1087200",
    "end": "1093679"
  },
  {
    "text": "protocol you don't put the http https in there that's one one thing that sometimes people get confused with it first",
    "start": "1093679",
    "end": "1100960"
  },
  {
    "text": "um and then also we're seeing here there's also another field it was roll",
    "start": "1100960",
    "end": "1106799"
  },
  {
    "text": "on that lets you specify a i am role that",
    "start": "1106799",
    "end": "1112400"
  },
  {
    "text": "it will make an sts assume roll call on and so that you can use an alternate role to put to elasticsearch",
    "start": "1112400",
    "end": "1119600"
  },
  {
    "text": "um check out the documentation if you want to learn more about that um then so you know as i said",
    "start": "1119600",
    "end": "1126720"
  },
  {
    "text": "last year i created a external uh plugin in go for cloudwatch i rewrote",
    "start": "1126720",
    "end": "1133360"
  },
  {
    "text": "that plugin and contributed to the core fluid bit in c uh which you can see here this is a",
    "start": "1133360",
    "end": "1139600"
  },
  {
    "text": "configuration for it it supports all the same options the only difference is that the name of the plugin is",
    "start": "1139600",
    "end": "1146080"
  },
  {
    "text": "cloudwatch underscore logs the old plugin was just cloudwatch so that is the only difference otherwise",
    "start": "1146080",
    "end": "1153280"
  },
  {
    "text": "you can just very cleanly migrate between the two of them so this new plugin because it's in the",
    "start": "1153280",
    "end": "1159760"
  },
  {
    "text": "core fluid bit it's in c it is more performant and it's not just",
    "start": "1159760",
    "end": "1165039"
  },
  {
    "text": "a matter of c being more performant than go um because go is really a pretty good language um in",
    "start": "1165039",
    "end": "1171600"
  },
  {
    "text": "terms of performance it's partly that compiling go and see go together",
    "start": "1171600",
    "end": "1177600"
  },
  {
    "text": "with a seago compiler add some inefficiencies that you wouldn't get with prc or pure",
    "start": "1177600",
    "end": "1183120"
  },
  {
    "text": "go it's also because in fluent bit plugins that are external",
    "start": "1183120",
    "end": "1188640"
  },
  {
    "text": "that are in go cannot take advantage of the concurrency mechanisms that fluent",
    "start": "1188640",
    "end": "1194559"
  },
  {
    "text": "bit has to do asynchronous http requests but with",
    "start": "1194559",
    "end": "1200480"
  },
  {
    "text": "this new core core connector everything works uh very flawlessly so so you can see",
    "start": "1200480",
    "end": "1206480"
  },
  {
    "text": "here there's a you know a decent improvement in um the cpu usage but what's really better and really",
    "start": "1206480",
    "end": "1213440"
  },
  {
    "text": "bigger is the change in memory performance um so you're potentially looking at a",
    "start": "1213440",
    "end": "1220000"
  },
  {
    "text": "3x improvement in memory usage that's that said that the new plug-in is",
    "start": "1220000",
    "end": "1226000"
  },
  {
    "text": "using one-third of the memory um even at fairly um high load",
    "start": "1226000",
    "end": "1231520"
  },
  {
    "text": "you could be using less than 50 megabytes of memory even at that graph you're seeing 20 000",
    "start": "1231520",
    "end": "1236880"
  },
  {
    "text": "log lines per second um so that's pretty substantial",
    "start": "1236880",
    "end": "1241919"
  },
  {
    "text": "we also have seen evidence that the the max throughput achievable with this new plug-in is significantly higher than the",
    "start": "1241919",
    "end": "1248799"
  },
  {
    "text": "golang plug-in i had said that i was going to try to quantify that for this talk unfortunately things i got busy and i",
    "start": "1248799",
    "end": "1255679"
  },
  {
    "text": "was not able to get hard numbers but maybe maybe next year the future talk",
    "start": "1255679",
    "end": "1261039"
  },
  {
    "text": "we'll have we'll have more on that uh anyway so long-term things that i'm",
    "start": "1261039",
    "end": "1266559"
  },
  {
    "text": "thinking of working on so i'm i want to rewrite all of the go plug-ins in in c and contribute them to",
    "start": "1266559",
    "end": "1272400"
  },
  {
    "text": "the core fluid bits we have everything high performance and centralized in the philippine code base",
    "start": "1272400",
    "end": "1277840"
  },
  {
    "text": "then we can deprecate the go plug-ins alias the names of the old plug-ins into the c plug-in so that you can have",
    "start": "1277840",
    "end": "1283760"
  },
  {
    "text": "a clean migration for all users from the go plugins to see plug-ins that can be entirely transparent because they",
    "start": "1283760",
    "end": "1290080"
  },
  {
    "text": "support the exact same features the timeline for all this is uncertain though and as i say here don't quote me",
    "start": "1290080",
    "end": "1296159"
  },
  {
    "text": "on it like there's no guarantee but this is what i'm thinking um so also in fluid bit 1.4 i built an ec2",
    "start": "1296159",
    "end": "1304480"
  },
  {
    "text": "instance metadata filter that adds a your instance id and availability zone to your logs if you",
    "start": "1304480",
    "end": "1311039"
  },
  {
    "text": "want it i think in the future maybe we'll expand that i might also work on",
    "start": "1311039",
    "end": "1316320"
  },
  {
    "text": "an ecs task slash service cluster metadata filter as well we'll",
    "start": "1316320",
    "end": "1321840"
  },
  {
    "text": "see and then in terms of outputs i'm thinking",
    "start": "1321840",
    "end": "1328400"
  },
  {
    "start": "1323000",
    "end": "1645000"
  },
  {
    "text": "eventually could maybe get all six of those things that you see there in the core fluent bit",
    "start": "1328400",
    "end": "1334400"
  },
  {
    "text": "um so all of the existing ones also elasticsearch which we already launched i'm now working on",
    "start": "1334400",
    "end": "1339760"
  },
  {
    "text": "s3 i'm thinking maybe amazon eventbridge might be useful too i'm not sure",
    "start": "1339760",
    "end": "1345280"
  },
  {
    "text": "interested in feedback on that um however you want to send feedback to me",
    "start": "1345280",
    "end": "1350640"
  },
  {
    "text": "issues or twitter or whatever or this or the fluent slack but interested in seeing if people would be",
    "start": "1350640",
    "end": "1357200"
  },
  {
    "text": "find that useful what am i working on right now uh so right now i'm working on",
    "start": "1357200",
    "end": "1365520"
  },
  {
    "text": "amazon s3 output output support there's an issue for it on the fluent bit github check that out if you have",
    "start": "1365520",
    "end": "1372880"
  },
  {
    "text": "suggestions um that let's see since it is in august",
    "start": "1372880",
    "end": "1378720"
  },
  {
    "text": "that this talk is being streamed um hopefully uh that will actually be",
    "start": "1378720",
    "end": "1384720"
  },
  {
    "text": "nearly done by then and will be uh releasing fairly soon we'll see our plan is",
    "start": "1384720",
    "end": "1391520"
  },
  {
    "text": "sometime in september hopefully so um i put a lot of thought into the s3",
    "start": "1391520",
    "end": "1397520"
  },
  {
    "text": "output um so the way that the the fluency fluentd s3 output works is it buffers files",
    "start": "1397520",
    "end": "1404400"
  },
  {
    "text": "locally um and then it uploads them all in one go to s3",
    "start": "1404400",
    "end": "1409440"
  },
  {
    "text": "and then that's okay but it's not perfect because you know while you're buffering on disk",
    "start": "1409440",
    "end": "1415360"
  },
  {
    "text": "there is this risk of data loss right if fluent bit goes down or fluent d goes down",
    "start": "1415360",
    "end": "1420799"
  },
  {
    "text": "um and you lose those files if you don't have a reliable disk like you maybe you're",
    "start": "1420799",
    "end": "1426159"
  },
  {
    "text": "running in a more ephemeral via environment like a serverless environment you can't really trust the disk",
    "start": "1426159",
    "end": "1431200"
  },
  {
    "text": "it doesn't really work um so my goal is to make this s3 plug-in be more sort of like a",
    "start": "1431200",
    "end": "1437919"
  },
  {
    "text": "streaming model um so it's going to use multi-part uploads so the multi-part upload",
    "start": "1437919",
    "end": "1444080"
  },
  {
    "text": "api basically lets you send data in very small chunks to s3",
    "start": "1444080",
    "end": "1449360"
  },
  {
    "text": "so you can break up a file into pieces and send it in chunks",
    "start": "1449360",
    "end": "1454559"
  },
  {
    "text": "but the thing is it doesn't require that you actually have all of the file ready when you want to",
    "start": "1454559",
    "end": "1460320"
  },
  {
    "text": "send it you can as you get data stream up stream chunks to s3 and that's what your",
    "start": "1460320",
    "end": "1467360"
  },
  {
    "text": "my bad diagram is trying to show with the puzzle pieces going into the bucket is that as fluid bit is getting data",
    "start": "1467360",
    "end": "1473760"
  },
  {
    "text": "it's adding a new piece to the bucket and then once it reaches the file size that you",
    "start": "1473760",
    "end": "1479120"
  },
  {
    "text": "want it will tell s3 to concatenate those together and create a final file so basically the long and short of it is",
    "start": "1479120",
    "end": "1486400"
  },
  {
    "text": "that you're streaming to s3 you're not buffering more than a few megabytes of data",
    "start": "1486400",
    "end": "1492159"
  },
  {
    "text": "locally at a time the amount of locally buffered data at any one point in time should be very low",
    "start": "1492159",
    "end": "1498000"
  },
  {
    "text": "which uh reduces the chance of any sort of log loss from any sort of",
    "start": "1498000",
    "end": "1504400"
  },
  {
    "text": "interruption or or flip it goes down you have to restart it",
    "start": "1504400",
    "end": "1509600"
  },
  {
    "text": "so here is an output definition that i'm thinking of as you can see here you can set the",
    "start": "1510240",
    "end": "1516559"
  },
  {
    "text": "uh file size that you want in s3 uh and remember note that like as i said",
    "start": "1516559",
    "end": "1522320"
  },
  {
    "text": "it will be streaming and uploading in little chunks but the final file that you see will be",
    "start": "1522320",
    "end": "1527440"
  },
  {
    "text": "whatever size you pick you can also specify a timeout so you can say like every 60 minutes",
    "start": "1527440",
    "end": "1532640"
  },
  {
    "text": "create a new file on s3 i can do that as well i'm trying to come up with some",
    "start": "1532640",
    "end": "1537760"
  },
  {
    "text": "interesting stuff some useful things on the key format um where you can maybe have like uh use the",
    "start": "1537760",
    "end": "1546240"
  },
  {
    "text": "use the parts of the tag the syntax that you see there was introduced in the rewrite tag filter in",
    "start": "1546240",
    "end": "1552000"
  },
  {
    "text": "fluid bit 1.4 i'm thinking of trying to support that in the s3",
    "start": "1552000",
    "end": "1557840"
  },
  {
    "text": "plug-in for the key check the documentation to see what i i come up with and if you have",
    "start": "1557840",
    "end": "1564080"
  },
  {
    "text": "suggestions before it launches please post them in the issue um",
    "start": "1564080",
    "end": "1570159"
  },
  {
    "text": "so okay if you are an awc user and you want to get help with fluent bit um how how how should how do you go",
    "start": "1570159",
    "end": "1577840"
  },
  {
    "text": "about it um we have really really high adoption of fluent bit um so we get a lot of questions and",
    "start": "1577840",
    "end": "1584480"
  },
  {
    "text": "issues the preferred mode is to open an issue on the aws aws for fluid bit repo because i have a",
    "start": "1584480",
    "end": "1591919"
  },
  {
    "text": "bunch of folks at aws who i have trained to understand fluid bit and we can all work on",
    "start": "1591919",
    "end": "1597840"
  },
  {
    "text": "answering your questions you can also try to contact me directly via slack or twitter",
    "start": "1597840",
    "end": "1604720"
  },
  {
    "text": "or on the core repo all of those are fine but i think outside of github your",
    "start": "1604720",
    "end": "1611360"
  },
  {
    "text": "guarantee of a response is much slower i do not respond to people on twitter faster than",
    "start": "1611360",
    "end": "1616960"
  },
  {
    "text": "a week often um anyway so another interesting thing that i want",
    "start": "1616960",
    "end": "1624080"
  },
  {
    "text": "to talk about this is kind of switching gears this is moving away from aws this is taking off my enterprise hat and putting",
    "start": "1624080",
    "end": "1630159"
  },
  {
    "text": "on my just pure open source hat recently i have been working with the",
    "start": "1630159",
    "end": "1636559"
  },
  {
    "text": "folks at the open telemetry project so open telemetry is a new cncf project it's an incubating",
    "start": "1636559",
    "end": "1644480"
  },
  {
    "text": "project and its goal is to create a standard set of sdks",
    "start": "1644480",
    "end": "1650559"
  },
  {
    "start": "1645000",
    "end": "1952000"
  },
  {
    "text": "and specifications for metrics and traces and maybe eventually logs too",
    "start": "1650559",
    "end": "1656720"
  },
  {
    "text": "that basically all of the vendors will support you can instrument your application with these sdks that they'll produce",
    "start": "1656720",
    "end": "1664080"
  },
  {
    "text": "and you won't have to worry about being locked into any sort of a monitoring service because",
    "start": "1664080",
    "end": "1670080"
  },
  {
    "text": "the sdks will be supported by everything so it's it's very exciting project i'm",
    "start": "1670080",
    "end": "1676159"
  },
  {
    "text": "very glad that exists and very happy to work with them the little bit that i have",
    "start": "1676159",
    "end": "1682159"
  },
  {
    "text": "so they have recently started working on defining a",
    "start": "1682159",
    "end": "1687520"
  },
  {
    "text": "log data model which might become maybe a standard",
    "start": "1687520",
    "end": "1692960"
  },
  {
    "text": "schema for log data a standard kind of structured model for logs",
    "start": "1692960",
    "end": "1698000"
  },
  {
    "text": "that's its goal definitely i do feel a little bit conservative about open telemetry because it is an",
    "start": "1698000",
    "end": "1704159"
  },
  {
    "text": "incubating project we'll have to see if this specification especially for",
    "start": "1704159",
    "end": "1709760"
  },
  {
    "text": "logs catches on it won't really actually be useful unless",
    "start": "1709760",
    "end": "1714799"
  },
  {
    "text": "it's widely adopted and lots of vendors recognize the format but i want to talk about what it might",
    "start": "1714799",
    "end": "1722000"
  },
  {
    "text": "how this model works and what it might look like if we supported it in fluid bit",
    "start": "1722000",
    "end": "1727840"
  },
  {
    "text": "so um i always say i i talked to the folks who worked on",
    "start": "1727840",
    "end": "1734559"
  },
  {
    "text": "this model but i can't take any credit for it it was primarily created by an open telemetry maintainer named",
    "start": "1734559",
    "end": "1741200"
  },
  {
    "text": "uh tigran uh nigerian i think i got his name correct i apologize if he's",
    "start": "1741200",
    "end": "1747200"
  },
  {
    "text": "watching and i did not get it i don't know if he is actually if he will be watching this talk who knows i'll try to tell him to watch it anyway",
    "start": "1747200",
    "end": "1754399"
  },
  {
    "text": "um okay so he the log data model they came up with it has a couple different fields",
    "start": "1754399",
    "end": "1759520"
  },
  {
    "text": "structured fields the goal is to standardize structured logging basically so",
    "start": "1759520",
    "end": "1765919"
  },
  {
    "text": "structure logging is great because it makes it easier to process and analyze your logs because the data",
    "start": "1765919",
    "end": "1771760"
  },
  {
    "text": "is an instruction format but the ideal case would be that there's like a standard way to structure them",
    "start": "1771760",
    "end": "1777919"
  },
  {
    "text": "because if all if you structure your logs in different ways with different field names you're still kind of in a bit of a miss",
    "start": "1777919",
    "end": "1784720"
  },
  {
    "text": "mess and so that's the goal so you have a time stamp unix nanoseconds you have fields for correlation with",
    "start": "1784720",
    "end": "1791840"
  },
  {
    "text": "traces and spans you have a standard way to represent severity",
    "start": "1791840",
    "end": "1796960"
  },
  {
    "text": "a name for the log like an event name you have a body which is for unstructured not machine",
    "start": "1796960",
    "end": "1803600"
  },
  {
    "text": "readable but human readable data you have attributes which are for structured like key value pairs",
    "start": "1803600",
    "end": "1809120"
  },
  {
    "text": "that might be machine readable and part of the goal of this schema is to eventually create",
    "start": "1809120",
    "end": "1814799"
  },
  {
    "text": "a standard key names for basically any type of data that you want might want to put in there so i don't",
    "start": "1814799",
    "end": "1821039"
  },
  {
    "text": "know like kubernetes metadata um ip address like there will be a standard field name that you always use",
    "start": "1821039",
    "end": "1827360"
  },
  {
    "text": "for the whatever metadata that you're adding to your logs um and then the resource that's actually where the kubernetes",
    "start": "1827360",
    "end": "1833440"
  },
  {
    "text": "metadata would go um it would be a standard way to with key value pairs represent",
    "start": "1833440",
    "end": "1839440"
  },
  {
    "text": "where a log came from so here's an example log so as you can see here there's the",
    "start": "1839440",
    "end": "1846799"
  },
  {
    "text": "timestamp then there's a set of attributes like i said these are key value pairs",
    "start": "1846799",
    "end": "1853520"
  },
  {
    "text": "the ideas eventually have very clearly defined semantic conventions for how you name",
    "start": "1853520",
    "end": "1859679"
  },
  {
    "text": "those key pairs so that they are are really uniform across you know all of your applications",
    "start": "1859679",
    "end": "1868559"
  },
  {
    "text": "then you have the resource which is where the log came from again same thing eventually we want to",
    "start": "1868559",
    "end": "1874240"
  },
  {
    "text": "create a very standard way of naming that naming all of those things and then",
    "start": "1874240",
    "end": "1880480"
  },
  {
    "text": "we have a couple more fields so we have a severity which has both a text description and a numerical",
    "start": "1880480",
    "end": "1887679"
  },
  {
    "text": "description and then that's about it so uh what would it look like to support",
    "start": "1887679",
    "end": "1896559"
  },
  {
    "text": "this in fluid bits so this is something that we're thinking about we probably won't do it until later this year or maybe the beginning of next year",
    "start": "1896559",
    "end": "1902799"
  },
  {
    "text": "because open telemetry like i said it's incubating it's extremely new um this log data",
    "start": "1902799",
    "end": "1908240"
  },
  {
    "text": "model was just created i don't think it's really been adopted or used by anybody yet um so basically the kubernetes filter or",
    "start": "1908240",
    "end": "1915360"
  },
  {
    "text": "the ecs met ec2 metadata filter anything that adds metadata for where a log came from you'd",
    "start": "1915360",
    "end": "1920640"
  },
  {
    "text": "want to add that to the resource um in our tail plug-in in fluid bit",
    "start": "1920640",
    "end": "1926240"
  },
  {
    "text": "normally we encase a raw lawmaker log message in a key called log that instead would",
    "start": "1926240",
    "end": "1932000"
  },
  {
    "text": "be the body field because it's for unstructured data if you parse that data it would then become",
    "start": "1932000",
    "end": "1937919"
  },
  {
    "text": "part of the attributes so that's that's how how it would kind of work",
    "start": "1937919",
    "end": "1943840"
  },
  {
    "text": "so if we decide to support this influent bit and it catches on it's actually not a lot of work i think",
    "start": "1943840",
    "end": "1949679"
  },
  {
    "text": "eduardo and i can get it done quite quickly and that's exciting though in some ways",
    "start": "1949679",
    "end": "1954720"
  },
  {
    "start": "1952000",
    "end": "2418000"
  },
  {
    "text": "really for this open telemetry log data model to catch on and really be useful",
    "start": "1954720",
    "end": "1960159"
  },
  {
    "text": "it's more about logging in your application and that's something that open telemetry eventually wants to do is",
    "start": "1960159",
    "end": "1965600"
  },
  {
    "text": "integrate with existing logging libraries anyway so finally switching gears again",
    "start": "1965600",
    "end": "1972080"
  },
  {
    "text": "before we end this session and go to q a if you want to learn how to contribute",
    "start": "1972080",
    "end": "1977120"
  },
  {
    "text": "to fluent bit if you have some basic knowledge of how to write code in c but you want to know how fluid but c code works i wrote a",
    "start": "1977120",
    "end": "1984000"
  },
  {
    "text": "whole entire guide to that in the repo check that out alrighty",
    "start": "1984000",
    "end": "1989279"
  },
  {
    "text": "so now we will go to q a please ask any questions that you have for eduardo and",
    "start": "1989279",
    "end": "1994320"
  },
  {
    "text": "i thank you everyone",
    "start": "1994320",
    "end": "1997759"
  },
  {
    "text": "hello hello",
    "start": "2003679",
    "end": "2006320"
  },
  {
    "text": "okay so we have a question coming from david asking if the lua filter will support modifying attacks",
    "start": "2010960",
    "end": "2017600"
  },
  {
    "text": "and not at the moment but feel free to open an enhancement request and but we have",
    "start": "2017600",
    "end": "2024320"
  },
  {
    "text": "also other ways to return sorry looks like it was muted sorry",
    "start": "2024320",
    "end": "2030960"
  },
  {
    "text": "about that so they have a question from david beck a winter do a filter support modifying",
    "start": "2030960",
    "end": "2036320"
  },
  {
    "text": "tax not at the moment but we have other ways to",
    "start": "2036320",
    "end": "2041919"
  },
  {
    "text": "create records with the tax we custom text we write field there the stream processing",
    "start": "2041919",
    "end": "2049359"
  },
  {
    "text": "wesley you want to jump into the next one",
    "start": "2051919",
    "end": "2055760"
  },
  {
    "text": "uh which one is the next one read it out for me newest we're doing some kind of random",
    "start": "2057919",
    "end": "2066398"
  },
  {
    "text": "um okay i'm seeing are the slides available somewhere i don't actually know the answer that that is a good",
    "start": "2066399",
    "end": "2072560"
  },
  {
    "text": "question for the um i believe we have somebody from the cncf uh here",
    "start": "2072560",
    "end": "2079520"
  },
  {
    "text": "jennifer",
    "start": "2080159",
    "end": "2082638"
  },
  {
    "text": "yeah i think that's just not in the pro at the moment so i think that this left should be available",
    "start": "2087440",
    "end": "2092480"
  },
  {
    "text": "yeah so i see okay so she's not she's not uh here on audio um i do know",
    "start": "2092480",
    "end": "2099839"
  },
  {
    "text": "i'm not sure if this was related or helped but i knew that know that afterwards for a few minutes at least um",
    "start": "2099839",
    "end": "2106000"
  },
  {
    "text": "we will be available um in the two dash kubecon maintainer",
    "start": "2106000",
    "end": "2111359"
  },
  {
    "text": "um uh channel in uh the cncf slack um and you can ask us",
    "start": "2111359",
    "end": "2118560"
  },
  {
    "text": "questions there um maybe we can maybe we'll have an answer there for that",
    "start": "2118560",
    "end": "2123680"
  },
  {
    "text": "um okay so next time can it be used as an exporter for prometheus um the answer is no i mean um flip it is",
    "start": "2123680",
    "end": "2130960"
  },
  {
    "text": "for logs prometheus is for metrics unless i'm missing something i don't",
    "start": "2130960",
    "end": "2136400"
  },
  {
    "text": "i'm not sure that would yeah we suppose a matrix for prometheus but although we don't dear this yeah",
    "start": "2136400",
    "end": "2144160"
  },
  {
    "text": "yeah so this is just one thing yeah before we forget the wesley we have a hundred people and",
    "start": "2144160",
    "end": "2151040"
  },
  {
    "text": "so basically we have a demo on this presentation that for some we got a technical issue",
    "start": "2151040",
    "end": "2156400"
  },
  {
    "text": "so the if you watch not again but if you watch the presentation again around minute five",
    "start": "2156400",
    "end": "2161920"
  },
  {
    "text": "you will get the demo update so watch on demand in a couple of hours and that",
    "start": "2161920",
    "end": "2167359"
  },
  {
    "text": "will be available okay um yeah and that demo i believe",
    "start": "2167359",
    "end": "2172720"
  },
  {
    "text": "shows using uh prometheus to monitor fluid bit right does it",
    "start": "2172720",
    "end": "2179040"
  },
  {
    "text": "no it doesn't it's mostly about the pipeline oh oh well um",
    "start": "2179040",
    "end": "2186400"
  },
  {
    "text": "okay well but that definitely works um and there's also a built-in grafana dashboard that we that the",
    "start": "2186400",
    "end": "2193040"
  },
  {
    "text": "community created recently so go check that out that's in the repo",
    "start": "2193040",
    "end": "2201839"
  },
  {
    "text": "go ahead so marcus permanent thinking about production environment is there any requirement tip for affluent pot in",
    "start": "2203920",
    "end": "2209760"
  },
  {
    "text": "terms of resource requests or limits well you know it depends of your load",
    "start": "2209760",
    "end": "2214880"
  },
  {
    "text": "but i think that most of people deploy using 200 megabytes as a maximum",
    "start": "2214880",
    "end": "2220000"
  },
  {
    "text": "but in general you don't need more than 50 megabytes but i think that wesley can",
    "start": "2220000",
    "end": "2225119"
  },
  {
    "text": "add more details on that yeah it depends upon your exact level of",
    "start": "2225119",
    "end": "2230480"
  },
  {
    "text": "usage and the plugin you're using like i mentioned uh with the plugins that i built if you're using the older golang versions",
    "start": "2230480",
    "end": "2237760"
  },
  {
    "text": "um something maybe more like 100 megabytes of memories is probably a good safe number um i'd probably still",
    "start": "2237760",
    "end": "2245040"
  },
  {
    "text": "actually stick with something in a range of 150 um",
    "start": "2245040",
    "end": "2250320"
  },
  {
    "text": "but with the most of the plugins the ones that are in the core that are in c you really should realistically",
    "start": "2250320",
    "end": "2256320"
  },
  {
    "text": "they shouldn't be using more than 50 unless you're just getting extremely high",
    "start": "2256320",
    "end": "2262079"
  },
  {
    "text": "high load okay so we're being told this is on the question of where are the",
    "start": "2262079",
    "end": "2267599"
  },
  {
    "text": "slides the slides can be found in sketch like like the word schedule",
    "start": "2267599",
    "end": "2273680"
  },
  {
    "text": "but um so i actually don't know what that means",
    "start": "2273680",
    "end": "2278720"
  },
  {
    "text": "i've done a bad job of paying attention to how the kubecon virtual works but hopefully you guys will all",
    "start": "2278720",
    "end": "2284880"
  },
  {
    "text": "in the audience well now um",
    "start": "2284880",
    "end": "2289039"
  },
  {
    "text": "do you recommend set cpu memory limits while deploying fluid bit as demon said",
    "start": "2291440",
    "end": "2296640"
  },
  {
    "text": "yes for any anything that is running kubernetes you have to set a limit right best practice yeah",
    "start": "2296640",
    "end": "2304640"
  },
  {
    "text": "i'm seeing can fluent bit buffer logs if the target host for example elasticsearch is unreachable for a while",
    "start": "2304640",
    "end": "2311280"
  },
  {
    "text": "yes that is true it has buffering capabilities same as fluenty it works a little bit differently if you",
    "start": "2311280",
    "end": "2318079"
  },
  {
    "text": "google for fluent bit buffering there's a whole section in the documentation that goes over it",
    "start": "2318079",
    "end": "2324839"
  },
  {
    "text": "um ah i'm being told that okay i'm being told that we only have a f",
    "start": "2324839",
    "end": "2330400"
  },
  {
    "text": "like a few minutes left maybe it looks like that that's when aws can always be there yeah",
    "start": "2330400",
    "end": "2336880"
  },
  {
    "text": "okay which will read it to me yeah using aws fluent bit image with aws",
    "start": "2336880",
    "end": "2343920"
  },
  {
    "text": "far gate doesn't allow including more config files are than any plans to support more",
    "start": "2343920",
    "end": "2349040"
  },
  {
    "text": "flexible configuration with aws virulence uh yes",
    "start": "2349040",
    "end": "2354640"
  },
  {
    "text": "okay so this is not really honestly a fluent big question but i'll still answer it anyway i am also the creator of uh fire lens",
    "start": "2354640",
    "end": "2362320"
  },
  {
    "text": "in addition to being the aws flint bit maintainer um i basically do container logging at aws that's my specialty",
    "start": "2362320",
    "end": "2369040"
  },
  {
    "text": "um we are working on that um we want to build some sort of better",
    "start": "2369040",
    "end": "2374320"
  },
  {
    "text": "config mechanism in uh aws fargate for fluent bit um i cannot really pre i'm not at",
    "start": "2374320",
    "end": "2382079"
  },
  {
    "text": "liberty especially in this talk at kubecon to promise any sort of timeline on that though but aws has a public github uh roadmap",
    "start": "2382079",
    "end": "2389520"
  },
  {
    "text": "and you can go check that out and annoy us and beg for things there",
    "start": "2389520",
    "end": "2394640"
  },
  {
    "text": "so do please do that we love it we don't find it annoying",
    "start": "2394640",
    "end": "2400480"
  },
  {
    "text": "community let's jump into slack because i think that we are out of time at the moment so thanks so",
    "start": "2401440",
    "end": "2407520"
  },
  {
    "text": "much for joining this session and as i said we will have the demo available in a few hours if you want to",
    "start": "2407520",
    "end": "2413440"
  },
  {
    "text": "watch this on demand thank you so much and enjoy the conference",
    "start": "2413440",
    "end": "2420480"
  }
]