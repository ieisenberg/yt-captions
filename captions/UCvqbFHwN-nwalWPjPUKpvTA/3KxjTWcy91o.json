[
  {
    "text": "hello everyone welcome to the next session about the strings and services from zero to hero",
    "start": "3679",
    "end": "9679"
  },
  {
    "text": "my name is valde marquevedo working at scientia communications and my name is jaime pena and i also",
    "start": "9679",
    "end": "16400"
  },
  {
    "text": "work at scenadia communications and in this talk we're gonna give a",
    "start": "16400",
    "end": "22320"
  },
  {
    "text": "quick intro into what is next and some of the things that we can do with next and also give you a fun a demo of a",
    "start": "22320",
    "end": "29119"
  },
  {
    "text": "knight's chat application where we're using some of the latest features like web sockets",
    "start": "29119",
    "end": "34480"
  },
  {
    "text": "and decentralized authentication and a lot of uh yaml examples to deploy on a",
    "start": "34480",
    "end": "41600"
  },
  {
    "text": "kubernetes cluster and digital ocean so what is nets that's a 10 year old",
    "start": "41600",
    "end": "49120"
  },
  {
    "text": "project actually it became uh the first commit was in october uh 10 years ago",
    "start": "49120",
    "end": "56399"
  },
  {
    "text": "it is a cloud native messing system originally for cloud foundry that has as it trades is that it aims to",
    "start": "56399",
    "end": "63359"
  },
  {
    "text": "be very performant very simple and secure and provide an always available dial tone",
    "start": "63359",
    "end": "69360"
  },
  {
    "text": "has over 30 client languages implementations the clients are",
    "start": "69360",
    "end": "74479"
  },
  {
    "text": "the protocol has not changed a lot you know in this decade it has almost stayed the",
    "start": "74479",
    "end": "80720"
  },
  {
    "text": "same just in this year there are a couple of new additions actually but has been very stable uh protocol uh",
    "start": "80720",
    "end": "89200"
  },
  {
    "text": "we say that it is lightweight because it is a single binary that has no extra dependencies it's a very small",
    "start": "89200",
    "end": "95840"
  },
  {
    "text": "docker image it's written in go it doesn't take a lot of configuration to just have it uh",
    "start": "95840",
    "end": "101360"
  },
  {
    "text": "running out of the box and the next client only requires to be able to",
    "start": "101360",
    "end": "107520"
  },
  {
    "text": "present the credentials and a single url or to which from an ad",
    "start": "107520",
    "end": "112880"
  },
  {
    "text": "server that it can connect to and after that we will discover the topology of the whole",
    "start": "112880",
    "end": "117920"
  },
  {
    "text": "cluster and i'll be able to do that reconnect or fail over to other",
    "start": "117920",
    "end": "123600"
  },
  {
    "text": "clusters and has a very simple api that we're going to cover in this",
    "start": "123600",
    "end": "128720"
  },
  {
    "text": "talk as many clients unlike with other projects most of these are",
    "start": "128720",
    "end": "134800"
  },
  {
    "text": "maintained by the official maintainers for nets so all of these nuts.go which is the",
    "start": "134800",
    "end": "141840"
  },
  {
    "text": "main implementation for nets and that's ruby which was the original one are all",
    "start": "141840",
    "end": "147599"
  },
  {
    "text": "maintained by the by the core team so nuts in a nutshell is about streams",
    "start": "147599",
    "end": "154879"
  },
  {
    "text": "and services what is a stream we say that a stream is essentially a float of data",
    "start": "154879",
    "end": "161680"
  },
  {
    "text": "some sequence of events that you either want to replay or consume their last the most up-to-date information but not",
    "start": "161680",
    "end": "169680"
  },
  {
    "text": "only can you do exchange with nets you can also use services uh similar to how you are used to using uh",
    "start": "169680",
    "end": "176879"
  },
  {
    "text": "http endpoints or grpc endpoints for uh receiving uh machining requests",
    "start": "176879",
    "end": "182640"
  },
  {
    "text": "and sending out responses and you can do that one-to-one communication with nas",
    "start": "182640",
    "end": "188640"
  },
  {
    "text": "as well but thanks to the pops up uh dna that from the project you can also",
    "start": "188640",
    "end": "194080"
  },
  {
    "text": "for example get a request single request and expect multiple responses so you have multiple communication patterns",
    "start": "194080",
    "end": "200560"
  },
  {
    "text": "when using nets and you also have load balancing so you need you don't need i don't know who needs to hear this but",
    "start": "200560",
    "end": "205840"
  },
  {
    "text": "you don't need an extra service mesh to get loan balancing for making a",
    "start": "205840",
    "end": "211120"
  },
  {
    "text": "request responses and distributing work and when using nets uh you're always",
    "start": "211120",
    "end": "218080"
  },
  {
    "text": "interacting with subjects uh subjects uh something very simple like a four weather subjects",
    "start": "218080",
    "end": "224000"
  },
  {
    "text": "where you can express uh different interests for example using wildcards like food.bar",
    "start": "224000",
    "end": "230239"
  },
  {
    "text": "and you can also make a match on food.uh wildcard that will match anything on that at that level of the subject",
    "start": "230239",
    "end": "236799"
  },
  {
    "text": "namespace or you also have the greater than wildcard that will tap into the traffic and receive all the",
    "start": "236799",
    "end": "243040"
  },
  {
    "text": "events um that you are allowed to receive because you can also have",
    "start": "243040",
    "end": "249200"
  },
  {
    "text": "define the permissions of what streams are you are able to to consume so uh",
    "start": "249200",
    "end": "257440"
  },
  {
    "text": "those uh features from nets translate into uh service streams and services and in",
    "start": "257440",
    "end": "264240"
  },
  {
    "text": "terms of the api from the clients and you say that we're using uh whenever you use request and respond",
    "start": "264240",
    "end": "270720"
  },
  {
    "text": "those are we're talking about services those are usually load balanced using the queue subscriptions",
    "start": "270720",
    "end": "278160"
  },
  {
    "text": "but you can use a q subscription for either services or streams actually and whenever we do a",
    "start": "278160",
    "end": "284000"
  },
  {
    "text": "regular pop-up publishing and broadcasting a message or having a stream of messages we're of",
    "start": "284000",
    "end": "291440"
  },
  {
    "text": "course talking about streams publish as i mentioned you can broadcast",
    "start": "291440",
    "end": "297840"
  },
  {
    "text": "messages in this case publish on foo anyone that is connected to nets and receiving uh",
    "start": "297840",
    "end": "303120"
  },
  {
    "text": "subscribe to foo will receive that message with request response uh internally all this is all pops up so",
    "start": "303120",
    "end": "310080"
  },
  {
    "text": "you're using a unique inboxes to announce that you want to ex you're expecting a single response",
    "start": "310080",
    "end": "316639"
  },
  {
    "text": "on your client inbox so that's you can get one-to-one uh communication",
    "start": "316639",
    "end": "322720"
  },
  {
    "text": "that way and you can also do load balancing by using the q subscriptions by defining a",
    "start": "322720",
    "end": "328880"
  },
  {
    "text": "for example like a worker group so these uh set of subscribers are going to be able to load balance",
    "start": "328880",
    "end": "335039"
  },
  {
    "text": "the work amongst them and so those were features that has been since the beginning with nets",
    "start": "335039",
    "end": "341919"
  },
  {
    "text": "v1 in nazi v2 the project took a leap where we're not only talking about uh",
    "start": "341919",
    "end": "348160"
  },
  {
    "text": "being the nuts within a single silo now you are we're considering um nats as part of like a much larger",
    "start": "348160",
    "end": "357039"
  },
  {
    "text": "part of a much larger system of connected devices and also uh workloads for example now it has a",
    "start": "357120",
    "end": "364800"
  },
  {
    "text": "nas xv2 it's a multi-tenant a multi-region you can place crosses of clusters or just uh clusters notes in the edge",
    "start": "364800",
    "end": "374160"
  },
  {
    "text": "and so it is a multi-tenant because each one of the uh services or streams are",
    "start": "374160",
    "end": "382000"
  },
  {
    "text": "will belong to an account and all of them will have a different subject namespace",
    "start": "382000",
    "end": "388800"
  },
  {
    "text": "that will not overlap to each other so that it makes very flexible to have for example give different teams their",
    "start": "388800",
    "end": "395199"
  },
  {
    "text": "own namespace or account for sending messages and then discuss be among them which services or",
    "start": "395199",
    "end": "403039"
  },
  {
    "text": "streams they want to expose to other accounts so in this case have the acme and cncf",
    "start": "403039",
    "end": "409440"
  },
  {
    "text": "they are exporting and importing services from each other and from if you subscribe from imports",
    "start": "409440",
    "end": "415599"
  },
  {
    "text": "greater than you can receive all the messages that it is exporting uh from acme accounts",
    "start": "415599",
    "end": "422800"
  },
  {
    "text": "and the same with uh streams so the services from let's say acme account can be imported",
    "start": "422800",
    "end": "430639"
  },
  {
    "text": "and mounted as an api within your own subject namespace and interact uh in the dev in in your",
    "start": "430639",
    "end": "437520"
  },
  {
    "text": "own local account with the service from another place so there's a",
    "start": "437520",
    "end": "442880"
  },
  {
    "text": "many data sharing features and parts of the nas v2 uh deploying",
    "start": "442880",
    "end": "449680"
  },
  {
    "text": "so launch and also very interesting from that is that we",
    "start": "449680",
    "end": "455199"
  },
  {
    "text": "have more availability available uh network topologies also now you can",
    "start": "455199",
    "end": "461520"
  },
  {
    "text": "have very uh complex network topologies uh using",
    "start": "461520",
    "end": "466960"
  },
  {
    "text": "that's uh gateway connections for creating clusters of clusters so you have like a hybrid uh make a",
    "start": "466960",
    "end": "473520"
  },
  {
    "text": "hybrid setup a super multi-region cluster with different kubernetes and",
    "start": "473520",
    "end": "480240"
  },
  {
    "text": "let's say in different regions you can also have uh and leaf nodes",
    "start": "480240",
    "end": "485680"
  },
  {
    "text": "connected to with edge connections to any part of those larger super cluster",
    "start": "485680",
    "end": "491199"
  },
  {
    "text": "and these can have its own uh off mechanisms that are different from",
    "start": "491199",
    "end": "497360"
  },
  {
    "text": "the the ones that are part of the super cluster and they can be basic chain so you can have map",
    "start": "497360",
    "end": "504800"
  },
  {
    "text": "better uh not supposed to how it fits your organization",
    "start": "504800",
    "end": "510160"
  },
  {
    "text": "so this has uh become uh consolidated to a pattern that we now call the",
    "start": "510479",
    "end": "515839"
  },
  {
    "text": "nuts adaptive x architecture so we have seen something regularly uh you have a net super cluster which",
    "start": "515839",
    "end": "522719"
  },
  {
    "text": "has a uh that tends to be in the cloud for example or in this case but",
    "start": "522719",
    "end": "528240"
  },
  {
    "text": "uh one very cool demo that we saw is that is using uh",
    "start": "528240",
    "end": "533519"
  },
  {
    "text": "the ground as the main cluster and then satellites have a leaf node connections",
    "start": "533519",
    "end": "539360"
  },
  {
    "text": "connected to the ground and be able to uh through the leaf node connections exchange messages uh to each other",
    "start": "539360",
    "end": "545839"
  },
  {
    "text": "uh but all of them are different uh current is clusters different uh network",
    "start": "545839",
    "end": "552240"
  },
  {
    "text": "domains but just the next connections and makes it uh forwards and routes makes the routing",
    "start": "552240",
    "end": "558000"
  },
  {
    "text": "pro uh possible between those different uh clients so the",
    "start": "558000",
    "end": "564000"
  },
  {
    "text": "rest of this talk we're going to go over how some of the internals of nats.chat application this is like the",
    "start": "564000",
    "end": "570560"
  },
  {
    "text": "third iteration that we have gone through this demo and we're using some of the",
    "start": "570560",
    "end": "576720"
  },
  {
    "text": "latest features uh for nets are you familiar with some of the previous uh thoughts from nets um maybe you have",
    "start": "576720",
    "end": "583200"
  },
  {
    "text": "seen the uh cli uh ui that you can use to able to",
    "start": "583200",
    "end": "589040"
  },
  {
    "text": "talk to the other users uh using some of the latest features from nets to do the same but with websockets so you",
    "start": "589040",
    "end": "596880"
  },
  {
    "text": "have a websocket a single page application that is gonna give you a ui",
    "start": "596880",
    "end": "602480"
  },
  {
    "text": "for able to send messages and these are all streams uh each one of these uh the",
    "start": "602480",
    "end": "608640"
  },
  {
    "text": "users will have its own credentials provisioned to them on the fly to able to publish messages on one of",
    "start": "608640",
    "end": "616000"
  },
  {
    "text": "the general rooms and also have its own dms and we're using the",
    "start": "616000",
    "end": "623120"
  },
  {
    "text": "unique public key for each one of the users to get those and send uh some basic hardwaring uh",
    "start": "623120",
    "end": "630000"
  },
  {
    "text": "events for receiving the uh messages",
    "start": "630000",
    "end": "636240"
  },
  {
    "text": "uh we'll also add a service tool to get those credentials in this case gonna be",
    "start": "636880",
    "end": "643360"
  },
  {
    "text": "chat.rec dot access so whenever you go to nats.chat which is going to be a service that is",
    "start": "643360",
    "end": "649440"
  },
  {
    "text": "available at the time of the conference as well if you want to try it so you pass a username to this chat and",
    "start": "649440",
    "end": "658160"
  },
  {
    "text": "under the hood what's going to happen is that it's going to make a request through the websocket connection to nets",
    "start": "658320",
    "end": "664959"
  },
  {
    "text": "and expecting some credentials unique credentials to for this uh cluster that are going to be",
    "start": "664959",
    "end": "672959"
  },
  {
    "text": "couple to your username and the way we have done this is by",
    "start": "672959",
    "end": "678240"
  },
  {
    "text": "creating two different accounts so actually all the users are going to be within this kubecon account",
    "start": "678240",
    "end": "684880"
  },
  {
    "text": "essentially the chat account so any user that we create is",
    "start": "684880",
    "end": "689920"
  },
  {
    "text": "going to be part of this account and the there's another account",
    "start": "689920",
    "end": "695519"
  },
  {
    "text": "that is going to have the logic and the permissions to be able to do the creation from uh users that belong",
    "start": "695519",
    "end": "703120"
  },
  {
    "text": "to this account i'm going to show it uh what is what i what i mean by this",
    "start": "703120",
    "end": "708240"
  },
  {
    "text": "but the api itself is in under the admin account being imported for the uh chat account",
    "start": "708240",
    "end": "715440"
  },
  {
    "text": "and be able to make requests uh through uh from account to account via",
    "start": "715440",
    "end": "721440"
  },
  {
    "text": "imports and also we will show how we added an admin uh ui where you can do some of the",
    "start": "721440",
    "end": "729760"
  },
  {
    "text": "dynamic revoking of users uh so let's get into uh the demo",
    "start": "729760",
    "end": "738480"
  },
  {
    "text": "and show how to get this done",
    "start": "738480",
    "end": "743600"
  },
  {
    "text": "there is a uh a readme and within the and that's io cubecon",
    "start": "743600",
    "end": "750320"
  },
  {
    "text": "2020 repo that you can follow table to have a similar setup as we have",
    "start": "750320",
    "end": "756079"
  },
  {
    "text": "we're showing this we have a in this case we have a single kubernetes cluster that is running in digital ocean",
    "start": "756079",
    "end": "763040"
  },
  {
    "text": "uh the first step that we need to do is install nsc so nfc is the tool",
    "start": "763040",
    "end": "770800"
  },
  {
    "text": "that you used to be able to create accounts and users in nets in this case",
    "start": "770800",
    "end": "777120"
  },
  {
    "text": "we have already created a couple of accounts one of the admin and the other",
    "start": "777120",
    "end": "782639"
  },
  {
    "text": "the chat account uh we have a simple installer for nse here",
    "start": "782639",
    "end": "790880"
  },
  {
    "text": "and there's a is another script able to get some initial setup of accounts i have a",
    "start": "790880",
    "end": "796399"
  },
  {
    "text": "directory tree under your folder",
    "start": "796399",
    "end": "801839"
  },
  {
    "text": "but we're actually not using those accounts we have created a chat account and an admin account in",
    "start": "802240",
    "end": "807760"
  },
  {
    "text": "this case you can use nsc to describe the permissions in this case we can see",
    "start": "807760",
    "end": "815600"
  },
  {
    "text": "that the chat account is able to uh it is exporting",
    "start": "815600",
    "end": "820880"
  },
  {
    "text": "a chat.kubecon online stream that this is more mostly for the ui to",
    "start": "820880",
    "end": "829040"
  },
  {
    "text": "display which users are connected and uh for too later revoking",
    "start": "829040",
    "end": "835760"
  },
  {
    "text": "so and jaime is going to cover that in a bit and also have the x importing the chat",
    "start": "835760",
    "end": "843680"
  },
  {
    "text": "dot red dot access service tool to create uh credentials for themselves",
    "start": "843680",
    "end": "851279"
  },
  {
    "text": "and as for the nets admin we have uh basically the reverse i have",
    "start": "851279",
    "end": "857600"
  },
  {
    "text": "the imports and and have the experts and imports to the other account",
    "start": "857600",
    "end": "862800"
  },
  {
    "text": "and something you can see from this output is that we have uh something that starts with a it's a",
    "start": "862800",
    "end": "871440"
  },
  {
    "text": "an account and in this case we have another uh signing key which is",
    "start": "871440",
    "end": "877920"
  },
  {
    "text": "used in case you don't want to be coupled to on a single pair of keys",
    "start": "877920",
    "end": "883279"
  },
  {
    "text": "you can have multiple sending keys and revoke them as you want to be able in case one of them get",
    "start": "883279",
    "end": "888320"
  },
  {
    "text": "leaked then you uh revoke that signing key remove it from the jwt definition",
    "start": "888320",
    "end": "894480"
  },
  {
    "text": "and do the upload to the net server and that way you can purge that signing key",
    "start": "894480",
    "end": "902320"
  },
  {
    "text": "and uh we using nsc we can create a",
    "start": "902320",
    "end": "907360"
  },
  {
    "text": "users in this case we only have users as part of the admin account because we",
    "start": "907360",
    "end": "914720"
  },
  {
    "text": "need a couple of one to able to make those requests and mostly for the ui to get",
    "start": "914720",
    "end": "922800"
  },
  {
    "text": "updates as well and the very simple credentials that you can use to make",
    "start": "922800",
    "end": "929600"
  },
  {
    "text": "uh requests so these are credentials that you cannot do",
    "start": "929600",
    "end": "936720"
  },
  {
    "text": "almost anything with uh them only thing you can do is to get",
    "start": "936720",
    "end": "941920"
  },
  {
    "text": "credentials so this uh other than that they're very uh just useless credentials and those not",
    "start": "941920",
    "end": "947360"
  },
  {
    "text": "getting away from the other users so we do those uh imports and um in the following the",
    "start": "947360",
    "end": "955040"
  },
  {
    "text": "reason you can how to do it on on your own and once we have all that set up uh",
    "start": "955040",
    "end": "962399"
  },
  {
    "text": "we're going to create a configuration for the resolver in this case i'm going to a embedded uh nut account",
    "start": "962399",
    "end": "970240"
  },
  {
    "text": "uh server within nuts uh within within nets and we're gonna upload this",
    "start": "970240",
    "end": "975279"
  },
  {
    "text": "configuration to kubernetes so that uh all the net servers are um can be",
    "start": "975279",
    "end": "980839"
  },
  {
    "text": "uh can act as a decentralized uh authority of the jwts so",
    "start": "980839",
    "end": "989120"
  },
  {
    "text": "now as for running this on kubernetes uh we maintain uh hand charts for deploy",
    "start": "989120",
    "end": "998160"
  },
  {
    "text": "and to able to have external connectivity we're first going to have to set up a",
    "start": "998160",
    "end": "1005759"
  },
  {
    "text": "domain in this case we're using sfo that's chat and have a single ip",
    "start": "1005759",
    "end": "1012240"
  },
  {
    "text": "mapped currently so the way this works is by using a external dns component the bitnami",
    "start": "1012720",
    "end": "1020639"
  },
  {
    "text": "maintains a very good chart for uh doing this",
    "start": "1020639",
    "end": "1026000"
  },
  {
    "text": "for managing external dns and it's very simple to use use but in case of digital ocean just point your",
    "start": "1026000",
    "end": "1031839"
  },
  {
    "text": "dns servers to towards uh your digitalocean accounts and with your app your and then deploy",
    "start": "1031839",
    "end": "1038558"
  },
  {
    "text": "it with your api token and now you can map uh",
    "start": "1038559",
    "end": "1044640"
  },
  {
    "text": "that servers to a public ip and of course we have opened the firewall for this",
    "start": "1045520",
    "end": "1051600"
  },
  {
    "text": "and we are also going to be creating a web sockets load balancer uh so one",
    "start": "1051600",
    "end": "1056880"
  },
  {
    "text": "and that is uh so one of the things with nas is that the tls doesn't work",
    "start": "1056880",
    "end": "1063600"
  },
  {
    "text": "with most load balancers unless they are l4 load balancers because of the way that the tls operate",
    "start": "1063600",
    "end": "1069200"
  },
  {
    "text": "happens so but with web sockets now that's uh that's no longer a problem because so",
    "start": "1069200",
    "end": "1075440"
  },
  {
    "text": "websockets are you can have a fronted a load balancer",
    "start": "1075440",
    "end": "1081280"
  },
  {
    "text": "loadmaster to the multiple net servers the web socket port and it should just work because it",
    "start": "1081280",
    "end": "1086880"
  },
  {
    "text": "doesn't follow the same doesn't have the same protocol issues so",
    "start": "1086880",
    "end": "1092880"
  },
  {
    "text": "we have uploaded the nuts account we set up a couple of nets let's encrypt",
    "start": "1092880",
    "end": "1099760"
  },
  {
    "text": "uh certificates and do the upload of some of these credentials that we're",
    "start": "1099760",
    "end": "1106080"
  },
  {
    "text": "gonna be using to be able to provision there the clusters do the upload of the",
    "start": "1106080",
    "end": "1113360"
  },
  {
    "text": "we need to do the upload to fit to the net server what is the latest state for some of the generalities",
    "start": "1113360",
    "end": "1119760"
  },
  {
    "text": "uh so to save some time i i really have done some of these so i can",
    "start": "1119760",
    "end": "1127200"
  },
  {
    "text": "show you uh how it works so if i try to do a telnet usf on apps.chat",
    "start": "1127200",
    "end": "1134559"
  },
  {
    "text": "right now i should get uh initial info line to",
    "start": "1134559",
    "end": "1139610"
  },
  {
    "text": "[Music] which you can i can start match",
    "start": "1139610",
    "end": "1145120"
  },
  {
    "text": "connections and if i do the same to the next uh the websocket port",
    "start": "1145120",
    "end": "1151280"
  },
  {
    "text": "in this case 453 i will get a similar info line but not just for the websockets and expecting",
    "start": "1151280",
    "end": "1158240"
  },
  {
    "text": "for me to send the credentials so it's going to disconnect me",
    "start": "1158240",
    "end": "1162720"
  },
  {
    "text": "so uh i'm gonna",
    "start": "1163280",
    "end": "1168320"
  },
  {
    "text": "show you the a little bit of the code of the how we are issuing the",
    "start": "1168559",
    "end": "1175039"
  },
  {
    "text": "credentials which is uh actually quite straight uh forward in terms of the",
    "start": "1175039",
    "end": "1181120"
  },
  {
    "text": "nuts api so we are just exposing a new subscription",
    "start": "1181120",
    "end": "1186960"
  },
  {
    "text": "to the uh subject to able to get those uh requests so let's try that real quick",
    "start": "1186960",
    "end": "1194799"
  },
  {
    "text": "let's make some credentials to be able to use the nats the chat",
    "start": "1194799",
    "end": "1200400"
  },
  {
    "text": "application so i'm gonna have a let's say",
    "start": "1200400",
    "end": "1205440"
  },
  {
    "text": "23 i'm gonna create some credentials",
    "start": "1205440",
    "end": "1210799"
  },
  {
    "text": "and whenever i make a request to using those bootstrapping credentials",
    "start": "1213440",
    "end": "1219840"
  },
  {
    "text": "i'm gonna get a new set of credentials that i can then use to want to log into the chat so now i'm",
    "start": "1219840",
    "end": "1225840"
  },
  {
    "text": "gonna log into the chat hyphen s using these new",
    "start": "1225840",
    "end": "1234000"
  },
  {
    "text": "credentials my credits so i'm connecting to the system",
    "start": "1234000",
    "end": "1240559"
  },
  {
    "text": "and that's it so this part of the provision there is uh creating the username generating new",
    "start": "1240559",
    "end": "1248080"
  },
  {
    "text": "user credentials that have just used dynamically to able to connect to the system and announce",
    "start": "1248080",
    "end": "1255360"
  },
  {
    "text": "the the revoker later on uh that you can that there is a",
    "start": "1255360",
    "end": "1261520"
  },
  {
    "text": "heartbeat from someone connected and uh but even cooler uh it's gonna be",
    "start": "1261520",
    "end": "1267440"
  },
  {
    "text": "the ui uh jaime is going to show in a bit so this is uh nuts chat",
    "start": "1267440",
    "end": "1273919"
  },
  {
    "text": "and are gonna be able to interact with jaime from the cli but he's going to be doing the same through",
    "start": "1273919",
    "end": "1279840"
  },
  {
    "text": "the websocket connection uh so wally just showed us the uh cli",
    "start": "1279840",
    "end": "1287760"
  },
  {
    "text": "uh version of nat's chat i'm going to give you guys a walk through of the uh what the front end application",
    "start": "1287760",
    "end": "1295200"
  },
  {
    "text": "looks like so just a quick uh demo of what the front end looks like so when",
    "start": "1295200",
    "end": "1301200"
  },
  {
    "text": "you hit nats.chat you'll be taken to this welcome page and you can register a username and so i'll go ahead",
    "start": "1301200",
    "end": "1307919"
  },
  {
    "text": "and do that and then you get taken into this place",
    "start": "1307919",
    "end": "1312960"
  },
  {
    "text": "into this chat room and you can send messages here so how did we do this",
    "start": "1312960",
    "end": "1319600"
  },
  {
    "text": "well let's go look at the code now so to start off there is",
    "start": "1319600",
    "end": "1327200"
  },
  {
    "text": "a nas websocket library that you can use in your projects",
    "start": "1327200",
    "end": "1334960"
  },
  {
    "text": "nat's chat is a react app so that's what i'm using here the imports",
    "start": "1334960",
    "end": "1342240"
  },
  {
    "text": "just three imports one used to connect the string codec is just used to",
    "start": "1342240",
    "end": "1347360"
  },
  {
    "text": "translate between javascript string and a javascript uint array",
    "start": "1347360",
    "end": "1352559"
  },
  {
    "text": "and then you have the credentials authenticator so what does it look like when someone",
    "start": "1352559",
    "end": "1358840"
  },
  {
    "text": "registers so i have this uh registered callback gets invoked when you click the",
    "start": "1358840",
    "end": "1367039"
  },
  {
    "text": "register button so the first thing we do is uh use the uh restricted creds that",
    "start": "1367039",
    "end": "1374960"
  },
  {
    "text": "wally had mentioned earlier and these credits can only ask for full credit so",
    "start": "1374960",
    "end": "1380159"
  },
  {
    "text": "these are bootstrap creds so and we're connecting to the nat server",
    "start": "1380159",
    "end": "1386240"
  },
  {
    "text": "which wally mentioned before so once we have the initial bootstrap connection",
    "start": "1386240",
    "end": "1394799"
  },
  {
    "text": "we're going to ask a nats server service the provisioner that wally had mentioned",
    "start": "1394799",
    "end": "1400720"
  },
  {
    "text": "earlier we're going to say hey can i get some credits for this username and",
    "start": "1400720",
    "end": "1405919"
  },
  {
    "text": "if that all works then we get a message back and then the",
    "start": "1405919",
    "end": "1411120"
  },
  {
    "text": "message contains the upgraded or full user creds i'm also closing the previous connection",
    "start": "1411120",
    "end": "1418400"
  },
  {
    "text": "just because we're done with it and we don't need it anymore and finally once we have",
    "start": "1418400",
    "end": "1424400"
  },
  {
    "text": "our new full user creds we call connect again but this time with our real user creds",
    "start": "1424400",
    "end": "1432320"
  },
  {
    "text": "and this will authenticate us with the net server so then if we were able to get into this",
    "start": "1432320",
    "end": "1440000"
  },
  {
    "text": "then call that means we were able to authenticate the new credentials work",
    "start": "1440000",
    "end": "1445520"
  },
  {
    "text": "and we are we can access the uh the real chat room area and",
    "start": "1445520",
    "end": "1452799"
  },
  {
    "text": "we're saving the creds for example here in local storage but you might be able to store them",
    "start": "1452799",
    "end": "1458320"
  },
  {
    "text": "somewhere else also uh i'm using the like premise",
    "start": "1458320",
    "end": "1464080"
  },
  {
    "text": "syntax but the nats uh websocket library fully supports async",
    "start": "1464080",
    "end": "1470080"
  },
  {
    "text": "in a way in case anyone was curious about that so that's how we got here",
    "start": "1470080",
    "end": "1475919"
  },
  {
    "text": "to this to this area so now when we get to the uh this the chat room",
    "start": "1475919",
    "end": "1483360"
  },
  {
    "text": "uh what happens next well the very first thing that happens is uh uh this is like when the page loads",
    "start": "1483360",
    "end": "1490000"
  },
  {
    "text": "if you're not familiar with react javascript basically we connect again so using the",
    "start": "1490000",
    "end": "1496159"
  },
  {
    "text": "full credits that we got from the welcome page and then here's where we set up some",
    "start": "1496159",
    "end": "1502480"
  },
  {
    "text": "uh streams uh while i had to mention these earlier as well uh so we have a couple different streams",
    "start": "1502480",
    "end": "1508320"
  },
  {
    "text": "we have a stream of messages for the kubecon channel it's this channel right here uh we",
    "start": "1508320",
    "end": "1514320"
  },
  {
    "text": "we also have the nets channel and the general channel uh and additionally we have the online",
    "start": "1514320",
    "end": "1520720"
  },
  {
    "text": "status so every uh user when they log into the app will send us heartbeats and that's how",
    "start": "1520720",
    "end": "1526400"
  },
  {
    "text": "we know uh who's online as you can see here wally qs2 is online and he sent a message",
    "start": "1526400",
    "end": "1532320"
  },
  {
    "text": "yeah cool uh so and then finally the last stream that we set up",
    "start": "1532320",
    "end": "1537679"
  },
  {
    "text": "with the websockets is the dms stream so this is where we can receive",
    "start": "1537679",
    "end": "1544559"
  },
  {
    "text": "messages while you can send messages to my uh public key and the public key is taken from the credentials",
    "start": "1544559",
    "end": "1550159"
  },
  {
    "text": "file that the netser that the provisioner gave to us and that's where i can receive streams",
    "start": "1550159",
    "end": "1556640"
  },
  {
    "text": "the heartbeats uh this is uh happen here so it's just a simple uh publish uh on an online topic",
    "start": "1556640",
    "end": "1565200"
  },
  {
    "text": "and then i'm just sending people my info uh my public key and stuff like that the",
    "start": "1565200",
    "end": "1570960"
  },
  {
    "text": "interesting part when that wall is going to show in a bit is uh",
    "start": "1570960",
    "end": "1576799"
  },
  {
    "text": "how we handle revoking is here so we're going to be connected to the",
    "start": "1576799",
    "end": "1583440"
  },
  {
    "text": "application and as soon as wally hits the revoke button this callback will be invoked which will",
    "start": "1583440",
    "end": "1591279"
  },
  {
    "text": "mean that we've been revoked so when a user is revoked from the system they receive",
    "start": "1591279",
    "end": "1596559"
  },
  {
    "text": "a notification and the application can handle that so in our case we're just",
    "start": "1596559",
    "end": "1601600"
  },
  {
    "text": "throwing away the credits because they've been revoked and they're no good and then we get redirected back to the",
    "start": "1601600",
    "end": "1606640"
  },
  {
    "text": "welcome page from before where wally does a revoking is also",
    "start": "1606640",
    "end": "1613440"
  },
  {
    "text": "a ui that we've made and so that's a special path",
    "start": "1613440",
    "end": "1621200"
  },
  {
    "text": "here that is accessible but you won't be able to revoke anyone unless you have the right credentials",
    "start": "1621200",
    "end": "1628240"
  },
  {
    "text": "and wally's going to show that in a bit but how that works is i mean pretty much the same as we've seen so far",
    "start": "1628240",
    "end": "1635360"
  },
  {
    "text": "we connect using the credentials wally will show that and again we",
    "start": "1635360",
    "end": "1641760"
  },
  {
    "text": "have a stream we set up a stream to receive updates",
    "start": "1641760",
    "end": "1648880"
  },
  {
    "text": "for provisioned users so that way the screen gets populated with you know the current users that the system knows and then we have another",
    "start": "1648880",
    "end": "1656880"
  },
  {
    "text": "math service where we just ask the system this is when the page loads uh we'll ask",
    "start": "1656880",
    "end": "1662559"
  },
  {
    "text": "the system uh you know okay tell me everyone you know about right now uh and then",
    "start": "1662559",
    "end": "1670080"
  },
  {
    "text": "um we just saved that data and uh yeah that's that's pretty much it uh for",
    "start": "1670080",
    "end": "1676880"
  },
  {
    "text": "the code it's not too difficult it's just nothing too complex it's just connect and then you can set up your",
    "start": "1676880",
    "end": "1684320"
  },
  {
    "text": "streams or you can do your services and",
    "start": "1684320",
    "end": "1689360"
  },
  {
    "text": "that's it so i think wally is going to show us how to do revoking next so i'll hand it",
    "start": "1689360",
    "end": "1695679"
  },
  {
    "text": "back to him thanks jaime",
    "start": "1695679",
    "end": "1700720"
  },
  {
    "text": "so let's see make host",
    "start": "1700720",
    "end": "1704640"
  },
  {
    "text": "cool so i'm gonna show because i have the credentials hyman doesn't have the credentials",
    "start": "1706880",
    "end": "1712080"
  },
  {
    "text": "um i'm gonna do the disconnect by",
    "start": "1712080",
    "end": "1719360"
  },
  {
    "text": "going to drag and drop some of the credentials here and then get an event",
    "start": "1719360",
    "end": "1726320"
  },
  {
    "text": "of the currently active uh users have uh i'm currently connected",
    "start": "1726320",
    "end": "1733120"
  },
  {
    "text": "here on the console and send a message to jaime and reply back",
    "start": "1733120",
    "end": "1739279"
  },
  {
    "text": "um i'm gonna then i'm going to uh just gonna have my",
    "start": "1739279",
    "end": "1745919"
  },
  {
    "text": "hammer first and also if i'm gonna",
    "start": "1745919",
    "end": "1752000"
  },
  {
    "text": "a self-disconnect and and that's going to give me a user authentication revoked",
    "start": "1752000",
    "end": "1758080"
  },
  {
    "text": "error and on the left side of the screen i'm showing",
    "start": "1758080",
    "end": "1763520"
  },
  {
    "text": "you can see that what is happening essentially is that we're making a request to another",
    "start": "1763520",
    "end": "1769600"
  },
  {
    "text": "subject under the admin account that is able to uh respond to these actions and",
    "start": "1769600",
    "end": "1777279"
  },
  {
    "text": "using the system credentials the provisioning is able to use uh talk to some of the special apis for",
    "start": "1777279",
    "end": "1783840"
  },
  {
    "text": "nats to be able to make a lookup of jw the latest state for the jwt so",
    "start": "1783840",
    "end": "1788880"
  },
  {
    "text": "we're getting the latest state for the general t uh inspecting the",
    "start": "1788880",
    "end": "1795520"
  },
  {
    "text": "uh currently the with the agility and adding padding paneling with the a user",
    "start": "1795520",
    "end": "1802240"
  },
  {
    "text": "a public key that is not going to be longer used and then make we're using issuing",
    "start": "1802240",
    "end": "1807440"
  },
  {
    "text": "another request to be able to update this generality and re-encode it",
    "start": "1807440",
    "end": "1813279"
  },
  {
    "text": "using the uh the special or another set of sign-in",
    "start": "1813279",
    "end": "1819360"
  },
  {
    "text": "keys so we make that update because we're using the latest",
    "start": "1819360",
    "end": "1824399"
  },
  {
    "text": "not service that now has an embeddedness account server uh we don't need extra components",
    "start": "1824399",
    "end": "1830240"
  },
  {
    "text": "everything is going to happen in the in the nuts notes and it's going to be",
    "start": "1830240",
    "end": "1835440"
  },
  {
    "text": "share the latest state of that jwt and that's it for the demo",
    "start": "1835440",
    "end": "1841760"
  },
  {
    "text": "and we'll be standing by this this server is going to be alive uh during the kubecon as well so feel",
    "start": "1841760",
    "end": "1847679"
  },
  {
    "text": "free to try it and we'll stand by for the q a thank you",
    "start": "1847679",
    "end": "1853919"
  }
]