[
  {
    "text": "all right good afternoon uh we made it through the through the week uh so today we're going to talk",
    "start": "240",
    "end": "7980"
  },
  {
    "text": "about kubernetes networking but an infrastructure offload for kubernetes networking so we've assembled a panel of",
    "start": "7980",
    "end": "14420"
  },
  {
    "text": "uh folks from different areas to talk about how do we uh even just Define what",
    "start": "14420",
    "end": "21660"
  },
  {
    "text": "it means to do an infrastructure offload and how do we do that infrastructure offload in lots of different contexts",
    "start": "21660",
    "end": "27599"
  },
  {
    "text": "are we doing an infrastructure offload uh in the public Cloud are we doing it",
    "start": "27599",
    "end": "33239"
  },
  {
    "text": "inside uh of a cluster that I built on premise uh or are there some",
    "start": "33239",
    "end": "39660"
  },
  {
    "text": "combinations of those two that we want to be doing this this offload in and so we're going to be talking about",
    "start": "39660",
    "end": "45719"
  },
  {
    "text": "infrastructure offload from lots of different perspectives we have two presenters who weren't able to make it",
    "start": "45719",
    "end": "51300"
  },
  {
    "text": "and so Midway through we're going to show a short video uh of their",
    "start": "51300",
    "end": "57120"
  },
  {
    "text": "presentation uh but uh we will introduce",
    "start": "57120",
    "end": "62399"
  },
  {
    "text": "each other as we go through and I'm Dan Daly from Intel and I work on software architecture and I work on a a new",
    "start": "62399",
    "end": "69479"
  },
  {
    "text": "project called ipdk which is now also part of the Linux foundation and is part",
    "start": "69479",
    "end": "75299"
  },
  {
    "text": "of a larger umbrella effort called open programmable infrastructure",
    "start": "75299",
    "end": "81380"
  },
  {
    "text": "so open programmable infrastructure uses that infrastructure word it's really generic of a word what do we mean in",
    "start": "81600",
    "end": "88439"
  },
  {
    "text": "this context when we're talking about infrastructure in this case is that we are taking the",
    "start": "88439",
    "end": "94259"
  },
  {
    "text": "business logic or the worker uh logic that's running and we're going to provide certain services",
    "start": "94259",
    "end": "101900"
  },
  {
    "text": "again another overloaded word we're going to provide certain functions to that worker node in the case of",
    "start": "101900",
    "end": "108659"
  },
  {
    "text": "infrastructure we're thinking of it at a baseline as infrastructure as a service so I'm going to provide it a little bit",
    "start": "108659",
    "end": "114420"
  },
  {
    "text": "of networking a little bit of storage maybe there's a little bit of acceleration that we're providing so",
    "start": "114420",
    "end": "120360"
  },
  {
    "text": "we're providing these uh uh sort of basic uh abstractions that you would get",
    "start": "120360",
    "end": "126240"
  },
  {
    "text": "from a cloud uh and we call all of that infrastructure we group it together and so uh when we want to talk about",
    "start": "126240",
    "end": "134000"
  },
  {
    "text": "software-defined infrastructure that's what we mean it's software-defined networking software-defined storage uh",
    "start": "134000",
    "end": "140040"
  },
  {
    "text": "all grouped together as one and so uh in this uh space of programmable",
    "start": "140040",
    "end": "147420"
  },
  {
    "text": "infrastructure we're trying to define the dividing line between what is the",
    "start": "147420",
    "end": "152459"
  },
  {
    "text": "business logic what is the what is the function running in your pods that is",
    "start": "152459",
    "end": "158160"
  },
  {
    "text": "you know doing the real work at hand versus what is the logic underneath it that is supporting it to secure it",
    "start": "158160",
    "end": "166040"
  },
  {
    "text": "connect it these types of things",
    "start": "166040",
    "end": "170900"
  },
  {
    "text": "and why are we creating this new separation is because you know we think",
    "start": "172019",
    "end": "179220"
  },
  {
    "text": "that this abstraction uh uh which has already been you know really useful in infrastructure as a service gives us a",
    "start": "179220",
    "end": "185700"
  },
  {
    "text": "bunch of great features that we can then apply to kubernetes networking so the first one is the idea of having a gap",
    "start": "185700",
    "end": "193700"
  },
  {
    "text": "for security reasons between your logic that's running and all of the other",
    "start": "193700",
    "end": "199560"
  },
  {
    "text": "logic that's supporting it and we call this the air gap but when this is implemented uh using Hardware functions",
    "start": "199560",
    "end": "207780"
  },
  {
    "text": "then we can give Hardware isolation to the the work logic uh uh running inside",
    "start": "207780",
    "end": "215220"
  },
  {
    "text": "a server uh the second functionality that we're looking for is to be able to start",
    "start": "215220",
    "end": "220560"
  },
  {
    "text": "moving tasks that may be using uh Cycles creating latency or Jitter or just sort",
    "start": "220560",
    "end": "228599"
  },
  {
    "text": "of getting in the way of things uh that's currently running alongside your",
    "start": "228599",
    "end": "233879"
  },
  {
    "text": "worker work logic and pushing it into the infrastructure and uh",
    "start": "233879",
    "end": "240540"
  },
  {
    "text": "you know initially to save Cycles but you start to get to the third and fourth",
    "start": "240540",
    "end": "246480"
  },
  {
    "text": "value which is once you've pushed that task out of the work CPU into the",
    "start": "246480",
    "end": "252420"
  },
  {
    "text": "infrastructure you can now re-implement it more efficiently maybe you implement it and really optimize software maybe",
    "start": "252420",
    "end": "259440"
  },
  {
    "text": "you implement it in Hardware which is something that we're going to talk about today uh and then in the in the the fourth",
    "start": "259440",
    "end": "266040"
  },
  {
    "text": "value is once you can re-implement the infrastructure with a separate sort of",
    "start": "266040",
    "end": "271680"
  },
  {
    "text": "cadence than uh the the software being loaded on the work side you can now add",
    "start": "271680",
    "end": "277139"
  },
  {
    "text": "features to the infrastructure a lot uh more quickly so maybe you want to change the way uh the networking policy works",
    "start": "277139",
    "end": "284580"
  },
  {
    "text": "or if you want to add a new sort of construct around how your storage is accessed or you want to add",
    "start": "284580",
    "end": "290880"
  },
  {
    "text": "computational storage you know combine the two of them that that feature velocity is enabled by that abstraction",
    "start": "290880",
    "end": "297000"
  },
  {
    "text": "because you've pushed all that that uh extra stuff that uh isn't isn't uh",
    "start": "297000",
    "end": "302460"
  },
  {
    "text": "generating revenue and you've given it to the infrastructure who can now go and and innovate at a separate Cadence",
    "start": "302460",
    "end": "310080"
  },
  {
    "text": "so that's why we're we've we've created this abstraction and so uh now I'm going",
    "start": "310080",
    "end": "315120"
  },
  {
    "text": "to pass it to Nabil who's going to talk a little bit about uh the the the types of things that he's looking for as a",
    "start": "315120",
    "end": "321660"
  },
  {
    "text": "customer uh looking to do infrastructure offload thank you then",
    "start": "321660",
    "end": "327660"
  },
  {
    "text": "um so we'll talk about uh what this ipudp or flowed and some gold side requirement that we're looking to",
    "start": "327660",
    "end": "333840"
  },
  {
    "text": "achieve from that so first let's talk about what we mean by uh offload from networking point of",
    "start": "333840",
    "end": "339900"
  },
  {
    "text": "view so this is usually mainly it targets really the offload of data plane",
    "start": "339900",
    "end": "345539"
  },
  {
    "text": "processing functions from the host CPU to the hardware neck that's what traditional offload meant and this next",
    "start": "345539",
    "end": "352259"
  },
  {
    "text": "usually have been called smartnex or perform at next and they won't buy that name with the infrastructure uh data",
    "start": "352259",
    "end": "358860"
  },
  {
    "text": "processing unit or data processing units ipus dpus those are considered as",
    "start": "358860",
    "end": "364380"
  },
  {
    "text": "Evolution from the smartnex and and the performance next to include really a",
    "start": "364380",
    "end": "370380"
  },
  {
    "text": "compute complex which composed of CPU and memory in addition to Asic fpga",
    "start": "370380",
    "end": "376259"
  },
  {
    "text": "usually for the Fastback processing depending on the implementation the goal in here is usually to improve",
    "start": "376259",
    "end": "382740"
  },
  {
    "text": "scale so you could have dedicated memory that allow you to have larger fed larger",
    "start": "382740",
    "end": "387840"
  },
  {
    "text": "set of policies and forth to have better performance and support addition capabilities uh because you now you have",
    "start": "387840",
    "end": "394440"
  },
  {
    "text": "the compute complex you could run control plane functions on the ipdpu and that CPU memory complex you could",
    "start": "394440",
    "end": "402180"
  },
  {
    "text": "support additional computers like storage networking that some of the ipu dpus are supporting we could move load",
    "start": "402180",
    "end": "408780"
  },
  {
    "text": "balance functionalities and so forth to the ipu dpu uh as examples if you're",
    "start": "408780",
    "end": "414479"
  },
  {
    "text": "aware what's going on in the market there are multiple such snacks available today on the market from Intel the",
    "start": "414479",
    "end": "420780"
  },
  {
    "text": "central ipu that that has been announced I believe not long ago uh the Nvidia dpu",
    "start": "420780",
    "end": "426720"
  },
  {
    "text": "and there is pensando AMD and this is only to mention examples right not to buy smoothies",
    "start": "426720",
    "end": "433580"
  },
  {
    "text": "so what are what are the objective in doing so obviously the objective will be",
    "start": "433620",
    "end": "438840"
  },
  {
    "text": "to improve performance and performance is really measured usually by latency and and throughput that could be",
    "start": "438840",
    "end": "445560"
  },
  {
    "text": "achieved on the host some applications also require very low Jitter as well you",
    "start": "445560",
    "end": "450660"
  },
  {
    "text": "could you could try to achieve that the other one is improved security as then touched on is really provided via the",
    "start": "450660",
    "end": "456720"
  },
  {
    "text": "isolation of the infrastructure from the host so the hosts get compromised for example that you're protected from that",
    "start": "456720",
    "end": "463139"
  },
  {
    "text": "because you're running on the infrastructure Processing Unit such the ipu DPO and the other one is really to",
    "start": "463139",
    "end": "470039"
  },
  {
    "text": "improve the overall efficiency from PowerPoint View and increasing compute density in the extent that that you'll",
    "start": "470039",
    "end": "476520"
  },
  {
    "text": "have and the way to achieve that is because you're freeing up what will be spent in CPU cycle and doing packed",
    "start": "476520",
    "end": "482759"
  },
  {
    "text": "processing such as doing forwarding policy enforcement load balancing and so forth you're saving those CPU Cycles by",
    "start": "482759",
    "end": "489780"
  },
  {
    "text": "offloading that functionality to the ipudpu and you're freeing up for application processing and that's is",
    "start": "489780",
    "end": "496620"
  },
  {
    "text": "what the spiritual purpose speeds are really built for it is the application processing and the other one is really",
    "start": "496620",
    "end": "502139"
  },
  {
    "text": "by doing so you're leveraging the ipu for networking where the purpose-built Asic usually or fast data path is being",
    "start": "502139",
    "end": "508860"
  },
  {
    "text": "implemented to do the packet processing is in the most efficient way that's how you get to the efficiency",
    "start": "508860",
    "end": "516320"
  },
  {
    "text": "so what are the goals and requirements obviously in here we've been talking about offloading the data plane",
    "start": "516539",
    "end": "521580"
  },
  {
    "text": "processing functions to the ipu dpu so examples of that will be to have the",
    "start": "521580",
    "end": "527459"
  },
  {
    "text": "state of the data plane such as fed policies and so forth maintained on that on the ipdpu you could have FIB as a",
    "start": "527459",
    "end": "538019"
  },
  {
    "text": "state and the the routing functionality or fuel or the foreign functionality as the action that's taken in the pipeline",
    "start": "538019",
    "end": "544260"
  },
  {
    "text": "similar could be said on policies you could have the policy states meaning firewall rules that are maintained as",
    "start": "544260",
    "end": "550320"
  },
  {
    "text": "state and then you could have the policy enforcement function done on the iPad as an action and so forth I don't want to",
    "start": "550320",
    "end": "556080"
  },
  {
    "text": "go through the list but just to give you a flavor there are many things that could potentially be implemented on the",
    "start": "556080",
    "end": "561660"
  },
  {
    "text": "ipdpu the other goal is to really to have an industry standard abstraction",
    "start": "561660",
    "end": "567180"
  },
  {
    "text": "layer for the hardware so that we could allow ease of integration between different solutions whether coming",
    "start": "567180",
    "end": "572700"
  },
  {
    "text": "through open source projects and or proprietary solutions from vendors with third-party Hardwares that are providing",
    "start": "572700",
    "end": "579720"
  },
  {
    "text": "or Hardware vendors Hardware that are providing ipu dpu Solutions as well and",
    "start": "579720",
    "end": "584880"
  },
  {
    "text": "there is an open source initiative that's being targeted for that from control plane aspect there is a",
    "start": "584880",
    "end": "592019"
  },
  {
    "text": "goal in here to really look at optimizing the control plane for both compute and networking to be fitting",
    "start": "592019",
    "end": "598920"
  },
  {
    "text": "better to the IP dpu Paradigm and that has not been really considered before and I'll talk about a potential way to",
    "start": "598920",
    "end": "605339"
  },
  {
    "text": "get that at a high level from a taxi point of view so what what is this really is really to look at what is",
    "start": "605339",
    "end": "611940"
  },
  {
    "text": "needed for the control path between the compute and network controllers to the host and then how to offload the control",
    "start": "611940",
    "end": "619320"
  },
  {
    "text": "or distribute the control plated function between the host CPU that's on the server host and the ipdpo on the",
    "start": "619320",
    "end": "626399"
  },
  {
    "text": "same server host and how to interrelate or coordinate the control plane between them",
    "start": "626399",
    "end": "632279"
  },
  {
    "text": "the target is also although in here where in the kubernetes conference in kubecon uh the Target in here to be able",
    "start": "632279",
    "end": "638820"
  },
  {
    "text": "to support the ipdp and for multiple compute endpoints that could include bare metal so there are many",
    "start": "638820",
    "end": "644820"
  },
  {
    "text": "applications that run on their metal uh to support us compute endpoints that could be visual machines and there are",
    "start": "644820",
    "end": "651180"
  },
  {
    "text": "many such applications or to support really uh parts or container endpoints that could be running work notes that",
    "start": "651180",
    "end": "657959"
  },
  {
    "text": "could be either bare metals or VMS that's kind of the scope of this so I want to go through this diagram it",
    "start": "657959",
    "end": "664740"
  },
  {
    "text": "could take a lot of time to go through that by itself but to illustrate what we mean by uh by data plane functional",
    "start": "664740",
    "end": "670620"
  },
  {
    "text": "distribution as well as controlled plane function distribution so overall functional distribution between the ipu",
    "start": "670620",
    "end": "676800"
  },
  {
    "text": "and dpu you could imagine a server or a host and John that has two main blocks",
    "start": "676800",
    "end": "681899"
  },
  {
    "text": "that is a host the host CPU and this memory complex which is the upper part in blue and then you could have the ipu",
    "start": "681899",
    "end": "688740"
  },
  {
    "text": "dpu as another neck card plugged into the same server host now that ipudpu",
    "start": "688740",
    "end": "694860"
  },
  {
    "text": "usually will have its own CPU memory complex as we talked about and will have Hardware acceleration for the databad",
    "start": "694860",
    "end": "700800"
  },
  {
    "text": "function that could be implemented via ISC and fpga that's kind of the setting of this now when we talk about the the",
    "start": "700800",
    "end": "706920"
  },
  {
    "text": "again the distribution of functionalities the One path that could be looked at that today if you have an",
    "start": "706920",
    "end": "713399"
  },
  {
    "text": "sdn controller or kubernetes controller they'll interact with with equivalent",
    "start": "713399",
    "end": "718620"
  },
  {
    "text": "control functions if you will that are run on the host CPU so offloading the that to the ipdpu so that the control",
    "start": "718620",
    "end": "724500"
  },
  {
    "text": "path could come from the controller let's say the network controller to an agent sitting on the ipdpu that will",
    "start": "724500",
    "end": "731100"
  },
  {
    "text": "interact with the with the centralized control plane and via the offload function it will learn for example",
    "start": "731100",
    "end": "737459"
  },
  {
    "text": "policies routes and so forth if they're coming through it or from a local routing Engine That Could be running on",
    "start": "737459",
    "end": "742860"
  },
  {
    "text": "the ipdpu and will go and program the the data path which will be on the PGA",
    "start": "742860",
    "end": "748519"
  },
  {
    "text": "via different relay adapters or or drivers to do that there are many functions that could be",
    "start": "748519",
    "end": "754860"
  },
  {
    "text": "implemented via that offload whether in in programming State uh as well as programming probably the pipeline as",
    "start": "754860",
    "end": "761279"
  },
  {
    "text": "well as getting data from the Fastback such as stats flow logs and so forth that would be gathered free of that the",
    "start": "761279",
    "end": "767220"
  },
  {
    "text": "other function in here is that in coordinating with the with the uh with the host CPU and that how does the",
    "start": "767220",
    "end": "773579"
  },
  {
    "text": "offload engine that's running on the ipdpu will contain to splice the data path if you will with the containers",
    "start": "773579",
    "end": "779399"
  },
  {
    "text": "that are running or the pods that are running on the whole CPU so there is interaction that has to go on between",
    "start": "779399",
    "end": "784800"
  },
  {
    "text": "the offload control block that's that's shown in this diagram and the onload",
    "start": "784800",
    "end": "789959"
  },
  {
    "text": "control block that's running on the SPO to really create the necessary interfaces whether as ROV interfaces or",
    "start": "789959",
    "end": "796139"
  },
  {
    "text": "to do the programmability of the virtual ethernet port that could be related to the Pod and so forth to create the data",
    "start": "796139",
    "end": "801839"
  },
  {
    "text": "path that comes from the Pod through the host on the host CPU through the ipudpu",
    "start": "801839",
    "end": "807060"
  },
  {
    "text": "and back to the to the Asic which will basically be interfacing with the physical next or throughout traffic",
    "start": "807060",
    "end": "812700"
  },
  {
    "text": "between between two parts on the same on the same host CPU so everything will be",
    "start": "812700",
    "end": "817920"
  },
  {
    "text": "going via a trusted path which is related to the infrastructure represented by the ipudpu rather than",
    "start": "817920",
    "end": "823500"
  },
  {
    "text": "being exercised if you will whether maintaining state like such as policies or enforcing that",
    "start": "823500",
    "end": "829680"
  },
  {
    "text": "state for the policy on the hospital will be done on the ipdpu now I'm not going to delve into the control path for",
    "start": "829680",
    "end": "836279"
  },
  {
    "text": "the compute but you could you could think about that also going through a trusted interface if you will meaning it",
    "start": "836279",
    "end": "842279"
  },
  {
    "text": "could come from centralized kubernetes controller and what called kubernetes",
    "start": "842279",
    "end": "847800"
  },
  {
    "text": "master and could go also through ipdpu and through the agents I'll call it agents for now that's offload and unload",
    "start": "847800",
    "end": "854399"
  },
  {
    "text": "you could trigger the the creation if you will of the of the pods via the",
    "start": "854399",
    "end": "859620"
  },
  {
    "text": "runtime engine on the hospital so the idea in here again to create isolation",
    "start": "859620",
    "end": "864720"
  },
  {
    "text": "between the host what your workload is executing and the infrastructure where policy is routing and so forth is being",
    "start": "864720",
    "end": "870959"
  },
  {
    "text": "enforced and do the coordination between the two that's an example of what we could done at a high level and that's",
    "start": "870959",
    "end": "876720"
  },
  {
    "text": "what we're looking really to start examining that and what the work that needs to be done in that space thank you",
    "start": "876720",
    "end": "884120"
  },
  {
    "text": "thank you uh thank you Nabil for scoping",
    "start": "884120",
    "end": "889560"
  },
  {
    "text": "requirements my name is Wallace I work for Google and",
    "start": "889560",
    "end": "894600"
  },
  {
    "text": "I'm going to talk briefly of how we meet these requirements how far away we're",
    "start": "894600",
    "end": "899639"
  },
  {
    "text": "from meeting them so if you look today at public clouds",
    "start": "899639",
    "end": "905459"
  },
  {
    "text": "and I'm mostly talking about Google is that public Cloud today offload VPC",
    "start": "905459",
    "end": "912420"
  },
  {
    "text": "networking to ipudpu so we already have offloads right",
    "start": "912420",
    "end": "917639"
  },
  {
    "text": "and if you look at the features that we offload today if you try to enumerate",
    "start": "917639",
    "end": "923100"
  },
  {
    "text": "them it's usually routing policy routing or some people call it service chaining",
    "start": "923100",
    "end": "929300"
  },
  {
    "text": "internal external load balancing security policies Etc if you don't look at the set of features that kubernetes",
    "start": "929300",
    "end": "936600"
  },
  {
    "text": "networking implements it's we call them sometimes differently but they're very similar which is you know",
    "start": "936600",
    "end": "942660"
  },
  {
    "text": "portraitability cluster IP note external IPM Network policies observability so",
    "start": "942660",
    "end": "949680"
  },
  {
    "text": "there is a lot of overlap between them and so can we actually then offload these kubernetes networking features",
    "start": "949680",
    "end": "956639"
  },
  {
    "text": "perhaps to the same infrastructure we already today offload the VPC networking",
    "start": "956639",
    "end": "962399"
  },
  {
    "text": "well actually we at least in Google we already offload some of the features",
    "start": "962399",
    "end": "967620"
  },
  {
    "text": "it's not very big set but some important features so for example two examples",
    "start": "967620",
    "end": "973380"
  },
  {
    "text": "that I brought here is border visibility and intra node observability or",
    "start": "973380",
    "end": "978839"
  },
  {
    "text": "visibility so for uh point reachability we rely on",
    "start": "978839",
    "end": "983940"
  },
  {
    "text": "VPC Network offloads to be able to scale",
    "start": "983940",
    "end": "989160"
  },
  {
    "text": "to reach to connect large number of PODS and we can run up to 15 000 nodes of you",
    "start": "989160",
    "end": "995220"
  },
  {
    "text": "know 200 parts per node and they're all going to be able to reach each other uh even you know during the VM migrations",
    "start": "995220",
    "end": "1001880"
  },
  {
    "text": "Etc so it's all offloaded in VPC uh or internode visibility",
    "start": "1001880",
    "end": "1008240"
  },
  {
    "text": "um in in gke we have this feature where we can Pan the traffic even the ones that's between pod we could configure uh",
    "start": "1008240",
    "end": "1014899"
  },
  {
    "text": "to punt the traffic to go through the hypervisor and so it's not a kubernetes",
    "start": "1014899",
    "end": "1020240"
  },
  {
    "text": "feature per se but uh in terms of observability uh you can effectively get",
    "start": "1020240",
    "end": "1026058"
  },
  {
    "text": "observability features that you get in VPC you can get you can essentially get visibility now what happens between your",
    "start": "1026059",
    "end": "1031880"
  },
  {
    "text": "pods even if they're running on the same node um so",
    "start": "1031880",
    "end": "1037640"
  },
  {
    "text": "that's the that was the current state but uh gke still relies uh heavily on on",
    "start": "1037640",
    "end": "1044900"
  },
  {
    "text": "loaded implementation for most of uh kubernetes networking so you know we're",
    "start": "1044900",
    "end": "1050000"
  },
  {
    "text": "on two proxy or data playing V2 and it's all running inside the node and using",
    "start": "1050000",
    "end": "1055280"
  },
  {
    "text": "either iptables or ebpf so why do we do that well time to Market familiarity",
    "start": "1055280",
    "end": "1061240"
  },
  {
    "text": "resource accounting is an interesting topic where essentially the the users",
    "start": "1061240",
    "end": "1066260"
  },
  {
    "text": "who are heavy you know Network policy users they'll be essentially spending",
    "start": "1066260",
    "end": "1071419"
  },
  {
    "text": "their Cycles to implement the network policies but there are very strong Tailwinds to offload more so the sort of",
    "start": "1071419",
    "end": "1079460"
  },
  {
    "text": "set of reasons for that there's numerous as as we discussed in a few previous slides but uh what one couple of things",
    "start": "1079460",
    "end": "1087500"
  },
  {
    "text": "that I I'd like to highlight is is the maturing offloads for VPC networking",
    "start": "1087500",
    "end": "1092900"
  },
  {
    "text": "then it gives us time to pay attention to kubernetes offloads uh one thing that",
    "start": "1092900",
    "end": "1098900"
  },
  {
    "text": "for me uh personally is the most important is this feature velocity and we get that feature",
    "start": "1098900",
    "end": "1105500"
  },
  {
    "text": "velocity if we can transparently evolve implementation of kubernetes networking",
    "start": "1105500",
    "end": "1111440"
  },
  {
    "text": "features independently from the guest OS and guest stack that allows us to roll",
    "start": "1111440",
    "end": "1116960"
  },
  {
    "text": "much faster uh and then to some somewhat related other reasons is a single data path uh",
    "start": "1116960",
    "end": "1124520"
  },
  {
    "text": "implementation for doesn't matter which OS you run with this Linux Linux windows or BSD containers and also an",
    "start": "1124520",
    "end": "1131780"
  },
  {
    "text": "opportunity to offer kubernetes features uh to to Stacks that currently bypass",
    "start": "1131780",
    "end": "1137960"
  },
  {
    "text": "Linux windows or BSD kernels such as dpdk right and also two lightweight sandboxes such",
    "start": "1137960",
    "end": "1145100"
  },
  {
    "text": "as divisor and also offloading as we kind of alluded to that bring",
    "start": "1145100",
    "end": "1152539"
  },
  {
    "text": "significant efficiency gains and that's uh Motors part of the slide is you know",
    "start": "1152539",
    "end": "1157820"
  },
  {
    "text": "how to put with that I'm going to switch to promotionally from Nvidia who is going",
    "start": "1157820",
    "end": "1165140"
  },
  {
    "text": "to present uh on",
    "start": "1165140",
    "end": "1170139"
  },
  {
    "text": "infrastructure offload in the in a using a a real cluster of",
    "start": "1170660",
    "end": "1177200"
  },
  {
    "text": "Nvidia dpus",
    "start": "1177200",
    "end": "1180760"
  },
  {
    "text": "and the sound is not working",
    "start": "1188299",
    "end": "1191620"
  },
  {
    "text": "oh I can hear it it's just really low",
    "start": "1193880",
    "end": "1199120"
  },
  {
    "text": "we will review Nvidia debut solution in kubernetes",
    "start": "1202660",
    "end": "1208100"
  },
  {
    "text": "hello everyone my name is Moshe Levy and I'm a techlet that didn't media in this",
    "start": "1208100",
    "end": "1213140"
  },
  {
    "text": "part of the panel we will review Nvidia debut solution in kubernetes this",
    "start": "1213140",
    "end": "1218179"
  },
  {
    "text": "solution is based on open source project and it's already used in production at Nvidia internal projects",
    "start": "1218179",
    "end": "1226280"
  },
  {
    "text": "in our solution we use oven kubernetes cni for the kubernetes networking",
    "start": "1226280",
    "end": "1232059"
  },
  {
    "text": "ovn kubernetes cni is used as obvious",
    "start": "1232059",
    "end": "1237760"
  },
  {
    "text": "endovian obvious is a SDM virtual switch and ovn is a project that provides a",
    "start": "1237760",
    "end": "1245919"
  },
  {
    "text": "abstracted with logical switches and logical routers to create a network pipeline for the kubernetes cluster",
    "start": "1245919",
    "end": "1254840"
  },
  {
    "text": "um let's review the oven kubernetes components so we have organ kubernetes",
    "start": "1254840",
    "end": "1261020"
  },
  {
    "text": "Master running on the master node the watches and the kubernetes resources pod",
    "start": "1261020",
    "end": "1266840"
  },
  {
    "text": "service Network policies on the right and we have the working model running open",
    "start": "1266840",
    "end": "1272240"
  },
  {
    "text": "kubernetes node which is doing the net device plan planning to the Pod and to",
    "start": "1272240",
    "end": "1279140"
  },
  {
    "text": "the OBS and revolving controller which is translating the oviological topology",
    "start": "1279140",
    "end": "1285340"
  },
  {
    "text": "to obvious open Flow pipeline",
    "start": "1285340",
    "end": "1291100"
  },
  {
    "text": "um taking a closer look at the work and load with the regular Nick we can see",
    "start": "1291860",
    "end": "1297080"
  },
  {
    "text": "that it uses vth belt for the networking the ovs OV components are running at the",
    "start": "1297080",
    "end": "1304280"
  },
  {
    "text": "worker node in case of a high packet rate we will see ICP utilization",
    "start": "1304280",
    "end": "1310880"
  },
  {
    "text": "that we are limited to a candle performance",
    "start": "1310880",
    "end": "1316280"
  },
  {
    "text": "when we're adding dpu to the cluster we are moving to an esterio V switch the",
    "start": "1316280",
    "end": "1323000"
  },
  {
    "text": "networking as I will be switch Dev allows us to create new device and the",
    "start": "1323000",
    "end": "1328159"
  },
  {
    "text": "working load to give to the Pod and appear on a device which we call a buffer presenter to plug to the obs",
    "start": "1328159",
    "end": "1334880"
  },
  {
    "text": "also obviously we are now no longer running at the worker mode they move to",
    "start": "1334880",
    "end": "1340100"
  },
  {
    "text": "the dpu so all the OV and obvious control plane is now at the dpu level",
    "start": "1340100",
    "end": "1346520"
  },
  {
    "text": "also in case of I packet rate we will see low performance utilization because",
    "start": "1346520",
    "end": "1352100"
  },
  {
    "text": "all the packet processing is now in the GPU also from a security and isolation",
    "start": "1352100",
    "end": "1358940"
  },
  {
    "text": "perspective if the worker mode is compromised and try it cannot tamper",
    "start": "1358940",
    "end": "1365360"
  },
  {
    "text": "with the networking because all the networking control plane is moved to the dpu and the dpu on the master are in the",
    "start": "1365360",
    "end": "1373280"
  },
  {
    "text": "trust domain and now a little bit on how we do dpu",
    "start": "1373280",
    "end": "1378799"
  },
  {
    "text": "Hardware acceleration so um we are leveraging leveraging SRV switch Dev technology obvious open",
    "start": "1378799",
    "end": "1386419"
  },
  {
    "text": "source already support Sr we switch them and it knows how to program",
    "start": "1386419",
    "end": "1392620"
  },
  {
    "text": "the e-switch connect when the first packet arrive into the obs",
    "start": "1392620",
    "end": "1398240"
  },
  {
    "text": "um obvious itself is using standard kernel API there's nothing proprietary here which is a tcflower to program the",
    "start": "1398240",
    "end": "1405380"
  },
  {
    "text": "heat switch in case the how dual vendor doesn't know how to",
    "start": "1405380",
    "end": "1410440"
  },
  {
    "text": "accelerate the packet um we will fall back to a kennel data",
    "start": "1410440",
    "end": "1417020"
  },
  {
    "text": "path this also allows us to reduce the CPU utilization on the arm cores and because",
    "start": "1417020",
    "end": "1422900"
  },
  {
    "text": "we're using siob and switch them we will get to the latency and language",
    "start": "1422900",
    "end": "1428299"
  },
  {
    "text": "performance is a data performance that we run and",
    "start": "1428299",
    "end": "1435440"
  },
  {
    "text": "experiment in Nvidia lab here we have we are using xci as a",
    "start": "1435440",
    "end": "1440659"
  },
  {
    "text": "package emulator we have the host details of the input CPUs on the left side we have obvious",
    "start": "1440659",
    "end": "1448159"
  },
  {
    "text": "learning connecting 6 LX dual pod 25 gig vth on the right side you have obvious",
    "start": "1448159",
    "end": "1456039"
  },
  {
    "text": "accelerated with Bluefield 2 dual pod 25 gig running siob",
    "start": "1456039",
    "end": "1463700"
  },
  {
    "text": "the workload is a test BMV pin to a full CPUs and because we are doing photopod in",
    "start": "1463700",
    "end": "1470720"
  },
  {
    "text": "this case the double pass is genif and connection tracking and it's here is generating the uh",
    "start": "1470720",
    "end": "1477919"
  },
  {
    "text": "uh 500 500k connections so we can see on the left side we are",
    "start": "1477919",
    "end": "1484820"
  },
  {
    "text": "using 32 CPUs for obvious ovm and then the right side we are using that because",
    "start": "1484820",
    "end": "1491419"
  },
  {
    "text": "now it's all moved to the dpu",
    "start": "1491419",
    "end": "1495519"
  },
  {
    "text": "performance on the left side we get eight gig you know using vth and on the",
    "start": "1497260",
    "end": "1503299"
  },
  {
    "text": "right Edge and the right side you get a",
    "start": "1503299",
    "end": "1508340"
  },
  {
    "text": "linear performance a 50 gig with siob also from latency perspective you get",
    "start": "1508780",
    "end": "1515480"
  },
  {
    "text": "four time late better latency when using a style now to summarize it so um with dpu we",
    "start": "1515480",
    "end": "1522860"
  },
  {
    "text": "get uncompromised performance in case of nvida dpu we can offload and accelerate",
    "start": "1522860",
    "end": "1527900"
  },
  {
    "text": "all the kubernetes flows put to part to the service while reducing CPU utilization to Bell minimum from the",
    "start": "1527900",
    "end": "1535460"
  },
  {
    "text": "security aspect we have networking isolation uh if the host is tempered this solution",
    "start": "1535460",
    "end": "1542480"
  },
  {
    "text": "is good for boards for VMS and for Bare metals and dpu is a commodity project",
    "start": "1542480",
    "end": "1547760"
  },
  {
    "text": "running a plane Linux we can run additional services and Storage security and others thank you very much",
    "start": "1547760",
    "end": "1555820"
  },
  {
    "text": "all right her audio is not working uh so next I will introduce uh uh newper",
    "start": "1566539",
    "end": "1575360"
  },
  {
    "text": "Jane who is going to talk about uh a",
    "start": "1575360",
    "end": "1580640"
  },
  {
    "text": "software project open source software project on uh doing kubernetes offload",
    "start": "1580640",
    "end": "1586220"
  },
  {
    "text": "really similar hi my name is lupujan and I'm part of Intel ipdk team",
    "start": "1586220",
    "end": "1593799"
  },
  {
    "text": "I have already emphasized on the importance of infrastructure offload and other implementation Solutions let me go",
    "start": "1594020",
    "end": "1601340"
  },
  {
    "text": "over how we are doing it to move from the traditional deployment model as",
    "start": "1601340",
    "end": "1606380"
  },
  {
    "text": "shown on the left to infrastructure offload model for various Cloud deployment scenarios we need dedicated",
    "start": "1606380",
    "end": "1612500"
  },
  {
    "text": "interfaces to the parts with this we can offload Elder switching L3 routing service load balancing",
    "start": "1612500",
    "end": "1620240"
  },
  {
    "text": "which includes",
    "start": "1620240",
    "end": "1623140"
  },
  {
    "text": "my name is part of Intel ipdk team",
    "start": "1628340",
    "end": "1634000"
  },
  {
    "text": "to move from the traditional deployment model as shown on the left to infrastructure offload model for various",
    "start": "1635120",
    "end": "1641480"
  },
  {
    "text": "Cloud deployment scenarios we need dedicated interfaces to the parts with this we can upload L2 switching and",
    "start": "1641480",
    "end": "1649220"
  },
  {
    "text": "free routing service load balancing which includes CT and AD functionality",
    "start": "1649220",
    "end": "1654520"
  },
  {
    "text": "encapsulation and encryption to our extensible data plane we added a new P4",
    "start": "1654520",
    "end": "1660380"
  },
  {
    "text": "based lean data plane to calculus Edition p for programmability makes the data plane extensible to Future Cloud",
    "start": "1660380",
    "end": "1666440"
  },
  {
    "text": "use cases and provides for better visibility into flow treatment through counters and stats Calico supports a",
    "start": "1666440",
    "end": "1672919"
  },
  {
    "text": "broad range of platforms including kubernetes and openstack and others for deployment of parts and VMS it also",
    "start": "1672919",
    "end": "1679460"
  },
  {
    "text": "supports multiple datablings using eppf and IP tables our day plane offers two ways forward",
    "start": "1679460",
    "end": "1685039"
  },
  {
    "text": "for Accelerated functionality for better free for better performance and reduce latencies",
    "start": "1685039",
    "end": "1691400"
  },
  {
    "text": "a software-based data plate which is implemented using dpdk and a hardware-based solution using ipu",
    "start": "1691400",
    "end": "1698480"
  },
  {
    "text": "since control plane components are similar in both of these models and offer a loose coupling for communication",
    "start": "1698480",
    "end": "1704240"
  },
  {
    "text": "using well-defined interfaces the same control plane works for the above two and other Calico Solutions this helps",
    "start": "1704240",
    "end": "1712159"
  },
  {
    "text": "with interoperability across data center nodes with a mix of accelerated and non-accelerated nodes",
    "start": "1712159",
    "end": "1719480"
  },
  {
    "text": "here's a picture that goes a bit deeper into the architecture the data plane drivers split into two components each",
    "start": "1719480",
    "end": "1725659"
  },
  {
    "text": "antenna manager which communicate using grpc agent can be further split up into no",
    "start": "1725659",
    "end": "1731480"
  },
  {
    "text": "region an infra agent while manager running on the infrastructure manages the resources life cycle of the",
    "start": "1731480",
    "end": "1738320"
  },
  {
    "text": "components and offload three runtime rules the node agent receives the cni calls as interfaces to the parts on the",
    "start": "1738320",
    "end": "1744799"
  },
  {
    "text": "host the infrastructure agent implements the standard rest apis to watch kubernetes",
    "start": "1744799",
    "end": "1750559"
  },
  {
    "text": "resources like pods services namespace and handles events associated with them",
    "start": "1750559",
    "end": "1756679"
  },
  {
    "text": "it also handles the networking policies for Quad traffic isolation and enhanced",
    "start": "1756679",
    "end": "1762799"
  },
  {
    "text": "platform security biggest advantage of infrastructure offload is that it offers a secure",
    "start": "1762799",
    "end": "1769580"
  },
  {
    "text": "environment for configuration of resources away from compute where ports are running it also provides a secure",
    "start": "1769580",
    "end": "1775640"
  },
  {
    "text": "access to other infrastructure provisioning pieces like storage the scalability performance and reduce",
    "start": "1775640",
    "end": "1782360"
  },
  {
    "text": "latencies while freeing up the host cores are the highlights because of this",
    "start": "1782360",
    "end": "1787820"
  },
  {
    "text": "kernel bypass it provides for better feature velocity as well",
    "start": "1787820",
    "end": "1793179"
  },
  {
    "text": "here's a running example deployment with our components as you can see we have interest manager and Enterprise agent",
    "start": "1793940",
    "end": "1800120"
  },
  {
    "text": "running as Team sets and together they are provisioning the dpdk pipeline with rules",
    "start": "1800120",
    "end": "1807140"
  },
  {
    "text": "just to show a B for example of this implementation we have service load balancing implemented using P4 here",
    "start": "1807140",
    "end": "1814820"
  },
  {
    "text": "the uh this implementation uses connection tracker and that functionality the very first packet is",
    "start": "1814820",
    "end": "1821419"
  },
  {
    "text": "looked up and it's used to pick one of the endpoints from the service web pool",
    "start": "1821419",
    "end": "1826899"
  },
  {
    "text": "once the endpoint has been picked up the flow is added to connection tracker and the subsequent packets are up into the",
    "start": "1826899",
    "end": "1833899"
  },
  {
    "text": "same endpoint and that is applied to learn more about this implementation",
    "start": "1833899",
    "end": "1840919"
  },
  {
    "text": "and how other sample examples have been implemented please go to ipdk.io create",
    "start": "1840919",
    "end": "1847279"
  },
  {
    "text": "a simple offload where we are working on the recipe and you see more additions to",
    "start": "1847279",
    "end": "1852860"
  },
  {
    "text": "existing implementation thanks so much for your time today",
    "start": "1852860",
    "end": "1858820"
  },
  {
    "text": "thank you Nipper and to go back to our",
    "start": "1860120",
    "end": "1866720"
  },
  {
    "text": "presentation here to learn more about what she just",
    "start": "1866720",
    "end": "1873500"
  },
  {
    "text": "described and also there's a demo of the code you can also download the code and run it yourself at ipdk.io it's also",
    "start": "1873500",
    "end": "1881419"
  },
  {
    "text": "part of the OPI project which I mentioned earlier which also has a bunch of code being developed to be able to",
    "start": "1881419",
    "end": "1888020"
  },
  {
    "text": "have consistent interfaces for these different types of dpus ipus and other acceleration devices",
    "start": "1888020",
    "end": "1895760"
  },
  {
    "text": "so in summary we have heard from folks working in public Cloud we've we have",
    "start": "1895760",
    "end": "1902240"
  },
  {
    "text": "heard from Moshe working on a dpu we've heard from nuper working on ipu and there's a lot of commonality in that",
    "start": "1902240",
    "end": "1910539"
  },
  {
    "text": "uh the the worker CPU the the job that they're doing should not be changed or",
    "start": "1910539",
    "end": "1916820"
  },
  {
    "text": "modified in any way this is a function where we're pushing the infrastructure underneath an abstraction so that the uh",
    "start": "1916820",
    "end": "1923840"
  },
  {
    "text": "the the end user doesn't need to worry about it uh there are some things that are required in all these different",
    "start": "1923840",
    "end": "1929539"
  },
  {
    "text": "solutions uh one thing that Newport mentioned and we played that part twice uh is that the need to have a connection",
    "start": "1929539",
    "end": "1936460"
  },
  {
    "text": "to each pod into the infrastructure so this allows you to apply policy when you",
    "start": "1936460",
    "end": "1944419"
  },
  {
    "text": "made that separation in order to be able to know which you know where the pot where each pod is the infrastructure",
    "start": "1944419",
    "end": "1950539"
  },
  {
    "text": "needs to have a a direct connection and in the case of a dpu and ipu that can be a hardware secured connection that",
    "start": "1950539",
    "end": "1958100"
  },
  {
    "text": "isolates all the different pods from each other and then the second piece that the common piece that's required is to be",
    "start": "1958100",
    "end": "1964100"
  },
  {
    "text": "able to program that infrastructure and in some cases uh like in moshe's example",
    "start": "1964100",
    "end": "1970279"
  },
  {
    "text": "we're able to program it through a new interface like through ovn and in other cases like in uh nuper's example we can",
    "start": "1970279",
    "end": "1977840"
  },
  {
    "text": "use existing kubernetes apis and and copy that state from the worker CPU into",
    "start": "1977840",
    "end": "1984559"
  },
  {
    "text": "the infrastructure to minimize the the set of changes needed in order to take advantage of this offload",
    "start": "1984559",
    "end": "1990620"
  },
  {
    "text": "and so uh you know there's different there's different options and different implementations out there we want to",
    "start": "1990620",
    "end": "1996260"
  },
  {
    "text": "have that commonality we want to be able to have commonality across the different ways that you can deploy this technology",
    "start": "1996260",
    "end": "2002640"
  },
  {
    "text": "and we absolutely want to be able to allow people to choose different vendors and different implementations depending",
    "start": "2002640",
    "end": "2008140"
  },
  {
    "text": "on uh you know what they're looking for uh and so uh with that uh I think we're",
    "start": "2008140",
    "end": "2016179"
  },
  {
    "text": "ready for questions [Applause]",
    "start": "2016179",
    "end": "2029070"
  },
  {
    "text": "I'm gonna make him run all the way across",
    "start": "2034659",
    "end": "2040919"
  },
  {
    "text": "if I understood well they need I have two or three questions the network stack",
    "start": "2041320",
    "end": "2047740"
  },
  {
    "text": "could be in the in the fpga would be would be programming the hardware",
    "start": "2047740",
    "end": "2053379"
  },
  {
    "text": "[Music] uh yeah so in uh a couple different",
    "start": "2053380",
    "end": "2058898"
  },
  {
    "text": "examples that we showed today the uh the data plane for the networking is being",
    "start": "2058899",
    "end": "2064118"
  },
  {
    "text": "run in Hardware uh can also be run in software and then there is a uh it's essentially a choice",
    "start": "2064119",
    "end": "2069700"
  },
  {
    "text": "as to how much of the control plane you want to move off of the worker node and in in the case of moshe's example the",
    "start": "2069700",
    "end": "2075820"
  },
  {
    "text": "entire control plane was moved off of the worker noted onto the dpu and the the following question with that",
    "start": "2075820",
    "end": "2083440"
  },
  {
    "text": "is what is the flexibility then to modify the network stack or to fix an",
    "start": "2083440",
    "end": "2089980"
  },
  {
    "text": "error if there is a bug there and also for functionalities like evpf",
    "start": "2089980",
    "end": "2097540"
  },
  {
    "text": "so I would say that you know these are very programmable devices and they've been designed to be able to uh you know",
    "start": "2097540",
    "end": "2105940"
  },
  {
    "text": "understand the the state of the art in terms of kubernetes networking uh and",
    "start": "2105940",
    "end": "2111339"
  },
  {
    "text": "it's really similar or maybe a a really similar to ebpf and that we're we're",
    "start": "2111339",
    "end": "2116800"
  },
  {
    "text": "starting with something like an iptables and evpf is an example of using optimized software but keeping it on the",
    "start": "2116800",
    "end": "2122560"
  },
  {
    "text": "worker uh you could use this technology and run that functionality in the",
    "start": "2122560",
    "end": "2128680"
  },
  {
    "text": "infrastructure as ebpf that would be a a a useful uh implementation of",
    "start": "2128680",
    "end": "2135820"
  },
  {
    "text": "infrastructure offload as well",
    "start": "2135820",
    "end": "2138960"
  },
  {
    "text": "one two three so if if you look at it in the uh we're",
    "start": "2141280",
    "end": "2147099"
  },
  {
    "text": "ready today offload the VPC networking so it already works and we do roll it",
    "start": "2147099",
    "end": "2152980"
  },
  {
    "text": "out you know often and we're able to fix it so it is doable yes",
    "start": "2152980",
    "end": "2160720"
  },
  {
    "text": "one last question we are running out of time I don't know who was first",
    "start": "2160720",
    "end": "2165960"
  },
  {
    "text": "who is the best we only have one question more we run the the rest of the people can go to to the to the",
    "start": "2166300",
    "end": "2174400"
  },
  {
    "text": "to talk to the speakers so what what's the best uh use case when we should use siov when we should use a dpu and dpdk",
    "start": "2174400",
    "end": "2182980"
  },
  {
    "text": "so how you compare the three Technologies ah so Ellie speaking from the Intel ipu",
    "start": "2182980",
    "end": "2189640"
  },
  {
    "text": "we are uh agnostic as to the type of interface you may want to use whether it's sriv vertio ve uh we're flexible so",
    "start": "2189640",
    "end": "2198820"
  },
  {
    "text": "we we support all of those different types of interfaces and also supporting them at the same time if you have a",
    "start": "2198820",
    "end": "2204940"
  },
  {
    "text": "primary and secondary Network so it's really a function of of what you have existing and and and what you want your",
    "start": "2204940",
    "end": "2211960"
  },
  {
    "text": "network to look like from the worker CPU side",
    "start": "2211960",
    "end": "2216300"
  },
  {
    "text": "foreign optimization that you have to do for",
    "start": "2217359",
    "end": "2223780"
  },
  {
    "text": "example if you're running on the hospital CPU you don't have to have the bandwidth for Hardware acceleration you don't have the security requirement then",
    "start": "2223780",
    "end": "2229780"
  },
  {
    "text": "whether using ebpf as was said earlier as as a way to implement probably the",
    "start": "2229780",
    "end": "2235000"
  },
  {
    "text": "data path in a faster way than you would have done in iptables you use that if dptk will be needed will still be do",
    "start": "2235000",
    "end": "2241780"
  },
  {
    "text": "that you could still do that in addition you could do either on the CPU complexes",
    "start": "2241780",
    "end": "2247720"
  },
  {
    "text": "that is on the ipu dpu because there will be exception packets that will be arriving to ippu that you may need to",
    "start": "2247720",
    "end": "2254859"
  },
  {
    "text": "process and what we call the networking the slow path and that could be actually ebpf or the pdk or whatever could be",
    "start": "2254859",
    "end": "2261339"
  },
  {
    "text": "handling that also on the on the on the ipdpu but in the slow path if you will",
    "start": "2261339",
    "end": "2266560"
  },
  {
    "text": "meaning not in the Asic but on the on the arm complex or whatever the compute complex could be on that so it's really",
    "start": "2266560",
    "end": "2272880"
  },
  {
    "text": "complementary technologies that exist that have different roles and whatever the environment that you have you could",
    "start": "2272880",
    "end": "2278680"
  },
  {
    "text": "suit or fit one or the other depending what your needs are so",
    "start": "2278680",
    "end": "2285119"
  },
  {
    "text": "thank you again for staying late and getting through our technical difficulties but uh yeah thank you again",
    "start": "2285400",
    "end": "2291640"
  },
  {
    "text": "thank you [Applause]",
    "start": "2291640",
    "end": "2295739"
  }
]