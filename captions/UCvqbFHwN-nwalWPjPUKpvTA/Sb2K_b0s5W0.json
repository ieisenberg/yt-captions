[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "all right so thank you y'all heard apparently y'all everyone supposed to get upvotes",
    "start": "0",
    "end": "5700"
  },
  {
    "text": "I didn't say it so we're good and I had",
    "start": "5700",
    "end": "11670"
  },
  {
    "text": "this trouble last time all right so I am part of a gypsy team however this is a",
    "start": "11670",
    "end": "19410"
  },
  {
    "text": "little bit wider scope than GRP see gypsy it does it's a little bit of how does Europe see fit into the wider story",
    "start": "19410",
    "end": "26160"
  },
  {
    "text": "of communicating and I'll try to be pretty fair to other systems I mean so",
    "start": "26160",
    "end": "33059"
  },
  {
    "text": "but I'm gonna be a little bit biased so we're gonna go into our rabbit hole",
    "start": "33059",
    "end": "39360"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "so programming languages we know them I'm sort of using this as a jumping-off point because we're very familiar with",
    "start": "39360",
    "end": "46530"
  },
  {
    "text": "multiple of them typically and we tend to be a little opinionated about them so",
    "start": "46530",
    "end": "53370"
  },
  {
    "text": "for example mythical programming language is imperative strongly-typed",
    "start": "53370",
    "end": "59760"
  },
  {
    "text": "dynamically type checked and while I'm saying each of these dragoo yep I like that about this and you're like I still",
    "start": "59760",
    "end": "67409"
  },
  {
    "text": "don't still don't know and this is gonna maybe gonna be a little bit problem I don't know why that is still down there",
    "start": "67409",
    "end": "72710"
  },
  {
    "text": "it is hiding stuff let's see if we just do it again",
    "start": "72710",
    "end": "79220"
  },
  {
    "text": "and it's still about the same alas whatever so anyways this time I say it's",
    "start": "86420",
    "end": "93229"
  },
  {
    "text": "got lambdas and like oh yeah yeah yeah lambdas that's that's where's that so",
    "start": "93229",
    "end": "101180"
  },
  {
    "text": "that's behind where you can't see anyway so there's these aspects of programming",
    "start": "101180",
    "end": "107390"
  },
  {
    "text": "languages and certain things you like oh I really need this or I don't care about very much like this but we're quite",
    "start": "107390",
    "end": "112670"
  },
  {
    "text": "familiar with them we can talk about these and we can throw around these words and we sort of know what people are talking about I feel like people are",
    "start": "112670",
    "end": "119539"
  },
  {
    "text": "also opinionated about communication systems but it's a little bit more akin to like Emacs versus vim it's a very",
    "start": "119539",
    "end": "127310"
  },
  {
    "text": "limited view of sort of the choices that are available we know some options and",
    "start": "127310",
    "end": "133850"
  },
  {
    "start": "132000",
    "end": "132000"
  },
  {
    "text": "we're sort of just debating between a couple implementations or things like that it's not serve on a higher level",
    "start": "133850",
    "end": "140680"
  },
  {
    "text": "and so like what are what are our options we are like okay we've got rest",
    "start": "140680",
    "end": "146989"
  },
  {
    "text": "our PC is the thing these days again we could make something our souls and then",
    "start": "146989",
    "end": "154299"
  },
  {
    "text": "yeah that's it there's really no no option so I'm not sure if y'all realize that there's basically no options on the",
    "start": "154299",
    "end": "159650"
  },
  {
    "text": "market and of course I'm jesting but also like let's say that you're gonna",
    "start": "159650",
    "end": "164810"
  },
  {
    "text": "want you know if only my perfect favorite communication system existed I",
    "start": "164810",
    "end": "170299"
  },
  {
    "text": "really wish it was and what are they choosing between we're like oh request",
    "start": "170299",
    "end": "175820"
  },
  {
    "text": "response yeah I know about that but what's the other things I could be talking about plant server versus what",
    "start": "175820",
    "end": "183459"
  },
  {
    "text": "binary versus text I do people do tend to be on that when they know the other side is and they know a lot of the",
    "start": "183459",
    "end": "189920"
  },
  {
    "text": "advantages disadvantages so you know we've got that going for us but it seems",
    "start": "189920",
    "end": "195440"
  },
  {
    "text": "like there really should be some more so let's go ahead and start simple and like",
    "start": "195440",
    "end": "201920"
  },
  {
    "text": "a pipe pretty simple it's that UNIX",
    "start": "201920",
    "end": "207560"
  },
  {
    "text": "thing and you can send on it and receive on it and but there's actually quite a bit to it",
    "start": "207560",
    "end": "214659"
  },
  {
    "text": "like I didn't try very hard and I came up with these these things so if we sort",
    "start": "214659",
    "end": "220189"
  },
  {
    "text": "of go into them it simplex means it's only one direction versus if it was duplex he'd be both direction except for",
    "start": "220189",
    "end": "227870"
  },
  {
    "text": "certain OSS like Solaris if I remember correctly a pipe is two directions so we'll just sort of ignore that but it's",
    "start": "227870",
    "end": "233269"
  },
  {
    "text": "basically a single direction it's reliable as in it doesn't just drop",
    "start": "233269",
    "end": "238609"
  },
  {
    "text": "stuff on the floor whenever it feels like it it's ordered so if you the first byte in will be the first byte out so if",
    "start": "238609",
    "end": "245120"
  },
  {
    "text": "you send one and two it'll come on the other side is one in two it happens to be byte oriented and this",
    "start": "245120",
    "end": "250849"
  },
  {
    "text": "is generally a versus message oriented although that's a little bit varies system system and that's because it's",
    "start": "250849",
    "end": "258229"
  },
  {
    "text": "really working on a bytes that's that the fundamental level it's working it happens to be streaming this tends to",
    "start": "258229",
    "end": "265280"
  },
  {
    "text": "imply the reliable and ordered but basically there's any number of elements",
    "start": "265280",
    "end": "272210"
  },
  {
    "text": "in this case and bytes and then it can terminate so streams typically have an",
    "start": "272210",
    "end": "277250"
  },
  {
    "text": "end which is sort of a hidden aspect to them and then it happens to be",
    "start": "277250",
    "end": "283400"
  },
  {
    "text": "asynchronous whenever you write a byte you don't know whenever the reader has read the byte and you tend not to wait",
    "start": "283400",
    "end": "290419"
  },
  {
    "text": "for the reader to read it is flow controlled though so if the reader isn't reading quickly enough you're gonna have",
    "start": "290419",
    "end": "295909"
  },
  {
    "text": "to end up waiting but that's a little bit different than being synchronous it happens to be buffered because the",
    "start": "295909",
    "end": "301760"
  },
  {
    "text": "kernel will end up buffering some things this is also related to async it ends up",
    "start": "301760",
    "end": "307370"
  },
  {
    "text": "providing a nice bit of performance but you also need to sort of account for it that certain things may not be noticed",
    "start": "307370",
    "end": "312860"
  },
  {
    "text": "immediately interesting thing is it's anonymous this means that there's no",
    "start": "312860",
    "end": "318169"
  },
  {
    "text": "identity for a pipe you know you create one your eye god this is my favorite I wish we could tell someone else about it you can't it's basically just an F T and",
    "start": "318169",
    "end": "327169"
  },
  {
    "text": "so there's no way to find a pipe if you could figure out a way to tell someone else about it there's no way to look",
    "start": "327169",
    "end": "333289"
  },
  {
    "text": "them up it's also cereal if you're",
    "start": "333289",
    "end": "338419"
  },
  {
    "text": "sending multiple bytes at a time and sort of those bytes vary and there's a couple of other things but it's really",
    "start": "338419",
    "end": "343969"
  },
  {
    "text": "hard to do a read or write by itself without sort of other synchronization a sort of other",
    "start": "343969",
    "end": "350670"
  },
  {
    "text": "synchronization if you've got multiple readers and multiple writers because the byte alignment can end up getting off",
    "start": "350670",
    "end": "355890"
  },
  {
    "text": "and it's a little bit hard if you're doing just single byte reads and writes you can actually do something more",
    "start": "355890",
    "end": "362940"
  },
  {
    "text": "parallel where you could have multiple readers and multiple writers but it's not to be all that common it's more",
    "start": "362940",
    "end": "368280"
  },
  {
    "text": "things like make using like desk Jay or things like that it's a little bit more specialized but you can go ahead and",
    "start": "368280",
    "end": "375840"
  },
  {
    "text": "commonly pair two pipes together this is where we we see a lot of systems do this",
    "start": "375840",
    "end": "381180"
  },
  {
    "text": "whenever they're wanting to communicate in both directions and at this point it becomes duplex so you've got you can",
    "start": "381180",
    "end": "387750"
  },
  {
    "text": "both send and receive at the same time well at the same time full duplex so",
    "start": "387750",
    "end": "393870"
  },
  {
    "text": "anytime you talk about duplex you have to ask whether it's half duplex or full duplex whether so some systems its",
    "start": "393870",
    "end": "400800"
  },
  {
    "text": "duplex but you have to send and then you have to receive and if you wanted to send again after you sent sorry you need",
    "start": "400800",
    "end": "406860"
  },
  {
    "text": "to wait for the receive and it happens to be full duplex both directions of the streams are independent it happens to be",
    "start": "406860",
    "end": "415080"
  },
  {
    "text": "point-to-point practice it's very hard to do such a system like this where it's not just one thing on either side and",
    "start": "415080",
    "end": "423740"
  },
  {
    "text": "yeah we've got pipe it's proven it works for really well it's sort of a little",
    "start": "423740",
    "end": "429840"
  },
  {
    "text": "bit low-level but it's it's very reliable and it works and we know how to understand it and comprehend it and work",
    "start": "429840",
    "end": "435780"
  },
  {
    "text": "with it it happens to also only be local local machine only there's something",
    "start": "435780",
    "end": "442350"
  },
  {
    "start": "441000",
    "end": "441000"
  },
  {
    "text": "related a called a FIFO on UNIX you might call it a named pipe Windows has",
    "start": "442350",
    "end": "447660"
  },
  {
    "text": "something else called a named pipe it's similar slightly different it's a little closer to the sockets stuff our UNIX",
    "start": "447660",
    "end": "453210"
  },
  {
    "text": "domain socket stuff but basically the only difference is now you have a name for it so before the thing about it",
    "start": "453210",
    "end": "459060"
  },
  {
    "text": "being anonymous now it is named there is a file that you can end up opening and then you can either open it for",
    "start": "459060",
    "end": "465180"
  },
  {
    "text": "rewriting or reading it happens just to be otherwise is basically the same as a pipe there's it's only one time use like",
    "start": "465180",
    "end": "473070"
  },
  {
    "text": "a pipe after it's closed it's done and you might as well just delete the file",
    "start": "473070",
    "end": "478110"
  },
  {
    "text": "it doesn't do much up to that point and then we're coming up on two shared resources you",
    "start": "478110",
    "end": "485080"
  },
  {
    "start": "481000",
    "end": "481000"
  },
  {
    "text": "can tell I'm talking a lot about on a single machine and let's not ignore the fact that we can just do anything if we",
    "start": "485080",
    "end": "492430"
  },
  {
    "text": "have a shared resource we can communicate however we want whatever back-channel if we have let's say some",
    "start": "492430",
    "end": "497770"
  },
  {
    "text": "shared memory I can set some memory bits and then someone else can read those memory bits and set some hour and we",
    "start": "497770",
    "end": "503680"
  },
  {
    "text": "have that so you either use just plain shared memory you might do shared memory plus a shared mutex across multiple",
    "start": "503680",
    "end": "510820"
  },
  {
    "text": "processes or threads or things like that you can also use files and file locks and something like RDMA for for doing",
    "start": "510820",
    "end": "518289"
  },
  {
    "text": "that remotely so this this organ thing is actually pretty common in desktop",
    "start": "518289",
    "end": "525190"
  },
  {
    "text": "applications or intra app applications whenever an app is sort of trying to talk to itself on a single node and it's",
    "start": "525190",
    "end": "533680"
  },
  {
    "text": "generally associated with high performance if you you can use it and",
    "start": "533680",
    "end": "539440"
  },
  {
    "text": "get low performance but whenever people are going for high performance this is",
    "start": "539440",
    "end": "545260"
  },
  {
    "text": "something they might turn to and try to eat things out but it also happens to be a bit brittle because you end up sharing",
    "start": "545260",
    "end": "551830"
  },
  {
    "text": "quite a bit of State and knowledge and the things have to coordinate if anything if any one thing goes wrong it",
    "start": "551830",
    "end": "557440"
  },
  {
    "text": "brings down the entire system and things like that so it's pretty poor poorly suited for crossing trusts domains when",
    "start": "557440",
    "end": "563020"
  },
  {
    "text": "it's some other person is going to be the client that I'm saying client some other person use process is going to be",
    "start": "563020",
    "end": "570700"
  },
  {
    "text": "interacting with yours and you don't control that area what much and it's also poorly suited to outgrow the one",
    "start": "570700",
    "end": "579040"
  },
  {
    "text": "job it was created for you try to shove it more things in it like if you're just going to try pass more data that's",
    "start": "579040",
    "end": "585160"
  },
  {
    "text": "probably fine but if you're trying to have it try to teach it new tricks it can start growing poorly there's a",
    "start": "585160",
    "end": "593140"
  },
  {
    "text": "lot of there's common patterns but they tend to be some sort of random application specific protocol strongly",
    "start": "593140",
    "end": "599980"
  },
  {
    "text": "tailored to whatever that one thing you're doing is and and that sort of makes it a bit too complex to get into",
    "start": "599980",
    "end": "605820"
  },
  {
    "text": "two very dig it into but I'll just make note here that when",
    "start": "605820",
    "end": "611560"
  },
  {
    "text": "scaling over multiple machines you can still do it and we still do share resources across multiple machines but",
    "start": "611560",
    "end": "618160"
  },
  {
    "text": "and most of the interaction patterns still hold we're going to need some sort of network protocol to do that but this",
    "start": "618160",
    "end": "624700"
  },
  {
    "text": "can be something like as simple as memcache D or your database that you end",
    "start": "624700",
    "end": "630670"
  },
  {
    "text": "up just you know having all the pieces of your application access directly that's that's sort of similar to shared",
    "start": "630670",
    "end": "636820"
  },
  {
    "text": "resource in many ways and then just sort of I think this is rounding this out",
    "start": "636820",
    "end": "642250"
  },
  {
    "start": "637000",
    "end": "637000"
  },
  {
    "text": "we've got sockets these are duplex and they can actually be both four bytes a",
    "start": "642250",
    "end": "648250"
  },
  {
    "text": "stream of bytes or four messages depending on its type its point-to-point client-server we're noticing some terms",
    "start": "648250",
    "end": "655410"
  },
  {
    "text": "sort of coming up now and the the server",
    "start": "655410",
    "end": "660520"
  },
  {
    "text": "ends up binding to a name or a port and the client ends up looking up that name",
    "start": "660520",
    "end": "666370"
  },
  {
    "text": "in order to find it and then we'll see we'll see this sort of pattern hold and slightly different names and slightly",
    "start": "666370",
    "end": "672070"
  },
  {
    "text": "different forms but it's pretty common it happens to be connection oriented",
    "start": "672070",
    "end": "677760"
  },
  {
    "text": "where you make the establish the connection and that has some state to",
    "start": "677760",
    "end": "683830"
  },
  {
    "text": "the the client and the server and things are associated with that connection so for example UNIX domain socket it",
    "start": "683830",
    "end": "690130"
  },
  {
    "text": "supports both bytes and messages they really behave pretty similar to each other except whether you're gonna do",
    "start": "690130",
    "end": "696250"
  },
  {
    "text": "things on byte based or message based and then TCP which we all basically know",
    "start": "696250",
    "end": "702040"
  },
  {
    "text": "it's gonna be bytes it's just a big stream of bytes and the thing that is cut off at the bottom is a smaller will",
    "start": "702040",
    "end": "708970"
  },
  {
    "text": "note that messages may have a maximum size that that happens a lot in message",
    "start": "708970",
    "end": "714370"
  },
  {
    "text": "based systems you might think oh that TCP thing we talked about sockets there's that UDP thing yeah let's not",
    "start": "714370",
    "end": "721270"
  },
  {
    "text": "talk about the UDP thing it's just it's a thing to itself it's really cool and neat useful but it's gonna be pretty",
    "start": "721270",
    "end": "727810"
  },
  {
    "text": "specialized cases so this is really a continuation of the socket but there the",
    "start": "727810",
    "end": "734110"
  },
  {
    "start": "730000",
    "end": "730000"
  },
  {
    "text": "UNIX domain socket is a bit interesting in that it can send more than just bytes or messages it can actually send file",
    "start": "734110",
    "end": "741160"
  },
  {
    "text": "descriptors these system objects where you have one and then you - another process and then they have it",
    "start": "741160",
    "end": "747630"
  },
  {
    "text": "this is very heavily used for like limiting permissions where you you have some privileged process opens a file or",
    "start": "747630",
    "end": "755470"
  },
  {
    "text": "something and then hands off the file descriptor to another process and that means that other process cannot access",
    "start": "755470",
    "end": "762310"
  },
  {
    "text": "all the other files it can just access this one or something like that but this",
    "start": "762310",
    "end": "769030"
  },
  {
    "text": "opens up a sort of question now we've got an object and the objects have a lifetime to them so now we need to",
    "start": "769030",
    "end": "775330"
  },
  {
    "text": "manage this lifetime it in this particular case it since not to be that",
    "start": "775330",
    "end": "780340"
  },
  {
    "text": "bad the kernel just keeps a reference count and it turns to be pretty simple because",
    "start": "780340",
    "end": "785500"
  },
  {
    "text": "there's no row graph involved like a file descriptor doesn't contain another file descriptor and so it's pretty much",
    "start": "785500",
    "end": "792700"
  },
  {
    "text": "just a flat bunch of reference counted objects there's no graph there's no",
    "start": "792700",
    "end": "799270"
  },
  {
    "text": "cycles so everything is pretty fine in the world so we we went through all",
    "start": "799270",
    "end": "807820"
  },
  {
    "text": "these sort of lower-level stuff but we don't tend to use those on a daily basis I was sort of it's it's a little bit too",
    "start": "807820",
    "end": "814600"
  },
  {
    "text": "much work and the first thing to sort of make things easier that sort of came along and I guess the 80s was our BC",
    "start": "814600",
    "end": "821620"
  },
  {
    "text": "remote procedure call so son RPC is up there because that was basically the",
    "start": "821620",
    "end": "827110"
  },
  {
    "text": "first widely used one I used JSON RPC did its job pretty well",
    "start": "827110",
    "end": "832620"
  },
  {
    "text": "soap is you could argue a little bit it's different but a lot of people use",
    "start": "832620",
    "end": "837790"
  },
  {
    "text": "it for RPC so I think it's at least fair to put in here and then G RPC is also RPC this is a different paradigm now",
    "start": "837790",
    "end": "845980"
  },
  {
    "text": "we've got requests and response messages and you've got this request response pair for each RBC it's still going to be",
    "start": "845980",
    "end": "852730"
  },
  {
    "text": "a point-to-point client-server but it's also now connectionless you we're doing things on a per RPC basis as opposed to",
    "start": "852730",
    "end": "859630"
  },
  {
    "text": "oh we establish connection and we're going to do a bunch of back-and-forth communication but probably the biggest",
    "start": "859630",
    "end": "864970"
  },
  {
    "text": "thing that was sort of a big deal was the ideal or the interface definition",
    "start": "864970",
    "end": "870370"
  },
  {
    "text": "language this is you go off and you describe your service or protocol or",
    "start": "870370",
    "end": "875710"
  },
  {
    "text": "whatever it is and then it's generally prepared with generated code",
    "start": "875710",
    "end": "880980"
  },
  {
    "text": "which allows you to generate that in your language and you have a nice clear",
    "start": "880980",
    "end": "886649"
  },
  {
    "text": "API you've got messages and types that you can work with and you can bundle these together and you don't have to",
    "start": "886649",
    "end": "892889"
  },
  {
    "text": "worry about that anymore so even back in the like UNIX domain socket we had a we",
    "start": "892889",
    "end": "898170"
  },
  {
    "text": "had a message base to stream that's what I said but that message was just a bunch of bytes it wasn't actually like it was",
    "start": "898170",
    "end": "904860"
  },
  {
    "text": "just a it would had a particular length but it was still bytes in this case now we are getting something that there's",
    "start": "904860",
    "end": "911970"
  },
  {
    "text": "the structure involved you've got two integer fields and the string and these",
    "start": "911970",
    "end": "917970"
  },
  {
    "text": "things start meaning something to you and then it's a little cut off at the bottom there but RPC is also synchronous",
    "start": "917970",
    "end": "924449"
  },
  {
    "text": "because of this request and then you're waiting on the response GFC was up there",
    "start": "924449",
    "end": "931320"
  },
  {
    "text": "it's a little bit different as well though because it also supports a streaming mode so it's got the client",
    "start": "931320",
    "end": "937320"
  },
  {
    "text": "it's got their request response mode but you could also just do streaming which",
    "start": "937320",
    "end": "942420"
  },
  {
    "text": "is a different mode you've got it's gonna be full duplex and some things like that which we talked about with",
    "start": "942420",
    "end": "947639"
  },
  {
    "text": "streaming also at the bottom which is you get to see the right it's gonna be",
    "start": "947639",
    "end": "953220"
  },
  {
    "text": "synchronous if you're doing a request response but if you're doing streaming it can actually be asynchronous this is",
    "start": "953220",
    "end": "959399"
  },
  {
    "text": "a little bit what you tend to make it like it's a bids on how you use it whether how much synchronous or",
    "start": "959399",
    "end": "964589"
  },
  {
    "text": "asynchronous it's gonna be but sort of lower level it can start working a lot",
    "start": "964589",
    "end": "969660"
  },
  {
    "text": "more like a pipe at that point also streaming allows pipelining where this",
    "start": "969660",
    "end": "976980"
  },
  {
    "text": "is a little bit of a people know serial and they know parallel it's some little",
    "start": "976980",
    "end": "982920"
  },
  {
    "text": "bit in the middle parallel you're doing multiple things at one time serial is you do one thing you do the next you do",
    "start": "982920",
    "end": "988350"
  },
  {
    "text": "the next pipelining allows you to start the second one a little bit before you were done with the first and typically",
    "start": "988350",
    "end": "994920"
  },
  {
    "text": "this is done on the communication itself so you've got two nodes and whenever the",
    "start": "994920",
    "end": "1000470"
  },
  {
    "text": "the node that'll say the server is done processing the work from the first request the second request is already",
    "start": "1000470",
    "end": "1007279"
  },
  {
    "text": "there waiting for it and so it can immediately process the second request it's not going to",
    "start": "1007279",
    "end": "1012710"
  },
  {
    "text": "respond with the the first request the client then says oh great that's and",
    "start": "1012710",
    "end": "1017779"
  },
  {
    "text": "then it creates the second request Simpsons that the client can have already prepared the the second request",
    "start": "1017779",
    "end": "1023480"
  },
  {
    "text": "and that allows you to reduce some latency and some other things so this",
    "start": "1023480",
    "end": "1030860"
  },
  {
    "text": "sort of goes back to why I made the talk people aren't necessarily familiar with",
    "start": "1030860",
    "end": "1036650"
  },
  {
    "text": "a lot of these things and so I talked about Oh Jesse its RPC some people not",
    "start": "1036650",
    "end": "1043188"
  },
  {
    "text": "actually that small of a number people were like okay well I've got my service",
    "start": "1043189",
    "end": "1048500"
  },
  {
    "text": "up at the top and it creates another service so it's got the create response",
    "start": "1048500",
    "end": "1054050"
  },
  {
    "text": "and then it's going to return a calculator and this at the very bottom there is another service which is the",
    "start": "1054050",
    "end": "1060200"
  },
  {
    "text": "calculator service so can you return one service from another service and",
    "start": "1060200",
    "end": "1066559"
  },
  {
    "text": "actually to do that I mean the short answer is no but to do that you end up",
    "start": "1066559",
    "end": "1071600"
  },
  {
    "text": "needing to pass a reference to that second service and the moment you start talking about references we're now",
    "start": "1071600",
    "end": "1077179"
  },
  {
    "text": "getting into more of an object land and that means we're going to do remote method invocation",
    "start": "1077179",
    "end": "1083110"
  },
  {
    "text": "it's basically object oriented RBC in some ways if you so the main thing is",
    "start": "1083110",
    "end": "1089870"
  },
  {
    "text": "that there's an object it's got some stayed and methods but you don't actually send objects you only send",
    "start": "1089870",
    "end": "1096650"
  },
  {
    "text": "references and if anyone needs to call any of the methods on or you know change",
    "start": "1096650",
    "end": "1102679"
  },
  {
    "text": "the state of the object or anything like that they've got to send those method",
    "start": "1102679",
    "end": "1107720"
  },
  {
    "text": "calls back to the original object in order to get it to mutate at state a message however is just data and it's",
    "start": "1107720",
    "end": "1115070"
  },
  {
    "text": "going to be passed by by value you always copy the full message and it's",
    "start": "1115070",
    "end": "1120890"
  },
  {
    "text": "gonna be things like the primitives and structs and like the intz and the streams and things like that but now",
    "start": "1120890",
    "end": "1127700"
  },
  {
    "start": "1126000",
    "end": "1126000"
  },
  {
    "text": "we've got a little bit of a problem so RMI is based on invoking an a method",
    "start": "1127700",
    "end": "1133700"
  },
  {
    "text": "on a on an object but how do you start you don't actually have an object to",
    "start": "1133700",
    "end": "1139040"
  },
  {
    "text": "begin with you need an object to begin with pretty much all the systems have some sort of directory service where you",
    "start": "1139040",
    "end": "1144350"
  },
  {
    "text": "can register an object into the directory service and then the first thing you do as a client is you go find",
    "start": "1144350",
    "end": "1149550"
  },
  {
    "text": "the objects that you're looking for you end up having to cast it to whatever type you're hoping it to be and then you",
    "start": "1149550",
    "end": "1155730"
  },
  {
    "text": "can start calling methods on it casting methods interfaces okay we need",
    "start": "1155730",
    "end": "1165270"
  },
  {
    "text": "needs we need some something there to define these things so there's",
    "start": "1165270",
    "end": "1170700"
  },
  {
    "text": "interfaces that are defined in RMI and these are just commonly called services",
    "start": "1170700",
    "end": "1175980"
  },
  {
    "text": "its various methods and they've got these parameters particular objects will",
    "start": "1175980",
    "end": "1182250"
  },
  {
    "text": "implement particular interfaces or be particular service services and you can",
    "start": "1182250",
    "end": "1187350"
  },
  {
    "text": "end up casting and doing things like that to them that means that there's a runtime system in place now in order to",
    "start": "1187350",
    "end": "1193290"
  },
  {
    "text": "check does this particular reference this particular object supports these",
    "start": "1193290",
    "end": "1198840"
  },
  {
    "text": "particular methods that will vary a little bit in complexity but many of them do allow you to check hey does it",
    "start": "1198840",
    "end": "1205440"
  },
  {
    "text": "support this interface and we also need a way to maintain object lifetimes",
    "start": "1205440",
    "end": "1211320"
  },
  {
    "text": "just like you saw before with the UNIX domain socket we we're gonna have a lot",
    "start": "1211320",
    "end": "1217650"
  },
  {
    "text": "of objects floating around we're gonna need some sort of way to manage them that's generally reference counting or",
    "start": "1217650",
    "end": "1223740"
  },
  {
    "text": "GC although that can vary a little bit and so just to put this into a little",
    "start": "1223740",
    "end": "1229680"
  },
  {
    "start": "1227000",
    "end": "1227000"
  },
  {
    "text": "bit more concrete because a lot of people haven't I think seen RMI this was just a simple d-bus example I made I'm a",
    "start": "1229680",
    "end": "1237060"
  },
  {
    "text": "little familiar with ABI he and d-bus and stuff and so I just shot this in here but the the first one finds not too",
    "start": "1237060",
    "end": "1243690"
  },
  {
    "text": "interesting it's just getting a sort of a global bus but the first law the second line the get object is getting an",
    "start": "1243690",
    "end": "1249270"
  },
  {
    "text": "object by a particular name it's got some slash path sort of syntax but the",
    "start": "1249270",
    "end": "1256680"
  },
  {
    "text": "FIR it's basically just getting it by its name the the next line is casting it if this was a Jenner this isn't Python",
    "start": "1256680",
    "end": "1263790"
  },
  {
    "text": "if this was a statically typed language that would have been generated code that",
    "start": "1263790",
    "end": "1268830"
  },
  {
    "text": "we would have ended up casting it to particular concrete type and then we",
    "start": "1268830",
    "end": "1274950"
  },
  {
    "text": "actually do the actual communication at the very end and so we were able to call a particular method that remote object and in this case it's",
    "start": "1274950",
    "end": "1282770"
  },
  {
    "text": "actually going to create a new object and return it to us",
    "start": "1282770",
    "end": "1286899"
  },
  {
    "text": "but that is a very very common in our mi like in anytime you you start seeing",
    "start": "1288350",
    "end": "1294020"
  },
  {
    "text": "this that directory service that's that's a good clue that you're in the are mi land but coming back a little bit",
    "start": "1294020",
    "end": "1301160"
  },
  {
    "text": "is need a way to manage object lifetime this is a very important part of our my",
    "start": "1301160",
    "end": "1308350"
  },
  {
    "text": "it now means that you need to have a full system it's not just client and",
    "start": "1308350",
    "end": "1314330"
  },
  {
    "text": "server and those two communicate alone you've got a new full system where",
    "start": "1314330",
    "end": "1319580"
  },
  {
    "text": "you've got references passing back and forth and think about if you've got a memory leak it's the system has a memory",
    "start": "1319580",
    "end": "1327620"
  },
  {
    "text": "leak it is not that process has a memory leak and you're going to need some that",
    "start": "1327620",
    "end": "1333470"
  },
  {
    "text": "all the machines are going to need to communicate and figure out how they do this reference counting when do they release references how are you going to",
    "start": "1333470",
    "end": "1340280"
  },
  {
    "text": "do garbage collection are you been going to bother with circular references or things like that so this how you end up",
    "start": "1340280",
    "end": "1348200"
  },
  {
    "text": "solving this problems very important to our mi there's variations there's simpler versions event there's more",
    "start": "1348200",
    "end": "1354080"
  },
  {
    "text": "complex versions of it but that that's something always to look out for so",
    "start": "1354080",
    "end": "1361190"
  },
  {
    "start": "1359000",
    "end": "1359000"
  },
  {
    "text": "serve going back I had the list for RPC this list is for now are mi it's",
    "start": "1361190",
    "end": "1366410"
  },
  {
    "text": "basically the same list the only difference is now request response can now be for objects and messages because",
    "start": "1366410",
    "end": "1373760"
  },
  {
    "text": "you can pass the objects around one interesting thing is sometimes you can",
    "start": "1373760",
    "end": "1378799"
  },
  {
    "text": "interchange those objects and messages I'm trying to think I think like Java RMI it wasn't even clear whenever he called",
    "start": "1378799",
    "end": "1385160"
  },
  {
    "text": "whether you're gonna get an object back or a message back it was sort of up to the server to decide what happened and",
    "start": "1385160",
    "end": "1391880"
  },
  {
    "text": "that it that can actually be a very very hard point whenever you're trying to understand these systems",
    "start": "1391880",
    "end": "1397190"
  },
  {
    "text": "I strongly prefer whenever those are very clear if there's a clear separation between objects and messages and then",
    "start": "1397190",
    "end": "1404690"
  },
  {
    "text": "it's also not quite client-server there's aspects of client-server you'll",
    "start": "1404690",
    "end": "1410600"
  },
  {
    "text": "commonly see the words client and server but I think it's a little bit more murky there because it's really like these",
    "start": "1410600",
    "end": "1416400"
  },
  {
    "text": "aren't servers they're actually objects and the client can become a server if it's gonna pass a listener and stuff so",
    "start": "1416400",
    "end": "1422820"
  },
  {
    "text": "it's a little bit more murky there it's still mostly client-server but I think",
    "start": "1422820",
    "end": "1428070"
  },
  {
    "text": "it's not quite fair to just say it's plain a client-server and then a little bit cut off at the bottom here is",
    "start": "1428070",
    "end": "1435110"
  },
  {
    "text": "sometimes it's also network it has Network transparency this was a big",
    "start": "1435110",
    "end": "1440610"
  },
  {
    "text": "thing in some systems and it's also something to watch out for I think that",
    "start": "1440610",
    "end": "1447240"
  },
  {
    "text": "this was a big failing point out of a lot of the RMI systems is that they were trying to become completely invisible",
    "start": "1447240",
    "end": "1452850"
  },
  {
    "text": "and whenever you start abstracting where the network at this level it becomes very hard to figure out how the system",
    "start": "1452850",
    "end": "1460350"
  },
  {
    "text": "is reeving for example I said like Java RMI it was very hard to get your very it",
    "start": "1460350",
    "end": "1467010"
  },
  {
    "text": "was hard to get figure out whether you're dealing with an object or message that matters for a performance also this",
    "start": "1467010",
    "end": "1473280"
  },
  {
    "text": "network transparency it matters if if you're gonna call it getter you don't want to really be calling a getter from",
    "start": "1473280",
    "end": "1480170"
  },
  {
    "text": "over the network all the time you know it's there's five different things you're not gonna get one get the next get the next get the next generally",
    "start": "1480170",
    "end": "1486750"
  },
  {
    "text": "whenever you're doing network programming you're gonna do a larger request to get more things all at once",
    "start": "1486750",
    "end": "1492240"
  },
  {
    "text": "because you do have the synchronous major nature so those are things to look out for not every RMI system has a",
    "start": "1492240",
    "end": "1499380"
  },
  {
    "text": "network transparency but it's something that very strongly impacts how you end",
    "start": "1499380",
    "end": "1504540"
  },
  {
    "text": "up working with the system so to give some examples RMI is still very strong and alive but",
    "start": "1504540",
    "end": "1512130"
  },
  {
    "text": "mainly on a local system so Android binder which is heavily used on Android phones it's it's really an",
    "start": "1512130",
    "end": "1518850"
  },
  {
    "text": "are might sort of type of system it can do some other things but it's it's it's got the general pattern I was showing earlier and I mentioned d-bus already",
    "start": "1518850",
    "end": "1525780"
  },
  {
    "text": "and d-bus is how you contact system D and reasonable number people in here probably touched system D at one point",
    "start": "1525780",
    "end": "1532590"
  },
  {
    "text": "to invoke something but people tend to think about these all these other ones",
    "start": "1532590",
    "end": "1538080"
  },
  {
    "text": "DOM and CORBA those definitely come up sorry D calm D common CORBA",
    "start": "1538080",
    "end": "1544050"
  },
  {
    "text": "those were the the are my systems that we really think of and whenever I say",
    "start": "1544050",
    "end": "1550320"
  },
  {
    "text": "RPC that's actually what a lot of people seem to have in their mind and think about but Java RMI is in there too Java",
    "start": "1550320",
    "end": "1558929"
  },
  {
    "text": "RMI is actually not dead it's I think still going with j2ee folks but it's a",
    "start": "1558929",
    "end": "1564090"
  },
  {
    "text": "little bit more niche but D common CORBA are pretty much dead at this point",
    "start": "1564090",
    "end": "1569330"
  },
  {
    "text": "one interesting thing I talked about the the local only RMI with Android binder",
    "start": "1569330",
    "end": "1576150"
  },
  {
    "text": "and D bus these tend to be used for transferring system objects again the",
    "start": "1576150",
    "end": "1583860"
  },
  {
    "text": "reference itself to objects can be considered a secret because you have some system that can enforce that it was",
    "start": "1583860",
    "end": "1590910"
  },
  {
    "text": "actually since from one process to the other and so you can pass privileged objects and in this case they're",
    "start": "1590910",
    "end": "1597420"
  },
  {
    "text": "actually like application level objects references you can pass those references",
    "start": "1597420",
    "end": "1602880"
  },
  {
    "text": "across processes and this can be also used for security so small detour",
    "start": "1602880",
    "end": "1610400"
  },
  {
    "text": "there's the thing called brokers so you can have brokered protocols I'm sort of",
    "start": "1610400",
    "end": "1615720"
  },
  {
    "start": "1611000",
    "end": "1611000"
  },
  {
    "text": "throwing a lot of them together yes in these cases you're going to use some",
    "start": "1615720",
    "end": "1621690"
  },
  {
    "text": "sort of intermediary and it's so-so a broker is generally a service that you",
    "start": "1621690",
    "end": "1626730"
  },
  {
    "text": "end up talking to and then someone else might talk to it and it's very common for message queues and job queues a",
    "start": "1626730",
    "end": "1633300"
  },
  {
    "text": "message buffs if you have Watchers and notifications this is not no longer",
    "start": "1633300",
    "end": "1640200"
  },
  {
    "text": "client-server although you're going to talk generally client-server to the",
    "start": "1640200",
    "end": "1645390"
  },
  {
    "text": "broker itself but if you're looking at the system the sort of the wider system it's no longer client-server and so for",
    "start": "1645390",
    "end": "1653070"
  },
  {
    "text": "example both d-bus and pub/sub are brokered protocols d-bus is built on top",
    "start": "1653070",
    "end": "1659010"
  },
  {
    "text": "of UNIX domain sockets and pub/sub is built off of G RPC so you're still going to have some sort of a client-server",
    "start": "1659010",
    "end": "1665970"
  },
  {
    "text": "interaction in play but that's your implementation decision and they can use them prior Thierry protocol pretty often",
    "start": "1665970",
    "end": "1672650"
  },
  {
    "text": "but that's still at play",
    "start": "1672650",
    "end": "1676429"
  },
  {
    "text": "brokered services some people just use them for absolutely everything they have it and they that's the only thing they",
    "start": "1677799",
    "end": "1682969"
  },
  {
    "text": "use they tend to be well suited though for one-way communication where you want something to be done you don't care how",
    "start": "1682969",
    "end": "1689299"
  },
  {
    "text": "long it takes or you don't care where it goes you just want it to be off your hands and so a lot of this the brokered",
    "start": "1689299",
    "end": "1695989"
  },
  {
    "text": "protocols provide pretty strong guarantees about it will be processed",
    "start": "1695989",
    "end": "1701450"
  },
  {
    "text": "once where it won't be lost or those sorts of things and that's some so that's sort of what the the broker is",
    "start": "1701450",
    "end": "1707359"
  },
  {
    "text": "providing is this gonna provide this persists persistence and make sure it gets done they're also pretty good for",
    "start": "1707359",
    "end": "1713329"
  },
  {
    "text": "for sort of multicasts where you've got so let's say an event you need to send it out lots of places there's lots of",
    "start": "1713329",
    "end": "1720019"
  },
  {
    "text": "Watchers for that are interested in that change you tend to use sort of broker for those exactly how the performance on",
    "start": "1720019",
    "end": "1728119"
  },
  {
    "text": "this operates well will vary greatly depending on the implementation and how you're using it though I really like",
    "start": "1728119",
    "end": "1735859"
  },
  {
    "text": "brokers they're great I think mainly they fall down if you're trying to use them very quest response because you",
    "start": "1735859",
    "end": "1741529"
  },
  {
    "text": "just end up paying so much costs you end up paying so many costs in order to that",
    "start": "1741529",
    "end": "1750289"
  },
  {
    "text": "you're not really getting much benefit from so now we're to rest this is",
    "start": "1750289",
    "end": "1757190"
  },
  {
    "text": "loosely object-oriented like there's a resource I see it has a URI and that looks like a reference",
    "start": "1757190",
    "end": "1764089"
  },
  {
    "text": "there's methods that I invoke on that resource I can pass in these references",
    "start": "1764089",
    "end": "1770629"
  },
  {
    "text": "I can return them and sometimes even though these references are used for security where there's a sort of magic",
    "start": "1770629",
    "end": "1776779"
  },
  {
    "text": "ugly random number at the end and someone knows oh you must have permission to access this however is a",
    "start": "1776779",
    "end": "1783649"
  },
  {
    "text": "little bit different because there's very few methods involved and so you tend to add more resources of like you",
    "start": "1783649",
    "end": "1789529"
  },
  {
    "text": "add a slash and then some sort of sub path in order to add more features to a particular resource where you use a",
    "start": "1789529",
    "end": "1795739"
  },
  {
    "text": "content type or you squirrel stuff away into the reset request itself in order to serve add more and more types of",
    "start": "1795739",
    "end": "1803389"
  },
  {
    "text": "operations there are IDL's for a rest although it's not as essential or",
    "start": "1803389",
    "end": "1809870"
  },
  {
    "text": "I hope it's becoming pretty common but it's not it's not always used and",
    "start": "1809870",
    "end": "1815720"
  },
  {
    "text": "interestingly there's no reference counting or there's no GC this means that there's that transient objects are",
    "start": "1815720",
    "end": "1821390"
  },
  {
    "text": "objects that last a very short period of time are very rare you tend to have a limit in the number of objects you can",
    "start": "1821390",
    "end": "1827240"
  },
  {
    "text": "have per account or each object costs something in order to force people in in",
    "start": "1827240",
    "end": "1832370"
  },
  {
    "text": "order to clean up after themselves so this is also a little bit of a side but",
    "start": "1832370",
    "end": "1837860"
  },
  {
    "text": "kubernetes actually uses rest for some of its stuff it does have a garbage collector but I'm going to just point",
    "start": "1837860",
    "end": "1844130"
  },
  {
    "text": "out use this to point out that resources turn out to be a little bit different than objects if you look at this garbage",
    "start": "1844130",
    "end": "1849169"
  },
  {
    "text": "collector it's got some configuration and bits to it and that's because",
    "start": "1849169",
    "end": "1855110"
  },
  {
    "text": "whenever you're dealing with resources the order of cleaning them up matters that they get cleaned up soon matters or",
    "start": "1855110",
    "end": "1861169"
  },
  {
    "text": "maybe it doesn't and so so there's some configuration here that you wouldn't normally see of just a memory based",
    "start": "1861169",
    "end": "1867289"
  },
  {
    "text": "garbage collector and there there are",
    "start": "1867289",
    "end": "1873110"
  },
  {
    "text": "some additional things on here let's see the I think what I'm going to",
    "start": "1873110",
    "end": "1879289"
  },
  {
    "text": "jump forward a little bit and talk about the OO though is mainly inside the application there it's the one that's",
    "start": "1879289",
    "end": "1886580"
  },
  {
    "text": "passing these references around they're not used too much by the system itself they are used for level seven routing",
    "start": "1886580",
    "end": "1893450"
  },
  {
    "text": "although there's some trickery to that they're also used for caching although that's mainly for proxies clients don't",
    "start": "1893450",
    "end": "1899809"
  },
  {
    "text": "typ typically cache too much unless you're talking browsers and some things like that so it's actually pretty",
    "start": "1899809",
    "end": "1905990"
  },
  {
    "text": "interesting that our PCs and rest aren't more different once you start looking at them and you can do some of the same",
    "start": "1905990",
    "end": "1911419"
  },
  {
    "text": "things that you do in rest in our pcs but really what turns out is there's a",
    "start": "1911419",
    "end": "1917630"
  },
  {
    "start": "1915000",
    "end": "1915000"
  },
  {
    "text": "lot of non-functional things as well there's how does the ecosystem how good how good is the implementation these",
    "start": "1917630",
    "end": "1923659"
  },
  {
    "text": "things actually have a very big much bigger impact than the actual protocol itself so while you're gonna be",
    "start": "1923659",
    "end": "1929390"
  },
  {
    "text": "interested in looking at all the functional things these end up deciding a lot whether make or break and for",
    "start": "1929390",
    "end": "1937909"
  },
  {
    "text": "example compatibility was a big problem with koruba and that's okay all right I think we're",
    "start": "1937909",
    "end": "1948240"
  },
  {
    "text": "sort of out of time that did go long longer than I hoped I wonder two questions first yeah are we",
    "start": "1948240",
    "end": "1957840"
  },
  {
    "text": "done yeah yeah we should have accounting for the smallest at the beginning house",
    "start": "1957840",
    "end": "1965190"
  },
  {
    "text": "give it four five minutes for questions I just make sure we keep it brief not a",
    "start": "1965190",
    "end": "1970230"
  },
  {
    "text": "big storytelling exercise hi my question",
    "start": "1970230",
    "end": "1981840"
  },
  {
    "text": "is around more specific to gr PC what's",
    "start": "1981840",
    "end": "1987210"
  },
  {
    "text": "the whole idea of deadlines in gr PC and with context to cloud services using gr",
    "start": "1987210",
    "end": "1997320"
  },
  {
    "text": "PC as a transport mechanism is that I'm just trying to ask you is it a way to",
    "start": "1997320",
    "end": "2003290"
  },
  {
    "text": "kind of like a fencing mechanism or protect protection mechanism to issue or",
    "start": "2003290",
    "end": "2009620"
  },
  {
    "text": "deadlines against RPC request coming inbound to the service yes so there's a",
    "start": "2009620",
    "end": "2015140"
  },
  {
    "text": "deadline to used a couple different places they're used on client in itself in order to sort of fail early if it",
    "start": "2015140",
    "end": "2021470"
  },
  {
    "text": "looks like it's not going well on the server it can be used to to",
    "start": "2021470",
    "end": "2027440"
  },
  {
    "text": "propagate like if you're just looking at client and server just that by itself it's like yeah not too interesting but",
    "start": "2027440",
    "end": "2033260"
  },
  {
    "text": "if you start looking at you've got a system and pretty much every server it turns out to be a client as well and so",
    "start": "2033260",
    "end": "2039080"
  },
  {
    "text": "being able to propagate the deadline from the original task you're trying to do which had some time all the way",
    "start": "2039080",
    "end": "2044780"
  },
  {
    "text": "through the system for all these my new little sub tasks passing that deadline arounds can be quite helpful so that",
    "start": "2044780",
    "end": "2052628"
  },
  {
    "text": "whenever let's say let's say it took too long all those tasks can be cleaned up and you can stop your work also let's",
    "start": "2052629",
    "end": "2059388"
  },
  {
    "text": "say the the deadline is too small you learn that you've got two microseconds",
    "start": "2059389",
    "end": "2065030"
  },
  {
    "text": "to do your operation you scoff and laugh you can quickly fail the the call without having to do a bunch of work",
    "start": "2065030",
    "end": "2073658"
  },
  {
    "text": "what do you think about Cap'n proto approach to job VC yeah so captain proto",
    "start": "2075970",
    "end": "2082610"
  },
  {
    "text": "didn't come in here it's gonna be more object-oriented it's also got things like the the futures future high point",
    "start": "2082610",
    "end": "2091070"
  },
  {
    "text": "high planning I've not used it heavily so I don't necessarily know how well it",
    "start": "2091070",
    "end": "2097610"
  },
  {
    "text": "works in practice I tend to favor simple systems that I can quickly I don't want",
    "start": "2097610",
    "end": "2105080"
  },
  {
    "text": "to be necessarily fighting the system I'm dealing with I want to be able to comprehend how the the communication is",
    "start": "2105080",
    "end": "2110660"
  },
  {
    "text": "working and so then the the the higher level I can understand the pieces how they're operating I think it's got some",
    "start": "2110660",
    "end": "2116630"
  },
  {
    "text": "interesting things but I can't really speak too much on it itself but I tend",
    "start": "2116630",
    "end": "2122570"
  },
  {
    "text": "to favor simple systems myself he's there a quick version of GRP see there",
    "start": "2122570",
    "end": "2129620"
  },
  {
    "text": "is a quick version of G RPC on some of the mobile platforms they are mainly",
    "start": "2129620",
    "end": "2135530"
  },
  {
    "text": "using the CRO net library which is Chrome's networking stack sort of turned into a library and so then you also need",
    "start": "2135530",
    "end": "2143750"
  },
  {
    "text": "a you typically have a quick proxy on the server side in order to turn it then back into something more HTTP 2 or",
    "start": "2143750",
    "end": "2150500"
  },
  {
    "text": "something like that it's there Mobile is where we've seen the most clamoring for",
    "start": "2150500",
    "end": "2156530"
  },
  {
    "text": "it and things like that yeah so that is the time box definitely feel free to",
    "start": "2156530",
    "end": "2162380"
  },
  {
    "text": "sync up potentially out in the hall or afterwards but otherwise it's all thank Eric for the talk",
    "start": "2162380",
    "end": "2167840"
  },
  {
    "text": "[Applause]",
    "start": "2167840",
    "end": "2174159"
  }
]