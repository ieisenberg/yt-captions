[
  {
    "text": "all right let's get started hey everyone everyone over there and all the way down there my name is Sophie Wigmore I'm a",
    "start": "1380",
    "end": "9000"
  },
  {
    "text": "maintainer on the picketto build packs project and also a member of technical staff at VMware",
    "start": "9000",
    "end": "14820"
  },
  {
    "text": "and I'm Frankie Galina Jones also a maintainer of paquetto build packs and an engineer at VMware",
    "start": "14820",
    "end": "21300"
  },
  {
    "text": "yeah so potato build packs are and it's an open source project and a part of the",
    "start": "21300",
    "end": "26340"
  },
  {
    "text": "growing Cloud native build packs community and picketta build packs are essentially a tool for containerizing",
    "start": "26340",
    "end": "32279"
  },
  {
    "text": "your applications in any language as an alternative to Docker files So today we're actually here to talk to you about",
    "start": "32279",
    "end": "38520"
  },
  {
    "text": "s-bombs though the software bill of materials because there's a lot of interest around them and people seem to",
    "start": "38520",
    "end": "43800"
  },
  {
    "text": "think that they really matter so over the past year we've been implementing features related to s-bombs in our build",
    "start": "43800",
    "end": "49440"
  },
  {
    "text": "packs and trying to answer their question now what so hopefully if you're here today you've",
    "start": "49440",
    "end": "56280"
  },
  {
    "text": "heard of the s-bomb before but if not we have a quote from the U.S cyber security and infrastructure security agency that",
    "start": "56280",
    "end": "63480"
  },
  {
    "text": "kind of sums up what we're talking about so a software bill of materials or s-bomb has emerged as a key building",
    "start": "63480",
    "end": "69299"
  },
  {
    "text": "block in software security and software supply chain risk management an s-bomb is a nested in inventory a",
    "start": "69299",
    "end": "76740"
  },
  {
    "text": "list of ingredients that make up software components so as you can see we have a picture of nutrition facts down",
    "start": "76740",
    "end": "82619"
  },
  {
    "text": "here and this is a comparison that we're going to come back to over and over again throughout this talk because it's",
    "start": "82619",
    "end": "88259"
  },
  {
    "text": "a pretty strong example of having a full manifestive information right alongside the contents of the thing that you're",
    "start": "88259",
    "end": "93780"
  },
  {
    "text": "interested in so this big U.S government agency has bothered defining s-bombs and s bomb",
    "start": "93780",
    "end": "101220"
  },
  {
    "text": "themed content as all of our blogs and new sites but why is there so much Buzz",
    "start": "101220",
    "end": "106740"
  },
  {
    "text": "yeah so the short answer here is that they're essential for supply chain risk",
    "start": "106740",
    "end": "112020"
  },
  {
    "text": "management right in recent years it's become increasingly clear that components inside of software can expose",
    "start": "112020",
    "end": "117720"
  },
  {
    "text": "that software and the orgs that make them to risks right one clear risk is",
    "start": "117720",
    "end": "122759"
  },
  {
    "text": "the risk of a vulnerable or malicious component making its way into a supply chain causing you problems there's also",
    "start": "122759",
    "end": "128580"
  },
  {
    "text": "the risk of litigation or you know legal action if you're using components that aren't properly licensed or not properly",
    "start": "128580",
    "end": "134700"
  },
  {
    "text": "attributing those components so these risks are serious you wouldn't want them",
    "start": "134700",
    "end": "139860"
  },
  {
    "text": "landing on your team or your organization so you might think that at this point s bonds are ubiquitous",
    "start": "139860",
    "end": "145319"
  },
  {
    "text": "adoption is happening across the board but if we look at the numbers we actually see that's not true",
    "start": "145319",
    "end": "152099"
  },
  {
    "text": "in fact in the 2021 anchor software supply chain report they found that only",
    "start": "152099",
    "end": "157200"
  },
  {
    "text": "25 of respondents said that they produce an s-bomb for the containerized apps they build and while the year 2022 has",
    "start": "157200",
    "end": "164459"
  },
  {
    "text": "kind of been the year of the s-bomb in a way adoption is still nowhere near 100 but interest is high so why is rollout",
    "start": "164459",
    "end": "172080"
  },
  {
    "text": "so slow we at paquetto build packs think there's a pretty good reason for that right now",
    "start": "172080",
    "end": "178440"
  },
  {
    "text": "software makers are trying to figure out how to keep delivering the software that they're great at delivering and also",
    "start": "178440",
    "end": "184019"
  },
  {
    "text": "deliver software bills of materials which is a completely separate thing with its own set of nuances right it's a",
    "start": "184019",
    "end": "190019"
  },
  {
    "text": "hard problem to solve in other words Engineers like you and me are asking now",
    "start": "190019",
    "end": "195599"
  },
  {
    "text": "what about a year ago paquero build pack started to see growing demand for s-bombs from our users these are people",
    "start": "195599",
    "end": "201900"
  },
  {
    "text": "who are containerizing their source code using build packs and so we wanted to provide us-bomb",
    "start": "201900",
    "end": "207900"
  },
  {
    "text": "automatic generation as a feature and so we were left asking ourselves now what what would it actually mean to produce",
    "start": "207900",
    "end": "214620"
  },
  {
    "text": "something useful for our stakeholders and our users stakeholders",
    "start": "214620",
    "end": "220819"
  },
  {
    "text": "yeah so the questions that were made to be answered here are how can I actually adopt this for my project how can we",
    "start": "221280",
    "end": "227879"
  },
  {
    "text": "meet expectations of our consumers as it comes to s-bombs and how can we make sure we're just meeting best practices",
    "start": "227879",
    "end": "233940"
  },
  {
    "text": "in the industry so in our exploration of this topic at paquetto we found it easiest to understand the how by",
    "start": "233940",
    "end": "240239"
  },
  {
    "text": "breaking it down into five smaller sub-problems why what who where and when and the why is already pretty well",
    "start": "240239",
    "end": "246599"
  },
  {
    "text": "understood there's tons of research in these articles on this subject already so throughout the course of this talk",
    "start": "246599",
    "end": "251819"
  },
  {
    "text": "we're going to break down the remaining questions and try and provide some examples of how we've tried to answer",
    "start": "251819",
    "end": "256859"
  },
  {
    "text": "those questions in our implementation at picketto build packs so the first question on our list is what constitutes",
    "start": "256859",
    "end": "263880"
  },
  {
    "text": "a useful s-bomb s-bomb is kind of a catch-all term once you start looking into it that encompasses a number of",
    "start": "263880",
    "end": "270479"
  },
  {
    "text": "different formats schemas data fields and use cases so what constitutes as",
    "start": "270479",
    "end": "275580"
  },
  {
    "text": "useful will definitely differ depending on who you ask",
    "start": "275580",
    "end": "280620"
  },
  {
    "text": "our super important clarification to make when we're talking about what's in an s-bomb is that it's not just an",
    "start": "280620",
    "end": "286620"
  },
  {
    "text": "enumeration of vulnerable packages it's a full list of ingredients identifying vulnerable components is one use of",
    "start": "286620",
    "end": "293940"
  },
  {
    "text": "s-bombs but there are very many others and these ideas are often conflated so if you're not careful about what you",
    "start": "293940",
    "end": "300419"
  },
  {
    "text": "actually include in your s-bomb vulnerability scanners might not even be able to actually identify your packages",
    "start": "300419",
    "end": "305759"
  },
  {
    "text": "because there's so many different ways to do that and other stakeholders might not be able to get value from the s-bombs if they have different use cases",
    "start": "305759",
    "end": "313740"
  },
  {
    "text": "yeah so to put a finer point on this ambiguity about us bombs we're going to show a concrete example here side by",
    "start": "313740",
    "end": "320639"
  },
  {
    "text": "side we've got two entities that can both be reasonably called a cyclone DX software build materials for an",
    "start": "320639",
    "end": "326160"
  },
  {
    "text": "extremely simple node application if you've never heard of cyclone DX for now just know that it's a spec for writing",
    "start": "326160",
    "end": "333539"
  },
  {
    "text": "s-bombs and both of these documents Implement that spec we'll talk a bit more about CDX later",
    "start": "333539",
    "end": "339539"
  },
  {
    "text": "so the first thing to notice about these two documents right is that the one on the left is XML and the one on the right",
    "start": "339539",
    "end": "345120"
  },
  {
    "text": "is Json obviously both machine readable formats but your Downstream consumers",
    "start": "345120",
    "end": "350280"
  },
  {
    "text": "may not be equally able to consume both of these important to get clear about what they're expecting in this case",
    "start": "350280",
    "end": "357360"
  },
  {
    "text": "secondly if we look a little closer we notice that the one on the left implements version 1.4 of the CDX spec",
    "start": "357360",
    "end": "363900"
  },
  {
    "text": "and the one on the right implements version 1.3 as December versioning indicates",
    "start": "363900",
    "end": "369120"
  },
  {
    "text": "theoretically 1.4 is Backward Compatible but in practice Downstream consumers may",
    "start": "369120",
    "end": "375060"
  },
  {
    "text": "not be equally able to consume both of these so again getting clear about this distinction will help you in the long",
    "start": "375060",
    "end": "380820"
  },
  {
    "text": "run and lastly possibly most glaringly we notice that on the left there's a very",
    "start": "380820",
    "end": "388080"
  },
  {
    "text": "minimal package information for the remapping package that's shown in the s-bomb whereas on the right we have much",
    "start": "388080",
    "end": "394380"
  },
  {
    "text": "more Rich package information on the left this is the minimum required data",
    "start": "394380",
    "end": "399419"
  },
  {
    "text": "fields for representing a package like this in the CDX spec you might notice",
    "start": "399419",
    "end": "405180"
  },
  {
    "text": "that it doesn't even contain the version of the package in question which is a vital piece of information for just",
    "start": "405180",
    "end": "411060"
  },
  {
    "text": "about anything whereas on the right we not only have a version but we also have a couple of ways of uniquely identifying",
    "start": "411060",
    "end": "417180"
  },
  {
    "text": "the package and some extras like the name of the file from which that",
    "start": "417180",
    "end": "423419"
  },
  {
    "text": "dependency was installed which is useful for tracking down how something vulnerable or out of compliance made its",
    "start": "423419",
    "end": "429180"
  },
  {
    "text": "way into your app so all that is to say it's really easy to not be talking about the same thing",
    "start": "429180",
    "end": "435060"
  },
  {
    "text": "with your stakeholders when it comes to us bombs so figuring out the answer to the question what constitutes a useful",
    "start": "435060",
    "end": "441300"
  },
  {
    "text": "s-bomb can vary very much depending on who you ask that perfectly leads us into our next",
    "start": "441300",
    "end": "448319"
  },
  {
    "text": "question who wants s-bombs this phase involves discovering who your stakeholders are and understanding their",
    "start": "448319",
    "end": "454500"
  },
  {
    "text": "use cases and this might seem like a pretty simple and obvious task and question to ask but spending time here",
    "start": "454500",
    "end": "460979"
  },
  {
    "text": "is really important and will save you a lot of time in the long run as we've learned this is a really rapidly",
    "start": "460979",
    "end": "466020"
  },
  {
    "text": "changing ecosystem with new standards coming out constantly tons of use cases that have plenty of Interest so",
    "start": "466020",
    "end": "472560"
  },
  {
    "text": "understanding the full scope of your stakeholders will make the rest of your s-bomb adoption process much smoother",
    "start": "472560",
    "end": "479580"
  },
  {
    "text": "so the entire question of who wants s-bombs is meant to inform our earlier question of what that has problem should",
    "start": "479580",
    "end": "485460"
  },
  {
    "text": "actually look like so that's why it's very important to be aware of the different nuances of the options that we",
    "start": "485460",
    "end": "491160"
  },
  {
    "text": "have in this space there are a few top level categories that we're going to focus on where you'll need to meet choices schema data values and formats",
    "start": "491160",
    "end": "500400"
  },
  {
    "text": "so from this visual above you can see that there are plenty of choices to be made depending on your stakeholders some",
    "start": "500400",
    "end": "505979"
  },
  {
    "text": "having different strengths and weaknesses depending on your use case so a few examples if your stakeholders are",
    "start": "505979",
    "end": "512279"
  },
  {
    "text": "interested in licensed compliance auditing use cases for their s-bombs you might choose spdx as your s-bomb schema",
    "start": "512279",
    "end": "518459"
  },
  {
    "text": "because it's ideal for complex license information you still want to align with them about",
    "start": "518459",
    "end": "523919"
  },
  {
    "text": "the format that they expected in because depending on how they plan to consume the s-bomb it will matter if it's in",
    "start": "523919",
    "end": "530640"
  },
  {
    "text": "Json or XML or another format another major use case that we already talked about is vulnerability scanning in that",
    "start": "530640",
    "end": "537300"
  },
  {
    "text": "case you might want to use Cyclone DX because it has flexible support for a number of different dative fields",
    "start": "537300",
    "end": "542880"
  },
  {
    "text": "especially relating to package identification we have package URLs pearls cpes and Swig tags which are all",
    "start": "542880",
    "end": "551040"
  },
  {
    "text": "different ways of identifying your packages which then can be used for vulnerability identification",
    "start": "551040",
    "end": "557880"
  },
  {
    "text": "finally a third and final use case that we'll talk about is that people might just want to use s-bombs for looking at",
    "start": "557880",
    "end": "564420"
  },
  {
    "text": "dependency drift in their applications in this case they might not even care about the schema that their s-bomb is",
    "start": "564420",
    "end": "569700"
  },
  {
    "text": "provided in as long as it's you know maybe it's human readable maybe that's what they need um and as long as it includes versions",
    "start": "569700",
    "end": "576899"
  },
  {
    "text": "or checks some information for chain of custody concerns that might be what you need in that case so conversion between",
    "start": "576899",
    "end": "583860"
  },
  {
    "text": "these different schemas can also be lossy at this point depending on how you generate your s-bombs so you definitely",
    "start": "583860",
    "end": "589920"
  },
  {
    "text": "need to nail down your needs ahead of time so you can provide the richest information possible",
    "start": "589920",
    "end": "596580"
  },
  {
    "text": "answering these questions in paquetto build packs was pretty challenging because we have a very broad array of",
    "start": "596580",
    "end": "602760"
  },
  {
    "text": "Downstream consumers so for that reason we support three different schemas as PDX sift and Cyclone DX and we cast kind",
    "start": "602760",
    "end": "610200"
  },
  {
    "text": "of a wider net in what our stakeholders might need we know that vulnerability scanning is a major use case for our customers so",
    "start": "610200",
    "end": "616980"
  },
  {
    "text": "package URLs and cpes are certainly present in our s-bombs and another major requirement that we had was stable",
    "start": "616980",
    "end": "623580"
  },
  {
    "text": "schema versions so our Downstream consumers need to reliably be able to consume documents without fear of",
    "start": "623580",
    "end": "629760"
  },
  {
    "text": "incompatibilities with new schema bumps that come out we support older schema",
    "start": "629760",
    "end": "634980"
  },
  {
    "text": "versions as well as some of the newer ones as they come out another primary concern that we focus on",
    "start": "634980",
    "end": "640680"
  },
  {
    "text": "trying to solve was all the different languages that we support in the packetto build packs project you might",
    "start": "640680",
    "end": "646500"
  },
  {
    "text": "recall that we said picketto build packs containerized applications in a number of different languages that because of",
    "start": "646500",
    "end": "652440"
  },
  {
    "text": "that it meant that we had to consider a solution for the s-bomb that could glean information from a number of different",
    "start": "652440",
    "end": "659220"
  },
  {
    "text": "package types like nuget packages Maven packages known modules so many more so",
    "start": "659220",
    "end": "664560"
  },
  {
    "text": "all of these different requirements that we had from our stakeholders informed our final solution",
    "start": "664560",
    "end": "670760"
  },
  {
    "text": "so for build pack specifically we ended up using encore's s-spomb generator tool",
    "start": "670860",
    "end": "676019"
  },
  {
    "text": "sift as a library within the build pack code to generate the s-bombs we opted for this approach because one sift is",
    "start": "676019",
    "end": "682380"
  },
  {
    "text": "kind of the expert Over Us in generating s-bombs and then also they generate",
    "start": "682380",
    "end": "687480"
  },
  {
    "text": "s-bombs in all of the formats that we were interested in and had language support for all the languages that we",
    "start": "687480",
    "end": "693000"
  },
  {
    "text": "support in the project once you understand what an s-bomb looks like for your users we recommend finding",
    "start": "693000",
    "end": "700140"
  },
  {
    "text": "performance software to be the experts in generating your s-bombs as well s-bomb generation is pretty difficult",
    "start": "700140",
    "end": "706800"
  },
  {
    "text": "and there are plenty of amazing open source tools out there to do this for you and for that for us that was sift",
    "start": "706800",
    "end": "714480"
  },
  {
    "text": "so just to put this concretely we are going to show a quick demo of how we generate s-bombs for our stakeholders",
    "start": "714480",
    "end": "721519"
  },
  {
    "text": "alongside containerizing your application using piketo build packs so I'm going to show a couple quick demo",
    "start": "721519",
    "end": "728519"
  },
  {
    "text": "videos we'll see how this goes because the screens are quite far away",
    "start": "728519",
    "end": "733459"
  },
  {
    "text": "all right so here we have a very simple react app that we're going to containerize with build packs",
    "start": "741120",
    "end": "748079"
  },
  {
    "text": "and we are going to use the paxioli which is an upstream tool from the cloud native build packs projects to",
    "start": "748079",
    "end": "754620"
  },
  {
    "text": "orchestrate our build packs here we are specifying the name as front end nginx we're specifying a few build packs that",
    "start": "754620",
    "end": "761160"
  },
  {
    "text": "we want to use and then most importantly at the bottom we're specifying s-bomb output directory that we want to tell",
    "start": "761160",
    "end": "767639"
  },
  {
    "text": "the Pax CLI to dump all of our s-bomb documents into when we're done",
    "start": "767639",
    "end": "773600"
  },
  {
    "text": "okay so now we're going to let the build run we've sped it up a little bit for the purposes of getting this demo done on",
    "start": "779040",
    "end": "786000"
  },
  {
    "text": "time but we're installing different things here you can see we're using the npm install build pack from paquetto and",
    "start": "786000",
    "end": "792120"
  },
  {
    "text": "we're generating an s-bomb for all of those different node modules that we're installing with that build pack additionally we're installing other",
    "start": "792120",
    "end": "798360"
  },
  {
    "text": "things during the build like nginx configuring it and generating a related s-bomb",
    "start": "798360",
    "end": "805560"
  },
  {
    "text": "so we've really glossed over the build here if people have questions about the build side of things we can answer any",
    "start": "805560",
    "end": "811680"
  },
  {
    "text": "questions during the bill during the Q a",
    "start": "811680",
    "end": "815660"
  },
  {
    "text": "so at this point we have our image and we can just run it and make sure that the build succeeded and we're seeing",
    "start": "820560",
    "end": "826079"
  },
  {
    "text": "what we would expect so we can run it locally hit the endpoint and just see that we have our app running yay that's",
    "start": "826079",
    "end": "833639"
  },
  {
    "text": "the magic filled packs right there um but more importantly in this case we can look at the s-bomb output directory",
    "start": "833639",
    "end": "840899"
  },
  {
    "text": "that we specified",
    "start": "840899",
    "end": "843560"
  },
  {
    "text": "right so here you can see the S1 output directory and it is a nested directory",
    "start": "857639",
    "end": "863279"
  },
  {
    "text": "structure of all of the s-bomb documents that we generated during the build so there's three different formats like we",
    "start": "863279",
    "end": "868740"
  },
  {
    "text": "said Cyclone DX spdx and sift schema s-bombs and they are arranged by the",
    "start": "868740",
    "end": "876180"
  },
  {
    "text": "build packs that generated them so each of the individual processes that contribute something to your final application image have s-bomb",
    "start": "876180",
    "end": "883019"
  },
  {
    "text": "directories here",
    "start": "883019",
    "end": "885920"
  },
  {
    "text": "now we can just take a quick look at a another a single s-bomb entry inside and",
    "start": "893160",
    "end": "899399"
  },
  {
    "text": "have a look at what that contains so this is the npm install s-bomb and it",
    "start": "899399",
    "end": "905040"
  },
  {
    "text": "contains a bunch of Json entries for the node modules that we installed and then we can take a slightly closer look at a",
    "start": "905040",
    "end": "910740"
  },
  {
    "text": "single entry within that s-bomb so here we have one for I think the remapping package I can't quite see but it as we",
    "start": "910740",
    "end": "917040"
  },
  {
    "text": "see it contains a whole bunch of different metadata for the node modules that we installed during the build and",
    "start": "917040",
    "end": "922920"
  },
  {
    "text": "then in a couple minutes we'll take a little bit of a closer look and see all the different fields in a comparison of",
    "start": "922920",
    "end": "929760"
  },
  {
    "text": "an s-bomb in another language great so",
    "start": "929760",
    "end": "935399"
  },
  {
    "text": "as we mentioned before piketo supports a lot of languages so we're going to show you a kind of similar example but with a",
    "start": "935399",
    "end": "941399"
  },
  {
    "text": "completely different language ecosystem here we're going to be showing you a simple python app that uses pip for",
    "start": "941399",
    "end": "947040"
  },
  {
    "text": "package management to build a flask server and serve the piketto logo so as before",
    "start": "947040",
    "end": "954980"
  },
  {
    "text": "let's see oh you made this look easy Sophie okay",
    "start": "955260",
    "end": "960480"
  },
  {
    "text": "um great so as we can see our simple python app we're going to use the paxili once again to run a build this time with",
    "start": "960480",
    "end": "967260"
  },
  {
    "text": "the python build pack and again notice we're using that s-pom output directory that'll put the s-bombs on our local",
    "start": "967260",
    "end": "972899"
  },
  {
    "text": "file system we kick off the build and the build packs start doing their thing which in",
    "start": "972899",
    "end": "979920"
  },
  {
    "text": "this case includes running the C python build pack that installs the python runtime",
    "start": "979920",
    "end": "985500"
  },
  {
    "text": "and generating an s-bomb for that python runtime also generating an s-bomb for pip which",
    "start": "985500",
    "end": "993300"
  },
  {
    "text": "also needs to be present in the build container and then running pip install and generating an s-bomb for the packages that were installed during that",
    "start": "993300",
    "end": "1000079"
  },
  {
    "text": "process as well then we then we wrap up the build and uh",
    "start": "1000079",
    "end": "1006199"
  },
  {
    "text": "we've got uh containerized out so again",
    "start": "1006199",
    "end": "1012279"
  },
  {
    "text": "we can run it just to confirm that it's actually doing what we said it would",
    "start": "1012860",
    "end": "1018380"
  },
  {
    "text": "there you go kettlebell packs great so let's take a closer look at that as bomb output directory",
    "start": "1018380",
    "end": "1026438"
  },
  {
    "text": "once again you'll see that nested directory structure where each directory corresponds to one of the steps in the",
    "start": "1033319",
    "end": "1038959"
  },
  {
    "text": "build process so you've got a nice separation of concerns and if we take a closer look at",
    "start": "1038959",
    "end": "1044000"
  },
  {
    "text": "just one of those the one for the PIP packages",
    "start": "1044000",
    "end": "1048220"
  },
  {
    "text": "we can see again several of the packages including gunacorn and then taking a closer look at just",
    "start": "1053419",
    "end": "1059240"
  },
  {
    "text": "one artifact from this Sif formatted s-bomb we see the floss package with a",
    "start": "1059240",
    "end": "1065660"
  },
  {
    "text": "bunch of relevant metadata so let's take a closer look at that metadata",
    "start": "1065660",
    "end": "1073640"
  },
  {
    "text": "cool um so here on the left you can see that sort of zoomed in view of just one",
    "start": "1076220",
    "end": "1082580"
  },
  {
    "text": "dependency from the python app and on the right that remapping package again from the react app",
    "start": "1082580",
    "end": "1088520"
  },
  {
    "text": "off the bat that we can see first of all that these documents look very similar so if you're trying to manage s-bombs",
    "start": "1088520",
    "end": "1094820"
  },
  {
    "text": "across your organization and you work with a bunch of different languages we've already got you know potentially",
    "start": "1094820",
    "end": "1100700"
  },
  {
    "text": "mergeable and comparable uh us bombs Happening Here we can also notice that as we mentioned",
    "start": "1100700",
    "end": "1107539"
  },
  {
    "text": "before we have cpes and Pearls two unique package identifiers that are quite relevant to our stakeholders for",
    "start": "1107539",
    "end": "1113679"
  },
  {
    "text": "vulnerability identification and we've also got license information for this react package that's something that",
    "start": "1113679",
    "end": "1120200"
  },
  {
    "text": "stiff supports right now not quite there yet for pit packages but that's an expansion point for sift",
    "start": "1120200",
    "end": "1126500"
  },
  {
    "text": "and lastly we've got a little bit extra that's not part of some of the specs",
    "start": "1126500",
    "end": "1132620"
  },
  {
    "text": "which is the package manager or package ecosystem where the package came from and the file where the package is",
    "start": "1132620",
    "end": "1140900"
  },
  {
    "text": "enumerated in the source code so as these examples hopefully show we",
    "start": "1140900",
    "end": "1147320"
  },
  {
    "text": "try to generate useful s-bombs for all the different languages that we support in the project so at this point we've",
    "start": "1147320",
    "end": "1152660"
  },
  {
    "text": "got s-bombs yay mission accomplished but unfortunately even though it feels like we've done the bulk of the work at this",
    "start": "1152660",
    "end": "1158960"
  },
  {
    "text": "point um we still have two pretty important concerns left to address so the first of these is where should the s balance be",
    "start": "1158960",
    "end": "1165320"
  },
  {
    "text": "stored once they're generated so a key stepping stone in espalm consumption and adoption is convenience",
    "start": "1165320",
    "end": "1172400"
  },
  {
    "text": "of access making the wear very important creating quality s-bombs is great but",
    "start": "1172400",
    "end": "1177679"
  },
  {
    "text": "it's not that helpful if they're really difficult to access going back to our earlier example of ingredients and",
    "start": "1177679",
    "end": "1183260"
  },
  {
    "text": "nutrition facts it's pretty easy just turn a can around and get the information that you need and much more difficult to get that information if",
    "start": "1183260",
    "end": "1189679"
  },
  {
    "text": "it's separated and located somewhere else so a key part of figuring out where to store your s-bomb is coming into an",
    "start": "1189679",
    "end": "1195980"
  },
  {
    "text": "alignment with where consumers expect to reasonably find their s-bomb documents persisting s-bomb documents directly",
    "start": "1195980",
    "end": "1202340"
  },
  {
    "text": "alongside the image it was generated for is generally a pretty good practice ensuring that you can retrieve them easily with your corresponding artifact",
    "start": "1202340",
    "end": "1209299"
  },
  {
    "text": "artifact so in the example we showed just now we",
    "start": "1209299",
    "end": "1215059"
  },
  {
    "text": "use build packs with a Pax CLI to Output an oci image on your local Docker demon",
    "start": "1215059",
    "end": "1220460"
  },
  {
    "text": "we also dumped all of the build pack generated s-bomb documents directly onto your local file system so at this point",
    "start": "1220460",
    "end": "1228020"
  },
  {
    "text": "normally you would probably publish your oci images to a registry and you'll need to do something similar with your s-bomb",
    "start": "1228020",
    "end": "1234740"
  },
  {
    "text": "content ideally you'll store these together or if they're separate you'll have a way to associate them",
    "start": "1234740",
    "end": "1240500"
  },
  {
    "text": "this question of how to store your s-bombs is a little bit out of scope for the build packs because we're in the",
    "start": "1240500",
    "end": "1246740"
  },
  {
    "text": "business of giving people images but we still wanted to bring up the question of where to store them because it's an",
    "start": "1246740",
    "end": "1252620"
  },
  {
    "text": "important part of the s bomb adoption process great so surely now we're done right",
    "start": "1252620",
    "end": "1260299"
  },
  {
    "text": "we've generated us bombs we've come to an agreement with our stakeholders about what's in them and where they can find them",
    "start": "1260299",
    "end": "1267260"
  },
  {
    "text": "but no of course if you've been playing along you notice that there is one question left unanswered and this one is",
    "start": "1267260",
    "end": "1273380"
  },
  {
    "text": "a new one nuanced but important one to consider and that is when should s-bombs",
    "start": "1273380",
    "end": "1279080"
  },
  {
    "text": "be generated in order to understand why we're even bothering to ask it's useful to motivate",
    "start": "1279080",
    "end": "1284179"
  },
  {
    "text": "why this matters in other words what could change depending on when you generate an s-bomb",
    "start": "1284179",
    "end": "1292179"
  },
  {
    "text": "so here to quote from anchors 2022 white paper the software bill of materials and its role in cyber security",
    "start": "1292280",
    "end": "1299539"
  },
  {
    "text": "the use of s-bombs for containerized applications provides a unique opportunity to watch for s-bomb drift",
    "start": "1299539",
    "end": "1306460"
  },
  {
    "text": "unexpected changes in the contents of a software application which can indicate potential tampering new versions or",
    "start": "1306460",
    "end": "1313100"
  },
  {
    "text": "changes in dependencies generating an s-bomb creates a snapshot of the components of your container at a",
    "start": "1313100",
    "end": "1320059"
  },
  {
    "text": "specific time during the development process by generating an s-bomb for each build and at each step in the",
    "start": "1320059",
    "end": "1326480"
  },
  {
    "text": "development process you can look for differences over time some of those differences might be",
    "start": "1326480",
    "end": "1332120"
  },
  {
    "text": "expected but any changes should be investigated to determine if they introduce new risk",
    "start": "1332120",
    "end": "1337700"
  },
  {
    "text": "so with that being said it comes into view that when we ask when we're sort of talking about a bunch of wins ideally",
    "start": "1337700",
    "end": "1344299"
  },
  {
    "text": "multiple snapshots throughout development so when might be a good time to take a snapshot perhaps most",
    "start": "1344299",
    "end": "1351200"
  },
  {
    "text": "obviously you can scan your oci image to generate an s-bomb when it's pushed into",
    "start": "1351200",
    "end": "1357080"
  },
  {
    "text": "your registry ready to run in prod let's say that seems pretty reasonable you know it's asking what's in this right",
    "start": "1357080",
    "end": "1362419"
  },
  {
    "text": "before you take the first byte but for a hardened production image there might not be very much in the",
    "start": "1362419",
    "end": "1369500"
  },
  {
    "text": "image that's worth providing an s-bomb for as many of us probably know it's a best",
    "start": "1369500",
    "end": "1375679"
  },
  {
    "text": "practice to include as few things as possible in your running app image in prod right fewer packages and extraneous",
    "start": "1375679",
    "end": "1382880"
  },
  {
    "text": "things and image means fewer attack vectors you can achieve these minimal images with you know your well-written",
    "start": "1382880",
    "end": "1388880"
  },
  {
    "text": "multi-stage Docker file you can also use paquetto build packs that'll handle it automatically but bear in mind that when",
    "start": "1388880",
    "end": "1395000"
  },
  {
    "text": "you scan a minimal image to generate an s-bomb you may get back a minimal amount",
    "start": "1395000",
    "end": "1400100"
  },
  {
    "text": "of information right a component that could still impact the security or compliance posture of your application",
    "start": "1400100",
    "end": "1406100"
  },
  {
    "text": "may have already flooded the scene of the crime so with that being said also probably",
    "start": "1406100",
    "end": "1411500"
  },
  {
    "text": "reasonable to scan your source code right before you compile things down before you clean things up you can scan",
    "start": "1411500",
    "end": "1418280"
  },
  {
    "text": "source code and identify packages from things like a package.json a requirements.txt",
    "start": "1418280",
    "end": "1424159"
  },
  {
    "text": "but there's still a crucial step in the development process that is not covered the container build itself",
    "start": "1424159",
    "end": "1430880"
  },
  {
    "text": "to see why this matters let's return briefly to the food analogy suppose that I have a serious peanut allergy right",
    "start": "1430880",
    "end": "1436820"
  },
  {
    "text": "I'm definitely going to care if there's peanuts in the food I'm eating right the oci image I'm also probably going to",
    "start": "1436820",
    "end": "1444080"
  },
  {
    "text": "care if there are peanuts as the raw materials going into the thing I'm eating the source code",
    "start": "1444080",
    "end": "1449900"
  },
  {
    "text": "but if my allergy is severe enough I'll also certainly care if the facility",
    "start": "1449900",
    "end": "1455000"
  },
  {
    "text": "where my food was made processes peanuts right a contaminant can be introduced in the preparation process itself",
    "start": "1455000",
    "end": "1462320"
  },
  {
    "text": "the same holds true when you're containerizing applications a lot can happen in the time between taking source",
    "start": "1462320",
    "end": "1468380"
  },
  {
    "text": "code and turning it into a final app image if you've ever written a Docker file of any complexity you know this to",
    "start": "1468380",
    "end": "1474440"
  },
  {
    "text": "be true right a compiler or a transpiler could be used in your Docker file that's not checked in to your source code and",
    "start": "1474440",
    "end": "1481400"
  },
  {
    "text": "not in your final app image how will you know if that's exposing you to a vulnerability alternately a bad actor",
    "start": "1481400",
    "end": "1487820"
  },
  {
    "text": "can inject source code or dependencies into your build container contaminating source code that you thought was",
    "start": "1487820",
    "end": "1494240"
  },
  {
    "text": "otherwise safe to use or fully accounted for so now Sophie's going to show us a",
    "start": "1494240",
    "end": "1499520"
  },
  {
    "text": "concrete example using our react app from earlier that demonstrates how s volumes generated during a build can",
    "start": "1499520",
    "end": "1505700"
  },
  {
    "text": "reveal vulnerabilities that you would otherwise Miss by just scanning the oci image at the end",
    "start": "1505700",
    "end": "1512440"
  },
  {
    "text": "cool yeah so we're going to revisit that final app image that we generated in the first case study for our react",
    "start": "1513500",
    "end": "1519260"
  },
  {
    "text": "application and here we're just going to run the six CLI on that final app image",
    "start": "1519260",
    "end": "1525260"
  },
  {
    "text": "oh so we're not using any of the s-bombs generated in the build pack build here",
    "start": "1525260",
    "end": "1531460"
  },
  {
    "text": "so here we are running the sift CLI on that final app image and we'll let it go",
    "start": "1536000",
    "end": "1543700"
  },
  {
    "text": "it's found a few packages and we see that it's output a document in our file system and we can take a look looks like",
    "start": "1546260",
    "end": "1552559"
  },
  {
    "text": "a data on file great and we can use a clever little just JQ command to figure",
    "start": "1552559",
    "end": "1558500"
  },
  {
    "text": "out how many npm packages are in that s-bomb",
    "start": "1558500",
    "end": "1563140"
  },
  {
    "text": "and there are none we can repeat the same experiment just for Debian packages for example and we see that there are",
    "start": "1564980",
    "end": "1571640"
  },
  {
    "text": "tons found and you know that kind of makes sense because during the build we transpiled our JavaScript code into",
    "start": "1571640",
    "end": "1577820"
  },
  {
    "text": "static assets and then they no longer need access to node modules so the build packs clean them up we have a minimal",
    "start": "1577820",
    "end": "1583640"
  },
  {
    "text": "final application image and because of that there's no way an s-bomb generator could pick up any node modules if",
    "start": "1583640",
    "end": "1589940"
  },
  {
    "text": "they're just simply not on the final application image",
    "start": "1589940",
    "end": "1594158"
  },
  {
    "text": "so we can run the same little experiment on one of the build packs generated s-bombs no surprise is really here we",
    "start": "1598520",
    "end": "1604880"
  },
  {
    "text": "can look at the npm install s-bomb again and run the same commands",
    "start": "1604880",
    "end": "1610658"
  },
  {
    "text": "and we see that there are tons of npm packages node modules found in that s-bomb and when we look at the Debian",
    "start": "1612080",
    "end": "1618080"
  },
  {
    "text": "packages we unsurprisingly see that there are none and that makes sense right our we have an s-bomb just",
    "start": "1618080",
    "end": "1625100"
  },
  {
    "text": "dedicated to the npm packages that get installed during your build and there's a separation of concerns so that s-bomb",
    "start": "1625100",
    "end": "1631279"
  },
  {
    "text": "only contains those packages",
    "start": "1631279",
    "end": "1634720"
  },
  {
    "text": "just to take it all the way home here uh we can also use the s-bombs for some of the use cases that we mentioned earlier",
    "start": "1637220",
    "end": "1643279"
  },
  {
    "text": "so here we just have a screenshot of using the gripe uh vulnerability scanner from Encore and we're using that on the",
    "start": "1643279",
    "end": "1650059"
  },
  {
    "text": "npm install s-bomb that we had so here you can see that we had found a bunch of npn packages and they had a",
    "start": "1650059",
    "end": "1657320"
  },
  {
    "text": "bunch of CVS in them including some that are critical and high so if you had just scanned your final application image you",
    "start": "1657320",
    "end": "1663500"
  },
  {
    "text": "might not have gotten that information so that's kind of why it's pretty important to be collecting this",
    "start": "1663500",
    "end": "1668539"
  },
  {
    "text": "information as you go along and just to tie it back also to all of",
    "start": "1668539",
    "end": "1674720"
  },
  {
    "text": "the s-bombs that we generate you can see here that we have s-bomb entries for node which is what we installed with the",
    "start": "1674720",
    "end": "1680840"
  },
  {
    "text": "node engine build pack during the build as well as nginx which we installed with the nginx build pack and neither one of",
    "start": "1680840",
    "end": "1687620"
  },
  {
    "text": "these things would potentially show up in the source code of your application so it's pretty important that the build",
    "start": "1687620",
    "end": "1693860"
  },
  {
    "text": "packs generate an s-bomb for every single thing that gets installed during your build there's no way for absolutely",
    "start": "1693860",
    "end": "1699440"
  },
  {
    "text": "anything to make it into your image without having it automatically generated s-bomb for it",
    "start": "1699440",
    "end": "1706600"
  },
  {
    "text": "yeah so as that example just showed it's pretty key to generate us bombs at each step in the development process",
    "start": "1707720",
    "end": "1713860"
  },
  {
    "text": "including the non-trivial container build step as our demo showed the keto build packs",
    "start": "1713860",
    "end": "1720200"
  },
  {
    "text": "is one way to help achieve s-bomb coverage at that crucial step giving you coverage across every step in the",
    "start": "1720200",
    "end": "1726679"
  },
  {
    "text": "development process so to summarize when you came into this",
    "start": "1726679",
    "end": "1731960"
  },
  {
    "text": "talk you probably had some sense that s-bombs are important you chose to show up and over the course of the talk",
    "start": "1731960",
    "end": "1737779"
  },
  {
    "text": "you've seen the key considerations that we a picetto build packs bore in mind when we were figuring out how to",
    "start": "1737779",
    "end": "1743179"
  },
  {
    "text": "generate useful s-bombs for our stakeholders at every stage of the development process including during",
    "start": "1743179",
    "end": "1749240"
  },
  {
    "text": "container builds you can use these same five considerations as a guide when you're determining the appropriate s-bomb",
    "start": "1749240",
    "end": "1755779"
  },
  {
    "text": "strategy for your product or organization or if the examples that we've shown here resonate for you you",
    "start": "1755779",
    "end": "1762679"
  },
  {
    "text": "can use open source paquetto build packs to help meet your s-bomb needs during the container build phase of the",
    "start": "1762679",
    "end": "1768620"
  },
  {
    "text": "software supply chain so with that thank you for your time and we'll take",
    "start": "1768620",
    "end": "1773659"
  },
  {
    "text": "any questions [Applause]",
    "start": "1773659",
    "end": "1784820"
  },
  {
    "text": "yeah Ryan can bring you a microphone if you want",
    "start": "1784820",
    "end": "1790778"
  },
  {
    "text": "how long did this take to implement sift and all that into the end to end I mean",
    "start": "1796460",
    "end": "1801919"
  },
  {
    "text": "we went through a variety of iterations because perhaps unsurprisingly early on",
    "start": "1801919",
    "end": "1807500"
  },
  {
    "text": "we were kind of like right at the bleeding edge of doing something about us bombs so the non-linear path of",
    "start": "1807500",
    "end": "1814039"
  },
  {
    "text": "arriving at desolation has taken like over a year I would say um yeah like one of the first things",
    "start": "1814039",
    "end": "1820100"
  },
  {
    "text": "that we did was try to like generate our own s-bombs like not rely on outside tool and quickly found that that was a",
    "start": "1820100",
    "end": "1827000"
  },
  {
    "text": "great way to have a huge amount of debt in the area that we were not trying to be experts in right so it's been a long",
    "start": "1827000",
    "end": "1832279"
  },
  {
    "text": "journey uh Brian's getting his steps in here",
    "start": "1832279",
    "end": "1838880"
  },
  {
    "text": "nice uh this is awesome um so I was wondering for act for",
    "start": "1838880",
    "end": "1846500"
  },
  {
    "text": "actioning on this data you mentioned you know potentially combining all the s-bombs created throughout every step of",
    "start": "1846500",
    "end": "1852380"
  },
  {
    "text": "the process have you guys uh like thought about you know a way to combine that data and make one like massive",
    "start": "1852380",
    "end": "1859640"
  },
  {
    "text": "s-bomb that you can use or is that even practical um have any thoughts on that",
    "start": "1859640",
    "end": "1866179"
  },
  {
    "text": "great so the question was around merging the s-bomb documents that are coming out of the build nice do you want to take",
    "start": "1866179",
    "end": "1872000"
  },
  {
    "text": "this one yeah um it's definitely a valid question I think that would be something there's kind of a distinction between",
    "start": "1872000",
    "end": "1878720"
  },
  {
    "text": "the build pack implementation and the platforms that we use like for example we used the paxili here you could use",
    "start": "1878720",
    "end": "1885200"
  },
  {
    "text": "you know kpac or something like that and I kind of think that the merging capabilities would be something that",
    "start": "1885200",
    "end": "1890480"
  },
  {
    "text": "should occur more on the platform side but that's honestly a good consideration we could definitely see if there's a",
    "start": "1890480",
    "end": "1896600"
  },
  {
    "text": "flag we could introduce to you know merge them together I know that Cyclone DX specifically is",
    "start": "1896600",
    "end": "1902240"
  },
  {
    "text": "really interested in like merge ability and like composability so I know that there are open source tools that are",
    "start": "1902240",
    "end": "1907700"
  },
  {
    "text": "like maintained by the CDX maintainers that are interested in merging and I think if this like anchor is also",
    "start": "1907700",
    "end": "1913520"
  },
  {
    "text": "working on that as well um yeah just to kind of emphasize",
    "start": "1913520",
    "end": "1920299"
  },
  {
    "text": "cycling DX already allow you to merge s-bombs we do something similar in uh pipelines",
    "start": "1920299",
    "end": "1927260"
  },
  {
    "text": "so you can just point site County DX at a set of first bombs and it'll create this",
    "start": "1927260",
    "end": "1933679"
  },
  {
    "text": "massive one for you um the question I've got is around um have you started looking at in Toto",
    "start": "1933679",
    "end": "1939980"
  },
  {
    "text": "for doing uh build provenance build provenance yeah it's a build packs",
    "start": "1939980",
    "end": "1947960"
  },
  {
    "text": "clearly I'm not the most familiar on build packs but you're obviously going through a series of stages",
    "start": "1947960",
    "end": "1953600"
  },
  {
    "text": "and have you looked at something like in Toto to produce a kind of provenance",
    "start": "1953600",
    "end": "1959480"
  },
  {
    "text": "statement of all of those stages in a a testable format is that something you've",
    "start": "1959480",
    "end": "1965539"
  },
  {
    "text": "looked at yeah so the question here is about prominence of the components that the build packs are installing and the",
    "start": "1965539",
    "end": "1971960"
  },
  {
    "text": "build packs themselves yeah so right now we're not doing anything with Intel in total attestation",
    "start": "1971960",
    "end": "1977539"
  },
  {
    "text": "um that like could be something I suppose we could look at um depending on if it's going to provide value one thing",
    "start": "1977539",
    "end": "1983600"
  },
  {
    "text": "to bear in mind is that um some of the dependencies that paquetto build packs installed like for example uh the python",
    "start": "1983600",
    "end": "1991760"
  },
  {
    "text": "runtime that we install we're actually compiling from source so that's like coming from a trusted vendor so in that",
    "start": "1991760",
    "end": "1997880"
  },
  {
    "text": "case perhaps it would make sense for us to provide that attestation since we're controlling it is that kind of the thing",
    "start": "1997880",
    "end": "2002980"
  },
  {
    "text": "you're talking about here yeah cool",
    "start": "2002980",
    "end": "2007440"
  },
  {
    "text": "cool awesome thank you everyone [Applause]",
    "start": "2017679",
    "end": "2024870"
  }
]