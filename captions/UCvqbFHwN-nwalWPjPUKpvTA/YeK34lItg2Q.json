[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "this is cynthia and i'm here with and my name is mizu uh and we're going",
    "start": "80",
    "end": "7520"
  },
  {
    "text": "to be talking about building a distributed api gateway with a service mesh so taking api gateway functionality and",
    "start": "7520",
    "end": "14719"
  },
  {
    "text": "moving it into a service mesh so let's go ahead and get started so we're going to to give",
    "start": "14719",
    "end": "21199"
  },
  {
    "text": "you an idea of what we're going to be talking about first we're going to be talking about what a service mesh is",
    "start": "21199",
    "end": "27039"
  },
  {
    "text": "you know what it provides next we'll go over what an api gateway is and sort of",
    "start": "27039",
    "end": "32398"
  },
  {
    "text": "degeneralize that term because it means a lot of different things to a lot of different people it's you know the name is sort of",
    "start": "32399",
    "end": "38480"
  },
  {
    "text": "going through an identity crisis next we'll be talking about envoy which is a particular implementation of a",
    "start": "38480",
    "end": "44800"
  },
  {
    "text": "proxy that we will be using in this talk so we just want to give sort of a quick forward about what it is uh next we'll be",
    "start": "44800",
    "end": "51920"
  },
  {
    "text": "talking about using wasm in envoy as well as why we would want to use wasm at all in order to build extensibility",
    "start": "51920",
    "end": "59520"
  },
  {
    "text": "into these proxies and last we'll give a demo of adding api gateway functionality",
    "start": "59520",
    "end": "64878"
  },
  {
    "text": "into a service mesh with envoy so like i said let's go ahead and get started so what is",
    "start": "64879",
    "end": "71680"
  },
  {
    "start": "69000",
    "end": "218000"
  },
  {
    "text": "a service mesh a service mesh is all about bringing a layer of standardization",
    "start": "71680",
    "end": "76720"
  },
  {
    "text": "to the network level when you're dealing with lots of different services so you can imagine in a sufficiently",
    "start": "76720",
    "end": "83439"
  },
  {
    "text": "large company or maybe a medium-sized company right you have 20 different services maybe written in",
    "start": "83439",
    "end": "89360"
  },
  {
    "text": "three different languages right and they and you want to apply a policy across all of your services at",
    "start": "89360",
    "end": "96640"
  },
  {
    "text": "once it can be very hard to do that without any sort of layer there for example if you wanted to enforce encryption between",
    "start": "96640",
    "end": "103280"
  },
  {
    "text": "all of your services because let's say you had a new requirement pop up right it may be very hard to actually",
    "start": "103280",
    "end": "109200"
  },
  {
    "text": "achieve that because you have to you know implement a library each in the three languages and then you have to wait for all of the",
    "start": "109200",
    "end": "115600"
  },
  {
    "text": "20 services to adopt it and then you have to test in each of the 20 services that they're all doing",
    "start": "115600",
    "end": "121600"
  },
  {
    "text": "what they're supposed to do i.e the encryption is working the way you expect it to with this with a",
    "start": "121600",
    "end": "127680"
  },
  {
    "text": "service mesh this problem uh is actually much easier because the idea is you have a single slide car",
    "start": "127680",
    "end": "133360"
  },
  {
    "text": "that sits next to every single service that actually does all of that complex",
    "start": "133360",
    "end": "138400"
  },
  {
    "text": "logic for you so this sidecar figures out how to do mtls or service to service encryption and",
    "start": "138400",
    "end": "145680"
  },
  {
    "text": "your individual services don't have to figure it out themselves this makes it really easy to add in new",
    "start": "145680",
    "end": "151280"
  },
  {
    "text": "services so if you want to add in a new service perhaps written in a new language you don't have to go build",
    "start": "151280",
    "end": "157040"
  },
  {
    "text": "you know a library to do transport encryption the way your company does it you just let it talk to the sidecar and",
    "start": "157040",
    "end": "163200"
  },
  {
    "text": "the site car handles it all for you right this also is a really nice way to be able to",
    "start": "163200",
    "end": "168640"
  },
  {
    "text": "query policies across the whole mesh because again you have one configuration source for how you do all your networking um",
    "start": "168640",
    "end": "175680"
  },
  {
    "text": "this can be really useful also because it sort of abstracts networking logic away from",
    "start": "175680",
    "end": "181040"
  },
  {
    "text": "application logic so let's say you're moving a service into a new cloud provider to a different cloud provider",
    "start": "181040",
    "end": "186800"
  },
  {
    "text": "maybe you're adopting cloud you don't have to go you know redeploy all of your applications",
    "start": "186800",
    "end": "192000"
  },
  {
    "text": "anytime you deploy a new service into the cloud you can just send a configuration update that says",
    "start": "192000",
    "end": "197360"
  },
  {
    "text": "hey you know route all of your traffic to this new service on the cloud and it's just a single configuration update",
    "start": "197360",
    "end": "203040"
  },
  {
    "text": "you don't actually have to deploy a new version of your app or deploy an app configuration update right because",
    "start": "203040",
    "end": "208159"
  },
  {
    "text": "they're decoupled so it's much lower risk and much easier to make changes as time goes on",
    "start": "208159",
    "end": "213840"
  },
  {
    "text": "this is why a service mesh is really useful and why would you would want one so an api gateway is actually very",
    "start": "213840",
    "end": "219680"
  },
  {
    "start": "218000",
    "end": "367000"
  },
  {
    "text": "similar to a service mesh in our minds right an api gateway just is going to be providing those consistent set",
    "start": "219680",
    "end": "225680"
  },
  {
    "text": "of policies or things that you want to happen on the front door right so they're going",
    "start": "225680",
    "end": "230879"
  },
  {
    "text": "to be doing rate limiting and maybe protocol translation or maybe authentications for users right so",
    "start": "230879",
    "end": "238159"
  },
  {
    "text": "they're handling they're giving you that consistency at the front door right there they're giving you one front door that acts the same way so",
    "start": "238159",
    "end": "244799"
  },
  {
    "text": "that way every single service behind it you know doesn't have to figure out how to do like user authentication",
    "start": "244799",
    "end": "250480"
  },
  {
    "text": "it just gets the user authentication information in a header it doesn't actually have to figure out",
    "start": "250480",
    "end": "255519"
  },
  {
    "text": "how to do this this consistency at your front door is also very useful but it got us to thinking",
    "start": "255519",
    "end": "261759"
  },
  {
    "text": "you know if the service mesh and api gateway are all about providing consistency at the networking layer",
    "start": "261759",
    "end": "268160"
  },
  {
    "text": "they're just at two different networking points would it be possible to combine these two things into the exact same system",
    "start": "268160",
    "end": "274560"
  },
  {
    "text": "so that way you don't have to maintain two separate systems for example if you want to change how",
    "start": "274560",
    "end": "279600"
  },
  {
    "text": "authentication is done you change it in one place and you don't have to go change you know user authentication at the front door",
    "start": "279600",
    "end": "285840"
  },
  {
    "text": "and service the service authentication uh for your sidecar implementation for your service mesh right having one place",
    "start": "285840",
    "end": "291919"
  },
  {
    "text": "to change that if you get an influx of traffic you no longer have to scale up your api gateway",
    "start": "291919",
    "end": "297520"
  },
  {
    "text": "and uh your actual services behind the api gateway you just scale up your",
    "start": "297520",
    "end": "302800"
  },
  {
    "text": "service and your services sidecar is handling all of that front door traffic as well as the service to service",
    "start": "302800",
    "end": "308800"
  },
  {
    "text": "communication we think there's a lot of exciting things that can happen here and this is what an api gateway truly is it's not",
    "start": "308800",
    "end": "315520"
  },
  {
    "text": "something that is like combining responses you know that's getting into feature creep territory where it can be",
    "start": "315520",
    "end": "320639"
  },
  {
    "text": "really hard to make changes because the api gateway is just doing too much but when you think about an api gateway like most api gateways are where they're just",
    "start": "320639",
    "end": "327440"
  },
  {
    "text": "providing this consistent set of policies on the networking front door it can also work really really well as just being",
    "start": "327440",
    "end": "333840"
  },
  {
    "text": "part of your service mesh sidecar where the sidecars are just handling all of that transparently because they're doing a lot of the same",
    "start": "333840",
    "end": "340240"
  },
  {
    "text": "things you know they're routing the logic is exactly the same from routing from a service",
    "start": "340240",
    "end": "345840"
  },
  {
    "text": "in as well as a service to service communication right the routing is exactly the same in an authentication although it may be",
    "start": "345840",
    "end": "352320"
  },
  {
    "text": "different you know you're validating a jwt instead of a certificate uh you know it's the exact same",
    "start": "352320",
    "end": "357840"
  },
  {
    "text": "procedure it's just authentication you're just authenticating something different right but these two things can",
    "start": "357840",
    "end": "363120"
  },
  {
    "text": "be combined without introducing too much feature creep so what is envoy for those of you who",
    "start": "363120",
    "end": "369280"
  },
  {
    "start": "367000",
    "end": "427000"
  },
  {
    "text": "haven't heard of envoy before just know it's a very very common proxy that is used in a lot of service meshes",
    "start": "369280",
    "end": "375520"
  },
  {
    "text": "as well as api gateways today in this session we're going to be using",
    "start": "375520",
    "end": "380720"
  },
  {
    "text": "envoy as the sidecar for our service mesh some of you may be more familiar with something like istio which builds on top",
    "start": "380720",
    "end": "386479"
  },
  {
    "text": "of envoy and adds a new set of concepts that can help you know integrate envoy into a service mesh system for",
    "start": "386479",
    "end": "392800"
  },
  {
    "text": "simplicity we're just going to be using envoy um if you're wondering why envoy is so popular",
    "start": "392800",
    "end": "398240"
  },
  {
    "text": "right it's it's very performant from the ground up and it's very easy to introspect with",
    "start": "398240",
    "end": "403360"
  },
  {
    "text": "first in class logging and monitoring it's very very easy to see what is going on",
    "start": "403360",
    "end": "408880"
  },
  {
    "text": "next it's also very extensible so it's very easy for us to add in new functionality without too much work it's",
    "start": "408880",
    "end": "414479"
  },
  {
    "text": "got this idea of filters that we'll talk about more here in a second and it's also got this great dynamic configuration system",
    "start": "414479",
    "end": "421360"
  },
  {
    "text": "which is called xds which will allow us to not only push updates very easily but also track the progress",
    "start": "421360",
    "end": "427440"
  },
  {
    "start": "427000",
    "end": "441000"
  },
  {
    "text": "of when they get applied so it's very easy to see you know from point a to point b you know when the configuration update",
    "start": "427440",
    "end": "433919"
  },
  {
    "text": "gets sent out when it gets applied and when it's actually been applied and is being used",
    "start": "433919",
    "end": "439520"
  },
  {
    "text": "and and this works great so oh slightest and updating so if you're",
    "start": "439520",
    "end": "446800"
  },
  {
    "start": "441000",
    "end": "542000"
  },
  {
    "text": "curious about building a distributed api gateway",
    "start": "446800",
    "end": "452560"
  },
  {
    "text": "um my slide isn't updating uh the the idea is envoy has this idea of",
    "start": "452560",
    "end": "458479"
  },
  {
    "text": "filter chains so an envoy is going to be it has a listener that is listening on a port",
    "start": "458479",
    "end": "464560"
  },
  {
    "text": "and is going to have traffic coming on the inbound right and that that listener is then",
    "start": "464560",
    "end": "470400"
  },
  {
    "text": "going to pass off the traffic to a series of filter chains and a filter chain is kind of a dense concept",
    "start": "470400",
    "end": "476240"
  },
  {
    "text": "but the basic idea is it's a series of filters and each filter is going to do one thing to the request",
    "start": "476240",
    "end": "482319"
  },
  {
    "text": "or or response and then move on so for example it may parse the request",
    "start": "482319",
    "end": "488160"
  },
  {
    "text": "as http and then you know let the router now match on http level",
    "start": "488160",
    "end": "495199"
  },
  {
    "text": "things right so it's going to validate that it's valid http traffic and then continue on maybe you have another filter that then",
    "start": "495199",
    "end": "501120"
  },
  {
    "text": "takes an http header and validates the jwt and then passes it on right so you have these",
    "start": "501120",
    "end": "506400"
  },
  {
    "text": "series of operations that are filters and they they get put in a chain right and so",
    "start": "506400",
    "end": "512000"
  },
  {
    "text": "once that chain completes on the request it's going to be sent to a router the router is then going to route",
    "start": "512000",
    "end": "519760"
  },
  {
    "text": "the traffic to an up a particular upstream that upstream is then going to respond",
    "start": "519760",
    "end": "525440"
  },
  {
    "text": "and its response is again going to go through a series of filters called the filter chain that are each going to do one thing to the response",
    "start": "525440",
    "end": "532480"
  },
  {
    "text": "maybe it's just adding a metric maybe it's actually changing the response it is up to you and then it's going to",
    "start": "532480",
    "end": "537920"
  },
  {
    "text": "go back through the listener and send a response to the user",
    "start": "537920",
    "end": "543519"
  },
  {
    "start": "542000",
    "end": "646000"
  },
  {
    "text": "so we have some extensibility in envoy so envoy has recent recently announced that it is going to you know support",
    "start": "543519",
    "end": "550640"
  },
  {
    "text": "being extended through wasm uh we will talk about why we chose asm here in a bit um but this is a very",
    "start": "550640",
    "end": "557680"
  },
  {
    "text": "good thing there are official sdks out there for c plus and rust so if you're developing",
    "start": "557680",
    "end": "562720"
  },
  {
    "text": "with c plus plus and rust you will have a very well worn path for development and hopefully",
    "start": "562720",
    "end": "568240"
  },
  {
    "text": "it will be very easy to do there are also unofficial sdks for go and assembly script",
    "start": "568240",
    "end": "574160"
  },
  {
    "text": "so you know again a bit more of not as well worn of a path but a path that you can still hopefully easily hop on to",
    "start": "574160",
    "end": "580800"
  },
  {
    "text": "and then because we're developing wasm uh you know there are many other languages that can compile down to wasm",
    "start": "580800",
    "end": "586160"
  },
  {
    "text": "that you can add support for yourself uh wasn't filters are going to be",
    "start": "586160",
    "end": "591279"
  },
  {
    "text": "delivered dynamically to envoy with the xds configuration system so this means it's possible to update",
    "start": "591279",
    "end": "597200"
  },
  {
    "text": "the actual filters you know that are doing operations on a request such as authorization without ever restarting envoy so we",
    "start": "597200",
    "end": "604320"
  },
  {
    "text": "don't have to worry about you know losing any connections or losing any traffic we're just going to deliver configuration updates",
    "start": "604320",
    "end": "610640"
  },
  {
    "text": "exactly as we would deliver configuration updates normally without wasm we would normally have to",
    "start": "610640",
    "end": "615839"
  },
  {
    "text": "build our extensions as c plus into the envoy binary which means any time we wanted to update that",
    "start": "615839",
    "end": "621680"
  },
  {
    "text": "particular extension we would have to rebuild envoy you know from the ground up this",
    "start": "621680",
    "end": "626800"
  },
  {
    "text": "is what things like istio have done right they have maintained their own build of istio and that's quite a high",
    "start": "626800",
    "end": "632720"
  },
  {
    "text": "bar in order to be able to do that there is also lua extensions however they're generally not as fully featured as c",
    "start": "632720",
    "end": "639519"
  },
  {
    "text": "plus plus there are some things that they can't do whereas wasm is a fully featured right abi that you can build against",
    "start": "639519",
    "end": "647440"
  },
  {
    "start": "646000",
    "end": "684000"
  },
  {
    "text": "so what is wasm wasm is actually kind of similar to java bytecode right where it's this",
    "start": "647440",
    "end": "652640"
  },
  {
    "text": "generic typed binary that multiple languages can compile to",
    "start": "652640",
    "end": "658160"
  },
  {
    "text": "uh it was originally built for the browser to sort of be an analogous solution to javascript",
    "start": "658160",
    "end": "665519"
  },
  {
    "text": "right however it's generally much faster than javascript because it has those strict types that are very easily",
    "start": "665519",
    "end": "671279"
  },
  {
    "text": "optimized as well as there's no parsing time right so it's very lightweight to deliver and then start executing so this is",
    "start": "671279",
    "end": "679360"
  },
  {
    "text": "again very similar to java right where it's this generic byte code very easy to execute and continue so why",
    "start": "679360",
    "end": "685839"
  },
  {
    "start": "684000",
    "end": "804000"
  },
  {
    "text": "would we even choose wasm if it was built for a browser as sort of another version of javascript why would we even want to",
    "start": "685839",
    "end": "692560"
  },
  {
    "text": "to use this to extend our proxies well there are a lot of benefits first off it's a very isolated",
    "start": "692560",
    "end": "697600"
  },
  {
    "text": "environment so if the wasm filter you know panics it's not going to panic the entire",
    "start": "697600",
    "end": "703120"
  },
  {
    "text": "envoy proxy right so the entire proxy is not going to crash just because this particular rasm filter crashed",
    "start": "703120",
    "end": "708800"
  },
  {
    "text": "that's a very nice property especially when you're an api gateway and you're dealing with untrusted",
    "start": "708800",
    "end": "714240"
  },
  {
    "text": "traffic and you may have a bug in your code right we all make bugs so not having to worry about bugs coming in and crashing the entire proxy and",
    "start": "714240",
    "end": "721200"
  },
  {
    "text": "only affecting that one request is very useful not only that but we can also limit cpu and memory consumption",
    "start": "721200",
    "end": "727920"
  },
  {
    "text": "so we can validate you know that one person can't take up all of the cpu and prevent uh code from being executed",
    "start": "727920",
    "end": "734480"
  },
  {
    "text": "that normally would be executed because one person is taking up all of the cpu and you know if you're writing filters",
    "start": "734480",
    "end": "740800"
  },
  {
    "text": "and say c plus plus which is you know has a long history of memory corruption bugs you can",
    "start": "740800",
    "end": "745839"
  },
  {
    "text": "sandbox the runtime to prevent these malicious operations from happening on the host environment so it's a bit",
    "start": "745839",
    "end": "751680"
  },
  {
    "text": "safer than just writing a normal c plus filter there are also many languages that can be",
    "start": "751680",
    "end": "757440"
  },
  {
    "text": "compiled down to asm right c plus plus rust go typescript right and a long list of",
    "start": "757440",
    "end": "762800"
  },
  {
    "text": "others so we get support for all of these languages out of the box so you don't have to go and learn a new",
    "start": "762800",
    "end": "768720"
  },
  {
    "text": "language in order to develop a wasm filter this makes it very easy to expand for everyone not only",
    "start": "768720",
    "end": "774560"
  },
  {
    "text": "that but it gives us a chance to be portable right so we can validate that you know your code",
    "start": "774560",
    "end": "779600"
  },
  {
    "text": "isn't just going to work on envoy or your code isn't just going to work on another proxy that it'll work across all of the",
    "start": "779600",
    "end": "785680"
  },
  {
    "text": "proxies so as you're as your infrastructure evolves and as you have your needs you will be able to migrate your proxies",
    "start": "785680",
    "end": "793040"
  },
  {
    "text": "with zero downtime right and without having to rewrite any of your code because you can just import these filters from one to",
    "start": "793040",
    "end": "799680"
  },
  {
    "text": "the next this is a really nice property that we really want to ensure so what is proxy wasm well proxy wasm is",
    "start": "799680",
    "end": "806639"
  },
  {
    "start": "804000",
    "end": "838000"
  },
  {
    "text": "that consistent interface between proxies right now there are two proxies that implement this particular interface",
    "start": "806639",
    "end": "814000"
  },
  {
    "text": "right this abi right and this is envoy and apache traffic servers so any filters you write using proxy wasm",
    "start": "814000",
    "end": "820880"
  },
  {
    "text": "for envoy will also just work with apache traffic server in any apache traffic server",
    "start": "820880",
    "end": "826160"
  },
  {
    "text": "proxy wise and will just work with envoy right and hopefully as time goes on more and more proxies adopt this so again",
    "start": "826160",
    "end": "831440"
  },
  {
    "text": "as your infrastructure evolves right you will be able to take the same code with you as you move to different infrastructures",
    "start": "831440",
    "end": "839440"
  },
  {
    "start": "838000",
    "end": "898000"
  },
  {
    "text": "so the basic architecture sort of connecting it back to that envoy architecture we talked about right is there's just going to be a wasm",
    "start": "839440",
    "end": "846560"
  },
  {
    "text": "filter inside the filter chain right the envoy worker thread is going to come along it's going to hit the wasm",
    "start": "846560",
    "end": "851760"
  },
  {
    "text": "filter and it's going to be it's going to talk to a proxy wasm uh sort of shim layer this is",
    "start": "851760",
    "end": "858800"
  },
  {
    "text": "implemented by envoy then envoy is going to pass to your code which is implemented using the sdk your",
    "start": "858800",
    "end": "866000"
  },
  {
    "text": "code is going to do something right and then return back to this sort of shim layer that will then continue the filter chain",
    "start": "866000",
    "end": "872800"
  },
  {
    "text": "so to describe that in a bit more detail right you know envoy is going to fire it's specific you know hey i've had",
    "start": "872800",
    "end": "879760"
  },
  {
    "text": "request headers come in and prox and that little shim layer is actually going to normalize it to something that is",
    "start": "879760",
    "end": "885600"
  },
  {
    "text": "consistent across all of the proxies right and again there are official sdks for c plus plus and rest",
    "start": "885600",
    "end": "891360"
  },
  {
    "text": "so if you want to write in either of those two languages you get this nice consistent interface across all of the proxies that implement",
    "start": "891360",
    "end": "898320"
  },
  {
    "start": "898000",
    "end": "943000"
  },
  {
    "text": "it so this is an example filter that sort of goes over what we're going to do",
    "start": "898320",
    "end": "904320"
  },
  {
    "text": "right so we're going to match on a path right that contains private and if there is private in the path we're",
    "start": "904320",
    "end": "911199"
  },
  {
    "text": "going to check the authorization header and then we're going to validate it and if not we're going to respond with a 401",
    "start": "911199",
    "end": "917360"
  },
  {
    "text": "and this code is going to work across apache traffic server as well as envoy it's written in rust and can be",
    "start": "917360",
    "end": "923600"
  },
  {
    "text": "dynamically updated right so it's going to be that middle part that sits there",
    "start": "923600",
    "end": "928800"
  },
  {
    "text": "and again all of those benefits that we talked about of wasm it's going to be using node.js's v8 so it's going to be",
    "start": "928800",
    "end": "935759"
  },
  {
    "text": "isolated it's not going to crash envoy if it crashes and it's going to have those nice security boundaries",
    "start": "935759",
    "end": "941199"
  },
  {
    "text": "that v8 provides",
    "start": "941199",
    "end": "944319"
  },
  {
    "start": "943000",
    "end": "1005000"
  },
  {
    "text": "situation this demonstration is conducted on the compost based environment to run",
    "start": "949120",
    "end": "955680"
  },
  {
    "text": "services from proxy and control frame as the container i developed a simple control",
    "start": "955680",
    "end": "962800"
  },
  {
    "text": "frame to deliver wasm code to data brains for this demonstration which is built on the top of go control",
    "start": "962800",
    "end": "970079"
  },
  {
    "text": "plane which is a library to build control frame interviews from android community this",
    "start": "970079",
    "end": "976639"
  },
  {
    "text": "control frame is using lds capability to apply wasn't filter to service envoy by specifying a wasn't",
    "start": "976639",
    "end": "984720"
  },
  {
    "text": "pass which is uploaded to storage in advance this is called pcb and it is open sourced this tool is",
    "start": "984720",
    "end": "992639"
  },
  {
    "text": "assumed to share docker volume as wasn't storage in running service containers",
    "start": "992639",
    "end": "999199"
  },
  {
    "text": "this is not for production",
    "start": "999199",
    "end": "1010160"
  },
  {
    "start": "1005000",
    "end": "1037000"
  },
  {
    "text": "we use ghettoemboy to prepare the demonstration environment this tool provides the easiest way to",
    "start": "1010160",
    "end": "1016880"
  },
  {
    "text": "get involved binary we can start envoy without installing binaries by",
    "start": "1016880",
    "end": "1022240"
  },
  {
    "text": "using package manager for example we can start washing enable the envoy",
    "start": "1022240",
    "end": "1028079"
  },
  {
    "text": "with this single wine command this tool is very useful to verify your emboy environment",
    "start": "1028079",
    "end": "1039839"
  },
  {
    "start": "1037000",
    "end": "1585000"
  },
  {
    "text": "in today's demonstration we use this tiny size mesh running blue and green services that",
    "start": "1041280",
    "end": "1048400"
  },
  {
    "text": "have authentication required contents service that returned json web token",
    "start": "1048400",
    "end": "1055039"
  },
  {
    "text": "we provide the api gateway ability via emboy wasn't extensibility",
    "start": "1055039",
    "end": "1060400"
  },
  {
    "text": "by providing authentication layer written in web assembly with internal manufacture was the ck",
    "start": "1060400",
    "end": "1067600"
  },
  {
    "text": "to brew and green services to preserve authentication required contents all of",
    "start": "1067600",
    "end": "1074400"
  },
  {
    "text": "these invoices are provided by getting boy",
    "start": "1074400",
    "end": "1081200"
  },
  {
    "text": "okay alright to start the demonstration okay let's start demonstration",
    "start": "1081200",
    "end": "1088320"
  },
  {
    "text": "make sure the demonstration environment for now",
    "start": "1088320",
    "end": "1095840"
  },
  {
    "text": "the configurations are like this",
    "start": "1098320",
    "end": "1109840"
  },
  {
    "text": "okay let's start up demonstration",
    "start": "1110400",
    "end": "1114480"
  },
  {
    "text": "environment okay we can find out all resources are started up",
    "start": "1120840",
    "end": "1126880"
  },
  {
    "text": "service proxy in blue and green services are subscribed to controller train and",
    "start": "1126880",
    "end": "1133520"
  },
  {
    "text": "depart configurations are delivered to them from controlled brain",
    "start": "1133520",
    "end": "1139039"
  },
  {
    "text": "let's confirm that we can reach the blue and green services",
    "start": "1139039",
    "end": "1151840"
  },
  {
    "text": "okay let's access to private content",
    "start": "1167200",
    "end": "1179840"
  },
  {
    "text": "currently we can view private contents and they should be preserved by someone's",
    "start": "1182160",
    "end": "1187600"
  },
  {
    "text": "education video let's make sure subscribe the invoice to use the contract",
    "start": "1187600",
    "end": "1206799"
  },
  {
    "text": "this cluster and id information identifies the subscribed envelope okay",
    "start": "1206799",
    "end": "1213600"
  },
  {
    "text": "let's apply the basic authentication layer to data frames running in blue and green",
    "start": "1213600",
    "end": "1219760"
  },
  {
    "text": "services",
    "start": "1219760",
    "end": "1222400"
  },
  {
    "text": "this is the basic authentication filters called this is the main logic of basic",
    "start": "1230159",
    "end": "1237200"
  },
  {
    "text": "authentication",
    "start": "1237200",
    "end": "1239919"
  },
  {
    "text": "let's upload basic authentication wasn't filtered to the storage",
    "start": "1247200",
    "end": "1253120"
  },
  {
    "text": "in this demonstration we use this simple python script to upload it",
    "start": "1256880",
    "end": "1263840"
  },
  {
    "text": "let's make sure that the water filter was uploaded successfully",
    "start": "1288559",
    "end": "1305120"
  },
  {
    "text": "let's apply the uploaded basic authentication filter without terminating invoice",
    "start": "1305120",
    "end": "1319840"
  },
  {
    "text": "let's make sure that the water filter is applied successfully",
    "start": "1322240",
    "end": "1333840"
  },
  {
    "text": "okay let's access to private contents",
    "start": "1338000",
    "end": "1347840"
  },
  {
    "text": "okay let's request with basic concentration token",
    "start": "1348240",
    "end": "1361840"
  },
  {
    "text": "now we can see private contents and we can see that the basic authentication filter",
    "start": "1367200",
    "end": "1373440"
  },
  {
    "text": "works fine next uh let's show just the validation fixture",
    "start": "1373440",
    "end": "1379039"
  },
  {
    "text": "and i disable the basic authentication filter for now",
    "start": "1379039",
    "end": "1389840"
  },
  {
    "text": "uh and this is the one filter code called conjunctival edition this is the main logic of the paradigm",
    "start": "1410240",
    "end": "1420320"
  },
  {
    "text": "let's support and apply the variation",
    "start": "1423760",
    "end": "1428400"
  },
  {
    "text": "field",
    "start": "1428840",
    "end": "1431840"
  },
  {
    "text": "you",
    "start": "1443760",
    "end": "1445840"
  },
  {
    "text": "let's make sure that the wasn't filter is a quite successful",
    "start": "1472559",
    "end": "1487840"
  },
  {
    "text": "let's access to private contents",
    "start": "1488400",
    "end": "1492240"
  },
  {
    "text": "when we want to request private contacts we need json token okay let's publish it",
    "start": "1496960",
    "end": "1504400"
  },
  {
    "text": "on the authentication service",
    "start": "1504400",
    "end": "1515840"
  },
  {
    "text": "okay let's request with our extracted json",
    "start": "1526080",
    "end": "1532240"
  },
  {
    "text": "token okay and now we can see private contents",
    "start": "1540840",
    "end": "1549679"
  },
  {
    "text": "we can see that the validation filter it works fine",
    "start": "1549679",
    "end": "1554799"
  },
  {
    "text": "okay uh i showed the weber memory capability today uh in this demonstration we can only",
    "start": "1554799",
    "end": "1562080"
  },
  {
    "text": "show a simple simple classification capability but i hope that you understand exactly",
    "start": "1562080",
    "end": "1571120"
  },
  {
    "text": "thank you",
    "start": "1578159",
    "end": "1585840"
  },
  {
    "start": "1585000",
    "end": "1638000"
  },
  {
    "text": "okay thank you for listening uh recently uh we released a ghetto emboy which has",
    "start": "1587760",
    "end": "1593840"
  },
  {
    "text": "abilities to accelerate our webassembly filter development it provides a boilerplate with internal",
    "start": "1593840",
    "end": "1601520"
  },
  {
    "text": "manufactured proxy wasn't sdk it supports on last the internal manufacture was the ck is",
    "start": "1601520",
    "end": "1609520"
  },
  {
    "text": "built on the top of proxy wasn't blasted ck with some conveniences and the easiest",
    "start": "1609520",
    "end": "1616559"
  },
  {
    "text": "way to build and test webassembly filter with docker container",
    "start": "1616559",
    "end": "1621919"
  },
  {
    "text": "to run developed wasn't filter with envoy without importing a complex commands",
    "start": "1621919",
    "end": "1628640"
  },
  {
    "text": "in this session we didn't use this tool but we want to tell that this tool is a",
    "start": "1628640",
    "end": "1634240"
  },
  {
    "text": "great choice to build your own wasn't filter",
    "start": "1634240",
    "end": "1640799"
  },
  {
    "start": "1638000",
    "end": "1647000"
  },
  {
    "text": "thank you for listening",
    "start": "1640799",
    "end": "1643760"
  },
  {
    "start": "1647000",
    "end": "1799000"
  },
  {
    "text": "all right thanks everyone so we've got some questions here that that we'll go through uh so",
    "start": "1650640",
    "end": "1656159"
  },
  {
    "text": "the first question i see is uh can we build and deploy wasm filters to extend envoy in an sd or service mesh",
    "start": "1656159",
    "end": "1663440"
  },
  {
    "text": "and the answer is yes istio has actually been was actually one of the first adopters of proxy wasm they have an entire",
    "start": "1663440",
    "end": "1672080"
  },
  {
    "text": "page set on their documentation site uh if you just search istio asm it should pop right up",
    "start": "1672080",
    "end": "1678480"
  },
  {
    "text": "um and they're continuing to do work to make it easier to integrate wasm filters as a user",
    "start": "1678480",
    "end": "1685360"
  },
  {
    "text": "including introducing new sorts of xdps apis that make it very easy to distribute was and filter",
    "start": "1685360",
    "end": "1691760"
  },
  {
    "text": "specifically the next question i see is is",
    "start": "1691760",
    "end": "1697520"
  },
  {
    "text": "development and maintenance of the service mesh slash api gateway something all developers in a company end up",
    "start": "1697520",
    "end": "1702559"
  },
  {
    "text": "supporting or is it handled by a specialized team uh you know i think that depends",
    "start": "1702559",
    "end": "1707600"
  },
  {
    "text": "effectively on the organization right it's very much an organizational structure i think most people though end up adopting sort",
    "start": "1707600",
    "end": "1714480"
  },
  {
    "text": "of a hybrid where there is one team that runs sort of the service mesh and making sure it gets upgraded and maintained",
    "start": "1714480",
    "end": "1721200"
  },
  {
    "text": "um and then developers are configuring their services for the service mesh right so you have",
    "start": "1721200",
    "end": "1726720"
  },
  {
    "text": "one team who's actually managing the infrastructure of the service mesh slash api gateway and then you have teams that",
    "start": "1726720",
    "end": "1732240"
  },
  {
    "text": "are programming against it and that's sort of why we brought up in the beginning sort of reducing those two interfaces of",
    "start": "1732240",
    "end": "1738720"
  },
  {
    "text": "having developers have to go configure the api gateway and service mesh",
    "start": "1738720",
    "end": "1744640"
  },
  {
    "text": "the next question i see is if i understand correctly western support is not yet",
    "start": "1745200",
    "end": "1750559"
  },
  {
    "text": "officially available in an onboard machine mainline master version uh do you build an envoy with wasm on",
    "start": "1750559",
    "end": "1756480"
  },
  {
    "text": "your own or maybe you use the istio which i understand uses a custom way for so uh it is not in the main",
    "start": "1756480",
    "end": "1763440"
  },
  {
    "text": "android proxy ford slash envoy repository that being said envoy does provide",
    "start": "1763440",
    "end": "1769279"
  },
  {
    "text": "official builds of it uh for onboard proxy slash wasm so if you search that you should be",
    "start": "1769279",
    "end": "1775120"
  },
  {
    "text": "able to find official builds of envoy it is opt-in right now it's not part of mainline that's",
    "start": "1775120",
    "end": "1780799"
  },
  {
    "text": "hopefully it will be merged in soon um but yeah the next one is how does envoy",
    "start": "1780799",
    "end": "1787760"
  },
  {
    "text": "communicate to the wasm binary http grpc tcp i assume",
    "start": "1787760",
    "end": "1794080"
  },
  {
    "text": "uh ray do you want to answer that one",
    "start": "1794080",
    "end": "1797840"
  },
  {
    "start": "1799000",
    "end": "1856000"
  },
  {
    "text": "okay uh the next question uh is there a git repo with this sample",
    "start": "1799520",
    "end": "1806080"
  },
  {
    "text": "code uh i we don't have a a public repo public repository uh",
    "start": "1806080",
    "end": "1811919"
  },
  {
    "text": "to deploy these example codes sorry",
    "start": "1811919",
    "end": "1817919"
  },
  {
    "text": "yeah uh maybe soon uh but right now it's dependent on that internal rust sdk",
    "start": "1819440",
    "end": "1824880"
  },
  {
    "text": "which is planning to be open but not yet open um and and to sort of circle back the uh",
    "start": "1824880",
    "end": "1830480"
  },
  {
    "text": "the wasm binary communicates with envoy over just a normal",
    "start": "1830480",
    "end": "1835600"
  },
  {
    "text": "uh function calls there's effectively an uh an ffi standard which is how uh",
    "start": "1835600",
    "end": "1842000"
  },
  {
    "text": "how languages can communicate with different calling standards um and there's some there's some magic that goes on behind",
    "start": "1842000",
    "end": "1847440"
  },
  {
    "text": "the scene but it's effectively a function call with just a little bit more overhead but it's not any sort of",
    "start": "1847440",
    "end": "1852480"
  },
  {
    "text": "networking or anything like that um next question is would you agree that",
    "start": "1852480",
    "end": "1858960"
  },
  {
    "start": "1856000",
    "end": "1926000"
  },
  {
    "text": "api gateways are still relevant for reasons like the following api gateways can be region aware",
    "start": "1858960",
    "end": "1865120"
  },
  {
    "text": "from route traffic to multiple message api gateways are mature and api management functionalities like",
    "start": "1865120",
    "end": "1870399"
  },
  {
    "text": "publishing open api based documentation supporting automatic sdk generation providing mock endpoints",
    "start": "1870399",
    "end": "1876880"
  },
  {
    "text": "uh i think you know those are certainly useful features of an api gateway uh that being said i don't i don't think",
    "start": "1876880",
    "end": "1884720"
  },
  {
    "text": "they are necessarily the same problems right um because ideally you know",
    "start": "1884720",
    "end": "1891200"
  },
  {
    "text": "combining those two things i think sort of gets you into feature group territory where you sort of have one thing doing a bit too much those are",
    "start": "1891200",
    "end": "1898000"
  },
  {
    "text": "all incredibly useful things to have i don't know if they necessarily belong in an api gateway",
    "start": "1898000",
    "end": "1904640"
  },
  {
    "text": "um it just feels like a little bit too much to manage at one layer for me um that being said obviously",
    "start": "1904640",
    "end": "1911840"
  },
  {
    "text": "i you know i think there are plenty of products that are doing that and i don't think they're going away",
    "start": "1911840",
    "end": "1917120"
  },
  {
    "text": "anytime soon um",
    "start": "1917120",
    "end": "1920799"
  },
  {
    "start": "1926000",
    "end": "1978000"
  },
  {
    "text": "looks like another high priority one came in just scrolling through here uh can",
    "start": "1928640",
    "end": "1934320"
  },
  {
    "text": "different wasm code be deployed to different paths um the answer is",
    "start": "1934320",
    "end": "1940480"
  },
  {
    "text": "yes they can be um so if you remember in the talk we talked about filter chains filter chains",
    "start": "1940480",
    "end": "1946159"
  },
  {
    "text": "can happen per route so what you can do is you can have a specific filter uh",
    "start": "1946159",
    "end": "1951760"
  },
  {
    "text": "in a filter chain that only happens on a specific route so the wasm code will only activate",
    "start": "1951760",
    "end": "1956799"
  },
  {
    "text": "uh on that specific route",
    "start": "1956799",
    "end": "1963840"
  },
  {
    "text": "[Music] all this stuff",
    "start": "1965740",
    "end": "1977840"
  },
  {
    "start": "1978000",
    "end": "2035000"
  },
  {
    "text": "okay uh this covered using wasm to implement filters are there service mesh features that you need to implement with something else than filters",
    "start": "1979120",
    "end": "1985200"
  },
  {
    "text": "or can we do everything we want from a service mesh just using that i think i think the service mesh",
    "start": "1985200",
    "end": "1991279"
  },
  {
    "text": "provides more than than just filters there's a lot of management that it makes easier right so",
    "start": "1991279",
    "end": "1996799"
  },
  {
    "text": "the service mesh is really about controlling all of those side cards which you you ideally don't want to do from within",
    "start": "1996799",
    "end": "2002960"
  },
  {
    "text": "the sidecar itself um that being said you know i i don't think it's feasible",
    "start": "2002960",
    "end": "2009279"
  },
  {
    "text": "for a any particular service mesh to implement all of the functionality for every",
    "start": "2009279",
    "end": "2015440"
  },
  {
    "text": "single person ever um and so having a way to extend it to fit your specific use case",
    "start": "2015440",
    "end": "2021679"
  },
  {
    "text": "with wasm i think this is a perfect use case for um and so hopefully more service meshes",
    "start": "2021679",
    "end": "2027360"
  },
  {
    "text": "uh pick up proxy wasm so that way this can be used",
    "start": "2027360",
    "end": "2033840"
  },
  {
    "start": "2035000",
    "end": "2072000"
  },
  {
    "text": "uh ray do you want to answer looks like question number 10 have you looked at the webassembly hub",
    "start": "2035760",
    "end": "2042720"
  },
  {
    "text": "project to simplify the way you create and deploy filter yes i i watched this",
    "start": "2042720",
    "end": "2050320"
  },
  {
    "text": "project we can use this project to write a wasm code",
    "start": "2050320",
    "end": "2055520"
  },
  {
    "text": "by using a typescript know what assembly script and it is it",
    "start": "2055520",
    "end": "2062000"
  },
  {
    "text": "has a web assembly hub and we can deploy the web filter to",
    "start": "2062000",
    "end": "2067118"
  },
  {
    "text": "the web assembly file with using this tool",
    "start": "2067119",
    "end": "2072399"
  },
  {
    "start": "2072000",
    "end": "2090000"
  },
  {
    "text": "yeah and as we mentioned sort of our internal rust sdk earlier there there has been some thought about",
    "start": "2072879",
    "end": "2078320"
  },
  {
    "text": "how we can integrate uh with web assembly hub there uh to to again make that experience",
    "start": "2078320",
    "end": "2083599"
  },
  {
    "text": "easier uh you know we we definitely like uh web assembly hub",
    "start": "2083599",
    "end": "2089599"
  },
  {
    "text": "okay uh is it possible for a filter to use an external service if it's sandboxed in wasm",
    "start": "2089599",
    "end": "2095839"
  },
  {
    "start": "2090000",
    "end": "2121000"
  },
  {
    "text": "uh yes the the sandboxing is uh you know not uh something like a",
    "start": "2095839",
    "end": "2101920"
  },
  {
    "text": "firewall or something that would prevent access obviously i'm sure you could configure the sandbox in a way that it did block",
    "start": "2101920",
    "end": "2108160"
  },
  {
    "text": "network access if you didn't want it to communicate out um but yes by default uh filters can",
    "start": "2108160",
    "end": "2116240"
  },
  {
    "text": "talk to external services",
    "start": "2116240",
    "end": "2119760"
  },
  {
    "start": "2121000",
    "end": "2139000"
  },
  {
    "text": "have you tested this approach to scenarios like rate control for instance my doubt is the latency cost of running all steps",
    "start": "2121520",
    "end": "2127680"
  },
  {
    "text": "of an api gateway as remoted call services um",
    "start": "2127680",
    "end": "2132960"
  },
  {
    "text": "ray do you want to talk about any work that we've done there before no yeah okay that's what i thought i",
    "start": "2132960",
    "end": "2140800"
  },
  {
    "text": "just wanted to make sure um we we haven't done any extensive testing",
    "start": "2140800",
    "end": "2146560"
  },
  {
    "text": "on rate limiting um itself our main focus has been authentication that being said with rate limiting as we",
    "start": "2146560",
    "end": "2153119"
  },
  {
    "text": "mentioned we think it can also provide benefit because not only are you removing it's not necessarily",
    "start": "2153119",
    "end": "2158560"
  },
  {
    "text": "the network step but you're removing an extra piece of infrastructure that you have just you have to scale um because your rate",
    "start": "2158560",
    "end": "2165280"
  },
  {
    "text": "limiting usually takes a second to begin because you want to give your users",
    "start": "2165280",
    "end": "2170400"
  },
  {
    "text": "the ability to use your platform well so that's that's where those links came",
    "start": "2170400",
    "end": "2176000"
  },
  {
    "text": "from i think we can do maybe one or two more uh what do you think",
    "start": "2176000",
    "end": "2181119"
  },
  {
    "text": "about the risk of having any networking concern handled by one component that may fail especially when playing with",
    "start": "2181119",
    "end": "2186960"
  },
  {
    "text": "onway filters that can have a wide impact in case of misconfiguration you know i",
    "start": "2186960",
    "end": "2192240"
  },
  {
    "text": "think that's a totally fair concern right any particular piece of technology handling",
    "start": "2192240",
    "end": "2199440"
  },
  {
    "text": "too much i think uh can be dangerous um i think",
    "start": "2199440",
    "end": "2204480"
  },
  {
    "text": "the i think the best answer there is making sure i sort of brought it up",
    "start": "2204480",
    "end": "2209520"
  },
  {
    "text": "earlier feature creep is making sure you don't push too much to the networking layer um",
    "start": "2209520",
    "end": "2214960"
  },
  {
    "text": "ideally the networking layer should realistically be uh you know like it it should",
    "start": "2214960",
    "end": "2220400"
  },
  {
    "text": "effectively handle the actual giving the user identity and putting in a consistent place",
    "start": "2220400",
    "end": "2226560"
  },
  {
    "text": "retrying and then authorization right and you really retrying and rate limiting you really",
    "start": "2226560",
    "end": "2232880"
  },
  {
    "text": "don't want too much more than that um and so i don't necessarily and",
    "start": "2232880",
    "end": "2237920"
  },
  {
    "text": "obviously i think you may still have some some code in your app that does a little bit but most of the functionality should",
    "start": "2237920",
    "end": "2243680"
  },
  {
    "text": "be handled by that service mesh and then you don't want to grow it so i see a lot of people doing you know uh like combining responses and api",
    "start": "2243680",
    "end": "2250480"
  },
  {
    "text": "gateway and service meshes and that's where i personally uh get a little bit of a",
    "start": "2250480",
    "end": "2256079"
  },
  {
    "text": "sick stomach because i i worry about changing that code right and having it handling too much and having it fail um",
    "start": "2256079",
    "end": "2262720"
  },
  {
    "text": "so i i think the answer there is you know the network is going to fail anyway so",
    "start": "2262720",
    "end": "2268160"
  },
  {
    "text": "having one place where you have a consistent failure policy is good but at the same time i i totally agree",
    "start": "2268160",
    "end": "2274320"
  },
  {
    "text": "i think you need to be careful in how much you push to that layer uh you know authentication and authorization are already there",
    "start": "2274320",
    "end": "2281119"
  },
  {
    "text": "um so you know we're not adding anything but you definitely don't i think want to go crazy with wisely filters where everything is handled",
    "start": "2281119",
    "end": "2287920"
  },
  {
    "text": "sort of in the sidecar so uh we are going to wrap up now for",
    "start": "2287920",
    "end": "2295119"
  },
  {
    "start": "2291000",
    "end": "2308000"
  },
  {
    "text": "time but you can reach out to us in the pound 2 cube con service mesh channel",
    "start": "2295119",
    "end": "2300560"
  },
  {
    "text": "myself and ray will be there for a few more minutes and i hope you have a great rest of your kubecon",
    "start": "2300560",
    "end": "2305760"
  },
  {
    "text": "thank you",
    "start": "2305760",
    "end": "2310000"
  }
]