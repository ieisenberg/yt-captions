[
  {
    "text": "thank you I'm bill I guess I work at Google and I work on K native and more",
    "start": "179",
    "end": "7020"
  },
  {
    "text": "particularly lately been working mainly in the eventing side of the K native project mat design okay it's on I'm Matt",
    "start": "7020",
    "end": "15960"
  },
  {
    "text": "and I work with VLA I mainly focus on the K native serving project so one of",
    "start": "15960",
    "end": "23970"
  },
  {
    "text": "the aims of K native is to well circle",
    "start": "23970",
    "end": "30269"
  },
  {
    "text": "asan kubernetes but one of the aims of our repos is to be loosely coupled and",
    "start": "30269",
    "end": "35850"
  },
  {
    "text": "what that means is we want build serving eventing to be independently installable",
    "start": "35850",
    "end": "41160"
  },
  {
    "text": "and useful but work really well together about a year ago Neela and I were",
    "start": "41160",
    "end": "47340"
  },
  {
    "text": "sitting by the whiteboard trying to figure out how we make this happen so we",
    "start": "47340",
    "end": "54210"
  },
  {
    "text": "wanted we wanted to solve in particular the problem of how with the venting we make it so that we can deliver events to",
    "start": "54210",
    "end": "61890"
  },
  {
    "text": "the serving abstractions for instance service but also make it so that we can",
    "start": "61890",
    "end": "69150"
  },
  {
    "text": "deliver events the things that we haven't thought of yet or you haven't thought of yet like this one of the",
    "start": "69150",
    "end": "75869"
  },
  {
    "text": "problems with these object references though is how you deal with what's on the other side right it tells you what",
    "start": "75869",
    "end": "82710"
  },
  {
    "text": "the resource is but what can you do with it so option a bake it in right so you",
    "start": "82710",
    "end": "92759"
  },
  {
    "text": "know we start by saying okay I know I want to deliver things to a service you know and then this Hutchinson thing and",
    "start": "92759",
    "end": "99689"
  },
  {
    "text": "so on and so on and so on and it gets really tedious and unwieldy and",
    "start": "99689",
    "end": "106140"
  },
  {
    "text": "especially in environments where you you might not know yet about the things that you want to deliver events to for",
    "start": "106140",
    "end": "113009"
  },
  {
    "text": "instance this doesn't really work",
    "start": "113009",
    "end": "117799"
  },
  {
    "text": "so we got back the whiteboard spent a bunch of time thinking about this and we",
    "start": "118530",
    "end": "123660"
  },
  {
    "text": "decided that option is popping out what would I do so we came up with this option B which is what we call what the",
    "start": "123660",
    "end": "131190"
  },
  {
    "text": "duck and in particular what we wanted to do was really boil down the problem what",
    "start": "131190",
    "end": "140070"
  },
  {
    "text": "problem are we really trying to solve not necessarily he's sort of kind of what is it that we want to be doing with",
    "start": "140070",
    "end": "145080"
  },
  {
    "text": "those types in particular but what is the thing that matters to us about those particular objects and the pattern that",
    "start": "145080",
    "end": "152880"
  },
  {
    "text": "we had seen in the past for something like this was oh by the way and our",
    "start": "152880",
    "end": "158100"
  },
  {
    "text": "esteemed colleague there will be handing out stickers later thanks God so we kind of went back and",
    "start": "158100",
    "end": "165300"
  },
  {
    "text": "started looking at things and we're like well what we really care about is is what's on the other end of that",
    "start": "165300",
    "end": "170340"
  },
  {
    "text": "reference right we don't really necessarily have to know exactly what is in there as long as it can fit the bill",
    "start": "170340",
    "end": "176430"
  },
  {
    "text": "and you can read the definition for duck typing there but this is what we started",
    "start": "176430",
    "end": "183390"
  },
  {
    "text": "to look at as a possible solution so if you look at these objects here so this",
    "start": "183390",
    "end": "190470"
  },
  {
    "text": "is just handy-dandy JSON it /y ammo there and in these cases if we only want",
    "start": "190470",
    "end": "198480"
  },
  {
    "text": "it to go ahead and care about things like food whatever is underneath the food there there's three different kinds",
    "start": "198480",
    "end": "203489"
  },
  {
    "text": "of objects there and even though they all look a little bit different they have the small section that that we care",
    "start": "203489",
    "end": "212190"
  },
  {
    "text": "about in for our cases so we're like I'll get great let's go in to find a partial schema for that and then we",
    "start": "212190",
    "end": "218940"
  },
  {
    "text": "started looking a little bit more and we were like you know what this looks really familiar we already sort of kind of seen this so if you look at the",
    "start": "218940",
    "end": "224519"
  },
  {
    "text": "kubernetes objects you can see that each one of them always has the handy-dandy type meta so it basically says this is",
    "start": "224519",
    "end": "230910"
  },
  {
    "text": "the kind of an object I am this is the group I belong to and I'm that type and then you have the object metadata that",
    "start": "230910",
    "end": "238950"
  },
  {
    "text": "describes the actual object what is what is it so if you create a a service you",
    "start": "238950",
    "end": "245160"
  },
  {
    "text": "give it a name and a name space and few other things and lastly where we see this often is in",
    "start": "245160",
    "end": "250870"
  },
  {
    "text": "status so there's there's API principles document each one of these Cuban ladies objects should be providing a status in",
    "start": "250870",
    "end": "258699"
  },
  {
    "text": "a well-defined matter so that you then you can't rule them better yada yada yada and then we start looking at even",
    "start": "258699",
    "end": "266020"
  },
  {
    "text": "more of these types where we see this on the spec side of things so those were the the common wrappers so if you look",
    "start": "266020",
    "end": "272169"
  },
  {
    "text": "at the apps v1 so you have the deployments the stateful sets and the daemon sets and again here you can see",
    "start": "272169",
    "end": "279280"
  },
  {
    "text": "that they are sharing some common ways of selecting things they also have this",
    "start": "279280",
    "end": "285580"
  },
  {
    "text": "thing here called the the pot spec template that allows you to go ahead and reuse that thing for for common shape",
    "start": "285580",
    "end": "293830"
  },
  {
    "text": "and so forth so we kind of in there and said do you think it would be bad if we went in and",
    "start": "293830",
    "end": "300070"
  },
  {
    "text": "defined this like what what could we do with this if we basically said let's go",
    "start": "300070",
    "end": "306370"
  },
  {
    "text": "and give it the two kubernetes type meta object meta and then let's define our own little pod template spec that gives",
    "start": "306370",
    "end": "313360"
  },
  {
    "text": "us a an aggregated object or with using that field only alone and if you look at",
    "start": "313360",
    "end": "320560"
  },
  {
    "text": "it it maps into the those things but but",
    "start": "320560",
    "end": "326320"
  },
  {
    "text": "for example of the case of the deployment the grayed out pieces are not part of that spec at all right so let's",
    "start": "326320",
    "end": "335979"
  },
  {
    "text": "go and see what we can do with something just with this alright so for our first",
    "start": "335979",
    "end": "341349"
  },
  {
    "text": "demo we're gonna use a little prototype that we were a few months ago anymore",
    "start": "341349",
    "end": "348880"
  },
  {
    "text": "now called cache here so in K native we have this image cache resource that we create as part of our object model",
    "start": "348880",
    "end": "355030"
  },
  {
    "text": "directly that gives a hint to controllers that allow you to",
    "start": "355030",
    "end": "360669"
  },
  {
    "text": "potentially cache that a particular container image across the cluster and for fast startups that same problem",
    "start": "360669",
    "end": "367720"
  },
  {
    "text": "though afflicts all of the kubernetes app resources we just saw so the",
    "start": "367720",
    "end": "373120"
  },
  {
    "text": "question is can we write a generalized controller that uses this partial schema to figure out what the compare images",
    "start": "373120",
    "end": "378849"
  },
  {
    "text": "are and basically bring that same abstraction to all of",
    "start": "378849",
    "end": "384520"
  },
  {
    "text": "is good Rene's application resources so okay so with duck typing though right oh",
    "start": "384520",
    "end": "394780"
  },
  {
    "text": "I don't need to know a lot about the type I just need to know what set of",
    "start": "394780",
    "end": "399819"
  },
  {
    "text": "group version resources adhere to this partial schema so in here the entire awareness cashier has of these types is",
    "start": "399819",
    "end": "407500"
  },
  {
    "text": "basically these strings and the partial schema that we have defined so what",
    "start": "407500",
    "end": "414009"
  },
  {
    "text": "we're going to show in this demo is we have this with pod partial schema we're gonna create a deployment with an a boon",
    "start": "414009",
    "end": "420759"
  },
  {
    "text": "to image and we're going to see the controller produce an image resource with Ubuntu then we're gonna create a",
    "start": "420759",
    "end": "427599"
  },
  {
    "text": "daemon set resource with two images Debian an Alpine and it'll produce two",
    "start": "427599",
    "end": "432759"
  },
  {
    "text": "image resources so let's see that in action alright so if I switch over here",
    "start": "432759",
    "end": "440969"
  },
  {
    "text": "just make sure it didn't drop okay so you can see on the left here there's a",
    "start": "440969",
    "end": "447580"
  },
  {
    "text": "deployment gamal with the abun two image and if we scroll a little bit you can",
    "start": "447580",
    "end": "452860"
  },
  {
    "text": "see a demon set at the bottom with Debian and Alpine and so if we apply this yamo in the bottom right I have",
    "start": "452860",
    "end": "459900"
  },
  {
    "text": "watch going to see what resources exist so if she okay so when I apply this",
    "start": "459900",
    "end": "469029"
  },
  {
    "text": "you'll see the deployment and the daemon set up here immediately and the the controller has already picked up the",
    "start": "469029",
    "end": "475029"
  },
  {
    "text": "fact that these with pod resources are there and create these image resources for each of the three images that it",
    "start": "475029",
    "end": "482380"
  },
  {
    "text": "sees so if I go in here and I delete the deployment you'll see that one of the",
    "start": "482380",
    "end": "492279"
  },
  {
    "text": "image cache resources for the Ubuntu image goes away right so this this gives us a way to hook into the kubernetes",
    "start": "492279",
    "end": "497729"
  },
  {
    "text": "object lifecycle in order to know what things to cache what things not to cache",
    "start": "497729",
    "end": "503590"
  },
  {
    "text": "and if I go in here and I delete the daemon set resource everything goes away",
    "start": "503590",
    "end": "512969"
  },
  {
    "text": "so so so that was pretty neat so we were",
    "start": "513030",
    "end": "523570"
  },
  {
    "text": "able to go ahead and have a signal controller that is no knowledge of those particular objects in there we were able",
    "start": "523570",
    "end": "528820"
  },
  {
    "text": "to go ahead and just say look for these resources and do something nifty with them so that that allows us to go and we",
    "start": "528820",
    "end": "538540"
  },
  {
    "text": "use the very same controller for any additional resources that might come so if somebody else builds any kind of a",
    "start": "538540",
    "end": "543790"
  },
  {
    "text": "thing that fits that using the pot template spec we can now go ahead and start getting the pennies of the of the",
    "start": "543790",
    "end": "550620"
  },
  {
    "text": "the cashier and the other nice thing about this one is that just like in go",
    "start": "550620",
    "end": "556690"
  },
  {
    "text": "when you have the when you use in interfaces you don't actually have to do things like in Java where you say like",
    "start": "556690",
    "end": "562720"
  },
  {
    "text": "it that the resource implementing that needs to know what it's implementing so",
    "start": "562720",
    "end": "567880"
  },
  {
    "text": "the nice thing about this is that all those native kubernetes native resources they don't need to be aware of this this",
    "start": "567880",
    "end": "574380"
  },
  {
    "text": "duck typing that we are doing in the background at all so that was cool we",
    "start": "574380",
    "end": "582010"
  },
  {
    "text": "were pretty happy with that but then we got in the point where we like okay that really solved our goals for being able",
    "start": "582010",
    "end": "587440"
  },
  {
    "text": "to read arbitrary state state for anything that adheres to those particular partial schemas or duck types",
    "start": "587440",
    "end": "595200"
  },
  {
    "text": "so so if we go back into the apps v1 if you look at these objects again if we",
    "start": "595200",
    "end": "601390"
  },
  {
    "text": "were to go ahead and just let's say we wanted to go ahead and add like an environmental variable let's say we are doing something like injecting some",
    "start": "601390",
    "end": "607720"
  },
  {
    "text": "values in there or something like that the tricky bit about this one is that if we go ahead and come in read the object",
    "start": "607720",
    "end": "614500"
  },
  {
    "text": "modify it and just write it back using our duct ID then some of those things",
    "start": "614500",
    "end": "620860"
  },
  {
    "text": "wouldn't be carried through right so we've just basically bad badness wouldn't happen so we didn't want that so you're back to",
    "start": "620860",
    "end": "631630"
  },
  {
    "text": "option a right guys remember this so it didn't solve",
    "start": "631630",
    "end": "638250"
  },
  {
    "text": "our problem at all for the Riding cases and that made us sad but we were like",
    "start": "638250",
    "end": "644580"
  },
  {
    "text": "but the game like we don't need to know what the type really is all we need to know is know enough about it to understand what are the bits and pieces",
    "start": "644580",
    "end": "651120"
  },
  {
    "text": "we need to change so let's take away all the craft from the previous objects that we had and we were like what what the",
    "start": "651120",
    "end": "657180"
  },
  {
    "text": "wire four might actually look like for these things right and it really is just it's this is it it looks the same for",
    "start": "657180",
    "end": "664440"
  },
  {
    "text": "all of them so if we just go ahead and actually generate a patch against our",
    "start": "664440",
    "end": "670410"
  },
  {
    "text": "duck type then the nice thing is that the right things will just magically happen so if you look at this one this",
    "start": "670410",
    "end": "677430"
  },
  {
    "text": "is this one has no knowledge anywhere in this about the object on the other end it just knows that he needs to go and",
    "start": "677430",
    "end": "683490"
  },
  {
    "text": "modify some bit somewhere in the yamo on the other end of it and it works great",
    "start": "683490",
    "end": "689760"
  },
  {
    "text": "against all the app types so Matt",
    "start": "689760",
    "end": "696680"
  },
  {
    "text": "alright so for our second demo we're gonna show how we can use a patch to",
    "start": "697100",
    "end": "702810"
  },
  {
    "text": "modify arbitrary objects so there's this second prototype that it's called boom",
    "start": "702810",
    "end": "708150"
  },
  {
    "text": "apps it's named after this little ghost here that you may recognize that freezes",
    "start": "708150",
    "end": "713550"
  },
  {
    "text": "when you look at it and moves when you don't so this this was a prototype that we put together that attempts to help",
    "start": "713550",
    "end": "720150"
  },
  {
    "text": "alleviate problems with config map rollouts where you know if you use them in environment variables",
    "start": "720150",
    "end": "726060"
  },
  {
    "text": "you know old pub old pods don't change anything but new pods get it right away",
    "start": "726060",
    "end": "732240"
  },
  {
    "text": "and if you use it via volumes you can't control how quickly that is rolled out to all of the pods consuming it so what",
    "start": "732240",
    "end": "741570"
  },
  {
    "text": "the boom apps do is you have this mutable map in this immutable map and as you change the mutable map much like",
    "start": "741570",
    "end": "748260"
  },
  {
    "text": "configurations and revisions in the key native serving model you get new immutable Maps for each state of your",
    "start": "748260",
    "end": "756330"
  },
  {
    "text": "thing so now if you want to deploy something a width pod for instance that references the the mutable map because",
    "start": "756330",
    "end": "765110"
  },
  {
    "text": "typically that's what you want a reference when you're doing development but freeze it so that it",
    "start": "765110",
    "end": "771710"
  },
  {
    "text": "doesn't change out from under you and you can control the deployment of the rollout of that the changes the config",
    "start": "771710",
    "end": "778010"
  },
  {
    "text": "changes we run a mutating web hook that basically intercepts with pod and the",
    "start": "778010",
    "end": "784850"
  },
  {
    "text": "mutating web hook you guessed it returns a patch to the API server for the changes that wants to make and so we can",
    "start": "784850",
    "end": "790970"
  },
  {
    "text": "use this to basically freeze the config map references to the latest generation of the mutable map and then it won't",
    "start": "790970",
    "end": "798530"
  },
  {
    "text": "drift as you continue to edit your mutable map so let's see this in action",
    "start": "798530",
    "end": "806860"
  },
  {
    "text": "so if we go over here I'm going to switch to blue mapped yam all okay",
    "start": "806860",
    "end": "815690"
  },
  {
    "text": "so this is just a really simple booooo map where the spec is basically",
    "start": "815690",
    "end": "820910"
  },
  {
    "text": "much the same as config Maps data I have fubar and if deployed this in the bottom",
    "start": "820910",
    "end": "831770"
  },
  {
    "text": "right you will see right away the mutable map right away okay the mutable",
    "start": "831770",
    "end": "837920"
  },
  {
    "text": "map up here and the first generation of the config map appear all right my",
    "start": "837920",
    "end": "846800"
  },
  {
    "text": "connection seems to have dropped so give me one second while I reconnect",
    "start": "846800",
    "end": "853780"
  },
  {
    "text": "how's everyone doing all right so what",
    "start": "855720",
    "end": "863910"
  },
  {
    "text": "we're gonna do next is we're gonna deploy just like in the example a",
    "start": "863910",
    "end": "870860"
  },
  {
    "text": "deployment that references the mutable map so we have boom app deploy here and",
    "start": "870860",
    "end": "877110"
  },
  {
    "text": "you can see this reference is the immutable map which we had named freeze me oh wait sorry got distracted we need",
    "start": "877110",
    "end": "884670"
  },
  {
    "text": "to change this boom app at least once to say cube con okay and if if I apply this",
    "start": "884670",
    "end": "896450"
  },
  {
    "text": "it's dropping every time I switch to this frame that's awesome maybe not there we go I hit something",
    "start": "896450",
    "end": "903570"
  },
  {
    "text": "okay so that in the bottom right you now see the second config map appear right",
    "start": "903570",
    "end": "910080"
  },
  {
    "text": "away and now if we go and deploy that deployment but we will see we've control",
    "start": "910080",
    "end": "919080"
  },
  {
    "text": "applied chef map deploy you'll see the deployment appear in that bottom frame",
    "start": "919080",
    "end": "925650"
  },
  {
    "text": "right away and I'm gonna zoom in because this gets a little big so we're going to",
    "start": "925650",
    "end": "934230"
  },
  {
    "text": "get the deployment and look at what we got so if we scroll down here a little",
    "start": "934230",
    "end": "940830"
  },
  {
    "text": "bit you can see that the mutant mutating webhook was able to change it looked through find that blue map reference and",
    "start": "940830",
    "end": "946890"
  },
  {
    "text": "replace it with the name of the frozen config map so that's neat now if we were",
    "start": "946890",
    "end": "955470"
  },
  {
    "text": "to change this it wouldn't change from hell from under my deployment but we",
    "start": "955470",
    "end": "961230"
  },
  {
    "text": "haven't shown this applying to duck types yet so let's look at another type that actually implements with pot in",
    "start": "961230",
    "end": "967410"
  },
  {
    "text": "this case let's look at a game a DIF service so you can see this similarly",
    "start": "967410",
    "end": "972930"
  },
  {
    "text": "references the boom app freeze me and if we go over here and we apply that",
    "start": "972930",
    "end": "983549"
  },
  {
    "text": "we will see it start to appear down here in just a second it creates a deployment",
    "start": "983549",
    "end": "988720"
  },
  {
    "text": "under the hood and if we control get K service oh yeah and I make this big what",
    "start": "988720",
    "end": "998829"
  },
  {
    "text": "you will see is here this also can be frozen because it also implements with",
    "start": "998829",
    "end": "1003869"
  },
  {
    "text": "pod and if I go over here now and i",
    "start": "1003869",
    "end": "1010379"
  },
  {
    "text": "refresh this hello cute Conn alright so",
    "start": "1010379",
    "end": "1018169"
  },
  {
    "text": "we saw in action so one of the nice things about this is this allows us to",
    "start": "1018169",
    "end": "1026129"
  },
  {
    "text": "control the roll out and roll back in config Maps right but we have shown that",
    "start": "1026129",
    "end": "1031438"
  },
  {
    "text": "we can take this partial schema that allows us to read these things but also",
    "start": "1031439",
    "end": "1036839"
  },
  {
    "text": "use it to synthesize patches for changes we want to make to these things and this allowed us to basically write a web hook",
    "start": "1036839",
    "end": "1042899"
  },
  {
    "text": "that applied to any with pod thing to write a web hook that could freeze these",
    "start": "1042899",
    "end": "1048409"
  },
  {
    "text": "config maps in place as these with pod things get deployed and so so yeah so",
    "start": "1048409",
    "end": "1057690"
  },
  {
    "text": "this this lets us actually control the roll out and roll back of config map changes so right you work",
    "start": "1057690",
    "end": "1066509"
  },
  {
    "text": "Thanks so what does this have to do with the cape needed anyways",
    "start": "1066509",
    "end": "1071549"
  },
  {
    "text": "so so where don't really began again just kind of going back to the beginning",
    "start": "1071549",
    "end": "1077039"
  },
  {
    "text": "there where we said we basically had these things called events event sources",
    "start": "1077039",
    "end": "1082559"
  },
  {
    "text": "that allow you to go ahead and come in and saying hey start sending events from here to there and the way you specified",
    "start": "1082559",
    "end": "1088379"
  },
  {
    "text": "there is by putting an object graph that basically you know just so kay there's",
    "start": "1088379",
    "end": "1094200"
  },
  {
    "text": "your version API group and enter name of that particular object so this was the",
    "start": "1094200",
    "end": "1099750"
  },
  {
    "text": "very first one that we did and just this",
    "start": "1099750",
    "end": "1105059"
  },
  {
    "text": "we expected when we used these duck types instead of bacon in any kind of knowledge about about the object on the",
    "start": "1105059",
    "end": "1113309"
  },
  {
    "text": "other end by just using those at type so we spend some time thinking about what those duct absol and then",
    "start": "1113309",
    "end": "1118830"
  },
  {
    "text": "when we introduced a new object here in the latest 0.5 release of K native for a broker we didn't have to change any of",
    "start": "1118830",
    "end": "1124890"
  },
  {
    "text": "the any of those codes because they were able to go ahead and and keep on working and just resolve those references and do",
    "start": "1124890",
    "end": "1131250"
  },
  {
    "text": "what they wanted to in the first place so all they all the contract the very",
    "start": "1131250",
    "end": "1136440"
  },
  {
    "text": "first simple contract and or the duct tape that we defined was this addressable we're in the status field",
    "start": "1136440",
    "end": "1142410"
  },
  {
    "text": "you just needed to go and have an address and a host name in there that's all that that the consumer really needs",
    "start": "1142410",
    "end": "1148049"
  },
  {
    "text": "to know we're descent the events to it was really that simple so that was our very first duck all right so after we",
    "start": "1148049",
    "end": "1160140"
  },
  {
    "text": "saw that this could be used in eventing to allow us to keep to decouple eventing",
    "start": "1160140",
    "end": "1167130"
  },
  {
    "text": "and serving so that they could work well together but not without baking and",
    "start": "1167130",
    "end": "1173700"
  },
  {
    "text": "knowledge we started to look at another place where we had actually gone more with option a and we revisited that and",
    "start": "1173700",
    "end": "1181830"
  },
  {
    "text": "we looked it you know how we were doing these what I call just-in-time builds",
    "start": "1181830",
    "end": "1187470"
  },
  {
    "text": "where our configuration resource and embeds a key native build spec and as",
    "start": "1187470",
    "end": "1193669"
  },
  {
    "text": "revisions are created as you post updates the configuration it stamps out builds and revisions and then the",
    "start": "1193669",
    "end": "1200040"
  },
  {
    "text": "revision watches the build that the configuration created and what waits for",
    "start": "1200040",
    "end": "1205049"
  },
  {
    "text": "it to be complete and so basically all we really needed to know for that thing we're watching the build reference was",
    "start": "1205049",
    "end": "1211770"
  },
  {
    "text": "has it succeeded or failed and so we leveraged this sort of condition duck",
    "start": "1211770",
    "end": "1217290"
  },
  {
    "text": "type and some of our own conventions around particular conditions that these our resources should expose to be able",
    "start": "1217290",
    "end": "1224549"
  },
  {
    "text": "to basically watch arbitrary build like resources run to completion as part of",
    "start": "1224549",
    "end": "1233929"
  },
  {
    "text": "serving and this and this has enabled us to decouple serving from build in much",
    "start": "1233929",
    "end": "1239549"
  },
  {
    "text": "the same way we decoupled serving and eventing this also enabled us to you as we started pipelines which ultimately",
    "start": "1239549",
    "end": "1245240"
  },
  {
    "text": "became tech slot those in on day one so that you",
    "start": "1245240",
    "end": "1250340"
  },
  {
    "text": "could use a you know tasks run or a pipeline run just as you could use build",
    "start": "1250340",
    "end": "1255380"
  },
  {
    "text": "and we literally change zero code because they they just worked so and",
    "start": "1255380",
    "end": "1262640"
  },
  {
    "text": "that was in point two in point six we started to really embrace the duck so",
    "start": "1262640",
    "end": "1268180"
  },
  {
    "text": "well one of the changes we've made as part of our new API shape and point six is we started to reshape the actual",
    "start": "1268180",
    "end": "1276080"
  },
  {
    "text": "serving API to embed a pod spec in the same way as the the Apps resources so",
    "start": "1276080",
    "end": "1282220"
  },
  {
    "text": "this is what we saw in that second demo which enabled us to create patches that",
    "start": "1282220",
    "end": "1287960"
  },
  {
    "text": "work equally well against a native service and configuration resources that work against kubernetes application",
    "start": "1287960",
    "end": "1295280"
  },
  {
    "text": "resources we also created our own duck",
    "start": "1295280",
    "end": "1301450"
  },
  {
    "text": "that allows us to manipulate routes and services in the same in much the same",
    "start": "1301450",
    "end": "1308480"
  },
  {
    "text": "way and get some amount of client consistency in terms of how we generate",
    "start": "1308480",
    "end": "1314060"
  },
  {
    "text": "patches to do rollouts we also started",
    "start": "1314060",
    "end": "1319130"
  },
  {
    "text": "to use ducks on the inside in point six so we were using the scale sub resource",
    "start": "1319130",
    "end": "1325790"
  },
  {
    "text": "for our auto scaling previously but we felt a little limited by the set of",
    "start": "1325790",
    "end": "1331160"
  },
  {
    "text": "things it exposed to us and so we actually changed using something that we",
    "start": "1331160",
    "end": "1336680"
  },
  {
    "text": "call pod scalable where we basically Specht out the pieces of the thing we're",
    "start": "1336680",
    "end": "1344630"
  },
  {
    "text": "scaling that we need to either read or mutate such as the replica count in spec and status and the selector and the pod",
    "start": "1344630",
    "end": "1353780"
  },
  {
    "text": "template spec the pod template spec is a notable thing that isn't in the scale target resource but by having it in here",
    "start": "1353780",
    "end": "1360920"
  },
  {
    "text": "we can potentially start to do things like mutate the resources block if we want to start to integrate vertical vertical pod auto scaling in the future",
    "start": "1360920",
    "end": "1367760"
  },
  {
    "text": "or read out pieces of information to do more sophisticated scheduling",
    "start": "1367760",
    "end": "1374970"
  },
  {
    "text": "I don't think we had an animation here okay all right so hopefully we have",
    "start": "1374970",
    "end": "1382559"
  },
  {
    "text": "being able to go and demonstrate and show you or at least get you excited about how",
    "start": "1382559",
    "end": "1387899"
  },
  {
    "text": "cool this is and maybe you can see some uses for yourself for this so this is not just limited the K Native one of the",
    "start": "1387899",
    "end": "1395309"
  },
  {
    "text": "things that we mentioned earlier on is having several kinds of or we talked about the different components of the K",
    "start": "1395309",
    "end": "1401549"
  },
  {
    "text": "native so we have like surveying and inventing and Bill but the other thing we also have done is we have created this repository called PKG package and",
    "start": "1401549",
    "end": "1409519"
  },
  {
    "text": "many of the tools that we have written to support the duck typing have been moved over there and you can go and use",
    "start": "1409519",
    "end": "1416519"
  },
  {
    "text": "that if you are writing controllers or if you are writing any kind of tools that might just might just want want to",
    "start": "1416519",
    "end": "1424080"
  },
  {
    "text": "go and operate on generic resources so those of you that have written a",
    "start": "1424080",
    "end": "1430889"
  },
  {
    "text": "controller or have used well typically you use use Informers of their but if",
    "start": "1430889",
    "end": "1435899"
  },
  {
    "text": "you have used kubernetes Informer's before this code looks pretty familiar",
    "start": "1435899",
    "end": "1441210"
  },
  {
    "text": "but it basically just says in this case what we do is we say let's bring in the",
    "start": "1441210",
    "end": "1446340"
  },
  {
    "text": "dynamic client from from the go client and then we introduce a typed in former",
    "start": "1446340",
    "end": "1453509"
  },
  {
    "text": "factory so notice that it's typed there and what we are doing is in this example we are using the v1 the the whit pod",
    "start": "1453509",
    "end": "1460590"
  },
  {
    "text": "that we have been talking about the partial schema so the nice thing here is that that is the that is the setting up",
    "start": "1460590",
    "end": "1468450"
  },
  {
    "text": "the informer it should look and feel very very familiar to you if you've used those before and the only thing here that is talking about the kind of thing",
    "start": "1468450",
    "end": "1475080"
  },
  {
    "text": "it watches is that GVR in this example we hard-coded that to demonstrate that",
    "start": "1475080",
    "end": "1480659"
  },
  {
    "text": "so it fits in the slide but this could obviously come from the strings like in Matt's earlier example or from conflict",
    "start": "1480659",
    "end": "1487139"
  },
  {
    "text": "maps or wherever you want to get those or it could be an object reference like in our case where we bacon that that's",
    "start": "1487139",
    "end": "1493590"
  },
  {
    "text": "why they use so much of the object references in our in our object model because then you can just read that when",
    "start": "1493590",
    "end": "1500669"
  },
  {
    "text": "you go and create the object in our controller we just read it from there and there's no knowledge of any of this",
    "start": "1500669",
    "end": "1506099"
  },
  {
    "text": "stuff in there then you tell you trap yourself an informer Lister and then you are off the races then you say",
    "start": "1506099",
    "end": "1513000"
  },
  {
    "text": "went that in formal notices something go ahead and call something so for example in the controller land you typically",
    "start": "1513000",
    "end": "1519000"
  },
  {
    "text": "have something like this where you have every concealer so the happy little reconciler is there and it is now using",
    "start": "1519000",
    "end": "1527429"
  },
  {
    "text": "the list or just like you would do if you were to go and grab that from the from the typed clients that you generate",
    "start": "1527429",
    "end": "1534210"
  },
  {
    "text": "typically and now you have this there's this this cast here that basically says",
    "start": "1534210",
    "end": "1541830"
  },
  {
    "text": "well I asked for with part objects I know they are vivant objects and you don't have to go into the tip because",
    "start": "1541830",
    "end": "1548100"
  },
  {
    "text": "you could do this also by running unstructured objects and everything else and you would have all the fun of doing",
    "start": "1548100",
    "end": "1554160"
  },
  {
    "text": "your little adjacent marshaling and everything else and you know that's fun but this is a little bit nicer I think",
    "start": "1554160",
    "end": "1559980"
  },
  {
    "text": "and more concise so we have the benefits of being able to get strong typing and",
    "start": "1559980",
    "end": "1565410"
  },
  {
    "text": "being able to go ahead and get the standard in Informer caching behavior you get out of that so so it should be",
    "start": "1565410",
    "end": "1572010"
  },
  {
    "text": "very easy to go ahead and utilize these things and strong typing until soon all",
    "start": "1572010",
    "end": "1583799"
  },
  {
    "text": "right so that that showed the informal Lister pattern this on can you hear me",
    "start": "1583799",
    "end": "1590690"
  },
  {
    "text": "yeah okay sorry so let's look at patching so this example is actually",
    "start": "1590690",
    "end": "1597299"
  },
  {
    "text": "real code that is part of cane native serving in point six I mentioned pod",
    "start": "1597299",
    "end": "1603000"
  },
  {
    "text": "scalable before and how we actually use pod scalable coming from an informer",
    "start": "1603000",
    "end": "1608490"
  },
  {
    "text": "like viel I mentioned in the previous example here we have a pod scalable it",
    "start": "1608490",
    "end": "1614250"
  },
  {
    "text": "comes in at a desired scale and should",
    "start": "1614250",
    "end": "1619260"
  },
  {
    "text": "look very familiar right we create a copy we change it in a very typed way and then we create a patch from the",
    "start": "1619260",
    "end": "1625830"
  },
  {
    "text": "difference from what we change and pass that through to the dynamic client has a patch and that is it there is no step to",
    "start": "1625830",
    "end": "1633990"
  },
  {
    "text": "write like this is all of the code we needed to generate the patch and",
    "start": "1633990",
    "end": "1640530"
  },
  {
    "text": "everything else is helper libraries a couple other useful tools type",
    "start": "1640530",
    "end": "1648420"
  },
  {
    "text": "assertions so one of the things we wanted to do is make sure that as we started to produce these contracts like",
    "start": "1648420",
    "end": "1654300"
  },
  {
    "text": "addressable as feely mentioned earlier as the contract between serving and",
    "start": "1654300",
    "end": "1659550"
  },
  {
    "text": "inventing we wanted to make sure that things like became the servings service object implement that and so this this",
    "start": "1659550",
    "end": "1666990"
  },
  {
    "text": "basically just as a simple old trick where it populates all of the fields in the addressable and then make sure it",
    "start": "1666990",
    "end": "1673020"
  },
  {
    "text": "can round-trip through the service resource without dropping anything to",
    "start": "1673020",
    "end": "1678809"
  },
  {
    "text": "make sure all the fields are there and in the right spot etc another really",
    "start": "1678809",
    "end": "1684570"
  },
  {
    "text": "useful thing when you're dealing with duck types and thanks to Paul Morey for",
    "start": "1684570",
    "end": "1690090"
  },
  {
    "text": "pointing us at this is aggregated cluster rolls so in this case you can",
    "start": "1690090",
    "end": "1695280"
  },
  {
    "text": "see the role that we give to the serving controller and it uses a selector that",
    "start": "1695280",
    "end": "1703410"
  },
  {
    "text": "says a serving controller true and if we want to integrate with build there's no",
    "start": "1703410",
    "end": "1709770"
  },
  {
    "text": "knowledge baked into the code or the default rules that says hey I know how to speak to Bill but you can glue them",
    "start": "1709770",
    "end": "1716670"
  },
  {
    "text": "together by granting access by just creating this cluster rule that gets",
    "start": "1716670",
    "end": "1722580"
  },
  {
    "text": "pulled into the selector and as I mentioned before when Tecton became a thing we could add it simply by gluing",
    "start": "1722580",
    "end": "1730110"
  },
  {
    "text": "in another role that just becomes part of this selector so yeah ok one more",
    "start": "1730110",
    "end": "1739050"
  },
  {
    "text": "thing so in K native we mentioned earlier we",
    "start": "1739050",
    "end": "1745770"
  },
  {
    "text": "aim to be loosely coupled at the top but also we talked about being pluggable on",
    "start": "1745770",
    "end": "1751020"
  },
  {
    "text": "at the bottom so loosely coupled at the top right is via the duct piping but we",
    "start": "1751020",
    "end": "1759420"
  },
  {
    "text": "didn't really talk that much today about being pluggable at the bottom so there",
    "start": "1759420",
    "end": "1764550"
  },
  {
    "text": "was actually a secret cameo our presentation our demo that last",
    "start": "1764550",
    "end": "1770190"
  },
  {
    "text": "serving demo where we loaded up the service that said hey coop gun was",
    "start": "1770190",
    "end": "1775320"
  },
  {
    "text": "actually running ambassador so the plug ability at the bottom enables us to you know replace subsystems joe joe burnett",
    "start": "1775320",
    "end": "1782520"
  },
  {
    "text": "and mark gave a fantastic talk last last",
    "start": "1782520",
    "end": "1788070"
  },
  {
    "text": "con yeah last december on doing this with the autoscaler networking is another place we can do it and we have a",
    "start": "1788070",
    "end": "1793770"
  },
  {
    "text": "number of places we do this on a venting so we've really just scratched the surface of the extensibility within a",
    "start": "1793770",
    "end": "1800340"
  },
  {
    "text": "native but yep so a little surprise for you",
    "start": "1800340",
    "end": "1805669"
  },
  {
    "text": "okay so at this point we are ready for questions and we're gonna put up a wall",
    "start": "1805669",
    "end": "1812580"
  },
  {
    "text": "of links while we answer questions",
    "start": "1812580",
    "end": "1817370"
  },
  {
    "text": "[Applause]",
    "start": "1817810",
    "end": "1825970"
  },
  {
    "text": "it's just a quick reminder to rate the session at the end no questions",
    "start": "1830390",
    "end": "1835600"
  },
  {
    "text": "someone's got to have one",
    "start": "1835600",
    "end": "1839110"
  },
  {
    "text": "all right okay good oils stickers I see one",
    "start": "1845900",
    "end": "1850780"
  },
  {
    "text": "I so I was wondering when there's D ambassador kind of ingress control are",
    "start": "1860299",
    "end": "1865580"
  },
  {
    "text": "gonna be available instead of his style for general ability oh sorry the Ambassador integration here so I think",
    "start": "1865580",
    "end": "1872929"
  },
  {
    "text": "documented today we have sto and I believe we have glue integration yeah the ambassador integration we showed",
    "start": "1872929",
    "end": "1878779"
  },
  {
    "text": "here is a POC that been browning put together although we were talking to them earlier on the floor about actually",
    "start": "1878779",
    "end": "1886639"
  },
  {
    "text": "getting proper integration together so I I don't have a date for you but we want",
    "start": "1886639",
    "end": "1893869"
  },
  {
    "text": "to talk to them about adding proper support but okay I didn't link to Ben's",
    "start": "1893869",
    "end": "1903169"
  },
  {
    "text": "prototype but it's I can send you a pointer if you're interested yeah also",
    "start": "1903169",
    "end": "1908799"
  },
  {
    "text": "for all the things we don't have links up here for we were very active on slack so if you get a slack that came in if",
    "start": "1908799",
    "end": "1914389"
  },
  {
    "text": "that dev I believe that generates an invite for you and you can log in and",
    "start": "1914389",
    "end": "1921459"
  },
  {
    "text": "chat with us these lights are winding",
    "start": "1921459",
    "end": "1930789"
  },
  {
    "text": "all right thanks everyone Scott has K natives sick a whole bunch of stickers in the back",
    "start": "1932270",
    "end": "1939620"
  },
  {
    "text": "[Applause]",
    "start": "1939750",
    "end": "1943529"
  }
]