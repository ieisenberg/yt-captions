[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "alright let's get started so our talk is on the audio is a little bit I evolving",
    "start": "30",
    "end": "7170"
  },
  {
    "text": "the kubernetes ingress API is the GA and a beyond I'm Bowie and this is Chris and",
    "start": "7170",
    "end": "12230"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "they're kind of an overview of our talk first we'll talk about ingress GA what the current state is and what changes we",
    "start": "12230",
    "end": "18180"
  },
  {
    "text": "are making towards bringing it to beta and then the second part of the talk is how we're evolving into the next set of",
    "start": "18180",
    "end": "23760"
  },
  {
    "text": "api's and this is still an ongoing process so we're gonna talk generally about the goals and then kind of some",
    "start": "23760",
    "end": "29970"
  },
  {
    "text": "interesting aspects of API design actually that would be relevant for other resources that we are seeing as",
    "start": "29970",
    "end": "35399"
  },
  {
    "text": "part of designing this API so Chris thanks so currently ingress exists as",
    "start": "35399",
    "end": "42660"
  },
  {
    "start": "38000",
    "end": "38000"
  },
  {
    "text": "like a big bundle of kubernetes service back in mappings and rules and then",
    "start": "42660",
    "end": "47850"
  },
  {
    "text": "related TOS config and this has been pretty good for the short term you know it ensures a lot of flexibility for",
    "start": "47850",
    "end": "54809"
  },
  {
    "text": "people and the majority of people according to the survey that we did last",
    "start": "54809",
    "end": "61800"
  },
  {
    "text": "year a lot of people are using it successfully with the myriad of controllers you know a large majority of",
    "start": "61800",
    "end": "67560"
  },
  {
    "text": "people are using something off the shelf like nginx ingress or using that in",
    "start": "67560",
    "end": "74600"
  },
  {
    "text": "operation with whatever's provided by their cloud provider mixing and matching and then the side effect of having such",
    "start": "74600",
    "end": "82770"
  },
  {
    "text": "a portable API unfortunately is that almost every one of your ingress types has like a ton of dangling annotations",
    "start": "82770",
    "end": "89130"
  },
  {
    "text": "all this is because your ingress provider provides substantially more",
    "start": "89130",
    "end": "95070"
  },
  {
    "text": "features than what our API Express is which is good if you have some customized stuff but bad as far as",
    "start": "95070",
    "end": "102140"
  },
  {
    "text": "forcing a lot of that to the user to make sure that they belong there or validate themselves so kind of a few of",
    "start": "102140",
    "end": "114090"
  },
  {
    "start": "111000",
    "end": "111000"
  },
  {
    "text": "the things that we want to do for the v1 API to bring it up to speed with a lot of the things that we've seen either",
    "start": "114090",
    "end": "119909"
  },
  {
    "text": "done in annotations or that just people have been expecting according to our survey are summarized here and there's",
    "start": "119909",
    "end": "126119"
  },
  {
    "text": "basically five or so of these and the reason why we want to push these into the v1 instead of doing something like",
    "start": "126119",
    "end": "131700"
  },
  {
    "text": "another v1 beta 1 is because people have been using this since that's kind of been introduced",
    "start": "131700",
    "end": "137879"
  },
  {
    "text": "it's been there for release after release and it's always remained in beta in fact until a few releases ago it was",
    "start": "137879",
    "end": "145109"
  },
  {
    "text": "still in the extensions API so one of the first things we did was remove that",
    "start": "145109",
    "end": "150120"
  },
  {
    "text": "out of there into its own API and now we want to add in what we think will complete it to bring it to GA before we",
    "start": "150120",
    "end": "156359"
  },
  {
    "text": "talk about a lot of the big things that we want to do evolution and v2 stuff the",
    "start": "156359",
    "end": "164370"
  },
  {
    "start": "164000",
    "end": "164000"
  },
  {
    "text": "first thing we're gonna do is just a simple rename from back-end to default back end it was unfortunately named",
    "start": "164370",
    "end": "170340"
  },
  {
    "text": "backends but in the comments it really imply to us that you fought back in nobody read the comments bottom wonder",
    "start": "170340",
    "end": "177150"
  },
  {
    "text": "of if I set my ingress such that nginx should be handling this one and I wanted",
    "start": "177150",
    "end": "183900"
  },
  {
    "text": "neither worked what would happen to it so in this example this is a rename",
    "start": "183900",
    "end": "190319"
  },
  {
    "text": "we'll make that a lot more clear where that's going to go so I already had this open PR for it but we're going to be",
    "start": "190319",
    "end": "198329"
  },
  {
    "text": "combining a lot of like the whole API into one so you can take a look at it but this is kind of like the smallest",
    "start": "198329",
    "end": "204150"
  },
  {
    "text": "change of making the next big one comes from path based prefixes especially what",
    "start": "204150",
    "end": "212519"
  },
  {
    "start": "206000",
    "end": "206000"
  },
  {
    "text": "we've done is it was just like a string that was placed in your path thing affected from the comments that this",
    "start": "212519",
    "end": "218819"
  },
  {
    "text": "would be a regular expression following standard posted above in reality none of",
    "start": "218819",
    "end": "224669"
  },
  {
    "text": "the ingress providers actually took that and ran with it they either had an",
    "start": "224669",
    "end": "230430"
  },
  {
    "text": "implementation that expected things in re2 format from Google or other",
    "start": "230430",
    "end": "236549"
  },
  {
    "text": "different POSIX standards we could take a look at that ingress nginx wife a five",
    "start": "236549",
    "end": "242219"
  },
  {
    "text": "issue or out of a comparison of all of the different things how people treated",
    "start": "242219",
    "end": "247799"
  },
  {
    "text": "them well one of the goals was to push a little bit more validation or other than just like it this opaque",
    "start": "247799",
    "end": "255918"
  },
  {
    "text": "good so to accomplish this we're we're",
    "start": "260019",
    "end": "267200"
  },
  {
    "text": "moving forward with a path type gonna be three different path types the defaults",
    "start": "267200",
    "end": "273110"
  },
  {
    "text": "gonna be implement implementation specific which is the way it is today so however your current ingress controller",
    "start": "273110",
    "end": "279560"
  },
  {
    "text": "is treating this string and that I concede you to happen and the other",
    "start": "279560",
    "end": "285200"
  },
  {
    "text": "options that we're adding in is one of an exact type and then a prefix match",
    "start": "285200",
    "end": "291980"
  },
  {
    "text": "type that's gonna go in this path type field here I have a couple of examples",
    "start": "291980",
    "end": "297290"
  },
  {
    "text": "to make this a little more clear so exact is exactly exact ABC matches us",
    "start": "297290",
    "end": "305480"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "the path of ABC so we have a good match on that folks can I ask to move to the",
    "start": "305480",
    "end": "314030"
  },
  {
    "text": "center of the Rose there's people coming in just make it easier for them to sit",
    "start": "314030",
    "end": "320050"
  },
  {
    "text": "this one better",
    "start": "320050",
    "end": "323379"
  },
  {
    "text": "all right can everybody hear me okay let's work okay great",
    "start": "326639",
    "end": "331830"
  },
  {
    "text": "excellent okay so exact is exactly exact so ABC matches ABC ABC does not match",
    "start": "331830",
    "end": "339039"
  },
  {
    "text": "CBA pretty obvious where we have a little bit more flexibility in the trailing slash is when it comes to the",
    "start": "339039",
    "end": "347080"
  },
  {
    "text": "prefix matching so in here you know we're allowing a path in your ingress to",
    "start": "347080",
    "end": "352599"
  },
  {
    "text": "be the forward slash and then whatever path is requested after that by our user",
    "start": "352599",
    "end": "357729"
  },
  {
    "text": "is going to match same thing happens with ignoring the trailing slash ABC is",
    "start": "357729",
    "end": "364270"
  },
  {
    "text": "still going to match request path that you have been there for ABC v4 slash",
    "start": "364270",
    "end": "370020"
  },
  {
    "text": "where it doesn't work is going to be the final example there where a four slash",
    "start": "370020",
    "end": "376419"
  },
  {
    "text": "is not separating that BB and ZZ but we do include the sub path matching so a BB",
    "start": "376419",
    "end": "385659"
  },
  {
    "text": "one specified and requested of the finals you see that's going to match the",
    "start": "385659",
    "end": "394659"
  },
  {
    "start": "393000",
    "end": "393000"
  },
  {
    "text": "next big thing that's come up and you'll find in almost any of the annotations is the host name while parting this isn't",
    "start": "394659",
    "end": "402189"
  },
  {
    "text": "going to be a similar matching schema as before and what we're looking at here is",
    "start": "402189",
    "end": "407580"
  },
  {
    "text": "wildcards on the first dns label there so anything separated by the dot there",
    "start": "407580",
    "end": "413560"
  },
  {
    "text": "so just a couple examples on this one the first part we're matching foo and",
    "start": "413560",
    "end": "419279"
  },
  {
    "text": "bar in this case the wildcard matches that first set of labels we're good second one does not because we have",
    "start": "419279",
    "end": "426610"
  },
  {
    "text": "before our foo in this match we have a label so if we strip off that first label we still don't have food combating",
    "start": "426610",
    "end": "434439"
  },
  {
    "text": "bar dot foo calm and then the final one similar but the inverse we only have",
    "start": "434439",
    "end": "439959"
  },
  {
    "text": "food calm being requested but our match for this one includes something that has",
    "start": "439959",
    "end": "445779"
  },
  {
    "text": "the first label on a the next one is another thing that is",
    "start": "445779",
    "end": "453340"
  },
  {
    "start": "451000",
    "end": "451000"
  },
  {
    "text": "existed in imitation for a while it's the ingress class this is basically allowing you to plumb through special",
    "start": "453340",
    "end": "460060"
  },
  {
    "text": "options for your ingress controller one example that comes up is having different tiers if you're a cloud",
    "start": "460060",
    "end": "465520"
  },
  {
    "text": "provider like having your bronze level or your silver level and passing different options maybe even you deploy",
    "start": "465520",
    "end": "472450"
  },
  {
    "text": "the nginx ingress control over your bronze or the cloud provider specific",
    "start": "472450",
    "end": "478390"
  },
  {
    "text": "wand that's got you know global load balancing options for your your higher",
    "start": "478390",
    "end": "483760"
  },
  {
    "text": "tier so that's where I'm specifying being able to specify your controller with different parameters in between",
    "start": "483760",
    "end": "490540"
  },
  {
    "text": "that's really gonna help Val and then",
    "start": "490540",
    "end": "495850"
  },
  {
    "start": "494000",
    "end": "494000"
  },
  {
    "text": "the the next big one is these back-end types so for awhile we've only really",
    "start": "495850",
    "end": "501070"
  },
  {
    "text": "allowed you to have backends reflected as actual kubernetes services and one of",
    "start": "501070",
    "end": "507610"
  },
  {
    "text": "the big things that comes up with it a lot is how do we open that up and this has come up in some of the discussions",
    "start": "507610",
    "end": "513909"
  },
  {
    "text": "you see in maybe around v2 people want to be sure that if I don't have something that's represented one to one",
    "start": "513910",
    "end": "519039"
  },
  {
    "text": "with a kubernetes type that we don't break that but we still want to allow just a bit more flexibility though with",
    "start": "519040",
    "end": "527470"
  },
  {
    "text": "validation so this is what the API is going to look like well this is the",
    "start": "527470",
    "end": "533590"
  },
  {
    "text": "sketch of it for now as you see we preserve the service type up here in the top under service and that's going to be",
    "start": "533590",
    "end": "541210"
  },
  {
    "text": "a regular kubernetes service and this is a must case so implementers must support",
    "start": "541210",
    "end": "547810"
  },
  {
    "start": "544000",
    "end": "544000"
  },
  {
    "text": "kubernetes services if they want to provide anything after that that's where this resource example comes in here and",
    "start": "547810",
    "end": "555300"
  },
  {
    "text": "one of the big things that comes up quite a lot is how do i express something like direct this to a storage",
    "start": "555300",
    "end": "562960"
  },
  {
    "text": "bucket so for I think example this is the second example here and the custom",
    "start": "562960",
    "end": "569260"
  },
  {
    "start": "566000",
    "end": "566000"
  },
  {
    "text": "resource is not like a working example but we envision you being able to plug this in through a sort of CRD like",
    "start": "569260",
    "end": "576070"
  },
  {
    "text": "interface so in the second custom resource implement right there reason",
    "start": "576070",
    "end": "581380"
  },
  {
    "text": "the API group reflecting your CRD version the kind for according to your CRD",
    "start": "581380",
    "end": "587769"
  },
  {
    "text": "standards and a name for it something really simple but still preserving that",
    "start": "587769",
    "end": "592959"
  },
  {
    "text": "thing that you used to on the left and this is the default will you be able to",
    "start": "592959",
    "end": "598060"
  },
  {
    "text": "combine these both together no you will not that'll fail the validation also you need to have one or the other as far as",
    "start": "598060",
    "end": "608050"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "the timeline for these things we were trying to be pretty aggressive about this in the beginning just to really get",
    "start": "608050",
    "end": "613779"
  },
  {
    "text": "the things out there unfortunately we didn't want to kind of half-baked things like put in back in types and the rename",
    "start": "613779",
    "end": "620920"
  },
  {
    "text": "to go into 1:17 and then the rest to go into 1:18 would that feature gated or",
    "start": "620920",
    "end": "627310"
  },
  {
    "text": "something and it kind of makes a scope creep a little more difficult well we",
    "start": "627310",
    "end": "633970"
  },
  {
    "text": "have done so far is in 114 we moved everything out from under the extensions",
    "start": "633970",
    "end": "639160"
  },
  {
    "text": "repository into the networking kto so when you create ingress now you should",
    "start": "639160",
    "end": "644320"
  },
  {
    "text": "be using that new API it's the same API that we have like Network policy is",
    "start": "644320",
    "end": "650589"
  },
  {
    "text": "under for a while now and we made that mailing list announcement that extensions is going to be deprecated",
    "start": "650589",
    "end": "658019"
  },
  {
    "text": "1:15 we work to get all of the documentation examples and code for",
    "start": "658019",
    "end": "663870"
  },
  {
    "text": "ingress controllers that are currently under the kubernetes org which includes ingress nginx and ingress GCE the GCE",
    "start": "663870",
    "end": "671769"
  },
  {
    "text": "release for that controller that incorporates the use of this new API or right there one bus 700 ingress nginx",
    "start": "671769",
    "end": "679180"
  },
  {
    "text": "was utilizing these new things and v025 there one thing to know is that",
    "start": "679180",
    "end": "687029"
  },
  {
    "text": "alejandro was very specific that we're not disallowing you from using the extensions for a few releases so if",
    "start": "687029",
    "end": "694390"
  },
  {
    "text": "you're using something that wasn't 114 when he released this you can still use the extensions things before that then",
    "start": "694390",
    "end": "703839"
  },
  {
    "text": "we have a big jump to a release that hasn't even started yet because you said we're working through the details on how",
    "start": "703839",
    "end": "711010"
  },
  {
    "text": "quickly we want to start merging the stuff in so we're expecting that giant PR from my personal repository",
    "start": "711010",
    "end": "720200"
  },
  {
    "text": "will be upstream early next release wrap scott from google bowie and myself have",
    "start": "720200",
    "end": "726320"
  },
  {
    "text": "been working on those fact changes so expected those are going to 1:18 then a",
    "start": "726320",
    "end": "732920"
  },
  {
    "text": "similar process to the beta api's will update all of the implementations doing",
    "start": "732920",
    "end": "738680"
  },
  {
    "text": "this in our kubernetes like laying 119 and then shut off writing to the",
    "start": "738680",
    "end": "745040"
  },
  {
    "text": "extensions thing which as we mentioned was deprecated in 1:14 such as that you",
    "start": "745040",
    "end": "750620"
  },
  {
    "text": "can't like write to it then just because we want to leave it open as far as how",
    "start": "750620",
    "end": "757070"
  },
  {
    "text": "quickly will deprecated ingress from the beta api's i put on one layer 1.2 to be",
    "start": "757070",
    "end": "763220"
  },
  {
    "text": "specified now to talk about the future",
    "start": "763220",
    "end": "769150"
  },
  {
    "text": "one thing about the path since we have a large user base here is that it's definitely the case that you will need",
    "start": "769150",
    "end": "774590"
  },
  {
    "text": "to get off of the extensions API so that's the API group extensions /b 1",
    "start": "774590",
    "end": "780950"
  },
  {
    "text": "beta 1 and transition to networking and then when the GA API comes out we're going to also have to do that transition",
    "start": "780950",
    "end": "787700"
  },
  {
    "text": "so that that thing you will have to rewrite in your external configuration so just be aware of that although there",
    "start": "787700",
    "end": "793790"
  },
  {
    "text": "will be many releases where they will interoperate so in terms of the designing a new API for the l4 l7 space",
    "start": "793790",
    "end": "801560"
  },
  {
    "start": "797000",
    "end": "797000"
  },
  {
    "text": "there are a couple of considerations and we kind of have to look at the evolving landscape of how all of these proxy and",
    "start": "801560",
    "end": "809150"
  },
  {
    "text": "load balancing providers that's been going on in the past few years so here I have diagrammatically sort of like a",
    "start": "809150",
    "end": "815660"
  },
  {
    "text": "classification a rough classification of various providers there's the cloud elby's which is you know google amazon",
    "start": "815660",
    "end": "821780"
  },
  {
    "text": "as your and so forth there's the middle proxy providers which are these are off-the-shelf software such as ninja",
    "start": "821780",
    "end": "827900"
  },
  {
    "text": "Nexon voyage a proxy and then finally on the top we have transparent proxies so this is some sidecar based proxying or",
    "start": "827900",
    "end": "835040"
  },
  {
    "text": "maybe even q proxy and in terms of if you look at how the early kubernetes cluster and the sort of the user",
    "start": "835040",
    "end": "841190"
  },
  {
    "text": "population that it was targeting these early resource designs were self sort of self service oriented so you had an",
    "start": "841190",
    "end": "847370"
  },
  {
    "text": "empowered developer who could self-service the clusters were a few tenants and you know the Empowered dev",
    "start": "847370",
    "end": "853550"
  },
  {
    "text": "would own the whole deployment they would define the application they would define the service they would expose on the internet now when we look at the use",
    "start": "853550",
    "end": "860839"
  },
  {
    "text": "cases of kubernetes has become much more diverse and in fact the clusters have become a lot bigger we have multiple",
    "start": "860839",
    "end": "867139"
  },
  {
    "text": "teams roles in interactions and potentially multiple coexisting implementations so the goals for the",
    "start": "867139",
    "end": "873860"
  },
  {
    "start": "873000",
    "end": "873000"
  },
  {
    "text": "evolution as we see it are these three things so better model the personas and",
    "start": "873860",
    "end": "879230"
  },
  {
    "text": "roles involved with services and load-balancing capture some of the complexity that we're seeing in these multi tenant clusters support modern",
    "start": "879230",
    "end": "886819"
  },
  {
    "text": "load balancing features while maintaining portability so this was like when we set out the ingress survey in",
    "start": "886819",
    "end": "891889"
  },
  {
    "text": "2018 we got back to contradictory sort of responses one of them was that we",
    "start": "891889",
    "end": "897439"
  },
  {
    "text": "wanted to be portable the other one was that I don't hide me from my features I really want to use these features so",
    "start": "897439",
    "end": "904089"
  },
  {
    "text": "portability or maybe in the brackets predictability can the user predictably",
    "start": "904089",
    "end": "909889"
  },
  {
    "text": "use something and know when it's portable and when it's not and then finally as this is like a pretty mature",
    "start": "909889",
    "end": "917779"
  },
  {
    "text": "space and in terms of some of the technologies have standard mechanisms for extension because we know that the",
    "start": "917779",
    "end": "923209"
  },
  {
    "text": "initial API that we're going to be putting into kubernetes probably won't be addressing all of the different use",
    "start": "923209",
    "end": "928670"
  },
  {
    "text": "cases how do you grow the API or baby maybe even extended because kubernetes",
    "start": "928670",
    "end": "933949"
  },
  {
    "text": "will never go in some direction but still give the user some way of using that feature so the status all of this",
    "start": "933949",
    "end": "943519"
  },
  {
    "start": "941000",
    "end": "941000"
  },
  {
    "text": "talk is it's in the proposal stage and really one of the if you remember one thing from this section of the talk it's",
    "start": "943519",
    "end": "950389"
  },
  {
    "text": "that this is an ongoing proposal and we're looking for users and implementers to really contribute to the proposal so",
    "start": "950389",
    "end": "957500"
  },
  {
    "text": "the proposal is in the API is in a proposal stage so many things can change and for this presentation I'm going to",
    "start": "957500",
    "end": "963889"
  },
  {
    "text": "describe how the goals map to API design and then give a sense of the overall object model on how it works",
    "start": "963889",
    "end": "969800"
  },
  {
    "text": "at least how we see it right now and highlight some interesting problems and approaches and there of course are many",
    "start": "969800",
    "end": "975800"
  },
  {
    "text": "open questions so here are the goals for evolution from before and then here's",
    "start": "975800",
    "end": "981709"
  },
  {
    "start": "977000",
    "end": "977000"
  },
  {
    "text": "how we see it map to concrete sort of aspects of kubernetes API design so when we were",
    "start": "981709",
    "end": "988320"
  },
  {
    "text": "talking about modeling personas and roles what that really boils down to is how do you split up the resource model",
    "start": "988320",
    "end": "994800"
  },
  {
    "text": "and then in terms of roles how does this map to kubernetes are back the second",
    "start": "994800",
    "end": "1000200"
  },
  {
    "text": "piece is to support portability and predictability now we are talking about perhaps defining levels of support",
    "start": "1000200",
    "end": "1008530"
  },
  {
    "text": "specification and conformance for the various implementers out there and then finally the last one is again a resource",
    "start": "1008530",
    "end": "1015800"
  },
  {
    "text": "modeling issue and then sort of maybe we can use something like polymorphism to sort of get the flexibility we want so",
    "start": "1015800",
    "end": "1023330"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "going into a little bit more about personas and roles so as I said before before we had just the empowered",
    "start": "1023330",
    "end": "1030410"
  },
  {
    "text": "developer who is self-serving everything but what we're finding in a lot of use cases is actually there's quite a split",
    "start": "1030410",
    "end": "1037220"
  },
  {
    "text": "into teams potentially right not every use case may be like this but a split",
    "start": "1037220",
    "end": "1042438"
  },
  {
    "text": "into these three general roles the first is the infrastructure provider so this is essentially for example the cloud",
    "start": "1042439",
    "end": "1049250"
  },
  {
    "text": "provider provides the infrastructure for cluster creation eg the cloud provider may be your the internal PA's team the",
    "start": "1049250",
    "end": "1056450"
  },
  {
    "text": "second one is the cluster operator so or net ops or sre and the key idea behind",
    "start": "1056450",
    "end": "1062330"
  },
  {
    "text": "this role is that they manage the cluster overall they manage policies across the cluster or for example for",
    "start": "1062330",
    "end": "1068180"
  },
  {
    "text": "net ops they manage a policy across the whole network they're responsible for overall policies one of the canonical",
    "start": "1068180",
    "end": "1075500"
  },
  {
    "text": "examples is which services are allowed to be exposed to the Internet finally we have the empowered developer",
    "start": "1075500",
    "end": "1081560"
  },
  {
    "text": "who builds the services defines the applications really wants to define for example traffic routing and how their",
    "start": "1081560",
    "end": "1087530"
  },
  {
    "text": "services are routed so in terms of modeling we can look at sort of the initial ingress resource model so how is",
    "start": "1087530",
    "end": "1094400"
  },
  {
    "start": "1089000",
    "end": "1089000"
  },
  {
    "text": "this model the ingress so ingress is a self service model now we're adding ingress class an ingress class is",
    "start": "1094400",
    "end": "1100550"
  },
  {
    "text": "basically something that we expect to be controlled by the infrastructure provider right the infrastructure",
    "start": "1100550",
    "end": "1106250"
  },
  {
    "text": "provider will provide various kinds of LBS that then can be instantiated by the",
    "start": "1106250",
    "end": "1111620"
  },
  {
    "text": "application developer now the application developer actually controls both the thing that defines the service the",
    "start": "1111620",
    "end": "1120330"
  },
  {
    "text": "service routing and then how the surface is exposed in terms of evolution how",
    "start": "1120330",
    "end": "1126630"
  },
  {
    "start": "1125000",
    "end": "1125000"
  },
  {
    "text": "does this map how do we make a resource model that kind of breaks up these roles so you can have different permissions so",
    "start": "1126630",
    "end": "1132990"
  },
  {
    "text": "we see and again these names are early but these have some resonance at least",
    "start": "1132990",
    "end": "1138090"
  },
  {
    "text": "give them talking to some people if you have a better idea for a name please let me know so Gateway class will function",
    "start": "1138090",
    "end": "1144960"
  },
  {
    "text": "in the same way that an ingress class does it's sort of created by the infrastructure provider and then we have",
    "start": "1144960",
    "end": "1151500"
  },
  {
    "text": "a new resource called gateway which defines an instantiation of a given LB by breaking into a new resource what we",
    "start": "1151500",
    "end": "1157590"
  },
  {
    "text": "have is basically a way for you to give different are bat permissions to the creation of a gateway versus the rest of",
    "start": "1157590",
    "end": "1165300"
  },
  {
    "text": "the application which is the routing and the services so we have gateway class gateway routes and service they kind of",
    "start": "1165300",
    "end": "1172800"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "go into this and reiterate in this more detail it's sort of like a semi UML dot diagram of the different resources and",
    "start": "1172800",
    "end": "1180330"
  },
  {
    "text": "for example gateway class will be used by the infrastructure provider to say",
    "start": "1180330",
    "end": "1187080"
  },
  {
    "text": "okay in your cluster you can provide these kinds of load balancers in this",
    "start": "1187080",
    "end": "1192720"
  },
  {
    "text": "example on a PTO cloud you have an Internet elbe which allows people to",
    "start": "1192720",
    "end": "1197820"
  },
  {
    "text": "expose things through the internet and you have a private elbe which you just just expose to your local VPC now next",
    "start": "1197820",
    "end": "1205800"
  },
  {
    "text": "you have from the gateway class you go to the Gateway which is sort of the instantiation of the elbe and then this",
    "start": "1205800",
    "end": "1213300"
  },
  {
    "text": "is tied to than the actual application routing and the application which is the surface so let's look at how this MA",
    "start": "1213300",
    "end": "1221520"
  },
  {
    "start": "1220000",
    "end": "1220000"
  },
  {
    "text": "maps into the team role separation so in the maximally separated regime you have",
    "start": "1221520",
    "end": "1228270"
  },
  {
    "text": "infrastructure provider is going to provide a gateway class maybe the net ops controls what kind of gateways are",
    "start": "1228270",
    "end": "1234210"
  },
  {
    "text": "instantiated and then the application developer defines their application and must coordinate with the net ops to kind",
    "start": "1234210",
    "end": "1240300"
  },
  {
    "text": "of expose their application you could have a self-service gateway for example you imagine that for some situations a",
    "start": "1240300",
    "end": "1246960"
  },
  {
    "text": "private elbe could be fine like you could let the developer create these things so then you will let the developer provision",
    "start": "1246960",
    "end": "1254310"
  },
  {
    "text": "gateways themselves so they could actually provision this whole chain and then finally if it's fully self-service",
    "start": "1254310",
    "end": "1260070"
  },
  {
    "text": "you may even say the application developer can create any in cluster",
    "start": "1260070",
    "end": "1265730"
  },
  {
    "text": "infrastructure so they can have a gateway class of nginx and then also create the gateway at HP route and so",
    "start": "1265730",
    "end": "1271470"
  },
  {
    "text": "forth so this is sort of lets you control and size the kind of",
    "start": "1271470",
    "end": "1277260"
  },
  {
    "text": "self-service and team roles that you could possibly expect now in terms of",
    "start": "1277260",
    "end": "1282270"
  },
  {
    "start": "1281000",
    "end": "1281000"
  },
  {
    "text": "designing these resources there is various design challenges for example we know that among the Endres controllers",
    "start": "1282270",
    "end": "1288960"
  },
  {
    "text": "there are very deployment patterns and then we talked about a little bit about how the roles and cooperating resources",
    "start": "1288960",
    "end": "1294480"
  },
  {
    "text": "work and then of course portability extensibility and status so in terms of Gateway deployment model what's",
    "start": "1294480",
    "end": "1300720"
  },
  {
    "start": "1299000",
    "end": "1299000"
  },
  {
    "text": "interesting to understand about this whole schema is that if you have all these three pieces gateway class HP",
    "start": "1300720",
    "end": "1307800"
  },
  {
    "text": "route and service this in of themselves doesn't do anything they're sort of defining configuration and it's really",
    "start": "1307800",
    "end": "1313830"
  },
  {
    "text": "the gateway that's kind of wires everything up and when you wire everything up with the Gateway then the",
    "start": "1313830",
    "end": "1319680"
  },
  {
    "text": "controller then could configure a cloud lb or Gateway could instantiate a proxy",
    "start": "1319680",
    "end": "1325410"
  },
  {
    "text": "instance in the cluster gateway or could actually merge gateways together into a configuration and all of these are valid",
    "start": "1325410",
    "end": "1331730"
  },
  {
    "text": "implementations of this model but the key thing is that the Gateway will be the life cycle will manage the light we",
    "start": "1331730",
    "end": "1339420"
  },
  {
    "text": "want to one with the life cycle of the load balancer for example you could merge all of them together and reload",
    "start": "1339420",
    "end": "1344760"
  },
  {
    "text": "the configuration now another interesting thing is how do you handle the relationship between a gateway and a",
    "start": "1344760",
    "end": "1351840"
  },
  {
    "text": "route so we've talked to a wide range of users and implementers and actually",
    "start": "1351840",
    "end": "1357090"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "we've found that depending on your situation you either want to have a self-service gateway or maybe you want",
    "start": "1357090",
    "end": "1362820"
  },
  {
    "text": "to have a self-service route and sort of the relationship is actually in both directions you want control in some",
    "start": "1362820",
    "end": "1368670"
  },
  {
    "text": "cases in one direction versus the other how do you design that into a kubernetes api well first let's take a look at what",
    "start": "1368670",
    "end": "1375360"
  },
  {
    "text": "our back gives you so our back stands for role based authentication control",
    "start": "1375360",
    "end": "1382280"
  },
  {
    "text": "you guys know better than me but it really it revolves around four concepts",
    "start": "1382280",
    "end": "1388220"
  },
  {
    "text": "there's a user a role a resource and a verb and how this sort of to understand",
    "start": "1388220",
    "end": "1393620"
  },
  {
    "text": "it is really reading this sentence that says Alice can act as a cluster operator with the permission to update the",
    "start": "1393620",
    "end": "1398930"
  },
  {
    "text": "configuration of a gateway so Alice is a role user who can act as a role cluster",
    "start": "1398930",
    "end": "1404780"
  },
  {
    "text": "operator and they have a permission to execute a verb which is in this case update and then they have a resource",
    "start": "1404780",
    "end": "1410870"
  },
  {
    "text": "that they're operating on and in all kubernetes this is the model right you",
    "start": "1410870",
    "end": "1416240"
  },
  {
    "text": "have resources you have verbs which is sort of the rest of stuff read-modify-write we update create and",
    "start": "1416240",
    "end": "1424520"
  },
  {
    "text": "then you have the roles and users so what this actually implies is that if you want to implement this",
    "start": "1424520",
    "end": "1430550"
  },
  {
    "text": "bi-directional relationship you really need to split resource boundaries based",
    "start": "1430550",
    "end": "1435650"
  },
  {
    "text": "on responsibilities because currently our back does not let you set our back on sort of smaller pieces of the",
    "start": "1435650",
    "end": "1442430"
  },
  {
    "text": "configuration modulo sub resources but sub resources are currently pretty hard to implement however if you want a",
    "start": "1442430",
    "end": "1448580"
  },
  {
    "text": "handshake actually you need to put the link on both sides of the resource so the most natural modeling is to actually",
    "start": "1448580",
    "end": "1454190"
  },
  {
    "text": "have explicit double-sided links from a gateway to a route and then from a route to a gateway so if you look at the API",
    "start": "1454190",
    "end": "1460970"
  },
  {
    "text": "sketch you'll see that actually there's this explicit link in either direction and that's because there are use cases",
    "start": "1460970",
    "end": "1466070"
  },
  {
    "text": "for control from either side so for example you can protect who can use a",
    "start": "1466070",
    "end": "1471710"
  },
  {
    "text": "given gateway you can have self-service attachment and then some users want to control who can export a route and so forth now in terms of portability this",
    "start": "1471710",
    "end": "1480590"
  },
  {
    "start": "1478000",
    "end": "1478000"
  },
  {
    "text": "has historically not been a thing in kubernetes but we kind of envisioned a sort of nested circle of how portable",
    "start": "1480590",
    "end": "1489830"
  },
  {
    "text": "something is so at the core is going to be a hundred percent portable so any",
    "start": "1489830",
    "end": "1495080"
  },
  {
    "text": "feature in this segment must be a hundred percent supported next we know",
    "start": "1495080",
    "end": "1500930"
  },
  {
    "text": "if you remember that diagram of the cloud load balancers and the off-the-shelf and so forth we know that",
    "start": "1500930",
    "end": "1506060"
  },
  {
    "text": "everyone's features are slowly converging like the the functionality is slowly getting better for everyone but",
    "start": "1506060",
    "end": "1512270"
  },
  {
    "text": "it's not there yet how do we model this in the API so the is is to have this extended layer which",
    "start": "1512270",
    "end": "1518740"
  },
  {
    "text": "is on a feature if I feature basis it may be supported but if you support it as part of your controller it must work",
    "start": "1518740",
    "end": "1525220"
  },
  {
    "text": "the same across all controllers and it must be part of the API schema and then",
    "start": "1525220",
    "end": "1530500"
  },
  {
    "text": "finally we know for extensibility we want this custom there so that for anything else in there that we don't have any guarantee of portability and",
    "start": "1530500",
    "end": "1536440"
  },
  {
    "text": "there will be no official schema for it and hopefully this creates a gravity that takes things from custom they",
    "start": "1536440",
    "end": "1542590"
  },
  {
    "text": "mature they become extended they mature even more and then become core so how do",
    "start": "1542590",
    "end": "1548230"
  },
  {
    "text": "you enforce this like how do you actualize this thing well you have to do it through conformance tests and I think",
    "start": "1548230",
    "end": "1554280"
  },
  {
    "text": "to do it properly you'll have to basically be able to statically check the existence of an extended feature so",
    "start": "1554280",
    "end": "1562450"
  },
  {
    "text": "here just the example of what we see immediately in terms of what will be",
    "start": "1562450",
    "end": "1567670"
  },
  {
    "text": "corn extended for example ingress will be in the core API now in terms of",
    "start": "1567670",
    "end": "1572860"
  },
  {
    "start": "1572000",
    "end": "1572000"
  },
  {
    "text": "extensibility mechanisms I know this is like a pretty a lot of people talk about how to do these but you know we have the",
    "start": "1572860",
    "end": "1579850"
  },
  {
    "text": "annotations map string string and then custom resource in draw objects and currently our thinking is that custom",
    "start": "1579850",
    "end": "1586060"
  },
  {
    "text": "resources are really and with a polymorphic object reference is a really interesting way to kind of get",
    "start": "1586060",
    "end": "1591160"
  },
  {
    "text": "extensibility while still staying in the schema and that's if you see the example of the backends and then in this case",
    "start": "1591160",
    "end": "1598570"
  },
  {
    "text": "the routes the routes actually point to potentially different types right you can go to different types from a given",
    "start": "1598570",
    "end": "1606040"
  },
  {
    "text": "resource and that let's we lets us get some of the flexibility and extensibility finally a long-neglected",
    "start": "1606040",
    "end": "1612880"
  },
  {
    "text": "aspect of load balancer api's is the status and this is something that we're",
    "start": "1612880",
    "end": "1618250"
  },
  {
    "text": "going to invest heavily in because as you get these object graphs versus a",
    "start": "1618250",
    "end": "1623740"
  },
  {
    "text": "single self-consistent object it becomes very hard to understand how it's all stitched together so really this is a",
    "start": "1623740",
    "end": "1630850"
  },
  {
    "start": "1630000",
    "end": "1630000"
  },
  {
    "text": "call to action how to get involved so we have an API sketch and then we're starting a working group the info will",
    "start": "1630850",
    "end": "1637630"
  },
  {
    "text": "go out soon we're going to have bi-weekly meetings we're going to use the Signet work mailing lists to kind of communicate have a slot channel and have",
    "start": "1637630",
    "end": "1644410"
  },
  {
    "text": "a repository and really we want help and feedback and ideas and use case",
    "start": "1644410",
    "end": "1649899"
  },
  {
    "text": "especially from the users I know we talk to lots of implementers but we really really really want to talk to the users",
    "start": "1649899",
    "end": "1655850"
  },
  {
    "text": "make sure you use cases are captured and of course from the implementers we want experimental implementations so now open",
    "start": "1655850",
    "end": "1664250"
  },
  {
    "text": "for questions",
    "start": "1664250",
    "end": "1666490"
  },
  {
    "text": "thanks for the talk addressing the permissions for the Gateway binding to the Rao yeah one bit",
    "start": "1681950",
    "end": "1689550"
  },
  {
    "text": "of prior art I wonder if you consider it was with the use of our back for pod",
    "start": "1689550",
    "end": "1695460"
  },
  {
    "text": "security policies even grant the use verb that seems applicable here to",
    "start": "1695460",
    "end": "1700860"
  },
  {
    "text": "decide who's allowed to use a gateway or who's allowed to maybe use a route on a",
    "start": "1700860",
    "end": "1708750"
  },
  {
    "text": "gateway or something yeah or an intermediate binding object might be",
    "start": "1708750",
    "end": "1714510"
  },
  {
    "text": "something to ratify this problem yeah I think um there are a couple design",
    "start": "1714510",
    "end": "1719640"
  },
  {
    "text": "choices so what we want is simultaneously make it easy for people to use but also sort of naturally mapped",
    "start": "1719640",
    "end": "1727590"
  },
  {
    "text": "to our back I have to look at the positivity policy I didn't know about that one",
    "start": "1727590",
    "end": "1733820"
  },
  {
    "text": "just make sure you raise your hand high so Paul can rush you like so everything",
    "start": "1741600",
    "end": "1747460"
  },
  {
    "text": "you've talked about so far hinted ed you know it's kind of starting off with layer seven HTTP style routing is there",
    "start": "1747460",
    "end": "1756100"
  },
  {
    "text": "a plan in the roadmap to support you know TCP services you know layer for routing I mean I see you're kind of like",
    "start": "1756100",
    "end": "1762160"
  },
  {
    "text": "abstracting things out like gateways and stuff so it seems like it's there I just want to see what your that's actually in",
    "start": "1762160",
    "end": "1768340"
  },
  {
    "text": "our sketch and part of the scope is to figure out how this would be affable the wall for because essentially it boils",
    "start": "1768340",
    "end": "1774850"
  },
  {
    "text": "down to service as a grouping mechanism and then you have some sort of application routing and then you have",
    "start": "1774850",
    "end": "1780880"
  },
  {
    "text": "some description of the exposure that's kind of the very high level like concept",
    "start": "1780880",
    "end": "1786880"
  },
  {
    "text": "space that we're trying to map so that is part of the sketch I didn't cover it",
    "start": "1786880",
    "end": "1791919"
  },
  {
    "text": "explicitly here but that is part of this code so it seems like you're gonna be",
    "start": "1791919",
    "end": "1798549"
  },
  {
    "text": "creating potentially a lot of new resource types how much of those are",
    "start": "1798549",
    "end": "1803620"
  },
  {
    "text": "going to be using CR DS versus built into the API server we're gonna start off with CRS because yours are supposed",
    "start": "1803620",
    "end": "1810040"
  },
  {
    "text": "to be the same in terms of functionality and I think that is actually the trend",
    "start": "1810040",
    "end": "1815559"
  },
  {
    "text": "of the project is to try to do every new thing as a CR there's many advantages one of them is you can take them to",
    "start": "1815559",
    "end": "1822040"
  },
  {
    "text": "versions in the previous as opposed to rubbing them in Coober nice itself which",
    "start": "1822040",
    "end": "1827320"
  },
  {
    "text": "has been pretty painful for especially new stuff does the configuration only",
    "start": "1827320",
    "end": "1834280"
  },
  {
    "text": "apply to the ingress or also to the transparent proxies as you describe it",
    "start": "1834280",
    "end": "1840580"
  },
  {
    "text": "more than Q proxy you says that you said envoy so if I have a mesh could also",
    "start": "1840580",
    "end": "1847809"
  },
  {
    "text": "configure those types of things yeah I think one useful thing to do is",
    "start": "1847809",
    "end": "1856510"
  },
  {
    "text": "to think of the API independent of the implementation because I know that Q proxy is very baked into kubernetes in",
    "start": "1856510",
    "end": "1863620"
  },
  {
    "text": "terms of concept laws and everything but really it's just a way to do load balancing right now if you think about",
    "start": "1863620",
    "end": "1869440"
  },
  {
    "text": "like let's decoupled that in the sketch we have an example that we conjecture basically is like what if you",
    "start": "1869440",
    "end": "1875380"
  },
  {
    "text": "said Q proxy was a type of gateway and then for example node port would be a type of exposure right then you that",
    "start": "1875380",
    "end": "1881260"
  },
  {
    "text": "lets you easily pick and choose which kinds of things your you want to do with",
    "start": "1881260",
    "end": "1886330"
  },
  {
    "text": "your service and we've actually had sort of people raise this issue like well I",
    "start": "1886330",
    "end": "1891610"
  },
  {
    "text": "wanted a cluster IP service or I wanted a low balance service I didn't really want the node for it but I have no way to express that right now so this",
    "start": "1891610",
    "end": "1898030"
  },
  {
    "text": "somewhat decouples those things oh sorry",
    "start": "1898030",
    "end": "1908160"
  },
  {
    "text": "yeah so I have a few questions so one is that gateways will be like a scalable",
    "start": "1908160",
    "end": "1914140"
  },
  {
    "text": "like for example like in all cases you go from like a you know cloud providers load balancer and then you want to pass",
    "start": "1914140",
    "end": "1919870"
  },
  {
    "text": "it through maybe engine X or H epoxy and then to your back-end applications yeah",
    "start": "1919870",
    "end": "1927610"
  },
  {
    "text": "it depends on your use case because for example one of the implementations of a gateway is to have it be exposed via a",
    "start": "1927610",
    "end": "1935200"
  },
  {
    "text": "load balancer yeah that's like a lot of people do it but that is sort of on the implementation side right that the user",
    "start": "1935200",
    "end": "1941320"
  },
  {
    "text": "themselves probably unless they are actually using the API to wire that up that's more like the infrastructure",
    "start": "1941320",
    "end": "1947860"
  },
  {
    "text": "provider gave you an implementation of a load balancer on the Internet and the way it was implemented is to kind of",
    "start": "1947860",
    "end": "1954100"
  },
  {
    "text": "cascade these things we do have some sketches and I think a lot of priority",
    "start": "1954100",
    "end": "1959590"
  },
  {
    "text": "for example in contour is to how to compose configurations together and that's a different kind of cascading",
    "start": "1959590",
    "end": "1965710"
  },
  {
    "text": "where you have different user teams and perhaps you give different are back to different resources and then you merge",
    "start": "1965710",
    "end": "1971320"
  },
  {
    "text": "them together so like a slightly different way to compose things okay another question is like what is the",
    "start": "1971320",
    "end": "1977440"
  },
  {
    "text": "timeline for all of this I mean it seems like there's going to be new India as we want and this gateway seems like a",
    "start": "1977440",
    "end": "1982480"
  },
  {
    "text": "completely different thing is this in Greece v1 will be rolled into this so it's going to be separately",
    "start": "1982480",
    "end": "1987520"
  },
  {
    "text": "Inga's v2 or like how this all works the way we see it is that there ingress is",
    "start": "1987520",
    "end": "1993940"
  },
  {
    "text": "actually quite surprisingly popular in terms of implementations right lots of implementations and actually quite a few",
    "start": "1993940",
    "end": "2000690"
  },
  {
    "text": "users and for a big set of users it's actually a completely fine so",
    "start": "2000690",
    "end": "2006770"
  },
  {
    "text": "in terms of Signet work the way we look at it is it's going to be supportive like ingress is going to be GA and it's going to be a thing and it's going to",
    "start": "2006770",
    "end": "2012770"
  },
  {
    "text": "remain useful for those people and then Gateway is sort of how we are seeing an evolution if you never have to use",
    "start": "2012770",
    "end": "2019309"
  },
  {
    "text": "anything respect a gateway then well you can be perfectly happy with the ingress and you see v1 either so if you have",
    "start": "2019309",
    "end": "2026390"
  },
  {
    "text": "extra things that aren't necessarily going to way for that like health checks came up as well as potentially part of",
    "start": "2026390",
    "end": "2032600"
  },
  {
    "text": "the v1 so v1 can still get new things that just can't be required and still",
    "start": "2032600",
    "end": "2037730"
  },
  {
    "text": "satisfy backwards-compatibility and what yeah last question he says how",
    "start": "2037730",
    "end": "2043309"
  },
  {
    "text": "does it relate to the kn8 observing stuff because that sort of also have somewhat similar like a scope I'm not",
    "start": "2043309",
    "end": "2050750"
  },
  {
    "text": "super familiar with the cane it is but we did start a conversation with them and I just have to find out more about",
    "start": "2050750",
    "end": "2057050"
  },
  {
    "text": "that that's right that's right all right",
    "start": "2057050",
    "end": "2065510"
  },
  {
    "text": "we're at time thanks a lot to our presenters thanks for everybody for coming please rate the talk on sched",
    "start": "2065510",
    "end": "2074250"
  },
  {
    "text": "[Applause]",
    "start": "2074250",
    "end": "2077519"
  }
]