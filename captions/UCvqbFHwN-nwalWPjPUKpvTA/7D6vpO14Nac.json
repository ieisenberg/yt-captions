[
  {
    "text": "hello everyone my name is in h and I'm a",
    "start": "1920",
    "end": "5120"
  },
  {
    "text": "distributed storage engineer at data",
    "start": "5120",
    "end": "7800"
  },
  {
    "text": "Lord thank you for joining me today for",
    "start": "7800",
    "end": "10200"
  },
  {
    "text": "this presentation on the topic KES",
    "start": "10200",
    "end": "12719"
  },
  {
    "text": "engineering testing and Analysis of",
    "start": "12719",
    "end": "17240"
  },
  {
    "text": "xline this presentation aims to provide",
    "start": "17240",
    "end": "20320"
  },
  {
    "text": "an overview of application and Analysis",
    "start": "20320",
    "end": "23480"
  },
  {
    "text": "of Jepson tests on a distributed K store",
    "start": "23480",
    "end": "28720"
  },
  {
    "text": "xline to begin let's start with a brief",
    "start": "28720",
    "end": "31920"
  },
  {
    "text": "introduction to japson I'm sure some of",
    "start": "31920",
    "end": "34800"
  },
  {
    "text": "you may already be familiar with it and",
    "start": "34800",
    "end": "37520"
  },
  {
    "text": "we will explore how to we apply japson",
    "start": "37520",
    "end": "39920"
  },
  {
    "text": "tests to xline we will also dive into",
    "start": "39920",
    "end": "43440"
  },
  {
    "text": "the testing results and Analysis in our",
    "start": "43440",
    "end": "46800"
  },
  {
    "text": "system and finally we'll discuss the",
    "start": "46800",
    "end": "49800"
  },
  {
    "text": "lesson learned and future work of Kos",
    "start": "49800",
    "end": "52600"
  },
  {
    "text": "engineering on",
    "start": "52600",
    "end": "55640"
  },
  {
    "text": "xline now let's familiarize ourselves",
    "start": "56719",
    "end": "59719"
  },
  {
    "text": "with with the japson framework as many",
    "start": "59719",
    "end": "62199"
  },
  {
    "text": "of you may know japson is a powerful",
    "start": "62199",
    "end": "64198"
  },
  {
    "text": "Library used in Kos",
    "start": "64199",
    "end": "67320"
  },
  {
    "text": "engineering a Jepson test is a closure",
    "start": "67320",
    "end": "70439"
  },
  {
    "text": "program which uses the Jepson library to",
    "start": "70439",
    "end": "72920"
  },
  {
    "text": "set up a distributed system r a bunch of",
    "start": "72920",
    "end": "76159"
  },
  {
    "text": "operations against that system and",
    "start": "76159",
    "end": "79000"
  },
  {
    "text": "verify that the history of those",
    "start": "79000",
    "end": "81040"
  },
  {
    "text": "operations makes",
    "start": "81040",
    "end": "83600"
  },
  {
    "text": "sense Jepson consist of several",
    "start": "83600",
    "end": "86400"
  },
  {
    "text": "components including a database for",
    "start": "86400",
    "end": "88840"
  },
  {
    "text": "testing a generator to generate",
    "start": "88840",
    "end": "92040"
  },
  {
    "text": "operations a model to check for",
    "start": "92040",
    "end": "95079"
  },
  {
    "text": "correctness and Nemesis components for",
    "start": "95079",
    "end": "98280"
  },
  {
    "text": "failure",
    "start": "98280",
    "end": "100798"
  },
  {
    "text": "injection I'm sure some of you are",
    "start": "103439",
    "end": "105560"
  },
  {
    "text": "wondering how Jepson works exactly well",
    "start": "105560",
    "end": "109399"
  },
  {
    "text": "the most important part of Jepson is the",
    "start": "109399",
    "end": "112920"
  },
  {
    "text": "checkers no source is one of the",
    "start": "112920",
    "end": "115119"
  },
  {
    "text": "Checkers in Jepson that verifies if the",
    "start": "115119",
    "end": "118119"
  },
  {
    "text": "operation histories are linearized ible",
    "start": "118119",
    "end": "120799"
  },
  {
    "text": "on the other hand L checks for",
    "start": "120799",
    "end": "123200"
  },
  {
    "text": "transactional consistency or civiliz",
    "start": "123200",
    "end": "126840"
  },
  {
    "text": "ability with these two combined we can",
    "start": "126840",
    "end": "129879"
  },
  {
    "text": "verifies various type of databases that",
    "start": "129879",
    "end": "133280"
  },
  {
    "text": "provides different consistency",
    "start": "133280",
    "end": "137239"
  },
  {
    "text": "guarantees in our testing we",
    "start": "137480",
    "end": "140319"
  },
  {
    "text": "specifically Target strict",
    "start": "140319",
    "end": "143239"
  },
  {
    "text": "serializability which requires both",
    "start": "143239",
    "end": "145680"
  },
  {
    "text": "linearizability and serializability",
    "start": "145680",
    "end": "148760"
  },
  {
    "text": "attributes if you take a look at a image",
    "start": "148760",
    "end": "152239"
  },
  {
    "text": "you can see that transactions not only",
    "start": "152239",
    "end": "155080"
  },
  {
    "text": "appear in realtime order but each",
    "start": "155080",
    "end": "158319"
  },
  {
    "text": "transaction also reads the modification",
    "start": "158319",
    "end": "160959"
  },
  {
    "text": "made by previous",
    "start": "160959",
    "end": "164239"
  },
  {
    "text": "transactions now let's talk about the",
    "start": "166519",
    "end": "169080"
  },
  {
    "text": "namesis component namesis offers F",
    "start": "169080",
    "end": "172120"
  },
  {
    "text": "injection capabilities allowing us to",
    "start": "172120",
    "end": "174480"
  },
  {
    "text": "simulate real world application",
    "start": "174480",
    "end": "176760"
  },
  {
    "text": "scenarios japson provides some beauty",
    "start": "176760",
    "end": "179239"
  },
  {
    "text": "namesis such as pause which will pause",
    "start": "179239",
    "end": "182360"
  },
  {
    "text": "the current process and kill which will",
    "start": "182360",
    "end": "184840"
  },
  {
    "text": "kill the process and partition which",
    "start": "184840",
    "end": "187840"
  },
  {
    "text": "will partitions the network among the",
    "start": "187840",
    "end": "190720"
  },
  {
    "text": "noes and the clock Nemesis will screw",
    "start": "190720",
    "end": "194200"
  },
  {
    "text": "the system",
    "start": "194200",
    "end": "195360"
  },
  {
    "text": "clock except for this you can also write",
    "start": "195360",
    "end": "198280"
  },
  {
    "text": "your own nesis that tailored for",
    "start": "198280",
    "end": "201319"
  },
  {
    "text": "system to give you a better",
    "start": "201319",
    "end": "203440"
  },
  {
    "text": "understanding of how nesis work let's",
    "start": "203440",
    "end": "206040"
  },
  {
    "text": "take a look at this video example of the",
    "start": "206040",
    "end": "208519"
  },
  {
    "text": "partition nesis it can petition the",
    "start": "208519",
    "end": "211239"
  },
  {
    "text": "cluster into a majority minority",
    "start": "211239",
    "end": "214519"
  },
  {
    "text": "Paradigm and it can also create a ring",
    "start": "214519",
    "end": "218000"
  },
  {
    "text": "Network that may result in multiple",
    "start": "218000",
    "end": "220480"
  },
  {
    "text": "majorities if the system design is",
    "start": "220480",
    "end": "224840"
  },
  {
    "text": "flawed now let's move on to the setup of",
    "start": "225920",
    "end": "228760"
  },
  {
    "text": "japson for",
    "start": "228760",
    "end": "230319"
  },
  {
    "text": "xline before we do let me provide you",
    "start": "230319",
    "end": "233040"
  },
  {
    "text": "with some background information about",
    "start": "233040",
    "end": "235599"
  },
  {
    "text": "xline currently xline is a Sandbox",
    "start": "235599",
    "end": "238480"
  },
  {
    "text": "project of the cloud native Computing",
    "start": "238480",
    "end": "240519"
  },
  {
    "text": "Foundation providing KV storage for",
    "start": "240519",
    "end": "243079"
  },
  {
    "text": "metadata",
    "start": "243079",
    "end": "244400"
  },
  {
    "text": "management xron uses the curb consense",
    "start": "244400",
    "end": "247799"
  },
  {
    "text": "protocol which is geod distributed",
    "start": "247799",
    "end": "250799"
  },
  {
    "text": "friendly it also offers an S CD",
    "start": "250799",
    "end": "253840"
  },
  {
    "text": "compatible",
    "start": "253840",
    "end": "256400"
  },
  {
    "text": "API similar to atcd xine provides strict",
    "start": "257280",
    "end": "261680"
  },
  {
    "text": "civiliz reads writes and transactions",
    "start": "261680",
    "end": "265320"
  },
  {
    "text": "across the entire system along with",
    "start": "265320",
    "end": "268160"
  },
  {
    "text": "functions like watch and distributed",
    "start": "268160",
    "end": "272280"
  },
  {
    "text": "logs exceline provides an add CD",
    "start": "272280",
    "end": "275440"
  },
  {
    "text": "compatible API this allows us to reuse",
    "start": "275440",
    "end": "279120"
  },
  {
    "text": "japson tests for",
    "start": "279120",
    "end": "281039"
  },
  {
    "text": "FCD and to improve performance a native",
    "start": "281039",
    "end": "284800"
  },
  {
    "text": "client is bundled with xline so what we",
    "start": "284800",
    "end": "288360"
  },
  {
    "text": "need to implement are the DB part and",
    "start": "288360",
    "end": "291320"
  },
  {
    "text": "the client part for japson xellent",
    "start": "291320",
    "end": "296039"
  },
  {
    "text": "tests speaking of tests let's discuss",
    "start": "297000",
    "end": "300080"
  },
  {
    "text": "the ones we selected we choose a few",
    "start": "300080",
    "end": "302680"
  },
  {
    "text": "tests directly from the original SD test",
    "start": "302680",
    "end": "306680"
  },
  {
    "text": "the first one is the register test which",
    "start": "306680",
    "end": "309720"
  },
  {
    "text": "checks for linearizability the second",
    "start": "309720",
    "end": "312479"
  },
  {
    "text": "one is set which checks for stale reads",
    "start": "312479",
    "end": "315600"
  },
  {
    "text": "in transactions lastly we have a pent",
    "start": "315600",
    "end": "319319"
  },
  {
    "text": "which checks for strict sterilizability",
    "start": "319319",
    "end": "323360"
  },
  {
    "text": "most of these test are based on a common",
    "start": "324319",
    "end": "327680"
  },
  {
    "text": "operation called compare and set just",
    "start": "327680",
    "end": "331039"
  },
  {
    "text": "like at CD xine relies on predicate",
    "start": "331039",
    "end": "334039"
  },
  {
    "text": "based sematics in transactions and a",
    "start": "334039",
    "end": "337800"
  },
  {
    "text": "global revision for each mutative",
    "start": "337800",
    "end": "342080"
  },
  {
    "text": "operation let me demonstrate an example",
    "start": "343199",
    "end": "346400"
  },
  {
    "text": "of a predicate based compare and set",
    "start": "346400",
    "end": "349080"
  },
  {
    "text": "operation with the guard function in the",
    "start": "349080",
    "end": "351800"
  },
  {
    "text": "append",
    "start": "351800",
    "end": "353639"
  },
  {
    "text": "test this function ensures that a key is",
    "start": "353639",
    "end": "357080"
  },
  {
    "text": "not modified by the time of the",
    "start": "357080",
    "end": "359120"
  },
  {
    "text": "transaction section as you can see it",
    "start": "359120",
    "end": "362000"
  },
  {
    "text": "first fetches the value of the key",
    "start": "362000",
    "end": "363960"
  },
  {
    "text": "through a g operation and then checks if",
    "start": "363960",
    "end": "367000"
  },
  {
    "text": "the next modification revision of the",
    "start": "367000",
    "end": "369120"
  },
  {
    "text": "value is the same as the current read",
    "start": "369120",
    "end": "372560"
  },
  {
    "text": "revision if the key is missing the",
    "start": "372560",
    "end": "375440"
  },
  {
    "text": "predicate will be that the next",
    "start": "375440",
    "end": "377800"
  },
  {
    "text": "modification revision of the key will be",
    "start": "377800",
    "end": "380520"
  },
  {
    "text": "less than the latest Global revision",
    "start": "380520",
    "end": "383680"
  },
  {
    "text": "observed by the previous G",
    "start": "383680",
    "end": "388120"
  },
  {
    "text": "operation",
    "start": "388400",
    "end": "390560"
  },
  {
    "text": "okay let's move on to the analysis of",
    "start": "390560",
    "end": "392960"
  },
  {
    "text": "the test",
    "start": "392960",
    "end": "395599"
  },
  {
    "text": "results through the japson test it",
    "start": "397039",
    "end": "399880"
  },
  {
    "text": "observed two main categories of issues",
    "start": "399880",
    "end": "402199"
  },
  {
    "text": "in X line the first category is",
    "start": "402199",
    "end": "405120"
  },
  {
    "text": "asynchronous persistent issues which are",
    "start": "405120",
    "end": "407919"
  },
  {
    "text": "caused by X Line's original asynchronous",
    "start": "407919",
    "end": "410440"
  },
  {
    "text": "IO",
    "start": "410440",
    "end": "411599"
  },
  {
    "text": "design the second category is revision",
    "start": "411599",
    "end": "414840"
  },
  {
    "text": "generation issues which is caused by the",
    "start": "414840",
    "end": "418199"
  },
  {
    "text": "at CD compatible revision",
    "start": "418199",
    "end": "422039"
  },
  {
    "text": "generation to elaborate on the",
    "start": "423440",
    "end": "426039"
  },
  {
    "text": "asynchronous issues unlike at CD",
    "start": "426039",
    "end": "429000"
  },
  {
    "text": "synchronized persistant approach Exon",
    "start": "429000",
    "end": "431639"
  },
  {
    "text": "uses asynchronous method to persistent L",
    "start": "431639",
    "end": "434520"
  },
  {
    "text": "entries and give storage which introduce",
    "start": "434520",
    "end": "437919"
  },
  {
    "text": "extra",
    "start": "437919",
    "end": "439639"
  },
  {
    "text": "complexity one issue we identified is",
    "start": "439639",
    "end": "442360"
  },
  {
    "text": "that the RIS State implementation is",
    "start": "442360",
    "end": "444960"
  },
  {
    "text": "incorrect because the committed",
    "start": "444960",
    "end": "447639"
  },
  {
    "text": "operation and the index experior trigger",
    "start": "447639",
    "end": "450319"
  },
  {
    "text": "operation happened",
    "start": "450319",
    "end": "452400"
  },
  {
    "text": "asynchronously and we initially ignore",
    "start": "452400",
    "end": "455280"
  },
  {
    "text": "the potential gap between them",
    "start": "455280",
    "end": "458039"
  },
  {
    "text": "additionally KV storage might be",
    "start": "458039",
    "end": "460599"
  },
  {
    "text": "inconsistent with the logs due to the",
    "start": "460599",
    "end": "463560"
  },
  {
    "text": "asynchronous",
    "start": "463560",
    "end": "465120"
  },
  {
    "text": "persistance also another problem is that",
    "start": "465120",
    "end": "468159"
  },
  {
    "text": "one transaction might read different",
    "start": "468159",
    "end": "470919"
  },
  {
    "text": "values for the same key as other",
    "start": "470919",
    "end": "473879"
  },
  {
    "text": "commands may be executed during the",
    "start": "473879",
    "end": "476560"
  },
  {
    "text": "transaction thereby violating atomic",
    "start": "476560",
    "end": "481319"
  },
  {
    "text": "execution the asynchronous io introduced",
    "start": "482720",
    "end": "485800"
  },
  {
    "text": "interl system States making reasoning",
    "start": "485800",
    "end": "488720"
  },
  {
    "text": "about them difficult we found that",
    "start": "488720",
    "end": "491440"
  },
  {
    "text": "synchronous IO despite having some",
    "start": "491440",
    "end": "494120"
  },
  {
    "text": "performance overhead it's simpler and",
    "start": "494120",
    "end": "497199"
  },
  {
    "text": "ensures correctness as a result we",
    "start": "497199",
    "end": "500479"
  },
  {
    "text": "decided to refact X line to use SOS",
    "start": "500479",
    "end": "505680"
  },
  {
    "text": "IO moving on to the second major",
    "start": "507000",
    "end": "509680"
  },
  {
    "text": "category of issues revision",
    "start": "509680",
    "end": "512640"
  },
  {
    "text": "generation xelon uses the curb consensus",
    "start": "512640",
    "end": "516320"
  },
  {
    "text": "protocol which leverages command",
    "start": "516320",
    "end": "519159"
  },
  {
    "text": "commutativity to achieve one run trip",
    "start": "519159",
    "end": "522159"
  },
  {
    "text": "consensus on the other hand at CD",
    "start": "522159",
    "end": "525440"
  },
  {
    "text": "employs the raft protocol and execute",
    "start": "525440",
    "end": "528880"
  },
  {
    "text": "the commands",
    "start": "528880",
    "end": "530680"
  },
  {
    "text": "sequentially our goal was to implement",
    "start": "530680",
    "end": "533640"
  },
  {
    "text": "an SD compatible API for X line while",
    "start": "533640",
    "end": "536959"
  },
  {
    "text": "maintaining the one round trip",
    "start": "536959",
    "end": "538560"
  },
  {
    "text": "performance",
    "start": "538560",
    "end": "540279"
  },
  {
    "text": "however our analysis of the test",
    "start": "540279",
    "end": "543000"
  },
  {
    "text": "reviewed that this approach was not",
    "start": "543000",
    "end": "547480"
  },
  {
    "text": "feasible the curb protocol allows for",
    "start": "548519",
    "end": "551560"
  },
  {
    "text": "concurrent execution of commands if they",
    "start": "551560",
    "end": "554839"
  },
  {
    "text": "commute similar to the fast paxos",
    "start": "554839",
    "end": "557480"
  },
  {
    "text": "approach this is different from the",
    "start": "557480",
    "end": "559800"
  },
  {
    "text": "state machine approach used by at CD",
    "start": "559800",
    "end": "563160"
  },
  {
    "text": "where commands are executed in a global",
    "start": "563160",
    "end": "567560"
  },
  {
    "text": "order",
    "start": "568120",
    "end": "571120"
  },
  {
    "text": "in the japson append test we expect",
    "start": "571120",
    "end": "574120"
  },
  {
    "text": "strict serializable execution histories",
    "start": "574120",
    "end": "577519"
  },
  {
    "text": "however curb itself does not guarantee a",
    "start": "577519",
    "end": "580800"
  },
  {
    "text": "Global Order of all commands this means",
    "start": "580800",
    "end": "583640"
  },
  {
    "text": "that the commands do not execute in a",
    "start": "583640",
    "end": "586360"
  },
  {
    "text": "Serial order resulting in transactions",
    "start": "586360",
    "end": "589680"
  },
  {
    "text": "that do not follow lar reability thus",
    "start": "589680",
    "end": "592839"
  },
  {
    "text": "violating the strict civiliz ability",
    "start": "592839",
    "end": "597279"
  },
  {
    "text": "constraint",
    "start": "598120",
    "end": "600839"
  },
  {
    "text": "now let's discuss the lesson we learned",
    "start": "600839",
    "end": "603160"
  },
  {
    "text": "from",
    "start": "603160",
    "end": "605279"
  },
  {
    "text": "debugging when debugging a distributed",
    "start": "605279",
    "end": "607880"
  },
  {
    "text": "system and understanding the event",
    "start": "607880",
    "end": "610079"
  },
  {
    "text": "topology across multiple noes can be",
    "start": "610079",
    "end": "613160"
  },
  {
    "text": "challenging however based on my",
    "start": "613160",
    "end": "615680"
  },
  {
    "text": "experience debugging X line I would like",
    "start": "615680",
    "end": "618440"
  },
  {
    "text": "to share some tips with",
    "start": "618440",
    "end": "620839"
  },
  {
    "text": "you firstly logs are crucial for",
    "start": "620839",
    "end": "624240"
  },
  {
    "text": "debugging a distributed multinode system",
    "start": "624240",
    "end": "627880"
  },
  {
    "text": "make sure they provide identical",
    "start": "627880",
    "end": "629839"
  },
  {
    "text": "information for tracing",
    "start": "629839",
    "end": "631880"
  },
  {
    "text": "purpose avoid unnecessary messages and",
    "start": "631880",
    "end": "635680"
  },
  {
    "text": "especially avoid logging large objects",
    "start": "635680",
    "end": "639320"
  },
  {
    "text": "which will generate a huge amount of",
    "start": "639320",
    "end": "641279"
  },
  {
    "text": "noise making the debugging even",
    "start": "641279",
    "end": "645440"
  },
  {
    "text": "harder starting to debug from small",
    "start": "646320",
    "end": "649079"
  },
  {
    "text": "samples is also important begin with a",
    "start": "649079",
    "end": "652639"
  },
  {
    "text": "small easy to understand simple as you",
    "start": "652639",
    "end": "656040"
  },
  {
    "text": "can see from the japson test result",
    "start": "656040",
    "end": "658440"
  },
  {
    "text": "examples the upper graph is challenging",
    "start": "658440",
    "end": "661440"
  },
  {
    "text": "to understand but the bottom one looks",
    "start": "661440",
    "end": "664399"
  },
  {
    "text": "much more clear for",
    "start": "664399",
    "end": "666360"
  },
  {
    "text": "humans sometimes it may require running",
    "start": "666360",
    "end": "669279"
  },
  {
    "text": "the test multiple times to find a",
    "start": "669279",
    "end": "671959"
  },
  {
    "text": "suitable",
    "start": "671959",
    "end": "674079"
  },
  {
    "text": "sample lastly if we developing a",
    "start": "674079",
    "end": "676959"
  },
  {
    "text": "distributed system I strongly recommend",
    "start": "676959",
    "end": "679600"
  },
  {
    "text": "integrating chos engineering methods",
    "start": "679600",
    "end": "681600"
  },
  {
    "text": "early on humans are not good at",
    "start": "681600",
    "end": "684639"
  },
  {
    "text": "analyzing complex systems and",
    "start": "684639",
    "end": "687079"
  },
  {
    "text": "traditional tests often lack",
    "start": "687079",
    "end": "689680"
  },
  {
    "text": "coverage by incorporating chaos testing",
    "start": "689680",
    "end": "693120"
  },
  {
    "text": "you can significantly increase test",
    "start": "693120",
    "end": "695839"
  },
  {
    "text": "coverage and uncover bugs that may not",
    "start": "695839",
    "end": "698760"
  },
  {
    "text": "be reviewed in traditional",
    "start": "698760",
    "end": "702519"
  },
  {
    "text": "tests for the final part let's discuss",
    "start": "704040",
    "end": "707160"
  },
  {
    "text": "the future work we have planned for Kos",
    "start": "707160",
    "end": "711680"
  },
  {
    "text": "engineering analyzing logs can already",
    "start": "711680",
    "end": "714279"
  },
  {
    "text": "be a tedious experience especially when",
    "start": "714279",
    "end": "717279"
  },
  {
    "text": "the need for additional tracing logs",
    "start": "717279",
    "end": "718959"
  },
  {
    "text": "logs arises in such cases you often have",
    "start": "718959",
    "end": "722279"
  },
  {
    "text": "to add the necessary code and",
    "start": "722279",
    "end": "724760"
  },
  {
    "text": "essentially restart the entire debugging",
    "start": "724760",
    "end": "728240"
  },
  {
    "text": "process the non-deterministic nature of",
    "start": "728240",
    "end": "731320"
  },
  {
    "text": "japson tests further adds to the",
    "start": "731320",
    "end": "733800"
  },
  {
    "text": "debugging time it becomes challenging to",
    "start": "733800",
    "end": "736720"
  },
  {
    "text": "reason about the system State based",
    "start": "736720",
    "end": "739399"
  },
  {
    "text": "solely on a single log",
    "start": "739399",
    "end": "742720"
  },
  {
    "text": "file to address this we plan to migrate",
    "start": "742720",
    "end": "745800"
  },
  {
    "text": "some of the japson features such as",
    "start": "745800",
    "end": "748320"
  },
  {
    "text": "generators Checkers and Nemesis to",
    "start": "748320",
    "end": "752120"
  },
  {
    "text": "msim msim is a deterministic simulation",
    "start": "752120",
    "end": "756079"
  },
  {
    "text": "framework this will allow us to conduct",
    "start": "756079",
    "end": "758839"
  },
  {
    "text": "japson like tests while maintaining test",
    "start": "758839",
    "end": "762120"
  },
  {
    "text": "determinism it is expected to greatly",
    "start": "762120",
    "end": "765000"
  },
  {
    "text": "improve debugging efficiency as we can",
    "start": "765000",
    "end": "767680"
  },
  {
    "text": "reproduce the same results",
    "start": "767680",
    "end": "771720"
  },
  {
    "text": "deterministically additionally",
    "start": "771959",
    "end": "773760"
  },
  {
    "text": "integrating medim into our sale",
    "start": "773760",
    "end": "775560"
  },
  {
    "text": "environment will be more convenient as",
    "start": "775560",
    "end": "778279"
  },
  {
    "text": "it runs locally on a single machine",
    "start": "778279",
    "end": "781440"
  },
  {
    "text": "unlike japson which requires running",
    "start": "781440",
    "end": "783880"
  },
  {
    "text": "test separately on multiple",
    "start": "783880",
    "end": "787680"
  },
  {
    "text": "machines that's all for today's",
    "start": "789760",
    "end": "791920"
  },
  {
    "text": "presentation I hope you find it helpful",
    "start": "791920",
    "end": "794320"
  },
  {
    "text": "in understanding Kos testing and",
    "start": "794320",
    "end": "796639"
  },
  {
    "text": "debugging distributed systems for more",
    "start": "796639",
    "end": "799519"
  },
  {
    "text": "information please buit our websites or",
    "start": "799519",
    "end": "802399"
  },
  {
    "text": "feel free to reach out to us directly",
    "start": "802399",
    "end": "805000"
  },
  {
    "text": "thank you",
    "start": "805000",
    "end": "808639"
  }
]