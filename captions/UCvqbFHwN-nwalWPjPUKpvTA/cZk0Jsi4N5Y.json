[
  {
    "text": "welcome to the last afternoon of cucon somehow they always schedule my c cucon talk you know in the last day but you",
    "start": "80",
    "end": "5799"
  },
  {
    "text": "know that's uh but I'm very excited to uh to present here um you",
    "start": "5799",
    "end": "11040"
  },
  {
    "text": "know I like um introduce ourselves later you know but the the the title of the",
    "start": "11040",
    "end": "16960"
  },
  {
    "text": "talk is ebpf plus wasm and I'm sure you have all heard of ebpf or wasm right you",
    "start": "16960",
    "end": "23840"
  },
  {
    "text": "know wasm is a Next Generation isolation format it's small it's light it's fast",
    "start": "23840",
    "end": "29519"
  },
  {
    "text": "it's can work together with containers and ebpf sort of works in the parallel",
    "start": "29519",
    "end": "34520"
  },
  {
    "text": "universe it's uh it provide observability for container workloads it can also be deployed by containers and",
    "start": "34520",
    "end": "41280"
  },
  {
    "text": "all that so how are those linked together you know what are the benefits of linking those two um you know largely",
    "start": "41280",
    "end": "48640"
  },
  {
    "text": "separate Bode format one in the kernel one in the user space so that's um you",
    "start": "48640",
    "end": "53680"
  },
  {
    "text": "know um the topic we're going to discuss today we're going to give you um um a new open source project on",
    "start": "53680",
    "end": "61000"
  },
  {
    "text": "you know um it's uh I wouldn't say it's a new open source project because I've been under development for over a year",
    "start": "61000",
    "end": "67920"
  },
  {
    "text": "but u a new a new project that allows us provide a better way to manage ebpf",
    "start": "67920",
    "end": "73560"
  },
  {
    "text": "agent and provide a better way to validate and secure evf agent through",
    "start": "73560",
    "end": "78840"
  },
  {
    "text": "using won and also by um having a a user space agent running the WM that's",
    "start": "78840",
    "end": "84960"
  },
  {
    "text": "provide data data an analytics capabilities for the ebpf agent so you know I you know that's um I'm very",
    "start": "84960",
    "end": "91520"
  },
  {
    "text": "excited to uh present this to you and uh my name is Michael Y and I'm the wam in",
    "start": "91520",
    "end": "96799"
  },
  {
    "text": "this talk so I'm the um uh a founder of cnf's project called was m so it's we",
    "start": "96799",
    "end": "102520"
  },
  {
    "text": "some around time that's in the cncf sandbox and uh please uh my name isan",
    "start": "102520",
    "end": "108640"
  },
  {
    "text": "currently manage maintaining a small community called in noria BPF and make",
    "start": "108640",
    "end": "114920"
  },
  {
    "text": "try to make a vpf easy to deploy or use and exploring some new techn",
    "start": "114920",
    "end": "120600"
  },
  {
    "text": "te which we evf one time or to chance okay thank you you so so I'll",
    "start": "120600",
    "end": "129360"
  },
  {
    "text": "start and um um to to have overview or agenda of what we're going to talk about in the next um half an hour right you",
    "start": "129360",
    "end": "136599"
  },
  {
    "text": "know so first we have a very light introduction of EBP wasm which I'm sure you know most of you guys um know at",
    "start": "136599",
    "end": "141920"
  },
  {
    "text": "least one of them and probably both right and uh um then we're going to dive into the topic of how wasm improve ebpf",
    "start": "141920",
    "end": "148360"
  },
  {
    "text": "developer experience by it's all about developer experience so you know um so we're going to go through the topics",
    "start": "148360",
    "end": "154239"
  },
  {
    "text": "such as non-intrusive deployment into kubernetes part using WM to deploy ebpf agents and the decoupled from",
    "start": "154239",
    "end": "161040"
  },
  {
    "text": "application workloads declarative Security checks at deployment times using wasm application to check the",
    "start": "161040",
    "end": "167480"
  },
  {
    "text": "security of the ebpf application and then more more interesting support user space ebpf meaning there's uh you know",
    "start": "167480",
    "end": "174640"
  },
  {
    "text": "ebpf like applications that does not need access to the kernel hence does not need access to the privilege user you",
    "start": "174640",
    "end": "180959"
  },
  {
    "text": "can use it in the user space to monitor things like Network traffic and you know things like that and U um Downstream",
    "start": "180959",
    "end": "188080"
  },
  {
    "text": "analytics of the ebpf data you know that's another you know when when when agent collects data it goes feedback",
    "start": "188080",
    "end": "193599"
  },
  {
    "text": "into some analytics tools and and wasn't provide a way to do the transformation of the data and uh um you know uh",
    "start": "193599",
    "end": "200000"
  },
  {
    "text": "analytics of data and and and allow and you know data to be push to to um",
    "start": "200000",
    "end": "206040"
  },
  {
    "text": "Downstream you know analytics tools you know so and then the um that will be the",
    "start": "206040",
    "end": "211879"
  },
  {
    "text": "bulk of the talk but then um perhaps the last five 10 minutes we're going to talk about how the other way around how ebpf",
    "start": "211879",
    "end": "219680"
  },
  {
    "text": "improves wasm developer experience I know there's um you know um quite a few um web assimil developers here and one",
    "start": "219680",
    "end": "226920"
  },
  {
    "text": "of the biggest challenges whever somebody has you know that's um you know we talked about at the WM day at",
    "start": "226920",
    "end": "233159"
  },
  {
    "text": "beginning of the cubec you know is a um you know um is you know is a way to",
    "start": "233159",
    "end": "238760"
  },
  {
    "text": "guarantee security for wasm application because wasm provide isolation formats that similar to vmss and containers",
    "start": "238760",
    "end": "244439"
  },
  {
    "text": "right is a way to guarantee security um and uh policies for wasm applications",
    "start": "244439",
    "end": "249799"
  },
  {
    "text": "and the second is how do we enable better debugging and better tracing for wasm applications and we believe ebpf",
    "start": "249799",
    "end": "257000"
  },
  {
    "text": "agents embedded into the wasm application especially embedded into the wasm system interface wasi would uh",
    "start": "257000",
    "end": "264240"
  },
  {
    "text": "would provide a very good um you know um potential solution for those problems",
    "start": "264240",
    "end": "269759"
  },
  {
    "text": "that we encounter at the bottom side as well so those are so this is a quick agenda and uh um so here is a brief",
    "start": "269759",
    "end": "276639"
  },
  {
    "text": "introduction of ebpf I'm sure you know most of you guys um you know being this being cubon you already knew that",
    "start": "276639",
    "end": "281720"
  },
  {
    "text": "probably has already using using that so you know so there's um use cases where",
    "start": "281720",
    "end": "287560"
  },
  {
    "text": "then you develop applications you develop using tools and both development tools and deployment tools uh in the",
    "start": "287560",
    "end": "293520"
  },
  {
    "text": "user space to develop ebpf agents and then you deploy those agents to Kernel and then um you know start to",
    "start": "293520",
    "end": "300080"
  },
  {
    "text": "um you know do it work in the kernel do the monitoring security enforcement and you know things like that and then the",
    "start": "300080",
    "end": "305160"
  },
  {
    "text": "data comes back and then you can analyze the data right you know so that's the general um you know very high level",
    "start": "305160",
    "end": "310840"
  },
  {
    "text": "overview of you know how how ebpf is being used today and uh then on the",
    "start": "310840",
    "end": "316560"
  },
  {
    "text": "other side on WM side you know ebpf is a agent you deploy mostly commonly deploy",
    "start": "316560",
    "end": "322840"
  },
  {
    "text": "into the Linux kernal wasm is almost exclusively runs on the user space and it's it's uh it tries to run",
    "start": "322840",
    "end": "330240"
  },
  {
    "text": "um you know uh business logic you know like database database workload and the application workload and you know things",
    "start": "330240",
    "end": "336000"
  },
  {
    "text": "like that what we typically know as microservices however you know the chief benefit of WM is a lot smaller than a",
    "start": "336000",
    "end": "341960"
  },
  {
    "text": "container based uh solution so if you have a uh uh you know container application that you know connects to",
    "start": "341960",
    "end": "347919"
  },
  {
    "text": "database and uh um turns the database result into some kind of web page you know uh you could easily look at you",
    "start": "347919",
    "end": "353680"
  },
  {
    "text": "know 100 megabytes 200 megabytes of container size but uh for WM you are looking at one megab or 2 megabytes",
    "start": "353680",
    "end": "359199"
  },
  {
    "text": "right you you know it's a it's a um 100 times saving in terms of space and it's also um you know that's especially",
    "start": "359199",
    "end": "365840"
  },
  {
    "text": "pronounced when you have Computing intensiv environments for instance you know um we've seen a lot of WM",
    "start": "365840",
    "end": "370919"
  },
  {
    "text": "applications that used in um Uhl pipelines you know replacing python essentially you know that's so so",
    "start": "370919",
    "end": "377759"
  },
  {
    "text": "instead of uh having uh you know three gigabytes pytorch uh you know container image you would have uh you would have a",
    "start": "377759",
    "end": "384479"
  },
  {
    "text": "wasm application that is only 10 megabytes 20 megabytes and you would be able to run you know um a large variety",
    "start": "384479",
    "end": "390039"
  },
  {
    "text": "of you say py models or you know even large language models like llama you know things like that so you know so",
    "start": "390039",
    "end": "395639"
  },
  {
    "text": "from the surface there are very different Technologies you know one is um you know um deeply embedded into the",
    "start": "395639",
    "end": "400919"
  },
  {
    "text": "infrastructure and uh um to provide um mostly Ops and uh uh on the bottom side",
    "start": "400919",
    "end": "406880"
  },
  {
    "text": "it's uh it's user space technology that is um handles business logic and application logic so how do they connect",
    "start": "406880",
    "end": "413960"
  },
  {
    "text": "together then let me okay so let's get to the first topic so I'll you know um",
    "start": "413960",
    "end": "421479"
  },
  {
    "text": "provide a high level overview first and then you'll do the demo okay yeah so you know so how so that's the first the big",
    "start": "421479",
    "end": "429639"
  },
  {
    "text": "section how wasm improves the ebpf developer experience okay so um to",
    "start": "429639",
    "end": "435199"
  },
  {
    "text": "answer that question we have to look at how ebpf is deployed today so there's two major ways of deploying ebpf today",
    "start": "435199",
    "end": "442039"
  },
  {
    "text": "so one of them is is tightly integrated into a control control plan so it's",
    "start": "442039",
    "end": "447199"
  },
  {
    "text": "bundled into a larger application so you have you know um um you know different Frameworks that you can do that selenium",
    "start": "447199",
    "end": "453639"
  },
  {
    "text": "and pixie and you know things like that and then there's another way which is a uh uh uh what do we call decoupled or",
    "start": "453639",
    "end": "460960"
  },
  {
    "text": "more like a sidecar ebpf deployment where you um you ebpf runs its own its",
    "start": "460960",
    "end": "466000"
  },
  {
    "text": "own process and uh communicate with the other applications running on this on this host soet sockets right you know so",
    "start": "466000",
    "end": "473159"
  },
  {
    "text": "you have um a two chains like uh Bumblebee and you know things like that BPF um so those are the two",
    "start": "473159",
    "end": "479840"
  },
  {
    "text": "um um uh most popular ebpf deployment methods today so the problem the issue",
    "start": "479840",
    "end": "486120"
  },
  {
    "text": "with the integrated deployment however um I think the biggest issue is uh Securities you know because regardless",
    "start": "486120",
    "end": "492960"
  },
  {
    "text": "what you want to do ebpf has to be deployed in the kernel so you have to give it a very broad set of permissions",
    "start": "492960",
    "end": "499240"
  },
  {
    "text": "and uh um and and uh you know authorization essentially have it has to run as a super user that creates its own",
    "start": "499240",
    "end": "507199"
  },
  {
    "text": "set of you know um uh you know um a policy and security and and those issues",
    "start": "507199",
    "end": "514039"
  },
  {
    "text": "right and also there's uh the ebpf program is typically very small but you",
    "start": "514039",
    "end": "519320"
  },
  {
    "text": "sort of need a very large framework just to deploy it you know so it's uh it is not very efficient especially you know",
    "start": "519320",
    "end": "525800"
  },
  {
    "text": "if you talk about cases like in Edge Cloud you know things um uh things of that nature right so",
    "start": "525800",
    "end": "534519"
  },
  {
    "text": "then there's um the other part of the integrated development the the other problem of the",
    "start": "534519",
    "end": "540600"
  },
  {
    "text": "integrated development is on the is on the um is on the development side because that's what's um you know so it",
    "start": "540600",
    "end": "547279"
  },
  {
    "text": "it it is also um somewhat difficult because there's new framework involved and you know things like that it's some",
    "start": "547279",
    "end": "553480"
  },
  {
    "text": "somewhat more difficult to develop those ebpf applications so then that leads to",
    "start": "553480",
    "end": "559800"
  },
  {
    "text": "um people exploring the other deployment models that's decoupled deployment model right so instead of having a large",
    "start": "559800",
    "end": "565760"
  },
  {
    "text": "framework that that manages all the ebpf um you know uh and modules you can have",
    "start": "565760",
    "end": "571600"
  },
  {
    "text": "a a a decoupled setup you know so meaning that you run a separate process",
    "start": "571600",
    "end": "576800"
  },
  {
    "text": "on your host machine that's um that used to manage and deploy ebpf applications",
    "start": "576800",
    "end": "581839"
  },
  {
    "text": "that's that that a process you can communicate the rest of the containers in the uh in the host can can",
    "start": "581839",
    "end": "588600"
  },
  {
    "text": "communicate with that with that process through sockets right you know so that's give rise to you know um so sockets and",
    "start": "588600",
    "end": "594880"
  },
  {
    "text": "rpcs and you know things like that that give rise to you know um",
    "start": "594880",
    "end": "599959"
  },
  {
    "text": "um like we mentioned the project like bumblebe and bbfd and you know things like that but they also have somewhat",
    "start": "599959",
    "end": "606040"
  },
  {
    "text": "challenges you know because those are a separate piece of software that you have to uh maintain that is outside of your",
    "start": "606040",
    "end": "611959"
  },
  {
    "text": "main application workflows it's not integrated by definition right so you have to have a separate way to maintain",
    "start": "611959",
    "end": "617480"
  },
  {
    "text": "updates and uh um and Patch any problems that's that's um that the community may",
    "start": "617480",
    "end": "623720"
  },
  {
    "text": "have discovered results so it's uh it it is uh um it requires more work you know so that's",
    "start": "623720",
    "end": "629680"
  },
  {
    "text": "the second way you know that's uh the the decoupled EPF deployment so the the",
    "start": "629680",
    "end": "636440"
  },
  {
    "text": "solution that we want to present in this open source project is wasm plus e ebpf",
    "start": "636440",
    "end": "641560"
  },
  {
    "text": "that's really uh um you know our goal is to have Best of Both Worlds you know so",
    "start": "641560",
    "end": "647360"
  },
  {
    "text": "we have a instead of having a Linux container that deploys ebpf agent we use",
    "start": "647360",
    "end": "653680"
  },
  {
    "text": "a wasm application or we call the wasm container to deploy ebpf applications",
    "start": "653680",
    "end": "658760"
  },
  {
    "text": "and uh um because you know we had a um um announcement in last year C you know",
    "start": "658760",
    "end": "666519"
  },
  {
    "text": "in in Detroit with uh with stalker um to to show that uh um wasm application can",
    "start": "666519",
    "end": "672560"
  },
  {
    "text": "run side by side with container applications in the docker in doer composed and Docker setup and since then",
    "start": "672560",
    "end": "678760"
  },
  {
    "text": "a lot of development you know uh there has been a lot of development to make wasm a for a first class sent in the",
    "start": "678760",
    "end": "684959"
  },
  {
    "text": "kubernetes cluster right you know so in the kubernetes cluster you cannot you know you can have virtual machines now",
    "start": "684959",
    "end": "690120"
  },
  {
    "text": "you can have you know container and then you can also have uh wasm application that run side by side so from the",
    "start": "690120",
    "end": "696519"
  },
  {
    "text": "kubernetes point of view those wasm application behave like they containers but they are just wasm application so",
    "start": "696519",
    "end": "702160"
  },
  {
    "text": "their sandboxing is very different than the than the regular container right so the benefit of those is that they're",
    "start": "702160",
    "end": "707200"
  },
  {
    "text": "much lighter and much easier to manage so that's um the the feature we want to take advantage of is to you know um is",
    "start": "707200",
    "end": "713760"
  },
  {
    "text": "to have the the the ebpf agent um embedded in the wasm application",
    "start": "713760",
    "end": "719560"
  },
  {
    "text": "and being deployed by the WM application and have their data communicated back to the WM application instead of uh 100",
    "start": "719560",
    "end": "727240"
  },
  {
    "text": "megabytes 200 megabytes container that does this work we want a very small one",
    "start": "727240",
    "end": "732839"
  },
  {
    "text": "megabytes 2 megabytes couple megabytes um you know um lightweight waterm application to do this work right so I",
    "start": "732839",
    "end": "740760"
  },
  {
    "text": "think oh yeah that's um I think that says the same thing right you know",
    "start": "740760",
    "end": "747000"
  },
  {
    "text": "so this is a project you know so the the [Music]",
    "start": "747000",
    "end": "752440"
  },
  {
    "text": "um you know you can find that on on GitHub you know that's uh but I think",
    "start": "752440",
    "end": "757639"
  },
  {
    "text": "you know um perhaps more interesting we we're going to have a we're going to have a demo right so oh perhaps we could do that and uh",
    "start": "757639",
    "end": "767040"
  },
  {
    "text": "you could do the Demo First and I I'll go back to talk about other things is that okay",
    "start": "767040",
    "end": "774160"
  },
  {
    "text": "okay I'm sorry my computer is a has some",
    "start": "774160",
    "end": "779199"
  },
  {
    "text": "so I didn't prepare for demo here so I just make some",
    "start": "779199",
    "end": "785440"
  },
  {
    "text": "G this is a simple G or video demo of how to use container tools like Portman",
    "start": "785440",
    "end": "792480"
  },
  {
    "text": "to run web assembly and ebpf as this shows uh we can use a pment container to",
    "start": "792480",
    "end": "798880"
  },
  {
    "text": "start and run e programming web assembly which you can trace the rank C latency",
    "start": "798880",
    "end": "805760"
  },
  {
    "text": "it's schedule in Windows as a histogram for the new system this program is",
    "start": "805760",
    "end": "812279"
  },
  {
    "text": "supported from the BCC tools and compared in web assembly with or to",
    "start": "812279",
    "end": "818040"
  },
  {
    "text": "chance uh you can fetch data from BPF hash maps in a kernel do some post",
    "start": "818040",
    "end": "823680"
  },
  {
    "text": "processing in US space and then print a result to console thef program is",
    "start": "823680",
    "end": "830040"
  },
  {
    "text": "integrated into your space web assly application which can be packed into a o",
    "start": "830040",
    "end": "835199"
  },
  {
    "text": "image and study as a container with oneome each one time we can also list",
    "start": "835199",
    "end": "840959"
  },
  {
    "text": "like sing pman web assembly containers and Z container we just started and like",
    "start": "840959",
    "end": "848040"
  },
  {
    "text": "user P to list it and car",
    "start": "848040",
    "end": "853279"
  },
  {
    "text": "it uh let's go to the development experience Li BPF is a widely used",
    "start": "853480",
    "end": "860079"
  },
  {
    "text": "framework for developing ebpf programs in C and C++ this a developer experience in web",
    "start": "860079",
    "end": "868959"
  },
  {
    "text": "assembly is similar to L of Li Bap including automatically generate SC be",
    "start": "868959",
    "end": "876519"
  },
  {
    "text": "have code framework and type definitions just like BPF tool and Li BPF both",
    "start": "876519",
    "end": "882320"
  },
  {
    "text": "chapters R autogen autogenerated scaron from our web assembly BPF tool left hand",
    "start": "882320",
    "end": "890160"
  },
  {
    "text": "is space code of FL and attaching the kernel evpi program it was WR in C which",
    "start": "890160",
    "end": "896920"
  },
  {
    "text": "can be compared into web assembly here are some basic examples let's take",
    "start": "896920",
    "end": "902199"
  },
  {
    "text": "a moment to walk through it uh first we have like a your problem in",
    "start": "902199",
    "end": "908000"
  },
  {
    "text": "observability and chasing this is like setting up a watch tower inside your",
    "start": "908000",
    "end": "913199"
  },
  {
    "text": "applications that you keep an eye on how functions are running without modify",
    "start": "913199",
    "end": "919160"
  },
  {
    "text": "modify L and this is the tracing part and xbb is for networking this can be",
    "start": "919160",
    "end": "927160"
  },
  {
    "text": "used to pro pro package at low lowest level before reach Network St in the",
    "start": "927160",
    "end": "934519"
  },
  {
    "text": "kernel allowing to you to fter reect or drw package as you",
    "start": "934519",
    "end": "940920"
  },
  {
    "text": "need and then we may have a LM for security L can allow you to set rules on",
    "start": "940920",
    "end": "949120"
  },
  {
    "text": "what system can and cannot do like bring a process from assessing a file or some",
    "start": "949120",
    "end": "956199"
  },
  {
    "text": "Network Port in kernel uh let's take a look at uh how web",
    "start": "956199",
    "end": "962800"
  },
  {
    "text": "assembly works this project essentially want to treat was s box as Al native use",
    "start": "962800",
    "end": "970560"
  },
  {
    "text": "this runtime space on top of os which means we can use web assembly to develop",
    "start": "970560",
    "end": "977360"
  },
  {
    "text": "and deploy ebpi programs as ordinary ebpi programs by which adding benefit of",
    "start": "977360",
    "end": "983360"
  },
  {
    "text": "security and is of moving from one system and another in long time a web",
    "start": "983360",
    "end": "989279"
  },
  {
    "text": "sbly model can manage multiple EF programs and allow dynamically load abpf",
    "start": "989279",
    "end": "995639"
  },
  {
    "text": "programs from web assembly send box into a kernel set desire events like your",
    "start": "995639",
    "end": "1001800"
  },
  {
    "text": "prob and KR chest points to attach to and un attach them control a complete",
    "start": "1001800",
    "end": "1008319"
  },
  {
    "text": "life cycle of multiple EF objects and support most e program times you can",
    "start": "1008319",
    "end": "1014800"
  },
  {
    "text": "also communic communication is a like two with web assembly and evf set up pass to",
    "start": "1014800",
    "end": "1023360"
  },
  {
    "text": "back and forth conversation which colel use evf maps like ring bar or per",
    "start": "1023360",
    "end": "1029319"
  },
  {
    "text": "event the evf can send message from state to your via ring or assess has Ms",
    "start": "1029319",
    "end": "1037400"
  },
  {
    "text": "from web sbly V machines they can also like share memory",
    "start": "1037400",
    "end": "1042880"
  },
  {
    "text": "between colel and web assembly run time",
    "start": "1042880",
    "end": "1050400"
  },
  {
    "text": "now let's move on how we can create EF applications with was some BPF this this",
    "start": "1050840",
    "end": "1057720"
  },
  {
    "text": "called tool chance to develop a EF program we first need to compare a",
    "start": "1057720",
    "end": "1063480"
  },
  {
    "text": "corresponding source code into BPF objects like a BPF g o using a CL or",
    "start": "1063480",
    "end": "1069679"
  },
  {
    "text": "arvm tool Trend which contains the BPF bod and the corresponding data structure",
    "start": "1069679",
    "end": "1075880"
  },
  {
    "text": "definitions maps and program definition in the BTF format this is where the BTF",
    "start": "1075880",
    "end": "1081799"
  },
  {
    "text": "works it's inside the BPF all then we can use PF info to generate skeleton and",
    "start": "1081799",
    "end": "1088840"
  },
  {
    "text": "bindings for your space program developer this approach is similar to the component models in web assembly in",
    "start": "1088840",
    "end": "1096320"
  },
  {
    "text": "which we can use l like with pent and Naro generate Bings in and",
    "start": "1096320",
    "end": "1104039"
  },
  {
    "text": "go then we can develop your space programs engl language and compar and packland to web assembly",
    "start": "1104039",
    "end": "1111120"
  },
  {
    "text": "model with the support of big CF and code generation uh all Communications",
    "start": "1111120",
    "end": "1118320"
  },
  {
    "text": "between a kernel EF and usace web Sim do not need to go through serations and",
    "start": "1118320",
    "end": "1125080"
  },
  {
    "text": "decoration mechanism at the same time the ebpf develop experience is just like",
    "start": "1125080",
    "end": "1131520"
  },
  {
    "text": "BPF tool and Li d uh we can compare and web assembly and",
    "start": "1131520",
    "end": "1139440"
  },
  {
    "text": "EF models which is typically like BCC tools like 100 kbits and they can be",
    "start": "1139440",
    "end": "1147679"
  },
  {
    "text": "dally Lo and excl incal like 100 million",
    "start": "1147679",
    "end": "1153799"
  },
  {
    "text": "seconds it's optimized for Rapid development and",
    "start": "1153799",
    "end": "1159080"
  },
  {
    "text": "institutions we have overcome some challenges before we can fully use evf",
    "start": "1161000",
    "end": "1166039"
  },
  {
    "text": "capability withing web assembly or CES first we have got some libraries we for",
    "start": "1166039",
    "end": "1172919"
  },
  {
    "text": "ccpp R and and go is if have interactions in respective",
    "start": "1172919",
    "end": "1180280"
  },
  {
    "text": "language so for R go we need to like transfer this langage",
    "start": "1180280",
    "end": "1187760"
  },
  {
    "text": "to the web sbly version to en enabling develop evpi programs English language",
    "start": "1187760",
    "end": "1194400"
  },
  {
    "text": "with web assembly and also another challenge is the data layout the web",
    "start": "1194400",
    "end": "1200679"
  },
  {
    "text": "assembly is like three to bits and EF is like 64 bits data L is different so we",
    "start": "1200679",
    "end": "1209559"
  },
  {
    "text": "user to CH to generate bindings and AO realizations between",
    "start": "1209559",
    "end": "1216360"
  },
  {
    "text": "them uh the last Str is the colel compatibility the BPF requires your",
    "start": "1216360",
    "end": "1222720"
  },
  {
    "text": "version to support you may use like compare ones and run everywhere",
    "start": "1222720",
    "end": "1228559"
  },
  {
    "text": "technology to enhance the portability of ebpi programs between Cel versions and",
    "start": "1228559",
    "end": "1234760"
  },
  {
    "text": "and we can also look at some us space EF run time for optional or compatible",
    "start": "1234760",
    "end": "1240440"
  },
  {
    "text": "layers for different cor versions like we can and for RAR and perect",
    "start": "1240440",
    "end": "1248200"
  },
  {
    "text": "event uh this is what use space ebpf does uh we are also examing a this is a",
    "start": "1248240",
    "end": "1255440"
  },
  {
    "text": "new project a new we also examine a new development in",
    "start": "1255440",
    "end": "1262320"
  },
  {
    "text": "system of cility with integration the combining of web assembly and with user",
    "start": "1262320",
    "end": "1268360"
  },
  {
    "text": "Bas evf run times web assembly with Cel evf unlock a lot of potential allow us to engage",
    "start": "1268360",
    "end": "1275960"
  },
  {
    "text": "deeply with lineage kernel however it do come with a need of specific kernel",
    "start": "1275960",
    "end": "1281799"
  },
  {
    "text": "versions um like a high Conover to support EF and privilege to Lo BF into",
    "start": "1281799",
    "end": "1289159"
  },
  {
    "text": "the also need to config and enable ebpf run time enter BPF time or new approach to",
    "start": "1289159",
    "end": "1297480"
  },
  {
    "text": "EF operate in carrying in your space it mean we can deploy EF tracing programs",
    "start": "1297480",
    "end": "1305200"
  },
  {
    "text": "without special permissions and without depending on Lage K version and even no",
    "start": "1305200",
    "end": "1310880"
  },
  {
    "text": "limit to Lage system BPF time may allow us to use evf tools way like your pro",
    "start": "1310880",
    "end": "1318240"
  },
  {
    "text": "and C Trace points to Monitor and tracing applications in your space this",
    "start": "1318240",
    "end": "1324600"
  },
  {
    "text": "to are light way and don't require like stopping and compare e applications with ef long",
    "start": "1324600",
    "end": "1332440"
  },
  {
    "text": "time you Pro like your space counterparts to kpr this is your pro",
    "start": "1332440",
    "end": "1338520"
  },
  {
    "text": "it's inside a Kel application which allow us to tras US based functions in",
    "start": "1338520",
    "end": "1343679"
  },
  {
    "text": "BPF the also supports your prop however the your problem is slow due to the",
    "start": "1343679",
    "end": "1350320"
  },
  {
    "text": "overhead of contact switching between kernel and your space we have time Sol this problem by running entirely in your",
    "start": "1350320",
    "end": "1358279"
  },
  {
    "text": "space which add add advantage of being up to 10 times faster than k your",
    "start": "1358279",
    "end": "1364480"
  },
  {
    "text": "problem plus BPF time play nicely with BPF to CH it support inter process EF",
    "start": "1364480",
    "end": "1371600"
  },
  {
    "text": "maps in your space or inting with colel evf mths and you can run Family Tools",
    "start": "1371600",
    "end": "1377240"
  },
  {
    "text": "like PCC and BPF tra entirely in your space without any change to their",
    "start": "1377240",
    "end": "1383200"
  },
  {
    "text": "code so we are looking maybe a more flexible way to get inside and manage",
    "start": "1383200",
    "end": "1388480"
  },
  {
    "text": "systems and also exporing potential intergrating with Technologies like dpk",
    "start": "1388480",
    "end": "1395480"
  },
  {
    "text": "and network test with us Bas ebpf it's a step forward in making a powerful system",
    "start": "1395480",
    "end": "1401919"
  },
  {
    "text": "tools more accessible and efficient so let's come to my",
    "start": "1401919",
    "end": "1408600"
  },
  {
    "text": "okay thank you yeah so um if I may summarize the point you know so um",
    "start": "1408600",
    "end": "1414159"
  },
  {
    "text": "before we move on to the next topic is that so why do you use WM to deploy ebpf",
    "start": "1414159",
    "end": "1420000"
  },
  {
    "text": "you know three things faster easier and safer okay faster also means smaller",
    "start": "1420000",
    "end": "1425200"
  },
  {
    "text": "because instead of using a container that is hundreds of megabytes use wasum which is only less than 10 megabytes of",
    "start": "1425200",
    "end": "1432240"
  },
  {
    "text": "the entire so quote unquote container to deploy the the the ebpf application you know that's faster and smaller and",
    "start": "1432240",
    "end": "1438960"
  },
  {
    "text": "easier is that because the ebpf is now embedded in the wasm so now you can",
    "start": "1438960",
    "end": "1444279"
  },
  {
    "text": "manage ebpf applications like oci artifact because uh you know uh because wasm applications can be stored directly",
    "start": "1444279",
    "end": "1451080"
  },
  {
    "text": "in the in uh in oci registry and be managed by kues and darker and such",
    "start": "1451080",
    "end": "1456120"
  },
  {
    "text": "right you know so um with that you can have ebpf applications embedded in mod so essentially you can have OCA registry",
    "start": "1456120",
    "end": "1462480"
  },
  {
    "text": "to manage ebpf application as well and uh I also know there's work a lot of work about wasm regustry you know like",
    "start": "1462480",
    "end": "1469080"
  },
  {
    "text": "component model and such you know so you know and that would also allow ebpf applications to be managed in those",
    "start": "1469080",
    "end": "1474440"
  },
  {
    "text": "repository being version and be managed there as well so this is easier and also that allows um especially with the user",
    "start": "1474440",
    "end": "1481000"
  },
  {
    "text": "space ebpf that allows you to uh develop single applications uh embedded in wasm",
    "start": "1481000",
    "end": "1486440"
  },
  {
    "text": "that's uh that is um that's um you know um portable across different ver different kernels and also user space",
    "start": "1486440",
    "end": "1492919"
  },
  {
    "text": "because the kernel ebpf is uh there are some um you know it's strongly tied towards internal versions you know so",
    "start": "1492919",
    "end": "1499200"
  },
  {
    "text": "there's uh the the portability is uh is somewhat limited however if you just want ebpf to monitor say Network traffic",
    "start": "1499200",
    "end": "1506559"
  },
  {
    "text": "and you know things like that things that happen in the user space you can have a lot better portability by you",
    "start": "1506559",
    "end": "1512200"
  },
  {
    "text": "know uh having those cbpf applications that embedded in wasm right and then safer you know that's also the user",
    "start": "1512200",
    "end": "1518360"
  },
  {
    "text": "space evf does not require um kernel privileges so you can deploy it as user",
    "start": "1518360",
    "end": "1523440"
  },
  {
    "text": "space in as user space application so that makes it safer uh out of gate right and also because the ebpf is managed by",
    "start": "1523440",
    "end": "1531240"
  },
  {
    "text": "is deployed by wasum so you can have wasum security model that applied to the ebpf stuff right you know so because",
    "start": "1531240",
    "end": "1537360"
  },
  {
    "text": "wasum has a um you know what what they call capability based security so you know so all the um operating system",
    "start": "1537360",
    "end": "1543240"
  },
  {
    "text": "access to the botom round time has to be declared and configured so you can have",
    "start": "1543240",
    "end": "1548320"
  },
  {
    "text": "um you know um a very um very declarative and very specific set of security policies of what this WM",
    "start": "1548320",
    "end": "1554440"
  },
  {
    "text": "application is allowed to do and not allowed to do in terms of deploying ebpf and uh you can",
    "start": "1554440",
    "end": "1559799"
  },
  {
    "text": "also um",
    "start": "1559799",
    "end": "1564840"
  },
  {
    "text": "um yeah that's you know that um I think that's enough benefits right you know that's U you know there's faster easier",
    "start": "1564840",
    "end": "1573120"
  },
  {
    "text": "and safer you know that's um you know that's why you need to um you know um I would highly encourage you guys to to",
    "start": "1573120",
    "end": "1579960"
  },
  {
    "text": "try it out especially if you already use ebpf today you know you um you know instead of deploying from container deploy it from waterm you know that's U",
    "start": "1579960",
    "end": "1586600"
  },
  {
    "text": "um um I think you know it's a um you",
    "start": "1586600",
    "end": "1592360"
  },
  {
    "text": "know I wouldn't say it's a better way but it is a better way you know it's a better way to do this you know that so",
    "start": "1592440",
    "end": "1599279"
  },
  {
    "text": "um I have five minutes left so you know I'll go really quick about um because I think most of you guys care about ebpf",
    "start": "1599279",
    "end": "1604799"
  },
  {
    "text": "less about wasm so uh but I I also want to talk about because um you know U because we have a wasm around time so so",
    "start": "1604799",
    "end": "1611480"
  },
  {
    "text": "so so I want to show how ebpf improves the wasm developer experience right you know so uh this this is a uh this is a",
    "start": "1611480",
    "end": "1619840"
  },
  {
    "text": "survey the web assembly Community has conducted last year um you know to talk about what's the you know the need in",
    "start": "1619840",
    "end": "1626440"
  },
  {
    "text": "the web some ecosystem you know if I people wants to write microservices run embedded functions you know whatever in",
    "start": "1626440",
    "end": "1632200"
  },
  {
    "text": "was them what do they need you know so um the there's a very pressing need for",
    "start": "1632200",
    "end": "1637320"
  },
  {
    "text": "better debugging tools because right now you know without debugging tools um a wasm would always be more or less like a",
    "start": "1637320",
    "end": "1643679"
  },
  {
    "text": "toy you know because you know you're only find out problems when once you deploy it right you know so um this is",
    "start": "1643679",
    "end": "1651000"
  },
  {
    "text": "actually one of the things that ebpf can make it um um you know",
    "start": "1651000",
    "end": "1657960"
  },
  {
    "text": "um um well it's debugging and security tools so I talk about those two separate",
    "start": "1657960",
    "end": "1664919"
  },
  {
    "text": "right you know one is ebpf makes wasi more secure because ebpf is uh um you",
    "start": "1664919",
    "end": "1670000"
  },
  {
    "text": "know it is a same it's already do in the container world right you know it's you have policies that you can use ebpf to",
    "start": "1670000",
    "end": "1675480"
  },
  {
    "text": "filter out P packets that you know that's uh you know and that's violate certain security policies you can do",
    "start": "1675480",
    "end": "1680559"
  },
  {
    "text": "that the exact same thing with um with wasm interface towards operating system so you know so you can have U",
    "start": "1680559",
    "end": "1687159"
  },
  {
    "text": "declarative policies where you know um even more fining green than say um wm's",
    "start": "1687159",
    "end": "1692880"
  },
  {
    "text": "own declarative policy you know so it's a it complement you know the wasm deplo wasm security policy uh restricts and",
    "start": "1692880",
    "end": "1699960"
  },
  {
    "text": "what type of ebpf application it can deploy and ebpf when it's running it can provide runtime and dynamic checks of a",
    "start": "1699960",
    "end": "1706519"
  },
  {
    "text": "lot of those security po right you know so ebpf makes waterm applications better",
    "start": "1706519",
    "end": "1711600"
  },
  {
    "text": "isolated and uh and uh uh and more secure and on the other hand is that",
    "start": "1711600",
    "end": "1716799"
  },
  {
    "text": "ebpf Pro could provide debugging tracing for the waterm time so you know um not only since that happens um you know",
    "start": "1716799",
    "end": "1724159"
  },
  {
    "text": "because um a lot of the debugging needs come from you know when you interact with other systems not just you know a",
    "start": "1724159",
    "end": "1730000"
  },
  {
    "text": "stack trace of your own you know um function calling stack but you know it's uh it's to say you know that's um when",
    "start": "1730000",
    "end": "1736200"
  },
  {
    "text": "you um call host functions in the system so for instance you know we are using wasm to",
    "start": "1736200",
    "end": "1741240"
  },
  {
    "text": "do AI inference it's frequently need to call underlying the py torch library or the you know um you know large language",
    "start": "1741240",
    "end": "1747919"
  },
  {
    "text": "model libraries and you know things like that and uh if the GPU access has a problem you know just you know to to you",
    "start": "1747919",
    "end": "1754080"
  },
  {
    "text": "know uh then it becomes really hard to debug because um what you see inside the bom around time is segmentation part you",
    "start": "1754080",
    "end": "1760640"
  },
  {
    "text": "know that's so you know you are you have illegal CPU instructions or you have illegal GPU instructions you know that's",
    "start": "1760640",
    "end": "1766600"
  },
  {
    "text": "U um so you know I I think with cbpf and you can you can manage those um you can look into those traffic and you can",
    "start": "1766600",
    "end": "1772679"
  },
  {
    "text": "manage those traffic I think it' be a lot um you know um it give a much more compelling developer experience for",
    "start": "1772679",
    "end": "1779440"
  },
  {
    "text": "um um for web assem developers as well so the main takeaway is that you know um",
    "start": "1779440",
    "end": "1787360"
  },
  {
    "text": "the first that the the the wasm container wasm application is a lightweight way to deploy ebpf on on on",
    "start": "1787360",
    "end": "1794720"
  },
  {
    "text": "host in in in kubernetes right it's uh it has the benefits of the both the",
    "start": "1794720",
    "end": "1800200"
  },
  {
    "text": "tight integration and the decoupled approach you know in a way it is uh it is tight integration because it's integrating into wasm however it is also",
    "start": "1800200",
    "end": "1807240"
  },
  {
    "text": "decoupled from your main workload right you know so it's U um it's it's um I",
    "start": "1807240",
    "end": "1813080"
  },
  {
    "text": "think it's a good compromise and it's a good use case of a of a light of a lightweight sandbox like wasm right and",
    "start": "1813080",
    "end": "1820919"
  },
  {
    "text": "wasm can use user space vpf I thought that's was very interesting because that's users like we said repeatedly",
    "start": "1820919",
    "end": "1826880"
  },
  {
    "text": "user SP cppf does not require root access does not require a a whole set of",
    "start": "1826880",
    "end": "1831960"
  },
  {
    "text": "security permissions you know it allows those um you know application that doesn't does not need colonal access to",
    "start": "1831960",
    "end": "1837519"
  },
  {
    "text": "behave much much more security much more security and much better right and uh um",
    "start": "1837519",
    "end": "1842760"
  },
  {
    "text": "then sbpf could become part of the wasi implementation you know to to um to",
    "start": "1842760",
    "end": "1847919"
  },
  {
    "text": "enhance security at to enhance security and traceability at least in the in the um you know um um when wasm is running",
    "start": "1847919",
    "end": "1855600"
  },
  {
    "text": "in the Linux environment which is I think you know in the cloud it's maybe 90% of the case right so um yeah I think",
    "start": "1855600",
    "end": "1863840"
  },
  {
    "text": "that's we are right on time you know so that's good you know um I I'll go back to put on the uh link to the project so",
    "start": "1863840",
    "end": "1871399"
  },
  {
    "text": "you know um we really love you guys to check it out and uh you know if you have um questions I think we'll have one",
    "start": "1871399",
    "end": "1878320"
  },
  {
    "text": "minutes you know so if anyone wants to ask a",
    "start": "1878320",
    "end": "1882120"
  },
  {
    "text": "question",
    "start": "1885320",
    "end": "1888320"
  }
]