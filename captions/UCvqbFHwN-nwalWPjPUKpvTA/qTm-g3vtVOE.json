[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "hello okay let's get started",
    "start": "30",
    "end": "3240"
  },
  {
    "text": "hello everyone welcome to capi machinery",
    "start": "3240",
    "end": "6620"
  },
  {
    "text": "deep dive my name is Antoine Felice this",
    "start": "6620",
    "end": "13620"
  },
  {
    "text": "is Stefan shemanski and we have Mike",
    "start": "13620",
    "end": "16230"
  },
  {
    "text": "spread so from IBM and Stefan is from",
    "start": "16230",
    "end": "19320"
  },
  {
    "text": "right at we're going to talk about",
    "start": "19320",
    "end": "21180"
  },
  {
    "text": "apiary machinery and Stefan is going to",
    "start": "21180",
    "end": "25350"
  },
  {
    "text": "stop talking about the CRTs and some of",
    "start": "25350",
    "end": "27420"
  },
  {
    "text": "the new things we are working on then",
    "start": "27420",
    "end": "30090"
  },
  {
    "text": "I'll talk about suicide apply and then",
    "start": "30090",
    "end": "31830"
  },
  {
    "text": "Mikey is gonna talk about peyote and",
    "start": "31830",
    "end": "33660"
  },
  {
    "text": "fairness",
    "start": "33660",
    "end": "34200"
  },
  {
    "text": "so one topic we are talking in the city",
    "start": "34200",
    "end": "36989"
  },
  {
    "text": "at the moment about this immutability so",
    "start": "36989",
    "end": "39450"
  },
  {
    "text": "marking things in ser Diaz unchangable",
    "start": "39450",
    "end": "43200"
  },
  {
    "text": "as you know from pot specs for example",
    "start": "43200",
    "end": "45210"
  },
  {
    "text": "prospects cannot be changed similar",
    "start": "45210",
    "end": "47940"
  },
  {
    "text": "things we want for CDs and yeah I would",
    "start": "47940",
    "end": "52079"
  },
  {
    "start": "51000",
    "end": "176000"
  },
  {
    "text": "start with that so it's not finished",
    "start": "52079",
    "end": "54420"
  },
  {
    "text": "everything here is working progress as a",
    "start": "54420",
    "end": "56579"
  },
  {
    "text": "kept as a PR against the cap to update",
    "start": "56579",
    "end": "59100"
  },
  {
    "text": "it I just want to see to show ya what's",
    "start": "59100",
    "end": "63960"
  },
  {
    "text": "ideas here are so the idea is that we",
    "start": "63960",
    "end": "66150"
  },
  {
    "text": "can mark fields immutable mutability",
    "start": "66150",
    "end": "68760"
  },
  {
    "text": "immutable and then this is a the slice",
    "start": "68760",
    "end": "72479"
  },
  {
    "text": "here's what's defining an array in open",
    "start": "72479",
    "end": "74340"
  },
  {
    "text": "API cannot be changed and our question",
    "start": "74340",
    "end": "77549"
  },
  {
    "text": "was what does it mean obviously if you",
    "start": "77549",
    "end": "81150"
  },
  {
    "text": "don't change anything a B to a B it's",
    "start": "81150",
    "end": "84780"
  },
  {
    "text": "fine if you change the order yeah it",
    "start": "84780",
    "end": "87030"
  },
  {
    "text": "looks like some change in the in the",
    "start": "87030",
    "end": "88650"
  },
  {
    "text": "array so you don't want to allow that",
    "start": "88650",
    "end": "89840"
  },
  {
    "text": "but we quickly came to cases like empty",
    "start": "89840",
    "end": "93060"
  },
  {
    "text": "slice there's as null should be food",
    "start": "93060",
    "end": "95909"
  },
  {
    "text": "it'd be the same or not it's not so",
    "start": "95909",
    "end": "98040"
  },
  {
    "text": "clear for many native types it is but",
    "start": "98040",
    "end": "102689"
  },
  {
    "text": "for C edges here these are usually",
    "start": "102689",
    "end": "104670"
  },
  {
    "text": "handled strictly so those differences",
    "start": "104670",
    "end": "107520"
  },
  {
    "text": "are preserved so probably it's not the",
    "start": "107520",
    "end": "110700"
  },
  {
    "text": "same same thing if you if you're just",
    "start": "110700",
    "end": "114869"
  },
  {
    "text": "slice not at all so the slice not you",
    "start": "114869",
    "end": "116520"
  },
  {
    "text": "find it all in the in the surrounding",
    "start": "116520",
    "end": "118619"
  },
  {
    "text": "object also in here in the CID world it",
    "start": "118619",
    "end": "122340"
  },
  {
    "text": "looks different there's a second way to",
    "start": "122340",
    "end": "125969"
  },
  {
    "text": "to put immutability on something",
    "start": "125969",
    "end": "129490"
  },
  {
    "text": "gets put on the items so I'm not only",
    "start": "129490",
    "end": "131560"
  },
  {
    "text": "the whole array is immutable but only",
    "start": "131560",
    "end": "134800"
  },
  {
    "text": "the items individually so every item",
    "start": "134800",
    "end": "137740"
  },
  {
    "text": "would be unchangeable and if you do that",
    "start": "137740",
    "end": "140980"
  },
  {
    "text": "so we get similar cases first order",
    "start": "140980",
    "end": "143470"
  },
  {
    "text": "changes not a good idea we won't reject",
    "start": "143470",
    "end": "145450"
  },
  {
    "text": "that but maybe removal is okay because",
    "start": "145450",
    "end": "149820"
  },
  {
    "text": "yeah the second element the second",
    "start": "149820",
    "end": "152410"
  },
  {
    "text": "second item here in this in the slice",
    "start": "152410",
    "end": "154060"
  },
  {
    "text": "it's not changed because it doesn't",
    "start": "154060",
    "end": "156220"
  },
  {
    "text": "exist anymore in the result so one could",
    "start": "156220",
    "end": "158800"
  },
  {
    "text": "say yeah might be the same and adding",
    "start": "158800",
    "end": "160960"
  },
  {
    "text": "something could also be allowed because",
    "start": "160960",
    "end": "162520"
  },
  {
    "text": "the array can be changed but not so",
    "start": "162520",
    "end": "164650"
  },
  {
    "text": "items but if an item doesn't exist",
    "start": "164650",
    "end": "166450"
  },
  {
    "text": "before it's not really changing so yeah",
    "start": "166450",
    "end": "169510"
  },
  {
    "text": "we're discussing those things if you",
    "start": "169510",
    "end": "171310"
  },
  {
    "text": "want to look for details the cap is",
    "start": "171310",
    "end": "173200"
  },
  {
    "text": "there and update of the cap recipe are",
    "start": "173200",
    "end": "175420"
  },
  {
    "text": "at the moment when looking at null and",
    "start": "175420",
    "end": "180010"
  },
  {
    "start": "176000",
    "end": "233000"
  },
  {
    "text": "empty yeah there were different opinions",
    "start": "180010",
    "end": "182980"
  },
  {
    "text": "what to do and in native types we",
    "start": "182980",
    "end": "185140"
  },
  {
    "text": "usually identify them so now and MD is",
    "start": "185140",
    "end": "188140"
  },
  {
    "text": "the same thing or undefined is the same",
    "start": "188140",
    "end": "190630"
  },
  {
    "text": "thing and but we have done some choices",
    "start": "190630",
    "end": "193600"
  },
  {
    "text": "in in NC IDs so defaulting exists will",
    "start": "193600",
    "end": "197620"
  },
  {
    "text": "be GA and the next version and",
    "start": "197620",
    "end": "200280"
  },
  {
    "text": "defaulting is strict so and defaulting",
    "start": "200280",
    "end": "202600"
  },
  {
    "text": "only undefined this default it if you",
    "start": "202600",
    "end": "205690"
  },
  {
    "text": "have a null in an object or an empty",
    "start": "205690",
    "end": "207490"
  },
  {
    "text": "list it's never defaulted so defaulting",
    "start": "207490",
    "end": "210280"
  },
  {
    "text": "is strict so we made a choice not to",
    "start": "210280",
    "end": "212050"
  },
  {
    "text": "identify those values validation we have",
    "start": "212050",
    "end": "218200"
  },
  {
    "text": "set for ages and everybody who use",
    "start": "218200",
    "end": "220120"
  },
  {
    "text": "validation relation you can easily",
    "start": "220120",
    "end": "223240"
  },
  {
    "text": "distinguish between those special",
    "start": "223240",
    "end": "225790"
  },
  {
    "text": "educators so I would say validation is",
    "start": "225790",
    "end": "228370"
  },
  {
    "text": "also a strict mechanism we have",
    "start": "228370",
    "end": "230500"
  },
  {
    "text": "implemented for a long time",
    "start": "230500",
    "end": "232600"
  },
  {
    "text": "so yeah the consequence of that is",
    "start": "232600",
    "end": "235930"
  },
  {
    "start": "233000",
    "end": "304000"
  },
  {
    "text": "probably we want also equality to be",
    "start": "235930",
    "end": "239440"
  },
  {
    "text": "strict so always when objects are",
    "start": "239440",
    "end": "241780"
  },
  {
    "text": "compared and you have null you have",
    "start": "241780",
    "end": "244090"
  },
  {
    "text": "empty you distinguish it's never the",
    "start": "244090",
    "end": "246040"
  },
  {
    "text": "same thing the rule of thumb which we",
    "start": "246040",
    "end": "249970"
  },
  {
    "text": "have in mind here is if we define",
    "start": "249970",
    "end": "252760"
  },
  {
    "text": "objects are yeah when objects are equal",
    "start": "252760",
    "end": "256600"
  },
  {
    "text": "when are they equal on the client side",
    "start": "256600",
    "end": "258489"
  },
  {
    "text": "when you have an object in your hands to",
    "start": "258489",
    "end": "260260"
  },
  {
    "text": "manifest for example",
    "start": "260260",
    "end": "262270"
  },
  {
    "text": "and say you consider them equal then if",
    "start": "262270",
    "end": "268419"
  },
  {
    "text": "you do a request with this object as a",
    "start": "268419",
    "end": "270100"
  },
  {
    "text": "server you would also expect as a server",
    "start": "270100",
    "end": "272530"
  },
  {
    "text": "that's the same thing so I'm really hand",
    "start": "272530",
    "end": "274690"
  },
  {
    "text": "waving here at the moment so it's really",
    "start": "274690",
    "end": "276280"
  },
  {
    "text": "really a really rough idea a rule of",
    "start": "276280",
    "end": "278680"
  },
  {
    "text": "thumb or something like that",
    "start": "278680",
    "end": "280479"
  },
  {
    "text": "so if objects on the client side and in",
    "start": "280479",
    "end": "283240"
  },
  {
    "text": "ED CDI considered equal and I do",
    "start": "283240",
    "end": "285069"
  },
  {
    "text": "something with objects I better get the",
    "start": "285069",
    "end": "287710"
  },
  {
    "text": "same results or the same response and I",
    "start": "287710",
    "end": "290050"
  },
  {
    "text": "get the same reside also in LCD so we",
    "start": "290050",
    "end": "292479"
  },
  {
    "text": "want something like that so the",
    "start": "292479",
    "end": "295300"
  },
  {
    "text": "consequence is probably that we want a",
    "start": "295300",
    "end": "298509"
  },
  {
    "text": "strict equality so we don't want to",
    "start": "298509",
    "end": "300580"
  },
  {
    "text": "unify null MD and undefined negative",
    "start": "300580",
    "end": "307900"
  },
  {
    "start": "304000",
    "end": "360000"
  },
  {
    "text": "types are different everybody know was",
    "start": "307900",
    "end": "309520"
  },
  {
    "text": "that if you use go long types and you're",
    "start": "309520",
    "end": "311860"
  },
  {
    "text": "unmarshal into them certain things",
    "start": "311860",
    "end": "314520"
  },
  {
    "text": "yeah they identified by omit empty",
    "start": "314520",
    "end": "317080"
  },
  {
    "text": "everybody knows on with empty in goal",
    "start": "317080",
    "end": "318430"
  },
  {
    "text": "encode so we have something which",
    "start": "318430",
    "end": "320970"
  },
  {
    "text": "normalizes in native native types",
    "start": "320970",
    "end": "323710"
  },
  {
    "text": "already and see at least we don't have",
    "start": "323710",
    "end": "325569"
  },
  {
    "text": "set at all and the question is maybe we",
    "start": "325569",
    "end": "327759"
  },
  {
    "text": "should have set so for many use cases we",
    "start": "327759",
    "end": "331030"
  },
  {
    "text": "don't want to distinguish between those",
    "start": "331030",
    "end": "333009"
  },
  {
    "text": "three special educators so maybe we need",
    "start": "333009",
    "end": "335320"
  },
  {
    "text": "something similar in series as well we",
    "start": "335320",
    "end": "339159"
  },
  {
    "text": "are looking for puto buff or some",
    "start": "339159",
    "end": "341020"
  },
  {
    "text": "variation of binary encoding and Porter",
    "start": "341020",
    "end": "344409"
  },
  {
    "text": "buff is even more like that there's no",
    "start": "344409",
    "end": "347949"
  },
  {
    "text": "distinction between not defining",
    "start": "347949",
    "end": "350050"
  },
  {
    "text": "something in a CID and empty so maybe we",
    "start": "350050",
    "end": "355570"
  },
  {
    "text": "need something like normalization as",
    "start": "355570",
    "end": "357070"
  },
  {
    "text": "well and we are thinking about that and",
    "start": "357070",
    "end": "359830"
  },
  {
    "text": "if you if you look on the request",
    "start": "359830",
    "end": "362080"
  },
  {
    "start": "360000",
    "end": "416000"
  },
  {
    "text": "pipeline we have in kubernetes 4c IDs",
    "start": "362080",
    "end": "364509"
  },
  {
    "text": "looks like that all the green bubbles",
    "start": "364509",
    "end": "366940"
  },
  {
    "text": "here's green circles they are strict so",
    "start": "366940",
    "end": "369580"
  },
  {
    "text": "we have makers mechanisms like",
    "start": "369580",
    "end": "371110"
  },
  {
    "text": "defaulting I showed that validation and",
    "start": "371110",
    "end": "373120"
  },
  {
    "text": "service logic so patches and so on",
    "start": "373120",
    "end": "375909"
  },
  {
    "text": "everything is tweaked and maybe we need",
    "start": "375909",
    "end": "378159"
  },
  {
    "text": "something which normalizes source values",
    "start": "378159",
    "end": "380229"
  },
  {
    "text": "in this pipeline basically yeah",
    "start": "380229",
    "end": "384039"
  },
  {
    "text": "repeating what we do with native types",
    "start": "384039",
    "end": "386560"
  },
  {
    "text": "with us so : and marshalling we want to",
    "start": "386560",
    "end": "388990"
  },
  {
    "text": "replicate that for CID so you get",
    "start": "388990",
    "end": "391630"
  },
  {
    "text": "something like that once is reputable",
    "start": "391630",
    "end": "393760"
  },
  {
    "text": "here",
    "start": "393760",
    "end": "395130"
  },
  {
    "text": "there may be one for to normalize and we",
    "start": "395130",
    "end": "397530"
  },
  {
    "text": "are discussing that at the moment and",
    "start": "397530",
    "end": "399240"
  },
  {
    "text": "actually there are more places where we",
    "start": "399240",
    "end": "401460"
  },
  {
    "text": "have to take on a more fuzzy look on our",
    "start": "401460",
    "end": "405030"
  },
  {
    "text": "objects so actually identified those",
    "start": "405030",
    "end": "409260"
  },
  {
    "text": "here I think they're more in admission",
    "start": "409260",
    "end": "411000"
  },
  {
    "text": "even so this might become something in",
    "start": "411000",
    "end": "414360"
  },
  {
    "text": "this year deep processing immutability",
    "start": "414360",
    "end": "418260"
  },
  {
    "start": "416000",
    "end": "490000"
  },
  {
    "text": "also sent us to this topic so we have",
    "start": "418260",
    "end": "421230"
  },
  {
    "text": "something new since 116 you can define",
    "start": "421230",
    "end": "424290"
  },
  {
    "text": "this type for fields in CDs and let's",
    "start": "424290",
    "end": "428100"
  },
  {
    "text": "type traditionally it was just atomic",
    "start": "428100",
    "end": "429990"
  },
  {
    "text": "the whole list was either unchanged or",
    "start": "429990",
    "end": "433980"
  },
  {
    "text": "replaced by an update we have two more",
    "start": "433980",
    "end": "437820"
  },
  {
    "text": "cases now we can say a list an array in",
    "start": "437820",
    "end": "440370"
  },
  {
    "text": "a CID is a set then you expect that",
    "start": "440370",
    "end": "443730"
  },
  {
    "text": "every element is unique so there should",
    "start": "443730",
    "end": "445650"
  },
  {
    "text": "be some unique reading a check in the",
    "start": "445650",
    "end": "447420"
  },
  {
    "text": "CID poster and the siapa setting and we",
    "start": "447420",
    "end": "450810"
  },
  {
    "text": "also have a map type where you have a",
    "start": "450810",
    "end": "452820"
  },
  {
    "text": "subset of the fields which are keys so",
    "start": "452820",
    "end": "455760"
  },
  {
    "text": "everybody knows containers and ports",
    "start": "455760",
    "end": "457560"
  },
  {
    "text": "there as they are lists so this type is",
    "start": "457560",
    "end": "460050"
  },
  {
    "text": "map and the name is identifier for each",
    "start": "460050",
    "end": "463230"
  },
  {
    "text": "element and we also support that in 116",
    "start": "463230",
    "end": "467360"
  },
  {
    "text": "for CRS yeah and where's the same thing",
    "start": "467360",
    "end": "471780"
  },
  {
    "text": "for maps if you have a map you also want",
    "start": "471780",
    "end": "474750"
  },
  {
    "text": "atomic as an additional kind or",
    "start": "474750",
    "end": "478380"
  },
  {
    "text": "different additional type to Maps",
    "start": "478380",
    "end": "480650"
  },
  {
    "text": "everybody who knows strategy merge patch",
    "start": "480650",
    "end": "483110"
  },
  {
    "text": "we had similar things already before for",
    "start": "483110",
    "end": "486060"
  },
  {
    "text": "native types but it could say how things",
    "start": "486060",
    "end": "488370"
  },
  {
    "text": "are merged so this is all about merging",
    "start": "488370",
    "end": "492350"
  },
  {
    "start": "490000",
    "end": "547000"
  },
  {
    "text": "when you when you update for example",
    "start": "492590",
    "end": "496410"
  },
  {
    "text": "here on the left side we have a map a",
    "start": "496410",
    "end": "499010"
  },
  {
    "text": "has a value X and I update it with be 42",
    "start": "499010",
    "end": "503970"
  },
  {
    "text": "then by default those are merged so",
    "start": "503970",
    "end": "507180"
  },
  {
    "text": "granula is a keyword here as a type",
    "start": "507180",
    "end": "509160"
  },
  {
    "text": "those are merged if you change it to",
    "start": "509160",
    "end": "512700"
  },
  {
    "text": "atomic you want an atomic map it's a",
    "start": "512700",
    "end": "515520"
  },
  {
    "text": "replacement then if if a map is atomic",
    "start": "515520",
    "end": "518700"
  },
  {
    "text": "it behaves like a slice like an array",
    "start": "518700",
    "end": "521130"
  },
  {
    "text": "arrays are by default atomic and",
    "start": "521130",
    "end": "523650"
  },
  {
    "text": "replaced so if you have a set to X and",
    "start": "523650",
    "end": "526890"
  },
  {
    "text": "you update with B",
    "start": "526890",
    "end": "528750"
  },
  {
    "text": "2:42 and it's an atomic map then just be",
    "start": "528750",
    "end": "532230"
  },
  {
    "text": "42 yes wizard a is just dropped and yeah",
    "start": "532230",
    "end": "537510"
  },
  {
    "text": "so this is all introduced for which no",
    "start": "537510",
    "end": "541260"
  },
  {
    "text": "reason was servers had to play and",
    "start": "541260",
    "end": "542880"
  },
  {
    "text": "Antoine will continue with this topic",
    "start": "542880",
    "end": "545130"
  },
  {
    "text": "now okay server side apply so when we",
    "start": "545130",
    "end": "552810"
  },
  {
    "start": "547000",
    "end": "639000"
  },
  {
    "text": "started implementing this feature we",
    "start": "552810",
    "end": "554640"
  },
  {
    "text": "spent a fair amount of time trying to",
    "start": "554640",
    "end": "556260"
  },
  {
    "text": "understand how configuration and objects",
    "start": "556260",
    "end": "559560"
  },
  {
    "text": "worked in kubernetes and so we went back",
    "start": "559560",
    "end": "561480"
  },
  {
    "text": "to the roots and we realized that",
    "start": "561480",
    "end": "563790"
  },
  {
    "text": "kubernetes is about declarative",
    "start": "563790",
    "end": "565500"
  },
  {
    "text": "configurations what does this mean it",
    "start": "565500",
    "end": "568410"
  },
  {
    "text": "means that multiple people in the system",
    "start": "568410",
    "end": "570510"
  },
  {
    "text": "have an opinion about the resources and",
    "start": "570510",
    "end": "572790"
  },
  {
    "text": "they're going to send what they care",
    "start": "572790",
    "end": "575010"
  },
  {
    "text": "about and this is going to be merged",
    "start": "575010",
    "end": "577620"
  },
  {
    "text": "together into the object the object is",
    "start": "577620",
    "end": "580740"
  },
  {
    "text": "changed my multiple axles and they have",
    "start": "580740",
    "end": "582870"
  },
  {
    "text": "to collaborate together to have a good",
    "start": "582870",
    "end": "586160"
  },
  {
    "text": "reasonable value the resources typically",
    "start": "586160",
    "end": "590220"
  },
  {
    "text": "specify the intent and multiple actors",
    "start": "590220",
    "end": "593400"
  },
  {
    "text": "are changing it",
    "start": "593400",
    "end": "594480"
  },
  {
    "text": "so the idea behind cube call apply",
    "start": "594480",
    "end": "597060"
  },
  {
    "text": "initially is to a little clients and by",
    "start": "597060",
    "end": "600270"
  },
  {
    "text": "clients I mean mostly users like human",
    "start": "600270",
    "end": "602430"
  },
  {
    "text": "beings to send our intern to the server",
    "start": "602430",
    "end": "605490"
  },
  {
    "text": "and say hey this is what I care about",
    "start": "605490",
    "end": "607170"
  },
  {
    "text": "this is what I want the system to look",
    "start": "607170",
    "end": "608790"
  },
  {
    "text": "like please make it so the poem we",
    "start": "608790",
    "end": "611730"
  },
  {
    "text": "studies it's it doesn't work with you",
    "start": "611730",
    "end": "613410"
  },
  {
    "text": "have multiple actors which means that",
    "start": "613410",
    "end": "615930"
  },
  {
    "text": "controllers can't have intent at least",
    "start": "615930",
    "end": "618300"
  },
  {
    "text": "they can't use client-side apply they",
    "start": "618300",
    "end": "620670"
  },
  {
    "text": "have to either change the object fetch",
    "start": "620670",
    "end": "623610"
  },
  {
    "text": "the object modified the way they want it",
    "start": "623610",
    "end": "625410"
  },
  {
    "text": "to look like and then update it or they",
    "start": "625410",
    "end": "627540"
  },
  {
    "text": "have to build a complicated badge",
    "start": "627540",
    "end": "629120"
  },
  {
    "text": "sometimes it's very hard because if they",
    "start": "629120",
    "end": "631140"
  },
  {
    "text": "want to do a strategic knowledge patch",
    "start": "631140",
    "end": "632490"
  },
  {
    "text": "it just doesn't work so it's very hard",
    "start": "632490",
    "end": "634770"
  },
  {
    "text": "to write a controller that is going to",
    "start": "634770",
    "end": "636300"
  },
  {
    "text": "specify an intent",
    "start": "636300",
    "end": "638790"
  },
  {
    "text": "so we consider these use cases we can",
    "start": "638790",
    "end": "642000"
  },
  {
    "text": "look at some other drawbacks of",
    "start": "642000",
    "end": "644100"
  },
  {
    "text": "client-side apply if you're writing your",
    "start": "644100",
    "end": "647070"
  },
  {
    "text": "library that is going to send",
    "start": "647070",
    "end": "648450"
  },
  {
    "text": "client-side apply it's very difficult",
    "start": "648450",
    "end": "650930"
  },
  {
    "text": "constructing the SMP patch is very hard",
    "start": "650930",
    "end": "653520"
  },
  {
    "text": "the protocol is also extremely how to",
    "start": "653520",
    "end": "655530"
  },
  {
    "text": "update this in google organically and",
    "start": "655530",
    "end": "658010"
  },
  {
    "text": "anytime we update the server to",
    "start": "658010",
    "end": "660850"
  },
  {
    "text": "implemented a new feature we have to",
    "start": "660850",
    "end": "662199"
  },
  {
    "text": "make sure the client also has the",
    "start": "662199",
    "end": "663579"
  },
  {
    "text": "feature and we need to make sure that",
    "start": "663579",
    "end": "664899"
  },
  {
    "text": "you are talking the same language it's",
    "start": "664899",
    "end": "667329"
  },
  {
    "text": "very how you also have mostly to use the",
    "start": "667329",
    "end": "671350"
  },
  {
    "text": "API machine reliable if you want to do",
    "start": "671350",
    "end": "673420"
  },
  {
    "text": "that which means you have to do it and",
    "start": "673420",
    "end": "675160"
  },
  {
    "text": "go there is no implementation in Python",
    "start": "675160",
    "end": "677139"
  },
  {
    "text": "or anything else the only other option",
    "start": "677139",
    "end": "678940"
  },
  {
    "text": "is to actually use cube coral and other",
    "start": "678940",
    "end": "682750"
  },
  {
    "text": "poems' we have is that there is no multi",
    "start": "682750",
    "end": "685000"
  },
  {
    "text": "key associative least there is no unions",
    "start": "685000",
    "end": "689350"
  },
  {
    "text": "you can have multiple versions don't",
    "start": "689350",
    "end": "691660"
  },
  {
    "text": "even try to apply an objection a",
    "start": "691660",
    "end": "693190"
  },
  {
    "text": "different version that's not going to",
    "start": "693190",
    "end": "694389"
  },
  {
    "text": "work so we decided to try and fix it",
    "start": "694389",
    "end": "698910"
  },
  {
    "start": "697000",
    "end": "724000"
  },
  {
    "text": "from very far away Southside is about",
    "start": "698910",
    "end": "702399"
  },
  {
    "text": "tracking people's intent and what we've",
    "start": "702399",
    "end": "705279"
  },
  {
    "text": "done is that we tracked fields that we",
    "start": "705279",
    "end": "707800"
  },
  {
    "text": "believe people care about when a client",
    "start": "707800",
    "end": "711759"
  },
  {
    "text": "apply their intent they send us the",
    "start": "711759",
    "end": "714040"
  },
  {
    "text": "fields that they care about and so we're",
    "start": "714040",
    "end": "715690"
  },
  {
    "text": "going to track these and we're going to",
    "start": "715690",
    "end": "719079"
  },
  {
    "text": "merge everything on the server so that",
    "start": "719079",
    "end": "720610"
  },
  {
    "text": "the resources look the way we think you",
    "start": "720610",
    "end": "723339"
  },
  {
    "text": "want it to look because so clients and",
    "start": "723339",
    "end": "730569"
  },
  {
    "start": "724000",
    "end": "753000"
  },
  {
    "text": "the entire internships in the server",
    "start": "730569",
    "end": "732699"
  },
  {
    "text": "side apply but existing controllers",
    "start": "732699",
    "end": "735040"
  },
  {
    "text": "can't use all side apply because they've",
    "start": "735040",
    "end": "737079"
  },
  {
    "text": "been built before server side apply",
    "start": "737079",
    "end": "738910"
  },
  {
    "text": "existed so what they do is that they",
    "start": "738910",
    "end": "740980"
  },
  {
    "text": "keep using the update or the patch and",
    "start": "740980",
    "end": "742870"
  },
  {
    "text": "we're trying to guess their intent based",
    "start": "742870",
    "end": "744730"
  },
  {
    "text": "on what they changed so if if a",
    "start": "744730",
    "end": "747370"
  },
  {
    "text": "controller changes a field we're going",
    "start": "747370",
    "end": "748750"
  },
  {
    "text": "to assume it has an opinion about this",
    "start": "748750",
    "end": "750699"
  },
  {
    "text": "value and we're going to track it so we",
    "start": "750699",
    "end": "753040"
  },
  {
    "start": "753000",
    "end": "791000"
  },
  {
    "text": "have two different workflows now we have",
    "start": "753040",
    "end": "755199"
  },
  {
    "text": "the source side apply workflow where you",
    "start": "755199",
    "end": "756910"
  },
  {
    "text": "specify exactly what you want and we",
    "start": "756910",
    "end": "758680"
  },
  {
    "text": "have the update workflow where you",
    "start": "758680",
    "end": "759970"
  },
  {
    "text": "change the resource and we guess what it",
    "start": "759970",
    "end": "762189"
  },
  {
    "text": "is pretty much the update workflow is",
    "start": "762189",
    "end": "765880"
  },
  {
    "text": "used for anything that exists today that",
    "start": "765880",
    "end": "767529"
  },
  {
    "text": "is post for creation boot for update",
    "start": "767529",
    "end": "769870"
  },
  {
    "text": "that this is going to use the the update",
    "start": "769870",
    "end": "773170"
  },
  {
    "text": "workflow and if you send an apply",
    "start": "773170",
    "end": "775899"
  },
  {
    "text": "we're going to use all the fields for",
    "start": "775899",
    "end": "777490"
  },
  {
    "text": "your intent the way you supplies",
    "start": "777490",
    "end": "779790"
  },
  {
    "text": "interestingly it's a patch so you just",
    "start": "779790",
    "end": "783490"
  },
  {
    "text": "send the object it's a yellow object you",
    "start": "783490",
    "end": "785439"
  },
  {
    "text": "send the object with all the things that",
    "start": "785439",
    "end": "787240"
  },
  {
    "text": "you care about the values that you want",
    "start": "787240",
    "end": "789010"
  },
  {
    "text": "and we're going to keep track of that so",
    "start": "789010",
    "end": "792550"
  },
  {
    "start": "791000",
    "end": "861000"
  },
  {
    "text": "how do we keep track of what you own",
    "start": "792550",
    "end": "795620"
  },
  {
    "text": "we've built some sort of tree of all the",
    "start": "795620",
    "end": "798649"
  },
  {
    "text": "fields that you care about and we move",
    "start": "798649",
    "end": "801709"
  },
  {
    "text": "move that inside the metadata of the of",
    "start": "801709",
    "end": "804380"
  },
  {
    "text": "the object as we can see it's not just",
    "start": "804380",
    "end": "807500"
  },
  {
    "text": "the name of the field it's also F colon",
    "start": "807500",
    "end": "809740"
  },
  {
    "text": "which is actually useful to understand",
    "start": "809740",
    "end": "812510"
  },
  {
    "text": "the structure of the object we can see f",
    "start": "812510",
    "end": "814940"
  },
  {
    "text": "means fields and we also have a que name",
    "start": "814940",
    "end": "817370"
  },
  {
    "text": "static sidecar this is useful to",
    "start": "817370",
    "end": "819620"
  },
  {
    "text": "understand that containers least but the",
    "start": "819620",
    "end": "822920"
  },
  {
    "text": "least are actually maps and so we can",
    "start": "822920",
    "end": "824959"
  },
  {
    "text": "track the object by looking at at the",
    "start": "824959",
    "end": "827360"
  },
  {
    "text": "key",
    "start": "827360",
    "end": "827779"
  },
  {
    "text": "so for each person that replies or",
    "start": "827779",
    "end": "831670"
  },
  {
    "text": "modify the object and for each version",
    "start": "831670",
    "end": "834020"
  },
  {
    "text": "we have these set of objects that they",
    "start": "834020",
    "end": "836029"
  },
  {
    "text": "are we can we we can have the some of",
    "start": "836029",
    "end": "839540"
  },
  {
    "text": "the fields can be owned by multiple",
    "start": "839540",
    "end": "840800"
  },
  {
    "text": "people so if two persons apply if two",
    "start": "840800",
    "end": "843380"
  },
  {
    "text": "person apply the same value for the same",
    "start": "843380",
    "end": "846050"
  },
  {
    "text": "fields it's going to be tracked by the",
    "start": "846050",
    "end": "848690"
  },
  {
    "text": "two persons if any of the person tries",
    "start": "848690",
    "end": "852110"
  },
  {
    "text": "to change the value then it's going to",
    "start": "852110",
    "end": "853700"
  },
  {
    "text": "cause a conflict you can first the",
    "start": "853700",
    "end": "857690"
  },
  {
    "text": "convicts we're gonna see that next and",
    "start": "857690",
    "end": "860770"
  },
  {
    "text": "yeah so a conflicts when you do an",
    "start": "860770",
    "end": "865190"
  },
  {
    "text": "update so if you modify the objects or",
    "start": "865190",
    "end": "867589"
  },
  {
    "text": "send a patch which is the case for most",
    "start": "867589",
    "end": "869270"
  },
  {
    "text": "controllers we are going to",
    "start": "869270",
    "end": "872470"
  },
  {
    "text": "automatically grab the ownership of the",
    "start": "872470",
    "end": "874670"
  },
  {
    "text": "field that is because we don't want to",
    "start": "874670",
    "end": "876620"
  },
  {
    "text": "break backwards-compatibility so if the",
    "start": "876620",
    "end": "878839"
  },
  {
    "text": "controller is used to update or send the",
    "start": "878839",
    "end": "880610"
  },
  {
    "text": "patch is going to have to succeed it can",
    "start": "880610",
    "end": "883459"
  },
  {
    "text": "fail now so we are always going to",
    "start": "883459",
    "end": "886070"
  },
  {
    "text": "change the ownership of the field so if",
    "start": "886070",
    "end": "888500"
  },
  {
    "text": "i'm a d HPA and i'm trying to change the",
    "start": "888500",
    "end": "890930"
  },
  {
    "text": "replica of an object anytime I change",
    "start": "890930",
    "end": "892610"
  },
  {
    "text": "this replica I'm going to own that that",
    "start": "892610",
    "end": "896329"
  },
  {
    "text": "field apply a small use cases so when",
    "start": "896329",
    "end": "899810"
  },
  {
    "text": "I'm trying now with apply to object to",
    "start": "899810",
    "end": "902329"
  },
  {
    "text": "update this number of replicas if it's",
    "start": "902329",
    "end": "905899"
  },
  {
    "text": "owned by someone else I'm going to end",
    "start": "905899",
    "end": "907640"
  },
  {
    "text": "up with a conflict because and that's",
    "start": "907640",
    "end": "911839"
  },
  {
    "text": "that's actually a feature we don't want",
    "start": "911839",
    "end": "914060"
  },
  {
    "text": "people to override values that they",
    "start": "914060",
    "end": "916370"
  },
  {
    "text": "don't own by accident if the HPA has",
    "start": "916370",
    "end": "919339"
  },
  {
    "text": "decided that the value should be least",
    "start": "919339",
    "end": "920839"
  },
  {
    "text": "and you should either decide that you",
    "start": "920839",
    "end": "925140"
  },
  {
    "text": "have the ownership of the field and you",
    "start": "925140",
    "end": "926700"
  },
  {
    "text": "have the opinion or you have to give it",
    "start": "926700",
    "end": "929430"
  },
  {
    "text": "up merging merging is extremely simple",
    "start": "929430",
    "end": "935790"
  },
  {
    "start": "932000",
    "end": "979000"
  },
  {
    "text": "we just take the current object and we",
    "start": "935790",
    "end": "938640"
  },
  {
    "text": "apply the new configuration on top of",
    "start": "938640",
    "end": "941820"
  },
  {
    "text": "that what I'm saying simple of course",
    "start": "941820",
    "end": "944850"
  },
  {
    "text": "I'm lying it's very very complicated",
    "start": "944850",
    "end": "948320"
  },
  {
    "text": "what we have to do is that we want to",
    "start": "948320",
    "end": "950700"
  },
  {
    "text": "remove the field the the items in the",
    "start": "950700",
    "end": "953010"
  },
  {
    "text": "maps that you don't care about so for",
    "start": "953010",
    "end": "955890"
  },
  {
    "text": "example if you had a container and you",
    "start": "955890",
    "end": "958050"
  },
  {
    "text": "decide to change the container for",
    "start": "958050",
    "end": "959670"
  },
  {
    "text": "another container we need to realize",
    "start": "959670",
    "end": "961170"
  },
  {
    "text": "that you remove the container container",
    "start": "961170",
    "end": "963209"
  },
  {
    "text": "so we can't just apply blindly we have",
    "start": "963209",
    "end": "965670"
  },
  {
    "text": "to find that you have you had this",
    "start": "965670",
    "end": "968339"
  },
  {
    "text": "container before you don't have it",
    "start": "968339",
    "end": "970170"
  },
  {
    "text": "anymore and nobody cares about this",
    "start": "970170",
    "end": "971790"
  },
  {
    "text": "container and we also have to do that",
    "start": "971790",
    "end": "974339"
  },
  {
    "text": "across versions which is pretty",
    "start": "974339",
    "end": "975750"
  },
  {
    "text": "complicated there are quite a few",
    "start": "975750",
    "end": "981149"
  },
  {
    "start": "979000",
    "end": "1066000"
  },
  {
    "text": "features that we are missing on our",
    "start": "981149",
    "end": "983760"
  },
  {
    "text": "futures the drugs also we have so we",
    "start": "983760",
    "end": "986040"
  },
  {
    "text": "have a lot of problems with performance",
    "start": "986040",
    "end": "987560"
  },
  {
    "text": "it's keeping us pretty busy since we are",
    "start": "987560",
    "end": "991800"
  },
  {
    "text": "definitely on the critical path because",
    "start": "991800",
    "end": "993480"
  },
  {
    "text": "we have every single update per batch",
    "start": "993480",
    "end": "995790"
  },
  {
    "text": "and apply operations to track that's a",
    "start": "995790",
    "end": "998100"
  },
  {
    "text": "lot of work for the API server so we're",
    "start": "998100",
    "end": "1000410"
  },
  {
    "text": "trying to reduce the performance impact",
    "start": "1000410",
    "end": "1003010"
  },
  {
    "text": "also since we are out tracking the",
    "start": "1003010",
    "end": "1005420"
  },
  {
    "text": "fields for every single modifier of the",
    "start": "1005420",
    "end": "1007399"
  },
  {
    "text": "object this is a lot of data that we",
    "start": "1007399",
    "end": "1009290"
  },
  {
    "text": "have to add to the object so we are",
    "start": "1009290",
    "end": "1011209"
  },
  {
    "text": "trying to make sure that these field",
    "start": "1011209",
    "end": "1012920"
  },
  {
    "text": "series as small as possible we're also",
    "start": "1012920",
    "end": "1016339"
  },
  {
    "text": "working on unions which is not",
    "start": "1016339",
    "end": "1019339"
  },
  {
    "text": "completely well defined yet another",
    "start": "1019339",
    "end": "1023480"
  },
  {
    "text": "interesting feature that we want to",
    "start": "1023480",
    "end": "1025188"
  },
  {
    "text": "implement is the ability to remove",
    "start": "1025189",
    "end": "1026900"
  },
  {
    "text": "fields where I said that you declare the",
    "start": "1026900",
    "end": "1030110"
  },
  {
    "text": "opinion and the things that you care",
    "start": "1030110",
    "end": "1031579"
  },
  {
    "text": "about you have absolutely zero way to",
    "start": "1031579",
    "end": "1033798"
  },
  {
    "text": "say I care about this not existing this",
    "start": "1033799",
    "end": "1037760"
  },
  {
    "text": "is just the nature of the object we",
    "start": "1037760",
    "end": "1039589"
  },
  {
    "text": "don't have a good way to say I don't",
    "start": "1039589",
    "end": "1040790"
  },
  {
    "text": "want this so we would like to implement",
    "start": "1040790",
    "end": "1043100"
  },
  {
    "text": "a way to say I want these to be removed",
    "start": "1043100",
    "end": "1045500"
  },
  {
    "text": "or I want these to not exist this would",
    "start": "1045500",
    "end": "1047808"
  },
  {
    "text": "be extremely convenient for controllers",
    "start": "1047809",
    "end": "1049730"
  },
  {
    "text": "and ideally we would like to track",
    "start": "1049730",
    "end": "1053710"
  },
  {
    "text": "mutation from mutating webhooks but",
    "start": "1053710",
    "end": "1057530"
  },
  {
    "text": "again because of",
    "start": "1057530",
    "end": "1058480"
  },
  {
    "text": "we can't perform all these operations",
    "start": "1058480",
    "end": "1062140"
  },
  {
    "text": "for every single mutating webhooks",
    "start": "1062140",
    "end": "1066120"
  },
  {
    "text": "mic so we don't have the declines",
    "start": "1067049",
    "end": "1081390"
  },
  {
    "text": "correct well when you look at it at home",
    "start": "1081390",
    "end": "1084429"
  },
  {
    "text": "you'll find the names I'm working with a",
    "start": "1084429",
    "end": "1086230"
  },
  {
    "text": "few people",
    "start": "1086230",
    "end": "1087450"
  },
  {
    "text": "aren Prindle and daniel Smith from",
    "start": "1087450",
    "end": "1090160"
  },
  {
    "text": "Google Bruce ma and and Tony hey from",
    "start": "1090160",
    "end": "1096850"
  },
  {
    "text": "and minjin from and financial and myself",
    "start": "1096850",
    "end": "1100590"
  },
  {
    "text": "okay um can we go down a little so okay",
    "start": "1100590",
    "end": "1114970"
  },
  {
    "text": "that's better",
    "start": "1114970",
    "end": "1115929"
  },
  {
    "text": "all right so we're working on adding a",
    "start": "1115929",
    "end": "1119260"
  },
  {
    "text": "new feature there's a cap for it about",
    "start": "1119260",
    "end": "1121750"
  },
  {
    "text": "API priority in fairness the concern is",
    "start": "1121750",
    "end": "1123929"
  },
  {
    "text": "getting some consume self-protection in",
    "start": "1123929",
    "end": "1127150"
  },
  {
    "text": "the control plane currently buggy",
    "start": "1127150",
    "end": "1129490"
  },
  {
    "text": "controllers buggy or aggressive clients",
    "start": "1129490",
    "end": "1132850"
  },
  {
    "text": "can can take down the control plane just",
    "start": "1132850",
    "end": "1134860"
  },
  {
    "text": "by overloading it we want to provide",
    "start": "1134860",
    "end": "1136419"
  },
  {
    "text": "some self protection so the basic idea",
    "start": "1136419",
    "end": "1139780"
  },
  {
    "text": "you first think of is rate limiting it",
    "start": "1139780",
    "end": "1142510"
  },
  {
    "text": "occurs to us that it matters that some R",
    "start": "1142510",
    "end": "1145179"
  },
  {
    "text": "in some requests take longer to serve",
    "start": "1145179",
    "end": "1146919"
  },
  {
    "text": "than others so we want to really look at",
    "start": "1146919",
    "end": "1149020"
  },
  {
    "text": "the product of the RIC request rate and",
    "start": "1149020",
    "end": "1152080"
  },
  {
    "text": "how long it takes to serve each request",
    "start": "1152080",
    "end": "1153460"
  },
  {
    "text": "and if you think about it a minute that",
    "start": "1153460",
    "end": "1155380"
  },
  {
    "text": "averages out to number of requests",
    "start": "1155380",
    "end": "1157330"
  },
  {
    "text": "executing so what we're going to do is",
    "start": "1157330",
    "end": "1159820"
  },
  {
    "text": "regulate request executing and really",
    "start": "1159820",
    "end": "1162460"
  },
  {
    "text": "this is just a more sophisticated",
    "start": "1162460",
    "end": "1163480"
  },
  {
    "text": "version of the max and flight handler",
    "start": "1163480",
    "end": "1165910"
  },
  {
    "text": "that's there today the existing one",
    "start": "1165910",
    "end": "1168340"
  },
  {
    "text": "makes a simple distinction between",
    "start": "1168340",
    "end": "1169630"
  },
  {
    "text": "mutating and non mutating requests which",
    "start": "1169630",
    "end": "1172120"
  },
  {
    "text": "we think is actually not very",
    "start": "1172120",
    "end": "1173020"
  },
  {
    "text": "interesting anymore we're more",
    "start": "1173020",
    "end": "1174400"
  },
  {
    "text": "interested in distinguishing where these",
    "start": "1174400",
    "end": "1175780"
  },
  {
    "text": "requests are coming from what they're",
    "start": "1175780",
    "end": "1176919"
  },
  {
    "text": "doing oh there it is okay all right",
    "start": "1176919",
    "end": "1182710"
  },
  {
    "text": "so the basic idea is this is a filter it",
    "start": "1182710",
    "end": "1185169"
  },
  {
    "text": "goes into or a handler it goes into",
    "start": "1185169",
    "end": "1187270"
  },
  {
    "text": "existing handler chain I've zoomed way",
    "start": "1187270",
    "end": "1188799"
  },
  {
    "text": "in on the new",
    "start": "1188799",
    "end": "1189779"
  },
  {
    "text": "or there's some earlier handlers and",
    "start": "1189779",
    "end": "1191639"
  },
  {
    "text": "some later handlers and we can debate",
    "start": "1191639",
    "end": "1193499"
  },
  {
    "text": "about whether it's in the right place",
    "start": "1193499",
    "end": "1195330"
  },
  {
    "text": "we're still working on that but the",
    "start": "1195330",
    "end": "1197489"
  },
  {
    "text": "basic idea is there's two concepts here",
    "start": "1197489",
    "end": "1199710"
  },
  {
    "text": "there's priority levels we're going to",
    "start": "1199710",
    "end": "1201690"
  },
  {
    "text": "classify the traffic and assign it to",
    "start": "1201690",
    "end": "1203070"
  },
  {
    "text": "priority levels so the first stage is",
    "start": "1203070",
    "end": "1204659"
  },
  {
    "text": "classification we have a series of flow",
    "start": "1204659",
    "end": "1206969"
  },
  {
    "text": "schemas that the each request is matched",
    "start": "1206969",
    "end": "1209999"
  },
  {
    "text": "against the flow schema is in turn the",
    "start": "1209999",
    "end": "1211799"
  },
  {
    "text": "first one that matches is the one that",
    "start": "1211799",
    "end": "1213779"
  },
  {
    "text": "determines it a flow schema is as the",
    "start": "1213779",
    "end": "1216269"
  },
  {
    "text": "name suggests the description of a",
    "start": "1216269",
    "end": "1218099"
  },
  {
    "text": "collection of flows for each flow schema",
    "start": "1218099",
    "end": "1220979"
  },
  {
    "text": "its flows are mapped to a priority level",
    "start": "1220979",
    "end": "1222869"
  },
  {
    "text": "and then a priority level disguise",
    "start": "1222869",
    "end": "1224879"
  },
  {
    "text": "describes what to do with it each",
    "start": "1224879",
    "end": "1226769"
  },
  {
    "text": "priority level has a request concurrency",
    "start": "1226769",
    "end": "1229049"
  },
  {
    "text": "limit and then the choice for how to",
    "start": "1229049",
    "end": "1231149"
  },
  {
    "text": "handle things that exceed the limit you",
    "start": "1231149",
    "end": "1232769"
  },
  {
    "text": "can either drop them or queue them also",
    "start": "1232769",
    "end": "1235529"
  },
  {
    "text": "some requests some priority levels are",
    "start": "1235529",
    "end": "1237269"
  },
  {
    "text": "exempt from this limiting limitation at",
    "start": "1237269",
    "end": "1238859"
  },
  {
    "text": "all and that's important all right and",
    "start": "1238859",
    "end": "1243779"
  },
  {
    "text": "if it's queueing there's a set of cues",
    "start": "1243779",
    "end": "1246539"
  },
  {
    "text": "that are configured we use a technique",
    "start": "1246539",
    "end": "1248639"
  },
  {
    "text": "called shuffle charting which lets you",
    "start": "1248639",
    "end": "1250830"
  },
  {
    "text": "actually get a lot of independence with",
    "start": "1250830",
    "end": "1254190"
  },
  {
    "text": "a relative if you few number of queues",
    "start": "1254190",
    "end": "1256609"
  },
  {
    "text": "so away we go let's look at some example",
    "start": "1256609",
    "end": "1260339"
  },
  {
    "start": "1259000",
    "end": "1369000"
  },
  {
    "text": "configurations so for a priority level",
    "start": "1260339",
    "end": "1262679"
  },
  {
    "text": "maybe you start in the bottom right here",
    "start": "1262679",
    "end": "1264029"
  },
  {
    "text": "the simplest kind of priority level is",
    "start": "1264029",
    "end": "1266039"
  },
  {
    "text": "one that is exempt from controls it just",
    "start": "1266039",
    "end": "1268499"
  },
  {
    "text": "says hey I'm exempt next level up in",
    "start": "1268499",
    "end": "1271229"
  },
  {
    "text": "sophistication top right hand side top",
    "start": "1271229",
    "end": "1273570"
  },
  {
    "text": "right hand side the slide is a request",
    "start": "1273570",
    "end": "1276210"
  },
  {
    "text": "priority level that says okay I'm gonna",
    "start": "1276210",
    "end": "1278849"
  },
  {
    "text": "have concurrency limits but I'm not",
    "start": "1278849",
    "end": "1280379"
  },
  {
    "text": "going to do any queuing so you see there",
    "start": "1280379",
    "end": "1282450"
  },
  {
    "text": "there's a parameter called assured",
    "start": "1282450",
    "end": "1284219"
  },
  {
    "text": "concurrency shares so what we do is at",
    "start": "1284219",
    "end": "1286889"
  },
  {
    "text": "the API servers options there's already",
    "start": "1286889",
    "end": "1291659"
  },
  {
    "text": "parameters to configure a concurrency",
    "start": "1291659",
    "end": "1293460"
  },
  {
    "text": "limit that's used by the the maximum",
    "start": "1293460",
    "end": "1294929"
  },
  {
    "text": "flight handler",
    "start": "1294929",
    "end": "1295739"
  },
  {
    "text": "we repurpose that okay we divided up",
    "start": "1295739",
    "end": "1297899"
  },
  {
    "text": "proportionally amongst the priority",
    "start": "1297899",
    "end": "1300210"
  },
  {
    "text": "levels that are not exempt and this",
    "start": "1300210",
    "end": "1302279"
  },
  {
    "text": "shares is just their proportion okay so",
    "start": "1302279",
    "end": "1305429"
  },
  {
    "text": "that kind of logic so the shares",
    "start": "1305429",
    "end": "1308399"
  },
  {
    "text": "together with the overall limit",
    "start": "1308399",
    "end": "1309690"
  },
  {
    "text": "determines the absolute number limit for",
    "start": "1309690",
    "end": "1311999"
  },
  {
    "text": "this priority level and that's all there",
    "start": "1311999",
    "end": "1314369"
  },
  {
    "text": "is if there's no queueing if a request",
    "start": "1314369",
    "end": "1316349"
  },
  {
    "text": "if again if request comes in for a",
    "start": "1316349",
    "end": "1319349"
  },
  {
    "text": "prairie level that's already at its max",
    "start": "1319349",
    "end": "1320729"
  },
  {
    "text": "it",
    "start": "1320729",
    "end": "1321410"
  },
  {
    "text": "we'll get dropped or rejected more",
    "start": "1321410",
    "end": "1323600"
  },
  {
    "text": "precise now let's look left or left-hand",
    "start": "1323600",
    "end": "1328100"
  },
  {
    "text": "side of the screen here a more complex",
    "start": "1328100",
    "end": "1330020"
  },
  {
    "text": "example where we doing cueing okay we",
    "start": "1330020",
    "end": "1332000"
  },
  {
    "text": "still got the same parameters for the",
    "start": "1332000",
    "end": "1333740"
  },
  {
    "text": "concurrency limit but we've now it's",
    "start": "1333740",
    "end": "1335420"
  },
  {
    "text": "also got queuing parameters we've got a",
    "start": "1335420",
    "end": "1337790"
  },
  {
    "text": "number of queues we had a hand size",
    "start": "1337790",
    "end": "1340130"
  },
  {
    "text": "that's the shuffle shorting the metaphor",
    "start": "1340130",
    "end": "1342140"
  },
  {
    "text": "is you deal up a shuffle a deck and",
    "start": "1342140",
    "end": "1344840"
  },
  {
    "text": "delisted in certain number cards which",
    "start": "1344840",
    "end": "1346160"
  },
  {
    "text": "is a number of cues then we're going to",
    "start": "1346160",
    "end": "1347600"
  },
  {
    "text": "pick the cue that has the one of the",
    "start": "1347600",
    "end": "1349160"
  },
  {
    "text": "cues that has the shortest length to put",
    "start": "1349160",
    "end": "1351050"
  },
  {
    "text": "the new request in and then we also have",
    "start": "1351050",
    "end": "1353600"
  },
  {
    "text": "some limits on how think long things can",
    "start": "1353600",
    "end": "1355190"
  },
  {
    "text": "sit in the queue a one is there's a time",
    "start": "1355190",
    "end": "1357140"
  },
  {
    "text": "limit and that's a a PR server a",
    "start": "1357140",
    "end": "1360800"
  },
  {
    "text": "parameter and there's also a length",
    "start": "1360800",
    "end": "1363560"
  },
  {
    "text": "limit for each queue which Prairie level",
    "start": "1363560",
    "end": "1365450"
  },
  {
    "text": "has its individual queue length limit",
    "start": "1365450",
    "end": "1367630"
  },
  {
    "text": "all right so that's priorities on the",
    "start": "1367630",
    "end": "1371510"
  },
  {
    "start": "1369000",
    "end": "1433000"
  },
  {
    "text": "flow schemas we've borrowed a lot of",
    "start": "1371510",
    "end": "1373730"
  },
  {
    "text": "concepts here from our Beck and adapted",
    "start": "1373730",
    "end": "1375680"
  },
  {
    "text": "them and and we recast them we realized",
    "start": "1375680",
    "end": "1379520"
  },
  {
    "text": "that in our back there's actually a lot",
    "start": "1379520",
    "end": "1380810"
  },
  {
    "text": "of Union structure that's not done in",
    "start": "1380810",
    "end": "1382550"
  },
  {
    "text": "the usual way we do unions in in our API",
    "start": "1382550",
    "end": "1385390"
  },
  {
    "text": "models so we revised it to follow the",
    "start": "1385390",
    "end": "1388580"
  },
  {
    "text": "usual patterns for unions okay so",
    "start": "1388580",
    "end": "1390830"
  },
  {
    "text": "there's a couple of concepts here",
    "start": "1390830",
    "end": "1392140"
  },
  {
    "text": "there's like in our back there are",
    "start": "1392140",
    "end": "1395210"
  },
  {
    "text": "subjects verbs and objects or targets we",
    "start": "1395210",
    "end": "1397370"
  },
  {
    "text": "say because everything's an object so",
    "start": "1397370",
    "end": "1401290"
  },
  {
    "text": "subjects there are three kinds of",
    "start": "1401290",
    "end": "1402890"
  },
  {
    "text": "subjects we can match on like in our",
    "start": "1402890",
    "end": "1404330"
  },
  {
    "text": "back general user or use by matching",
    "start": "1404330",
    "end": "1407540"
  },
  {
    "text": "find user name user groups and service",
    "start": "1407540",
    "end": "1410240"
  },
  {
    "text": "accounts for then for the then there's",
    "start": "1410240",
    "end": "1414160"
  },
  {
    "text": "four targets or yes there's either",
    "start": "1414160",
    "end": "1416990"
  },
  {
    "text": "resource style target or non resource",
    "start": "1416990",
    "end": "1419180"
  },
  {
    "text": "style target you see an example here",
    "start": "1419180",
    "end": "1420920"
  },
  {
    "text": "with the non resource style where",
    "start": "1420920",
    "end": "1422690"
  },
  {
    "text": "there's just a verb in a URL pattern for",
    "start": "1422690",
    "end": "1425030"
  },
  {
    "text": "the resource style we have the usual",
    "start": "1425030",
    "end": "1426620"
  },
  {
    "text": "terms in our API we have API groups we",
    "start": "1426620",
    "end": "1429710"
  },
  {
    "text": "have the resources and we have",
    "start": "1429710",
    "end": "1431720"
  },
  {
    "text": "namespaces let's look at another example",
    "start": "1431720",
    "end": "1434510"
  },
  {
    "text": "to bring a couple more things we can",
    "start": "1434510",
    "end": "1436610"
  },
  {
    "text": "talk about resources that are not clust",
    "start": "1436610",
    "end": "1438770"
  },
  {
    "text": "that are not names based we could also",
    "start": "1438770",
    "end": "1440990"
  },
  {
    "text": "talk about requests that are for all",
    "start": "1440990",
    "end": "1443500"
  },
  {
    "text": "namespaces and that's matched with this",
    "start": "1443500",
    "end": "1446900"
  },
  {
    "text": "cluster scope boolean here's also an",
    "start": "1446900",
    "end": "1450230"
  },
  {
    "text": "example of a service account from where",
    "start": "1450230",
    "end": "1452060"
  },
  {
    "text": "we talk about the namespace in the name",
    "start": "1452060",
    "end": "1453560"
  },
  {
    "text": "of the service account",
    "start": "1453560",
    "end": "1454789"
  },
  {
    "text": "so we're gonna take questions",
    "start": "1454789",
    "end": "1465488"
  },
  {
    "text": "we have five minutes right ten minutes",
    "start": "1471179",
    "end": "1476340"
  },
  {
    "text": "not sure is a computation to sent to",
    "start": "1509950",
    "end": "1514399"
  },
  {
    "text": "different SD clusters yeah that's",
    "start": "1514399",
    "end": "1521539"
  },
  {
    "text": "actually working focus PR fixing that at",
    "start": "1521539",
    "end": "1525590"
  },
  {
    "text": "the moment technically is possible we",
    "start": "1525590",
    "end": "1529700"
  },
  {
    "text": "had discussion to to build something",
    "start": "1529700",
    "end": "1533450"
  },
  {
    "text": "like a storage computation layer so",
    "start": "1533450",
    "end": "1535580"
  },
  {
    "text": "something more abstract and more",
    "start": "1535580",
    "end": "1537350"
  },
  {
    "text": "official but I haven't really really",
    "start": "1537350",
    "end": "1541429"
  },
  {
    "text": "early so if you're interested that in",
    "start": "1541429",
    "end": "1542990"
  },
  {
    "text": "that yeah Joyce discussion speak to the",
    "start": "1542990",
    "end": "1547279"
  },
  {
    "text": "people from the sake but no at the",
    "start": "1547279",
    "end": "1549259"
  },
  {
    "text": "moment it's not possible",
    "start": "1549259",
    "end": "1552279"
  },
  {
    "text": "okay so the question is if there is a",
    "start": "1566350",
    "end": "1568630"
  },
  {
    "text": "conflict how do you know what the",
    "start": "1568630",
    "end": "1570429"
  },
  {
    "text": "conflict is and would you ever conflict",
    "start": "1570429",
    "end": "1572409"
  },
  {
    "text": "with so we actually keep track of who",
    "start": "1572409",
    "end": "1575830"
  },
  {
    "text": "has made the change our ones the field",
    "start": "1575830",
    "end": "1577929"
  },
  {
    "text": "we keep track of the time when it",
    "start": "1577929",
    "end": "1580059"
  },
  {
    "text": "happens so pretty much if you have a",
    "start": "1580059",
    "end": "1582130"
  },
  {
    "text": "conflict and you try and change the",
    "start": "1582130",
    "end": "1583480"
  },
  {
    "text": "number of it because it's gonna send you",
    "start": "1583480",
    "end": "1585940"
  },
  {
    "text": "an L saying that you have a conflict",
    "start": "1585940",
    "end": "1587320"
  },
  {
    "text": "with the HPA that change the value at",
    "start": "1587320",
    "end": "1589450"
  },
  {
    "text": "this given time so we know exactly what",
    "start": "1589450",
    "end": "1593080"
  },
  {
    "text": "Easter causes of the conflict does that",
    "start": "1593080",
    "end": "1597039"
  },
  {
    "text": "answer your question",
    "start": "1597039",
    "end": "1599429"
  },
  {
    "text": "so we're not keeping track of the entire",
    "start": "1602100",
    "end": "1604629"
  },
  {
    "text": "history for size reason but we keep on",
    "start": "1604629",
    "end": "1609909"
  },
  {
    "text": "the track of the last change made by a",
    "start": "1609909",
    "end": "1612309"
  },
  {
    "text": "specific controller use only for size",
    "start": "1612309",
    "end": "1617409"
  },
  {
    "text": "but it's logic logically the there's",
    "start": "1617409",
    "end": "1620649"
  },
  {
    "text": "this takeover of ownership yeah yeah",
    "start": "1620649",
    "end": "1625019"
  },
  {
    "text": "they will be attached and updated on the",
    "start": "1634380",
    "end": "1637840"
  },
  {
    "text": "scheduler so I think there's an older no",
    "start": "1637840",
    "end": "1640000"
  },
  {
    "text": "that's not maybe at the moment I'm not",
    "start": "1640000",
    "end": "1641410"
  },
  {
    "text": "sure we will attach them thank you very",
    "start": "1641410",
    "end": "1651610"
  },
  {
    "text": "much thank you",
    "start": "1651610",
    "end": "1653970"
  },
  {
    "text": "[Applause]",
    "start": "1653970",
    "end": "1657849"
  }
]