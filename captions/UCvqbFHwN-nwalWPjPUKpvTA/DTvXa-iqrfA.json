[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "everybody having a good day good we're here to talk about some stuff we're not",
    "start": "60",
    "end": "5609"
  },
  {
    "text": "sure what but just some stuff it looks like we got about three minutes first",
    "start": "5609",
    "end": "15299"
  },
  {
    "start": "10000",
    "end": "200000"
  },
  {
    "text": "khoob khun this your first time holy cow",
    "start": "15299",
    "end": "20340"
  },
  {
    "text": "that is awesome over for coop guns 2016",
    "start": "20340",
    "end": "28140"
  },
  {
    "text": "anyway or the 2016 all right you got me who here contributes to kubernetes who",
    "start": "28140",
    "end": "37079"
  },
  {
    "text": "here contributes alright again who here wants to contribute that's better it's a",
    "start": "37079",
    "end": "48329"
  },
  {
    "text": "really neat community to get into and we have a lot of technical debt within the community",
    "start": "48329",
    "end": "53579"
  },
  {
    "text": "so if anybody wants to help out please you can reach out to me or Parris Pittman who heads up the community",
    "start": "53579",
    "end": "59699"
  },
  {
    "text": "organization DOS",
    "start": "59699",
    "end": "66140"
  },
  {
    "text": "see two minutes",
    "start": "66140",
    "end": "72020"
  },
  {
    "text": "what's the over-under if we have too many slides we probably about have about",
    "start": "77240",
    "end": "85229"
  },
  {
    "text": "15 20 slides yeah I know we have 25 minutes to go through be fast make it",
    "start": "85229",
    "end": "92250"
  },
  {
    "text": "interesting",
    "start": "92250",
    "end": "94490"
  },
  {
    "text": "anyways he was big but I didn't notice that big it's huge",
    "start": "111219",
    "end": "117539"
  },
  {
    "text": "we've got free spaces over here if you're looking for seat this is awesome",
    "start": "126860",
    "end": "132080"
  },
  {
    "text": "really full crowd today I guess before",
    "start": "132080",
    "end": "140750"
  },
  {
    "text": "we get going how many folks here use basil already let me ask another great",
    "start": "140750",
    "end": "147620"
  },
  {
    "text": "question who here is actually happy with their build system I am I got a nervous",
    "start": "147620",
    "end": "162800"
  },
  {
    "text": "laugh I got some other evil questions that are coming your way don't worry all right shall we all right let's go",
    "start": "162800",
    "end": "174080"
  },
  {
    "text": "hello Coopertown my name is Greg Donovan from Etsy and this is my name is Chris",
    "start": "174080",
    "end": "179420"
  },
  {
    "text": "love I'm with a company called Lyon cube with Kay and we're gonna be speaking today about streamlining kubernetes",
    "start": "179420",
    "end": "186020"
  },
  {
    "text": "applications see I CD with basil so let",
    "start": "186020",
    "end": "191420"
  },
  {
    "text": "me start by giving a little bit of background about Etsy and our adoption of both basil and kubernetes so what is",
    "start": "191420",
    "end": "201770"
  },
  {
    "start": "200000",
    "end": "220000"
  },
  {
    "text": "Etsy Etsy is the global marketplace for unique and creative goods we're",
    "start": "201770",
    "end": "206900"
  },
  {
    "text": "headquartered in Brooklyn in the US we've been using basil and kubernetes for two years and our entire search",
    "start": "206900",
    "end": "213380"
  },
  {
    "text": "platform is built with basil and deployed to kubernetes specifically gke",
    "start": "213380",
    "end": "220390"
  },
  {
    "start": "220000",
    "end": "247000"
  },
  {
    "text": "so Etsy is a large international and rapidly growing marketplace we have",
    "start": "220600",
    "end": "227150"
  },
  {
    "text": "nearly 40 million buyers and over 2 million sellers around the world we also have offices around the world the",
    "start": "227150",
    "end": "233959"
  },
  {
    "text": "closest one to us today is our engineering office in Dublin and we are constantly trying to improve the product",
    "start": "233959",
    "end": "239690"
  },
  {
    "text": "to keep up with our buyers and sellers needs so that makes development velocity",
    "start": "239690",
    "end": "244730"
  },
  {
    "text": "our number one concern so I work on search at Etsy which is an especially",
    "start": "244730",
    "end": "251090"
  },
  {
    "start": "247000",
    "end": "296000"
  },
  {
    "text": "fun problem as the handcrafted items we sell are each unique and so search",
    "start": "251090",
    "end": "256130"
  },
  {
    "text": "combines large-scale machine learning problems systems challenges real-world impact and",
    "start": "256130",
    "end": "262240"
  },
  {
    "text": "lots of interesting products to think about and with problems of this scale",
    "start": "262240",
    "end": "267870"
  },
  {
    "text": "come the challenges of scale among those are the challenges of scaling out build",
    "start": "267870",
    "end": "273280"
  },
  {
    "text": "test and deployment we have thousands of tests in a large multi-language Monterrey Bois complex stateful",
    "start": "273280",
    "end": "280449"
  },
  {
    "text": "applications to build and deploy and we have dozens of engineers working on our stack who need to rapidly test changes",
    "start": "280449",
    "end": "286509"
  },
  {
    "text": "and validate the correctness and performance of those changes these challenges are what led us to both basil",
    "start": "286509",
    "end": "292570"
  },
  {
    "text": "and kubernetes so Chris is gonna tell you more about basil and why don't we start off with Blaise and I'll take that",
    "start": "292570",
    "end": "298419"
  },
  {
    "start": "296000",
    "end": "352000"
  },
  {
    "text": "clicker from you clicker thank you so why don't we start off talking about a",
    "start": "298419",
    "end": "304120"
  },
  {
    "text": "bit about blaze blaze is actually the predecessor - yeah you know that slide",
    "start": "304120",
    "end": "309330"
  },
  {
    "text": "sorry somebody's somebody's already giving me spunk from the front row so let's talk a",
    "start": "309330",
    "end": "316090"
  },
  {
    "text": "bit about place blaze is actually the predecessor to basil it's an internal tool within Google it had to build it",
    "start": "316090",
    "end": "322630"
  },
  {
    "text": "because of running into slight googly problems basil is now the open-source",
    "start": "322630",
    "end": "329500"
  },
  {
    "text": "version of blaze and they had to they had to make a Google had to make their own build tool because they had because",
    "start": "329500",
    "end": "335349"
  },
  {
    "text": "they had to they have a very large code base they also have a testing or a",
    "start": "335349",
    "end": "342030"
  },
  {
    "text": "standard of testing within Google you have to test your code you have to test",
    "start": "342030",
    "end": "348159"
  },
  {
    "text": "your code a lot and then you have to test somewhere and they have a lot of",
    "start": "348159",
    "end": "354909"
  },
  {
    "start": "352000",
    "end": "418000"
  },
  {
    "text": "code so let's talk Linux kernel pretty",
    "start": "354909",
    "end": "361449"
  },
  {
    "text": "much runs the internet right talking about two hundred thousand lines of code I think we know this project all right",
    "start": "361449",
    "end": "369460"
  },
  {
    "text": "it's the largest actually open source project go project in the world we're talking right about two million lines of",
    "start": "369460",
    "end": "375070"
  },
  {
    "text": "code that are some of its generated talk",
    "start": "375070",
    "end": "380380"
  },
  {
    "text": "about Windows it's 50 million lines of code approximately of course it's closed source and then we have Google yeah I",
    "start": "380380",
    "end": "389979"
  },
  {
    "text": "messed up a scale let me see if I can fix that nope let me see if I can fix that again",
    "start": "389979",
    "end": "395360"
  },
  {
    "text": "yeah just look at that number for a second so every day they have to build",
    "start": "395360",
    "end": "403680"
  },
  {
    "text": "that codebase they build it multiple times a day they have 60 approximately",
    "start": "403680",
    "end": "408930"
  },
  {
    "text": "60,000 changes to their codebase a day these numbers are about four or five years old by the way ever released so we",
    "start": "408930",
    "end": "416310"
  },
  {
    "text": "don't want to talk about what they're at now so when you're talking about code at",
    "start": "416310",
    "end": "421620"
  },
  {
    "text": "this size you're talking about big code when you have a lot of code base in your",
    "start": "421620",
    "end": "427350"
  },
  {
    "text": "mono repo you're talking about huge builds and then we're talking about",
    "start": "427350",
    "end": "432990"
  },
  {
    "text": "let's test it which gets really fun so you might be going right now I do not",
    "start": "432990",
    "end": "440220"
  },
  {
    "start": "436000",
    "end": "493000"
  },
  {
    "text": "have that many lines of code in my organization I understand I don't have a",
    "start": "440220",
    "end": "445530"
  },
  {
    "text": "mono repo I understand Basil's not just",
    "start": "445530",
    "end": "450750"
  },
  {
    "text": "if you're at Google all right let's be clear I don't know anybody else that has that many lines of code",
    "start": "450750",
    "end": "456860"
  },
  {
    "text": "we're so we all use build tools here I took a quick straw man pull of who's",
    "start": "456860",
    "end": "463200"
  },
  {
    "text": "really happy with their build tools and I got chuckles you know and very few",
    "start": "463200",
    "end": "468690"
  },
  {
    "text": "people left lifted their hands who who here can guarantee that they can rebuild a commit that was put in two weeks ago",
    "start": "468690",
    "end": "476180"
  },
  {
    "text": "guarantee yeah I like that who here has",
    "start": "476180",
    "end": "481710"
  },
  {
    "text": "ever had an issue with rolling back where they couldn't build or commit oh",
    "start": "481710",
    "end": "486950"
  },
  {
    "text": "come on be honest be honest it's okay we've all been there so one of the key",
    "start": "486950",
    "end": "496440"
  },
  {
    "start": "493000",
    "end": "536000"
  },
  {
    "text": "things about basil is being deterministic I'm not gonna go into this",
    "start": "496440",
    "end": "501810"
  },
  {
    "text": "big long wonderful you know you know sentence structure about determinism",
    "start": "501810",
    "end": "508320"
  },
  {
    "text": "this is what we all strive for our built an old build can be rebuilt so we've",
    "start": "508320",
    "end": "515099"
  },
  {
    "text": "always had you know we install the new language library on our build box all of",
    "start": "515099",
    "end": "520800"
  },
  {
    "text": "a sudden we try to do an old build and there goes the build baby basel",
    "start": "520800",
    "end": "527699"
  },
  {
    "text": "strives if you using in the manner it's set up to basel strives to have",
    "start": "527699",
    "end": "533369"
  },
  {
    "text": "reproduce ibill and builds have to be hermetic so what",
    "start": "533369",
    "end": "541079"
  },
  {
    "start": "536000",
    "end": "560000"
  },
  {
    "text": "that means is that we've got system libraries on our bill box we've got a jdk in our bill box we've got python on",
    "start": "541079",
    "end": "547889"
  },
  {
    "text": "our bill box we have Ruby on our bill box your bill should not be using those",
    "start": "547889",
    "end": "553529"
  },
  {
    "text": "tools your bill should be completely encapsulated in its own little bottle it should be hermetic so let's talk about",
    "start": "553529",
    "end": "562709"
  },
  {
    "start": "560000",
    "end": "586000"
  },
  {
    "text": "some future functionality as well try testing don't repeat yourself you tested",
    "start": "562709",
    "end": "568350"
  },
  {
    "text": "it and you didn't change that code why are you testing it again with the most",
    "start": "568350",
    "end": "574829"
  },
  {
    "text": "modern unit testing tools you have to run the entire test suite again even if",
    "start": "574829",
    "end": "582420"
  },
  {
    "text": "you didn't change any code around the around it parallelism we're talking at",
    "start": "582420",
    "end": "590339"
  },
  {
    "start": "586000",
    "end": "625000"
  },
  {
    "text": "times about a lot of code we're talking about wanting to be able to deploy three hundred three thousand times a day in",
    "start": "590339",
    "end": "596429"
  },
  {
    "text": "order to do that we have to do a lot of builds in order to do a lot of builds the builds have to be fast with",
    "start": "596429",
    "end": "602309"
  },
  {
    "text": "parallelism and with also with pooling and caching you're able to get the type",
    "start": "602309",
    "end": "607470"
  },
  {
    "text": "of performance you're looking for as well as as a developer who likes waiting for their builds to be done yeah nobody",
    "start": "607470",
    "end": "615720"
  },
  {
    "text": "all right developers often go play foosball go get",
    "start": "615720",
    "end": "620879"
  },
  {
    "text": "a cup of coffee when they start their builds in the morning as well as those",
    "start": "620879",
    "end": "627480"
  },
  {
    "start": "625000",
    "end": "659000"
  },
  {
    "text": "mentioning remote builds this is a fairly new feature within basil and there's some tooling coming out around",
    "start": "627480",
    "end": "633660"
  },
  {
    "text": "it it allows you to have a pool of workers in the cloud locally if you",
    "start": "633660",
    "end": "639269"
  },
  {
    "text": "maintain it and with RBE which is a Google cloud product you're able to plug right into basil and fire up a worker",
    "start": "639269",
    "end": "646470"
  },
  {
    "text": "pool and you're able to not only have the horsepower of your build machine but you're able to have a dynamic cache as",
    "start": "646470",
    "end": "653639"
  },
  {
    "text": "well as dynamic horsepower behind your build from that process languages who has",
    "start": "653639",
    "end": "663360"
  },
  {
    "start": "659000",
    "end": "684000"
  },
  {
    "text": "multiple languages that we built within their repository Wow so polyglot is here to stay",
    "start": "663360",
    "end": "670620"
  },
  {
    "text": "this is a short list of the languages that it supports so and it's fairly it's",
    "start": "670620",
    "end": "678360"
  },
  {
    "text": "it's built and it's modular so that we can implement more language support easily so let's just get a quick",
    "start": "678360",
    "end": "688050"
  },
  {
    "text": "background of what basil is so within there you've got a workspace file you open up a basil project you had a",
    "start": "688050",
    "end": "693930"
  },
  {
    "text": "workspace file and you have a workspace it's basically the root component of your directory structure within the",
    "start": "693930",
    "end": "699420"
  },
  {
    "text": "workspace file you're able to define lots of different things typically you",
    "start": "699420",
    "end": "704790"
  },
  {
    "start": "703000",
    "end": "729000"
  },
  {
    "text": "have workspace rules you'll notice that we have we're pulling in a dependency",
    "start": "704790",
    "end": "710010"
  },
  {
    "text": "we're naming our project there so we're pulling in go you'll notice that we're also pulling in the SHA so not only are",
    "start": "710010",
    "end": "717300"
  },
  {
    "text": "we downloading that from github or your location of choice we are checking that",
    "start": "717300",
    "end": "724290"
  },
  {
    "text": "it's actually the download that you should be getting kind of important also",
    "start": "724290",
    "end": "731940"
  },
  {
    "start": "729000",
    "end": "857000"
  },
  {
    "text": "Bill files so most directories within a basil project have a build file which is named",
    "start": "731940",
    "end": "738030"
  },
  {
    "text": "Bill dot basil or bill depending on which day it is you'll notice within here we're we're pulling in we're",
    "start": "738030",
    "end": "744540"
  },
  {
    "text": "loading components that are actually starl art components pulling in what's called a cave okay it's object we'll",
    "start": "744540",
    "end": "751320"
  },
  {
    "text": "talk about more later on how kubernetes interacts with basil we're able to alias those objects so if you notice we pull",
    "start": "751320",
    "end": "758250"
  },
  {
    "text": "it in it's called objects basil now we're gonna call that Kade's objects then we define some stuff one of the",
    "start": "758250",
    "end": "763830"
  },
  {
    "text": "interesting things about basil is the path notation you'll have to get used to so you're looking at a line this is",
    "start": "763830",
    "end": "770400"
  },
  {
    "text": "actual there it says forward slash forward slash jeaious clients forward slash source blah blah blah so what it",
    "start": "770400",
    "end": "776940"
  },
  {
    "text": "is is a file structure ford slash means the directory for slash forward slash is your base directory or workspace",
    "start": "776940",
    "end": "783030"
  },
  {
    "text": "directory then going down from there we've got a J's client folder we've got a source folder we've got us",
    "start": "783030",
    "end": "789370"
  },
  {
    "text": "and then we've got actually a file or a definition an alias that's your TS config dot JSON file all",
    "start": "789370",
    "end": "796390"
  },
  {
    "text": "right now Greg I'm gonna hand it off to",
    "start": "796390",
    "end": "802180"
  },
  {
    "text": "Greg here he can talk a little bit about how Etsy uses kubernetes and docker with",
    "start": "802180",
    "end": "810070"
  },
  {
    "text": "basil so let's see as I mentioned we",
    "start": "810070",
    "end": "815260"
  },
  {
    "text": "deployed all of our search services to gke using rules docker and rule scuba nannies that Chris was describing and we",
    "start": "815260",
    "end": "823270"
  },
  {
    "text": "spent a lot of time investing in this stack to try to make it as fast and as powerful as we can and the stack offers",
    "start": "823270",
    "end": "830140"
  },
  {
    "text": "fast reproducible builds especially for container layers and programmatic control over the generated llamó",
    "start": "830140",
    "end": "836670"
  },
  {
    "text": "for each different environment and this approach really shines with a multi application mono repo when you change",
    "start": "836670",
    "end": "843700"
  },
  {
    "text": "shared libraries deb files tooling etc base images you need to know which components need to be redeployed and",
    "start": "843700",
    "end": "850120"
  },
  {
    "text": "which don't so in a simple application you might be able to keep this all in your head but at scale you need automation so I'm",
    "start": "850120",
    "end": "859870"
  },
  {
    "text": "going to talk about why we use basil rules kubernetes and rules docker and how it gives us fast correct deploys I'm",
    "start": "859870",
    "end": "866050"
  },
  {
    "text": "also gonna offer some general kubernetes and basil tips based on our two years of working with basil and two years of",
    "start": "866050",
    "end": "872020"
  },
  {
    "text": "working with kubernetes and doing a big migration to gke so when we started",
    "start": "872020",
    "end": "877600"
  },
  {
    "text": "using basil one of the best features we noticed is that Basil's reproducibility and caching change our entire local",
    "start": "877600",
    "end": "882940"
  },
  {
    "text": "development flow instead of working on your code and then re running the specific tests or tests that you think",
    "start": "882940",
    "end": "889450"
  },
  {
    "text": "is affected by your changes basil enables you to run all the tests all the time and that big basil figure out what",
    "start": "889450",
    "end": "895780"
  },
  {
    "text": "needs to be rerun this totally changes how you work every day and since basil",
    "start": "895780",
    "end": "901330"
  },
  {
    "text": "has a full directed acyclic graph of your code it can figure this out for you",
    "start": "901330",
    "end": "906810"
  },
  {
    "text": "so when we saw this we wondered if we'd be possible to bring similar benefits to deployment can we make make code changes",
    "start": "906810",
    "end": "915010"
  },
  {
    "text": "deploy everything and then let basil and kubernetes figure out what actually needs to be redeployed so this is sort",
    "start": "915010",
    "end": "921640"
  },
  {
    "text": "of our ideal deployment work flow we have you know dozens of deployments hundreds of kubernetes",
    "start": "921640",
    "end": "927279"
  },
  {
    "text": "objects we don't to have keep in our heads which one of them has actually been affected by a given commit after",
    "start": "927279",
    "end": "934540"
  },
  {
    "text": "all there are edge cases you might have a shell script that it's depended on by multiple app containers but transitively",
    "start": "934540",
    "end": "941259"
  },
  {
    "text": "by a sidecar container it's very difficult to reason about this stuff so",
    "start": "941259",
    "end": "947679"
  },
  {
    "start": "946000",
    "end": "1044000"
  },
  {
    "text": "achieving this idealized workflow is quite challenging now unless we have a reproducible build every time you do a",
    "start": "947679",
    "end": "952689"
  },
  {
    "text": "new build it will appear as if there are new artifacts to deploy if our build artifacts have changed by a single bit",
    "start": "952689",
    "end": "958359"
  },
  {
    "text": "it will appear as they are new and they'll be need to be rolled out so and these are just some of the challenges to",
    "start": "958359",
    "end": "963699"
  },
  {
    "text": "reproducibility for example most file systems do not guarantee that listing files in a directory will always result",
    "start": "963699",
    "end": "970329"
  },
  {
    "text": "in the same order thar and jar file archives will by default include creation timestamps all of these break",
    "start": "970329",
    "end": "976779"
  },
  {
    "text": "reproducibility but basil is designed to handle these challenges so Basil's rules",
    "start": "976779",
    "end": "982629"
  },
  {
    "text": "docker is a set of basil rules for pulling down base images augmenting them with build artifacts and assets and",
    "start": "982629",
    "end": "988389"
  },
  {
    "text": "building container layers it also offers language specific rules that make it easy to go from a binary",
    "start": "988389",
    "end": "993970"
  },
  {
    "text": "say Java or go main into a container image the interesting thing is that you",
    "start": "993970",
    "end": "999339"
  },
  {
    "text": "do not need docker to run the docker rules so if you've run into issues with docker and your CI RCD environments or",
    "start": "999339",
    "end": "1006600"
  },
  {
    "text": "running docker within a docker container to build images this removes that problem from the equation in Basil's",
    "start": "1006600",
    "end": "1013169"
  },
  {
    "text": "rules kubernetes is a set of basil rules that enable deploying templated llamó and container images to do kubernetes it",
    "start": "1013169",
    "end": "1021660"
  },
  {
    "text": "allows you to do authentication publish containers publish your container",
    "start": "1021660",
    "end": "1028470"
  },
  {
    "text": "digests container gamal do full basically full application lifecycle and",
    "start": "1028470",
    "end": "1033558"
  },
  {
    "text": "choose your own templating technology Etsy we use custom Python code but we",
    "start": "1033559",
    "end": "1039899"
  },
  {
    "text": "also use JSON net for other applications and you could use Helen if you like and",
    "start": "1039899",
    "end": "1045720"
  },
  {
    "start": "1044000",
    "end": "1075000"
  },
  {
    "text": "with this approach we avoid two problems you know under deploying not to point components that have changed leaving",
    "start": "1045720",
    "end": "1051510"
  },
  {
    "text": "them unvalidated on master and over deploy waiting for a potentially",
    "start": "1051510",
    "end": "1056789"
  },
  {
    "text": "expensive rollout despite having not made changes so we can radically",
    "start": "1056789",
    "end": "1062549"
  },
  {
    "text": "simplify our CI HCD flow we can have a single pipeline for building testing and redeploying all of our applications",
    "start": "1062549",
    "end": "1068250"
  },
  {
    "text": "relying on basil to negotiate what actually needs to be deployed with the container registry in kubernetes so how",
    "start": "1068250",
    "end": "1076320"
  },
  {
    "start": "1075000",
    "end": "1086000"
  },
  {
    "text": "does this actually work so let's dive into some of the details how does this negotiation between your build and the",
    "start": "1076320",
    "end": "1082950"
  },
  {
    "text": "container registry and kubernetes actually work in practice so fortunately kubernetes is smart enough to only",
    "start": "1082950",
    "end": "1089519"
  },
  {
    "start": "1086000",
    "end": "1196000"
  },
  {
    "text": "deploy what you change and it does this by hashing its inputs much like basil so these hashes include both the llamo and",
    "start": "1089519",
    "end": "1096000"
  },
  {
    "text": "the exact versions of the containers that you're deploying so in this case you'd see spec template",
    "start": "1096000",
    "end": "1101460"
  },
  {
    "text": "is hashed in the shot 256 they stored along with your deployment so kubernetes knows if it sees that same shot 256 of",
    "start": "1101460",
    "end": "1108450"
  },
  {
    "text": "spec template it doesn't need to to do a rollout of your deployment and taking",
    "start": "1108450",
    "end": "1114389"
  },
  {
    "text": "advantage of incremental deployment in kubernetes requires that you can deterministically generate all of your inputs including your containers",
    "start": "1114389",
    "end": "1120860"
  },
  {
    "text": "otherwise every time you do a build you'll generate a new container version even if it hasn't changed in a",
    "start": "1120860",
    "end": "1126120"
  },
  {
    "text": "meaningful way rules docker provides rules for generating container images deterministically allows you to build a",
    "start": "1126120",
    "end": "1132899"
  },
  {
    "text": "single repeatable package from base container to your own application code in the example above you can see that",
    "start": "1132899",
    "end": "1140039"
  },
  {
    "text": "basil has helpfully stripped out dates from our containers and it seems a bit odd that code you wrote today appears to",
    "start": "1140039",
    "end": "1146309"
  },
  {
    "text": "be from 1970 but it is very helpful to get repeatable images otherwise just the",
    "start": "1146309",
    "end": "1152580"
  },
  {
    "text": "simple change of dates will cause kubernetes to redeploy them and then",
    "start": "1152580",
    "end": "1158039"
  },
  {
    "text": "rules kubernetes builds on top of this it takes as a set as input a set of docker images that you want to build and",
    "start": "1158039",
    "end": "1163620"
  },
  {
    "text": "what are their there basil build targets for generating them and it takes an input kubernetes llamó",
    "start": "1163620",
    "end": "1169080"
  },
  {
    "text": "we have placeholders for the images so unresolved it builds your containers pushes them to",
    "start": "1169080",
    "end": "1175769"
  },
  {
    "text": "the container registry gets the shot 256 of each container and then it substitutes those shot 256 is",
    "start": "1175769",
    "end": "1182639"
  },
  {
    "text": "for the placeholders you had for your images and so the the final thing that gets sent to Coop's ETL ply his your your generated",
    "start": "1182639",
    "end": "1190500"
  },
  {
    "text": "gamal with those sha-256 s appended to each of your container images so digging",
    "start": "1190500",
    "end": "1198630"
  },
  {
    "text": "even deeper just what is a container so container is an ordered list of tar balls representing filesystem layers",
    "start": "1198630",
    "end": "1204419"
  },
  {
    "text": "each layer itself is represented as a shot 256 of the uncompressed contents",
    "start": "1204419",
    "end": "1209669"
  },
  {
    "text": "the overall image is a shot 256 of the layers and the metadata so rules docker",
    "start": "1209669",
    "end": "1217440"
  },
  {
    "text": "builds these layers with custom tool chains written in Python and star LARC a Python dialect used by custom basal code",
    "start": "1217440",
    "end": "1224700"
  },
  {
    "text": "and Basil's rules docker removes the complexity of actually running docker in",
    "start": "1224700",
    "end": "1230580"
  },
  {
    "text": "CI CD and allows Basil's parallelism and caching to speed container layer",
    "start": "1230580",
    "end": "1236070"
  },
  {
    "text": "building and it built on the standard container registry v2 API which provides",
    "start": "1236070",
    "end": "1243840"
  },
  {
    "text": "caching from local build to the remote container registry and rules docker uses",
    "start": "1243840",
    "end": "1249029"
  },
  {
    "text": "its HTTP head request support to check for an existing sha-256 of an early",
    "start": "1249029",
    "end": "1254940"
  },
  {
    "text": "cached container image or the shot 256 of a container layer this removes the",
    "start": "1254940",
    "end": "1260640"
  },
  {
    "text": "need to re-upload container images and layers that are already present in the remote registry so if you do build and",
    "start": "1260640",
    "end": "1267870"
  },
  {
    "text": "nothing has changed all of these head requests are going to see an existing",
    "start": "1267870",
    "end": "1273299"
  },
  {
    "text": "cache layer the existing cached image and it'll be basically no op between your local build and the registry so",
    "start": "1273299",
    "end": "1279510"
  },
  {
    "text": "very fast finally kubernetes deployment hashes the pod template to determine if your",
    "start": "1279510",
    "end": "1285840"
  },
  {
    "start": "1282000",
    "end": "1302000"
  },
  {
    "text": "application needs to be redeployed and if the pod template hash is unchanged there's no need for a rollout and so",
    "start": "1285840",
    "end": "1291600"
  },
  {
    "text": "with this you have the benefit of basil's reproducibility from your source at the bottom to your kubernetes",
    "start": "1291600",
    "end": "1298320"
  },
  {
    "text": "deployment sort at the finish line and rule script Davies offers a number of",
    "start": "1298320",
    "end": "1304860"
  },
  {
    "start": "1302000",
    "end": "1335000"
  },
  {
    "text": "other features and interesting one that we've really taken advantage of is the ability to provide your own coop CTL",
    "start": "1304860",
    "end": "1310529"
  },
  {
    "text": "version there's some weird edge cases here and there if the coop CTL version you're using differs from the server's version and",
    "start": "1310529",
    "end": "1317340"
  },
  {
    "text": "it's nice to not have to deal with them and debug them because they can very tricky so you can specify the coop",
    "start": "1317340",
    "end": "1322460"
  },
  {
    "text": "CTL version right in Rouge goober kubernetes it will make sure it builds us from source so you could actually",
    "start": "1322460",
    "end": "1328190"
  },
  {
    "text": "potentially provide a coop CTL patch of yours and build from your branches shop just which is pretty nice rule stalker",
    "start": "1328190",
    "end": "1336980"
  },
  {
    "start": "1335000",
    "end": "1371000"
  },
  {
    "text": "has some really nice other features and the one we've gotten the most mileage out of that you don't see with a docker",
    "start": "1336980",
    "end": "1342170"
  },
  {
    "text": "file of docker file sort of serial from top to bottom whereas rule stocker you can think of your container layers as these Lego",
    "start": "1342170",
    "end": "1349220"
  },
  {
    "text": "bricks that you can use to assemble your application containers so we have reusable layers for things like",
    "start": "1349220",
    "end": "1355120"
  },
  {
    "text": "instrumentation libraries g-cloud GS util other reusable things we might want",
    "start": "1355120",
    "end": "1360470"
  },
  {
    "text": "to add to application containers but not have to layer them in and so rather than",
    "start": "1360470",
    "end": "1365870"
  },
  {
    "text": "stuffing everything into a single bloated base layer we can we can assemble these Lego bricks and so a few",
    "start": "1365870",
    "end": "1372350"
  },
  {
    "start": "1371000",
    "end": "1412000"
  },
  {
    "text": "tips from our sort to year migration from on-premise infrastructure so we we previously ran our own data centers and",
    "start": "1372350",
    "end": "1378560"
  },
  {
    "text": "ran kubernetes on Prem before moving things to gke and so one one thing we",
    "start": "1378560",
    "end": "1384800"
  },
  {
    "text": "recommend is the district's container so a lot of a lot of your application containers you deployed kubernetes they",
    "start": "1384800",
    "end": "1390950"
  },
  {
    "text": "don't need the full operating system so Google as this disrelish project that provides just the bare minimum you need",
    "start": "1390950",
    "end": "1396770"
  },
  {
    "text": "to deploy an application so given your your main method so for Java that's G",
    "start": "1396770",
    "end": "1402770"
  },
  {
    "text": "Lib C SSL the JVM it's very minimal so you get these nice small nice small",
    "start": "1402770",
    "end": "1408950"
  },
  {
    "text": "docker images with a very limited attack surface and as I mentioned sha-256 is or",
    "start": "1408950",
    "end": "1415160"
  },
  {
    "start": "1412000",
    "end": "1436000"
  },
  {
    "text": "I think a best practice so even if you're not using rules kubernetes or rules docker helm supports these",
    "start": "1415160",
    "end": "1421490"
  },
  {
    "text": "scaffold supports these a lot of the different communities workflow tools support them it avoids the the violation",
    "start": "1421490",
    "end": "1429620"
  },
  {
    "text": "of immutability you get if you use a tag so a tag represents a potentially moving target and many companies usually will",
    "start": "1429620",
    "end": "1438290"
  },
  {
    "text": "eventually have this giant wall of Yama so for the complex Yama building use cases we have at Etsy we use put custom",
    "start": "1438290",
    "end": "1444620"
  },
  {
    "text": "Python code and the client API is very nice for this if you're if you're use",
    "start": "1444620",
    "end": "1450290"
  },
  {
    "text": "cases are simpler you know customize is great there was a good tools but don't hesitate to use the",
    "start": "1450290",
    "end": "1455340"
  },
  {
    "text": "kubernetes client API is if you're the complexity of your yanil generation is is really overwhelming and sort of",
    "start": "1455340",
    "end": "1462270"
  },
  {
    "text": "pushing past the limits that these templating tools are designed to deal with and tilt tilt is a great tool that",
    "start": "1462270",
    "end": "1471390"
  },
  {
    "start": "1467000",
    "end": "1492000"
  },
  {
    "text": "we've been using to try to understand what's happening with kubernetes deployments if there's a lot of playing",
    "start": "1471390",
    "end": "1477240"
  },
  {
    "text": "20 questions with coop CTL if your applications not working and tilt is a great tool that we've really liked for",
    "start": "1477240",
    "end": "1482580"
  },
  {
    "text": "diagnosing what's happening pulling all the logs together seeing what's wrong with the deployment and now the tilt",
    "start": "1482580",
    "end": "1488280"
  },
  {
    "text": "folks are here at the conference they're very nice I recommend you go talk to them and using crts for cloud resources",
    "start": "1488280",
    "end": "1495530"
  },
  {
    "start": "1492000",
    "end": "1522000"
  },
  {
    "text": "so kubernetes custom resource definitions are very powerful to share a lot of different talks about these but",
    "start": "1495530",
    "end": "1502190"
  },
  {
    "text": "the different cloud operators are adding C RDS for their cloud resources that",
    "start": "1502190",
    "end": "1507840"
  },
  {
    "text": "will allow you to use this your same cube CTL apply for things like GCS buckets or s3 buckets and you know we",
    "start": "1507840",
    "end": "1516240"
  },
  {
    "text": "invest a lot of time in these kubernetes CI CD pipelines if you if you use these CR DS you get to take advantage of that",
    "start": "1516240",
    "end": "1522050"
  },
  {
    "text": "and now chris is going to show a demo of bull kubernetes rules docker and basil",
    "start": "1522050",
    "end": "1527850"
  },
  {
    "text": "in action thanks Freddy and I want to I want to talk about one thing that Etsy does that's really powerful you know that one of the main complexities that",
    "start": "1527850",
    "end": "1535110"
  },
  {
    "text": "were running into his developers and his operators of kubernetes is ya know it's it can get just to be a mess you know",
    "start": "1535110",
    "end": "1541650"
  },
  {
    "text": "400 yamo files all over the place if you take it you put it into code you're not only able to get rid of some of that",
    "start": "1541650",
    "end": "1547770"
  },
  {
    "text": "complexity but you're also able to test it which is huge all right so the the",
    "start": "1547770",
    "end": "1555240"
  },
  {
    "text": "demo is available open source I've got the shortened link there if you want to take a picture of that it's a small web",
    "start": "1555240",
    "end": "1562380"
  },
  {
    "text": "application that has two different components in it first is angular a web front-end and then you've got a Java",
    "start": "1562380",
    "end": "1568620"
  },
  {
    "text": "rest service for one of the angular pages or tabs or whatever you call it in angular we've got multiple languages so we've",
    "start": "1568620",
    "end": "1575280"
  },
  {
    "text": "got Java we've got typescript we've got JavaScript and if we call HTML",
    "start": "1575280",
    "end": "1581040"
  },
  {
    "text": "and CSS languages we got those too we're doing unit testing so we're running j",
    "start": "1581040",
    "end": "1586260"
  },
  {
    "text": "unit we're also using protractor and Jazmyn so we're actually splitting up chromium",
    "start": "1586260",
    "end": "1591900"
  },
  {
    "text": "in headless mode and running checks against the webpage dynamically during",
    "start": "1591900",
    "end": "1597510"
  },
  {
    "text": "our Basel built all right let's go on",
    "start": "1597510",
    "end": "1603420"
  },
  {
    "start": "1602000",
    "end": "1685000"
  },
  {
    "text": "the demo let me see if I can switch this around successfully and of course I",
    "start": "1603420",
    "end": "1614640"
  },
  {
    "text": "cannot see that screen but that's not right you know do is set to mirroring so",
    "start": "1614640",
    "end": "1627360"
  },
  {
    "text": "I can see the actual screen here there we go displays your displays yay",
    "start": "1627360",
    "end": "1640440"
  },
  {
    "text": "alright now let's make that a little bit",
    "start": "1640440",
    "end": "1645510"
  },
  {
    "text": "bigger for the folks in the back row and folks like me that are a little so I've",
    "start": "1645510",
    "end": "1657780"
  },
  {
    "text": "got a build box up in the cloud right now that I'm going to use specifically because I'm using RBE and it's really",
    "start": "1657780",
    "end": "1663480"
  },
  {
    "text": "fast so we've got a project here and",
    "start": "1663480",
    "end": "1674750"
  },
  {
    "text": "there's a clean command if I can run it correctly seven five there we go so",
    "start": "1674750",
    "end": "1686220"
  },
  {
    "start": "1685000",
    "end": "2132000"
  },
  {
    "text": "clean command basically cleans out the cache local cache that is so we now have as soon as it's done here we have we're",
    "start": "1686220",
    "end": "1693660"
  },
  {
    "text": "gonna have nothing on disk that's specific to our build we will have some dependencies on disk now we are using",
    "start": "1693660",
    "end": "1701070"
  },
  {
    "text": "RBE with this build so we've got a pool of workers sitting around that have already got the components cached",
    "start": "1701070",
    "end": "1708980"
  },
  {
    "text": "so I'm gonna run this command right here",
    "start": "1715120",
    "end": "1721149"
  },
  {
    "text": "so we're looking at targets here's the big number and it keeps going up and we",
    "start": "1723640",
    "end": "1729409"
  },
  {
    "text": "also notice that we have a bunch of stuff happening locally in remote we've got tars being built we've got",
    "start": "1729409",
    "end": "1734870"
  },
  {
    "text": "JavaScript being compiled we've got tests being run we've got all kinds of stuff happening and you'll",
    "start": "1734870",
    "end": "1741980"
  },
  {
    "text": "notice there's forty three thousand five hundred and thirty three targets in this build this is a small application has no",
    "start": "1741980",
    "end": "1751970"
  },
  {
    "text": "js' so that that really helps us we're compiling Cooper Nate or coop control so that really helps us as well get us a",
    "start": "1751970",
    "end": "1757580"
  },
  {
    "text": "couple more targets going on but you'll notice that yes the JavaScript roll up",
    "start": "1757580",
    "end": "1763340"
  },
  {
    "text": "does take a while but nothing was cached locally on this machine and you're",
    "start": "1763340",
    "end": "1771409"
  },
  {
    "text": "noticing that we're even pulling in remote tarball layers as greg was describing earlier eh eh containers",
    "start": "1771409",
    "end": "1779000"
  },
  {
    "text": "broken up into very stars so we're able to package each one individually so he",
    "start": "1779000",
    "end": "1784070"
  },
  {
    "text": "ran four of our unit tests which hey they all passed and we looked at about",
    "start": "1784070",
    "end": "1789190"
  },
  {
    "text": "43 seconds of compile time and 51 51 seconds of compile time with",
    "start": "1789190",
    "end": "1795250"
  },
  {
    "text": "approximately 43,000 is that right number yeah forty-three thousand",
    "start": "1795250",
    "end": "1800600"
  },
  {
    "text": "different objects that basil touched looked up you know compared the hashes make sure that nothing has changed all",
    "start": "1800600",
    "end": "1809120"
  },
  {
    "text": "right let's make a test and break stuff so as I mentioned we have a spring boot",
    "start": "1809120",
    "end": "1815360"
  },
  {
    "text": "application actually we've got a",
    "start": "1815360",
    "end": "1821539"
  },
  {
    "text": "controller and instead of saying here",
    "start": "1821539",
    "end": "1828260"
  },
  {
    "text": "I'm gonna say haiku con all right this is just a Java controller with spring",
    "start": "1828260",
    "end": "1833720"
  },
  {
    "text": "boot all right let's run that test again",
    "start": "1833720",
    "end": "1839470"
  },
  {
    "text": "now this time it's gonna run a bunch faster because we've already got stuff cached locally",
    "start": "1839470",
    "end": "1844580"
  },
  {
    "text": "and I wrote a test for that controller and unfortunately I forgot to update my",
    "start": "1844580",
    "end": "1850910"
  },
  {
    "text": "test all right so let's go in see if I",
    "start": "1850910",
    "end": "1860240"
  },
  {
    "text": "can actually remember my paths or test",
    "start": "1860240",
    "end": "1866500"
  },
  {
    "text": "oh there it is so it says here and I should say hi cube Khan all right let's",
    "start": "1871030",
    "end": "1882280"
  },
  {
    "text": "run the test again make sure I didn't touch anything else you notice that I've got a bunch of",
    "start": "1882280",
    "end": "1888880"
  },
  {
    "text": "different command-line arguments on here I've got what's called a basel RC file really important it's about three",
    "start": "1888880",
    "end": "1894610"
  },
  {
    "text": "hundred lines of different configurations especially with RB e comes a little bit complex but fortunately we've got the RB folks give",
    "start": "1894610",
    "end": "1902350"
  },
  {
    "text": "us the full belt you know 90% of the build file and you'll also notice that",
    "start": "1902350",
    "end": "1907870"
  },
  {
    "text": "I'm defining a couple of things if you look at I'm defining a cluster so that's actually my context in coop control and",
    "start": "1907870",
    "end": "1913840"
  },
  {
    "text": "I'm also defining the container registry that I'm using and those definitions are dynamic at built so say we have dev we",
    "start": "1913840",
    "end": "1920950"
  },
  {
    "text": "have tests we have different container registries that we're using we can define those at the time of the build so",
    "start": "1920950",
    "end": "1926980"
  },
  {
    "text": "that we have containers over here we have clusters over there and we made everything together so tests",
    "start": "1926980",
    "end": "1933880"
  },
  {
    "text": "passed great so there's some irony here Basil's replacement for make and I'm",
    "start": "1933880",
    "end": "1940300"
  },
  {
    "text": "running a make command to install my",
    "start": "1940300",
    "end": "1945520"
  },
  {
    "text": "containers it it shells out and runs some shell scripts and stuff like that",
    "start": "1945520",
    "end": "1952020"
  },
  {
    "text": "alright everybody notices the coop control apply commands but what you'll",
    "start": "1952020",
    "end": "1957070"
  },
  {
    "text": "notice is that you can see the path that cout control is actually running we've",
    "start": "1957070",
    "end": "1962680"
  },
  {
    "text": "compiled cout control from kubernetes source so we're guaranteed that I have kuben",
    "start": "1962680",
    "end": "1968950"
  },
  {
    "text": "control thirteen five or whatever version I specified in my workspace file I have run into so many challenges with",
    "start": "1968950",
    "end": "1975340"
  },
  {
    "text": "the API when we get a couple versions out and outside the standard of the API server do yourself a favor even if you're not",
    "start": "1975340",
    "end": "1980650"
  },
  {
    "text": "using basics basil maintain the version of coop control very very strongly in",
    "start": "1980650",
    "end": "1985810"
  },
  {
    "text": "your organization so you'll notice a couple things here you'll notice that the service that we applied so our",
    "start": "1985810",
    "end": "1993100"
  },
  {
    "text": "manifests have a service in them that's unchanged will notice that though that the spring boot server our spring boot",
    "start": "1993100",
    "end": "1999670"
  },
  {
    "text": "containers changed so we modified that deployment and then what great also talked about is you know it's it's",
    "start": "1999670",
    "end": "2006600"
  },
  {
    "text": "really getting powerful when you don't have to redeploy angular so we up we updated our micro service we changed one",
    "start": "2006600",
    "end": "2013980"
  },
  {
    "text": "of the servlet components and while all we do redeployed is a single deployment think about it a scale when you're doing",
    "start": "2013980",
    "end": "2020400"
  },
  {
    "text": "300 400 deployments 3,000 deployments a day just a network traffic alone",
    "start": "2020400",
    "end": "2025800"
  },
  {
    "text": "if you redeploy everything alright let's",
    "start": "2025800",
    "end": "2031380"
  },
  {
    "text": "take a look at the application real quick just make that a bit bigger as",
    "start": "2031380",
    "end": "2038070"
  },
  {
    "text": "well so see if the refresh the page",
    "start": "2038070",
    "end": "2045720"
  },
  {
    "text": "works right alright so we have a very simple application as I mentioned we",
    "start": "2045720",
    "end": "2052770"
  },
  {
    "text": "have the rest controller that goes on the to-do page so we can add a two here say hi everyone say hi to everyone had",
    "start": "2052770",
    "end": "2064350"
  },
  {
    "text": "the to do very simple controller no database back-end it's an ArrayList",
    "start": "2064350",
    "end": "2069450"
  },
  {
    "text": "that's in memory so when you redeploy your deployment there goes our to dues but so we've gone from we go back to",
    "start": "2069450",
    "end": "2078300"
  },
  {
    "text": "this we've gone from source code we define our source code we define our",
    "start": "2078300",
    "end": "2083669"
  },
  {
    "text": "dependencies in basil we define our tests we then test we have the test run",
    "start": "2083669",
    "end": "2090240"
  },
  {
    "text": "then we apply the manifests and in between all of that the source code is",
    "start": "2090240",
    "end": "2095460"
  },
  {
    "text": "built the binaries are built we got multiple languages possibly cross builds happening we then have containers and",
    "start": "2095460",
    "end": "2100800"
  },
  {
    "text": "everything built we have manifests that are being modified generated and then it's deployed to kubernetes and I did it",
    "start": "2100800",
    "end": "2107880"
  },
  {
    "text": "by doing this so that's what gets me excited is when I can automate and actually make DevOps a reality so that's",
    "start": "2107880",
    "end": "2117030"
  },
  {
    "text": "my demo we've got all of two minutes and 36 seconds left Greg any closing thoughts or actually",
    "start": "2117030",
    "end": "2126660"
  },
  {
    "text": "let's switch about I'll switch back to page you you do closing thoughts let's",
    "start": "2126660",
    "end": "2131820"
  },
  {
    "text": "see my closing thoughts but we will leave a few minutes for questions",
    "start": "2131820",
    "end": "2137250"
  },
  {
    "start": "2132000",
    "end": "2402000"
  },
  {
    "text": "so thank you everybody for coming and if you have questions other ask now or",
    "start": "2137250",
    "end": "2142670"
  },
  {
    "text": "these are our this is our various contact information question over there yeah as well as well we're getting the",
    "start": "2142670",
    "end": "2150810"
  },
  {
    "text": "mic out to the person that's running questions I have the only Greg's gonna do that but I've got somebody else is",
    "start": "2150810",
    "end": "2157260"
  },
  {
    "text": "standing up here to do it talk a bit about where that demo is coming from it's actually part of a Google project that we work with it's",
    "start": "2157260",
    "end": "2163619"
  },
  {
    "text": "called Project helmsman there's about 23 open source projects talking about different standards with gke basil's one",
    "start": "2163619",
    "end": "2169500"
  },
  {
    "text": "of them the other question yeah and so you were saying that you were building coop CTO driven as part of your bills to",
    "start": "2169500",
    "end": "2176670"
  },
  {
    "text": "ensure your of the same fashion do you also compile your own compiler to",
    "start": "2176670",
    "end": "2182190"
  },
  {
    "text": "ensure that you're running is the correct version of your compiler and so on that's a that's a very good question",
    "start": "2182190",
    "end": "2190200"
  },
  {
    "text": "so the question is so we're building our own coop CTL from source do we also then",
    "start": "2190200",
    "end": "2196920"
  },
  {
    "text": "compile the compiler from source and the compilers toolchain from source etc etc so within Google I think the answer is",
    "start": "2196920",
    "end": "2203730"
  },
  {
    "text": "yes everything gets compiled from source at Etsy we cut it off at the dependency",
    "start": "2203730",
    "end": "2211260"
  },
  {
    "text": "at coop CTL and then I think we used up the binary of the the go compiler but",
    "start": "2211260",
    "end": "2217740"
  },
  {
    "text": "it's a it's it's very interesting that you have the ability to keep pushing the source dependencies as far as you want",
    "start": "2217740",
    "end": "2223920"
  },
  {
    "text": "them fit as long as your source dependencies have basil laid out already you're able to then include them and",
    "start": "2223920",
    "end": "2229770"
  },
  {
    "text": "then with the proper chip tool change you're you're able to for instance run GCC a compiled version of GCC and if",
    "start": "2229770",
    "end": "2237420"
  },
  {
    "text": "that changes and then basil knows that the dependency tree and it goes all the way back and every project that depends",
    "start": "2237420",
    "end": "2244530"
  },
  {
    "text": "on that version of GCC is then recompile and retest it it's pretty powerful other",
    "start": "2244530",
    "end": "2250440"
  },
  {
    "text": "questions",
    "start": "2250440",
    "end": "2252800"
  },
  {
    "text": "how would you do more complicated deployments with the rules kubernetes",
    "start": "2255760",
    "end": "2260960"
  },
  {
    "text": "like Canada deployments stuff like that how would that fit in can we talk about elastic can we talk",
    "start": "2260960",
    "end": "2267290"
  },
  {
    "text": "about search a bit and tries sorry so the kubernetes deployment more complex",
    "start": "2267290",
    "end": "2274790"
  },
  {
    "text": "some example applications are like kind of Kennedy's for example like weighted deployments and stuff like that",
    "start": "2274790",
    "end": "2280610"
  },
  {
    "text": "yeah so it doesn't support Canaries out of the box but what it does support is star lark which is basically Python ish",
    "start": "2280610",
    "end": "2290470"
  },
  {
    "text": "so it gives you a capability of doing programmatic deployments where you have dependencies you have weight States you",
    "start": "2290470",
    "end": "2297230"
  },
  {
    "text": "have okay this has to happen first you have dependency management we've actually worked with at C in terms of",
    "start": "2297230",
    "end": "2304640"
  },
  {
    "text": "tuning their elasticsearch deployment so that we have stuff like rollovers",
    "start": "2304640",
    "end": "2309710"
  },
  {
    "text": "failover upgrades are all coming actually out of Basel so you're able to",
    "start": "2309710",
    "end": "2315230"
  },
  {
    "text": "chain stuff together no it takes some programming knowledge take some internal bailey's little knowledge how to do it it's not really it's it's it's a little",
    "start": "2315230",
    "end": "2322700"
  },
  {
    "text": "learning curve but it's not writing high-performance computing you know it's not working on you know other really",
    "start": "2322700",
    "end": "2330020"
  },
  {
    "text": "really complex problems yeah we so we an FC as Chris said we we use a lot of star",
    "start": "2330020",
    "end": "2335030"
  },
  {
    "text": "lock code so star lock is this this Python like dialect that you can use to do custom things with your build and for",
    "start": "2335030",
    "end": "2341630"
  },
  {
    "text": "something like Canaries we don't use like in place Canaries like multiple deployments in a namespace we use up",
    "start": "2341630",
    "end": "2348020"
  },
  {
    "text": "just a lot of namespaces and then having traffic go between different namespaces so we have a single place where we",
    "start": "2348020",
    "end": "2355280"
  },
  {
    "text": "define all of the different applications all of the different clusters we use",
    "start": "2355280",
    "end": "2360410"
  },
  {
    "text": "multiple clusters and all of our namespaces and then we generate communities objects for sort of to come",
    "start": "2360410",
    "end": "2366530"
  },
  {
    "text": "to set of those the power set of all of those things and so we might we might",
    "start": "2366530",
    "end": "2371810"
  },
  {
    "text": "test different different container versions in different namespaces different branch shows things like that",
    "start": "2371810",
    "end": "2378400"
  },
  {
    "text": "so one question right there in the middle you know one in the back there's",
    "start": "2378400",
    "end": "2385490"
  },
  {
    "text": "one there there's one over there so Oh are you saying we're done if you",
    "start": "2385490",
    "end": "2391480"
  },
  {
    "text": "want to come with up but we're out of time I'll be great but uh we'll we'll be hanging out if you have any questions",
    "start": "2391480",
    "end": "2397230"
  },
  {
    "text": "[Applause]",
    "start": "2397230",
    "end": "2404190"
  }
]