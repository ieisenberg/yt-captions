[
  {
    "start": "0",
    "end": "108000"
  },
  {
    "text": "hello kubecon and welcome to",
    "start": "1199",
    "end": "3040"
  },
  {
    "text": "multi-cluster is easier than you think",
    "start": "3040",
    "end": "4720"
  },
  {
    "text": "with linker d",
    "start": "4720",
    "end": "5520"
  },
  {
    "text": "and ambassador we're going to be showing",
    "start": "5520",
    "end": "7919"
  },
  {
    "text": "you how to multi-cluster the easy way",
    "start": "7919",
    "end": "9599"
  },
  {
    "text": "and at the end i'm going to give you a",
    "start": "9599",
    "end": "11759"
  },
  {
    "text": "couple great use cases for multi-cluster",
    "start": "11759",
    "end": "13599"
  },
  {
    "text": "that you can go use",
    "start": "13599",
    "end": "15519"
  },
  {
    "text": "on your own before we get started let me",
    "start": "15519",
    "end": "18240"
  },
  {
    "text": "introduce my co-presenter",
    "start": "18240",
    "end": "19840"
  },
  {
    "text": "daniel bryant daniel why don't you tell",
    "start": "19840",
    "end": "22000"
  },
  {
    "text": "us a little bit about yourself",
    "start": "22000",
    "end": "23359"
  },
  {
    "text": "thanks thomas hello everyone daniel",
    "start": "23359",
    "end": "24720"
  },
  {
    "text": "bryant product architects at ambassador",
    "start": "24720",
    "end": "26240"
  },
  {
    "text": "labs here",
    "start": "26240",
    "end": "27039"
  },
  {
    "text": "working on the ambassador api gateway",
    "start": "27039",
    "end": "28640"
  },
  {
    "text": "project for the past three or so years",
    "start": "28640",
    "end": "30720"
  },
  {
    "text": "loving this technology of course loving",
    "start": "30720",
    "end": "32320"
  },
  {
    "text": "link d loving service mesh in general",
    "start": "32320",
    "end": "34399"
  },
  {
    "text": "combination of ambassador and lincoln",
    "start": "34399",
    "end": "35680"
  },
  {
    "text": "deep multicaster are super interesting",
    "start": "35680",
    "end": "37280"
  },
  {
    "text": "so",
    "start": "37280",
    "end": "37600"
  },
  {
    "text": "looking forward to bringing you the demo",
    "start": "37600",
    "end": "38960"
  },
  {
    "text": "today",
    "start": "38960",
    "end": "41120"
  },
  {
    "text": "and my name is thomas rampelberg i'm a",
    "start": "41120",
    "end": "43520"
  },
  {
    "text": "software engineer at",
    "start": "43520",
    "end": "44800"
  },
  {
    "text": "buoyant the creators of linker d",
    "start": "44800",
    "end": "47840"
  },
  {
    "text": "a cncf service mesh before we get",
    "start": "47840",
    "end": "50879"
  },
  {
    "text": "started let me introduce the two",
    "start": "50879",
    "end": "52480"
  },
  {
    "text": "projects that we're going to be using to",
    "start": "52480",
    "end": "54399"
  },
  {
    "text": "build out our multi-cluster solution",
    "start": "54399",
    "end": "56800"
  },
  {
    "text": "the first project is ambassador",
    "start": "56800",
    "end": "59280"
  },
  {
    "text": "ambassador",
    "start": "59280",
    "end": "60000"
  },
  {
    "text": "is a api gateway",
    "start": "60000",
    "end": "63359"
  },
  {
    "text": "in kubernetes you need to have an",
    "start": "63359",
    "end": "64799"
  },
  {
    "text": "ingress controller ambassador does that",
    "start": "64799",
    "end": "66560"
  },
  {
    "text": "and quite a bit more",
    "start": "66560",
    "end": "67680"
  },
  {
    "text": "in fact to get into production you need",
    "start": "67680",
    "end": "69520"
  },
  {
    "text": "a lot of things like",
    "start": "69520",
    "end": "70720"
  },
  {
    "text": "authentication rate limiting request",
    "start": "70720",
    "end": "72560"
  },
  {
    "text": "filters and",
    "start": "72560",
    "end": "74000"
  },
  {
    "text": "ambassador does an absolutely fantastic",
    "start": "74000",
    "end": "76000"
  },
  {
    "text": "job of all of those",
    "start": "76000",
    "end": "77200"
  },
  {
    "text": "it is open source and i would recommend",
    "start": "77200",
    "end": "79600"
  },
  {
    "text": "checking out their website to go and",
    "start": "79600",
    "end": "81280"
  },
  {
    "text": "kick the tires on that if you've been",
    "start": "81280",
    "end": "82640"
  },
  {
    "text": "looking for a",
    "start": "82640",
    "end": "83759"
  },
  {
    "text": "ingress controller i work on linker d",
    "start": "83759",
    "end": "86799"
  },
  {
    "text": "which is",
    "start": "86799",
    "end": "87360"
  },
  {
    "text": "a service mesh in fact it is a ultra",
    "start": "87360",
    "end": "89920"
  },
  {
    "text": "light ultra",
    "start": "89920",
    "end": "90640"
  },
  {
    "text": "fast security first service mesh for",
    "start": "90640",
    "end": "92560"
  },
  {
    "text": "kubernetes you get observability",
    "start": "92560",
    "end": "94799"
  },
  {
    "text": "reliability and security right out of",
    "start": "94799",
    "end": "96640"
  },
  {
    "text": "the box which is",
    "start": "96640",
    "end": "97759"
  },
  {
    "text": "kind of all of the normal service mesh",
    "start": "97759",
    "end": "99680"
  },
  {
    "text": "check boxes",
    "start": "99680",
    "end": "101119"
  },
  {
    "text": "obviously the thing we're going to be",
    "start": "101119",
    "end": "102240"
  },
  {
    "text": "talking about today is multi-cluster and",
    "start": "102240",
    "end": "104960"
  },
  {
    "text": "linker d makes that even easier than you",
    "start": "104960",
    "end": "107119"
  },
  {
    "text": "can imagine",
    "start": "107119",
    "end": "109040"
  },
  {
    "start": "108000",
    "end": "145000"
  },
  {
    "text": "so let's talk a little bit about what",
    "start": "109040",
    "end": "110960"
  },
  {
    "text": "we're going to go over",
    "start": "110960",
    "end": "112479"
  },
  {
    "text": "to do multi-cluster the easy way you",
    "start": "112479",
    "end": "114000"
  },
  {
    "text": "really need to have four separate things",
    "start": "114000",
    "end": "116560"
  },
  {
    "text": "you need to understand how service",
    "start": "116560",
    "end": "118320"
  },
  {
    "text": "discovery works and be able to discover",
    "start": "118320",
    "end": "120560"
  },
  {
    "text": "services across clusters",
    "start": "120560",
    "end": "122159"
  },
  {
    "text": "you need to have cross-cluster access",
    "start": "122159",
    "end": "123920"
  },
  {
    "text": "you need to be able to get the requests",
    "start": "123920",
    "end": "126000"
  },
  {
    "text": "from one cluster to the other",
    "start": "126000",
    "end": "127520"
  },
  {
    "text": "you need to be able to route the",
    "start": "127520",
    "end": "128879"
  },
  {
    "text": "requests in an intelligent fashion",
    "start": "128879",
    "end": "130640"
  },
  {
    "text": "and my favorite part of multicluster the",
    "start": "130640",
    "end": "133280"
  },
  {
    "text": "easy way is",
    "start": "133280",
    "end": "134160"
  },
  {
    "text": "profit so to get started",
    "start": "134160",
    "end": "137760"
  },
  {
    "text": "daniel why don't you give us a little",
    "start": "137760",
    "end": "139040"
  },
  {
    "text": "bit of a sneak peek",
    "start": "139040",
    "end": "141360"
  },
  {
    "text": "into the demo and everything that we're",
    "start": "141360",
    "end": "144239"
  },
  {
    "text": "going to be working on here",
    "start": "144239",
    "end": "145760"
  },
  {
    "start": "145000",
    "end": "227000"
  },
  {
    "text": "so welcome to the demo let me start at",
    "start": "145760",
    "end": "148160"
  },
  {
    "text": "the end",
    "start": "148160",
    "end": "148879"
  },
  {
    "text": "this is actually what we're going to end",
    "start": "148879",
    "end": "150160"
  },
  {
    "text": "up here you can see i've got a command",
    "start": "150160",
    "end": "151920"
  },
  {
    "text": "line terminal",
    "start": "151920",
    "end": "152879"
  },
  {
    "text": "showing a east kubernetes cluster this",
    "start": "152879",
    "end": "155440"
  },
  {
    "text": "is a gke",
    "start": "155440",
    "end": "156720"
  },
  {
    "text": "cluster running front end and pod info",
    "start": "156720",
    "end": "159040"
  },
  {
    "text": "services",
    "start": "159040",
    "end": "160000"
  },
  {
    "text": "and you can see i've got a local docker",
    "start": "160000",
    "end": "161920"
  },
  {
    "text": "desktop cluster down here on the context",
    "start": "161920",
    "end": "164000"
  },
  {
    "text": "of west",
    "start": "164000",
    "end": "164720"
  },
  {
    "text": "i'm again running front end and pod info",
    "start": "164720",
    "end": "166720"
  },
  {
    "text": "here but i'm also running a service",
    "start": "166720",
    "end": "168480"
  },
  {
    "text": "mirror",
    "start": "168480",
    "end": "169040"
  },
  {
    "text": "of pod info east so the pod info east",
    "start": "169040",
    "end": "171840"
  },
  {
    "text": "service in my",
    "start": "171840",
    "end": "173040"
  },
  {
    "text": "local docker desktop cluster is actually",
    "start": "173040",
    "end": "174800"
  },
  {
    "text": "pointing to the",
    "start": "174800",
    "end": "176560"
  },
  {
    "text": "gke cluster it's actually pointing to",
    "start": "176560",
    "end": "178480"
  },
  {
    "text": "the mirrored service there",
    "start": "178480",
    "end": "179760"
  },
  {
    "text": "and you can see i've exposed using",
    "start": "179760",
    "end": "181200"
  },
  {
    "text": "ambassador local host onto the front end",
    "start": "181200",
    "end": "183599"
  },
  {
    "text": "service",
    "start": "183599",
    "end": "184159"
  },
  {
    "text": "running in my docker desktop cluster and",
    "start": "184159",
    "end": "186959"
  },
  {
    "text": "because i've got some traffic splits set",
    "start": "186959",
    "end": "188400"
  },
  {
    "text": "up using smi which i'll show you at the",
    "start": "188400",
    "end": "190000"
  },
  {
    "text": "end",
    "start": "190000",
    "end": "190720"
  },
  {
    "text": "you can see as i'm actually making the",
    "start": "190720",
    "end": "192159"
  },
  {
    "text": "request i've got some refreshing going",
    "start": "192159",
    "end": "194000"
  },
  {
    "text": "on the background",
    "start": "194000",
    "end": "194959"
  },
  {
    "text": "against localhost we're hitting west and",
    "start": "194959",
    "end": "198080"
  },
  {
    "text": "east versions of pod info service",
    "start": "198080",
    "end": "201360"
  },
  {
    "text": "50 50. that's what the traffic split is",
    "start": "201360",
    "end": "203200"
  },
  {
    "text": "set up so although i'm always hitting",
    "start": "203200",
    "end": "205120"
  },
  {
    "text": "the ambassador",
    "start": "205120",
    "end": "206159"
  },
  {
    "text": "ingress instance running in my docker",
    "start": "206159",
    "end": "207760"
  },
  {
    "text": "desktop cluster sometimes the response",
    "start": "207760",
    "end": "210000"
  },
  {
    "text": "is being served by the",
    "start": "210000",
    "end": "211360"
  },
  {
    "text": "pod info service running in dock desktop",
    "start": "211360",
    "end": "214080"
  },
  {
    "text": "but sometimes 50",
    "start": "214080",
    "end": "215599"
  },
  {
    "text": "is also being served by the pod info",
    "start": "215599",
    "end": "217840"
  },
  {
    "text": "service running in gke running remotely",
    "start": "217840",
    "end": "220159"
  },
  {
    "text": "and that's all thanks to the power of",
    "start": "220159",
    "end": "221280"
  },
  {
    "text": "service mirroring",
    "start": "221280",
    "end": "222239"
  },
  {
    "text": "and it's all secure traffic between the",
    "start": "222239",
    "end": "224000"
  },
  {
    "text": "two clusters and we'll now run you",
    "start": "224000",
    "end": "225680"
  },
  {
    "text": "through how you can actually set up your",
    "start": "225680",
    "end": "226879"
  },
  {
    "text": "own",
    "start": "226879",
    "end": "228239"
  },
  {
    "start": "227000",
    "end": "485000"
  },
  {
    "text": "so for today's link d and ambassador",
    "start": "228239",
    "end": "230080"
  },
  {
    "text": "multi-cluster demo i'm going to be using",
    "start": "230080",
    "end": "232000"
  },
  {
    "text": "two kubernetes clusters",
    "start": "232000",
    "end": "233599"
  },
  {
    "text": "i've spun up one already to save time in",
    "start": "233599",
    "end": "235599"
  },
  {
    "text": "gke using the gcloud",
    "start": "235599",
    "end": "237599"
  },
  {
    "text": "command line tool i spun that up in the",
    "start": "237599",
    "end": "239680"
  },
  {
    "text": "u.s east region i'm going to be calling",
    "start": "239680",
    "end": "241439"
  },
  {
    "text": "that cluster the east cluster",
    "start": "241439",
    "end": "243280"
  },
  {
    "text": "that's my top right window here i've",
    "start": "243280",
    "end": "245599"
  },
  {
    "text": "also spun up a local docker desktop",
    "start": "245599",
    "end": "247680"
  },
  {
    "text": "a cluster that one's going to be shown",
    "start": "247680",
    "end": "248879"
  },
  {
    "text": "in the bottom right window here and i'm",
    "start": "248879",
    "end": "250879"
  },
  {
    "text": "going to be running my commands against",
    "start": "250879",
    "end": "252239"
  },
  {
    "text": "the clusters using the different",
    "start": "252239",
    "end": "253519"
  },
  {
    "text": "contexts",
    "start": "253519",
    "end": "254400"
  },
  {
    "text": "of east and west and i'm going to be",
    "start": "254400",
    "end": "256000"
  },
  {
    "text": "running all the link d commands and the",
    "start": "256000",
    "end": "257359"
  },
  {
    "text": "master commands",
    "start": "257359",
    "end": "258320"
  },
  {
    "text": "in my console on the left here these",
    "start": "258320",
    "end": "260720"
  },
  {
    "text": "clusters at the moment are both",
    "start": "260720",
    "end": "262000"
  },
  {
    "text": "empty so let's pop along to the kate's",
    "start": "262000",
    "end": "264320"
  },
  {
    "text": "initializer",
    "start": "264320",
    "end": "265120"
  },
  {
    "text": "and use this to bootstrap the clusters",
    "start": "265120",
    "end": "267600"
  },
  {
    "text": "this is a free tool you can install a",
    "start": "267600",
    "end": "269120"
  },
  {
    "text": "bunch of stuff",
    "start": "269120",
    "end": "269919"
  },
  {
    "text": "ambassador for ingress prometheus",
    "start": "269919",
    "end": "271680"
  },
  {
    "text": "monitoring jaeger key cloak argo cd etc",
    "start": "271680",
    "end": "274320"
  },
  {
    "text": "you can select the configuration and",
    "start": "274320",
    "end": "275840"
  },
  {
    "text": "auto generate the yaml and simply apply",
    "start": "275840",
    "end": "277600"
  },
  {
    "text": "it to your cluster so for docker desktop",
    "start": "277600",
    "end": "279280"
  },
  {
    "text": "for example",
    "start": "279280",
    "end": "280000"
  },
  {
    "text": "my west cluster i select docker desktop",
    "start": "280000",
    "end": "282160"
  },
  {
    "text": "don't want to terminate tls again this",
    "start": "282160",
    "end": "283759"
  },
  {
    "text": "is a",
    "start": "283759",
    "end": "284320"
  },
  {
    "text": "toy example you do want to look at tls",
    "start": "284320",
    "end": "286479"
  },
  {
    "text": "in production",
    "start": "286479",
    "end": "287360"
  },
  {
    "text": "but once i've selected my config i can",
    "start": "287360",
    "end": "289199"
  },
  {
    "text": "select more down here if i want but",
    "start": "289199",
    "end": "290639"
  },
  {
    "text": "today let's keep it nice and simple",
    "start": "290639",
    "end": "292479"
  },
  {
    "text": "i go review and install and i will uh i",
    "start": "292479",
    "end": "294880"
  },
  {
    "text": "get some",
    "start": "294880",
    "end": "295520"
  },
  {
    "text": "coop cattle apply commands i can run",
    "start": "295520",
    "end": "297360"
  },
  {
    "text": "against my cluster now i've got some",
    "start": "297360",
    "end": "299120"
  },
  {
    "text": "pre-configured",
    "start": "299120",
    "end": "300000"
  },
  {
    "text": "commands i've done already because i",
    "start": "300000",
    "end": "301280"
  },
  {
    "text": "want to put the contexts in so i'm not",
    "start": "301280",
    "end": "303039"
  },
  {
    "text": "going to be copying pasting from here",
    "start": "303039",
    "end": "304639"
  },
  {
    "text": "but this is exactly what i would you",
    "start": "304639",
    "end": "306080"
  },
  {
    "text": "know would do",
    "start": "306080",
    "end": "307440"
  },
  {
    "text": "let's go back and i'll show you with the",
    "start": "307440",
    "end": "308639"
  },
  {
    "text": "gke when it's exactly the same select",
    "start": "308639",
    "end": "310320"
  },
  {
    "text": "gke",
    "start": "310320",
    "end": "311280"
  },
  {
    "text": "i'm going to be using an l4 low balancer",
    "start": "311280",
    "end": "313600"
  },
  {
    "text": "don't want to terminate your lessons to",
    "start": "313600",
    "end": "315120"
  },
  {
    "text": "example",
    "start": "315120",
    "end": "315759"
  },
  {
    "text": "public host name of star and i review",
    "start": "315759",
    "end": "317840"
  },
  {
    "text": "and install and again i just install",
    "start": "317840",
    "end": "319759"
  },
  {
    "text": "that",
    "start": "319759",
    "end": "320400"
  },
  {
    "text": "against my cluster let's actually do",
    "start": "320400",
    "end": "322479"
  },
  {
    "text": "that now with my pre-configured",
    "start": "322479",
    "end": "325039"
  },
  {
    "text": "cheat sheet",
    "start": "325039",
    "end": "327520"
  },
  {
    "text": "first i'll run my watch commands on the",
    "start": "336400",
    "end": "339360"
  },
  {
    "text": "kubernetes clusters",
    "start": "339360",
    "end": "341360"
  },
  {
    "text": "at the top here i'm going to be watching",
    "start": "341360",
    "end": "342720"
  },
  {
    "text": "the east context our gke cluster",
    "start": "342720",
    "end": "345360"
  },
  {
    "text": "i'm looking for services in all names",
    "start": "345360",
    "end": "347120"
  },
  {
    "text": "places so as we add more things you'll",
    "start": "347120",
    "end": "348960"
  },
  {
    "text": "see more",
    "start": "348960",
    "end": "349600"
  },
  {
    "text": "services appear here",
    "start": "349600",
    "end": "353840"
  },
  {
    "text": "and in the bottom window i'll do the",
    "start": "354080",
    "end": "355440"
  },
  {
    "text": "same for the context of west my docker",
    "start": "355440",
    "end": "357440"
  },
  {
    "text": "desktop cluster so you can see as i have",
    "start": "357440",
    "end": "358960"
  },
  {
    "text": "more things here",
    "start": "358960",
    "end": "360479"
  },
  {
    "text": "right let's install ambassador in both",
    "start": "360479",
    "end": "364240"
  },
  {
    "text": "clusters",
    "start": "364840",
    "end": "367840"
  },
  {
    "text": "with the east cluster now done we can",
    "start": "379600",
    "end": "381280"
  },
  {
    "text": "see in the top window we've got our",
    "start": "381280",
    "end": "382960"
  },
  {
    "text": "ambassador services in addition to our",
    "start": "382960",
    "end": "384639"
  },
  {
    "text": "kubernetes core services too",
    "start": "384639",
    "end": "386639"
  },
  {
    "text": "let's now install ambassador on docker",
    "start": "386639",
    "end": "390880"
  },
  {
    "text": "desktop",
    "start": "392840",
    "end": "395840"
  },
  {
    "text": "now we've installed ambassador on docker",
    "start": "398880",
    "end": "400319"
  },
  {
    "text": "desktop so we have our ingress is set up",
    "start": "400319",
    "end": "402160"
  },
  {
    "text": "in both clusters",
    "start": "402160",
    "end": "403199"
  },
  {
    "text": "both the remote cluster gke and also",
    "start": "403199",
    "end": "405680"
  },
  {
    "text": "local docker desktop cluster let's now",
    "start": "405680",
    "end": "408319"
  },
  {
    "text": "move on to the linkedin multicluster",
    "start": "408319",
    "end": "410000"
  },
  {
    "text": "setup",
    "start": "410000",
    "end": "411440"
  },
  {
    "text": "now the first thing we're going to do",
    "start": "411440",
    "end": "412479"
  },
  {
    "text": "with our multi-cluster setup within link",
    "start": "412479",
    "end": "414479"
  },
  {
    "text": "d",
    "start": "414479",
    "end": "415039"
  },
  {
    "text": "is to create a shared trust anchor",
    "start": "415039",
    "end": "417120"
  },
  {
    "text": "public private keys",
    "start": "417120",
    "end": "418400"
  },
  {
    "text": "between the two clusters that enables",
    "start": "418400",
    "end": "420240"
  },
  {
    "text": "them to communicate securely",
    "start": "420240",
    "end": "422000"
  },
  {
    "text": "i'm going to use the step cli command",
    "start": "422000",
    "end": "423599"
  },
  {
    "text": "you could use open sl whatever you like",
    "start": "423599",
    "end": "425520"
  },
  {
    "text": "and generate my certificates into my",
    "start": "425520",
    "end": "427440"
  },
  {
    "text": "directory here",
    "start": "427440",
    "end": "430160"
  },
  {
    "text": "once that's done let's run the link d",
    "start": "431599",
    "end": "433599"
  },
  {
    "text": "install command in both our clusters",
    "start": "433599",
    "end": "435199"
  },
  {
    "text": "using a little bit of a cheat here to do",
    "start": "435199",
    "end": "437039"
  },
  {
    "text": "both east and west at the same time and",
    "start": "437039",
    "end": "438560"
  },
  {
    "text": "you'll notice on the windows on the",
    "start": "438560",
    "end": "440080"
  },
  {
    "text": "right",
    "start": "440080",
    "end": "440639"
  },
  {
    "text": "that as linkery gets installed you'll",
    "start": "440639",
    "end": "442720"
  },
  {
    "text": "see some of the services popping up here",
    "start": "442720",
    "end": "451840"
  },
  {
    "text": "this is all looking good now you can see",
    "start": "452560",
    "end": "454000"
  },
  {
    "text": "the linkade namespace and then key",
    "start": "454000",
    "end": "455599"
  },
  {
    "text": "services both in my",
    "start": "455599",
    "end": "456960"
  },
  {
    "text": "gke cluster and also my docker desktop",
    "start": "456960",
    "end": "459039"
  },
  {
    "text": "cluster down here",
    "start": "459039",
    "end": "460479"
  },
  {
    "text": "let's do a quick check on the link d",
    "start": "460479",
    "end": "462840"
  },
  {
    "text": "config",
    "start": "462840",
    "end": "465840"
  },
  {
    "text": "the status checks look good there's one",
    "start": "473919",
    "end": "475759"
  },
  {
    "text": "thing i do very much like about the",
    "start": "475759",
    "end": "476879"
  },
  {
    "text": "linker d cli",
    "start": "476879",
    "end": "478160"
  },
  {
    "text": "you can run all the health checks and it",
    "start": "478160",
    "end": "479840"
  },
  {
    "text": "presents everything in a very nice way",
    "start": "479840",
    "end": "481280"
  },
  {
    "text": "we can scroll up and down and look at",
    "start": "481280",
    "end": "482639"
  },
  {
    "text": "all the",
    "start": "482639",
    "end": "483120"
  },
  {
    "text": "various conflict parameters and know",
    "start": "483120",
    "end": "484479"
  },
  {
    "text": "everything is good thanks daniel",
    "start": "484479",
    "end": "486479"
  },
  {
    "start": "485000",
    "end": "527000"
  },
  {
    "text": "it is really cool to see what it takes",
    "start": "486479",
    "end": "489039"
  },
  {
    "text": "to get ambassador up running on not one",
    "start": "489039",
    "end": "491120"
  },
  {
    "text": "cluster but two clusters",
    "start": "491120",
    "end": "493280"
  },
  {
    "text": "as well as linker d all set up and ready",
    "start": "493280",
    "end": "495280"
  },
  {
    "text": "to go now",
    "start": "495280",
    "end": "496319"
  },
  {
    "text": "for those of you who are hopefully going",
    "start": "496319",
    "end": "498080"
  },
  {
    "text": "to be trying this out at home",
    "start": "498080",
    "end": "499680"
  },
  {
    "text": "i would like to note that while it was",
    "start": "499680",
    "end": "502000"
  },
  {
    "text": "it's going to be pretty quick for you it",
    "start": "502000",
    "end": "503680"
  },
  {
    "text": "probably will be a little bit slower on",
    "start": "503680",
    "end": "505360"
  },
  {
    "text": "your own clusters because i used a",
    "start": "505360",
    "end": "507199"
  },
  {
    "text": "little bit of movie magic there and sped",
    "start": "507199",
    "end": "509120"
  },
  {
    "text": "everything up",
    "start": "509120",
    "end": "510879"
  },
  {
    "text": "great so with every all of the",
    "start": "510879",
    "end": "513200"
  },
  {
    "text": "components",
    "start": "513200",
    "end": "513919"
  },
  {
    "text": "for ambassador in liquidity setup let's",
    "start": "513919",
    "end": "515839"
  },
  {
    "text": "talk a little bit about what's required",
    "start": "515839",
    "end": "517760"
  },
  {
    "text": "and what all those components do so to",
    "start": "517760",
    "end": "520560"
  },
  {
    "text": "get multi-cluster up the easy way",
    "start": "520560",
    "end": "522399"
  },
  {
    "text": "the first thing to dig into is service",
    "start": "522399",
    "end": "525600"
  },
  {
    "text": "discovery",
    "start": "525600",
    "end": "527680"
  },
  {
    "start": "527000",
    "end": "580000"
  },
  {
    "text": "to talk a little bit about service",
    "start": "527680",
    "end": "530160"
  },
  {
    "text": "discovery though first let's",
    "start": "530160",
    "end": "532320"
  },
  {
    "text": "go into what it means in kubernetes so",
    "start": "532320",
    "end": "536000"
  },
  {
    "text": "in kubernetes i'm going to be using the",
    "start": "536000",
    "end": "538480"
  },
  {
    "text": "pod info service here",
    "start": "538480",
    "end": "539839"
  },
  {
    "text": "as a example kubernetes has a resource",
    "start": "539839",
    "end": "543279"
  },
  {
    "text": "type called services when a service is",
    "start": "543279",
    "end": "545680"
  },
  {
    "text": "created",
    "start": "545680",
    "end": "546560"
  },
  {
    "text": "inside that namespace you get dns for it",
    "start": "546560",
    "end": "549600"
  },
  {
    "text": "automatically",
    "start": "549600",
    "end": "550720"
  },
  {
    "text": "i've got that up here on the slide it's",
    "start": "550720",
    "end": "552560"
  },
  {
    "text": "a pod info test",
    "start": "552560",
    "end": "553920"
  },
  {
    "text": "svc cluster local and the front end app",
    "start": "553920",
    "end": "557120"
  },
  {
    "text": "that i've got",
    "start": "557120",
    "end": "558160"
  },
  {
    "text": "listed here can address pod info",
    "start": "558160",
    "end": "560560"
  },
  {
    "text": "directly",
    "start": "560560",
    "end": "561519"
  },
  {
    "text": "when it does that the dns response from",
    "start": "561519",
    "end": "564800"
  },
  {
    "text": "core dns returns a cluster ip",
    "start": "564800",
    "end": "568160"
  },
  {
    "text": "that cluster ip gets rewritten through",
    "start": "568160",
    "end": "569760"
  },
  {
    "text": "the magic of coop proxy",
    "start": "569760",
    "end": "571360"
  },
  {
    "text": "and ends up directly at the pod",
    "start": "571360",
    "end": "574560"
  },
  {
    "text": "this is great it works out of the box",
    "start": "574560",
    "end": "576800"
  },
  {
    "text": "kubernetes is fantastic on service",
    "start": "576800",
    "end": "578560"
  },
  {
    "text": "discovery",
    "start": "578560",
    "end": "579440"
  },
  {
    "text": "but once we add another cluster there's",
    "start": "579440",
    "end": "581600"
  },
  {
    "start": "580000",
    "end": "646000"
  },
  {
    "text": "a little bit of a problem that we run",
    "start": "581600",
    "end": "583200"
  },
  {
    "text": "into",
    "start": "583200",
    "end": "583920"
  },
  {
    "text": "very specifically you can't out of the",
    "start": "583920",
    "end": "586959"
  },
  {
    "text": "box share resources between two",
    "start": "586959",
    "end": "588880"
  },
  {
    "text": "kubernetes clusters",
    "start": "588880",
    "end": "590080"
  },
  {
    "text": "uh how do we go and get the pod info",
    "start": "590080",
    "end": "592880"
  },
  {
    "text": "service visible",
    "start": "592880",
    "end": "594160"
  },
  {
    "text": "and addressable from the front end app",
    "start": "594160",
    "end": "597200"
  },
  {
    "text": "if the pod info is in the east cluster",
    "start": "597200",
    "end": "598880"
  },
  {
    "text": "and front end is in the west cluster",
    "start": "598880",
    "end": "600399"
  },
  {
    "text": "well",
    "start": "600399",
    "end": "601839"
  },
  {
    "text": "very very very naively",
    "start": "601839",
    "end": "605200"
  },
  {
    "text": "here's your answer coop ctl contacts",
    "start": "605200",
    "end": "608560"
  },
  {
    "text": "yeast",
    "start": "608560",
    "end": "609200"
  },
  {
    "text": "get the pot info yaml and pipe it into",
    "start": "609200",
    "end": "611920"
  },
  {
    "text": "the west cluster",
    "start": "611920",
    "end": "613440"
  },
  {
    "text": "that's pretty much all you really need",
    "start": "613440",
    "end": "616320"
  },
  {
    "text": "to do now",
    "start": "616320",
    "end": "617200"
  },
  {
    "text": "there's a couple downsides to this and",
    "start": "617200",
    "end": "619360"
  },
  {
    "text": "is we're going to go into why we've",
    "start": "619360",
    "end": "621040"
  },
  {
    "text": "installed a component to do this",
    "start": "621040",
    "end": "622800"
  },
  {
    "text": "but uh that moves the pod info service",
    "start": "622800",
    "end": "625600"
  },
  {
    "text": "over to the west cluster from the east",
    "start": "625600",
    "end": "627200"
  },
  {
    "text": "cluster",
    "start": "627200",
    "end": "627760"
  },
  {
    "text": "and now there's going to be dns that can",
    "start": "627760",
    "end": "630160"
  },
  {
    "text": "be addressed for front end",
    "start": "630160",
    "end": "633200"
  },
  {
    "text": "but as i'm sure some of you have already",
    "start": "633200",
    "end": "635920"
  },
  {
    "text": "thought through",
    "start": "635920",
    "end": "637519"
  },
  {
    "text": "one of the biggest problems there is is",
    "start": "637519",
    "end": "639040"
  },
  {
    "text": "that it isn't going to get updates if",
    "start": "639040",
    "end": "640560"
  },
  {
    "text": "pod info was",
    "start": "640560",
    "end": "641519"
  },
  {
    "text": "changed if it was deleted you wouldn't",
    "start": "641519",
    "end": "644320"
  },
  {
    "text": "get those notifications on west",
    "start": "644320",
    "end": "646079"
  },
  {
    "text": "and so in linker d we introduced a",
    "start": "646079",
    "end": "649600"
  },
  {
    "text": "controller kubernetes has a controller",
    "start": "649600",
    "end": "652640"
  },
  {
    "text": "patterns",
    "start": "652640",
    "end": "654000"
  },
  {
    "text": "deployments are managed through",
    "start": "654000",
    "end": "655279"
  },
  {
    "text": "controllers services are managed through",
    "start": "655279",
    "end": "657600"
  },
  {
    "text": "controllers",
    "start": "657600",
    "end": "658560"
  },
  {
    "text": "and those controllers basically watch",
    "start": "658560",
    "end": "660399"
  },
  {
    "text": "the api server",
    "start": "660399",
    "end": "661680"
  },
  {
    "text": "for uh resources to be updated",
    "start": "661680",
    "end": "664720"
  },
  {
    "text": "and then do something and so the link rd",
    "start": "664720",
    "end": "667040"
  },
  {
    "text": "service mirror watches the east clusters",
    "start": "667040",
    "end": "669279"
  },
  {
    "text": "api server",
    "start": "669279",
    "end": "670640"
  },
  {
    "text": "and when it sees pod info created",
    "start": "670640",
    "end": "673120"
  },
  {
    "text": "deleted",
    "start": "673120",
    "end": "673760"
  },
  {
    "text": "updated it goes and does that on the",
    "start": "673760",
    "end": "675440"
  },
  {
    "text": "west cluster",
    "start": "675440",
    "end": "676959"
  },
  {
    "text": "that's pretty much all it does the one",
    "start": "676959",
    "end": "679920"
  },
  {
    "text": "important thing to point out here though",
    "start": "679920",
    "end": "681440"
  },
  {
    "text": "is that it adds the",
    "start": "681440",
    "end": "684800"
  },
  {
    "text": "east cluster's name as a",
    "start": "684800",
    "end": "688000"
  },
  {
    "text": "suffix to pod info so they can you can",
    "start": "688000",
    "end": "692240"
  },
  {
    "text": "directly address it",
    "start": "692240",
    "end": "695279"
  },
  {
    "text": "great so all we've done",
    "start": "695680",
    "end": "698880"
  },
  {
    "text": "is tackle service discovery",
    "start": "698880",
    "end": "702000"
  },
  {
    "text": "we're going to go into a little bit",
    "start": "702000",
    "end": "703279"
  },
  {
    "text": "about how the cross cluster access works",
    "start": "703279",
    "end": "706160"
  },
  {
    "text": "next but before we do that daniel why",
    "start": "706160",
    "end": "708640"
  },
  {
    "text": "don't you give us a little bit of a demo",
    "start": "708640",
    "end": "710480"
  },
  {
    "text": "on what it takes to install the service",
    "start": "710480",
    "end": "712800"
  },
  {
    "text": "mirror with linker d on a cluster",
    "start": "712800",
    "end": "715040"
  },
  {
    "text": "let's now look at installing",
    "start": "715040",
    "end": "716399"
  },
  {
    "text": "multi-cluster in very much the same way",
    "start": "716399",
    "end": "718399"
  },
  {
    "text": "this is the command we'll be running",
    "start": "718399",
    "end": "719600"
  },
  {
    "text": "here",
    "start": "719600",
    "end": "720000"
  },
  {
    "text": "i won't be installing the gateway you'll",
    "start": "720000",
    "end": "721760"
  },
  {
    "text": "notice here install gateway equals false",
    "start": "721760",
    "end": "723839"
  },
  {
    "text": "because we've already set up ambassador",
    "start": "723839",
    "end": "725279"
  },
  {
    "text": "and we're going to be using ambassador",
    "start": "725279",
    "end": "726560"
  },
  {
    "text": "as our",
    "start": "726560",
    "end": "728839"
  },
  {
    "text": "gateway",
    "start": "728839",
    "end": "731839"
  },
  {
    "text": "with service discovery set up we can now",
    "start": "732880",
    "end": "735440"
  },
  {
    "text": "address",
    "start": "735440",
    "end": "736079"
  },
  {
    "text": "services in the east cluster but how do",
    "start": "736079",
    "end": "739279"
  },
  {
    "text": "we actually get packets to go",
    "start": "739279",
    "end": "740800"
  },
  {
    "text": "over there to figure that out",
    "start": "740800",
    "end": "744639"
  },
  {
    "start": "742000",
    "end": "758000"
  },
  {
    "text": "let's talk a little bit about a resource",
    "start": "744639",
    "end": "747600"
  },
  {
    "text": "type in kubernetes that",
    "start": "747600",
    "end": "749360"
  },
  {
    "text": "is kind of under the covers uh some",
    "start": "749360",
    "end": "752320"
  },
  {
    "text": "folks don't spend very much time",
    "start": "752320",
    "end": "754480"
  },
  {
    "text": "chatting about it and that is the",
    "start": "754480",
    "end": "756480"
  },
  {
    "text": "endpoint resource",
    "start": "756480",
    "end": "759120"
  },
  {
    "start": "758000",
    "end": "864000"
  },
  {
    "text": "the endpoint resource in kubernetes is",
    "start": "759120",
    "end": "762320"
  },
  {
    "text": "kind of like this yaml that i've got up",
    "start": "762320",
    "end": "763920"
  },
  {
    "text": "here really",
    "start": "763920",
    "end": "765680"
  },
  {
    "text": "just the pod ip addresses for",
    "start": "765680",
    "end": "769040"
  },
  {
    "text": "a service so the endpoint controller",
    "start": "769040",
    "end": "772079"
  },
  {
    "text": "watches uh services and takes the",
    "start": "772079",
    "end": "775279"
  },
  {
    "text": "pod selector from those services goes",
    "start": "775279",
    "end": "777760"
  },
  {
    "text": "and looks up the pods and",
    "start": "777760",
    "end": "779279"
  },
  {
    "text": "adds ip addresses to an endpoint object",
    "start": "779279",
    "end": "782160"
  },
  {
    "text": "for that",
    "start": "782160",
    "end": "784639"
  },
  {
    "text": "uh just like our service mirror is",
    "start": "784839",
    "end": "787760"
  },
  {
    "text": "syncing the services across we could",
    "start": "787760",
    "end": "789920"
  },
  {
    "text": "just stop here and sync the pod",
    "start": "789920",
    "end": "793279"
  },
  {
    "text": "or the endpoint resource across the",
    "start": "793279",
    "end": "794720"
  },
  {
    "text": "clusters attach that to",
    "start": "794720",
    "end": "796480"
  },
  {
    "text": "our mirrored service and uh",
    "start": "796480",
    "end": "799760"
  },
  {
    "text": "let everything go through unfortunately",
    "start": "799760",
    "end": "801440"
  },
  {
    "text": "that presents two problems uh",
    "start": "801440",
    "end": "803680"
  },
  {
    "text": "problem number one is that pod ip",
    "start": "803680",
    "end": "805600"
  },
  {
    "text": "addresses would need to be routable",
    "start": "805600",
    "end": "807120"
  },
  {
    "text": "between",
    "start": "807120",
    "end": "807760"
  },
  {
    "text": "cluster west and cluster east if you can",
    "start": "807760",
    "end": "810639"
  },
  {
    "text": "imagine a multi-cloud scenario where",
    "start": "810639",
    "end": "812720"
  },
  {
    "text": "you're",
    "start": "812720",
    "end": "813120"
  },
  {
    "text": "running a kubernetes cluster in two",
    "start": "813120",
    "end": "815519"
  },
  {
    "text": "different managed providers",
    "start": "815519",
    "end": "817519"
  },
  {
    "text": "that would be pretty difficult possible",
    "start": "817519",
    "end": "819519"
  },
  {
    "text": "but pretty difficult the overlays",
    "start": "819519",
    "end": "821839"
  },
  {
    "text": "configuration there would not be",
    "start": "821839",
    "end": "823120"
  },
  {
    "text": "something i would want to do",
    "start": "823120",
    "end": "825279"
  },
  {
    "text": "perhaps the bigger problem though is",
    "start": "825279",
    "end": "828399"
  },
  {
    "text": "bandwidth interestingly enough the",
    "start": "828399",
    "end": "830560"
  },
  {
    "text": "endpoints object here has all of the ip",
    "start": "830560",
    "end": "832959"
  },
  {
    "text": "addresses",
    "start": "832959",
    "end": "833600"
  },
  {
    "text": "for the pod info service in it so",
    "start": "833600",
    "end": "836079"
  },
  {
    "text": "anytime those are updated",
    "start": "836079",
    "end": "838720"
  },
  {
    "text": "it'll get synced across from the east",
    "start": "838720",
    "end": "840959"
  },
  {
    "text": "cluster to the west cluster",
    "start": "840959",
    "end": "842720"
  },
  {
    "text": "not only is that going to chew up a",
    "start": "842720",
    "end": "844000"
  },
  {
    "text": "bunch of bandwidth but it will also have",
    "start": "844000",
    "end": "846399"
  },
  {
    "text": "some issues around keeping everything up",
    "start": "846399",
    "end": "848079"
  },
  {
    "text": "to",
    "start": "848079",
    "end": "848800"
  },
  {
    "text": "date imagine a pod ip going away",
    "start": "848800",
    "end": "851839"
  },
  {
    "text": "in the east cluster and not getting",
    "start": "851839",
    "end": "853440"
  },
  {
    "text": "updated in the west cluster you",
    "start": "853440",
    "end": "854800"
  },
  {
    "text": "potentially could have some lost packets",
    "start": "854800",
    "end": "858560"
  },
  {
    "text": "so what's the solution that we have to",
    "start": "858560",
    "end": "860880"
  },
  {
    "text": "this problem well",
    "start": "860880",
    "end": "862560"
  },
  {
    "text": "if you've been waiting the solution to",
    "start": "862560",
    "end": "865440"
  },
  {
    "start": "864000",
    "end": "1132000"
  },
  {
    "text": "this problem is actually ambassador",
    "start": "865440",
    "end": "867760"
  },
  {
    "text": "why not use the same ambassador that",
    "start": "867760",
    "end": "869920"
  },
  {
    "text": "you've got already",
    "start": "869920",
    "end": "871279"
  },
  {
    "text": "managing your ingress for",
    "start": "871279",
    "end": "874480"
  },
  {
    "text": "the multi-cluster communication",
    "start": "874480",
    "end": "876880"
  },
  {
    "text": "ambassador already has a public ip",
    "start": "876880",
    "end": "878720"
  },
  {
    "text": "address it's routable from the west",
    "start": "878720",
    "end": "880399"
  },
  {
    "text": "cluster",
    "start": "880399",
    "end": "881040"
  },
  {
    "text": "there's no need to pay for an extra load",
    "start": "881040",
    "end": "882959"
  },
  {
    "text": "balancer and it can manage the traffic",
    "start": "882959",
    "end": "885120"
  },
  {
    "text": "for you",
    "start": "885120",
    "end": "886480"
  },
  {
    "text": "as part of its production setup already",
    "start": "886480",
    "end": "889760"
  },
  {
    "text": "so what do we need to do to get that all",
    "start": "889760",
    "end": "892160"
  },
  {
    "text": "wired up well",
    "start": "892160",
    "end": "894160"
  },
  {
    "text": "all we need to do is tell our service",
    "start": "894160",
    "end": "896320"
  },
  {
    "text": "mirror to",
    "start": "896320",
    "end": "897440"
  },
  {
    "text": "instead of move all of the endpoints",
    "start": "897440",
    "end": "901600"
  },
  {
    "text": "from the east cluster over to the west",
    "start": "901600",
    "end": "903760"
  },
  {
    "text": "we just grab the public ip address of",
    "start": "903760",
    "end": "906240"
  },
  {
    "text": "the ambassador",
    "start": "906240",
    "end": "907600"
  },
  {
    "text": "load balancer and stick that into the",
    "start": "907600",
    "end": "909680"
  },
  {
    "text": "endpoints",
    "start": "909680",
    "end": "911199"
  },
  {
    "text": "one thing to note here is that when the",
    "start": "911199",
    "end": "913040"
  },
  {
    "text": "service mirror syncs",
    "start": "913040",
    "end": "914480"
  },
  {
    "text": "the pod info service from the east",
    "start": "914480",
    "end": "916240"
  },
  {
    "text": "cluster to the west cluster",
    "start": "916240",
    "end": "917760"
  },
  {
    "text": "it also removes the pod selector to make",
    "start": "917760",
    "end": "919680"
  },
  {
    "text": "sure that the",
    "start": "919680",
    "end": "920880"
  },
  {
    "text": "built-in kubernetes endpoint controller",
    "start": "920880",
    "end": "922720"
  },
  {
    "text": "doesn't go and modify any endpoints for",
    "start": "922720",
    "end": "925360"
  },
  {
    "text": "us",
    "start": "925360",
    "end": "926639"
  },
  {
    "text": "pretty cool right that's",
    "start": "926639",
    "end": "929680"
  },
  {
    "text": "it now all of our traffic from front end",
    "start": "929680",
    "end": "932959"
  },
  {
    "text": "can get",
    "start": "932959",
    "end": "933759"
  },
  {
    "text": "correctly addressed to pod info-east and",
    "start": "933759",
    "end": "936560"
  },
  {
    "text": "that will be",
    "start": "936560",
    "end": "937199"
  },
  {
    "text": "forwarded by kubernetes over to",
    "start": "937199",
    "end": "940800"
  },
  {
    "text": "ambassador which will finally pass it on",
    "start": "940800",
    "end": "943040"
  },
  {
    "text": "to the pod info",
    "start": "943040",
    "end": "944959"
  },
  {
    "text": "pods in the east cluster i'd like to",
    "start": "944959",
    "end": "948240"
  },
  {
    "text": "have one note here really quick around",
    "start": "948240",
    "end": "950639"
  },
  {
    "text": "the",
    "start": "950639",
    "end": "951759"
  },
  {
    "text": "routing because all this traffic is",
    "start": "951759",
    "end": "954320"
  },
  {
    "text": "going",
    "start": "954320",
    "end": "954800"
  },
  {
    "text": "over the greater internet security is",
    "start": "954800",
    "end": "957360"
  },
  {
    "text": "pretty important",
    "start": "957360",
    "end": "960079"
  },
  {
    "text": "linker d provides mtls out of the box",
    "start": "960240",
    "end": "963519"
  },
  {
    "text": "for both sides because there's proxies",
    "start": "963519",
    "end": "965759"
  },
  {
    "text": "on the",
    "start": "965759",
    "end": "966880"
  },
  {
    "text": "front end west cluster and ambassador",
    "start": "966880",
    "end": "969519"
  },
  {
    "text": "east cluster",
    "start": "969519",
    "end": "970560"
  },
  {
    "text": "that communication across the internet",
    "start": "970560",
    "end": "972320"
  },
  {
    "text": "is uh encrypted",
    "start": "972320",
    "end": "974639"
  },
  {
    "text": "because it's mtls remember it's the",
    "start": "974639",
    "end": "976480"
  },
  {
    "text": "mutual part it's also",
    "start": "976480",
    "end": "977759"
  },
  {
    "text": "authenticated and so the ambassador",
    "start": "977759",
    "end": "981759"
  },
  {
    "text": "only allows traffic from the west",
    "start": "981759",
    "end": "985440"
  },
  {
    "text": "cluster or more specifically",
    "start": "985440",
    "end": "987440"
  },
  {
    "text": "signed with the same a certificate",
    "start": "987440",
    "end": "989279"
  },
  {
    "text": "signed with the same trust route",
    "start": "989279",
    "end": "990639"
  },
  {
    "text": "into the cluster to get to pod info and",
    "start": "990639",
    "end": "992399"
  },
  {
    "text": "so your",
    "start": "992399",
    "end": "993680"
  },
  {
    "text": "traffic is secure and access is also",
    "start": "993680",
    "end": "996880"
  },
  {
    "text": "secured so you don't need to worry about",
    "start": "996880",
    "end": "998399"
  },
  {
    "text": "the security there",
    "start": "998399",
    "end": "999600"
  },
  {
    "text": "that said security is a amazingly deep",
    "start": "999600",
    "end": "1003040"
  },
  {
    "text": "deep deep dive and i've added a link to",
    "start": "1003040",
    "end": "1005759"
  },
  {
    "text": "this slide so that you can go and take a",
    "start": "1005759",
    "end": "1007519"
  },
  {
    "text": "look",
    "start": "1007519",
    "end": "1008320"
  },
  {
    "text": "and go into all the nitty gritty details",
    "start": "1008320",
    "end": "1011120"
  },
  {
    "text": "if that's something that you're",
    "start": "1011120",
    "end": "1012079"
  },
  {
    "text": "interested in",
    "start": "1012079",
    "end": "1014240"
  },
  {
    "text": "fantastic daniel can you show us what it",
    "start": "1014240",
    "end": "1017360"
  },
  {
    "text": "takes to get ambassador setup as a",
    "start": "1017360",
    "end": "1019440"
  },
  {
    "text": "gateway",
    "start": "1019440",
    "end": "1020079"
  },
  {
    "text": "for all of this traffic in a",
    "start": "1020079",
    "end": "1021519"
  },
  {
    "text": "multi-cluster solution looks good",
    "start": "1021519",
    "end": "1024720"
  },
  {
    "text": "this is probably the most interesting",
    "start": "1024720",
    "end": "1026160"
  },
  {
    "text": "patch here we're patching the gateway to",
    "start": "1026160",
    "end": "1028079"
  },
  {
    "text": "open ports in ambassador to allow",
    "start": "1028079",
    "end": "1029760"
  },
  {
    "text": "linkadi to talk through",
    "start": "1029760",
    "end": "1031280"
  },
  {
    "text": "and sort of the to the mirrored services",
    "start": "1031280",
    "end": "1033038"
  },
  {
    "text": "on either side of the cluster",
    "start": "1033039",
    "end": "1038798"
  },
  {
    "text": "that all looks good you can see now lots",
    "start": "1038799",
    "end": "1041918"
  },
  {
    "text": "of extra things are spinning up there",
    "start": "1041919",
    "end": "1043438"
  },
  {
    "text": "and also the the timing is nudging the",
    "start": "1043439",
    "end": "1045280"
  },
  {
    "text": "window a little bit",
    "start": "1045280",
    "end": "1046319"
  },
  {
    "text": "to display slightly range",
    "start": "1046319",
    "end": "1053840"
  },
  {
    "text": "we'll just now check the rollout is",
    "start": "1054799",
    "end": "1056480"
  },
  {
    "text": "working successfully here's a nice",
    "start": "1056480",
    "end": "1057840"
  },
  {
    "text": "command line",
    "start": "1057840",
    "end": "1058480"
  },
  {
    "text": "cheat we can use to do that everything",
    "start": "1058480",
    "end": "1060640"
  },
  {
    "text": "is successfully rolled out looking great",
    "start": "1060640",
    "end": "1062880"
  },
  {
    "text": "and we can also check the multi-cluster",
    "start": "1062880",
    "end": "1064640"
  },
  {
    "text": "aspect from the linkedin cli as well",
    "start": "1064640",
    "end": "1068559"
  },
  {
    "text": "i'll now just get all the linky d",
    "start": "1076000",
    "end": "1078400"
  },
  {
    "text": "multitasker config everything is looking",
    "start": "1078400",
    "end": "1080160"
  },
  {
    "text": "good everything's",
    "start": "1080160",
    "end": "1080960"
  },
  {
    "text": "up and running here and now i can link",
    "start": "1080960",
    "end": "1083039"
  },
  {
    "text": "the two clusters",
    "start": "1083039",
    "end": "1084400"
  },
  {
    "text": "with this command here you can see i use",
    "start": "1084400",
    "end": "1086559"
  },
  {
    "text": "the link d command here",
    "start": "1086559",
    "end": "1087919"
  },
  {
    "text": "uh from the context of the east linking",
    "start": "1087919",
    "end": "1090080"
  },
  {
    "text": "in the west and actually a cube cutting",
    "start": "1090080",
    "end": "1091840"
  },
  {
    "text": "apply",
    "start": "1091840",
    "end": "1092400"
  },
  {
    "text": "into the docker desktop cluster",
    "start": "1092400",
    "end": "1096080"
  },
  {
    "text": "that all looks good let's now run our",
    "start": "1096960",
    "end": "1099440"
  },
  {
    "text": "checks",
    "start": "1099440",
    "end": "1100720"
  },
  {
    "text": "once again context west check",
    "start": "1100720",
    "end": "1102880"
  },
  {
    "text": "multi-cluster",
    "start": "1102880",
    "end": "1105600"
  },
  {
    "text": "you'll notice here we now see the",
    "start": "1106559",
    "end": "1108480"
  },
  {
    "text": "cluster east gateway ambassador",
    "start": "1108480",
    "end": "1110160"
  },
  {
    "text": "ambassador that's our gke cluster",
    "start": "1110160",
    "end": "1112160"
  },
  {
    "text": "is now configured linker d running in",
    "start": "1112160",
    "end": "1113919"
  },
  {
    "text": "docker desktop in the west cluster",
    "start": "1113919",
    "end": "1115600"
  },
  {
    "text": "can now access the gateway of the",
    "start": "1115600",
    "end": "1118799"
  },
  {
    "text": "gke cluster now to make the display more",
    "start": "1118799",
    "end": "1122480"
  },
  {
    "text": "interesting",
    "start": "1122480",
    "end": "1123039"
  },
  {
    "text": "i'll stop all namespaces and we'll now",
    "start": "1123039",
    "end": "1126240"
  },
  {
    "text": "switch to the test namespace",
    "start": "1126240",
    "end": "1127840"
  },
  {
    "text": "as we set up some services to play",
    "start": "1127840",
    "end": "1129760"
  },
  {
    "text": "around with the service mirroring",
    "start": "1129760",
    "end": "1132799"
  },
  {
    "start": "1132000",
    "end": "1154000"
  },
  {
    "text": "i still can't believe how easy it is to",
    "start": "1132799",
    "end": "1134559"
  },
  {
    "text": "get ambassador set up so that it works",
    "start": "1134559",
    "end": "1136880"
  },
  {
    "text": "as a gateway for",
    "start": "1136880",
    "end": "1138480"
  },
  {
    "text": "multi-cluster it's pretty awesome thank",
    "start": "1138480",
    "end": "1140400"
  },
  {
    "text": "you daniel",
    "start": "1140400",
    "end": "1141600"
  },
  {
    "text": "now that we've got the gateway set up",
    "start": "1141600",
    "end": "1143919"
  },
  {
    "text": "we've figured out how to",
    "start": "1143919",
    "end": "1145840"
  },
  {
    "text": "do service discovery across clusters we",
    "start": "1145840",
    "end": "1148000"
  },
  {
    "text": "have showed how to get packets across",
    "start": "1148000",
    "end": "1150080"
  },
  {
    "text": "securely and now let's talk a little bit",
    "start": "1150080",
    "end": "1151919"
  },
  {
    "text": "about request routing and why that",
    "start": "1151919",
    "end": "1153440"
  },
  {
    "text": "matters",
    "start": "1153440",
    "end": "1155360"
  },
  {
    "start": "1154000",
    "end": "1171000"
  },
  {
    "text": "being able to address services in other",
    "start": "1155360",
    "end": "1157200"
  },
  {
    "text": "clusters is cool as you'll see here",
    "start": "1157200",
    "end": "1158880"
  },
  {
    "text": "we're",
    "start": "1158880",
    "end": "1159200"
  },
  {
    "text": "directly addressing pod info east but",
    "start": "1159200",
    "end": "1161120"
  },
  {
    "text": "you know what would be even cooler being",
    "start": "1161120",
    "end": "1162720"
  },
  {
    "text": "able to shift the traffic over",
    "start": "1162720",
    "end": "1164400"
  },
  {
    "text": "without needing to change code or even",
    "start": "1164400",
    "end": "1166480"
  },
  {
    "text": "restarting anything",
    "start": "1166480",
    "end": "1167840"
  },
  {
    "text": "isn't that the cloud native dream after",
    "start": "1167840",
    "end": "1170240"
  },
  {
    "text": "all",
    "start": "1170240",
    "end": "1171760"
  },
  {
    "start": "1171000",
    "end": "1238000"
  },
  {
    "text": "so far we have had a bit of a theme we",
    "start": "1171760",
    "end": "1174160"
  },
  {
    "text": "have built on top of kubernetes",
    "start": "1174160",
    "end": "1176080"
  },
  {
    "text": "primitives and only kubernetes",
    "start": "1176080",
    "end": "1177760"
  },
  {
    "text": "primitives",
    "start": "1177760",
    "end": "1178480"
  },
  {
    "text": "and the reason for that is that the",
    "start": "1178480",
    "end": "1180160"
  },
  {
    "text": "kubernetes ecosystem can compose and",
    "start": "1180160",
    "end": "1182160"
  },
  {
    "text": "build on top of those very easily",
    "start": "1182160",
    "end": "1184080"
  },
  {
    "text": "we've used services we've used endpoints",
    "start": "1184080",
    "end": "1186720"
  },
  {
    "text": "we've used load balancers and we've used",
    "start": "1186720",
    "end": "1188480"
  },
  {
    "text": "ingress controllers all of those are",
    "start": "1188480",
    "end": "1190240"
  },
  {
    "text": "standard off-the-shelf components this",
    "start": "1190240",
    "end": "1192720"
  },
  {
    "text": "is perhaps the first",
    "start": "1192720",
    "end": "1194320"
  },
  {
    "text": "non-standard component though it's part",
    "start": "1194320",
    "end": "1196480"
  },
  {
    "text": "of the service mesh interface spec",
    "start": "1196480",
    "end": "1199039"
  },
  {
    "text": "and what it does is allow us to split",
    "start": "1199039",
    "end": "1201200"
  },
  {
    "text": "traffic",
    "start": "1201200",
    "end": "1202960"
  },
  {
    "text": "and because all of our service mirroring",
    "start": "1202960",
    "end": "1205520"
  },
  {
    "text": "is using",
    "start": "1205520",
    "end": "1206080"
  },
  {
    "text": "services all it does is split traffic",
    "start": "1206080",
    "end": "1208480"
  },
  {
    "text": "between two services so",
    "start": "1208480",
    "end": "1209840"
  },
  {
    "text": "here in our spec we have said that any",
    "start": "1209840",
    "end": "1213200"
  },
  {
    "text": "traffic addressed to pod info should be",
    "start": "1213200",
    "end": "1215280"
  },
  {
    "text": "split",
    "start": "1215280",
    "end": "1216080"
  },
  {
    "text": "fifty percent to the pod info service on",
    "start": "1216080",
    "end": "1218400"
  },
  {
    "text": "the west cluster",
    "start": "1218400",
    "end": "1219600"
  },
  {
    "text": "because we're going to be talking about",
    "start": "1219600",
    "end": "1220640"
  },
  {
    "text": "the west cluster here and 50",
    "start": "1220640",
    "end": "1222720"
  },
  {
    "text": "to the pod info east service on the east",
    "start": "1222720",
    "end": "1225120"
  },
  {
    "text": "cluster",
    "start": "1225120",
    "end": "1226559"
  },
  {
    "text": "all you need to do is modify this",
    "start": "1226559",
    "end": "1228320"
  },
  {
    "text": "kubernetes resource and",
    "start": "1228320",
    "end": "1230000"
  },
  {
    "text": "all the traffic coming out of the",
    "start": "1230000",
    "end": "1232080"
  },
  {
    "text": "front-end",
    "start": "1232080",
    "end": "1233440"
  },
  {
    "text": "application addressed to pod info we'll",
    "start": "1233440",
    "end": "1235440"
  },
  {
    "text": "get split 50 50.",
    "start": "1235440",
    "end": "1238640"
  },
  {
    "text": "and this is how it ends up looking being",
    "start": "1238640",
    "end": "1241200"
  },
  {
    "text": "able to modify the eventual destination",
    "start": "1241200",
    "end": "1243520"
  },
  {
    "text": "of the traffic to pod info really opens",
    "start": "1243520",
    "end": "1245760"
  },
  {
    "text": "up a bunch of interesting possibilities",
    "start": "1245760",
    "end": "1247919"
  },
  {
    "text": "and because this is built on top of",
    "start": "1247919",
    "end": "1250159"
  },
  {
    "text": "kubernetes primitives it opens up the",
    "start": "1250159",
    "end": "1252320"
  },
  {
    "text": "world outside of service meshes and",
    "start": "1252320",
    "end": "1254799"
  },
  {
    "text": "api gateways daniel do you think you can",
    "start": "1254799",
    "end": "1259120"
  },
  {
    "text": "install the front end and pod info",
    "start": "1259120",
    "end": "1261360"
  },
  {
    "text": "services on your clusters",
    "start": "1261360",
    "end": "1263200"
  },
  {
    "text": "in west and east and show us how the",
    "start": "1263200",
    "end": "1266000"
  },
  {
    "text": "traffic",
    "start": "1266000",
    "end": "1266640"
  },
  {
    "text": "splitting actually works in the real",
    "start": "1266640",
    "end": "1268159"
  },
  {
    "text": "world what i'm doing is i'm just",
    "start": "1268159",
    "end": "1269679"
  },
  {
    "text": "watching in the name space of test this",
    "start": "1269679",
    "end": "1271360"
  },
  {
    "text": "is the east cluster the gke class at the",
    "start": "1271360",
    "end": "1272960"
  },
  {
    "text": "top here",
    "start": "1272960",
    "end": "1273679"
  },
  {
    "text": "and the bottom i'm again looking into",
    "start": "1273679",
    "end": "1275360"
  },
  {
    "text": "the service namespace",
    "start": "1275360",
    "end": "1277360"
  },
  {
    "text": "i'm looking for services in the",
    "start": "1277360",
    "end": "1278320"
  },
  {
    "text": "namespace test but this is in my docker",
    "start": "1278320",
    "end": "1280240"
  },
  {
    "text": "desktop",
    "start": "1280240",
    "end": "1281440"
  },
  {
    "text": "environment now i'll run some simple",
    "start": "1281440",
    "end": "1283840"
  },
  {
    "text": "script",
    "start": "1283840",
    "end": "1284640"
  },
  {
    "text": "cfd buoyant team to go to the",
    "start": "1284640",
    "end": "1288320"
  },
  {
    "text": "linkerd github download some some",
    "start": "1288320",
    "end": "1290799"
  },
  {
    "text": "services and example services some of",
    "start": "1290799",
    "end": "1292400"
  },
  {
    "text": "them based on pod info from stefan",
    "start": "1292400",
    "end": "1293840"
  },
  {
    "text": "pradon",
    "start": "1293840",
    "end": "1294400"
  },
  {
    "text": "and some other and simple apps as well",
    "start": "1294400",
    "end": "1296159"
  },
  {
    "text": "which we can use to demonstrate the",
    "start": "1296159",
    "end": "1297440"
  },
  {
    "text": "service mirroring between",
    "start": "1297440",
    "end": "1298720"
  },
  {
    "text": "docker desktop cluster and their remote",
    "start": "1298720",
    "end": "1301280"
  },
  {
    "text": "gke cluster",
    "start": "1301280",
    "end": "1302480"
  },
  {
    "text": "this can take a minute to install",
    "start": "1302480",
    "end": "1305840"
  },
  {
    "text": "with our deployment complete we can now",
    "start": "1310000",
    "end": "1311440"
  },
  {
    "text": "see in both clusters we have",
    "start": "1311440",
    "end": "1313120"
  },
  {
    "text": "the front end service and the pod info",
    "start": "1313120",
    "end": "1315440"
  },
  {
    "text": "service there",
    "start": "1315440",
    "end": "1316559"
  },
  {
    "text": "gke class at the top here and then the",
    "start": "1316559",
    "end": "1318799"
  },
  {
    "text": "docker desktop cluster in the bottom",
    "start": "1318799",
    "end": "1320480"
  },
  {
    "text": "here",
    "start": "1320480",
    "end": "1321280"
  },
  {
    "text": "let's now expose a very simple mapping",
    "start": "1321280",
    "end": "1324000"
  },
  {
    "text": "in the",
    "start": "1324000",
    "end": "1324480"
  },
  {
    "text": "ambassador gateway just to map the",
    "start": "1324480",
    "end": "1326799"
  },
  {
    "text": "prefix of slash i'm exposing docker",
    "start": "1326799",
    "end": "1328880"
  },
  {
    "text": "desktop on localhost",
    "start": "1328880",
    "end": "1330400"
  },
  {
    "text": "so localhost slash the root will now map",
    "start": "1330400",
    "end": "1333039"
  },
  {
    "text": "to the front end",
    "start": "1333039",
    "end": "1334080"
  },
  {
    "text": "service running in the test namespace on",
    "start": "1334080",
    "end": "1336000"
  },
  {
    "text": "port 8080.",
    "start": "1336000",
    "end": "1337760"
  },
  {
    "text": "let's do that now and now if i pop along",
    "start": "1337760",
    "end": "1340559"
  },
  {
    "text": "to the",
    "start": "1340559",
    "end": "1342559"
  },
  {
    "text": "our browser and do localhost",
    "start": "1342559",
    "end": "1345760"
  },
  {
    "text": "slash we are now looking at the",
    "start": "1345760",
    "end": "1349679"
  },
  {
    "text": "pod info or the front end and pod info",
    "start": "1349679",
    "end": "1351360"
  },
  {
    "text": "services running in my docker desktop",
    "start": "1351360",
    "end": "1353440"
  },
  {
    "text": "west local cluster all looks good now",
    "start": "1353440",
    "end": "1356559"
  },
  {
    "text": "let's do some service mirroring so i",
    "start": "1356559",
    "end": "1358080"
  },
  {
    "text": "clear my terminal",
    "start": "1358080",
    "end": "1359360"
  },
  {
    "text": "and i'll copy and paste in this command",
    "start": "1359360",
    "end": "1361360"
  },
  {
    "text": "here i'll use the linkid multi-cluster",
    "start": "1361360",
    "end": "1363760"
  },
  {
    "text": "export service",
    "start": "1363760",
    "end": "1364880"
  },
  {
    "text": "to add some annotations to my services",
    "start": "1364880",
    "end": "1367440"
  },
  {
    "text": "you can see i'm configuring the gateway",
    "start": "1367440",
    "end": "1368880"
  },
  {
    "text": "names ambassador and the gateway",
    "start": "1368880",
    "end": "1370240"
  },
  {
    "text": "namespaces as ambassador 2",
    "start": "1370240",
    "end": "1371919"
  },
  {
    "text": "this overriding the defaults of the link",
    "start": "1371919",
    "end": "1373679"
  },
  {
    "text": "d gateway but um that is nice and",
    "start": "1373679",
    "end": "1375520"
  },
  {
    "text": "straightforward hopefully",
    "start": "1375520",
    "end": "1376720"
  },
  {
    "text": "and we should see in my docker desktop",
    "start": "1376720",
    "end": "1378880"
  },
  {
    "text": "cluster in the bottom right here",
    "start": "1378880",
    "end": "1380640"
  },
  {
    "text": "we've now got a service name pod info",
    "start": "1380640",
    "end": "1383280"
  },
  {
    "text": "east",
    "start": "1383280",
    "end": "1384240"
  },
  {
    "text": "this is effectively a mirror of the pod",
    "start": "1384240",
    "end": "1386559"
  },
  {
    "text": "info running",
    "start": "1386559",
    "end": "1387280"
  },
  {
    "text": "remotely in the east cluster in gke if",
    "start": "1387280",
    "end": "1389840"
  },
  {
    "text": "we want more info on that i can run a",
    "start": "1389840",
    "end": "1391280"
  },
  {
    "text": "command here",
    "start": "1391280",
    "end": "1392320"
  },
  {
    "text": "i can basically attempt to get the",
    "start": "1392320",
    "end": "1393919"
  },
  {
    "text": "endpoints for the pod info east running",
    "start": "1393919",
    "end": "1395919"
  },
  {
    "text": "in my",
    "start": "1395919",
    "end": "1396480"
  },
  {
    "text": "docker desktop cluster and i can also",
    "start": "1396480",
    "end": "1398480"
  },
  {
    "text": "get the ambassador",
    "start": "1398480",
    "end": "1399679"
  },
  {
    "text": "at global loca a global low balancer ip",
    "start": "1399679",
    "end": "1402400"
  },
  {
    "text": "address as well",
    "start": "1402400",
    "end": "1403360"
  },
  {
    "text": "and compare them and there you go you",
    "start": "1403360",
    "end": "1405039"
  },
  {
    "text": "can see that the west",
    "start": "1405039",
    "end": "1407360"
  },
  {
    "text": "pod info east service endpoint ip",
    "start": "1407360",
    "end": "1411200"
  },
  {
    "text": "is equal to the gateway ip in our east",
    "start": "1411200",
    "end": "1414320"
  },
  {
    "text": "cluster",
    "start": "1414320",
    "end": "1415039"
  },
  {
    "text": "so basically the docker desktop pod info",
    "start": "1415039",
    "end": "1418080"
  },
  {
    "text": "east service mirror",
    "start": "1418080",
    "end": "1419200"
  },
  {
    "text": "is pointing at the gateway of the gke",
    "start": "1419200",
    "end": "1422400"
  },
  {
    "text": "cluster the east cluster",
    "start": "1422400",
    "end": "1424320"
  },
  {
    "text": "now we're running some traffic",
    "start": "1424320",
    "end": "1425360"
  },
  {
    "text": "generation in the back end as part of",
    "start": "1425360",
    "end": "1426960"
  },
  {
    "text": "the demo",
    "start": "1426960",
    "end": "1427520"
  },
  {
    "text": "so you can do all the cool regular stuff",
    "start": "1427520",
    "end": "1429120"
  },
  {
    "text": "you can with link d you can get your",
    "start": "1429120",
    "end": "1430799"
  },
  {
    "text": "stats to see what kind of um",
    "start": "1430799",
    "end": "1432799"
  },
  {
    "text": "latency and requests are going through",
    "start": "1432799",
    "end": "1435120"
  },
  {
    "text": "you can also look at the actual",
    "start": "1435120",
    "end": "1436880"
  },
  {
    "text": "um you can do a tap and look at the",
    "start": "1436880",
    "end": "1438320"
  },
  {
    "text": "traffic too which is quite nice you can",
    "start": "1438320",
    "end": "1439919"
  },
  {
    "text": "see here also",
    "start": "1439919",
    "end": "1440960"
  },
  {
    "text": "i'll just pause this second tls true",
    "start": "1440960",
    "end": "1443600"
  },
  {
    "text": "although ambassadors are not running",
    "start": "1443600",
    "end": "1445360"
  },
  {
    "text": "tls exposed in this tour example because",
    "start": "1445360",
    "end": "1447520"
  },
  {
    "text": "we've got our shared",
    "start": "1447520",
    "end": "1448559"
  },
  {
    "text": "trust anchor we're of course encrypting",
    "start": "1448559",
    "end": "1450640"
  },
  {
    "text": "traffic between the clusters courtesy of",
    "start": "1450640",
    "end": "1452400"
  },
  {
    "text": "linker d which is great too",
    "start": "1452400",
    "end": "1454240"
  },
  {
    "text": "linkedin command line is fantastic as is",
    "start": "1454240",
    "end": "1456000"
  },
  {
    "text": "the dashboard for debugging poking",
    "start": "1456000",
    "end": "1458000"
  },
  {
    "text": "around the services",
    "start": "1458000",
    "end": "1459120"
  },
  {
    "text": "frequently find myself in there looking",
    "start": "1459120",
    "end": "1461039"
  },
  {
    "text": "to make sure i've got my traffic config",
    "start": "1461039",
    "end": "1462720"
  },
  {
    "text": "all set up correctly",
    "start": "1462720",
    "end": "1464640"
  },
  {
    "text": "now i could simply expose the pod info",
    "start": "1464640",
    "end": "1467120"
  },
  {
    "text": "east",
    "start": "1467120",
    "end": "1467840"
  },
  {
    "text": "via my west gateway by my west",
    "start": "1467840",
    "end": "1470080"
  },
  {
    "text": "ambassador but make it more interesting",
    "start": "1470080",
    "end": "1471840"
  },
  {
    "text": "and we're going to be using the",
    "start": "1471840",
    "end": "1473200"
  },
  {
    "text": "smi the service mesh interface config to",
    "start": "1473200",
    "end": "1476640"
  },
  {
    "text": "do some traffic splits so if you can see",
    "start": "1476640",
    "end": "1478320"
  },
  {
    "text": "here i'm going to apply in my docker",
    "start": "1478320",
    "end": "1480000"
  },
  {
    "text": "desktop cluster",
    "start": "1480000",
    "end": "1481039"
  },
  {
    "text": "a traffic split on pod info across the",
    "start": "1481039",
    "end": "1483760"
  },
  {
    "text": "pod info that's running in the docker",
    "start": "1483760",
    "end": "1485360"
  },
  {
    "text": "desktop west cluster",
    "start": "1485360",
    "end": "1486960"
  },
  {
    "text": "and i'm going to also split 50 50 to the",
    "start": "1486960",
    "end": "1489520"
  },
  {
    "text": "pod info east service and that is going",
    "start": "1489520",
    "end": "1491360"
  },
  {
    "text": "to mirror into the",
    "start": "1491360",
    "end": "1492720"
  },
  {
    "text": "east based the gke based pod in pod info",
    "start": "1492720",
    "end": "1495600"
  },
  {
    "text": "service",
    "start": "1495600",
    "end": "1496320"
  },
  {
    "text": "let's apply this now all looks good",
    "start": "1496320",
    "end": "1499440"
  },
  {
    "text": "if i pop back to my browser and do a",
    "start": "1499440",
    "end": "1502159"
  },
  {
    "text": "refresh",
    "start": "1502159",
    "end": "1502880"
  },
  {
    "text": "oh we're already seeing east perfect",
    "start": "1502880",
    "end": "1506559"
  },
  {
    "text": "and there we go with some west we have",
    "start": "1506720",
    "end": "1509440"
  },
  {
    "text": "lucy some east",
    "start": "1509440",
    "end": "1510240"
  },
  {
    "text": "looks good how cool is that we've now",
    "start": "1510240",
    "end": "1513440"
  },
  {
    "start": "1511000",
    "end": "1545000"
  },
  {
    "text": "gone through",
    "start": "1513440",
    "end": "1514000"
  },
  {
    "text": "getting multi-cluster set up the easy",
    "start": "1514000",
    "end": "1516000"
  },
  {
    "text": "way and uh",
    "start": "1516000",
    "end": "1517919"
  },
  {
    "text": "that's pretty much it we've shown what",
    "start": "1517919",
    "end": "1519760"
  },
  {
    "text": "you need to do to get service discovery",
    "start": "1519760",
    "end": "1521360"
  },
  {
    "text": "so that you can see",
    "start": "1521360",
    "end": "1522720"
  },
  {
    "text": "services from one cluster in another",
    "start": "1522720",
    "end": "1525200"
  },
  {
    "text": "we've outlined what it takes to get",
    "start": "1525200",
    "end": "1526799"
  },
  {
    "text": "cross-cluster access and make it secure",
    "start": "1526799",
    "end": "1528880"
  },
  {
    "text": "and we've shown everything you can use",
    "start": "1528880",
    "end": "1530720"
  },
  {
    "text": "to do request routing",
    "start": "1530720",
    "end": "1532320"
  },
  {
    "text": "so the most important of step of all is",
    "start": "1532320",
    "end": "1535200"
  },
  {
    "text": "right now",
    "start": "1535200",
    "end": "1535919"
  },
  {
    "text": "profit where we set back sit back in our",
    "start": "1535919",
    "end": "1538640"
  },
  {
    "text": "chairs",
    "start": "1538640",
    "end": "1539200"
  },
  {
    "text": "and talk about all of the amazing things",
    "start": "1539200",
    "end": "1542000"
  },
  {
    "text": "that we've enabled with this",
    "start": "1542000",
    "end": "1544159"
  },
  {
    "text": "so what have we enabled well one of the",
    "start": "1544159",
    "end": "1547279"
  },
  {
    "start": "1545000",
    "end": "1578000"
  },
  {
    "text": "most interesting use cases for me",
    "start": "1547279",
    "end": "1548960"
  },
  {
    "text": "is cluster isolation imagine that you're",
    "start": "1548960",
    "end": "1551520"
  },
  {
    "text": "managing",
    "start": "1551520",
    "end": "1552640"
  },
  {
    "text": "credit card numbers and that's a",
    "start": "1552640",
    "end": "1554320"
  },
  {
    "text": "compliant environment",
    "start": "1554320",
    "end": "1555679"
  },
  {
    "text": "that you need to have audited instead of",
    "start": "1555679",
    "end": "1558640"
  },
  {
    "text": "having one big kubernetes cluster that",
    "start": "1558640",
    "end": "1560480"
  },
  {
    "text": "has",
    "start": "1560480",
    "end": "1560880"
  },
  {
    "text": "everything in it you now can go and",
    "start": "1560880",
    "end": "1562480"
  },
  {
    "text": "stick that into a very small cluster",
    "start": "1562480",
    "end": "1564880"
  },
  {
    "text": "and make your auditor love you because",
    "start": "1564880",
    "end": "1567760"
  },
  {
    "text": "they have a smaller surface area to",
    "start": "1567760",
    "end": "1569360"
  },
  {
    "text": "check now you've got an insecure cluster",
    "start": "1569360",
    "end": "1571120"
  },
  {
    "text": "that you can open up access to the rest",
    "start": "1571120",
    "end": "1572960"
  },
  {
    "text": "of the company on",
    "start": "1572960",
    "end": "1574000"
  },
  {
    "text": "and you don't need to go and put some",
    "start": "1574000",
    "end": "1575360"
  },
  {
    "text": "crazy policies in place",
    "start": "1575360",
    "end": "1577840"
  },
  {
    "text": "another use case for this is disaster",
    "start": "1577840",
    "end": "1580240"
  },
  {
    "start": "1578000",
    "end": "1606000"
  },
  {
    "text": "recovery",
    "start": "1580240",
    "end": "1580880"
  },
  {
    "text": "imagine a very important service failing",
    "start": "1580880",
    "end": "1583919"
  },
  {
    "text": "the front end can now get automatically",
    "start": "1583919",
    "end": "1585760"
  },
  {
    "text": "redirected to your backup cluster",
    "start": "1585760",
    "end": "1587440"
  },
  {
    "text": "or perhaps more interesting the",
    "start": "1587440",
    "end": "1591520"
  },
  {
    "text": "backup cluster can be tested with real",
    "start": "1591520",
    "end": "1594000"
  },
  {
    "text": "traffic",
    "start": "1594000",
    "end": "1595360"
  },
  {
    "text": "during normal operation so instead of",
    "start": "1595360",
    "end": "1597200"
  },
  {
    "text": "having to hope",
    "start": "1597200",
    "end": "1598559"
  },
  {
    "text": "and pray that your backup cluster is",
    "start": "1598559",
    "end": "1600000"
  },
  {
    "text": "going to work you can go and test your",
    "start": "1600000",
    "end": "1601600"
  },
  {
    "text": "disaster recovery during the day at any",
    "start": "1601600",
    "end": "1603440"
  },
  {
    "text": "time that you want",
    "start": "1603440",
    "end": "1604960"
  },
  {
    "text": "perhaps the most exciting use case for",
    "start": "1604960",
    "end": "1607840"
  },
  {
    "start": "1606000",
    "end": "1648000"
  },
  {
    "text": "me though",
    "start": "1607840",
    "end": "1608400"
  },
  {
    "text": "is development i know we're virtual so i",
    "start": "1608400",
    "end": "1611039"
  },
  {
    "text": "can't see anybody's",
    "start": "1611039",
    "end": "1612000"
  },
  {
    "text": "hands raised but i'm going to raise my",
    "start": "1612000",
    "end": "1613440"
  },
  {
    "text": "hand how many of us have",
    "start": "1613440",
    "end": "1616000"
  },
  {
    "text": "worked on microservices and had it get",
    "start": "1616000",
    "end": "1618000"
  },
  {
    "text": "to the point where it doesn't fit on",
    "start": "1618000",
    "end": "1619360"
  },
  {
    "text": "your laptop anymore",
    "start": "1619360",
    "end": "1620799"
  },
  {
    "text": "i sure have in fact i hate it even more",
    "start": "1620799",
    "end": "1623840"
  },
  {
    "text": "if it fits",
    "start": "1623840",
    "end": "1624880"
  },
  {
    "text": "it slows my laptop down and it's a pain",
    "start": "1624880",
    "end": "1627279"
  },
  {
    "text": "in the butt to use",
    "start": "1627279",
    "end": "1628720"
  },
  {
    "text": "you can use this multi-cluster to go",
    "start": "1628720",
    "end": "1630159"
  },
  {
    "text": "have a shared cluster now so any",
    "start": "1630159",
    "end": "1631760"
  },
  {
    "text": "services you're not",
    "start": "1631760",
    "end": "1632720"
  },
  {
    "text": "actively working on just go use them in",
    "start": "1632720",
    "end": "1634720"
  },
  {
    "text": "a remote shared cluster and you can work",
    "start": "1634720",
    "end": "1636799"
  },
  {
    "text": "on",
    "start": "1636799",
    "end": "1637520"
  },
  {
    "text": "your service locally and that's pretty",
    "start": "1637520",
    "end": "1640159"
  },
  {
    "text": "much all you need",
    "start": "1640159",
    "end": "1642159"
  },
  {
    "text": "so that's everything that we've got for",
    "start": "1642159",
    "end": "1643760"
  },
  {
    "text": "multi-cluster uh just a couple",
    "start": "1643760",
    "end": "1645840"
  },
  {
    "text": "more slides here to talk about first off",
    "start": "1645840",
    "end": "1648559"
  },
  {
    "start": "1648000",
    "end": "1671000"
  },
  {
    "text": "i'd like to",
    "start": "1648559",
    "end": "1649360"
  },
  {
    "text": "introduce the linker d community anchor",
    "start": "1649360",
    "end": "1651279"
  },
  {
    "text": "program",
    "start": "1651279",
    "end": "1652880"
  },
  {
    "text": "we really like to get the community",
    "start": "1652880",
    "end": "1654640"
  },
  {
    "text": "involved and especially if you're using",
    "start": "1654640",
    "end": "1656960"
  },
  {
    "text": "ambassador in linkerie we would love to",
    "start": "1656960",
    "end": "1658799"
  },
  {
    "text": "know about it",
    "start": "1658799",
    "end": "1659760"
  },
  {
    "text": "so jump onto that link down at the",
    "start": "1659760",
    "end": "1661520"
  },
  {
    "text": "bottom of the slide if you're interested",
    "start": "1661520",
    "end": "1663200"
  },
  {
    "text": "in",
    "start": "1663200",
    "end": "1664880"
  },
  {
    "text": "becoming a cloud native expert and",
    "start": "1664880",
    "end": "1667760"
  },
  {
    "text": "getting a little bit of help from us",
    "start": "1667760",
    "end": "1669279"
  },
  {
    "text": "to tell your story also",
    "start": "1669279",
    "end": "1672799"
  },
  {
    "start": "1671000",
    "end": "1705000"
  },
  {
    "text": "join both of our communities i've got",
    "start": "1672799",
    "end": "1675200"
  },
  {
    "text": "links to our github",
    "start": "1675200",
    "end": "1676480"
  },
  {
    "text": "and slack accounts daniel and i both",
    "start": "1676480",
    "end": "1679679"
  },
  {
    "text": "are slack junkies and are sitting around",
    "start": "1679679",
    "end": "1682720"
  },
  {
    "text": "waiting for your questions with",
    "start": "1682720",
    "end": "1684399"
  },
  {
    "text": "baited breath so please dive into those",
    "start": "1684399",
    "end": "1687360"
  },
  {
    "text": "and then finally",
    "start": "1687360",
    "end": "1689039"
  },
  {
    "text": "here are links to everything that we've",
    "start": "1689039",
    "end": "1691440"
  },
  {
    "text": "gone through",
    "start": "1691440",
    "end": "1692159"
  },
  {
    "text": "so far today i would really love to see",
    "start": "1692159",
    "end": "1695520"
  },
  {
    "text": "everyone",
    "start": "1695520",
    "end": "1696000"
  },
  {
    "text": "here go through the tutorials deep dives",
    "start": "1696000",
    "end": "1698720"
  },
  {
    "text": "and",
    "start": "1698720",
    "end": "1699360"
  },
  {
    "text": "get up and running with multi-cluster on",
    "start": "1699360",
    "end": "1701600"
  },
  {
    "text": "your own clusters",
    "start": "1701600",
    "end": "1703039"
  },
  {
    "text": "thank you so much and have a great rest",
    "start": "1703039",
    "end": "1704960"
  },
  {
    "text": "of your kubecon",
    "start": "1704960",
    "end": "1707600"
  }
]