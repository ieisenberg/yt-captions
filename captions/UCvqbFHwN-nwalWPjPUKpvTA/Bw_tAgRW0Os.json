[
  {
    "text": "hello everyone welcome to a talk on",
    "start": "80",
    "end": "2080"
  },
  {
    "text": "demystifying Summits for monitoring and",
    "start": "2080",
    "end": "4279"
  },
  {
    "text": "debugging on Windows containers my name",
    "start": "4279",
    "end": "6680"
  },
  {
    "text": "is Mani Kar I a software engineer at red",
    "start": "6680",
    "end": "9320"
  },
  {
    "text": "hat and I have my co-speaker rtia Gupta",
    "start": "9320",
    "end": "12160"
  },
  {
    "text": "with us today uh both of us are an",
    "start": "12160",
    "end": "14920"
  },
  {
    "text": "active member of the kubernetes Sig",
    "start": "14920",
    "end": "17000"
  },
  {
    "text": "Windows community so you can find us",
    "start": "17000",
    "end": "19680"
  },
  {
    "text": "there so we are going to cover the",
    "start": "19680",
    "end": "22359"
  },
  {
    "text": "agenda here I hope you were able to take",
    "start": "22359",
    "end": "24199"
  },
  {
    "text": "a peek at the abstract but if not uh we",
    "start": "24199",
    "end": "26519"
  },
  {
    "text": "are going to answer some questions",
    "start": "26519",
    "end": "29039"
  },
  {
    "text": "firstly why Windows containers how to",
    "start": "29039",
    "end": "31240"
  },
  {
    "text": "set up Windows nodes on kubernetes",
    "start": "31240",
    "end": "33760"
  },
  {
    "text": "introduction to host process containers",
    "start": "33760",
    "end": "35800"
  },
  {
    "text": "and what they are uh monitoring Windows",
    "start": "35800",
    "end": "38200"
  },
  {
    "text": "nodes and containers debugging Windows",
    "start": "38200",
    "end": "40719"
  },
  {
    "text": "nodes then we are also going to move on",
    "start": "40719",
    "end": "42719"
  },
  {
    "text": "to a demo where we are going to do some",
    "start": "42719",
    "end": "44719"
  },
  {
    "text": "debugging on a Windows node that we have",
    "start": "44719",
    "end": "46600"
  },
  {
    "text": "in a cluster and we are going to see",
    "start": "46600",
    "end": "48879"
  },
  {
    "text": "some container and node metrics on a",
    "start": "48879",
    "end": "50760"
  },
  {
    "text": "grapher dashboard we will also have some",
    "start": "50760",
    "end": "53160"
  },
  {
    "text": "time for Q&A so keep your questions for",
    "start": "53160",
    "end": "55559"
  },
  {
    "text": "that uh let's start with answering the",
    "start": "55559",
    "end": "58559"
  },
  {
    "text": "first question why windows can",
    "start": "58559",
    "end": "60160"
  },
  {
    "text": "containers many Enterprise applications",
    "start": "60160",
    "end": "62519"
  },
  {
    "text": "have been built for Windows OS you may",
    "start": "62519",
    "end": "64400"
  },
  {
    "text": "be aware of many Legacy applications",
    "start": "64400",
    "end": "66240"
  },
  {
    "text": "that we use in our day-to-day lives and",
    "start": "66240",
    "end": "68600"
  },
  {
    "text": "behind the scenes they use net and other",
    "start": "68600",
    "end": "70799"
  },
  {
    "text": "windows specific apis if you want to run",
    "start": "70799",
    "end": "73720"
  },
  {
    "text": "these applications in a containerized",
    "start": "73720",
    "end": "75560"
  },
  {
    "text": "manner and take advantage of the",
    "start": "75560",
    "end": "77400"
  },
  {
    "text": "kubernetes orchestration capabilities we",
    "start": "77400",
    "end": "79439"
  },
  {
    "text": "need Windows containers Windows",
    "start": "79439",
    "end": "81520"
  },
  {
    "text": "containers allow these applications to",
    "start": "81520",
    "end": "83400"
  },
  {
    "text": "be run in a containerized manner without",
    "start": "83400",
    "end": "85200"
  },
  {
    "text": "needing a complete reite for Linux a",
    "start": "85200",
    "end": "88000"
  },
  {
    "text": "point to note here is that Windows",
    "start": "88000",
    "end": "89439"
  },
  {
    "text": "containers are usually tightly coupled",
    "start": "89439",
    "end": "91240"
  },
  {
    "text": "to the OS so you would have a Windows",
    "start": "91240",
    "end": "93960"
  },
  {
    "text": "Server 2022 container that can only be",
    "start": "93960",
    "end": "96040"
  },
  {
    "text": "run on a Windows Server 2022 host for",
    "start": "96040",
    "end": "98840"
  },
  {
    "text": "example so once we have the windows",
    "start": "98840",
    "end": "101200"
  },
  {
    "text": "containers where can we run this uh we",
    "start": "101200",
    "end": "103520"
  },
  {
    "text": "need Windows nodes for that so let's",
    "start": "103520",
    "end": "106840"
  },
  {
    "text": "move on to discuss where we can bring up",
    "start": "106840",
    "end": "109719"
  },
  {
    "text": "Windows nodes so if you have a Windows",
    "start": "109719",
    "end": "112920"
  },
  {
    "text": "VM which is in a cloud that you use or",
    "start": "112920",
    "end": "116079"
  },
  {
    "text": "you have a instance that is on premise",
    "start": "116079",
    "end": "118680"
  },
  {
    "text": "you can use those to join as a",
    "start": "118680",
    "end": "121680"
  },
  {
    "text": "kubernetes node to the kubernetes",
    "start": "121680",
    "end": "123360"
  },
  {
    "text": "cluster that you're using uh we have",
    "start": "123360",
    "end": "125880"
  },
  {
    "text": "quite a few ways of doing that uh the",
    "start": "125880",
    "end": "128080"
  },
  {
    "text": "first one is capy which is a cluster API",
    "start": "128080",
    "end": "130280"
  },
  {
    "text": "provider then we have Cube ADM which you",
    "start": "130280",
    "end": "132760"
  },
  {
    "text": "may be more familiar with if you are",
    "start": "132760",
    "end": "134239"
  },
  {
    "text": "bringing up instances and clusters on",
    "start": "134239",
    "end": "136239"
  },
  {
    "text": "your local machine we also have a miniq",
    "start": "136239",
    "end": "138760"
  },
  {
    "text": "prototype that has been developed by",
    "start": "138760",
    "end": "140400"
  },
  {
    "text": "someone from the Sig window Community if",
    "start": "140400",
    "end": "142440"
  },
  {
    "text": "you have issues or questions running any",
    "start": "142440",
    "end": "145440"
  },
  {
    "text": "of these you can reach out to us on the",
    "start": "145440",
    "end": "147440"
  },
  {
    "text": "read me that I have wanted to uh there",
    "start": "147440",
    "end": "149280"
  },
  {
    "text": "are resources for the slack Channel as",
    "start": "149280",
    "end": "151720"
  },
  {
    "text": "well and finally if you're interested in",
    "start": "151720",
    "end": "154360"
  },
  {
    "text": "using a manage kubernetes service",
    "start": "154360",
    "end": "156000"
  },
  {
    "text": "because you're running a production",
    "start": "156000",
    "end": "157360"
  },
  {
    "text": "workload and you need someone to take",
    "start": "157360",
    "end": "159239"
  },
  {
    "text": "care of your workloads you have open",
    "start": "159239",
    "end": "161400"
  },
  {
    "text": "shift AKs and eks which are going to",
    "start": "161400",
    "end": "163760"
  },
  {
    "text": "help you to join your instances to the",
    "start": "163760",
    "end": "165519"
  },
  {
    "text": "node uh as a node to your kubernetes",
    "start": "165519",
    "end": "168040"
  },
  {
    "text": "cluster",
    "start": "168040",
    "end": "170440"
  },
  {
    "text": "automatically so let's move on to",
    "start": "170440",
    "end": "172959"
  },
  {
    "text": "discuss the gaps okay so once we have",
    "start": "172959",
    "end": "175599"
  },
  {
    "text": "the windows containers there are some",
    "start": "175599",
    "end": "177360"
  },
  {
    "text": "gaps in our kubernetes ecosystem that",
    "start": "177360",
    "end": "179000"
  },
  {
    "text": "we're trying to bridge",
    "start": "179000",
    "end": "181040"
  },
  {
    "text": "you would know of many solution",
    "start": "181040",
    "end": "182400"
  },
  {
    "text": "architects who specialize in Linux",
    "start": "182400",
    "end": "184319"
  },
  {
    "text": "containerization right uh they're",
    "start": "184319",
    "end": "186560"
  },
  {
    "text": "helping the organizations through rep",
    "start": "186560",
    "end": "188080"
  },
  {
    "text": "platform Legacy Linux applications and",
    "start": "188080",
    "end": "189959"
  },
  {
    "text": "move them to Cloud but do we know of any",
    "start": "189959",
    "end": "192440"
  },
  {
    "text": "architects who would do it for Windows",
    "start": "192440",
    "end": "194519"
  },
  {
    "text": "maybe not lack of expertise is a problem",
    "start": "194519",
    "end": "197080"
  },
  {
    "text": "in this field second data for Windows on",
    "start": "197080",
    "end": "199599"
  },
  {
    "text": "monitoring is scarce so we cannot create",
    "start": "199599",
    "end": "202720"
  },
  {
    "text": "a unified monitoring interface for both",
    "start": "202720",
    "end": "204879"
  },
  {
    "text": "windows and Linux if you don't have this",
    "start": "204879",
    "end": "207879"
  },
  {
    "text": "knowledge Windows exporter which is uh",
    "start": "207879",
    "end": "211159"
  },
  {
    "text": "something that we're going to see in a",
    "start": "211159",
    "end": "212400"
  },
  {
    "text": "bit is also not an official exporter",
    "start": "212400",
    "end": "214280"
  },
  {
    "text": "that is maintained by Prometheus but it",
    "start": "214280",
    "end": "215799"
  },
  {
    "text": "is created and maintained by the",
    "start": "215799",
    "end": "217400"
  },
  {
    "text": "Prometheus community so we constantly",
    "start": "217400",
    "end": "219480"
  },
  {
    "text": "need to improve on that to give you an",
    "start": "219480",
    "end": "222040"
  },
  {
    "text": "example of this Gap in the open shift",
    "start": "222040",
    "end": "224040"
  },
  {
    "text": "console that I work on and the team that",
    "start": "224040",
    "end": "225560"
  },
  {
    "text": "I work on we had the Linux container",
    "start": "225560",
    "end": "228519"
  },
  {
    "text": "metrics uh specifically hardcoded and uh",
    "start": "228519",
    "end": "232599"
  },
  {
    "text": "for the Linux uh console that we have",
    "start": "232599",
    "end": "235120"
  },
  {
    "text": "but uh when we tried to introduce the",
    "start": "235120",
    "end": "236959"
  },
  {
    "text": "windows node we had to create a",
    "start": "236959",
    "end": "238360"
  },
  {
    "text": "promethus rules and and service monitors",
    "start": "238360",
    "end": "240799"
  },
  {
    "text": "which which can map this Windows metric",
    "start": "240799",
    "end": "242879"
  },
  {
    "text": "names to the Linux counterpart so we can",
    "start": "242879",
    "end": "245159"
  },
  {
    "text": "have a unified interface for our",
    "start": "245159",
    "end": "248079"
  },
  {
    "text": "customers to put it in a nutshell",
    "start": "248079",
    "end": "250360"
  },
  {
    "text": "Windows applications are almost always",
    "start": "250360",
    "end": "252799"
  },
  {
    "text": "an afterthought but we think it doesn't",
    "start": "252799",
    "end": "255280"
  },
  {
    "text": "need to be like this and windows",
    "start": "255280",
    "end": "257199"
  },
  {
    "text": "applications shouldn't be left behind in",
    "start": "257199",
    "end": "258919"
  },
  {
    "text": "the modernization",
    "start": "258919",
    "end": "260320"
  },
  {
    "text": "journey let's go over some features now",
    "start": "260320",
    "end": "262919"
  },
  {
    "text": "that are added by the Sig Windows",
    "start": "262919",
    "end": "264320"
  },
  {
    "text": "community and how they're helping",
    "start": "264320",
    "end": "267160"
  },
  {
    "text": "us so first is the Windows host process",
    "start": "267160",
    "end": "269880"
  },
  {
    "text": "containers host process containers",
    "start": "269880",
    "end": "272160"
  },
  {
    "text": "specifically in the context of",
    "start": "272160",
    "end": "273400"
  },
  {
    "text": "kubernetes on windows are containers",
    "start": "273400",
    "end": "275320"
  },
  {
    "text": "that operate as normal processes but run",
    "start": "275320",
    "end": "277880"
  },
  {
    "text": "on the host Mach host machine and they",
    "start": "277880",
    "end": "280400"
  },
  {
    "text": "have access to the host network uh",
    "start": "280400",
    "end": "283360"
  },
  {
    "text": "storage and devices this concept is",
    "start": "283360",
    "end": "286160"
  },
  {
    "text": "pretty similar to the Linux privilege",
    "start": "286160",
    "end": "287800"
  },
  {
    "text": "containers if you are used to using",
    "start": "287800",
    "end": "290240"
  },
  {
    "text": "them but why are they important so you",
    "start": "290240",
    "end": "293320"
  },
  {
    "text": "see before we had this feature in place",
    "start": "293320",
    "end": "295919"
  },
  {
    "text": "services like cuet QBE proxy had to be",
    "start": "295919",
    "end": "298080"
  },
  {
    "text": "run as Windows services on the not",
    "start": "298080",
    "end": "299919"
  },
  {
    "text": "itself and had to be registered within",
    "start": "299919",
    "end": "302560"
  },
  {
    "text": "the windows service registry so it was",
    "start": "302560",
    "end": "304759"
  },
  {
    "text": "very difficult to run them with this",
    "start": "304759",
    "end": "306520"
  },
  {
    "text": "feature addition you have a base image",
    "start": "306520",
    "end": "308800"
  },
  {
    "text": "which is very lightweight and you can",
    "start": "308800",
    "end": "310720"
  },
  {
    "text": "use this image to build any service and",
    "start": "310720",
    "end": "312800"
  },
  {
    "text": "deploy it as a demon set port on the",
    "start": "312800",
    "end": "315240"
  },
  {
    "text": "Node directly so it doesn't need to be a",
    "start": "315240",
    "end": "316960"
  },
  {
    "text": "Windows service you would agree that",
    "start": "316960",
    "end": "319000"
  },
  {
    "text": "this process has made it come on par",
    "start": "319000",
    "end": "321039"
  },
  {
    "text": "with Linux and makes makes our life very",
    "start": "321039",
    "end": "324960"
  },
  {
    "text": "easy so let's go over some important",
    "start": "324960",
    "end": "329000"
  },
  {
    "text": "points I would we would need to uh learn",
    "start": "329000",
    "end": "331520"
  },
  {
    "text": "about monitoring uh we need this so we",
    "start": "331520",
    "end": "334560"
  },
  {
    "text": "can make informed decisions optimize",
    "start": "334560",
    "end": "336680"
  },
  {
    "text": "performance and strategically maintained",
    "start": "336680",
    "end": "338400"
  },
  {
    "text": "cost for our uh infrastructure workflow",
    "start": "338400",
    "end": "340919"
  },
  {
    "text": "to name a",
    "start": "340919",
    "end": "343199"
  },
  {
    "text": "few okay let's go over the Prometheus",
    "start": "343199",
    "end": "346160"
  },
  {
    "text": "architecture diagram many of you may be",
    "start": "346160",
    "end": "348400"
  },
  {
    "text": "familiar with this already but we have a",
    "start": "348400",
    "end": "351440"
  },
  {
    "text": "Prometheus server which is running on",
    "start": "351440",
    "end": "352960"
  },
  {
    "text": "the Node this would be a Windows node in",
    "start": "352960",
    "end": "354840"
  },
  {
    "text": "this case it is going to retrieve the",
    "start": "354840",
    "end": "357000"
  },
  {
    "text": "metrics uh this could be container",
    "start": "357000",
    "end": "359120"
  },
  {
    "text": "metrics and the node metrics it would be",
    "start": "359120",
    "end": "361520"
  },
  {
    "text": "cuet for collecting the node metric and",
    "start": "361520",
    "end": "364120"
  },
  {
    "text": "a container runtime interface like",
    "start": "364120",
    "end": "366000"
  },
  {
    "text": "container D for retrieving the container",
    "start": "366000",
    "end": "368680"
  },
  {
    "text": "metrics uh this is usually C advisor in",
    "start": "368680",
    "end": "371479"
  },
  {
    "text": "the case of Linux so there's only this",
    "start": "371479",
    "end": "373919"
  },
  {
    "text": "container metrics difference uh in the",
    "start": "373919",
    "end": "375720"
  },
  {
    "text": "architecture over here uh so these",
    "start": "375720",
    "end": "377919"
  },
  {
    "text": "metrics will be retrieved and stored in",
    "start": "377919",
    "end": "379919"
  },
  {
    "text": "a Time series database and be retrieved",
    "start": "379919",
    "end": "382639"
  },
  {
    "text": "by HTTP server you can use a promql",
    "start": "382639",
    "end": "385360"
  },
  {
    "text": "query language to visualize the metrics",
    "start": "385360",
    "end": "387599"
  },
  {
    "text": "and grafana or Prometheus",
    "start": "387599",
    "end": "390560"
  },
  {
    "text": "you can also uh put some thresholds and",
    "start": "390560",
    "end": "393479"
  },
  {
    "text": "push alerts using alert managers so this",
    "start": "393479",
    "end": "396840"
  },
  {
    "text": "comes in handy and finally because we",
    "start": "396840",
    "end": "399720"
  },
  {
    "text": "are uh collecting metrics from so many",
    "start": "399720",
    "end": "402120"
  },
  {
    "text": "different sources we need something that",
    "start": "402120",
    "end": "404039"
  },
  {
    "text": "will help Prometheus to understand them",
    "start": "404039",
    "end": "406319"
  },
  {
    "text": "in a format that it understands so we",
    "start": "406319",
    "end": "408280"
  },
  {
    "text": "are using Prometheus exporters for that",
    "start": "408280",
    "end": "411720"
  },
  {
    "text": "so these exporters are nothing but an",
    "start": "411720",
    "end": "413680"
  },
  {
    "text": "agent uh for Linux you may be familiar",
    "start": "413680",
    "end": "416520"
  },
  {
    "text": "with node exporter for Windows we have",
    "start": "416520",
    "end": "418319"
  },
  {
    "text": "Windows exporter",
    "start": "418319",
    "end": "421160"
  },
  {
    "text": "so let's go over the windows exporter a",
    "start": "421160",
    "end": "422919"
  },
  {
    "text": "little bit it is nothing but a",
    "start": "422919",
    "end": "424160"
  },
  {
    "text": "Prometheus exporter for Windows machines",
    "start": "424160",
    "end": "427039"
  },
  {
    "text": "and we have some collectors collectors",
    "start": "427039",
    "end": "428879"
  },
  {
    "text": "are nothing but a set of metrics that",
    "start": "428879",
    "end": "430599"
  },
  {
    "text": "you can use the collector that are",
    "start": "430599",
    "end": "432280"
  },
  {
    "text": "enabled by default are CPU memory and Os",
    "start": "432280",
    "end": "435759"
  },
  {
    "text": "this may be something that um may be",
    "start": "435759",
    "end": "437879"
  },
  {
    "text": "suitable for your use case but other",
    "start": "437879",
    "end": "439800"
  },
  {
    "text": "interesting collectors are container and",
    "start": "439800",
    "end": "441639"
  },
  {
    "text": "process and also some net collectors uh",
    "start": "441639",
    "end": "444680"
  },
  {
    "text": "you can enable them explicitly by giving",
    "start": "444680",
    "end": "446960"
  },
  {
    "text": "some command line arguments uh if you",
    "start": "446960",
    "end": "448919"
  },
  {
    "text": "need them",
    "start": "448919",
    "end": "451520"
  },
  {
    "text": "okay so this was all from the monitoring",
    "start": "451759",
    "end": "453960"
  },
  {
    "text": "side now I'll pass on the mic to rtia so",
    "start": "453960",
    "end": "456720"
  },
  {
    "text": "she can cover the debugging part for us",
    "start": "456720",
    "end": "459160"
  },
  {
    "text": "sure thank you Mani appreciate it now to",
    "start": "459160",
    "end": "462240"
  },
  {
    "text": "understand how does one debug a Windows",
    "start": "462240",
    "end": "464759"
  },
  {
    "text": "node we need to understand the",
    "start": "464759",
    "end": "466879"
  },
  {
    "text": "components that sit on a Windows node",
    "start": "466879",
    "end": "469639"
  },
  {
    "text": "Windows node in kubernetes is",
    "start": "469639",
    "end": "471280"
  },
  {
    "text": "responsible for running Windows",
    "start": "471280",
    "end": "472759"
  },
  {
    "text": "workloads and it houses several",
    "start": "472759",
    "end": "474680"
  },
  {
    "text": "components that enable container",
    "start": "474680",
    "end": "476599"
  },
  {
    "text": "orchestration a few things to note over",
    "start": "476599",
    "end": "478800"
  },
  {
    "text": "here you've got Windows Services which",
    "start": "478800",
    "end": "480520"
  },
  {
    "text": "sit on the Windows host kernel these",
    "start": "480520",
    "end": "483479"
  },
  {
    "text": "Services interact with services like",
    "start": "483479",
    "end": "486319"
  },
  {
    "text": "graph driver hns HCS HCS is kind of the",
    "start": "486319",
    "end": "491199"
  },
  {
    "text": "host compute system that enables",
    "start": "491199",
    "end": "494080"
  },
  {
    "text": "management of containers and um it",
    "start": "494080",
    "end": "497800"
  },
  {
    "text": "orchestrates the life cycle on the",
    "start": "497800",
    "end": "500479"
  },
  {
    "text": "Windows operating system hns is the host",
    "start": "500479",
    "end": "502919"
  },
  {
    "text": "network service and the host network",
    "start": "502919",
    "end": "505520"
  },
  {
    "text": "service is responsible for creation of",
    "start": "505520",
    "end": "507520"
  },
  {
    "text": "IP addresses for the containers alloc of",
    "start": "507520",
    "end": "509919"
  },
  {
    "text": "IP addresses to them um things like",
    "start": "509919",
    "end": "512399"
  },
  {
    "text": "creating the overlay Network so on and",
    "start": "512399",
    "end": "514440"
  },
  {
    "text": "so forth we also do notice that the cni",
    "start": "514440",
    "end": "518360"
  },
  {
    "text": "and HCS shim sit on top of that and they",
    "start": "518360",
    "end": "521800"
  },
  {
    "text": "help container D interact with the host",
    "start": "521800",
    "end": "525320"
  },
  {
    "text": "services on the Windows",
    "start": "525320",
    "end": "527959"
  },
  {
    "text": "host we also have cuet up there cuet is",
    "start": "527959",
    "end": "531480"
  },
  {
    "text": "one of the most important things on any",
    "start": "531480",
    "end": "533160"
  },
  {
    "text": "node you need to have cuz that's going",
    "start": "533160",
    "end": "534959"
  },
  {
    "text": "to help you register this node with",
    "start": "534959",
    "end": "537079"
  },
  {
    "text": "kubernetes and it's also going to keep a",
    "start": "537079",
    "end": "539200"
  },
  {
    "text": "track track of what containers are you",
    "start": "539200",
    "end": "540920"
  },
  {
    "text": "running what stage of life cycle they",
    "start": "540920",
    "end": "542839"
  },
  {
    "text": "are in um all of that now that we",
    "start": "542839",
    "end": "547079"
  },
  {
    "text": "understand the key components and how",
    "start": "547079",
    "end": "548600"
  },
  {
    "text": "they play with each other let's take a",
    "start": "548600",
    "end": "550600"
  },
  {
    "text": "look into the containers that are",
    "start": "550600",
    "end": "552839"
  },
  {
    "text": "supported in Windows and kubernetes we",
    "start": "552839",
    "end": "555120"
  },
  {
    "text": "have two types of containers the first",
    "start": "555120",
    "end": "556880"
  },
  {
    "text": "one is a process isolated container a",
    "start": "556880",
    "end": "559200"
  },
  {
    "text": "process isolated container is a",
    "start": "559200",
    "end": "561160"
  },
  {
    "text": "lightweight sandboxed user space that",
    "start": "561160",
    "end": "564839"
  },
  {
    "text": "runs on the host",
    "start": "564839",
    "end": "566600"
  },
  {
    "text": "kernel what we're more interested in",
    "start": "566600",
    "end": "568800"
  },
  {
    "text": "today is the host process container the",
    "start": "568800",
    "end": "570959"
  },
  {
    "text": "host process container is extremely",
    "start": "570959",
    "end": "573079"
  },
  {
    "text": "powerful cuz this container starts up as",
    "start": "573079",
    "end": "575240"
  },
  {
    "text": "a process on your host and could access",
    "start": "575240",
    "end": "578160"
  },
  {
    "text": "the host Network the volumes other",
    "start": "578160",
    "end": "581120"
  },
  {
    "text": "peripheries that have been collected to",
    "start": "581120",
    "end": "582800"
  },
  {
    "text": "your node um there are multiple uses of",
    "start": "582800",
    "end": "586480"
  },
  {
    "text": "a host process container and as man",
    "start": "586480",
    "end": "588720"
  },
  {
    "text": "talked about using them in monitoring we",
    "start": "588720",
    "end": "591000"
  },
  {
    "text": "can also use them to debug Windows noes",
    "start": "591000",
    "end": "594399"
  },
  {
    "text": "let's move on to try to understand how",
    "start": "594399",
    "end": "596000"
  },
  {
    "text": "can we use host process containers to",
    "start": "596000",
    "end": "598360"
  },
  {
    "text": "debug Windows notes",
    "start": "598360",
    "end": "601320"
  },
  {
    "text": "so if you've ever tried to debug a",
    "start": "601760",
    "end": "603600"
  },
  {
    "text": "Windows node historically we had the",
    "start": "603600",
    "end": "606320"
  },
  {
    "text": "struggle of either having to RDP onto",
    "start": "606320",
    "end": "608800"
  },
  {
    "text": "the windows node or doing a proxy jump",
    "start": "608800",
    "end": "611880"
  },
  {
    "text": "from the master node onto the worker",
    "start": "611880",
    "end": "614440"
  },
  {
    "text": "node just a bit of a hassle it's super",
    "start": "614440",
    "end": "617240"
  },
  {
    "text": "cumbersome copying files over bringing",
    "start": "617240",
    "end": "619480"
  },
  {
    "text": "it back and forth painful that's where",
    "start": "619480",
    "end": "622519"
  },
  {
    "text": "host process containers come in host",
    "start": "622519",
    "end": "624600"
  },
  {
    "text": "process containers are a simple oneline",
    "start": "624600",
    "end": "626760"
  },
  {
    "text": "solution which is streamline with with",
    "start": "626760",
    "end": "629480"
  },
  {
    "text": "Linux at par at the cube Kettle debug",
    "start": "629480",
    "end": "631800"
  },
  {
    "text": "node command you just type that in and",
    "start": "631800",
    "end": "634600"
  },
  {
    "text": "boom you're on the Node you can access",
    "start": "634600",
    "end": "636560"
  },
  {
    "text": "everything that's available to the node",
    "start": "636560",
    "end": "639120"
  },
  {
    "text": "the two main benefits of this is reduced",
    "start": "639120",
    "end": "641440"
  },
  {
    "text": "complexity and the second one is synergy",
    "start": "641440",
    "end": "644120"
  },
  {
    "text": "with kubernetes ecosystem it streamlines",
    "start": "644120",
    "end": "647120"
  },
  {
    "text": "the developer experience it's going to",
    "start": "647120",
    "end": "649079"
  },
  {
    "text": "be same on Windows as well on Linux",
    "start": "649079",
    "end": "651160"
  },
  {
    "text": "right now let's try to see this command",
    "start": "651160",
    "end": "654000"
  },
  {
    "text": "in",
    "start": "654000",
    "end": "655720"
  },
  {
    "text": "action so yeah as you take a look up",
    "start": "655720",
    "end": "658360"
  },
  {
    "text": "there you see that when you use the cube",
    "start": "658360",
    "end": "662360"
  },
  {
    "text": "Kettle node when worker debug command",
    "start": "662360",
    "end": "664360"
  },
  {
    "text": "two things to call out over here the",
    "start": "664360",
    "end": "666240"
  },
  {
    "text": "first thing is we're using The Host",
    "start": "666240",
    "end": "668360"
  },
  {
    "text": "Windows host process container base",
    "start": "668360",
    "end": "670399"
  },
  {
    "text": "image why is this important this is a",
    "start": "670399",
    "end": "673240"
  },
  {
    "text": "super lightweight image built by Sig",
    "start": "673240",
    "end": "675600"
  },
  {
    "text": "windows that you can use to get onto the",
    "start": "675600",
    "end": "678360"
  },
  {
    "text": "node and the reason this is useful is",
    "start": "678360",
    "end": "681519"
  },
  {
    "text": "it's roughly just about 6 to8 KB and has",
    "start": "681519",
    "end": "684959"
  },
  {
    "text": "a very small startup time if you've",
    "start": "684959",
    "end": "688279"
  },
  {
    "text": "worked with Windows containers you know",
    "start": "688279",
    "end": "690160"
  },
  {
    "text": "most of them are not the same they're",
    "start": "690160",
    "end": "692079"
  },
  {
    "text": "usually in the range of 200 MB Nano",
    "start": "692079",
    "end": "694480"
  },
  {
    "text": "servers the smallest we start with right",
    "start": "694480",
    "end": "697920"
  },
  {
    "text": "the second thing up there is the custom",
    "start": "697920",
    "end": "700519"
  },
  {
    "text": "um flag that we using and the custom",
    "start": "700519",
    "end": "702639"
  },
  {
    "text": "yaml that we use the custom yaml is what",
    "start": "702639",
    "end": "704959"
  },
  {
    "text": "tells the cube Kettle debug command that",
    "start": "704959",
    "end": "707800"
  },
  {
    "text": "this is a host process container we said",
    "start": "707800",
    "end": "709800"
  },
  {
    "text": "that in the windows options and it also",
    "start": "709800",
    "end": "712240"
  },
  {
    "text": "gives us flexibility to use the run as",
    "start": "712240",
    "end": "714880"
  },
  {
    "text": "username field to set how this container",
    "start": "714880",
    "end": "718120"
  },
  {
    "text": "starts up on your not node so you could",
    "start": "718120",
    "end": "720560"
  },
  {
    "text": "change that to anything you're",
    "start": "720560",
    "end": "722040"
  },
  {
    "text": "comfortable with and manage the level of",
    "start": "722040",
    "end": "724600"
  },
  {
    "text": "access this container has on your",
    "start": "724600",
    "end": "727639"
  },
  {
    "text": "host um wonderful resource on there is",
    "start": "727639",
    "end": "731079"
  },
  {
    "text": "the Windows host process container base",
    "start": "731079",
    "end": "733160"
  },
  {
    "text": "image repository that I've linked that",
    "start": "733160",
    "end": "736079"
  },
  {
    "text": "repository has a Docker file on how that",
    "start": "736079",
    "end": "738399"
  },
  {
    "text": "image is buil and how you can build it",
    "start": "738399",
    "end": "739920"
  },
  {
    "text": "for yourself or use that to add on other",
    "start": "739920",
    "end": "742519"
  },
  {
    "text": "things and build a custom",
    "start": "742519",
    "end": "744560"
  },
  {
    "text": "image well now that we understand how to",
    "start": "744560",
    "end": "747079"
  },
  {
    "text": "use C Cube CLE debug for nodes and we're",
    "start": "747079",
    "end": "749480"
  },
  {
    "text": "on the Node once you run that command",
    "start": "749480",
    "end": "752320"
  },
  {
    "text": "how do you use other debugging tools to",
    "start": "752320",
    "end": "754959"
  },
  {
    "text": "analyze what's going on on your windows",
    "start": "754959",
    "end": "757320"
  },
  {
    "text": "node I've attached a few resources up",
    "start": "757320",
    "end": "760040"
  },
  {
    "text": "there the first one is networking",
    "start": "760040",
    "end": "762240"
  },
  {
    "text": "specific so if you want to debug the",
    "start": "762240",
    "end": "764120"
  },
  {
    "text": "host network service that's a very",
    "start": "764120",
    "end": "766000"
  },
  {
    "text": "useful resource um with a bunch of",
    "start": "766000",
    "end": "768760"
  },
  {
    "text": "toolings and scripts available online",
    "start": "768760",
    "end": "771160"
  },
  {
    "text": "and we're going to take closer look in",
    "start": "771160",
    "end": "772839"
  },
  {
    "text": "the demo on what you can do with it the",
    "start": "772839",
    "end": "776240"
  },
  {
    "text": "second one up there is how do you",
    "start": "776240",
    "end": "778279"
  },
  {
    "text": "capture the post compute service traces",
    "start": "778279",
    "end": "780760"
  },
  {
    "text": "and logs and this one's going to be if",
    "start": "780760",
    "end": "783600"
  },
  {
    "text": "you really don't know what's going on",
    "start": "783600",
    "end": "785079"
  },
  {
    "text": "and you need to engage with",
    "start": "785079",
    "end": "787279"
  },
  {
    "text": "Microsoft you probably would have to go",
    "start": "787279",
    "end": "789320"
  },
  {
    "text": "through this route capture traces reach",
    "start": "789320",
    "end": "791600"
  },
  {
    "text": "out to the support team work with them",
    "start": "791600",
    "end": "793560"
  },
  {
    "text": "and debug what's going on a shout out",
    "start": "793560",
    "end": "796560"
  },
  {
    "text": "over here to a custom windows debug",
    "start": "796560",
    "end": "799000"
  },
  {
    "text": "image that's available so if you don't",
    "start": "799000",
    "end": "800720"
  },
  {
    "text": "want to um add your own tools to the",
    "start": "800720",
    "end": "803920"
  },
  {
    "text": "node you can start with this image James",
    "start": "803920",
    "end": "806000"
  },
  {
    "text": "St stent who is a fellow Sig Windows",
    "start": "806000",
    "end": "808880"
  },
  {
    "text": "member M has published an image that is",
    "start": "808880",
    "end": "811399"
  },
  {
    "text": "prepackaged with a bunch of tools on",
    "start": "811399",
    "end": "813440"
  },
  {
    "text": "there uh it's a wonderful starting point",
    "start": "813440",
    "end": "815440"
  },
  {
    "text": "for someone who's just getting their",
    "start": "815440",
    "end": "816839"
  },
  {
    "text": "feet wet in debugging Windows",
    "start": "816839",
    "end": "819240"
  },
  {
    "text": "nodes well enough chat let's move to the",
    "start": "819240",
    "end": "822800"
  },
  {
    "text": "demo and see a few of these things in",
    "start": "822800",
    "end": "825519"
  },
  {
    "text": "action thanks okay so here we get a list",
    "start": "825519",
    "end": "829079"
  },
  {
    "text": "of all the notes that we have on the",
    "start": "829079",
    "end": "831079"
  },
  {
    "text": "cluster if you take a look at the last",
    "start": "831079",
    "end": "833399"
  },
  {
    "text": "two you can see that we have two Windows",
    "start": "833399",
    "end": "836480"
  },
  {
    "text": "Server 2022 data center uh noes running",
    "start": "836480",
    "end": "839480"
  },
  {
    "text": "on the cluster we also see that",
    "start": "839480",
    "end": "841560"
  },
  {
    "text": "container D is the container runtime",
    "start": "841560",
    "end": "844360"
  },
  {
    "text": "that is configured for those nodes now",
    "start": "844360",
    "end": "847320"
  },
  {
    "text": "let's take a look at the routes that we",
    "start": "847320",
    "end": "849160"
  },
  {
    "text": "have available uh we have already set up",
    "start": "849160",
    "end": "851399"
  },
  {
    "text": "a grafana route and that is going to be",
    "start": "851399",
    "end": "853759"
  },
  {
    "text": "our URL for the grafana dashboard now",
    "start": "853759",
    "end": "856720"
  },
  {
    "text": "let's take a look at the routes in the",
    "start": "856720",
    "end": "858800"
  },
  {
    "text": "monitoring name space uh this is going",
    "start": "858800",
    "end": "861519"
  },
  {
    "text": "to give us a list of all of the",
    "start": "861519",
    "end": "864000"
  },
  {
    "text": "Prometheus uh URLs that are created so",
    "start": "864000",
    "end": "866959"
  },
  {
    "text": "this is the Prometheus route we have",
    "start": "866959",
    "end": "868440"
  },
  {
    "text": "also already set up some Prometheus",
    "start": "868440",
    "end": "870600"
  },
  {
    "text": "rules and service monitors for the path",
    "start": "870600",
    "end": "873839"
  },
  {
    "text": "that is/ metrics that are we that we are",
    "start": "873839",
    "end": "875880"
  },
  {
    "text": "going to see uh one thing to note here",
    "start": "875880",
    "end": "879519"
  },
  {
    "text": "is that Prometheus metrics for windows",
    "start": "879519",
    "end": "881680"
  },
  {
    "text": "exporters are usually available on the",
    "start": "881680",
    "end": "883680"
  },
  {
    "text": "port 9182 which is different from Linux",
    "start": "883680",
    "end": "886800"
  },
  {
    "text": "uh if you try to get the setup and now",
    "start": "886800",
    "end": "890480"
  },
  {
    "text": "we are going to use the summary stats",
    "start": "890480",
    "end": "892199"
  },
  {
    "text": "API uh the support for this was also",
    "start": "892199",
    "end": "894759"
  },
  {
    "text": "added for Windows noes so you can take a",
    "start": "894759",
    "end": "897759"
  },
  {
    "text": "look at",
    "start": "897759",
    "end": "899639"
  },
  {
    "text": "what metrics are created with this API",
    "start": "899639",
    "end": "903720"
  },
  {
    "text": "and you can see everything in one place",
    "start": "903720",
    "end": "905759"
  },
  {
    "text": "so first we are going to take a look at",
    "start": "905759",
    "end": "907800"
  },
  {
    "text": "the Pod metrics you can see the",
    "start": "907800",
    "end": "910040"
  },
  {
    "text": "containers that are created",
    "start": "910040",
    "end": "912839"
  },
  {
    "text": "and yeah you will have everything in one",
    "start": "912839",
    "end": "915440"
  },
  {
    "text": "place which is the memory uh you can see",
    "start": "915440",
    "end": "918880"
  },
  {
    "text": "the CPU Network file",
    "start": "918880",
    "end": "923120"
  },
  {
    "text": "system and now we are going to scroll up",
    "start": "923120",
    "end": "925480"
  },
  {
    "text": "to the node so this is the name of the",
    "start": "925480",
    "end": "927360"
  },
  {
    "text": "node and yeah these are the relevant",
    "start": "927360",
    "end": "931199"
  },
  {
    "text": "metrics that you may need to access and",
    "start": "931199",
    "end": "934279"
  },
  {
    "text": "we are going to project the same thing",
    "start": "934279",
    "end": "936040"
  },
  {
    "text": "on the grafana dashboard now we are just",
    "start": "936040",
    "end": "938240"
  },
  {
    "text": "checking that everything is available",
    "start": "938240",
    "end": "939959"
  },
  {
    "text": "from the Prometheus side before doing",
    "start": "939959",
    "end": "944160"
  },
  {
    "text": "that so yeah we are moving to the Gana",
    "start": "944600",
    "end": "947399"
  },
  {
    "text": "dashboard let's add a data",
    "start": "947399",
    "end": "950000"
  },
  {
    "text": "source that is going to be Prometheus",
    "start": "950000",
    "end": "952680"
  },
  {
    "text": "for",
    "start": "952680",
    "end": "955040"
  },
  {
    "text": "us and now we are just going to use the",
    "start": "956319",
    "end": "959079"
  },
  {
    "text": "Prometheus URL that we saw in the routes",
    "start": "959079",
    "end": "961800"
  },
  {
    "text": "and since we are using",
    "start": "961800",
    "end": "965079"
  },
  {
    "text": "https URL we are going to set up some",
    "start": "965240",
    "end": "968600"
  },
  {
    "text": "authorization headers so that's going to",
    "start": "968600",
    "end": "970600"
  },
  {
    "text": "be your Bearer and token with which you",
    "start": "970600",
    "end": "972759"
  },
  {
    "text": "have created your Prometheus service I",
    "start": "972759",
    "end": "975160"
  },
  {
    "text": "used a shortl token but you can use",
    "start": "975160",
    "end": "977360"
  },
  {
    "text": "another one in your",
    "start": "977360",
    "end": "981040"
  },
  {
    "text": "case this process is very similar to",
    "start": "981040",
    "end": "983399"
  },
  {
    "text": "what we would do for Linux but this is",
    "start": "983399",
    "end": "985680"
  },
  {
    "text": "just a demo that we wanted to show okay",
    "start": "985680",
    "end": "988600"
  },
  {
    "text": "let's see use a dashboard this is the",
    "start": "988600",
    "end": "992079"
  },
  {
    "text": "dashboard that is already created for",
    "start": "992079",
    "end": "994480"
  },
  {
    "text": "Windows nodes this is publicly available",
    "start": "994480",
    "end": "997600"
  },
  {
    "text": "this number but you can use another one",
    "start": "997600",
    "end": "999920"
  },
  {
    "text": "you can customize it uh for the things",
    "start": "999920",
    "end": "1002720"
  },
  {
    "text": "that you want to see in the dashboard",
    "start": "1002720",
    "end": "1004920"
  },
  {
    "text": "here you can see everything the memory",
    "start": "1004920",
    "end": "1007279"
  },
  {
    "text": "CPU",
    "start": "1007279",
    "end": "1009519"
  },
  {
    "text": "Network",
    "start": "1009519",
    "end": "1012519"
  },
  {
    "text": "details yeah so that's everything for",
    "start": "1016639",
    "end": "1019639"
  },
  {
    "text": "the grafana dashboard and now we are",
    "start": "1019639",
    "end": "1023279"
  },
  {
    "text": "moving to the debugging",
    "start": "1023279",
    "end": "1026798"
  },
  {
    "text": "part yeah so this is the command that",
    "start": "1032039",
    "end": "1034240"
  },
  {
    "text": "rtia showed",
    "start": "1034240",
    "end": "1035880"
  },
  {
    "text": "earlier yep we're going to use that and",
    "start": "1035880",
    "end": "1039038"
  },
  {
    "text": "get on to the node and we're going to",
    "start": "1039039",
    "end": "1041079"
  },
  {
    "text": "take a quick peek into how we get access",
    "start": "1041079",
    "end": "1043918"
  },
  {
    "text": "to the node",
    "start": "1043919",
    "end": "1047240"
  },
  {
    "text": "all right you see on there that the",
    "start": "1054559",
    "end": "1056520"
  },
  {
    "text": "container attached successfully and now",
    "start": "1056520",
    "end": "1059000"
  },
  {
    "text": "you're on the Node and you have access",
    "start": "1059000",
    "end": "1061440"
  },
  {
    "text": "to all the host files on the host file",
    "start": "1061440",
    "end": "1065200"
  },
  {
    "text": "system uh that's a quick look into what",
    "start": "1065200",
    "end": "1067760"
  },
  {
    "text": "the k directory looks like you're going",
    "start": "1067760",
    "end": "1069440"
  },
  {
    "text": "to see all the EXs that are available CU",
    "start": "1069440",
    "end": "1072000"
  },
  {
    "text": "bled Q proxy so on and so forth",
    "start": "1072000",
    "end": "1074000"
  },
  {
    "text": "configuration files um nothing too",
    "start": "1074000",
    "end": "1076640"
  },
  {
    "text": "interesting moving on to the logs we we",
    "start": "1076640",
    "end": "1078919"
  },
  {
    "text": "can see that we have access to container",
    "start": "1078919",
    "end": "1080400"
  },
  {
    "text": "D logs to CU proxy logs cuet logs this",
    "start": "1080400",
    "end": "1084760"
  },
  {
    "text": "is super useful when it comes to",
    "start": "1084760",
    "end": "1087280"
  },
  {
    "text": "debugging what's going on a Windows node",
    "start": "1087280",
    "end": "1089559"
  },
  {
    "text": "and why containers are not able to come",
    "start": "1089559",
    "end": "1091440"
  },
  {
    "text": "up or a node is not able to register",
    "start": "1091440",
    "end": "1093360"
  },
  {
    "text": "onto a kubernetes",
    "start": "1093360",
    "end": "1095000"
  },
  {
    "text": "cluster these are super",
    "start": "1095000",
    "end": "1098120"
  },
  {
    "text": "useful all right now we're going to",
    "start": "1098120",
    "end": "1100280"
  },
  {
    "text": "quickly download one of the scripts we",
    "start": "1100280",
    "end": "1102240"
  },
  {
    "text": "talked about that would help us debug",
    "start": "1102240",
    "end": "1105159"
  },
  {
    "text": "the host network service that's linked",
    "start": "1105159",
    "end": "1108240"
  },
  {
    "text": "up there it's called collect logs. PS1",
    "start": "1108240",
    "end": "1111039"
  },
  {
    "text": "and we're going to run that and it's",
    "start": "1111039",
    "end": "1112640"
  },
  {
    "text": "going to get a bunch of traces",
    "start": "1112640",
    "end": "1114919"
  },
  {
    "text": "networking traces for us",
    "start": "1114919",
    "end": "1117240"
  },
  {
    "text": "specifically uh as you can see the magic",
    "start": "1117240",
    "end": "1119919"
  },
  {
    "text": "happening it's going to run a bunch of",
    "start": "1119919",
    "end": "1122679"
  },
  {
    "text": "PS",
    "start": "1122679",
    "end": "1124400"
  },
  {
    "text": "scripts and we ran them and it's created",
    "start": "1124400",
    "end": "1127640"
  },
  {
    "text": "a directory out there for us um and that",
    "start": "1127640",
    "end": "1130840"
  },
  {
    "text": "directory is going to house all of the",
    "start": "1130840",
    "end": "1134000"
  },
  {
    "text": "traces that we've",
    "start": "1134000",
    "end": "1136080"
  },
  {
    "text": "collected now we can do one good thing",
    "start": "1136080",
    "end": "1139240"
  },
  {
    "text": "over here I think we're going to move on",
    "start": "1139240",
    "end": "1140799"
  },
  {
    "text": "to showing that in a bit is we can copy",
    "start": "1140799",
    "end": "1143679"
  },
  {
    "text": "over the directory using the cube Kettle",
    "start": "1143679",
    "end": "1145760"
  },
  {
    "text": "copy command from the node to the",
    "start": "1145760",
    "end": "1148640"
  },
  {
    "text": "developers machine and this is extremely",
    "start": "1148640",
    "end": "1151440"
  },
  {
    "text": "useful in scenarios where you're looking",
    "start": "1151440",
    "end": "1153559"
  },
  {
    "text": "at event logs that can be analyzed by",
    "start": "1153559",
    "end": "1156559"
  },
  {
    "text": "Event Viewer or WPA or W shock which you",
    "start": "1156559",
    "end": "1162840"
  },
  {
    "text": "cannot open via CLI only access on",
    "start": "1162840",
    "end": "1166039"
  },
  {
    "text": "Windows nodes",
    "start": "1166039",
    "end": "1169399"
  },
  {
    "text": "all",
    "start": "1173600",
    "end": "1175080"
  },
  {
    "text": "right we're just",
    "start": "1175080",
    "end": "1177360"
  },
  {
    "text": "coping the logs over",
    "start": "1177360",
    "end": "1182000"
  },
  {
    "text": "[Music]",
    "start": "1199770",
    "end": "1202869"
  },
  {
    "text": "and that's the folder that got generated",
    "start": "1210240",
    "end": "1212320"
  },
  {
    "text": "on the host go plug that in",
    "start": "1212320",
    "end": "1217559"
  },
  {
    "text": "and well voila there it is on the",
    "start": "1229400",
    "end": "1232400"
  },
  {
    "text": "developers",
    "start": "1232400",
    "end": "1235000"
  },
  {
    "text": "machine you can see that we have a ETL",
    "start": "1236360",
    "end": "1239480"
  },
  {
    "text": "file which was copied over as well as",
    "start": "1239480",
    "end": "1241240"
  },
  {
    "text": "the folder I think it's from a old demo",
    "start": "1241240",
    "end": "1243799"
  },
  {
    "text": "run the ETL file you can ignore that um",
    "start": "1243799",
    "end": "1247240"
  },
  {
    "text": "we're going to walk into the folder",
    "start": "1247240",
    "end": "1251320"
  },
  {
    "text": "all right sweet you see the level of",
    "start": "1261400",
    "end": "1264200"
  },
  {
    "text": "networking traces that we've captured",
    "start": "1264200",
    "end": "1265960"
  },
  {
    "text": "we' captured the name spaces the ports",
    "start": "1265960",
    "end": "1269159"
  },
  {
    "text": "the",
    "start": "1269159",
    "end": "1269960"
  },
  {
    "text": "routes everything in there so everything",
    "start": "1269960",
    "end": "1272320"
  },
  {
    "text": "that was created when the containers",
    "start": "1272320",
    "end": "1274559"
  },
  {
    "text": "come up that are leveraged by the host",
    "start": "1274559",
    "end": "1276559"
  },
  {
    "text": "network service is in there and that can",
    "start": "1276559",
    "end": "1279480"
  },
  {
    "text": "be used to analyze if you're seeing",
    "start": "1279480",
    "end": "1282039"
  },
  {
    "text": "packet drops if you're seeing",
    "start": "1282039",
    "end": "1284039"
  },
  {
    "text": "connections being",
    "start": "1284039",
    "end": "1285440"
  },
  {
    "text": "refused um when you're deploying Windows",
    "start": "1285440",
    "end": "1288000"
  },
  {
    "text": "uh application s on the",
    "start": "1288000",
    "end": "1291559"
  },
  {
    "text": "host that's the route",
    "start": "1294159",
    "end": "1297919"
  },
  {
    "text": "table yep you see a few ETL files here",
    "start": "1311480",
    "end": "1314600"
  },
  {
    "text": "we don't have wire shock right now but",
    "start": "1314600",
    "end": "1316600"
  },
  {
    "text": "on a developer machine that has wire Tru",
    "start": "1316600",
    "end": "1318840"
  },
  {
    "text": "you can import those files and look at",
    "start": "1318840",
    "end": "1320679"
  },
  {
    "text": "them um or use the windows tools which",
    "start": "1320679",
    "end": "1325039"
  },
  {
    "text": "are",
    "start": "1325039",
    "end": "1326039"
  },
  {
    "text": "supported and that's what the networking",
    "start": "1326039",
    "end": "1328559"
  },
  {
    "text": "txt looks",
    "start": "1328559",
    "end": "1329919"
  },
  {
    "text": "like well that's a quick example of what",
    "start": "1329919",
    "end": "1334320"
  },
  {
    "text": "debugging a Windows node can look like",
    "start": "1334320",
    "end": "1336480"
  },
  {
    "text": "and the power that you have to look at",
    "start": "1336480",
    "end": "1339960"
  },
  {
    "text": "the logs that get generated directly on",
    "start": "1339960",
    "end": "1342559"
  },
  {
    "text": "the",
    "start": "1342559",
    "end": "1343320"
  },
  {
    "text": "host let's move on and",
    "start": "1343320",
    "end": "1348840"
  },
  {
    "text": "all right well feel free to reach out to",
    "start": "1348840",
    "end": "1351640"
  },
  {
    "text": "us that's a summation of our talk uh we",
    "start": "1351640",
    "end": "1355840"
  },
  {
    "text": "are available at Sig windows on the",
    "start": "1355840",
    "end": "1357760"
  },
  {
    "text": "kuber slack those are our LinkedIn you",
    "start": "1357760",
    "end": "1360320"
  },
  {
    "text": "can connect with us or catch us after",
    "start": "1360320",
    "end": "1362960"
  },
  {
    "text": "the talk if you have any questions for",
    "start": "1362960",
    "end": "1364520"
  },
  {
    "text": "us um Sig Windows is a pretty active",
    "start": "1364520",
    "end": "1367679"
  },
  {
    "text": "Community we have meetings every Tuesday",
    "start": "1367679",
    "end": "1370880"
  },
  {
    "text": "at 9:30 PST I encourage people to join",
    "start": "1370880",
    "end": "1375760"
  },
  {
    "text": "uh and we always looking for",
    "start": "1375760",
    "end": "1377080"
  },
  {
    "text": "contributors to come help us",
    "start": "1377080",
    "end": "1379120"
  },
  {
    "text": "please feel free to scan the QR code to",
    "start": "1379120",
    "end": "1381760"
  },
  {
    "text": "share feedback on this talk we would",
    "start": "1381760",
    "end": "1383720"
  },
  {
    "text": "appreciate it we're open for any",
    "start": "1383720",
    "end": "1385960"
  },
  {
    "text": "questions if you",
    "start": "1385960",
    "end": "1389399"
  },
  {
    "text": "have okay thank you very much for the",
    "start": "1394640",
    "end": "1397120"
  },
  {
    "text": "talk uh we have time for one question so",
    "start": "1397120",
    "end": "1399600"
  },
  {
    "text": "if anybody has a question please run to",
    "start": "1399600",
    "end": "1402080"
  },
  {
    "text": "the microphone in the front uh yeah",
    "start": "1402080",
    "end": "1406320"
  },
  {
    "text": "otherwise find uh our speakers around to",
    "start": "1406320",
    "end": "1410039"
  },
  {
    "text": "ask any questions or share your",
    "start": "1410039",
    "end": "1414679"
  },
  {
    "text": "experiences yeah you can also share your",
    "start": "1414679",
    "end": "1416799"
  },
  {
    "text": "user stories if you have yeah I think we",
    "start": "1416799",
    "end": "1420159"
  },
  {
    "text": "have one",
    "start": "1420159",
    "end": "1421840"
  },
  {
    "text": "question I'll be the",
    "start": "1421840",
    "end": "1424480"
  },
  {
    "text": "one um y'all were gathering the windows",
    "start": "1424480",
    "end": "1427679"
  },
  {
    "text": "metrics using Prometheus right yes uh",
    "start": "1427679",
    "end": "1430679"
  },
  {
    "text": "did y'all explore open",
    "start": "1430679",
    "end": "1434278"
  },
  {
    "text": "tary no we haven't we haven't yet okay",
    "start": "1434320",
    "end": "1438840"
  },
  {
    "text": "yeah thank you thank you",
    "start": "1438840",
    "end": "1442440"
  },
  {
    "text": "sure all right thank you very much and",
    "start": "1442520",
    "end": "1447200"
  },
  {
    "text": "uh we now prepare to the next talk",
    "start": "1447200",
    "end": "1449880"
  },
  {
    "text": "please give Round of Applause to our",
    "start": "1449880",
    "end": "1451400"
  },
  {
    "text": "speakers",
    "start": "1451400",
    "end": "1454400"
  }
]