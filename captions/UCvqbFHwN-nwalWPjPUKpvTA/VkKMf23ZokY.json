[
  {
    "text": "so we're going to talk today about gear tops for ISTE oh and I'll start by introducing it up so that we know why",
    "start": "30",
    "end": "6450"
  },
  {
    "text": "it's important who does it what the patterns are and hopefully give you some information to go and think about and",
    "start": "6450",
    "end": "13620"
  },
  {
    "text": "use and then we'll go into the sto section and you know guests get ups is it's not it's not just the buzzword",
    "start": "13620",
    "end": "22439"
  },
  {
    "text": "there's some some real technology here underneath some very specific practices",
    "start": "22439",
    "end": "28369"
  },
  {
    "text": "at the same time we are absolutely building on top of years and years and years of people doing DevOps and best",
    "start": "28369",
    "end": "34770"
  },
  {
    "text": "practice around platform-as-a-service and many other cool things so you'll see patterns that you recognize and see III",
    "start": "34770",
    "end": "42030"
  },
  {
    "text": "do that that's great that's a good thing but there is some also some detail here to pay attention to I'll try the",
    "start": "42030",
    "end": "47460"
  },
  {
    "text": "highlighter as we go and give ops is the practice that we just started calling it",
    "start": "47460",
    "end": "53340"
  },
  {
    "text": "that because it we've works we were deploying our entire systems from gear this is important because once one time",
    "start": "53340",
    "end": "61070"
  },
  {
    "text": "somebody I heard I was sitting in the office one afternoon and I heard one of",
    "start": "61070",
    "end": "66210"
  },
  {
    "text": "the engineers say I'm about to make a change which you know could wipe out our",
    "start": "66210",
    "end": "71880"
  },
  {
    "text": "entire systems ok so I still like this and then I had to click followed by oh",
    "start": "71880",
    "end": "79170"
  },
  {
    "text": " I have wiped out our entire systems global clusters and everything Thanks",
    "start": "79170",
    "end": "84619"
  },
  {
    "text": "anyway what was really impressive to me as a business person watching this is that the team immediately rallied and",
    "start": "84619",
    "end": "91049"
  },
  {
    "text": "took about 45 minutes to rebuild our entire global multi zone multistage systems from scratch not including the",
    "start": "91049",
    "end": "99810"
  },
  {
    "text": "data which stays on this okay from scratch and we're back up and running serving customers Wow",
    "start": "99810",
    "end": "106740"
  },
  {
    "text": "okay how do we do that I asked them what's going on here what have you done I need to know they said it's because we",
    "start": "106740",
    "end": "112590"
  },
  {
    "text": "record the health of our entire state of our entire system the desired state and the recovery state is all in get what do",
    "start": "112590",
    "end": "120719"
  },
  {
    "text": "you mean well in in we've worst case you don't have to use these technologies but",
    "start": "120719",
    "end": "126990"
  },
  {
    "text": "we use terraform to describe our machines and how they're laid out and then we use ansible and then we have kubernetes i'm",
    "start": "126990",
    "end": "133080"
  },
  {
    "text": "have pluses in kubernetes and we have services on top of kubernetes which a describe declaratively and weave apps",
    "start": "133080",
    "end": "138390"
  },
  {
    "text": "and we have monitoring and dashboards all of which have described declaratively and all of that is sudden",
    "start": "138390",
    "end": "143610"
  },
  {
    "text": "get so the world state of our system is in git which means that we have a atomic",
    "start": "143610",
    "end": "151560"
  },
  {
    "text": "sequence of transactional commits representing that history of that state and go backwards and forwards in time",
    "start": "151560",
    "end": "156990"
  },
  {
    "text": "and we can recover from any snapshot we're down to about 5 minutes for some",
    "start": "156990",
    "end": "162540"
  },
  {
    "text": "of these recovery scenarios now which is pretty pretty cool but you know this is a very fundamental change the idea is",
    "start": "162540",
    "end": "168870"
  },
  {
    "text": "the desired state of your entire system is in get and that means the cluster and",
    "start": "168870",
    "end": "174330"
  },
  {
    "text": "it's observed state can be compared with that at all times we can fire diff alerts if they're different for any",
    "start": "174330",
    "end": "180540"
  },
  {
    "text": "layer of the stack and then of course on top of all of this you get the benefit that if you're a developer all you need",
    "start": "180540",
    "end": "186720"
  },
  {
    "text": "to think about is writing code do a git push merge and it could go straight into production so we don't use coop cuttle",
    "start": "186720",
    "end": "193980"
  },
  {
    "text": "to interfere with our operational cluster anymore pretty amazing the challenge for SC OV o",
    "start": "193980",
    "end": "200820"
  },
  {
    "text": "is wait a minute this thing's happening inside sto like traffic management where",
    "start": "200820",
    "end": "207239"
  },
  {
    "text": "we actually might be sliding you know the percentage weight on a canary in real time we don't necessarily want to",
    "start": "207239",
    "end": "212730"
  },
  {
    "text": "commit that to get as we're trying out different scenarios so we're wrestling with how to do this best and we're not",
    "start": "212730",
    "end": "218850"
  },
  {
    "text": "completely at a solution we will get there and these guys will show you a solution the tip theta the ass on this",
    "start": "218850",
    "end": "224010"
  },
  {
    "text": "today that will be the demo can I go",
    "start": "224010",
    "end": "229650"
  },
  {
    "text": "through this why is it not moving oh there we go so I'm just gonna run",
    "start": "229650",
    "end": "235800"
  },
  {
    "text": "through the get up story one more time it's a practice around cloud native and server less and things like that it's",
    "start": "235800",
    "end": "242040"
  },
  {
    "text": "all about pushing code not containers through get and it gives developers a sense of operational control through",
    "start": "242040",
    "end": "247920"
  },
  {
    "text": "pull requests inherits or all the good ideas in DevOps and an immutable",
    "start": "247920",
    "end": "254489"
  },
  {
    "text": "infrastructure infrastructure as code including config is code the code is",
    "start": "254489",
    "end": "262979"
  },
  {
    "text": "lives in version control so the config must be version control to that's it what can be described can be",
    "start": "262979",
    "end": "271680"
  },
  {
    "text": "automated because orchestration can use the desired state the descriptions the",
    "start": "271680",
    "end": "277020"
  },
  {
    "text": "annals and use that to enforce conformance I guess in the running state",
    "start": "277020",
    "end": "284040"
  },
  {
    "text": "so you wanted therefore described as much as you can and get not only other",
    "start": "284040",
    "end": "289440"
  },
  {
    "text": "Cuban Eddy stuff but everything else too you can do differ Lots we have three",
    "start": "289440",
    "end": "295440"
  },
  {
    "text": "kinds we've works tariff ansible diff and cube diff which tell you if you're getting",
    "start": "295440",
    "end": "301220"
  },
  {
    "text": "divergence respectively for terraform ansible and kubernetes and we'd love to have more these are open source things",
    "start": "301220",
    "end": "308610"
  },
  {
    "text": "you can find them on our on our github that's a little chat UPS alert there one",
    "start": "308610",
    "end": "317040"
  },
  {
    "text": "neat benefit is when a new developer joins the team they can just start pushing code into the right system and",
    "start": "317040",
    "end": "322410"
  },
  {
    "text": "get it tests or into production without having to learn all about kubernetes which is pretty efficient quick example",
    "start": "322410",
    "end": "332040"
  },
  {
    "text": "this is one of our customers I should explain we'll have a demo users our product we've cloud but many of the",
    "start": "332040",
    "end": "337500"
  },
  {
    "text": "things we're talking about you can do with other technologies okay the Google",
    "start": "337500",
    "end": "342690"
  },
  {
    "text": "guys asked me to say that these guys are a twenty five person team in SF they do",
    "start": "342690",
    "end": "350540"
  },
  {
    "text": "optimize local websites in different languages for big brands like Nike and",
    "start": "350540",
    "end": "356430"
  },
  {
    "text": "so on keeping those websites up to date with compelling content for the customer",
    "start": "356430",
    "end": "362190"
  },
  {
    "text": "is a hard problem to solve at scale because you've got lots of different languages lots of different sites and you're trying to measure which pieces of",
    "start": "362190",
    "end": "368580"
  },
  {
    "text": "content people engage in so believe it or not there's a whole class of new products based on machine learning and",
    "start": "368580",
    "end": "373620"
  },
  {
    "text": "AI and data crunching to figure out how to do that that's what these guys do but they were doing one deployment a week",
    "start": "373620",
    "end": "379440"
  },
  {
    "text": "two deployments a week sometimes they would break they would use things like helm or Jenkins to push changes and",
    "start": "379440",
    "end": "385560"
  },
  {
    "text": "you'd have a group of changes and then half of them would succeed in half of that would not succeed and they wouldn't",
    "start": "385560",
    "end": "390810"
  },
  {
    "text": "know what state they were in and they would have to go back to the beginning and reinstall whole cluster this is not cool",
    "start": "390810",
    "end": "397289"
  },
  {
    "text": "when they started using the approaches we're talking about today and some open source technology and then our",
    "start": "397289",
    "end": "402749"
  },
  {
    "text": "commercial products they found that they could go to four different teams each one of which does between 30 and 50",
    "start": "402749",
    "end": "409349"
  },
  {
    "text": "updates per day each update is instantaneous and either fails cleanly",
    "start": "409349",
    "end": "415319"
  },
  {
    "text": "or succeeds cleanly and they can also roll back so what that's meant is their",
    "start": "415319",
    "end": "421199"
  },
  {
    "text": "velocity has increased and they have a lot more confidence in what they're doing they can try out business experiments like a bee testing just on",
    "start": "421199",
    "end": "428009"
  },
  {
    "text": "the fly if somebody says what if we do this to the website or that to the app they can test it out straightaway and",
    "start": "428009",
    "end": "434399"
  },
  {
    "text": "they're very very happy because of this and they sent us this chart which I want to show you so I actually should have",
    "start": "434399",
    "end": "439680"
  },
  {
    "text": "should have a line on it but they were on a trend of changes he said these are",
    "start": "439680",
    "end": "445349"
  },
  {
    "text": "bug fixes and customer requests but rent that there's a dotted line missing but",
    "start": "445349",
    "end": "450899"
  },
  {
    "text": "it should go up to about 20 here on the right but the steeper Green Line and the steeper red line represent the leap and",
    "start": "450899",
    "end": "457979"
  },
  {
    "text": "productivity they got from moving to instant deployments that either failed or succeeded cleanly doing many more",
    "start": "457979",
    "end": "465839"
  },
  {
    "text": "changes per day and I've got some numbers on the next slide there you go I",
    "start": "465839",
    "end": "475219"
  },
  {
    "text": "think this is pretty cool if you're in a large team this is a big deal right because going to two to three",
    "start": "475219",
    "end": "483659"
  },
  {
    "text": "X speed up in your work is a huge you know cost benefit so how does it work",
    "start": "483659",
    "end": "494449"
  },
  {
    "text": "who knows what an operator is or the operator pattern in kubernetes good an",
    "start": "494449",
    "end": "501479"
  },
  {
    "text": "operator basically lives within the security and domain of control of",
    "start": "501479",
    "end": "507300"
  },
  {
    "text": "kubernetes itself and provides essentially additional services and capabilities taking advantage of the",
    "start": "507300",
    "end": "514258"
  },
  {
    "text": "orchestrator to start and stop things so lots of people are writing operators to",
    "start": "514259",
    "end": "520110"
  },
  {
    "text": "do things like manage you know Redis inside kubernetes Nats inside communities Prometheus inside Cuba",
    "start": "520110",
    "end": "525449"
  },
  {
    "text": "Nettie's we wrote one to do deployments from inside kubernetes",
    "start": "525449",
    "end": "531470"
  },
  {
    "text": "it lives inside kubernetes it sees changes and it updates the cluster and",
    "start": "534810",
    "end": "540839"
  },
  {
    "text": "then it reports back to version control so after the chain-up after the update",
    "start": "540839",
    "end": "546100"
  },
  {
    "text": "has taken place version control is in sync with the running state of the cluster so what's going on here we've",
    "start": "546100",
    "end": "554320"
  },
  {
    "text": "got a transactional synchronization engine that's replicating and reference Eiling between one description of state",
    "start": "554320",
    "end": "561130"
  },
  {
    "text": "and one actual state it's called the",
    "start": "561130",
    "end": "568270"
  },
  {
    "text": "deployment operator and the flow looks",
    "start": "568270",
    "end": "574180"
  },
  {
    "text": "something like this key point is you've got a dev flow and you've got a prod flow merging from staging to prod this",
    "start": "574180",
    "end": "582370"
  },
  {
    "text": "thing push it pulls changes into the cluster and deploys them atomically even if you've got multiple changes why does",
    "start": "582370",
    "end": "589810"
  },
  {
    "text": "it do that it's because it can continue to synchronize if it fails and it has a description of the correct state if you",
    "start": "589810",
    "end": "596890"
  },
  {
    "text": "use we've written something to integrate this with helm so you can do this with helm as well but it was quite difficult to do because how am is not atomic non",
    "start": "596890",
    "end": "604750"
  },
  {
    "text": "compositional and non-deterministic makes it hard okay a few guidelines one",
    "start": "604750",
    "end": "615730"
  },
  {
    "text": "repository per app branch pro environment staging first git merge if",
    "start": "615730",
    "end": "630670"
  },
  {
    "text": "you're not aware get merge as a sort of handy little verb to use here for some other stuff code review requirements",
    "start": "630670",
    "end": "640330"
  },
  {
    "text": "that code review is integrated with the release process another benefit because today coding and operations are a social",
    "start": "640330",
    "end": "646600"
  },
  {
    "text": "activity requiring us to work as teams together not isolated rock stars in boxes so to summarise",
    "start": "646600",
    "end": "658940"
  },
  {
    "text": "core principles very simple and this is",
    "start": "658940",
    "end": "664130"
  },
  {
    "text": "why this get-ups thing is really kubernetes centric and cloud native centric it's about declarative",
    "start": "664130",
    "end": "669140"
  },
  {
    "text": "configuration okay if everything is imperative it's very hard to get this right it certainly has to be at least",
    "start": "669140",
    "end": "675320"
  },
  {
    "text": "idempotent if you want to get it right imperatively but declarative you can enforce convergence by essentially",
    "start": "675320",
    "end": "682430"
  },
  {
    "text": "reapplying the changes if they're not succeeding and you can also observe and compare with the desired state all",
    "start": "682430",
    "end": "690380"
  },
  {
    "text": "changes should go through get including review no one should use q couple",
    "start": "690380",
    "end": "695660"
  },
  {
    "text": "directly I should explain by the way you are allowed to break these rules okay this",
    "start": "695660",
    "end": "701660"
  },
  {
    "text": "is not a cult it's just a set of principles but very important it's not a",
    "start": "701660",
    "end": "706940"
  },
  {
    "text": "good idea to push directly from CI to production many people let their CI tool drive deployment you're giving a",
    "start": "706940",
    "end": "713270"
  },
  {
    "text": "notoriously hackable thing access to production if you do that I use the",
    "start": "713270",
    "end": "720140"
  },
  {
    "text": "operator in the cluster we've written something called weave flux which is open source and underneath the demo that",
    "start": "720140",
    "end": "725210"
  },
  {
    "text": "Stephan will show you which you can do to drive convergence in your cluster it's very easy to use you load it into",
    "start": "725210",
    "end": "730820"
  },
  {
    "text": "kubernetes and it sinks or the get some",
    "start": "730820",
    "end": "736580"
  },
  {
    "text": "benefits everything is atomic and transactional so you've gotten get a",
    "start": "736580",
    "end": "742130"
  },
  {
    "text": "complete sequential audit log which you can roll back and forward to everything",
    "start": "742130",
    "end": "748160"
  },
  {
    "text": "succeeds or fails cleanly and it's very very easy so you have that magic Heroku style git push your code centric which",
    "start": "748160",
    "end": "757700"
  },
  {
    "text": "is very important if you want developers to care I mentioned the transaction log this is a benefit for teams because you",
    "start": "757700",
    "end": "764570"
  },
  {
    "text": "can have metadata like why was this commit made when is it made who made it we have customers who've actually gone",
    "start": "764570",
    "end": "769850"
  },
  {
    "text": "through cybox compliance because of this normally people pay 20 million dollars for a very expensive compliance database",
    "start": "769850",
    "end": "776589"
  },
  {
    "text": "and the auditor will come along and look at the compliance database for days and you'll pay the money with this you can",
    "start": "776589",
    "end": "782420"
  },
  {
    "text": "just show them on the record and get of who made changes to the system and when and their whether they were permitted to and they'll just fall on the floor",
    "start": "782420",
    "end": "787970"
  },
  {
    "text": "because it's free nice and easy and then this is important you know if",
    "start": "787970",
    "end": "794210"
  },
  {
    "text": "you think about how this works when you do a day of test cycle you're loading",
    "start": "794210",
    "end": "800210"
  },
  {
    "text": "our images image changes label changes config changes and potentially code changes into a set of repos you can",
    "start": "800210",
    "end": "807500"
  },
  {
    "text": "think of those as a firewall because you've got dev on one side of the firewall and prod on the other the",
    "start": "807500",
    "end": "812900"
  },
  {
    "text": "production update from the repos is happening by things being pulled into kubernetes by the operator so at no",
    "start": "812900",
    "end": "818420"
  },
  {
    "text": "point does somebody push out from Devon to prod through the firewall which is really cool okay so there's a final",
    "start": "818420",
    "end": "825650"
  },
  {
    "text": "picture this lends itself to a life cycle model where we try and go as wrap",
    "start": "825650",
    "end": "831740"
  },
  {
    "text": "round and round and round this cycle as fast as we can 50 updates a day 100 updates a day a thousand updates a day",
    "start": "831740",
    "end": "837650"
  },
  {
    "text": "as many as we need and it's a simple way of thinking about what our operation actually is desired state to running",
    "start": "837650",
    "end": "844670"
  },
  {
    "text": "state to observe state to control and decisions oops okay I did have a slide",
    "start": "844670",
    "end": "851210"
  },
  {
    "text": "saying who is talking about get-ups but I'll run through them verbally because Google seems to not have saved it",
    "start": "851210",
    "end": "856790"
  },
  {
    "text": "there's a whole bunch of companies looking at this there's anyone here from haserror no they have a booth they've",
    "start": "856790",
    "end": "863960"
  },
  {
    "text": "got something called git cube which is really neat sort of dev centric geared ops tool cloudBees Jenkins axe is built",
    "start": "863960",
    "end": "870530"
  },
  {
    "text": "on get-ups principles and is a CD tool for kubernetes and Jenkins James strikin who's the author is is around on the",
    "start": "870530",
    "end": "876500"
  },
  {
    "text": "cloud B's booth as well do we have an open faz project lead here there he is get ups for open files give ups or",
    "start": "876500",
    "end": "883610"
  },
  {
    "text": "server let's think about that that's really cool Financial Times Sarah this morning she described how the Financial",
    "start": "883610",
    "end": "889070"
  },
  {
    "text": "Times do all of their work with this sort of observable pipeline that's a good ops pipeline okay though the",
    "start": "889070",
    "end": "894800"
  },
  {
    "text": "supermarket the same thing and many others so you should join them okay now",
    "start": "894800",
    "end": "900800"
  },
  {
    "text": "it's your turn thank you very much",
    "start": "900800",
    "end": "905110"
  },
  {
    "text": "[Applause] all right Thank You Alexis so what about this do in all those get",
    "start": "905850",
    "end": "912800"
  },
  {
    "text": "ups I guess how many of you are familiar with this dear there's like lots and",
    "start": "912800",
    "end": "920000"
  },
  {
    "text": "lots of talk so like more than half okay so there's this half which is not so",
    "start": "920000",
    "end": "925700"
  },
  {
    "text": "each tier is a service mesh has launched about a year almost a year ago and it",
    "start": "925700",
    "end": "931640"
  },
  {
    "text": "takes care of its a dedicated infrastructure layer for all your",
    "start": "931640",
    "end": "937340"
  },
  {
    "text": "service to service interactions in a micro services world now the key word as we were sort of getting sto out is all",
    "start": "937340",
    "end": "944990"
  },
  {
    "text": "of the actions or configuration driven and this is where key tops and sto story is going to get connected so if we have",
    "start": "944990",
    "end": "952880"
  },
  {
    "text": "to think about this problem how do you make in a world where sto is taking a",
    "start": "952880",
    "end": "961130"
  },
  {
    "text": "lot of the service behavior things like what is the coda that should be applied",
    "start": "961130",
    "end": "967310"
  },
  {
    "text": "to a given service things like whether the service should call securely to another service things like how should I",
    "start": "967310",
    "end": "975290"
  },
  {
    "text": "route traffic and load balance between service to service now all these service",
    "start": "975290",
    "end": "980900"
  },
  {
    "text": "behavioral things are moving from code to config that's kind of the promise of service mesh-like architectures now you",
    "start": "980900",
    "end": "988490"
  },
  {
    "text": "have cool code management workflows and tools you know how to iterate make code",
    "start": "988490",
    "end": "994280"
  },
  {
    "text": "changes push get a new version out and what about config tools now if in a",
    "start": "994280",
    "end": "1001780"
  },
  {
    "text": "world where all of this is moving to configuration you need a proper config workflow to make all those operations",
    "start": "1001780",
    "end": "1008710"
  },
  {
    "text": "happen happen via different teams now imagine there's like hundred teams",
    "start": "1008710",
    "end": "1013900"
  },
  {
    "text": "managing hundred services each of them making configuration changes for each of their own services and this is affecting",
    "start": "1013900",
    "end": "1020200"
  },
  {
    "text": "real traffic so this is like if you if you screw this up you're like basically your systems down so sensitive in terms",
    "start": "1020200",
    "end": "1028720"
  },
  {
    "text": "of like criticality and you want to have live in a world where you can operate",
    "start": "1028720",
    "end": "1034300"
  },
  {
    "text": "them cleanly separately each service owner and observe the behavior and if go back things go bad you can roll back",
    "start": "1034300",
    "end": "1041400"
  },
  {
    "text": "so this is a pretty challenging sort of problem as Alexis said it's not like if",
    "start": "1041400",
    "end": "1048610"
  },
  {
    "text": "all of this is solved but the goal of this talk is to attempt to give you a",
    "start": "1048610",
    "end": "1054190"
  },
  {
    "text": "flavor of what is possible and we'll take one use case for canary release and Stefan will demo that to you so for",
    "start": "1054190",
    "end": "1063220"
  },
  {
    "text": "those of you who are familiar with this do probably you'd relate to this but",
    "start": "1063220",
    "end": "1068669"
  },
  {
    "text": "Easter is a bunch of capabilities across a few areas right and it has almost",
    "start": "1068669",
    "end": "1076230"
  },
  {
    "text": "everything here is configuration driven it deals with four broad areas if you are not familiar it's traffic management",
    "start": "1076230",
    "end": "1083650"
  },
  {
    "text": "which is everything to do managing all your ingress as well as service to service traffic",
    "start": "1083650",
    "end": "1088960"
  },
  {
    "text": "it's observability which is monitoring latency QPS error rates of all of that",
    "start": "1088960",
    "end": "1094120"
  },
  {
    "text": "traffic it's security which is authenticating all of the service to",
    "start": "1094120",
    "end": "1099429"
  },
  {
    "text": "service calls as well as authorization and it's performance in the sense in a",
    "start": "1099429",
    "end": "1106299"
  },
  {
    "text": "world of micro services if you want to do failure scenarios retries timeouts fault injection circuit braking etc",
    "start": "1106299",
    "end": "1113770"
  },
  {
    "text": "those are all configuration driven things within sto now there's two things",
    "start": "1113770",
    "end": "1121210"
  },
  {
    "text": "to note here each of those each of these things has different owners typically in",
    "start": "1121210",
    "end": "1128409"
  },
  {
    "text": "a in an enterprise in a workflow they are owned by network team gets involved sre and DevOps team is involved as",
    "start": "1128409",
    "end": "1134980"
  },
  {
    "text": "either a horizontal team or per service team the security and InfoSec and sec",
    "start": "1134980",
    "end": "1141220"
  },
  {
    "text": "ops gets involved and of course developers building services and there's some sort of common themes across these",
    "start": "1141220",
    "end": "1148330"
  },
  {
    "text": "these are not one-time things so imagine for example let's take retries you're",
    "start": "1148330",
    "end": "1154960"
  },
  {
    "text": "trying to tune the performance you're saying okay let me retry every five",
    "start": "1154960",
    "end": "1160990"
  },
  {
    "text": "seconds from this call when it's service service a tow service B right you try it out you test it you see what the",
    "start": "1160990",
    "end": "1167140"
  },
  {
    "text": "performance is you observe it if it works you do you get it into production otherwise",
    "start": "1167140",
    "end": "1172870"
  },
  {
    "text": "you go back make changes these are all iterative so this is not a one-time thing this is a living breathing you're",
    "start": "1172870",
    "end": "1179140"
  },
  {
    "text": "making these configuration changes in and out right like it's same thing for",
    "start": "1179140",
    "end": "1186120"
  },
  {
    "text": "the other key sort of piece for these configurations is they're critical so",
    "start": "1186120",
    "end": "1192960"
  },
  {
    "text": "like I said if you in if you inject something which is going to take over all the authentication and going to",
    "start": "1192960",
    "end": "1199840"
  },
  {
    "text": "encrypt all of the traffic in transit one breakage there if one of the",
    "start": "1199840",
    "end": "1205750"
  },
  {
    "text": "services you're not able to handle TLS it can screw up the whole system a lot",
    "start": "1205750",
    "end": "1213610"
  },
  {
    "text": "of these configuration driven things is cross-team so one team decides okay I",
    "start": "1213610",
    "end": "1220870"
  },
  {
    "text": "want to use Zipkin for tracing or but",
    "start": "1220870",
    "end": "1226000"
  },
  {
    "text": "the other team says okay I want to use Jaeger for tracing these are things that these are also even backends of where",
    "start": "1226000",
    "end": "1232120"
  },
  {
    "text": "things are written for all of the service to service traffic is configuration in sto so somebody writes it somebody should have prove it and",
    "start": "1232120",
    "end": "1238840"
  },
  {
    "text": "that's how it should happen right and it could be for one service it could be a cross services and when it's across the",
    "start": "1238840",
    "end": "1244300"
  },
  {
    "text": "approval workflows could look pretty complex so these are cross team in terms of what these configurations are and how",
    "start": "1244300",
    "end": "1250570"
  },
  {
    "text": "they should be rolled out and they're not atomic so things like canary",
    "start": "1250570",
    "end": "1255700"
  },
  {
    "text": "releases right it's not like a one-time atomic thing and this is what we will try and show in the demo it's a",
    "start": "1255700",
    "end": "1262870"
  },
  {
    "text": "complicated workflow where you make the change you get it out through your",
    "start": "1262870",
    "end": "1268000"
  },
  {
    "text": "pipeline you send some percentage some select subset of traffic to it you observe it it works if it doesn't work",
    "start": "1268000",
    "end": "1275679"
  },
  {
    "text": "you keep making changes take the next version tag it get it to the same",
    "start": "1275679",
    "end": "1281410"
  },
  {
    "text": "pipeline so it's it's iterative they are not single atomic operations so this is",
    "start": "1281410",
    "end": "1287140"
  },
  {
    "text": "what makes like config management overall for sto sort of a complex",
    "start": "1287140",
    "end": "1293559"
  },
  {
    "text": "problem it's across stakeholders and it's a continuously changing thing so",
    "start": "1293559",
    "end": "1302500"
  },
  {
    "text": "just I'm going to just browse through a quick set of config examples just to give you",
    "start": "1302500",
    "end": "1308200"
  },
  {
    "text": "a flavor for those of you who are using or have seen a steer this is very very familiar but for those of you who",
    "start": "1308200",
    "end": "1313960"
  },
  {
    "text": "haven't this will at least tell you what is the complexity of configuration we are talking about here right and this is",
    "start": "1313960",
    "end": "1319960"
  },
  {
    "text": "probably a good complex example so within sto you can do things like",
    "start": "1319960",
    "end": "1326760"
  },
  {
    "text": "limit the outgoing connections for a given service to let's say 100 connections and it should be not more",
    "start": "1326760",
    "end": "1333490"
  },
  {
    "text": "than thousand sort of concurrent requests and you can have a simple circuit breaker configuration which is",
    "start": "1333490",
    "end": "1339370"
  },
  {
    "text": "what this bottom part is which says ok",
    "start": "1339370",
    "end": "1346000"
  },
  {
    "text": "you should keep watching every 5 minutes and if you get seven consecutive errors",
    "start": "1346000",
    "end": "1356790"
  },
  {
    "text": "then eject that host for 15 minutes this is basically a host ejection kind of",
    "start": "1356790",
    "end": "1363100"
  },
  {
    "text": "policy which is if there's a host which is going bad you don't want traffic to be routed to it so that's what you're",
    "start": "1363100",
    "end": "1368920"
  },
  {
    "text": "configuring here right so and then in terms of actually how your route traffic",
    "start": "1368920",
    "end": "1374860"
  },
  {
    "text": "is like a set of load balancing policies that you can have so it's you can see",
    "start": "1374860",
    "end": "1380050"
  },
  {
    "text": "how these values around these configurations is critical iterative and",
    "start": "1380050",
    "end": "1388930"
  },
  {
    "text": "something that is you know core to your performance and your system take another",
    "start": "1388930",
    "end": "1395230"
  },
  {
    "text": "example egress you just want to say ok from this service you can go outgoing you can talk",
    "start": "1395230",
    "end": "1401890"
  },
  {
    "text": "to a given domain HTTP or HTTPS simple egress config",
    "start": "1401890",
    "end": "1407670"
  },
  {
    "text": "take a classic a be testing kind of thing you release something new there",
    "start": "1407670",
    "end": "1413980"
  },
  {
    "text": "was a user who was working on it he wants only his requests to be routed to the v2 of a service so what is this",
    "start": "1413980",
    "end": "1420550"
  },
  {
    "text": "thing saying this thing is saying if it's coming from ratings v2 and the URL",
    "start": "1420550",
    "end": "1428290"
  },
  {
    "text": "path is that and if cookie has this user value then go to v2 right so classic",
    "start": "1428290",
    "end": "1437380"
  },
  {
    "text": "staged rollout a/b testing scenario looking at things like performance so",
    "start": "1437380",
    "end": "1443620"
  },
  {
    "text": "there's also simple things like redirect or fault injection so you often come",
    "start": "1443620",
    "end": "1450130"
  },
  {
    "text": "across these scenarios when you are in testing mode performance tuning mode and",
    "start": "1450130",
    "end": "1455700"
  },
  {
    "text": "you want to get all these configurations out make sure these are approved by the",
    "start": "1455700",
    "end": "1461800"
  },
  {
    "text": "right set of people there's a log for it of who did what change and what they",
    "start": "1461800",
    "end": "1466960"
  },
  {
    "text": "committed and this is where sort of get ups and sto configuration starts to come",
    "start": "1466960",
    "end": "1472000"
  },
  {
    "text": "together so just in terms of what these are saying so the last one is interesting it's basically fault",
    "start": "1472000",
    "end": "1479260"
  },
  {
    "text": "injection so with a simple config like this you can say all right for 10% of",
    "start": "1479260",
    "end": "1484750"
  },
  {
    "text": "the request to the service you fail with the status code of 400 and obviously that's something you inject to testing",
    "start": "1484750",
    "end": "1491350"
  },
  {
    "text": "but then you want to remove that configuration as you get into production",
    "start": "1491350",
    "end": "1496830"
  },
  {
    "text": "so what's the point with all of this what I'm trying to show is sto is a",
    "start": "1496830",
    "end": "1503710"
  },
  {
    "text": "pretty powerful system with which is fully configuration driven but what",
    "start": "1503710",
    "end": "1510640"
  },
  {
    "text": "comes as a result of that is you need a proper config workflow and config",
    "start": "1510640",
    "end": "1515830"
  },
  {
    "text": "management system because otherwise if you have large teams each of them",
    "start": "1515830",
    "end": "1521290"
  },
  {
    "text": "driving their own configurations some of these questions are pretty hard to answer which config is live right now",
    "start": "1521290",
    "end": "1526840"
  },
  {
    "text": "how do I go back to the last good one who made the last change that was good",
    "start": "1526840",
    "end": "1532440"
  },
  {
    "text": "and when a bad config was actually pushed then how do I roll back quickly",
    "start": "1532440",
    "end": "1538600"
  },
  {
    "text": "for lease downtime so config workflows need automation and that's where our",
    "start": "1538600",
    "end": "1544060"
  },
  {
    "text": "demo comes in so we're going to take please welcome Stephan thanks",
    "start": "1544060",
    "end": "1554100"
  },
  {
    "text": "one use case of a narrow release",
    "start": "1554170",
    "end": "1559300"
  },
  {
    "text": "probably show them the setup okay so I",
    "start": "1559300",
    "end": "1566080"
  },
  {
    "text": "have a git repo inside this git repo is my cluster definition I have a simple",
    "start": "1566080",
    "end": "1573560"
  },
  {
    "text": "application my application the application name is pod in fall and I",
    "start": "1573560",
    "end": "1578720"
  },
  {
    "text": "have I have my namespaces here I have a single dead space test and aside here",
    "start": "1578720",
    "end": "1587120"
  },
  {
    "text": "are all the files that are needed for my application to be deployed the GE deploy",
    "start": "1587120",
    "end": "1593210"
  },
  {
    "text": "the cannery deployment the gateway the service the virtual service so what I'm",
    "start": "1593210",
    "end": "1600260"
  },
  {
    "text": "describing here is how I have one to deploy my application the current deployment the cannery deployment that",
    "start": "1600260",
    "end": "1606500"
  },
  {
    "text": "everything else needed for SEO to make changes and routing",
    "start": "1606500",
    "end": "1613360"
  },
  {
    "text": "I'm using the new the new version of alpha 3 version where he still has little services and gateways so this is",
    "start": "1620520",
    "end": "1629429"
  },
  {
    "text": "the initial state where all the traffic",
    "start": "1629429",
    "end": "1634980"
  },
  {
    "text": "goes to the MiG release so the weight is 100 the canary zero so this is now",
    "start": "1634980",
    "end": "1641160"
  },
  {
    "text": "deployed on my cluster and I can see using with cloud for example scope that",
    "start": "1641160",
    "end": "1648720"
  },
  {
    "text": "from my load test all the traffic goes to my G release and the load tests I",
    "start": "1648720",
    "end": "1655260"
  },
  {
    "text": "card talks to the east EO pilot so there",
    "start": "1655260",
    "end": "1660600"
  },
  {
    "text": "is no traffic going from from my external load tester we want to call it",
    "start": "1660600",
    "end": "1666390"
  },
  {
    "text": "to my canary what I should do to to split some traffic to route some traffic",
    "start": "1666390",
    "end": "1672240"
  },
  {
    "text": "to the Kennedy I can go in to git add in",
    "start": "1672240",
    "end": "1679410"
  },
  {
    "text": "my file",
    "start": "1679410",
    "end": "1681800"
  },
  {
    "text": "commit my change",
    "start": "1686280",
    "end": "1689760"
  },
  {
    "text": "and using primitives i can getting the primitives metrics out of out of my",
    "start": "1696290",
    "end": "1704000"
  },
  {
    "text": "cluster I can see that all the traffic right now goes to the the GA commit now",
    "start": "1704000",
    "end": "1710870"
  },
  {
    "text": "the our CD operator has detected there is a change in get a plat applied it to",
    "start": "1710870",
    "end": "1718670"
  },
  {
    "text": "to our cluster and now we should see that some part of the traffic gets routed to the cannery deployment",
    "start": "1718670",
    "end": "1730630"
  },
  {
    "text": "down here I am measuring the request latency and you have all sorts of other",
    "start": "1733830",
    "end": "1743000"
  },
  {
    "text": "other things that you can measure to make sure that your cannery list is not failing so this is the most important",
    "start": "1743539",
    "end": "1752100"
  },
  {
    "text": "part right you are not doing Kennedy if you cannot measure it so using Prometheus you can actually",
    "start": "1752100",
    "end": "1759000"
  },
  {
    "text": "detect errors and stuff like that so notice how in the maybe while this is",
    "start": "1759000",
    "end": "1766500"
  },
  {
    "text": "happening we can show them the yeah so",
    "start": "1766500",
    "end": "1780350"
  },
  {
    "text": "this is the setup here you have you have",
    "start": "1780350",
    "end": "1786630"
  },
  {
    "text": "GA release and a canary release and you made some changes and you started",
    "start": "1786630",
    "end": "1793409"
  },
  {
    "text": "sending X percent traffic notice how all of these two files the in word in the in",
    "start": "1793409",
    "end": "1798929"
  },
  {
    "text": "the repo the virtual service gateway config files are all in the git repo and",
    "start": "1798929",
    "end": "1805200"
  },
  {
    "text": "he's making good changes there is and then this is the operate part so going",
    "start": "1805200",
    "end": "1811200"
  },
  {
    "text": "back to our operate and observe and you're observing the behavior in Prometheus as to what's happening with",
    "start": "1811200",
    "end": "1817649"
  },
  {
    "text": "your metrics as you for your canary release okay so let's say we detect a",
    "start": "1817649",
    "end": "1827549"
  },
  {
    "text": "problem with your canary release you are making some changes to the code and",
    "start": "1827549",
    "end": "1833690"
  },
  {
    "text": "you'll push a new a new version of your of your code docker registry I'm pushing",
    "start": "1834919",
    "end": "1841409"
  },
  {
    "text": "an image to Quay right now and inside my",
    "start": "1841409",
    "end": "1848570"
  },
  {
    "text": "[Music] deployment definition for my canary lists using annotations I am instructing",
    "start": "1848570",
    "end": "1858899"
  },
  {
    "text": "my the operator to automate this release and deploy any new version that",
    "start": "1858899",
    "end": "1867850"
  },
  {
    "text": "ends up in in the docker registry that is a minor change minor version to my to",
    "start": "1867850",
    "end": "1875200"
  },
  {
    "text": "my release so what I'm saying here any patch that it's available on 0.3 please",
    "start": "1875200",
    "end": "1883630"
  },
  {
    "text": "deploy that automatically so instead of me going here and do changes every time",
    "start": "1883630",
    "end": "1891520"
  },
  {
    "text": "I iterate through the code and increment this version I instruct the operator to",
    "start": "1891520",
    "end": "1896860"
  },
  {
    "text": "do that using using this annotation",
    "start": "1896860",
    "end": "1901919"
  },
  {
    "text": "hopefully the yeah okay if I did the",
    "start": "1925340",
    "end": "1931080"
  },
  {
    "text": "pull the push okay my zero three one is",
    "start": "1931080",
    "end": "1940200"
  },
  {
    "text": "up the operator detected there is a",
    "start": "1940200",
    "end": "1946950"
  },
  {
    "text": "there is a new version automated the release has changed the version two zero",
    "start": "1946950",
    "end": "1958260"
  },
  {
    "text": "three one and if I'm looking here in my get history",
    "start": "1958260",
    "end": "1965150"
  },
  {
    "text": "okay so I think that the operator did",
    "start": "1976720",
    "end": "1981760"
  },
  {
    "text": "the commit 40 seconds ago and what it did was replacing for me the new the new",
    "start": "1981760",
    "end": "1988240"
  },
  {
    "text": "image so you can actually automate part of your detox flow if you want to so",
    "start": "1988240",
    "end": "1995830"
  },
  {
    "text": "notice what happened here he has not done any cube cuddle or history of",
    "start": "1995830",
    "end": "2001080"
  },
  {
    "text": "control flux detected he set up flux to",
    "start": "2001080",
    "end": "2006750"
  },
  {
    "text": "say okay if there's any minor version of zero 3x then sort of auto release and",
    "start": "2006750",
    "end": "2015990"
  },
  {
    "text": "deploy and that pushed as soon as in the",
    "start": "2015990",
    "end": "2022980"
  },
  {
    "text": "registry there's a new image with that zero 3x tag that was pushed and he has",
    "start": "2022980",
    "end": "2029390"
  },
  {
    "text": "the log of the fact that this was pushed right and infamy in our monitoring as we",
    "start": "2029390",
    "end": "2037050"
  },
  {
    "text": "observe you can see that yeah the photo",
    "start": "2037050",
    "end": "2044970"
  },
  {
    "text": "and yeah that can release its own zero",
    "start": "2044970",
    "end": "2052919"
  },
  {
    "text": "three one so the next logical step will",
    "start": "2052920",
    "end": "2059429"
  },
  {
    "text": "be to keep increasing the the traffic route okay maybe you could find it",
    "start": "2059430",
    "end": "2066270"
  },
  {
    "text": "annoying that you have to always commit when you when you increase the the weight maybe in the future somebody will",
    "start": "2066270",
    "end": "2074820"
  },
  {
    "text": "do an interface that will talk to the operator the operator will do those commits for doing it so you don't have",
    "start": "2074820",
    "end": "2082139"
  },
  {
    "text": "to manually increment all the time great",
    "start": "2082140",
    "end": "2087899"
  },
  {
    "text": "implementation will be to rollback if from some Prometheus metric you can actually detect can set like this so",
    "start": "2087900",
    "end": "2096750"
  },
  {
    "text": "warning I want rollback because some errors occurred or some the latency for my",
    "start": "2096750",
    "end": "2103170"
  },
  {
    "text": "Canon release is way too high I cannot accept it or set up a threshold like if you can set up a threshold of like if it",
    "start": "2103170",
    "end": "2110010"
  },
  {
    "text": "goes below this threshold then roll back like this lot of magical sort of things you can do",
    "start": "2110010",
    "end": "2115890"
  },
  {
    "text": "once you have this you know your workflow connected to sort of the",
    "start": "2115890",
    "end": "2122640"
  },
  {
    "text": "desired state so this goes back to sort of the get-ups sort of the main principle which is here is what I want",
    "start": "2122640",
    "end": "2127890"
  },
  {
    "text": "and desired state I'm observing and it's based on how far it is from desired state take action now that take action",
    "start": "2127890",
    "end": "2134970"
  },
  {
    "text": "can be manual but in future can be more automated I'm just checking the time I",
    "start": "2134970",
    "end": "2141630"
  },
  {
    "text": "think we need to get a QA at this point unless you want to do more of the demo Stefan yeah I want to know one more time",
    "start": "2141630",
    "end": "2147900"
  },
  {
    "text": "make a mistake and delete everything yeah I'm deleting the nice place we",
    "start": "2147900",
    "end": "2156599"
  },
  {
    "text": "spent a lot of time sacrificing to the demo gods this morning and I hope they were listening",
    "start": "2156599",
    "end": "2163220"
  },
  {
    "text": "yeah the poles are dying hard because anyways in there the sidecar",
    "start": "2170630",
    "end": "2176029"
  },
  {
    "text": "takes some time for them terminated",
    "start": "2176029",
    "end": "2180219"
  },
  {
    "text": "so what it should happen because in my in my get repo I have a nice face",
    "start": "2187930",
    "end": "2193220"
  },
  {
    "text": "definition and in that definition I also have I'm injecting and I'm setting the",
    "start": "2193220",
    "end": "2202670"
  },
  {
    "text": "Eastern injection label everything should be upper running after those",
    "start": "2202670",
    "end": "2210769"
  },
  {
    "text": "spots die so while we're watching this I",
    "start": "2210769",
    "end": "2217249"
  },
  {
    "text": "just want to make the point that this is a good illustration of how observability is integral to the pipeline deployment",
    "start": "2217249",
    "end": "2225200"
  },
  {
    "text": "process okay if you can't see what you're doing as you do it you can't get the benefits of seeing if you're correct",
    "start": "2225200",
    "end": "2231769"
  },
  {
    "text": "or wrong I need to make changes on the fly so to go fast you need both I think we really are out of time because",
    "start": "2231769",
    "end": "2237680"
  },
  {
    "text": "someone else is going to talk in a minute okay is it restarting yeah its restarted thank you very much Stefan",
    "start": "2237680",
    "end": "2243980"
  },
  {
    "text": "thank you thank you",
    "start": "2243980",
    "end": "2250549"
  },
  {
    "text": "thank you all for coming I think we're out of time it's a really tight time on in the conference so we couldn't take",
    "start": "2250549",
    "end": "2256789"
  },
  {
    "text": "any questions for now I'm afraid but we'll be here at the front if you want to come and come and talk",
    "start": "2256789",
    "end": "2263499"
  }
]