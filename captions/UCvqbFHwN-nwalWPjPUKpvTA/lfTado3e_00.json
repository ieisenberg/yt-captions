[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hello it's great to be joining Sig",
    "start": "539",
    "end": "2760"
  },
  {
    "text": "storecon 2022",
    "start": "2760",
    "end": "4740"
  },
  {
    "text": "my name is Ethan lohmann and the title",
    "start": "4740",
    "end": "6839"
  },
  {
    "text": "of this talk is who's verifying your",
    "start": "6839",
    "end": "8880"
  },
  {
    "text": "signatures",
    "start": "8880",
    "end": "9840"
  },
  {
    "text": "approaching private container image",
    "start": "9840",
    "end": "11400"
  },
  {
    "text": "signing",
    "start": "11400",
    "end": "13019"
  },
  {
    "text": "in this talk I'll discuss what we've",
    "start": "13019",
    "end": "15059"
  },
  {
    "text": "learned at datadog as we've begun",
    "start": "15059",
    "end": "16800"
  },
  {
    "text": "signing our internal container images",
    "start": "16800",
    "end": "20460"
  },
  {
    "start": "20000",
    "end": "57000"
  },
  {
    "text": "datadog in case you're not familiar is",
    "start": "20460",
    "end": "22740"
  },
  {
    "text": "an observability and security platform",
    "start": "22740",
    "end": "24600"
  },
  {
    "text": "collecting tens of trillions of events",
    "start": "24600",
    "end": "26699"
  },
  {
    "text": "per day from millions of hosts",
    "start": "26699",
    "end": "29519"
  },
  {
    "text": "to provide this service we run a lot of",
    "start": "29519",
    "end": "31859"
  },
  {
    "text": "container images internally",
    "start": "31859",
    "end": "33660"
  },
  {
    "text": "we have over a thousand employees in our",
    "start": "33660",
    "end": "35820"
  },
  {
    "text": "engineering organization pushing",
    "start": "35820",
    "end": "37380"
  },
  {
    "text": "containers daily to kubernetes where we",
    "start": "37380",
    "end": "39540"
  },
  {
    "text": "run hundreds of thousands of PODS and",
    "start": "39540",
    "end": "41399"
  },
  {
    "text": "dozens of clusters across multiple Cloud",
    "start": "41399",
    "end": "43620"
  },
  {
    "text": "providers",
    "start": "43620",
    "end": "45540"
  },
  {
    "text": "with such a substantial kubernetes",
    "start": "45540",
    "end": "47100"
  },
  {
    "text": "footprint and a diverse set of build and",
    "start": "47100",
    "end": "49079"
  },
  {
    "text": "release pipelines delivering software to",
    "start": "49079",
    "end": "51000"
  },
  {
    "text": "these clusters",
    "start": "51000",
    "end": "52320"
  },
  {
    "text": "internal container image Integrity is a",
    "start": "52320",
    "end": "54660"
  },
  {
    "text": "special security focus of ours",
    "start": "54660",
    "end": "57539"
  },
  {
    "text": "today I'm here representing datadog",
    "start": "57539",
    "end": "60660"
  },
  {
    "text": "I'm a senior software engineer on a team",
    "start": "60660",
    "end": "62699"
  },
  {
    "text": "called software integrity and Trust",
    "start": "62699",
    "end": "64320"
  },
  {
    "text": "where our mission is to secure our",
    "start": "64320",
    "end": "66240"
  },
  {
    "text": "internal and customer facing software",
    "start": "66240",
    "end": "67920"
  },
  {
    "text": "Supply chains",
    "start": "67920",
    "end": "69360"
  },
  {
    "text": "to support some of this work while",
    "start": "69360",
    "end": "71100"
  },
  {
    "text": "contributing back to open source I'm",
    "start": "71100",
    "end": "73320"
  },
  {
    "text": "also one of the maintainers of the go",
    "start": "73320",
    "end": "74760"
  },
  {
    "text": "tough Library which is a go",
    "start": "74760",
    "end": "76680"
  },
  {
    "text": "implementation of the update framework",
    "start": "76680",
    "end": "79439"
  },
  {
    "text": "this project is one of the foundational",
    "start": "79439",
    "end": "81060"
  },
  {
    "text": "components of Sig stores cryptographic",
    "start": "81060",
    "end": "83040"
  },
  {
    "text": "read of trust",
    "start": "83040",
    "end": "84659"
  },
  {
    "text": "some of my interests are cryptography",
    "start": "84659",
    "end": "86700"
  },
  {
    "text": "cooking and cycling",
    "start": "86700",
    "end": "89899"
  },
  {
    "start": "89000",
    "end": "122000"
  },
  {
    "text": "in this talk we'll Begin by briefly",
    "start": "90600",
    "end": "92640"
  },
  {
    "text": "discussing why you might want to sign",
    "start": "92640",
    "end": "94259"
  },
  {
    "text": "and verify private images running on",
    "start": "94259",
    "end": "96299"
  },
  {
    "text": "your internal infrastructure",
    "start": "96299",
    "end": "98400"
  },
  {
    "text": "then I'll give a survey of the current",
    "start": "98400",
    "end": "100619"
  },
  {
    "text": "and past Technologies available for",
    "start": "100619",
    "end": "102420"
  },
  {
    "text": "image signing with a focus on how",
    "start": "102420",
    "end": "104340"
  },
  {
    "text": "verification works",
    "start": "104340",
    "end": "106380"
  },
  {
    "text": "I'll discuss how datadog evaluated these",
    "start": "106380",
    "end": "108720"
  },
  {
    "text": "Technologies and how we ultimately chose",
    "start": "108720",
    "end": "110640"
  },
  {
    "text": "to sign and verify images internally",
    "start": "110640",
    "end": "113640"
  },
  {
    "text": "hopefully you'll take away things you",
    "start": "113640",
    "end": "115380"
  },
  {
    "text": "may want to consider when you're",
    "start": "115380",
    "end": "116700"
  },
  {
    "text": "choosing how to sign and verify your own",
    "start": "116700",
    "end": "118500"
  },
  {
    "text": "images especially in an internal context",
    "start": "118500",
    "end": "123020"
  },
  {
    "start": "122000",
    "end": "269000"
  },
  {
    "text": "to begin why should you sign and verify",
    "start": "123840",
    "end": "126180"
  },
  {
    "text": "container images internally",
    "start": "126180",
    "end": "128399"
  },
  {
    "text": "just like any open source setting",
    "start": "128399",
    "end": "130020"
  },
  {
    "text": "verifying an image signature allows you",
    "start": "130020",
    "end": "132420"
  },
  {
    "text": "to have a high confidence that the image",
    "start": "132420",
    "end": "134700"
  },
  {
    "text": "comes from a trusted Source such as your",
    "start": "134700",
    "end": "137340"
  },
  {
    "text": "Ci or a build environment and that it",
    "start": "137340",
    "end": "139560"
  },
  {
    "text": "has not been modified before it runs",
    "start": "139560",
    "end": "142700"
  },
  {
    "text": "here I have a very basic model for an",
    "start": "142700",
    "end": "146099"
  },
  {
    "text": "internal software supply chain targeting",
    "start": "146099",
    "end": "147780"
  },
  {
    "text": "a kubernetes runtime",
    "start": "147780",
    "end": "149700"
  },
  {
    "text": "first developers write code and push",
    "start": "149700",
    "end": "152040"
  },
  {
    "text": "that code along with its dependencies to",
    "start": "152040",
    "end": "154200"
  },
  {
    "text": "our source code management platform like",
    "start": "154200",
    "end": "156000"
  },
  {
    "text": "GitHub",
    "start": "156000",
    "end": "157800"
  },
  {
    "text": "at some point continuous integration or",
    "start": "157800",
    "end": "160140"
  },
  {
    "text": "CI picks up the code and builds binaries",
    "start": "160140",
    "end": "162840"
  },
  {
    "text": "container images and other artifacts",
    "start": "162840",
    "end": "164940"
  },
  {
    "text": "from that code",
    "start": "164940",
    "end": "166680"
  },
  {
    "text": "container image or oci build artifacts",
    "start": "166680",
    "end": "168959"
  },
  {
    "text": "are pushed to container Registries for",
    "start": "168959",
    "end": "170760"
  },
  {
    "text": "later use",
    "start": "170760",
    "end": "172319"
  },
  {
    "text": "then when the code change is ready to go",
    "start": "172319",
    "end": "174599"
  },
  {
    "text": "live continuous deployment creates or",
    "start": "174599",
    "end": "176700"
  },
  {
    "text": "updates kubernetes API resources to use",
    "start": "176700",
    "end": "179220"
  },
  {
    "text": "the updated container images and",
    "start": "179220",
    "end": "181019"
  },
  {
    "text": "configuration",
    "start": "181019",
    "end": "182879"
  },
  {
    "text": "these workloads are managed by the",
    "start": "182879",
    "end": "184620"
  },
  {
    "text": "kubernetes control plane and are",
    "start": "184620",
    "end": "186360"
  },
  {
    "text": "eventually scheduled as pods and",
    "start": "186360",
    "end": "187800"
  },
  {
    "text": "kubernetes nodes where the container",
    "start": "187800",
    "end": "189660"
  },
  {
    "text": "images we've built are finally pulled",
    "start": "189660",
    "end": "191580"
  },
  {
    "text": "and run",
    "start": "191580",
    "end": "193440"
  },
  {
    "text": "internal software Supply chains like",
    "start": "193440",
    "end": "195239"
  },
  {
    "text": "this one are composed of many parts and",
    "start": "195239",
    "end": "197159"
  },
  {
    "text": "your trusts in each of these parts may",
    "start": "197159",
    "end": "198599"
  },
  {
    "text": "vary",
    "start": "198599",
    "end": "200040"
  },
  {
    "text": "for example some parts may be more",
    "start": "200040",
    "end": "202620"
  },
  {
    "text": "exposed to human operator access which",
    "start": "202620",
    "end": "204959"
  },
  {
    "text": "can be a source of weakness in the",
    "start": "204959",
    "end": "206760"
  },
  {
    "text": "supply chain if an employee laptop is",
    "start": "206760",
    "end": "208980"
  },
  {
    "text": "compromised",
    "start": "208980",
    "end": "211440"
  },
  {
    "text": "citing and verifying images in your",
    "start": "211440",
    "end": "213300"
  },
  {
    "text": "internal software supply chain allows",
    "start": "213300",
    "end": "215159"
  },
  {
    "text": "you to reduce your trust in each of",
    "start": "215159",
    "end": "216659"
  },
  {
    "text": "these software delivery components so",
    "start": "216659",
    "end": "218640"
  },
  {
    "text": "your production infrastructure and data",
    "start": "218640",
    "end": "220260"
  },
  {
    "text": "is not automatically at risk if one",
    "start": "220260",
    "end": "222480"
  },
  {
    "text": "component of your delivery pipeline is",
    "start": "222480",
    "end": "224400"
  },
  {
    "text": "compromised",
    "start": "224400",
    "end": "225959"
  },
  {
    "text": "for example if you're signing container",
    "start": "225959",
    "end": "228480"
  },
  {
    "text": "images you're substantially protected",
    "start": "228480",
    "end": "230159"
  },
  {
    "text": "against compromise of the container",
    "start": "230159",
    "end": "231720"
  },
  {
    "text": "registry",
    "start": "231720",
    "end": "234000"
  },
  {
    "text": "ideally you sign images in CI as soon as",
    "start": "234000",
    "end": "237000"
  },
  {
    "text": "possible after they're created using",
    "start": "237000",
    "end": "238860"
  },
  {
    "text": "keys only available to CI",
    "start": "238860",
    "end": "241440"
  },
  {
    "text": "this signature then represents an",
    "start": "241440",
    "end": "243120"
  },
  {
    "text": "attestation of provenance authenticating",
    "start": "243120",
    "end": "245280"
  },
  {
    "text": "that the image came from CI",
    "start": "245280",
    "end": "247920"
  },
  {
    "text": "then every time the image is used or",
    "start": "247920",
    "end": "250439"
  },
  {
    "text": "referenced later on in the software",
    "start": "250439",
    "end": "252000"
  },
  {
    "text": "supply chain verifying the image",
    "start": "252000",
    "end": "253980"
  },
  {
    "text": "signature allows you to reduce trust in",
    "start": "253980",
    "end": "256320"
  },
  {
    "text": "each of the components in between",
    "start": "256320",
    "end": "259019"
  },
  {
    "text": "the general idea is that the closer to",
    "start": "259019",
    "end": "261479"
  },
  {
    "text": "run time you verify image signatures the",
    "start": "261479",
    "end": "263940"
  },
  {
    "text": "fewer components of your software supply",
    "start": "263940",
    "end": "265440"
  },
  {
    "text": "chain you need to fully trust",
    "start": "265440",
    "end": "269000"
  },
  {
    "start": "269000",
    "end": "324000"
  },
  {
    "text": "now once you've decided to sign and",
    "start": "270360",
    "end": "272220"
  },
  {
    "text": "verify images to protect your build and",
    "start": "272220",
    "end": "274080"
  },
  {
    "text": "release pipelines what tools are out",
    "start": "274080",
    "end": "276120"
  },
  {
    "text": "there to start signing",
    "start": "276120",
    "end": "277860"
  },
  {
    "text": "six stores cosine tool is of course one",
    "start": "277860",
    "end": "280020"
  },
  {
    "text": "option but I think it's useful to",
    "start": "280020",
    "end": "281880"
  },
  {
    "text": "understand the context around Sig store",
    "start": "281880",
    "end": "283680"
  },
  {
    "text": "so you can make an informed choice about",
    "start": "283680",
    "end": "285960"
  },
  {
    "text": "how to sign images for your particular",
    "start": "285960",
    "end": "287699"
  },
  {
    "text": "situation",
    "start": "287699",
    "end": "289380"
  },
  {
    "text": "the reason for this and the thesis of my",
    "start": "289380",
    "end": "291780"
  },
  {
    "text": "presentation is that there's no one",
    "start": "291780",
    "end": "293580"
  },
  {
    "text": "right way to sign an image",
    "start": "293580",
    "end": "295380"
  },
  {
    "text": "a signature on its own is a very little",
    "start": "295380",
    "end": "297360"
  },
  {
    "text": "value",
    "start": "297360",
    "end": "298380"
  },
  {
    "text": "the real value is in verifying the",
    "start": "298380",
    "end": "300419"
  },
  {
    "text": "signature and in doing so at the right",
    "start": "300419",
    "end": "302280"
  },
  {
    "text": "point in time",
    "start": "302280",
    "end": "304440"
  },
  {
    "text": "therefore the best choice for you will",
    "start": "304440",
    "end": "306660"
  },
  {
    "text": "heavily depend on who or what service is",
    "start": "306660",
    "end": "309479"
  },
  {
    "text": "verifying your image signature in other",
    "start": "309479",
    "end": "311460"
  },
  {
    "text": "contextual factors",
    "start": "311460",
    "end": "313500"
  },
  {
    "text": "this means that if you're signing both",
    "start": "313500",
    "end": "315540"
  },
  {
    "text": "internal images or an open source or",
    "start": "315540",
    "end": "318060"
  },
  {
    "text": "customer facing images your strategy",
    "start": "318060",
    "end": "320460"
  },
  {
    "text": "might look different for both situations",
    "start": "320460",
    "end": "324199"
  },
  {
    "start": "324000",
    "end": "343000"
  },
  {
    "text": "so with that in mind we're going to",
    "start": "325039",
    "end": "327960"
  },
  {
    "text": "survey the tools out there for signing",
    "start": "327960",
    "end": "329639"
  },
  {
    "text": "images",
    "start": "329639",
    "end": "331320"
  },
  {
    "text": "for each of the Technologies we'll",
    "start": "331320",
    "end": "333000"
  },
  {
    "text": "discuss at a high level how it works how",
    "start": "333000",
    "end": "335400"
  },
  {
    "text": "it fits with datadog's internal image",
    "start": "335400",
    "end": "337139"
  },
  {
    "text": "signing and verification use case",
    "start": "337139",
    "end": "339240"
  },
  {
    "text": "and when it might be a good fit for",
    "start": "339240",
    "end": "340860"
  },
  {
    "text": "other use cases",
    "start": "340860",
    "end": "343638"
  },
  {
    "start": "343000",
    "end": "485000"
  },
  {
    "text": "darker content trust was one of the",
    "start": "345539",
    "end": "347340"
  },
  {
    "text": "first systems introduced for assigning",
    "start": "347340",
    "end": "349259"
  },
  {
    "text": "container images",
    "start": "349259",
    "end": "350639"
  },
  {
    "text": "it was released by Docker back in 2015",
    "start": "350639",
    "end": "352800"
  },
  {
    "text": "and backed fight architecture called",
    "start": "352800",
    "end": "354600"
  },
  {
    "text": "Nettery V1",
    "start": "354600",
    "end": "356639"
  },
  {
    "text": "notary V1 is based on the update",
    "start": "356639",
    "end": "359039"
  },
  {
    "text": "framework which is the model for",
    "start": "359039",
    "end": "360600"
  },
  {
    "text": "building software update systems that",
    "start": "360600",
    "end": "362400"
  },
  {
    "text": "are resistant to a variety of nuanced",
    "start": "362400",
    "end": "364139"
  },
  {
    "text": "attacks",
    "start": "364139",
    "end": "365340"
  },
  {
    "text": "notary's architecture consists of an API",
    "start": "365340",
    "end": "367620"
  },
  {
    "text": "server and database that's sit next to",
    "start": "367620",
    "end": "369780"
  },
  {
    "text": "the container registry",
    "start": "369780",
    "end": "371880"
  },
  {
    "text": "notary was a good start for image",
    "start": "371880",
    "end": "373380"
  },
  {
    "text": "signing but there were some issues with",
    "start": "373380",
    "end": "375060"
  },
  {
    "text": "the design and implementation that",
    "start": "375060",
    "end": "376500"
  },
  {
    "text": "hindered adoption",
    "start": "376500",
    "end": "378240"
  },
  {
    "text": "however the project yielded a lot of",
    "start": "378240",
    "end": "380520"
  },
  {
    "text": "real world lessons to inform future",
    "start": "380520",
    "end": "382319"
  },
  {
    "text": "designs",
    "start": "382319",
    "end": "384300"
  },
  {
    "text": "for example one of the shortcomings of",
    "start": "384300",
    "end": "386819"
  },
  {
    "text": "notary is that the signatures live",
    "start": "386819",
    "end": "388440"
  },
  {
    "text": "outside the registry and a sidecar",
    "start": "388440",
    "end": "390360"
  },
  {
    "text": "service that managed its own route of",
    "start": "390360",
    "end": "392160"
  },
  {
    "text": "trust",
    "start": "392160",
    "end": "394020"
  },
  {
    "text": "this means that it's not easy to copy an",
    "start": "394020",
    "end": "396240"
  },
  {
    "text": "image and its signature between",
    "start": "396240",
    "end": "397620"
  },
  {
    "text": "Registries and how the signature still",
    "start": "397620",
    "end": "399780"
  },
  {
    "text": "be valid in the new registry",
    "start": "399780",
    "end": "402539"
  },
  {
    "text": "because using Docker content trust",
    "start": "402539",
    "end": "404460"
  },
  {
    "text": "requires the notary service in addition",
    "start": "404460",
    "end": "406440"
  },
  {
    "text": "to the registry itself and notary wasn't",
    "start": "406440",
    "end": "408660"
  },
  {
    "text": "implemented by most Cloud registries",
    "start": "408660",
    "end": "411060"
  },
  {
    "text": "you're also severely restricted with",
    "start": "411060",
    "end": "413160"
  },
  {
    "text": "what registries you can use to host your",
    "start": "413160",
    "end": "414900"
  },
  {
    "text": "signed images",
    "start": "414900",
    "end": "417380"
  },
  {
    "text": "for our internal image signing use case",
    "start": "417419",
    "end": "419220"
  },
  {
    "text": "at datadog this is the main reason why",
    "start": "419220",
    "end": "421380"
  },
  {
    "text": "notary V1 wouldn't make sense for us",
    "start": "421380",
    "end": "423900"
  },
  {
    "text": "in order to deploy to multiple",
    "start": "423900",
    "end": "425699"
  },
  {
    "text": "independent data centers each with many",
    "start": "425699",
    "end": "427500"
  },
  {
    "text": "kubernetes clusters we have a system",
    "start": "427500",
    "end": "429539"
  },
  {
    "text": "that replicates images across Cloud",
    "start": "429539",
    "end": "431400"
  },
  {
    "text": "registries",
    "start": "431400",
    "end": "433620"
  },
  {
    "text": "we may build inside an image in just one",
    "start": "433620",
    "end": "435660"
  },
  {
    "text": "registry but to support verifying that",
    "start": "435660",
    "end": "437880"
  },
  {
    "text": "image in every data center it runs we",
    "start": "437880",
    "end": "440280"
  },
  {
    "text": "need to be able to verify the image from",
    "start": "440280",
    "end": "441900"
  },
  {
    "text": "any registry it's copied to",
    "start": "441900",
    "end": "444000"
  },
  {
    "text": "so for datadog ease of signature",
    "start": "444000",
    "end": "446160"
  },
  {
    "text": "replication is one of the top",
    "start": "446160",
    "end": "447539"
  },
  {
    "text": "considerations for how we sign images",
    "start": "447539",
    "end": "449220"
  },
  {
    "text": "and notary V1 does not have good support",
    "start": "449220",
    "end": "451680"
  },
  {
    "text": "for this",
    "start": "451680",
    "end": "453599"
  },
  {
    "text": "the lesson here is that if you can use",
    "start": "453599",
    "end": "455759"
  },
  {
    "text": "the registry as the storage backend for",
    "start": "455759",
    "end": "457800"
  },
  {
    "text": "image signatures you can sign and verify",
    "start": "457800",
    "end": "460199"
  },
  {
    "text": "images in any registry without requiring",
    "start": "460199",
    "end": "462300"
  },
  {
    "text": "any changes from the registry provider",
    "start": "462300",
    "end": "465259"
  },
  {
    "text": "additionally if you separate your reader",
    "start": "465259",
    "end": "467759"
  },
  {
    "text": "trust from the registry it's a lot",
    "start": "467759",
    "end": "469979"
  },
  {
    "text": "easier to move signatures between",
    "start": "469979",
    "end": "471300"
  },
  {
    "text": "Registries to support modern",
    "start": "471300",
    "end": "472800"
  },
  {
    "text": "multi-registry deployment patterns",
    "start": "472800",
    "end": "476280"
  },
  {
    "text": "so in summary notary what's useful in",
    "start": "476280",
    "end": "479099"
  },
  {
    "text": "that informed future developments but",
    "start": "479099",
    "end": "481319"
  },
  {
    "text": "it's probably not the right choice for",
    "start": "481319",
    "end": "482819"
  },
  {
    "text": "new project",
    "start": "482819",
    "end": "485240"
  },
  {
    "start": "485000",
    "end": "669000"
  },
  {
    "text": "the graphase project which was",
    "start": "486660",
    "end": "488280"
  },
  {
    "text": "introduced by Google in 2017 is composed",
    "start": "488280",
    "end": "491520"
  },
  {
    "text": "of a suite of tools that are meant to",
    "start": "491520",
    "end": "493139"
  },
  {
    "text": "provide a general purpose solution for",
    "start": "493139",
    "end": "495240"
  },
  {
    "text": "auditing and governance of the software",
    "start": "495240",
    "end": "496860"
  },
  {
    "text": "development lifecycle",
    "start": "496860",
    "end": "498660"
  },
  {
    "text": "it aims to tackle more than just",
    "start": "498660",
    "end": "500580"
  },
  {
    "text": "container image signing",
    "start": "500580",
    "end": "502680"
  },
  {
    "text": "graphase is an artifact metadata API",
    "start": "502680",
    "end": "505139"
  },
  {
    "text": "that represents structured events that",
    "start": "505139",
    "end": "507000"
  },
  {
    "text": "occur throughout the software",
    "start": "507000",
    "end": "508080"
  },
  {
    "text": "development life cycle",
    "start": "508080",
    "end": "509819"
  },
  {
    "text": "these events could be things like the",
    "start": "509819",
    "end": "511620"
  },
  {
    "text": "result of a vulnerability scan for a",
    "start": "511620",
    "end": "513599"
  },
  {
    "text": "container image or at a station that a",
    "start": "513599",
    "end": "515580"
  },
  {
    "text": "build artifact came from a trusted",
    "start": "515580",
    "end": "517140"
  },
  {
    "text": "system",
    "start": "517140",
    "end": "519380"
  },
  {
    "text": "these events can optionally be signed",
    "start": "519539",
    "end": "521279"
  },
  {
    "text": "using pgp to create a cryptographic",
    "start": "521279",
    "end": "523380"
  },
  {
    "text": "attestation that the event occurred",
    "start": "523380",
    "end": "526140"
  },
  {
    "text": "this kind of out of station is a bit",
    "start": "526140",
    "end": "527880"
  },
  {
    "text": "more flexible than what a basic image",
    "start": "527880",
    "end": "529560"
  },
  {
    "text": "signature provides and that it conveys",
    "start": "529560",
    "end": "531600"
  },
  {
    "text": "not just whether the image is authentic",
    "start": "531600",
    "end": "533220"
  },
  {
    "text": "or not but that certain steps were taken",
    "start": "533220",
    "end": "535500"
  },
  {
    "text": "in creating the image",
    "start": "535500",
    "end": "537779"
  },
  {
    "text": "some of the cost of this flexibility is",
    "start": "537779",
    "end": "540360"
  },
  {
    "text": "paid by the verifier of the image",
    "start": "540360",
    "end": "542580"
  },
  {
    "text": "rather than just verifying a Boolean",
    "start": "542580",
    "end": "544440"
  },
  {
    "text": "status is this image okay or not or not",
    "start": "544440",
    "end": "547740"
  },
  {
    "text": "the client would need to verify a more",
    "start": "547740",
    "end": "549660"
  },
  {
    "text": "detailed policy potentially checking",
    "start": "549660",
    "end": "551519"
  },
  {
    "text": "several attributes about the image",
    "start": "551519",
    "end": "555019"
  },
  {
    "text": "the metadata in graphase is intended to",
    "start": "555360",
    "end": "557339"
  },
  {
    "text": "be verified using critis which is a",
    "start": "557339",
    "end": "559680"
  },
  {
    "text": "kubernetes admission controller that",
    "start": "559680",
    "end": "561420"
  },
  {
    "text": "verifies customizable policies about",
    "start": "561420",
    "end": "563820"
  },
  {
    "text": "your images before admitting workloads",
    "start": "563820",
    "end": "565680"
  },
  {
    "text": "to the cluster",
    "start": "565680",
    "end": "567600"
  },
  {
    "text": "so how do you evaluate if graphase is a",
    "start": "567600",
    "end": "570420"
  },
  {
    "text": "good choice for you to sign container",
    "start": "570420",
    "end": "571860"
  },
  {
    "text": "images",
    "start": "571860",
    "end": "572760"
  },
  {
    "text": "this largely depends on how you intend",
    "start": "572760",
    "end": "574800"
  },
  {
    "text": "to verify the signatures",
    "start": "574800",
    "end": "577800"
  },
  {
    "text": "if you're releasing images publicly and",
    "start": "577800",
    "end": "579660"
  },
  {
    "text": "your customers will be verifying your",
    "start": "579660",
    "end": "581100"
  },
  {
    "text": "signatures on their own infrastructure",
    "start": "581100",
    "end": "582680"
  },
  {
    "text": "graphase is probably not the right",
    "start": "582680",
    "end": "584519"
  },
  {
    "text": "choice",
    "start": "584519",
    "end": "585720"
  },
  {
    "text": "it doesn't provide any mechanism for",
    "start": "585720",
    "end": "587700"
  },
  {
    "text": "public key Discovery and as far as I'm",
    "start": "587700",
    "end": "589740"
  },
  {
    "text": "aware the API is not meant to be exposed",
    "start": "589740",
    "end": "591959"
  },
  {
    "text": "outside of internal infrastructure",
    "start": "591959",
    "end": "595560"
  },
  {
    "text": "however if you're using Google's managed",
    "start": "595560",
    "end": "597779"
  },
  {
    "text": "kubernetes product gke",
    "start": "597779",
    "end": "600060"
  },
  {
    "text": "graphase might be easy to adopt since",
    "start": "600060",
    "end": "602399"
  },
  {
    "text": "gke has first party Integrations with",
    "start": "602399",
    "end": "604800"
  },
  {
    "text": "graphase and Curtis",
    "start": "604800",
    "end": "607380"
  },
  {
    "text": "one final thing to note is that graphius",
    "start": "607380",
    "end": "610080"
  },
  {
    "text": "uses pgp signatures which presents a",
    "start": "610080",
    "end": "612600"
  },
  {
    "text": "number of problems both in ergonomics",
    "start": "612600",
    "end": "614399"
  },
  {
    "text": "and in security",
    "start": "614399",
    "end": "616140"
  },
  {
    "text": "for example you probably won't be able",
    "start": "616140",
    "end": "618120"
  },
  {
    "text": "to use any Cloud HSM to securely store",
    "start": "618120",
    "end": "620700"
  },
  {
    "text": "and manage pgp signing keys",
    "start": "620700",
    "end": "623519"
  },
  {
    "text": "modern cryptography can be much safer",
    "start": "623519",
    "end": "625980"
  },
  {
    "text": "than pgp so it's likely not the right",
    "start": "625980",
    "end": "628260"
  },
  {
    "text": "choice for new projects",
    "start": "628260",
    "end": "631339"
  },
  {
    "text": "at datadog we decided to pass on",
    "start": "631980",
    "end": "633779"
  },
  {
    "text": "graphase for several reasons first we",
    "start": "633779",
    "end": "636240"
  },
  {
    "text": "wanted to use better cryptography than",
    "start": "636240",
    "end": "637860"
  },
  {
    "text": "pgp ideally something that would be",
    "start": "637860",
    "end": "640140"
  },
  {
    "text": "supported by hydrocort bolts transit",
    "start": "640140",
    "end": "642060"
  },
  {
    "text": "secrets engine",
    "start": "642060",
    "end": "643620"
  },
  {
    "text": "additionally we preferred using the",
    "start": "643620",
    "end": "645839"
  },
  {
    "text": "registry as the storage backend for",
    "start": "645839",
    "end": "647579"
  },
  {
    "text": "Signature metadata since as I mentioned",
    "start": "647579",
    "end": "649860"
  },
  {
    "text": "when discussing notary V1 this makes",
    "start": "649860",
    "end": "652380"
  },
  {
    "text": "cross data center data replication work",
    "start": "652380",
    "end": "654779"
  },
  {
    "text": "the same way as how we distribute images",
    "start": "654779",
    "end": "656700"
  },
  {
    "text": "it's just one less service to operate",
    "start": "656700",
    "end": "660600"
  },
  {
    "text": "finally we manage our own kubernetes",
    "start": "660600",
    "end": "662820"
  },
  {
    "text": "clusters across multiple Cloud providers",
    "start": "662820",
    "end": "664860"
  },
  {
    "text": "so we wouldn't benefit from the gke",
    "start": "664860",
    "end": "666899"
  },
  {
    "text": "integration",
    "start": "666899",
    "end": "669620"
  },
  {
    "start": "669000",
    "end": "776000"
  },
  {
    "text": "the notary V2 project is an evolution of",
    "start": "670339",
    "end": "673320"
  },
  {
    "text": "notary V1 which began in 2019 aiming to",
    "start": "673320",
    "end": "676500"
  },
  {
    "text": "fix the issues discovered in the docker",
    "start": "676500",
    "end": "678600"
  },
  {
    "text": "content trust rollout",
    "start": "678600",
    "end": "681260"
  },
  {
    "text": "notary V2 supports signing images using",
    "start": "681260",
    "end": "684120"
  },
  {
    "text": "x509 based pki the signature metadata is",
    "start": "684120",
    "end": "687839"
  },
  {
    "text": "stored in the registry alongside the",
    "start": "687839",
    "end": "689640"
  },
  {
    "text": "signed images",
    "start": "689640",
    "end": "691680"
  },
  {
    "text": "to link signature artifacts with the",
    "start": "691680",
    "end": "693600"
  },
  {
    "text": "images they sign notary V2 uses a new",
    "start": "693600",
    "end": "696360"
  },
  {
    "text": "part of the oci spec called refers",
    "start": "696360",
    "end": "699600"
  },
  {
    "text": "this is probably a good choice in the",
    "start": "699600",
    "end": "701220"
  },
  {
    "text": "long term because it lets the registry",
    "start": "701220",
    "end": "702839"
  },
  {
    "text": "know about the dependency between the",
    "start": "702839",
    "end": "704700"
  },
  {
    "text": "signature and the image which makes",
    "start": "704700",
    "end": "706440"
  },
  {
    "text": "lifecycle operations more reliable",
    "start": "706440",
    "end": "709800"
  },
  {
    "text": "however because the referrer's API is so",
    "start": "709800",
    "end": "712740"
  },
  {
    "text": "new it lacks widespread registry support",
    "start": "712740",
    "end": "716420"
  },
  {
    "text": "notary V2 is still in the alpha stages",
    "start": "716420",
    "end": "718980"
  },
  {
    "text": "and it's looking promising but it's not",
    "start": "718980",
    "end": "721079"
  },
  {
    "text": "production ready yet",
    "start": "721079",
    "end": "723420"
  },
  {
    "text": "so what's standing in the way of notary",
    "start": "723420",
    "end": "725040"
  },
  {
    "text": "V2 in production echoing the theme of",
    "start": "725040",
    "end": "727860"
  },
  {
    "text": "this whole talk that really depends on",
    "start": "727860",
    "end": "729600"
  },
  {
    "text": "the verification context",
    "start": "729600",
    "end": "731579"
  },
  {
    "text": "in a public context notary V2 is still",
    "start": "731579",
    "end": "734339"
  },
  {
    "text": "missing a certificate Authority or a",
    "start": "734339",
    "end": "736320"
  },
  {
    "text": "mechanism for public key discovery",
    "start": "736320",
    "end": "738839"
  },
  {
    "text": "so while it may be possible to perform",
    "start": "738839",
    "end": "740459"
  },
  {
    "text": "the signing and verification operations",
    "start": "740459",
    "end": "742500"
  },
  {
    "text": "it's unclear how users of your images",
    "start": "742500",
    "end": "745140"
  },
  {
    "text": "are supposed to know what public keys to",
    "start": "745140",
    "end": "747000"
  },
  {
    "text": "use for verification",
    "start": "747000",
    "end": "749120"
  },
  {
    "text": "in a private context like in a",
    "start": "749120",
    "end": "751620"
  },
  {
    "text": "kubernetes admission controller notary",
    "start": "751620",
    "end": "753839"
  },
  {
    "text": "V2 could work without the complexity of",
    "start": "753839",
    "end": "755700"
  },
  {
    "text": "a certificate Authority",
    "start": "755700",
    "end": "757500"
  },
  {
    "text": "with the ability to control all the",
    "start": "757500",
    "end": "759300"
  },
  {
    "text": "verification clients you may be able to",
    "start": "759300",
    "end": "761100"
  },
  {
    "text": "configure each of the verifiers directly",
    "start": "761100",
    "end": "762899"
  },
  {
    "text": "using self-signed certificates",
    "start": "762899",
    "end": "766320"
  },
  {
    "text": "however there's not an off-the-shelf",
    "start": "766320",
    "end": "768180"
  },
  {
    "text": "solution I'm aware of to verify notary",
    "start": "768180",
    "end": "770279"
  },
  {
    "text": "V2 signatures within an environment like",
    "start": "770279",
    "end": "772440"
  },
  {
    "text": "kubernetes so this is something that",
    "start": "772440",
    "end": "774300"
  },
  {
    "text": "still needs to be implemented",
    "start": "774300",
    "end": "777060"
  },
  {
    "start": "776000",
    "end": "860000"
  },
  {
    "text": "before we get to talking about cosine",
    "start": "777060",
    "end": "779160"
  },
  {
    "text": "and the rest of sixstore I want to",
    "start": "779160",
    "end": "781139"
  },
  {
    "text": "quickly mention how the update framework",
    "start": "781139",
    "end": "782579"
  },
  {
    "text": "fits into this picture",
    "start": "782579",
    "end": "784440"
  },
  {
    "text": "the update framework abbreviated as",
    "start": "784440",
    "end": "786540"
  },
  {
    "text": "tough is a framework for building secure",
    "start": "786540",
    "end": "788820"
  },
  {
    "text": "software update systems",
    "start": "788820",
    "end": "790620"
  },
  {
    "text": "it includes a number of freshness and",
    "start": "790620",
    "end": "792360"
  },
  {
    "text": "snapshot consistency measures that make",
    "start": "792360",
    "end": "794339"
  },
  {
    "text": "updates resistant to a variety of subtle",
    "start": "794339",
    "end": "796320"
  },
  {
    "text": "attacks",
    "start": "796320",
    "end": "797519"
  },
  {
    "text": "for example it protects against rollback",
    "start": "797519",
    "end": "799680"
  },
  {
    "text": "attacks in which an attacker rolls back",
    "start": "799680",
    "end": "801839"
  },
  {
    "text": "software versions to a previously valid",
    "start": "801839",
    "end": "804180"
  },
  {
    "text": "and signed version that had some",
    "start": "804180",
    "end": "806040"
  },
  {
    "text": "exploitable vulnerability",
    "start": "806040",
    "end": "808860"
  },
  {
    "text": "notary V2 was based on tough and six",
    "start": "808860",
    "end": "811139"
  },
  {
    "text": "door even uses tough for certain aspects",
    "start": "811139",
    "end": "813120"
  },
  {
    "text": "of Key Management",
    "start": "813120",
    "end": "814500"
  },
  {
    "text": "however it's conceivable that you could",
    "start": "814500",
    "end": "816600"
  },
  {
    "text": "use tough for the whole image signing",
    "start": "816600",
    "end": "818279"
  },
  {
    "text": "and verification process",
    "start": "818279",
    "end": "820620"
  },
  {
    "text": "a data dog we gave us an Earnest try and",
    "start": "820620",
    "end": "822839"
  },
  {
    "text": "implemented a proof of concept but",
    "start": "822839",
    "end": "825240"
  },
  {
    "text": "ultimately we found that there was a",
    "start": "825240",
    "end": "826680"
  },
  {
    "text": "mismatch in the threat model",
    "start": "826680",
    "end": "829019"
  },
  {
    "text": "tough snapshot feature which is meant to",
    "start": "829019",
    "end": "831060"
  },
  {
    "text": "make sure a client has complete and",
    "start": "831060",
    "end": "832680"
  },
  {
    "text": "up-to-date set of trusted files and no",
    "start": "832680",
    "end": "834839"
  },
  {
    "text": "more doesn't easily apply its image",
    "start": "834839",
    "end": "836760"
  },
  {
    "text": "registries",
    "start": "836760",
    "end": "838200"
  },
  {
    "text": "I won't go into too much detail here but",
    "start": "838200",
    "end": "840120"
  },
  {
    "text": "we found that snapshotting brought a lot",
    "start": "840120",
    "end": "841740"
  },
  {
    "text": "of complexity that didn't deliver",
    "start": "841740",
    "end": "843240"
  },
  {
    "text": "concrete value we can map to our",
    "start": "843240",
    "end": "845160"
  },
  {
    "text": "internal registry threat model",
    "start": "845160",
    "end": "847920"
  },
  {
    "text": "however the idea still has potential",
    "start": "847920",
    "end": "850560"
  },
  {
    "text": "with more work",
    "start": "850560",
    "end": "851940"
  },
  {
    "text": "in the notary tough project there's an",
    "start": "851940",
    "end": "854279"
  },
  {
    "text": "ongoing effort to adapt tough to image",
    "start": "854279",
    "end": "856320"
  },
  {
    "text": "Registries but this is still on the",
    "start": "856320",
    "end": "858240"
  },
  {
    "text": "proof of concept phase",
    "start": "858240",
    "end": "861200"
  },
  {
    "start": "860000",
    "end": "938000"
  },
  {
    "text": "so this brings us to cosine and the rest",
    "start": "862320",
    "end": "864300"
  },
  {
    "text": "of sixstore",
    "start": "864300",
    "end": "865920"
  },
  {
    "text": "cosine signatures are conceptually",
    "start": "865920",
    "end": "867600"
  },
  {
    "text": "pretty close to notary V2s",
    "start": "867600",
    "end": "869880"
  },
  {
    "text": "the signing format in payload is",
    "start": "869880",
    "end": "871560"
  },
  {
    "text": "slightly different but like Knitter",
    "start": "871560",
    "end": "873120"
  },
  {
    "text": "review 2 the signature image is written",
    "start": "873120",
    "end": "875700"
  },
  {
    "text": "to the registry",
    "start": "875700",
    "end": "877320"
  },
  {
    "text": "cosine Loosely couples the image and its",
    "start": "877320",
    "end": "879720"
  },
  {
    "text": "signature using a predictable tag naming",
    "start": "879720",
    "end": "881940"
  },
  {
    "text": "pattern which gives it broad registry",
    "start": "881940",
    "end": "883800"
  },
  {
    "text": "support",
    "start": "883800",
    "end": "885199"
  },
  {
    "text": "signature sets itself apart from the",
    "start": "885199",
    "end": "887399"
  },
  {
    "text": "competition and open source image",
    "start": "887399",
    "end": "889139"
  },
  {
    "text": "signing by including an easy to use",
    "start": "889139",
    "end": "890820"
  },
  {
    "text": "certificate Authority called falsio that",
    "start": "890820",
    "end": "893339"
  },
  {
    "text": "issues short-lived certificates to",
    "start": "893339",
    "end": "894899"
  },
  {
    "text": "signers based on their oidc identity",
    "start": "894899",
    "end": "898019"
  },
  {
    "text": "recoremates makes the signatures",
    "start": "898019",
    "end": "900180"
  },
  {
    "text": "auditable and verifiable past the",
    "start": "900180",
    "end": "902519"
  },
  {
    "text": "certificate expiration",
    "start": "902519",
    "end": "904560"
  },
  {
    "text": "so there's no need to resign images or",
    "start": "904560",
    "end": "907199"
  },
  {
    "text": "rotate keys",
    "start": "907199",
    "end": "909360"
  },
  {
    "text": "as a signer in cases where your CI has",
    "start": "909360",
    "end": "912060"
  },
  {
    "text": "an oidc workload identity like in GitHub",
    "start": "912060",
    "end": "914579"
  },
  {
    "text": "actions",
    "start": "914579",
    "end": "915660"
  },
  {
    "text": "this means that without any of your own",
    "start": "915660",
    "end": "917579"
  },
  {
    "text": "key management you can use a short-lived",
    "start": "917579",
    "end": "919980"
  },
  {
    "text": "certificate that is cryptographically",
    "start": "919980",
    "end": "921540"
  },
  {
    "text": "tied to a CI job",
    "start": "921540",
    "end": "924540"
  },
  {
    "text": "on the verifier side this also lends",
    "start": "924540",
    "end": "926940"
  },
  {
    "text": "itself really well to public key",
    "start": "926940",
    "end": "928320"
  },
  {
    "text": "Discovery since if you trust six Source",
    "start": "928320",
    "end": "930959"
  },
  {
    "text": "routes then you just have to verify an",
    "start": "930959",
    "end": "932820"
  },
  {
    "text": "email address instead of keeping track",
    "start": "932820",
    "end": "934800"
  },
  {
    "text": "of public keys for each software",
    "start": "934800",
    "end": "936480"
  },
  {
    "text": "publisher",
    "start": "936480",
    "end": "938940"
  },
  {
    "text": "these components will be covered in more",
    "start": "938940",
    "end": "940500"
  },
  {
    "text": "detail throughout the conference today",
    "start": "940500",
    "end": "942060"
  },
  {
    "text": "but together full Co and recore make",
    "start": "942060",
    "end": "944940"
  },
  {
    "text": "cosine a really ergonomic choice for",
    "start": "944940",
    "end": "946800"
  },
  {
    "text": "signing and verifying open source images",
    "start": "946800",
    "end": "949920"
  },
  {
    "text": "however it's a little more nuanced if",
    "start": "949920",
    "end": "952380"
  },
  {
    "text": "you're assigning for internal",
    "start": "952380",
    "end": "953519"
  },
  {
    "text": "verification",
    "start": "953519",
    "end": "954899"
  },
  {
    "text": "for internal signature verification",
    "start": "954899",
    "end": "956720"
  },
  {
    "text": "organizations may prefer to have a",
    "start": "956720",
    "end": "958980"
  },
  {
    "text": "private read of trust rather than using",
    "start": "958980",
    "end": "960899"
  },
  {
    "text": "six stores",
    "start": "960899",
    "end": "962459"
  },
  {
    "text": "additionally using record does by Design",
    "start": "962459",
    "end": "964980"
  },
  {
    "text": "make certain information about your",
    "start": "964980",
    "end": "966600"
  },
  {
    "text": "usage public such as how many artifacts",
    "start": "966600",
    "end": "968880"
  },
  {
    "text": "you're signing",
    "start": "968880",
    "end": "970079"
  },
  {
    "text": "this may not be a problem for you but if",
    "start": "970079",
    "end": "972180"
  },
  {
    "text": "it is then you'll need to implement your",
    "start": "972180",
    "end": "974160"
  },
  {
    "text": "own key management for cosine that means",
    "start": "974160",
    "end": "976980"
  },
  {
    "text": "you'll need to think about key lifetimes",
    "start": "976980",
    "end": "978779"
  },
  {
    "text": "and rotation hyal resign images already",
    "start": "978779",
    "end": "981540"
  },
  {
    "text": "running on your infrastructure to keep",
    "start": "981540",
    "end": "983279"
  },
  {
    "text": "them valid and how you'll secure",
    "start": "983279",
    "end": "985260"
  },
  {
    "text": "securely distribute public keys to all",
    "start": "985260",
    "end": "988019"
  },
  {
    "text": "of your verification clients",
    "start": "988019",
    "end": "991100"
  },
  {
    "text": "so as always there are trade-offs and if",
    "start": "991100",
    "end": "994380"
  },
  {
    "text": "you do decide to use cosine how you use",
    "start": "994380",
    "end": "996540"
  },
  {
    "text": "it will largely depend on who or what",
    "start": "996540",
    "end": "998699"
  },
  {
    "text": "services you expect to be doing the",
    "start": "998699",
    "end": "1000259"
  },
  {
    "text": "verification",
    "start": "1000259",
    "end": "1001940"
  },
  {
    "text": "and it's crucially important that you",
    "start": "1001940",
    "end": "1003380"
  },
  {
    "text": "think about how verification will work",
    "start": "1003380",
    "end": "1004940"
  },
  {
    "text": "and that you make it easy because an",
    "start": "1004940",
    "end": "1007399"
  },
  {
    "text": "image signature that's not actually",
    "start": "1007399",
    "end": "1008600"
  },
  {
    "text": "verified is of little value",
    "start": "1008600",
    "end": "1012100"
  },
  {
    "start": "1011000",
    "end": "1136000"
  },
  {
    "text": "so how are we using six direct datadog",
    "start": "1013100",
    "end": "1015199"
  },
  {
    "text": "today",
    "start": "1015199",
    "end": "1016279"
  },
  {
    "text": "we're trying out bits and pieces already",
    "start": "1016279",
    "end": "1017959"
  },
  {
    "text": "like recording tough time stamps to",
    "start": "1017959",
    "end": "1020120"
  },
  {
    "text": "record in the data log agent",
    "start": "1020120",
    "end": "1021980"
  },
  {
    "text": "Integrations pipeline",
    "start": "1021980",
    "end": "1023660"
  },
  {
    "text": "we're also planning on signing our open",
    "start": "1023660",
    "end": "1025520"
  },
  {
    "text": "source images using cosine once certain",
    "start": "1025520",
    "end": "1028040"
  },
  {
    "text": "Key Management features become available",
    "start": "1028040",
    "end": "1029660"
  },
  {
    "text": "for large open source projects",
    "start": "1029660",
    "end": "1032298"
  },
  {
    "text": "we'd like our customers to be able to",
    "start": "1032299",
    "end": "1034100"
  },
  {
    "text": "verify our image signatures with minimal",
    "start": "1034100",
    "end": "1036079"
  },
  {
    "text": "configuration of their cosign client",
    "start": "1036079",
    "end": "1038839"
  },
  {
    "text": "there are some features in the works to",
    "start": "1038839",
    "end": "1040520"
  },
  {
    "text": "help accomplish this like something",
    "start": "1040520",
    "end": "1042079"
  },
  {
    "text": "called six door Trust delegations",
    "start": "1042079",
    "end": "1045678"
  },
  {
    "text": "for internal image signing which has",
    "start": "1045679",
    "end": "1047418"
  },
  {
    "text": "been our primary focus our approach",
    "start": "1047419",
    "end": "1049400"
  },
  {
    "text": "looks very different",
    "start": "1049400",
    "end": "1050960"
  },
  {
    "text": "when we began this project earlier this",
    "start": "1050960",
    "end": "1053299"
  },
  {
    "text": "year we decided that running folsio and",
    "start": "1053299",
    "end": "1055580"
  },
  {
    "text": "recore internally was hard to motivate",
    "start": "1055580",
    "end": "1058100"
  },
  {
    "text": "our internal service identity system",
    "start": "1058100",
    "end": "1060080"
  },
  {
    "text": "isn't compatible with full co-supported",
    "start": "1060080",
    "end": "1062480"
  },
  {
    "text": "identity providers so using the full",
    "start": "1062480",
    "end": "1064640"
  },
  {
    "text": "coca internally wouldn't make sense it's",
    "start": "1064640",
    "end": "1068000"
  },
  {
    "text": "easier for us to manage trusted Keys",
    "start": "1068000",
    "end": "1069799"
  },
  {
    "text": "directly",
    "start": "1069799",
    "end": "1071600"
  },
  {
    "text": "additionally running a transparent log",
    "start": "1071600",
    "end": "1074000"
  },
  {
    "text": "like recore internally didn't make sense",
    "start": "1074000",
    "end": "1076039"
  },
  {
    "text": "for us",
    "start": "1076039",
    "end": "1076940"
  },
  {
    "text": "in our situation there are easier means",
    "start": "1076940",
    "end": "1079160"
  },
  {
    "text": "available to us if we find we need",
    "start": "1079160",
    "end": "1081080"
  },
  {
    "text": "internal tamper-proof logging",
    "start": "1081080",
    "end": "1083419"
  },
  {
    "text": "for example we could use an S3 bucket",
    "start": "1083419",
    "end": "1086120"
  },
  {
    "text": "with the right once read mini setting",
    "start": "1086120",
    "end": "1088400"
  },
  {
    "text": "enabled which makes the bucket",
    "start": "1088400",
    "end": "1090140"
  },
  {
    "text": "effectively immutable with no need for",
    "start": "1090140",
    "end": "1092179"
  },
  {
    "text": "complex auditing setups",
    "start": "1092179",
    "end": "1095080"
  },
  {
    "text": "this kind of immutable logging probably",
    "start": "1095080",
    "end": "1097400"
  },
  {
    "text": "wouldn't work as well in an open source",
    "start": "1097400",
    "end": "1099260"
  },
  {
    "text": "setting though so it's just an example",
    "start": "1099260",
    "end": "1100940"
  },
  {
    "text": "of how you can sometimes simplify your",
    "start": "1100940",
    "end": "1102679"
  },
  {
    "text": "approach internally to reduce complexity",
    "start": "1102679",
    "end": "1104900"
  },
  {
    "text": "and operational burden without losing",
    "start": "1104900",
    "end": "1106880"
  },
  {
    "text": "functionality",
    "start": "1106880",
    "end": "1109100"
  },
  {
    "text": "we also decided that running a timestamp",
    "start": "1109100",
    "end": "1111559"
  },
  {
    "text": "server like recore internally didn't",
    "start": "1111559",
    "end": "1113960"
  },
  {
    "text": "make sense for us",
    "start": "1113960",
    "end": "1115760"
  },
  {
    "text": "this is because the design of timestamp",
    "start": "1115760",
    "end": "1117620"
  },
  {
    "text": "servers makes the most sense when",
    "start": "1117620",
    "end": "1119960"
  },
  {
    "text": "they're run by a trusted third party",
    "start": "1119960",
    "end": "1121520"
  },
  {
    "text": "truly isolated from the environment",
    "start": "1121520",
    "end": "1123620"
  },
  {
    "text": "where the siding happens",
    "start": "1123620",
    "end": "1126140"
  },
  {
    "text": "for the basic image signing component we",
    "start": "1126140",
    "end": "1128780"
  },
  {
    "text": "also opted against using cosine",
    "start": "1128780",
    "end": "1131120"
  },
  {
    "text": "instead we're using the custom signing",
    "start": "1131120",
    "end": "1133220"
  },
  {
    "text": "service which I'll explain soon",
    "start": "1133220",
    "end": "1136659"
  },
  {
    "start": "1136000",
    "end": "1361000"
  },
  {
    "text": "our requirements for signing and",
    "start": "1137660",
    "end": "1139280"
  },
  {
    "text": "verifying images internally were as",
    "start": "1139280",
    "end": "1141140"
  },
  {
    "text": "follows",
    "start": "1141140",
    "end": "1142340"
  },
  {
    "text": "first we wanted an easy way to",
    "start": "1142340",
    "end": "1144919"
  },
  {
    "text": "encapsulate signing into an API service",
    "start": "1144919",
    "end": "1146900"
  },
  {
    "text": "in front of hash record fault which we",
    "start": "1146900",
    "end": "1149240"
  },
  {
    "text": "use internally for Secrets management",
    "start": "1149240",
    "end": "1152120"
  },
  {
    "text": "whereas a coastline client in CI would",
    "start": "1152120",
    "end": "1154340"
  },
  {
    "text": "call Vault directly we preferred to have",
    "start": "1154340",
    "end": "1156679"
  },
  {
    "text": "only one highly hardened monitored and",
    "start": "1156679",
    "end": "1158900"
  },
  {
    "text": "auditable signing service making those",
    "start": "1158900",
    "end": "1160820"
  },
  {
    "text": "requests to Vault",
    "start": "1160820",
    "end": "1162620"
  },
  {
    "text": "the reason for this is that even though",
    "start": "1162620",
    "end": "1164480"
  },
  {
    "text": "Vault has audit logs and the ability to",
    "start": "1164480",
    "end": "1166400"
  },
  {
    "text": "lock down client permissions it would be",
    "start": "1166400",
    "end": "1168740"
  },
  {
    "text": "difficult to interpret what payloads a",
    "start": "1168740",
    "end": "1170600"
  },
  {
    "text": "rogue CI job is signing just from Vault",
    "start": "1170600",
    "end": "1172820"
  },
  {
    "text": "audit logs",
    "start": "1172820",
    "end": "1174620"
  },
  {
    "text": "so we decided to have an RPC service do",
    "start": "1174620",
    "end": "1177559"
  },
  {
    "text": "the signing with Vault on behalf of",
    "start": "1177559",
    "end": "1179660"
  },
  {
    "text": "authorized CI workloads",
    "start": "1179660",
    "end": "1182720"
  },
  {
    "text": "this also makes integration with new",
    "start": "1182720",
    "end": "1184400"
  },
  {
    "text": "repos and updates easier since updating",
    "start": "1184400",
    "end": "1187100"
  },
  {
    "text": "image signing clients across many repos",
    "start": "1187100",
    "end": "1189140"
  },
  {
    "text": "would be a headache if the client",
    "start": "1189140",
    "end": "1190760"
  },
  {
    "text": "changed often",
    "start": "1190760",
    "end": "1192140"
  },
  {
    "text": "by making the client as simple as",
    "start": "1192140",
    "end": "1194000"
  },
  {
    "text": "possible deferring most of the work to",
    "start": "1194000",
    "end": "1196160"
  },
  {
    "text": "the signing service we considerably",
    "start": "1196160",
    "end": "1198260"
  },
  {
    "text": "reduce how often we'll need to update",
    "start": "1198260",
    "end": "1200179"
  },
  {
    "text": "signing clients across many repos",
    "start": "1200179",
    "end": "1203539"
  },
  {
    "text": "to implement an assigning service we",
    "start": "1203539",
    "end": "1205940"
  },
  {
    "text": "could have potentially used cosine but",
    "start": "1205940",
    "end": "1208220"
  },
  {
    "text": "at the time of implementation cosine was",
    "start": "1208220",
    "end": "1210440"
  },
  {
    "text": "primarily a CLI tool not meant to be",
    "start": "1210440",
    "end": "1212900"
  },
  {
    "text": "used as a library",
    "start": "1212900",
    "end": "1214640"
  },
  {
    "text": "however this is a known issue and",
    "start": "1214640",
    "end": "1216740"
  },
  {
    "text": "there's already been some work done",
    "start": "1216740",
    "end": "1218059"
  },
  {
    "text": "towards making it easier to use cosine",
    "start": "1218059",
    "end": "1220280"
  },
  {
    "text": "as an embedded Library",
    "start": "1220280",
    "end": "1223299"
  },
  {
    "text": "the second requirement for image signing",
    "start": "1223640",
    "end": "1225740"
  },
  {
    "text": "which is a little more subtle is that we",
    "start": "1225740",
    "end": "1227840"
  },
  {
    "text": "wanted to avoid creating new image tags",
    "start": "1227840",
    "end": "1229880"
  },
  {
    "text": "in the same repository as the signed",
    "start": "1229880",
    "end": "1231860"
  },
  {
    "text": "image",
    "start": "1231860",
    "end": "1233240"
  },
  {
    "text": "this is because at the time our internal",
    "start": "1233240",
    "end": "1235580"
  },
  {
    "text": "registry retention policies were based",
    "start": "1235580",
    "end": "1237980"
  },
  {
    "text": "on the number of tag digests for each",
    "start": "1237980",
    "end": "1240020"
  },
  {
    "text": "repository so if we sign every tag that",
    "start": "1240020",
    "end": "1243260"
  },
  {
    "text": "would double the rate of tech churn but",
    "start": "1243260",
    "end": "1245059"
  },
  {
    "text": "it's potentially causing images to be",
    "start": "1245059",
    "end": "1246919"
  },
  {
    "text": "prematurely expired",
    "start": "1246919",
    "end": "1249440"
  },
  {
    "text": "unfortunately cosine doesn't currently",
    "start": "1249440",
    "end": "1251720"
  },
  {
    "text": "allow you to override the logic for",
    "start": "1251720",
    "end": "1253400"
  },
  {
    "text": "locating the signature for a given image",
    "start": "1253400",
    "end": "1256160"
  },
  {
    "text": "if this were the only reason that cosine",
    "start": "1256160",
    "end": "1258080"
  },
  {
    "text": "didn't work for us we probably would",
    "start": "1258080",
    "end": "1259940"
  },
  {
    "text": "have addressed this problem on the",
    "start": "1259940",
    "end": "1261260"
  },
  {
    "text": "registry Side by improving our retention",
    "start": "1261260",
    "end": "1263419"
  },
  {
    "text": "policies first",
    "start": "1263419",
    "end": "1266200"
  },
  {
    "text": "finally we wanted to make sure that",
    "start": "1266320",
    "end": "1268700"
  },
  {
    "text": "image verification was highly reliable",
    "start": "1268700",
    "end": "1270559"
  },
  {
    "text": "across many large kubernetes clusters",
    "start": "1270559",
    "end": "1273620"
  },
  {
    "text": "it can take up to several seconds to",
    "start": "1273620",
    "end": "1275360"
  },
  {
    "text": "verify an image with cosine since it",
    "start": "1275360",
    "end": "1277520"
  },
  {
    "text": "involves many round trips to the",
    "start": "1277520",
    "end": "1279020"
  },
  {
    "text": "registry",
    "start": "1279020",
    "end": "1280280"
  },
  {
    "text": "we weren't comfortable adding this kind",
    "start": "1280280",
    "end": "1281840"
  },
  {
    "text": "of latency to an admission web hook due",
    "start": "1281840",
    "end": "1284360"
  },
  {
    "text": "to the back pressure it would put on the",
    "start": "1284360",
    "end": "1285799"
  },
  {
    "text": "kubernetes API server",
    "start": "1285799",
    "end": "1288320"
  },
  {
    "text": "so this meant that we wouldn't be using",
    "start": "1288320",
    "end": "1290840"
  },
  {
    "text": "an off-the-shelf admission web hook like",
    "start": "1290840",
    "end": "1293000"
  },
  {
    "text": "kyverno",
    "start": "1293000",
    "end": "1295520"
  },
  {
    "text": "instead we plan to implement runtime",
    "start": "1295520",
    "end": "1298220"
  },
  {
    "text": "image verification at the node level",
    "start": "1298220",
    "end": "1299960"
  },
  {
    "text": "within container D which is the",
    "start": "1299960",
    "end": "1301880"
  },
  {
    "text": "container runtime we use",
    "start": "1301880",
    "end": "1303520"
  },
  {
    "text": "we're currently working with container D",
    "start": "1303520",
    "end": "1305900"
  },
  {
    "text": "maintainers to merge these new node",
    "start": "1305900",
    "end": "1307760"
  },
  {
    "text": "level image verification features",
    "start": "1307760",
    "end": "1309320"
  },
  {
    "text": "Upstream",
    "start": "1309320",
    "end": "1311000"
  },
  {
    "text": "it's worth noting that we're only able",
    "start": "1311000",
    "end": "1312919"
  },
  {
    "text": "to customize container D in this way",
    "start": "1312919",
    "end": "1314600"
  },
  {
    "text": "because we manage our own kubernetes",
    "start": "1314600",
    "end": "1316460"
  },
  {
    "text": "clusters",
    "start": "1316460",
    "end": "1317539"
  },
  {
    "text": "cloud provider managed clusters don't",
    "start": "1317539",
    "end": "1319580"
  },
  {
    "text": "offer this level of customization",
    "start": "1319580",
    "end": "1322520"
  },
  {
    "text": "companies with smaller clusters probably",
    "start": "1322520",
    "end": "1324500"
  },
  {
    "text": "wouldn't have this reliability problem",
    "start": "1324500",
    "end": "1326059"
  },
  {
    "text": "and an emission map book may work just",
    "start": "1326059",
    "end": "1328520"
  },
  {
    "text": "fine for them",
    "start": "1328520",
    "end": "1330980"
  },
  {
    "text": "so we evaluated that the functionality",
    "start": "1330980",
    "end": "1333620"
  },
  {
    "text": "we needed from cosine was going to be",
    "start": "1333620",
    "end": "1335360"
  },
  {
    "text": "dwarfed in both implementation and",
    "start": "1335360",
    "end": "1337100"
  },
  {
    "text": "maintenance by all the surrounding key",
    "start": "1337100",
    "end": "1339080"
  },
  {
    "text": "management and container",
    "start": "1339080",
    "end": "1340280"
  },
  {
    "text": "de-customizations",
    "start": "1340280",
    "end": "1342380"
  },
  {
    "text": "so it was simple for us to write a small",
    "start": "1342380",
    "end": "1344659"
  },
  {
    "text": "library that implements just signing and",
    "start": "1344659",
    "end": "1346760"
  },
  {
    "text": "verifying functionality we need tightly",
    "start": "1346760",
    "end": "1349100"
  },
  {
    "text": "integrated with our internal",
    "start": "1349100",
    "end": "1350419"
  },
  {
    "text": "infrastructure",
    "start": "1350419",
    "end": "1352280"
  },
  {
    "text": "the design is very similar to how cosine",
    "start": "1352280",
    "end": "1354260"
  },
  {
    "text": "works but with a different payload",
    "start": "1354260",
    "end": "1356120"
  },
  {
    "text": "format and signing envelope and a",
    "start": "1356120",
    "end": "1358220"
  },
  {
    "text": "different registry structure to work",
    "start": "1358220",
    "end": "1359659"
  },
  {
    "text": "around our tagging issue",
    "start": "1359659",
    "end": "1362960"
  },
  {
    "start": "1361000",
    "end": "1493000"
  },
  {
    "text": "this is a high level diagram of what our",
    "start": "1362960",
    "end": "1365000"
  },
  {
    "text": "whole system looks like",
    "start": "1365000",
    "end": "1366980"
  },
  {
    "text": "first CI publishes an application image",
    "start": "1366980",
    "end": "1369679"
  },
  {
    "text": "to our Bode registry and sends offer",
    "start": "1369679",
    "end": "1371900"
  },
  {
    "text": "requests to our signer API with the",
    "start": "1371900",
    "end": "1374059"
  },
  {
    "text": "digest of the build image",
    "start": "1374059",
    "end": "1376880"
  },
  {
    "text": "the signer API constructs the payload",
    "start": "1376880",
    "end": "1379280"
  },
  {
    "text": "which is an oci descriptor with custom",
    "start": "1379280",
    "end": "1381620"
  },
  {
    "text": "annotations",
    "start": "1381620",
    "end": "1383000"
  },
  {
    "text": "and asks Vault to sign that payload",
    "start": "1383000",
    "end": "1384980"
  },
  {
    "text": "using an Ed 25519 key",
    "start": "1384980",
    "end": "1387980"
  },
  {
    "text": "the signer service packages that",
    "start": "1387980",
    "end": "1389720"
  },
  {
    "text": "signature and a dead simple signing",
    "start": "1389720",
    "end": "1391760"
  },
  {
    "text": "envelope and pushes it to the build",
    "start": "1391760",
    "end": "1393320"
  },
  {
    "text": "registry",
    "start": "1393320",
    "end": "1395480"
  },
  {
    "text": "in the background one of our registry",
    "start": "1395480",
    "end": "1397640"
  },
  {
    "text": "systems is replicating both the",
    "start": "1397640",
    "end": "1399380"
  },
  {
    "text": "application image and the signature",
    "start": "1399380",
    "end": "1401179"
  },
  {
    "text": "metadata from the build registry to a",
    "start": "1401179",
    "end": "1403159"
  },
  {
    "text": "registry in each production Data Center",
    "start": "1403159",
    "end": "1406820"
  },
  {
    "text": "zooming in to just one kubernetes node",
    "start": "1406820",
    "end": "1409039"
  },
  {
    "text": "we see that container D is about to run",
    "start": "1409039",
    "end": "1410780"
  },
  {
    "text": "an image",
    "start": "1410780",
    "end": "1412340"
  },
  {
    "text": "first it talks to the registry to",
    "start": "1412340",
    "end": "1414559"
  },
  {
    "text": "resolve a digest for that image",
    "start": "1414559",
    "end": "1416900"
  },
  {
    "text": "container D uses the image verifier",
    "start": "1416900",
    "end": "1419120"
  },
  {
    "text": "plugin system we're contributing",
    "start": "1419120",
    "end": "1420559"
  },
  {
    "text": "Upstream to ask our custom verifier",
    "start": "1420559",
    "end": "1423260"
  },
  {
    "text": "plugin whether the image digest is okay",
    "start": "1423260",
    "end": "1425360"
  },
  {
    "text": "to run",
    "start": "1425360",
    "end": "1427280"
  },
  {
    "text": "our plugin pulls the replicated",
    "start": "1427280",
    "end": "1428960"
  },
  {
    "text": "signature metadata from the registry and",
    "start": "1428960",
    "end": "1431480"
  },
  {
    "text": "verifies the image signature in payload",
    "start": "1431480",
    "end": "1434840"
  },
  {
    "text": "if the signature is valid and the sign",
    "start": "1434840",
    "end": "1436760"
  },
  {
    "text": "digest matches the one in the request",
    "start": "1436760",
    "end": "1439220"
  },
  {
    "text": "the plugin tells containerd to finish",
    "start": "1439220",
    "end": "1441500"
  },
  {
    "text": "pulling and running the image",
    "start": "1441500",
    "end": "1444700"
  },
  {
    "text": "we manage key rotation through both",
    "start": "1444700",
    "end": "1447200"
  },
  {
    "text": "built-in key versioning",
    "start": "1447200",
    "end": "1449120"
  },
  {
    "text": "ballot public keys are baked into the",
    "start": "1449120",
    "end": "1451340"
  },
  {
    "text": "machine image and refreshed from a",
    "start": "1451340",
    "end": "1453020"
  },
  {
    "text": "secure service in each Data Center",
    "start": "1453020",
    "end": "1456080"
  },
  {
    "text": "when we issue new keys we resign all",
    "start": "1456080",
    "end": "1458480"
  },
  {
    "text": "images that have recently run in",
    "start": "1458480",
    "end": "1460039"
  },
  {
    "text": "production and have valid signatures",
    "start": "1460039",
    "end": "1462260"
  },
  {
    "text": "with the previous set of keys",
    "start": "1462260",
    "end": "1465620"
  },
  {
    "text": "this is one of the main choices that",
    "start": "1465620",
    "end": "1467360"
  },
  {
    "text": "allowed us to simplify our key",
    "start": "1467360",
    "end": "1468679"
  },
  {
    "text": "management",
    "start": "1468679",
    "end": "1469940"
  },
  {
    "text": "we observed that we build and push many",
    "start": "1469940",
    "end": "1472220"
  },
  {
    "text": "more images than are actually being run",
    "start": "1472220",
    "end": "1473840"
  },
  {
    "text": "in production at any point in time so",
    "start": "1473840",
    "end": "1476360"
  },
  {
    "text": "the number of images we have to resign",
    "start": "1476360",
    "end": "1478159"
  },
  {
    "text": "with new keys to support key rotation is",
    "start": "1478159",
    "end": "1481039"
  },
  {
    "text": "a manageable size",
    "start": "1481039",
    "end": "1483380"
  },
  {
    "text": "we're still gaining experience operating",
    "start": "1483380",
    "end": "1485480"
  },
  {
    "text": "this in production especially the key",
    "start": "1485480",
    "end": "1487580"
  },
  {
    "text": "management components so we'll have more",
    "start": "1487580",
    "end": "1489620"
  },
  {
    "text": "to share on how this approach Works in",
    "start": "1489620",
    "end": "1491179"
  },
  {
    "text": "practice in the coming year",
    "start": "1491179",
    "end": "1494380"
  },
  {
    "start": "1493000",
    "end": "1536000"
  },
  {
    "text": "so this has been datadog's approach to",
    "start": "1495140",
    "end": "1497539"
  },
  {
    "text": "container image signing especially in",
    "start": "1497539",
    "end": "1499340"
  },
  {
    "text": "the internal use case",
    "start": "1499340",
    "end": "1501320"
  },
  {
    "text": "we did a thorough evaluation of all the",
    "start": "1501320",
    "end": "1503600"
  },
  {
    "text": "major image signing projects out there",
    "start": "1503600",
    "end": "1505220"
  },
  {
    "text": "and cosine definitely has a lot going",
    "start": "1505220",
    "end": "1507260"
  },
  {
    "text": "for it especially in the open source",
    "start": "1507260",
    "end": "1509059"
  },
  {
    "text": "setting",
    "start": "1509059",
    "end": "1510260"
  },
  {
    "text": "however image signing only has value if",
    "start": "1510260",
    "end": "1512840"
  },
  {
    "text": "signatures are verified so as you",
    "start": "1512840",
    "end": "1515000"
  },
  {
    "text": "approach container image signing think",
    "start": "1515000",
    "end": "1516919"
  },
  {
    "text": "carefully about who you're signing for",
    "start": "1516919",
    "end": "1518539"
  },
  {
    "text": "whether it's an external customer or an",
    "start": "1518539",
    "end": "1521419"
  },
  {
    "text": "internal service",
    "start": "1521419",
    "end": "1523340"
  },
  {
    "text": "this will likely affect what signing",
    "start": "1523340",
    "end": "1525500"
  },
  {
    "text": "tools you use and how you design your",
    "start": "1525500",
    "end": "1527840"
  },
  {
    "text": "key management strategy",
    "start": "1527840",
    "end": "1530059"
  },
  {
    "text": "that's all I have for today so thanks",
    "start": "1530059",
    "end": "1531740"
  },
  {
    "text": "for listening and I hope you enjoy the",
    "start": "1531740",
    "end": "1533480"
  },
  {
    "text": "rest of six doorcon",
    "start": "1533480",
    "end": "1536380"
  }
]