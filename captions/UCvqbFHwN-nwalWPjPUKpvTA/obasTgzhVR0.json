[
  {
    "text": "hello welcome hey my name is Linda I'm the moderator for this session I work",
    "start": "1440",
    "end": "7600"
  },
  {
    "text": "for a small company solo.io we specialize in application networking we",
    "start": "7600",
    "end": "12639"
  },
  {
    "text": "still have some spaces up front if you are brave enough to walk on the first row second row so um please welcome Aon",
    "start": "12639",
    "end": "23160"
  },
  {
    "text": "to um present you our scene is believing debugging with feral containers",
    "start": "23160",
    "end": "30119"
  },
  {
    "text": "okay thank [Applause]",
    "start": "30119",
    "end": "35840"
  },
  {
    "text": "you okay let's get going here uh so um",
    "start": "35840",
    "end": "41440"
  },
  {
    "text": "see if I can make this work up a little ahead of getting a little ahead of myself",
    "start": "41440",
    "end": "47399"
  },
  {
    "text": "here there we go make sure uh PowerPoint is going to do what I need to do okay so",
    "start": "47399",
    "end": "54440"
  },
  {
    "text": "I'm going to be talking about uh ephemeral containers uh today of course uh I'm Aaron alpar",
    "start": "54440",
    "end": "60640"
  },
  {
    "text": "uh I work with Casten uh software engineer with Casten uh I do software engineer sort of stuff I I primarily",
    "start": "60640",
    "end": "68119"
  },
  {
    "text": "focus on the uh uh the data layer persistence um so uh today I'm going to",
    "start": "68119",
    "end": "76119"
  },
  {
    "text": "talk about uh ephemeral containers so and what's important about ephemeral",
    "start": "76119",
    "end": "83200"
  },
  {
    "text": "containers is that the they are more than just containers that stick around",
    "start": "83200",
    "end": "89280"
  },
  {
    "text": "for just a little while they are uh a very important piece to uh kubernetes",
    "start": "89280",
    "end": "94640"
  },
  {
    "text": "architecture uh I'm going to give you a little bit of that and uh hopefully uh",
    "start": "94640",
    "end": "100159"
  },
  {
    "text": "reasons why as well as a lot of the technical background that makes ephemeral containers work and hopefully",
    "start": "100159",
    "end": "107880"
  },
  {
    "text": "by seeing that technical background uh you'll get an understanding of what their power is um so anyhow uh so let me",
    "start": "107880",
    "end": "117320"
  },
  {
    "text": "proceed uh this is going to be a pretty technical presentation so I I encourage you to",
    "start": "117320",
    "end": "123240"
  },
  {
    "text": "download the slides uh that are up on skedge for this uh I just happen to",
    "start": "123240",
    "end": "128360"
  },
  {
    "text": "update them about a half an hour ago so if you've already downloaded them try to download them again the content remains",
    "start": "128360",
    "end": "134760"
  },
  {
    "text": "largely the same so the ordering of a few of the slides and I've emphasized some details in the new ones so if",
    "start": "134760",
    "end": "141280"
  },
  {
    "text": "you're following along I encourage you definitely encourage you to download the slides uh I've got a lot of console type",
    "start": "141280",
    "end": "148000"
  },
  {
    "text": "text in here a couple of slides uh the fonts are small so I'm hoping",
    "start": "148000",
    "end": "153360"
  },
  {
    "text": "that uh folks can see them yet another reason uh to download the presentation",
    "start": "153360",
    "end": "159599"
  },
  {
    "text": "uh anyhow let me get started um before I get started about talking about",
    "start": "159599",
    "end": "164879"
  },
  {
    "text": "ephemeral containers I'm could to talk about what you what you're going to need in this presentation this presentation",
    "start": "164879",
    "end": "170480"
  },
  {
    "text": "is a uh is uh both me presenting and talking about it uh as well as a sort of",
    "start": "170480",
    "end": "177879"
  },
  {
    "text": "self-driven tutorial so so I'll talk about that as we go along uh to make",
    "start": "177879",
    "end": "183480"
  },
  {
    "text": "this to make this tutorial work uh you're going to need uh and this this is",
    "start": "183480",
    "end": "189720"
  },
  {
    "text": "designed to do after the presentation uh I don't try to follow along while I'm",
    "start": "189720",
    "end": "194840"
  },
  {
    "text": "talking because we've only got 30 minutes it's could go pretty quickly uh I'm using kind in this presentation kind",
    "start": "194840",
    "end": "201560"
  },
  {
    "text": "is a a local cluster uh the reason why I'm using kind is because I'm going to",
    "start": "201560",
    "end": "206799"
  },
  {
    "text": "need direct access to the node and I'll basically you uh need privileged access",
    "start": "206799",
    "end": "212120"
  },
  {
    "text": "to the node so the easiest way for me to do this is to start up a local cluster uh in this case I'm using kind which",
    "start": "212120",
    "end": "218480"
  },
  {
    "text": "happens to be what kubernetes uses for their own testing uh it's fairly featureful and it will certainly do the",
    "start": "218480",
    "end": "225120"
  },
  {
    "text": "trick uh for our presentation it does use a Docker so there's implied uh that",
    "start": "225120",
    "end": "231959"
  },
  {
    "text": "you'll need Docker installed to make this work uh I think that's pretty standard at this point uh I'm going to",
    "start": "231959",
    "end": "238439"
  },
  {
    "text": "also be using postr postr just happens to be an open- Source",
    "start": "238439",
    "end": "243560"
  },
  {
    "text": "uh application that I can install with Helm it doesn't really matter uh what you use uh but the examples I'm going to",
    "start": "243560",
    "end": "250799"
  },
  {
    "text": "be using are uh going to be using postgres okay uh so you're going to see",
    "start": "250799",
    "end": "257479"
  },
  {
    "text": "a bunch of slides that look like this so uh and the blue there see the dollar",
    "start": "257479",
    "end": "263759"
  },
  {
    "text": "sign there that is a command prompt uh that's in bold right next to it blue text that is something you can copy and",
    "start": "263759",
    "end": "271280"
  },
  {
    "text": "paste into a shell and you should get output that looks a little bit like the gray text that follows it so voila uh so",
    "start": "271280",
    "end": "280400"
  },
  {
    "text": "this is uh my command uh to create a kind cluster just type that in kind",
    "start": "280400",
    "end": "286039"
  },
  {
    "text": "create cluster it'll uh go about its business and create a new local cluster for you uh after you've got a new local",
    "start": "286039",
    "end": "292520"
  },
  {
    "text": "cluster installed you can install a Helm so uh this is command to install Helm I",
    "start": "292520",
    "end": "298120"
  },
  {
    "text": "use bitnami repos uh it's in there uh create a name space for it and then use Helm 3 to install",
    "start": "298120",
    "end": "305400"
  },
  {
    "text": "that uh at that point you should kind of be all set you got CL kind installed you got postgres installed uh you might want",
    "start": "305400",
    "end": "312479"
  },
  {
    "text": "to check your versions uh just to make sure that you've got uh the correct",
    "start": "312479",
    "end": "317520"
  },
  {
    "text": "stuff installed I am uh running with bleeding edge this is another reason to use kind is that you can get the latest",
    "start": "317520",
    "end": "325160"
  },
  {
    "text": "uh latest versions of uh kubernetes as uh as as well as of course Cube controls",
    "start": "325160",
    "end": "331360"
  },
  {
    "text": "be compatible with that uh then I can go ahead make sure I've got my pods running",
    "start": "331360",
    "end": "336600"
  },
  {
    "text": "postr will run with a single pod okay so you're all set up uh so now",
    "start": "336600",
    "end": "345160"
  },
  {
    "text": "for aeral containers so ephemeral containers are new they're beta in one",
    "start": "345160",
    "end": "350280"
  },
  {
    "text": "two3 uh this means that if you install kubernetes uh 123 uh they will be",
    "start": "350280",
    "end": "356960"
  },
  {
    "text": "enabled by default so you're not going to have to set any teacher Gates or anything like that which is nice uh all",
    "start": "356960",
    "end": "362919"
  },
  {
    "text": "of the platforms as far as I know have uh 123 on their Edge release so if you",
    "start": "362919",
    "end": "369880"
  },
  {
    "text": "want to get if you want to play around with ephemeral containers on something like gke or what have you uh uh either",
    "start": "369880",
    "end": "377199"
  },
  {
    "text": "it'll just be in installed by default or go take a look at the edge releases and you should be able to find it for uh",
    "start": "377199",
    "end": "383280"
  },
  {
    "text": "installation uh it should be fairly straightforward so with all this",
    "start": "383280",
    "end": "389599"
  },
  {
    "text": "ephemeral containers start with the bugging these are the cases that you'll primarily see on all example sites for",
    "start": "389599",
    "end": "395680"
  },
  {
    "text": "ephemeral containers and uh vast majority of literature that that's out there is about debugging using ephemeral",
    "start": "395680",
    "end": "402000"
  },
  {
    "text": "containers so I'm going to start with that I'm going to talk just a little bit about uh debugging uh in general in",
    "start": "402000",
    "end": "409199"
  },
  {
    "text": "kubernetes uh very high level and then I'm going to do a deep dive into femoral containers and not so much the process",
    "start": "409199",
    "end": "416560"
  },
  {
    "text": "of actually debugging your uh programs but the stuff that makes debugging work",
    "start": "416560",
    "end": "422960"
  },
  {
    "text": "uh and I'll get into a few examples so uh there's again there's a lot of",
    "start": "422960",
    "end": "429080"
  },
  {
    "text": "implications that go far beyond debugging with ephemeral containers okay so uh this is debugging",
    "start": "429080",
    "end": "437759"
  },
  {
    "text": "by attaching Pro hopefully everybody's familiar with this uh this is where uh you might have a pod that's uh having",
    "start": "437759",
    "end": "444759"
  },
  {
    "text": "problems uh and you're you've deployed this pod with like a Debian release or",
    "start": "444759",
    "end": "450479"
  },
  {
    "text": "maybe even a red hat release and you just shell into it directly and you run commands and try to figure out what's",
    "start": "450479",
    "end": "455720"
  },
  {
    "text": "going on uh here here's an example of doing that uh Cube cutle exec uh and uh",
    "start": "455720",
    "end": "463720"
  },
  {
    "text": "we just run a a b Bing shell or what have you in the Pod so we can go ahead and log in and Bug debug into it uh this",
    "start": "463720",
    "end": "472120"
  },
  {
    "text": "is uh so you can debug by attach or uh you can debug by copy which I'm not sure",
    "start": "472120",
    "end": "478759"
  },
  {
    "text": "everybody really know knows about uh but this is using the actual debug command uh it allows you to take a CO create a",
    "start": "478759",
    "end": "486000"
  },
  {
    "text": "copy of your pod so pods are the smallest unit unit of scheduling right",
    "start": "486000",
    "end": "493000"
  },
  {
    "text": "so uh with the current infrastructure what you have to do if you want to run a",
    "start": "493000",
    "end": "498280"
  },
  {
    "text": "new process in a pod other than exec into it is that you're going to have to create a copy of it with a new",
    "start": "498280",
    "end": "505479"
  },
  {
    "text": "container um or with whatever debugging tools a new image or whatever debugging",
    "start": "505479",
    "end": "511639"
  },
  {
    "text": "tools that you want uh so this is debugging by copy and what this does is it creates a copy of the container and",
    "start": "511639",
    "end": "519080"
  },
  {
    "text": "it runs that it's a little awkward but it works um if you don't know about it I",
    "start": "519080",
    "end": "526000"
  },
  {
    "text": "encourage you to look it up so um so debugging without ephemeral containers",
    "start": "526000",
    "end": "532200"
  },
  {
    "text": "so we can either attach which I covered uh which we can either copy which I also covered um uh but but this this is a",
    "start": "532200",
    "end": "540839"
  },
  {
    "text": "little it's if you debug by attaching it means you need to include all of your debugging Tools in your containers so",
    "start": "540839",
    "end": "547120"
  },
  {
    "text": "you can attached to it if you want to change that container to include additional tools uh you're going to have",
    "start": "547120",
    "end": "552959"
  },
  {
    "text": "to copy it and uh uh this requires doing",
    "start": "552959",
    "end": "558360"
  },
  {
    "text": "some uh Fu magic uh on your workloads to make that work so like if you're working",
    "start": "558360",
    "end": "564399"
  },
  {
    "text": "with a deployment or you're working with a stateful set uh it's you're going to",
    "start": "564399",
    "end": "570440"
  },
  {
    "text": "make a copy of the Pod and then the the stateful set's going to look at it and",
    "start": "570440",
    "end": "576079"
  },
  {
    "text": "see that its replicas of change and then it's going to start up another pod and you're going to have to set your",
    "start": "576079",
    "end": "581519"
  },
  {
    "text": "services to point at the right pod anyhow it's a little bit of a mess but you can once you get the hang of it it",
    "start": "581519",
    "end": "587440"
  },
  {
    "text": "works um Emeral containers get around this uh and I'll talk a little bit about",
    "start": "587440",
    "end": "593560"
  },
  {
    "text": "this uh this is how you debug B Emeral containers so you've got kubernetes 123",
    "start": "593560",
    "end": "598720"
  },
  {
    "text": "installed by kind you've got postgres in there as my previous example uh copy and",
    "start": "598720",
    "end": "604600"
  },
  {
    "text": "paste that command in there and what you get is an ephemeral container um uh busy",
    "start": "604600",
    "end": "611399"
  },
  {
    "text": "box standard Set uh so this this is a it",
    "start": "611399",
    "end": "616600"
  },
  {
    "text": "actually runs a new container the Pod stays the same a new container is added to it which is really handy uh this is a",
    "start": "616600",
    "end": "623760"
  },
  {
    "text": "little bit of a little bit of a special container it's probably not going to be obvious uh iMed immediately because all",
    "start": "623760",
    "end": "630600"
  },
  {
    "text": "containers within a pod get to share the same network resources so uh so anyhow",
    "start": "630600",
    "end": "636399"
  },
  {
    "text": "by default uh you'll see network resources shared uh that's that's uh really nice uh and uh this is this is",
    "start": "636399",
    "end": "644680"
  },
  {
    "text": "ideal case for doing more complicated debugging uh and as we'll see we can get",
    "start": "644680",
    "end": "650959"
  },
  {
    "text": "really we can get really complex um we can get really complex with the",
    "start": "650959",
    "end": "656240"
  },
  {
    "text": "debugging not just simply uh Network resource um so here we go again here's another",
    "start": "656240",
    "end": "663600"
  },
  {
    "text": "example of debugging with femal containers again you can copy and paste this uh you see the usual prompts you",
    "start": "663600",
    "end": "669639"
  },
  {
    "text": "know if you don't see a prompt hit enter D now uh when you're looking at your pod",
    "start": "669639",
    "end": "676279"
  },
  {
    "text": "uh the Pod resource the Pod spec things are going to change so I want to talk a little bit about what it actually looks",
    "start": "676279",
    "end": "683040"
  },
  {
    "text": "like in the Pod after you've executed a uh ephemeral container and then I I'll",
    "start": "683040",
    "end": "688360"
  },
  {
    "text": "kind of revisit this and talk about it again later on uh so this is the ephemeral container",
    "start": "688360",
    "end": "695720"
  },
  {
    "text": "spec so I I run the previous command boom uh and what I get is a new",
    "start": "695720",
    "end": "701440"
  },
  {
    "text": "ephemeral container that'll be evident in the in the podspec uh here's the ephemeral container spec so I'm going to",
    "start": "701440",
    "end": "708120"
  },
  {
    "text": "go ahead and get the pot as yaml and down here I know the font is small I'll blow it up in a second uh we have a spec",
    "start": "708120",
    "end": "716160"
  },
  {
    "text": "uh we have our containers there and we have a new we we have a new uh property",
    "start": "716160",
    "end": "721440"
  },
  {
    "text": "ephemeral containers uh this is a zoom in uh to that and uh again here we see",
    "start": "721440",
    "end": "728079"
  },
  {
    "text": "it uh so this lists all my ephemeral containers for which I have one now uh",
    "start": "728079",
    "end": "734399"
  },
  {
    "text": "so that's executing uh there's another important part of this and if I get it again and I look through it and again I",
    "start": "734399",
    "end": "741320"
  },
  {
    "text": "blow it up uh we also on the status uh property the spec uh I also get a",
    "start": "741320",
    "end": "748360"
  },
  {
    "text": "ephemeral container entry so we get two new entries in the resource the AML uh for the resource uh one is just regular",
    "start": "748360",
    "end": "755399"
  },
  {
    "text": "ephemeral containers that uh that tell us what what what ephemeral container",
    "start": "755399",
    "end": "761639"
  },
  {
    "text": "should be started uh and then I have the Status End which gives me the current status of the ephemeral containers",
    "start": "761639",
    "end": "769600"
  },
  {
    "text": "so um so I I'm I'm set I can debug with",
    "start": "769600",
    "end": "775959"
  },
  {
    "text": "ephemeral containers I know what the I know what to look for on the spec so I can see what the status is of ephemeral",
    "start": "775959",
    "end": "783240"
  },
  {
    "text": "containers see which ephemeral containers are running and again this the spec is changed on the Pod uh as",
    "start": "783240",
    "end": "790680"
  },
  {
    "text": "it's running which is unique that's one of the things that's really nice about AAL containers uh but what is a femoral",
    "start": "790680",
    "end": "797360"
  },
  {
    "text": "container so this is actually going to be a majority of the presentation uh and I'm going to try to spend some time on",
    "start": "797360",
    "end": "803760"
  },
  {
    "text": "this um uh a container can be thought of a Sandbox right so you're in the sandbox",
    "start": "803760",
    "end": "810680"
  },
  {
    "text": "you're executing commands and what you can see is limited you can't see the",
    "start": "810680",
    "end": "816079"
  },
  {
    "text": "entire system you can't see into other pods right you can't really see into other containers actually uh you're",
    "start": "816079",
    "end": "822920"
  },
  {
    "text": "you're in a you're basically you're in a container can be uh seen as a",
    "start": "822920",
    "end": "828839"
  },
  {
    "text": "Sandbox what makes this work is Linux Nam spaces so now these are not",
    "start": "828839",
    "end": "834320"
  },
  {
    "text": "kubernetes Nam spaces these are Linux Nam spaces they've got namespace in the name",
    "start": "834320",
    "end": "839560"
  },
  {
    "text": "they're they're rather different um so I'm going to talk about Linux namespaces in this um so Linux",
    "start": "839560",
    "end": "848639"
  },
  {
    "text": "namespaces control container isolation Linux namespaces are the things that uh",
    "start": "848639",
    "end": "854639"
  },
  {
    "text": "don't allow you to see outside the container into the rest of the system so you can play with these name spaces so",
    "start": "854639",
    "end": "862279"
  },
  {
    "text": "you can see various parts of other containers so it's really nice and this",
    "start": "862279",
    "end": "869880"
  },
  {
    "text": "this is really what ephemeral containers are about is controlling Linux Nam",
    "start": "869880",
    "end": "875920"
  },
  {
    "text": "spaces um I'll talk a little bit about this there are many uh there are many",
    "start": "875920",
    "end": "882079"
  },
  {
    "text": "name spaces here's just a few Mount pit these are these are roughly listed in the order of importance uh uh Mount PID",
    "start": "882079",
    "end": "889800"
  },
  {
    "text": "net IPC there's a bunch of them uh there's some resources at the end I'm going to talk about these and there's",
    "start": "889800",
    "end": "895160"
  },
  {
    "text": "some resources at the end and I'll talk about those too uh each each each name space is identified by iode so these are",
    "start": "895160",
    "end": "902800"
  },
  {
    "text": "these are kind of those funny file system things so uh it there's an iode in the file system it's a virtual file",
    "start": "902800",
    "end": "909440"
  },
  {
    "text": "system uh that represents these uh I'm going to talk about the PID",
    "start": "909440",
    "end": "915240"
  },
  {
    "text": "name space the mountain name space and the net name space I think those are probably the ones that you're most",
    "start": "915240",
    "end": "920519"
  },
  {
    "text": "worried about and there's also some quirks in there that you should know about uh when you start to play around",
    "start": "920519",
    "end": "926680"
  },
  {
    "text": "with these um so uh as I said before you're going to",
    "start": "926680",
    "end": "932560"
  },
  {
    "text": "need to you're going to need privileged access to the node to make this work and here's an example of this so what I'm",
    "start": "932560",
    "end": "940160"
  },
  {
    "text": "doing here is uh is one of my first examples of Linux namespaces is that uh",
    "start": "940160",
    "end": "946160"
  },
  {
    "text": "I'm going to uh log in uh to the uh control plane node uh this is the",
    "start": "946160",
    "end": "951880"
  },
  {
    "text": "basically the only when you use kind it is the only node you got by default um",
    "start": "951880",
    "end": "957240"
  },
  {
    "text": "and I'm going to take a look at the name spaces for PID one PID one of course is the init um and uh I can see those uh by",
    "start": "957240",
    "end": "967360"
  },
  {
    "text": "ls- L slpr everybody should know what slpr is uh one which is PID one and then",
    "start": "967360",
    "end": "975120"
  },
  {
    "text": "for each process in in proc uh there's an NS uh and under the NS directory",
    "start": "975120",
    "end": "981560"
  },
  {
    "text": "you'll see all the name spaces listed out uh over here on the left um uh We've got uh or",
    "start": "981560",
    "end": "990160"
  },
  {
    "text": "the right rather uh we've got a listing of iode entries uh with their corresponding name spaces that they uh",
    "start": "990160",
    "end": "996519"
  },
  {
    "text": "they're associated with so that is in proc for the process",
    "start": "996519",
    "end": "1003480"
  },
  {
    "text": "under the NS directory you'll see a bunch of files and those are all related to namespaces uh I can get access to those",
    "start": "1003480",
    "end": "1010279"
  },
  {
    "text": "uh if I have a privileged shell on the no uh here's a here's one of those Zoomin",
    "start": "1010279",
    "end": "1015639"
  },
  {
    "text": "again um this first entry by the way that's going to come up later on so just",
    "start": "1015639",
    "end": "1020959"
  },
  {
    "text": "keep it in the back of your head uh but these are the name spaces for PID one uh so now if I if",
    "start": "1020959",
    "end": "1029360"
  },
  {
    "text": "I that's from the node perspective uh what I can do is uh I can go in and do",
    "start": "1029360",
    "end": "1037558"
  },
  {
    "text": "the same thing and take a look at uh my postgis processes that are running on the Node so that's sorry the previous",
    "start": "1037559",
    "end": "1044480"
  },
  {
    "text": "slide was from the init perspective this is taking a look at postgres which is running in a running in a container uh within the",
    "start": "1044480",
    "end": "1052640"
  },
  {
    "text": "kubernetes cluster so here I uh get my PID for postres uh I PS it as an example",
    "start": "1052640",
    "end": "1061039"
  },
  {
    "text": "and then here what I do is I get all of the name spaces for poges and I can list",
    "start": "1061039",
    "end": "1066080"
  },
  {
    "text": "all of those out now these are the name spaces that the container is actually going to use to run postgres",
    "start": "1066080",
    "end": "1072760"
  },
  {
    "text": "in and here's a zoom in of that as well uh the identifiers for this aren't so",
    "start": "1072760",
    "end": "1078960"
  },
  {
    "text": "important and I I'll uh we'll see more of this in just a",
    "start": "1078960",
    "end": "1084640"
  },
  {
    "text": "second so those are how you see Nam spaces you can you can look in proc you can see which Nam spaces are identified",
    "start": "1086320",
    "end": "1093280"
  },
  {
    "text": "with which process and the example that I had before we looked at PID one uh and",
    "start": "1093280",
    "end": "1098760"
  },
  {
    "text": "then we looked at our postgres uh name spaces for our postgres process those will come up in just a second uh looking",
    "start": "1098760",
    "end": "1105799"
  },
  {
    "text": "at them doesn't do you much good uh What you really want to be able to do is execute something uh with a certain set",
    "start": "1105799",
    "end": "1112760"
  },
  {
    "text": "of Nam spaces Set uh this is what a command called NS enter does it allows",
    "start": "1112760",
    "end": "1118159"
  },
  {
    "text": "you to enter a set of namespaces and execute commands as though you were in",
    "start": "1118159",
    "end": "1123320"
  },
  {
    "text": "that Nam space so when you're in a container this is really what you're doing is uh running a shell with NS",
    "start": "1123320",
    "end": "1131799"
  },
  {
    "text": "enter so your perspective on the system changes according to what Nam spaces you'll see",
    "start": "1131799",
    "end": "1139760"
  },
  {
    "text": "this is an example of running NS enter uh I'm here I'm going to run NS enter in",
    "start": "1140159",
    "end": "1145760"
  },
  {
    "text": "the postgres namespace uh specifically for Network so NS enter D- Network and",
    "start": "1145760",
    "end": "1152440"
  },
  {
    "text": "then I give it uh a namespace file in proc that says uh start up a command uh",
    "start": "1152440",
    "end": "1158960"
  },
  {
    "text": "using uh whatever namespace the using the network namespace for whatever postres is using uh and here I just run",
    "start": "1158960",
    "end": "1167159"
  },
  {
    "text": "sscp DL uh just to see uh what's listening and here we",
    "start": "1167159",
    "end": "1174158"
  },
  {
    "text": "go uh if I want it's it's a little tedious to list out all of the name spaces that you you want to use uh so",
    "start": "1176440",
    "end": "1185120"
  },
  {
    "text": "there's a shorthand it's called Target uh Target uh basically allows you to",
    "start": "1185120",
    "end": "1190760"
  },
  {
    "text": "give it a PID and it will enter the name space of that process it's really handy",
    "start": "1190760",
    "end": "1196360"
  },
  {
    "text": "so if you have a shell somewhere or you have some sort of command and you want to see the universe from the Viewpoint",
    "start": "1196360",
    "end": "1202360"
  },
  {
    "text": "of that process this is how you do it uh you specify a Target give it a PID uh",
    "start": "1202360",
    "end": "1208480"
  },
  {
    "text": "dash dash all and then da da run your",
    "start": "1208480",
    "end": "1213120"
  },
  {
    "text": "command uh so I'm going to show you uh what what things what doing this looks",
    "start": "1214400",
    "end": "1221840"
  },
  {
    "text": "like uh from the node executing uh being in a namespace versus what it looks like",
    "start": "1221840",
    "end": "1227679"
  },
  {
    "text": "from the container so uh here's a coup cutle exec uh here I'm uh I'm exing a",
    "start": "1227679",
    "end": "1235080"
  },
  {
    "text": "command in the in the default container in my pot right so ps- EF I just want to",
    "start": "1235080",
    "end": "1240200"
  },
  {
    "text": "see what the processes are um so here I go ps-",
    "start": "1240200",
    "end": "1245280"
  },
  {
    "text": "EF uh excuse me those are the processes uh this should look",
    "start": "1245280",
    "end": "1250520"
  },
  {
    "text": "familiar and this is the view that we get if I exec directly into the node and",
    "start": "1250520",
    "end": "1256720"
  },
  {
    "text": "then uh I do an NSN enter give it a target of my postgres process and uh I",
    "start": "1256720",
    "end": "1264080"
  },
  {
    "text": "do a ps- EF basically the same thing you'll notice if I switch between these",
    "start": "1264080",
    "end": "1270640"
  },
  {
    "text": "two slides the output is basically exactly the same so this uh the NS enter",
    "start": "1270640",
    "end": "1278360"
  },
  {
    "text": "command basically is the same as I said before is the same thing as running within a a container in a pod so",
    "start": "1278360",
    "end": "1289600"
  },
  {
    "text": "this tells you that uh basically these are this is essentially the same system that your node uses to build up",
    "start": "1289600",
    "end": "1298120"
  },
  {
    "text": "containers okay so that's sort of the background I'll get into some more",
    "start": "1298880",
    "end": "1304279"
  },
  {
    "text": "details and again a little bit like that blue the blue text I was telling you about and entering in that I'm going to",
    "start": "1304279",
    "end": "1310200"
  },
  {
    "text": "use this comparison technique of uh moving between slides uh in a few cases",
    "start": "1310200",
    "end": "1316440"
  },
  {
    "text": "to show you what what what the what changes when you do uh certain",
    "start": "1316440",
    "end": "1321720"
  },
  {
    "text": "commands uh so ephemeral containers uh uh when you start an ephemeral containers network namespace is shared",
    "start": "1321720",
    "end": "1328400"
  },
  {
    "text": "by default really handy there's a bunch of other Nam spaces that are uh also shared this is certainly the most",
    "start": "1328400",
    "end": "1333760"
  },
  {
    "text": "important I think uh you can share other namespaces so you can kind of tweak things and change your perspective uh",
    "start": "1333760",
    "end": "1341279"
  },
  {
    "text": "from the uh from the container so um here's a namespace uh when debug",
    "start": "1341279",
    "end": "1348400"
  },
  {
    "text": "by by attaching so this I'm going to go directly into the postgres node and I'm going to go go ahead and do an ls- L",
    "start": "1348400",
    "end": "1355559"
  },
  {
    "text": "self NS so a self if you haven't heard of that uh is just whatever the current",
    "start": "1355559",
    "end": "1360679"
  },
  {
    "text": "process is so I'm in a container I'm just doing a PS um now I'm doing this next command is a",
    "start": "1360679",
    "end": "1368919"
  },
  {
    "text": "a cube cuddle debug so this is a con this is ephemeral container debug right",
    "start": "1368919",
    "end": "1374760"
  },
  {
    "text": "uh again into postgres so before this is like exacting into the container and",
    "start": "1374760",
    "end": "1380919"
  },
  {
    "text": "running a command uh this is uh uh starting a uh ephemeral debug container",
    "start": "1380919",
    "end": "1388360"
  },
  {
    "text": "uh against the same pod and against the same uh container",
    "start": "1388360",
    "end": "1394080"
  },
  {
    "text": "so uh so here I go ahead and start it uh Emeral container with an image of busy",
    "start": "1394080",
    "end": "1400600"
  },
  {
    "text": "box this will uh start a uh this will start a new",
    "start": "1400600",
    "end": "1407200"
  },
  {
    "text": "container uh uh there it is defaulting debug container name to debug blah blah",
    "start": "1407200",
    "end": "1412400"
  },
  {
    "text": "blah blah blah blah uh we get the usual thing press enter um and if I do that",
    "start": "1412400",
    "end": "1417720"
  },
  {
    "text": "same command I pretty much get the same output but a few things have changed uh",
    "start": "1417720",
    "end": "1422880"
  },
  {
    "text": "so what I get is I get a a a set of new name spaces and what's highlighted in",
    "start": "1422880",
    "end": "1428919"
  },
  {
    "text": "yellow is are the the name spaces that change so when I start a new ephemeral",
    "start": "1428919",
    "end": "1434480"
  },
  {
    "text": "container within the Pod uh I share all the same resources in that pod uh with",
    "start": "1434480",
    "end": "1441360"
  },
  {
    "text": "the exception of cgroups my mount my PID and my pids right so when I pit in my",
    "start": "1441360",
    "end": "1447279"
  },
  {
    "text": "container I'm going when I do an LSL or something like that uh I'm going to see my own set of processes right uh uh when",
    "start": "1447279",
    "end": "1455520"
  },
  {
    "text": "I look at my Mount points or when I look at my file systems I'm going to see my own files uh cgroups has to do with",
    "start": "1455520",
    "end": "1462679"
  },
  {
    "text": "permissions I'll talk about a little bit in a minute but as you can see my net",
    "start": "1462679",
    "end": "1467919"
  },
  {
    "text": "the between the two yellow things right there my net Nam space Remains the Same so when I do like an SS or an if config",
    "start": "1467919",
    "end": "1475679"
  },
  {
    "text": "or something like that I'm going to see the same network resources as the rest of the Pod would normally see um there's",
    "start": "1475679",
    "end": "1482320"
  },
  {
    "text": "time and not so important uh the bottom one for username space is actually",
    "start": "1482320",
    "end": "1487399"
  },
  {
    "text": "pretty important uh which means you're going to be sharing the username spaces of the Pod so the user IDs uh that",
    "start": "1487399",
    "end": "1494760"
  },
  {
    "text": "you're going to see are going to be the same as what you would get in just all the other containers in the",
    "start": "1494760",
    "end": "1501240"
  },
  {
    "text": "Pod so this is by default um what I can do is opposed to just",
    "start": "1501240",
    "end": "1509320"
  },
  {
    "text": "starting up a a ephemeral container the default container is I can uh set up a",
    "start": "1509320",
    "end": "1516520"
  },
  {
    "text": "specific Target container uh so here we doing a cube cuddle",
    "start": "1516520",
    "end": "1521919"
  },
  {
    "text": "debug uh and I'm specifying a Target Target postgres that is basically the",
    "start": "1521919",
    "end": "1527840"
  },
  {
    "text": "same format that you used in nser right-- Target and he gave it a process",
    "start": "1527840",
    "end": "1532880"
  },
  {
    "text": "that's kind of what we're doing here so notice here that uh fewer of my name",
    "start": "1532880",
    "end": "1539159"
  },
  {
    "text": "spaces have changed so this means I'm sharing more uh with the original pod",
    "start": "1539159",
    "end": "1544399"
  },
  {
    "text": "and what's most important is now you're sharing the PID name space with the Pod",
    "start": "1544399",
    "end": "1549600"
  },
  {
    "text": "uh excuse me you're sharing the PID name space with a postgre container which is very helpful so all of a sudden when you",
    "start": "1549600",
    "end": "1556399"
  },
  {
    "text": "go into this container you're going to see all of the same processes uh that your target container",
    "start": "1556399",
    "end": "1563120"
  },
  {
    "text": "is in your target container and largely the view of the world uh through your uh",
    "start": "1563120",
    "end": "1568600"
  },
  {
    "text": "ephemeral container will look just as if you were logged into that Target container post",
    "start": "1568600",
    "end": "1576480"
  },
  {
    "text": "gr uh so uh ephemeral containers uh versus uh",
    "start": "1579039",
    "end": "1584480"
  },
  {
    "text": "coup cutle exing coup cutle exing in into uh a pod or into a container uh you will",
    "start": "1584480",
    "end": "1592240"
  },
  {
    "text": "you will basically see all the resources in that container but you'll be limited",
    "start": "1592240",
    "end": "1597440"
  },
  {
    "text": "uh by mounts uh that is by the tools that are available in that container so",
    "start": "1597440",
    "end": "1604399"
  },
  {
    "text": "uh the the files will change um you will get network name spaces in IPC and UTS",
    "start": "1604399",
    "end": "1611600"
  },
  {
    "text": "and so on and so forth by default which is great uh it's very handy for doing regular Network debugging",
    "start": "1611600",
    "end": "1618840"
  },
  {
    "text": "so you can share the PID name space uh by using Target I'll talk a little bit",
    "start": "1618840",
    "end": "1624080"
  },
  {
    "text": "about that more um so let me talk a little bit about uh ephemeral uh",
    "start": "1624080",
    "end": "1630799"
  },
  {
    "text": "ephemeral containers and uh how to get access to more so uh uh we you may want",
    "start": "1630799",
    "end": "1639360"
  },
  {
    "text": "to get access for example to file system mounts and a few other things uh and I'll talk about that so ephemeral",
    "start": "1639360",
    "end": "1646279"
  },
  {
    "text": "containers are a sub resource technically uh they're basically a new resource off of PODS it is a it is now a",
    "start": "1646279",
    "end": "1653559"
  },
  {
    "text": "sub resource so if you want to address uh uh ephemeral containers uh using API",
    "start": "1653559",
    "end": "1659240"
  },
  {
    "text": "calls you're going to have to use sub resources which means that you're going to have to use raw or you're going to",
    "start": "1659240",
    "end": "1664480"
  },
  {
    "text": "have to use custom uh a API calls um I",
    "start": "1664480",
    "end": "1669880"
  },
  {
    "text": "talked about this before uh every time you run an ephemeral container it shows up in the ephemeral container Pro uh",
    "start": "1669880",
    "end": "1676159"
  },
  {
    "text": "property and the the statuses the dynamic statuses exit codes and so on",
    "start": "1676159",
    "end": "1682279"
  },
  {
    "text": "and so forth for those containers is uh listed Emeral container status oh yes",
    "start": "1682279",
    "end": "1688480"
  },
  {
    "text": "unique names must be used uh I'll talk about that a little bit more in just a second uh here's a handy uh command for",
    "start": "1688480",
    "end": "1695640"
  },
  {
    "text": "listing out ephemeral containers I get all my Emeral containers and my get all my Emeral",
    "start": "1695640",
    "end": "1701399"
  },
  {
    "text": "container statuses um as I said before not all",
    "start": "1701399",
    "end": "1707640"
  },
  {
    "text": "properties are available from C cuddle you can uh uh uh run C cuddle exec uh to",
    "start": "1707640",
    "end": "1714640"
  },
  {
    "text": "start up ephemeral containers but there are some name spaces that you don't have access to from the command line um",
    "start": "1714640",
    "end": "1721440"
  },
  {
    "text": "there's there's mounts and uh mounts excuse me mounts pids and something else",
    "start": "1721440",
    "end": "1729159"
  },
  {
    "text": "not coming to mind regardless we'll see that in a second uh oh yes you cannot remove or change ephemeral containers uh",
    "start": "1729159",
    "end": "1736799"
  },
  {
    "text": "or ephemeral container stat es so you'll see this uh once you try to access the",
    "start": "1736799",
    "end": "1742559"
  },
  {
    "text": "sub resource directly uh you can add Emeral containers you cannot remove",
    "start": "1742559",
    "end": "1747760"
  },
  {
    "text": "ephemeral containers now remember that every time you start an ephemeral container uh it's added to the ephemeral",
    "start": "1747760",
    "end": "1754480"
  },
  {
    "text": "containers uh in the Pod and the ephemeral container statuses this means as you start ephemeral containers uh",
    "start": "1754480",
    "end": "1762240"
  },
  {
    "text": "they you will get the more ephemeral containers you start against the Pod the",
    "start": "1762240",
    "end": "1767360"
  },
  {
    "text": "greater the longer that list will be uh of ephemeral containers so and I'm running a little short on",
    "start": "1767360",
    "end": "1774600"
  },
  {
    "text": "time I'm almost at the end of the presentation so I think this going to work out well um so this is an example",
    "start": "1774600",
    "end": "1780720"
  },
  {
    "text": "of a custom API call to create an Emeral container um in my case uh I do not have",
    "start": "1780720",
    "end": "1787960"
  },
  {
    "text": "access to volume mounts uh uh using the regular C cuddle debug uh command line",
    "start": "1787960",
    "end": "1794919"
  },
  {
    "text": "so this is an example of how you do that uh one since it's a container you have",
    "start": "1794919",
    "end": "1800559"
  },
  {
    "text": "access to all of the volumes in the Pod so what I can do here is do a custom API",
    "start": "1800559",
    "end": "1805720"
  },
  {
    "text": "call create a custom uh uh ephemeral container with a mount uh to create to",
    "start": "1805720",
    "end": "1812000"
  },
  {
    "text": "access my amounts now there's a good reason why ephemeral containers don't allow you just to mount uh the copy over",
    "start": "1812000",
    "end": "1819640"
  },
  {
    "text": "the mount name space of the Pod is because the proc uh the proc Mount is an",
    "start": "1819640",
    "end": "1825679"
  },
  {
    "text": "important Mount and that affects the rest of the system so you have to be choosy about which",
    "start": "1825679",
    "end": "1831279"
  },
  {
    "text": "file systems you mount and that's why you can't just go ahead and share them Mount main name space and if you like I",
    "start": "1831279",
    "end": "1838120"
  },
  {
    "text": "encourage you to play around with it because you'll get some interesting results um but regardless you'll have to",
    "start": "1838120",
    "end": "1843960"
  },
  {
    "text": "pick and choose your amounts this is one way to do it [Music]",
    "start": "1843960",
    "end": "1850480"
  },
  {
    "text": "um this is an example of",
    "start": "1850480",
    "end": "1856200"
  },
  {
    "text": "uh this is an example of uh the once again the comparison of the uh name",
    "start": "1856200",
    "end": "1863159"
  },
  {
    "text": "spaces uh between uh the the the mount uh the",
    "start": "1863159",
    "end": "1869720"
  },
  {
    "text": "excuse me the ephemeral container I just started with a new Mount notice we get a new Mount Nam space so it's basically",
    "start": "1869720",
    "end": "1876399"
  },
  {
    "text": "the same as I had before when I started a femal container by default but I created a brand new name space so I can",
    "start": "1876399",
    "end": "1883200"
  },
  {
    "text": "mount my volume Mount uh that's in the Pod so that's useful",
    "start": "1883200",
    "end": "1889919"
  },
  {
    "text": "uh here's uh taking a look at uh some of the mounts that I",
    "start": "1890279",
    "end": "1895320"
  },
  {
    "text": "have there's my new Mount SL Mount uh and I can go ahead and I can list that",
    "start": "1895320",
    "end": "1900639"
  },
  {
    "text": "voila the files are",
    "start": "1900639",
    "end": "1903840"
  },
  {
    "text": "there so uh if I can mount if I can do",
    "start": "1906720",
    "end": "1911880"
  },
  {
    "text": "custom mounts uh then I have access to some of the data that's in my pod uh once you do that uh you can start",
    "start": "1911880",
    "end": "1918760"
  },
  {
    "text": "talking about uh doing uh really interesting debugging uh and there's also a",
    "start": "1918760",
    "end": "1925440"
  },
  {
    "text": "privilege mode that allow you to do even more interesting debugging uh so after you've gotten uh um been able to do your",
    "start": "1925440",
    "end": "1932639"
  },
  {
    "text": "own mounts uh been able to get access to the network name space be able to get access to the PID name space and uh for",
    "start": "1932639",
    "end": "1940480"
  },
  {
    "text": "some things getting access to the uh privilege name space uh which I'll talk about in a second you can do some very",
    "start": "1940480",
    "end": "1946039"
  },
  {
    "text": "interesting debugging if you haven't already heard about this it's called netsh Shoot uh it's a",
    "start": "1946039",
    "end": "1952039"
  },
  {
    "text": "container that's specifically designed for debugging uh you can start it up as",
    "start": "1952039",
    "end": "1958279"
  },
  {
    "text": "a just a regular old container but it's utility is very limited as that once you",
    "start": "1958279",
    "end": "1964320"
  },
  {
    "text": "start using it as a feminal container that it's its utility really uh becomes",
    "start": "1964320",
    "end": "1969760"
  },
  {
    "text": "evident uh so it's a system level diagnostic container it contains uh",
    "start": "1969760",
    "end": "1975320"
  },
  {
    "text": "tools like s Trace L Trace TCP dump what have you uh it's very nice um so this is",
    "start": "1975320",
    "end": "1982360"
  },
  {
    "text": "an example of starting up a container using netsh shoot uh as a privilege",
    "start": "1982360",
    "end": "1989760"
  },
  {
    "text": "container so I'm skipping a few steps here uh but that's okay so here I'm",
    "start": "1989760",
    "end": "1994919"
  },
  {
    "text": "along with my volume mounts I'm adding a security context uh and setting privilege to true so this is basically",
    "start": "1994919",
    "end": "2002360"
  },
  {
    "text": "running this container as root even though uh the the container I'm debugging is not not a privileged",
    "start": "2002360",
    "end": "2008519"
  },
  {
    "text": "container I can run an Emeral container as a privileged",
    "start": "2008519",
    "end": "2013559"
  },
  {
    "text": "container here I'm going to run that shoot and then when I do that I can do all sorts of interesting things on my",
    "start": "2014159",
    "end": "2020760"
  },
  {
    "text": "target container that you'd never be able to do in a regular container uh in this case I can run sray for instance so",
    "start": "2020760",
    "end": "2028559"
  },
  {
    "text": "I can look at I can look at system calls that are executing I can look at all the network resources uh if you've got the",
    "start": "2028559",
    "end": "2034639"
  },
  {
    "text": "mount set up you can take a look at the data that's the data the changes in data that your target container is uh is",
    "start": "2034639",
    "end": "2041440"
  },
  {
    "text": "making uh to the file system so it gets uh uh pretty uh pretty",
    "start": "2041440",
    "end": "2048960"
  },
  {
    "text": "complete at that point um here I'm going to do similar uh",
    "start": "2048960",
    "end": "2054760"
  },
  {
    "text": "I'm going to do a similar comparison here here's my classic Cube cuddle exec excuse",
    "start": "2054760",
    "end": "2060760"
  },
  {
    "text": "me here's my classic coup cuddle exact so this is from slide 40 uh this is when i l logged in uh",
    "start": "2060760",
    "end": "2068760"
  },
  {
    "text": "originally to the Pod to just see all the a the see all the uh see all the",
    "start": "2068760",
    "end": "2073839"
  },
  {
    "text": "name spaces as if you just exact into it this is the one uh using my privilege",
    "start": "2073839",
    "end": "2079839"
  },
  {
    "text": "container debug container 2 there you see those two uh those two new name",
    "start": "2079839",
    "end": "2086599"
  },
  {
    "text": "spaces the cgroup Nam space and the mount namespace take a look at that cgroup Nam",
    "start": "2086599",
    "end": "2092520"
  },
  {
    "text": "space that happens to be the same name space as PID one",
    "start": "2092520",
    "end": "2098200"
  },
  {
    "text": "in that original example in slide 30 so cgroups uh control",
    "start": "2098200",
    "end": "2103960"
  },
  {
    "text": "permissions so that is the name space uh I I can I think of name spaces as being",
    "start": "2103960",
    "end": "2109800"
  },
  {
    "text": "what you can see and c groups is B basically being the dials right so here",
    "start": "2109800",
    "end": "2115119"
  },
  {
    "text": "uh we're sharing the same control as PID one uh basically in that pod so that's",
    "start": "2115119",
    "end": "2120920"
  },
  {
    "text": "what a privilege containers for yeah yeah I see yeah we're doing",
    "start": "2120920",
    "end": "2128400"
  },
  {
    "text": "we're doing good yeah um",
    "start": "2128400",
    "end": "2136320"
  },
  {
    "text": "so that's so with all of that um given that",
    "start": "2136320",
    "end": "2143720"
  },
  {
    "text": "you can get complete access to your pods uh through ephemeral containers uh to",
    "start": "2143720",
    "end": "2149599"
  },
  {
    "text": "the point of having access to uh uh uh uh the basically privilege privilege",
    "start": "2149599",
    "end": "2155960"
  },
  {
    "text": "access encourage you to look look into cgroups uh this allows us to talk about",
    "start": "2155960",
    "end": "2161839"
  },
  {
    "text": "distrus so uh dris is when you deploy",
    "start": "2161839",
    "end": "2167359"
  },
  {
    "text": "containers that only contain the application that you're going to want to run they don't contain any of the",
    "start": "2167359",
    "end": "2173839"
  },
  {
    "text": "utilities so with ephemeral containers you can start to start containers beside",
    "start": "2173839",
    "end": "2179040"
  },
  {
    "text": "uh your application containers with commands like LS and PS and what have you and given that you can have up to",
    "start": "2179040",
    "end": "2186599"
  },
  {
    "text": "you know the sort of privilege access to the Pod you can then run those commands against the containers just as if you",
    "start": "2186599",
    "end": "2192680"
  },
  {
    "text": "were in the container itself so this loosens the requirement that you have all the tools required to debug or even",
    "start": "2192680",
    "end": "2200040"
  },
  {
    "text": "really use your containers and inspect files within the within the containers themselves",
    "start": "2200040",
    "end": "2207280"
  },
  {
    "text": "so so that is basically it uh here's a list of resources I I encourage you to",
    "start": "2207680",
    "end": "2215319"
  },
  {
    "text": "take a look at these guys uh they're they're fairly valuable and they're pretty comprehensive in terms of cgroups",
    "start": "2215319",
    "end": "2222480"
  },
  {
    "text": "which is the next important topic uh which I didn't have time to cover uh as well as what makes containers work and",
    "start": "2222480",
    "end": "2230400"
  },
  {
    "text": "some of the intentions behind uh ephemeral containers Beyond simply",
    "start": "2230400",
    "end": "2235760"
  },
  {
    "text": "debugging so I'll open it up for questions I think I've got just a few more minutes yay thank you so much Aon",
    "start": "2235760",
    "end": "2243599"
  },
  {
    "text": "that was a great explanation [Applause]",
    "start": "2243599",
    "end": "2249000"
  },
  {
    "text": "I think we H we probably have time to take one question I don't see any questions online so I'm going to walk to",
    "start": "2249000",
    "end": "2256240"
  },
  {
    "text": "the",
    "start": "2256240",
    "end": "2258480"
  },
  {
    "text": "gentlemen hello uh I'm just missing a piece from your presentation what happens to the Emeral container once",
    "start": "2262880",
    "end": "2269680"
  },
  {
    "text": "you're done the buing uh it it it remains as an entry in the Pod uh it goes away you get an exit",
    "start": "2269680",
    "end": "2277680"
  },
  {
    "text": "and the once so the question is what happens to an ephemeral container once it's done uh if you exit an ephemeral",
    "start": "2277680",
    "end": "2284079"
  },
  {
    "text": "container the entry remains listed in the Pod nothing you can do about that you will see an exit status within the",
    "start": "2284079",
    "end": "2291040"
  },
  {
    "text": "ephemeral container statuses that says you know whe it whether it exited with a code of one or zero you can get some log",
    "start": "2291040",
    "end": "2298079"
  },
  {
    "text": "information from it which is Handy if you opened a terminal to that ephemeral container if you attempt to attach to it",
    "start": "2298079",
    "end": "2305040"
  },
  {
    "text": "using Cube cuddle attach you'll actually get the last screen you saw uh so that",
    "start": "2305040",
    "end": "2311680"
  },
  {
    "text": "it's kind of a double-edged sword it allows you to see any errors last errors that were output but at the same time if",
    "start": "2311680",
    "end": "2319480"
  },
  {
    "text": "somebody has access to CP cattle attach they could see some sensitive information that might be listed there",
    "start": "2319480",
    "end": "2325400"
  },
  {
    "text": "thank you uhhuh oh and once you restart the Pod",
    "start": "2325400",
    "end": "2330520"
  },
  {
    "text": "the femal containers will go away and you get to start over from scratch",
    "start": "2330520",
    "end": "2337319"
  },
  {
    "text": "okay with that uh let's thank Aron again for a wonderful presentation good job",
    "start": "2337920",
    "end": "2345960"
  }
]