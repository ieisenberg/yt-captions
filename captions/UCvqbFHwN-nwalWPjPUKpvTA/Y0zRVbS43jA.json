[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "hey everyone thank you for joining the",
    "start": "1760",
    "end": "3679"
  },
  {
    "text": "prom con keynote today i'm looking",
    "start": "3679",
    "end": "5520"
  },
  {
    "text": "forward to all of the exciting talks",
    "start": "5520",
    "end": "7040"
  },
  {
    "text": "that we have in line this year",
    "start": "7040",
    "end": "8800"
  },
  {
    "text": "i'd like to kick off the conference by",
    "start": "8800",
    "end": "10559"
  },
  {
    "text": "exploring the prometheus ecosystem and",
    "start": "10559",
    "end": "12960"
  },
  {
    "text": "show that there is much more to it than",
    "start": "12960",
    "end": "14719"
  },
  {
    "text": "just prometheus we can easily do that",
    "start": "14719",
    "end": "16800"
  },
  {
    "text": "but by going through the monitoring",
    "start": "16800",
    "end": "18480"
  },
  {
    "text": "stack that we deploy as part of",
    "start": "18480",
    "end": "20240"
  },
  {
    "text": "openshift",
    "start": "20240",
    "end": "21359"
  },
  {
    "text": "and for those of you who are not",
    "start": "21359",
    "end": "22640"
  },
  {
    "text": "familiar with openshift you can think of",
    "start": "22640",
    "end": "24800"
  },
  {
    "text": "it merely as a kubernetes distribution",
    "start": "24800",
    "end": "27199"
  },
  {
    "text": "so everything that we build",
    "start": "27199",
    "end": "29279"
  },
  {
    "text": "as part of the openshift monitoring",
    "start": "29279",
    "end": "30800"
  },
  {
    "text": "stack very easily",
    "start": "30800",
    "end": "32800"
  },
  {
    "text": "applies and translates to kubernetes",
    "start": "32800",
    "end": "34960"
  },
  {
    "text": "itself",
    "start": "34960",
    "end": "36480"
  },
  {
    "text": "i'll just briefly introduce myself my",
    "start": "36480",
    "end": "38320"
  },
  {
    "text": "name is philip i'm a member of the",
    "start": "38320",
    "end": "41040"
  },
  {
    "text": "ratchet openshift monitoring team",
    "start": "41040",
    "end": "43440"
  },
  {
    "text": "besides that i'm also fairly active in",
    "start": "43440",
    "end": "45600"
  },
  {
    "text": "upstream projects most notably in the",
    "start": "45600",
    "end": "47680"
  },
  {
    "text": "prometheus operator and cube state",
    "start": "47680",
    "end": "49600"
  },
  {
    "text": "metrics",
    "start": "49600",
    "end": "52000"
  },
  {
    "start": "51000",
    "end": "275000"
  },
  {
    "text": "all right let's jump right into it",
    "start": "52000",
    "end": "54640"
  },
  {
    "text": "in order to illustrate how we would",
    "start": "54640",
    "end": "57600"
  },
  {
    "text": "build a full bone monitoring solution by",
    "start": "57600",
    "end": "59760"
  },
  {
    "text": "just leveraging what's available there",
    "start": "59760",
    "end": "61840"
  },
  {
    "text": "in the ecosystem",
    "start": "61840",
    "end": "63280"
  },
  {
    "text": "let's start by a vanilla kubernetes",
    "start": "63280",
    "end": "65198"
  },
  {
    "text": "distribution",
    "start": "65199",
    "end": "66479"
  },
  {
    "text": "um sorry i have a little kubernetes",
    "start": "66479",
    "end": "68000"
  },
  {
    "text": "cluster",
    "start": "68000",
    "end": "68960"
  },
  {
    "text": "and",
    "start": "68960",
    "end": "69840"
  },
  {
    "text": "see what we can build",
    "start": "69840",
    "end": "71680"
  },
  {
    "text": "so for us at the core of the monitoring",
    "start": "71680",
    "end": "74880"
  },
  {
    "text": "stack is of course no surprise",
    "start": "74880",
    "end": "76640"
  },
  {
    "text": "prometheus we deploy prometheus using",
    "start": "76640",
    "end": "79040"
  },
  {
    "text": "the prometheus operator",
    "start": "79040",
    "end": "80960"
  },
  {
    "text": "and we do that because the operator can",
    "start": "80960",
    "end": "83200"
  },
  {
    "text": "do a very good job at upgrading",
    "start": "83200",
    "end": "85119"
  },
  {
    "text": "prometheus so whenever we need to",
    "start": "85119",
    "end": "88240"
  },
  {
    "text": "deploy a new version into the stack we",
    "start": "88240",
    "end": "90960"
  },
  {
    "text": "are confident that the operator is going",
    "start": "90960",
    "end": "92720"
  },
  {
    "text": "to do the right thing and is going to",
    "start": "92720",
    "end": "95520"
  },
  {
    "text": "make sure that the upgrade is",
    "start": "95520",
    "end": "97840"
  },
  {
    "text": "successful",
    "start": "97840",
    "end": "99119"
  },
  {
    "text": "furthermore the operator also provides",
    "start": "99119",
    "end": "101200"
  },
  {
    "text": "some self-service mechanisms that we can",
    "start": "101200",
    "end": "103680"
  },
  {
    "text": "use to configure prometheus in a",
    "start": "103680",
    "end": "105360"
  },
  {
    "text": "decentralized manner and we'll see how",
    "start": "105360",
    "end": "107840"
  },
  {
    "text": "we use",
    "start": "107840",
    "end": "108880"
  },
  {
    "text": "those mechanism in just a bit",
    "start": "108880",
    "end": "112479"
  },
  {
    "text": "so having a prometheus instance lying",
    "start": "112479",
    "end": "114640"
  },
  {
    "text": "around is is not very useful without",
    "start": "114640",
    "end": "117520"
  },
  {
    "text": "having any metrics",
    "start": "117520",
    "end": "119280"
  },
  {
    "text": "uh besides prometheus we deployed two",
    "start": "119280",
    "end": "121920"
  },
  {
    "text": "very important exporters for us namely",
    "start": "121920",
    "end": "124399"
  },
  {
    "text": "cubestate metrics and node exporter",
    "start": "124399",
    "end": "127520"
  },
  {
    "text": "metrics gives us metrics about the",
    "start": "127520",
    "end": "129599"
  },
  {
    "text": "kubernetes environment",
    "start": "129599",
    "end": "132160"
  },
  {
    "text": "whereas node exporter gives us real time",
    "start": "132160",
    "end": "134959"
  },
  {
    "text": "information about resource usage of",
    "start": "134959",
    "end": "137040"
  },
  {
    "text": "nodes and",
    "start": "137040",
    "end": "138800"
  },
  {
    "text": "processes or containers",
    "start": "138800",
    "end": "141040"
  },
  {
    "text": "so we can see that with just a handful",
    "start": "141040",
    "end": "143120"
  },
  {
    "text": "of components we have",
    "start": "143120",
    "end": "145280"
  },
  {
    "text": "what is traditionally referred to as",
    "start": "145280",
    "end": "147920"
  },
  {
    "text": "infrastructure monitoring and this setup",
    "start": "147920",
    "end": "149920"
  },
  {
    "text": "is already useful i mean you can query a",
    "start": "149920",
    "end": "151599"
  },
  {
    "text": "lot of metrics if you have a",
    "start": "151599",
    "end": "153440"
  },
  {
    "text": "dashboarding system we can create",
    "start": "153440",
    "end": "155040"
  },
  {
    "text": "dashboards we can create recording rules",
    "start": "155040",
    "end": "157120"
  },
  {
    "text": "and so on",
    "start": "157120",
    "end": "159599"
  },
  {
    "text": "in addition to what we have here we also",
    "start": "159840",
    "end": "162000"
  },
  {
    "text": "allow what we consider core openshift",
    "start": "162000",
    "end": "166080"
  },
  {
    "text": "components to register their targets",
    "start": "166080",
    "end": "168080"
  },
  {
    "text": "with this primitive instance and they do",
    "start": "168080",
    "end": "170239"
  },
  {
    "text": "that by using the service and pod",
    "start": "170239",
    "end": "172000"
  },
  {
    "text": "monitors",
    "start": "172000",
    "end": "173120"
  },
  {
    "text": "that are provided by the prometheus",
    "start": "173120",
    "end": "175120"
  },
  {
    "text": "operator so the operator then scrapes",
    "start": "175120",
    "end": "177599"
  },
  {
    "text": "those resources and configures",
    "start": "177599",
    "end": "179120"
  },
  {
    "text": "prometheus to scrape",
    "start": "179120",
    "end": "182319"
  },
  {
    "text": "core openshift components",
    "start": "182720",
    "end": "185040"
  },
  {
    "text": "um and this kind of",
    "start": "185040",
    "end": "187920"
  },
  {
    "text": "setup up until now um has all of the",
    "start": "187920",
    "end": "191040"
  },
  {
    "text": "metrics that are required for monitoring",
    "start": "191040",
    "end": "193440"
  },
  {
    "text": "openshift as a platform and this is the",
    "start": "193440",
    "end": "196000"
  },
  {
    "text": "reason why we call this setup the",
    "start": "196000",
    "end": "198319"
  },
  {
    "text": "platform monitoring premises",
    "start": "198319",
    "end": "200879"
  },
  {
    "text": "we also allow users to monitor their",
    "start": "200879",
    "end": "203040"
  },
  {
    "text": "applications but we",
    "start": "203040",
    "end": "205519"
  },
  {
    "text": "spin up a new instance for them we want",
    "start": "205519",
    "end": "208000"
  },
  {
    "text": "to separate the two failure domains so",
    "start": "208000",
    "end": "210480"
  },
  {
    "text": "that if a user application accidentally",
    "start": "210480",
    "end": "213040"
  },
  {
    "text": "causes a cardinality explosion",
    "start": "213040",
    "end": "215360"
  },
  {
    "text": "and the platform metrics are still",
    "start": "215360",
    "end": "217519"
  },
  {
    "text": "protected and admins or anyone with",
    "start": "217519",
    "end": "219760"
  },
  {
    "text": "access to those metrics can troubleshoot",
    "start": "219760",
    "end": "222080"
  },
  {
    "text": "and see what's going on",
    "start": "222080",
    "end": "223680"
  },
  {
    "text": "in the platform",
    "start": "223680",
    "end": "226239"
  },
  {
    "text": "of course for routing alerts we deploy",
    "start": "226239",
    "end": "229280"
  },
  {
    "text": "alert manager again through the operator",
    "start": "229280",
    "end": "232000"
  },
  {
    "text": "and an extremely important component for",
    "start": "232000",
    "end": "234159"
  },
  {
    "text": "us is the thundersquare so the query or",
    "start": "234159",
    "end": "236720"
  },
  {
    "text": "the time square serves two functions for",
    "start": "236720",
    "end": "239360"
  },
  {
    "text": "us one it provides a single",
    "start": "239360",
    "end": "241760"
  },
  {
    "text": "um query endpoint to users and therefore",
    "start": "241760",
    "end": "245360"
  },
  {
    "text": "it serves as an api essentially for the",
    "start": "245360",
    "end": "248319"
  },
  {
    "text": "monitoring stack",
    "start": "248319",
    "end": "250080"
  },
  {
    "text": "so users don't have to think like which",
    "start": "250080",
    "end": "252560"
  },
  {
    "text": "prometheus do i need to query for which",
    "start": "252560",
    "end": "254720"
  },
  {
    "text": "metric they simply use a single endpoint",
    "start": "254720",
    "end": "257680"
  },
  {
    "text": "and two it also um so the query can join",
    "start": "257680",
    "end": "261840"
  },
  {
    "text": "metrics across",
    "start": "261840",
    "end": "263919"
  },
  {
    "text": "prometheus instances which means that",
    "start": "263919",
    "end": "266639"
  },
  {
    "text": "users can issue queries that have",
    "start": "266639",
    "end": "269040"
  },
  {
    "text": "metrics both from the platform",
    "start": "269040",
    "end": "271520"
  },
  {
    "text": "and from their applications",
    "start": "271520",
    "end": "274720"
  },
  {
    "text": "um",
    "start": "274720",
    "end": "275520"
  },
  {
    "start": "275000",
    "end": "419000"
  },
  {
    "text": "all right so there's one pretty",
    "start": "275520",
    "end": "277600"
  },
  {
    "text": "interesting aspect of the monitoring",
    "start": "277600",
    "end": "279120"
  },
  {
    "text": "stack which i also want to bring up",
    "start": "279120",
    "end": "281600"
  },
  {
    "text": "that's multi-tenancy so openshift itself",
    "start": "281600",
    "end": "284000"
  },
  {
    "text": "is multi-tank",
    "start": "284000",
    "end": "285759"
  },
  {
    "text": "this is kind of a fundamental building",
    "start": "285759",
    "end": "287360"
  },
  {
    "text": "block which means that we can have",
    "start": "287360",
    "end": "289440"
  },
  {
    "text": "multiple tenants running in the same",
    "start": "289440",
    "end": "291199"
  },
  {
    "text": "cluster at the same time",
    "start": "291199",
    "end": "292960"
  },
  {
    "text": "and thereby using the same monitoring",
    "start": "292960",
    "end": "294960"
  },
  {
    "text": "stack what we",
    "start": "294960",
    "end": "297040"
  },
  {
    "text": "want to",
    "start": "297040",
    "end": "298160"
  },
  {
    "text": "do is we want to carry over this",
    "start": "298160",
    "end": "299919"
  },
  {
    "text": "multi-tenant property into the",
    "start": "299919",
    "end": "301759"
  },
  {
    "text": "monitoring stack and we want to say",
    "start": "301759",
    "end": "304479"
  },
  {
    "text": "tenants should only be able to access",
    "start": "304479",
    "end": "306880"
  },
  {
    "text": "metrics",
    "start": "306880",
    "end": "308000"
  },
  {
    "text": "that",
    "start": "308000",
    "end": "309440"
  },
  {
    "text": "they essentially have access to that",
    "start": "309440",
    "end": "311600"
  },
  {
    "text": "they that belong to them",
    "start": "311600",
    "end": "314000"
  },
  {
    "text": "so multi-tenancy in openshift is defined",
    "start": "314000",
    "end": "316560"
  },
  {
    "text": "on a space basis and if tenant one has",
    "start": "316560",
    "end": "319199"
  },
  {
    "text": "access to namespace one only",
    "start": "319199",
    "end": "321360"
  },
  {
    "text": "they should only be able to see metrics",
    "start": "321360",
    "end": "323600"
  },
  {
    "text": "from namespace 1.",
    "start": "323600",
    "end": "325759"
  },
  {
    "text": "so this is not natively kind of",
    "start": "325759",
    "end": "328400"
  },
  {
    "text": "available in primitives out of the box",
    "start": "328400",
    "end": "330479"
  },
  {
    "text": "but we",
    "start": "330479",
    "end": "331759"
  },
  {
    "text": "again reach into the ecosystem and we",
    "start": "331759",
    "end": "334560"
  },
  {
    "text": "pull in a component called from label",
    "start": "334560",
    "end": "337120"
  },
  {
    "text": "proxy which is a community project",
    "start": "337120",
    "end": "340240"
  },
  {
    "text": "so from label proxy is uh able to act as",
    "start": "340240",
    "end": "342880"
  },
  {
    "text": "a proxy in front of prometheus and",
    "start": "342880",
    "end": "344880"
  },
  {
    "text": "enforce a particular label in any of the",
    "start": "344880",
    "end": "348000"
  },
  {
    "text": "queries that come into",
    "start": "348000",
    "end": "350240"
  },
  {
    "text": "um into prometheus",
    "start": "350240",
    "end": "352560"
  },
  {
    "text": "so um",
    "start": "352560",
    "end": "353840"
  },
  {
    "text": "we specifically configure permeable",
    "start": "353840",
    "end": "356560"
  },
  {
    "text": "proxy to inject the namespace label but",
    "start": "356560",
    "end": "358960"
  },
  {
    "text": "um this is an average configuration",
    "start": "358960",
    "end": "362080"
  },
  {
    "text": "specific to us",
    "start": "362080",
    "end": "363440"
  },
  {
    "text": "and so when a tenant issues",
    "start": "363440",
    "end": "365919"
  },
  {
    "text": "any prompt query in this case for",
    "start": "365919",
    "end": "367840"
  },
  {
    "text": "example cube pod info from level proxy",
    "start": "367840",
    "end": "370639"
  },
  {
    "text": "is going to inject the appropriate names",
    "start": "370639",
    "end": "372639"
  },
  {
    "text": "to this label",
    "start": "372639",
    "end": "374000"
  },
  {
    "text": "and so tenants don't actually know that",
    "start": "374000",
    "end": "376720"
  },
  {
    "text": "this transformation is happening they",
    "start": "376720",
    "end": "378479"
  },
  {
    "text": "only",
    "start": "378479",
    "end": "379680"
  },
  {
    "text": "yeah they would they basically make the",
    "start": "379680",
    "end": "381199"
  },
  {
    "text": "query as they would anywhere",
    "start": "381199",
    "end": "383360"
  },
  {
    "text": "and",
    "start": "383360",
    "end": "384479"
  },
  {
    "text": "the kind of these underlying plumbing",
    "start": "384479",
    "end": "387280"
  },
  {
    "text": "scopes the query to",
    "start": "387280",
    "end": "389360"
  },
  {
    "text": "return metrics that belong to them",
    "start": "389360",
    "end": "393280"
  },
  {
    "text": "all right so this",
    "start": "393600",
    "end": "395199"
  },
  {
    "text": "is kind of this kind of setup has worked",
    "start": "395199",
    "end": "397360"
  },
  {
    "text": "for us",
    "start": "397360",
    "end": "398319"
  },
  {
    "text": "for a fairly long time we have",
    "start": "398319",
    "end": "400880"
  },
  {
    "text": "um this kind of stack deployed across",
    "start": "400880",
    "end": "403919"
  },
  {
    "text": "probably tens of thousands of clusters",
    "start": "403919",
    "end": "405840"
  },
  {
    "text": "at the moment",
    "start": "405840",
    "end": "407039"
  },
  {
    "text": "what we are seeing though is that some",
    "start": "407039",
    "end": "409520"
  },
  {
    "text": "some users are growing out of this setup",
    "start": "409520",
    "end": "411840"
  },
  {
    "text": "and",
    "start": "411840",
    "end": "412960"
  },
  {
    "text": "they do that by requiring either a bit",
    "start": "412960",
    "end": "415120"
  },
  {
    "text": "more flexibility or a bit more",
    "start": "415120",
    "end": "417120"
  },
  {
    "text": "resilience",
    "start": "417120",
    "end": "419680"
  },
  {
    "start": "419000",
    "end": "530000"
  },
  {
    "text": "we see here for example that we have two",
    "start": "419680",
    "end": "421680"
  },
  {
    "text": "prometheus instances but",
    "start": "421680",
    "end": "424319"
  },
  {
    "text": "we don't necessarily have to have two i",
    "start": "424319",
    "end": "426800"
  },
  {
    "text": "mean these two number two is fully",
    "start": "426800",
    "end": "429919"
  },
  {
    "text": "arbitrary and has worked for us until",
    "start": "429919",
    "end": "432240"
  },
  {
    "text": "now",
    "start": "432240",
    "end": "433440"
  },
  {
    "text": "but what we want to do next to improve",
    "start": "433440",
    "end": "435360"
  },
  {
    "text": "the resiliency",
    "start": "435360",
    "end": "436479"
  },
  {
    "text": "and also the flexibility",
    "start": "436479",
    "end": "438319"
  },
  {
    "text": "is to slim down this prometheus instance",
    "start": "438319",
    "end": "441360"
  },
  {
    "text": "that we call platform monitoring",
    "start": "441360",
    "end": "442960"
  },
  {
    "text": "primitives",
    "start": "442960",
    "end": "444160"
  },
  {
    "text": "and",
    "start": "444160",
    "end": "445039"
  },
  {
    "text": "use it for",
    "start": "445039",
    "end": "446560"
  },
  {
    "text": "absolutely critical metrics that are",
    "start": "446560",
    "end": "449440"
  },
  {
    "text": "that are needed for monitoring",
    "start": "449440",
    "end": "451840"
  },
  {
    "text": "a plane kubernetes cluster",
    "start": "451840",
    "end": "454000"
  },
  {
    "text": "and then we would delegate the",
    "start": "454000",
    "end": "456240"
  },
  {
    "text": "monitoring of each core component to",
    "start": "456240",
    "end": "459840"
  },
  {
    "text": "its own monitoring stack",
    "start": "459840",
    "end": "461919"
  },
  {
    "text": "so we as a monitoring team would build",
    "start": "461919",
    "end": "464560"
  },
  {
    "text": "um and package a well",
    "start": "464560",
    "end": "467280"
  },
  {
    "text": "formulated opinion with that way to run",
    "start": "467280",
    "end": "470080"
  },
  {
    "text": "a prometheus-based stack with high",
    "start": "470080",
    "end": "471680"
  },
  {
    "text": "availability multitask in mind and all",
    "start": "471680",
    "end": "474479"
  },
  {
    "text": "of the",
    "start": "474479",
    "end": "475599"
  },
  {
    "text": "best practices that we've kind of",
    "start": "475599",
    "end": "478000"
  },
  {
    "text": "learned while running prometheus and",
    "start": "478000",
    "end": "480800"
  },
  {
    "text": "then we would allow any core component",
    "start": "480800",
    "end": "483520"
  },
  {
    "text": "any team to spin up such a stack through",
    "start": "483520",
    "end": "485840"
  },
  {
    "text": "either a custom resource",
    "start": "485840",
    "end": "487599"
  },
  {
    "text": "or through some other configuration",
    "start": "487599",
    "end": "489120"
  },
  {
    "text": "mechanism",
    "start": "489120",
    "end": "490879"
  },
  {
    "text": "and again there's no reason why users",
    "start": "490879",
    "end": "492960"
  },
  {
    "text": "shouldn't be allowed to do this we would",
    "start": "492960",
    "end": "494879"
  },
  {
    "text": "also like to allow users to",
    "start": "494879",
    "end": "497759"
  },
  {
    "text": "spin up such stacks",
    "start": "497759",
    "end": "499919"
  },
  {
    "text": "with",
    "start": "499919",
    "end": "500639"
  },
  {
    "text": "very minimal configuration",
    "start": "500639",
    "end": "503840"
  },
  {
    "text": "so",
    "start": "503840",
    "end": "504840"
  },
  {
    "text": "um this kind of we're still exploring",
    "start": "504840",
    "end": "507759"
  },
  {
    "text": "this approach and we're the beginning of",
    "start": "507759",
    "end": "509440"
  },
  {
    "text": "the project but",
    "start": "509440",
    "end": "510960"
  },
  {
    "text": "once we launch it we would like to make",
    "start": "510960",
    "end": "513360"
  },
  {
    "text": "it kind of a fully open source",
    "start": "513360",
    "end": "516640"
  },
  {
    "text": "project that anyone can contribute to",
    "start": "516640",
    "end": "518719"
  },
  {
    "text": "and anyone can use so we will want to",
    "start": "518719",
    "end": "521039"
  },
  {
    "text": "have",
    "start": "521039",
    "end": "522000"
  },
  {
    "text": "to provide kind of a",
    "start": "522000",
    "end": "524000"
  },
  {
    "text": "well a good way to run a",
    "start": "524000",
    "end": "525519"
  },
  {
    "text": "prometheus-based stack in isolation",
    "start": "525519",
    "end": "529680"
  },
  {
    "start": "530000",
    "end": "578000"
  },
  {
    "text": "um",
    "start": "530320",
    "end": "531200"
  },
  {
    "text": "so in summary this is how we leverage",
    "start": "531200",
    "end": "534160"
  },
  {
    "text": "everything that the community has built",
    "start": "534160",
    "end": "536720"
  },
  {
    "text": "and is available in the community to",
    "start": "536720",
    "end": "538320"
  },
  {
    "text": "kind of compose a very robust and very",
    "start": "538320",
    "end": "541440"
  },
  {
    "text": "good monitoring stack",
    "start": "541440",
    "end": "543040"
  },
  {
    "text": "of course we as a monitoring team also",
    "start": "543040",
    "end": "544800"
  },
  {
    "text": "actively contribute to almost all of the",
    "start": "544800",
    "end": "547200"
  },
  {
    "text": "projects that",
    "start": "547200",
    "end": "548880"
  },
  {
    "text": "we went through here and all the",
    "start": "548880",
    "end": "550480"
  },
  {
    "text": "projects that we pull in for our stack",
    "start": "550480",
    "end": "553279"
  },
  {
    "text": "and if you are someone who",
    "start": "553279",
    "end": "556880"
  },
  {
    "text": "enjoys being part of this community and",
    "start": "556880",
    "end": "559279"
  },
  {
    "text": "would like to keep it vibrant would like",
    "start": "559279",
    "end": "562000"
  },
  {
    "text": "to keep contributing to it please let us",
    "start": "562000",
    "end": "564160"
  },
  {
    "text": "know we're currently hiring for people",
    "start": "564160",
    "end": "566480"
  },
  {
    "text": "who are excited about",
    "start": "566480",
    "end": "568160"
  },
  {
    "text": "open source and monitoring and just",
    "start": "568160",
    "end": "570640"
  },
  {
    "text": "excited about software development in",
    "start": "570640",
    "end": "572560"
  },
  {
    "text": "general",
    "start": "572560",
    "end": "573839"
  },
  {
    "text": "so thank you for listening and enjoy the",
    "start": "573839",
    "end": "576880"
  },
  {
    "text": "rest of the conference",
    "start": "576880",
    "end": "579920"
  }
]