[
  {
    "text": "uh great hello everyone uh welcome to spiffy the easy way um I appreciate that",
    "start": "359",
    "end": "6839"
  },
  {
    "text": "it is the last talk of cubec con which uh makes it extra special that you've all turned up I I wasn't sure how many",
    "start": "6839",
    "end": "12880"
  },
  {
    "text": "to expect and I'm seeing a lot of faces smiling back at me that's always lovely I actually see a lot of faces that I",
    "start": "12880",
    "end": "18600"
  },
  {
    "text": "recognize from the conference as well people that have dropped by the C manager Booth uh it was great to see so many of you uh Dro by uh my name's Ash",
    "start": "18600",
    "end": "26199"
  },
  {
    "text": "this is Tim uh we're both software engineers at Veni which is now a cyber",
    "start": "26199",
    "end": "31399"
  },
  {
    "text": "company uh as as you may have guessed from the title of this slide we're here to talk about spiffy Ander manager so",
    "start": "31399",
    "end": "38520"
  },
  {
    "text": "let's jump into that make sure that we're both on the we're all on the same page so this is the slide that we throw",
    "start": "38520",
    "end": "45640"
  },
  {
    "text": "on pretty much any talk we do about C manager um an important change to this slide though is that it says cntf",
    "start": "45640",
    "end": "51559"
  },
  {
    "text": "graduated now which is what we announced here in Salt Lake City this year um this is the the first cubec con since we hit",
    "start": "51559",
    "end": "57960"
  },
  {
    "text": "graduation and it's a huge mil stone for the project um Zone Manager is we like",
    "start": "57960",
    "end": "63359"
  },
  {
    "text": "to say the easiest way to manage x509 certificates in kubernetes um being a",
    "start": "63359",
    "end": "68640"
  },
  {
    "text": "graduated project is kind of a stamp of approval from the cntf that we're we're we're issuing issuing those certificates",
    "start": "68640",
    "end": "74960"
  },
  {
    "text": "correctly and that's good um we've got some big numbers which is also a customary for this slide but we an",
    "start": "74960",
    "end": "81479"
  },
  {
    "text": "important one for me is that we hear maybe 80 to 90% of clusters actually install SE manager by default which is",
    "start": "81479",
    "end": "88000"
  },
  {
    "text": "crazy to think about um graduated is actually the same level that kubernetes itself is at so so again awesome to to",
    "start": "88000",
    "end": "95320"
  },
  {
    "text": "be at that level um it was a long road we're really happy to be here um so yeah",
    "start": "95320",
    "end": "100640"
  },
  {
    "text": "we'll obviously be using SE manager in this talk and talking about that more but um we're also going to be talking",
    "start": "100640",
    "end": "105960"
  },
  {
    "text": "about a different cncf graduated project which is spiffy um so spiffy if you're not",
    "start": "105960",
    "end": "112079"
  },
  {
    "text": "familiar is a uh sort of a specification for uh identity um specifically it it",
    "start": "112079",
    "end": "119079"
  },
  {
    "text": "defines a iy ID which is sort of like an identity for a a workload or a machine",
    "start": "119079",
    "end": "124759"
  },
  {
    "text": "um which is a sort of known format that you can pass and then use if you want to um it also defines a wrapper for that",
    "start": "124759",
    "end": "131800"
  },
  {
    "text": "identity which is called an esid so uh your spiffy identity is wrapped inside an sfid and that sfid can be of two",
    "start": "131800",
    "end": "138800"
  },
  {
    "text": "different types it's there's x509 which is the same format that CT manager uses to issue CTS for your website say and",
    "start": "138800",
    "end": "145920"
  },
  {
    "text": "JWT or jot uh which is the same format that causes numerous security issues",
    "start": "145920",
    "end": "151440"
  },
  {
    "text": "around the world when people send them and don't realize that they shouldn't but uh both of those are supported by",
    "start": "151440",
    "end": "158120"
  },
  {
    "text": "spiffy and uh it also defines importantly a a workload API the workload API is so that wherever your uh",
    "start": "158120",
    "end": "166280"
  },
  {
    "text": "workload is running be that a GitHub action or a kubernetes pod or a VM or whatever um all your application needs",
    "start": "166280",
    "end": "173440"
  },
  {
    "text": "to know is how to talk to the workload API and then it'll get back a identity that it can use to authenticate to other",
    "start": "173440",
    "end": "179319"
  },
  {
    "text": "services um spiffy is is cool if I do say so myself and um it's",
    "start": "179319",
    "end": "187640"
  },
  {
    "text": "pretty widely supported if you consider that like anything that can accept jwt's or x509 SS can kind of support spiffy",
    "start": "187640",
    "end": "194680"
  },
  {
    "text": "that doesn't mean there's going to be a rich integration but it does mean that there is some level of support like uh my SQL for example doesn't necessarily",
    "start": "194680",
    "end": "202000"
  },
  {
    "text": "automatically support spiffy but it can accept x59 insert so it's kind of part of the way there that said a lot of",
    "start": "202000",
    "end": "208879"
  },
  {
    "text": "products and services do have built-in support for spiffy in in one way or another um I've got some logos here but",
    "start": "208879",
    "end": "216560"
  },
  {
    "text": "there there are plenty of other things uh a big one to highlight is uh the cloud providers and you can actually use",
    "start": "216560",
    "end": "222000"
  },
  {
    "text": "this stuff with AWS gcp and aure and yes that is foreshadowing for the demo",
    "start": "222000",
    "end": "228480"
  },
  {
    "text": "later um so what are we trying to do like when we say spiffy the easy way what are we trying to do well Spire is",
    "start": "228480",
    "end": "235200"
  },
  {
    "text": "the reference implementation of spiffy it's a a third cncf graduated project",
    "start": "235200",
    "end": "240720"
  },
  {
    "text": "uh and it's the thing that people reach for if they think they want to do spiffy they want this Universal workload identity that lets them uh uh sort of",
    "start": "240720",
    "end": "248560"
  },
  {
    "text": "have one format that they can share across their infrastructure the Spire is great we love Spire no shade on Spire uh",
    "start": "248560",
    "end": "255400"
  },
  {
    "text": "we think it's good to explore alternative implementations as well though um if nothing else it helps us",
    "start": "255400",
    "end": "261280"
  },
  {
    "text": "learn and see what the pain points are of existing stuff maybe we find new uh ways of doing things maybe there's",
    "start": "261280",
    "end": "267240"
  },
  {
    "text": "things we can improve um it's always fun to try like that's another thing right",
    "start": "267240",
    "end": "272400"
  },
  {
    "text": "it's it's it's uh there's a lot that we can learn by trying what we'd like to say is that we think specifications are",
    "start": "272400",
    "end": "278160"
  },
  {
    "text": "best with multiple implementations buers great can we do something similar well",
    "start": "278160",
    "end": "284440"
  },
  {
    "text": "let's compare the two um there's there's something important that stands out immediately which is that Spire is",
    "start": "284440",
    "end": "290479"
  },
  {
    "text": "trying to run on more things than just kubernetes and so manager is not trying to do that uh so manager is is proudly a",
    "start": "290479",
    "end": "297800"
  },
  {
    "text": "kubernetes tool and focused on that so that means that c manager will only run there um but that actually has an",
    "start": "297800",
    "end": "304639"
  },
  {
    "text": "important implication for what we're trying to do um to to set up Spire you need a database of some kind be that my",
    "start": "304639",
    "end": "311400"
  },
  {
    "text": "SQL post sqlite whatever um that's great but that is an operational overhead um I",
    "start": "311400",
    "end": "318840"
  },
  {
    "text": "don't I'm not confident running databases in production they're scary and they break um you can pay a cloud",
    "start": "318840",
    "end": "324800"
  },
  {
    "text": "provider but then you've got to pay a cloud provider you know it's a lot of overhead that you do have to take on",
    "start": "324800",
    "end": "330319"
  },
  {
    "text": "and it's important to remember as well that part of the aim of spiffy is is sort of solving the bottom Turtle problem where you're always trying to",
    "start": "330319",
    "end": "336440"
  },
  {
    "text": "find another way of authenticating your service uh checking your identity getting your identity all that stuff so",
    "start": "336440",
    "end": "343039"
  },
  {
    "text": "having to actually have a database that you need to authenticate to is a non-trivial overhead um of course there",
    "start": "343039",
    "end": "350440"
  },
  {
    "text": "is other parts to uh spiffy than just that um there's the two sfid formats",
    "start": "350440",
    "end": "356440"
  },
  {
    "text": "that we've mentioned and there is a spiffy workload API which manager doesn't necessarily support any of those",
    "start": "356440",
    "end": "362280"
  },
  {
    "text": "so how are we going to do it well let's explore that I'll pass over to Tim all",
    "start": "362280",
    "end": "367919"
  },
  {
    "text": "right so let's start with x509 so as you may know SE manager is the tool to get",
    "start": "367919",
    "end": "375199"
  },
  {
    "text": "x59 certificats in kubernetes so x59 s hits surely must",
    "start": "375199",
    "end": "382280"
  },
  {
    "text": "also be supported by C man right well I'll tell you that later but first let's",
    "start": "382280",
    "end": "387800"
  },
  {
    "text": "take a look at x59 s fits and how we can easily obtain them well the easiest setup to get an",
    "start": "387800",
    "end": "395560"
  },
  {
    "text": "x59 sfit is a setup where you already have a Spire server running for example",
    "start": "395560",
    "end": "401599"
  },
  {
    "text": "someone else in your organization set it up for you you can just use it um how do",
    "start": "401599",
    "end": "406800"
  },
  {
    "text": "you use it well you use this thing called Spire agent it's actually a CLI called with the same name as the actual",
    "start": "406800",
    "end": "413440"
  },
  {
    "text": "spy rents so bit confusing but this C you use to connect to a",
    "start": "413440",
    "end": "420120"
  },
  {
    "text": "spiffy workload API socket and then you request from that spiffy workload API",
    "start": "420120",
    "end": "425560"
  },
  {
    "text": "socket a x59 certificate so if you run this command what you will get is a x",
    "start": "425560",
    "end": "431599"
  },
  {
    "text": "certificate a private key and then you can use that to authenticate to other",
    "start": "431599",
    "end": "437160"
  },
  {
    "text": "services to do all these spiffy stuff that you want to do but this is just an x59 right so",
    "start": "437160",
    "end": "444520"
  },
  {
    "text": "maybe there are other ways to obtain such a certificate well",
    "start": "444520",
    "end": "450879"
  },
  {
    "text": "if you're familiar with x509 you might know something called op SSL this is amazing common line tool",
    "start": "450879",
    "end": "458160"
  },
  {
    "text": "that doesn't confuse anyone um but yeah basically here you see this very elegant",
    "start": "458160",
    "end": "466000"
  },
  {
    "text": "uh commands where we kind of try to replicate this uh x59 sfit so what we do",
    "start": "466000",
    "end": "475120"
  },
  {
    "text": "we just request a or we create a a asfit",
    "start": "475120",
    "end": "480720"
  },
  {
    "text": "with the sun U set to this spiffy identifier we also we sign this",
    "start": "480720",
    "end": "488000"
  },
  {
    "text": "certificates using the ca that's part of our uh spiffy",
    "start": "488000",
    "end": "493120"
  },
  {
    "text": "pki and ultimately what we will get is a stiff that's identical to the stiff that we just got using the Spire agent",
    "start": "493120",
    "end": "500360"
  },
  {
    "text": "CLI so if this is an alternative well surely it must be",
    "start": "500360",
    "end": "506240"
  },
  {
    "text": "possible to do the same thing using SE manager right well of course you can",
    "start": "506240",
    "end": "511440"
  },
  {
    "text": "here you have an example of a certificate resource insert manager where we specify the spiffy identifier",
    "start": "511440",
    "end": "518518"
  },
  {
    "text": "as one of the Uris and we reference in this certificate resource an issuer that's",
    "start": "518519",
    "end": "524920"
  },
  {
    "text": "part of your uh spiffy pki and when you do this sear manager will make sure that in the secret that",
    "start": "524920",
    "end": "531920"
  },
  {
    "text": "is specified in this certificate resource a sfit x59 is created for you",
    "start": "531920",
    "end": "538640"
  },
  {
    "text": "that's amazing however there there's even an even better way to do this with C manager we",
    "start": "538640",
    "end": "544399"
  },
  {
    "text": "have this thing called s manager CSI driver this is basically a CSI driver that allows you to request certificates",
    "start": "544399",
    "end": "552519"
  },
  {
    "text": "and directly put them in a volume available in your pots or in your deployment",
    "start": "552519",
    "end": "558640"
  },
  {
    "text": "and what this does is the CSI driver actually requests a certificate without",
    "start": "558640",
    "end": "563880"
  },
  {
    "text": "you even needing a secret in your kubernetes state so it directly creates",
    "start": "563880",
    "end": "569120"
  },
  {
    "text": "a the private key and puts it in a folder that's accessible within the",
    "start": "569120",
    "end": "575279"
  },
  {
    "text": "ports additionally it will go through the Assurance process and place the certificate that it got um next to that",
    "start": "575279",
    "end": "582000"
  },
  {
    "text": "private key so that's how to do how to request an X5 on asset using CSI driver",
    "start": "582000",
    "end": "588480"
  },
  {
    "text": "the only thing that I want to mention here is you still have to specify the U um so the spiffy",
    "start": "588480",
    "end": "594720"
  },
  {
    "text": "U this is something that you don't have to do if you're using the CSI driver spy",
    "start": "594720",
    "end": "600079"
  },
  {
    "text": "variant this is actually another CSI driver that we developed and this CSI driver will automatically deduce what",
    "start": "600079",
    "end": "607000"
  },
  {
    "text": "the uh spiffy should look like it will do that based on the uh service account that",
    "start": "607000",
    "end": "613240"
  },
  {
    "text": "you're using in the spot so the config is a bit simpler here um there's also",
    "start": "613240",
    "end": "618480"
  },
  {
    "text": "some more um checks that are done in terms of are you allowed to request this s like this uh spiffy",
    "start": "618480",
    "end": "626399"
  },
  {
    "text": "identifier um but you don't have the all the options that you had with the CSI",
    "start": "626399",
    "end": "633720"
  },
  {
    "text": "driver so you see we can actually match the functionality of spire when it comes",
    "start": "633720",
    "end": "639240"
  },
  {
    "text": "to x59 S fits which is pretty amazing if you ask me however one thing that's missing is",
    "start": "639240",
    "end": "647480"
  },
  {
    "text": "obtaining JDT as fits so as you may know um SE manager",
    "start": "647480",
    "end": "654320"
  },
  {
    "text": "cannot issue JDS so for this demo we actually thought of an alternative solution where",
    "start": "654320",
    "end": "662760"
  },
  {
    "text": "we where we actually try to exchange a x sfit for a JT sfit so we created a token",
    "start": "662760",
    "end": "670519"
  },
  {
    "text": "exchange service which allows us to exchange this sfit so basically you get a X5 x59 s",
    "start": "670519",
    "end": "679639"
  },
  {
    "text": "through S manager you authenticate to the Token exchange using that x59 sfit",
    "start": "679639",
    "end": "685839"
  },
  {
    "text": "you get back a JT and then you can start using that JT the reason that you want a JT is because",
    "start": "685839",
    "end": "692320"
  },
  {
    "text": "lots of applications they don't support x509 authentication instead they only support JT",
    "start": "692320",
    "end": "698680"
  },
  {
    "text": "authentication um they might still support spiffy so just only the JT",
    "start": "698680",
    "end": "704600"
  },
  {
    "text": "variant of spiffy so if we look into bit more",
    "start": "704600",
    "end": "710200"
  },
  {
    "text": "detail at this token exchange what you will see is that we have this token endpoint that we can authenticate to",
    "start": "710200",
    "end": "717040"
  },
  {
    "text": "using mtls we can post post to this token end point and what we will get",
    "start": "717040",
    "end": "722480"
  },
  {
    "text": "back is a g now I'll go over some of the details of this J with you so you fully",
    "start": "722480",
    "end": "728959"
  },
  {
    "text": "understand how this mechanism works so first of all the issue value in the G is actually unique for the um",
    "start": "728959",
    "end": "737880"
  },
  {
    "text": "x59 thrust three that you're in I'll explain that in more detail",
    "start": "737880",
    "end": "743000"
  },
  {
    "text": "soon the subject matches the URI that we specified in the x59 certificate and the",
    "start": "743000",
    "end": "749639"
  },
  {
    "text": "audience matches what we actually requested as part of the post request uh to the Token so the audience can be used",
    "start": "749639",
    "end": "755680"
  },
  {
    "text": "to make the J unique for the um the request that you want to make and of",
    "start": "755680",
    "end": "762279"
  },
  {
    "text": "course there's also an expiration linked to this G such that when it's when you um lose it you don't have",
    "start": "762279",
    "end": "770800"
  },
  {
    "text": "to worry after a while so this is an example of two different um x59",
    "start": "770800",
    "end": "779760"
  },
  {
    "text": "trees pki trees so with spiffy all the the certificates",
    "start": "779760",
    "end": "786880"
  },
  {
    "text": "in your tree they're actually all as fits um and what we see here is that we",
    "start": "786880",
    "end": "791920"
  },
  {
    "text": "mapped these trees to issue URLs in such a way that all the certificates in the",
    "start": "791920",
    "end": "797920"
  },
  {
    "text": "tree when you sent them to the Token exchange they will map to the same um issue value and the way we did that is",
    "start": "797920",
    "end": "805040"
  },
  {
    "text": "we used the hash of the roots CA certificate so so with this um issu value we can",
    "start": "805040",
    "end": "813959"
  },
  {
    "text": "actually start trusting the GTS that were issued by",
    "start": "813959",
    "end": "819360"
  },
  {
    "text": "this uh well by this token exchange so one challenge here is that you actually",
    "start": "819360",
    "end": "824839"
  },
  {
    "text": "have to make sure that this um endpoint is served over publicly",
    "start": "824839",
    "end": "831320"
  },
  {
    "text": "trusted um that with a publicly trusted certificate we actually created like a",
    "start": "831320",
    "end": "837800"
  },
  {
    "text": "publicly available version of this token exchange to to kind of solve this problem um that's kind of still work in",
    "start": "837800",
    "end": "844920"
  },
  {
    "text": "progress um the way this works is in one of the solutions that you want to",
    "start": "844920",
    "end": "850240"
  },
  {
    "text": "authenticate to for example can this can be a public cloud provider you specify",
    "start": "850240",
    "end": "855399"
  },
  {
    "text": "what the issue URL is that you want to trust these token these Crow providers",
    "start": "855399",
    "end": "861560"
  },
  {
    "text": "will then reach out to the wellknown open API configuration endpoints which",
    "start": "861560",
    "end": "866639"
  },
  {
    "text": "points them to the well-known J KS endpoints well that can be a different Endo to but",
    "start": "866639",
    "end": "871800"
  },
  {
    "text": "the endo's hosting the JDs and from there it will actually load",
    "start": "871800",
    "end": "877199"
  },
  {
    "text": "the keys that it will use to verify the jts that you sent to these um Cloud",
    "start": "877199",
    "end": "882680"
  },
  {
    "text": "Platforms in this case so with all that setup you can actually use the token the JT token that",
    "start": "882680",
    "end": "889360"
  },
  {
    "text": "you just got in exchange for your um x59 asfit to attend gate to one of these",
    "start": "889360",
    "end": "895040"
  },
  {
    "text": "Cloud providers and that way we fully support for x59 sfit and JWT s fits uh with a",
    "start": "895040",
    "end": "902560"
  },
  {
    "text": "bit of a hack but Ash will now show you that we aren't done yet with our hacks",
    "start": "902560",
    "end": "907720"
  },
  {
    "text": "we will have another hack that will allow us to use the spiy work with API",
    "start": "907720",
    "end": "913079"
  },
  {
    "text": "too yep um we're not done with our hacks at all um the spiy work API is sort of",
    "start": "913079",
    "end": "919120"
  },
  {
    "text": "the final piece of the puzzle here um if if we can do the SIDS and do the",
    "start": "919120",
    "end": "924240"
  },
  {
    "text": "workload API we can kind of say that we Implement spiffy and we maybe spiffy Cent the workload API specifies some end",
    "start": "924240",
    "end": "931880"
  },
  {
    "text": "points for fetching SIDS um both x509 and JL and for fetching uh trust for",
    "start": "931880",
    "end": "938959"
  },
  {
    "text": "those uh svids so how a server might be able to trust svids from other workloads",
    "start": "938959",
    "end": "944199"
  },
  {
    "text": "within the same sort of trust domain or the same same area of U of operation um so for X5 esfs for the",
    "start": "944199",
    "end": "951920"
  },
  {
    "text": "workload API we can actually do that incredibly simply because we just return the CT that we already have CT manager",
    "start": "951920",
    "end": "957199"
  },
  {
    "text": "issues it we just return that sirt there's nothing difficult about it at all kind of the beauty of this approach",
    "start": "957199",
    "end": "963279"
  },
  {
    "text": "with token exchange is that surt manager doesn't need to learn how to issue juts or do anything like that we just use",
    "start": "963279",
    "end": "969440"
  },
  {
    "text": "that sir to to talk to token exchange to authenticate to that service and it returns back to jut that we can return",
    "start": "969440",
    "end": "975720"
  },
  {
    "text": "in in the spiffy workload API so we actually kind of get this for free like it's really not that difficult to do the",
    "start": "975720",
    "end": "983040"
  },
  {
    "text": "token exchange is the thing that enables this um I mentioned trust we do need to handle trust we can't ignore that in in",
    "start": "983040",
    "end": "989160"
  },
  {
    "text": "practice and in the demo we're going to show in a bit we we are handling trust we're doing that with trust manager",
    "start": "989160",
    "end": "994880"
  },
  {
    "text": "which is a different so manager sub project we don't have time to go really into the detail of that but essentially",
    "start": "994880",
    "end": "1000480"
  },
  {
    "text": "it's just embedding all of the trusted certificates for our trust domain uh into a config map and we're mounting",
    "start": "1000480",
    "end": "1006040"
  },
  {
    "text": "that into our pod so if you're not running trust manager I think you probably should be I think it helps a lot with uh kubernetes even if you're",
    "start": "1006040",
    "end": "1012600"
  },
  {
    "text": "not touching spit Fey at all but we don't have time to go further into that but yeah um the other part is that um",
    "start": "1012600",
    "end": "1019720"
  },
  {
    "text": "token exchange can handle the JWT trust since it knows what the issuers for the jts fds that we're creating it can also",
    "start": "1019720",
    "end": "1027120"
  },
  {
    "text": "return those and we can return those through the spiffy workload API so as you'd probably guessed yes we can do the",
    "start": "1027120",
    "end": "1033600"
  },
  {
    "text": "spiffy workload API as well and that actually means we can do pretty much everything that's in spiffy um in its",
    "start": "1033600",
    "end": "1040240"
  },
  {
    "text": "totality so uh let's take a risk and see if we can show this off in a",
    "start": "1040240",
    "end": "1046000"
  },
  {
    "text": "demo um is this legible for people is it okay probably get a little bit bigger",
    "start": "1046000",
    "end": "1053120"
  },
  {
    "text": "maybe um so first thing that we're going to do is ignore the cluster that I've",
    "start": "1053120",
    "end": "1058520"
  },
  {
    "text": "already set up on the on the uh on my laptop here um I'm not going to show I'm not going to show too much about this",
    "start": "1058520",
    "end": "1064360"
  },
  {
    "text": "cluster um that's just because it's basically what you would do if you copy paste it from the CT manager website and",
    "start": "1064360",
    "end": "1070000"
  },
  {
    "text": "set up an initial cluster it's not that interesting except that it's also running uh token exchange which is more",
    "start": "1070000",
    "end": "1075520"
  },
  {
    "text": "interesting that what I mean by that is that the CA certificate that we're using to sign our identities here is is the",
    "start": "1075520",
    "end": "1082799"
  },
  {
    "text": "same kind of private pki setup that you would use anywhere it's not really special in any way it's just fairly",
    "start": "1082799",
    "end": "1089240"
  },
  {
    "text": "standard stuff and there's not nothing interesting interesting about going into it what is interesting is this demo yaml",
    "start": "1089240",
    "end": "1096440"
  },
  {
    "text": "file that we have which we're going to take a quick look at so uh this is is just a pod like there's",
    "start": "1096440",
    "end": "1104400"
  },
  {
    "text": "uh there's there's not too much magic going on in here um the first thing I would highlight is this init container",
    "start": "1104400",
    "end": "1110600"
  },
  {
    "text": "so this is actually a sidecar container which is a fairly New Concept in kubernetes if you've not encountered",
    "start": "1110600",
    "end": "1116280"
  },
  {
    "text": "them it's just an init container that keeps on running it doesn't stop after it's done um the other key part here is",
    "start": "1116280",
    "end": "1123360"
  },
  {
    "text": "that this this sidecar container that we're creating the spiffy workload container um it mounts the uh",
    "start": "1123360",
    "end": "1130880"
  },
  {
    "text": "certificate that we're generating with C manager it mounts a trust St that we're generating with trust manager and it",
    "start": "1130880",
    "end": "1136640"
  },
  {
    "text": "mounts this spiffy socket um volume that we're using to share between the two containers um it's not particularly",
    "start": "1136640",
    "end": "1144480"
  },
  {
    "text": "complicated it's just sort of mounting that certain and and providing that spfy workload API we also have this container",
    "start": "1144480",
    "end": "1151440"
  },
  {
    "text": "um uh that is that we're call in the client workload we're not very inventive with names all this is doing is pretty",
    "start": "1151440",
    "end": "1157640"
  },
  {
    "text": "much going to sleep and it's got a few tools baked into the image um the key about this one is that it doesn't Mount",
    "start": "1157640",
    "end": "1163480"
  },
  {
    "text": "the CT manager so we have issued aert manager using CSI driver in this case you can see it in the midle middle of",
    "start": "1163480",
    "end": "1168960"
  },
  {
    "text": "the screen there but the actual workload container we're implementing doesn't need to know about it and in fact it",
    "start": "1168960",
    "end": "1174880"
  },
  {
    "text": "doesn't know about it and uh all it knows about is the spiffy workload API which is exposed by this other um this",
    "start": "1174880",
    "end": "1182200"
  },
  {
    "text": "this sidecar container that we're running so um really what that's",
    "start": "1182200",
    "end": "1187360"
  },
  {
    "text": "important because the this demo container just knows about the spiffy workload API so let's take a look inside",
    "start": "1187360",
    "end": "1193960"
  },
  {
    "text": "that pod we uh exec into it and uh I will",
    "start": "1193960",
    "end": "1199679"
  },
  {
    "text": "show you what's going on under the hood",
    "start": "1199679",
    "end": "1205640"
  },
  {
    "text": "okay look away all right so we'll first show you the init script that we have",
    "start": "1206760",
    "end": "1213600"
  },
  {
    "text": "and this init script is basically a script that calls the Spire agent CLI if you remember from previously um the Spy",
    "start": "1213600",
    "end": "1221120"
  },
  {
    "text": "agent CLI is now used in a in a different manner because instead",
    "start": "1221120",
    "end": "1226840"
  },
  {
    "text": "of requesting x59 certificate we requesting JDS so that's on that line yes um what",
    "start": "1226840",
    "end": "1235320"
  },
  {
    "text": "we also provide to this command is the audience which will be unique for each of the cloud profilers that we want to",
    "start": "1235320",
    "end": "1241280"
  },
  {
    "text": "authenticate to um lastly we also provide it with the uh the the socket the socket that is",
    "start": "1241280",
    "end": "1249880"
  },
  {
    "text": "actually a socket that was created by the side card container um so by running this command",
    "start": "1249880",
    "end": "1256240"
  },
  {
    "text": "we can actually obtain JS right so if we run it what will happen is we will send",
    "start": "1256240",
    "end": "1263000"
  },
  {
    "text": "a message over the socket then the side card container will receive the message and what it will do is it will reach out",
    "start": "1263000",
    "end": "1270360"
  },
  {
    "text": "do the token exchange and it will exchange the x59 sfit that it got",
    "start": "1270360",
    "end": "1276080"
  },
  {
    "text": "mounted through its CSI driver it will actually exchange that through the token exchange for X for JDT sfit and that JDT",
    "start": "1276080",
    "end": "1283919"
  },
  {
    "text": "asfi will actually be returned here um also to the Spire agency Alli",
    "start": "1283919",
    "end": "1289559"
  },
  {
    "text": "so we run this three times um once for g-cloud once for Azure and once for",
    "start": "1289559",
    "end": "1296200"
  },
  {
    "text": "AWS each of them have a different audience so the GTS will also be",
    "start": "1296200",
    "end": "1301679"
  },
  {
    "text": "different for each of them and you see here the issuea was",
    "start": "1301679",
    "end": "1307840"
  },
  {
    "text": "talking about so these are actually linked to the um to the ca routs that we",
    "start": "1307840",
    "end": "1314080"
  },
  {
    "text": "are using in our CSI driver um so these are also the URLs that I configured already beforehand in",
    "start": "1314080",
    "end": "1321440"
  },
  {
    "text": "the public Cloud providers so these are trusted now um and we will actually try",
    "start": "1321440",
    "end": "1326799"
  },
  {
    "text": "to run if if everything works hopefully we'll be able to actually run some um",
    "start": "1326799",
    "end": "1333159"
  },
  {
    "text": "commands in this case we'll be running AWS the AWS CLI um we'll be fetching an",
    "start": "1333159",
    "end": "1340120"
  },
  {
    "text": "S3 file and returning the contents so hopefully this works let's see if it",
    "start": "1340120",
    "end": "1345559"
  },
  {
    "text": "does might take some time here on the Wi-Fi um but basically we already obtained the",
    "start": "1345559",
    "end": "1353120"
  },
  {
    "text": "G and we're now using that to authenticate to",
    "start": "1353120",
    "end": "1358200"
  },
  {
    "text": "AWS and as you can see it worked great let's see if the same works for",
    "start": "1358200",
    "end": "1365600"
  },
  {
    "text": "Google this time a bit faster maybe yes and we see indeed we get this hello",
    "start": "1365600",
    "end": "1372240"
  },
  {
    "text": "uh message back from the file that we previously uploaded in Google cloud and lastly let's go for the",
    "start": "1372240",
    "end": "1379960"
  },
  {
    "text": "343 um let's go for Azure see if we can fetch the file and",
    "start": "1379960",
    "end": "1386840"
  },
  {
    "text": "yes we did so that's awesome now we were able to actually show you that through",
    "start": "1386840",
    "end": "1392799"
  },
  {
    "text": "this mechanism we were able to authenticate to the three different Cloud providers using just um SE manager",
    "start": "1392799",
    "end": "1400240"
  },
  {
    "text": "so uh please remember we just had the CSI driver that's like our source uh",
    "start": "1400240",
    "end": "1407159"
  },
  {
    "text": "where we started from from and then we exchanged that for the G we used the G here to authenticate to the cloud",
    "start": "1407159",
    "end": "1413440"
  },
  {
    "text": "providers and we were successful in that um and this Amo awesome very happy it",
    "start": "1413440",
    "end": "1421640"
  },
  {
    "text": "worked thank you so yeah um it's always a risk with",
    "start": "1421640",
    "end": "1429320"
  },
  {
    "text": "uh event Wi-Fi we doing that kind of thing but it worked great so let's recap what happened there as Tim mentioned we",
    "start": "1429320",
    "end": "1435679"
  },
  {
    "text": "just mounted one certificate into that pod from CSI driver that's all we needed",
    "start": "1435679",
    "end": "1440960"
  },
  {
    "text": "um using the sidecar container that was running the spiffy work code API we were able to fetch a JWT via token exchange",
    "start": "1440960",
    "end": "1448520"
  },
  {
    "text": "um for each cloud provider that we could then send off to get back our um login credentials and in turn then use the CLI",
    "start": "1448520",
    "end": "1455640"
  },
  {
    "text": "commands that were available um from the major Cloud providers so our application",
    "start": "1455640",
    "end": "1460760"
  },
  {
    "text": "didn't need to know about the XL ner um it didn't need to know about token exchange at all it's just the same as",
    "start": "1460760",
    "end": "1467399"
  },
  {
    "text": "any application that would run on Spire today that might use the Spire agent to fetch um an a",
    "start": "1467399",
    "end": "1474120"
  },
  {
    "text": "JWT so this approach is actually pretty much pluggable into any cluster that runs Ser manager I already mentioned",
    "start": "1474120",
    "end": "1479919"
  },
  {
    "text": "that 80 to 90% number uh Ser manager is kind of part of the furniture in a lot of clusters so this is actually",
    "start": "1479919",
    "end": "1485320"
  },
  {
    "text": "something you can adopt pretty much any time it just kind of works we think it's a pretty powerful approach um we think",
    "start": "1485320",
    "end": "1491720"
  },
  {
    "text": "it can scale pretty well because the token exchange service is not particularly complicated or hard to run",
    "start": "1491720",
    "end": "1498720"
  },
  {
    "text": "and actually there there's a Simplicity to it where the main thing that matters here is actually the trust of that uh",
    "start": "1498720",
    "end": "1505320"
  },
  {
    "text": "x509 trust chain we're not actually managing a separate trust chain it's all based on what happens in that x509 chain",
    "start": "1505320",
    "end": "1511640"
  },
  {
    "text": "that we're using so it kind of expands out nicely from C manager and goes into",
    "start": "1511640",
    "end": "1516679"
  },
  {
    "text": "jut without really having to do too much else I think it's pretty cool um obviously SE manager is a",
    "start": "1516679",
    "end": "1525000"
  },
  {
    "text": "security focused product and there's plenty of security to talk about about here and it would be uh bullish of me to",
    "start": "1525000",
    "end": "1532080"
  },
  {
    "text": "say all this without going a bit into what's happening in terms of trust so when you're using Spire uh the general",
    "start": "1532080",
    "end": "1538480"
  },
  {
    "text": "workflow is that you're going to register the workload that you want for a given spiffy ID so you'll say hey this",
    "start": "1538480",
    "end": "1543919"
  },
  {
    "text": "this pod running in kubernetes is allowed to get this particular spiffy ID uh we do not have that here um in this",
    "start": "1543919",
    "end": "1550440"
  },
  {
    "text": "demo we don't have anything checking that at all um CSI driver spiffy would have enabled that we use CSI driver for",
    "start": "1550440",
    "end": "1556440"
  },
  {
    "text": "this demo just because it gives us a bit more control to show off what's happening um so you could use CSI driver",
    "start": "1556440",
    "end": "1562640"
  },
  {
    "text": "spiffy and just kind of get that for free the workload uh matching stuff um",
    "start": "1562640",
    "end": "1568720"
  },
  {
    "text": "it's also possible to use a different sub project called approve a policy to restrict CSI driver um again there's not",
    "start": "1568720",
    "end": "1576240"
  },
  {
    "text": "really enough time to go into the details of every CT manager project that we have but it is possible to do the CSI",
    "start": "1576240",
    "end": "1582000"
  },
  {
    "text": "drive a bit securely and have it work um in in a way such that you can trust the",
    "start": "1582000",
    "end": "1587240"
  },
  {
    "text": "identities uh belong to a given pod um in summary of it all we move the trust",
    "start": "1587240",
    "end": "1593480"
  },
  {
    "text": "from the Spire database to kubernetes ARB back so if you're able to issue a certificate using kubernetes arbac you",
    "start": "1593480",
    "end": "1599320"
  },
  {
    "text": "can get the identity that that certificate represents um this is again some like a shortcut that we can take",
    "start": "1599320",
    "end": "1605080"
  },
  {
    "text": "because we only run in kubernetes and uh the way that Spire would solve this is",
    "start": "1605080",
    "end": "1610440"
  },
  {
    "text": "by having that state in its database and wherever your work code is running it needs to talk back to that database and",
    "start": "1610440",
    "end": "1616720"
  },
  {
    "text": "yeah um the it this doesn't remove the need for",
    "start": "1616720",
    "end": "1622399"
  },
  {
    "text": "us to think about trust and how to handle trust but it does simplify the trust model a fair bit because we don't need separate keys for those jwt's we",
    "start": "1622399",
    "end": "1629480"
  },
  {
    "text": "just need the keys for the X over nerts and then actually the secret that we have in token exchange is what enables",
    "start": "1629480",
    "end": "1634679"
  },
  {
    "text": "the rest of this um it's kind of hidden away as an implementation detail but you do need to bear in mind that there's a",
    "start": "1634679",
    "end": "1640399"
  },
  {
    "text": "secret there as well um so we're coming towards the end of of what we have now there's a big old",
    "start": "1640399",
    "end": "1647240"
  },
  {
    "text": "QR code here for feedback if anyone's uh willing to scan that and provide some feedback we're always happy to hear what",
    "start": "1647240",
    "end": "1652679"
  },
  {
    "text": "we can do better if you've enjoyed it uh if you'd like to talk more uh we'd be very happy to do so um you can find us",
    "start": "1652679",
    "end": "1659799"
  },
  {
    "text": "uh in s manager slack or uh come talk to us afterwards and we'll give you contact details there's plenty of ways to get in",
    "start": "1659799",
    "end": "1665679"
  },
  {
    "text": "touch uh we do have uh plenty of time for questions as well there's a microphone set up over here um we got uh",
    "start": "1665679",
    "end": "1674679"
  },
  {
    "text": "uh one guy's already stood up so that's awesome please uh if if you've got any questions please do stand up and we'd",
    "start": "1674679",
    "end": "1680240"
  },
  {
    "text": "just like to say thank you all for listening uh really appreciate you coming here for the last talk we appreciate you choosing C manager for",
    "start": "1680240",
    "end": "1686679"
  },
  {
    "text": "your last talk of skon uh thank you very much",
    "start": "1686679",
    "end": "1691278"
  },
  {
    "text": "everyone please uh thank you for presentation uh do we have any",
    "start": "1695240",
    "end": "1700360"
  },
  {
    "text": "integration with key clog or spice DB for kind of yen to Yen comprehensive uh",
    "start": "1700360",
    "end": "1708120"
  },
  {
    "text": "permission control Orbach aack and uh identity management uh so the question was do we",
    "start": "1708120",
    "end": "1715039"
  },
  {
    "text": "integrate with keycloak or spice DB in terms of like the permission control side of this um",
    "start": "1715039",
    "end": "1721240"
  },
  {
    "text": "so I suppose the answer is probably no we don't directly integrate with those tools but like we're not doing anything",
    "start": "1721240",
    "end": "1726760"
  },
  {
    "text": "in this demo or with token exchange that isn't sort of standard kubernetes stuff",
    "start": "1726760",
    "end": "1731880"
  },
  {
    "text": "so if if if you're using standard kubernetes tools they will integrate just great with whatever you're doing",
    "start": "1731880",
    "end": "1737559"
  },
  {
    "text": "because it's all kubernetes right um we don't have anything explicitly linking to those but certainly it would be",
    "start": "1737559",
    "end": "1744679"
  },
  {
    "text": "possible to link other things in and and you know add some uh more complex logic to this about controlling the identities",
    "start": "1744679",
    "end": "1751279"
  },
  {
    "text": "and that kind of thing we don't have anything for this demo though uh okay so another question is uh this token",
    "start": "1751279",
    "end": "1757600"
  },
  {
    "text": "Exchange Server do I need to have it this is your proprietary or I can use",
    "start": "1757600",
    "end": "1762640"
  },
  {
    "text": "just SE manager and kubernetes token exchanges um uh is open",
    "start": "1762640",
    "end": "1769960"
  },
  {
    "text": "source we've open sourced it under the Veni repo so you can totally check out the code with there's nothing proprietary about it um you do need to",
    "start": "1769960",
    "end": "1776559"
  },
  {
    "text": "run it to be able to get the jts fds it I've actually run a sort of spiffy setup",
    "start": "1776559",
    "end": "1783120"
  },
  {
    "text": "before using only x59 s fids because I'm a certificate nerd um and and that works",
    "start": "1783120",
    "end": "1788159"
  },
  {
    "text": "perfectly well because I didn't need juts but what this enables is for you to expand out and actually support those",
    "start": "1788159",
    "end": "1793799"
  },
  {
    "text": "ums vids as well just want to note Maybe that this token exchange solution that we created",
    "start": "1793799",
    "end": "1800399"
  },
  {
    "text": "is still experimental so we would like much more feedback before we actually make this into a product of any s of any",
    "start": "1800399",
    "end": "1807919"
  },
  {
    "text": "sorts yeah um I thought the demo was really cool you guys elaborate on the container that just the fire uh agen C",
    "start": "1807919",
    "end": "1817159"
  },
  {
    "text": "inside of random container or was there for that side car so the question was",
    "start": "1817159",
    "end": "1822200"
  },
  {
    "text": "about elaborating on what's in the init container so the init container was just exposing a little go program that we",
    "start": "1822200",
    "end": "1829159"
  },
  {
    "text": "wrote that implements the Spy the spiffy workload API so all that was in there was basically that program and it",
    "start": "1829159",
    "end": "1835159"
  },
  {
    "text": "exposes a Unix domain socket that allows the uh the main workload pod to request",
    "start": "1835159",
    "end": "1840320"
  },
  {
    "text": "identities from the spiffy workload API so um there wasn't really anything Spire specific in that it's just just that",
    "start": "1840320",
    "end": "1846600"
  },
  {
    "text": "small go program and as I said before that all that's really doing is returning the XL einer if you request it",
    "start": "1846600",
    "end": "1852760"
  },
  {
    "text": "or returning a JWT if you request that how would we something similar without",
    "start": "1852760",
    "end": "1859120"
  },
  {
    "text": "custom so um to do something",
    "start": "1859120",
    "end": "1865158"
  },
  {
    "text": "similar well first of all let's first repeat the question so your your",
    "start": "1865360",
    "end": "1870480"
  },
  {
    "text": "question was how to do something similar with well you wrote custom goo to to do the critical transaction of exposing the",
    "start": "1870480",
    "end": "1878600"
  },
  {
    "text": "spiffy workload API is there could I just run a Spire container as a side car",
    "start": "1878600",
    "end": "1884080"
  },
  {
    "text": "and have it expose that you did the thing over the socket but do a local",
    "start": "1884080",
    "end": "1889279"
  },
  {
    "text": "host instead of socket some other way I'm just think about how do I do it without rewriting your go code that",
    "start": "1889279",
    "end": "1896760"
  },
  {
    "text": "isn't so um the question is about how to expose this API without the custom code",
    "start": "1896760",
    "end": "1902600"
  },
  {
    "text": "so um if you're already running Spire then you wouldn't need any of that anyway because I'm not running Spire so",
    "start": "1902600",
    "end": "1908880"
  },
  {
    "text": "um if you if you were running Spire uh it exposes a spiffy workload API that's how when you're running in that",
    "start": "1908880",
    "end": "1915080"
  },
  {
    "text": "environment that's how your application gets these s so you need something to expose that API",
    "start": "1915080",
    "end": "1920919"
  },
  {
    "text": "our code is is open source and you can you can just um use it directly all the",
    "start": "1920919",
    "end": "1926159"
  },
  {
    "text": "all the stuff you would need to write your own version of this is also available the key is that that API doesn't need to differ between different",
    "start": "1926159",
    "end": "1932159"
  },
  {
    "text": "workloads or anything like that all that API is is is providing the server portion of the spiffy work with API and",
    "start": "1932159",
    "end": "1939159"
  },
  {
    "text": "your application is the client so what what that bit of code actually really is doing is if you already had an",
    "start": "1939159",
    "end": "1945440"
  },
  {
    "text": "application that was using the spiffy work code API you could drop it into this new ecosystem with just C manager",
    "start": "1945440",
    "end": "1951679"
  },
  {
    "text": "the sort of the easy way and you'd be able to go that um you'd be able to get",
    "start": "1951679",
    "end": "1957440"
  },
  {
    "text": "your identities from the workload API that way it's kind of it's just expanding the workload API so it's available in that environment and it is",
    "start": "1957440",
    "end": "1964600"
  },
  {
    "text": "open source as well awesome thank you thank you also in earlier versions of the the demo that we created we actually",
    "start": "1964600",
    "end": "1971600"
  },
  {
    "text": "didn't have the um spiffy workload API implemented yet so instead what we did is we just before we ran the init script",
    "start": "1971600",
    "end": "1979399"
  },
  {
    "text": "we actually contacted the token exchange directly and manually exchanged the x59 certificate for J which isn't that that",
    "start": "1979399",
    "end": "1987600"
  },
  {
    "text": "much work it's just sending a cur request basically but it's not adhering to the spiffy standards yeah that works",
    "start": "1987600",
    "end": "1994639"
  },
  {
    "text": "if you're willing to write the custom code but um in our case if you were already using the Spy World API you you",
    "start": "1994639",
    "end": "2001159"
  },
  {
    "text": "can sort of lift and shift with no extra effort at all there's no authentication needed for",
    "start": "2001159",
    "end": "2006399"
  },
  {
    "text": "that same goes for like if you're using um x509 s",
    "start": "2006399",
    "end": "2011799"
  },
  {
    "text": "fits it's probably easier to just Mount those in the the file system that you're",
    "start": "2011799",
    "end": "2017519"
  },
  {
    "text": "you have and just use them directly you don't need the token exchange you don't need the um spiffy work with API but we",
    "start": "2017519",
    "end": "2024159"
  },
  {
    "text": "kind of we want to show what is possible using these kind of additional",
    "start": "2024159",
    "end": "2030519"
  },
  {
    "text": "tools um any other questions at all go one",
    "start": "2031559",
    "end": "2039720"
  },
  {
    "text": "um would there be any interest in a SE manager learning how to issue jwt's um",
    "start": "2039880",
    "end": "2046200"
  },
  {
    "text": "the reason that I ask is that we've had more experience in the past with uh sidecars that are on the critical path",
    "start": "2046200",
    "end": "2051560"
  },
  {
    "text": "of authentication or or asserts um and adding in an additional token exchange adding in a sidecar having to have that",
    "start": "2051560",
    "end": "2058878"
  },
  {
    "text": "potentially fail have you know uptime concerns um all seem not",
    "start": "2058879",
    "end": "2065960"
  },
  {
    "text": "preferable so sorry could you repeat the first bit of that again uh would it like would it be a big lift to uh add jbt",
    "start": "2065960",
    "end": "2073118"
  },
  {
    "text": "support to cir manager is is that something that that you could see on the road map at some point the question was",
    "start": "2073119",
    "end": "2078720"
  },
  {
    "text": "around adding jbt support directly into C manager um jts aren't that complicated to create",
    "start": "2078720",
    "end": "2085839"
  },
  {
    "text": "so like from a theoretical standpoint it's not that difficult to do",
    "start": "2085839",
    "end": "2091320"
  },
  {
    "text": "um I like as a c manager maintainer I'm not sure that we would want to expand the scope of the project to to do that",
    "start": "2091320",
    "end": "2098400"
  },
  {
    "text": "because we're kind of laser focused on solving what we solve and we don't want to like bundle everything in there",
    "start": "2098400",
    "end": "2103880"
  },
  {
    "text": "that's kind of why we went with the approach of the token exchange here because it enables us to create a",
    "start": "2103880",
    "end": "2109280"
  },
  {
    "text": "separate thing that doesn't sort of impact the rest of SE manager um so there",
    "start": "2109280",
    "end": "2115960"
  },
  {
    "text": "is you make a good point that actually this does add an extra Network call on on Startup right for fetching that um",
    "start": "2115960",
    "end": "2122400"
  },
  {
    "text": "JWT kind of the a nice thing about this approach though is that that Network call can be entirely in kubernetes like",
    "start": "2122400",
    "end": "2128560"
  },
  {
    "text": "the the only thing that needs to be public is the Discovery end points which the cloud providers need to be able to",
    "start": "2128560",
    "end": "2133800"
  },
  {
    "text": "fetch regularly or or whatever you're working with but that Network call is actually inside kubernetes just like if",
    "start": "2133800",
    "end": "2139599"
  },
  {
    "text": "you're issuing an x509 insert that stays entirely within kubernetes as well so the this does work pretty well for that",
    "start": "2139599",
    "end": "2146359"
  },
  {
    "text": "and it is theoretically possible at least to add jlt support for certain manager but that probably ends up being like a g te manager or something else",
    "start": "2146359",
    "end": "2153119"
  },
  {
    "text": "like different project maybe one more thing I would like to add there is if you you don't really care about um as",
    "start": "2153119",
    "end": "2159480"
  },
  {
    "text": "fits um just you just want jts you can just use service count tokens so that's",
    "start": "2159480",
    "end": "2165119"
  },
  {
    "text": "a great way to use or to obtain uh jts in your kubernetes cluster the thing is with this solution um you're actually",
    "start": "2165119",
    "end": "2172319"
  },
  {
    "text": "linking the JDS to your your pki setup so it's not limited to just one cluster",
    "start": "2172319",
    "end": "2178440"
  },
  {
    "text": "you can have a pki setup that that um that contains multiple clusters and that",
    "start": "2178440",
    "end": "2183960"
  },
  {
    "text": "multiple clusters Connect into and then the JT solution will also work for those multiple clusters so it's kind of the",
    "start": "2183960",
    "end": "2192200"
  },
  {
    "text": "the universal identity concept kind of applies here to with the",
    "start": "2192200",
    "end": "2197400"
  },
  {
    "text": "GS yeah we're we're using service counts today um and basically doing all the piping directly to the cloud backends um",
    "start": "2197400",
    "end": "2204599"
  },
  {
    "text": "the but I'm I'm looking for a way to get to a global issuer effectively right so but without adding in extra moving Parts",
    "start": "2204599",
    "end": "2212640"
  },
  {
    "text": "but something that we haven't said yet which is probably worthwhile to say is that if you go on S manager. in search",
    "start": "2212640",
    "end": "2218119"
  },
  {
    "text": "for contributing we've got uh slat channels and regular meetings that uh are open to join and and we're always",
    "start": "2218119",
    "end": "2224640"
  },
  {
    "text": "happy to chat about things like um I can't I honestly can't see us doing jwt's insert manager directly but I",
    "start": "2224640",
    "end": "2231200"
  },
  {
    "text": "don't see why there couldn't be JWT manager or something else like that who knows maybe maybe that's the next big",
    "start": "2231200",
    "end": "2238280"
  },
  {
    "text": "thing thank you thank you any more questions they did give us",
    "start": "2238280",
    "end": "2243839"
  },
  {
    "text": "permission to overrun slightly uh because it's the last Talk of the day so you got any burning questions now's",
    "start": "2243839",
    "end": "2249680"
  },
  {
    "text": "now's a good time is it oh well never mind",
    "start": "2249680",
    "end": "2258119"
  },
  {
    "text": "then well uh that's cool then in that case I'm not seeing any questions uh",
    "start": "2258800",
    "end": "2264480"
  },
  {
    "text": "coming out so I'll just say again thank you all so much and if you have any feedback we'd love to hear it thank you",
    "start": "2264480",
    "end": "2270079"
  },
  {
    "text": "thank you everyone",
    "start": "2270079",
    "end": "2273319"
  }
]