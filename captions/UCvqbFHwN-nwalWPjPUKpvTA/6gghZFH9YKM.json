[
  {
    "text": "hi everyone welcome to St virtual I'm",
    "start": "40",
    "end": "3240"
  },
  {
    "text": "shivanu and I'm accompanied with Jimmy",
    "start": "3240",
    "end": "6120"
  },
  {
    "text": "to talk about demystifying load",
    "start": "6120",
    "end": "8400"
  },
  {
    "text": "balancing in steo and the agenda",
    "start": "8400",
    "end": "11840"
  },
  {
    "text": "includes understanding what load",
    "start": "11840",
    "end": "13519"
  },
  {
    "text": "balancing is how out of the box load",
    "start": "13519",
    "end": "16960"
  },
  {
    "text": "Bing configurations office Ste can be",
    "start": "16960",
    "end": "19400"
  },
  {
    "text": "used what are the different",
    "start": "19400",
    "end": "20960"
  },
  {
    "text": "configurations so for",
    "start": "20960",
    "end": "22680"
  },
  {
    "text": "example when we configure simple lb what",
    "start": "22680",
    "end": "25920"
  },
  {
    "text": "does random round robin lease request",
    "start": "25920",
    "end": "28400"
  },
  {
    "text": "mean and how to configure them",
    "start": "28400",
    "end": "30640"
  },
  {
    "text": "what is consistent hashing and how to",
    "start": "30640",
    "end": "33239"
  },
  {
    "text": "configure that uh Ino and locality Road",
    "start": "33239",
    "end": "37399"
  },
  {
    "text": "B settings like what are the fail",
    "start": "37399",
    "end": "39600"
  },
  {
    "text": "settings what are the how to actually",
    "start": "39600",
    "end": "42520"
  },
  {
    "text": "achieve locality load B setting in AO",
    "start": "42520",
    "end": "45879"
  },
  {
    "text": "and we'll also try to dive bit deep into",
    "start": "45879",
    "end": "49239"
  },
  {
    "text": "how to use this knowledge for uh",
    "start": "49239",
    "end": "52359"
  },
  {
    "text": "configuring load balance settings in a",
    "start": "52359",
    "end": "53960"
  },
  {
    "text": "multi setup and then we we have a demo",
    "start": "53960",
    "end": "57719"
  },
  {
    "text": "to demonstrate some of the common use",
    "start": "57719",
    "end": "59480"
  },
  {
    "text": "cases",
    "start": "59480",
    "end": "61519"
  },
  {
    "text": "so for example in my left I have a",
    "start": "61519",
    "end": "64518"
  },
  {
    "text": "single C setup and all the traffic that",
    "start": "64519",
    "end": "67200"
  },
  {
    "text": "is coming from the Ingress Gateway is",
    "start": "67200",
    "end": "70040"
  },
  {
    "text": "distributed between different instances",
    "start": "70040",
    "end": "72240"
  },
  {
    "text": "of app one I may want to distribute this",
    "start": "72240",
    "end": "75680"
  },
  {
    "text": "traffic uh on on the basis of some set",
    "start": "75680",
    "end": "80000"
  },
  {
    "text": "of rules and that's where the load",
    "start": "80000",
    "end": "81520"
  },
  {
    "text": "balancing intive comes to the picture um",
    "start": "81520",
    "end": "84520"
  },
  {
    "text": "and on my right I have a multier setup",
    "start": "84520",
    "end": "86960"
  },
  {
    "text": "uh with cluster one and cluster two and",
    "start": "86960",
    "end": "89640"
  },
  {
    "text": "I I have a Gateway a multi cluster",
    "start": "89640",
    "end": "91960"
  },
  {
    "text": "Gateway which is Distributing the",
    "start": "91960",
    "end": "93200"
  },
  {
    "text": "traffic in cluster one and cluster two",
    "start": "93200",
    "end": "95720"
  },
  {
    "text": "so how would I configure Road balancing",
    "start": "95720",
    "end": "98040"
  },
  {
    "text": "in this scenario how would I configure",
    "start": "98040",
    "end": "100240"
  },
  {
    "text": "load balancing for the traffic",
    "start": "100240",
    "end": "102159"
  },
  {
    "text": "Distributing getting distributed to",
    "start": "102159",
    "end": "103920"
  },
  {
    "text": "Cluster one and cluster two and then",
    "start": "103920",
    "end": "106040"
  },
  {
    "text": "traffic getting distributed between",
    "start": "106040",
    "end": "107640"
  },
  {
    "text": "different instances in a in a given",
    "start": "107640",
    "end": "110399"
  },
  {
    "text": "cluster so the idea is to and first",
    "start": "110399",
    "end": "113280"
  },
  {
    "text": "understand single class setup and then",
    "start": "113280",
    "end": "115159"
  },
  {
    "text": "try to extend that knowledge to a multi",
    "start": "115159",
    "end": "117320"
  },
  {
    "text": "class",
    "start": "117320",
    "end": "118280"
  },
  {
    "text": "setup so what EXA ly load balancing is U",
    "start": "118280",
    "end": "121920"
  },
  {
    "text": "so in a simpler terms if I have a",
    "start": "121920",
    "end": "123640"
  },
  {
    "text": "service a which contains this du proxy",
    "start": "123640",
    "end": "126640"
  },
  {
    "text": "and service B again it contains this to",
    "start": "126640",
    "end": "129080"
  },
  {
    "text": "proxy and it and there are multiple",
    "start": "129080",
    "end": "131360"
  },
  {
    "text": "instances of service B so whatever",
    "start": "131360",
    "end": "133599"
  },
  {
    "text": "traffic that is coming from instance a",
    "start": "133599",
    "end": "136959"
  },
  {
    "text": "is somewhere or another need to be load",
    "start": "136959",
    "end": "138760"
  },
  {
    "text": "balanced between different uh instances",
    "start": "138760",
    "end": "141360"
  },
  {
    "text": "of service B and the power uh the",
    "start": "141360",
    "end": "145360"
  },
  {
    "text": "flexibility to Define some set of rules",
    "start": "145360",
    "end": "147680"
  },
  {
    "text": "is what we call as load balancing",
    "start": "147680",
    "end": "149280"
  },
  {
    "text": "algorithm and we'll discuss what are the",
    "start": "149280",
    "end": "152599"
  },
  {
    "text": "out of the box load balancing settings",
    "start": "152599",
    "end": "155200"
  },
  {
    "text": "configured which can be configured in",
    "start": "155200",
    "end": "158360"
  },
  {
    "text": "new I can I mean there's there could be",
    "start": "158360",
    "end": "161319"
  },
  {
    "text": "a requirement of splitting the traffic",
    "start": "161319",
    "end": "163239"
  },
  {
    "text": "between let's say a staging environment",
    "start": "163239",
    "end": "165599"
  },
  {
    "text": "or a production environment I can also",
    "start": "165599",
    "end": "168239"
  },
  {
    "text": "configure that and then distribute the",
    "start": "168239",
    "end": "169920"
  },
  {
    "text": "traffic between the production",
    "start": "169920",
    "end": "171319"
  },
  {
    "text": "environment using some load baling",
    "start": "171319",
    "end": "174800"
  },
  {
    "text": "settings there could be a use case of",
    "start": "174800",
    "end": "177360"
  },
  {
    "text": "Distributing traffic differently good",
    "start": "177360",
    "end": "180040"
  },
  {
    "text": "Bing traffic differently for different",
    "start": "180040",
    "end": "181800"
  },
  {
    "text": "port so for example for Port 80 I may",
    "start": "181800",
    "end": "185560"
  },
  {
    "text": "want traffic to be distributed in round",
    "start": "185560",
    "end": "188200"
  },
  {
    "text": "robin fashion among different instances",
    "start": "188200",
    "end": "190840"
  },
  {
    "text": "of service and for Port 443 I may want",
    "start": "190840",
    "end": "195040"
  },
  {
    "text": "maybe consistent hashing uh for my",
    "start": "195040",
    "end": "197360"
  },
  {
    "text": "traffic to be getting distributed at",
    "start": "197360",
    "end": "199239"
  },
  {
    "text": "different SES of service of service",
    "start": "199239",
    "end": "202599"
  },
  {
    "text": "a and I may want to distribute uh or",
    "start": "202599",
    "end": "208280"
  },
  {
    "text": "load balance my traffic based on the",
    "start": "208280",
    "end": "210239"
  },
  {
    "text": "locality of the service itself so if",
    "start": "210239",
    "end": "211920"
  },
  {
    "text": "it's in the same region same Zone I may",
    "start": "211920",
    "end": "214879"
  },
  {
    "text": "want to prioritize that as compared to a",
    "start": "214879",
    "end": "217400"
  },
  {
    "text": "service running in a different Zone Zone",
    "start": "217400",
    "end": "219239"
  },
  {
    "text": "and different",
    "start": "219239",
    "end": "221080"
  },
  {
    "text": "region maybe I can uh configure some",
    "start": "221080",
    "end": "225720"
  },
  {
    "text": "weight based uh distribution for multi",
    "start": "225720",
    "end": "229120"
  },
  {
    "text": "region multizonal environment so for",
    "start": "229120",
    "end": "231360"
  },
  {
    "text": "example if a traffic is originating from",
    "start": "231360",
    "end": "233239"
  },
  {
    "text": "region one zone one I want 70% uh",
    "start": "233239",
    "end": "237319"
  },
  {
    "text": "traffic to remain in the same Zone but",
    "start": "237319",
    "end": "240159"
  },
  {
    "text": "20% to another Zone and 10% to another",
    "start": "240159",
    "end": "244280"
  },
  {
    "text": "region and another",
    "start": "244280",
    "end": "246840"
  },
  {
    "text": "Zone there could be a requirement of",
    "start": "246840",
    "end": "249720"
  },
  {
    "text": "setting up a failover settings so for",
    "start": "249720",
    "end": "252239"
  },
  {
    "text": "example if particular service in a given",
    "start": "252239",
    "end": "255079"
  },
  {
    "text": "Zone goes down what should be the next",
    "start": "255079",
    "end": "258239"
  },
  {
    "text": "service which my where my traffic should",
    "start": "258239",
    "end": "260959"
  },
  {
    "text": "flow U so we take a look into how all",
    "start": "260959",
    "end": "264360"
  },
  {
    "text": "this what is the meaning of all these",
    "start": "264360",
    "end": "266360"
  },
  {
    "text": "configurations and how to actually see",
    "start": "266360",
    "end": "268520"
  },
  {
    "text": "within this St",
    "start": "268520",
    "end": "270759"
  },
  {
    "text": "so first of all uh let's discuss about",
    "start": "270759",
    "end": "273240"
  },
  {
    "text": "uh random which can be configured using",
    "start": "273240",
    "end": "275800"
  },
  {
    "text": "simple lbo so the idea is so for let's",
    "start": "275800",
    "end": "279759"
  },
  {
    "text": "say for a given service a if I have",
    "start": "279759",
    "end": "282240"
  },
  {
    "text": "multiple instances and at the moment",
    "start": "282240",
    "end": "284919"
  },
  {
    "text": "let's say only one three and four are",
    "start": "284919",
    "end": "286520"
  },
  {
    "text": "healthy so the configuring random would",
    "start": "286520",
    "end": "289880"
  },
  {
    "text": "only pick a healthy Endo at random and",
    "start": "289880",
    "end": "293680"
  },
  {
    "text": "then send the traffic to it if I",
    "start": "293680",
    "end": "296440"
  },
  {
    "text": "configure round robin then the traffic",
    "start": "296440",
    "end": "299840"
  },
  {
    "text": "would again go to healthy end points but",
    "start": "299840",
    "end": "301800"
  },
  {
    "text": "in a round robin fashion meaning the",
    "start": "301800",
    "end": "303880"
  },
  {
    "text": "request one may go to service instance",
    "start": "303880",
    "end": "306199"
  },
  {
    "text": "one and then uh the request would go to",
    "start": "306199",
    "end": "308840"
  },
  {
    "text": "another healthy end point which is",
    "start": "308840",
    "end": "310080"
  },
  {
    "text": "service a instance three and then the",
    "start": "310080",
    "end": "312479"
  },
  {
    "text": "request may go to service a instance 4",
    "start": "312479",
    "end": "315360"
  },
  {
    "text": "and then the Round Rob infection the",
    "start": "315360",
    "end": "317400"
  },
  {
    "text": "request would come again to service a in",
    "start": "317400",
    "end": "320560"
  },
  {
    "text": "one I can also configure least request",
    "start": "320560",
    "end": "324240"
  },
  {
    "text": "uh so for",
    "start": "324240",
    "end": "326080"
  },
  {
    "text": "example this is the at a given time this",
    "start": "326080",
    "end": "328680"
  },
  {
    "text": "is the current scenario that so far",
    "start": "328680",
    "end": "330319"
  },
  {
    "text": "service a has uh served 801 request",
    "start": "330319",
    "end": "335120"
  },
  {
    "text": "service a instance 2 has served 1012",
    "start": "335120",
    "end": "338680"
  },
  {
    "text": "request and then it went unhealthy and",
    "start": "338680",
    "end": "341840"
  },
  {
    "text": "service a inance 3 has served 900",
    "start": "341840",
    "end": "343919"
  },
  {
    "text": "request and so on um so I want my",
    "start": "343919",
    "end": "347160"
  },
  {
    "text": "traffic to go to the service which has",
    "start": "347160",
    "end": "349120"
  },
  {
    "text": "served uh least request so far so I can",
    "start": "349120",
    "end": "352759"
  },
  {
    "text": "do that by configuring least request in",
    "start": "352759",
    "end": "355800"
  },
  {
    "text": "simple lb",
    "start": "355800",
    "end": "357319"
  },
  {
    "text": "Ino so what are the like best practices",
    "start": "357319",
    "end": "362080"
  },
  {
    "text": "while choosing among these uh load",
    "start": "362080",
    "end": "365080"
  },
  {
    "text": "balancing settings so for lease requests",
    "start": "365080",
    "end": "368759"
  },
  {
    "text": "um I mean it's preferred to use lease",
    "start": "368759",
    "end": "370639"
  },
  {
    "text": "request over round robin because as we",
    "start": "370639",
    "end": "373360"
  },
  {
    "text": "can see that um lease request ensures",
    "start": "373360",
    "end": "376319"
  },
  {
    "text": "that all the traffic is evenly",
    "start": "376319",
    "end": "380479"
  },
  {
    "text": "distributed based on the lease request",
    "start": "380479",
    "end": "382599"
  },
  {
    "text": "so it ensures more uh so it's it's",
    "start": "382599",
    "end": "386400"
  },
  {
    "text": "basically as serves as a better",
    "start": "386400",
    "end": "388360"
  },
  {
    "text": "replacement of round r",
    "start": "388360",
    "end": "390599"
  },
  {
    "text": "and experimentally like it's found that",
    "start": "390599",
    "end": "393680"
  },
  {
    "text": "random performs better than round robin",
    "start": "393680",
    "end": "396520"
  },
  {
    "text": "and it's mantion in the same s dog so uh",
    "start": "396520",
    "end": "400160"
  },
  {
    "text": "if we are using random instead of round",
    "start": "400160",
    "end": "404080"
  },
  {
    "text": "robin so um generally it is found",
    "start": "404080",
    "end": "407440"
  },
  {
    "text": "experimentally that uh random",
    "start": "407440",
    "end": "409639"
  },
  {
    "text": "works better and it's more performant",
    "start": "409639",
    "end": "412400"
  },
  {
    "text": "than round",
    "start": "412400",
    "end": "414199"
  },
  {
    "text": "robin now let's talk about consistent",
    "start": "414199",
    "end": "416759"
  },
  {
    "text": "hashing and how it works in steo so the",
    "start": "416759",
    "end": "419520"
  },
  {
    "text": "idea of consistent hashing is you have a",
    "start": "419520",
    "end": "421360"
  },
  {
    "text": "hash function which hashes uh incoming",
    "start": "421360",
    "end": "424039"
  },
  {
    "text": "traffic based on some hash key and then",
    "start": "424039",
    "end": "426879"
  },
  {
    "text": "servers are also hashes and hashed and",
    "start": "426879",
    "end": "430000"
  },
  {
    "text": "all the traffic uh goes to the nearest",
    "start": "430000",
    "end": "433039"
  },
  {
    "text": "server so for example if I'm heading",
    "start": "433039",
    "end": "436000"
  },
  {
    "text": "based on header name and uh the hash",
    "start": "436000",
    "end": "439160"
  },
  {
    "text": "value turns out to be one then it would",
    "start": "439160",
    "end": "441240"
  },
  {
    "text": "go to service instance one if the hash",
    "start": "441240",
    "end": "443520"
  },
  {
    "text": "value turnouts to be two it would go to",
    "start": "443520",
    "end": "445680"
  },
  {
    "text": "service a instance two and so on and so",
    "start": "445680",
    "end": "448199"
  },
  {
    "text": "forth so so Ino I can achieve conent",
    "start": "448199",
    "end": "452039"
  },
  {
    "text": "hashing using STP header name itself I",
    "start": "452039",
    "end": "454919"
  },
  {
    "text": "can also use STP cookie to route my",
    "start": "454919",
    "end": "458960"
  },
  {
    "text": "traffic uh to different instances of the",
    "start": "458960",
    "end": "461479"
  },
  {
    "text": "service I can also use Source IP so for",
    "start": "461479",
    "end": "465000"
  },
  {
    "text": "example consider a case where I want to",
    "start": "465000",
    "end": "468159"
  },
  {
    "text": "um send my traffic to some specific",
    "start": "468159",
    "end": "470879"
  },
  {
    "text": "instances rning in some specific Zone",
    "start": "470879",
    "end": "474360"
  },
  {
    "text": "and I want consistent hashing based on",
    "start": "474360",
    "end": "477120"
  },
  {
    "text": "the source IP so if the source IPS is is",
    "start": "477120",
    "end": "482000"
  },
  {
    "text": "some is coming from some specific region",
    "start": "482000",
    "end": "484560"
  },
  {
    "text": "or for some specific set of users I want",
    "start": "484560",
    "end": "487840"
  },
  {
    "text": "some a specific service I can do that by",
    "start": "487840",
    "end": "491120"
  },
  {
    "text": "using consistent hashing with uh Source",
    "start": "491120",
    "end": "494960"
  },
  {
    "text": "IP I can also use SCP query parameter uh",
    "start": "494960",
    "end": "499199"
  },
  {
    "text": "to route my traffic to different",
    "start": "499199",
    "end": "500680"
  },
  {
    "text": "instances uh using conent hash and then",
    "start": "500680",
    "end": "504039"
  },
  {
    "text": "I can also use the famous uh ring hash",
    "start": "504039",
    "end": "506199"
  },
  {
    "text": "and magli uh Ino out of the box to",
    "start": "506199",
    "end": "510960"
  },
  {
    "text": "achieve conscent",
    "start": "510960",
    "end": "512518"
  },
  {
    "text": "hashing so let's also talk about uh how",
    "start": "512519",
    "end": "516200"
  },
  {
    "text": "locality Lo B settings can be configured",
    "start": "516200",
    "end": "518839"
  },
  {
    "text": "so one way is to use uh weighted",
    "start": "518839",
    "end": "520760"
  },
  {
    "text": "distribution meaning um so if I have a",
    "start": "520760",
    "end": "523919"
  },
  {
    "text": "particular reason Us West and particular",
    "start": "523919",
    "end": "526880"
  },
  {
    "text": "Zone Zone one then I can route my",
    "start": "526880",
    "end": "530760"
  },
  {
    "text": "traffic in a way that 80% of traffic",
    "start": "530760",
    "end": "534000"
  },
  {
    "text": "would go to the same Zone and 20% would",
    "start": "534000",
    "end": "537160"
  },
  {
    "text": "go to different zone so this is like a",
    "start": "537160",
    "end": "539440"
  },
  {
    "text": "weighted distribution of traffic based",
    "start": "539440",
    "end": "542120"
  },
  {
    "text": "on the locality I can like you know",
    "start": "542120",
    "end": "545480"
  },
  {
    "text": "similarly I can uh send all the traffic",
    "start": "545480",
    "end": "548519"
  },
  {
    "text": "from zone two uh to remain in the same",
    "start": "548519",
    "end": "551720"
  },
  {
    "text": "Zone and 80% of it would remain in the",
    "start": "551720",
    "end": "554720"
  },
  {
    "text": "same Zone and 30% would go to another",
    "start": "554720",
    "end": "557000"
  },
  {
    "text": "Zone in this case Zone",
    "start": "557000",
    "end": "560160"
  },
  {
    "text": "one we can also configure locality",
    "start": "560160",
    "end": "563200"
  },
  {
    "text": "failover",
    "start": "563200",
    "end": "564519"
  },
  {
    "text": "meaning what happens if a particular",
    "start": "564519",
    "end": "567200"
  },
  {
    "text": "service in a particular Zone in a reason",
    "start": "567200",
    "end": "569480"
  },
  {
    "text": "goes down so I can configure different",
    "start": "569480",
    "end": "572839"
  },
  {
    "text": "priorities for different zones different",
    "start": "572839",
    "end": "574920"
  },
  {
    "text": "reason to take care of failover",
    "start": "574920",
    "end": "578040"
  },
  {
    "text": "scenarios so in a simple case I can just",
    "start": "578040",
    "end": "581240"
  },
  {
    "text": "configure um failover from us east",
    "start": "581240",
    "end": "584480"
  },
  {
    "text": "region to us West meaning if Us East",
    "start": "584480",
    "end": "588120"
  },
  {
    "text": "services in US east region for some",
    "start": "588120",
    "end": "590959"
  },
  {
    "text": "reason goes down then I can still serve",
    "start": "590959",
    "end": "593320"
  },
  {
    "text": "my traffic by sending the traffic to",
    "start": "593320",
    "end": "596200"
  },
  {
    "text": "services in west region um so for",
    "start": "596200",
    "end": "600160"
  },
  {
    "text": "example if we take a closer look at this",
    "start": "600160",
    "end": "602399"
  },
  {
    "text": "particular diagram so if I have region",
    "start": "602399",
    "end": "605240"
  },
  {
    "text": "one zone one and hello world is running",
    "start": "605240",
    "end": "607480"
  },
  {
    "text": "inside and region one zone two with the",
    "start": "607480",
    "end": "610839"
  },
  {
    "text": "same application distributed among",
    "start": "610839",
    "end": "613880"
  },
  {
    "text": "multiple other region and zones so if I",
    "start": "613880",
    "end": "618680"
  },
  {
    "text": "configure uh fa over settings from",
    "start": "618680",
    "end": "621040"
  },
  {
    "text": "region one to region two and region one",
    "start": "621040",
    "end": "622920"
  },
  {
    "text": "to Region Three so this is how the how",
    "start": "622920",
    "end": "625320"
  },
  {
    "text": "sto would decide the priority for fover",
    "start": "625320",
    "end": "629120"
  },
  {
    "text": "so so the highest priority is the same",
    "start": "629120",
    "end": "631839"
  },
  {
    "text": "region and same Zone and then if there",
    "start": "631839",
    "end": "634600"
  },
  {
    "text": "is no locality configured that is given",
    "start": "634600",
    "end": "637279"
  },
  {
    "text": "to the second priority and services",
    "start": "637279",
    "end": "642040"
  },
  {
    "text": "running in different Zone but in the",
    "start": "642040",
    "end": "644040"
  },
  {
    "text": "same region are given the next higher",
    "start": "644040",
    "end": "646360"
  },
  {
    "text": "priority and then based on the fover",
    "start": "646360",
    "end": "649160"
  },
  {
    "text": "settings um next like the next priority",
    "start": "649160",
    "end": "653160"
  },
  {
    "text": "is given to Zone 3 in the region two as",
    "start": "653160",
    "end": "657800"
  },
  {
    "text": "I have configured fover settings from",
    "start": "657800",
    "end": "660279"
  },
  {
    "text": "region one to region two similarly for",
    "start": "660279",
    "end": "663000"
  },
  {
    "text": "region one to Region 3 I can have",
    "start": "663000",
    "end": "665240"
  },
  {
    "text": "traffic flowing from uh my region one",
    "start": "665240",
    "end": "670639"
  },
  {
    "text": "zone one to Region Three Zone 4 because",
    "start": "670639",
    "end": "675040"
  },
  {
    "text": "I have configured the fover setting so",
    "start": "675040",
    "end": "677600"
  },
  {
    "text": "this is like a very high level overview",
    "start": "677600",
    "end": "679519"
  },
  {
    "text": "of how we can configure it and let's try",
    "start": "679519",
    "end": "681720"
  },
  {
    "text": "to understand how to achieve that in",
    "start": "681720",
    "end": "684959"
  },
  {
    "text": "multicluster so I would hand over to",
    "start": "684959",
    "end": "687480"
  },
  {
    "text": "Jimmy to take it from",
    "start": "687480",
    "end": "690440"
  },
  {
    "text": "hi everyone I'm J the developer advocate",
    "start": "690440",
    "end": "693680"
  },
  {
    "text": "of T trade let me show you how to deal",
    "start": "693680",
    "end": "696480"
  },
  {
    "text": "with the multiple cluster load balancing",
    "start": "696480",
    "end": "698600"
  },
  {
    "text": "with each",
    "start": "698600",
    "end": "700240"
  },
  {
    "text": "smash so far everything is good in a",
    "start": "700240",
    "end": "703720"
  },
  {
    "text": "single cluster you can choose whatever",
    "start": "703720",
    "end": "706000"
  },
  {
    "text": "load balancer type you like but for",
    "start": "706000",
    "end": "708360"
  },
  {
    "text": "multiple cluster scenario is another",
    "start": "708360",
    "end": "712560"
  },
  {
    "text": "story consider the following multiple",
    "start": "713200",
    "end": "715600"
  },
  {
    "text": "cluster setup we have two clusters from",
    "start": "715600",
    "end": "718600"
  },
  {
    "text": "different",
    "start": "718600",
    "end": "720440"
  },
  {
    "text": "Wenders your first thought should be",
    "start": "720440",
    "end": "722800"
  },
  {
    "text": "creating a Gateway for each Custer and",
    "start": "722800",
    "end": "725639"
  },
  {
    "text": "then creating another one elsewhere to",
    "start": "725639",
    "end": "727880"
  },
  {
    "text": "connect them",
    "start": "727880",
    "end": "730560"
  },
  {
    "text": "right here it comes to the two Tire",
    "start": "732000",
    "end": "734680"
  },
  {
    "text": "engress",
    "start": "734680",
    "end": "736480"
  },
  {
    "text": "gateways for two meses to communicate",
    "start": "736480",
    "end": "739720"
  },
  {
    "text": "each must have an engress",
    "start": "739720",
    "end": "742079"
  },
  {
    "text": "Gateway in addition there need to be a",
    "start": "742079",
    "end": "744720"
  },
  {
    "text": "unique entry point for user access so",
    "start": "744720",
    "end": "748720"
  },
  {
    "text": "when we create a new Gateway typically",
    "start": "748720",
    "end": "750959"
  },
  {
    "text": "deployed on a separate",
    "start": "750959",
    "end": "752680"
  },
  {
    "text": "Custer it can be in the same Custer but",
    "start": "752680",
    "end": "755279"
  },
  {
    "text": "we don't recommend it to Lear each other",
    "start": "755279",
    "end": "758320"
  },
  {
    "text": "to find others endpoints we need to",
    "start": "758320",
    "end": "760839"
  },
  {
    "text": "create a service entry for",
    "start": "760839",
    "end": "762839"
  },
  {
    "text": "them for each Custer to discover and",
    "start": "762839",
    "end": "766399"
  },
  {
    "text": "root Services we must create R services",
    "start": "766399",
    "end": "770160"
  },
  {
    "text": "and destination rules for each",
    "start": "770160",
    "end": "773920"
  },
  {
    "text": "to Meanwhile CER Zer has also deploy is",
    "start": "774079",
    "end": "779880"
  },
  {
    "text": "and we need to create this e resource",
    "start": "779880",
    "end": "782199"
  },
  {
    "text": "objects in each",
    "start": "782199",
    "end": "785240"
  },
  {
    "text": "cluster now let's take a look at this",
    "start": "788279",
    "end": "793040"
  },
  {
    "text": "demo this is deployment architecture of",
    "start": "795279",
    "end": "798839"
  },
  {
    "text": "our demo I created three Cate custs on",
    "start": "798839",
    "end": "803279"
  },
  {
    "text": "dke and deployed is De in each",
    "start": "803279",
    "end": "807160"
  },
  {
    "text": "Custer these three clusters are located",
    "start": "807160",
    "end": "809880"
  },
  {
    "text": "in different",
    "start": "809880",
    "end": "812440"
  },
  {
    "text": "regions you can see this is the region",
    "start": "813240",
    "end": "816560"
  },
  {
    "text": "name us Central 111 us",
    "start": "816560",
    "end": "820240"
  },
  {
    "text": "west11 us",
    "start": "820240",
    "end": "823800"
  },
  {
    "text": "west12 I also deployed the book INF for",
    "start": "826760",
    "end": "829279"
  },
  {
    "text": "application in two Tire two",
    "start": "829279",
    "end": "832759"
  },
  {
    "text": "clusters one only deployed the the",
    "start": "832759",
    "end": "836160"
  },
  {
    "text": "product page",
    "start": "836160",
    "end": "837600"
  },
  {
    "text": "service and and the other Custer",
    "start": "837600",
    "end": "840000"
  },
  {
    "text": "deployed the entire",
    "start": "840000",
    "end": "844440"
  },
  {
    "text": "Services next I will demonstrate how to",
    "start": "849160",
    "end": "852800"
  },
  {
    "text": "how to achieve multile claster routing",
    "start": "852800",
    "end": "855079"
  },
  {
    "text": "and load",
    "start": "855079",
    "end": "857600"
  },
  {
    "text": "balancing only by S the multiple cluster",
    "start": "860040",
    "end": "862720"
  },
  {
    "text": "routing problem can we achieve more",
    "start": "862720",
    "end": "865199"
  },
  {
    "text": "advanced functions such as load Bing and",
    "start": "865199",
    "end": "867959"
  },
  {
    "text": "F over",
    "start": "867959",
    "end": "870519"
  },
  {
    "text": "because the tire one cluster also",
    "start": "870519",
    "end": "872160"
  },
  {
    "text": "deployed is still you can apply the load",
    "start": "872160",
    "end": "874079"
  },
  {
    "text": "balancing method introduced by sh sh",
    "start": "874079",
    "end": "877040"
  },
  {
    "text": "earlier to this",
    "start": "877040",
    "end": "880320"
  },
  {
    "text": "Gateway as you can see from the diagram",
    "start": "880800",
    "end": "884399"
  },
  {
    "text": "is still is also deployed in the tire",
    "start": "884399",
    "end": "887199"
  },
  {
    "text": "one cluster",
    "start": "887199",
    "end": "889279"
  },
  {
    "text": "and the two Tire two",
    "start": "889279",
    "end": "893519"
  },
  {
    "text": "clusters you need to create R Services",
    "start": "893639",
    "end": "896360"
  },
  {
    "text": "destination rules and service interest",
    "start": "896360",
    "end": "898440"
  },
  {
    "text": "in each",
    "start": "898440",
    "end": "900720"
  },
  {
    "text": "Custer the S entries need to include the",
    "start": "900720",
    "end": "904079"
  },
  {
    "text": "entry points of the Ingress gateways of",
    "start": "904079",
    "end": "907160"
  },
  {
    "text": "each",
    "start": "907160",
    "end": "908320"
  },
  {
    "text": "Custer I have switched to the Custer",
    "start": "908320",
    "end": "911040"
  },
  {
    "text": "zero let's check out the E Resources we",
    "start": "911040",
    "end": "914360"
  },
  {
    "text": "have",
    "start": "914360",
    "end": "916680"
  },
  {
    "text": "created this is the inas gateway taian",
    "start": "917000",
    "end": "921959"
  },
  {
    "text": "gateway and this is host",
    "start": "925759",
    "end": "929360"
  },
  {
    "text": "let's check out the b to service booking",
    "start": "929360",
    "end": "932880"
  },
  {
    "text": "for the",
    "start": "932880",
    "end": "936560"
  },
  {
    "text": "a here is the some virtual",
    "start": "936920",
    "end": "942800"
  },
  {
    "text": "service you can see the match headers",
    "start": "943399",
    "end": "946639"
  },
  {
    "text": "xcut",
    "start": "946639",
    "end": "949440"
  },
  {
    "text": "selectors and HTTP",
    "start": "950199",
    "end": "954480"
  },
  {
    "text": "pass it will be rooted to different",
    "start": "954759",
    "end": "960600"
  },
  {
    "text": "subsets let's check out this",
    "start": "962079",
    "end": "965920"
  },
  {
    "text": "subset and here is the Des rule from",
    "start": "968519",
    "end": "973399"
  },
  {
    "text": "Caster",
    "start": "973399",
    "end": "975199"
  },
  {
    "text": "zero and there are some different",
    "start": "975199",
    "end": "980759"
  },
  {
    "text": "subsets say a sest",
    "start": "982199",
    "end": "986240"
  },
  {
    "text": "name and we just see this one booking",
    "start": "986839",
    "end": "992839"
  },
  {
    "text": "for",
    "start": "992839",
    "end": "993639"
  },
  {
    "text": "exteral one Z booking Forex one Z",
    "start": "993639",
    "end": "1000759"
  },
  {
    "text": "okay and it will select the entry point",
    "start": "1000759",
    "end": "1005079"
  },
  {
    "text": "with the label",
    "start": "1005079",
    "end": "1007920"
  },
  {
    "text": "match SB T",
    "start": "1008199",
    "end": "1011000"
  },
  {
    "text": "Custer we help add The",
    "start": "1011000",
    "end": "1014680"
  },
  {
    "text": "annotation to uh the label to s",
    "start": "1014680",
    "end": "1020480"
  },
  {
    "text": "centy GK G Us West one 2 and this is the",
    "start": "1020519",
    "end": "1026558"
  },
  {
    "text": "self centry we created for each",
    "start": "1026559",
    "end": "1031678"
  },
  {
    "text": "Custer you can see the end",
    "start": "1031679",
    "end": "1035280"
  },
  {
    "text": "points with different",
    "start": "1035280",
    "end": "1039559"
  },
  {
    "text": "levels here is a",
    "start": "1040959",
    "end": "1043000"
  },
  {
    "text": "level I help see on the destination rule",
    "start": "1043000",
    "end": "1047400"
  },
  {
    "text": "subset",
    "start": "1047400",
    "end": "1050400"
  },
  {
    "text": "this is the way how the tire one Gateway",
    "start": "1058520",
    "end": "1061919"
  },
  {
    "text": "finds the end point of the uh end points",
    "start": "1061919",
    "end": "1066280"
  },
  {
    "text": "from different Ingress",
    "start": "1066280",
    "end": "1068600"
  },
  {
    "text": "Gateway in the tire to",
    "start": "1068600",
    "end": "1072520"
  },
  {
    "text": "Cluster",
    "start": "1077400",
    "end": "1080080"
  },
  {
    "text": "let's take a look at the roots of users",
    "start": "1080080",
    "end": "1084559"
  },
  {
    "text": "requests the effects of this demo is",
    "start": "1086240",
    "end": "1090240"
  },
  {
    "text": "when the user request this",
    "start": "1090240",
    "end": "1093240"
  },
  {
    "text": "URL with or without X cluster selector",
    "start": "1093240",
    "end": "1097960"
  },
  {
    "text": "header the request will be rooted to",
    "start": "1097960",
    "end": "1101080"
  },
  {
    "text": "different tire to Gateway Tire two",
    "start": "1101080",
    "end": "1106640"
  },
  {
    "text": "clusters",
    "start": "1107320",
    "end": "1110200"
  },
  {
    "text": "use this command to retrieve the IP",
    "start": "1110200",
    "end": "1112799"
  },
  {
    "text": "address of the tire one",
    "start": "1112799",
    "end": "1116240"
  },
  {
    "text": "Gateway let's run the test first get the",
    "start": "1116240",
    "end": "1120200"
  },
  {
    "text": "Gateway IP from taian cluster cluster",
    "start": "1120200",
    "end": "1125000"
  },
  {
    "text": "zero then request the ZL without HTTP",
    "start": "1125720",
    "end": "1131280"
  },
  {
    "text": "header to easily view the results we",
    "start": "1131760",
    "end": "1135360"
  },
  {
    "text": "will export output directly to8 ml f now",
    "start": "1135360",
    "end": "1138960"
  },
  {
    "text": "and then view it in",
    "start": "1138960",
    "end": "1142039"
  },
  {
    "text": "browser",
    "start": "1145000",
    "end": "1148000"
  },
  {
    "text": "oops some service un",
    "start": "1148000",
    "end": "1152440"
  },
  {
    "text": "available reveal",
    "start": "1152440",
    "end": "1155799"
  },
  {
    "text": "details next way will request the URL",
    "start": "1159960",
    "end": "1162799"
  },
  {
    "text": "with HTTP",
    "start": "1162799",
    "end": "1165799"
  },
  {
    "text": "header this time let's find device",
    "start": "1166000",
    "end": "1168679"
  },
  {
    "text": "header",
    "start": "1168679",
    "end": "1169679"
  },
  {
    "text": "with custom",
    "start": "1169679",
    "end": "1172640"
  },
  {
    "text": "one let's see the",
    "start": "1172640",
    "end": "1175720"
  },
  {
    "text": "result is the same with the last",
    "start": "1175720",
    "end": "1180320"
  },
  {
    "text": "request this time we'll Su besty the",
    "start": "1190240",
    "end": "1192840"
  },
  {
    "text": "head with Caster",
    "start": "1192840",
    "end": "1196279"
  },
  {
    "text": "to",
    "start": "1197240",
    "end": "1200240"
  },
  {
    "text": "this time it works everything works",
    "start": "1206280",
    "end": "1211240"
  },
  {
    "text": "fine this is the same as as what way we",
    "start": "1213880",
    "end": "1217480"
  },
  {
    "text": "planned this demo shows how to use HTTP",
    "start": "1217480",
    "end": "1220360"
  },
  {
    "text": "header and pass routine you can add end",
    "start": "1220360",
    "end": "1224640"
  },
  {
    "text": "points of Tire two clusters to the",
    "start": "1224640",
    "end": "1227159"
  },
  {
    "text": "cluster to a",
    "start": "1227159",
    "end": "1229000"
  },
  {
    "text": "subset and configure balancing in the",
    "start": "1229000",
    "end": "1231559"
  },
  {
    "text": "destination",
    "start": "1231559",
    "end": "1234240"
  },
  {
    "text": "rule add is this subset",
    "start": "1238760",
    "end": "1243760"
  },
  {
    "text": "and as a load bance setting",
    "start": "1244320",
    "end": "1249720"
  },
  {
    "text": "here this is what I mean by multic",
    "start": "1250360",
    "end": "1253080"
  },
  {
    "text": "claster load",
    "start": "1253080",
    "end": "1255200"
  },
  {
    "text": "balancing and after sending some test",
    "start": "1255200",
    "end": "1258640"
  },
  {
    "text": "requests let's look at the service",
    "start": "1258640",
    "end": "1263200"
  },
  {
    "text": "topology when the user request Custer",
    "start": "1268000",
    "end": "1270640"
  },
  {
    "text": "two all services will work properly but",
    "start": "1270640",
    "end": "1274720"
  },
  {
    "text": "when the user request Custer one the",
    "start": "1274720",
    "end": "1277559"
  },
  {
    "text": "reviews ratings and detailed services",
    "start": "1277559",
    "end": "1279960"
  },
  {
    "text": "will be",
    "start": "1279960",
    "end": "1282360"
  },
  {
    "text": "unavailable you can solve the fail or",
    "start": "1283279",
    "end": "1285760"
  },
  {
    "text": "issue by configuring the Ingress gate",
    "start": "1285760",
    "end": "1288240"
  },
  {
    "text": "way in Tire two CS as an eest as an East",
    "start": "1288240",
    "end": "1293799"
  },
  {
    "text": "West",
    "start": "1293799",
    "end": "1295360"
  },
  {
    "text": "Gateway finally let's",
    "start": "1295360",
    "end": "1299600"
  },
  {
    "text": "summarize is still support a variety of",
    "start": "1301159",
    "end": "1303520"
  },
  {
    "text": "load Bing types based on E if you use e",
    "start": "1303520",
    "end": "1307679"
  },
  {
    "text": "to create various resource object memory",
    "start": "1307679",
    "end": "1310559"
  },
  {
    "text": "you need to switch back and force",
    "start": "1310559",
    "end": "1312799"
  },
  {
    "text": "between multiple clust",
    "start": "1312799",
    "end": "1315799"
  },
  {
    "text": "repeatedly it extremely prone to",
    "start": "1315799",
    "end": "1320799"
  },
  {
    "text": "errors routin anding across multiple",
    "start": "1320799",
    "end": "1323679"
  },
  {
    "text": "clusters need to be further",
    "start": "1323679",
    "end": "1326840"
  },
  {
    "text": "automated",
    "start": "1326840",
    "end": "1328760"
  },
  {
    "text": "probably with an interpretation layer on",
    "start": "1328760",
    "end": "1333760"
  },
  {
    "text": "top2 that's what Tetra did the two",
    "start": "1333760",
    "end": "1336960"
  },
  {
    "text": "Custer were deployed with TSB in this",
    "start": "1336960",
    "end": "1339200"
  },
  {
    "text": "demo it is a product from tet and",
    "start": "1339200",
    "end": "1343159"
  },
  {
    "text": "compatible with the Upstream is you can",
    "start": "1343159",
    "end": "1346679"
  },
  {
    "text": "learn more about is",
    "start": "1346679",
    "end": "1348960"
  },
  {
    "text": "from the Tet",
    "start": "1348960",
    "end": "1352000"
  },
  {
    "text": "website here are some reference links if",
    "start": "1352279",
    "end": "1355320"
  },
  {
    "text": "you want to find to the load balancing",
    "start": "1355320",
    "end": "1357240"
  },
  {
    "text": "of this to you can use in",
    "start": "1357240",
    "end": "1360320"
  },
  {
    "text": "filter I hope this driving can be",
    "start": "1360320",
    "end": "1362919"
  },
  {
    "text": "helpful to you thank you",
    "start": "1362919",
    "end": "1367919"
  }
]