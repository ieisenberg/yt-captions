[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "all right we're gonna go ahead and start up I'd like to thank everybody joining us today we've got a nice group of",
    "start": "2399",
    "end": "9150"
  },
  {
    "text": "attendees out there welcome today's CN CF webinar get your Windows apps ready",
    "start": "9150",
    "end": "14340"
  },
  {
    "text": "for kubernetes I'm Randi Abernathy with rxm on the cloud native ambassador and I'll be your host we're going to also",
    "start": "14340",
    "end": "21270"
  },
  {
    "text": "welcome today's presenters even foulest manager of solutions engineering at Moran just a couple of housekeeping",
    "start": "21270",
    "end": "26550"
  },
  {
    "text": "items before we get started during the webinar you're not able to talk as an",
    "start": "26550",
    "end": "33120"
  },
  {
    "text": "attendee so there's a Q&A box at the bottom of your screen where you can drop in questions and what we'll do is we'll",
    "start": "33120",
    "end": "38220"
  },
  {
    "text": "just sort of collect up the questions as the webinar progresses and then at the end we'll use whatever time we've got to",
    "start": "38220",
    "end": "44250"
  },
  {
    "text": "kind of knock down as many of those questions as we can get to so feel free to add questions at any point in time",
    "start": "44250",
    "end": "50219"
  },
  {
    "text": "and at the end we'll we'll kind of pick up as many as we can so this is an",
    "start": "50219",
    "end": "55980"
  },
  {
    "text": "official webinar of the CNC F and as such its subject to the scenes the F Code of Conduct so please don't put",
    "start": "55980",
    "end": "62820"
  },
  {
    "text": "anything in the chat or in the questions area that would violate that code of conduct you know just be respectful as",
    "start": "62820",
    "end": "69359"
  },
  {
    "text": "the bottom line and so really with that I'll I'll hand it over to Steven to kick",
    "start": "69359",
    "end": "74789"
  },
  {
    "text": "off today's presentation Steven excellent thank you so much Randy and welcome everyone to this webinar today I",
    "start": "74789",
    "end": "80279"
  },
  {
    "text": "thank you for trusting us with your time this morning afternoon or evening wherever you might be my name is Steven",
    "start": "80279",
    "end": "86700"
  },
  {
    "text": "Follis as Randy said I run a team of solution engineers amaranthus prior to that spent almost three years at docker",
    "start": "86700",
    "end": "92310"
  },
  {
    "text": "working with container customers of all shapes and sizes I'm excited today to talk about the intersection point",
    "start": "92310",
    "end": "98459"
  },
  {
    "text": "between the kubernetes container orcish trader and Windows workloads and so today we're gonna be talking a little",
    "start": "98459",
    "end": "104159"
  },
  {
    "text": "bit about you know why windows containers it's one of the most common questions I get when we talk about this topic why would you even want to do that",
    "start": "104159",
    "end": "109770"
  },
  {
    "text": "so what's the purpose there so we'll set some context around why running Windows workloads with kubernetes makes sense",
    "start": "109770",
    "end": "116069"
  },
  {
    "text": "well then move into some use cases some common rationale and common key things",
    "start": "116069",
    "end": "121469"
  },
  {
    "text": "that we're seeing customers choosing this technology approach for and then we'll spend the majority of our time",
    "start": "121469",
    "end": "126509"
  },
  {
    "text": "talking about what I'm calling real world considerations so things that we've seen and working with customers to help make your own adoption of this",
    "start": "126509",
    "end": "133049"
  },
  {
    "text": "technology as smooth as possible I do have some time for a demo today and",
    "start": "133049",
    "end": "138270"
  },
  {
    "text": "and as Randy said we'll leave some time for Q&A okay here at the end so with that let's let's jump right on in so as",
    "start": "138270",
    "end": "144630"
  },
  {
    "text": "far as why Windows containers this is a question we get all the time you know containers are a Linux thing they came",
    "start": "144630",
    "end": "151080"
  },
  {
    "text": "from the Linux world cgroups namespaces baked in the Linux kernel why are we talking about Windows well as many of",
    "start": "151080",
    "end": "156930"
  },
  {
    "text": "you may be aware beginning with Windows Server 2016 Microsoft introduced support",
    "start": "156930",
    "end": "162150"
  },
  {
    "text": "for Windows containers which are analogous and very similar to their Linux container cousins this then",
    "start": "162150",
    "end": "167850"
  },
  {
    "text": "allowed us to take legacy net based workloads running on Windows Server containerized them and then get the",
    "start": "167850",
    "end": "174300"
  },
  {
    "text": "benefits of containers with those windows based workloads and so one of",
    "start": "174300",
    "end": "179460"
  },
  {
    "text": "the things that we've seen over the last several years is that there are still a lot of Windows applications out there in the world today so the IDC just a few",
    "start": "179460",
    "end": "186630"
  },
  {
    "start": "180000",
    "end": "180000"
  },
  {
    "text": "years ago estimated that over 70% of applications that are running on premises today are running on some sort",
    "start": "186630",
    "end": "193620"
  },
  {
    "text": "of flavor of Windows Server be that 2012 Oh 803 2000 apps that have been around",
    "start": "193620",
    "end": "201570"
  },
  {
    "text": "for a long time so while we oftentimes in the industry really enjoy talking about the new shiny micro service",
    "start": "201570",
    "end": "207120"
  },
  {
    "text": "framework or things like nodejs go laying rust python in reality there's a",
    "start": "207120",
    "end": "213690"
  },
  {
    "text": "significant amount of applications that are out there in the world today um that can use the benefits of containers to",
    "start": "213690",
    "end": "219540"
  },
  {
    "text": "breathe normal life into them and so this is by targeting these on from workloads it allows folks that are",
    "start": "219540",
    "end": "224970"
  },
  {
    "text": "operating on prim environments to shrink that footprint and make them more efficient with how they're able to",
    "start": "224970",
    "end": "230010"
  },
  {
    "text": "operate those workloads today secondly from a people perspective we still see a",
    "start": "230010",
    "end": "235200"
  },
  {
    "text": "lot of developers out there that are utilizing the c-sharp programming language and so nearly a third of",
    "start": "235200",
    "end": "241320"
  },
  {
    "text": "respondents to the stack overflow developer survey are stating that they're still writing a lot of c-sharp which predominantly and historically is",
    "start": "241320",
    "end": "248100"
  },
  {
    "text": "associated with Windows Server based workloads there are certainly with dotnet core that's starting to change",
    "start": "248100",
    "end": "253200"
  },
  {
    "text": "but a lot of the c-sharp out there is still in the dotnet framework family speaking of frameworks we still see",
    "start": "253200",
    "end": "259049"
  },
  {
    "text": "asp.net and dotnet s-- near the top of lists from stack overflow rounds the top",
    "start": "259049",
    "end": "265229"
  },
  {
    "text": "framework choices that are being used today out in the industry and so hopefully all these numbers are",
    "start": "265229",
    "end": "270620"
  },
  {
    "text": "painting a picture there's still a lot of applications out there that we can go after and that we can focus on container",
    "start": "270620",
    "end": "276290"
  },
  {
    "text": "izing and getting the benefits around portability or on scalability and then",
    "start": "276290",
    "end": "281750"
  },
  {
    "text": "all the capabilities of kubernetes alongside them as well so from a use case perspective we see a variety of",
    "start": "281750",
    "end": "288280"
  },
  {
    "text": "values that folks find it's with containers and kubernetes the first is around consistent operations",
    "start": "288280",
    "end": "293860"
  },
  {
    "text": "historically we have had different siloed stacks of how we built and ran",
    "start": "293860",
    "end": "298970"
  },
  {
    "text": "applications so over here I may have my Linux team that are running kind of engine X based applications and they do",
    "start": "298970",
    "end": "305060"
  },
  {
    "text": "things one way and then over on another side of the organization we have the windows team building and running windows apps differently",
    "start": "305060",
    "end": "310550"
  },
  {
    "text": "um there's oh there's large discrepancies between the two there what kubernetes allows us to do nowadays is",
    "start": "310550",
    "end": "316670"
  },
  {
    "text": "to take one standard cluster the kubernetes technology and then be able",
    "start": "316670",
    "end": "321710"
  },
  {
    "text": "to run a Linux based application that we built last quarter and a Windows app that we built last decade and ran them",
    "start": "321710",
    "end": "327680"
  },
  {
    "text": "side-by-side on the exact same infrastructure this greatly decreases operational complexity like breaking",
    "start": "327680",
    "end": "333710"
  },
  {
    "start": "331000",
    "end": "331000"
  },
  {
    "text": "down those silos and having consistency between how we run applications allows us to set up one set of firewall rules",
    "start": "333710",
    "end": "340090"
  },
  {
    "text": "instead of em fro instead of our back we do everything once rather than every",
    "start": "340090",
    "end": "345200"
  },
  {
    "text": "single time for each different kind of application so consistency is a big",
    "start": "345200",
    "end": "350510"
  },
  {
    "text": "benefit that we get with a myriad of different applications running on kubernetes next is around legacy Network",
    "start": "350510",
    "end": "357350"
  },
  {
    "text": "loads we stated a second ago that there's a lot of that out there and",
    "start": "357350",
    "end": "362540"
  },
  {
    "text": "those applications are typically an in need of some tender love and care right now while you may have developers that",
    "start": "362540",
    "end": "368810"
  },
  {
    "text": "are building greenfield kind of new applications and gonna take advantage of very seamless deployment and build",
    "start": "368810",
    "end": "374720"
  },
  {
    "text": "experiences whereas the teams that are supporting legacy top net apps are oftentimes still running in your manual",
    "start": "374720",
    "end": "381770"
  },
  {
    "text": "build scripts you know they're running lots of PowerShell scripts to be able to build and compile those applications they're opening multiple RDP windows to",
    "start": "381770",
    "end": "389150"
  },
  {
    "text": "different servers and copying and pasting web deploy packages between them you know there's oftentimes a lot of",
    "start": "389150",
    "end": "395390"
  },
  {
    "text": "manual work that's being done because back when those applications were created there there weren't a whole lot",
    "start": "395390",
    "end": "400670"
  },
  {
    "text": "of better options there and so containers allow us to bring characteristics of more modern",
    "start": "400670",
    "end": "406110"
  },
  {
    "text": "frameworks and be able to use that with this more legacy code so we get a smoother deployment experience a",
    "start": "406110",
    "end": "411300"
  },
  {
    "text": "smoother scalability experience and just a better operational context and what",
    "start": "411300",
    "end": "416460"
  },
  {
    "text": "we've had historically third is cost savings this is really one of the biggest oftentimes especially on print",
    "start": "416460",
    "end": "423090"
  },
  {
    "text": "we have VM sprawl we have lots and lots of VMs everywhere hundreds thousands tens of thousands of VMs many times",
    "start": "423090",
    "end": "429180"
  },
  {
    "text": "operating at forty percent utilization at best sometimes thirty twenty or below",
    "start": "429180",
    "end": "435050"
  },
  {
    "text": "so it not very utilized VMs and it makes sense nobody wants to run out of resources so we over provision those VMs",
    "start": "435050",
    "end": "441810"
  },
  {
    "text": "I mean that can be costly to manage costly to maintain and can just be costly in general and so containers",
    "start": "441810",
    "end": "448140"
  },
  {
    "text": "allow us to take the exact same applications that are running on those VMs and they able to run them on less",
    "start": "448140",
    "end": "454530"
  },
  {
    "text": "infrastructure through the multi-tenancy nature of kubernetes so we can run them side by side and get much higher",
    "start": "454530",
    "end": "461100"
  },
  {
    "text": "utilization in a kubernetes cluster than we can on mini stand-alone VMs and so it's it's cheaper from an infrastructure",
    "start": "461100",
    "end": "467490"
  },
  {
    "text": "perspective it's cheaper from a management perspective and then for those users that are looking at at public cloud as an option what we find",
    "start": "467490",
    "end": "474510"
  },
  {
    "text": "is that that VM that's running right now on prim at 20 percent utilization you know we already expense that whole that",
    "start": "474510",
    "end": "482100"
  },
  {
    "text": "whole blade server that's not a big deal but as we go to the public cloud and we start being charged on an OP X model",
    "start": "482100",
    "end": "487410"
  },
  {
    "text": "where every single second we're being charged you know eighty percent of an unused VM starts to get pricey right so",
    "start": "487410",
    "end": "492930"
  },
  {
    "text": "by utilizing less resources either on prim or in the cloud we can save substantial money when it comes to",
    "start": "492930",
    "end": "499020"
  },
  {
    "text": "operations speaking of the cloud cloud migration is often front and center many organizations today container izing",
    "start": "499020",
    "end": "506370"
  },
  {
    "text": "creates a very elegant way to be able to shift applications from running on an on-premises context up to a public cloud",
    "start": "506370",
    "end": "513240"
  },
  {
    "text": "or even multi multiple public clouds or hybrid containers are intrinsically",
    "start": "513240",
    "end": "518460"
  },
  {
    "text": "portable it's one of the best benefits of them and so by container raising of windows that we're able to more easily",
    "start": "518460",
    "end": "523800"
  },
  {
    "text": "move that to the cloud so we can containerize today and then in six six or twelve months down the road choose to",
    "start": "523800",
    "end": "530130"
  },
  {
    "text": "move that to the public cloud or we can container eyes and move to the public cloud all at once so we have some options there on where we",
    "start": "530130",
    "end": "536040"
  },
  {
    "text": "run the application and it enhances the flexibility of when and how we moved to that public cloud or back on prim if if",
    "start": "536040",
    "end": "543209"
  },
  {
    "text": "me be and then finally DevOps applications that have been built over the last four to five years have been",
    "start": "543209",
    "end": "550050"
  },
  {
    "text": "able to benefit from the DevOps pipelines you know continuous integration continuous deployment some",
    "start": "550050",
    "end": "555930"
  },
  {
    "text": "automation of all the things however on the windows side of the house we haven't always had the ability to use those",
    "start": "555930",
    "end": "561990"
  },
  {
    "text": "types of practices with our legacy applications so we run DevOps perspective we can now have very",
    "start": "561990",
    "end": "567240"
  },
  {
    "text": "consistent pipelines of how we build Linux containers and then how we build Windows containers with those different",
    "start": "567240",
    "end": "572490"
  },
  {
    "text": "kinds of applications thus simplifying our our processes and taking advantage",
    "start": "572490",
    "end": "577829"
  },
  {
    "text": "of a lot of the automation that DevOps in kubernetes afford for us so these are",
    "start": "577829",
    "end": "583740"
  },
  {
    "text": "five of the main buckets that we see interest around as far as why to containerize and run apps on kubernetes",
    "start": "583740",
    "end": "588779"
  },
  {
    "text": "but the number one reason that we've seen over the last three years is all around Windows Server 2008 so you may",
    "start": "588779",
    "end": "595440"
  },
  {
    "start": "593000",
    "end": "593000"
  },
  {
    "text": "have seen on Twitter or blogs yesterday but as of yesterday Windows Server 2008",
    "start": "595440",
    "end": "601920"
  },
  {
    "text": "is now officially end-of-life and so this means there are no more security patches or hot fixes coming from",
    "start": "601920",
    "end": "607949"
  },
  {
    "text": "Microsoft we are we are past the extended support dates standard and extend and support there's nothing else",
    "start": "607949",
    "end": "613529"
  },
  {
    "text": "coming there and so there are that said there are still a large number of Windows Server 2008 servers that are out",
    "start": "613529",
    "end": "621420"
  },
  {
    "text": "in the world today and so those now as of yesterday are starting to represent severe vulnerabilities from a security",
    "start": "621420",
    "end": "627540"
  },
  {
    "text": "perspective from an audit perspective from a governance perspective and there's a bit of a gold rush now to try",
    "start": "627540",
    "end": "633240"
  },
  {
    "text": "to move workloads off of Server o 8 and on to more modern and supported operating systems such as Windows Server",
    "start": "633240",
    "end": "640160"
  },
  {
    "text": "2016 2019 etc and so this has been a big driving force over the past year is",
    "start": "640160",
    "end": "645389"
  },
  {
    "text": "everyone looking at well what are we going to do with all these workloads that we have running right now 108 and there are several options the main ones",
    "start": "645389",
    "end": "652439"
  },
  {
    "start": "652000",
    "end": "652000"
  },
  {
    "text": "we see or hey we're going to refactor and upgrade this application so we can take this dotnet framework app tear it",
    "start": "652439",
    "end": "657569"
  },
  {
    "text": "apart so let's go recode it and the brand-new shiny net core moving on to Windows Server 2019 and we're good to go",
    "start": "657569",
    "end": "664610"
  },
  {
    "text": "that's a great pathway but it typically doesn't scale very well so if you have one or two applique",
    "start": "664610",
    "end": "669840"
  },
  {
    "text": "Asians that that may be an option but when we're talking at a portfolio of a hundred or five hundred or thousand",
    "start": "669840",
    "end": "675960"
  },
  {
    "text": "applications there's simply not enough manpower and time to be able to go in and under undertake such a massive shift",
    "start": "675960",
    "end": "683460"
  },
  {
    "text": "in application there's a lot of rework many line of business apps may not have a real visible ROI for going through and",
    "start": "683460",
    "end": "690210"
  },
  {
    "text": "investing that much time and resources so this this refactor and redevelop the application can be challenging next is a",
    "start": "690210",
    "end": "698130"
  },
  {
    "text": "custom support agreement from Microsoft they typically come with a lot of zeros on them so now that we're after that",
    "start": "698130",
    "end": "704490"
  },
  {
    "text": "dates it's simply not practical for many organizations based on the price tag of",
    "start": "704490",
    "end": "710250"
  },
  {
    "text": "having very custom bespoke support from Microsoft for those workloads that are running best case scenario is that it's",
    "start": "710250",
    "end": "716520"
  },
  {
    "text": "a it's it's a temporary band-aid that you're still going to have to address those applications sooner rather you",
    "start": "716520",
    "end": "721650"
  },
  {
    "text": "know at some point down the road it's really kicking the can down the road similarly many cloud providers are",
    "start": "721650",
    "end": "727320"
  },
  {
    "text": "offering limited support really do some security fixes if you lift and shift those virtual machines from on-prem up",
    "start": "727320",
    "end": "733950"
  },
  {
    "text": "to a public cloud provider so that is an option again you're still running on an",
    "start": "733950",
    "end": "738960"
  },
  {
    "text": "outdated operating system in the cloud just like you were on prim except it may cost more at this point because now the",
    "start": "738960",
    "end": "745050"
  },
  {
    "text": "the pricing model of the cloud is different so that lift and shift is an option but it's it's also delaying the",
    "start": "745050",
    "end": "750840"
  },
  {
    "text": "inevitable you're going to have to do something for those applications so those three are options but the one that",
    "start": "750840",
    "end": "756900"
  },
  {
    "text": "we found to be the most compelling is around containerization so we can take an application that's running dotnet",
    "start": "756900",
    "end": "763080"
  },
  {
    "text": "framework on a VM today we containerize the application itself with its configuration thus decoupling that app from the",
    "start": "763080",
    "end": "770670"
  },
  {
    "text": "underlying operating system once containerized we can throw away that server o8 environment and move the",
    "start": "770670",
    "end": "776130"
  },
  {
    "text": "container forward to Windows Server 2019 with that and oftentimes without code",
    "start": "776130",
    "end": "782610"
  },
  {
    "text": "change usually its configuration change adjustment to web config files based on environment those types of things and so",
    "start": "782610",
    "end": "788250"
  },
  {
    "text": "from once containerized we then deploy onto kubernetes and then we get i'm a lot of those benefits of the deployment",
    "start": "788250",
    "end": "794400"
  },
  {
    "text": "model without having to undergo substantial and costly redevelopment efforts furthermore if we",
    "start": "794400",
    "end": "801170"
  },
  {
    "text": "fast forward to two or three years down the road if we need to go through this exercise again we simply in our docker file change the from statement to a",
    "start": "801170",
    "end": "807050"
  },
  {
    "text": "different version of Windows recompile the container and now we're able to cope with additional upgrades down the road",
    "start": "807050",
    "end": "813110"
  },
  {
    "text": "so it's a more future-proof path than investing all that manual effort today so this containerization path is a",
    "start": "813110",
    "end": "819290"
  },
  {
    "text": "really compelling way to be able mitigates the windows 2008 that are still within environments and provide a",
    "start": "819290",
    "end": "825769"
  },
  {
    "text": "more future looking way of running that that application code okay so now as far",
    "start": "825769",
    "end": "831829"
  },
  {
    "text": "as kind of why we're going to go and run this let's talk about kind of how and some of the things to think about as",
    "start": "831829",
    "end": "838220"
  },
  {
    "text": "you're beginning this journey down the path towards Windows applications on kubernetes so the first place I'd like",
    "start": "838220",
    "end": "844459"
  },
  {
    "text": "to start is around the server operating system so what are you gonna run these containers on I mentioned that's Windows",
    "start": "844459",
    "end": "850579"
  },
  {
    "start": "845000",
    "end": "845000"
  },
  {
    "text": "Server 2016 and reduce support for containers but there are actually a couple of different main branches of how",
    "start": "850579",
    "end": "856279"
  },
  {
    "text": "we can go out and get Windows Server this may be review from any of you but I liked about Johnny because it's not as",
    "start": "856279",
    "end": "861860"
  },
  {
    "text": "universally known as as I would expect but Windows does come in two different flavors the first is what they call the",
    "start": "861860",
    "end": "867560"
  },
  {
    "text": "long term servicing channel or LTS C this is when we when you see Windows Server 2019 2016",
    "start": "867560",
    "end": "874850"
  },
  {
    "text": "2012 those are all on the long term servicing Channel and and really is what I think about when I think about Windows",
    "start": "874850",
    "end": "880820"
  },
  {
    "text": "Server right so we get a new version every 2 or 3 years we have the 5 plus 5 of support 5 mainstream than 5 of",
    "start": "880820",
    "end": "887600"
  },
  {
    "text": "extended and this is really focused on stability and predictability so",
    "start": "887600",
    "end": "892940"
  },
  {
    "text": "Microsoft isn't typically not shipping bleeding-edge features into the LTS see good they is they don't want to rock the",
    "start": "892940",
    "end": "899660"
  },
  {
    "text": "boat this is where historically we've built you know mission critical workloads on top of the very stable LT",
    "start": "899660",
    "end": "904760"
  },
  {
    "text": "SC starting starting with Windows Server 2016 there was also a second channel",
    "start": "904760",
    "end": "910640"
  },
  {
    "text": "that has been opened up and they call it the semi-annual channel or si si so if you've seen Windows Server comma version",
    "start": "910640",
    "end": "917149"
  },
  {
    "text": "1909 version 1903 1809 1709 any of those",
    "start": "917149",
    "end": "922880"
  },
  {
    "text": "types of numbering scheme that's related to the semi-annual channel and this isn't a very different release channel",
    "start": "922880",
    "end": "929000"
  },
  {
    "text": "so there you can't kind of bounce back and forth between the two when you install a server you select kind of one",
    "start": "929000",
    "end": "934339"
  },
  {
    "text": "path or the other and the semi-annual channel this is different and that's we they ship at Microsoft ships new version",
    "start": "934339",
    "end": "941460"
  },
  {
    "text": "every six months typically in the spring and in the fall 1909 was just released a few months ago these come with with all",
    "start": "941460",
    "end": "948990"
  },
  {
    "text": "the latest features so these are much more bleeding-edge and so for technologies that are emerging such as containers and kubernetes the",
    "start": "948990",
    "end": "956130"
  },
  {
    "text": "semi-annual channel is where microsoft puts all of their newest and shiniest new features there first and then every",
    "start": "956130",
    "end": "963000"
  },
  {
    "text": "time they cutting new LTS see those features typically either then rolled back into that LT SC branch the downside",
    "start": "963000",
    "end": "970680"
  },
  {
    "text": "to this that we often see here is that the s AC comes with 18 months of support and that is oftentimes too short of a",
    "start": "970680",
    "end": "977610"
  },
  {
    "text": "window for some organizations especially those that may be on-premises that have very stringent qualifications and",
    "start": "977610",
    "end": "985140"
  },
  {
    "text": "processes for approving operating systems so you may be saying look hey we just we just got Server 2016 approved",
    "start": "985140",
    "end": "991950"
  },
  {
    "text": "six months ago you know there's no way we can move to something this quickly and that's understandable so typically",
    "start": "991950",
    "end": "998790"
  },
  {
    "text": "if you're in the cloud Microsoft and our instance we would recommend looking at the semi-annual channel that's where all",
    "start": "998790",
    "end": "1004970"
  },
  {
    "text": "the bugs are being fixed first where new features are being released you're going to have a better kubernetes experience",
    "start": "1004970",
    "end": "1009980"
  },
  {
    "text": "on the semi-annual channel but you can still use kubernetes with Windows Server 2019 on the LTS C as well so that host",
    "start": "1009980",
    "end": "1017330"
  },
  {
    "text": "operating system matters on what also matter is the base image that you're",
    "start": "1017330",
    "end": "1022339"
  },
  {
    "start": "1022000",
    "end": "1022000"
  },
  {
    "text": "building off of so in the container world you may be aware that everything is built up off a concept of layers it's",
    "start": "1022339",
    "end": "1027920"
  },
  {
    "text": "not one large blob or one big binary but instead several distinct layers that make up and container image in the Linux",
    "start": "1027920",
    "end": "1035390"
  },
  {
    "text": "world you may be used to building on Alpine based images or busybox or scratch they're one of thousands that",
    "start": "1035390",
    "end": "1041959"
  },
  {
    "text": "are available in the docker hub in the windows world we everything derives from three base images the first being nano",
    "start": "1041959",
    "end": "1049040"
  },
  {
    "text": "server this is the smallest image that's available on the latest semi-annual channel of 1909 this clocks in around",
    "start": "1049040",
    "end": "1055580"
  },
  {
    "text": "100 Meg's I mean it'll be larger on different versions of Windows the size has changed quite drastically to be",
    "start": "1055580",
    "end": "1062270"
  },
  {
    "text": "honest nano server is great for greenfield and cloud native apps so if you were building a a.net core applica",
    "start": "1062270",
    "end": "1068260"
  },
  {
    "text": "or no js' and you wanted to run that with Windows you would typically choose nano server to do that so it's also if",
    "start": "1068260",
    "end": "1076300"
  },
  {
    "text": "you had any kind of PowerShell scripts or kind of automation or ETL type jobs you'll be able to put that into a nano",
    "start": "1076300",
    "end": "1081790"
  },
  {
    "text": "server to keep the container size small and it's definitely when you don't need full net framework if you do need the",
    "start": "1081790",
    "end": "1087730"
  },
  {
    "text": "full net framework that gets us into the second base image which is server core server core is really is our our",
    "start": "1087730",
    "end": "1093490"
  },
  {
    "text": "bread-and-butter when we talk about legacy net applications because we have full dotnet framework so it's really",
    "start": "1093490",
    "end": "1099010"
  },
  {
    "text": "targeting those legacy based applications that have been around for five ten plus years and so we can go in",
    "start": "1099010",
    "end": "1106150"
  },
  {
    "text": "and install those types of applications into server core and have all of the components that they need to operate if",
    "start": "1106150",
    "end": "1112360"
  },
  {
    "text": "you if there's an application that your container izing and you hit a roadblock because it's missing some component of",
    "start": "1112360",
    "end": "1117490"
  },
  {
    "text": "Windows we also now have a third option that was introduced with Windows Server 2019 and that's this window space image",
    "start": "1117490",
    "end": "1124300"
  },
  {
    "text": "this is this carries the most Windows components that are available and goes really above and beyond what we have in",
    "start": "1124300",
    "end": "1129670"
  },
  {
    "text": "server core so if your application makes heavy use of win32 api s or other pieces",
    "start": "1129670",
    "end": "1135190"
  },
  {
    "text": "of Windows this would be kind of a last stop of something to try to be able to containerize that app it's much it's",
    "start": "1135190",
    "end": "1141190"
  },
  {
    "text": "more expensive than super core what I've personally seen windows more and this Windows based image utilized is for",
    "start": "1141190",
    "end": "1146820"
  },
  {
    "text": "customers that are looking to do things like headless browser testing so we something like a selenium grid where",
    "start": "1146820",
    "end": "1153190"
  },
  {
    "text": "we're going to spin up servers we check in some code spin up some servers and then do browser testing and we want to",
    "start": "1153190",
    "end": "1158590"
  },
  {
    "text": "test on windows that the selenium driver pieces historically had not worked with server core but they did work with this",
    "start": "1158590",
    "end": "1164890"
  },
  {
    "text": "windows-based image so that provides us more capabilities we typically recommend",
    "start": "1164890",
    "end": "1169930"
  },
  {
    "text": "start sticking to whichever base image is going to result in the smallest container available so while something",
    "start": "1169930",
    "end": "1176140"
  },
  {
    "text": "may work in Windows as a base image server core if it'll work in server core we all always recommend server core and",
    "start": "1176140",
    "end": "1182770"
  },
  {
    "text": "likewise down to nano server if it would run there keep things nice small and efficient from an image perspective so",
    "start": "1182770",
    "end": "1188830"
  },
  {
    "text": "while we're talking so much around OS versions and base images is that in the linux worlds you're likely familiar with",
    "start": "1188830",
    "end": "1195310"
  },
  {
    "text": "the fact that we don't really have to you know care that much about the host as long as it's got a container runtime",
    "start": "1195310",
    "end": "1201550"
  },
  {
    "text": "where typically good to go in linux on windows that we have to care about version compatibility and so I've got a small",
    "start": "1201550",
    "end": "1207580"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "chart here it's a simplified version of what's in the Microsoft Doc's here on this link at the bottom but you can see",
    "start": "1207580",
    "end": "1213249"
  },
  {
    "text": "here from a host OS version if we're running Windows Server 2019 as our host then we need to make sure we match and",
    "start": "1213249",
    "end": "1220230"
  },
  {
    "text": "align the base image that's running inside of that container so we would need to have a Windows Server 2019 image",
    "start": "1220230",
    "end": "1227470"
  },
  {
    "text": "that's inside of that container if we were if we had a base image of 2019 and tried to then run a container image",
    "start": "1227470",
    "end": "1233980"
  },
  {
    "text": "based on 1903 it's going to stop us not allow us to run that workload that's because the windows api and kernel has",
    "start": "1233980",
    "end": "1242440"
  },
  {
    "text": "been undergoing such change in something in the last several years we want to ensure that the hosts in the container match up so we don't have any errors or",
    "start": "1242440",
    "end": "1249700"
  },
  {
    "text": "weird issues with a mismatch between those two and so this is based on what",
    "start": "1249700",
    "end": "1256480"
  },
  {
    "text": "we call process isolation which is the default mode of running containers both in Linux and in Windows and so in a",
    "start": "1256480",
    "end": "1263409"
  },
  {
    "text": "process isolation if I have five containers on the same host they're all sharing the hosts kernel and that meant",
    "start": "1263409",
    "end": "1268720"
  },
  {
    "text": "in that host operating system alternatively in Windows we do have a second option that we call hyper-v",
    "start": "1268720",
    "end": "1274690"
  },
  {
    "text": "isolation hyper-v isolation is specific to Windows containers but it allows us to wrap a running container in a very",
    "start": "1274690",
    "end": "1282580"
  },
  {
    "text": "thin virtual machine where that container gets a dedicated version of the kernel just for that one container",
    "start": "1282580",
    "end": "1288159"
  },
  {
    "text": "and so historically for standalone Windows Server containers that are running without orchestration or for",
    "start": "1288159",
    "end": "1294369"
  },
  {
    "text": "other orchestrators we've been able to utilize this hyper-v isolation but we are in the process of bringing that in",
    "start": "1294369",
    "end": "1300279"
  },
  {
    "text": "the kubernetes so it's currently at an alpha feature so not quite ready for primetime today but over the year over",
    "start": "1300279",
    "end": "1306340"
  },
  {
    "text": "this next year in 2020 we expect that to mature greatly and it's under active development here to bring this option",
    "start": "1306340",
    "end": "1312129"
  },
  {
    "text": "here what hyper-v isolation allows us to do is a little bit more flexibility around version compat so in here if I had a",
    "start": "1312129",
    "end": "1319480"
  },
  {
    "text": "host operating system of 1903 that's running on in my cluster and someone",
    "start": "1319480",
    "end": "1325899"
  },
  {
    "text": "gave me an image that was based on 2019 I could then run that container image on top of that host utilizing hyper-v",
    "start": "1325899",
    "end": "1333279"
  },
  {
    "text": "isolation rather than process isolation so again coming soon but wanted to kind of mention it now so that you can be",
    "start": "1333279",
    "end": "1339040"
  },
  {
    "text": "thinking about that in the future and insurance you're matching up these versions here when it comes to the",
    "start": "1339040",
    "end": "1345820"
  },
  {
    "text": "cluster make up with Windows Server um this should look very similar to you so in kubernetes we have this notion of",
    "start": "1345820",
    "end": "1351520"
  },
  {
    "start": "1347000",
    "end": "1347000"
  },
  {
    "text": "master nodes that are the brains of the operation I think of them as air traffic controllers that are doing all the kind",
    "start": "1351520",
    "end": "1357310"
  },
  {
    "text": "of organization and operations of the cluster and then we have the worker nodes that are running our actual container workloads that we specify that",
    "start": "1357310",
    "end": "1363940"
  },
  {
    "text": "we give kubernetes to run historically we've had all Linux so the Masters were Linux the workers were Linux as we've",
    "start": "1363940",
    "end": "1371650"
  },
  {
    "text": "introduced support for Windows server into the environment they are available as Windows worker nodes only so one of",
    "start": "1371650",
    "end": "1378100"
  },
  {
    "text": "the questions we get all the time is hey we're a window shop we don't really like running Linux VMs if we don't have to",
    "start": "1378100",
    "end": "1384250"
  },
  {
    "text": "can we do a full you know pure 100% Windows Server cluster and still run",
    "start": "1384250",
    "end": "1389620"
  },
  {
    "text": "kubernetes and so that the short answer right now is no we do require that master nodes are running the Linux",
    "start": "1389620",
    "end": "1394960"
  },
  {
    "text": "operating system and then we can add one or more windows server worker nodes that",
    "start": "1394960",
    "end": "1401380"
  },
  {
    "text": "are there today and so right now we do need a mix of Linux and Windows in the environment so at this point if I had a",
    "start": "1401380",
    "end": "1409390"
  },
  {
    "text": "cluster with a mixture of worker nodes and I wanted to go deploy and a Windows container say running iis and I gave the",
    "start": "1409390",
    "end": "1417130"
  },
  {
    "text": "pods back on and all my yeah mol gave it to you did a cube cuddle apply and the",
    "start": "1417130",
    "end": "1422350"
  },
  {
    "text": "Masters went to schedule it onto a node that windows container could potentially wind up on any of these for worker nodes",
    "start": "1422350",
    "end": "1428320"
  },
  {
    "text": "Linux or Windows if a Windows pod was to land on top of a Linux node to be scheduled though we'd have an error it",
    "start": "1428320",
    "end": "1434710"
  },
  {
    "text": "would not be able to operate that and so you know eventually kubernetes may retry and try to reschedule but what we'd like",
    "start": "1434710",
    "end": "1442690"
  },
  {
    "text": "to do is I'm is have a more elegant approach to ensuring that Linux pods run on Linux nodes and Windows pods run on",
    "start": "1442690",
    "end": "1449500"
  },
  {
    "text": "Windows nodes to do that we utilize features inside of kubernetes specifically taints and toleration x' so",
    "start": "1449500",
    "end": "1456430"
  },
  {
    "start": "1453000",
    "end": "1453000"
  },
  {
    "text": "what I could do here is I could use cube cuddle to go and entertain those notes with an OS of Windows equals no",
    "start": "1456430",
    "end": "1462730"
  },
  {
    "text": "scheduled and then that would block Windows nodes from running on those Windows pods from running on those nodes",
    "start": "1462730",
    "end": "1469749"
  },
  {
    "text": "when I go to deploy an actual Windows pod though I could then specify a toleration that would allow me to go on",
    "start": "1469749",
    "end": "1475719"
  },
  {
    "text": "top of that taint into schedule and then I could even use something like a node selector to ensure that the pod is being",
    "start": "1475719",
    "end": "1482169"
  },
  {
    "text": "landed on a on a Windows node so over here on the right I have three worker nodes we have a Linux and Windows and",
    "start": "1482169",
    "end": "1487719"
  },
  {
    "text": "Linux and so if I'm deploying with this node selector of Windows that pods going",
    "start": "1487719",
    "end": "1492879"
  },
  {
    "text": "to land on a node that has that label where we have that match I'm sorry we've",
    "start": "1492879",
    "end": "1498070"
  },
  {
    "text": "assertively done this in various ways with labels we're simply applying those same that same technique to Windows",
    "start": "1498070",
    "end": "1504359"
  },
  {
    "text": "instead so we didn't go reinvent the wheel here we're utilizing currently available techniques inside of",
    "start": "1504359",
    "end": "1510460"
  },
  {
    "text": "kubernetes starting with cube 1.17 we also have the ability to have a node selector based on this Windows - build",
    "start": "1510460",
    "end": "1517479"
  },
  {
    "text": "command so you can see on here on the bottom we have ten 0.177 63 that is the",
    "start": "1517479",
    "end": "1523899"
  },
  {
    "text": "build number of Windows Server 2019 that LT SC branch so if I had a kubernetes",
    "start": "1523899",
    "end": "1529839"
  },
  {
    "text": "cluster that was mixing for some reason of LTS C nodes and si si nodes I can",
    "start": "1529839",
    "end": "1535509"
  },
  {
    "text": "further specify my node selector which which Nova that tool and on based on that notes select your command there so",
    "start": "1535509",
    "end": "1541989"
  },
  {
    "text": "we're getting even more granular not just Windows but that LTS CR that particular build number of Windows is",
    "start": "1541989",
    "end": "1547089"
  },
  {
    "text": "there available as well so something to think about I'm the very first Windows pods that I've scheduled I was trying to",
    "start": "1547089",
    "end": "1553239"
  },
  {
    "text": "figure out hey why are these not coming up and working well it's because they were trying the kubernetes was trying to assign those pods onto a Linux node it's",
    "start": "1553239",
    "end": "1561070"
  },
  {
    "text": "not gonna work you've got to make sure that we've got node selectors and taints there to ensure that the pod lands on the right node some general things to",
    "start": "1561070",
    "end": "1568690"
  },
  {
    "text": "keep in mind we talked a lot about Windows Server 2019 that really is the the floor of support for kubernetes so",
    "start": "1568690",
    "end": "1575229"
  },
  {
    "start": "1569000",
    "end": "1569000"
  },
  {
    "text": "starting with Server 2019 a significant work went into making server 19 work",
    "start": "1575229",
    "end": "1581979"
  },
  {
    "text": "with kubernetes and so if you have some dependencies there on 2016 that's where either standalone servers or alternative",
    "start": "1581979",
    "end": "1588580"
  },
  {
    "text": "orchestrators may be an option but we need server 2019 or or version 1809 on",
    "start": "1588580",
    "end": "1594219"
  },
  {
    "text": "the semi-annual channel to be able to support kubernetes or newer which is on the node selector piece always something",
    "start": "1594219",
    "end": "1601149"
  },
  {
    "text": "to keep in mind there's a concept in the Linux world called privileged containers which is where a container has I don't want say",
    "start": "1601149",
    "end": "1608230"
  },
  {
    "text": "carte blanche to the host but significant access to the host what it's able to do there they're special and",
    "start": "1608230",
    "end": "1613360"
  },
  {
    "text": "they run in a much higher privileged mode and so these are good for some Damons and agents and other use cases",
    "start": "1613360",
    "end": "1619210"
  },
  {
    "text": "and are a common in the linux world but are we are unable to do that in the",
    "start": "1619210",
    "end": "1624549"
  },
  {
    "text": "windows world the way that Windows containers are put together we don't have the ability for a privileged container and so that limitation pops up",
    "start": "1624549",
    "end": "1631059"
  },
  {
    "text": "in various times I wanted to kind of mention that's if you're wanting to have a Windows container that is somehow",
    "start": "1631059",
    "end": "1636700"
  },
  {
    "text": "manipulating the Windows registry of the host that's going to be blocked there's not a way to be able to do that",
    "start": "1636700",
    "end": "1642909"
  },
  {
    "text": "you could be able to edit the registry inside of the container but we we have more of a separation and more of a",
    "start": "1642909",
    "end": "1647950"
  },
  {
    "text": "security boundary there than what we have in Linux we touched on the Linux masterpieces and then finally when",
    "start": "1647950",
    "end": "1654429"
  },
  {
    "text": "you're creating pods and you're setting resource constraints or allocating resources rather you really need to bump",
    "start": "1654429",
    "end": "1661570"
  },
  {
    "text": "up the minimums in which you may be used to in the Linux world I'm an eye is image running on Windows server core",
    "start": "1661570",
    "end": "1666909"
  },
  {
    "text": "which is a large you know 5 gigabytes sized image is going to require much",
    "start": "1666909",
    "end": "1672250"
  },
  {
    "text": "more resources than an engine X container running in Linux that may be 10 Meg's for example so you will need",
    "start": "1672250",
    "end": "1678220"
  },
  {
    "text": "more resources when we go to deploy windows containers they're simply heavier based on the other components of",
    "start": "1678220",
    "end": "1683740"
  },
  {
    "text": "Windows that are running inside of that container they need more resources they're something to keep in mind it's very easy to accidentally starve pods by",
    "start": "1683740",
    "end": "1691600"
  },
  {
    "text": "not allocating up resources when you're running those those pods for a little",
    "start": "1691600",
    "end": "1696640"
  },
  {
    "text": "bit of history we mentioned starting way back in 2016 with the initial container support and 2017 that container network",
    "start": "1696640",
    "end": "1704799"
  },
  {
    "text": "interface work began around CNI to get the networking going with kubernetes and then work continued throughout 2017 and",
    "start": "1704799",
    "end": "1711130"
  },
  {
    "text": "2018 culminating in a release back in March of 2019 this was the stable release that",
    "start": "1711130",
    "end": "1717789"
  },
  {
    "text": "initially brought support for Windows Server and did the kubernetes project so starting last March we got the thumbs up",
    "start": "1717789",
    "end": "1724480"
  },
  {
    "text": "kind of the ga release there says we're stable and we're good to go each subsequent release after 1.14 the",
    "start": "1724480",
    "end": "1730600"
  },
  {
    "text": "the groups that cig windows microsoft docker at vmware at a variety of companies that are involved in the",
    "start": "1730600",
    "end": "1736509"
  },
  {
    "text": "I have worked to add feature after feature into window server and so I went",
    "start": "1736509",
    "end": "1742419"
  },
  {
    "text": "out in 15 we got outlet support for GM SAS will talk about why those are important in a moment I'm into in 1.16",
    "start": "1742419",
    "end": "1747849"
  },
  {
    "text": "we started an initial support for CSI and some support around storage and then when that 17 started looking at how we",
    "start": "1747849",
    "end": "1753940"
  },
  {
    "text": "can change the the user that we're running inside of the container with this run as username flag that's",
    "start": "1753940",
    "end": "1759489"
  },
  {
    "text": "available so we'll see additional because features this year with 1.18 one at 19 etc as they come down the path but",
    "start": "1759489",
    "end": "1766929"
  },
  {
    "text": "know that there's active work going on the work is just beginning around Windows Server and kubernetes it's not completed so there'll be new features in",
    "start": "1766929",
    "end": "1773979"
  },
  {
    "text": "each release to look forward to and to expand the capabilities of the platform for for.net based applications so to get",
    "start": "1773979",
    "end": "1782109"
  },
  {
    "start": "1782000",
    "end": "1782000"
  },
  {
    "text": "into different considerations the the very first thing that we often run across right is identity so we've containerized an app we go to run it and",
    "start": "1782109",
    "end": "1788559"
  },
  {
    "text": "boom we've got a problem it's we're having issues with identity and so we always suggest that folks take a take take a good look at how",
    "start": "1788559",
    "end": "1795699"
  },
  {
    "text": "applications work beforehand to understand how they work you know they're using basic forms based",
    "start": "1795699",
    "end": "1801519"
  },
  {
    "text": "integrated windows office and like Kerberos or ntlm and then also looking at what are the resources the app needs",
    "start": "1801519",
    "end": "1807459"
  },
  {
    "text": "to talk to can the you know there's certain databases file shares MSM queues that an app needs to work with you know",
    "start": "1807459",
    "end": "1813489"
  },
  {
    "text": "we need to know that ahead of time if we're utilizing integrated windows off we're going to need some additional considerations as well and so what we",
    "start": "1813489",
    "end": "1820299"
  },
  {
    "text": "find is that the vast majority of apps over the past 10 years have been written with integrated windows off IWA has been",
    "start": "1820299",
    "end": "1827319"
  },
  {
    "text": "very simple from a developer's perspective I clicked a little box and voila I have authentication in my app very",
    "start": "1827319",
    "end": "1832479"
  },
  {
    "text": "convenient and the way that that magic worked was because I was typically running on a web server that was in",
    "start": "1832479",
    "end": "1838690"
  },
  {
    "text": "close coordination with an Active Directory domain controller so that servers what we call domain joint and so",
    "start": "1838690",
    "end": "1845649"
  },
  {
    "text": "then when that application ran I could have the web server and the host itself talked to Active Directory and handle",
    "start": "1845649",
    "end": "1852309"
  },
  {
    "text": "that user authentication for me outside of my app code very convenient and very easy to operate in the container world",
    "start": "1852309",
    "end": "1859059"
  },
  {
    "text": "we do not domain join every single container or every single pod to a domain controller instead the pattern is",
    "start": "1859059",
    "end": "1866349"
  },
  {
    "text": "that we domain join each of the host nodes that were running on so if I have ten Windows Server 1909",
    "start": "1866349",
    "end": "1873470"
  },
  {
    "text": "worker notes I would domain join each of those to a domain controller and then I would then I would then utilize an",
    "start": "1873470",
    "end": "1879799"
  },
  {
    "text": "Active Directory component so we've got an Active Directory group managed service account this is a this is an ad",
    "start": "1879799",
    "end": "1885739"
  },
  {
    "text": "thing it's not a container thing it's a component that's been an ad for several releases and it's essentially a password",
    "start": "1885739",
    "end": "1892279"
  },
  {
    "text": "list service account that I can load into a container and then assign permissions for that across my network",
    "start": "1892279",
    "end": "1897580"
  },
  {
    "text": "so the way this works is that if I'm running a cube cuddle apply to go create a pod I pass in a credential spec which",
    "start": "1897580",
    "end": "1905059"
  },
  {
    "start": "1901000",
    "end": "1901000"
  },
  {
    "text": "is simply a JSON representation of of that service account and then on the",
    "start": "1905059",
    "end": "1911570"
  },
  {
    "text": "server that it lands on and that that the pot is being scheduled the hosts compute service of Windows picks that up and says hey this is this is a special",
    "start": "1911570",
    "end": "1918259"
  },
  {
    "text": "pot it's not kind of a regular identity I actually need to go and send a",
    "start": "1918259",
    "end": "1923659"
  },
  {
    "text": "credential spec to the container credential guard another component of Windows so that it can talk to Active",
    "start": "1923659",
    "end": "1928759"
  },
  {
    "text": "Directory to generate and maintain Kerberos tickets then I'll create the container and I'll set the identity to",
    "start": "1928759",
    "end": "1935479"
  },
  {
    "text": "that specific service account so that anytime that container calls out of the container to it database or a file share",
    "start": "1935479",
    "end": "1942080"
  },
  {
    "text": "it'll then utilize that service credential not the default identity that's there so this is something that's",
    "start": "1942080",
    "end": "1947149"
  },
  {
    "text": "I like to talk about first because it's it's almost always the first thing we run into and in many organizations that",
    "start": "1947149",
    "end": "1952789"
  },
  {
    "text": "means coordination with your Active Directory team talking with that identity team around hey we're gonna",
    "start": "1952789",
    "end": "1958190"
  },
  {
    "text": "need these service accounts we need to add these permissions and grant these permissions to those service accounts",
    "start": "1958190",
    "end": "1963379"
  },
  {
    "text": "typically some legwork that needs to be done to be able to enable kubernetes to work with integrated windows off based",
    "start": "1963379",
    "end": "1970099"
  },
  {
    "text": "applications inside of kubernetes now we have a custom resource definition a CRD",
    "start": "1970099",
    "end": "1976820"
  },
  {
    "start": "1974000",
    "end": "1974000"
  },
  {
    "text": "around GMS a credential spec where were able to pass in information and around our domain around the agenda the sit for",
    "start": "1976820",
    "end": "1983599"
  },
  {
    "text": "the account the domain name NetBIOS standard ad information that we can pass in to kubernetes and so when we create a",
    "start": "1983599",
    "end": "1989479"
  },
  {
    "text": "pod this will be loaded in and that identity will be then utilized as part of kubernetes so this feature is gone",
    "start": "1989479",
    "end": "1995720"
  },
  {
    "text": "from alpha to beta over the past six months and excited to see this reach stability here shortly but a very key",
    "start": "1995720",
    "end": "2002409"
  },
  {
    "text": "foundational tech when were working with windows containers the next piece that comes up",
    "start": "2002409",
    "end": "2007420"
  },
  {
    "start": "2007000",
    "end": "2007000"
  },
  {
    "text": "is oftentimes we may hit a problem or we want to keep tabs on what's happening inside of the container for Linux naps",
    "start": "2007420",
    "end": "2013240"
  },
  {
    "text": "these typically log to standard out so if I'm meeting to go in and see what's happening in the container I can go do",
    "start": "2013240",
    "end": "2019240"
  },
  {
    "text": "run a you know docker logs commands I can run an interactive session with my container in time some like docker run",
    "start": "2019240",
    "end": "2025300"
  },
  {
    "text": "or cube cuddle logs any of these commands are really built to take the standard out of the container and pass",
    "start": "2025300",
    "end": "2030550"
  },
  {
    "text": "it through back to me as the user so I can see what's going on alternatively in the windows world we windows apps don't",
    "start": "2030550",
    "end": "2036790"
  },
  {
    "text": "log to a standard outs they typically go to the event tracing for Windows CTW",
    "start": "2036790",
    "end": "2042250"
  },
  {
    "text": "they go to event logs they go to custom files they go to different spots and so if you've ever run docker logs on an on",
    "start": "2042250",
    "end": "2048040"
  },
  {
    "text": "a Windows container it's pretty anti-climatic there's not a whole lot that's there because there's nothing being sent out to the standardout it's",
    "start": "2048040",
    "end": "2054220"
  },
  {
    "text": "being sent to different areas inside of that container so to address this Microsoft spent some time of the past",
    "start": "2054220",
    "end": "2061419"
  },
  {
    "text": "year doing some great work around a tool called this log monitor tool so this is a small binary that's going to help us",
    "start": "2061420",
    "end": "2066970"
  },
  {
    "start": "2065000",
    "end": "2065000"
  },
  {
    "text": "get the same experience that we have on Linux where we go application to standard out and then have our container",
    "start": "2066970",
    "end": "2072070"
  },
  {
    "text": "runtime pick those up with docker logs or cube cuddle logs we can bring a similar experience to Windows so in this",
    "start": "2072070",
    "end": "2078669"
  },
  {
    "text": "example on the right we have a Windows container our app and services are writing in these metrics locations we",
    "start": "2078670",
    "end": "2084550"
  },
  {
    "text": "have a lot of monitor binary that's reading those passing them to standard outs and then the runtime is then able to run docker logs and cube coda logs to",
    "start": "2084550",
    "end": "2091389"
  },
  {
    "text": "be able to get that information so very handy and very useful and and good to put in to adopt this earlier rather than",
    "start": "2091390",
    "end": "2097750"
  },
  {
    "text": "later it's when you're trying to debug an application that's not working in that container having this log monitor",
    "start": "2097750",
    "end": "2104410"
  },
  {
    "text": "tool can make a big difference because otherwise you're typically doing a docker exec or a cube cuddle exec session inside of the container and",
    "start": "2104410",
    "end": "2110650"
  },
  {
    "text": "trying to parse through xml or error codes and an exec session and it's quite painful this makes life a little bit",
    "start": "2110650",
    "end": "2117520"
  },
  {
    "text": "easier easier and allows you to integrate into third-party logging tools",
    "start": "2117520",
    "end": "2122590"
  },
  {
    "text": "that are built to on that standard out of the container to get their information there so very useful it's available on github it's open source you",
    "start": "2122590",
    "end": "2129520"
  },
  {
    "start": "2129000",
    "end": "2129000"
  },
  {
    "text": "can grab it and they've got several kubernetes features on the roadmap that are coming for things like config maps like sidecar pattern",
    "start": "2129520",
    "end": "2136870"
  },
  {
    "text": "lots of goodies that are coming down the line there but with that thank you for",
    "start": "2136870",
    "end": "2142060"
  },
  {
    "text": "sitting through all those slides want to jump into some demos in and make this a little bill for folks as well so what",
    "start": "2142060",
    "end": "2148150"
  },
  {
    "text": "I've got here um is that I have a Windows Server 2008 virtual machine I",
    "start": "2148150",
    "end": "2153310"
  },
  {
    "text": "went ahead and just pre-recorded this so I didn't break anything it's running here is Windows Server 2008 in a virtual",
    "start": "2153310",
    "end": "2159010"
  },
  {
    "text": "machine this is a web server running is is 7 to be specific and also running on",
    "start": "2159010",
    "end": "2165070"
  },
  {
    "text": "this site is something called the jobsite starter kit this is about the oldest set I could find on the internet it's a dotnet 2.0 app that came off the",
    "start": "2165070",
    "end": "2172180"
  },
  {
    "text": "CodePlex site which is long long gone kind of a pre github thing it's a two-tier application talking to a",
    "start": "2172180",
    "end": "2178750"
  },
  {
    "text": "server to sequel server 2008 database I can log in with a username and password and from there I can I can post resumes",
    "start": "2178750",
    "end": "2186400"
  },
  {
    "text": "I can look at jobs I can set a company profile think of this is a an incredibly low fidelity LinkedIn but a very old",
    "start": "2186400",
    "end": "2193480"
  },
  {
    "text": "LDAP 10 plus years old but it's simulating a line of business app that may be running in your organization",
    "start": "2193480",
    "end": "2198790"
  },
  {
    "text": "today so to get more information about the app and how it's running I often like going to see the is manager to get",
    "start": "2198790",
    "end": "2204820"
  },
  {
    "text": "information about the app you know how are these app pools configured how many apples are there I can see I've got a",
    "start": "2204820",
    "end": "2210340"
  },
  {
    "text": "jobs at pool so that's running there with one app it's running net to oh and we've got a service account and that",
    "start": "2210340",
    "end": "2216610"
  },
  {
    "text": "pull identity there a job stash SVC um so that's good information to know when",
    "start": "2216610",
    "end": "2222670"
  },
  {
    "text": "we go to sites we see we've got our little job site here we can go in and see different configuration different",
    "start": "2222670",
    "end": "2228090"
  },
  {
    "text": "user authentication can be looked at here it's any kind of SSL you know bindings we can come in and see the",
    "start": "2228090",
    "end": "2234190"
  },
  {
    "text": "source code that's available here with our master pages and our aspx pages that's all here on the local disk now",
    "start": "2234190",
    "end": "2240130"
  },
  {
    "text": "we're gonna copy all of these files up I'm gonna send them over to a machine that has a container runtime that has",
    "start": "2240130",
    "end": "2246490"
  },
  {
    "text": "docker installed and so we're gonna move this on from a server Oh 8 VM over to a server 2019 VM and so we have all that",
    "start": "2246490",
    "end": "2253990"
  },
  {
    "text": "exact same code right here brought it over as really a starting point from",
    "start": "2253990",
    "end": "2259270"
  },
  {
    "text": "here we're going to open up visual studio code or your editor of choice for that application to start building out a",
    "start": "2259270",
    "end": "2265120"
  },
  {
    "text": "docker file to create a container from that code so we can see there",
    "start": "2265120",
    "end": "2270200"
  },
  {
    "text": "creation codes here we'll go and open up on that dockerfile and kind of talk through the pieces of",
    "start": "2270200",
    "end": "2277040"
  },
  {
    "text": "how it was fit together so up at the top we escape we have we set a new escape character makes it easier for windows",
    "start": "2277040",
    "end": "2282950"
  },
  {
    "text": "because the slash is a newline character in Linux it gets kind of wonky this little line one isn't a really nice",
    "start": "2282950",
    "end": "2289250"
  },
  {
    "text": "piece there to allow it for Windows we then use a base image running on an LTS C 2019 based image of Windows server",
    "start": "2289250",
    "end": "2296839"
  },
  {
    "text": "core and this is actually an asp net image so Microsoft hasn't not only the raw base images but they build some",
    "start": "2296839",
    "end": "2302510"
  },
  {
    "text": "derivative images on top that includes a default website so we remove that we come in and configure any OS level",
    "start": "2302510",
    "end": "2309200"
  },
  {
    "text": "operating system features that we need so in the web world this would be things like directory browsing you know HTTP",
    "start": "2309200",
    "end": "2315680"
  },
  {
    "text": "errors I sappy is the common one static content very common pieces that we would",
    "start": "2315680",
    "end": "2321290"
  },
  {
    "text": "need for our application to run from an OS level so we run that with the standard powershell commandlets now",
    "start": "2321290",
    "end": "2326990"
  },
  {
    "text": "containers come in with all the ports shut down so we have to expose the ports that we're going to use for that web",
    "start": "2326990",
    "end": "2333619"
  },
  {
    "text": "application in this case we've got three different ports we're going to open up here and then we start using standard",
    "start": "2333619",
    "end": "2339849"
  },
  {
    "text": "our shell command let's for web administration to configure an application pool so we create the app",
    "start": "2339849",
    "end": "2345230"
  },
  {
    "text": "pool we set the identity there at a local system needs to be local system or network service to be able to use the",
    "start": "2345230",
    "end": "2351920"
  },
  {
    "text": "GMs a we then copy in the physical paths of all of our files if we needed if we",
    "start": "2351920",
    "end": "2357530"
  },
  {
    "text": "wanted to handle SSL in the container we can copy certificates we can set ackles so that is can access all those files",
    "start": "2357530",
    "end": "2363980"
  },
  {
    "text": "and then we go when we initialize that website so we set up an ISO sites who set up bindings any certs and do any of",
    "start": "2363980",
    "end": "2371540"
  },
  {
    "text": "the other configuration that we need for iis they're typically we could stop there but what I like to do and a lot of",
    "start": "2371540",
    "end": "2377300"
  },
  {
    "text": "images especially if you're debugging is to enable remote administration for is these are a few extra lines that are",
    "start": "2377300",
    "end": "2384230"
  },
  {
    "text": "going to allow us to use that is manager GUI against a container makes it a heck",
    "start": "2384230",
    "end": "2389300"
  },
  {
    "text": "of a lot easier to figure out what's going wrong or what's functioning there finally we'll add support that log monitor we just talked about where we",
    "start": "2389300",
    "end": "2395869"
  },
  {
    "text": "download a binary we add it into the container we set a config object to say",
    "start": "2395869",
    "end": "2401060"
  },
  {
    "text": "which areas of the container we want to and then we set a shell in an entry point I said the blood monitor started",
    "start": "2401060",
    "end": "2408070"
  },
  {
    "text": "as part of that IAS process there so that that's a standard kind of rundown of what we do with a docker file to then",
    "start": "2408070",
    "end": "2415060"
  },
  {
    "text": "be able to build and run on that container so to start off with here I want to run a couple of containers",
    "start": "2415060",
    "end": "2421390"
  },
  {
    "text": "before we get to our custom one to show kind of what that experience looks like for Windows so we're gonna set a couple",
    "start": "2421390",
    "end": "2426400"
  },
  {
    "text": "of variables really just for some naming conventions there and then we're gonna go and we're gonna make sure we don't",
    "start": "2426400",
    "end": "2432700"
  },
  {
    "text": "have anything running here but then we'll go and run a standard just is basic image this is oftentimes a base",
    "start": "2432700",
    "end": "2439359"
  },
  {
    "text": "image that we may use if we have a small website we want to add in we can start and build right on top of that so we're",
    "start": "2439359",
    "end": "2445630"
  },
  {
    "text": "going to run the container with is with an open Chrome and we'll go ahead and",
    "start": "2445630",
    "end": "2450820"
  },
  {
    "text": "tail out the container logs so we can see what's coming out of that default experience there we select those run",
    "start": "2450820",
    "end": "2458140"
  },
  {
    "text": "them and in here locally on this machine we went an is container we pop open Chrome and we see is not running locally",
    "start": "2458140",
    "end": "2465670"
  },
  {
    "text": "but running in a container I can refresh this a couple times generate some traffic on the command we see nothing",
    "start": "2465670",
    "end": "2471790"
  },
  {
    "text": "coming through log wise you know there's nothing there nothing to be used that's very typical for windows containers",
    "start": "2471790",
    "end": "2477070"
  },
  {
    "text": "based on kind of how that logging experience works very typical and what we expect to see anytime we would be",
    "start": "2477070",
    "end": "2483369"
  },
  {
    "text": "running so like docker container logs or cube cuddle logs nothing really to see there so that's one of those kind of",
    "start": "2483369",
    "end": "2492280"
  },
  {
    "text": "gaps that the log monitor tool is going to help us with when we get into operating our own container so I'm just",
    "start": "2492280",
    "end": "2498280"
  },
  {
    "text": "gonna drop a note here removing this container in the future and then it's on to building the docker file that we",
    "start": "2498280",
    "end": "2504640"
  },
  {
    "text": "showed a second ago so same command as we would in Linux docker image build we give it a tag with a name and we say",
    "start": "2504640",
    "end": "2510640"
  },
  {
    "text": "where's the docker file so go out and build and boom it's been cached but usually this takes a few minutes typically longer than a Linux container",
    "start": "2510640",
    "end": "2517300"
  },
  {
    "text": "that we've built that image and now we're ready to run that image so we're going to do a very similar process here",
    "start": "2517300",
    "end": "2523380"
  },
  {
    "text": "where we run a container and we pop it open in chrome so we can see that running locally and immediately we see a",
    "start": "2523380",
    "end": "2529840"
  },
  {
    "text": "problem here log in failed for user anti-authority so the container is trying to go out and talk to the",
    "start": "2529840",
    "end": "2535030"
  },
  {
    "text": "database you know we didn't change the connection it was set to utilize integrated windows often an Apple identity but the database",
    "start": "2535030",
    "end": "2542170"
  },
  {
    "text": "said no who this anonymous user is it's not going to give them any results back and so we have this user authentication",
    "start": "2542170",
    "end": "2547210"
  },
  {
    "text": "issue that's popping up a very common in any kind of application that may be calling out to Active Directory secured",
    "start": "2547210",
    "end": "2553720"
  },
  {
    "text": "resources so what we do is inside of Active Directory we'd come in and generate a new GMs a we do that with a",
    "start": "2553720",
    "end": "2559780"
  },
  {
    "text": "simple power or shell command let where we give it a Adina's hostname some service principal names etc then we run",
    "start": "2559780",
    "end": "2565510"
  },
  {
    "text": "in an install command on those servers and now that account would be created an ad I pre created it for time we then",
    "start": "2565510",
    "end": "2572470"
  },
  {
    "text": "create a credential spec file which is a command lit that essentially talks to Active Directory and then formats a JSON",
    "start": "2572470",
    "end": "2578470"
  },
  {
    "text": "file with some information for us to really the only operation not considered super secure it's just simply reading",
    "start": "2578470",
    "end": "2585700"
  },
  {
    "text": "against Active Directory so we see information around the domain a lot of those same information that we would",
    "start": "2585700",
    "end": "2591010"
  },
  {
    "text": "then take and plug into that see Rd for a GMS a credential spec that we saw a second ago in the presentation this",
    "start": "2591010",
    "end": "2598780"
  },
  {
    "text": "point we have a GMS a in Active Directory we have a credential spec file and now we can go and run a container",
    "start": "2598780",
    "end": "2603940"
  },
  {
    "text": "with that credential specs we're going to bring the two together so we're going to delete the exist in that pre-running",
    "start": "2603940",
    "end": "2610330"
  },
  {
    "text": "container we're gonna run the new one but this time passing in that GMs a I mean at that point the container when it",
    "start": "2610330",
    "end": "2618040"
  },
  {
    "text": "calls out of the container is not going to use that anonymous ID but instead it's gonna focus on that Active",
    "start": "2618040",
    "end": "2624160"
  },
  {
    "text": "Directory service account for use there and you'll see here in a moment we'll see the exact same website we saw",
    "start": "2624160",
    "end": "2629770"
  },
  {
    "text": "earlier should look and feel similarly it's the exact same source code simply",
    "start": "2629770",
    "end": "2634900"
  },
  {
    "text": "running in a container this time rather than a VM so I go and I can even login to that database where my user",
    "start": "2634900",
    "end": "2640780"
  },
  {
    "text": "credential pieces are then the application itself is talking to the database and then enforcing kind of what",
    "start": "2640780",
    "end": "2647710"
  },
  {
    "text": "I'm allowed to do there so I can go and post jobs I can search resumes all that same experience there",
    "start": "2647710",
    "end": "2652980"
  },
  {
    "text": "the last piece to to kind of mention here and show I'm is around how we can",
    "start": "2652980",
    "end": "2658180"
  },
  {
    "text": "kind of work from a debugging perspective to identify if or when we had issues from the containerization",
    "start": "2658180",
    "end": "2664240"
  },
  {
    "text": "perspective so the first piece we do is as we can look at the logs and so immediately you see that it's not on",
    "start": "2664240",
    "end": "2670420"
  },
  {
    "text": "that is based image earlier there was just crickets there was and there was nothing coming through there and but on this",
    "start": "2670420",
    "end": "2676210"
  },
  {
    "text": "image because we're using that log monitor tool we see the worldwide publishing service entered the running States and we're seeing information",
    "start": "2676210",
    "end": "2682480"
  },
  {
    "text": "coming back from is directly here in that docker logs command so cube catalogs to be able to pick this up and",
    "start": "2682480",
    "end": "2688870"
  },
  {
    "text": "be able to let us know what's happening inside of that container we wouldn't have to go in and you know do an exact",
    "start": "2688870",
    "end": "2695560"
  },
  {
    "text": "session to be able to to see some information there so I just want to show an example that working in the real",
    "start": "2695560",
    "end": "2702610"
  },
  {
    "text": "world next we're going to I mention that we've enabled remote management here and so I'm opening up is manager on the host",
    "start": "2702610",
    "end": "2710020"
  },
  {
    "text": "machine I can go in and connect to a server I'll give it the IP address for that container then I give it the",
    "start": "2710020",
    "end": "2717100"
  },
  {
    "text": "username and password of the account I want to connect with and now I able to use this full rich GUI experience to",
    "start": "2717100",
    "end": "2723900"
  },
  {
    "text": "introspect how the is is configured inside of that container this is can be",
    "start": "2723900",
    "end": "2729240"
  },
  {
    "text": "incredibly valuable especially if you have dozens of app pools dozens of sites lots of things going on inside of the",
    "start": "2729240",
    "end": "2735490"
  },
  {
    "text": "container a lot easier and utilizing this than digging through kind of alternative options there so we look at",
    "start": "2735490",
    "end": "2742180"
  },
  {
    "text": "bindings different settings authentication everything you would expect to be able to do inside of is we can do here as well so at this point",
    "start": "2742180",
    "end": "2749730"
  },
  {
    "text": "we've looked at the application the last thing to do is we'll go and we can log into a registry a container registry",
    "start": "2749730",
    "end": "2755290"
  },
  {
    "text": "push this image into the registry and then we're ready to go from a kubernetes perspective we can add that image into",
    "start": "2755290",
    "end": "2761680"
  },
  {
    "text": "our gamal a cube cut' will apply that to a cluster and then this image will go and be scheduled on to a node so just to",
    "start": "2761680",
    "end": "2769600"
  },
  {
    "text": "recap we started in a virtual machine running Windows Server 2008 took that application code out on the Windows",
    "start": "2769600",
    "end": "2775210"
  },
  {
    "text": "Server 2019 built an image added is from management log monitoring and it was",
    "start": "2775210",
    "end": "2781060"
  },
  {
    "text": "able to push that into you know another a into a registry there so hopefully that's hopefully that's a kind of",
    "start": "2781060",
    "end": "2787150"
  },
  {
    "text": "showing kind of the workflow that we often go through when we're looking at container izing those kinds of applications to mention to close up on",
    "start": "2787150",
    "end": "2795160"
  },
  {
    "start": "2788000",
    "end": "2788000"
  },
  {
    "text": "on when other considerations persistent storage is is the other big one in the room that we often see with legacy apps",
    "start": "2795160",
    "end": "2801250"
  },
  {
    "text": "so identifying what kind of app you have for that application is it persistent is it okay if it goes",
    "start": "2801250",
    "end": "2807130"
  },
  {
    "text": "away such as a cache I'm how large we talking 10 Maggie's are we talking 10 gigs are we talk about databases file",
    "start": "2807130",
    "end": "2814300"
  },
  {
    "text": "shares local disk knowing what the application interacts with is critical and this can often be hard for app 4 or",
    "start": "2814300",
    "end": "2820990"
  },
  {
    "text": "a line of business app that was built eight years ago the dev team is gone it's used by only five people internally but you can't get rid of it yet it may",
    "start": "2820990",
    "end": "2827950"
  },
  {
    "text": "take a little bit of time to introspect and figure out how that's working databases can often be easier because we",
    "start": "2827950",
    "end": "2833380"
  },
  {
    "text": "can use the same connections sharing information we can typically leave databases where they are with DBS we can",
    "start": "2833380",
    "end": "2838660"
  },
  {
    "text": "containerize them but I often prefer to leave them on the VM that they're at today container is the app and then just call call out to the DB / connection",
    "start": "2838660",
    "end": "2846130"
  },
  {
    "text": "strings it's typically easier than moving the app and the database all at the same time you can kind of phase it",
    "start": "2846130",
    "end": "2851920"
  },
  {
    "text": "out since are the values for like passwords connection string certificates use cube secrets for that another kind",
    "start": "2851920",
    "end": "2858970"
  },
  {
    "start": "2855000",
    "end": "2855000"
  },
  {
    "text": "of standard best practice for kubernetes gives nice are back enabled separation so that the right user can see the",
    "start": "2858970",
    "end": "2865839"
  },
  {
    "text": "rights sensitive information and it doesn't get mocked up down in your container there so a very mature way of handling those",
    "start": "2865839",
    "end": "2871690"
  },
  {
    "text": "secrets in the kubernetes world when we're talking about storage for Windows it's a little bit different than Linux so in the in the Linux world CSI the",
    "start": "2871690",
    "end": "2879790"
  },
  {
    "text": "container storage interface is much further along that's really becoming the best practice of how to do things in the",
    "start": "2879790",
    "end": "2884980"
  },
  {
    "text": "Linux world on Windows flex volume typically with SMB and I scuzzy are the",
    "start": "2884980",
    "end": "2890079"
  },
  {
    "text": "ways to go today I'm where those are entry plugins and so we're hoping over the next year that this story will improve we've got a lot",
    "start": "2890079",
    "end": "2896920"
  },
  {
    "text": "of great work happening with cig windows around external provisioner there's around kind of initial support for CSI",
    "start": "2896920",
    "end": "2903150"
  },
  {
    "text": "it's coming soon but again we needed those we needed privileged containers for CSI and so we're looking at",
    "start": "2903150",
    "end": "2909040"
  },
  {
    "text": "alternative since Windows don't have that available there today so if you're working today SMB and I scuzzy or your",
    "start": "2909040",
    "end": "2914650"
  },
  {
    "text": "best bet with Flex volume or utilizing one of the cloud based providers if you're running in a public cloud already",
    "start": "2914650",
    "end": "2919750"
  },
  {
    "text": "those are also good options so to summarize container izing legacy apps is",
    "start": "2919750",
    "end": "2925390"
  },
  {
    "start": "2925000",
    "end": "2925000"
  },
  {
    "text": "a great way to gain agility and flexibility and be able to run older applications just like you would a",
    "start": "2925390",
    "end": "2930910"
  },
  {
    "text": "brand-new micro servers up your building from scratch I definitely recommend that you start small and develop muscles",
    "start": "2930910",
    "end": "2937240"
  },
  {
    "text": "around kubernetes first we're is incredibly powerful but there is a learning curve and so everybody always",
    "start": "2937240",
    "end": "2943930"
  },
  {
    "text": "wants to go out and find the biggest most mission-critical you know gnarly application in the whole organization",
    "start": "2943930",
    "end": "2949060"
  },
  {
    "text": "and start there I'd really recommend more of a crawl walk run approach where we gain we choose some applications that",
    "start": "2949060",
    "end": "2954609"
  },
  {
    "text": "are are not hello world but but ones that we can learn and grow on to solidify our understanding of kubernetes",
    "start": "2954609",
    "end": "2961930"
  },
  {
    "text": "and of Windows Server and then go out from there and then finally consider things early so think about the identity",
    "start": "2961930",
    "end": "2967990"
  },
  {
    "text": "needs you're going to have for that app think of the dependencies you have across other resources or in your network from a storage perspective from",
    "start": "2967990",
    "end": "2974560"
  },
  {
    "text": "a security perspective from a monitoring perspective identify those early so that you're not right in the middle of",
    "start": "2974560",
    "end": "2979780"
  },
  {
    "text": "container rising and thrashing trying to find the things that you need there but taking these into accounts we are just",
    "start": "2979780",
    "end": "2986770"
  },
  {
    "text": "very excited that kubernetes now it enables us so much more power and flexibility for those applications that",
    "start": "2986770",
    "end": "2992470"
  },
  {
    "text": "may have been built five or ten years ago to run side-by-side with an app we built you know last week the week before",
    "start": "2992470",
    "end": "3000260"
  },
  {
    "text": "additional resources check out cig windows this is the special interest group and the kubernetes community where",
    "start": "3000260",
    "end": "3006000"
  },
  {
    "text": "a lot of this work happens they have a full Kanban board available we can go in and see the features that are coming down down the pipe including some",
    "start": "3006000",
    "end": "3012480"
  },
  {
    "text": "documentation here on Microsoft and kubernetes as well finally that we have a full white paper available that was",
    "start": "3012480",
    "end": "3018750"
  },
  {
    "text": "put together from the team at docker when we're there around delivering safer amps with with docker Enterprise in",
    "start": "3018750",
    "end": "3024150"
  },
  {
    "text": "Windows Server so it really targets this kind of scenario of legacy windows-based applications there and with that I just",
    "start": "3024150",
    "end": "3030060"
  },
  {
    "text": "want to thank you all for joining us today I know it's been a whirlwind tour through Windows Server and kubernetes",
    "start": "3030060",
    "end": "3035100"
  },
  {
    "text": "but we do have a few more minutes and so Randy would love to see if there were some questions that we can speak towards for the remaining time hey Steven thanks",
    "start": "3035100",
    "end": "3043530"
  },
  {
    "text": "a ton for a great presentation super awesome stuff yeah so if you've got",
    "start": "3043530",
    "end": "3049080"
  },
  {
    "text": "questions just go ahead and four minutes",
    "start": "3049080",
    "end": "3057030"
  },
  {
    "text": "or three or four minutes to run through some I think we've got a good 12",
    "start": "3057030",
    "end": "3064170"
  },
  {
    "text": "questions at the moment so let me start off with a couple of softballs though people you know what's the best way for",
    "start": "3064170",
    "end": "3070290"
  },
  {
    "text": "people interested in you know windows and I'm kubernetes to kind of keep up with what's going on in kubernetes with them",
    "start": "3070290",
    "end": "3076410"
  },
  {
    "text": "you know what features are showing off that sort of thing yeah great question of some thing that I near dear to my",
    "start": "3076410",
    "end": "3082260"
  },
  {
    "text": "heart because I I'm always trying to keep up to date at the best I can as well I sent a link to that that Kanban",
    "start": "3082260",
    "end": "3088680"
  },
  {
    "text": "board here this is Patrick laying at Microsoft and the rest of the sig windows team do a really great job of",
    "start": "3088680",
    "end": "3094140"
  },
  {
    "start": "3090000",
    "end": "3090000"
  },
  {
    "text": "keeping an entire print planning board of what's being worked on win so you can see the whole backlog of here's all the",
    "start": "3094140",
    "end": "3101280"
  },
  {
    "text": "features we'd love to get into Windows and kubernetes but then they divide those out based on release so I can see you know for the release 1.18 I can look",
    "start": "3101280",
    "end": "3108690"
  },
  {
    "text": "and see the exact cards that are being worked on these like features that are being worked on for that release so I know what's coming",
    "start": "3108690",
    "end": "3114360"
  },
  {
    "text": "versus ones that may be slated more in the 1.19 1.20 type timeframe that's a",
    "start": "3114360",
    "end": "3120000"
  },
  {
    "text": "great way to see what's going on additionally from back at cube Con in San Diego back in November there were",
    "start": "3120000",
    "end": "3126300"
  },
  {
    "text": "several sessions that were all based around Windows my Windows Server and kubernetes and those were some great",
    "start": "3126300",
    "end": "3132060"
  },
  {
    "text": "resources to to really get much deeper ties and that what we were able to touch on today but the the cube con events",
    "start": "3132060",
    "end": "3138840"
  },
  {
    "text": "that have started really doing a great job at providing robust coverage of Windows Server as a topic point for a",
    "start": "3138840",
    "end": "3144750"
  },
  {
    "text": "lot of those sessions so those are those are two of the ways that I try to keep sharp they're sig windows also has a",
    "start": "3144750",
    "end": "3150540"
  },
  {
    "text": "weekly or bi-weekly meeting them that they that they host for the community and so they're there's notes there's",
    "start": "3150540",
    "end": "3155880"
  },
  {
    "text": "discussion notes of every one of those meetings there's YouTube recordings of each of those community meetings feel",
    "start": "3155880",
    "end": "3161910"
  },
  {
    "text": "free to jump on those calls in those communities and to use those notes as ways to keep up on what are folks talking about you know what's what's",
    "start": "3161910",
    "end": "3167700"
  },
  {
    "text": "working well where some of the pain points were trying to make better can be a great way to get a snapshot of what's",
    "start": "3167700",
    "end": "3174090"
  },
  {
    "text": "happening in the community and they do a great job of being very transparent and open with all of their work and all of their plans yeah I can I can definitely",
    "start": "3174090",
    "end": "3182150"
  },
  {
    "text": "echo the conference side of things I actually hosted a talk by a gentleman",
    "start": "3182150",
    "end": "3188340"
  },
  {
    "text": "from docker and from Miranda at KU con San Diego and it was just really fantastic and I know this is a lot you",
    "start": "3188340",
    "end": "3194790"
  },
  {
    "text": "know in the hopper for you know for the European Convention coming up another",
    "start": "3194790",
    "end": "3201180"
  },
  {
    "text": "thing too they like for me I don't know how you feel about this but I always like to look at the release notes if I need a low-bandwidth kind of yeah",
    "start": "3201180",
    "end": "3207960"
  },
  {
    "text": "oh that that's a great recommendation Randy so every time there's a major release of kubernetes there's usually an",
    "start": "3207960",
    "end": "3213869"
  },
  {
    "text": "in the last several ones there's been the kind of an entire section of what's new in windows type of things talking about GM essays and storage and so it's",
    "start": "3213869",
    "end": "3221099"
  },
  {
    "text": "a great quick hits way to see what the big major headlines are for during the release great grab your ads cool so next",
    "start": "3221099",
    "end": "3229200"
  },
  {
    "text": "one prometheus is is hugely important to a lot of people from monitoring how does the windows side fit into the you know",
    "start": "3229200",
    "end": "3236220"
  },
  {
    "text": "the world of prom yes of course monitoring is a it's very important so",
    "start": "3236220",
    "end": "3241770"
  },
  {
    "text": "and the prom stack typically we're talking about utilizing the the node exporter project on our linux nodes and",
    "start": "3241770",
    "end": "3247200"
  },
  {
    "text": "so there is not a cheer vert windows version of node exporter mainly cuz",
    "start": "3247200",
    "end": "3252990"
  },
  {
    "text": "windows is built differently and it's a very different architecture and so there is a project on on github called WMI -",
    "start": "3252990",
    "end": "3259740"
  },
  {
    "text": "exporter that's being maintained and so WMI exporter operates in much the same",
    "start": "3259740",
    "end": "3265530"
  },
  {
    "text": "way so it goes and it's scraping metrics out of the the windows management interface WMI and then providing those",
    "start": "3265530",
    "end": "3272579"
  },
  {
    "text": "on to a in endpoints that's sitting there on the server that allows Prometheus to go and scrape that",
    "start": "3272579",
    "end": "3277950"
  },
  {
    "text": "endpoint and bring those right in alongside all the things that it's collecting off of linux nodes",
    "start": "3277950",
    "end": "3283369"
  },
  {
    "text": "furthermore from a graph on a perspective from a dashboarding perspective there's several really nice pre-built dashboards that are there on",
    "start": "3283369",
    "end": "3289829"
  },
  {
    "text": "the things core final ABS refined a gallery some some pre-built dashboards that are available so that you can take",
    "start": "3289829",
    "end": "3295589"
  },
  {
    "text": "that WMI information and then and give you a good starting point of how you want to format and and and look at that",
    "start": "3295589",
    "end": "3301859"
  },
  {
    "text": "information right there with the rest of your cluster information that's there so WMI - exporter i'm it's the main tool",
    "start": "3301859",
    "end": "3309030"
  },
  {
    "text": "that we would use to be able to integrate nicely with a prom stack deploys very similarly to node exporter so nothing's nothing's too different",
    "start": "3309030",
    "end": "3315059"
  },
  {
    "text": "than what we're what we've been doing in linux super cool so open metrics adapter",
    "start": "3315059",
    "end": "3320309"
  },
  {
    "text": "essentially mm-hmm exactly yep cool and then from a compatibility",
    "start": "3320309",
    "end": "3326640"
  },
  {
    "text": "you know standpoint how do you you know manage all the versions stuff and the",
    "start": "3326640",
    "end": "3332970"
  },
  {
    "text": "version numbers and things what's the easiest way to tackle that stuff yeah it's something to people",
    "start": "3332970",
    "end": "3338670"
  },
  {
    "text": "it's a challenge especially for long-lived clusters where your update if you're on some annual Channel and trying",
    "start": "3338670",
    "end": "3344190"
  },
  {
    "text": "to update your lips' clusters every every six months it can be a challenge and so automation is the key is is is",
    "start": "3344190",
    "end": "3350400"
  },
  {
    "text": "key so what we can do in in docker follows themselves on that when we have the from statement we have an image and",
    "start": "3350400",
    "end": "3356160"
  },
  {
    "text": "then we have a colon and a tag and so that tag we don't have to hard code into there we can use a docker file argument",
    "start": "3356160",
    "end": "3363059"
  },
  {
    "text": "to make that docker file dynamic so at docker build time I can have the option to pass in OS version a into there or I",
    "start": "3363059",
    "end": "3371190"
  },
  {
    "text": "could pass an OS version B when it's available or next month OS version C I can make those dynamic conserve you can",
    "start": "3371190",
    "end": "3377279"
  },
  {
    "text": "add CI CD pipelines with those container images that goes a long way for making",
    "start": "3377279",
    "end": "3382529"
  },
  {
    "text": "that easier and then from from a host perspective that gets into you know using whatever kind of information",
    "start": "3382529",
    "end": "3388410"
  },
  {
    "text": "infrastructure automation tools you have either some of the cloud providers some there something like Packer if you're rolling it on your own on prim or",
    "start": "3388410",
    "end": "3394710"
  },
  {
    "text": "choosing a kubernetes platform where a lot of that kind of operational management is taken care of for you",
    "start": "3394710",
    "end": "3400099"
  },
  {
    "text": "those are all some options to be able to make sure you're keeping up up to date on the latest and greatest one of the other easy from those perspective as",
    "start": "3400099",
    "end": "3406529"
  },
  {
    "text": "well you may just choose to just simply in the notion of cattle just if you've",
    "start": "3406529",
    "end": "3411779"
  },
  {
    "text": "got five existing nodes you can just add five new ones cordon off all the old ones drain them and then kind of remove",
    "start": "3411779",
    "end": "3418680"
  },
  {
    "text": "those and have everything flow onto them you notes as well there's different options but it's something to think",
    "start": "3418680",
    "end": "3423809"
  },
  {
    "text": "about because it feels different than what we've historically done with Linux so that's why I'd like to call it out and put so much emphasis on that so",
    "start": "3423809",
    "end": "3430950"
  },
  {
    "text": "automation is king yeah indeed cool well you know unfortunately I think that's",
    "start": "3430950",
    "end": "3436829"
  },
  {
    "text": "about all we've got time for but I'd like to think that ready for for joining us here the recording and slides will be",
    "start": "3436829",
    "end": "3443369"
  },
  {
    "text": "online later there's a link in the chat but you should just get an email if you signed up giving you all the information",
    "start": "3443369",
    "end": "3449670"
  },
  {
    "text": "you need to follow up after and I hope everybody has a fantastic day thanks",
    "start": "3449670",
    "end": "3456000"
  },
  {
    "text": "everybody take care bye",
    "start": "3456000",
    "end": "3460039"
  }
]