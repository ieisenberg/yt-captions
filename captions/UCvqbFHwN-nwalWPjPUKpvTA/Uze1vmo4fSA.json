[
  {
    "text": "[Music]",
    "start": "1000",
    "end": "9760"
  },
  {
    "text": "welcome to this cnc webinar my name is victor gamov and today we're going to",
    "start": "12480",
    "end": "17520"
  },
  {
    "text": "spend some time to learning about technology that's super exciting for me and hopefully you're also a little bit",
    "start": "17520",
    "end": "23119"
  },
  {
    "text": "excited about this technology technology called service mesh today's presentation is about a zero day service mesh what",
    "start": "23119",
    "end": "29679"
  },
  {
    "text": "does it mean what you need to know what the first day when you're starting on boarding with service mesh i'm gonna be talking about the origins of the service",
    "start": "29679",
    "end": "36320"
  },
  {
    "text": "mesh i'm gonna be talking about what kind of problems we're solving there and um you will see the demo and i will be",
    "start": "36320",
    "end": "42399"
  },
  {
    "text": "talking about some of the things that is applicable for specific technology it",
    "start": "42399",
    "end": "47760"
  },
  {
    "text": "used to be so simple people say oh those days when everything",
    "start": "47760",
    "end": "52879"
  },
  {
    "text": "was super simple and we didn't have all this distributed technologies we didn't",
    "start": "52879",
    "end": "58480"
  },
  {
    "text": "have all these kubernetes schmuber natives and all these kind of things everything was much easier we have a one",
    "start": "58480",
    "end": "64080"
  },
  {
    "text": "servlet container or maybe it was application server we pack everything in one war file or if you not super lucky",
    "start": "64080",
    "end": "71439"
  },
  {
    "text": "it was uh er file that will include all the components of this application and",
    "start": "71439",
    "end": "76799"
  },
  {
    "text": "after that uh you know you need to connect to some databases and uh just you know run with it uh but if you think",
    "start": "76799",
    "end": "82479"
  },
  {
    "text": "about this let's take a look on this architecture for a second and think about this that this actually already",
    "start": "82479",
    "end": "87759"
  },
  {
    "text": "was multiple components and multiple things that might go wrong things around connecting this application server to",
    "start": "87759",
    "end": "93840"
  },
  {
    "text": "database if many of you remember the times where application server will provide you with some sort of like a",
    "start": "93840",
    "end": "100640"
  },
  {
    "text": "service discovery known as gndi java naming and directory interface that",
    "start": "100640",
    "end": "106479"
  },
  {
    "text": "allows you to calling api of application server to get allocation of your database like a rudimentary",
    "start": "106479",
    "end": "113520"
  },
  {
    "text": "discovery service you can say oh give me my production database and after that this service will return url will return",
    "start": "113520",
    "end": "119680"
  },
  {
    "text": "you connection string that you can apply and connect to your database and when you need to you know call with your",
    "start": "119680",
    "end": "125600"
  },
  {
    "text": "database if you need to work with this database and you need to communicate with all these things you",
    "start": "125600",
    "end": "131680"
  },
  {
    "text": "need to figure out how to work with this efficiently new times have come so we can",
    "start": "131680",
    "end": "138400"
  },
  {
    "text": "change everything and refactor our systems to microservices and this is the time where we need to reinvent some of",
    "start": "138400",
    "end": "145920"
  },
  {
    "text": "the patterns or maybe re-implement some of the code and uh today we're going to talking about how can we can do this",
    "start": "145920",
    "end": "152000"
  },
  {
    "text": "like less less painful and hopefully will be more efficient my name is victor gamov once",
    "start": "152000",
    "end": "158879"
  },
  {
    "text": "again i am a developer of the kid at kong and kong i am talking to developers",
    "start": "158879",
    "end": "164319"
  },
  {
    "text": "talking about the things that we develop at clonk dealing with some of the problems some of our",
    "start": "164319",
    "end": "170720"
  },
  {
    "text": "users in the community have and also i do all sorts of things around kind of educating people about the technologies",
    "start": "170720",
    "end": "177040"
  },
  {
    "text": "and cloud connectivity and all things around apis i also do some of the live streams",
    "start": "177040",
    "end": "184159"
  },
  {
    "text": "on the konk youtube channel if you're interested in this type of jazz don't hesitate uh subscribe to that channel",
    "start": "184159",
    "end": "189519"
  },
  {
    "text": "and um i will be sharing some of the content there so when we're talking about the",
    "start": "189519",
    "end": "195280"
  },
  {
    "text": "microservices revolution or revolution we usually like to remember where the",
    "start": "195280",
    "end": "200879"
  },
  {
    "text": "famous email from jeff bezos when he was talking about all the systems need to start talking to each other through apis",
    "start": "200879",
    "end": "206640"
  },
  {
    "text": "there is no should we know other integrations points and which is was a good thing you know it's a it's a nice",
    "start": "206640",
    "end": "212480"
  },
  {
    "text": "thing to have um the apis and how we can use those apis to uh to connect to the",
    "start": "212480",
    "end": "218319"
  },
  {
    "text": "systems but one of the biggest driver from perspective of operational complexity and like reducing operation complexity",
    "start": "218319",
    "end": "224959"
  },
  {
    "text": "was introduction of the containers one of the one of the technologies that drive this micro services and cloud",
    "start": "224959",
    "end": "232080"
  },
  {
    "text": "native revolution um but people still were doing the things um",
    "start": "232080",
    "end": "237599"
  },
  {
    "text": "even before the containers right the things that i mentioned at the very beginning like a war files and yar files",
    "start": "237599",
    "end": "242720"
  },
  {
    "text": "you also kind of sort of package this in some of the standard uh the format but it's only was standard for certain",
    "start": "242720",
    "end": "248159"
  },
  {
    "text": "platforms with um docker docker from operational complexity or",
    "start": "248159",
    "end": "253439"
  },
  {
    "text": "containers from operational complexity have solved us this idea of",
    "start": "253439",
    "end": "259359"
  },
  {
    "text": "transition to us from build ones run the world where to the packaged ones run over where",
    "start": "259359",
    "end": "265759"
  },
  {
    "text": "and around 2016 2017 uh those ideas that",
    "start": "265759",
    "end": "271040"
  },
  {
    "text": "was promoted by uh big tech in in the in the cloud industry or like web scale",
    "start": "271040",
    "end": "277919"
  },
  {
    "text": "uh start um start kind of like a migrate into the world of",
    "start": "277919",
    "end": "283280"
  },
  {
    "text": "the normal people normal enterprises traditionally monolithical systems because the companies decide to go",
    "start": "283280",
    "end": "290080"
  },
  {
    "text": "faster with their digital approach to the business and the solving the problems much faster so",
    "start": "290080",
    "end": "297120"
  },
  {
    "text": "let's get back to our my application so let me talk a little bit about how i can",
    "start": "297120",
    "end": "303600"
  },
  {
    "text": "how we can how can we talk about this in the sense of the of the modern component so think about",
    "start": "303600",
    "end": "310560"
  },
  {
    "text": "this the communication between databases you never deploy database on the same server as your application you always",
    "start": "310560",
    "end": "317120"
  },
  {
    "text": "have it on a separate thing and maybe even separate teams manages this for you it provides different um",
    "start": "317120",
    "end": "323759"
  },
  {
    "text": "restrictions passwords access control to those databases all these things not not",
    "start": "323759",
    "end": "329360"
  },
  {
    "text": "running together so they always communicating through the network so even though we're talking about monolithic application so",
    "start": "329360",
    "end": "336240"
  },
  {
    "text": "with this example of this monolithic application of this java ee application uh server um the communication is",
    "start": "336240",
    "end": "342800"
  },
  {
    "text": "happening through uh ctcp channel you know the the bi-directional streaming and",
    "start": "342800",
    "end": "347919"
  },
  {
    "text": "communication is possible between systems but still still at the network uh network",
    "start": "347919",
    "end": "353280"
  },
  {
    "text": "communication can be unreliable can be unsecured someone can you know interject",
    "start": "353280",
    "end": "359840"
  },
  {
    "text": "in between and do something with your traffic so once we kind of like scale this up like",
    "start": "359840",
    "end": "366240"
  },
  {
    "text": "one of the service might calling um another service and the challenges",
    "start": "366240",
    "end": "372720"
  },
  {
    "text": "of um scaling those technologies becoming unreal once we start",
    "start": "372720",
    "end": "378479"
  },
  {
    "text": "this decoupling of this monolithical application into the smaller pieces those missiles still needs to",
    "start": "378479",
    "end": "384080"
  },
  {
    "text": "communicate to each other somehow through apis like give me let me give you example of",
    "start": "384080",
    "end": "389520"
  },
  {
    "text": "how the things are changed from perspective of how it was before when we have everything in one place like for",
    "start": "389520",
    "end": "395680"
  },
  {
    "text": "example here i'm looking into the interface of this uh system where one component talk to",
    "start": "395680",
    "end": "402240"
  },
  {
    "text": "another component through calling and do something method of this we we're replacing",
    "start": "402240",
    "end": "408080"
  },
  {
    "text": "uh replacing communication between those two services by wrapping all this logic around so",
    "start": "408080",
    "end": "414800"
  },
  {
    "text": "technologies like remote procedure calls like rmi was very popular in java",
    "start": "414800",
    "end": "420319"
  },
  {
    "text": "this dcom technology and more modern technologies that also evolved",
    "start": "420319",
    "end": "426080"
  },
  {
    "text": "from from those things we we moved from computation based on cpu when everything",
    "start": "426080",
    "end": "433520"
  },
  {
    "text": "runs as a one single process if we move computation to the network now our network is our",
    "start": "433520",
    "end": "440639"
  },
  {
    "text": "computer like one service will call another service through api through certain protocols and",
    "start": "440639",
    "end": "448160"
  },
  {
    "text": "it would also very similar to the things what you've done in the past with you know calling interface of the object",
    "start": "448160",
    "end": "455680"
  },
  {
    "text": "with this network problem with the introduct introduction of the network communication we also start seeing um",
    "start": "455680",
    "end": "461840"
  },
  {
    "text": "not the problems but the challenges that you need to solve you need to solve many things that were given for you for free",
    "start": "461840",
    "end": "467280"
  },
  {
    "text": "for example process isolation was given since you're writing this as a one in the one sandbox and all the components",
    "start": "467280",
    "end": "473840"
  },
  {
    "text": "needs to run within security manager or whatnot and if you want to do login you",
    "start": "473840",
    "end": "479120"
  },
  {
    "text": "do login in the console and after that you can scrap this using uh tools like grep",
    "start": "479120",
    "end": "485520"
  },
  {
    "text": "awk and some some other things or you can use like motor stack and",
    "start": "485520",
    "end": "491520"
  },
  {
    "text": "consume those files using file beats and like ship it to elastic but there was no centralized",
    "start": "491520",
    "end": "498000"
  },
  {
    "text": "place where you can do all this logging all this tracing and all these things around the things that you need",
    "start": "498000",
    "end": "505039"
  },
  {
    "text": "to do what you start doing you maybe start introducing introducing some of those",
    "start": "505039",
    "end": "512560"
  },
  {
    "text": "components as application based libraries if you need to",
    "start": "512560",
    "end": "518800"
  },
  {
    "text": "implement observability you drop some of the library uh like java agent or some",
    "start": "518800",
    "end": "525040"
  },
  {
    "text": "any other agent that will listening what happens in your system and ship this observability data to some",
    "start": "525040",
    "end": "531440"
  },
  {
    "text": "apm application performance monitoring tool and after that you kind of analyze it so you",
    "start": "531440",
    "end": "538080"
  },
  {
    "text": "introduce this as a part infrastructure as a part of your application code so you start linking some of the",
    "start": "538080",
    "end": "544560"
  },
  {
    "text": "infrastructure code inside your application sometimes it's good sometimes it's bad but",
    "start": "544560",
    "end": "550399"
  },
  {
    "text": "things getting much more complex if you trying to introduce more languages so",
    "start": "550399",
    "end": "557360"
  },
  {
    "text": "you trying to be more diverse and hire more talent regardless of the platform and you want to build the services in",
    "start": "557360",
    "end": "564320"
  },
  {
    "text": "the different languages and which is totally fine because you're now talking through the apis it really doesn't matter what kind of implementation",
    "start": "564320",
    "end": "570160"
  },
  {
    "text": "language you use so with this mat with this approach with this particular approach now you need to make sure that",
    "start": "570160",
    "end": "576080"
  },
  {
    "text": "the framework that you use in one language gives additional or like a similar level of functionality in a",
    "start": "576080",
    "end": "581920"
  },
  {
    "text": "framework that you use in another language so that's another problem where you start introducing infrastructure",
    "start": "581920",
    "end": "587920"
  },
  {
    "text": "into your application code so all these things becoming the part of your application which is good thing you're",
    "start": "587920",
    "end": "593920"
  },
  {
    "text": "trying to make connection to application to like say external data source uh resilient you know the introduction of",
    "start": "593920",
    "end": "600399"
  },
  {
    "text": "the connections pools that will handle retries that will handle connection pooling and reuse of",
    "start": "600399",
    "end": "607120"
  },
  {
    "text": "the connection maybe logging all these other things um those pieces are part of your architecture now",
    "start": "607120",
    "end": "614000"
  },
  {
    "text": "um but many applications might you know fail on",
    "start": "614000",
    "end": "619920"
  },
  {
    "text": "this recovery or um not providing meaningful logs just simply because the library in one language or library that",
    "start": "619920",
    "end": "627519"
  },
  {
    "text": "use one application will not have the same functionality that has another one so",
    "start": "627519",
    "end": "633040"
  },
  {
    "text": "we need to but we need to have the consistent ways to look into our application performance and those",
    "start": "633040",
    "end": "639360"
  },
  {
    "text": "applications there will be tons of different applications and uh the communication and the different",
    "start": "639360",
    "end": "644959"
  },
  {
    "text": "functionalities that we will put in there also will have different and",
    "start": "644959",
    "end": "650560"
  },
  {
    "text": "distinct things i didn't even started talking about uh fragmentations uh from perspective of",
    "start": "650560",
    "end": "656800"
  },
  {
    "text": "how we secure those connections security is also when we start moving into the cloud-based environments the connection",
    "start": "656800",
    "end": "663279"
  },
  {
    "text": "connectivity security is important dating motion security is important uh because you're not running not you're",
    "start": "663279",
    "end": "669839"
  },
  {
    "text": "not running on your infrastructure where you can be make sure that everything that you have is kind of like a super",
    "start": "669839",
    "end": "675920"
  },
  {
    "text": "secure so um and with security uh and reliability in mind",
    "start": "675920",
    "end": "682959"
  },
  {
    "text": "uh all this and reusability of the components all these things in a nightmare for developers and becoming",
    "start": "682959",
    "end": "689360"
  },
  {
    "text": "nightmares for it uh departments as well more uh like a gorilla or like a hacking",
    "start": "689360",
    "end": "696079"
  },
  {
    "text": "approach would be kind of introduction of this like shadow it element so some of the team members would decide to or",
    "start": "696079",
    "end": "702160"
  },
  {
    "text": "some of the team uh some of the groups and applications they implement the stuff for themselves so they would make sure that their system was not um",
    "start": "702160",
    "end": "710160"
  },
  {
    "text": "is not compromised however they might need not for 100 following whatever whatever like",
    "start": "710160",
    "end": "716399"
  },
  {
    "text": "requirements available in organization because those requirements simply cannot allow them to",
    "start": "716399",
    "end": "722560"
  },
  {
    "text": "move faster and this is going to be more human problem rather than technology",
    "start": "722560",
    "end": "728320"
  },
  {
    "text": "problem where the different teams in different goals and different the targets are",
    "start": "728320",
    "end": "734639"
  },
  {
    "text": "competing instead of building one thing that will be solving one greater good",
    "start": "734639",
    "end": "740399"
  },
  {
    "text": "and those duplication fragmentation brings us to the point where what we will like to do with this",
    "start": "740399",
    "end": "747519"
  },
  {
    "text": "due duplication and fragmentation we would like to start decoupling this thing so what about we",
    "start": "747519",
    "end": "753839"
  },
  {
    "text": "start moving those pieces of functionality to something that would be part of infrastructure",
    "start": "753839",
    "end": "761760"
  },
  {
    "text": "and in this case there should be some of the components that you can closely talk and this",
    "start": "761760",
    "end": "768720"
  },
  {
    "text": "component will be solving all of the problems you can talk to them through through the api you're not",
    "start": "768720",
    "end": "773920"
  },
  {
    "text": "talking to some of the library that exists um in the only particular language",
    "start": "773920",
    "end": "779279"
  },
  {
    "text": "and how you can solve this due duplication so let's let's see how it can be done so with the idea of",
    "start": "779279",
    "end": "786519"
  },
  {
    "text": "outsourcing or moving some of the logic around error error handling retry",
    "start": "786519",
    "end": "791839"
  },
  {
    "text": "security login tracing all these kind of things into separate process and talk to this process through",
    "start": "791839",
    "end": "798399"
  },
  {
    "text": "sets of api so your application will always be talking to outside world not",
    "start": "798399",
    "end": "803680"
  },
  {
    "text": "through the direct communication to the service but through the proxy that will be also providing the ways how you can",
    "start": "803680",
    "end": "809680"
  },
  {
    "text": "do uh service discovery how you will figure out where this data is and so far",
    "start": "809680",
    "end": "815839"
  },
  {
    "text": "and so on so let's talk a little bit closely about this proxy how this will work so each",
    "start": "815839",
    "end": "821519"
  },
  {
    "text": "service now will have its own small proxy that the footprint would be negligible for comparing two benefits",
    "start": "821519",
    "end": "827920"
  },
  {
    "text": "that this uh this proxy provides so in this case uh this proxy uh will will will be",
    "start": "827920",
    "end": "835360"
  },
  {
    "text": "handling all communication between uh between the services in you know in",
    "start": "835360",
    "end": "840639"
  },
  {
    "text": "just you know running a little bit in front of the gun um this pattern this particular pattern when you talking to",
    "start": "840639",
    "end": "847710"
  },
  {
    "text": "[Music] or someone will handle uh the communication uh between the systems",
    "start": "847710",
    "end": "854240"
  },
  {
    "text": "will be calling a sidecar that um that all this communication",
    "start": "854240",
    "end": "859920"
  },
  {
    "text": "all communication of the service will be going through this sidecar proxy um and",
    "start": "859920",
    "end": "865839"
  },
  {
    "text": "the service will be always talking to proxy through localhost and in this case there would be no",
    "start": "865839",
    "end": "871920"
  },
  {
    "text": "network communication and all these problems with retries or",
    "start": "871920",
    "end": "877760"
  },
  {
    "text": "um circuit breakers and all these kind of things will be handled on the proxy site so for the for the service it would be",
    "start": "877760",
    "end": "883519"
  },
  {
    "text": "transparent each element or each each service or each application will",
    "start": "883519",
    "end": "890320"
  },
  {
    "text": "have its own this site car that will be running on the local host of the service",
    "start": "890320",
    "end": "897360"
  },
  {
    "text": "in some of the deployment strategies for example we here talking mostly about kubernetes",
    "start": "897360",
    "end": "904079"
  },
  {
    "text": "it can be run this together with your application as a part of the sidecar",
    "start": "904079",
    "end": "909360"
  },
  {
    "text": "inside one pod um in in deployments that um",
    "start": "909360",
    "end": "915440"
  },
  {
    "text": "like imagine like vm deployment or deployment in the bare metal it just simply would be another process that",
    "start": "915440",
    "end": "921440"
  },
  {
    "text": "runs internally and will have all the traffic would be route through this process so those things are can be",
    "start": "921440",
    "end": "928560"
  },
  {
    "text": "done and uh those things can be uh implemented uh through so that's why we",
    "start": "928560",
    "end": "933839"
  },
  {
    "text": "we have this name of the mesh so communication not happening directly between the services but rather the proxy so essentially proxies are",
    "start": "933839",
    "end": "941600"
  },
  {
    "text": "establish um our communication and establish our mesh",
    "start": "941600",
    "end": "947199"
  },
  {
    "text": "so and this this pattern also works in um in in your",
    "start": "947839",
    "end": "954560"
  },
  {
    "text": "past like it also works with the legacy or monolithical application where you have one component that will",
    "start": "954560",
    "end": "962560"
  },
  {
    "text": "be um the just just service mesh or this the proxy will be handling all this",
    "start": "962560",
    "end": "969199"
  },
  {
    "text": "communication between uh different components of the system now so now we need to figure out",
    "start": "969199",
    "end": "976800"
  },
  {
    "text": "we we figure out the the mechanics between the traffic management but the next thing that we need to figure out is",
    "start": "976800",
    "end": "982639"
  },
  {
    "text": "how to uh provide those configurations so definitely um",
    "start": "982639",
    "end": "987680"
  },
  {
    "text": "those configurations can be you need to deploy this in a different",
    "start": "987680",
    "end": "993040"
  },
  {
    "text": "environments like in this particular case we can deploy this in a different environment where we have um",
    "start": "993040",
    "end": "998959"
  },
  {
    "text": "only virtual machines or we have a kubernetes cluster or we have like bare metal machines but",
    "start": "998959",
    "end": "1005360"
  },
  {
    "text": "definitely some of the things around how these things will be handled for perspective",
    "start": "1005360",
    "end": "1011839"
  },
  {
    "text": "of communicating or from perspective of configuring the services needs to be solved as well since we starting putting",
    "start": "1011839",
    "end": "1018480"
  },
  {
    "text": "all these proxies in one place next to our applications and the number of applications will grow uh we might",
    "start": "1018480",
    "end": "1025918"
  },
  {
    "text": "have a situation where we cannot go and configure door service like manually or like having static configuration so",
    "start": "1025919",
    "end": "1031678"
  },
  {
    "text": "that's why we need to come up with some other approach and this is where",
    "start": "1031679",
    "end": "1037280"
  },
  {
    "text": "another element of service mesh comes into play now we can propagate this uh",
    "start": "1037280",
    "end": "1042798"
  },
  {
    "text": "this communication those configurations uh to each service but uh it's all about automation we need",
    "start": "1042799",
    "end": "1048960"
  },
  {
    "text": "to have a suitable automation in order to propagate those configurations so with the with the concept of this",
    "start": "1048960",
    "end": "1056640"
  },
  {
    "text": "of the service mesh each individual component or each individual application that will be part of this mesh will have",
    "start": "1056640",
    "end": "1062720"
  },
  {
    "text": "its own uh we call it data plane so those proxy also name as a data plane and there will",
    "start": "1062720",
    "end": "1068320"
  },
  {
    "text": "be some config server that will be also connected to those data planes and this is the benefit between this because we",
    "start": "1068320",
    "end": "1074799"
  },
  {
    "text": "already established in a few slides before that communication between the systems only happens through this proxy",
    "start": "1074799",
    "end": "1082000"
  },
  {
    "text": "so there will be no third party and this uh communication service will use some sort of back channel to or configuration",
    "start": "1082000",
    "end": "1088559"
  },
  {
    "text": "service to uh we'll be using some back channel to send this data into into this",
    "start": "1088559",
    "end": "1094400"
  },
  {
    "text": "data plane so this configuration service we will be calling a control plane and um our proxy servers that would be",
    "start": "1094400",
    "end": "1101520"
  },
  {
    "text": "running based on this control plane will be called data planes so the control plane will have",
    "start": "1101520",
    "end": "1108960"
  },
  {
    "text": "up-to-date information and it will replicate this configuration to all data planes so but those data planes will",
    "start": "1108960",
    "end": "1115520"
  },
  {
    "text": "continue to operate in even in situation when they lose control to control plane",
    "start": "1115520",
    "end": "1121840"
  },
  {
    "text": "when they lose the connection to control plane and when the connection will be re-established control plane will ship a",
    "start": "1121840",
    "end": "1127919"
  },
  {
    "text": "latest and greatest configuration back to data planes and that's pretty much it about the",
    "start": "1127919",
    "end": "1134559"
  },
  {
    "text": "service mesh this is how this pattern works your application your service your piece of functionality",
    "start": "1134559",
    "end": "1141440"
  },
  {
    "text": "that will be you know exposing either uh to end user or to another service to consume will communicate through network",
    "start": "1141440",
    "end": "1148240"
  },
  {
    "text": "through data plane that will be um that would be like a proxy server that",
    "start": "1148240",
    "end": "1153280"
  },
  {
    "text": "will handling traffic and there will be somewhere deployed a another component that called control plane that will be",
    "start": "1153280",
    "end": "1160559"
  },
  {
    "text": "responsible for shipping the configuration to all data planes you can have",
    "start": "1160559",
    "end": "1165600"
  },
  {
    "text": "dynamic reconfiguration of your network connectivity between the services by simply applying the configuration",
    "start": "1165600",
    "end": "1172480"
  },
  {
    "text": "control plane and control plane will handle the rest of the stuff to update this configuration and all these data",
    "start": "1172480",
    "end": "1177760"
  },
  {
    "text": "planes will reconfigure this uh network um this is exactly how it look like uh from",
    "start": "1177760",
    "end": "1185360"
  },
  {
    "text": "uh perspective of you know this is the bigger picture each service will have its own data",
    "start": "1185360",
    "end": "1190880"
  },
  {
    "text": "plane and the control plane will be running this configuration and this um",
    "start": "1190880",
    "end": "1197280"
  },
  {
    "text": "this configuration also works at scale where we need to have communication between",
    "start": "1197280",
    "end": "1203120"
  },
  {
    "text": "different components that runs not only inside uh one cluster or like one data center they",
    "start": "1203120",
    "end": "1209760"
  },
  {
    "text": "may be running across some uh uh white area network and with",
    "start": "1209760",
    "end": "1216240"
  },
  {
    "text": "same pattern but like put this into like is a different gears um",
    "start": "1216240",
    "end": "1221280"
  },
  {
    "text": "you can establish connectivity and provide uh transparent and seamless",
    "start": "1221280",
    "end": "1226559"
  },
  {
    "text": "integration between components and runs at one data centers or one region or one um",
    "start": "1226559",
    "end": "1232960"
  },
  {
    "text": "in in one um availability zone uh to another that would be running in",
    "start": "1232960",
    "end": "1239280"
  },
  {
    "text": "different region or given continent or even different uh cluster we can have uh one um applications runs inside the",
    "start": "1239280",
    "end": "1246159"
  },
  {
    "text": "kubernetes another one runs on the bare metal and the service mesh and those like data planes",
    "start": "1246159",
    "end": "1252000"
  },
  {
    "text": "will allow to connect this and unify those networks and unify the",
    "start": "1252000",
    "end": "1257440"
  },
  {
    "text": "communication between the systems so let's let's start putting things into",
    "start": "1257440",
    "end": "1262480"
  },
  {
    "text": "perspective so we've um uh with invention of this uh very",
    "start": "1262480",
    "end": "1269440"
  },
  {
    "text": "lightweight and super performant and most importantly um api reach a system",
    "start": "1269440",
    "end": "1274960"
  },
  {
    "text": "called own boy many it actually also gives a huge boost to",
    "start": "1274960",
    "end": "1280559"
  },
  {
    "text": "um development of many like service meshes that kuma for example is a control plane that uses",
    "start": "1280559",
    "end": "1287840"
  },
  {
    "text": "envoy that uses envoy data planes in order to configure and",
    "start": "1287840",
    "end": "1294720"
  },
  {
    "text": "implement this the service mesh so kuma available in akuma dot io you can find",
    "start": "1294720",
    "end": "1299760"
  },
  {
    "text": "the documentation there we're going to talk about this in in a second and envoy is also cncf uh project that um is",
    "start": "1299760",
    "end": "1307360"
  },
  {
    "text": "actively developed and uh it has a like very small footprint that uh",
    "start": "1307360",
    "end": "1312640"
  },
  {
    "text": "very negligible uh comparing to the benefits that it provides from perspective of a service to service",
    "start": "1312640",
    "end": "1318960"
  },
  {
    "text": "communication and from perspective of things that available including um",
    "start": "1318960",
    "end": "1324000"
  },
  {
    "text": "reliability component including security component and including observability component",
    "start": "1324000",
    "end": "1329520"
  },
  {
    "text": "all right so it's time to jump into some demo and the demo today we will have a",
    "start": "1329520",
    "end": "1336640"
  },
  {
    "text": "distributed um distributed system uh microservices system and the e-commerce system as well",
    "start": "1336640",
    "end": "1344720"
  },
  {
    "text": "this is what you see here it's called online boutique and the system that you can go and buy",
    "start": "1344720",
    "end": "1350880"
  },
  {
    "text": "some stuff for example if i'm interested in buying uh salt and pepper shakers i",
    "start": "1350880",
    "end": "1356080"
  },
  {
    "text": "can put multiple items and add this to card after that i can do either continue",
    "start": "1356080",
    "end": "1362400"
  },
  {
    "text": "shopping or i can do checkout with the checkout this is my address this is my",
    "start": "1362400",
    "end": "1367600"
  },
  {
    "text": "credit card that i'm using and after that when i can place the order my order",
    "start": "1367600",
    "end": "1372640"
  },
  {
    "text": "will be sent to warehouse for fulfillment and i'll continue to work so if you think about this it can be one monolithic",
    "start": "1372640",
    "end": "1378799"
  },
  {
    "text": "application but actually this is system where the multiple components are playing nicely together so first of all",
    "start": "1378799",
    "end": "1384799"
  },
  {
    "text": "if you see here there's a currency like i can switch different currency and my",
    "start": "1384799",
    "end": "1391200"
  },
  {
    "text": "system will immediately immediately will display all things in the current currency for",
    "start": "1391200",
    "end": "1397760"
  },
  {
    "text": "example here i want to use a japan yen it will show me immediately in japan yen",
    "start": "1397760",
    "end": "1405280"
  },
  {
    "text": "and it can show me in usd and so far and so on so this particular thing is actually",
    "start": "1405280",
    "end": "1410799"
  },
  {
    "text": "calling external service that provides information about exchange rate now when i want to go here and say add to cart it",
    "start": "1410799",
    "end": "1418000"
  },
  {
    "text": "will be handled by another service that will be handling uh the persistence of the card address lookup and all these",
    "start": "1418000",
    "end": "1424080"
  },
  {
    "text": "things also um handled by another service and when i click place order it will send simply send this to to this",
    "start": "1424080",
    "end": "1431440"
  },
  {
    "text": "and uh the way how it works this application is deployed using service mesh and exposed to outside world using",
    "start": "1431440",
    "end": "1438559"
  },
  {
    "text": "clone gateway so let's take a look what we can have here in this application so personally i didn't write this",
    "start": "1438559",
    "end": "1444640"
  },
  {
    "text": "application and i thought it would be good uh example of what is possible to do with the uh with the system where you",
    "start": "1444640",
    "end": "1452240"
  },
  {
    "text": "don't have access to the code so in this case uh this is the google cloud platform microservices boutique system",
    "start": "1452240",
    "end": "1460240"
  },
  {
    "text": "that all the components of the system is actually multiple microservices they're communicating to each other through grpc",
    "start": "1460240",
    "end": "1468240"
  },
  {
    "text": "and all these things there's a front-end there's a mail service there's currency service checkout service advertisement",
    "start": "1468240",
    "end": "1474320"
  },
  {
    "text": "service and so far and so on so i decided to take this and implement this with service mesh so the way how it",
    "start": "1474320",
    "end": "1480080"
  },
  {
    "text": "works let's start with the very beginning my service mesh control plane already",
    "start": "1480080",
    "end": "1485600"
  },
  {
    "text": "deployed inside my uh my cluster i'm using uh kong mesh which is um which is",
    "start": "1485600",
    "end": "1492400"
  },
  {
    "text": "distribution of kuma mesh just simply because it was handy for me to use what i can see here from the day one uh",
    "start": "1492400",
    "end": "1498640"
  },
  {
    "text": "there's a default mesh is created for me so all the things that i can see here it",
    "start": "1498640",
    "end": "1504799"
  },
  {
    "text": "already have a 12 data plane proxies let's take a look what do we have here so we do have advertisement service we",
    "start": "1504799",
    "end": "1511760"
  },
  {
    "text": "have a card service check out service and all these services are already part of the mesh the way how it works let's",
    "start": "1511760",
    "end": "1518480"
  },
  {
    "text": "take a look how it works if i go to my boutique num space this is where my applications are deployed so all these",
    "start": "1518480",
    "end": "1524640"
  },
  {
    "text": "services are here so if i will tell you show you definition for this there would be very",
    "start": "1524640",
    "end": "1530559"
  },
  {
    "text": "interesting connotation called kuma io sidecar injection enabled so what does it mean if i go to any service for",
    "start": "1530559",
    "end": "1537520"
  },
  {
    "text": "example this ad service and i will see that this application will include two components this is actually my",
    "start": "1537520",
    "end": "1545039"
  },
  {
    "text": "application code this is stuff that i will be running and there's two things there's a side card in init container so",
    "start": "1545039",
    "end": "1550960"
  },
  {
    "text": "sidecar container will be handling all the communication for the service and as you can see here it's one of the uh data",
    "start": "1550960",
    "end": "1557600"
  },
  {
    "text": "proxies uh that the plane proxies here so every service will have its own data",
    "start": "1557600",
    "end": "1563120"
  },
  {
    "text": "plane and this is how this is what we see here when we open mesh list here so",
    "start": "1563120",
    "end": "1569120"
  },
  {
    "text": "when i go to to overview of the mesh see already 17 data plane proxies some of",
    "start": "1569120",
    "end": "1575279"
  },
  {
    "text": "the things also included from for example prometheus",
    "start": "1575279",
    "end": "1580799"
  },
  {
    "text": "i do have a graffana here so not only my application will be part of this mesh but also i can see how communication",
    "start": "1580799",
    "end": "1588480"
  },
  {
    "text": "between external services also handled i can show you this in a few seconds the kuma is designed to be developer",
    "start": "1588480",
    "end": "1595679"
  },
  {
    "text": "friendly and provide some of the developer oriented insights for the system so when the first time you run",
    "start": "1595679",
    "end": "1601520"
  },
  {
    "text": "this default service without doing anything you will see this very nice tip that allows you to see how we can",
    "start": "1601520",
    "end": "1608559"
  },
  {
    "text": "improve your service so before we jump in here i can show you one quick thing",
    "start": "1608559",
    "end": "1614080"
  },
  {
    "text": "before before we enable all these kind of things i do have a grafana and prometheus",
    "start": "1614080",
    "end": "1619760"
  },
  {
    "text": "deployed in my brains cluster so i can start seeing some of the dashboards kuma provides the dashboards that allow you",
    "start": "1619760",
    "end": "1625600"
  },
  {
    "text": "to observe things so let's take a look on the control plane and the control plane this is our process that will be",
    "start": "1625600",
    "end": "1631679"
  },
  {
    "text": "responsible for propagating this configuration we can see this control plane is up and running so it's alive",
    "start": "1631679",
    "end": "1638240"
  },
  {
    "text": "and traffic is steady uh so now we will be able to see some some other things around mesh so if i want to see for",
    "start": "1638240",
    "end": "1645120"
  },
  {
    "text": "example service to service communication i don't want to save any changes from the previous dashboard i see no data",
    "start": "1645120",
    "end": "1652240"
  },
  {
    "text": "because by default we're not capturing any data between the systems communication between the components are",
    "start": "1652240",
    "end": "1658960"
  },
  {
    "text": "you know continue to be but those things are not not up in running",
    "start": "1658960",
    "end": "1665039"
  },
  {
    "text": "yet so what i need to do here is to enable those communication bits so",
    "start": "1665039",
    "end": "1671760"
  },
  {
    "text": "and it shows what kind of components you need to enable link to documentation we interested in couple things we're",
    "start": "1671760",
    "end": "1677279"
  },
  {
    "text": "interested to enable uh observability uh so we can see a communication between",
    "start": "1677279",
    "end": "1682399"
  },
  {
    "text": "those sources let's take a look how we can enable this and i already have my mesh configuration and specifically",
    "start": "1682399",
    "end": "1690240"
  },
  {
    "text": "we're going to be looking at a what we call it if we go in here we're",
    "start": "1690240",
    "end": "1696320"
  },
  {
    "text": "going into traffic traces so in this case that's the policy that we can create and these",
    "start": "1696320",
    "end": "1703200"
  },
  {
    "text": "traffic traces will uh will be able to capture communication between the services so let's enable this i have a",
    "start": "1703200",
    "end": "1709520"
  },
  {
    "text": "traffic trace and when the when you install kuber in your kubernetes cluster it also installs a bunch of different um",
    "start": "1709520",
    "end": "1716080"
  },
  {
    "text": "custom resource definitions one of the things here that you can see it has this definition called mesh and all the",
    "start": "1716080",
    "end": "1722240"
  },
  {
    "text": "components that we will be configuring today traffic trays traffic log all these things have a custom resource",
    "start": "1722240",
    "end": "1728399"
  },
  {
    "text": "definition that allow you to focus on specific area rather than having um",
    "start": "1728399",
    "end": "1733440"
  },
  {
    "text": "dealing with some sort of like a config maps that would be more or less generic now we can say the traffic",
    "start": "1733440",
    "end": "1740559"
  },
  {
    "text": "traces all coming all communication between all the services each service will be annotated with kuma service let",
    "start": "1740559",
    "end": "1747919"
  },
  {
    "text": "me show you so this microservice demo and i have a kubernetes manifest so it has annotations uh what kind of protocol",
    "start": "1747919",
    "end": "1754799"
  },
  {
    "text": "it source and this service will be served by kuma mesh there's only one annotation that will tell",
    "start": "1754799",
    "end": "1761760"
  },
  {
    "text": "kuma what ports to listen so since this particular service exposes port 955",
    "start": "1761760",
    "end": "1769120"
  },
  {
    "text": "we will be listing this and report this to tokuma as well so when i go here",
    "start": "1769120",
    "end": "1775360"
  },
  {
    "text": "i can say that every service to communicate into every service all the data will go to jager collection i",
    "start": "1775360",
    "end": "1782080"
  },
  {
    "text": "already have a jager deployed if i go here and show you",
    "start": "1782080",
    "end": "1787840"
  },
  {
    "text": "data sources i do have a jager deployed for capturing traces i have a loki",
    "start": "1787840",
    "end": "1793120"
  },
  {
    "text": "deployed for capturing logs from those systems and the prometheus",
    "start": "1793120",
    "end": "1798640"
  },
  {
    "text": "also deployed kuma itself uh data plane xposed api that allows you to plug it",
    "start": "1798640",
    "end": "1804559"
  },
  {
    "text": "directly to your grafana so information about service uh to service communication and data plane can be",
    "start": "1804559",
    "end": "1811200"
  },
  {
    "text": "retrieved from here from using the kuma as a data sources api data source now another thing that we also enable is",
    "start": "1811200",
    "end": "1818640"
  },
  {
    "text": "logging so we need to know in order to kind of make sense of the traces we need to also capture logs",
    "start": "1818640",
    "end": "1825200"
  },
  {
    "text": "from the system so we need to say like a communication from one source to another also will be captured through this all",
    "start": "1825200",
    "end": "1831919"
  },
  {
    "text": "the traffic will be captured by this policy for tracing we do have a collector",
    "start": "1831919",
    "end": "1837279"
  },
  {
    "text": "configured and for metrics we're going to be using prometheus collector and for logging we also will be using lucky",
    "start": "1837279",
    "end": "1843520"
  },
  {
    "text": "collector there's also ability to expose this to um there's some other collector that allows",
    "start": "1843520",
    "end": "1849520"
  },
  {
    "text": "you connect this to for example elasticsearch another thing that we will be enabling is immediate communication",
    "start": "1849520",
    "end": "1855600"
  },
  {
    "text": "between the systems those uh what we called a mtls between uh between components one",
    "start": "1855600",
    "end": "1862320"
  },
  {
    "text": "of the things that uh you can see here in puma ui when you're going into our view",
    "start": "1862320",
    "end": "1868559"
  },
  {
    "text": "you will get a yeah so enabling mtls",
    "start": "1868559",
    "end": "1874559"
  },
  {
    "text": "so i want to go in here just click kubernetes apply",
    "start": "1874559",
    "end": "1879679"
  },
  {
    "text": "so and now my mesh was updated we enabled traffic um",
    "start": "1879679",
    "end": "1885519"
  },
  {
    "text": "permissions for everything to everything and we enabled encryption between the system so when i go ahead here and",
    "start": "1885519",
    "end": "1892080"
  },
  {
    "text": "refresh screen we'll see that's all these things now enabled we have a",
    "start": "1892080",
    "end": "1897919"
  },
  {
    "text": "observability is enabled logging tracing everything is enabled so we will be able to go into my",
    "start": "1897919",
    "end": "1906399"
  },
  {
    "text": "grafana for example and let's see what do we have here from perspective of observability we're going here i'm going",
    "start": "1906399",
    "end": "1913120"
  },
  {
    "text": "home and we're going to service the service communication and now what we can do here we can say we have a end and",
    "start": "1913120",
    "end": "1920240"
  },
  {
    "text": "goes into say payment service and now when i go here",
    "start": "1920240",
    "end": "1927039"
  },
  {
    "text": "and i will start doing this my thing oh that's what happened so we what what",
    "start": "1927039",
    "end": "1932720"
  },
  {
    "text": "just happened i enabled a mtls between my elements of the of this",
    "start": "1932720",
    "end": "1938799"
  },
  {
    "text": "mesh but my gateway that serves the proxy the outside world this stuff was not",
    "start": "1938799",
    "end": "1945440"
  },
  {
    "text": "configured so i don't have like the pod that will be around the traffic the ingress pod",
    "start": "1945440",
    "end": "1952640"
  },
  {
    "text": "now has a problems right so because it cannot communicate this and specifically if i will go in logs and say",
    "start": "1952640",
    "end": "1959840"
  },
  {
    "text": "let's go to corn and go into my proxy",
    "start": "1959840",
    "end": "1965039"
  },
  {
    "text": "so it will set like i will not be able to to go there we're getting the error because we",
    "start": "1965039",
    "end": "1970320"
  },
  {
    "text": "cannot reach upstream servers so upstream prematurely closed connection",
    "start": "1970320",
    "end": "1975679"
  },
  {
    "text": "so what does it mean so how we can fix that in this case our gateway doesn't have",
    "start": "1975679",
    "end": "1981360"
  },
  {
    "text": "access to our mesh because our gateway is not the part of the mesh how i can know that in the ui i can go and see",
    "start": "1981360",
    "end": "1987600"
  },
  {
    "text": "here there's a few types of data plane proxy standard data plane proxy that allows communication between particular",
    "start": "1987600",
    "end": "1994240"
  },
  {
    "text": "service and there's gateway that the plane proxy so what i need to do is i need to also enable this and make my",
    "start": "1994240",
    "end": "2002000"
  },
  {
    "text": "gateway make my proxy server also part of this data plan and the the the the",
    "start": "2002000",
    "end": "2008799"
  },
  {
    "text": "kuma ui provides the ways how i can do this and gives me so we're gonna do this",
    "start": "2008799",
    "end": "2013919"
  },
  {
    "text": "uh namespace we have a namespace called quang and we're gonna do next so it will",
    "start": "2013919",
    "end": "2019840"
  },
  {
    "text": "generate us command that i need to modify so i need to copy this command",
    "start": "2019840",
    "end": "2025760"
  },
  {
    "text": "go to my kubernetes cluster and run this command so what we'll do",
    "start": "2025760",
    "end": "2031919"
  },
  {
    "text": "for nem space quank this is where i am running my gateway i also need to do",
    "start": "2031919",
    "end": "2037200"
  },
  {
    "text": "sidecar injection and also i need to mention that this guy needs to join this",
    "start": "2037200",
    "end": "2042799"
  },
  {
    "text": "mesh so what we'll do we will bounce uh the chronic pods we",
    "start": "2042799",
    "end": "2048638"
  },
  {
    "text": "also will let's take a look what's going to happen here so this is the init container now",
    "start": "2048639",
    "end": "2054560"
  },
  {
    "text": "my quant port will get also side cars here so those side cars will be injected",
    "start": "2054560",
    "end": "2059679"
  },
  {
    "text": "as we speak right now so we see the old port is germinating new one is starting up",
    "start": "2059679",
    "end": "2064960"
  },
  {
    "text": "now let's create it we're going in through this uh crash loop back off a few more seconds and we",
    "start": "2064960",
    "end": "2072720"
  },
  {
    "text": "will get back to ready state so we deployed the sidecar meaning that all the policy around mtls also will be",
    "start": "2072720",
    "end": "2080240"
  },
  {
    "text": "applied to this component to this system and now uh looks like it's up and",
    "start": "2080240",
    "end": "2085919"
  },
  {
    "text": "running so let's see if i will go into mesh and there you see this gateway",
    "start": "2085919",
    "end": "2093440"
  },
  {
    "text": "and now i see there is a gateway proxies here so gateway data plane now my gateway data proxy has a",
    "start": "2093440",
    "end": "2101520"
  },
  {
    "text": "communication between my service mesh because now data plane established this mtls connection between",
    "start": "2101520",
    "end": "2108480"
  },
  {
    "text": "gateway data plane and my mesh data plane and now what i can see if i will go and refresh my application is back to",
    "start": "2108480",
    "end": "2115359"
  },
  {
    "text": "business now i'm back into doing my stuff uh let me do this smaller so i can",
    "start": "2115359",
    "end": "2121760"
  },
  {
    "text": "google sunglasses and add to cart and i can do a place order and continue shopping so",
    "start": "2121760",
    "end": "2127680"
  },
  {
    "text": "i will be able to see all these things in my for the last communications let's",
    "start": "2127680",
    "end": "2133920"
  },
  {
    "text": "see we're gonna do front end to advertisement service yes so yeah we do",
    "start": "2133920",
    "end": "2139359"
  },
  {
    "text": "have uh the communication still up but next important thing that i will be able to see is how my application topology",
    "start": "2139359",
    "end": "2146400"
  },
  {
    "text": "looks like and here's our what we call a service map that allows us to see what is going",
    "start": "2146400",
    "end": "2152960"
  },
  {
    "text": "on with this application so this is called proxy the traffic goes in it goes into front-end service so front-end",
    "start": "2152960",
    "end": "2160000"
  },
  {
    "text": "service service that actually serves all these things all the requests and makes it you know routable let's generate a",
    "start": "2160000",
    "end": "2166560"
  },
  {
    "text": "little bit more traffic to this system uh so we will make sure",
    "start": "2166560",
    "end": "2173359"
  },
  {
    "text": "that um this communications actually works just quick refresh last five",
    "start": "2173359",
    "end": "2178640"
  },
  {
    "text": "minutes no no doesn't uh doesn't doesn't want me to show maybe i require some some more data to collect but",
    "start": "2178640",
    "end": "2185200"
  },
  {
    "text": "essentially from this front-end boutique service we will be able to see how we can go and check out how we can",
    "start": "2185200",
    "end": "2191520"
  },
  {
    "text": "go into card service how we can go to advertisement service so once again let me let me quickly",
    "start": "2191520",
    "end": "2198320"
  },
  {
    "text": "summarize what you just saw here so i took the um i took the existing application that's already available as",
    "start": "2198320",
    "end": "2204480"
  },
  {
    "text": "containers inside this you know google micro services demo i installed them into my uh mesh in micro",
    "start": "2204480",
    "end": "2212960"
  },
  {
    "text": "brands cluster now those applications are running inside a mesh",
    "start": "2212960",
    "end": "2219680"
  },
  {
    "text": "i enable mtls communication between all the components now each and every application will have its",
    "start": "2219680",
    "end": "2226480"
  },
  {
    "text": "own mtls certificate that was released and that was generated by",
    "start": "2226480",
    "end": "2232320"
  },
  {
    "text": "built-in certificate authority that is a part of control plane my gateway also now is part of this",
    "start": "2232320",
    "end": "2241599"
  },
  {
    "text": "of this overall architecture so you can you can mix and match different uh you can bring different components",
    "start": "2241599",
    "end": "2249040"
  },
  {
    "text": "into this mesh not only your application whatever you can put in the container you will be",
    "start": "2249040",
    "end": "2254720"
  },
  {
    "text": "able to join the mesh and now my quality gateway communicate to the system to",
    "start": "2254720",
    "end": "2259760"
  },
  {
    "text": "these black applications through mtls i also enabled by default like some of the",
    "start": "2259760",
    "end": "2266240"
  },
  {
    "text": "uh traffic traffic permit routes so every service can talk to each service but i can be",
    "start": "2266240",
    "end": "2272160"
  },
  {
    "text": "more explicit let us know in the comments or let us know in the q a section if you're",
    "start": "2272160",
    "end": "2278079"
  },
  {
    "text": "interested to learn more about those policies in the future and we'll definitely get back to talk about those",
    "start": "2278079",
    "end": "2283200"
  },
  {
    "text": "and uh yeah that's uh the nice uh nicey with this nice ui we can like immediately understand what we're",
    "start": "2283200",
    "end": "2289839"
  },
  {
    "text": "running here uh what kind of uh how we're collecting let me show you quickly how we can see uh logs here that allows",
    "start": "2289839",
    "end": "2297040"
  },
  {
    "text": "you to speed up your root cause analysis for example if i will go to",
    "start": "2297040",
    "end": "2303760"
  },
  {
    "text": "my data sources and i will select something like let's go explore i can go explore and i will",
    "start": "2303760",
    "end": "2310880"
  },
  {
    "text": "select jaeger so i'll just do search from the service front end to",
    "start": "2310880",
    "end": "2318000"
  },
  {
    "text": "check out and i we can do all the things so one of the traces that come from",
    "start": "2318000",
    "end": "2323440"
  },
  {
    "text": "front-end service to out service we'll have this kind of like i'm calling from frontend to chicago and i will be able",
    "start": "2323440",
    "end": "2330240"
  },
  {
    "text": "to to retrieve the service from the system that i will be able to retrieve logs and",
    "start": "2330240",
    "end": "2336160"
  },
  {
    "text": "see what is going on there we see there was a call over http 2 which is like jrpc",
    "start": "2336160",
    "end": "2342160"
  },
  {
    "text": "and all these logs from the from checkout service based on this particular trace so that's pretty uh",
    "start": "2342160",
    "end": "2348720"
  },
  {
    "text": "that's pretty neat and you will be able to do more things with this so that's uh",
    "start": "2348720",
    "end": "2354240"
  },
  {
    "text": "that's pretty much it for today uh don't forget let us know how you like this or",
    "start": "2354240",
    "end": "2359520"
  },
  {
    "text": "what you want to learn more in future and with this my name is victor gamov and",
    "start": "2359520",
    "end": "2365280"
  },
  {
    "text": "as always have a nice day",
    "start": "2365280",
    "end": "2369680"
  }
]