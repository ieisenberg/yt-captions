[
  {
    "start": "0",
    "end": "210000"
  },
  {
    "text": "next we have Roslyn and Ganesh it's",
    "start": "0",
    "end": "3419"
  },
  {
    "text": "another one of those talks which I",
    "start": "3419",
    "end": "5279"
  },
  {
    "text": "alluded to in the in the opening and in",
    "start": "5279",
    "end": "7200"
  },
  {
    "text": "the Prometheus updates",
    "start": "7200",
    "end": "8760"
  },
  {
    "text": "and how how in particular between open",
    "start": "8760",
    "end": "11760"
  },
  {
    "text": "Telemetry and Prometheus we tried really",
    "start": "11760",
    "end": "14580"
  },
  {
    "text": "hard and worked very hard to to make",
    "start": "14580",
    "end": "16260"
  },
  {
    "text": "certain that you had actually have a",
    "start": "16260",
    "end": "18660"
  },
  {
    "text": "fully compatible native histogram",
    "start": "18660",
    "end": "20640"
  },
  {
    "text": "implementation",
    "start": "20640",
    "end": "22140"
  },
  {
    "text": "and this is about how to how to actually",
    "start": "22140",
    "end": "24359"
  },
  {
    "text": "use open telemetries native histogram",
    "start": "24359",
    "end": "26699"
  },
  {
    "text": "with Prometheus",
    "start": "26699",
    "end": "28380"
  },
  {
    "text": "Round of Applause",
    "start": "28380",
    "end": "29790"
  },
  {
    "text": "[Applause]",
    "start": "29790",
    "end": "35280"
  },
  {
    "text": "uh hello everyone Welcome to our talk on",
    "start": "35280",
    "end": "37920"
  },
  {
    "text": "using open telemetries exponential",
    "start": "37920",
    "end": "40220"
  },
  {
    "text": "[Music]",
    "start": "40220",
    "end": "41520"
  },
  {
    "text": "I think Welcome to our tolki news and",
    "start": "41520",
    "end": "44340"
  },
  {
    "text": "open telemetries exponential histograms",
    "start": "44340",
    "end": "46200"
  },
  {
    "text": "in parameters so before we begin let me",
    "start": "46200",
    "end": "49739"
  },
  {
    "text": "introduce myself and my co-presenter",
    "start": "49739",
    "end": "52559"
  },
  {
    "text": "Ganesh Ganesh is a senior software",
    "start": "52559",
    "end": "54660"
  },
  {
    "text": "engineer at grafana labs",
    "start": "54660",
    "end": "56699"
  },
  {
    "text": "he's also a team member of Prometheus",
    "start": "56699",
    "end": "61199"
  },
  {
    "text": "and he is a maintainer of Prometheus",
    "start": "61199",
    "end": "64820"
  },
  {
    "text": "dsdb my name is Ruslan",
    "start": "64820",
    "end": "67820"
  },
  {
    "text": "I'm a member of open Telemetry community",
    "start": "67820",
    "end": "72299"
  },
  {
    "text": "and at grafana Labs I'm working on",
    "start": "72299",
    "end": "77040"
  },
  {
    "text": "otlp data ingestion into grafana cloud",
    "start": "77040",
    "end": "80900"
  },
  {
    "text": "yeah so before we talk about exponential",
    "start": "81000",
    "end": "83939"
  },
  {
    "text": "histograms let's go over a little bit of",
    "start": "83939",
    "end": "86159"
  },
  {
    "text": "Basics histogram is a distribution of",
    "start": "86159",
    "end": "88740"
  },
  {
    "text": "your observations where we put your",
    "start": "88740",
    "end": "91259"
  },
  {
    "text": "observations into something called",
    "start": "91259",
    "end": "92520"
  },
  {
    "text": "buckets in this particular example there",
    "start": "92520",
    "end": "95220"
  },
  {
    "text": "are four buckets the first one says",
    "start": "95220",
    "end": "96960"
  },
  {
    "text": "there are 15 observations which took",
    "start": "96960",
    "end": "100140"
  },
  {
    "text": "less than 0.1 seconds the x-axis is",
    "start": "100140",
    "end": "103320"
  },
  {
    "text": "showing you the Bounty of the buckets",
    "start": "103320",
    "end": "105180"
  },
  {
    "text": "and the y axis is the count in all of",
    "start": "105180",
    "end": "107520"
  },
  {
    "text": "those buckets",
    "start": "107520",
    "end": "108920"
  },
  {
    "text": "and this is how it is stored in",
    "start": "108920",
    "end": "111240"
  },
  {
    "text": "Prometheus right now as Beyond mentioned",
    "start": "111240",
    "end": "113460"
  },
  {
    "text": "uh it's quite expensive the classical",
    "start": "113460",
    "end": "115259"
  },
  {
    "text": "histograms every bucket takes one time",
    "start": "115259",
    "end": "118979"
  },
  {
    "text": "series in Prometheus on the right side",
    "start": "118979",
    "end": "121320"
  },
  {
    "text": "each line is a Time series in Prometheus",
    "start": "121320",
    "end": "124200"
  },
  {
    "text": "and in addition to a Time series for",
    "start": "124200",
    "end": "126600"
  },
  {
    "text": "every bucket you have a Time series for",
    "start": "126600",
    "end": "128759"
  },
  {
    "text": "the count you have a Time series for the",
    "start": "128759",
    "end": "130679"
  },
  {
    "text": "sum for the histogram so to represent a",
    "start": "130679",
    "end": "133080"
  },
  {
    "text": "single histogram you need a lot of Time",
    "start": "133080",
    "end": "134819"
  },
  {
    "text": "series so uh",
    "start": "134819",
    "end": "136920"
  },
  {
    "text": "there is there are few problems with",
    "start": "136920",
    "end": "138959"
  },
  {
    "text": "this design uh one thing is the buckets",
    "start": "138959",
    "end": "141599"
  },
  {
    "text": "are cumulative for example if one bucket",
    "start": "141599",
    "end": "145379"
  },
  {
    "text": "is filled uh all the buckets which come",
    "start": "145379",
    "end": "148440"
  },
  {
    "text": "after that need to account for this",
    "start": "148440",
    "end": "150180"
  },
  {
    "text": "count so the same uh histogram that we",
    "start": "150180",
    "end": "153660"
  },
  {
    "text": "saw here if we take a different",
    "start": "153660",
    "end": "155700"
  },
  {
    "text": "representation of buckets a lot of",
    "start": "155700",
    "end": "158099"
  },
  {
    "text": "buckets have repeated same values",
    "start": "158099",
    "end": "160040"
  },
  {
    "text": "because it's cumulative so it can get",
    "start": "160040",
    "end": "163019"
  },
  {
    "text": "expensive and let's say the bucket",
    "start": "163019",
    "end": "166260"
  },
  {
    "text": "representation was inefficient and you",
    "start": "166260",
    "end": "169739"
  },
  {
    "text": "thought of changing the bucket layout",
    "start": "169739",
    "end": "171840"
  },
  {
    "text": "now you have to reinstrument your code",
    "start": "171840",
    "end": "173700"
  },
  {
    "text": "and redeploy it everywhere that is still",
    "start": "173700",
    "end": "176519"
  },
  {
    "text": "one picture of this problem let's say",
    "start": "176519",
    "end": "178860"
  },
  {
    "text": "you redeployed a different bucket layout",
    "start": "178860",
    "end": "181620"
  },
  {
    "text": "later you cannot correlate them easily",
    "start": "181620",
    "end": "185180"
  },
  {
    "text": "so you had one different bucket layout",
    "start": "185180",
    "end": "187980"
  },
  {
    "text": "now you have a different bucket layout",
    "start": "187980",
    "end": "189300"
  },
  {
    "text": "you cannot mix and match them once you",
    "start": "189300",
    "end": "192360"
  },
  {
    "text": "have changed the buckets also it takes a",
    "start": "192360",
    "end": "195000"
  },
  {
    "text": "while to propagate all these changes",
    "start": "195000",
    "end": "196920"
  },
  {
    "text": "across your system and you have to wait",
    "start": "196920",
    "end": "198659"
  },
  {
    "text": "for a long time so that all of them have",
    "start": "198659",
    "end": "201180"
  },
  {
    "text": "a same bucket layout",
    "start": "201180",
    "end": "204300"
  },
  {
    "text": "and yeah again coming back to same thing",
    "start": "204300",
    "end": "206340"
  },
  {
    "text": "it takes a lot of Time series here",
    "start": "206340",
    "end": "209940"
  },
  {
    "text": "now comes the exponential buckets this",
    "start": "209940",
    "end": "212819"
  },
  {
    "start": "210000",
    "end": "431000"
  },
  {
    "text": "is the basis for the exponential",
    "start": "212819",
    "end": "214560"
  },
  {
    "text": "histograms that we are going to talk",
    "start": "214560",
    "end": "215940"
  },
  {
    "text": "about so I'm talking about the",
    "start": "215940",
    "end": "217860"
  },
  {
    "text": "exponential buckets in a neutral fashion",
    "start": "217860",
    "end": "219959"
  },
  {
    "text": "for both open Telemetry and Prometheus",
    "start": "219959",
    "end": "222980"
  },
  {
    "text": "so this is how the exponential bucket",
    "start": "222980",
    "end": "226080"
  },
  {
    "text": "boundaries look like so the bucket",
    "start": "226080",
    "end": "228420"
  },
  {
    "text": "boundaries are fixed but what you can",
    "start": "228420",
    "end": "230340"
  },
  {
    "text": "control is the resolution of the buckets",
    "start": "230340",
    "end": "233900"
  },
  {
    "text": "so I'll talk with example I've used the",
    "start": "233900",
    "end": "237659"
  },
  {
    "text": "formula on the right side which is 2",
    "start": "237659",
    "end": "239459"
  },
  {
    "text": "power of 2 power of minus scale for",
    "start": "239459",
    "end": "242040"
  },
  {
    "text": "example you saw Beyond using a factor of",
    "start": "242040",
    "end": "244560"
  },
  {
    "text": "2 power of 2 power of minus 3 so we get",
    "start": "244560",
    "end": "247200"
  },
  {
    "text": "that from this formula we'll start with",
    "start": "247200",
    "end": "249540"
  },
  {
    "text": "a simple",
    "start": "249540",
    "end": "250700"
  },
  {
    "text": "factor of 2 power of 2 power of 0 which",
    "start": "250700",
    "end": "254159"
  },
  {
    "text": "gives you a factor of 2. so we start all",
    "start": "254159",
    "end": "257220"
  },
  {
    "text": "the bases from the bucket boundary of",
    "start": "257220",
    "end": "259079"
  },
  {
    "text": "one so to get the next bucket boundary",
    "start": "259079",
    "end": "261479"
  },
  {
    "text": "you just multiply it with the factor and",
    "start": "261479",
    "end": "263460"
  },
  {
    "text": "you get 2 and you multiply it with the",
    "start": "263460",
    "end": "265259"
  },
  {
    "text": "same factor again and you get four so",
    "start": "265259",
    "end": "267240"
  },
  {
    "text": "it's like the percentage the ratio",
    "start": "267240",
    "end": "269880"
  },
  {
    "text": "between consecutive bucket boundaries is",
    "start": "269880",
    "end": "272520"
  },
  {
    "text": "same and to get the bucket boundary on",
    "start": "272520",
    "end": "274620"
  },
  {
    "text": "the left side of one you just divide by",
    "start": "274620",
    "end": "276060"
  },
  {
    "text": "2 and divide by 2 again and so on and",
    "start": "276060",
    "end": "278639"
  },
  {
    "text": "let's say this resolution was too high",
    "start": "278639",
    "end": "280680"
  },
  {
    "text": "for you you want to reduce the",
    "start": "280680",
    "end": "282000"
  },
  {
    "text": "resolution",
    "start": "282000",
    "end": "282840"
  },
  {
    "text": "so just change the scale to let's say",
    "start": "282840",
    "end": "285240"
  },
  {
    "text": "minus one so you get 2 power of 2 power",
    "start": "285240",
    "end": "287639"
  },
  {
    "text": "of 1 which is uh four so the bucket",
    "start": "287639",
    "end": "291060"
  },
  {
    "text": "boundaries are now like 1 4 16 and so on",
    "start": "291060",
    "end": "293699"
  },
  {
    "text": "and the similar thing on the other side",
    "start": "293699",
    "end": "295800"
  },
  {
    "text": "similarly there is two power four two",
    "start": "295800",
    "end": "297900"
  },
  {
    "text": "power eight and so on this is uh you are",
    "start": "297900",
    "end": "301380"
  },
  {
    "text": "reducing the resolution in this",
    "start": "301380",
    "end": "303600"
  },
  {
    "text": "direction",
    "start": "303600",
    "end": "304440"
  },
  {
    "text": "and on the other side if you wanted to",
    "start": "304440",
    "end": "306900"
  },
  {
    "text": "increase the resolution I'll again start",
    "start": "306900",
    "end": "309000"
  },
  {
    "text": "with the example of the factor 2 power",
    "start": "309000",
    "end": "312300"
  },
  {
    "text": "of 1 so you have a bucket boundary one",
    "start": "312300",
    "end": "315060"
  },
  {
    "text": "and two now you want to go to the",
    "start": "315060",
    "end": "317280"
  },
  {
    "text": "immediate next resolution where you will",
    "start": "317280",
    "end": "319740"
  },
  {
    "text": "put the scale as let's say one so it",
    "start": "319740",
    "end": "322979"
  },
  {
    "text": "will be two power of 2 power of minus 1",
    "start": "322979",
    "end": "324900"
  },
  {
    "text": "which is square root of 2. so one good",
    "start": "324900",
    "end": "327840"
  },
  {
    "text": "thing here is that the bucket boundaries",
    "start": "327840",
    "end": "330300"
  },
  {
    "text": "of factor two remain same in the higher",
    "start": "330300",
    "end": "334919"
  },
  {
    "text": "resolution so you still have one and two",
    "start": "334919",
    "end": "336720"
  },
  {
    "text": "and you get a new bucket boundary",
    "start": "336720",
    "end": "338759"
  },
  {
    "text": "between the existing buckets",
    "start": "338759",
    "end": "340860"
  },
  {
    "text": "and if you want to increase the",
    "start": "340860",
    "end": "342539"
  },
  {
    "text": "resolution again which is 2 power of 1",
    "start": "342539",
    "end": "345419"
  },
  {
    "text": "by 4.",
    "start": "345419",
    "end": "346620"
  },
  {
    "text": "then the bucket boundaries of the",
    "start": "346620",
    "end": "349259"
  },
  {
    "text": "previous resolution again stay constant",
    "start": "349259",
    "end": "351780"
  },
  {
    "text": "so I have color coded it in green which",
    "start": "351780",
    "end": "355139"
  },
  {
    "text": "is same across all the resolution",
    "start": "355139",
    "end": "356580"
  },
  {
    "text": "similar the the yellow and orange",
    "start": "356580",
    "end": "359600"
  },
  {
    "text": "so it's like with every increase in",
    "start": "359600",
    "end": "363060"
  },
  {
    "text": "resolution you are adding a new bucket",
    "start": "363060",
    "end": "364919"
  },
  {
    "text": "boundary between existing bucket",
    "start": "364919",
    "end": "366600"
  },
  {
    "text": "boundaries the",
    "start": "366600",
    "end": "369419"
  },
  {
    "text": "the property of bucket boundaries being",
    "start": "369419",
    "end": "372120"
  },
  {
    "text": "the same from the previous",
    "start": "372120",
    "end": "374180"
  },
  {
    "text": "resolution comes in handy here where",
    "start": "374180",
    "end": "378060"
  },
  {
    "text": "let's say you had a resolution of a",
    "start": "378060",
    "end": "380940"
  },
  {
    "text": "factor of 2 power 1 which is the first",
    "start": "380940",
    "end": "383759"
  },
  {
    "text": "bar chart here so the boundaries are one",
    "start": "383759",
    "end": "385860"
  },
  {
    "text": "two four eight and sixteen you can",
    "start": "385860",
    "end": "387900"
  },
  {
    "text": "anytime convert it to a lower resolution",
    "start": "387900",
    "end": "390240"
  },
  {
    "text": "so the one in the middle has a factor of",
    "start": "390240",
    "end": "393419"
  },
  {
    "text": "four so you can just add up the buckets",
    "start": "393419",
    "end": "395639"
  },
  {
    "text": "of the higher resolution to get the",
    "start": "395639",
    "end": "397979"
  },
  {
    "text": "histogram of a lower resolution and if",
    "start": "397979",
    "end": "400800"
  },
  {
    "text": "you want to reduce the resolution again",
    "start": "400800",
    "end": "402900"
  },
  {
    "text": "you can add up the buckets again so you",
    "start": "402900",
    "end": "406020"
  },
  {
    "text": "can always convert from a higher",
    "start": "406020",
    "end": "407880"
  },
  {
    "text": "resolution to a lower resolution",
    "start": "407880",
    "end": "409500"
  },
  {
    "text": "histogram",
    "start": "409500",
    "end": "411479"
  },
  {
    "text": "so this is one of the ways where the",
    "start": "411479",
    "end": "413759"
  },
  {
    "text": "changing bucket resolution doesn't",
    "start": "413759",
    "end": "416280"
  },
  {
    "text": "doesn't really harm in correlating",
    "start": "416280",
    "end": "418620"
  },
  {
    "text": "different histograms if you had a",
    "start": "418620",
    "end": "419940"
  },
  {
    "text": "histogram with a higher resolution and",
    "start": "419940",
    "end": "421440"
  },
  {
    "text": "histogram with a lower resolution we",
    "start": "421440",
    "end": "423360"
  },
  {
    "text": "just convert the histogram of the higher",
    "start": "423360",
    "end": "424740"
  },
  {
    "text": "resolution to a low resolution and you",
    "start": "424740",
    "end": "426600"
  },
  {
    "text": "can mix and match and do stuff with it",
    "start": "426600",
    "end": "429660"
  },
  {
    "text": "so that's about the basics of the bucket",
    "start": "429660",
    "end": "431819"
  },
  {
    "start": "431000",
    "end": "653000"
  },
  {
    "text": "boundaries uh now Russell is going to",
    "start": "431819",
    "end": "434160"
  },
  {
    "text": "talk about how it is stored in open",
    "start": "434160",
    "end": "435660"
  },
  {
    "text": "telemetry",
    "start": "435660",
    "end": "438259"
  },
  {
    "text": "so let's talk how those concepts are",
    "start": "438360",
    "end": "441360"
  },
  {
    "text": "represented in open Telemetry",
    "start": "441360",
    "end": "442800"
  },
  {
    "text": "exponential histograms",
    "start": "442800",
    "end": "444720"
  },
  {
    "text": "uh so here is a simplified simplified",
    "start": "444720",
    "end": "447479"
  },
  {
    "text": "overview of exponential uh histogram",
    "start": "447479",
    "end": "450900"
  },
  {
    "text": "data point with some Fields omitted for",
    "start": "450900",
    "end": "453900"
  },
  {
    "text": "the sake of simplicity",
    "start": "453900",
    "end": "455780"
  },
  {
    "text": "let's briefly discuss each uh each field",
    "start": "455780",
    "end": "459300"
  },
  {
    "text": "let's start with a scale",
    "start": "459300",
    "end": "461400"
  },
  {
    "text": "so Ganesh already mentioned that there",
    "start": "461400",
    "end": "463860"
  },
  {
    "text": "is a parameter called scale that",
    "start": "463860",
    "end": "465419"
  },
  {
    "text": "determines the resolution of exponential",
    "start": "465419",
    "end": "468360"
  },
  {
    "text": "histograms and he also mentioned about",
    "start": "468360",
    "end": "471139"
  },
  {
    "text": "buckets boundaries",
    "start": "471139",
    "end": "474120"
  },
  {
    "text": "um",
    "start": "474120",
    "end": "474960"
  },
  {
    "text": "but let's add some additional",
    "start": "474960",
    "end": "476880"
  },
  {
    "text": "information and talk about buckets",
    "start": "476880",
    "end": "479520"
  },
  {
    "text": "indexing so exponential histogram",
    "start": "479520",
    "end": "482340"
  },
  {
    "text": "packets also can be accessed by index",
    "start": "482340",
    "end": "487800"
  },
  {
    "text": "it is really important to note that",
    "start": "487800",
    "end": "490860"
  },
  {
    "text": "there is like zero index bucket and it",
    "start": "490860",
    "end": "493380"
  },
  {
    "text": "corresponds to the bucket with a lower",
    "start": "493380",
    "end": "494880"
  },
  {
    "text": "boundary of one",
    "start": "494880",
    "end": "496639"
  },
  {
    "text": "we will need this information later",
    "start": "496639",
    "end": "501479"
  },
  {
    "text": "the following",
    "start": "501479",
    "end": "503300"
  },
  {
    "text": "Fields sum and count the account is a",
    "start": "503300",
    "end": "507240"
  },
  {
    "text": "total population of",
    "start": "507240",
    "end": "509780"
  },
  {
    "text": "observation in a histogram and some is a",
    "start": "509780",
    "end": "512700"
  },
  {
    "text": "sum of all observational values in a",
    "start": "512700",
    "end": "514919"
  },
  {
    "text": "histogram",
    "start": "514919",
    "end": "516180"
  },
  {
    "text": "uh the optional Min and Max fields are",
    "start": "516180",
    "end": "518940"
  },
  {
    "text": "used to record a minimum and maximum",
    "start": "518940",
    "end": "521580"
  },
  {
    "text": "observation values in the histogram",
    "start": "521580",
    "end": "524279"
  },
  {
    "text": "the value of a start time",
    "start": "524279",
    "end": "527959"
  },
  {
    "text": "is used to",
    "start": "528120",
    "end": "530940"
  },
  {
    "text": "is actually denotes a start time of uh",
    "start": "530940",
    "end": "536339"
  },
  {
    "text": "observations collection",
    "start": "536339",
    "end": "539420"
  },
  {
    "text": "zero threshold and zero count defines",
    "start": "539420",
    "end": "542040"
  },
  {
    "text": "the zero bucket a zero bucket contains",
    "start": "542040",
    "end": "544680"
  },
  {
    "text": "actually a count of observations whose",
    "start": "544680",
    "end": "547560"
  },
  {
    "text": "values are less than or equal to the",
    "start": "547560",
    "end": "551160"
  },
  {
    "text": "zero threshold",
    "start": "551160",
    "end": "552660"
  },
  {
    "text": "zeros threshold is an arbitrary value",
    "start": "552660",
    "end": "555240"
  },
  {
    "text": "and it is not related to the scale",
    "start": "555240",
    "end": "560180"
  },
  {
    "text": "the last field is a positive buckets",
    "start": "560180",
    "end": "564779"
  },
  {
    "text": "please note that there is also negative",
    "start": "564779",
    "end": "566760"
  },
  {
    "text": "buckets and it starts separately but for",
    "start": "566760",
    "end": "569580"
  },
  {
    "text": "the sake of Simplicity we will focus",
    "start": "569580",
    "end": "571200"
  },
  {
    "text": "only on positive buckets",
    "start": "571200",
    "end": "573440"
  },
  {
    "text": "so exponential histogram",
    "start": "573440",
    "end": "577580"
  },
  {
    "text": "uses a dense representation of buckets",
    "start": "577740",
    "end": "581519"
  },
  {
    "text": "so the bucket range",
    "start": "581519",
    "end": "584519"
  },
  {
    "text": "is going to be represented by the single",
    "start": "584519",
    "end": "587339"
  },
  {
    "text": "offset value and value counts for those",
    "start": "587339",
    "end": "592440"
  },
  {
    "text": "buckets",
    "start": "592440",
    "end": "593940"
  },
  {
    "text": "so but let's take a look at an example",
    "start": "593940",
    "end": "596700"
  },
  {
    "text": "and see how uh the buckets of this",
    "start": "596700",
    "end": "599640"
  },
  {
    "text": "histogram is encoded so here is a an",
    "start": "599640",
    "end": "602700"
  },
  {
    "text": "example of a histogram that has a scale",
    "start": "602700",
    "end": "605339"
  },
  {
    "text": "of zero uh it has the following bucket",
    "start": "605339",
    "end": "609480"
  },
  {
    "text": "changes and as you can see there are",
    "start": "609480",
    "end": "612060"
  },
  {
    "text": "some value counts in those buckets",
    "start": "612060",
    "end": "616380"
  },
  {
    "text": "so the brackets of this histogram is",
    "start": "616380",
    "end": "619260"
  },
  {
    "text": "encoded as following",
    "start": "619260",
    "end": "621000"
  },
  {
    "text": "so we store all the value all the count",
    "start": "621000",
    "end": "624019"
  },
  {
    "text": "accounts for the buckets in a bucket",
    "start": "624019",
    "end": "627420"
  },
  {
    "text": "counts array",
    "start": "627420",
    "end": "629360"
  },
  {
    "text": "including also empty buckets the offset",
    "start": "629360",
    "end": "634260"
  },
  {
    "text": "is set to -1",
    "start": "634260",
    "end": "635839"
  },
  {
    "text": "because as there is a",
    "start": "635839",
    "end": "639980"
  },
  {
    "text": "zero index buckets that points to a",
    "start": "639980",
    "end": "642899"
  },
  {
    "text": "bucket with range one and two and there",
    "start": "642899",
    "end": "644459"
  },
  {
    "text": "is non-empty buckets on the left so we",
    "start": "644459",
    "end": "647459"
  },
  {
    "text": "have to shift the offset by one to the",
    "start": "647459",
    "end": "651360"
  },
  {
    "text": "left",
    "start": "651360",
    "end": "652380"
  },
  {
    "text": "yes that's it and Ganesh is going to",
    "start": "652380",
    "end": "654420"
  },
  {
    "start": "653000",
    "end": "833000"
  },
  {
    "text": "talk about Prometheus native histograms",
    "start": "654420",
    "end": "657720"
  },
  {
    "text": "yeah so the Prometheus native histograms",
    "start": "657720",
    "end": "661200"
  },
  {
    "text": "looks very similar to open telemetry so",
    "start": "661200",
    "end": "664620"
  },
  {
    "text": "we have a schema which is same as the",
    "start": "664620",
    "end": "667200"
  },
  {
    "text": "scale only the name is different but",
    "start": "667200",
    "end": "669360"
  },
  {
    "text": "it's actually the same thing as scale uh",
    "start": "669360",
    "end": "672240"
  },
  {
    "text": "in open telemetry",
    "start": "672240",
    "end": "675240"
  },
  {
    "text": "and the other fields like count some",
    "start": "675240",
    "end": "678060"
  },
  {
    "text": "zero threshold and zero count is exactly",
    "start": "678060",
    "end": "680880"
  },
  {
    "text": "same as open Telemetry so there is",
    "start": "680880",
    "end": "682620"
  },
  {
    "text": "nothing special here",
    "start": "682620",
    "end": "684480"
  },
  {
    "text": "there is one fundamental difference as",
    "start": "684480",
    "end": "686399"
  },
  {
    "text": "rasan mentioned when you have when you",
    "start": "686399",
    "end": "689519"
  },
  {
    "text": "specify a particular scale you you know",
    "start": "689519",
    "end": "692459"
  },
  {
    "text": "what are the bucket boundaries so you no",
    "start": "692459",
    "end": "694800"
  },
  {
    "text": "longer need to specify bucket with the",
    "start": "694800",
    "end": "696480"
  },
  {
    "text": "boundary you can just give an index and",
    "start": "696480",
    "end": "698040"
  },
  {
    "text": "you know and you can get the bucket",
    "start": "698040",
    "end": "699540"
  },
  {
    "text": "boundaries of the bucket in open",
    "start": "699540",
    "end": "701579"
  },
  {
    "text": "Telemetry uh like the zero index is the",
    "start": "701579",
    "end": "705540"
  },
  {
    "text": "bucket with the lower boundary of one",
    "start": "705540",
    "end": "707220"
  },
  {
    "text": "but in Prometheus it is shifted by one",
    "start": "707220",
    "end": "709680"
  },
  {
    "text": "in Prometheus the bucket with the upper",
    "start": "709680",
    "end": "712019"
  },
  {
    "text": "boundary of 1 is the bucket with index 0",
    "start": "712019",
    "end": "715920"
  },
  {
    "text": "that's the one fundamental difference in",
    "start": "715920",
    "end": "718140"
  },
  {
    "text": "indexing the buckets",
    "start": "718140",
    "end": "720480"
  },
  {
    "text": "and here comes the main difference",
    "start": "720480",
    "end": "723000"
  },
  {
    "text": "between the representation of histograms",
    "start": "723000",
    "end": "725160"
  },
  {
    "text": "in open telement and Prometheus we have",
    "start": "725160",
    "end": "728160"
  },
  {
    "text": "something called spans and deltas and",
    "start": "728160",
    "end": "731040"
  },
  {
    "text": "similar to open Telemetry like how we",
    "start": "731040",
    "end": "734279"
  },
  {
    "text": "talked right now I'm going to only talk",
    "start": "734279",
    "end": "735600"
  },
  {
    "text": "about the positive buckets uh for",
    "start": "735600",
    "end": "738000"
  },
  {
    "text": "positive observations similarly we have",
    "start": "738000",
    "end": "740040"
  },
  {
    "text": "a negative spans and negative Deltas",
    "start": "740040",
    "end": "742800"
  },
  {
    "text": "which are a mirror image of the positive",
    "start": "742800",
    "end": "745800"
  },
  {
    "text": "buckets which are stored separately but",
    "start": "745800",
    "end": "748440"
  },
  {
    "text": "for Simplicity we will only talk about",
    "start": "748440",
    "end": "749820"
  },
  {
    "text": "the positive stuff uh I'll take the same",
    "start": "749820",
    "end": "752880"
  },
  {
    "text": "example and explain how the spans and",
    "start": "752880",
    "end": "754920"
  },
  {
    "text": "Deltas are stored so Prometheus uses a",
    "start": "754920",
    "end": "758100"
  },
  {
    "text": "sparse representation of histograms as",
    "start": "758100",
    "end": "761220"
  },
  {
    "text": "opposed to the dense representation of",
    "start": "761220",
    "end": "762660"
  },
  {
    "text": "open Telemetry in this particular case",
    "start": "762660",
    "end": "766019"
  },
  {
    "text": "um spans has a list of tuples the zero",
    "start": "766019",
    "end": "770700"
  },
  {
    "text": "comma 4 tells you that the first bucket",
    "start": "770700",
    "end": "772920"
  },
  {
    "text": "starts at index 0 which is 0.5 to 1",
    "start": "772920",
    "end": "776820"
  },
  {
    "text": "that's the bucket with index 0 and there",
    "start": "776820",
    "end": "779220"
  },
  {
    "text": "are four buckets starting at this point",
    "start": "779220",
    "end": "781260"
  },
  {
    "text": "and then there is a gap of two buckets",
    "start": "781260",
    "end": "783660"
  },
  {
    "text": "so the second Tuple says that there is",
    "start": "783660",
    "end": "785579"
  },
  {
    "text": "an offset which is there is a gap of two",
    "start": "785579",
    "end": "787440"
  },
  {
    "text": "buckets and you have another bucket",
    "start": "787440",
    "end": "790200"
  },
  {
    "text": "stored there two comma one so this fans",
    "start": "790200",
    "end": "792660"
  },
  {
    "text": "tells you what's the representation of",
    "start": "792660",
    "end": "795120"
  },
  {
    "text": "the bucket in the layout and there is",
    "start": "795120",
    "end": "797639"
  },
  {
    "text": "Deltas Delta stores the Delta encoded",
    "start": "797639",
    "end": "800880"
  },
  {
    "text": "values of the buckets that are filled so",
    "start": "800880",
    "end": "803579"
  },
  {
    "text": "because there are five buckets filled",
    "start": "803579",
    "end": "805260"
  },
  {
    "text": "here there are only five numbers in the",
    "start": "805260",
    "end": "806760"
  },
  {
    "text": "Deltas and the Delta is taken with the",
    "start": "806760",
    "end": "809459"
  },
  {
    "text": "previous bucket",
    "start": "809459",
    "end": "810839"
  },
  {
    "text": "so let's say you had 10 empty buckets",
    "start": "810839",
    "end": "813779"
  },
  {
    "text": "between the fourth and the fifth bucket",
    "start": "813779",
    "end": "815579"
  },
  {
    "text": "in which case the Deltas won't change",
    "start": "815579",
    "end": "817980"
  },
  {
    "text": "only the spans which encodes the layout",
    "start": "817980",
    "end": "822300"
  },
  {
    "text": "changes for example it would be zero",
    "start": "822300",
    "end": "823740"
  },
  {
    "text": "comma four and ten comma 1 saying that",
    "start": "823740",
    "end": "825839"
  },
  {
    "text": "there are 10 empty buckets between the",
    "start": "825839",
    "end": "827459"
  },
  {
    "text": "first four and the last bucket so this",
    "start": "827459",
    "end": "829440"
  },
  {
    "text": "is how it is stored in Prometheus that's",
    "start": "829440",
    "end": "831180"
  },
  {
    "text": "the fundamental difference",
    "start": "831180",
    "end": "833519"
  },
  {
    "start": "833000",
    "end": "1119000"
  },
  {
    "text": "so now that we have this precedent set",
    "start": "833519",
    "end": "836459"
  },
  {
    "text": "rasana is going to talk about the",
    "start": "836459",
    "end": "838139"
  },
  {
    "text": "translation",
    "start": "838139",
    "end": "840620"
  },
  {
    "text": "at this point you should have a good",
    "start": "841139",
    "end": "843860"
  },
  {
    "text": "overview of open Telemetry exponential",
    "start": "843860",
    "end": "847260"
  },
  {
    "text": "and Prometheus native histogram",
    "start": "847260",
    "end": "848700"
  },
  {
    "text": "structures",
    "start": "848700",
    "end": "850740"
  },
  {
    "text": "uh so let's now explore how we can",
    "start": "850740",
    "end": "853980"
  },
  {
    "text": "translate exponential histogram to a",
    "start": "853980",
    "end": "856079"
  },
  {
    "text": "native histogram let's start with a",
    "start": "856079",
    "end": "858839"
  },
  {
    "text": "exponential scale and Native histogram",
    "start": "858839",
    "end": "862019"
  },
  {
    "text": "Shima",
    "start": "862019",
    "end": "864560"
  },
  {
    "text": "so native histogram Shima allows values",
    "start": "864560",
    "end": "868740"
  },
  {
    "text": "that allows Shima values that fall in a",
    "start": "868740",
    "end": "871139"
  },
  {
    "text": "range from -4 to 8 inclusively so if",
    "start": "871139",
    "end": "874800"
  },
  {
    "text": "exponential scale has a value greater",
    "start": "874800",
    "end": "877079"
  },
  {
    "text": "than 8 we can downscale the histogram",
    "start": "877079",
    "end": "880380"
  },
  {
    "text": "and merge the buckets that what Ganesh",
    "start": "880380",
    "end": "883560"
  },
  {
    "text": "mentioned before",
    "start": "883560",
    "end": "885480"
  },
  {
    "text": "if a scale is less than -4 the histogram",
    "start": "885480",
    "end": "890639"
  },
  {
    "text": "data points will be dropped",
    "start": "890639",
    "end": "893220"
  },
  {
    "text": "it was mentioning that",
    "start": "893220",
    "end": "896300"
  },
  {
    "text": "the histograms with a scale that is less",
    "start": "896300",
    "end": "900360"
  },
  {
    "text": "than minus 4 will result in a bucket",
    "start": "900360",
    "end": "902820"
  },
  {
    "text": "range in a really wide bucket ranges",
    "start": "902820",
    "end": "906139"
  },
  {
    "text": "and the Practical use of such wide",
    "start": "906139",
    "end": "910740"
  },
  {
    "text": "ranges is actually questionable",
    "start": "910740",
    "end": "914160"
  },
  {
    "text": "next field next Fields count and some so",
    "start": "914160",
    "end": "917760"
  },
  {
    "text": "the account and sum of exponential and",
    "start": "917760",
    "end": "920040"
  },
  {
    "text": "Native histograms are directly",
    "start": "920040",
    "end": "921720"
  },
  {
    "text": "translated",
    "start": "921720",
    "end": "924439"
  },
  {
    "text": "Prometheus doesn't have",
    "start": "924779",
    "end": "927000"
  },
  {
    "text": "a mean and Max Fields so how do we",
    "start": "927000",
    "end": "930480"
  },
  {
    "text": "handle translation of those fields so if",
    "start": "930480",
    "end": "933660"
  },
  {
    "text": "you don't you can use prompt ql",
    "start": "933660",
    "end": "936740"
  },
  {
    "text": "histogram quantile function to",
    "start": "936740",
    "end": "940740"
  },
  {
    "text": "approximate mean and Max values of the",
    "start": "940740",
    "end": "944279"
  },
  {
    "text": "observation values from the observation",
    "start": "944279",
    "end": "946139"
  },
  {
    "text": "values",
    "start": "946139",
    "end": "948240"
  },
  {
    "text": "start time start time Prometheus native",
    "start": "948240",
    "end": "951959"
  },
  {
    "text": "histogram doesn't have relevant Fields",
    "start": "951959",
    "end": "954420"
  },
  {
    "text": "so we don't use the start time field in",
    "start": "954420",
    "end": "957779"
  },
  {
    "text": "in the translation",
    "start": "957779",
    "end": "960120"
  },
  {
    "text": "so zero bucket Fields so zeros threshold",
    "start": "960120",
    "end": "963600"
  },
  {
    "text": "and zero count fields of exponential and",
    "start": "963600",
    "end": "967199"
  },
  {
    "text": "Native histogram",
    "start": "967199",
    "end": "969060"
  },
  {
    "text": "are translated directly and to be left",
    "start": "969060",
    "end": "971880"
  },
  {
    "text": "with positive brackets",
    "start": "971880",
    "end": "975180"
  },
  {
    "text": "so what we are trying to do here so we",
    "start": "975180",
    "end": "979139"
  },
  {
    "text": "are essentially trying to convert",
    "start": "979139",
    "end": "981560"
  },
  {
    "text": "dense buckets layout representation of",
    "start": "981560",
    "end": "984920"
  },
  {
    "text": "exponential histogram to us Paris",
    "start": "984920",
    "end": "987959"
  },
  {
    "text": "buckets layout representation of native",
    "start": "987959",
    "end": "991320"
  },
  {
    "text": "histogram",
    "start": "991320",
    "end": "993180"
  },
  {
    "text": "uh so let's walk uh",
    "start": "993180",
    "end": "996079"
  },
  {
    "text": "through the translation steps",
    "start": "996079",
    "end": "1000100"
  },
  {
    "text": "so let's look at an example of the",
    "start": "1000620",
    "end": "1002720"
  },
  {
    "text": "histograms that we already familiar with",
    "start": "1002720",
    "end": "1004279"
  },
  {
    "text": "and we all already know how these",
    "start": "1004279",
    "end": "1007459"
  },
  {
    "text": "buckets are represented by two types of",
    "start": "1007459",
    "end": "1009560"
  },
  {
    "text": "histograms",
    "start": "1009560",
    "end": "1011480"
  },
  {
    "text": "so let's start with the translation",
    "start": "1011480",
    "end": "1013759"
  },
  {
    "text": "so first",
    "start": "1013759",
    "end": "1015820"
  },
  {
    "text": "contiguous non-empty buckets of an",
    "start": "1015820",
    "end": "1019220"
  },
  {
    "text": "exponential histogram is going to be",
    "start": "1019220",
    "end": "1021440"
  },
  {
    "text": "encoded by",
    "start": "1021440",
    "end": "1023020"
  },
  {
    "text": "the span of the lengths fall and the",
    "start": "1023020",
    "end": "1026780"
  },
  {
    "text": "absolute count values of exponential",
    "start": "1026780",
    "end": "1028459"
  },
  {
    "text": "histogram are going to be encoded using",
    "start": "1028459",
    "end": "1032000"
  },
  {
    "text": "the Delta encoding so we see that",
    "start": "1032000",
    "end": "1033740"
  },
  {
    "text": "absolute values two one three two and",
    "start": "1033740",
    "end": "1035959"
  },
  {
    "text": "the Delta encoding would result into two",
    "start": "1035959",
    "end": "1038298"
  },
  {
    "text": "minus one two minus one",
    "start": "1038299",
    "end": "1040160"
  },
  {
    "text": "so we also know that there is a",
    "start": "1040160",
    "end": "1042860"
  },
  {
    "text": "difference in zero index buckets and",
    "start": "1042860",
    "end": "1046880"
  },
  {
    "text": "that native histogram offset is shifted",
    "start": "1046880",
    "end": "1051320"
  },
  {
    "text": "by one",
    "start": "1051320",
    "end": "1052820"
  },
  {
    "text": "so we have to actually adjust as the",
    "start": "1052820",
    "end": "1056360"
  },
  {
    "text": "offset values of native histogram spans",
    "start": "1056360",
    "end": "1059840"
  },
  {
    "text": "so we have to do it actually only for",
    "start": "1059840",
    "end": "1062480"
  },
  {
    "text": "the first span because all the",
    "start": "1062480",
    "end": "1064700"
  },
  {
    "text": "consequent span also all the sub",
    "start": "1064700",
    "end": "1067760"
  },
  {
    "text": "subsequent spans are going to be created",
    "start": "1067760",
    "end": "1070039"
  },
  {
    "text": "based on",
    "start": "1070039",
    "end": "1071620"
  },
  {
    "text": "the preceding spans",
    "start": "1071620",
    "end": "1074120"
  },
  {
    "text": "so we see that offset was minor minus",
    "start": "1074120",
    "end": "1076220"
  },
  {
    "text": "one and for the first span we have the",
    "start": "1076220",
    "end": "1078919"
  },
  {
    "text": "offset of zero",
    "start": "1078919",
    "end": "1080419"
  },
  {
    "text": "so the sparse buckets are encoded with a",
    "start": "1080419",
    "end": "1084020"
  },
  {
    "text": "subsequent uh offset value of the span",
    "start": "1084020",
    "end": "1088039"
  },
  {
    "text": "of the next panel",
    "start": "1088039",
    "end": "1089600"
  },
  {
    "text": "and we left with a",
    "start": "1089600",
    "end": "1091760"
  },
  {
    "text": "one non-empty bucket that has absolute",
    "start": "1091760",
    "end": "1096559"
  },
  {
    "text": "count value of three and it's going to",
    "start": "1096559",
    "end": "1098539"
  },
  {
    "text": "be encoded with a span",
    "start": "1098539",
    "end": "1101299"
  },
  {
    "text": "that has offset of two and the lengths",
    "start": "1101299",
    "end": "1104299"
  },
  {
    "text": "of one and the Delta value for this",
    "start": "1104299",
    "end": "1107299"
  },
  {
    "text": "um",
    "start": "1107299",
    "end": "1108700"
  },
  {
    "text": "bucket is one",
    "start": "1108700",
    "end": "1110840"
  },
  {
    "text": "so at this point we have translated",
    "start": "1110840",
    "end": "1113080"
  },
  {
    "text": "the exponential histogram to",
    "start": "1113080",
    "end": "1116900"
  },
  {
    "text": "um Native histogram",
    "start": "1116900",
    "end": "1119240"
  },
  {
    "start": "1119000",
    "end": "1209000"
  },
  {
    "text": "so we are done with the theoretical part",
    "start": "1119240",
    "end": "1122179"
  },
  {
    "text": "of the talk so now let's take a look at",
    "start": "1122179",
    "end": "1124640"
  },
  {
    "text": "hypothetical system setup that uses",
    "start": "1124640",
    "end": "1127760"
  },
  {
    "text": "exponential histograms",
    "start": "1127760",
    "end": "1130700"
  },
  {
    "text": "so in this setup we have a hotel",
    "start": "1130700",
    "end": "1133220"
  },
  {
    "text": "instrumented application logic that",
    "start": "1133220",
    "end": "1135140"
  },
  {
    "text": "produces",
    "start": "1135140",
    "end": "1136280"
  },
  {
    "text": "exponential histograms and hotel",
    "start": "1136280",
    "end": "1140059"
  },
  {
    "text": "collector receives this a tltp payload",
    "start": "1140059",
    "end": "1142940"
  },
  {
    "text": "as it has exponential histograms So",
    "start": "1142940",
    "end": "1146440"
  },
  {
    "text": "currently the translation from",
    "start": "1146440",
    "end": "1149660"
  },
  {
    "text": "exponential to Native histograms is",
    "start": "1149660",
    "end": "1151400"
  },
  {
    "text": "implemented only in a hotel collector",
    "start": "1151400",
    "end": "1154640"
  },
  {
    "text": "Prometheus remote right exporter",
    "start": "1154640",
    "end": "1158500"
  },
  {
    "text": "so uh just we have to enable uh",
    "start": "1158500",
    "end": "1163400"
  },
  {
    "text": "remote right receiver on a primitive",
    "start": "1163400",
    "end": "1166520"
  },
  {
    "text": "server and additionally we have to also",
    "start": "1166520",
    "end": "1169600"
  },
  {
    "text": "enable the native histogram feature",
    "start": "1169600",
    "end": "1172880"
  },
  {
    "text": "uh since it is still a beta feature in",
    "start": "1172880",
    "end": "1177020"
  },
  {
    "text": "in parameters",
    "start": "1177020",
    "end": "1179179"
  },
  {
    "text": "um besides that we don't have to uh",
    "start": "1179179",
    "end": "1182539"
  },
  {
    "text": "add any other configuration to a",
    "start": "1182539",
    "end": "1184280"
  },
  {
    "text": "telcollector because Primitives removed",
    "start": "1184280",
    "end": "1186860"
  },
  {
    "text": "right exporter translates the histograms",
    "start": "1186860",
    "end": "1189320"
  },
  {
    "text": "automatically",
    "start": "1189320",
    "end": "1190820"
  },
  {
    "text": "so if you want to learn more about",
    "start": "1190820",
    "end": "1192520"
  },
  {
    "text": "exponential and Native histograms you",
    "start": "1192520",
    "end": "1195200"
  },
  {
    "text": "can take a look at Otep about adding",
    "start": "1195200",
    "end": "1197480"
  },
  {
    "text": "exponential bucketing to his histogram",
    "start": "1197480",
    "end": "1199700"
  },
  {
    "text": "profit above or design dock about sparse",
    "start": "1199700",
    "end": "1204919"
  },
  {
    "text": "high resolution histograms for",
    "start": "1204919",
    "end": "1206480"
  },
  {
    "text": "Prometheus from Burn",
    "start": "1206480",
    "end": "1210020"
  },
  {
    "start": "1209000",
    "end": "1558000"
  },
  {
    "text": "thank you thank you for your attention",
    "start": "1210020",
    "end": "1211220"
  },
  {
    "text": "if you want to get the slides you can",
    "start": "1211220",
    "end": "1212660"
  },
  {
    "text": "scan this code and if you want to talk",
    "start": "1212660",
    "end": "1216260"
  },
  {
    "text": "to us you can find us at the Boost",
    "start": "1216260",
    "end": "1218419"
  },
  {
    "text": "number 36 I think starting from tomorrow",
    "start": "1218419",
    "end": "1222639"
  },
  {
    "text": "thank you",
    "start": "1229580",
    "end": "1230900"
  },
  {
    "text": "um as I am the one running around for",
    "start": "1230900",
    "end": "1233419"
  },
  {
    "text": "questions I get to ask a question",
    "start": "1233419",
    "end": "1235580"
  },
  {
    "text": "um so why is why isn't it called the",
    "start": "1235580",
    "end": "1238520"
  },
  {
    "text": "same thing why is one exponential",
    "start": "1238520",
    "end": "1240020"
  },
  {
    "text": "histogram another native histograms uh",
    "start": "1240020",
    "end": "1243559"
  },
  {
    "text": "okay",
    "start": "1243559",
    "end": "1244539"
  },
  {
    "text": "I can tell about Prometheus uh Brian can",
    "start": "1244539",
    "end": "1248240"
  },
  {
    "text": "correct me if I'm wrong so a Prometheus",
    "start": "1248240",
    "end": "1251380"
  },
  {
    "text": "like I showed how it represented before",
    "start": "1251380",
    "end": "1254539"
  },
  {
    "text": "it was a hack to show histograms in Time",
    "start": "1254539",
    "end": "1258020"
  },
  {
    "text": "series we had together her multiple",
    "start": "1258020",
    "end": "1261020"
  },
  {
    "text": "times to show a particular histogram but",
    "start": "1261020",
    "end": "1264200"
  },
  {
    "text": "right now with the native histograms",
    "start": "1264200",
    "end": "1266440"
  },
  {
    "text": "Prometheus is getting the native support",
    "start": "1266440",
    "end": "1268880"
  },
  {
    "text": "of storing the histograms structure in",
    "start": "1268880",
    "end": "1271820"
  },
  {
    "text": "the tstp the tstp could only store float",
    "start": "1271820",
    "end": "1274580"
  },
  {
    "text": "64 as a value previously but now",
    "start": "1274580",
    "end": "1277400"
  },
  {
    "text": "Prometheus can store the complex data",
    "start": "1277400",
    "end": "1279620"
  },
  {
    "text": "structure of a histogram in the tsdb",
    "start": "1279620",
    "end": "1281780"
  },
  {
    "text": "natively so in case of Prometheus we",
    "start": "1281780",
    "end": "1284360"
  },
  {
    "text": "call it a native histogram in the",
    "start": "1284360",
    "end": "1286460"
  },
  {
    "text": "context of Prometheus but the",
    "start": "1286460",
    "end": "1288559"
  },
  {
    "text": "exponential histogram is the actual",
    "start": "1288559",
    "end": "1290840"
  },
  {
    "text": "thing that encompasses the fundamentals",
    "start": "1290840",
    "end": "1293900"
  },
  {
    "text": "of the histogram so",
    "start": "1293900",
    "end": "1295340"
  },
  {
    "text": "that's why open Telemetry is exponential",
    "start": "1295340",
    "end": "1297140"
  },
  {
    "text": "I guess that makes sense yeah any other",
    "start": "1297140",
    "end": "1299419"
  },
  {
    "text": "questions oh yeah we have one here",
    "start": "1299419",
    "end": "1302919"
  },
  {
    "text": "Hi how are you all using um the native",
    "start": "1303799",
    "end": "1307340"
  },
  {
    "text": "histograms at grafana can you give an",
    "start": "1307340",
    "end": "1309500"
  },
  {
    "text": "example",
    "start": "1309500",
    "end": "1311000"
  },
  {
    "text": "yeah so the talk by Beyond was the only",
    "start": "1311000",
    "end": "1315740"
  },
  {
    "text": "thing that we are using for Instagrams I",
    "start": "1315740",
    "end": "1318020"
  },
  {
    "text": "guess we don't have it in production yet",
    "start": "1318020",
    "end": "1319940"
  },
  {
    "text": "we are getting there slowly so we are",
    "start": "1319940",
    "end": "1322880"
  },
  {
    "text": "still in the phase of testing out the",
    "start": "1322880",
    "end": "1325039"
  },
  {
    "text": "histograms in an experimental fashion",
    "start": "1325039",
    "end": "1327679"
  },
  {
    "text": "but uh as soon as we have something",
    "start": "1327679",
    "end": "1330440"
  },
  {
    "text": "ready in grafana member for example we",
    "start": "1330440",
    "end": "1333260"
  },
  {
    "text": "will start to scrape it in Prometheus",
    "start": "1333260",
    "end": "1335120"
  },
  {
    "text": "and remote write it to grafana member",
    "start": "1335120",
    "end": "1337760"
  },
  {
    "text": "once it has a stable support and that's",
    "start": "1337760",
    "end": "1341000"
  },
  {
    "text": "our plan to use native scrums across our",
    "start": "1341000",
    "end": "1344000"
  },
  {
    "text": "environment",
    "start": "1344000",
    "end": "1346480"
  },
  {
    "text": "yep Beyond has a question",
    "start": "1347120",
    "end": "1350919"
  },
  {
    "text": "so did the you said the schemers or the",
    "start": "1352820",
    "end": "1357559"
  },
  {
    "text": "um scale has different limits right in",
    "start": "1357559",
    "end": "1360980"
  },
  {
    "text": "in hotel is unlimited essentially did it",
    "start": "1360980",
    "end": "1363200"
  },
  {
    "text": "ever happen in practice that you had to",
    "start": "1363200",
    "end": "1367220"
  },
  {
    "text": "like that that hotel was sending a scale",
    "start": "1367220",
    "end": "1369980"
  },
  {
    "text": "that Prometheus couldn't handle",
    "start": "1369980",
    "end": "1372799"
  },
  {
    "text": "was that like more theoretical problem",
    "start": "1372799",
    "end": "1376159"
  },
  {
    "text": "I guess the question was was there any",
    "start": "1376159",
    "end": "1378620"
  },
  {
    "text": "case where Hotel was sending a scale",
    "start": "1378620",
    "end": "1381740"
  },
  {
    "text": "that Prometheus could not handle yeah",
    "start": "1381740",
    "end": "1386320"
  },
  {
    "text": "there's a case when you have a scale",
    "start": "1386419",
    "end": "1388520"
  },
  {
    "text": "that is uh lowers and minus four I think",
    "start": "1388520",
    "end": "1391880"
  },
  {
    "text": "for that case we just like Drop current",
    "start": "1391880",
    "end": "1394400"
  },
  {
    "text": "implementation just drops the histogram",
    "start": "1394400",
    "end": "1397100"
  },
  {
    "text": "data points now I think there were some",
    "start": "1397100",
    "end": "1399500"
  },
  {
    "text": "uh not suggestions some ideas from the",
    "start": "1399500",
    "end": "1403700"
  },
  {
    "text": "community uh",
    "start": "1403700",
    "end": "1406039"
  },
  {
    "text": "to",
    "start": "1406039",
    "end": "1407900"
  },
  {
    "text": "employ like infinite buckets bucket for",
    "start": "1407900",
    "end": "1411620"
  },
  {
    "text": "that or maybe",
    "start": "1411620",
    "end": "1413679"
  },
  {
    "text": "set the minimum scale in hotel SDK kind",
    "start": "1413679",
    "end": "1419000"
  },
  {
    "text": "of to handle this issue",
    "start": "1419000",
    "end": "1421640"
  },
  {
    "text": "and if it's higher than eight then we",
    "start": "1421640",
    "end": "1424280"
  },
  {
    "text": "can just like downscale",
    "start": "1424280",
    "end": "1427039"
  },
  {
    "text": "okay but the question is did it actually",
    "start": "1427039",
    "end": "1429320"
  },
  {
    "text": "happen in practice right in theory you",
    "start": "1429320",
    "end": "1431600"
  },
  {
    "text": "explained it right I mean if it ever",
    "start": "1431600",
    "end": "1433520"
  },
  {
    "text": "happens in practice per week you will",
    "start": "1433520",
    "end": "1435140"
  },
  {
    "text": "just extend their range right I think",
    "start": "1435140",
    "end": "1437480"
  },
  {
    "text": "the Prometheus stance is there is just",
    "start": "1437480",
    "end": "1440059"
  },
  {
    "text": "it will never happen in practice but if",
    "start": "1440059",
    "end": "1441679"
  },
  {
    "text": "it does Prometheus it'll change promise",
    "start": "1441679",
    "end": "1446440"
  },
  {
    "text": "yeah any other questions",
    "start": "1447760",
    "end": "1451100"
  },
  {
    "text": "okay we have one more question I think",
    "start": "1451100",
    "end": "1452780"
  },
  {
    "text": "this would be the final one",
    "start": "1452780",
    "end": "1455620"
  },
  {
    "text": "getting my workout and",
    "start": "1457220",
    "end": "1460600"
  },
  {
    "text": "uh so you talked about open Telemetry",
    "start": "1461240",
    "end": "1463880"
  },
  {
    "text": "using a dense representation and proving",
    "start": "1463880",
    "end": "1466520"
  },
  {
    "text": "these using as far as representation of",
    "start": "1466520",
    "end": "1468200"
  },
  {
    "text": "the positive and negative buckets it was",
    "start": "1468200",
    "end": "1470299"
  },
  {
    "text": "my understanding I thought that the",
    "start": "1470299",
    "end": "1471620"
  },
  {
    "text": "positive buckets in otlp was a repeating",
    "start": "1471620",
    "end": "1474380"
  },
  {
    "text": "value so that the offset could skip a",
    "start": "1474380",
    "end": "1477260"
  },
  {
    "text": "gap and be used to create a sparse",
    "start": "1477260",
    "end": "1479120"
  },
  {
    "text": "representation is that correct or do I",
    "start": "1479120",
    "end": "1480860"
  },
  {
    "text": "have a misunderstanding there",
    "start": "1480860",
    "end": "1483020"
  },
  {
    "text": "can you repeat the last part of your",
    "start": "1483020",
    "end": "1484640"
  },
  {
    "text": "question I could not sure so if the",
    "start": "1484640",
    "end": "1487700"
  },
  {
    "text": "positive buckets is a repeating value",
    "start": "1487700",
    "end": "1489799"
  },
  {
    "text": "and you have an offset starting at",
    "start": "1489799",
    "end": "1491480"
  },
  {
    "text": "negative one like you had before but",
    "start": "1491480",
    "end": "1493400"
  },
  {
    "text": "then a gap of two buckets so you've got",
    "start": "1493400",
    "end": "1495080"
  },
  {
    "text": "four values you could then have an",
    "start": "1495080",
    "end": "1497299"
  },
  {
    "text": "another positive buckets value in that",
    "start": "1497299",
    "end": "1499880"
  },
  {
    "text": "repeating value set that has an offset",
    "start": "1499880",
    "end": "1501799"
  },
  {
    "text": "of four to represent that last bucket is",
    "start": "1501799",
    "end": "1505159"
  },
  {
    "text": "is that correct",
    "start": "1505159",
    "end": "1507080"
  },
  {
    "text": "so",
    "start": "1507080",
    "end": "1510080"
  },
  {
    "text": "I still did not understand the question",
    "start": "1510260",
    "end": "1512059"
  },
  {
    "text": "completely but uh was there a question",
    "start": "1512059",
    "end": "1514039"
  },
  {
    "text": "like if there was a gap of four buckets",
    "start": "1514039",
    "end": "1516620"
  },
  {
    "text": "something like that I'm sorry I I guess",
    "start": "1516620",
    "end": "1519679"
  },
  {
    "text": "the question was does open Telemetry",
    "start": "1519679",
    "end": "1521780"
  },
  {
    "text": "really use a dense representation does",
    "start": "1521780",
    "end": "1523640"
  },
  {
    "text": "it have to have zero values for all",
    "start": "1523640",
    "end": "1525679"
  },
  {
    "text": "buckets that are empty or is that",
    "start": "1525679",
    "end": "1527600"
  },
  {
    "text": "possible to create a sparse",
    "start": "1527600",
    "end": "1528679"
  },
  {
    "text": "representation within the otlp and have",
    "start": "1528679",
    "end": "1530600"
  },
  {
    "text": "that savings okay so question is it like",
    "start": "1530600",
    "end": "1533600"
  },
  {
    "text": "can open Telemetry use this password",
    "start": "1533600",
    "end": "1535279"
  },
  {
    "text": "presentation",
    "start": "1535279",
    "end": "1536539"
  },
  {
    "text": "for the zero buckets",
    "start": "1536539",
    "end": "1539000"
  },
  {
    "text": "I'm not sure",
    "start": "1539000",
    "end": "1541419"
  },
  {
    "text": "the slant says no you can't have passed",
    "start": "1541419",
    "end": "1544400"
  },
  {
    "text": "a presentation in open history",
    "start": "1544400",
    "end": "1547480"
  },
  {
    "text": "cool all right uh that's it but like the",
    "start": "1548120",
    "end": "1550580"
  },
  {
    "text": "speakers will be around if you have more",
    "start": "1550580",
    "end": "1552020"
  },
  {
    "text": "questions uh yeah thank you",
    "start": "1552020",
    "end": "1555510"
  },
  {
    "text": "[Applause]",
    "start": "1555510",
    "end": "1560539"
  }
]