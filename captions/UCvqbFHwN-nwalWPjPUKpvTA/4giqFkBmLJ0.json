[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "thanks for sticking around this long and I'm acutely aware of the fact that I'm",
    "start": "0",
    "end": "5009"
  },
  {
    "text": "probably the last thing between you and a beer and I take this responsibility very seriously so with no further ado",
    "start": "5009",
    "end": "12420"
  },
  {
    "text": "let's get going we're going to be taking on a little bit of a deeper dive into the storage working group in the CNC F",
    "start": "12420",
    "end": "18210"
  },
  {
    "text": "today give you an idea of particularly a white paper that we've been writing",
    "start": "18210",
    "end": "23310"
  },
  {
    "text": "Aleks myself and several others some of whom were in the room have tried to put",
    "start": "23310",
    "end": "28800"
  },
  {
    "text": "together some information that we hope will be useful to consumers of cloud native storage to kind of standardize",
    "start": "28800",
    "end": "35219"
  },
  {
    "text": "and help everyone use the same language when discussing this stuff and get a sort of a higher level overview which",
    "start": "35219",
    "end": "41340"
  },
  {
    "text": "will hopefully help you categorize the different the myriad of different storage options that seem to be",
    "start": "41340",
    "end": "47550"
  },
  {
    "text": "available today we'll have a Q&A session at the end and between Alex and I are we",
    "start": "47550",
    "end": "54180"
  },
  {
    "text": "going to kind of take you through the material that we have here today feel free to interrupt along the way if there",
    "start": "54180",
    "end": "59219"
  },
  {
    "text": "are any urgent questions or comments that you think can't wait till the Q&A section at the end I don't mind people",
    "start": "59219",
    "end": "65010"
  },
  {
    "text": "interrupting and with no further ado so",
    "start": "65010",
    "end": "70020"
  },
  {
    "start": "68000",
    "end": "68000"
  },
  {
    "text": "what we try to do is a combination of things as I said that the overall aim was to educate people and provide a",
    "start": "70020",
    "end": "76409"
  },
  {
    "text": "common platform of language for people to have conversations about what the most appropriate forms of storage are",
    "start": "76409",
    "end": "82229"
  },
  {
    "text": "for various different use cases in the cloud native environment we try to define the attributes of storage systems",
    "start": "82229",
    "end": "89130"
  },
  {
    "text": "and particularly as they pertain to cloud native storage which in many cases is distributed and that adds various",
    "start": "89130",
    "end": "96180"
  },
  {
    "text": "interesting properties and attributes we also try to give you know clearer",
    "start": "96180",
    "end": "101240"
  },
  {
    "text": "definitions of the different layers that constitute storage systems so many of",
    "start": "101240",
    "end": "106829"
  },
  {
    "text": "you might be familiar with the fact that you obviously have a data access interface you you know you need to be able to read and write the data but you",
    "start": "106829",
    "end": "112680"
  },
  {
    "text": "typically also need to be able to provision volumes back them up and then in many cases you also need other forms",
    "start": "112680",
    "end": "118530"
  },
  {
    "text": "of of api's which are things for like managing distributed storage systems in",
    "start": "118530",
    "end": "124200"
  },
  {
    "text": "many cases the actual operations of of some of these big distributed storage",
    "start": "124200",
    "end": "129420"
  },
  {
    "text": "systems are big enough that you need a whole nother system to manage them for you so just understanding where the",
    "start": "129420",
    "end": "135780"
  },
  {
    "text": "interfaces between those pieces are and and what the vocabulary around them is we decided was a useful thing to agree",
    "start": "135780",
    "end": "143130"
  },
  {
    "text": "upon then again you know within any one of those sets of interfaces you have a",
    "start": "143130",
    "end": "149310"
  },
  {
    "text": "variety of different options available so volumes are one example but there are many other ways that you can access",
    "start": "149310",
    "end": "154920"
  },
  {
    "text": "storage and we'll have a look at those and and the various different interfaces for managing things these are the people",
    "start": "154920",
    "end": "161940"
  },
  {
    "start": "161000",
    "end": "161000"
  },
  {
    "text": "who were the primary authors of the document you might recognize some of the names there in fact we're fairly proud",
    "start": "161940",
    "end": "169050"
  },
  {
    "text": "of the fact that we got some pretty serious experts involved here you know if you want to describe a key value",
    "start": "169050",
    "end": "176100"
  },
  {
    "text": "stores they're not a lot of better people in the world than the author of Etsy D to tell you what a key value",
    "start": "176100",
    "end": "181200"
  },
  {
    "text": "store is there's one example I think we did fairly well at getting you know pretty knowledgeable people to",
    "start": "181200",
    "end": "187790"
  },
  {
    "text": "distill the vast amount of information that's out there into into something so",
    "start": "187790",
    "end": "193110"
  },
  {
    "text": "hopefully useful so as I mentioned",
    "start": "193110",
    "end": "198210"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "they're they're very different many different layers interfaces etc in in a",
    "start": "198210",
    "end": "203580"
  },
  {
    "text": "complete storage system rather than you know focus too much on the the architecture initially I think what's",
    "start": "203580",
    "end": "210150"
  },
  {
    "text": "what's perhaps a better starting point is to understand what the attributes of a storage system are and in particular",
    "start": "210150",
    "end": "216530"
  },
  {
    "text": "those are the things that you usually need to match to your application so if",
    "start": "216530",
    "end": "221970"
  },
  {
    "text": "your application needs you know strong consistency then you need to go and look for strongly consistent systems and then",
    "start": "221970",
    "end": "228930"
  },
  {
    "text": "the rest of the solution kind of falls out of that rather than the other way around rather than say I want to use you",
    "start": "228930",
    "end": "236730"
  },
  {
    "text": "know system XYZ because everybody says it's cool and then try and force my application to use that thing which may",
    "start": "236730",
    "end": "243480"
  },
  {
    "text": "not actually be the right match or vice versa so we identified what we thought",
    "start": "243480",
    "end": "249030"
  },
  {
    "text": "were a very useful set of attributes there are more than this but but we focused on what we thought were the most",
    "start": "249030",
    "end": "254250"
  },
  {
    "text": "important ones availability scalability performance consistency and durability",
    "start": "254250",
    "end": "259590"
  },
  {
    "text": "now these are all you know fairly short words I think most people think they understand what all of the mean",
    "start": "259590",
    "end": "265590"
  },
  {
    "text": "turns out some of them are more complex than one might otherwise believe and I",
    "start": "265590",
    "end": "273660"
  },
  {
    "text": "won't reuse I'm sure some of you have were in the intro section this morning and perhaps in the storage day on Monday",
    "start": "273660",
    "end": "281729"
  },
  {
    "text": "so I went the labor my consistency example but I think it's fairly commonly understood that the C and you know cap",
    "start": "281729",
    "end": "288419"
  },
  {
    "text": "and the C and acid are not actually the same kind of consistency there are different kinds of consistency and the",
    "start": "288419",
    "end": "294720"
  },
  {
    "text": "same goes for durability and performance there are various different flavors of performance and scalability so we dived",
    "start": "294720",
    "end": "301169"
  },
  {
    "text": "into that in quite a bit of detail in the white paper just to you know try and tear these these terms apart and make",
    "start": "301169",
    "end": "306389"
  },
  {
    "text": "sure that we're all talking about the same thing when we use these words there are actually a few other attributes that",
    "start": "306389",
    "end": "312270"
  },
  {
    "text": "are pretty important as well in the real world perhaps less technical the one is",
    "start": "312270",
    "end": "317729"
  },
  {
    "text": "is the operational complexity of whatever the solution is that you choose",
    "start": "317729",
    "end": "322760"
  },
  {
    "text": "in some cases this can be as simple as a as a managed service that you subscribe",
    "start": "322760",
    "end": "327990"
  },
  {
    "text": "to in a public cloud provider in which case you for the most part have nothing to do and on the other extreme that",
    "start": "327990",
    "end": "334530"
  },
  {
    "text": "there could be you know open source software that you need to download install figure out all the bugs in",
    "start": "334530",
    "end": "341039"
  },
  {
    "text": "deploy on your production environment and then in many cases write additional",
    "start": "341039",
    "end": "346380"
  },
  {
    "text": "software to actually make that stuff work properly and there's a whole spectrum of",
    "start": "346380",
    "end": "351950"
  },
  {
    "text": "difficulty in that depending on which options you you decide to take the other",
    "start": "351950",
    "end": "358080"
  },
  {
    "text": "obvious one which is perhaps one of the things that that sort of triggered cloud",
    "start": "358080",
    "end": "364440"
  },
  {
    "text": "native in the first place is cost so you know right from the beginning and I was",
    "start": "364440",
    "end": "369750"
  },
  {
    "text": "sort of the air right from the beginning of ec2 which one might argue was the beginning of cloud computing as we know",
    "start": "369750",
    "end": "376020"
  },
  {
    "text": "today the primary driver was actually cost there there are many other factors",
    "start": "376020",
    "end": "382289"
  },
  {
    "text": "that came into it convenience etc etc but at the end of the day if you if you",
    "start": "382289",
    "end": "389220"
  },
  {
    "text": "have to if you can just get as much compute and storage capacity as you want",
    "start": "389220",
    "end": "394919"
  },
  {
    "text": "immediately and for only during the minutes that you need it everybody ten turns out to be",
    "start": "394919",
    "end": "400750"
  },
  {
    "text": "much happier than if you have to spend months you know pre-ordering stuff and planning and I'm sure you all intimately",
    "start": "400750",
    "end": "407590"
  },
  {
    "text": "familiar with the arguments behind why cloud computing has been successful but a lot of it is custom so we shouldn't",
    "start": "407590",
    "end": "414190"
  },
  {
    "text": "forget about that either I'm not gonna go into too much more detail on this slide but just to say",
    "start": "414190",
    "end": "420669"
  },
  {
    "start": "416000",
    "end": "416000"
  },
  {
    "text": "that in achieving some of these fundamental properties or attributes we",
    "start": "420669",
    "end": "426880"
  },
  {
    "text": "often you know come across a lot of other terms so how does a veil how does failover work how does redundancy work",
    "start": "426880",
    "end": "433509"
  },
  {
    "text": "how does data protection work these are not really attributes these are more features of the system that are used to",
    "start": "433509",
    "end": "439330"
  },
  {
    "text": "achieve some of these attributes which is what we're often after does the slide",
    "start": "439330",
    "end": "444729"
  },
  {
    "text": "is a little bit mixed up in that it has combination of these tools as well as some you know breakdown of some of the",
    "start": "444729",
    "end": "450970"
  },
  {
    "text": "properties so when we think about scalability it's important to realize that they're their various different",
    "start": "450970",
    "end": "456789"
  },
  {
    "text": "axes of scalability so you might want to understand how much data you can",
    "start": "456789",
    "end": "462340"
  },
  {
    "text": "actually store in a system like how big does it get before it becomes unusable and that may be very important for you",
    "start": "462340",
    "end": "468849"
  },
  {
    "text": "have enormous amounts of data to store you should make sure that whatever solution you choose can can accommodate",
    "start": "468849",
    "end": "475060"
  },
  {
    "text": "that data and if you get the if your estimates are wrong then you know you should know whether you have any way out",
    "start": "475060",
    "end": "480639"
  },
  {
    "text": "of that and often people talk about horizontal scalability versus vertical scalability etc do you want to scale the",
    "start": "480639",
    "end": "487659"
  },
  {
    "text": "number of clients that can access it which is a completely different axis of scalability and you should never confuse the two do you want and do you want to",
    "start": "487659",
    "end": "494500"
  },
  {
    "text": "scale the performance of the thing do you want to be able to do more I ops etc and and if you need if you're number of",
    "start": "494500",
    "end": "501130"
  },
  {
    "text": "customers grows or you're number of users of your application grows is there a ceiling to how fast you can read and",
    "start": "501130",
    "end": "507460"
  },
  {
    "text": "write to this data store and and if not or if there is what what avenues do you have out of it can you scale up or are",
    "start": "507460",
    "end": "514570"
  },
  {
    "text": "you stuck and need to go and buy bigger boxes etc and there's some overlap between scalability and performance etc",
    "start": "514570",
    "end": "521610"
  },
  {
    "text": "consistency as I mentioned is is probably one of the more interesting attributes in",
    "start": "521610",
    "end": "528400"
  },
  {
    "text": "in the sense that I think in the early days people were mostly familiar with fairly consistent stores be those",
    "start": "528400",
    "end": "535420"
  },
  {
    "text": "databases local file systems even remote file systems and block stores they were for the most part a highly consistent",
    "start": "535420",
    "end": "541960"
  },
  {
    "text": "and fairly fairly performant but they they ran into you know issues related to",
    "start": "541960",
    "end": "547570"
  },
  {
    "text": "scalability and and and and availability for the most part you know if you have one box in the corner and it falls over",
    "start": "547570",
    "end": "554110"
  },
  {
    "text": "you're not available and if you have one box in the corner and you suddenly have a million users or vast amounts of",
    "start": "554110",
    "end": "561130"
  },
  {
    "text": "transactions that need to be done they tend to reach their limits and if your only option is to put a bigger box in",
    "start": "561130",
    "end": "566680"
  },
  {
    "text": "the corner you start looking for other options so that's where big distributed",
    "start": "566680",
    "end": "572410"
  },
  {
    "text": "systems started becoming more popular things like EBS and s3 and alternative",
    "start": "572410",
    "end": "578350"
  },
  {
    "text": "ways of storing things and this led to you know implicit consistency challenges",
    "start": "578350",
    "end": "584230"
  },
  {
    "text": "which unless you understand them clearly can cause your applications to get very complicated and not work to be perfectly",
    "start": "584230",
    "end": "592840"
  },
  {
    "text": "blunt so that's that's an area that we kind of dived into in quite a bit of detail and yeah hopefully that's useful",
    "start": "592840",
    "end": "600930"
  },
  {
    "text": "in terms of durability this is perhaps a a good place to sort of take a little",
    "start": "600930",
    "end": "607780"
  },
  {
    "text": "diversion so one thing we made a point of doing in the paper in the description",
    "start": "607780",
    "end": "613690"
  },
  {
    "text": "was not to confuse access interfaces with the actual attributes of the",
    "start": "613690",
    "end": "619270"
  },
  {
    "text": "storage so a good example might be object stores so I'm sure many of you have come across object stores they tend",
    "start": "619270",
    "end": "626320"
  },
  {
    "text": "to have HTTP interfaces they tend to you know support operations like put and get",
    "start": "626320",
    "end": "631960"
  },
  {
    "text": "had fairly granular levels to be designed for big pieces of data like images or videos or backups or whatever",
    "start": "631960",
    "end": "639390"
  },
  {
    "text": "but you know s3 I guess was the grandparent of many of these object",
    "start": "639390",
    "end": "644770"
  },
  {
    "text": "stores Dropbox came out of that and various other things after that but s3",
    "start": "644770",
    "end": "650800"
  },
  {
    "text": "provides you know more than just an interface definition it provides a whole bunch of guarantees around durability",
    "start": "650800",
    "end": "656500"
  },
  {
    "text": "and implicit performance implications of some of those durability guarantees so I'm not sure",
    "start": "656500",
    "end": "664060"
  },
  {
    "text": "what the architecture actually is these days but certainly back in the day it was three copies in different",
    "start": "664060",
    "end": "669660"
  },
  {
    "text": "availability zones different data centers essentially and basically your",
    "start": "669660",
    "end": "674980"
  },
  {
    "text": "data would never disappear that was kind of part of the the value offering of s3 and I think today still there's",
    "start": "674980",
    "end": "682440"
  },
  {
    "text": "advertisements of like eleven nines durability or something like that that your data will basically never go away",
    "start": "682440",
    "end": "688000"
  },
  {
    "text": "but there's a cost to that there's a cost in terms of performance there's a cost in terms of the redundancy that you",
    "start": "688000",
    "end": "693580"
  },
  {
    "text": "have to have and so some people have actually built things that have exactly",
    "start": "693580",
    "end": "699460"
  },
  {
    "text": "the same interface there have precisely the s3 interface but they don't have all of those durability guarantees and they",
    "start": "699460",
    "end": "705040"
  },
  {
    "text": "don't put your data in multiple data centers etc so just you know make sure that when you talk about an object story",
    "start": "705040",
    "end": "710500"
  },
  {
    "text": "you're talking about the one that copies your data into lots of different locations and gives you 11 nines",
    "start": "710500",
    "end": "716230"
  },
  {
    "text": "durability or are you talking about the one that actually stores it on a file somewhere in the file server and doesn't",
    "start": "716230",
    "end": "721690"
  },
  {
    "text": "give you any of those guarantees as I",
    "start": "721690",
    "end": "727090"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "mentioned in addition to the sort of primary properties it's pretty important to understand the instantiation and",
    "start": "727090",
    "end": "733930"
  },
  {
    "text": "deployment aspects of whatever storage system it is that you choose and you",
    "start": "733930",
    "end": "739000"
  },
  {
    "text": "know I think most of this is fairly familiar to people so I'm not going to go into too much detail but some of them",
    "start": "739000",
    "end": "744220"
  },
  {
    "text": "are tend to be more Hardware focused so you have you know typically smaller amounts smaller numbers of more",
    "start": "744220",
    "end": "751840"
  },
  {
    "text": "dedicated hardware and you tie a few of them together with fairly consistent",
    "start": "751840",
    "end": "758020"
  },
  {
    "text": "state often with proprietary Hardware interconnects networks etc and then",
    "start": "758020",
    "end": "763930"
  },
  {
    "text": "there's the category which are tend to be more software related often open source projects and you can you know",
    "start": "763930",
    "end": "770410"
  },
  {
    "text": "deploy these yourselves either on-premise or in a public cloud and",
    "start": "770410",
    "end": "775470"
  },
  {
    "text": "these tend to be more distributed they come with a lot more management overhead",
    "start": "775470",
    "end": "780640"
  },
  {
    "text": "because you have to you know run the software yourself in some cases and then in other cases you can obviously",
    "start": "780640",
    "end": "785790"
  },
  {
    "text": "subscribe to either instances of open source services or proprietary storage",
    "start": "785790",
    "end": "793330"
  },
  {
    "text": "services like in many of the public clouds and I think at this point I'm gonna hand over to my esteemed",
    "start": "793330",
    "end": "800690"
  },
  {
    "start": "800000",
    "end": "800000"
  },
  {
    "text": "colleague Alex who's going to take you a little deeper into the interfaces and also the topologies of the storage",
    "start": "800690",
    "end": "806630"
  },
  {
    "text": "systems available today thank you so one",
    "start": "806630",
    "end": "813140"
  },
  {
    "text": "of the things one of the things that we often define storage systems by is is a data access interface and for many years",
    "start": "813140",
    "end": "819950"
  },
  {
    "text": "the the date access interface kind of defines a key set of properties and that",
    "start": "819950",
    "end": "825100"
  },
  {
    "text": "that people are used to expecting out of that out of that storage when it comes",
    "start": "825100",
    "end": "830810"
  },
  {
    "text": "to cloud native storage we we kind of bucketed two general categories of",
    "start": "830810",
    "end": "836320"
  },
  {
    "text": "storage the first one being volumes which is which is I guess the the more",
    "start": "836320",
    "end": "843100"
  },
  {
    "text": "maturely orchestrated interface in in orchestrators like kubernetes and and",
    "start": "843100",
    "end": "850100"
  },
  {
    "text": "and that covers things like block interfaces and file interfaces as well as shared file interfaces where those",
    "start": "850100",
    "end": "858650"
  },
  {
    "text": "interfaces where file systems can be shared by multiple hosts on different",
    "start": "858650",
    "end": "864290"
  },
  {
    "text": "nodes at the same time in in in the general case block interfaces in the",
    "start": "864290",
    "end": "870620"
  },
  {
    "text": "most simplistic fashion start off with a local disk right so a disk is a",
    "start": "870620",
    "end": "875720"
  },
  {
    "text": "fundamentally a block interface and on top of a disk you place a filesystem and then that file system provides the",
    "start": "875720",
    "end": "881330"
  },
  {
    "text": "interface which project most applications use some types of databases",
    "start": "881330",
    "end": "887600"
  },
  {
    "text": "can access block devices directly but in general people the applications are",
    "start": "887600",
    "end": "893210"
  },
  {
    "text": "accessing file systems on the other side of spectrum we have the the API bucket",
    "start": "893210",
    "end": "899390"
  },
  {
    "text": "suits this is an interface whereby the workloads are being are accessing the",
    "start": "899390",
    "end": "904610"
  },
  {
    "text": "storage system typically through a network interface rather than an operating system interface and that's it",
    "start": "904610",
    "end": "910880"
  },
  {
    "text": "can be the most popular ones being obviously an object store but also much",
    "start": "910880",
    "end": "916940"
  },
  {
    "text": "more much more common nowadays are things like key value stores but obviously all the other databases you",
    "start": "916940",
    "end": "923330"
  },
  {
    "text": "know so a database is of is a valid storage medium and it's it's",
    "start": "923330",
    "end": "928610"
  },
  {
    "text": "it's it's I guess a traditional medium for a lot of applications to to store their data this life is a little",
    "start": "928610",
    "end": "937970"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "contentious so we tried to do a comparison of the different the",
    "start": "937970",
    "end": "943610"
  },
  {
    "text": "different volume access interfaces because as I said typically there's a",
    "start": "943610",
    "end": "949399"
  },
  {
    "text": "kind of general expectation that different interfaces have certain properties so very often block",
    "start": "949399",
    "end": "955579"
  },
  {
    "text": "interfaces for example are particularly good for low latency and individual",
    "start": "955579",
    "end": "961939"
  },
  {
    "text": "workloads on on individual hosts for example but perhaps they're less suited",
    "start": "961939",
    "end": "967459"
  },
  {
    "text": "for for sharing or scaling from a capacity point of view file systems on the other hand are really good for",
    "start": "967459",
    "end": "976360"
  },
  {
    "text": "sharing or often shared shared file systems give you that capability to share workloads across multiple nodes or",
    "start": "976360",
    "end": "984079"
  },
  {
    "text": "applications in parallel and they are often optimized for for troopers but but",
    "start": "984079",
    "end": "991939"
  },
  {
    "text": "have disadvantages arounds locking and consistency when when used by complex",
    "start": "991939",
    "end": "998779"
  },
  {
    "text": "transactional systems for example and as quitman was mentioning object stores",
    "start": "998779",
    "end": "1004870"
  },
  {
    "text": "often have availability and durability as one of their as one of their key aspects assuming obviously that's those",
    "start": "1004870",
    "end": "1011439"
  },
  {
    "text": "those object stores half that was came those attributes and they're and they're great for sharing throughput across lots",
    "start": "1011439",
    "end": "1018339"
  },
  {
    "text": "of workloads but because of the way but the distribution and the protocol",
    "start": "1018339",
    "end": "1023669"
  },
  {
    "text": "implies a higher level of latency for example now one of the things that we",
    "start": "1023669",
    "end": "1030569"
  },
  {
    "start": "1029000",
    "end": "1029000"
  },
  {
    "text": "struggled with when we started putting the white paper together was that these general these generalizations can often",
    "start": "1030569",
    "end": "1038829"
  },
  {
    "text": "change quite dramatically by depending on the various layers that might exist",
    "start": "1038829",
    "end": "1043870"
  },
  {
    "text": "within a storage system so most storage systems are composed of a whole variety",
    "start": "1043870",
    "end": "1049390"
  },
  {
    "text": "of layers and there might be operating system layers or or physical storage",
    "start": "1049390",
    "end": "1056080"
  },
  {
    "text": "components that that dramatically affect the overall attributes of those of that system and",
    "start": "1056080",
    "end": "1063380"
  },
  {
    "text": "it's often and often as storage systems get more complex in cloud native",
    "start": "1063380",
    "end": "1068870"
  },
  {
    "text": "environments you often have layerings of systems where perhaps a file system",
    "start": "1068870",
    "end": "1075530"
  },
  {
    "text": "actually uses an object store on a back-end for example or or or or perhaps",
    "start": "1075530",
    "end": "1081500"
  },
  {
    "text": "a block device is layered on top of a distributed file system so at the end of",
    "start": "1081500",
    "end": "1086780"
  },
  {
    "text": "the day the attributes of that particular storage system become a combination of the attributes at each",
    "start": "1086780",
    "end": "1092390"
  },
  {
    "text": "layer in the in the stack so orchestrators and host an operating",
    "start": "1092390",
    "end": "1098810"
  },
  {
    "start": "1095000",
    "end": "1095000"
  },
  {
    "text": "system layer which kind of is is how the application is consuming that that",
    "start": "1098810",
    "end": "1105320"
  },
  {
    "text": "storage system can have quite an effect on things like availability or",
    "start": "1105320",
    "end": "1110720"
  },
  {
    "text": "scalability or even performance so in in volumes you see folio managers playing",
    "start": "1110720",
    "end": "1117410"
  },
  {
    "text": "playing an aspect here but also things like in container runtimes appointments",
    "start": "1117410",
    "end": "1123170"
  },
  {
    "text": "and overlay file systems for example and when you're accessing storage systems",
    "start": "1123170",
    "end": "1128720"
  },
  {
    "text": "through the network we often we often have a variety of layers and tools which",
    "start": "1128720",
    "end": "1134660"
  },
  {
    "text": "are which are interjected as part of the system perhaps load balancers perhaps meshes and discovery mechanisms a big aspect of",
    "start": "1134660",
    "end": "1145730"
  },
  {
    "start": "1143000",
    "end": "1143000"
  },
  {
    "text": "the of how a storage system performs and and is and the availability and",
    "start": "1145730",
    "end": "1153920"
  },
  {
    "text": "scalability of that system is fundamentally going to be down to the topology of the storage system so",
    "start": "1153920",
    "end": "1161390"
  },
  {
    "text": "initially as a scranton mentioned a lot of a lot of storage systems have a",
    "start": "1161390",
    "end": "1166610"
  },
  {
    "text": "centralized kind of a centralized topology where you had a small number of components they were often hardware",
    "start": "1166610",
    "end": "1173390"
  },
  {
    "text": "based they were often using some sort of proprietary interconnects to maintain a",
    "start": "1173390",
    "end": "1178910"
  },
  {
    "text": "high level of stakes between between the different components in the system and",
    "start": "1178910",
    "end": "1184040"
  },
  {
    "text": "they provided remote storage to to to a number of nodes or a number of",
    "start": "1184040",
    "end": "1189440"
  },
  {
    "text": "node spirits connected to that centralized to that centralized storage system so this was an environment where",
    "start": "1189440",
    "end": "1195770"
  },
  {
    "text": "he primarily scaled the system up and it was and they were often designed for for",
    "start": "1195770",
    "end": "1203539"
  },
  {
    "text": "low latency environments but obviously they couldn't scale horizontally they",
    "start": "1203539",
    "end": "1209600"
  },
  {
    "text": "were complex to to operate and there were fundamental limitations on how far you kids grow those type of systems",
    "start": "1209600",
    "end": "1218830"
  },
  {
    "text": "moving forwards Along Came distributed topologies and",
    "start": "1219280",
    "end": "1224450"
  },
  {
    "text": "distributed through policies have the capability of spreading out loads on a",
    "start": "1224450",
    "end": "1230299"
  },
  {
    "text": "horizontal basis where effectively oftentimes they're deployed with a",
    "start": "1230299",
    "end": "1236570"
  },
  {
    "text": "shared nothing architecture so they can be deployed so they can be deployed as software just running on individual",
    "start": "1236570",
    "end": "1243049"
  },
  {
    "text": "commodity servers or nodes and the and",
    "start": "1243049",
    "end": "1248179"
  },
  {
    "text": "however due to the complexity of some of these distributed systems they can be",
    "start": "1248179",
    "end": "1253700"
  },
  {
    "text": "harder to operate and perhaps that you might you might have implications of latency short of environments are",
    "start": "1253700",
    "end": "1262630"
  },
  {
    "text": "systems where a data set is split using",
    "start": "1262630",
    "end": "1267919"
  },
  {
    "text": "using some sort of algorithm perhaps a hashing algorithm or something like that which allows you to spread the load or",
    "start": "1267919",
    "end": "1275710"
  },
  {
    "text": "spreads the the data across a number of different individual systems very often",
    "start": "1275710",
    "end": "1283760"
  },
  {
    "text": "charting is used within databases and and this is and this is the most typically use case but shardene also",
    "start": "1283760",
    "end": "1291620"
  },
  {
    "text": "comes with shark charting is MIT perhaps simpler to implement in some distributed",
    "start": "1291620",
    "end": "1297320"
  },
  {
    "text": "systems because you have say lots of individual database nodes which which handle individual splits of the data but",
    "start": "1297320",
    "end": "1306950"
  },
  {
    "text": "the way you splits the data can often change as the data grows and the original use cases don't often apply so",
    "start": "1306950",
    "end": "1314150"
  },
  {
    "text": "you end up having some shards which might run really hot and it's really complicated it could be really",
    "start": "1314150",
    "end": "1319940"
  },
  {
    "text": "complicated to distributes that data across different notes and then we have hyper-converged",
    "start": "1319940",
    "end": "1326910"
  },
  {
    "text": "storage so hyper cover storage is where compute environments and storage",
    "start": "1326910",
    "end": "1332820"
  },
  {
    "text": "environments are effectively sharing the same compute resources this has proved",
    "start": "1332820",
    "end": "1339370"
  },
  {
    "text": "and this is proved to be quite popular in in cloud negative environments and we",
    "start": "1339370",
    "end": "1345010"
  },
  {
    "text": "can we see this we see this patter and growing quite quickly however there often are again",
    "start": "1345010",
    "end": "1352180"
  },
  {
    "text": "operational complexity issues here because the storage environments and the",
    "start": "1352180",
    "end": "1357340"
  },
  {
    "text": "compute environments now get managed as a single entity so changes to the",
    "start": "1357340",
    "end": "1363040"
  },
  {
    "text": "compute environment affect the storage environment and changes to the storage environment affect the compute environment another big aspect of the",
    "start": "1363040",
    "end": "1373180"
  },
  {
    "start": "1370000",
    "end": "1370000"
  },
  {
    "text": "storage system provides is the is the data protection so this is this is controlling things like the durability",
    "start": "1373180",
    "end": "1379780"
  },
  {
    "text": "that the availability and the redundancy I guess of the data there are a lot of",
    "start": "1379780",
    "end": "1387640"
  },
  {
    "text": "traditional systems like raid and mirroring where where data is is",
    "start": "1387640",
    "end": "1393100"
  },
  {
    "text": "protected through a combination of of parity or or effectively copies of the data distributed across a number of",
    "start": "1393100",
    "end": "1400720"
  },
  {
    "text": "disks more often nowadays both were performance for performance reasons and",
    "start": "1400720",
    "end": "1408760"
  },
  {
    "text": "and often for for architectural reasons replicas are this are distribute are used as a as a method of copying vector",
    "start": "1408760",
    "end": "1416110"
  },
  {
    "text": "around and ensuring that state is available in the in the event of a loss so things like things like objects",
    "start": "1416110",
    "end": "1423250"
  },
  {
    "text": "stores and and some distributed systems use use replicas as their data protection mechanism and as a method of",
    "start": "1423250",
    "end": "1431350"
  },
  {
    "text": "performing rather than as a method of performing replication as well as saving",
    "start": "1431350",
    "end": "1437680"
  },
  {
    "text": "a capacity erasure coding is another technique used for data protection so",
    "start": "1437680",
    "end": "1444100"
  },
  {
    "text": "erasure coding allows you to provide a more optimized a more capacity optimized",
    "start": "1444100",
    "end": "1450160"
  },
  {
    "text": "methods of protecting your data so rather than having lots of copies that data is split into",
    "start": "1450160",
    "end": "1456910"
  },
  {
    "text": "into a set of data blocks and parently blocks and this allows you to to",
    "start": "1456910",
    "end": "1463310"
  },
  {
    "text": "recuperate the data or to recover the data if any node gets lost the downside",
    "start": "1463310",
    "end": "1468440"
  },
  {
    "text": "being that erasure coding typically implies a much higher amount of latency because of the computer overhead and the",
    "start": "1468440",
    "end": "1475460"
  },
  {
    "text": "distributed nature of that system solar",
    "start": "1475460",
    "end": "1480710"
  },
  {
    "start": "1478000",
    "end": "1478000"
  },
  {
    "text": "systems would also provides typically provides a range of data services so things like things like replication",
    "start": "1480710",
    "end": "1487940"
  },
  {
    "text": "where where once or system can replicate to another source system is obviously the most common use case snapshots and",
    "start": "1487940",
    "end": "1495470"
  },
  {
    "text": "clones are key to backups and point in time copies of the data and are more and",
    "start": "1495470",
    "end": "1503390"
  },
  {
    "text": "more common especially in client services and service provider",
    "start": "1503390",
    "end": "1509810"
  },
  {
    "text": "environments is is encryption where more and more storage providers are providing",
    "start": "1509810",
    "end": "1514960"
  },
  {
    "text": "an encryption capability to keep data safe within within those environments",
    "start": "1514960",
    "end": "1521950"
  },
  {
    "start": "1521000",
    "end": "1521000"
  },
  {
    "text": "I'm going to I'm going to skip this slide but I'll just say that the",
    "start": "1522490",
    "end": "1529100"
  },
  {
    "text": "physical layer obviously provides capabilities around both durability and",
    "start": "1529100",
    "end": "1534290"
  },
  {
    "text": "performance typically so that the the starting or from spinning their scroll",
    "start": "1534290",
    "end": "1540140"
  },
  {
    "text": "the way to SSDs and now in via means you have a you have a scale of performance which generally has compromises with",
    "start": "1540140",
    "end": "1547580"
  },
  {
    "text": "with durability and the lifetime of this of the storage probably one of the most",
    "start": "1547580",
    "end": "1558190"
  },
  {
    "start": "1553000",
    "end": "1553000"
  },
  {
    "text": "well developed and constantly developed technologies at the moment is how the",
    "start": "1558430",
    "end": "1565910"
  },
  {
    "text": "storage systems or integrate with orchestrators through a variety of",
    "start": "1565910",
    "end": "1571820"
  },
  {
    "text": "management interfaces so we already talked about the workloads and how they",
    "start": "1571820",
    "end": "1577040"
  },
  {
    "text": "access the the data access interfaces in the data plane of a storage system but likewise",
    "start": "1577040",
    "end": "1583070"
  },
  {
    "text": "another key aspect is how can you make your storage declarative and composable",
    "start": "1583070",
    "end": "1589130"
  },
  {
    "text": "so in much the same way as I know you can ask an Orchestrator to run a",
    "start": "1589130",
    "end": "1596480"
  },
  {
    "text": "container in a pod for you and you can specify things like network requirements and CPU and memory requirements you can",
    "start": "1596480",
    "end": "1603380"
  },
  {
    "text": "now also ask an Orchestrator to supply storage interfaces for you and supply a",
    "start": "1603380",
    "end": "1609890"
  },
  {
    "text": "set of parameters that's that an Orchestrator can interact with a storage system with the there are a number of",
    "start": "1609890",
    "end": "1619040"
  },
  {
    "text": "different interfaces in use today the",
    "start": "1619040",
    "end": "1624400"
  },
  {
    "text": "there are a number of native interfaces which are built into some orchestrators",
    "start": "1624400",
    "end": "1629480"
  },
  {
    "text": "so for example kubernetes has I believe 16 or 17 native drivers in in in built",
    "start": "1629480",
    "end": "1636590"
  },
  {
    "text": "mainlined into the crew Bonetti source we also have things like the VDI which",
    "start": "1636590",
    "end": "1641960"
  },
  {
    "text": "is a docker a runtime interface to volume drivers which which can interface",
    "start": "1641960",
    "end": "1647870"
  },
  {
    "text": "with storage systems and we also have the Flex interface in kubernetes which I",
    "start": "1647870",
    "end": "1654740"
  },
  {
    "text": "guess is the first generation of an external storage driver to kubernetes",
    "start": "1654740",
    "end": "1659890"
  },
  {
    "text": "followed rapidly on with the CSI interface which is now the new the new",
    "start": "1659890",
    "end": "1665170"
  },
  {
    "text": "the factor of standards for for container storage interfaces allowing",
    "start": "1665170",
    "end": "1670240"
  },
  {
    "text": "orchestrators to boat's dynamically provision and consume storage as well as",
    "start": "1670240",
    "end": "1676610"
  },
  {
    "text": "providing some more advanced features like like snapshots and clones and things like that which are which are",
    "start": "1676610",
    "end": "1682490"
  },
  {
    "text": "currently in development and CSI was released as the 1.0 released with",
    "start": "1682490",
    "end": "1687740"
  },
  {
    "text": "kubernetes for the latest version of communities just a couple of weeks ago",
    "start": "1687740",
    "end": "1693250"
  },
  {
    "text": "quinton do you want to cover the next steps okay so so the the white paper is is now",
    "start": "1693250",
    "end": "1704960"
  },
  {
    "start": "1695000",
    "end": "1695000"
  },
  {
    "text": "released will be issuing will be issuing a link after this after this presentation you know announce it in a",
    "start": "1704960",
    "end": "1713390"
  },
  {
    "text": "minute so again I say have just made such a thing I will put it up during the",
    "start": "1713390",
    "end": "1719180"
  },
  {
    "text": "Q&A session fantastic and and what we'd",
    "start": "1719180",
    "end": "1724370"
  },
  {
    "text": "really like is your feedback and your interact and and your your comments on on the white paper anything to to help",
    "start": "1724370",
    "end": "1732230"
  },
  {
    "text": "us make it better and we're also as a next step going to be looking to investigate and publish real-life case",
    "start": "1732230",
    "end": "1739940"
  },
  {
    "text": "studies on people's use of different storage systems to kind of take some of",
    "start": "1739940",
    "end": "1745610"
  },
  {
    "text": "these some of the terminology and some of the workers we've done in the white paper and transform that to kind of",
    "start": "1745610",
    "end": "1752120"
  },
  {
    "text": "real-life use cases and real-life scenarios finally there are a number of",
    "start": "1752120",
    "end": "1760490"
  },
  {
    "start": "1758000",
    "end": "1758000"
  },
  {
    "text": "other sessions that you might be interested while you're at cubic on tomorrow covering some of the different",
    "start": "1760490",
    "end": "1767720"
  },
  {
    "text": "technologies that we've talked about and questions",
    "start": "1767720",
    "end": "1774100"
  },
  {
    "text": "fire",
    "start": "1777370",
    "end": "1780000"
  },
  {
    "text": "so so the question was what's the scope of storage in in in terms of urine at",
    "start": "1786870",
    "end": "1792100"
  },
  {
    "text": "least I think I think what's what we're seeing now is that more and more",
    "start": "1792100",
    "end": "1799110"
  },
  {
    "text": "different application patterns and different workloads that are moving to",
    "start": "1799110",
    "end": "1805090"
  },
  {
    "text": "orchestrated environments have some component of a stateful nature right at the end of the day every architecture in",
    "start": "1805090",
    "end": "1811990"
  },
  {
    "text": "every application has a has a stateful requirement whether that's storing",
    "start": "1811990",
    "end": "1817200"
  },
  {
    "text": "sister storing day for themselves or consuming data from say databases or",
    "start": "1817200",
    "end": "1822610"
  },
  {
    "text": "perhaps missus buses or instrumentation or observability systems which require store States somewhere so more and more",
    "start": "1822610",
    "end": "1830370"
  },
  {
    "text": "stateful systems are are a huge dependency on making workloads on one",
    "start": "1830370",
    "end": "1837460"
  },
  {
    "text": "allowing were close to two migrates to communities environments and I think this is this is a trends that will be",
    "start": "1837460",
    "end": "1843850"
  },
  {
    "text": "growing over the next few years",
    "start": "1843850",
    "end": "1847080"
  },
  {
    "text": "it depends on the solution it's the right answer so the question is where the sort the",
    "start": "1860530",
    "end": "1866780"
  },
  {
    "text": "role of the storage solution and in terms of their the the data management",
    "start": "1866780",
    "end": "1871790"
  },
  {
    "text": "cycle well a source or solution can have a lot of complex functionality whose",
    "start": "1871790",
    "end": "1878750"
  },
  {
    "text": "remember storage system can be a database and can have a variety of",
    "start": "1878750",
    "end": "1884890"
  },
  {
    "text": "functionality there but also storage solution can be responsible for taking",
    "start": "1884890",
    "end": "1890000"
  },
  {
    "text": "care of things like data retention and and and other functionality so it does",
    "start": "1890000",
    "end": "1895880"
  },
  {
    "text": "depend a lot on the storage system any",
    "start": "1895880",
    "end": "1901640"
  },
  {
    "text": "other questions",
    "start": "1901640",
    "end": "1904120"
  },
  {
    "text": "so so that's a very good question so the question is if we're doing big data and and we're considering things like data",
    "start": "1921960",
    "end": "1929530"
  },
  {
    "text": "locality has that influences the answer is that data locality and and is is",
    "start": "1929530",
    "end": "1937270"
  },
  {
    "text": "something that is actually covered in some of the CSI spec and we're looking at things where the topology of the of",
    "start": "1937270",
    "end": "1947290"
  },
  {
    "text": "the storage system and the topology of the compute nodes come together in a schema so cribben at ease can query",
    "start": "1947290",
    "end": "1954460"
  },
  {
    "text": "where the storage is and can help and that can help place the pods closer to",
    "start": "1954460",
    "end": "1959590"
  },
  {
    "text": "the storage for a technicality reasons",
    "start": "1959590",
    "end": "1963299"
  },
  {
    "text": "anything else",
    "start": "1966400",
    "end": "1969390"
  },
  {
    "text": "so beside the interface that kubernetes would require from a storage system what",
    "start": "1977550",
    "end": "1983740"
  },
  {
    "text": "are what is one feature that the storage system should have is good to have in a",
    "start": "1983740",
    "end": "1988960"
  },
  {
    "text": "cloud native environment that current storage systems do not have and it's a problem that they don't",
    "start": "1988960",
    "end": "1994210"
  },
  {
    "text": "I thought we disallowed difficult",
    "start": "1994210",
    "end": "2000960"
  },
  {
    "text": "questions today I'm used to answering as well so so I think when we look at when",
    "start": "2000960",
    "end": "2009750"
  },
  {
    "text": "we look at cloud native storage systems there are probably a couple of key things that that need to happen to allow",
    "start": "2009750",
    "end": "2017760"
  },
  {
    "text": "it to work well with with orchestrating environments the first thing is that",
    "start": "2017760",
    "end": "2022880"
  },
  {
    "text": "storage systems have traditionally presented storage to operating systems",
    "start": "2022880",
    "end": "2028500"
  },
  {
    "text": "or VMs and now what we're looking to do is we're looking to present storage to",
    "start": "2028500",
    "end": "2035640"
  },
  {
    "text": "applications right so fundamentally you've containerized the application you've made it portable and the",
    "start": "2035640",
    "end": "2041970"
  },
  {
    "text": "orchestrator can place the application wherever it once and you needs to have a system now where storage can be",
    "start": "2041970",
    "end": "2047670"
  },
  {
    "text": "presented to the application and move with the application so support abilities is a big thing the other big",
    "start": "2047670",
    "end": "2054960"
  },
  {
    "text": "thing is that the whole point of having an orchestrated storage system is that it's declarative and composable so in",
    "start": "2054960",
    "end": "2062010"
  },
  {
    "text": "much the same way that you declare say CPU and memory and network ports and",
    "start": "2062010",
    "end": "2067200"
  },
  {
    "text": "things like that you should also be able to declare the storage requirements and have the orchestrator votes dynamically",
    "start": "2067200",
    "end": "2073230"
  },
  {
    "text": "provision and consume that storage so having those those interfaces and an API",
    "start": "2073230",
    "end": "2079530"
  },
  {
    "text": "is where the orchestrator can can it can use a driver can hook into into a storage system to allow the storage",
    "start": "2079530",
    "end": "2085710"
  },
  {
    "text": "systems do that is key",
    "start": "2085710",
    "end": "2088760"
  },
  {
    "text": "anything else fire",
    "start": "2092139",
    "end": "2097450"
  },
  {
    "text": "just to pick up on what you were talking about about the the movement to bind",
    "start": "2100280",
    "end": "2106410"
  },
  {
    "text": "data to applications and the model by which storage systems can be told to do",
    "start": "2106410",
    "end": "2112260"
  },
  {
    "text": "this the white paper seems to talk about well it's a taxonomy of current storage",
    "start": "2112260",
    "end": "2118950"
  },
  {
    "text": "systems perhaps and those that will be you know forthcoming in some short",
    "start": "2118950",
    "end": "2124710"
  },
  {
    "text": "horizon but it would seem to be much further to go to get closer to a to a",
    "start": "2124710",
    "end": "2131580"
  },
  {
    "text": "model that binds data to applications more tightly and I wonder what do you",
    "start": "2131580",
    "end": "2137970"
  },
  {
    "text": "see how double the CN CF perhaps this working group or perhaps a different one",
    "start": "2137970",
    "end": "2143340"
  },
  {
    "text": "consider that question and these you know these concepts that need to be talked about to implement that more",
    "start": "2143340",
    "end": "2150180"
  },
  {
    "text": "closely I don't have a short answer for",
    "start": "2150180",
    "end": "2160110"
  },
  {
    "text": "you I think what we tried to focus on was fundamental topologies as opposed to",
    "start": "2160110",
    "end": "2166220"
  },
  {
    "text": "you know these are all the systems out there and and this is what they do I mean it's kind of difficult to imagine",
    "start": "2166220",
    "end": "2173670"
  },
  {
    "text": "topologies other than centralized distributed sharded I mean maybe these",
    "start": "2173670",
    "end": "2179880"
  },
  {
    "text": "things will arise but these are things that predated you know cloud computing by many decades it is true to say that I",
    "start": "2179880",
    "end": "2187980"
  },
  {
    "text": "think there are some subtleties within that and as we mentioned earlier there are many kinds of Charlotte systems and",
    "start": "2187980",
    "end": "2193260"
  },
  {
    "text": "many kinds of distributed systems and and within each one of those areas there",
    "start": "2193260",
    "end": "2198840"
  },
  {
    "text": "are specializations for example the sort of Hadoop spa type case where you want to place the computation on the data",
    "start": "2198840",
    "end": "2204990"
  },
  {
    "text": "button rather than the other way around but those are still fundamentally distributed systems to some extent",
    "start": "2204990",
    "end": "2210630"
  },
  {
    "text": "they're sharded and yes we need to dive into some of those areas big data is the you know the elephant in the room",
    "start": "2210630",
    "end": "2216510"
  },
  {
    "text": "obviously because there's an enormous amount of data and moving it around the network and on and off disks is is you",
    "start": "2216510",
    "end": "2222660"
  },
  {
    "text": "know fundamentally extremely expensive so anything you can do to minimize the amount of data movement is a very good",
    "start": "2222660",
    "end": "2230520"
  },
  {
    "text": "thing and yes we need some to do some more work there for sure it won't just be",
    "start": "2230520",
    "end": "2240590"
  },
  {
    "text": "where we place it even maybe you know when you time it like that node where",
    "start": "2240590",
    "end": "2245660"
  },
  {
    "text": "this data is busy so how about delaying it and still getting done just in time or a little later you know like the",
    "start": "2245660",
    "end": "2252920"
  },
  {
    "text": "first f-word bustable like yeah I mean in a sense you've got the time axis in the space axis and you want to place it",
    "start": "2252920",
    "end": "2258650"
  },
  {
    "text": "in the right place on that two-dimensional space not not just on the space axis yeah well",
    "start": "2258650",
    "end": "2264410"
  },
  {
    "text": "three-dimensional space depending on which way you look at it",
    "start": "2264410",
    "end": "2268600"
  },
  {
    "text": "microphone sort of a persistent highly",
    "start": "2287420",
    "end": "2294750"
  },
  {
    "text": "performant storage here being an SSD drive and VM you're persistent number",
    "start": "2294750",
    "end": "2300800"
  },
  {
    "text": "they'll serve to a nice cozy initiator for example and though there was a declaration somewhere that that",
    "start": "2318280",
    "end": "2324230"
  },
  {
    "text": "initiator at that IQ n can talk to this target and report Lunz will say lund to",
    "start": "2324230",
    "end": "2329870"
  },
  {
    "text": "you can see that now the question is you know how what you're really doing there",
    "start": "2329870",
    "end": "2336260"
  },
  {
    "text": "is to what you're trying to accomplish is there's an application running somewhere on that host and it could be a",
    "start": "2336260",
    "end": "2341510"
  },
  {
    "text": "VM and the hypervisor it could be just an application running on the host no hypervisor and you are accomplishing the",
    "start": "2341510",
    "end": "2348800"
  },
  {
    "text": "delivery of data access to that application which is there it's all implied none of that is explicit in the",
    "start": "2348800",
    "end": "2356180"
  },
  {
    "text": "mapping model that you've just that you just expressed same fiber channel and it",
    "start": "2356180",
    "end": "2362090"
  },
  {
    "text": "seems still largely true it's a little bit different right but you basically",
    "start": "2362090",
    "end": "2367120"
  },
  {
    "text": "deliver a volume and then there are simple instance it into a container and so it's it's an evolution but still very",
    "start": "2367120",
    "end": "2375340"
  },
  {
    "text": "it's an increment toward something I think that might be not there yet I",
    "start": "2375340",
    "end": "2381590"
  },
  {
    "text": "guess is what I was wondering and it's an open discussion it seems like and my question was what is this working groups",
    "start": "2381590",
    "end": "2388160"
  },
  {
    "text": "role in facilitating that discussion or you know as you said earlier today maybe",
    "start": "2388160",
    "end": "2393410"
  },
  {
    "text": "its job done and there's yeah it's a different group to try to tackle the further yeah unfortunately we're we're",
    "start": "2393410",
    "end": "2401090"
  },
  {
    "text": "gonna get kicked out of this room five minutes ago so what I can encourage you to do thank you very much for your",
    "start": "2401090",
    "end": "2406730"
  },
  {
    "text": "participation this is a lot of audience feedback which was valuable can we just",
    "start": "2406730",
    "end": "2412820"
  },
  {
    "text": "take it out into the area outside the room here and carry on the discussions I think it'd be super cool yeah yeah no",
    "start": "2412820",
    "end": "2419540"
  },
  {
    "text": "fistfights please [Laughter]",
    "start": "2419540",
    "end": "2424239"
  }
]