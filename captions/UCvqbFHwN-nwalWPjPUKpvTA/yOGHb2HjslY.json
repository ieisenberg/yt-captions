[
  {
    "text": "welcome everybody my name is uh Casey Davenport I'm an engineer at igera working on Calico my name is Dan winchip",
    "start": "280",
    "end": "8200"
  },
  {
    "text": "I'm an engineer at Red Hat uh working on open shift networking and uh yeah we're here to",
    "start": "8200",
    "end": "13599"
  },
  {
    "text": "talk about how the tables have turned um specifically uh our journey moving",
    "start": "13599",
    "end": "19039"
  },
  {
    "text": "kubernetes and and Calico from uh IP tables to NF",
    "start": "19039",
    "end": "25039"
  },
  {
    "text": "tables um quick rundown of what we're going to talk about today so I'm going to start just with brief overview of Ip",
    "start": "25039",
    "end": "30960"
  },
  {
    "text": "tables and NF tables um some history about them and their their usage in the kubernetes ecosystem um and we're going",
    "start": "30960",
    "end": "38200"
  },
  {
    "text": "to talk about why we need to leave IP tables in the first place and how we ended up on N of tables as a",
    "start": "38200",
    "end": "45239"
  },
  {
    "text": "replacement um finally we'll talk a little bit about some of the initial results from uh the work we've done so",
    "start": "45239",
    "end": "53239"
  },
  {
    "text": "far uh yeah so a lot of terms get thrown around here IP tables NF tables even IP",
    "start": "53960",
    "end": "59640"
  },
  {
    "text": "tables nft um both IP tables and NF tables are tools that allow you to configure",
    "start": "59640",
    "end": "66400"
  },
  {
    "text": "networking in Linux um and they're both primarily split into two",
    "start": "66400",
    "end": "72320"
  },
  {
    "text": "parts um there's an API component that exists within the kernel uh and there's",
    "start": "72320",
    "end": "78880"
  },
  {
    "text": "a user space component there's a tool that applications can use to read state from the API and write um configuration",
    "start": "78880",
    "end": "86479"
  },
  {
    "text": "back into that API uh and under the hood both of of them are configuring net filter um which",
    "start": "86479",
    "end": "92799"
  },
  {
    "text": "is the primary packet manipulation system um within the Linux kernel uh",
    "start": "92799",
    "end": "98479"
  },
  {
    "text": "they both can do things like packet manipulation forwarding um filtering net",
    "start": "98479",
    "end": "105320"
  },
  {
    "text": "Etc um and in the early days of kubernetes um we picked IP tables uh as",
    "start": "105320",
    "end": "111159"
  },
  {
    "text": "the service implementation in Cube proxy as well as Network policy implementation in",
    "start": "111159",
    "end": "117119"
  },
  {
    "text": "Calico NF tables existed at the time but it wasn't quite as mature as IP tables",
    "start": "117119",
    "end": "122200"
  },
  {
    "text": "was it wasn't quite as ubiquitous as IP tables was and so it was it was the right choice at the",
    "start": "122200",
    "end": "128959"
  },
  {
    "text": "time uh along the way uh IP tables nft came along uh this was in IP tables",
    "start": "130080",
    "end": "137200"
  },
  {
    "text": "version 1.8.1 and it sort of acted as a drop in replacement for the existing user space",
    "start": "137200",
    "end": "143599"
  },
  {
    "text": "tool that provided the same feature set but under the hood was talking to the NF",
    "start": "143599",
    "end": "149080"
  },
  {
    "text": "tables API and this allowed kernel development to switch from IP tables API over to nft",
    "start": "149080",
    "end": "155800"
  },
  {
    "text": "tables API without disrupting the ecosystem of applications that had been built on top of Ip",
    "start": "155800",
    "end": "161640"
  },
  {
    "text": "tables um it's worth noting though that even though we were using the NF tables API under the covers applications are",
    "start": "161640",
    "end": "168519"
  },
  {
    "text": "still limited to the the feature set and capabilities of Ip tables when using",
    "start": "168519",
    "end": "174879"
  },
  {
    "text": "this and it uh it caused some problems in the kubernetes space uh specifically",
    "start": "174879",
    "end": "180720"
  },
  {
    "text": "um as we went through this switch it was important to make sure that everybody's using the same version of the tool",
    "start": "180720",
    "end": "186360"
  },
  {
    "text": "otherwise you got some pretty unexpected and and undesirable",
    "start": "186360",
    "end": "192200"
  },
  {
    "text": "Behavior so um both Calico and Cube proxy ultimately ended up with some Auto",
    "start": "192200",
    "end": "197599"
  },
  {
    "text": "detection logic that helps select what version of the tool chain is being used",
    "start": "197599",
    "end": "203560"
  },
  {
    "text": "um on the system nowadays in 2024 this pretty much always resolves to IP tables",
    "start": "203560",
    "end": "209560"
  },
  {
    "text": "in um and the work that we're doing is",
    "start": "209560",
    "end": "216080"
  },
  {
    "text": "actually to move off of Ip tables nft and instead talk uh directly and natively using nft to the nft Tes",
    "start": "216080",
    "end": "224239"
  },
  {
    "text": "API um this is currently beta in kubernetes 1.31 and Calico",
    "start": "224239",
    "end": "231280"
  },
  {
    "text": "3.29 um and this actually enables us to leverage the full feature set of the NF tables API uh and everything that it",
    "start": "231280",
    "end": "238360"
  },
  {
    "text": "offers again worth noting we're going to have the same transitional issues here uh you",
    "start": "238360",
    "end": "245720"
  },
  {
    "text": "need to make sure that all users of the system are are agreeing on the the tool version it's quite possible to program",
    "start": "245720",
    "end": "252879"
  },
  {
    "text": "state with nft that just can't be parsed by IP tables nft um and it can lead to bad",
    "start": "252879",
    "end": "262280"
  },
  {
    "text": "things uh looking forward this is kind of how we see the future um IP tables is",
    "start": "262680",
    "end": "268759"
  },
  {
    "text": "going to be gone entirely and everybody's just going to be talking um to nft uh Red Hat Enterprise Linux 9 has",
    "start": "268759",
    "end": "275639"
  },
  {
    "text": "already deprecated IP tables and has said that it'll be removed in the next release which is coming in the next year",
    "start": "275639",
    "end": "281720"
  },
  {
    "text": "um we expect other dros to follow so um why are we ditching IP",
    "start": "281720",
    "end": "290039"
  },
  {
    "text": "tables in the first place I think it's worth calling out um a few things first",
    "start": "290039",
    "end": "296520"
  },
  {
    "text": "uh IP tables wasn't really intended for what what kubernetes does with it um it was designed as a single node",
    "start": "296520",
    "end": "302520"
  },
  {
    "text": "firewalling system not as a general purpose uh",
    "start": "302520",
    "end": "307880"
  },
  {
    "text": "service implementation and firewalling for dozens hundreds potentially thousands of of PODS across the cluster",
    "start": "307880",
    "end": "315520"
  },
  {
    "text": "um an example of where this breaks down in IP tables you need to acquire a node wide lock download the entire rule set",
    "start": "315520",
    "end": "322639"
  },
  {
    "text": "make your change reupload it every time you want to make a change and while this might work fine for a single node when",
    "start": "322639",
    "end": "329400"
  },
  {
    "text": "you got like I said thousands of PODS tens of thousands of PODS across large clusters this rule set can become very",
    "start": "329400",
    "end": "336319"
  },
  {
    "text": "large and this operation can become very",
    "start": "336319",
    "end": "340880"
  },
  {
    "text": "slow similarly in kubernetes you've often got several four sometimes five um",
    "start": "341720",
    "end": "347680"
  },
  {
    "text": "users of Ip tables on a single system like we said the first hurdle is getting them all to agree on the same tooling",
    "start": "347680",
    "end": "354520"
  },
  {
    "text": "version um because you need to download and reupload the whole rule set it's possible for one component to write a",
    "start": "354520",
    "end": "360000"
  },
  {
    "text": "rule that just can't be understood by somebody else even when you get everybody on the",
    "start": "360000",
    "end": "365360"
  },
  {
    "text": "same version of the tool there's a question of whose rules come first um IP",
    "start": "365360",
    "end": "370720"
  },
  {
    "text": "tables exposes a limited number of shared resources hook chains that uh",
    "start": "370720",
    "end": "376000"
  },
  {
    "text": "each of these components needs to share and this can sometimes result in fighting um over ordering of those",
    "start": "376000",
    "end": "384280"
  },
  {
    "text": "rules uh and finally the global lock which we already touched on can result in some Noisy Neighbor issues",
    "start": "384280",
    "end": "390199"
  },
  {
    "text": "especially in hyperscale clusters you can get into situations where all these",
    "start": "390199",
    "end": "396199"
  },
  {
    "text": "components are spending a majority of their time waiting for the lock to free up then downloading all of the rules",
    "start": "396199",
    "end": "402599"
  },
  {
    "text": "that every other user on the system has written before being able to make their",
    "start": "402599",
    "end": "408319"
  },
  {
    "text": "changes specifically talking about Cube proxy and Calico we contend over um two",
    "start": "409560",
    "end": "415319"
  },
  {
    "text": "tables n and filter uh and as an example of what that looks like",
    "start": "415319",
    "end": "420479"
  },
  {
    "text": "um here's where uh a snapshot of some Calico and Cube proxy rules uh in the",
    "start": "420479",
    "end": "426080"
  },
  {
    "text": "forward chain um Calico in particular likes to be pretty aggressive about putting its rules at the top of this chain and",
    "start": "426080",
    "end": "433639"
  },
  {
    "text": "that's pretty important because you want to make sure that your network policies actually being enforced um this usually",
    "start": "433639",
    "end": "440319"
  },
  {
    "text": "works out but it's not too uncommon of a case that a user might want to put some custom rules in that aren't from Q proxy",
    "start": "440319",
    "end": "446919"
  },
  {
    "text": "or Calico to meet whatever spoke networking or filtering requirements that they or their",
    "start": "446919",
    "end": "452360"
  },
  {
    "text": "organization may have Um this can lead you to be uh basically have to make a",
    "start": "452360",
    "end": "458800"
  },
  {
    "text": "choice between being confident that your network policy is being enforced first or having the flexibility to in uh",
    "start": "458800",
    "end": "466120"
  },
  {
    "text": "Implement whatever custom logic you need to and uh yeah the final reason that we",
    "start": "466120",
    "end": "473919"
  },
  {
    "text": "need to move away from IP tables is that it's it's Legacy technology um development has stopped on IP tables in",
    "start": "473919",
    "end": "480479"
  },
  {
    "text": "the kernel and all of that development has been moved over to NF tables so if we want to take advantage of these new",
    "start": "480479",
    "end": "487520"
  },
  {
    "text": "features and fixes um we we got to move to NF tables like we mentioned um Red",
    "start": "487520",
    "end": "494720"
  },
  {
    "text": "Hat 10 is planning to remove IP tables alog together debn 11 is going to make it an optional package so not installed",
    "start": "494720",
    "end": "501599"
  },
  {
    "text": "by default and uh yeah we expect this is the way that most distributions are going to go",
    "start": "501599",
    "end": "509759"
  },
  {
    "text": "uh luckily we have n of tables so um n of tables the API improved on a lot of",
    "start": "510680",
    "end": "517279"
  },
  {
    "text": "these limitations um for one you can operate on individual objects you can modify an",
    "start": "517279",
    "end": "525240"
  },
  {
    "text": "individual rule chain set map Etc um and you don't need to download and re-upload",
    "start": "525240",
    "end": "531360"
  },
  {
    "text": "the entire rule set every time uh in addition each component can",
    "start": "531360",
    "end": "537000"
  },
  {
    "text": "Define their own tables they can specify their own hook chains with distinct numeric priorities within those uh",
    "start": "537000",
    "end": "543600"
  },
  {
    "text": "tables and this means there's no there's no fighting and it becomes very easy to",
    "start": "543600",
    "end": "548839"
  },
  {
    "text": "to to look at and say exactly what order uh things are going to be implemented uh plus a lack of a global",
    "start": "548839",
    "end": "556519"
  },
  {
    "text": "global lock means uh you don't haveit these noisy NE neighbor issues in in addition to just API",
    "start": "556519",
    "end": "564040"
  },
  {
    "text": "improvements in an of tables there's also an expanded feature set that we can leverage um I call it a couple of here",
    "start": "564040",
    "end": "570320"
  },
  {
    "text": "verdict maps are a big one they in several places allow us to turn lists of",
    "start": "570320",
    "end": "575519"
  },
  {
    "text": "rules that are uh grow in linear time into constant Time map lookups um",
    "start": "575519",
    "end": "582200"
  },
  {
    "text": "there's also small improvements we can get from being able to combine multiple actions into a single rule um and just",
    "start": "582200",
    "end": "589480"
  },
  {
    "text": "generally the map and set constructs andf tables are way more flexible which are just going to allow us to implement",
    "start": "589480",
    "end": "594839"
  },
  {
    "text": "things that we couldn't have even really considered in IP tables",
    "start": "594839",
    "end": "599920"
  },
  {
    "text": "uh so as a as a correlat to before this is what sharing n of tables looks like between Cube proxy and and Calico um and",
    "start": "601880",
    "end": "608760"
  },
  {
    "text": "you can see completely distinct um each each component gets its own table even",
    "start": "608760",
    "end": "614200"
  },
  {
    "text": "though we're both using filter forward chain um we can Define distinct numeric",
    "start": "614200",
    "end": "619360"
  },
  {
    "text": "priorities to set which order those are executed um and we can operate pretty independently of each",
    "start": "619360",
    "end": "625920"
  },
  {
    "text": "other um additionally if you as a administrator want to come in and Define your own rules you can do so with your",
    "start": "625920",
    "end": "632040"
  },
  {
    "text": "own table or tables um your own hook chains um and you can place those",
    "start": "632040",
    "end": "638480"
  },
  {
    "text": "specifically in the order of operation that you'd like uh and it's worth noting um you can",
    "start": "638480",
    "end": "644959"
  },
  {
    "text": "do that confidently because drops take precedence and so if your network policy denies something it's it's going to be",
    "start": "644959",
    "end": "651600"
  },
  {
    "text": "denied you don't have to worry about accidentally bypassing all of the P policies that you've carefully crafted",
    "start": "651600",
    "end": "659639"
  },
  {
    "text": "so uh we already spoiled the ending that we end up with NF tabls but how did we get there like what were the other",
    "start": "662320",
    "end": "668200"
  },
  {
    "text": "possibilities for getting away from IP tables so one obvious answer would be",
    "start": "668200",
    "end": "673959"
  },
  {
    "text": "ipvs uh ipvs is a kernel-based load balancer built into Linux we already",
    "start": "673959",
    "end": "679240"
  },
  {
    "text": "have an ipvs backend for QBE proxy it's been there for several years it has pretty good performance um the details",
    "start": "679240",
    "end": "686040"
  },
  {
    "text": "of this graph you probably can't see but it doesn't really matter the the blue is IP tables and the green is ipvs and you",
    "start": "686040",
    "end": "692120"
  },
  {
    "text": "can see that for smaller clusters there's not much difference but when you get to 5,000 Services IP tables is",
    "start": "692120",
    "end": "698000"
  },
  {
    "text": "getting a little bit slow and at 10,000 Services it's getting really slow um so",
    "start": "698000",
    "end": "703800"
  },
  {
    "text": "the ipvs mode is pretty good and for a while we thought yeah maybe that's what's going to replace IP tables",
    "start": "703800",
    "end": "710600"
  },
  {
    "text": "eventually but overall it's not really the right choice for for QBE proxy um the big thing is that ipvs only does",
    "start": "710600",
    "end": "717600"
  },
  {
    "text": "load balancing and Q proxy need needs to do more than that it needs to drop some packets it needs to masquerade things um",
    "start": "717600",
    "end": "723800"
  },
  {
    "text": "and you know and Calico can't use ipvs at all it needs to do Network policy and all that stuff um so the Q proxy ipvs",
    "start": "723800",
    "end": "731800"
  },
  {
    "text": "backend actually has a lot of Ip tables in it so if we wanted to keep it working after real drop support for IP tables we",
    "start": "731800",
    "end": "738240"
  },
  {
    "text": "would have to have ported all of that to NF tables and then at that point why to just Port the rest to NF tables as well",
    "start": "738240",
    "end": "744760"
  },
  {
    "text": "um the other thing is that the ipvs backend never quite worked exactly the way we wanted it to because kubernetes",
    "start": "744760",
    "end": "752079"
  },
  {
    "text": "want service proxying to work in a very specific way there are all these features like topology and traffic",
    "start": "752079",
    "end": "757399"
  },
  {
    "text": "policy that you know put slight tweaks on how your services work and ipvs you",
    "start": "757399",
    "end": "762959"
  },
  {
    "text": "know doesn't have those Concepts built in obviously and so the Q proxy backend ends up having to sort of pre-process",
    "start": "762959",
    "end": "769600"
  },
  {
    "text": "some of the connections to get the load balancing to work out right and that's more IP tables",
    "start": "769600",
    "end": "774760"
  },
  {
    "text": "rules um and then ironically some of the best features of ipvs that make people like it are things that Cube proxy can't",
    "start": "774760",
    "end": "781760"
  },
  {
    "text": "take advantage of anyway you know you can tell your ipvs server I want to do maglab hashing or whatever um but it",
    "start": "781760",
    "end": "789040"
  },
  {
    "text": "doesn't help in Cube proxy because you have a separate instance of the proxy on every node and each one of them only",
    "start": "789040",
    "end": "794399"
  },
  {
    "text": "sees a tiny bit of the state so overall it doesn't do much better than just",
    "start": "794399",
    "end": "800880"
  },
  {
    "text": "randomly uh assigning endpoints so the next obvious",
    "start": "800880",
    "end": "807920"
  },
  {
    "text": "possibility is EBP EF ebpf is great when you need to do things that the colel doesn't have apis for but Q proxy needs",
    "start": "807920",
    "end": "815399"
  },
  {
    "text": "to move packets around rewrite some packets drop other packets those are all things that the colonel already knows",
    "start": "815399",
    "end": "821199"
  },
  {
    "text": "how to do net filter routing um so you know why why do you need to use ebpf",
    "start": "821199",
    "end": "828000"
  },
  {
    "text": "ebpf is sort of like a Swiss army knife like it's it's great to have around to do simple things with um you know you",
    "start": "828000",
    "end": "834279"
  },
  {
    "text": "can build your Ikea bookshelf with with a Swiss army knife but you wouldn't want to build a house with a Swiss army knife",
    "start": "834279",
    "end": "840800"
  },
  {
    "text": "and likewise you don't want to do a massive software engineering project with ebpf um we don't write our control",
    "start": "840800",
    "end": "846720"
  },
  {
    "text": "plane in machine language so you know why should we write our data plane in machine language um and some people might answer",
    "start": "846720",
    "end": "853680"
  },
  {
    "text": "that with well performance ebpf is so fast it's it it's not as fast as the",
    "start": "853680",
    "end": "859399"
  },
  {
    "text": "hype says um there are things that evf can do",
    "start": "859399",
    "end": "865560"
  },
  {
    "text": "cool tricks with your network traffic to make things faster but NF tables can do some of those things too I mean just",
    "start": "865560",
    "end": "871600"
  },
  {
    "text": "switching everything to maps and you know uh constant time lookups like Casey mentioned will help the rule processing",
    "start": "871600",
    "end": "879240"
  },
  {
    "text": "flow tables which are something that we'll talk about later can help some of the uh packet the packet",
    "start": "879240",
    "end": "886279"
  },
  {
    "text": "latency through but and then the other thing is that ebpf is just a lot like the tooling is",
    "start": "886279",
    "end": "895120"
  },
  {
    "text": "very hard to use the documentation is mostly lacking uh you often need to have a very very new kernel and so either you",
    "start": "895120",
    "end": "901959"
  },
  {
    "text": "have to tell your users you need to update to the latest release or you have to provide a backward compatibility",
    "start": "901959",
    "end": "907519"
  },
  {
    "text": "implementation um there's no support for go ebpf translation anywhere which means",
    "start": "907519",
    "end": "912680"
  },
  {
    "text": "that if we were going to use ebpf and Q proxy we would have to write it in either C or rust or something else",
    "start": "912680",
    "end": "919519"
  },
  {
    "text": "so all of those problems are things that you you know you can get around but for",
    "start": "919519",
    "end": "924680"
  },
  {
    "text": "Sig Network it didn't seem to make sense um you",
    "start": "924680",
    "end": "930199"
  },
  {
    "text": "sorry uh it would just be too difficult to get the existing team you know",
    "start": "930199",
    "end": "935839"
  },
  {
    "text": "suddenly knowing all this ebpf stuff and writing rust or whatever and um it it",
    "start": "935839",
    "end": "941000"
  },
  {
    "text": "seemed to make more sense to just stay away from ebpf that doesn't mean everybody should Calico actually has an ebpf back end but it didn't seem to make",
    "start": "941000",
    "end": "948079"
  },
  {
    "text": "sense for Sig Network in cute proxy so none of these are bad apis ipvs",
    "start": "948079",
    "end": "955880"
  },
  {
    "text": "would probably be great if you're writing Gateway API e f is great for probes and observability um can be used",
    "start": "955880",
    "end": "962079"
  },
  {
    "text": "for bigger things if you're you're ready to deal with it OBS I didn't talk about before but it's great if you're writing",
    "start": "962079",
    "end": "967240"
  },
  {
    "text": "a whole data plane but it's hard to move packets in and out of ovs so it it",
    "start": "967240",
    "end": "972519"
  },
  {
    "text": "wouldn't really work for cube proxy where it just wants to be one small piece of the data plane with other stuff going around it nft tabls is the most",
    "start": "972519",
    "end": "980199"
  },
  {
    "text": "general purpose Linux Network stack API um and it it made sense for our for us",
    "start": "980199",
    "end": "986240"
  },
  {
    "text": "and probably makes sense for a lot of your use cases as well",
    "start": "986240",
    "end": "990920"
  },
  {
    "text": "so to improve performance in in the NF tables Q proxy and Calico what what did we do um so Casey already mentioned that",
    "start": "992360",
    "end": "1001040"
  },
  {
    "text": "the the o n versus o1 um in IP tables we have a separate IP tables rule for each",
    "start": "1001040",
    "end": "1007720"
  },
  {
    "text": "service so we have a rule that says if the destination IP is this go to this chain if the destination IP is that good",
    "start": "1007720",
    "end": "1013519"
  },
  {
    "text": "at its other chain and then within each chain there are multiple rules for each endpoint and this really adds up you",
    "start": "1013519",
    "end": "1019800"
  },
  {
    "text": "know if you have 30,000 Services you're going to have more than 100,000 IP tables rules in NF tables we have one",
    "start": "1019800",
    "end": "1026520"
  },
  {
    "text": "rule well for for this particular service thing just if the destination IP",
    "start": "1026520",
    "end": "1032000"
  },
  {
    "text": "is in the services vmap then apply the verdict from that map and then we just",
    "start": "1032000",
    "end": "1037480"
  },
  {
    "text": "have a map that has one entry for each service in this case mapping an IP to a",
    "start": "1037480",
    "end": "1042880"
  },
  {
    "text": "jump rule so in this case there's only one rule the H map lookup is very",
    "start": "1042880",
    "end": "1049440"
  },
  {
    "text": "fast um and everything is faster um Calico also had some yeah",
    "start": "1049440",
    "end": "1056880"
  },
  {
    "text": "similar optimizations so so in Calico the opportunity to optimize these rules is not quite as great mostly because of",
    "start": "1056880",
    "end": "1064080"
  },
  {
    "text": "well a few things um for one the rules that be right scale differently with different factors um largely they Scale",
    "start": "1064080",
    "end": "1072880"
  },
  {
    "text": "based off of things local to the node so the number of running workloads for example which is a much smaller number",
    "start": "1072880",
    "end": "1078600"
  },
  {
    "text": "than all of the services and all the end points in the cluster um plus just the nature of",
    "start": "1078600",
    "end": "1085000"
  },
  {
    "text": "network policy means that we can get away with IP sets using um uh allowing",
    "start": "1085000",
    "end": "1091240"
  },
  {
    "text": "us to avoid making as many updates as workloads in the cluster change um but uh yeah there were still",
    "start": "1091240",
    "end": "1098760"
  },
  {
    "text": "some some good wins for us to have here so we did a very similar thing to to cube proxy using a verdict map to allow",
    "start": "1098760",
    "end": "1105080"
  },
  {
    "text": "us to simplify our um comparatively smaller but still um growing uh set of dispatch chains",
    "start": "1105080",
    "end": "1112640"
  },
  {
    "text": "these are the chains that again dispatch from a particular uh pod in your cluster",
    "start": "1112640",
    "end": "1118240"
  },
  {
    "text": "to the policy that belongs to that pod um uh so that was a nice win and then",
    "start": "1118240",
    "end": "1124679"
  },
  {
    "text": "obviously we get um some some nice side effects from the other API improvements that I was talking about earlier uh like",
    "start": "1124679",
    "end": "1132200"
  },
  {
    "text": "the ability to make incremental updates without uploading the entire rule set um",
    "start": "1132200",
    "end": "1137840"
  },
  {
    "text": "and uh not contending for the locks that's an ex yeah and and also",
    "start": "1137840",
    "end": "1144240"
  },
  {
    "text": "since Calico uses Q proxy to do the service proing part it benefits from everything that was changed in Q proxy",
    "start": "1144240",
    "end": "1151200"
  },
  {
    "text": "um so what he was just saying about the rule updates so IP taes the way that the",
    "start": "1151200",
    "end": "1156400"
  },
  {
    "text": "IP tables restore binary works is if you want to change any rule in a chain you",
    "start": "1156400",
    "end": "1162080"
  },
  {
    "text": "have to rewrite the entire chain so when any service if you if you change add or",
    "start": "1162080",
    "end": "1167880"
  },
  {
    "text": "delete a service Cube proxy has to rewrite the entire Cube Services chain which is you know number of rules equal",
    "start": "1167880",
    "end": "1174480"
  },
  {
    "text": "to the number of services in the NF tables version you can do uh nft add",
    "start": "1174480",
    "end": "1180000"
  },
  {
    "text": "element nft delete element to just you know add and delete the specific elements that you need so the updates",
    "start": "1180000",
    "end": "1187400"
  },
  {
    "text": "end up being much smaller um and what I said about IP tables that's actually",
    "start": "1187400",
    "end": "1192720"
  },
  {
    "text": "fairly recent up until a few years ago on every update we would rewrite literally the entire IP tables rule set",
    "start": "1192720",
    "end": "1199880"
  },
  {
    "text": "um and that was even worse so how does all this turn out in",
    "start": "1199880",
    "end": "1207080"
  },
  {
    "text": "the end um ironically the initial test showed that at startup in a large",
    "start": "1207080",
    "end": "1213440"
  },
  {
    "text": "cluster Q proxy nft tables mode is actually slower than IP tables mode because it turns out that the the",
    "start": "1213440",
    "end": "1219440"
  },
  {
    "text": "binaries the nft binary hadn't been optimized as much as the IP tables binaries have and so it wasn't very good",
    "start": "1219440",
    "end": "1226200"
  },
  {
    "text": "at dealing with a gigantic data set all at once um this has already been fixed in the",
    "start": "1226200",
    "end": "1232280"
  },
  {
    "text": "latest version of the binaries but you know it will take a while for people to get that so we'll probably put in some",
    "start": "1232280",
    "end": "1237480"
  },
  {
    "text": "sort of workaround to to break up the initial update into smaller pieces so that it can be processed more easily as",
    "start": "1237480",
    "end": "1244440"
  },
  {
    "text": "for the incremental updates it's difficult to say given the the data we",
    "start": "1244440",
    "end": "1249720"
  },
  {
    "text": "have how much faster it is because with the IP tables updates they're so slow and CPU intensive that our Sig",
    "start": "1249720",
    "end": "1256880"
  },
  {
    "text": "scalability performance jobs that use IP tables use the Min sync period 10sec",
    "start": "1256880",
    "end": "1262679"
  },
  {
    "text": "option to tell QBE proxy only run IP tables updates a maximum of once every",
    "start": "1262679",
    "end": "1267960"
  },
  {
    "text": "10 seconds no matter how fast the services change because doing any more than that it would just suck up all of",
    "start": "1267960",
    "end": "1273000"
  },
  {
    "text": "their CPU so the average latency for a endpoint change in the IP tables uh",
    "start": "1273000",
    "end": "1280240"
  },
  {
    "text": "performance job is 10 seconds uh in the NF tables version of it it's about 1 and a half seconds because we don't have",
    "start": "1280240",
    "end": "1286200"
  },
  {
    "text": "that Min sync period or we use the default Min sync period of 1 second um",
    "start": "1286200",
    "end": "1291640"
  },
  {
    "text": "so I mean yes the difference is just because we're running updates more often but we're running updates more often",
    "start": "1291640",
    "end": "1297240"
  },
  {
    "text": "because we can run updates more often without completely thrashing the",
    "start": "1297240",
    "end": "1302600"
  },
  {
    "text": "machine um in terms of data plane latency so for how fast it takes packets",
    "start": "1303080",
    "end": "1308600"
  },
  {
    "text": "to get from one pod to another um again you you probably can't see the details",
    "start": "1308600",
    "end": "1314159"
  },
  {
    "text": "of this graph and if you download the sides later there's a link to the talk that Nadia and Antonio o gave yesterday from obser",
    "start": "1314159",
    "end": "1322240"
  },
  {
    "text": "from observability to Performance which is what this graph comes from but the most important thing to notice here is",
    "start": "1322240",
    "end": "1327919"
  },
  {
    "text": "that there are actually six bars in each column not three uh the tiny little ones",
    "start": "1327919",
    "end": "1333559"
  },
  {
    "text": "are the NF tables latency uh which is so much smaller than the IP tables latency you can barely see it um in partic the",
    "start": "1333559",
    "end": "1341080"
  },
  {
    "text": "center column is the the p50 latency which is the average time that a a packet going through the the service uh",
    "start": "1341080",
    "end": "1348200"
  },
  {
    "text": "rule takes uh the blue is in a cluster with 5,000 Services red is 10,000 yellow is",
    "start": "1348200",
    "end": "1355760"
  },
  {
    "text": "30,000 you can see that and then as you go further along there's the P90 P95 and",
    "start": "1355760",
    "end": "1362400"
  },
  {
    "text": "P99 uh numbers and yeah the IP tables numbers just get worse and worse as the",
    "start": "1362400",
    "end": "1369000"
  },
  {
    "text": "number of rules grows whereas the nft tables numbers stay pretty flat um so",
    "start": "1369000",
    "end": "1375400"
  },
  {
    "text": "that's good um when I talk about the IP tables rules",
    "start": "1375400",
    "end": "1382240"
  },
  {
    "text": "this is mostly rules in the natat table so IP tables has uh natat and filter tables the big difference for our",
    "start": "1382240",
    "end": "1388640"
  },
  {
    "text": "purposes is that the knat table only applies to the first packet whereas the filter table applies to every",
    "start": "1388640",
    "end": "1394159"
  },
  {
    "text": "packet in the past we have occasionally tried to do things with the pro proxy rules where we add a lot of rules to the",
    "start": "1394159",
    "end": "1401159"
  },
  {
    "text": "filter table and if you get above 30,000 rules or so in the filter table like the",
    "start": "1401159",
    "end": "1407840"
  },
  {
    "text": "node just completely crashes you can't even ssh in it stops processing data",
    "start": "1407840",
    "end": "1412880"
  },
  {
    "text": "basically so every time that's happened we've had to revert the change we made and figure out a different way to",
    "start": "1412880",
    "end": "1418360"
  },
  {
    "text": "implement the same thing and sometimes we couldn't there are things that we wanted to do like rejecting connections",
    "start": "1418360",
    "end": "1423520"
  },
  {
    "text": "if if you connect to a an unused port on a service IP with the IP tables proxy that connection just disappears and gets",
    "start": "1423520",
    "end": "1430000"
  },
  {
    "text": "dropped with the nft tables proxy it will actually reject it because we can have a rule to recognize any service IP",
    "start": "1430000",
    "end": "1437799"
  },
  {
    "text": "with an unused Port um which we couldn't do in IP tables without adding too many rules to the filter table and completely",
    "start": "1437799",
    "end": "1444440"
  },
  {
    "text": "breaking everything so not only can we be faster but we can do",
    "start": "1444440",
    "end": "1451000"
  },
  {
    "text": "more in terms of throughput bandwidth it's pretty much the same between IP tables and NF tables and that's what we",
    "start": "1452200",
    "end": "1458799"
  },
  {
    "text": "expected but one cool feature of NF tables is something called flow tables",
    "start": "1458799",
    "end": "1464320"
  },
  {
    "text": "where once you figure out so you have a packet that comes through V 1 23 goes",
    "start": "1464320",
    "end": "1469840"
  },
  {
    "text": "into the proxy gets D added to a service IP and then goes out through V",
    "start": "1469840",
    "end": "1475559"
  },
  {
    "text": "456 and then once you've determined that that's what that what packets on that connection are supposed to do you can",
    "start": "1475559",
    "end": "1481480"
  },
  {
    "text": "add that connection to a flow table and then when the next packet comes through it will just immediately jump from One V",
    "start": "1481480",
    "end": "1487919"
  },
  {
    "text": "to the other without passing through NF tables and all of the rest of the the net filter path um Antonio wrote a proof",
    "start": "1487919",
    "end": "1496760"
  },
  {
    "text": "of concept of this for cube prox showed about a 15% performance boost on",
    "start": "1496760",
    "end": "1502279"
  },
  {
    "text": "on heavy traffic service connections uh Casey also did a proof of concept for",
    "start": "1502279",
    "end": "1507559"
  },
  {
    "text": "Calico um both cases we're sort of trying to figure out exactly what to do",
    "start": "1507559",
    "end": "1512600"
  },
  {
    "text": "with this um if it needs to be configurable or if it should be by default but again this shows cool new",
    "start": "1512600",
    "end": "1518960"
  },
  {
    "text": "things that we can do with NF tables that we couldn't do with IP",
    "start": "1518960",
    "end": "1523760"
  },
  {
    "text": "tables so basically things are already good but we spent a long time optimizing",
    "start": "1524240",
    "end": "1531039"
  },
  {
    "text": "the IP tables Cube proxy and we've just barely started with nft tables um so we expect it's actually going to get even",
    "start": "1531039",
    "end": "1537240"
  },
  {
    "text": "better than it is now hopefully um but in general programming time is better because of the",
    "start": "1537240",
    "end": "1543039"
  },
  {
    "text": "differences in locking and the ability to do the the smaller incremental updates uh which will then let you do",
    "start": "1543039",
    "end": "1549120"
  },
  {
    "text": "updates more frequently and keep your data plane more in sync with the current",
    "start": "1549120",
    "end": "1554520"
  },
  {
    "text": "state of PODS and services uh the packet latency is improved by having a rule set that's",
    "start": "1554520",
    "end": "1560200"
  },
  {
    "text": "mostly 01 rather than o n um and then we can do Co cool new",
    "start": "1560200",
    "end": "1567519"
  },
  {
    "text": "stuff and that's yeah what we have thanks everybody think we've got some time for",
    "start": "1567960",
    "end": "1575000"
  },
  {
    "text": "[Applause] questions um if you have questions there",
    "start": "1575000",
    "end": "1580880"
  },
  {
    "text": "are mics in um you did talk about calico and",
    "start": "1580880",
    "end": "1588399"
  },
  {
    "text": "proxy what about cuet uh has cuet been modified to use n tables cuet doesn't do",
    "start": "1588399",
    "end": "1595120"
  },
  {
    "text": "any IP table stuff anymore um mostly it it creates one rule that gets used by",
    "start": "1595120",
    "end": "1601760"
  },
  {
    "text": "the IP tables wrapper to figure out whether you you're using IP tables Legacy or IP tables nft but that's it so",
    "start": "1601760",
    "end": "1607520"
  },
  {
    "text": "it didn't need any modifications",
    "start": "1607520",
    "end": "1611159"
  },
  {
    "text": "uh can can you elaborate a little bit can you go back to the slides showing the latency uh comparation with the",
    "start": "1621080",
    "end": "1627120"
  },
  {
    "text": "graph yeah can you elaborate what latency is this is the update latency or",
    "start": "1627120",
    "end": "1632399"
  },
  {
    "text": "it's uh getting data plan getting the um like a real",
    "start": "1632399",
    "end": "1638440"
  },
  {
    "text": "IPS this is the latency for a packet from one pod to go through the service",
    "start": "1638440",
    "end": "1643679"
  },
  {
    "text": "proxy and reach another pod and and the previous slides you also mention",
    "start": "1643679",
    "end": "1648840"
  },
  {
    "text": "uh in the early days uh we found NF tables is like worse compared with IB",
    "start": "1648840",
    "end": "1655159"
  },
  {
    "text": "tables right like so the the one specific case where it's worse um was at",
    "start": "1655159",
    "end": "1662000"
  },
  {
    "text": "startup time if you have a very large rule set that you need to send all at once that is much slower so we we're",
    "start": "1662000",
    "end": "1668240"
  },
  {
    "text": "working on fixing that okay um are there any benchmarks regarding like a when",
    "start": "1668240",
    "end": "1674039"
  },
  {
    "text": "Services got changed end points changed or service got removed updated uh how long does it take for IP tables or uh",
    "start": "1674039",
    "end": "1682679"
  },
  {
    "text": "tables to reflect that so so that was what I was talking about here where we don't actually have good numbers because",
    "start": "1682679",
    "end": "1689799"
  },
  {
    "text": "the the performance tests that we use do very infrequent updates with IP tables",
    "start": "1689799",
    "end": "1695120"
  },
  {
    "text": "and very frequent updates with NF tables just because of the difference in in how much CPU they use so it's better but",
    "start": "1695120",
    "end": "1702799"
  },
  {
    "text": "okay thank you and I would highly yeah I was going to say highly",
    "start": "1702799",
    "end": "1708360"
  },
  {
    "text": "recommend taking a look at Nadia and Antonio's slides here they go into a lot of detail about uh these numbers and and",
    "start": "1708360",
    "end": "1715919"
  },
  {
    "text": "more and how they got them yeah this might have been answered already sitting right over here if you want",
    "start": "1715919",
    "end": "1721200"
  },
  {
    "text": "to this might have been answered already but on this slide what is the Y scale is it just 1.0 the worst performance and",
    "start": "1721200",
    "end": "1726919"
  },
  {
    "text": "it's all relative or is actual it's it's milliseconds to something or other I you",
    "start": "1726919",
    "end": "1732679"
  },
  {
    "text": "the curve was the important part so but but if you if you look in their their slides you can see all the data they're actually they have multiple graphs of of",
    "start": "1732679",
    "end": "1739039"
  },
  {
    "text": "slightly different things this is yeah round trip back at time from contract",
    "start": "1739039",
    "end": "1744760"
  },
  {
    "text": "metrics yeah time time to get the first entry in contract or something or I",
    "start": "1744760",
    "end": "1750640"
  },
  {
    "text": "forget hello um have there been any efforts to migrate other components that",
    "start": "1750640",
    "end": "1756200"
  },
  {
    "text": "write to IP tables like IP mask agent or cium or any of the many other things that that do this also to nft tables and",
    "start": "1756200",
    "end": "1762840"
  },
  {
    "text": "is there any coordination required to complete the migration for things that might still be writing to to Legacy IP",
    "start": "1762840",
    "end": "1769519"
  },
  {
    "text": "tables or to IP tables nft I'm not aware of work that's been",
    "start": "1769519",
    "end": "1775799"
  },
  {
    "text": "done on either ayum or IP mask agent so uh IP mask agent you mean the the in the",
    "start": "1775799",
    "end": "1781960"
  },
  {
    "text": "cni plugins yeah yeah that actually just merged like two weeks ago U so the the",
    "start": "1781960",
    "end": "1787519"
  },
  {
    "text": "the IP mask and the uh host or Port map plugins in the cni plugins should both",
    "start": "1787519",
    "end": "1792760"
  },
  {
    "text": "support NF tables now um I have patches to cryo um so I'm I'm working on all of",
    "start": "1792760",
    "end": "1798600"
  },
  {
    "text": "the things that are in open shift um and occasionally poking other people um as",
    "start": "1798600",
    "end": "1803640"
  },
  {
    "text": "as it occurs to me as as far as coordination um so Casey mentioned that",
    "start": "1803640",
    "end": "1808799"
  },
  {
    "text": "with Calico they you know they were doing things with putting one rule above and one rule below because they needed",
    "start": "1808799",
    "end": "1814720"
  },
  {
    "text": "to tightly integrate with what Q proxy is doing with their own rules as long as",
    "start": "1814720",
    "end": "1820559"
  },
  {
    "text": "you're not trying to do that like like you know if if you're just adding rules and not thinking about Q proxy rules it",
    "start": "1820559",
    "end": "1827399"
  },
  {
    "text": "probably doesn't matter if you use IP tables and Q proxy uses NF tables there there's some gotas there um",
    "start": "1827399",
    "end": "1835960"
  },
  {
    "text": "so like if you're uh like I mentioned where drops take precedence and of tables for example if you are using if",
    "start": "1835960",
    "end": "1842360"
  },
  {
    "text": "you're writing any IP tables into a table that has a default policy of drop",
    "start": "1842360",
    "end": "1848640"
  },
  {
    "text": "then that drop is going to come into effect over your network policy",
    "start": "1848640",
    "end": "1853919"
  },
  {
    "text": "actions makes sense thank you hi isn't uh isn't ipvs has got more than",
    "start": "1853919",
    "end": "1862960"
  },
  {
    "text": "one mode the performance metrics that you shared is it a specific mode you had put up on I don't know I I grabbed that",
    "start": "1862960",
    "end": "1871240"
  },
  {
    "text": "you know off some old blog post um so I I you can actually click the link the",
    "start": "1871240",
    "end": "1876840"
  },
  {
    "text": "SLA ipvs I think probably RR is the default so that's probably what it was using",
    "start": "1876840",
    "end": "1883159"
  },
  {
    "text": "Okay um but but like I was saying the the choice of of mode in ipvs ends up not mattering a whole lot because each",
    "start": "1883159",
    "end": "1890480"
  },
  {
    "text": "node only sees one small percentage of of the traffic and so it it can't really",
    "start": "1890480",
    "end": "1895880"
  },
  {
    "text": "take advantage of of being clever as much so sitting on the top how",
    "start": "1895880",
    "end": "1901919"
  },
  {
    "text": "does a service definition or endpoint slices whatever you shared does it have",
    "start": "1901919",
    "end": "1907200"
  },
  {
    "text": "any relevance to using one versus another when it comes to service being",
    "start": "1907200",
    "end": "1912720"
  },
  {
    "text": "an endpoint slice or a service endpoint right so does it have any",
    "start": "1912720",
    "end": "1919840"
  },
  {
    "text": "what whatever you are shared here is at the Kel level which is much lower when",
    "start": "1920039",
    "end": "1925519"
  },
  {
    "text": "we work as an application at the kubernetes we are concerned about the surveys and point slices and so forth so",
    "start": "1925519",
    "end": "1932159"
  },
  {
    "text": "I mean yeah from that point of view nothing changes like Q proxy just works the way it always works Services work",
    "start": "1932159",
    "end": "1937600"
  },
  {
    "text": "endpoint slices work yeah okay no difference then okay thank [Music]",
    "start": "1937600",
    "end": "1942760"
  },
  {
    "text": "you hi uh I was curious did you ever uh with IP table notice issues with the uh",
    "start": "1942760",
    "end": "1951360"
  },
  {
    "text": "with the the rule set getting locked where the node would start to fail or have health issues or you know pods",
    "start": "1951360",
    "end": "1958120"
  },
  {
    "text": "wouldn't be able to be scheduled do you ever notice anything like that in um just the experience with IV",
    "start": "1958120",
    "end": "1964279"
  },
  {
    "text": "tables yeah I mean I would say I've definitely seen issues with IP tables where nodes effectively become",
    "start": "1964279",
    "end": "1971279"
  },
  {
    "text": "unresponsive largely because um we'll spend all of our Cycles trying",
    "start": "1971279",
    "end": "1977639"
  },
  {
    "text": "to to load and reprogram large rule sets um and then wait for a lock so uh",
    "start": "1977639",
    "end": "1984399"
  },
  {
    "text": "especially in large clusters that have a large number of services complex Network policies uh or a high rate of churn in",
    "start": "1984399",
    "end": "1992039"
  },
  {
    "text": "in uh end points within the cluster um I've certainly seen that sort of Behavior now I wouldn't expect it on",
    "start": "1992039",
    "end": "1999279"
  },
  {
    "text": "smaller or mediumsized uh clusters though got it that makes sense it usually wouldn't resolve on its own",
    "start": "1999279",
    "end": "2005159"
  },
  {
    "text": "right it would just sort of or depends on the it depends yeah depends on what's",
    "start": "2005159",
    "end": "2010200"
  },
  {
    "text": "what's triggering that scenario okay thank",
    "start": "2010200",
    "end": "2014840"
  },
  {
    "text": "you hi you mentioned that once the ipvs was taken as a successor of Ip table but",
    "start": "2015360",
    "end": "2022559"
  },
  {
    "text": "didn't achieve 100% complex ability so uh now their uh UNF table has achieved",
    "start": "2022559",
    "end": "2030480"
  },
  {
    "text": "100 comp flexibility right uh yeah there are some features of",
    "start": "2030480",
    "end": "2035559"
  },
  {
    "text": "Ip tables that we intentionally dropped because we decided they were a bad idea",
    "start": "2035559",
    "end": "2040600"
  },
  {
    "text": "like U particularly using node ports on Local Host um and there are metrics in",
    "start": "2040600",
    "end": "2047480"
  },
  {
    "text": "the IP tables proxy that will alert you if you're using one of those features so that you know that you might have",
    "start": "2047480",
    "end": "2052960"
  },
  {
    "text": "problems with switching to NF tables um there is currently no plan to change",
    "start": "2052960",
    "end": "2058878"
  },
  {
    "text": "the default uh value or the default mode in Cube proxy just because we're worried about you know there's so many possible",
    "start": "2058879",
    "end": "2066079"
  },
  {
    "text": "compatibility issues like you know for inance Q proxy doesn't know if you're running Calico or not so we can't just switch to NF tables mode which wouldn't",
    "start": "2066079",
    "end": "2072800"
  },
  {
    "text": "work if Calico was still using IP tables and things like that so probably the default won't actually change but we",
    "start": "2072800",
    "end": "2079280"
  },
  {
    "text": "will start recommending that people use NF tables mode I see but now an F table",
    "start": "2079280",
    "end": "2085760"
  },
  {
    "text": "is in beta mode uh do you see any risk if or you will start to adopt it right",
    "start": "2085760",
    "end": "2092079"
  },
  {
    "text": "now nope um you we definitely had some bug reports in Alpha um and and dealt",
    "start": "2092079",
    "end": "2098200"
  },
  {
    "text": "with those um but it we haven't heard anything bad",
    "start": "2098200",
    "end": "2104920"
  },
  {
    "text": "about beta other than the slow startup time if you in in big",
    "start": "2104920",
    "end": "2110839"
  },
  {
    "text": "clusters okay",
    "start": "2110839",
    "end": "2114079"
  },
  {
    "text": "thanks sounds like that might be it yeah thanks everybody",
    "start": "2123560",
    "end": "2129640"
  }
]