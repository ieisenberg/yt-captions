[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "[Music]",
    "start": "760",
    "end": "20880"
  },
  {
    "text": "hey this is roy i work at square on the",
    "start": "20880",
    "end": "23359"
  },
  {
    "text": "cryptographic identity and secret",
    "start": "23359",
    "end": "24960"
  },
  {
    "text": "management team today i'll be talking",
    "start": "24960",
    "end": "27199"
  },
  {
    "text": "about our aws odc authentication",
    "start": "27199",
    "end": "29359"
  },
  {
    "text": "infrastructure using spiffy at square",
    "start": "29359",
    "end": "32719"
  },
  {
    "text": "so",
    "start": "32719",
    "end": "33680"
  },
  {
    "text": "we're going to be going over",
    "start": "33680",
    "end": "35120"
  },
  {
    "text": "what is odc and why are we using aws the",
    "start": "35120",
    "end": "37440"
  },
  {
    "text": "architecture our solutions and the",
    "start": "37440",
    "end": "39760"
  },
  {
    "text": "current status of our dcf square",
    "start": "39760",
    "end": "42480"
  },
  {
    "text": "start with the overview",
    "start": "42480",
    "end": "44640"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "some background about awsome square",
    "start": "44640",
    "end": "47039"
  },
  {
    "text": "we're in the process of transitioning to",
    "start": "47039",
    "end": "48640"
  },
  {
    "text": "the cloud with a focus on aws it's been",
    "start": "48640",
    "end": "51039"
  },
  {
    "text": "a slow process there's lots of apps",
    "start": "51039",
    "end": "52800"
  },
  {
    "text": "still in the square dc these dc apps",
    "start": "52800",
    "end": "55120"
  },
  {
    "text": "will often use services in aws such as",
    "start": "55120",
    "end": "57680"
  },
  {
    "text": "s3 and sqs",
    "start": "57680",
    "end": "60320"
  },
  {
    "text": "apps in aws",
    "start": "60320",
    "end": "62480"
  },
  {
    "text": "live on separate accounts so we have a",
    "start": "62480",
    "end": "66240"
  },
  {
    "text": "isolation there and then we also have",
    "start": "66240",
    "end": "68479"
  },
  {
    "text": "isolation in terms of the environment",
    "start": "68479",
    "end": "70560"
  },
  {
    "text": "that the apps are on so staging and",
    "start": "70560",
    "end": "72159"
  },
  {
    "text": "production will be on different accounts",
    "start": "72159",
    "end": "75439"
  },
  {
    "start": "74000",
    "end": "74000"
  },
  {
    "text": "so what is oidc oidc is no",
    "start": "75439",
    "end": "78320"
  },
  {
    "text": "open standard and decentralized",
    "start": "78320",
    "end": "79840"
  },
  {
    "text": "authorization protocol it allows third",
    "start": "79840",
    "end": "82000"
  },
  {
    "text": "parties to verify the identity of end",
    "start": "82000",
    "end": "84640"
  },
  {
    "text": "users",
    "start": "84640",
    "end": "85759"
  },
  {
    "text": "does so by sending data about users in",
    "start": "85759",
    "end": "88240"
  },
  {
    "text": "jots which are signed by an",
    "start": "88240",
    "end": "89600"
  },
  {
    "text": "authorization server which in our case",
    "start": "89600",
    "end": "91360"
  },
  {
    "text": "would be expired so there's no need to",
    "start": "91360",
    "end": "93360"
  },
  {
    "text": "use a separate identity and separate",
    "start": "93360",
    "end": "95360"
  },
  {
    "text": "authentication for every third party you",
    "start": "95360",
    "end": "97680"
  },
  {
    "text": "try to connect to",
    "start": "97680",
    "end": "100479"
  },
  {
    "text": "so we'll be talking about a small subset",
    "start": "100479",
    "end": "103200"
  },
  {
    "text": "this oedc spec which is the discovery",
    "start": "103200",
    "end": "105439"
  },
  {
    "text": "provider the discovery provider exposes",
    "start": "105439",
    "end": "108240"
  },
  {
    "text": "json webkey sets or jocks for jot",
    "start": "108240",
    "end": "111360"
  },
  {
    "text": "validation",
    "start": "111360",
    "end": "113200"
  },
  {
    "text": "so there's two endpoints that the",
    "start": "113200",
    "end": "115119"
  },
  {
    "text": "provider has it has the well-known",
    "start": "115119",
    "end": "116880"
  },
  {
    "text": "openid configuration and the keys the",
    "start": "116880",
    "end": "120159"
  },
  {
    "text": "keys is pretty straightforward it just",
    "start": "120159",
    "end": "121439"
  },
  {
    "text": "serves jocks",
    "start": "121439",
    "end": "122960"
  },
  {
    "text": "the discovery document contains metadata",
    "start": "122960",
    "end": "125520"
  },
  {
    "text": "about the provider",
    "start": "125520",
    "end": "127119"
  },
  {
    "text": "including information about the issuer",
    "start": "127119",
    "end": "128959"
  },
  {
    "text": "of the jots the uri where the keys are",
    "start": "128959",
    "end": "132480"
  },
  {
    "text": "served from",
    "start": "132480",
    "end": "133599"
  },
  {
    "text": "and the algorithms used to sign the jots",
    "start": "133599",
    "end": "136720"
  },
  {
    "text": "as well as the response types",
    "start": "136720",
    "end": "140000"
  },
  {
    "start": "139000",
    "end": "139000"
  },
  {
    "text": "so this is an example of a jot we would",
    "start": "140000",
    "end": "142239"
  },
  {
    "text": "have at square for oidc authentication",
    "start": "142239",
    "end": "144560"
  },
  {
    "text": "to aws",
    "start": "144560",
    "end": "145840"
  },
  {
    "text": "uh in the subject we have the spiffy id",
    "start": "145840",
    "end": "148480"
  },
  {
    "text": "of the app and the audience we have the",
    "start": "148480",
    "end": "151040"
  },
  {
    "text": "intended aws account",
    "start": "151040",
    "end": "153120"
  },
  {
    "text": "this is like",
    "start": "153120",
    "end": "154319"
  },
  {
    "text": "the aws account that is supposed to",
    "start": "154319",
    "end": "155760"
  },
  {
    "text": "receive this jot and then we have the",
    "start": "155760",
    "end": "157840"
  },
  {
    "text": "issue that time",
    "start": "157840",
    "end": "159599"
  },
  {
    "text": "so we had three options when we were",
    "start": "159599",
    "end": "161519"
  },
  {
    "text": "choosing what to put in the audience",
    "start": "161519",
    "end": "162879"
  },
  {
    "text": "field we could have had it be the",
    "start": "162879",
    "end": "164800"
  },
  {
    "text": "intended app so if my app was trying to",
    "start": "164800",
    "end": "167040"
  },
  {
    "text": "talk to like test app or something that",
    "start": "167040",
    "end": "169680"
  },
  {
    "text": "the audience would even test at the",
    "start": "169680",
    "end": "171680"
  },
  {
    "text": "problem with that is that it doesn't",
    "start": "171680",
    "end": "172959"
  },
  {
    "text": "differentiate between",
    "start": "172959",
    "end": "174800"
  },
  {
    "text": "environments it wouldn't differentiate",
    "start": "174800",
    "end": "176160"
  },
  {
    "text": "between a staging and production version",
    "start": "176160",
    "end": "178879"
  },
  {
    "text": "of test app",
    "start": "178879",
    "end": "180480"
  },
  {
    "text": "or the dependency",
    "start": "180480",
    "end": "182239"
  },
  {
    "text": "and so we went with the database account",
    "start": "182239",
    "end": "184959"
  },
  {
    "text": "and you know at square we separate",
    "start": "184959",
    "end": "188000"
  },
  {
    "text": "uh each app",
    "start": "188000",
    "end": "189599"
  },
  {
    "text": "and their environments into a separate",
    "start": "189599",
    "end": "191200"
  },
  {
    "text": "account so this works for us",
    "start": "191200",
    "end": "194400"
  },
  {
    "text": "a third option would have been to",
    "start": "194400",
    "end": "196959"
  },
  {
    "text": "isolate isolated further down into the",
    "start": "196959",
    "end": "198319"
  },
  {
    "text": "role that we try to we're trying to",
    "start": "198319",
    "end": "199760"
  },
  {
    "text": "assume in that account",
    "start": "199760",
    "end": "201680"
  },
  {
    "text": "but there's a limited number of",
    "start": "201680",
    "end": "203440"
  },
  {
    "text": "audiences that you can have so we",
    "start": "203440",
    "end": "206480"
  },
  {
    "text": "found we chose the middle ground of just",
    "start": "206480",
    "end": "208239"
  },
  {
    "text": "the aws account so this prevents this",
    "start": "208239",
    "end": "210319"
  },
  {
    "text": "job from being",
    "start": "210319",
    "end": "213120"
  },
  {
    "text": "taken",
    "start": "213120",
    "end": "214159"
  },
  {
    "text": "or stolen",
    "start": "214159",
    "end": "215519"
  },
  {
    "text": "and used to",
    "start": "215519",
    "end": "218080"
  },
  {
    "text": "impersonate",
    "start": "218080",
    "end": "219360"
  },
  {
    "text": "the",
    "start": "219360",
    "end": "220799"
  },
  {
    "text": "app or my app so this limits the scope",
    "start": "220799",
    "end": "223840"
  },
  {
    "text": "of where the jot can be used",
    "start": "223840",
    "end": "227840"
  },
  {
    "start": "226000",
    "end": "226000"
  },
  {
    "text": "so quick overview of how idc and aws",
    "start": "227840",
    "end": "230400"
  },
  {
    "text": "works aws im support supports using",
    "start": "230400",
    "end": "233840"
  },
  {
    "text": "rdc identity providers",
    "start": "233840",
    "end": "235760"
  },
  {
    "text": "so",
    "start": "235760",
    "end": "237280"
  },
  {
    "text": "these are tied to provider urls and then",
    "start": "237280",
    "end": "239519"
  },
  {
    "text": "the roles",
    "start": "239519",
    "end": "240879"
  },
  {
    "text": "can have a trust relationship with these",
    "start": "240879",
    "end": "242879"
  },
  {
    "text": "providers so it can check that the",
    "start": "242879",
    "end": "245439"
  },
  {
    "text": "provider is coming from the correct url",
    "start": "245439",
    "end": "247360"
  },
  {
    "text": "it checks metadata in their jaunt and",
    "start": "247360",
    "end": "250400"
  },
  {
    "text": "we check for whether the subject has the",
    "start": "250400",
    "end": "252720"
  },
  {
    "text": "spiffy id that we expect",
    "start": "252720",
    "end": "255280"
  },
  {
    "text": "and also the audience is the correct one",
    "start": "255280",
    "end": "258959"
  },
  {
    "text": "the aws uh",
    "start": "258959",
    "end": "261440"
  },
  {
    "text": "s so aws sts allows us to use these jots",
    "start": "261440",
    "end": "264720"
  },
  {
    "text": "to assume into a role",
    "start": "264720",
    "end": "266720"
  },
  {
    "text": "you know the role through iem checks all",
    "start": "266720",
    "end": "268720"
  },
  {
    "text": "the information that we need",
    "start": "268720",
    "end": "271680"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "so this is kind of how",
    "start": "271680",
    "end": "273520"
  },
  {
    "text": "uh we were",
    "start": "273520",
    "end": "275600"
  },
  {
    "text": "connecting to aws from the dc prior to",
    "start": "275600",
    "end": "278560"
  },
  {
    "text": "idc",
    "start": "278560",
    "end": "280080"
  },
  {
    "text": "uh app owners would create another aws",
    "start": "280080",
    "end": "282160"
  },
  {
    "text": "user attach a policy to that and then in",
    "start": "282160",
    "end": "284880"
  },
  {
    "text": "the aws console request the user's",
    "start": "284880",
    "end": "287280"
  },
  {
    "text": "access keys record those keys in an aws",
    "start": "287280",
    "end": "290080"
  },
  {
    "text": "credentials file",
    "start": "290080",
    "end": "291440"
  },
  {
    "text": "used typically on their laptop and then",
    "start": "291440",
    "end": "293520"
  },
  {
    "text": "upload that credentials file to our",
    "start": "293520",
    "end": "294880"
  },
  {
    "text": "secret store keywiz",
    "start": "294880",
    "end": "297120"
  },
  {
    "text": "and then dc apps would be able to fetch",
    "start": "297120",
    "end": "299360"
  },
  {
    "text": "those",
    "start": "299360",
    "end": "300160"
  },
  {
    "text": "secrets out of keywiz and then use them",
    "start": "300160",
    "end": "302400"
  },
  {
    "text": "to run as native as user",
    "start": "302400",
    "end": "305919"
  },
  {
    "text": "so this process you know is pretty",
    "start": "306000",
    "end": "308840"
  },
  {
    "text": "manual there's a lot of steps involved",
    "start": "308840",
    "end": "310960"
  },
  {
    "text": "there's a lot of places to go it could",
    "start": "310960",
    "end": "312400"
  },
  {
    "text": "go wrong there's a lot of places where",
    "start": "312400",
    "end": "313520"
  },
  {
    "text": "the keys could leak",
    "start": "313520",
    "end": "315680"
  },
  {
    "text": "and it's very unlikely that",
    "start": "315680",
    "end": "318160"
  },
  {
    "text": "a app owner would go and refresh those",
    "start": "318160",
    "end": "320479"
  },
  {
    "text": "user access keys so we've had like",
    "start": "320479",
    "end": "323840"
  },
  {
    "text": "keys that you know have been been beat",
    "start": "323840",
    "end": "326000"
  },
  {
    "text": "haven't been changed in like years",
    "start": "326000",
    "end": "328800"
  },
  {
    "text": "so",
    "start": "328800",
    "end": "329759"
  },
  {
    "text": "um",
    "start": "329759",
    "end": "330639"
  },
  {
    "text": "the new method odc method involves a lot",
    "start": "330639",
    "end": "333440"
  },
  {
    "start": "331000",
    "end": "331000"
  },
  {
    "text": "less work from app owners so we've",
    "start": "333440",
    "end": "335600"
  },
  {
    "text": "created a terraform module that",
    "start": "335600",
    "end": "337840"
  },
  {
    "text": "automatically creates",
    "start": "337840",
    "end": "339360"
  },
  {
    "text": "this role and sets up the proper",
    "start": "339360",
    "end": "341680"
  },
  {
    "text": "configurations for the identity provider",
    "start": "341680",
    "end": "343919"
  },
  {
    "text": "and attaches an aws policy to it",
    "start": "343919",
    "end": "347520"
  },
  {
    "text": "and all the app owner needs to do is",
    "start": "347520",
    "end": "351039"
  },
  {
    "text": "of course implement that",
    "start": "351039",
    "end": "352800"
  },
  {
    "text": "terraform module use that terrible",
    "start": "352800",
    "end": "354240"
  },
  {
    "text": "module and then add a configuration to",
    "start": "354240",
    "end": "357280"
  },
  {
    "text": "their app uh we call that the p2",
    "start": "357280",
    "end": "359440"
  },
  {
    "text": "manifest",
    "start": "359440",
    "end": "360479"
  },
  {
    "text": "so all you need to do is add a",
    "start": "360479",
    "end": "363039"
  },
  {
    "text": "a couple lines to their manifest in this",
    "start": "363039",
    "end": "366160"
  },
  {
    "text": "case",
    "start": "366160",
    "end": "367039"
  },
  {
    "text": "you can see here's an example where",
    "start": "367039",
    "end": "370080"
  },
  {
    "text": "we specify the role that we're trying to",
    "start": "370080",
    "end": "372240"
  },
  {
    "text": "assume into and then a name for that",
    "start": "372240",
    "end": "376240"
  },
  {
    "text": "role so in this case extra role and this",
    "start": "376240",
    "end": "378800"
  },
  {
    "text": "is like basically the have you worked",
    "start": "378800",
    "end": "380479"
  },
  {
    "text": "the potential files before it's like the",
    "start": "380479",
    "end": "381919"
  },
  {
    "text": "profile name",
    "start": "381919",
    "end": "384000"
  },
  {
    "text": "yeah",
    "start": "384000",
    "end": "384800"
  },
  {
    "text": "that's all that the app needs to do the",
    "start": "384800",
    "end": "387039"
  },
  {
    "text": "rest of it is automatically done by",
    "start": "387039",
    "end": "389759"
  },
  {
    "text": "our odc architecture so let's go over",
    "start": "389759",
    "end": "392319"
  },
  {
    "text": "how that works so the broad overview of",
    "start": "392319",
    "end": "396000"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "all the moving parts",
    "start": "396000",
    "end": "398000"
  },
  {
    "text": "and then i'm going to break this down",
    "start": "398000",
    "end": "399120"
  },
  {
    "text": "into smaller pieces so we're going to",
    "start": "399120",
    "end": "401039"
  },
  {
    "text": "start with the p2 hook so p2 is like our",
    "start": "401039",
    "end": "403919"
  },
  {
    "text": "container or orchestrations",
    "start": "403919",
    "end": "406720"
  },
  {
    "text": "software",
    "start": "406720",
    "end": "408240"
  },
  {
    "text": "so at startup we uh hook",
    "start": "408240",
    "end": "412000"
  },
  {
    "text": "we have a hook that reads the",
    "start": "412000",
    "end": "413919"
  },
  {
    "text": "credentials file from their manifest or",
    "start": "413919",
    "end": "415919"
  },
  {
    "text": "the configuration and generates a",
    "start": "415919",
    "end": "417919"
  },
  {
    "text": "credentials file an aws credentials file",
    "start": "417919",
    "end": "419759"
  },
  {
    "text": "from that that's stored in the app's",
    "start": "419759",
    "end": "421680"
  },
  {
    "text": "home directory",
    "start": "421680",
    "end": "424000"
  },
  {
    "text": "and then when a dc ad needs to talk to",
    "start": "424000",
    "end": "425360"
  },
  {
    "text": "aws they",
    "start": "425360",
    "end": "427520"
  },
  {
    "text": "read that credentials file and then",
    "start": "427520",
    "end": "429199"
  },
  {
    "text": "inside the credentials file we specify a",
    "start": "429199",
    "end": "431199"
  },
  {
    "text": "credential process which is one of the",
    "start": "431199",
    "end": "432639"
  },
  {
    "text": "ways that you can",
    "start": "432639",
    "end": "434720"
  },
  {
    "text": "fetch credentials when trying to talk to",
    "start": "434720",
    "end": "436560"
  },
  {
    "text": "aws",
    "start": "436560",
    "end": "438000"
  },
  {
    "text": "and the credential process is actually a",
    "start": "438000",
    "end": "439759"
  },
  {
    "text": "open source tool we've written called",
    "start": "439759",
    "end": "441120"
  },
  {
    "text": "spiffy aw system rule",
    "start": "441120",
    "end": "443039"
  },
  {
    "text": "that tool requests a jot from your spy",
    "start": "443039",
    "end": "446319"
  },
  {
    "text": "agent which is signed by this fire",
    "start": "446319",
    "end": "447919"
  },
  {
    "text": "server and then sent off to aws where it",
    "start": "447919",
    "end": "450880"
  },
  {
    "text": "is verified against uh the cached jocks",
    "start": "450880",
    "end": "454800"
  },
  {
    "text": "that we have",
    "start": "454800",
    "end": "456240"
  },
  {
    "text": "in s3",
    "start": "456240",
    "end": "458319"
  },
  {
    "text": "with a cloudfront domain in front of it",
    "start": "458319",
    "end": "461039"
  },
  {
    "text": "so how do we get those jocks into s3 we",
    "start": "461039",
    "end": "463680"
  },
  {
    "text": "have a cron that syncs",
    "start": "463680",
    "end": "466080"
  },
  {
    "text": "the results of um",
    "start": "466080",
    "end": "468960"
  },
  {
    "text": "the spiffy oidc discovery provider which",
    "start": "468960",
    "end": "471199"
  },
  {
    "text": "is provided by",
    "start": "471199",
    "end": "472560"
  },
  {
    "text": "the spy implementation",
    "start": "472560",
    "end": "474240"
  },
  {
    "text": "to s3",
    "start": "474240",
    "end": "476240"
  },
  {
    "text": "we'll talk a little bit more about that",
    "start": "476240",
    "end": "477440"
  },
  {
    "text": "later",
    "start": "477440",
    "end": "478400"
  },
  {
    "text": "but",
    "start": "478400",
    "end": "479680"
  },
  {
    "text": "yeah that's basically how the",
    "start": "479680",
    "end": "481599"
  },
  {
    "text": "architecture works",
    "start": "481599",
    "end": "483199"
  },
  {
    "text": "the spiffy oidc",
    "start": "483199",
    "end": "485360"
  },
  {
    "text": "provider fetches the information from",
    "start": "485360",
    "end": "487520"
  },
  {
    "text": "the spire agent and we sync that to s3",
    "start": "487520",
    "end": "492400"
  },
  {
    "start": "492000",
    "end": "492000"
  },
  {
    "text": "so the spyro rdc scope provider",
    "start": "492400",
    "end": "494800"
  },
  {
    "text": "and it's provided by spire i've included",
    "start": "494800",
    "end": "497039"
  },
  {
    "text": "a link for you to check out",
    "start": "497039",
    "end": "498639"
  },
  {
    "text": "uh it serves the jocks in order to",
    "start": "498639",
    "end": "500400"
  },
  {
    "text": "discover document in our case we serve",
    "start": "500400",
    "end": "502800"
  },
  {
    "text": "the endpoints through an odd voice",
    "start": "502800",
    "end": "504080"
  },
  {
    "text": "socket",
    "start": "504080",
    "end": "506000"
  },
  {
    "text": "now i'm going to talk about the custom",
    "start": "506000",
    "end": "507440"
  },
  {
    "text": "tools that we've made to enable our",
    "start": "507440",
    "end": "509599"
  },
  {
    "text": "setup",
    "start": "509599",
    "end": "510879"
  },
  {
    "text": "so a little more detail about the p2",
    "start": "510879",
    "end": "513120"
  },
  {
    "start": "511000",
    "end": "511000"
  },
  {
    "text": "hook and how that works so again this is",
    "start": "513120",
    "end": "515200"
  },
  {
    "text": "a",
    "start": "515200",
    "end": "515919"
  },
  {
    "text": "sample configuration that would be in",
    "start": "515919",
    "end": "517919"
  },
  {
    "text": "their p2 manifest so we have the name of",
    "start": "517919",
    "end": "521279"
  },
  {
    "text": "the role the spiffy odc test and then",
    "start": "521279",
    "end": "523599"
  },
  {
    "text": "the role itself",
    "start": "523599",
    "end": "525120"
  },
  {
    "text": "they're trying to assume so and then",
    "start": "525120",
    "end": "527040"
  },
  {
    "text": "below we have what the line would be",
    "start": "527040",
    "end": "529279"
  },
  {
    "text": "what the block would be in their",
    "start": "529279",
    "end": "530800"
  },
  {
    "text": "credentials file",
    "start": "530800",
    "end": "532399"
  },
  {
    "text": "so the profile name would be specular",
    "start": "532399",
    "end": "533680"
  },
  {
    "text": "idc test and then the credential process",
    "start": "533680",
    "end": "536240"
  },
  {
    "text": "calls out to spit their consumer role",
    "start": "536240",
    "end": "538320"
  },
  {
    "text": "with a few options um",
    "start": "538320",
    "end": "540800"
  },
  {
    "text": "see here that you know we're assuming to",
    "start": "540800",
    "end": "542480"
  },
  {
    "text": "this role in speech test role with the",
    "start": "542480",
    "end": "545279"
  },
  {
    "text": "spf id",
    "start": "545279",
    "end": "546720"
  },
  {
    "text": "of the app speak through itc test and we",
    "start": "546720",
    "end": "549040"
  },
  {
    "text": "specify the audience and then the socket",
    "start": "549040",
    "end": "551200"
  },
  {
    "text": "for the spire agent we also have options",
    "start": "551200",
    "end": "554000"
  },
  {
    "text": "for specifying the region of sts and the",
    "start": "554000",
    "end": "556000"
  },
  {
    "text": "endpoint of sts that you're trying to",
    "start": "556000",
    "end": "558080"
  },
  {
    "text": "use",
    "start": "558080",
    "end": "558959"
  },
  {
    "text": "this is in case you're using a ppc",
    "start": "558959",
    "end": "563240"
  },
  {
    "start": "563000",
    "end": "563000"
  },
  {
    "text": "cool so we also wrote a cron job to sync",
    "start": "564640",
    "end": "566880"
  },
  {
    "text": "the discovery provider to s3 buckets",
    "start": "566880",
    "end": "569279"
  },
  {
    "text": "and",
    "start": "569279",
    "end": "570399"
  },
  {
    "text": "so we did this because we had issues",
    "start": "570399",
    "end": "572640"
  },
  {
    "text": "with exposing our cgm points to the",
    "start": "572640",
    "end": "574720"
  },
  {
    "text": "public and aws needs to be able to",
    "start": "574720",
    "end": "576480"
  },
  {
    "text": "access those endpoints in staging",
    "start": "576480",
    "end": "579040"
  },
  {
    "text": "so instead of trying to expose our",
    "start": "579040",
    "end": "581440"
  },
  {
    "text": "staging environment we just",
    "start": "581440",
    "end": "583920"
  },
  {
    "text": "uploaded everything to s3 and then used",
    "start": "583920",
    "end": "586320"
  },
  {
    "text": "a platform domain we also use custom",
    "start": "586320",
    "end": "588720"
  },
  {
    "text": "square domains which is possible using",
    "start": "588720",
    "end": "591120"
  },
  {
    "text": "acm certificates",
    "start": "591120",
    "end": "592800"
  },
  {
    "text": "um and we did this so we had more",
    "start": "592800",
    "end": "594640"
  },
  {
    "text": "control over the domains",
    "start": "594640",
    "end": "597920"
  },
  {
    "text": "this also provides us with like caching",
    "start": "597920",
    "end": "600320"
  },
  {
    "text": "of the odc endpoints and more",
    "start": "600320",
    "end": "601920"
  },
  {
    "text": "availability since cloudfront",
    "start": "601920",
    "end": "604560"
  },
  {
    "text": "can serve it from",
    "start": "604560",
    "end": "606240"
  },
  {
    "text": "more edge servers",
    "start": "606240",
    "end": "608000"
  },
  {
    "text": "so we pull the jocks every 10 seconds",
    "start": "608000",
    "end": "610240"
  },
  {
    "text": "just in case they are refreshed by spire",
    "start": "610240",
    "end": "613760"
  },
  {
    "text": "we want to keep them up to date and then",
    "start": "613760",
    "end": "615440"
  },
  {
    "text": "the discovery document doesn't really",
    "start": "615440",
    "end": "616959"
  },
  {
    "text": "change so we just change it we just pull",
    "start": "616959",
    "end": "618560"
  },
  {
    "text": "it every 24 hours",
    "start": "618560",
    "end": "621519"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "cool and then our open source tool spit",
    "start": "621600",
    "end": "623440"
  },
  {
    "text": "the adapts assume i've included a link",
    "start": "623440",
    "end": "625040"
  },
  {
    "text": "for you to check out",
    "start": "625040",
    "end": "626480"
  },
  {
    "text": "uh the tool uses",
    "start": "626480",
    "end": "628880"
  },
  {
    "text": "spiffy jots to assume into aws roles so",
    "start": "628880",
    "end": "632880"
  },
  {
    "text": "as you saw before it's used with a",
    "start": "632880",
    "end": "634320"
  },
  {
    "text": "credential process option",
    "start": "634320",
    "end": "636079"
  },
  {
    "text": "and it calls sts assume role with web",
    "start": "636079",
    "end": "638560"
  },
  {
    "text": "identity",
    "start": "638560",
    "end": "639600"
  },
  {
    "text": "with jots that we retrieve from your",
    "start": "639600",
    "end": "641600"
  },
  {
    "text": "local spire agent so it supports retries",
    "start": "641600",
    "end": "644320"
  },
  {
    "text": "sports logging we have metrics there's",
    "start": "644320",
    "end": "646560"
  },
  {
    "text": "uh support for vpc endpoints and you can",
    "start": "646560",
    "end": "649200"
  },
  {
    "text": "even configure the sds session duration",
    "start": "649200",
    "end": "651200"
  },
  {
    "text": "which i didn't show before",
    "start": "651200",
    "end": "653040"
  },
  {
    "text": "so that defaults to an hour and it's",
    "start": "653040",
    "end": "654880"
  },
  {
    "text": "customizable with this tool",
    "start": "654880",
    "end": "657519"
  },
  {
    "text": "so cool",
    "start": "657519",
    "end": "658720"
  },
  {
    "text": "so conclusion",
    "start": "658720",
    "end": "661120"
  },
  {
    "start": "661000",
    "end": "661000"
  },
  {
    "text": "the current status of spiffyrtc so we",
    "start": "661120",
    "end": "663600"
  },
  {
    "text": "rolled out to general availability we",
    "start": "663600",
    "end": "665839"
  },
  {
    "text": "just needed to make some changes to",
    "start": "665839",
    "end": "667200"
  },
  {
    "text": "shared libraries to use the potential",
    "start": "667200",
    "end": "669680"
  },
  {
    "text": "spells in",
    "start": "669680",
    "end": "671839"
  },
  {
    "text": "app's home directories instead of",
    "start": "671839",
    "end": "673200"
  },
  {
    "text": "fetching it from kiwis our secret store",
    "start": "673200",
    "end": "675920"
  },
  {
    "text": "we're currently migrating amsterdam idc",
    "start": "675920",
    "end": "677600"
  },
  {
    "text": "but it's pretty been it's been a pretty",
    "start": "677600",
    "end": "678959"
  },
  {
    "text": "hands-off process teams have really been",
    "start": "678959",
    "end": "680640"
  },
  {
    "text": "able to do it on their own i haven't",
    "start": "680640",
    "end": "682240"
  },
  {
    "text": "really encountered any major issues",
    "start": "682240",
    "end": "684240"
  },
  {
    "text": "those minor blips with you know we have",
    "start": "684240",
    "end": "686320"
  },
  {
    "text": "issues with um connecting to cloudfront",
    "start": "686320",
    "end": "689120"
  },
  {
    "text": "and platform fetching from s3 which",
    "start": "689120",
    "end": "691920"
  },
  {
    "text": "we're uh working through but it hasn't",
    "start": "691920",
    "end": "694399"
  },
  {
    "text": "really been a blocker",
    "start": "694399",
    "end": "696560"
  },
  {
    "text": "cool and you want to learn more about",
    "start": "696560",
    "end": "698800"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "the",
    "start": "698800",
    "end": "699600"
  },
  {
    "text": "uh security infrastructure at square uh",
    "start": "699600",
    "end": "702720"
  },
  {
    "text": "in aws you can check out our developer",
    "start": "702720",
    "end": "705440"
  },
  {
    "text": "blog on the corner blog which include a",
    "start": "705440",
    "end": "707200"
  },
  {
    "text": "link to",
    "start": "707200",
    "end": "708480"
  },
  {
    "text": "there's a more in-depth article about",
    "start": "708480",
    "end": "710639"
  },
  {
    "text": "aws or idc authentication some articles",
    "start": "710639",
    "end": "713120"
  },
  {
    "text": "about how we manage secrets in lambda",
    "start": "713120",
    "end": "715360"
  },
  {
    "text": "and how we provide identities in lambda",
    "start": "715360",
    "end": "718639"
  },
  {
    "text": "thank you",
    "start": "718639",
    "end": "721880"
  }
]