[
  {
    "text": "hi everyone my name is gaurav gaylord i",
    "start": "160",
    "end": "2159"
  },
  {
    "text": "am a developer advocate at infrared",
    "start": "2159",
    "end": "3600"
  },
  {
    "text": "cloud technologies",
    "start": "3600",
    "end": "4720"
  },
  {
    "text": "uh outside work i am a docker community",
    "start": "4720",
    "end": "6960"
  },
  {
    "text": "leader and i also organize multiple",
    "start": "6960",
    "end": "8880"
  },
  {
    "text": "meetup reviews in pune",
    "start": "8880",
    "end": "10559"
  },
  {
    "text": "uh if you're happy to connect with me",
    "start": "10559",
    "end": "12400"
  },
  {
    "text": "i'll be available on",
    "start": "12400",
    "end": "14160"
  },
  {
    "text": "linkedin twitter and my own website",
    "start": "14160",
    "end": "17920"
  },
  {
    "text": "great my name is vishal biani i'm cto",
    "start": "18160",
    "end": "20640"
  },
  {
    "text": "and founder of inferior technologies",
    "start": "20640",
    "end": "22240"
  },
  {
    "text": "i'm one of the fission maintainers and",
    "start": "22240",
    "end": "24880"
  },
  {
    "text": "i'm also an active organizer of pune",
    "start": "24880",
    "end": "26720"
  },
  {
    "text": "kubernetes meetup",
    "start": "26720",
    "end": "27920"
  },
  {
    "text": "i am usually found on twitter and",
    "start": "27920",
    "end": "29599"
  },
  {
    "text": "linkedin you know",
    "start": "29599",
    "end": "31679"
  },
  {
    "text": "for connecting cool so today we are",
    "start": "31679",
    "end": "34320"
  },
  {
    "text": "going to talk about auto scaling event",
    "start": "34320",
    "end": "35840"
  },
  {
    "text": "driven applications",
    "start": "35840",
    "end": "36800"
  },
  {
    "text": "with fission and cada now before we go",
    "start": "36800",
    "end": "39520"
  },
  {
    "text": "and understand the actual demo and the",
    "start": "39520",
    "end": "41280"
  },
  {
    "text": "application",
    "start": "41280",
    "end": "41920"
  },
  {
    "text": "let's understand what fission is cool so",
    "start": "41920",
    "end": "44160"
  },
  {
    "text": "fission is a serverless framework on top",
    "start": "44160",
    "end": "45680"
  },
  {
    "text": "of kubernetes",
    "start": "45680",
    "end": "46559"
  },
  {
    "text": "it allows you to write functions and",
    "start": "46559",
    "end": "48000"
  },
  {
    "text": "focus on code and not have to worry",
    "start": "48000",
    "end": "49600"
  },
  {
    "text": "about underlying",
    "start": "49600",
    "end": "50559"
  },
  {
    "text": "uh you know details about infrastructure",
    "start": "50559",
    "end": "52079"
  },
  {
    "text": "or kubernetes as much",
    "start": "52079",
    "end": "53680"
  },
  {
    "text": "while it tries to hide the details of",
    "start": "53680",
    "end": "55120"
  },
  {
    "text": "your kubernetes and docker from you",
    "start": "55120",
    "end": "57199"
  },
  {
    "text": "it doesn't completely limit you you can",
    "start": "57199",
    "end": "58719"
  },
  {
    "text": "you know get to as material as you want",
    "start": "58719",
    "end": "60320"
  },
  {
    "text": "but if you don't want you can always",
    "start": "60320",
    "end": "61600"
  },
  {
    "text": "stay up suck it from that",
    "start": "61600",
    "end": "63440"
  },
  {
    "text": "and uh you know it does support a lot of",
    "start": "63440",
    "end": "65680"
  },
  {
    "text": "indications we'll look at that in the",
    "start": "65680",
    "end": "66799"
  },
  {
    "text": "subsequent slides",
    "start": "66799",
    "end": "68799"
  },
  {
    "text": "now what mission can do for you so",
    "start": "68799",
    "end": "70640"
  },
  {
    "text": "fashion you know is basically inherently",
    "start": "70640",
    "end": "72720"
  },
  {
    "text": "a framework written on top of kubernetes",
    "start": "72720",
    "end": "74479"
  },
  {
    "text": "it's a bunch of crds and controllers",
    "start": "74479",
    "end": "76640"
  },
  {
    "text": "and it relies heavily on cada project",
    "start": "76640",
    "end": "78560"
  },
  {
    "text": "for a lot of integrations with event",
    "start": "78560",
    "end": "79920"
  },
  {
    "text": "sources or message queues or databases",
    "start": "79920",
    "end": "82640"
  },
  {
    "text": "now as a developer you might want to",
    "start": "82640",
    "end": "84960"
  },
  {
    "text": "write functions",
    "start": "84960",
    "end": "85759"
  },
  {
    "text": "you might want to write micro services",
    "start": "85759",
    "end": "87680"
  },
  {
    "text": "sometimes you might want to just give",
    "start": "87680",
    "end": "89040"
  },
  {
    "text": "source code and let fusion figure out",
    "start": "89040",
    "end": "90960"
  },
  {
    "text": "build deploy and you know package it",
    "start": "90960",
    "end": "92400"
  },
  {
    "text": "into a container but sometimes you might",
    "start": "92400",
    "end": "94159"
  },
  {
    "text": "say hey i will",
    "start": "94159",
    "end": "95040"
  },
  {
    "text": "give you a container and not the source",
    "start": "95040",
    "end": "97119"
  },
  {
    "text": "code in all of these scenarios friction",
    "start": "97119",
    "end": "99200"
  },
  {
    "text": "can help you you know deploy",
    "start": "99200",
    "end": "100640"
  },
  {
    "text": "and run microservices or functions",
    "start": "100640",
    "end": "103759"
  },
  {
    "text": "today we support a whole bunch of",
    "start": "103759",
    "end": "105040"
  },
  {
    "text": "languages right from java golang node.js",
    "start": "105040",
    "end": "106960"
  },
  {
    "text": "ruby",
    "start": "106960",
    "end": "107600"
  },
  {
    "text": "you know perl python we also have",
    "start": "107600",
    "end": "109439"
  },
  {
    "text": "something called as binary environment",
    "start": "109439",
    "end": "110880"
  },
  {
    "text": "so people actually run",
    "start": "110880",
    "end": "111920"
  },
  {
    "text": "shell scripts for some of their",
    "start": "111920",
    "end": "113439"
  },
  {
    "text": "operational stuff you know using fission",
    "start": "113439",
    "end": "114880"
  },
  {
    "text": "binary environment",
    "start": "114880",
    "end": "116479"
  },
  {
    "text": "now once you are deployed your functions",
    "start": "116479",
    "end": "118479"
  },
  {
    "text": "micro services in many of these",
    "start": "118479",
    "end": "119920"
  },
  {
    "text": "languages",
    "start": "119920",
    "end": "120719"
  },
  {
    "text": "onto fission you might of course want to",
    "start": "120719",
    "end": "122320"
  },
  {
    "text": "call them right so you can call them",
    "start": "122320",
    "end": "124000"
  },
  {
    "text": "using http obviously",
    "start": "124000",
    "end": "125439"
  },
  {
    "text": "you can also call them using cron there",
    "start": "125439",
    "end": "126960"
  },
  {
    "text": "is a crown you know timer kind of built",
    "start": "126960",
    "end": "129119"
  },
  {
    "text": "into fission",
    "start": "129119",
    "end": "130160"
  },
  {
    "text": "and allows you to have functions invoke",
    "start": "130160",
    "end": "132879"
  },
  {
    "text": "periodically",
    "start": "132879",
    "end": "134720"
  },
  {
    "text": "uh it also integrates with the whole",
    "start": "134720",
    "end": "136239"
  },
  {
    "text": "bunch of you know message queue",
    "start": "136239",
    "end": "137520"
  },
  {
    "text": "resources using cada",
    "start": "137520",
    "end": "139120"
  },
  {
    "text": "and today we support for example amazon",
    "start": "139120",
    "end": "140879"
  },
  {
    "text": "kinesis amazon sqs",
    "start": "140879",
    "end": "142959"
  },
  {
    "text": "uh nats kafka and there is more",
    "start": "142959",
    "end": "145760"
  },
  {
    "text": "connectors being added",
    "start": "145760",
    "end": "147440"
  },
  {
    "text": "now when you have a platform like this",
    "start": "147440",
    "end": "148879"
  },
  {
    "text": "which is executing a whole bunch of",
    "start": "148879",
    "end": "150400"
  },
  {
    "text": "functions microservices which are being",
    "start": "150400",
    "end": "152080"
  },
  {
    "text": "invoked on the fly",
    "start": "152080",
    "end": "153519"
  },
  {
    "text": "you want pretty detailed observability",
    "start": "153519",
    "end": "155760"
  },
  {
    "text": "fiction does integrate with almost all",
    "start": "155760",
    "end": "157360"
  },
  {
    "text": "the major observability tools",
    "start": "157360",
    "end": "159040"
  },
  {
    "text": "uh like elastic committee or jager",
    "start": "159040",
    "end": "160560"
  },
  {
    "text": "graphana to give you the visibility into",
    "start": "160560",
    "end": "162400"
  },
  {
    "text": "what is happening in your cluster",
    "start": "162400",
    "end": "164160"
  },
  {
    "text": "uh you know when you when you execute",
    "start": "164160",
    "end": "166319"
  },
  {
    "text": "this",
    "start": "166319",
    "end": "167440"
  },
  {
    "text": "functions and microservices we are on",
    "start": "167440",
    "end": "170640"
  },
  {
    "text": "github of course",
    "start": "170640",
    "end": "171599"
  },
  {
    "text": "you can find us in fission fashion",
    "start": "171599",
    "end": "173760"
  },
  {
    "text": "please you know",
    "start": "173760",
    "end": "175440"
  },
  {
    "text": "start us and follow us and if you have",
    "start": "175440",
    "end": "177040"
  },
  {
    "text": "any issues in you know",
    "start": "177040",
    "end": "180319"
  },
  {
    "text": "buying out something do check out the",
    "start": "180319",
    "end": "181760"
  },
  {
    "text": "documentation join us on slack and ask",
    "start": "181760",
    "end": "183360"
  },
  {
    "text": "questions please",
    "start": "183360",
    "end": "185680"
  },
  {
    "text": "well if you look at a very simple hello",
    "start": "185680",
    "end": "187599"
  },
  {
    "text": "world uh version of you know phishing",
    "start": "187599",
    "end": "189360"
  },
  {
    "text": "basically right",
    "start": "189360",
    "end": "190400"
  },
  {
    "text": "in the first line what we are doing here",
    "start": "190400",
    "end": "191760"
  },
  {
    "text": "is we are creating environment of",
    "start": "191760",
    "end": "193440"
  },
  {
    "text": "node.js",
    "start": "193440",
    "end": "194239"
  },
  {
    "text": "runtime and we are using the efficient",
    "start": "194239",
    "end": "196319"
  },
  {
    "text": "provided image",
    "start": "196319",
    "end": "197599"
  },
  {
    "text": "you know as the base image in the second",
    "start": "197599",
    "end": "199680"
  },
  {
    "text": "line we are creating a function",
    "start": "199680",
    "end": "201200"
  },
  {
    "text": "uh called hello js in which we are using",
    "start": "201200",
    "end": "203440"
  },
  {
    "text": "the runtime being the node data that we",
    "start": "203440",
    "end": "204959"
  },
  {
    "text": "dedicated in the first line",
    "start": "204959",
    "end": "206159"
  },
  {
    "text": "and we are simply pointing to the code",
    "start": "206159",
    "end": "207840"
  },
  {
    "text": "on a github repository",
    "start": "207840",
    "end": "209599"
  },
  {
    "text": "now this code line is doing just a",
    "start": "209599",
    "end": "211200"
  },
  {
    "text": "simple hello world and once we have done",
    "start": "211200",
    "end": "213120"
  },
  {
    "text": "these two",
    "start": "213120",
    "end": "213680"
  },
  {
    "text": "uh you know creations we can simply call",
    "start": "213680",
    "end": "215519"
  },
  {
    "text": "it as efficient function test and you",
    "start": "215519",
    "end": "216959"
  },
  {
    "text": "know hello and we get a hello world",
    "start": "216959",
    "end": "218799"
  },
  {
    "text": "now i'm not going to show this simple",
    "start": "218799",
    "end": "220080"
  },
  {
    "text": "example you can go and check it out",
    "start": "220080",
    "end": "221440"
  },
  {
    "text": "later on your own",
    "start": "221440",
    "end": "222480"
  },
  {
    "text": "but just gives you an idea that without",
    "start": "222480",
    "end": "224400"
  },
  {
    "text": "having to understand the whole",
    "start": "224400",
    "end": "225680"
  },
  {
    "text": "you know details of requirements or you",
    "start": "225680",
    "end": "227360"
  },
  {
    "text": "know other things uh you are able to run",
    "start": "227360",
    "end": "229280"
  },
  {
    "text": "a simple piece of code onto phishing",
    "start": "229280",
    "end": "231599"
  },
  {
    "text": "great so let's talk about",
    "start": "231599",
    "end": "233120"
  },
  {
    "text": "uh you know the demo that we're actually",
    "start": "233120",
    "end": "234799"
  },
  {
    "text": "gonna show you today",
    "start": "234799",
    "end": "236159"
  },
  {
    "text": "now this is a simple diagram of of the",
    "start": "236159",
    "end": "238159"
  },
  {
    "text": "demo you know that i'm gonna show you",
    "start": "238159",
    "end": "240159"
  },
  {
    "text": "there is one function uh it is gonna",
    "start": "240159",
    "end": "241920"
  },
  {
    "text": "produce messages and write into a kafka",
    "start": "241920",
    "end": "243599"
  },
  {
    "text": "topical request topic",
    "start": "243599",
    "end": "245200"
  },
  {
    "text": "okay request topic is uh",
    "start": "245200",
    "end": "248400"
  },
  {
    "text": "subscribed by another function using a",
    "start": "248400",
    "end": "250560"
  },
  {
    "text": "trigger now trigger is a function",
    "start": "250560",
    "end": "252400"
  },
  {
    "text": "uh fission terminology basically and",
    "start": "252400",
    "end": "254319"
  },
  {
    "text": "we'll explain what does that mean",
    "start": "254319",
    "end": "255680"
  },
  {
    "text": "in subsequent slides now this function",
    "start": "255680",
    "end": "258160"
  },
  {
    "text": "will get directly the message body",
    "start": "258160",
    "end": "259759"
  },
  {
    "text": "without having to understand or talk to",
    "start": "259759",
    "end": "261359"
  },
  {
    "text": "phishing at all",
    "start": "261359",
    "end": "262720"
  },
  {
    "text": "this function is going to process that",
    "start": "262720",
    "end": "264880"
  },
  {
    "text": "message",
    "start": "264880",
    "end": "265840"
  },
  {
    "text": "if there is an error it is going to put",
    "start": "265840",
    "end": "267520"
  },
  {
    "text": "that into an error topic",
    "start": "267520",
    "end": "268960"
  },
  {
    "text": "and this is again you know facilitated",
    "start": "268960",
    "end": "270160"
  },
  {
    "text": "by fashion the function doesn't have to",
    "start": "270160",
    "end": "271680"
  },
  {
    "text": "know",
    "start": "271680",
    "end": "272160"
  },
  {
    "text": "you know it just has to written a",
    "start": "272160",
    "end": "273199"
  },
  {
    "text": "response code and the response body so",
    "start": "273199",
    "end": "275520"
  },
  {
    "text": "to speak",
    "start": "275520",
    "end": "276800"
  },
  {
    "text": "but if the processing is successful it",
    "start": "276800",
    "end": "279280"
  },
  {
    "text": "will return a 200 response",
    "start": "279280",
    "end": "281040"
  },
  {
    "text": "and the message body which will be put",
    "start": "281040",
    "end": "282960"
  },
  {
    "text": "into a kafka topic called response topic",
    "start": "282960",
    "end": "286080"
  },
  {
    "text": "on the response topic there is another",
    "start": "286080",
    "end": "287520"
  },
  {
    "text": "function which has subscribed to that",
    "start": "287520",
    "end": "289040"
  },
  {
    "text": "topic using another trigger",
    "start": "289040",
    "end": "291199"
  },
  {
    "text": "and that trigger uh you know will invoke",
    "start": "291199",
    "end": "293919"
  },
  {
    "text": "this function whenever there is a",
    "start": "293919",
    "end": "294960"
  },
  {
    "text": "message in the response topic",
    "start": "294960",
    "end": "296800"
  },
  {
    "text": "this function i guess is going to do",
    "start": "296800",
    "end": "298160"
  },
  {
    "text": "some more reprocessing on top of that",
    "start": "298160",
    "end": "300080"
  },
  {
    "text": "message",
    "start": "300080",
    "end": "301039"
  },
  {
    "text": "and it has the code to actually write",
    "start": "301039",
    "end": "302880"
  },
  {
    "text": "the message to a rabbitmq",
    "start": "302880",
    "end": "304720"
  },
  {
    "text": "queue as soon as you write into the",
    "start": "304720",
    "end": "307360"
  },
  {
    "text": "rabbitmq called publisher",
    "start": "307360",
    "end": "309199"
  },
  {
    "text": "there's another function which has",
    "start": "309199",
    "end": "310639"
  },
  {
    "text": "subscribed to this message queue",
    "start": "310639",
    "end": "312479"
  },
  {
    "text": "and when there is a message this trigger",
    "start": "312479",
    "end": "314560"
  },
  {
    "text": "will ensure that the message is read",
    "start": "314560",
    "end": "315919"
  },
  {
    "text": "from the queue and actually",
    "start": "315919",
    "end": "317280"
  },
  {
    "text": "function is invoked with the body of the",
    "start": "317280",
    "end": "318960"
  },
  {
    "text": "message as the payload",
    "start": "318960",
    "end": "320720"
  },
  {
    "text": "and then the function is gonna you know",
    "start": "320720",
    "end": "322160"
  },
  {
    "text": "this last function is to do something",
    "start": "322160",
    "end": "323440"
  },
  {
    "text": "more on top of that right",
    "start": "323440",
    "end": "325440"
  },
  {
    "text": "so the first one we are calling it kafka",
    "start": "325440",
    "end": "327120"
  },
  {
    "text": "producer the",
    "start": "327120",
    "end": "328639"
  },
  {
    "text": "second one you are calling it kafka",
    "start": "328639",
    "end": "330080"
  },
  {
    "text": "consumer the third one we are calling",
    "start": "330080",
    "end": "332240"
  },
  {
    "text": "rabbit producer",
    "start": "332240",
    "end": "333199"
  },
  {
    "text": "rabbit mq producer and then the last one",
    "start": "333199",
    "end": "335039"
  },
  {
    "text": "is you know just a consumer or rabbitmq",
    "start": "335039",
    "end": "336880"
  },
  {
    "text": "consumer basically",
    "start": "336880",
    "end": "338800"
  },
  {
    "text": "now two of them are written in golang",
    "start": "338800",
    "end": "341120"
  },
  {
    "text": "two of them are written in node.js",
    "start": "341120",
    "end": "342720"
  },
  {
    "text": "uh and you know we'll look at the code",
    "start": "342720",
    "end": "344639"
  },
  {
    "text": "of course shortly",
    "start": "344639",
    "end": "346880"
  },
  {
    "text": "but what happens is i want to explain",
    "start": "346880",
    "end": "348639"
  },
  {
    "text": "the trigger part of it i think it's very",
    "start": "348639",
    "end": "350080"
  },
  {
    "text": "crucial for us to understand",
    "start": "350080",
    "end": "352240"
  },
  {
    "text": "uh technically in normal you know",
    "start": "352240",
    "end": "354720"
  },
  {
    "text": "scenarios",
    "start": "354720",
    "end": "355520"
  },
  {
    "text": "when you have a message queue you have",
    "start": "355520",
    "end": "357280"
  },
  {
    "text": "some service listening to that message",
    "start": "357280",
    "end": "358720"
  },
  {
    "text": "queue",
    "start": "358720",
    "end": "359360"
  },
  {
    "text": "and that service is running always so to",
    "start": "359360",
    "end": "361199"
  },
  {
    "text": "speak right but with the cada the beauty",
    "start": "361199",
    "end": "363759"
  },
  {
    "text": "is you don't run a pod always to listen",
    "start": "363759",
    "end": "366160"
  },
  {
    "text": "to messages",
    "start": "366160",
    "end": "367440"
  },
  {
    "text": "as long as you have data running and",
    "start": "367440",
    "end": "368800"
  },
  {
    "text": "installed cada is listening based on",
    "start": "368800",
    "end": "371039"
  },
  {
    "text": "your",
    "start": "371039",
    "end": "371520"
  },
  {
    "text": "uh details of you know which topics to",
    "start": "371520",
    "end": "373360"
  },
  {
    "text": "listen to what message queue solutions",
    "start": "373360",
    "end": "374720"
  },
  {
    "text": "and all that stuff",
    "start": "374720",
    "end": "375919"
  },
  {
    "text": "and only when there is a message it will",
    "start": "375919",
    "end": "377840"
  },
  {
    "text": "spin up a part",
    "start": "377840",
    "end": "379039"
  },
  {
    "text": "and in this case the pod is a credit",
    "start": "379039",
    "end": "380560"
  },
  {
    "text": "connector",
    "start": "380560",
    "end": "382400"
  },
  {
    "text": "you know i'll talk about keratin in",
    "start": "382400",
    "end": "384000"
  },
  {
    "text": "subsequent slides",
    "start": "384000",
    "end": "385440"
  },
  {
    "text": "and this data connector will now go and",
    "start": "385440",
    "end": "388080"
  },
  {
    "text": "read the message",
    "start": "388080",
    "end": "388960"
  },
  {
    "text": "from the queue and call the uh the next",
    "start": "388960",
    "end": "391919"
  },
  {
    "text": "function over http",
    "start": "391919",
    "end": "393520"
  },
  {
    "text": "right and the best part is cada not only",
    "start": "393520",
    "end": "395600"
  },
  {
    "text": "spins up a part",
    "start": "395600",
    "end": "396720"
  },
  {
    "text": "only when there is a message it also",
    "start": "396720",
    "end": "398800"
  },
  {
    "text": "scales out the parts when there are more",
    "start": "398800",
    "end": "400720"
  },
  {
    "text": "messages",
    "start": "400720",
    "end": "401440"
  },
  {
    "text": "and the scaling is different from",
    "start": "401440",
    "end": "402479"
  },
  {
    "text": "message q to message view for example in",
    "start": "402479",
    "end": "404000"
  },
  {
    "text": "case of kafka",
    "start": "404000",
    "end": "405120"
  },
  {
    "text": "the scaling is based on the number of",
    "start": "405120",
    "end": "406840"
  },
  {
    "text": "partitions uh in case of rabbitmv i'm",
    "start": "406840",
    "end": "408960"
  },
  {
    "text": "not sure but that is based on some other",
    "start": "408960",
    "end": "410319"
  },
  {
    "text": "parameter basically right",
    "start": "410319",
    "end": "411919"
  },
  {
    "text": "so uh you know kind of double clicking",
    "start": "411919",
    "end": "414800"
  },
  {
    "text": "into the",
    "start": "414800",
    "end": "415360"
  },
  {
    "text": "connected part of it so a character is",
    "start": "415360",
    "end": "417840"
  },
  {
    "text": "nothing but",
    "start": "417840",
    "end": "418639"
  },
  {
    "text": "a component which reads from one source",
    "start": "418639",
    "end": "421120"
  },
  {
    "text": "and you know drops it into another",
    "start": "421120",
    "end": "422319"
  },
  {
    "text": "extension",
    "start": "422319",
    "end": "422960"
  },
  {
    "text": "so when we say kafka http connector it",
    "start": "422960",
    "end": "425039"
  },
  {
    "text": "is reading from kafka",
    "start": "425039",
    "end": "426400"
  },
  {
    "text": "and dropping the message as a http",
    "start": "426400",
    "end": "428160"
  },
  {
    "text": "payload and",
    "start": "428160",
    "end": "430000"
  },
  {
    "text": "the good part is these connectors are",
    "start": "430000",
    "end": "431360"
  },
  {
    "text": "not specific to fission they can be used",
    "start": "431360",
    "end": "433280"
  },
  {
    "text": "in any context any environment as long",
    "start": "433280",
    "end": "435199"
  },
  {
    "text": "as you create a power",
    "start": "435199",
    "end": "436479"
  },
  {
    "text": "and you set all the right parameters in",
    "start": "436479",
    "end": "438000"
  },
  {
    "text": "terms of the you know destination or the",
    "start": "438000",
    "end": "439759"
  },
  {
    "text": "source of the queue the destination",
    "start": "439759",
    "end": "441280"
  },
  {
    "text": "to call and stuff like that and uh",
    "start": "441280",
    "end": "444560"
  },
  {
    "text": "you can always deploy a part but the",
    "start": "444560",
    "end": "446400"
  },
  {
    "text": "great part is if you require data along",
    "start": "446400",
    "end": "447840"
  },
  {
    "text": "with that",
    "start": "447840",
    "end": "448319"
  },
  {
    "text": "and define the scalars you know for that",
    "start": "448319",
    "end": "450400"
  },
  {
    "text": "uh",
    "start": "450400",
    "end": "451360"
  },
  {
    "text": "specific message queue these will be",
    "start": "451360",
    "end": "453120"
  },
  {
    "text": "scaled out only when there are messages",
    "start": "453120",
    "end": "455199"
  },
  {
    "text": "right and",
    "start": "455199",
    "end": "455919"
  },
  {
    "text": "this is the same mechanism that we use",
    "start": "455919",
    "end": "457280"
  },
  {
    "text": "in fusion to actually read messages when",
    "start": "457280",
    "end": "459280"
  },
  {
    "text": "there are messages in a message queue",
    "start": "459280",
    "end": "460880"
  },
  {
    "text": "and then scale out the number of",
    "start": "460880",
    "end": "461919"
  },
  {
    "text": "functions as the number of messages",
    "start": "461919",
    "end": "463680"
  },
  {
    "text": "scale",
    "start": "463680",
    "end": "464080"
  },
  {
    "text": "into the message today we have you know",
    "start": "464080",
    "end": "466800"
  },
  {
    "text": "about five six hour connectors uh kafka",
    "start": "466800",
    "end": "468879"
  },
  {
    "text": "aws sqs",
    "start": "468879",
    "end": "469840"
  },
  {
    "text": "rapid mq aws genesis nas http and there",
    "start": "469840",
    "end": "472800"
  },
  {
    "text": "are much more coming you know they are",
    "start": "472800",
    "end": "474160"
  },
  {
    "text": "being",
    "start": "474160",
    "end": "474879"
  },
  {
    "text": "developed actively so i go you know i",
    "start": "474879",
    "end": "477520"
  },
  {
    "text": "suggest",
    "start": "477520",
    "end": "478000"
  },
  {
    "text": "uh you to go and check out this",
    "start": "478000",
    "end": "479199"
  },
  {
    "text": "repository called cada connectors uh",
    "start": "479199",
    "end": "481199"
  },
  {
    "text": "very useful if you're doing anything",
    "start": "481199",
    "end": "482479"
  },
  {
    "text": "with data processing you know between",
    "start": "482479",
    "end": "483759"
  },
  {
    "text": "message queues and macro services and",
    "start": "483759",
    "end": "485199"
  },
  {
    "text": "functions basically",
    "start": "485199",
    "end": "486319"
  },
  {
    "text": "all right coming back to the previous",
    "start": "486319",
    "end": "488319"
  },
  {
    "text": "slide right so this was a part of",
    "start": "488319",
    "end": "490000"
  },
  {
    "text": "auto scaling uh based on events",
    "start": "490000",
    "end": "492800"
  },
  {
    "text": "happening in the message queues so",
    "start": "492800",
    "end": "494000"
  },
  {
    "text": "you're not consuming any resources when",
    "start": "494000",
    "end": "495520"
  },
  {
    "text": "there are no messages",
    "start": "495520",
    "end": "496800"
  },
  {
    "text": "you only scale out based on demand when",
    "start": "496800",
    "end": "499120"
  },
  {
    "text": "there are messages in the message",
    "start": "499120",
    "end": "500400"
  },
  {
    "text": "right so that is one part of the auto",
    "start": "500400",
    "end": "501680"
  },
  {
    "text": "scaling the second part of the auto",
    "start": "501680",
    "end": "503919"
  },
  {
    "text": "scaling is actual functions",
    "start": "503919",
    "end": "506000"
  },
  {
    "text": "now all of these functions uh for",
    "start": "506000",
    "end": "507599"
  },
  {
    "text": "example two of them retain golang two of",
    "start": "507599",
    "end": "509440"
  },
  {
    "text": "them written in node.js",
    "start": "509440",
    "end": "511120"
  },
  {
    "text": "they are not running always they only",
    "start": "511120",
    "end": "513039"
  },
  {
    "text": "are uh you know",
    "start": "513039",
    "end": "514399"
  },
  {
    "text": "uh invoked and scaled out when there are",
    "start": "514399",
    "end": "516719"
  },
  {
    "text": "more messages coming in right",
    "start": "516719",
    "end": "518159"
  },
  {
    "text": "so what we do is in fashion there is a",
    "start": "518159",
    "end": "519919"
  },
  {
    "text": "concept of environment",
    "start": "519919",
    "end": "521360"
  },
  {
    "text": "we create a small pool so for example",
    "start": "521360",
    "end": "523200"
  },
  {
    "text": "for both the go functions we get a small",
    "start": "523200",
    "end": "525279"
  },
  {
    "text": "pool called go environment",
    "start": "525279",
    "end": "526880"
  },
  {
    "text": "and there are let's say two or three you",
    "start": "526880",
    "end": "528640"
  },
  {
    "text": "know uh idle parts running there",
    "start": "528640",
    "end": "530480"
  },
  {
    "text": "and for node.js there are again two or",
    "start": "530480",
    "end": "531839"
  },
  {
    "text": "three idle parts running there which can",
    "start": "531839",
    "end": "533279"
  },
  {
    "text": "be used by both the functions",
    "start": "533279",
    "end": "535040"
  },
  {
    "text": "now as messages start arriving if the",
    "start": "535040",
    "end": "536959"
  },
  {
    "text": "first message arrives",
    "start": "536959",
    "end": "538080"
  },
  {
    "text": "at the first uh or we invoke the first",
    "start": "538080",
    "end": "540560"
  },
  {
    "text": "function manually right",
    "start": "540560",
    "end": "542080"
  },
  {
    "text": "uh this will be scaled if there is more",
    "start": "542080",
    "end": "544320"
  },
  {
    "text": "like request coming in but",
    "start": "544320",
    "end": "545519"
  },
  {
    "text": "potentially just one will be scaled",
    "start": "545519",
    "end": "547200"
  },
  {
    "text": "initially right now the message is going",
    "start": "547200",
    "end": "549279"
  },
  {
    "text": "to kafka",
    "start": "549279",
    "end": "550000"
  },
  {
    "text": "topic and the trigger gets triggered and",
    "start": "550000",
    "end": "552480"
  },
  {
    "text": "this trigger is again in auto scaling",
    "start": "552480",
    "end": "553839"
  },
  {
    "text": "the actual",
    "start": "553839",
    "end": "554399"
  },
  {
    "text": "parts which are like keta connected",
    "start": "554399",
    "end": "555760"
  },
  {
    "text": "parts it calls the second function",
    "start": "555760",
    "end": "557920"
  },
  {
    "text": "which is kafka consumer this kafka",
    "start": "557920",
    "end": "560160"
  },
  {
    "text": "consumer function will be scaled",
    "start": "560160",
    "end": "562320"
  },
  {
    "text": "from uh you know that pool with one part",
    "start": "562320",
    "end": "565600"
  },
  {
    "text": "and then eventually to more parts as the",
    "start": "565600",
    "end": "566959"
  },
  {
    "text": "more messages start coming in",
    "start": "566959",
    "end": "568959"
  },
  {
    "text": "and then it goes to underground kafka",
    "start": "568959",
    "end": "570480"
  },
  {
    "text": "topic and from there on the trigger",
    "start": "570480",
    "end": "572160"
  },
  {
    "text": "and then again this function is only",
    "start": "572160",
    "end": "573440"
  },
  {
    "text": "scaled based on the flow that is coming",
    "start": "573440",
    "end": "575760"
  },
  {
    "text": "in",
    "start": "575760",
    "end": "576080"
  },
  {
    "text": "from this you know q so to speak right",
    "start": "576080",
    "end": "577680"
  },
  {
    "text": "and so so on and so forth till the end",
    "start": "577680",
    "end": "579680"
  },
  {
    "text": "basically",
    "start": "579680",
    "end": "580959"
  },
  {
    "text": "the idea is when there are no messages",
    "start": "580959",
    "end": "582640"
  },
  {
    "text": "when there is no activity",
    "start": "582640",
    "end": "584080"
  },
  {
    "text": "technically none of the connectors are",
    "start": "584080",
    "end": "586080"
  },
  {
    "text": "consuming any parts so zero",
    "start": "586080",
    "end": "588080"
  },
  {
    "text": "between the golang and node.js",
    "start": "588080",
    "end": "589680"
  },
  {
    "text": "environment where you know consuming",
    "start": "589680",
    "end": "591040"
  },
  {
    "text": "about five or six parts you can again",
    "start": "591040",
    "end": "592560"
  },
  {
    "text": "configure this pool size to be just one",
    "start": "592560",
    "end": "594160"
  },
  {
    "text": "or more than one basically right",
    "start": "594160",
    "end": "595519"
  },
  {
    "text": "and and when there are messages it might",
    "start": "595519",
    "end": "597600"
  },
  {
    "text": "happen that each of the data connector",
    "start": "597600",
    "end": "599360"
  },
  {
    "text": "parts gets let's say from you know zero",
    "start": "599360",
    "end": "600800"
  },
  {
    "text": "to one two or three parts",
    "start": "600800",
    "end": "602399"
  },
  {
    "text": "and each of the function parts let's say",
    "start": "602399",
    "end": "603839"
  },
  {
    "text": "scale from nothing to you know let's say",
    "start": "603839",
    "end": "605920"
  },
  {
    "text": "two three four five parts so i could",
    "start": "605920",
    "end": "607279"
  },
  {
    "text": "speak that could be",
    "start": "607279",
    "end": "608399"
  },
  {
    "text": "maybe 25 25 odd parts running process",
    "start": "608399",
    "end": "611040"
  },
  {
    "text": "all the messages once they are done you",
    "start": "611040",
    "end": "612560"
  },
  {
    "text": "can scale back to zero and that's that's",
    "start": "612560",
    "end": "614160"
  },
  {
    "text": "the demo you know we are going to watch",
    "start": "614160",
    "end": "615360"
  },
  {
    "text": "today",
    "start": "615360",
    "end": "617360"
  },
  {
    "text": "cool so let me switch the screen here",
    "start": "617360",
    "end": "619440"
  },
  {
    "text": "and go to",
    "start": "619440",
    "end": "620480"
  },
  {
    "text": "first of all vs code and show you some",
    "start": "620480",
    "end": "622880"
  },
  {
    "text": "code",
    "start": "622880",
    "end": "623920"
  },
  {
    "text": "and then we can go to terminal try it",
    "start": "623920",
    "end": "626640"
  },
  {
    "text": "out and then go look at the rabbitmq",
    "start": "626640",
    "end": "628240"
  },
  {
    "text": "console and actually see messages coming",
    "start": "628240",
    "end": "629760"
  },
  {
    "text": "in basically right",
    "start": "629760",
    "end": "630800"
  },
  {
    "text": "so this is our first function doctor",
    "start": "630800",
    "end": "632480"
  },
  {
    "text": "producer it's a simple golan function",
    "start": "632480",
    "end": "634640"
  },
  {
    "text": "uh it uses a specific uh contract you",
    "start": "634640",
    "end": "637920"
  },
  {
    "text": "know for the defining of the function",
    "start": "637920",
    "end": "639680"
  },
  {
    "text": "it's a handler function which gets a",
    "start": "639680",
    "end": "642079"
  },
  {
    "text": "request and you return response",
    "start": "642079",
    "end": "643360"
  },
  {
    "text": "basically right",
    "start": "643360",
    "end": "644480"
  },
  {
    "text": "we connect to the kafka queue here and",
    "start": "644480",
    "end": "646240"
  },
  {
    "text": "we create a few random messages with",
    "start": "646240",
    "end": "647839"
  },
  {
    "text": "timestamp and the message id",
    "start": "647839",
    "end": "649519"
  },
  {
    "text": "and then you simply write it uh back uh",
    "start": "649519",
    "end": "651680"
  },
  {
    "text": "you know to the to the",
    "start": "651680",
    "end": "653200"
  },
  {
    "text": "message queue right uh",
    "start": "653200",
    "end": "656800"
  },
  {
    "text": "okay so that's that's the producer",
    "start": "656800",
    "end": "659760"
  },
  {
    "text": "function right",
    "start": "659760",
    "end": "660640"
  },
  {
    "text": "now trigger i don't have like there is",
    "start": "660640",
    "end": "662800"
  },
  {
    "text": "no code for trigger but there is like a",
    "start": "662800",
    "end": "664160"
  },
  {
    "text": "spec for trigger which i can show very",
    "start": "664160",
    "end": "665760"
  },
  {
    "text": "quickly",
    "start": "665760",
    "end": "666800"
  },
  {
    "text": "so all of our functions we are defining",
    "start": "666800",
    "end": "668320"
  },
  {
    "text": "in specs so if i show k2k trigger for",
    "start": "668320",
    "end": "671279"
  },
  {
    "text": "example right",
    "start": "671279",
    "end": "672560"
  },
  {
    "text": "so this figure defines uh you know first",
    "start": "672560",
    "end": "674880"
  },
  {
    "text": "of all what is the function reference so",
    "start": "674880",
    "end": "676480"
  },
  {
    "text": "consumer uh is the function to be called",
    "start": "676480",
    "end": "678399"
  },
  {
    "text": "right",
    "start": "678399",
    "end": "679279"
  },
  {
    "text": "and then it talks about which uh kafka",
    "start": "679279",
    "end": "681440"
  },
  {
    "text": "server to talk to which consumer group",
    "start": "681440",
    "end": "682880"
  },
  {
    "text": "you talk to which topic to listen to",
    "start": "682880",
    "end": "684800"
  },
  {
    "text": "and then you define also you know",
    "start": "684800",
    "end": "686480"
  },
  {
    "text": "polling interval and also you know like",
    "start": "686480",
    "end": "688480"
  },
  {
    "text": "minimum practical around max replica",
    "start": "688480",
    "end": "690079"
  },
  {
    "text": "power maximum retries and stuff like",
    "start": "690079",
    "end": "691440"
  },
  {
    "text": "that",
    "start": "691440",
    "end": "691760"
  },
  {
    "text": "right you can define all this on the cli",
    "start": "691760",
    "end": "693839"
  },
  {
    "text": "of fashion as well but you can also",
    "start": "693839",
    "end": "695040"
  },
  {
    "text": "define them as a spec",
    "start": "695040",
    "end": "696399"
  },
  {
    "text": "uh it's a message to trigger uh you know",
    "start": "696399",
    "end": "698240"
  },
  {
    "text": "custom resources",
    "start": "698240",
    "end": "700000"
  },
  {
    "text": "cool look at the producer we looked at",
    "start": "700000",
    "end": "701680"
  },
  {
    "text": "one of the triggers now let's go look at",
    "start": "701680",
    "end": "703120"
  },
  {
    "text": "the consumer",
    "start": "703120",
    "end": "704480"
  },
  {
    "text": "the first consumer uh gets directly the",
    "start": "704480",
    "end": "706880"
  },
  {
    "text": "message body",
    "start": "706880",
    "end": "708000"
  },
  {
    "text": "you know as part of the payload request",
    "start": "708000",
    "end": "709519"
  },
  {
    "text": "payload you don't have to connect to",
    "start": "709519",
    "end": "710959"
  },
  {
    "text": "kafka you don't know anything",
    "start": "710959",
    "end": "712560"
  },
  {
    "text": "from where the message is coming right",
    "start": "712560",
    "end": "714560"
  },
  {
    "text": "so the trigger did the job of listening",
    "start": "714560",
    "end": "716639"
  },
  {
    "text": "to that",
    "start": "716639",
    "end": "717200"
  },
  {
    "text": "request topic as soon as there is",
    "start": "717200",
    "end": "719200"
  },
  {
    "text": "message read the message",
    "start": "719200",
    "end": "720320"
  },
  {
    "text": "converted it to a you know specific",
    "start": "720320",
    "end": "721920"
  },
  {
    "text": "format and post to this function as part",
    "start": "721920",
    "end": "724480"
  },
  {
    "text": "of the request body",
    "start": "724480",
    "end": "725680"
  },
  {
    "text": "so all we do is get the body we add",
    "start": "725680",
    "end": "727920"
  },
  {
    "text": "another field called k status so we are",
    "start": "727920",
    "end": "729600"
  },
  {
    "text": "saying kafka process status or something",
    "start": "729600",
    "end": "731040"
  },
  {
    "text": "of that stuff right to that",
    "start": "731040",
    "end": "732720"
  },
  {
    "text": "original message and simply returning",
    "start": "732720",
    "end": "734240"
  },
  {
    "text": "that message again when we are writing",
    "start": "734240",
    "end": "736320"
  },
  {
    "text": "the message here",
    "start": "736320",
    "end": "737200"
  },
  {
    "text": "we don't know where the message is going",
    "start": "737200",
    "end": "739120"
  },
  {
    "text": "but that is configured in the trigger",
    "start": "739120",
    "end": "740880"
  },
  {
    "text": "that if there is success in this",
    "start": "740880",
    "end": "742560"
  },
  {
    "text": "function processing please send the",
    "start": "742560",
    "end": "744240"
  },
  {
    "text": "message to response topic but if there",
    "start": "744240",
    "end": "745920"
  },
  {
    "text": "is error",
    "start": "745920",
    "end": "746639"
  },
  {
    "text": "so if the status code will be anything",
    "start": "746639",
    "end": "748079"
  },
  {
    "text": "other than 200 it would go to error top",
    "start": "748079",
    "end": "750800"
  },
  {
    "text": "right so the function is completely",
    "start": "750800",
    "end": "752959"
  },
  {
    "text": "abstracted from how it gets the message",
    "start": "752959",
    "end": "755360"
  },
  {
    "text": "and where the message goes right so very",
    "start": "755360",
    "end": "757600"
  },
  {
    "text": "loosely couple",
    "start": "757600",
    "end": "758959"
  },
  {
    "text": "now when it goes to uh the the second",
    "start": "758959",
    "end": "762480"
  },
  {
    "text": "uh you know topic kafka topic which is",
    "start": "762480",
    "end": "764079"
  },
  {
    "text": "the response topic we are looking at the",
    "start": "764079",
    "end": "765680"
  },
  {
    "text": "second trigger which is k two r you know",
    "start": "765680",
    "end": "767200"
  },
  {
    "text": "we are saying",
    "start": "767200",
    "end": "767760"
  },
  {
    "text": "read it from kafka right to a rabbit mq",
    "start": "767760",
    "end": "770160"
  },
  {
    "text": "producer right",
    "start": "770160",
    "end": "771200"
  },
  {
    "text": "here again you know we have configured",
    "start": "771200",
    "end": "773680"
  },
  {
    "text": "which function to call",
    "start": "773680",
    "end": "775120"
  },
  {
    "text": "and you know from where to read messages",
    "start": "775120",
    "end": "776800"
  },
  {
    "text": "what topic and stuff like that right so",
    "start": "776800",
    "end": "778480"
  },
  {
    "text": "that will eventually call the rabbit",
    "start": "778480",
    "end": "779680"
  },
  {
    "text": "empty producer",
    "start": "779680",
    "end": "781040"
  },
  {
    "text": "now again within drivertmq producer we",
    "start": "781040",
    "end": "783200"
  },
  {
    "text": "simply get",
    "start": "783200",
    "end": "784079"
  },
  {
    "text": "the request and the request body is what",
    "start": "784079",
    "end": "786720"
  },
  {
    "text": "we get",
    "start": "786720",
    "end": "787200"
  },
  {
    "text": "right uh somewhere down the request.body",
    "start": "787200",
    "end": "790240"
  },
  {
    "text": "now the writing part of it of course we",
    "start": "790240",
    "end": "792240"
  },
  {
    "text": "have to connect to you know rival mpu",
    "start": "792240",
    "end": "793519"
  },
  {
    "text": "you know give some credentials and stuff",
    "start": "793519",
    "end": "795200"
  },
  {
    "text": "and and that is again defined in the",
    "start": "795200",
    "end": "796399"
  },
  {
    "text": "function specification uh so if you go",
    "start": "796399",
    "end": "799040"
  },
  {
    "text": "and look at uh",
    "start": "799040",
    "end": "801920"
  },
  {
    "text": "rabbit consumer rabbit producer right so",
    "start": "802320",
    "end": "804480"
  },
  {
    "text": "here is you know we are defining which",
    "start": "804480",
    "end": "806079"
  },
  {
    "text": "rabbit",
    "start": "806079",
    "end": "806800"
  },
  {
    "text": "cluster to connect to and stuff like",
    "start": "806800",
    "end": "808079"
  },
  {
    "text": "that uh",
    "start": "808079",
    "end": "810240"
  },
  {
    "text": "and it writes the body to uh the rabbit",
    "start": "810240",
    "end": "812839"
  },
  {
    "text": "mq once it is done writing",
    "start": "812839",
    "end": "815440"
  },
  {
    "text": "the next trigger which is a",
    "start": "815440",
    "end": "818560"
  },
  {
    "text": "rabbit to function will be called again",
    "start": "818560",
    "end": "820320"
  },
  {
    "text": "here it has defined",
    "start": "820320",
    "end": "822320"
  },
  {
    "text": "you know what to do and all that stuff",
    "start": "822320",
    "end": "823920"
  },
  {
    "text": "and the actual message doesn't know",
    "start": "823920",
    "end": "825519"
  },
  {
    "text": "anything from where the message is",
    "start": "825519",
    "end": "826560"
  },
  {
    "text": "coming or it does it gets a message",
    "start": "826560",
    "end": "828720"
  },
  {
    "text": "where you know appending one more string",
    "start": "828720",
    "end": "830320"
  },
  {
    "text": "to the message and then writing that",
    "start": "830320",
    "end": "832079"
  },
  {
    "text": "message",
    "start": "832079",
    "end": "832560"
  },
  {
    "text": "right so that was overall flow you know",
    "start": "832560",
    "end": "835040"
  },
  {
    "text": "uh two functions in golang",
    "start": "835040",
    "end": "836399"
  },
  {
    "text": "uh listening to kafka topics uh and and",
    "start": "836399",
    "end": "839680"
  },
  {
    "text": "uh you know one last one listening to",
    "start": "839680",
    "end": "841120"
  },
  {
    "text": "rabbit mq and so on and so forth",
    "start": "841120",
    "end": "843600"
  },
  {
    "text": "great now before we actually",
    "start": "843600",
    "end": "847040"
  },
  {
    "text": "go into the demo what i want to show you",
    "start": "847040",
    "end": "848560"
  },
  {
    "text": "is",
    "start": "848560",
    "end": "850800"
  },
  {
    "text": "clear up all the screens just so that",
    "start": "854959",
    "end": "856880"
  },
  {
    "text": "you know we see",
    "start": "856880",
    "end": "858240"
  },
  {
    "text": "things a little clearly right so",
    "start": "858240",
    "end": "861600"
  },
  {
    "text": "if i go and look at oops yeah",
    "start": "861600",
    "end": "865040"
  },
  {
    "text": "you can go and look at the deployments",
    "start": "865040",
    "end": "866480"
  },
  {
    "text": "in the default namespace",
    "start": "866480",
    "end": "868160"
  },
  {
    "text": "these are for three different connectors",
    "start": "868160",
    "end": "870240"
  },
  {
    "text": "right the kafka to kafka kafka to rabbit",
    "start": "870240",
    "end": "872160"
  },
  {
    "text": "and diabetic function",
    "start": "872160",
    "end": "873199"
  },
  {
    "text": "right if you look at the available",
    "start": "873199",
    "end": "874880"
  },
  {
    "text": "replicas zero because there is no",
    "start": "874880",
    "end": "876720"
  },
  {
    "text": "messages coming in",
    "start": "876720",
    "end": "877839"
  },
  {
    "text": "all the replicas zero right similarly if",
    "start": "877839",
    "end": "880639"
  },
  {
    "text": "i show you the hpa's",
    "start": "880639",
    "end": "885839"
  },
  {
    "text": "all of them targeting specific",
    "start": "885920",
    "end": "887680"
  },
  {
    "text": "deployments and and replicas are",
    "start": "887680",
    "end": "889360"
  },
  {
    "text": "currently zero",
    "start": "889360",
    "end": "890160"
  },
  {
    "text": "right great secondly",
    "start": "890160",
    "end": "893519"
  },
  {
    "text": "uh if i look at the pool the pool i was",
    "start": "893519",
    "end": "895440"
  },
  {
    "text": "talking about right so",
    "start": "895440",
    "end": "896720"
  },
  {
    "text": "i'm to do two critical parts and from",
    "start": "896720",
    "end": "899120"
  },
  {
    "text": "physician function namespace",
    "start": "899120",
    "end": "901760"
  },
  {
    "text": "so these are the pool parts i have three",
    "start": "901760",
    "end": "903600"
  },
  {
    "text": "uh pool parts for golang",
    "start": "903600",
    "end": "905279"
  },
  {
    "text": "as the environment and three pool parts",
    "start": "905279",
    "end": "907199"
  },
  {
    "text": "for node you know jss environment",
    "start": "907199",
    "end": "909920"
  },
  {
    "text": "but if i had to look at functions",
    "start": "909920",
    "end": "911920"
  },
  {
    "text": "function specific parts right",
    "start": "911920",
    "end": "913360"
  },
  {
    "text": "so kgpo",
    "start": "913360",
    "end": "917360"
  },
  {
    "text": "and",
    "start": "917360",
    "end": "919680"
  },
  {
    "text": "so rabbit producer right rabbit producer",
    "start": "923839",
    "end": "926000"
  },
  {
    "text": "function",
    "start": "926000",
    "end": "926880"
  },
  {
    "text": "and when you say manageable to false",
    "start": "926880",
    "end": "928720"
  },
  {
    "text": "that is the part which is actually doing",
    "start": "928720",
    "end": "930000"
  },
  {
    "text": "any work right",
    "start": "930000",
    "end": "930720"
  },
  {
    "text": "there is there is no power right now",
    "start": "930720",
    "end": "932959"
  },
  {
    "text": "similarly",
    "start": "932959",
    "end": "934000"
  },
  {
    "text": "i'm going to do a hyphen consumer",
    "start": "934000",
    "end": "937680"
  },
  {
    "text": "there's no part right right",
    "start": "939680",
    "end": "943199"
  },
  {
    "text": "so right now all the resources are zero",
    "start": "946399",
    "end": "949199"
  },
  {
    "text": "what i'm gonna do is",
    "start": "949199",
    "end": "950639"
  },
  {
    "text": "i'm gonna call this producer now in the",
    "start": "950639",
    "end": "952880"
  },
  {
    "text": "producer code when we were producing the",
    "start": "952880",
    "end": "954560"
  },
  {
    "text": "message to kafka request topic we were",
    "start": "954560",
    "end": "956639"
  },
  {
    "text": "producing about 10 hour messages so i'm",
    "start": "956639",
    "end": "958160"
  },
  {
    "text": "going to call this function a couple of",
    "start": "958160",
    "end": "959360"
  },
  {
    "text": "times so it produces like",
    "start": "959360",
    "end": "960639"
  },
  {
    "text": "40 50 or messages you know",
    "start": "960639",
    "end": "964079"
  },
  {
    "text": "right now let's look at the deployments",
    "start": "966000",
    "end": "968399"
  },
  {
    "text": "here",
    "start": "968399",
    "end": "970560"
  },
  {
    "text": "as you can see the kafka to kafka",
    "start": "970560",
    "end": "973519"
  },
  {
    "text": "connector",
    "start": "973519",
    "end": "974399"
  },
  {
    "text": "deployment has scaled from zero to one",
    "start": "974399",
    "end": "976079"
  },
  {
    "text": "because they have messages arrived",
    "start": "976079",
    "end": "977600"
  },
  {
    "text": "in the kafka queue right similarly",
    "start": "977600",
    "end": "981199"
  },
  {
    "text": "if i go look at function",
    "start": "981199",
    "end": "985519"
  },
  {
    "text": "so producer function has been called",
    "start": "987440",
    "end": "988880"
  },
  {
    "text": "which is the first function in the",
    "start": "988880",
    "end": "989920"
  },
  {
    "text": "pipeline right",
    "start": "989920",
    "end": "991519"
  },
  {
    "text": "let me go and look at if there is any",
    "start": "991519",
    "end": "993839"
  },
  {
    "text": "consumer function",
    "start": "993839",
    "end": "996399"
  },
  {
    "text": "parts you know which have been created",
    "start": "996399",
    "end": "998880"
  },
  {
    "text": "there is one",
    "start": "998880",
    "end": "999920"
  },
  {
    "text": "right uh if you look at the r consumer",
    "start": "999920",
    "end": "1003040"
  },
  {
    "text": "which is rapid mq the last function",
    "start": "1003040",
    "end": "1004480"
  },
  {
    "text": "there are only four five of them right",
    "start": "1004480",
    "end": "1006639"
  },
  {
    "text": "and lastly the rabbit mq producer",
    "start": "1006639",
    "end": "1011839"
  },
  {
    "text": "right there is just one so and on the",
    "start": "1012880",
    "end": "1015759"
  },
  {
    "text": "bottom if you see",
    "start": "1015759",
    "end": "1016800"
  },
  {
    "text": "all three of the triggers the k2k uh k2",
    "start": "1016800",
    "end": "1020160"
  },
  {
    "text": "r and let's see if the r2f still is zero",
    "start": "1020160",
    "end": "1025839"
  },
  {
    "text": "yeah so now k2k has again scaled back to",
    "start": "1028240",
    "end": "1030240"
  },
  {
    "text": "zero k2 r has scaled back to zero",
    "start": "1030240",
    "end": "1033199"
  },
  {
    "text": "the r2f you know has scaled back to one",
    "start": "1033199",
    "end": "1035120"
  },
  {
    "text": "so these are all connected parts by the",
    "start": "1035120",
    "end": "1036400"
  },
  {
    "text": "way",
    "start": "1036400",
    "end": "1037038"
  },
  {
    "text": "and as you might have seen here again",
    "start": "1037039",
    "end": "1039120"
  },
  {
    "text": "rabbit producer still won",
    "start": "1039120",
    "end": "1041199"
  },
  {
    "text": "but if you look at rabbit consumer let's",
    "start": "1041199",
    "end": "1042720"
  },
  {
    "text": "see right about",
    "start": "1042720",
    "end": "1044480"
  },
  {
    "text": "uh six odd parts are working together",
    "start": "1044480",
    "end": "1047360"
  },
  {
    "text": "and if i look at the kafka consumer",
    "start": "1047360",
    "end": "1049600"
  },
  {
    "text": "there is just one part running still",
    "start": "1049600",
    "end": "1050880"
  },
  {
    "text": "right now as the messages get processed",
    "start": "1050880",
    "end": "1053600"
  },
  {
    "text": "this six will again come back to zero",
    "start": "1053600",
    "end": "1055760"
  },
  {
    "text": "and this r2f connectors",
    "start": "1055760",
    "end": "1057520"
  },
  {
    "text": "data connector part will also come back",
    "start": "1057520",
    "end": "1059039"
  },
  {
    "text": "to zero right now let's go and check out",
    "start": "1059039",
    "end": "1061440"
  },
  {
    "text": "in the rabbit mp console as you can see",
    "start": "1061440",
    "end": "1064400"
  },
  {
    "text": "we did a spike so there are about 30",
    "start": "1064400",
    "end": "1065919"
  },
  {
    "text": "order messages",
    "start": "1065919",
    "end": "1067120"
  },
  {
    "text": "uh which were received are cured and",
    "start": "1067120",
    "end": "1069120"
  },
  {
    "text": "then there were you know other that were",
    "start": "1069120",
    "end": "1070480"
  },
  {
    "text": "consumed as well right by different",
    "start": "1070480",
    "end": "1071760"
  },
  {
    "text": "different consumers",
    "start": "1071760",
    "end": "1073440"
  },
  {
    "text": "and uh yeah i think there is nothing",
    "start": "1073440",
    "end": "1075200"
  },
  {
    "text": "left in the queue anymore right now",
    "start": "1075200",
    "end": "1076640"
  },
  {
    "text": "but but that gives you a sense of you",
    "start": "1076640",
    "end": "1078640"
  },
  {
    "text": "know uh the spike that happened when we",
    "start": "1078640",
    "end": "1080799"
  },
  {
    "text": "invoke the function",
    "start": "1080799",
    "end": "1083600"
  },
  {
    "text": "if i go back again and look at uh let's",
    "start": "1084320",
    "end": "1087039"
  },
  {
    "text": "look at r consumer those were the",
    "start": "1087039",
    "end": "1088320"
  },
  {
    "text": "maximum parts i think it has",
    "start": "1088320",
    "end": "1090240"
  },
  {
    "text": "scaled down one two three four five six",
    "start": "1090240",
    "end": "1093120"
  },
  {
    "text": "to still six",
    "start": "1093120",
    "end": "1094640"
  },
  {
    "text": "still working still working on it",
    "start": "1094640",
    "end": "1098240"
  },
  {
    "text": "and here on the",
    "start": "1098400",
    "end": "1101760"
  },
  {
    "text": "connector parts the keta connector part",
    "start": "1101760",
    "end": "1103280"
  },
  {
    "text": "still one here so i can actually go look",
    "start": "1103280",
    "end": "1105200"
  },
  {
    "text": "at it",
    "start": "1105200",
    "end": "1109120"
  },
  {
    "text": "yeah there is just one part for r12",
    "start": "1109120",
    "end": "1112960"
  },
  {
    "text": "yeah it's running a rabbit and q uh",
    "start": "1118080",
    "end": "1123840"
  },
  {
    "text": "cool so the idea is uh",
    "start": "1123840",
    "end": "1126880"
  },
  {
    "text": "when you are executing uh workloads uh",
    "start": "1126880",
    "end": "1130400"
  },
  {
    "text": "things should scale up on demand when",
    "start": "1130400",
    "end": "1132559"
  },
  {
    "text": "you're not doing anything",
    "start": "1132559",
    "end": "1133520"
  },
  {
    "text": "things should scale down backward you",
    "start": "1133520",
    "end": "1135039"
  },
  {
    "text": "know nothing now of course i'm talking",
    "start": "1135039",
    "end": "1137039"
  },
  {
    "text": "about parts you must be asking what",
    "start": "1137039",
    "end": "1138559"
  },
  {
    "text": "about the underlying nodes",
    "start": "1138559",
    "end": "1139919"
  },
  {
    "text": "uh now i didn't you know do it for this",
    "start": "1139919",
    "end": "1141679"
  },
  {
    "text": "demo like a node auto scaler",
    "start": "1141679",
    "end": "1143600"
  },
  {
    "text": "but you could very well back this with",
    "start": "1143600",
    "end": "1144880"
  },
  {
    "text": "the node auto scaler and actually",
    "start": "1144880",
    "end": "1147039"
  },
  {
    "text": "when there are no messages appearing",
    "start": "1147039",
    "end": "1149120"
  },
  {
    "text": "from your you know",
    "start": "1149120",
    "end": "1150640"
  },
  {
    "text": "sources you could just run with one load",
    "start": "1150640",
    "end": "1153120"
  },
  {
    "text": "cluster",
    "start": "1153120",
    "end": "1153919"
  },
  {
    "text": "and as messages arrive you could",
    "start": "1153919",
    "end": "1155520"
  },
  {
    "text": "actually scale it out to you know two",
    "start": "1155520",
    "end": "1157200"
  },
  {
    "text": "three or you know as many number of",
    "start": "1157200",
    "end": "1158320"
  },
  {
    "text": "nodes as you want and you know",
    "start": "1158320",
    "end": "1160000"
  },
  {
    "text": "accordingly process matches basically",
    "start": "1160000",
    "end": "1165360"
  },
  {
    "text": "all right that does not take i think a",
    "start": "1165360",
    "end": "1167039"
  },
  {
    "text": "while and it'll",
    "start": "1167039",
    "end": "1169200"
  },
  {
    "text": "okay now they are gone in terminating",
    "start": "1169200",
    "end": "1170559"
  },
  {
    "text": "state there you go so from running",
    "start": "1170559",
    "end": "1172880"
  },
  {
    "text": "uh to terminating because it has",
    "start": "1172880",
    "end": "1174400"
  },
  {
    "text": "probably processed all of them i don't",
    "start": "1174400",
    "end": "1176080"
  },
  {
    "text": "know why this is still skill out one it",
    "start": "1176080",
    "end": "1178880"
  },
  {
    "text": "should probably",
    "start": "1178880",
    "end": "1179760"
  },
  {
    "text": "go back to zero",
    "start": "1179760",
    "end": "1182880"
  },
  {
    "text": "hopefully in a minute great so",
    "start": "1182880",
    "end": "1186320"
  },
  {
    "text": "consumer parts for rabbit mq already",
    "start": "1186320",
    "end": "1188400"
  },
  {
    "text": "gone back to",
    "start": "1188400",
    "end": "1189679"
  },
  {
    "text": "kind of original state consumer power",
    "start": "1189679",
    "end": "1192080"
  },
  {
    "text": "for kafka also gone back to more or less",
    "start": "1192080",
    "end": "1193919"
  },
  {
    "text": "original state",
    "start": "1193919",
    "end": "1195600"
  },
  {
    "text": "if i look at the producer",
    "start": "1195600",
    "end": "1198880"
  },
  {
    "text": "terminating as well and if i look at the",
    "start": "1199440",
    "end": "1201600"
  },
  {
    "text": "rabbit producer",
    "start": "1201600",
    "end": "1204400"
  },
  {
    "text": "emitting as well right so all the",
    "start": "1205360",
    "end": "1207360"
  },
  {
    "text": "function parts are pretty much in",
    "start": "1207360",
    "end": "1209039"
  },
  {
    "text": "terminating state",
    "start": "1209039",
    "end": "1210159"
  },
  {
    "text": "there is just one part which is for",
    "start": "1210159",
    "end": "1211600"
  },
  {
    "text": "connector which is still in you know",
    "start": "1211600",
    "end": "1213679"
  },
  {
    "text": "uh running state should go back to",
    "start": "1213679",
    "end": "1215679"
  },
  {
    "text": "emitting state in a way",
    "start": "1215679",
    "end": "1218080"
  },
  {
    "text": "cool so that is you know a brief demo",
    "start": "1218080",
    "end": "1220559"
  },
  {
    "text": "the code walkthrough",
    "start": "1220559",
    "end": "1221520"
  },
  {
    "text": "and you know how this whole thing works",
    "start": "1221520",
    "end": "1223520"
  },
  {
    "text": "how truly it is auto scale not just from",
    "start": "1223520",
    "end": "1226559"
  },
  {
    "text": "actual workload processing units but",
    "start": "1226559",
    "end": "1228640"
  },
  {
    "text": "also the units which actually read a",
    "start": "1228640",
    "end": "1230240"
  },
  {
    "text": "message queue and supply",
    "start": "1230240",
    "end": "1231600"
  },
  {
    "text": "you know to the processing unit so to",
    "start": "1231600",
    "end": "1233840"
  },
  {
    "text": "speak they're also auto scale using data",
    "start": "1233840",
    "end": "1236720"
  },
  {
    "text": "uh so this is truly auto scalable and",
    "start": "1236720",
    "end": "1239760"
  },
  {
    "text": "uh you know only on demand scalable kind",
    "start": "1239760",
    "end": "1242080"
  },
  {
    "text": "of setup with caden fashion",
    "start": "1242080",
    "end": "1245520"
  },
  {
    "text": "great uh gordon you want to speak out",
    "start": "1245520",
    "end": "1250080"
  },
  {
    "text": "so if you're happy or if you're",
    "start": "1250400",
    "end": "1252400"
  },
  {
    "text": "enlightened with what you have seen",
    "start": "1252400",
    "end": "1253760"
  },
  {
    "text": "like this is just one example which",
    "start": "1253760",
    "end": "1255360"
  },
  {
    "text": "vishal has demoted there are more",
    "start": "1255360",
    "end": "1256720"
  },
  {
    "text": "examples that are available",
    "start": "1256720",
    "end": "1258320"
  },
  {
    "text": "on the blogs on the documentation side",
    "start": "1258320",
    "end": "1260640"
  },
  {
    "text": "and also on the fission",
    "start": "1260640",
    "end": "1262799"
  },
  {
    "text": "examples so what you can do is try this",
    "start": "1262799",
    "end": "1265280"
  },
  {
    "text": "example which takes in",
    "start": "1265280",
    "end": "1266559"
  },
  {
    "text": "six functions and you what you play with",
    "start": "1266559",
    "end": "1268880"
  },
  {
    "text": "is kafka radish and a database",
    "start": "1268880",
    "end": "1270960"
  },
  {
    "text": "and also that has a web ui so vishal has",
    "start": "1270960",
    "end": "1273919"
  },
  {
    "text": "already written a blog post about the",
    "start": "1273919",
    "end": "1275440"
  },
  {
    "text": "same where he is describing",
    "start": "1275440",
    "end": "1276799"
  },
  {
    "text": "the whole functions and yes this is",
    "start": "1276799",
    "end": "1278960"
  },
  {
    "text": "something that we'll",
    "start": "1278960",
    "end": "1280159"
  },
  {
    "text": "really like you to try and give us your",
    "start": "1280159",
    "end": "1281840"
  },
  {
    "text": "feedback how you like it and if you have",
    "start": "1281840",
    "end": "1283520"
  },
  {
    "text": "run into any shoes",
    "start": "1283520",
    "end": "1284640"
  },
  {
    "text": "we'll be more than happy to help you on",
    "start": "1284640",
    "end": "1286080"
  },
  {
    "text": "the slack",
    "start": "1286080",
    "end": "1288559"
  },
  {
    "text": "if you are starting your journey as a",
    "start": "1289360",
    "end": "1291120"
  },
  {
    "text": "fresh contributor out of college",
    "start": "1291120",
    "end": "1292960"
  },
  {
    "text": "or if you're already part of different",
    "start": "1292960",
    "end": "1295039"
  },
  {
    "text": "communities and helping in different",
    "start": "1295039",
    "end": "1297280"
  },
  {
    "text": "projects we'll be happy to have you",
    "start": "1297280",
    "end": "1299039"
  },
  {
    "text": "contribute to fishing as well",
    "start": "1299039",
    "end": "1300720"
  },
  {
    "text": "and yes definitely you're just",
    "start": "1300720",
    "end": "1303280"
  },
  {
    "text": "contributing to code is just one side",
    "start": "1303280",
    "end": "1305280"
  },
  {
    "text": "contributing documentation raising",
    "start": "1305280",
    "end": "1306880"
  },
  {
    "text": "issues and helping with questions",
    "start": "1306880",
    "end": "1308640"
  },
  {
    "text": "in fact asking questions is just a",
    "start": "1308640",
    "end": "1310799"
  },
  {
    "text": "marvelous",
    "start": "1310799",
    "end": "1311760"
  },
  {
    "text": "uh way of uh you know contributing so",
    "start": "1311760",
    "end": "1314480"
  },
  {
    "text": "yes we would like to connect with you",
    "start": "1314480",
    "end": "1316080"
  },
  {
    "text": "on slack or twitter wherever you feel",
    "start": "1316080",
    "end": "1318240"
  },
  {
    "text": "like and just help us out with",
    "start": "1318240",
    "end": "1320320"
  },
  {
    "text": "uh contributions to vision",
    "start": "1320320",
    "end": "1324080"
  },
  {
    "text": "in fact if you're interested in",
    "start": "1324080",
    "end": "1326000"
  },
  {
    "text": "contributing to just fission",
    "start": "1326000",
    "end": "1327600"
  },
  {
    "text": "you can also start contributing to what",
    "start": "1327600",
    "end": "1329360"
  },
  {
    "text": "cube so bot cube is another project uh",
    "start": "1329360",
    "end": "1331760"
  },
  {
    "text": "which",
    "start": "1331760",
    "end": "1332000"
  },
  {
    "text": "we started at infra cloud this is a chat",
    "start": "1332000",
    "end": "1334880"
  },
  {
    "text": "ops way of",
    "start": "1334880",
    "end": "1335840"
  },
  {
    "text": "interacting with your kubernetes cluster",
    "start": "1335840",
    "end": "1338480"
  },
  {
    "text": "it not just allows you to monitor a",
    "start": "1338480",
    "end": "1340080"
  },
  {
    "text": "cluster but it also allows you to do",
    "start": "1340080",
    "end": "1342000"
  },
  {
    "text": "some more",
    "start": "1342000",
    "end": "1342640"
  },
  {
    "text": "fancy stuff like creating deployments",
    "start": "1342640",
    "end": "1345600"
  },
  {
    "text": "getting spot and all",
    "start": "1345600",
    "end": "1347039"
  },
  {
    "text": "so yes this is also our open source",
    "start": "1347039",
    "end": "1349039"
  },
  {
    "text": "project that you can start your journey",
    "start": "1349039",
    "end": "1350480"
  },
  {
    "text": "with",
    "start": "1350480",
    "end": "1350799"
  },
  {
    "text": "if you have any questions we'll be more",
    "start": "1350799",
    "end": "1352480"
  },
  {
    "text": "than happy to take them",
    "start": "1352480",
    "end": "1353840"
  },
  {
    "text": "and if you have any questions even after",
    "start": "1353840",
    "end": "1356159"
  },
  {
    "text": "this talk and all",
    "start": "1356159",
    "end": "1357440"
  },
  {
    "text": "we'll be available on slack so thank you",
    "start": "1357440",
    "end": "1359760"
  },
  {
    "text": "guys very much",
    "start": "1359760",
    "end": "1360799"
  },
  {
    "text": "for your time and we'll see you around",
    "start": "1360799",
    "end": "1365039"
  }
]