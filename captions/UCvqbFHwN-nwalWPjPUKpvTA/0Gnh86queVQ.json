[
  {
    "text": "all right I think it's a time we shall start so hello everyone uh Welcome to our",
    "start": "0",
    "end": "7319"
  },
  {
    "text": "session I know it's quite late and like ahead of us party but thank you for",
    "start": "7319",
    "end": "13080"
  },
  {
    "text": "visiting um let me introduce myself uh I'm Alexander kanyevsky I work for Intel",
    "start": "13080",
    "end": "20480"
  },
  {
    "text": "less formally people call me Sasha uh why I'm here why I'm talking about this",
    "start": "20480",
    "end": "27539"
  },
  {
    "text": "subject is because in my work for Intel for many years I was involved with",
    "start": "27539",
    "end": "33180"
  },
  {
    "text": "enabling different kind of accelerator devices and with all of that activity I",
    "start": "33180",
    "end": "38700"
  },
  {
    "text": "am also co-chair of container orchestrated devices working group under tag runtime in cncf",
    "start": "38700",
    "end": "45899"
  },
  {
    "text": "we supposed to have one more speaker Patrick uh unfortunately in last moment",
    "start": "45899",
    "end": "51000"
  },
  {
    "text": "he was not able to travel so reminder to everyone keep safe keep healthy",
    "start": "51000",
    "end": "57059"
  },
  {
    "text": "um that I hope I will cover her work for his part of work by by myself",
    "start": "57059",
    "end": "65400"
  },
  {
    "text": "and let me coin to introduce my co-speaker Kate Hi everyone my name is Kate goldenring I'm a software engineer",
    "start": "65400",
    "end": "71939"
  },
  {
    "text": "at fermion and I come from more of an iot background I'm co-chair of the cncf iot edge working group and I was the",
    "start": "71939",
    "end": "79020"
  },
  {
    "text": "maintainer or is the maintainer of a project called awkary which kind of answers this question of how do we bring",
    "start": "79020",
    "end": "84180"
  },
  {
    "text": "small iot devices into our kubernetes clusters which we'll talk a little bit about today",
    "start": "84180",
    "end": "90180"
  },
  {
    "text": "so I want to start by talking about the evolution of kubernetes so kubernetes started as a tool to orchestrate",
    "start": "90180",
    "end": "97380"
  },
  {
    "text": "workloads across servers in the cloud and this environment as you can see is fairly homogeneous all these servers",
    "start": "97380",
    "end": "103140"
  },
  {
    "text": "have similar static system hardware and you can kind of compare that to a",
    "start": "103140",
    "end": "108240"
  },
  {
    "text": "neighborhood where all the homes have the same set of features they all have bathrooms bedrooms kitchens and your",
    "start": "108240",
    "end": "115200"
  },
  {
    "text": "choice of where to live is boiled down to a decision of how many of each of",
    "start": "115200",
    "end": "120240"
  },
  {
    "text": "these three features do I need to make that choice to live there and this is comparable to kubernetes",
    "start": "120240",
    "end": "126600"
  },
  {
    "text": "where you have your workload or your pod is trying to choose which node it is best suited to live on and in kubernetes",
    "start": "126600",
    "end": "133620"
  },
  {
    "text": "out of the box those features of those resources are compute resources namely CPU memory and huge pages",
    "start": "133620",
    "end": "141060"
  },
  {
    "text": "and behind the scenes what happens is once you request that amount of resources in your pod specs so in this",
    "start": "141060",
    "end": "146400"
  },
  {
    "text": "example this streaming app needs 100 megabytes of memory and 10 CPU units the",
    "start": "146400",
    "end": "152280"
  },
  {
    "text": "cubelet on that node will say okay that's reserved for you and we'll ensure that you do not exceed a limit also",
    "start": "152280",
    "end": "158459"
  },
  {
    "text": "specified make sure that you don't use more than a certain amount of resources",
    "start": "158459",
    "end": "163579"
  },
  {
    "text": "however the use cases for kubernetes continues to expand and we're finding",
    "start": "164340",
    "end": "169800"
  },
  {
    "text": "that our not only are people wanting to because people are wanting to do more with kubernetes we're finding that",
    "start": "169800",
    "end": "175800"
  },
  {
    "text": "Hardware needs to become a little bit more specialized so now you have more of a choice here uh it's not just how many",
    "start": "175800",
    "end": "181800"
  },
  {
    "text": "kitchens bathrooms and living rooms do I need but it's also do I want Hardware flooring or carpeting and kubernetes had",
    "start": "181800",
    "end": "189900"
  },
  {
    "text": "to evolve to meet this expectation of wanting to have that same declarative experience around what a workload needs",
    "start": "189900",
    "end": "196280"
  },
  {
    "text": "for a more of varied hardware and that's where the kubernetes device plugin",
    "start": "196280",
    "end": "201540"
  },
  {
    "text": "framework came in and that came about in kubernetes 1.10 and around 2017 and what",
    "start": "201540",
    "end": "209519"
  },
  {
    "text": "this does is it enables you to create extended resources so new node level",
    "start": "209519",
    "end": "214739"
  },
  {
    "text": "resources in your cluster and the way that works is you create a device plugin",
    "start": "214739",
    "end": "220019"
  },
  {
    "text": "so in this example here we have that same streaming application but it wants",
    "start": "220019",
    "end": "225480"
  },
  {
    "text": "to do some inferencing on the streams that it has so it needs a GPU and it wants to make sure we want to make sure",
    "start": "225480",
    "end": "230580"
  },
  {
    "text": "that it's scheduled to the node that has that GPU so in your pod spec which is where we're saying this user experience",
    "start": "230580",
    "end": "236760"
  },
  {
    "text": "for kubernetes and devices is you want to be able to request a GPU there so on",
    "start": "236760",
    "end": "242700"
  },
  {
    "text": "your cluster you create a device plugin on the Node that has a GPU and what this is doing is saying hey cubelet I have a",
    "start": "242700",
    "end": "249599"
  },
  {
    "text": "GPU here tell API server that and then now you can request it in your pod spec and that ensures that your streaming",
    "start": "249599",
    "end": "255840"
  },
  {
    "text": "application is deployed to node a not node B and behind the scenes what also happens",
    "start": "255840",
    "end": "261900"
  },
  {
    "text": "here is the device plugin ensures that there is a extra any additional information needed for that application",
    "start": "261900",
    "end": "267720"
  },
  {
    "text": "in order to use that GPU but the question becomes is is there",
    "start": "267720",
    "end": "273840"
  },
  {
    "text": "more we can do with the device plug-in and is there more that we need to do in general for devices and kubernetes",
    "start": "273840",
    "end": "279479"
  },
  {
    "text": "so as cane describe it we have a nowadays where user experience in uh",
    "start": "279479",
    "end": "286259"
  },
  {
    "text": "Port spec to specify I want a GPU but for more modern world changes with how",
    "start": "286259",
    "end": "292860"
  },
  {
    "text": "the hardware is looks like how it's going to be utilized and I would like to",
    "start": "292860",
    "end": "297900"
  },
  {
    "text": "use two examples from our fellow Travelers and Community from Google and Nvidia so something what was presented",
    "start": "297900",
    "end": "305040"
  },
  {
    "text": "in kubecon Valencia Earl levels here very simple example you have cloud",
    "start": "305040",
    "end": "310979"
  },
  {
    "text": "provider you have the multi-instance Nvidia GPU cards which can be splitted",
    "start": "310979",
    "end": "317820"
  },
  {
    "text": "in multiple compute units different sizes of memory internal to that",
    "start": "317820",
    "end": "323880"
  },
  {
    "text": "accelerator and user wants to request specific",
    "start": "323880",
    "end": "329639"
  },
  {
    "text": "amount of GPU or compute units or a specific amount of memory",
    "start": "329639",
    "end": "334860"
  },
  {
    "text": "this current device plugins it's not really possible so people coming up with",
    "start": "334860",
    "end": "341160"
  },
  {
    "text": "different kind of workarounds one example here is what like a cluster administrator statically Provisions with",
    "start": "341160",
    "end": "348360"
  },
  {
    "text": "node when labels were node with particular type of a device and when user needs to",
    "start": "348360",
    "end": "355440"
  },
  {
    "text": "know the cloud specific label to use in the node selector saying I want GPU but",
    "start": "355440",
    "end": "362699"
  },
  {
    "text": "I also want to have it this kind doable maybe not so user friendly",
    "start": "362699",
    "end": "369600"
  },
  {
    "text": "similar second example is you have a device it's expensive",
    "start": "369600",
    "end": "375300"
  },
  {
    "text": "but like if you do a long-running job it justify the cost but if you have like",
    "start": "375300",
    "end": "381900"
  },
  {
    "text": "multiple data science scientists who are just doing something in notebooks and from time to time running like short",
    "start": "381900",
    "end": "388680"
  },
  {
    "text": "period uh tasks which require computation power it becomes really expensive so people who are thinking of",
    "start": "388680",
    "end": "395520"
  },
  {
    "text": "how we can share one physical device between multiple containers multiple ports again people come up with",
    "start": "395520",
    "end": "402419"
  },
  {
    "text": "different workarounds so instead of presenting the physical GPU the device",
    "start": "402419",
    "end": "407819"
  },
  {
    "text": "plugin says oh now I have like 10 virtual gpus and again you have a labels",
    "start": "407819",
    "end": "412979"
  },
  {
    "text": "you have a label which says this is time sharer device this is how many slices in",
    "start": "412979",
    "end": "418680"
  },
  {
    "text": "the device which can be used again doomable maybe not so good",
    "start": "418680",
    "end": "426360"
  },
  {
    "text": "next thing like all of us know what we have uh like service measures and",
    "start": "426360",
    "end": "433440"
  },
  {
    "text": "service mesh does in the background crypto and it can do crypto on the CPU",
    "start": "433440",
    "end": "441300"
  },
  {
    "text": "how its majority are you running but it also can use some accelerator and imagine what",
    "start": "441300",
    "end": "447599"
  },
  {
    "text": "if you want to use uh in a way what give me accelerator I can use it if you don't",
    "start": "447599",
    "end": "454020"
  },
  {
    "text": "have okay fine I'm full back to a CPU with current device plugin apis like if",
    "start": "454020",
    "end": "460440"
  },
  {
    "text": "you try to say like my request is zero for crypto accelerator but limit is one",
    "start": "460440",
    "end": "467460"
  },
  {
    "text": "it's not going to happen well admission controller will fail",
    "start": "467460",
    "end": "473400"
  },
  {
    "text": "next use case is for more complex devices where example of fpga",
    "start": "473400",
    "end": "481259"
  },
  {
    "text": "field programming gate array so it's something what you can say I",
    "start": "481259",
    "end": "486660"
  },
  {
    "text": "want this particular type accelerator but when please load the function like this hour I want to use compression",
    "start": "486660",
    "end": "493440"
  },
  {
    "text": "next hour I want to use like some crypto acceleration something else involuto so",
    "start": "493440",
    "end": "498720"
  },
  {
    "text": "user needs to say two two things what kind of card plus what what",
    "start": "498720",
    "end": "505020"
  },
  {
    "text": "function we come up with again with our workarounds so we created this here this",
    "start": "505020",
    "end": "510900"
  },
  {
    "text": "which describes these are devices bases the function name we can map them",
    "start": "510900",
    "end": "516659"
  },
  {
    "text": "together we can have admission web hook which mutates your portsberg from user",
    "start": "516659",
    "end": "522719"
  },
  {
    "text": "visible string of resource request to something like cryptic as you can see like it works but again",
    "start": "522719",
    "end": "530580"
  },
  {
    "text": "it's for end user not the best experience if he needs to debug",
    "start": "530580",
    "end": "535800"
  },
  {
    "text": "something so we need something better and that's like local devices and Kate you",
    "start": "535800",
    "end": "543720"
  },
  {
    "text": "know something about the iot devices and age devices yeah so as Alexander mentioned there's",
    "start": "543720",
    "end": "549779"
  },
  {
    "text": "ways that people are using param trying to get parameters optionality and",
    "start": "549779",
    "end": "554940"
  },
  {
    "text": "sharing with local devices with the device plugin interface and some workarounds for that another space that people are trying to",
    "start": "554940",
    "end": "562440"
  },
  {
    "text": "expand the idea of devices in kubernetes is iot devices so if we go back to our neighborhood thinking about those",
    "start": "562440",
    "end": "569519"
  },
  {
    "text": "resources like the Satellite Dish attached to your home or the pool that's external to your home that you know you",
    "start": "569519",
    "end": "574560"
  },
  {
    "text": "have access to how can we figure out that we have access to those resources and so in kubernetes an ideal user",
    "start": "574560",
    "end": "582060"
  },
  {
    "text": "experience or pod spec for this would be I want to access that thermometer or",
    "start": "582060",
    "end": "587220"
  },
  {
    "text": "that robot arm or that IP camera and I want to be able to request that as a resource just as I would request any",
    "start": "587220",
    "end": "593519"
  },
  {
    "text": "other resource in kubernetes and at Microsoft we were looking at this problem and we were trying to build a",
    "start": "593519",
    "end": "599700"
  },
  {
    "text": "demo that was using IP cameras and do some inferencing with IP cameras from a",
    "start": "599700",
    "end": "604920"
  },
  {
    "text": "kubernetes cluster so we wanted to be able to dynamically say I want this IP camera we found we can't put a cubelet",
    "start": "604920",
    "end": "610500"
  },
  {
    "text": "on the camera so out how else could we bring that camera into the cluster and in general when you're trying to",
    "start": "610500",
    "end": "617640"
  },
  {
    "text": "expand the functionality of kubernetes you have two options uh you can either build a kubernetes operator which is",
    "start": "617640",
    "end": "624000"
  },
  {
    "text": "something that's deployed separately of kubernetes and it's basically a custom resource definition the word resource is",
    "start": "624000",
    "end": "630000"
  },
  {
    "text": "very overloaded in kubernetes but a declaration of State essentially and a controller something that's reconciling",
    "start": "630000",
    "end": "636480"
  },
  {
    "text": "that state that you want the other option is to amplify kubernetes itself",
    "start": "636480",
    "end": "642120"
  },
  {
    "text": "and there's a process for that it's a kubernetes enhancement proposal and you work with the community to do that and",
    "start": "642120",
    "end": "647220"
  },
  {
    "text": "it requires a clear understanding that this is something that everyone needs and it's a very important issue to bring",
    "start": "647220",
    "end": "652440"
  },
  {
    "text": "to kubernetes so we went with the operator model we wanted to get get this",
    "start": "652440",
    "end": "657660"
  },
  {
    "text": "out there and make it something that you can add to kubernetes in the case that you're doing kubernetes on the edge and",
    "start": "657660",
    "end": "663300"
  },
  {
    "text": "want to access maybe the iot devices of local devices and environment and that came to be a project awkward which is a",
    "start": "663300",
    "end": "670320"
  },
  {
    "text": "cncf Sandbox project and it stands for kubernetes resource interface because what it does is it it really aims to",
    "start": "670320",
    "end": "676740"
  },
  {
    "text": "abstract away the details of device Discovery and use in kubernetes and device once again overloaded term but in",
    "start": "676740",
    "end": "683100"
  },
  {
    "text": "this sense those iot really small constrained devices and so what it does is it'll discover",
    "start": "683100",
    "end": "688320"
  },
  {
    "text": "the devices whether across the network or locally on a node or attached and it will create device plugins on your",
    "start": "688320",
    "end": "694620"
  },
  {
    "text": "behalf so instead of you having to create a device plugin for each type of device you have it will create them on",
    "start": "694620",
    "end": "699959"
  },
  {
    "text": "Discovery so you immediately have these new node level resources and then it also can optionally deploy",
    "start": "699959",
    "end": "706620"
  },
  {
    "text": "workloads for you immediately afterwards and if we look at once again the yaml",
    "start": "706620",
    "end": "713100"
  },
  {
    "text": "user experience of this we have a second piece of yaml here we have our custom resource definition and in ocri that's",
    "start": "713100",
    "end": "719940"
  },
  {
    "text": "an awkward configuration a very simple way to say that helps you configure uh what you want to find and in that",
    "start": "719940",
    "end": "726959"
  },
  {
    "text": "configuration you say what you want to find by specifying what protocol you want to use to find that device so out",
    "start": "726959",
    "end": "733980"
  },
  {
    "text": "of the box aquary supports three on Viv for IP cameras udub for local devices in the Linux",
    "start": "733980",
    "end": "740040"
  },
  {
    "text": "device file system so that could be a USB device for example or opca for",
    "start": "740040",
    "end": "745079"
  },
  {
    "text": "industrial machinery and then in that configuration you can also specify some filters to narrow down the number of",
    "start": "745079",
    "end": "750839"
  },
  {
    "text": "devices that you find or to tail into the ones that you want to so for our IP camera scenario that could be Mac",
    "start": "750839",
    "end": "756600"
  },
  {
    "text": "addresses IP addresses or scopes for specific camera names for example",
    "start": "756600",
    "end": "762240"
  },
  {
    "text": "so once you've applied this to your cluster auquery will find it tell the cubelet about it and all of a sudden you have these other resources that you then",
    "start": "762240",
    "end": "768899"
  },
  {
    "text": "can add to your pod spec so now you can see here we now have an IP camera we're requesting in our pod spec",
    "start": "768899",
    "end": "775500"
  },
  {
    "text": "and if we look at the flow of this similarly the first thing you do is you apply awkward to your cluster so this is",
    "start": "775500",
    "end": "781920"
  },
  {
    "text": "an operator so you have kubernetes first and then you add your Helm chart which is awkward",
    "start": "781920",
    "end": "787260"
  },
  {
    "text": "and once you've applied that to your cluster you then tell awkary what you want to find so we're back at that configuration creation stage and here",
    "start": "787260",
    "end": "794279"
  },
  {
    "text": "we're saying on Biff because we see that IP camera and we want to find it and then akri finds it and it represents",
    "start": "794279",
    "end": "800820"
  },
  {
    "text": "that device as a kubernetes resource so it tells cubelet about it which tells the API server about it and then it also",
    "start": "800820",
    "end": "807000"
  },
  {
    "text": "creates our second custom resource which is an awkward instance and that instance helps akri understand the device and",
    "start": "807000",
    "end": "813360"
  },
  {
    "text": "regulate the use of the device across nodes because this is a shared device it's not physically attached to OneNote",
    "start": "813360",
    "end": "818579"
  },
  {
    "text": "it's shared by multiple nodes and then once again you can go in and",
    "start": "818579",
    "end": "824700"
  },
  {
    "text": "create your pod spec apply it to your cluster and now you have your streaming application that's using that camera and",
    "start": "824700",
    "end": "831360"
  },
  {
    "text": "one thing to note about the device plugin interface I hinted at this earlier but when you allocate a pod to a",
    "start": "831360",
    "end": "838200"
  },
  {
    "text": "node what happens is the cubelet basically calls into the device plug-in so it's calling into awkward and saying",
    "start": "838200",
    "end": "843420"
  },
  {
    "text": "Hey I want to run this this pod here and it's using this device that you're controlling and then you and then it",
    "start": "843420",
    "end": "849660"
  },
  {
    "text": "also asks is there anything else I should give it and so here we say yes here's some connectivity information",
    "start": "849660",
    "end": "854820"
  },
  {
    "text": "this is how you connect to the device and we pass that as environment variables so now the streaming application when it starts up it can",
    "start": "854820",
    "end": "860880"
  },
  {
    "text": "just read those environment variables and in this in this case it knows the rtsp URL for that IP camera so it",
    "start": "860880",
    "end": "866339"
  },
  {
    "text": "immediately knows which one to connect to and can start doing the work that I was intending to do",
    "start": "866339",
    "end": "871440"
  },
  {
    "text": "and if you don't want to create that pod spec yourself to with point to the exact camera you can also have aquery",
    "start": "871440",
    "end": "877800"
  },
  {
    "text": "optionally deploy the workload on your behalf and that's just in the extra section of the configuration called the",
    "start": "877800",
    "end": "883440"
  },
  {
    "text": "broker spec so here we're just saying every time you discover the device every node that can see it it gets this",
    "start": "883440",
    "end": "889139"
  },
  {
    "text": "workload and if we look at the instance more in detail so this is the representation of",
    "start": "889139",
    "end": "895680"
  },
  {
    "text": "the device for awkary you can see how it handles that resource sharing so when we created this configuration in this",
    "start": "895680",
    "end": "901199"
  },
  {
    "text": "example we said only three workloads are allowed to use this device at once so we set device usage to three so that means",
    "start": "901199",
    "end": "908100"
  },
  {
    "text": "if for you try to deploy four pods to use this device one of them will not run because that resource is not is only",
    "start": "908100",
    "end": "914880"
  },
  {
    "text": "available to three and so that helps with not overloading these shared these shared iot devices",
    "start": "914880",
    "end": "921899"
  },
  {
    "text": "and you can also see their under broker properties that's what's injected as environment variables to any workload",
    "start": "921899",
    "end": "927660"
  },
  {
    "text": "that requests it and so back to what could be better the user experience so awkward's pretty",
    "start": "927660",
    "end": "934260"
  },
  {
    "text": "imperative if you're choosing to create your own pod specs so you can see here on the right you have to specify exactly",
    "start": "934260",
    "end": "940440"
  },
  {
    "text": "what camera that aquery discovered and created the instance for you want to use ideally you could be a little bit more",
    "start": "940440",
    "end": "946199"
  },
  {
    "text": "descriptive in your pod spec say I want the robot arm that's moving fast or I want the precise robot arm and being",
    "start": "946199",
    "end": "952260"
  },
  {
    "text": "able to do that all in the Pod spec would be what's ideal with awkward we're getting closer to a more generic pod",
    "start": "952260",
    "end": "958260"
  },
  {
    "text": "spec experience we have some proposals out there for that and that would be through changing the way our controller",
    "start": "958260",
    "end": "963420"
  },
  {
    "text": "works and if you use that to deploy the applications on your behalf you're able to have more of a generic experience but",
    "start": "963420",
    "end": "969540"
  },
  {
    "text": "there's still a ways to go and one of the exciting things about the way that kubernetes is evolving is as Alexander",
    "start": "969540",
    "end": "976199"
  },
  {
    "text": "will explain there's now a kep to kind of change some of the ways that we're using these devices and we could even",
    "start": "976199",
    "end": "982320"
  },
  {
    "text": "see offery being put on top of that which is dynamic resource allocation",
    "start": "982320",
    "end": "988160"
  },
  {
    "text": "so you're so in current device usage",
    "start": "988260",
    "end": "993300"
  },
  {
    "text": "pattern inside kubernetes we have multiple problems how we want to use and",
    "start": "993300",
    "end": "998880"
  },
  {
    "text": "we have multiple walkarounds how to limit how to work around the limitation",
    "start": "998880",
    "end": "1004759"
  },
  {
    "text": "of current design so we try to step back and think what will be ideal or more",
    "start": "1004759",
    "end": "1013339"
  },
  {
    "text": "extensible way to specify the devices in kubernetes would be",
    "start": "1013339",
    "end": "1019220"
  },
  {
    "text": "and just for you to understand what kind of scenarios we are trying to address we",
    "start": "1019220",
    "end": "1025220"
  },
  {
    "text": "are trying to address first of all separation of claim of advice describing",
    "start": "1025220",
    "end": "1031938"
  },
  {
    "text": "I want this and here's my list of parameters and you have a name for it you have",
    "start": "1031939",
    "end": "1038240"
  },
  {
    "text": "unique ID for it and when you have multiple containers so multiple ports which can you reference and you can say",
    "start": "1038240",
    "end": "1044839"
  },
  {
    "text": "okay for this allocated device now I'm going to use it and this separation allows us to cover",
    "start": "1044839",
    "end": "1053360"
  },
  {
    "text": "pretty much everything what we can imagine right now so like two ports using two devices at the same host maybe",
    "start": "1053360",
    "end": "1060620"
  },
  {
    "text": "network devices two ports sharing one device two container within one portrait in one",
    "start": "1060620",
    "end": "1066500"
  },
  {
    "text": "device or like any other kind of things like multiple ports sharing multiple",
    "start": "1066500",
    "end": "1072320"
  },
  {
    "text": "devices splitted dynamically instead of like statically I showed in a previous",
    "start": "1072320",
    "end": "1077720"
  },
  {
    "text": "example devices might be interconnected those ports might be running on",
    "start": "1077720",
    "end": "1082940"
  },
  {
    "text": "different machines if there is a fabric between web devices like outside of kubernetes and so on so this is what",
    "start": "1082940",
    "end": "1092120"
  },
  {
    "text": "our working group is actually trying to do and the process for it is not fast so",
    "start": "1092120",
    "end": "1098299"
  },
  {
    "text": "all of those discussions started between Like Us in Intel and Nvidia uh like",
    "start": "1098299",
    "end": "1104720"
  },
  {
    "text": "almost four years ago when the key point in time was kubecon North America in San",
    "start": "1104720",
    "end": "1111620"
  },
  {
    "text": "Diego where we had a round table uh people from different projects like",
    "start": "1111620",
    "end": "1116900"
  },
  {
    "text": "Ronald from cryo myself Mike Brown from IBM from containerd Renault from Nvidia",
    "start": "1116900",
    "end": "1125900"
  },
  {
    "text": "we said together and and said okay let's think how devices will look like in the",
    "start": "1125900",
    "end": "1131900"
  },
  {
    "text": "future result was creation of container",
    "start": "1131900",
    "end": "1137000"
  },
  {
    "text": "orchestrated devices working group in 2020 it's part of the cncf tag runtime and",
    "start": "1137000",
    "end": "1145400"
  },
  {
    "text": "we're at two activities what we are working on like the first activity is",
    "start": "1145400",
    "end": "1150919"
  },
  {
    "text": "low level part where continue runtime like so-called CGI interface",
    "start": "1150919",
    "end": "1157280"
  },
  {
    "text": "with a sweet description on the container runtime level",
    "start": "1157280",
    "end": "1163000"
  },
  {
    "text": "what device actually means so you get ID like Nvidia gpu0 and when",
    "start": "1163000",
    "end": "1171980"
  },
  {
    "text": "you have a file just on schemat to describe what this Nvidia GPU is",
    "start": "1171980",
    "end": "1178880"
  },
  {
    "text": "actually this device node or this set of device node these volume mounts with libraries with set of hooks and so on so",
    "start": "1178880",
    "end": "1186740"
  },
  {
    "text": "all the implementation details what couplet should not know about",
    "start": "1186740",
    "end": "1192279"
  },
  {
    "text": "and while it works on the low level so you can use it in Port one you can use it in",
    "start": "1192380",
    "end": "1198679"
  },
  {
    "text": "current run times we need some how to expose it to end users like to report spec and the second part is dynamic",
    "start": "1198679",
    "end": "1206780"
  },
  {
    "text": "resource allocation it's recap what my colleague Patrick his primary driving",
    "start": "1206780",
    "end": "1212799"
  },
  {
    "text": "together with our community members like I already mentioned on previous slide",
    "start": "1212799",
    "end": "1218780"
  },
  {
    "text": "like Nvidia folks Kevin and I even on our",
    "start": "1218780",
    "end": "1224480"
  },
  {
    "text": "side they had Christian and many hours so we are trying to get this cap done in",
    "start": "1224480",
    "end": "1231679"
  },
  {
    "text": "a way what you will get more possibilities more flexibility how to use the devices",
    "start": "1231679",
    "end": "1238400"
  },
  {
    "text": "details on that cap so if you know the storage world you",
    "start": "1238400",
    "end": "1245419"
  },
  {
    "text": "probably know we the pattern we are trying to use you have a claim",
    "start": "1245419",
    "end": "1251780"
  },
  {
    "text": "you have a parameter this claim can be as a separate object this claim can be templated inside your",
    "start": "1251780",
    "end": "1259039"
  },
  {
    "text": "pod spec where actual allocation again it might",
    "start": "1259039",
    "end": "1264799"
  },
  {
    "text": "be immediate it might be like once ones who Port arrived so delete allocation",
    "start": "1264799",
    "end": "1270799"
  },
  {
    "text": "but the thing is all right",
    "start": "1270799",
    "end": "1275840"
  },
  {
    "text": "you get the clean you specify it and when you specify what my container is",
    "start": "1275840",
    "end": "1281240"
  },
  {
    "text": "going to use wet clean what is a small differences well maybe not so small differences how it's actually",
    "start": "1281240",
    "end": "1287840"
  },
  {
    "text": "implemented so we don't have a separation like in storage we have PVC and PV here it's one object it has all",
    "start": "1287840",
    "end": "1295820"
  },
  {
    "text": "the status information uh all we can all the communication between scheduler between",
    "start": "1295820",
    "end": "1303799"
  },
  {
    "text": "the driver which implements risk claim it all handles through-way API server",
    "start": "1303799",
    "end": "1310280"
  },
  {
    "text": "just updating patching with this object and wet simplified life and simplified",
    "start": "1310280",
    "end": "1317360"
  },
  {
    "text": "implementation of I think a lot um",
    "start": "1317360",
    "end": "1323600"
  },
  {
    "text": "another big difference is set of parameters so in PVS you have parameters embedded",
    "start": "1323600",
    "end": "1331280"
  },
  {
    "text": "so when you the core object inside the kubernetes API enforce a sound set of",
    "start": "1331280",
    "end": "1337400"
  },
  {
    "text": "fields which which is needs to be present like size and so on here we try",
    "start": "1337400",
    "end": "1342740"
  },
  {
    "text": "to do it more genetically so the parameters are stored in separate object",
    "start": "1342740",
    "end": "1348140"
  },
  {
    "text": "and you have a possibility to reference uh like core objects like config Maps",
    "start": "1348140",
    "end": "1353840"
  },
  {
    "text": "but you also can reference your series and your sear this Hema can actually",
    "start": "1353840",
    "end": "1360440"
  },
  {
    "text": "specify which parameter some undatery what kind of types those parameters needs to be and so on so again for your",
    "start": "1360440",
    "end": "1367460"
  },
  {
    "text": "driver we're trying to give you as much flexibility as possible how it looks in reality you know current",
    "start": "1367460",
    "end": "1374960"
  },
  {
    "text": "implementation so this is example of board spec which has embedded claim you see two",
    "start": "1374960",
    "end": "1382640"
  },
  {
    "text": "containers one of the containers is actually references I want to use a my resource",
    "start": "1382640",
    "end": "1391039"
  },
  {
    "text": "and down below you see the template of description of my my resource it says",
    "start": "1391039",
    "end": "1397340"
  },
  {
    "text": "resource class something it says parameters and has a pointer the",
    "start": "1397340",
    "end": "1403820"
  },
  {
    "text": "type of object config map it could be your service and the name where these parameters are located",
    "start": "1403820",
    "end": "1411620"
  },
  {
    "text": "those two objects is example here is what class is mapping where the name of",
    "start": "1411620",
    "end": "1420919"
  },
  {
    "text": "a resource class what you have in your cluster to actual driver implementation so for example like vendorfu can have a",
    "start": "1420919",
    "end": "1430280"
  },
  {
    "text": "like with driver for GPU and you can have like gold GPU silver bronze GPU and",
    "start": "1430280",
    "end": "1435440"
  },
  {
    "text": "so on handling by the same driver these parameters as I mentioned here we",
    "start": "1435440",
    "end": "1442100"
  },
  {
    "text": "are using a simple core object config map and you can specify the free text of",
    "start": "1442100",
    "end": "1447320"
  },
  {
    "text": "parameters which will be handled by the driver the second variant of usage is",
    "start": "1447320",
    "end": "1456080"
  },
  {
    "text": "again similar to the storage way you can create a standalone",
    "start": "1456080",
    "end": "1461480"
  },
  {
    "text": "separate claim object by yourself for example I can",
    "start": "1461480",
    "end": "1467860"
  },
  {
    "text": "allocate with GPU for my researcher team I wanted to be like shared into 10 units",
    "start": "1467860",
    "end": "1477760"
  },
  {
    "text": "again same thing like you have a class what a GPU from particular vendor uh you",
    "start": "1478640",
    "end": "1484760"
  },
  {
    "text": "have parameters saying like 10 slides 10 slots on it and so on so this allocation",
    "start": "1484760",
    "end": "1491000"
  },
  {
    "text": "is happening and for example like the cloud service providers start billing of it",
    "start": "1491000",
    "end": "1496520"
  },
  {
    "text": "but when actual usage of wet resource will be in multiple pod where you just say again",
    "start": "1496520",
    "end": "1503840"
  },
  {
    "text": "you have a portsberg you specify what Westport is going to use",
    "start": "1503840",
    "end": "1509260"
  },
  {
    "text": "particular already allocated resource and here's which container is going to use a set of containers is going to use",
    "start": "1509260",
    "end": "1516860"
  },
  {
    "text": "it in inside with pod spec",
    "start": "1516860",
    "end": "1521080"
  },
  {
    "text": "so this is how it looks how we are working with it",
    "start": "1522080",
    "end": "1527419"
  },
  {
    "text": "so the cap was initially merged into 125 and when it was slightly updated to to",
    "start": "1527419",
    "end": "1533840"
  },
  {
    "text": "fix some of the API shortcomings in 126. my pull request right now is open for",
    "start": "1533840",
    "end": "1540980"
  },
  {
    "text": "review hopefully it will be merged soon but who knows um the pull request is quite big because",
    "start": "1540980",
    "end": "1548720"
  },
  {
    "text": "we need to touch many of the components in the system like API obviously",
    "start": "1548720",
    "end": "1554620"
  },
  {
    "text": "the controller manager uh because like it handles a lifetime of embedded claims",
    "start": "1554620",
    "end": "1562159"
  },
  {
    "text": "objects we need to touch scheduler to teach him how to how to use this like",
    "start": "1562159",
    "end": "1570320"
  },
  {
    "text": "API server as a backend to to talk to the drivers obviously we need to touch",
    "start": "1570320",
    "end": "1575419"
  },
  {
    "text": "the cool bread actually to to ask prepare the resource and then pass it",
    "start": "1575419",
    "end": "1580820"
  },
  {
    "text": "down to a runtime but all of this doable you can look how it's done in the cap in",
    "start": "1580820",
    "end": "1588380"
  },
  {
    "text": "the pull request it's not that complex or not wet",
    "start": "1588380",
    "end": "1594300"
  },
  {
    "text": "[Music] scary as it might sound so how it affects the vendors",
    "start": "1594300",
    "end": "1601820"
  },
  {
    "text": "vendor obviously don't not going to use we need to re-implement",
    "start": "1601820",
    "end": "1608059"
  },
  {
    "text": "support for the device it's not a device called Unit users who is completely separate API",
    "start": "1608059",
    "end": "1615320"
  },
  {
    "text": "um you implement something similar what Kate described in in a career so you",
    "start": "1615320",
    "end": "1622940"
  },
  {
    "text": "need to implement your controller which knows the logic for your device your location logic your Discovery your",
    "start": "1622940",
    "end": "1629900"
  },
  {
    "text": "resource tracking a node component is simple piece of code",
    "start": "1629900",
    "end": "1636320"
  },
  {
    "text": "documentation how to use it as well but again it's not that scary as it sounds",
    "start": "1636320",
    "end": "1642760"
  },
  {
    "text": "from our side what what we are doing is we are providing the helper libraries",
    "start": "1642760",
    "end": "1648260"
  },
  {
    "text": "which is part of the pull request what I mentioned we provide with test driver",
    "start": "1648260",
    "end": "1654980"
  },
  {
    "text": "uh which is going to be used in entry test we have another example of more",
    "start": "1654980",
    "end": "1661940"
  },
  {
    "text": "complex driver from our fellow travelers from Nvidia have a look",
    "start": "1661940",
    "end": "1667640"
  },
  {
    "text": "it's really powerful mechanism it really allows vendors to expose all",
    "start": "1667640",
    "end": "1674360"
  },
  {
    "text": "the features of Hardware without spending too much time or complicating",
    "start": "1674360",
    "end": "1681320"
  },
  {
    "text": "too much code of core kubernetes",
    "start": "1681320",
    "end": "1686440"
  },
  {
    "text": "so with I would like to say uh please if you are interested in",
    "start": "1686600",
    "end": "1694100"
  },
  {
    "text": "particular like enabling with devices or just using the devices",
    "start": "1694100",
    "end": "1700460"
  },
  {
    "text": "please join our communities like we have nice ugly Community for iot devices we",
    "start": "1700460",
    "end": "1706520"
  },
  {
    "text": "have generic tag run time our container Orchestra working group",
    "start": "1706520",
    "end": "1711679"
  },
  {
    "text": "please reach to us myself Kate Patrick we will be happy to talk about like your",
    "start": "1711679",
    "end": "1717500"
  },
  {
    "text": "use cases you Pro your problems and see if we can help to do the things",
    "start": "1717500",
    "end": "1724100"
  },
  {
    "text": "with that we have few minutes double questions and we have",
    "start": "1724100",
    "end": "1730658"
  },
  {
    "text": "QR code which you can scan later and provide with feedback",
    "start": "1731000",
    "end": "1736480"
  },
  {
    "text": "[Applause]",
    "start": "1738990",
    "end": "1743539"
  },
  {
    "text": "yeah happy to answer any questions anyone has about any of it",
    "start": "1744260",
    "end": "1749860"
  },
  {
    "text": "hi can you continue to use the device plugin framework in addition to using",
    "start": "1764659",
    "end": "1770000"
  },
  {
    "text": "the dynamic resource allocation can they abuse together and you know how",
    "start": "1770000",
    "end": "1775460"
  },
  {
    "text": "would that look yes absolutely uh so it's not something what will immediately replace with",
    "start": "1775460",
    "end": "1782240"
  },
  {
    "text": "Device plugins device plugins still stays so it's just a new",
    "start": "1782240",
    "end": "1788659"
  },
  {
    "text": "API which allows you to a bit different usage of devices so if you have some",
    "start": "1788659",
    "end": "1794360"
  },
  {
    "text": "device which you are happy with very simple like beam counting of uh like I have one device so",
    "start": "1794360",
    "end": "1802100"
  },
  {
    "text": "now otherwise another device and I don't care like more detailed property of them",
    "start": "1802100",
    "end": "1808880"
  },
  {
    "text": "device plugin is perfect for it use it yeah it's another interface that's being",
    "start": "1808880",
    "end": "1815720"
  },
  {
    "text": "added to the cubelet manager so device plugin will continue to exist and dra",
    "start": "1815720",
    "end": "1821659"
  },
  {
    "text": "adds a different way of using kind of like Alexander was saying kind of the way storage volumes are handled but",
    "start": "1821659",
    "end": "1827360"
  },
  {
    "text": "doing that for resources as or devices as claims as well",
    "start": "1827360",
    "end": "1833020"
  },
  {
    "text": "the question is like it's it's more where as a device vendor you you would",
    "start": "1833299",
    "end": "1839840"
  },
  {
    "text": "like to go what we know from the feedback from",
    "start": "1839840",
    "end": "1845140"
  },
  {
    "text": "Nvidia colleagues this is the way where we want to go because we already",
    "start": "1845140",
    "end": "1850640"
  },
  {
    "text": "collected a certain technical depth over the years we collected certain user stories which",
    "start": "1850640",
    "end": "1858320"
  },
  {
    "text": "we cannot solve with existing scenarios or it's more expensive for them to to solve with existing device plugins they",
    "start": "1858320",
    "end": "1866120"
  },
  {
    "text": "would migrate to that as soon as it will become available",
    "start": "1866120",
    "end": "1870580"
  },
  {
    "text": "awesome well if I know a question I may ask my my question to audience",
    "start": "1875899",
    "end": "1882260"
  },
  {
    "text": "how many of you are using actually any kind of accelerators",
    "start": "1882260",
    "end": "1887620"
  },
  {
    "text": "okay non-gpu accelerators",
    "start": "1889159",
    "end": "1895120"
  },
  {
    "text": "okay all right interesting the statistics",
    "start": "1895460",
    "end": "1902179"
  },
  {
    "text": "right and you have a question we'll be around so if you have any",
    "start": "1902179",
    "end": "1908059"
  },
  {
    "text": "questions you want to ask separately we'll be down here thank you everyone thank you",
    "start": "1908059",
    "end": "1914019"
  }
]