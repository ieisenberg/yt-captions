[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "so here we are the service mesh past present and future I don't even remember submitting this talk like the tox",
    "start": "30",
    "end": "5430"
  },
  {
    "text": "emissions for coop Connor so far in the past that you know everything has changed in my life but I also have to",
    "start": "5430",
    "end": "13320"
  },
  {
    "text": "kind of apologize that I have like jammed three presentations together and they all have totally different styles",
    "start": "13320",
    "end": "20369"
  },
  {
    "text": "and like there's all sorts of weird animation so this is just gonna be a disaster visually vaguely a disaster the audio",
    "start": "20369",
    "end": "27180"
  },
  {
    "text": "track is gonna be incredible okay so let me give you thirty a 30-second kind of",
    "start": "27180",
    "end": "33690"
  },
  {
    "text": "overview of who this person is who's up here so my name is William Morgan that's",
    "start": "33690",
    "end": "39719"
  },
  {
    "text": "not on the slides of course I used to work at a company called Twitter where I learned a lot of things those things",
    "start": "39719",
    "end": "45510"
  },
  {
    "text": "turned into a lot of what we're building at buoyant and we had these two service missions we have two now when it's",
    "start": "45510",
    "end": "50579"
  },
  {
    "text": "called linker D and one's called conduit I'm going to talk about kind of the his some of the history and like the",
    "start": "50579",
    "end": "55710"
  },
  {
    "text": "rationale and like the you know my personal service mesh journey I guess how I got here and in particular a lot",
    "start": "55710",
    "end": "62190"
  },
  {
    "text": "of it came out of this experience that that that I had and that we all had at Twitter where we moved from you know",
    "start": "62190",
    "end": "67799"
  },
  {
    "text": "it's circa 2010 when I started there from this monolithic Ruby on Rails application into you know fast-forward",
    "start": "67799",
    "end": "73860"
  },
  {
    "text": "five or six years into this big mass of micro service you know kind of cloud native I guess you could call it cloud native environment we didn't have docker",
    "start": "73860",
    "end": "80130"
  },
  {
    "text": "back then we didn't have kubernetes we had mazes from Bezos was a grad student project so we had to like make that",
    "start": "80130",
    "end": "86189"
  },
  {
    "text": "thing production ready instead of docker we used like C groups and we were on the JVM so we had kind of you know resource",
    "start": "86189",
    "end": "91409"
  },
  {
    "text": "isolation and in the packaging mechanism and then we had this other kind of part",
    "start": "91409",
    "end": "97170"
  },
  {
    "text": "of the stack called finagle which was this library and the library was used for managing all service to service",
    "start": "97170",
    "end": "102680"
  },
  {
    "text": "communication so the way that you would build a service at Twitter if you wanted to add any microt service to the Twitter stack you'd build it using finagle and",
    "start": "102680",
    "end": "109500"
  },
  {
    "text": "finagle was this cool functional program anything right we were all scallop programmers so we were gonna do like functional programming on top of RPC",
    "start": "109500",
    "end": "116159"
  },
  {
    "text": "calls we use thrift for whatever reasons and Scala and so like we needed a cool way of doing functional programming on",
    "start": "116159",
    "end": "121890"
  },
  {
    "text": "top of these first calls we were making and that turned into finagle and finagle has kind of this long history at Twitter",
    "start": "121890",
    "end": "128539"
  },
  {
    "text": "where it became this you know over time it became this kind of very rich",
    "start": "128539",
    "end": "134069"
  },
  {
    "text": "form with all these features and you as a service owner you know you you were treating finagles like this nice library",
    "start": "134069",
    "end": "140519"
  },
  {
    "text": "that you could say hey I'm service a and I want to talk to service B and finagle don't make that call and give me back the result and under the hood finagle",
    "start": "140519",
    "end": "146159"
  },
  {
    "text": "was doing all these things it was like load balancing and and routing requests and it was like even the load balancing",
    "start": "146159",
    "end": "152489"
  },
  {
    "text": "was like based on application instance Layton sees and like try and you know send traffic to the fastest thing and it",
    "start": "152489",
    "end": "158430"
  },
  {
    "text": "would do circuit braking and you know and it was a it had a consistent layer of telemetry and all sorts of cool stuff",
    "start": "158430",
    "end": "163560"
  },
  {
    "text": "so that's kind of like the history of why why you know why I'm even here why",
    "start": "163560",
    "end": "170909"
  },
  {
    "start": "170000",
    "end": "226000"
  },
  {
    "text": "I'm talking about any of that stuff so I'm gonna take like a philosophical second for a couple slides and let's",
    "start": "170909",
    "end": "177030"
  },
  {
    "text": "just talk about this idea of resilience right it's good this is this is kind of what we're trying to trying to build in these software systems right we're",
    "start": "177030",
    "end": "183090"
  },
  {
    "text": "moving on to the cloud the cloud scary clouds weird we don't know no hardware it's like all different now right and so",
    "start": "183090",
    "end": "189060"
  },
  {
    "text": "we have to but we still have to build these reliable systems it's not okay to have scheduled maintenance anymore",
    "start": "189060",
    "end": "194159"
  },
  {
    "text": "all right you used to used to be able to do that but you can't do that anymore and you have to take into account the",
    "start": "194159",
    "end": "199919"
  },
  {
    "text": "fact that you know when you're running in a cloud environment 50% of your is broken at any point in time so you",
    "start": "199919",
    "end": "206669"
  },
  {
    "text": "want to build software that can still you know still work under these conditions so there's a material science",
    "start": "206669",
    "end": "212159"
  },
  {
    "text": "definition resilience you know basically like you got to send it's got a handle stuff without getting totally busted",
    "start": "212159",
    "end": "218400"
  },
  {
    "text": "it's a short story some people like to talk about antifragility but you know it's I think that's just a nicer kind of",
    "start": "218400",
    "end": "225000"
  },
  {
    "text": "marketing term and so you know the basic got hit in software is okay we've got",
    "start": "225000",
    "end": "230400"
  },
  {
    "start": "226000",
    "end": "275000"
  },
  {
    "text": "these forms of stress we're building the system right and like we've got unpredictable load from the outside world right people are sending requests",
    "start": "230400",
    "end": "236340"
  },
  {
    "text": "to us presumably you know we're getting traffic from the outside world we've got flaky hardware you got buggy software I",
    "start": "236340",
    "end": "241439"
  },
  {
    "text": "think you could add you know a couple more things in the in the cloud environment like I'm running on this AWS instance and suddenly some other Adel us",
    "start": "241439",
    "end": "248250"
  },
  {
    "text": "tenant like gets all the resources who knows why and I get none and like that's just unpredictable and then you know in",
    "start": "248250",
    "end": "255299"
  },
  {
    "text": "in response to all these sources of stress from the inside from from inside the application from out the outside",
    "start": "255299",
    "end": "261599"
  },
  {
    "text": "world we want to be resilient how do we do that in software well you know we can show it we want to be able to shed load and",
    "start": "261599",
    "end": "267060"
  },
  {
    "text": "doesn't penalize the entire system we want to be able to handle failures gracefully and and you know we want to be able to provision and then kind of",
    "start": "267060",
    "end": "273150"
  },
  {
    "text": "scale and and and all that good stuff okay and if you look at the history of software engineering you know back in",
    "start": "273150",
    "end": "278310"
  },
  {
    "start": "275000",
    "end": "307000"
  },
  {
    "text": "the early days of software so you know internet software I guess you know the",
    "start": "278310",
    "end": "284490"
  },
  {
    "text": "way that you would build resilient systems or reliable systems is you buy the big iron and you buy to f5 things",
    "start": "284490",
    "end": "291030"
  },
  {
    "text": "and you know and you don't have everything and this was all running you",
    "start": "291030",
    "end": "296040"
  },
  {
    "text": "know in your data center like in the closet in the back of the office or whatever and this kind of worked right it was kind of okay it had had a series",
    "start": "296040",
    "end": "302669"
  },
  {
    "text": "of problems right but it was a it was a way of building reliable software so now",
    "start": "302669",
    "end": "308190"
  },
  {
    "start": "307000",
    "end": "350000"
  },
  {
    "text": "we advanced you know 17 years to a world where that's not really it's not really",
    "start": "308190",
    "end": "314100"
  },
  {
    "text": "feasible to do that for four reasons 1 through 100 we're now moving into you know the cloud right and so how do we",
    "start": "314100",
    "end": "321270"
  },
  {
    "text": "accomplish a similar thing well we don't have anything guarantees that we had in from from hardware right we don't have",
    "start": "321270",
    "end": "327660"
  },
  {
    "text": "the you know we don't have the guarantees where this is my machine I'm gonna get a hundred percent of its usage",
    "start": "327660",
    "end": "333240"
  },
  {
    "text": "and if it dies I'm like you know Sally from the hardware department will come here and like replace it with another one you know we don't have any of those",
    "start": "333240",
    "end": "339570"
  },
  {
    "text": "guarantees so there's guarantee the guarantees that we around reliability that we lost to a hardware we now have to replicate in software and that's the",
    "start": "339570",
    "end": "347190"
  },
  {
    "text": "idea that's kind of the idea of this like cloud native environment okay so what's cloud native well we have a",
    "start": "347190",
    "end": "353160"
  },
  {
    "start": "350000",
    "end": "390000"
  },
  {
    "text": "foundation now and we have a conference and like you know everything is great and kind of at the surface level you",
    "start": "353160",
    "end": "359610"
  },
  {
    "text": "know in order to be cloud native you should be using containers and you should be running an Orchestrator it should be building micro services that's",
    "start": "359610",
    "end": "365160"
  },
  {
    "text": "a pretty prescriptive definition I think you know if you if you look behind you",
    "start": "365160",
    "end": "370229"
  },
  {
    "text": "know look behind the implementation details cloud what cloud native means and why I kind of like the term is it",
    "start": "370229",
    "end": "376620"
  },
  {
    "text": "software that's designed to run in these cloud environments right in environments where you just don't have a lot of",
    "start": "376620",
    "end": "382380"
  },
  {
    "text": "reliability guarantees from any of the underlying systems this team okay so far",
    "start": "382380",
    "end": "389300"
  },
  {
    "text": "okay so you know what's changed so we went and we zoom from 2000 to 2017 back",
    "start": "389300",
    "end": "396000"
  },
  {
    "start": "390000",
    "end": "445000"
  },
  {
    "text": "in 2000 we were thinking about virtual machines maybe yeah I guess so data centers and like",
    "start": "396000",
    "end": "401820"
  },
  {
    "text": "this hardware redundancy we were thinking about individual services or servers you know and the IP addresses",
    "start": "401820",
    "end": "406860"
  },
  {
    "text": "and we were monitoring these servers and whatever else and now in this cloud native world we've kind of abstracted a",
    "start": "406860",
    "end": "412680"
  },
  {
    "text": "lot of that stuff away right we're talking about services now and service discovery service monitoring micro services right and and we're not",
    "start": "412680",
    "end": "419370"
  },
  {
    "text": "worrying about individual servers or individual IP addresses or any of that stuff we've tracked it a bunch of that",
    "start": "419370",
    "end": "426480"
  },
  {
    "text": "stuff away we're not worrying about individual TCP connections like we kind of assume that that's you know going to",
    "start": "426480",
    "end": "431640"
  },
  {
    "text": "work 90 whatever percent of the time instead we're thinking about well how our REST API is formed and how are we",
    "start": "431640",
    "end": "437310"
  },
  {
    "text": "gonna use G RPC and are we you know doing flow control over HTTP to streaming you know semantics or whatever",
    "start": "437310",
    "end": "444500"
  },
  {
    "text": "right so those abstractions have all changed right and and the thing the",
    "start": "444500",
    "end": "450060"
  },
  {
    "start": "445000",
    "end": "485000"
  },
  {
    "text": "thing that we've introduced right the thing that we've introduced by doing this shift you know especially with kind",
    "start": "450060",
    "end": "455700"
  },
  {
    "text": "of the micro services aspect us now we've introduced this notion of runtime communication that is not just you know",
    "start": "455700",
    "end": "462270"
  },
  {
    "text": "not just its kind of one-off okay the web server talks to the app server and the app server talks to the database but",
    "start": "462270",
    "end": "467790"
  },
  {
    "text": "this is actually pervasive part of our application now we never had this before right and when you think about it when",
    "start": "467790",
    "end": "473490"
  },
  {
    "text": "you think about it in your head well it's it's kind of it looks looks kind of like this right okay service a talks to B & B talk to C",
    "start": "473490",
    "end": "480180"
  },
  {
    "text": "and the response comes back and you know great right what could go wrong you know",
    "start": "480180",
    "end": "485580"
  },
  {
    "start": "485000",
    "end": "530000"
  },
  {
    "text": "and in in in reality what happens is you end up with you don't end up with like a and B and T you end up with a big hairy",
    "start": "485580",
    "end": "492690"
  },
  {
    "text": "mess like this and this is the architecture of Twitter circa 2013 I'm gonna continue using this diagram until",
    "start": "492690",
    "end": "498450"
  },
  {
    "text": "the day I die because it's just so good yeah like it's just like who who wants",
    "start": "498450",
    "end": "504240"
  },
  {
    "text": "to be on call for this right you know but we were I was I had to wake",
    "start": "504240",
    "end": "509810"
  },
  {
    "text": "up you know and he can see there's this poor little service down there called gizmo doc you know it was basically the",
    "start": "509810",
    "end": "516890"
  },
  {
    "text": "user service and you know everyone talked to and like it's just as complicated topology of things and so",
    "start": "516890",
    "end": "522380"
  },
  {
    "text": "this is this is you know the previous slide was like you know how you imagine micro services are going to be and this",
    "start": "522380",
    "end": "527810"
  },
  {
    "text": "is like how micro services really are and so I'll give you I'll give you one quick example about why you know just",
    "start": "527810",
    "end": "534620"
  },
  {
    "start": "530000",
    "end": "665000"
  },
  {
    "text": "make it super concrete about why the introduction of this very pervasive services service communication becomes",
    "start": "534620",
    "end": "540800"
  },
  {
    "text": "complicated right and this is an example that I like because it's clear this there's like 20 other things that fall",
    "start": "540800",
    "end": "545810"
  },
  {
    "text": "in the same category so here I've got this system right in the very simple twittery system i've got a web service that talks to this time line service",
    "start": "545810",
    "end": "552140"
  },
  {
    "text": "which talks to the user service which talks to the database and okay each of these things i've got like you know I",
    "start": "552140",
    "end": "557360"
  },
  {
    "text": "got a account for the fact that the you know and might be down or it might be frozen or something so I set a timeout",
    "start": "557360",
    "end": "562490"
  },
  {
    "text": "and I set some number of retries and you know here we go ready for action right does any one spot a problem with this",
    "start": "562490",
    "end": "572260"
  },
  {
    "text": "you can yeah overall latency might be",
    "start": "574480",
    "end": "579590"
  },
  {
    "text": "too high that's right yep yep any other",
    "start": "579590",
    "end": "584740"
  },
  {
    "text": "any other formulations yeah the",
    "start": "584740",
    "end": "591590"
  },
  {
    "text": "downstream service retries are useless that's right that's right so you know if you look at what what happens here if",
    "start": "591590",
    "end": "596690"
  },
  {
    "text": "the database starts failing right let's say we're not failing let's say it's hanging because failing is easy right hanging is something for the thing",
    "start": "596690",
    "end": "602420"
  },
  {
    "text": "that's really painful database starts hanging because it's overloaded well we start hitting this retry you know the",
    "start": "602420",
    "end": "607580"
  },
  {
    "text": "timeout on the user service and user service starts retrying stuff okay but now we're hitting it that's tied on the",
    "start": "607580",
    "end": "612830"
  },
  {
    "text": "time line service and timeline starts retrying stuff and then we're hitting a timeout and the web servers and you know pretty soon one tiny little you know",
    "start": "612830",
    "end": "620150"
  },
  {
    "text": "slowdown in the database a little slow suddenly gets compounded because we're sending all these requests right and so",
    "start": "620150",
    "end": "626450"
  },
  {
    "text": "this is a general class of like it's really hard it's really hard to manage this communication and the way that we",
    "start": "626450",
    "end": "632030"
  },
  {
    "text": "parameterize it makes a big difference right so we're used to kind of thinking about our our telephone talking to the",
    "start": "632030",
    "end": "637730"
  },
  {
    "text": "Twitter server right and what does it do it like makes us it makes a recovery web browser talking to a web service and you make a request",
    "start": "637730",
    "end": "643790"
  },
  {
    "text": "and you wait 500 milliseconds and make another one and if you're really fancy you do the exponential back-off but that",
    "start": "643790",
    "end": "648980"
  },
  {
    "text": "pattern really starts breaking down when you apply the scale because this parametrization doesn't doesn't compose right and this gets even worse when you",
    "start": "648980",
    "end": "655670"
  },
  {
    "text": "get a lot more services every service is owned by a different team the teams are not talking to each other because they",
    "start": "655670",
    "end": "661490"
  },
  {
    "text": "all hate each other because you no one's written in Java on one threatened and go or whatever yeah okay",
    "start": "661490",
    "end": "668540"
  },
  {
    "start": "665000",
    "end": "740000"
  },
  {
    "text": "so lots lots more examples of that but I think that's that's a fun one okay so what's missing well you know now now I",
    "start": "668540",
    "end": "674510"
  },
  {
    "text": "have to do the selling bit you know we've got docker we've got kubernetes like surely at this point we're ready",
    "start": "674510",
    "end": "679580"
  },
  {
    "text": "we're ready for anything or any like we can scale we got containers and what's missing really the is is what was",
    "start": "679580",
    "end": "686060"
  },
  {
    "text": "missing from the Twitter story up until the point where we got finagle what's missing is this idea of the service mesh",
    "start": "686060",
    "end": "691220"
  },
  {
    "text": "some way of a managing communication between these services consistently across across the entire application you",
    "start": "691220",
    "end": "698120"
  },
  {
    "text": "know and ideally this happens in a way where you don't have to you know get the developers to redeploy their services right that was kind of the problem with",
    "start": "698120",
    "end": "704480"
  },
  {
    "text": "Twitter yes you made a change if an angle finagle out a bug and then you fixed it great it would take like six",
    "start": "704480",
    "end": "710240"
  },
  {
    "text": "months to get everyone on to the latest version of finning I mean why you have found another bug right and so that's",
    "start": "710240",
    "end": "715790"
  },
  {
    "text": "that makes life difficult okay so I think you know if you think about security you know being kind of this",
    "start": "715790",
    "end": "722930"
  },
  {
    "text": "thing that you have to implement in layers I think reliability is one of those things that you have to do in layers as well where you know docker gives you a",
    "start": "722930",
    "end": "729020"
  },
  {
    "text": "certain amount of reliability kubernetes gives you a certain amount of reliability right like the machine can go down and like everything gets",
    "start": "729020",
    "end": "734330"
  },
  {
    "text": "automatically restarted and rescheduled but there's still another layer on top of that which is the service to service",
    "start": "734330",
    "end": "739630"
  },
  {
    "text": "communication okay so the service mesh finally huh maybe I should have started with the slide what is a service mesh",
    "start": "739630",
    "end": "745790"
  },
  {
    "start": "740000",
    "end": "762000"
  },
  {
    "text": "it's a dedicated software layer for managing the service communication alright so the idea is we want to pull",
    "start": "745790",
    "end": "752390"
  },
  {
    "text": "it out of the applications right and put it into the underlying infrastructure",
    "start": "752390",
    "end": "757600"
  },
  {
    "text": "yeah my apologies apologize for these animations so you know quick this is",
    "start": "757600",
    "end": "765770"
  },
  {
    "start": "762000",
    "end": "802000"
  },
  {
    "text": "very overly simplified history of software architecture but you know we we started with a lamp stack back when we",
    "start": "765770",
    "end": "771590"
  },
  {
    "text": "were all children like all that we had was a lamp stack and you know you had this you had service you",
    "start": "771590",
    "end": "777470"
  },
  {
    "text": "had communication internal communication here right you had a communication from between Apache and PHP and between PHP",
    "start": "777470",
    "end": "782690"
  },
  {
    "text": "and my sequel alright but though that communication was very specific like",
    "start": "782690",
    "end": "787760"
  },
  {
    "text": "these use cases were very you know wasn't this general like service of service thing right and Apache was really really good at balancing load",
    "start": "787760",
    "end": "794300"
  },
  {
    "text": "over a bunch of PHP instances and the PHP my sequel clients got very very good at talking to my sequel you know so you",
    "start": "794300",
    "end": "800390"
  },
  {
    "text": "had these specialized clients right you fast forward a little bit from that into the world of this is kind of where",
    "start": "800390",
    "end": "806089"
  },
  {
    "start": "802000",
    "end": "855000"
  },
  {
    "text": "Twitter was you know into this world of fad clients so the the early web scale companies like Twitter and Facebook and",
    "start": "806089",
    "end": "812000"
  },
  {
    "text": "Netflix and Google well you know once they took their monolith and they broke it down into micro services right and",
    "start": "812000",
    "end": "817490"
  },
  {
    "text": "now they had this consistent layer or a pervasive layer of communication so they",
    "start": "817490",
    "end": "822620"
  },
  {
    "text": "had to fix it and they use libraries right so hysterics at Netflix and the Google is stubby and kind of The",
    "start": "822620",
    "end": "827990"
  },
  {
    "text": "Associated libraries and finagle at Twitter right and this this was a better approach right and they all kind of had",
    "start": "827990",
    "end": "834470"
  },
  {
    "text": "to do this because there was no way no way of avoiding it and the service Misha is really just taking that same logic",
    "start": "834470",
    "end": "839810"
  },
  {
    "text": "and moving it into a separate layer all right that's all it is it's not new functionality it's not stuff that we haven't thought of before like oh we've",
    "start": "839810",
    "end": "845959"
  },
  {
    "text": "never load-balanced before well we've been load balancing since since load existed you know but it's it's moving it",
    "start": "845959",
    "end": "852950"
  },
  {
    "text": "out of the out of the developer and into the out of the the hands of the service operator into the underlying platform so",
    "start": "852950",
    "end": "859040"
  },
  {
    "text": "I have a little diagram of like what this actually looks like in practice this is for linker D for conduit I don't have a diagram but it looks a little",
    "start": "859040",
    "end": "865339"
  },
  {
    "text": "different because of sidecars rather than per host but you know though so what does a service mesh look like in practice well in practice it's typically",
    "start": "865339",
    "end": "871370"
  },
  {
    "text": "a bunch of proxies right and it's a prize a bunch of proxies that you stick in between all the services one way or",
    "start": "871370",
    "end": "876440"
  },
  {
    "text": "another and then there's like a control plane that gets managed here which you know that little green line leading off",
    "start": "876440",
    "end": "881660"
  },
  {
    "text": "to the side is you know going off to the control plane and when service a wants to talk to service be one of those",
    "start": "881660",
    "end": "887209"
  },
  {
    "text": "instances talks through its local service mesh proxy which talks to the destination service mesh proxy which",
    "start": "887209",
    "end": "893329"
  },
  {
    "text": "talks to the destination instance you've got two hops in there and the reason to put two hops and there's because then",
    "start": "893329",
    "end": "898399"
  },
  {
    "text": "you can control both sides so you can add TLS and then terminate it or you can like upgrade from HTTP one to HP two",
    "start": "898399",
    "end": "904470"
  },
  {
    "text": "or whatever basically you want to give the mesh you know the you want to give it ownership over that communication",
    "start": "904470",
    "end": "910650"
  },
  {
    "text": "layer and the reason to do it as a separate proxy well it's because then you don't have the library problem or",
    "start": "910650",
    "end": "916140"
  },
  {
    "text": "anything you don't have to you don't have to a like he can be polyglot right you don't have to like maintain the same",
    "start": "916140",
    "end": "922080"
  },
  {
    "text": "library across in different languages and be especially for bigger companies you don't have to convince them the the",
    "start": "922080",
    "end": "927900"
  },
  {
    "text": "developers to redeploy their services ever you want every time you want to make a change and this is all made possible it's only made possible because",
    "start": "927900",
    "end": "934530"
  },
  {
    "text": "we have things like docker and kubernetes that like make doing this sort of thing easy you know we could",
    "start": "934530",
    "end": "939990"
  },
  {
    "text": "have done this at Twitter we could have done this you know 15 years ago but it was really really hard",
    "start": "939990",
    "end": "945360"
  },
  {
    "text": "right now we have things that make it easy so it's enabled kind of this the sort of architecture let's see yeah",
    "start": "945360",
    "end": "952710"
  },
  {
    "start": "950000",
    "end": "1042000"
  },
  {
    "text": "surface finish does a whole bunch of stuff reliability visibility I'm not gonna well maybe I'll spend 30 seconds on this so",
    "start": "952710",
    "end": "960510"
  },
  {
    "text": "largely what I've been talking about has been the reliability semantics like retries and timeouts and how you might want to parametrize them differently and",
    "start": "960510",
    "end": "967110"
  },
  {
    "text": "like you know the service mesh can do some of that for you right we if it knows our request is idempotent it can",
    "start": "967110",
    "end": "972930"
  },
  {
    "text": "retry it if it knows you know that you",
    "start": "972930",
    "end": "978720"
  },
  {
    "text": "know this application instance is returning you know application level errors well we can just circuit break and kick it",
    "start": "978720",
    "end": "984630"
  },
  {
    "text": "out of the load balancing pool all right we can do a bunch of that reliability stuff it's also the visibility and maybe visibility should have been first in",
    "start": "984630",
    "end": "990510"
  },
  {
    "text": "this time because that's really the thing that I think gets people hooked on linker D on conduit on any service mesh",
    "start": "990510",
    "end": "995610"
  },
  {
    "text": "first is the fact that you suddenly have this visibility into you know into into",
    "start": "995610",
    "end": "1000800"
  },
  {
    "text": "these critical like the top line service metrics these are the things you've never had before I mean it's like success rate and requests volume and",
    "start": "1000800",
    "end": "1008480"
  },
  {
    "text": "service latency you probably hopefully you've had them before but now you've got a consistent you know consistent way",
    "start": "1008480",
    "end": "1015560"
  },
  {
    "text": "of getting them across your entire application stack that's independent of what language are in an independent of what libraries are using independent of",
    "start": "1015560",
    "end": "1021770"
  },
  {
    "text": "the frameworks you suddenly have all this visibility and this is a top line service metrics these are the things you want to wake up for at 3:00 a.m. there's",
    "start": "1021770",
    "end": "1029089"
  },
  {
    "text": "a bunch of cool security stuff which I'm going to skip over governance I don't even know what that means that's it's really expensive whatever it",
    "start": "1029089",
    "end": "1036470"
  },
  {
    "text": "is link rity has some production users and some things okay I'm just kind of",
    "start": "1036470",
    "end": "1041660"
  },
  {
    "text": "gonna skip through this okay the future huh all right so I guess what I've",
    "start": "1041660",
    "end": "1046790"
  },
  {
    "start": "1042000",
    "end": "1110000"
  },
  {
    "text": "already done is the past in the present so I guess we're moving into the future",
    "start": "1046790",
    "end": "1052040"
  },
  {
    "text": "okay so the fuel is future of the surface mesh this is this is fairly link",
    "start": "1052040",
    "end": "1058190"
  },
  {
    "text": "or D specific so you'll have to you'll have to forgive me you know so I think security is a pretty interesting is a",
    "start": "1058190",
    "end": "1064070"
  },
  {
    "text": "pretty interesting topic this is certainly one that comes up a whole lot for us as people are moving into the",
    "start": "1064070",
    "end": "1069560"
  },
  {
    "text": "cloud native environments you want to do things like isolation of services you want to do things like having policy on",
    "start": "1069560",
    "end": "1075770"
  },
  {
    "text": "on top of like which services can talk to which other services which calls are they allowed to make you know how do how",
    "start": "1075770",
    "end": "1081350"
  },
  {
    "text": "do we know which you know who how do we know whether a service is who it claims it is and how do we apply policy on top",
    "start": "1081350",
    "end": "1088190"
  },
  {
    "text": "of that and are we doing this like you know what what layer are we doing this is per service as a per request or do we",
    "start": "1088190",
    "end": "1094640"
  },
  {
    "text": "have this notion of customers or tenants because we're like running of this multi-tenant application you know and",
    "start": "1094640",
    "end": "1100280"
  },
  {
    "text": "then there's the question of like well what about the mesh itself how secure is that thing right this thing is all your PII and all your your HIPAA data is",
    "start": "1100280",
    "end": "1106820"
  },
  {
    "text": "coming through these proxies like that okay performance this is you know this",
    "start": "1106820",
    "end": "1114530"
  },
  {
    "start": "1110000",
    "end": "1156000"
  },
  {
    "text": "is a big one you know because what we're asking people to do is to install these proxies everywhere Brian to just jam them in into every",
    "start": "1114530",
    "end": "1122630"
  },
  {
    "text": "single application call not just once but twice okay so that means it's pretty fast we're gonna make it really",
    "start": "1122630",
    "end": "1127670"
  },
  {
    "text": "lightweight now we got to make its behavior predictable right that's that almost might be more important than any",
    "start": "1127670",
    "end": "1134000"
  },
  {
    "text": "of the other things if you're introducing a constant time cost well that's that's that's understandable it's",
    "start": "1134000",
    "end": "1140930"
  },
  {
    "text": "when you introduce something that has a high variance in the latency that like terrible things start happening alright",
    "start": "1140930",
    "end": "1147620"
  },
  {
    "text": "so we care about the p99 or the p39 or whatever way more than we care about the",
    "start": "1147620",
    "end": "1153070"
  },
  {
    "text": "you know the the p51 or looking at the latency distribution okay and then",
    "start": "1153070",
    "end": "1158210"
  },
  {
    "start": "1156000",
    "end": "1239000"
  },
  {
    "text": "finally you know and I got to say I'm trying to make this more about the",
    "start": "1158210",
    "end": "1163790"
  },
  {
    "text": "service mesh in general not too much about linker D but Lee has been in production at this point for",
    "start": "1163790",
    "end": "1169400"
  },
  {
    "text": "about 18 months that companies around the world and like we just like we've learned a lot of stuff about this and a",
    "start": "1169400",
    "end": "1175190"
  },
  {
    "text": "lot of the things that we that we learned are really around this kind of operability aspect right so when the",
    "start": "1175190",
    "end": "1181610"
  },
  {
    "text": "service mesh goes wrong or when something is going wrong how do you know how do you know where the promise this is a problem with my service isn't a",
    "start": "1181610",
    "end": "1188210"
  },
  {
    "text": "problem with the underlying network is it a problem with the the service mesh you know like it's just hard it's really",
    "start": "1188210",
    "end": "1194420"
  },
  {
    "text": "hard to know when there's so many moving pieces so how understandable can you make the",
    "start": "1194420",
    "end": "1200390"
  },
  {
    "text": "service mesh so you you have a sense when you're relying on saying you have it you have a sense that you can rely on",
    "start": "1200390",
    "end": "1205730"
  },
  {
    "text": "it that it's understandable and it's predictable and then the other thing that's really interesting for us is like I said here but the definite separation",
    "start": "1205730",
    "end": "1212450"
  },
  {
    "text": "concerns between Devon ops I think maybe a better way would be saying of saying that would be separation of concerns between the service owner and then kind",
    "start": "1212450",
    "end": "1219740"
  },
  {
    "text": "of the platform owner right because they are those are two engineering groups that have fairly different goals in in",
    "start": "1219740",
    "end": "1227270"
  },
  {
    "text": "fairly different requirements in kind of a larger organization and I think a lot of the values of service finishes in",
    "start": "1227270",
    "end": "1233320"
  },
  {
    "text": "allowing that separation in kind of increasing the separation of concerns",
    "start": "1233320",
    "end": "1238610"
  },
  {
    "text": "between those two groups okay great so that is that's the future oh wait no the",
    "start": "1238610",
    "end": "1246140"
  },
  {
    "start": "1239000",
    "end": "1263000"
  },
  {
    "text": "answer yes these are all questions here's the answer all right conduit the answer okay and to talk done",
    "start": "1246140",
    "end": "1255640"
  },
  {
    "text": "yeah so we I wanted to spend just a minute on conduit because we launched",
    "start": "1255640",
    "end": "1260930"
  },
  {
    "text": "this thing yesterday and you know I guess a lot of the",
    "start": "1260930",
    "end": "1266540"
  },
  {
    "start": "1263000",
    "end": "1546000"
  },
  {
    "text": "questions in the previous session were kind of you know segues into conduit because a lot of what we tried to do",
    "start": "1266540",
    "end": "1272300"
  },
  {
    "text": "with conduit is is address exactly those concerns based on the the",
    "start": "1272300",
    "end": "1279370"
  },
  {
    "text": "you know the 18 months of production experience with with linker D you know at a variety of companies around the",
    "start": "1279370",
    "end": "1285340"
  },
  {
    "text": "around the globe some were very very happy with linker D some who have had problems with linker dan like some who",
    "start": "1285340",
    "end": "1290650"
  },
  {
    "text": "have not been able to adopt it for a variety of reasons right and so the goal with Condit was conduit was not only",
    "start": "1290650",
    "end": "1297760"
  },
  {
    "text": "make something it's really specific to kubernetes right and like just let's just absorb those idioms and make sure",
    "start": "1297760",
    "end": "1304180"
  },
  {
    "text": "it works you know in conjunction with coop cuddle and make sure you know it uses the kubernetes like you know",
    "start": "1304180",
    "end": "1310840"
  },
  {
    "text": "ontology and we're talking about deployments and pods and all those things you know which linker d44 you",
    "start": "1310840",
    "end": "1316510"
  },
  {
    "text": "know for all of its benefits was a very abstract you know generic layers I could",
    "start": "1316510",
    "end": "1323890"
  },
  {
    "text": "talk to 20 different things and which made it very difficult to talk to one specific or to configure it in terms of",
    "start": "1323890",
    "end": "1329380"
  },
  {
    "text": "one specific thing so let's like let's fix up to kubernetes right and then let's just make it incredibly fast and",
    "start": "1329380",
    "end": "1334390"
  },
  {
    "text": "incredibly lightweight linker do you always interesting how plain kadia that you know all that rely all the all the",
    "start": "1334390",
    "end": "1340210"
  },
  {
    "text": "building blocks that we built on top of things like finagle you know which in",
    "start": "1340210",
    "end": "1346120"
  },
  {
    "text": "turn was built on top of Neddie which you know and and Scala and which in turn built on top of the JVM like all those",
    "start": "1346120",
    "end": "1352330"
  },
  {
    "text": "components are really good at scaling up right you give them enough memory and",
    "start": "1352330",
    "end": "1358000"
  },
  {
    "text": "you give them enough CPU cores Michel incurred he can just practice you know it can process tons of traffic it's just",
    "start": "1358000",
    "end": "1363550"
  },
  {
    "text": "crazy like just throw tens of thousands of requests through a single instance but in the kubernetes world especially",
    "start": "1363550",
    "end": "1370780"
  },
  {
    "text": "if you want to deploy as a sidecar you kind of want the opposite right you want something that doesn't have to handle",
    "start": "1370780",
    "end": "1376240"
  },
  {
    "text": "that much traffic yeah handles a thousand requests a second or something cuz you're deploying one per application instance alright but",
    "start": "1376240",
    "end": "1382000"
  },
  {
    "text": "it has to be really really tiny it has to be really lightweight and you want to have a really predictable you know p99",
    "start": "1382000",
    "end": "1387340"
  },
  {
    "text": "latency and that was where leek heard he had had trouble so the production users of linker D well it kind of depends you",
    "start": "1387340",
    "end": "1393430"
  },
  {
    "text": "know depends on what the size your services we have many people who use it in production as a sidecar because their",
    "start": "1393430",
    "end": "1402040"
  },
  {
    "text": "services are big they're running these heavyweight JVM services that take a big heap and so you you know I spend two hundred Meg's on a link or D container",
    "start": "1402040",
    "end": "1408250"
  },
  {
    "text": "you know whatever it's not that bad but then we have folks who are writing go microservices and nother take 15 eggs",
    "start": "1408250",
    "end": "1415680"
  },
  {
    "text": "and then it's a little silly to you know to ask in the put linker D you know it's a sidecar so we do it as a demon said",
    "start": "1415680",
    "end": "1421500"
  },
  {
    "text": "and like they could see a bunch of you know at least lets you amortize those resources but it's not ideal right we",
    "start": "1421500",
    "end": "1427050"
  },
  {
    "text": "wanted to have we want to do something that we want to do something that was right from the start and the other big thing that we did was trying to sign",
    "start": "1427050",
    "end": "1433440"
  },
  {
    "text": "this with security in mind especially for our users who have PII or PCI compliance issues or HIPAA data or",
    "start": "1433440",
    "end": "1439770"
  },
  {
    "text": "whatever like we really want to ensure that you know this data plane that's in there that's touching everything is as",
    "start": "1439770",
    "end": "1447590"
  },
  {
    "text": "reliable and as secure as it possibly can be so we built the data plane and rust which six months ago seemed totally",
    "start": "1447590",
    "end": "1454770"
  },
  {
    "text": "crazy and risky right now seems awesome because it worked and what rust gives us",
    "start": "1454770",
    "end": "1460410"
  },
  {
    "text": "is not only the ability to run native to write native code so you know it's about as fast as programming as code can be",
    "start": "1460410",
    "end": "1467280"
  },
  {
    "text": "until you you know till you drop down to assembly but it's also guaranteed to be memory safe all right so we avoid a",
    "start": "1467280",
    "end": "1473730"
  },
  {
    "text": "whole class of buffer overflow exploits and things like that and it does not have a garbage collector and that's",
    "start": "1473730",
    "end": "1479970"
  },
  {
    "text": "important because that means that drastically reduces of the variability of the lane to means things are really",
    "start": "1479970",
    "end": "1486240"
  },
  {
    "text": "really predictable and I'm not a rust expert at all but I know a little bit about what we've done and it's super",
    "start": "1486240",
    "end": "1492750"
  },
  {
    "text": "cool because the rust language features allow you to very easily express these you know these things we're like I want",
    "start": "1492750",
    "end": "1499530"
  },
  {
    "text": "to tie all you know I'm allocating memory as part of processing this request and then when the request",
    "start": "1499530",
    "end": "1504570"
  },
  {
    "text": "terminates I want to just free all that memory at once right and when you do things like that",
    "start": "1504570",
    "end": "1509640"
  },
  {
    "text": "you can amortize the cost of the memory allocation de-allocation over every",
    "start": "1509640",
    "end": "1514950"
  },
  {
    "text": "request and the thing that's become very very predictable and then all sorts of cool powerful features I'm actually not",
    "start": "1514950",
    "end": "1520050"
  },
  {
    "text": "going to have time for dental because I want to do a little bit of questions afterwards but we'll do one at the cig or the the salon tomorrow but powerful",
    "start": "1520050",
    "end": "1529110"
  },
  {
    "text": "features one of the things that Oliver showed off you know during the demo is this idea of tap where if I have",
    "start": "1529110",
    "end": "1534240"
  },
  {
    "text": "services running you know in production I should be able to just kind of TCP dump into those requests like just show",
    "start": "1534240",
    "end": "1539460"
  },
  {
    "text": "me you know just show me what's going on and so we did a lot of work to make things I got powerful possible",
    "start": "1539460",
    "end": "1545990"
  },
  {
    "text": "okay okay let's skip the demo as I said and that is the end of the service mesh",
    "start": "1545990",
    "end": "1555000"
  },
  {
    "text": "that's the past the present in the future and I'd like to do some questions",
    "start": "1555000",
    "end": "1561540"
  },
  {
    "text": "and I'll ask that you do it with a mic so we can get it on the recording",
    "start": "1561540",
    "end": "1566910"
  },
  {
    "text": "ask me anything anyone has a question that I'm sorry okay okay I'll repeat it",
    "start": "1566910",
    "end": "1593720"
  },
  {
    "text": "yeah yeah great question it's great so number one is kind of going to support thrift in the future I think the answer",
    "start": "1600680",
    "end": "1608730"
  },
  {
    "start": "1601000",
    "end": "1699000"
  },
  {
    "text": "is possibly the answer is possibly yeah",
    "start": "1608730",
    "end": "1616110"
  },
  {
    "text": "yeah we're not we're not ruling it out I think that it's it's not it's not like",
    "start": "1616110",
    "end": "1623280"
  },
  {
    "text": "the first does not like the future of protocols but it's also a really simple",
    "start": "1623280",
    "end": "1628440"
  },
  {
    "text": "protocol so it might be easy to just do it and then you know the next question was okay what you know what about linker",
    "start": "1628440",
    "end": "1634200"
  },
  {
    "text": "D are we throwing and throwing that thing away and like sorry linger to use or the answer's no linker DS gonna have a whole lot of use cases will continue",
    "start": "1634200",
    "end": "1640500"
  },
  {
    "text": "to have a whole lot of use cases that conduit won't be able to address and so you know linker DS here forever",
    "start": "1640500",
    "end": "1647300"
  },
  {
    "text": "yeah if you were deploying a service mesh in kubernetes a month let's say two months from now we got to get production",
    "start": "1651340",
    "end": "1657440"
  },
  {
    "text": "ready then yeah I would start with conduit yeah unless unless you had some really specific requirements around I have",
    "start": "1657440",
    "end": "1664040"
  },
  {
    "text": "existing you know mais au s-- infrastructure i have existing zookeeper or i have you know nomad over here and i",
    "start": "1664040",
    "end": "1670100"
  },
  {
    "text": "like need to make this stuff all work together because that's the kind of stuff that linker d is really really good at the conduit it's just not going",
    "start": "1670100",
    "end": "1676040"
  },
  {
    "text": "to address you got it will conduit and",
    "start": "1676040",
    "end": "1683210"
  },
  {
    "text": "link or D speak to each other I would like to make that happen I'm not a hundred percent Shh I don't have a",
    "start": "1683210",
    "end": "1689420"
  },
  {
    "text": "great answer for you I'd like to yeah yes that's sacrilege the question was",
    "start": "1689420",
    "end": "1701120"
  },
  {
    "start": "1699000",
    "end": "1760000"
  },
  {
    "text": "what happens when kubernetes is replaced by whatever comes after kubernetes that's going to be the next the new",
    "start": "1701120",
    "end": "1707150"
  },
  {
    "text": "hotness wow that would of course never happen because kubernetes is perfect in",
    "start": "1707150",
    "end": "1714170"
  },
  {
    "text": "every way but I think you know what one of the funny things about the about the",
    "start": "1714170",
    "end": "1719210"
  },
  {
    "text": "whole service mission model is that it's not actually that tightly tied to the orchestrator right at the tech level you",
    "start": "1719210",
    "end": "1724430"
  },
  {
    "text": "know we integrate both link turning and conduit integrate with kubernetes that's kind of a service discovery endpoint you",
    "start": "1724430",
    "end": "1730820"
  },
  {
    "text": "know we call a couple api's but that integration is not really that tight the usage you know the adoption is like super",
    "start": "1730820",
    "end": "1735980"
  },
  {
    "text": "tight but the the tech integration is not that tight so actually I think that'd be fine you know I I don't think",
    "start": "1735980",
    "end": "1741710"
  },
  {
    "text": "it would be that much work to make a linker do you work at or and conduit work with whatever the kubernetes after next yeah yeah that's right that's right",
    "start": "1741710",
    "end": "1752050"
  },
  {
    "text": "yeah a great question mm-hmm yeah yeah",
    "start": "1755290",
    "end": "1761510"
  },
  {
    "start": "1760000",
    "end": "1854000"
  },
  {
    "text": "great question so is conduit a data plane or is it a control plane Conner has both actually Lake Ernie has both -",
    "start": "1761510",
    "end": "1767360"
  },
  {
    "text": "we just did a bad job of talking about it all right so linker D you know we all we've all almost always talked about",
    "start": "1767360",
    "end": "1774020"
  },
  {
    "text": "this thing so let me let me take one step back and kind of describe this distinction Matt Klein actually has a really good thought of envoy has a",
    "start": "1774020",
    "end": "1780650"
  },
  {
    "text": "really good blog post about data planes versus control plane the idea is that in a service mesh there actually are these",
    "start": "1780650",
    "end": "1785750"
  },
  {
    "text": "two kind of logical components at least you know one is what's actually proxying they're pressed what's handling those bits you know what's what's it what is",
    "start": "1785750",
    "end": "1792380"
  },
  {
    "text": "seeing user data what's exposed to PII and all that and that's the data plane and then the other component is well what are you using to kind of",
    "start": "1792380",
    "end": "1798140"
  },
  {
    "text": "orchestrate maybe that's a bad choice of work what are using to control all of those all of those proxies and that's",
    "start": "1798140",
    "end": "1803990"
  },
  {
    "text": "the control plane and with linker D we almost always talk about data plane terms but there is a control plane",
    "start": "1803990",
    "end": "1809390"
  },
  {
    "text": "called name or D with conduit one of the you know big lessons that we learned is we talk very explicitly about the Kandra data plane and the conduit control plane",
    "start": "1809390",
    "end": "1816500"
  },
  {
    "text": "and those are two things or two separate code bases the control plane is actually written in go alright so which makes it",
    "start": "1816500",
    "end": "1822650"
  },
  {
    "text": "easy to you know use all these kubernetes libraries which is nice for us the day the planes are in and rust and having that distinction has has made",
    "start": "1822650",
    "end": "1829490"
  },
  {
    "text": "us it's been it's been helpful for our own internal thinking as well because",
    "start": "1829490",
    "end": "1834590"
  },
  {
    "text": "the two parts of that system have very different you know requirements I think",
    "start": "1834590",
    "end": "1840710"
  },
  {
    "text": "this may be on now excellent all right oh yes up front I was just",
    "start": "1840710",
    "end": "1850940"
  },
  {
    "text": "gonna ask how this compares the Envoy yeah so how does this compare to Envoy",
    "start": "1850940",
    "end": "1856659"
  },
  {
    "start": "1854000",
    "end": "1926000"
  },
  {
    "text": "it's a very different beast because envoy is I think much more of a data",
    "start": "1856659",
    "end": "1862549"
  },
  {
    "text": "plane then consul conduit is both control plane and a data plane on boy is",
    "start": "1862549",
    "end": "1868580"
  },
  {
    "text": "pretty much a data player right and the way envoys use that lift is with a with",
    "start": "1868580",
    "end": "1873860"
  },
  {
    "text": "a non open-source control plane I'm gonna put this over here with an on",
    "start": "1873860",
    "end": "1880789"
  },
  {
    "text": "open-source control plane the way that you see use with this do is is to you as a control plane and on points of data plane with conduit we have both pieces",
    "start": "1880789",
    "end": "1887440"
  },
  {
    "text": "so it's it's not really an apples to apples comparison I think a better",
    "start": "1887440",
    "end": "1892669"
  },
  {
    "text": "comparison was would be with sto an envoy right because that that is kind of",
    "start": "1892669",
    "end": "1898580"
  },
  {
    "text": "the same thing right this it's they're both service missions they have a control plane written and go I'm sorry",
    "start": "1898580",
    "end": "1905809"
  },
  {
    "text": "sto and convent yeah yeah that's that's a more of an apples to apples comparison",
    "start": "1905809",
    "end": "1912070"
  },
  {
    "text": "thank you",
    "start": "1912070",
    "end": "1915190"
  },
  {
    "text": "yeah great question the question was what's the what are the security implications basically if using daemon",
    "start": "1925770",
    "end": "1932710"
  },
  {
    "start": "1926000",
    "end": "2008000"
  },
  {
    "text": "sets versus sidecars right and the big implication there and the reason why the sidecar model is so compelling is if you",
    "start": "1932710",
    "end": "1940210"
  },
  {
    "text": "want to do service any kind of service off or service kind of identity all right then doing that as a daemon set",
    "start": "1940210",
    "end": "1946390"
  },
  {
    "text": "doesn't make a lot of sense because you want to have a sir you know presumably you're doing this with kill us there's other ways of doing",
    "start": "1946390",
    "end": "1951400"
  },
  {
    "text": "it but if you're doing this TLS then you'd have a cert per service okay and then a demon set like you're just giving",
    "start": "1951400",
    "end": "1956830"
  },
  {
    "text": "all the certs to this thing and like you've lost the entire you know so you've lost all your security boundaries so that's why the sidecar model is so",
    "start": "1956830",
    "end": "1963430"
  },
  {
    "text": "interesting and so compelling is because if you want to do any kind of service identity and build policy on top of that",
    "start": "1963430",
    "end": "1968620"
  },
  {
    "text": "you got to be sidecars yeah really good question all right so let's do in the",
    "start": "1968620",
    "end": "1975340"
  },
  {
    "text": "back target for production stable early",
    "start": "1975340",
    "end": "1981820"
  },
  {
    "text": "next year it's going to be the feature set it's gonna be super minimalist that's that's that's the way we're",
    "start": "1981820",
    "end": "1987940"
  },
  {
    "text": "slicing and dicing this is get something really small ready for production first and then start adding features on top of",
    "start": "1987940",
    "end": "1995560"
  },
  {
    "text": "that yeah",
    "start": "1995560",
    "end": "1999990"
  },
  {
    "text": "so the question was in the library case if you make an update to library then",
    "start": "2007640",
    "end": "2013500"
  },
  {
    "text": "have to roll all your services in the in the sidecar case don't you have the exact same thing where if you have to",
    "start": "2013500",
    "end": "2019230"
  },
  {
    "text": "update your sidecar you then have to you know redeploy your services and the answer is it's it's not quite the same",
    "start": "2019230",
    "end": "2025500"
  },
  {
    "text": "because you don't have to get developers involved you don't have to get the service owners involved right if you",
    "start": "2025500",
    "end": "2031710"
  },
  {
    "text": "update the sidecar and you you know and I think Oliver basically did this trim the live demo this morning you you",
    "start": "2031710",
    "end": "2040800"
  },
  {
    "text": "update like the you know the deployment spec to include the new thing and then you roll in the deployment right and",
    "start": "2040800",
    "end": "2046350"
  },
  {
    "text": "that's a pure like platform owner kind of operation is there's no recompilation there's no like going through CI CD or",
    "start": "2046350",
    "end": "2053040"
  },
  {
    "text": "unit testing or anything like that oh gosh when I say it like that it sounds really scary",
    "start": "2053040",
    "end": "2058070"
  },
  {
    "text": "there's definitely integration testing that you do before before that I'm sorry",
    "start": "2058070",
    "end": "2069450"
  },
  {
    "text": "I say that again you have to recompile you don't have to recompile when you use",
    "start": "2069450",
    "end": "2076560"
  },
  {
    "text": "it a new version of a library ok ok yeah",
    "start": "2076560",
    "end": "2086300"
  },
  {
    "text": "it's working the federated cluster yeah",
    "start": "2087360",
    "end": "2092760"
  },
  {
    "text": "definitely I don't I don't see why it shouldn't I don't think the Federation",
    "start": "2093720",
    "end": "2099130"
  },
  {
    "text": "really affects any of this until you start doing really complicated cross cluster traffic things let's do let's do",
    "start": "2099130",
    "end": "2105760"
  },
  {
    "text": "just one more and then we'll let everyone go have fun yeah go ahead it's",
    "start": "2105760",
    "end": "2115570"
  },
  {
    "start": "2114000",
    "end": "2155000"
  },
  {
    "text": "linker D connecting with this you know so we have a very preliminary integration that we did back when this deal was first announced to have linker",
    "start": "2115570",
    "end": "2121510"
  },
  {
    "text": "D act as a data plane for sto so you could run the SCO as a control plane in",
    "start": "2121510",
    "end": "2127510"
  },
  {
    "text": "liquor D as the data plane we didn't get a lot of interest in that we did it and it worked you know it only supported",
    "start": "2127510",
    "end": "2134890"
  },
  {
    "text": "maybe 60% of this you know API at the time but we didn't really see any",
    "start": "2134890",
    "end": "2139900"
  },
  {
    "text": "adoption no one was really interested in using it so it's it's possible to do but no one wants it yeah all right I'll",
    "start": "2139900",
    "end": "2149590"
  },
  {
    "text": "stick around for a little bit so please feel free to come up and ask me questions thank you very much",
    "start": "2149590",
    "end": "2155200"
  },
  {
    "text": "[Applause]",
    "start": "2155200",
    "end": "2157680"
  }
]