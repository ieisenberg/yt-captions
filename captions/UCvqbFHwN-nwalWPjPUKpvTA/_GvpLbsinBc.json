[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hello everyone",
    "start": "1280",
    "end": "3199"
  },
  {
    "text": "welcome to the webinar it",
    "start": "3199",
    "end": "6480"
  },
  {
    "text": "is time to talk about data mesh",
    "start": "6480",
    "end": "10559"
  },
  {
    "text": "which is a distributed data management",
    "start": "10559",
    "end": "14320"
  },
  {
    "text": "for microservices",
    "start": "14320",
    "end": "16320"
  },
  {
    "text": "presented by fred and kenny from broad",
    "start": "16320",
    "end": "19840"
  },
  {
    "text": "beach corporation",
    "start": "19840",
    "end": "22880"
  },
  {
    "start": "24000",
    "end": "171000"
  },
  {
    "text": "let's have a look at the microsoft",
    "start": "25119",
    "end": "28000"
  },
  {
    "text": "challenge",
    "start": "28000",
    "end": "28840"
  },
  {
    "text": "first",
    "start": "28840",
    "end": "31840"
  },
  {
    "text": "usually there are four phases for",
    "start": "32880",
    "end": "36079"
  },
  {
    "text": "microsoft's architectural introduction",
    "start": "36079",
    "end": "40320"
  },
  {
    "text": "analyze decouple",
    "start": "40879",
    "end": "44960"
  },
  {
    "text": "aggregate and implement",
    "start": "44960",
    "end": "49440"
  },
  {
    "text": "the first thing we must",
    "start": "49440",
    "end": "53760"
  },
  {
    "text": "keep in mind is the data",
    "start": "53760",
    "end": "58000"
  },
  {
    "text": "is the key problem in the character",
    "start": "58000",
    "end": "60800"
  },
  {
    "text": "microsoft",
    "start": "60800",
    "end": "61680"
  },
  {
    "text": "architectural implementation",
    "start": "61680",
    "end": "65760"
  },
  {
    "text": "after several years of hard working",
    "start": "65920",
    "end": "69520"
  },
  {
    "text": "the industry and customers",
    "start": "69520",
    "end": "73040"
  },
  {
    "text": "has also looked for consultants",
    "start": "73040",
    "end": "76880"
  },
  {
    "text": "and have achieved many results",
    "start": "76880",
    "end": "80400"
  },
  {
    "text": "in application development and logic",
    "start": "80400",
    "end": "83439"
  },
  {
    "text": "design",
    "start": "83439",
    "end": "85600"
  },
  {
    "text": "we have learned a lot of design",
    "start": "85600",
    "end": "88799"
  },
  {
    "text": "and development methods such as",
    "start": "88799",
    "end": "92079"
  },
  {
    "text": "domain driven design",
    "start": "92079",
    "end": "95119"
  },
  {
    "text": "splitting methods design",
    "start": "95119",
    "end": "98240"
  },
  {
    "text": "patterns etc",
    "start": "98240",
    "end": "101840"
  },
  {
    "text": "the reason why the microservice",
    "start": "102799",
    "end": "105680"
  },
  {
    "text": "architecture",
    "start": "105680",
    "end": "106880"
  },
  {
    "text": "is still not formed is that",
    "start": "106880",
    "end": "110479"
  },
  {
    "text": "the main problem occurs in data",
    "start": "110479",
    "end": "114479"
  },
  {
    "text": "decoupling and fragmentation management",
    "start": "114479",
    "end": "119920"
  },
  {
    "text": "so we need a solution",
    "start": "119920",
    "end": "123759"
  },
  {
    "text": "a low risk solution the most",
    "start": "123759",
    "end": "127600"
  },
  {
    "text": "horrible things to any company is moving",
    "start": "127600",
    "end": "130800"
  },
  {
    "text": "data",
    "start": "130800",
    "end": "132160"
  },
  {
    "text": "the risks are high and",
    "start": "132160",
    "end": "136040"
  },
  {
    "text": "responsibilities are difficult to",
    "start": "136040",
    "end": "138480"
  },
  {
    "text": "clarify",
    "start": "138480",
    "end": "140640"
  },
  {
    "text": "but you have to face the data problems",
    "start": "140640",
    "end": "144800"
  },
  {
    "text": "otherwise the microservice architecture",
    "start": "144800",
    "end": "147920"
  },
  {
    "text": "will never be implemented the solution",
    "start": "147920",
    "end": "152160"
  },
  {
    "text": "we are looking for it is simple just",
    "start": "152160",
    "end": "156080"
  },
  {
    "text": "don't touch my database you can do",
    "start": "156080",
    "end": "158879"
  },
  {
    "text": "whatever you like",
    "start": "158879",
    "end": "161760"
  },
  {
    "text": "so we need a data supply planning",
    "start": "161760",
    "end": "165680"
  },
  {
    "text": "strategy",
    "start": "165680",
    "end": "166720"
  },
  {
    "text": "for microservices",
    "start": "166720",
    "end": "171840"
  },
  {
    "start": "171000",
    "end": "227000"
  },
  {
    "text": "now think of the problems",
    "start": "171840",
    "end": "175280"
  },
  {
    "text": "we may encounter while transforming",
    "start": "175280",
    "end": "179280"
  },
  {
    "text": "from shared database to database per",
    "start": "179280",
    "end": "182840"
  },
  {
    "text": "service",
    "start": "182840",
    "end": "184080"
  },
  {
    "text": "yes we all talk about database per",
    "start": "184080",
    "end": "187920"
  },
  {
    "text": "service",
    "start": "187920",
    "end": "188720"
  },
  {
    "text": "in the microservice architecture",
    "start": "188720",
    "end": "192560"
  },
  {
    "text": "how to decouple existing data",
    "start": "192560",
    "end": "196480"
  },
  {
    "text": "with low risk how",
    "start": "196480",
    "end": "199599"
  },
  {
    "text": "to avoid performance impact",
    "start": "199599",
    "end": "203280"
  },
  {
    "text": "like round trip issues data exchange",
    "start": "203280",
    "end": "207360"
  },
  {
    "text": "across services it can't be done",
    "start": "207360",
    "end": "211760"
  },
  {
    "text": "in one step so what it's the",
    "start": "211760",
    "end": "215720"
  },
  {
    "text": "transformation plan",
    "start": "215720",
    "end": "219040"
  },
  {
    "text": "what is the data management",
    "start": "219040",
    "end": "222000"
  },
  {
    "text": "transformation plan",
    "start": "222000",
    "end": "227680"
  },
  {
    "start": "227000",
    "end": "310000"
  },
  {
    "text": "here we come to the practical issues",
    "start": "227680",
    "end": "231200"
  },
  {
    "text": "of database per service a large number",
    "start": "231200",
    "end": "235519"
  },
  {
    "text": "of cross service queries when linking",
    "start": "235519",
    "end": "238879"
  },
  {
    "text": "data",
    "start": "238879",
    "end": "239680"
  },
  {
    "text": "because network and surface pressure",
    "start": "239680",
    "end": "244640"
  },
  {
    "text": "direct access to the databases",
    "start": "244640",
    "end": "247840"
  },
  {
    "text": "of other surfaces can solve some",
    "start": "247840",
    "end": "251360"
  },
  {
    "text": "of the former problems but",
    "start": "251360",
    "end": "254799"
  },
  {
    "text": "the anti-pathogen approach will still",
    "start": "254799",
    "end": "257919"
  },
  {
    "text": "cause huge pressure on the databases",
    "start": "257919",
    "end": "262960"
  },
  {
    "text": "mixing the two methods will match up",
    "start": "262960",
    "end": "266080"
  },
  {
    "text": "the system data management logic",
    "start": "266080",
    "end": "269440"
  },
  {
    "text": "in addition to being unable to control",
    "start": "269440",
    "end": "273680"
  },
  {
    "text": "the data access",
    "start": "273680",
    "end": "274639"
  },
  {
    "text": "path and security system performance",
    "start": "274639",
    "end": "278880"
  },
  {
    "text": "will still be a big problem",
    "start": "278880",
    "end": "282880"
  },
  {
    "text": "the challenge is how to keep",
    "start": "282880",
    "end": "286639"
  },
  {
    "text": "database per service while being able to",
    "start": "286639",
    "end": "290160"
  },
  {
    "text": "meet",
    "start": "290160",
    "end": "290720"
  },
  {
    "text": "the requirements of relational data",
    "start": "290720",
    "end": "294000"
  },
  {
    "text": "and high query",
    "start": "294000",
    "end": "297040"
  },
  {
    "text": "and to remain service independent",
    "start": "297040",
    "end": "300880"
  },
  {
    "text": "without impacting other service",
    "start": "300880",
    "end": "303840"
  },
  {
    "text": "performance",
    "start": "303840",
    "end": "304880"
  },
  {
    "text": "at the same time",
    "start": "304880",
    "end": "311280"
  },
  {
    "start": "310000",
    "end": "393000"
  },
  {
    "text": "this is the way to realize the database",
    "start": "311280",
    "end": "314960"
  },
  {
    "text": "per service",
    "start": "314960",
    "end": "317600"
  },
  {
    "text": "it fully follows the specification of a",
    "start": "317759",
    "end": "320800"
  },
  {
    "text": "microservice",
    "start": "320800",
    "end": "322400"
  },
  {
    "text": "to design modeling system with business",
    "start": "322400",
    "end": "326320"
  },
  {
    "text": "oriented",
    "start": "326320",
    "end": "328240"
  },
  {
    "text": "however there are still some problems we",
    "start": "328240",
    "end": "331840"
  },
  {
    "text": "have",
    "start": "331840",
    "end": "333360"
  },
  {
    "text": "first how to manage",
    "start": "333360",
    "end": "336400"
  },
  {
    "text": "when there are too many programs for",
    "start": "336400",
    "end": "338960"
  },
  {
    "text": "data",
    "start": "338960",
    "end": "339759"
  },
  {
    "text": "retrieval and synchronization",
    "start": "339759",
    "end": "343600"
  },
  {
    "text": "every new data stream needs",
    "start": "343600",
    "end": "347039"
  },
  {
    "text": "a new customized program which",
    "start": "347039",
    "end": "350479"
  },
  {
    "text": "is quite troublesome to",
    "start": "350479",
    "end": "353520"
  },
  {
    "text": "implement how to ensure",
    "start": "353520",
    "end": "357199"
  },
  {
    "text": "the stability of each data",
    "start": "357199",
    "end": "359840"
  },
  {
    "text": "synchronization job",
    "start": "359840",
    "end": "363120"
  },
  {
    "text": "when you need to create a new data set",
    "start": "363360",
    "end": "366800"
  },
  {
    "text": "and then generate a new virtual table",
    "start": "366800",
    "end": "371280"
  },
  {
    "text": "the loading of source database is",
    "start": "371280",
    "end": "374319"
  },
  {
    "text": "very heavy if you use",
    "start": "374319",
    "end": "377360"
  },
  {
    "text": "event sourcing even store technique",
    "start": "377360",
    "end": "381039"
  },
  {
    "text": "the speed of rebuilding a data set",
    "start": "381039",
    "end": "384560"
  },
  {
    "text": "from the event it's too slow to",
    "start": "384560",
    "end": "388000"
  },
  {
    "text": "rapidly expand",
    "start": "388000",
    "end": "394240"
  },
  {
    "start": "393000",
    "end": "426000"
  },
  {
    "text": "so from the previous analysis",
    "start": "394240",
    "end": "397280"
  },
  {
    "text": "we can know whether the microservice",
    "start": "397280",
    "end": "400720"
  },
  {
    "text": "architecture can be implemented smoothly",
    "start": "400720",
    "end": "404639"
  },
  {
    "text": "the most important keys are one",
    "start": "404639",
    "end": "408400"
  },
  {
    "text": "is the management capability of",
    "start": "408400",
    "end": "411840"
  },
  {
    "text": "messy profession and cage pipeline",
    "start": "411840",
    "end": "415759"
  },
  {
    "text": "the other one is the efficiency",
    "start": "415759",
    "end": "419039"
  },
  {
    "text": "and pipeline decide and deployment",
    "start": "419039",
    "end": "424319"
  },
  {
    "start": "426000",
    "end": "451000"
  },
  {
    "text": "we need to build a data platform",
    "start": "427360",
    "end": "430400"
  },
  {
    "text": "with standardized and unified",
    "start": "430400",
    "end": "434080"
  },
  {
    "text": "management data provision routing and",
    "start": "434080",
    "end": "437039"
  },
  {
    "text": "have a cache",
    "start": "437039",
    "end": "438479"
  },
  {
    "text": "which you can quickly create and restore",
    "start": "438479",
    "end": "442080"
  },
  {
    "text": "virtual tables according to application",
    "start": "442080",
    "end": "445039"
  },
  {
    "text": "changing requirements",
    "start": "445039",
    "end": "451840"
  },
  {
    "start": "451000",
    "end": "531000"
  },
  {
    "text": "that is the data mesh architecture",
    "start": "451840",
    "end": "455520"
  },
  {
    "text": "we are talking about today data demand",
    "start": "455520",
    "end": "458960"
  },
  {
    "text": "driven",
    "start": "458960",
    "end": "459840"
  },
  {
    "text": "by applications needs to be satisfied",
    "start": "459840",
    "end": "464080"
  },
  {
    "text": "by a large amount of data supply chain",
    "start": "464080",
    "end": "468240"
  },
  {
    "text": "we could cheat all databases whether",
    "start": "468240",
    "end": "472000"
  },
  {
    "text": "homogeneous or heterogeneous into",
    "start": "472000",
    "end": "475759"
  },
  {
    "text": "a huge database the objectives are",
    "start": "475759",
    "end": "480720"
  },
  {
    "text": "the application does not need to know",
    "start": "480720",
    "end": "484400"
  },
  {
    "text": "where and how the data comes from",
    "start": "484400",
    "end": "487520"
  },
  {
    "text": "in the system a large",
    "start": "487520",
    "end": "491039"
  },
  {
    "text": "cross-system virtual data system",
    "start": "491039",
    "end": "494639"
  },
  {
    "text": "the data required by the application",
    "start": "494639",
    "end": "498400"
  },
  {
    "text": "is presented as a virtual table",
    "start": "498400",
    "end": "502080"
  },
  {
    "text": "to satisfy efficient data access",
    "start": "502080",
    "end": "506960"
  },
  {
    "text": "no impact to the existing database",
    "start": "506960",
    "end": "510319"
  },
  {
    "text": "systems",
    "start": "510319",
    "end": "512879"
  },
  {
    "text": "the implementation method includes",
    "start": "515120",
    "end": "518240"
  },
  {
    "text": "data virtualization data streaming",
    "start": "518240",
    "end": "522959"
  },
  {
    "text": "data snapshot data cache",
    "start": "522959",
    "end": "526399"
  },
  {
    "text": "and data relay",
    "start": "526399",
    "end": "529440"
  },
  {
    "start": "531000",
    "end": "609000"
  },
  {
    "text": "why we don't use the",
    "start": "533040",
    "end": "536080"
  },
  {
    "text": "traditional solution because",
    "start": "536080",
    "end": "539519"
  },
  {
    "text": "the centralized data management cannot",
    "start": "539519",
    "end": "542480"
  },
  {
    "text": "fulfill the needs",
    "start": "542480",
    "end": "543680"
  },
  {
    "text": "of microservice applications",
    "start": "543680",
    "end": "547360"
  },
  {
    "text": "such solutions are s etl",
    "start": "547360",
    "end": "551920"
  },
  {
    "text": "data virtualization data warehouse",
    "start": "551920",
    "end": "555360"
  },
  {
    "text": "or data lake have do for example",
    "start": "555360",
    "end": "559680"
  },
  {
    "text": "centralized data platform and data",
    "start": "559680",
    "end": "562160"
  },
  {
    "text": "processing architecture",
    "start": "562160",
    "end": "564160"
  },
  {
    "text": "will lead to following drawbacks",
    "start": "564160",
    "end": "567600"
  },
  {
    "text": "data supply pipeline scheduling",
    "start": "567600",
    "end": "570959"
  },
  {
    "text": "flexibility is limited",
    "start": "570959",
    "end": "574320"
  },
  {
    "text": "cross region crosses side cross cloud",
    "start": "574320",
    "end": "577519"
  },
  {
    "text": "network bandwidth",
    "start": "577519",
    "end": "578720"
  },
  {
    "text": "waste low throughput",
    "start": "578720",
    "end": "581839"
  },
  {
    "text": "and high latency the performance banter",
    "start": "581839",
    "end": "584959"
  },
  {
    "text": "net",
    "start": "584959",
    "end": "585839"
  },
  {
    "text": "force on the data processing node",
    "start": "585839",
    "end": "589519"
  },
  {
    "text": "data transformation easily performed too",
    "start": "589519",
    "end": "592880"
  },
  {
    "text": "early",
    "start": "592880",
    "end": "593760"
  },
  {
    "text": "resulting in data unable to be",
    "start": "593760",
    "end": "597200"
  },
  {
    "text": "processed in parallel and",
    "start": "597200",
    "end": "600320"
  },
  {
    "text": "efficiently cached the large performance",
    "start": "600320",
    "end": "604160"
  },
  {
    "text": "impact",
    "start": "604160",
    "end": "604880"
  },
  {
    "text": "on data sources",
    "start": "604880",
    "end": "608000"
  },
  {
    "start": "609000",
    "end": "683000"
  },
  {
    "text": "so the data mesh concept is the right",
    "start": "610399",
    "end": "613760"
  },
  {
    "text": "choice",
    "start": "613760",
    "end": "615519"
  },
  {
    "text": "distributed data management and supply",
    "start": "615519",
    "end": "619279"
  },
  {
    "text": "architecture can meet the needs of",
    "start": "619279",
    "end": "621880"
  },
  {
    "text": "microservices",
    "start": "621880",
    "end": "623440"
  },
  {
    "text": "with the following characteristics",
    "start": "623440",
    "end": "627120"
  },
  {
    "text": "supply data to applications",
    "start": "627120",
    "end": "630240"
  },
  {
    "text": "with a high throughput and low latency",
    "start": "630240",
    "end": "634240"
  },
  {
    "text": "high data scheduling flexibility",
    "start": "634240",
    "end": "639200"
  },
  {
    "text": "proficient data with short tissue path",
    "start": "639200",
    "end": "643120"
  },
  {
    "text": "and least amount of data",
    "start": "643120",
    "end": "646640"
  },
  {
    "text": "data processing work it's distributed",
    "start": "646640",
    "end": "651120"
  },
  {
    "text": "to different systems in parallel",
    "start": "651120",
    "end": "654240"
  },
  {
    "text": "with a microsoft architecture",
    "start": "654240",
    "end": "658000"
  },
  {
    "text": "data does not need to be aggregate",
    "start": "658000",
    "end": "662000"
  },
  {
    "text": "to a system on a specific node",
    "start": "662000",
    "end": "666160"
  },
  {
    "text": "avoiding single point of performance",
    "start": "666160",
    "end": "668640"
  },
  {
    "text": "bottleneck",
    "start": "668640",
    "end": "671120"
  },
  {
    "text": "each data cache pipeline runs",
    "start": "671120",
    "end": "674279"
  },
  {
    "text": "independently and does not interfere",
    "start": "674279",
    "end": "677519"
  },
  {
    "text": "with each other",
    "start": "677519",
    "end": "680480"
  },
  {
    "start": "683000",
    "end": "742000"
  },
  {
    "text": "now let's see how to build",
    "start": "685519",
    "end": "689279"
  },
  {
    "text": "a data mesh infrastructure and how to",
    "start": "689279",
    "end": "692399"
  },
  {
    "text": "use it",
    "start": "692399",
    "end": "694880"
  },
  {
    "text": "a data platform needs to meet a large",
    "start": "698160",
    "end": "701200"
  },
  {
    "text": "number",
    "start": "701200",
    "end": "702000"
  },
  {
    "text": "of data pipelines bi-directional",
    "start": "702000",
    "end": "705279"
  },
  {
    "text": "channels and supply requirements",
    "start": "705279",
    "end": "708959"
  },
  {
    "text": "using data pipeline to control the",
    "start": "708959",
    "end": "712240"
  },
  {
    "text": "flow of data using data",
    "start": "712240",
    "end": "715360"
  },
  {
    "text": "relay cache to ensure",
    "start": "715360",
    "end": "718720"
  },
  {
    "text": "performance and thought put using",
    "start": "718720",
    "end": "721360"
  },
  {
    "text": "container",
    "start": "721360",
    "end": "722480"
  },
  {
    "text": "to achieve agile deployment to meet",
    "start": "722480",
    "end": "725839"
  },
  {
    "text": "application requirements having",
    "start": "725839",
    "end": "729040"
  },
  {
    "text": "expansion",
    "start": "729040",
    "end": "730240"
  },
  {
    "text": "and pipeline performance to reduce",
    "start": "730240",
    "end": "733519"
  },
  {
    "text": "data latency and maximize",
    "start": "733519",
    "end": "736800"
  },
  {
    "text": "thoughtful",
    "start": "736800",
    "end": "739279"
  },
  {
    "start": "742000",
    "end": "798000"
  },
  {
    "text": "this is a showcase of the data mesh",
    "start": "743120",
    "end": "746160"
  },
  {
    "text": "platform",
    "start": "746160",
    "end": "748240"
  },
  {
    "text": "you can quickly provide data",
    "start": "748240",
    "end": "752240"
  },
  {
    "text": "in the form of apis",
    "start": "752240",
    "end": "755519"
  },
  {
    "text": "or even static pages",
    "start": "755519",
    "end": "758639"
  },
  {
    "text": "just three steps to quickly generate",
    "start": "758639",
    "end": "761839"
  },
  {
    "text": "data query api",
    "start": "761839",
    "end": "764560"
  },
  {
    "text": "event data provisioning",
    "start": "764560",
    "end": "767600"
  },
  {
    "text": "caching and building virtual tables",
    "start": "767600",
    "end": "772560"
  },
  {
    "text": "it can offload the pressure of data",
    "start": "772560",
    "end": "775680"
  },
  {
    "text": "warehouse",
    "start": "775680",
    "end": "777600"
  },
  {
    "text": "it can meet the needs of a large",
    "start": "777600",
    "end": "780880"
  },
  {
    "text": "number of external data queries",
    "start": "780880",
    "end": "784639"
  },
  {
    "text": "by cache of optimizations",
    "start": "784639",
    "end": "788800"
  },
  {
    "text": "no coding required you don't need",
    "start": "788800",
    "end": "792079"
  },
  {
    "text": "to write even a single line of program",
    "start": "792079",
    "end": "796880"
  },
  {
    "start": "798000",
    "end": "916000"
  },
  {
    "text": "now let's have a look at some user cases",
    "start": "799680",
    "end": "805040"
  },
  {
    "text": "the first case is about the",
    "start": "805040",
    "end": "808279"
  },
  {
    "text": "implementation efficiency and delay",
    "start": "808279",
    "end": "812079"
  },
  {
    "text": "in data exchange between new",
    "start": "812079",
    "end": "815440"
  },
  {
    "text": "and old systems with the traditional",
    "start": "815440",
    "end": "819519"
  },
  {
    "text": "method",
    "start": "819519",
    "end": "820959"
  },
  {
    "text": "you usually have a program to load data",
    "start": "820959",
    "end": "824800"
  },
  {
    "text": "to a middle file from source database",
    "start": "824800",
    "end": "829440"
  },
  {
    "text": "and another program to pro data",
    "start": "829440",
    "end": "832800"
  },
  {
    "text": "from the middle file to update the",
    "start": "832800",
    "end": "835760"
  },
  {
    "text": "destination database",
    "start": "835760",
    "end": "838800"
  },
  {
    "text": "you may have a schedule a for data query",
    "start": "838800",
    "end": "842959"
  },
  {
    "text": "and schedule b for data insert",
    "start": "842959",
    "end": "846320"
  },
  {
    "text": "so the total exchange time is a",
    "start": "846320",
    "end": "849760"
  },
  {
    "text": "plus b that is the",
    "start": "849760",
    "end": "852800"
  },
  {
    "text": "major factor to cause the delay",
    "start": "852800",
    "end": "856480"
  },
  {
    "text": "however with the data mesh platform",
    "start": "856480",
    "end": "860399"
  },
  {
    "text": "data exchange no longer requires",
    "start": "860399",
    "end": "864000"
  },
  {
    "text": "writing a lot of programs",
    "start": "864000",
    "end": "867199"
  },
  {
    "text": "data exchange will be provided to all",
    "start": "867199",
    "end": "870720"
  },
  {
    "text": "applications",
    "start": "870720",
    "end": "871600"
  },
  {
    "text": "in real time with low latency",
    "start": "871600",
    "end": "875440"
  },
  {
    "text": "data sources no longer need to spend",
    "start": "875440",
    "end": "878480"
  },
  {
    "text": "manpower in time to prepare",
    "start": "878480",
    "end": "881519"
  },
  {
    "text": "data for application design",
    "start": "881519",
    "end": "884880"
  },
  {
    "text": "data source and application sites no",
    "start": "884880",
    "end": "888000"
  },
  {
    "text": "longer need to spend time to",
    "start": "888000",
    "end": "889959"
  },
  {
    "text": "communicating",
    "start": "889959",
    "end": "891199"
  },
  {
    "text": "for data exchange",
    "start": "891199",
    "end": "894560"
  },
  {
    "text": "the problem it can solve",
    "start": "894800",
    "end": "899839"
  },
  {
    "text": "inequation data exchange between",
    "start": "900079",
    "end": "903120"
  },
  {
    "text": "different business systems",
    "start": "903120",
    "end": "906800"
  },
  {
    "text": "in efficient system data exchange",
    "start": "906800",
    "end": "909920"
  },
  {
    "text": "across teams",
    "start": "909920",
    "end": "913839"
  },
  {
    "text": "the second case in-efficient",
    "start": "916959",
    "end": "920959"
  },
  {
    "text": "batch processing and performance impact",
    "start": "920959",
    "end": "925279"
  },
  {
    "text": "batch processing will cause a",
    "start": "925279",
    "end": "928639"
  },
  {
    "text": "momentary high system loading burst",
    "start": "928639",
    "end": "932800"
  },
  {
    "text": "the more data is needed for applications",
    "start": "932800",
    "end": "936880"
  },
  {
    "text": "the heavier the loading on the data",
    "start": "936880",
    "end": "939680"
  },
  {
    "text": "source",
    "start": "939680",
    "end": "940800"
  },
  {
    "text": "including those who access",
    "start": "940800",
    "end": "944399"
  },
  {
    "text": "in exporting the data",
    "start": "944399",
    "end": "948240"
  },
  {
    "text": "with the data mesh platform",
    "start": "948480",
    "end": "952160"
  },
  {
    "text": "data exchange no longer needs to write",
    "start": "952160",
    "end": "955759"
  },
  {
    "text": "multiple programs or provide apis",
    "start": "955759",
    "end": "960560"
  },
  {
    "text": "the data is sent and processed",
    "start": "960560",
    "end": "964240"
  },
  {
    "text": "on a flat rate there is no momentary",
    "start": "964240",
    "end": "967759"
  },
  {
    "text": "performance",
    "start": "967759",
    "end": "968480"
  },
  {
    "text": "impact read data source",
    "start": "968480",
    "end": "971519"
  },
  {
    "text": "once for many profession you can provide",
    "start": "971519",
    "end": "975519"
  },
  {
    "text": "data to many services without",
    "start": "975519",
    "end": "979160"
  },
  {
    "text": "re-querying the data source",
    "start": "979160",
    "end": "982079"
  },
  {
    "text": "even for new services",
    "start": "982079",
    "end": "985759"
  },
  {
    "text": "supported by cage mechanism",
    "start": "985759",
    "end": "989199"
  },
  {
    "text": "multiple applications can be supplied",
    "start": "989199",
    "end": "992240"
  },
  {
    "text": "at the same time without impacting",
    "start": "992240",
    "end": "995519"
  },
  {
    "text": "source",
    "start": "995519",
    "end": "996959"
  },
  {
    "text": "high throughput",
    "start": "996959",
    "end": "1000399"
  },
  {
    "text": "it solves the following issues",
    "start": "1001040",
    "end": "1004880"
  },
  {
    "text": "batch processing of multiple large",
    "start": "1004880",
    "end": "1008079"
  },
  {
    "text": "scale queries multiple",
    "start": "1008079",
    "end": "1011519"
  },
  {
    "text": "business system integration and data",
    "start": "1011519",
    "end": "1014720"
  },
  {
    "text": "exchange and efficiency",
    "start": "1014720",
    "end": "1018480"
  },
  {
    "text": "is extremely poor",
    "start": "1018480",
    "end": "1022000"
  },
  {
    "text": "to many query requirements for a single",
    "start": "1022160",
    "end": "1025038"
  },
  {
    "text": "database",
    "start": "1025039",
    "end": "1027678"
  },
  {
    "text": "the third case",
    "start": "1032000",
    "end": "1034959"
  },
  {
    "text": "aggregation and correlation",
    "start": "1035120",
    "end": "1038640"
  },
  {
    "text": "of multiple data sources",
    "start": "1038640",
    "end": "1041678"
  },
  {
    "text": "often have poor processing efficiency",
    "start": "1041679",
    "end": "1046000"
  },
  {
    "text": "and luck parallel processing capability",
    "start": "1046000",
    "end": "1050480"
  },
  {
    "text": "because of it is not easy to",
    "start": "1050480",
    "end": "1053679"
  },
  {
    "text": "implement every demand",
    "start": "1053679",
    "end": "1057919"
  },
  {
    "text": "and action requires querying",
    "start": "1057919",
    "end": "1061440"
  },
  {
    "text": "the database or fetching data",
    "start": "1061440",
    "end": "1064720"
  },
  {
    "text": "causing our system to be extremely busy",
    "start": "1064720",
    "end": "1070000"
  },
  {
    "text": "only start query aggregation and",
    "start": "1070320",
    "end": "1073520"
  },
  {
    "text": "transform",
    "start": "1073520",
    "end": "1074480"
  },
  {
    "text": "processing when needed which is",
    "start": "1074480",
    "end": "1077600"
  },
  {
    "text": "extremely inefficient",
    "start": "1077600",
    "end": "1080720"
  },
  {
    "text": "out of same data input from different",
    "start": "1080720",
    "end": "1083600"
  },
  {
    "text": "sources",
    "start": "1083600",
    "end": "1084400"
  },
  {
    "text": "will cause a lot of weighting and",
    "start": "1084400",
    "end": "1086960"
  },
  {
    "text": "retries",
    "start": "1086960",
    "end": "1089120"
  },
  {
    "text": "a large number of cross database",
    "start": "1089120",
    "end": "1092160"
  },
  {
    "text": "relational",
    "start": "1092160",
    "end": "1093440"
  },
  {
    "text": "queries produce a large number",
    "start": "1093440",
    "end": "1096960"
  },
  {
    "text": "of round-trip calls again",
    "start": "1096960",
    "end": "1100080"
  },
  {
    "text": "the more data is recalled by",
    "start": "1100080",
    "end": "1102960"
  },
  {
    "text": "applications",
    "start": "1102960",
    "end": "1104320"
  },
  {
    "text": "the heavier the loading on the data",
    "start": "1104320",
    "end": "1106880"
  },
  {
    "text": "source and the more",
    "start": "1106880",
    "end": "1108880"
  },
  {
    "text": "severe in impact on performance",
    "start": "1108880",
    "end": "1113840"
  },
  {
    "text": "after introducing data mesh platform",
    "start": "1114400",
    "end": "1118559"
  },
  {
    "text": "the aggregation and association",
    "start": "1118559",
    "end": "1122080"
  },
  {
    "text": "jobs can be processed parallelly at the",
    "start": "1122080",
    "end": "1125120"
  },
  {
    "text": "same time",
    "start": "1125120",
    "end": "1127120"
  },
  {
    "text": "the final data is ready before the",
    "start": "1127120",
    "end": "1130240"
  },
  {
    "text": "application",
    "start": "1130240",
    "end": "1131120"
  },
  {
    "text": "execution every requirement directory",
    "start": "1131120",
    "end": "1136240"
  },
  {
    "text": "reads the final virtual table nearby",
    "start": "1136240",
    "end": "1140880"
  },
  {
    "text": "the impact of data source will be",
    "start": "1140880",
    "end": "1144000"
  },
  {
    "text": "greatly",
    "start": "1144000",
    "end": "1145039"
  },
  {
    "text": "reduced for benefit of the cache",
    "start": "1145039",
    "end": "1148840"
  },
  {
    "text": "mechanism",
    "start": "1148840",
    "end": "1150160"
  },
  {
    "text": "multiple applications can be supplied",
    "start": "1150160",
    "end": "1153160"
  },
  {
    "text": "concurrently",
    "start": "1153160",
    "end": "1155760"
  },
  {
    "text": "for example we can solve the problems",
    "start": "1155760",
    "end": "1158640"
  },
  {
    "text": "like",
    "start": "1158640",
    "end": "1160400"
  },
  {
    "text": "data integration efficiency and",
    "start": "1160400",
    "end": "1163440"
  },
  {
    "text": "stability",
    "start": "1163440",
    "end": "1164320"
  },
  {
    "text": "required by iot system",
    "start": "1164320",
    "end": "1168160"
  },
  {
    "text": "with multiple signs for",
    "start": "1168160",
    "end": "1172640"
  },
  {
    "text": "processing efficiency of cross-system",
    "start": "1172640",
    "end": "1175840"
  },
  {
    "text": "data integration",
    "start": "1175840",
    "end": "1179120"
  },
  {
    "text": "multi database lock up",
    "start": "1179120",
    "end": "1182720"
  },
  {
    "text": "or performance impact caused by",
    "start": "1182720",
    "end": "1185840"
  },
  {
    "text": "cross system query",
    "start": "1185840",
    "end": "1189200"
  },
  {
    "start": "1190000",
    "end": "1244000"
  },
  {
    "text": "case number four cross cloud data",
    "start": "1191120",
    "end": "1194400"
  },
  {
    "text": "management",
    "start": "1194400",
    "end": "1196160"
  },
  {
    "text": "the common problem must be mentioned",
    "start": "1196160",
    "end": "1198559"
  },
  {
    "text": "here",
    "start": "1198559",
    "end": "1199520"
  },
  {
    "text": "first the network pressure is high",
    "start": "1199520",
    "end": "1203440"
  },
  {
    "text": "second large scale overall system",
    "start": "1203440",
    "end": "1206720"
  },
  {
    "text": "lockup is high and the normal business",
    "start": "1206720",
    "end": "1210400"
  },
  {
    "text": "operations",
    "start": "1210400",
    "end": "1211280"
  },
  {
    "text": "are exactly badly",
    "start": "1211280",
    "end": "1214640"
  },
  {
    "text": "with the data mesh platform we can",
    "start": "1214640",
    "end": "1216799"
  },
  {
    "text": "achieve",
    "start": "1216799",
    "end": "1218840"
  },
  {
    "text": "cross-clouded caching",
    "start": "1218840",
    "end": "1222240"
  },
  {
    "text": "can provide data to applications from",
    "start": "1222240",
    "end": "1225360"
  },
  {
    "text": "the near",
    "start": "1225360",
    "end": "1226080"
  },
  {
    "text": "nodes reduce the",
    "start": "1226080",
    "end": "1229320"
  },
  {
    "text": "dependency between surfaces",
    "start": "1229320",
    "end": "1232480"
  },
  {
    "text": "in the system and avoid system",
    "start": "1232480",
    "end": "1235520"
  },
  {
    "text": "lockout does not affect",
    "start": "1235520",
    "end": "1238880"
  },
  {
    "text": "normal system operations",
    "start": "1238880",
    "end": "1242880"
  },
  {
    "start": "1244000",
    "end": "1642000"
  },
  {
    "text": "here let us see a video demo to show",
    "start": "1245440",
    "end": "1248640"
  },
  {
    "text": "how to transfer data from a",
    "start": "1248640",
    "end": "1251840"
  },
  {
    "text": "oracle db to a mangle db",
    "start": "1251840",
    "end": "1263840"
  },
  {
    "text": "okay that is all the data mesh",
    "start": "1628159",
    "end": "1631919"
  },
  {
    "text": "architecture concept",
    "start": "1631919",
    "end": "1633440"
  },
  {
    "text": "we are talking about today thank you",
    "start": "1633440",
    "end": "1636480"
  },
  {
    "text": "very much for watching",
    "start": "1636480",
    "end": "1638399"
  },
  {
    "text": "see you bye",
    "start": "1638399",
    "end": "1641840"
  }
]