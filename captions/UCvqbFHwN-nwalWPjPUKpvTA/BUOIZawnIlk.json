[
  {
    "text": "alright let's go ahead and get started so this talk is called data without",
    "start": "170",
    "end": "5279"
  },
  {
    "text": "borders it's about using rook storage orchestration at a global scale so my",
    "start": "5279",
    "end": "10620"
  },
  {
    "text": "name is Jarrod watts one of the founders of the rook project and a senior maintainer on it now and I'm also a",
    "start": "10620",
    "end": "17430"
  },
  {
    "text": "founding engineer at a Seattle based startup called up bounds and we are hiring so let's just do go quickly",
    "start": "17430",
    "end": "26430"
  },
  {
    "text": "through some level setting here so why might you want to deploy your storage systems globally and you can also think",
    "start": "26430",
    "end": "33600"
  },
  {
    "text": "about when you're deploying globally you may also be in a multi cloud scenario or configuration as well and so some",
    "start": "33600",
    "end": "40140"
  },
  {
    "text": "reasons you might want to do that there's a number of them but one of the big ones definitely is reliability so when you spread your data out across a",
    "start": "40140",
    "end": "47129"
  },
  {
    "text": "number of data centers regions providers all that sort of stuff you're kind of hedging your bets against failures so",
    "start": "47129",
    "end": "54449"
  },
  {
    "text": "you make sure more resilience towards any one particular provider or region having a catastrophe performance can be",
    "start": "54449",
    "end": "60930"
  },
  {
    "text": "another reason as well when you globally distributed your data if you're aware of where your users are that are consuming",
    "start": "60930",
    "end": "67140"
  },
  {
    "text": "the data you can put that data closer to them and decrease the amount of time that it takes for them to access that",
    "start": "67140",
    "end": "72630"
  },
  {
    "text": "data increase their performance you know cost is obviously a huge one as well where you know if you're if you're",
    "start": "72630",
    "end": "78900"
  },
  {
    "text": "distributing yourself across the globe you can make choices about where you're running and choosing you know optimizing",
    "start": "78900",
    "end": "84930"
  },
  {
    "text": "on cost innovation is interesting because all the different cloud providers they have some really good",
    "start": "84930",
    "end": "90990"
  },
  {
    "text": "engineers and they're consistently cranking out new features something Amazon's I don't know how many hundreds of services they have now but you know",
    "start": "90990",
    "end": "97650"
  },
  {
    "text": "when you're able to run across all these different environments and providers you can start taking advantage of new features that come from them there's a",
    "start": "97650",
    "end": "104280"
  },
  {
    "text": "number of other different reasons as well but you know compliance is important to like perhaps you need to keep your data within one particular",
    "start": "104280",
    "end": "110369"
  },
  {
    "text": "country or one particular region like the EU and some other ones as well but",
    "start": "110369",
    "end": "116100"
  },
  {
    "text": "there's basically there's some reasons that you might want to run your your services or your storage globally or in",
    "start": "116100",
    "end": "121799"
  },
  {
    "text": "multi cloud scenarios we can get through this pretty quickly I think because I'm pretty sure everyone here is fairly",
    "start": "121799",
    "end": "127530"
  },
  {
    "text": "familiar with a lot of these concepts but one thing it's important to note here couple things they",
    "start": "127530",
    "end": "133110"
  },
  {
    "text": "difference between availability and durability so availability is just for just resistance to a temporary downtime",
    "start": "133110",
    "end": "139290"
  },
  {
    "text": "like a data center goes offline if you are highly available then you've got that data available somewhere else and",
    "start": "139290",
    "end": "145110"
  },
  {
    "text": "your clients your consumers requests can be fulfilled from another data center so you didn't lose any of the availability",
    "start": "145110",
    "end": "150870"
  },
  {
    "text": "that you have to service your customers durability is a little bit different though and that means resistance to",
    "start": "150870",
    "end": "156660"
  },
  {
    "text": "total complete permanent loss if you've got enough copies of the data that if",
    "start": "156660",
    "end": "161670"
  },
  {
    "text": "you lose one hard drive or whatever for forever that you have another copy and it's still durable and the data still",
    "start": "161670",
    "end": "168540"
  },
  {
    "text": "exists locality is an interesting one that I wasn't really aware of before starting in this space and so locality",
    "start": "168540",
    "end": "176130"
  },
  {
    "text": "is being aware of geographically where you're located and you can start making decisions when you're aware of your",
    "start": "176130",
    "end": "181500"
  },
  {
    "text": "locality about you know where you're located where people are consuming your data where you might want to move to in",
    "start": "181500",
    "end": "188489"
  },
  {
    "text": "order to decrease the amount of latency for your consumers and then disaster recovery didn't really see the mature",
    "start": "188489",
    "end": "195150"
  },
  {
    "text": "people day because a lot of people the keynotes but the spa David Shaw from Spotify talking about not how he",
    "start": "195150",
    "end": "200549"
  },
  {
    "text": "destroyed one of his kubernetes clusters but it was multiple ones they had",
    "start": "200549",
    "end": "205680"
  },
  {
    "text": "disaster recovery plans in place so they were able to recover from that so his clusters went boom and they had",
    "start": "205680",
    "end": "210959"
  },
  {
    "text": "an answer for now what they recovered it was that was a pretty impressive talk definitely all right so I'm most people",
    "start": "210959",
    "end": "218190"
  },
  {
    "text": "are probably familiar with the Brooke Project but let's get through this quickly here of what is Brooke so Brooke is a cloud native storage",
    "start": "218190",
    "end": "224190"
  },
  {
    "text": "Orchestrator and what that really means is that it extends kubernetes with a bunch of custom types and custom",
    "start": "224190",
    "end": "229769"
  },
  {
    "text": "controllers that do a lot of basically software automation for your storage systems so all these different tasks",
    "start": "229769",
    "end": "236160"
  },
  {
    "text": "like bootstrapping that your storage system configuring it managing it keeping it healthy monitoring it all",
    "start": "236160",
    "end": "242070"
  },
  {
    "text": "those different tasks you know we provide a lot of software automation around those these operational tasks",
    "start": "242070",
    "end": "247320"
  },
  {
    "text": "such that normally humans do those but the real project is built a number of orchestrators or operators that codify",
    "start": "247320",
    "end": "253980"
  },
  {
    "text": "that domain expertise about how to run a distributed complex software this is the",
    "start": "253980",
    "end": "259260"
  },
  {
    "text": "storage system and put it into code to do it automatically for you additionally it's got this framework that can be used",
    "start": "259260",
    "end": "265470"
  },
  {
    "text": "to build or some or multiple storage systems so we started with a single storage solution",
    "start": "265470",
    "end": "270830"
  },
  {
    "text": "in the brook project and now I think we host or support like six or seven with this framework that we've written it is",
    "start": "270830",
    "end": "277340"
  },
  {
    "text": "a CNC F project we donated it to the cloud native computing foundation in January of 2018 and then in September of",
    "start": "277340",
    "end": "283730"
  },
  {
    "text": "last year we were moved to the incubation phase and that's why we get",
    "start": "283730",
    "end": "288800"
  },
  {
    "text": "to have a little flag in our logo all over the place here I'm pretty happy about that so let's make let's just make",
    "start": "288800",
    "end": "294770"
  },
  {
    "text": "a distinction here between control planes and data planes so rook as a",
    "start": "294770",
    "end": "300110"
  },
  {
    "text": "storage Orchestrator it's a control plane it is not the data plane when you want to actually read or write bytes to",
    "start": "300110",
    "end": "307550"
  },
  {
    "text": "your persistent storage you're going through a data plane you're going through the underlying storage provider and contrast rook is more the control",
    "start": "307550",
    "end": "315470"
  },
  {
    "text": "plane so it does those operational tasks of deploying and bootstrapping and configuring and managing the data plane",
    "start": "315470",
    "end": "321710"
  },
  {
    "text": "but rook itself does not it's not on the data path it is not the data plane",
    "start": "321710",
    "end": "327430"
  },
  {
    "text": "therefore that means an implication of that is that rook can go offline for minutes at a time and not affect your",
    "start": "327430",
    "end": "334250"
  },
  {
    "text": "availability of your data because it is the control plane which is separate from the data plane so there's multiple data",
    "start": "334250",
    "end": "340370"
  },
  {
    "text": "planes that I was speaking about that rook performs these orchestration services for and we're gonna get into",
    "start": "340370",
    "end": "345830"
  },
  {
    "text": "some deep dives on some of those there but if an analogy here if you're familiar with sto and envoy is that",
    "start": "345830",
    "end": "351980"
  },
  {
    "text": "that's the exact same relationship where sto is a control plane that manages and configures and sets up the Envoy proxies",
    "start": "351980",
    "end": "358910"
  },
  {
    "text": "and then envoy just all it does is worry about streaming bits around and routing traffic and handling the data so sto",
    "start": "358910",
    "end": "365600"
  },
  {
    "text": "control plane envoys out of plane rook control plane and you know edge of SF",
    "start": "365600",
    "end": "371169"
  },
  {
    "text": "Cassandra cockroach DB etc our data planes so that's an important",
    "start": "371169",
    "end": "377210"
  },
  {
    "text": "distinction to make because you could have different approaches to global scalability and your data plane and in",
    "start": "377210",
    "end": "383600"
  },
  {
    "text": "your control plane so let's first take a look at the data plane approaches so in our data planes at a high level there's",
    "start": "383600",
    "end": "390950"
  },
  {
    "text": "basically two tight different types of architectures here one is a storage system that is natively sort of designed",
    "start": "390950",
    "end": "398660"
  },
  {
    "text": "and Arkan tected to work at a global scale from the very beginning that's just part of its core architecture so edge FS in",
    "start": "398660",
    "end": "405390"
  },
  {
    "text": "cockroach DB or examples of that and then you have a different type of architecture you have a storage system",
    "start": "405390",
    "end": "411540"
  },
  {
    "text": "that works more in a local scale that design and architecture is optimized for a single cluster and then it in order to",
    "start": "411540",
    "end": "418140"
  },
  {
    "text": "do global scalability or global scenarios it works more like a federation type of scenario where it's",
    "start": "418140",
    "end": "424320"
  },
  {
    "text": "it's managing all its data locally and then it'll Fedder a twith other clusters to replicate and mirror its data",
    "start": "424320",
    "end": "429720"
  },
  {
    "text": "outwards so all the examples that i'm about to give you here are from data",
    "start": "429720",
    "end": "435510"
  },
  {
    "text": "plains storage systems that rook does orchestration control playing services",
    "start": "435510",
    "end": "440640"
  },
  {
    "text": "for so the first one is SEF so as I mentioned SEF was the very first storage",
    "start": "440640",
    "end": "446520"
  },
  {
    "text": "system that Brooke started doing orchestration for it's the most stable it has the most contributors in the roof",
    "start": "446520",
    "end": "452550"
  },
  {
    "text": "project we declared it stable in production ready in our out of Nova 0.9",
    "start": "452550",
    "end": "459510"
  },
  {
    "text": "or 1.0 but version 1.0 is out as of a few weeks ago and so stuff is production",
    "start": "459510",
    "end": "464700"
  },
  {
    "text": "ready and declared stable so the the key part here obsessed our architecture is",
    "start": "464700",
    "end": "470010"
  },
  {
    "text": "that it's you know as I mentioned it's for a single local cluster specifically",
    "start": "470010",
    "end": "475170"
  },
  {
    "text": "it's not designed to be natively a global storage system so something that's really good about SEF is that it",
    "start": "475170",
    "end": "481650"
  },
  {
    "text": "has a very strongly consistent storage model so when you are architected to work within a single cluster and you",
    "start": "481650",
    "end": "488940"
  },
  {
    "text": "have you know very close locality to the other nodes in the cluster you have very small latency times sub 5 millisecond",
    "start": "488940",
    "end": "495990"
  },
  {
    "text": "latency times for your for the nodes there you can start doing things that enable high performance and strongly",
    "start": "495990",
    "end": "502800"
  },
  {
    "text": "consistent data so when you write a bite to the Ceph storage system it's needs to",
    "start": "502800",
    "end": "508350"
  },
  {
    "text": "replicate it copy it out to other nodes and replicas in the system and it does that synchronously it will do the writes",
    "start": "508350",
    "end": "515159"
  },
  {
    "text": "to the other copies of the the replicas in the system and only until all of them",
    "start": "515160",
    "end": "520800"
  },
  {
    "text": "have acknowledged that right will it commit and return back to the client saying that your data has been written",
    "start": "520800",
    "end": "526500"
  },
  {
    "text": "it's it's committed it's done so we can do this because it's designed for a single cluster with low latency among",
    "start": "526500",
    "end": "533130"
  },
  {
    "text": "all the notes but another really cool thing about the Ceph architecture is that it's incredibly highly scalable",
    "start": "533130",
    "end": "539610"
  },
  {
    "text": "because it decentralizes the choices about where to place data in the cluster independently each client can make a",
    "start": "539610",
    "end": "546900"
  },
  {
    "text": "decision about where the data is supposed to be located by following a consistent algorithm so you don't have",
    "start": "546900",
    "end": "552600"
  },
  {
    "text": "to go to a centralized bottleneck to say where should I put this fragment where should I put this fragment there's not",
    "start": "552600",
    "end": "557670"
  },
  {
    "text": "this central store that's authoritative for the data goes anybody could do it it's an independent algorithm that each",
    "start": "557670",
    "end": "564360"
  },
  {
    "text": "client can do on their own so it gets a global scale though now really what the point of this talk is",
    "start": "564360",
    "end": "570120"
  },
  {
    "text": "about is that this single cluster we have here we can set up these Federation scenarios where we're doing asynchronous",
    "start": "570120",
    "end": "576240"
  },
  {
    "text": "replication or in other words you describe it is mirroring where we're taking all the blocks or all the objects",
    "start": "576240",
    "end": "581520"
  },
  {
    "text": "that are stored in the Ceph filesystem and we're a synchronous asynchronous lis replicating those out to other clusters",
    "start": "581520",
    "end": "587670"
  },
  {
    "text": "we're not doing rights from the client perspective across all these different clusters we are writing it to the local",
    "start": "587670",
    "end": "594030"
  },
  {
    "text": "cluster and then we're mirroring it out in a federated type of scenario so that really you know enables two scenarios of",
    "start": "594030",
    "end": "601050"
  },
  {
    "text": "like disaster recovery high availability and reliability through that federated type of architecture now HFS this is",
    "start": "601050",
    "end": "608970"
  },
  {
    "text": "another storage system that rook provides control playing orchestration services for and now this in contrast to",
    "start": "608970",
    "end": "615510"
  },
  {
    "text": "SEF is a natively designed system to be globally available so edge' fesses",
    "start": "615510",
    "end": "621360"
  },
  {
    "text": "architecture is based on immutable blocks kind of similar to get and when I",
    "start": "621360",
    "end": "626400"
  },
  {
    "text": "say get I don't mean a blockchain I mean that blocks of data that make up files are immutable and they have so it might",
    "start": "626400",
    "end": "633870"
  },
  {
    "text": "you make a modification to a block and it's globally unique in its version then that modification results in a whole",
    "start": "633870",
    "end": "639720"
  },
  {
    "text": "brand new identity of the block so this gives us some advantages and edge of s that caches on multiple sites that are",
    "start": "639720",
    "end": "646890"
  },
  {
    "text": "making up this this globally distributed cluster are always in a consistent state",
    "start": "646890",
    "end": "651930"
  },
  {
    "text": "and that allows us to have global fault tolerance and global scalability so the terminology used in edgy fest is it's",
    "start": "651930",
    "end": "657780"
  },
  {
    "text": "segmented storage so each site you know like let's say one in Asia one in Europe",
    "start": "657780",
    "end": "663720"
  },
  {
    "text": "one in North America those can all be thought of as segments and then they're stitched together into",
    "start": "663720",
    "end": "669410"
  },
  {
    "text": "a single geo namespace and the component inside a veggie fest that does that is",
    "start": "669410",
    "end": "674899"
  },
  {
    "text": "called an interstate way it's connecting all these segments together into a single namespace so one of the when you",
    "start": "674899",
    "end": "682640"
  },
  {
    "text": "have a globally distributed fallacies be a storage system some you need to make some optimizations to be able to have",
    "start": "682640",
    "end": "688640"
  },
  {
    "text": "clients have good performance still so one of these optimizations that's particularly useful here is a metadata",
    "start": "688640",
    "end": "694850"
  },
  {
    "text": "only mode and so let's say we have one segment here in Asia and one segment",
    "start": "694850",
    "end": "699890"
  },
  {
    "text": "here in North America and so you can enable this metadata only mode where what happens initially is that only the",
    "start": "699890",
    "end": "707480"
  },
  {
    "text": "metadata like the file names the file system structure time stamps file sizes",
    "start": "707480",
    "end": "713450"
  },
  {
    "text": "information like that gets sent across to the other segments and the Geo cluster there and so that enables",
    "start": "713450",
    "end": "719810"
  },
  {
    "text": "clients in other parts of the world to immediately see what files are there what files they can read to write to",
    "start": "719810",
    "end": "725990"
  },
  {
    "text": "make decisions about how they went in and want to interact with the storage system and then if they make a choice since they know what files are there",
    "start": "725990",
    "end": "732260"
  },
  {
    "text": "they want to actually do a read or write operation the data that backs up those",
    "start": "732260",
    "end": "737269"
  },
  {
    "text": "files that we have metadata for can be fetched lazily or on-demand and so this is absolutely critical for enabling",
    "start": "737269",
    "end": "743690"
  },
  {
    "text": "scenarios where remote clients distributed around the globe can start consuming the data as fast as possible",
    "start": "743690",
    "end": "749959"
  },
  {
    "text": "they don't have to wait for the data be transferred they have all the information they need to start making decisions about what data to interact",
    "start": "749959",
    "end": "755810"
  },
  {
    "text": "with and then they can lazily populate the data chunks edge of s also does a",
    "start": "755810",
    "end": "762320"
  },
  {
    "text": "global deduplication as well so saying that all the blocks have unique identities and when you modify a block",
    "start": "762320",
    "end": "767870"
  },
  {
    "text": "it gets a whole brand new identity so this enables you to do deduplication of if you have identical data chunks you",
    "start": "767870",
    "end": "774199"
  },
  {
    "text": "can you can take multiple of them and only just store it once or you know however many times you want to according",
    "start": "774199",
    "end": "779810"
  },
  {
    "text": "to replication that you want to achieve but you don't have to continue having you know tons and tons of copies of",
    "start": "779810",
    "end": "785959"
  },
  {
    "text": "highly popular data you can constrain that down have less copies of them and do less work disaster recovery is kind",
    "start": "785959",
    "end": "792829"
  },
  {
    "text": "of a built-in philosophy of edges globally distributed data system",
    "start": "792829",
    "end": "797920"
  },
  {
    "text": "where if you lose a data chunk on one particular cluster you can just repopulate it from another another particular segment there so your local",
    "start": "797920",
    "end": "804970"
  },
  {
    "text": "caches your local segments your sites will always be populated with the data that may have been lost locally so",
    "start": "804970",
    "end": "811450"
  },
  {
    "text": "cockroach DB rook does control plant orchestration services for cockroach DB as well and cockroach also happens to be",
    "start": "811450",
    "end": "817930"
  },
  {
    "text": "natively designed for global storage so one interesting aspect of cockroaches",
    "start": "817930",
    "end": "822940"
  },
  {
    "text": "architecture though is it has this built-in locality awareness so you know",
    "start": "822940",
    "end": "828820"
  },
  {
    "text": "with cockroach you're not necessarily bound to the data centers of a single cloud provider it's an absolute design",
    "start": "828820",
    "end": "834579"
  },
  {
    "text": "goal from the very beginning in cockroach DB to two steps here one is to",
    "start": "834579",
    "end": "839680"
  },
  {
    "text": "minimize latency so to be able to when you're do your locality aware you can",
    "start": "839680",
    "end": "845500"
  },
  {
    "text": "make decisions about where to put the data to be closer to the users that are actually going to use that data and care about that data but you can also as a",
    "start": "845500",
    "end": "852279"
  },
  {
    "text": "secondary or a complimentary design goal you can avoid sacrificing availability",
    "start": "852279",
    "end": "857860"
  },
  {
    "text": "let's say your users are going to be accessing to that in New York let's say and so to really minimize the latency",
    "start": "857860",
    "end": "864459"
  },
  {
    "text": "there you could put it all in New York but that would be sacrificing availability if New York happens to have",
    "start": "864459",
    "end": "869500"
  },
  {
    "text": "a disaster then you've lost all you can put all your eggs in that basket and you've lost them right so you want to",
    "start": "869500",
    "end": "875470"
  },
  {
    "text": "minimize latency but also don't sacrifice availability you want to have a high number of copies somewhere else",
    "start": "875470",
    "end": "880540"
  },
  {
    "text": "though in case you lose some in the primary zone cockroach TB does uses two",
    "start": "880540",
    "end": "886660"
  },
  {
    "text": "different distributed algorithms to do its magic across its globally distributed storage system",
    "start": "886660",
    "end": "892360"
  },
  {
    "text": "there's the gossip protocol and the raft consensus algorithm so for the gossip protocol that's what the nodes used to",
    "start": "892360",
    "end": "899050"
  },
  {
    "text": "self-organize to talk to each other find out where they are how much storage capacity they have you know where the",
    "start": "899050",
    "end": "905290"
  },
  {
    "text": "data on them resides all that sort of stuff and then raft consensus is basically a means that they use to all",
    "start": "905290",
    "end": "912130"
  },
  {
    "text": "agree upon what replicas exist on them and what state they should be in so Etsy",
    "start": "912130",
    "end": "917319"
  },
  {
    "text": "D which is the backing persistent storage for the kubernetes api server does the exact same thing it uses the",
    "start": "917319",
    "end": "923889"
  },
  {
    "text": "same raft consensus algorithm to make sure that everyone agrees and if somebody doesn't agree about the state of the data it's a specific algorithm to",
    "start": "923889",
    "end": "931250"
  },
  {
    "text": "to consensus and make sure that all the data is in a highly consistent state across the entire globe so just to give",
    "start": "931250",
    "end": "939260"
  },
  {
    "text": "you an example of how cockroach does deals with locality is that when you",
    "start": "939260",
    "end": "945740"
  },
  {
    "text": "start up a cockroach instance you're actually informing it about its locality",
    "start": "945740",
    "end": "950840"
  },
  {
    "text": "information so you can tell it that it's in a particular region a particular zone or a data center or even in a rack or",
    "start": "950840",
    "end": "957650"
  },
  {
    "text": "you know what machine whatever you can tell cockroach where it resides so that",
    "start": "957650",
    "end": "963680"
  },
  {
    "text": "it has this locality awareness and it can make decisions and smart informed decisions about how to move in data",
    "start": "963680",
    "end": "970130"
  },
  {
    "text": "around in the system so the whole goal here of having this locality information",
    "start": "970130",
    "end": "977570"
  },
  {
    "text": "is to increase replica diversity is what it's called and replica diversity means that you the copies and the data you",
    "start": "977570",
    "end": "984920"
  },
  {
    "text": "have you want them to be spread out across the machines that are in different localities so you could have a",
    "start": "984920",
    "end": "990890"
  },
  {
    "text": "replica kicking out let's say three or five on three or five different machines but if they're all in the same area they",
    "start": "990890",
    "end": "997820"
  },
  {
    "text": "have the same locality that's not you're not really doing anything good for for",
    "start": "997820",
    "end": "1002910"
  },
  {
    "text": "durability and availability of your system so increasing replica diversity is a very important goal of cockroaches",
    "start": "1002910",
    "end": "1009370"
  },
  {
    "text": "locality awareness when there is a failure though cockroach can consent",
    "start": "1009370",
    "end": "1014860"
  },
  {
    "text": "temporarily sacrifice replica diversity in favor of replica counts so say that",
    "start": "1014860",
    "end": "1020470"
  },
  {
    "text": "we have you know a number of different copies of the data spread across a",
    "start": "1020470",
    "end": "1025630"
  },
  {
    "text": "certain number of regions and then we lose one you know instead of just saying",
    "start": "1025630",
    "end": "1031569"
  },
  {
    "text": "okay I can't get the replica diversity I want so I won't do anything it's better to make multiple copies within you know",
    "start": "1031569",
    "end": "1037688"
  },
  {
    "text": "a smaller amount of regions it's just that we still have some redundancy in this system and then once that region that field",
    "start": "1037689",
    "end": "1044170"
  },
  {
    "text": "comes back up we can spread the data out again increase the replica diversity and improve our availability in our",
    "start": "1044170",
    "end": "1050650"
  },
  {
    "text": "durability it's you could be whole",
    "start": "1050650",
    "end": "1055810"
  },
  {
    "text": "question to the ending if you mind okay thank you very much I'm sorry so the one",
    "start": "1055810",
    "end": "1062830"
  },
  {
    "text": "do I think was something that's really interesting about Roach is that this replication constraints you said it gives you the",
    "start": "1062830",
    "end": "1069610"
  },
  {
    "text": "ability to to put this this locality",
    "start": "1069610",
    "end": "1074649"
  },
  {
    "text": "awareness on at different levels of the system so we can have a you know at the database level you can have it re the",
    "start": "1074649",
    "end": "1081370"
  },
  {
    "text": "cluster level database level table level even down to the row you can input you",
    "start": "1081370",
    "end": "1086409"
  },
  {
    "text": "know constraints and drive the data in that system to be put into or forced",
    "start": "1086409",
    "end": "1091840"
  },
  {
    "text": "into particular regions so you can kind of have very much tight control over how you want their global data layout or the",
    "start": "1091840",
    "end": "1097779"
  },
  {
    "text": "cockroach system down to individual rows the rows one I believe is an enterprise only feature but I still think it's a",
    "start": "1097779",
    "end": "1103809"
  },
  {
    "text": "very impressive part of their architecture ok so let's move on to control plane approaches so all that",
    "start": "1103809",
    "end": "1110019"
  },
  {
    "text": "time we were talking about the data planes right so now we want to talk about the control plane the system that",
    "start": "1110019",
    "end": "1115240"
  },
  {
    "text": "organizes and orchestrates and manages of the data plane instances and nodes so",
    "start": "1115240",
    "end": "1122620"
  },
  {
    "text": "that's a yeah if we remember that rook is a storage Orchestrator right and so",
    "start": "1122620",
    "end": "1128019"
  },
  {
    "text": "it provides orchestration and control plane services at the level of just a single cluster so if we want to do",
    "start": "1128019",
    "end": "1134830"
  },
  {
    "text": "things at a global scale then we're gonna need something that's more of a global Orchestrator that spans across",
    "start": "1134830",
    "end": "1141250"
  },
  {
    "text": "clusters across clouds and enable actually global scenarios right and",
    "start": "1141250",
    "end": "1147039"
  },
  {
    "text": "automated scenarios at least so this this global Orchestrator it could do",
    "start": "1147039",
    "end": "1152710"
  },
  {
    "text": "things like deploy all of the necessary components for a global data plane like a GFS it could set up all of those",
    "start": "1152710",
    "end": "1159250"
  },
  {
    "text": "interface instances those is GW instances to link all the segments together it can do automated setup of",
    "start": "1159250",
    "end": "1167620"
  },
  {
    "text": "mirroring and replication features for something like Steph that is a local cluster only architecture but we've you",
    "start": "1167620",
    "end": "1174789"
  },
  {
    "text": "have an Orchestrator that spans across all these all these instances or all these clouds and clusters then you can",
    "start": "1174789",
    "end": "1180730"
  },
  {
    "text": "start making those smart decisions about how you want that the data planes to be set up so that they're ready for global",
    "start": "1180730",
    "end": "1187389"
  },
  {
    "text": "scale and global distribution so you know a global control plane would be",
    "start": "1187389",
    "end": "1193870"
  },
  {
    "text": "would it would be the control plane for global storage systems and it would be a to do even more than just setting up and",
    "start": "1193870",
    "end": "1201050"
  },
  {
    "text": "having awareness of locality and making these decisions about where the data should live it could actually do even",
    "start": "1201050",
    "end": "1206480"
  },
  {
    "text": "more interesting stuff that you'd want an operator to do it could you know orchestrate rebalancing of data across",
    "start": "1206480",
    "end": "1213110"
  },
  {
    "text": "the global scale it could automate some disaster recovery scenarios or failover scenarios you know you could do all",
    "start": "1213110",
    "end": "1219920"
  },
  {
    "text": "these sort of smart things when you have this set up here to be able to span all these clouds and create these globally",
    "start": "1219920",
    "end": "1226460"
  },
  {
    "text": "distributed data planes so a critical piece of infrastructure that this type of global storage our construct",
    "start": "1226460",
    "end": "1232660"
  },
  {
    "text": "Orchestrator or control plane would need is a multi cluster or multi cloud control plane and so there's a couple",
    "start": "1232660",
    "end": "1239210"
  },
  {
    "text": "examples of that one of them here is cube bed which is I believe the new name",
    "start": "1239210",
    "end": "1244370"
  },
  {
    "text": "for the Federation v2 effort and so you know this is a control plane and kubernetes that spans across multiple",
    "start": "1244370",
    "end": "1251000"
  },
  {
    "text": "kubernetes clusters and so there's three key parts of its architecture here the templates placement and overrides so",
    "start": "1251000",
    "end": "1257960"
  },
  {
    "text": "templates is how you represent a set of resources they're going to be common across all of the clusters that you have",
    "start": "1257960",
    "end": "1264740"
  },
  {
    "text": "in this federated scenario placement is information you give about where do you want this resource to be placed across",
    "start": "1264740",
    "end": "1271730"
  },
  {
    "text": "these clusters do you want it in cluster one cluster two you know decisions about where the resources will get put to and",
    "start": "1271730",
    "end": "1278570"
  },
  {
    "text": "then you have a set of overrides which is kind of like you know you have rules about putting this particular deployment",
    "start": "1278570",
    "end": "1284960"
  },
  {
    "text": "in cluster 1 and cluster 2 but you can override that with specific configuration for you know oh in this",
    "start": "1284960",
    "end": "1290180"
  },
  {
    "text": "cluster do something a little bit different so you put all these components so these concepts together and you can start to be able to deploy",
    "start": "1290180",
    "end": "1297050"
  },
  {
    "text": "and run services across many kubernetes clusters propagation refers to how from",
    "start": "1297050",
    "end": "1304370"
  },
  {
    "text": "this single control plane do we make decisions and then make those resources actually show up in the other clusters",
    "start": "1304370",
    "end": "1311000"
  },
  {
    "text": "we've got to propagate these placement and scheduling decisions to other clusters so that our target clusters are",
    "start": "1311000",
    "end": "1316190"
  },
  {
    "text": "actually running the services that we want now another you know global",
    "start": "1316190",
    "end": "1321320"
  },
  {
    "text": "Orchestrator a multi cloud Orchestrator is they cross a project called cross plane that's we started an open-source",
    "start": "1321320",
    "end": "1328730"
  },
  {
    "text": "just before cube con in Seattle so about five months ago and so crossplane is it also extends",
    "start": "1328730",
    "end": "1335600"
  },
  {
    "text": "kubernetes and to be able to very similar to what we saw with cube bed to",
    "start": "1335600",
    "end": "1342470"
  },
  {
    "text": "be able to have a single control plane that will span across multiple clouds and clusters but then you know instead",
    "start": "1342470",
    "end": "1349010"
  },
  {
    "text": "of just kubernetes resources it would be able to also deploy infrastructure our applications our platform services etc",
    "start": "1349010",
    "end": "1356120"
  },
  {
    "text": "and make smart decisions about how to globally optimize these placements how we could actually put our services and",
    "start": "1356120",
    "end": "1363050"
  },
  {
    "text": "distribute them and propagate them across all of our different clouds and clusters that we are spanning and in",
    "start": "1363050",
    "end": "1370370"
  },
  {
    "text": "addition to that you know a portable set of resource abstractions so you know the concept of a Postgres database or a my",
    "start": "1370370",
    "end": "1377420"
  },
  {
    "text": "sequel database you know having a support Abul set of resources that can easily be able to deploy all sorts of",
    "start": "1377420",
    "end": "1383780"
  },
  {
    "text": "services and infrastructure etc across all these different clouds and in clusters okay so let's get here towards",
    "start": "1383780",
    "end": "1392240"
  },
  {
    "text": "a demo here and this is a bit of a busy slide and there's a picture on the next slide that that it gives you a",
    "start": "1392240",
    "end": "1398570"
  },
  {
    "text": "visualization for this so it'll kind of make that a little bit easier so what we're going to do here is we're going to",
    "start": "1398570",
    "end": "1404270"
  },
  {
    "text": "show you know Brooke using the edge FS so Brooke as a control plane using edge of s as the data plane to enable a",
    "start": "1404270",
    "end": "1411110"
  },
  {
    "text": "globally scale the global globally distributed scenario so what I've set up here is a couple of eks clusters in",
    "start": "1411110",
    "end": "1418250"
  },
  {
    "text": "different regions so they're globally distributed and then Brooke does the work in the single clusters the",
    "start": "1418250",
    "end": "1425060"
  },
  {
    "text": "orchestration work in the single clusters to bring up in bootstrap and configure each edge FS clusters in those",
    "start": "1425060",
    "end": "1431540"
  },
  {
    "text": "eks clusters and then each one of those edge FS clusters also exposes an s3 service and then between those edge",
    "start": "1431540",
    "end": "1439160"
  },
  {
    "text": "effects clusters we've got an intersect make gateway link that connects them this is the connection or the link that",
    "start": "1439160",
    "end": "1445130"
  },
  {
    "text": "we need between our different global artists to be our different local segments to make a global segment and a",
    "start": "1445130",
    "end": "1451220"
  },
  {
    "text": "quick note to that that we're doing this with an Amazon scenario but also Google Cloud is actually also supported by",
    "start": "1451220",
    "end": "1456590"
  },
  {
    "text": "Edgefest and Azure work is in progress so at the end of that you'd be able to stitch all of the cloud providers",
    "start": "1456590",
    "end": "1462830"
  },
  {
    "text": "together into a scene geographic namespace so here's the picture as promised I'm not an artist",
    "start": "1462830",
    "end": "1468319"
  },
  {
    "text": "but it does definitely represent when I'm talking about better than that so what we're gonna see here is on the left",
    "start": "1468319",
    "end": "1475940"
  },
  {
    "text": "side of the diagram and we're gonna take a file or an object we're gonna do a put to an s3 bucket and then I have that",
    "start": "1475940",
    "end": "1481249"
  },
  {
    "text": "connected to lambda to subscribe to bucket events that will then just propagate or copy that over to our one",
    "start": "1481249",
    "end": "1488419"
  },
  {
    "text": "of our edge FS clusters that exposes an s3 interface and then we have another edge FS cluster one in the east region",
    "start": "1488419",
    "end": "1495259"
  },
  {
    "text": "and one in the West region that is connected by this intersegmental esters",
    "start": "1495259",
    "end": "1501949"
  },
  {
    "text": "together to be able to stitch together two segments into a globally distributed namespace so this is the pretty picture",
    "start": "1501949",
    "end": "1508909"
  },
  {
    "text": "here or picture let's not use the pretty word and now let's do a demo so before I",
    "start": "1508909",
    "end": "1514129"
  },
  {
    "text": "start this Tim I wanted to give a thanks to Dimitri and Ilya from the IGF s team they definitely gave me a lot of help to",
    "start": "1514129",
    "end": "1520339"
  },
  {
    "text": "get this set up and understand all the concepts so I wanted to make sure that they were included in this alright",
    "start": "1520339",
    "end": "1528589"
  },
  {
    "text": "so here I have a prompt and before you may have seen me walking back and forth",
    "start": "1528589",
    "end": "1533779"
  },
  {
    "text": "in the room here to try to make the fonts big enough to read in the back I also was wearing my glasses that might",
    "start": "1533779",
    "end": "1539209"
  },
  {
    "text": "not have been a good test but I think actually big enough this is not supposed to be big enough this is just my cheat",
    "start": "1539209",
    "end": "1544639"
  },
  {
    "text": "sheet here because I'm really bad at typing and talking at the same time alright and I know that the lights at",
    "start": "1544639",
    "end": "1550669"
  },
  {
    "text": "the top of the screen or a little bit bright and we can't dim those but basically what I'm showing here is this on my laptop my little MacBook here I",
    "start": "1550669",
    "end": "1558919"
  },
  {
    "text": "have a couple of different kubernetes contexts set up so that I'm pointing at two entirely different kubernetes",
    "start": "1558919",
    "end": "1566089"
  },
  {
    "text": "clusters one in the West region and one in the East region and they're both running edge effects so okay so we've",
    "start": "1566089",
    "end": "1573319"
  },
  {
    "text": "got two different Gruber Nettie's clusters set up and let's first look at",
    "start": "1573319",
    "end": "1580639"
  },
  {
    "text": "the East one and so I'm using food control to connect to the east cluster",
    "start": "1580639",
    "end": "1585949"
  },
  {
    "text": "and I'm looking at what's running there in the edge FS namespaces so we have an",
    "start": "1585949",
    "end": "1591079"
  },
  {
    "text": "edge FS operator running the brook edge FS operator running and we've got a number of services",
    "start": "1591079",
    "end": "1596300"
  },
  {
    "text": "like the s3 service the is GW service the edge' fest manager so we have that",
    "start": "1596300",
    "end": "1601610"
  },
  {
    "text": "setup in that cluster and then we have a very familiar or very similar scenario set up in the West Region so I'm just",
    "start": "1601610",
    "end": "1608570"
  },
  {
    "text": "switching my cube control to point to the west region and I'm getting the pods let me see the same Brooke hedge FS",
    "start": "1608570",
    "end": "1613610"
  },
  {
    "text": "operator and the same my you know is GW and s3 pods running as well okay and",
    "start": "1613610",
    "end": "1619010"
  },
  {
    "text": "then now last thing to get started here is let's use the s3 CMD to look at",
    "start": "1619010",
    "end": "1625820"
  },
  {
    "text": "what's currently in the buckets so right now on the east bucket the global bucket",
    "start": "1625820",
    "end": "1631730"
  },
  {
    "text": "I've got nothing and on the west bucket I got nothing so there's nothing in my buckets so let's take a look here at s3",
    "start": "1631730",
    "end": "1640340"
  },
  {
    "text": "and so now we're going to go ahead and upload a file to s3 we're gonna pick",
    "start": "1640340",
    "end": "1647600"
  },
  {
    "text": "this little pixel picture here and I would accept all the defaults and upload",
    "start": "1647600",
    "end": "1654890"
  },
  {
    "text": "that file and good conference Wi-Fi is working thank goodness and so I have",
    "start": "1654890",
    "end": "1662330"
  },
  {
    "text": "uploaded a file into the s3 bucket and so if we remember when I put that file",
    "start": "1662330",
    "end": "1671600"
  },
  {
    "text": "into the s3 bucket a lambda function is executed in response to the bucket",
    "start": "1671600",
    "end": "1676940"
  },
  {
    "text": "create and bucket remove events that then propagates that object over to the s3 service that edge FS is running",
    "start": "1676940",
    "end": "1683630"
  },
  {
    "text": "inside of a cluster and then the is GW link connects the two disparate",
    "start": "1683630",
    "end": "1690820"
  },
  {
    "text": "geographically distributed clusters to copy the data over so what we should see now after all that kicked in is this on",
    "start": "1690820",
    "end": "1699230"
  },
  {
    "text": "both the on the east cluster we should see that same little pixel jet injured",
    "start": "1699230",
    "end": "1706670"
  },
  {
    "text": "that jpg JPEG file and then we should also see the exact same thing on the",
    "start": "1706670",
    "end": "1713000"
  },
  {
    "text": "West we should eventually see that the",
    "start": "1713000",
    "end": "1719420"
  },
  {
    "text": "file on the west cluster as well I was talking to Dmitri in Ilya about the architecture of edge of s and there's a",
    "start": "1719420",
    "end": "1725930"
  },
  {
    "text": "the by default one of the optimizations the optimizations did they do is to have a delay in the propagation in",
    "start": "1725930",
    "end": "1732050"
  },
  {
    "text": "order to be able to batch up opera files and objects that you want to copy across",
    "start": "1732050",
    "end": "1737600"
  },
  {
    "text": "so let's see if it's going through now cool so it is on the west side now god",
    "start": "1737600",
    "end": "1747370"
  },
  {
    "text": "yeah and so I think that that's a configurable tunable parameter you can turn that delay off completely",
    "start": "1747370",
    "end": "1753110"
  },
  {
    "text": "but I left the defaults on there so it tries to get as many fouls as they can and with a delay and then batch them all",
    "start": "1753110",
    "end": "1759170"
  },
  {
    "text": "up and send them over the wire in one big bundle instead of opening and closing connections over and over so",
    "start": "1759170",
    "end": "1765110"
  },
  {
    "text": "that's a by design and I don't even on even lying about that that's the best part about it ok so then I'm just doing",
    "start": "1765110",
    "end": "1773240"
  },
  {
    "text": "a CD over to my desktop and then I'm gonna use the s3 CMD command to do a get operation on from the West cluster to go",
    "start": "1773240",
    "end": "1782390"
  },
  {
    "text": "ahead and download the little file that we first started in s3 and then went to",
    "start": "1782390",
    "end": "1789200"
  },
  {
    "text": "our one of our edifice clusters and then over to our other edge of s cluster so on my desktop we should see that the",
    "start": "1789200",
    "end": "1796040"
  },
  {
    "text": "file is back and we it's a little pixel file of this mug here so it's not a very",
    "start": "1796040",
    "end": "1801860"
  },
  {
    "text": "very important file or anything like that but it is gone the full round-trip from all my laptop uploaded to s3",
    "start": "1801860",
    "end": "1809870"
  },
  {
    "text": "through lambda to edge of s cluster one in the east region and then across with",
    "start": "1809870",
    "end": "1815240"
  },
  {
    "text": "is GW to the edge of s cluster orchestrated by rook in the West region",
    "start": "1815240",
    "end": "1820310"
  },
  {
    "text": "and then downloaded back to my laptop so that's you can imagine useful scenarios",
    "start": "1820310",
    "end": "1826940"
  },
  {
    "text": "instead of uploading a pixelated picture of my face but they are the data this globally distributed cluster across",
    "start": "1826940",
    "end": "1833390"
  },
  {
    "text": "multiple regions and multiple areas of the globe stitched together with storage orchestration services for availability",
    "start": "1833390",
    "end": "1840680"
  },
  {
    "text": "reliability etc is basically a reality now so Brooke in the cross plane project",
    "start": "1840680",
    "end": "1849020"
  },
  {
    "text": "that I mentioned to you know maintainer on both of those they are open-source projects Brooke as the CN CF project and you know",
    "start": "1849020",
    "end": "1856520"
  },
  {
    "text": "they're both community driven the communities are both growing for both of them interactive on slack active on github",
    "start": "1856520",
    "end": "1862670"
  },
  {
    "text": "happy to have new users file issues test out the services even contributors as",
    "start": "1862670",
    "end": "1868700"
  },
  {
    "text": "well the Brooke project has more than 150 contributors now so you know that's",
    "start": "1868700",
    "end": "1874040"
  },
  {
    "text": "let's keep growing it and keep building cool stuff like this and the last thing is that there are more sessions about",
    "start": "1874040",
    "end": "1880580"
  },
  {
    "text": "rook here at coupon I'm not in presentation mode how can you look at slides if it's not full screen so we",
    "start": "1880580",
    "end": "1887660"
  },
  {
    "text": "have some more Brooke sessions here you will notice that the deep dive into rook is this very same day in 15 minutes and",
    "start": "1887660",
    "end": "1895490"
  },
  {
    "text": "so I was the lucky recipients of a scheduling decision by the cube con committee to do back-to-back talks so I",
    "start": "1895490",
    "end": "1902150"
  },
  {
    "text": "actually have to shut down my laptop run over to g3 wherever that is and we will",
    "start": "1902150",
    "end": "1908750"
  },
  {
    "text": "be showing up some more stuff and rook in just a few minutes and then right after that the CNC F has a booth in the",
    "start": "1908750",
    "end": "1914750"
  },
  {
    "text": "sponsor showcase there that they're calling the answer bar now it's sort of like a meet the maintainer session where",
    "start": "1914750",
    "end": "1919850"
  },
  {
    "text": "the rook maintainer project maintainers will be there to be able to answer questions and talk about more stuff so why we don't have much time for",
    "start": "1919850",
    "end": "1925580"
  },
  {
    "text": "questions right now there will be the opportunity to go check out the deep dive right now and to also meet the rest",
    "start": "1925580",
    "end": "1932030"
  },
  {
    "text": "of the maintainer team at the CN CF answer bar and later on there's more local talks today too so that's four",
    "start": "1932030",
    "end": "1937880"
  },
  {
    "text": "things about rook if you didn't get rook enough right now for more so thank you very much I appreciate it guys",
    "start": "1937880",
    "end": "1943920"
  },
  {
    "text": "[Applause]",
    "start": "1943920",
    "end": "1949689"
  }
]