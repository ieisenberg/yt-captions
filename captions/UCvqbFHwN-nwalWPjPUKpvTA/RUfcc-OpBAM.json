[
  {
    "text": "hello everyone welcome to our session on",
    "start": "0",
    "end": "2639"
  },
  {
    "text": "crack the fast cold start and the",
    "start": "2639",
    "end": "5200"
  },
  {
    "text": "scalability bottleneck",
    "start": "5200",
    "end": "8719"
  },
  {
    "text": "my name is kaiser zhang along with me is",
    "start": "10160",
    "end": "13120"
  },
  {
    "text": "ree zhang we both work in the cloud",
    "start": "13120",
    "end": "16080"
  },
  {
    "text": "native area at intel's",
    "start": "16080",
    "end": "18880"
  },
  {
    "text": "central software engineering team",
    "start": "18880",
    "end": "22880"
  },
  {
    "text": "and here's what we will cover in today's",
    "start": "24720",
    "end": "27519"
  },
  {
    "text": "presentation",
    "start": "27519",
    "end": "28880"
  },
  {
    "text": "first we will give a brief overview on",
    "start": "28880",
    "end": "32078"
  },
  {
    "text": "the first and the major challenges faced",
    "start": "32079",
    "end": "35280"
  },
  {
    "text": "by current fast providers",
    "start": "35280",
    "end": "38559"
  },
  {
    "text": "then we will go through the steps",
    "start": "38559",
    "end": "40480"
  },
  {
    "text": "involved in a fast function called start",
    "start": "40480",
    "end": "43200"
  },
  {
    "text": "process and analyze which steps",
    "start": "43200",
    "end": "46079"
  },
  {
    "text": "contribute the most to the code start",
    "start": "46079",
    "end": "48800"
  },
  {
    "text": "latency",
    "start": "48800",
    "end": "50239"
  },
  {
    "text": "after that we will deep dive into a new",
    "start": "50239",
    "end": "53199"
  },
  {
    "text": "approach of creating a function instance",
    "start": "53199",
    "end": "56239"
  },
  {
    "text": "from a snapshot",
    "start": "56239",
    "end": "58399"
  },
  {
    "text": "we will also talk a little bit about the",
    "start": "58399",
    "end": "60960"
  },
  {
    "text": "auto scaling bottleneck",
    "start": "60960",
    "end": "62960"
  },
  {
    "text": "and our approach of scanning out new",
    "start": "62960",
    "end": "65600"
  },
  {
    "text": "function instances",
    "start": "65600",
    "end": "67360"
  },
  {
    "text": "inside of existing microvia",
    "start": "67360",
    "end": "70479"
  },
  {
    "text": "last we will show our test result and",
    "start": "70479",
    "end": "73119"
  },
  {
    "text": "compare the code start latency between",
    "start": "73119",
    "end": "75439"
  },
  {
    "text": "existing way of starting a function",
    "start": "75439",
    "end": "78000"
  },
  {
    "text": "instance",
    "start": "78000",
    "end": "79040"
  },
  {
    "text": "versus our snapshot based way of",
    "start": "79040",
    "end": "81680"
  },
  {
    "text": "starting a function instance",
    "start": "81680",
    "end": "85799"
  },
  {
    "text": "um before i deep dive into a snapshot",
    "start": "87920",
    "end": "91520"
  },
  {
    "text": "based way of starting a function",
    "start": "91520",
    "end": "93520"
  },
  {
    "text": "instance",
    "start": "93520",
    "end": "94479"
  },
  {
    "text": "i would like to first",
    "start": "94479",
    "end": "96240"
  },
  {
    "text": "set up the context for the discussion",
    "start": "96240",
    "end": "99680"
  },
  {
    "text": "so what is fast",
    "start": "99680",
    "end": "101840"
  },
  {
    "text": "fast is an event driven",
    "start": "101840",
    "end": "103799"
  },
  {
    "text": "architecture-based computing service",
    "start": "103799",
    "end": "106479"
  },
  {
    "text": "which allocates micro vms or containers",
    "start": "106479",
    "end": "110000"
  },
  {
    "text": "on the mount to run the developer's",
    "start": "110000",
    "end": "112720"
  },
  {
    "text": "function code in response to event",
    "start": "112720",
    "end": "115439"
  },
  {
    "text": "requests",
    "start": "115439",
    "end": "116960"
  },
  {
    "text": "fast provides three key features",
    "start": "116960",
    "end": "119680"
  },
  {
    "text": "the first feature is automatic on-demand",
    "start": "119680",
    "end": "123119"
  },
  {
    "text": "instantiation of function instances to",
    "start": "123119",
    "end": "125759"
  },
  {
    "text": "run the function code upon a trigger",
    "start": "125759",
    "end": "128080"
  },
  {
    "text": "event",
    "start": "128080",
    "end": "129360"
  },
  {
    "text": "the second feature is on demand auto",
    "start": "129360",
    "end": "131920"
  },
  {
    "text": "scaling out and in",
    "start": "131920",
    "end": "133920"
  },
  {
    "text": "no need for the user to plan for peak",
    "start": "133920",
    "end": "136319"
  },
  {
    "text": "traffic",
    "start": "136319",
    "end": "137280"
  },
  {
    "text": "and the third feature is utility based",
    "start": "137280",
    "end": "140080"
  },
  {
    "text": "bidding the user never pays for idle",
    "start": "140080",
    "end": "143040"
  },
  {
    "text": "time",
    "start": "143040",
    "end": "145439"
  },
  {
    "text": "and fun okay sorry it's code too much",
    "start": "145680",
    "end": "149040"
  },
  {
    "text": "um fast is said to be the future of",
    "start": "149040",
    "end": "151680"
  },
  {
    "text": "cloud computing",
    "start": "151680",
    "end": "153360"
  },
  {
    "text": "it is gaining a lot of momentum in the",
    "start": "153360",
    "end": "155519"
  },
  {
    "text": "industry",
    "start": "155519",
    "end": "156959"
  },
  {
    "text": "the diagrams on the right",
    "start": "156959",
    "end": "159360"
  },
  {
    "text": "are sourced from data doc",
    "start": "159360",
    "end": "162080"
  },
  {
    "text": "the top diagram shows the percentage of",
    "start": "162080",
    "end": "164640"
  },
  {
    "text": "organizations using fuss provided by aws",
    "start": "164640",
    "end": "169040"
  },
  {
    "text": "on seo and google cloud",
    "start": "169040",
    "end": "172000"
  },
  {
    "text": "at least one in five organizations is",
    "start": "172000",
    "end": "175120"
  },
  {
    "text": "adopting fast",
    "start": "175120",
    "end": "176959"
  },
  {
    "text": "and the bottom diagram shows the average",
    "start": "176959",
    "end": "179840"
  },
  {
    "text": "daily invocations plan the function",
    "start": "179840",
    "end": "182400"
  },
  {
    "text": "index from 2019 to 2021",
    "start": "182400",
    "end": "186720"
  },
  {
    "text": "the lambda functions are evoked 3.5",
    "start": "186720",
    "end": "189599"
  },
  {
    "text": "times more often in 2021 than in 2019",
    "start": "189599",
    "end": "194959"
  },
  {
    "text": "and to support multi-tenancy and",
    "start": "194959",
    "end": "196879"
  },
  {
    "text": "security functions are usually run",
    "start": "196879",
    "end": "199519"
  },
  {
    "text": "inside a micro vm like sandbox",
    "start": "199519",
    "end": "203760"
  },
  {
    "text": "advance provides a lot of benefits to",
    "start": "203760",
    "end": "206080"
  },
  {
    "text": "the user for example the users do not",
    "start": "206080",
    "end": "209440"
  },
  {
    "text": "need to manage any infrastructure since",
    "start": "209440",
    "end": "212480"
  },
  {
    "text": "the first platform will take care of",
    "start": "212480",
    "end": "215120"
  },
  {
    "text": "when and how to create a function micro",
    "start": "215120",
    "end": "217760"
  },
  {
    "text": "vm",
    "start": "217760",
    "end": "219040"
  },
  {
    "text": "the fast platform will manage auto",
    "start": "219040",
    "end": "221040"
  },
  {
    "text": "scaling out and in to meet the peak",
    "start": "221040",
    "end": "224480"
  },
  {
    "text": "value of event traffic",
    "start": "224480",
    "end": "226400"
  },
  {
    "text": "the users only pay per usage",
    "start": "226400",
    "end": "229360"
  },
  {
    "text": "the fast platform will not charge for",
    "start": "229360",
    "end": "231680"
  },
  {
    "text": "the micro vm resource after the user's",
    "start": "231680",
    "end": "234239"
  },
  {
    "text": "function completes execution",
    "start": "234239",
    "end": "236640"
  },
  {
    "text": "and with all these benefits it also",
    "start": "236640",
    "end": "238959"
  },
  {
    "text": "brings some challenges",
    "start": "238959",
    "end": "240959"
  },
  {
    "text": "one of the challenges is is the code",
    "start": "240959",
    "end": "243200"
  },
  {
    "text": "start latency",
    "start": "243200",
    "end": "244959"
  },
  {
    "text": "code start latency refers to the time it",
    "start": "244959",
    "end": "247840"
  },
  {
    "text": "takes the fast platform to create a new",
    "start": "247840",
    "end": "251120"
  },
  {
    "text": "function micro vm city out properly load",
    "start": "251120",
    "end": "254799"
  },
  {
    "text": "the function language runtime and get",
    "start": "254799",
    "end": "257199"
  },
  {
    "text": "the function manager ready to start the",
    "start": "257199",
    "end": "259359"
  },
  {
    "text": "function execution",
    "start": "259359",
    "end": "261519"
  },
  {
    "text": "if your function has been scaled down to",
    "start": "261519",
    "end": "264000"
  },
  {
    "text": "zero it can take a few seconds to get a",
    "start": "264000",
    "end": "266960"
  },
  {
    "text": "new function instance ready to serve",
    "start": "266960",
    "end": "270160"
  },
  {
    "text": "the other 10 point is the speed of auto",
    "start": "270160",
    "end": "272880"
  },
  {
    "text": "scaling in response to burst traffic",
    "start": "272880",
    "end": "276160"
  },
  {
    "text": "scaling up many new function instances",
    "start": "276160",
    "end": "279040"
  },
  {
    "text": "in seconds",
    "start": "279040",
    "end": "280320"
  },
  {
    "text": "it's really hard to do for the obvious",
    "start": "280320",
    "end": "282880"
  },
  {
    "text": "reason that it takes time to co-start",
    "start": "282880",
    "end": "286240"
  },
  {
    "text": "all these new function instances and get",
    "start": "286240",
    "end": "288880"
  },
  {
    "text": "them ready to start accept traffic",
    "start": "288880",
    "end": "293120"
  },
  {
    "text": "on this diagram in the slide shows the",
    "start": "294000",
    "end": "297199"
  },
  {
    "text": "steps involved in the function startup",
    "start": "297199",
    "end": "300000"
  },
  {
    "text": "process",
    "start": "300000",
    "end": "301520"
  },
  {
    "text": "in a container this",
    "start": "301520",
    "end": "303759"
  },
  {
    "text": "this process is you know uh is in the",
    "start": "303759",
    "end": "305919"
  },
  {
    "text": "container d context",
    "start": "305919",
    "end": "308080"
  },
  {
    "text": "and let's go through each of the steps",
    "start": "308080",
    "end": "310560"
  },
  {
    "text": "so when the event trigger comes",
    "start": "310560",
    "end": "313199"
  },
  {
    "text": "um the container v will pull the",
    "start": "313199",
    "end": "315039"
  },
  {
    "text": "function image from a remote registry if",
    "start": "315039",
    "end": "317919"
  },
  {
    "text": "the image is not at the nodes local disk",
    "start": "317919",
    "end": "321600"
  },
  {
    "text": "then the container d will set up the",
    "start": "321600",
    "end": "323440"
  },
  {
    "text": "root file system and start the runtime",
    "start": "323440",
    "end": "326160"
  },
  {
    "text": "machine component",
    "start": "326160",
    "end": "328160"
  },
  {
    "text": "when the runtime stream component starts",
    "start": "328160",
    "end": "330320"
  },
  {
    "text": "to run it will set up the ci network for",
    "start": "330320",
    "end": "333600"
  },
  {
    "text": "the micro vm and then create the micro",
    "start": "333600",
    "end": "336320"
  },
  {
    "text": "vm",
    "start": "336320",
    "end": "337440"
  },
  {
    "text": "which serves as the running environment",
    "start": "337440",
    "end": "339840"
  },
  {
    "text": "for the function instance",
    "start": "339840",
    "end": "343120"
  },
  {
    "text": "then the micro vm kernel will be boot up",
    "start": "343120",
    "end": "346000"
  },
  {
    "text": "and some user space components of the",
    "start": "346000",
    "end": "348160"
  },
  {
    "text": "micro vm will be initialized",
    "start": "348160",
    "end": "350880"
  },
  {
    "text": "after that a container will be created",
    "start": "350880",
    "end": "354000"
  },
  {
    "text": "now the run c component will take over",
    "start": "354000",
    "end": "356240"
  },
  {
    "text": "and start loading the language runtime",
    "start": "356240",
    "end": "359039"
  },
  {
    "text": "so if the function code is written in",
    "start": "359039",
    "end": "361039"
  },
  {
    "text": "java the java runtime and jvm will be",
    "start": "361039",
    "end": "364160"
  },
  {
    "text": "loaded if the function code is written",
    "start": "364160",
    "end": "366880"
  },
  {
    "text": "in python the python interpreter will be",
    "start": "366880",
    "end": "369600"
  },
  {
    "text": "loaded",
    "start": "369600",
    "end": "370720"
  },
  {
    "text": "etc",
    "start": "370720",
    "end": "372160"
  },
  {
    "text": "on each fast platform url has a function",
    "start": "372160",
    "end": "375360"
  },
  {
    "text": "manager component",
    "start": "375360",
    "end": "377120"
  },
  {
    "text": "which will be the first program to run",
    "start": "377120",
    "end": "380479"
  },
  {
    "text": "in the newly created container and this",
    "start": "380479",
    "end": "383120"
  },
  {
    "text": "function manager will then",
    "start": "383120",
    "end": "385039"
  },
  {
    "text": "invoke",
    "start": "385039",
    "end": "386639"
  },
  {
    "text": "and execute on the user's function",
    "start": "386639",
    "end": "391280"
  },
  {
    "text": "um so a few mechanisms",
    "start": "393360",
    "end": "396400"
  },
  {
    "text": "have are being used by current fast",
    "start": "396400",
    "end": "398880"
  },
  {
    "text": "providers to reduce the cost start",
    "start": "398880",
    "end": "400960"
  },
  {
    "text": "latency",
    "start": "400960",
    "end": "402080"
  },
  {
    "text": "for example some fast platform will not",
    "start": "402080",
    "end": "404880"
  },
  {
    "text": "delete a function running instance after",
    "start": "404880",
    "end": "407520"
  },
  {
    "text": "it finishes",
    "start": "407520",
    "end": "408639"
  },
  {
    "text": "its execution",
    "start": "408639",
    "end": "410160"
  },
  {
    "text": "instead",
    "start": "410160",
    "end": "411120"
  },
  {
    "text": "instead it will keep the function run in",
    "start": "411120",
    "end": "413759"
  },
  {
    "text": "idle state for a state extended period",
    "start": "413759",
    "end": "417360"
  },
  {
    "text": "of time",
    "start": "417360",
    "end": "418639"
  },
  {
    "text": "for example for 15 minutes",
    "start": "418639",
    "end": "420720"
  },
  {
    "text": "hopefully to catch the next trigger",
    "start": "420720",
    "end": "422960"
  },
  {
    "text": "event",
    "start": "422960",
    "end": "424000"
  },
  {
    "text": "so when the next trigger event comes the",
    "start": "424000",
    "end": "426240"
  },
  {
    "text": "function that runs in the idle state can",
    "start": "426240",
    "end": "428560"
  },
  {
    "text": "start serve the traffic without going",
    "start": "428560",
    "end": "430960"
  },
  {
    "text": "through the cold start cycle",
    "start": "430960",
    "end": "433680"
  },
  {
    "text": "but this mechanism introduces idle cost",
    "start": "433680",
    "end": "436720"
  },
  {
    "text": "which is not good",
    "start": "436720",
    "end": "438639"
  },
  {
    "text": "in this presentation",
    "start": "438639",
    "end": "440720"
  },
  {
    "text": "we will",
    "start": "440720",
    "end": "442319"
  },
  {
    "text": "introduce a new snapshot based mechanism",
    "start": "442319",
    "end": "446080"
  },
  {
    "text": "to reduce the cold start latency",
    "start": "446080",
    "end": "449360"
  },
  {
    "text": "we can see that step 1 through step 10",
    "start": "449360",
    "end": "453120"
  },
  {
    "text": "all contribute to the code start latency",
    "start": "453120",
    "end": "456400"
  },
  {
    "text": "among all these steps we found out that",
    "start": "456400",
    "end": "459199"
  },
  {
    "text": "step 1 takes a lot of time and step 5",
    "start": "459199",
    "end": "462479"
  },
  {
    "text": "through step 10 also takes a lot of time",
    "start": "462479",
    "end": "465919"
  },
  {
    "text": "of course if the function image is",
    "start": "465919",
    "end": "467759"
  },
  {
    "text": "already loaded on the local disk of the",
    "start": "467759",
    "end": "470160"
  },
  {
    "text": "node on due to a previous run of the",
    "start": "470160",
    "end": "472960"
  },
  {
    "text": "same function then step 1 through step 3",
    "start": "472960",
    "end": "476319"
  },
  {
    "text": "can be skipped",
    "start": "476319",
    "end": "478400"
  },
  {
    "text": "so in a new mechanism",
    "start": "478400",
    "end": "480800"
  },
  {
    "text": "step five three step ten will be",
    "start": "480800",
    "end": "483039"
  },
  {
    "text": "replaced by a single step",
    "start": "483039",
    "end": "485919"
  },
  {
    "text": "and that is instead of going through",
    "start": "485919",
    "end": "488479"
  },
  {
    "text": "step five",
    "start": "488479",
    "end": "489759"
  },
  {
    "text": "three step ten to create a new function",
    "start": "489759",
    "end": "492240"
  },
  {
    "text": "instance",
    "start": "492240",
    "end": "493520"
  },
  {
    "text": "a new mechanism will create every new",
    "start": "493520",
    "end": "496400"
  },
  {
    "text": "function instance from that function's",
    "start": "496400",
    "end": "499039"
  },
  {
    "text": "snapshot",
    "start": "499039",
    "end": "500720"
  },
  {
    "text": "and different function code images will",
    "start": "500720",
    "end": "503919"
  },
  {
    "text": "have different function snapshots a",
    "start": "503919",
    "end": "506400"
  },
  {
    "text": "function snapshot was taken at the time",
    "start": "506400",
    "end": "509360"
  },
  {
    "text": "the user registers and uploads its",
    "start": "509360",
    "end": "512399"
  },
  {
    "text": "function code to the fast platform's",
    "start": "512399",
    "end": "515120"
  },
  {
    "text": "platform's code registry",
    "start": "515120",
    "end": "517839"
  },
  {
    "text": "the function snapshot will be saved",
    "start": "517839",
    "end": "519760"
  },
  {
    "text": "together with a function called image in",
    "start": "519760",
    "end": "522000"
  },
  {
    "text": "the fast platforms code registry",
    "start": "522000",
    "end": "526399"
  },
  {
    "text": "you may have question",
    "start": "526399",
    "end": "528880"
  },
  {
    "text": "you may have question on",
    "start": "528880",
    "end": "531839"
  },
  {
    "text": "what is the function snapshot so what we",
    "start": "531839",
    "end": "534880"
  },
  {
    "text": "mean by a function snapshot is a",
    "start": "534880",
    "end": "537920"
  },
  {
    "text": "snapshot of the micro vm's memory and",
    "start": "537920",
    "end": "541279"
  },
  {
    "text": "its virtual hardware states",
    "start": "541279",
    "end": "543760"
  },
  {
    "text": "taken after the function vm",
    "start": "543760",
    "end": "546080"
  },
  {
    "text": "a function micro vm is created",
    "start": "546080",
    "end": "549680"
  },
  {
    "text": "then how do we get the snapshot of a",
    "start": "549680",
    "end": "551839"
  },
  {
    "text": "user function",
    "start": "551839",
    "end": "553200"
  },
  {
    "text": "we will get a snapshot by test running",
    "start": "553200",
    "end": "555680"
  },
  {
    "text": "the function through a whole life cycle",
    "start": "555680",
    "end": "558880"
  },
  {
    "text": "and that is we will take a snapshot of",
    "start": "558880",
    "end": "561600"
  },
  {
    "text": "the function micro vm's memory and",
    "start": "561600",
    "end": "564000"
  },
  {
    "text": "virtual hardware states when the",
    "start": "564000",
    "end": "566480"
  },
  {
    "text": "function finishes",
    "start": "566480",
    "end": "568240"
  },
  {
    "text": "the execution and returns to the idle",
    "start": "568240",
    "end": "570720"
  },
  {
    "text": "state waiting for the next next trigger",
    "start": "570720",
    "end": "573600"
  },
  {
    "text": "event",
    "start": "573600",
    "end": "576600"
  },
  {
    "text": "we experienced some problems when",
    "start": "576640",
    "end": "578959"
  },
  {
    "text": "creating a function instance from its",
    "start": "578959",
    "end": "581519"
  },
  {
    "text": "snapshot",
    "start": "581519",
    "end": "583200"
  },
  {
    "text": "the first problem is that some function",
    "start": "583200",
    "end": "585519"
  },
  {
    "text": "snapshot has some user sensitive data",
    "start": "585519",
    "end": "589200"
  },
  {
    "text": "such as password secrets etc",
    "start": "589200",
    "end": "592560"
  },
  {
    "text": "for security purpose we would not like",
    "start": "592560",
    "end": "595200"
  },
  {
    "text": "the snapshot to contain any user",
    "start": "595200",
    "end": "598080"
  },
  {
    "text": "sensitive data",
    "start": "598080",
    "end": "599839"
  },
  {
    "text": "the second problem is is that some",
    "start": "599839",
    "end": "602560"
  },
  {
    "text": "function snapshot may contain a few",
    "start": "602560",
    "end": "605519"
  },
  {
    "text": "unique ids associated with that specific",
    "start": "605519",
    "end": "609440"
  },
  {
    "text": "function instance created during the",
    "start": "609440",
    "end": "612160"
  },
  {
    "text": "test run",
    "start": "612160",
    "end": "613360"
  },
  {
    "text": "and these unique ids are not portable to",
    "start": "613360",
    "end": "616320"
  },
  {
    "text": "the new function instances",
    "start": "616320",
    "end": "619600"
  },
  {
    "text": "the third problem is that the function",
    "start": "619600",
    "end": "621440"
  },
  {
    "text": "snapshot contains some unique data",
    "start": "621440",
    "end": "624800"
  },
  {
    "text": "associated with a specific with the",
    "start": "624800",
    "end": "627680"
  },
  {
    "text": "specific microsbm instance created",
    "start": "627680",
    "end": "630560"
  },
  {
    "text": "during the test run such as the ip",
    "start": "630560",
    "end": "633040"
  },
  {
    "text": "address of that specific micro vm",
    "start": "633040",
    "end": "636000"
  },
  {
    "text": "and these unique ids are also not",
    "start": "636000",
    "end": "638560"
  },
  {
    "text": "portable to the new function micro vm",
    "start": "638560",
    "end": "642079"
  },
  {
    "text": "the fourth problem is that the function",
    "start": "642079",
    "end": "644000"
  },
  {
    "text": "code package becomes larger due to",
    "start": "644000",
    "end": "646399"
  },
  {
    "text": "snapshot data added on top of the",
    "start": "646399",
    "end": "649120"
  },
  {
    "text": "original function code image",
    "start": "649120",
    "end": "651839"
  },
  {
    "text": "this larger code",
    "start": "651839",
    "end": "653839"
  },
  {
    "text": "package incurs longer loading time",
    "start": "653839",
    "end": "659079"
  },
  {
    "text": "so the solution to address problems 1",
    "start": "660880",
    "end": "663600"
  },
  {
    "text": "and 2 is to take the snapshot at the",
    "start": "663600",
    "end": "666399"
  },
  {
    "text": "earlier time point",
    "start": "666399",
    "end": "668399"
  },
  {
    "text": "instead of taking the snapshot after the",
    "start": "668399",
    "end": "670880"
  },
  {
    "text": "function finishes the execution and",
    "start": "670880",
    "end": "673279"
  },
  {
    "text": "returns to the idle state",
    "start": "673279",
    "end": "675519"
  },
  {
    "text": "you can take the snapshot right after",
    "start": "675519",
    "end": "678079"
  },
  {
    "text": "starting the function platforms function",
    "start": "678079",
    "end": "680399"
  },
  {
    "text": "manager but before it invokes the",
    "start": "680399",
    "end": "683200"
  },
  {
    "text": "function",
    "start": "683200",
    "end": "685680"
  },
  {
    "text": "i think here we have uh",
    "start": "685680",
    "end": "688320"
  },
  {
    "text": "okay i need to go to the",
    "start": "688320",
    "end": "690480"
  },
  {
    "text": "next slide",
    "start": "690480",
    "end": "693600"
  },
  {
    "text": "okay sorry",
    "start": "695839",
    "end": "698480"
  },
  {
    "text": "why this slide does not",
    "start": "698480",
    "end": "700560"
  },
  {
    "text": "scroll down",
    "start": "700560",
    "end": "703440"
  },
  {
    "text": "hold on a second",
    "start": "703440",
    "end": "706320"
  },
  {
    "text": "oh sorry too much",
    "start": "707120",
    "end": "710640"
  },
  {
    "text": "oh here okay sorry um",
    "start": "710720",
    "end": "714560"
  },
  {
    "text": "so here instead of you know taking the",
    "start": "714560",
    "end": "717440"
  },
  {
    "text": "snapshot uh",
    "start": "717440",
    "end": "719760"
  },
  {
    "text": "after the after the function finishes",
    "start": "719760",
    "end": "722320"
  },
  {
    "text": "the execution and the returns to the uh",
    "start": "722320",
    "end": "725680"
  },
  {
    "text": "idle state we can take the snapshot",
    "start": "725680",
    "end": "728240"
  },
  {
    "text": "right after starting the fast platforms",
    "start": "728240",
    "end": "731120"
  },
  {
    "text": "function manager but before it invokes",
    "start": "731120",
    "end": "733600"
  },
  {
    "text": "the function because no user function is",
    "start": "733600",
    "end": "736720"
  },
  {
    "text": "invoked the snapshot will not have any",
    "start": "736720",
    "end": "739360"
  },
  {
    "text": "user sensitive data or any unique ids",
    "start": "739360",
    "end": "742959"
  },
  {
    "text": "associated with a specific",
    "start": "742959",
    "end": "746000"
  },
  {
    "text": "instance",
    "start": "746000",
    "end": "747760"
  },
  {
    "text": "okay",
    "start": "747760",
    "end": "748720"
  },
  {
    "text": "so to address problem 3 we develop a",
    "start": "748720",
    "end": "751760"
  },
  {
    "text": "small piece of code which will",
    "start": "751760",
    "end": "753920"
  },
  {
    "text": "regenerate a set of new unique data and",
    "start": "753920",
    "end": "757839"
  },
  {
    "text": "associate and associate them with a new",
    "start": "757839",
    "end": "760800"
  },
  {
    "text": "micro vm instance",
    "start": "760800",
    "end": "762639"
  },
  {
    "text": "and this piece of code will be executed",
    "start": "762639",
    "end": "765120"
  },
  {
    "text": "after step 5 but before step 6.",
    "start": "765120",
    "end": "770240"
  },
  {
    "text": "oh too much okay",
    "start": "770800",
    "end": "773360"
  },
  {
    "text": "um to address um",
    "start": "773360",
    "end": "775120"
  },
  {
    "text": "problem four we break up the original",
    "start": "775120",
    "end": "777920"
  },
  {
    "text": "function code image into two parts",
    "start": "777920",
    "end": "780800"
  },
  {
    "text": "one part is the essential code blocks",
    "start": "780800",
    "end": "783680"
  },
  {
    "text": "which are needed to start run the",
    "start": "783680",
    "end": "785440"
  },
  {
    "text": "function in majority scenarios",
    "start": "785440",
    "end": "788320"
  },
  {
    "text": "and the other part is non-essential code",
    "start": "788320",
    "end": "790720"
  },
  {
    "text": "blocks which are either not needed to",
    "start": "790720",
    "end": "793120"
  },
  {
    "text": "run the function or are only needed in",
    "start": "793120",
    "end": "795600"
  },
  {
    "text": "very special scenarios",
    "start": "795600",
    "end": "797760"
  },
  {
    "text": "you may have a question on how to",
    "start": "797760",
    "end": "799360"
  },
  {
    "text": "identify the essential code blocks we",
    "start": "799360",
    "end": "802160"
  },
  {
    "text": "identify the essential code blocks by",
    "start": "802160",
    "end": "804639"
  },
  {
    "text": "running the function in several",
    "start": "804639",
    "end": "806320"
  },
  {
    "text": "different test environments",
    "start": "806320",
    "end": "808399"
  },
  {
    "text": "and marking those code blocks that are",
    "start": "808399",
    "end": "810959"
  },
  {
    "text": "loaded into the function micro vm's",
    "start": "810959",
    "end": "813360"
  },
  {
    "text": "memory during those test runs",
    "start": "813360",
    "end": "816160"
  },
  {
    "text": "we then group those code blocks into a",
    "start": "816160",
    "end": "819839"
  },
  {
    "text": "essential code block layer",
    "start": "819839",
    "end": "823519"
  },
  {
    "text": "sorry",
    "start": "823519",
    "end": "825839"
  },
  {
    "text": "it is now well it is now a well-known",
    "start": "826480",
    "end": "829120"
  },
  {
    "text": "fact that only a small portion of a",
    "start": "829120",
    "end": "831839"
  },
  {
    "text": "function's original code image is needed",
    "start": "831839",
    "end": "834560"
  },
  {
    "text": "to run the function",
    "start": "834560",
    "end": "836240"
  },
  {
    "text": "and our test result also validates this",
    "start": "836240",
    "end": "838639"
  },
  {
    "text": "fact",
    "start": "838639",
    "end": "840240"
  },
  {
    "text": "now that the original image function",
    "start": "840240",
    "end": "842720"
  },
  {
    "text": "image has been broken up into essential",
    "start": "842720",
    "end": "845600"
  },
  {
    "text": "code blocks and non-essential code",
    "start": "845600",
    "end": "848079"
  },
  {
    "text": "blocks sorry",
    "start": "848079",
    "end": "849600"
  },
  {
    "text": "wrong scroll down",
    "start": "849600",
    "end": "852000"
  },
  {
    "text": "our approach can further reduce the code",
    "start": "852000",
    "end": "854320"
  },
  {
    "text": "start latency by starting the function",
    "start": "854320",
    "end": "856880"
  },
  {
    "text": "creation process at the earlier time",
    "start": "856880",
    "end": "859199"
  },
  {
    "text": "point",
    "start": "859199",
    "end": "860320"
  },
  {
    "text": "which is the time",
    "start": "860320",
    "end": "862240"
  },
  {
    "text": "right after downloading the essential",
    "start": "862240",
    "end": "864720"
  },
  {
    "text": "code blocks",
    "start": "864720",
    "end": "866079"
  },
  {
    "text": "and the remaining non-essential code",
    "start": "866079",
    "end": "868160"
  },
  {
    "text": "blocks can be downloaded in parallel in",
    "start": "868160",
    "end": "871040"
  },
  {
    "text": "the background or as needed",
    "start": "871040",
    "end": "875360"
  },
  {
    "text": "so in summary our enhanced snapshot",
    "start": "876480",
    "end": "879120"
  },
  {
    "text": "based approach has addressed the four",
    "start": "879120",
    "end": "882079"
  },
  {
    "text": "problems",
    "start": "882079",
    "end": "883360"
  },
  {
    "text": "in our approach the snapshot will not",
    "start": "883360",
    "end": "885760"
  },
  {
    "text": "have any user sensitive data",
    "start": "885760",
    "end": "888240"
  },
  {
    "text": "neither does it have any unique data",
    "start": "888240",
    "end": "890800"
  },
  {
    "text": "associated with any specific function",
    "start": "890800",
    "end": "893680"
  },
  {
    "text": "instance",
    "start": "893680",
    "end": "895040"
  },
  {
    "text": "as to those unique data associated with",
    "start": "895040",
    "end": "897680"
  },
  {
    "text": "a specific micro vm instance",
    "start": "897680",
    "end": "900480"
  },
  {
    "text": "we have developed a small program which",
    "start": "900480",
    "end": "902720"
  },
  {
    "text": "will regenerate a new set of unique data",
    "start": "902720",
    "end": "906160"
  },
  {
    "text": "and associate them with the new function",
    "start": "906160",
    "end": "908639"
  },
  {
    "text": "microvia",
    "start": "908639",
    "end": "910160"
  },
  {
    "text": "and by breaking the original function",
    "start": "910160",
    "end": "912240"
  },
  {
    "text": "code image into essential code blocks",
    "start": "912240",
    "end": "914880"
  },
  {
    "text": "and non-essential code blocks our",
    "start": "914880",
    "end": "917360"
  },
  {
    "text": "approach can start the function creation",
    "start": "917360",
    "end": "920000"
  },
  {
    "text": "process at a much earlier time point",
    "start": "920000",
    "end": "922959"
  },
  {
    "text": "which further reduces the code start",
    "start": "922959",
    "end": "925600"
  },
  {
    "text": "latency",
    "start": "925600",
    "end": "928240"
  },
  {
    "text": "now i'm going to give a brief",
    "start": "931600",
    "end": "933199"
  },
  {
    "text": "introduction on a thought to support",
    "start": "933199",
    "end": "936079"
  },
  {
    "text": "fast auto scaling in response to burst",
    "start": "936079",
    "end": "939199"
  },
  {
    "text": "traffic",
    "start": "939199",
    "end": "940480"
  },
  {
    "text": "no matter how much",
    "start": "940480",
    "end": "942880"
  },
  {
    "text": "on",
    "start": "942880",
    "end": "944000"
  },
  {
    "text": "how much we slip down the micro vm",
    "start": "944000",
    "end": "947440"
  },
  {
    "text": "creating a micro vm takes time in our",
    "start": "947440",
    "end": "950720"
  },
  {
    "text": "investigation we found out that the",
    "start": "950720",
    "end": "953120"
  },
  {
    "text": "function startup process spends a lot of",
    "start": "953120",
    "end": "955839"
  },
  {
    "text": "time on booting up the micro vm kernel",
    "start": "955839",
    "end": "958959"
  },
  {
    "text": "and initializing the user space",
    "start": "958959",
    "end": "960959"
  },
  {
    "text": "components of the micromedia so instead",
    "start": "960959",
    "end": "963759"
  },
  {
    "text": "of creating a lot of new function micro",
    "start": "963759",
    "end": "966079"
  },
  {
    "text": "vms we can speed up the scale out",
    "start": "966079",
    "end": "968959"
  },
  {
    "text": "process by adjusting by adjusting a",
    "start": "968959",
    "end": "972320"
  },
  {
    "text": "existing mic running micro vms resource",
    "start": "972320",
    "end": "975120"
  },
  {
    "text": "boundary and creating more",
    "start": "975120",
    "end": "978079"
  },
  {
    "text": "function containers inside that running",
    "start": "978079",
    "end": "981199"
  },
  {
    "text": "micro vm as long as the node that holds",
    "start": "981199",
    "end": "985120"
  },
  {
    "text": "the road micro vm has enough resource",
    "start": "985120",
    "end": "989040"
  },
  {
    "text": "and now i'm going to hand over to ray to",
    "start": "989040",
    "end": "991519"
  },
  {
    "text": "talk about our test staff and our test",
    "start": "991519",
    "end": "994480"
  },
  {
    "text": "result",
    "start": "994480",
    "end": "996160"
  },
  {
    "text": "okay sucks cassie",
    "start": "996160",
    "end": "997920"
  },
  {
    "text": "okay folks",
    "start": "997920",
    "end": "999199"
  },
  {
    "text": "as cassie mentioned i will walk you",
    "start": "999199",
    "end": "1001279"
  },
  {
    "text": "through some data records from our",
    "start": "1001279",
    "end": "1003440"
  },
  {
    "text": "benchmark",
    "start": "1003440",
    "end": "1004639"
  },
  {
    "text": "but first of all let's start with the",
    "start": "1004639",
    "end": "1006800"
  },
  {
    "text": "testing environment that we used we used",
    "start": "1006800",
    "end": "1010320"
  },
  {
    "text": "an intel cast catalytic server with",
    "start": "1010320",
    "end": "1013320"
  },
  {
    "text": "264 gigabytes memory",
    "start": "1013320",
    "end": "1016240"
  },
  {
    "text": "the storage we used is a intel sata ssd",
    "start": "1016240",
    "end": "1020880"
  },
  {
    "text": "we installed ubuntu 2004 on this server",
    "start": "1020880",
    "end": "1025038"
  },
  {
    "text": "and we use the firecracker clear d",
    "start": "1025039",
    "end": "1028000"
  },
  {
    "text": "and the factor micro vm for testing",
    "start": "1028000",
    "end": "1032480"
  },
  {
    "text": "both fair quality 1080d and the fat",
    "start": "1032480",
    "end": "1034400"
  },
  {
    "text": "cracker vms",
    "start": "1034400",
    "end": "1035839"
  },
  {
    "text": "are projects open sourced by amazon",
    "start": "1035839",
    "end": "1039360"
  },
  {
    "text": "you can get their source code from",
    "start": "1039360",
    "end": "1041760"
  },
  {
    "text": "github",
    "start": "1041760",
    "end": "1043839"
  },
  {
    "text": "we use the firecracker kinetic",
    "start": "1043839",
    "end": "1046079"
  },
  {
    "text": "recommended ci setup under their",
    "start": "1046079",
    "end": "1048640"
  },
  {
    "text": "recommended kernel for testing",
    "start": "1048640",
    "end": "1051440"
  },
  {
    "text": "we implemented the snapshot based way of",
    "start": "1051440",
    "end": "1054400"
  },
  {
    "text": "creating new instances in fact quaker",
    "start": "1054400",
    "end": "1056960"
  },
  {
    "text": "community",
    "start": "1056960",
    "end": "1059280"
  },
  {
    "text": "ok now let's look at the numbers",
    "start": "1059280",
    "end": "1062000"
  },
  {
    "text": "this page shows the comparison of cold",
    "start": "1062000",
    "end": "1064720"
  },
  {
    "text": "start latency between the existing way",
    "start": "1064720",
    "end": "1068559"
  },
  {
    "text": "of creating a new function instance",
    "start": "1068559",
    "end": "1071280"
  },
  {
    "text": "and the snapshot based way of creating a",
    "start": "1071280",
    "end": "1073919"
  },
  {
    "text": "new function instance",
    "start": "1073919",
    "end": "1076080"
  },
  {
    "text": "we tested three languages python node.js",
    "start": "1076080",
    "end": "1080799"
  },
  {
    "text": "and java for each language we selected",
    "start": "1080799",
    "end": "1083919"
  },
  {
    "text": "three functions with their code",
    "start": "1083919",
    "end": "1086480"
  },
  {
    "text": "complexity spanning from simple to",
    "start": "1086480",
    "end": "1089520"
  },
  {
    "text": "intermediate and to complex",
    "start": "1089520",
    "end": "1092000"
  },
  {
    "text": "the timing measured for both ways of",
    "start": "1092000",
    "end": "1094480"
  },
  {
    "text": "creating new instances",
    "start": "1094480",
    "end": "1097039"
  },
  {
    "text": "is right after the runtime shame is",
    "start": "1097039",
    "end": "1099280"
  },
  {
    "text": "created and before exacting the function",
    "start": "1099280",
    "end": "1102080"
  },
  {
    "text": "code",
    "start": "1102080",
    "end": "1103280"
  },
  {
    "text": "the reason we chose to measure this",
    "start": "1103280",
    "end": "1105120"
  },
  {
    "text": "period of time is that they start with",
    "start": "1105120",
    "end": "1107280"
  },
  {
    "text": "the same state and the end up with the",
    "start": "1107280",
    "end": "1111039"
  },
  {
    "text": "same state",
    "start": "1111039",
    "end": "1112720"
  },
  {
    "text": "and",
    "start": "1112720",
    "end": "1113760"
  },
  {
    "text": "it includes the most different",
    "start": "1113760",
    "end": "1116000"
  },
  {
    "text": "different part of the two approaches",
    "start": "1116000",
    "end": "1118960"
  },
  {
    "text": "the bar chart shows the code star",
    "start": "1118960",
    "end": "1121600"
  },
  {
    "text": "latencies",
    "start": "1121600",
    "end": "1122799"
  },
  {
    "text": "for each of the selected functions",
    "start": "1122799",
    "end": "1125600"
  },
  {
    "text": "of the two approaches",
    "start": "1125600",
    "end": "1128559"
  },
  {
    "text": "the numbers are",
    "start": "1128559",
    "end": "1130080"
  },
  {
    "text": "an average of 20 times one of the",
    "start": "1130080",
    "end": "1132799"
  },
  {
    "text": "functions",
    "start": "1132799",
    "end": "1134480"
  },
  {
    "text": "the blue bars are the latencies of",
    "start": "1134480",
    "end": "1137520"
  },
  {
    "text": "using the existing way and the orange",
    "start": "1137520",
    "end": "1140640"
  },
  {
    "text": "bars are the latencies using the new",
    "start": "1140640",
    "end": "1143039"
  },
  {
    "text": "approach",
    "start": "1143039",
    "end": "1145519"
  },
  {
    "text": "the blue bars",
    "start": "1145679",
    "end": "1147600"
  },
  {
    "text": "the number for the blue bars do not",
    "start": "1147600",
    "end": "1149039"
  },
  {
    "text": "differ very much so as to the",
    "start": "1149039",
    "end": "1151440"
  },
  {
    "text": "orange bars this is inconsistent with",
    "start": "1151440",
    "end": "1154480"
  },
  {
    "text": "our design because the time we measured",
    "start": "1154480",
    "end": "1157440"
  },
  {
    "text": "do not include the",
    "start": "1157440",
    "end": "1159520"
  },
  {
    "text": "functioning execution",
    "start": "1159520",
    "end": "1161280"
  },
  {
    "text": "we can see the existing way costs a",
    "start": "1161280",
    "end": "1163919"
  },
  {
    "text": "little bit about",
    "start": "1163919",
    "end": "1166120"
  },
  {
    "text": "1700 milliseconds",
    "start": "1166120",
    "end": "1168720"
  },
  {
    "text": "and the snapshot based weight costs",
    "start": "1168720",
    "end": "1170880"
  },
  {
    "text": "about",
    "start": "1170880",
    "end": "1173280"
  },
  {
    "text": "630 milliseconds the snapshot based",
    "start": "1173559",
    "end": "1176720"
  },
  {
    "text": "weight saves about 60 percent of the",
    "start": "1176720",
    "end": "1179039"
  },
  {
    "text": "time",
    "start": "1179039",
    "end": "1181279"
  },
  {
    "text": "as to the function code or start",
    "start": "1182160",
    "end": "1185120"
  },
  {
    "text": "breakdown we measured this is the",
    "start": "1185120",
    "end": "1187840"
  },
  {
    "text": "marrying of a hello world node.js",
    "start": "1187840",
    "end": "1190320"
  },
  {
    "text": "function",
    "start": "1190320",
    "end": "1191760"
  },
  {
    "text": "we use it as a",
    "start": "1191760",
    "end": "1193919"
  },
  {
    "text": "example",
    "start": "1193919",
    "end": "1195200"
  },
  {
    "text": "the upper diagram is the existing way of",
    "start": "1195200",
    "end": "1198320"
  },
  {
    "text": "starting a new function instance",
    "start": "1198320",
    "end": "1201200"
  },
  {
    "text": "we can see that the",
    "start": "1201200",
    "end": "1203120"
  },
  {
    "text": "longest step of the existing way is the",
    "start": "1203120",
    "end": "1207360"
  },
  {
    "text": "step 7 user space initialization",
    "start": "1207360",
    "end": "1211039"
  },
  {
    "text": "in this step the guest",
    "start": "1211039",
    "end": "1214000"
  },
  {
    "text": "operating system boots up into a",
    "start": "1214000",
    "end": "1216159"
  },
  {
    "text": "multi-user environment understand",
    "start": "1216159",
    "end": "1218799"
  },
  {
    "text": "several services",
    "start": "1218799",
    "end": "1221120"
  },
  {
    "text": "uh including the most important factor",
    "start": "1221120",
    "end": "1223679"
  },
  {
    "text": "agent service",
    "start": "1223679",
    "end": "1225039"
  },
  {
    "text": "the firecracker agent service is",
    "start": "1225039",
    "end": "1229440"
  },
  {
    "text": "is the agent inside of a macro vm",
    "start": "1230080",
    "end": "1233039"
  },
  {
    "text": "handling the life cycle of the rancid",
    "start": "1233039",
    "end": "1235039"
  },
  {
    "text": "container so by loading from snapshot we",
    "start": "1235039",
    "end": "1238799"
  },
  {
    "text": "shorten the time caused by this depth",
    "start": "1238799",
    "end": "1242480"
  },
  {
    "text": "five six seven eight nine ten",
    "start": "1242480",
    "end": "1245679"
  },
  {
    "text": "into",
    "start": "1245679",
    "end": "1247360"
  },
  {
    "text": "uh the",
    "start": "1247360",
    "end": "1249120"
  },
  {
    "text": "two steps of",
    "start": "1249120",
    "end": "1251039"
  },
  {
    "text": "the below diagram",
    "start": "1251039",
    "end": "1253679"
  },
  {
    "text": "we actually",
    "start": "1253679",
    "end": "1254880"
  },
  {
    "text": "converted the 1000 to",
    "start": "1254880",
    "end": "1258280"
  },
  {
    "text": "431 milliseconds into the",
    "start": "1258280",
    "end": "1261280"
  },
  {
    "text": "uh",
    "start": "1261280",
    "end": "1262960"
  },
  {
    "text": "the step five and step six in the below",
    "start": "1262960",
    "end": "1266240"
  },
  {
    "text": "diagram which is the sum of",
    "start": "1266240",
    "end": "1268880"
  },
  {
    "text": "time which is the",
    "start": "1268880",
    "end": "1271640"
  },
  {
    "text": "284 milliseconds",
    "start": "1271640",
    "end": "1274159"
  },
  {
    "text": "so the snapshot way is much shorter",
    "start": "1274159",
    "end": "1278960"
  },
  {
    "text": "so as cassie has introduced one of the",
    "start": "1279360",
    "end": "1281919"
  },
  {
    "text": "challenges comes with snapshot-based",
    "start": "1281919",
    "end": "1284320"
  },
  {
    "text": "ways that we how to",
    "start": "1284320",
    "end": "1286480"
  },
  {
    "text": "download the snapshot file before",
    "start": "1286480",
    "end": "1288720"
  },
  {
    "text": "starting the container",
    "start": "1288720",
    "end": "1290640"
  },
  {
    "text": "this page shows the sizes of functional",
    "start": "1290640",
    "end": "1293440"
  },
  {
    "text": "image the essential code block size",
    "start": "1293440",
    "end": "1296559"
  },
  {
    "text": "and the snapshot size for each of the",
    "start": "1296559",
    "end": "1298960"
  },
  {
    "text": "nine selected",
    "start": "1298960",
    "end": "1300960"
  },
  {
    "text": "functions",
    "start": "1300960",
    "end": "1302000"
  },
  {
    "text": "we can see that the essential blocks",
    "start": "1302000",
    "end": "1304720"
  },
  {
    "text": "are smaller a small portion of the",
    "start": "1304720",
    "end": "1307039"
  },
  {
    "text": "overall image says",
    "start": "1307039",
    "end": "1310080"
  },
  {
    "text": "which means that only a small portion of",
    "start": "1310559",
    "end": "1312960"
  },
  {
    "text": "the data are actually",
    "start": "1312960",
    "end": "1315360"
  },
  {
    "text": "used during the function test run",
    "start": "1315360",
    "end": "1319840"
  },
  {
    "text": "we took the function snapshot",
    "start": "1320559",
    "end": "1323840"
  },
  {
    "text": "by a factor micro vm",
    "start": "1323840",
    "end": "1326080"
  },
  {
    "text": "with",
    "start": "1326080",
    "end": "1327000"
  },
  {
    "text": "128 megabytes",
    "start": "1327000",
    "end": "1330159"
  },
  {
    "text": "memory and we further compressed",
    "start": "1330159",
    "end": "1333360"
  },
  {
    "text": "the",
    "start": "1333360",
    "end": "1334240"
  },
  {
    "text": "memory snapshots",
    "start": "1334240",
    "end": "1336080"
  },
  {
    "text": "so the snapshots uh the snapshot sizes",
    "start": "1336080",
    "end": "1339039"
  },
  {
    "text": "do not differ much for each function we",
    "start": "1339039",
    "end": "1341600"
  },
  {
    "text": "can see that",
    "start": "1341600",
    "end": "1342799"
  },
  {
    "text": "they are",
    "start": "1342799",
    "end": "1343919"
  },
  {
    "text": "above",
    "start": "1343919",
    "end": "1345440"
  },
  {
    "text": "something about",
    "start": "1345440",
    "end": "1347120"
  },
  {
    "text": "50 megabytes",
    "start": "1347120",
    "end": "1348880"
  },
  {
    "text": "this is also inconsistent with our",
    "start": "1348880",
    "end": "1351200"
  },
  {
    "text": "design since we took the snapshot before",
    "start": "1351200",
    "end": "1354400"
  },
  {
    "text": "running the function code",
    "start": "1354400",
    "end": "1357039"
  },
  {
    "text": "so we can see that even combining the",
    "start": "1357039",
    "end": "1359360"
  },
  {
    "text": "essential code blocks and the snapshot",
    "start": "1359360",
    "end": "1363280"
  },
  {
    "text": "file it is still",
    "start": "1363280",
    "end": "1366000"
  },
  {
    "text": "much smaller than the original image",
    "start": "1366000",
    "end": "1368000"
  },
  {
    "text": "size",
    "start": "1368000",
    "end": "1369120"
  },
  {
    "text": "this will result in a shorter",
    "start": "1369120",
    "end": "1370880"
  },
  {
    "text": "downloading time and a shorter costar",
    "start": "1370880",
    "end": "1373600"
  },
  {
    "text": "time",
    "start": "1373600",
    "end": "1375360"
  },
  {
    "text": "okay that's all for",
    "start": "1375360",
    "end": "1377360"
  },
  {
    "text": "our session and we will begin our q a",
    "start": "1377360",
    "end": "1381039"
  },
  {
    "text": "session now",
    "start": "1381039",
    "end": "1383679"
  },
  {
    "text": "yeah thank you",
    "start": "1383840",
    "end": "1386559"
  }
]