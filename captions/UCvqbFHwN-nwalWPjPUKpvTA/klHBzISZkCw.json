[
  {
    "text": "and welcome to this session of how to configure a kubernetes with components",
    "start": "4580",
    "end": "9920"
  },
  {
    "text": "config a new technique in kubernetes i'm",
    "start": "9920",
    "end": "15530"
  },
  {
    "text": "quickly about myself I'm from Finland I just graduated from high school now",
    "start": "15530",
    "end": "21410"
  },
  {
    "text": "currently I'm doing my military service which is mandatory in Finland but after after that I'll do my university studies",
    "start": "21410",
    "end": "29859"
  },
  {
    "text": "I've been in a project for 3 years about and doing a lot of nice things with the",
    "start": "29859",
    "end": "37430"
  },
  {
    "text": "community most recently I've been doing cubed iam working on that and now it's a",
    "start": "37430",
    "end": "44809"
  },
  {
    "text": "pleasure to laugh we're going GI the next release so that's that's really fun",
    "start": "44809",
    "end": "51229"
  },
  {
    "text": "and I do contracting for we works working on open source Y cubed M and now",
    "start": "51229",
    "end": "58809"
  },
  {
    "text": "also from this summer I thought well we gotta get rid of the flags sometime from",
    "start": "58809",
    "end": "65780"
  },
  {
    "text": "components from components because we don't like the negative sides of them so",
    "start": "65780",
    "end": "72200"
  },
  {
    "text": "and well let's do it and now we've done the first work and there's more to come",
    "start": "72200",
    "end": "77510"
  },
  {
    "text": "and that's why we're all here today here today so what are we going to talk about",
    "start": "77510",
    "end": "87340"
  },
  {
    "text": "first what's the current status of components config where are we at and",
    "start": "87340",
    "end": "95440"
  },
  {
    "text": "that means for example limitations what can be done better where do we want to",
    "start": "95440",
    "end": "103400"
  },
  {
    "text": "go in in the future with this effort and",
    "start": "103400",
    "end": "114159"
  },
  {
    "text": "also I'm gonna try to show a demo here about it's on this github site so you",
    "start": "114159",
    "end": "123200"
  },
  {
    "text": "can check out the code yourself but basically implementing this code that",
    "start": "123200",
    "end": "128690"
  },
  {
    "text": "are I'm showing on the slides it's also available on github well where I'll talk",
    "start": "128690",
    "end": "134569"
  },
  {
    "text": "about and have an example of this practice and the roadmap for for",
    "start": "134569",
    "end": "141890"
  },
  {
    "text": "the future also it's important so what",
    "start": "141890",
    "end": "147080"
  },
  {
    "text": "what's really nice is most of this coding has actually like implementing this component config has been done by",
    "start": "147080",
    "end": "153500"
  },
  {
    "text": "Chinese contributors that I've collaborated with so that's that's",
    "start": "153500",
    "end": "158720"
  },
  {
    "text": "worked really well and it's nice to see okay first where are we at today and",
    "start": "158720",
    "end": "166420"
  },
  {
    "text": "what is this thing basically we all know",
    "start": "166420",
    "end": "172910"
  },
  {
    "text": "that kubernetes releases as a fart at a fast pace there are new changes there",
    "start": "172910",
    "end": "179060"
  },
  {
    "text": "are new features coming all the time but it also comes with a not-so-good side",
    "start": "179060",
    "end": "188269"
  },
  {
    "text": "because if you have to keep up with all the new features that are added and",
    "start": "188269",
    "end": "194299"
  },
  {
    "text": "there are also many that features that are removed or deprecated at some times and when you then migrate or upgrade for",
    "start": "194299",
    "end": "202730"
  },
  {
    "text": "from version one to version two or like 111 to 112 or 112 113 similar you really",
    "start": "202730",
    "end": "211280"
  },
  {
    "text": "have to begin to all the changelog that is the huge release notes and see if",
    "start": "211280",
    "end": "218299"
  },
  {
    "text": "some flag has changed in the in the components and take action as required",
    "start": "218299",
    "end": "224959"
  },
  {
    "text": "before upgrading so that can be very dangerous if you just flip the version",
    "start": "224959",
    "end": "232489"
  },
  {
    "text": "and defaults have changed you're now running with different a different set",
    "start": "232489",
    "end": "237980"
  },
  {
    "text": "of configuration than you used to so it's evolving evolving very fast so",
    "start": "237980",
    "end": "246190"
  },
  {
    "text": "when backwards incompatible changes are made they can break your cluster pretty",
    "start": "246190",
    "end": "253669"
  },
  {
    "text": "easily with with the flags so right now if you want to set a parameter today API",
    "start": "253669",
    "end": "260720"
  },
  {
    "text": "server for example the service subnet or similar what address it should listen on",
    "start": "260720",
    "end": "267370"
  },
  {
    "text": "then well you specified - - bind address or another",
    "start": "267370",
    "end": "274090"
  },
  {
    "text": "similar flag but if that flag was removed in a version then if you upgrade",
    "start": "274090",
    "end": "283090"
  },
  {
    "text": "it's gonna exit the component is gonna fail because it doesn't recognize that",
    "start": "283090",
    "end": "289720"
  },
  {
    "text": "anymore and when you do upgrade you need to build like if version is this then",
    "start": "289720",
    "end": "297700"
  },
  {
    "text": "include this flag if worse version is this other thing then have this",
    "start": "297700",
    "end": "303090"
  },
  {
    "text": "replacement and if the version is some third thing do some hacky workaround but",
    "start": "303090",
    "end": "309060"
  },
  {
    "text": "we all know that the kubernetes api has worked pretty well in defining our",
    "start": "309060",
    "end": "314140"
  },
  {
    "text": "applications and defining how our program should be run we all I mean not",
    "start": "314140",
    "end": "322270"
  },
  {
    "text": "everybody may be like siamo but at least it's a representation of the objects and",
    "start": "322270",
    "end": "329050"
  },
  {
    "text": "it's kind of the cabana standard how to do things at the moment so what is this",
    "start": "329050",
    "end": "336160"
  },
  {
    "text": "is yeah the flag names and functionality between them is kind of insane",
    "start": "336160",
    "end": "342280"
  },
  {
    "text": "consequent between the API server controller manager scheduler and similar",
    "start": "342280",
    "end": "350010"
  },
  {
    "text": "so there's in consents inconsistencies and we're using flags where we could use",
    "start": "350010",
    "end": "357760"
  },
  {
    "text": "instead structured and version configuration because we also flags are",
    "start": "357760",
    "end": "365110"
  },
  {
    "text": "only using key value we have no structure there and there's no version I",
    "start": "365110",
    "end": "372850"
  },
  {
    "text": "can't say I want to use the flag schema version one or I want to use some other",
    "start": "372850",
    "end": "378460"
  },
  {
    "text": "thing so instead we want kubernetes components to ideally have just one",
    "start": "378460",
    "end": "387669"
  },
  {
    "text": "argument one flag which is config so",
    "start": "387669",
    "end": "394500"
  },
  {
    "text": "with this we want to read structured and versioned configuration",
    "start": "395400",
    "end": "402400"
  },
  {
    "text": "and it looks like a normal combination apiary object but it's just a file it's",
    "start": "402400",
    "end": "408370"
  },
  {
    "text": "just like similarity to the kubernetes",
    "start": "408370",
    "end": "413860"
  },
  {
    "text": "api server object so the current the",
    "start": "413860",
    "end": "421180"
  },
  {
    "text": "current situation is that most components of kubernetes thanks to the",
    "start": "421180",
    "end": "427600"
  },
  {
    "text": "efforts we did this summer now at least have dedicated kubernetes repos so we",
    "start": "427600",
    "end": "435790"
  },
  {
    "text": "have case at i/o like you slash cubelet contain that repo contains the struct",
    "start": "435790",
    "end": "444280"
  },
  {
    "text": "the configuration strikes for the cubelet which you can use to write cubelet component config and the cubelet",
    "start": "444280",
    "end": "453970"
  },
  {
    "text": "is the most tested component with component config at this time the other",
    "start": "453970",
    "end": "461170"
  },
  {
    "text": "because it's in beta the other structures are in alpha so I wouldn't",
    "start": "461170",
    "end": "467380"
  },
  {
    "text": "use them maybe quite yet but when we go further we hope to graduate these as",
    "start": "467380",
    "end": "474460"
  },
  {
    "text": "soon as possible and make it consistent for all components so the cubelets queue",
    "start": "474460",
    "end": "484150"
  },
  {
    "text": "proxy and cube scheduler can all read the config file we have work to do with the controller manager and the API",
    "start": "484150",
    "end": "490720"
  },
  {
    "text": "server they can't so there's some internal refactoring to be done there",
    "start": "490720",
    "end": "498780"
  },
  {
    "text": "there's also this problem of when you're using flags or have have very different",
    "start": "500430",
    "end": "509190"
  },
  {
    "text": "component like where different structures may be for like for both the",
    "start": "509190",
    "end": "518370"
  },
  {
    "text": "proxy cube scheduler and cube controller manager and the cubelet as well are",
    "start": "518370",
    "end": "524200"
  },
  {
    "text": "similar to that that they host a very lightweight HTTP server so this HTTP",
    "start": "524200",
    "end": "532810"
  },
  {
    "text": "server so some basic endpoints like like health checks southern version",
    "start": "532810",
    "end": "541390"
  },
  {
    "text": "endpoints and similar for debugging metrics such small things but it's all",
    "start": "541390",
    "end": "550029"
  },
  {
    "text": "the same code that is behind the scenes used still this code that is",
    "start": "550029",
    "end": "556649"
  },
  {
    "text": "implementing the metrics implementing the version checks HTTP server is using",
    "start": "556649",
    "end": "562709"
  },
  {
    "text": "totally different configuration structs because we have no standards here in",
    "start": "562709",
    "end": "568270"
  },
  {
    "text": "between these components just like how the author of the this code liked it at",
    "start": "568270",
    "end": "573610"
  },
  {
    "text": "the time so now with this effort we also",
    "start": "573610",
    "end": "578800"
  },
  {
    "text": "want to extract what for example leader election configuration for leader",
    "start": "578800",
    "end": "585490"
  },
  {
    "text": "election is a generic thing you want to do later election with kubernetes then",
    "start": "585490",
    "end": "592300"
  },
  {
    "text": "include destruct in your component and for example now they can be shared",
    "start": "592300",
    "end": "598779"
  },
  {
    "text": "between the scheduler and the controller manager right now these these fields and trucks are duplicated and that's",
    "start": "598779",
    "end": "605620"
  },
  {
    "text": "unnecessary same for debugging configuration and the HTTP server stuff",
    "start": "605620",
    "end": "614279"
  },
  {
    "text": "so what this could look like to visualize is something like this and",
    "start": "616980",
    "end": "623079"
  },
  {
    "text": "then this is kind of the end goal the most important part and why this starts",
    "start": "623079",
    "end": "630459"
  },
  {
    "text": "to look like a kubernetes api style object we have the api version and we",
    "start": "630459",
    "end": "638560"
  },
  {
    "text": "have the kind you can this also is the same format as for example C RDS are",
    "start": "638560",
    "end": "646180"
  },
  {
    "text": "using so it's very familiar to all kubernetes developers and pretty straightforward to use all components",
    "start": "646180",
    "end": "655600"
  },
  {
    "text": "configs in kubernetes are under config that gates that io so",
    "start": "655600",
    "end": "664140"
  },
  {
    "text": "under that the component has its own API group",
    "start": "664140",
    "end": "669580"
  },
  {
    "text": "so in an API group there are a set of structs that make up this configuration",
    "start": "669580",
    "end": "678060"
  },
  {
    "text": "schema and each component gets its own API group then the kind should be the",
    "start": "678060",
    "end": "689740"
  },
  {
    "text": "component the component the name of the component and configuration we'll see",
    "start": "689740",
    "end": "695230"
  },
  {
    "text": "more about this later but what's great about this is when we first have like we",
    "start": "695230",
    "end": "703510"
  },
  {
    "text": "release 113 or say we release 114 we go",
    "start": "703510",
    "end": "709329"
  },
  {
    "text": "GE a stable with the component config feature we would have then all versions",
    "start": "709329",
    "end": "716980"
  },
  {
    "text": "would be we one but if we do some huge like change in the structure then in one",
    "start": "716980",
    "end": "725880"
  },
  {
    "text": "117 or something we can bump the version have a different schema we can bump the",
    "start": "725880",
    "end": "732459"
  },
  {
    "text": "version - we - so that means when the user upgrade to 117 they can either",
    "start": "732459",
    "end": "738370"
  },
  {
    "text": "specify this file which is we want or they can use the new more advanced",
    "start": "738370",
    "end": "745029"
  },
  {
    "text": "schema because the the component of the new version will know both formats and",
    "start": "745029",
    "end": "751300"
  },
  {
    "text": "converts between them automatically so and then we also get some structure we",
    "start": "751300",
    "end": "757990"
  },
  {
    "text": "see that under the controller struct we have different controllers every",
    "start": "757990",
    "end": "763240"
  },
  {
    "text": "controller can have their own key value pair and if there are for example",
    "start": "763240",
    "end": "768810"
  },
  {
    "text": "there's a generic controller manager thing if we want to put generic controllers we can have those there but",
    "start": "768810",
    "end": "777579"
  },
  {
    "text": "then you can also implement your own at that an example is for an example is the",
    "start": "777579",
    "end": "783880"
  },
  {
    "text": "cloud controller manager which has the similar things to the normal cube",
    "start": "783880",
    "end": "789250"
  },
  {
    "text": "controller manager but and it should have the same look and feel here but it should still be different per cloud so",
    "start": "789250",
    "end": "800740"
  },
  {
    "text": "the yes this configuration that you write should comply with most urban areas API",
    "start": "800740",
    "end": "809540"
  },
  {
    "text": "conventions and have that kind of UX and",
    "start": "809540",
    "end": "815290"
  },
  {
    "text": "that makes it familiar to other people when upgrading you must be backwards",
    "start": "815290",
    "end": "823429"
  },
  {
    "text": "compatible so if you release in a new component v2 and you already supported",
    "start": "823429",
    "end": "830629"
  },
  {
    "text": "we one you have to be able to still read we one so users can upgrade without any",
    "start": "830629",
    "end": "837709"
  },
  {
    "text": "like downtime or any any like problems",
    "start": "837709",
    "end": "844779"
  },
  {
    "text": "so that is that is really important and that is what components config is",
    "start": "844779",
    "end": "849829"
  },
  {
    "text": "solving that Flags can't do and with this we can also start to do things like",
    "start": "849829",
    "end": "859059"
  },
  {
    "text": "when we put the configuration in a file we can also start appending patches we",
    "start": "859059",
    "end": "865009"
  },
  {
    "text": "can have one base cube black configuration for the whole cluster for example and we can then if we have a",
    "start": "865009",
    "end": "873079"
  },
  {
    "text": "special cube like that should implement some GPU feature hardware accelerated thing I need special configuration",
    "start": "873079",
    "end": "880189"
  },
  {
    "text": "parameters we can for example use customize or some other patching",
    "start": "880189",
    "end": "885379"
  },
  {
    "text": "framework of llamó json whatever now the examples are showed here in Yama",
    "start": "885379",
    "end": "890600"
  },
  {
    "text": "but Jason works equal well like any kubernetes components in a kubernetes",
    "start": "890600",
    "end": "895939"
  },
  {
    "text": "resource so now that we have these kind of things and have the file in a",
    "start": "895939",
    "end": "903309"
  },
  {
    "text": "configuration in a file we can start doing higher higher level systems and",
    "start": "903309",
    "end": "908959"
  },
  {
    "text": "these get-ups patterns as we call them like you can store the ultimate truth or",
    "start": "908959",
    "end": "915740"
  },
  {
    "text": "what is in your cluster is storing it in some gates repo then you propose changes",
    "start": "915740",
    "end": "921829"
  },
  {
    "text": "to that gate repo to the configuration like I want to apply this kind of patch",
    "start": "921829",
    "end": "927439"
  },
  {
    "text": "to our cluster then it's easy it's it",
    "start": "927439",
    "end": "932720"
  },
  {
    "text": "can be easily seen in this llamó well change that value to that and then can",
    "start": "932720",
    "end": "941390"
  },
  {
    "text": "be done like any other Cabana kubernetes objects like we deploy our apps today",
    "start": "941390",
    "end": "947060"
  },
  {
    "text": "and as we said we can now share a lot of the common things so if you want to do a",
    "start": "947060",
    "end": "954110"
  },
  {
    "text": "component on kubernetes that supports lead election you don't have to like",
    "start": "954110",
    "end": "959840"
  },
  {
    "text": "write all that code reinvent that wheel again you can use the shared types in",
    "start": "959840",
    "end": "965180"
  },
  {
    "text": "kubernetes and now we also get consistency for free so this talk is a",
    "start": "965180",
    "end": "975530"
  },
  {
    "text": "bit on like the cig plus lifecycle side I'm a lead for cyclist lifecycle but it",
    "start": "975530",
    "end": "981200"
  },
  {
    "text": "also is pretty much API machinery so it's good if you have prior knowledge of",
    "start": "981200",
    "end": "989300"
  },
  {
    "text": "how the kubernetes api machinery works because it's this is gonna dive into how",
    "start": "989300",
    "end": "994490"
  },
  {
    "text": "it works but I'll try to explain a sim as simple as possible how the structure",
    "start": "994490",
    "end": "1000310"
  },
  {
    "text": "is so now with the new refactor we store",
    "start": "1000310",
    "end": "1007510"
  },
  {
    "text": "the external versions in a component repo so case at i/o which is a elias for",
    "start": "1007510",
    "end": "1016510"
  },
  {
    "text": "github calm slash kubernetes has new repos it has cubelet cue proxy",
    "start": "1016510",
    "end": "1024060"
  },
  {
    "text": "cube controller manager and cube scheduler these repos right now only",
    "start": "1024060",
    "end": "1031420"
  },
  {
    "text": "contain these types these components config types so it's easier to it's easy",
    "start": "1031420",
    "end": "1037870"
  },
  {
    "text": "for you if you are building a higher-level system utilizing component config it's easy for you to vendor these",
    "start": "1037870",
    "end": "1045010"
  },
  {
    "text": "you don't need to vendor the whole of kubernetes which is very annoying for",
    "start": "1045010",
    "end": "1050470"
  },
  {
    "text": "many and impossible for some but the",
    "start": "1050470",
    "end": "1055570"
  },
  {
    "text": "internal versions will we'll get to what internal and external means in a second",
    "start": "1055570",
    "end": "1061140"
  },
  {
    "text": "are stored in still in the kubernetes package and all the rest of the cubelet code and whatnot is in the kubernetes so",
    "start": "1061140",
    "end": "1068980"
  },
  {
    "text": "we've only extracted this one API package to its own repo for easier ven",
    "start": "1068980",
    "end": "1075429"
  },
  {
    "text": "during that is what's been done and here we have the example again the API group",
    "start": "1075429",
    "end": "1084940"
  },
  {
    "text": "as said should be the components name dot config that case at i/o if you",
    "start": "1084940",
    "end": "1091450"
  },
  {
    "text": "implement your own components you can have whatever you want but for this kubernetes specific ones",
    "start": "1091450",
    "end": "1097900"
  },
  {
    "text": "that is the pattern and then the API version should be should work like any",
    "start": "1097900",
    "end": "1102970"
  },
  {
    "text": "other API version here's an example some example values and the kind name should",
    "start": "1102970",
    "end": "1109690"
  },
  {
    "text": "be written like that like in the example here so here we have the shared config",
    "start": "1109690",
    "end": "1120100"
  },
  {
    "text": "problem so as you see here these are real-world examples of what we have",
    "start": "1120100",
    "end": "1125230"
  },
  {
    "text": "right now so the cube proxy configuration group if you are a",
    "start": "1125230",
    "end": "1134200"
  },
  {
    "text": "kubernetes client if you're talking to the API so you need some parameters like where is the cube config I should access",
    "start": "1134200",
    "end": "1140290"
  },
  {
    "text": "how often may I talk to the API server with request per second burst and how",
    "start": "1140290",
    "end": "1147549"
  },
  {
    "text": "should I talk to the API server should I eat juice is plain JSON or should I use new a proto buff or whatever so these",
    "start": "1147549",
    "end": "1155620"
  },
  {
    "text": "are configuration parameters that are similar to any kubernetes component like",
    "start": "1155620",
    "end": "1161880"
  },
  {
    "text": "globally i thinkyou proxy this is okay this is scoped under the client",
    "start": "1161880",
    "end": "1169900"
  },
  {
    "text": "connection struct but that is not the case with the cubelets the cubelet host",
    "start": "1169900",
    "end": "1177070"
  },
  {
    "text": "all of these fields just on the root and have other names as well we have cube",
    "start": "1177070",
    "end": "1183669"
  },
  {
    "text": "config with a little C there and cube config with a capital C and so on so",
    "start": "1183669",
    "end": "1189880"
  },
  {
    "text": "forth cube API burst burst cube a API requests per second etc so this is",
    "start": "1189880",
    "end": "1196929"
  },
  {
    "text": "pretty much the same but it's written in different ways because it's been different authors",
    "start": "1196929",
    "end": "1202840"
  },
  {
    "text": "and now there's no consistency for that mean that is configuring this I have to",
    "start": "1202840",
    "end": "1207970"
  },
  {
    "text": "remember that if I'm told using the cubelet doing stuff with the cubelet I have to write stuff in some way and if",
    "start": "1207970",
    "end": "1215950"
  },
  {
    "text": "I'm using the new proxy I should use a different pattern so this these kinds of",
    "start": "1215950",
    "end": "1221320"
  },
  {
    "text": "unification we we want to we're striving towards",
    "start": "1221320",
    "end": "1226530"
  },
  {
    "text": "by making these shared types so instead the shared types will exist in a generic",
    "start": "1226530",
    "end": "1234010"
  },
  {
    "text": "kubernetes repo like case that i/o API machinery or case at i/o api server or",
    "start": "1234010",
    "end": "1240310"
  },
  {
    "text": "whatever we might create a case that i will slash component or something we",
    "start": "1240310",
    "end": "1246520"
  },
  {
    "text": "don't know but somewhere that that is easily accessible and easily vulnerable",
    "start": "1246520",
    "end": "1254100"
  },
  {
    "text": "so i don't know if you're familiar with what an external version and internal",
    "start": "1258000",
    "end": "1264250"
  },
  {
    "text": "version of the api is but here i'll try to explain that so an external type is",
    "start": "1264250",
    "end": "1272020"
  },
  {
    "text": "some set of structs that can be written to a file and that can be read from a",
    "start": "1272020",
    "end": "1277750"
  },
  {
    "text": "file so that by definition means we need",
    "start": "1277750",
    "end": "1283330"
  },
  {
    "text": "to set like when i when i'm reading a file i need to know what kind of version",
    "start": "1283330",
    "end": "1289090"
  },
  {
    "text": "is this what kind of object is this and what group does it belong to is it like",
    "start": "1289090",
    "end": "1295090"
  },
  {
    "text": "a deployment or is it a component configuration or is it like a CRD I need",
    "start": "1295090",
    "end": "1300430"
  },
  {
    "text": "to know what kind of thing it is that's why we have API version and kind and",
    "start": "1300430",
    "end": "1308340"
  },
  {
    "text": "that's also that's always in that's",
    "start": "1308340",
    "end": "1314230"
  },
  {
    "text": "always the case with external versions they always said that and an external",
    "start": "1314230",
    "end": "1319450"
  },
  {
    "text": "type must also have JSON tags because you know that in go lower case if a",
    "start": "1319450",
    "end": "1329320"
  },
  {
    "text": "field start with lower case it's private if a field starts with upper case it's public",
    "start": "1329320",
    "end": "1335540"
  },
  {
    "text": "so and in when we're writing these Jason or like yamo files or whatever we always",
    "start": "1335540",
    "end": "1343550"
  },
  {
    "text": "kind of always start with a lowercase so that means if we we can't read them to",
    "start": "1343550",
    "end": "1352370"
  },
  {
    "text": "go because the go interpreter things they're they're private fields and it",
    "start": "1352370",
    "end": "1357920"
  },
  {
    "text": "doesn't recognize them so that's why we must set all always JSON tags which are",
    "start": "1357920",
    "end": "1364790"
  },
  {
    "text": "lower case which override the default field value so an internal type there",
    "start": "1364790",
    "end": "1374240"
  },
  {
    "text": "should be only one internal type in the system so in the component there should be this one internal struct that is",
    "start": "1374240",
    "end": "1382940"
  },
  {
    "text": "never written anywhere it's never read",
    "start": "1382940",
    "end": "1388220"
  },
  {
    "text": "from anyplace it's only used by the component itself and why we should not",
    "start": "1388220",
    "end": "1395150"
  },
  {
    "text": "have Jason tags and yeah so why we have",
    "start": "1395150",
    "end": "1402590"
  },
  {
    "text": "this is because we might or we want to support many external versions we want",
    "start": "1402590",
    "end": "1408050"
  },
  {
    "text": "to support loading your configuration from we 1 and V 2 and V 3 we all we want",
    "start": "1408050",
    "end": "1414920"
  },
  {
    "text": "to support loading those and using those in our component in our application for",
    "start": "1414920",
    "end": "1421280"
  },
  {
    "text": "example kubernetes supports many many versions of the apps API for example you",
    "start": "1421280",
    "end": "1428450"
  },
  {
    "text": "can specify deployments of type version 1 beta 1 version 1 beta 2 version 1 so",
    "start": "1428450",
    "end": "1436400"
  },
  {
    "text": "we we should have this functionality so then we create many external tags and",
    "start": "1436400",
    "end": "1442130"
  },
  {
    "text": "create conversions many external versions and create conversions from",
    "start": "1442130",
    "end": "1448760"
  },
  {
    "text": "that external type and its schema to the same internal type and that same",
    "start": "1448760",
    "end": "1454280"
  },
  {
    "text": "internal type we use everywhere in our code that also means if defaulting",
    "start": "1454280",
    "end": "1459980"
  },
  {
    "text": "changes between versions we also can track that by having only the external",
    "start": "1459980",
    "end": "1466400"
  },
  {
    "text": "pipes should be defaulted so you we have a default of 10 requests per",
    "start": "1466400",
    "end": "1473960"
  },
  {
    "text": "second in our application in version 1 and we realized that is not a good",
    "start": "1473960",
    "end": "1479210"
  },
  {
    "text": "default we need at least 100 requests per second we can bump the API version",
    "start": "1479210",
    "end": "1484789"
  },
  {
    "text": "and now in the new API version we use a new default yeah so we register",
    "start": "1484789",
    "end": "1494510"
  },
  {
    "text": "conversions from external so we read the file we decode it into the external type",
    "start": "1494510",
    "end": "1500029"
  },
  {
    "text": "we then convert it into the internal type and when it is the internal type we",
    "start": "1500029",
    "end": "1505130"
  },
  {
    "text": "can start using it in the application and to reduce the need for writing",
    "start": "1505130",
    "end": "1514130"
  },
  {
    "text": "conversions like this field is in the external type is this field in the internal for everything there's a lot of",
    "start": "1514130",
    "end": "1521559"
  },
  {
    "text": "auto-generated code so I've written a",
    "start": "1521559",
    "end": "1528620"
  },
  {
    "text": "sample go application for this to demonstrate that it works and it's",
    "start": "1528620",
    "end": "1534409"
  },
  {
    "text": "accessible in the github location under github.com slash luksus mmm I know I'll",
    "start": "1534409",
    "end": "1541279"
  },
  {
    "text": "now show what different what you need in order to implement this so if you want",
    "start": "1541279",
    "end": "1548450"
  },
  {
    "text": "to do this for your application you can",
    "start": "1548450",
    "end": "1554149"
  },
  {
    "text": "you can implement this using this pattern so here's the here's the",
    "start": "1554149",
    "end": "1561049"
  },
  {
    "text": "structure we have a CMD folder we have a packaged folder in our package in the",
    "start": "1561049",
    "end": "1566960"
  },
  {
    "text": "top-level config we have the internal type that is just one and then we have",
    "start": "1566960",
    "end": "1572809"
  },
  {
    "text": "many external types we support now we won and we be the one so we be the one",
    "start": "1572809",
    "end": "1579590"
  },
  {
    "text": "was our first version we thought it was pretty good but we realized we had to make some changes before we release the",
    "start": "1579590",
    "end": "1588529"
  },
  {
    "text": "stable version which is we don't we want and then we have a scheme package with which contains references to boat to all",
    "start": "1588529",
    "end": "1596059"
  },
  {
    "text": "all the types so and it's important to note that the",
    "start": "1596059",
    "end": "1602940"
  },
  {
    "text": "structure of the internal type and latest like in this case we won is",
    "start": "1602940",
    "end": "1610020"
  },
  {
    "text": "pretty much the same there's no extra conversion code there it's just like it",
    "start": "1610020",
    "end": "1615360"
  },
  {
    "text": "has exactly the same schema but between we be the one and the internal type we",
    "start": "1615360",
    "end": "1621270"
  },
  {
    "text": "need to do conversions so that's where we have conversion goal in we'd be the one but not in we one and we'll we'll go",
    "start": "1621270",
    "end": "1629940"
  },
  {
    "text": "walk through what this what should be existing in these go files so the the",
    "start": "1629940",
    "end": "1644460"
  },
  {
    "text": "sample application here will basically will have three flags it has one config",
    "start": "1644460",
    "end": "1652500"
  },
  {
    "text": "flag which allows you to specify a component config and it has some",
    "start": "1652500",
    "end": "1657720"
  },
  {
    "text": "overrides as well so on a graphical level it seems like this so if we set a",
    "start": "1657720",
    "end": "1662910"
  },
  {
    "text": "config file I realize I've missed the flag name that it should be - config an",
    "start": "1662910",
    "end": "1668400"
  },
  {
    "text": "config file so if we've said that we the application reads it into the external",
    "start": "1668400",
    "end": "1675990"
  },
  {
    "text": "type when we have it in the external type that might be fields that are not",
    "start": "1675990",
    "end": "1681360"
  },
  {
    "text": "set so we default it we when we then have defaulted the external type we",
    "start": "1681360",
    "end": "1688260"
  },
  {
    "text": "convert it in the inter internal so we can use it but if we instead specified",
    "start": "1688260",
    "end": "1695880"
  },
  {
    "text": "just a flag like I don't need much extra configuration I just want to for a HTTP",
    "start": "1695880",
    "end": "1703050"
  },
  {
    "text": "server I don't need a lot of TLS stuff for example I just need to set override the bind address so I'm fine with just",
    "start": "1703050",
    "end": "1710070"
  },
  {
    "text": "having one flag then we start with an",
    "start": "1710070",
    "end": "1716280"
  },
  {
    "text": "empty external type we apply the flag value in this case like bind address we",
    "start": "1716280",
    "end": "1725220"
  },
  {
    "text": "default it and convert it in the right internal type and now we can continue using the same code path there and just",
    "start": "1725220",
    "end": "1733559"
  },
  {
    "text": "Marshall this bites again so you might",
    "start": "1733559",
    "end": "1741309"
  },
  {
    "text": "have seen how kubernetes api types look what they look like this is basically",
    "start": "1741309",
    "end": "1750399"
  },
  {
    "text": "the what is what it looks like",
    "start": "1750399",
    "end": "1755679"
  },
  {
    "text": "normal go-go configuration then we have",
    "start": "1755679",
    "end": "1762700"
  },
  {
    "text": "a scheme which registers all these like that we set we one be the one here is",
    "start": "1762700",
    "end": "1770200"
  },
  {
    "text": "the internal type and we have conversion factors between these then we specify",
    "start": "1770200",
    "end": "1778389"
  },
  {
    "text": "some tags for order generation so there",
    "start": "1778389",
    "end": "1783879"
  },
  {
    "text": "will be automatic code automatically generated code here and we also reduce",
    "start": "1783879",
    "end": "1791350"
  },
  {
    "text": "the defaults that if a field is not set then we set it to some default value and",
    "start": "1791350",
    "end": "1799080"
  },
  {
    "text": "here for example here is a sample conversion code so a field that was",
    "start": "1799080",
    "end": "1806429"
  },
  {
    "text": "earlier renamed server address has now been moved into a dedicated server object and address and then we",
    "start": "1806429",
    "end": "1819100"
  },
  {
    "text": "have a scheme which registers all internal and external types so the scheme does the automatic conversion and",
    "start": "1819100",
    "end": "1826259"
  },
  {
    "text": "now what it looks like when we have this setup we can read a file by just calling",
    "start": "1826259",
    "end": "1832539"
  },
  {
    "text": "runtime decode into and give the bytes that we want to decode and the internal",
    "start": "1832539",
    "end": "1839139"
  },
  {
    "text": "object we don't need to do any special we don't have to write more code for for",
    "start": "1839139",
    "end": "1845200"
  },
  {
    "text": "it like do conversion we don't have to do if this then that we just that is all",
    "start": "1845200",
    "end": "1852879"
  },
  {
    "text": "done for us we just need to say here are the bytes here's the internal object parse any external version to me if we",
    "start": "1852879",
    "end": "1862480"
  },
  {
    "text": "want to populate defaults we create the object we call scheme default or if you want to convert it",
    "start": "1862480",
    "end": "1870460"
  },
  {
    "text": "between objects between versions we just call scheme converts and if we want to",
    "start": "1870460",
    "end": "1876340"
  },
  {
    "text": "marshal this again two bytes then we just create some kind of serializer it",
    "start": "1876340",
    "end": "1883000"
  },
  {
    "text": "can be llamo Jason are made by default but we can do whatever like if I want to",
    "start": "1883000",
    "end": "1888070"
  },
  {
    "text": "have a I don't know what's what casein netting or whatever kind of format I can",
    "start": "1888070",
    "end": "1898240"
  },
  {
    "text": "create my own C or Eliezer but then what's important is that we create a version specific sterilizer so we say",
    "start": "1898240",
    "end": "1905650"
  },
  {
    "text": "that I want to output bytes again with v1 structure or I want to output it with",
    "start": "1905650",
    "end": "1912730"
  },
  {
    "text": "we to structure and then just call runtime in code so what's done and",
    "start": "1912730",
    "end": "1920440"
  },
  {
    "text": "what's going to be better in the future",
    "start": "1920440",
    "end": "1927180"
  },
  {
    "text": "we've done the initial work for kubernetes components now we have this framework like you can use this so like",
    "start": "1927180",
    "end": "1935230"
  },
  {
    "text": "say you're creating an operator then it's very good for like the consistency",
    "start": "1935230",
    "end": "1943300"
  },
  {
    "text": "and for your users if you need configuration for your operator specifically then you can adopt this",
    "start": "1943300",
    "end": "1949930"
  },
  {
    "text": "same pattern that's shown in this repo it's probably probably going to create",
    "start": "1949930",
    "end": "1955720"
  },
  {
    "text": "some better documentation here in 1 12 and 13 as well how to write your own component configuration and graduating",
    "start": "1955720",
    "end": "1966220"
  },
  {
    "text": "the schemas of these two alpha to beta",
    "start": "1966220",
    "end": "1973240"
  },
  {
    "text": "it's also going to be important so like the Q proxy is now alpha we want to make",
    "start": "1973240",
    "end": "1979810"
  },
  {
    "text": "it better we have no API server components config",
    "start": "1979810",
    "end": "1984850"
  },
  {
    "text": "at all we should fix that we should create component config so now the cloud",
    "start": "1984850",
    "end": "1990040"
  },
  {
    "text": "provider is for example I'm moving out of three then they should also have the same look and feel as a normal",
    "start": "1990040",
    "end": "1996370"
  },
  {
    "text": "controller manager things like that",
    "start": "1996370",
    "end": "2000950"
  },
  {
    "text": "so if you're interested in the actual code the like deep details of how it",
    "start": "2002250",
    "end": "2009820"
  },
  {
    "text": "works you can check out the repo linked in this presentation but as a recap",
    "start": "2009820",
    "end": "2017820"
  },
  {
    "text": "components config is about this pattern it's a convention that we use for",
    "start": "2017820",
    "end": "2026170"
  },
  {
    "text": "example there are conventions for CR DS as well that is very similar we just apply this these kubernetes api",
    "start": "2026170",
    "end": "2032050"
  },
  {
    "text": "conventions on any configuration and reuse the benefits of Cubana quite what",
    "start": "2032050",
    "end": "2039130"
  },
  {
    "text": "makes kubernetes so great and when we have configuration in a file i said now",
    "start": "2039130",
    "end": "2045790"
  },
  {
    "text": "we can start applying instance overrides we can start doing patches we can start",
    "start": "2045790",
    "end": "2052960"
  },
  {
    "text": "doing this get up style deployment because that's very hard to do if you're",
    "start": "2052960",
    "end": "2058270"
  },
  {
    "text": "using flags then if you need a lot of if-then-else configuration like so that",
    "start": "2058270",
    "end": "2064330"
  },
  {
    "text": "it gets complex as a new program itself that it's applying flags then it's not",
    "start": "2064330",
    "end": "2071350"
  },
  {
    "text": "good but if you have one file the definite source of truth then then",
    "start": "2071350",
    "end": "2076629"
  },
  {
    "text": "that's pretty convenient and we're trying to unify the UX of using",
    "start": "2076630",
    "end": "2082690"
  },
  {
    "text": "kubernetes trying to make it easier for admins to use it but this can be done",
    "start": "2082690",
    "end": "2091060"
  },
  {
    "text": "for any combination extension or any application any go program can can do this and yeah now we have the external",
    "start": "2091060",
    "end": "2104290"
  },
  {
    "text": "types in so that you can render them so now you also can write application using",
    "start": "2104290",
    "end": "2111460"
  },
  {
    "text": "these these trucks and yeah",
    "start": "2111460",
    "end": "2117870"
  },
  {
    "text": "that's it yeah questions I think you are",
    "start": "2117870",
    "end": "2141900"
  },
  {
    "text": "the leader of the cluster lifecycle so you probably know the cast API and how",
    "start": "2141900",
    "end": "2150500"
  },
  {
    "text": "do you plan to apply this on the class API and maybe also the cloud provider",
    "start": "2150500",
    "end": "2156950"
  },
  {
    "text": "and make sure all then are following the same pattern in terms of configurations",
    "start": "2156950",
    "end": "2164990"
  },
  {
    "text": "yeah so the cluster API does this already it is using this convention",
    "start": "2168290",
    "end": "2174600"
  },
  {
    "text": "since the beginning but with regards to the cloud providers yes we're working on that or also we like help with that",
    "start": "2174600",
    "end": "2183950"
  },
  {
    "text": "that's in the roadmap as Ann said right now the we don't have we haven't plumbed",
    "start": "2184310",
    "end": "2189540"
  },
  {
    "text": "this true in all places in controller manager but we're planning to do so so",
    "start": "2189540",
    "end": "2194820"
  },
  {
    "text": "that it gets consistent any other",
    "start": "2194820",
    "end": "2202050"
  },
  {
    "text": "questions",
    "start": "2202050",
    "end": "2204440"
  },
  {
    "text": "okay thank you",
    "start": "2209729",
    "end": "2213689"
  }
]