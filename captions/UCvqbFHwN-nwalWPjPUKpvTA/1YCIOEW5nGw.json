[
  {
    "text": "thank you guys so much for joining this the security talk my name is Zack Arnold",
    "start": "60",
    "end": "5879"
  },
  {
    "text": "this is my colleague Austin Adams we both work for a company in the Bay Area",
    "start": "5879",
    "end": "11070"
  },
  {
    "text": "called Y green energy fund and we're going to be talking today about a little bit about our journey and security",
    "start": "11070",
    "end": "16980"
  },
  {
    "text": "specifically with cloud native tools and essentially attempting to demonstrate that that kubernetes is actually ready",
    "start": "16980",
    "end": "24119"
  },
  {
    "text": "for the finance industry so we're also going to be talking a little bit about achieving high high security at scale",
    "start": "24119",
    "end": "31590"
  },
  {
    "text": "with microcircuits and kubernetes so it is going to be a little bit beyond just kubernetes as the execution environment",
    "start": "31590",
    "end": "37710"
  },
  {
    "text": "and actually talking about securing containers so really quickly first I",
    "start": "37710",
    "end": "43530"
  },
  {
    "text": "should also mention at any point if you have a question you can go to that link right up there it is live and send us a",
    "start": "43530",
    "end": "49770"
  },
  {
    "text": "question I'll obviously be answering questions at the end but if you're not close to a mic or don't want to shout",
    "start": "49770",
    "end": "55770"
  },
  {
    "text": "you can submit your question there and we'll attempt to answer it at the end if there's time or certainly will be",
    "start": "55770",
    "end": "60840"
  },
  {
    "text": "available in the corner so what or who is why green and why do we focus on security why green is the word energy",
    "start": "60840",
    "end": "67409"
  },
  {
    "text": "spelled backwards in English I did not choose the name but it is interesting to",
    "start": "67409",
    "end": "72450"
  },
  {
    "text": "note I found that out six months into my job so that was good we are a renewable energy yeah we're a",
    "start": "72450",
    "end": "80310"
  },
  {
    "text": "renewable energy financing company so basically we operate under the same or",
    "start": "80310",
    "end": "85650"
  },
  {
    "text": "some some laws that allow us to apply the financing as equity on on a property",
    "start": "85650",
    "end": "93540"
  },
  {
    "text": "and essentially that gives us first lien position against a mortgage and that",
    "start": "93540",
    "end": "99299"
  },
  {
    "text": "means that we end up interfacing with governments because they're the only people who are allowed to levy property taxes of which why Green becomes a tax",
    "start": "99299",
    "end": "107670"
  },
  {
    "text": "in a way on a property and that's how you repay the the loan or lien so we",
    "start": "107670",
    "end": "113430"
  },
  {
    "text": "grapple with data integrations with other businesses the contractors who are actually performing these improvements on properties the the government's that",
    "start": "113430",
    "end": "121740"
  },
  {
    "text": "we're reporting to and and working with to offer this financing and of course the property owners who are giving us their sensitive information that we want",
    "start": "121740",
    "end": "129000"
  },
  {
    "text": "to guard and protect in regards to security we're a lot like a mortgage banking provider in the sense of that's",
    "start": "129000",
    "end": "137220"
  },
  {
    "text": "the kind of information that we need to collect for underwriting loans so you can imagine credit things like that are",
    "start": "137220",
    "end": "143489"
  },
  {
    "text": "things that we we have to hold on to and protect and but we're also in an emerging industry so pace property",
    "start": "143489",
    "end": "150329"
  },
  {
    "text": "assessed clean energy pace has no regulations and far as information security is concerned there is one",
    "start": "150329",
    "end": "156450"
  },
  {
    "text": "sentence and it says data must be encrypted in transit and at rest and so",
    "start": "156450",
    "end": "161940"
  },
  {
    "text": "for those of you who have dealt with any amount of security at all that's sort of like the shrug emoji of security it's sort of like okay great well what else",
    "start": "161940",
    "end": "169349"
  },
  {
    "text": "is there so security matters to us because we're a pace provider that is aggressively focused on protecting our",
    "start": "169349",
    "end": "175650"
  },
  {
    "text": "consumers and our property owners it's extremely important to us that we keep them safe and that we not only don't",
    "start": "175650",
    "end": "182879"
  },
  {
    "text": "allow them to make a fiscally irresponsible decision by getting our financing but also that they don't put",
    "start": "182879",
    "end": "188909"
  },
  {
    "text": "their data at unnecessary risk when they work with us as a company so I guess",
    "start": "188909",
    "end": "194970"
  },
  {
    "text": "then if that's us what's this talk going to be about what we're looking for you guys to get out of it this is somewhat",
    "start": "194970",
    "end": "200760"
  },
  {
    "text": "of a case study for why Green and and how our security evolved as we adopted",
    "start": "200760",
    "end": "205799"
  },
  {
    "text": "cloud native tools and solutions to a lot of what we did we were born in the cloud about six years ago",
    "start": "205799",
    "end": "211980"
  },
  {
    "text": "so we never really had to worry about migrating legacy systems but we did have to deal with migrating legacy mindsets",
    "start": "211980",
    "end": "218280"
  },
  {
    "text": "when it came to dealing with cloud native practices we want to encourage you that kubernetes can and does work",
    "start": "218280",
    "end": "225090"
  },
  {
    "text": "for the finance industry it is safe and that we're actually hoping that a lot of the concepts that we're going to be",
    "start": "225090",
    "end": "231299"
  },
  {
    "text": "showing here and in our implementation actually will be transferable to you in your environment regardless of what",
    "start": "231299",
    "end": "237209"
  },
  {
    "text": "industry you're in and so to frame kind of the next piece of our talk we're going to be speaking a",
    "start": "237209",
    "end": "242730"
  },
  {
    "text": "little bit on like what we're calling the four C's of where we look at security code containers clusters and",
    "start": "242730",
    "end": "249959"
  },
  {
    "text": "the cloud those are arbitrary lines that we drew just so that we could have areas",
    "start": "249959",
    "end": "255090"
  },
  {
    "text": "of focus it's obviously very fluid in there and we're going to talk about various pieces of all of it",
    "start": "255090",
    "end": "260370"
  },
  {
    "text": "but first we're going to be speaking about code in containers and how it pertains to the pipeline which is really",
    "start": "260370",
    "end": "265919"
  },
  {
    "text": "where began to focus on security and automating as much as humanly possible and then we'll talk about the risk to",
    "start": "265919",
    "end": "272060"
  },
  {
    "text": "kubernetes clusters and the tools that already exists either in kubernetes core or in the the cloud native ecosystem",
    "start": "272060",
    "end": "278750"
  },
  {
    "text": "that help to deal with these risks so first I guess to talk about code and containers is my good friend and",
    "start": "278750",
    "end": "285470"
  },
  {
    "text": "colleague Austin Adams so why don't you welcome him while he comes thanks don't",
    "start": "285470",
    "end": "293240"
  },
  {
    "text": "clap too much because we want to leave time for questions at the end so can yes",
    "start": "293240",
    "end": "298880"
  },
  {
    "text": "so our journey with containers started I don't know two a year year and a half",
    "start": "298880",
    "end": "304880"
  },
  {
    "text": "ago two years ago we were using them in development sort of and I remember the",
    "start": "304880",
    "end": "309979"
  },
  {
    "text": "first time I used docker I was completely confused or containers rather and didn't do it the right way and now I",
    "start": "309979",
    "end": "316910"
  },
  {
    "text": "carry my lunch in a docker container to work everyday so for us when we started",
    "start": "316910",
    "end": "322610"
  },
  {
    "text": "getting into containers we we realized that they're awesome in development they solve so many problems but then they add",
    "start": "322610",
    "end": "328430"
  },
  {
    "text": "maybe just as many problems in production in terms of more overhead for security to manage and you know unknown",
    "start": "328430",
    "end": "335510"
  },
  {
    "text": "things that can happen with dr. Tanner and a single point of failure at the docker daemon so so when we started",
    "start": "335510",
    "end": "344659"
  },
  {
    "text": "getting into containers we identified kind of three really important risks that we wanted to to mitigate and some",
    "start": "344659",
    "end": "352880"
  },
  {
    "text": "scenarios that go along with those risks like you know you push a docker image",
    "start": "352880",
    "end": "359180"
  },
  {
    "text": "and you know the next time you push oh the base image updated because I was using the latest tag now I have no idea",
    "start": "359180",
    "end": "364310"
  },
  {
    "text": "what version of the OS I'm running and what version of the packages I'm running",
    "start": "364310",
    "end": "369680"
  },
  {
    "text": "Oh a developer pushed a container from their laptop in there for whatever",
    "start": "369680",
    "end": "376190"
  },
  {
    "text": "reason they have a EM file or some environment variables or some keys that were in their local build context now",
    "start": "376190",
    "end": "381979"
  },
  {
    "text": "they're in the container now running around and we're gonna have to pull those containers and maybe even cause",
    "start": "381979",
    "end": "387169"
  },
  {
    "text": "downtime which is always bad or we're just gonna have to deploy and delete and",
    "start": "387169",
    "end": "392810"
  },
  {
    "text": "and scrub scrub logs and things like that also",
    "start": "392810",
    "end": "399490"
  },
  {
    "text": "you know there's a certain amount of docker so easy so it's easy to just kind",
    "start": "399490",
    "end": "405980"
  },
  {
    "text": "of go with a naive approach and and end up not knowing that you had X package in",
    "start": "405980",
    "end": "410990"
  },
  {
    "text": "your base image because you just use the regular basis that might have come with some random package that nobody actually",
    "start": "410990",
    "end": "416419"
  },
  {
    "text": "needs like image magic or something like that I have no idea or or some obscure",
    "start": "416419",
    "end": "423260"
  },
  {
    "text": "shell so what we try it what we're trying to do at Y green and it's very",
    "start": "423260",
    "end": "428690"
  },
  {
    "text": "much a journey but what we've seen some success and and gotten some value out of is creating a few policies that match up",
    "start": "428690",
    "end": "436250"
  },
  {
    "text": "to those risks that we identified and our security iteration is to try to",
    "start": "436250",
    "end": "442160"
  },
  {
    "text": "automate the enforcement of those policies so those policies in name are and this is like really small so I'm",
    "start": "442160",
    "end": "448340"
  },
  {
    "text": "going to look at the screen which is against the rules but whatever a docker file policy our application and",
    "start": "448340",
    "end": "455810"
  },
  {
    "text": "vulnerability policies and an identity policy so briefly what that is is you",
    "start": "455810",
    "end": "461900"
  },
  {
    "text": "know I doctor file policies everything about the image as its built anything in the docker file is up for our build",
    "start": "461900",
    "end": "469340"
  },
  {
    "text": "server to lint and to review and to tell you that's wrong a CVE policy what sort of cv ease do we",
    "start": "469340",
    "end": "477560"
  },
  {
    "text": "even know what to see the the vulnerabilities inside of our docker image or our dependencies are do we even",
    "start": "477560",
    "end": "483110"
  },
  {
    "text": "have any clue what what we're about to ship to production and then if we do",
    "start": "483110",
    "end": "488599"
  },
  {
    "text": "know what are we willing to accept what's too hard for us to refactor or what is our policy around do we allow",
    "start": "488599",
    "end": "494060"
  },
  {
    "text": "low low risk vulnerabilities versus high vulnerabilities and just getting some",
    "start": "494060",
    "end": "499250"
  },
  {
    "text": "awareness there an identity who's allowed to push to production or who is allowed to build a container is it only",
    "start": "499250",
    "end": "507080"
  },
  {
    "text": "build servers is it developers are they allowed to build containers who has to review a container before it goes out to",
    "start": "507080",
    "end": "512930"
  },
  {
    "text": "production these are questions that we need to ask because we have to provide some sort of reporting and we have to",
    "start": "512930",
    "end": "520729"
  },
  {
    "text": "provide some sort of auditing on everything that's happening we're not processing transactions or anything but",
    "start": "520729",
    "end": "526339"
  },
  {
    "text": "we're dealing with a lot of customer data so if we have a breach we've got to be able to triage through and find out who exactly caused",
    "start": "526339",
    "end": "532010"
  },
  {
    "text": "that what how it happened and how we can tell our the banks that work with us and the investors that worked with us that",
    "start": "532010",
    "end": "538340"
  },
  {
    "text": "we're not gonna do this again which that's not happened but you know with docker at least so to kind of illustrate",
    "start": "538340",
    "end": "546380"
  },
  {
    "text": "how we're automating those policies or enforcing those policies I'm gonna walk you through kind of a typical security",
    "start": "546380",
    "end": "553070"
  },
  {
    "text": "build through our pipeline it's not implementation specific I'm providing",
    "start": "553070",
    "end": "558260"
  },
  {
    "text": "lots of different tools and I'm not going to go into exact detail of how we do it partly because I can't and other",
    "start": "558260",
    "end": "565100"
  },
  {
    "text": "otherwise because you know I just want to provide options so it uh we use we",
    "start": "565100",
    "end": "571220"
  },
  {
    "text": "use a mixture of open-source tools and stuff that we've created that we would love to open-source after you know we",
    "start": "571220",
    "end": "576500"
  },
  {
    "text": "get you know the blessing of our company and everything to do so that are trying",
    "start": "576500",
    "end": "582500"
  },
  {
    "text": "to enforce our dockerfile policy and our CVE policy and our identity policy",
    "start": "582500",
    "end": "587690"
  },
  {
    "text": "so whenever a developer wants to make a micro service a new micro service or a",
    "start": "587690",
    "end": "593600"
  },
  {
    "text": "service at all that has a docker container associated with it they will you know have to have a build plan",
    "start": "593600",
    "end": "600080"
  },
  {
    "text": "that's where everything starts that's how we do development and they will have",
    "start": "600080",
    "end": "605330"
  },
  {
    "text": "to have a docker file so when their docker file gets pushed up when they make a commit to their service we use a",
    "start": "605330",
    "end": "611900"
  },
  {
    "text": "mixture of different docker file linters and is that the slide up there yeah and",
    "start": "611900",
    "end": "617120"
  },
  {
    "text": "on the screen and you can download the slides are links to some really good ones and the goal here at the end of the",
    "start": "617120",
    "end": "624410"
  },
  {
    "text": "day is not about the tools it's about achieving the Sippy standards for docker",
    "start": "624410",
    "end": "629620"
  },
  {
    "text": "built there's a section within the docker benchmark from sis Pete am I",
    "start": "629620",
    "end": "636080"
  },
  {
    "text": "saying that right that that specifies what a docker file should have and what",
    "start": "636080",
    "end": "641090"
  },
  {
    "text": "a docker file shouldn't have and it's it's so incredibly easy to to lint",
    "start": "641090",
    "end": "646600"
  },
  {
    "text": "there's some tools as one of these tools is written in Haskell so go you I love Haskell although I don't know you",
    "start": "646600",
    "end": "656420"
  },
  {
    "text": "guys know I'm saying so it's incredibly easy to use these tools and so my whole",
    "start": "656420",
    "end": "663800"
  },
  {
    "text": "goal with you got kind of this security effort my company is I don't want to be caught shipping something I could have avoided like",
    "start": "663800",
    "end": "670310"
  },
  {
    "text": "there's these security experts spending their entire careers working on finding",
    "start": "670310",
    "end": "675920"
  },
  {
    "text": "vulnerabilities in open source projects and software and so if I'm ignoring the best practices and the lists of CVEs",
    "start": "675920",
    "end": "682610"
  },
  {
    "text": "from from other people then you know I'm doing my whole company a disservice when I knew about them so that's how I see it",
    "start": "682610",
    "end": "688940"
  },
  {
    "text": "so we're using these linters and some homegrown tools to put policy around what base images people can use and",
    "start": "688940",
    "end": "695710"
  },
  {
    "text": "avoiding best practice screw-ups like switching to root and using root as the",
    "start": "695710",
    "end": "702980"
  },
  {
    "text": "final user not removing those weird set good binaries and things that have high",
    "start": "702980",
    "end": "708890"
  },
  {
    "text": "permissions that can do weird stuff and this isn't about runtime this is focused",
    "start": "708890",
    "end": "714410"
  },
  {
    "text": "on build time also you know you with with these tools we're enforcing you know hey maybe every every part of a",
    "start": "714410",
    "end": "722210"
  },
  {
    "text": "certain date of a classification has to use Red Hat they can't use Debian or whatever it might be they have to use",
    "start": "722210",
    "end": "727910"
  },
  {
    "text": "you know when you're classifying your data as you know secure you know top-secret whatever it might be you know",
    "start": "727910",
    "end": "733520"
  },
  {
    "text": "this micro service might deal with super secure data so we want it to use a",
    "start": "733520",
    "end": "738850"
  },
  {
    "text": "version of Red Hat maybe we've got a license with them or something like that something that is security focus where",
    "start": "738850",
    "end": "745760"
  },
  {
    "text": "is my graph on a-- image I don't I don't really need to have Red Hat or whatever",
    "start": "745760",
    "end": "751190"
  },
  {
    "text": "your organization provides that's our recommendation is to formulate those kind of policies especially if you're",
    "start": "751190",
    "end": "757430"
  },
  {
    "text": "working in finance and you need to to actually report on some of that stuff",
    "start": "757430",
    "end": "763090"
  },
  {
    "text": "the the other thing is just these linters can help you identify if you're",
    "start": "763090",
    "end": "769070"
  },
  {
    "text": "just putting way too much in your docker container and I encourage you to look at these projects and even contribute if",
    "start": "769070",
    "end": "775850"
  },
  {
    "text": "you if you have some ideas there the next the next step actually relates to",
    "start": "775850",
    "end": "783230"
  },
  {
    "text": "the application and CVE policy and this is by no means a new thing maybe all of",
    "start": "783230",
    "end": "788600"
  },
  {
    "text": "us are doing this already but scanning your dependencies of your code I mean maybe maybe people aren't doing this",
    "start": "788600",
    "end": "795410"
  },
  {
    "text": "still but do it and lock down your versions you don't it's just like docker",
    "start": "795410",
    "end": "800540"
  },
  {
    "text": "you don't want the next bill to be pulling some random version of a",
    "start": "800540",
    "end": "805600"
  },
  {
    "text": "dependency and then realize that you have no idea what's in your container maybe it's not even unsecured or maybe",
    "start": "805600",
    "end": "811279"
  },
  {
    "text": "it doesn't have a vulnerability but being able to be 100% sure what's inside of your container is actually really",
    "start": "811279",
    "end": "816769"
  },
  {
    "text": "important it helps with triage and debugging and and if something is to",
    "start": "816769",
    "end": "822380"
  },
  {
    "text": "happen then you can point back otherwise you don't really know what's going on until you until you check so being 100%",
    "start": "822380",
    "end": "829820"
  },
  {
    "text": "sure what's going out before it goes out is actually really important so again the goal is to look for clear security",
    "start": "829820",
    "end": "836360"
  },
  {
    "text": "issues so we're using static code analysis tools regardless of language there's a lot of them a wasp azza and",
    "start": "836360",
    "end": "843410"
  },
  {
    "text": "some amazing scanners you can use and and then we're also scanning our",
    "start": "843410",
    "end": "848449"
  },
  {
    "text": "dependencies we're doing passive scanning just to get alerts if there's a new CVE that might relate to our you",
    "start": "848449",
    "end": "855800"
  },
  {
    "text": "know code at rest but then also an active scan of the dependencies as a part of the build process and kicking",
    "start": "855800",
    "end": "862040"
  },
  {
    "text": "things out if they contain hey there's a patch available for this high security high you know",
    "start": "862040",
    "end": "867769"
  },
  {
    "text": "this high profile vulnerability and you just need to update so we're we're creating this security culture through",
    "start": "867769",
    "end": "873920"
  },
  {
    "text": "the pipeline by giving people read builds when they try to push stuff so it's up to the developer to go back and",
    "start": "873920",
    "end": "880519"
  },
  {
    "text": "say oh I need to update this so that they can see the choices that they make actually affect the organization's",
    "start": "880519",
    "end": "886100"
  },
  {
    "text": "security so then if everything's green",
    "start": "886100",
    "end": "894050"
  },
  {
    "text": "on the dockerfile policy and the application dependency check the next step that we do is we actually build the",
    "start": "894050",
    "end": "899839"
  },
  {
    "text": "the container you know we have to build it turn it into an to build the docker file turn it into an image I think is",
    "start": "899839",
    "end": "907010"
  },
  {
    "text": "the right terminology but we do that in a specific way whenever we build we turned our content trust on and what",
    "start": "907010",
    "end": "914240"
  },
  {
    "text": "that means is the docker CLI tool will",
    "start": "914240",
    "end": "919550"
  },
  {
    "text": "not allow us to build a base image to use a base image of from that does not",
    "start": "919550",
    "end": "925850"
  },
  {
    "text": "have signed metadata so what that's doing is that's giving us cryptographic",
    "start": "925850",
    "end": "931089"
  },
  {
    "text": "guarantees that somewhat that the author of this",
    "start": "931089",
    "end": "938180"
  },
  {
    "text": "base image is actually who I think it is depending on you know lots of factors",
    "start": "938180",
    "end": "944150"
  },
  {
    "text": "you know if their keys get compromised the way that notary works is it's very easy to darker content trust and know",
    "start": "944150",
    "end": "951110"
  },
  {
    "text": "Tariq they're the same thing by the way it's very easy to for them to revoke those keys and and keep going and they",
    "start": "951110",
    "end": "958070"
  },
  {
    "text": "can you know have some transparency there but what we want to do is establish that trust with those you know",
    "start": "958070",
    "end": "965210"
  },
  {
    "text": "very restricted set of base images maybe it's the Red Hat image or it's the Amazon Linux image or the Debian image",
    "start": "965210",
    "end": "971060"
  },
  {
    "text": "those base images that you know they're being signed by the owner of a certain set of private keys that they are",
    "start": "971060",
    "end": "977180"
  },
  {
    "text": "keeping secure so they're saying I have these keys I'm signing this metadata on",
    "start": "977180",
    "end": "982340"
  },
  {
    "text": "the notary server on docker hub or whatever docker registry we're using we're pulling that metadata and actually",
    "start": "982340",
    "end": "989060"
  },
  {
    "text": "validating that it's correct before we before we do anything so if a developer",
    "start": "989060",
    "end": "995060"
  },
  {
    "text": "does get past you know the what image whitelist part in the docker file policy",
    "start": "995060",
    "end": "1000400"
  },
  {
    "text": "and there is some notary issue maybe the notary client detects some weird issue",
    "start": "1000400",
    "end": "1007300"
  },
  {
    "text": "the cryptographic metadata the the signed meta day is coming back and the hash of the base image is not matching",
    "start": "1007300",
    "end": "1014050"
  },
  {
    "text": "up then it's going to tell us so we've just you know mitigated some some the",
    "start": "1014050",
    "end": "1019990"
  },
  {
    "text": "Debian docker hub repository getting you know their credentials got lost or got",
    "start": "1019990",
    "end": "1026589"
  },
  {
    "text": "into someone else's hands and some malicious part of an image came in through some hack or something so we're",
    "start": "1026589",
    "end": "1031750"
  },
  {
    "text": "able to be pretty sure that that's not going to happen to us because we're using notary at build time the other",
    "start": "1031750",
    "end": "1038110"
  },
  {
    "text": "time the other things that we're doing and we're trying to automate this next piece is sometimes a service owners or a",
    "start": "1038110",
    "end": "1045790"
  },
  {
    "text": "team might need dependencies that are outside of you know code dependencies or OS dependencies they might just be you",
    "start": "1045790",
    "end": "1051850"
  },
  {
    "text": "know a curl request or a double you get requests we are trying in the linting",
    "start": "1051850",
    "end": "1056920"
  },
  {
    "text": "side and actually at at build time to make sure that developers are checking the checksums the hashes of those and i",
    "start": "1056920",
    "end": "1064150"
  },
  {
    "text": "know that's pretty straightforward but it gets missed a lot of times because doctors are so easy to to make something and you",
    "start": "1064150",
    "end": "1069610"
  },
  {
    "text": "just pasting in curls and getting all these dependencies but making sure that developers have a little bit of thought",
    "start": "1069610",
    "end": "1075040"
  },
  {
    "text": "in what they're doing you know going out getting the the checksum for the version that they want and putting it in it",
    "start": "1075040",
    "end": "1081160"
  },
  {
    "text": "helps them to pin to a specific version so they're not getting hot an auto update and secondly it helps us",
    "start": "1081160",
    "end": "1087190"
  },
  {
    "text": "understand that that checksum isn't changing and obviously there's you know",
    "start": "1087190",
    "end": "1092290"
  },
  {
    "text": "some things that can happen there's some weird release things where they might change the checksum for a specific release same version number or something",
    "start": "1092290",
    "end": "1098620"
  },
  {
    "text": "but we can handle those those are like the you know the oddball cases they're not the the norm so we're trying to",
    "start": "1098620",
    "end": "1104800"
  },
  {
    "text": "automate that maybe if you have a tool that forces Dockers curl commands to",
    "start": "1104800",
    "end": "1110110"
  },
  {
    "text": "check check sums what we're just gonna provide is a little script that everyone has to pull you know out-of-band",
    "start": "1110110",
    "end": "1116320"
  },
  {
    "text": "dependencies using this script which will automatically check a checksum and then the other thing is just always",
    "start": "1116320",
    "end": "1121570"
  },
  {
    "text": "squash your images that will delete any layers that you might not want in there for example the computer stopped",
    "start": "1121570",
    "end": "1132450"
  },
  {
    "text": "yeah I know it just wasn't funny jeez",
    "start": "1142000",
    "end": "1149620"
  },
  {
    "text": "man we're really secure here our",
    "start": "1149620",
    "end": "1157299"
  },
  {
    "text": "password policy is like impossible",
    "start": "1157299",
    "end": "1162628"
  },
  {
    "text": "someone's gonna like record the keystrokes and know your password those are some times you should ohh all right",
    "start": "1165120",
    "end": "1172840"
  },
  {
    "text": "are we back okay Thank You Zack for having a thousand",
    "start": "1172840",
    "end": "1179080"
  },
  {
    "text": "character password yes so we squash so for example a lot of times we keep our",
    "start": "1179080",
    "end": "1185919"
  },
  {
    "text": "dependencies private you know we have stuff we can't open source right now or whatever and so we need a s SH key a",
    "start": "1185919",
    "end": "1193750"
  },
  {
    "text": "private key so it's a pretty limited permissions key but also we don't want this code getting into wrong hands and",
    "start": "1193750",
    "end": "1199929"
  },
  {
    "text": "also we don't we don't want this key in the container at runtime so this may be",
    "start": "1199929",
    "end": "1205330"
  },
  {
    "text": "straightforward it's on every blog out there how to squash your images so I probably don't need to tell how to do it",
    "start": "1205330",
    "end": "1210940"
  },
  {
    "text": "if so you can google but it's easy to turn on you basically have to enable an",
    "start": "1210940",
    "end": "1215980"
  },
  {
    "text": "experimental flag in the docker dr. Damon demon Damon and then you can",
    "start": "1215980",
    "end": "1223480"
  },
  {
    "text": "squash your images what it will do is it basically just shoves everything into a tar ball at the end one tar ball instead",
    "start": "1223480",
    "end": "1229690"
  },
  {
    "text": "of a you know a sequence of of zipped or compressed files so that you know any",
    "start": "1229690",
    "end": "1235690"
  },
  {
    "text": "operations that you may have deleted like a file getting added in and then deleting that's all just gone so it's",
    "start": "1235690",
    "end": "1241389"
  },
  {
    "text": "just a normal compressed folder so that key is actually 100% gone so after we",
    "start": "1241389",
    "end": "1249580"
  },
  {
    "text": "build and we have you know ensure that there's some trust with the base image",
    "start": "1249580",
    "end": "1257110"
  },
  {
    "text": "Creator which most of the time the base image is that developers will be using will be you know DevOps",
    "start": "1257110",
    "end": "1263940"
  },
  {
    "text": "department provided images because we provide a lot of those intermediary images for them will be signed by us so",
    "start": "1263940",
    "end": "1271869"
  },
  {
    "text": "that's not a big deal but it's still good to to do because we have our utilities in our in our sea I like",
    "start": "1271869",
    "end": "1277780"
  },
  {
    "text": "our Griffin images as a other thing for a CI maybe I shouldn't have told you we",
    "start": "1277780",
    "end": "1283270"
  },
  {
    "text": "use Griffin I'm not sure what I can say what I can't say the next one is we go",
    "start": "1283270",
    "end": "1288310"
  },
  {
    "text": "into some security testing which is my favorite part and we it's trying to",
    "start": "1288310",
    "end": "1295710"
  },
  {
    "text": "automate the what we're what we're what we're okay with shipping in terms of",
    "start": "1295710",
    "end": "1300870"
  },
  {
    "text": "vulnerabilities that have already been found so what we do is we use tools like",
    "start": "1300870",
    "end": "1306430"
  },
  {
    "text": "core OS Claire and Dagda and other image scanning systems both passively and",
    "start": "1306430",
    "end": "1313090"
  },
  {
    "text": "actively in the pipeline passively to once we've pushed an image you know if",
    "start": "1313090",
    "end": "1318160"
  },
  {
    "text": "there's a vulnerability found within the next couple of days we'll get an alert hey these images are vulnerable so then",
    "start": "1318160",
    "end": "1323890"
  },
  {
    "text": "we can take action but then also actively within the within the within the build to make sure that this image",
    "start": "1323890",
    "end": "1331000"
  },
  {
    "text": "before we push it is not going to have any high you know red vulnerabilities or even yellow depending on your",
    "start": "1331000",
    "end": "1337390"
  },
  {
    "text": "organizational you know what what you're ok with shipping then after we've done",
    "start": "1337390",
    "end": "1343630"
  },
  {
    "text": "that this is my favorite part we use the set attack proxy and we pointed at the",
    "start": "1343630",
    "end": "1349180"
  },
  {
    "text": "API Docs of the micro service and we see if the Zetas attack proxy can get in so",
    "start": "1349180",
    "end": "1355150"
  },
  {
    "text": "if you don't know what does that attack proxy is it's a little not little it's a really cool penetration tester thing",
    "start": "1355150",
    "end": "1362830"
  },
  {
    "text": "that will use a bunch of already known patterns for you know a bunch of",
    "start": "1362830",
    "end": "1369400"
  },
  {
    "text": "different security vulnerabilities and it will actually attack some port on your computer so what we do is we spin",
    "start": "1369400",
    "end": "1375670"
  },
  {
    "text": "up a set attack proxy and docker and then we spin up our little service in a little environment in docker and we just",
    "start": "1375670",
    "end": "1382030"
  },
  {
    "text": "let the set attack proxy go to work and so again it's it's not gonna find some zero-day thing maybe but it's it's it's",
    "start": "1382030",
    "end": "1388960"
  },
  {
    "text": "it's our attempt to never ship you know an apache struts out of date now that equifax has already been hacked by it or",
    "start": "1388960",
    "end": "1395830"
  },
  {
    "text": "whatever you know we don't want to be caught doing the same thing that the whole community has already you know",
    "start": "1395830",
    "end": "1401500"
  },
  {
    "text": "fixed so that's that's the goal here you can get a lot of information on the on",
    "start": "1401500",
    "end": "1407650"
  },
  {
    "text": "the on links over there so this is really fun so that's why we came up with continuous",
    "start": "1407650",
    "end": "1413340"
  },
  {
    "text": "hacking you know like continuous integration continuous hacking of your containers kind of fun and then the the",
    "start": "1413340",
    "end": "1419400"
  },
  {
    "text": "last step of the security round of what our of our build process that all of our services go through is the identity",
    "start": "1419400",
    "end": "1427110"
  },
  {
    "text": "policy so and this actually we were reworking from yesterday because we",
    "start": "1427110",
    "end": "1432780"
  },
  {
    "text": "heard this really good talk from IBM guys on this our IBM people on this tool",
    "start": "1432780",
    "end": "1439260"
  },
  {
    "text": "they created called port eros which is a web hook admission controller that allow that note that works with notary to",
    "start": "1439260",
    "end": "1445500"
  },
  {
    "text": "allow multiple keys to sign an image and then you can do different types of",
    "start": "1445500",
    "end": "1451020"
  },
  {
    "text": "admission based on namespace and based on keys so what we do is we obviously we",
    "start": "1451020",
    "end": "1457110"
  },
  {
    "text": "sign our images and for specific environments we sign them with specific",
    "start": "1457110",
    "end": "1462740"
  },
  {
    "text": "signers right so there's a in in docker CLI it's this notion of a signer which",
    "start": "1462740",
    "end": "1470190"
  },
  {
    "text": "is someone other than the root key the root private key that can sign an image",
    "start": "1470190",
    "end": "1475500"
  },
  {
    "text": "so a trusted signer and then a notary it's the exact same thing just a different name it's called a delegation",
    "start": "1475500",
    "end": "1480570"
  },
  {
    "text": "key so notary are the doctor CLI uses the notary NGO client to actually",
    "start": "1480570",
    "end": "1486210"
  },
  {
    "text": "accomplish this so what we're doing is were you know we're not allowing images to go to production that haven't been",
    "start": "1486210",
    "end": "1491910"
  },
  {
    "text": "signed with a specific key but you know developers can play around in lower environments with whatever but before a",
    "start": "1491910",
    "end": "1499340"
  },
  {
    "text": "container is actually allowed to get into the production cluster it has to go through some more rigorous examination",
    "start": "1499340",
    "end": "1505980"
  },
  {
    "text": "sometimes some annual steps sometimes just it's a matter of just you know we",
    "start": "1505980",
    "end": "1512190"
  },
  {
    "text": "just want to be sure that nothing's going on nothing is evil inside that",
    "start": "1512190",
    "end": "1517230"
  },
  {
    "text": "container so we're using docker to our notary to actually sign this but one",
    "start": "1517230",
    "end": "1523500"
  },
  {
    "text": "quick tip for notary and this is where I'm going to end is if you're going to get involved with notary never ever ever",
    "start": "1523500",
    "end": "1529770"
  },
  {
    "text": "ever ever use your route or target keys so and you should learn you can you can",
    "start": "1529770",
    "end": "1536880"
  },
  {
    "text": "look at the docs to learn about how notary works but basically you're issued thousand different private keys",
    "start": "1536880",
    "end": "1542310"
  },
  {
    "text": "two of which are I know it's kind of crazy we're working on that in the notary project to make that better and",
    "start": "1542310",
    "end": "1548820"
  },
  {
    "text": "easier to use but you get a root key in a target key and those can remain offline you don't need them to actually",
    "start": "1548820",
    "end": "1557220"
  },
  {
    "text": "sign images you need them just to create these signer keys these trusted keys so if any of",
    "start": "1557220",
    "end": "1562560"
  },
  {
    "text": "these delegation keys get compromised because you have kept these root Keys",
    "start": "1562560",
    "end": "1568620"
  },
  {
    "text": "offline in like a flash drive or in a security device or something you can actually revoke privileges on those keys",
    "start": "1568620",
    "end": "1575670"
  },
  {
    "text": "those keys are you know derived from those other keys but it makes it easy to",
    "start": "1575670",
    "end": "1581040"
  },
  {
    "text": "recover from a breach so you can be pretty sure that even if you you do get",
    "start": "1581040",
    "end": "1587400"
  },
  {
    "text": "a build server gets hacked and they get the key and they're signing images and pushing them you can revoke those and and then you don't even have to delete",
    "start": "1587400",
    "end": "1594690"
  },
  {
    "text": "them out of your registry your kubernetes cluster when it pulls that image or your admission controller when",
    "start": "1594690",
    "end": "1600720"
  },
  {
    "text": "it pulls that will recognize oh this key ID is not within the signers list on the",
    "start": "1600720",
    "end": "1606870"
  },
  {
    "text": "notary server so I'm not gonna let this image go through so that's what we're doing in our build pipeline I hope",
    "start": "1606870",
    "end": "1612870"
  },
  {
    "text": "that's useful maybe inspirational at least and so obviously the container has",
    "start": "1612870",
    "end": "1619380"
  },
  {
    "text": "to go somewhere so to finish off the security that we're doing that why green zach is gonna talk about how we're doing",
    "start": "1619380",
    "end": "1625830"
  },
  {
    "text": "it in the cluster and the cloud actually running these containers we've spent so much time making that sure that they're",
    "start": "1625830",
    "end": "1630870"
  },
  {
    "text": "secure thanks Austin so I guess let's now talk about the last two seeds which are the cluster in the",
    "start": "1630870",
    "end": "1636630"
  },
  {
    "text": "cloud it is this is probably going to",
    "start": "1636630",
    "end": "1642180"
  },
  {
    "text": "make the most sense I was going to ask actually are there any sis offs admins or DevOps folks in the in the car dev",
    "start": "1642180",
    "end": "1647460"
  },
  {
    "text": "check offs types okay a few of you nice you guys escaped wonderful so the the",
    "start": "1647460",
    "end": "1654090"
  },
  {
    "text": "whole notion of running software in production is obviously nothing new to any industry stability is extremely",
    "start": "1654090",
    "end": "1661410"
  },
  {
    "text": "important and kubernetes does a lot of that out of the box but as far as",
    "start": "1661410",
    "end": "1666450"
  },
  {
    "text": "running software securely in production that is it's actually been a growing field and growing every single day I",
    "start": "1666450",
    "end": "1673020"
  },
  {
    "text": "mean the most hotly coveted position in the c-suite now is the sea so the chief",
    "start": "1673020",
    "end": "1678890"
  },
  {
    "text": "information security officer so I guess let's talk a little bit about issues and kubernetes for the risk-adverse",
    "start": "1678890",
    "end": "1684590"
  },
  {
    "text": "or the the people who are going to be running your clusters in production the",
    "start": "1684590",
    "end": "1691070"
  },
  {
    "text": "software so it's important to note that the locus of control for you as a software operator someone who deploys",
    "start": "1691070",
    "end": "1698179"
  },
  {
    "text": "code onto the cloud that is no longer you that is kubernetes the kubernetes",
    "start": "1698179",
    "end": "1703820"
  },
  {
    "text": "will be monitoring restarting pods deploying scaling handling a lot of",
    "start": "1703820",
    "end": "1709760"
  },
  {
    "text": "those concerns for you so there's a lot less control over that final resulting environment which means you really have",
    "start": "1709760",
    "end": "1716420"
  },
  {
    "text": "to nail what we spent most of our time on which is the the docker image that eventually gets deployed onto the",
    "start": "1716420",
    "end": "1721940"
  },
  {
    "text": "cluster security really starts in the build pipeline for us so if you",
    "start": "1721940",
    "end": "1727510"
  },
  {
    "text": "understand that the locus of control moves from you to the cluster and the are the way that we think of the",
    "start": "1727510",
    "end": "1733040"
  },
  {
    "text": "kubernetes cluster is essentially it's a benevolent botnet it's the command and control servers or the API masters and",
    "start": "1733040",
    "end": "1738980"
  },
  {
    "text": "the couplets are the nodes which is kind of funny when you think about it and then all of a sudden you're like oh I",
    "start": "1738980",
    "end": "1744140"
  },
  {
    "text": "hope I never get compromised because it's a botnet so it could become a malevolent botnet and that's not",
    "start": "1744140",
    "end": "1749960"
  },
  {
    "text": "obviously something you want so it's guess it's important to note that this is open source software which means it's",
    "start": "1749960",
    "end": "1755570"
  },
  {
    "text": "generally extremely well reviewed by a lot of brilliant people some of you here are even contributors thank you so very",
    "start": "1755570",
    "end": "1761179"
  },
  {
    "text": "much you've helped us to do well as a business but that does not make it flawless they mean just two months ago",
    "start": "1761179",
    "end": "1767840"
  },
  {
    "text": "with the host Pat host path mapping issue that was released as a CV in",
    "start": "1767840",
    "end": "1773030"
  },
  {
    "text": "kubernetes was one of the more serious that happened and there was a patch rolled out in about 24 hours but that",
    "start": "1773030",
    "end": "1779480"
  },
  {
    "text": "doesn't mean that every single cluster that had that vulnerability also had that patch so it's extremely important",
    "start": "1779480",
    "end": "1785270"
  },
  {
    "text": "that as a cluster operator we at Y green we're subscribed to every CVE mailing",
    "start": "1785270",
    "end": "1790610"
  },
  {
    "text": "list that we can the kubernetes announced Jose is a group that you they'll let you know if there's",
    "start": "1790610",
    "end": "1795950"
  },
  {
    "text": "something coming in as a security vulnerability yeah it's a Google group so kubernetes - announced it's important",
    "start": "1795950",
    "end": "1802429"
  },
  {
    "text": "- to be aware of that because if you're going to run software securely in production but your underlying for structure is absolutely hosed then",
    "start": "1802429",
    "end": "1810100"
  },
  {
    "text": "it really doesn't actually matter how secure your container is because your environment isn't also important to note",
    "start": "1810100",
    "end": "1816789"
  },
  {
    "text": "that your attack service essentially doubles when you're getting into kubernetes and that's one of the considerations that we had to make it",
    "start": "1816789",
    "end": "1822669"
  },
  {
    "text": "why Green were we comfortable with that because traditionally when you look at vulnerabilities and threat modeling you're like okay I think that a",
    "start": "1822669",
    "end": "1828429"
  },
  {
    "text": "vulnerability could come from the the hypervisor or the VM it could come from the network or it could come from the",
    "start": "1828429",
    "end": "1834009"
  },
  {
    "text": "software I deploy onto it well with kubernetes you have not just that but you have also a mini hypervisor called",
    "start": "1834009",
    "end": "1840850"
  },
  {
    "text": "the doctor daemon a mini VM which is called a docker container a container networking interface and of course obviously the software that orchestrates",
    "start": "1840850",
    "end": "1847029"
  },
  {
    "text": "all of that so that's a lot more places where stuff could feasibly go wrong and that that becomes a concern and so it's",
    "start": "1847029",
    "end": "1855840"
  },
  {
    "text": "improper cluster bootstrap and and setup will cause security holes so like if you're not paying attention to the",
    "start": "1855840",
    "end": "1862269"
  },
  {
    "text": "billion levers and buttons that you can push in a cluster or how those interactions work and then you know and",
    "start": "1862269",
    "end": "1868419"
  },
  {
    "text": "we found out like okay it's actually really easy to make stuff super insecure or unsafe in in production and then of",
    "start": "1868419",
    "end": "1874869"
  },
  {
    "text": "course right now there's really no body responsible for the determining of regulatory compliance for kubernetes",
    "start": "1874869",
    "end": "1881440"
  },
  {
    "text": "clusters I mean there's a lot of people who have great ideas and sis P and C is are doing an awesome job of working on",
    "start": "1881440",
    "end": "1887619"
  },
  {
    "text": "cloud native standards but really like inside of even kubernetes there's there's current discussions going on",
    "start": "1887619",
    "end": "1892929"
  },
  {
    "text": "between all the SIG's of like who's really responsible for determining the overall security of this this",
    "start": "1892929",
    "end": "1898600"
  },
  {
    "text": "environment so if those are the concerns then here are some mitigations a lot of",
    "start": "1898600",
    "end": "1903610"
  },
  {
    "text": "these will be extremely familiar to those of you who runs secure software in production kubernetes basically has abstractions for everything that that",
    "start": "1903610",
    "end": "1911200"
  },
  {
    "text": "you would traditionally run in a cloud here is a quick list it's by no means exhaustive but I'm going to run through",
    "start": "1911200",
    "end": "1916539"
  },
  {
    "text": "it really quickly so we can get some questions we're running a time our back",
    "start": "1916539",
    "end": "1921970"
  },
  {
    "text": "role-based access control it's right out happens right after authorized eight are authentication and the api server it",
    "start": "1921970",
    "end": "1927730"
  },
  {
    "text": "works just like role-based access control you can set up all of your principles objects verbs just ensuring",
    "start": "1927730",
    "end": "1933909"
  },
  {
    "text": "that whoever is talking to your kubernetes cluster is allowed to do what it is that they just asked for if",
    "start": "1933909",
    "end": "1939279"
  },
  {
    "text": "they're trying to delete your production deployment of some extremely critical services do they actually have the permission to do that",
    "start": "1939279",
    "end": "1945160"
  },
  {
    "text": "Auerbach will help cover that API server admission controllers these are beautiful learn these love these build",
    "start": "1945160",
    "end": "1952540"
  },
  {
    "text": "your own if you want to API server admission controllers happen right after the authentication and authorization",
    "start": "1952540",
    "end": "1958690"
  },
  {
    "text": "step of kubernetes it's essentially one more place where the API server can",
    "start": "1958690",
    "end": "1963820"
  },
  {
    "text": "check to say is this object okay to go into the cluster or does something need to change so it makes sense there's a",
    "start": "1963820",
    "end": "1970120"
  },
  {
    "text": "well published set of defaults validating admission controller basically says yes no this is allowed to",
    "start": "1970120",
    "end": "1975670"
  },
  {
    "text": "go in an example would be is this pod trying to run docker privilege mode no",
    "start": "1975670",
    "end": "1980980"
  },
  {
    "text": "don't let it in a mutating webhook which was our friends over from IBM and porty Eris which was actually changed the",
    "start": "1980980",
    "end": "1988150"
  },
  {
    "text": "object to match the specification that you have defined before it goes into the cluster there's debate on whether or not",
    "start": "1988150",
    "end": "1994390"
  },
  {
    "text": "that's actually what you want to do if you should just outright reject an API server request because technically it",
    "start": "1994390",
    "end": "1999400"
  },
  {
    "text": "changes before it goes in the cluster so it's not exactly what you sent but actually it works out in the case that IBM mentioned audit logging is new in",
    "start": "1999400",
    "end": "2008570"
  },
  {
    "text": "1.9 its beta right now in 1.10 it's terrific it is as good as you make it so",
    "start": "2008570",
    "end": "2015180"
  },
  {
    "text": "if you have a coupon ease cluster and you're just passing around your coop config file to everybody and then it's that essentially makes everybody god",
    "start": "2015180",
    "end": "2021030"
  },
  {
    "text": "mode on the cluster that is probably not going to be super safer or helpful and",
    "start": "2021030",
    "end": "2026190"
  },
  {
    "text": "if you're doing issue diagnosis or triage then every single request from the API server point of view looks the",
    "start": "2026190",
    "end": "2031230"
  },
  {
    "text": "same so that's not very helpful it's good to partner that with an IDP like hep Tio's AWS Authenticator for running",
    "start": "2031230",
    "end": "2037020"
  },
  {
    "text": "an AWS or core OS is Dex and we'll talk about in a moment network security policies pod security policies",
    "start": "2037020",
    "end": "2043430"
  },
  {
    "text": "essentially they give you the control around your environment that we used to have a things like AWS security groups",
    "start": "2043430",
    "end": "2049169"
  },
  {
    "text": "or things like setting up SELinux profiles I won't go super deep for them because",
    "start": "2049169",
    "end": "2054540"
  },
  {
    "text": "like I said we're only a time and then if that isn't enough control for you scheduling taints and toleration z' these are actually kind of cool",
    "start": "2054540",
    "end": "2060898"
  },
  {
    "text": "essentially you can make sure that sensitive workloads and non sensitive workloads are not Co scheduled so even",
    "start": "2060899",
    "end": "2066840"
  },
  {
    "text": "if you have a node compromised there is still separation so you wouldn't want a Drupal content",
    "start": "2066840",
    "end": "2072300"
  },
  {
    "text": "management website running next to something that pulls credit so then you can schedule those so that they take nor",
    "start": "2072300",
    "end": "2078570"
  },
  {
    "text": "tolerate and you can do pod affinity or anti affinity to make sure that they're not actually running on the same node inside of your cluster so then you don't",
    "start": "2078570",
    "end": "2085020"
  },
  {
    "text": "end up having a problem where if Drupal which they had a zero day a few days ago gets hacked and someone runs a shell",
    "start": "2085020",
    "end": "2091560"
  },
  {
    "text": "code attack and somehow they managed to escape the dr. Damon and they're running in route inside of your credit polling",
    "start": "2091560",
    "end": "2096840"
  },
  {
    "text": "service cool so some external tools aqua scanners COO bench project Thank You aqua scanner if",
    "start": "2096840",
    "end": "2103440"
  },
  {
    "text": "you're here they do see is for for the kubernetes environment it's it's it's",
    "start": "2103440",
    "end": "2110520"
  },
  {
    "text": "pretty good you basically can continuously check your conformance with the CIS standards that are published for",
    "start": "2110520",
    "end": "2116250"
  },
  {
    "text": "kubernetes right now obviously I am and then communication in between services those can be secured with a service mesh",
    "start": "2116250",
    "end": "2123390"
  },
  {
    "text": "like sto or linker D or conduit or one of those and that is absolutely",
    "start": "2123390",
    "end": "2129180"
  },
  {
    "text": "incredible all of that was like a whirlwind so if you can use a managed service there are",
    "start": "2129180",
    "end": "2135270"
  },
  {
    "text": "people who are paid very well to make sure that everything is don't care do we were in AWS before eks is the thing it's",
    "start": "2135270",
    "end": "2142290"
  },
  {
    "text": "still not a thing AWS if you're listening please please make it a thing but if you can't then you can use a tool",
    "start": "2142290",
    "end": "2149940"
  },
  {
    "text": "like cops it's great because you can version your cluster it has an automated update and rollback strategy allows you",
    "start": "2149940",
    "end": "2155760"
  },
  {
    "text": "to configure everything but you're kind of on your own for issue diagnosis and then it has a high management overhead I",
    "start": "2155760",
    "end": "2161370"
  },
  {
    "text": "mean there's people who have full time jobs now in companies to make sure that their clusters are alive with that",
    "start": "2161370",
    "end": "2167930"
  },
  {
    "text": "kubernetes is good for why Green why Green is great for the planet you can come work with us thanks so much for you",
    "start": "2167930",
    "end": "2173160"
  },
  {
    "text": "guys this time",
    "start": "2173160",
    "end": "2175579"
  },
  {
    "text": "looks like I have no questions on the Google thing but if anyone wanted to raise their hand really quickly I know",
    "start": "2180570",
    "end": "2186000"
  },
  {
    "text": "it's time and it's lunch so I don't blame you for just piecing out questions",
    "start": "2186000",
    "end": "2192660"
  },
  {
    "text": "questions questions how did Y grande get to be amazing answer just because it's all cuz of zak",
    "start": "2192660",
    "end": "2200720"
  },
  {
    "text": "cool all right well if you have questions you can come find us over on the side thank you guys",
    "start": "2200900",
    "end": "2208160"
  }
]