[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hello everyone",
    "start": "80",
    "end": "1520"
  },
  {
    "text": "my name is cyprian hackman i'm a devops",
    "start": "1520",
    "end": "3919"
  },
  {
    "text": "engineer working for poly poly and today",
    "start": "3919",
    "end": "6160"
  },
  {
    "text": "we'll be talking about the road to ipv6",
    "start": "6160",
    "end": "8480"
  },
  {
    "text": "support in chaos",
    "start": "8480",
    "end": "11678"
  },
  {
    "text": "what is kops kops is a cloud aware",
    "start": "12799",
    "end": "15040"
  },
  {
    "text": "kubernetes installer provisions the",
    "start": "15040",
    "end": "17520"
  },
  {
    "text": "underwear cloud infrastructure and also",
    "start": "17520",
    "end": "19840"
  },
  {
    "text": "installed the kubernetes core components",
    "start": "19840",
    "end": "22240"
  },
  {
    "text": "including add-ons",
    "start": "22240",
    "end": "23840"
  },
  {
    "text": "since k-op zones the life cycle of both",
    "start": "23840",
    "end": "26160"
  },
  {
    "text": "the cloud resources and kubernetes it",
    "start": "26160",
    "end": "28160"
  },
  {
    "text": "can handle all aspects of creating a",
    "start": "28160",
    "end": "30240"
  },
  {
    "text": "native ipv6 kubernetes cluster",
    "start": "30240",
    "end": "33600"
  },
  {
    "text": "focus so far has been on aws and gce but",
    "start": "33600",
    "end": "37840"
  },
  {
    "text": "adding other clouds should not be an",
    "start": "37840",
    "end": "39920"
  },
  {
    "text": "issue",
    "start": "39920",
    "end": "42239"
  },
  {
    "start": "41000",
    "end": "41000"
  },
  {
    "text": "why ipv6 larger address space allows for",
    "start": "42480",
    "end": "45840"
  },
  {
    "text": "simple flat network architecture",
    "start": "45840",
    "end": "48719"
  },
  {
    "text": "no need for not no need for complex",
    "start": "48719",
    "end": "51280"
  },
  {
    "text": "calculations",
    "start": "51280",
    "end": "52879"
  },
  {
    "text": "and",
    "start": "52879",
    "end": "54239"
  },
  {
    "text": "doing",
    "start": "54239",
    "end": "55440"
  },
  {
    "text": "magic with subnets easier to avoid ipv6",
    "start": "55440",
    "end": "59520"
  },
  {
    "text": "conflicts between vpcs accounts",
    "start": "59520",
    "end": "61920"
  },
  {
    "text": "companies",
    "start": "61920",
    "end": "63199"
  },
  {
    "text": "native cloud drought native routing for",
    "start": "63199",
    "end": "65680"
  },
  {
    "text": "pods allows direct targeting behind load",
    "start": "65680",
    "end": "68240"
  },
  {
    "text": "balancers without going to cube proxy or",
    "start": "68240",
    "end": "71200"
  },
  {
    "text": "notepad",
    "start": "71200",
    "end": "72640"
  },
  {
    "text": "it's both performance and",
    "start": "72640",
    "end": "76240"
  },
  {
    "text": "debugging",
    "start": "76240",
    "end": "78080"
  },
  {
    "text": "improvement",
    "start": "78080",
    "end": "80320"
  },
  {
    "text": "cni's can also be much simpler if they",
    "start": "80320",
    "end": "84240"
  },
  {
    "text": "are designed for ipv6",
    "start": "84240",
    "end": "87759"
  },
  {
    "text": "this is not to say that current cnis are",
    "start": "87759",
    "end": "90000"
  },
  {
    "text": "not ipv6 aware but",
    "start": "90000",
    "end": "93200"
  },
  {
    "text": "they are designed with ipv4 in mind and",
    "start": "93200",
    "end": "97920"
  },
  {
    "text": "have to deal with all the limitations of",
    "start": "97920",
    "end": "100320"
  },
  {
    "text": "it",
    "start": "100320",
    "end": "102479"
  },
  {
    "start": "102000",
    "end": "102000"
  },
  {
    "text": "we decided early on that we would",
    "start": "104560",
    "end": "106880"
  },
  {
    "text": "support single stack addressing for pod",
    "start": "106880",
    "end": "109680"
  },
  {
    "text": "networking and do all stack at the edge",
    "start": "109680",
    "end": "114399"
  },
  {
    "text": "this allowed to reduce the complexity",
    "start": "114399",
    "end": "118079"
  },
  {
    "text": "of the development and",
    "start": "118079",
    "end": "120960"
  },
  {
    "text": "very easy",
    "start": "120960",
    "end": "122560"
  },
  {
    "text": "to assess",
    "start": "122560",
    "end": "124000"
  },
  {
    "text": "the current status of ipv6 in kubernetes",
    "start": "124000",
    "end": "128080"
  },
  {
    "text": "also support for dura stock is quite",
    "start": "128080",
    "end": "130319"
  },
  {
    "text": "complex and negates many of the benefits",
    "start": "130319",
    "end": "133040"
  },
  {
    "text": "of ipv6",
    "start": "133040",
    "end": "134959"
  },
  {
    "text": "not many would be able to",
    "start": "134959",
    "end": "136959"
  },
  {
    "text": "migrate ipv4",
    "start": "136959",
    "end": "139520"
  },
  {
    "text": "single stack clusters to dual stack",
    "start": "139520",
    "end": "142080"
  },
  {
    "text": "anyway",
    "start": "142080",
    "end": "143440"
  },
  {
    "text": "again due to complexity and",
    "start": "143440",
    "end": "146959"
  },
  {
    "text": "risks",
    "start": "146959",
    "end": "148080"
  },
  {
    "text": "and downtime",
    "start": "148080",
    "end": "150800"
  },
  {
    "start": "150000",
    "end": "150000"
  },
  {
    "text": "as at the time",
    "start": "152560",
    "end": "154800"
  },
  {
    "text": "instances were only",
    "start": "154800",
    "end": "157360"
  },
  {
    "text": "allowed to get",
    "start": "157360",
    "end": "159280"
  },
  {
    "text": "single ipv6 addresses",
    "start": "159280",
    "end": "161920"
  },
  {
    "text": "we decided to use unique local addresses",
    "start": "161920",
    "end": "166560"
  },
  {
    "text": "this does not unlock the real benefits",
    "start": "166800",
    "end": "168800"
  },
  {
    "text": "of ipv6 as nat is still required but",
    "start": "168800",
    "end": "173120"
  },
  {
    "text": "the assessment of kubernetes readiness",
    "start": "173120",
    "end": "176239"
  },
  {
    "text": "can be done",
    "start": "176239",
    "end": "178319"
  },
  {
    "text": "it also requires overlay networking",
    "start": "178319",
    "end": "181840"
  },
  {
    "text": "and tunnels between nodes but",
    "start": "181840",
    "end": "184879"
  },
  {
    "text": "we were ready for that",
    "start": "184879",
    "end": "188080"
  },
  {
    "start": "187000",
    "end": "187000"
  },
  {
    "text": "well ready but not quite",
    "start": "188080",
    "end": "191280"
  },
  {
    "text": "ipv6 must be configured in lots of",
    "start": "191280",
    "end": "193519"
  },
  {
    "text": "places and i really mean lots of places",
    "start": "193519",
    "end": "198319"
  },
  {
    "text": "so both control plane and cni must be",
    "start": "198319",
    "end": "201360"
  },
  {
    "text": "configured and they must actually agree",
    "start": "201360",
    "end": "204560"
  },
  {
    "text": "on that configuration",
    "start": "204560",
    "end": "207760"
  },
  {
    "text": "after we found out the right settings",
    "start": "208080",
    "end": "210959"
  },
  {
    "text": "with the help of",
    "start": "210959",
    "end": "212400"
  },
  {
    "text": "the kubernetes developers",
    "start": "212400",
    "end": "215680"
  },
  {
    "text": "we hit",
    "start": "215680",
    "end": "217040"
  },
  {
    "text": "a",
    "start": "217040",
    "end": "217920"
  },
  {
    "text": "challenge with aws cloud provider it was",
    "start": "217920",
    "end": "220959"
  },
  {
    "text": "not aware of ipv6 addresses at all",
    "start": "220959",
    "end": "225360"
  },
  {
    "text": "which was not really good for us as",
    "start": "225360",
    "end": "228239"
  },
  {
    "text": "we needed it to assign",
    "start": "228239",
    "end": "230959"
  },
  {
    "text": "the ipv6 addresses to node objects",
    "start": "230959",
    "end": "234080"
  },
  {
    "text": "we fixed that",
    "start": "234080",
    "end": "235599"
  },
  {
    "text": "and again",
    "start": "235599",
    "end": "237360"
  },
  {
    "text": "another",
    "start": "237360",
    "end": "238959"
  },
  {
    "text": "challenge",
    "start": "238959",
    "end": "240400"
  },
  {
    "text": "ip addresses were not",
    "start": "240400",
    "end": "243640"
  },
  {
    "text": "prioritized as we expected",
    "start": "243640",
    "end": "247840"
  },
  {
    "text": "after many debates",
    "start": "247840",
    "end": "250000"
  },
  {
    "text": "the decision was that",
    "start": "250000",
    "end": "252840"
  },
  {
    "text": "cloud controller should",
    "start": "252840",
    "end": "256239"
  },
  {
    "text": "send the ip addresses in the order that",
    "start": "256239",
    "end": "259759"
  },
  {
    "text": "it desired to be used so",
    "start": "259759",
    "end": "262560"
  },
  {
    "text": "it basically decided the priority",
    "start": "262560",
    "end": "265840"
  },
  {
    "text": "we fixed that and",
    "start": "265840",
    "end": "268639"
  },
  {
    "text": "tests were possible now",
    "start": "268639",
    "end": "271600"
  },
  {
    "text": "we created",
    "start": "271600",
    "end": "273840"
  },
  {
    "text": "periodic tests",
    "start": "273840",
    "end": "276240"
  },
  {
    "text": "and",
    "start": "276240",
    "end": "277520"
  },
  {
    "text": "we tried them for",
    "start": "277520",
    "end": "280400"
  },
  {
    "text": "some time okay",
    "start": "280400",
    "end": "283759"
  },
  {
    "text": "during this time",
    "start": "283759",
    "end": "285680"
  },
  {
    "text": "together with other developers we fixed",
    "start": "285680",
    "end": "288560"
  },
  {
    "text": "all the needs",
    "start": "288560",
    "end": "289919"
  },
  {
    "text": "that we found",
    "start": "289919",
    "end": "291199"
  },
  {
    "text": "mostly testing issues but there were",
    "start": "291199",
    "end": "294160"
  },
  {
    "text": "some minor issues in kubernetes too",
    "start": "294160",
    "end": "298400"
  },
  {
    "text": "and",
    "start": "298400",
    "end": "300080"
  },
  {
    "text": "we thought that",
    "start": "300080",
    "end": "302000"
  },
  {
    "text": "this was it for now",
    "start": "302000",
    "end": "304720"
  },
  {
    "text": "but surprise",
    "start": "304720",
    "end": "307199"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "my name",
    "start": "307199",
    "end": "309120"
  },
  {
    "text": "i work at is radar",
    "start": "309120",
    "end": "311199"
  },
  {
    "text": "and a sportbreaker we are really",
    "start": "311199",
    "end": "313440"
  },
  {
    "text": "interested in those benefits that we",
    "start": "313440",
    "end": "316000"
  },
  {
    "text": "mentioned earlier",
    "start": "316000",
    "end": "318240"
  },
  {
    "text": "and last fall edwards released a number",
    "start": "318240",
    "end": "321440"
  },
  {
    "text": "of ip6 features",
    "start": "321440",
    "end": "323440"
  },
  {
    "text": "that allowed us to implement just that",
    "start": "323440",
    "end": "327120"
  },
  {
    "text": "so",
    "start": "327120",
    "end": "327840"
  },
  {
    "text": "we decided that local unique addressing",
    "start": "327840",
    "end": "331280"
  },
  {
    "text": "isn't",
    "start": "331280",
    "end": "332800"
  },
  {
    "text": "really going to give us any of those",
    "start": "332800",
    "end": "335039"
  },
  {
    "text": "benefits",
    "start": "335039",
    "end": "336240"
  },
  {
    "text": "so",
    "start": "336240",
    "end": "337039"
  },
  {
    "text": "we decided to drop support for that and",
    "start": "337039",
    "end": "339520"
  },
  {
    "text": "focused on global energy instead",
    "start": "339520",
    "end": "343759"
  },
  {
    "text": "so global investing required us to do",
    "start": "343759",
    "end": "346560"
  },
  {
    "text": "quite a few changes in how we provision",
    "start": "346560",
    "end": "349360"
  },
  {
    "text": "our networking so we had to enable not",
    "start": "349360",
    "end": "352000"
  },
  {
    "text": "64 dns 64",
    "start": "352000",
    "end": "354160"
  },
  {
    "text": "so that the cluster can reach things",
    "start": "354160",
    "end": "356880"
  },
  {
    "text": "without",
    "start": "356880",
    "end": "357919"
  },
  {
    "text": "an rp6 address",
    "start": "357919",
    "end": "359759"
  },
  {
    "text": "we had to do some changes to the route",
    "start": "359759",
    "end": "361919"
  },
  {
    "text": "tables",
    "start": "361919",
    "end": "363440"
  },
  {
    "text": "we had to do some changes to the launch",
    "start": "363440",
    "end": "365600"
  },
  {
    "text": "contacts",
    "start": "365600",
    "end": "367840"
  },
  {
    "text": "on",
    "start": "367840",
    "end": "368800"
  },
  {
    "text": "instances we also had to do things like",
    "start": "368800",
    "end": "372319"
  },
  {
    "text": "disabling mosque grid and overlays since",
    "start": "372319",
    "end": "375039"
  },
  {
    "text": "they would be getting in the way when we",
    "start": "375039",
    "end": "376639"
  },
  {
    "text": "are using global routing",
    "start": "376639",
    "end": "380680"
  },
  {
    "text": "launch templates also doesn't allow you",
    "start": "381360",
    "end": "383199"
  },
  {
    "text": "to configure to have both an ip6 address",
    "start": "383199",
    "end": "387280"
  },
  {
    "text": "and a prefix at instance creation time",
    "start": "387280",
    "end": "390960"
  },
  {
    "text": "so in the launch dropbox we said that",
    "start": "390960",
    "end": "393440"
  },
  {
    "text": "instances",
    "start": "393440",
    "end": "394800"
  },
  {
    "text": "are assigned automatically on",
    "start": "394800",
    "end": "397280"
  },
  {
    "text": "a single rp6 address",
    "start": "397280",
    "end": "399680"
  },
  {
    "text": "while during",
    "start": "399680",
    "end": "401600"
  },
  {
    "text": "the bootstrapping of the instance",
    "start": "401600",
    "end": "403919"
  },
  {
    "text": "we had to create our own logic for",
    "start": "403919",
    "end": "405919"
  },
  {
    "text": "provisioning an ip6 prefix for the",
    "start": "405919",
    "end": "408800"
  },
  {
    "text": "instance",
    "start": "408800",
    "end": "410880"
  },
  {
    "text": "we also had to",
    "start": "410880",
    "end": "413520"
  },
  {
    "text": "do something that would take assigned",
    "start": "413520",
    "end": "416160"
  },
  {
    "text": "physics prefix",
    "start": "416160",
    "end": "417919"
  },
  {
    "text": "and give it to",
    "start": "417919",
    "end": "420479"
  },
  {
    "text": "the corresponding node object so that",
    "start": "420479",
    "end": "423520"
  },
  {
    "text": "the cluster knows",
    "start": "423520",
    "end": "425440"
  },
  {
    "text": "what it addresses what's scheduled for",
    "start": "425440",
    "end": "428080"
  },
  {
    "text": "the given instance",
    "start": "428080",
    "end": "431280"
  },
  {
    "text": "can receive",
    "start": "431360",
    "end": "433680"
  },
  {
    "text": "when all this was put together we had",
    "start": "433680",
    "end": "436000"
  },
  {
    "text": "something",
    "start": "436000",
    "end": "437120"
  },
  {
    "text": "that looked like this",
    "start": "437120",
    "end": "439520"
  },
  {
    "text": "uh as you can see there's a mixture",
    "start": "439520",
    "end": "441759"
  },
  {
    "text": "between like before and after six",
    "start": "441759",
    "end": "443520"
  },
  {
    "text": "services and the reason for that is that",
    "start": "443520",
    "end": "445520"
  },
  {
    "text": "cuba",
    "start": "445520",
    "end": "447599"
  },
  {
    "text": "was a little bit inconsistent with what",
    "start": "447599",
    "end": "450080"
  },
  {
    "text": "address family it used for",
    "start": "450080",
    "end": "453840"
  },
  {
    "text": "host networking",
    "start": "453919",
    "end": "455599"
  },
  {
    "text": "so all the products that you see here",
    "start": "455599",
    "end": "457440"
  },
  {
    "text": "with ip4 addresses are those running",
    "start": "457440",
    "end": "459599"
  },
  {
    "text": "with",
    "start": "459599",
    "end": "460400"
  },
  {
    "text": "network",
    "start": "460400",
    "end": "461759"
  },
  {
    "text": "enabled",
    "start": "461759",
    "end": "464759"
  },
  {
    "text": "and let's consider and also for about",
    "start": "467759",
    "end": "470479"
  },
  {
    "text": "five minutes",
    "start": "470479",
    "end": "472560"
  },
  {
    "text": "so we were primarily testing on ubuntu",
    "start": "472560",
    "end": "475759"
  },
  {
    "text": "and on ubuntu there was a bug in systemd",
    "start": "475759",
    "end": "478639"
  },
  {
    "text": "network b",
    "start": "478639",
    "end": "480240"
  },
  {
    "text": "that",
    "start": "480240",
    "end": "481360"
  },
  {
    "text": "when it tried to renew the dxp list",
    "start": "481360",
    "end": "484960"
  },
  {
    "text": "it would get a reply from aws containing",
    "start": "484960",
    "end": "487440"
  },
  {
    "text": "both the",
    "start": "487440",
    "end": "489199"
  },
  {
    "text": "single address and the",
    "start": "489199",
    "end": "490840"
  },
  {
    "text": "prefix and it will fail to properly",
    "start": "490840",
    "end": "493440"
  },
  {
    "text": "parse those and just decide to",
    "start": "493440",
    "end": "496319"
  },
  {
    "text": "remove everything",
    "start": "496319",
    "end": "497919"
  },
  {
    "text": "so all the instances after",
    "start": "497919",
    "end": "501199"
  },
  {
    "text": "about five minutes no longer had any",
    "start": "501199",
    "end": "503360"
  },
  {
    "text": "addresses assigned",
    "start": "503360",
    "end": "506918"
  },
  {
    "text": "uh on the other distros that we were",
    "start": "507039",
    "end": "508879"
  },
  {
    "text": "testing this with we had a few other",
    "start": "508879",
    "end": "511039"
  },
  {
    "text": "minor issues like for example it was a",
    "start": "511039",
    "end": "513839"
  },
  {
    "text": "bit tricky to",
    "start": "513839",
    "end": "515680"
  },
  {
    "text": "configure the kernel to properly accept",
    "start": "515680",
    "end": "518000"
  },
  {
    "text": "the",
    "start": "518000",
    "end": "519120"
  },
  {
    "text": "router announcements since when",
    "start": "519120",
    "end": "521919"
  },
  {
    "text": "you're using prefixes rather",
    "start": "521919",
    "end": "523360"
  },
  {
    "text": "announcements are disabled by defaults",
    "start": "523360",
    "end": "526720"
  },
  {
    "text": "but eventually managed to",
    "start": "526720",
    "end": "529360"
  },
  {
    "text": "either fix dimensional bugs",
    "start": "529360",
    "end": "531360"
  },
  {
    "text": "around them and we now support uh",
    "start": "531360",
    "end": "534720"
  },
  {
    "text": "the antenna and new ubuntu lts version",
    "start": "534720",
    "end": "538560"
  },
  {
    "text": "that was just released",
    "start": "538560",
    "end": "541600"
  },
  {
    "start": "541000",
    "end": "541000"
  },
  {
    "text": "as mentioned",
    "start": "542560",
    "end": "543839"
  },
  {
    "text": "we",
    "start": "543839",
    "end": "545279"
  },
  {
    "text": "had to create something",
    "start": "545279",
    "end": "547600"
  },
  {
    "text": "that",
    "start": "547600",
    "end": "549600"
  },
  {
    "text": "was aware of the prefixes that edwards",
    "start": "549600",
    "end": "552880"
  },
  {
    "text": "would assign to the instances",
    "start": "552880",
    "end": "555839"
  },
  {
    "text": "by default there's a controller that",
    "start": "555839",
    "end": "558960"
  },
  {
    "text": "[Music]",
    "start": "558960",
    "end": "560160"
  },
  {
    "text": "looks at the whole",
    "start": "560160",
    "end": "562560"
  },
  {
    "text": "cluster wide",
    "start": "562560",
    "end": "564640"
  },
  {
    "text": "sider",
    "start": "564640",
    "end": "566720"
  },
  {
    "text": "and",
    "start": "566720",
    "end": "567600"
  },
  {
    "text": "takes the subnet from",
    "start": "567600",
    "end": "569600"
  },
  {
    "text": "from that insider and assigns it to each",
    "start": "569600",
    "end": "572000"
  },
  {
    "text": "of the new nodes",
    "start": "572000",
    "end": "574000"
  },
  {
    "text": "and that wouldn't work since the",
    "start": "574000",
    "end": "576720"
  },
  {
    "text": "node cider",
    "start": "576720",
    "end": "578480"
  },
  {
    "text": "has to match the prefix assigned to the",
    "start": "578480",
    "end": "580480"
  },
  {
    "text": "instance",
    "start": "580480",
    "end": "582000"
  },
  {
    "text": "so",
    "start": "582000",
    "end": "583360"
  },
  {
    "text": "we have to decide disable the controller",
    "start": "583360",
    "end": "586320"
  },
  {
    "text": "that hangs this logic by default",
    "start": "586320",
    "end": "589200"
  },
  {
    "text": "and create our own controller that was",
    "start": "589200",
    "end": "591600"
  },
  {
    "text": "aware of",
    "start": "591600",
    "end": "593040"
  },
  {
    "text": "the prefix that edit was assigned",
    "start": "593040",
    "end": "595600"
  },
  {
    "text": "and",
    "start": "595600",
    "end": "596399"
  },
  {
    "text": "that touched the corresponding old",
    "start": "596399",
    "end": "598320"
  },
  {
    "text": "object",
    "start": "598320",
    "end": "600240"
  },
  {
    "text": "giving it that prefix as its point",
    "start": "600240",
    "end": "602959"
  },
  {
    "text": "either",
    "start": "602959",
    "end": "605120"
  },
  {
    "text": "the really cool thing about this is that",
    "start": "605120",
    "end": "608240"
  },
  {
    "text": "cns are completely unaware of what's",
    "start": "608240",
    "end": "611200"
  },
  {
    "text": "coming on them",
    "start": "611200",
    "end": "612480"
  },
  {
    "text": "so all the cloud specifics include",
    "start": "612480",
    "end": "614560"
  },
  {
    "text": "prefixes and all that",
    "start": "614560",
    "end": "616399"
  },
  {
    "text": "is",
    "start": "616399",
    "end": "617360"
  },
  {
    "text": "hidden kind of behind that controller",
    "start": "617360",
    "end": "620320"
  },
  {
    "text": "so",
    "start": "620320",
    "end": "621440"
  },
  {
    "text": "that means",
    "start": "621440",
    "end": "624000"
  },
  {
    "text": "any cmi",
    "start": "624000",
    "end": "626079"
  },
  {
    "text": "can support",
    "start": "626079",
    "end": "627440"
  },
  {
    "text": "global routing with ipv6 out of the box",
    "start": "627440",
    "end": "630800"
  },
  {
    "text": "without doing any changes as long as",
    "start": "630800",
    "end": "633600"
  },
  {
    "text": "it's configured to look at the node",
    "start": "633600",
    "end": "635600"
  },
  {
    "text": "object spot slider",
    "start": "635600",
    "end": "638720"
  },
  {
    "text": "the controller currently runs as part of",
    "start": "640320",
    "end": "642959"
  },
  {
    "text": "the apps controller",
    "start": "642959",
    "end": "644720"
  },
  {
    "text": "but theoretically it could be a tiniest",
    "start": "644720",
    "end": "646959"
  },
  {
    "text": "download or it can run as foreign",
    "start": "646959",
    "end": "652200"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "hello my name is john myers and i work",
    "start": "654640",
    "end": "656800"
  },
  {
    "text": "at proofpoint",
    "start": "656800",
    "end": "657920"
  },
  {
    "text": "at proofpoint we are particularly",
    "start": "657920",
    "end": "659360"
  },
  {
    "text": "interested in how ipv6 can solve",
    "start": "659360",
    "end": "661440"
  },
  {
    "text": "problems with local ip address",
    "start": "661440",
    "end": "662959"
  },
  {
    "text": "allocation",
    "start": "662959",
    "end": "664720"
  },
  {
    "text": "k-ops initially implemented ipv6 using",
    "start": "664720",
    "end": "667040"
  },
  {
    "text": "public topology because it is simpler",
    "start": "667040",
    "end": "669839"
  },
  {
    "text": "in public topology all nodes are dual",
    "start": "669839",
    "end": "672160"
  },
  {
    "text": "stack and are accessible from the public",
    "start": "672160",
    "end": "674240"
  },
  {
    "text": "internet",
    "start": "674240",
    "end": "675600"
  },
  {
    "text": "in order to allow non-host network pods",
    "start": "675600",
    "end": "677839"
  },
  {
    "text": "to connect to ipv4 targets we enable",
    "start": "677839",
    "end": "680560"
  },
  {
    "text": "dns-64 and coordinates and the local dns",
    "start": "680560",
    "end": "684160"
  },
  {
    "text": "in order to do the latter we submitted a",
    "start": "684160",
    "end": "686000"
  },
  {
    "text": "pr to kubernetes dns adding the dns-64",
    "start": "686000",
    "end": "689040"
  },
  {
    "text": "plug-in",
    "start": "689040",
    "end": "690720"
  },
  {
    "text": "chaops creates a nat gateway in each",
    "start": "690720",
    "end": "693440"
  },
  {
    "text": "zone in order to perform the nat 64.",
    "start": "693440",
    "end": "697600"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "after aws released support for ipv6 only",
    "start": "698079",
    "end": "701120"
  },
  {
    "text": "subnets we implemented private topology",
    "start": "701120",
    "end": "704800"
  },
  {
    "text": "in private topology we have three types",
    "start": "704800",
    "end": "706880"
  },
  {
    "text": "of subnets",
    "start": "706880",
    "end": "708240"
  },
  {
    "text": "first at the edge we have dual stack",
    "start": "708240",
    "end": "710880"
  },
  {
    "text": "utility subnets",
    "start": "710880",
    "end": "712480"
  },
  {
    "text": "this is where chaos put nat gateways and",
    "start": "712480",
    "end": "714639"
  },
  {
    "text": "public load balancers does not put any",
    "start": "714639",
    "end": "717200"
  },
  {
    "text": "nodes in these subnets",
    "start": "717200",
    "end": "719519"
  },
  {
    "text": "mercury nodes are placed in ipv6 only",
    "start": "719519",
    "end": "721839"
  },
  {
    "text": "private subnets",
    "start": "721839",
    "end": "723360"
  },
  {
    "text": "in order for the nodes to connect to",
    "start": "723360",
    "end": "724880"
  },
  {
    "text": "ibv4 services k-ops enables dns-64 in",
    "start": "724880",
    "end": "728800"
  },
  {
    "text": "the subnet's awws dns servers",
    "start": "728800",
    "end": "732720"
  },
  {
    "text": "it routes the nat 64 range to the nat",
    "start": "732720",
    "end": "734959"
  },
  {
    "text": "gateway in the zone's utility subnet and",
    "start": "734959",
    "end": "737600"
  },
  {
    "text": "the rest of ipv6 to an egress only",
    "start": "737600",
    "end": "740240"
  },
  {
    "text": "internet gateway",
    "start": "740240",
    "end": "742480"
  },
  {
    "text": "for the control plane nodes k ops",
    "start": "742480",
    "end": "744639"
  },
  {
    "text": "creates a new type of subnet called dual",
    "start": "744639",
    "end": "746720"
  },
  {
    "text": "stack",
    "start": "746720",
    "end": "747920"
  },
  {
    "text": "control plane nodes need to be dual",
    "start": "747920",
    "end": "750240"
  },
  {
    "text": "stack because k ops uses instance",
    "start": "750240",
    "end": "752560"
  },
  {
    "text": "targets for the api server load balancer",
    "start": "752560",
    "end": "755600"
  },
  {
    "text": "and aws load balancers only support ipv4",
    "start": "755600",
    "end": "759519"
  },
  {
    "text": "for instance targets",
    "start": "759519",
    "end": "761440"
  },
  {
    "text": "this type of subnet is like public",
    "start": "761440",
    "end": "763279"
  },
  {
    "text": "subnets except nodes don't get public",
    "start": "763279",
    "end": "765839"
  },
  {
    "text": "ipv4 addresses and it uses an egress",
    "start": "765839",
    "end": "769120"
  },
  {
    "text": "only internet gateway",
    "start": "769120",
    "end": "772920"
  },
  {
    "start": "773000",
    "end": "773000"
  },
  {
    "text": "k-ops needs to make some arbitrary",
    "start": "773680",
    "end": "775600"
  },
  {
    "text": "assignments for in-cluster resources",
    "start": "775600",
    "end": "778480"
  },
  {
    "text": "as these addresses are not routable from",
    "start": "778480",
    "end": "780639"
  },
  {
    "text": "outside the cluster they are made from",
    "start": "780639",
    "end": "782800"
  },
  {
    "text": "the unique local address space though",
    "start": "782800",
    "end": "785360"
  },
  {
    "text": "they are not technically unique",
    "start": "785360",
    "end": "788079"
  },
  {
    "text": "for the kubernetes service network i",
    "start": "788079",
    "end": "790160"
  },
  {
    "text": "attempted to spell service in",
    "start": "790160",
    "end": "791760"
  },
  {
    "text": "hexadecimal",
    "start": "791760",
    "end": "793440"
  },
  {
    "text": "you kind of have to squint a lot",
    "start": "793440",
    "end": "795839"
  },
  {
    "text": "for node local dns i attempted to spell",
    "start": "795839",
    "end": "798959"
  },
  {
    "text": "node dns",
    "start": "798959",
    "end": "801839"
  },
  {
    "start": "801000",
    "end": "801000"
  },
  {
    "text": "there is additional work needed in",
    "start": "802160",
    "end": "803839"
  },
  {
    "text": "upstream projects in order to get a",
    "start": "803839",
    "end": "805360"
  },
  {
    "text": "practically functioning cluster",
    "start": "805360",
    "end": "807440"
  },
  {
    "text": "at the time the stock was recorded we",
    "start": "807440",
    "end": "809360"
  },
  {
    "text": "don't yet have the aws load balancer",
    "start": "809360",
    "end": "811920"
  },
  {
    "text": "controller working",
    "start": "811920",
    "end": "813440"
  },
  {
    "text": "this is probably because chaos wasn't",
    "start": "813440",
    "end": "815120"
  },
  {
    "text": "giving it sufficient i am permissions",
    "start": "815120",
    "end": "817600"
  },
  {
    "text": "the aws cloud controller manager service",
    "start": "817600",
    "end": "820079"
  },
  {
    "text": "controller doesn't work with ipv6 so we",
    "start": "820079",
    "end": "823040"
  },
  {
    "text": "will need to disable that and use lbc",
    "start": "823040",
    "end": "825920"
  },
  {
    "text": "for services of type load balancer",
    "start": "825920",
    "end": "828959"
  },
  {
    "text": "a lot of lvc's defaults are only",
    "start": "828959",
    "end": "831040"
  },
  {
    "text": "appropriate for ipv4",
    "start": "831040",
    "end": "833120"
  },
  {
    "text": "we hope to make it configurable to use a",
    "start": "833120",
    "end": "835199"
  },
  {
    "text": "set of defaults appropriate for ipv6",
    "start": "835199",
    "end": "837600"
  },
  {
    "text": "when running on ipv6 clusters",
    "start": "837600",
    "end": "840720"
  },
  {
    "text": "external dns currently doesn't support",
    "start": "840720",
    "end": "842880"
  },
  {
    "text": "quad a records",
    "start": "842880",
    "end": "844399"
  },
  {
    "text": "this is a work in progress",
    "start": "844399",
    "end": "847760"
  },
  {
    "start": "849000",
    "end": "849000"
  },
  {
    "text": "hi",
    "start": "849760",
    "end": "850560"
  },
  {
    "text": "so i'm justin i work at google and so i",
    "start": "850560",
    "end": "853279"
  },
  {
    "text": "thought it would be good to tackle the",
    "start": "853279",
    "end": "854560"
  },
  {
    "text": "question of how specific to aws this",
    "start": "854560",
    "end": "856800"
  },
  {
    "text": "work is",
    "start": "856800",
    "end": "858160"
  },
  {
    "text": "now that all this great work has been",
    "start": "858160",
    "end": "859839"
  },
  {
    "text": "done by the kubernetes community for",
    "start": "859839",
    "end": "861440"
  },
  {
    "text": "ipv6 and by the k-ops and aws teams",
    "start": "861440",
    "end": "864800"
  },
  {
    "text": "specifically for running a full cluster",
    "start": "864800",
    "end": "866480"
  },
  {
    "text": "on aws can we just run this on another",
    "start": "866480",
    "end": "869360"
  },
  {
    "text": "cloud well the short answer is that it's",
    "start": "869360",
    "end": "872240"
  },
  {
    "text": "pretty straightforward we have to enable",
    "start": "872240",
    "end": "874639"
  },
  {
    "text": "ipv6 on the cloud resources like subnets",
    "start": "874639",
    "end": "877440"
  },
  {
    "text": "and vms but then most of it carries",
    "start": "877440",
    "end": "879839"
  },
  {
    "text": "across to gcp and presumably to other",
    "start": "879839",
    "end": "882639"
  },
  {
    "text": "clouds also there are there are some",
    "start": "882639",
    "end": "885120"
  },
  {
    "text": "minor differences like on gce",
    "start": "885120",
    "end": "887839"
  },
  {
    "text": "vms automatically get a slash 96 ipv6",
    "start": "887839",
    "end": "891040"
  },
  {
    "text": "range and so we don't need to write code",
    "start": "891040",
    "end": "893360"
  },
  {
    "text": "to request it for each vm",
    "start": "893360",
    "end": "895360"
  },
  {
    "text": "but in general the sequence is pretty",
    "start": "895360",
    "end": "897519"
  },
  {
    "text": "cloud agnostic",
    "start": "897519",
    "end": "899519"
  },
  {
    "text": "the vm is assigned an ipv6 range our",
    "start": "899519",
    "end": "902560"
  },
  {
    "text": "ipam controller writes that into the",
    "start": "902560",
    "end": "904480"
  },
  {
    "text": "nodes pod sider the cni provider then",
    "start": "904480",
    "end": "907360"
  },
  {
    "text": "assigns pods ips from that pod sider",
    "start": "907360",
    "end": "911199"
  },
  {
    "text": "ipv6 siders are fully routable and so we",
    "start": "911199",
    "end": "913920"
  },
  {
    "text": "don't need to configure anything if",
    "start": "913920",
    "end": "915760"
  },
  {
    "text": "anything we now have the inverse problem",
    "start": "915760",
    "end": "917839"
  },
  {
    "text": "we need to be very sure that we have",
    "start": "917839",
    "end": "919920"
  },
  {
    "text": "firewalled off any access that we don't",
    "start": "919920",
    "end": "922320"
  },
  {
    "text": "want",
    "start": "922320",
    "end": "923440"
  },
  {
    "text": "and generally because this sequence is",
    "start": "923440",
    "end": "924959"
  },
  {
    "text": "cloud agnostic the good news is that by",
    "start": "924959",
    "end": "927360"
  },
  {
    "text": "building on the aws work it almost just",
    "start": "927360",
    "end": "930880"
  },
  {
    "text": "works on gce",
    "start": "930880",
    "end": "933680"
  },
  {
    "text": "here's a quick screenshot showing the",
    "start": "933680",
    "end": "935920"
  },
  {
    "text": "classic guestbook example running with",
    "start": "935920",
    "end": "937839"
  },
  {
    "text": "ipv6 pod ips across a few different",
    "start": "937839",
    "end": "940160"
  },
  {
    "text": "nodes",
    "start": "940160",
    "end": "941040"
  },
  {
    "text": "these are in the 2600 range so these are",
    "start": "941040",
    "end": "943839"
  },
  {
    "text": "fully routable ipv6 ip addresses",
    "start": "943839",
    "end": "947600"
  },
  {
    "text": "the gotcha though is that not everything",
    "start": "947600",
    "end": "949759"
  },
  {
    "text": "quite works when it comes to networking",
    "start": "949759",
    "end": "952720"
  },
  {
    "text": "the ipv4 kubernetes networking stack is",
    "start": "952720",
    "end": "955360"
  },
  {
    "start": "953000",
    "end": "953000"
  },
  {
    "text": "pretty complicated but for ipv6 we need",
    "start": "955360",
    "end": "958880"
  },
  {
    "text": "much less",
    "start": "958880",
    "end": "961120"
  },
  {
    "text": "we don't need an overlay we get a cider",
    "start": "961120",
    "end": "963680"
  },
  {
    "text": "with enough ips",
    "start": "963680",
    "end": "965519"
  },
  {
    "text": "we don't need routing logic the sliders",
    "start": "965519",
    "end": "967680"
  },
  {
    "text": "we get are fully routable",
    "start": "967680",
    "end": "969440"
  },
  {
    "text": "ipam is pretty simple now there are",
    "start": "969440",
    "end": "971440"
  },
  {
    "text": "plenty of ip addresses we don't have ip",
    "start": "971440",
    "end": "974000"
  },
  {
    "text": "reuse problems and we generally don't",
    "start": "974000",
    "end": "976480"
  },
  {
    "text": "need to worry about running out of",
    "start": "976480",
    "end": "977680"
  },
  {
    "text": "address space",
    "start": "977680",
    "end": "979040"
  },
  {
    "text": "but as we've seen with aws some of the",
    "start": "979040",
    "end": "981120"
  },
  {
    "text": "assumptions made by the stack simply",
    "start": "981120",
    "end": "982959"
  },
  {
    "text": "don't apply anymore right now we have a",
    "start": "982959",
    "end": "985199"
  },
  {
    "text": "few snafus",
    "start": "985199",
    "end": "986639"
  },
  {
    "text": "as with aws the classic way of exposing",
    "start": "986639",
    "end": "989759"
  },
  {
    "text": "services with type load balancer doesn't",
    "start": "989759",
    "end": "991519"
  },
  {
    "text": "really work the load balancer is exposed",
    "start": "991519",
    "end": "993759"
  },
  {
    "text": "on an ipv4 address and cubeproxy and",
    "start": "993759",
    "end": "996000"
  },
  {
    "text": "iptables can't not that to our pods",
    "start": "996000",
    "end": "999120"
  },
  {
    "text": "because we're turning off a lot of",
    "start": "999120",
    "end": "1000880"
  },
  {
    "text": "layers like setting up cloud routing",
    "start": "1000880",
    "end": "1003120"
  },
  {
    "text": "sometimes we now miss steps for example",
    "start": "1003120",
    "end": "1006639"
  },
  {
    "text": "the network unavailable taint sticks",
    "start": "1006639",
    "end": "1008399"
  },
  {
    "text": "around and we now need new code to",
    "start": "1008399",
    "end": "1011040"
  },
  {
    "text": "remove it",
    "start": "1011040",
    "end": "1012959"
  },
  {
    "text": "all of these are surmountable problems",
    "start": "1012959",
    "end": "1015120"
  },
  {
    "text": "but they are new problems",
    "start": "1015120",
    "end": "1017360"
  },
  {
    "text": "maybe hopefully by the time you're",
    "start": "1017360",
    "end": "1019360"
  },
  {
    "text": "watching this at kubecon we'll have",
    "start": "1019360",
    "end": "1020959"
  },
  {
    "text": "fixed all of these",
    "start": "1020959",
    "end": "1022720"
  },
  {
    "text": "but i think what's most interesting for",
    "start": "1022720",
    "end": "1024798"
  },
  {
    "text": "the future direction of cni in ipv6 is",
    "start": "1024799",
    "end": "1027839"
  },
  {
    "text": "that these aren't the problems that cni",
    "start": "1027839",
    "end": "1029839"
  },
  {
    "text": "providers addressed in ipv4",
    "start": "1029839",
    "end": "1032720"
  },
  {
    "text": "cni providers in ipv6 are going to be",
    "start": "1032720",
    "end": "1035038"
  },
  {
    "text": "primarily about a small bit of",
    "start": "1035039",
    "end": "1036480"
  },
  {
    "text": "configuration and generally getting out",
    "start": "1036480",
    "end": "1038640"
  },
  {
    "text": "of the way",
    "start": "1038640",
    "end": "1039600"
  },
  {
    "text": "what's far more important in ipv6 is",
    "start": "1039600",
    "end": "1041760"
  },
  {
    "text": "firewalling and generally preventing",
    "start": "1041760",
    "end": "1044000"
  },
  {
    "text": "access and those are pretty different",
    "start": "1044000",
    "end": "1046640"
  },
  {
    "text": "requirements to ipv4",
    "start": "1046640",
    "end": "1050760"
  }
]