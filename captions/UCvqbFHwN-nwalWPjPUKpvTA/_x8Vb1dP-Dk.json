[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "hello everyone my name is eduardo silva",
    "start": "1520",
    "end": "3679"
  },
  {
    "text": "and welcome to the fluence presentation",
    "start": "3679",
    "end": "5759"
  },
  {
    "text": "at cloud native open source virtual",
    "start": "5759",
    "end": "7759"
  },
  {
    "text": "summit china",
    "start": "7759",
    "end": "8880"
  },
  {
    "text": "2020. on this presentation we are going",
    "start": "8880",
    "end": "12000"
  },
  {
    "text": "to talk about",
    "start": "12000",
    "end": "13519"
  },
  {
    "text": "login data management and a bit of data",
    "start": "13519",
    "end": "16880"
  },
  {
    "text": "aggregation",
    "start": "16880",
    "end": "17840"
  },
  {
    "text": "in common database",
    "start": "17840",
    "end": "20960"
  },
  {
    "text": "so fluid is a tool was decided to",
    "start": "20960",
    "end": "24640"
  },
  {
    "text": "fix and work around all the problems and",
    "start": "24640",
    "end": "27519"
  },
  {
    "text": "challenges with data",
    "start": "27519",
    "end": "29039"
  },
  {
    "text": "and the whole point of logging and data",
    "start": "29039",
    "end": "31920"
  },
  {
    "text": "is that",
    "start": "31920",
    "end": "32558"
  },
  {
    "text": "we need to be able to extract value from",
    "start": "32559",
    "end": "35840"
  },
  {
    "text": "them",
    "start": "35840",
    "end": "36480"
  },
  {
    "text": "but one of the main problems is that",
    "start": "36480",
    "end": "38239"
  },
  {
    "text": "data is everywhere",
    "start": "38239",
    "end": "40000"
  },
  {
    "text": "so if we are in to concentrate all this",
    "start": "40000",
    "end": "42399"
  },
  {
    "text": "information",
    "start": "42399",
    "end": "43680"
  },
  {
    "text": "we have so few challenges to to deal",
    "start": "43680",
    "end": "46160"
  },
  {
    "text": "with for example data comes from the",
    "start": "46160",
    "end": "47680"
  },
  {
    "text": "operating system",
    "start": "47680",
    "end": "48800"
  },
  {
    "text": "system services user space applications",
    "start": "48800",
    "end": "51680"
  },
  {
    "text": "and if you are in the embedded world",
    "start": "51680",
    "end": "54160"
  },
  {
    "text": "we have remote hardware we have sensors",
    "start": "54160",
    "end": "56320"
  },
  {
    "text": "and so on",
    "start": "56320",
    "end": "57360"
  },
  {
    "text": "so how we can solve this problem as just",
    "start": "57360",
    "end": "60399"
  },
  {
    "text": "with using one tool or one simple",
    "start": "60399",
    "end": "62559"
  },
  {
    "text": "solution",
    "start": "62559",
    "end": "64000"
  },
  {
    "text": "as i said data is one thing but if we",
    "start": "64000",
    "end": "67119"
  },
  {
    "text": "are not able to extract",
    "start": "67119",
    "end": "68479"
  },
  {
    "text": "value from it it's useless we have many",
    "start": "68479",
    "end": "71680"
  },
  {
    "text": "users just extracting data but if we",
    "start": "71680",
    "end": "74479"
  },
  {
    "text": "cannot perform the right analysis of",
    "start": "74479",
    "end": "76640"
  },
  {
    "text": "rate",
    "start": "76640",
    "end": "77040"
  },
  {
    "text": "extract value becomes hard when data",
    "start": "77040",
    "end": "80799"
  },
  {
    "text": "is ingested or aggregated in one place",
    "start": "80799",
    "end": "85119"
  },
  {
    "text": "it aims to provide easy ways to",
    "start": "85119",
    "end": "88400"
  },
  {
    "text": "perform this analysis and of course",
    "start": "88400",
    "end": "90479"
  },
  {
    "text": "extract this value",
    "start": "90479",
    "end": "92159"
  },
  {
    "text": "so we can gather the insight from it",
    "start": "92159",
    "end": "95360"
  },
  {
    "text": "so you realize that data is important",
    "start": "95360",
    "end": "98000"
  },
  {
    "text": "but if we cannot extracted value",
    "start": "98000",
    "end": "100079"
  },
  {
    "text": "is a problem but from the technical",
    "start": "100079",
    "end": "102240"
  },
  {
    "text": "perspective we have a couple of",
    "start": "102240",
    "end": "103520"
  },
  {
    "text": "challenges",
    "start": "103520",
    "end": "104880"
  },
  {
    "text": "one of them is that data comes from",
    "start": "104880",
    "end": "106880"
  },
  {
    "text": "different network protocols maybe from",
    "start": "106880",
    "end": "108799"
  },
  {
    "text": "tcp",
    "start": "108799",
    "end": "109360"
  },
  {
    "text": "udp in different payloads from file",
    "start": "109360",
    "end": "111600"
  },
  {
    "text": "system from system d",
    "start": "111600",
    "end": "113119"
  },
  {
    "text": "generally in general and this is complex",
    "start": "113119",
    "end": "116159"
  },
  {
    "text": "and",
    "start": "116159",
    "end": "116479"
  },
  {
    "text": "a mess because data is everywhere in",
    "start": "116479",
    "end": "118479"
  },
  {
    "text": "different formats and from different",
    "start": "118479",
    "end": "120719"
  },
  {
    "text": "channel channels if you think about",
    "start": "120719",
    "end": "124399"
  },
  {
    "text": "just a one simple generator of log",
    "start": "124399",
    "end": "127600"
  },
  {
    "text": "information like a hardware",
    "start": "127600",
    "end": "129440"
  },
  {
    "text": "or a software this generate a record",
    "start": "129440",
    "end": "132400"
  },
  {
    "text": "that record gets",
    "start": "132400",
    "end": "133440"
  },
  {
    "text": "into a central place so we can do",
    "start": "133440",
    "end": "135120"
  },
  {
    "text": "analysis but",
    "start": "135120",
    "end": "136560"
  },
  {
    "text": "if we have a couple of them this kind of",
    "start": "136560",
    "end": "139200"
  },
  {
    "text": "scalability",
    "start": "139200",
    "end": "140720"
  },
  {
    "text": "gets more problems so how do we inform",
    "start": "140720",
    "end": "143040"
  },
  {
    "text": "my analysis",
    "start": "143040",
    "end": "144080"
  },
  {
    "text": "fast enough it doesn't matter if i'm",
    "start": "144080",
    "end": "146560"
  },
  {
    "text": "collecting more data more data from",
    "start": "146560",
    "end": "148480"
  },
  {
    "text": "different places",
    "start": "148480",
    "end": "149760"
  },
  {
    "text": "so the login tool here is really",
    "start": "149760",
    "end": "151519"
  },
  {
    "text": "relevant because",
    "start": "151519",
    "end": "152879"
  },
  {
    "text": "what one of the things that we want to",
    "start": "152879",
    "end": "154560"
  },
  {
    "text": "avoid is latency",
    "start": "154560",
    "end": "156640"
  },
  {
    "text": "to avoid that the things get delayed",
    "start": "156640",
    "end": "160000"
  },
  {
    "text": "so data comes from different formats and",
    "start": "160000",
    "end": "163519"
  },
  {
    "text": "when i say this",
    "start": "163519",
    "end": "164720"
  },
  {
    "text": "i'm saying that imagine the apache logs",
    "start": "164720",
    "end": "166720"
  },
  {
    "text": "apache logs comes with a",
    "start": "166720",
    "end": "168800"
  },
  {
    "text": "normal message that you and myself can",
    "start": "168800",
    "end": "171519"
  },
  {
    "text": "understand right",
    "start": "171519",
    "end": "172640"
  },
  {
    "text": "that mysql i can understand but if you",
    "start": "172640",
    "end": "175040"
  },
  {
    "text": "pass this information",
    "start": "175040",
    "end": "177040"
  },
  {
    "text": "to a computer the computer will just see",
    "start": "177040",
    "end": "180000"
  },
  {
    "text": "an array of bytes",
    "start": "180000",
    "end": "181280"
  },
  {
    "text": "and that's it but we want to perform",
    "start": "181280",
    "end": "183920"
  },
  {
    "text": "some kind of",
    "start": "183920",
    "end": "184720"
  },
  {
    "text": "data processing over this data so we can",
    "start": "184720",
    "end": "187519"
  },
  {
    "text": "perform",
    "start": "187519",
    "end": "188400"
  },
  {
    "text": "fastest queries or perform a fastest",
    "start": "188400",
    "end": "190959"
  },
  {
    "text": "analysis",
    "start": "190959",
    "end": "192239"
  },
  {
    "text": "so one of the key concepts here is to be",
    "start": "192239",
    "end": "194720"
  },
  {
    "text": "able to",
    "start": "194720",
    "end": "195680"
  },
  {
    "text": "convert this array of bytes to a",
    "start": "195680",
    "end": "198400"
  },
  {
    "text": "structure where we have this notion of",
    "start": "198400",
    "end": "200560"
  },
  {
    "text": "key values for example apache logs",
    "start": "200560",
    "end": "202800"
  },
  {
    "text": "as a timestamp has a method uri http",
    "start": "202800",
    "end": "206239"
  },
  {
    "text": "protocol",
    "start": "206239",
    "end": "206959"
  },
  {
    "text": "and so on data comes from different",
    "start": "206959",
    "end": "210720"
  },
  {
    "text": "sources",
    "start": "210720",
    "end": "211519"
  },
  {
    "text": "we need to also convert this data from a",
    "start": "211519",
    "end": "213280"
  },
  {
    "text": "structure to a structured way",
    "start": "213280",
    "end": "214640"
  },
  {
    "text": "and sometimes we need to enrich this",
    "start": "214640",
    "end": "216720"
  },
  {
    "text": "data with extra information",
    "start": "216720",
    "end": "218720"
  },
  {
    "text": "for example if your data comes from",
    "start": "218720",
    "end": "221599"
  },
  {
    "text": "different servers",
    "start": "221599",
    "end": "222879"
  },
  {
    "text": "likely you want to reach your records",
    "start": "222879",
    "end": "225040"
  },
  {
    "text": "with the hostname",
    "start": "225040",
    "end": "226000"
  },
  {
    "text": "with the ip address or something that",
    "start": "226000",
    "end": "228319"
  },
  {
    "text": "adds more",
    "start": "228319",
    "end": "229200"
  },
  {
    "text": "in context to that information",
    "start": "229200",
    "end": "232400"
  },
  {
    "text": "and at the end we want to send this data",
    "start": "232400",
    "end": "234879"
  },
  {
    "text": "out to a central place for further",
    "start": "234879",
    "end": "236959"
  },
  {
    "text": "analysis like databases or",
    "start": "236959",
    "end": "238959"
  },
  {
    "text": "cloud services and this is fluent",
    "start": "238959",
    "end": "242239"
  },
  {
    "start": "240000",
    "end": "380000"
  },
  {
    "text": "fluentmet is a project that was created",
    "start": "242239",
    "end": "244400"
  },
  {
    "text": "to solve all these",
    "start": "244400",
    "end": "245599"
  },
  {
    "text": "data problems all these challenges where",
    "start": "245599",
    "end": "248080"
  },
  {
    "text": "we have",
    "start": "248080",
    "end": "248720"
  },
  {
    "text": "different data channels different",
    "start": "248720",
    "end": "250400"
  },
  {
    "text": "formats and so on",
    "start": "250400",
    "end": "252640"
  },
  {
    "text": "fluent is a proud sub project of the",
    "start": "252640",
    "end": "255360"
  },
  {
    "text": "cncf",
    "start": "255360",
    "end": "256239"
  },
  {
    "text": "under the umbrella of flue indeed fluent",
    "start": "256239",
    "end": "259359"
  },
  {
    "text": "was created around 2000 2015",
    "start": "259359",
    "end": "262560"
  },
  {
    "text": "and originally it was created for",
    "start": "262560",
    "end": "264639"
  },
  {
    "text": "embedded linux",
    "start": "264639",
    "end": "266080"
  },
  {
    "text": "on that moment we we envisioned that we",
    "start": "266080",
    "end": "268960"
  },
  {
    "text": "have fluency",
    "start": "268960",
    "end": "269919"
  },
  {
    "text": "which was running on most of the major",
    "start": "269919",
    "end": "272320"
  },
  {
    "text": "servers",
    "start": "272320",
    "end": "273680"
  },
  {
    "text": "of the world but we also we we are going",
    "start": "273680",
    "end": "275919"
  },
  {
    "text": "to need something",
    "start": "275919",
    "end": "277600"
  },
  {
    "text": "more lightweight that can run on",
    "start": "277600",
    "end": "280000"
  },
  {
    "text": "constrained environments",
    "start": "280000",
    "end": "281440"
  },
  {
    "text": "but quickly people from the cloud space",
    "start": "281440",
    "end": "284800"
  },
  {
    "text": "started using fluid because they needed",
    "start": "284800",
    "end": "287600"
  },
  {
    "text": "something light without fluency",
    "start": "287600",
    "end": "289440"
  },
  {
    "text": "is for some special cases and fluent bit",
    "start": "289440",
    "end": "292320"
  },
  {
    "text": "evolved as a cloud space",
    "start": "292320",
    "end": "293919"
  },
  {
    "text": "solution too but it also can run on",
    "start": "293919",
    "end": "296880"
  },
  {
    "text": "embedded environments and as i said it's",
    "start": "296880",
    "end": "299199"
  },
  {
    "text": "the apache license to that whole fluent",
    "start": "299199",
    "end": "302160"
  },
  {
    "text": "bit is fully written in c language",
    "start": "302160",
    "end": "304479"
  },
  {
    "text": "it ties for low memory and cpu footprint",
    "start": "304479",
    "end": "307600"
  },
  {
    "text": "it's running barely can run in 600",
    "start": "307600",
    "end": "310800"
  },
  {
    "text": "kilobytes but",
    "start": "310800",
    "end": "312000"
  },
  {
    "text": "of course if you are processing more",
    "start": "312000",
    "end": "313440"
  },
  {
    "text": "data you know you will need a bit more",
    "start": "313440",
    "end": "315840"
  },
  {
    "text": "memory and it has its own plugable",
    "start": "315840",
    "end": "318240"
  },
  {
    "text": "architecture we support",
    "start": "318240",
    "end": "319600"
  },
  {
    "text": "more than 60 plugins between input",
    "start": "319600",
    "end": "321840"
  },
  {
    "text": "filters and outputs and it also has",
    "start": "321840",
    "end": "325039"
  },
  {
    "text": "built in security for tls and network io",
    "start": "325039",
    "end": "329440"
  },
  {
    "text": "when you think about login you have to",
    "start": "329440",
    "end": "330880"
  },
  {
    "text": "think about this like a pipeline we have",
    "start": "330880",
    "end": "333199"
  },
  {
    "text": "an input and an output but",
    "start": "333199",
    "end": "335120"
  },
  {
    "text": "in the middle we have different steps or",
    "start": "335120",
    "end": "337440"
  },
  {
    "text": "faces for different things",
    "start": "337440",
    "end": "339039"
  },
  {
    "text": "we have an input where we say hey from",
    "start": "339039",
    "end": "341759"
  },
  {
    "text": "this place we're going to collect the",
    "start": "341759",
    "end": "343120"
  },
  {
    "text": "data",
    "start": "343120",
    "end": "343600"
  },
  {
    "text": "we have a parser section where we can",
    "start": "343600",
    "end": "345919"
  },
  {
    "text": "say hey this part we're going to process",
    "start": "345919",
    "end": "348000"
  },
  {
    "text": "the data from this",
    "start": "348000",
    "end": "349680"
  },
  {
    "text": "constructor format to this format right",
    "start": "349680",
    "end": "352400"
  },
  {
    "text": "a structure format for example",
    "start": "352400",
    "end": "353759"
  },
  {
    "text": "instructor to json or",
    "start": "353759",
    "end": "355919"
  },
  {
    "text": "something like that but note that we",
    "start": "355919",
    "end": "358080"
  },
  {
    "text": "don't use json internally we just use a",
    "start": "358080",
    "end": "360319"
  },
  {
    "text": "binary version of it",
    "start": "360319",
    "end": "362080"
  },
  {
    "text": "we have the filtering phase to enrich",
    "start": "362080",
    "end": "364319"
  },
  {
    "text": "data or remove any",
    "start": "364319",
    "end": "366160"
  },
  {
    "text": "content that we don't want from it the",
    "start": "366160",
    "end": "368479"
  },
  {
    "text": "buffering section for",
    "start": "368479",
    "end": "370319"
  },
  {
    "text": "data persistency and of course routing",
    "start": "370319",
    "end": "372639"
  },
  {
    "text": "to send the data out to any cloud",
    "start": "372639",
    "end": "374800"
  },
  {
    "text": "database or",
    "start": "374800",
    "end": "375840"
  },
  {
    "text": "service so right now we're going to jump",
    "start": "375840",
    "end": "378960"
  },
  {
    "text": "into demo so i'm going to switch",
    "start": "378960",
    "end": "382880"
  },
  {
    "start": "380000",
    "end": "746000"
  },
  {
    "text": "here just one second okay",
    "start": "382880",
    "end": "386000"
  },
  {
    "text": "so um right now i need terminal so the",
    "start": "386000",
    "end": "389120"
  },
  {
    "text": "demo will be about",
    "start": "389120",
    "end": "390400"
  },
  {
    "text": "how to run a joker container and this",
    "start": "390400",
    "end": "393440"
  },
  {
    "text": "docker container will",
    "start": "393440",
    "end": "395039"
  },
  {
    "text": "start a application that generates or",
    "start": "395039",
    "end": "398080"
  },
  {
    "text": "simulate",
    "start": "398080",
    "end": "398880"
  },
  {
    "text": "apache log messages this apache dot",
    "start": "398880",
    "end": "402080"
  },
  {
    "text": "messages",
    "start": "402080",
    "end": "403120"
  },
  {
    "text": "doesn't have a real format but our goal",
    "start": "403120",
    "end": "406319"
  },
  {
    "text": "will be to take them",
    "start": "406319",
    "end": "407520"
  },
  {
    "text": "and process them with fluent bit so",
    "start": "407520",
    "end": "410479"
  },
  {
    "text": "first i'm going to start",
    "start": "410479",
    "end": "411919"
  },
  {
    "text": "fluent bit in my terminal and",
    "start": "411919",
    "end": "415120"
  },
  {
    "text": "i'm going to i'm going to start with one",
    "start": "415120",
    "end": "417919"
  },
  {
    "text": "configuration format file sorry",
    "start": "417919",
    "end": "421440"
  },
  {
    "text": "that i'm going to explain its content",
    "start": "421440",
    "end": "423520"
  },
  {
    "text": "right away this flue embed service",
    "start": "423520",
    "end": "425759"
  },
  {
    "text": "is listening for messages on the tcp",
    "start": "425759",
    "end": "429360"
  },
  {
    "text": "port 24",
    "start": "429360",
    "end": "430479"
  },
  {
    "text": "224 and right now we are going to run",
    "start": "430479",
    "end": "434720"
  },
  {
    "text": "and docker container which is called",
    "start": "434720",
    "end": "438720"
  },
  {
    "text": "expert apache locks",
    "start": "438720",
    "end": "442479"
  },
  {
    "text": "and basically what it does is just to",
    "start": "442479",
    "end": "444639"
  },
  {
    "text": "generate dummy messages",
    "start": "444639",
    "end": "446960"
  },
  {
    "text": "to the standard output but",
    "start": "446960",
    "end": "450080"
  },
  {
    "text": "as just happened some seconds ago",
    "start": "450080",
    "end": "453520"
  },
  {
    "text": "we were running this with the fluency",
    "start": "453520",
    "end": "455360"
  },
  {
    "text": "driver flew in this is our parent",
    "start": "455360",
    "end": "457440"
  },
  {
    "text": "project",
    "start": "457440",
    "end": "458240"
  },
  {
    "text": "and the fluently driver aims to send",
    "start": "458240",
    "end": "460560"
  },
  {
    "text": "this data to a central place",
    "start": "460560",
    "end": "462479"
  },
  {
    "text": "it could be a fluency or a fluent bit",
    "start": "462479",
    "end": "464960"
  },
  {
    "text": "instance",
    "start": "464960",
    "end": "465840"
  },
  {
    "text": "so right now all these container log",
    "start": "465840",
    "end": "467919"
  },
  {
    "text": "messages will be routed back",
    "start": "467919",
    "end": "470400"
  },
  {
    "text": "to the fluid that is running in the",
    "start": "470400",
    "end": "473759"
  },
  {
    "text": "second pane",
    "start": "473759",
    "end": "474639"
  },
  {
    "text": "on the on the left",
    "start": "474639",
    "end": "478000"
  },
  {
    "text": "this is interesting as you can see at",
    "start": "478000",
    "end": "480319"
  },
  {
    "text": "the top we have",
    "start": "480319",
    "end": "481440"
  },
  {
    "text": "just an array of bytes but then we can",
    "start": "481440",
    "end": "484319"
  },
  {
    "text": "see a structure like",
    "start": "484319",
    "end": "485440"
  },
  {
    "text": "json at bottom so let's do some analysis",
    "start": "485440",
    "end": "489199"
  },
  {
    "text": "on how this is working",
    "start": "489199",
    "end": "493840"
  },
  {
    "text": "i'm going to show you the configuration",
    "start": "494639",
    "end": "496400"
  },
  {
    "text": "that we're running basically we are",
    "start": "496400",
    "end": "498319"
  },
  {
    "text": "saying",
    "start": "498319",
    "end": "499199"
  },
  {
    "text": "collect data from an input which is a",
    "start": "499199",
    "end": "501280"
  },
  {
    "text": "forward input protocol",
    "start": "501280",
    "end": "503360"
  },
  {
    "text": "filter this data apply a parser",
    "start": "503360",
    "end": "506400"
  },
  {
    "text": "do you remember the pipeline and these",
    "start": "506400",
    "end": "508560"
  },
  {
    "text": "parts are saying",
    "start": "508560",
    "end": "509520"
  },
  {
    "text": "take this unstructured data apply the",
    "start": "509520",
    "end": "512000"
  },
  {
    "text": "apache parsers",
    "start": "512000",
    "end": "513039"
  },
  {
    "text": "on top of the lock key and reset reserve",
    "start": "513039",
    "end": "516080"
  },
  {
    "text": "all the remaining data finally put this",
    "start": "516080",
    "end": "519279"
  },
  {
    "text": "data out to the standard output",
    "start": "519279",
    "end": "522320"
  },
  {
    "text": "okay so but",
    "start": "522320",
    "end": "525360"
  },
  {
    "text": "this is pretty easy but let's also apply",
    "start": "525360",
    "end": "527920"
  },
  {
    "text": "jq",
    "start": "527920",
    "end": "528560"
  },
  {
    "text": "so we can see how the records looks like",
    "start": "528560",
    "end": "531279"
  },
  {
    "text": "in a better way as you can see our",
    "start": "531279",
    "end": "534880"
  },
  {
    "text": "records if we format the jsons",
    "start": "534880",
    "end": "536880"
  },
  {
    "text": "you can see that we have the host the",
    "start": "536880",
    "end": "538800"
  },
  {
    "text": "user the metal",
    "start": "538800",
    "end": "540480"
  },
  {
    "text": "all the data that at the beginning we",
    "start": "540480",
    "end": "542399"
  },
  {
    "text": "didn't know about it",
    "start": "542399",
    "end": "543600"
  },
  {
    "text": "but after applying a person we were able",
    "start": "543600",
    "end": "547120"
  },
  {
    "text": "to show all of these in a reliable",
    "start": "547120",
    "end": "550000"
  },
  {
    "text": "manner",
    "start": "550000",
    "end": "550560"
  },
  {
    "text": "not just show but also store this data",
    "start": "550560",
    "end": "552800"
  },
  {
    "text": "in a different way that can be used",
    "start": "552800",
    "end": "554480"
  },
  {
    "text": "later for",
    "start": "554480",
    "end": "555360"
  },
  {
    "text": "data analysis",
    "start": "555360",
    "end": "558399"
  },
  {
    "text": "okay so that's one use case right we",
    "start": "560160",
    "end": "563680"
  },
  {
    "text": "just took container logs",
    "start": "563680",
    "end": "565200"
  },
  {
    "text": "we're shipping it out to flow embed and",
    "start": "565200",
    "end": "567279"
  },
  {
    "text": "we are showing the data to the standard",
    "start": "567279",
    "end": "569279"
  },
  {
    "text": "output",
    "start": "569279",
    "end": "569839"
  },
  {
    "text": "but we want to do something a more fancy",
    "start": "569839",
    "end": "572880"
  },
  {
    "text": "yet",
    "start": "572880",
    "end": "573200"
  },
  {
    "text": "what about if we send the same data back",
    "start": "573200",
    "end": "575519"
  },
  {
    "text": "to a database",
    "start": "575519",
    "end": "576560"
  },
  {
    "text": "like elasticsearch so i have prepared",
    "start": "576560",
    "end": "579360"
  },
  {
    "text": "here a configuration file",
    "start": "579360",
    "end": "581760"
  },
  {
    "text": "that is pretty much similar to the first",
    "start": "581760",
    "end": "583519"
  },
  {
    "text": "one but now",
    "start": "583519",
    "end": "585600"
  },
  {
    "text": "instead of sending the data to the",
    "start": "585600",
    "end": "587279"
  },
  {
    "text": "standard output section we are sending",
    "start": "587279",
    "end": "589120"
  },
  {
    "text": "the data to the elasticsearch",
    "start": "589120",
    "end": "591600"
  },
  {
    "text": "service that is run locally in my",
    "start": "591600",
    "end": "593680"
  },
  {
    "text": "machine",
    "start": "593680",
    "end": "594640"
  },
  {
    "text": "the es name means the elasticsearch",
    "start": "594640",
    "end": "597440"
  },
  {
    "text": "plugin",
    "start": "597440",
    "end": "598000"
  },
  {
    "text": "and we are going to use the logstash",
    "start": "598000",
    "end": "600160"
  },
  {
    "text": "format",
    "start": "600160",
    "end": "602079"
  },
  {
    "text": "so again we just start fluent",
    "start": "602079",
    "end": "606079"
  },
  {
    "text": "and we just switch the configuration",
    "start": "606079",
    "end": "607839"
  },
  {
    "text": "file",
    "start": "607839",
    "end": "609360"
  },
  {
    "text": "and then we we just run again our",
    "start": "609360",
    "end": "612800"
  },
  {
    "text": "container that is generating logs",
    "start": "612800",
    "end": "614880"
  },
  {
    "text": "and of course we are not going to see",
    "start": "614880",
    "end": "616399"
  },
  {
    "text": "anything on fluid bed",
    "start": "616399",
    "end": "617920"
  },
  {
    "text": "output because we are redirecting all",
    "start": "617920",
    "end": "619920"
  },
  {
    "text": "the logs to elasticsearch",
    "start": "619920",
    "end": "622800"
  },
  {
    "text": "and here in the other tab we are going",
    "start": "622800",
    "end": "625040"
  },
  {
    "text": "to watch",
    "start": "625040",
    "end": "625920"
  },
  {
    "text": "how the messages are being ingested to",
    "start": "625920",
    "end": "630240"
  },
  {
    "text": "the elasticsearch service if you can",
    "start": "630240",
    "end": "632160"
  },
  {
    "text": "look carefully",
    "start": "632160",
    "end": "633839"
  },
  {
    "text": "we have one index which is called",
    "start": "633839",
    "end": "635920"
  },
  {
    "text": "logstash",
    "start": "635920",
    "end": "637519"
  },
  {
    "text": "and the number of documents count is",
    "start": "637519",
    "end": "639519"
  },
  {
    "text": "increasing 25",
    "start": "639519",
    "end": "641040"
  },
  {
    "text": "27. it's shipping one or two per second",
    "start": "641040",
    "end": "644720"
  },
  {
    "text": "because we are just we just have we just",
    "start": "644720",
    "end": "646800"
  },
  {
    "text": "have that rate of data",
    "start": "646800",
    "end": "650480"
  },
  {
    "text": "while we keep this running we can also",
    "start": "650480",
    "end": "653360"
  },
  {
    "text": "explore",
    "start": "653360",
    "end": "654079"
  },
  {
    "text": "our data with a kibana",
    "start": "654079",
    "end": "657760"
  },
  {
    "text": "kibana is a visual way to play",
    "start": "657760",
    "end": "661279"
  },
  {
    "text": "with um all the data content that we",
    "start": "661279",
    "end": "664320"
  },
  {
    "text": "have in elasticsearch",
    "start": "664320",
    "end": "666640"
  },
  {
    "text": "we are going to start exploring this",
    "start": "666640",
    "end": "668320"
  },
  {
    "text": "data",
    "start": "668320",
    "end": "670160"
  },
  {
    "text": "okay first of all we need to create an",
    "start": "670160",
    "end": "673040"
  },
  {
    "text": "index pattern",
    "start": "673040",
    "end": "675839"
  },
  {
    "text": "okay i'm going to the next step",
    "start": "677440",
    "end": "680800"
  },
  {
    "text": "sometimes elastic on this keyboard and",
    "start": "680800",
    "end": "682880"
  },
  {
    "text": "this part is a bit tricky",
    "start": "682880",
    "end": "685680"
  },
  {
    "text": "but we will see if it led us to see",
    "start": "685680",
    "end": "688800"
  },
  {
    "text": "all the content okay perfect",
    "start": "688800",
    "end": "693760"
  },
  {
    "text": "and we will start looking at the theorem",
    "start": "693760",
    "end": "697600"
  },
  {
    "text": "we want to visualize this data oh sorry",
    "start": "697600",
    "end": "700839"
  },
  {
    "text": "here",
    "start": "700839",
    "end": "703839"
  },
  {
    "text": "okay here we go so our data has been",
    "start": "704880",
    "end": "707760"
  },
  {
    "text": "ingested in elastic",
    "start": "707760",
    "end": "709279"
  },
  {
    "text": "and as you can see every record it has",
    "start": "709279",
    "end": "712399"
  },
  {
    "text": "its own structure we can take a look at",
    "start": "712399",
    "end": "714880"
  },
  {
    "text": "the json format",
    "start": "714880",
    "end": "716880"
  },
  {
    "text": "that is coming in so if you remember",
    "start": "716880",
    "end": "720160"
  },
  {
    "text": "carefully at the beginning we just",
    "start": "720160",
    "end": "721839"
  },
  {
    "text": "had a one array of bytes but after a",
    "start": "721839",
    "end": "724959"
  },
  {
    "text": "parsing",
    "start": "724959",
    "end": "725680"
  },
  {
    "text": "we get a full structure we got a",
    "start": "725680",
    "end": "728000"
  },
  {
    "text": "timestamp",
    "start": "728000",
    "end": "728800"
  },
  {
    "text": "and we got different information as an",
    "start": "728800",
    "end": "731120"
  },
  {
    "text": "addition that was like a context",
    "start": "731120",
    "end": "733200"
  },
  {
    "text": "i'm talking about the container id and",
    "start": "733200",
    "end": "735920"
  },
  {
    "text": "the container name",
    "start": "735920",
    "end": "737440"
  },
  {
    "text": "so this is one of the things that you",
    "start": "737440",
    "end": "738959"
  },
  {
    "text": "can do with fluid",
    "start": "738959",
    "end": "740800"
  },
  {
    "text": "of course this is a demo this is a very",
    "start": "740800",
    "end": "742800"
  },
  {
    "text": "simple use case but",
    "start": "742800",
    "end": "744000"
  },
  {
    "text": "there are many more things that you can",
    "start": "744000",
    "end": "745360"
  },
  {
    "text": "do so we are going to get back to our",
    "start": "745360",
    "end": "748160"
  },
  {
    "start": "746000",
    "end": "948000"
  },
  {
    "text": "presentation",
    "start": "748160",
    "end": "750879"
  },
  {
    "text": "and okay so after this demo one",
    "start": "751760",
    "end": "756079"
  },
  {
    "text": "we're going to talk about a little bit",
    "start": "756079",
    "end": "757600"
  },
  {
    "text": "about the login basics and",
    "start": "757600",
    "end": "759680"
  },
  {
    "text": "this how it works internally basically",
    "start": "759680",
    "end": "762000"
  },
  {
    "text": "one application",
    "start": "762000",
    "end": "763279"
  },
  {
    "text": "generates a record which is a message",
    "start": "763279",
    "end": "765839"
  },
  {
    "text": "right",
    "start": "765839",
    "end": "766480"
  },
  {
    "text": "but this record is not just a message it",
    "start": "766480",
    "end": "768800"
  },
  {
    "text": "also comes with a time stamp",
    "start": "768800",
    "end": "770720"
  },
  {
    "text": "timestamp because it needs to know when",
    "start": "770720",
    "end": "772959"
  },
  {
    "text": "this message was generated",
    "start": "772959",
    "end": "774880"
  },
  {
    "text": "plus the message internally we do this",
    "start": "774880",
    "end": "778160"
  },
  {
    "text": "but we serialize all the data that is",
    "start": "778160",
    "end": "780480"
  },
  {
    "text": "coming in in fluid bit",
    "start": "780480",
    "end": "781760"
  },
  {
    "text": "with a format which is called message",
    "start": "781760",
    "end": "783600"
  },
  {
    "text": "pack consider message pack like a binary",
    "start": "783600",
    "end": "786320"
  },
  {
    "text": "json but",
    "start": "786320",
    "end": "787120"
  },
  {
    "text": "on asteroids and of course all of these",
    "start": "787120",
    "end": "791040"
  },
  {
    "text": "inside fluid fluency also does pretty",
    "start": "791040",
    "end": "794079"
  },
  {
    "text": "much the same thing",
    "start": "794079",
    "end": "794880"
  },
  {
    "text": "actually fluent data processing model",
    "start": "794880",
    "end": "797440"
  },
  {
    "text": "like this",
    "start": "797440",
    "end": "798079"
  },
  {
    "text": "is an exact copy of fluency",
    "start": "798079",
    "end": "801839"
  },
  {
    "text": "internally when we have the input size",
    "start": "801839",
    "end": "804000"
  },
  {
    "text": "we can have many",
    "start": "804000",
    "end": "804959"
  },
  {
    "text": "inputs many filters many outputs we have",
    "start": "804959",
    "end": "807839"
  },
  {
    "text": "the data that is coming in",
    "start": "807839",
    "end": "809360"
  },
  {
    "text": "associated with tax so with tax we can",
    "start": "809360",
    "end": "812800"
  },
  {
    "text": "we can say this data is coming from this",
    "start": "812800",
    "end": "814959"
  },
  {
    "text": "place and",
    "start": "814959",
    "end": "816160"
  },
  {
    "text": "we want to create then a natural to say",
    "start": "816160",
    "end": "819440"
  },
  {
    "text": "please send this data out to a different",
    "start": "819440",
    "end": "821199"
  },
  {
    "text": "destination so in the left we can see",
    "start": "821199",
    "end": "823680"
  },
  {
    "text": "that we have",
    "start": "823680",
    "end": "824560"
  },
  {
    "text": "two sources of data with different tags",
    "start": "824560",
    "end": "826639"
  },
  {
    "text": "right one for the apache logs or for",
    "start": "826639",
    "end": "829040"
  },
  {
    "text": "syslog information",
    "start": "829040",
    "end": "830800"
  },
  {
    "text": "then we have an intermediary phase which",
    "start": "830800",
    "end": "833040"
  },
  {
    "text": "is like the buffering or storage",
    "start": "833040",
    "end": "835199"
  },
  {
    "text": "and in storage is where we are storing",
    "start": "835199",
    "end": "837120"
  },
  {
    "text": "our data",
    "start": "837120",
    "end": "838240"
  },
  {
    "text": "base of course by default is memory but",
    "start": "838240",
    "end": "840639"
  },
  {
    "text": "also we can put a secondary system",
    "start": "840639",
    "end": "842639"
  },
  {
    "text": "in the file system so if anything",
    "start": "842639",
    "end": "845279"
  },
  {
    "text": "happens",
    "start": "845279",
    "end": "846240"
  },
  {
    "text": "like a power outage or a network problem",
    "start": "846240",
    "end": "848560"
  },
  {
    "text": "at least we can recover",
    "start": "848560",
    "end": "849839"
  },
  {
    "text": "almost all the data that was at that",
    "start": "849839",
    "end": "852639"
  },
  {
    "text": "moment",
    "start": "852639",
    "end": "853440"
  },
  {
    "text": "being processed after that we have the",
    "start": "853440",
    "end": "856160"
  },
  {
    "text": "router",
    "start": "856160",
    "end": "856800"
  },
  {
    "text": "so the router basically takes every",
    "start": "856800",
    "end": "859120"
  },
  {
    "text": "input",
    "start": "859120",
    "end": "860399"
  },
  {
    "text": "of data that has attack and using the",
    "start": "860399",
    "end": "863040"
  },
  {
    "text": "matching rules",
    "start": "863040",
    "end": "864240"
  },
  {
    "text": "defined by the output plugins we can",
    "start": "864240",
    "end": "866639"
  },
  {
    "text": "ship this data out to different places",
    "start": "866639",
    "end": "869199"
  },
  {
    "text": "elasticsearch influx dbe or any cloud",
    "start": "869199",
    "end": "872000"
  },
  {
    "text": "service provider platform",
    "start": "872000",
    "end": "875440"
  },
  {
    "text": "right now we have more challenges right",
    "start": "876160",
    "end": "880079"
  },
  {
    "text": "it's pretty cool to take the data from",
    "start": "880079",
    "end": "882320"
  },
  {
    "text": "one place and ship it to the other but",
    "start": "882320",
    "end": "884079"
  },
  {
    "text": "what about distributed environments like",
    "start": "884079",
    "end": "885920"
  },
  {
    "text": "kubernetes",
    "start": "885920",
    "end": "886959"
  },
  {
    "text": "where every pot can be one or two or",
    "start": "886959",
    "end": "889040"
  },
  {
    "text": "three containers",
    "start": "889040",
    "end": "890079"
  },
  {
    "text": "but we can have a many pots in one note",
    "start": "890079",
    "end": "892959"
  },
  {
    "text": "and we can have many nodes",
    "start": "892959",
    "end": "894320"
  },
  {
    "text": "but also nodes needs to be in",
    "start": "894320",
    "end": "896880"
  },
  {
    "text": "correlation with the master",
    "start": "896880",
    "end": "899040"
  },
  {
    "text": "api server which provides context",
    "start": "899040",
    "end": "901199"
  },
  {
    "text": "information for every port",
    "start": "901199",
    "end": "904000"
  },
  {
    "text": "so fluent bit comes to the rescue it",
    "start": "904000",
    "end": "906240"
  },
  {
    "text": "basically is deployed as a demonstrate",
    "start": "906240",
    "end": "908320"
  },
  {
    "text": "and this demon cell what it does is to",
    "start": "908320",
    "end": "910480"
  },
  {
    "text": "read all the container log files",
    "start": "910480",
    "end": "913120"
  },
  {
    "text": "because all by the by default this can",
    "start": "913120",
    "end": "915360"
  },
  {
    "text": "be changed but by default most of",
    "start": "915360",
    "end": "916720"
  },
  {
    "text": "kubernetes",
    "start": "916720",
    "end": "917920"
  },
  {
    "text": "and distribution store the data",
    "start": "917920",
    "end": "919600"
  },
  {
    "text": "information into the file system",
    "start": "919600",
    "end": "921680"
  },
  {
    "text": "but also you can configure from a bit to",
    "start": "921680",
    "end": "923600"
  },
  {
    "text": "use systemd or any kind of a protocol",
    "start": "923600",
    "end": "926800"
  },
  {
    "text": "you can read the data from the pods and",
    "start": "926800",
    "end": "929360"
  },
  {
    "text": "then fluidbit is able to",
    "start": "929360",
    "end": "931360"
  },
  {
    "text": "retrieve all the media data from the api",
    "start": "931360",
    "end": "935040"
  },
  {
    "text": "server but finally to be able to ingest",
    "start": "935040",
    "end": "939040"
  },
  {
    "text": "data back",
    "start": "939040",
    "end": "939759"
  },
  {
    "text": "into the database so the same demo that",
    "start": "939759",
    "end": "942000"
  },
  {
    "text": "we did",
    "start": "942000",
    "end": "942959"
  },
  {
    "text": "is pretty much the same thing that will",
    "start": "942959",
    "end": "944639"
  },
  {
    "text": "happen in a cloud",
    "start": "944639",
    "end": "946480"
  },
  {
    "text": "environment and now we're going to talk",
    "start": "946480",
    "end": "949199"
  },
  {
    "start": "948000",
    "end": "1076000"
  },
  {
    "text": "about",
    "start": "949199",
    "end": "949759"
  },
  {
    "text": "a different topic which is called stream",
    "start": "949759",
    "end": "952320"
  },
  {
    "text": "processing",
    "start": "952320",
    "end": "953199"
  },
  {
    "text": "maybe it sounds familiar for you but",
    "start": "953199",
    "end": "954880"
  },
  {
    "text": "stream processing is",
    "start": "954880",
    "end": "956320"
  },
  {
    "text": "just the ability to perform data",
    "start": "956320",
    "end": "958800"
  },
  {
    "text": "processing while",
    "start": "958800",
    "end": "959759"
  },
  {
    "text": "it's still in motion but you can say hey",
    "start": "959759",
    "end": "962399"
  },
  {
    "text": "we are",
    "start": "962399",
    "end": "963040"
  },
  {
    "text": "talking about logging and now we are",
    "start": "963040",
    "end": "965120"
  },
  {
    "text": "talking about stream processing",
    "start": "965120",
    "end": "967199"
  },
  {
    "text": "if you think carefully about logging",
    "start": "967199",
    "end": "969360"
  },
  {
    "text": "what we did at the beginning when we are",
    "start": "969360",
    "end": "971279"
  },
  {
    "text": "converting data from constructor to a",
    "start": "971279",
    "end": "973360"
  },
  {
    "text": "structured format",
    "start": "973360",
    "end": "974560"
  },
  {
    "text": "we are doing data processing but also",
    "start": "974560",
    "end": "978000"
  },
  {
    "text": "we went beyond that i implemented string",
    "start": "978000",
    "end": "981199"
  },
  {
    "text": "processing capabilities",
    "start": "981199",
    "end": "982720"
  },
  {
    "text": "on top of flambe",
    "start": "982720",
    "end": "985680"
  },
  {
    "text": "so think about this every record or log",
    "start": "985920",
    "end": "988800"
  },
  {
    "text": "message is an event",
    "start": "988800",
    "end": "990480"
  },
  {
    "text": "the events already has a structure and",
    "start": "990480",
    "end": "993120"
  },
  {
    "text": "we have two things",
    "start": "993120",
    "end": "994000"
  },
  {
    "text": "timestamp a message",
    "start": "994000",
    "end": "997279"
  },
  {
    "text": "like this right this is an example",
    "start": "997279",
    "end": "999519"
  },
  {
    "text": "temperature",
    "start": "999519",
    "end": "1000480"
  },
  {
    "text": "and a timestamp those are keys and",
    "start": "1000480",
    "end": "1003519"
  },
  {
    "text": "values",
    "start": "1003519",
    "end": "1005279"
  },
  {
    "text": "and now you start thinking about hey",
    "start": "1005279",
    "end": "1007519"
  },
  {
    "text": "this sounds like",
    "start": "1007519",
    "end": "1009120"
  },
  {
    "text": "internal representation of data in a",
    "start": "1009120",
    "end": "1011360"
  },
  {
    "text": "database",
    "start": "1011360",
    "end": "1012480"
  },
  {
    "text": "could be but also in stream processing",
    "start": "1012480",
    "end": "1016320"
  },
  {
    "text": "there's a couple of challenges",
    "start": "1016320",
    "end": "1017759"
  },
  {
    "text": "all the data has different formats even",
    "start": "1017759",
    "end": "1020639"
  },
  {
    "text": "in such",
    "start": "1020639",
    "end": "1021199"
  },
  {
    "text": "a structure that schema is not fixed",
    "start": "1021199",
    "end": "1024720"
  },
  {
    "text": "right",
    "start": "1024720",
    "end": "1025280"
  },
  {
    "text": "it could be different you can have",
    "start": "1025280",
    "end": "1026720"
  },
  {
    "text": "records with um 10 keys",
    "start": "1026720",
    "end": "1029199"
  },
  {
    "text": "on this with 8 and maybe not all the",
    "start": "1029199",
    "end": "1032000"
  },
  {
    "text": "records will have the same name for the",
    "start": "1032000",
    "end": "1033600"
  },
  {
    "text": "keys",
    "start": "1033600",
    "end": "1034400"
  },
  {
    "text": "right so how we can do stream processing",
    "start": "1034400",
    "end": "1037199"
  },
  {
    "text": "or",
    "start": "1037199",
    "end": "1037600"
  },
  {
    "text": "provide the ability to process this data",
    "start": "1037600",
    "end": "1040880"
  },
  {
    "text": "in a more powerful way which is not just",
    "start": "1040880",
    "end": "1044160"
  },
  {
    "text": "filtering",
    "start": "1044160",
    "end": "1044959"
  },
  {
    "text": "but something that we can run queries on",
    "start": "1044959",
    "end": "1047199"
  },
  {
    "text": "top of this",
    "start": "1047199",
    "end": "1048160"
  },
  {
    "text": "data that is flowing through fluid",
    "start": "1048160",
    "end": "1051440"
  },
  {
    "text": "so the stream processing goals are just",
    "start": "1051440",
    "end": "1053760"
  },
  {
    "text": "fast data processing",
    "start": "1053760",
    "end": "1055520"
  },
  {
    "text": "trying to do it without the notion of",
    "start": "1055520",
    "end": "1057360"
  },
  {
    "text": "tables no database",
    "start": "1057360",
    "end": "1059600"
  },
  {
    "text": "no indexing or index free and ideally we",
    "start": "1059600",
    "end": "1063440"
  },
  {
    "text": "want to do it just in memory",
    "start": "1063440",
    "end": "1065280"
  },
  {
    "text": "so it's just ability to process your",
    "start": "1065280",
    "end": "1067360"
  },
  {
    "text": "data what your data is in motion",
    "start": "1067360",
    "end": "1069600"
  },
  {
    "text": "meaning it's still in memory flowing in",
    "start": "1069600",
    "end": "1072160"
  },
  {
    "text": "the pipeline from one point",
    "start": "1072160",
    "end": "1074240"
  },
  {
    "text": "to the other so how do we do this",
    "start": "1074240",
    "end": "1078080"
  },
  {
    "start": "1076000",
    "end": "1437000"
  },
  {
    "text": "this is like traditional a way",
    "start": "1078080",
    "end": "1081760"
  },
  {
    "text": "to do stream processing you have the",
    "start": "1081760",
    "end": "1083600"
  },
  {
    "text": "hardware you have the events",
    "start": "1083600",
    "end": "1085360"
  },
  {
    "text": "the data gets into a stream processor",
    "start": "1085360",
    "end": "1087840"
  },
  {
    "text": "and then you ship the results out to",
    "start": "1087840",
    "end": "1090080"
  },
  {
    "text": "a database okay so this is",
    "start": "1090080",
    "end": "1094480"
  },
  {
    "text": "really good but if you have a stream",
    "start": "1094480",
    "end": "1096080"
  },
  {
    "text": "processor you have need to deal with the",
    "start": "1096080",
    "end": "1098160"
  },
  {
    "text": "events the records",
    "start": "1098160",
    "end": "1099520"
  },
  {
    "text": "you need to expose a query language",
    "start": "1099520",
    "end": "1101679"
  },
  {
    "text": "because you want to do",
    "start": "1101679",
    "end": "1102880"
  },
  {
    "text": "key selection filtering aggregations",
    "start": "1102880",
    "end": "1105679"
  },
  {
    "text": "ever wrote in",
    "start": "1105679",
    "end": "1106960"
  },
  {
    "text": "and all that things the traditional",
    "start": "1106960",
    "end": "1110000"
  },
  {
    "text": "model",
    "start": "1110000",
    "end": "1110559"
  },
  {
    "text": "is that if you think about the edge of",
    "start": "1110559",
    "end": "1113679"
  },
  {
    "text": "the cloud when i'm talking about the",
    "start": "1113679",
    "end": "1115280"
  },
  {
    "text": "edge i'm talking about",
    "start": "1115280",
    "end": "1116559"
  },
  {
    "text": "where the data is being generated it",
    "start": "1116559",
    "end": "1118799"
  },
  {
    "text": "could be anything kubernetes node",
    "start": "1118799",
    "end": "1120880"
  },
  {
    "text": "an embedded device right the normal",
    "start": "1120880",
    "end": "1123679"
  },
  {
    "text": "approach is to have on the edge",
    "start": "1123679",
    "end": "1125520"
  },
  {
    "text": "something that kind of centralize data",
    "start": "1125520",
    "end": "1129039"
  },
  {
    "text": "send it to the stream processor to the",
    "start": "1129039",
    "end": "1130559"
  },
  {
    "text": "cloud and then we centralize the results",
    "start": "1130559",
    "end": "1133039"
  },
  {
    "text": "in a database okay but what we are doing",
    "start": "1133039",
    "end": "1136240"
  },
  {
    "text": "with floom bed",
    "start": "1136240",
    "end": "1137440"
  },
  {
    "text": "it's more fun than that actually we are",
    "start": "1137440",
    "end": "1140880"
  },
  {
    "text": "doing logging on asteroids",
    "start": "1140880",
    "end": "1142640"
  },
  {
    "text": "we are doing stream processing but on",
    "start": "1142640",
    "end": "1144880"
  },
  {
    "text": "the edge",
    "start": "1144880",
    "end": "1146559"
  },
  {
    "text": "in the same place where fluid is running",
    "start": "1146559",
    "end": "1148480"
  },
  {
    "text": "you can defer",
    "start": "1148480",
    "end": "1150080"
  },
  {
    "text": "what they used to do in the cloud maybe",
    "start": "1150080",
    "end": "1152160"
  },
  {
    "text": "you can do 50",
    "start": "1152160",
    "end": "1153520"
  },
  {
    "text": "or 60 percent of that processing but on",
    "start": "1153520",
    "end": "1155760"
  },
  {
    "text": "the edge in a lightweight mode",
    "start": "1155760",
    "end": "1158880"
  },
  {
    "text": "this is the original mechanism that we",
    "start": "1158880",
    "end": "1160480"
  },
  {
    "text": "have right from the edge",
    "start": "1160480",
    "end": "1162160"
  },
  {
    "text": "and send the data to the out to the end",
    "start": "1162160",
    "end": "1164000"
  },
  {
    "text": "to the cloud to do all the stream",
    "start": "1164000",
    "end": "1165440"
  },
  {
    "text": "processing but now",
    "start": "1165440",
    "end": "1166960"
  },
  {
    "text": "what we are achieving in flowing bed is",
    "start": "1166960",
    "end": "1168720"
  },
  {
    "text": "a street internal and built-in stream",
    "start": "1168720",
    "end": "1170880"
  },
  {
    "text": "processor",
    "start": "1170880",
    "end": "1171760"
  },
  {
    "text": "that can do analysis data forecasting",
    "start": "1171760",
    "end": "1174320"
  },
  {
    "text": "create streams of data",
    "start": "1174320",
    "end": "1176000"
  },
  {
    "text": "and maybe for you this sounds familiar",
    "start": "1176000",
    "end": "1177919"
  },
  {
    "text": "to kafka okay sequel and yes",
    "start": "1177919",
    "end": "1180160"
  },
  {
    "text": "it's pretty much pretty much similar",
    "start": "1180160",
    "end": "1184080"
  },
  {
    "text": "and what are the goals and features with",
    "start": "1184080",
    "end": "1185760"
  },
  {
    "text": "stream processor",
    "start": "1185760",
    "end": "1187200"
  },
  {
    "text": "well actually we can offload computation",
    "start": "1187200",
    "end": "1189520"
  },
  {
    "text": "from the servers to the edge",
    "start": "1189520",
    "end": "1191280"
  },
  {
    "text": "the were delayed the data has been",
    "start": "1191280",
    "end": "1192640"
  },
  {
    "text": "regenerated you just",
    "start": "1192640",
    "end": "1195039"
  },
  {
    "text": "can send the results that you care about",
    "start": "1195039",
    "end": "1197600"
  },
  {
    "text": "to the cloud",
    "start": "1197600",
    "end": "1198400"
  },
  {
    "text": "and not send all the data imagine that",
    "start": "1198400",
    "end": "1200559"
  },
  {
    "text": "you have a 50 servers you don't want to",
    "start": "1200559",
    "end": "1202640"
  },
  {
    "text": "send all the data",
    "start": "1202640",
    "end": "1203600"
  },
  {
    "text": "just a fraction of them and",
    "start": "1203600",
    "end": "1206640"
  },
  {
    "text": "with our query language is a sql and i'm",
    "start": "1206640",
    "end": "1209600"
  },
  {
    "text": "sure that you are familiar with sql and",
    "start": "1209600",
    "end": "1211520"
  },
  {
    "text": "yes",
    "start": "1211520",
    "end": "1211919"
  },
  {
    "text": "there's no tables there's no database",
    "start": "1211919",
    "end": "1215120"
  },
  {
    "text": "it's just one bit with our built-in sql",
    "start": "1215120",
    "end": "1217919"
  },
  {
    "text": "processor",
    "start": "1217919",
    "end": "1219360"
  },
  {
    "text": "integrated in our core",
    "start": "1219360",
    "end": "1222720"
  },
  {
    "text": "and what you can do with the string",
    "start": "1222720",
    "end": "1224320"
  },
  {
    "text": "processor we don't have enough time to",
    "start": "1224320",
    "end": "1226400"
  },
  {
    "text": "make a demo right now",
    "start": "1226400",
    "end": "1228080"
  },
  {
    "text": "but actually the things that you can do",
    "start": "1228080",
    "end": "1229520"
  },
  {
    "text": "that are really fun is like create a",
    "start": "1229520",
    "end": "1231440"
  },
  {
    "text": "stream",
    "start": "1231440",
    "end": "1232320"
  },
  {
    "text": "for data that is flowing for example",
    "start": "1232320",
    "end": "1234320"
  },
  {
    "text": "from an input a plugin",
    "start": "1234320",
    "end": "1236720"
  },
  {
    "text": "tail or forward you can say create a new",
    "start": "1236720",
    "end": "1239760"
  },
  {
    "text": "stream",
    "start": "1239760",
    "end": "1241200"
  },
  {
    "text": "using a query meaning like select all",
    "start": "1241200",
    "end": "1244400"
  },
  {
    "text": "the keys that matches",
    "start": "1244400",
    "end": "1246000"
  },
  {
    "text": "a certain criteria and create a new",
    "start": "1246000",
    "end": "1248159"
  },
  {
    "text": "string of data",
    "start": "1248159",
    "end": "1249600"
  },
  {
    "text": "and that new string becomes a new input",
    "start": "1249600",
    "end": "1251840"
  },
  {
    "text": "of data inside fluid",
    "start": "1251840",
    "end": "1253679"
  },
  {
    "text": "and you can wrote that everywhere so you",
    "start": "1253679",
    "end": "1256159"
  },
  {
    "text": "can imagine that you can create",
    "start": "1256159",
    "end": "1257679"
  },
  {
    "text": "other things you can create a special",
    "start": "1257679",
    "end": "1260720"
  },
  {
    "text": "functions",
    "start": "1260720",
    "end": "1261679"
  },
  {
    "text": "to set to try to detect anomalies which",
    "start": "1261679",
    "end": "1264400"
  },
  {
    "text": "is quite powerful",
    "start": "1264400",
    "end": "1267200"
  },
  {
    "text": "the same pipeline that we had now but",
    "start": "1267200",
    "end": "1270240"
  },
  {
    "text": "instead of normal buffering we have the",
    "start": "1270240",
    "end": "1272159"
  },
  {
    "text": "format storage",
    "start": "1272159",
    "end": "1273440"
  },
  {
    "text": "and after storage we hit the stream",
    "start": "1273440",
    "end": "1275360"
  },
  {
    "text": "processor and the stream processor then",
    "start": "1275360",
    "end": "1277679"
  },
  {
    "text": "we hit back the information",
    "start": "1277679",
    "end": "1279600"
  },
  {
    "text": "as the input because that data that you",
    "start": "1279600",
    "end": "1282559"
  },
  {
    "text": "are generating is new data",
    "start": "1282559",
    "end": "1284159"
  },
  {
    "text": "it needs to go through the pipeline and",
    "start": "1284159",
    "end": "1286240"
  },
  {
    "text": "can go to a different destination",
    "start": "1286240",
    "end": "1290320"
  },
  {
    "text": "we support aggregation functions so we",
    "start": "1290320",
    "end": "1292799"
  },
  {
    "text": "can create aggregation windows",
    "start": "1292799",
    "end": "1294480"
  },
  {
    "text": "and calculate aggregation and apply the",
    "start": "1294480",
    "end": "1296960"
  },
  {
    "text": "common functions like max means",
    "start": "1296960",
    "end": "1298880"
  },
  {
    "text": "um and also we support the basic of",
    "start": "1298880",
    "end": "1302559"
  },
  {
    "text": "machine learning functions",
    "start": "1302559",
    "end": "1304159"
  },
  {
    "text": "we have to support time series",
    "start": "1304159",
    "end": "1305520"
  },
  {
    "text": "forecasting we did a webinar a few days",
    "start": "1305520",
    "end": "1308320"
  },
  {
    "text": "ago",
    "start": "1308320",
    "end": "1308880"
  },
  {
    "text": "so we will share the links during this",
    "start": "1308880",
    "end": "1310640"
  },
  {
    "text": "presentation where you can watch",
    "start": "1310640",
    "end": "1312400"
  },
  {
    "text": "more about this because this is really",
    "start": "1312400",
    "end": "1315039"
  },
  {
    "text": "good and i think that the future for",
    "start": "1315039",
    "end": "1316480"
  },
  {
    "text": "stream processing and fluent beta is",
    "start": "1316480",
    "end": "1318960"
  },
  {
    "text": "playing a major role on it",
    "start": "1318960",
    "end": "1322480"
  },
  {
    "text": "now an example how to create a stream",
    "start": "1322720",
    "end": "1324799"
  },
  {
    "text": "imagine that you're",
    "start": "1324799",
    "end": "1325840"
  },
  {
    "text": "running the input plugin which is called",
    "start": "1325840",
    "end": "1328080"
  },
  {
    "text": "cpu",
    "start": "1328080",
    "end": "1328960"
  },
  {
    "text": "which collects cpu metrics in fluent you",
    "start": "1328960",
    "end": "1331840"
  },
  {
    "text": "can say hey create",
    "start": "1331840",
    "end": "1333120"
  },
  {
    "text": "a select the average cpu consumption",
    "start": "1333120",
    "end": "1335760"
  },
  {
    "text": "from stream cpu",
    "start": "1335760",
    "end": "1337919"
  },
  {
    "text": "during a window tumbling of 60 seconds",
    "start": "1337919",
    "end": "1340400"
  },
  {
    "text": "so during 60 seconds we are calculating",
    "start": "1340400",
    "end": "1343039"
  },
  {
    "text": "what's the average of the cpu that has",
    "start": "1343039",
    "end": "1345039"
  },
  {
    "text": "been reported",
    "start": "1345039",
    "end": "1346400"
  },
  {
    "text": "and after 60 seconds we just ship one",
    "start": "1346400",
    "end": "1349440"
  },
  {
    "text": "result",
    "start": "1349440",
    "end": "1350720"
  },
  {
    "text": "right that is created with a tag called",
    "start": "1350720",
    "end": "1353039"
  },
  {
    "text": "results",
    "start": "1353039",
    "end": "1354159"
  },
  {
    "text": "so we don't you don't keep all the 60",
    "start": "1354159",
    "end": "1357120"
  },
  {
    "text": "samples",
    "start": "1357120",
    "end": "1358240"
  },
  {
    "text": "out you just ship one per minute",
    "start": "1358240",
    "end": "1363360"
  },
  {
    "text": "and flowing beat nowadays i will say",
    "start": "1363440",
    "end": "1366159"
  },
  {
    "text": "that's getting a lot of traction and the",
    "start": "1366159",
    "end": "1367840"
  },
  {
    "text": "team we are really excited about this",
    "start": "1367840",
    "end": "1370159"
  },
  {
    "text": "nowadays in last week we hit it just",
    "start": "1370159",
    "end": "1372880"
  },
  {
    "text": "more than 100 million deployments",
    "start": "1372880",
    "end": "1375360"
  },
  {
    "text": "just on the half of this year so most of",
    "start": "1375360",
    "end": "1378240"
  },
  {
    "text": "our users i would say",
    "start": "1378240",
    "end": "1379760"
  },
  {
    "text": "90 percent are kubernetes users they use",
    "start": "1379760",
    "end": "1382799"
  },
  {
    "text": "a fluent bed with fluency in conjunction",
    "start": "1382799",
    "end": "1385600"
  },
  {
    "text": "or sometimes it's just fluent",
    "start": "1385600",
    "end": "1388159"
  },
  {
    "text": "and but the adoption is just crazy and",
    "start": "1388159",
    "end": "1390799"
  },
  {
    "text": "also we are pretty happy to be working",
    "start": "1390799",
    "end": "1392799"
  },
  {
    "text": "with",
    "start": "1392799",
    "end": "1393360"
  },
  {
    "text": "many companies that are using fluent bed",
    "start": "1393360",
    "end": "1395840"
  },
  {
    "text": "in production",
    "start": "1395840",
    "end": "1396799"
  },
  {
    "text": "like arm aws google cloud lock dna",
    "start": "1396799",
    "end": "1400320"
  },
  {
    "text": "sumo logic lift and so on and i'm sure",
    "start": "1400320",
    "end": "1403120"
  },
  {
    "text": "that",
    "start": "1403120",
    "end": "1404400"
  },
  {
    "text": "many companies in china are using it too",
    "start": "1404400",
    "end": "1407760"
  },
  {
    "text": "and we welcome every company every user",
    "start": "1407760",
    "end": "1410799"
  },
  {
    "text": "of the community to join us and help to",
    "start": "1410799",
    "end": "1413200"
  },
  {
    "text": "make fluent bet",
    "start": "1413200",
    "end": "1414840"
  },
  {
    "text": "better and now we are going to open at",
    "start": "1414840",
    "end": "1417600"
  },
  {
    "text": "the time for questions so",
    "start": "1417600",
    "end": "1419679"
  },
  {
    "text": "i'm going to stop the recording for now",
    "start": "1419679",
    "end": "1422480"
  },
  {
    "text": "for this presentation",
    "start": "1422480",
    "end": "1423760"
  },
  {
    "text": "thanks so much for attending this",
    "start": "1423760",
    "end": "1425600"
  },
  {
    "text": "session and then we are really happy",
    "start": "1425600",
    "end": "1427440"
  },
  {
    "text": "that",
    "start": "1427440",
    "end": "1428240"
  },
  {
    "text": "we can engage and receive feedback from",
    "start": "1428240",
    "end": "1431360"
  },
  {
    "text": "you if you are a fluent bid user or if",
    "start": "1431360",
    "end": "1433440"
  },
  {
    "text": "you want to jump into it",
    "start": "1433440",
    "end": "1435360"
  },
  {
    "text": "thank you enjoy the conference",
    "start": "1435360",
    "end": "1439278"
  }
]