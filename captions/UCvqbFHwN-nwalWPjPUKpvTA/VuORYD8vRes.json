[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello everyone",
    "start": "80",
    "end": "1600"
  },
  {
    "text": "welcome uh my name is i j I am a GPC",
    "start": "1600",
    "end": "5319"
  },
  {
    "text": "Java maintainer and today um as Kev",
    "start": "5319",
    "end": "7680"
  },
  {
    "text": "mentioned I will walk you through an",
    "start": "7680",
    "end": "9480"
  },
  {
    "text": "overview of drpc as an",
    "start": "9480",
    "end": "12559"
  },
  {
    "text": "introduction um first a bit of a tri",
    "start": "12559",
    "end": "15160"
  },
  {
    "text": "question and do anyone know what grpc",
    "start": "15160",
    "end": "17400"
  },
  {
    "text": "stand",
    "start": "17400",
    "end": "19680"
  },
  {
    "text": "for um actually grpc remote procedure",
    "start": "22080",
    "end": "25400"
  },
  {
    "text": "call is a correct answer and remote",
    "start": "25400",
    "end": "28080"
  },
  {
    "text": "procedure call is that you can EX a core",
    "start": "28080",
    "end": "30960"
  },
  {
    "text": "function that execute in a different",
    "start": "30960",
    "end": "32758"
  },
  {
    "text": "process or even on a different machine",
    "start": "32759",
    "end": "35120"
  },
  {
    "text": "over the",
    "start": "35120",
    "end": "36239"
  },
  {
    "text": "internet but that not that is not the",
    "start": "36239",
    "end": "38719"
  },
  {
    "text": "only correct answer h g can literally",
    "start": "38719",
    "end": "41520"
  },
  {
    "text": "stands for anything as you can discover",
    "start": "41520",
    "end": "44000"
  },
  {
    "text": "in grpc C+ plus M report that is uh",
    "start": "44000",
    "end": "47239"
  },
  {
    "text": "released every six weeks and uh golden",
    "start": "47239",
    "end": "50719"
  },
  {
    "text": "retriever pancakes named after our",
    "start": "50719",
    "end": "52559"
  },
  {
    "text": "muscot is also a correct answer but",
    "start": "52559",
    "end": "55680"
  },
  {
    "text": "unfortunately the nice looking Google",
    "start": "55680",
    "end": "57600"
  },
  {
    "text": "remote procedure call is not accepted",
    "start": "57600",
    "end": "61920"
  },
  {
    "start": "60000",
    "end": "175000"
  },
  {
    "text": "okay now let's have an overview of",
    "start": "62000",
    "end": "64439"
  },
  {
    "text": "GPC gfpc is a general purpose it can be",
    "start": "64439",
    "end": "68119"
  },
  {
    "text": "run on different operating systems like",
    "start": "68119",
    "end": "70159"
  },
  {
    "text": "Android Linux windows and it can be run",
    "start": "70159",
    "end": "72840"
  },
  {
    "text": "on different uh platforms like x86 arm",
    "start": "72840",
    "end": "76360"
  },
  {
    "text": "and it can be run on the cloud on your",
    "start": "76360",
    "end": "79159"
  },
  {
    "text": "um web or on your mobile devices it is a",
    "start": "79159",
    "end": "82400"
  },
  {
    "text": "language agnostic we now support C++ go",
    "start": "82400",
    "end": "86200"
  },
  {
    "text": "Java Python aruby COP to just to name a",
    "start": "86200",
    "end": "89200"
  },
  {
    "text": "field and um the core part of is of that",
    "start": "89200",
    "end": "92720"
  },
  {
    "text": "is that it can communicate in a mixed",
    "start": "92720",
    "end": "95079"
  },
  {
    "text": "language environment between kind server",
    "start": "95079",
    "end": "97000"
  },
  {
    "text": "so that is really the important sense of",
    "start": "97000",
    "end": "99720"
  },
  {
    "text": "GPC GPC has tons of features to make",
    "start": "99720",
    "end": "102960"
  },
  {
    "text": "your communication efficient and safe",
    "start": "102960",
    "end": "105360"
  },
  {
    "text": "for example streaming high performance",
    "start": "105360",
    "end": "107719"
  },
  {
    "text": "security and Stat chasing and when I'm",
    "start": "107719",
    "end": "110880"
  },
  {
    "text": "thinking of the most common use cases of",
    "start": "110880",
    "end": "113960"
  },
  {
    "text": "J PC I'm thinking it's really like um a",
    "start": "113960",
    "end": "117399"
  },
  {
    "text": "very powerful modern smartphone so you",
    "start": "117399",
    "end": "120039"
  },
  {
    "text": "can do asynchronous unary calls that is",
    "start": "120039",
    "end": "122840"
  },
  {
    "text": "just like email and you can do um like",
    "start": "122840",
    "end": "125920"
  },
  {
    "text": "streaming call just that just like a um",
    "start": "125920",
    "end": "129119"
  },
  {
    "text": "video chat and when you send a single",
    "start": "129119",
    "end": "131400"
  },
  {
    "text": "message out to your mom she might reply",
    "start": "131400",
    "end": "133319"
  },
  {
    "text": "was 10 messages that is a server",
    "start": "133319",
    "end": "134800"
  },
  {
    "text": "streaming call JPC is secure we have",
    "start": "134800",
    "end": "138800"
  },
  {
    "text": "different ways to do our credentials to",
    "start": "138800",
    "end": "141319"
  },
  {
    "text": "do the authentication just as you can",
    "start": "141319",
    "end": "143519"
  },
  {
    "text": "use fingerprints or fix ID to log in and",
    "start": "143519",
    "end": "147599"
  },
  {
    "text": "JPC has strong native support for",
    "start": "147599",
    "end": "150160"
  },
  {
    "text": "observability that keep tracks of your",
    "start": "150160",
    "end": "152519"
  },
  {
    "text": "rpcs Wasing stats and chasing for",
    "start": "152519",
    "end": "154879"
  },
  {
    "text": "example and that is like your smartphone",
    "start": "154879",
    "end": "157280"
  },
  {
    "text": "is keep check keep checking of your",
    "start": "157280",
    "end": "159480"
  },
  {
    "text": "activities like screen times the feature",
    "start": "159480",
    "end": "162360"
  },
  {
    "text": "list go uh goes on so you can really",
    "start": "162360",
    "end": "165159"
  },
  {
    "text": "rely on your PC as you rely on your",
    "start": "165159",
    "end": "167599"
  },
  {
    "text": "powerful uh",
    "start": "167599",
    "end": "169159"
  },
  {
    "text": "smartphones this makes um this features",
    "start": "169159",
    "end": "172080"
  },
  {
    "text": "makes JPC excellent for building",
    "start": "172080",
    "end": "176040"
  },
  {
    "start": "175000",
    "end": "425000"
  },
  {
    "text": "microservices now let's have an",
    "start": "176560",
    "end": "178360"
  },
  {
    "text": "architecture overview um as well as U",
    "start": "178360",
    "end": "181280"
  },
  {
    "text": "familiar with those terminologies have",
    "start": "181280",
    "end": "182879"
  },
  {
    "text": "Refresh on it before we diveing deeper",
    "start": "182879",
    "end": "184519"
  },
  {
    "text": "into more technical",
    "start": "184519",
    "end": "186720"
  },
  {
    "text": "details so the outmost layer of the",
    "start": "186720",
    "end": "190080"
  },
  {
    "text": "framework that closer closest to",
    "start": "190080",
    "end": "192200"
  },
  {
    "text": "application is called stub stub is a",
    "start": "192200",
    "end": "195239"
  },
  {
    "text": "convenience that grpc provides to the",
    "start": "195239",
    "end": "197280"
  },
  {
    "text": "users to build your application it's",
    "start": "197280",
    "end": "199440"
  },
  {
    "text": "very quick it is easy and cheap um it is",
    "start": "199440",
    "end": "202840"
  },
  {
    "text": "also really closely related to the",
    "start": "202840",
    "end": "204720"
  },
  {
    "text": "protuff generator code and we can talk a",
    "start": "204720",
    "end": "207000"
  },
  {
    "text": "bit more about protuff later on the next",
    "start": "207000",
    "end": "210319"
  },
  {
    "text": "layer that the stop layer buil on is the",
    "start": "210319",
    "end": "213280"
  },
  {
    "text": "application the API",
    "start": "213280",
    "end": "215959"
  },
  {
    "text": "layer so when you're using stop you're",
    "start": "215959",
    "end": "218720"
  },
  {
    "text": "actually indirectly using API but you",
    "start": "218720",
    "end": "220879"
  },
  {
    "text": "can also directly use API layers to get",
    "start": "220879",
    "end": "223200"
  },
  {
    "text": "run stops that give you some Powers",
    "start": "223200",
    "end": "225799"
  },
  {
    "text": "because some of our apis they only",
    "start": "225799",
    "end": "227720"
  },
  {
    "text": "exposed at um API some of features only",
    "start": "227720",
    "end": "231200"
  },
  {
    "text": "exposed at API level instead of the",
    "start": "231200",
    "end": "233280"
  },
  {
    "text": "steps for example you can do U Manu flow",
    "start": "233280",
    "end": "236280"
  },
  {
    "text": "controls on API",
    "start": "236280",
    "end": "238159"
  },
  {
    "text": "level and channel CH is probably most",
    "start": "238159",
    "end": "241079"
  },
  {
    "text": "important concept here at the API level",
    "start": "241079",
    "end": "243680"
  },
  {
    "text": "uh channel is conceptually an endpoint",
    "start": "243680",
    "end": "246560"
  },
  {
    "text": "that you can send and receive message",
    "start": "246560",
    "end": "248120"
  },
  {
    "text": "too it is not a connection though",
    "start": "248120",
    "end": "251159"
  },
  {
    "text": "instead a channel manages multiple",
    "start": "251159",
    "end": "253360"
  },
  {
    "text": "connections and then they can Multiplex",
    "start": "253360",
    "end": "255720"
  },
  {
    "text": "rpcs on",
    "start": "255720",
    "end": "258239"
  },
  {
    "text": "it um sometimes in API level we um",
    "start": "258239",
    "end": "261400"
  },
  {
    "text": "corresponds to RPC as a call this is",
    "start": "261400",
    "end": "263639"
  },
  {
    "text": "also to knowledge the next layer of the",
    "start": "263639",
    "end": "266400"
  },
  {
    "text": "framework is the core part so there are",
    "start": "266400",
    "end": "269160"
  },
  {
    "text": "many of components in a core that an RPC",
    "start": "269160",
    "end": "272039"
  },
  {
    "text": "will experience in its life cycle um the",
    "start": "272039",
    "end": "274880"
  },
  {
    "text": "first thing is the name resolver so name",
    "start": "274880",
    "end": "276960"
  },
  {
    "text": "resolver job is to find where the back",
    "start": "276960",
    "end": "280039"
  },
  {
    "text": "end is and how to connect to it it is",
    "start": "280039",
    "end": "283080"
  },
  {
    "text": "pluggable next component is the um low",
    "start": "283080",
    "end": "286000"
  },
  {
    "text": "balancer low balancer job um is to",
    "start": "286000",
    "end": "288360"
  },
  {
    "text": "manage the connections here the",
    "start": "288360",
    "end": "290160"
  },
  {
    "text": "connections uh we call Super channels",
    "start": "290160",
    "end": "293120"
  },
  {
    "text": "and it's job is also to find which RPC",
    "start": "293120",
    "end": "296080"
  },
  {
    "text": "to uh go to which um sub Channel alow",
    "start": "296080",
    "end": "300240"
  },
  {
    "text": "balance is also",
    "start": "300240",
    "end": "302880"
  },
  {
    "text": "plugable buffering and retry is also in",
    "start": "302880",
    "end": "305400"
  },
  {
    "text": "this later so buffering is that when you",
    "start": "305400",
    "end": "307240"
  },
  {
    "text": "start request JPC not necessarily",
    "start": "307240",
    "end": "309639"
  },
  {
    "text": "immediately send out to the wire instead",
    "start": "309639",
    "end": "312560"
  },
  {
    "text": "it might queue it internally because it",
    "start": "312560",
    "end": "314759"
  },
  {
    "text": "needs to fetch other informations to put",
    "start": "314759",
    "end": "316840"
  },
  {
    "text": "things together and uh then it will send",
    "start": "316840",
    "end": "319280"
  },
  {
    "text": "out um the try is that if your previous",
    "start": "319280",
    "end": "322600"
  },
  {
    "text": "attempt failed for example and then JPC",
    "start": "322600",
    "end": "324680"
  },
  {
    "text": "will automatically do a replay of your",
    "start": "324680",
    "end": "326720"
  },
  {
    "text": "messages on the transfer layer hoping",
    "start": "326720",
    "end": "329120"
  },
  {
    "text": "that it will be successful for the",
    "start": "329120",
    "end": "330520"
  },
  {
    "text": "second time that will increase your",
    "start": "330520",
    "end": "332400"
  },
  {
    "text": "Communications",
    "start": "332400",
    "end": "335039"
  },
  {
    "text": "robustness um some of the secreted stuff",
    "start": "336680",
    "end": "340039"
  },
  {
    "text": "is also in a core layer um for example",
    "start": "340039",
    "end": "342360"
  },
  {
    "text": "the JPC might be fat some tokens before",
    "start": "342360",
    "end": "344440"
  },
  {
    "text": "it is able able to establish",
    "start": "344440",
    "end": "346400"
  },
  {
    "text": "communication or start an",
    "start": "346400",
    "end": "349479"
  },
  {
    "text": "RPC the next layer is got transport the",
    "start": "349800",
    "end": "352560"
  },
  {
    "text": "transport is kind of invisible to you",
    "start": "352560",
    "end": "354319"
  },
  {
    "text": "but it's important it is just a lot of",
    "start": "354319",
    "end": "356080"
  },
  {
    "text": "heavy liftings to put your bites into",
    "start": "356080",
    "end": "358280"
  },
  {
    "text": "the wire um JPC has many different kinds",
    "start": "358280",
    "end": "361120"
  },
  {
    "text": "of uh like transports for different use",
    "start": "361120",
    "end": "363759"
  },
  {
    "text": "cases like if you're developing on",
    "start": "363759",
    "end": "365440"
  },
  {
    "text": "Android you might use antp transport if",
    "start": "365440",
    "end": "368160"
  },
  {
    "text": "you are doing testing you might find the",
    "start": "368160",
    "end": "370759"
  },
  {
    "text": "in u the in process transport to be",
    "start": "370759",
    "end": "373319"
  },
  {
    "text": "useful and maybe in prod you're using",
    "start": "373319",
    "end": "375440"
  },
  {
    "text": "the NY um transport layer and all those",
    "start": "375440",
    "end": "378440"
  },
  {
    "text": "they are compatible with API and a core",
    "start": "378440",
    "end": "380440"
  },
  {
    "text": "part of API core part",
    "start": "380440",
    "end": "383120"
  },
  {
    "text": "interfaces and JPC we um the transport",
    "start": "383120",
    "end": "387280"
  },
  {
    "text": "is compatible with htd pool HT P2",
    "start": "387280",
    "end": "390039"
  },
  {
    "text": "protocol that is important to make it",
    "start": "390039",
    "end": "392199"
  },
  {
    "text": "high efficient um we can also talk about",
    "start": "392199",
    "end": "394639"
  },
  {
    "text": "more later and here interceptors is",
    "start": "394639",
    "end": "397680"
  },
  {
    "text": "interesting and concept it's kind of API",
    "start": "397680",
    "end": "400000"
  },
  {
    "text": "layer but it really gives you the power",
    "start": "400000",
    "end": "402199"
  },
  {
    "text": "to rewrite your channel and a call and",
    "start": "402199",
    "end": "404800"
  },
  {
    "text": "sometimes your PC will expose its apis",
    "start": "404800",
    "end": "407240"
  },
  {
    "text": "through interceptors for example o is",
    "start": "407240",
    "end": "409840"
  },
  {
    "text": "one um use case of that and people also",
    "start": "409840",
    "end": "412680"
  },
  {
    "text": "use um interceptors for logging purpose",
    "start": "412680",
    "end": "415240"
  },
  {
    "text": "Etc so as you can see um JPC is really",
    "start": "415240",
    "end": "418440"
  },
  {
    "text": "versatile in terms of how it providing",
    "start": "418440",
    "end": "420720"
  },
  {
    "text": "you with the building braks to build",
    "start": "420720",
    "end": "422720"
  },
  {
    "text": "your",
    "start": "422720",
    "end": "424919"
  },
  {
    "start": "425000",
    "end": "630000"
  },
  {
    "text": "application so we just mentioned that",
    "start": "426520",
    "end": "429039"
  },
  {
    "text": "GPC is built on two Community standards",
    "start": "429039",
    "end": "432000"
  },
  {
    "text": "the transport layer is built on hb2 and",
    "start": "432000",
    "end": "434759"
  },
  {
    "text": "there's also",
    "start": "434759",
    "end": "437039"
  },
  {
    "text": "Proto htb2 um is an ietf standard it is",
    "start": "437039",
    "end": "441520"
  },
  {
    "text": "derived from the early Speedy uh",
    "start": "441520",
    "end": "444280"
  },
  {
    "text": "experimental apis that originally",
    "start": "444280",
    "end": "445960"
  },
  {
    "text": "developed by Google it makes it J using",
    "start": "445960",
    "end": "449639"
  },
  {
    "text": "hp2 really makes it compatible with low",
    "start": "449639",
    "end": "452840"
  },
  {
    "text": "balancers and proes over there in the",
    "start": "452840",
    "end": "455560"
  },
  {
    "text": "wild internet htb2 reduces the number of",
    "start": "455560",
    "end": "458879"
  },
  {
    "text": "TCB connections it is binary um it um uh",
    "start": "458879",
    "end": "462840"
  },
  {
    "text": "includes higher compression the all of",
    "start": "462840",
    "end": "464800"
  },
  {
    "text": "these features make your PC very high",
    "start": "464800",
    "end": "466840"
  },
  {
    "text": "performance reduce latency and make",
    "start": "466840",
    "end": "469120"
  },
  {
    "text": "better use of your",
    "start": "469120",
    "end": "471720"
  },
  {
    "text": "resources so Port buff it's Noble source",
    "start": "471720",
    "end": "474639"
  },
  {
    "text": "project that does the um data calization",
    "start": "474639",
    "end": "477479"
  },
  {
    "text": "there are two major parts in Pro buff",
    "start": "477479",
    "end": "479360"
  },
  {
    "text": "one is the prot file that is um uh",
    "start": "479360",
    "end": "482800"
  },
  {
    "text": "written that you write the IDL um",
    "start": "482800",
    "end": "485360"
  },
  {
    "text": "interface definition language to write a",
    "start": "485360",
    "end": "487319"
  },
  {
    "text": "contract between your client and server",
    "start": "487319",
    "end": "489240"
  },
  {
    "text": "and the second part is the protocy",
    "start": "489240",
    "end": "491000"
  },
  {
    "text": "compiler so the compiler um is written",
    "start": "491000",
    "end": "493560"
  },
  {
    "text": "C++ it has two major parts it generates",
    "start": "493560",
    "end": "496400"
  },
  {
    "text": "your code and it has major two parts one",
    "start": "496400",
    "end": "498479"
  },
  {
    "text": "is builtin the other is plugin the",
    "start": "498479",
    "end": "500759"
  },
  {
    "text": "protoc C compil uh builtin it natively",
    "start": "500759",
    "end": "503639"
  },
  {
    "text": "support generating different language um",
    "start": "503639",
    "end": "507199"
  },
  {
    "text": "um for runtime libraries like C+ Java go",
    "start": "507199",
    "end": "510680"
  },
  {
    "text": "Etc and the other uh plugin is an",
    "start": "510680",
    "end": "513399"
  },
  {
    "text": "extension to the protoc C compiler that",
    "start": "513399",
    "end": "516120"
  },
  {
    "text": "can pass and decorate your generated",
    "start": "516120",
    "end": "518360"
  },
  {
    "text": "code and internally in GPC we have a",
    "start": "518360",
    "end": "520680"
  },
  {
    "text": "custom like kind of a plugin that is how",
    "start": "520680",
    "end": "524080"
  },
  {
    "text": "like GPC will turn your Proto file into",
    "start": "524080",
    "end": "527040"
  },
  {
    "text": "the stops related things for you to",
    "start": "527040",
    "end": "528839"
  },
  {
    "text": "easily um run your",
    "start": "528839",
    "end": "532120"
  },
  {
    "text": "applications um those conent Li lectures",
    "start": "533120",
    "end": "536360"
  },
  {
    "text": "kind of boring so let's entertain I'll",
    "start": "536360",
    "end": "539240"
  },
  {
    "text": "eles by looking as some",
    "start": "539240",
    "end": "542600"
  },
  {
    "text": "code so the first assignment here you",
    "start": "542600",
    "end": "545320"
  },
  {
    "text": "see is that I created a channel object",
    "start": "545320",
    "end": "548720"
  },
  {
    "text": "Channel by using providing a Target",
    "start": "548720",
    "end": "550800"
  },
  {
    "text": "string the Target string is used for",
    "start": "550800",
    "end": "553040"
  },
  {
    "text": "name resolver um I also provide the",
    "start": "553040",
    "end": "555720"
  },
  {
    "text": "credentials I need here for Simplicity",
    "start": "555720",
    "end": "557680"
  },
  {
    "text": "for test is",
    "start": "557680",
    "end": "559320"
  },
  {
    "text": "insecure and then I will intercept",
    "start": "559320",
    "end": "562279"
  },
  {
    "text": "install Interceptor that will go through",
    "start": "562279",
    "end": "563920"
  },
  {
    "text": "the business Logic for every of your",
    "start": "563920",
    "end": "565920"
  },
  {
    "text": "rpcs um this is AP level concept and",
    "start": "565920",
    "end": "568880"
  },
  {
    "text": "then I will supply this uh Channel",
    "start": "568880",
    "end": "571279"
  },
  {
    "text": "towards the generic the code to return",
    "start": "571279",
    "end": "573600"
  },
  {
    "text": "as dub and then I will do a blocking",
    "start": "573600",
    "end": "576160"
  },
  {
    "text": "unit recall here so the block unit call",
    "start": "576160",
    "end": "578880"
  },
  {
    "text": "as stab will block your call until you",
    "start": "578880",
    "end": "581240"
  },
  {
    "text": "get a response so this um is quite",
    "start": "581240",
    "end": "583839"
  },
  {
    "text": "simple um actually under the knes JPC is",
    "start": "583839",
    "end": "587079"
  },
  {
    "text": "always asynchronous but the stop layer",
    "start": "587079",
    "end": "589760"
  },
  {
    "text": "gives you some sugar to do um unary",
    "start": "589760",
    "end": "592519"
  },
  {
    "text": "style or streaming style calls U for",
    "start": "592519",
    "end": "595279"
  },
  {
    "text": "example the next example is actually a",
    "start": "595279",
    "end": "597480"
  },
  {
    "text": "streaming call that you create a asyn",
    "start": "597480",
    "end": "600160"
  },
  {
    "text": "stop asynchronous stop this time and you",
    "start": "600160",
    "end": "602279"
  },
  {
    "text": "will provide a request to send out and",
    "start": "602279",
    "end": "605399"
  },
  {
    "text": "also a stream Observer so the stream",
    "start": "605399",
    "end": "607720"
  },
  {
    "text": "Observer is that you kind of provide a",
    "start": "607720",
    "end": "609880"
  },
  {
    "text": "call back for a gpcs to receive those",
    "start": "609880",
    "end": "613519"
  },
  {
    "text": "messages later on when it receives from",
    "start": "613519",
    "end": "615839"
  },
  {
    "text": "the server here the call back the JPC",
    "start": "615839",
    "end": "618760"
  },
  {
    "text": "will uh call your on next when it",
    "start": "618760",
    "end": "621399"
  },
  {
    "text": "receives response or call on complete",
    "start": "621399",
    "end": "624279"
  },
  {
    "text": "when the RPC finishes and a call on",
    "start": "624279",
    "end": "626640"
  },
  {
    "text": "error if there are ex exceptions",
    "start": "626640",
    "end": "631040"
  },
  {
    "start": "630000",
    "end": "845000"
  },
  {
    "text": "so now we have more",
    "start": "631760",
    "end": "634959"
  },
  {
    "text": "lectures so let's break down the client",
    "start": "636279",
    "end": "639000"
  },
  {
    "text": "part uh component the manager manager",
    "start": "639000",
    "end": "641680"
  },
  {
    "text": "Channel components um to have a better",
    "start": "641680",
    "end": "643920"
  },
  {
    "text": "view of the GPC",
    "start": "643920",
    "end": "646200"
  },
  {
    "text": "architecture",
    "start": "646200",
    "end": "647760"
  },
  {
    "text": "um here as you uh remember from the code",
    "start": "647760",
    "end": "651079"
  },
  {
    "text": "Snips we just constructed a channel",
    "start": "651079",
    "end": "654880"
  },
  {
    "text": "from oops from Target streen and this",
    "start": "654880",
    "end": "657920"
  },
  {
    "text": "target streen actually it looks Pro",
    "start": "657920",
    "end": "660079"
  },
  {
    "text": "probably very familiar to you um to give",
    "start": "660079",
    "end": "662440"
  },
  {
    "text": "you refresh it the URI stand URI the",
    "start": "662440",
    "end": "665360"
  },
  {
    "text": "syntax is it has a schema like htps and",
    "start": "665360",
    "end": "669560"
  },
  {
    "text": "then colon double Authority SL pass and",
    "start": "669560",
    "end": "673320"
  },
  {
    "text": "grpc follows this standard however it",
    "start": "673320",
    "end": "676240"
  },
  {
    "text": "has its own interpretation of what it",
    "start": "676240",
    "end": "678600"
  },
  {
    "text": "the target UI",
    "start": "678600",
    "end": "679839"
  },
  {
    "text": "means and the uh schema for example is",
    "start": "679839",
    "end": "683360"
  },
  {
    "text": "actually specifies the name resol to use",
    "start": "683360",
    "end": "686040"
  },
  {
    "text": "and internally JPC it has a map between",
    "start": "686040",
    "end": "688760"
  },
  {
    "text": "um the den the name resol name and the",
    "start": "688760",
    "end": "691959"
  },
  {
    "text": "instant the provider of it and when you",
    "start": "691959",
    "end": "694480"
  },
  {
    "text": "spe specify it when you are creating the",
    "start": "694480",
    "end": "696720"
  },
  {
    "text": "CH the channel JY will plug in that La",
    "start": "696720",
    "end": "699680"
  },
  {
    "text": "for you so that is how JY make your name",
    "start": "699680",
    "end": "702440"
  },
  {
    "text": "res",
    "start": "702440",
    "end": "703519"
  },
  {
    "text": "pluggable while the authority and pass",
    "start": "703519",
    "end": "706120"
  },
  {
    "text": "part U may have different meanings",
    "start": "706120",
    "end": "707880"
  },
  {
    "text": "depending on what the the particular",
    "start": "707880",
    "end": "710639"
  },
  {
    "text": "name solver is for example in a DNS name",
    "start": "710639",
    "end": "713839"
  },
  {
    "text": "solver which is by default one it will",
    "start": "713839",
    "end": "716360"
  },
  {
    "text": "be a DNS server that you Communicator",
    "start": "716360",
    "end": "719360"
  },
  {
    "text": "ways to resolve the um host names that",
    "start": "719360",
    "end": "722320"
  },
  {
    "text": "you can connect it to as a back end and",
    "start": "722320",
    "end": "724920"
  },
  {
    "text": "when for example the schema is an XDS",
    "start": "724920",
    "end": "727079"
  },
  {
    "text": "then it's complete different the um",
    "start": "727079",
    "end": "729880"
  },
  {
    "text": "author part can be the control plane um",
    "start": "729880",
    "end": "732920"
  },
  {
    "text": "so todr XDS is a gigantic name resolver",
    "start": "732920",
    "end": "736160"
  },
  {
    "text": "and load",
    "start": "736160",
    "end": "738519"
  },
  {
    "text": "balancer so um the next component is",
    "start": "740720",
    "end": "745079"
  },
  {
    "text": "that um the result of name resolver so",
    "start": "745079",
    "end": "747480"
  },
  {
    "text": "traditionally when use a UR you are",
    "start": "747480",
    "end": "749160"
  },
  {
    "text": "trying to discover results right and the",
    "start": "749160",
    "end": "751040"
  },
  {
    "text": "result in the point of view of grpc um",
    "start": "751040",
    "end": "754199"
  },
  {
    "text": "is actually resolved to address and",
    "start": "754199",
    "end": "757000"
  },
  {
    "text": "service config service config can be a",
    "start": "757000",
    "end": "758800"
  },
  {
    "text": "very powerful illustration map and um uh",
    "start": "758800",
    "end": "762480"
  },
  {
    "text": "the most important part maybe in service",
    "start": "762480",
    "end": "764480"
  },
  {
    "text": "config is that it specifies which low",
    "start": "764480",
    "end": "766399"
  },
  {
    "text": "balancer you use and that is also how JC",
    "start": "766399",
    "end": "769160"
  },
  {
    "text": "JPC make the low balancer pluggable",
    "start": "769160",
    "end": "772040"
  },
  {
    "text": "there's an internal map between the name",
    "start": "772040",
    "end": "773839"
  },
  {
    "text": "of the low balancer and then the",
    "start": "773839",
    "end": "775240"
  },
  {
    "text": "instance of it and when we receive a",
    "start": "775240",
    "end": "777800"
  },
  {
    "text": "service config specify which name which",
    "start": "777800",
    "end": "780839"
  },
  {
    "text": "the low balanc to use it will just plug",
    "start": "780839",
    "end": "782639"
  },
  {
    "text": "in to do um its um client side low",
    "start": "782639",
    "end": "787160"
  },
  {
    "text": "balancing and uh the low balancer",
    "start": "787160",
    "end": "789920"
  },
  {
    "text": "manages connections actually we call",
    "start": "789920",
    "end": "792680"
  },
  {
    "text": "channels here",
    "start": "792680",
    "end": "795760"
  },
  {
    "text": "um to decouple the different system",
    "start": "795760",
    "end": "798800"
  },
  {
    "text": "together actually um the L balancer will",
    "start": "798800",
    "end": "802079"
  },
  {
    "text": "return a picker to the channel and then",
    "start": "802079",
    "end": "804399"
  },
  {
    "text": "when there's an RPC the channel will",
    "start": "804399",
    "end": "806480"
  },
  {
    "text": "decide which um transport which which",
    "start": "806480",
    "end": "809440"
  },
  {
    "text": "Super channel to connect to by calling",
    "start": "809440",
    "end": "811360"
  },
  {
    "text": "picker. pick um so this is kind of the",
    "start": "811360",
    "end": "814440"
  },
  {
    "text": "architecture of how things is",
    "start": "814440",
    "end": "816880"
  },
  {
    "text": "happening the S channel is conceptually",
    "start": "816880",
    "end": "819560"
  },
  {
    "text": "the htb2 connection but we can talk",
    "start": "819560",
    "end": "823399"
  },
  {
    "text": "more the silver side um as compared to",
    "start": "824639",
    "end": "827600"
  },
  {
    "text": "the client side is the sner there are",
    "start": "827600",
    "end": "829279"
  },
  {
    "text": "two type of sockets um the listening",
    "start": "829279",
    "end": "832360"
  },
  {
    "text": "socket is always waiting for connection",
    "start": "832360",
    "end": "834240"
  },
  {
    "text": "and then once it is accepted it will",
    "start": "834240",
    "end": "836120"
  },
  {
    "text": "quickly hand over create another socket",
    "start": "836120",
    "end": "838279"
  },
  {
    "text": "child socket to do the real connection",
    "start": "838279",
    "end": "840680"
  },
  {
    "text": "and this connection is what the client",
    "start": "840680",
    "end": "842839"
  },
  {
    "text": "at L balancer creates and manages",
    "start": "842839",
    "end": "846680"
  },
  {
    "start": "845000",
    "end": "1175000"
  },
  {
    "text": "to so we mentioned that grpc is built on",
    "start": "847399",
    "end": "850399"
  },
  {
    "text": "http2 that is important and uh um I",
    "start": "850399",
    "end": "853720"
  },
  {
    "text": "think it's worthwhile to have an",
    "start": "853720",
    "end": "855480"
  },
  {
    "text": "overview of the mapping between hp2",
    "start": "855480",
    "end": "857959"
  },
  {
    "text": "concept and GPC because I think it's",
    "start": "857959",
    "end": "860399"
  },
  {
    "text": "helpful when you're running your",
    "start": "860399",
    "end": "861720"
  },
  {
    "text": "application and doing some debugs and",
    "start": "861720",
    "end": "863920"
  },
  {
    "text": "crpc um level of failures or you are",
    "start": "863920",
    "end": "866600"
  },
  {
    "text": "adopting some new features of grpc",
    "start": "866600",
    "end": "869880"
  },
  {
    "text": "um so we mentioned that channel JC",
    "start": "869880",
    "end": "872360"
  },
  {
    "text": "Channel manages bunch of sub panels that",
    "start": "872360",
    "end": "875120"
  },
  {
    "text": "conceptually is a hb2 trans uh htb2",
    "start": "875120",
    "end": "879040"
  },
  {
    "text": "connection and then when we're doing",
    "start": "879040",
    "end": "880839"
  },
  {
    "text": "rpcs we actually schedule those rpcs on",
    "start": "880839",
    "end": "883759"
  },
  {
    "text": "those um connections and just as the",
    "start": "883759",
    "end": "886440"
  },
  {
    "text": "mapping between a super channel to a",
    "start": "886440",
    "end": "889519"
  },
  {
    "text": "connection um here an IPC is mapped to a",
    "start": "889519",
    "end": "893399"
  },
  {
    "text": "stream at the um hg2 world of",
    "start": "893399",
    "end": "897680"
  },
  {
    "text": "concept um in hb2 a connection can have",
    "start": "897680",
    "end": "900600"
  },
  {
    "text": "multiple streams and those streams are",
    "start": "900600",
    "end": "903800"
  },
  {
    "text": "um delivered onto different",
    "start": "903800",
    "end": "906120"
  },
  {
    "text": "frames and J PC wraps itself onto those",
    "start": "906120",
    "end": "909880"
  },
  {
    "text": "frames um visually it's like",
    "start": "909880",
    "end": "914040"
  },
  {
    "text": "this so um when the J client sent",
    "start": "914720",
    "end": "918000"
  },
  {
    "text": "message to server it um um has headers",
    "start": "918000",
    "end": "921320"
  },
  {
    "text": "and payload right here for Simplicity we",
    "start": "921320",
    "end": "923320"
  },
  {
    "text": "only include dat um header and data",
    "start": "923320",
    "end": "926199"
  },
  {
    "text": "frames so what happens is that JPC will",
    "start": "926199",
    "end": "930040"
  },
  {
    "text": "um send it metadata over the hb2 um",
    "start": "930040",
    "end": "933120"
  },
  {
    "text": "header and continuous frames um the",
    "start": "933120",
    "end": "935959"
  },
  {
    "text": "header part JC will com combine your",
    "start": "935959",
    "end": "938240"
  },
  {
    "text": "applications header to and together with",
    "start": "938240",
    "end": "940399"
  },
  {
    "text": "jpc's headers and S together for example",
    "start": "940399",
    "end": "943279"
  },
  {
    "text": "the path um header in hb2 is actually",
    "start": "943279",
    "end": "946639"
  },
  {
    "text": "corresponds to the server's name and",
    "start": "946639",
    "end": "949440"
  },
  {
    "text": "Method name in",
    "start": "949440",
    "end": "952120"
  },
  {
    "text": "JPC so the payload are delivered in hb2",
    "start": "952120",
    "end": "955759"
  },
  {
    "text": "data frames the data frames has its own",
    "start": "955759",
    "end": "958920"
  },
  {
    "text": "um like fields for like lens flags and",
    "start": "958920",
    "end": "962639"
  },
  {
    "text": "payload um GPC wraps itself in this um",
    "start": "962639",
    "end": "966759"
  },
  {
    "text": "attribute to dat data frames and has its",
    "start": "966759",
    "end": "968800"
  },
  {
    "text": "own syntax here it has the um com",
    "start": "968800",
    "end": "972519"
  },
  {
    "text": "compressed flock the message lens and",
    "start": "972519",
    "end": "974839"
  },
  {
    "text": "also the message itself uh to be clear",
    "start": "974839",
    "end": "977680"
  },
  {
    "text": "there's no strict relation in terms of",
    "start": "977680",
    "end": "979959"
  },
  {
    "text": "the boundaries of these two type of",
    "start": "979959",
    "end": "981600"
  },
  {
    "text": "things so the JC will handle",
    "start": "981600",
    "end": "984279"
  },
  {
    "text": "that and finally when the request ends",
    "start": "984279",
    "end": "987440"
  },
  {
    "text": "we will send a dat frame also with a",
    "start": "987440",
    "end": "989959"
  },
  {
    "text": "flag set the end of stream flag set",
    "start": "989959",
    "end": "992079"
  },
  {
    "text": "indicate that stream is",
    "start": "992079",
    "end": "995000"
  },
  {
    "text": "over um in silver side is similarly we",
    "start": "995440",
    "end": "998120"
  },
  {
    "text": "use um hb2 frames to Comm the responses",
    "start": "998120",
    "end": "1001600"
  },
  {
    "text": "and a little bit difference is that in",
    "start": "1001600",
    "end": "1003800"
  },
  {
    "text": "the response side you have um head",
    "start": "1003800",
    "end": "1006839"
  },
  {
    "text": "response header and trailer",
    "start": "1006839",
    "end": "1008839"
  },
  {
    "text": "metadatas um plus the response data in",
    "start": "1008839",
    "end": "1013240"
  },
  {
    "text": "between and normally we have both head",
    "start": "1013240",
    "end": "1015720"
  },
  {
    "text": "and trailer but all trailer only",
    "start": "1015720",
    "end": "1017560"
  },
  {
    "text": "metadata tiller medata only messages are",
    "start": "1017560",
    "end": "1020360"
  },
  {
    "text": "available U permitted actually if um say",
    "start": "1020360",
    "end": "1024079"
  },
  {
    "text": "you want to immediately close RPC with",
    "start": "1024079",
    "end": "1027000"
  },
  {
    "text": "only the status code and in the trailer",
    "start": "1027000",
    "end": "1030520"
  },
  {
    "text": "metadata we will include the GPC status",
    "start": "1030520",
    "end": "1033280"
  },
  {
    "text": "there which is a a protocol it is must",
    "start": "1033280",
    "end": "1036520"
  },
  {
    "text": "and as for the mapping between htb2 um",
    "start": "1036520",
    "end": "1040240"
  },
  {
    "text": "status code and jpcs we can find in this",
    "start": "1040240",
    "end": "1043360"
  },
  {
    "text": "um um short link in in the bottom",
    "start": "1043360",
    "end": "1047400"
  },
  {
    "text": "right",
    "start": "1047400",
    "end": "1049200"
  },
  {
    "text": "um that actually concludes my overview",
    "start": "1049200",
    "end": "1051520"
  },
  {
    "text": "of JPC there are some useful links here",
    "start": "1051520",
    "end": "1054520"
  },
  {
    "text": "highly recommend the uh YouTube channels",
    "start": "1054520",
    "end": "1056640"
  },
  {
    "text": "there some recent interesting stuff",
    "start": "1056640",
    "end": "1058840"
  },
  {
    "text": "there um yeah thank you",
    "start": "1058840",
    "end": "1063480"
  },
  {
    "text": "everyone does anyone have any questions",
    "start": "1067240",
    "end": "1069559"
  },
  {
    "text": "for IV",
    "start": "1069559",
    "end": "1073320"
  },
  {
    "text": "yeah um this one yeah this so we have",
    "start": "1077400",
    "end": "1083400"
  },
  {
    "text": "resolver let's assume that I'm using",
    "start": "1083400",
    "end": "1087240"
  },
  {
    "text": "XTS",
    "start": "1087240",
    "end": "1088799"
  },
  {
    "text": "now",
    "start": "1088799",
    "end": "1090320"
  },
  {
    "text": "the is to",
    "start": "1090320",
    "end": "1093559"
  },
  {
    "text": "have ex you have multiple parts",
    "start": "1093559",
    "end": "1097760"
  },
  {
    "text": "from",
    "start": "1097760",
    "end": "1099280"
  },
  {
    "text": "so and and each part has own Services BL",
    "start": "1099280",
    "end": "1104080"
  },
  {
    "text": "nowain resolver is it going to have all",
    "start": "1104080",
    "end": "1108120"
  },
  {
    "text": "the",
    "start": "1108120",
    "end": "1108919"
  },
  {
    "text": "connector the",
    "start": "1108919",
    "end": "1111600"
  },
  {
    "text": "site um like like",
    "start": "1111600",
    "end": "1115400"
  },
  {
    "text": "the keeping all the client all the",
    "start": "1115400",
    "end": "1118320"
  },
  {
    "text": "server",
    "start": "1118320",
    "end": "1119320"
  },
  {
    "text": "Connections in the client site so that",
    "start": "1119320",
    "end": "1121679"
  },
  {
    "text": "any request comes and passes",
    "start": "1121679",
    "end": "1124360"
  },
  {
    "text": "through at sometime load balance sites",
    "start": "1124360",
    "end": "1127919"
  },
  {
    "text": "or is it making only one con oh that's",
    "start": "1127919",
    "end": "1131000"
  },
  {
    "text": "really this really depends on your",
    "start": "1131000",
    "end": "1132640"
  },
  {
    "text": "algorithm in um low balancer so for",
    "start": "1132640",
    "end": "1135480"
  },
  {
    "text": "example in JPC there are some buil-in",
    "start": "1135480",
    "end": "1137039"
  },
  {
    "text": "low balancers like pick first uh even",
    "start": "1137039",
    "end": "1139679"
  },
  {
    "text": "though there are many back ends it's",
    "start": "1139679",
    "end": "1141440"
  },
  {
    "text": "only used the first usable one usable",
    "start": "1141440",
    "end": "1143919"
  },
  {
    "text": "one and if it is R robbing that it will",
    "start": "1143919",
    "end": "1146799"
  },
  {
    "text": "connect make all of the connections and",
    "start": "1146799",
    "end": "1148720"
  },
  {
    "text": "then select one by onean all of the",
    "start": "1148720",
    "end": "1151520"
  },
  {
    "text": "servers so there Parts running it makes",
    "start": "1151520",
    "end": "1155080"
  },
  {
    "text": "connection to all under Parts uh I",
    "start": "1155080",
    "end": "1158960"
  },
  {
    "text": "believe so it keeps the connection open",
    "start": "1158960",
    "end": "1161679"
  },
  {
    "text": "um if yeah if if that is your name what",
    "start": "1161679",
    "end": "1164480"
  },
  {
    "text": "your name is what your low balancer does",
    "start": "1164480",
    "end": "1167480"
  },
  {
    "text": "um sometimes it does this so JPC",
    "start": "1167480",
    "end": "1169559"
  },
  {
    "text": "sometimes in high scalable systems there",
    "start": "1169559",
    "end": "1171520"
  },
  {
    "text": "are thousands of connections open is",
    "start": "1171520",
    "end": "1174320"
  },
  {
    "text": "possible yeah",
    "start": "1174320",
    "end": "1177840"
  }
]