[
  {
    "text": "hey everybody I'ma I'm a software",
    "start": "40",
    "end": "2399"
  },
  {
    "text": "engineer at aviatrix and an undergrad at",
    "start": "2399",
    "end": "4720"
  },
  {
    "text": "UI I'm K Le I'm a PhD student at U and",
    "start": "4720",
    "end": "8599"
  },
  {
    "text": "we're presenting our system that",
    "start": "8599",
    "end": "10240"
  },
  {
    "text": "optimizes latency and cost in service",
    "start": "10240",
    "end": "12519"
  },
  {
    "text": "meeses called",
    "start": "12519",
    "end": "15520"
  },
  {
    "text": "slate so um a bit of an introduction to",
    "start": "15520",
    "end": "18359"
  },
  {
    "text": "the problem um when you have multiple",
    "start": "18359",
    "end": "20279"
  },
  {
    "text": "clusters that are spread across multiple",
    "start": "20279",
    "end": "22720"
  },
  {
    "text": "regions um the load between them uh can",
    "start": "22720",
    "end": "26279"
  },
  {
    "text": "fluctuate pretty drastically so um some",
    "start": "26279",
    "end": "28800"
  },
  {
    "text": "clusters might experience High load",
    "start": "28800",
    "end": "30840"
  },
  {
    "text": "sometimes in the day sometimes",
    "start": "30840",
    "end": "32439"
  },
  {
    "text": "relatively really low load and this um",
    "start": "32439",
    "end": "35160"
  },
  {
    "text": "and so the autoscaler takes care of",
    "start": "35160",
    "end": "37000"
  },
  {
    "text": "these load and balances but uh within",
    "start": "37000",
    "end": "39440"
  },
  {
    "text": "usually within the span of minutes um",
    "start": "39440",
    "end": "42360"
  },
  {
    "text": "and so we can kind of see that when",
    "start": "42360",
    "end": "45320"
  },
  {
    "text": "cluster East might be super overloaded",
    "start": "45320",
    "end": "47079"
  },
  {
    "text": "and Cluster West is not and other times",
    "start": "47079",
    "end": "49440"
  },
  {
    "text": "when the opposite is true um and so",
    "start": "49440",
    "end": "54000"
  },
  {
    "text": "actually understanding and um optimizing",
    "start": "54000",
    "end": "57160"
  },
  {
    "text": "latency in these scenarios is hard",
    "start": "57160",
    "end": "60680"
  },
  {
    "text": "the other problem that we're intending",
    "start": "60680",
    "end": "62640"
  },
  {
    "text": "to solve is um uh egress cost",
    "start": "62640",
    "end": "65799"
  },
  {
    "text": "optimization so in topologies in some",
    "start": "65799",
    "end": "68680"
  },
  {
    "text": "topologies uh calls to a remote cluster",
    "start": "68680",
    "end": "71159"
  },
  {
    "text": "or database are inevitable um where the",
    "start": "71159",
    "end": "74680"
  },
  {
    "text": "call has to be made over um to another",
    "start": "74680",
    "end": "77240"
  },
  {
    "text": "region or another cluster um when you're",
    "start": "77240",
    "end": "79439"
  },
  {
    "text": "making these calls you usually want to",
    "start": "79439",
    "end": "80920"
  },
  {
    "text": "make them with less data because um the",
    "start": "80920",
    "end": "84000"
  },
  {
    "text": "data is traveling a um over a long",
    "start": "84000",
    "end": "86520"
  },
  {
    "text": "distance and Cloud providers usually",
    "start": "86520",
    "end": "88880"
  },
  {
    "text": "charge for data out is called ESS fees",
    "start": "88880",
    "end": "92200"
  },
  {
    "text": "um and so we can maybe see in this",
    "start": "92200",
    "end": "94479"
  },
  {
    "text": "scenario where we have two clusters um",
    "start": "94479",
    "end": "97240"
  },
  {
    "text": "Gateway front end uh and a metric MP",
    "start": "97240",
    "end": "100159"
  },
  {
    "text": "which is a processor service and MP",
    "start": "100159",
    "end": "102280"
  },
  {
    "text": "calls DB so the call tree is very simple",
    "start": "102280",
    "end": "104719"
  },
  {
    "text": "but for some reason the database in US",
    "start": "104719",
    "end": "106880"
  },
  {
    "text": "West is unavailable this might happen",
    "start": "106880",
    "end": "108759"
  },
  {
    "text": "because of gdpr data regulations or the",
    "start": "108759",
    "end": "111640"
  },
  {
    "text": "database is just simply down um things",
    "start": "111640",
    "end": "113640"
  },
  {
    "text": "like that and so in this case the call",
    "start": "113640",
    "end": "116799"
  },
  {
    "text": "path conventionally with locality load",
    "start": "116799",
    "end": "118880"
  },
  {
    "text": "balancing would be the red path where it",
    "start": "118880",
    "end": "120799"
  },
  {
    "text": "goes to front end metrix processor and",
    "start": "120799",
    "end": "122759"
  },
  {
    "text": "then the database um however the very",
    "start": "122759",
    "end": "126680"
  },
  {
    "text": "and here the size of the arrow",
    "start": "126680",
    "end": "127880"
  },
  {
    "text": "represents how much data is being sent",
    "start": "127880",
    "end": "129720"
  },
  {
    "text": "with that call um the issue is that",
    "start": "129720",
    "end": "132000"
  },
  {
    "text": "we're taking um a very large amount of",
    "start": "132000",
    "end": "135040"
  },
  {
    "text": "data over clusters which usually results",
    "start": "135040",
    "end": "137959"
  },
  {
    "text": "in a lot of egress fees and a lot of",
    "start": "137959",
    "end": "139760"
  },
  {
    "text": "latency um so and actually an optimal",
    "start": "139760",
    "end": "142760"
  },
  {
    "text": "path for this call tree would be front",
    "start": "142760",
    "end": "145160"
  },
  {
    "text": "end to met to MP in the US East and then",
    "start": "145160",
    "end": "148239"
  },
  {
    "text": "to dat database so you make the large",
    "start": "148239",
    "end": "150040"
  },
  {
    "text": "call locally um preserving uh so you",
    "start": "150040",
    "end": "153200"
  },
  {
    "text": "don't spend that much on egress and all",
    "start": "153200",
    "end": "154800"
  },
  {
    "text": "that so our two baselines here are",
    "start": "154800",
    "end": "157239"
  },
  {
    "text": "multicluster load balancing where you",
    "start": "157239",
    "end": "158680"
  },
  {
    "text": "just distribute requests between",
    "start": "158680",
    "end": "159959"
  },
  {
    "text": "clusters evenly round robin and then we",
    "start": "159959",
    "end": "162360"
  },
  {
    "text": "have a locality aware which we try to",
    "start": "162360",
    "end": "164080"
  },
  {
    "text": "keep it local which is the red path uh",
    "start": "164080",
    "end": "166319"
  },
  {
    "text": "and then we have our system and we uh we",
    "start": "166319",
    "end": "169760"
  },
  {
    "text": "improve the bandwidth expenditure a lot",
    "start": "169760",
    "end": "172200"
  },
  {
    "text": "and also the uh average latency um for",
    "start": "172200",
    "end": "175319"
  },
  {
    "text": "this",
    "start": "175319",
    "end": "176239"
  },
  {
    "text": "scenario and so our system uh is a",
    "start": "176239",
    "end": "179000"
  },
  {
    "text": "system that basically um adapts to the",
    "start": "179000",
    "end": "181239"
  },
  {
    "text": "current load conditions um and optimally",
    "start": "181239",
    "end": "184280"
  },
  {
    "text": "partitions uh traffic between clusters",
    "start": "184280",
    "end": "186360"
  },
  {
    "text": "in a way um that we that results in the",
    "start": "186360",
    "end": "189440"
  },
  {
    "text": "lowest predicted",
    "start": "189440",
    "end": "191200"
  },
  {
    "text": "latency um so to go over the system",
    "start": "191200",
    "end": "193519"
  },
  {
    "text": "architecture a bit um here's our system",
    "start": "193519",
    "end": "196840"
  },
  {
    "text": "architecture we have this is a",
    "start": "196840",
    "end": "198400"
  },
  {
    "text": "multicluster uh scenario running you",
    "start": "198400",
    "end": "200599"
  },
  {
    "text": "have Ingress gateways East West gateways",
    "start": "200599",
    "end": "203560"
  },
  {
    "text": "um and essentially we have web assembly",
    "start": "203560",
    "end": "206480"
  },
  {
    "text": "plugins that are installed on every side",
    "start": "206480",
    "end": "208560"
  },
  {
    "text": "car that's dream their current load in",
    "start": "208560",
    "end": "211680"
  },
  {
    "text": "the form of like request per second and",
    "start": "211680",
    "end": "214040"
  },
  {
    "text": "um latency where they they trace certain",
    "start": "214040",
    "end": "216360"
  },
  {
    "text": "requests that are all agreed upon by a",
    "start": "216360",
    "end": "219239"
  },
  {
    "text": "certain like hash of the um Trace ID and",
    "start": "219239",
    "end": "223360"
  },
  {
    "text": "um this is configurable and um the load",
    "start": "223360",
    "end": "225840"
  },
  {
    "text": "and latency is streamed to the cluster",
    "start": "225840",
    "end": "227439"
  },
  {
    "text": "controller um the cluster controller",
    "start": "227439",
    "end": "229640"
  },
  {
    "text": "Aggregates all these service level",
    "start": "229640",
    "end": "231120"
  },
  {
    "text": "metrics and then um streams all these",
    "start": "231120",
    "end": "233799"
  },
  {
    "text": "metrics to the global controller um",
    "start": "233799",
    "end": "236120"
  },
  {
    "text": "where the global controller um has",
    "start": "236120",
    "end": "238239"
  },
  {
    "text": "basically a God's view of",
    "start": "238239",
    "end": "240200"
  },
  {
    "text": "every cluster the load of every service",
    "start": "240200",
    "end": "242439"
  },
  {
    "text": "in every cluster and the latency it's",
    "start": "242439",
    "end": "244200"
  },
  {
    "text": "incurring right now um Additionally the",
    "start": "244200",
    "end": "247159"
  },
  {
    "text": "cluster controllers routinely perform",
    "start": "247159",
    "end": "249000"
  },
  {
    "text": "pings between um between themselves",
    "start": "249000",
    "end": "252280"
  },
  {
    "text": "between like so it goes through the East",
    "start": "252280",
    "end": "253519"
  },
  {
    "text": "West Gateway and this essentially allows",
    "start": "253519",
    "end": "255319"
  },
  {
    "text": "us to gauge like how much time uh what",
    "start": "255319",
    "end": "258280"
  },
  {
    "text": "the network conditions are between",
    "start": "258280",
    "end": "260199"
  },
  {
    "text": "clusters um because you could be",
    "start": "260199",
    "end": "262000"
  },
  {
    "text": "traversing the public internet um so",
    "start": "262000",
    "end": "264919"
  },
  {
    "text": "with all these calculations our Global",
    "start": "264919",
    "end": "266960"
  },
  {
    "text": "controller will try to optimize latency",
    "start": "266960",
    "end": "269880"
  },
  {
    "text": "um and by by pushing out rules for um",
    "start": "269880",
    "end": "274240"
  },
  {
    "text": "what the optimal partitioning",
    "start": "274240",
    "end": "276280"
  },
  {
    "text": "is so uh to delve into our sidec car a",
    "start": "276280",
    "end": "279440"
  },
  {
    "text": "bit into our web plugin um our web",
    "start": "279440",
    "end": "282639"
  },
  {
    "text": "plugin is basically an HTTP filter um",
    "start": "282639",
    "end": "285360"
  },
  {
    "text": "that uses the proxy wasm Avi um and it",
    "start": "285360",
    "end": "288800"
  },
  {
    "text": "it essentially reports every second or a",
    "start": "288800",
    "end": "291520"
  },
  {
    "text": "few seconds the uh current load and the",
    "start": "291520",
    "end": "294199"
  },
  {
    "text": "latency of every Trace request and we",
    "start": "294199",
    "end": "296560"
  },
  {
    "text": "use Jager headers to figure out what",
    "start": "296560",
    "end": "298199"
  },
  {
    "text": "we're tracing and um what the parents of",
    "start": "298199",
    "end": "301000"
  },
  {
    "text": "what um of the current uh request Trace",
    "start": "301000",
    "end": "303880"
  },
  {
    "text": "request are and um all of this allows",
    "start": "303880",
    "end": "307160"
  },
  {
    "text": "you to run these uh run this extension",
    "start": "307160",
    "end": "309720"
  },
  {
    "text": "without having to recompile Envoy which",
    "start": "309720",
    "end": "311680"
  },
  {
    "text": "is really nice we also have a cluster",
    "start": "311680",
    "end": "313520"
  },
  {
    "text": "controller um which rece which",
    "start": "313520",
    "end": "315759"
  },
  {
    "text": "Aggregates all these metrics um and",
    "start": "315759",
    "end": "317840"
  },
  {
    "text": "serves as a relay to the global",
    "start": "317840",
    "end": "319440"
  },
  {
    "text": "controller um the cluster controller",
    "start": "319440",
    "end": "322360"
  },
  {
    "text": "also um enforces the policy given by the",
    "start": "322360",
    "end": "325639"
  },
  {
    "text": "global controller um and by like editing",
    "start": "325639",
    "end": "328440"
  },
  {
    "text": "virtual services um to enforce the",
    "start": "328440",
    "end": "331759"
  },
  {
    "text": "policy um it also does intercluster",
    "start": "331759",
    "end": "333880"
  },
  {
    "text": "pings again what we're talking about and",
    "start": "333880",
    "end": "336000"
  },
  {
    "text": "in the glal controller to calculate the",
    "start": "336000",
    "end": "339039"
  },
  {
    "text": "the optimal latency routing rule we use",
    "start": "339039",
    "end": "341880"
  },
  {
    "text": "linear programming technique which is",
    "start": "341880",
    "end": "344360"
  },
  {
    "text": "mathematically um optimize the the",
    "start": "344360",
    "end": "347759"
  },
  {
    "text": "latency to minimize",
    "start": "347759",
    "end": "349560"
  },
  {
    "text": "it and in this example we're going to",
    "start": "349560",
    "end": "352720"
  },
  {
    "text": "use booking application um this is a",
    "start": "352720",
    "end": "355639"
  },
  {
    "text": "intermediate representation in slate",
    "start": "355639",
    "end": "357840"
  },
  {
    "text": "Optimizer in this setup we have two",
    "start": "357840",
    "end": "360280"
  },
  {
    "text": "cluster which is yellow and red and the",
    "start": "360280",
    "end": "365039"
  },
  {
    "text": "edges represent the flow of requests and",
    "start": "365039",
    "end": "367880"
  },
  {
    "text": "numbers on addes represent the number of",
    "start": "367880",
    "end": "370199"
  },
  {
    "text": "requests that flow from source to",
    "start": "370199",
    "end": "373160"
  },
  {
    "text": "destination um here you can see there",
    "start": "373160",
    "end": "375479"
  },
  {
    "text": "are product page service there are",
    "start": "375479",
    "end": "378319"
  },
  {
    "text": "Detail Service there are review service",
    "start": "378319",
    "end": "380960"
  },
  {
    "text": "and rating services and if there is if",
    "start": "380960",
    "end": "385680"
  },
  {
    "text": "there we have like almost equal load in",
    "start": "385680",
    "end": "388639"
  },
  {
    "text": "each cluster",
    "start": "388639",
    "end": "389919"
  },
  {
    "text": "there's no reason to reroute the request",
    "start": "389919",
    "end": "392520"
  },
  {
    "text": "from local cluster to remote CL clusters",
    "start": "392520",
    "end": "396080"
  },
  {
    "text": "and this is like idea situation and most",
    "start": "396080",
    "end": "398800"
  },
  {
    "text": "of production multic cluster I guess",
    "start": "398800",
    "end": "401880"
  },
  {
    "text": "they assume that um this is the the the",
    "start": "401880",
    "end": "404960"
  },
  {
    "text": "most common case so no cross cross",
    "start": "404960",
    "end": "407639"
  },
  {
    "text": "cluster routing but what if there's like",
    "start": "407639",
    "end": "410199"
  },
  {
    "text": "severe load imbalance in different",
    "start": "410199",
    "end": "412840"
  },
  {
    "text": "clusters here we have we see a 100",
    "start": "412840",
    "end": "415479"
  },
  {
    "text": "number of requests per second to Yellow",
    "start": "415479",
    "end": "418240"
  },
  {
    "text": "cluster and a, number of requests to Red",
    "start": "418240",
    "end": "421199"
  },
  {
    "text": "clusters um if the red cluster doesn't",
    "start": "421199",
    "end": "425080"
  },
  {
    "text": "have enough resource to to process these",
    "start": "425080",
    "end": "427879"
  },
  {
    "text": "a thousand number of request then what",
    "start": "427879",
    "end": "429919"
  },
  {
    "text": "we want to do is pay for the network",
    "start": "429919",
    "end": "433199"
  },
  {
    "text": "latency and send some of the requests to",
    "start": "433199",
    "end": "436440"
  },
  {
    "text": "the v um on the loaded cluster which is",
    "start": "436440",
    "end": "438960"
  },
  {
    "text": "yellow here to minimize the latency of",
    "start": "438960",
    "end": "441800"
  },
  {
    "text": "each request however if you just stick",
    "start": "441800",
    "end": "444440"
  },
  {
    "text": "to the local routing policy you will not",
    "start": "444440",
    "end": "447360"
  },
  {
    "text": "do",
    "start": "447360",
    "end": "448319"
  },
  {
    "text": "it um in our um system slate um the",
    "start": "448319",
    "end": "453440"
  },
  {
    "text": "linear programming will digest the load",
    "start": "453440",
    "end": "456840"
  },
  {
    "text": "to latency relationship um reported by",
    "start": "456840",
    "end": "460160"
  },
  {
    "text": "sard through the cluster",
    "start": "460160",
    "end": "463240"
  },
  {
    "text": "controller and run this polinomial",
    "start": "463240",
    "end": "465919"
  },
  {
    "text": "function to predict the latency based on",
    "start": "465919",
    "end": "469919"
  },
  {
    "text": "the given load and we're going to model",
    "start": "469919",
    "end": "474159"
  },
  {
    "text": "um the low to latency model for each",
    "start": "474159",
    "end": "477199"
  },
  {
    "text": "every service individually so that we",
    "start": "477199",
    "end": "479599"
  },
  {
    "text": "can um predict uh with high",
    "start": "479599",
    "end": "482680"
  },
  {
    "text": "accuracy now um by running this inine",
    "start": "482680",
    "end": "487080"
  },
  {
    "text": "programming model we see here from P",
    "start": "487080",
    "end": "490680"
  },
  {
    "text": "page in yellow red cluster we want to",
    "start": "490680",
    "end": "494840"
  },
  {
    "text": "reroute roughly um",
    "start": "494840",
    "end": "497720"
  },
  {
    "text": "25% of the request to the remote",
    "start": "497720",
    "end": "501280"
  },
  {
    "text": "clusters the review service in remote",
    "start": "501280",
    "end": "503720"
  },
  {
    "text": "clusters because these services are",
    "start": "503720",
    "end": "505879"
  },
  {
    "text": "overloaded and you think that this model",
    "start": "505879",
    "end": "508680"
  },
  {
    "text": "calculate that that this will be the the",
    "start": "508680",
    "end": "512000"
  },
  {
    "text": "routing policy to minimize latency and",
    "start": "512000",
    "end": "514200"
  },
  {
    "text": "also we do the similar thing from um",
    "start": "514200",
    "end": "516599"
  },
  {
    "text": "review service in red cluster to rating",
    "start": "516599",
    "end": "518919"
  },
  {
    "text": "service in yellow",
    "start": "518919",
    "end": "521800"
  },
  {
    "text": "clusters this is the example um um uh",
    "start": "522800",
    "end": "527600"
  },
  {
    "text": "the output of our prototype system here",
    "start": "527600",
    "end": "531120"
  },
  {
    "text": "uh we send loads to the West cluster and",
    "start": "531120",
    "end": "535760"
  },
  {
    "text": "East cluster separately after profiling",
    "start": "535760",
    "end": "539720"
  },
  {
    "text": "phase we once we U think that we have",
    "start": "539720",
    "end": "543600"
  },
  {
    "text": "enough traces to train this polom",
    "start": "543600",
    "end": "546480"
  },
  {
    "text": "function we start to run this line",
    "start": "546480",
    "end": "549519"
  },
  {
    "text": "programming model and come up with this",
    "start": "549519",
    "end": "552279"
  },
  {
    "text": "optimal routing role here um in cluster",
    "start": "552279",
    "end": "556640"
  },
  {
    "text": "one we want to reroute 10 number Book",
    "start": "556640",
    "end": "560440"
  },
  {
    "text": "quest from cluster one to Cluster Zero",
    "start": "560440",
    "end": "563920"
  },
  {
    "text": "from engr Gateway to the product page",
    "start": "563920",
    "end": "567399"
  },
  {
    "text": "and we translate this number into",
    "start": "567399",
    "end": "569680"
  },
  {
    "text": "percentage and then we will in install",
    "start": "569680",
    "end": "572839"
  },
  {
    "text": "this um um routing R to every single",
    "start": "572839",
    "end": "576519"
  },
  {
    "text": "services in Old",
    "start": "576519",
    "end": "579079"
  },
  {
    "text": "clusters um as for where this project",
    "start": "579079",
    "end": "581720"
  },
  {
    "text": "might go in some um interesting future",
    "start": "581720",
    "end": "583519"
  },
  {
    "text": "directions in this area um we think that",
    "start": "583519",
    "end": "586959"
  },
  {
    "text": "the current reporting model of metrics",
    "start": "586959",
    "end": "588720"
  },
  {
    "text": "and latency uh and load is not very",
    "start": "588720",
    "end": "591399"
  },
  {
    "text": "robust as in like we're using just HTTP",
    "start": "591399",
    "end": "593959"
  },
  {
    "text": "filters and with web assembly um a",
    "start": "593959",
    "end": "596440"
  },
  {
    "text": "better alternative would be to move to",
    "start": "596440",
    "end": "598160"
  },
  {
    "text": "wasm services",
    "start": "598160",
    "end": "599880"
  },
  {
    "text": "and do very little in the request path",
    "start": "599880",
    "end": "602240"
  },
  {
    "text": "that I think would increase that would",
    "start": "602240",
    "end": "603839"
  },
  {
    "text": "um better the um performance of the",
    "start": "603839",
    "end": "606839"
  },
  {
    "text": "system a lot um the other idea um that",
    "start": "606839",
    "end": "610320"
  },
  {
    "text": "some students in our group are working",
    "start": "610320",
    "end": "612360"
  },
  {
    "text": "on is um per request routing uh where",
    "start": "612360",
    "end": "615720"
  },
  {
    "text": "you can prioritize certain requests over",
    "start": "615720",
    "end": "617920"
  },
  {
    "text": "others so imagine you had a request",
    "start": "617920",
    "end": "619959"
  },
  {
    "text": "tagged with a certain header it would",
    "start": "619959",
    "end": "621640"
  },
  {
    "text": "somehow get priority throughout the",
    "start": "621640",
    "end": "623240"
  },
  {
    "text": "service mesh and have the lowest latency",
    "start": "623240",
    "end": "626279"
  },
  {
    "text": "um resulting uh as opposed to all the",
    "start": "626279",
    "end": "628519"
  },
  {
    "text": "other calls um the uh final uh example I",
    "start": "628519",
    "end": "633399"
  },
  {
    "text": "want to offer is call graph prediction",
    "start": "633399",
    "end": "635839"
  },
  {
    "text": "essentially um when you have uh these",
    "start": "635839",
    "end": "639760"
  },
  {
    "text": "large microservice deployments um the",
    "start": "639760",
    "end": "641959"
  },
  {
    "text": "call graph can be dynamic um so in",
    "start": "641959",
    "end": "644920"
  },
  {
    "text": "models like book info even like where",
    "start": "644920",
    "end": "646959"
  },
  {
    "text": "it's super simple there are still a",
    "start": "646959",
    "end": "648360"
  },
  {
    "text": "little bit of variance um as you know",
    "start": "648360",
    "end": "650720"
  },
  {
    "text": "one version of reviews call does not",
    "start": "650720",
    "end": "652600"
  },
  {
    "text": "call ratings but the rest do um this is",
    "start": "652600",
    "end": "655279"
  },
  {
    "text": "not very predictable but Behavior like",
    "start": "655279",
    "end": "657880"
  },
  {
    "text": "where a certain header is tagged at",
    "start": "657880",
    "end": "659760"
  },
  {
    "text": "something that results in a different",
    "start": "659760",
    "end": "661440"
  },
  {
    "text": "call graph and um just general call",
    "start": "661440",
    "end": "663959"
  },
  {
    "text": "graph classification where um given a",
    "start": "663959",
    "end": "666240"
  },
  {
    "text": "certain um method and uh path at the",
    "start": "666240",
    "end": "669760"
  },
  {
    "text": "Ingress Gateway can you figure out what",
    "start": "669760",
    "end": "672000"
  },
  {
    "text": "Upstream services will be called that's",
    "start": "672000",
    "end": "673959"
  },
  {
    "text": "a pretty useful model um for models like",
    "start": "673959",
    "end": "677600"
  },
  {
    "text": "uh cost optimization where you need to",
    "start": "677600",
    "end": "679399"
  },
  {
    "text": "know the call graph ahead of time it's",
    "start": "679399",
    "end": "682240"
  },
  {
    "text": "also um useful for other things so um",
    "start": "682240",
    "end": "686079"
  },
  {
    "text": "that's an area of future research that",
    "start": "686079",
    "end": "688480"
  },
  {
    "text": "we envision could be very",
    "start": "688480",
    "end": "690399"
  },
  {
    "text": "fruitful uh thank you for",
    "start": "690399",
    "end": "692760"
  },
  {
    "text": "listening",
    "start": "692760",
    "end": "695760"
  }
]