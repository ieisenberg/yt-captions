[
  {
    "start": "0",
    "end": "160000"
  },
  {
    "text": "hello hi everybody uh thanks for coming to see me again I appreciate that um so this talk",
    "start": "920",
    "end": "9639"
  },
  {
    "text": "is going to be completely different than the keynote I gave uh that one was all about where we're going what the future",
    "start": "9639",
    "end": "15639"
  },
  {
    "text": "looks like this one's all going to be about the nitty-gritty details so probably for about half of it U maybe a",
    "start": "15639",
    "end": "22840"
  },
  {
    "text": "little more I'm just going to talk about our journey with kubernetes um and then the second half I",
    "start": "22840",
    "end": "29400"
  },
  {
    "text": "really just want answer any questions you guys have um because for context we",
    "start": "29400",
    "end": "34719"
  },
  {
    "text": "deployed kubernetes in our first cluster and our first production data center in October 2014 uh",
    "start": "34719",
    "end": "41239"
  },
  {
    "text": "0.11 um I would not have recommended doing that necessarily uh but it was a",
    "start": "41239",
    "end": "46440"
  },
  {
    "text": "great learning experience and we've been very working very closely with the project along the way and contributing and it's a totally different Beast today",
    "start": "46440",
    "end": "53160"
  },
  {
    "text": "which is awesome um but over the last 2 years um we've now today have",
    "start": "53160",
    "end": "60559"
  },
  {
    "text": "uh four clusters three are in production serving production traffic all of them",
    "start": "60559",
    "end": "66200"
  },
  {
    "text": "are on bare metal in our own data centers and they're about 50 nodes each with more being added every week now um",
    "start": "66200",
    "end": "72640"
  },
  {
    "text": "and they're running several microservices that powerbox decom um so",
    "start": "72640",
    "end": "77799"
  },
  {
    "text": "again basically this talk is all about um you guys can just pick my brain ask any questions you want I'm going to just",
    "start": "77799",
    "end": "83040"
  },
  {
    "text": "cover kind at a high level what we do to enable our developers to use kubernetes to deliver production microservices and",
    "start": "83040",
    "end": "89759"
  },
  {
    "text": "then then you know any of the things you guys have been running into trying to deploy kubernetes um I'd love to either hear about or or feel free to ask",
    "start": "89759",
    "end": "96159"
  },
  {
    "text": "questions things like that so um let's talk about what box is for",
    "start": "96159",
    "end": "102040"
  },
  {
    "text": "just a second so we provide uh sharing and collaboration services for um",
    "start": "102040",
    "end": "107360"
  },
  {
    "text": "everyone from individuals to large businesses and governments all around the world uh this is a screenshot of our",
    "start": "107360",
    "end": "112560"
  },
  {
    "text": "product in the browser but we also have uh applications on IOS and Android and",
    "start": "112560",
    "end": "118119"
  },
  {
    "text": "and Apple watch and really anything you can imagine um and the idea is uh we make a very",
    "start": "118119",
    "end": "123680"
  },
  {
    "text": "usable platform for the biggest Enterprises in the world so we have like General Electric on our platform and",
    "start": "123680",
    "end": "129080"
  },
  {
    "text": "they have over 300,000 employees using box and so you can imagine at that kind of scale you need a lot of compliance",
    "start": "129080",
    "end": "134640"
  },
  {
    "text": "and and security and requirements and things like that that that we really specialize in and so um as of today",
    "start": "134640",
    "end": "140720"
  },
  {
    "text": "we're spending a lot of time thinking about how do we uh not only run stuff in our own data center but also burst to",
    "start": "140720",
    "end": "146280"
  },
  {
    "text": "public Cloud so that's why kubernetes is really very for us so let's talk about",
    "start": "146280",
    "end": "153360"
  },
  {
    "text": "uh how a developer begins their journey in launching a production microservice",
    "start": "153360",
    "end": "159040"
  },
  {
    "text": "on kubernetes so first they start with their searce code repo and they have a Docker file in there and then they they",
    "start": "159040",
    "end": "167319"
  },
  {
    "text": "use that we use Jenkins to build a Docker image and then we push that to artifactory so um first let's talk which",
    "start": "167319",
    "end": "175920"
  },
  {
    "text": "is we use as our Docker registry so first let's talk talk about the docker file piece cuz there's kind of like this",
    "start": "175920",
    "end": "182159"
  },
  {
    "start": "180000",
    "end": "300000"
  },
  {
    "text": "dirty little secret about Docker files where you Docker files expect that the",
    "start": "182159",
    "end": "189400"
  },
  {
    "text": "the image that you build your software in is the same one that you are going to",
    "start": "189400",
    "end": "195840"
  },
  {
    "text": "run your software in so if you imagine like you may want one image that has your jdk and another image that has your",
    "start": "195840",
    "end": "203360"
  },
  {
    "text": "JRE so that your your run run image doesn't have all the the compilation or",
    "start": "203360",
    "end": "208640"
  },
  {
    "text": "build tools that you may have but that's generally not what Docker files expect they expect one Docker file you have the",
    "start": "208640",
    "end": "214200"
  },
  {
    "text": "whole thing in there you just throw in all the different tooling and then that's the image you end up shipping so we basically wrote a bunch of scripting",
    "start": "214200",
    "end": "220360"
  },
  {
    "text": "and tooling um that we haven't released yet but if it reaches a critical mass we will um where we have a Docker file",
    "start": "220360",
    "end": "226920"
  },
  {
    "text": "build as an optional uh component that basically puts artifacts in a known in a",
    "start": "226920",
    "end": "232680"
  },
  {
    "text": "a mounted location into the into the image and then uh a Docker file that",
    "start": "232680",
    "end": "239239"
  },
  {
    "text": "takes those artifacts and is able to copy them in so you see the place that we put it is in um the uh build",
    "start": "239239",
    "end": "246879"
  },
  {
    "text": "directory and so we copy in all those um uh artifacts in to the runtime Docker",
    "start": "246879",
    "end": "253159"
  },
  {
    "text": "file so that's just one way that we worked around that we go back and forth every day on whether this is really",
    "start": "253159",
    "end": "258239"
  },
  {
    "text": "valuable or not like maybe it is fine to just shove all your stuff inside of the uh Bas do room image because as you're",
    "start": "258239",
    "end": "264360"
  },
  {
    "text": "making layers you can then make a layer that only has your runtime stuff so you're shipping kind of a lightweight",
    "start": "264360",
    "end": "269560"
  },
  {
    "text": "piece pie um but there's like potential security concerns and things of having all your build Tooling in all your",
    "start": "269560",
    "end": "274880"
  },
  {
    "text": "production environments so it's just something to think about um we looked all over if anybody knows of any tooling",
    "start": "274880",
    "end": "280840"
  },
  {
    "text": "that handles this for you or makes this easy we couldn't find anything the source to image stuff that red hat is",
    "start": "280840",
    "end": "285880"
  },
  {
    "text": "released with open shift is pretty interesting but it doesn't seem to do this either so we're still wondering whether it's whether it's really worth",
    "start": "285880",
    "end": "292000"
  },
  {
    "text": "the cognitive overhead of versus just using a Docker file but it's just something to think about especially if you're in a high security or highly",
    "start": "292000",
    "end": "297639"
  },
  {
    "text": "sensitive environment then the other thing I had up there was artifactory so why did we use",
    "start": "297639",
    "end": "303320"
  },
  {
    "start": "300000",
    "end": "570000"
  },
  {
    "text": "artifactory instead of the Enterprise Docker registry or the coros registry or any of those things and it's because",
    "start": "303320",
    "end": "308800"
  },
  {
    "text": "binary hosting is not a new thing I mean people we've needed had the need for hosting of anything from jars to gems to",
    "start": "308800",
    "end": "316360"
  },
  {
    "text": "you know RPMs to whatever it is for a very long time and there's a pretty sensible feature set that gets built",
    "start": "316360",
    "end": "321680"
  },
  {
    "text": "around that whether it's redundancy or ha across regions or uh really",
    "start": "321680",
    "end": "327000"
  },
  {
    "text": "sophisticated apis um to to query your your registry or query your binary",
    "start": "327000",
    "end": "332759"
  },
  {
    "text": "repository and artifactory had all those things and it just added something that made it compatible with the registry and",
    "start": "332759",
    "end": "338039"
  },
  {
    "text": "we're like well this is a really full featured solution um we'll just go with that instead of waiting for all the",
    "start": "338039",
    "end": "343160"
  },
  {
    "text": "other registries to catch up to that feature set so we would recommend just choosing someone who's done this before",
    "start": "343160",
    "end": "348440"
  },
  {
    "text": "I know um we actually were using uh sonot type Nexus as our art as our",
    "start": "348440",
    "end": "355360"
  },
  {
    "text": "binary repository before but they took too long to add Docker registry support so we just switched over to artifactory",
    "start": "355360",
    "end": "362400"
  },
  {
    "text": "um and so the apis and the extensibility of the registry lend a lot of really",
    "start": "362400",
    "end": "369199"
  },
  {
    "text": "interesting and creative tooling so like the tooling I talked about you really want all your components to be able to",
    "start": "369199",
    "end": "375120"
  },
  {
    "text": "be um very uh programmable against because the future we should be in is",
    "start": "375120",
    "end": "381240"
  },
  {
    "text": "one where a new like let's say uh heart bleed or something like that releases",
    "start": "381240",
    "end": "386759"
  },
  {
    "text": "what we we should be in a world where completely automatically all your Docker images rebuil and then kubernetes",
    "start": "386759",
    "end": "393440"
  },
  {
    "text": "basically does a rolling upgrade of all of your software just alerting you if something goes wrong or if one of the",
    "start": "393440",
    "end": "400039"
  },
  {
    "text": "nodes or pods or whatever doesn't come up so like if you imagine that kind of world where literally you push a button",
    "start": "400039",
    "end": "406479"
  },
  {
    "text": "and everything just kicks off updates you know the the image building basically pulls down the latest packages",
    "start": "406479",
    "end": "412479"
  },
  {
    "text": "including the latest patched open SSL rebuilds all the image automatically kicks off all the CI to rebuild all the",
    "start": "412479",
    "end": "417759"
  },
  {
    "text": "images you know kicks off uh any kind of um either imperative",
    "start": "417759",
    "end": "423759"
  },
  {
    "text": "commands or updates your declarative config to point at the new images and then deployment objects or whatever you're using your kubernetes will just",
    "start": "423759",
    "end": "430199"
  },
  {
    "text": "roll that out automatically that's the world we should be in um instead of",
    "start": "430199",
    "end": "435599"
  },
  {
    "text": "manually updating these things and manually doing deployments so you that programmability for every major",
    "start": "435599",
    "end": "441599"
  },
  {
    "text": "component of your infrastructure and I would call a registry a pretty significant component um should should be a a high priority and that's kind of",
    "start": "441599",
    "end": "449120"
  },
  {
    "text": "proven by uh one of the products artifactory is releasing now called x-ray which is really really cool it",
    "start": "449120",
    "end": "454840"
  },
  {
    "text": "basically shows you all your artifacts and how they all relate to each other and what things contain what so let's",
    "start": "454840",
    "end": "461160"
  },
  {
    "text": "say you publish a jar and then you publish a Docker image well you can actually say well these are all the docker images that still have that jar",
    "start": "461160",
    "end": "468280"
  },
  {
    "text": "and if you imagine an integration that you could build between kubernetes and artifactory or really any Docker",
    "start": "468280",
    "end": "474039"
  },
  {
    "text": "registry um to a certain extent then you could actually have it say in in real",
    "start": "474039",
    "end": "479240"
  },
  {
    "text": "time right now on all my clusters and all my data centers again regardless of cloud provider which instances of my app",
    "start": "479240",
    "end": "486919"
  },
  {
    "text": "are running an old version of um of um",
    "start": "486919",
    "end": "492520"
  },
  {
    "text": "whatever package it is that I'm trying to update so that's a really exciting thing about about what X-ray is is",
    "start": "492520",
    "end": "498120"
  },
  {
    "text": "basically scanning everything all the time it's not basing it off of manual metadata it's actually going in and scanning your Docker images and your",
    "start": "498120",
    "end": "504440"
  },
  {
    "text": "packages and and coming up with uh what's in each one and creating all those relationships and a graph inside",
    "start": "504440",
    "end": "509520"
  },
  {
    "text": "your binary repository so we're really excited about that it's in still pretty early stages um it only works with a few",
    "start": "509520",
    "end": "514599"
  },
  {
    "text": "package types but they're building it out more um we'd love for that to be open uh and I think there are some",
    "start": "514599",
    "end": "521640"
  },
  {
    "text": "projects and initiatives on that front but um but x-ray is the one we're looking at now um and then finally",
    "start": "521640",
    "end": "527519"
  },
  {
    "text": "secure Cloud hosting like we really didn't want to deal with uh binary hosting so we have um them run it for us",
    "start": "527519",
    "end": "533040"
  },
  {
    "text": "and it's really cool they have a lot of tiers if you pay enough money you can basically have them run it in your own AWS account so you can really be",
    "start": "533040",
    "end": "538920"
  },
  {
    "text": "confident about a lot of the security so that's artifactory um so",
    "start": "538920",
    "end": "544560"
  },
  {
    "text": "yeah so as we talked about we had our source code uh that had a Docker file and potentially Docker file build builds",
    "start": "544560",
    "end": "550600"
  },
  {
    "text": "your Docker image in Jenkins by just clicking a button um and some of them if you get pushed then automatically builds",
    "start": "550600",
    "end": "556240"
  },
  {
    "text": "the image for you and pushes that to artifactory um another quick thing about some of the scripting we wrote here you",
    "start": "556240",
    "end": "562959"
  },
  {
    "text": "know Docker has a lot of command line parameters you can give for building but",
    "start": "562959",
    "end": "568040"
  },
  {
    "text": "was really important to us um I think I have that back here yeah uh",
    "start": "568040",
    "end": "573880"
  },
  {
    "start": "570000",
    "end": "635000"
  },
  {
    "text": "yeah what's really important to us is like I can just write the docker file and run a command and the image just",
    "start": "573880",
    "end": "580360"
  },
  {
    "text": "builds correctly and gets shipped to the right registry named the right thing without me doing anything right that's",
    "start": "580360",
    "end": "586360"
  },
  {
    "text": "the kind of workflow you'd want to build for your developers you don't want them to like futz around with the different Docker build commands and the docker",
    "start": "586360",
    "end": "593120"
  },
  {
    "text": "push and do I tag it correctly did I name it correctly you know because if it's not standardized and how's my building down the uh build tooling down",
    "start": "593120",
    "end": "599560"
  },
  {
    "text": "the line going to be able to find those images to automatically deploy them in a potentially like continuous deployment type flow so we use these labels in the",
    "start": "599560",
    "end": "608160"
  },
  {
    "text": "docker file as metadata and you're able to query those later so it's it's a bit of a hack but uh it works really well to",
    "start": "608160",
    "end": "615160"
  },
  {
    "text": "prevent needing like another config file inside your repo to describe what the image should be named or to describe uh",
    "start": "615160",
    "end": "622440"
  },
  {
    "text": "different parameters you want to give the image like what tag you should explicitly do so we have like an automated system for just generating",
    "start": "622440",
    "end": "628399"
  },
  {
    "text": "tags based on the git um hash and things like that um so yeah so that was another thing I wanted to",
    "start": "628399",
    "end": "634519"
  },
  {
    "text": "mention uh so we've got our image in artifactory good we got the first part",
    "start": "634519",
    "end": "639800"
  },
  {
    "start": "635000",
    "end": "725000"
  },
  {
    "text": "done got our image so how do we run our image well we have to write our kubernetes specs and so these specs",
    "start": "639800",
    "end": "646839"
  },
  {
    "text": "basically explain how to run the image that we just built so for example it has",
    "start": "646839",
    "end": "653600"
  },
  {
    "text": "well I'll show the example in a second but basically it explains all the ways of all the all the parameters of how",
    "start": "653600",
    "end": "659399"
  },
  {
    "text": "might want to run your app including command and environment variables and um uh uh command line parameters or or",
    "start": "659399",
    "end": "665920"
  },
  {
    "text": "things like that and we'll look at one in a second but what's key here is that we have templating so we have a",
    "start": "665920",
    "end": "672800"
  },
  {
    "text": "centralized repository that we publish all these things too and there's templating that helps people reuse",
    "start": "672800",
    "end": "679360"
  },
  {
    "text": "different parts of their uh configs or pods or things because we all know pods",
    "start": "679360",
    "end": "684760"
  },
  {
    "text": "are a atomic collection of containers that that are atomically deployed and represent kind of an instance of your",
    "start": "684760",
    "end": "691360"
  },
  {
    "text": "application um but what's tricky is actually being able to provide reusable",
    "start": "691360",
    "end": "696600"
  },
  {
    "text": "components that people can build their pods out of um and you also want a",
    "start": "696600",
    "end": "701680"
  },
  {
    "text": "template so that you can issue slightly different specs to the different",
    "start": "701680",
    "end": "706959"
  },
  {
    "text": "clusters as necessary um for example if you have the non-production cluster and then you have the production clusters or you have different environments that you",
    "start": "706959",
    "end": "713800"
  },
  {
    "text": "want to publish to Dev staging prod and so on you don't want to have to have text files that have the entire yaml or",
    "start": "713800",
    "end": "720000"
  },
  {
    "text": "Json written out every time because that gets very very manual to make sure that all the environments are running the same thing so what we do is we use",
    "start": "720000",
    "end": "727760"
  },
  {
    "start": "725000",
    "end": "1097000"
  },
  {
    "text": "templating and we use this uh specific Library called jonet which is um another",
    "start": "727760",
    "end": "732959"
  },
  {
    "text": "Google project um and Json is essentially a templ language for",
    "start": "732959",
    "end": "739560"
  },
  {
    "text": "Json and what's great about that is that it produces Json it doesn't produce text",
    "start": "739560",
    "end": "746519"
  },
  {
    "text": "so you can use things like mustache or or or you know your favorite templating language or whatever it is um but the",
    "start": "746519",
    "end": "753120"
  },
  {
    "text": "big problem with those is that they produce text instead of producing Json so they have no idea if your if your um",
    "start": "753120",
    "end": "760000"
  },
  {
    "text": "uh Json or whatever you're outputting is is malformed or syntactically invalid or things like that but Json it will only",
    "start": "760000",
    "end": "766399"
  },
  {
    "text": "compile and produce syntactically valid Json which is really really nice so this is an example Json it file for our Hello",
    "start": "766399",
    "end": "774000"
  },
  {
    "text": "World app pulled directly from our repo and at the top you can see so",
    "start": "774000",
    "end": "779600"
  },
  {
    "text": "something really important here you're going to have a Temptation when you first start with templating to make a",
    "start": "779600",
    "end": "785720"
  },
  {
    "text": "full abstraction of everything below um of of of all the kubernetes core objects",
    "start": "785720",
    "end": "792279"
  },
  {
    "text": "like deployment Services Secrets config Maps you're going to want to make your own like box deployment or box service",
    "start": "792279",
    "end": "797760"
  },
  {
    "text": "or your company name config map or whatever it is and I think the jury is still out but we tried that first and we",
    "start": "797760",
    "end": "804399"
  },
  {
    "text": "quickly rolled it back um and we undid all our configs and and made them look much more like the native object objects",
    "start": "804399",
    "end": "809560"
  },
  {
    "text": "because the native objects are that complex and configurable for a reason",
    "start": "809560",
    "end": "814720"
  },
  {
    "text": "it's because many of your developers may want to tweak different things and the",
    "start": "814720",
    "end": "820279"
  },
  {
    "text": "problem is that each while 90% of all the specs will look the same at any given time the 10% that's different will",
    "start": "820279",
    "end": "827680"
  },
  {
    "text": "likely be different between each team and engineer so we started with like simple box service or whatever and we",
    "start": "827680",
    "end": "833279"
  },
  {
    "text": "ended up adding well okay a parameter for resource utilization customization or a parameter for um you know the",
    "start": "833279",
    "end": "839120"
  },
  {
    "text": "restart policy or whatever it is and we added so many parameters that it was just like we're literally maintaining a full copy of the kuber dandes API for no",
    "start": "839120",
    "end": "846360"
  },
  {
    "text": "real gain um because now it's two things you have to learn and if a developer is trying to learn how to uh deploy service",
    "start": "846360",
    "end": "852920"
  },
  {
    "text": "kubernetes it's a lot harder for them to go use stock overflow or the documentation or all these advantages",
    "start": "852920",
    "end": "858040"
  },
  {
    "text": "you get from using an open platform so we kind of bite the learning curve and we say okay fine people are going to",
    "start": "858040",
    "end": "864759"
  },
  {
    "text": "have to learn these core c objects because honestly they're pretty good and they're pretty welld designed um so we",
    "start": "864759",
    "end": "870000"
  },
  {
    "text": "we have the general structure of these all look like the kubernetes objects so there isn't that much abstraction",
    "start": "870000",
    "end": "875279"
  },
  {
    "text": "between the developer and kubernetes so you got kind deployment um and then you",
    "start": "875279",
    "end": "880560"
  },
  {
    "text": "have a spec we have all the other fields I've kind of taken a lot of them out but now the spec field you have replicas 3",
    "start": "880560",
    "end": "885880"
  },
  {
    "text": "so if if for those who don't know deployment object is essentially the way to tell kubernetes run you know n",
    "start": "885880",
    "end": "891480"
  },
  {
    "text": "instances of my application but if I ever change anything about the spec do a",
    "start": "891480",
    "end": "897920"
  },
  {
    "text": "rolling upgrade so that's different than like a replica set a replication controller where if you change it you have to actually go kill each one",
    "start": "897920",
    "end": "904279"
  },
  {
    "text": "manually and and then it'll respawn as a new one deployment object does a rolling upgrade for you so um that's been really",
    "start": "904279",
    "end": "909959"
  },
  {
    "text": "great to do uh and it really helps the declarative configuration as you'll see so here we have three replicas uh we",
    "start": "909959",
    "end": "917480"
  },
  {
    "text": "have the template and in the container section you'll see that under image we",
    "start": "917480",
    "end": "922639"
  },
  {
    "text": "start to diverge from Json and we actually call a function that's in a library file and that in this uh uh",
    "start": "922639",
    "end": "929839"
  },
  {
    "text": "templating repository so um this we have this Library uh that we have this like",
    "start": "929839",
    "end": "936560"
  },
  {
    "text": "templating Library called image and that has a URL function which will generate the URL for the image and it takes the",
    "start": "936560",
    "end": "942160"
  },
  {
    "text": "application name and then it lets you switch on which environment you're generating a spec for so we essentially",
    "start": "942160",
    "end": "948319"
  },
  {
    "text": "have a make file that iterates over these templates once per environment and those those environments get mapped to",
    "start": "948319",
    "end": "954800"
  },
  {
    "text": "clusters basically so this switch allows you to generate a slightly different",
    "start": "954800",
    "end": "960519"
  },
  {
    "text": "Json for each cluster while all the other pieces stay the same so then you see command that's going to be the same",
    "start": "960519",
    "end": "966560"
  },
  {
    "text": "across everything um so we don't have to change that and then you see ports um",
    "start": "966560",
    "end": "971880"
  },
  {
    "text": "and uh this is like the normal parts of the deployment object you see environment variables and you see resources you can control how many",
    "start": "971880",
    "end": "978000"
  },
  {
    "text": "resources you have and what's cool is like this is it like if you take this and then you also take the service",
    "start": "978000",
    "end": "983959"
  },
  {
    "text": "object and the config map and secret which look kind of similar to this with whatever helpers that we may have added",
    "start": "983959",
    "end": "989440"
  },
  {
    "text": "um you have the full description of your application which again is incredible it's like you don't have to go futs with",
    "start": "989440",
    "end": "994839"
  },
  {
    "text": "the ec2 like elb config but then locally you have your ha proxies that you have set up like this is now what we have",
    "start": "994839",
    "end": "1001079"
  },
  {
    "text": "developers code to and they're done we as a as a kind of devops operations team",
    "start": "1001079",
    "end": "1006680"
  },
  {
    "text": "we take care of all the rest um and this is kind of the layer that devops has really needed to flourish in the way",
    "start": "1006680",
    "end": "1012120"
  },
  {
    "text": "that um it was originally intended and one other really cool thing you'll notice here is appcon d.",
    "start": "1012120",
    "end": "1018240"
  },
  {
    "text": "container so appom D is our internal uh appc conf uh is our internal configuration delivery tool which is now",
    "start": "1018240",
    "end": "1025480"
  },
  {
    "text": "Legacy because we'll probably switch eventually to config Maps but it's our internal tool that runs as a sidecar container and because of this I can",
    "start": "1025480",
    "end": "1032480"
  },
  {
    "text": "actually uh um basically refactor out that definition and allow people to use",
    "start": "1032480",
    "end": "1038038"
  },
  {
    "text": "it like a library so now your microservice the Pod can be composed of",
    "start": "1038039",
    "end": "1044038"
  },
  {
    "text": "a bunch of other binaries that are developed by different parts of your team and this is so much better than doing it in the traditional ways through",
    "start": "1044039",
    "end": "1050559"
  },
  {
    "text": "puppet and uh installing them directly onto the VM or bare metal machine or whatever because these teams can",
    "start": "1050559",
    "end": "1057520"
  },
  {
    "text": "independently produce applications that because of the docker image are entirely",
    "start": "1057520",
    "end": "1062720"
  },
  {
    "text": "contained so if my Hello World app uses um let's say python 34 and the appcon D",
    "start": "1062720",
    "end": "1070640"
  },
  {
    "text": "container uses python 27 then both of those can coexist very happily in a single pod and that's really awesome and",
    "start": "1070640",
    "end": "1077440"
  },
  {
    "text": "I think it's going to really change is the way we think about how we build things we don't have to build as many client side libraries because we can",
    "start": "1077440",
    "end": "1084320"
  },
  {
    "text": "actually now build just binaries that share the same network interface and potentially share um file system volumes",
    "start": "1084320",
    "end": "1089480"
  },
  {
    "text": "as well and we can build applications out of composing binaries together because of um the power of Docker and",
    "start": "1089480",
    "end": "1094799"
  },
  {
    "text": "containers and pods and things like that so this is the template and these templates up top so",
    "start": "1094799",
    "end": "1103200"
  },
  {
    "start": "1097000",
    "end": "1285000"
  },
  {
    "text": "we've we looked at that deployment. Lipson it one right there let you see that yeah great",
    "start": "1103200",
    "end": "1109360"
  },
  {
    "text": "kind of um you have that deployment. lips on it and that was the one we just",
    "start": "1109360",
    "end": "1116000"
  },
  {
    "text": "looked at and then we have all these other supporting template files and that make file goes through and generates",
    "start": "1116000",
    "end": "1122200"
  },
  {
    "text": "this app.js it which includes all these other ones so this app. Json it will be generated once for every environment",
    "start": "1122200",
    "end": "1130480"
  },
  {
    "text": "that we have so this repo is containing all these",
    "start": "1130480",
    "end": "1135799"
  },
  {
    "text": "files apps and release are two of the main subdirectories inside that repo apps is where all your jonet files Go um",
    "start": "1135799",
    "end": "1143760"
  },
  {
    "text": "and Lipson it is just the extension for one that's included as a library versus one that's directly generated um and",
    "start": "1143760",
    "end": "1150000"
  },
  {
    "text": "then you have in the release directory you actually have the generated Json and we actually check them in um you don't",
    "start": "1150000",
    "end": "1157559"
  },
  {
    "text": "have to and we started out not doing it but the reason we check them in is because it's really really nice",
    "start": "1157559",
    "end": "1164440"
  },
  {
    "text": "especially for us coming from a puppet background to be able to have a full full sense in the code review of the",
    "start": "1164440",
    "end": "1171159"
  },
  {
    "text": "templating changes of what's going to happen to all your clusters so you may change some parameter in deployment at",
    "start": "1171159",
    "end": "1177360"
  },
  {
    "text": "lips on it and you may expect it to only affect your local cluster but then when you generate them and you put it in the",
    "start": "1177360",
    "end": "1182640"
  },
  {
    "text": "code review everyone can review that you're not accidentally changing prod not only pans but also automated tools",
    "start": "1182640",
    "end": "1187799"
  },
  {
    "text": "as well so that's um a really nice thing uh that we found is that actually",
    "start": "1187799",
    "end": "1194039"
  },
  {
    "text": "generating these final versions and checking them in and being able to code review those along with the templating changes gives a lot of comfort and",
    "start": "1194039",
    "end": "1199960"
  },
  {
    "text": "security as you're potentially making really big changes to to your templates and how things are generated so um just to be clear here on",
    "start": "1199960",
    "end": "1207440"
  },
  {
    "text": "this green um we have the first one here is our cluster o sorry and the second",
    "start": "1207440",
    "end": "1214159"
  },
  {
    "text": "one the second uh path element here is the environment so we have a local",
    "start": "1214159",
    "end": "1219480"
  },
  {
    "text": "cluster which we always call your laptop we have dsv 31 which for us is our non-production cluster and we have",
    "start": "1219480",
    "end": "1225080"
  },
  {
    "text": "production clusters 1 two and three which are in three different data centers and you'll notice that the environment is kind of a variable that",
    "start": "1225080",
    "end": "1231320"
  },
  {
    "text": "can change independently from the cluster so we kind of want as few clusters like kubernetes installations",
    "start": "1231320",
    "end": "1236640"
  },
  {
    "text": "as possible because then you get maximum utilization across your Fleet um and so like you'll notice our non- production",
    "start": "1236640",
    "end": "1243400"
  },
  {
    "text": "cluster hosts two environments Dev and staging so that's a logical environment for the services running there but our",
    "start": "1243400",
    "end": "1250400"
  },
  {
    "text": "production cluster um will actually run uh three different clusters will all run",
    "start": "1250400",
    "end": "1255640"
  },
  {
    "text": "the same logical environment being prod so that's like an interesting split that you probably want to make um we've been",
    "start": "1255640",
    "end": "1261720"
  },
  {
    "text": "going back and forth we may start doing cluster per environment just to simplify a lot of stuff but this gives us much better utilization so um we'll probably",
    "start": "1261720",
    "end": "1268960"
  },
  {
    "text": "keep going down the track of one cluster can hold many different environments um and it's really mostly for compliance at",
    "start": "1268960",
    "end": "1275440"
  },
  {
    "text": "this point that we don't just run everything collocated um we'd love to get there if we can have sophisticated enough security and and uh networking",
    "start": "1275440",
    "end": "1282679"
  },
  {
    "text": "controls um so yep so next um we have that centralized",
    "start": "1282679",
    "end": "1291559"
  },
  {
    "start": "1285000",
    "end": "1391000"
  },
  {
    "text": "git repository that we talked about that had all those files in it the templates and the generated Json that describes",
    "start": "1291559",
    "end": "1297360"
  },
  {
    "text": "100% of what the infrastructure is and we use that declaratively and then apply",
    "start": "1297360",
    "end": "1302840"
  },
  {
    "text": "it to our many clusters or four clusters so this applier originally started life",
    "start": "1302840",
    "end": "1310520"
  },
  {
    "text": "as nothing more than a bash script that looped and ran Cub C apply on all the",
    "start": "1310520",
    "end": "1316400"
  },
  {
    "text": "files the Json files inside the G rep so we don't use those uh templates files anymore once we generate them we go",
    "start": "1316400",
    "end": "1322720"
  },
  {
    "text": "ahead and use the Json um because the Json is the only thing that Cube cluster would understand so we use applier uh to",
    "start": "1322720",
    "end": "1330440"
  },
  {
    "text": "basically iterate over and and apply each of these and apply basically what it does it's it's kind of like put it it",
    "start": "1330440",
    "end": "1335919"
  },
  {
    "text": "puts the new version but it intelligently um basically deletes uh",
    "start": "1335919",
    "end": "1341400"
  },
  {
    "text": "fields that may have been removed so and it allows you to merge your config with other systems that may be uh modifying",
    "start": "1341400",
    "end": "1348320"
  },
  {
    "text": "those objects so I could go more in depth but just uh but if you're interested you can go check out some of",
    "start": "1348320",
    "end": "1353360"
  },
  {
    "text": "the issues around it it's very interesting piece of software we um helped contribute a lot of the original code for um how it reconciles changes um",
    "start": "1353360",
    "end": "1362320"
  },
  {
    "text": "and so recommend checking it out if you're interested but suffice to say for the purposes of this talk it synchronizes the state of the git",
    "start": "1362320",
    "end": "1369000"
  },
  {
    "text": "repository with the state of all the production clusters and because of kubernetes is desired State current",
    "start": "1369000",
    "end": "1374799"
  },
  {
    "text": "state model with spec and Status uh you can do that you can basically tell kubernetes this is what I want and um",
    "start": "1374799",
    "end": "1382200"
  },
  {
    "text": "kubernetes will take care of it and then kubernetes will report back to you in a different way what's actually happening in your cluster so because of that we",
    "start": "1382200",
    "end": "1388080"
  },
  {
    "text": "can manage our config declaratively which is awesome so um next let's look at what",
    "start": "1388080",
    "end": "1394279"
  },
  {
    "start": "1391000",
    "end": "1658000"
  },
  {
    "text": "those clusters look like in production so remember the applier we've gotten",
    "start": "1394279",
    "end": "1400240"
  },
  {
    "text": "that in the top left and that goes over that HTTP API that's that known stable API which is an amazing thing to program",
    "start": "1400240",
    "end": "1405919"
  },
  {
    "text": "to because it doesn't matter where this architecture is running where your kubernetes cluster is you always just hit that same API and we're going to",
    "start": "1405919",
    "end": "1412880"
  },
  {
    "text": "always have one repo that uh in a single way expresses how all of our service",
    "start": "1412880",
    "end": "1418679"
  },
  {
    "text": "microservices run regardless of the cloud infrastructure and it's now the job of another team to to implement that",
    "start": "1418679",
    "end": "1426000"
  },
  {
    "text": "uh and make sure all the kubernetes Clusters are operating properly um in all the different places so we have that",
    "start": "1426000",
    "end": "1431320"
  },
  {
    "text": "applier hitting the API server so here you'll see in the lower left we have a few we have three bare metal nodes per",
    "start": "1431320",
    "end": "1437240"
  },
  {
    "text": "cluster dedicated to at CD um and that's been a great experience so far anytime",
    "start": "1437240",
    "end": "1442919"
  },
  {
    "text": "we've had issues it's for an expected reason where we accidentally had one node down this is before production",
    "start": "1442919",
    "end": "1448799"
  },
  {
    "text": "fortunately but like and then this one node was actually down out of the three for like a month before somebody noticed",
    "start": "1448799",
    "end": "1454240"
  },
  {
    "text": "and then we only noticed because the second node went down and then ETD was like okay I can't do anything now um so we had then we brought both back up so",
    "start": "1454240",
    "end": "1461039"
  },
  {
    "text": "the stability and reliability we've been happy with we haven't seen any issues that have been able to be pinned on etcd",
    "start": "1461039",
    "end": "1466799"
  },
  {
    "text": "um so that's ETD that's we put them on dedicated nodes you don't have to but we do just just to keep things simple and",
    "start": "1466799",
    "end": "1473399"
  },
  {
    "text": "keep ourselves a little sane um I imagine as this as all this stuff matures this stuff will become more and more collocated and more and more",
    "start": "1473399",
    "end": "1479159"
  },
  {
    "text": "flexible with where it exists so we have dedicated um etcd nodes and we install",
    "start": "1479159",
    "end": "1484559"
  },
  {
    "text": "the ETD RPM with puppet basically um but you could do it anyway way you could spawn an Ami you could any way you want",
    "start": "1484559",
    "end": "1490279"
  },
  {
    "text": "to do config management you can still do that um and but we're going to move to having those be managed uh with a",
    "start": "1490279",
    "end": "1496480"
  },
  {
    "text": "container under cuet um um and then so under the first two nodes you see here",
    "start": "1496480",
    "end": "1502919"
  },
  {
    "text": "those are our Master nodes so again you don't have to dedicate nodes to these",
    "start": "1502919",
    "end": "1508240"
  },
  {
    "text": "functionalities but you know again for Simplicity and as this project matures it it can help so we have two Master nodes and those do run API server",
    "start": "1508240",
    "end": "1515720"
  },
  {
    "text": "controller manager and scheduler as uh containers under the cuet and the way we run those containers is we use puppet to",
    "start": "1515720",
    "end": "1523520"
  },
  {
    "text": "drop uh yaml files on disk and cuet is",
    "start": "1523520",
    "end": "1528559"
  },
  {
    "text": "able to not only listen for API server for how to run things but it can also listen to files on disk for how to run",
    "start": "1528559",
    "end": "1533679"
  },
  {
    "text": "things so uh or what containers to run rather so cubet sees some f files on disk and it picks those up and it runs",
    "start": "1533679",
    "end": "1540000"
  },
  {
    "text": "those three containers and what's cool is as soon as those containers run they're ALS they also the cubet also",
    "start": "1540000",
    "end": "1545240"
  },
  {
    "text": "knows that it should also try and find an API server and it finds the API server basically it just spawned and so",
    "start": "1545240",
    "end": "1551279"
  },
  {
    "text": "in the CU in the API server you actually are able to do Cube CTL like get pods",
    "start": "1551279",
    "end": "1556399"
  },
  {
    "text": "and all the other management functional of of kubernetes on these uh static pods",
    "start": "1556399",
    "end": "1562080"
  },
  {
    "text": "themselves so um basically like it's the whole thing of like when you start",
    "start": "1562080",
    "end": "1568760"
  },
  {
    "text": "running software this way under kubernetes you don't want to run it any other way because you get so much",
    "start": "1568760",
    "end": "1574799"
  },
  {
    "text": "functionality with you know uh being able to introspect into your infrastructure and exec and logs and all",
    "start": "1574799",
    "end": "1580080"
  },
  {
    "text": "these amazing tools that that come with kubernetes and qctl that um you want to",
    "start": "1580080",
    "end": "1585320"
  },
  {
    "text": "kind of run everything as much under it as possible so while we could run you know these other components as RPMs and have it be separate the more we can have",
    "start": "1585320",
    "end": "1592440"
  },
  {
    "text": "um under kubernetes the the better it can be um coros is doing some really really amazing work with self-hosting",
    "start": "1592440",
    "end": "1598640"
  },
  {
    "text": "and pushing the front and really being on The Cutting Edge of that and we're really excited to see where that goes um",
    "start": "1598640",
    "end": "1604559"
  },
  {
    "text": "so those are our Master nodes that run those three main Master components of kubernetes and then we have you know n",
    "start": "1604559",
    "end": "1612799"
  },
  {
    "text": "uh bare metal nodes so we've got four here but imagine you know 50 or 100 or however many and and that runs all of",
    "start": "1612799",
    "end": "1619440"
  },
  {
    "text": "our different uh components so I'm going to talk about um a couple",
    "start": "1619440",
    "end": "1626720"
  },
  {
    "text": "more highle topics and then I'll open for any questions or anything you guys uh have thoughts on what I talked about",
    "start": "1626720",
    "end": "1632240"
  },
  {
    "text": "so far so one thing I'll talk about is ingress um Ingress on public cloud is",
    "start": "1632240",
    "end": "1638000"
  },
  {
    "text": "mostly a solved problem um they do it through elb or or gcp load balancer and and node ports um I won't go too into",
    "start": "1638000",
    "end": "1645200"
  },
  {
    "text": "depth on that you can just look up the documentation on that but Ingress on bare metal is a very actively evolving",
    "start": "1645200",
    "end": "1652039"
  },
  {
    "text": "uh thing and we had to basically solve this before um the Ingress uh uh objects",
    "start": "1652039",
    "end": "1657240"
  },
  {
    "text": "kind of took off so what we did was we we got the service load balancer so",
    "start": "1657240",
    "end": "1663039"
  },
  {
    "text": "imagine this is a dedicated node another dedicated Hardware node and we take the",
    "start": "1663039",
    "end": "1669480"
  },
  {
    "text": "uh we took the service load balancer code from the contrib repository which is still up there um which is",
    "start": "1669480",
    "end": "1674880"
  },
  {
    "text": "responsible for listening to the API server for pods that match a certain service and then it generates an ha",
    "start": "1674880",
    "end": "1682399"
  },
  {
    "text": "proxy that Maps basically DNS names to that to that uh to those pods and then",
    "start": "1682399",
    "end": "1689159"
  },
  {
    "text": "it bounces ha proxy and then ha proxy listens on an any casted IP on the host",
    "start": "1689159",
    "end": "1694240"
  },
  {
    "text": "interface so we now have the ability to Stamp Out multiple of these and have a",
    "start": "1694240",
    "end": "1699720"
  },
  {
    "text": "highly available horizontally scalable uh Ingress tier because what happens is",
    "start": "1699720",
    "end": "1705480"
  },
  {
    "text": "the DNS name is patterned off of our namespace and name of the service and the cluster that it's in so like hello",
    "start": "1705480",
    "end": "1712080"
  },
  {
    "text": "world uh um Dev dot the cluster name dsv",
    "start": "1712080",
    "end": "1717240"
  },
  {
    "text": "31 dobox Donnet so that that DNS name wild cards to this any casted IP and",
    "start": "1717240",
    "end": "1724960"
  },
  {
    "text": "then this ncast IP is able to pick up the traffic and and and load balance it onto the pods so that's basically how we",
    "start": "1724960",
    "end": "1733240"
  },
  {
    "text": "do Ingress for other in Services inside of box being able to contact and enter",
    "start": "1733240",
    "end": "1738480"
  },
  {
    "text": "into Services into uh kubernetes and then for the kubernetes service Discovery internally from Cube to cube",
    "start": "1738480",
    "end": "1744440"
  },
  {
    "text": "Services we just uh do that with the uh Q proxy so that's basically um Ox proxy is",
    "start": "1744440",
    "end": "1751799"
  },
  {
    "text": "just our internal name for that for that fork we did um but anybody can can use this and I think the Ingress um projects",
    "start": "1751799",
    "end": "1758399"
  },
  {
    "text": "are going to be very uh interesting and and take the place of this um and then",
    "start": "1758399",
    "end": "1763519"
  },
  {
    "start": "1762000",
    "end": "1940000"
  },
  {
    "text": "for networking which someone always ask about basically we're using flannel",
    "start": "1763519",
    "end": "1768720"
  },
  {
    "text": "and if you don't know why uh people end up using things like flannel or Calico",
    "start": "1768720",
    "end": "1773799"
  },
  {
    "text": "for routing it's because most networks are designed in a way where if you have",
    "start": "1773799",
    "end": "1780480"
  },
  {
    "text": "a server you generally are going to allocate one IP to that server that's",
    "start": "1780480",
    "end": "1785760"
  },
  {
    "text": "how most networks are designed especially bare metal or or um uh even potentially private Cloud um networks is",
    "start": "1785760",
    "end": "1792360"
  },
  {
    "text": "one one server will essentially get one IP and you're it's not designed but on the flip side could gret's networking",
    "start": "1792360",
    "end": "1800080"
  },
  {
    "text": "architecture asks that each container running on a node gets its own IP and so",
    "start": "1800080",
    "end": "1806880"
  },
  {
    "text": "when you tell that to the networking guys they just start laughing and you're just like no but really we need it and they just keep laughing and then you're",
    "start": "1806880",
    "end": "1812760"
  },
  {
    "text": "like okay well now what do we do so if you want to solve it on your own without the help of the networking guys what you",
    "start": "1812760",
    "end": "1818519"
  },
  {
    "text": "do is you run flannel which basically creates this virtual overlay that pretends for any given pod that's um",
    "start": "1818519",
    "end": "1826799"
  },
  {
    "text": "that that has an IP it can route it to another pod that has another um virtual",
    "start": "1826799",
    "end": "1832080"
  },
  {
    "text": "IP basically so and and that mapping to the underlaid network is done automatically by flannel so you can have",
    "start": "1832080",
    "end": "1838159"
  },
  {
    "text": "this kind of mesh that lives on top of your underlay Network the downside is those IPS are not accessible outside the",
    "start": "1838159",
    "end": "1843840"
  },
  {
    "text": "cluster if you're not running flannel on an external node so um we and and the",
    "start": "1843840",
    "end": "1848960"
  },
  {
    "text": "other complication is that it's just more infrastructure that you have to worry about um and it's and it and it",
    "start": "1848960",
    "end": "1855000"
  },
  {
    "text": "has a small performance penalty both on performance and band with so because you're basically wrapping the packets um",
    "start": "1855000",
    "end": "1862519"
  },
  {
    "text": "but uh we so we used flannel today because that was by far the most expedient thing and it's been pretty stable it's every time we have an issue",
    "start": "1862519",
    "end": "1868480"
  },
  {
    "text": "we think oh it's probably flannel and then it ends up not being so um it's pretty stable uh but we'd like to move",
    "start": "1868480",
    "end": "1873960"
  },
  {
    "text": "to Calico uh bgp routing which solves the same problem in a different way um and then once we do that we're also",
    "start": "1873960",
    "end": "1879679"
  },
  {
    "text": "right now looking at um Calico akles to be able to isolate these pods from each other from a networking perspective so",
    "start": "1879679",
    "end": "1885760"
  },
  {
    "text": "we're really excited about that um",
    "start": "1885760",
    "end": "1889919"
  },
  {
    "text": "so I think that's mostly it for networking um",
    "start": "1891159",
    "end": "1897840"
  },
  {
    "text": "yeah okay so that's pretty much what we're doing um I'm going to take questions out another technology we're",
    "start": "1897840",
    "end": "1904000"
  },
  {
    "text": "looking at that we think is really interesting is um Linker D for the service Discovery piece um and so we",
    "start": "1904000",
    "end": "1909760"
  },
  {
    "text": "have so that would be backed by the kubernetes API server um so it's not an entire uh service Discovery platform in",
    "start": "1909760",
    "end": "1916200"
  },
  {
    "text": "the way we'd use it but it would enable us to um have a lot more intelligence about which these different uh how these",
    "start": "1916200",
    "end": "1922360"
  },
  {
    "text": "different components are communicating to each other so um yeah great okay",
    "start": "1922360",
    "end": "1928120"
  },
  {
    "text": "questions",
    "start": "1928120",
    "end": "1931120"
  },
  {
    "text": "yeah yeah so the question is if I want to make an application configuration change do I have tools to do that",
    "start": "1939279",
    "end": "1945440"
  },
  {
    "start": "1940000",
    "end": "2068000"
  },
  {
    "text": "without rebuilding the image or does it require rebuilding the image and deploying that out so configuration is a",
    "start": "1945440",
    "end": "1951000"
  },
  {
    "text": "super interesting thing that has a lot of different options and ways you can look at it so the first configuration",
    "start": "1951000",
    "end": "1956840"
  },
  {
    "text": "you can start with is really try and put as much in the image as possible because as much configuration as you can put in",
    "start": "1956840",
    "end": "1962360"
  },
  {
    "text": "the image that doesn't vary per environment uh persistently and by what I mean by that is you can do a rolling",
    "start": "1962360",
    "end": "1968919"
  },
  {
    "text": "upgrade of it per environment but you don't want it to you know once it's once you've changed it you want it to eventually be consistent across all of",
    "start": "1968919",
    "end": "1975120"
  },
  {
    "text": "them for those I recommend putting it in your image because it gives you the most power for Rolling forward and rolling back gives you a really nice model you",
    "start": "1975120",
    "end": "1981639"
  },
  {
    "text": "put in the image you rebuild it and now you do a proper deployment with all the tools that help you do deployments and",
    "start": "1981639",
    "end": "1986679"
  },
  {
    "text": "the risk that comes with the configuration change um your next option is basically Dynamic configuration which",
    "start": "1986679",
    "end": "1993799"
  },
  {
    "text": "is the config Maps so we are using those we like them a lot um we like that we",
    "start": "1993799",
    "end": "1999840"
  },
  {
    "text": "don't need a separate infrastructure for configuration anymore it's just built right into kubernetes the challenge with config maps The Challenge and the",
    "start": "1999840",
    "end": "2005799"
  },
  {
    "text": "benefit is they currently they change everywhere instantly as soon as you change the",
    "start": "2005799",
    "end": "2010840"
  },
  {
    "text": "resource so the way we handle the way that we do that today is we just are",
    "start": "2010840",
    "end": "2017279"
  },
  {
    "text": "really careful with them and we make them one cluster at a time and it's and we sometimes rely on the application to not be refreshing the state so we can do",
    "start": "2017279",
    "end": "2024240"
  },
  {
    "text": "it gradually um because again config changes are just as dangerous as code changes in a lot of contexts um and you",
    "start": "2024240",
    "end": "2029440"
  },
  {
    "text": "have to treat them as such so um uh yeah so so what what we're most",
    "start": "2029440",
    "end": "2035639"
  },
  {
    "text": "excited about is the best of both worlds where they're looking at basically embedding config Maps or creating",
    "start": "2035639",
    "end": "2041159"
  },
  {
    "text": "relationships I forget exactly how they're doing it with the deployment object so that's an atomic unit um",
    "start": "2041159",
    "end": "2046639"
  },
  {
    "text": "there's a lot of interesting stuff there about how this API can evolve and becoming more Atomic in its mutations",
    "start": "2046639",
    "end": "2052200"
  },
  {
    "text": "and modifications but that's uh one really interesting area where um yeah we",
    "start": "2052200",
    "end": "2057320"
  },
  {
    "text": "we would like the config maps to be able to be deployed just like an image change but with less overhead because now we",
    "start": "2057320",
    "end": "2062520"
  },
  {
    "text": "don't have to actually make an image change so how about",
    "start": "2062520",
    "end": "2068320"
  },
  {
    "start": "2068000",
    "end": "2342000"
  },
  {
    "text": "yeah uh question on Secrets um so secrets and kubernetes are interesting",
    "start": "2068320",
    "end": "2074240"
  },
  {
    "text": "on the one hand they're great that they're database backed they're secure as long as you secure to your API server",
    "start": "2074240",
    "end": "2080000"
  },
  {
    "text": "and ETD um and their programmatically access is controlled and because of um rbac and other Access Control you can",
    "start": "2080000",
    "end": "2086720"
  },
  {
    "text": "actually control which users and teams can access which Secrets the N not so",
    "start": "2086720",
    "end": "2092040"
  },
  {
    "text": "good thing is they're unencrypted in that CD right so that's that's the security team doesn't like that as much",
    "start": "2092040",
    "end": "2097118"
  },
  {
    "text": "um so there's a couple ways we're dealing with it one is um we're looking",
    "start": "2097119",
    "end": "2102320"
  },
  {
    "text": "at Vault so we really like a lot of the Vault backed Integrations now still in kubernetes Etsy that leaves it unencrypted when it's being used but",
    "start": "2102320",
    "end": "2109240"
  },
  {
    "text": "we're trying to get our security team around the idea that they're protected enough even though they aren't encrypted they're protected enough um that it's",
    "start": "2109240",
    "end": "2115280"
  },
  {
    "text": "that it can be considered secure if it's locked down and there's cool things you can do where if there's some controller that's responsible for managing the",
    "start": "2115280",
    "end": "2121839"
  },
  {
    "text": "unencrypted secrets at least programmatically you could really lock it down so no human could even have",
    "start": "2121839",
    "end": "2127200"
  },
  {
    "text": "access to secret resources instead it's controllers and automated systems that are pulling it from from an encrypted",
    "start": "2127200",
    "end": "2132560"
  },
  {
    "text": "source and putting it into the unencrypted um format so yes it may still be un encrypted in NCD but if you",
    "start": "2132560",
    "end": "2138839"
  },
  {
    "text": "can lock it down enough where it's really really hard to get access to them then maybe that's acceptable um we're still working through that um another",
    "start": "2138839",
    "end": "2145640"
  },
  {
    "text": "interesting thing we're looking at and we have an intern working on this right now is and this is one thing that's",
    "start": "2145640",
    "end": "2151319"
  },
  {
    "text": "really cool about third party resources so imagine a thirdparty resource or rather a a an kuber netes object that",
    "start": "2151319",
    "end": "2158599"
  },
  {
    "text": "lives in the kubernetes ETD and is accessible by the API server but whose definition is not owned by kubernetes",
    "start": "2158599",
    "end": "2163960"
  },
  {
    "text": "but instead owned by a separate controller that you run in a pod yourself okay so that's what a third-",
    "start": "2163960",
    "end": "2169200"
  },
  {
    "text": "party resource is really really cool and what we did what we're looking at is",
    "start": "2169200",
    "end": "2174520"
  },
  {
    "text": "creating a third party resource card in encrypted secret that we make in kubernetes itself and then there's a",
    "start": "2174520",
    "end": "2179880"
  },
  {
    "text": "behind the-scenes controller that securely decrypts that into a secret that's only accessible to the services",
    "start": "2179880",
    "end": "2187040"
  },
  {
    "text": "that need it so that way we can check in our secrets to our source control encrypted per",
    "start": "2187040",
    "end": "2193560"
  },
  {
    "text": "cluster and then automatically have them decrypted at the final leg um which is",
    "start": "2193560",
    "end": "2198839"
  },
  {
    "text": "really cool and again the more you can put your declarative config the better right now we have to imperatively create",
    "start": "2198839",
    "end": "2204440"
  },
  {
    "text": "the secrets before we start managing our config declaratively um because we can't check in the unencrypted secrets",
    "start": "2204440",
    "end": "2209960"
  },
  {
    "text": "obviously into the repo so some of the stuff we're doing there yeah so two",
    "start": "2209960",
    "end": "2215599"
  },
  {
    "text": "question expect be always liting into native",
    "start": "2215599",
    "end": "2220839"
  },
  {
    "text": "dark typ specs or Express desire for something",
    "start": "2220839",
    "end": "2226640"
  },
  {
    "text": "like at of",
    "start": "2226640",
    "end": "2234079"
  },
  {
    "text": "do yeah so the question is around open shift and how a lot of the functionalities of open shift um map",
    "start": "2239680",
    "end": "2246040"
  },
  {
    "text": "pretty well onto things we've either wanted or had to build for ourselves um we the thing is you have to um",
    "start": "2246040",
    "end": "2256440"
  },
  {
    "text": "understand that like we this a lot of this has been in development over the past like year year and a half and the facilities we've seen in the various",
    "start": "2256440",
    "end": "2263000"
  },
  {
    "text": "paes that have been on top of kubernetes um open shift day East and those uh many of those they're really amazing and they",
    "start": "2263000",
    "end": "2270040"
  },
  {
    "text": "and they do a lot of great stuff but the amount of um either constraints or coupling we would end up to those with",
    "start": "2270040",
    "end": "2276040"
  },
  {
    "text": "those platforms compar to the amount of value we would get for the specific use cases we had the balance just wasn't",
    "start": "2276040",
    "end": "2282040"
  },
  {
    "text": "there yet um in the future I wouldn't be surprised if a year from now we're on",
    "start": "2282040",
    "end": "2287240"
  },
  {
    "text": "open shift or days or one of these paes right um we're very interested in that space we'd love to do less of this",
    "start": "2287240",
    "end": "2294160"
  },
  {
    "text": "tooling on top ourselves um we would love to migrate to that we just haven't seen something that's ready enough and",
    "start": "2294160",
    "end": "2300560"
  },
  {
    "text": "provides enough for our specific use cases um that that justifies that extra",
    "start": "2300560",
    "end": "2306640"
  },
  {
    "text": "abstraction layer in complexity and kind of to some extent the Restriction that comes with that so we're following all",
    "start": "2306640",
    "end": "2312280"
  },
  {
    "text": "the projects very closely and um we'd be happy to talk to all of them and and",
    "start": "2312280",
    "end": "2317880"
  },
  {
    "text": "yeah um expectation around tency multi- tency well we do have uh all the different microservices running in the",
    "start": "2322800",
    "end": "2328760"
  },
  {
    "text": "same clusters so what we do for that is we just use kubernetes name spaces um and that's been working pretty",
    "start": "2328760",
    "end": "2334480"
  },
  {
    "text": "well y",
    "start": "2334480",
    "end": "2338480"
  },
  {
    "text": "and yeah so um uh the question is how are we doing KU upgrades and are we open",
    "start": "2341400",
    "end": "2348000"
  },
  {
    "start": "2342000",
    "end": "2458000"
  },
  {
    "text": "sourcing Ox proxy in the implier so on upgrades um we basically do the same",
    "start": "2348000",
    "end": "2355680"
  },
  {
    "text": "thing uh gcp do or gke does where we um",
    "start": "2355680",
    "end": "2360880"
  },
  {
    "text": "upgrade our Master components first just by dropping new puppet configs and then we go through one by one and we upgrade",
    "start": "2360880",
    "end": "2366800"
  },
  {
    "text": "our minion just using an RPM upgrade uh which is not what G gka does they",
    "start": "2366800",
    "end": "2371920"
  },
  {
    "text": "generate new VMS um but they do ma upgrade your master kind of for you behind the scenes so upgrades have been",
    "start": "2371920",
    "end": "2379000"
  },
  {
    "text": "pretty clean so far we haven't seen any real issues um we did see an issue going from 1 to0 directly to 138 because there",
    "start": "2379000",
    "end": "2385400"
  },
  {
    "text": "was a bug there but if you just upgrade to the latest 12x then that works fine so um yeah we upgrade the Masters first",
    "start": "2385400",
    "end": "2391440"
  },
  {
    "text": "and then upgrade all the nodes and then for open sourcing OCTA proxy we think the shelf life is pretty short because",
    "start": "2391440",
    "end": "2397880"
  },
  {
    "text": "of Ingress coming out and also most of it's already open source and service load balancer um and so it's probably",
    "start": "2397880",
    "end": "2403079"
  },
  {
    "text": "not worth um the the effort but applier we are actively I don't were you okay",
    "start": "2403079",
    "end": "2408760"
  },
  {
    "text": "you're bugging me on Twitter yeah so we are actively open sourcing he's literally every single day he's working on it he's here somewhere if you want I",
    "start": "2408760",
    "end": "2415160"
  },
  {
    "text": "can I can have you bug him directly um but uh the engineer working on that so",
    "start": "2415160",
    "end": "2420240"
  },
  {
    "text": "but yes it is coming I swear to God yeah you talk about",
    "start": "2420240",
    "end": "2429318"
  },
  {
    "text": "so the so the question is around what's the life cycle of",
    "start": "2448440",
    "end": "2454560"
  },
  {
    "start": "2458000",
    "end": "2590000"
  },
  {
    "text": "yeah so so it mostly goes through the flow of source code um commit your source code push it then once the new",
    "start": "2458440",
    "end": "2464680"
  },
  {
    "text": "image is built sometimes automatically sometimes manually you'll just bump the image uh inside of the uh uh image",
    "start": "2464680",
    "end": "2471400"
  },
  {
    "text": "conditional and then essentially roll that out cluster by cluster we're trying to get it so we can generate a set of",
    "start": "2471400",
    "end": "2477880"
  },
  {
    "text": "templates and then stage those cluster by cluster um and so we have uh something we're rolling out right now",
    "start": "2477880",
    "end": "2483440"
  },
  {
    "text": "internally in the repo where um we're able to make that distinction but but yeah there's some complexity there and",
    "start": "2483440",
    "end": "2489359"
  },
  {
    "text": "yeah like I said like we'd love to have this tooling be more broadly available we think that part of synchronizing your",
    "start": "2489359",
    "end": "2495280"
  },
  {
    "text": "specs with uh the Clusters especially different ones is probably one of the",
    "start": "2495280",
    "end": "2500319"
  },
  {
    "text": "biggest areas of development and some what we'd have to what we've had to do the most work for",
    "start": "2500319",
    "end": "2507440"
  },
  {
    "text": "Yeahs",
    "start": "2508240",
    "end": "2511240"
  },
  {
    "text": "comp yeah so the question around compliance auditing um currently we're",
    "start": "2514520",
    "end": "2519960"
  },
  {
    "text": "really excited about the cube audit log which I think was either released in 14 or is going to be released in 15 um",
    "start": "2519960",
    "end": "2525400"
  },
  {
    "text": "which has a proper audit log of all the actions in the meantime we use um like",
    "start": "2525400",
    "end": "2530680"
  },
  {
    "text": "the authorization web hook to log every single thing going on um which was quite clui but it worked um I think that area",
    "start": "2530680",
    "end": "2538560"
  },
  {
    "text": "is is new and nent and needs a lot of work and I'm really excited about the work that's been going on there but yeah",
    "start": "2538560",
    "end": "2544640"
  },
  {
    "text": "essentially right now like we don't even have it yet in gred into our uh ldap um",
    "start": "2544640",
    "end": "2549880"
  },
  {
    "text": "so we are manually creating user accounts and then manually assigning those Nam spaces but we're going to move cor has done a bunch of work on um",
    "start": "2549880",
    "end": "2556839"
  },
  {
    "text": "identity providers and integrating cube with that so we're going to um move to that for single sign on and like ldap um",
    "start": "2556839",
    "end": "2564440"
  },
  {
    "text": "uh compatibility and then we're also going to move to rbac from ABAC uh which is the um Red Hat contributed uh or at",
    "start": "2564440",
    "end": "2572720"
  },
  {
    "text": "least modeled after um authentication framework uh yeah just may are we are",
    "start": "2572720",
    "end": "2579599"
  },
  {
    "text": "you doing any actually moving from infrastruct private Etc",
    "start": "2579599",
    "end": "2586440"
  },
  {
    "text": "running uh yeah the question is um where are we running clusters so we have three production clusters in production uh",
    "start": "2589640",
    "end": "2596920"
  },
  {
    "start": "2590000",
    "end": "2648000"
  },
  {
    "text": "data centers that we have and we just right now are spinning up one a",
    "start": "2596920",
    "end": "2602000"
  },
  {
    "text": "production one in public Cloud specifically in AWS and we're also looking at gcp and Azure and pretty much all the Cloud providers um as a company",
    "start": "2602000",
    "end": "2609200"
  },
  {
    "text": "we want to become more diverse in the kinds of uh infrastructures we support and so kubernetes gives us the best uh",
    "start": "2609200",
    "end": "2616079"
  },
  {
    "text": "path for that uh generally yeah",
    "start": "2616079",
    "end": "2622960"
  },
  {
    "text": "yeah um I have about well I think I'm 5 minutes over but I think I have 5 minutes until it's 11:50 so unless",
    "start": "2622960",
    "end": "2630280"
  },
  {
    "text": "someone stops me I'm just going to keep going you guys can leave if you want more than welcome to I won't take offense I promise uh go ahead",
    "start": "2630280",
    "end": "2638400"
  },
  {
    "text": "I'm sorry application logs yeah so logs and metrics I think that's also pretty",
    "start": "2645160",
    "end": "2650520"
  },
  {
    "start": "2648000",
    "end": "2735000"
  },
  {
    "text": "unsolved for metrics we use wfront which we're pretty happy with but unfortunately it's a commercial SAS",
    "start": "2650520",
    "end": "2655599"
  },
  {
    "text": "offering um it's not open source but wfront we've been pretty happy with for metrics and we just basically send data",
    "start": "2655599",
    "end": "2660680"
  },
  {
    "text": "points directly to that for logs we use a combination of um of uh hcf",
    "start": "2660680",
    "end": "2667720"
  },
  {
    "text": "and elastic search and um and as well uh Splunk so but the cctl logs integration",
    "start": "2667720",
    "end": "2675480"
  },
  {
    "text": "for logs and STD out is really really nice so we use that for a lot of live debugging now yeah what you do your",
    "start": "2675480",
    "end": "2683240"
  },
  {
    "text": "datab we're doing nothing for our databases in terms of kubernetes um we'd love to uh we want to eventually move",
    "start": "2683240",
    "end": "2689720"
  },
  {
    "text": "everything stateful into kubernetes but probably for the next year or two um we won't be looking at",
    "start": "2689720",
    "end": "2694880"
  },
  {
    "text": "that um our data B are all physical right now",
    "start": "2694880",
    "end": "2700359"
  },
  {
    "text": "yeah",
    "start": "2700359",
    "end": "2703359"
  },
  {
    "text": "Yer um yeah so security within the cluster uh we use Mutual off it's",
    "start": "2706760",
    "end": "2711880"
  },
  {
    "text": "basically our own home roll stuff we just have each service do its own thing uh we'd love to move to something like",
    "start": "2711880",
    "end": "2717880"
  },
  {
    "text": "linkerd would help with that um or some other projects uh but for now we just",
    "start": "2717880",
    "end": "2723480"
  },
  {
    "text": "have mutual off um that we manage ourselves so okay so I think I'll go ahead and wrap up now but I'll be up",
    "start": "2723480",
    "end": "2729640"
  },
  {
    "text": "here if you have any questions so um feel free to come up thank you very much [Applause]",
    "start": "2729640",
    "end": "2737499"
  }
]