[
  {
    "text": "all right good afternoon everybody um I'm glad you joined us for the afternoon nap session",
    "start": "0",
    "end": "7500"
  },
  {
    "text": "I would be napping right now if I wasn't giving a talk because I don't know lunch does that to you but and it's like the",
    "start": "7500",
    "end": "13200"
  },
  {
    "text": "last day of the conference so um well thanks for coming to our talk um my name is Jeremy and this is Todd",
    "start": "13200",
    "end": "19740"
  },
  {
    "text": "we'll introduce ourselves a little bit more but we're going to be talking all about Nats this is going to be really interactive sessions so I'm not going to",
    "start": "19740",
    "end": "25740"
  },
  {
    "text": "just be blowing through a bunch of slides we're actually going to play with gnats together and hopefully we'll get everybody connected in the room so we'll",
    "start": "25740",
    "end": "32040"
  },
  {
    "text": "do some quick intros my name is Jeremy uh I'm a long time gopher and uh so I",
    "start": "32040",
    "end": "38640"
  },
  {
    "text": "like writing go I'm a developer and I've worked in a ton of different Industries but I've also worked on a lot of projects in the go Community",
    "start": "38640",
    "end": "45420"
  },
  {
    "text": "um so if are there if there are any Gophers in the crowd you might recognize some of these projects and currently I'm",
    "start": "45420",
    "end": "50640"
  },
  {
    "text": "working at a company called cenadia where we maintain the gnats project which is a cncf project there's also a",
    "start": "50640",
    "end": "57120"
  },
  {
    "text": "lot of cncf projects that use Nats under the hood which is great so uh you know",
    "start": "57120",
    "end": "62280"
  },
  {
    "text": "I'm sure you can go to the floor and see a bunch of different projects like cosmotic and and to it with a lot of",
    "start": "62280",
    "end": "68340"
  },
  {
    "text": "their projects using gnats under the hood I recently moved back to engineering",
    "start": "68340",
    "end": "73380"
  },
  {
    "text": "from a big product role that I was in for six years because I just missed building things and so I'm really glad to be here and talking with you guys",
    "start": "73380",
    "end": "78900"
  },
  {
    "text": "about Nats because not only is it a really fun technology to talk about it's also really fun technology to demo so we're going to have a lot of fun today",
    "start": "78900",
    "end": "85560"
  },
  {
    "text": "uh Todd you want to introduce yourself sure yeah thanks for everybody for being here so yeah Todd beats a long time",
    "start": "85560",
    "end": "92460"
  },
  {
    "text": "messaging and services and all the things in big Enterprises being an",
    "start": "92460",
    "end": "97560"
  },
  {
    "text": "architect high-tech retail and with sunadia for about a year where",
    "start": "97560",
    "end": "103200"
  },
  {
    "text": "I get to indulge in my passion for an ads which is really exciting awesome awesome so",
    "start": "103200",
    "end": "109500"
  },
  {
    "text": "um friends Nats is an adaptive technology and we'll go more into that but so is this talk because I didn't",
    "start": "109500",
    "end": "115380"
  },
  {
    "text": "know what to do for kubecon there's probably plenty of you that are using Nats and production I don't want you to raise your hands instead I want",
    "start": "115380",
    "end": "120420"
  },
  {
    "text": "everybody to take out their phones take out their laptops get real distracted go to this URL right over here I'll give",
    "start": "120420",
    "end": "126119"
  },
  {
    "text": "you guys just like a minute to go do that it's going to have you fill out your name if you do not want to be somewhat featured in this presentation",
    "start": "126119",
    "end": "132720"
  },
  {
    "text": "then just fill out a random handle or or whatever don't fill it out at all but",
    "start": "132720",
    "end": "137940"
  },
  {
    "text": "this is going to be our fun kind of audience participation part of the talk and we'll roll through it throughout the",
    "start": "137940",
    "end": "143280"
  },
  {
    "text": "talk so go to kubecon22 forcell.app I'm going to roll on over",
    "start": "143280",
    "end": "148500"
  },
  {
    "text": "here as well you should seem to see a screen like this I'm going to put my name in here Jeremy I'm just going to",
    "start": "148500",
    "end": "153780"
  },
  {
    "text": "fill out a couple questions this is going to be kind of our road map for the talk I only have 35 minutes and I have way too many too many slides so we're",
    "start": "153780",
    "end": "160260"
  },
  {
    "text": "going to pick a subset of them and go through them based on where you guys are at as an audience so I've uh I'm using",
    "start": "160260",
    "end": "166739"
  },
  {
    "text": "nascent production I probably want to hear about microservice architectures and obviously the most important",
    "start": "166739",
    "end": "172379"
  },
  {
    "text": "question who is more likely to win an arm melting match is Jeremy let's hope all right cool so we have some uh we",
    "start": "172379",
    "end": "178800"
  },
  {
    "text": "have some results coming in which is great to an overwhelming amount of folks who are here and have never heard of",
    "start": "178800",
    "end": "185040"
  },
  {
    "text": "nats before which is great we're going to talk a lot about what Nats is and how to use it and it actually seems like a",
    "start": "185040",
    "end": "190560"
  },
  {
    "text": "lot of people are interested in that for microservices architectures which is fantastic we've been seeing this trend happening a lot with the companies that",
    "start": "190560",
    "end": "196620"
  },
  {
    "text": "we've been working with that are using that and there's a lot of really cool tools some that you just can't do with Technology's most Technologies today it",
    "start": "196620",
    "end": "203940"
  },
  {
    "text": "looks like it's a pretty close out a pretty close tie on the arm wrestling match but Todd is kind of inching ahead",
    "start": "203940",
    "end": "209459"
  },
  {
    "text": "we'll see what happens by the end of this uh by the end of this conversation that we're having together you guys will also see that there's some logs we sent",
    "start": "209459",
    "end": "215819"
  },
  {
    "text": "your survey information this is all built on naps by the way uh Nats isn't a front-end framework of course I'm using react and all kinds of other stuff over",
    "start": "215819",
    "end": "222480"
  },
  {
    "text": "here but a lot of this information stuff is built on that so we're going to dive in and kind of check out this data that",
    "start": "222480",
    "end": "227760"
  },
  {
    "text": "we just generated for ourselves but before we do that let's just talk a little bit about Nat since we have a",
    "start": "227760",
    "end": "233159"
  },
  {
    "text": "bunch of newbies in the room so at sanidia and and at the core of like the Nats project and its design is this idea",
    "start": "233159",
    "end": "239340"
  },
  {
    "text": "about rethinking connectivity meaning we get to rethink or I mean what would the world look like if we rethought some of",
    "start": "239340",
    "end": "245400"
  },
  {
    "text": "the core fundamentals about what it means for machines to talk to each other and what it means for users to interact with machines and if we rethought that",
    "start": "245400",
    "end": "252239"
  },
  {
    "text": "what kind of new tooling would and ideas would come out of it and so I want you guys to kind of come in with a come into",
    "start": "252239",
    "end": "257940"
  },
  {
    "text": "this with an open mind and know that there's maybe some new types of solutions and new types of thinking that",
    "start": "257940",
    "end": "263639"
  },
  {
    "text": "we can adopt um in order to connect everything better and so multi-cloud and",
    "start": "263639",
    "end": "269520"
  },
  {
    "text": "Edge which has obviously been a huge topic here at this kubecon is is really driving a massive transformation and I",
    "start": "269520",
    "end": "276419"
  },
  {
    "text": "want to talk about some of the ways that our current Solutions don't really live up to some of the challenges that we",
    "start": "276419",
    "end": "281580"
  },
  {
    "text": "have because our expectations are changing of where our data should be of where our compute should be being closer",
    "start": "281580",
    "end": "287160"
  },
  {
    "text": "to who needs it and that's basically the whole theme around Edge and there's a whole ton of new problems that kind of",
    "start": "287160",
    "end": "292919"
  },
  {
    "text": "come with that where we're now going okay we have this big thing in our Cloud we've kind of figured out that hat out or we've kind of you know gotten used to",
    "start": "292919",
    "end": "299880"
  },
  {
    "text": "what that looks like and now Edge is you know creating some new problems so some of the limitations of today's",
    "start": "299880",
    "end": "305220"
  },
  {
    "text": "technology is that we we use DNS and host names and IP to discover machines",
    "start": "305220",
    "end": "310680"
  },
  {
    "text": "right and because of that we we have kind of these one-to-one communication patterns",
    "start": "310680",
    "end": "315900"
  },
  {
    "text": "um and and for the most part if a reason things like HTTP um we're doing this kind of like poll based request and reply semantics sure",
    "start": "315900",
    "end": "323100"
  },
  {
    "text": "we have some other technologies that are doing some streaming and some push and everything like that but it's more layers on top of the same thing",
    "start": "323100",
    "end": "330479"
  },
  {
    "text": "we also have adopted this kind of perimeter-based security hey I'm going to just throw all my stuff in like a VPC and everything will be okay and I think",
    "start": "330479",
    "end": "336960"
  },
  {
    "text": "many of us who have done that have learned that there's actually new problems that come with that especially when you're going to go outside of the scope of your VPC whether it's for",
    "start": "336960",
    "end": "343680"
  },
  {
    "text": "policy reasons whether it's for partnership reasons or whether it just makes sense to be able to have um separate networks in those cases",
    "start": "343680",
    "end": "350460"
  },
  {
    "text": "we've also gotten so used to location dependent back-ends right our typical kind of cloud approach is to say cool we",
    "start": "350460",
    "end": "357180"
  },
  {
    "text": "have these horizontally scalable stateless services and then a centralized like database or backend to that and as soon as you try to spread",
    "start": "357180",
    "end": "363900"
  },
  {
    "text": "some of these stateless Services closer to the requester now you have the problem of latency back to the actual",
    "start": "363900",
    "end": "369000"
  },
  {
    "text": "database or data store itself and so um these are some new problems that we have to solve when we start moving our",
    "start": "369000",
    "end": "375180"
  },
  {
    "text": "compute we also have to consider what does it look like for us to move and distribute our data",
    "start": "375180",
    "end": "380460"
  },
  {
    "text": "and again all this stuff is kind of built on this like HTTP one-to-one communication making the assumption that",
    "start": "380460",
    "end": "387360"
  },
  {
    "text": "you know machines can only talk to each other directly right it's like almost like you know we have cell phones today",
    "start": "387360",
    "end": "393120"
  },
  {
    "text": "and I can go out on Twitter and I could say you know Twitter's kind of like this town hall where I can say hey I'm",
    "start": "393120",
    "end": "398880"
  },
  {
    "text": "putting something out into the world whoever's interested who's ever subscribed to me can can go see that information and do what they want with",
    "start": "398880",
    "end": "404460"
  },
  {
    "text": "it um but in a lot of ways these Technologies are kind of stuck back with phones and address books and me",
    "start": "404460",
    "end": "410460"
  },
  {
    "text": "remembering what people's phone numbers are looking up in an address book and calling them one by one no group calls no Zoom no more like collaboration just",
    "start": "410460",
    "end": "417300"
  },
  {
    "text": "one to one and so this is where I want to introduce Nats right so what is gnats now this",
    "start": "417300",
    "end": "424500"
  },
  {
    "text": "can't be a kubecon without a buzzword soup paragraph here so",
    "start": "424500",
    "end": "429539"
  },
  {
    "text": "um Nats is an open source high performance messaging system and connective Fabric and really what the",
    "start": "429539",
    "end": "434940"
  },
  {
    "text": "project aims to do is to simplify the number of technologies that you use for your services to communicate all while",
    "start": "434940",
    "end": "440220"
  },
  {
    "text": "empowering you to build systems that are globally available multi-cloud multi-geo and highly adapted to change in scale",
    "start": "440220",
    "end": "446460"
  },
  {
    "text": "now I know that seems like a lot but what we've actually done with Nats is really hone in on what it looks like to",
    "start": "446460",
    "end": "451620"
  },
  {
    "text": "communicate we're not trying to handle orchestration or compute a lot of those are solved problems and a lot of you",
    "start": "451620",
    "end": "457380"
  },
  {
    "text": "guys have already adopted much of that but we want to handle the communication bit which we think gets kind of thrown",
    "start": "457380",
    "end": "462960"
  },
  {
    "text": "under the rug a little bit and not really discussed Okay so what does Nas do well one of the things",
    "start": "462960",
    "end": "470160"
  },
  {
    "text": "that it solves for is this idea of location independent addressing meaning you don't use DNS you don't use IP",
    "start": "470160",
    "end": "475979"
  },
  {
    "text": "addresses to be able to have your services communicate with each other right we um we can now use these kind of",
    "start": "475979",
    "end": "481919"
  },
  {
    "text": "subject strings which I'll show you in a sec and uh they can communicate with each other and not have to know where",
    "start": "481919",
    "end": "487560"
  },
  {
    "text": "these particular services are in the world we also introduced this idea",
    "start": "487560",
    "end": "492960"
  },
  {
    "text": "um or we've implemented this long-standing idea of end-to-end communications meaning we're not just",
    "start": "492960",
    "end": "498599"
  },
  {
    "text": "necessarily talking about one to one but the flexibility of everything in between everything talking to everything and",
    "start": "498599",
    "end": "505259"
  },
  {
    "text": "everything talking to some things and I'll show you how that's kind of expressed inside of nats",
    "start": "505259",
    "end": "511199"
  },
  {
    "text": "we are also pushed and pole based so somebody can go request data you know ask a question and get an answer back or",
    "start": "511199",
    "end": "518279"
  },
  {
    "text": "they can have something pushed to them I'm interested in a particular topic and I want that pushed to me",
    "start": "518279",
    "end": "524880"
  },
  {
    "text": "we also have this idea of decentralized and secure multi-tenancy um so we really wanted to design Nats to",
    "start": "524880",
    "end": "531720"
  },
  {
    "text": "be truly multi-tenant meaning that different completely different organizations can co-exist on a single Nat system and and still have this their",
    "start": "531720",
    "end": "538920"
  },
  {
    "text": "security requirements met and this works really really well for organizations where you know you don't have to",
    "start": "538920",
    "end": "545279"
  },
  {
    "text": "necessarily tune your Nats deployment to your specific use case you deploy Nats",
    "start": "545279",
    "end": "551100"
  },
  {
    "text": "um you know in in one way and it works for all sorts of different use cases all sorts of different tenants that can do",
    "start": "551100",
    "end": "556680"
  },
  {
    "text": "whatever they want and lastly and we'll touch on this a lot more is this idea of intelligent",
    "start": "556680",
    "end": "562620"
  },
  {
    "text": "persistence that um that we can you know if we store our messages in a globally",
    "start": "562620",
    "end": "567720"
  },
  {
    "text": "ordered set of messages we can actually do some very interesting things around how we replicate those across the globe",
    "start": "567720",
    "end": "573240"
  },
  {
    "text": "and how we express different types of data structures high level on top of that things like key value stores and",
    "start": "573240",
    "end": "578640"
  },
  {
    "text": "object stores all from this like Atomic unit of a message being stored and persisted",
    "start": "578640",
    "end": "584820"
  },
  {
    "text": "lastly Nats operates very easily mind you on a global scale meaning that you",
    "start": "584820",
    "end": "590459"
  },
  {
    "text": "can run in multiple clouds you could run in multiple data centers multiple regions and have all these things",
    "start": "590459",
    "end": "596220"
  },
  {
    "text": "connected and acting as one system punching through and all these kinds of different networks and your public",
    "start": "596220",
    "end": "602279"
  },
  {
    "text": "clouds extending all the way to the edge where you can run this thing on a Raspberry Pi zero and and be able to",
    "start": "602279",
    "end": "609540"
  },
  {
    "text": "have that operate as a single you know large organism we have customers doing",
    "start": "609540",
    "end": "615120"
  },
  {
    "text": "all kinds of really awesome things from constellations of leaf nodes and all kinds of crazy stuff to solve problems",
    "start": "615120",
    "end": "621660"
  },
  {
    "text": "at the edge and that just kind of proves out that you know Nats has this global scale that can that can is actually not",
    "start": "621660",
    "end": "627959"
  },
  {
    "text": "too bad to set up okay so on the more practical side before I kind of show you guys what Nat",
    "start": "627959",
    "end": "634740"
  },
  {
    "text": "is Nats is a simple client server architecture meaning we have an app server that you pull up that you can",
    "start": "634740",
    "end": "640320"
  },
  {
    "text": "cluster and super cluster and all kinds of fun stuff and that's written in go it's really easy to deploy we have",
    "start": "640320",
    "end": "646320"
  },
  {
    "text": "containers we support kubernetes obviously and um and uh but we also support putting it on bare metal if you",
    "start": "646320",
    "end": "652980"
  },
  {
    "text": "really wanted to um it's really about the flexibility here um and then on the client side you know",
    "start": "652980",
    "end": "659339"
  },
  {
    "text": "you can't solve for a big communication problem unless you support a bunch of different languages so we have 40 plus client libraries to work in and all kind",
    "start": "659339",
    "end": "667260"
  },
  {
    "text": "all of the major languages that people use to then connect to Nats",
    "start": "667260",
    "end": "672779"
  },
  {
    "text": "so I wanted to show you guys kind of an outscore demo and what it is again I said NASA is really fun and easy to demo",
    "start": "672779",
    "end": "679440"
  },
  {
    "text": "um and let's hope that that's true we're going to pray to the demo gods for a second and see if this conference Wi-Fi",
    "start": "679440",
    "end": "685200"
  },
  {
    "text": "can really uh work it so it looks like Todd's still well no it looks like I've inched out Todd a little bit on the on",
    "start": "685200",
    "end": "690899"
  },
  {
    "text": "the arm wrestling match that's great um so let's go over uh what Nat's core is",
    "start": "690899",
    "end": "698060"
  },
  {
    "text": "so Matt's core is basic fire and forget message publishing",
    "start": "699060",
    "end": "704579"
  },
  {
    "text": "um we actually have a CLI that we've built and go called Nats where you can interact with a Nat server as a client",
    "start": "704579",
    "end": "710579"
  },
  {
    "text": "and this is really fun for doing pocs and just kind of showing you the attributes of how Nas works now",
    "start": "710579",
    "end": "716040"
  },
  {
    "text": "can everybody see that all right are we good okay I don't put another survey if you can see the screen or anything okay",
    "start": "716040",
    "end": "721800"
  },
  {
    "text": "okay um so the way Nats works is right now I have a default context which means I",
    "start": "721800",
    "end": "727440"
  },
  {
    "text": "have to fire up an app server and that server is very hard to fire up you just type in that server and you get it running",
    "start": "727440",
    "end": "733160"
  },
  {
    "text": "now to interact with the NAT server Nats has kind of this core Atomic unit of a",
    "start": "733160",
    "end": "738839"
  },
  {
    "text": "message and you can publish And subscribe to these messages but you could also do other patterns like request reply fan and fan out message",
    "start": "738839",
    "end": "745079"
  },
  {
    "text": "persistence and streaming so I'm going to show you guys what it looks like to subscribe to a message I'm just going to",
    "start": "745079",
    "end": "751320"
  },
  {
    "text": "say Hello dot star this is subject-based addressing meaning the star is a wild card for that particular token and so I",
    "start": "751320",
    "end": "757920"
  },
  {
    "text": "could put anything I wanted there but it's going to match to that particular subject and then I'm going to reply or",
    "start": "757920",
    "end": "763320"
  },
  {
    "text": "I'm not going to reply to anything I'm just going to subscribe to the hello subject over here I'm going to say Nat's",
    "start": "763320",
    "end": "768480"
  },
  {
    "text": "Pub uh hello Dot Jeremy and let's just throw",
    "start": "768480",
    "end": "773519"
  },
  {
    "text": "a bunch of them in there count I don't know a thousand uh whoops I need to actually publish a",
    "start": "773519",
    "end": "778800"
  },
  {
    "text": "payload now payloads in Nats is anything that you want to send you know to that message that and it could be anything",
    "start": "778800",
    "end": "784440"
  },
  {
    "text": "we're payload agnostic meaning it just could be a string it'd be Json bson Proto you know whatever really you want",
    "start": "784440",
    "end": "791160"
  },
  {
    "text": "whatever whatever kind of Suits you're fancy we have no opinions about what the data format is so I could send a",
    "start": "791160",
    "end": "796800"
  },
  {
    "text": "thousand messages and it's actually pretty quick to show you guys kind of the speed of nats because I say it's high performance but I guess you could",
    "start": "796800",
    "end": "802860"
  },
  {
    "text": "say anything's high performance nowadays but we have a Nats bench command and I could say I want one subscriber and I",
    "start": "802860",
    "end": "810120"
  },
  {
    "text": "want one publisher and I want to send it to the hello subject and messages",
    "start": "810120",
    "end": "817200"
  },
  {
    "text": "and to get a good sample size I think that you might need one more zero I don't know that was too fast let's put",
    "start": "817200",
    "end": "822360"
  },
  {
    "text": "another zero on there um there we go okay so as you guys can see um we're publishing this is locally on",
    "start": "822360",
    "end": "829200"
  },
  {
    "text": "my um on my M1 MacBook but it's 7.3 messages a second it's pretty good",
    "start": "829200",
    "end": "835680"
  },
  {
    "text": "um and again you can cluster these for slightly more performance and everything and durability and things like that",
    "start": "835680",
    "end": "841019"
  },
  {
    "text": "um Nats also has this idea of request reply so I can say Nats uh reply let me",
    "start": "841019",
    "end": "847079"
  },
  {
    "text": "get rid of this and that's reply to hello.star again this time I'm just",
    "start": "847079",
    "end": "852480"
  },
  {
    "text": "going to say reply with an echo but I could reply with whatever I wanted to this is kind of your typical HTTP request reply if you can think about",
    "start": "852480",
    "end": "859019"
  },
  {
    "text": "that um and then I could say Nat's request Hello",
    "start": "859019",
    "end": "864180"
  },
  {
    "text": "dot Jeremy and pass in a payload hi and you can see I get a response back",
    "start": "864180",
    "end": "871079"
  },
  {
    "text": "and so even though this is all kind of Pub sub under the hood and this is all asynchronous communication you also get",
    "start": "871079",
    "end": "876120"
  },
  {
    "text": "these very easy semantics both in the client sdks and inside of the CLI to be able to build little bits of",
    "start": "876120",
    "end": "883680"
  },
  {
    "text": "microservices on this because now you kind of have this mixed pattern development which we'll talk about in a",
    "start": "883680",
    "end": "888839"
  },
  {
    "text": "sec when it comes to microservices um so that's kind of a high level demo",
    "start": "888839",
    "end": "894540"
  },
  {
    "text": "of Nat's core now let's jump into why nuts is good for microservices and then we'll close out with some naps jet",
    "start": "894540",
    "end": "900420"
  },
  {
    "text": "stream just because it's really cool and I I want everybody who's developing microservices to be able to kind of adopt something like a durable message",
    "start": "900420",
    "end": "906060"
  },
  {
    "text": "queue or persistence or anything like that um actually before we move on from that's core does everybody still have",
    "start": "906060",
    "end": "912240"
  },
  {
    "text": "their window up by the way if you just go back to that URL you can hit refresh it's local storage so I'll pop you right",
    "start": "912240",
    "end": "917639"
  },
  {
    "text": "back up everybody whip whip your phone or laptop out again we'll have some fun here so I'm going to say Nats context",
    "start": "917639",
    "end": "925380"
  },
  {
    "text": "select you guys were all interacting with an app server in Austin Texas it's",
    "start": "925380",
    "end": "930899"
  },
  {
    "text": "our demo server so I'm going to actually log into this demo server and I'm going to say just to kind of show you guys one",
    "start": "930899",
    "end": "937440"
  },
  {
    "text": "more thing which is this kind of idea of Q groups and load balancing and everything like that as well as",
    "start": "937440",
    "end": "943260"
  },
  {
    "text": "end-to-end communication so I'm going to quickly say",
    "start": "943260",
    "end": "948300"
  },
  {
    "text": "um that's kubecon dot roll call and I'll publish that and I'm going to",
    "start": "948300",
    "end": "955079"
  },
  {
    "text": "say replies say how many replies I'm expecting back now HTTP can't really do this they can't",
    "start": "955079",
    "end": "961260"
  },
  {
    "text": "say give me an endpoint and then give me all the people who care about this endpoint they're just not how it works right but an end-to-end communication",
    "start": "961260",
    "end": "967440"
  },
  {
    "text": "you can uh when you guys are logged into that you're actually subscribed to uh this topic and I can say zero and I'll",
    "start": "967440",
    "end": "974279"
  },
  {
    "text": "just wait for a timeout whoops would I do wrong let's see let's go over here",
    "start": "974279",
    "end": "981000"
  },
  {
    "text": "see what I did wrong uh",
    "start": "981000",
    "end": "986399"
  },
  {
    "text": "oh yeah whoops gnats thank you that's request kubecon.roll call reply zero look it I",
    "start": "986399",
    "end": "994079"
  },
  {
    "text": "got everybody's name some people more than once um but yeah everybody's name in here which is pretty cool",
    "start": "994079",
    "end": "999779"
  },
  {
    "text": "um and you probably saw it in your log but you've received that message and then you responded to it if you scroll down I can go do that again just to show",
    "start": "999779",
    "end": "1006079"
  },
  {
    "text": "you guys but we have a lot of people in the room that are logged in which is pretty cool and because it's going through that demo server that's why you",
    "start": "1006079",
    "end": "1011240"
  },
  {
    "text": "see that rtt is uh at like you know sometimes one second sometimes a milliseconds but if an app server is",
    "start": "1011240",
    "end": "1017660"
  },
  {
    "text": "very close to you and this is a perfect example of what it looks like to be at the edge um these would actually be you know very",
    "start": "1017660",
    "end": "1024260"
  },
  {
    "text": "much sub millisecond response times um I could do one more let's do uh an",
    "start": "1024260",
    "end": "1029900"
  },
  {
    "text": "idea of load balancing so you guys are all still subscribed to the same subject but I want to load balance it between all of you guys now typically you'd have",
    "start": "1029900",
    "end": "1035360"
  },
  {
    "text": "to fire up a load balancer put everybody behind a load balancer but Nats actually does that automatically I could say kubecon.lottery because I only want one",
    "start": "1035360",
    "end": "1042380"
  },
  {
    "text": "person but I want it randomly chosen I'm going to get rid of this reply we're going to say",
    "start": "1042380",
    "end": "1047959"
  },
  {
    "text": "okay M whoever m is that's in the room won the lottery what do you see on your screen",
    "start": "1047959",
    "end": "1053360"
  },
  {
    "text": "you don't have to raise your hand or anything like that but hopefully some confetti should fall from the screen congratulations you've run you've won",
    "start": "1053360",
    "end": "1059960"
  },
  {
    "text": "the Nats Lottery awesome um cool so that is a high level overview of nats let's get back into",
    "start": "1059960",
    "end": "1067280"
  },
  {
    "text": "um Nats for microservices so just as a high level overview again of",
    "start": "1067280",
    "end": "1073400"
  },
  {
    "text": "nats core fire and forget message publishing it's really fast we all saw that in in the bench",
    "start": "1073400",
    "end": "1079039"
  },
  {
    "text": "um and this idea of flexible subject-based addressing with wild cards being able to kind of mux and all of",
    "start": "1079039",
    "end": "1084140"
  },
  {
    "text": "your uh all of your different subjects and create a subject hierarchy that makes it really great for being able to",
    "start": "1084140",
    "end": "1089780"
  },
  {
    "text": "discover you know what you need to do with that data and again payload agnostic so whatever format you want to",
    "start": "1089780",
    "end": "1095240"
  },
  {
    "text": "use I just threw strings around here but you could use whatever kind of format you want",
    "start": "1095240",
    "end": "1100340"
  },
  {
    "text": "um as far as this kind of like multi-pattern approach we support that request reply publish And subscribe fan",
    "start": "1100340",
    "end": "1106760"
  },
  {
    "text": "in and fan out for typical Pub sub um and then this load balancing like I just said with the lottery you've got",
    "start": "1106760",
    "end": "1112940"
  },
  {
    "text": "free load balancing via this idea called Q groups um okay so now let's Choose Your Own Adventure",
    "start": "1112940",
    "end": "1119299"
  },
  {
    "text": "Time and since everybody was interested in microservice architectures let's talk a little bit about that now",
    "start": "1119299",
    "end": "1125240"
  },
  {
    "text": "what when I think about what makes a good architecture you know when I was a developer it",
    "start": "1125240",
    "end": "1131120"
  },
  {
    "text": "almost always seemed to be like oh yeah it needed to be extensible we need to be able to maintain it but there's all these other properties that really",
    "start": "1131120",
    "end": "1137299"
  },
  {
    "text": "matter and I feel like this resonates a lot with um of the you know kubernetes and cncf crew is that there's so much",
    "start": "1137299",
    "end": "1144020"
  },
  {
    "text": "more to application development and architectures than just making it maintainable making it resilient and",
    "start": "1144020",
    "end": "1149780"
  },
  {
    "text": "secure observable extensible and adaptive to change and I want to talk a little bit about how Nats approaches each of these",
    "start": "1149780",
    "end": "1156080"
  },
  {
    "text": "so in terms of resilience we talked about this client server architecture um the coolest part is and I didn't demo",
    "start": "1156080",
    "end": "1161900"
  },
  {
    "text": "this I really should have but um clients self-heal meaning if a server goes offline especially if you're in a",
    "start": "1161900",
    "end": "1168200"
  },
  {
    "text": "clustered mode the client already knows about the server's peers and automatically connects to that peer it",
    "start": "1168200",
    "end": "1173600"
  },
  {
    "text": "does it's done so very transparently for you we actually fail over like entire clusters as well I wish I had a million",
    "start": "1173600",
    "end": "1180020"
  },
  {
    "text": "minutes for a demo but I I I I can't I probably could show you guys at some point if you come up to me or anything",
    "start": "1180020",
    "end": "1186020"
  },
  {
    "text": "like that how we failover entire clusters like if an entire region goes down all those clients move over",
    "start": "1186020",
    "end": "1191419"
  },
  {
    "text": "automatically to the closest region based off of rtt and that's just something that Nats handles automatically for you servers also",
    "start": "1191419",
    "end": "1198080"
  },
  {
    "text": "protect themselves at all costs one of the challenges with building messaging systems is having bad not bad actors but",
    "start": "1198080",
    "end": "1204020"
  },
  {
    "text": "slow consumers that eat up all of your resources and so Nat servers are really trying to be a messaging server that",
    "start": "1204020",
    "end": "1210860"
  },
  {
    "text": "that protects itself at all costs to keep resiliency up so it'll boot out slow applications which means think is",
    "start": "1210860",
    "end": "1216559"
  },
  {
    "text": "they're actually a really good trade-off because we don't want to eat up too many resources on the server side",
    "start": "1216559",
    "end": "1221900"
  },
  {
    "text": "like I said failover is automatic and load balancing comes for free",
    "start": "1221900",
    "end": "1227380"
  },
  {
    "text": "what about this idea of security well we've created a security model in apps that's what we call decentralized",
    "start": "1227419",
    "end": "1234880"
  },
  {
    "text": "meaning that we use we use some cryptography to be able to verify a",
    "start": "1234880",
    "end": "1240860"
  },
  {
    "text": "trust chain which means there's very little that needs to exist on the server we don't store any private keys or anything like that",
    "start": "1240860",
    "end": "1247280"
  },
  {
    "text": "um and we isolate these Nats environments via accounts so you can have an entire Nats cluster for your",
    "start": "1247280",
    "end": "1252799"
  },
  {
    "text": "organization have multiple teams on that cluster doing whatever the heck they want in their world but also having the",
    "start": "1252799",
    "end": "1260240"
  },
  {
    "text": "ability to send data over uh account boundaries which is great so sharing the",
    "start": "1260240",
    "end": "1265580"
  },
  {
    "text": "ideas of streams and persistent streams and services between accounts also enforcing resource limits for tenants so",
    "start": "1265580",
    "end": "1271940"
  },
  {
    "text": "very much in the world of kubernetes saying we want to operate this kubernetes cluster as kind of a public",
    "start": "1271940",
    "end": "1278120"
  },
  {
    "text": "utility for our organization you can do the same with your Nats cluster and creating permissions for each",
    "start": "1278120",
    "end": "1284059"
  },
  {
    "text": "service without server changes which is really really cool so um again this is all cryptographically defined you're",
    "start": "1284059",
    "end": "1290000"
  },
  {
    "text": "able to Mint a JWT that uh that you just give to somebody um and they can then have a secure way",
    "start": "1290000",
    "end": "1296419"
  },
  {
    "text": "of using exactly what you want them to use without having to make any updates to some server user database or anything",
    "start": "1296419",
    "end": "1303380"
  },
  {
    "text": "like that let's talk about location transparency I talked about this a little bit inside of",
    "start": "1303380",
    "end": "1309020"
  },
  {
    "text": "our when we were talking about our subjects but location transparency is a key characteristic of service oriented",
    "start": "1309020",
    "end": "1314960"
  },
  {
    "text": "architectures this is kind of where it came up with when SOA with all the rage the the idea of location transparency",
    "start": "1314960",
    "end": "1321020"
  },
  {
    "text": "really got um got big but it's this idea of temporal decoupling and the consumers of",
    "start": "1321020",
    "end": "1326780"
  },
  {
    "text": "a service don't really know what a Services location is until they located a registry so the the ability to kind of",
    "start": "1326780",
    "end": "1332000"
  },
  {
    "text": "have a late binding to um to a service without knowing its address or anything like that and it",
    "start": "1332000",
    "end": "1338659"
  },
  {
    "text": "gives you this flexibility that allows you to kind of swap out Services rebalance traffic everything like that",
    "start": "1338659",
    "end": "1343820"
  },
  {
    "text": "all the things that you've really liked about a load balancer but just baked in to the construct itself",
    "start": "1343820",
    "end": "1350240"
  },
  {
    "text": "um so because we have location transparency you get free service Discovery with",
    "start": "1350240",
    "end": "1355280"
  },
  {
    "text": "subject-based addressing you can easily move Services between Cloud providers given that they're stateless and they",
    "start": "1355280",
    "end": "1360620"
  },
  {
    "text": "just kind of really care about Nats and you automatically get routed to the closest responder so if I'm asking a",
    "start": "1360620",
    "end": "1367100"
  },
  {
    "text": "question on a particular topic and I'm over here in Detroit and Mike the the",
    "start": "1367100",
    "end": "1372440"
  },
  {
    "text": "person who is closest to me is all the way in California I'll get routed to that but then if I stand up a service",
    "start": "1372440",
    "end": "1377720"
  },
  {
    "text": "that's maybe in Ohio I will automatically start getting responses from that service I don't have to do any",
    "start": "1377720",
    "end": "1383419"
  },
  {
    "text": "more reconfiguration that handles all that for me as a broker you also get this idea of traffic",
    "start": "1383419",
    "end": "1388760"
  },
  {
    "text": "shaping and subject mapping which I don't have time to cover but it's a way for us to configure splitting traffic",
    "start": "1388760",
    "end": "1393980"
  },
  {
    "text": "you know to different weights or rerouting traffic which is great for like rollouts betas and being able to",
    "start": "1393980",
    "end": "1400700"
  },
  {
    "text": "test things let's talk about observability um I might show this in a little while",
    "start": "1400700",
    "end": "1406940"
  },
  {
    "text": "but you can observe all traffic in real time um Nats is just a message broker so I could",
    "start": "1406940",
    "end": "1412820"
  },
  {
    "text": "say I want to subscribe to everything give me everything and then I can go put that in a data store somewhere put it in",
    "start": "1412820",
    "end": "1418100"
  },
  {
    "text": "a stream and uh and you know eventually transform it something that's like Prometheus uh Prometheus compatible",
    "start": "1418100",
    "end": "1424880"
  },
  {
    "text": "which we actually you know can do with a tool that we've created called surveyor so you can gather things like latency",
    "start": "1424880",
    "end": "1431299"
  },
  {
    "text": "metrics on each of your services which is really really neat and you can filter all these metrics again via subjects so",
    "start": "1431299",
    "end": "1437659"
  },
  {
    "text": "we're taking some of these constructs like you know some of these Atomic units like subject-based addressing and we're",
    "start": "1437659",
    "end": "1442880"
  },
  {
    "text": "kind of putting it everywhere like what if you could do your metrics this way and your observability this way what if you could do your services this way or",
    "start": "1442880",
    "end": "1448400"
  },
  {
    "text": "your streams so we're really trying to stretch a lot of the basic concepts of this into something that makes a lot",
    "start": "1448400",
    "end": "1454640"
  },
  {
    "text": "more sense as a whole we also have this idea in terms of extensibility of this like multi-pattern",
    "start": "1454640",
    "end": "1460580"
  },
  {
    "text": "development so again our synchronous request reply and then our asynchronous patterns of publish And subscribe and if",
    "start": "1460580",
    "end": "1467299"
  },
  {
    "text": "you want to persist your data or you want to be able to catch up with your data or you want to be able to do something like service mesh does where",
    "start": "1467299",
    "end": "1472640"
  },
  {
    "text": "it's like Auto retries you could do all of that with being able to persist those messages and and create a policy that",
    "start": "1472640",
    "end": "1478340"
  },
  {
    "text": "works for your particular use case which is awesome so I haven't talked about jet",
    "start": "1478340",
    "end": "1483440"
  },
  {
    "text": "stream yet but you also have the ability to um you know create things like key values and object stores",
    "start": "1483440",
    "end": "1489159"
  },
  {
    "text": "I can be a nerd and talk about Nats all day long but this is kind of what I think about when I think about naps for",
    "start": "1489159",
    "end": "1495620"
  },
  {
    "text": "microservice architectures we want to really stretch Beyond just request reply and going through proxies for everything",
    "start": "1495620",
    "end": "1502159"
  },
  {
    "text": "to talk to each other and instead say can we Embrace more patterns and instead of saying well on the back end we have",
    "start": "1502159",
    "end": "1507919"
  },
  {
    "text": "you know this this kind of persistent message bus and on the front end we just do grpc everywhere like what if we mix",
    "start": "1507919",
    "end": "1514220"
  },
  {
    "text": "some of those and we really tried to pull things off this shelf and use one system to broker all of this information",
    "start": "1514220",
    "end": "1520039"
  },
  {
    "text": "how much better would something like collecting observability metrics be",
    "start": "1520039",
    "end": "1525620"
  },
  {
    "text": "okay so I don't have time to look through all these other slides because that's not what we picked but there's",
    "start": "1525620",
    "end": "1530779"
  },
  {
    "text": "one thing that I want to close with and then we can move on to questions because I'm sure I hope some of you guys have some questions",
    "start": "1530779",
    "end": "1536539"
  },
  {
    "text": "um so let's talk a little bit about jet stream so Nat's jet stream is a next-gen",
    "start": "1536539",
    "end": "1543080"
  },
  {
    "text": "persistence layer that's built on top of nats and it allows you to have this temporal decoupling between Publishers",
    "start": "1543080",
    "end": "1549200"
  },
  {
    "text": "and subscribers which basically means the if I'm publishing a message that subscriber doesn't need to be online in",
    "start": "1549200",
    "end": "1554779"
  },
  {
    "text": "order for the subscriber to eventually get it and the way we solve that is by persisting the message either in memory",
    "start": "1554779",
    "end": "1560240"
  },
  {
    "text": "or on disk many of you who have used you know Solutions like hafka know very much",
    "start": "1560240",
    "end": "1565700"
  },
  {
    "text": "all of the fun challenges that come with being able to do this at scale one of the cool thing about things about Nats",
    "start": "1565700",
    "end": "1572120"
  },
  {
    "text": "is by default it is globally scalable so we get to piggyback off of a lot of the",
    "start": "1572120",
    "end": "1577179"
  },
  {
    "text": "attributes that coronats brings us to be able to bring us this type of multi-tenant persistence and so instead",
    "start": "1577179",
    "end": "1583039"
  },
  {
    "text": "of talking to you guys about what jet stream is I want to show you guys what jet stream is and so you guys can visit",
    "start": "1583039",
    "end": "1588440"
  },
  {
    "text": "this natswhiteboard.onrender.com room is kubecon22 if you guys are also staying",
    "start": "1588440",
    "end": "1596059"
  },
  {
    "text": "on that page I'll just navigate it to you automatically um if I can let's see",
    "start": "1596059",
    "end": "1602559"
  },
  {
    "text": "I'll navigate you with Nats let's try that so I will say",
    "start": "1602559",
    "end": "1607900"
  },
  {
    "text": "Nats let's see I'm in demo I'm going to say Nats kubecon.navignavigate [Music]",
    "start": "1607900",
    "end": "1615829"
  },
  {
    "text": "and I'll paste this in nope that's",
    "start": "1616220",
    "end": "1621679"
  },
  {
    "text": "Pub I don't remember that there we go some of you guys should be already moved over",
    "start": "1621679",
    "end": "1626720"
  },
  {
    "text": "there by now feel free to draw on this little whiteboard that we have um",
    "start": "1626720",
    "end": "1632480"
  },
  {
    "text": "I want to see everybody's beautiful drawings um here we go cool awesome um now the fun part about this is this",
    "start": "1632480",
    "end": "1638900"
  },
  {
    "text": "is all in jet stream meaning it's all persisted you can refresh the page and it will load it all up again this is again using our demo server in uh in the",
    "start": "1638900",
    "end": "1645679"
  },
  {
    "text": "Whiteboard but sorry our demo server in uh Texas but uh one thing I can do is",
    "start": "1645679",
    "end": "1651799"
  },
  {
    "text": "like I said I could say Nats sub and I can subscribe to this whole stream I'm going to say I think this is called",
    "start": "1651799",
    "end": "1658940"
  },
  {
    "text": "whiteboard or let's see stream whiteboard and this could give me all of",
    "start": "1658940",
    "end": "1665059"
  },
  {
    "text": "the rooms I don't want all of the rooms so I can filter on that subject I'd say whiteboard Dot kubecon",
    "start": "1665059",
    "end": "1671840"
  },
  {
    "text": "22. I think that's what I called it see how it works is pulling in all of",
    "start": "1671840",
    "end": "1677960"
  },
  {
    "text": "the data locally for me so I can put this on a local stream I could replicate it into a different cluster run to a",
    "start": "1677960",
    "end": "1683419"
  },
  {
    "text": "different Leaf node I wish I could talk about all of those things but we're running out of time but as you can see I'm getting your guys drawings in real",
    "start": "1683419",
    "end": "1689659"
  },
  {
    "text": "time as well which is really cool and this is kind of the ability to observe state I'm pulling from a stream right",
    "start": "1689659",
    "end": "1695779"
  },
  {
    "text": "now so I can just kick it off and I can start it back at the beginning and recreate everything or I could just say give me whatever's happening in real",
    "start": "1695779",
    "end": "1701360"
  },
  {
    "text": "time it doesn't really matter there's a lot of options here but as you can see we're kind of graduating from this kind",
    "start": "1701360",
    "end": "1706940"
  },
  {
    "text": "of core notion of like what does it look like to just send a message around and what does it look like to do that at scale and that what does it look like to",
    "start": "1706940",
    "end": "1712520"
  },
  {
    "text": "store those things at scale and that's the very basics of of nats so I hope you",
    "start": "1712520",
    "end": "1718520"
  },
  {
    "text": "guys had fun drawing um over this fun conference Wi-Fi of",
    "start": "1718520",
    "end": "1724340"
  },
  {
    "text": "course if I brought a server over here closer we'd have much better performance but looks like some people are also",
    "start": "1724340",
    "end": "1729919"
  },
  {
    "text": "deleting which is great um so anyway thank you guys so much for the",
    "start": "1729919",
    "end": "1735260"
  },
  {
    "text": "time I know we have about five minutes and I wanted to make sure I can answer any questions so thank you so much",
    "start": "1735260",
    "end": "1740280"
  },
  {
    "text": "[Applause]",
    "start": "1740280",
    "end": "1745319"
  },
  {
    "text": "my beautiful co-host Todd will uh we'll hand out Mike's to anybody who has questions",
    "start": "1747200",
    "end": "1753880"
  },
  {
    "text": "so this uh this solution kind of Falls",
    "start": "1759799",
    "end": "1764899"
  },
  {
    "text": "within a whole bunch of actual other solutions that are out there you mentioned Kafka this does some of what",
    "start": "1764899",
    "end": "1770299"
  },
  {
    "text": "Kafka does right I see some of the things you know you could do with redis it falls into that right mqtt protocol",
    "start": "1770299",
    "end": "1777020"
  },
  {
    "text": "does is almost identical to this yeah where do you see gnats in that whole range I mean why why would I use Nats",
    "start": "1777020",
    "end": "1783860"
  },
  {
    "text": "over say Kafka yeah um so one of the big reasons we have folks adopting gnats",
    "start": "1783860",
    "end": "1788899"
  },
  {
    "text": "especially at the edge is because they have to put it on smaller and smaller devices um who wants to run Kafka in 10 000",
    "start": "1788899",
    "end": "1796520"
  },
  {
    "text": "Raspberry Pi like devices they're gonna have a bad time and that's usually what we're seeing um so because NASA is small and it can",
    "start": "1796520",
    "end": "1804440"
  },
  {
    "text": "run on very low resources we're seeing that that use case is really great and that's starting to expand to not just",
    "start": "1804440",
    "end": "1810080"
  },
  {
    "text": "the edge but in places where often I see companies that are still using Kafka on",
    "start": "1810080",
    "end": "1815179"
  },
  {
    "text": "the very back end but being having a scale like multi-geo multi-cloud everything like that is a challenge so",
    "start": "1815179",
    "end": "1821360"
  },
  {
    "text": "I'll often see them using Nats kind of on the front end of their stack and maybe putting it still in Kafka because",
    "start": "1821360",
    "end": "1826760"
  },
  {
    "text": "they have a big Legacy of you know data processing pipeline they don't want to get rid of but quite often Nats is like",
    "start": "1826760",
    "end": "1833000"
  },
  {
    "text": "for that scale okay thank you uh one one other quick question a common use cases at least I",
    "start": "1833000",
    "end": "1839240"
  },
  {
    "text": "see in MSA development is a request queue so publish a request and I got a gazillion",
    "start": "1839240",
    "end": "1847179"
  },
  {
    "text": "subscribers but I only want one subscriber to actually actively work that request yep how do you do that in",
    "start": "1847179",
    "end": "1853100"
  },
  {
    "text": "apps yeah so using streams we have a we have a concept called a work queue",
    "start": "1853100",
    "end": "1858200"
  },
  {
    "text": "stream which is very much like a just a durable queue and one thing picks it off at a time under the hood they still use",
    "start": "1858200",
    "end": "1863720"
  },
  {
    "text": "one consumer to kind of keep track of it but multiple subscribers can interact with it and so it's just a type that you",
    "start": "1863720",
    "end": "1869720"
  },
  {
    "text": "configure I didn't get to show how configurable streams are but we have a really cool stream and consumer uh",
    "start": "1869720",
    "end": "1876700"
  },
  {
    "text": "architecture that works really really well for a bunch of different situations so whether you're just trying to do",
    "start": "1876700",
    "end": "1882760"
  },
  {
    "text": "retries or you're trying to do a big durable queue that scales or you're trying to put a key value store all over",
    "start": "1882760",
    "end": "1888500"
  },
  {
    "text": "the world that responds in under 10 milliseconds like you do all of that with the same kind of construct just kind of tuned differently",
    "start": "1888500",
    "end": "1895940"
  },
  {
    "text": "yes yeah we are using an ads today so how does it um uh load balance if you are using a",
    "start": "1895940",
    "end": "1902419"
  },
  {
    "text": "kubernetes node port yeah and so um so the question was how do we load balance when we're using a",
    "start": "1902419",
    "end": "1908360"
  },
  {
    "text": "kubernetes node pool well the fact of the matter is we're um so each one of",
    "start": "1908360",
    "end": "1913700"
  },
  {
    "text": "those each one of those pods essentially would be a client that subscribes to a",
    "start": "1913700",
    "end": "1919580"
  },
  {
    "text": "um to a Nats instance and Nats will be doing the load balancing and so since Nas is getting the message and",
    "start": "1919580",
    "end": "1924860"
  },
  {
    "text": "essentially brokering it for request reply you get all of that load balancing for free okay and one more uh so do we",
    "start": "1924860",
    "end": "1931399"
  },
  {
    "text": "have any maximum Audis that any uh TPS uh then ads will able to support what is",
    "start": "1931399",
    "end": "1937279"
  },
  {
    "text": "the maximum TPS yeah that's highly dependent on your use case and and everything like that but what I like to",
    "start": "1937279",
    "end": "1942919"
  },
  {
    "text": "say is um you know and that's easily push pushes like 60 or floods 60 gigabit",
    "start": "1942919",
    "end": "1948980"
  },
  {
    "text": "gigabit links um if you want it to especially for cornets on a per stream basis we're seeing a lot of people get",
    "start": "1948980",
    "end": "1955220"
  },
  {
    "text": "about like 250 300 000 messages per second persisted and that gets punched down to the disk for every message",
    "start": "1955220",
    "end": "1961760"
  },
  {
    "text": "um and uh but for coronets for just like request reply stuff that's not being persisted I just benched it on my M1 it",
    "start": "1961760",
    "end": "1967520"
  },
  {
    "text": "was like seven point million messages a second I'm sure on beefier Hardware you can push a lot more yeah",
    "start": "1967520",
    "end": "1973899"
  },
  {
    "text": "hi um my question is how a message replay works so what I mean is if subscriber is",
    "start": "1973899",
    "end": "1982399"
  },
  {
    "text": "down and then it comes back up is it ordered like Kafka or yeah so you can",
    "start": "1982399",
    "end": "1988460"
  },
  {
    "text": "order it we also have the con a similar concept to like ordered partitions in Kafka just slightly different but same",
    "start": "1988460",
    "end": "1994880"
  },
  {
    "text": "basic concept um but you that's not out of the box so you don't have to adopt that complexity",
    "start": "1994880",
    "end": "2000340"
  },
  {
    "text": "if you don't want to but you can configure a lot of what retries look like for messages you have a retry",
    "start": "2000340",
    "end": "2006760"
  },
  {
    "text": "window that you can configure on a per consumer basis as well as a back off policy so if you wanted to like actually",
    "start": "2006760",
    "end": "2012940"
  },
  {
    "text": "manually configure per consumer what kind of back off policy you get and how many retries that you you allow it to",
    "start": "2012940",
    "end": "2020260"
  },
  {
    "text": "um then uh you know that's pretty easy to do we also get this question a lot like do you have a dead letter Q we",
    "start": "2020260",
    "end": "2025899"
  },
  {
    "text": "don't officially support a dead letter q but we do have advisories for when something maxes out on its retries so",
    "start": "2025899",
    "end": "2032019"
  },
  {
    "text": "you can easily create your own dead letter queue part of the Nat's philosophy is like we want to create a lot of these constructs but we don't",
    "start": "2032019",
    "end": "2037899"
  },
  {
    "text": "want to like adopt too much Tech debt in the stack so it feels like you're adopting a ton of stuff that you don't",
    "start": "2037899",
    "end": "2043120"
  },
  {
    "text": "need so but it's easy to create one of those yeah so uh it's been compared to Kafka a lot",
    "start": "2043120",
    "end": "2049960"
  },
  {
    "text": "so what I of course what I have to ask is if there's any migration plan from using Kafka to using Nets like any sort",
    "start": "2049960",
    "end": "2057339"
  },
  {
    "text": "of automation that's been done to kind of streamline that migration or is this",
    "start": "2057339",
    "end": "2063040"
  },
  {
    "text": "like uh maybe a bit too difficult and more suited if you just have a like a",
    "start": "2063040",
    "end": "2068560"
  },
  {
    "text": "Greenfield project yeah um that's a great question and so we do have a Nats Kafka connector so you can kind of draw",
    "start": "2068560",
    "end": "2075460"
  },
  {
    "text": "the line on where you want to pick up some of the applications that are using Nats and then some that are still using",
    "start": "2075460",
    "end": "2081700"
  },
  {
    "text": "Kafka and that's kind of where we try to guide people who are doing it either they're replacing Kafka in a lot of ways",
    "start": "2081700",
    "end": "2087940"
  },
  {
    "text": "but there might be Kafka still living somewhere and that's where they'll use that connector uh we have one question",
    "start": "2087940",
    "end": "2093460"
  },
  {
    "text": "over here oh okay",
    "start": "2093460",
    "end": "2097500"
  },
  {
    "text": "yep",
    "start": "2104140",
    "end": "2106680"
  },
  {
    "text": "yeah it could have",
    "start": "2110640",
    "end": "2114299"
  },
  {
    "text": "yep yeah I wrote that little react demo on the plane it's actually super easy to write it's like 100 lines of react and",
    "start": "2120700",
    "end": "2126280"
  },
  {
    "text": "so um it uh but you're right so as far as like exactly once guarantees we do",
    "start": "2126280",
    "end": "2131560"
  },
  {
    "text": "support that so we support a bunch of different qualities of service and exactly ones obviously comes with a lot",
    "start": "2131560",
    "end": "2136780"
  },
  {
    "text": "of trade-offs as well because it's um it involves a lot of acknowledge acting and knacking and making sure the message",
    "start": "2136780",
    "end": "2142900"
  },
  {
    "text": "really does get through but that's all pretty easy to set up on a when you're configuring a stream and it's consumer",
    "start": "2142900",
    "end": "2149560"
  },
  {
    "text": "and by the way we divorced streams and consumers a little bit from each other so you can set up a stream and have like",
    "start": "2149560",
    "end": "2155020"
  },
  {
    "text": "you know exactly once delivery for this consumer of this stream over here and a different quality service for this kind",
    "start": "2155020",
    "end": "2160180"
  },
  {
    "text": "of Street this this consumer over here and it's all still the same data set which is really neat yeah yes",
    "start": "2160180",
    "end": "2166839"
  },
  {
    "text": "um so earlier you did like a navigate and a couple of other requests that you sent were those handled by like the",
    "start": "2166839",
    "end": "2172000"
  },
  {
    "text": "react app that you wrote or are there built in like the SDK stuff that that handles us from nuts yeah so those are",
    "start": "2172000",
    "end": "2177220"
  },
  {
    "text": "all that was just part of the react app so I just it's a very easy subscribe to this topic and then go do something the",
    "start": "2177220",
    "end": "2183099"
  },
  {
    "text": "client applications are very easy to write if you're used to writing like anything any sort of web application",
    "start": "2183099",
    "end": "2188200"
  },
  {
    "text": "with handlers it's very similar to that yeah it's very easy to build reactive applications in that way",
    "start": "2188200",
    "end": "2193599"
  },
  {
    "text": "all right I think we are at time feel free to come up to me if you guys have any more questions I love talking about this stuff but thank you so much for",
    "start": "2193599",
    "end": "2199900"
  },
  {
    "text": "attending really appreciate it",
    "start": "2199900",
    "end": "2203160"
  }
]