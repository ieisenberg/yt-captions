[
  {
    "text": "okay okay are we ready I guess oh wow that's creepy that is weird just go ready",
    "start": "410",
    "end": "9870"
  },
  {
    "text": "everything's okay hi everybody let's do a clock I work on service catalog which",
    "start": "9870",
    "end": "18570"
  },
  {
    "text": "is a implementation of open service broker the platform side and I'm giving",
    "start": "18570",
    "end": "26910"
  },
  {
    "text": "some information on it that is more in-depth if you want a demo you should",
    "start": "26910",
    "end": "31980"
  },
  {
    "text": "have you should get been your time machine and go back to yesterday or earlier today and then watch your demo",
    "start": "31980",
    "end": "37530"
  },
  {
    "text": "there because this is does not contain any demos this is all you know but the details of service catalog it's a",
    "start": "37530",
    "end": "43410"
  },
  {
    "text": "limitation so this can what go several ways I've got you know couple pages of slides I can you know open a text editor",
    "start": "43410",
    "end": "50100"
  },
  {
    "text": "and we can go to town on the code but you know at any point please ask",
    "start": "50100",
    "end": "56460"
  },
  {
    "text": "questions but as it is I'm just gonna go through the slides be good okay I don't",
    "start": "56460",
    "end": "64650"
  },
  {
    "text": "see Michael but he did the intro yesterday I'm Morgan my name is Morgan I work at IBM that is my email and my",
    "start": "64650",
    "end": "72270"
  },
  {
    "text": "twitting so feel free to send me an email or tweet at me later okay so I've",
    "start": "72270",
    "end": "81390"
  },
  {
    "text": "sort of separated this into three sections basically you know what is the",
    "start": "81390",
    "end": "87689"
  },
  {
    "text": "current state of the code and the project right now then you know sort of",
    "start": "87689",
    "end": "93479"
  },
  {
    "text": "a retro pseudo retro on steps we took to get where we are and then sort of future",
    "start": "93479",
    "end": "100049"
  },
  {
    "text": "possibilities of you know how do we get to GA the road to GA that kind of stuff",
    "start": "100049",
    "end": "105920"
  },
  {
    "text": "good okay so this was so so I'm the the",
    "start": "105920",
    "end": "114360"
  },
  {
    "text": "where we are section I'm gonna discuss sort of how we interact with the open service broker and our dealings with the",
    "start": "114360",
    "end": "121979"
  },
  {
    "text": "open service broker working group I'm going to talk about the the types we have in the API the resources that we",
    "start": "121979",
    "end": "131099"
  },
  {
    "text": "have talked about a little bit about the build we an API server we have a controller and we have a neat nice little CLI that is",
    "start": "131099",
    "end": "138600"
  },
  {
    "text": "relatively recent edition okay so open service broker API that comes from Cloud",
    "start": "138600",
    "end": "144510"
  },
  {
    "text": "Foundry basically as a platform side and a broker side and the broker services",
    "start": "144510",
    "end": "150090"
  },
  {
    "text": "this API with five different resources many in our service catalog group also",
    "start": "150090",
    "end": "155790"
  },
  {
    "text": "participate in the open service broker API it essentially this this project started out as sort of a lot of people",
    "start": "155790",
    "end": "162510"
  },
  {
    "text": "involved in the OSB group said you know that's all so we're gonna we're going to",
    "start": "162510",
    "end": "167970"
  },
  {
    "text": "be supporting kubernetes in the future and we want to you know have a kubernetes native sort of interface",
    "start": "167970",
    "end": "174930"
  },
  {
    "text": "there and you know we took that to sega architecture and we took that to a lot of the key people and asked them well",
    "start": "174930",
    "end": "181530"
  },
  {
    "text": "how can we go about this so we've got people on both sides and i got to fix a",
    "start": "181530",
    "end": "187560"
  },
  {
    "text": "type over there that's excellent but we've driven a lot of additional",
    "start": "187560",
    "end": "193850"
  },
  {
    "text": "features into OS b or changes into OS b specifically to be able to more",
    "start": "193850",
    "end": "199830"
  },
  {
    "text": "concretely support not just kubernetes but external platforms in general so",
    "start": "199830",
    "end": "205860"
  },
  {
    "text": "google has been a big fan of the json schema and has written a lot of the thought process through that and some of",
    "start": "205860",
    "end": "213330"
  },
  {
    "text": "the code and service for the service catalog we've got a sync bindings which originally the only async stuff was for",
    "start": "213330",
    "end": "220590"
  },
  {
    "text": "instances in progress still is get",
    "start": "220590",
    "end": "225890"
  },
  {
    "text": "cluster ID is one I've worked on for IBM to get a specific ID for clusters in",
    "start": "225890",
    "end": "231510"
  },
  {
    "text": "kubernetes to pass in space of the in in replacement of the like orgs and spaces",
    "start": "231510",
    "end": "237720"
  },
  {
    "text": "concept along with the namespace and then the generic actions one is I think gonna be very popular with broker",
    "start": "237720",
    "end": "244530"
  },
  {
    "text": "authors to do not do do specifically",
    "start": "244530",
    "end": "249630"
  },
  {
    "text": "defined actions that are outside of the you know the five list list get or not",
    "start": "249630",
    "end": "257609"
  },
  {
    "text": "yet but bind to unbind provision deep revision so that adds more actions",
    "start": "257609",
    "end": "262830"
  },
  {
    "text": "backup and restore you know all sorts of different actions that that different brokers when",
    "start": "262830",
    "end": "269620"
  },
  {
    "text": "you write them can sort of adhere to them and say I I support this specific",
    "start": "269620",
    "end": "274950"
  },
  {
    "text": "schema of action ok so we have a",
    "start": "274950",
    "end": "280510"
  },
  {
    "text": "resource model in kubernetes that is kubernetes native it has the same type",
    "start": "280510",
    "end": "287680"
  },
  {
    "text": "of spec and status kind of behavior and basically all the different types mirror",
    "start": "287680",
    "end": "294820"
  },
  {
    "text": "the types that you would see in OSB so we have classes we have instances we",
    "start": "294820",
    "end": "300190"
  },
  {
    "text": "have plans and we have brokers and all",
    "start": "300190",
    "end": "305740"
  },
  {
    "text": "of those things are exposed as actual kubernetes resources so you can use cube",
    "start": "305740",
    "end": "310960"
  },
  {
    "text": "control you can use client go we have a client go that we publish and everything is basically native kubernetes objects",
    "start": "310960",
    "end": "318400"
  },
  {
    "text": "because we wrote our own pei-pei server with the api machinery I basically OSBI is sort of an RPC like",
    "start": "318400",
    "end": "327190"
  },
  {
    "text": "mechanism you know in its use which sort of conflicts with the you know stateful",
    "start": "327190",
    "end": "335550"
  },
  {
    "text": "declarative model that kubernetes uses and I'll go into that more later but just trying to describe the basics so we",
    "start": "335550",
    "end": "344710"
  },
  {
    "text": "have a bill we have a build standard stuff we have Jenkins and Travis right now Travis does our unit and integration",
    "start": "344710",
    "end": "350350"
  },
  {
    "text": "test Jenkins does the end-to-end tests where we provisioned a queue brandies",
    "start": "350350",
    "end": "358360"
  },
  {
    "text": "cluster on GCE and then you know run against it we do publish charts we're still working",
    "start": "358360",
    "end": "366010"
  },
  {
    "text": "on some issues with the sinking of that but they're out there we also publish",
    "start": "366010",
    "end": "371970"
  },
  {
    "text": "images for every a lot of architectures you know power and AM b64 arm and all",
    "start": "371970",
    "end": "380710"
  },
  {
    "text": "the usual stuff including the ones that IBM's got to have we would like to move",
    "start": "380710",
    "end": "387430"
  },
  {
    "text": "to the sort of prow based model in the near food future and get the merge queue",
    "start": "387430",
    "end": "394900"
  },
  {
    "text": "and the image support and kubernetes provisioning from the sort of standard upstream model okay",
    "start": "394900",
    "end": "404270"
  },
  {
    "text": "API server we have an API server it uses reuses all of the standard API machinery",
    "start": "404270",
    "end": "411139"
  },
  {
    "text": "API server generic API server standard kind of thing where we you know you",
    "start": "411139",
    "end": "416419"
  },
  {
    "text": "write the types and then you run the code generator against the types that generates a client that generates conversions it generates defaulters and",
    "start": "416419",
    "end": "425389"
  },
  {
    "text": "so we've we've tried to you know reuse as much as possible from upstream and",
    "start": "425389",
    "end": "432260"
  },
  {
    "text": "we've been fairly successful in achieving that goal and whether or not",
    "start": "432260",
    "end": "439490"
  },
  {
    "text": "that's a good idea at this point in time is up for debate but we've done it it exists if I were to do this again",
    "start": "439490",
    "end": "446060"
  },
  {
    "text": "now I would probably use Paul which rocks API server builder library to do",
    "start": "446060",
    "end": "451789"
  },
  {
    "text": "it but the code is up there if you want",
    "start": "451789",
    "end": "456889"
  },
  {
    "text": "to see that and if you have questions about the defaults the internals you can you know find me on slack again we have",
    "start": "456889",
    "end": "464510"
  },
  {
    "text": "a controller for that we have the same standard design as a standard kubernetes",
    "start": "464510",
    "end": "470539"
  },
  {
    "text": "controller where it's controller manager with multiple internal reconciliation",
    "start": "470539",
    "end": "475700"
  },
  {
    "text": "loops for each individual resource has its own queue and workers and it's multi-threaded and we can have multiple",
    "start": "475700",
    "end": "482770"
  },
  {
    "text": "workers for each individual type and again we use the same client go that we",
    "start": "482770",
    "end": "489680"
  },
  {
    "text": "generated earlier from the types go inside of it so everything is fully type",
    "start": "489680",
    "end": "494810"
  },
  {
    "text": "safe SP cat CLI that's the CLI came",
    "start": "494810",
    "end": "501770"
  },
  {
    "text": "originally from Carolyn did a lot of work on it and sort of donated it to us",
    "start": "501770",
    "end": "507770"
  },
  {
    "text": "from Microsoft standalone binary which you know if you use it it's SV can't get",
    "start": "507770",
    "end": "513709"
  },
  {
    "text": "brokers but it is also available conforms to the cube control plug-in API",
    "start": "513709",
    "end": "520760"
  },
  {
    "text": "so you can basically put it in your ear path and give it a there's a CMO",
    "start": "520760",
    "end": "525800"
  },
  {
    "text": "configuration that you give to cube control and then you get the you can do",
    "start": "525800",
    "end": "530900"
  },
  {
    "text": "cube control SV kit I think it's a cube control it's cute control plugin sv cat yet brokers but it's basically the same the",
    "start": "530900",
    "end": "537490"
  },
  {
    "text": "same api is once it's actually installed everything gets pretty printed and if",
    "start": "537490",
    "end": "544550"
  },
  {
    "text": "you've seen the demo earlier today with Jeremy you can see the there's kibbles okay good okay so this is the how did we",
    "start": "544550",
    "end": "554240"
  },
  {
    "text": "get here retro part I've got a nice timeline and then some sort of issues and challenges that we encountered along",
    "start": "554240",
    "end": "559490"
  },
  {
    "text": "the way that you might be interested in hearing about so there's a lot on this",
    "start": "559490",
    "end": "566060"
  },
  {
    "text": "slide but like I said earlier as far as",
    "start": "566060",
    "end": "571160"
  },
  {
    "text": "the OSB sort of working group started in like June of 2016 by August or so a lot",
    "start": "571160",
    "end": "579079"
  },
  {
    "text": "of people had come together sort of outside of OSB to talk about making a cube platform side of the OSB",
    "start": "579079",
    "end": "587320"
  },
  {
    "text": "everything progressed pretty quickly at so the things in in in parentheses are",
    "start": "587320",
    "end": "594709"
  },
  {
    "text": "the approximate kubernetes version so you can think back to when you first",
    "start": "594709",
    "end": "599720"
  },
  {
    "text": "started working on this and know what what was what was available at the time so we had our first face-to-face in",
    "start": "599720",
    "end": "606740"
  },
  {
    "text": "Boulder at Deus that was also the first time we had the API machinery",
    "start": "606740",
    "end": "614170"
  },
  {
    "text": "successfully vendored and working and we could put a type definition in and get",
    "start": "614170",
    "end": "620600"
  },
  {
    "text": "the same definition back out with all the fields filled at this point it's",
    "start": "620600",
    "end": "625970"
  },
  {
    "text": "kubernetes 1.4 and none of the libraries that you may know of now exists so we",
    "start": "625970",
    "end": "631820"
  },
  {
    "text": "basically vendored the entirety of kubernetes kubernetes into our directory",
    "start": "631820",
    "end": "637329"
  },
  {
    "text": "but at the beginning we did not want to actually vendor it into the the git",
    "start": "637329",
    "end": "643160"
  },
  {
    "text": "repository and keep it so every time we would do a bill that would basically check out the entirety of gratis fresh",
    "start": "643160",
    "end": "650930"
  },
  {
    "text": "so yeah",
    "start": "650930",
    "end": "655990"
  },
  {
    "text": "Google had been working on a beginning implementation of this in the you know",
    "start": "656950",
    "end": "663170"
  },
  {
    "text": "from the from the discussions from like August and that was shoved into the repository in in December and that's",
    "start": "663170",
    "end": "671180"
  },
  {
    "text": "approximately 1.5 released January we have another face-to-face February we",
    "start": "671180",
    "end": "678980"
  },
  {
    "text": "get to you know one of the things that people want and I'm gonna discuss this you know why is TP our support so that",
    "start": "678980",
    "end": "685460"
  },
  {
    "text": "you don't have to go to Etsy D as that's the backend storage and this is useful",
    "start": "685460",
    "end": "693290"
  },
  {
    "text": "to hosted providers in that they don't want to give you access to Etsy D for",
    "start": "693290",
    "end": "698420"
  },
  {
    "text": "the most part because I guess some of them are combined and multiple users are",
    "start": "698420",
    "end": "704270"
  },
  {
    "text": "using the same backing at CD and the theory goes that our API server could",
    "start": "704270",
    "end": "711530"
  },
  {
    "text": "possibly do bad things and blow up the combined debt CD for multiple people",
    "start": "711530",
    "end": "717250"
  },
  {
    "text": "also approximately at this time the first version of the the client goat was released as a separate library for",
    "start": "717250",
    "end": "723170"
  },
  {
    "text": "people to start ven during we began to",
    "start": "723170",
    "end": "728270"
  },
  {
    "text": "use it at some point after that but had lots of issues with basically go versions being incompatible a lot of the",
    "start": "728270",
    "end": "736100"
  },
  {
    "text": "time get to March 1.60 API machinery",
    "start": "736100",
    "end": "741680"
  },
  {
    "text": "finally the API server stuff the API missionaries the generic API server came out into its own library API aggregation",
    "start": "741680",
    "end": "749600"
  },
  {
    "text": "was an alpha and we started using that very soon afterwards March to April that",
    "start": "749600",
    "end": "756770"
  },
  {
    "text": "was helped along by direct x-man 12 which is Sally Ross at Red Hat who",
    "start": "756770",
    "end": "762530"
  },
  {
    "text": "helped me with getting that but you could see that we were on that we've been on the bleeding edge of lots of",
    "start": "762530",
    "end": "768110"
  },
  {
    "text": "different usage of lots of different features so service cat used API",
    "start": "768110",
    "end": "773750"
  },
  {
    "text": "aggregation when it was still in alpha we used TPR when that was CPR was never",
    "start": "773750",
    "end": "780430"
  },
  {
    "text": "technically made it to beta even though it was mark beta then",
    "start": "780430",
    "end": "787189"
  },
  {
    "text": "by June we've hit 1.7 CR D has been",
    "start": "787189",
    "end": "792869"
  },
  {
    "text": "alpha for a while and became beta and we are interested in using that as our",
    "start": "792869",
    "end": "798239"
  },
  {
    "text": "backing store but you can see if you have the question of well why aren't you using CR DS is your backing store instead of TP RS or why aren't you using",
    "start": "798239",
    "end": "804749"
  },
  {
    "text": "crts instead of writing your own API so ever you can see that we've we've existed for a lot longer before a lot of",
    "start": "804749",
    "end": "810480"
  },
  {
    "text": "these features became an actual thing API aggregation moved to beta and moving",
    "start": "810480",
    "end": "815699"
  },
  {
    "text": "from alpha to beta a lot of things changed during that time but the general overall idea is the same but so we had",
    "start": "815699",
    "end": "822869"
  },
  {
    "text": "to we're constantly rebasing to keep the the same format up to up to date so that",
    "start": "822869",
    "end": "828989"
  },
  {
    "text": "it's still deploys and works it's only recent relatively recently October 1.8",
    "start": "828989",
    "end": "835559"
  },
  {
    "text": "release that we finally got rid of the I think it's like a million and a half lines of code of kubernetes kubernetes",
    "start": "835559",
    "end": "841819"
  },
  {
    "text": "around that time we also dropped third-party resources support I clearly",
    "start": "841819",
    "end": "847679"
  },
  {
    "text": "need to work on my slides because that's not supposed to be there but you know we're up to up to date now",
    "start": "847679",
    "end": "854040"
  },
  {
    "text": "API aggregation is stable and you know we you can see that we've been using a",
    "start": "854040",
    "end": "860009"
  },
  {
    "text": "lot of a lot of the various libraries from either before they existed or from",
    "start": "860009",
    "end": "866279"
  },
  {
    "text": "the very beginning of their existence and so we've done a lot of rebasing not",
    "start": "866279",
    "end": "871649"
  },
  {
    "text": "just on the libraries but on on kubernetes itself to get the various new",
    "start": "871649",
    "end": "877230"
  },
  {
    "text": "features you know about is about as fast as they come out I would say that in the",
    "start": "877230",
    "end": "882689"
  },
  {
    "text": "last year or so things have we've stopped doing that which is very nice",
    "start": "882689",
    "end": "888089"
  },
  {
    "text": "from a I don't want to rebase and have everything be broken perspective okay so",
    "start": "888089",
    "end": "896730"
  },
  {
    "text": "lots of issues over time again upstream rebasing on things it gets it's it's",
    "start": "896730",
    "end": "904889"
  },
  {
    "text": "gotten better over time but definitely from the sort of 1.4 to 1.7 time period ivory based it",
    "start": "904889",
    "end": "911759"
  },
  {
    "text": "Nyles rebased it it has not been fun so luckily now the API is hit a relatively",
    "start": "911759",
    "end": "921160"
  },
  {
    "text": "Abell you know stable interface for both",
    "start": "921160",
    "end": "928360"
  },
  {
    "text": "client go and the API machinery and the controller machinery and still for some",
    "start": "928360",
    "end": "936550"
  },
  {
    "text": "reason they keep adding and removing different arguments and parameters to",
    "start": "936550",
    "end": "942189"
  },
  {
    "text": "the the various constructors so still working on that still rebasing still not fun interesting thing it between the OSB",
    "start": "942189",
    "end": "951939"
  },
  {
    "text": "perspective and the cube perspective is you know OSB thinks that basically the",
    "start": "951939",
    "end": "956980"
  },
  {
    "text": "broker is the source of truth at all times and we're just sort of dealing",
    "start": "956980",
    "end": "962199"
  },
  {
    "text": "with it whereas cube always thinks that whatever is in at CD is like the true and consistent state and that's not",
    "start": "962199",
    "end": "968589"
  },
  {
    "text": "necessarily the truth when basically behind the broker the broker goes and does things so behind the broker it can",
    "start": "968589",
    "end": "975670"
  },
  {
    "text": "be denied stuff at any time it can fail to do updates you can either fail to do",
    "start": "975670",
    "end": "982180"
  },
  {
    "text": "an update or be denied an authorization to do an update you can the most interesting one is is something like",
    "start": "982180",
    "end": "988620"
  },
  {
    "text": "deletes so when you Mark something deleted in kubernetes you cannot undelete it so if it fails to delete",
    "start": "988620",
    "end": "995350"
  },
  {
    "text": "itself you basically stuck in this weird situation where you have a resource on",
    "start": "995350",
    "end": "1000720"
  },
  {
    "text": "the back-end broker and yet cube thinks that's still it's not there so then you",
    "start": "1000720",
    "end": "1007920"
  },
  {
    "text": "have to basically get involved and you know contact your service provider and",
    "start": "1007920",
    "end": "1014399"
  },
  {
    "text": "get them to manually delete things there's definitely this big mismatch between imperative and declarative",
    "start": "1014399",
    "end": "1019680"
  },
  {
    "text": "whereas cube you say okay I want to I want an X do that in the in the service",
    "start": "1019680",
    "end": "1025380"
  },
  {
    "text": "broker API you're basically saying okay bind a thing or a provision a thing and",
    "start": "1025380",
    "end": "1030740"
  },
  {
    "text": "the the mismatch there is that you have to you know we're basically pushing",
    "start": "1030740",
    "end": "1035938"
  },
  {
    "text": "state to objects and then it becomes commands in the backend that's not a",
    "start": "1035939",
    "end": "1042360"
  },
  {
    "text": "terribly great mismatch but it does it does show itself when you you know do",
    "start": "1042360",
    "end": "1048089"
  },
  {
    "text": "Newton do extra bindings do provisioning the gooood vs. names thing is very",
    "start": "1048089",
    "end": "1054240"
  },
  {
    "text": "interesting so in kubernetes everything has like a nice metadata name it also has a",
    "start": "1054240",
    "end": "1060179"
  },
  {
    "text": "metadata ID which I don't know why it does because you can't actually reference those things or use them for",
    "start": "1060179",
    "end": "1066299"
  },
  {
    "text": "anything OSB tends to not mandate but recommend using goods for lots of",
    "start": "1066299",
    "end": "1073139"
  },
  {
    "text": "references and so you get this weird if you try to not if you try to go straight",
    "start": "1073139",
    "end": "1080309"
  },
  {
    "text": "from one to the other you tend to just use gooood z' and then shove them into the name and then now you've got a bunch",
    "start": "1080309",
    "end": "1085980"
  },
  {
    "text": "of nasty Gorp that you have to type if you want to reference the service broker so what we did was we created the",
    "start": "1085980",
    "end": "1091619"
  },
  {
    "text": "concept of like the name is the sort of",
    "start": "1091619",
    "end": "1096690"
  },
  {
    "text": "display name of the broker but the there also is the external name which was it",
    "start": "1096690",
    "end": "1102389"
  },
  {
    "text": "contains the you know the gooood so that but you can refer to it either way and so we've got lots of machinery in the",
    "start": "1102389",
    "end": "1108840"
  },
  {
    "text": "controller to see which one of these things is filled is the name filled is the external name filled and then go and",
    "start": "1108840",
    "end": "1116070"
  },
  {
    "text": "do the appropriate lookups to find the the object controller issues this is",
    "start": "1116070",
    "end": "1123720"
  },
  {
    "text": "more of a thing during the beginning period but a over time the expected use",
    "start": "1123720",
    "end": "1129840"
  },
  {
    "text": "of a lot of the controller libraries has changed and some of us when we were originally writing some of the",
    "start": "1129840",
    "end": "1135779"
  },
  {
    "text": "controllers really didn't fully understand the expected use case of a",
    "start": "1135779",
    "end": "1141509"
  },
  {
    "text": "lot of the features that we had my recommendation here is that you should",
    "start": "1141509",
    "end": "1146970"
  },
  {
    "text": "go find the example controller and then copy it verbatim into your code base and",
    "start": "1146970",
    "end": "1152549"
  },
  {
    "text": "then only ever touch the syncing portion of that code and then just let everything else exist as it may and then",
    "start": "1152549",
    "end": "1161700"
  },
  {
    "text": "if somebody you know if they change that and update it in the future you know copy that over and do it again",
    "start": "1161700",
    "end": "1166980"
  },
  {
    "text": "and just keep your keep your syncing code very separate from the actual controller setup code it specifically",
    "start": "1166980",
    "end": "1174929"
  },
  {
    "text": "there the setting up of the listeners and the Watchers you have to be very careful you got to make sure that you've",
    "start": "1174929",
    "end": "1182490"
  },
  {
    "text": "waited for them to sync you got to make sure that you deep copy your objects if you actually intend to",
    "start": "1182490",
    "end": "1188490"
  },
  {
    "text": "reference them and use them because a the Lister can change them out from under you at any time and B if you",
    "start": "1188490",
    "end": "1195059"
  },
  {
    "text": "change them out from under the list or the Lister will blow up so you gotta watch out for that kind of issue",
    "start": "1195059",
    "end": "1202850"
  },
  {
    "text": "so again challenges through through the through the entire existence of the project have been we've been on the",
    "start": "1204770",
    "end": "1211950"
  },
  {
    "text": "bleeding edge of a lot of different features not just the libraries but actual features like aggregation even",
    "start": "1211950",
    "end": "1218790"
  },
  {
    "text": "secure serving of of the actual API at",
    "start": "1218790",
    "end": "1224460"
  },
  {
    "text": "one point it went from there was a unauthenticated api to there was only",
    "start": "1224460",
    "end": "1229890"
  },
  {
    "text": "the authenticated API and so that blew up everything on the rebase and we had",
    "start": "1229890",
    "end": "1236220"
  },
  {
    "text": "to actually figure out how to it we were we and it's a good thing that that we",
    "start": "1236220",
    "end": "1241650"
  },
  {
    "text": "had to do it but we had to actually figure out how to use the whole TLS",
    "start": "1241650",
    "end": "1247070"
  },
  {
    "text": "references and generation certificate generation and certificate references",
    "start": "1247070",
    "end": "1252620"
  },
  {
    "text": "API machinery basically this is a problem the inability to access at CD",
    "start": "1253340",
    "end": "1259800"
  },
  {
    "text": "comes up a lot from the various providers who provide a hosted service",
    "start": "1259800",
    "end": "1265100"
  },
  {
    "text": "because the core at CD there is no in",
    "start": "1265100",
    "end": "1270780"
  },
  {
    "text": "kubernetes there's no kubernetes way to access s CD and basically sort of do",
    "start": "1270780",
    "end": "1277290"
  },
  {
    "text": "sort of a reverse aggregation reverse passing the objects back through the API",
    "start": "1277290",
    "end": "1282809"
  },
  {
    "text": "sorry were only ever talks directly to at CD so we met while we may be behind the API server when the flow of data",
    "start": "1282809",
    "end": "1289950"
  },
  {
    "text": "gets to us we still have to go back to at CD and the current recommendation is",
    "start": "1289950",
    "end": "1295740"
  },
  {
    "text": "basically use the NCD operator and spin up here on at CD cluster inside of kubernetes to to manage your API servers",
    "start": "1295740",
    "end": "1305910"
  },
  {
    "text": "backing store we would like to get to the point where I mean there's multiple",
    "start": "1305910",
    "end": "1311880"
  },
  {
    "text": "different options we would like to get to the point where we have a CRD back-end",
    "start": "1311880",
    "end": "1317630"
  },
  {
    "text": "the code generators basically once you set them up you don't have to touch them but getting them set up in the first",
    "start": "1320030",
    "end": "1326030"
  },
  {
    "text": "place is very irritating there's lots of if you look in the in the code",
    "start": "1326030",
    "end": "1332720"
  },
  {
    "text": "generation script we have it's basically you specify the ten different directories that you keep your types in",
    "start": "1332720",
    "end": "1339760"
  },
  {
    "text": "our back rules have been you know once you get it it works but you do have to remember to change and update them",
    "start": "1339760",
    "end": "1346250"
  },
  {
    "text": "whenever you change and update references to different namespaces and objects helm charts basically interact",
    "start": "1346250",
    "end": "1357830"
  },
  {
    "text": "with everything because when you actually install the thing you got to have a certificate if you want",
    "start": "1357830",
    "end": "1362930"
  },
  {
    "text": "aggregation to work so you have to either generate one or provide one all",
    "start": "1362930",
    "end": "1369140"
  },
  {
    "text": "of the our back is generated on demand when you actually install the thing so",
    "start": "1369140",
    "end": "1375050"
  },
  {
    "text": "it's a properly named spaced the TP our",
    "start": "1375050",
    "end": "1380240"
  },
  {
    "text": "back end has come and gone while we had it TP ours were not very stable and",
    "start": "1380240",
    "end": "1385940"
  },
  {
    "text": "often had a lot of bugs and so sometimes builds would fail for no reason in the TP our side of thing and they need rerun",
    "start": "1385940",
    "end": "1391850"
  },
  {
    "text": "and be fine pod preset is a very interesting part",
    "start": "1391850",
    "end": "1397370"
  },
  {
    "text": "that we would like to have because it provides sort of an automated binding",
    "start": "1397370",
    "end": "1403250"
  },
  {
    "text": "where a lot of people have shown okay there's a secret and I reference the",
    "start": "1403250",
    "end": "1408380"
  },
  {
    "text": "secret in my pod and yes service catalog will automatically create the secret but you actually have to rewrite your pod",
    "start": "1408380",
    "end": "1413600"
  },
  {
    "text": "yeah Mel to refer to the secret our goal is to basically you have the pod",
    "start": "1413600",
    "end": "1419210"
  },
  {
    "text": "definition and there's going to be an actual and extra little tweak on the on the back end called a pod preset which",
    "start": "1419210",
    "end": "1424820"
  },
  {
    "text": "will say okay depend on to the service",
    "start": "1424820",
    "end": "1430270"
  },
  {
    "text": "you know XYZ to depend on the service class and plan and then that'll",
    "start": "1430270",
    "end": "1436160"
  },
  {
    "text": "automatically go get provisioned and then automatically have the secret created and then have the secret bound",
    "start": "1436160",
    "end": "1443270"
  },
  {
    "text": "and injected back into the pod without you having to know where the secret is",
    "start": "1443270",
    "end": "1448550"
  },
  {
    "text": "or what it's called we've had more challenges with actual",
    "start": "1448550",
    "end": "1454520"
  },
  {
    "text": "with pod preset coming in because the way it was written in the core was that",
    "start": "1454520",
    "end": "1462560"
  },
  {
    "text": "it had a an initializer and the problem with that is our a our controller runs",
    "start": "1462560",
    "end": "1471650"
  },
  {
    "text": "as a pod in kubernetes and when you have an initializer and it",
    "start": "1471650",
    "end": "1477170"
  },
  {
    "text": "initializes pods which is what pod preset does you get in a race condition where you might be waiting for your",
    "start": "1477170",
    "end": "1483380"
  },
  {
    "text": "initializer to be started while it's starting which is so the solution of",
    "start": "1483380",
    "end": "1489680"
  },
  {
    "text": "that is to move to a different mechanism called mutating web hooks and we're still researching how to create that and",
    "start": "1489680",
    "end": "1497170"
  },
  {
    "text": "use that so until then pod preset is I don't know if it's gone",
    "start": "1497170",
    "end": "1504020"
  },
  {
    "text": "from core yet or not but it's not going to move to us until we can actually correctly run it this is one of the last",
    "start": "1504020",
    "end": "1512990"
  },
  {
    "text": "slides here so again future sort of",
    "start": "1512990",
    "end": "1518140"
  },
  {
    "text": "goals we'd like to have CR DS or a blobstore kind of type resource for our",
    "start": "1518140",
    "end": "1523910"
  },
  {
    "text": "API flow we would like to not have to",
    "start": "1523910",
    "end": "1529910"
  },
  {
    "text": "have the references that CD basically specifically for the cloud providers again since that CD is essentially a key",
    "start": "1529910",
    "end": "1537410"
  },
  {
    "text": "value store some type of blob resource where we can still get the same blobs",
    "start": "1537410",
    "end": "1544070"
  },
  {
    "text": "that come out and go to Etsy D but instead they go to a cube provided API",
    "start": "1544070",
    "end": "1549850"
  },
  {
    "text": "this requires work and staffing which we don't have in the API Machinery land so",
    "start": "1549850",
    "end": "1558590"
  },
  {
    "text": "the next best thing is C our DS as a store and the next the future future",
    "start": "1558590",
    "end": "1566180"
  },
  {
    "text": "future look is maybe we just go we drop the entirety of the API server and go to a C or D type API and a CRT controller",
    "start": "1566180",
    "end": "1575500"
  },
  {
    "text": "we're doing GA planning right now by the end of the month I believe we have to",
    "start": "1575500",
    "end": "1580520"
  },
  {
    "text": "have a list of things that we want but on it I can bring it up in the",
    "start": "1580520",
    "end": "1587529"
  },
  {
    "text": "browser recently we've been adding all",
    "start": "1587529",
    "end": "1592960"
  },
  {
    "text": "the cluster and namespace versions of all the resources so if you've seen some of the demos earlier you might have seen",
    "start": "1592960",
    "end": "1599139"
  },
  {
    "text": "that brokers and classes are sort of clustered scoped whereas the actual",
    "start": "1599139",
    "end": "1605469"
  },
  {
    "text": "instances and bindings are our namespace scoped we'd like to provide namespace",
    "start": "1605469",
    "end": "1611799"
  },
  {
    "text": "scoped versions of the the classes and plans and and brokers such that you can",
    "start": "1611799",
    "end": "1617559"
  },
  {
    "text": "expose into you know a namespace only",
    "start": "1617559",
    "end": "1622839"
  },
  {
    "text": "the plans and classes that you want to be available to the occupiers of that",
    "start": "1622839",
    "end": "1628269"
  },
  {
    "text": "namespace otherwise you need to be you you need to provide you know cluster",
    "start": "1628269",
    "end": "1633960"
  },
  {
    "text": "access to people who normally would only have access to the namespace that they belong to well that's about it I think",
    "start": "1633960",
    "end": "1642249"
  },
  {
    "text": "oh yeah to the TLDR recommendations you see our DS if you have to make an API server use the API server builder again",
    "start": "1642249",
    "end": "1649749"
  },
  {
    "text": "use the example controller and avoid modifying anything but the actual sync part of the loop my opinion the spec and",
    "start": "1649749",
    "end": "1657309"
  },
  {
    "text": "state stuff is really good you should definitely try to design it but make sure you don't lose track of your state",
    "start": "1657309",
    "end": "1663609"
  },
  {
    "text": "machine your state transitions we at one point had basically a controller that",
    "start": "1663609",
    "end": "1669639"
  },
  {
    "text": "was like fifteen hundred lines long and was like all one function that was a",
    "start": "1669639",
    "end": "1675059"
  },
  {
    "text": "triple case statement so it gets difficult to read the code when it's",
    "start": "1675059",
    "end": "1681009"
  },
  {
    "text": "that sort of spaghetti but you got a we've done good we've done well to be",
    "start": "1681009",
    "end": "1687429"
  },
  {
    "text": "refactoring it what's about it I've got",
    "start": "1687429",
    "end": "1694989"
  },
  {
    "text": "links I could bring up the github if you want to see it and you can go back and",
    "start": "1694989",
    "end": "1702369"
  },
  {
    "text": "watch all of our meetings in the past",
    "start": "1702369",
    "end": "1707789"
  },
  {
    "text": "sure is it okay exit out of this oh yeah and",
    "start": "1708690",
    "end": "1717440"
  },
  {
    "text": "I did I did the this this morning uh we're releasing regularly now I was",
    "start": "1717440",
    "end": "1725509"
  },
  {
    "text": "milestones wiki due to do too so we've",
    "start": "1725509",
    "end": "1734960"
  },
  {
    "text": "got lots of issues to tackle I have six",
    "start": "1734960",
    "end": "1744110"
  },
  {
    "text": "minutes left okay questions well dog run",
    "start": "1744110",
    "end": "1749629"
  },
  {
    "text": "run dog run any updates about how the support for ginger connections would",
    "start": "1749629",
    "end": "1756769"
  },
  {
    "text": "look like in I mean it's if it's a broker thing I know but how would the",
    "start": "1756769",
    "end": "1763269"
  },
  {
    "text": "platform sirens answers catalog site would look like new API documents or",
    "start": "1763269",
    "end": "1770720"
  },
  {
    "text": "resources I mean the generic actions is it's a broker thing so you have to talk",
    "start": "1770720",
    "end": "1776899"
  },
  {
    "text": "to your broker the platform doesn't get involved so those things that they'll not be a similar declarative way to",
    "start": "1776899",
    "end": "1783799"
  },
  {
    "text": "interact with the generic API we haven't designed it yet I mean we're still designing actual API so so the the",
    "start": "1783799",
    "end": "1792710"
  },
  {
    "text": "broker is gonna expose a swagger dock and then platform can look at the",
    "start": "1792710",
    "end": "1797870"
  },
  {
    "text": "swagger talk and decide if I wants to expose that if at all but if he understands it then he can natively",
    "start": "1797870",
    "end": "1803779"
  },
  {
    "text": "expose those operations",
    "start": "1803779",
    "end": "1806950"
  },
  {
    "text": "so my question is very generic I should have gone to the other before I was",
    "start": "1821650",
    "end": "1828830"
  },
  {
    "text": "wondering if you see a lot of how much",
    "start": "1828830",
    "end": "1834169"
  },
  {
    "text": "brocade usage I mean have you seen brokers that implement control services",
    "start": "1834169",
    "end": "1840309"
  },
  {
    "text": "what services oh is that the the route services yeah there you see nothing I",
    "start": "1840309",
    "end": "1845720"
  },
  {
    "text": "mean we we've basically been focusing on the the you know the instances and",
    "start": "1845720",
    "end": "1851240"
  },
  {
    "text": "bindings type services not not the what is it the route services or the other one yeah right I think there's you know",
    "start": "1851240",
    "end": "1871220"
  },
  {
    "text": "equivalent ways to do it right right are",
    "start": "1871220",
    "end": "1878809"
  },
  {
    "text": "you you've got ingress and you've got PVCs basically okay well I mean I hope I hope",
    "start": "1878809",
    "end": "1891970"
  },
  {
    "text": "okay good about part presets is there any you mentioned dependency as well as",
    "start": "1891970",
    "end": "1900290"
  },
  {
    "text": "injecting the secrets so I understand the injecting the secrets for a secrets part into the parts but is there any",
    "start": "1900290",
    "end": "1907130"
  },
  {
    "text": "scope for dependency declaration in the parts pressure side or is still about",
    "start": "1907130",
    "end": "1912770"
  },
  {
    "text": "only injecting the secrets you mean like one service depends on another service right everybody has this question",
    "start": "1912770",
    "end": "1919900"
  },
  {
    "text": "depends it's that's more of I mean I want to say that's more of an OSP thing but I suppose we could we could think",
    "start": "1919900",
    "end": "1928100"
  },
  {
    "text": "about it in in an hour side of it because we do own in theory all of the",
    "start": "1928100",
    "end": "1933140"
  },
  {
    "text": "the references but there is no specific what were the agency part that you",
    "start": "1933140",
    "end": "1938690"
  },
  {
    "text": "mentioned then in the speaking about the part pieces the dependency there is that",
    "start": "1938690",
    "end": "1945890"
  },
  {
    "text": "you would you would a dependency on a service instance right",
    "start": "1945890",
    "end": "1952190"
  },
  {
    "text": "and and it would know how to go find the instance and then put the the",
    "start": "1952190",
    "end": "1958700"
  },
  {
    "text": "credentials back into your pot for you that way you wouldn't have to know what the secret is directly thank you okay I",
    "start": "1958700",
    "end": "1973510"
  },
  {
    "text": "guess we're done [Applause]",
    "start": "1973510",
    "end": "1980579"
  }
]