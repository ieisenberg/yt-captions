[
  {
    "text": "hey I'm Melissa Kilby and I work in the services security engineering team at Apple which rolls right off the tongue",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "when I first started in cyber security my initial Focus was on applying statistics AIML and big data to threat",
    "start": "6040",
    "end": "12960"
  },
  {
    "text": "detection over time I realized that there were many gaps in terms of collecting the right data I then pivoted",
    "start": "12960",
    "end": "19400"
  },
  {
    "text": "and started helping develop low-level Linux kernel monitoring tools and deployed them to production to gain",
    "start": "19400",
    "end": "25439"
  },
  {
    "text": "firsthand experience of what is realistic and scalable earlier this year I became a core maintainer of the Falco",
    "start": "25439",
    "end": "32000"
  },
  {
    "text": "project today I will talk about how to use Falco with ebpf for runtime threat",
    "start": "32000",
    "end": "38000"
  },
  {
    "text": "detection and more specifically focusing on how to use the right data effectively",
    "start": "38000",
    "end": "44039"
  },
  {
    "text": "with more advanced analytics on the host itself including theories and Hands-On",
    "start": "44039",
    "end": "50039"
  },
  {
    "text": "demos sometimes I'll go deep into details but I promise I always pull back",
    "start": "50039",
    "end": "55120"
  },
  {
    "text": "out and I'll cover various aspects so hopefully everyone gets something out of it",
    "start": "55120",
    "end": "61920"
  },
  {
    "text": "in case you didn't know a IML is pretty hot right now and then you look back at cyber",
    "start": "62399",
    "end": "69960"
  },
  {
    "text": "security and threat detection and you think to yourself huh this is why we can't have nice things mainly because we",
    "start": "69960",
    "end": "77840"
  },
  {
    "text": "don't have accurate training data sets still there must be a better way because",
    "start": "77840",
    "end": "84000"
  },
  {
    "text": "the modern Cloud infrastructure attack surface is vast and the stakes are high",
    "start": "84000",
    "end": "90119"
  },
  {
    "text": "attackers could gain unauthorized access to secrets and identities and",
    "start": "90119",
    "end": "95200"
  },
  {
    "text": "subsequently steal customer data they could inject malicious code into the running applications or Worse attackers",
    "start": "95200",
    "end": "103200"
  },
  {
    "text": "can infiltrate and temper with your build systems it's not 100% true that CIS",
    "start": "103200",
    "end": "111520"
  },
  {
    "text": "calls or kernel events Never Lie the main message of the slide is that having",
    "start": "111520",
    "end": "116640"
  },
  {
    "text": "a tool that hooks into the Linux kernel at system cause of Interest allows us to",
    "start": "116640",
    "end": "122079"
  },
  {
    "text": "know what is going on with the running application including being able to detect if someone attacks the",
    "start": "122079",
    "end": "127920"
  },
  {
    "text": "infrastructure for a wide range of attacks let's see how it's done in a quick hacking",
    "start": "127920",
    "end": "134800"
  },
  {
    "text": "demo once upon a time there was a Jenkins server you know there won't be a",
    "start": "134800",
    "end": "140280"
  },
  {
    "text": "happy ending suppose you found a vulnerability that allows you to get a shell back by exploiting the kovy script",
    "start": "140280",
    "end": "148440"
  },
  {
    "text": "console the Java parent process spawns a child process that creates a Bas 64 encoded file in the temp",
    "start": "148440",
    "end": "156760"
  },
  {
    "text": "directory subsequently this file is being decoded in this attack it is an elf",
    "start": "157519",
    "end": "164319"
  },
  {
    "text": "binary next permissions are changed to make the binary",
    "start": "165959",
    "end": "171599"
  },
  {
    "text": "executable finally executing this implant results in sending a shell over",
    "start": "172440",
    "end": "178120"
  },
  {
    "text": "the network right to the attack ER over this reverse shell the attacker can run",
    "start": "178120",
    "end": "183599"
  },
  {
    "text": "post exploitation commands possibly elevating privileges stealing Secrets or",
    "start": "183599",
    "end": "190159"
  },
  {
    "text": "a pivot further in your network the stma also introduced the",
    "start": "190159",
    "end": "195200"
  },
  {
    "text": "important concept of the Linux process tree that I want to explain in more detail as it's going to be important",
    "start": "195200",
    "end": "201959"
  },
  {
    "text": "later in the animation you saw how new processes are spawned and now you see all of them displayed together as if we",
    "start": "201959",
    "end": "209200"
  },
  {
    "text": "logged all xec e system calls Over time however the Linux kernel defines",
    "start": "209200",
    "end": "214959"
  },
  {
    "text": "the process Tree in terms of how it looks right now considering only processes that are alive Falco mirrors",
    "start": "214959",
    "end": "223000"
  },
  {
    "text": "the Kernel's view of the process tream and also allows you to Traverse the parent process lineage in real time for",
    "start": "223000",
    "end": "230239"
  },
  {
    "text": "each incoming event a little Shameless black this is a really slick feature of",
    "start": "230239",
    "end": "236760"
  },
  {
    "text": "Falco under the hook Falco keeps a cash off of processes or more precisely of",
    "start": "236760",
    "end": "242519"
  },
  {
    "text": "threads we store a struct for each thread that contains all the properties we're interested in such as command Arc",
    "start": "242519",
    "end": "250040"
  },
  {
    "text": "the TTY the executable path environment variables the secr it belongs to and",
    "start": "250040",
    "end": "255400"
  },
  {
    "text": "many many more attributes we purge the entry on exit",
    "start": "255400",
    "end": "261919"
  },
  {
    "text": "from the table and because things are never perfect unfortunately there will be",
    "start": "261919",
    "end": "268360"
  },
  {
    "text": "broken links sometimes partially because of tooling limitations but also because of edge cases and a",
    "start": "268360",
    "end": "274680"
  },
  {
    "text": "Linux kernel that are harder to keep track of looking back at what Falco can",
    "start": "274680",
    "end": "279759"
  },
  {
    "text": "detect today the quick hacking demo already introduced remote code execution rce rcees are very critical because they",
    "start": "279759",
    "end": "287479"
  },
  {
    "text": "effectively open the door to attackers to do more damage to the infrastructure such as lifting",
    "start": "287479",
    "end": "294199"
  },
  {
    "text": "application secrets from disk local privilege escalation gaining",
    "start": "294199",
    "end": "301400"
  },
  {
    "text": "higher line capabilities eventually escaping the",
    "start": "301400",
    "end": "306840"
  },
  {
    "text": "kubernetes PO sandbox pivoting through your network",
    "start": "306840",
    "end": "313639"
  },
  {
    "text": "and generally speaking unauthorized access that's a lot of things we can",
    "start": "313639",
    "end": "320720"
  },
  {
    "text": "detect today with the right Falon rules the only downside is that you need to know what to look",
    "start": "320720",
    "end": "326919"
  },
  {
    "text": "for do you feel that light breze let you step out the door here in Chicago this",
    "start": "326919",
    "end": "332280"
  },
  {
    "text": "morning despite our constant progress in making Cloud native security better every day thread actors are outpacing",
    "start": "332280",
    "end": "339800"
  },
  {
    "text": "our Innovation constantly finding new ways to turn NATO past our",
    "start": "339800",
    "end": "344960"
  },
  {
    "text": "achievements what does doing nothing cost you it could be everything multiplying a",
    "start": "344960",
    "end": "352840"
  },
  {
    "text": "lot of things that are done right by zero is still zero what we can do however is constantly raise the bar and",
    "start": "352840",
    "end": "359960"
  },
  {
    "text": "slow attackers down some of the current primary paint points include the",
    "start": "359960",
    "end": "365000"
  },
  {
    "text": "challenges with suppressing noise this rule shows that for Falco",
    "start": "365000",
    "end": "370440"
  },
  {
    "text": "alerts that monitor or file opens you need to limit the scope of the rule to subdirectories or file naming patterns",
    "start": "370440",
    "end": "377479"
  },
  {
    "text": "that you know beforehand depending on your environment you may also need to",
    "start": "377479",
    "end": "382759"
  },
  {
    "text": "add many exclusions unfortunately this traditional approach puts you at risk of",
    "start": "382759",
    "end": "388319"
  },
  {
    "text": "missing out for an inter family of attacks namely arbitrary file reads as",
    "start": "388319",
    "end": "394000"
  },
  {
    "text": "the name suggests for this you need to be able to write rules against any",
    "start": "394000",
    "end": "400400"
  },
  {
    "text": "file sounds crazy let's do",
    "start": "400400",
    "end": "405639"
  },
  {
    "text": "it I compiled a test binary that contains the new algorithm I have yet to",
    "start": "406639",
    "end": "412160"
  },
  {
    "text": "introduce in the left terminal you will see the Falco alert",
    "start": "412160",
    "end": "417560"
  },
  {
    "text": "outputs suppose we're alerting on any file open",
    "start": "418400",
    "end": "423440"
  },
  {
    "text": "because I want to show you how it looks like when you try to monitor all file opens most likely you will get a lot of",
    "start": "423440",
    "end": "429759"
  },
  {
    "text": "events that happen all the",
    "start": "429759",
    "end": "433280"
  },
  {
    "text": "time let's run the same test boundy again with the new automatic filtering capabilities and very quickly we're",
    "start": "438240",
    "end": "444680"
  },
  {
    "text": "suppressing the obvious noise with a feature like this we could alert on potential application Secrets lifting",
    "start": "444680",
    "end": "451520"
  },
  {
    "text": "even if we don't know their naming",
    "start": "451520",
    "end": "455160"
  },
  {
    "text": "conventions therefore implementing frequency counting of Linux kernel events will be useful for security to",
    "start": "461879",
    "end": "467960"
  },
  {
    "text": "build future anomaly detection it can be a first step toward",
    "start": "467960",
    "end": "473199"
  },
  {
    "text": "Shifting the information secur uh asymmetry in favor of",
    "start": "473199",
    "end": "478319"
  },
  {
    "text": "Defenders in theory we are the ones who have access to all data so we should",
    "start": "478319",
    "end": "483800"
  },
  {
    "text": "take advantage of our ability to learn an application's normal behavior I must",
    "start": "483800",
    "end": "488960"
  },
  {
    "text": "admit it's not going to be exactly that easy for example what about memory attacks SS gos related to memory or IO",
    "start": "488960",
    "end": "496919"
  },
  {
    "text": "are so high frequency compared to even file opens that on busy servers it will be very",
    "start": "496919",
    "end": "503599"
  },
  {
    "text": "difficult to process all events in real time without either a massive performance hit or starting to drop",
    "start": "503599",
    "end": "510520"
  },
  {
    "text": "events therefore just keep in mind that much more engineering work at multiple layers is required to expand monitoring",
    "start": "510520",
    "end": "517760"
  },
  {
    "text": "capabilities in this regard however the arbitrary FY demonstration showed how accessing and",
    "start": "517760",
    "end": "524680"
  },
  {
    "text": "encoding all the rich information readily available on the host can be a",
    "start": "524680",
    "end": "530160"
  },
  {
    "text": "GameChanger because it's one example use case you definitely cannot solve of host in a data Lake compute",
    "start": "530160",
    "end": "537000"
  },
  {
    "text": "environment in summary ru based detections focus on what we think attackers will do not on what they are",
    "start": "537000",
    "end": "545839"
  },
  {
    "text": "doing attackers simply don't play by the rules they they do the opposite which is",
    "start": "545839",
    "end": "551760"
  },
  {
    "text": "why staying ahead in Linux runtime monitoring is so hard having data rules",
    "start": "551760",
    "end": "557480"
  },
  {
    "text": "and monitoring in place for known attacks is a great Baseline but it's often not enough this approach is also",
    "start": "557480",
    "end": "565160"
  },
  {
    "text": "very time and Engineering consuming so why not stop playing by the rules",
    "start": "565160",
    "end": "570240"
  },
  {
    "text": "ourselves and speed up novelty Discovery and adaptation using mathematical models to",
    "start": "570240",
    "end": "576839"
  },
  {
    "text": "determine a pattern of past Behavior has the added advantage that even if an attacker knows about it it will be much",
    "start": "576839",
    "end": "583640"
  },
  {
    "text": "harder to plant in and bypass such monitoring as a result we may be able to",
    "start": "583640",
    "end": "588880"
  },
  {
    "text": "slow them down and drive up the operational costs of their attacks Switching gears everything I'm",
    "start": "588880",
    "end": "596680"
  },
  {
    "text": "presenting now including the first early prototype demo from before is a work in",
    "start": "596680",
    "end": "602040"
  },
  {
    "text": "progress for Falon let's dive into the frequency counting approach we could use in Falon and real world production to",
    "start": "602040",
    "end": "609279"
  },
  {
    "text": "solve some of the challenges I just presented the background image already",
    "start": "609279",
    "end": "615160"
  },
  {
    "text": "sets the stage mathematical approaches always involve matrices or tensors in one way or another by the way the Matrix",
    "start": "615160",
    "end": "623640"
  },
  {
    "text": "is one of my favorite movies the question for you now is do you take the pl pill",
    "start": "623640",
    "end": "629920"
  },
  {
    "text": "or do you take the red pill just kidding follow me we're about to Enter the",
    "start": "629920",
    "end": "636760"
  },
  {
    "text": "Matrix the ner star is to derive a smart mapping of endpoint processes to ukle in",
    "start": "636760",
    "end": "642600"
  },
  {
    "text": "space such that similar events are a close by in Dead Space and unusual or",
    "start": "642600",
    "end": "648160"
  },
  {
    "text": "abnormal patterns Stand Out enabling us to Monitor and analyze any Behavior",
    "start": "648160",
    "end": "653600"
  },
  {
    "text": "outside of past behavior in a more abstract and generic way",
    "start": "653600",
    "end": "660160"
  },
  {
    "text": "in simpler terms we are talking about data compression for Falco we have some",
    "start": "660160",
    "end": "666240"
  },
  {
    "text": "interesting requirements the rate of Kernel events on Dr servers is so high",
    "start": "666240",
    "end": "672440"
  },
  {
    "text": "that performance must be prioritized over accuracy while still providing the",
    "start": "672440",
    "end": "677480"
  },
  {
    "text": "value you need we need to achieve frequency counting of large data streams in sub space using constant time",
    "start": "677480",
    "end": "685200"
  },
  {
    "text": "complexity I believe in using established algorithms furthermore we need to be able to deal with different",
    "start": "685200",
    "end": "691959"
  },
  {
    "text": "data types and create a versatile solution that can be applied to our special field of cyber security as a",
    "start": "691959",
    "end": "699440"
  },
  {
    "text": "first step I propos to use cman sketch which was invented 20 years ago an",
    "start": "699440",
    "end": "705240"
  },
  {
    "text": "algorithm for probabilistic frequency counting of buckets I will introduce the",
    "start": "705240",
    "end": "710360"
  },
  {
    "text": "base algorithm in the next slides skipping all the variants that exist by now a cman sketch is a two-dimensional",
    "start": "710360",
    "end": "717880"
  },
  {
    "text": "array with d rows and W counters each the rows will be D independent hash",
    "start": "717880",
    "end": "724160"
  },
  {
    "text": "functions they should be non-cryptographic 64bit should be fine they should perform",
    "start": "724160",
    "end": "730000"
  },
  {
    "text": "well at R speed and have for example favorable Avalanche properties meaning",
    "start": "730000",
    "end": "735680"
  },
  {
    "text": "slight changes in the input do not result in large changes in the output",
    "start": "735680",
    "end": "740720"
  },
  {
    "text": "the number of buckets is much smaller than the universe of possible values",
    "start": "740720",
    "end": "746120"
  },
  {
    "text": "hence this is why it's called Data compression the way to shape the dimensions is providing failure and",
    "start": "746120",
    "end": "752760"
  },
  {
    "text": "error tolerance rates values are probably going to be something like",
    "start": "752760",
    "end": "758600"
  },
  {
    "text": "0.001 for example you could end up with seven hash functions and 27,000 buckets",
    "start": "758600",
    "end": "764920"
  },
  {
    "text": "assuming 64bit counters the sketch would be 1.5",
    "start": "764920",
    "end": "770720"
  },
  {
    "text": "megabytes when we receive a new value we Loop through the hash functions compute",
    "start": "770720",
    "end": "776639"
  },
  {
    "text": "the hash value and take take the modular to the number of buckets W to get the",
    "start": "776639",
    "end": "781880"
  },
  {
    "text": "vector index we then increment the counter at that index to get the current count estimate",
    "start": "781880",
    "end": "789839"
  },
  {
    "text": "follow the same steps but instead of incrementing the counter only look up the counts and return the minimum value",
    "start": "789839",
    "end": "796959"
  },
  {
    "text": "across rows taking the minimum count is from multiple hash functions is the",
    "start": "796959",
    "end": "802680"
  },
  {
    "text": "trick that makes this algorithm more robust often the goal is to maintain a",
    "start": "802680",
    "end": "807760"
  },
  {
    "text": "cache of the topk heav Heavy Hitters for FAL I think all that is needed is to",
    "start": "807760",
    "end": "813040"
  },
  {
    "text": "make the count estimates available to the rules expression language cman",
    "start": "813040",
    "end": "818240"
  },
  {
    "text": "sketches are prone to over counting but they never undercount in Linux rtin",
    "start": "818240",
    "end": "823360"
  },
  {
    "text": "application Behavior we have heavily scooted distributions therefore having an algorithm that performs well in",
    "start": "823360",
    "end": "831440"
  },
  {
    "text": "determining high frequency counts adds a lot of value to fret detection of course",
    "start": "831440",
    "end": "837000"
  },
  {
    "text": "cman sketch will not automat automatically find and be able to tag an anomaly that is malicious but that is",
    "start": "837000",
    "end": "843199"
  },
  {
    "text": "not the goal we want to automatically remove all irrelevant data so that we",
    "start": "843199",
    "end": "848240"
  },
  {
    "text": "can be more adventurous and broader in our monitoring scope using normal Falon",
    "start": "848240",
    "end": "853759"
  },
  {
    "text": "rules the key takeaways are that unlike hash tables we use less",
    "start": "853759",
    "end": "861240"
  },
  {
    "text": "and fixed memory to kind of achieve the same results as overcounting will be",
    "start": "861240",
    "end": "867360"
  },
  {
    "text": "within an acceptable error the biggest win will be the safety boundary for Falon rules that could blow up and",
    "start": "867360",
    "end": "874480"
  },
  {
    "text": "production but now won't anymore lastly dear sres we want to make you happy so",
    "start": "874480",
    "end": "881720"
  },
  {
    "text": "this is for you and for my own peace of mind I thought a lot about this next",
    "start": "881720",
    "end": "888040"
  },
  {
    "text": "step how many sketches per running Falon do we need is one enough probably not",
    "start": "888040",
    "end": "893480"
  },
  {
    "text": "initially I believe that we should have separate sketches for each container since it seemed logical to treat each",
    "start": "893480",
    "end": "899800"
  },
  {
    "text": "container in isolation but over time I remember that this is what people",
    "start": "899800",
    "end": "904839"
  },
  {
    "text": "commonly do in data modeling at first only to realize that it is not as maintainable or as convenient as having",
    "start": "904839",
    "end": "911920"
  },
  {
    "text": "more generalized models for example Netflix first had separate movie",
    "start": "911920",
    "end": "917160"
  },
  {
    "text": "recommendation models for each country but later collapsed them into a single Global model therefore I think we should",
    "start": "917160",
    "end": "924399"
  },
  {
    "text": "use shared sketches across containers making them larger instead",
    "start": "924399",
    "end": "930360"
  },
  {
    "text": "that being said I think there should be separate sketches for the values we're",
    "start": "930360",
    "end": "936079"
  },
  {
    "text": "counting okay what are we actually counting the big leading question is",
    "start": "936079",
    "end": "941440"
  },
  {
    "text": "what defines the context of a Linux process in the best and most robust manner or how to do counting in a way",
    "start": "941440",
    "end": "949079"
  },
  {
    "text": "that matters and results in actionable information for threat detection I",
    "start": "949079",
    "end": "954199"
  },
  {
    "text": "believe this is why Advanced modeling is so challenging and why we probably have",
    "start": "954199",
    "end": "959240"
  },
  {
    "text": "fewer breakthroughs yet compared to other domains because you still need a lot of domain expertise and sure enough",
    "start": "959240",
    "end": "966880"
  },
  {
    "text": "you're fighting against attackers who will definitely use any loophole they can possibly find the short answer is",
    "start": "966880",
    "end": "974000"
  },
  {
    "text": "that there is no single combination of signals that will work for all use cases",
    "start": "974000",
    "end": "979199"
  },
  {
    "text": "instead you need to encode your data in different ways and slice and dice them a little bit this is why I propos using multiple",
    "start": "979199",
    "end": "986399"
  },
  {
    "text": "sketches your first sketch could use use the container ID process name TTY to",
    "start": "986399",
    "end": "991680"
  },
  {
    "text": "encode interactive activity the executable path plus parent process",
    "start": "991680",
    "end": "996720"
  },
  {
    "text": "lineage plus names of the process group and session leaders to count how often",
    "start": "996720",
    "end": "1002639"
  },
  {
    "text": "we have seen the same shape and form of process Origins before you would string",
    "start": "1002639",
    "end": "1009279"
  },
  {
    "text": "concatenate all these properties together and then hash them to find the",
    "start": "1009279",
    "end": "1014920"
  },
  {
    "text": "vector index the bucket whose count you would increase as a explained in the previous",
    "start": "1014920",
    "end": "1020199"
  },
  {
    "text": "slides your second sketch could encode the same signals as the first plus the",
    "start": "1020199",
    "end": "1025720"
  },
  {
    "text": "file descriptor names which is the file name for open related CIS calls for the use case of abnormal file opens later in",
    "start": "1025720",
    "end": "1034160"
  },
  {
    "text": "your FAL rule it may make sense to look at both of these counts for the cases where for example the file name may",
    "start": "1034160",
    "end": "1040798"
  },
  {
    "text": "contain random time stamps in that case the process context alone may help to",
    "start": "1040799",
    "end": "1046438"
  },
  {
    "text": "still show that this is normal andro recuring activity next let's take a look",
    "start": "1046439",
    "end": "1051600"
  },
  {
    "text": "at the pro process command line or proc ARS for that matter you could encode in your third sketch this is where it gets",
    "start": "1051600",
    "end": "1059160"
  },
  {
    "text": "really interesting many folks coming into the domain of cyber security from other domains attempt to treat the",
    "start": "1059160",
    "end": "1066240"
  },
  {
    "text": "command arcs as English sentences and then try to train models on them however",
    "start": "1066240",
    "end": "1071760"
  },
  {
    "text": "there are inherent challenges first often there are no command arcs second",
    "start": "1071760",
    "end": "1077559"
  },
  {
    "text": "the more arcs you have have the more information you have to work with think of the good old information theory",
    "start": "1077559",
    "end": "1083000"
  },
  {
    "text": "invented by Claude Shannon in the 1940s and it's true some attacks May inject a payload over the command arcs",
    "start": "1083000",
    "end": "1090400"
  },
  {
    "text": "really though this is just a subset of attacks command arcs can also be Pro",
    "start": "1090400",
    "end": "1095600"
  },
  {
    "text": "problematic just like file names for example Java processes often have many arcs some of them more random looking",
    "start": "1095600",
    "end": "1102720"
  },
  {
    "text": "this might trick you into thinking that this is new behavior when in reality is it it is not so yeah yes we do want to",
    "start": "1102720",
    "end": "1109320"
  },
  {
    "text": "use the command arcs because they can be very useful for finding normal heavy hitter app Behavior but sometimes it",
    "start": "1109320",
    "end": "1116120"
  },
  {
    "text": "might feel miserably what I'm about to show is known among experts but to some of you",
    "start": "1116120",
    "end": "1124200"
  },
  {
    "text": "it may come as a surprise that what you type into your terminal as command is",
    "start": "1124200",
    "end": "1129360"
  },
  {
    "text": "not necessarily what comes out as process commandline arguments when auditing the kernel via tapping fork and",
    "start": "1129360",
    "end": "1136240"
  },
  {
    "text": "exact disc calls on the left you have the fold",
    "start": "1136240",
    "end": "1141880"
  },
  {
    "text": "context this is what I would type into my terminal this is an input to my shell process on the right you have what would",
    "start": "1142240",
    "end": "1148919"
  },
  {
    "text": "be logged as arcs in exactly Eis SCS as you will see they're pretty different that's because the left is a full",
    "start": "1148919",
    "end": "1155960"
  },
  {
    "text": "programming language that is being passed and evaluated by the shell which does its own processing that results in",
    "start": "1155960",
    "end": "1162159"
  },
  {
    "text": "the actual fork and final the ex exec eus calls that you will see logged on the right",
    "start": "1162159",
    "end": "1169240"
  },
  {
    "text": "on the left you have a program that executes bash and tells the shell to open a TCP socket to the provided IP and",
    "start": "1169240",
    "end": "1177640"
  },
  {
    "text": "who bash standard in standard out to the socket on the",
    "start": "1177640",
    "end": "1183760"
  },
  {
    "text": "right you see that all of the TCP setup is",
    "start": "1183760",
    "end": "1188880"
  },
  {
    "text": "missed the next two lines on the left are programs that invol invoke shell builtins like Echo and read these are",
    "start": "1191039",
    "end": "1198240"
  },
  {
    "text": "are implemented by the shell itself so no external program is needed as such no",
    "start": "1198240",
    "end": "1204799"
  },
  {
    "text": "external executive Eis calls are made that would allow us to see these critical intermediary",
    "start": "1204799",
    "end": "1210840"
  },
  {
    "text": "steps in addition to built-ins the Shell evaluates environment variables and",
    "start": "1210840",
    "end": "1216919"
  },
  {
    "text": "pushes them into the child's process environment map before executing the commands as such hooking exact V will",
    "start": "1216919",
    "end": "1224320"
  },
  {
    "text": "only see the Aur command being run both examples are wonderful examples why you",
    "start": "1224320",
    "end": "1229960"
  },
  {
    "text": "need to be more sophisticated in tapping into the right kernel signals logging only open or logging open CIS calls or",
    "start": "1229960",
    "end": "1237799"
  },
  {
    "text": "using LSM hooks for that matter and logging environment variables will make that information still",
    "start": "1237799",
    "end": "1244559"
  },
  {
    "text": "available finally for pipeline commands the shell is going to create a number of",
    "start": "1244559",
    "end": "1250120"
  },
  {
    "text": "pipes in memory for a few times and exact each command individually with the input output file",
    "start": "1250120",
    "end": "1257039"
  },
  {
    "text": "descriptors pointing to these pipes looking just at process listings we",
    "start": "1257039",
    "end": "1262159"
  },
  {
    "text": "cannot tell which commands are hooked up to which other commands so we lose a lot of semantic understanding as to what the",
    "start": "1262159",
    "end": "1268679"
  },
  {
    "text": "sequence of commands is doing to complicate matters further if you simply run a script we do not look into the",
    "start": "1268679",
    "end": "1275240"
  },
  {
    "text": "file itself therefore looking at command arxs is more interesting for a command",
    "start": "1275240",
    "end": "1280640"
  },
  {
    "text": "injection attacks by the way to spot new executables and containers that should",
    "start": "1280640",
    "end": "1286279"
  },
  {
    "text": "be immutable it is better to use very precise kernel signals that Falco features for example Falco can detect if",
    "start": "1286279",
    "end": "1294679"
  },
  {
    "text": "something was written to the upper container file system layer at runtime in summary the terrain",
    "start": "1294679",
    "end": "1301960"
  },
  {
    "text": "completeness of shell inputs and other aspects of Linux makes Advanced data",
    "start": "1301960",
    "end": "1307559"
  },
  {
    "text": "analytics for cyber security so hard it's not that algorithms don't work it's",
    "start": "1307559",
    "end": "1313279"
  },
  {
    "text": "that security still requires a lot of domain expertise to use them effectively ly this statement extends to the",
    "start": "1313279",
    "end": "1320720"
  },
  {
    "text": "decision of when to use modeling approaches versus when to better invest into Super robust kernel signals like",
    "start": "1320720",
    "end": "1327840"
  },
  {
    "text": "the methods I mentioned for detecting new executables here I would like to",
    "start": "1327840",
    "end": "1334960"
  },
  {
    "text": "reiterate that I think the frequency counting proposed is best used in combination with additional Falco rules",
    "start": "1334960",
    "end": "1342039"
  },
  {
    "text": "filter Expressions so don't try something like this in production but remember what I showed in my first demo",
    "start": "1342039",
    "end": "1348720"
  },
  {
    "text": "it's still crazy that we can now potentially detect any abnormal file opens without needing to know the file",
    "start": "1348720",
    "end": "1355520"
  },
  {
    "text": "nameing conventions for custom application Secrets it's now time for another",
    "start": "1355520",
    "end": "1362960"
  },
  {
    "text": "demo again on the left you will see the Falco alert outputs and similarly to the",
    "start": "1368200",
    "end": "1373440"
  },
  {
    "text": "first demo I will show again how Heavy Hitters",
    "start": "1373440",
    "end": "1380320"
  },
  {
    "text": "can make monitoring and data collection more risky the container and the",
    "start": "1380320",
    "end": "1385640"
  },
  {
    "text": "background cats at seash Shad all the",
    "start": "1385640",
    "end": "1389600"
  },
  {
    "text": "time now running the same test binary with cman Sketch powered filter Expressions will quickly perform",
    "start": "1394960",
    "end": "1402120"
  },
  {
    "text": "probabalistic frequency counting and silence the noisy output",
    "start": "1402120",
    "end": "1409880"
  },
  {
    "text": "when I interactively drop into the container and Cat at",
    "start": "1414520",
    "end": "1419799"
  },
  {
    "text": "see Shadow again almost doing the same thing we still catch it because the",
    "start": "1419799",
    "end": "1425360"
  },
  {
    "text": "string we hashed contained the TTY which indicates interactive",
    "start": "1425360",
    "end": "1430520"
  },
  {
    "text": "activity we see the same effects if I now run some dummy command that mimics random command injection against the VRA",
    "start": "1430520",
    "end": "1438400"
  },
  {
    "text": "application for example I may be biased but I think that's pretty cool and can be a game",
    "start": "1438400",
    "end": "1443840"
  },
  {
    "text": "changer in",
    "start": "1443840",
    "end": "1446360"
  },
  {
    "text": "production here are a few recommendations for how I tend to go about contributing more significant",
    "start": "1451960",
    "end": "1458720"
  },
  {
    "text": "Paradigm shifts to the open source Falco project working in the open showing",
    "start": "1458720",
    "end": "1465039"
  },
  {
    "text": "early proof of Concepts as I'm doing today is very important to avoid being that isolated monkey hanging off the",
    "start": "1465039",
    "end": "1472720"
  },
  {
    "text": "furest tree branch just to see if you fall the other maintainers have been",
    "start": "1472720",
    "end": "1477960"
  },
  {
    "text": "around a plock so you would be foolish not to take advantage of their inputs to",
    "start": "1477960",
    "end": "1483360"
  },
  {
    "text": "ensure that the solution is not only useful but also maintainable in the long",
    "start": "1483360",
    "end": "1490559"
  },
  {
    "text": "term the ear release phase is very interesting because now you have to",
    "start": "1490799",
    "end": "1497320"
  },
  {
    "text": "ensure that the software is user friendly and that you help newcomers to",
    "start": "1497320",
    "end": "1502880"
  },
  {
    "text": "the field learn how to use the new capability in addition the framework should be extensible so that other",
    "start": "1502880",
    "end": "1509799"
  },
  {
    "text": "contributors can expand it and improve its analytics capabilities over",
    "start": "1509799",
    "end": "1515799"
  },
  {
    "text": "time if accepted as a stable feature the community will have deemed it useful and",
    "start": "1515799",
    "end": "1521960"
  },
  {
    "text": "feasible for real world production and more investment will be made in the future",
    "start": "1521960",
    "end": "1529679"
  },
  {
    "text": "in this talk we have discussed how learning velocity scalability and cost",
    "start": "1531240",
    "end": "1536440"
  },
  {
    "text": "can be improved in security by learning the normal highfrequency behavior of applications",
    "start": "1536440",
    "end": "1543840"
  },
  {
    "text": "and accessing more information on the host we can increase the chances of",
    "start": "1543840",
    "end": "1548960"
  },
  {
    "text": "detecting unknown attacks this is important because traditional security approaches are",
    "start": "1548960",
    "end": "1554360"
  },
  {
    "text": "often unable to detect novel attacks big explanation mark here we still need",
    "start": "1554360",
    "end": "1560320"
  },
  {
    "text": "human domain expertise we can now adapt to changes in",
    "start": "1560320",
    "end": "1566600"
  },
  {
    "text": "application behavior and detect new attacks more quickly than traditional solutions they can also scale to meet",
    "start": "1566600",
    "end": "1574480"
  },
  {
    "text": "the needs of large and complex environments we can reduce the cost of",
    "start": "1574480",
    "end": "1579720"
  },
  {
    "text": "security by avoiding the need to manually tune and maintain traditional",
    "start": "1579720",
    "end": "1584840"
  },
  {
    "text": "Solutions additionally they can help through reduce the cost of data storage and processing by avoiding the need to",
    "start": "1584840",
    "end": "1592240"
  },
  {
    "text": "send all security data to a data Lake for analysis overall learning based Security",
    "start": "1592240",
    "end": "1599080"
  },
  {
    "text": "Solutions offer a number of advantages over traditional",
    "start": "1599080",
    "end": "1604799"
  },
  {
    "text": "Solutions okay thank you for having me here and I thought I would be going close to the end of the presentation but",
    "start": "1607559",
    "end": "1613919"
  },
  {
    "text": "it seems like I do have some time for some questions",
    "start": "1613919",
    "end": "1619600"
  },
  {
    "text": "do we have a microphone",
    "start": "1630360",
    "end": "1633960"
  },
  {
    "text": "okay you go thank you um outside of the detection do you have any uh remediation",
    "start": "1641120",
    "end": "1648120"
  },
  {
    "text": "um options with that too is it just mostly just detecting yeah so this talk was only about detections on the host",
    "start": "1648120",
    "end": "1654880"
  },
  {
    "text": "itself there probably would be many other talks about how you would go about similar algorithms or procedures in a",
    "start": "1654880",
    "end": "1662320"
  },
  {
    "text": "data lay compute environment or as he said for incident response or for other aspects of security so again this was",
    "start": "1662320",
    "end": "1670120"
  },
  {
    "text": "only focused on do more advanced data analytics on the host itself because you",
    "start": "1670120",
    "end": "1675159"
  },
  {
    "text": "can tap into Data that otherwise you could not do this is why I was highlighting the file open example",
    "start": "1675159",
    "end": "1680440"
  },
  {
    "text": "because it would be crazy to send off all open sis calls of the host you basically cannot do",
    "start": "1680440",
    "end": "1687679"
  },
  {
    "text": "it okay now more there's one",
    "start": "1705919",
    "end": "1710320"
  },
  {
    "text": "more thank",
    "start": "1711080",
    "end": "1714360"
  },
  {
    "text": "you go thank you I appreciate that you hi yeah I had a uh wow that's loud",
    "start": "1716399",
    "end": "1723799"
  },
  {
    "text": "uh a quick question on basically what you're doing is effectively is anomaly detection because you're learning some",
    "start": "1723799",
    "end": "1730000"
  },
  {
    "text": "amount of the normal behavior and then uh pulling out the anomalies the question I have is how that scales uh uh",
    "start": "1730000",
    "end": "1737679"
  },
  {
    "text": "because when you get when I think of anomaly detection at Apple scale or",
    "start": "1737679",
    "end": "1742799"
  },
  {
    "text": "Google scale or something there's so many events happening that anomalies",
    "start": "1742799",
    "end": "1747880"
  },
  {
    "text": "happen all the time and so you still end up flooding the the team with alerts so how do you handle that how do you do the",
    "start": "1747880",
    "end": "1753760"
  },
  {
    "text": "next layer of filtering to filter out the anomalies you detected that they're not at all interesting that's the kind",
    "start": "1753760",
    "end": "1760399"
  },
  {
    "text": "of essence of scalability challenges correct I totally agree with you this is why I recommended to not uh use this",
    "start": "1760399",
    "end": "1767399"
  },
  {
    "text": "simple cman sketch filtering while monitoring all file opens so definitely don't do this and I believe the first",
    "start": "1767399",
    "end": "1774480"
  },
  {
    "text": "Next Step would be to use these probabilistic counts to for example if you look at the Upstream file rules",
    "start": "1774480",
    "end": "1780840"
  },
  {
    "text": "there's one for sensitive files and that's also the one I showed here but it only looks at uh a subset of the Etsy",
    "start": "1780840",
    "end": "1787720"
  },
  {
    "text": "directory so maybe with this probis counting you could expand your monitoring to all of the Etsy directory",
    "start": "1787720",
    "end": "1794640"
  },
  {
    "text": "so I believe in going just small steps and see how it works in production I",
    "start": "1794640",
    "end": "1799840"
  },
  {
    "text": "would never turn this on for all file opens and to your point of there's always going to be anomalies yes common",
    "start": "1799840",
    "end": "1806559"
  },
  {
    "text": "anti patterns are SES doing at hoc uh debugging people maybe being more new to",
    "start": "1806559",
    "end": "1813760"
  },
  {
    "text": "kubernetes they don't know how it works yet and they also do a lot of interesting debugging and as you said as",
    "start": "1813760",
    "end": "1821320"
  },
  {
    "text": "at a large company at a large scale there will always be a lot of data coming in but I also believe it's not a",
    "start": "1821320",
    "end": "1827799"
  },
  {
    "text": "problem to over collect a little bit and capture some more data and I think the",
    "start": "1827799",
    "end": "1834760"
  },
  {
    "text": "main message of this talk is that you don't have to log all of the exact ve",
    "start": "1834760",
    "end": "1839880"
  },
  {
    "text": "system calls you don't have to log all of the network system calls or file opens to be able to do very",
    "start": "1839880",
    "end": "1846080"
  },
  {
    "text": "comprehensive forensics for example so again it's really about that you can be more adventurous in your Falco rules and",
    "start": "1846080",
    "end": "1854080"
  },
  {
    "text": "expand your logging without blowing up your data l and production at the same",
    "start": "1854080",
    "end": "1860960"
  },
  {
    "text": "time I think we have one more question right here okay",
    "start": "1866799",
    "end": "1874399"
  },
  {
    "text": "sorry um so you talked about like um monitoring system calls um in",
    "start": "1874880",
    "end": "1880600"
  },
  {
    "text": "particularly file descriptors um but what if um more system activity or like",
    "start": "1880600",
    "end": "1888480"
  },
  {
    "text": "um host activi is added like wouldn't that lead to like um more unique events",
    "start": "1888480",
    "end": "1895240"
  },
  {
    "text": "so to speak so let's say Network calls or um you know just pairing it with",
    "start": "1895240",
    "end": "1901559"
  },
  {
    "text": "other um activity on the system and wouldn't that lead to more alerts in",
    "start": "1901559",
    "end": "1907679"
  },
  {
    "text": "general mhm I so is it just um if we are",
    "start": "1907679",
    "end": "1913720"
  },
  {
    "text": "monitoring one type of system calls or is it possible to scale all to every attribute of a process",
    "start": "1913720",
    "end": "1921480"
  },
  {
    "text": "let's say oh so um I mean since I'm presenting here about Falco Falco can hook into I think by now it's over 300",
    "start": "1921480",
    "end": "1928519"
  },
  {
    "text": "system calls the way it works in a kernel we hook into the system call enter and exit events and uh you can",
    "start": "1928519",
    "end": "1934880"
  },
  {
    "text": "create your custom rules and monitor any system call you want in addition to that you have more options in the Curel like",
    "start": "1934880",
    "end": "1941559"
  },
  {
    "text": "Linux security module hooks are another option to for example monitor file opens",
    "start": "1941559",
    "end": "1946720"
  },
  {
    "text": "there's added benefits to it and uh I didn't quite get the the the other part",
    "start": "1946720",
    "end": "1952200"
  },
  {
    "text": "of the question um I mean basically it um uh",
    "start": "1952200",
    "end": "1959480"
  },
  {
    "text": "detects one common pattern right and then that way it's able to reduce the alerts but if we add um more monitoring",
    "start": "1959480",
    "end": "1967559"
  },
  {
    "text": "wouldn't that lead to more unique scenarios or cases leading to more alerts so to speak okay yeah I bet so",
    "start": "1967559",
    "end": "1975159"
  },
  {
    "text": "this is why I always recommend to be very very conservative in production and first try one little thing and then go",
    "start": "1975159",
    "end": "1980600"
  },
  {
    "text": "from there and what happens today if you have Falcon rules that are let's say",
    "start": "1980600",
    "end": "1986679"
  },
  {
    "text": "considered to be more data collection they're not expected to fire just on malicious activity sometimes what can",
    "start": "1986679",
    "end": "1993600"
  },
  {
    "text": "happen is that it works well for a months and then it totally blows up so I would really like to stress that the",
    "start": "1993600",
    "end": "2000519"
  },
  {
    "text": "biggest advantage of this will be the safety boundary that these super Heavy Hitters you can just automatically tune",
    "start": "2000519",
    "end": "2007480"
  },
  {
    "text": "and in addition doing this manually it's a lot of engineering time and effort so I would be since I deployed to a very",
    "start": "2007480",
    "end": "2014679"
  },
  {
    "text": "large environment there's going to be left more time left for me to work on these features and I constantly tune the",
    "start": "2014679",
    "end": "2021480"
  },
  {
    "text": "the rules um so pretty new to Falco here um",
    "start": "2021480",
    "end": "2028320"
  },
  {
    "text": "if you could tell me you know maybe using like a tool like srace that's you",
    "start": "2028320",
    "end": "2033559"
  },
  {
    "text": "know a lot more lightweight versus what's what's the advantage that falico brings and is there any overhead added",
    "start": "2033559",
    "end": "2040720"
  },
  {
    "text": "or if you could go a little bit into that so I would recommend you EST TR is for a talk debugging and Falco is for",
    "start": "2040720",
    "end": "2047440"
  },
  {
    "text": "comprehensive monitoring and large production environments uh my favorite",
    "start": "2047440",
    "end": "2052480"
  },
  {
    "text": "uh part of Falco is the rules expression language it's very powerful to really",
    "start": "2052480",
    "end": "2058240"
  },
  {
    "text": "tell Falco what to monitor on the host and in combination with that one I think we can we can really shift the",
    "start": "2058240",
    "end": "2064839"
  },
  {
    "text": "information as symmetry just a little bit cool thank you so",
    "start": "2064839",
    "end": "2071040"
  },
  {
    "text": "much Melissa do we have time for one more uh it's uh 38 seconds this is our",
    "start": "2074399",
    "end": "2080000"
  },
  {
    "text": "last question here you go real quick uh does felco have any way of mapping processes to the pods that are are",
    "start": "2080000",
    "end": "2085960"
  },
  {
    "text": "running that process so that if a pod moves to a different host you can maybe track that behavior okay so try one most two",
    "start": "2085960",
    "end": "2093520"
  },
  {
    "text": "different host that's an interesting question but yes we do into the Container runtime socket and we fetch",
    "start": "2093520",
    "end": "2099400"
  },
  {
    "text": "all the common kubernetes and container information such as container name tag and also name space and partt name and",
    "start": "2099400",
    "end": "2106920"
  },
  {
    "text": "uh by the way we're currently reworking the KA client to tap even into more",
    "start": "2106920",
    "end": "2112160"
  },
  {
    "text": "kubernetes Fields okay we're we're down to Z",
    "start": "2112160",
    "end": "2117240"
  },
  {
    "text": "seconds thank you",
    "start": "2117240",
    "end": "2123000"
  }
]