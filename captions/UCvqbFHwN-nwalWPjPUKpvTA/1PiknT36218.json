[
  {
    "text": "all right let's get started um this talk",
    "start": "480",
    "end": "3520"
  },
  {
    "text": "is on building uh space DP which is a",
    "start": "3520",
    "end": "5600"
  },
  {
    "text": "grpc native database just to clear the",
    "start": "5600",
    "end": "7839"
  },
  {
    "text": "air before starting the talk this uh",
    "start": "7839",
    "end": "10160"
  },
  {
    "text": "this project this uh database is not for",
    "start": "10160",
    "end": "12519"
  },
  {
    "text": "storing Proto Buffs in it so it's not",
    "start": "12519",
    "end": "14200"
  },
  {
    "text": "for uh specifically storing um Proto",
    "start": "14200",
    "end": "17000"
  },
  {
    "text": "Buffs but it is for a database whose",
    "start": "17000",
    "end": "19000"
  },
  {
    "text": "primary querying interface is not",
    "start": "19000",
    "end": "20680"
  },
  {
    "text": "something like SQL but actually",
    "start": "20680",
    "end": "23039"
  },
  {
    "text": "grpc uh bit of background on me I'm one",
    "start": "23039",
    "end": "25800"
  },
  {
    "text": "of the creators of spice DB um and",
    "start": "25800",
    "end": "27640"
  },
  {
    "text": "co-founders of a uh company called ozed",
    "start": "27640",
    "end": "30519"
  },
  {
    "text": "um previously I worked at Red Hat um",
    "start": "30519",
    "end": "33200"
  },
  {
    "text": "through the coros acquisition so I've",
    "start": "33200",
    "end": "35280"
  },
  {
    "text": "been in kind of like the cloud native",
    "start": "35280",
    "end": "36600"
  },
  {
    "text": "ecosystem since the beginning um I'm",
    "start": "36600",
    "end": "38719"
  },
  {
    "text": "actually an oci maintainer so that's the",
    "start": "38719",
    "end": "40440"
  },
  {
    "text": "standards body behind containers um I've",
    "start": "40440",
    "end": "42800"
  },
  {
    "text": "created a bunch of different projects in",
    "start": "42800",
    "end": "44160"
  },
  {
    "text": "the cncf as well um the slides are uh",
    "start": "44160",
    "end": "47280"
  },
  {
    "text": "uploaded um online so if you want to",
    "start": "47280",
    "end": "49680"
  },
  {
    "text": "contact me you can reach out to me on",
    "start": "49680",
    "end": "51120"
  },
  {
    "text": "any of these places my email is probably",
    "start": "51120",
    "end": "52960"
  },
  {
    "text": "the best place um I'm going to go pretty",
    "start": "52960",
    "end": "56079"
  },
  {
    "text": "quick just because I have a lot of",
    "start": "56079",
    "end": "57079"
  },
  {
    "text": "content um does anyone know what this is",
    "start": "57079",
    "end": "60480"
  },
  {
    "text": "do they remember",
    "start": "60480",
    "end": "62079"
  },
  {
    "text": "this we've got some googlers here you",
    "start": "62079",
    "end": "64720"
  },
  {
    "text": "should know this um exactly it is it's",
    "start": "64720",
    "end": "68680"
  },
  {
    "text": "Google+ correct um so Google+ is uh the",
    "start": "68680",
    "end": "72640"
  },
  {
    "text": "old social network that Google built um",
    "start": "72640",
    "end": "74960"
  },
  {
    "text": "I think around",
    "start": "74960",
    "end": "76240"
  },
  {
    "text": "2011 yep and it had this one particular",
    "start": "76240",
    "end": "80200"
  },
  {
    "text": "feature that's really interesting called",
    "start": "80200",
    "end": "81640"
  },
  {
    "text": "circles and what circles were were the",
    "start": "81640",
    "end": "84600"
  },
  {
    "text": "ability for you unlike another social",
    "start": "84600",
    "end": "86799"
  },
  {
    "text": "network kind of like LinkedIn or",
    "start": "86799",
    "end": "88720"
  },
  {
    "text": "Facebook where you would just directly",
    "start": "88720",
    "end": "90240"
  },
  {
    "text": "connect to another user or friend",
    "start": "90240",
    "end": "92240"
  },
  {
    "text": "another user you could actually put",
    "start": "92240",
    "end": "93840"
  },
  {
    "text": "users into buckets and those different",
    "start": "93840",
    "end": "95840"
  },
  {
    "text": "buckets could have different um data",
    "start": "95840",
    "end": "97880"
  },
  {
    "text": "shared with them so you could post and",
    "start": "97880",
    "end": "99360"
  },
  {
    "text": "say only one particular group gets",
    "start": "99360",
    "end": "101320"
  },
  {
    "text": "access or the intersection of these two",
    "start": "101320",
    "end": "103479"
  },
  {
    "text": "groups or the union of these two groups",
    "start": "103479",
    "end": "105119"
  },
  {
    "text": "basically gave you set logic around",
    "start": "105119",
    "end": "107079"
  },
  {
    "text": "sharing um and that was actually driven",
    "start": "107079",
    "end": "110079"
  },
  {
    "text": "by an internal system at Google called",
    "start": "110079",
    "end": "112000"
  },
  {
    "text": "Zanzibar and DB is actually the",
    "start": "112000",
    "end": "114439"
  },
  {
    "text": "open-source um inspiration uh created by",
    "start": "114439",
    "end": "118119"
  },
  {
    "text": "zanar um so what we do is we are an open",
    "start": "118119",
    "end": "121600"
  },
  {
    "text": "source database written in go it's",
    "start": "121600",
    "end": "123280"
  },
  {
    "text": "Apache 2.0 licensed and uh we are",
    "start": "123280",
    "end": "126560"
  },
  {
    "text": "purpose built for storing and querying",
    "start": "126560",
    "end": "128399"
  },
  {
    "text": "authorization data um so it's not a",
    "start": "128399",
    "end": "130520"
  },
  {
    "text": "general purpose database this is just a",
    "start": "130520",
    "end": "132040"
  },
  {
    "text": "database specifically for querying",
    "start": "132040",
    "end": "134440"
  },
  {
    "text": "whether or not a particular user or",
    "start": "134440",
    "end": "136519"
  },
  {
    "text": "entity has access to perform an action",
    "start": "136519",
    "end": "138480"
  },
  {
    "text": "on another entity um you might be",
    "start": "138480",
    "end": "141000"
  },
  {
    "text": "wondering why you would need something",
    "start": "141000",
    "end": "142239"
  },
  {
    "text": "like this um what it really empowers is",
    "start": "142239",
    "end": "145720"
  },
  {
    "text": "kind of two things um it gives you the",
    "start": "145720",
    "end": "148280"
  },
  {
    "text": "ability to kind of centralize",
    "start": "148280",
    "end": "150080"
  },
  {
    "text": "authorization across your business or",
    "start": "150080",
    "end": "151720"
  },
  {
    "text": "product portfolio um so if you have",
    "start": "151720",
    "end": "153879"
  },
  {
    "text": "something like Gmail and Google Drive at",
    "start": "153879",
    "end": "156160"
  },
  {
    "text": "Google um you can Implement interesting",
    "start": "156160",
    "end": "158920"
  },
  {
    "text": "Behavior like um if you send an email to",
    "start": "158920",
    "end": "162599"
  },
  {
    "text": "someone that has a Google doc Link in it",
    "start": "162599",
    "end": "165599"
  },
  {
    "text": "um Gmail can actually pop up a warning",
    "start": "165599",
    "end": "167040"
  },
  {
    "text": "and say hey you didn't share this with",
    "start": "167040",
    "end": "168840"
  },
  {
    "text": "this person that's because it could",
    "start": "168840",
    "end": "170239"
  },
  {
    "text": "query the central authorization service",
    "start": "170239",
    "end": "171959"
  },
  {
    "text": "to ask whether or not um the user that",
    "start": "171959",
    "end": "174480"
  },
  {
    "text": "you're emailing has access to that doc",
    "start": "174480",
    "end": "176400"
  },
  {
    "text": "so there's no shared code between Gmail",
    "start": "176400",
    "end": "178200"
  },
  {
    "text": "and Google Docs it's just uh doing this",
    "start": "178200",
    "end": "180280"
  },
  {
    "text": "permissions check at the authorization",
    "start": "180280",
    "end": "182159"
  },
  {
    "text": "layer um so uh it gives you kind of that",
    "start": "182159",
    "end": "186000"
  },
  {
    "text": "functionality but it also kind of gives",
    "start": "186000",
    "end": "187480"
  },
  {
    "text": "you this social functionality that um",
    "start": "187480",
    "end": "190080"
  },
  {
    "text": "you can actually have a team dedicated",
    "start": "190080",
    "end": "192159"
  },
  {
    "text": "and centrally um managing authorization",
    "start": "192159",
    "end": "194680"
  },
  {
    "text": "across your business so a lot of",
    "start": "194680",
    "end": "196760"
  },
  {
    "text": "companies right now they have ad hoc",
    "start": "196760",
    "end": "198480"
  },
  {
    "text": "implementations of authorization across",
    "start": "198480",
    "end": "200120"
  },
  {
    "text": "all their different applications um and",
    "start": "200120",
    "end": "203080"
  },
  {
    "text": "that leads to um a lot of different",
    "start": "203080",
    "end": "205440"
  },
  {
    "text": "inconsistencies across the board it's",
    "start": "205440",
    "end": "207040"
  },
  {
    "text": "really hard to audit maybe you have",
    "start": "207040",
    "end": "208640"
  },
  {
    "text": "pulled some of that stuff out into a",
    "start": "208640",
    "end": "209799"
  },
  {
    "text": "library but the second you have um",
    "start": "209799",
    "end": "212120"
  },
  {
    "text": "different programming languages in your",
    "start": "212120",
    "end": "213400"
  },
  {
    "text": "stack okay now you can't really share a",
    "start": "213400",
    "end": "214799"
  },
  {
    "text": "bunch of that logic um so what we have",
    "start": "214799",
    "end": "217439"
  },
  {
    "text": "here is the basically the network layer",
    "start": "217439",
    "end": "219680"
  },
  {
    "text": "separating that and having a dedicated",
    "start": "219680",
    "end": "221120"
  },
  {
    "text": "service and that means you can build a",
    "start": "221120",
    "end": "222799"
  },
  {
    "text": "team around it that team can help",
    "start": "222799",
    "end": "224519"
  },
  {
    "text": "onboard um other customers within your",
    "start": "224519",
    "end": "226840"
  },
  {
    "text": "company um to to understand uh basically",
    "start": "226840",
    "end": "230159"
  },
  {
    "text": "the best practices and how to keep",
    "start": "230159",
    "end": "232200"
  },
  {
    "text": "everything secure and scalable um so",
    "start": "232200",
    "end": "234879"
  },
  {
    "text": "example of some queries that you can do",
    "start": "234879",
    "end": "236120"
  },
  {
    "text": "in spice TB are uh asking whether a",
    "start": "236120",
    "end": "238480"
  },
  {
    "text": "subject can take a particular action on",
    "start": "238480",
    "end": "240000"
  },
  {
    "text": "a resource that's just a permissions",
    "start": "240000",
    "end": "242200"
  },
  {
    "text": "check um that should be super familiar",
    "start": "242200",
    "end": "243799"
  },
  {
    "text": "to people um but where TB really",
    "start": "243799",
    "end": "246120"
  },
  {
    "text": "shines and um the advantage it gets by",
    "start": "246120",
    "end": "249000"
  },
  {
    "text": "actually owning the data in its own",
    "start": "249000",
    "end": "250439"
  },
  {
    "text": "database is that you can do kind of",
    "start": "250439",
    "end": "252239"
  },
  {
    "text": "different style of queries to this data",
    "start": "252239",
    "end": "254720"
  },
  {
    "text": "like discovering all the subjects that",
    "start": "254720",
    "end": "256359"
  },
  {
    "text": "can take a particular action on a",
    "start": "256359",
    "end": "257759"
  },
  {
    "text": "resource or discovering all the",
    "start": "257759",
    "end": "259239"
  },
  {
    "text": "resources that a particular user can",
    "start": "259239",
    "end": "260720"
  },
  {
    "text": "take an action on um most other systems",
    "start": "260720",
    "end": "263240"
  },
  {
    "text": "can only kind of do this first check um",
    "start": "263240",
    "end": "265400"
  },
  {
    "text": "but we can actually kind of help you",
    "start": "265400",
    "end": "267199"
  },
  {
    "text": "discover and understand uh the",
    "start": "267199",
    "end": "268919"
  },
  {
    "text": "relationships between between a lot of",
    "start": "268919",
    "end": "270160"
  },
  {
    "text": "this data um so if you do have an outage",
    "start": "270160",
    "end": "272639"
  },
  {
    "text": "or a security flaw um you can actually",
    "start": "272639",
    "end": "274560"
  },
  {
    "text": "go back after the fact and query it and",
    "start": "274560",
    "end": "276080"
  },
  {
    "text": "really understand what that data looked",
    "start": "276080",
    "end": "277320"
  },
  {
    "text": "like at that point in time all right",
    "start": "277320",
    "end": "280000"
  },
  {
    "text": "enough about spice DB um we're database",
    "start": "280000",
    "end": "283520"
  },
  {
    "text": "right why didn't we pick SQL like that's",
    "start": "283520",
    "end": "285240"
  },
  {
    "text": "the obvious question um you're building",
    "start": "285240",
    "end": "287000"
  },
  {
    "text": "a database It's Time to whip out the SQL",
    "start": "287000",
    "end": "289800"
  },
  {
    "text": "um but it turns out we're not really a",
    "start": "289800",
    "end": "292840"
  },
  {
    "text": "general purpose database we have very",
    "start": "292840",
    "end": "295120"
  },
  {
    "text": "specific queries we're trying to Target",
    "start": "295120",
    "end": "296520"
  },
  {
    "text": "and make those as fast as possible this",
    "start": "296520",
    "end": "298639"
  },
  {
    "text": "gives us an interesting Dynamic where uh",
    "start": "298639",
    "end": "301400"
  },
  {
    "text": "we actually don't really need to do",
    "start": "301400",
    "end": "303280"
  },
  {
    "text": "Dynamic query planning quite as much as",
    "start": "303280",
    "end": "305120"
  },
  {
    "text": "a general purpose database does um in a",
    "start": "305120",
    "end": "307800"
  },
  {
    "text": "general purpose database you have to",
    "start": "307800",
    "end": "309199"
  },
  {
    "text": "kind of parse the SQL and then build a",
    "start": "309199",
    "end": "311000"
  },
  {
    "text": "structure for how you're going to",
    "start": "311000",
    "end": "311919"
  },
  {
    "text": "execute uh the plan to um to fetch that",
    "start": "311919",
    "end": "315520"
  },
  {
    "text": "data we don't have to do that because uh",
    "start": "315520",
    "end": "318000"
  },
  {
    "text": "we actually kind of hardcode a lot of",
    "start": "318000",
    "end": "319400"
  },
  {
    "text": "that logic into the schema um itself um",
    "start": "319400",
    "end": "323360"
  },
  {
    "text": "so we didn't really need the general",
    "start": "323360",
    "end": "324479"
  },
  {
    "text": "purpos of SQL uh the other thing is SQL",
    "start": "324479",
    "end": "326960"
  },
  {
    "text": "just has a lot of baggage uh if you you",
    "start": "326960",
    "end": "330199"
  },
  {
    "text": "look at a typical kind of SQL wire",
    "start": "330199",
    "end": "332160"
  },
  {
    "text": "protocol um I'm honestly just talking",
    "start": "332160",
    "end": "334680"
  },
  {
    "text": "about postgress in this scenario but my",
    "start": "334680",
    "end": "336560"
  },
  {
    "text": "SQL is not great either um basically",
    "start": "336560",
    "end": "339039"
  },
  {
    "text": "they're stateful on the connection",
    "start": "339039",
    "end": "340720"
  },
  {
    "text": "you're not going to be able to Multiplex",
    "start": "340720",
    "end": "342160"
  },
  {
    "text": "multiple requests over a single",
    "start": "342160",
    "end": "343360"
  },
  {
    "text": "connection it's pretty inefficient um",
    "start": "343360",
    "end": "345840"
  },
  {
    "text": "and then if you're trying to really get",
    "start": "345840",
    "end": "347160"
  },
  {
    "text": "banged for your buck you're probably",
    "start": "347160",
    "end": "348120"
  },
  {
    "text": "going to want to try to reuse some of",
    "start": "348120",
    "end": "349240"
  },
  {
    "text": "the clients in the ecosystem uh so that",
    "start": "349240",
    "end": "351520"
  },
  {
    "text": "you don't have to implement clients in",
    "start": "351520",
    "end": "352680"
  },
  {
    "text": "every language and a lot of those have",
    "start": "352680",
    "end": "354800"
  },
  {
    "text": "logic built into them um trying to deal",
    "start": "354800",
    "end": "356919"
  },
  {
    "text": "with kind of inadequacies in post graphs",
    "start": "356919",
    "end": "359319"
  },
  {
    "text": "that might not exist in your database um",
    "start": "359319",
    "end": "361560"
  },
  {
    "text": "for example how they manage uh memory",
    "start": "361560",
    "end": "363680"
  },
  {
    "text": "for connections on the server side and",
    "start": "363680",
    "end": "365919"
  },
  {
    "text": "if TB is written such a way that it",
    "start": "365919",
    "end": "368160"
  },
  {
    "text": "doesn't have that same constraint then",
    "start": "368160",
    "end": "370000"
  },
  {
    "text": "it's kind of just lost",
    "start": "370000",
    "end": "372039"
  },
  {
    "text": "performance so we arrived at grpc and we",
    "start": "372039",
    "end": "375639"
  },
  {
    "text": "kind of landed on it for a couple",
    "start": "375639",
    "end": "376759"
  },
  {
    "text": "different reasons um big one is the IDL",
    "start": "376759",
    "end": "379440"
  },
  {
    "text": "so having an IDL format to Define uh",
    "start": "379440",
    "end": "382080"
  },
  {
    "text": "your apis ahead of time and kind of code",
    "start": "382080",
    "end": "383840"
  },
  {
    "text": "review and study that and use tools like",
    "start": "383840",
    "end": "385840"
  },
  {
    "text": "buff to lint it and just understand um",
    "start": "385840",
    "end": "388039"
  },
  {
    "text": "and generate docs super super useful um",
    "start": "388039",
    "end": "391800"
  },
  {
    "text": "the real thing is the maturity and the",
    "start": "391800",
    "end": "393479"
  },
  {
    "text": "multi- language uh aspect of grpc so the",
    "start": "393479",
    "end": "396440"
  },
  {
    "text": "fact that we knew we could generate",
    "start": "396440",
    "end": "398319"
  },
  {
    "text": "clients in all the different languages",
    "start": "398319",
    "end": "399880"
  },
  {
    "text": "our customers would possibly be using um",
    "start": "399880",
    "end": "402720"
  },
  {
    "text": "we know that out there everyone's going",
    "start": "402720",
    "end": "404639"
  },
  {
    "text": "to be using every single language so the",
    "start": "404639",
    "end": "406639"
  },
  {
    "text": "ability for us to support all those",
    "start": "406639",
    "end": "408199"
  },
  {
    "text": "languages as easy as kind of just",
    "start": "408199",
    "end": "410080"
  },
  {
    "text": "running a protoc c generator um was",
    "start": "410080",
    "end": "413360"
  },
  {
    "text": "really important the other thing is just",
    "start": "413360",
    "end": "415800"
  },
  {
    "text": "jpc's been around we're celebrating the",
    "start": "415800",
    "end": "417440"
  },
  {
    "text": "10th anniversary right um not many other",
    "start": "417440",
    "end": "419599"
  },
  {
    "text": "formats like this have been around that",
    "start": "419599",
    "end": "421000"
  },
  {
    "text": "long and um they're not as stable like",
    "start": "421000",
    "end": "423759"
  },
  {
    "text": "realistically there are little hiccups",
    "start": "423759",
    "end": "425319"
  },
  {
    "text": "between Proto 2 and Proto 3 but not",
    "start": "425319",
    "end": "427720"
  },
  {
    "text": "really in the same way that you would",
    "start": "427720",
    "end": "429319"
  },
  {
    "text": "find even at like any of the other",
    "start": "429319",
    "end": "431840"
  },
  {
    "text": "formats that exist right now if you went",
    "start": "431840",
    "end": "433400"
  },
  {
    "text": "out and looked at like Captain Proto or",
    "start": "433400",
    "end": "435199"
  },
  {
    "text": "flat buffers they're making similar",
    "start": "435199",
    "end": "437000"
  },
  {
    "text": "changes that are kind of on a scale",
    "start": "437000",
    "end": "439319"
  },
  {
    "text": "breaking more than what you'd find",
    "start": "439319",
    "end": "440639"
  },
  {
    "text": "between two and three um and then we",
    "start": "440639",
    "end": "443360"
  },
  {
    "text": "also had built a lot of stuff in go",
    "start": "443360",
    "end": "444919"
  },
  {
    "text": "before and we knew that the um libraries",
    "start": "444919",
    "end": "447639"
  },
  {
    "text": "for building out grp service uh grpc",
    "start": "447639",
    "end": "449919"
  },
  {
    "text": "services and go were fairly mature um",
    "start": "449919",
    "end": "453160"
  },
  {
    "text": "the other thing too is that we knew that",
    "start": "453160",
    "end": "454599"
  },
  {
    "text": "we could get pretty reasonable",
    "start": "454599",
    "end": "455599"
  },
  {
    "text": "performance out of it um I talk about",
    "start": "455599",
    "end": "457680"
  },
  {
    "text": "cffi and kind of native implementations",
    "start": "457680",
    "end": "459520"
  },
  {
    "text": "in a bunch of different languages uh we",
    "start": "459520",
    "end": "461199"
  },
  {
    "text": "just knew the performance uh picking up",
    "start": "461199",
    "end": "463000"
  },
  {
    "text": "the clients would be fairly good",
    "start": "463000",
    "end": "465840"
  },
  {
    "text": "um so this is kind of the overall",
    "start": "465840",
    "end": "468720"
  },
  {
    "text": "architecture of spice TB uh the green",
    "start": "468720",
    "end": "471039"
  },
  {
    "text": "lines are the ones where uh it's",
    "start": "471039",
    "end": "473479"
  },
  {
    "text": "actually grpc flowing into the system so",
    "start": "473479",
    "end": "476240"
  },
  {
    "text": "if you look on the left hand side you'll",
    "start": "476240",
    "end": "479039"
  },
  {
    "text": "see that we have kind of the customers",
    "start": "479039",
    "end": "481280"
  },
  {
    "text": "and like the applications consuming the",
    "start": "481280",
    "end": "483039"
  },
  {
    "text": "database coming in through the front",
    "start": "483039",
    "end": "484240"
  },
  {
    "text": "door using grpc um we also use the rest",
    "start": "484240",
    "end": "487120"
  },
  {
    "text": "Gateway so you can use HTTP and Json",
    "start": "487120",
    "end": "489280"
  },
  {
    "text": "although we really don't recommend it um",
    "start": "489280",
    "end": "491120"
  },
  {
    "text": "but the rest Gateway basically just",
    "start": "491120",
    "end": "492879"
  },
  {
    "text": "immediately turns around and goes",
    "start": "492879",
    "end": "494400"
  },
  {
    "text": "converts the the Json into grpc and goes",
    "start": "494400",
    "end": "497960"
  },
  {
    "text": "right back through the front door um",
    "start": "497960",
    "end": "500440"
  },
  {
    "text": "then we kind of have the Second Use case",
    "start": "500440",
    "end": "502240"
  },
  {
    "text": "which is clustering uh spice DB so spice",
    "start": "502240",
    "end": "504840"
  },
  {
    "text": "DB will self cluster when you deploy it",
    "start": "504840",
    "end": "507000"
  },
  {
    "text": "and it will basically take requests from",
    "start": "507000",
    "end": "509120"
  },
  {
    "text": "the users and break them down into",
    "start": "509120",
    "end": "511039"
  },
  {
    "text": "smaller requests that then get charted",
    "start": "511039",
    "end": "512959"
  },
  {
    "text": "across a cluster um so there's intra",
    "start": "512959",
    "end": "515560"
  },
  {
    "text": "cluster networking as well and that is",
    "start": "515560",
    "end": "518039"
  },
  {
    "text": "all kind of powered by grpc um and then",
    "start": "518039",
    "end": "521399"
  },
  {
    "text": "fundamentally I also just wanted to call",
    "start": "521399",
    "end": "523039"
  },
  {
    "text": "out um you can see this little schema",
    "start": "523039",
    "end": "524399"
  },
  {
    "text": "box that also is green um we're just",
    "start": "524399",
    "end": "526920"
  },
  {
    "text": "reusing the fact that we have the",
    "start": "526920",
    "end": "528279"
  },
  {
    "text": "protuff marshallers in a couple places",
    "start": "528279",
    "end": "530440"
  },
  {
    "text": "um like how we store things in a",
    "start": "530440",
    "end": "531440"
  },
  {
    "text": "database and how we store things in a",
    "start": "531440",
    "end": "532640"
  },
  {
    "text": "cache it's just convenient once you have",
    "start": "532640",
    "end": "534399"
  },
  {
    "text": "this Marshall and unmarshal",
    "start": "534399",
    "end": "536360"
  },
  {
    "text": "functionality so I'm going to start with",
    "start": "536360",
    "end": "538560"
  },
  {
    "text": "uh the external facing grpc um basically",
    "start": "538560",
    "end": "541560"
  },
  {
    "text": "the number one use case here is uh user",
    "start": "541560",
    "end": "543640"
  },
  {
    "text": "experience it's the thing that matters",
    "start": "543640",
    "end": "545399"
  },
  {
    "text": "the most because this is uh what the",
    "start": "545399",
    "end": "547640"
  },
  {
    "text": "Journey of our customers and users um",
    "start": "547640",
    "end": "549880"
  },
  {
    "text": "it's what they have to integrate with",
    "start": "549880",
    "end": "551480"
  },
  {
    "text": "spice DB um so really the priority here",
    "start": "551480",
    "end": "554880"
  },
  {
    "text": "was having really nice um API",
    "start": "554880",
    "end": "557800"
  },
  {
    "text": "documentation and um using the IDL that",
    "start": "557800",
    "end": "561079"
  },
  {
    "text": "really really helps with this because we",
    "start": "561079",
    "end": "562959"
  },
  {
    "text": "can generate documentation off of our",
    "start": "562959",
    "end": "565600"
  },
  {
    "text": "API definitions um and we can we even",
    "start": "565600",
    "end": "568480"
  },
  {
    "text": "use this other project called protu gen",
    "start": "568480",
    "end": "570519"
  },
  {
    "text": "validate and what that does is it",
    "start": "570519",
    "end": "572560"
  },
  {
    "text": "actually lets us Define even valid",
    "start": "572560",
    "end": "574240"
  },
  {
    "text": "strings or valid bite sequences that go",
    "start": "574240",
    "end": "576720"
  },
  {
    "text": "into the different fields in um in the",
    "start": "576720",
    "end": "579279"
  },
  {
    "text": "Proto Buffs and that also gets",
    "start": "579279",
    "end": "581320"
  },
  {
    "text": "propagated then into your documentation",
    "start": "581320",
    "end": "583079"
  },
  {
    "text": "so you're not constantly trying to like",
    "start": "583079",
    "end": "584560"
  },
  {
    "text": "keep synchronized your docs by hand with",
    "start": "584560",
    "end": "587040"
  },
  {
    "text": "the actual API definitions and the",
    "start": "587040",
    "end": "588480"
  },
  {
    "text": "behavior of your software um that's a",
    "start": "588480",
    "end": "591120"
  },
  {
    "text": "huge deal especially when you're dealing",
    "start": "591120",
    "end": "592920"
  },
  {
    "text": "with multiple languages um the other",
    "start": "592920",
    "end": "594720"
  },
  {
    "text": "thing that helps in multiple languages",
    "start": "594720",
    "end": "596040"
  },
  {
    "text": "is the ability to kind of cut a single",
    "start": "596040",
    "end": "597880"
  },
  {
    "text": "release cut a version of that API",
    "start": "597880",
    "end": "599800"
  },
  {
    "text": "definition and then have CI and CD",
    "start": "599800",
    "end": "601880"
  },
  {
    "text": "automation cut releases then of every",
    "start": "601880",
    "end": "603839"
  },
  {
    "text": "programming language you support that's",
    "start": "603839",
    "end": "605680"
  },
  {
    "text": "really really powerful and the ability",
    "start": "605680",
    "end": "607360"
  },
  {
    "text": "to automate that um just as a game",
    "start": "607360",
    "end": "609200"
  },
  {
    "text": "changer in terms of your ability to",
    "start": "609200",
    "end": "610680"
  },
  {
    "text": "support customers and different",
    "start": "610680",
    "end": "611959"
  },
  {
    "text": "environments um then finally I just",
    "start": "611959",
    "end": "614320"
  },
  {
    "text": "wanted to add a little bit more onto the",
    "start": "614320",
    "end": "615959"
  },
  {
    "text": "grpc Gateway it's kind of a mixed bag um",
    "start": "615959",
    "end": "618880"
  },
  {
    "text": "it's not the best ux from a rust",
    "start": "618880",
    "end": "621600"
  },
  {
    "text": "perspective I'm sure if you hand wrote",
    "start": "621600",
    "end": "623640"
  },
  {
    "text": "something and really paid attention you",
    "start": "623640",
    "end": "625200"
  },
  {
    "text": "could make a nicer uh HTP API but just",
    "start": "625200",
    "end": "628160"
  },
  {
    "text": "like I was kind of describ ding with the",
    "start": "628160",
    "end": "630279"
  },
  {
    "text": "um the API documentation perspective you",
    "start": "630279",
    "end": "632720"
  },
  {
    "text": "get a lot of bang for your buck like",
    "start": "632720",
    "end": "634560"
  },
  {
    "text": "you're just kind of defining this one",
    "start": "634560",
    "end": "636040"
  },
  {
    "text": "IDL and then you can actually generate",
    "start": "636040",
    "end": "637880"
  },
  {
    "text": "the rest API and you can generate open",
    "start": "637880",
    "end": "640079"
  },
  {
    "text": "API documentation off of that too so you",
    "start": "640079",
    "end": "642000"
  },
  {
    "text": "get not only documentation for your grpc",
    "start": "642000",
    "end": "644200"
  },
  {
    "text": "API you also get documentation for your",
    "start": "644200",
    "end": "646560"
  },
  {
    "text": "rest apis um all automated based off of",
    "start": "646560",
    "end": "649399"
  },
  {
    "text": "that one",
    "start": "649399",
    "end": "651040"
  },
  {
    "text": "definition um before I move on to the",
    "start": "651040",
    "end": "653560"
  },
  {
    "text": "the intra cluster I just kind of wanted",
    "start": "653560",
    "end": "655240"
  },
  {
    "text": "to take an aside to talk about",
    "start": "655240",
    "end": "656800"
  },
  {
    "text": "networking in the hot path because",
    "start": "656800",
    "end": "658880"
  },
  {
    "text": "author ization is super super critical",
    "start": "658880",
    "end": "662440"
  },
  {
    "text": "to your applications before your",
    "start": "662440",
    "end": "664639"
  },
  {
    "text": "requests to your apis talk to their",
    "start": "664639",
    "end": "667600"
  },
  {
    "text": "database they first need to check",
    "start": "667600",
    "end": "669399"
  },
  {
    "text": "whether or not the action you're trying",
    "start": "669399",
    "end": "671399"
  },
  {
    "text": "to take is is allowed um so",
    "start": "671399",
    "end": "673720"
  },
  {
    "text": "authorization is critical if your",
    "start": "673720",
    "end": "676160"
  },
  {
    "text": "authorization system goes down you're",
    "start": "676160",
    "end": "677519"
  },
  {
    "text": "not going to actually do any work",
    "start": "677519",
    "end": "678639"
  },
  {
    "text": "anymore because you can't guarantee that",
    "start": "678639",
    "end": "680160"
  },
  {
    "text": "people trying to do things are allowed",
    "start": "680160",
    "end": "681560"
  },
  {
    "text": "to do things um this means we care a lot",
    "start": "681560",
    "end": "684240"
  },
  {
    "text": "about different connection logic so",
    "start": "684240",
    "end": "686320"
  },
  {
    "text": "connections need to already be",
    "start": "686320",
    "end": "687959"
  },
  {
    "text": "established if you have to do a",
    "start": "687959",
    "end": "689839"
  },
  {
    "text": "synchronous uh handshake to establish a",
    "start": "689839",
    "end": "692040"
  },
  {
    "text": "connection you will blow your SLA um you",
    "start": "692040",
    "end": "694920"
  },
  {
    "text": "can't do that you can't even do that",
    "start": "694920",
    "end": "696160"
  },
  {
    "text": "once so you need to connection pooling",
    "start": "696160",
    "end": "697839"
  },
  {
    "text": "it all has to be there ideally you're",
    "start": "697839",
    "end": "699360"
  },
  {
    "text": "multiplexing your requests across um a",
    "start": "699360",
    "end": "701680"
  },
  {
    "text": "single connection um grpc enables that",
    "start": "701680",
    "end": "704399"
  },
  {
    "text": "with a feature called streams and then",
    "start": "704399",
    "end": "705800"
  },
  {
    "text": "you just need fast uh serialization and",
    "start": "705800",
    "end": "708079"
  },
  {
    "text": "deserialization um on the server um and",
    "start": "708079",
    "end": "710680"
  },
  {
    "text": "not all platforms have really fast uh",
    "start": "710680",
    "end": "713160"
  },
  {
    "text": "Json libraries if you're comparing",
    "start": "713160",
    "end": "715480"
  },
  {
    "text": "yourself to rest um and they're tricky",
    "start": "715480",
    "end": "717800"
  },
  {
    "text": "to write so uh protuff is definitely way",
    "start": "717800",
    "end": "720480"
  },
  {
    "text": "more straightforward for that um cool so",
    "start": "720480",
    "end": "724320"
  },
  {
    "text": "onto the int cluster um facing grpc use",
    "start": "724320",
    "end": "727800"
  },
  {
    "text": "case uh here we really care a lot about",
    "start": "727800",
    "end": "730360"
  },
  {
    "text": "efficiency so whereas um coming through",
    "start": "730360",
    "end": "732440"
  },
  {
    "text": "the front door we care about user",
    "start": "732440",
    "end": "733720"
  },
  {
    "text": "experience when you're kind of",
    "start": "733720",
    "end": "735440"
  },
  {
    "text": "interconnected across your own um",
    "start": "735440",
    "end": "737600"
  },
  {
    "text": "service you control both the client and",
    "start": "737600",
    "end": "739839"
  },
  {
    "text": "the server which means you can make a",
    "start": "739839",
    "end": "741440"
  },
  {
    "text": "lot of assumptions in the name of",
    "start": "741440",
    "end": "743079"
  },
  {
    "text": "performance and efficiency um so you can",
    "start": "743079",
    "end": "746120"
  },
  {
    "text": "do things like guarantee backwards",
    "start": "746120",
    "end": "747560"
  },
  {
    "text": "compatibility just like the because",
    "start": "747560",
    "end": "749360"
  },
  {
    "text": "that's how you wrote it um you can",
    "start": "749360",
    "end": "751040"
  },
  {
    "text": "assume configuration options on both",
    "start": "751040",
    "end": "753120"
  },
  {
    "text": "sides the client and the server um and",
    "start": "753120",
    "end": "755639"
  },
  {
    "text": "one of the things that is the biggest",
    "start": "755639",
    "end": "756920"
  },
  {
    "text": "deal here is it lets you use your own",
    "start": "756920",
    "end": "758880"
  },
  {
    "text": "kind of custom compression schemes so we",
    "start": "758880",
    "end": "761560"
  },
  {
    "text": "actually use this Library um called",
    "start": "761560",
    "end": "763720"
  },
  {
    "text": "compress and it has uh a experimental",
    "start": "763720",
    "end": "767040"
  },
  {
    "text": "variation of Snappy which is Intel's",
    "start": "767040",
    "end": "768839"
  },
  {
    "text": "compression um which is super super",
    "start": "768839",
    "end": "770760"
  },
  {
    "text": "efficient it's better than lz4 which is",
    "start": "770760",
    "end": "772959"
  },
  {
    "text": "probably the most common best-in-class",
    "start": "772959",
    "end": "774680"
  },
  {
    "text": "compression you can use um for for Proto",
    "start": "774680",
    "end": "777160"
  },
  {
    "text": "buff so that's really nice we don't have",
    "start": "777160",
    "end": "779000"
  },
  {
    "text": "to have any of our clients install weird",
    "start": "779000",
    "end": "780920"
  },
  {
    "text": "codex or anything this is all just built",
    "start": "780920",
    "end": "782639"
  },
  {
    "text": "in because it's on the server side and",
    "start": "782639",
    "end": "784040"
  },
  {
    "text": "the client side internal to DB um",
    "start": "784040",
    "end": "787440"
  },
  {
    "text": "the other big win here is you can't",
    "start": "787440",
    "end": "789199"
  },
  {
    "text": "really write performance system without",
    "start": "789199",
    "end": "790560"
  },
  {
    "text": "observability so uh by adopting grpc we",
    "start": "790560",
    "end": "793639"
  },
  {
    "text": "got logging uh tracing Prometheus",
    "start": "793639",
    "end": "795959"
  },
  {
    "text": "metrics all that middleware came for",
    "start": "795959",
    "end": "797600"
  },
  {
    "text": "free um so we didn't have to build any",
    "start": "797600",
    "end": "799680"
  },
  {
    "text": "of that ourselves but one of the things",
    "start": "799680",
    "end": "800959"
  },
  {
    "text": "we did have to build oursel was",
    "start": "800959",
    "end": "802399"
  },
  {
    "text": "consistent um hashing for load balancing",
    "start": "802399",
    "end": "804959"
  },
  {
    "text": "across the different spice DB nodes in",
    "start": "804959",
    "end": "806800"
  },
  {
    "text": "the cluster and assigning them work",
    "start": "806800",
    "end": "808560"
  },
  {
    "text": "effectively um so we actually uh got a",
    "start": "808560",
    "end": "811199"
  },
  {
    "text": "bunch of requests to pull that out of",
    "start": "811199",
    "end": "812600"
  },
  {
    "text": " DB and that's actually available as",
    "start": "812600",
    "end": "814160"
  },
  {
    "text": "a standalone library that you can use to",
    "start": "814160",
    "end": "815880"
  },
  {
    "text": "implement your own load balancing in",
    "start": "815880",
    "end": "817680"
  },
  {
    "text": "grpc and go now um we actually",
    "start": "817680",
    "end": "819760"
  },
  {
    "text": "contributed tried to contribute that",
    "start": "819760",
    "end": "820959"
  },
  {
    "text": "Upstream at request and because we",
    "start": "820959",
    "end": "822920"
  },
  {
    "text": "didn't have a reference implementation",
    "start": "822920",
    "end": "824320"
  },
  {
    "text": "in every language um it wasn't worth the",
    "start": "824320",
    "end": "826320"
  },
  {
    "text": "burden of like maintaining it Upstream",
    "start": "826320",
    "end": "828000"
  },
  {
    "text": "so the go one will live here U maybe one",
    "start": "828000",
    "end": "830320"
  },
  {
    "text": "day we'll get it in every language and",
    "start": "830320",
    "end": "831759"
  },
  {
    "text": "then that can be an upstream feature um",
    "start": "831759",
    "end": "834839"
  },
  {
    "text": "and then basically the the Crux uh which",
    "start": "834839",
    "end": "838480"
  },
  {
    "text": "is great if you here for the talk right",
    "start": "838480",
    "end": "839920"
  },
  {
    "text": "before this is avoiding allocations is",
    "start": "839920",
    "end": "842279"
  },
  {
    "text": "the number one way you get the best",
    "start": "842279",
    "end": "844120"
  },
  {
    "text": "performance in a garbage collected",
    "start": "844120",
    "end": "845800"
  },
  {
    "text": "language Let Go um so to do that we",
    "start": "845800",
    "end": "848920"
  },
  {
    "text": "basically use a library called VT",
    "start": "848920",
    "end": "850440"
  },
  {
    "text": "protuff what this does is it avoids",
    "start": "850440",
    "end": "852639"
  },
  {
    "text": "reflection in um the go programming",
    "start": "852639",
    "end": "854880"
  },
  {
    "text": "language which is how kind of the",
    "start": "854880",
    "end": "857120"
  },
  {
    "text": "built-in um Google provided protuff",
    "start": "857120",
    "end": "859639"
  },
  {
    "text": "marshaler and UNM marshaler uh function",
    "start": "859639",
    "end": "862240"
  },
  {
    "text": "so uh you can actually take a look at",
    "start": "862240",
    "end": "863800"
  },
  {
    "text": "the IDL and take a pretty good guess at",
    "start": "863800",
    "end": "866519"
  },
  {
    "text": "what the size the messages will be ahead",
    "start": "866519",
    "end": "868880"
  },
  {
    "text": "of time and then you can statically kind",
    "start": "868880",
    "end": "870560"
  },
  {
    "text": "of figure out what you need to allocate",
    "start": "870560",
    "end": "872600"
  },
  {
    "text": "um and then generate code for that",
    "start": "872600",
    "end": "874360"
  },
  {
    "text": "rather than doing it at runtime with",
    "start": "874360",
    "end": "875839"
  },
  {
    "text": "reflection so that's what VT protuff",
    "start": "875839",
    "end": "877759"
  },
  {
    "text": "does and if it was not for the planet",
    "start": "877759",
    "end": "879079"
  },
  {
    "text": "scale folks we would have had to",
    "start": "879079",
    "end": "880000"
  },
  {
    "text": "implement this ourselves um it makes",
    "start": "880000",
    "end": "882720"
  },
  {
    "text": "makes things way way faster um so check",
    "start": "882720",
    "end": "884959"
  },
  {
    "text": "this out if you're writing stuff and go",
    "start": "884959",
    "end": "886920"
  },
  {
    "text": "um then the other thing we kind of",
    "start": "886920",
    "end": "888839"
  },
  {
    "text": "learned was that we avoid nested types",
    "start": "888839",
    "end": "890759"
  },
  {
    "text": "so trying to keep the types as flat as",
    "start": "890759",
    "end": "892519"
  },
  {
    "text": "possible make the memory allocations way",
    "start": "892519",
    "end": "894759"
  },
  {
    "text": "more simple so you don't have to have a",
    "start": "894759",
    "end": "897079"
  },
  {
    "text": "separate Heap allocation for a nested",
    "start": "897079",
    "end": "898759"
  },
  {
    "text": "object inside of another object um and",
    "start": "898759",
    "end": "901800"
  },
  {
    "text": "then I was going to say that I wish",
    "start": "901800",
    "end": "903720"
  },
  {
    "text": "there was more pooling in grpc but I'll",
    "start": "903720",
    "end": "905839"
  },
  {
    "text": "talk about that more later and then",
    "start": "905839",
    "end": "907199"
  },
  {
    "text": "folks that saw the talk right before",
    "start": "907199",
    "end": "908399"
  },
  {
    "text": "this you probably uh got spoilers on",
    "start": "908399",
    "end": "910759"
  },
  {
    "text": "that one um this is about the time in",
    "start": "910759",
    "end": "913360"
  },
  {
    "text": "the talk where someone always ask me why",
    "start": "913360",
    "end": "914680"
  },
  {
    "text": "didn't you write this in Rust if you",
    "start": "914680",
    "end": "916240"
  },
  {
    "text": "care about performance um and the",
    "start": "916240",
    "end": "918680"
  },
  {
    "text": "reality actually is if you look up grpc",
    "start": "918680",
    "end": "921320"
  },
  {
    "text": "bench um that's an open kind of",
    "start": "921320",
    "end": "923880"
  },
  {
    "text": "Benchmark that somebody runs on a",
    "start": "923880",
    "end": "926160"
  },
  {
    "text": "regular interval if you look at the",
    "start": "926160",
    "end": "928040"
  },
  {
    "text": "latest one go using VT protuff still",
    "start": "928040",
    "end": "931519"
  },
  {
    "text": "actually outperforms rust every",
    "start": "931519",
    "end": "933600"
  },
  {
    "text": "variation of the rust ecosystem",
    "start": "933600",
    "end": "935160"
  },
  {
    "text": "libraries when it comes to latency and",
    "start": "935160",
    "end": "937319"
  },
  {
    "text": "throughput so I don't expect that to",
    "start": "937319",
    "end": "939279"
  },
  {
    "text": "last forever but I think that's just a",
    "start": "939279",
    "end": "940959"
  },
  {
    "text": "testament to how mature the go ecosystem",
    "start": "940959",
    "end": "942800"
  },
  {
    "text": "is for protuff currently",
    "start": "942800",
    "end": "945440"
  },
  {
    "text": "standing um and also when we started",
    "start": "945440",
    "end": "948079"
  },
  {
    "text": "tonic didn't even exist so we couldn't",
    "start": "948079",
    "end": "950160"
  },
  {
    "text": "have even really done it unless we were",
    "start": "950160",
    "end": "951680"
  },
  {
    "text": "going to own building uh the whole Proto",
    "start": "951680",
    "end": "954000"
  },
  {
    "text": "ecosystem and rust um so this is the",
    "start": "954000",
    "end": "957160"
  },
  {
    "text": "part where I wanted to include the",
    "start": "957160",
    "end": "958399"
  },
  {
    "text": "lessons we learn learned but make it a",
    "start": "958399",
    "end": "960120"
  },
  {
    "text": "little bit spicier these are the things",
    "start": "960120",
    "end": "961880"
  },
  {
    "text": "we learned you're not actually going to",
    "start": "961880",
    "end": "963440"
  },
  {
    "text": "need like these are things we actually",
    "start": "963440",
    "end": "964800"
  },
  {
    "text": "recommend people don't use in the grpc",
    "start": "964800",
    "end": "966920"
  },
  {
    "text": "ecosystem the first one is Google apis",
    "start": "966920",
    "end": "969959"
  },
  {
    "text": "um we were pretty jazzed about this at",
    "start": "969959",
    "end": "971839"
  },
  {
    "text": "first but the Google apis themselves um",
    "start": "971839",
    "end": "975480"
  },
  {
    "text": "they're not optimized for allocations so",
    "start": "975480",
    "end": "978000"
  },
  {
    "text": "they do use nested types so if you are",
    "start": "978000",
    "end": "979639"
  },
  {
    "text": "in a performance critical place you",
    "start": "979639",
    "end": "981480"
  },
  {
    "text": "probably actually don't want to use them",
    "start": "981480",
    "end": "983360"
  },
  {
    "text": "um they do have well yeah well-known",
    "start": "983360",
    "end": "987959"
  },
  {
    "text": "types yeah correct yeah um yeah they're",
    "start": "987959",
    "end": "989880"
  },
  {
    "text": "also called well-known types um so we we",
    "start": "989880",
    "end": "993160"
  },
  {
    "text": "recommend that you kind of look at them",
    "start": "993160",
    "end": "994440"
  },
  {
    "text": "for inspiration um and then kind of use",
    "start": "994440",
    "end": "996959"
  },
  {
    "text": "your best judgment with them the other",
    "start": "996959",
    "end": "998480"
  },
  {
    "text": "kind of awkward thing with them is if",
    "start": "998480",
    "end": "1000120"
  },
  {
    "text": "you're doing generation sometimes",
    "start": "1000120",
    "end": "1001839"
  },
  {
    "text": "they're already pre-generated in",
    "start": "1001839",
    "end": "1003519"
  },
  {
    "text": "whatever language you're using and",
    "start": "1003519",
    "end": "1005279"
  },
  {
    "text": "there's kind of this awkward dance where",
    "start": "1005279",
    "end": "1006560"
  },
  {
    "text": "you have to choose to like do I generate",
    "start": "1006560",
    "end": "1008839"
  },
  {
    "text": "the code and rewrite the Imports so that",
    "start": "1008839",
    "end": "1011199"
  },
  {
    "text": "they look at the existing package as",
    "start": "1011199",
    "end": "1013040"
  },
  {
    "text": "it's packaged in my language or do I",
    "start": "1013040",
    "end": "1014440"
  },
  {
    "text": "just generate the Google apis again",
    "start": "1014440",
    "end": "1016120"
  },
  {
    "text": "myself um and after about like the 10th",
    "start": "1016120",
    "end": "1019360"
  },
  {
    "text": "time where I had to explain that to our",
    "start": "1019360",
    "end": "1021120"
  },
  {
    "text": "engineering uh Team I'm like okay this",
    "start": "1021120",
    "end": "1023519"
  },
  {
    "text": "is a little bit too much complexity in",
    "start": "1023519",
    "end": "1024720"
  },
  {
    "text": "the generator uh it's kind of annoying",
    "start": "1024720",
    "end": "1027120"
  },
  {
    "text": "um so that's Google apis the streaming",
    "start": "1027120",
    "end": "1030079"
  },
  {
    "text": "apis are what's next um it's not really",
    "start": "1030079",
    "end": "1033480"
  },
  {
    "text": "yagy like we still use the streaming",
    "start": "1033480",
    "end": "1035520"
  },
  {
    "text": "apis everywhere you really do have to",
    "start": "1035520",
    "end": "1037360"
  },
  {
    "text": "use them but the problem is the code gen",
    "start": "1037360",
    "end": "1039280"
  },
  {
    "text": "is super awkward like it generates",
    "start": "1039280",
    "end": "1041240"
  },
  {
    "text": "really really bad code um and from the",
    "start": "1041240",
    "end": "1045280"
  },
  {
    "text": "kind of client facing perspective um the",
    "start": "1045280",
    "end": "1048000"
  },
  {
    "text": "apis were kind of serve for user",
    "start": "1048000",
    "end": "1049600"
  },
  {
    "text": "experience we basically end up wrapping",
    "start": "1049600",
    "end": "1051559"
  },
  {
    "text": "them we handr write code around them to",
    "start": "1051559",
    "end": "1053480"
  },
  {
    "text": "handle a bunch of the common errors and",
    "start": "1053480",
    "end": "1055000"
  },
  {
    "text": "things that you get out of the streaming",
    "start": "1055000",
    "end": "1056240"
  },
  {
    "text": "apis because like it's just over",
    "start": "1056240",
    "end": "1059440"
  },
  {
    "text": "complicated and we can't expect our end",
    "start": "1059440",
    "end": "1061000"
  },
  {
    "text": "users to really dive deep into grpc to",
    "start": "1061000",
    "end": "1063280"
  },
  {
    "text": "figure out how they should be uh",
    "start": "1063280",
    "end": "1064960"
  },
  {
    "text": "canceling a stream for example um it's",
    "start": "1064960",
    "end": "1068000"
  },
  {
    "text": "just way too error prone the next thing",
    "start": "1068000",
    "end": "1069799"
  },
  {
    "text": "are headers and trailers headers and",
    "start": "1069799",
    "end": "1071240"
  },
  {
    "text": "trailers um I feel like they're just an",
    "start": "1071240",
    "end": "1073880"
  },
  {
    "text": "awkward ux um you kind of if you're",
    "start": "1073880",
    "end": "1076960"
  },
  {
    "text": "using these you're probably trying to",
    "start": "1076960",
    "end": "1078080"
  },
  {
    "text": "sneak data in that should have just been",
    "start": "1078080",
    "end": "1079640"
  },
  {
    "text": "in your Proto buff message in the first",
    "start": "1079640",
    "end": "1081000"
  },
  {
    "text": "place you'll go back later and and like",
    "start": "1081000",
    "end": "1082679"
  },
  {
    "text": "you won't regret just adding that",
    "start": "1082679",
    "end": "1084000"
  },
  {
    "text": "preemptively into your Proto buff",
    "start": "1084000",
    "end": "1085440"
  },
  {
    "text": "message um so there is limits to um just",
    "start": "1085440",
    "end": "1089080"
  },
  {
    "text": "how long they can be and things like",
    "start": "1089080",
    "end": "1090320"
  },
  {
    "text": "that and you don't actually have",
    "start": "1090320",
    "end": "1092120"
  },
  {
    "text": "structure they're just a flat bite slice",
    "start": "1092120",
    "end": "1094559"
  },
  {
    "text": "um next one is buff breaking this is a",
    "start": "1094559",
    "end": "1096679"
  },
  {
    "text": "linter that um actually guarantees that",
    "start": "1096679",
    "end": "1099039"
  },
  {
    "text": "if you make a change to your IDL you're",
    "start": "1099039",
    "end": "1100520"
  },
  {
    "text": "not going to break the wire format um so",
    "start": "1100520",
    "end": "1102640"
  },
  {
    "text": "that means you can make like kind of",
    "start": "1102640",
    "end": "1103559"
  },
  {
    "text": "forward compatible changes but the",
    "start": "1103559",
    "end": "1105679"
  },
  {
    "text": "problem I have with this is if you're",
    "start": "1105679",
    "end": "1107159"
  },
  {
    "text": "spending L this time trying to be super",
    "start": "1107159",
    "end": "1109039"
  },
  {
    "text": "clever about what you're trying to break",
    "start": "1109039",
    "end": "1110960"
  },
  {
    "text": "backwards uh compatibly you could",
    "start": "1110960",
    "end": "1113360"
  },
  {
    "text": "probably be spending that time actually",
    "start": "1113360",
    "end": "1114960"
  },
  {
    "text": "working on your workflows or on actually",
    "start": "1114960",
    "end": "1116799"
  },
  {
    "text": "iterating your API and making it so that",
    "start": "1116799",
    "end": "1118559"
  },
  {
    "text": "you have the engineering muscle to be",
    "start": "1118559",
    "end": "1120360"
  },
  {
    "text": "able to um make breaking changes",
    "start": "1120360",
    "end": "1122520"
  },
  {
    "text": "regularly and help customers update to",
    "start": "1122520",
    "end": "1124200"
  },
  {
    "text": "the newer versions so you can just",
    "start": "1124200",
    "end": "1125520"
  },
  {
    "text": "iterate faster in general um we",
    "start": "1125520",
    "end": "1128720"
  },
  {
    "text": "definitely are not like the best at this",
    "start": "1128720",
    "end": "1130120"
  },
  {
    "text": "we still only are on like V2 or three of",
    "start": "1130120",
    "end": "1132640"
  },
  {
    "text": "uh our Proto Buffs so we're not great at",
    "start": "1132640",
    "end": "1134679"
  },
  {
    "text": "that and we do still use buff breaking",
    "start": "1134679",
    "end": "1136200"
  },
  {
    "text": "but half the time uh it's kind of",
    "start": "1136200",
    "end": "1137919"
  },
  {
    "text": "flagging us we're explicitly making a",
    "start": "1137919",
    "end": "1139960"
  },
  {
    "text": "breaking change in experimental API um",
    "start": "1139960",
    "end": "1143080"
  },
  {
    "text": "the last thing is repos per language uh",
    "start": "1143080",
    "end": "1146200"
  },
  {
    "text": "it's we first start out with a monor",
    "start": "1146200",
    "end": "1148000"
  },
  {
    "text": "repo around uh the protuff generation",
    "start": "1148000",
    "end": "1150600"
  },
  {
    "text": "then we split things out because we",
    "start": "1150600",
    "end": "1151640"
  },
  {
    "text": "wanted different client libraries for",
    "start": "1151640",
    "end": "1153039"
  },
  {
    "text": "the different consumers um and now we're",
    "start": "1153039",
    "end": "1155159"
  },
  {
    "text": "kind of leaning back towards okay maybe",
    "start": "1155159",
    "end": "1157280"
  },
  {
    "text": "we should put them all together because",
    "start": "1157280",
    "end": "1158840"
  },
  {
    "text": "they're all kind of cutting the same",
    "start": "1158840",
    "end": "1160120"
  },
  {
    "text": "version um of the API at the same time",
    "start": "1160120",
    "end": "1162520"
  },
  {
    "text": "and it just makes everything way more",
    "start": "1162520",
    "end": "1164440"
  },
  {
    "text": "simple um if you kind of consolidate all",
    "start": "1164440",
    "end": "1166720"
  },
  {
    "text": "that work into one place um",
    "start": "1166720",
    "end": "1169760"
  },
  {
    "text": "yeah sure you're",
    "start": "1169760",
    "end": "1171760"
  },
  {
    "text": "talking this is our repos yeah yeahp",
    "start": "1171760",
    "end": "1174880"
  },
  {
    "text": "yeah not grpc repos yeah these are ours",
    "start": "1174880",
    "end": "1177000"
  },
  {
    "text": "these are like when you go to generate",
    "start": "1177000",
    "end": "1178720"
  },
  {
    "text": "clients",
    "start": "1178720",
    "end": "1181720"
  },
  {
    "text": "yeah do you like",
    "start": "1183919",
    "end": "1187280"
  },
  {
    "text": "thec langage yeah yeah I I do yeah the",
    "start": "1187280",
    "end": "1191039"
  },
  {
    "text": "grpc Upstream ones yes I like that",
    "start": "1191039",
    "end": "1192880"
  },
  {
    "text": "they're in separate languages the ones",
    "start": "1192880",
    "end": "1194400"
  },
  {
    "text": "that we're maintaining I think from my",
    "start": "1194400",
    "end": "1196240"
  },
  {
    "text": "perspective just the maintenance burden",
    "start": "1196240",
    "end": "1197760"
  },
  {
    "text": "over time I want them to be centralized",
    "start": "1197760",
    "end": "1200960"
  },
  {
    "text": "and the real reason is when you make a",
    "start": "1200960",
    "end": "1202559"
  },
  {
    "text": "change to your API um you want to",
    "start": "1202559",
    "end": "1205840"
  },
  {
    "text": "immediately see in that PR how it's",
    "start": "1205840",
    "end": "1207480"
  },
  {
    "text": "going to affect like the 10 different",
    "start": "1207480",
    "end": "1209480"
  },
  {
    "text": "languages you support so like okay",
    "start": "1209480",
    "end": "1211880"
  },
  {
    "text": "because you might make a change and uh",
    "start": "1211880",
    "end": "1213679"
  },
  {
    "text": "you'd be surprised how Java manages",
    "start": "1213679",
    "end": "1216159"
  },
  {
    "text": "certain things versus how go manages",
    "start": "1216159",
    "end": "1217880"
  },
  {
    "text": "certain things especially around like",
    "start": "1217880",
    "end": "1219159"
  },
  {
    "text": "packages and organization um so that's",
    "start": "1219159",
    "end": "1222159"
  },
  {
    "text": "kind of the idea behind that um I'm",
    "start": "1222159",
    "end": "1224799"
  },
  {
    "text": "running out of time so would we do it",
    "start": "1224799",
    "end": "1226440"
  },
  {
    "text": "all over again absolutely yes like there",
    "start": "1226440",
    "end": "1229200"
  },
  {
    "text": "still is nothing that competes with grpc",
    "start": "1229200",
    "end": "1231559"
  },
  {
    "text": "really in terms of maturity and what you",
    "start": "1231559",
    "end": "1233039"
  },
  {
    "text": "get out of it feature-wise um the only",
    "start": "1233039",
    "end": "1235320"
  },
  {
    "text": "things that could possibly make us",
    "start": "1235320",
    "end": "1236360"
  },
  {
    "text": "reconsider would be if our end users",
    "start": "1236360",
    "end": "1239159"
  },
  {
    "text": "just something blew up in popularity um",
    "start": "1239159",
    "end": "1241640"
  },
  {
    "text": "because once again we're trying to have",
    "start": "1241640",
    "end": "1243080"
  },
  {
    "text": "the best user experience at the end of",
    "start": "1243080",
    "end": "1244520"
  },
  {
    "text": "the day with the folks integrating with",
    "start": "1244520",
    "end": "1246360"
  },
  {
    "text": " DB um better code gen in each",
    "start": "1246360",
    "end": "1248760"
  },
  {
    "text": "language would also do that um if if",
    "start": "1248760",
    "end": "1251320"
  },
  {
    "text": "someone vastly improved the code",
    "start": "1251320",
    "end": "1252679"
  },
  {
    "text": "generation for a different IDL um and",
    "start": "1252679",
    "end": "1255120"
  },
  {
    "text": "then zero copy fundamentally like the",
    "start": "1255120",
    "end": "1257360"
  },
  {
    "text": "more efficient you can get the better",
    "start": "1257360",
    "end": "1259159"
  },
  {
    "text": "we have tried and built experiments with",
    "start": "1259159",
    "end": "1261440"
  },
  {
    "text": "Captain Proto and flat buffers over grpc",
    "start": "1261440",
    "end": "1264159"
  },
  {
    "text": "um honestly it wasn't worth the change",
    "start": "1264159",
    "end": "1265440"
  },
  {
    "text": "in the tool chain so um that just is a",
    "start": "1265440",
    "end": "1268080"
  },
  {
    "text": "credit to how mature protobuf and grpc",
    "start": "1268080",
    "end": "1270360"
  },
  {
    "text": "is in general um so where are we headed",
    "start": "1270360",
    "end": "1273720"
  },
  {
    "text": "um basically I kind of alluded to how",
    "start": "1273720",
    "end": "1275480"
  },
  {
    "text": "we're kind of centralizing a bunch of",
    "start": "1275480",
    "end": "1277240"
  },
  {
    "text": "our um language specific repositories",
    "start": "1277240",
    "end": "1279480"
  },
  {
    "text": "for our clients back into one repo um",
    "start": "1279480",
    "end": "1282080"
  },
  {
    "text": "this is so we can generate just",
    "start": "1282080",
    "end": "1283559"
  },
  {
    "text": "specifically Proto Buffs and services",
    "start": "1283559",
    "end": "1285520"
  },
  {
    "text": "from one place um and then we actually",
    "start": "1285520",
    "end": "1287799"
  },
  {
    "text": "want to package those and push them to",
    "start": "1287799",
    "end": "1289240"
  },
  {
    "text": "the different package managers um in the",
    "start": "1289240",
    "end": "1291679"
  },
  {
    "text": "different uh language platforms so like",
    "start": "1291679",
    "end": "1294360"
  },
  {
    "text": "pip and python for example Maven and",
    "start": "1294360",
    "end": "1296000"
  },
  {
    "text": "Java um and then that way you can build",
    "start": "1296000",
    "end": "1298440"
  },
  {
    "text": "idiomatic libraries on top of that um",
    "start": "1298440",
    "end": "1300919"
  },
  {
    "text": "and the more idiomatic libraries you",
    "start": "1300919",
    "end": "1302600"
  },
  {
    "text": "have that's where you can put in your",
    "start": "1302600",
    "end": "1303720"
  },
  {
    "text": "custom logic and make that nice but also",
    "start": "1303720",
    "end": "1305279"
  },
  {
    "text": "the folks that just want to depend on",
    "start": "1305279",
    "end": "1306480"
  },
  {
    "text": "your Proto Buffs they can just pull the",
    "start": "1306480",
    "end": "1307679"
  },
  {
    "text": "messages in raw and not have to worry",
    "start": "1307679",
    "end": "1309320"
  },
  {
    "text": "about bringing in any other logic that",
    "start": "1309320",
    "end": "1310880"
  },
  {
    "text": "you've built um then finally um I've",
    "start": "1310880",
    "end": "1314600"
  },
  {
    "text": "actually uh the previous talk was",
    "start": "1314600",
    "end": "1316480"
  },
  {
    "text": "talking about how they removed a bunch",
    "start": "1316480",
    "end": "1317600"
  },
  {
    "text": "of memory pooling",
    "start": "1317600",
    "end": "1319080"
  },
  {
    "text": "or memory allocations within grpc go",
    "start": "1319080",
    "end": "1321520"
  },
  {
    "text": "itself um that new codc V2 API that",
    "start": "1321520",
    "end": "1324080"
  },
  {
    "text": "they've now exposed I actually saw that",
    "start": "1324080",
    "end": "1326240"
  },
  {
    "text": "PR get merged last week and immediately",
    "start": "1326240",
    "end": "1328400"
  },
  {
    "text": "this week opened a PR against VT protuff",
    "start": "1328400",
    "end": "1330600"
  },
  {
    "text": "implementing codec V2 so that um we can",
    "start": "1330600",
    "end": "1333000"
  },
  {
    "text": "kind of get the best of both worlds and",
    "start": "1333000",
    "end": "1334799"
  },
  {
    "text": "uh use reuse memory while also using VT",
    "start": "1334799",
    "end": "1337159"
  },
  {
    "text": "protuff so I'm super excited for this to",
    "start": "1337159",
    "end": "1339799"
  },
  {
    "text": "land um that is going to probably make",
    "start": "1339799",
    "end": "1341840"
  },
  {
    "text": "the largest performance impact in spice",
    "start": "1341840",
    "end": "1343520"
  },
  {
    "text": "DB in I don't know two three years so",
    "start": "1343520",
    "end": "1346600"
  },
  {
    "text": "I'm really really excited about that",
    "start": "1346600",
    "end": "1347799"
  },
  {
    "text": "feature um so that's it for my talk uh",
    "start": "1347799",
    "end": "1351200"
  },
  {
    "text": "if you want to talk to me more",
    "start": "1351200",
    "end": "1352440"
  },
  {
    "text": "afterwards or like uh dive deeper into",
    "start": "1352440",
    "end": "1354919"
  },
  {
    "text": "any specific topic I covered I covered a",
    "start": "1354919",
    "end": "1357039"
  },
  {
    "text": "lot really fast um just feel free to",
    "start": "1357039",
    "end": "1358960"
  },
  {
    "text": "talk to me after the talk",
    "start": "1358960",
    "end": "1361740"
  },
  {
    "text": "[Applause]",
    "start": "1361740",
    "end": "1364440"
  },
  {
    "text": "thanks uh do we have time for Q&A",
    "start": "1364440",
    "end": "1367400"
  },
  {
    "text": "or yeah cool sure so",
    "start": "1367400",
    "end": "1371000"
  },
  {
    "text": "is a distributed across data centers",
    "start": "1371000",
    "end": "1374520"
  },
  {
    "text": "yeah so the question was is spice DB",
    "start": "1374520",
    "end": "1376080"
  },
  {
    "text": "distributed across data centers yeah so",
    "start": "1376080",
    "end": "1378279"
  },
  {
    "text": "um the original um kind of system it's",
    "start": "1378279",
    "end": "1380240"
  },
  {
    "text": "based on is Zanzibar um which uses",
    "start": "1380240",
    "end": "1382760"
  },
  {
    "text": "Google spanner in the back end um spicy",
    "start": "1382760",
    "end": "1385200"
  },
  {
    "text": "B itself actually has various backends",
    "start": "1385200",
    "end": "1387360"
  },
  {
    "text": "that you can plug into um Cloud spanner",
    "start": "1387360",
    "end": "1389919"
  },
  {
    "text": "is actually one of them cockro hdb is",
    "start": "1389919",
    "end": "1391799"
  },
  {
    "text": "another one postgress is another so if",
    "start": "1391799",
    "end": "1393640"
  },
  {
    "text": "you have a um completely Geo um like",
    "start": "1393640",
    "end": "1397200"
  },
  {
    "text": "globally distributed uh deployment and",
    "start": "1397200",
    "end": "1399159"
  },
  {
    "text": "you need your authorization to be",
    "start": "1399159",
    "end": "1400799"
  },
  {
    "text": "everywhere you can actually use one of",
    "start": "1400799",
    "end": "1402320"
  },
  {
    "text": "those back ends to get",
    "start": "1402320",
    "end": "1404320"
  },
  {
    "text": "that spice DB is also a choice so spice",
    "start": "1404320",
    "end": "1409039"
  },
  {
    "text": "DB will store its data in cockroach or",
    "start": "1409039",
    "end": "1411240"
  },
  {
    "text": "store its data in um Cloud spanner yep",
    "start": "1411240",
    "end": "1414440"
  },
  {
    "text": "it's kind of similar if you are familiar",
    "start": "1414440",
    "end": "1415880"
  },
  {
    "text": "with kind of how you build other",
    "start": "1415880",
    "end": "1417039"
  },
  {
    "text": "databases there's a uh like a key Value",
    "start": "1417039",
    "end": "1420320"
  },
  {
    "text": "Store layer to most databases and they",
    "start": "1420320",
    "end": "1422159"
  },
  {
    "text": "use like level DB or rocks DB we kind of",
    "start": "1422159",
    "end": "1424799"
  },
  {
    "text": "have that same interface but we also",
    "start": "1424799",
    "end": "1426440"
  },
  {
    "text": "implement it with other databases so if",
    "start": "1426440",
    "end": "1428760"
  },
  {
    "text": "you want to get like raft and Geo",
    "start": "1428760",
    "end": "1430760"
  },
  {
    "text": "replication and just like active active",
    "start": "1430760",
    "end": "1432720"
  },
  {
    "text": "across a global like deployment you can",
    "start": "1432720",
    "end": "1434840"
  },
  {
    "text": "do that by plugging in cockroach",
    "start": "1434840",
    "end": "1437440"
  },
  {
    "text": "yeah fundamental",
    "start": "1437440",
    "end": "1441360"
  },
  {
    "text": "commun yeah so the question was what's",
    "start": "1443240",
    "end": "1445840"
  },
  {
    "text": "basically uh what type of rpcs are we",
    "start": "1445840",
    "end": "1448080"
  },
  {
    "text": "using unary or streaming um and it",
    "start": "1448080",
    "end": "1450240"
  },
  {
    "text": "depends on the API so we do have like a",
    "start": "1450240",
    "end": "1452159"
  },
  {
    "text": "watch API where you're getting a regular",
    "start": "1452159",
    "end": "1453600"
  },
  {
    "text": "stream of updates and changes to",
    "start": "1453600",
    "end": "1455200"
  },
  {
    "text": "authorization logic um and when that",
    "start": "1455200",
    "end": "1457559"
  },
  {
    "text": "when you're using that that's a stream",
    "start": "1457559",
    "end": "1459440"
  },
  {
    "text": "but most things are unary like I said",
    "start": "1459440",
    "end": "1461760"
  },
  {
    "text": "the um the ux and the code gen you get",
    "start": "1461760",
    "end": "1464919"
  },
  {
    "text": "out of the unary ones are just better",
    "start": "1464919",
    "end": "1466200"
  },
  {
    "text": "they're easier for for our end users to",
    "start": "1466200",
    "end": "1468000"
  },
  {
    "text": "use so we try to do unary as much as",
    "start": "1468000",
    "end": "1470159"
  },
  {
    "text": "possible but places that Mak sense you",
    "start": "1470159",
    "end": "1472080"
  },
  {
    "text": "ultimately do end up",
    "start": "1472080",
    "end": "1474880"
  },
  {
    "text": "streaming so uh the question was uh the",
    "start": "1482279",
    "end": "1485279"
  },
  {
    "text": "consistent hash ring implementation is",
    "start": "1485279",
    "end": "1487799"
  },
  {
    "text": "that does that work with basically both",
    "start": "1487799",
    "end": "1489399"
  },
  {
    "text": "RPC types um it does work with both both",
    "start": "1489399",
    "end": "1492360"
  },
  {
    "text": "RPC types this is just uh using the",
    "start": "1492360",
    "end": "1494520"
  },
  {
    "text": "buil-in grpc balancer interface um so",
    "start": "1494520",
    "end": "1497679"
  },
  {
    "text": "I'm fa certain that um it will pick when",
    "start": "1497679",
    "end": "1501480"
  },
  {
    "text": "you open basically the stream it's going",
    "start": "1501480",
    "end": "1503320"
  },
  {
    "text": "to pick a particular node um and not per",
    "start": "1503320",
    "end": "1505960"
  },
  {
    "text": "message going across the",
    "start": "1505960",
    "end": "1509120"
  },
  {
    "text": "stream yeah probably I'm pretty sure",
    "start": "1509600",
    "end": "1512120"
  },
  {
    "text": "that's the case our our dispatch API is",
    "start": "1512120",
    "end": "1514039"
  },
  {
    "text": "almost entirely unary um it might",
    "start": "1514039",
    "end": "1516720"
  },
  {
    "text": "entirely be unary so um I'm kind of",
    "start": "1516720",
    "end": "1519360"
  },
  {
    "text": "assuming how the internals of grpc are",
    "start": "1519360",
    "end": "1521480"
  },
  {
    "text": "working so",
    "start": "1521480",
    "end": "1525200"
  },
  {
    "text": "PN",
    "start": "1528679",
    "end": "1531240"
  },
  {
    "text": "valid comp",
    "start": "1531240",
    "end": "1533440"
  },
  {
    "text": "valid um so the question was have we",
    "start": "1533440",
    "end": "1535880"
  },
  {
    "text": "found kind of more complicated use cases",
    "start": "1535880",
    "end": "1538880"
  },
  {
    "text": "for prodo Gen validate um yeah I mean",
    "start": "1538880",
    "end": "1542799"
  },
  {
    "text": "theoretically every bit of validation",
    "start": "1542799",
    "end": "1544760"
  },
  {
    "text": "that you're going to write into your",
    "start": "1544760",
    "end": "1545760"
  },
  {
    "text": "code base you wish you could stuff it in",
    "start": "1545760",
    "end": "1547480"
  },
  {
    "text": "product gen validate um just because",
    "start": "1547480",
    "end": "1549760"
  },
  {
    "text": "it's so convenient uh the reality is the",
    "start": "1549760",
    "end": "1552600"
  },
  {
    "text": "vast majority of the stuff we care about",
    "start": "1552600",
    "end": "1554039"
  },
  {
    "text": "we can actually fit into product gen",
    "start": "1554039",
    "end": "1555520"
  },
  {
    "text": "validate and then it's all kind of logic",
    "start": "1555520",
    "end": "1558480"
  },
  {
    "text": "um whether or not it makes sense with",
    "start": "1558480",
    "end": "1560120"
  },
  {
    "text": "the end uh the end user schema so what",
    "start": "1560120",
    "end": "1562600"
  },
  {
    "text": "happens is we get a bunch of data in and",
    "start": "1562600",
    "end": "1564039"
  },
  {
    "text": "then we look at the schema that they",
    "start": "1564039",
    "end": "1565720"
  },
  {
    "text": "have for the database and we say like is",
    "start": "1565720",
    "end": "1567559"
  },
  {
    "text": "this valid with the context of the",
    "start": "1567559",
    "end": "1568880"
  },
  {
    "text": "schema and that's basically the only",
    "start": "1568880",
    "end": "1570880"
  },
  {
    "text": "other validation we do per request",
    "start": "1570880",
    "end": "1574000"
  },
  {
    "text": "yeah",
    "start": "1574000",
    "end": "1577000"
  },
  {
    "text": "y perance I'm",
    "start": "1577159",
    "end": "1581399"
  },
  {
    "text": "just",
    "start": "1584559",
    "end": "1586120"
  },
  {
    "text": "dat yeah so the question was a lot of",
    "start": "1586120",
    "end": "1588360"
  },
  {
    "text": "this is about performance and how much",
    "start": "1588360",
    "end": "1590559"
  },
  {
    "text": "of the overhead for example um matters",
    "start": "1590559",
    "end": "1593520"
  },
  {
    "text": "coming from grpc specifically um well",
    "start": "1593520",
    "end": "1596399"
  },
  {
    "text": "the reason why I was saying I was super",
    "start": "1596399",
    "end": "1597679"
  },
  {
    "text": "excited about the memory reusage is",
    "start": "1597679",
    "end": "1599840"
  },
  {
    "text": "because probably something like 90% of",
    "start": "1599840",
    "end": "1602480"
  },
  {
    "text": "our allocations come from grpc itself so",
    "start": "1602480",
    "end": "1605720"
  },
  {
    "text": "it is critical everything else we've",
    "start": "1605720",
    "end": "1608080"
  },
  {
    "text": "already eliminated because we basically",
    "start": "1608080",
    "end": "1609919"
  },
  {
    "text": "control all that code so because the",
    "start": "1609919",
    "end": "1612279"
  },
  {
    "text": "grpc allocations are kind of out of our",
    "start": "1612279",
    "end": "1614360"
  },
  {
    "text": "hands and they're maintained by the grpc",
    "start": "1614360",
    "end": "1616440"
  },
  {
    "text": "team it's kind of been like the last",
    "start": "1616440",
    "end": "1617840"
  },
  {
    "text": "bottle for throughput for us so the vast",
    "start": "1617840",
    "end": "1620559"
  },
  {
    "text": "majority of time spent is actually",
    "start": "1620559",
    "end": "1623080"
  },
  {
    "text": "dealing with kind of memory allocations",
    "start": "1623080",
    "end": "1625120"
  },
  {
    "text": "and working with the garbage collection",
    "start": "1625120",
    "end": "1626399"
  },
  {
    "text": "language and almost all of our",
    "start": "1626399",
    "end": "1628399"
  },
  {
    "text": "allocations come from the messages being",
    "start": "1628399",
    "end": "1630720"
  },
  {
    "text": "allocated per request um coming in off",
    "start": "1630720",
    "end": "1633240"
  },
  {
    "text": "the wire um and all the copies inside of",
    "start": "1633240",
    "end": "1635360"
  },
  {
    "text": "grpc itself um and the ability for us to",
    "start": "1635360",
    "end": "1638039"
  },
  {
    "text": "basically reuse that memory for the next",
    "start": "1638039",
    "end": "1640440"
  },
  {
    "text": "request that's coming in once we're done",
    "start": "1640440",
    "end": "1642080"
  },
  {
    "text": "will cut those allocations probably I",
    "start": "1642080",
    "end": "1644640"
  },
  {
    "text": "don't even want to give an estimate but",
    "start": "1644640",
    "end": "1646080"
  },
  {
    "text": "I'm super excited to see um the",
    "start": "1646080",
    "end": "1648200"
  },
  {
    "text": "performance gain we get it will",
    "start": "1648200",
    "end": "1649480"
  },
  {
    "text": "definitely be a huge one in terms of",
    "start": "1649480",
    "end": "1650679"
  },
  {
    "text": "throughput so",
    "start": "1650679",
    "end": "1654080"
  },
  {
    "text": "most system correct youre",
    "start": "1655880",
    "end": "1661000"
  },
  {
    "text": "system correct yeah the the the",
    "start": "1665640",
    "end": "1668000"
  },
  {
    "text": "footprint of the service outside of that",
    "start": "1668000",
    "end": "1670399"
  },
  {
    "text": "is largely reading from memory um",
    "start": "1670399",
    "end": "1672799"
  },
  {
    "text": "because it's such a lat latency critical",
    "start": "1672799",
    "end": "1675200"
  },
  {
    "text": "service we keep everything we need to",
    "start": "1675200",
    "end": "1677480"
  },
  {
    "text": "compute most of the requests in memory",
    "start": "1677480",
    "end": "1679240"
  },
  {
    "text": "that's why we actually dispatch across",
    "start": "1679240",
    "end": "1681200"
  },
  {
    "text": "different instances of grpc using the",
    "start": "1681200",
    "end": "1683240"
  },
  {
    "text": "consistent hashing that's because we're",
    "start": "1683240",
    "end": "1685120"
  },
  {
    "text": "actually sharding up the distributed",
    "start": "1685120",
    "end": "1687000"
  },
  {
    "text": "cache that keeps basically thunks of",
    "start": "1687000",
    "end": "1689600"
  },
  {
    "text": "computations we have to do quer um to",
    "start": "1689600",
    "end": "1691960"
  },
  {
    "text": "process a particular query in memory on",
    "start": "1691960",
    "end": "1694200"
  },
  {
    "text": "each individual node so we're trying to",
    "start": "1694200",
    "end": "1696360"
  },
  {
    "text": "serve as much as possible from Pure",
    "start": "1696360",
    "end": "1698120"
  },
  {
    "text": "memory and then only when something",
    "start": "1698120",
    "end": "1700080"
  },
  {
    "text": "isn't already in memory do we fetch",
    "start": "1700080",
    "end": "1701519"
  },
  {
    "text": "something from dis so do you have lot of",
    "start": "1701519",
    "end": "1704000"
  },
  {
    "text": "disc communication at all or because",
    "start": "1704000",
    "end": "1705840"
  },
  {
    "text": "your backend it's actually using",
    "start": "1705840",
    "end": "1707559"
  },
  {
    "text": "different back stage right so do you",
    "start": "1707559",
    "end": "1709880"
  },
  {
    "text": "really care about at all or you only",
    "start": "1709880",
    "end": "1712799"
  },
  {
    "text": "aboutwork I",
    "start": "1712799",
    "end": "1716360"
  },
  {
    "text": "to Y so the question was do we care",
    "start": "1716360",
    "end": "1718480"
  },
  {
    "text": "about dis at all like the dis IO we do",
    "start": "1718480",
    "end": "1720799"
  },
  {
    "text": "for write throughput specifically and",
    "start": "1720799",
    "end": "1722760"
  },
  {
    "text": "making sure that uh the system stays",
    "start": "1722760",
    "end": "1724519"
  },
  {
    "text": "consistent so the other thing is if",
    "start": "1724519",
    "end": "1726039"
  },
  {
    "text": "you're working on authorization uh if",
    "start": "1726039",
    "end": "1728240"
  },
  {
    "text": "you have a consistency bug in your",
    "start": "1728240",
    "end": "1730440"
  },
  {
    "text": "distributed system that means someone",
    "start": "1730440",
    "end": "1732559"
  },
  {
    "text": "might get access to a thing they",
    "start": "1732559",
    "end": "1733919"
  },
  {
    "text": "shouldn't have access to that's a",
    "start": "1733919",
    "end": "1735320"
  },
  {
    "text": "security vulnerability so it's very very",
    "start": "1735320",
    "end": "1737600"
  },
  {
    "text": "critical",
    "start": "1737600",
    "end": "1738880"
  },
  {
    "text": "um yep so I think that's all the time I",
    "start": "1738880",
    "end": "1740880"
  },
  {
    "text": "have for questions um thanks",
    "start": "1740880",
    "end": "1745240"
  }
]