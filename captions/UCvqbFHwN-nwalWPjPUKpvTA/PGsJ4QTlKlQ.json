[
  {
    "text": "hello everyone yeah let's get started uh so keep the session on time so my name",
    "start": "160",
    "end": "6000"
  },
  {
    "text": "is indian i'm from google i'm the moderator of this session so it's my honor to introduce uh yuval from palo",
    "start": "6000",
    "end": "12559"
  },
  {
    "text": "alto networks talk about the kubernetes security about over privileged containers",
    "start": "12559",
    "end": "19279"
  },
  {
    "text": "thank you can everyone hear me in the back yeah awesome so i'm involved",
    "start": "19279",
    "end": "25119"
  },
  {
    "text": "today we're going to talk about the trampoline parts and previous escalation kubernetes i'm pretty excited having done a",
    "start": "25119",
    "end": "31760"
  },
  {
    "text": "live talk in a couple of years so let's get started with me today was supposed to be should be high he",
    "start": "31760",
    "end": "37440"
  },
  {
    "text": "couldn't come at the end but he was an equal part of making this research and a presentation",
    "start": "37440",
    "end": "42719"
  },
  {
    "text": "so a bit about the scholar myself we are security researchers at prismacloud in palo alto networks so we do",
    "start": "42719",
    "end": "48879"
  },
  {
    "text": "vulnerability research and threat hunting in the cloud we look for security issues in the cloud",
    "start": "48879",
    "end": "54079"
  },
  {
    "text": "ecosystem and we try to find the threat actors that are exploiting them",
    "start": "54079",
    "end": "59359"
  },
  {
    "text": "and we're also nba fans and we made a couple of predictions for the conference finals when we made this talk i got",
    "start": "59359",
    "end": "64878"
  },
  {
    "text": "three out of four right i'm pretty happy about that and a bit about what we'll be discussing",
    "start": "64879",
    "end": "70640"
  },
  {
    "text": "today so today we're going to discuss start off by discussing container escapes this",
    "start": "70640",
    "end": "76960"
  },
  {
    "text": "threat that we keep hearing about and try to understand what's the real impact what's the real blast radius",
    "start": "76960",
    "end": "83119"
  },
  {
    "text": "we'll then talk about the concept that we defined as a trampoline pods and see how they allow privileged escalation in",
    "start": "83119",
    "end": "89520"
  },
  {
    "text": "kubernetes in general but also in the most popular kubernetes platforms out there based on a case study that we've",
    "start": "89520",
    "end": "96079"
  },
  {
    "text": "been conducting in the last couple of months we'll then talk about some recommendations on how you can address",
    "start": "96079",
    "end": "102399"
  },
  {
    "text": "privilege escalation in kubernetes and we'll finish it off with the arbuck police which is an open source tool we're now",
    "start": "102399",
    "end": "108159"
  },
  {
    "text": "releasing that can help you address privileged escalation",
    "start": "108159",
    "end": "113200"
  },
  {
    "text": "okay so container escapes obviously containers are great for packaging and deploying software right that's why we",
    "start": "113200",
    "end": "118479"
  },
  {
    "text": "all use them but they're not the strongest security boundary mostly because of their shield kernel and we can expect that container",
    "start": "118479",
    "end": "125520"
  },
  {
    "text": "escapes are likely to continue to happen only in 2022 we had at least six",
    "start": "125520",
    "end": "131039"
  },
  {
    "text": "vulnerabilities both in the kernel and in container run times that would have allowed for container escape",
    "start": "131039",
    "end": "137200"
  },
  {
    "text": "but containers can also escape because of a misconfiguration right the most well known one is a privileged",
    "start": "137200",
    "end": "142800"
  },
  {
    "text": "containers and there are threat actors in the wild that are actually trying to capitalize",
    "start": "142800",
    "end": "147920"
  },
  {
    "text": "on those issues and escape containers to spread in the victims environment",
    "start": "147920",
    "end": "153120"
  },
  {
    "text": "so if if we understand that container escapes are a threat that's exactly going to stay",
    "start": "153120",
    "end": "158879"
  },
  {
    "text": "it's really important to discuss the impact and in kubernetes at least the obvious impact is a compromise node right the",
    "start": "158879",
    "end": "166720"
  },
  {
    "text": "attacker previously had access to only one pod but now he escapes and he has access to all of the neighboring parts",
    "start": "166720",
    "end": "173440"
  },
  {
    "text": "on that node so possibly more business logic and he also has access to more compute resources right all of the cpus",
    "start": "173440",
    "end": "180319"
  },
  {
    "text": "the memory of the node but if we can expect our attacker to be an ambitious one he might not be",
    "start": "180319",
    "end": "187280"
  },
  {
    "text": "satisfied with just the note he might want to take over the entire cluster and that's the question that we're going",
    "start": "187280",
    "end": "193519"
  },
  {
    "text": "to try to answer today does a single container escape allow an",
    "start": "193519",
    "end": "198879"
  },
  {
    "text": "attacker to take over the entire cluster and become cluster admin and that's going to be the guiding theme throughout",
    "start": "198879",
    "end": "204560"
  },
  {
    "text": "this stock now just to clarify what we mean by admin",
    "start": "204560",
    "end": "210879"
  },
  {
    "text": "basically the attacker can do every single operation in all namespaces so complete control over the cluster",
    "start": "210879",
    "end": "217760"
  },
  {
    "text": "and we're also going to use another term which is admin equivalent basically meaning that the attacker has a",
    "start": "217760",
    "end": "223040"
  },
  {
    "text": "permission that within one or two trivial steps allows them to become cluster admin so in this example it's",
    "start": "223040",
    "end": "229200"
  },
  {
    "text": "their list secrets permissions so in order to understand what's an",
    "start": "229200",
    "end": "234959"
  },
  {
    "text": "attacker or a compromise node can do we need we need to talk about what credentials exist on a compromise node",
    "start": "234959",
    "end": "241040"
  },
  {
    "text": "so first of all we have the cubelet credentials right the cubeletter is the node agent obviously has a set of permissions to",
    "start": "241040",
    "end": "247599"
  },
  {
    "text": "allow it to operate his node but thankfully kubernetes have mostly",
    "start": "247599",
    "end": "252640"
  },
  {
    "text": "dealt with attacks that originate from the cubelet credentials using two components they know the authorizer and",
    "start": "252640",
    "end": "258880"
  },
  {
    "text": "the node restriction and what those do is make sure that the cubelet can only access resources that",
    "start": "258880",
    "end": "264960"
  },
  {
    "text": "are already existing on the node so for example the pod the run on that node and",
    "start": "264960",
    "end": "270240"
  },
  {
    "text": "it's actually a really good cube contact from a few years ago that described that effort",
    "start": "270240",
    "end": "275919"
  },
  {
    "text": "so the bottom line is that the cubelet permissions the default permissions of the node",
    "start": "275919",
    "end": "282080"
  },
  {
    "text": "they wouldn't allow an attacker to become cluster admin they are useful for some low impact attacks so like",
    "start": "282080",
    "end": "288000"
  },
  {
    "text": "reading certain objects in the cluster or launching denial of service attack but if we are asking about",
    "start": "288000",
    "end": "294800"
  },
  {
    "text": "can a compromise not become cluster admin they're not that relevant but they not also host a different type",
    "start": "294800",
    "end": "300880"
  },
  {
    "text": "of credentials it also holds the neighboring pos service accounts token right and their permissions vary",
    "start": "300880",
    "end": "307600"
  },
  {
    "text": "we really don't know it it depends on the node it depends on the pods that it runs in",
    "start": "307600",
    "end": "312639"
  },
  {
    "text": "but the bottom line is that for an attacker the permissions that are interesting are actually the parts permissions",
    "start": "312639",
    "end": "318880"
  },
  {
    "text": "because the cubed permissions are going to be the same static and restricted set of permissions right but pod's",
    "start": "318880",
    "end": "324800"
  },
  {
    "text": "permission might be they might be not powerful at all but also they might be very powerful so those are really the",
    "start": "324800",
    "end": "330960"
  },
  {
    "text": "interesting permissions for an attacker now today we're going to",
    "start": "330960",
    "end": "336400"
  },
  {
    "text": "see scenarios where pods actually have a lot of permissions where they are very powerful and we try to name that",
    "start": "336400",
    "end": "343199"
  },
  {
    "text": "that concept and the name we gave them is a trampoline pods basically parts that would allow an attacker to jump",
    "start": "343199",
    "end": "349840"
  },
  {
    "text": "around the cluster reach higher privileges and basically have some fun in your cluster",
    "start": "349840",
    "end": "355840"
  },
  {
    "text": "now the obvious question is okay are those kind of pods common where do they come from",
    "start": "355840",
    "end": "362240"
  },
  {
    "text": "and to answer that we need to discuss what kind of pods run on a typical average low node right so obviously you",
    "start": "362240",
    "end": "370560"
  },
  {
    "text": "have application pods the the the things that you're actually running your cluster in order to host",
    "start": "370560",
    "end": "376240"
  },
  {
    "text": "you probably also have a bunch of add-ons so you might be running pro medius for login or istio for service",
    "start": "376240",
    "end": "382400"
  },
  {
    "text": "mesh or opa gatekeeper for policy enforcement and the list goes on and there also another group of pod",
    "start": "382400",
    "end": "389120"
  },
  {
    "text": "which we named the system pod you may also refer them as infrastructure pods those group of pods that normally sit in",
    "start": "389120",
    "end": "396000"
  },
  {
    "text": "cube system and are already there when you create a cluster right and they vary between different managed services",
    "start": "396000",
    "end": "402400"
  },
  {
    "text": "between different distributions but common example would be a q proxy or core dns",
    "start": "402400",
    "end": "409039"
  },
  {
    "text": "and if we try to understand which one of those group pods could be trampoline pods could be powerful we see",
    "start": "409039",
    "end": "415840"
  },
  {
    "text": "that system and add-on pods are actually a bit of a blind spot permission wise because we don't configure their",
    "start": "415840",
    "end": "421280"
  },
  {
    "text": "permissions right for add-ons we simply we normally just install a helm chart which actually",
    "start": "421280",
    "end": "427520"
  },
  {
    "text": "configures the add-on permissions and for system pods you know they were there when the cluster were created",
    "start": "427520",
    "end": "433039"
  },
  {
    "text": "obviously we didn't configure their permissions another interesting things about about those two sets of paws is",
    "start": "433039",
    "end": "439360"
  },
  {
    "text": "that they often run as demons it meaning they run on every single node in your cluster",
    "start": "439360",
    "end": "444960"
  },
  {
    "text": "and that really matters if they're powerful because you can imagine that if a trampoline is not deployed as a demon",
    "start": "444960",
    "end": "451440"
  },
  {
    "text": "set for example as a deployment let's say that only specific nodes in the cluster",
    "start": "451440",
    "end": "458000"
  },
  {
    "text": "are going to be able to escalate privileges right and an attacker that escaped might very well not be on a node",
    "start": "458000",
    "end": "464319"
  },
  {
    "text": "the hosted trampoline but with trampoline demon set every single node in the cluster hosts",
    "start": "464319",
    "end": "470639"
  },
  {
    "text": "powerful credentials hosts powerful tokens right so an attacker that escapes",
    "start": "470639",
    "end": "475840"
  },
  {
    "text": "a container is actually guaranteed to find valuable credentials on the node",
    "start": "475840",
    "end": "482720"
  },
  {
    "text": "so if we try to answer whether container escape actually equals cluster admin those are the types of",
    "start": "482720",
    "end": "489039"
  },
  {
    "text": "trampolines that we want to look into because they can ask they can provide us with definitive answers right",
    "start": "489039",
    "end": "496879"
  },
  {
    "text": "so we kind of screamed over a part which is defining trampolines we say the trampoline pods are basically posed with",
    "start": "496879",
    "end": "503759"
  },
  {
    "text": "powerful permissions but what are powerful permissions in kubernetes that's a question we tried to answer",
    "start": "503759",
    "end": "509280"
  },
  {
    "text": "when we did this research and when we tried to answer that answer that question we saw that there is",
    "start": "509280",
    "end": "515039"
  },
  {
    "text": "actually no public list of powerful permissions and that's quite surprising because",
    "start": "515039",
    "end": "520399"
  },
  {
    "text": "that's crucial in order to understand really important and to answer really important questions like is my publicly",
    "start": "520399",
    "end": "526720"
  },
  {
    "text": "exposed pod powerful and can escalate privileges is this add-on that i'm about to",
    "start": "526720",
    "end": "532080"
  },
  {
    "text": "install actually installs admin equivalent to risky permissions",
    "start": "532080",
    "end": "537279"
  },
  {
    "text": "so what we tried to do our approach to tackle this was to first define interesting attack classes the different",
    "start": "537279",
    "end": "544000"
  },
  {
    "text": "permission can actually carry out that makes it powerful and then we actually went over all of the",
    "start": "544000",
    "end": "549920"
  },
  {
    "text": "permissions and tried to map them into those attack classes so let's let's talk about the attack",
    "start": "549920",
    "end": "555920"
  },
  {
    "text": "classes that we identified in kubernetes that could actually be interesting the first is permissions that allow you",
    "start": "555920",
    "end": "562399"
  },
  {
    "text": "to manipulate authentication or authorization for example to change your identity or",
    "start": "562399",
    "end": "567680"
  },
  {
    "text": "your permissions and a very obvious example would be the permission to impersonate other users",
    "start": "567680",
    "end": "573920"
  },
  {
    "text": "then you have permissions that allow you to acquire service account tokens either a retrieve an existing one or issue a",
    "start": "573920",
    "end": "580880"
  },
  {
    "text": "new one for example the least secrets permissions allow you to retrieve existing service account tokens which",
    "start": "580880",
    "end": "586720"
  },
  {
    "text": "are saved as a secret then you have permissions that allow you to execute code on either on on pods in",
    "start": "586720",
    "end": "593279"
  },
  {
    "text": "the cluster or nodes in the cluster so for example the permission to create pods slash exact is actually what allows",
    "start": "593279",
    "end": "599760"
  },
  {
    "text": "you to do cube catalyzer then you have a an attack class that i'm i'm really",
    "start": "599760",
    "end": "606000"
  },
  {
    "text": "excited about which is still pause basically attacks is permissions that allow you to move an existing pod from",
    "start": "606000",
    "end": "613519"
  },
  {
    "text": "one node to another and why would you want to do it if we assume that we",
    "start": "613519",
    "end": "618720"
  },
  {
    "text": "already compromised the node there might be interesting pods that we want to",
    "start": "618720",
    "end": "624160"
  },
  {
    "text": "bring to our node either because they host interesting business logic",
    "start": "624160",
    "end": "629200"
  },
  {
    "text": "or in our case because they host powerful permissions they have a powerful service account so",
    "start": "629200",
    "end": "634959"
  },
  {
    "text": "if we bring them over to our node we can then exploit their service account finally an attack class that we're not",
    "start": "634959",
    "end": "641120"
  },
  {
    "text": "going to get into too much is medler in the middle also known as the men in the middle permissions that allow you to",
    "start": "641120",
    "end": "647120"
  },
  {
    "text": "intercept traffic and the reason we're not going to get into it is because the impact it's not a reliable attack right you",
    "start": "647120",
    "end": "654240"
  },
  {
    "text": "can't reliably use many in the middle in kubernetes to escalate privileges you might but we are looking for",
    "start": "654240",
    "end": "659920"
  },
  {
    "text": "reliable attacks now we looked at the permissions in kubernetes and we try to classify them",
    "start": "659920",
    "end": "666079"
  },
  {
    "text": "based on those attack classes we're also going to release a report alongside this presentation which details for each",
    "start": "666079",
    "end": "672640"
  },
  {
    "text": "permissions how it enables the attack but we don't really have time to go over each one of them it's important to know",
    "start": "672640",
    "end": "679120"
  },
  {
    "text": "that these likes likely aren't all of the powerful permissions right but we think it's a good start",
    "start": "679120",
    "end": "684959"
  },
  {
    "text": "so back to a question of what makes a trampoline trampoline pods are posts that have permissions to",
    "start": "684959",
    "end": "690959"
  },
  {
    "text": "either manipulate authorization or authentication acquire service account tokens",
    "start": "690959",
    "end": "697279"
  },
  {
    "text": "execute code on pods or nodes or still pause because those permissions",
    "start": "697279",
    "end": "703120"
  },
  {
    "text": "get you a real shot at becoming cluster admin so let's do a quick recap because we",
    "start": "703120",
    "end": "709680"
  },
  {
    "text": "went over a couple of subjects so we started off and said that container escapes",
    "start": "709680",
    "end": "714720"
  },
  {
    "text": "are likely going to continue to happen and the main the main thing that dictates their",
    "start": "714720",
    "end": "719760"
  },
  {
    "text": "impact is whether a powerful part a trampoline exists on the node and we defined what a trampoline is",
    "start": "719760",
    "end": "727279"
  },
  {
    "text": "we also discussed how trampoline demon said install powerful pods into every single node in the cluster",
    "start": "727279",
    "end": "733600"
  },
  {
    "text": "so if you want to answer whether container escape actually equals cluster admin the question we are looking for is",
    "start": "733600",
    "end": "740240"
  },
  {
    "text": "are trampoline demon sets installed who installs them and how common are they and that's really the question that we",
    "start": "740240",
    "end": "746800"
  },
  {
    "text": "try to answer during this research we look at the most popular kubernetes platforms and trying to find trumple and",
    "start": "746800",
    "end": "752720"
  },
  {
    "text": "demonstrate and understand their impact on the platform so we focused on mostly on an",
    "start": "752720",
    "end": "758720"
  },
  {
    "text": "infrastructure platform so manage kubernetes services and distributions like eks gke",
    "start": "758720",
    "end": "765200"
  },
  {
    "text": "aks and openshift and we also look at container network interfaces like calico celio mantra and withnet",
    "start": "765200",
    "end": "772480"
  },
  {
    "text": "and the idea behind it is that infrastructure components are more likely to deploy demon sets",
    "start": "772480",
    "end": "779360"
  },
  {
    "text": "and when we looked at those platforms and searched for trump and demon sets and we found that most of them actually",
    "start": "779360",
    "end": "784560"
  },
  {
    "text": "installed them 62 62 and a half to be exact in stone powerful demon sets by default",
    "start": "784560",
    "end": "791680"
  },
  {
    "text": "and in this table you can actually see for each platform whether it installed powerful demon sets which are those",
    "start": "791680",
    "end": "798560"
  },
  {
    "text": "powerful demon sets and what were their powerful permissions again we there is a report that with more details we are not",
    "start": "798560",
    "end": "804480"
  },
  {
    "text": "going to get into each platform now so based on those trampoline demon sets",
    "start": "804480",
    "end": "809680"
  },
  {
    "text": "based on their permissions we try to evaluate whether container escape actually equals cluster admin in those",
    "start": "809680",
    "end": "814959"
  },
  {
    "text": "platforms and in half the platform based on the trampoline demon sets it did in another 25 of platforms there were",
    "start": "814959",
    "end": "822320"
  },
  {
    "text": "some prerequisites and in another 25 it didn't",
    "start": "822320",
    "end": "828800"
  },
  {
    "text": "now this is a breakdown of whether container escape actually equals cluster admin in",
    "start": "828800",
    "end": "834240"
  },
  {
    "text": "each one of those uh platforms you can see that we detailed the attack based of the attack",
    "start": "834240",
    "end": "840639"
  },
  {
    "text": "classes that are actually part of that of getting the cluster admin and for",
    "start": "840639",
    "end": "846560"
  },
  {
    "text": "platform that had really powerful trampoline demon sets the attack is pretty short but for ones where they were not that",
    "start": "846560",
    "end": "852720"
  },
  {
    "text": "powerful the attack took a few steps",
    "start": "852720",
    "end": "857839"
  },
  {
    "text": "now a lot of you are probably using those platforms so i just want to say there's no need to panic right there is a large",
    "start": "859120",
    "end": "865680"
  },
  {
    "text": "prerequisite here for an attacker to abuse trouble and demonstrate they first need to take over",
    "start": "865680",
    "end": "870800"
  },
  {
    "text": "your pod and then escape it and there are a lot of best practices and hardenings that can deny it",
    "start": "870800",
    "end": "876480"
  },
  {
    "text": "and a lot a lot of those platforms that i mentioned already removed powerful permissions from their demon sets",
    "start": "876480",
    "end": "882560"
  },
  {
    "text": "that being said if you run multi-tenant cluster you in a different scenario and you really should look into that",
    "start": "882560",
    "end": "888480"
  },
  {
    "text": "it will you should will be a bit more alert about that",
    "start": "888480",
    "end": "893360"
  },
  {
    "text": "okay so that was a lot of theory let's see how an attack looks like so we obviously don't have time to",
    "start": "894160",
    "end": "901120"
  },
  {
    "text": "go over every single platform and every attack in every platform we chose cilium mostly because it showcases a number of",
    "start": "901120",
    "end": "907360"
  },
  {
    "text": "attack classes and also celio maintainers did a great job of releasing fixes and back sporting them",
    "start": "907360",
    "end": "914160"
  },
  {
    "text": "so what's the scenario with celium psyllium installs two interesting",
    "start": "914160",
    "end": "919360"
  },
  {
    "text": "components one is the psyllium demon set a trampoline his permissions are to delete pods and",
    "start": "919360",
    "end": "925279"
  },
  {
    "text": "to update the status of nodes and those two actually allow you to still pause and we'll see how in a minute",
    "start": "925279",
    "end": "931680"
  },
  {
    "text": "then we have the psyllium operator deployment which can actually lead secrets and by that acquire service",
    "start": "931680",
    "end": "937759"
  },
  {
    "text": "account tokens now in this attack we are starting from [Music]",
    "start": "937759",
    "end": "943519"
  },
  {
    "text": "like how we started from the rest of the of this talk we compromise the node right and we want to become cluster",
    "start": "943519",
    "end": "949120"
  },
  {
    "text": "admin obviously we chose the weakest node so the node node hosting the cilium",
    "start": "949120",
    "end": "954639"
  },
  {
    "text": "operator and our approach to do that would be to first",
    "start": "954639",
    "end": "960320"
  },
  {
    "text": "use the cilium demonstra permissions to take over the cilium operator and then use his permissions to get",
    "start": "960320",
    "end": "966240"
  },
  {
    "text": "cluster admin so i'll just take a sip of photo before we start that",
    "start": "966240",
    "end": "973600"
  },
  {
    "text": "okay i'm ready so the first step in the attack it will be",
    "start": "975600",
    "end": "980800"
  },
  {
    "text": "to make other nodes unscheduleable and we do that by overwriting the port capacity in the status to zero",
    "start": "980800",
    "end": "988720"
  },
  {
    "text": "this we do that using the update node status permission the second step in the attack would be to actually delete the psyllium",
    "start": "988720",
    "end": "996240"
  },
  {
    "text": "operator now when that happens kubernetes will try to reschedule it and because all of the nodes are",
    "start": "996240",
    "end": "1002240"
  },
  {
    "text": "unscheduleable it has to land on our node so we successfully stolen the serium operator pod",
    "start": "1002240",
    "end": "1008720"
  },
  {
    "text": "now the next step in the attack would be to use his easily secret permissions to actually retrieve",
    "start": "1008720",
    "end": "1014320"
  },
  {
    "text": "a service account token for a built-in powerful service account that service account the",
    "start": "1014320",
    "end": "1019680"
  },
  {
    "text": "service account that we chose is the cluster all aggregation controller or crack",
    "start": "1019680",
    "end": "1026240"
  },
  {
    "text": "for short because he can actually manipulate permission by modifying cluster roles",
    "start": "1026240",
    "end": "1031839"
  },
  {
    "text": "the first step of the attack would actually to use that crack token to modify our own permissions and simply",
    "start": "1031839",
    "end": "1037839"
  },
  {
    "text": "grant ourselves the entire permissions in the cluster",
    "start": "1037839",
    "end": "1042959"
  },
  {
    "text": "so again the steps are first to steal the psyllium operator use his",
    "start": "1045120",
    "end": "1050640"
  },
  {
    "text": "permission to acquire a powerful token and then use that powerful token that admin equivalent token to get our to get",
    "start": "1050640",
    "end": "1057520"
  },
  {
    "text": "all of the permissions in the cluster now we are going to see a demo i know those were only three steps but",
    "start": "1057520",
    "end": "1063520"
  },
  {
    "text": "when you translate them to cube cattle commands it's a lot so it's going to be",
    "start": "1063520",
    "end": "1069360"
  },
  {
    "text": "quite quick um but if you don't if you can follow every command that's okay we're going to",
    "start": "1069360",
    "end": "1075039"
  },
  {
    "text": "have a like a walkthrough afterwards as well",
    "start": "1075039",
    "end": "1081000"
  },
  {
    "text": "so let's start we are in a cluster that installed celium right and the first thing we do is we emulate",
    "start": "1081280",
    "end": "1087520"
  },
  {
    "text": "a container escape",
    "start": "1087520",
    "end": "1090480"
  },
  {
    "text": "what i'm doing now is i'm installing a script that can actually find service account token in the file",
    "start": "1092559",
    "end": "1098320"
  },
  {
    "text": "system and then configure cube cartel to use it to use the token so just to make it a",
    "start": "1098320",
    "end": "1104000"
  },
  {
    "text": "bit easier and we are going to use the script to get the psyllium demons and token",
    "start": "1104000",
    "end": "1110240"
  },
  {
    "text": "now we can see that it's the cilium demon set because when we try to do a forbidden forbidden operation we can see that we",
    "start": "1110240",
    "end": "1117360"
  },
  {
    "text": "are identified as the psyllium demon set let's see our target we want to steal",
    "start": "1117360",
    "end": "1123120"
  },
  {
    "text": "the celium operator and we can see that is hosted on another node in the cluster",
    "start": "1123120",
    "end": "1128640"
  },
  {
    "text": "it's not our node so the first step is to try to steal it how we're doing that",
    "start": "1128640",
    "end": "1136720"
  },
  {
    "text": "we are going to change the pot capacity of the other nodes in the cluster to zero so we are now defining a bash",
    "start": "1136720",
    "end": "1142480"
  },
  {
    "text": "function that actually uses cube cattle proxy to modify the status of a node using a json patch",
    "start": "1142480",
    "end": "1151360"
  },
  {
    "text": "and you can see that what we do the operation is to replace the poll capacity and the new value would be zero",
    "start": "1151360",
    "end": "1159840"
  },
  {
    "text": "almost there got it and now we're going to use that",
    "start": "1160400",
    "end": "1165520"
  },
  {
    "text": "function to set the port capacity of the two other nodes in the cluster",
    "start": "1165520",
    "end": "1172000"
  },
  {
    "text": "to zero and we do it in a loop because kubernetes actually corrects the value",
    "start": "1172000",
    "end": "1178480"
  },
  {
    "text": "now the two other nodes in the cluster are unscheduleable so we can actually delete the cilium operator and if it all",
    "start": "1178480",
    "end": "1185039"
  },
  {
    "text": "goes well it should be recreated on our node and we can see that it does the node name is",
    "start": "1185039",
    "end": "1190799"
  },
  {
    "text": "highlighted in red and you can see that it's a different pod name from the one that we deleted",
    "start": "1190799",
    "end": "1197120"
  },
  {
    "text": "the next step in the attack would be to use his the psyllium operator permissions to get",
    "start": "1197120",
    "end": "1202640"
  },
  {
    "text": "cracks token right so we configure ourselves the q we configure cube cattle",
    "start": "1202640",
    "end": "1208000"
  },
  {
    "text": "to use psyllium operators permissions and we can see that we can actually now",
    "start": "1208000",
    "end": "1213200"
  },
  {
    "text": "get three secrets in the cluster so we are targeting the service account token secret of the cluster aggregation controller",
    "start": "1213200",
    "end": "1222320"
  },
  {
    "text": "and here i'm making a typo so that doesn't work but now it should and we got the token and we're going to",
    "start": "1222400",
    "end": "1227840"
  },
  {
    "text": "configure a cube catal to use it so now that we have that token we can actually modify cluster all crustables",
    "start": "1227840",
    "end": "1235280"
  },
  {
    "text": "in the cluster we are not yet a cluster admin as you can now see",
    "start": "1235280",
    "end": "1240400"
  },
  {
    "text": "but we are now going to actually change our permissions so we are now using cracks token to modify our permissions by modifying the",
    "start": "1240400",
    "end": "1248720"
  },
  {
    "text": "cluster wall that is binded um to the crack service account",
    "start": "1248720",
    "end": "1255120"
  },
  {
    "text": "so as you can see this is the cluster wall of the crack service account it can now escalate cluster roles but we're",
    "start": "1255120",
    "end": "1260159"
  },
  {
    "text": "going to change it a bit we're going to make it full cluster admin",
    "start": "1260159",
    "end": "1265679"
  },
  {
    "text": "awesome and now when we check the permission of crack we can see that we can actually do every single operation in the cluster in all namespaces so we",
    "start": "1269200",
    "end": "1276880"
  },
  {
    "text": "basically achieved our goal from a single compromise node to become cluster admin",
    "start": "1276880",
    "end": "1284799"
  },
  {
    "text": "thanks",
    "start": "1288080",
    "end": "1291080"
  },
  {
    "text": "so what attack classes did we just see in the demo we started off by stealing a pod right still in the cellium operator",
    "start": "1294480",
    "end": "1301280"
  },
  {
    "text": "pod we then used his permissions to acquire a powerful service account token and finally we used that service account",
    "start": "1301280",
    "end": "1307600"
  },
  {
    "text": "token to manipulate our authorization our permissions to get class running so this is just how",
    "start": "1307600",
    "end": "1313600"
  },
  {
    "text": "the attack classes that we discussed earlier mapped to an attack",
    "start": "1313600",
    "end": "1319360"
  },
  {
    "text": "some final remarks on celium cilium actually fixed all of those issues none of those powerful permissions remain",
    "start": "1319360",
    "end": "1325280"
  },
  {
    "text": "and obviously other platforms had similar attacks we just needed to demo something",
    "start": "1325280",
    "end": "1330400"
  },
  {
    "text": "like we just needed to choose one to demo the demo targeted the cilium cli installation which was the default",
    "start": "1330400",
    "end": "1336880"
  },
  {
    "text": "installation method when we looked at it uh but selium is actually a special case but there is a two popular installation",
    "start": "1336880",
    "end": "1343200"
  },
  {
    "text": "method also via helm and via helping the permissions are slightly lower so the impact is lower we don't have",
    "start": "1343200",
    "end": "1349679"
  },
  {
    "text": "i don't have time to like get into that but if you want if you use psyllium with helm and want to understand you can see",
    "start": "1349679",
    "end": "1355200"
  },
  {
    "text": "our report so let's talk about what platforms did when we disclose",
    "start": "1355200",
    "end": "1362480"
  },
  {
    "text": "those trumpet demons to them we disclosed our findings every every single trampoline demonstrated we found",
    "start": "1362480",
    "end": "1368480"
  },
  {
    "text": "between december 21 to february 22. and it was really a great disclosure",
    "start": "1368480",
    "end": "1374880"
  },
  {
    "text": "experience all around all of the platforms were really cooperative and understood the issue and wanted to resolve it",
    "start": "1374880",
    "end": "1381760"
  },
  {
    "text": "some approaches that platforms took to fix this issue i think it's quite interesting the first was simply to strip excessive or other needed",
    "start": "1381760",
    "end": "1388559"
  },
  {
    "text": "permissions or to just scope down certain permissions",
    "start": "1388559",
    "end": "1394080"
  },
  {
    "text": "another approach that we saw is to move functionalities from demon sets that run on every single node in the cluster to",
    "start": "1394080",
    "end": "1399919"
  },
  {
    "text": "deployments that only run on a few or to the control plane in the case of managed services",
    "start": "1399919",
    "end": "1406240"
  },
  {
    "text": "and finally a couple of platform actually released admission policies for example",
    "start": "1406240",
    "end": "1411760"
  },
  {
    "text": "similar to opa gatekeeper for example that actually prevent misuse of those problematic demon sets so they scope",
    "start": "1411760",
    "end": "1418799"
  },
  {
    "text": "down the operation that the demonstration can actually do now you can see that",
    "start": "1418799",
    "end": "1425120"
  },
  {
    "text": "there was a really good trend in just a few months so i think it really speaks well to the commitment of the platforms",
    "start": "1425120",
    "end": "1431279"
  },
  {
    "text": "that we mentioned here to resolve the issue from 62 and a half percent now only 25",
    "start": "1431279",
    "end": "1437120"
  },
  {
    "text": "run trampoline demon sets and a really similar thing happened uh with the impact of container escapes",
    "start": "1437120",
    "end": "1443520"
  },
  {
    "text": "now it's worth mentioning that this talks about the impact of container escapes due to",
    "start": "1443520",
    "end": "1449760"
  },
  {
    "text": "due to kubernetes native attacks if any platforms has some platform specific attacks we obviously didn't look into",
    "start": "1449760",
    "end": "1456559"
  },
  {
    "text": "that this is a breakdown of the fixes in each platforms",
    "start": "1456559",
    "end": "1463520"
  },
  {
    "text": "some things to mention are probably openshift as it turns out",
    "start": "1463520",
    "end": "1468799"
  },
  {
    "text": "just by random they were the last platform that we disclosed to and they really had a lot of things to fix and",
    "start": "1468799",
    "end": "1475039"
  },
  {
    "text": "they really did a great job with that and it's fixed are going to get released in the next version and google also gave",
    "start": "1475039",
    "end": "1481520"
  },
  {
    "text": "us a bounty for this findings which was quite nice of them",
    "start": "1481520",
    "end": "1486919"
  },
  {
    "text": "so let's talk about what you can do to actually solve this kind of privilege escalations whether you are a",
    "start": "1487360",
    "end": "1493279"
  },
  {
    "text": "kubernetes user your own clusters or maybe you're a maintainer of a kubernetes project because obviously we",
    "start": "1493279",
    "end": "1498880"
  },
  {
    "text": "didn't cover so many other projects that people also in commonly installed into their clusters",
    "start": "1498880",
    "end": "1505360"
  },
  {
    "text": "so first of all obviously if you we need to follow the principle of least",
    "start": "1505360",
    "end": "1510880"
  },
  {
    "text": "privileges so when you can try to score permissions to specific namespaces or to specific",
    "start": "1510880",
    "end": "1517600"
  },
  {
    "text": "resource names and it's really good to take a look at your kubernetes manifest and your helm",
    "start": "1517600",
    "end": "1523919"
  },
  {
    "text": "charge to see what kind of permissions are you asking for at the moment a lot of time when we are just starting a",
    "start": "1523919",
    "end": "1529679"
  },
  {
    "text": "project or starting a deployment we often give broad permissions just to",
    "start": "1529679",
    "end": "1534720"
  },
  {
    "text": "make sure that everything works and those stairs legacy even though that are not needed",
    "start": "1534720",
    "end": "1540799"
  },
  {
    "text": "it's really important to understand your arbuck poster if you want kubernetes like you should be able to say those are",
    "start": "1540799",
    "end": "1547120"
  },
  {
    "text": "the powerful pods in my cluster those are the ones that can actually escalate privileges if you are",
    "start": "1547120",
    "end": "1553600"
  },
  {
    "text": "maintaining a kubernetes project it would be great if you can actually document the powerful permissions that you are installing into a cluster",
    "start": "1553600",
    "end": "1560880"
  },
  {
    "text": "now once you have identified the powerful permissions in your cluster and if they don't run as demon sets",
    "start": "1560880",
    "end": "1566240"
  },
  {
    "text": "it's best practice to isolate them from publicly exposed or untrusted",
    "start": "1566240",
    "end": "1572720"
  },
  {
    "text": "pods in your cluster you know there are a couple of scheduling mechanisms that you can actually use to do that",
    "start": "1572720",
    "end": "1579440"
  },
  {
    "text": "and now to discuss trampling demon sets obviously we saw how they degrade the security of the cluster so when you can",
    "start": "1580400",
    "end": "1587840"
  },
  {
    "text": "try to remove them you can move privileged functionality from demon sets to non-demand set",
    "start": "1587840",
    "end": "1594400"
  },
  {
    "text": "components of your platform or your cluster although i actually you can move them to the control plane if you have control",
    "start": "1594400",
    "end": "1600960"
  },
  {
    "text": "over the control plane now you can also minimize write permissions over core objects like pods",
    "start": "1600960",
    "end": "1607120"
  },
  {
    "text": "and nodes by uh by storing state in a config maps or in a",
    "start": "1607120",
    "end": "1612799"
  },
  {
    "text": "crds and finally it's not really a question of drop",
    "start": "1612799",
    "end": "1618240"
  },
  {
    "text": "everything or drop nothing right drop the permissions that you can it's still much better if a demon said that",
    "start": "1618240",
    "end": "1624320"
  },
  {
    "text": "they could previously acquire tokens can now only launch men in the middle attacks right",
    "start": "1624320",
    "end": "1629760"
  },
  {
    "text": "so it's a it's it's a step-by-step progress",
    "start": "1629760",
    "end": "1635760"
  },
  {
    "text": "finally you can also use admission policies when some permissions are hard to remove to actually scope",
    "start": "1635760",
    "end": "1642559"
  },
  {
    "text": "down what a certain demon set can do and we have some more data on that and",
    "start": "1642559",
    "end": "1648159"
  },
  {
    "text": "examples for that in our report",
    "start": "1648159",
    "end": "1652279"
  },
  {
    "text": "okay so we discussed about what to do when you want to address powerful permissions but when we looked at this",
    "start": "1654399",
    "end": "1659760"
  },
  {
    "text": "issue we found that it's quite hard to identify powerful permission in the cluster we don't have a lot of automated",
    "start": "1659760",
    "end": "1665039"
  },
  {
    "text": "tool so we wrote one and we named it our back police what our book police does it retrieves",
    "start": "1665039",
    "end": "1672000"
  },
  {
    "text": "the permissions of pods service accounts and nodes in your cluster and then evaluates them based on",
    "start": "1672000",
    "end": "1678640"
  },
  {
    "text": "policies written in rigo so out of the box we have 20 policies for each of those powerful permissions",
    "start": "1678640",
    "end": "1684399"
  },
  {
    "text": "uh that we mentioned so you can simply run albert police and see which are the powerful pods in your cluster but it's",
    "start": "1684399",
    "end": "1690720"
  },
  {
    "text": "also customizable like you can search for every pattern that you'd like to in kubernetes are back",
    "start": "1690720",
    "end": "1696720"
  },
  {
    "text": "and here's an example of how the output looks uh you can see that",
    "start": "1696720",
    "end": "1702799"
  },
  {
    "text": "this shows celium so the cluster that we just saw and it shows that celium can actually modify pods so it alerts",
    "start": "1702799",
    "end": "1709520"
  },
  {
    "text": "on the specific surface accounts and specific poles in the cluster that are actually powerful",
    "start": "1709520",
    "end": "1716159"
  },
  {
    "text": "i really recommend to try it it takes like a couple of seconds and it gives you a lot of insight in you into your",
    "start": "1716159",
    "end": "1721440"
  },
  {
    "text": "outback posture some final thoughts",
    "start": "1721440",
    "end": "1727039"
  },
  {
    "text": "so the bright side is that issues are getting subtler and mildly right a few years ago issues were not complex to",
    "start": "1727039",
    "end": "1735279"
  },
  {
    "text": "exploit and had a lot of impact and you can see that here they are actually a big prerequisite of compromising a node",
    "start": "1735279",
    "end": "1742320"
  },
  {
    "text": "the one downside though is that we can have some false confidence because of that like you might have a cluster that",
    "start": "1742320",
    "end": "1748320"
  },
  {
    "text": "passes all of the sys benchmarks and all of the best practice benchmarks",
    "start": "1748320",
    "end": "1753760"
  },
  {
    "text": "but you might not be aware that you're a single container escape away from your whole cluster being compromised",
    "start": "1753760",
    "end": "1760399"
  },
  {
    "text": "and one way to address this those kind of issues is to tackle vague areas in a kubernetes",
    "start": "1760399",
    "end": "1766640"
  },
  {
    "text": "security we try to do that in this talk for two main questions that we felt like didn't have good answer to",
    "start": "1766640",
    "end": "1773200"
  },
  {
    "text": "like which permissions are actually powerful and what's the real impact if container escapes",
    "start": "1773200",
    "end": "1779360"
  },
  {
    "text": "the main the main point is that kubernetes is complex enough and when we can we should try to research those type of issues and try to",
    "start": "1779360",
    "end": "1786320"
  },
  {
    "text": "really document and make their impact public so with that here's a link to our report",
    "start": "1786320",
    "end": "1793039"
  },
  {
    "text": "here's the link to albert police and i'll be happy to take any questions",
    "start": "1793039",
    "end": "1797679"
  },
  {
    "text": "[Applause]",
    "start": "1798750",
    "end": "1806159"
  },
  {
    "text": "thank you uh yeah thank you for your discovery i think our team was busy last couple months to fix all the",
    "start": "1806159",
    "end": "1813120"
  },
  {
    "text": "issues so here are a couple questions from q a online first one is uh",
    "start": "1813120",
    "end": "1820399"
  },
  {
    "text": "why does multi-tenant scenario increase the chance of escape equals to admin",
    "start": "1820399",
    "end": "1828320"
  },
  {
    "text": "um they don't that's a good question they don't really increase the chances of container escape",
    "start": "1828960",
    "end": "1835520"
  },
  {
    "text": "equaling cluster admin but they do increase the chance of container escapes because there is more chance that you have a malicious tenant for example so",
    "start": "1835520",
    "end": "1842960"
  },
  {
    "text": "that's what i meant by that and the other question uh yeah the other question i can answer the report the",
    "start": "1842960",
    "end": "1850960"
  },
  {
    "text": "report link is on the screen right now so you can scan it so",
    "start": "1850960",
    "end": "1856080"
  },
  {
    "text": "another question is uh so the least privileged paradigm is",
    "start": "1856080",
    "end": "1861360"
  },
  {
    "text": "still need more attention so to raise the bar a little bit do you think a zero",
    "start": "1861360",
    "end": "1867600"
  },
  {
    "text": "percentage implementation is feasible for kubernetes",
    "start": "1867600",
    "end": "1872960"
  },
  {
    "text": "that's a really good question i don't think we can come to a situation where every single node in the cluster",
    "start": "1872960",
    "end": "1880000"
  },
  {
    "text": "for example doesn't host powerful credentials but we can definitely arrive at the point where most nodes in the",
    "start": "1880000",
    "end": "1885679"
  },
  {
    "text": "cluster don't host powerful privileges and that's really um what we're driving here i think the",
    "start": "1885679",
    "end": "1892559"
  },
  {
    "text": "opposite of that is the current situations where in a lot of clusters every node in the cluster has powerful",
    "start": "1892559",
    "end": "1898399"
  },
  {
    "text": "credentials on it and that's really not good for your security yeah so thank you you all uh i think we",
    "start": "1898399",
    "end": "1905679"
  },
  {
    "text": "can have some questions i mean here",
    "start": "1905679",
    "end": "1910158"
  },
  {
    "text": "thank you uh thanks uh say roman prashanka here uh",
    "start": "1918640",
    "end": "1923679"
  },
  {
    "text": "i have a question about this arabic police uh it as you showed as we showed it shows",
    "start": "1923679",
    "end": "1931120"
  },
  {
    "text": "some dangerous permissions some bad stuff that could happen to the cluster but it's already in the cluster",
    "start": "1931120",
    "end": "1937200"
  },
  {
    "text": "right uh we have been discussing it here as the colleagues it was a colleague if",
    "start": "1937200",
    "end": "1942559"
  },
  {
    "text": "it is possible to integrate with some sort of pipeline to find out if this permissions would be",
    "start": "1942559",
    "end": "1950880"
  },
  {
    "text": "appearing into the cluster after some of the changes for instance with lots of",
    "start": "1950880",
    "end": "1956000"
  },
  {
    "text": "pipelines for different home charts it would be nice to know that some sort of helm apply",
    "start": "1956000",
    "end": "1963279"
  },
  {
    "text": "would sort of help install home upgrade would cause the bat that that pods would cause the",
    "start": "1963279",
    "end": "1969600"
  },
  {
    "text": "bad permissions to appear in the chat without actually having them that's an awesome question",
    "start": "1969600",
    "end": "1975440"
  },
  {
    "text": "we actually discussed this in we had this in the presentation earlier but we didn't really have a time to to get to that",
    "start": "1975440",
    "end": "1981200"
  },
  {
    "text": "and we have chekhov which is open source ifc um scanner which can actually scan from",
    "start": "1981200",
    "end": "1988000"
  },
  {
    "text": "these configurations and we just contribute with a couple of our back policies um",
    "start": "1988000",
    "end": "1993440"
  },
  {
    "text": "and we expect to contribute more in the future so we are we are aiming for using this tool to tackle that the",
    "start": "1993440",
    "end": "1999840"
  },
  {
    "text": "issue that you presented of finding powerful issues powerful permissions before they are deployed to",
    "start": "1999840",
    "end": "2005360"
  },
  {
    "text": "the cluster hey oh hi i'm",
    "start": "2005360",
    "end": "2013279"
  },
  {
    "text": "anuja from extension devops um in the uk just got a question it might be a bit simple on how effective it would be to",
    "start": "2013279",
    "end": "2020240"
  },
  {
    "text": "just completely lock down your network like your networking within the cluster and only enable pod to pod communication",
    "start": "2020240",
    "end": "2027120"
  },
  {
    "text": "through network policies so you mean that lock down the net the communication between nodes",
    "start": "2027120",
    "end": "2033840"
  },
  {
    "text": "is that uh um oh i just meant between oh so this was we were talking about the between",
    "start": "2033840",
    "end": "2039760"
  },
  {
    "text": "nodes networking i was talking about just between pods so if you completely lock down your pod right and someone",
    "start": "2039760",
    "end": "2046240"
  },
  {
    "text": "uses it as a trampoline pod and it can't technically network out but then",
    "start": "2046240",
    "end": "2051839"
  },
  {
    "text": "yeah maybe you're talking about you then access access node networking and i missed that",
    "start": "2051839",
    "end": "2058720"
  },
  {
    "text": "thanks i'm not sure i heard everything but if understood correctly locking down networking specifically",
    "start": "2058720",
    "end": "2064398"
  },
  {
    "text": "between pods is that so because of most of the attackers are actually",
    "start": "2064399",
    "end": "2069760"
  },
  {
    "text": "carried out from the compromise node to the api server and that line of communication is",
    "start": "2069760",
    "end": "2075520"
  },
  {
    "text": "actually essential there isn't much you can do about that but obviously locking down networking like external networking and locking",
    "start": "2075520",
    "end": "2082079"
  },
  {
    "text": "down pod to pod communication when it's not needed that can help you from preventing the initial compromise right",
    "start": "2082079",
    "end": "2090158"
  },
  {
    "text": "hi hello uh i'm working on adding username spaces support to the cubelet and i was",
    "start": "2090159",
    "end": "2096240"
  },
  {
    "text": "wondering if most parts at least the compromise part runs in a username space",
    "start": "2096240",
    "end": "2103520"
  },
  {
    "text": "and and that username space is on every part in the host run as a different uid in",
    "start": "2103520",
    "end": "2110160"
  },
  {
    "text": "the yeah in the host name namespace",
    "start": "2110160",
    "end": "2115280"
  },
  {
    "text": "like uh would it be possible to compromise the service accounts as you cannot read them because your different",
    "start": "2115280",
    "end": "2122000"
  },
  {
    "text": "uids would that help in this case obviously usernames that's a really good",
    "start": "2122000",
    "end": "2127920"
  },
  {
    "text": "question obviously usernamespace help a lot with containers isolation so their job would be to prevent the container",
    "start": "2127920",
    "end": "2133599"
  },
  {
    "text": "escapes and [Music] then again usernamespaces alone i",
    "start": "2133599",
    "end": "2139680"
  },
  {
    "text": "wouldn't like rely only on that but if you have a more powerful sandboxing solution like a",
    "start": "2139680",
    "end": "2146000"
  },
  {
    "text": "let's say cutter containers or g visor and there there is actually that actually does sandboxing to",
    "start": "2146000",
    "end": "2152880"
  },
  {
    "text": "a higher degree and then it's it's less um problematic to have a",
    "start": "2152880",
    "end": "2159680"
  },
  {
    "text": "powerful pods next to let's say publicly exposed one it's still not perfect",
    "start": "2159680",
    "end": "2165760"
  },
  {
    "text": "but to a question yes usernamespaces do help obviously with every container isolation",
    "start": "2165760",
    "end": "2171520"
  },
  {
    "text": "uh hi um i i was wondering about two potential",
    "start": "2171520",
    "end": "2176560"
  },
  {
    "text": "well one mitigation and one possible design um whether something like tell us like a",
    "start": "2176560",
    "end": "2183040"
  },
  {
    "text": "very minimal node with no shell how much would that",
    "start": "2183040",
    "end": "2188560"
  },
  {
    "text": "kind of help against this attack and then also in kubernetes if service accounts were a separate resource to",
    "start": "2188560",
    "end": "2194960"
  },
  {
    "text": "secrets can you see that offering any benefit to these types of attacks as well",
    "start": "2194960",
    "end": "2202000"
  },
  {
    "text": "so i think there were two questions one was related to removing a binaries from the node removing the",
    "start": "2202000",
    "end": "2208560"
  },
  {
    "text": "shell right and the second was about service accounts not being secrets is that there",
    "start": "2208560",
    "end": "2214640"
  },
  {
    "text": "so i i'll actually start with the second question so there's actually now a",
    "start": "2214640",
    "end": "2220079"
  },
  {
    "text": "a kubernetes enhancement proposal that's just landed in 124 where",
    "start": "2220079",
    "end": "2225599"
  },
  {
    "text": "service account tokens are not automatically created as a secrets for a new service accounts so that obviously",
    "start": "2225599",
    "end": "2233599"
  },
  {
    "text": "reduces the impact of one powerful permission the least secret permission and but you should note that i don't",
    "start": "2233599",
    "end": "2239359"
  },
  {
    "text": "think that in 20126 um existing service account tokens would be removed from secrets",
    "start": "2239359",
    "end": "2246720"
  },
  {
    "text": "for your question about the removing binaries from nodes obviously like it's a good hardening i",
    "start": "2246720",
    "end": "2253359"
  },
  {
    "text": "don't think it's like something that can stop this completely and i and i think it's also a bit how to",
    "start": "2253359",
    "end": "2258560"
  },
  {
    "text": "implement that but yeah i think for the future a lockdown node is definitely",
    "start": "2258560",
    "end": "2264880"
  },
  {
    "text": "interesting to look into and i know aws tries to do something like that with a bottle rocket for example",
    "start": "2264880",
    "end": "2271520"
  },
  {
    "text": "yeah thank you uh i think we are right out of time uh if you have more questions feel free to email eval and",
    "start": "2271520",
    "end": "2279119"
  },
  {
    "text": "you can connect connect with him through the cobra kong platform thank you everyone",
    "start": "2279119",
    "end": "2284880"
  },
  {
    "text": "give him another plow",
    "start": "2284880",
    "end": "2289480"
  }
]