[
  {
    "text": "okay Neha Java Oh Jackson Nick and my Chinese is",
    "start": "1460",
    "end": "8790"
  },
  {
    "text": "terrible I try I have a duolingo subscription I've been trying maybe next",
    "start": "8790",
    "end": "16139"
  },
  {
    "text": "year so I I apologize but it's a pleasure to",
    "start": "16139",
    "end": "23010"
  },
  {
    "text": "be here I always love coming to to China I especially love coming to to kukuana",
    "start": "23010",
    "end": "29849"
  },
  {
    "text": "in China and it's wonderful to see you all and today I want to talk to you",
    "start": "29849",
    "end": "35340"
  },
  {
    "text": "about network observability with with envoy wen my clicker okay so I'm a",
    "start": "35340",
    "end": "45960"
  },
  {
    "text": "developer advocate I work at a company called hash eco and I've been playing",
    "start": "45960",
    "end": "51360"
  },
  {
    "text": "around with service mash and envoy and and sort of the whole observability sort",
    "start": "51360",
    "end": "57930"
  },
  {
    "text": "of sphere for about 12 months maybe 18 months now and I found that there are",
    "start": "57930",
    "end": "65820"
  },
  {
    "text": "some concepts which are pretty difficult to grasp so what I want to do today is",
    "start": "65820",
    "end": "71640"
  },
  {
    "text": "kind of give you an introduction on what observability is and and and how you can",
    "start": "71640",
    "end": "78240"
  },
  {
    "text": "use an absolute myriad of metrics which come out of Vaughn voice and we can also",
    "start": "78240",
    "end": "84570"
  },
  {
    "text": "take a look at a tracing and tracing is I don't know whether you're viewing",
    "start": "84570",
    "end": "89939"
  },
  {
    "text": "using tracing or not it's it's interesting my background I've used",
    "start": "89939",
    "end": "95430"
  },
  {
    "text": "metrics for sort of basic statistics for about five years and tracing is a",
    "start": "95430",
    "end": "102090"
  },
  {
    "text": "slightly different concept and we'll take a look at that and very very briefly I want to look at logging and",
    "start": "102090",
    "end": "109079"
  },
  {
    "text": "that's kind of more so uh why this is actually really important in addition to all of the other stuff alright so why",
    "start": "109079",
    "end": "117899"
  },
  {
    "text": "are we here how have we kind of got ourselves into this situation where we need to be",
    "start": "117899",
    "end": "124549"
  },
  {
    "text": "thinking about things like service mash and network observability well we're",
    "start": "124549",
    "end": "132510"
  },
  {
    "text": "here because we've moved from static infrastructure to dynamic infrastructure",
    "start": "132510",
    "end": "138370"
  },
  {
    "text": "the whole world has changed we've",
    "start": "138370",
    "end": "143420"
  },
  {
    "text": "changed the way that we're managing services when i running kubernetes were running multi-talented were running",
    "start": "143420",
    "end": "149480"
  },
  {
    "text": "smaller services and you know these things cause problems as well as solving",
    "start": "149480",
    "end": "156530"
  },
  {
    "text": "problems how do we get traffic east-west how do we deal with things like network",
    "start": "156530",
    "end": "162980"
  },
  {
    "text": "perimeter and most importantly for this talk how do we understand what's actually going on inside of that",
    "start": "162980",
    "end": "169160"
  },
  {
    "text": "environment so the market trend has been",
    "start": "169160",
    "end": "175520"
  },
  {
    "text": "this move right and I wrote a book on micro services a couple of years ago and I'm gonna publish a new edition and",
    "start": "175520",
    "end": "182030"
  },
  {
    "text": "updating that hopefully this yeah but one of the things that that I see is a",
    "start": "182030",
    "end": "187670"
  },
  {
    "text": "real benefit is this movement towards smaller functions of work smaller",
    "start": "187670",
    "end": "195170"
  },
  {
    "text": "instances smaller application instances container based services rather than huge monoliths and there's a number of",
    "start": "195170",
    "end": "201709"
  },
  {
    "text": "reasons why that's beneficial it's easier to deploy you're deploying smaller smaller instances lower risk it",
    "start": "201709",
    "end": "211250"
  },
  {
    "text": "allows collaboration but it did require",
    "start": "211250",
    "end": "216290"
  },
  {
    "text": "us to rethink pretty much completely how we manage and understand our systems",
    "start": "216290",
    "end": "224080"
  },
  {
    "text": "so the benefits of this as I kind of said is that productivity thing you know micro-services I see are a developer",
    "start": "227090",
    "end": "235140"
  },
  {
    "text": "tool the the benefit is is to to us who are working on the systems and coding",
    "start": "235140",
    "end": "241020"
  },
  {
    "text": "them more so than it than a business tool but there's also a business benefit in that if we can ship code quicker we",
    "start": "241020",
    "end": "248190"
  },
  {
    "text": "can get benefits to the end-users quicker but there's a cost as well",
    "start": "248190",
    "end": "254550"
  },
  {
    "text": "because you're deploying these multiple instances of services do you need like",
    "start": "254550",
    "end": "259709"
  },
  {
    "text": "many many different load balancers and different components of em structures I'm not gonna go into all of that today",
    "start": "259709",
    "end": "266010"
  },
  {
    "text": "but just some terminology before we begin just in case anybody is kind of",
    "start": "266010",
    "end": "271650"
  },
  {
    "text": "not familiar but so I'm gonna be talking about envoy and envoy as a component of",
    "start": "271650",
    "end": "276930"
  },
  {
    "text": "a service match so composer service mesh generally built into two two main",
    "start": "276930",
    "end": "282750"
  },
  {
    "text": "components a centralized and distributed control plane and the data plane so the",
    "start": "282750",
    "end": "290760"
  },
  {
    "text": "data plane is where all of your traffic is flowing traffic doesn't flow",
    "start": "290760",
    "end": "296330"
  },
  {
    "text": "independently from a service instance to another service instance it's all proxied in and out through the data",
    "start": "296330",
    "end": "303810"
  },
  {
    "text": "plane where that gives us a benefit is that because the traffic is flowing",
    "start": "303810",
    "end": "309930"
  },
  {
    "text": "through the data plane we can understand better what's going on with regard to",
    "start": "309930",
    "end": "315840"
  },
  {
    "text": "our network communications and back",
    "start": "315840",
    "end": "322080"
  },
  {
    "text": "under that dynamic infrastructure thing networks are not reliable they're kind",
    "start": "322080",
    "end": "330480"
  },
  {
    "text": "of pretty unreliable so we've got to think about ways of mitigating that",
    "start": "330480",
    "end": "335820"
  },
  {
    "text": "reliability but before we can mitigate reliability we've got to understand it",
    "start": "335820",
    "end": "341880"
  },
  {
    "text": "you can't do reliability unless you have observability but observability it's",
    "start": "341880",
    "end": "352260"
  },
  {
    "text": "alright it's all over all the blog posts all the Twitter's",
    "start": "352260",
    "end": "357370"
  },
  {
    "text": "is it just a buzzword what does anybody mean when they say the word observability so by definition object so",
    "start": "357370",
    "end": "368139"
  },
  {
    "text": "observability comes from control theory it's an engineering term in' and it's kind of a measure of how well internal",
    "start": "368139",
    "end": "373570"
  },
  {
    "text": "states of a system can be inferred from knowledge of external outputs like what",
    "start": "373570",
    "end": "380160"
  },
  {
    "text": "well what we're trying to say is that if we measure internal inputs and outputs",
    "start": "380160",
    "end": "387400"
  },
  {
    "text": "we can determine an overall health of a system based on those we can infer and",
    "start": "387400",
    "end": "395650"
  },
  {
    "text": "what does it encompass so observability this is kind of the key thing for me that observability is not just about",
    "start": "395650",
    "end": "403030"
  },
  {
    "text": "metrics or envoy statistics on the observability encompasses all of this so",
    "start": "403030",
    "end": "409570"
  },
  {
    "text": "things like your Envoy statistics application statistics kubernetes",
    "start": "409570",
    "end": "415060"
  },
  {
    "text": "statistics tracing logging health checks",
    "start": "415060",
    "end": "420330"
  },
  {
    "text": "business analytics right don't don't forget this but if you think about if you want to measure the performance of a",
    "start": "420330",
    "end": "427630"
  },
  {
    "text": "system based on its external inputs then what about sales like if a system isn't",
    "start": "427630",
    "end": "434830"
  },
  {
    "text": "functioning correctly you're gonna see decrease sales potentially or decrease",
    "start": "434830",
    "end": "440560"
  },
  {
    "text": "traffic or customer interaction those things are business metrics they're not necessarily system",
    "start": "440560",
    "end": "445630"
  },
  {
    "text": "properties but observability tries to encounter for all of those well we're",
    "start": "445630",
    "end": "451300"
  },
  {
    "text": "going to be looking at is just a small part of that and we're going to look at envoy statistics and tracing mainly so",
    "start": "451300",
    "end": "460660"
  },
  {
    "text": "again we've got when we're thinking about observability we've got to think about internal and external",
    "start": "460660",
    "end": "465690"
  },
  {
    "text": "instrumentation so we're gonna be thinking about things like probes",
    "start": "465690",
    "end": "471070"
  },
  {
    "text": "they're on Nagios looking at disk space all of these affect the behavior of the",
    "start": "471070",
    "end": "476200"
  },
  {
    "text": "system we're gonna look at things like health checks again it's a it's an external check but we're also going to",
    "start": "476200",
    "end": "484330"
  },
  {
    "text": "be looking at application network statistics these are the things which are emitted from the internal",
    "start": "484330",
    "end": "489550"
  },
  {
    "text": "of your system it's a matrix so when you",
    "start": "489550",
    "end": "497289"
  },
  {
    "text": "want to understand matrix with envoy you've you've really got to first understand the architecture of envoy",
    "start": "497289",
    "end": "504849"
  },
  {
    "text": "because if you look at the documentation olive oil it's just thousands and",
    "start": "504849",
    "end": "509979"
  },
  {
    "text": "thousands of different metrics and where do they come from right so there's",
    "start": "509979",
    "end": "515979"
  },
  {
    "text": "ultimately these five component parts so we have things like listeners listener",
    "start": "515979",
    "end": "522760"
  },
  {
    "text": "filters rudos clusters and ultimately",
    "start": "522760",
    "end": "528250"
  },
  {
    "text": "the control plane so bless break those down so a listener is is something which",
    "start": "528250",
    "end": "535660"
  },
  {
    "text": "is a named Network location so this can be something which your downstream",
    "start": "535660",
    "end": "542140"
  },
  {
    "text": "clients can act into but also something which you make a request outbound to an",
    "start": "542140",
    "end": "547810"
  },
  {
    "text": "envoy is going to expose a number of different listeners in your setup it's gonna have a minimum of sort of to form",
    "start": "547810",
    "end": "555579"
  },
  {
    "text": "for the control plane and one for the internals but this is kind of a another",
    "start": "555579",
    "end": "562180"
  },
  {
    "text": "key term and differentiating between the understanding of what is downstream and what is upstream so downstream is a",
    "start": "562180",
    "end": "570220"
  },
  {
    "text": "response and a request which comes from an end-user client so an external so I",
    "start": "570220",
    "end": "576160"
  },
  {
    "text": "could be a downstream source when I'm making a request to your website another service can be a downstream root source",
    "start": "576160",
    "end": "586740"
  },
  {
    "text": "where is an upstream this is something which is made to another service and",
    "start": "586740",
    "end": "593470"
  },
  {
    "text": "it's important to understand the difference between these two when we start getting into matrix because a",
    "start": "593470",
    "end": "600540"
  },
  {
    "text": "failure in an upstream doesn't necessarily mean a failure response code",
    "start": "600540",
    "end": "607420"
  },
  {
    "text": "return to your downstream service customer or user and that's because of",
    "start": "607420",
    "end": "613810"
  },
  {
    "text": "the reliability patterns which are potentially implemented somewhere in the filters there",
    "start": "613810",
    "end": "620030"
  },
  {
    "text": "a cluster what a cluster is in terms of envoy it's a collection of endpoints now",
    "start": "620030",
    "end": "626810"
  },
  {
    "text": "that could be either automated service discovery or could be statically configured but a cluster contains load",
    "start": "626810",
    "end": "632810"
  },
  {
    "text": "balancers and it has a knowledge of endpoints for which it's going to route",
    "start": "632810",
    "end": "638390"
  },
  {
    "text": "traffic so let's look at the configuration so on the matrix depending",
    "start": "638390",
    "end": "646940"
  },
  {
    "text": "on which kind of mesh you're using or whether you're not using a mesh at all are pretty straightforward to to",
    "start": "646940",
    "end": "653270"
  },
  {
    "text": "configure there's a couple of key things which I want to kind of point out and",
    "start": "653270",
    "end": "658610"
  },
  {
    "text": "really sort of bring to your attention and the first one is the ability to add custom tags so we're going to look at",
    "start": "658610",
    "end": "666920"
  },
  {
    "text": "this when we start looking at some of the metrics but the key thing is around observability you need to understand",
    "start": "666920",
    "end": "674150"
  },
  {
    "text": "from where a metric or a statistic comes from right and being able to add",
    "start": "674150",
    "end": "679930"
  },
  {
    "text": "additional bits of metadata to a metric is incredibly beneficial when you start",
    "start": "679930",
    "end": "685520"
  },
  {
    "text": "to build up your your dashboards and your alerts the other important and I",
    "start": "685520",
    "end": "690950"
  },
  {
    "text": "think absolutely essential configuration feature is this one here which is using",
    "start": "690950",
    "end": "698420"
  },
  {
    "text": "all default tags because if you look at the role metrics or the raw statistics",
    "start": "698420",
    "end": "705200"
  },
  {
    "text": "in terms of Envoy they can be incredibly long you'll have things like HTTP",
    "start": "705200",
    "end": "710750"
  },
  {
    "text": "listener 192 168 underscore 8080 dot",
    "start": "710750",
    "end": "716600"
  },
  {
    "text": "downstream underscore C X underscore blah blah blah blah right it becomes",
    "start": "716600",
    "end": "723980"
  },
  {
    "text": "incredibly difficult to manage those and build up dashboards when you have sort of dealing with something as complex whereas if you use this configuration",
    "start": "723980",
    "end": "731210"
  },
  {
    "text": "element what will happen is envoy is going to extract things like the the",
    "start": "731210",
    "end": "738560"
  },
  {
    "text": "listener name or the cluster and it's going to put it into a tag so it makes",
    "start": "738560",
    "end": "745000"
  },
  {
    "text": "selection of metrics much much easier",
    "start": "745000",
    "end": "749170"
  },
  {
    "text": "where we're going to kind of go with with metrics something again something important to to point out is that one",
    "start": "750070",
    "end": "758840"
  },
  {
    "text": "boy has Prometheus metrics it has a the ability to expose a Prometheus endpoint",
    "start": "758840",
    "end": "764210"
  },
  {
    "text": "metric same endpoint but there's a couple of caveats with it so you really",
    "start": "764210",
    "end": "771800"
  },
  {
    "text": "need histograms and they are only available in envoy 1.10 and the other",
    "start": "771800",
    "end": "776870"
  },
  {
    "text": "key thing which when I last checked the changelog I don't think it's a change in 110 is that the Prometheus metrics are",
    "start": "776870",
    "end": "784910"
  },
  {
    "text": "exposed on the admin endpoint now the",
    "start": "784910",
    "end": "790610"
  },
  {
    "text": "the problem with that is if you make the admin endpoint for envoy public then not",
    "start": "790610",
    "end": "798230"
  },
  {
    "text": "only can you get access to metrics but you can reconfigure it and that's kind of a bit of a security hole there's a",
    "start": "798230",
    "end": "804200"
  },
  {
    "text": "couple of ways around that you can sort of set an internal envoy route just to to kind of loop back and expose only",
    "start": "804200",
    "end": "810530"
  },
  {
    "text": "that specific Prometheus metrics point but I believe that that's going to be",
    "start": "810530",
    "end": "816680"
  },
  {
    "text": "either kind of modified or the admin endpoint in or vuoi is going to be an authenticated endpoint at some point so",
    "start": "816680",
    "end": "825230"
  },
  {
    "text": "using metrics so you've got a number of different ways in which you can kind of",
    "start": "825230",
    "end": "830900"
  },
  {
    "text": "emit metrics from on for you the simplest is stats D stats knees been",
    "start": "830900",
    "end": "837740"
  },
  {
    "text": "around for a long long time originally created by Etsy it's a push based metrics format which use the UDP",
    "start": "837740",
    "end": "844520"
  },
  {
    "text": "protocol the key thing around stats D is it doesn't support metadata and we're",
    "start": "844520",
    "end": "850490"
  },
  {
    "text": "going to kind of look at why that's important you'll find that whichever",
    "start": "850490",
    "end": "856490"
  },
  {
    "text": "sort of metric system you're using they tend to support these kind of four things of counters gauges timings and",
    "start": "856490",
    "end": "863630"
  },
  {
    "text": "and sets predominantly the first three of the most the most used and it kind of",
    "start": "863630",
    "end": "871790"
  },
  {
    "text": "looks like this so the the kind of the inherent problem there is because you don't support tags the entire name or",
    "start": "871790",
    "end": "880100"
  },
  {
    "text": "any metadata has to be in throw coded into the name of the metric itself that can make queering",
    "start": "880100",
    "end": "886430"
  },
  {
    "text": "filtering incredibly cumbersome that's a",
    "start": "886430",
    "end": "892100"
  },
  {
    "text": "known problem and it's a solved problem so data dog we've got a really really",
    "start": "892100",
    "end": "899930"
  },
  {
    "text": "good SATs based metrics platform introduced an extension to the stats D",
    "start": "899930",
    "end": "906020"
  },
  {
    "text": "protocol which is called dog stats T and again it's that same format of push",
    "start": "906020",
    "end": "911420"
  },
  {
    "text": "based UDP but dog stats T introduces tags so now what you can start doing is",
    "start": "911420",
    "end": "918950"
  },
  {
    "text": "you can add metadata so I can start building up you know my service or",
    "start": "918950",
    "end": "924680"
  },
  {
    "text": "service a dot my method called tags and I can start putting the service ID into",
    "start": "924680",
    "end": "931089"
  },
  {
    "text": "the metric and that's really important because again you need to be thinking about how do you filter how do you break",
    "start": "931089",
    "end": "938660"
  },
  {
    "text": "down information it's it's generally not an entire system of services which which",
    "start": "938660",
    "end": "945230"
  },
  {
    "text": "you're going to cause have problems it can be particular instances so you need to be able to think about how to filter",
    "start": "945230",
    "end": "952070"
  },
  {
    "text": "to a particular instance of a service and tagging is is essential Prometheus",
    "start": "952070",
    "end": "960010"
  },
  {
    "text": "great open source for eight CN CF project takes a slightly different",
    "start": "960010",
    "end": "965209"
  },
  {
    "text": "approach so rather than you pushing metrics to the service with Prometheus",
    "start": "965209",
    "end": "970670"
  },
  {
    "text": "what Prometheus will do it will pull the metrics from your your application and",
    "start": "970670",
    "end": "977270"
  },
  {
    "text": "that pull is done over HTTP and importantly it supports metadata so",
    "start": "977270",
    "end": "984140"
  },
  {
    "text": "again those key things there counters simple things like number of requests",
    "start": "984140",
    "end": "989600"
  },
  {
    "text": "want to see that break down over time gauges what is the current CPU valve",
    "start": "989600",
    "end": "995390"
  },
  {
    "text": "you know levels something which which is kind of a fixed value and in histograms his friends really really essential for",
    "start": "995390",
    "end": "1003100"
  },
  {
    "text": "being able to deal with timing data because again I don't want to be looking at averages I need to be looking at at",
    "start": "1003100",
    "end": "1008650"
  },
  {
    "text": "things like quartiles and percentiles inside of my my data",
    "start": "1008650",
    "end": "1015660"
  },
  {
    "text": "matrix format pretty simple straightforward again here's an example",
    "start": "1015840",
    "end": "1021610"
  },
  {
    "text": "of of a non-void metric and you can see here with envoy HTTP connection manager",
    "start": "1021610",
    "end": "1026890"
  },
  {
    "text": "prefix I've got the name of my connection manager now if I wasn't using",
    "start": "1026890",
    "end": "1035770"
  },
  {
    "text": "tags that would have been part of the name so that use tags is a really really",
    "start": "1035770",
    "end": "1042579"
  },
  {
    "text": "important feature so all those things when you're choosing a format you've",
    "start": "1042580",
    "end": "1048910"
  },
  {
    "text": "kind of got to sort of take into all of those things into account if you're using Prometheus which I guess a lot of",
    "start": "1048910",
    "end": "1056500"
  },
  {
    "text": "people do then you know you can kind of just go straight with with Prometheus",
    "start": "1056500",
    "end": "1061630"
  },
  {
    "text": "but think about how you're accessing those metrics and that you're accessing them in a secure way because of the",
    "start": "1061630",
    "end": "1067780"
  },
  {
    "text": "admin endpoint and envoy but ultimately you know you can also send data out to",
    "start": "1067780",
    "end": "1074080"
  },
  {
    "text": "dog stats D Zeta dog and things like that but you need to be thinking about metadata and metadata needs to be more",
    "start": "1074080",
    "end": "1081910"
  },
  {
    "text": "than just the service instance you potentially want to be able to capture things like the kubernetes know do you",
    "start": "1081910",
    "end": "1089290"
  },
  {
    "text": "want to be able to capture the pod name the deployment sort of ID as much",
    "start": "1089290",
    "end": "1095170"
  },
  {
    "text": "information as you can which will help you in the event that you need it and this is a kind of the key thing you kind",
    "start": "1095170",
    "end": "1102220"
  },
  {
    "text": "of got to capture a little bit more than you think you need right now because you never know what you need until you find",
    "start": "1102220",
    "end": "1109330"
  },
  {
    "text": "out you don't have it right okay so listener metrics",
    "start": "1109330",
    "end": "1116680"
  },
  {
    "text": "so things like downstream connections and I've just kind of pulled out some of the key key elements here that there are",
    "start": "1116680",
    "end": "1123940"
  },
  {
    "text": "a huge number but but these are some of the things that I like to to kind of monitor and again don't forget that",
    "start": "1123940",
    "end": "1133680"
  },
  {
    "text": "because I need to be able to get that metadata what I want to kind of build",
    "start": "1133680",
    "end": "1140530"
  },
  {
    "text": "that up into pruning Thea's query so I can look at something like the connection total so I'm gonna about that",
    "start": "1140530",
    "end": "1148540"
  },
  {
    "text": "a counter so I want to be able to see maybe a bar chart or a graph of of the",
    "start": "1148540",
    "end": "1155530"
  },
  {
    "text": "number of requests with with count as I tend to like to see those rather than a",
    "start": "1155530",
    "end": "1161260"
  },
  {
    "text": "rate I want to see the number of requests so I tend to use increase",
    "start": "1161260",
    "end": "1166510"
  },
  {
    "text": "instead of a rate there but I'm an either way breaking it into a thirty second bucket when you start to kind of",
    "start": "1166510",
    "end": "1174910"
  },
  {
    "text": "view that information you can kind of connections are they really that useful",
    "start": "1174910",
    "end": "1180670"
  },
  {
    "text": "I think so I mean the key thing you've got to remember where the connection is that",
    "start": "1180670",
    "end": "1186630"
  },
  {
    "text": "internally envoy is using connection pooling so you do not have a one-to-one",
    "start": "1186630",
    "end": "1192130"
  },
  {
    "text": "relationship between a connection and a request but connections are really interesting to monitor because",
    "start": "1192130",
    "end": "1199330"
  },
  {
    "text": "connections should be somewhat static because that connection pool is is being",
    "start": "1199330",
    "end": "1206560"
  },
  {
    "text": "maintained if you're seeing a lot of connections created and destroyed it can be an indication that potentially there",
    "start": "1206560",
    "end": "1212620"
  },
  {
    "text": "is something in the system which is not allowing persistent connections persistent connections gives you speed",
    "start": "1212620",
    "end": "1218830"
  },
  {
    "text": "that's why we kind of use connection pooling and decision connections there's",
    "start": "1218830",
    "end": "1225970"
  },
  {
    "text": "also some some key metrics around connections which i think are really good for alerts and the kind of the key",
    "start": "1225970",
    "end": "1232750"
  },
  {
    "text": "one which I've highlighted here is sss ssl fail verifying o cert so within the",
    "start": "1232750",
    "end": "1240970"
  },
  {
    "text": "the sort of the context of your service mash the world of your traffic should be using m TLS so it's using an encrypted",
    "start": "1240970",
    "end": "1248080"
  },
  {
    "text": "transport and it's using client sites if against to manage authentication if",
    "start": "1248080",
    "end": "1254980"
  },
  {
    "text": "you get a lot of errors around that then that could be a potential problem where",
    "start": "1254980",
    "end": "1260500"
  },
  {
    "text": "you need to think about the configuration of your service mash so that's a that's a kind of a good health",
    "start": "1260500",
    "end": "1266200"
  },
  {
    "text": "warning so what about requests so",
    "start": "1266200",
    "end": "1272620"
  },
  {
    "text": "requests you've got to be thinking about layer seven and again we're gonna break",
    "start": "1272620",
    "end": "1280000"
  },
  {
    "text": "up request into downstream and upstream and remember that difference a downstream is to me back to your your",
    "start": "1280000",
    "end": "1288130"
  },
  {
    "text": "end consumer the upstream is something which is happening internal in an envoy",
    "start": "1288130",
    "end": "1293550"
  },
  {
    "text": "so a downstream sorry an upstream failure does not necessarily result in a",
    "start": "1293550",
    "end": "1299530"
  },
  {
    "text": "downstream failure because of the retry patterns and the reliability but downstream is really important because",
    "start": "1299530",
    "end": "1305890"
  },
  {
    "text": "that's what your end user sees failures on the downstream means at your and user",
    "start": "1305890",
    "end": "1312940"
  },
  {
    "text": "is suffering again looking at some of those things we've got like downstream",
    "start": "1312940",
    "end": "1318730"
  },
  {
    "text": "requests underscore 1x ax + 2 xx + 3 X X stats tags it changes a lot of those",
    "start": "1318730",
    "end": "1325750"
  },
  {
    "text": "things we'll take a look at that in a second when we're using stats tags what",
    "start": "1325750",
    "end": "1334750"
  },
  {
    "text": "we're going to be able to do is use a metric like this so I'm using the downstream requests and because I've got",
    "start": "1334750",
    "end": "1342850"
  },
  {
    "text": "that enable stats tags on Envoy I've got requests underscore X ax is my metric",
    "start": "1342850",
    "end": "1348070"
  },
  {
    "text": "name rather than this great big list right so that gives me the capability",
    "start": "1348070",
    "end": "1355650"
  },
  {
    "text": "because it's extracted that response code as a tag a non-void understands the",
    "start": "1355650",
    "end": "1360730"
  },
  {
    "text": "HTTP protocol so it understands HTTP response codes and I can see there that",
    "start": "1360730",
    "end": "1366850"
  },
  {
    "text": "Envoy will inject the tag response code class and it allows me to build up a",
    "start": "1366850",
    "end": "1372900"
  },
  {
    "text": "differentiation so I can say well I'm only interested in errors or I'm only interested in things which are on not",
    "start": "1372900",
    "end": "1379150"
  },
  {
    "text": "errors because a 404 is in an hour probably not a 4 or 4 could be you know",
    "start": "1379150",
    "end": "1385490"
  },
  {
    "text": "it's not an internal error looking at",
    "start": "1385490",
    "end": "1391050"
  },
  {
    "text": "those kind of things on a chart I can actually plot them and I can stack them as a bar if I want and I can kind of seen the the various different response",
    "start": "1391050",
    "end": "1399480"
  },
  {
    "text": "codes or I can split them up but I've got that that flexibility to be able to do that now request errors this go hand",
    "start": "1399480",
    "end": "1410220"
  },
  {
    "text": "goes without saying but this is really really important to be monitoring request errors and you should",
    "start": "1410220",
    "end": "1417570"
  },
  {
    "text": "potentially have alerts as well around request errors I know it happens but it's something which is undesirable it's",
    "start": "1417570",
    "end": "1423180"
  },
  {
    "text": "your end user which is affected right especially on a downstream so for",
    "start": "1423180",
    "end": "1429120"
  },
  {
    "text": "example if I'm monitoring my request errors I start a new version of my pod and all of a sudden I go from zero",
    "start": "1429120",
    "end": "1436980"
  },
  {
    "text": "requests errors to a whole bunch of them now I can configure an alert on that which is looking at a percentile",
    "start": "1436980",
    "end": "1443910"
  },
  {
    "text": "increase that's giving me early warning that the new version that I've just deployed is not working as as requested",
    "start": "1443910",
    "end": "1453260"
  },
  {
    "text": "timing timing isn't is incredibly important we want to be looking at things like timing and timing what we",
    "start": "1453440",
    "end": "1461160"
  },
  {
    "text": "want to look at are things like the histograms because we want to be looking at say the 99th percentile so one",
    "start": "1461160",
    "end": "1468270"
  },
  {
    "text": "percent of the users are experiencing a time of this sort of level majority",
    "start": "1468270",
    "end": "1475020"
  },
  {
    "text": "Rowley you're going to be kind of looking at the 50 percentile so where the majority of you users are but you",
    "start": "1475020",
    "end": "1480600"
  },
  {
    "text": "want to be breaking those things down means are somewhat useful but sort of",
    "start": "1480600",
    "end": "1488670"
  },
  {
    "text": "histograms and looking at histograms is is so much more descriptive when you're looking at sort of the the the technical",
    "start": "1488670",
    "end": "1494760"
  },
  {
    "text": "performance of your of your system but what about G RPC so GRP sees HTTP write",
    "start": "1494760",
    "end": "1503400"
  },
  {
    "text": "HTTP - yeah but it's not well it's kinda",
    "start": "1503400",
    "end": "1509310"
  },
  {
    "text": "it uses it as the transport but Jia PC doesn't honor things like",
    "start": "1509310",
    "end": "1515590"
  },
  {
    "text": "HTTP status codes with ERP see what",
    "start": "1515590",
    "end": "1521800"
  },
  {
    "text": "you're doing is you're encoding the status code into the the protobuf response so when it comes to building",
    "start": "1521800",
    "end": "1528910"
  },
  {
    "text": "your matrix I could have a failed request which is an internal server error potentially in my service which is",
    "start": "1528910",
    "end": "1537340"
  },
  {
    "text": "still gonna get response as an HTTP 200 and luckily for us envoy understands the",
    "start": "1537340",
    "end": "1546220"
  },
  {
    "text": "G RPC protocol and envoy can actually decode both the method call and also the",
    "start": "1546220",
    "end": "1554800"
  },
  {
    "text": "response code so to enable that it does",
    "start": "1554800",
    "end": "1562240"
  },
  {
    "text": "have to be specifically enabled we use this feature which is an HTTP filter in",
    "start": "1562240",
    "end": "1568000"
  },
  {
    "text": "envoy and it's the HTTP one bridge filter now if you look at the",
    "start": "1568000",
    "end": "1573400"
  },
  {
    "text": "documentation the documentation is is pretty clear on what this thing does but",
    "start": "1573400",
    "end": "1578530"
  },
  {
    "text": "when it's easy to misunderstand so a lot of people look at the HTTP one bridge filter and say well it's a method of",
    "start": "1578530",
    "end": "1584800"
  },
  {
    "text": "translating an HTTP request into a G RPC request and it does that but it also",
    "start": "1584800",
    "end": "1591760"
  },
  {
    "text": "allows envoy to understand response codes the methods that the encoded data",
    "start": "1591760",
    "end": "1597880"
  },
  {
    "text": "inside of the protobuf and to report that into your statistics so I can use",
    "start": "1597880",
    "end": "1604300"
  },
  {
    "text": "things like this and again you can kind of see here I've got envoy closer to",
    "start": "1604300",
    "end": "1611140"
  },
  {
    "text": "your PC so this is a metric a statistic and then I've got the G RPC response",
    "start": "1611140",
    "end": "1617380"
  },
  {
    "text": "code so zero that's it that's the equivalent of an HTTP 200 I've got a response code five here this is kind of",
    "start": "1617380",
    "end": "1625600"
  },
  {
    "text": "the equivalent of a 404 and G RPC status codes don't directly map to HTTP status",
    "start": "1625600",
    "end": "1631750"
  },
  {
    "text": "codes but again building that up into to",
    "start": "1631750",
    "end": "1637840"
  },
  {
    "text": "a chart I can build something which is really really rich I can filter on that status code but I'm also seeing the",
    "start": "1637840",
    "end": "1644350"
  },
  {
    "text": "method call so I can actually isolate those independent requests which is really",
    "start": "1644350",
    "end": "1652100"
  },
  {
    "text": "really nice and useful to see I've just lumped them all into a single chart here but you can kind of break them up as you",
    "start": "1652100",
    "end": "1658700"
  },
  {
    "text": "as you need to errors again I'm using a different",
    "start": "1658700",
    "end": "1664760"
  },
  {
    "text": "metric butter in the same way as I'm dealing with HTTP requests I want to",
    "start": "1664760",
    "end": "1670400"
  },
  {
    "text": "deal with G RPC errors but again remember a G RPC request can complete",
    "start": "1670400",
    "end": "1677809"
  },
  {
    "text": "with a 200 but still be an error because of the the status code so closer metrics",
    "start": "1677809",
    "end": "1687669"
  },
  {
    "text": "cluster metrics were kind of getting into things like the upstream requests and upstream requests are internal in",
    "start": "1687669",
    "end": "1695539"
  },
  {
    "text": "Envoy and we need to differentiate between upstream and downstream because",
    "start": "1695539",
    "end": "1702200"
  },
  {
    "text": "as I mentioned if you're using a pattern like a retry then you could have multiple upstream failures but a",
    "start": "1702200",
    "end": "1708980"
  },
  {
    "text": "downstream success you need to monitor them them independently we can kind of",
    "start": "1708980",
    "end": "1716929"
  },
  {
    "text": "see here that we've we've got some some retries and we've got some arrows i've",
    "start": "1716929",
    "end": "1722990"
  },
  {
    "text": "applied the the retry policy so i can see that envoy again is is putting my my",
    "start": "1722990",
    "end": "1729799"
  },
  {
    "text": "retries there now these retries wouldn't result in a downstream error but they are manifesting themselves as an",
    "start": "1729799",
    "end": "1735860"
  },
  {
    "text": "upstream error timeouts we need to",
    "start": "1735860",
    "end": "1741590"
  },
  {
    "text": "monitor timeouts so a timeout in the system is a big red flag I tend to put",
    "start": "1741590",
    "end": "1749000"
  },
  {
    "text": "alerts on on timeouts and whether you have that go straight through the pages UT or not like that that's up to you but",
    "start": "1749000",
    "end": "1755840"
  },
  {
    "text": "I think a timeout was a big red flag and you need to be to be carefully sort of",
    "start": "1755840",
    "end": "1761510"
  },
  {
    "text": "monitoring this this information and if",
    "start": "1761510",
    "end": "1766909"
  },
  {
    "text": "you kind of implementing those reliability patterns you've got to be thinking about like monitoring outlier",
    "start": "1766909",
    "end": "1773419"
  },
  {
    "text": "injection each action so what does outlier rejection do and like as a hatten if envoy receives a number of",
    "start": "1773419",
    "end": "1780410"
  },
  {
    "text": "status codes from an endpoint which results in a failure it will remove that",
    "start": "1780410",
    "end": "1785630"
  },
  {
    "text": "endpoint from the cluster temporarily so here I'm monitoring those endpoints have",
    "start": "1785630",
    "end": "1791930"
  },
  {
    "text": "been ejected I might have one particular service which is a little bit sort of flaky but envoy will remove it",
    "start": "1791930",
    "end": "1799730"
  },
  {
    "text": "temporarily then you can see the gap because envoy is gonna try it again it's gonna give it time to recover but then",
    "start": "1799730",
    "end": "1806600"
  },
  {
    "text": "in the second block envoy said hey I've got errors again so it's gonna remove it",
    "start": "1806600",
    "end": "1811640"
  },
  {
    "text": "here for a longer period but again outlier injection this is something which I think should be both monitored",
    "start": "1811640",
    "end": "1817880"
  },
  {
    "text": "but but also configured for for alerting",
    "start": "1817880",
    "end": "1822580"
  },
  {
    "text": "let's see so the way that kind of the the authorization work so can two",
    "start": "1823030",
    "end": "1830120"
  },
  {
    "text": "components authentication and authorization authentication is done through the an TLS process client-side",
    "start": "1830120",
    "end": "1836990"
  },
  {
    "text": "certificates Luther ization is a facet of the control plane so it's an",
    "start": "1836990",
    "end": "1842540"
  },
  {
    "text": "additional layer it's I have this presented entity is it allowed to",
    "start": "1842540",
    "end": "1847550"
  },
  {
    "text": "connect to me this is a metric that you really want to be monitoring inside of",
    "start": "1847550",
    "end": "1853730"
  },
  {
    "text": "your control plane because you kind of gotta be thinking about why would you",
    "start": "1853730",
    "end": "1860000"
  },
  {
    "text": "get these failures you should never really get a lot C failures",
    "start": "1860000",
    "end": "1865660"
  },
  {
    "text": "there's a kind of a bunch of metrics again so the total responses but but",
    "start": "1865720",
    "end": "1870920"
  },
  {
    "text": "ultimately I'm kind of mainly interested in errors and I'm looking at okay so why",
    "start": "1870920",
    "end": "1877070"
  },
  {
    "text": "am i interested in those two things the first reason is that when I start a new",
    "start": "1877070",
    "end": "1884630"
  },
  {
    "text": "part I'm going to spawn a whole load of new connections so I should see a little spike in in authorizations but they're",
    "start": "1884630",
    "end": "1890780"
  },
  {
    "text": "cached if you see constant authorizations for a service then",
    "start": "1890780",
    "end": "1895820"
  },
  {
    "text": "there's something not behaving itself correctly authorization is going to slow",
    "start": "1895820",
    "end": "1901040"
  },
  {
    "text": "down your service so you don't want to see many authorization requests at any",
    "start": "1901040",
    "end": "1907190"
  },
  {
    "text": "period of time authorization failure this is a massive red flag so you've got",
    "start": "1907190",
    "end": "1913899"
  },
  {
    "text": "to be thinking about authorization failures why are you getting those there's two kind of predominant reasons",
    "start": "1913899",
    "end": "1919749"
  },
  {
    "text": "the first one is that you've got miss configuration so you haven't actually explicitly allowed service communication",
    "start": "1919749",
    "end": "1927460"
  },
  {
    "text": "between two services or it could be somebody who's probing around in your system and trying to do something that",
    "start": "1927460",
    "end": "1932830"
  },
  {
    "text": "they shouldn't an aunty tracing so",
    "start": "1932830",
    "end": "1939969"
  },
  {
    "text": "tracing is interesting I'm kind of growing in my appreciation for it as I",
    "start": "1939969",
    "end": "1947589"
  },
  {
    "text": "said it's something that's different to me and I just took this from the open tracing website but it's a nice description and the thing that's",
    "start": "1947589",
    "end": "1954580"
  },
  {
    "text": "interesting about tracing is when you're looking at a formants so the",
    "start": "1954580",
    "end": "1960429"
  },
  {
    "text": "configuration of tracing an envoy requires that you set up a cluster and you've got to set up the cluster because",
    "start": "1960429",
    "end": "1966700"
  },
  {
    "text": "envoy needs to know where it is going to send the the tracing data to the spans",
    "start": "1966700",
    "end": "1975119"
  },
  {
    "text": "your control plane should handle this for you but it's interesting to know I think and you also need tracing",
    "start": "1975119",
    "end": "1982029"
  },
  {
    "text": "configuration because there's a number of different drivers which envoy can use",
    "start": "1982029",
    "end": "1987249"
  },
  {
    "text": "it can use a zip contriver which is kind of open tracing there's some new stuff in 110 which allows pluggable open",
    "start": "1987249",
    "end": "1993940"
  },
  {
    "text": "tracing and it'll also support open census I believe you've got light step",
    "start": "1993940",
    "end": "2000080"
  },
  {
    "text": "but when you start to look at a tracing so here's an example of an HTTP POST I",
    "start": "2000109",
    "end": "2006239"
  },
  {
    "text": "can actually see visually the difference kind of the paths or the different sort",
    "start": "2006239",
    "end": "2014369"
  },
  {
    "text": "of network hops that have gone through my service so I've got internal from the in downstream to an upstream listener",
    "start": "2014369",
    "end": "2021059"
  },
  {
    "text": "and then I've got a G RPC service what you've kind of got to be reticent of",
    "start": "2021059",
    "end": "2027539"
  },
  {
    "text": "when you're thinking about tracing is that an external call all tracings have",
    "start": "2027539",
    "end": "2034619"
  },
  {
    "text": "a parent-child relationship and if this is an example for Zipkin but",
    "start": "2034619",
    "end": "2043110"
  },
  {
    "text": "you've got to be thinking about forwarding the headers because if you receive a if you make an internal call",
    "start": "2043110",
    "end": "2050610"
  },
  {
    "text": "from your code you've got to forward on spine IDs and the tracing IDs for it to",
    "start": "2050610",
    "end": "2056128"
  },
  {
    "text": "be registered as part of that that graph",
    "start": "2056129",
    "end": "2060859"
  },
  {
    "text": "it's pretty straightforward in HTTP G RPC again we've got to be thinking about",
    "start": "2061790",
    "end": "2067620"
  },
  {
    "text": "things differently we're not using the HTTP protocol in the same way but what we do with G RPC is we extract those",
    "start": "2067620",
    "end": "2074940"
  },
  {
    "text": "headers and I'm extracting them from an HTTP request and I'm adding them as",
    "start": "2074940",
    "end": "2080220"
  },
  {
    "text": "metadata to the upstream context the",
    "start": "2080220",
    "end": "2086360"
  },
  {
    "text": "open tracing in a G RPC there's some great frameworks which which work as middleware to help you do this but",
    "start": "2086360",
    "end": "2092700"
  },
  {
    "text": "essentially that's what they're doing they're taking the parent information and they're adding it to the child span",
    "start": "2092700",
    "end": "2098700"
  },
  {
    "text": "in order for that that nice chart to work lastly on logging why is logging",
    "start": "2098700",
    "end": "2104400"
  },
  {
    "text": "useful if you've got all of these wonderful metrics well when I was kind of putting together a presentation and",
    "start": "2104400",
    "end": "2111060"
  },
  {
    "text": "working on my demo I couldn't get my tracing to work and my metrics weren't telling me anything",
    "start": "2111060",
    "end": "2117030"
  },
  {
    "text": "but when I looked in my my logs I could clearly see that my logs I wasn't sending the spans so you've got",
    "start": "2117030",
    "end": "2124920"
  },
  {
    "text": "to think about all of those things Envoy is gonna give you some great information around access logs everything kit wants",
    "start": "2124920",
    "end": "2133290"
  },
  {
    "text": "all of the things I want to thank you so much for for listening to me today and",
    "start": "2133290",
    "end": "2138420"
  },
  {
    "text": "I'm gonna be around the conference if there's any questions you've got I'd be more than happy to to answer them thank",
    "start": "2138420",
    "end": "2144810"
  },
  {
    "text": "you so much oh yes",
    "start": "2144810",
    "end": "2154730"
  },
  {
    "text": "what's your drug limit away yeah so what",
    "start": "2157570",
    "end": "2172280"
  },
  {
    "text": "what's my preferred way to send tracing is it directed by the sto mixer so I",
    "start": "2172280",
    "end": "2179240"
  },
  {
    "text": "think it's still mixer and I correct me on this but I believe there's gonna be some changes because when you send",
    "start": "2179240",
    "end": "2185600"
  },
  {
    "text": "everything through with your mixer one of the performance bottlenecks in sto is is with mixer and I believe that there's",
    "start": "2185600",
    "end": "2193610"
  },
  {
    "text": "going to be a separation from mixer as a centralized component in an up and coming release so you can absolutely",
    "start": "2193610",
    "end": "2200380"
  },
  {
    "text": "send them direct to Zipkin or you oh sorry you send them via a collector",
    "start": "2200380",
    "end": "2206570"
  },
  {
    "text": "which acts as a proxy so I run generally a collector as a service so I've just",
    "start": "2206570",
    "end": "2213440"
  },
  {
    "text": "got like a deployment with a number of instances",
    "start": "2213440",
    "end": "2218019"
  },
  {
    "text": "but I think it's very much dependent on the direction of way seal goes around",
    "start": "2229790",
    "end": "2236450"
  },
  {
    "text": "using using mixer right now",
    "start": "2236450",
    "end": "2240460"
  },
  {
    "text": "oh sorry like a fire",
    "start": "2261950",
    "end": "2274088"
  },
  {
    "text": "we'll get there okay so these are the",
    "start": "2274869",
    "end": "2285490"
  },
  {
    "text": "sorry this is a little bit misleading I've I've actually named the G RPC",
    "start": "2285490",
    "end": "2291410"
  },
  {
    "text": "methods put Katan exists because the the service in question here is is actually",
    "start": "2291410",
    "end": "2299740"
  },
  {
    "text": "storing storing some data or it's retrieving yeah yeah sorry not HTTP yeah",
    "start": "2299740",
    "end": "2306950"
  },
  {
    "text": "yeah sorry in retrospect they those are terrible names but no they are they're actually - yup we see methods not not HTTP methods",
    "start": "2306950",
    "end": "2316569"
  },
  {
    "text": "thank you so much",
    "start": "2316569",
    "end": "2319960"
  }
]