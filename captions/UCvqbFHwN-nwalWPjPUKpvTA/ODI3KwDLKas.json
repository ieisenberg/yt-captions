[
  {
    "text": "okay Uh let's get started So first of all welcome to the talk and thank you",
    "start": "480",
    "end": "5520"
  },
  {
    "text": "for coming to our talk Uh today we are going to talk about cell Um it's it",
    "start": "5520",
    "end": "11920"
  },
  {
    "text": "supposedly is supposed to serve as a field guide to integrating cell in the Kubernetes codebase and I know I said",
    "start": "11920",
    "end": "18640"
  },
  {
    "text": "supposedly twice because this is the first one I'm giving for this CubeCon Uh",
    "start": "18640",
    "end": "23920"
  },
  {
    "text": "my name is Priyanka Sagu I work at Souza um as a Kubernetes integration engineer in the BCL department Souza Linux I'm",
    "start": "23920",
    "end": "31840"
  },
  {
    "text": "also one of the technical leads for Kubernetes SIG contributor experience and I've been part of other SIGs um in",
    "start": "31840",
    "end": "38640"
  },
  {
    "text": "other capacities for some time now",
    "start": "38640",
    "end": "43399"
  },
  {
    "text": "Yeah Uh hey everyone Uh again thanks for coming to our talk Uh my name is Sria Menitesh I work at digital ocean as a",
    "start": "44000",
    "end": "50399"
  },
  {
    "text": "senior software engineer and uh I'm also part of the uh release team for the past",
    "start": "50399",
    "end": "56320"
  },
  {
    "text": "uh I've been part of the release team from 129 and I'm also an active contributor in sig node",
    "start": "56320",
    "end": "64680"
  },
  {
    "text": "So um this is our agenda today and I really want to highlight our agenda is",
    "start": "66479",
    "end": "72400"
  },
  {
    "text": "driven by our about a one year um journey of us learning cell from like",
    "start": "72400",
    "end": "80080"
  },
  {
    "text": "very scratch we did not know anything about cell uh to now when we are working on a cell based care which is ke 495 So",
    "start": "80080",
    "end": "88080"
  },
  {
    "text": "we are driving our agenda on how uh from the time we started learning about cell to uh what we are doing today and um fun",
    "start": "88080",
    "end": "96799"
  },
  {
    "text": "fact this started in the last cubecon EU um itself So the first thing we'll cover is what",
    "start": "96799",
    "end": "103840"
  },
  {
    "text": "is cell um and then we'll see cell in kubernetes what what all work uh is",
    "start": "103840",
    "end": "110640"
  },
  {
    "text": "happening related to cell in kubernetes today we'll also do a very quick run",
    "start": "110640",
    "end": "116000"
  },
  {
    "text": "through how cell works just to build a mental model of how um actually cell",
    "start": "116000",
    "end": "121200"
  },
  {
    "text": "works and then once we have that mental model we'll see what kind of work has happened in cell from the very beginning",
    "start": "121200",
    "end": "128560"
  },
  {
    "text": "uh beginnings from its inception with the first ever cap that introduced cell to now what is happening uh in the cell",
    "start": "128560",
    "end": "135840"
  },
  {
    "text": "space um in Kubernetes project today Finally we'll end with um just a few um",
    "start": "135840",
    "end": "144080"
  },
  {
    "text": "overview of kept 4595 which is the ke that uh Shriram and I are working on It's about uh adding",
    "start": "144080",
    "end": "151360"
  },
  {
    "text": "cell support to CRDs one of the other areas in CRDs which is CRD additional",
    "start": "151360",
    "end": "157280"
  },
  {
    "text": "printer column So the with the agenda said I just want to highlight the last two are the are going to be the uh areas",
    "start": "157280",
    "end": "166239"
  },
  {
    "text": "that we are going to drive most in this talk Before we uh also get started there",
    "start": "166239",
    "end": "172800"
  },
  {
    "text": "are some acronyms we are going to use a lot during the uh uh slides Um so other than sell CRD",
    "start": "172800",
    "end": "182480"
  },
  {
    "text": "cap which are uh just the full forms and the full forms are written in front of them When we talk about sell upstream we",
    "start": "182480",
    "end": "190000"
  },
  {
    "text": "will mean the Google Cell Go package or the Google Cell Go repository So",
    "start": "190000",
    "end": "195280"
  },
  {
    "text": "whenever we are talking sell upstream we mean that with that if there is anything else you find during the slides that is",
    "start": "195280",
    "end": "202239"
  },
  {
    "text": "not covered in the acronyms you can just uh let us know We'll make sure we record",
    "start": "202239",
    "end": "207599"
  },
  {
    "text": "them in the handout notes or um we can discuss them So um let's get started",
    "start": "207599",
    "end": "213680"
  },
  {
    "text": "with what is cell by the verbos from the resources in the footnotes Um cell stands for common",
    "start": "213680",
    "end": "220720"
  },
  {
    "text": "expression language Uh originally it was developed by Google Um there is a lot of contribution happening Um cell is a",
    "start": "220720",
    "end": "228239"
  },
  {
    "text": "known touring complete language uh it's idle for lightweight expression has a C",
    "start": "228239",
    "end": "233280"
  },
  {
    "text": "like syntax but that is all the verbose from we picked up from the resources there in the footnote um we also don't",
    "start": "233280",
    "end": "240720"
  },
  {
    "text": "understand everything that's written here so to us cell uh when we talk about cell we mean some expression that looks",
    "start": "240720",
    "end": "247360"
  },
  {
    "text": "like this so the first one u where we are trying to figure out uh whether this",
    "start": "247360",
    "end": "253599"
  },
  {
    "text": "string alice is starting with a or in the next one which is where uh we're",
    "start": "253599",
    "end": "258959"
  },
  {
    "text": "checking If this array of tweets contain the messages tweet messages um um either",
    "start": "258959",
    "end": "267360"
  },
  {
    "text": "like 280 size or less than that So that is how we understand cell today with",
    "start": "267360",
    "end": "274560"
  },
  {
    "text": "these expressions Um but in Kubernetes you would find cell something like this",
    "start": "274560",
    "end": "280639"
  },
  {
    "text": "the expressions that are here and I'll read the very first one It says u this one is to validate that three fields",
    "start": "280639",
    "end": "287199"
  },
  {
    "text": "defining replicas are ordered appropriately So there's lot of them here um and more um there are different",
    "start": "287199",
    "end": "295680"
  },
  {
    "text": "libraries cell libraries within kubernetes uh the reax library the url libraries everything is available in",
    "start": "295680",
    "end": "301919"
  },
  {
    "text": "that footnote link that is how we understand cell today the these expressions we'll we'll go into them and",
    "start": "301919",
    "end": "310240"
  },
  {
    "text": "not just the things that we showed in the last screenshots that is not the uh",
    "start": "310240",
    "end": "316479"
  },
  {
    "text": "the only thing you can do with cell you can leverage cell uh to write your own",
    "start": "316479",
    "end": "322320"
  },
  {
    "text": "uh expressions and to serve your own use cases",
    "start": "322320",
    "end": "327400"
  },
  {
    "text": "So what uh how are we doing um cell in Kubernetes today we'll first like try to",
    "start": "327400",
    "end": "334880"
  },
  {
    "text": "learn about them through some stats Um Shir Yep Thanks Banga So we going to look at",
    "start": "334880",
    "end": "341280"
  },
  {
    "text": "some metrics to show how uh Cell is getting more popular in Kubernetes uh today So uh this is a screenshot of all",
    "start": "341280",
    "end": "348560"
  },
  {
    "text": "the uh Kubernetes enhancements proposals uh which you can find in the Kubernetes enhancements repo So if you search for",
    "start": "348560",
    "end": "355600"
  },
  {
    "text": "cell in the issues tab these are all the caps related to cell uh which we have today And out of all of these the one at",
    "start": "355600",
    "end": "362880"
  },
  {
    "text": "the very bottom is the one that introduced cell to kubernetes in the first uh place and we we'll go into more",
    "start": "362880",
    "end": "369759"
  },
  {
    "text": "detail uh into that But once that kept was uh like generally available now cell",
    "start": "369759",
    "end": "376240"
  },
  {
    "text": "is being used in a lot more places and there are a lot more places where we can introduce cell So looking at uh issues",
    "start": "376240",
    "end": "383840"
  },
  {
    "text": "in the Kubernetes Kubernetes repository uh there are like six pages of issues",
    "start": "383840",
    "end": "389680"
  },
  {
    "text": "which has got something to do with cell and the latest issue was opened 18 hours",
    "start": "389680",
    "end": "395280"
  },
  {
    "text": "ago which is when we took the screenshot which is like a couple of days back and we also have a channel in the Kubernetes",
    "start": "395280",
    "end": "403039"
  },
  {
    "text": "Slack workspace for cell and discussions related to both using cell and uh developing uh cell in Kubernetes So you",
    "start": "403039",
    "end": "411120"
  },
  {
    "text": "might be interested in that Also we wanted to give a shout out to a recent uh CV which was reported uh",
    "start": "411120",
    "end": "419360"
  },
  {
    "text": "which is something to do with git repo volumes and one of the suggested ways to",
    "start": "419360",
    "end": "424880"
  },
  {
    "text": "mitigate the C CV was to use validating admission policy So validating admission policy uses cell rules to uh write",
    "start": "424880",
    "end": "432160"
  },
  {
    "text": "custom uh validation rules like in instead of using a validation web hook",
    "start": "432160",
    "end": "437520"
  },
  {
    "text": "we are we can do that natively in the API server with validating admission policies So we wanted to give a shout",
    "start": "437520",
    "end": "443280"
  },
  {
    "text": "out to that Now we'll uh look at how cell works So we've been talking about",
    "start": "443280",
    "end": "449520"
  },
  {
    "text": "cell and we've been talking about cell expressions for some time now So we want to give a quick uh overview of what cell",
    "start": "449520",
    "end": "456400"
  },
  {
    "text": "is and how how it works in terms of code So this is the uh like a bird's eye view",
    "start": "456400",
    "end": "463280"
  },
  {
    "text": "of what happens uh when a cell expression is uh like evaluated So we first define an environment where we",
    "start": "463280",
    "end": "468880"
  },
  {
    "text": "have all the variables that we need to work with and we compile the cell",
    "start": "468880",
    "end": "474039"
  },
  {
    "text": "expression against uh this environment and we'll get an abstract syntax tree",
    "start": "474039",
    "end": "479599"
  },
  {
    "text": "and this abstract syntax tree can be converted to an executable program which we can eval like which we can execute uh",
    "start": "479599",
    "end": "487360"
  },
  {
    "text": "with all the inputs that we want to run the expression against So we we'll look at the example that we showed earlier",
    "start": "487360",
    "end": "493840"
  },
  {
    "text": "and we'll uh like actually go through all the code that does this So I'm I'm going to be writing this in uh Go So",
    "start": "493840",
    "end": "501280"
  },
  {
    "text": "first what we do is we'll import the Google Cell Go package Once we do that we have access",
    "start": "501280",
    "end": "508240"
  },
  {
    "text": "to the cell uh package where we can which we can use to uh create a new environment And here I'm uh defining a",
    "start": "508240",
    "end": "515599"
  },
  {
    "text": "new variable called name which is of type string So once the environment is created we can compile our expression in",
    "start": "515599",
    "end": "522399"
  },
  {
    "text": "this environment and uh which is what we are doing with env.compile and we pass the cell expression name starts with uh",
    "start": "522399",
    "end": "529040"
  },
  {
    "text": "the character a and this compile call would compile the cell expression and",
    "start": "529040",
    "end": "535040"
  },
  {
    "text": "return an a or it would return a list of issues if the compilation uh went wrong",
    "start": "535040",
    "end": "540800"
  },
  {
    "text": "So env.compile is actually syntactical sugar for env.parse and env.che check",
    "start": "540800",
    "end": "546160"
  },
  {
    "text": "which are two different functions which are available in the package and what we do in each of these steps is env.parse",
    "start": "546160",
    "end": "553279"
  },
  {
    "text": "would check if the actual cell expression is like uh of right syntax",
    "start": "553279",
    "end": "559120"
  },
  {
    "text": "and env.e would do type checking So if you try to do uh like if you try to call",
    "start": "559120",
    "end": "564800"
  },
  {
    "text": "a macro function which is not applicable to a string type then it would uh throw an error uh it would be uh throw an",
    "start": "564800",
    "end": "571279"
  },
  {
    "text": "error at that check stage So you can write these functions individually but",
    "start": "571279",
    "end": "576360"
  },
  {
    "text": "env.compile just does that for you together and uh it's more easier once we",
    "start": "576360",
    "end": "582399"
  },
  {
    "text": "get the a we can convert it into an uh executable program with env.program and",
    "start": "582399",
    "end": "587440"
  },
  {
    "text": "we'll get this uh program uh value like the program itself which we can then uh",
    "start": "587440",
    "end": "593600"
  },
  {
    "text": "call like we can call program.eal and we'll pass the inputs So in this case the variables that we've defined for",
    "start": "593600",
    "end": "600720"
  },
  {
    "text": "this environment is just a string variable called name So we will pass that oops we'll pass the name uh in the",
    "start": "600720",
    "end": "609040"
  },
  {
    "text": "uh program.al call and the cell expression would be executed against our",
    "start": "609040",
    "end": "614480"
  },
  {
    "text": "input and in this case since the name is Alice uh which starts with a we get the",
    "start": "614480",
    "end": "620959"
  },
  {
    "text": "output of true Yeah Now we'll see how uh Kubernetes is used in uh so cell is used",
    "start": "620959",
    "end": "628240"
  },
  {
    "text": "in Kubernetes today Yeah So uh this is the part where I mentioned during the",
    "start": "628240",
    "end": "633279"
  },
  {
    "text": "agenda we want to see how did cell evolve from the very uh beginnings when",
    "start": "633279",
    "end": "639360"
  },
  {
    "text": "cell was integrated for the first time in Kubernetes to now what we have what what is happening related to cell in",
    "start": "639360",
    "end": "645120"
  },
  {
    "text": "kubernetes today So Cell was u introduced to Kubernetes almost 10",
    "start": "645120",
    "end": "650240"
  },
  {
    "text": "releases back It will be exactly 10 releases back in April with 133 Uh so",
    "start": "650240",
    "end": "655440"
  },
  {
    "text": "Cell was introduced um in Kubernetes 123 with this um cap number",
    "start": "655440",
    "end": "661480"
  },
  {
    "text": "2876 Um what this ke did was um adding",
    "start": "661480",
    "end": "667399"
  },
  {
    "text": "cellbased validation for CRD schema and you can read more about that in the",
    "start": "667399",
    "end": "673600"
  },
  {
    "text": "kubernetes.io IO blog below and there is also a link to the cap itself that can",
    "start": "673600",
    "end": "679040"
  },
  {
    "text": "give you the entire um uh documentation about what that uh kept",
    "start": "679040",
    "end": "687399"
  },
  {
    "text": "2876 brought into the cell But here is like just a gist of what what really",
    "start": "687399",
    "end": "692640"
  },
  {
    "text": "happened So the first thing that happened uh during Kubernetes 123 was uh",
    "start": "692640",
    "end": "700000"
  },
  {
    "text": "people who worked on 2876 kept brought the entire logic of Selgo uh from the",
    "start": "700000",
    "end": "706560"
  },
  {
    "text": "Google repository within Kubernetes but this time it was it was housed in",
    "start": "706560",
    "end": "712040"
  },
  {
    "text": "CRDs So we brought over the code uh the intention was we wanted to make cell",
    "start": "712040",
    "end": "718000"
  },
  {
    "text": "work with the Kubernetes resources or Kubernetes objects So we brought those uh wired off code first and then in this",
    "start": "718000",
    "end": "726000"
  },
  {
    "text": "is another PR this is the implementation PR for kept 2876 the one u comment",
    "start": "726000",
    "end": "732639"
  },
  {
    "text": "that's highlighted there this is where we started using the cell code we uh we",
    "start": "732639",
    "end": "739200"
  },
  {
    "text": "imported from the selgo with CRDs so what what really happened in this commit",
    "start": "739200",
    "end": "744240"
  },
  {
    "text": "was what explained in the slides before we started we created the environment uh",
    "start": "744240",
    "end": "749920"
  },
  {
    "text": "to work with cell we we wrote our compile and parse functions and then we started using those to um compile our",
    "start": "749920",
    "end": "757920"
  },
  {
    "text": "own u custom expressions but what was happening this time was cell was able to",
    "start": "757920",
    "end": "764079"
  },
  {
    "text": "understand kubernetes objects so was able to understand our resources that we",
    "start": "764079",
    "end": "769440"
  },
  {
    "text": "summent using cubectl cell knew uh understood those types and we first did",
    "start": "769440",
    "end": "776079"
  },
  {
    "text": "that under um gates what was the use case here was um so I think I can",
    "start": "776079",
    "end": "783279"
  },
  {
    "text": "explain that in this slide So this is like a snippet of CRDs and you can see",
    "start": "783279",
    "end": "788480"
  },
  {
    "text": "under the spec uh this field called X Kubernetes validations was added as part",
    "start": "788480",
    "end": "794320"
  },
  {
    "text": "of the gap 2876 where you can write some validation rule with cell and if whenever we are",
    "start": "794320",
    "end": "802079"
  },
  {
    "text": "submitting the CRD.yamel YAML to API server Um if this validation rules does",
    "start": "802079",
    "end": "807920"
  },
  {
    "text": "not um validate then the CRD won't be able to um create it won't be created",
    "start": "807920",
    "end": "815519"
  },
  {
    "text": "and we'll get that message back as an error So this is that cell in action for the first time in CRDs",
    "start": "815519",
    "end": "823079"
  },
  {
    "text": "Um but this was added like first to Kubernetes",
    "start": "823079",
    "end": "829000"
  },
  {
    "text": "CRDs I think this is 2022 Now this PR then made uh cell available beyond CRD",
    "start": "829000",
    "end": "836959"
  },
  {
    "text": "So we moved from just keeping housing the CRD logic or CRD code that we were",
    "start": "836959",
    "end": "842240"
  },
  {
    "text": "maintaining for Kubernetes from CRDs to API server So um this was the very first",
    "start": "842240",
    "end": "848079"
  },
  {
    "text": "step to extend cell beyond CRD and what happened then was since cell was the",
    "start": "848079",
    "end": "853839"
  },
  {
    "text": "first class citizen cube API server after this PR u more and more cell-based",
    "start": "853839",
    "end": "859600"
  },
  {
    "text": "gaps started to come up in other areas of kubernetes itself So uh then we had",
    "start": "859600",
    "end": "865440"
  },
  {
    "text": "more caps like ke 3 48 cell for admission control Here we can see um",
    "start": "865440",
    "end": "871120"
  },
  {
    "text": "cell was then later used uh for creating this new kind validating admission",
    "start": "871120",
    "end": "876160"
  },
  {
    "text": "policy This is like an alternative to the traditional uh web hook um admission",
    "start": "876160",
    "end": "881760"
  },
  {
    "text": "web hook counterparts and also now we recently I think two releases back or something we had mutating uh admission",
    "start": "881760",
    "end": "887839"
  },
  {
    "text": "policies also based on the cell So where we use um cell expressions to check",
    "start": "887839",
    "end": "893440"
  },
  {
    "text": "whether something um yeah so here we are checking whether um some things are",
    "start": "893440",
    "end": "900160"
  },
  {
    "text": "missing and if they are missing then we are like mutating them we're creating resources using that mutation patch type",
    "start": "900160",
    "end": "908160"
  },
  {
    "text": "below So and that happened with kept 3962",
    "start": "908160",
    "end": "913600"
  },
  {
    "text": "Not only we build up um features based on cell eventually cell was also being u",
    "start": "913600",
    "end": "921120"
  },
  {
    "text": "developed or like extended within kubernetes So cell got new custom decel types or we can say cell types like we",
    "start": "921120",
    "end": "929440"
  },
  {
    "text": "were importing string type or in type or the u we can understand them as data",
    "start": "929440",
    "end": "934959"
  },
  {
    "text": "structures from the cell itself but now we are able to define our own uh kubernetes specific types for cell So we",
    "start": "934959",
    "end": "943440"
  },
  {
    "text": "now have u cell decel types for IPS or ciders or",
    "start": "943440",
    "end": "948720"
  },
  {
    "text": "things that are being used in Kubernetes on a day-to-day basis So there are um two links here The first one where you",
    "start": "948720",
    "end": "956079"
  },
  {
    "text": "can uh is a is a directory under API server where you can find out how uh the",
    "start": "956079",
    "end": "962720"
  },
  {
    "text": "IPS or ciders or quantities formats and URL cell types are defined And then the",
    "start": "962720",
    "end": "968000"
  },
  {
    "text": "other one is another sim word type that was defined as part of the DR",
    "start": "968000",
    "end": "975079"
  },
  {
    "text": "cap I think this is a screenshot of the same thing And then um so that was that is",
    "start": "975079",
    "end": "983600"
  },
  {
    "text": "what is happening about cell There is just these things are just recorded in caps or issues or messages There are lot",
    "start": "983600",
    "end": "990480"
  },
  {
    "text": "and lot of requirement uh that are coming from the community as well be forward to add it here but there is also",
    "start": "990480",
    "end": "997040"
  },
  {
    "text": "a sell wish list um issue in Kubernetes Kubernetes repo we'll try to get a issue",
    "start": "997040",
    "end": "1002480"
  },
  {
    "text": "link to that so if you have like more use cases to um cell based solutions",
    "start": "1002480",
    "end": "1009120"
  },
  {
    "text": "people are like now wanting them to be implemented in kubernetes space itself so there is a uh kk issue to get",
    "start": "1009120",
    "end": "1017440"
  },
  {
    "text": "community feedback okay so with that we can now move to the ke 459 itself sell for CD",
    "start": "1017440",
    "end": "1024959"
  },
  {
    "text": "additional printer column that is the ke that we uh started working on after we",
    "start": "1024959",
    "end": "1030240"
  },
  {
    "text": "learned about cell and we read a lot of cell based work happening in different",
    "start": "1030240",
    "end": "1035678"
  },
  {
    "text": "areas of Kubernetes and we eventually tried to make uh you make use of cell in",
    "start": "1035679",
    "end": "1041678"
  },
  {
    "text": "um CRD's different areas Yeah",
    "start": "1041679",
    "end": "1046519"
  },
  {
    "text": "Yep So now that we've established that cell is an upcoming uh area in Kubernetes uh we want to talk",
    "start": "1046720",
    "end": "1056000"
  },
  {
    "text": "about what we are trying to do with cell and uh yeah so we are trying to add cell",
    "start": "1056000",
    "end": "1061360"
  },
  {
    "text": "to uh additional printer columns in custom resource definitions and we'll try to explain what uh we are like the",
    "start": "1061360",
    "end": "1067760"
  },
  {
    "text": "need for why we want to do this So today if you want to create a custom resource",
    "start": "1067760",
    "end": "1072799"
  },
  {
    "text": "definition with uh if you want to create a custom",
    "start": "1072799",
    "end": "1077919"
  },
  {
    "text": "resource definition where you write like where you define uh additional printer columns which would be printed when you",
    "start": "1077919",
    "end": "1083360"
  },
  {
    "text": "query for your custom resource uh using cube cut like my CRD my resource like if",
    "start": "1083360",
    "end": "1088559"
  },
  {
    "text": "you if you do that these are the uh this is the only way with which you",
    "start": "1088559",
    "end": "1094160"
  },
  {
    "text": "can define these custom columns today for CRDs and the only way which you and define these columns are using JSON",
    "start": "1094160",
    "end": "1101840"
  },
  {
    "text": "path So the earlier slide this has the output of cube explain additional",
    "start": "1101840",
    "end": "1107760"
  },
  {
    "text": "printer columns and we can see all the fields that are there in the API and the JSON path is the only way with which we",
    "start": "1107760",
    "end": "1114080"
  },
  {
    "text": "can uh define what data we want to show as part of uh the custom resources So",
    "start": "1114080",
    "end": "1121520"
  },
  {
    "text": "JSON path works well for querying data But if you want to do like complex",
    "start": "1121520",
    "end": "1126559"
  },
  {
    "text": "querying like if you want to have a conditional statement like if a particular field is present then show",
    "start": "1126559",
    "end": "1131840"
  },
  {
    "text": "this value or if it is not present then show something else or like if you want to work with uh data that is uh like more complex",
    "start": "1131840",
    "end": "1140400"
  },
  {
    "text": "such as arrays or a list of IP addresses or things like that you you are not able to do it easily with JSON path today So",
    "start": "1140400",
    "end": "1146320"
  },
  {
    "text": "there are a lot of issues which have been created in the past where uh this limitation was addressed and people were",
    "start": "1146320",
    "end": "1153919"
  },
  {
    "text": "uh discussing ways to extend JSON path Like on the right hand side uh somebody",
    "start": "1153919",
    "end": "1160240"
  },
  {
    "text": "wants to use the timestamp uh field to create uh to calculate the duration which we are not able to do with uh JSON",
    "start": "1160240",
    "end": "1167280"
  },
  {
    "text": "path today uh we have a bunch of these examples of uh issues where people are",
    "start": "1167280",
    "end": "1173600"
  },
  {
    "text": "facing limitations with JSON path and uh this is an entire list of all the issues that we've come across uh where people",
    "start": "1173600",
    "end": "1180559"
  },
  {
    "text": "want support for conditionals or support for working with arrays and so on So now given that this is not possible with uh",
    "start": "1180559",
    "end": "1187360"
  },
  {
    "text": "JSON path people have also tried to uh solve this with JSON path like adding",
    "start": "1187360",
    "end": "1193919"
  },
  {
    "text": "array support to JSON path and things like that But uh that even though work",
    "start": "1193919",
    "end": "1199360"
  },
  {
    "text": "has happened in that area that has not uh been merged yet because as mentioned by Nikita on this command uh it is not",
    "start": "1199360",
    "end": "1207919"
  },
  {
    "text": "uh given the complex nature of what we are trying to do it is not like safe to extend JSON path to be able to uh do all",
    "start": "1207919",
    "end": "1215600"
  },
  {
    "text": "of this So what we are trying to propose uh what we are proposing with kept 4595",
    "start": "1215600",
    "end": "1220960"
  },
  {
    "text": "is that we add a new uh field along with JSON path which would be mutually",
    "start": "1220960",
    "end": "1226720"
  },
  {
    "text": "exclusive So you can have additional printer columns define which define the role using JSON path or an expression",
    "start": "1226720",
    "end": "1234320"
  },
  {
    "text": "and uh the cell expression would use the CRD schema as the input and you can",
    "start": "1234320",
    "end": "1240159"
  },
  {
    "text": "write expressions to write your own custom uh additional printer columns So the expression would be compiled and run",
    "start": "1240159",
    "end": "1246320"
  },
  {
    "text": "in the cube API server So all of that would uh run natively similar to how JSON path is executed in the API server",
    "start": "1246320",
    "end": "1252480"
  },
  {
    "text": "today So this is what the uh explain output of uh like additional",
    "start": "1252480",
    "end": "1259360"
  },
  {
    "text": "printer column would look like after we've implemented this So we have a new expression field which is similar to",
    "start": "1259360",
    "end": "1264480"
  },
  {
    "text": "JSON path where you can define a cell expression And this is our local build of Kubernetes uh where we've added the",
    "start": "1264480",
    "end": "1271440"
  },
  {
    "text": "support So now I'll try to give a quick demo of what we have So I have a CRD uh",
    "start": "1271440",
    "end": "1280559"
  },
  {
    "text": "I have a simple CRD called shirt which has uh like two fields which has a uh",
    "start": "1280559",
    "end": "1288320"
  },
  {
    "text": "like a color field which is of string type and we also have a sizes array which is an array of integers and",
    "start": "1288320",
    "end": "1295919"
  },
  {
    "text": "whenever I want whenever I print these shirts I want to do complex expressions based on these columns So I have these",
    "start": "1295919",
    "end": "1303280"
  },
  {
    "text": "three additional printer columns defined The first one is a traditional uh additional printer column which is defined using JSON path and we are uh",
    "start": "1303280",
    "end": "1311600"
  },
  {
    "text": "this should be color uh yeah we are querying the data directly using uh JSON path and we are",
    "start": "1311600",
    "end": "1318559"
  },
  {
    "text": "printing the color of the shirt but I want to do complex uh since the second",
    "start": "1318559",
    "end": "1323840"
  },
  {
    "text": "uh field of sizes is an integer array I want to be able to do complex operations",
    "start": "1323840",
    "end": "1328880"
  },
  {
    "text": "So in the second uh additional printer column what we are doing is we are",
    "start": "1328880",
    "end": "1333919"
  },
  {
    "text": "checking if spy uh sizes is present and if it is present then we print that",
    "start": "1333919",
    "end": "1339919"
  },
  {
    "text": "array or if it is not present we print an empty array and this expression field",
    "start": "1339919",
    "end": "1346159"
  },
  {
    "text": "the value that it takes this is a cell expression and we also have another uh additional printer column which checks",
    "start": "1346159",
    "end": "1352240"
  },
  {
    "text": "if the sizes array is present or not and if it is present then we print a value of true or false Uh so this sort of",
    "start": "1352240",
    "end": "1360880"
  },
  {
    "text": "complex operations are not possible with JSON path today but we are uh trying to do this with cell and for my example uh",
    "start": "1360880",
    "end": "1368159"
  },
  {
    "text": "these are the three custom resources that I'm applying The first shirt has a",
    "start": "1368159",
    "end": "1373360"
  },
  {
    "text": "sizes array and the color of red The second one also has a sizes array but in the third shirt we don't have a sizes",
    "start": "1373360",
    "end": "1379600"
  },
  {
    "text": "array because that is an optional field So once we apply the CRD and once we",
    "start": "1379600",
    "end": "1386720"
  },
  {
    "text": "apply all the custom resources if I query for cube cuttle get shirt I can",
    "start": "1386720",
    "end": "1392480"
  },
  {
    "text": "see that it prints all the columns with all the values that we want So under the",
    "start": "1392480",
    "end": "1397520"
  },
  {
    "text": "hood what is happening is that uh when I apply the CRD the cell expressions that",
    "start": "1397520",
    "end": "1402559"
  },
  {
    "text": "I've defined in the uh additional printer columns they'll be compiled and uh when I apply the custom",
    "start": "1402559",
    "end": "1409159"
  },
  {
    "text": "resource the custom resources are applied but when I query for the uh",
    "start": "1409159",
    "end": "1415039"
  },
  {
    "text": "custom resources there is a table converter go file which actually queries the data from the API and uh generates",
    "start": "1415039",
    "end": "1421200"
  },
  {
    "text": "this table So whatever we are seeing here is generated by that particular table converter.go CO file and there the",
    "start": "1421200",
    "end": "1427919"
  },
  {
    "text": "cell expressions would be evaluated against the CRD schema and we would be",
    "start": "1427919",
    "end": "1433760"
  },
  {
    "text": "uh like this expression would evaluate for each particular custom resource So in the third custom resource since we",
    "start": "1433760",
    "end": "1439440"
  },
  {
    "text": "did not have the sizes array we have a value of false because uh has",
    "start": "1439440",
    "end": "1444720"
  },
  {
    "text": "self.spec.ts sizes evaluates to false and uh in the second column that we have",
    "start": "1444720",
    "end": "1451360"
  },
  {
    "text": "here since the third item does not have uh sizes array if we are trying to do",
    "start": "1451360",
    "end": "1457360"
  },
  {
    "text": "with do this with JSON path it would have been empty but now we can have like default like support for adding default",
    "start": "1457360",
    "end": "1462679"
  },
  {
    "text": "values and I also want to show a different example so I'm adding a new",
    "start": "1462679",
    "end": "1468880"
  },
  {
    "text": "additional printer column where the expression checks if the color of the shirt is blue and if If it is blue then",
    "start": "1468880",
    "end": "1476080"
  },
  {
    "text": "it would return a value of true or false and the column is named is color blue So once I apply this custom uh once I apply",
    "start": "1476080",
    "end": "1483760"
  },
  {
    "text": "the change to the custom resource definition again Now if I query for the shirt again I can see that",
    "start": "1483760",
    "end": "1489640"
  },
  {
    "text": "uh there is a additional like a fourth column that we have which uh displays",
    "start": "1489640",
    "end": "1497159"
  },
  {
    "text": "the which displays the uh output of this particular cell uh expression based on",
    "start": "1497159",
    "end": "1504000"
  },
  {
    "text": "the color of the shirt So only the third shirt has the value of true since the",
    "start": "1504000",
    "end": "1509440"
  },
  {
    "text": "shirt of that color is blue and all of the others are false So this is a quick example of uh like all these cell",
    "start": "1509440",
    "end": "1515200"
  },
  {
    "text": "expressions are kind of basic but what we want to uh show here is that we have",
    "start": "1515200",
    "end": "1520640"
  },
  {
    "text": "extended additional printer columns to work with cell And now like you can write whatever cell",
    "start": "1520640",
    "end": "1527279"
  },
  {
    "text": "expression is within the limit of your imagination and uh within the cell cost",
    "start": "1527279",
    "end": "1533039"
  },
  {
    "text": "uh and do things which were not possible previously So all the issues that were",
    "start": "1533039",
    "end": "1538960"
  },
  {
    "text": "uh like discussed in the in these slides So in this particular column the the one",
    "start": "1538960",
    "end": "1546799"
  },
  {
    "text": "with the time stamp we can work uh we can use the cell type for time stamps to",
    "start": "1546799",
    "end": "1552000"
  },
  {
    "text": "calculate the duration and uh arrays obviously work You already seen that and",
    "start": "1552000",
    "end": "1557279"
  },
  {
    "text": "uh yeah this one these issues talk about using conditional expressions to uh like",
    "start": "1557279",
    "end": "1562640"
  },
  {
    "text": "evaluate uh additional printer columns to one value or the other which is also possible with",
    "start": "1562640",
    "end": "1569679"
  },
  {
    "text": "cell Yeah So these are the uh screenshots of the demo that I just",
    "start": "1571880",
    "end": "1577360"
  },
  {
    "text": "showed So we can see how we have the open API schema and how the cell expression is executed against this as",
    "start": "1577360",
    "end": "1584480"
  },
  {
    "text": "the environment and uh yeah we can have like multiple additional printer columns which has either JSON path which has the",
    "start": "1584480",
    "end": "1591600"
  },
  {
    "text": "rule defined with either JSON path or the cell expression and this is the output",
    "start": "1591600",
    "end": "1598720"
  },
  {
    "text": "Um so just wrapping up because we covered about we learned cell but what resources we found useful when we were",
    "start": "1598720",
    "end": "1605360"
  },
  {
    "text": "learning cell So we tried to create a list of what we found useful and",
    "start": "1605360",
    "end": "1610480"
  },
  {
    "text": "actually I remembered that I also included the wish list So the first one is the lang markdown document This is",
    "start": "1610480",
    "end": "1617200"
  },
  {
    "text": "where what is available with the cell upstream itself or this document is actually like a running document It",
    "start": "1617200",
    "end": "1623200"
  },
  {
    "text": "keeps getting updated whenever there are more things being developed or added in the upstream cell go So that's the cell",
    "start": "1623200",
    "end": "1629520"
  },
  {
    "text": "language definition itself found it very useful to understand what cell was",
    "start": "1629520",
    "end": "1634799"
  },
  {
    "text": "bringing to the table itself Um we found the cell go code lab that was um our",
    "start": "1634799",
    "end": "1644240"
  },
  {
    "text": "first time understanding how this cell integrations happen in gospace the the",
    "start": "1644240",
    "end": "1650400"
  },
  {
    "text": "entire code that Shriram showed from creating the cell environment to",
    "start": "1650400",
    "end": "1655640"
  },
  {
    "text": "um using cell compile functions for compiling and parsing and type checking",
    "start": "1655640",
    "end": "1661760"
  },
  {
    "text": "etc etc eventually to evaluate your own cell expression all that we learned while going through these cell go labs",
    "start": "1661760",
    "end": "1668640"
  },
  {
    "text": "so I think it's about 10 10 or seven seven to 10 labs uh super useful there's",
    "start": "1668640",
    "end": "1674320"
  },
  {
    "text": "also this online cell playground if you have your own expressions you can try running them there and the the last",
    "start": "1674320",
    "end": "1681440"
  },
  {
    "text": "second one wish list of cell that is uh a kubernetes issue that's created by I",
    "start": "1681440",
    "end": "1688080"
  },
  {
    "text": "think it's it's being run by say API machinery folks so there is a lot of",
    "start": "1688080",
    "end": "1693120"
  },
  {
    "text": "discussion happening on what is available today what is not available with the cells um or what is not",
    "start": "1693120",
    "end": "1699360"
  },
  {
    "text": "possible or supported with cell uh today in kubernetes but good to have etc etc",
    "start": "1699360",
    "end": "1705919"
  },
  {
    "text": "so if you have more such use cases You can go and write them as comments in the",
    "start": "1705919",
    "end": "1712080"
  },
  {
    "text": "wish list itself or if you want to just have a chat with people who are working on cell based features within Kubernetes",
    "start": "1712080",
    "end": "1720159"
  },
  {
    "text": "space So the API uh the the Slack channel is SIG API machinery cell on",
    "start": "1720159",
    "end": "1725679"
  },
  {
    "text": "Kubernetes Slack which is slack.karest.io and we do want to give a",
    "start": "1725679",
    "end": "1731200"
  },
  {
    "text": "big huge shout out to Alex Sinsky because this talk would not have been possible without Alex Uh Alex was the",
    "start": "1731200",
    "end": "1738960"
  },
  {
    "text": "first person I think uh Shiram you met during CubeCon Paris uh in during the",
    "start": "1738960",
    "end": "1744000"
  },
  {
    "text": "SIG SIG meet and greet Yeah So Alex was very helpful uh in helping us build up",
    "start": "1744000",
    "end": "1751039"
  },
  {
    "text": "the foundational our foundational learning for cell So the very first few months he helped us give us some",
    "start": "1751039",
    "end": "1757200"
  },
  {
    "text": "sessions and then that's how we got started So also not just that Alex has contributed to a lot of other cell areas",
    "start": "1757200",
    "end": "1763919"
  },
  {
    "text": "within Kubernetes So uh we took one and the link to that one is below in the",
    "start": "1763919",
    "end": "1769520"
  },
  {
    "text": "footer notes With that um our handout notes for this slide is available on",
    "start": "1769520",
    "end": "1774559"
  },
  {
    "text": "from that QR code and if you want to contact us um these are our handles on",
    "start": "1774559",
    "end": "1780840"
  },
  {
    "text": "slack.cubernetes.io or those are the emails So with that thank you so much um",
    "start": "1780840",
    "end": "1786799"
  },
  {
    "text": "and I'll keep it here for the QR code Okay [Applause]",
    "start": "1786799",
    "end": "1796159"
  },
  {
    "text": "And also we can take questions We can try our best to answer them",
    "start": "1796159",
    "end": "1802000"
  },
  {
    "text": "Yeah So one thank you I am one of the many failed attempts to get the list",
    "start": "1804520",
    "end": "1810640"
  },
  {
    "text": "working before you So thank you I'm so excited about this Uh one one request uh",
    "start": "1810640",
    "end": "1817840"
  },
  {
    "text": "it would be incredibly one of one of the pain points for us is we could kind of make an array work before but what was",
    "start": "1817840",
    "end": "1824480"
  },
  {
    "text": "really difficult you know I I represent gateway API we have a list of addresses which is usually one or two maybe three",
    "start": "1824480",
    "end": "1832080"
  },
  {
    "text": "uh but what would be really nice is what we see all the time in upstream Kubernetes of and and more right so I'm",
    "start": "1832080",
    "end": "1838399"
  },
  {
    "text": "going to show one two like the first two things in the list and then a few more I",
    "start": "1838399",
    "end": "1843760"
  },
  {
    "text": "know you can include cell functions in Kubernetes I know we already do that If we could have one just for that it would",
    "start": "1843760",
    "end": "1850559"
  },
  {
    "text": "be so useful So just a feature request that like I know that wasn't really useful for other uses of cell yet but",
    "start": "1850559",
    "end": "1857279"
  },
  {
    "text": "for this it seems like it'd be incredibly useful Firstly thank you so much for mentioning that because um u",
    "start": "1857279",
    "end": "1863320"
  },
  {
    "text": "the I'll take it in two parts Yes we will come we will reach out to you later",
    "start": "1863320",
    "end": "1868799"
  },
  {
    "text": "maybe on Kubernetes Slack to just write down what your request is actually like and then maybe we can add a function",
    "start": "1868799",
    "end": "1875760"
  },
  {
    "text": "specifically for that use case Uh but I do want to mention we did not realize",
    "start": "1875760",
    "end": "1881360"
  },
  {
    "text": "this feature was this important uh when we just started with the skip uh it took",
    "start": "1881360",
    "end": "1887600"
  },
  {
    "text": "us I think the whole of the last year to slowly slowly come across all those issues and then recently we started",
    "start": "1887600",
    "end": "1894480"
  },
  {
    "text": "seeing oh there is more still more um requirements for this particular uh",
    "start": "1894480",
    "end": "1899760"
  },
  {
    "text": "requirement this feature So yeah it it it just happened by chance No thank you",
    "start": "1899760",
    "end": "1905360"
  },
  {
    "text": "so much This is this is awesome Um I I have one if we're doing uh",
    "start": "1905360",
    "end": "1912240"
  },
  {
    "text": "feature requests but I can put it on the issue as well Um cell-based field selectors for cube control That'd be",
    "start": "1912240",
    "end": "1919760"
  },
  {
    "text": "great Sorry cellbased So there's there's field selectors on cube control right now And if you could throw cell into",
    "start": "1919760",
    "end": "1926080"
  },
  {
    "text": "that that'd be great I think we we have it's already going",
    "start": "1926080",
    "end": "1931360"
  },
  {
    "text": "Okay cool So uh thank you And thank you",
    "start": "1931360",
    "end": "1937640"
  },
  {
    "text": "Now if you if you don't have any more questions I I would just say give cell a try If you want to learn just maybe",
    "start": "1940320",
    "end": "1946000"
  },
  {
    "text": "follow our journey through the resources we shared It's not super complex U I do",
    "start": "1946000",
    "end": "1952000"
  },
  {
    "text": "want to give a shout out to a lot of kept documentation especially the very uh first",
    "start": "1952000",
    "end": "1959240"
  },
  {
    "text": "ones Yeah shout out Joe Uh so um and and",
    "start": "1959240",
    "end": "1965440"
  },
  {
    "text": "shout out to CC and Joe JP Yes So I wanted to give special mention to the very first",
    "start": "1965440",
    "end": "1972720"
  },
  {
    "text": "ke itself because we went through a lot of those codes and the lot of comments to figure out what was really happening",
    "start": "1972720",
    "end": "1978720"
  },
  {
    "text": "in the code U the X Kubernetes validation cap was our basis to understand how cell is integrated into",
    "start": "1978720",
    "end": "1985279"
  },
  {
    "text": "CRD today and then we slowly slowly made our way to the ke 4595 CRD for",
    "start": "1985279",
    "end": "1990960"
  },
  {
    "text": "additional printer columns So thank you so much for doing great documentation while also implementing the CAP",
    "start": "1990960",
    "end": "1997960"
  },
  {
    "text": "Yeah And with that um thank you once again",
    "start": "1997960",
    "end": "2003720"
  }
]