[
  {
    "text": "hi everyone my name is George Barnet and",
    "start": "359",
    "end": "2919"
  },
  {
    "text": "I'm a software engineer at Apple where",
    "start": "2919",
    "end": "4839"
  },
  {
    "text": "for the past six years I've been working",
    "start": "4839",
    "end": "6960"
  },
  {
    "text": "on Swift on server in the services",
    "start": "6960",
    "end": "8719"
  },
  {
    "text": "engineering org today I'm going to talk",
    "start": "8719",
    "end": "11120"
  },
  {
    "text": "to you about building a new GPC library",
    "start": "11120",
    "end": "13360"
  },
  {
    "text": "in",
    "start": "13360",
    "end": "15039"
  },
  {
    "text": "Swift for existing grpc users I hope to",
    "start": "15039",
    "end": "18080"
  },
  {
    "text": "give you a taste of our new library and",
    "start": "18080",
    "end": "19920"
  },
  {
    "text": "an understanding of why we think Swift",
    "start": "19920",
    "end": "21560"
  },
  {
    "text": "is a great language particularly for",
    "start": "21560",
    "end": "23359"
  },
  {
    "text": "Server development for Library",
    "start": "23359",
    "end": "25519"
  },
  {
    "text": "developers and maintainers I hope you'll",
    "start": "25519",
    "end": "27119"
  },
  {
    "text": "take away some of the things that we",
    "start": "27119",
    "end": "28279"
  },
  {
    "text": "learned while going through this process",
    "start": "28279",
    "end": "31359"
  },
  {
    "text": "I'm going to start with why we're",
    "start": "31359",
    "end": "32599"
  },
  {
    "text": "interested in Swift and what makes it a",
    "start": "32599",
    "end": "34559"
  },
  {
    "text": "compelling language",
    "start": "34559",
    "end": "36480"
  },
  {
    "text": "Choice Swift is a modern general purpose",
    "start": "36480",
    "end": "39440"
  },
  {
    "text": "programming language it's expressive",
    "start": "39440",
    "end": "42200"
  },
  {
    "text": "safe by Design and",
    "start": "42200",
    "end": "43879"
  },
  {
    "text": "fast it's also really fun to",
    "start": "43879",
    "end": "46440"
  },
  {
    "text": "write and you can develop it using a",
    "start": "46440",
    "end": "48520"
  },
  {
    "text": "variety of tools FS code has great",
    "start": "48520",
    "end": "50920"
  },
  {
    "text": "support for Swift but you can use any",
    "start": "50920",
    "end": "52320"
  },
  {
    "text": "number of editors like fim or emx which",
    "start": "52320",
    "end": "54280"
  },
  {
    "text": "integrate with standard tooling like",
    "start": "54280",
    "end": "56320"
  },
  {
    "text": "LSP Swift is also crossplatform",
    "start": "56320",
    "end": "58519"
  },
  {
    "text": "supporting Apple's platform forms",
    "start": "58519",
    "end": "60399"
  },
  {
    "text": "various Linux distributions and",
    "start": "60399",
    "end": "62960"
  },
  {
    "text": "windows it also scales from embedded",
    "start": "62960",
    "end": "65239"
  },
  {
    "text": "systems right through to large scale",
    "start": "65239",
    "end": "66920"
  },
  {
    "text": "server",
    "start": "66920",
    "end": "68640"
  },
  {
    "text": "applications my colleagues kuber and",
    "start": "68640",
    "end": "70640"
  },
  {
    "text": "Frans gave talks about embedded Swift",
    "start": "70640",
    "end": "72520"
  },
  {
    "text": "and Swift on server at Apple's develop",
    "start": "72520",
    "end": "74560"
  },
  {
    "text": "conference earlier this year I'd",
    "start": "74560",
    "end": "76840"
  },
  {
    "text": "recommend checking out their sessions if",
    "start": "76840",
    "end": "78240"
  },
  {
    "text": "you want to learn",
    "start": "78240",
    "end": "80400"
  },
  {
    "text": "more we think that Swift is a great",
    "start": "80400",
    "end": "82520"
  },
  {
    "text": "choice for Server development and we're",
    "start": "82520",
    "end": "84079"
  },
  {
    "text": "using it at Apple for a range of",
    "start": "84079",
    "end": "85640"
  },
  {
    "text": "services including private Cloud compute",
    "start": "85640",
    "end": "88079"
  },
  {
    "text": "which was announced earlier this year",
    "start": "88079",
    "end": "91079"
  },
  {
    "text": "some of the reasons we think it's a",
    "start": "91079",
    "end": "92560"
  },
  {
    "text": "great choice for Server applications in",
    "start": "92560",
    "end": "94200"
  },
  {
    "text": "particular are that it's fast and has a",
    "start": "94200",
    "end": "96680"
  },
  {
    "text": "low memory footprint which is typically",
    "start": "96680",
    "end": "98439"
  },
  {
    "text": "measured in megabytes it has predictable",
    "start": "98439",
    "end": "101680"
  },
  {
    "text": "performance in part thanks to automatic",
    "start": "101680",
    "end": "103720"
  },
  {
    "text": "reference",
    "start": "103720",
    "end": "104759"
  },
  {
    "text": "counting it also has advanced ownership",
    "start": "104759",
    "end": "107200"
  },
  {
    "text": "features which give you precise control",
    "start": "107200",
    "end": "109079"
  },
  {
    "text": "over resources when you need it there's",
    "start": "109079",
    "end": "111920"
  },
  {
    "text": "also great interop with C++ so you can",
    "start": "111920",
    "end": "114280"
  },
  {
    "text": "reuse existing",
    "start": "114280",
    "end": "116600"
  },
  {
    "text": "libraries Swift also has first class",
    "start": "116600",
    "end": "119079"
  },
  {
    "text": "support for concurrent built right into",
    "start": "119079",
    "end": "120840"
  },
  {
    "text": "the language making it easy to write",
    "start": "120840",
    "end": "123240"
  },
  {
    "text": "scalable server",
    "start": "123240",
    "end": "126159"
  },
  {
    "text": "applications there's also a passionate",
    "start": "126200",
    "end": "128160"
  },
  {
    "text": "and growing Community with support for a",
    "start": "128160",
    "end": "129959"
  },
  {
    "text": "variety of Technologies some of which",
    "start": "129959",
    "end": "131879"
  },
  {
    "text": "are listed",
    "start": "131879",
    "end": "133160"
  },
  {
    "text": "here let's take a quick look at Swift",
    "start": "133160",
    "end": "135360"
  },
  {
    "text": "concurrency as it's so relevant to",
    "start": "135360",
    "end": "138599"
  },
  {
    "text": "grpc Swift's concurrency uses",
    "start": "138599",
    "end": "141519"
  },
  {
    "text": "ASN functions which may suspend their",
    "start": "141519",
    "end": "143879"
  },
  {
    "text": "execution are marked as",
    "start": "143879",
    "end": "145800"
  },
  {
    "text": "async and callers must await potential",
    "start": "145800",
    "end": "148239"
  },
  {
    "text": "suspension points",
    "start": "148239",
    "end": "150599"
  },
  {
    "text": "you can iterate async sequences of",
    "start": "150599",
    "end": "152480"
  },
  {
    "text": "values much like a regular for",
    "start": "152480",
    "end": "154840"
  },
  {
    "text": "Loop and task groups allow you to easily",
    "start": "154840",
    "end": "157560"
  },
  {
    "text": "parallelize the execution of",
    "start": "157560",
    "end": "159000"
  },
  {
    "text": "asynchronous",
    "start": "159000",
    "end": "160159"
  },
  {
    "text": "work this also highlights how swift",
    "start": "160159",
    "end": "162480"
  },
  {
    "text": "promotes structured concurrency to Aid",
    "start": "162480",
    "end": "164319"
  },
  {
    "text": "local",
    "start": "164319",
    "end": "165640"
  },
  {
    "text": "reasoning it's only once the work you",
    "start": "165640",
    "end": "167840"
  },
  {
    "text": "has drained and all of the child tasks",
    "start": "167840",
    "end": "169560"
  },
  {
    "text": "have completed that the task group will",
    "start": "169560",
    "end": "171360"
  },
  {
    "text": "return it makes the lifetimes of",
    "start": "171360",
    "end": "173319"
  },
  {
    "text": "resources clear and easy to reason",
    "start": "173319",
    "end": "176519"
  },
  {
    "text": "about perhaps the best feature is that",
    "start": "176519",
    "end": "179239"
  },
  {
    "text": "in Swift 6 the compiler can guarantee",
    "start": "179239",
    "end": "181400"
  },
  {
    "text": "that concurrent programs are free of",
    "start": "181400",
    "end": "183000"
  },
  {
    "text": "data races eliminating a whole class of",
    "start": "183000",
    "end": "185840"
  },
  {
    "text": "bugs very few languages have this level",
    "start": "185840",
    "end": "188400"
  },
  {
    "text": "of protection and those that do",
    "start": "188400",
    "end": "190560"
  },
  {
    "text": "typically lack the ergonomics of",
    "start": "190560",
    "end": "193640"
  },
  {
    "text": "Swift we've spent the last 10 months",
    "start": "193640",
    "end": "196000"
  },
  {
    "text": "redesigning grpc for modern Swift let's",
    "start": "196000",
    "end": "198799"
  },
  {
    "text": "take a step back and see how we arrived",
    "start": "198799",
    "end": "201840"
  },
  {
    "text": "here the project was started in 2017 by",
    "start": "201840",
    "end": "205360"
  },
  {
    "text": "a googler called Tim",
    "start": "205360",
    "end": "206799"
  },
  {
    "text": "Burks his approach was quite sensibly to",
    "start": "206799",
    "end": "209280"
  },
  {
    "text": "wrap the G RPC core library and provide",
    "start": "209280",
    "end": "211319"
  },
  {
    "text": "Swift apis on top of that this was done",
    "start": "211319",
    "end": "214200"
  },
  {
    "text": "in conjunction with the open source",
    "start": "214200",
    "end": "217400"
  },
  {
    "text": "Community when I joined Apple at the end",
    "start": "217400",
    "end": "219680"
  },
  {
    "text": "of 2018 there was a a desire to have a",
    "start": "219680",
    "end": "222360"
  },
  {
    "text": "swift library for grpc and ideally one",
    "start": "222360",
    "end": "225040"
  },
  {
    "text": "written natively in Swift my team had",
    "start": "225040",
    "end": "227599"
  },
  {
    "text": "already created most of the pieces to do",
    "start": "227599",
    "end": "229280"
  },
  {
    "text": "this we'd recently released Swift Neo",
    "start": "229280",
    "end": "231599"
  },
  {
    "text": "which is a non-blocking event driven",
    "start": "231599",
    "end": "233040"
  },
  {
    "text": "networking framework with support for",
    "start": "233040",
    "end": "234879"
  },
  {
    "text": "TLS and",
    "start": "234879",
    "end": "236480"
  },
  {
    "text": "http2 the open source community and a",
    "start": "236480",
    "end": "238959"
  },
  {
    "text": "developer called in particular clocked",
    "start": "238959",
    "end": "241159"
  },
  {
    "text": "onto this and had started working on a",
    "start": "241159",
    "end": "242799"
  },
  {
    "text": "version of the library built on top of",
    "start": "242799",
    "end": "244239"
  },
  {
    "text": "Swift",
    "start": "244239",
    "end": "245720"
  },
  {
    "text": "Neo we collaborated on this eventually",
    "start": "245720",
    "end": "248280"
  },
  {
    "text": "resulting in the release of the first",
    "start": "248280",
    "end": "249599"
  },
  {
    "text": "version which we're still using now at",
    "start": "249599",
    "end": "252319"
  },
  {
    "text": "this point the Swift on server Community",
    "start": "252319",
    "end": "253840"
  },
  {
    "text": "was still quite new but having a way to",
    "start": "253840",
    "end": "255599"
  },
  {
    "text": "easily interrupt with other services",
    "start": "255599",
    "end": "257280"
  },
  {
    "text": "from Swift was a really big win for",
    "start": "257280",
    "end": "260400"
  },
  {
    "text": "us when we developed the first version",
    "start": "260400",
    "end": "263040"
  },
  {
    "text": "Swift didn't have a native concurrency",
    "start": "263040",
    "end": "264840"
  },
  {
    "text": "model and the library was built on top",
    "start": "264840",
    "end": "266720"
  },
  {
    "text": "of Swift Neo's Futures and Promises it",
    "start": "266720",
    "end": "269080"
  },
  {
    "text": "served us really well well but it's not",
    "start": "269080",
    "end": "271240"
  },
  {
    "text": "modern idiomatic Swift as this ex",
    "start": "271240",
    "end": "273880"
  },
  {
    "text": "example",
    "start": "273880",
    "end": "275120"
  },
  {
    "text": "highlights I just want to note some",
    "start": "275120",
    "end": "277000"
  },
  {
    "text": "syntax here because it might not be",
    "start": "277000",
    "end": "278360"
  },
  {
    "text": "immediately obvious if you're unfamiliar",
    "start": "278360",
    "end": "279880"
  },
  {
    "text": "with",
    "start": "279880",
    "end": "280680"
  },
  {
    "text": "swift this method returns a future of an",
    "start": "280680",
    "end": "283639"
  },
  {
    "text": "event handling",
    "start": "283639",
    "end": "284800"
  },
  {
    "text": "closure the closure is highlighted here",
    "start": "284800",
    "end": "287759"
  },
  {
    "text": "and this is where the special syntax",
    "start": "287759",
    "end": "289080"
  },
  {
    "text": "comes in when a closure is the final",
    "start": "289080",
    "end": "291039"
  },
  {
    "text": "parameter the parentheses of the",
    "start": "291039",
    "end": "292440"
  },
  {
    "text": "function uh can be dropped so in",
    "start": "292440",
    "end": "294280"
  },
  {
    "text": "practice it looks more like",
    "start": "294280",
    "end": "296120"
  },
  {
    "text": "this this syntax is used quite",
    "start": "296120",
    "end": "298120"
  },
  {
    "text": "frequently and features later on so just",
    "start": "298120",
    "end": "299960"
  },
  {
    "text": "keep that in",
    "start": "299960",
    "end": "301960"
  },
  {
    "text": "mind when concurrency was introduced we",
    "start": "301960",
    "end": "304800"
  },
  {
    "text": "added async a white flavors of the stubs",
    "start": "304800",
    "end": "306840"
  },
  {
    "text": "but these are just a thin veneer on top",
    "start": "306840",
    "end": "308280"
  },
  {
    "text": "of the Futures based API and don't take",
    "start": "308280",
    "end": "310280"
  },
  {
    "text": "full advantage of Swift's concurrency",
    "start": "310280",
    "end": "312160"
  },
  {
    "text": "features in a way this made some things",
    "start": "312160",
    "end": "314759"
  },
  {
    "text": "worse a number of apis couldn't be",
    "start": "314759",
    "end": "317080"
  },
  {
    "text": "easily adapted so some users ended up",
    "start": "317080",
    "end": "319479"
  },
  {
    "text": "having to learn about two concurrency",
    "start": "319479",
    "end": "320840"
  },
  {
    "text": "systems and how to glue them together I",
    "start": "320840",
    "end": "323520"
  },
  {
    "text": "can tell you firsthand that this is a",
    "start": "323520",
    "end": "324919"
  },
  {
    "text": "fairly unpleasant",
    "start": "324919",
    "end": "326560"
  },
  {
    "text": "experience for the most part though it",
    "start": "326560",
    "end": "329080"
  },
  {
    "text": "lowered the barrier to entry",
    "start": "329080",
    "end": "331199"
  },
  {
    "text": "implementing services and using clients",
    "start": "331199",
    "end": "333160"
  },
  {
    "text": "became much easier which helped grow our",
    "start": "333160",
    "end": "335120"
  },
  {
    "text": "user",
    "start": "335120",
    "end": "336800"
  },
  {
    "text": "base with that growth came more issues",
    "start": "336800",
    "end": "339479"
  },
  {
    "text": "and more feature requests and in a",
    "start": "339479",
    "end": "341960"
  },
  {
    "text": "period of reflection we started actively",
    "start": "341960",
    "end": "343800"
  },
  {
    "text": "Gathering feedback from users what do",
    "start": "343800",
    "end": "345720"
  },
  {
    "text": "they find difficult what are they",
    "start": "345720",
    "end": "347720"
  },
  {
    "text": "unhappy with what features are they",
    "start": "347720",
    "end": "351880"
  },
  {
    "text": "missing we also asked about positive",
    "start": "351960",
    "end": "354080"
  },
  {
    "text": "feedback what are we doing well what's",
    "start": "354080",
    "end": "356039"
  },
  {
    "text": "easy to do that's difficult in other",
    "start": "356039",
    "end": "357880"
  },
  {
    "text": "libraries it's easy to just just focus",
    "start": "357880",
    "end": "360280"
  },
  {
    "text": "on issues and get a false perception",
    "start": "360280",
    "end": "361840"
  },
  {
    "text": "that everything is bad for the most part",
    "start": "361840",
    "end": "364440"
  },
  {
    "text": "our users were happy with what they had",
    "start": "364440",
    "end": "365960"
  },
  {
    "text": "but often just wanted",
    "start": "365960",
    "end": "367520"
  },
  {
    "text": "more some of the things they were asking",
    "start": "367520",
    "end": "369639"
  },
  {
    "text": "for were features available in other",
    "start": "369639",
    "end": "371160"
  },
  {
    "text": "grpc libraries like hedging others were",
    "start": "371160",
    "end": "373960"
  },
  {
    "text": "API gripes the Interceptor API for",
    "start": "373960",
    "end": "376240"
  },
  {
    "text": "example is very flexible but it's still",
    "start": "376240",
    "end": "378599"
  },
  {
    "text": "based on Futures which makes it",
    "start": "378599",
    "end": "380479"
  },
  {
    "text": "difficult to use",
    "start": "380479",
    "end": "383000"
  },
  {
    "text": "correctly gathering this feedback was",
    "start": "383039",
    "end": "385199"
  },
  {
    "text": "really important it allowed us to build",
    "start": "385199",
    "end": "386960"
  },
  {
    "text": "up a picture of where users had",
    "start": "386960",
    "end": "388400"
  },
  {
    "text": "difficulties and what we could do about",
    "start": "388400",
    "end": "390160"
  },
  {
    "text": "them we could see where we were and",
    "start": "390160",
    "end": "392280"
  },
  {
    "text": "where we wanted to be and this led us to",
    "start": "392280",
    "end": "394120"
  },
  {
    "text": "a decision should we adapt the current",
    "start": "394120",
    "end": "396120"
  },
  {
    "text": "library or rewrite",
    "start": "396120",
    "end": "398639"
  },
  {
    "text": "it rewriting gives you the opportunity",
    "start": "398639",
    "end": "401199"
  },
  {
    "text": "to fix a multitude of",
    "start": "401199",
    "end": "402840"
  },
  {
    "text": "problems however I think it's important",
    "start": "402840",
    "end": "404720"
  },
  {
    "text": "to note that doing a complete rewrite is",
    "start": "404720",
    "end": "406599"
  },
  {
    "text": "a big decision it's a large amount of",
    "start": "406599",
    "end": "408680"
  },
  {
    "text": "work for which you also need to consider",
    "start": "408680",
    "end": "410160"
  },
  {
    "text": "the opportunity cost what else could we",
    "start": "410160",
    "end": "412360"
  },
  {
    "text": "do if we didn't do a rewrite you're also",
    "start": "412360",
    "end": "415000"
  },
  {
    "text": "giving users a potentially large amount",
    "start": "415000",
    "end": "416599"
  },
  {
    "text": "of migration work to do the reward for",
    "start": "416599",
    "end": "419000"
  },
  {
    "text": "them doing this has to really outweigh",
    "start": "419000",
    "end": "420479"
  },
  {
    "text": "the cost the new version can't just be",
    "start": "420479",
    "end": "422879"
  },
  {
    "text": "better it has to be significantly",
    "start": "422879",
    "end": "426000"
  },
  {
    "text": "better you also need to think about the",
    "start": "426000",
    "end": "428120"
  },
  {
    "text": "support model how long do you support",
    "start": "428120",
    "end": "430039"
  },
  {
    "text": "the old version for what about security",
    "start": "430039",
    "end": "431879"
  },
  {
    "text": "patches do you have the capacity to",
    "start": "431879",
    "end": "433879"
  },
  {
    "text": "support both there's also risk involved",
    "start": "433879",
    "end": "436560"
  },
  {
    "text": "if resources get pulled for some reason",
    "start": "436560",
    "end": "438319"
  },
  {
    "text": "then you potentially have nothing to",
    "start": "438319",
    "end": "439440"
  },
  {
    "text": "show for the",
    "start": "439440",
    "end": "441120"
  },
  {
    "text": "work the other adoption the other option",
    "start": "441120",
    "end": "444160"
  },
  {
    "text": "was adapting the existing",
    "start": "444160",
    "end": "446039"
  },
  {
    "text": "library for users at least in the short",
    "start": "446039",
    "end": "448360"
  },
  {
    "text": "term this is probably more appealing",
    "start": "448360",
    "end": "450240"
  },
  {
    "text": "because new features can be added",
    "start": "450240",
    "end": "451440"
  },
  {
    "text": "iteratively without them needing to",
    "start": "451440",
    "end": "453599"
  },
  {
    "text": "migrate there's also inherently less",
    "start": "453599",
    "end": "455639"
  },
  {
    "text": "risk we already have the",
    "start": "455639",
    "end": "458039"
  },
  {
    "text": "library however adding certain features",
    "start": "458039",
    "end": "460360"
  },
  {
    "text": "would be difficult because of the",
    "start": "460360",
    "end": "461520"
  },
  {
    "text": "current design and some of the goals we",
    "start": "461520",
    "end": "463800"
  },
  {
    "text": "had like structured concurrency aren't",
    "start": "463800",
    "end": "465680"
  },
  {
    "text": "practical without effectively having a",
    "start": "465680",
    "end": "467199"
  },
  {
    "text": "separate implementation",
    "start": "467199",
    "end": "469319"
  },
  {
    "text": "anyway and this was ultimately the",
    "start": "469319",
    "end": "471280"
  },
  {
    "text": "impetus for doing a",
    "start": "471280",
    "end": "472800"
  },
  {
    "text": "rewrite concurrency has fundamentally",
    "start": "472800",
    "end": "475199"
  },
  {
    "text": "changed in Swift and the nature of how",
    "start": "475199",
    "end": "477000"
  },
  {
    "text": "we write concurrent programs is",
    "start": "477000",
    "end": "478520"
  },
  {
    "text": "significantly different to when we wrote",
    "start": "478520",
    "end": "480120"
  },
  {
    "text": "the first",
    "start": "480120",
    "end": "481919"
  },
  {
    "text": "version there are so many benefits to",
    "start": "481919",
    "end": "484039"
  },
  {
    "text": "using Swift's native concurrency being a",
    "start": "484039",
    "end": "486919"
  },
  {
    "text": "language feature is a force multiplier",
    "start": "486919",
    "end": "489479"
  },
  {
    "text": "any concurrency related improvements to",
    "start": "489479",
    "end": "491240"
  },
  {
    "text": "the compiler runtime and language come",
    "start": "491240",
    "end": "493720"
  },
  {
    "text": "for free tooling and Diagnostics are",
    "start": "493720",
    "end": "496199"
  },
  {
    "text": "also better Swift has async back traces",
    "start": "496199",
    "end": "498120"
  },
  {
    "text": "so debugging ASN code is just like",
    "start": "498120",
    "end": "500039"
  },
  {
    "text": "debugging non- ASN code you also get the",
    "start": "500039",
    "end": "503199"
  },
  {
    "text": "benefit of familiarity if you're",
    "start": "503199",
    "end": "505520"
  },
  {
    "text": "familiar with swift concurrency then you",
    "start": "505520",
    "end": "507159"
  },
  {
    "text": "don't have a new paradigm to learn if",
    "start": "507159",
    "end": "509240"
  },
  {
    "text": "you want then you can learn about it",
    "start": "509240",
    "end": "510960"
  },
  {
    "text": "from a much greater Bank of resources",
    "start": "510960",
    "end": "512959"
  },
  {
    "text": "than you could if you were learning",
    "start": "512959",
    "end": "513919"
  },
  {
    "text": "about Neo's futures for",
    "start": "513919",
    "end": "517320"
  },
  {
    "text": "example having decided on a rewrite we",
    "start": "517360",
    "end": "520440"
  },
  {
    "text": "began embarking on our journey to a new",
    "start": "520440",
    "end": "522080"
  },
  {
    "text": "major",
    "start": "522080",
    "end": "524080"
  },
  {
    "text": "version as the vision and Designs at the",
    "start": "524080",
    "end": "526360"
  },
  {
    "text": "course of the library we wanted to be",
    "start": "526360",
    "end": "527800"
  },
  {
    "text": "sure that we had a clear picture of what",
    "start": "527800",
    "end": "529519"
  },
  {
    "text": "we wanted to build and the problems we",
    "start": "529519",
    "end": "531279"
  },
  {
    "text": "were solving some of these were high",
    "start": "531279",
    "end": "533720"
  },
  {
    "text": "level and others were much more",
    "start": "533720",
    "end": "535800"
  },
  {
    "text": "specific we also have a guide of uh a",
    "start": "535800",
    "end": "538560"
  },
  {
    "text": "set of guiding principles which we could",
    "start": "538560",
    "end": "540480"
  },
  {
    "text": "draw back on when making design",
    "start": "540480",
    "end": "542200"
  },
  {
    "text": "decisions and can do so in the",
    "start": "542200",
    "end": "545120"
  },
  {
    "text": "future one of the high level goals was",
    "start": "545120",
    "end": "547399"
  },
  {
    "text": "to make the library suitable for",
    "start": "547399",
    "end": "548760"
  },
  {
    "text": "beginners and experts the apis should",
    "start": "548760",
    "end": "551920"
  },
  {
    "text": "follow the Swift tenant that complexity",
    "start": "551920",
    "end": "553800"
  },
  {
    "text": "should be progressively disclosed this",
    "start": "553800",
    "end": "556279"
  },
  {
    "text": "means it should be easy to pick up and",
    "start": "556279",
    "end": "557720"
  },
  {
    "text": "use without having to learn lots of",
    "start": "557720",
    "end": "559200"
  },
  {
    "text": "different concepts you should be able to",
    "start": "559200",
    "end": "561079"
  },
  {
    "text": "learn about more Concepts as in when",
    "start": "561079",
    "end": "562800"
  },
  {
    "text": "you're ready to do so and this extends",
    "start": "562800",
    "end": "565519"
  },
  {
    "text": "to the whole user experience it should",
    "start": "565519",
    "end": "567600"
  },
  {
    "text": "be easy to get started with the library",
    "start": "567600",
    "end": "569680"
  },
  {
    "text": "but the apis should naturally extend to",
    "start": "569680",
    "end": "571680"
  },
  {
    "text": "more complex cases as",
    "start": "571680",
    "end": "574240"
  },
  {
    "text": "well another goal was for the library to",
    "start": "574240",
    "end": "576640"
  },
  {
    "text": "feel familiar to users with experience",
    "start": "576640",
    "end": "578440"
  },
  {
    "text": "of other grpc libraries common features",
    "start": "578440",
    "end": "580800"
  },
  {
    "text": "should be available and work like they",
    "start": "580800",
    "end": "582240"
  },
  {
    "text": "do in other implementations and use the",
    "start": "582240",
    "end": "584279"
  },
  {
    "text": "same",
    "start": "584279",
    "end": "586480"
  },
  {
    "text": "terminology we also wanted to make the",
    "start": "586480",
    "end": "588399"
  },
  {
    "text": "library extensible a mistake we made in",
    "start": "588399",
    "end": "590760"
  },
  {
    "text": "the first version was baking in features",
    "start": "590760",
    "end": "592560"
  },
  {
    "text": "which should have been made available",
    "start": "592560",
    "end": "593720"
  },
  {
    "text": "fire extension points an example was",
    "start": "593720",
    "end": "596560"
  },
  {
    "text": "assuming protuff rather than having a",
    "start": "596560",
    "end": "598240"
  },
  {
    "text": "pluggable serialization mechanism this",
    "start": "598240",
    "end": "600680"
  },
  {
    "text": "stopped users from uh self- serving as",
    "start": "600680",
    "end": "603360"
  },
  {
    "text": "they had to ask us to add apis which",
    "start": "603360",
    "end": "605600"
  },
  {
    "text": "increased the maintenance burden for us",
    "start": "605600",
    "end": "607240"
  },
  {
    "text": "as we needed to maintain a duplicative",
    "start": "607240",
    "end": "609079"
  },
  {
    "text": "set of",
    "start": "609079",
    "end": "610120"
  },
  {
    "text": "apis to make sure we set off on the",
    "start": "610120",
    "end": "612240"
  },
  {
    "text": "right course we spent a lot of time",
    "start": "612240",
    "end": "614040"
  },
  {
    "text": "designing and",
    "start": "614040",
    "end": "615600"
  },
  {
    "text": "prototyping the library has two types of",
    "start": "615600",
    "end": "617839"
  },
  {
    "text": "component runtime and compile time the",
    "start": "617839",
    "end": "620959"
  },
  {
    "text": "runtime part is what user code depends",
    "start": "620959",
    "end": "622720"
  },
  {
    "text": "on it has three broad layers transport",
    "start": "622720",
    "end": "624959"
  },
  {
    "text": "cool and",
    "start": "624959",
    "end": "626240"
  },
  {
    "text": "stub the transport layer provides the",
    "start": "626240",
    "end": "628680"
  },
  {
    "text": "long lived community communication",
    "start": "628680",
    "end": "629839"
  },
  {
    "text": "between a client and a server it doesn't",
    "start": "629839",
    "end": "631720"
  },
  {
    "text": "know about protar or serialization it",
    "start": "631720",
    "end": "633640"
  },
  {
    "text": "just deals in streams of request and",
    "start": "633640",
    "end": "635279"
  },
  {
    "text": "response",
    "start": "635279",
    "end": "636639"
  },
  {
    "text": "parts we provide two transports an",
    "start": "636639",
    "end": "639200"
  },
  {
    "text": "inprocess one which is useful for",
    "start": "639200",
    "end": "640800"
  },
  {
    "text": "testing and an http2 transport built on",
    "start": "640800",
    "end": "643680"
  },
  {
    "text": "top of Swift",
    "start": "643680",
    "end": "645480"
  },
  {
    "text": "Neo for the initial release our aim with",
    "start": "645480",
    "end": "648200"
  },
  {
    "text": "the http2 transport is to provide the",
    "start": "648200",
    "end": "650360"
  },
  {
    "text": "functionality that most users depend on",
    "start": "650360",
    "end": "652480"
  },
  {
    "text": "while leaving space to add more in the",
    "start": "652480",
    "end": "654000"
  },
  {
    "text": "future to name a few the H2 transport",
    "start": "654000",
    "end": "656720"
  },
  {
    "text": "supports pluggable name resolvers",
    "start": "656720",
    "end": "658279"
  },
  {
    "text": "service config and cight load balancing",
    "start": "658279",
    "end": "660360"
  },
  {
    "text": "among",
    "start": "660360",
    "end": "661200"
  },
  {
    "text": "others this isn't a layer most users",
    "start": "661200",
    "end": "663360"
  },
  {
    "text": "will need to touch Beyond configuring",
    "start": "663360",
    "end": "664839"
  },
  {
    "text": "which transport to",
    "start": "664839",
    "end": "666360"
  },
  {
    "text": "use the cool air sits on top of the",
    "start": "666360",
    "end": "668480"
  },
  {
    "text": "transport and provides a way to execute",
    "start": "668480",
    "end": "670240"
  },
  {
    "text": "rpcs it handles serialization and",
    "start": "670240",
    "end": "672959"
  },
  {
    "text": "deserialization it knows how to do",
    "start": "672959",
    "end": "674720"
  },
  {
    "text": "retries and hedging it enforces",
    "start": "674720",
    "end": "676519"
  },
  {
    "text": "deadlines and so on it can be used",
    "start": "676519",
    "end": "679040"
  },
  {
    "text": "directly but most users will just reach",
    "start": "679040",
    "end": "680600"
  },
  {
    "text": "for the generated stubs",
    "start": "680600",
    "end": "682399"
  },
  {
    "text": "instead and that is of course the layer",
    "start": "682399",
    "end": "684440"
  },
  {
    "text": "on uh the generated layer um which",
    "start": "684440",
    "end": "687160"
  },
  {
    "text": "provides easy to use typed apis",
    "start": "687160",
    "end": "691240"
  },
  {
    "text": "the compile time components are somewhat",
    "start": "692160",
    "end": "693680"
  },
  {
    "text": "simpler and use ahead of time to",
    "start": "693680",
    "end": "695200"
  },
  {
    "text": "generate the stubs at the bottom we have",
    "start": "695200",
    "end": "698120"
  },
  {
    "text": "a code generation Library which is IDL",
    "start": "698120",
    "end": "700120"
  },
  {
    "text": "agnostic effectively providing a",
    "start": "700120",
    "end": "702079"
  },
  {
    "text": "template for the generated code on top",
    "start": "702079",
    "end": "704920"
  },
  {
    "text": "of this we have the protoc plugin so you",
    "start": "704920",
    "end": "706600"
  },
  {
    "text": "can generate stubs ahead of time and on",
    "start": "706600",
    "end": "709519"
  },
  {
    "text": "top of that is a swift package manager",
    "start": "709519",
    "end": "711279"
  },
  {
    "text": "build plugin this allows you to generate",
    "start": "711279",
    "end": "713240"
  },
  {
    "text": "stubs at compile time rather than having",
    "start": "713240",
    "end": "715079"
  },
  {
    "text": "to manage code generation with separate",
    "start": "715079",
    "end": "717320"
  },
  {
    "text": "tooling let's take a look at the stub in",
    "start": "717320",
    "end": "719519"
  },
  {
    "text": "more",
    "start": "719519",
    "end": "721160"
  },
  {
    "text": "detail one goal we had was to make it",
    "start": "721160",
    "end": "723399"
  },
  {
    "text": "possible for you to have full control",
    "start": "723399",
    "end": "725120"
  },
  {
    "text": "over the",
    "start": "725120",
    "end": "726360"
  },
  {
    "text": "RPC by that I mean you should be able to",
    "start": "726360",
    "end": "728519"
  },
  {
    "text": "access every part of a request and a",
    "start": "728519",
    "end": "730200"
  },
  {
    "text": "response stream you should be able to",
    "start": "730200",
    "end": "732000"
  },
  {
    "text": "read and write the initial andent",
    "start": "732000",
    "end": "733160"
  },
  {
    "text": "trailing metadata you should be able to",
    "start": "733160",
    "end": "734839"
  },
  {
    "text": "send trailer only responses and so",
    "start": "734839",
    "end": "737519"
  },
  {
    "text": "on this should be done in such a way",
    "start": "737519",
    "end": "740000"
  },
  {
    "text": "that the API makes it impossible for you",
    "start": "740000",
    "end": "741839"
  },
  {
    "text": "to commit a protocol violation like",
    "start": "741839",
    "end": "743800"
  },
  {
    "text": "sending initial metadata after a message",
    "start": "743800",
    "end": "746639"
  },
  {
    "text": "this shouldn't make the common case of",
    "start": "746639",
    "end": "747959"
  },
  {
    "text": "dealing with messages more difficult",
    "start": "747959",
    "end": "749519"
  },
  {
    "text": "than it needs to",
    "start": "749519",
    "end": "751160"
  },
  {
    "text": "though we also wanted the client and",
    "start": "751160",
    "end": "753279"
  },
  {
    "text": "service dubs to feel similar and extend",
    "start": "753279",
    "end": "755199"
  },
  {
    "text": "naturally to the Interceptor API",
    "start": "755199",
    "end": "757360"
  },
  {
    "text": "minimizing the number of patterns that",
    "start": "757360",
    "end": "758839"
  },
  {
    "text": "you need to learn",
    "start": "758839",
    "end": "760360"
  },
  {
    "text": "about to achieve this we built a number",
    "start": "760360",
    "end": "762600"
  },
  {
    "text": "of compiling but non-functional",
    "start": "762600",
    "end": "764920"
  },
  {
    "text": "prototypes as an example this is a",
    "start": "764920",
    "end": "767240"
  },
  {
    "text": "snippet of some non-functioning code for",
    "start": "767240",
    "end": "769000"
  },
  {
    "text": "metadata the details aren't important",
    "start": "769000",
    "end": "771279"
  },
  {
    "text": "here but what it allows you to do is try",
    "start": "771279",
    "end": "773079"
  },
  {
    "text": "out the apis you can write code against",
    "start": "773079",
    "end": "775839"
  },
  {
    "text": "them even if you can't actually run it",
    "start": "775839",
    "end": "778279"
  },
  {
    "text": "it gives you a really great sense of",
    "start": "778279",
    "end": "779639"
  },
  {
    "text": "whether the API is coherent and easy to",
    "start": "779639",
    "end": "782000"
  },
  {
    "text": "use you can also share it with others so",
    "start": "782000",
    "end": "784399"
  },
  {
    "text": "that they can try out and provide",
    "start": "784399",
    "end": "786720"
  },
  {
    "text": "feedback we created a number of",
    "start": "786720",
    "end": "788720"
  },
  {
    "text": "different sub prototypes and iterated on",
    "start": "788720",
    "end": "790519"
  },
  {
    "text": "the promising ones reimplementing",
    "start": "790519",
    "end": "792639"
  },
  {
    "text": "existing services using the prototypes",
    "start": "792639",
    "end": "795160"
  },
  {
    "text": "was also a very valuable",
    "start": "795160",
    "end": "797639"
  },
  {
    "text": "exercise one of the rejected options",
    "start": "797639",
    "end": "800079"
  },
  {
    "text": "used the ownership modifiers to enforce",
    "start": "800079",
    "end": "802000"
  },
  {
    "text": "the shape of the grpc",
    "start": "802000",
    "end": "804199"
  },
  {
    "text": "protocol the idea was to encode a state",
    "start": "804199",
    "end": "806519"
  },
  {
    "text": "machine across a set of across a set of",
    "start": "806519",
    "end": "808720"
  },
  {
    "text": "related",
    "start": "808720",
    "end": "809760"
  },
  {
    "text": "objects each effectively representing a",
    "start": "809760",
    "end": "812199"
  },
  {
    "text": "separate State the various right methods",
    "start": "812199",
    "end": "814839"
  },
  {
    "text": "will return new objects to transition",
    "start": "814839",
    "end": "816720"
  },
  {
    "text": "between these states and using the",
    "start": "816720",
    "end": "819000"
  },
  {
    "text": "ownership modifiers stops users from",
    "start": "819000",
    "end": "820839"
  },
  {
    "text": "taking an edge in the state machine",
    "start": "820839",
    "end": "822079"
  },
  {
    "text": "that's no longer available to",
    "start": "822079",
    "end": "823800"
  },
  {
    "text": "them in this example writing initial",
    "start": "823800",
    "end": "826720"
  },
  {
    "text": "metadata consumes head and returns body",
    "start": "826720",
    "end": "829519"
  },
  {
    "text": "you can then write a message using body",
    "start": "829519",
    "end": "831079"
  },
  {
    "text": "and finish it attempting to write",
    "start": "831079",
    "end": "833639"
  },
  {
    "text": "another message isn't impossible because",
    "start": "833639",
    "end": "835320"
  },
  {
    "text": "body was consumed by the coure to",
    "start": "835320",
    "end": "837360"
  },
  {
    "text": "finish the idea is neat and it does stop",
    "start": "837360",
    "end": "840120"
  },
  {
    "text": "you from making protocol violations but",
    "start": "840120",
    "end": "842480"
  },
  {
    "text": "from a user perspective it's not great",
    "start": "842480",
    "end": "844279"
  },
  {
    "text": "it doesn't feel at all",
    "start": "844279",
    "end": "846360"
  },
  {
    "text": "idiomatic in the end we landed on stub",
    "start": "846360",
    "end": "848800"
  },
  {
    "text": "apis which we think strike a great",
    "start": "848800",
    "end": "850560"
  },
  {
    "text": "balance they're easy to use while making",
    "start": "850560",
    "end": "852759"
  },
  {
    "text": "it possible to access all parts of the",
    "start": "852759",
    "end": "854600"
  },
  {
    "text": "request and response stream while",
    "start": "854600",
    "end": "856360"
  },
  {
    "text": "preventing you from making protocol",
    "start": "856360",
    "end": "858120"
  },
  {
    "text": "violations importantly they feel like",
    "start": "858120",
    "end": "860160"
  },
  {
    "text": "idiomatic Swift apis let's take a look",
    "start": "860160",
    "end": "863320"
  },
  {
    "text": "at an example of the echo",
    "start": "863320",
    "end": "865639"
  },
  {
    "text": "service in Swift a service stub is just",
    "start": "865639",
    "end": "868560"
  },
  {
    "text": "a protocol",
    "start": "868560",
    "end": "869600"
  },
  {
    "text": "which is a similar concept to an",
    "start": "869600",
    "end": "871079"
  },
  {
    "text": "interface in other languages to",
    "start": "871079",
    "end": "873279"
  },
  {
    "text": "implement the service you need to",
    "start": "873279",
    "end": "874600"
  },
  {
    "text": "conform a type to the generated",
    "start": "874600",
    "end": "877160"
  },
  {
    "text": "protocol because the requirements are",
    "start": "877160",
    "end": "879079"
  },
  {
    "text": "missing the compiler adits an error and",
    "start": "879079",
    "end": "880560"
  },
  {
    "text": "suggests a fix it applying the Fixit",
    "start": "880560",
    "end": "883279"
  },
  {
    "text": "generates the stubs for us let's focus",
    "start": "883279",
    "end": "885880"
  },
  {
    "text": "in on the UN get",
    "start": "885880",
    "end": "887720"
  },
  {
    "text": "method it's straightforward the input is",
    "start": "887720",
    "end": "890759"
  },
  {
    "text": "a single server request which holds the",
    "start": "890759",
    "end": "892440"
  },
  {
    "text": "metadata in message the return type is a",
    "start": "892440",
    "end": "895120"
  },
  {
    "text": "single server response no surprises here",
    "start": "895120",
    "end": "898600"
  },
  {
    "text": "an implement M menting it is as simple",
    "start": "898600",
    "end": "900279"
  },
  {
    "text": "as you'd",
    "start": "900279",
    "end": "901320"
  },
  {
    "text": "expect let's take a look at the",
    "start": "901320",
    "end": "903320"
  },
  {
    "text": "bidirectional streaming update",
    "start": "903320",
    "end": "905320"
  },
  {
    "text": "method it looks a lot like the get",
    "start": "905320",
    "end": "907399"
  },
  {
    "text": "method but with a streaming request and",
    "start": "907399",
    "end": "909720"
  },
  {
    "text": "response to implement it you return a",
    "start": "909720",
    "end": "912639"
  },
  {
    "text": "response stream which is initialized",
    "start": "912639",
    "end": "914600"
  },
  {
    "text": "with a closure allowing you to write",
    "start": "914600",
    "end": "916079"
  },
  {
    "text": "messages back to the",
    "start": "916079",
    "end": "917720"
  },
  {
    "text": "client the closure iterates the sequence",
    "start": "917720",
    "end": "920000"
  },
  {
    "text": "of request messages writing back a reply",
    "start": "920000",
    "end": "922240"
  },
  {
    "text": "for each",
    "start": "922240",
    "end": "923759"
  },
  {
    "text": "one it must also return metadata which",
    "start": "923759",
    "end": "926519"
  },
  {
    "text": "in this case is empty this follows the",
    "start": "926519",
    "end": "929000"
  },
  {
    "text": "shape of the grpc protocol response",
    "start": "929000",
    "end": "931680"
  },
  {
    "text": "streams end with trailing metadata and a",
    "start": "931680",
    "end": "934440"
  },
  {
    "text": "status in this case the explicit return",
    "start": "934440",
    "end": "937160"
  },
  {
    "text": "of metadata signals to grpc that okay",
    "start": "937160",
    "end": "939600"
  },
  {
    "text": "status should be",
    "start": "939600",
    "end": "941560"
  },
  {
    "text": "sent if you encounter a problem while",
    "start": "941560",
    "end": "943839"
  },
  {
    "text": "handling the request then you can throw",
    "start": "943839",
    "end": "945360"
  },
  {
    "text": "an error to which you can also attach",
    "start": "945360",
    "end": "946920"
  },
  {
    "text": "any metadata grpc will return this to",
    "start": "946920",
    "end": "949639"
  },
  {
    "text": "the client as a status and",
    "start": "949639",
    "end": "952079"
  },
  {
    "text": "trailers should you wish to reject the",
    "start": "952079",
    "end": "954199"
  },
  {
    "text": "RPC you can throw an error before the",
    "start": "954199",
    "end": "956120"
  },
  {
    "text": "response which results in the client",
    "start": "956120",
    "end": "957880"
  },
  {
    "text": "receiving only a status and trailing",
    "start": "957880",
    "end": "961480"
  },
  {
    "text": "metadata on the client side the stubs",
    "start": "961480",
    "end": "963560"
  },
  {
    "text": "are similar the UN get method takes a",
    "start": "963560",
    "end": "966279"
  },
  {
    "text": "single client request as input and has a",
    "start": "966279",
    "end": "968240"
  },
  {
    "text": "closure for processing the single client",
    "start": "968240",
    "end": "970560"
  },
  {
    "text": "response any value returned from the",
    "start": "970560",
    "end": "973000"
  },
  {
    "text": "closure is returned back to the caller",
    "start": "973000",
    "end": "975040"
  },
  {
    "text": "once the RPC finishes and the structure",
    "start": "975040",
    "end": "977759"
  },
  {
    "text": "of the response pass to the closure",
    "start": "977759",
    "end": "979560"
  },
  {
    "text": "follows the shape of the protocol an",
    "start": "979560",
    "end": "981920"
  },
  {
    "text": "accepted RPC has its uh message and both",
    "start": "981920",
    "end": "985040"
  },
  {
    "text": "initial and trailing metadata while a",
    "start": "985040",
    "end": "986759"
  },
  {
    "text": "rejected RPC only has its error St datas",
    "start": "986759",
    "end": "989319"
  },
  {
    "text": "and",
    "start": "989319",
    "end": "991480"
  },
  {
    "text": "trailers most users won't need this",
    "start": "991959",
    "end": "994000"
  },
  {
    "text": "granularity though so you can just use",
    "start": "994000",
    "end": "995519"
  },
  {
    "text": "the computed properties on the response",
    "start": "995519",
    "end": "997279"
  },
  {
    "text": "to get what they",
    "start": "997279",
    "end": "999880"
  },
  {
    "text": "need you also aren't required to specify",
    "start": "1000519",
    "end": "1003079"
  },
  {
    "text": "the request object and can just use the",
    "start": "1003079",
    "end": "1004560"
  },
  {
    "text": "simple API which builds it for",
    "start": "1004560",
    "end": "1007000"
  },
  {
    "text": "you and the stubs for methods with a",
    "start": "1007000",
    "end": "1009240"
  },
  {
    "text": "single response also have a default",
    "start": "1009240",
    "end": "1011360"
  },
  {
    "text": "response hand enclosure which just",
    "start": "1011360",
    "end": "1013240"
  },
  {
    "text": "Returns the response message and this is",
    "start": "1013240",
    "end": "1015480"
  },
  {
    "text": "the API which the vast majority of users",
    "start": "1015480",
    "end": "1017560"
  },
  {
    "text": "will reach for message in message",
    "start": "1017560",
    "end": "1020959"
  },
  {
    "text": "out the story is similar for",
    "start": "1020959",
    "end": "1022920"
  },
  {
    "text": "bidirectional streaming rpcs you create",
    "start": "1022920",
    "end": "1024959"
  },
  {
    "text": "a streaming request which takes a",
    "start": "1024959",
    "end": "1026400"
  },
  {
    "text": "closure to write",
    "start": "1026400",
    "end": "1027959"
  },
  {
    "text": "messages you then pass that to the",
    "start": "1027959",
    "end": "1030199"
  },
  {
    "text": "method which has a response Handler",
    "start": "1030199",
    "end": "1031880"
  },
  {
    "text": "where you can access every part of of",
    "start": "1031880",
    "end": "1033678"
  },
  {
    "text": "the",
    "start": "1033679",
    "end": "1034640"
  },
  {
    "text": "stream any value return from the closure",
    "start": "1034640",
    "end": "1037120"
  },
  {
    "text": "is returned to the cooler when the RPC",
    "start": "1037120",
    "end": "1038880"
  },
  {
    "text": "finishes by which point the cooler knows",
    "start": "1038880",
    "end": "1041199"
  },
  {
    "text": "that any Associated resources must have",
    "start": "1041199",
    "end": "1043079"
  },
  {
    "text": "been cleared up this is where structured",
    "start": "1043079",
    "end": "1045520"
  },
  {
    "text": "concurrency shines the lifetimes of the",
    "start": "1045520",
    "end": "1047600"
  },
  {
    "text": "objects are clear and easy to reason",
    "start": "1047600",
    "end": "1050440"
  },
  {
    "text": "about much like the UN example most",
    "start": "1050440",
    "end": "1053039"
  },
  {
    "text": "users don't need this level of",
    "start": "1053039",
    "end": "1054559"
  },
  {
    "text": "granularity and we just want the",
    "start": "1054559",
    "end": "1056200"
  },
  {
    "text": "simplest API which distills down to this",
    "start": "1056200",
    "end": "1059039"
  },
  {
    "text": "two closures one for writing request",
    "start": "1059039",
    "end": "1061360"
  },
  {
    "text": "messages and one for handling response",
    "start": "1061360",
    "end": "1064919"
  },
  {
    "text": "messages this final example shows how to",
    "start": "1064919",
    "end": "1067320"
  },
  {
    "text": "set up a client with an http2 transport",
    "start": "1067320",
    "end": "1069480"
  },
  {
    "text": "and then make a request first we create",
    "start": "1069480",
    "end": "1072200"
  },
  {
    "text": "the",
    "start": "1072200",
    "end": "1072880"
  },
  {
    "text": "client and use an http2 transport",
    "start": "1072880",
    "end": "1075640"
  },
  {
    "text": "targeting an ipv4 address we configure",
    "start": "1075640",
    "end": "1078440"
  },
  {
    "text": "it with with a default config and use",
    "start": "1078440",
    "end": "1080159"
  },
  {
    "text": "the pl text Transport",
    "start": "1080159",
    "end": "1083360"
  },
  {
    "text": "Security the client is run in the",
    "start": "1083559",
    "end": "1085600"
  },
  {
    "text": "background with an async lead when the",
    "start": "1085600",
    "end": "1088120"
  },
  {
    "text": "current scope exits it will cancel the",
    "start": "1088120",
    "end": "1090039"
  },
  {
    "text": "task running the client unless it's",
    "start": "1090039",
    "end": "1091679"
  },
  {
    "text": "explicitly",
    "start": "1091679",
    "end": "1093159"
  },
  {
    "text": "awaited running the client starts the",
    "start": "1093159",
    "end": "1095320"
  },
  {
    "text": "transport which will do name resolution",
    "start": "1095320",
    "end": "1097000"
  },
  {
    "text": "start an appropriate load balancer and",
    "start": "1097000",
    "end": "1098600"
  },
  {
    "text": "maintain any connections to the server",
    "start": "1098600",
    "end": "1101240"
  },
  {
    "text": "this will stop gracefully when",
    "start": "1101240",
    "end": "1102400"
  },
  {
    "text": "instructed to or more abruptly if the",
    "start": "1102400",
    "end": "1104200"
  },
  {
    "text": "task is",
    "start": "1104200",
    "end": "1105520"
  },
  {
    "text": "cancelled we then create an echo",
    "start": "1105520",
    "end": "1107679"
  },
  {
    "text": "wrapping the client",
    "start": "1107679",
    "end": "1109480"
  },
  {
    "text": "and make a request as you saw earlier",
    "start": "1109480",
    "end": "1112080"
  },
  {
    "text": "hopefully this demonstrates how easy it",
    "start": "1112080",
    "end": "1113760"
  },
  {
    "text": "is to get started with grpc",
    "start": "1113760",
    "end": "1116440"
  },
  {
    "text": "swift to recap we rewrote grpc Swift to",
    "start": "1116440",
    "end": "1120679"
  },
  {
    "text": "take advantage of modern Swift it has",
    "start": "1120679",
    "end": "1123240"
  },
  {
    "text": "expressive easy to use apis which are",
    "start": "1123240",
    "end": "1126080"
  },
  {
    "text": "approachable for new users and extend to",
    "start": "1126080",
    "end": "1128760"
  },
  {
    "text": "the complex use cases required by expert",
    "start": "1128760",
    "end": "1131840"
  },
  {
    "text": "users Swift's concurrency features have",
    "start": "1131840",
    "end": "1134280"
  },
  {
    "text": "allowed us to design apis which are easy",
    "start": "1134280",
    "end": "1136240"
  },
  {
    "text": "to reason about and catch data races",
    "start": "1136240",
    "end": "1138440"
  },
  {
    "text": "that pile time making it easier for",
    "start": "1138440",
    "end": "1140720"
  },
  {
    "text": "users to write correct concurrent grpc",
    "start": "1140720",
    "end": "1144080"
  },
  {
    "text": "applications the library as a whole is",
    "start": "1144080",
    "end": "1146200"
  },
  {
    "text": "also in a better place it provides more",
    "start": "1146200",
    "end": "1148360"
  },
  {
    "text": "standard features out of the box",
    "start": "1148360",
    "end": "1149880"
  },
  {
    "text": "including some we couldn't easily add to",
    "start": "1149880",
    "end": "1151840"
  },
  {
    "text": "the first",
    "start": "1151840",
    "end": "1153880"
  },
  {
    "text": "version finally I'd like to mention some",
    "start": "1153880",
    "end": "1156080"
  },
  {
    "text": "things we learned along the way the",
    "start": "1156080",
    "end": "1158520"
  },
  {
    "text": "first is that rewrites offer a great",
    "start": "1158520",
    "end": "1160159"
  },
  {
    "text": "opportunity to fix a set of problems but",
    "start": "1160159",
    "end": "1162559"
  },
  {
    "text": "can bring with them a whole set of other",
    "start": "1162559",
    "end": "1164320"
  },
  {
    "text": "problems so make sure you're fixing the",
    "start": "1164320",
    "end": "1166080"
  },
  {
    "text": "right problems and that the rewrite will",
    "start": "1166080",
    "end": "1167679"
  },
  {
    "text": "stick",
    "start": "1167679",
    "end": "1169720"
  },
  {
    "text": "perhaps unsurprisingly rewrites are also",
    "start": "1169720",
    "end": "1171679"
  },
  {
    "text": "a lot of work we spent a lot of time",
    "start": "1171679",
    "end": "1174200"
  },
  {
    "text": "upfront prototyping designing and",
    "start": "1174200",
    "end": "1175760"
  },
  {
    "text": "planning which I think is paid off but",
    "start": "1175760",
    "end": "1177600"
  },
  {
    "text": "time will be the real",
    "start": "1177600",
    "end": "1179240"
  },
  {
    "text": "test having a set of principles to guide",
    "start": "1179240",
    "end": "1181720"
  },
  {
    "text": "the project has also been great if we",
    "start": "1181720",
    "end": "1183880"
  },
  {
    "text": "were unsure in our approach then",
    "start": "1183880",
    "end": "1185280"
  },
  {
    "text": "referring back to these often made",
    "start": "1185280",
    "end": "1186919"
  },
  {
    "text": "things uh",
    "start": "1186919",
    "end": "1188799"
  },
  {
    "text": "clearer we also learned that having",
    "start": "1188799",
    "end": "1190760"
  },
  {
    "text": "non-functional prototypes so you and",
    "start": "1190760",
    "end": "1192679"
  },
  {
    "text": "others can try out the apis is",
    "start": "1192679",
    "end": "1194159"
  },
  {
    "text": "incredibly valuable doubly so if you",
    "start": "1194159",
    "end": "1196440"
  },
  {
    "text": "apply them to existing use cases",
    "start": "1196440",
    "end": "1200200"
  },
  {
    "text": "different perspectives help a lot so",
    "start": "1200200",
    "end": "1201720"
  },
  {
    "text": "getting feedback from collaborators and",
    "start": "1201720",
    "end": "1203240"
  },
  {
    "text": "users early in the process was also",
    "start": "1203240",
    "end": "1205120"
  },
  {
    "text": "really",
    "start": "1205120",
    "end": "1206600"
  },
  {
    "text": "helpful incremental milestones and goals",
    "start": "1206600",
    "end": "1209120"
  },
  {
    "text": "have also been great having something to",
    "start": "1209120",
    "end": "1210760"
  },
  {
    "text": "aim towards helped us remain focused and",
    "start": "1210760",
    "end": "1213080"
  },
  {
    "text": "having goals which lend themselves to",
    "start": "1213080",
    "end": "1214679"
  },
  {
    "text": "demos helped us to get targeted feedback",
    "start": "1214679",
    "end": "1216640"
  },
  {
    "text": "along the way so what's",
    "start": "1216640",
    "end": "1219320"
  },
  {
    "text": "next we still have some development work",
    "start": "1219320",
    "end": "1221520"
  },
  {
    "text": "left to do but we plan on tagging an",
    "start": "1221520",
    "end": "1223039"
  },
  {
    "text": "alpha release soon after Swift 6 is",
    "start": "1223039",
    "end": "1225280"
  },
  {
    "text": "released and our aim is to tag V2 early",
    "start": "1225280",
    "end": "1228000"
  },
  {
    "text": "next year",
    "start": "1228000",
    "end": "1229400"
  },
  {
    "text": "we're also looking for feedback so",
    "start": "1229400",
    "end": "1230880"
  },
  {
    "text": "please try out the library the project",
    "start": "1230880",
    "end": "1232440"
  },
  {
    "text": "is on GitHub where you'll find a getting",
    "start": "1232440",
    "end": "1234120"
  },
  {
    "text": "started guide for v2 and with that I'd",
    "start": "1234120",
    "end": "1236400"
  },
  {
    "text": "like to thank you for your",
    "start": "1236400",
    "end": "1239280"
  },
  {
    "text": "[Applause]",
    "start": "1241140",
    "end": "1244219"
  },
  {
    "text": "attention um so very nice API uh so in",
    "start": "1246360",
    "end": "1250520"
  },
  {
    "text": "your one of the first slides you",
    "start": "1250520",
    "end": "1252280"
  },
  {
    "text": "mentioned there are so many",
    "start": "1252280",
    "end": "1253520"
  },
  {
    "text": "disadvantages over RAR ride so one of",
    "start": "1253520",
    "end": "1256039"
  },
  {
    "text": "them was I think migration so do have",
    "start": "1256039",
    "end": "1258679"
  },
  {
    "text": "you thought about the migration story",
    "start": "1258679",
    "end": "1260440"
  },
  {
    "text": "and any tooling or other uh thoughts",
    "start": "1260440",
    "end": "1263360"
  },
  {
    "text": "around it yeah um thank you it's a great",
    "start": "1263360",
    "end": "1266280"
  },
  {
    "text": "question we have thought a little bit",
    "start": "1266280",
    "end": "1268159"
  },
  {
    "text": "about migration um we need to write down",
    "start": "1268159",
    "end": "1271520"
  },
  {
    "text": "our plan but the our current thinking is",
    "start": "1271520",
    "end": "1274320"
  },
  {
    "text": "that V2 will exist in source with V1 for",
    "start": "1274320",
    "end": "1277200"
  },
  {
    "text": "a while so that you can migrate Services",
    "start": "1277200",
    "end": "1279840"
  },
  {
    "text": "sort of one at a time um this is a",
    "start": "1279840",
    "end": "1283200"
  },
  {
    "text": "little bit unfortunate but that's just",
    "start": "1283200",
    "end": "1285159"
  },
  {
    "text": "the way it's going to be uh and then we",
    "start": "1285159",
    "end": "1286840"
  },
  {
    "text": "think over time we're probably going to",
    "start": "1286840",
    "end": "1288760"
  },
  {
    "text": "sort of phase that out and effectively",
    "start": "1288760",
    "end": "1291159"
  },
  {
    "text": "remove V1 from that Branch so um",
    "start": "1291159",
    "end": "1295080"
  },
  {
    "text": "there'll be a time where you can have",
    "start": "1295080",
    "end": "1297440"
  },
  {
    "text": "sort of both V1 and V2 running at the",
    "start": "1297440",
    "end": "1299720"
  },
  {
    "text": "same time um but that will really just",
    "start": "1299720",
    "end": "1301960"
  },
  {
    "text": "be to migrate to V2 in terms of tooling",
    "start": "1301960",
    "end": "1305320"
  },
  {
    "text": "we haven't looked into this yet um I",
    "start": "1305320",
    "end": "1307760"
  },
  {
    "text": "think generally it might be quite",
    "start": "1307760",
    "end": "1309720"
  },
  {
    "text": "difficult to do in uh sort of in a way",
    "start": "1309720",
    "end": "1313360"
  },
  {
    "text": "that covers all bases um part of this is",
    "start": "1313360",
    "end": "1316799"
  },
  {
    "text": "simply because you have to move to a",
    "start": "1316799",
    "end": "1318600"
  },
  {
    "text": "more structured approach so I think",
    "start": "1318600",
    "end": "1320720"
  },
  {
    "text": "that's difficult to do with",
    "start": "1320720",
    "end": "1323760"
  },
  {
    "text": "tooling hi thanks um hey so how do you",
    "start": "1324279",
    "end": "1328919"
  },
  {
    "text": "build this I I I mean I recalled there",
    "start": "1328919",
    "end": "1331360"
  },
  {
    "text": "were just multiple different ways there",
    "start": "1331360",
    "end": "1334000"
  },
  {
    "text": "used to be Coco pods um and I guess the",
    "start": "1334000",
    "end": "1337080"
  },
  {
    "text": "question is how are you building it and",
    "start": "1337080",
    "end": "1338880"
  },
  {
    "text": "how are uh Swift grpc users doing their",
    "start": "1338880",
    "end": "1342799"
  },
  {
    "text": "builds just with the Swift package",
    "start": "1342799",
    "end": "1345240"
  },
  {
    "text": "manager uh Coco pods is sort of so",
    "start": "1345240",
    "end": "1347880"
  },
  {
    "text": "slowly being phased out lots of packages",
    "start": "1347880",
    "end": "1350000"
  },
  {
    "text": "are no longer supporting it um",
    "start": "1350000",
    "end": "1352440"
  },
  {
    "text": "everyone's really coalescing around uh",
    "start": "1352440",
    "end": "1355039"
  },
  {
    "text": "Swift swift package I guess other things",
    "start": "1355039",
    "end": "1356880"
  },
  {
    "text": "might be basil or",
    "start": "1356880",
    "end": "1359440"
  },
  {
    "text": "xcode yeah so um xcode has support for",
    "start": "1359440",
    "end": "1363760"
  },
  {
    "text": "Swift PM s of directly so you can open a",
    "start": "1363760",
    "end": "1366200"
  },
  {
    "text": "swift package in xcode and uh you can",
    "start": "1366200",
    "end": "1369360"
  },
  {
    "text": "include that as part of your xcode",
    "start": "1369360",
    "end": "1371159"
  },
  {
    "text": "project",
    "start": "1371159",
    "end": "1372840"
  },
  {
    "text": "um there is some support for Swift in",
    "start": "1372840",
    "end": "1375600"
  },
  {
    "text": "basil I'm not sure how mature that is I",
    "start": "1375600",
    "end": "1377840"
  },
  {
    "text": "haven't used that",
    "start": "1377840",
    "end": "1380440"
  },
  {
    "text": "personally thanks and then one last",
    "start": "1380480",
    "end": "1382559"
  },
  {
    "text": "thing is um if if I wanted to put this",
    "start": "1382559",
    "end": "1385760"
  },
  {
    "text": "build something with Swift and run it in",
    "start": "1385760",
    "end": "1387679"
  },
  {
    "text": "a container um are there a lot of are",
    "start": "1387679",
    "end": "1390880"
  },
  {
    "text": "there examples that I could look to are",
    "start": "1390880",
    "end": "1392960"
  },
  {
    "text": "there any known problems with doing",
    "start": "1392960",
    "end": "1394760"
  },
  {
    "text": "container builds and running them um",
    "start": "1394760",
    "end": "1397559"
  },
  {
    "text": "like like distributions that are best",
    "start": "1397559",
    "end": "1400720"
  },
  {
    "text": "like you know will this work with Arch",
    "start": "1400720",
    "end": "1402360"
  },
  {
    "text": "or or",
    "start": "1402360",
    "end": "1404159"
  },
  {
    "text": "various embedded linuxes good question",
    "start": "1404159",
    "end": "1407679"
  },
  {
    "text": "um",
    "start": "1407679",
    "end": "1410440"
  },
  {
    "text": "there have previously been issues in the",
    "start": "1410559",
    "end": "1412919"
  },
  {
    "text": "past um I think these have all been",
    "start": "1412919",
    "end": "1415440"
  },
  {
    "text": "resolved now so I don't think there are",
    "start": "1415440",
    "end": "1417440"
  },
  {
    "text": "currently any issues to doing this",
    "start": "1417440",
    "end": "1420559"
  },
  {
    "text": "um I also don't think we have any",
    "start": "1420559",
    "end": "1422840"
  },
  {
    "text": "examples at the moment of how to do this",
    "start": "1422840",
    "end": "1424400"
  },
  {
    "text": "maybe we should add some to the",
    "start": "1424400",
    "end": "1425720"
  },
  {
    "text": "repository uh I guess that's something",
    "start": "1425720",
    "end": "1427600"
  },
  {
    "text": "to do but it should just you know be a",
    "start": "1427600",
    "end": "1429720"
  },
  {
    "text": "normal sort of standard flow that",
    "start": "1429720",
    "end": "1432600"
  },
  {
    "text": "there's nothing exciting there I think",
    "start": "1432600",
    "end": "1434960"
  },
  {
    "text": "yeah I think it would be a general Swift",
    "start": "1434960",
    "end": "1436679"
  },
  {
    "text": "issue like some some uh you know GB",
    "start": "1436679",
    "end": "1440080"
  },
  {
    "text": "dependency or something that Swift has",
    "start": "1440080",
    "end": "1442120"
  },
  {
    "text": "that might mismatch what's in the",
    "start": "1442120",
    "end": "1445240"
  },
  {
    "text": "distributions that's true I there are uh",
    "start": "1445240",
    "end": "1447960"
  },
  {
    "text": "a bunch of different containers for",
    "start": "1447960",
    "end": "1449200"
  },
  {
    "text": "Swift targeting uh different different",
    "start": "1449200",
    "end": "1452279"
  },
  {
    "text": "distributions uh there are also um there",
    "start": "1452279",
    "end": "1456320"
  },
  {
    "text": "are also sort of slim versions of these",
    "start": "1456320",
    "end": "1457880"
  },
  {
    "text": "images as well U so you can copy your",
    "start": "1457880",
    "end": "1460000"
  },
  {
    "text": "binary over",
    "start": "1460000",
    "end": "1463400"
  },
  {
    "text": "hi thank you very much for the talk um",
    "start": "1470360",
    "end": "1473000"
  },
  {
    "text": "so I know you primarily was thinking",
    "start": "1473000",
    "end": "1475039"
  },
  {
    "text": "about the server use case but I'm",
    "start": "1475039",
    "end": "1476720"
  },
  {
    "text": "wondering also about the potentially",
    "start": "1476720",
    "end": "1478399"
  },
  {
    "text": "Mobile use as well so I wonder if you",
    "start": "1478399",
    "end": "1481120"
  },
  {
    "text": "know have any knowledge on the existing",
    "start": "1481120",
    "end": "1483919"
  },
  {
    "text": "adoption of the V1 library because when",
    "start": "1483919",
    "end": "1486360"
  },
  {
    "text": "I searched Google I saw some people are",
    "start": "1486360",
    "end": "1487960"
  },
  {
    "text": "using it for mobile as well and how the",
    "start": "1487960",
    "end": "1490720"
  },
  {
    "text": "V2 compareed to that in terms of",
    "start": "1490720",
    "end": "1492559"
  },
  {
    "text": "usability on mobile and uh have you",
    "start": "1492559",
    "end": "1494679"
  },
  {
    "text": "given any thought about mobile adoption",
    "start": "1494679",
    "end": "1497880"
  },
  {
    "text": "uh that's a great",
    "start": "1497880",
    "end": "1500279"
  },
  {
    "text": "question we haven't given any special",
    "start": "1500279",
    "end": "1502520"
  },
  {
    "text": "thought to mobile adoption um so Swift",
    "start": "1502520",
    "end": "1506120"
  },
  {
    "text": "Neo uh which underpins our http2",
    "start": "1506120",
    "end": "1508600"
  },
  {
    "text": "transport uh there's a version of that",
    "start": "1508600",
    "end": "1510640"
  },
  {
    "text": "which is built on top of Apple's uh",
    "start": "1510640",
    "end": "1512320"
  },
  {
    "text": "Network framework rather than using uh",
    "start": "1512320",
    "end": "1514919"
  },
  {
    "text": "sockets directly so that certainly works",
    "start": "1514919",
    "end": "1518600"
  },
  {
    "text": "better on iOS and so on",
    "start": "1518600",
    "end": "1524158"
  },
  {
    "text": "um I think there are",
    "start": "1524399",
    "end": "1526919"
  },
  {
    "text": "some other things we can do to improve",
    "start": "1526919",
    "end": "1529640"
  },
  {
    "text": "the support for this so um there are",
    "start": "1529640",
    "end": "1532320"
  },
  {
    "text": "things that Network framework offers",
    "start": "1532320",
    "end": "1533840"
  },
  {
    "text": "that we don't necessarily take full",
    "start": "1533840",
    "end": "1535320"
  },
  {
    "text": "advantage of yet so this is perhaps",
    "start": "1535320",
    "end": "1536919"
  },
  {
    "text": "something we also need to look into a",
    "start": "1536919",
    "end": "1538240"
  },
  {
    "text": "little bit",
    "start": "1538240",
    "end": "1540120"
  },
  {
    "text": "more thank you but just to clarify would",
    "start": "1540120",
    "end": "1543279"
  },
  {
    "text": "the new library work on mobile it's just",
    "start": "1543279",
    "end": "1545679"
  },
  {
    "text": "not may not be optimized that's correct",
    "start": "1545679",
    "end": "1548399"
  },
  {
    "text": "yeah so it it should work uh just like",
    "start": "1548399",
    "end": "1550840"
  },
  {
    "text": "the current version does it has you know",
    "start": "1550840",
    "end": "1552840"
  },
  {
    "text": "a similar set of dependencies",
    "start": "1552840",
    "end": "1556600"
  },
  {
    "text": "great right thank you very much",
    "start": "1564480",
    "end": "1567420"
  },
  {
    "text": "[Applause]",
    "start": "1567420",
    "end": "1571239"
  }
]