[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hello everyone welcome to math session",
    "start": "160",
    "end": "3760"
  },
  {
    "text": "this is javon from huawei cloud",
    "start": "3760",
    "end": "6879"
  },
  {
    "text": "kinetic is the most popular serverless",
    "start": "6879",
    "end": "9760"
  },
  {
    "text": "projector in the cloud native world",
    "start": "9760",
    "end": "12160"
  },
  {
    "text": "today",
    "start": "12160",
    "end": "13200"
  },
  {
    "text": "as canadian has some terrific future for",
    "start": "13200",
    "end": "16320"
  },
  {
    "text": "example portable",
    "start": "16320",
    "end": "18400"
  },
  {
    "text": "when compared with other",
    "start": "18400",
    "end": "20800"
  },
  {
    "text": "service platform",
    "start": "20800",
    "end": "22640"
  },
  {
    "text": "at huawei cloud we built a service",
    "start": "22640",
    "end": "25279"
  },
  {
    "text": "platform based on canadian there are",
    "start": "25279",
    "end": "27599"
  },
  {
    "text": "tens of thousands of workloads running",
    "start": "27599",
    "end": "30400"
  },
  {
    "text": "on enough when we are building this",
    "start": "30400",
    "end": "32880"
  },
  {
    "text": "platform we found that improving the",
    "start": "32880",
    "end": "35920"
  },
  {
    "text": "performance and minimizing the",
    "start": "35920",
    "end": "38320"
  },
  {
    "text": "operational overhead are the key",
    "start": "38320",
    "end": "40399"
  },
  {
    "text": "challenges",
    "start": "40399",
    "end": "41760"
  },
  {
    "text": "in this sharing we will go over first",
    "start": "41760",
    "end": "45039"
  },
  {
    "text": "how to minimize memory when you use",
    "start": "45039",
    "end": "48399"
  },
  {
    "text": "energy and the second how to improve the",
    "start": "48399",
    "end": "51360"
  },
  {
    "text": "performance of kinetic hearing grad",
    "start": "51360",
    "end": "52960"
  },
  {
    "text": "state data plane",
    "start": "52960",
    "end": "56840"
  },
  {
    "start": "58000",
    "end": "144000"
  },
  {
    "text": "so what is the service",
    "start": "58719",
    "end": "61920"
  },
  {
    "text": "for many people service means for aws",
    "start": "61920",
    "end": "65920"
  },
  {
    "text": "lambda or function as a service which is",
    "start": "65920",
    "end": "69439"
  },
  {
    "text": "called fast",
    "start": "69439",
    "end": "70960"
  },
  {
    "text": "but let's abstract this concept a little",
    "start": "70960",
    "end": "74000"
  },
  {
    "text": "bit higher and more general",
    "start": "74000",
    "end": "77040"
  },
  {
    "text": "cotton size",
    "start": "77040",
    "end": "78880"
  },
  {
    "text": "so this is a method enables resources to",
    "start": "78880",
    "end": "82159"
  },
  {
    "text": "be used as an opec",
    "start": "82159",
    "end": "84960"
  },
  {
    "text": "fortunately unlimited",
    "start": "84960",
    "end": "87119"
  },
  {
    "text": "in the shareport that is continuously",
    "start": "87119",
    "end": "89840"
  },
  {
    "text": "available without otherwise provisioning",
    "start": "89840",
    "end": "92880"
  },
  {
    "text": "and the pricing in the units of the",
    "start": "92880",
    "end": "95439"
  },
  {
    "text": "compute consumed the active service",
    "start": "95439",
    "end": "99040"
  },
  {
    "text": "boss is a part of the service world but",
    "start": "99040",
    "end": "103280"
  },
  {
    "text": "it is not the whole world",
    "start": "103280",
    "end": "105680"
  },
  {
    "text": "gartner also said the evolution of cloud",
    "start": "105680",
    "end": "109360"
  },
  {
    "text": "container service is towards distributed",
    "start": "109360",
    "end": "112640"
  },
  {
    "text": "cloud and the server list",
    "start": "112640",
    "end": "114960"
  },
  {
    "text": "as you can see from this slide",
    "start": "114960",
    "end": "118719"
  },
  {
    "text": "some vendors have released multiple",
    "start": "118719",
    "end": "122159"
  },
  {
    "text": "serverless",
    "start": "122159",
    "end": "124240"
  },
  {
    "text": "service containers",
    "start": "124240",
    "end": "126159"
  },
  {
    "text": "multiple servlets container service for",
    "start": "126159",
    "end": "128720"
  },
  {
    "text": "example aws target and like a google",
    "start": "128720",
    "end": "131440"
  },
  {
    "text": "cloud run the main concern about",
    "start": "131440",
    "end": "134080"
  },
  {
    "text": "servlets of us is when they're locked in",
    "start": "134080",
    "end": "136879"
  },
  {
    "text": "and the kinetic is designed to eliminate",
    "start": "136879",
    "end": "140319"
  },
  {
    "text": "it",
    "start": "140319",
    "end": "141040"
  },
  {
    "text": "so water is connected",
    "start": "141040",
    "end": "145120"
  },
  {
    "start": "144000",
    "end": "228000"
  },
  {
    "text": "let's have a look out of canadia",
    "start": "145120",
    "end": "148000"
  },
  {
    "text": "a native is the most popular",
    "start": "148000",
    "end": "151120"
  },
  {
    "text": "service platform according to cncf 30",
    "start": "151120",
    "end": "154160"
  },
  {
    "text": "2019",
    "start": "154160",
    "end": "156400"
  },
  {
    "text": "it is more",
    "start": "156400",
    "end": "158160"
  },
  {
    "text": "popular than the second one on the list",
    "start": "158160",
    "end": "160959"
  },
  {
    "text": "of the installable software in use",
    "start": "160959",
    "end": "164080"
  },
  {
    "text": "connected with the tool of choice",
    "start": "164080",
    "end": "166640"
  },
  {
    "text": "followed by open files and",
    "start": "166640",
    "end": "168840"
  },
  {
    "text": "kuberlease initial has two components",
    "start": "168840",
    "end": "172879"
  },
  {
    "text": "serving and inventing they break the",
    "start": "172879",
    "end": "176400"
  },
  {
    "text": "work together to",
    "start": "176400",
    "end": "179040"
  },
  {
    "text": "automate and manage tasks and",
    "start": "179040",
    "end": "181360"
  },
  {
    "text": "applications",
    "start": "181360",
    "end": "182959"
  },
  {
    "text": "serving components helps us to run",
    "start": "182959",
    "end": "185360"
  },
  {
    "text": "surface containers in kubernetes with",
    "start": "185360",
    "end": "187599"
  },
  {
    "text": "ease",
    "start": "187599",
    "end": "188720"
  },
  {
    "text": "a native takes care of the details of",
    "start": "188720",
    "end": "191440"
  },
  {
    "text": "networking",
    "start": "191440",
    "end": "193040"
  },
  {
    "text": "auto scaling even can scale to zero and",
    "start": "193040",
    "end": "196720"
  },
  {
    "text": "revision tracking teams can only focus",
    "start": "196720",
    "end": "199920"
  },
  {
    "text": "on core logic using any",
    "start": "199920",
    "end": "202959"
  },
  {
    "text": "programming languages",
    "start": "202959",
    "end": "205280"
  },
  {
    "text": "in one team condensed contains universal",
    "start": "205280",
    "end": "208879"
  },
  {
    "text": "subscription delivery and management of",
    "start": "208879",
    "end": "212400"
  },
  {
    "text": "influence",
    "start": "212400",
    "end": "213519"
  },
  {
    "text": "it builds modern apps by attaching",
    "start": "213519",
    "end": "215920"
  },
  {
    "text": "compute to a data stream with",
    "start": "215920",
    "end": "218319"
  },
  {
    "text": "declarative inventor connectivity and",
    "start": "218319",
    "end": "221760"
  },
  {
    "text": "the developer",
    "start": "221760",
    "end": "223120"
  },
  {
    "text": "and the developer friendly object models",
    "start": "223120",
    "end": "228000"
  },
  {
    "start": "228000",
    "end": "292000"
  },
  {
    "text": "in huawei cloud we are continuously",
    "start": "229599",
    "end": "232720"
  },
  {
    "text": "innovating",
    "start": "232720",
    "end": "234400"
  },
  {
    "text": "cloud native we are the only founding",
    "start": "234400",
    "end": "237680"
  },
  {
    "text": "member in the first platinum member from",
    "start": "237680",
    "end": "241040"
  },
  {
    "text": "asia of cloud native computing",
    "start": "241040",
    "end": "243040"
  },
  {
    "text": "foundation",
    "start": "243040",
    "end": "244560"
  },
  {
    "text": "top 1 by committed code in asia and the",
    "start": "244560",
    "end": "247760"
  },
  {
    "text": "top one",
    "start": "247760",
    "end": "248959"
  },
  {
    "text": "the number of",
    "start": "248959",
    "end": "250879"
  },
  {
    "text": "by the number of project maintenances in",
    "start": "250879",
    "end": "253760"
  },
  {
    "text": "asia",
    "start": "253760",
    "end": "255200"
  },
  {
    "text": "always quote",
    "start": "255200",
    "end": "257440"
  },
  {
    "text": "huawei cloud also open",
    "start": "257440",
    "end": "260479"
  },
  {
    "text": "sources its capabilities in the cloud",
    "start": "260479",
    "end": "263280"
  },
  {
    "text": "native field to a diverse range of",
    "start": "263280",
    "end": "266880"
  },
  {
    "text": "industries such as cooperage volcano and",
    "start": "266880",
    "end": "271120"
  },
  {
    "text": "commander",
    "start": "271120",
    "end": "272320"
  },
  {
    "text": "now",
    "start": "272320",
    "end": "273199"
  },
  {
    "text": "we are building a service platform based",
    "start": "273199",
    "end": "276320"
  },
  {
    "text": "on canadian",
    "start": "276320",
    "end": "277840"
  },
  {
    "text": "we met many challenges for example",
    "start": "277840",
    "end": "281440"
  },
  {
    "text": "and so on",
    "start": "281440",
    "end": "282880"
  },
  {
    "text": "in this sharing we will only focus on",
    "start": "282880",
    "end": "286400"
  },
  {
    "text": "two of these challenges memory overhead",
    "start": "286400",
    "end": "289600"
  },
  {
    "text": "and the performance loss",
    "start": "289600",
    "end": "293040"
  },
  {
    "text": "so",
    "start": "293440",
    "end": "294320"
  },
  {
    "text": "now let's look at forecaster about two",
    "start": "294320",
    "end": "298560"
  },
  {
    "text": "challenges",
    "start": "298560",
    "end": "299840"
  },
  {
    "text": "the architecture of connective survey is",
    "start": "299840",
    "end": "303280"
  },
  {
    "text": "shown in the figure",
    "start": "303280",
    "end": "305120"
  },
  {
    "text": "the user signed a request to the online",
    "start": "305120",
    "end": "308320"
  },
  {
    "text": "gateway and the right gateway forwards",
    "start": "308320",
    "end": "311680"
  },
  {
    "text": "the request to the corresponding code",
    "start": "311680",
    "end": "314880"
  },
  {
    "text": "according to the routing rules",
    "start": "314880",
    "end": "318000"
  },
  {
    "text": "initial serving provides automatically",
    "start": "318000",
    "end": "321360"
  },
  {
    "text": "scaling",
    "start": "321360",
    "end": "322560"
  },
  {
    "text": "for applications to match incoming",
    "start": "322560",
    "end": "325199"
  },
  {
    "text": "demand the auto scaler will",
    "start": "325199",
    "end": "328320"
  },
  {
    "text": "collect",
    "start": "328320",
    "end": "329600"
  },
  {
    "text": "specific metrics from hosts to make",
    "start": "329600",
    "end": "332800"
  },
  {
    "text": "skill decisions",
    "start": "332800",
    "end": "334639"
  },
  {
    "text": "in canadian our report has a proxy site",
    "start": "334639",
    "end": "338320"
  },
  {
    "text": "car which is called hill proxy",
    "start": "338320",
    "end": "341759"
  },
  {
    "text": "it has following functionalities",
    "start": "341759",
    "end": "345600"
  },
  {
    "text": "it's recording the",
    "start": "345600",
    "end": "347520"
  },
  {
    "text": "concurrency request for auto scaling and",
    "start": "347520",
    "end": "350720"
  },
  {
    "text": "buffering the request to improve to",
    "start": "350720",
    "end": "353680"
  },
  {
    "text": "improve the user content and concurrency",
    "start": "353680",
    "end": "355840"
  },
  {
    "text": "limit and recording some metrics such as",
    "start": "355840",
    "end": "359280"
  },
  {
    "text": "latency",
    "start": "359280",
    "end": "360639"
  },
  {
    "text": "we did a simple test and found that",
    "start": "360639",
    "end": "364240"
  },
  {
    "text": "we need to concurrency requests increase",
    "start": "364240",
    "end": "368000"
  },
  {
    "text": "the memory resource resources required",
    "start": "368000",
    "end": "370639"
  },
  {
    "text": "by q proxy also increase",
    "start": "370639",
    "end": "373600"
  },
  {
    "text": "moreover even in the absence of any",
    "start": "373600",
    "end": "376880"
  },
  {
    "text": "requests your proxy still requires about",
    "start": "376880",
    "end": "380560"
  },
  {
    "text": "20 megabytes in",
    "start": "380560",
    "end": "382960"
  },
  {
    "text": "of memory base",
    "start": "382960",
    "end": "385280"
  },
  {
    "text": "imagine that",
    "start": "385280",
    "end": "386960"
  },
  {
    "text": "in the cluster of 10 000 the instance",
    "start": "386960",
    "end": "391680"
  },
  {
    "text": "our q proxies will take up more than 200",
    "start": "391680",
    "end": "395680"
  },
  {
    "text": "gigabytes of memory space and this is",
    "start": "395680",
    "end": "399039"
  },
  {
    "text": "the actual",
    "start": "399039",
    "end": "400479"
  },
  {
    "text": "memory overhead brought by the cube",
    "start": "400479",
    "end": "402880"
  },
  {
    "text": "proxy",
    "start": "402880",
    "end": "405440"
  },
  {
    "start": "404000",
    "end": "518000"
  },
  {
    "text": "a native serving provides two ways to",
    "start": "405600",
    "end": "408240"
  },
  {
    "text": "configure the results request of q proxy",
    "start": "408240",
    "end": "411360"
  },
  {
    "text": "the first is fix the configuration in",
    "start": "411360",
    "end": "414720"
  },
  {
    "text": "this way all cube proxy will have the",
    "start": "414720",
    "end": "417759"
  },
  {
    "text": "same results request configuration and",
    "start": "417759",
    "end": "420639"
  },
  {
    "text": "the second is proportional configuration",
    "start": "420639",
    "end": "424000"
  },
  {
    "text": "in this way the required results of q",
    "start": "424000",
    "end": "427120"
  },
  {
    "text": "proxy is determined by",
    "start": "427120",
    "end": "429759"
  },
  {
    "text": "user container instance",
    "start": "429759",
    "end": "432720"
  },
  {
    "text": "for example if we citing 50",
    "start": "432720",
    "end": "436400"
  },
  {
    "text": "the user container requests",
    "start": "436400",
    "end": "439440"
  },
  {
    "text": "uh for example 100 megabytes memory then",
    "start": "439440",
    "end": "444000"
  },
  {
    "text": "the q proxy will request 50 megabytes",
    "start": "444000",
    "end": "448080"
  },
  {
    "text": "it is worth noting however",
    "start": "448080",
    "end": "451599"
  },
  {
    "text": "that the ability of a user container to",
    "start": "451599",
    "end": "455199"
  },
  {
    "text": "handle requests is not only determined",
    "start": "455199",
    "end": "458319"
  },
  {
    "text": "by resource allocation",
    "start": "458319",
    "end": "460720"
  },
  {
    "text": "even if the size awful for",
    "start": "460720",
    "end": "463599"
  },
  {
    "text": "even if the same size of the results are",
    "start": "463599",
    "end": "467039"
  },
  {
    "text": "allocated",
    "start": "467039",
    "end": "469039"
  },
  {
    "text": "the number of requests for different",
    "start": "469039",
    "end": "471599"
  },
  {
    "text": "applications and price compresses",
    "start": "471599",
    "end": "475120"
  },
  {
    "text": "may vary greatly",
    "start": "475120",
    "end": "477440"
  },
  {
    "text": "which means on the one hand",
    "start": "477440",
    "end": "480080"
  },
  {
    "text": "some qproxy doesn't have enough",
    "start": "480080",
    "end": "482319"
  },
  {
    "text": "resources to handle incoming requests",
    "start": "482319",
    "end": "485520"
  },
  {
    "text": "resulting in low",
    "start": "485520",
    "end": "487840"
  },
  {
    "text": "memory utilization of user container on",
    "start": "487840",
    "end": "491520"
  },
  {
    "text": "the other hand some q proxy may have too",
    "start": "491520",
    "end": "494479"
  },
  {
    "text": "much resources",
    "start": "494479",
    "end": "496000"
  },
  {
    "text": "resulting in",
    "start": "496000",
    "end": "498400"
  },
  {
    "text": "which will result in a low memory",
    "start": "498400",
    "end": "501000"
  },
  {
    "text": "utilization of field proxy itself",
    "start": "501000",
    "end": "504879"
  },
  {
    "text": "so anyway",
    "start": "504879",
    "end": "506720"
  },
  {
    "text": "there is a resource-based team problem",
    "start": "506720",
    "end": "510400"
  },
  {
    "text": "and",
    "start": "510400",
    "end": "511280"
  },
  {
    "text": "how to maximize the",
    "start": "511280",
    "end": "513760"
  },
  {
    "text": "resource utilization",
    "start": "513760",
    "end": "517279"
  },
  {
    "start": "518000",
    "end": "582000"
  },
  {
    "text": "in order to fix the problem of ball we",
    "start": "519200",
    "end": "522240"
  },
  {
    "text": "make q proxy at node level instead of as",
    "start": "522240",
    "end": "526240"
  },
  {
    "text": "that car",
    "start": "526240",
    "end": "527440"
  },
  {
    "text": "our user container pose in the same pole",
    "start": "527440",
    "end": "530399"
  },
  {
    "text": "in the same node shardest nodes of q",
    "start": "530399",
    "end": "532880"
  },
  {
    "text": "proxy as left figure",
    "start": "532880",
    "end": "535200"
  },
  {
    "text": "node",
    "start": "535200",
    "end": "536080"
  },
  {
    "text": "field proxy will ask autoscaler to scale",
    "start": "536080",
    "end": "539839"
  },
  {
    "text": "based on its resource usage",
    "start": "539839",
    "end": "543200"
  },
  {
    "text": "this method has the following advantages",
    "start": "543200",
    "end": "546959"
  },
  {
    "text": "user container results can be fully used",
    "start": "546959",
    "end": "551040"
  },
  {
    "text": "in the node few proxy results all mostly",
    "start": "551040",
    "end": "554320"
  },
  {
    "text": "can be fully used",
    "start": "554320",
    "end": "556800"
  },
  {
    "text": "the much less resource cost when q proxy",
    "start": "556800",
    "end": "560240"
  },
  {
    "text": "is in idle even if there are many addo",
    "start": "560240",
    "end": "564480"
  },
  {
    "text": "instances on the node that is",
    "start": "564480",
    "end": "567519"
  },
  {
    "text": "the ato means the polar dash doesn't",
    "start": "567519",
    "end": "570959"
  },
  {
    "text": "precise any requests",
    "start": "570959",
    "end": "573279"
  },
  {
    "text": "there only",
    "start": "573279",
    "end": "574480"
  },
  {
    "text": "be one node view proxy instance on the",
    "start": "574480",
    "end": "577200"
  },
  {
    "text": "nodes which can save a lot of resources",
    "start": "577200",
    "end": "582240"
  },
  {
    "start": "582000",
    "end": "651000"
  },
  {
    "text": "now let's look at the other challenge",
    "start": "583600",
    "end": "586800"
  },
  {
    "text": "performance loss",
    "start": "586800",
    "end": "588640"
  },
  {
    "text": "as shown in the figure",
    "start": "588640",
    "end": "590560"
  },
  {
    "text": "the user standard request to the gateway",
    "start": "590560",
    "end": "593519"
  },
  {
    "text": "which fill which forwards the request",
    "start": "593519",
    "end": "597680"
  },
  {
    "text": "to the q proxy in the corresponding code",
    "start": "597680",
    "end": "601279"
  },
  {
    "text": "and then the q proxy for was requested",
    "start": "601279",
    "end": "604560"
  },
  {
    "text": "to the user container in the simplest",
    "start": "604560",
    "end": "607839"
  },
  {
    "text": "compared with director size to user",
    "start": "607839",
    "end": "610720"
  },
  {
    "text": "container",
    "start": "610720",
    "end": "611920"
  },
  {
    "text": "the traffic forwarding pass in",
    "start": "611920",
    "end": "614880"
  },
  {
    "text": "connective is longer",
    "start": "614880",
    "end": "616800"
  },
  {
    "text": "which will bring spring performance loss",
    "start": "616800",
    "end": "621120"
  },
  {
    "text": "the latency for users sending requests",
    "start": "621120",
    "end": "624320"
  },
  {
    "text": "to a y is affected greatly by the",
    "start": "624320",
    "end": "627200"
  },
  {
    "text": "internet so we only focus the following",
    "start": "627200",
    "end": "631040"
  },
  {
    "text": "two",
    "start": "631040",
    "end": "632720"
  },
  {
    "text": "performance loss points",
    "start": "632720",
    "end": "634560"
  },
  {
    "text": "one",
    "start": "634560",
    "end": "635360"
  },
  {
    "text": "is the latency from the gateway to the",
    "start": "635360",
    "end": "638160"
  },
  {
    "text": "cube proxy and the other is the latency",
    "start": "638160",
    "end": "641600"
  },
  {
    "text": "from the cube proxy to the user",
    "start": "641600",
    "end": "643760"
  },
  {
    "text": "container",
    "start": "643760",
    "end": "645600"
  },
  {
    "text": "we optimize the performance for these",
    "start": "645600",
    "end": "648079"
  },
  {
    "text": "two points to keep two points",
    "start": "648079",
    "end": "652240"
  },
  {
    "start": "651000",
    "end": "720000"
  },
  {
    "text": "in order to optimize the latency from",
    "start": "652480",
    "end": "655519"
  },
  {
    "text": "roi to",
    "start": "655519",
    "end": "657040"
  },
  {
    "text": "pure proxy we have tried many methods",
    "start": "657040",
    "end": "661200"
  },
  {
    "text": "including cpu bondings",
    "start": "661200",
    "end": "663600"
  },
  {
    "text": "turning off some unnecessary additional",
    "start": "663600",
    "end": "666880"
  },
  {
    "text": "functions and they're rebalancing the",
    "start": "666880",
    "end": "669279"
  },
  {
    "text": "listener of ny",
    "start": "669279",
    "end": "671760"
  },
  {
    "text": "the optimized and ry has obviously",
    "start": "671760",
    "end": "674800"
  },
  {
    "text": "improvement in ups and latency",
    "start": "674800",
    "end": "678320"
  },
  {
    "text": "how to fix the qbs for example",
    "start": "678320",
    "end": "682640"
  },
  {
    "text": "for 4 000",
    "start": "682640",
    "end": "684640"
  },
  {
    "text": "uvs the optimized roi has significantly",
    "start": "684640",
    "end": "688880"
  },
  {
    "text": "lower latency than the native worldwide",
    "start": "688880",
    "end": "691839"
  },
  {
    "text": "the latency of top 19 of not top 90",
    "start": "691839",
    "end": "696240"
  },
  {
    "text": "percent can be reduced by up to 40",
    "start": "696240",
    "end": "699440"
  },
  {
    "text": "percent",
    "start": "699440",
    "end": "700640"
  },
  {
    "text": "one qps is at unlimited",
    "start": "700640",
    "end": "704800"
  },
  {
    "text": "compared with the native and white the",
    "start": "704800",
    "end": "707200"
  },
  {
    "text": "qbs of the optimizer and why is",
    "start": "707200",
    "end": "710320"
  },
  {
    "text": "significantly improved also",
    "start": "710320",
    "end": "713279"
  },
  {
    "text": "and the qps increased",
    "start": "713279",
    "end": "715600"
  },
  {
    "text": "can reach",
    "start": "715600",
    "end": "716880"
  },
  {
    "text": "100 percent",
    "start": "716880",
    "end": "720079"
  },
  {
    "start": "720000",
    "end": "800000"
  },
  {
    "text": "in addition we use evpf to",
    "start": "721120",
    "end": "724720"
  },
  {
    "text": "accelerate the data transmission from",
    "start": "724720",
    "end": "727360"
  },
  {
    "text": "cube proxy to user container as we can",
    "start": "727360",
    "end": "730320"
  },
  {
    "text": "see from the left figure with cube proxy",
    "start": "730320",
    "end": "734000"
  },
  {
    "text": "running as a sidecar in a traditional",
    "start": "734000",
    "end": "736560"
  },
  {
    "text": "network the path a packet has to take to",
    "start": "736560",
    "end": "740959"
  },
  {
    "text": "reach the user container is the priority",
    "start": "740959",
    "end": "744399"
  },
  {
    "text": "tortures",
    "start": "744399",
    "end": "745760"
  },
  {
    "text": "an inbound package has to transverse the",
    "start": "745760",
    "end": "748880"
  },
  {
    "text": "host tcpip stack",
    "start": "748880",
    "end": "751760"
  },
  {
    "text": "to reach the post network namespace will",
    "start": "751760",
    "end": "755519"
  },
  {
    "text": "award short",
    "start": "755519",
    "end": "756839"
  },
  {
    "text": "slighter connection and go through the",
    "start": "756839",
    "end": "759680"
  },
  {
    "text": "network stack of opposed to reach the",
    "start": "759680",
    "end": "763200"
  },
  {
    "text": "cube proxy sidecar which forwards a",
    "start": "763200",
    "end": "766320"
  },
  {
    "text": "package through the loopback interface",
    "start": "766320",
    "end": "769120"
  },
  {
    "text": "to reach the user container",
    "start": "769120",
    "end": "771600"
  },
  {
    "text": "with ebpf we hoop we hook up our program",
    "start": "771600",
    "end": "776079"
  },
  {
    "text": "to circuit operations in the kernel",
    "start": "776079",
    "end": "778720"
  },
  {
    "text": "which can record sockets in a hashmap",
    "start": "778720",
    "end": "782000"
  },
  {
    "text": "and redirect the package according to",
    "start": "782000",
    "end": "784880"
  },
  {
    "text": "that map when the package",
    "start": "784880",
    "end": "787519"
  },
  {
    "text": "arrives on the wholesale our program",
    "start": "787519",
    "end": "790399"
  },
  {
    "text": "will dispatch it strictly to its",
    "start": "790399",
    "end": "792880"
  },
  {
    "text": "destination this much more direct solute",
    "start": "792880",
    "end": "796320"
  },
  {
    "text": "will result in lower latency",
    "start": "796320",
    "end": "800600"
  },
  {
    "start": "800000",
    "end": "845000"
  },
  {
    "text": "no that's all and we have some",
    "start": "801519",
    "end": "805120"
  },
  {
    "text": "some works to do in the future we have",
    "start": "805120",
    "end": "808000"
  },
  {
    "text": "submitted some",
    "start": "808000",
    "end": "809519"
  },
  {
    "text": "some we have submitted some full",
    "start": "809519",
    "end": "811600"
  },
  {
    "text": "requests to fake fake box or to",
    "start": "811600",
    "end": "814480"
  },
  {
    "text": "employment feature to the kinetic",
    "start": "814480",
    "end": "817279"
  },
  {
    "text": "community before and we look and we",
    "start": "817279",
    "end": "820560"
  },
  {
    "text": "would like to contribute more in the",
    "start": "820560",
    "end": "822959"
  },
  {
    "text": "future in addition we are trying to",
    "start": "822959",
    "end": "826160"
  },
  {
    "text": "software hardware",
    "start": "826160",
    "end": "829040"
  },
  {
    "text": "inner scenery to provide the best",
    "start": "829040",
    "end": "831920"
  },
  {
    "text": "quality efficiency to all users",
    "start": "831920",
    "end": "834959"
  },
  {
    "text": "to make more users benefit from the",
    "start": "834959",
    "end": "837440"
  },
  {
    "text": "service is our constant goal",
    "start": "837440",
    "end": "842279"
  },
  {
    "text": "thank you for your listening",
    "start": "842560",
    "end": "846440"
  }
]