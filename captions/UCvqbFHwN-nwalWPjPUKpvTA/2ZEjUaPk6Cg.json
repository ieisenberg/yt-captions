[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "hello everyone welcome to today's",
    "start": "240",
    "end": "2820"
  },
  {
    "text": "webinar talk",
    "start": "2820",
    "end": "4620"
  },
  {
    "text": "I'm ji Chun shu the CTO of Dayton Lord",
    "start": "4620",
    "end": "9840"
  },
  {
    "text": "Titan load is a startup company focusing",
    "start": "9840",
    "end": "13139"
  },
  {
    "text": "on the cross-cloud storage solutions",
    "start": "13139",
    "end": "16980"
  },
  {
    "text": "today I'm glad to introduce a new",
    "start": "16980",
    "end": "19320"
  },
  {
    "text": "metadata management system",
    "start": "19320",
    "end": "21539"
  },
  {
    "text": "beautiful the geo-distributed",
    "start": "21539",
    "end": "23400"
  },
  {
    "text": "environment",
    "start": "23400",
    "end": "24660"
  },
  {
    "text": "named X line",
    "start": "24660",
    "end": "27960"
  },
  {
    "start": "27000",
    "end": "65000"
  },
  {
    "text": "here is today's main contents",
    "start": "27960",
    "end": "31080"
  },
  {
    "text": "first I will introduce a Project's",
    "start": "31080",
    "end": "33840"
  },
  {
    "text": "background",
    "start": "33840",
    "end": "34980"
  },
  {
    "text": "Sky Computing",
    "start": "34980",
    "end": "37020"
  },
  {
    "text": "and show how it changes the landscape of",
    "start": "37020",
    "end": "40500"
  },
  {
    "text": "cloud native environment",
    "start": "40500",
    "end": "43200"
  },
  {
    "text": "then I will analyze the current cloud",
    "start": "43200",
    "end": "45600"
  },
  {
    "text": "native metadata management system",
    "start": "45600",
    "end": "48660"
  },
  {
    "text": "etcd",
    "start": "48660",
    "end": "51200"
  },
  {
    "text": "and its limitation in geo-distributed",
    "start": "51480",
    "end": "54360"
  },
  {
    "text": "environment",
    "start": "54360",
    "end": "56219"
  },
  {
    "text": "and finally",
    "start": "56219",
    "end": "57660"
  },
  {
    "text": "I will try to dive into today's topic X",
    "start": "57660",
    "end": "60899"
  },
  {
    "text": "line",
    "start": "60899",
    "end": "62100"
  },
  {
    "text": "the new meta data management system",
    "start": "62100",
    "end": "66180"
  },
  {
    "start": "65000",
    "end": "246000"
  },
  {
    "text": "so first let's talk about Sky Computing",
    "start": "66180",
    "end": "70799"
  },
  {
    "text": "what is Sky Computing",
    "start": "70799",
    "end": "73920"
  },
  {
    "text": "it's a way to view Computing as",
    "start": "73920",
    "end": "76760"
  },
  {
    "text": "utilities and infrastructures",
    "start": "76760",
    "end": "80280"
  },
  {
    "text": "just like telephone service",
    "start": "80280",
    "end": "83640"
  },
  {
    "text": "do we use phone service from different",
    "start": "83640",
    "end": "85740"
  },
  {
    "text": "companies",
    "start": "85740",
    "end": "87900"
  },
  {
    "text": "we get the same service interface the",
    "start": "87900",
    "end": "91080"
  },
  {
    "text": "phone number",
    "start": "91080",
    "end": "92280"
  },
  {
    "text": "the phone card",
    "start": "92280",
    "end": "94080"
  },
  {
    "text": "we can easily migrate from one company",
    "start": "94080",
    "end": "96960"
  },
  {
    "text": "service to another while keeping the",
    "start": "96960",
    "end": "100079"
  },
  {
    "text": "phone number",
    "start": "100079",
    "end": "102619"
  },
  {
    "text": "but what is the situation",
    "start": "102780",
    "end": "105720"
  },
  {
    "text": "in Computing area",
    "start": "105720",
    "end": "107939"
  },
  {
    "text": "we have cloud computing companies",
    "start": "107939",
    "end": "111479"
  },
  {
    "text": "which provide Cloud platforms",
    "start": "111479",
    "end": "114960"
  },
  {
    "text": "we provide hundreds of services",
    "start": "114960",
    "end": "118079"
  },
  {
    "text": "and many of them have private apis",
    "start": "118079",
    "end": "121979"
  },
  {
    "text": "which means the application developed",
    "start": "121979",
    "end": "125700"
  },
  {
    "text": "for one platform",
    "start": "125700",
    "end": "127740"
  },
  {
    "text": "cannot run on the other",
    "start": "127740",
    "end": "130560"
  },
  {
    "text": "without any change",
    "start": "130560",
    "end": "133980"
  },
  {
    "text": "so Sky Computing is a way of breaking",
    "start": "133980",
    "end": "137340"
  },
  {
    "text": "the barriers of clouds",
    "start": "137340",
    "end": "139620"
  },
  {
    "text": "trying to make Cloud app be written once",
    "start": "139620",
    "end": "142920"
  },
  {
    "text": "and run everywhere",
    "start": "142920",
    "end": "146840"
  },
  {
    "text": "however people barely heard Sky",
    "start": "147000",
    "end": "149819"
  },
  {
    "text": "Computing these years",
    "start": "149819",
    "end": "151800"
  },
  {
    "text": "the reason is simple",
    "start": "151800",
    "end": "153959"
  },
  {
    "text": "that every cloud computing company is",
    "start": "153959",
    "end": "157500"
  },
  {
    "text": "trying to building trying to build a war",
    "start": "157500",
    "end": "161420"
  },
  {
    "text": "locking the users inside the private API",
    "start": "161420",
    "end": "165360"
  },
  {
    "text": "Garden for commercial reasons",
    "start": "165360",
    "end": "169140"
  },
  {
    "text": "it's not a technical reason",
    "start": "169140",
    "end": "171540"
  },
  {
    "text": "Cloud users are trying to train a way to",
    "start": "171540",
    "end": "175379"
  },
  {
    "text": "leverage resources from multiple clouds",
    "start": "175379",
    "end": "178379"
  },
  {
    "text": "or clusters",
    "start": "178379",
    "end": "180300"
  },
  {
    "text": "the trends are unstoppable",
    "start": "180300",
    "end": "184500"
  },
  {
    "text": "fortunately the situation is changing as",
    "start": "184500",
    "end": "187680"
  },
  {
    "text": "Computing itself is becoming more and",
    "start": "187680",
    "end": "190560"
  },
  {
    "text": "more easier to migrate",
    "start": "190560",
    "end": "194540"
  },
  {
    "text": "for example migrating a container is",
    "start": "194700",
    "end": "198239"
  },
  {
    "text": "pulling an image",
    "start": "198239",
    "end": "199920"
  },
  {
    "text": "it takes a while",
    "start": "199920",
    "end": "202440"
  },
  {
    "text": "but migrating a serverless function is",
    "start": "202440",
    "end": "205379"
  },
  {
    "text": "faster",
    "start": "205379",
    "end": "206640"
  },
  {
    "text": "we just need to upload a piece of code",
    "start": "206640",
    "end": "211099"
  },
  {
    "text": "however compared to the Computing data",
    "start": "212040",
    "end": "215459"
  },
  {
    "text": "moving is not that easy especially",
    "start": "215459",
    "end": "218580"
  },
  {
    "text": "considering data consistent",
    "start": "218580",
    "end": "222319"
  },
  {
    "text": "cross-cloud data access usually means",
    "start": "222319",
    "end": "225000"
  },
  {
    "text": "High latency and low throughput",
    "start": "225000",
    "end": "228599"
  },
  {
    "text": "with that base it's hard to implement",
    "start": "228599",
    "end": "231060"
  },
  {
    "text": "High performed data consistency",
    "start": "231060",
    "end": "234959"
  },
  {
    "text": "our open source project X line",
    "start": "234959",
    "end": "238319"
  },
  {
    "text": "is built to resolve the related issues",
    "start": "238319",
    "end": "242459"
  },
  {
    "text": "trying to bring the sky can build into",
    "start": "242459",
    "end": "244680"
  },
  {
    "text": "the cloud storage",
    "start": "244680",
    "end": "246840"
  },
  {
    "start": "246000",
    "end": "290000"
  },
  {
    "text": "so let's first take a look of current",
    "start": "246840",
    "end": "250439"
  },
  {
    "text": "cloud native metadata management system",
    "start": "250439",
    "end": "254280"
  },
  {
    "text": "etcd",
    "start": "254280",
    "end": "256079"
  },
  {
    "text": "which is a most popular solution",
    "start": "256079",
    "end": "259260"
  },
  {
    "text": "first we will discuss the impact of Sky",
    "start": "259260",
    "end": "262680"
  },
  {
    "text": "Computing to the distributed systems",
    "start": "262680",
    "end": "265440"
  },
  {
    "text": "then we will show how we deploy Etc",
    "start": "265440",
    "end": "268380"
  },
  {
    "text": "service in the multi-cluster scenario",
    "start": "268380",
    "end": "272460"
  },
  {
    "text": "and analyze the disadvantages of these",
    "start": "272460",
    "end": "276000"
  },
  {
    "text": "deployments",
    "start": "276000",
    "end": "278720"
  },
  {
    "text": "and finally we will dive into the",
    "start": "278880",
    "end": "281280"
  },
  {
    "text": "underlying roughter consensus protocol",
    "start": "281280",
    "end": "284220"
  },
  {
    "text": "and tell the root cause of the poor",
    "start": "284220",
    "end": "286919"
  },
  {
    "text": "performance",
    "start": "286919",
    "end": "288120"
  },
  {
    "text": "most distributed system",
    "start": "288120",
    "end": "290520"
  },
  {
    "start": "290000",
    "end": "385000"
  },
  {
    "text": "is developed for the single cluster use",
    "start": "290520",
    "end": "294120"
  },
  {
    "text": "cases",
    "start": "294120",
    "end": "296280"
  },
  {
    "text": "the message passing between servers is",
    "start": "296280",
    "end": "299160"
  },
  {
    "text": "not a big deal",
    "start": "299160",
    "end": "300540"
  },
  {
    "text": "as it usually takes less than one",
    "start": "300540",
    "end": "304380"
  },
  {
    "text": "milliseconds to send a message",
    "start": "304380",
    "end": "307740"
  },
  {
    "text": "unless the throughput is high enough in",
    "start": "307740",
    "end": "310620"
  },
  {
    "text": "most cases",
    "start": "310620",
    "end": "312000"
  },
  {
    "text": "as a result the network is usually not a",
    "start": "312000",
    "end": "315180"
  },
  {
    "text": "bottleneck of the whole system",
    "start": "315180",
    "end": "318419"
  },
  {
    "text": "but the situation changes where Sky",
    "start": "318419",
    "end": "321419"
  },
  {
    "text": "Computing comes more and more",
    "start": "321419",
    "end": "323940"
  },
  {
    "text": "cross-cloud communication appears",
    "start": "323940",
    "end": "327419"
  },
  {
    "text": "and usually is unavoidable",
    "start": "327419",
    "end": "332039"
  },
  {
    "text": "sending a message in that case you only",
    "start": "332039",
    "end": "335100"
  },
  {
    "text": "takes up to hundreds of milliseconds",
    "start": "335100",
    "end": "338580"
  },
  {
    "text": "and the bandwidth is a limited at the",
    "start": "338580",
    "end": "341340"
  },
  {
    "text": "same time",
    "start": "341340",
    "end": "343080"
  },
  {
    "text": "the high latency and the low throughput",
    "start": "343080",
    "end": "345800"
  },
  {
    "text": "leads to the poor performance of the",
    "start": "345800",
    "end": "348300"
  },
  {
    "text": "whole system",
    "start": "348300",
    "end": "350220"
  },
  {
    "text": "now let's take a look of the popular",
    "start": "350220",
    "end": "353340"
  },
  {
    "text": "etcd service",
    "start": "353340",
    "end": "355800"
  },
  {
    "text": "try to deploy the service in multiple",
    "start": "355800",
    "end": "358440"
  },
  {
    "text": "clusters",
    "start": "358440",
    "end": "360900"
  },
  {
    "text": "above vs3 there are two methods",
    "start": "360900",
    "end": "364680"
  },
  {
    "text": "the first is straightforward",
    "start": "364680",
    "end": "367500"
  },
  {
    "text": "we just locate all the edcd servers in",
    "start": "367500",
    "end": "371220"
  },
  {
    "text": "one cluster",
    "start": "371220",
    "end": "373620"
  },
  {
    "text": "the good news is that",
    "start": "373620",
    "end": "375680"
  },
  {
    "text": "requests in that cluster",
    "start": "375680",
    "end": "378539"
  },
  {
    "text": "get the fattest response for that they",
    "start": "378539",
    "end": "382380"
  },
  {
    "text": "are in cluster",
    "start": "382380",
    "end": "385500"
  },
  {
    "start": "385000",
    "end": "478000"
  },
  {
    "text": "the opposite side is requested from the",
    "start": "385500",
    "end": "388680"
  },
  {
    "text": "other clusters suffers a long latency",
    "start": "388680",
    "end": "392360"
  },
  {
    "text": "clients have to wait a long time to",
    "start": "392360",
    "end": "395220"
  },
  {
    "text": "gather the result",
    "start": "395220",
    "end": "398240"
  },
  {
    "text": "besides the performance",
    "start": "398400",
    "end": "400560"
  },
  {
    "text": "this deployment cannot tolerate the",
    "start": "400560",
    "end": "403620"
  },
  {
    "text": "cluster level failure",
    "start": "403620",
    "end": "406819"
  },
  {
    "text": "what is class level failure",
    "start": "406919",
    "end": "410400"
  },
  {
    "text": "that means the whole cluster server",
    "start": "410400",
    "end": "413940"
  },
  {
    "text": "cannot response the request from the",
    "start": "413940",
    "end": "417539"
  },
  {
    "text": "outside",
    "start": "417539",
    "end": "419160"
  },
  {
    "text": "even though the whole cluster servers",
    "start": "419160",
    "end": "421139"
  },
  {
    "text": "fail at the same time is almost",
    "start": "421139",
    "end": "423120"
  },
  {
    "text": "impossible",
    "start": "423120",
    "end": "425120"
  },
  {
    "text": "misconfigured network May isolate the",
    "start": "425120",
    "end": "427919"
  },
  {
    "text": "cluster from the outside world",
    "start": "427919",
    "end": "431479"
  },
  {
    "text": "at the same time we can reach the",
    "start": "431639",
    "end": "435120"
  },
  {
    "text": "service at all even is built with high",
    "start": "435120",
    "end": "437940"
  },
  {
    "text": "availability in mind",
    "start": "437940",
    "end": "441020"
  },
  {
    "text": "unfortunately we've seen that mistake",
    "start": "441120",
    "end": "443460"
  },
  {
    "text": "many times in reality the other way to",
    "start": "443460",
    "end": "446759"
  },
  {
    "text": "deploy the etcd service is to divide the",
    "start": "446759",
    "end": "450479"
  },
  {
    "text": "servers into different clusters",
    "start": "450479",
    "end": "454560"
  },
  {
    "text": "we try to place at least one Etc server",
    "start": "454560",
    "end": "458460"
  },
  {
    "text": "in a cluster",
    "start": "458460",
    "end": "461340"
  },
  {
    "text": "it seems to be a perfect walk around",
    "start": "461340",
    "end": "465300"
  },
  {
    "text": "each cluster has a local Etc server",
    "start": "465300",
    "end": "469080"
  },
  {
    "text": "the client won't suffer the high latency",
    "start": "469080",
    "end": "473220"
  },
  {
    "text": "but at the same time",
    "start": "473220",
    "end": "475560"
  },
  {
    "text": "it can",
    "start": "475560",
    "end": "477900"
  },
  {
    "text": "tolerant the cluster level failure as",
    "start": "477900",
    "end": "480900"
  },
  {
    "start": "478000",
    "end": "510000"
  },
  {
    "text": "minor service failure is not a big deal",
    "start": "480900",
    "end": "483180"
  },
  {
    "text": "for etcd",
    "start": "483180",
    "end": "485280"
  },
  {
    "text": "however the performance of eetcd service",
    "start": "485280",
    "end": "488220"
  },
  {
    "text": "itself drops quite a lot",
    "start": "488220",
    "end": "491220"
  },
  {
    "text": "almost unacceptable",
    "start": "491220",
    "end": "493380"
  },
  {
    "text": "so what's wrong",
    "start": "493380",
    "end": "495780"
  },
  {
    "text": "the answer is the survey service",
    "start": "495780",
    "end": "498180"
  },
  {
    "text": "internal message passing",
    "start": "498180",
    "end": "500460"
  },
  {
    "text": "usually these messages are triggered by",
    "start": "500460",
    "end": "503759"
  },
  {
    "text": "the underlying consensus protocol",
    "start": "503759",
    "end": "506639"
  },
  {
    "text": "raft",
    "start": "506639",
    "end": "508020"
  },
  {
    "text": "which is used for data consistency now",
    "start": "508020",
    "end": "511979"
  },
  {
    "start": "510000",
    "end": "591000"
  },
  {
    "text": "it's a good chance to take a look at",
    "start": "511979",
    "end": "514440"
  },
  {
    "text": "Rough to protocol",
    "start": "514440",
    "end": "516839"
  },
  {
    "text": "then maybe we can find the answer to the",
    "start": "516839",
    "end": "519719"
  },
  {
    "text": "performance job in that protocol",
    "start": "519719",
    "end": "522599"
  },
  {
    "text": "the client sends a message to the",
    "start": "522599",
    "end": "525959"
  },
  {
    "text": "service leader",
    "start": "525959",
    "end": "528420"
  },
  {
    "text": "then the leader broadcasts the message",
    "start": "528420",
    "end": "530580"
  },
  {
    "text": "to all the followers",
    "start": "530580",
    "end": "533160"
  },
  {
    "text": "the leader will wait for the response",
    "start": "533160",
    "end": "535680"
  },
  {
    "text": "from the followers",
    "start": "535680",
    "end": "537899"
  },
  {
    "text": "and to enough okay responses are",
    "start": "537899",
    "end": "540660"
  },
  {
    "text": "collected",
    "start": "540660",
    "end": "543000"
  },
  {
    "text": "finally the leader sends back the result",
    "start": "543000",
    "end": "546360"
  },
  {
    "text": "to the client",
    "start": "546360",
    "end": "548519"
  },
  {
    "text": "the client can send a request to any",
    "start": "548519",
    "end": "551279"
  },
  {
    "text": "server instead of a leader",
    "start": "551279",
    "end": "554339"
  },
  {
    "text": "but considering the followers will",
    "start": "554339",
    "end": "556620"
  },
  {
    "text": "eventually redirected the request to the",
    "start": "556620",
    "end": "558959"
  },
  {
    "text": "leader let's keep the process this way",
    "start": "558959",
    "end": "562140"
  },
  {
    "text": "just for Simplicity to abstract the",
    "start": "562140",
    "end": "565620"
  },
  {
    "text": "process",
    "start": "565620",
    "end": "567600"
  },
  {
    "text": "We Gather the right graph",
    "start": "567600",
    "end": "569820"
  },
  {
    "text": "it's easy to see that to complete a",
    "start": "569820",
    "end": "572640"
  },
  {
    "text": "roughed protocol",
    "start": "572640",
    "end": "574140"
  },
  {
    "text": "there are two round trips",
    "start": "574140",
    "end": "577019"
  },
  {
    "text": "the first is between the client and the",
    "start": "577019",
    "end": "579660"
  },
  {
    "text": "leader",
    "start": "579660",
    "end": "580980"
  },
  {
    "text": "and the second is between the leader and",
    "start": "580980",
    "end": "583080"
  },
  {
    "text": "the followers",
    "start": "583080",
    "end": "585120"
  },
  {
    "text": "both channels are cross-classers",
    "start": "585120",
    "end": "587880"
  },
  {
    "text": "It suffers twice the high latency",
    "start": "587880",
    "end": "591959"
  },
  {
    "text": "now we know edcd cannot work well for",
    "start": "591959",
    "end": "595440"
  },
  {
    "text": "the multi-cluster or geo-distributed",
    "start": "595440",
    "end": "598440"
  },
  {
    "text": "scenarios",
    "start": "598440",
    "end": "599940"
  },
  {
    "text": "can we find a way to work around",
    "start": "599940",
    "end": "603360"
  },
  {
    "text": "X Y is our answer to this question",
    "start": "603360",
    "end": "606959"
  },
  {
    "text": "I will first show the architecture of X",
    "start": "606959",
    "end": "609360"
  },
  {
    "text": "Y",
    "start": "609360",
    "end": "610260"
  },
  {
    "text": "and then analyze underlying curved",
    "start": "610260",
    "end": "612899"
  },
  {
    "text": "protocol",
    "start": "612899",
    "end": "614399"
  },
  {
    "text": "to work with the new protocol we also",
    "start": "614399",
    "end": "617339"
  },
  {
    "text": "need to consider the client-side SDK and",
    "start": "617339",
    "end": "621060"
  },
  {
    "text": "its compatibility",
    "start": "621060",
    "end": "623160"
  },
  {
    "text": "finally we'll show the performance of X",
    "start": "623160",
    "end": "626279"
  },
  {
    "text": "line with a test and a benchmark",
    "start": "626279",
    "end": "630660"
  },
  {
    "text": "in X line",
    "start": "630660",
    "end": "632459"
  },
  {
    "text": "when a client sends a requested to a",
    "start": "632459",
    "end": "635399"
  },
  {
    "text": "server",
    "start": "635399",
    "end": "636420"
  },
  {
    "text": "it routes a requested to the consensus",
    "start": "636420",
    "end": "639300"
  },
  {
    "text": "protocol",
    "start": "639300",
    "end": "640920"
  },
  {
    "text": "once the protocol completes the massive",
    "start": "640920",
    "end": "643320"
  },
  {
    "text": "thinking",
    "start": "643320",
    "end": "645000"
  },
  {
    "text": "the server will try to apply its command",
    "start": "645000",
    "end": "647480"
  },
  {
    "text": "by checking OS first",
    "start": "647480",
    "end": "650760"
  },
  {
    "text": "and then applying the Storage level",
    "start": "650760",
    "end": "653220"
  },
  {
    "text": "change these architecture is used for",
    "start": "653220",
    "end": "656880"
  },
  {
    "text": "etcd compatibility",
    "start": "656880",
    "end": "659459"
  },
  {
    "text": "if we want to achieve better performance",
    "start": "659459",
    "end": "662519"
  },
  {
    "text": "we need to move part of the consensus",
    "start": "662519",
    "end": "664980"
  },
  {
    "text": "protocol to the client part",
    "start": "664980",
    "end": "667200"
  },
  {
    "text": "we will show that later the green part",
    "start": "667200",
    "end": "669899"
  },
  {
    "text": "in the graph is a main innovation of X",
    "start": "669899",
    "end": "672300"
  },
  {
    "text": "line that consensus protocol is called",
    "start": "672300",
    "end": "675000"
  },
  {
    "text": "Curve",
    "start": "675000",
    "end": "676380"
  },
  {
    "start": "676000",
    "end": "881000"
  },
  {
    "text": "curve is Geo distributed friendly",
    "start": "676380",
    "end": "678779"
  },
  {
    "text": "protocol",
    "start": "678779",
    "end": "680279"
  },
  {
    "text": "but how",
    "start": "680279",
    "end": "681779"
  },
  {
    "text": "let's discuss it and drop down way",
    "start": "681779",
    "end": "686160"
  },
  {
    "text": "first is a main idea behind this",
    "start": "686160",
    "end": "689459"
  },
  {
    "text": "protocol",
    "start": "689459",
    "end": "691260"
  },
  {
    "text": "is separating the data duration from the",
    "start": "691260",
    "end": "694560"
  },
  {
    "text": "global artery",
    "start": "694560",
    "end": "696120"
  },
  {
    "text": "let's revisit the rough protocol we",
    "start": "696120",
    "end": "699839"
  },
  {
    "text": "discussed earlier",
    "start": "699839",
    "end": "702180"
  },
  {
    "text": "in raft a committed requester has two",
    "start": "702180",
    "end": "705360"
  },
  {
    "text": "properties",
    "start": "705360",
    "end": "706560"
  },
  {
    "text": "the first is that it will not get lost",
    "start": "706560",
    "end": "708980"
  },
  {
    "text": "if the majority of the cluster Servers",
    "start": "708980",
    "end": "712740"
  },
  {
    "text": "Alive",
    "start": "712740",
    "end": "714300"
  },
  {
    "text": "the second is the ordering of the",
    "start": "714300",
    "end": "717300"
  },
  {
    "text": "request will not get lost or revised if",
    "start": "717300",
    "end": "721200"
  },
  {
    "text": "the majority of the cluster servers",
    "start": "721200",
    "end": "723839"
  },
  {
    "text": "aligned do we need to keep them at the",
    "start": "723839",
    "end": "726120"
  },
  {
    "text": "same time",
    "start": "726120",
    "end": "727680"
  },
  {
    "text": "the answer is no sometimes the second",
    "start": "727680",
    "end": "730980"
  },
  {
    "text": "property ordering is not that important",
    "start": "730980",
    "end": "736200"
  },
  {
    "text": "let's take KV as an example",
    "start": "736200",
    "end": "739500"
  },
  {
    "text": "if two requests are changing different",
    "start": "739500",
    "end": "742140"
  },
  {
    "text": "Keys value",
    "start": "742140",
    "end": "744000"
  },
  {
    "text": "the other one doesn't matter",
    "start": "744000",
    "end": "746880"
  },
  {
    "text": "we will always get the same final result",
    "start": "746880",
    "end": "749700"
  },
  {
    "text": "so exchanging order should be allowed in",
    "start": "749700",
    "end": "753180"
  },
  {
    "text": "this case but if the two requests",
    "start": "753180",
    "end": "756000"
  },
  {
    "text": "conflict with each other changing the",
    "start": "756000",
    "end": "758700"
  },
  {
    "text": "same key the order does matter for the",
    "start": "758700",
    "end": "761940"
  },
  {
    "text": "previous scenario the ordering property",
    "start": "761940",
    "end": "764579"
  },
  {
    "text": "can be skipped the next question is",
    "start": "764579",
    "end": "767700"
  },
  {
    "text": "how do we know whether the request can",
    "start": "767700",
    "end": "770880"
  },
  {
    "text": "be reordered or not",
    "start": "770880",
    "end": "773820"
  },
  {
    "text": "the answer is a speculative execution",
    "start": "773820",
    "end": "776700"
  },
  {
    "text": "pool",
    "start": "776700",
    "end": "778260"
  },
  {
    "text": "every server will check the incoming",
    "start": "778260",
    "end": "780720"
  },
  {
    "text": "request",
    "start": "780720",
    "end": "782579"
  },
  {
    "text": "if it conflicts with requests in the",
    "start": "782579",
    "end": "785279"
  },
  {
    "text": "pool the server replies to the client",
    "start": "785279",
    "end": "788279"
  },
  {
    "text": "telling there is a conflicting otherwise",
    "start": "788279",
    "end": "791100"
  },
  {
    "text": "the request is inserted into the port",
    "start": "791100",
    "end": "795420"
  },
  {
    "text": "when we hit it conflicting the backend",
    "start": "795420",
    "end": "798180"
  },
  {
    "text": "protocol helps or the requester will",
    "start": "798180",
    "end": "801779"
  },
  {
    "text": "also be sent to the backend protocol",
    "start": "801779",
    "end": "804300"
  },
  {
    "text": "that protocol will broadcast as a",
    "start": "804300",
    "end": "807060"
  },
  {
    "text": "requested to all servers",
    "start": "807060",
    "end": "809160"
  },
  {
    "text": "and decide the global ordering",
    "start": "809160",
    "end": "811800"
  },
  {
    "text": "the backend protocol can be any",
    "start": "811800",
    "end": "814019"
  },
  {
    "text": "consensus protocol such as rough and",
    "start": "814019",
    "end": "817440"
  },
  {
    "text": "multi-paxels",
    "start": "817440",
    "end": "819240"
  },
  {
    "text": "here for Simplicity we choose fat",
    "start": "819240",
    "end": "822480"
  },
  {
    "text": "we can see the back end protocol is a",
    "start": "822480",
    "end": "825180"
  },
  {
    "text": "second barrier making sure every request",
    "start": "825180",
    "end": "828540"
  },
  {
    "text": "has its own position in the global",
    "start": "828540",
    "end": "830820"
  },
  {
    "text": "ordering eventually to some to summarize",
    "start": "830820",
    "end": "834240"
  },
  {
    "text": "the curved protocol it tries the",
    "start": "834240",
    "end": "836639"
  },
  {
    "text": "requester optimistically first",
    "start": "836639",
    "end": "840360"
  },
  {
    "text": "if it fails let another consensus",
    "start": "840360",
    "end": "843600"
  },
  {
    "text": "particle handle the rest thing here",
    "start": "843600",
    "end": "847680"
  },
  {
    "text": "the consensus particle is roughed from",
    "start": "847680",
    "end": "850920"
  },
  {
    "text": "the above description we can tell that",
    "start": "850920",
    "end": "853980"
  },
  {
    "text": "the current particle can complete the",
    "start": "853980",
    "end": "856320"
  },
  {
    "text": "consensus in one trip if there are no",
    "start": "856320",
    "end": "859380"
  },
  {
    "text": "conflicting requests",
    "start": "859380",
    "end": "861240"
  },
  {
    "text": "even in the worst case two round trips",
    "start": "861240",
    "end": "863880"
  },
  {
    "text": "are enough as a corporate practical user",
    "start": "863880",
    "end": "866639"
  },
  {
    "text": "X line should provide additional",
    "start": "866639",
    "end": "869220"
  },
  {
    "text": "information to tell whether to request",
    "start": "869220",
    "end": "872160"
  },
  {
    "text": "conflict with each other or not if the",
    "start": "872160",
    "end": "875700"
  },
  {
    "text": "users are using the etcd service they",
    "start": "875700",
    "end": "878880"
  },
  {
    "text": "can switch to XY easily",
    "start": "878880",
    "end": "881519"
  },
  {
    "start": "881000",
    "end": "904000"
  },
  {
    "text": "because xli provides etcd compatible",
    "start": "881519",
    "end": "885180"
  },
  {
    "text": "apis",
    "start": "885180",
    "end": "887040"
  },
  {
    "text": "they are listed in the table",
    "start": "887040",
    "end": "889199"
  },
  {
    "text": "we have implemented",
    "start": "889199",
    "end": "891800"
  },
  {
    "text": "kvos lease watch apis and the others are",
    "start": "891800",
    "end": "896880"
  },
  {
    "text": "in progress the completed parts are the",
    "start": "896880",
    "end": "900060"
  },
  {
    "text": "most useful ones so if you want to have",
    "start": "900060",
    "end": "902760"
  },
  {
    "text": "taste don't hesitate we also provide two",
    "start": "902760",
    "end": "906779"
  },
  {
    "start": "904000",
    "end": "966000"
  },
  {
    "text": "versions of client SDK",
    "start": "906779",
    "end": "909839"
  },
  {
    "text": "if the users don't want to change code",
    "start": "909839",
    "end": "913019"
  },
  {
    "text": "so original as a etc the SDK works well",
    "start": "913019",
    "end": "917459"
  },
  {
    "text": "with X Y",
    "start": "917459",
    "end": "919320"
  },
  {
    "text": "so only drawback of this option is that",
    "start": "919320",
    "end": "922860"
  },
  {
    "text": "the performance is also the same as etcd",
    "start": "922860",
    "end": "927060"
  },
  {
    "text": "because two round trips",
    "start": "927060",
    "end": "929639"
  },
  {
    "text": "message passing happens if you are",
    "start": "929639",
    "end": "932579"
  },
  {
    "text": "searching the best performance of X line",
    "start": "932579",
    "end": "935760"
  },
  {
    "text": "you should use X Y SDK",
    "start": "935760",
    "end": "939420"
  },
  {
    "text": "whose programmer interface is very",
    "start": "939420",
    "end": "941880"
  },
  {
    "text": "similar to the etcd",
    "start": "941880",
    "end": "944699"
  },
  {
    "text": "with limited code change your",
    "start": "944699",
    "end": "947639"
  },
  {
    "text": "application should work with X Y",
    "start": "947639",
    "end": "951480"
  },
  {
    "text": "in the X line SDK",
    "start": "951480",
    "end": "953760"
  },
  {
    "text": "the client side is also a part of a",
    "start": "953760",
    "end": "956519"
  },
  {
    "text": "corporate protocol",
    "start": "956519",
    "end": "957959"
  },
  {
    "text": "it ascends a request to All the known",
    "start": "957959",
    "end": "960660"
  },
  {
    "text": "servers",
    "start": "960660",
    "end": "962160"
  },
  {
    "text": "so one round trip is enough for Lucky",
    "start": "962160",
    "end": "965279"
  },
  {
    "text": "requests",
    "start": "965279",
    "end": "966720"
  },
  {
    "text": "though we know X line should outperform",
    "start": "966720",
    "end": "970260"
  },
  {
    "text": "etcd in multi-cluster scenario",
    "start": "970260",
    "end": "972720"
  },
  {
    "text": "theoretically",
    "start": "972720",
    "end": "975000"
  },
  {
    "text": "we have to demonstrate it with tests and",
    "start": "975000",
    "end": "978240"
  },
  {
    "text": "benchmarks",
    "start": "978240",
    "end": "980160"
  },
  {
    "text": "here's how we build the Benchmark",
    "start": "980160",
    "end": "981959"
  },
  {
    "text": "environment",
    "start": "981959",
    "end": "984180"
  },
  {
    "text": "we simulated the multi-clusters network",
    "start": "984180",
    "end": "986399"
  },
  {
    "text": "latency",
    "start": "986399",
    "end": "987899"
  },
  {
    "text": "making Intel server communication",
    "start": "987899",
    "end": "990120"
  },
  {
    "text": "latency 50 milliseconds",
    "start": "990120",
    "end": "993600"
  },
  {
    "text": "and at the same time the client should",
    "start": "993600",
    "end": "996480"
  },
  {
    "text": "not be in the same cluster of the",
    "start": "996480",
    "end": "998820"
  },
  {
    "text": "servers the communication latency",
    "start": "998820",
    "end": "1000980"
  },
  {
    "text": "between client and the servers is 50",
    "start": "1000980",
    "end": "1004279"
  },
  {
    "text": "milliseconds",
    "start": "1004279",
    "end": "1005680"
  },
  {
    "text": "or 75 milliseconds",
    "start": "1005680",
    "end": "1009440"
  },
  {
    "text": "actually the latency is larger in",
    "start": "1009440",
    "end": "1012380"
  },
  {
    "text": "reality",
    "start": "1012380",
    "end": "1013399"
  },
  {
    "text": "we tested two cases",
    "start": "1013399",
    "end": "1016220"
  },
  {
    "text": "the left is the worst one and the right",
    "start": "1016220",
    "end": "1019220"
  },
  {
    "text": "is a regular one",
    "start": "1019220",
    "end": "1021800"
  },
  {
    "text": "in the worst case all clients send the",
    "start": "1021800",
    "end": "1025660"
  },
  {
    "text": "requests changing the same key",
    "start": "1025660",
    "end": "1029178"
  },
  {
    "text": "curbs the speculative exclusion poor",
    "start": "1029179",
    "end": "1031760"
  },
  {
    "text": "can't handle any of them",
    "start": "1031760",
    "end": "1034459"
  },
  {
    "text": "so it works the same as raft",
    "start": "1034459",
    "end": "1037640"
  },
  {
    "text": "just like the result shoes x lines",
    "start": "1037640",
    "end": "1040819"
  },
  {
    "text": "throughput is almost the same as etcd",
    "start": "1040819",
    "end": "1045678"
  },
  {
    "text": "in the regular case clients are randomly",
    "start": "1045679",
    "end": "1048740"
  },
  {
    "text": "pick a key from 100",
    "start": "1048740",
    "end": "1053419"
  },
  {
    "text": "000 key space",
    "start": "1053419",
    "end": "1055400"
  },
  {
    "text": "as a result there's almost no key",
    "start": "1055400",
    "end": "1058580"
  },
  {
    "text": "complexion",
    "start": "1058580",
    "end": "1059900"
  },
  {
    "text": "in this scenario explain taples a",
    "start": "1059900",
    "end": "1063200"
  },
  {
    "text": "throughput as expected because the",
    "start": "1063200",
    "end": "1066080"
  },
  {
    "text": "latency is halved",
    "start": "1066080",
    "end": "1068179"
  },
  {
    "text": "in the real world it's almost impossible",
    "start": "1068179",
    "end": "1071539"
  },
  {
    "text": "to make the worst case",
    "start": "1071539",
    "end": "1073640"
  },
  {
    "text": "now we have demonstrated X line is",
    "start": "1073640",
    "end": "1077260"
  },
  {
    "text": "geo-disputed friendly",
    "start": "1077260",
    "end": "1079580"
  },
  {
    "start": "1079000",
    "end": "1151000"
  },
  {
    "text": "here is our roadmap",
    "start": "1079580",
    "end": "1082220"
  },
  {
    "text": "last year we implemented the major API",
    "start": "1082220",
    "end": "1085820"
  },
  {
    "text": "VTC deal for X line",
    "start": "1085820",
    "end": "1088880"
  },
  {
    "text": "we plan to add more features this year",
    "start": "1088880",
    "end": "1092179"
  },
  {
    "text": "such as persistent storage support",
    "start": "1092179",
    "end": "1095480"
  },
  {
    "text": "snapshot support",
    "start": "1095480",
    "end": "1097520"
  },
  {
    "text": "and the cluster membership changing",
    "start": "1097520",
    "end": "1099860"
  },
  {
    "text": "support",
    "start": "1099860",
    "end": "1101120"
  },
  {
    "text": "men's club features are not listed here",
    "start": "1101120",
    "end": "1103820"
  },
  {
    "text": "but one thing is clear",
    "start": "1103820",
    "end": "1106220"
  },
  {
    "text": "in 2023 our main task is to make clax",
    "start": "1106220",
    "end": "1110960"
  },
  {
    "text": "live feature complete",
    "start": "1110960",
    "end": "1113539"
  },
  {
    "text": "and the next year we want to make system",
    "start": "1113539",
    "end": "1115880"
  },
  {
    "text": "more robust",
    "start": "1115880",
    "end": "1117740"
  },
  {
    "text": "so we plan to bring in the chaos",
    "start": "1117740",
    "end": "1119960"
  },
  {
    "text": "engineering",
    "start": "1119960",
    "end": "1121280"
  },
  {
    "text": "helping validate the system at the same",
    "start": "1121280",
    "end": "1124100"
  },
  {
    "text": "time",
    "start": "1124100",
    "end": "1124880"
  },
  {
    "text": "we want to help more and more cloudy",
    "start": "1124880",
    "end": "1128240"
  },
  {
    "text": "native components to integrate with X",
    "start": "1128240",
    "end": "1132620"
  },
  {
    "text": "line",
    "start": "1132620",
    "end": "1133640"
  },
  {
    "text": "bringing Sky Computing to Cloud natively",
    "start": "1133640",
    "end": "1136760"
  },
  {
    "text": "eventually",
    "start": "1136760",
    "end": "1139220"
  },
  {
    "text": "the right up corner is our open source",
    "start": "1139220",
    "end": "1141799"
  },
  {
    "text": "link",
    "start": "1141799",
    "end": "1142640"
  },
  {
    "text": "welcome to join the community and",
    "start": "1142640",
    "end": "1145580"
  },
  {
    "text": "contribute to it",
    "start": "1145580",
    "end": "1147860"
  },
  {
    "text": "that's all for today's talk",
    "start": "1147860",
    "end": "1150020"
  },
  {
    "text": "thanks for your time",
    "start": "1150020",
    "end": "1153039"
  }
]