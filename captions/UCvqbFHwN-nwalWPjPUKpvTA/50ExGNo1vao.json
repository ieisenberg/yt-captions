[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "hi there thanks for joining us today",
    "start": "1120",
    "end": "3679"
  },
  {
    "text": "this is wish from the thai tv community",
    "start": "3679",
    "end": "7120"
  },
  {
    "text": "i'm an infrastructure engineer at pincap",
    "start": "7120",
    "end": "9440"
  },
  {
    "text": "and also a co-contributor of taiki",
    "start": "9440",
    "end": "11440"
  },
  {
    "text": "projects",
    "start": "11440",
    "end": "12880"
  },
  {
    "text": "i'm very glad to share how we improved",
    "start": "12880",
    "end": "15120"
  },
  {
    "start": "15000",
    "end": "116000"
  },
  {
    "text": "thai kv observability with my colleague",
    "start": "15120",
    "end": "17359"
  },
  {
    "text": "john shoe",
    "start": "17359",
    "end": "19680"
  },
  {
    "text": "recently we add tracing events to the",
    "start": "19680",
    "end": "22240"
  },
  {
    "text": "tag kv with very little overhead",
    "start": "22240",
    "end": "24560"
  },
  {
    "text": "let's say only a few nanoseconds per",
    "start": "24560",
    "end": "26640"
  },
  {
    "text": "event",
    "start": "26640",
    "end": "27760"
  },
  {
    "text": "and we would like to show you about how",
    "start": "27760",
    "end": "29679"
  },
  {
    "text": "we did it",
    "start": "29679",
    "end": "31039"
  },
  {
    "text": "hopefully this is helpful",
    "start": "31039",
    "end": "34399"
  },
  {
    "text": "first let me introduce you the techie",
    "start": "35840",
    "end": "37840"
  },
  {
    "text": "project we are working with",
    "start": "37840",
    "end": "40079"
  },
  {
    "text": "tachvi is a key value database it is",
    "start": "40079",
    "end": "42640"
  },
  {
    "text": "distributed",
    "start": "42640",
    "end": "43760"
  },
  {
    "text": "transactional and open source it has",
    "start": "43760",
    "end": "46879"
  },
  {
    "text": "recently became a graduated cncf project",
    "start": "46879",
    "end": "51120"
  },
  {
    "text": "so far there are more than 8 000 stars",
    "start": "51120",
    "end": "53760"
  },
  {
    "text": "and more than 200 contributors",
    "start": "53760",
    "end": "55920"
  },
  {
    "text": "in github",
    "start": "55920",
    "end": "59120"
  },
  {
    "text": "as a key value database thai kv accepts",
    "start": "59120",
    "end": "62320"
  },
  {
    "text": "key value read and write requests",
    "start": "62320",
    "end": "65439"
  },
  {
    "text": "for example get and put",
    "start": "65439",
    "end": "68560"
  },
  {
    "text": "sometimes there are details a writer",
    "start": "68560",
    "end": "71439"
  },
  {
    "text": "request",
    "start": "71439",
    "end": "72000"
  },
  {
    "text": "may suddenly take long time while most",
    "start": "72000",
    "end": "74400"
  },
  {
    "text": "others are normal",
    "start": "74400",
    "end": "76320"
  },
  {
    "text": "this can be caused by different reasons",
    "start": "76320",
    "end": "78640"
  },
  {
    "text": "and we would like to know why",
    "start": "78640",
    "end": "81119"
  },
  {
    "text": "now we have logging and matrix",
    "start": "81119",
    "end": "84720"
  },
  {
    "text": "logging is not very useful in this case",
    "start": "84720",
    "end": "87680"
  },
  {
    "text": "it is usually hard to link logs",
    "start": "87680",
    "end": "90240"
  },
  {
    "text": "related to a single request together",
    "start": "90240",
    "end": "94159"
  },
  {
    "text": "and for matrix sometimes it is not",
    "start": "94159",
    "end": "96400"
  },
  {
    "text": "useful as well",
    "start": "96400",
    "end": "98320"
  },
  {
    "text": "measure is only reveal aggregated",
    "start": "98320",
    "end": "100400"
  },
  {
    "text": "information like average latency",
    "start": "100400",
    "end": "103360"
  },
  {
    "text": "and when multiple payloads are mixed",
    "start": "103360",
    "end": "105520"
  },
  {
    "text": "together",
    "start": "105520",
    "end": "106479"
  },
  {
    "text": "adjusted from a single request is hidden",
    "start": "106479",
    "end": "111118"
  },
  {
    "text": "so as a result we want to use quiz to",
    "start": "111280",
    "end": "114000"
  },
  {
    "text": "know how data happens",
    "start": "114000",
    "end": "117200"
  },
  {
    "start": "116000",
    "end": "187000"
  },
  {
    "text": "takeaway is written in us and there are",
    "start": "118240",
    "end": "120560"
  },
  {
    "text": "multiple tracing libraries available",
    "start": "120560",
    "end": "122799"
  },
  {
    "text": "these libraries are compatible with",
    "start": "122799",
    "end": "124640"
  },
  {
    "text": "urban tracing or urban telemetry",
    "start": "124640",
    "end": "127759"
  },
  {
    "text": "this seemed to be nice but we",
    "start": "127759",
    "end": "130239"
  },
  {
    "text": "immediately missed some challenges",
    "start": "130239",
    "end": "132640"
  },
  {
    "text": "and the most tough one is performance",
    "start": "132640",
    "end": "136560"
  },
  {
    "text": "data happens very rarely for example",
    "start": "136560",
    "end": "138640"
  },
  {
    "text": "only once a week",
    "start": "138640",
    "end": "139920"
  },
  {
    "text": "this means we need to trace all requests",
    "start": "139920",
    "end": "142959"
  },
  {
    "text": "in order to not miss it and as a key",
    "start": "142959",
    "end": "146000"
  },
  {
    "text": "value database",
    "start": "146000",
    "end": "147440"
  },
  {
    "text": "each request takes very short time only",
    "start": "147440",
    "end": "150400"
  },
  {
    "text": "a few microseconds",
    "start": "150400",
    "end": "153200"
  },
  {
    "text": "thus the tracing facility must be super",
    "start": "153200",
    "end": "155760"
  },
  {
    "text": "efficient",
    "start": "155760",
    "end": "156480"
  },
  {
    "text": "negligible compared to a few micro",
    "start": "156480",
    "end": "158400"
  },
  {
    "text": "seconds",
    "start": "158400",
    "end": "160799"
  },
  {
    "text": "the second challenge is that there are",
    "start": "161280",
    "end": "163200"
  },
  {
    "text": "multiple batch systems in taiqa",
    "start": "163200",
    "end": "166720"
  },
  {
    "text": "for example these systems receive",
    "start": "166720",
    "end": "168720"
  },
  {
    "text": "multiple incoming requests",
    "start": "168720",
    "end": "170480"
  },
  {
    "text": "and process them together like in this",
    "start": "170480",
    "end": "173680"
  },
  {
    "text": "picture",
    "start": "173680",
    "end": "174319"
  },
  {
    "text": "multiple write requests are accumulated",
    "start": "174319",
    "end": "177120"
  },
  {
    "text": "and then a single disk right is",
    "start": "177120",
    "end": "178879"
  },
  {
    "text": "performed",
    "start": "178879",
    "end": "181360"
  },
  {
    "text": "some tracing libraries are not designed",
    "start": "181360",
    "end": "183280"
  },
  {
    "text": "for this case",
    "start": "183280",
    "end": "184400"
  },
  {
    "text": "we would like to review all details",
    "start": "184400",
    "end": "188319"
  },
  {
    "text": "to resolve these issues we had to",
    "start": "188400",
    "end": "190720"
  },
  {
    "text": "develop our own trading library",
    "start": "190720",
    "end": "193440"
  },
  {
    "text": "i would like to invite you to share this",
    "start": "193440",
    "end": "195440"
  },
  {
    "text": "part with you",
    "start": "195440",
    "end": "198640"
  },
  {
    "text": "i am going to introduce our json library",
    "start": "198640",
    "end": "202000"
  },
  {
    "text": "land miniatures meaning this step is",
    "start": "202000",
    "end": "205280"
  },
  {
    "text": "valid concise and focus",
    "start": "205280",
    "end": "208319"
  },
  {
    "text": "on performance it's still a poc",
    "start": "208319",
    "end": "211920"
  },
  {
    "text": "prototype so far",
    "start": "211920",
    "end": "213680"
  },
  {
    "text": "we are working on letting it be stable",
    "start": "213680",
    "end": "215760"
  },
  {
    "text": "and production ready",
    "start": "215760",
    "end": "218879"
  },
  {
    "text": "we design and develop miniatures with",
    "start": "220159",
    "end": "222400"
  },
  {
    "text": "the final goal of high performance",
    "start": "222400",
    "end": "225280"
  },
  {
    "text": "here's the results of microchip micro",
    "start": "225280",
    "end": "228640"
  },
  {
    "text": "benchmarks and integration benchmarks",
    "start": "228640",
    "end": "232879"
  },
  {
    "text": "on generation and collection of west",
    "start": "234159",
    "end": "236480"
  },
  {
    "text": "bank",
    "start": "236480",
    "end": "237360"
  },
  {
    "text": "with 0.02 microseconds",
    "start": "237360",
    "end": "241200"
  },
  {
    "text": "you can see our json library was 17.5",
    "start": "241200",
    "end": "244799"
  },
  {
    "text": "times",
    "start": "244799",
    "end": "245519"
  },
  {
    "text": "faster than was tracing and 100 times",
    "start": "245519",
    "end": "248560"
  },
  {
    "text": "faster than tokyo chasing",
    "start": "248560",
    "end": "252000"
  },
  {
    "text": "we traced 100 events by different json",
    "start": "252000",
    "end": "255360"
  },
  {
    "text": "libraries",
    "start": "255360",
    "end": "256799"
  },
  {
    "text": "then recorded the qps of point game",
    "start": "256799",
    "end": "259040"
  },
  {
    "text": "requests",
    "start": "259040",
    "end": "260400"
  },
  {
    "text": "as you can see while was tracing half",
    "start": "260400",
    "end": "263280"
  },
  {
    "text": "origin computers",
    "start": "263280",
    "end": "264639"
  },
  {
    "text": "initiates only down 6 percents",
    "start": "264639",
    "end": "268479"
  },
  {
    "text": "i've explained what optimizations we've",
    "start": "268479",
    "end": "270880"
  },
  {
    "text": "done for such a performance",
    "start": "270880",
    "end": "274400"
  },
  {
    "text": "the first key to the performance is to",
    "start": "276000",
    "end": "278720"
  },
  {
    "text": "reduce contention",
    "start": "278720",
    "end": "280720"
  },
  {
    "text": "contention happens when a shear resource",
    "start": "280720",
    "end": "283360"
  },
  {
    "text": "is accepted",
    "start": "283360",
    "end": "284240"
  },
  {
    "text": "concurrently in multiple space or cross",
    "start": "284240",
    "end": "288720"
  },
  {
    "text": "in most class implementations spans from",
    "start": "288720",
    "end": "291680"
  },
  {
    "text": "multiple stress",
    "start": "291680",
    "end": "292720"
  },
  {
    "text": "are similarly pushed to the same span",
    "start": "292720",
    "end": "295280"
  },
  {
    "text": "collector",
    "start": "295280",
    "end": "296320"
  },
  {
    "text": "which is globally shared",
    "start": "296320",
    "end": "299759"
  },
  {
    "text": "stress access and modify the same",
    "start": "299759",
    "end": "301759"
  },
  {
    "text": "resource cost",
    "start": "301759",
    "end": "303280"
  },
  {
    "text": "contention they have to pay the overhead",
    "start": "303280",
    "end": "307600"
  },
  {
    "text": "of",
    "start": "307600",
    "end": "307840"
  },
  {
    "text": "logs or atomic variables for every span",
    "start": "307840",
    "end": "314080"
  },
  {
    "text": "miniatures doesn't push when span each",
    "start": "315199",
    "end": "317600"
  },
  {
    "text": "time to the global speculator",
    "start": "317600",
    "end": "320479"
  },
  {
    "text": "instead it collects spans to thread",
    "start": "320479",
    "end": "323039"
  },
  {
    "text": "local buffers",
    "start": "323039",
    "end": "324000"
  },
  {
    "text": "first after works in northwest autumn",
    "start": "324000",
    "end": "328080"
  },
  {
    "text": "spans in the thread local buffer are",
    "start": "328080",
    "end": "330720"
  },
  {
    "text": "then connected",
    "start": "330720",
    "end": "331840"
  },
  {
    "text": "to the global collector in batch",
    "start": "331840",
    "end": "335039"
  },
  {
    "text": "in this way the global clutter is",
    "start": "335039",
    "end": "337440"
  },
  {
    "text": "accessed much",
    "start": "337440",
    "end": "338240"
  },
  {
    "text": "less often the contention",
    "start": "338240",
    "end": "341440"
  },
  {
    "text": "is reduced and the performance improved",
    "start": "341440",
    "end": "346080"
  },
  {
    "text": "the second key to the performance is to",
    "start": "347680",
    "end": "350320"
  },
  {
    "text": "time faster",
    "start": "350320",
    "end": "353199"
  },
  {
    "text": "let's see how a basis bend looks like",
    "start": "353199",
    "end": "356560"
  },
  {
    "text": "for each span the chasing library will",
    "start": "356560",
    "end": "359360"
  },
  {
    "text": "cause",
    "start": "359360",
    "end": "360479"
  },
  {
    "text": "when the span is starting and when span",
    "start": "360479",
    "end": "363759"
  },
  {
    "text": "is",
    "start": "363759",
    "end": "364840"
  },
  {
    "text": "ended so timing performance is",
    "start": "364840",
    "end": "367520"
  },
  {
    "text": "important commentation libraries either",
    "start": "367520",
    "end": "371360"
  },
  {
    "text": "use",
    "start": "371360",
    "end": "371680"
  },
  {
    "text": "system time to retrieve the time",
    "start": "371680",
    "end": "375199"
  },
  {
    "text": "or monotonic time counter by assessing",
    "start": "375199",
    "end": "378080"
  },
  {
    "text": "the",
    "start": "378080",
    "end": "378639"
  },
  {
    "text": "monotonic clock in our environments",
    "start": "378639",
    "end": "382880"
  },
  {
    "text": "each monotonic clock assessed causes",
    "start": "382880",
    "end": "386960"
  },
  {
    "text": "25 nanoseconds latency",
    "start": "386960",
    "end": "390400"
  },
  {
    "text": "if we have 10 spans in the key value",
    "start": "390400",
    "end": "393680"
  },
  {
    "text": "game quest",
    "start": "393680",
    "end": "394880"
  },
  {
    "text": "the total latency",
    "start": "394880",
    "end": "398080"
  },
  {
    "text": "causes by chasing becomes 500",
    "start": "398400",
    "end": "401120"
  },
  {
    "text": "nanoseconds",
    "start": "401120",
    "end": "402720"
  },
  {
    "text": "remember that 10kv get requests may",
    "start": "402720",
    "end": "405840"
  },
  {
    "text": "take about one thousand nanoseconds to",
    "start": "405840",
    "end": "409039"
  },
  {
    "text": "three thousand nanoseconds so this have",
    "start": "409039",
    "end": "412479"
  },
  {
    "text": "a 16 latency overhead",
    "start": "412479",
    "end": "416960"
  },
  {
    "text": "another choice is to use",
    "start": "417120",
    "end": "420400"
  },
  {
    "text": "clock monotonic course",
    "start": "420400",
    "end": "423919"
  },
  {
    "text": "it is fast and results in three percent",
    "start": "423919",
    "end": "426720"
  },
  {
    "text": "latency overhead",
    "start": "426720",
    "end": "428720"
  },
  {
    "text": "however is its precision",
    "start": "428720",
    "end": "432319"
  },
  {
    "text": "is only four microseconds according to",
    "start": "432319",
    "end": "435440"
  },
  {
    "text": "our benchmarks",
    "start": "435440",
    "end": "437199"
  },
  {
    "text": "which limits its usage",
    "start": "437199",
    "end": "440880"
  },
  {
    "text": "instead of using these clocks we use the",
    "start": "441440",
    "end": "444560"
  },
  {
    "text": "timestamp counter register",
    "start": "444560",
    "end": "446720"
  },
  {
    "text": "available in modern",
    "start": "446720",
    "end": "449759"
  },
  {
    "text": "intel and amd cpus its value",
    "start": "449759",
    "end": "453520"
  },
  {
    "text": "can be accessed via the rd tscp",
    "start": "453520",
    "end": "456880"
  },
  {
    "text": "instruction the tsc register is very",
    "start": "456880",
    "end": "460800"
  },
  {
    "text": "efficient with high precision",
    "start": "460800",
    "end": "464000"
  },
  {
    "text": "it only causes 80 nanoseconds each",
    "start": "464000",
    "end": "466879"
  },
  {
    "text": "excess in our environment",
    "start": "466879",
    "end": "470560"
  },
  {
    "text": "however dlc is not perfect in some cpus",
    "start": "472000",
    "end": "476400"
  },
  {
    "text": "tlc is not synchronized in different",
    "start": "476400",
    "end": "478800"
  },
  {
    "text": "groups",
    "start": "478800",
    "end": "480639"
  },
  {
    "text": "however synchronized dlc can be",
    "start": "480639",
    "end": "482960"
  },
  {
    "text": "discovered by checking some cpu flex",
    "start": "482960",
    "end": "486560"
  },
  {
    "text": "even with this flex we discovered that",
    "start": "486560",
    "end": "490160"
  },
  {
    "text": "tlc may be non-synchronized due to",
    "start": "490160",
    "end": "493360"
  },
  {
    "text": "an unstable environment or some cpu",
    "start": "493360",
    "end": "496160"
  },
  {
    "text": "force",
    "start": "496160",
    "end": "497919"
  },
  {
    "text": "miniatures carefully conduct these",
    "start": "497919",
    "end": "500319"
  },
  {
    "text": "situations to ensure that tsc value",
    "start": "500319",
    "end": "503520"
  },
  {
    "text": "is reliable and can be used to mature",
    "start": "503520",
    "end": "506000"
  },
  {
    "text": "the time",
    "start": "506000",
    "end": "507440"
  },
  {
    "text": "when many trades detects that tsc is not",
    "start": "507440",
    "end": "510720"
  },
  {
    "text": "available or not reliable it will forget",
    "start": "510720",
    "end": "514159"
  },
  {
    "text": "to use",
    "start": "514159",
    "end": "514719"
  },
  {
    "text": "cloud monotonic course",
    "start": "514719",
    "end": "518399"
  },
  {
    "text": "the final key to the performance is to",
    "start": "519760",
    "end": "521839"
  },
  {
    "text": "reduce synchronization",
    "start": "521839",
    "end": "524320"
  },
  {
    "text": "serialization happens when spent or",
    "start": "524320",
    "end": "526800"
  },
  {
    "text": "created",
    "start": "526800",
    "end": "527440"
  },
  {
    "text": "in the memory and need to send back to",
    "start": "527440",
    "end": "530000"
  },
  {
    "text": "some chasing storage",
    "start": "530000",
    "end": "531360"
  },
  {
    "text": "like yoga there are very frequent",
    "start": "531360",
    "end": "536160"
  },
  {
    "text": "key value requests in the hkv",
    "start": "536160",
    "end": "540320"
  },
  {
    "text": "the chasing result reporting is also",
    "start": "540320",
    "end": "542720"
  },
  {
    "text": "very frequent",
    "start": "542720",
    "end": "544760"
  },
  {
    "text": "serialization may take long time",
    "start": "544760",
    "end": "548800"
  },
  {
    "text": "to reduce the seo realization cost in",
    "start": "548800",
    "end": "551839"
  },
  {
    "text": "thai kv",
    "start": "551839",
    "end": "552880"
  },
  {
    "text": "we collect all spends related to a",
    "start": "552880",
    "end": "555760"
  },
  {
    "text": "request",
    "start": "555760",
    "end": "556560"
  },
  {
    "text": "but only selected report them to the",
    "start": "556560",
    "end": "558720"
  },
  {
    "text": "chasing storage",
    "start": "558720",
    "end": "561600"
  },
  {
    "text": "the selection is based on the request",
    "start": "561600",
    "end": "563839"
  },
  {
    "text": "latency",
    "start": "563839",
    "end": "564959"
  },
  {
    "text": "only requests that take long time will",
    "start": "564959",
    "end": "567839"
  },
  {
    "text": "be recorded",
    "start": "567839",
    "end": "570560"
  },
  {
    "text": "this is different to the sampled",
    "start": "570640",
    "end": "573120"
  },
  {
    "text": "collection",
    "start": "573120",
    "end": "574560"
  },
  {
    "text": "that we will not miss any jitters",
    "start": "574560",
    "end": "579200"
  },
  {
    "text": "to chase badge systems we need to chase",
    "start": "580959",
    "end": "583920"
  },
  {
    "text": "the bus to merge",
    "start": "583920",
    "end": "584959"
  },
  {
    "text": "contests related to different requests",
    "start": "584959",
    "end": "588000"
  },
  {
    "text": "into a single contest then",
    "start": "588000",
    "end": "591040"
  },
  {
    "text": "these requests share the following child",
    "start": "591040",
    "end": "593519"
  },
  {
    "text": "expense",
    "start": "593519",
    "end": "594800"
  },
  {
    "text": "finally share spends are created",
    "start": "594800",
    "end": "597120"
  },
  {
    "text": "separately to",
    "start": "597120",
    "end": "598640"
  },
  {
    "text": "collectors of these requests",
    "start": "598640",
    "end": "604240"
  },
  {
    "text": "we are glad to see some related words in",
    "start": "604240",
    "end": "606720"
  },
  {
    "text": "the community",
    "start": "606720",
    "end": "608640"
  },
  {
    "text": "a subset of chain open chasing is",
    "start": "608640",
    "end": "612079"
  },
  {
    "text": "implemented for performance minitrace is",
    "start": "612079",
    "end": "615839"
  },
  {
    "text": "supposed to refer to yoga the amazing",
    "start": "615839",
    "end": "618640"
  },
  {
    "text": "echo ui greatly eases our verification",
    "start": "618640",
    "end": "621760"
  },
  {
    "text": "words",
    "start": "621760",
    "end": "623839"
  },
  {
    "text": "here is github repository link of",
    "start": "623839",
    "end": "626480"
  },
  {
    "text": "miniatures",
    "start": "626480",
    "end": "627519"
  },
  {
    "text": "you can use many traces in your own",
    "start": "627519",
    "end": "629440"
  },
  {
    "text": "projects now",
    "start": "629440",
    "end": "632320"
  },
  {
    "text": "some organization will be contributed to",
    "start": "632320",
    "end": "635760"
  },
  {
    "text": "open telemetry rust we hope one day the",
    "start": "635760",
    "end": "639279"
  },
  {
    "text": "official",
    "start": "639279",
    "end": "640399"
  },
  {
    "text": "was the current can adopt all",
    "start": "640399",
    "end": "644160"
  },
  {
    "text": "optimizations",
    "start": "644839",
    "end": "646320"
  },
  {
    "text": "the upcoming thai kv 5.0 will support",
    "start": "646320",
    "end": "649279"
  },
  {
    "text": "the chasing feature provided by the",
    "start": "649279",
    "end": "651279"
  },
  {
    "text": "miniatures",
    "start": "651279",
    "end": "653600"
  },
  {
    "text": "hope you enjoyed this talk welcome to",
    "start": "653600",
    "end": "655760"
  },
  {
    "text": "contact us through the following",
    "start": "655760",
    "end": "657480"
  },
  {
    "text": "channels",
    "start": "657480",
    "end": "660480"
  }
]