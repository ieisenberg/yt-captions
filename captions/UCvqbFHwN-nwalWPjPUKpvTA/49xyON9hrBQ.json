[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "alright looks like our numbers are stabilizing so let's go ahead and get started welcome to today's cncs webinar",
    "start": "30",
    "end": "6540"
  },
  {
    "text": "intro to ballerina I'm Kaitlin Barnard marketing manager at CNCs and I'd like",
    "start": "6540",
    "end": "12030"
  },
  {
    "text": "to thank everyone for joining us today as well as today's presenter Paul Fremantle CTO and co-founder of wso - so",
    "start": "12030",
    "end": "20070"
  },
  {
    "text": "just a few housekeeping items before we get started during the webinar you're not able to talk as an attendee so there",
    "start": "20070",
    "end": "26910"
  },
  {
    "text": "is a Q&A box at the bottom of your screen so please feel free to drop any of your questions in there and we'll get to as",
    "start": "26910",
    "end": "32550"
  },
  {
    "text": "many as we can at the end the session is also being recorded and will be sent out",
    "start": "32550",
    "end": "37649"
  },
  {
    "text": "afterwards along with the slide the slides and link to the presentation so with that I'll hand over to Paul to kick",
    "start": "37649",
    "end": "43920"
  },
  {
    "text": "off today's presentation thank you very much Caitlin hi everybody",
    "start": "43920",
    "end": "50039"
  },
  {
    "text": "thanks for taking the time to join us for this webinar so the the presentations actually mainly",
    "start": "50039",
    "end": "57449"
  },
  {
    "text": "give me a live demo um hopefully that will all work but before I jump into that I just want to spend about three",
    "start": "57449",
    "end": "64049"
  },
  {
    "text": "minutes just explaining why we built a language which is obviously a question people ask so I think that's that's kind",
    "start": "64049",
    "end": "73619"
  },
  {
    "text": "of important to sort of help you understand that the motivations and the purpose in this language and um so let's",
    "start": "73619",
    "end": "82350"
  },
  {
    "text": "just sort of start by looking at the overall industry especially around the",
    "start": "82350",
    "end": "87930"
  },
  {
    "text": "software and and what we see is that there's this massive disaggregation of",
    "start": "87930",
    "end": "93170"
  },
  {
    "text": "systems and this is really driven by customer demand customer demand for",
    "start": "93170",
    "end": "99210"
  },
  {
    "text": "bigger scale services you know Google Netflix Amazon Alibaba and also get",
    "start": "99210",
    "end": "106979"
  },
  {
    "text": "customer demand for agility for people to move quicker to create new",
    "start": "106979",
    "end": "112100"
  },
  {
    "text": "capabilities faster than that agility and scale both drive these small smaller",
    "start": "112100",
    "end": "118860"
  },
  {
    "text": "components that can be reused and we've seen this shift happen over five six",
    "start": "118860",
    "end": "125790"
  },
  {
    "text": "decades so this this is not a flash in the pan this is an ongoing and in",
    "start": "125790",
    "end": "133280"
  },
  {
    "text": "the double shift and and these components are all becoming Network accessible whether their service",
    "start": "133280",
    "end": "139850"
  },
  {
    "text": "functions API is micro-services data as a service SAS apps everything is",
    "start": "139850",
    "end": "147080"
  },
  {
    "text": "becoming a programmable endpoint and so increasingly when we built old applications we are not just building",
    "start": "147080",
    "end": "155140"
  },
  {
    "text": "systems that live on their own but we're building systems that have to integrate and talk to network program all",
    "start": "155140",
    "end": "163430"
  },
  {
    "text": "endpoints and every every developer I know is is creating systems that are",
    "start": "163430",
    "end": "170600"
  },
  {
    "text": "talking to other network api's and endpoints and so as we do that you know",
    "start": "170600",
    "end": "177769"
  },
  {
    "text": "there are challenges distributed computing is not the same as local computing and and typically historically",
    "start": "177769",
    "end": "185440"
  },
  {
    "text": "we called this art of writing distributed applications we call it",
    "start": "185440",
    "end": "191120"
  },
  {
    "text": "integration and there are challenges to integration they're distributed transactions there are patterns like",
    "start": "191120",
    "end": "197390"
  },
  {
    "text": "circuit breakers there's protocol handling there's security there's error",
    "start": "197390",
    "end": "202610"
  },
  {
    "text": "handling all these challenges make writing distributed computing systems",
    "start": "202610",
    "end": "207980"
  },
  {
    "text": "harder than locally based computing systems and that are and science of",
    "start": "207980",
    "end": "215209"
  },
  {
    "text": "creating distributed computing systems has typically been done in one of two ways so my background is I worked on a",
    "start": "215209",
    "end": "224540"
  },
  {
    "text": "whole bunch of integration products I I've built early es B's in open-source",
    "start": "224540",
    "end": "229959"
  },
  {
    "text": "and at various companies I've worked on Business Process Management I've worked",
    "start": "229959",
    "end": "235579"
  },
  {
    "text": "with Inter product creation hubs these integration products inherently understand the challenges of distributed",
    "start": "235579",
    "end": "241730"
  },
  {
    "text": "computing and have things like circuit breakers load balancers failover",
    "start": "241730",
    "end": "246880"
  },
  {
    "text": "compensation all those kind of things payload handling built in but they have",
    "start": "246880",
    "end": "252380"
  },
  {
    "text": "a big problem which is that they don't fit neatly and nicely into a developer",
    "start": "252380",
    "end": "258470"
  },
  {
    "text": "focused agile iterative development process they don't fit into that you",
    "start": "258470",
    "end": "263750"
  },
  {
    "text": "know code build run test cycle that we go through as developers",
    "start": "263750",
    "end": "270850"
  },
  {
    "text": "so the other approach is to take a general-purpose programming language and then try and then build distributed",
    "start": "270850",
    "end": "278900"
  },
  {
    "text": "systems and when you do that you you have you have a choice you either write",
    "start": "278900",
    "end": "284480"
  },
  {
    "text": "the code yourself to handle those those error cases those distributed systems or you import a framework and and when you",
    "start": "284480",
    "end": "291560"
  },
  {
    "text": "do that you take responsibility for solving those integration challenges and so we believe that those general-purpose",
    "start": "291560",
    "end": "299000"
  },
  {
    "text": "languages are perhaps not as integration simple as they could be and the integration products are not as agile as",
    "start": "299000",
    "end": "304400"
  },
  {
    "text": "they could be so we call this integration gap there's a there's a sort",
    "start": "304400",
    "end": "310520"
  },
  {
    "text": "of a space there and we decided that perhaps one way of solving that was to",
    "start": "310520",
    "end": "316910"
  },
  {
    "text": "create a language that inherently tried to address integration distributed",
    "start": "316910",
    "end": "323060"
  },
  {
    "text": "computing and network computing concepts in the language but it's a full language",
    "start": "323060",
    "end": "328100"
  },
  {
    "text": "that fits well into an agile development process and that's Ballerina and the",
    "start": "328100",
    "end": "335690"
  },
  {
    "text": "easiest way to explain it is to is to just show you some code so I'm gonna just jump in and start coding",
    "start": "335690",
    "end": "342310"
  },
  {
    "text": "it's a compiled typesafe concurrent programming language so it doesn't use",
    "start": "342310",
    "end": "347630"
  },
  {
    "text": "it's not it's not a it's not a dynamic language but it it looks similar to",
    "start": "347630",
    "end": "354650"
  },
  {
    "text": "dynamic languages it's not um it's not particularly complex and it has a lot of",
    "start": "354650",
    "end": "362050"
  },
  {
    "text": "concurrent constructs which are very important to the to the handling of network aspects so the way I'm going to",
    "start": "362050",
    "end": "370730"
  },
  {
    "start": "370000",
    "end": "705000"
  },
  {
    "text": "do that is I have Visual Studio code installed in my in my system and I've",
    "start": "370730",
    "end": "377060"
  },
  {
    "text": "installed Ballerina and the only other thing I have installed is I have docker and kubernetes run which I'm going to",
    "start": "377060",
    "end": "383540"
  },
  {
    "text": "use for some of the demos and I had a couple of things on the cloud that I hope to get to as well so I'm going to",
    "start": "383540",
    "end": "389660"
  },
  {
    "text": "start up a new Ballerina file and this",
    "start": "389660",
    "end": "394910"
  },
  {
    "text": "your studio code has got thee has already imported the plug-in for that so",
    "start": "394910",
    "end": "400130"
  },
  {
    "text": "that's start by writing a hello world now being a network programming language our hello",
    "start": "400130",
    "end": "406700"
  },
  {
    "text": "well is going to be a HTTP server that returns hello world tour to a client so",
    "start": "406700",
    "end": "412640"
  },
  {
    "text": "I'm going to start by importing HTTP package and I'm gonna define a service",
    "start": "412640",
    "end": "418580"
  },
  {
    "text": "and it ballerina services are first-class constructs so in in most",
    "start": "418580",
    "end": "426830"
  },
  {
    "text": "languages there's just one entry point which is main and then if you want to build a network server you have to use",
    "start": "426830",
    "end": "434450"
  },
  {
    "text": "some library or package that knows that you start up in Maine and then you go and start some listener and then and the",
    "start": "434450",
    "end": "441500"
  },
  {
    "text": "thread pool and everything else in ballerina the concept of a listener a service is built-in and those can be",
    "start": "441500",
    "end": "448280"
  },
  {
    "text": "aged pea listeners GOP C Kafka they can react to messages and Kewpie all sorts",
    "start": "448280",
    "end": "454340"
  },
  {
    "text": "of different protocols so this is the really the simplest possible ballerina",
    "start": "454340",
    "end": "463420"
  },
  {
    "text": "Network program so I'm just going to say hello and and I'm I said this is a",
    "start": "463420",
    "end": "475280"
  },
  {
    "text": "compiled language so I'm gonna go and",
    "start": "475280",
    "end": "479889"
  },
  {
    "text": "holitzer there's a ballerina command and I'm gonna build that demo bowel and",
    "start": "481360",
    "end": "486440"
  },
  {
    "text": "that's gonna create a balik's and I'm gonna just run that so ballerina",
    "start": "486440",
    "end": "495500"
  },
  {
    "text": "has a bytecode and a bytecode virtual",
    "start": "495500",
    "end": "501200"
  },
  {
    "text": "machine so I'm gonna use that to run this bytecode and now it's listening on",
    "start": "501200",
    "end": "508010"
  },
  {
    "text": "port 1990 I'll explain that code in a second in a bit more detail but I just thought it was be useful just to show",
    "start": "508010",
    "end": "514219"
  },
  {
    "text": "you service running and we've got two",
    "start": "514219",
    "end": "521060"
  },
  {
    "text": "we've got a service and a resource within that service and so by default the path is is created from those we'll",
    "start": "521060",
    "end": "528920"
  },
  {
    "text": "show you how to do that so there we go in in about a minute I have created my",
    "start": "528920",
    "end": "534050"
  },
  {
    "text": "first name servus now I said services are first",
    "start": "534050",
    "end": "539510"
  },
  {
    "text": "class citizens in fact also so are endpoints so an endpoint is a is a is a",
    "start": "539510",
    "end": "546380"
  },
  {
    "text": "network listener or a network sender so it's either a server or client and so",
    "start": "546380",
    "end": "551480"
  },
  {
    "text": "what we've really done here is to bind this service to a particular network",
    "start": "551480",
    "end": "558260"
  },
  {
    "text": "listener and I did that in a in it just an inline way but actually it's nicer to",
    "start": "558260",
    "end": "563750"
  },
  {
    "text": "show you that Network endpoints are first-class citizens",
    "start": "563750",
    "end": "568839"
  },
  {
    "text": "the other thing I wanted to show is that what I'm really doing here is is creating a new is creating a HTTP",
    "start": "568839",
    "end": "576230"
  },
  {
    "text": "response which is an object and I can new it up and I can set the payload on",
    "start": "576230",
    "end": "583640"
  },
  {
    "text": "that and you can see there's a whole lot of different HTTP things you can do and I can set a payload on there and I'm",
    "start": "583640",
    "end": "590360"
  },
  {
    "text": "gonna just cut that and now and I need",
    "start": "590360",
    "end": "599180"
  },
  {
    "text": "to respond with that so this is",
    "start": "599180",
    "end": "604700"
  },
  {
    "text": "interesting that here you see I have an object and I have a method on that",
    "start": "604700",
    "end": "610070"
  },
  {
    "text": "object which is a local method and I'm going res dot set payload and that's",
    "start": "610070",
    "end": "616490"
  },
  {
    "text": "because it's a local method and here I have another endpoint which is the my reference to the caller and I'm",
    "start": "616490",
    "end": "623030"
  },
  {
    "text": "responding with an arrow this arrow indicates there's a network called",
    "start": "623030",
    "end": "628190"
  },
  {
    "text": "happening here so the syntax instantly is showing us that we have a network",
    "start": "628190",
    "end": "633790"
  },
  {
    "text": "interaction going on here and I think this is really interesting because one of the you know famous things is that",
    "start": "633790",
    "end": "641000"
  },
  {
    "text": "the fallacy of distributed computing is it's the same as local within this language you can clearly see when you're",
    "start": "641000",
    "end": "646850"
  },
  {
    "text": "making remote calls because they they appear in the syntax and this also has",
    "start": "646850",
    "end": "653029"
  },
  {
    "text": "some semantic meaning as well so it's not just about the syntax the semantics meaning I'm going to come back to in a",
    "start": "653029",
    "end": "658520"
  },
  {
    "text": "little bit and then this underscore equals for every function that returns a",
    "start": "658520",
    "end": "664760"
  },
  {
    "text": "value you have to deal with the return even if you just say I don't want to deal with it so in this case this is the",
    "start": "664760",
    "end": "672990"
  },
  {
    "text": "server responding back to the caller if there's an error at that point then",
    "start": "672990",
    "end": "679680"
  },
  {
    "text": "there's not much we can do apart from log it because we've already lost the connection to the to the from the client",
    "start": "679680",
    "end": "685499"
  },
  {
    "text": "so in this case I am gonna just drop it so there we go now that's basically the same code that",
    "start": "685499",
    "end": "692490"
  },
  {
    "text": "I showed you before I've just been a bit clearer about what's going on but I probably want to not just have this",
    "start": "692490",
    "end": "698699"
  },
  {
    "text": "hello hi path that was running so what I can do is I can annotate this service",
    "start": "698699",
    "end": "707149"
  },
  {
    "start": "705000",
    "end": "1005000"
  },
  {
    "text": "with a config and I can set a base path",
    "start": "707149",
    "end": "712309"
  },
  {
    "text": "of slash and I can annotate the resource",
    "start": "712309",
    "end": "718829"
  },
  {
    "text": "and say I want the path there to be slash and I can also be more explicit I",
    "start": "718829",
    "end": "727290"
  },
  {
    "text": "could say that I only want to support a post so there is a saying that the",
    "start": "727290",
    "end": "734069"
  },
  {
    "text": "methods that they're acceptable are post and I can actually specify that this",
    "start": "734069",
    "end": "740819"
  },
  {
    "text": "resource has a a parameter we're gonna pass and I'm gonna say it's a string and",
    "start": "740819",
    "end": "748230"
  },
  {
    "text": "this is the body of the message coming in so I can actually grab that string and now do that now you can bind JSON",
    "start": "748230",
    "end": "755910"
  },
  {
    "text": "XML different data types and there's also mapping from JSON into into the",
    "start": "755910",
    "end": "761790"
  },
  {
    "text": "record an object types of ballerina but that's probably a bit complex to go into right now but this is kind of nice I",
    "start": "761790",
    "end": "768750"
  },
  {
    "text": "want to just say I'm gonna pass over a text message in the in the body of the",
    "start": "768750",
    "end": "775050"
  },
  {
    "text": "post and I'm gonna use that to respond",
    "start": "775050",
    "end": "780740"
  },
  {
    "text": "and so that's that's great and what have I done here and I've got",
    "start": "780740",
    "end": "787110"
  },
  {
    "text": "my quota in one place now just explained this to you what's",
    "start": "787110",
    "end": "794699"
  },
  {
    "text": "interesting another thing about network programming is we all know that there are challenges",
    "start": "794699",
    "end": "801540"
  },
  {
    "text": "with for instance sequel injection attacks so people can pass over tainted",
    "start": "801540",
    "end": "807420"
  },
  {
    "text": "data over a network connection especially in an HTTP POST or a G RPC",
    "start": "807420",
    "end": "813389"
  },
  {
    "text": "body and so what Ballerina does is it just implicitly assumes that all data",
    "start": "813389",
    "end": "820129"
  },
  {
    "text": "coming from the wire is tainted and so",
    "start": "820129",
    "end": "826230"
  },
  {
    "text": "it's got taint checking built into the language which is which is pretty unique there's a couple of languages that have",
    "start": "826230",
    "end": "832439"
  },
  {
    "text": "considered this but we think we think this is pretty much the only language that is built it right into the language",
    "start": "832439",
    "end": "838649"
  },
  {
    "text": "from day one now I'm just doing a demo so I'm going to explicitly untain that",
    "start": "838649",
    "end": "844350"
  },
  {
    "text": "and say well I'm just responding back to you if you want to see your tainted data you can have that so in this case we can",
    "start": "844350",
    "end": "851579"
  },
  {
    "text": "just done taint it but normally you might do something like you might say string clean body equals intent and then",
    "start": "851579",
    "end": "860819"
  },
  {
    "text": "body dot replace and then you can use a red X to clean out any any problems so",
    "start": "860819",
    "end": "867480"
  },
  {
    "text": "you can see how that would work so we've now got a parameter being passed we've",
    "start": "867480",
    "end": "874170"
  },
  {
    "text": "got a post required we've changed the path so done some useful things I'm going to rebuild that hopefully have any",
    "start": "874170",
    "end": "883230"
  },
  {
    "text": "syntax errors and I'm gonna run that and now I don't need that path but I do need",
    "start": "883230",
    "end": "890009"
  },
  {
    "text": "to specify this as a post post and I do",
    "start": "890009",
    "end": "895410"
  },
  {
    "text": "need to pass over a body which is hello",
    "start": "895410",
    "end": "901009"
  },
  {
    "text": "what have I done there ah I know what I've done I have failed to tell me that",
    "start": "904459",
    "end": "911639"
  },
  {
    "text": "the body is going to be this parameter so I need to bind the body of the",
    "start": "911639",
    "end": "917819"
  },
  {
    "text": "message to this parameter here so I always make mistakes in life demos you",
    "start": "917819",
    "end": "923279"
  },
  {
    "text": "can see what I'm doing there so let me try and run it",
    "start": "923279",
    "end": "932180"
  },
  {
    "text": "and now hopefully there we go so very quickly you can see we've done some some",
    "start": "932990",
    "end": "940580"
  },
  {
    "text": "simple network programming but I want to do more I want to now call another",
    "start": "940580",
    "end": "945740"
  },
  {
    "text": "network service now there's two ways I could do that I can for instance just create an HTTP client and do HTTP gets",
    "start": "945740",
    "end": "952820"
  },
  {
    "text": "that would be very natural and that will be easy but I can also go and use some",
    "start": "952820",
    "end": "960920"
  },
  {
    "text": "connectors and so I'm going to go and search and see if there's a Twitter",
    "start": "960920",
    "end": "966800"
  },
  {
    "text": "connector now ballerina has a package manager built in and it has this concept",
    "start": "966800",
    "end": "973040"
  },
  {
    "text": "of connectors connectors are explicitly network systems and we can see there's a",
    "start": "973040",
    "end": "978710"
  },
  {
    "text": "connector there called W so to slash Twitter so I'm going to pull that and",
    "start": "978710",
    "end": "984310"
  },
  {
    "text": "it's going to download it and there's a",
    "start": "988270",
    "end": "993380"
  },
  {
    "text": "slight problem my terminal in there but anyway there we go and so now I'm going to import to",
    "start": "993380",
    "end": "1004440"
  },
  {
    "text": "Twitter and I'm going to create a new endpoint which is a Twitter implant they",
    "start": "1004440",
    "end": "1011380"
  },
  {
    "start": "1005000",
    "end": "1320000"
  },
  {
    "text": "don't get a call so this is going to be a Twitter weren't and I'm going to call",
    "start": "1011380",
    "end": "1017800"
  },
  {
    "text": "it Twitter and I need to configure a",
    "start": "1017800",
    "end": "1025000"
  },
  {
    "text": "whole bunch of secrets and stuff to talk to that so you can't talk to Twitter without having some oath to secrets and",
    "start": "1025000",
    "end": "1033579"
  },
  {
    "text": "so forth so rather than waste your time typing them I'm going to just I have a",
    "start": "1033580",
    "end": "1040480"
  },
  {
    "text": "snippet of code here and I'm going to go",
    "start": "1040480",
    "end": "1045520"
  },
  {
    "text": "and copy and paste that yeah and",
    "start": "1045520",
    "end": "1052510"
  },
  {
    "text": "that is gonna I'm gonna paste my secrets in here right now because you're all watching and this is being recorded I",
    "start": "1052510",
    "end": "1059590"
  },
  {
    "text": "don't want you to see my my twitter worth keys so I've got them in a config file and I'm going to import ballerina",
    "start": "1059590",
    "end": "1068380"
  },
  {
    "text": "config which knows how to read that and it could it would also read it from an",
    "start": "1068380",
    "end": "1073950"
  },
  {
    "text": "environment variable if necessary so now I've got this tweeter object I can say",
    "start": "1073950",
    "end": "1080950"
  },
  {
    "text": "I've got a new string which is the status to tweet and I'm going to just",
    "start": "1080950",
    "end": "1090900"
  },
  {
    "text": "grab that I'll take the body and say hello hashtag okay and now what I want",
    "start": "1091110",
    "end": "1108220"
  },
  {
    "text": "to do is I want to use that tweeter and at once again we have an arrow to say we're actually doing a network message",
    "start": "1108220",
    "end": "1118080"
  },
  {
    "text": "tweet that and I'm gonna get some kind of response back now although it's a",
    "start": "1118080",
    "end": "1124690"
  },
  {
    "text": "strongly typed language it does have type inference so I could just save our",
    "start": "1124690",
    "end": "1130410"
  },
  {
    "text": "response equals Twitter arrow tweet and",
    "start": "1130410",
    "end": "1136500"
  },
  {
    "text": "the type system in ballerina is also keyed around Network constructs so the",
    "start": "1136500",
    "end": "1143679"
  },
  {
    "text": "type system is a union type system it's very similar to Elm or Haskell and some",
    "start": "1143679",
    "end": "1148690"
  },
  {
    "text": "of those but in this so what that means is that I can basically say the response",
    "start": "1148690",
    "end": "1157299"
  },
  {
    "text": "is either a status or a Twitter error and I can handle each of those in turn now that's fine but for a quick demo I'm",
    "start": "1157299",
    "end": "1166540"
  },
  {
    "text": "going to treat and I'm gonna say basically I don't I'm gonna I know this",
    "start": "1166540",
    "end": "1171730"
  },
  {
    "text": "is going to Twitter status coming back now it's saying that it might be an",
    "start": "1171730",
    "end": "1179410"
  },
  {
    "text": "error there's a way of dealing with apertures base just to say check check if it's an",
    "start": "1179410",
    "end": "1185809"
  },
  {
    "text": "error if it's an error then this is going to give me a response basically",
    "start": "1185809",
    "end": "1190850"
  },
  {
    "text": "gonna tell that the HTTP server there's an error and h2b servers going to send back a internal server error to the",
    "start": "1190850",
    "end": "1197509"
  },
  {
    "text": "client so it's going to automatically handle a terraforming I said before",
    "start": "1197509",
    "end": "1204169"
  },
  {
    "text": "would have Jason so we can just create a jason directly and you can just go kind",
    "start": "1204169",
    "end": "1209360"
  },
  {
    "text": "of key-value like like any jason in line here but then i can say that the created",
    "start": "1209360",
    "end": "1221320"
  },
  {
    "text": "is that not create that but that's",
    "start": "1221320",
    "end": "1231559"
  },
  {
    "text": "coming back from twitter so that's give me the created at and i can say the ID",
    "start": "1231559",
    "end": "1237259"
  },
  {
    "text": "is responsible ID and so now I've got a JSON I've created from that so I just",
    "start": "1237259",
    "end": "1243769"
  },
  {
    "text": "done and I can simply send that jason back to the client and so this is kind",
    "start": "1243769",
    "end": "1259519"
  },
  {
    "text": "of nice so what we're doing is we're getting some name in the body of the",
    "start": "1259519",
    "end": "1264590"
  },
  {
    "text": "message were untainted it adding ballerina Lang to it tweeting that",
    "start": "1264590",
    "end": "1271789"
  },
  {
    "text": "status and then getting the response back and responding back to the client with that new Jason that we've created",
    "start": "1271789",
    "end": "1279639"
  },
  {
    "text": "so let's just build that now this time",
    "start": "1279639",
    "end": "1288090"
  },
  {
    "text": "run it I do need to pass over some config so I need to pass over my Twitter",
    "start": "1288090",
    "end": "1294540"
  },
  {
    "text": "and it's stored in in Tamil which is a bit like yeah more but slightly nicer so",
    "start": "1294540",
    "end": "1301410"
  },
  {
    "text": "there we go and now I'm gonna say and see what",
    "start": "1301410",
    "end": "1318120"
  },
  {
    "text": "happens excellent well it's come back with a created date and it's Twitter ID so I'm",
    "start": "1318120",
    "end": "1325020"
  },
  {
    "text": "pretty confident that this has worked but let's just go and look at my Twitter",
    "start": "1325020",
    "end": "1331800"
  },
  {
    "text": "feed see one new tweet and there it is so in pretty short space of time we've",
    "start": "1331800",
    "end": "1338490"
  },
  {
    "text": "done quite a lot of things let me go back to my presentation and we've done hello world also the caller did a get",
    "start": "1338490",
    "end": "1344370"
  },
  {
    "text": "request and we got hello world back then we did some annotations which allowed me",
    "start": "1344370",
    "end": "1349920"
  },
  {
    "text": "to the post of a name and return this hello name then we use a Twitter connector and we did a post of a status",
    "start": "1349920",
    "end": "1357900"
  },
  {
    "text": "and we tweeted that got the response back and responded back to the client",
    "start": "1357900",
    "end": "1363030"
  },
  {
    "text": "but in fact we're really doing some some data transformation I was actually",
    "start": "1363030",
    "end": "1368100"
  },
  {
    "text": "taking that body of the message as a text on tainting it adding a hashtag and",
    "start": "1368100",
    "end": "1376740"
  },
  {
    "text": "then turning that response from Twitter into a different Jason to send back to the caller so quite a lot of nice things",
    "start": "1376740",
    "end": "1383880"
  },
  {
    "text": "now I said before that that era had some",
    "start": "1383880",
    "end": "1389340"
  },
  {
    "text": "different semantics one of the really nice things here is that the semantics of this network send is it's inherently",
    "start": "1389340",
    "end": "1396060"
  },
  {
    "text": "async IO what does that mean that means that when I do that let me go back to my",
    "start": "1396060",
    "end": "1402630"
  },
  {
    "text": "Twitter thing when I go and do this Twitter arrow tweet that might take some time now if I did that in a normal in",
    "start": "1402630",
    "end": "1411900"
  },
  {
    "text": "Java say by default that would block a thread while it's waiting for the",
    "start": "1411900",
    "end": "1417210"
  },
  {
    "text": "Twitter to respond in no J I would use a callback so I basically",
    "start": "1417210",
    "end": "1423700"
  },
  {
    "text": "say I want you to go away and do this and call me back when I'm done and then I would have to embed all this ongoing",
    "start": "1423700",
    "end": "1430410"
  },
  {
    "text": "logic into my callback in Ballerina it does both of those things for you so",
    "start": "1430410",
    "end": "1437010"
  },
  {
    "text": "this logic happens after this thread so",
    "start": "1437010",
    "end": "1442630"
  },
  {
    "text": "this this thread is not blocked there's a worker which is dissociated from the thread and this syntax that comes after",
    "start": "1442630",
    "end": "1451510"
  },
  {
    "text": "the the Twitter tweet is basically a continuation so it happens on a",
    "start": "1451510",
    "end": "1456580"
  },
  {
    "text": "different thread but you don't have to worry about that so what that means is when you write this kind of code with",
    "start": "1456580",
    "end": "1463690"
  },
  {
    "text": "ballerina it's not thread bound it uses async i/o it's automatically very very",
    "start": "1463690",
    "end": "1468880"
  },
  {
    "text": "high performance so these are kind nice things that other languages do not do",
    "start": "1468880",
    "end": "1476640"
  },
  {
    "text": "automatically one of the things that inspired us is that whenever we kind of",
    "start": "1476640",
    "end": "1482830"
  },
  {
    "text": "build these systems for our customers or",
    "start": "1482830",
    "end": "1488169"
  },
  {
    "text": "for ourselves we always end up drawing sequence diagrams a bit of UML that I think is most useful to capture these",
    "start": "1488169",
    "end": "1494590"
  },
  {
    "text": "code interactions and the language of ballerina is is isomorphic to a sequence",
    "start": "1494590",
    "end": "1500110"
  },
  {
    "text": "diagram and this is where this arrow syntax came from because that's like an arrow in a sequence diagram and if I go",
    "start": "1500110",
    "end": "1507039"
  },
  {
    "text": "look at this little icon in the corner it says bothering a show diagram I click on that it's going to show me that",
    "start": "1507039",
    "end": "1513490"
  },
  {
    "text": "sequence diagram let me just enlarge that for you so you can see this is the",
    "start": "1513490",
    "end": "1519130"
  },
  {
    "text": "sequence diagram generated from that code so I have the caller sending over",
    "start": "1519130",
    "end": "1524440"
  },
  {
    "text": "the body I do a bit of logic it tweets that to my Twitter endpoint I get the",
    "start": "1524440",
    "end": "1530799"
  },
  {
    "text": "response back I do a bit more transformation I created Jason and I send that Jason back to the caller this",
    "start": "1530799",
    "end": "1537159"
  },
  {
    "text": "is this is really nice um you actually can go and edit that logic I'm not such",
    "start": "1537159",
    "end": "1544539"
  },
  {
    "text": "a big fan of that I like typing code but there are certainly people who want to",
    "start": "1544539",
    "end": "1550330"
  },
  {
    "text": "do that let me just show you if I",
    "start": "1550330",
    "end": "1555960"
  },
  {
    "text": "and a bit more logic so I can say if not status to tweet contains at Lang then I",
    "start": "1555960",
    "end": "1571720"
  },
  {
    "text": "want to add it so and you can see as I",
    "start": "1571720",
    "end": "1584799"
  },
  {
    "text": "did that it's updated the sequence diagram with that if aspect so that's",
    "start": "1584799",
    "end": "1590380"
  },
  {
    "text": "really nice so we have a language that has a sort of inherently network",
    "start": "1590380",
    "end": "1597490"
  },
  {
    "text": "oriented approach it's based on sequence diagrams it does asynchronous i/o it has",
    "start": "1597490",
    "end": "1604120"
  },
  {
    "text": "services and endpoints as first-class citizens it's it's really a language",
    "start": "1604120",
    "end": "1609940"
  },
  {
    "text": "that's designed to build cloud native applications but let's go a step further",
    "start": "1609940",
    "end": "1615700"
  },
  {
    "text": "and actually show that in practice and deploy this code into kubernetes and",
    "start": "1615700",
    "end": "1621400"
  },
  {
    "text": "show you that it is really a cloud native language in more senses than that so we have built-in support for docker",
    "start": "1621400",
    "end": "1628900"
  },
  {
    "text": "and kubernetes and they're under a package called ballerina x because they're really a kind extension so I'm",
    "start": "1628900",
    "end": "1637840"
  },
  {
    "text": "going to annotate this now with some kubernetes things so if I go to so that",
    "start": "1637840",
    "end": "1648970"
  },
  {
    "text": "endpoint listener that where we're listening is what kubernetes calls of",
    "start": "1648970",
    "end": "1654070"
  },
  {
    "text": "service so I'm going to annotate that with a name and I'm going to call it",
    "start": "1654070",
    "end": "1662070"
  },
  {
    "text": "demo and I'm gonna annotate it with a service type and it's gonna be no port",
    "start": "1662070",
    "end": "1668590"
  },
  {
    "text": "and then I also need to annotate the",
    "start": "1668590",
    "end": "1674260"
  },
  {
    "text": "actual piece of logic and I'm gonna go to my dentist niblets and cheat and find",
    "start": "1674260",
    "end": "1679720"
  },
  {
    "text": "say a little bit of code here and cut and paste that and I'll explain this so",
    "start": "1679720",
    "end": "1687280"
  },
  {
    "text": "firstly this is going to creator kubernetes deployment so I'm going to give that an image name because",
    "start": "1687280",
    "end": "1693250"
  },
  {
    "text": "this is going to create a container that's going to be deployed in kubernetes and also I need to pass over",
    "start": "1693250",
    "end": "1699100"
  },
  {
    "text": "that tamil config file and the way I'm going to do that is using what goodness is called a config map so if I now go",
    "start": "1699100",
    "end": "1707740"
  },
  {
    "text": "and kill this window and clear that and",
    "start": "1707740",
    "end": "1713890"
  },
  {
    "text": "now I'm gonna build that again and what",
    "start": "1713890",
    "end": "1719470"
  },
  {
    "text": "it's done let me just enlarge that window it's actually sorry the the screens doesn't show very well in vs",
    "start": "1719470",
    "end": "1726040"
  },
  {
    "text": "code but basically it's actually building the docker container the docker",
    "start": "1726040",
    "end": "1731740"
  },
  {
    "text": "file and it's building all the llamó for kubernetes so it's doing all of that for",
    "start": "1731740",
    "end": "1736960"
  },
  {
    "text": "me just from those simple annotations and it now says if you want to deploy",
    "start": "1736960",
    "end": "1743020"
  },
  {
    "text": "this you've got two choices because it's actually not just filter kubernetes yeah well it's also built a home chart for",
    "start": "1743020",
    "end": "1748570"
  },
  {
    "text": "your app so you can either do a cue cuttle apply to add this or you can do a",
    "start": "1748570",
    "end": "1754960"
  },
  {
    "text": "home install so let me just show you let me enlarge this command window a little",
    "start": "1754960",
    "end": "1760480"
  },
  {
    "text": "bit more so you can see what's going on and I'm gonna do cou couple get full now",
    "start": "1760480",
    "end": "1768730"
  },
  {
    "text": "I said I've got kubernetes running here it's running as part of docker it's really nice so makes it really",
    "start": "1768730",
    "end": "1777220"
  },
  {
    "text": "super easy so I've got nothing running I'm gonna do a cape cute couple apply",
    "start": "1777220",
    "end": "1785730"
  },
  {
    "text": "minus F and it's all in the kubernetes directory now let me just tree that so",
    "start": "1785730",
    "end": "1792610"
  },
  {
    "text": "you can see it has created helm charts and it's created the conflict map",
    "start": "1792610",
    "end": "1799060"
  },
  {
    "text": "deployment and service yeah molds the picker Benitez and it's created the",
    "start": "1799060",
    "end": "1804340"
  },
  {
    "text": "docker file so it's done all that for me and now I could do cube couple get all again and you can see it's now running",
    "start": "1804340",
    "end": "1811240"
  },
  {
    "text": "on port three one eight four nine so if I go back over here and I curled",
    "start": "1811240",
    "end": "1818390"
  },
  {
    "text": "now I have to be careful because Twitter won't let me tweet the same tweets twice in the short space of time so I'm gonna",
    "start": "1818390",
    "end": "1826160"
  },
  {
    "text": "say licencia fans and change this port",
    "start": "1826160",
    "end": "1832550"
  },
  {
    "text": "to whatever that was needed it one more time three one eight four nine and I'm",
    "start": "1832550",
    "end": "1846260"
  },
  {
    "text": "gonna just say hello fans",
    "start": "1846260",
    "end": "1849550"
  },
  {
    "text": "and tweet it again so let's go look at my Twitter feed and see how we're doing",
    "start": "1854640",
    "end": "1861300"
  },
  {
    "text": "reload that and there we go so I've now deployed that coding in kubernetes",
    "start": "1861300",
    "end": "1867720"
  },
  {
    "text": "pretty happy with that so we've done some Twitter stuff I've done it in",
    "start": "1867720",
    "end": "1874020"
  },
  {
    "text": "kubernetes ah I'm gonna stop show you demo stuff now",
    "start": "1874020",
    "end": "1880410"
  },
  {
    "text": "because I think that's probably enough for the webinar just can talk through a few other things that you can do so one",
    "start": "1880410",
    "end": "1889830"
  },
  {
    "text": "of the the patterns that's very common in building distributed systems is something called a circuit breaker so",
    "start": "1889830",
    "end": "1896270"
  },
  {
    "start": "1890000",
    "end": "2055000"
  },
  {
    "text": "for instance suppose I want to instead of me writing the status I want to go and grab us a quote from Homer Simpson",
    "start": "1896270",
    "end": "1903360"
  },
  {
    "text": "and then I want to tweet that quote now suppose that Homer Simpson quote service",
    "start": "1903360",
    "end": "1910620"
  },
  {
    "text": "goes down what typically happens in a distributed system is that though these",
    "start": "1910620",
    "end": "1916980"
  },
  {
    "text": "servers that are that are trying to call another server they retry they expect",
    "start": "1916980",
    "end": "1923460"
  },
  {
    "text": "failure and they retry so you you expect that remote services might go down and",
    "start": "1923460",
    "end": "1929280"
  },
  {
    "text": "when they do you treat retry them the problem with that is that if that Homer",
    "start": "1929280",
    "end": "1935940"
  },
  {
    "text": "Simpson quote service goes down and now I have a whole cluster of servers trying",
    "start": "1935940",
    "end": "1941940"
  },
  {
    "text": "it they're already trying it the minute it comes back up it's going to be hammered and it's gonna go down again",
    "start": "1941940",
    "end": "1948330"
  },
  {
    "text": "instantly so the circuit breaker pattern basically says that if that service goes",
    "start": "1948330",
    "end": "1953580"
  },
  {
    "text": "down I'm going to give it time to recover before sending requests to it",
    "start": "1953580",
    "end": "1958980"
  },
  {
    "text": "again and that's a circuit breaker let me just quickly show you what that looks",
    "start": "1958980",
    "end": "1964020"
  },
  {
    "text": "like so if I and this is",
    "start": "1964020",
    "end": "1971860"
  },
  {
    "text": "very similar code to what we've just seen it's got the same tweeter it's got the same listener hears my Homer Simpson",
    "start": "1971860",
    "end": "1979480"
  },
  {
    "text": "quote service and I have a circuit breaker that basically says I have a",
    "start": "1979480",
    "end": "1986020"
  },
  {
    "text": "rolling window of ten seconds and every second I'm gonna have a bucket and if I",
    "start": "1986020",
    "end": "1992950"
  },
  {
    "text": "get any failures at all I'm gonna give it three seconds to back off before coming back and I gotta treat a",
    "start": "1992950",
    "end": "2001320"
  },
  {
    "text": "one-second delay as being that the service is down so in this model it's",
    "start": "2001320",
    "end": "2008640"
  },
  {
    "text": "really really easy and I can show you that the sequence diagram for that I'm basically gonna try and get that quote",
    "start": "2008640",
    "end": "2015330"
  },
  {
    "text": "because it's got the circuit breaker it's going to automatically use the",
    "start": "2015330",
    "end": "2021030"
  },
  {
    "text": "error handling to to tweet a a standard tweet if it's down carry on and then pay",
    "start": "2021030",
    "end": "2029580"
  },
  {
    "text": "low so this kind of stuff now you can do this with ballerina with a service mesh",
    "start": "2029580",
    "end": "2035430"
  },
  {
    "text": "so that would be another way of doing this and there's some great guides on how to get ballerina with ISTE oh and",
    "start": "2035430",
    "end": "2041280"
  },
  {
    "text": "voice link addy up on the ballerina website but if you just want a circuit",
    "start": "2041280",
    "end": "2046770"
  },
  {
    "text": "breaker you don't necessarily want to install a whole service mesh to do that and so so the circuit breakers are built",
    "start": "2046770",
    "end": "2053639"
  },
  {
    "text": "in another thing that's really important in a cloud native environment is",
    "start": "2053640",
    "end": "2059340"
  },
  {
    "start": "2055000",
    "end": "2147000"
  },
  {
    "text": "observability so out of the box ballerina supports open tracing so you",
    "start": "2059340",
    "end": "2067110"
  },
  {
    "text": "just have to configure it to point at your Jaeger or is it kin install and it will",
    "start": "2067110",
    "end": "2072840"
  },
  {
    "text": "generate these kind of charts there's no coding required to do that again after",
    "start": "2072840",
    "end": "2079290"
  },
  {
    "text": "the box it it has Prometheus and graph on of support so it will produce metrics",
    "start": "2079290",
    "end": "2085020"
  },
  {
    "text": "on how many requests there are how many",
    "start": "2085020",
    "end": "2090659"
  },
  {
    "text": "errors many things are in progress all of that kind of metrics will come",
    "start": "2090660",
    "end": "2095940"
  },
  {
    "text": "straight out of the box and it also works with other observability services like honeycomb and who knows and it's a",
    "start": "2095940",
    "end": "2102420"
  },
  {
    "text": "very good webinars out there about that and you know it works with LK",
    "start": "2102420",
    "end": "2108950"
  },
  {
    "text": "admittedly that's just a question of killing the logs in the right place but there's some nice documentation on how",
    "start": "2108950",
    "end": "2114330"
  },
  {
    "text": "to how to work with it okay so you know is it agile I think you know I've been",
    "start": "2114330",
    "end": "2122130"
  },
  {
    "text": "through three or four code build test",
    "start": "2122130",
    "end": "2128160"
  },
  {
    "text": "cycles while we've been speaking on this on this webinar so I think you can see",
    "start": "2128160",
    "end": "2133950"
  },
  {
    "text": "it fits well into an agile a programming model but the the fact that it's got all",
    "start": "2133950",
    "end": "2139110"
  },
  {
    "text": "those network concepts built into the language also makes it really really effective for integration and",
    "start": "2139110",
    "end": "2145740"
  },
  {
    "text": "distributed computing I'm just going to show you some continuous stuff so if I",
    "start": "2145740",
    "end": "2152340"
  },
  {
    "start": "2147000",
    "end": "2395000"
  },
  {
    "text": "go over here I have a code fresh console code fresh is like Travis it's an automated build system in on the web and",
    "start": "2152340",
    "end": "2159830"
  },
  {
    "text": "what I'm gonna do is I'm gonna go and I have a a repository here on my machine",
    "start": "2159830",
    "end": "2168800"
  },
  {
    "text": "with a ballerina a bit of ballerina code in it and I'm gonna just edit the test",
    "start": "2168800",
    "end": "2179060"
  },
  {
    "text": "hello so this is a kind of hello world just like you've seen it has a docker",
    "start": "2179060",
    "end": "2186410"
  },
  {
    "text": "config in it this time and it says hello world and that's the current thing I'm gonna go",
    "start": "2186410",
    "end": "2192420"
  },
  {
    "text": "hello CNC yeah and I'm going to save that and now I'll just go back to my",
    "start": "2192420",
    "end": "2200700"
  },
  {
    "text": "terminal and I'm gonna do a let's see if I've got it up in my history there we",
    "start": "2200700",
    "end": "2205710"
  },
  {
    "text": "are I'm gonna get add comment here so",
    "start": "2205710",
    "end": "2213510"
  },
  {
    "text": "I'm checking that in to get code fresh is linked to my github account so that",
    "start": "2213510",
    "end": "2221250"
  },
  {
    "text": "is going to automatically fire off a build so if I go back to code fresh",
    "start": "2221250",
    "end": "2228380"
  },
  {
    "text": "we can go and see that there's a build now running or depending so I'll show",
    "start": "2228380",
    "end": "2234680"
  },
  {
    "text": "that a second let me just show you what's happening so I have a kubernetes cluster running in Google cloud platform",
    "start": "2234680",
    "end": "2241010"
  },
  {
    "text": "and that's got a service which has got my um let me go look at the services has",
    "start": "2241010",
    "end": "2248750"
  },
  {
    "text": "got my ballerina code running and if I go click on it it says hello world because that's the old version code",
    "start": "2248750",
    "end": "2256730"
  },
  {
    "text": "fresh is going to go through a little build process that's going to clone that repository build the service test test",
    "start": "2256730",
    "end": "2265580"
  },
  {
    "text": "it build the image push the image and deploy it all to kubernetes cluster and this is all configured let me just",
    "start": "2265580",
    "end": "2272540"
  },
  {
    "text": "quickly show you this is all configured off a code fresh animal which has those",
    "start": "2272540",
    "end": "2279680"
  },
  {
    "text": "steps in it so if I go and keep gonna kill that ballerina window so you can",
    "start": "2279680",
    "end": "2284990"
  },
  {
    "text": "see those steps that I just showed you in the code flash window are the package",
    "start": "2284990",
    "end": "2290510"
  },
  {
    "text": "it which basically does following a build be test run the tests so buying a",
    "start": "2290510",
    "end": "2296210"
  },
  {
    "text": "test create the image push the image and deploy to the cluster so let's go and",
    "start": "2296210",
    "end": "2304070"
  },
  {
    "text": "see how that's doing pretty well we've cloned it we've run the tests they're",
    "start": "2304070",
    "end": "2309440"
  },
  {
    "text": "all working let me show you so the tests have run ballerina has its own built-in unit test system which is which is",
    "start": "2309440",
    "end": "2318650"
  },
  {
    "text": "really nice and this is not doing a local test this is doing a genuine Network test so this is doing starting",
    "start": "2318650",
    "end": "2324380"
  },
  {
    "text": "up the server and doing an HTTP call to it so it's a proper network unit test",
    "start": "2324380",
    "end": "2330170"
  },
  {
    "text": "it's just building that docker image it's built it it's pushing it out to to",
    "start": "2330170",
    "end": "2337850"
  },
  {
    "text": "the dock to the Google Cloud docker hub",
    "start": "2337850",
    "end": "2342790"
  },
  {
    "text": "and it's gonna go now deploy it to the Google Duke a cluster let's see how that",
    "start": "2344300",
    "end": "2352200"
  },
  {
    "text": "does and it now says it's done so if I go back to that service and reload it",
    "start": "2352200",
    "end": "2360559"
  },
  {
    "text": "maybe it's not done no it's not done",
    "start": "2363710",
    "end": "2368819"
  },
  {
    "text": "good old live demos just waiting now okay now it's done let's go and see",
    "start": "2368819",
    "end": "2376940"
  },
  {
    "text": "successfully around freestyle step deploy to G at Google truster and some",
    "start": "2376940",
    "end": "2383369"
  },
  {
    "text": "reason it's not updated it I do not know",
    "start": "2383369",
    "end": "2388730"
  },
  {
    "text": "it's the curse of a live demo I really come back to that in a minute",
    "start": "2388730",
    "end": "2393859"
  },
  {
    "text": "sorry about that guys so as you can see it fits nicely into a continuous thing",
    "start": "2393859",
    "end": "2399770"
  },
  {
    "start": "2395000",
    "end": "2428000"
  },
  {
    "text": "it has built-in support for gr PC and protobuf so you just right ballerina",
    "start": "2399770",
    "end": "2405359"
  },
  {
    "text": "code and it generates the protobuf for you it makes it super easy to write those kind of network services it has",
    "start": "2405359",
    "end": "2412050"
  },
  {
    "text": "built-in support the swagger if you know what that is that's a HTTP restful description language you can just say",
    "start": "2412050",
    "end": "2418800"
  },
  {
    "text": "give me a swagger for this ballerina program and it does that you don't have to do any annotations you can if you",
    "start": "2418800",
    "end": "2427020"
  },
  {
    "text": "want it has a full async model as well so I said that it's doing the async",
    "start": "2427020",
    "end": "2433440"
  },
  {
    "start": "2428000",
    "end": "2673000"
  },
  {
    "text": "under the covers if you want to do your own async then you can basically there's futures and starts there's a very",
    "start": "2433440",
    "end": "2440940"
  },
  {
    "text": "powerful concurrency model based on workers and messages across channels so",
    "start": "2440940",
    "end": "2447720"
  },
  {
    "text": "you know we have built in package management we have type checking during",
    "start": "2447720",
    "end": "2452880"
  },
  {
    "text": "compilation when you have a union type system that mirrors Network messages",
    "start": "2452880",
    "end": "2458069"
  },
  {
    "text": "clearly and supports things like XML adjacent as you can see a very nice",
    "start": "2458069",
    "end": "2464010"
  },
  {
    "text": "editing facility in in vs code and also in IntelliJ built-in unit testing",
    "start": "2464010",
    "end": "2471630"
  },
  {
    "text": "integrations with test arena and I hope you like it that's basically",
    "start": "2471630",
    "end": "2477190"
  },
  {
    "text": "my demo everything I demoed is in in set of guides on ballerina IO called",
    "start": "2477190",
    "end": "2482740"
  },
  {
    "text": "ballerina by guide those are the versions are used and so to summarize",
    "start": "2482740",
    "end": "2489029"
  },
  {
    "text": "you know we have a language head that's really designed to help you write to",
    "start": "2489029",
    "end": "2495069"
  },
  {
    "text": "glue logic between micro-services API in SAS apps and a different types of",
    "start": "2495069",
    "end": "2501339"
  },
  {
    "text": "network endpoint it is a general-purpose language but it's really focused on this",
    "start": "2501339",
    "end": "2507690"
  },
  {
    "text": "ability to write these simple pieces of glue logic between different Network",
    "start": "2507690",
    "end": "2513849"
  },
  {
    "text": "endpoints to visualize them as sequence diagrams and to be highly productive and",
    "start": "2513849",
    "end": "2520299"
  },
  {
    "text": "agile in that in that space and I talked about a whole set of capabilities to see",
    "start": "2520299",
    "end": "2527380"
  },
  {
    "text": "ICD Union types I didn't go into the worker model and concurrency model but it's very simple and very powerful I",
    "start": "2527380",
    "end": "2534450"
  },
  {
    "text": "didn't talk about things like lambdas",
    "start": "2534450",
    "end": "2539490"
  },
  {
    "text": "versioning which is built in all sorts of other capabilities that it has it has",
    "start": "2539490",
    "end": "2547569"
  },
  {
    "text": "for instance some capabilities do long running workflow Sando checkpointing there's the ability to do stream",
    "start": "2547569",
    "end": "2554829"
  },
  {
    "text": "processing there's all sorts of nice stuff in there so I really encourage you to find out more any of you who happen",
    "start": "2554829",
    "end": "2562000"
  },
  {
    "text": "to be in the UK and I know that's where a global audience today so I'm I'm being a bit parochial but I'm based in the UK",
    "start": "2562000",
    "end": "2568329"
  },
  {
    "text": "and I'm gonna be talking at a ballerina day in London on November 15th so please",
    "start": "2568329",
    "end": "2574990"
  },
  {
    "text": "sign up that's a free registration and most of all I'd really love to see you",
    "start": "2574990",
    "end": "2580930"
  },
  {
    "text": "know people here get involved you know so it's an open source project pull requests are most welcome it's under the",
    "start": "2580930",
    "end": "2587920"
  },
  {
    "text": "apache license there's a great website ballerina io we",
    "start": "2587920",
    "end": "2593619"
  },
  {
    "text": "were very active on stackoverflow there's a slack channel where we're also very active so please get involved you",
    "start": "2593619",
    "end": "2600369"
  },
  {
    "text": "know there's multiple ways of contributing you can help us improve the syntax and the",
    "start": "2600369",
    "end": "2606500"
  },
  {
    "text": "antics of the language that's still being tweaked or not quite 100 yet you",
    "start": "2606500",
    "end": "2612080"
  },
  {
    "text": "can write new connectors for different end points you can help integrate it",
    "start": "2612080",
    "end": "2617990"
  },
  {
    "text": "into different runtimes we'd love to add a ever talked Cloud Foundry plug-in",
    "start": "2617990",
    "end": "2623330"
  },
  {
    "text": "alongside the doctrine kubernetes so there's a whole bunch of things that we'd love contribution on or you can",
    "start": "2623330",
    "end": "2630200"
  },
  {
    "text": "just tell us what you think and and and get involved that way and I I want to as",
    "start": "2630200",
    "end": "2637400"
  },
  {
    "text": "one of the kind of questions people might ask is you know what stage is this language at so we're not completely",
    "start": "2637400",
    "end": "2643910"
  },
  {
    "text": "language locked on the syntax so we are still doing the syntax but it's pretty",
    "start": "2643910",
    "end": "2649490"
  },
  {
    "text": "robust we do automated performance tests with every release we do long-running",
    "start": "2649490",
    "end": "2654650"
  },
  {
    "text": "tests and and there are people are using this in production already so it's a",
    "start": "2654650",
    "end": "2660020"
  },
  {
    "text": "funny sort of situation we're way it's stable to write code in but at some",
    "start": "2660020",
    "end": "2665900"
  },
  {
    "text": "point you might have to port that code over but to 100 when we when we finally lock the language so I hope that's been",
    "start": "2665900",
    "end": "2673010"
  },
  {
    "start": "2673000",
    "end": "2706000"
  },
  {
    "text": "useful and I really want to thank everyone for taking the time and I hope we've got a bit of time for Q&A",
    "start": "2673010",
    "end": "2678950"
  },
  {
    "text": "I spent slightly more times I wanted but I think we still got 10 minutes for Q&A",
    "start": "2678950",
    "end": "2683990"
  },
  {
    "text": "so that should be good thanks Paul for the great presentation and we do have a",
    "start": "2683990",
    "end": "2691370"
  },
  {
    "text": "few minutes now for questions so just a reminder if you have questions that you'd like to ask please drop them in",
    "start": "2691370",
    "end": "2697430"
  },
  {
    "text": "the Q&A tab at the bottom of your screen and we'll get to as many as we have time for burning all right so our first",
    "start": "2697430",
    "end": "2707870"
  },
  {
    "start": "2706000",
    "end": "3195000"
  },
  {
    "text": "question is what are the advantages of using ballerina over a cloud integration SAS like Mule soft that's that's a",
    "start": "2707870",
    "end": "2717770"
  },
  {
    "text": "really interesting question so the I think the the cloud integration talk",
    "start": "2717770",
    "end": "2726980"
  },
  {
    "text": "it's like mill soft and and Dell Boomi snap logic are a really really good if",
    "start": "2726980",
    "end": "2734720"
  },
  {
    "text": "you are a what they cost citizen integrator so citizen integrate with",
    "start": "2734720",
    "end": "2739820"
  },
  {
    "text": "someone who's trying to integrate their own stuff you're a business guy you you",
    "start": "2739820",
    "end": "2746470"
  },
  {
    "text": "understand the business and you want a simple drag-and-drop approach and as you",
    "start": "2746470",
    "end": "2753100"
  },
  {
    "text": "know and I have no problem with that I think I think that's really useful but I think if you're a developer trying to do",
    "start": "2753100",
    "end": "2760570"
  },
  {
    "text": "that integration that those kind of drag-and-drop environments and those",
    "start": "2760570",
    "end": "2765690"
  },
  {
    "text": "which are fundamentally managed by a DSL in the background domain-specific",
    "start": "2765690",
    "end": "2772750"
  },
  {
    "text": "language are really painful you know I think developers like real programming",
    "start": "2772750",
    "end": "2778840"
  },
  {
    "text": "languages and for example you know when you come to do one of those things like",
    "start": "2778840",
    "end": "2785170"
  },
  {
    "text": "a string manipulation in in one of those toolkits you you end up actually the",
    "start": "2785170",
    "end": "2793480"
  },
  {
    "text": "language doesn't just support general-purpose stuff you end up saying okay now I'm gonna drop into JavaScript",
    "start": "2793480",
    "end": "2800640"
  },
  {
    "text": "or I'm gonna drop into a different model sometimes sometimes you need XPath",
    "start": "2800640",
    "end": "2806740"
  },
  {
    "text": "sometimes you need JSON path so you have all these kind of constructs that help you do everyday things but as soon as",
    "start": "2806740",
    "end": "2816340"
  },
  {
    "text": "you do that you're now in two different worlds you're in the DSL that's that doing overall flow and then you're in",
    "start": "2816340",
    "end": "2822010"
  },
  {
    "text": "JavaScript to handle the your bit of logic and and Ballerina doesn't have that device you're just in in a language",
    "start": "2822010",
    "end": "2828490"
  },
  {
    "text": "it's a it's a full programming language you get a graphical view but as a programmer you can write code but you",
    "start": "2828490",
    "end": "2836140"
  },
  {
    "text": "don't have to spend so much of your time worrying about connectors network handling circuit breakers Jason",
    "start": "2836140",
    "end": "2844210"
  },
  {
    "text": "transformation and so forth because the code understands those things in unity",
    "start": "2844210",
    "end": "2850050"
  },
  {
    "text": "great so someone else is asking how this compares to go that's a really",
    "start": "2854420",
    "end": "2862470"
  },
  {
    "text": "interesting question I think I think you know go is not designed with this sort",
    "start": "2862470",
    "end": "2871200"
  },
  {
    "text": "of tighter focus I think this this language has been designed to help you",
    "start": "2871200",
    "end": "2876869"
  },
  {
    "text": "do these kind of network integration tasks go is a very general purpose language with whether you know there's",
    "start": "2876869",
    "end": "2883859"
  },
  {
    "text": "designed to build highly concurrent system services and you can build highly",
    "start": "2883859",
    "end": "2890190"
  },
  {
    "text": "concurrent system services with this and you can build really good Network programs let's go so you know most",
    "start": "2890190",
    "end": "2896640"
  },
  {
    "text": "languages are sort of you know there's that there's the concept of true and completeness you can do pretty much anything with any language I think go",
    "start": "2896640",
    "end": "2905329"
  },
  {
    "text": "doesn't inherently address these network challenges so in go you you solve these",
    "start": "2905329",
    "end": "2915210"
  },
  {
    "text": "these network problems by using the concurrency model to say now I want to go and handover my network piece of code",
    "start": "2915210",
    "end": "2924240"
  },
  {
    "text": "to another go routine in Ballerina and that's implicit every time you call a",
    "start": "2924240",
    "end": "2931049"
  },
  {
    "text": "network service with that arrow you're implicitly dealing with it asynchronously with another work with it",
    "start": "2931049",
    "end": "2937799"
  },
  {
    "text": "with a separate piece of worker logic that's this under the covers I'm what I",
    "start": "2937799",
    "end": "2943559"
  },
  {
    "text": "just said there's not actually strictly accurate but it's that's the intent of it it's handling it for you the async",
    "start": "2943559",
    "end": "2949380"
  },
  {
    "text": "i/o without you having to worry about it and I I think the other thing that that",
    "start": "2949380",
    "end": "2956030"
  },
  {
    "text": "ballerina has has I have to say I think the type system is is slightly more",
    "start": "2956030",
    "end": "2961559"
  },
  {
    "text": "beautiful than goes type system but that's you know your mileage may vary a bit that's I think a personal thing but",
    "start": "2961559",
    "end": "2969089"
  },
  {
    "text": "I do think that it's a slightly simpler language to learn i I think it's I I",
    "start": "2969089",
    "end": "2975480"
  },
  {
    "text": "found it easier to learn ballerina than to learn go so you know and again that's personal but I think it has a sweet spot",
    "start": "2975480",
    "end": "2983670"
  },
  {
    "text": "when it comes to building these network services that is more optimized for that than go is and I",
    "start": "2983670",
    "end": "2990329"
  },
  {
    "text": "know go is more optimized for some other things and if I if I wanted to be",
    "start": "2990329",
    "end": "2995940"
  },
  {
    "text": "slightly snarky and I'm only joking here so please don't take offense um I think",
    "start": "2995940",
    "end": "3001520"
  },
  {
    "text": "the other thing it says that we built our package management in from day one so there's been no argument so that had",
    "start": "3001520",
    "end": "3007490"
  },
  {
    "text": "to do package management in Colorado but",
    "start": "3007490",
    "end": "3011200"
  },
  {
    "text": "alright is ballerina serverless functions compatible and if yes which platforms that's a great question",
    "start": "3013809",
    "end": "3022039"
  },
  {
    "text": "yes it is and there's already support for ballerina functions in cublas and in",
    "start": "3022039",
    "end": "3031640"
  },
  {
    "text": "open whisk and I know that that the ballerina team and and some other teams",
    "start": "3031640",
    "end": "3037880"
  },
  {
    "text": "are working on getting serverless support into other frameworks as well but those are the two I know about",
    "start": "3037880",
    "end": "3043579"
  },
  {
    "text": "already that already are shipping ballerina supports and that's cublas and open whisk",
    "start": "3043579",
    "end": "3050650"
  },
  {
    "text": "awesome are there any types of cloud workloads that you would personally not",
    "start": "3052480",
    "end": "3058280"
  },
  {
    "text": "recommend using ballerina 4 so certainly",
    "start": "3058280",
    "end": "3065540"
  },
  {
    "text": "I mean I mean lots of cloud work clothes have you know very complex logic that is",
    "start": "3065540",
    "end": "3074900"
  },
  {
    "text": "that is not just talking to other network services now you know we have a",
    "start": "3074900",
    "end": "3080800"
  },
  {
    "text": "object model so ballerina has the concept of objects it's not it's not a",
    "start": "3080800",
    "end": "3087609"
  },
  {
    "text": "it's a simpler model and say Java or C",
    "start": "3087609",
    "end": "3092720"
  },
  {
    "text": "sharp it doesn't have all the inheritance and stuff but you know if you wanted to model out a highly complex",
    "start": "3092720",
    "end": "3099849"
  },
  {
    "text": "set of business domain logic I wouldn't use ballerina I think that",
    "start": "3099849",
    "end": "3107089"
  },
  {
    "text": "that's not its purpose now other people might I'd say you know you can do that",
    "start": "3107089",
    "end": "3112250"
  },
  {
    "text": "and you certainly can but that's not where I see the sweet spot for bothering",
    "start": "3112250",
    "end": "3117470"
  },
  {
    "text": "I see the sweet spot in in writing this this logic that that orchestrates and",
    "start": "3117470",
    "end": "3123890"
  },
  {
    "text": "and composes between other services that that have their heavy lifting on the",
    "start": "3123890",
    "end": "3130280"
  },
  {
    "text": "business logic now that doesn't mean you know I think there are simpler ways of writing business logic but I wouldn't",
    "start": "3130280",
    "end": "3137060"
  },
  {
    "text": "write a core banking application in Ballerina today but I certainly if I had a core banking application I wanted to",
    "start": "3137060",
    "end": "3143930"
  },
  {
    "text": "build a new capability say like a PSD to compliant front end on it then Ballerina",
    "start": "3143930",
    "end": "3150770"
  },
  {
    "text": "be a great choice you you",
    "start": "3150770",
    "end": "3157550"
  },
  {
    "text": "alright looks like we are at the end of our questions for today if anyone else has any feel free to drop them in now",
    "start": "3159730",
    "end": "3168910"
  },
  {
    "text": "otherwise I think we'll wrap up here so",
    "start": "3171430",
    "end": "3178540"
  },
  {
    "text": "thank you everyone yeah thank you Paul thanks so much for joining us today",
    "start": "3178540",
    "end": "3183680"
  },
  {
    "text": "and just a reminder the webinar recording and slides will be online later today you'll receive an email with",
    "start": "3183680",
    "end": "3189290"
  },
  {
    "text": "those links and we'll we look forward to seeing everyone out of future seon CF webinar have a great day",
    "start": "3189290",
    "end": "3197020"
  }
]