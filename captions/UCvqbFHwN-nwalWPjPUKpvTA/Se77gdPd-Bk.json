[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "all right welcome everybody thanks for coming my name is Brad Topal I'm an IBM",
    "start": "30",
    "end": "5759"
  },
  {
    "text": "distinguished engineer I'm a kubernetes contributor remember the kubernetes conformance work group and a Kubb doc",
    "start": "5759",
    "end": "13830"
  },
  {
    "text": "maintainer and I'm gonna let Michael introduce himself sure hi my name is Michael older I'm",
    "start": "13830",
    "end": "19260"
  },
  {
    "text": "also an IBM distinguished engineer I focus on product development technical strategy architecture around our",
    "start": "19260",
    "end": "25170"
  },
  {
    "text": "offerings around IBM cloud private and multi cloud manager which include kubernetes along with other components",
    "start": "25170",
    "end": "31399"
  },
  {
    "text": "okay and today we're going to learn how to leverage kubernetes to support 12 factor for enterprise apps so what are",
    "start": "31399",
    "end": "40379"
  },
  {
    "text": "we gonna be really focused on this is the excitement let's go deploy our apps on the cloud and why would we want to do",
    "start": "40379",
    "end": "48780"
  },
  {
    "start": "46000",
    "end": "74000"
  },
  {
    "text": "this so cloud has evolved as a strategy for disruption and continuous delivery",
    "start": "48780",
    "end": "56039"
  },
  {
    "text": "so if we look we all know the great examples that we see small little businesses like uber and Airbnb start",
    "start": "56039",
    "end": "64948"
  },
  {
    "text": "small they're able to scale up quickly on the cloud and they're able to disrupt",
    "start": "64949",
    "end": "70049"
  },
  {
    "text": "complete industries so a lot of power in this cloud stuff and with the cloud and",
    "start": "70049",
    "end": "77460"
  },
  {
    "start": "74000",
    "end": "136000"
  },
  {
    "text": "enabling micro services and the architectures to scale out quickly we can roll out new updates at immense",
    "start": "77460",
    "end": "84000"
  },
  {
    "text": "speeds now I love to think of good examples of why would a company need to roll out changes very quickly and at",
    "start": "84000",
    "end": "91590"
  },
  {
    "text": "rapid speeds and there's one that just happened the other day so at people familiar with uber and how",
    "start": "91590",
    "end": "99689"
  },
  {
    "text": "it works that if there's not a lot of cars available they do a surge and the prices go up so I don't know if any of",
    "start": "99689",
    "end": "106590"
  },
  {
    "text": "you all saw this I know Jeff Bork saw it because it was on his Twitter feed but at Reagan National Airport the uber",
    "start": "106590",
    "end": "113100"
  },
  {
    "text": "drivers have figured out that several times a day they all at the same time turn off their app and what happens the",
    "start": "113100",
    "end": "121590"
  },
  {
    "text": "the surge kicks in the rates go way up and then they start picking everybody up",
    "start": "121590",
    "end": "126689"
  },
  {
    "text": "and they're making a lot more money so probably uber wants to get a fix out",
    "start": "126689",
    "end": "131819"
  },
  {
    "text": "there because that's just going to get old real",
    "start": "131819",
    "end": "135709"
  },
  {
    "start": "136000",
    "end": "164000"
  },
  {
    "text": "obviously in the cloud data becomes the fuel for business innovation and when",
    "start": "137440",
    "end": "143060"
  },
  {
    "text": "you have lots of services out there and we have lots of AI based services wonderful ways to combine the different",
    "start": "143060",
    "end": "149780"
  },
  {
    "text": "services to do a lot of really cool stuff in the enterprise and for",
    "start": "149780",
    "end": "155090"
  },
  {
    "text": "businesses and really what are we talking about ideally profit or reduce cost so a lot",
    "start": "155090",
    "end": "162110"
  },
  {
    "text": "of good reasons to move to that cloud so what is twelve factor twelve factors of",
    "start": "162110",
    "end": "167990"
  },
  {
    "start": "164000",
    "end": "185000"
  },
  {
    "text": "software methodology for building scalable micro service applications it was originally created by Heroku it's",
    "start": "167990",
    "end": "175220"
  },
  {
    "text": "best practices that are designed to enable applications to be built with portability resilience scalability when",
    "start": "175220",
    "end": "182660"
  },
  {
    "text": "deployed to the cloud and so I'm gonna go into these in much more detail on the",
    "start": "182660",
    "end": "189410"
  },
  {
    "start": "185000",
    "end": "208000"
  },
  {
    "text": "next chart but the big the big key things to take away here is the 12",
    "start": "189410",
    "end": "195110"
  },
  {
    "text": "factor makes it easier to run scale and deploy applications it helps keep parity",
    "start": "195110",
    "end": "200750"
  },
  {
    "text": "between development and production and it provides a strict separation between the build release and run stages and so",
    "start": "200750",
    "end": "209840"
  },
  {
    "start": "208000",
    "end": "600000"
  },
  {
    "text": "when we like to describe these these different 12 factors it's it's easiest to break them up into three categories",
    "start": "209840",
    "end": "216260"
  },
  {
    "text": "of the lifecycle code deploy and operate and so I'm gonna give you a taste of",
    "start": "216260",
    "end": "221660"
  },
  {
    "text": "each one of these the factors that deal with code factor one of twelve factors",
    "start": "221660",
    "end": "227959"
  },
  {
    "text": "is one codebase tracked and a revision control so what don't you want to do you",
    "start": "227959",
    "end": "234770"
  },
  {
    "text": "don't want to have five different versions of your code you know different people run it and and deploying from",
    "start": "234770",
    "end": "241160"
  },
  {
    "text": "those five different versions because you know what eventually you're gonna have a bad day and bad things are going",
    "start": "241160",
    "end": "246320"
  },
  {
    "text": "to happen so ideally you want a single codebase and from that single codebase",
    "start": "246320",
    "end": "251630"
  },
  {
    "text": "is where you're going to be deploying and building and etc we want separate",
    "start": "251630",
    "end": "259220"
  },
  {
    "text": "stages for a build release and run so strictly separate those stages",
    "start": "259220",
    "end": "267050"
  },
  {
    "text": "I've seen this at many container talks where they make it very very clear",
    "start": "267050",
    "end": "272510"
  },
  {
    "text": "listen you may have your containers out there running you don't want to go login and patch that container where it is",
    "start": "272510",
    "end": "280170"
  },
  {
    "text": "right because you know what's gonna happen a couple weeks will go by go out",
    "start": "280170",
    "end": "285600"
  },
  {
    "text": "and have friends maybe go on vacation you're gonna forget that you did those patches and when that eventually crashes",
    "start": "285600",
    "end": "291330"
  },
  {
    "text": "and it's trying to new a new build those changes are going to be lost so it's",
    "start": "291330",
    "end": "296490"
  },
  {
    "text": "very important that instead of going on and doing that that you have a very efficient build release run cycle where",
    "start": "296490",
    "end": "303300"
  },
  {
    "text": "you're making sure you're putting all the changes back into the build and and deploying from there the next key factor",
    "start": "303300",
    "end": "311520"
  },
  {
    "text": "on the code side is parity between development production how many people",
    "start": "311520",
    "end": "317550"
  },
  {
    "text": "in this room have had to use that wonderful line hey it worked on my laptop anybody yeah yeah there's a lot",
    "start": "317550",
    "end": "325500"
  },
  {
    "text": "of people out there so and and why does this happen well if if the laptop environment is different in certain ways",
    "start": "325500",
    "end": "333390"
  },
  {
    "text": "then production that may creep in and you're gonna see it so anytime we can",
    "start": "333390",
    "end": "339510"
  },
  {
    "text": "use techniques to make the development environment look as much like the production environment as we can",
    "start": "339510",
    "end": "345210"
  },
  {
    "text": "huge win to hopefully not have to have that that that awkward conversation that we all know we've had so let's move on",
    "start": "345210",
    "end": "353550"
  },
  {
    "text": "to the deploys right so under the ploys dependencies we want to explicitly",
    "start": "353550",
    "end": "359520"
  },
  {
    "text": "declare and isolate our dependencies and more importantly whatever dependencies and software that that your application",
    "start": "359520",
    "end": "366870"
  },
  {
    "text": "relies on we don't want to assume that the right version is there on production we want to make sure that you're taking",
    "start": "366870",
    "end": "374940"
  },
  {
    "text": "whatever exactly you need with you and going in production so there's no no surprises of versions or what have you",
    "start": "374940",
    "end": "383300"
  },
  {
    "text": "another big 12 factor is configuration and storing the configured in",
    "start": "383300",
    "end": "388740"
  },
  {
    "text": "environment so we don't want to take your configuration information and hard code it into the code that's a Henry",
    "start": "388740",
    "end": "396270"
  },
  {
    "text": "Nash's favorite trick he loves to do that thank you so you don't want to do that and the reason you don't",
    "start": "396270",
    "end": "402690"
  },
  {
    "text": "want to do that is if you can keep that information in the environment and not",
    "start": "402690",
    "end": "407850"
  },
  {
    "text": "in the code that if you need to move the service and move it to another environment then it's much easier to",
    "start": "407850",
    "end": "413610"
  },
  {
    "text": "port the code to a different environment because all your environment information is is not you know hard-coded in the",
    "start": "413610",
    "end": "419400"
  },
  {
    "text": "code factor for here is backing services",
    "start": "419400",
    "end": "425360"
  },
  {
    "text": "you want to treat your backing services as attached resources the best example",
    "start": "425360",
    "end": "432360"
  },
  {
    "text": "of this is being able to attach and detach databases so if you have your",
    "start": "432360",
    "end": "437790"
  },
  {
    "text": "database and something goes wrong with the database you should ideally be able to detach that database and attach a new",
    "start": "437790",
    "end": "445560"
  },
  {
    "text": "version of the database and not have the world crashing down on you factor six",
    "start": "445560",
    "end": "453090"
  },
  {
    "text": "processes obviously we want to make our application run as stateless processes",
    "start": "453090",
    "end": "458580"
  },
  {
    "text": "it's a big factor in 12 factor if they can run as stateless processes it's much",
    "start": "458580",
    "end": "463920"
  },
  {
    "text": "easier to scale them up and have a lot of them running port binding having your",
    "start": "463920",
    "end": "470400"
  },
  {
    "text": "application built as services that are exposed as a port enables a lot of reuse anytime to get a lot of reuse is another",
    "start": "470400",
    "end": "477870"
  },
  {
    "text": "excellent factor of the 12 factors and we're almost done here we're going to go",
    "start": "477870",
    "end": "483570"
  },
  {
    "text": "to the operates and these are pretty easy to describe so we'll go to the operates concurrency we all understand",
    "start": "483570",
    "end": "491280"
  },
  {
    "text": "why we want concurrency when things really pick up and the site starts getting pounded on we want to be able to",
    "start": "491280",
    "end": "498720"
  },
  {
    "text": "quickly scale up and supporting concurrency is huge",
    "start": "498720",
    "end": "504840"
  },
  {
    "text": "another factor factor 9 is disposability ideally if your application crashes it",
    "start": "504840",
    "end": "511830"
  },
  {
    "text": "shouldn't be the end of the world right it shouldn't be the end of the world some way that should be able to be restarted and and life is good",
    "start": "511830",
    "end": "519599"
  },
  {
    "text": "so we want to have an approach for handling disposability from a 12 factor",
    "start": "519599",
    "end": "525510"
  },
  {
    "text": "perspective on logs ideally everything should just write to standard out and there would be some",
    "start": "525510",
    "end": "530940"
  },
  {
    "text": "other tool or mechanism that gathers everything up things don't have to do something special for how how the logs are written",
    "start": "530940",
    "end": "537730"
  },
  {
    "text": "out and there should be a way for in factor 12 to handle admin processes",
    "start": "537730",
    "end": "544060"
  },
  {
    "text": "maybe need to generate a database schema some other type of administration there needs to be a way to do that as well",
    "start": "544060",
    "end": "549970"
  },
  {
    "text": "so these are wonderful best practices for building scalable robust",
    "start": "549970",
    "end": "556210"
  },
  {
    "text": "applications hiroko demonstrated how well they worked and a lot of literature has been written about it and what we're",
    "start": "556210",
    "end": "564910"
  },
  {
    "text": "gonna demonstrate today and I'm gonna lead the hard part to my friend Michael because that's what I always do if you",
    "start": "564910",
    "end": "569950"
  },
  {
    "text": "all know me that's something I would clearly do I'm gonna leave the hard part to Michael Michael's going to show you",
    "start": "569950",
    "end": "575050"
  },
  {
    "text": "how all these wonderful twelve factors can be mapped to mechanisms and and",
    "start": "575050",
    "end": "581860"
  },
  {
    "text": "things that are provided by kubernetes and he's even gonna demo it so at this point I'm gonna enjoy my easy roll",
    "start": "581860",
    "end": "589150"
  },
  {
    "text": "talking about the twelve factors and I'm gonna let Michael do the hard part all right thanks Brad I appreciate it so",
    "start": "589150",
    "end": "595020"
  },
  {
    "text": "what we wanted to highlight we think about these three groups okay how do we",
    "start": "595020",
    "end": "600310"
  },
  {
    "start": "600000",
    "end": "728000"
  },
  {
    "text": "begin to make these real with kubernetes so one of the neat things is that when you look at kubernetes and you look at",
    "start": "600310",
    "end": "605890"
  },
  {
    "text": "how it defines its architecture it's heavily influenced by these twelve factors so the way that I think about",
    "start": "605890",
    "end": "612370"
  },
  {
    "text": "codebase I can capture all of my content whether it's docker images whether it's",
    "start": "612370",
    "end": "618190"
  },
  {
    "text": "the amel configuration for kubernetes this is text-based content that can be easily source controlled and managed and",
    "start": "618190",
    "end": "624640"
  },
  {
    "text": "can feed into a build system which can package it up so we'll see some examples",
    "start": "624640",
    "end": "631570"
  },
  {
    "text": "here in a few minutes of how helm provides a default package manager for kubernetes and how it brings together",
    "start": "631570",
    "end": "637060"
  },
  {
    "text": "different parts of that that API layer that's really the API captured is text",
    "start": "637060",
    "end": "642670"
  },
  {
    "text": "so code base and being able to drive everything through declarative mechanism",
    "start": "642670",
    "end": "647860"
  },
  {
    "text": "becomes a critical factor in building containerized applications and kubernetes being able to tie this into a",
    "start": "647860",
    "end": "653920"
  },
  {
    "text": "continuous delivery system so how I build and package the image the helm chart and then promote that built",
    "start": "653920",
    "end": "659860"
  },
  {
    "text": "artifact from development all the way through to production what's really powerful then is because it's simple and",
    "start": "659860",
    "end": "666730"
  },
  {
    "text": "consists to deploy this containerized workload with its standard configuration this",
    "start": "666730",
    "end": "672470"
  },
  {
    "text": "enables me to drive better parity between a development environment and a",
    "start": "672470",
    "end": "677660"
  },
  {
    "text": "production environment so it may become the day that when I say it works well in my laptop what I'm actually saying is",
    "start": "677660",
    "end": "684920"
  },
  {
    "text": "that I took the containerized version of the database ran it in the correct highly available topology I took the",
    "start": "684920",
    "end": "691070"
  },
  {
    "text": "correct version of my app server ran it in a correct highly available topology and it worked there and that's",
    "start": "691070",
    "end": "696380"
  },
  {
    "text": "representing exactly how I'm going to run it in production and so we talked about parity by reducing the number of",
    "start": "696380",
    "end": "703400"
  },
  {
    "text": "differences between a development context and a production context it really helps eliminate sort of errors of",
    "start": "703400",
    "end": "710240"
  },
  {
    "text": "absence sort of the I forgot that it was this variable in production or I forgot that it was configured with TLS security",
    "start": "710240",
    "end": "717110"
  },
  {
    "text": "and production but it worked fine and development in the issue is with a certificate those nuances those deltas",
    "start": "717110",
    "end": "722120"
  },
  {
    "text": "those differences get pushed to zero and so you get a more consistent way of promoting that content from one stage",
    "start": "722120",
    "end": "728330"
  },
  {
    "start": "728000",
    "end": "892000"
  },
  {
    "text": "the next this becomes very powerful when we think about the deploy factors so",
    "start": "728330",
    "end": "733520"
  },
  {
    "text": "kubernetes introduces a few key concerns each of these objects that you see out",
    "start": "733520",
    "end": "738650"
  },
  {
    "text": "to the side in a box is the kubernetes object so how many of you are writing",
    "start": "738650",
    "end": "744410"
  },
  {
    "text": "kubernetes applications today on a regular basis how many of you are still in that learning mode how many of you",
    "start": "744410",
    "end": "751880"
  },
  {
    "text": "are writing and learning at the same time hopefully everybody right so when",
    "start": "751880",
    "end": "757279"
  },
  {
    "text": "you look at kubernetes this is what we mean we say that it's heavily influenced by 12 factor when I think about 12",
    "start": "757279",
    "end": "762950"
  },
  {
    "text": "factor and I think about how I manage configuration kubernetes gives us constructs for the config map and the",
    "start": "762950",
    "end": "768500"
  },
  {
    "text": "secret that allow us to mount those fields those keys those values those",
    "start": "768500",
    "end": "773959"
  },
  {
    "text": "files of certificates into the container naturally as part of the deployment process so it's not burned into the",
    "start": "773959",
    "end": "780890"
  },
  {
    "text": "image it's something that actually gets mounted either into the process environment table or made available through files on the file system for the",
    "start": "780890",
    "end": "788089"
  },
  {
    "text": "container when we think about backing services I can link to a network service so I have a standard model now saying",
    "start": "788089",
    "end": "795680"
  },
  {
    "text": "here is the way that my application exposes its network endpoints this also relates to",
    "start": "795680",
    "end": "801250"
  },
  {
    "text": "work binding and I have a way of declaring I need to consume an existing service through this mechanism right so",
    "start": "801250",
    "end": "807790"
  },
  {
    "text": "I get sort of a built-in poor-man's load balancer for every application that I want to deploy and this also makes sense",
    "start": "807790",
    "end": "814780"
  },
  {
    "text": "for persistent volumes if I want to attach the data that's actually driving my backing database my data store",
    "start": "814780",
    "end": "821410"
  },
  {
    "text": "whether it's a cache or relational database or no sequel database I can abstract the way that that storage is",
    "start": "821410",
    "end": "827350"
  },
  {
    "text": "bound into the container which means now again I can use that way of packaging a new version of the container deploying",
    "start": "827350",
    "end": "833650"
  },
  {
    "text": "it and rebinding the same storage that becomes very powerful if I want to do canary testing where I'm constantly",
    "start": "833650",
    "end": "840130"
  },
  {
    "text": "testing the new version of a database against my existing data and looking for problems on upgrade or regressions that",
    "start": "840130",
    "end": "846340"
  },
  {
    "text": "have come into that codebase and then when we think about the process model containers are exactly one for one the",
    "start": "846340",
    "end": "853660"
  },
  {
    "text": "Linux kernel process model when I stand up a container I isolate that process",
    "start": "853660",
    "end": "858910"
  },
  {
    "text": "from other processes in the operating system isolate its filesystem isolate its network namespace and ultimately",
    "start": "858910",
    "end": "866620"
  },
  {
    "text": "it's still a simple process that is scheduled by the Linux kernel with this",
    "start": "866620",
    "end": "871720"
  },
  {
    "text": "sort of little you know shell around it the container itself and so we think about pods as the way of structuring",
    "start": "871720",
    "end": "878160"
  },
  {
    "text": "running a container or running a collection of containers as a unit and we think about the the notion of the",
    "start": "878160",
    "end": "884860"
  },
  {
    "text": "container itself is just the simple process that's being run on a host and where kubernetes really brings a lot of",
    "start": "884860",
    "end": "890950"
  },
  {
    "text": "power as when we think about how to orchestrate these containers alright containers to a large extent",
    "start": "890950",
    "end": "897220"
  },
  {
    "text": "have been around now for many years but I think we're seeing the the sort of transition point to more mainstream",
    "start": "897220",
    "end": "903850"
  },
  {
    "text": "adoption because what was locking is not to simply how I build an application into a container or how I start a single",
    "start": "903850",
    "end": "911020"
  },
  {
    "text": "instance of a container but how I orchestrate a broader application problem right how I run things like",
    "start": "911020",
    "end": "917020"
  },
  {
    "text": "twelve factor micro services and so when we think about the different orchestration patterns that kubernetes",
    "start": "917020",
    "end": "922630"
  },
  {
    "text": "provides out of the box we see deployment controllers and stateful sets applying a very specific opinion of how",
    "start": "922630",
    "end": "930280"
  },
  {
    "text": "pods need to be operated so how I scaled them out how I add additional",
    "start": "930280",
    "end": "935290"
  },
  {
    "text": "and this concept of disposability what do I do when a pod fails well the great thing is pods are largely unimportant",
    "start": "935290",
    "end": "943990"
  },
  {
    "text": "right it's the collective use of all of the pods together that create an application so if one pod fails because",
    "start": "943990",
    "end": "950590"
  },
  {
    "text": "the node failed because it's storage went belly up or whatever ultimately I have other instances of that application",
    "start": "950590",
    "end": "956830"
  },
  {
    "text": "pod running each of those again are backed by a or actually providing the",
    "start": "956830",
    "end": "962350"
  },
  {
    "text": "backing to a service which is then consumed by my my applications or other consumers that are using that as an API",
    "start": "962350",
    "end": "969700"
  },
  {
    "text": "or as a data store so ultimately each of the 12 factors Maps very cleanly to",
    "start": "969700",
    "end": "974970"
  },
  {
    "text": "these different aspects of kubernetes one of the neat ones that that I find",
    "start": "974970",
    "end": "979990"
  },
  {
    "text": "talking to folks that's kind of left out is what do you do for admin processes and kubernetes jobs are a great way to",
    "start": "979990",
    "end": "986110"
  },
  {
    "text": "do high-performance computing I can do batch processing maybe I process payroll and it makes sense to do that in a batch",
    "start": "986110",
    "end": "993010"
  },
  {
    "text": "as a job but jobs also provide us a way that we can deliver admin tasks into a",
    "start": "993010",
    "end": "998530"
  },
  {
    "text": "cluster in a way that it's very predictable I can capture it as source code I can manage it as part of the",
    "start": "998530",
    "end": "1004020"
  },
  {
    "text": "build I can promote a migration job from one stage to the next so jobs themselves become a powerful way",
    "start": "1004020",
    "end": "1010620"
  },
  {
    "text": "to also administrate behavior on the cluster and I think what we're seeing now is the evolution of things like",
    "start": "1010620",
    "end": "1016710"
  },
  {
    "text": "operators making that more of a first-class controller concept and so we may see operators take over that role",
    "start": "1016710",
    "end": "1022800"
  },
  {
    "text": "but at least there's a way to do it today as well so I'll show in a simple",
    "start": "1022800",
    "end": "1029220"
  },
  {
    "text": "application that meets 12 factor principles and we'll see this in just a moment but let's talk about sort of the",
    "start": "1029220",
    "end": "1034560"
  },
  {
    "text": "structure and then what I want to show you is also how we can use kubernetes even for apps that weren't built with",
    "start": "1034560",
    "end": "1040920"
  },
  {
    "text": "strict 12 factor principles in mind how the support in kubernetes that maps to",
    "start": "1040920",
    "end": "1047640"
  },
  {
    "text": "12 factor can carry over and make it easier to manage more standalone or traditional applications or workloads",
    "start": "1047640",
    "end": "1053850"
  },
  {
    "text": "and we'll see some some examples with helm of that using helm to do that in just a moment but just a simple example",
    "start": "1053850",
    "end": "1060090"
  },
  {
    "text": "so this is just a node application it happens to talk to one of our services in IBM cloud but this is true for any",
    "start": "1060090",
    "end": "1066960"
  },
  {
    "text": "application any 12 factor app you want to build generally you're gonna have the app itself and that typically",
    "start": "1066960",
    "end": "1075400"
  },
  {
    "text": "for a stateless service you're gonna use a crew Bonet to use deployment in order to describe that pod and describe how to",
    "start": "1075400",
    "end": "1081220"
  },
  {
    "text": "scale it out how many desired replicas do I want a key factor here is that these instances are typically stateless",
    "start": "1081220",
    "end": "1087190"
  },
  {
    "text": "because remember one of the principles of 12 factor is I use backing services and port bindings to isolate other",
    "start": "1087190",
    "end": "1094240"
  },
  {
    "text": "dependencies so if I need a cache then all of the pods are going to connect to a shared cache that cache might itself",
    "start": "1094240",
    "end": "1101290"
  },
  {
    "text": "be running as a collection of pods right so each layer of the dependency tree is using all of the same principles I can",
    "start": "1101290",
    "end": "1108640"
  },
  {
    "text": "expose this application through a service so the crew Bonetti service basically acts like a local load",
    "start": "1108640",
    "end": "1114910"
  },
  {
    "text": "balancer it can reference or be exposed outside of the cluster as a load balancer service it can be used locally",
    "start": "1114910",
    "end": "1121690"
  },
  {
    "text": "where it simply provides a local facade to many pods that are behind it and you can even use a trick with kubernetes",
    "start": "1121690",
    "end": "1128440"
  },
  {
    "text": "services today where you declare it as an external name and now it becomes kind of a way to have a unique alias that",
    "start": "1128440",
    "end": "1135670"
  },
  {
    "text": "says well this actual dependency is an external service that's off cluster but",
    "start": "1135670",
    "end": "1141400"
  },
  {
    "text": "I still want to explicitly declare it so when I do source control and I look at my pod depends on API a B and C even if",
    "start": "1141400",
    "end": "1148870"
  },
  {
    "text": "those api's aren't running as pods in the same cluster I want to see them listed out so I can actually manage them",
    "start": "1148870",
    "end": "1155620"
  },
  {
    "text": "more effectively and so if you want to take a look at a realistic example so",
    "start": "1155620",
    "end": "1161140"
  },
  {
    "text": "this is actually on github so if you look up my repo and github you can find this out but just to kind of show a",
    "start": "1161140",
    "end": "1167020"
  },
  {
    "text": "simple 12 factor micro service again as a deployment I'm describing things like",
    "start": "1167020",
    "end": "1172540"
  },
  {
    "text": "the number of replicas because each of these replicas each of these pods is stateless so if one fails ie is",
    "start": "1172540",
    "end": "1179140"
  },
  {
    "text": "disposable then the deployment controller will simply create new replicas to take over",
    "start": "1179140",
    "end": "1184630"
  },
  {
    "text": "that role in this case the pod does not actually interact with any storage so",
    "start": "1184630",
    "end": "1190720"
  },
  {
    "text": "it's truly stateless but it does actually consume an upstream service and",
    "start": "1190720",
    "end": "1196090"
  },
  {
    "text": "API from a in this case from IBM cloud but it could be any environment and so in this case we're actually",
    "start": "1196090",
    "end": "1202120"
  },
  {
    "text": "seeing a workspace ID which is a config map excellent thank you for this pause",
    "start": "1202120",
    "end": "1215080"
  },
  {
    "text": "for the public safety announcement all right and in Elson it actually binds in a secret into this model as well the",
    "start": "1215080",
    "end": "1221980"
  },
  {
    "text": "config map in secret aren't shown in this file because you would create them for your specific application but like",
    "start": "1221980",
    "end": "1227440"
  },
  {
    "text": "we saw in the slide the config map ultimately loads this workspace ID as a",
    "start": "1227440",
    "end": "1234100"
  },
  {
    "text": "variable in the process table of this container and this is that that principle of separating the",
    "start": "1234100",
    "end": "1239560"
  },
  {
    "text": "configuration from the application from the source code so so that's fairly",
    "start": "1239560",
    "end": "1245290"
  },
  {
    "text": "simple to take a stateless app deployed in kubernetes map it to those 12 factor principles if we kind of take a closer",
    "start": "1245290",
    "end": "1252370"
  },
  {
    "text": "look here we're looking at each of these different process each of these different characteristics so and I'm not",
    "start": "1252370",
    "end": "1259330"
  },
  {
    "text": "going to turn around because that's actually a little bit dizzying just to see it at that angle that's weird anyway so container images",
    "start": "1259330",
    "end": "1265270"
  },
  {
    "text": "themselves we're capturing that as docker file stalker files are easy to source control the configuration the",
    "start": "1265270",
    "end": "1271330"
  },
  {
    "text": "example we looked at here as a deployment that's also easy to source control and because they're easy to source control they're easy to",
    "start": "1271330",
    "end": "1277060"
  },
  {
    "text": "incorporate into a continuous delivery pipeline and this ultimately is what drives the culture change that you need",
    "start": "1277060",
    "end": "1284950"
  },
  {
    "text": "in order to be competitive it's not the containers or kubernetes are magic and help enable new entrepreneurial business",
    "start": "1284950",
    "end": "1291880"
  },
  {
    "text": "models or help enable disruptive business models it's that they provide some of the characteristics and the",
    "start": "1291880",
    "end": "1298090"
  },
  {
    "text": "tools that your culture needs to use in order to be more adaptive to your environment we look at the deploy",
    "start": "1298090",
    "end": "1304540"
  },
  {
    "start": "1303000",
    "end": "1392000"
  },
  {
    "text": "factors again config Maps secrets our way to expose that information into the",
    "start": "1304540",
    "end": "1310420"
  },
  {
    "text": "pod and ultimately the pods themselves are these disposable instances which are managed as processes in the application",
    "start": "1310420",
    "end": "1317890"
  },
  {
    "text": "so this is kind of just a visual picture of what we've been talking about the pod itself contains multiple containers those containers may or may not buy into",
    "start": "1317890",
    "end": "1325180"
  },
  {
    "text": "additional storage volumes and then those pods might then expose one or more services and then for operate we look at",
    "start": "1325180",
    "end": "1332860"
  },
  {
    "text": "the notion of different controllers so deployment is one controller that supports a stateless",
    "start": "1332860",
    "end": "1338299"
  },
  {
    "text": "workload we also see controllers or on things like stateful workloads these ultimately are typically used for",
    "start": "1338299",
    "end": "1344059"
  },
  {
    "text": "databases where the way that I replace a pod is important so if I think about",
    "start": "1344059",
    "end": "1350179"
  },
  {
    "text": "something like at CD it has maybe three replicas they establish a notion of",
    "start": "1350179",
    "end": "1355520"
  },
  {
    "text": "quorum if one replicas is lost I actually want the new pod to have the same name and to",
    "start": "1355520",
    "end": "1361880"
  },
  {
    "text": "begin to look like the replica that was lost so they're slightly less disposable I can recover if they fail but if I'm",
    "start": "1361880",
    "end": "1369350"
  },
  {
    "text": "dealing with a stateless application I can add ten instances all at the same time if I'm dealing with a stateful",
    "start": "1369350",
    "end": "1374419"
  },
  {
    "text": "workload I may want to have replicas one come online first then replicas to come",
    "start": "1374419",
    "end": "1380450"
  },
  {
    "text": "online sync with its prior replicas replica three come online and that's really what a stateful workload",
    "start": "1380450",
    "end": "1386929"
  },
  {
    "text": "controller does compared to a deployment workload controller okay so how many of",
    "start": "1386929",
    "end": "1395029"
  },
  {
    "text": "you have 100% of your applications today that you run that are not running in",
    "start": "1395029",
    "end": "1400130"
  },
  {
    "text": "containers that are already running in 12 factors already running as microservices how many of you have pure",
    "start": "1400130",
    "end": "1405529"
  },
  {
    "text": "micro service architectures from beginning to end today all right so we got one guy in a start-up probably maybe",
    "start": "1405529",
    "end": "1412940"
  },
  {
    "text": "a successful one but largely this is not the case most enterprises that we talk",
    "start": "1412940",
    "end": "1419120"
  },
  {
    "text": "to have a large amount of IT that's not fully containerized hasn't been built",
    "start": "1419120",
    "end": "1424880"
  },
  {
    "text": "with these principles because state of the art ten years ago was different state of the art ten years ago was I",
    "start": "1424880",
    "end": "1431690"
  },
  {
    "text": "build Java runtimes Java applications I cluster those applications I roll out",
    "start": "1431690",
    "end": "1438529"
  },
  {
    "text": "updates to the schema updates to the application updates to my my load balancer layer all together and I do",
    "start": "1438529",
    "end": "1446270"
  },
  {
    "text": "very specific blue-green zones that are mirrors and if one zone is lost I can",
    "start": "1446270",
    "end": "1453890"
  },
  {
    "text": "fall back to the other one I can take one zone offline during a low period upgrade it bring it back online the",
    "start": "1453890",
    "end": "1461029"
  },
  {
    "text": "challenge with that style of architecture is that it just requires more human coordination right because",
    "start": "1461029",
    "end": "1467750"
  },
  {
    "text": "I'm actually coordinating all of the humans making changes to these different layers when I go to containers and kubernetes more of",
    "start": "1467750",
    "end": "1474110"
  },
  {
    "text": "that intelligence is baked into the platform itself okay so how does this help me if I'm running an application",
    "start": "1474110",
    "end": "1481010"
  },
  {
    "text": "that's different well it turns out that characteristics that may have been put into kubernetes",
    "start": "1481010",
    "end": "1487850"
  },
  {
    "text": "to support twelve factor also make it easier to manage these traditional workloads so for example helm charts are",
    "start": "1487850",
    "end": "1494720"
  },
  {
    "text": "a way that not only allow us to represent micro-services and twelve factor ops but I can take an existing",
    "start": "1494720",
    "end": "1500810"
  },
  {
    "text": "stand-alone application build it into a container and then describe how to",
    "start": "1500810",
    "end": "1505880"
  },
  {
    "text": "provide its configuration through config Maps and secrets can describe how to",
    "start": "1505880",
    "end": "1511070"
  },
  {
    "text": "bind its available services through a kubernetes service definition can",
    "start": "1511070",
    "end": "1516170"
  },
  {
    "text": "describe how to differentiate the process from the storage using a Kerber Nettie's persistent volume claim and and",
    "start": "1516170",
    "end": "1522650"
  },
  {
    "text": "persistent volume and now even though this large container is bigger than a",
    "start": "1522650",
    "end": "1528650"
  },
  {
    "text": "traditional micro service and even though it may not meet all the principles of stateless services and it",
    "start": "1528650",
    "end": "1534110"
  },
  {
    "text": "may not be as disposable it still enables me to do better continuous delivery I can begin applying things",
    "start": "1534110",
    "end": "1540500"
  },
  {
    "text": "like canary testing I can begin replicating development environments that match more closely to the same",
    "start": "1540500",
    "end": "1546080"
  },
  {
    "text": "versions of messaging services database services caches etc that are used in",
    "start": "1546080",
    "end": "1551150"
  },
  {
    "text": "production and so in this case I'll pick on an example which is IBM MQ series MQ",
    "start": "1551150",
    "end": "1557360"
  },
  {
    "start": "1552000",
    "end": "1680000"
  },
  {
    "text": "has been around there may be some of you in the room that are younger than MQ",
    "start": "1557360",
    "end": "1562370"
  },
  {
    "text": "it's been around for a while and it's a core part of messaging layers for lots",
    "start": "1562370",
    "end": "1567470"
  },
  {
    "text": "of financial services and insurance in many industries I'm not here to tell you about how great MQ is but it's a great",
    "start": "1567470",
    "end": "1573410"
  },
  {
    "text": "example of an app that's not twelve factor predates a lot of this current knowledge and point of view but",
    "start": "1573410",
    "end": "1579500"
  },
  {
    "text": "ultimately is still valuable to capture as a container and run using these principles so what we're going to look",
    "start": "1579500",
    "end": "1586100"
  },
  {
    "text": "at is a helmet art for MQ where we'll see how secrets are used to manage things like its certificates or the",
    "start": "1586100",
    "end": "1592520"
  },
  {
    "text": "credentials to run we'll see how MQ itself is running as a container image and ultimately takes advantage of this",
    "start": "1592520",
    "end": "1599090"
  },
  {
    "text": "process model provided by the and the orchestration model provided around it by kubernetes and then",
    "start": "1599090",
    "end": "1605370"
  },
  {
    "text": "ultimately this enables us to make a full version of this messaging service and plug in your favorite traditional",
    "start": "1605370",
    "end": "1612030"
  },
  {
    "text": "middleware or back-end service that you need to say instead of mq but it allows me to then plug that into how my 12 factor services",
    "start": "1612030",
    "end": "1619980"
  },
  {
    "text": "are doing their job because 12 factor services are only interesting if they have data more often than not if they",
    "start": "1619980",
    "end": "1627030"
  },
  {
    "text": "have messaging if they have caching right 12 factor services with zero data zero attachment to real information in",
    "start": "1627030",
    "end": "1633900"
  },
  {
    "text": "the real world are I'd love to see if you have interesting examples but I find they're always attached to these other",
    "start": "1633900",
    "end": "1639270"
  },
  {
    "text": "things that don't fit neatly in the 12 factor box well look at the operator",
    "start": "1639270",
    "end": "1644400"
  },
  {
    "text": "factors here and I say operator I mean operate in this example we'll talk about a stateful set so it'll actually have MQ",
    "start": "1644400",
    "end": "1651060"
  },
  {
    "text": "running as a stateful set running as pods that can mount persistent volumes and ultimately these pods are now",
    "start": "1651060",
    "end": "1656880"
  },
  {
    "text": "generating logs and metrics and other visibility other notions of observability that you need to satisfy",
    "start": "1656880",
    "end": "1663990"
  },
  {
    "text": "when you build out a kubernetes platform you're beginning to adopt this as your principal way of delivering your",
    "start": "1663990",
    "end": "1669810"
  },
  {
    "text": "applications those aspects of how I begin to manage those workloads manage those pods that's a problem you need to",
    "start": "1669810",
    "end": "1675900"
  },
  {
    "text": "focus on because that's that's probably the next big layer a problem we have to solve today so when we think about",
    "start": "1675900",
    "end": "1683790"
  },
  {
    "start": "1680000",
    "end": "1719000"
  },
  {
    "text": "continuous delivery now even though these workloads that don't fit traditional twelve factor are even",
    "start": "1683790",
    "end": "1690960"
  },
  {
    "text": "though they don't fit into that mold because we're using principles like containerization like source source",
    "start": "1690960",
    "end": "1697080"
  },
  {
    "text": "control to manage those services those declarations of configuration they become easier now to integrate into your",
    "start": "1697080",
    "end": "1703470"
  },
  {
    "text": "continuous delivery pipeline and allow you to begin leveraging a platform like kubernetes to improve your entire",
    "start": "1703470",
    "end": "1710280"
  },
  {
    "text": "ecosystem not just that percentage of micro services that make up sort of the tip of the iceberg that's maybe the big",
    "start": "1710280",
    "end": "1716940"
  },
  {
    "text": "punchline I want you to walk away with today so in this example what I'll do is I'll start with just a set of helmet",
    "start": "1716940",
    "end": "1723900"
  },
  {
    "start": "1719000",
    "end": "1945000"
  },
  {
    "text": "charts and you can browse these on github if you'd like they're at github com and what I'm using are the ones that",
    "start": "1723900",
    "end": "1730470"
  },
  {
    "text": "iBM has been building in the community so these represent open source middleware IBM middleware and what I want you to",
    "start": "1730470",
    "end": "1736940"
  },
  {
    "text": "take away is not necessarily that you should go and adopt this is your only path but they do represent a lot of good",
    "start": "1736940",
    "end": "1743240"
  },
  {
    "text": "learning and examples that we've absorbed and begun sharing in the community and so if you look here what",
    "start": "1743240",
    "end": "1749510"
  },
  {
    "text": "you'll find is that there's actually many helm charts available and so we're",
    "start": "1749510",
    "end": "1754730"
  },
  {
    "text": "gonna pick on the one for mq and so if you're trying to understand how these principles really get apply to this",
    "start": "1754730",
    "end": "1760429"
  },
  {
    "text": "style I can drill into the helmet chart and what I'm looking at now are a collection of template files each",
    "start": "1760429",
    "end": "1767240"
  },
  {
    "text": "template file then maps to one of these concepts that we've been talking about okay and this is true for all of the",
    "start": "1767240",
    "end": "1772970"
  },
  {
    "text": "workloads that are out here and I can actually go and deploy this in my environment so let's take a look at that",
    "start": "1772970",
    "end": "1778340"
  },
  {
    "text": "now so here I've got a cluster and I'm",
    "start": "1778340",
    "end": "1785630"
  },
  {
    "text": "gonna change my export here alright so I've got helm installed and I",
    "start": "1785630",
    "end": "1793159"
  },
  {
    "text": "can list all of these home releases and it doesn't display as neatly as I'd like it to on the screen but what you can see",
    "start": "1793159",
    "end": "1799970"
  },
  {
    "text": "is that I've got certain charts that are deployed this is the mq chart i can see",
    "start": "1799970",
    "end": "1805429"
  },
  {
    "text": "the version that's running and i can actually now deploy this workload very",
    "start": "1805429",
    "end": "1810590"
  },
  {
    "text": "easily using Helms so what it's going to do is it's going to take a version of this template that you can review on",
    "start": "1810590",
    "end": "1816740"
  },
  {
    "text": "github and stand up a live running instance then we're going to take a look at that so in order to bring all of",
    "start": "1816740",
    "end": "1823760"
  },
  {
    "text": "these parts together helm has been part of that CI CD process to package all the files it's referencing a built image for",
    "start": "1823760",
    "end": "1831740"
  },
  {
    "text": "Maya container and then it's going to deploy all of those different parts and",
    "start": "1831740",
    "end": "1836840"
  },
  {
    "text": "create the full application and so this command is saying helm install giving it",
    "start": "1836840",
    "end": "1842539"
  },
  {
    "text": "a name and I'm actually going to modify the name here it's giving it a",
    "start": "1842539",
    "end": "1849950"
  },
  {
    "text": "particular chart that I want to deploy so I have an entire repository of available charts and then it's setting",
    "start": "1849950",
    "end": "1855470"
  },
  {
    "text": "some variables how I want that actual chart configured and now that it's deployed I'm going to switch into a UI",
    "start": "1855470",
    "end": "1862280"
  },
  {
    "text": "just to show you it because I think it's easier to review in this way but the",
    "start": "1862280",
    "end": "1867320"
  },
  {
    "text": "version that I just is now standing up all of these different piece parts from kubernetes to",
    "start": "1867320",
    "end": "1873109"
  },
  {
    "text": "enable us to take advantage of a 12 factor app and so in this view all I'm",
    "start": "1873109",
    "end": "1882169"
  },
  {
    "text": "really trying to highlight are what are all the different parts that come together right so 12 factor says you",
    "start": "1882169",
    "end": "1887570"
  },
  {
    "text": "need disposable processes you need pods as an example kubernetes so it's running that pod that's now coming online",
    "start": "1887570",
    "end": "1894049"
  },
  {
    "text": "I need configuration for how I want to specify credentials for the application so I have a secret that's mounted into",
    "start": "1894049",
    "end": "1900739"
  },
  {
    "text": "the pod I need to expose not only a network service for the admin console or",
    "start": "1900739",
    "end": "1906589"
  },
  {
    "text": "for applications but also a service for my Prometheus metrics so I've got two",
    "start": "1906589",
    "end": "1911659"
  },
  {
    "text": "services that are defined in this example I could disable one or more services if I chose right through the",
    "start": "1911659",
    "end": "1917239"
  },
  {
    "text": "options and ultimately it's running that stateful set right that controller which brings this particular pod online in a",
    "start": "1917239",
    "end": "1924259"
  },
  {
    "text": "particular way because this is a stateful workload so the punchline here",
    "start": "1924259",
    "end": "1929299"
  },
  {
    "text": "is simply that kubernetes by itself has already done a lot to bring the principles at 12 factor highlights in to",
    "start": "1929299",
    "end": "1936499"
  },
  {
    "text": "the way that you create applications and these principles apply to your 12 factor micro services and to other workloads",
    "start": "1936499",
    "end": "1943039"
  },
  {
    "text": "that you already have available as well one thing that I'll leave you with just",
    "start": "1943039",
    "end": "1948349"
  },
  {
    "start": "1945000",
    "end": "2020000"
  },
  {
    "text": "here if you're interested to learn more we actually have a free book that you can take a picture of the QR code",
    "start": "1948349",
    "end": "1953529"
  },
  {
    "text": "download it's just walking you through how to do each of these different things how to use helm charts as a way to run",
    "start": "1953529",
    "end": "1960409"
  },
  {
    "text": "middleware how you need to address the operational control plane around that how you need",
    "start": "1960409",
    "end": "1966169"
  },
  {
    "text": "to manage security services or use horizontal or vertical pods auto scaling",
    "start": "1966169",
    "end": "1971749"
  },
  {
    "text": "policies and it breaks down from the very basic concepts all the way through to what you need to do in the enterprise",
    "start": "1971749",
    "end": "1978019"
  },
  {
    "text": "and for folks that have been taking pictures throughout the talk if you want to copy the slides you can actually just",
    "start": "1978019",
    "end": "1983419"
  },
  {
    "text": "take a picture of the QR code and download a copy as well so with that and",
    "start": "1983419",
    "end": "1988549"
  },
  {
    "text": "in fact also in the book we'll be doing a book signing at the booth tomorrow the IBM booth I think at 2:30 2:30 the",
    "start": "1988549",
    "end": "1994339"
  },
  {
    "text": "real hard copies make at home if you want to do that or grab a digital copy and I think we're right",
    "start": "1994339",
    "end": "1999610"
  },
  {
    "text": "at time so maybe we'll take questions up here after if there's any comments or questions can I do one quick thing do",
    "start": "1999610",
    "end": "2005580"
  },
  {
    "text": "you guys mind if I take a quick selfie of the room is that okay can I is that if you uh all right can",
    "start": "2005580",
    "end": "2013110"
  },
  {
    "text": "you get in all right one two kubernetes all right thanks have a good one",
    "start": "2013110",
    "end": "2021980"
  }
]