[
  {
    "text": "hello everyone my name is Anand Francis uh so uh I'm here to give a talk on um",
    "start": "719",
    "end": "6640"
  },
  {
    "text": "Cod to deployment um so I have with me co-speaker Savita so with the with the exciting uh",
    "start": "6640",
    "end": "15040"
  },
  {
    "text": "growth of Dev tools uh now we have like enabling developer productivity uh by",
    "start": "15040",
    "end": "21519"
  },
  {
    "text": "enabling developers to fastly and securely deploy code to the production level so today we'll see an approach",
    "start": "21519",
    "end": "30039"
  },
  {
    "text": "where we are going to use a stack that is based on tekon pipelines as code and",
    "start": "30039",
    "end": "35399"
  },
  {
    "text": "ago CD as the deployment tool and see how this stack could be leveraged for",
    "start": "35399",
    "end": "41000"
  },
  {
    "text": "enabling uh ease of uh deployment from code to",
    "start": "41000",
    "end": "47079"
  },
  {
    "text": "production so I'll start with the introduction about myself uh I'm annand",
    "start": "47079",
    "end": "53359"
  },
  {
    "text": "Francis and I'm a principal software engineer at rat so I work in the ago CD",
    "start": "53359",
    "end": "58480"
  },
  {
    "text": "uh Community project so there we are uh working on uh improving the performance and the scalability aspects of ago",
    "start": "58480",
    "end": "65880"
  },
  {
    "text": "CD and I'll uh hand out the mic to Savita yep uh hello everyone uh welcome",
    "start": "65880",
    "end": "73000"
  },
  {
    "text": "to the session thanks for joining us uh so myself Savita so I also work for Red",
    "start": "73000",
    "end": "79400"
  },
  {
    "text": "Hat uh I do contribute to the project called tekon it's an upstream project so",
    "start": "79400",
    "end": "85479"
  },
  {
    "text": "there are multiple part of there in this tecton or so we we try to contribute",
    "start": "85479",
    "end": "91079"
  },
  {
    "text": "everywhere it is possible so you guys can reach out to us on slack Upstream we",
    "start": "91079",
    "end": "97079"
  },
  {
    "text": "we are even on kubernetes slack tekon K native and Twitter's",
    "start": "97079",
    "end": "103479"
  },
  {
    "text": "LinkedIn all right uh so this is the pretty much agenda we have it for today",
    "start": "103479",
    "end": "109799"
  },
  {
    "text": "so basically I will be covering like uh what is cloud native cicd a brief intro",
    "start": "109799",
    "end": "116079"
  },
  {
    "text": "and then introduct to the tecton so tekon has as I mentioned tekon is a a",
    "start": "116079",
    "end": "122159"
  },
  {
    "text": "big Aug it has multiple sub projects so in this particular session we I I we are",
    "start": "122159",
    "end": "129039"
  },
  {
    "text": "going to talk about the pipelin as code its overview how pipelin as code allow",
    "start": "129039",
    "end": "135400"
  },
  {
    "text": "us to do I mean allow us to achieve the best practices of security things to",
    "start": "135400",
    "end": "141480"
  },
  {
    "text": "achieve our cicd stuff and then uh some of the comparative study which we have",
    "start": "141480",
    "end": "147800"
  },
  {
    "text": "done in our day-to-day use cases I will be sharing that so and then I'll pretty",
    "start": "147800",
    "end": "153400"
  },
  {
    "text": "much talk about the tecton chains so tecton chains with this how can we able",
    "start": "153400",
    "end": "159239"
  },
  {
    "text": "to achieve like we how can we able to attest our workload I mean the cicd",
    "start": "159239",
    "end": "165040"
  },
  {
    "text": "workloads and then uh like uh then Anand will talk about the Argo cd part how",
    "start": "165040",
    "end": "171560"
  },
  {
    "text": "after the I mean how after the CI part how CD will uh come into uh play and how",
    "start": "171560",
    "end": "177599"
  },
  {
    "text": "we can achieve that using ago CD and then like uh image updat part where",
    "start": "177599",
    "end": "183640"
  },
  {
    "text": "like how dynamically changes can be deployed on the cluster and then finally we little bit talk about the policy",
    "start": "183640",
    "end": "190959"
  },
  {
    "text": "stuff like how we can ensure security can be achieved when we talk about the",
    "start": "190959",
    "end": "196519"
  },
  {
    "text": "end to end flow using uh six store policy controller today and then finally",
    "start": "196519",
    "end": "202280"
  },
  {
    "text": "we have a demo so we have recorded our demo because we have multiple components",
    "start": "202280",
    "end": "207920"
  },
  {
    "text": "involved here so that's the reason and finally we can take questions if time",
    "start": "207920",
    "end": "213760"
  },
  {
    "text": "permits all right uh let's move on so we all of us know about cicd right so I",
    "start": "213760",
    "end": "220319"
  },
  {
    "text": "will not go in deep about that but I am interested mostly on cloud native",
    "start": "220319",
    "end": "226760"
  },
  {
    "text": "cicd so when when we call it when we call our cicd as a cloud native it's",
    "start": "226760",
    "end": "233239"
  },
  {
    "text": "basically it oys the principles like running your workloads using containers or the orchestrators if if that c if",
    "start": "233239",
    "end": "241879"
  },
  {
    "text": "that tool follows like Auto scaling part if it doesn't require any particular team to handle something or like it",
    "start": "241879",
    "end": "249560"
  },
  {
    "text": "obviously develops principles so if if if the tool or the platform or if the",
    "start": "249560",
    "end": "255200"
  },
  {
    "text": "product if oys all these things then we can simply say it as a cloud native",
    "start": "255200",
    "end": "261160"
  },
  {
    "text": "cicd so uh I mean it uh it just a comparison like uh in traditional cicd",
    "start": "261160",
    "end": "268400"
  },
  {
    "text": "right it's most designed for virtual machines but Cloud native is for orchestration stuff and for traditional",
    "start": "268400",
    "end": "275960"
  },
  {
    "text": "we require a a team of Ops to maintain uh to handle the Autos scaling and all",
    "start": "275960",
    "end": "283280"
  },
  {
    "text": "those things but Cloud native as it's on on orchestrators so all these things we",
    "start": "283280",
    "end": "289720"
  },
  {
    "text": "can get in built so a couple of things I have listed over there now when we say",
    "start": "289720",
    "end": "296120"
  },
  {
    "text": "Tech why we took this tecton because this OB all the principles of uh CI",
    "start": "296120",
    "end": "302360"
  },
  {
    "text": "Cloud native cicd and it is popularly used why because it's very native to",
    "start": "302360",
    "end": "308560"
  },
  {
    "text": "kubernetes that's the one of the major reasons why people are moving towards",
    "start": "308560",
    "end": "313600"
  },
  {
    "text": "cicd for tekon so again it's a open source project completely uh it's uh major",
    "start": "313600",
    "end": "320360"
  },
  {
    "text": "focus is for building CSD for kubernetes platforms uh it is still now under CD",
    "start": "320360",
    "end": "327560"
  },
  {
    "text": "Foundation okay uh so as I mentioned like Cloud native Cloud native cicd tekon also follows like",
    "start": "327560",
    "end": "334720"
  },
  {
    "text": "built for kubernetes scaling is on demand and even tecton uh follows like",
    "start": "334720",
    "end": "340240"
  },
  {
    "text": "securing your end to end Pipeline with multiple uh plugins with that and it is",
    "start": "340240",
    "end": "346400"
  },
  {
    "text": "very flexible you can plug in plug out anywhere you want because it has multiple reusable entities in",
    "start": "346400",
    "end": "354280"
  },
  {
    "text": "that okay so uh every project have its own core concept right so like in",
    "start": "354280",
    "end": "360360"
  },
  {
    "text": "kubernetes we have like pod deployment and service if you know these three",
    "start": "360360",
    "end": "365759"
  },
  {
    "text": "concept we can able to write our own application and deploy it on the kubernetes similarly in teon we we have",
    "start": "365759",
    "end": "373720"
  },
  {
    "text": "the same core uh Concepts and uh that that have listed here so basically we",
    "start": "373720",
    "end": "379720"
  },
  {
    "text": "call it as a step task pipeline task run pipeline run so instead of uh expl I",
    "start": "379720",
    "end": "386520"
  },
  {
    "text": "mean instead of talking this way so I will be talking in a diagrammatical way",
    "start": "386520",
    "end": "391560"
  },
  {
    "text": "just to picture out like how things are clued together uh yep uh step in kubernetes we",
    "start": "391560",
    "end": "399360"
  },
  {
    "text": "have a c as a basic unit or basic entity right so in teon uh we have a step uh is",
    "start": "399360",
    "end": "406520"
  },
  {
    "text": "a basic entity right steps are nothing but the uh part of task or part of the",
    "start": "406520",
    "end": "413000"
  },
  {
    "text": "things get it done it it runs as a container so if you want to compare with kubernetes step is similar to container",
    "start": "413000",
    "end": "420680"
  },
  {
    "text": "we can say so I I I'll let you know like why I have divided the steps into multiple pieces in a different different",
    "start": "420680",
    "end": "428360"
  },
  {
    "text": "state so in uh in in kubernetes we it is",
    "start": "428360",
    "end": "433440"
  },
  {
    "text": "not the best practices to run P its own right we always run with the deployment",
    "start": "433440",
    "end": "439560"
  },
  {
    "text": "so similarly in teon the steps cannot be run individually it has to be clubbed in",
    "start": "439560",
    "end": "445479"
  },
  {
    "text": "a entity called task so the task is nothing but the template which can have",
    "start": "445479",
    "end": "452160"
  },
  {
    "text": "one or more than steps so uh so the the there can be",
    "start": "452160",
    "end": "458039"
  },
  {
    "text": "multiple task which can do some particular stuff so now I I'll tell like why I have divided the task into three I",
    "start": "458039",
    "end": "466039"
  },
  {
    "text": "mean like one for cloning the part one for building and one for deploy it's because tecton has this uh visibility of",
    "start": "466039",
    "end": "475159"
  },
  {
    "text": "reusability Bas what I want to say is like let's suppose if we have a scenario where I want to do build for golang",
    "start": "475159",
    "end": "482159"
  },
  {
    "text": "build for Java so the building step will change building scenario will change but",
    "start": "482159",
    "end": "487800"
  },
  {
    "text": "the cloning part and deploying part will be same so in tekon if we divide that",
    "start": "487800",
    "end": "493280"
  },
  {
    "text": "scenario as a task like cloning can be written as a one task building one task",
    "start": "493280",
    "end": "499240"
  },
  {
    "text": "and deploying so this way what will happen we can reuse this task where whenever we want and this entire uh",
    "start": "499240",
    "end": "507080"
  },
  {
    "text": "things can be clued together in a entity called pipeline so again it's a template",
    "start": "507080",
    "end": "513399"
  },
  {
    "text": "uh which which can have more than one task and this pip writing it in a in",
    "start": "513399",
    "end": "519120"
  },
  {
    "text": "this pipeline template help us to manage which task to run when and which task to run after execution of the previous task",
    "start": "519120",
    "end": "526600"
  },
  {
    "text": "and all those things and in order to run this template we have a uh resource",
    "start": "526600",
    "end": "533080"
  },
  {
    "text": "called pipeline run so basically the pipeline task they are just a static",
    "start": "533080",
    "end": "538320"
  },
  {
    "text": "template the don't run anything in order to instantiate those template we have a",
    "start": "538320",
    "end": "544040"
  },
  {
    "text": "resource called pipeline Run Okay moving on so as I mentioned I",
    "start": "544040",
    "end": "549640"
  },
  {
    "text": "will be talking about the pipelines as code today so it's because when we say ton right it has",
    "start": "549640",
    "end": "556399"
  },
  {
    "text": "multiple things but we there is a project called pipeline as code what it",
    "start": "556399",
    "end": "562040"
  },
  {
    "text": "does is like it's it's basically an opiated CI I means its focus is to",
    "start": "562040",
    "end": "567320"
  },
  {
    "text": "automate everything so that you user when he sends a pull request or push request right CI should run",
    "start": "567320",
    "end": "574480"
  },
  {
    "text": "automatically and finally he he he should get some status on the uh source code management that is the goal of the",
    "start": "574480",
    "end": "581680"
  },
  {
    "text": "pipeline as code today so it it is feasible for different different source",
    "start": "581680",
    "end": "587640"
  },
  {
    "text": "code managements it can be integrated with GitHub gitlab bit bucket and even",
    "start": "587640",
    "end": "593279"
  },
  {
    "text": "if if there is no source code management if you want to handle we have a incoming book way as well",
    "start": "593279",
    "end": "599760"
  },
  {
    "text": "so the some of the benefits is like it it follows the Version Control mechanism",
    "start": "599760",
    "end": "605519"
  },
  {
    "text": "it it it it helps us in the repeatability I mean like the same template we can use for multiple uh",
    "start": "605519",
    "end": "611240"
  },
  {
    "text": "GitHub repo so collaboration within the team can be handled very well with pipelin s code yes the major part of it",
    "start": "611240",
    "end": "619240"
  },
  {
    "text": "is automations I mean like one one flow should be completed with just few clicks",
    "start": "619240",
    "end": "626440"
  },
  {
    "text": "and then we have scalability this is like a inbuild feature because we are on container orchestrators and change",
    "start": "626440",
    "end": "633320"
  },
  {
    "text": "tracking because we are using source code managements here all right uh now moving on so",
    "start": "633320",
    "end": "640360"
  },
  {
    "text": "pipelines has code like how the template should be kept so basically pipel say",
    "start": "640360",
    "end": "645839"
  },
  {
    "text": "code always looks for a folder called do tecton inside your GitHub",
    "start": "645839",
    "end": "652200"
  },
  {
    "text": "repository so uh this is the comparative things we have done like with the GitHub",
    "start": "652200",
    "end": "657720"
  },
  {
    "text": "actions so We There are multiple uh Solutions in the market right I mean",
    "start": "657720",
    "end": "663360"
  },
  {
    "text": "like we have many things we can achieve but why I'm why I took GitHub actions",
    "start": "663360",
    "end": "668600"
  },
  {
    "text": "because before using I mean before starting with pipelines as code right in tekon we used to have this GitHub action",
    "start": "668600",
    "end": "675839"
  },
  {
    "text": "integrated with GitHub project and we used to write a workflow let's suppose creating the kind cluster running e2e",
    "start": "675839",
    "end": "682680"
  },
  {
    "text": "test and all those stuff but again that is only for GitHub it used to happen but again if I want to do for Gab I need to",
    "start": "682680",
    "end": "689399"
  },
  {
    "text": "go for another solution and all so that's where pipeline as code help us to",
    "start": "689399",
    "end": "694680"
  },
  {
    "text": "uh come out of that scenario where I can use one single platform for all the",
    "start": "694680",
    "end": "699839"
  },
  {
    "text": "cloud providers all right so just to give a brief like we have a g platform user",
    "start": "699839",
    "end": "706160"
  },
  {
    "text": "will send a pool request then the platform which does the action and",
    "start": "706160",
    "end": "711720"
  },
  {
    "text": "finally report the status back to your GitHub repo all right so some of the best",
    "start": "711720",
    "end": "718480"
  },
  {
    "text": "practices which CI can be hand with pipelines we can handle is like we can",
    "start": "718480",
    "end": "724240"
  },
  {
    "text": "we can very well cover the policy part we can handle the token generation from",
    "start": "724240",
    "end": "730120"
  },
  {
    "text": "private GitHub repository public repository even we have a controlling of",
    "start": "730120",
    "end": "735279"
  },
  {
    "text": "the uh request like who can send the pool request who can view who cannot do all those things of granular level can",
    "start": "735279",
    "end": "742680"
  },
  {
    "text": "be controlled here all right so tecton chains are used",
    "start": "742680",
    "end": "747760"
  },
  {
    "text": "because we are talking one of the policy controller today here and tecton chain",
    "start": "747760",
    "end": "753519"
  },
  {
    "text": "is the uh module in tecton or which actually does that part I mean signing",
    "start": "753519",
    "end": "759560"
  },
  {
    "text": "of attestation of the payload ATT signing of the image everything can be handled using tecton chains so it uses",
    "start": "759560",
    "end": "767079"
  },
  {
    "text": "this uh slsa level two which is like a Next Level from basic to this",
    "start": "767079",
    "end": "773120"
  },
  {
    "text": "thing and it always watches for the task run completion once it is is completed",
    "start": "773120",
    "end": "779720"
  },
  {
    "text": "if there is any images built by the task run it try to sign that image and that",
    "start": "779720",
    "end": "785959"
  },
  {
    "text": "signing signed image we can use later for deploying purpose all right so I will hand over to",
    "start": "785959",
    "end": "793639"
  },
  {
    "text": "Anan he'll talk about Argo",
    "start": "793639",
    "end": "797440"
  },
  {
    "text": "CD so um till now uh Savita covered the CI part so from code to image uh that is",
    "start": "799720",
    "end": "807040"
  },
  {
    "text": "being covered by the CI tool uh now we can look uh how we can take it to production so the tool that we are",
    "start": "807040",
    "end": "813600"
  },
  {
    "text": "going to explore here is ago CD here uh it's quite a popular tool that's used",
    "start": "813600",
    "end": "820720"
  },
  {
    "text": "widely uh it follows the gitops principles so what do we mean by gitops",
    "start": "820720",
    "end": "826199"
  },
  {
    "text": "here so there are like four Concepts principles that gitops has defined so",
    "start": "826199",
    "end": "832959"
  },
  {
    "text": "we'll basically start with a desired State being stored in a git repository so this this could be be any any git",
    "start": "832959",
    "end": "840759"
  },
  {
    "text": "implementation but the desired state has to be stored in the versioned storage uh",
    "start": "840759",
    "end": "847040"
  },
  {
    "text": "then we have the cluster State and an agent which observes that state the",
    "start": "847040",
    "end": "852320"
  },
  {
    "text": "agent not only observes the state but it Compares with what is defined uh in the",
    "start": "852320",
    "end": "857639"
  },
  {
    "text": "git repository as the desired State and constantly reconciles it so the three",
    "start": "857639",
    "end": "862880"
  },
  {
    "text": "principles revolves around this gitops engine that's being um implemented so",
    "start": "862880",
    "end": "869480"
  },
  {
    "text": "one is the declarative nature so gitops principle can be applied only for systems that support declarative nature",
    "start": "869480",
    "end": "876440"
  },
  {
    "text": "kuet is being a declarative system is suited well for this gitops principles",
    "start": "876440",
    "end": "883959"
  },
  {
    "text": "and uh next one is regarding the storage which is version and immutable that's why we choose the git",
    "start": "883959",
    "end": "890279"
  },
  {
    "text": "repository and then uh the last thing is about the agent so it's pulled automatically meaning that there is no",
    "start": "890279",
    "end": "896600"
  },
  {
    "text": "manual intervention so as soon as you you deploy the agent the agent starts looking for changes in the git",
    "start": "896600",
    "end": "903320"
  },
  {
    "text": "repository and starts uh deploying the Manifest and the last is the continuous reconcillation so any manual changes",
    "start": "903320",
    "end": "909759"
  },
  {
    "text": "that is done on the cluster State should be reverted and whatever is defined as the source of Truth in the git would be",
    "start": "909759",
    "end": "916680"
  },
  {
    "text": "applied on a on a continuous basis so there are like two popular implementations one is the ago CD and",
    "start": "916680",
    "end": "923560"
  },
  {
    "text": "the other is a flux CD which follows this um uh gitops uh principles",
    "start": "923560",
    "end": "930600"
  },
  {
    "text": "so uh this is a typical uh architecture for AGD so the core components uh is is",
    "start": "931440",
    "end": "939120"
  },
  {
    "text": "is described in the kubernetes uh block so we have the repository service that",
    "start": "939120",
    "end": "944920"
  },
  {
    "text": "does the interaction with the git repository so uh user creates an Argo",
    "start": "944920",
    "end": "950440"
  },
  {
    "text": "application wherein he tells where is the git repository located at and what",
    "start": "950440",
    "end": "955480"
  },
  {
    "text": "is the version that needs to be deployed at so the Repository takes care of taking the latest manifest from the git",
    "start": "955480",
    "end": "962839"
  },
  {
    "text": "repository and next we have the application controller which is the agent that does the continuous reconcilation part the rest of it is all",
    "start": "962839",
    "end": "971160"
  },
  {
    "text": "the supporting components the core components are the repository service and the application controller we have",
    "start": "971160",
    "end": "976240"
  },
  {
    "text": "the API server which interacts uh with which is used for interacting with the",
    "start": "976240",
    "end": "981440"
  },
  {
    "text": "UL UI and the CLI uh ago C supports deployment to",
    "start": "981440",
    "end": "986720"
  },
  {
    "text": "multiple clusters so there is a concept called destinations wherein you can have multiple destination and you can select",
    "start": "986720",
    "end": "993800"
  },
  {
    "text": "like which cluster you want to deploy a particular",
    "start": "993800",
    "end": "998680"
  },
  {
    "text": "manifest so the next uh tool that we are going to talk about is the AGD image",
    "start": "1000279",
    "end": "1005519"
  },
  {
    "text": "updator uh this is used for decoupling CI and CD so generally there will be",
    "start": "1005519",
    "end": "1012040"
  },
  {
    "text": "like two repositories one for the source code and the other for the storing the kubernetes Manifest so in order to",
    "start": "1012040",
    "end": "1019120"
  },
  {
    "text": "decouple this we are using the image updator so it's a controller which",
    "start": "1019120",
    "end": "1024400"
  },
  {
    "text": "checks the container registry if there are any latest images that are that are available and that could be deployed",
    "start": "1024400",
    "end": "1031280"
  },
  {
    "text": "onto the cluster and you can Define rules on what you think is the latest",
    "start": "1031280",
    "end": "1036520"
  },
  {
    "text": "and what should be being deployed so that way you don't have to maintain the",
    "start": "1036520",
    "end": "1041558"
  },
  {
    "text": "uh git uh repository which contains the kubernetes Manifest for every incremental image update that you're",
    "start": "1041559",
    "end": "1047760"
  },
  {
    "text": "doing so that is the advantage of going with this ago C image updator and then in ago in ago",
    "start": "1047760",
    "end": "1055080"
  },
  {
    "text": "application there is a concept called sync policy wherein you can define whether the uh sync should be done",
    "start": "1055080",
    "end": "1062080"
  },
  {
    "text": "automatically or manual so if you are doing automatic sync then there is no manual intervention so as soon as there",
    "start": "1062080",
    "end": "1068640"
  },
  {
    "text": "is an image available in the container registry that is latest that will be automatically applied if you're going",
    "start": "1068640",
    "end": "1075400"
  },
  {
    "text": "for a manual manual sync operation where you want to have have some kind of control on what's being deployed on the",
    "start": "1075400",
    "end": "1081320"
  },
  {
    "text": "cluster you can go for the manual approach wherein it uh wherein the ago CD image updator will tell there is an",
    "start": "1081320",
    "end": "1087440"
  },
  {
    "text": "image available here whether you want to pick it up or not so you have some control with by with the automatic sync",
    "start": "1087440",
    "end": "1094280"
  },
  {
    "text": "policy that is available in the Aro application so these are some of the",
    "start": "1094280",
    "end": "1099640"
  },
  {
    "text": "update strategies so how do we say that an image is latest and that is what we",
    "start": "1099640",
    "end": "1105280"
  },
  {
    "text": "want to be deployed so sare is like like the semantic versioning if you have like",
    "start": "1105280",
    "end": "1110840"
  },
  {
    "text": "X doy doz and you can Define like the latest is X doy so if there is an image",
    "start": "1110840",
    "end": "1116960"
  },
  {
    "text": "pushed with a tag with say like 1.2 and there is an image update available",
    "start": "1116960",
    "end": "1123000"
  },
  {
    "text": "saying that it's there is a word new version 1.3 that will be treated as a latest and the latest one is based on",
    "start": "1123000",
    "end": "1130039"
  },
  {
    "text": "the timestamp so whichever image was pushed most recently will be treated as",
    "start": "1130039",
    "end": "1135200"
  },
  {
    "text": "the latest image uh digest is is when you use like if you are using the latest tag there",
    "start": "1135200",
    "end": "1141559"
  },
  {
    "text": "could be like multiple uh images being pushed with the same tag but with different sh digest so if you want to",
    "start": "1141559",
    "end": "1148760"
  },
  {
    "text": "based I mean deploy the latest one based on the digest you can go for that option",
    "start": "1148760",
    "end": "1154919"
  },
  {
    "text": "the last one is name so that is used when you are um uh going for an tagging",
    "start": "1154919",
    "end": "1161600"
  },
  {
    "text": "mechanism which is based on dates date time stamp so you can choose the name",
    "start": "1161600",
    "end": "1166640"
  },
  {
    "text": "which will sort it uh as alphabetically and takes the latest",
    "start": "1166640",
    "end": "1172039"
  },
  {
    "text": "one so we have like two uh update methods from the ago CD image updator",
    "start": "1172880",
    "end": "1178400"
  },
  {
    "text": "one is you directly update the ago CID which is not a a persistent solution so",
    "start": "1178400",
    "end": "1185039"
  },
  {
    "text": "it is temporary if if there is any crash in ago C you will lose the changes done by the image updator the next option is",
    "start": "1185039",
    "end": "1192039"
  },
  {
    "text": "you are persisting that image update in the git itself so even if there is a crash of the ago CD when it comes back",
    "start": "1192039",
    "end": "1199600"
  },
  {
    "text": "it will know that there was an latest image update that was done and it will pick that",
    "start": "1199600",
    "end": "1206240"
  },
  {
    "text": "image okay so the last thing is about the uh uh six store uh so this is used",
    "start": "1206320",
    "end": "1212440"
  },
  {
    "text": "for um Sixt provides a set of tools that could be used for signing and verifying",
    "start": "1212440",
    "end": "1219200"
  },
  {
    "text": "the images so uh once we start pushing the images to The Container registry we",
    "start": "1219200",
    "end": "1224280"
  },
  {
    "text": "want to have some control on what is being deployed on the production cluster so the mechanism that we use is signing",
    "start": "1224280",
    "end": "1231640"
  },
  {
    "text": "and verifying so you sign the images on the CI part and verify the images during",
    "start": "1231640",
    "end": "1237039"
  },
  {
    "text": "deployment so that you know that what what what you have built is what is being deployed and not anything",
    "start": "1237039",
    "end": "1244600"
  },
  {
    "text": "else so these are some of the components that we have uh the first one is cosine",
    "start": "1244600",
    "end": "1249679"
  },
  {
    "text": "which is a CLI tool which is used for signing and verifying it uh Savita will cover this as part of the demo so where",
    "start": "1249679",
    "end": "1256880"
  },
  {
    "text": "we use the coign tool for signing in the CI uh process uh policy control is what",
    "start": "1256880",
    "end": "1264159"
  },
  {
    "text": "lives in the uh actual production clusters uh there you will verify",
    "start": "1264159",
    "end": "1269679"
  },
  {
    "text": "whether that image is signed uh the rest of uh the components are used for what is called as uh",
    "start": "1269679",
    "end": "1276640"
  },
  {
    "text": "keyless signing so if you don't want to manage your keys you can opt for this",
    "start": "1276640",
    "end": "1281760"
  },
  {
    "text": "approach wherein uh the the keys are managed by a central certificate Authority using an oidc connect so the",
    "start": "1281760",
    "end": "1289880"
  },
  {
    "text": "last one we'll not be covering it in the demo and we'll be using a key based uh authentic I mean image signing that will",
    "start": "1289880",
    "end": "1297039"
  },
  {
    "text": "be used for verifying the images during deployment okay I'll hand over to Savita",
    "start": "1297039",
    "end": "1303400"
  },
  {
    "text": "for the demo yeah this all right so in the demo part what",
    "start": "1303400",
    "end": "1311159"
  },
  {
    "text": "we are going to cover is like a user will send a I mean user will write a pipeline that pipeline basically contain",
    "start": "1311159",
    "end": "1318039"
  },
  {
    "text": "cloning the code storing it in the storage and we do some static check like linter w wet and all those things so",
    "start": "1318039",
    "end": "1325679"
  },
  {
    "text": "once that is done we will go for a build so in this build step we will build the image and push it to the registry so",
    "start": "1325679",
    "end": "1333039"
  },
  {
    "text": "this part we call it as a CI so once uh this is done we will set I mean the",
    "start": "1333039",
    "end": "1339799"
  },
  {
    "text": "deployment side that image will be used so before go and deploy we will do the",
    "start": "1339799",
    "end": "1344840"
  },
  {
    "text": "image verification whether it is signed by trusted one or not so if it is not",
    "start": "1344840",
    "end": "1351120"
  },
  {
    "text": "then it will straight over reject we won't go and deploy it if it is Success we will go and deploy in in a cluster",
    "start": "1351120",
    "end": "1358279"
  },
  {
    "text": "using Argo CD Now who has done the signing here right so that's where",
    "start": "1358279",
    "end": "1364120"
  },
  {
    "text": "tecton chains play uh role here I mean during the build process during the CI",
    "start": "1364120",
    "end": "1369480"
  },
  {
    "text": "step tecton chains controller will keep on monitoring when this build build task",
    "start": "1369480",
    "end": "1376240"
  },
  {
    "text": "gets completed once that is is done ton chains will look for that and do the",
    "start": "1376240",
    "end": "1381480"
  },
  {
    "text": "attestation and signing part uh I'll quickly show uh in the demo",
    "start": "1381480",
    "end": "1388279"
  },
  {
    "text": "side all right so so we have recorded because we are involving with multiple",
    "start": "1388279",
    "end": "1394600"
  },
  {
    "text": "components and all so yeah uh before that let",
    "start": "1394600",
    "end": "1400400"
  },
  {
    "text": "me so yeah uh this is the project repo we just written so for time constraint",
    "start": "1400400",
    "end": "1406520"
  },
  {
    "text": "we have already installed p pipeline chains dashboard pipelines as code and",
    "start": "1406520",
    "end": "1411799"
  },
  {
    "text": "we have given the instruction here like how to set up and everything is created even for the Argo CD so if I go and show",
    "start": "1411799",
    "end": "1419840"
  },
  {
    "text": "get pods yeah uh teon",
    "start": "1419840",
    "end": "1426399"
  },
  {
    "text": "pipelines so all the parts are up and running so when uh but uh thing is like",
    "start": "1426760",
    "end": "1433600"
  },
  {
    "text": "tecton involve multiple projects right but to deploy each and every everything manually it is very hectic so instead of",
    "start": "1433600",
    "end": "1441320"
  },
  {
    "text": "that we can go with operator where with the help of operator we can installed",
    "start": "1441320",
    "end": "1446600"
  },
  {
    "text": "every tecton modules in a single release with a single release",
    "start": "1446600",
    "end": "1451720"
  },
  {
    "text": "AML okay so once that is done right so I'll go back to recorded",
    "start": "1451720",
    "end": "1457960"
  },
  {
    "text": "demo yeah so it is initially installed everything right so operator so now what",
    "start": "1457960",
    "end": "1465039"
  },
  {
    "text": "I'm doing I will be uh ra in a pull request so you can see here in this repo",
    "start": "1465039",
    "end": "1471799"
  },
  {
    "text": "I'm doing I'm sending a pull request with some uh with with some invalid or",
    "start": "1471799",
    "end": "1477559"
  },
  {
    "text": "some some mistake by doing some mistake so once after doing the pull request",
    "start": "1477559",
    "end": "1483520"
  },
  {
    "text": "right the CI will get triggered so I'll show here okay initially when I did this",
    "start": "1483520",
    "end": "1489640"
  },
  {
    "text": "right pull request let me go little yeah initially CI did not trigger right CI did not",
    "start": "1489640",
    "end": "1496320"
  },
  {
    "text": "trigger because it it because it because in cluster we don't have anything to",
    "start": "1496320",
    "end": "1502640"
  },
  {
    "text": "tell like okay from where the request is coming and all those things so I'll quickly go back to this repo where I",
    "start": "1502640",
    "end": "1509559"
  },
  {
    "text": "will show like this is the documentation right the repository CR this is the",
    "start": "1509559",
    "end": "1516360"
  },
  {
    "text": "custom resource we have in pipeline s code so which actually tells okay when",
    "start": "1516360",
    "end": "1523000"
  },
  {
    "text": "this repos custom resource will be installed in the cluster and whenever a pull request will will be sent from that",
    "start": "1523000",
    "end": "1530320"
  },
  {
    "text": "project right so somebody should be there to let controller know that okay event is coming from that project so",
    "start": "1530320",
    "end": "1537240"
  },
  {
    "text": "that's where this repository uh helps him to do that and we will specify what",
    "start": "1537240",
    "end": "1542600"
  },
  {
    "text": "URL I mean from which URL the event is coming so that was uh that was missing",
    "start": "1542600",
    "end": "1549000"
  },
  {
    "text": "initially so that's where I have created the repository C CR so you can see here",
    "start": "1549000",
    "end": "1556200"
  },
  {
    "text": "uh yeah ini initially it was not there so I am creating the repository for this",
    "start": "1556200",
    "end": "1562559"
  },
  {
    "text": "Cube day India project right so once the repository is Success once it is get",
    "start": "1562559",
    "end": "1568240"
  },
  {
    "text": "created so what we can do we can go back to repo and I can so one way is like I",
    "start": "1568240",
    "end": "1574679"
  },
  {
    "text": "can close this PO request and reopen or else I can send a like retest test so it",
    "start": "1574679",
    "end": "1580320"
  },
  {
    "text": "will just go ahead and uh start the uh uh CI for",
    "start": "1580320",
    "end": "1585440"
  },
  {
    "text": "us so yeah you can see here the CI will start in a second so you can see that CI",
    "start": "1585440",
    "end": "1591919"
  },
  {
    "text": "started now I just wanted to cover one more thing here so as I mentioned te",
    "start": "1591919",
    "end": "1598600"
  },
  {
    "text": "pipon code always look for do tecton folder so in this do tecton folder I have kept two repository two yamal one",
    "start": "1598600",
    "end": "1606679"
  },
  {
    "text": "for pull request based one for push request so it means whenever pull",
    "start": "1606679",
    "end": "1612240"
  },
  {
    "text": "request comes to your repository right only this pipeline run will get triggered if push request other one so",
    "start": "1612240",
    "end": "1619279"
  },
  {
    "text": "how that can be distinguished that is through annotation this is one way and",
    "start": "1619279",
    "end": "1624799"
  },
  {
    "text": "another way is like we have a cell expression supported in pipeline run so I have specified clearly like okay run",
    "start": "1624799",
    "end": "1631559"
  },
  {
    "text": "this PR pipeline run if it is for pull request and always Focus for the Target",
    "start": "1631559",
    "end": "1637600"
  },
  {
    "text": "branch called Main and if we want to do for both pull request and push we can specify something like this and one more",
    "start": "1637600",
    "end": "1645159"
  },
  {
    "text": "thing I want to bring here about these task right I I don't have anything in my",
    "start": "1645159",
    "end": "1650440"
  },
  {
    "text": "cluster the installation of this task but when this this pipeline run uh",
    "start": "1650440",
    "end": "1655919"
  },
  {
    "text": "started right how this task will get resolved so Tech pipeline says code if",
    "start": "1655919",
    "end": "1662080"
  },
  {
    "text": "we specify task something like this it will try to download from this tecton",
    "start": "1662080",
    "end": "1667480"
  },
  {
    "text": "Hub so what is this tecton Hub so tecton Hub is a like kind of a registry for",
    "start": "1667480",
    "end": "1673399"
  },
  {
    "text": "Docker images similarly in tecton we have mult multiple reusable task that",
    "start": "1673399",
    "end": "1679279"
  },
  {
    "text": "can be used by multiple folks right so we hosted a hub where all the task can",
    "start": "1679279",
    "end": "1685880"
  },
  {
    "text": "be kept so by default if you don't specify any path and all it will try to download from The Hub but we have a",
    "start": "1685880",
    "end": "1692760"
  },
  {
    "text": "feasibility to specify from which location you want to download the task either it can be your private or either",
    "start": "1692760",
    "end": "1699640"
  },
  {
    "text": "it can be from your local cluster itself or either it can be from your another GitHub",
    "start": "1699640",
    "end": "1705919"
  },
  {
    "text": "repository right and and this is how the task can be written uh one task the",
    "start": "1705919",
    "end": "1711960"
  },
  {
    "text": "second task and the task reference I have just specified as a ref and just",
    "start": "1711960",
    "end": "1717960"
  },
  {
    "text": "wanted to mention one more thing like how do I ensure that the static I mean",
    "start": "1717960",
    "end": "1724519"
  },
  {
    "text": "uh linting should happen only after the cloning the code because obviously if I don't have any code where do I should do",
    "start": "1724519",
    "end": "1731519"
  },
  {
    "text": "the linting part so this run after is the one entity which which will help us",
    "start": "1731519",
    "end": "1738679"
  },
  {
    "text": "to uh like design our pipeline I mean which task to be run after which task so",
    "start": "1738679",
    "end": "1745679"
  },
  {
    "text": "this is the one entity I want to mention and we can specify input output resource using workspaces like how the data can",
    "start": "1745679",
    "end": "1752600"
  },
  {
    "text": "be shared whether it is a through workspace is nothing but you can assume like a volumes in",
    "start": "1752600",
    "end": "1757960"
  },
  {
    "text": "kubernetes all right so now going back the pull request uh it it is uh started",
    "start": "1757960",
    "end": "1765399"
  },
  {
    "text": "and we can easily view on that on dashboard the running of the pipe pipeline run and we can even see the",
    "start": "1765399",
    "end": "1772279"
  },
  {
    "text": "steps like how they are done and initially it will fail because I did some mistake while doing the pr right so",
    "start": "1772279",
    "end": "1779279"
  },
  {
    "text": "even we can see the logs of that like why it has failed it is because I have not handled the error so what I'm going",
    "start": "1779279",
    "end": "1785679"
  },
  {
    "text": "to do now is like I'll just go and edit this okay so before that I just want to mention that I as I mentioned pipelin as",
    "start": "1785679",
    "end": "1793159"
  },
  {
    "text": "code help us to report the status back to the GitHub right so this is how it",
    "start": "1793159",
    "end": "1798200"
  },
  {
    "text": "looks like so why it is failed what is the reason and how many steps got exit",
    "start": "1798200",
    "end": "1804840"
  },
  {
    "text": "uh sorry task got executed successfully and how many not and the reason for the",
    "start": "1804840",
    "end": "1810000"
  },
  {
    "text": "failure also we can easily view here like what was the reason all right so now I will just go",
    "start": "1810000",
    "end": "1816360"
  },
  {
    "text": "back and uh edit the file right I will edit the file to correct the mistake",
    "start": "1816360",
    "end": "1822519"
  },
  {
    "text": "which I have done and I will rep push the changes so once I do rep push uh rep",
    "start": "1822519",
    "end": "1828399"
  },
  {
    "text": "push the changes again my pipeline run will get triggered so this time CI will",
    "start": "1828399",
    "end": "1833600"
  },
  {
    "text": "be success so once C is Success let's let's merge this pull request right so",
    "start": "1833600",
    "end": "1840399"
  },
  {
    "text": "after merging this pull request the next pipeline uh next uh pipeline run should",
    "start": "1840399",
    "end": "1847279"
  },
  {
    "text": "start which is nothing but the push request related pipeline run so that one",
    "start": "1847279",
    "end": "1852480"
  },
  {
    "text": "how can I check so if you see here I can go back to uh the Repository there",
    "start": "1852480",
    "end": "1857760"
  },
  {
    "text": "should be some indication for me to see whether pipeline CI started or not right",
    "start": "1857760",
    "end": "1863679"
  },
  {
    "text": "so you can see that this this one it shows that one in progress check so that",
    "start": "1863679",
    "end": "1868919"
  },
  {
    "text": "indicates that CI is started and it is running okay so let me quickly show that",
    "start": "1868919",
    "end": "1876760"
  },
  {
    "text": "uh steps yeah uh sorry yeah okay so this is how the after the push request CI",
    "start": "1876760",
    "end": "1883399"
  },
  {
    "text": "started so it has done the fetch repository success successfully Y and uh",
    "start": "1883399",
    "end": "1888960"
  },
  {
    "text": "building of the image is Success everything is success and finally in the right URL step I have push this image to",
    "start": "1888960",
    "end": "1897120"
  },
  {
    "text": "uh this uh repository now how do I verify that like okay it has pushed it",
    "start": "1897120",
    "end": "1902760"
  },
  {
    "text": "has signed and it has attested so I can go back to my quer registry and I can",
    "start": "1902760",
    "end": "1908120"
  },
  {
    "text": "see okay few seconds ago the uh image is pushed and this indicates okay so this",
    "start": "1908120",
    "end": "1914240"
  },
  {
    "text": "indicates that it is signed by cosine using tecton chains all right",
    "start": "1914240",
    "end": "1921440"
  },
  {
    "text": "so yeah uh okay I'll uh quickly uh I mean quickly walk through like once uh",
    "start": "1921440",
    "end": "1929039"
  },
  {
    "text": "that signed image is done we can do it on the Argo cd part uh let me quickly",
    "start": "1929039",
    "end": "1935919"
  },
  {
    "text": "show that right so when we when we deploy right initially it will fail for me",
    "start": "1935919",
    "end": "1942960"
  },
  {
    "text": "because I have given the wrong public key I have passed the wrong public key but when I updated with the correct key",
    "start": "1942960",
    "end": "1950080"
  },
  {
    "text": "in the cluster policy which is like six store policy so it it works for me in",
    "start": "1950080",
    "end": "1956240"
  },
  {
    "text": "the correct way and I should able to see so I'm doing the edit of the policy",
    "start": "1956240",
    "end": "1961279"
  },
  {
    "text": "cluster image policy and I'm editing the public key with the right one so once I",
    "start": "1961279",
    "end": "1968200"
  },
  {
    "text": "have edited the public key as I as anant mentioned that Argo CD always looks for",
    "start": "1968200",
    "end": "1974480"
  },
  {
    "text": "the uh changes from the GitHub reposit or the cluster changes and try to sync",
    "start": "1974480",
    "end": "1979760"
  },
  {
    "text": "with that so that's where you can see like within a few fraction of seconds it",
    "start": "1979760",
    "end": "1985000"
  },
  {
    "text": "tries to take this updated changes and it will make a sync okay it means it it would able to see the right public key",
    "start": "1985000",
    "end": "1993080"
  },
  {
    "text": "and it has started creating the uh application all right",
    "start": "1993080",
    "end": "2000519"
  },
  {
    "text": "so yep yeah uh do you want to say something yeah yeah uh a quick uh update",
    "start": "2000519",
    "end": "2008600"
  },
  {
    "text": "like how you can hand like multiple environments so you can use the same Argo image updator but with different",
    "start": "2008600",
    "end": "2016080"
  },
  {
    "text": "image TXS like the first one will always is an integration environment looking for the master builds the next one is",
    "start": "2016080",
    "end": "2023399"
  },
  {
    "text": "like a candidate build which you want to promote to staging and the last one is the final released build image so you",
    "start": "2023399",
    "end": "2029760"
  },
  {
    "text": "can have like different tags and use Argo image updated to do the automatic",
    "start": "2029760",
    "end": "2035960"
  },
  {
    "text": "deployment yeah thanks everyone and uh this QR code is for the developer. rat.com where",
    "start": "2035960",
    "end": "2043399"
  },
  {
    "text": "there are like lot of resources to understand all the developer tools maintained by reddad uh yeah thanks for",
    "start": "2043399",
    "end": "2051520"
  },
  {
    "text": "your patient listening thanks thank you",
    "start": "2051520",
    "end": "2056200"
  }
]